command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3955979	File	data/converged/CVE-2011-4930_htcondor/src_condor_startd.V6_winreg.windows.cpp								
ANR	3955980	ClassDef	_WinPerf_QueryResult	36:8:1270:1610							
ANR	3955981	DeclStmt									
ANR	3955982	Decl							DWORD	DWORD	idObject
ANR	3955983	DeclStmt									
ANR	3955984	Decl							DWORD	DWORD	cbAlloc
ANR	3955985	DeclStmt									
ANR	3955986	Decl							const WinPerf_Data	const WinPerf_Data *	pdata1
ANR	3955987	DeclStmt									
ANR	3955988	Decl							const WinPerf_Data	const WinPerf_Data *	pdata2
ANR	3955989	DeclStmt									
ANR	3955990	Decl							_WinPerf_QueryResult	_WinPerf_QueryResult	WinPerf_QueryResult
ANR	3955991	ClassDef	WinPerf_Query	47:0:1774:2222							
ANR	3955992	DeclStmt									
ANR	3955993	Decl							DWORD	DWORD	idKey
ANR	3955994	DeclStmt									
ANR	3955995	Decl							DWORD	DWORD	idCounter
ANR	3955996	DeclStmt									
ANR	3955997	Decl							DWORD	DWORD [ 6 ]	idAlt
ANR	3955998	DeclStmt									
ANR	3955999	Decl							DWORD	DWORD	idInst
ANR	3956000	DeclStmt									
ANR	3956001	Decl							int	int	ixInst
ANR	3956002	DeclStmt									
ANR	3956003	Decl							int	int	cchInst
ANR	3956004	ClassDef	YourString	65:0:2441:2658							
ANR	3956005	Function	YourString	68:2:2472:2493							
ANR	3956006	FunctionDef	YourString ()		3956005	0					
ANR	3956007	CompoundStatement		68:22:2492:2493	3956005	0					
ANR	3956008	Identifier	YourString		3956005	1					
ANR	3956009	ParameterList			3956005	2					
ANR	3956010	CFGEntryNode	ENTRY		3956005		True				
ANR	3956011	CFGExitNode	EXIT		3956005		True				
ANR	3956012	Function	YourString	69:2:2497:2535							
ANR	3956013	FunctionDef	YourString (const char * str)		3956012	1					
ANR	3956014	CompoundStatement		69:39:2534:2535	3956012	0					
ANR	3956015	Identifier	YourString		3956012	1					
ANR	3956016	ParameterList	const char * str		3956012	2					
ANR	3956017	Parameter	const char * str	69:13:2508:2522	3956012	0	True				
ANR	3956018	ParameterType	const char *		3956012	0					
ANR	3956019	Identifier	str		3956012	1					
ANR	3956020	CFGEntryNode	ENTRY		3956012		True				
ANR	3956021	CFGExitNode	EXIT		3956012		True				
ANR	3956022	Symbol	str		3956012						
ANR	3956023	Function	operator ==	70:2:2539:2613							
ANR	3956024	FunctionDef	operator == (const YourString & rhs)		3956023	2					
ANR	3956025	CompoundStatement		70:41:2578:2613	3956023	0					
ANR	3956026	ReturnStatement	"return ( lstrcmpi ( s , rhs . s ) == 0 ) ;"	70:1:2580:2611	3956023	0	True				
ANR	3956027	EqualityExpression	"lstrcmpi ( s , rhs . s ) == 0"		3956023	0		==			
ANR	3956028	CallExpression	"lstrcmpi ( s , rhs . s )"		3956023	0					
ANR	3956029	Callee	lstrcmpi		3956023	0					
ANR	3956030	Identifier	lstrcmpi		3956023	0					
ANR	3956031	ArgumentList	s		3956023	1					
ANR	3956032	Argument	s		3956023	0					
ANR	3956033	Identifier	s		3956023	0					
ANR	3956034	Argument	rhs . s		3956023	1					
ANR	3956035	MemberAccess	rhs . s		3956023	0					
ANR	3956036	Identifier	rhs		3956023	0					
ANR	3956037	Identifier	s		3956023	1					
ANR	3956038	PrimaryExpression	0		3956023	1					
ANR	3956039	ReturnType	bool		3956023	1					
ANR	3956040	Identifier	operator ==		3956023	2					
ANR	3956041	ParameterList	const YourString & rhs		3956023	3					
ANR	3956042	Parameter	const YourString & rhs	70:18:2555:2575	3956023	0	True				
ANR	3956043	ParameterType	const YourString &		3956023	0					
ANR	3956044	Identifier	rhs		3956023	1					
ANR	3956045	CFGEntryNode	ENTRY		3956023		True				
ANR	3956046	CFGExitNode	EXIT		3956023		True				
ANR	3956047	Symbol	s		3956023						
ANR	3956048	Symbol	lstrcmpi		3956023						
ANR	3956049	Symbol	rhs		3956023						
ANR	3956050	Symbol	rhs . s		3956023						
ANR	3956051	DeclStmt									
ANR	3956052	Decl							const char	const char *	s
ANR	3956053	Function	parse_hive_prefix	92:0:3439:4353							
ANR	3956054	FunctionDef	"parse_hive_prefix (const char * psz , int cch , int * pixPrefixSep)"		3956053	0					
ANR	3956055	CompoundStatement		93:0:3509:4353	3956053	0					
ANR	3956056	IdentifierDeclStatement	HKEY hkey = NULL ;	94:1:3512:3528	3956053	0	True				
ANR	3956057	IdentifierDecl	hkey = NULL		3956053	0					
ANR	3956058	IdentifierDeclType	HKEY		3956053	0					
ANR	3956059	Identifier	hkey		3956053	1					
ANR	3956060	AssignmentExpression	hkey = NULL		3956053	2		=			
ANR	3956061	Identifier	NULL		3956053	0					
ANR	3956062	Identifier	NULL		3956053	1					
ANR	3956063	IdentifierDeclStatement	char ach [ 5 ] = { 0 } ;	95:1:3531:3548	3956053	1	True				
ANR	3956064	IdentifierDecl	ach [ 5 ] = { 0 }		3956053	0					
ANR	3956065	IdentifierDeclType	char [ 5 ]		3956053	0					
ANR	3956066	Identifier	ach		3956053	1					
ANR	3956067	PrimaryExpression	5		3956053	2					
ANR	3956068	AssignmentExpression	ach [ 5 ] = { 0 }		3956053	3		=			
ANR	3956069	Identifier	ach		3956053	0					
ANR	3956070	InitializerList	0		3956053	1					
ANR	3956071	PrimaryExpression	0		3956053	0					
ANR	3956072	ForStatement	for ( int ii = 0 ; ii <= cch && ii < NUM_ELEMENTS ( ach ) ; ++ ii )		3956053	2					
ANR	3956073	ForInit	int ii = 0 ;	96:6:3556:3566	3956053	0	True				
ANR	3956074	IdentifierDeclStatement	int ii = 0 ;		3956053	0					
ANR	3956075	IdentifierDecl	ii = 0		3956053	0					
ANR	3956076	IdentifierDeclType	int		3956053	0					
ANR	3956077	Identifier	ii		3956053	1					
ANR	3956078	AssignmentExpression	ii = 0		3956053	2		=			
ANR	3956079	Identifier	ii		3956053	0					
ANR	3956080	PrimaryExpression	0		3956053	1					
ANR	3956081	Condition	ii <= cch && ii < NUM_ELEMENTS ( ach )	96:18:3568:3602	3956053	1	True				
ANR	3956082	AndExpression	ii <= cch && ii < NUM_ELEMENTS ( ach )		3956053	0		&&			
ANR	3956083	RelationalExpression	ii <= cch		3956053	0		<=			
ANR	3956084	Identifier	ii		3956053	0					
ANR	3956085	Identifier	cch		3956053	1					
ANR	3956086	RelationalExpression	ii < NUM_ELEMENTS ( ach )		3956053	1		<			
ANR	3956087	Identifier	ii		3956053	0					
ANR	3956088	CallExpression	NUM_ELEMENTS ( ach )		3956053	1					
ANR	3956089	Callee	NUM_ELEMENTS		3956053	0					
ANR	3956090	Identifier	NUM_ELEMENTS		3956053	0					
ANR	3956091	ArgumentList	ach		3956053	1					
ANR	3956092	Argument	ach		3956053	0					
ANR	3956093	Identifier	ach		3956053	0					
ANR	3956094	UnaryExpression	++ ii	96:55:3605:3608	3956053	2	True				
ANR	3956095	IncDec	++		3956053	0					
ANR	3956096	Identifier	ii		3956053	1					
ANR	3956097	CompoundStatement		5:1:102:102	3956053	3					
ANR	3956098	IfStatement	if ( psz [ ii ] == '\\\\' || psz [ ii ] == '\\0' )		3956053	0					
ANR	3956099	Condition	psz [ ii ] == '\\\\' || psz [ ii ] == '\\0'	98:6:3620:3676	3956053	0	True				
ANR	3956100	OrExpression	psz [ ii ] == '\\\\' || psz [ ii ] == '\\0'		3956053	0		||			
ANR	3956101	EqualityExpression	psz [ ii ] == '\\\\'		3956053	0		==			
ANR	3956102	ArrayIndexing	psz [ ii ]		3956053	0					
ANR	3956103	Identifier	psz		3956053	0					
ANR	3956104	Identifier	ii		3956053	1					
ANR	3956105	PrimaryExpression	'\\\\'		3956053	1					
ANR	3956106	EqualityExpression	psz [ ii ] == '\\0'		3956053	1		==			
ANR	3956107	ArrayIndexing	psz [ ii ]		3956053	0					
ANR	3956108	Identifier	psz		3956053	0					
ANR	3956109	Identifier	ii		3956053	1					
ANR	3956110	PrimaryExpression	'\\0'		3956053	1					
ANR	3956111	CompoundStatement		23:3:554:583	3956053	1					
ANR	3956112	Statement	static	100:3:3686:3691	3956053	0	True				
ANR	3956113	Statement	const	100:10:3693:3697	3956053	1	True				
ANR	3956114	ClassDefStatement	struct { long id ; HKEY key ; }	100:16:3699:3738	3956053	2	True				
ANR	3956115	Statement	aMap	103:5:3740:3743	3956053	3	True				
ANR	3956116	Statement	[	103:9:3744:3744	3956053	4	True				
ANR	3956117	Statement	]	103:10:3745:3745	3956053	5	True				
ANR	3956118	Statement	=	103:12:3747:3747	3956053	6	True				
ANR	3956119	CompoundStatement		11:14:239:239	3956053	7					
ANR	3956120	Statement	HKLM	104:5:3756:3759	3956053	0	True				
ANR	3956121	Statement	","	104:10:3761:3761	3956053	1	True				
ANR	3956122	Statement	HKEY_LOCAL_MACHINE	104:12:3763:3780	3956053	2	True				
ANR	3956123	Statement	","	104:30:3781:3781	3956053	3	True				
ANR	3956124	Statement	HKCC	105:5:3788:3791	3956053	4	True				
ANR	3956125	Statement	","	105:10:3793:3793	3956053	5	True				
ANR	3956126	Statement	HKEY_CURRENT_CONFIG	105:12:3795:3813	3956053	6	True				
ANR	3956127	Statement	","	105:31:3814:3814	3956053	7	True				
ANR	3956128	Statement	HKCR	106:5:3821:3824	3956053	8	True				
ANR	3956129	Statement	","	106:10:3826:3826	3956053	9	True				
ANR	3956130	Statement	HKEY_CLASSES_ROOT	106:12:3828:3844	3956053	10	True				
ANR	3956131	Statement	","	106:29:3845:3845	3956053	11	True				
ANR	3956132	Statement	HKCU	107:5:3852:3855	3956053	12	True				
ANR	3956133	Statement	","	107:10:3857:3857	3956053	13	True				
ANR	3956134	Statement	HKEY_CURRENT_USER	107:12:3859:3875	3956053	14	True				
ANR	3956135	Statement	","	107:29:3876:3876	3956053	15	True				
ANR	3956136	Statement	HKU	108:5:3883:3885	3956053	16	True				
ANR	3956137	Statement	0	108:9:3887:3887	3956053	17	True				
ANR	3956138	Statement	","	108:11:3889:3889	3956053	18	True				
ANR	3956139	Statement	HKEY_USERS	108:12:3890:3899	3956053	19	True				
ANR	3956140	Statement	","	108:22:3900:3900	3956053	20	True				
ANR	3956141	Statement	HKPD	109:5:3907:3910	3956053	21	True				
ANR	3956142	Statement	","	109:10:3912:3912	3956053	22	True				
ANR	3956143	Statement	HKEY_PERFORMANCE_DATA	109:12:3914:3934	3956053	23	True				
ANR	3956144	Statement	","	109:33:3935:3935	3956053	24	True				
ANR	3956145	ExpressionStatement		113:4:4058:4058	3956053	8	True				
ANR	3956146	IdentifierDeclStatement	long id = htonl ( * ( long * ) & ach ) ;	115:3:4064:4093	3956053	9	True				
ANR	3956147	IdentifierDecl	id = htonl ( * ( long * ) & ach )		3956053	0					
ANR	3956148	IdentifierDeclType	long		3956053	0					
ANR	3956149	Identifier	id		3956053	1					
ANR	3956150	AssignmentExpression	id = htonl ( * ( long * ) & ach )		3956053	2		=			
ANR	3956151	Identifier	id		3956053	0					
ANR	3956152	CallExpression	htonl ( * ( long * ) & ach )		3956053	1					
ANR	3956153	Callee	htonl		3956053	0					
ANR	3956154	Identifier	htonl		3956053	0					
ANR	3956155	ArgumentList	* ( long * ) & ach		3956053	1					
ANR	3956156	Argument	* ( long * ) & ach		3956053	0					
ANR	3956157	UnaryOperationExpression	* ( long * ) & ach		3956053	0					
ANR	3956158	UnaryOperator	*		3956053	0					
ANR	3956159	CastExpression	( long * ) & ach		3956053	1					
ANR	3956160	CastTarget	long *		3956053	0					
ANR	3956161	UnaryOperationExpression	& ach		3956053	1					
ANR	3956162	UnaryOperator	&		3956053	0					
ANR	3956163	Identifier	ach		3956053	1					
ANR	3956164	ForStatement	for ( int ix = 0 ; ix < NUM_ELEMENTS ( aMap ) ; ++ ix )		3956053	10					
ANR	3956165	ForInit	int ix = 0 ;	116:8:4103:4113	3956053	0	True				
ANR	3956166	IdentifierDeclStatement	int ix = 0 ;		3956053	0					
ANR	3956167	IdentifierDecl	ix = 0		3956053	0					
ANR	3956168	IdentifierDeclType	int		3956053	0					
ANR	3956169	Identifier	ix		3956053	1					
ANR	3956170	AssignmentExpression	ix = 0		3956053	2		=			
ANR	3956171	Identifier	ix		3956053	0					
ANR	3956172	PrimaryExpression	0		3956053	1					
ANR	3956173	Condition	ix < NUM_ELEMENTS ( aMap )	116:20:4115:4137	3956053	1	True				
ANR	3956174	RelationalExpression	ix < NUM_ELEMENTS ( aMap )		3956053	0		<			
ANR	3956175	Identifier	ix		3956053	0					
ANR	3956176	CallExpression	NUM_ELEMENTS ( aMap )		3956053	1					
ANR	3956177	Callee	NUM_ELEMENTS		3956053	0					
ANR	3956178	Identifier	NUM_ELEMENTS		3956053	0					
ANR	3956179	ArgumentList	aMap		3956053	1					
ANR	3956180	Argument	aMap		3956053	0					
ANR	3956181	Identifier	aMap		3956053	0					
ANR	3956182	UnaryExpression	++ ix	116:45:4140:4143	3956053	2	True				
ANR	3956183	IncDec	++		3956053	0					
ANR	3956184	Identifier	ix		3956053	1					
ANR	3956185	CompoundStatement		25:3:639:639	3956053	3					
ANR	3956186	IfStatement	if ( id == aMap [ ix ] . id )		3956053	0					
ANR	3956187	Condition	id == aMap [ ix ] . id	118:8:4159:4175	3956053	0	True				
ANR	3956188	EqualityExpression	id == aMap [ ix ] . id		3956053	0		==			
ANR	3956189	Identifier	id		3956053	0					
ANR	3956190	MemberAccess	aMap [ ix ] . id		3956053	1					
ANR	3956191	ArrayIndexing	aMap [ ix ]		3956053	0					
ANR	3956192	Identifier	aMap		3956053	0					
ANR	3956193	Identifier	ix		3956053	1					
ANR	3956194	Identifier	id		3956053	1					
ANR	3956195	CompoundStatement		27:4:672:672	3956053	1					
ANR	3956196	ExpressionStatement	hkey = aMap [ ix ] . key	120:5:4189:4208	3956053	0	True				
ANR	3956197	AssignmentExpression	hkey = aMap [ ix ] . key		3956053	0		=			
ANR	3956198	Identifier	hkey		3956053	0					
ANR	3956199	MemberAccess	aMap [ ix ] . key		3956053	1					
ANR	3956200	ArrayIndexing	aMap [ ix ]		3956053	0					
ANR	3956201	Identifier	aMap		3956053	0					
ANR	3956202	Identifier	ix		3956053	1					
ANR	3956203	Identifier	key		3956053	1					
ANR	3956204	BreakStatement	break ;	121:5:4215:4220	3956053	1	True				
ANR	3956205	IfStatement	if ( hkey && pixPrefixSep )		3956053	11					
ANR	3956206	Condition	hkey && pixPrefixSep	125:7:4245:4264	3956053	0	True				
ANR	3956207	AndExpression	hkey && pixPrefixSep		3956053	0		&&			
ANR	3956208	Identifier	hkey		3956053	0					
ANR	3956209	Identifier	pixPrefixSep		3956053	1					
ANR	3956210	ExpressionStatement	* pixPrefixSep = ii	126:4:4271:4289	3956053	1	True				
ANR	3956211	AssignmentExpression	* pixPrefixSep = ii		3956053	0		=			
ANR	3956212	UnaryOperationExpression	* pixPrefixSep		3956053	0					
ANR	3956213	UnaryOperator	*		3956053	0					
ANR	3956214	Identifier	pixPrefixSep		3956053	1					
ANR	3956215	Identifier	ii		3956053	1					
ANR	3956216	BreakStatement	break ;	127:3:4294:4299	3956053	12	True				
ANR	3956217	ExpressionStatement	ach [ ii ] = toupper ( psz [ ii ] )	129:2:4307:4333	3956053	1	True				
ANR	3956218	AssignmentExpression	ach [ ii ] = toupper ( psz [ ii ] )		3956053	0		=			
ANR	3956219	ArrayIndexing	ach [ ii ]		3956053	0					
ANR	3956220	Identifier	ach		3956053	0					
ANR	3956221	Identifier	ii		3956053	1					
ANR	3956222	CallExpression	toupper ( psz [ ii ] )		3956053	1					
ANR	3956223	Callee	toupper		3956053	0					
ANR	3956224	Identifier	toupper		3956053	0					
ANR	3956225	ArgumentList	psz [ ii ]		3956053	1					
ANR	3956226	Argument	psz [ ii ]		3956053	0					
ANR	3956227	ArrayIndexing	psz [ ii ]		3956053	0					
ANR	3956228	Identifier	psz		3956053	0					
ANR	3956229	Identifier	ii		3956053	1					
ANR	3956230	ReturnStatement	return hkey ;	132:1:4340:4351	3956053	3	True				
ANR	3956231	Identifier	hkey		3956053	0					
ANR	3956232	ReturnType	HKEY		3956053	1					
ANR	3956233	Identifier	parse_hive_prefix		3956053	2					
ANR	3956234	ParameterList	"const char * psz , int cch , int * pixPrefixSep"		3956053	3					
ANR	3956235	Parameter	const char * psz	92:23:3462:3477	3956053	0	True				
ANR	3956236	ParameterType	const char *		3956053	0					
ANR	3956237	Identifier	psz		3956053	1					
ANR	3956238	Parameter	int cch	92:41:3480:3486	3956053	1	True				
ANR	3956239	ParameterType	int		3956053	0					
ANR	3956240	Identifier	cch		3956053	1					
ANR	3956241	Parameter	int * pixPrefixSep	92:50:3489:3506	3956053	2	True				
ANR	3956242	ParameterType	int *		3956053	0					
ANR	3956243	Identifier	pixPrefixSep		3956053	1					
ANR	3956244	CFGEntryNode	ENTRY		3956053		True				
ANR	3956245	CFGExitNode	EXIT		3956053		True				
ANR	3956246	Symbol	ii		3956053						
ANR	3956247	Symbol	* psz		3956053						
ANR	3956248	Symbol	* pixPrefixSep		3956053						
ANR	3956249	Symbol	NUM_ELEMENTS		3956053						
ANR	3956250	Symbol	NULL		3956053						
ANR	3956251	Symbol	* ii		3956053						
ANR	3956252	Symbol	* ( long * ) & ach		3956053						
ANR	3956253	Symbol	toupper		3956053						
ANR	3956254	Symbol	hkey		3956053						
ANR	3956255	Symbol	ach		3956053						
ANR	3956256	Symbol	aMap [ ix ] . id		3956053						
ANR	3956257	Symbol	cch		3956053						
ANR	3956258	Symbol	* aMap		3956053						
ANR	3956259	Symbol	& ach		3956053						
ANR	3956260	Symbol	htonl		3956053						
ANR	3956261	Symbol	ix		3956053						
ANR	3956262	Symbol	* ach		3956053						
ANR	3956263	Symbol	pixPrefixSep		3956053						
ANR	3956264	Symbol	psz		3956053						
ANR	3956265	Symbol	aMap		3956053						
ANR	3956266	Symbol	* ix		3956053						
ANR	3956267	Symbol	aMap [ ix ] . key		3956053						
ANR	3956268	Symbol	id		3956053						
ANR	3956269	Function	root_key_name	138:0:4445:4983							
ANR	3956270	FunctionDef	root_key_name (HKEY hroot)		3956269	0					
ANR	3956271	CompoundStatement		139:0:4491:4983	3956269	0					
ANR	3956272	Statement	static	140:1:4494:4499	3956269	0	True				
ANR	3956273	Statement	const	140:8:4501:4505	3956269	1	True				
ANR	3956274	ClassDefStatement	struct { const char * psz ; HKEY key ; }	140:14:4507:4549	3956269	2	True				
ANR	3956275	Statement	aMap	143:3:4551:4554	3956269	3	True				
ANR	3956276	Statement	[	143:7:4555:4555	3956269	4	True				
ANR	3956277	Statement	]	143:8:4556:4556	3956269	5	True				
ANR	3956278	Statement	=	143:10:4558:4558	3956269	6	True				
ANR	3956279	CompoundStatement		5:12:68:68	3956269	7					
ANR	3956280	Statement	"""HKLM"""	144:2:4564:4569	3956269	0	True				
ANR	3956281	Statement	","	144:8:4570:4570	3956269	1	True				
ANR	3956282	Statement	HKEY_LOCAL_MACHINE	144:10:4572:4589	3956269	2	True				
ANR	3956283	Statement	","	144:28:4590:4590	3956269	3	True				
ANR	3956284	Statement	"""HKCC"""	145:2:4594:4599	3956269	4	True				
ANR	3956285	Statement	","	145:8:4600:4600	3956269	5	True				
ANR	3956286	Statement	HKEY_CURRENT_CONFIG	145:10:4602:4620	3956269	6	True				
ANR	3956287	Statement	","	145:29:4621:4621	3956269	7	True				
ANR	3956288	Statement	"""HKCU"""	146:2:4625:4630	3956269	8	True				
ANR	3956289	Statement	","	146:8:4631:4631	3956269	9	True				
ANR	3956290	Statement	HKEY_CURRENT_USER	146:10:4633:4649	3956269	10	True				
ANR	3956291	Statement	","	146:27:4650:4650	3956269	11	True				
ANR	3956292	Statement	"""HKCR"""	147:2:4654:4659	3956269	12	True				
ANR	3956293	Statement	","	147:8:4660:4660	3956269	13	True				
ANR	3956294	Statement	HKEY_CLASSES_ROOT	147:10:4662:4678	3956269	14	True				
ANR	3956295	Statement	","	147:27:4679:4679	3956269	15	True				
ANR	3956296	Statement	"""HKU\\0"""	148:2:4683:4689	3956269	16	True				
ANR	3956297	Statement	","	148:9:4690:4690	3956269	17	True				
ANR	3956298	Statement	HKEY_USERS	148:11:4692:4701	3956269	18	True				
ANR	3956299	Statement	","	148:21:4702:4702	3956269	19	True				
ANR	3956300	Statement	"""HKPD"""	149:2:4706:4711	3956269	20	True				
ANR	3956301	Statement	","	149:8:4712:4712	3956269	21	True				
ANR	3956302	Statement	HKEY_PERFORMANCE_DATA	149:10:4714:4734	3956269	22	True				
ANR	3956303	Statement	","	149:31:4735:4735	3956269	23	True				
ANR	3956304	ExpressionStatement		153:2:4850:4850	3956269	8	True				
ANR	3956305	ForStatement	for ( int ix = 0 ; ix < NUM_ELEMENTS ( aMap ) ; ++ ix )		3956269	9					
ANR	3956306	ForInit	int ix = 0 ;	155:6:4859:4869	3956269	0	True				
ANR	3956307	IdentifierDeclStatement	int ix = 0 ;		3956269	0					
ANR	3956308	IdentifierDecl	ix = 0		3956269	0					
ANR	3956309	IdentifierDeclType	int		3956269	0					
ANR	3956310	Identifier	ix		3956269	1					
ANR	3956311	AssignmentExpression	ix = 0		3956269	2		=			
ANR	3956312	Identifier	ix		3956269	0					
ANR	3956313	PrimaryExpression	0		3956269	1					
ANR	3956314	Condition	ix < NUM_ELEMENTS ( aMap )	155:18:4871:4893	3956269	1	True				
ANR	3956315	RelationalExpression	ix < NUM_ELEMENTS ( aMap )		3956269	0		<			
ANR	3956316	Identifier	ix		3956269	0					
ANR	3956317	CallExpression	NUM_ELEMENTS ( aMap )		3956269	1					
ANR	3956318	Callee	NUM_ELEMENTS		3956269	0					
ANR	3956319	Identifier	NUM_ELEMENTS		3956269	0					
ANR	3956320	ArgumentList	aMap		3956269	1					
ANR	3956321	Argument	aMap		3956269	0					
ANR	3956322	Identifier	aMap		3956269	0					
ANR	3956323	UnaryExpression	++ ix	155:43:4896:4899	3956269	2	True				
ANR	3956324	IncDec	++		3956269	0					
ANR	3956325	Identifier	ix		3956269	1					
ANR	3956326	CompoundStatement		18:1:411:411	3956269	3					
ANR	3956327	IfStatement	if ( hroot == aMap [ ix ] . key )		3956269	0					
ANR	3956328	Condition	hroot == aMap [ ix ] . key	157:6:4911:4931	3956269	0	True				
ANR	3956329	EqualityExpression	hroot == aMap [ ix ] . key		3956269	0		==			
ANR	3956330	Identifier	hroot		3956269	0					
ANR	3956331	MemberAccess	aMap [ ix ] . key		3956269	1					
ANR	3956332	ArrayIndexing	aMap [ ix ]		3956269	0					
ANR	3956333	Identifier	aMap		3956269	0					
ANR	3956334	Identifier	ix		3956269	1					
ANR	3956335	Identifier	key		3956269	1					
ANR	3956336	CompoundStatement		20:2:444:444	3956269	1					
ANR	3956337	ReturnStatement	return aMap [ ix ] . psz ;	159:3:4941:4960	3956269	0	True				
ANR	3956338	MemberAccess	aMap [ ix ] . psz		3956269	0					
ANR	3956339	ArrayIndexing	aMap [ ix ]		3956269	0					
ANR	3956340	Identifier	aMap		3956269	0					
ANR	3956341	Identifier	ix		3956269	1					
ANR	3956342	Identifier	psz		3956269	1					
ANR	3956343	ReturnStatement	return NULL ;	162:1:4970:4981	3956269	10	True				
ANR	3956344	Identifier	NULL		3956269	0					
ANR	3956345	ReturnType	static const char *		3956269	1					
ANR	3956346	Identifier	root_key_name		3956269	2					
ANR	3956347	ParameterList	HKEY hroot		3956269	3					
ANR	3956348	Parameter	HKEY hroot	138:34:4479:4488	3956269	0	True				
ANR	3956349	ParameterType	HKEY		3956269	0					
ANR	3956350	Identifier	hroot		3956269	1					
ANR	3956351	CFGEntryNode	ENTRY		3956269		True				
ANR	3956352	CFGExitNode	EXIT		3956269		True				
ANR	3956353	Symbol	NUM_ELEMENTS		3956269						
ANR	3956354	Symbol	NULL		3956269						
ANR	3956355	Symbol	hroot		3956269						
ANR	3956356	Symbol	aMap		3956269						
ANR	3956357	Symbol	* ix		3956269						
ANR	3956358	Symbol	aMap [ ix ] . key		3956269						
ANR	3956359	Symbol	* aMap		3956269						
ANR	3956360	Symbol	aMap [ ix ] . psz		3956269						
ANR	3956361	Symbol	ix		3956269						
ANR	3956362	Function	GetLastErrMessage	169:0:5081:5602							
ANR	3956363	FunctionDef	"GetLastErrMessage (int err , char * szMsg , int cchMsg)"		3956362	0					
ANR	3956364	CompoundStatement		170:0:5154:5602	3956362	0					
ANR	3956365	IdentifierDeclStatement	"int cch = FormatMessage ( FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS , NULL , err , MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT ) , szMsg , cchMsg , NULL ) ;"	171:1:5157:5355	3956362	0	True				
ANR	3956366	IdentifierDecl	"cch = FormatMessage ( FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS , NULL , err , MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT ) , szMsg , cchMsg , NULL )"		3956362	0					
ANR	3956367	IdentifierDeclType	int		3956362	0					
ANR	3956368	Identifier	cch		3956362	1					
ANR	3956369	AssignmentExpression	"cch = FormatMessage ( FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS , NULL , err , MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT ) , szMsg , cchMsg , NULL )"		3956362	2		=			
ANR	3956370	Identifier	cch		3956362	0					
ANR	3956371	CallExpression	"FormatMessage ( FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS , NULL , err , MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT ) , szMsg , cchMsg , NULL )"		3956362	1					
ANR	3956372	Callee	FormatMessage		3956362	0					
ANR	3956373	Identifier	FormatMessage		3956362	0					
ANR	3956374	ArgumentList	FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS		3956362	1					
ANR	3956375	Argument	FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS		3956362	0					
ANR	3956376	InclusiveOrExpression	FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS		3956362	0		|			
ANR	3956377	Identifier	FORMAT_MESSAGE_FROM_SYSTEM		3956362	0					
ANR	3956378	Identifier	FORMAT_MESSAGE_IGNORE_INSERTS		3956362	1					
ANR	3956379	Argument	NULL		3956362	1					
ANR	3956380	Identifier	NULL		3956362	0					
ANR	3956381	Argument	err		3956362	2					
ANR	3956382	Identifier	err		3956362	0					
ANR	3956383	Argument	"MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT )"		3956362	3					
ANR	3956384	CallExpression	"MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT )"		3956362	0					
ANR	3956385	Callee	MAKELANGID		3956362	0					
ANR	3956386	Identifier	MAKELANGID		3956362	0					
ANR	3956387	ArgumentList	LANG_NEUTRAL		3956362	1					
ANR	3956388	Argument	LANG_NEUTRAL		3956362	0					
ANR	3956389	Identifier	LANG_NEUTRAL		3956362	0					
ANR	3956390	Argument	SUBLANG_DEFAULT		3956362	1					
ANR	3956391	Identifier	SUBLANG_DEFAULT		3956362	0					
ANR	3956392	Argument	szMsg		3956362	4					
ANR	3956393	Identifier	szMsg		3956362	0					
ANR	3956394	Argument	cchMsg		3956362	5					
ANR	3956395	Identifier	cchMsg		3956362	0					
ANR	3956396	Argument	NULL		3956362	6					
ANR	3956397	Identifier	NULL		3956362	0					
ANR	3956398	IfStatement	if ( cch > 0 )		3956362	1					
ANR	3956399	Condition	cch > 0	179:5:5362:5368	3956362	0	True				
ANR	3956400	RelationalExpression	cch > 0		3956362	0		>			
ANR	3956401	Identifier	cch		3956362	0					
ANR	3956402	PrimaryExpression	0		3956362	1					
ANR	3956403	CompoundStatement		11:1:217:217	3956362	1					
ANR	3956404	WhileStatement	while ( cch > 0 && ( szMsg [ cch - 1 ] == '\\r' || szMsg [ cch - 1 ] == '\\n' ) )		3956362	0					
ANR	3956405	Condition	cch > 0 && ( szMsg [ cch - 1 ] == '\\r' || szMsg [ cch - 1 ] == '\\n' )	183:9:5410:5466	3956362	0	True				
ANR	3956406	AndExpression	cch > 0 && ( szMsg [ cch - 1 ] == '\\r' || szMsg [ cch - 1 ] == '\\n' )		3956362	0		&&			
ANR	3956407	RelationalExpression	cch > 0		3956362	0		>			
ANR	3956408	Identifier	cch		3956362	0					
ANR	3956409	PrimaryExpression	0		3956362	1					
ANR	3956410	OrExpression	szMsg [ cch - 1 ] == '\\r' || szMsg [ cch - 1 ] == '\\n'		3956362	1		||			
ANR	3956411	EqualityExpression	szMsg [ cch - 1 ] == '\\r'		3956362	0		==			
ANR	3956412	ArrayIndexing	szMsg [ cch - 1 ]		3956362	0					
ANR	3956413	Identifier	szMsg		3956362	0					
ANR	3956414	AdditiveExpression	cch - 1		3956362	1		-			
ANR	3956415	Identifier	cch		3956362	0					
ANR	3956416	PrimaryExpression	1		3956362	1					
ANR	3956417	PrimaryExpression	'\\r'		3956362	1					
ANR	3956418	EqualityExpression	szMsg [ cch - 1 ] == '\\n'		3956362	1		==			
ANR	3956419	ArrayIndexing	szMsg [ cch - 1 ]		3956362	0					
ANR	3956420	Identifier	szMsg		3956362	0					
ANR	3956421	AdditiveExpression	cch - 1		3956362	1		-			
ANR	3956422	Identifier	cch		3956362	0					
ANR	3956423	PrimaryExpression	1		3956362	1					
ANR	3956424	PrimaryExpression	'\\n'		3956362	1					
ANR	3956425	ExpressionStatement	szMsg [ -- cch ] = 0	184:3:5472:5488	3956362	1	True				
ANR	3956426	AssignmentExpression	szMsg [ -- cch ] = 0		3956362	0		=			
ANR	3956427	ArrayIndexing	szMsg [ -- cch ]		3956362	0					
ANR	3956428	Identifier	szMsg		3956362	0					
ANR	3956429	UnaryExpression	-- cch		3956362	1					
ANR	3956430	IncDec	--		3956362	0					
ANR	3956431	Identifier	cch		3956362	1					
ANR	3956432	PrimaryExpression	0		3956362	1					
ANR	3956433	ElseStatement	else		3956362	0					
ANR	3956434	CompoundStatement		18:1:345:345	3956362	0					
ANR	3956435	ExpressionStatement	"wsprintf ( szMsg , ""0x%X"" , err )"	189:2:5553:5581	3956362	0	True				
ANR	3956436	CallExpression	"wsprintf ( szMsg , ""0x%X"" , err )"		3956362	0					
ANR	3956437	Callee	wsprintf		3956362	0					
ANR	3956438	Identifier	wsprintf		3956362	0					
ANR	3956439	ArgumentList	szMsg		3956362	1					
ANR	3956440	Argument	szMsg		3956362	0					
ANR	3956441	Identifier	szMsg		3956362	0					
ANR	3956442	Argument	"""0x%X"""		3956362	1					
ANR	3956443	PrimaryExpression	"""0x%X"""		3956362	0					
ANR	3956444	Argument	err		3956362	2					
ANR	3956445	Identifier	err		3956362	0					
ANR	3956446	ReturnStatement	return szMsg ;	192:1:5588:5600	3956362	2	True				
ANR	3956447	Identifier	szMsg		3956362	0					
ANR	3956448	ReturnType	static const char *		3956362	1					
ANR	3956449	Identifier	GetLastErrMessage		3956362	2					
ANR	3956450	ParameterList	"int err , char * szMsg , int cchMsg"		3956362	3					
ANR	3956451	Parameter	int err	169:38:5119:5125	3956362	0	True				
ANR	3956452	ParameterType	int		3956362	0					
ANR	3956453	Identifier	err		3956362	1					
ANR	3956454	Parameter	char * szMsg	169:47:5128:5139	3956362	1	True				
ANR	3956455	ParameterType	char *		3956362	0					
ANR	3956456	Identifier	szMsg		3956362	1					
ANR	3956457	Parameter	int cchMsg	169:61:5142:5151	3956362	2	True				
ANR	3956458	ParameterType	int		3956362	0					
ANR	3956459	Identifier	cchMsg		3956362	1					
ANR	3956460	CFGEntryNode	ENTRY		3956362		True				
ANR	3956461	CFGExitNode	EXIT		3956362		True				
ANR	3956462	Symbol	FormatMessage		3956362						
ANR	3956463	Symbol	NULL		3956362						
ANR	3956464	Symbol	FORMAT_MESSAGE_IGNORE_INSERTS		3956362						
ANR	3956465	Symbol	err		3956362						
ANR	3956466	Symbol	LANG_NEUTRAL		3956362						
ANR	3956467	Symbol	cch		3956362						
ANR	3956468	Symbol	cchMsg		3956362						
ANR	3956469	Symbol	* szMsg		3956362						
ANR	3956470	Symbol	* cch		3956362						
ANR	3956471	Symbol	MAKELANGID		3956362						
ANR	3956472	Symbol	szMsg		3956362						
ANR	3956473	Symbol	SUBLANG_DEFAULT		3956362						
ANR	3956474	Symbol	FORMAT_MESSAGE_FROM_SYSTEM		3956362						
ANR	3956475	Function	get_windows_reg_value	198:0:5684:13342							
ANR	3956476	FunctionDef	"get_windows_reg_value (const char * pszRegKey , const char * pszValueName , int options)"		3956475	0					
ANR	3956477	CompoundStatement		202:0:5801:13342	3956475	0					
ANR	3956478	IdentifierDeclStatement	char * value = NULL ;	203:1:5804:5823	3956475	0	True				
ANR	3956479	IdentifierDecl	* value = NULL		3956475	0					
ANR	3956480	IdentifierDeclType	char *		3956475	0					
ANR	3956481	Identifier	value		3956475	1					
ANR	3956482	AssignmentExpression	* value = NULL		3956475	2		=			
ANR	3956483	Identifier	NULL		3956475	0					
ANR	3956484	Identifier	NULL		3956475	1					
ANR	3956485	IdentifierDeclStatement	char * pszTemp = NULL ;	204:1:5863:5884	3956475	1	True				
ANR	3956486	IdentifierDecl	* pszTemp = NULL		3956475	0					
ANR	3956487	IdentifierDeclType	char *		3956475	0					
ANR	3956488	Identifier	pszTemp		3956475	1					
ANR	3956489	AssignmentExpression	* pszTemp = NULL		3956475	2		=			
ANR	3956490	Identifier	NULL		3956475	0					
ANR	3956491	Identifier	NULL		3956475	1					
ANR	3956492	IdentifierDeclStatement	int cch = lstrlen ( pszRegKey ) ;	205:1:5926:5954	3956475	2	True				
ANR	3956493	IdentifierDecl	cch = lstrlen ( pszRegKey )		3956475	0					
ANR	3956494	IdentifierDeclType	int		3956475	0					
ANR	3956495	Identifier	cch		3956475	1					
ANR	3956496	AssignmentExpression	cch = lstrlen ( pszRegKey )		3956475	2		=			
ANR	3956497	Identifier	cch		3956475	0					
ANR	3956498	CallExpression	lstrlen ( pszRegKey )		3956475	1					
ANR	3956499	Callee	lstrlen		3956475	0					
ANR	3956500	Identifier	lstrlen		3956475	0					
ANR	3956501	ArgumentList	pszRegKey		3956475	1					
ANR	3956502	Argument	pszRegKey		3956475	0					
ANR	3956503	Identifier	pszRegKey		3956475	0					
ANR	3956504	IdentifierDeclStatement	int ixStart = 0 ;	207:1:5958:5973	3956475	3	True				
ANR	3956505	IdentifierDecl	ixStart = 0		3956475	0					
ANR	3956506	IdentifierDeclType	int		3956475	0					
ANR	3956507	Identifier	ixStart		3956475	1					
ANR	3956508	AssignmentExpression	ixStart = 0		3956475	2		=			
ANR	3956509	Identifier	ixStart		3956475	0					
ANR	3956510	PrimaryExpression	0		3956475	1					
ANR	3956511	IdentifierDeclStatement	"HKEY hroot = parse_hive_prefix ( pszRegKey , cch , & ixStart ) ;"	208:1:5977:6033	3956475	4	True				
ANR	3956512	IdentifierDecl	"hroot = parse_hive_prefix ( pszRegKey , cch , & ixStart )"		3956475	0					
ANR	3956513	IdentifierDeclType	HKEY		3956475	0					
ANR	3956514	Identifier	hroot		3956475	1					
ANR	3956515	AssignmentExpression	"hroot = parse_hive_prefix ( pszRegKey , cch , & ixStart )"		3956475	2		=			
ANR	3956516	Identifier	hroot		3956475	0					
ANR	3956517	CallExpression	"parse_hive_prefix ( pszRegKey , cch , & ixStart )"		3956475	1					
ANR	3956518	Callee	parse_hive_prefix		3956475	0					
ANR	3956519	Identifier	parse_hive_prefix		3956475	0					
ANR	3956520	ArgumentList	pszRegKey		3956475	1					
ANR	3956521	Argument	pszRegKey		3956475	0					
ANR	3956522	Identifier	pszRegKey		3956475	0					
ANR	3956523	Argument	cch		3956475	1					
ANR	3956524	Identifier	cch		3956475	0					
ANR	3956525	Argument	& ixStart		3956475	2					
ANR	3956526	UnaryOperationExpression	& ixStart		3956475	0					
ANR	3956527	UnaryOperator	&		3956475	0					
ANR	3956528	Identifier	ixStart		3956475	1					
ANR	3956529	IfStatement	if ( hroot )		3956475	5					
ANR	3956530	Condition	hroot	209:5:6040:6044	3956475	0	True				
ANR	3956531	Identifier	hroot		3956475	0					
ANR	3956532	CompoundStatement		9:1:246:246	3956475	1					
ANR	3956533	ExpressionStatement	pszRegKey += ixStart	211:2:6052:6072	3956475	0	True				
ANR	3956534	AssignmentExpression	pszRegKey += ixStart		3956475	0		+=			
ANR	3956535	Identifier	pszRegKey		3956475	0					
ANR	3956536	Identifier	ixStart		3956475	1					
ANR	3956537	IfStatement	if ( pszRegKey [ 0 ] == '\\\\' )		3956475	1					
ANR	3956538	Condition	pszRegKey [ 0 ] == '\\\\'	212:6:6080:6099	3956475	0	True				
ANR	3956539	EqualityExpression	pszRegKey [ 0 ] == '\\\\'		3956475	0		==			
ANR	3956540	ArrayIndexing	pszRegKey [ 0 ]		3956475	0					
ANR	3956541	Identifier	pszRegKey		3956475	0					
ANR	3956542	PrimaryExpression	0		3956475	1					
ANR	3956543	PrimaryExpression	'\\\\'		3956475	1					
ANR	3956544	ExpressionStatement	++ pszRegKey	213:3:6105:6116	3956475	1	True				
ANR	3956545	UnaryExpression	++ pszRegKey		3956475	0					
ANR	3956546	IncDec	++		3956475	0					
ANR	3956547	Identifier	pszRegKey		3956475	1					
ANR	3956548	IfStatement	if ( ! pszRegKey [ 0 ] && pszValueName )		3956475	2					
ANR	3956549	Condition	! pszRegKey [ 0 ] && pszValueName	217:7:6318:6347	3956475	0	True				
ANR	3956550	AndExpression	! pszRegKey [ 0 ] && pszValueName		3956475	0		&&			
ANR	3956551	UnaryOperationExpression	! pszRegKey [ 0 ]		3956475	0					
ANR	3956552	UnaryOperator	!		3956475	0					
ANR	3956553	ArrayIndexing	pszRegKey [ 0 ]		3956475	1					
ANR	3956554	Identifier	pszRegKey		3956475	0					
ANR	3956555	PrimaryExpression	0		3956475	1					
ANR	3956556	Identifier	pszValueName		3956475	1					
ANR	3956557	CompoundStatement		17:2:550:550	3956475	1					
ANR	3956558	ExpressionStatement	pszRegKey = pszValueName	219:3:6357:6381	3956475	0	True				
ANR	3956559	AssignmentExpression	pszRegKey = pszValueName		3956475	0		=			
ANR	3956560	Identifier	pszRegKey		3956475	0					
ANR	3956561	Identifier	pszValueName		3956475	1					
ANR	3956562	ExpressionStatement	"pszValueName = """""	220:3:6386:6403	3956475	1	True				
ANR	3956563	AssignmentExpression	"pszValueName = """""		3956475	0		=			
ANR	3956564	Identifier	pszValueName		3956475	0					
ANR	3956565	PrimaryExpression	""""""		3956475	1					
ANR	3956566	ElseStatement	else		3956475	0					
ANR	3956567	CompoundStatement		23:1:617:617	3956475	0					
ANR	3956568	ExpressionStatement	hroot = HKEY_LOCAL_MACHINE	225:2:6423:6449	3956475	0	True				
ANR	3956569	AssignmentExpression	hroot = HKEY_LOCAL_MACHINE		3956475	0		=			
ANR	3956570	Identifier	hroot		3956475	0					
ANR	3956571	Identifier	HKEY_LOCAL_MACHINE		3956475	1					
ANR	3956572	IfStatement	if ( HKEY_PERFORMANCE_DATA == hroot || HKEY_PERFORMANCE_TEXT == hroot || HKEY_PERFORMANCE_NLSTEXT == hroot )		3956475	6					
ANR	3956573	Condition	HKEY_PERFORMANCE_DATA == hroot || HKEY_PERFORMANCE_TEXT == hroot || HKEY_PERFORMANCE_NLSTEXT == hroot	228:5:6460:6564	3956475	0	True				
ANR	3956574	OrExpression	HKEY_PERFORMANCE_DATA == hroot || HKEY_PERFORMANCE_TEXT == hroot || HKEY_PERFORMANCE_NLSTEXT == hroot		3956475	0		||			
ANR	3956575	EqualityExpression	HKEY_PERFORMANCE_DATA == hroot		3956475	0		==			
ANR	3956576	Identifier	HKEY_PERFORMANCE_DATA		3956475	0					
ANR	3956577	Identifier	hroot		3956475	1					
ANR	3956578	OrExpression	HKEY_PERFORMANCE_TEXT == hroot || HKEY_PERFORMANCE_NLSTEXT == hroot		3956475	1		||			
ANR	3956579	EqualityExpression	HKEY_PERFORMANCE_TEXT == hroot		3956475	0		==			
ANR	3956580	Identifier	HKEY_PERFORMANCE_TEXT		3956475	0					
ANR	3956581	Identifier	hroot		3956475	1					
ANR	3956582	EqualityExpression	HKEY_PERFORMANCE_NLSTEXT == hroot		3956475	1		==			
ANR	3956583	Identifier	HKEY_PERFORMANCE_NLSTEXT		3956475	0					
ANR	3956584	Identifier	hroot		3956475	1					
ANR	3956585	CompoundStatement		30:1:766:766	3956475	1					
ANR	3956586	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""get_windows_reg_value() does not support \\""%s\\\\%s\\""\\n"" , root_key_name ( hroot ) , pszRegKey )"	232:2:6572:6693	3956475	0	True				
ANR	3956587	CallExpression	"dprintf ( D_FULLDEBUG , ""get_windows_reg_value() does not support \\""%s\\\\%s\\""\\n"" , root_key_name ( hroot ) , pszRegKey )"		3956475	0					
ANR	3956588	Callee	dprintf		3956475	0					
ANR	3956589	Identifier	dprintf		3956475	0					
ANR	3956590	ArgumentList	D_FULLDEBUG		3956475	1					
ANR	3956591	Argument	D_FULLDEBUG		3956475	0					
ANR	3956592	Identifier	D_FULLDEBUG		3956475	0					
ANR	3956593	Argument	"""get_windows_reg_value() does not support \\""%s\\\\%s\\""\\n"""		3956475	1					
ANR	3956594	PrimaryExpression	"""get_windows_reg_value() does not support \\""%s\\\\%s\\""\\n"""		3956475	0					
ANR	3956595	Argument	root_key_name ( hroot )		3956475	2					
ANR	3956596	CallExpression	root_key_name ( hroot )		3956475	0					
ANR	3956597	Callee	root_key_name		3956475	0					
ANR	3956598	Identifier	root_key_name		3956475	0					
ANR	3956599	ArgumentList	hroot		3956475	1					
ANR	3956600	Argument	hroot		3956475	0					
ANR	3956601	Identifier	hroot		3956475	0					
ANR	3956602	Argument	pszRegKey		3956475	3					
ANR	3956603	Identifier	pszRegKey		3956475	0					
ANR	3956604	ReturnStatement	return NULL ;	235:2:6697:6708	3956475	1	True				
ANR	3956605	Identifier	NULL		3956475	0					
ANR	3956606	IdentifierDeclStatement	int force = 0 ;	240:1:6789:6802	3956475	7	True				
ANR	3956607	IdentifierDecl	force = 0		3956475	0					
ANR	3956608	IdentifierDeclType	int		3956475	0					
ANR	3956609	Identifier	force		3956475	1					
ANR	3956610	AssignmentExpression	force = 0		3956475	2		=			
ANR	3956611	Identifier	force		3956475	0					
ANR	3956612	PrimaryExpression	0		3956475	1					
ANR	3956613	IfStatement	if ( ( options & WINREG_OPT_F_WOW32 ) || ( options & KEY_WOW64_32KEY ) )		3956475	8					
ANR	3956614	Condition	( options & WINREG_OPT_F_WOW32 ) || ( options & KEY_WOW64_32KEY )	241:5:6809:6869	3956475	0	True				
ANR	3956615	OrExpression	( options & WINREG_OPT_F_WOW32 ) || ( options & KEY_WOW64_32KEY )		3956475	0		||			
ANR	3956616	BitAndExpression	options & WINREG_OPT_F_WOW32		3956475	0		&			
ANR	3956617	Identifier	options		3956475	0					
ANR	3956618	Identifier	WINREG_OPT_F_WOW32		3956475	1					
ANR	3956619	BitAndExpression	options & KEY_WOW64_32KEY		3956475	1		&			
ANR	3956620	Identifier	options		3956475	0					
ANR	3956621	Identifier	KEY_WOW64_32KEY		3956475	1					
ANR	3956622	ExpressionStatement	force = KEY_WOW64_32KEY	242:2:6874:6897	3956475	1	True				
ANR	3956623	AssignmentExpression	force = KEY_WOW64_32KEY		3956475	0		=			
ANR	3956624	Identifier	force		3956475	0					
ANR	3956625	Identifier	KEY_WOW64_32KEY		3956475	1					
ANR	3956626	ElseStatement	else		3956475	0					
ANR	3956627	IfStatement	if ( ( options & WINREG_OPT_F_WOW64 ) || ( options & KEY_WOW64_64KEY ) )		3956475	0					
ANR	3956628	Condition	( options & WINREG_OPT_F_WOW64 ) || ( options & KEY_WOW64_64KEY )	243:10:6909:6969	3956475	0	True				
ANR	3956629	OrExpression	( options & WINREG_OPT_F_WOW64 ) || ( options & KEY_WOW64_64KEY )		3956475	0		||			
ANR	3956630	BitAndExpression	options & WINREG_OPT_F_WOW64		3956475	0		&			
ANR	3956631	Identifier	options		3956475	0					
ANR	3956632	Identifier	WINREG_OPT_F_WOW64		3956475	1					
ANR	3956633	BitAndExpression	options & KEY_WOW64_64KEY		3956475	1		&			
ANR	3956634	Identifier	options		3956475	0					
ANR	3956635	Identifier	KEY_WOW64_64KEY		3956475	1					
ANR	3956636	ExpressionStatement	force = KEY_WOW64_64KEY	244:2:6974:6997	3956475	1	True				
ANR	3956637	AssignmentExpression	force = KEY_WOW64_64KEY		3956475	0		=			
ANR	3956638	Identifier	force		3956475	0					
ANR	3956639	Identifier	KEY_WOW64_64KEY		3956475	1					
ANR	3956640	IdentifierDeclStatement	bool fAutoEnumValues = ( ( options & WINREG_OPT_F_AUTO_ENUM_VALUES ) != 0 ) ;	246:1:7001:7072	3956475	9	True				
ANR	3956641	IdentifierDecl	fAutoEnumValues = ( ( options & WINREG_OPT_F_AUTO_ENUM_VALUES ) != 0 )		3956475	0					
ANR	3956642	IdentifierDeclType	bool		3956475	0					
ANR	3956643	Identifier	fAutoEnumValues		3956475	1					
ANR	3956644	AssignmentExpression	fAutoEnumValues = ( ( options & WINREG_OPT_F_AUTO_ENUM_VALUES ) != 0 )		3956475	2		=			
ANR	3956645	Identifier	fAutoEnumValues		3956475	0					
ANR	3956646	EqualityExpression	( options & WINREG_OPT_F_AUTO_ENUM_VALUES ) != 0		3956475	1		!=			
ANR	3956647	BitAndExpression	options & WINREG_OPT_F_AUTO_ENUM_VALUES		3956475	0		&			
ANR	3956648	Identifier	options		3956475	0					
ANR	3956649	Identifier	WINREG_OPT_F_AUTO_ENUM_VALUES		3956475	1					
ANR	3956650	PrimaryExpression	0		3956475	1					
ANR	3956651	IdentifierDeclStatement	bool fEnumSubkeys = ( ( options & WINREG_OPT_F_ENUM_SUBKEYS ) != 0 ) ;	247:1:7075:7139	3956475	10	True				
ANR	3956652	IdentifierDecl	fEnumSubkeys = ( ( options & WINREG_OPT_F_ENUM_SUBKEYS ) != 0 )		3956475	0					
ANR	3956653	IdentifierDeclType	bool		3956475	0					
ANR	3956654	Identifier	fEnumSubkeys		3956475	1					
ANR	3956655	AssignmentExpression	fEnumSubkeys = ( ( options & WINREG_OPT_F_ENUM_SUBKEYS ) != 0 )		3956475	2		=			
ANR	3956656	Identifier	fEnumSubkeys		3956475	0					
ANR	3956657	EqualityExpression	( options & WINREG_OPT_F_ENUM_SUBKEYS ) != 0		3956475	1		!=			
ANR	3956658	BitAndExpression	options & WINREG_OPT_F_ENUM_SUBKEYS		3956475	0		&			
ANR	3956659	Identifier	options		3956475	0					
ANR	3956660	Identifier	WINREG_OPT_F_ENUM_SUBKEYS		3956475	1					
ANR	3956661	PrimaryExpression	0		3956475	1					
ANR	3956662	IdentifierDeclStatement	bool fEnumValues = ( ( options & WINREG_OPT_F_ENUM_VALUES ) != 0 ) ;	248:1:7142:7204	3956475	11	True				
ANR	3956663	IdentifierDecl	fEnumValues = ( ( options & WINREG_OPT_F_ENUM_VALUES ) != 0 )		3956475	0					
ANR	3956664	IdentifierDeclType	bool		3956475	0					
ANR	3956665	Identifier	fEnumValues		3956475	1					
ANR	3956666	AssignmentExpression	fEnumValues = ( ( options & WINREG_OPT_F_ENUM_VALUES ) != 0 )		3956475	2		=			
ANR	3956667	Identifier	fEnumValues		3956475	0					
ANR	3956668	EqualityExpression	( options & WINREG_OPT_F_ENUM_VALUES ) != 0		3956475	1		!=			
ANR	3956669	BitAndExpression	options & WINREG_OPT_F_ENUM_VALUES		3956475	0		&			
ANR	3956670	Identifier	options		3956475	0					
ANR	3956671	Identifier	WINREG_OPT_F_ENUM_VALUES		3956475	1					
ANR	3956672	PrimaryExpression	0		3956475	1					
ANR	3956673	IdentifierDeclStatement	HKEY hkey = NULL ;	252:1:7237:7253	3956475	12	True				
ANR	3956674	IdentifierDecl	hkey = NULL		3956475	0					
ANR	3956675	IdentifierDeclType	HKEY		3956475	0					
ANR	3956676	Identifier	hkey		3956475	1					
ANR	3956677	AssignmentExpression	hkey = NULL		3956475	2		=			
ANR	3956678	Identifier	NULL		3956475	0					
ANR	3956679	Identifier	NULL		3956475	1					
ANR	3956680	IdentifierDeclStatement	"LONG lres = RegOpenKeyEx ( hroot , pszRegKey , 0 , KEY_READ | force , & hkey ) ;"	253:1:7256:7326	3956475	13	True				
ANR	3956681	IdentifierDecl	"lres = RegOpenKeyEx ( hroot , pszRegKey , 0 , KEY_READ | force , & hkey )"		3956475	0					
ANR	3956682	IdentifierDeclType	LONG		3956475	0					
ANR	3956683	Identifier	lres		3956475	1					
ANR	3956684	AssignmentExpression	"lres = RegOpenKeyEx ( hroot , pszRegKey , 0 , KEY_READ | force , & hkey )"		3956475	2		=			
ANR	3956685	Identifier	lres		3956475	0					
ANR	3956686	CallExpression	"RegOpenKeyEx ( hroot , pszRegKey , 0 , KEY_READ | force , & hkey )"		3956475	1					
ANR	3956687	Callee	RegOpenKeyEx		3956475	0					
ANR	3956688	Identifier	RegOpenKeyEx		3956475	0					
ANR	3956689	ArgumentList	hroot		3956475	1					
ANR	3956690	Argument	hroot		3956475	0					
ANR	3956691	Identifier	hroot		3956475	0					
ANR	3956692	Argument	pszRegKey		3956475	1					
ANR	3956693	Identifier	pszRegKey		3956475	0					
ANR	3956694	Argument	0		3956475	2					
ANR	3956695	PrimaryExpression	0		3956475	0					
ANR	3956696	Argument	KEY_READ | force		3956475	3					
ANR	3956697	InclusiveOrExpression	KEY_READ | force		3956475	0		|			
ANR	3956698	Identifier	KEY_READ		3956475	0					
ANR	3956699	Identifier	force		3956475	1					
ANR	3956700	Argument	& hkey		3956475	4					
ANR	3956701	UnaryOperationExpression	& hkey		3956475	0					
ANR	3956702	UnaryOperator	&		3956475	0					
ANR	3956703	Identifier	hkey		3956475	1					
ANR	3956704	IfStatement	if ( ( ERROR_FILE_NOT_FOUND == lres ) && ! pszValueName )		3956475	14					
ANR	3956705	Condition	( ERROR_FILE_NOT_FOUND == lres ) && ! pszValueName	260:5:7628:7675	3956475	0	True				
ANR	3956706	AndExpression	( ERROR_FILE_NOT_FOUND == lres ) && ! pszValueName		3956475	0		&&			
ANR	3956707	EqualityExpression	ERROR_FILE_NOT_FOUND == lres		3956475	0		==			
ANR	3956708	Identifier	ERROR_FILE_NOT_FOUND		3956475	0					
ANR	3956709	Identifier	lres		3956475	1					
ANR	3956710	UnaryOperationExpression	! pszValueName		3956475	1					
ANR	3956711	UnaryOperator	!		3956475	0					
ANR	3956712	Identifier	pszValueName		3956475	1					
ANR	3956713	CompoundStatement		62:2:1958:1997	3956475	1					
ANR	3956714	ExpressionStatement	pszTemp = strdup ( pszRegKey )	262:2:7683:7710	3956475	0	True				
ANR	3956715	AssignmentExpression	pszTemp = strdup ( pszRegKey )		3956475	0		=			
ANR	3956716	Identifier	pszTemp		3956475	0					
ANR	3956717	CallExpression	strdup ( pszRegKey )		3956475	1					
ANR	3956718	Callee	strdup		3956475	0					
ANR	3956719	Identifier	strdup		3956475	0					
ANR	3956720	ArgumentList	pszRegKey		3956475	1					
ANR	3956721	Argument	pszRegKey		3956475	0					
ANR	3956722	Identifier	pszRegKey		3956475	0					
ANR	3956723	IdentifierDeclStatement	"char * pszName = strrchr ( pszTemp , '\\\\' ) ;"	263:2:7760:7799	3956475	1	True				
ANR	3956724	IdentifierDecl	"* pszName = strrchr ( pszTemp , '\\\\' )"		3956475	0					
ANR	3956725	IdentifierDeclType	char *		3956475	0					
ANR	3956726	Identifier	pszName		3956475	1					
ANR	3956727	AssignmentExpression	"* pszName = strrchr ( pszTemp , '\\\\' )"		3956475	2		=			
ANR	3956728	Identifier	pszName		3956475	0					
ANR	3956729	CallExpression	"strrchr ( pszTemp , '\\\\' )"		3956475	1					
ANR	3956730	Callee	strrchr		3956475	0					
ANR	3956731	Identifier	strrchr		3956475	0					
ANR	3956732	ArgumentList	pszTemp		3956475	1					
ANR	3956733	Argument	pszTemp		3956475	0					
ANR	3956734	Identifier	pszTemp		3956475	0					
ANR	3956735	Argument	'\\\\'		3956475	1					
ANR	3956736	PrimaryExpression	'\\\\'		3956475	0					
ANR	3956737	IfStatement	if ( pszName )		3956475	2					
ANR	3956738	Condition	pszName	264:6:7807:7813	3956475	0	True				
ANR	3956739	Identifier	pszName		3956475	0					
ANR	3956740	CompoundStatement		64:2:2016:2016	3956475	1					
ANR	3956741	ExpressionStatement	* pszName ++ = 0	266:11:7831:7845	3956475	0	True				
ANR	3956742	AssignmentExpression	* pszName ++ = 0		3956475	0		=			
ANR	3956743	UnaryOperationExpression	* pszName ++		3956475	0					
ANR	3956744	UnaryOperator	*		3956475	0					
ANR	3956745	PostIncDecOperationExpression	pszName ++		3956475	1					
ANR	3956746	Identifier	pszName		3956475	0					
ANR	3956747	IncDec	++		3956475	1					
ANR	3956748	PrimaryExpression	0		3956475	1					
ANR	3956749	ExpressionStatement	"lres = RegOpenKeyEx ( hroot , pszTemp , 0 , KEY_READ | force , & hkey )"	267:3:7850:7913	3956475	1	True				
ANR	3956750	AssignmentExpression	"lres = RegOpenKeyEx ( hroot , pszTemp , 0 , KEY_READ | force , & hkey )"		3956475	0		=			
ANR	3956751	Identifier	lres		3956475	0					
ANR	3956752	CallExpression	"RegOpenKeyEx ( hroot , pszTemp , 0 , KEY_READ | force , & hkey )"		3956475	1					
ANR	3956753	Callee	RegOpenKeyEx		3956475	0					
ANR	3956754	Identifier	RegOpenKeyEx		3956475	0					
ANR	3956755	ArgumentList	hroot		3956475	1					
ANR	3956756	Argument	hroot		3956475	0					
ANR	3956757	Identifier	hroot		3956475	0					
ANR	3956758	Argument	pszTemp		3956475	1					
ANR	3956759	Identifier	pszTemp		3956475	0					
ANR	3956760	Argument	0		3956475	2					
ANR	3956761	PrimaryExpression	0		3956475	0					
ANR	3956762	Argument	KEY_READ | force		3956475	3					
ANR	3956763	InclusiveOrExpression	KEY_READ | force		3956475	0		|			
ANR	3956764	Identifier	KEY_READ		3956475	0					
ANR	3956765	Identifier	force		3956475	1					
ANR	3956766	Argument	& hkey		3956475	4					
ANR	3956767	UnaryOperationExpression	& hkey		3956475	0					
ANR	3956768	UnaryOperator	&		3956475	0					
ANR	3956769	Identifier	hkey		3956475	1					
ANR	3956770	IfStatement	if ( ERROR_SUCCESS == lres )		3956475	2					
ANR	3956771	Condition	ERROR_SUCCESS == lres	268:7:7922:7942	3956475	0	True				
ANR	3956772	EqualityExpression	ERROR_SUCCESS == lres		3956475	0		==			
ANR	3956773	Identifier	ERROR_SUCCESS		3956475	0					
ANR	3956774	Identifier	lres		3956475	1					
ANR	3956775	CompoundStatement		68:3:2146:2146	3956475	1					
ANR	3956776	ExpressionStatement	pszRegKey = pszTemp	270:4:7954:7973	3956475	0	True				
ANR	3956777	AssignmentExpression	pszRegKey = pszTemp		3956475	0		=			
ANR	3956778	Identifier	pszRegKey		3956475	0					
ANR	3956779	Identifier	pszTemp		3956475	1					
ANR	3956780	ExpressionStatement	pszValueName = pszName	271:4:7979:8001	3956475	1	True				
ANR	3956781	AssignmentExpression	pszValueName = pszName		3956475	0		=			
ANR	3956782	Identifier	pszValueName		3956475	0					
ANR	3956783	Identifier	pszName		3956475	1					
ANR	3956784	IfStatement	if ( ERROR_SUCCESS != lres )		3956475	15					
ANR	3956785	Condition	ERROR_SUCCESS != lres	280:5:8177:8197	3956475	0	True				
ANR	3956786	EqualityExpression	ERROR_SUCCESS != lres		3956475	0		!=			
ANR	3956787	Identifier	ERROR_SUCCESS		3956475	0					
ANR	3956788	Identifier	lres		3956475	1					
ANR	3956789	CompoundStatement		80:1:2399:2399	3956475	1					
ANR	3956790	IfStatement	if ( ERROR_FILE_NOT_FOUND == lres )		3956475	0					
ANR	3956791	Condition	ERROR_FILE_NOT_FOUND == lres	282:6:8209:8236	3956475	0	True				
ANR	3956792	EqualityExpression	ERROR_FILE_NOT_FOUND == lres		3956475	0		==			
ANR	3956793	Identifier	ERROR_FILE_NOT_FOUND		3956475	0					
ANR	3956794	Identifier	lres		3956475	1					
ANR	3956795	CompoundStatement		82:2:2439:2439	3956475	1					
ANR	3956796	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""The Registry Key \\""%s\\\\%s\\"" does not exist\\n"" , root_key_name ( hroot ) , pszRegKey )"	285:3:8275:8388	3956475	0	True				
ANR	3956797	CallExpression	"dprintf ( D_FULLDEBUG , ""The Registry Key \\""%s\\\\%s\\"" does not exist\\n"" , root_key_name ( hroot ) , pszRegKey )"		3956475	0					
ANR	3956798	Callee	dprintf		3956475	0					
ANR	3956799	Identifier	dprintf		3956475	0					
ANR	3956800	ArgumentList	D_FULLDEBUG		3956475	1					
ANR	3956801	Argument	D_FULLDEBUG		3956475	0					
ANR	3956802	Identifier	D_FULLDEBUG		3956475	0					
ANR	3956803	Argument	"""The Registry Key \\""%s\\\\%s\\"" does not exist\\n"""		3956475	1					
ANR	3956804	PrimaryExpression	"""The Registry Key \\""%s\\\\%s\\"" does not exist\\n"""		3956475	0					
ANR	3956805	Argument	root_key_name ( hroot )		3956475	2					
ANR	3956806	CallExpression	root_key_name ( hroot )		3956475	0					
ANR	3956807	Callee	root_key_name		3956475	0					
ANR	3956808	Identifier	root_key_name		3956475	0					
ANR	3956809	ArgumentList	hroot		3956475	1					
ANR	3956810	Argument	hroot		3956475	0					
ANR	3956811	Identifier	hroot		3956475	0					
ANR	3956812	Argument	pszRegKey		3956475	3					
ANR	3956813	Identifier	pszRegKey		3956475	0					
ANR	3956814	ElseStatement	else		3956475	0					
ANR	3956815	CompoundStatement		91:3:2670:2690	3956475	0					
ANR	3956816	IdentifierDeclStatement	char szMsg [ MAX_PATH ] ;	292:3:8472:8492	3956475	0	True				
ANR	3956817	IdentifierDecl	szMsg [ MAX_PATH ]		3956475	0					
ANR	3956818	IdentifierDeclType	char [ MAX_PATH ]		3956475	0					
ANR	3956819	Identifier	szMsg		3956475	1					
ANR	3956820	Identifier	MAX_PATH		3956475	2					
ANR	3956821	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to open Registry Key \\""%s\\\\%s\\""\\nReason: %s\\n"" , root_key_name ( hroot ) , pszRegKey , GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) ) )"	293:3:8497:8683	3956475	1	True				
ANR	3956822	CallExpression	"dprintf ( D_ALWAYS , ""Failed to open Registry Key \\""%s\\\\%s\\""\\nReason: %s\\n"" , root_key_name ( hroot ) , pszRegKey , GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) ) )"		3956475	0					
ANR	3956823	Callee	dprintf		3956475	0					
ANR	3956824	Identifier	dprintf		3956475	0					
ANR	3956825	ArgumentList	D_ALWAYS		3956475	1					
ANR	3956826	Argument	D_ALWAYS		3956475	0					
ANR	3956827	Identifier	D_ALWAYS		3956475	0					
ANR	3956828	Argument	"""Failed to open Registry Key \\""%s\\\\%s\\""\\nReason: %s\\n"""		3956475	1					
ANR	3956829	PrimaryExpression	"""Failed to open Registry Key \\""%s\\\\%s\\""\\nReason: %s\\n"""		3956475	0					
ANR	3956830	Argument	root_key_name ( hroot )		3956475	2					
ANR	3956831	CallExpression	root_key_name ( hroot )		3956475	0					
ANR	3956832	Callee	root_key_name		3956475	0					
ANR	3956833	Identifier	root_key_name		3956475	0					
ANR	3956834	ArgumentList	hroot		3956475	1					
ANR	3956835	Argument	hroot		3956475	0					
ANR	3956836	Identifier	hroot		3956475	0					
ANR	3956837	Argument	pszRegKey		3956475	3					
ANR	3956838	Identifier	pszRegKey		3956475	0					
ANR	3956839	Argument	"GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) )"		3956475	4					
ANR	3956840	CallExpression	"GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) )"		3956475	0					
ANR	3956841	Callee	GetLastErrMessage		3956475	0					
ANR	3956842	Identifier	GetLastErrMessage		3956475	0					
ANR	3956843	ArgumentList	GetLastError ( )		3956475	1					
ANR	3956844	Argument	GetLastError ( )		3956475	0					
ANR	3956845	CallExpression	GetLastError ( )		3956475	0					
ANR	3956846	Callee	GetLastError		3956475	0					
ANR	3956847	Identifier	GetLastError		3956475	0					
ANR	3956848	ArgumentList			3956475	1					
ANR	3956849	Argument	szMsg		3956475	1					
ANR	3956850	Identifier	szMsg		3956475	0					
ANR	3956851	Argument	NUM_ELEMENTS ( szMsg )		3956475	2					
ANR	3956852	CallExpression	NUM_ELEMENTS ( szMsg )		3956475	0					
ANR	3956853	Callee	NUM_ELEMENTS		3956475	0					
ANR	3956854	Identifier	NUM_ELEMENTS		3956475	0					
ANR	3956855	ArgumentList	szMsg		3956475	1					
ANR	3956856	Argument	szMsg		3956475	0					
ANR	3956857	Identifier	szMsg		3956475	0					
ANR	3956858	ExpressionStatement	ASSERT ( ! value )	298:2:8691:8707	3956475	1	True				
ANR	3956859	CallExpression	ASSERT ( ! value )		3956475	0					
ANR	3956860	Callee	ASSERT		3956475	0					
ANR	3956861	Identifier	ASSERT		3956475	0					
ANR	3956862	ArgumentList	! value		3956475	1					
ANR	3956863	Argument	! value		3956475	0					
ANR	3956864	UnaryOperationExpression	! value		3956475	0					
ANR	3956865	UnaryOperator	!		3956475	0					
ANR	3956866	Identifier	value		3956475	1					
ANR	3956867	ElseStatement	else		3956475	0					
ANR	3956868	CompoundStatement		103:2:3027:3062	3956475	0					
ANR	3956869	IdentifierDeclStatement	ULARGE_INTEGER uli ;	302:2:8723:8741	3956475	0	True				
ANR	3956870	IdentifierDecl	uli		3956475	0					
ANR	3956871	IdentifierDeclType	ULARGE_INTEGER		3956475	0					
ANR	3956872	Identifier	uli		3956475	1					
ANR	3956873	IdentifierDeclStatement	"DWORD vtype = REG_SZ , cbData = 0 ;"	303:2:8793:8825	3956475	1	True				
ANR	3956874	IdentifierDecl	vtype = REG_SZ		3956475	0					
ANR	3956875	IdentifierDeclType	DWORD		3956475	0					
ANR	3956876	Identifier	vtype		3956475	1					
ANR	3956877	AssignmentExpression	vtype = REG_SZ		3956475	2		=			
ANR	3956878	Identifier	REG_SZ		3956475	0					
ANR	3956879	Identifier	REG_SZ		3956475	1					
ANR	3956880	IdentifierDecl	cbData = 0		3956475	1					
ANR	3956881	IdentifierDeclType	DWORD		3956475	0					
ANR	3956882	Identifier	cbData		3956475	1					
ANR	3956883	AssignmentExpression	cbData = 0		3956475	2		=			
ANR	3956884	Identifier	cbData		3956475	0					
ANR	3956885	PrimaryExpression	0		3956475	1					
ANR	3956886	IdentifierDeclStatement	const char * pszName = pszValueName ;	304:2:8829:8864	3956475	2	True				
ANR	3956887	IdentifierDecl	* pszName = pszValueName		3956475	0					
ANR	3956888	IdentifierDeclType	const char *		3956475	0					
ANR	3956889	Identifier	pszName		3956475	1					
ANR	3956890	AssignmentExpression	* pszName = pszValueName		3956475	2		=			
ANR	3956891	Identifier	pszValueName		3956475	0					
ANR	3956892	Identifier	pszValueName		3956475	1					
ANR	3956893	ExpressionStatement	"lres = RegQueryValueEx ( hkey , pszName , NULL , & vtype , NULL , & cbData )"	305:2:8910:8976	3956475	3	True				
ANR	3956894	AssignmentExpression	"lres = RegQueryValueEx ( hkey , pszName , NULL , & vtype , NULL , & cbData )"		3956475	0		=			
ANR	3956895	Identifier	lres		3956475	0					
ANR	3956896	CallExpression	"RegQueryValueEx ( hkey , pszName , NULL , & vtype , NULL , & cbData )"		3956475	1					
ANR	3956897	Callee	RegQueryValueEx		3956475	0					
ANR	3956898	Identifier	RegQueryValueEx		3956475	0					
ANR	3956899	ArgumentList	hkey		3956475	1					
ANR	3956900	Argument	hkey		3956475	0					
ANR	3956901	Identifier	hkey		3956475	0					
ANR	3956902	Argument	pszName		3956475	1					
ANR	3956903	Identifier	pszName		3956475	0					
ANR	3956904	Argument	NULL		3956475	2					
ANR	3956905	Identifier	NULL		3956475	0					
ANR	3956906	Argument	& vtype		3956475	3					
ANR	3956907	UnaryOperationExpression	& vtype		3956475	0					
ANR	3956908	UnaryOperator	&		3956475	0					
ANR	3956909	Identifier	vtype		3956475	1					
ANR	3956910	Argument	NULL		3956475	4					
ANR	3956911	Identifier	NULL		3956475	0					
ANR	3956912	Argument	& cbData		3956475	5					
ANR	3956913	UnaryOperationExpression	& cbData		3956475	0					
ANR	3956914	UnaryOperator	&		3956475	0					
ANR	3956915	Identifier	cbData		3956475	1					
ANR	3956916	IfStatement	if ( ( ERROR_FILE_NOT_FOUND == lres ) && pszName && pszName [ 0 ] )		3956475	4					
ANR	3956917	Condition	( ERROR_FILE_NOT_FOUND == lres ) && pszName && pszName [ 0 ]	311:6:9201:9255	3956475	0	True				
ANR	3956918	AndExpression	( ERROR_FILE_NOT_FOUND == lres ) && pszName && pszName [ 0 ]		3956475	0		&&			
ANR	3956919	EqualityExpression	ERROR_FILE_NOT_FOUND == lres		3956475	0		==			
ANR	3956920	Identifier	ERROR_FILE_NOT_FOUND		3956475	0					
ANR	3956921	Identifier	lres		3956475	1					
ANR	3956922	AndExpression	pszName && pszName [ 0 ]		3956475	1		&&			
ANR	3956923	Identifier	pszName		3956475	0					
ANR	3956924	ArrayIndexing	pszName [ 0 ]		3956475	1					
ANR	3956925	Identifier	pszName		3956475	0					
ANR	3956926	PrimaryExpression	0		3956475	1					
ANR	3956927	CompoundStatement		113:3:3485:3554	3956475	1					
ANR	3956928	IdentifierDeclStatement	HKEY hkeyT = NULL ;	313:3:9265:9282	3956475	0	True				
ANR	3956929	IdentifierDecl	hkeyT = NULL		3956475	0					
ANR	3956930	IdentifierDeclType	HKEY		3956475	0					
ANR	3956931	Identifier	hkeyT		3956475	1					
ANR	3956932	AssignmentExpression	hkeyT = NULL		3956475	2		=			
ANR	3956933	Identifier	NULL		3956475	0					
ANR	3956934	Identifier	NULL		3956475	1					
ANR	3956935	IdentifierDeclStatement	"LONG lResT = RegOpenKeyEx ( hkey , pszName , 0 , KEY_READ | force , & hkeyT ) ;"	314:3:9287:9356	3956475	1	True				
ANR	3956936	IdentifierDecl	"lResT = RegOpenKeyEx ( hkey , pszName , 0 , KEY_READ | force , & hkeyT )"		3956475	0					
ANR	3956937	IdentifierDeclType	LONG		3956475	0					
ANR	3956938	Identifier	lResT		3956475	1					
ANR	3956939	AssignmentExpression	"lResT = RegOpenKeyEx ( hkey , pszName , 0 , KEY_READ | force , & hkeyT )"		3956475	2		=			
ANR	3956940	Identifier	lResT		3956475	0					
ANR	3956941	CallExpression	"RegOpenKeyEx ( hkey , pszName , 0 , KEY_READ | force , & hkeyT )"		3956475	1					
ANR	3956942	Callee	RegOpenKeyEx		3956475	0					
ANR	3956943	Identifier	RegOpenKeyEx		3956475	0					
ANR	3956944	ArgumentList	hkey		3956475	1					
ANR	3956945	Argument	hkey		3956475	0					
ANR	3956946	Identifier	hkey		3956475	0					
ANR	3956947	Argument	pszName		3956475	1					
ANR	3956948	Identifier	pszName		3956475	0					
ANR	3956949	Argument	0		3956475	2					
ANR	3956950	PrimaryExpression	0		3956475	0					
ANR	3956951	Argument	KEY_READ | force		3956475	3					
ANR	3956952	InclusiveOrExpression	KEY_READ | force		3956475	0		|			
ANR	3956953	Identifier	KEY_READ		3956475	0					
ANR	3956954	Identifier	force		3956475	1					
ANR	3956955	Argument	& hkeyT		3956475	4					
ANR	3956956	UnaryOperationExpression	& hkeyT		3956475	0					
ANR	3956957	UnaryOperator	&		3956475	0					
ANR	3956958	Identifier	hkeyT		3956475	1					
ANR	3956959	IfStatement	if ( ERROR_SUCCESS == lResT )		3956475	2					
ANR	3956960	Condition	ERROR_SUCCESS == lResT	315:7:9366:9387	3956475	0	True				
ANR	3956961	EqualityExpression	ERROR_SUCCESS == lResT		3956475	0		==			
ANR	3956962	Identifier	ERROR_SUCCESS		3956475	0					
ANR	3956963	Identifier	lResT		3956475	1					
ANR	3956964	CompoundStatement		115:3:3591:3591	3956475	1					
ANR	3956965	ExpressionStatement	RegCloseKey ( hkey )	318:4:9473:9490	3956475	0	True				
ANR	3956966	CallExpression	RegCloseKey ( hkey )		3956475	0					
ANR	3956967	Callee	RegCloseKey		3956475	0					
ANR	3956968	Identifier	RegCloseKey		3956475	0					
ANR	3956969	ArgumentList	hkey		3956475	1					
ANR	3956970	Argument	hkey		3956475	0					
ANR	3956971	Identifier	hkey		3956475	0					
ANR	3956972	ExpressionStatement	hkey = hkeyT	319:4:9496:9508	3956475	1	True				
ANR	3956973	AssignmentExpression	hkey = hkeyT		3956475	0		=			
ANR	3956974	Identifier	hkey		3956475	0					
ANR	3956975	Identifier	hkeyT		3956475	1					
ANR	3956976	ExpressionStatement	pszName = NULL	321:4:9561:9575	3956475	2	True				
ANR	3956977	AssignmentExpression	pszName = NULL		3956475	0		=			
ANR	3956978	Identifier	pszName		3956475	0					
ANR	3956979	Identifier	NULL		3956475	1					
ANR	3956980	ExpressionStatement	cbData = 0	322:4:9581:9591	3956475	3	True				
ANR	3956981	AssignmentExpression	cbData = 0		3956475	0		=			
ANR	3956982	Identifier	cbData		3956475	0					
ANR	3956983	PrimaryExpression	0		3956475	1					
ANR	3956984	ExpressionStatement	"lres = RegQueryValueEx ( hkey , pszName , NULL , & vtype , NULL , & cbData )"	323:4:9597:9663	3956475	4	True				
ANR	3956985	AssignmentExpression	"lres = RegQueryValueEx ( hkey , pszName , NULL , & vtype , NULL , & cbData )"		3956475	0		=			
ANR	3956986	Identifier	lres		3956475	0					
ANR	3956987	CallExpression	"RegQueryValueEx ( hkey , pszName , NULL , & vtype , NULL , & cbData )"		3956475	1					
ANR	3956988	Callee	RegQueryValueEx		3956475	0					
ANR	3956989	Identifier	RegQueryValueEx		3956475	0					
ANR	3956990	ArgumentList	hkey		3956475	1					
ANR	3956991	Argument	hkey		3956475	0					
ANR	3956992	Identifier	hkey		3956475	0					
ANR	3956993	Argument	pszName		3956475	1					
ANR	3956994	Identifier	pszName		3956475	0					
ANR	3956995	Argument	NULL		3956475	2					
ANR	3956996	Identifier	NULL		3956475	0					
ANR	3956997	Argument	& vtype		3956475	3					
ANR	3956998	UnaryOperationExpression	& vtype		3956475	0					
ANR	3956999	UnaryOperator	&		3956475	0					
ANR	3957000	Identifier	vtype		3956475	1					
ANR	3957001	Argument	NULL		3956475	4					
ANR	3957002	Identifier	NULL		3956475	0					
ANR	3957003	Argument	& cbData		3956475	5					
ANR	3957004	UnaryOperationExpression	& cbData		3956475	0					
ANR	3957005	UnaryOperator	&		3956475	0					
ANR	3957006	Identifier	cbData		3956475	1					
ANR	3957007	IfStatement	if ( ERROR_MORE_DATA == lres || ERROR_SUCCESS == lres )		3956475	5					
ANR	3957008	Condition	ERROR_MORE_DATA == lres || ERROR_SUCCESS == lres	330:6:9800:9847	3956475	0	True				
ANR	3957009	OrExpression	ERROR_MORE_DATA == lres || ERROR_SUCCESS == lres		3956475	0		||			
ANR	3957010	EqualityExpression	ERROR_MORE_DATA == lres		3956475	0		==			
ANR	3957011	Identifier	ERROR_MORE_DATA		3956475	0					
ANR	3957012	Identifier	lres		3956475	1					
ANR	3957013	EqualityExpression	ERROR_SUCCESS == lres		3956475	1		==			
ANR	3957014	Identifier	ERROR_SUCCESS		3956475	0					
ANR	3957015	Identifier	lres		3956475	1					
ANR	3957016	CompoundStatement		130:2:4050:4050	3956475	1					
ANR	3957017	IfStatement	if ( vtype == REG_MULTI_SZ || vtype == REG_SZ || vtype == REG_EXPAND_SZ || vtype == REG_LINK || vtype == REG_BINARY )		3956475	0					
ANR	3957018	Condition	vtype == REG_MULTI_SZ || vtype == REG_SZ || vtype == REG_EXPAND_SZ || vtype == REG_LINK || vtype == REG_BINARY	332:7:9861:9970	3956475	0	True				
ANR	3957019	OrExpression	vtype == REG_MULTI_SZ || vtype == REG_SZ || vtype == REG_EXPAND_SZ || vtype == REG_LINK || vtype == REG_BINARY		3956475	0		||			
ANR	3957020	EqualityExpression	vtype == REG_MULTI_SZ		3956475	0		==			
ANR	3957021	Identifier	vtype		3956475	0					
ANR	3957022	Identifier	REG_MULTI_SZ		3956475	1					
ANR	3957023	OrExpression	vtype == REG_SZ || vtype == REG_EXPAND_SZ || vtype == REG_LINK || vtype == REG_BINARY		3956475	1		||			
ANR	3957024	EqualityExpression	vtype == REG_SZ		3956475	0		==			
ANR	3957025	Identifier	vtype		3956475	0					
ANR	3957026	Identifier	REG_SZ		3956475	1					
ANR	3957027	OrExpression	vtype == REG_EXPAND_SZ || vtype == REG_LINK || vtype == REG_BINARY		3956475	1		||			
ANR	3957028	EqualityExpression	vtype == REG_EXPAND_SZ		3956475	0		==			
ANR	3957029	Identifier	vtype		3956475	0					
ANR	3957030	Identifier	REG_EXPAND_SZ		3956475	1					
ANR	3957031	OrExpression	vtype == REG_LINK || vtype == REG_BINARY		3956475	1		||			
ANR	3957032	EqualityExpression	vtype == REG_LINK		3956475	0		==			
ANR	3957033	Identifier	vtype		3956475	0					
ANR	3957034	Identifier	REG_LINK		3956475	1					
ANR	3957035	EqualityExpression	vtype == REG_BINARY		3956475	1		==			
ANR	3957036	Identifier	vtype		3956475	0					
ANR	3957037	Identifier	REG_BINARY		3956475	1					
ANR	3957038	CompoundStatement		132:3:4174:4174	3956475	1					
ANR	3957039	ExpressionStatement	value = ( char * ) malloc ( cbData + 1 )	334:4:9982:10013	3956475	0	True				
ANR	3957040	AssignmentExpression	value = ( char * ) malloc ( cbData + 1 )		3956475	0		=			
ANR	3957041	Identifier	value		3956475	0					
ANR	3957042	CastExpression	( char * ) malloc ( cbData + 1 )		3956475	1					
ANR	3957043	CastTarget	char *		3956475	0					
ANR	3957044	CallExpression	malloc ( cbData + 1 )		3956475	1					
ANR	3957045	Callee	malloc		3956475	0					
ANR	3957046	Identifier	malloc		3956475	0					
ANR	3957047	ArgumentList	cbData + 1		3956475	1					
ANR	3957048	Argument	cbData + 1		3956475	0					
ANR	3957049	AdditiveExpression	cbData + 1		3956475	0		+			
ANR	3957050	Identifier	cbData		3956475	0					
ANR	3957051	PrimaryExpression	1		3956475	1					
ANR	3957052	ExpressionStatement	"lres = RegQueryValueEx ( hkey , pszName , NULL , & vtype , ( byte * ) value , & cbData )"	335:4:10020:10094	3956475	1	True				
ANR	3957053	AssignmentExpression	"lres = RegQueryValueEx ( hkey , pszName , NULL , & vtype , ( byte * ) value , & cbData )"		3956475	0		=			
ANR	3957054	Identifier	lres		3956475	0					
ANR	3957055	CallExpression	"RegQueryValueEx ( hkey , pszName , NULL , & vtype , ( byte * ) value , & cbData )"		3956475	1					
ANR	3957056	Callee	RegQueryValueEx		3956475	0					
ANR	3957057	Identifier	RegQueryValueEx		3956475	0					
ANR	3957058	ArgumentList	hkey		3956475	1					
ANR	3957059	Argument	hkey		3956475	0					
ANR	3957060	Identifier	hkey		3956475	0					
ANR	3957061	Argument	pszName		3956475	1					
ANR	3957062	Identifier	pszName		3956475	0					
ANR	3957063	Argument	NULL		3956475	2					
ANR	3957064	Identifier	NULL		3956475	0					
ANR	3957065	Argument	& vtype		3956475	3					
ANR	3957066	UnaryOperationExpression	& vtype		3956475	0					
ANR	3957067	UnaryOperator	&		3956475	0					
ANR	3957068	Identifier	vtype		3956475	1					
ANR	3957069	Argument	( byte * ) value		3956475	4					
ANR	3957070	CastExpression	( byte * ) value		3956475	0					
ANR	3957071	CastTarget	byte *		3956475	0					
ANR	3957072	Identifier	value		3956475	1					
ANR	3957073	Argument	& cbData		3956475	5					
ANR	3957074	UnaryOperationExpression	& cbData		3956475	0					
ANR	3957075	UnaryOperator	&		3956475	0					
ANR	3957076	Identifier	cbData		3956475	1					
ANR	3957077	ElseStatement	else		3956475	0					
ANR	3957078	CompoundStatement		137:3:4310:4310	3956475	0					
ANR	3957079	ExpressionStatement	cbData = sizeof ( uli )	339:4:10118:10138	3956475	0	True				
ANR	3957080	AssignmentExpression	cbData = sizeof ( uli )		3956475	0		=			
ANR	3957081	Identifier	cbData		3956475	0					
ANR	3957082	SizeofExpression	sizeof ( uli )		3956475	1					
ANR	3957083	Sizeof	sizeof		3956475	0					
ANR	3957084	SizeofOperand	uli		3956475	1					
ANR	3957085	ExpressionStatement	uli . QuadPart = 0	340:4:10144:10160	3956475	1	True				
ANR	3957086	AssignmentExpression	uli . QuadPart = 0		3956475	0		=			
ANR	3957087	MemberAccess	uli . QuadPart		3956475	0					
ANR	3957088	Identifier	uli		3956475	0					
ANR	3957089	Identifier	QuadPart		3956475	1					
ANR	3957090	PrimaryExpression	0		3956475	1					
ANR	3957091	ExpressionStatement	"lres = RegQueryValueEx ( hkey , pszName , NULL , & vtype , ( byte * ) & uli , & cbData )"	341:4:10210:10283	3956475	2	True				
ANR	3957092	AssignmentExpression	"lres = RegQueryValueEx ( hkey , pszName , NULL , & vtype , ( byte * ) & uli , & cbData )"		3956475	0		=			
ANR	3957093	Identifier	lres		3956475	0					
ANR	3957094	CallExpression	"RegQueryValueEx ( hkey , pszName , NULL , & vtype , ( byte * ) & uli , & cbData )"		3956475	1					
ANR	3957095	Callee	RegQueryValueEx		3956475	0					
ANR	3957096	Identifier	RegQueryValueEx		3956475	0					
ANR	3957097	ArgumentList	hkey		3956475	1					
ANR	3957098	Argument	hkey		3956475	0					
ANR	3957099	Identifier	hkey		3956475	0					
ANR	3957100	Argument	pszName		3956475	1					
ANR	3957101	Identifier	pszName		3956475	0					
ANR	3957102	Argument	NULL		3956475	2					
ANR	3957103	Identifier	NULL		3956475	0					
ANR	3957104	Argument	& vtype		3956475	3					
ANR	3957105	UnaryOperationExpression	& vtype		3956475	0					
ANR	3957106	UnaryOperator	&		3956475	0					
ANR	3957107	Identifier	vtype		3956475	1					
ANR	3957108	Argument	( byte * ) & uli		3956475	4					
ANR	3957109	CastExpression	( byte * ) & uli		3956475	0					
ANR	3957110	CastTarget	byte *		3956475	0					
ANR	3957111	UnaryOperationExpression	& uli		3956475	1					
ANR	3957112	UnaryOperator	&		3956475	0					
ANR	3957113	Identifier	uli		3956475	1					
ANR	3957114	Argument	& cbData		3956475	5					
ANR	3957115	UnaryOperationExpression	& cbData		3956475	0					
ANR	3957116	UnaryOperator	&		3956475	0					
ANR	3957117	Identifier	cbData		3956475	1					
ANR	3957118	IfStatement	if ( ERROR_FILE_NOT_FOUND == lres )		3956475	6					
ANR	3957119	Condition	ERROR_FILE_NOT_FOUND == lres	345:6:10301:10328	3956475	0	True				
ANR	3957120	EqualityExpression	ERROR_FILE_NOT_FOUND == lres		3956475	0		==			
ANR	3957121	Identifier	ERROR_FILE_NOT_FOUND		3956475	0					
ANR	3957122	Identifier	lres		3956475	1					
ANR	3957123	CompoundStatement		145:2:4531:4531	3956475	1					
ANR	3957124	IfStatement	if ( pszName && pszName [ 0 ] )		3956475	0					
ANR	3957125	Condition	pszName && pszName [ 0 ]	347:7:10342:10362	3956475	0	True				
ANR	3957126	AndExpression	pszName && pszName [ 0 ]		3956475	0		&&			
ANR	3957127	Identifier	pszName		3956475	0					
ANR	3957128	ArrayIndexing	pszName [ 0 ]		3956475	1					
ANR	3957129	Identifier	pszName		3956475	0					
ANR	3957130	PrimaryExpression	0		3956475	1					
ANR	3957131	CompoundStatement		147:3:4566:4566	3956475	1					
ANR	3957132	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""The Registry Key \\""%s\\\\%s\\"" does not have a value named \\""%s\\""\\n"" , root_key_name ( hroot ) , pszRegKey , pszName )"	351:4:10419:10563	3956475	0	True				
ANR	3957133	CallExpression	"dprintf ( D_FULLDEBUG , ""The Registry Key \\""%s\\\\%s\\"" does not have a value named \\""%s\\""\\n"" , root_key_name ( hroot ) , pszRegKey , pszName )"		3956475	0					
ANR	3957134	Callee	dprintf		3956475	0					
ANR	3957135	Identifier	dprintf		3956475	0					
ANR	3957136	ArgumentList	D_FULLDEBUG		3956475	1					
ANR	3957137	Argument	D_FULLDEBUG		3956475	0					
ANR	3957138	Identifier	D_FULLDEBUG		3956475	0					
ANR	3957139	Argument	"""The Registry Key \\""%s\\\\%s\\"" does not have a value named \\""%s\\""\\n"""		3956475	1					
ANR	3957140	PrimaryExpression	"""The Registry Key \\""%s\\\\%s\\"" does not have a value named \\""%s\\""\\n"""		3956475	0					
ANR	3957141	Argument	root_key_name ( hroot )		3956475	2					
ANR	3957142	CallExpression	root_key_name ( hroot )		3956475	0					
ANR	3957143	Callee	root_key_name		3956475	0					
ANR	3957144	Identifier	root_key_name		3956475	0					
ANR	3957145	ArgumentList	hroot		3956475	1					
ANR	3957146	Argument	hroot		3956475	0					
ANR	3957147	Identifier	hroot		3956475	0					
ANR	3957148	Argument	pszRegKey		3956475	3					
ANR	3957149	Identifier	pszRegKey		3956475	0					
ANR	3957150	Argument	pszName		3956475	4					
ANR	3957151	Identifier	pszName		3956475	0					
ANR	3957152	ElseStatement	else		3956475	0					
ANR	3957153	CompoundStatement		155:3:4779:4779	3956475	0					
ANR	3957154	ExpressionStatement	"value = strdup ( """" )"	361:4:10779:10797	3956475	0	True				
ANR	3957155	AssignmentExpression	"value = strdup ( """" )"		3956475	0		=			
ANR	3957156	Identifier	value		3956475	0					
ANR	3957157	CallExpression	"strdup ( """" )"		3956475	1					
ANR	3957158	Callee	strdup		3956475	0					
ANR	3957159	Identifier	strdup		3956475	0					
ANR	3957160	ArgumentList	""""""		3956475	1					
ANR	3957161	Argument	""""""		3956475	0					
ANR	3957162	PrimaryExpression	""""""		3956475	0					
ANR	3957163	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""The Registry Key \\""%s\\\\%s\\\\%s\\"" has no default value.\\n"" , root_key_name ( hroot ) , pszRegKey , pszValueName )"	362:4:10803:10937	3956475	1	True				
ANR	3957164	CallExpression	"dprintf ( D_FULLDEBUG , ""The Registry Key \\""%s\\\\%s\\\\%s\\"" has no default value.\\n"" , root_key_name ( hroot ) , pszRegKey , pszValueName )"		3956475	0					
ANR	3957165	Callee	dprintf		3956475	0					
ANR	3957166	Identifier	dprintf		3956475	0					
ANR	3957167	ArgumentList	D_FULLDEBUG		3956475	1					
ANR	3957168	Argument	D_FULLDEBUG		3956475	0					
ANR	3957169	Identifier	D_FULLDEBUG		3956475	0					
ANR	3957170	Argument	"""The Registry Key \\""%s\\\\%s\\\\%s\\"" has no default value.\\n"""		3956475	1					
ANR	3957171	PrimaryExpression	"""The Registry Key \\""%s\\\\%s\\\\%s\\"" has no default value.\\n"""		3956475	0					
ANR	3957172	Argument	root_key_name ( hroot )		3956475	2					
ANR	3957173	CallExpression	root_key_name ( hroot )		3956475	0					
ANR	3957174	Callee	root_key_name		3956475	0					
ANR	3957175	Identifier	root_key_name		3956475	0					
ANR	3957176	ArgumentList	hroot		3956475	1					
ANR	3957177	Argument	hroot		3956475	0					
ANR	3957178	Identifier	hroot		3956475	0					
ANR	3957179	Argument	pszRegKey		3956475	3					
ANR	3957180	Identifier	pszRegKey		3956475	0					
ANR	3957181	Argument	pszValueName		3956475	4					
ANR	3957182	Identifier	pszValueName		3956475	0					
ANR	3957183	ExpressionStatement	fEnumValues = fAutoEnumValues	364:4:10943:10972	3956475	2	True				
ANR	3957184	AssignmentExpression	fEnumValues = fAutoEnumValues		3956475	0		=			
ANR	3957185	Identifier	fEnumValues		3956475	0					
ANR	3957186	Identifier	fAutoEnumValues		3956475	1					
ANR	3957187	ElseStatement	else		3956475	0					
ANR	3957188	IfStatement	if ( ERROR_SUCCESS != lres )		3956475	0					
ANR	3957189	Condition	ERROR_SUCCESS != lres	367:11:10994:11014	3956475	0	True				
ANR	3957190	EqualityExpression	ERROR_SUCCESS != lres		3956475	0		!=			
ANR	3957191	Identifier	ERROR_SUCCESS		3956475	0					
ANR	3957192	Identifier	lres		3956475	1					
ANR	3957193	CompoundStatement		170:3:5292:5312	3956475	1					
ANR	3957194	IdentifierDeclStatement	char szMsg [ MAX_PATH ] ;	371:3:11094:11114	3956475	0	True				
ANR	3957195	IdentifierDecl	szMsg [ MAX_PATH ]		3956475	0					
ANR	3957196	IdentifierDeclType	char [ MAX_PATH ]		3956475	0					
ANR	3957197	Identifier	szMsg		3956475	1					
ANR	3957198	Identifier	MAX_PATH		3956475	2					
ANR	3957199	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to read Registry Key \\""%s\\\\%s\\\\%s\\""\\nReason: %s\\n"" , root_key_name ( hroot ) , pszRegKey , pszValueName , GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) ) )"	372:3:11119:11324	3956475	1	True				
ANR	3957200	CallExpression	"dprintf ( D_ALWAYS , ""Failed to read Registry Key \\""%s\\\\%s\\\\%s\\""\\nReason: %s\\n"" , root_key_name ( hroot ) , pszRegKey , pszValueName , GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) ) )"		3956475	0					
ANR	3957201	Callee	dprintf		3956475	0					
ANR	3957202	Identifier	dprintf		3956475	0					
ANR	3957203	ArgumentList	D_ALWAYS		3956475	1					
ANR	3957204	Argument	D_ALWAYS		3956475	0					
ANR	3957205	Identifier	D_ALWAYS		3956475	0					
ANR	3957206	Argument	"""Failed to read Registry Key \\""%s\\\\%s\\\\%s\\""\\nReason: %s\\n"""		3956475	1					
ANR	3957207	PrimaryExpression	"""Failed to read Registry Key \\""%s\\\\%s\\\\%s\\""\\nReason: %s\\n"""		3956475	0					
ANR	3957208	Argument	root_key_name ( hroot )		3956475	2					
ANR	3957209	CallExpression	root_key_name ( hroot )		3956475	0					
ANR	3957210	Callee	root_key_name		3956475	0					
ANR	3957211	Identifier	root_key_name		3956475	0					
ANR	3957212	ArgumentList	hroot		3956475	1					
ANR	3957213	Argument	hroot		3956475	0					
ANR	3957214	Identifier	hroot		3956475	0					
ANR	3957215	Argument	pszRegKey		3956475	3					
ANR	3957216	Identifier	pszRegKey		3956475	0					
ANR	3957217	Argument	pszValueName		3956475	4					
ANR	3957218	Identifier	pszValueName		3956475	0					
ANR	3957219	Argument	"GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) )"		3956475	5					
ANR	3957220	CallExpression	"GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) )"		3956475	0					
ANR	3957221	Callee	GetLastErrMessage		3956475	0					
ANR	3957222	Identifier	GetLastErrMessage		3956475	0					
ANR	3957223	ArgumentList	GetLastError ( )		3956475	1					
ANR	3957224	Argument	GetLastError ( )		3956475	0					
ANR	3957225	CallExpression	GetLastError ( )		3956475	0					
ANR	3957226	Callee	GetLastError		3956475	0					
ANR	3957227	Identifier	GetLastError		3956475	0					
ANR	3957228	ArgumentList			3956475	1					
ANR	3957229	Argument	szMsg		3956475	1					
ANR	3957230	Identifier	szMsg		3956475	0					
ANR	3957231	Argument	NUM_ELEMENTS ( szMsg )		3956475	2					
ANR	3957232	CallExpression	NUM_ELEMENTS ( szMsg )		3956475	0					
ANR	3957233	Callee	NUM_ELEMENTS		3956475	0					
ANR	3957234	Identifier	NUM_ELEMENTS		3956475	0					
ANR	3957235	ArgumentList	szMsg		3956475	1					
ANR	3957236	Argument	szMsg		3956475	0					
ANR	3957237	Identifier	szMsg		3956475	0					
ANR	3957238	ElseStatement	else		3956475	0					
ANR	3957239	CompoundStatement		180:3:5605:5621	3956475	0					
ANR	3957240	IdentifierDeclStatement	"char sz [ 10 ] = """" ;"	381:3:11407:11423	3956475	0	True				
ANR	3957241	IdentifierDecl	"sz [ 10 ] = """""		3956475	0					
ANR	3957242	IdentifierDeclType	char [ 10 ]		3956475	0					
ANR	3957243	Identifier	sz		3956475	1					
ANR	3957244	PrimaryExpression	10		3956475	2					
ANR	3957245	AssignmentExpression	"sz [ 10 ] = """""		3956475	3		=			
ANR	3957246	Identifier	sz		3956475	0					
ANR	3957247	PrimaryExpression	""""""		3956475	1					
ANR	3957248	SwitchStatement	switch ( vtype )		3956475	1					
ANR	3957249	Condition	vtype	382:11:11436:11440	3956475	0	True				
ANR	3957250	Identifier	vtype		3956475	0					
ANR	3957251	CompoundStatement		182:3:5644:5644	3956475	1					
ANR	3957252	Label	case REG_LINK :	384:3:11451:11464	3956475	0	True				
ANR	3957253	Identifier	REG_LINK		3956475	0					
ANR	3957254	Label	case REG_SZ :	385:3:11469:11480	3956475	1	True				
ANR	3957255	Identifier	REG_SZ		3956475	0					
ANR	3957256	BreakStatement	break ;	386:4:11486:11491	3956475	2	True				
ANR	3957257	Label	case REG_EXPAND_SZ :	387:3:11496:11514	3956475	3	True				
ANR	3957258	Identifier	REG_EXPAND_SZ		3956475	0					
ANR	3957259	BreakStatement	break ;	389:4:11543:11548	3956475	4	True				
ANR	3957260	Label	case REG_MULTI_SZ :	390:3:11553:11570	3956475	5	True				
ANR	3957261	Identifier	REG_MULTI_SZ		3956475	0					
ANR	3957262	BreakStatement	break ;	392:4:11599:11604	3956475	6	True				
ANR	3957263	Label	case REG_DWORD_BIG_ENDIAN :	394:3:11610:11635	3956475	7	True				
ANR	3957264	Identifier	REG_DWORD_BIG_ENDIAN		3956475	0					
ANR	3957265	ExpressionStatement	uli . LowPart = htonl ( uli . LowPart )	395:4:11641:11673	3956475	8	True				
ANR	3957266	AssignmentExpression	uli . LowPart = htonl ( uli . LowPart )		3956475	0		=			
ANR	3957267	MemberAccess	uli . LowPart		3956475	0					
ANR	3957268	Identifier	uli		3956475	0					
ANR	3957269	Identifier	LowPart		3956475	1					
ANR	3957270	CallExpression	htonl ( uli . LowPart )		3956475	1					
ANR	3957271	Callee	htonl		3956475	0					
ANR	3957272	Identifier	htonl		3956475	0					
ANR	3957273	ArgumentList	uli . LowPart		3956475	1					
ANR	3957274	Argument	uli . LowPart		3956475	0					
ANR	3957275	MemberAccess	uli . LowPart		3956475	0					
ANR	3957276	Identifier	uli		3956475	0					
ANR	3957277	Identifier	LowPart		3956475	1					
ANR	3957278	Label	case REG_DWORD :	397:3:11697:11711	3956475	9	True				
ANR	3957279	Identifier	REG_DWORD		3956475	0					
ANR	3957280	ExpressionStatement	"wsprintf ( sz , ""%u"" , uli . LowPart )"	398:4:11717:11748	3956475	10	True				
ANR	3957281	CallExpression	"wsprintf ( sz , ""%u"" , uli . LowPart )"		3956475	0					
ANR	3957282	Callee	wsprintf		3956475	0					
ANR	3957283	Identifier	wsprintf		3956475	0					
ANR	3957284	ArgumentList	sz		3956475	1					
ANR	3957285	Argument	sz		3956475	0					
ANR	3957286	Identifier	sz		3956475	0					
ANR	3957287	Argument	"""%u"""		3956475	1					
ANR	3957288	PrimaryExpression	"""%u"""		3956475	0					
ANR	3957289	Argument	uli . LowPart		3956475	2					
ANR	3957290	MemberAccess	uli . LowPart		3956475	0					
ANR	3957291	Identifier	uli		3956475	0					
ANR	3957292	Identifier	LowPart		3956475	1					
ANR	3957293	BreakStatement	break ;	399:4:11754:11759	3956475	11	True				
ANR	3957294	Label	case REG_QWORD :	401:3:11765:11779	3956475	12	True				
ANR	3957295	Identifier	REG_QWORD		3956475	0					
ANR	3957296	ExpressionStatement	"wsprintf ( sz , ""%lu"" , uli . QuadPart )"	402:4:11785:11818	3956475	13	True				
ANR	3957297	CallExpression	"wsprintf ( sz , ""%lu"" , uli . QuadPart )"		3956475	0					
ANR	3957298	Callee	wsprintf		3956475	0					
ANR	3957299	Identifier	wsprintf		3956475	0					
ANR	3957300	ArgumentList	sz		3956475	1					
ANR	3957301	Argument	sz		3956475	0					
ANR	3957302	Identifier	sz		3956475	0					
ANR	3957303	Argument	"""%lu"""		3956475	1					
ANR	3957304	PrimaryExpression	"""%lu"""		3956475	0					
ANR	3957305	Argument	uli . QuadPart		3956475	2					
ANR	3957306	MemberAccess	uli . QuadPart		3956475	0					
ANR	3957307	Identifier	uli		3956475	0					
ANR	3957308	Identifier	QuadPart		3956475	1					
ANR	3957309	BreakStatement	break ;	403:4:11824:11829	3956475	14	True				
ANR	3957310	Label	case REG_BINARY :	405:3:11835:11850	3956475	15	True				
ANR	3957311	Identifier	REG_BINARY		3956475	0					
ANR	3957312	BreakStatement	break ;	406:4:11856:11861	3956475	16	True				
ANR	3957313	IfStatement	if ( ! value )		3956475	2					
ANR	3957314	Condition	! value	409:8:11877:11883	3956475	0	True				
ANR	3957315	UnaryOperationExpression	! value		3956475	0					
ANR	3957316	UnaryOperator	!		3956475	0					
ANR	3957317	Identifier	value		3956475	1					
ANR	3957318	ExpressionStatement	value = strdup ( sz )	410:4:11891:11909	3956475	1	True				
ANR	3957319	AssignmentExpression	value = strdup ( sz )		3956475	0		=			
ANR	3957320	Identifier	value		3956475	0					
ANR	3957321	CallExpression	strdup ( sz )		3956475	1					
ANR	3957322	Callee	strdup		3956475	0					
ANR	3957323	Identifier	strdup		3956475	0					
ANR	3957324	ArgumentList	sz		3956475	1					
ANR	3957325	Argument	sz		3956475	0					
ANR	3957326	Identifier	sz		3956475	0					
ANR	3957327	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""The Registry Key \\""%s\\\\%s\\\\%s\\"" contains \\""%s\\""\\n"" , root_key_name ( hroot ) , pszRegKey , pszValueName , value )"	412:3:11915:12049	3956475	3	True				
ANR	3957328	CallExpression	"dprintf ( D_FULLDEBUG , ""The Registry Key \\""%s\\\\%s\\\\%s\\"" contains \\""%s\\""\\n"" , root_key_name ( hroot ) , pszRegKey , pszValueName , value )"		3956475	0					
ANR	3957329	Callee	dprintf		3956475	0					
ANR	3957330	Identifier	dprintf		3956475	0					
ANR	3957331	ArgumentList	D_FULLDEBUG		3956475	1					
ANR	3957332	Argument	D_FULLDEBUG		3956475	0					
ANR	3957333	Identifier	D_FULLDEBUG		3956475	0					
ANR	3957334	Argument	"""The Registry Key \\""%s\\\\%s\\\\%s\\"" contains \\""%s\\""\\n"""		3956475	1					
ANR	3957335	PrimaryExpression	"""The Registry Key \\""%s\\\\%s\\\\%s\\"" contains \\""%s\\""\\n"""		3956475	0					
ANR	3957336	Argument	root_key_name ( hroot )		3956475	2					
ANR	3957337	CallExpression	root_key_name ( hroot )		3956475	0					
ANR	3957338	Callee	root_key_name		3956475	0					
ANR	3957339	Identifier	root_key_name		3956475	0					
ANR	3957340	ArgumentList	hroot		3956475	1					
ANR	3957341	Argument	hroot		3956475	0					
ANR	3957342	Identifier	hroot		3956475	0					
ANR	3957343	Argument	pszRegKey		3956475	3					
ANR	3957344	Identifier	pszRegKey		3956475	0					
ANR	3957345	Argument	pszValueName		3956475	4					
ANR	3957346	Identifier	pszValueName		3956475	0					
ANR	3957347	Argument	value		3956475	5					
ANR	3957348	Identifier	value		3956475	0					
ANR	3957349	IfStatement	if ( DebugFlags & ( D_NORMAL | D_FULLDEBUG ) )		3956475	7					
ANR	3957350	Condition	DebugFlags & ( D_NORMAL | D_FULLDEBUG )	419:6:12153:12189	3956475	0	True				
ANR	3957351	BitAndExpression	DebugFlags & ( D_NORMAL | D_FULLDEBUG )		3956475	0		&			
ANR	3957352	Identifier	DebugFlags		3956475	0					
ANR	3957353	InclusiveOrExpression	D_NORMAL | D_FULLDEBUG		3956475	1		|			
ANR	3957354	Identifier	D_NORMAL		3956475	0					
ANR	3957355	Identifier	D_FULLDEBUG		3956475	1					
ANR	3957356	CompoundStatement		219:2:6393:6393	3956475	1					
ANR	3957357	IfStatement	if ( fEnumValues )		3956475	0					
ANR	3957358	Condition	fEnumValues	421:7:12204:12214	3956475	0	True				
ANR	3957359	Identifier	fEnumValues		3956475	0					
ANR	3957360	CompoundStatement		222:4:6424:6434	3956475	1					
ANR	3957361	IdentifierDeclStatement	int ii = 0 ;	423:4:12226:12236	3956475	0	True				
ANR	3957362	IdentifierDecl	ii = 0		3956475	0					
ANR	3957363	IdentifierDeclType	int		3956475	0					
ANR	3957364	Identifier	ii		3956475	1					
ANR	3957365	AssignmentExpression	ii = 0		3956475	2		=			
ANR	3957366	Identifier	ii		3956475	0					
ANR	3957367	PrimaryExpression	0		3956475	1					
ANR	3957368	ForStatement	for ( ii = 0 ; ii < 10000 ; ++ ii )		3956475	1					
ANR	3957369	ForInit	ii = 0 ;	424:9:12247:12253	3956475	0	True				
ANR	3957370	AssignmentExpression	ii = 0		3956475	0		=			
ANR	3957371	Identifier	ii		3956475	0					
ANR	3957372	PrimaryExpression	0		3956475	1					
ANR	3957373	Condition	ii < 10000	424:17:12255:12264	3956475	1	True				
ANR	3957374	RelationalExpression	ii < 10000		3956475	0		<			
ANR	3957375	Identifier	ii		3956475	0					
ANR	3957376	PrimaryExpression	10000		3956475	1					
ANR	3957377	UnaryExpression	++ ii	424:29:12267:12270	3956475	2	True				
ANR	3957378	IncDec	++		3956475	0					
ANR	3957379	Identifier	ii		3956475	1					
ANR	3957380	CompoundStatement		226:5:6511:6563	3956475	3					
ANR	3957381	IdentifierDeclStatement	TCHAR szName [ MAX_PATH ] ;	426:5:12284:12306	3956475	0	True				
ANR	3957382	IdentifierDecl	szName [ MAX_PATH ]		3956475	0					
ANR	3957383	IdentifierDeclType	TCHAR [ MAX_PATH ]		3956475	0					
ANR	3957384	Identifier	szName		3956475	1					
ANR	3957385	Identifier	MAX_PATH		3956475	2					
ANR	3957386	IdentifierDeclStatement	"DWORD cchName = NUM_ELEMENTS ( szName ) , vt , cbData = 0 ;"	427:5:12313:12365	3956475	1	True				
ANR	3957387	IdentifierDecl	cchName = NUM_ELEMENTS ( szName )		3956475	0					
ANR	3957388	IdentifierDeclType	DWORD		3956475	0					
ANR	3957389	Identifier	cchName		3956475	1					
ANR	3957390	AssignmentExpression	cchName = NUM_ELEMENTS ( szName )		3956475	2		=			
ANR	3957391	Identifier	cchName		3956475	0					
ANR	3957392	CallExpression	NUM_ELEMENTS ( szName )		3956475	1					
ANR	3957393	Callee	NUM_ELEMENTS		3956475	0					
ANR	3957394	Identifier	NUM_ELEMENTS		3956475	0					
ANR	3957395	ArgumentList	szName		3956475	1					
ANR	3957396	Argument	szName		3956475	0					
ANR	3957397	Identifier	szName		3956475	0					
ANR	3957398	IdentifierDecl	vt		3956475	1					
ANR	3957399	IdentifierDeclType	DWORD		3956475	0					
ANR	3957400	Identifier	vt		3956475	1					
ANR	3957401	IdentifierDecl	cbData = 0		3956475	2					
ANR	3957402	IdentifierDeclType	DWORD		3956475	0					
ANR	3957403	Identifier	cbData		3956475	1					
ANR	3957404	AssignmentExpression	cbData = 0		3956475	2		=			
ANR	3957405	Identifier	cbData		3956475	0					
ANR	3957406	PrimaryExpression	0		3956475	1					
ANR	3957407	ExpressionStatement	"lres = RegEnumValue ( hkey , ii , szName , & cchName , 0 , & vt , NULL , & cbData )"	428:5:12372:12442	3956475	2	True				
ANR	3957408	AssignmentExpression	"lres = RegEnumValue ( hkey , ii , szName , & cchName , 0 , & vt , NULL , & cbData )"		3956475	0		=			
ANR	3957409	Identifier	lres		3956475	0					
ANR	3957410	CallExpression	"RegEnumValue ( hkey , ii , szName , & cchName , 0 , & vt , NULL , & cbData )"		3956475	1					
ANR	3957411	Callee	RegEnumValue		3956475	0					
ANR	3957412	Identifier	RegEnumValue		3956475	0					
ANR	3957413	ArgumentList	hkey		3956475	1					
ANR	3957414	Argument	hkey		3956475	0					
ANR	3957415	Identifier	hkey		3956475	0					
ANR	3957416	Argument	ii		3956475	1					
ANR	3957417	Identifier	ii		3956475	0					
ANR	3957418	Argument	szName		3956475	2					
ANR	3957419	Identifier	szName		3956475	0					
ANR	3957420	Argument	& cchName		3956475	3					
ANR	3957421	UnaryOperationExpression	& cchName		3956475	0					
ANR	3957422	UnaryOperator	&		3956475	0					
ANR	3957423	Identifier	cchName		3956475	1					
ANR	3957424	Argument	0		3956475	4					
ANR	3957425	PrimaryExpression	0		3956475	0					
ANR	3957426	Argument	& vt		3956475	5					
ANR	3957427	UnaryOperationExpression	& vt		3956475	0					
ANR	3957428	UnaryOperator	&		3956475	0					
ANR	3957429	Identifier	vt		3956475	1					
ANR	3957430	Argument	NULL		3956475	6					
ANR	3957431	Identifier	NULL		3956475	0					
ANR	3957432	Argument	& cbData		3956475	7					
ANR	3957433	UnaryOperationExpression	& cbData		3956475	0					
ANR	3957434	UnaryOperator	&		3956475	0					
ANR	3957435	Identifier	cbData		3956475	1					
ANR	3957436	IfStatement	if ( ERROR_NO_MORE_ITEMS == lres )		3956475	3					
ANR	3957437	Condition	ERROR_NO_MORE_ITEMS == lres	429:9:12453:12479	3956475	0	True				
ANR	3957438	EqualityExpression	ERROR_NO_MORE_ITEMS == lres		3956475	0		==			
ANR	3957439	Identifier	ERROR_NO_MORE_ITEMS		3956475	0					
ANR	3957440	Identifier	lres		3956475	1					
ANR	3957441	BreakStatement	break ;	430:6:12488:12493	3956475	1	True				
ANR	3957442	IfStatement	if ( ! ii )		3956475	4					
ANR	3957443	Condition	! ii	431:10:12505:12508	3956475	0	True				
ANR	3957444	UnaryOperationExpression	! ii		3956475	0					
ANR	3957445	UnaryOperator	!		3956475	0					
ANR	3957446	Identifier	ii		3956475	1					
ANR	3957447	ExpressionStatement	"dprintf ( D_NORMAL | D_FULLDEBUG , "" Named values:\\n"" )"	431:16:12511:12564	3956475	1	True				
ANR	3957448	CallExpression	"dprintf ( D_NORMAL | D_FULLDEBUG , "" Named values:\\n"" )"		3956475	0					
ANR	3957449	Callee	dprintf		3956475	0					
ANR	3957450	Identifier	dprintf		3956475	0					
ANR	3957451	ArgumentList	D_NORMAL | D_FULLDEBUG		3956475	1					
ANR	3957452	Argument	D_NORMAL | D_FULLDEBUG		3956475	0					
ANR	3957453	InclusiveOrExpression	D_NORMAL | D_FULLDEBUG		3956475	0		|			
ANR	3957454	Identifier	D_NORMAL		3956475	0					
ANR	3957455	Identifier	D_FULLDEBUG		3956475	1					
ANR	3957456	Argument	""" Named values:\\n"""		3956475	1					
ANR	3957457	PrimaryExpression	""" Named values:\\n"""		3956475	0					
ANR	3957458	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""  \\""%s\\"" = %d bytes\\n"" , szName , cbData )"	432:5:12571:12633	3956475	5	True				
ANR	3957459	CallExpression	"dprintf ( D_FULLDEBUG , ""  \\""%s\\"" = %d bytes\\n"" , szName , cbData )"		3956475	0					
ANR	3957460	Callee	dprintf		3956475	0					
ANR	3957461	Identifier	dprintf		3956475	0					
ANR	3957462	ArgumentList	D_FULLDEBUG		3956475	1					
ANR	3957463	Argument	D_FULLDEBUG		3956475	0					
ANR	3957464	Identifier	D_FULLDEBUG		3956475	0					
ANR	3957465	Argument	"""  \\""%s\\"" = %d bytes\\n"""		3956475	1					
ANR	3957466	PrimaryExpression	"""  \\""%s\\"" = %d bytes\\n"""		3956475	0					
ANR	3957467	Argument	szName		3956475	2					
ANR	3957468	Identifier	szName		3956475	0					
ANR	3957469	Argument	cbData		3956475	3					
ANR	3957470	Identifier	cbData		3956475	0					
ANR	3957471	IfStatement	if ( ! ii )		3956475	2					
ANR	3957472	Condition	! ii	434:9:12650:12653	3956475	0	True				
ANR	3957473	UnaryOperationExpression	! ii		3956475	0					
ANR	3957474	UnaryOperator	!		3956475	0					
ANR	3957475	Identifier	ii		3956475	1					
ANR	3957476	ExpressionStatement	"dprintf ( D_NORMAL | D_FULLDEBUG , "" No Named values\\n"" )"	434:15:12656:12711	3956475	1	True				
ANR	3957477	CallExpression	"dprintf ( D_NORMAL | D_FULLDEBUG , "" No Named values\\n"" )"		3956475	0					
ANR	3957478	Callee	dprintf		3956475	0					
ANR	3957479	Identifier	dprintf		3956475	0					
ANR	3957480	ArgumentList	D_NORMAL | D_FULLDEBUG		3956475	1					
ANR	3957481	Argument	D_NORMAL | D_FULLDEBUG		3956475	0					
ANR	3957482	InclusiveOrExpression	D_NORMAL | D_FULLDEBUG		3956475	0		|			
ANR	3957483	Identifier	D_NORMAL		3956475	0					
ANR	3957484	Identifier	D_FULLDEBUG		3956475	1					
ANR	3957485	Argument	""" No Named values\\n"""		3956475	1					
ANR	3957486	PrimaryExpression	""" No Named values\\n"""		3956475	0					
ANR	3957487	IfStatement	if ( fEnumSubkeys )		3956475	1					
ANR	3957488	Condition	fEnumSubkeys	436:7:12725:12736	3956475	0	True				
ANR	3957489	Identifier	fEnumSubkeys		3956475	0					
ANR	3957490	CompoundStatement		237:4:6946:6956	3956475	1					
ANR	3957491	IdentifierDeclStatement	int ii = 0 ;	438:4:12748:12758	3956475	0	True				
ANR	3957492	IdentifierDecl	ii = 0		3956475	0					
ANR	3957493	IdentifierDeclType	int		3956475	0					
ANR	3957494	Identifier	ii		3956475	1					
ANR	3957495	AssignmentExpression	ii = 0		3956475	2		=			
ANR	3957496	Identifier	ii		3956475	0					
ANR	3957497	PrimaryExpression	0		3956475	1					
ANR	3957498	ForStatement	for ( ii = 0 ; ii < 10000 ; ++ ii )		3956475	1					
ANR	3957499	ForInit	ii = 0 ;	439:9:12769:12775	3956475	0	True				
ANR	3957500	AssignmentExpression	ii = 0		3956475	0		=			
ANR	3957501	Identifier	ii		3956475	0					
ANR	3957502	PrimaryExpression	0		3956475	1					
ANR	3957503	Condition	ii < 10000	439:17:12777:12786	3956475	1	True				
ANR	3957504	RelationalExpression	ii < 10000		3956475	0		<			
ANR	3957505	Identifier	ii		3956475	0					
ANR	3957506	PrimaryExpression	10000		3956475	1					
ANR	3957507	UnaryExpression	++ ii	439:29:12789:12792	3956475	2	True				
ANR	3957508	IncDec	++		3956475	0					
ANR	3957509	Identifier	ii		3956475	1					
ANR	3957510	CompoundStatement		241:5:7034:7070	3956475	3					
ANR	3957511	IdentifierDeclStatement	TCHAR szName [ MAX_PATH ] ;	441:5:12806:12828	3956475	0	True				
ANR	3957512	IdentifierDecl	szName [ MAX_PATH ]		3956475	0					
ANR	3957513	IdentifierDeclType	TCHAR [ MAX_PATH ]		3956475	0					
ANR	3957514	Identifier	szName		3956475	1					
ANR	3957515	Identifier	MAX_PATH		3956475	2					
ANR	3957516	IdentifierDeclStatement	DWORD cchName = NUM_ELEMENTS ( szName ) ;	442:5:12836:12872	3956475	1	True				
ANR	3957517	IdentifierDecl	cchName = NUM_ELEMENTS ( szName )		3956475	0					
ANR	3957518	IdentifierDeclType	DWORD		3956475	0					
ANR	3957519	Identifier	cchName		3956475	1					
ANR	3957520	AssignmentExpression	cchName = NUM_ELEMENTS ( szName )		3956475	2		=			
ANR	3957521	Identifier	cchName		3956475	0					
ANR	3957522	CallExpression	NUM_ELEMENTS ( szName )		3956475	1					
ANR	3957523	Callee	NUM_ELEMENTS		3956475	0					
ANR	3957524	Identifier	NUM_ELEMENTS		3956475	0					
ANR	3957525	ArgumentList	szName		3956475	1					
ANR	3957526	Argument	szName		3956475	0					
ANR	3957527	Identifier	szName		3956475	0					
ANR	3957528	ExpressionStatement	"lres = RegEnumKeyEx ( hkey , ii , szName , & cchName , NULL , NULL , NULL , NULL )"	443:5:12879:12950	3956475	2	True				
ANR	3957529	AssignmentExpression	"lres = RegEnumKeyEx ( hkey , ii , szName , & cchName , NULL , NULL , NULL , NULL )"		3956475	0		=			
ANR	3957530	Identifier	lres		3956475	0					
ANR	3957531	CallExpression	"RegEnumKeyEx ( hkey , ii , szName , & cchName , NULL , NULL , NULL , NULL )"		3956475	1					
ANR	3957532	Callee	RegEnumKeyEx		3956475	0					
ANR	3957533	Identifier	RegEnumKeyEx		3956475	0					
ANR	3957534	ArgumentList	hkey		3956475	1					
ANR	3957535	Argument	hkey		3956475	0					
ANR	3957536	Identifier	hkey		3956475	0					
ANR	3957537	Argument	ii		3956475	1					
ANR	3957538	Identifier	ii		3956475	0					
ANR	3957539	Argument	szName		3956475	2					
ANR	3957540	Identifier	szName		3956475	0					
ANR	3957541	Argument	& cchName		3956475	3					
ANR	3957542	UnaryOperationExpression	& cchName		3956475	0					
ANR	3957543	UnaryOperator	&		3956475	0					
ANR	3957544	Identifier	cchName		3956475	1					
ANR	3957545	Argument	NULL		3956475	4					
ANR	3957546	Identifier	NULL		3956475	0					
ANR	3957547	Argument	NULL		3956475	5					
ANR	3957548	Identifier	NULL		3956475	0					
ANR	3957549	Argument	NULL		3956475	6					
ANR	3957550	Identifier	NULL		3956475	0					
ANR	3957551	Argument	NULL		3956475	7					
ANR	3957552	Identifier	NULL		3956475	0					
ANR	3957553	IfStatement	if ( ERROR_NO_MORE_ITEMS == lres )		3956475	3					
ANR	3957554	Condition	ERROR_NO_MORE_ITEMS == lres	444:9:12961:12987	3956475	0	True				
ANR	3957555	EqualityExpression	ERROR_NO_MORE_ITEMS == lres		3956475	0		==			
ANR	3957556	Identifier	ERROR_NO_MORE_ITEMS		3956475	0					
ANR	3957557	Identifier	lres		3956475	1					
ANR	3957558	BreakStatement	break ;	445:6:12996:13001	3956475	1	True				
ANR	3957559	IfStatement	if ( ! ii )		3956475	4					
ANR	3957560	Condition	! ii	446:10:13013:13016	3956475	0	True				
ANR	3957561	UnaryOperationExpression	! ii		3956475	0					
ANR	3957562	UnaryOperator	!		3956475	0					
ANR	3957563	Identifier	ii		3956475	1					
ANR	3957564	ExpressionStatement	"dprintf ( D_NORMAL | D_FULLDEBUG , "" Subkeys:\\n"" )"	446:16:13019:13067	3956475	1	True				
ANR	3957565	CallExpression	"dprintf ( D_NORMAL | D_FULLDEBUG , "" Subkeys:\\n"" )"		3956475	0					
ANR	3957566	Callee	dprintf		3956475	0					
ANR	3957567	Identifier	dprintf		3956475	0					
ANR	3957568	ArgumentList	D_NORMAL | D_FULLDEBUG		3956475	1					
ANR	3957569	Argument	D_NORMAL | D_FULLDEBUG		3956475	0					
ANR	3957570	InclusiveOrExpression	D_NORMAL | D_FULLDEBUG		3956475	0		|			
ANR	3957571	Identifier	D_NORMAL		3956475	0					
ANR	3957572	Identifier	D_FULLDEBUG		3956475	1					
ANR	3957573	Argument	""" Subkeys:\\n"""		3956475	1					
ANR	3957574	PrimaryExpression	""" Subkeys:\\n"""		3956475	0					
ANR	3957575	ExpressionStatement	"dprintf ( D_NORMAL | D_FULLDEBUG , ""  \\""%s\\""\\n"" , szName )"	447:5:13074:13128	3956475	5	True				
ANR	3957576	CallExpression	"dprintf ( D_NORMAL | D_FULLDEBUG , ""  \\""%s\\""\\n"" , szName )"		3956475	0					
ANR	3957577	Callee	dprintf		3956475	0					
ANR	3957578	Identifier	dprintf		3956475	0					
ANR	3957579	ArgumentList	D_NORMAL | D_FULLDEBUG		3956475	1					
ANR	3957580	Argument	D_NORMAL | D_FULLDEBUG		3956475	0					
ANR	3957581	InclusiveOrExpression	D_NORMAL | D_FULLDEBUG		3956475	0		|			
ANR	3957582	Identifier	D_NORMAL		3956475	0					
ANR	3957583	Identifier	D_FULLDEBUG		3956475	1					
ANR	3957584	Argument	"""  \\""%s\\""\\n"""		3956475	1					
ANR	3957585	PrimaryExpression	"""  \\""%s\\""\\n"""		3956475	0					
ANR	3957586	Argument	szName		3956475	2					
ANR	3957587	Identifier	szName		3956475	0					
ANR	3957588	IfStatement	if ( ! ii )		3956475	2					
ANR	3957589	Condition	! ii	449:9:13145:13148	3956475	0	True				
ANR	3957590	UnaryOperationExpression	! ii		3956475	0					
ANR	3957591	UnaryOperator	!		3956475	0					
ANR	3957592	Identifier	ii		3956475	1					
ANR	3957593	ExpressionStatement	"dprintf ( D_NORMAL | D_FULLDEBUG , "" No Subkeys\\n"" )"	449:15:13151:13201	3956475	1	True				
ANR	3957594	CallExpression	"dprintf ( D_NORMAL | D_FULLDEBUG , "" No Subkeys\\n"" )"		3956475	0					
ANR	3957595	Callee	dprintf		3956475	0					
ANR	3957596	Identifier	dprintf		3956475	0					
ANR	3957597	ArgumentList	D_NORMAL | D_FULLDEBUG		3956475	1					
ANR	3957598	Argument	D_NORMAL | D_FULLDEBUG		3956475	0					
ANR	3957599	InclusiveOrExpression	D_NORMAL | D_FULLDEBUG		3956475	0		|			
ANR	3957600	Identifier	D_NORMAL		3956475	0					
ANR	3957601	Identifier	D_FULLDEBUG		3956475	1					
ANR	3957602	Argument	""" No Subkeys\\n"""		3956475	1					
ANR	3957603	PrimaryExpression	""" No Subkeys\\n"""		3956475	0					
ANR	3957604	ExpressionStatement	RegCloseKey ( hkey )	453:2:13215:13232	3956475	8	True				
ANR	3957605	CallExpression	RegCloseKey ( hkey )		3956475	0					
ANR	3957606	Callee	RegCloseKey		3956475	0					
ANR	3957607	Identifier	RegCloseKey		3956475	0					
ANR	3957608	ArgumentList	hkey		3956475	1					
ANR	3957609	Argument	hkey		3956475	0					
ANR	3957610	Identifier	hkey		3956475	0					
ANR	3957611	IfStatement	if ( pszTemp )		3956475	16					
ANR	3957612	Condition	pszTemp	456:5:13302:13308	3956475	0	True				
ANR	3957613	Identifier	pszTemp		3956475	0					
ANR	3957614	ExpressionStatement	free ( pszTemp )	456:14:13311:13324	3956475	1	True				
ANR	3957615	CallExpression	free ( pszTemp )		3956475	0					
ANR	3957616	Callee	free		3956475	0					
ANR	3957617	Identifier	free		3956475	0					
ANR	3957618	ArgumentList	pszTemp		3956475	1					
ANR	3957619	Argument	pszTemp		3956475	0					
ANR	3957620	Identifier	pszTemp		3956475	0					
ANR	3957621	ReturnStatement	return value ;	458:1:13328:13340	3956475	17	True				
ANR	3957622	Identifier	value		3956475	0					
ANR	3957623	ReturnType	char *		3956475	1					
ANR	3957624	Identifier	get_windows_reg_value		3956475	2					
ANR	3957625	ParameterList	"const char * pszRegKey , const char * pszValueName , int options"		3956475	3					
ANR	3957626	Parameter	const char * pszRegKey	199:1:5715:5736	3956475	0	True				
ANR	3957627	ParameterType	const char *		3956475	0					
ANR	3957628	Identifier	pszRegKey		3956475	1					
ANR	3957629	Parameter	const char * pszValueName	200:1:5741:5765	3956475	1	True				
ANR	3957630	ParameterType	const char *		3956475	0					
ANR	3957631	Identifier	pszValueName		3956475	1					
ANR	3957632	Parameter	int options	201:1:5770:5789	3956475	2	True				
ANR	3957633	ParameterType	int		3956475	0					
ANR	3957634	Identifier	options		3956475	1					
ANR	3957635	CFGEntryNode	ENTRY		3956475		True				
ANR	3957636	CFGExitNode	EXIT		3956475		True				
ANR	3957637	Symbol	NUM_ELEMENTS		3956475						
ANR	3957638	Symbol	fEnumValues		3956475						
ANR	3957639	Symbol	vtype		3956475						
ANR	3957640	Symbol	lres		3956475						
ANR	3957641	Symbol	ixStart		3956475						
ANR	3957642	Symbol	REG_BINARY		3956475						
ANR	3957643	Symbol	cch		3956475						
ANR	3957644	Symbol	REG_EXPAND_SZ		3956475						
ANR	3957645	Symbol	szName		3956475						
ANR	3957646	Symbol	htonl		3956475						
ANR	3957647	Symbol	ERROR_SUCCESS		3956475						
ANR	3957648	Symbol	RegQueryValueEx		3956475						
ANR	3957649	Symbol	ERROR_FILE_NOT_FOUND		3956475						
ANR	3957650	Symbol	szMsg		3956475						
ANR	3957651	Symbol	options		3956475						
ANR	3957652	Symbol	WINREG_OPT_F_ENUM_SUBKEYS		3956475						
ANR	3957653	Symbol	D_NORMAL		3956475						
ANR	3957654	Symbol	& cchName		3956475						
ANR	3957655	Symbol	pszTemp		3956475						
ANR	3957656	Symbol	pszRegKey		3956475						
ANR	3957657	Symbol	RegOpenKeyEx		3956475						
ANR	3957658	Symbol	& uli		3956475						
ANR	3957659	Symbol	ii		3956475						
ANR	3957660	Symbol	NULL		3956475						
ANR	3957661	Symbol	HKEY_LOCAL_MACHINE		3956475						
ANR	3957662	Symbol	hroot		3956475						
ANR	3957663	Symbol	uli . QuadPart		3956475						
ANR	3957664	Symbol	fEnumSubkeys		3956475						
ANR	3957665	Symbol	D_FULLDEBUG		3956475						
ANR	3957666	Symbol	DebugFlags		3956475						
ANR	3957667	Symbol	ERROR_NO_MORE_ITEMS		3956475						
ANR	3957668	Symbol	fAutoEnumValues		3956475						
ANR	3957669	Symbol	& ixStart		3956475						
ANR	3957670	Symbol	* pszName ++		3956475						
ANR	3957671	Symbol	uli		3956475						
ANR	3957672	Symbol	GetLastError		3956475						
ANR	3957673	Symbol	RegEnumKeyEx		3956475						
ANR	3957674	Symbol	root_key_name		3956475						
ANR	3957675	Symbol	force		3956475						
ANR	3957676	Symbol	vt		3956475						
ANR	3957677	Symbol	* pszName		3956475						
ANR	3957678	Symbol	GetLastErrMessage		3956475						
ANR	3957679	Symbol	WINREG_OPT_F_WOW64		3956475						
ANR	3957680	Symbol	pszValueName		3956475						
ANR	3957681	Symbol	lstrlen		3956475						
ANR	3957682	Symbol	hkey		3956475						
ANR	3957683	Symbol	REG_SZ		3956475						
ANR	3957684	Symbol	& cbData		3956475						
ANR	3957685	Symbol	& vtype		3956475						
ANR	3957686	Symbol	parse_hive_prefix		3956475						
ANR	3957687	Symbol	KEY_WOW64_32KEY		3956475						
ANR	3957688	Symbol	KEY_READ		3956475						
ANR	3957689	Symbol	uli . LowPart		3956475						
ANR	3957690	Symbol	pszName		3956475						
ANR	3957691	Symbol	REG_LINK		3956475						
ANR	3957692	Symbol	REG_MULTI_SZ		3956475						
ANR	3957693	Symbol	hkeyT		3956475						
ANR	3957694	Symbol	lResT		3956475						
ANR	3957695	Symbol	RegEnumValue		3956475						
ANR	3957696	Symbol	WINREG_OPT_F_AUTO_ENUM_VALUES		3956475						
ANR	3957697	Symbol	ERROR_MORE_DATA		3956475						
ANR	3957698	Symbol	* pszRegKey		3956475						
ANR	3957699	Symbol	HKEY_PERFORMANCE_NLSTEXT		3956475						
ANR	3957700	Symbol	cbData		3956475						
ANR	3957701	Symbol	value		3956475						
ANR	3957702	Symbol	WINREG_OPT_F_WOW32		3956475						
ANR	3957703	Symbol	KEY_WOW64_64KEY		3956475						
ANR	3957704	Symbol	malloc		3956475						
ANR	3957705	Symbol	cchName		3956475						
ANR	3957706	Symbol	sz		3956475						
ANR	3957707	Symbol	D_ALWAYS		3956475						
ANR	3957708	Symbol	& vt		3956475						
ANR	3957709	Symbol	WINREG_OPT_F_ENUM_VALUES		3956475						
ANR	3957710	Symbol	& hkeyT		3956475						
ANR	3957711	Symbol	HKEY_PERFORMANCE_DATA		3956475						
ANR	3957712	Symbol	strrchr		3956475						
ANR	3957713	Symbol	& hkey		3956475						
ANR	3957714	Symbol	strdup		3956475						
ANR	3957715	Symbol	HKEY_PERFORMANCE_TEXT		3956475						
ANR	3957716	Function	generate_reg_key_attr_name	470:0:13742:16534							
ANR	3957717	FunctionDef	"generate_reg_key_attr_name (const char * pszPrefix , const char * pszKeyName)"		3957716	0					
ANR	3957718	CompoundStatement		471:0:13825:16534	3957716	0					
ANR	3957719	IdentifierDeclStatement	int cchPrefix = pszPrefix ? strlen ( pszPrefix ) : 0 ;	472:1:13828:13877	3957716	0	True				
ANR	3957720	IdentifierDecl	cchPrefix = pszPrefix ? strlen ( pszPrefix ) : 0		3957716	0					
ANR	3957721	IdentifierDeclType	int		3957716	0					
ANR	3957722	Identifier	cchPrefix		3957716	1					
ANR	3957723	AssignmentExpression	cchPrefix = pszPrefix ? strlen ( pszPrefix ) : 0		3957716	2		=			
ANR	3957724	Identifier	cchPrefix		3957716	0					
ANR	3957725	ConditionalExpression	pszPrefix ? strlen ( pszPrefix ) : 0		3957716	1					
ANR	3957726	Condition	pszPrefix		3957716	0					
ANR	3957727	Identifier	pszPrefix		3957716	0					
ANR	3957728	CallExpression	strlen ( pszPrefix )		3957716	1					
ANR	3957729	Callee	strlen		3957716	0					
ANR	3957730	Identifier	strlen		3957716	0					
ANR	3957731	ArgumentList	pszPrefix		3957716	1					
ANR	3957732	Argument	pszPrefix		3957716	0					
ANR	3957733	Identifier	pszPrefix		3957716	0					
ANR	3957734	PrimaryExpression	0		3957716	2					
ANR	3957735	IdentifierDeclStatement	"const char * psz = strchr ( pszKeyName , '=' ) ;"	477:1:13990:14032	3957716	1	True				
ANR	3957736	IdentifierDecl	"* psz = strchr ( pszKeyName , '=' )"		3957716	0					
ANR	3957737	IdentifierDeclType	const char *		3957716	0					
ANR	3957738	Identifier	psz		3957716	1					
ANR	3957739	AssignmentExpression	"* psz = strchr ( pszKeyName , '=' )"		3957716	2		=			
ANR	3957740	Identifier	psz		3957716	0					
ANR	3957741	CallExpression	"strchr ( pszKeyName , '=' )"		3957716	1					
ANR	3957742	Callee	strchr		3957716	0					
ANR	3957743	Identifier	strchr		3957716	0					
ANR	3957744	ArgumentList	pszKeyName		3957716	1					
ANR	3957745	Argument	pszKeyName		3957716	0					
ANR	3957746	Identifier	pszKeyName		3957716	0					
ANR	3957747	Argument	'='		3957716	1					
ANR	3957748	PrimaryExpression	'='		3957716	0					
ANR	3957749	IdentifierDeclStatement	"const char * pbs = strchr ( pszKeyName , '\\\\' ) ;"	478:1:14035:14078	3957716	2	True				
ANR	3957750	IdentifierDecl	"* pbs = strchr ( pszKeyName , '\\\\' )"		3957716	0					
ANR	3957751	IdentifierDeclType	const char *		3957716	0					
ANR	3957752	Identifier	pbs		3957716	1					
ANR	3957753	AssignmentExpression	"* pbs = strchr ( pszKeyName , '\\\\' )"		3957716	2		=			
ANR	3957754	Identifier	pbs		3957716	0					
ANR	3957755	CallExpression	"strchr ( pszKeyName , '\\\\' )"		3957716	1					
ANR	3957756	Callee	strchr		3957716	0					
ANR	3957757	Identifier	strchr		3957716	0					
ANR	3957758	ArgumentList	pszKeyName		3957716	1					
ANR	3957759	Argument	pszKeyName		3957716	0					
ANR	3957760	Identifier	pszKeyName		3957716	0					
ANR	3957761	Argument	'\\\\'		3957716	1					
ANR	3957762	PrimaryExpression	'\\\\'		3957716	0					
ANR	3957763	IfStatement	if ( psz && ( ! pbs || psz < pbs ) )		3957716	3					
ANR	3957764	Condition	psz && ( ! pbs || psz < pbs )	479:5:14085:14112	3957716	0	True				
ANR	3957765	AndExpression	psz && ( ! pbs || psz < pbs )		3957716	0		&&			
ANR	3957766	Identifier	psz		3957716	0					
ANR	3957767	OrExpression	! pbs || psz < pbs		3957716	1		||			
ANR	3957768	UnaryOperationExpression	! pbs		3957716	0					
ANR	3957769	UnaryOperator	!		3957716	0					
ANR	3957770	Identifier	pbs		3957716	1					
ANR	3957771	RelationalExpression	psz < pbs		3957716	1		<			
ANR	3957772	Identifier	psz		3957716	0					
ANR	3957773	Identifier	pbs		3957716	1					
ANR	3957774	CompoundStatement		12:2:329:379	3957716	1					
ANR	3957775	IdentifierDeclStatement	int cch = ( psz - pszKeyName ) ;	481:2:14120:14151	3957716	0	True				
ANR	3957776	IdentifierDecl	cch = ( psz - pszKeyName )		3957716	0					
ANR	3957777	IdentifierDeclType	int		3957716	0					
ANR	3957778	Identifier	cch		3957716	1					
ANR	3957779	AssignmentExpression	cch = ( psz - pszKeyName )		3957716	2		=			
ANR	3957780	Identifier	cch		3957716	0					
ANR	3957781	AdditiveExpression	psz - pszKeyName		3957716	1		-			
ANR	3957782	Identifier	psz		3957716	0					
ANR	3957783	Identifier	pszKeyName		3957716	1					
ANR	3957784	IdentifierDeclStatement	char * pszAttr = ( char * ) malloc ( cchPrefix + cch + 1 ) ;	482:2:14155:14205	3957716	1	True				
ANR	3957785	IdentifierDecl	* pszAttr = ( char * ) malloc ( cchPrefix + cch + 1 )		3957716	0					
ANR	3957786	IdentifierDeclType	char *		3957716	0					
ANR	3957787	Identifier	pszAttr		3957716	1					
ANR	3957788	AssignmentExpression	* pszAttr = ( char * ) malloc ( cchPrefix + cch + 1 )		3957716	2		=			
ANR	3957789	Identifier	pszAttr		3957716	0					
ANR	3957790	CastExpression	( char * ) malloc ( cchPrefix + cch + 1 )		3957716	1					
ANR	3957791	CastTarget	char *		3957716	0					
ANR	3957792	CallExpression	malloc ( cchPrefix + cch + 1 )		3957716	1					
ANR	3957793	Callee	malloc		3957716	0					
ANR	3957794	Identifier	malloc		3957716	0					
ANR	3957795	ArgumentList	cchPrefix + cch + 1		3957716	1					
ANR	3957796	Argument	cchPrefix + cch + 1		3957716	0					
ANR	3957797	AdditiveExpression	cchPrefix + cch + 1		3957716	0		+			
ANR	3957798	Identifier	cchPrefix		3957716	0					
ANR	3957799	AdditiveExpression	cch + 1		3957716	1		+			
ANR	3957800	Identifier	cch		3957716	0					
ANR	3957801	PrimaryExpression	1		3957716	1					
ANR	3957802	IfStatement	if ( pszPrefix )		3957716	2					
ANR	3957803	Condition	pszPrefix	483:6:14213:14221	3957716	0	True				
ANR	3957804	Identifier	pszPrefix		3957716	0					
ANR	3957805	ExpressionStatement	"strcpy ( pszAttr , pszPrefix )"	484:3:14227:14253	3957716	1	True				
ANR	3957806	CallExpression	"strcpy ( pszAttr , pszPrefix )"		3957716	0					
ANR	3957807	Callee	strcpy		3957716	0					
ANR	3957808	Identifier	strcpy		3957716	0					
ANR	3957809	ArgumentList	pszAttr		3957716	1					
ANR	3957810	Argument	pszAttr		3957716	0					
ANR	3957811	Identifier	pszAttr		3957716	0					
ANR	3957812	Argument	pszPrefix		3957716	1					
ANR	3957813	Identifier	pszPrefix		3957716	0					
ANR	3957814	ExpressionStatement	"memcpy ( pszAttr + cchPrefix , pszKeyName , cch )"	485:2:14257:14301	3957716	3	True				
ANR	3957815	CallExpression	"memcpy ( pszAttr + cchPrefix , pszKeyName , cch )"		3957716	0					
ANR	3957816	Callee	memcpy		3957716	0					
ANR	3957817	Identifier	memcpy		3957716	0					
ANR	3957818	ArgumentList	pszAttr + cchPrefix		3957716	1					
ANR	3957819	Argument	pszAttr + cchPrefix		3957716	0					
ANR	3957820	AdditiveExpression	pszAttr + cchPrefix		3957716	0		+			
ANR	3957821	Identifier	pszAttr		3957716	0					
ANR	3957822	Identifier	cchPrefix		3957716	1					
ANR	3957823	Argument	pszKeyName		3957716	1					
ANR	3957824	Identifier	pszKeyName		3957716	0					
ANR	3957825	Argument	cch		3957716	2					
ANR	3957826	Identifier	cch		3957716	0					
ANR	3957827	ExpressionStatement	pszAttr [ cchPrefix + cch ] = 0	486:2:14305:14333	3957716	4	True				
ANR	3957828	AssignmentExpression	pszAttr [ cchPrefix + cch ] = 0		3957716	0		=			
ANR	3957829	ArrayIndexing	pszAttr [ cchPrefix + cch ]		3957716	0					
ANR	3957830	Identifier	pszAttr		3957716	0					
ANR	3957831	AdditiveExpression	cchPrefix + cch		3957716	1		+			
ANR	3957832	Identifier	cchPrefix		3957716	0					
ANR	3957833	Identifier	cch		3957716	1					
ANR	3957834	PrimaryExpression	0		3957716	1					
ANR	3957835	WhileStatement	while ( cch > 0 && isspace ( pszAttr [ cchPrefix + cch - 1 ] ) )		3957716	5					
ANR	3957836	Condition	cch > 0 && isspace ( pszAttr [ cchPrefix + cch - 1 ] )	487:9:14344:14387	3957716	0	True				
ANR	3957837	AndExpression	cch > 0 && isspace ( pszAttr [ cchPrefix + cch - 1 ] )		3957716	0		&&			
ANR	3957838	RelationalExpression	cch > 0		3957716	0		>			
ANR	3957839	Identifier	cch		3957716	0					
ANR	3957840	PrimaryExpression	0		3957716	1					
ANR	3957841	CallExpression	isspace ( pszAttr [ cchPrefix + cch - 1 ] )		3957716	1					
ANR	3957842	Callee	isspace		3957716	0					
ANR	3957843	Identifier	isspace		3957716	0					
ANR	3957844	ArgumentList	pszAttr [ cchPrefix + cch - 1 ]		3957716	1					
ANR	3957845	Argument	pszAttr [ cchPrefix + cch - 1 ]		3957716	0					
ANR	3957846	ArrayIndexing	pszAttr [ cchPrefix + cch - 1 ]		3957716	0					
ANR	3957847	Identifier	pszAttr		3957716	0					
ANR	3957848	AdditiveExpression	cchPrefix + cch - 1		3957716	1		+			
ANR	3957849	Identifier	cchPrefix		3957716	0					
ANR	3957850	AdditiveExpression	cch - 1		3957716	1		-			
ANR	3957851	Identifier	cch		3957716	0					
ANR	3957852	PrimaryExpression	1		3957716	1					
ANR	3957853	CompoundStatement		18:2:566:566	3957716	1					
ANR	3957854	ExpressionStatement	pszAttr [ cchPrefix + cch - 1 ] = 0	489:3:14397:14425	3957716	0	True				
ANR	3957855	AssignmentExpression	pszAttr [ cchPrefix + cch - 1 ] = 0		3957716	0		=			
ANR	3957856	ArrayIndexing	pszAttr [ cchPrefix + cch - 1 ]		3957716	0					
ANR	3957857	Identifier	pszAttr		3957716	0					
ANR	3957858	AdditiveExpression	cchPrefix + cch - 1		3957716	1		+			
ANR	3957859	Identifier	cchPrefix		3957716	0					
ANR	3957860	AdditiveExpression	cch - 1		3957716	1		-			
ANR	3957861	Identifier	cch		3957716	0					
ANR	3957862	PrimaryExpression	1		3957716	1					
ANR	3957863	PrimaryExpression	0		3957716	1					
ANR	3957864	ExpressionStatement	-- cch	490:6:14433:14438	3957716	1	True				
ANR	3957865	UnaryExpression	-- cch		3957716	0					
ANR	3957866	IncDec	--		3957716	0					
ANR	3957867	Identifier	cch		3957716	1					
ANR	3957868	ReturnStatement	return pszAttr ;	492:2:14446:14460	3957716	6	True				
ANR	3957869	Identifier	pszAttr		3957716	0					
ANR	3957870	ExpressionStatement	psz = pszKeyName + strlen ( pszKeyName )	499:1:14642:14679	3957716	4	True				
ANR	3957871	AssignmentExpression	psz = pszKeyName + strlen ( pszKeyName )		3957716	0		=			
ANR	3957872	Identifier	psz		3957716	0					
ANR	3957873	AdditiveExpression	pszKeyName + strlen ( pszKeyName )		3957716	1		+			
ANR	3957874	Identifier	pszKeyName		3957716	0					
ANR	3957875	CallExpression	strlen ( pszKeyName )		3957716	1					
ANR	3957876	Callee	strlen		3957716	0					
ANR	3957877	Identifier	strlen		3957716	0					
ANR	3957878	ArgumentList	pszKeyName		3957716	1					
ANR	3957879	Argument	pszKeyName		3957716	0					
ANR	3957880	Identifier	pszKeyName		3957716	0					
ANR	3957881	IdentifierDeclStatement	"int cSteps = ( strstr ( pszKeyName , ""HKPD\\\\"" ) == pszKeyName ) ? 2 : 3 ;"	500:1:14682:14747	3957716	5	True				
ANR	3957882	IdentifierDecl	"cSteps = ( strstr ( pszKeyName , ""HKPD\\\\"" ) == pszKeyName ) ? 2 : 3"		3957716	0					
ANR	3957883	IdentifierDeclType	int		3957716	0					
ANR	3957884	Identifier	cSteps		3957716	1					
ANR	3957885	AssignmentExpression	"cSteps = ( strstr ( pszKeyName , ""HKPD\\\\"" ) == pszKeyName ) ? 2 : 3"		3957716	2		=			
ANR	3957886	Identifier	cSteps		3957716	0					
ANR	3957887	ConditionalExpression	"( strstr ( pszKeyName , ""HKPD\\\\"" ) == pszKeyName ) ? 2 : 3"		3957716	1					
ANR	3957888	Condition	"strstr ( pszKeyName , ""HKPD\\\\"" ) == pszKeyName"		3957716	0					
ANR	3957889	EqualityExpression	"strstr ( pszKeyName , ""HKPD\\\\"" ) == pszKeyName"		3957716	0		==			
ANR	3957890	CallExpression	"strstr ( pszKeyName , ""HKPD\\\\"" )"		3957716	0					
ANR	3957891	Callee	strstr		3957716	0					
ANR	3957892	Identifier	strstr		3957716	0					
ANR	3957893	ArgumentList	pszKeyName		3957716	1					
ANR	3957894	Argument	pszKeyName		3957716	0					
ANR	3957895	Identifier	pszKeyName		3957716	0					
ANR	3957896	Argument	"""HKPD\\\\"""		3957716	1					
ANR	3957897	PrimaryExpression	"""HKPD\\\\"""		3957716	0					
ANR	3957898	Identifier	pszKeyName		3957716	1					
ANR	3957899	PrimaryExpression	2		3957716	1					
ANR	3957900	PrimaryExpression	3		3957716	2					
ANR	3957901	WhileStatement	while ( psz > pszKeyName && ( psz [ - 1 ] != '\\\\' || -- cSteps > 0 ) )		3957716	6					
ANR	3957902	Condition	psz > pszKeyName && ( psz [ - 1 ] != '\\\\' || -- cSteps > 0 )	501:8:14757:14809	3957716	0	True				
ANR	3957903	AndExpression	psz > pszKeyName && ( psz [ - 1 ] != '\\\\' || -- cSteps > 0 )		3957716	0		&&			
ANR	3957904	RelationalExpression	psz > pszKeyName		3957716	0		>			
ANR	3957905	Identifier	psz		3957716	0					
ANR	3957906	Identifier	pszKeyName		3957716	1					
ANR	3957907	OrExpression	psz [ - 1 ] != '\\\\' || -- cSteps > 0		3957716	1		||			
ANR	3957908	EqualityExpression	psz [ - 1 ] != '\\\\'		3957716	0		!=			
ANR	3957909	ArrayIndexing	psz [ - 1 ]		3957716	0					
ANR	3957910	Identifier	psz		3957716	0					
ANR	3957911	UnaryOperationExpression	- 1		3957716	1					
ANR	3957912	UnaryOperator	-		3957716	0					
ANR	3957913	PrimaryExpression	1		3957716	1					
ANR	3957914	PrimaryExpression	'\\\\'		3957716	1					
ANR	3957915	RelationalExpression	-- cSteps > 0		3957716	1		>			
ANR	3957916	UnaryExpression	-- cSteps		3957716	0					
ANR	3957917	IncDec	--		3957716	0					
ANR	3957918	Identifier	cSteps		3957716	1					
ANR	3957919	PrimaryExpression	0		3957716	1					
ANR	3957920	ExpressionStatement	-- psz	502:2:14814:14819	3957716	1	True				
ANR	3957921	UnaryExpression	-- psz		3957716	0					
ANR	3957922	IncDec	--		3957716	0					
ANR	3957923	Identifier	psz		3957716	1					
ANR	3957924	IfStatement	if ( ! cchPrefix && psz > pszKeyName && isdigit ( * psz ) )		3957716	7					
ANR	3957925	Condition	! cchPrefix && psz > pszKeyName && isdigit ( * psz )	506:6:14955:15002	3957716	0	True				
ANR	3957926	AndExpression	! cchPrefix && psz > pszKeyName && isdigit ( * psz )		3957716	0		&&			
ANR	3957927	UnaryOperationExpression	! cchPrefix		3957716	0					
ANR	3957928	UnaryOperator	!		3957716	0					
ANR	3957929	Identifier	cchPrefix		3957716	1					
ANR	3957930	AndExpression	psz > pszKeyName && isdigit ( * psz )		3957716	1		&&			
ANR	3957931	RelationalExpression	psz > pszKeyName		3957716	0		>			
ANR	3957932	Identifier	psz		3957716	0					
ANR	3957933	Identifier	pszKeyName		3957716	1					
ANR	3957934	CallExpression	isdigit ( * psz )		3957716	1					
ANR	3957935	Callee	isdigit		3957716	0					
ANR	3957936	Identifier	isdigit		3957716	0					
ANR	3957937	ArgumentList	* psz		3957716	1					
ANR	3957938	Argument	* psz		3957716	0					
ANR	3957939	UnaryOperationExpression	* psz		3957716	0					
ANR	3957940	UnaryOperator	*		3957716	0					
ANR	3957941	Identifier	psz		3957716	1					
ANR	3957942	ExpressionStatement	-- psz	507:2:15007:15012	3957716	1	True				
ANR	3957943	UnaryExpression	-- psz		3957716	0					
ANR	3957944	IncDec	--		3957716	0					
ANR	3957945	Identifier	psz		3957716	1					
ANR	3957946	IdentifierDeclStatement	int cch = strlen ( psz ) ;	512:1:15106:15127	3957716	8	True				
ANR	3957947	IdentifierDecl	cch = strlen ( psz )		3957716	0					
ANR	3957948	IdentifierDeclType	int		3957716	0					
ANR	3957949	Identifier	cch		3957716	1					
ANR	3957950	AssignmentExpression	cch = strlen ( psz )		3957716	2		=			
ANR	3957951	Identifier	cch		3957716	0					
ANR	3957952	CallExpression	strlen ( psz )		3957716	1					
ANR	3957953	Callee	strlen		3957716	0					
ANR	3957954	Identifier	strlen		3957716	0					
ANR	3957955	ArgumentList	psz		3957716	1					
ANR	3957956	Argument	psz		3957716	0					
ANR	3957957	Identifier	psz		3957716	0					
ANR	3957958	IdentifierDeclStatement	bool fPercent = false ;	513:1:15130:15151	3957716	9	True				
ANR	3957959	IdentifierDecl	fPercent = false		3957716	0					
ANR	3957960	IdentifierDeclType	bool		3957716	0					
ANR	3957961	Identifier	fPercent		3957716	1					
ANR	3957962	AssignmentExpression	fPercent = false		3957716	2		=			
ANR	3957963	Identifier	false		3957716	0					
ANR	3957964	Identifier	false		3957716	1					
ANR	3957965	IfStatement	"if ( strchr ( psz , '%' ) )"		3957716	10					
ANR	3957966	Condition	"strchr ( psz , '%' )"	514:5:15158:15173	3957716	0	True				
ANR	3957967	CallExpression	"strchr ( psz , '%' )"		3957716	0					
ANR	3957968	Callee	strchr		3957716	0					
ANR	3957969	Identifier	strchr		3957716	0					
ANR	3957970	ArgumentList	psz		3957716	1					
ANR	3957971	Argument	psz		3957716	0					
ANR	3957972	Identifier	psz		3957716	0					
ANR	3957973	Argument	'%'		3957716	1					
ANR	3957974	PrimaryExpression	'%'		3957716	0					
ANR	3957975	CompoundStatement		45:1:1351:1351	3957716	1					
ANR	3957976	ExpressionStatement	"cch += strlen ( ""Percent"" )"	516:2:15181:15205	3957716	0	True				
ANR	3957977	AssignmentExpression	"cch += strlen ( ""Percent"" )"		3957716	0		+=			
ANR	3957978	Identifier	cch		3957716	0					
ANR	3957979	CallExpression	"strlen ( ""Percent"" )"		3957716	1					
ANR	3957980	Callee	strlen		3957716	0					
ANR	3957981	Identifier	strlen		3957716	0					
ANR	3957982	ArgumentList	"""Percent"""		3957716	1					
ANR	3957983	Argument	"""Percent"""		3957716	0					
ANR	3957984	PrimaryExpression	"""Percent"""		3957716	0					
ANR	3957985	ExpressionStatement	fPercent = true	517:2:15209:15224	3957716	1	True				
ANR	3957986	AssignmentExpression	fPercent = true		3957716	0		=			
ANR	3957987	Identifier	fPercent		3957716	0					
ANR	3957988	Identifier	true		3957716	1					
ANR	3957989	IdentifierDeclStatement	bool fPerSec = false ;	520:1:15231:15251	3957716	11	True				
ANR	3957990	IdentifierDecl	fPerSec = false		3957716	0					
ANR	3957991	IdentifierDeclType	bool		3957716	0					
ANR	3957992	Identifier	fPerSec		3957716	1					
ANR	3957993	AssignmentExpression	fPerSec = false		3957716	2		=			
ANR	3957994	Identifier	false		3957716	0					
ANR	3957995	Identifier	false		3957716	1					
ANR	3957996	IfStatement	"if ( strstr ( psz , ""/sec"" ) )"		3957716	12					
ANR	3957997	Condition	"strstr ( psz , ""/sec"" )"	521:5:15258:15276	3957716	0	True				
ANR	3957998	CallExpression	"strstr ( psz , ""/sec"" )"		3957716	0					
ANR	3957999	Callee	strstr		3957716	0					
ANR	3958000	Identifier	strstr		3957716	0					
ANR	3958001	ArgumentList	psz		3957716	1					
ANR	3958002	Argument	psz		3957716	0					
ANR	3958003	Identifier	psz		3957716	0					
ANR	3958004	Argument	"""/sec"""		3957716	1					
ANR	3958005	PrimaryExpression	"""/sec"""		3957716	0					
ANR	3958006	CompoundStatement		52:1:1454:1454	3957716	1					
ANR	3958007	ExpressionStatement	"cch += strlen ( ""_Per_"" )"	523:2:15284:15306	3957716	0	True				
ANR	3958008	AssignmentExpression	"cch += strlen ( ""_Per_"" )"		3957716	0		+=			
ANR	3958009	Identifier	cch		3957716	0					
ANR	3958010	CallExpression	"strlen ( ""_Per_"" )"		3957716	1					
ANR	3958011	Callee	strlen		3957716	0					
ANR	3958012	Identifier	strlen		3957716	0					
ANR	3958013	ArgumentList	"""_Per_"""		3957716	1					
ANR	3958014	Argument	"""_Per_"""		3957716	0					
ANR	3958015	PrimaryExpression	"""_Per_"""		3957716	0					
ANR	3958016	ExpressionStatement	fPerSec = true	524:2:15310:15324	3957716	1	True				
ANR	3958017	AssignmentExpression	fPerSec = true		3957716	0		=			
ANR	3958018	Identifier	fPerSec		3957716	0					
ANR	3958019	Identifier	true		3957716	1					
ANR	3958020	IdentifierDeclStatement	char * pszAttr = ( char * ) malloc ( cchPrefix + cch + 1 ) ;	527:1:15331:15383	3957716	13	True				
ANR	3958021	IdentifierDecl	* pszAttr = ( char * ) malloc ( cchPrefix + cch + 1 )		3957716	0					
ANR	3958022	IdentifierDeclType	char *		3957716	0					
ANR	3958023	Identifier	pszAttr		3957716	1					
ANR	3958024	AssignmentExpression	* pszAttr = ( char * ) malloc ( cchPrefix + cch + 1 )		3957716	2		=			
ANR	3958025	Identifier	pszAttr		3957716	0					
ANR	3958026	CastExpression	( char * ) malloc ( cchPrefix + cch + 1 )		3957716	1					
ANR	3958027	CastTarget	char *		3957716	0					
ANR	3958028	CallExpression	malloc ( cchPrefix + cch + 1 )		3957716	1					
ANR	3958029	Callee	malloc		3957716	0					
ANR	3958030	Identifier	malloc		3957716	0					
ANR	3958031	ArgumentList	cchPrefix + cch + 1		3957716	1					
ANR	3958032	Argument	cchPrefix + cch + 1		3957716	0					
ANR	3958033	AdditiveExpression	cchPrefix + cch + 1		3957716	0		+			
ANR	3958034	Identifier	cchPrefix		3957716	0					
ANR	3958035	AdditiveExpression	cch + 1		3957716	1		+			
ANR	3958036	Identifier	cch		3957716	0					
ANR	3958037	PrimaryExpression	1		3957716	1					
ANR	3958038	IfStatement	if ( pszPrefix )		3957716	14					
ANR	3958039	Condition	pszPrefix	528:8:15393:15401	3957716	0	True				
ANR	3958040	Identifier	pszPrefix		3957716	0					
ANR	3958041	ExpressionStatement	"strcpy ( pszAttr , pszPrefix )"	529:2:15406:15432	3957716	1	True				
ANR	3958042	CallExpression	"strcpy ( pszAttr , pszPrefix )"		3957716	0					
ANR	3958043	Callee	strcpy		3957716	0					
ANR	3958044	Identifier	strcpy		3957716	0					
ANR	3958045	ArgumentList	pszAttr		3957716	1					
ANR	3958046	Argument	pszAttr		3957716	0					
ANR	3958047	Identifier	pszAttr		3957716	0					
ANR	3958048	Argument	pszPrefix		3957716	1					
ANR	3958049	Identifier	pszPrefix		3957716	0					
ANR	3958050	IfStatement	if ( cch > 1 && pszAttr [ cchPrefix + cch - 1 ] == '\\\\' )		3957716	15					
ANR	3958051	Condition	cch > 1 && pszAttr [ cchPrefix + cch - 1 ] == '\\\\'	534:5:15547:15591	3957716	0	True				
ANR	3958052	AndExpression	cch > 1 && pszAttr [ cchPrefix + cch - 1 ] == '\\\\'		3957716	0		&&			
ANR	3958053	RelationalExpression	cch > 1		3957716	0		>			
ANR	3958054	Identifier	cch		3957716	0					
ANR	3958055	PrimaryExpression	1		3957716	1					
ANR	3958056	EqualityExpression	pszAttr [ cchPrefix + cch - 1 ] == '\\\\'		3957716	1		==			
ANR	3958057	ArrayIndexing	pszAttr [ cchPrefix + cch - 1 ]		3957716	0					
ANR	3958058	Identifier	pszAttr		3957716	0					
ANR	3958059	AdditiveExpression	cchPrefix + cch - 1		3957716	1		+			
ANR	3958060	Identifier	cchPrefix		3957716	0					
ANR	3958061	AdditiveExpression	cch - 1		3957716	1		-			
ANR	3958062	Identifier	cch		3957716	0					
ANR	3958063	PrimaryExpression	1		3957716	1					
ANR	3958064	PrimaryExpression	'\\\\'		3957716	1					
ANR	3958065	ExpressionStatement	pszAttr [ cchPrefix + cch - 1 ] = 0	535:2:15596:15626	3957716	1	True				
ANR	3958066	AssignmentExpression	pszAttr [ cchPrefix + cch - 1 ] = 0		3957716	0		=			
ANR	3958067	ArrayIndexing	pszAttr [ cchPrefix + cch - 1 ]		3957716	0					
ANR	3958068	Identifier	pszAttr		3957716	0					
ANR	3958069	AdditiveExpression	cchPrefix + cch - 1		3957716	1		+			
ANR	3958070	Identifier	cchPrefix		3957716	0					
ANR	3958071	AdditiveExpression	cch - 1		3957716	1		-			
ANR	3958072	Identifier	cch		3957716	0					
ANR	3958073	PrimaryExpression	1		3957716	1					
ANR	3958074	PrimaryExpression	0		3957716	1					
ANR	3958075	IdentifierDeclStatement	char * pszT = pszAttr + cchPrefix ;	540:1:15715:15748	3957716	16	True				
ANR	3958076	IdentifierDecl	* pszT = pszAttr + cchPrefix		3957716	0					
ANR	3958077	IdentifierDeclType	char *		3957716	0					
ANR	3958078	Identifier	pszT		3957716	1					
ANR	3958079	AssignmentExpression	* pszT = pszAttr + cchPrefix		3957716	2		=			
ANR	3958080	Identifier	pszT		3957716	0					
ANR	3958081	AdditiveExpression	pszAttr + cchPrefix		3957716	1		+			
ANR	3958082	Identifier	pszAttr		3957716	0					
ANR	3958083	Identifier	cchPrefix		3957716	1					
ANR	3958084	WhileStatement	while ( * pszT = * psz )		3957716	17					
ANR	3958085	Condition	* pszT = * psz	541:8:15758:15769	3957716	0	True				
ANR	3958086	AssignmentExpression	* pszT = * psz		3957716	0		=			
ANR	3958087	UnaryOperationExpression	* pszT		3957716	0					
ANR	3958088	UnaryOperator	*		3957716	0					
ANR	3958089	Identifier	pszT		3957716	1					
ANR	3958090	UnaryOperationExpression	* psz		3957716	1					
ANR	3958091	UnaryOperator	*		3957716	0					
ANR	3958092	Identifier	psz		3957716	1					
ANR	3958093	CompoundStatement		72:1:1947:1947	3957716	1					
ANR	3958094	IfStatement	if ( fPercent && * pszT == '%' )		3957716	0					
ANR	3958095	Condition	fPercent && * pszT == '%'	543:6:15782:15805	3957716	0	True				
ANR	3958096	AndExpression	fPercent && * pszT == '%'		3957716	0		&&			
ANR	3958097	Identifier	fPercent		3957716	0					
ANR	3958098	EqualityExpression	* pszT == '%'		3957716	1		==			
ANR	3958099	UnaryOperationExpression	* pszT		3957716	0					
ANR	3958100	UnaryOperator	*		3957716	0					
ANR	3958101	Identifier	pszT		3957716	1					
ANR	3958102	PrimaryExpression	'%'		3957716	1					
ANR	3958103	CompoundStatement		74:2:1984:1984	3957716	1					
ANR	3958104	ExpressionStatement	"strcpy ( pszT , ""Percent"" )"	545:3:15815:15838	3957716	0	True				
ANR	3958105	CallExpression	"strcpy ( pszT , ""Percent"" )"		3957716	0					
ANR	3958106	Callee	strcpy		3957716	0					
ANR	3958107	Identifier	strcpy		3957716	0					
ANR	3958108	ArgumentList	pszT		3957716	1					
ANR	3958109	Argument	pszT		3957716	0					
ANR	3958110	Identifier	pszT		3957716	0					
ANR	3958111	Argument	"""Percent"""		3957716	1					
ANR	3958112	PrimaryExpression	"""Percent"""		3957716	0					
ANR	3958113	ExpressionStatement	pszT += strlen ( pszT ) - 1	546:3:15843:15865	3957716	1	True				
ANR	3958114	AssignmentExpression	pszT += strlen ( pszT ) - 1		3957716	0		+=			
ANR	3958115	Identifier	pszT		3957716	0					
ANR	3958116	AdditiveExpression	strlen ( pszT ) - 1		3957716	1		-			
ANR	3958117	CallExpression	strlen ( pszT )		3957716	0					
ANR	3958118	Callee	strlen		3957716	0					
ANR	3958119	Identifier	strlen		3957716	0					
ANR	3958120	ArgumentList	pszT		3957716	1					
ANR	3958121	Argument	pszT		3957716	0					
ANR	3958122	Identifier	pszT		3957716	0					
ANR	3958123	PrimaryExpression	1		3957716	1					
ANR	3958124	ExpressionStatement	fPercent = false	547:3:15870:15886	3957716	2	True				
ANR	3958125	AssignmentExpression	fPercent = false		3957716	0		=			
ANR	3958126	Identifier	fPercent		3957716	0					
ANR	3958127	Identifier	false		3957716	1					
ANR	3958128	ElseStatement	else		3957716	0					
ANR	3958129	IfStatement	"if ( fPerSec && * pszT == '/' && strstr ( psz , ""sec"" ) == psz + 1 )"		3957716	0					
ANR	3958130	Condition	"fPerSec && * pszT == '/' && strstr ( psz , ""sec"" ) == psz + 1"	549:11:15903:15956	3957716	0	True				
ANR	3958131	AndExpression	"fPerSec && * pszT == '/' && strstr ( psz , ""sec"" ) == psz + 1"		3957716	0		&&			
ANR	3958132	Identifier	fPerSec		3957716	0					
ANR	3958133	AndExpression	"* pszT == '/' && strstr ( psz , ""sec"" ) == psz + 1"		3957716	1		&&			
ANR	3958134	EqualityExpression	* pszT == '/'		3957716	0		==			
ANR	3958135	UnaryOperationExpression	* pszT		3957716	0					
ANR	3958136	UnaryOperator	*		3957716	0					
ANR	3958137	Identifier	pszT		3957716	1					
ANR	3958138	PrimaryExpression	'/'		3957716	1					
ANR	3958139	EqualityExpression	"strstr ( psz , ""sec"" ) == psz + 1"		3957716	1		==			
ANR	3958140	CallExpression	"strstr ( psz , ""sec"" )"		3957716	0					
ANR	3958141	Callee	strstr		3957716	0					
ANR	3958142	Identifier	strstr		3957716	0					
ANR	3958143	ArgumentList	psz		3957716	1					
ANR	3958144	Argument	psz		3957716	0					
ANR	3958145	Identifier	psz		3957716	0					
ANR	3958146	Argument	"""sec"""		3957716	1					
ANR	3958147	PrimaryExpression	"""sec"""		3957716	0					
ANR	3958148	AdditiveExpression	psz + 1		3957716	1		+			
ANR	3958149	Identifier	psz		3957716	0					
ANR	3958150	PrimaryExpression	1		3957716	1					
ANR	3958151	CompoundStatement		80:2:2135:2135	3957716	1					
ANR	3958152	ExpressionStatement	"strcpy ( pszT , ""_Per_S"" )"	551:3:15966:15988	3957716	0	True				
ANR	3958153	CallExpression	"strcpy ( pszT , ""_Per_S"" )"		3957716	0					
ANR	3958154	Callee	strcpy		3957716	0					
ANR	3958155	Identifier	strcpy		3957716	0					
ANR	3958156	ArgumentList	pszT		3957716	1					
ANR	3958157	Argument	pszT		3957716	0					
ANR	3958158	Identifier	pszT		3957716	0					
ANR	3958159	Argument	"""_Per_S"""		3957716	1					
ANR	3958160	PrimaryExpression	"""_Per_S"""		3957716	0					
ANR	3958161	ExpressionStatement	pszT += strlen ( pszT ) - 1	552:3:15993:16015	3957716	1	True				
ANR	3958162	AssignmentExpression	pszT += strlen ( pszT ) - 1		3957716	0		+=			
ANR	3958163	Identifier	pszT		3957716	0					
ANR	3958164	AdditiveExpression	strlen ( pszT ) - 1		3957716	1		-			
ANR	3958165	CallExpression	strlen ( pszT )		3957716	0					
ANR	3958166	Callee	strlen		3957716	0					
ANR	3958167	Identifier	strlen		3957716	0					
ANR	3958168	ArgumentList	pszT		3957716	1					
ANR	3958169	Argument	pszT		3957716	0					
ANR	3958170	Identifier	pszT		3957716	0					
ANR	3958171	PrimaryExpression	1		3957716	1					
ANR	3958172	ExpressionStatement	psz += 1	553:3:16020:16028	3957716	2	True				
ANR	3958173	AssignmentExpression	psz += 1		3957716	0		+=			
ANR	3958174	Identifier	psz		3957716	0					
ANR	3958175	PrimaryExpression	1		3957716	1					
ANR	3958176	ExpressionStatement	fPerSec = false	554:3:16033:16048	3957716	3	True				
ANR	3958177	AssignmentExpression	fPerSec = false		3957716	0		=			
ANR	3958178	Identifier	fPerSec		3957716	0					
ANR	3958179	Identifier	false		3957716	1					
ANR	3958180	ElseStatement	else		3957716	0					
ANR	3958181	IfStatement	if ( ! isalnum ( * pszT ) )		3957716	0					
ANR	3958182	Condition	! isalnum ( * pszT )	556:12:16066:16081	3957716	0	True				
ANR	3958183	UnaryOperationExpression	! isalnum ( * pszT )		3957716	0					
ANR	3958184	UnaryOperator	!		3957716	0					
ANR	3958185	CallExpression	isalnum ( * pszT )		3957716	1					
ANR	3958186	Callee	isalnum		3957716	0					
ANR	3958187	Identifier	isalnum		3957716	0					
ANR	3958188	ArgumentList	* pszT		3957716	1					
ANR	3958189	Argument	* pszT		3957716	0					
ANR	3958190	UnaryOperationExpression	* pszT		3957716	0					
ANR	3958191	UnaryOperator	*		3957716	0					
ANR	3958192	Identifier	pszT		3957716	1					
ANR	3958193	CompoundStatement		87:2:2260:2260	3957716	1					
ANR	3958194	IfStatement	if ( pszT > pszAttr && pszT [ - 1 ] == '_' )		3957716	0					
ANR	3958195	Condition	pszT > pszAttr && pszT [ - 1 ] == '_'	559:7:16142:16174	3957716	0	True				
ANR	3958196	AndExpression	pszT > pszAttr && pszT [ - 1 ] == '_'		3957716	0		&&			
ANR	3958197	RelationalExpression	pszT > pszAttr		3957716	0		>			
ANR	3958198	Identifier	pszT		3957716	0					
ANR	3958199	Identifier	pszAttr		3957716	1					
ANR	3958200	EqualityExpression	pszT [ - 1 ] == '_'		3957716	1		==			
ANR	3958201	ArrayIndexing	pszT [ - 1 ]		3957716	0					
ANR	3958202	Identifier	pszT		3957716	0					
ANR	3958203	UnaryOperationExpression	- 1		3957716	1					
ANR	3958204	UnaryOperator	-		3957716	0					
ANR	3958205	PrimaryExpression	1		3957716	1					
ANR	3958206	PrimaryExpression	'_'		3957716	1					
ANR	3958207	ExpressionStatement	-- pszT	560:4:16181:16187	3957716	1	True				
ANR	3958208	UnaryExpression	-- pszT		3957716	0					
ANR	3958209	IncDec	--		3957716	0					
ANR	3958210	Identifier	pszT		3957716	1					
ANR	3958211	ExpressionStatement	pszT [ 0 ] = '_'	561:3:16192:16205	3957716	1	True				
ANR	3958212	AssignmentExpression	pszT [ 0 ] = '_'		3957716	0		=			
ANR	3958213	ArrayIndexing	pszT [ 0 ]		3957716	0					
ANR	3958214	Identifier	pszT		3957716	0					
ANR	3958215	PrimaryExpression	0		3957716	1					
ANR	3958216	PrimaryExpression	'_'		3957716	1					
ANR	3958217	ExpressionStatement	++ pszT	563:2:16213:16219	3957716	1	True				
ANR	3958218	UnaryExpression	++ pszT		3957716	0					
ANR	3958219	IncDec	++		3957716	0					
ANR	3958220	Identifier	pszT		3957716	1					
ANR	3958221	ExpressionStatement	++ psz	564:2:16223:16228	3957716	2	True				
ANR	3958222	UnaryExpression	++ psz		3957716	0					
ANR	3958223	IncDec	++		3957716	0					
ANR	3958224	Identifier	psz		3957716	1					
ANR	3958225	ExpressionStatement	cch = strlen ( pszAttr )	571:1:16432:16453	3957716	18	True				
ANR	3958226	AssignmentExpression	cch = strlen ( pszAttr )		3957716	0		=			
ANR	3958227	Identifier	cch		3957716	0					
ANR	3958228	CallExpression	strlen ( pszAttr )		3957716	1					
ANR	3958229	Callee	strlen		3957716	0					
ANR	3958230	Identifier	strlen		3957716	0					
ANR	3958231	ArgumentList	pszAttr		3957716	1					
ANR	3958232	Argument	pszAttr		3957716	0					
ANR	3958233	Identifier	pszAttr		3957716	0					
ANR	3958234	IfStatement	if ( cch > 0 && pszAttr [ cch - 1 ] == '_' )		3957716	19					
ANR	3958235	Condition	cch > 0 && pszAttr [ cch - 1 ] == '_'	572:5:16460:16491	3957716	0	True				
ANR	3958236	AndExpression	cch > 0 && pszAttr [ cch - 1 ] == '_'		3957716	0		&&			
ANR	3958237	RelationalExpression	cch > 0		3957716	0		>			
ANR	3958238	Identifier	cch		3957716	0					
ANR	3958239	PrimaryExpression	0		3957716	1					
ANR	3958240	EqualityExpression	pszAttr [ cch - 1 ] == '_'		3957716	1		==			
ANR	3958241	ArrayIndexing	pszAttr [ cch - 1 ]		3957716	0					
ANR	3958242	Identifier	pszAttr		3957716	0					
ANR	3958243	AdditiveExpression	cch - 1		3957716	1		-			
ANR	3958244	Identifier	cch		3957716	0					
ANR	3958245	PrimaryExpression	1		3957716	1					
ANR	3958246	PrimaryExpression	'_'		3957716	1					
ANR	3958247	ExpressionStatement	pszAttr [ cch - 1 ] = 0	573:2:16496:16514	3957716	1	True				
ANR	3958248	AssignmentExpression	pszAttr [ cch - 1 ] = 0		3957716	0		=			
ANR	3958249	ArrayIndexing	pszAttr [ cch - 1 ]		3957716	0					
ANR	3958250	Identifier	pszAttr		3957716	0					
ANR	3958251	AdditiveExpression	cch - 1		3957716	1		-			
ANR	3958252	Identifier	cch		3957716	0					
ANR	3958253	PrimaryExpression	1		3957716	1					
ANR	3958254	PrimaryExpression	0		3957716	1					
ANR	3958255	ReturnStatement	return pszAttr ;	575:1:16518:16532	3957716	20	True				
ANR	3958256	Identifier	pszAttr		3957716	0					
ANR	3958257	ReturnType	char *		3957716	1					
ANR	3958258	Identifier	generate_reg_key_attr_name		3957716	2					
ANR	3958259	ParameterList	"const char * pszPrefix , const char * pszKeyName"		3957716	3					
ANR	3958260	Parameter	const char * pszPrefix	470:34:13776:13797	3957716	0	True				
ANR	3958261	ParameterType	const char *		3957716	0					
ANR	3958262	Identifier	pszPrefix		3957716	1					
ANR	3958263	Parameter	const char * pszKeyName	470:58:13800:13822	3957716	1	True				
ANR	3958264	ParameterType	const char *		3957716	0					
ANR	3958265	Identifier	pszKeyName		3957716	1					
ANR	3958266	CFGEntryNode	ENTRY		3957716		True				
ANR	3958267	CFGExitNode	EXIT		3957716		True				
ANR	3958268	Symbol	pszPrefix		3957716						
ANR	3958269	Symbol	pbs		3957716						
ANR	3958270	Symbol	* psz		3957716						
ANR	3958271	Symbol	* cchPrefix		3957716						
ANR	3958272	Symbol	fPercent		3957716						
ANR	3958273	Symbol	strchr		3957716						
ANR	3958274	Symbol	cch		3957716						
ANR	3958275	Symbol	* cch		3957716						
ANR	3958276	Symbol	strlen		3957716						
ANR	3958277	Symbol	psz		3957716						
ANR	3958278	Symbol	isdigit		3957716						
ANR	3958279	Symbol	* pszAttr		3957716						
ANR	3958280	Symbol	malloc		3957716						
ANR	3958281	Symbol	isalnum		3957716						
ANR	3958282	Symbol	pszAttr		3957716						
ANR	3958283	Symbol	isspace		3957716						
ANR	3958284	Symbol	false		3957716						
ANR	3958285	Symbol	pszT		3957716						
ANR	3958286	Symbol	* pszT		3957716						
ANR	3958287	Symbol	cSteps		3957716						
ANR	3958288	Symbol	strstr		3957716						
ANR	3958289	Symbol	cchPrefix		3957716						
ANR	3958290	Symbol	true		3957716						
ANR	3958291	Symbol	fPerSec		3957716						
ANR	3958292	Symbol	pszKeyName		3957716						
ANR	3958293	Function	torekHash	583:0:16622:16815							
ANR	3958294	FunctionDef	torekHash (const YourString & s)		3958293	0					
ANR	3958295	CompoundStatement		583:51:16673:16815	3958293	0					
ANR	3958296	IdentifierDeclStatement	unsigned int hash = 0 ;	584:1:16676:16697	3958293	0	True				
ANR	3958297	IdentifierDecl	hash = 0		3958293	0					
ANR	3958298	IdentifierDeclType	unsigned int		3958293	0					
ANR	3958299	Identifier	hash		3958293	1					
ANR	3958300	AssignmentExpression	hash = 0		3958293	2		=			
ANR	3958301	Identifier	hash		3958293	0					
ANR	3958302	PrimaryExpression	0		3958293	1					
ANR	3958303	IdentifierDeclStatement	const char * p = s . s ;	586:1:16701:16720	3958293	1	True				
ANR	3958304	IdentifierDecl	* p = s . s		3958293	0					
ANR	3958305	IdentifierDeclType	const char *		3958293	0					
ANR	3958306	Identifier	p		3958293	1					
ANR	3958307	AssignmentExpression	* p = s . s		3958293	2		=			
ANR	3958308	Identifier	p		3958293	0					
ANR	3958309	MemberAccess	s . s		3958293	1					
ANR	3958310	Identifier	s		3958293	0					
ANR	3958311	Identifier	s		3958293	1					
ANR	3958312	WhileStatement	while ( * p )		3958293	2					
ANR	3958313	Condition	* p	587:8:16730:16731	3958293	0	True				
ANR	3958314	UnaryOperationExpression	* p		3958293	0					
ANR	3958315	UnaryOperator	*		3958293	0					
ANR	3958316	Identifier	p		3958293	1					
ANR	3958317	CompoundStatement		5:12:60:60	3958293	1					
ANR	3958318	ExpressionStatement	hash = ( hash << 5 ) + hash + ( unsigned char ) tolower ( * p )	588:2:16738:16788	3958293	0	True				
ANR	3958319	AssignmentExpression	hash = ( hash << 5 ) + hash + ( unsigned char ) tolower ( * p )		3958293	0		=			
ANR	3958320	Identifier	hash		3958293	0					
ANR	3958321	AdditiveExpression	( hash << 5 ) + hash + ( unsigned char ) tolower ( * p )		3958293	1		+			
ANR	3958322	ShiftExpression	hash << 5		3958293	0		<<			
ANR	3958323	Identifier	hash		3958293	0					
ANR	3958324	PrimaryExpression	5		3958293	1					
ANR	3958325	AdditiveExpression	hash + ( unsigned char ) tolower ( * p )		3958293	1		+			
ANR	3958326	Identifier	hash		3958293	0					
ANR	3958327	CastExpression	( unsigned char ) tolower ( * p )		3958293	1					
ANR	3958328	CastTarget	unsigned char		3958293	0					
ANR	3958329	CallExpression	tolower ( * p )		3958293	1					
ANR	3958330	Callee	tolower		3958293	0					
ANR	3958331	Identifier	tolower		3958293	0					
ANR	3958332	ArgumentList	* p		3958293	1					
ANR	3958333	Argument	* p		3958293	0					
ANR	3958334	UnaryOperationExpression	* p		3958293	0					
ANR	3958335	UnaryOperator	*		3958293	0					
ANR	3958336	Identifier	p		3958293	1					
ANR	3958337	ExpressionStatement	p ++	589:2:16792:16795	3958293	1	True				
ANR	3958338	PostIncDecOperationExpression	p ++		3958293	0					
ANR	3958339	Identifier	p		3958293	0					
ANR	3958340	IncDec	++		3958293	1					
ANR	3958341	ReturnStatement	return hash ;	592:1:16802:16813	3958293	3	True				
ANR	3958342	Identifier	hash		3958293	0					
ANR	3958343	ReturnType	static unsigned int		3958293	1					
ANR	3958344	Identifier	torekHash		3958293	2					
ANR	3958345	ParameterList	const YourString & s		3958293	3					
ANR	3958346	Parameter	const YourString & s	583:30:16652:16670	3958293	0	True				
ANR	3958347	ParameterType	const YourString &		3958293	0					
ANR	3958348	Identifier	s		3958293	1					
ANR	3958349	CFGEntryNode	ENTRY		3958293		True				
ANR	3958350	CFGExitNode	EXIT		3958293		True				
ANR	3958351	Symbol	p		3958293						
ANR	3958352	Symbol	s		3958293						
ANR	3958353	Symbol	tolower		3958293						
ANR	3958354	Symbol	s . s		3958293						
ANR	3958355	Symbol	* p		3958293						
ANR	3958356	Symbol	hash		3958293						
ANR	3958357	Function	DWORDHash	595:0:16818:16880							
ANR	3958358	FunctionDef	DWORDHash (const DWORD & n)		3958357	0					
ANR	3958359	CompoundStatement		597:0:16867:16880	3958357	0					
ANR	3958360	ReturnStatement	return n ;	598:1:16870:16878	3958357	0	True				
ANR	3958361	Identifier	n		3958357	0					
ANR	3958362	ReturnType	static unsigned int		3958357	1					
ANR	3958363	Identifier	DWORDHash		3958357	2					
ANR	3958364	ParameterList	const DWORD & n		3958357	3					
ANR	3958365	Parameter	const DWORD & n	596:11:16849:16863	3958357	0	True				
ANR	3958366	ParameterType	const DWORD &		3958357	0					
ANR	3958367	Identifier	n		3958357	1					
ANR	3958368	CFGEntryNode	ENTRY		3958357		True				
ANR	3958369	CFGExitNode	EXIT		3958357		True				
ANR	3958370	Symbol	n		3958357						
ANR	3958371	ClassDef	<unnamed>	602:13:16931:24931							
ANR	3958372	DeclStmt									
ANR	3958373	Decl							DWORD	DWORD	type
ANR	3958374	DeclStmt									
ANR	3958375	Decl							char	char *	psz
ANR	3958376	DeclStmt									
ANR	3958377	Decl								 [ ]	aPerfTimerTypeNames
ANR	3958378	Function	dump_perf_timer_type_name_table	765:0:24934:25196							
ANR	3958379	FunctionDef	dump_perf_timer_type_name_table ()		3958378	0					
ANR	3958380	CompoundStatement		766:0:24981:25196	3958378	0					
ANR	3958381	ExpressionStatement	"dprintf ( D_ALWAYS , ""Perf Timer Type Names:\\n"" )"	767:1:24984:25029	3958378	0	True				
ANR	3958382	CallExpression	"dprintf ( D_ALWAYS , ""Perf Timer Type Names:\\n"" )"		3958378	0					
ANR	3958383	Callee	dprintf		3958378	0					
ANR	3958384	Identifier	dprintf		3958378	0					
ANR	3958385	ArgumentList	D_ALWAYS		3958378	1					
ANR	3958386	Argument	D_ALWAYS		3958378	0					
ANR	3958387	Identifier	D_ALWAYS		3958378	0					
ANR	3958388	Argument	"""Perf Timer Type Names:\\n"""		3958378	1					
ANR	3958389	PrimaryExpression	"""Perf Timer Type Names:\\n"""		3958378	0					
ANR	3958390	ForStatement	for ( int ii = 0 ; ii < NUM_ELEMENTS ( aPerfTimerTypeNames ) ; ++ ii )		3958378	1					
ANR	3958391	ForInit	int ii = 0 ;	768:6:25037:25047	3958378	0	True				
ANR	3958392	IdentifierDeclStatement	int ii = 0 ;		3958378	0					
ANR	3958393	IdentifierDecl	ii = 0		3958378	0					
ANR	3958394	IdentifierDeclType	int		3958378	0					
ANR	3958395	Identifier	ii		3958378	1					
ANR	3958396	AssignmentExpression	ii = 0		3958378	2		=			
ANR	3958397	Identifier	ii		3958378	0					
ANR	3958398	PrimaryExpression	0		3958378	1					
ANR	3958399	Condition	ii < NUM_ELEMENTS ( aPerfTimerTypeNames )	768:18:25049:25086	3958378	1	True				
ANR	3958400	RelationalExpression	ii < NUM_ELEMENTS ( aPerfTimerTypeNames )		3958378	0		<			
ANR	3958401	Identifier	ii		3958378	0					
ANR	3958402	CallExpression	NUM_ELEMENTS ( aPerfTimerTypeNames )		3958378	1					
ANR	3958403	Callee	NUM_ELEMENTS		3958378	0					
ANR	3958404	Identifier	NUM_ELEMENTS		3958378	0					
ANR	3958405	ArgumentList	aPerfTimerTypeNames		3958378	1					
ANR	3958406	Argument	aPerfTimerTypeNames		3958378	0					
ANR	3958407	Identifier	aPerfTimerTypeNames		3958378	0					
ANR	3958408	UnaryExpression	++ ii	768:58:25089:25092	3958378	2	True				
ANR	3958409	IncDec	++		3958378	0					
ANR	3958410	Identifier	ii		3958378	1					
ANR	3958411	CompoundStatement		4:1:114:114	3958378	3					
ANR	3958412	ExpressionStatement	"dprintf ( D_ALWAYS , ""0x%08X %s\\n"" , aPerfTimerTypeNames [ ii ] . type , aPerfTimerTypeNames [ ii ] . psz )"	770:2:25100:25191	3958378	0	True				
ANR	3958413	CallExpression	"dprintf ( D_ALWAYS , ""0x%08X %s\\n"" , aPerfTimerTypeNames [ ii ] . type , aPerfTimerTypeNames [ ii ] . psz )"		3958378	0					
ANR	3958414	Callee	dprintf		3958378	0					
ANR	3958415	Identifier	dprintf		3958378	0					
ANR	3958416	ArgumentList	D_ALWAYS		3958378	1					
ANR	3958417	Argument	D_ALWAYS		3958378	0					
ANR	3958418	Identifier	D_ALWAYS		3958378	0					
ANR	3958419	Argument	"""0x%08X %s\\n"""		3958378	1					
ANR	3958420	PrimaryExpression	"""0x%08X %s\\n"""		3958378	0					
ANR	3958421	Argument	aPerfTimerTypeNames [ ii ] . type		3958378	2					
ANR	3958422	MemberAccess	aPerfTimerTypeNames [ ii ] . type		3958378	0					
ANR	3958423	ArrayIndexing	aPerfTimerTypeNames [ ii ]		3958378	0					
ANR	3958424	Identifier	aPerfTimerTypeNames		3958378	0					
ANR	3958425	Identifier	ii		3958378	1					
ANR	3958426	Identifier	type		3958378	1					
ANR	3958427	Argument	aPerfTimerTypeNames [ ii ] . psz		3958378	3					
ANR	3958428	MemberAccess	aPerfTimerTypeNames [ ii ] . psz		3958378	0					
ANR	3958429	ArrayIndexing	aPerfTimerTypeNames [ ii ]		3958378	0					
ANR	3958430	Identifier	aPerfTimerTypeNames		3958378	0					
ANR	3958431	Identifier	ii		3958378	1					
ANR	3958432	Identifier	psz		3958378	1					
ANR	3958433	ReturnType	static void		3958378	1					
ANR	3958434	Identifier	dump_perf_timer_type_name_table		3958378	2					
ANR	3958435	ParameterList			3958378	3					
ANR	3958436	CFGEntryNode	ENTRY		3958378		True				
ANR	3958437	CFGExitNode	EXIT		3958378		True				
ANR	3958438	Symbol	ii		3958378						
ANR	3958439	Symbol	NUM_ELEMENTS		3958378						
ANR	3958440	Symbol	aPerfTimerTypeNames		3958378						
ANR	3958441	Symbol	aPerfTimerTypeNames [ ii ] . psz		3958378						
ANR	3958442	Symbol	* ii		3958378						
ANR	3958443	Symbol	aPerfTimerTypeNames [ ii ] . type		3958378						
ANR	3958444	Symbol	D_ALWAYS		3958378						
ANR	3958445	Symbol	* aPerfTimerTypeNames		3958378						
ANR	3958446	Function	perf_timer_type_name	773:0:25198:25418							
ANR	3958447	FunctionDef	perf_timer_type_name (DWORD type)		3958446	0					
ANR	3958448	CompoundStatement		774:0:25251:25418	3958446	0					
ANR	3958449	ForStatement	for ( int ii = 0 ; ii < NUM_ELEMENTS ( aPerfTimerTypeNames ) ; ++ ii )		3958446	0					
ANR	3958450	ForInit	int ii = 0 ;	775:6:25259:25269	3958446	0	True				
ANR	3958451	IdentifierDeclStatement	int ii = 0 ;		3958446	0					
ANR	3958452	IdentifierDecl	ii = 0		3958446	0					
ANR	3958453	IdentifierDeclType	int		3958446	0					
ANR	3958454	Identifier	ii		3958446	1					
ANR	3958455	AssignmentExpression	ii = 0		3958446	2		=			
ANR	3958456	Identifier	ii		3958446	0					
ANR	3958457	PrimaryExpression	0		3958446	1					
ANR	3958458	Condition	ii < NUM_ELEMENTS ( aPerfTimerTypeNames )	775:18:25271:25308	3958446	1	True				
ANR	3958459	RelationalExpression	ii < NUM_ELEMENTS ( aPerfTimerTypeNames )		3958446	0		<			
ANR	3958460	Identifier	ii		3958446	0					
ANR	3958461	CallExpression	NUM_ELEMENTS ( aPerfTimerTypeNames )		3958446	1					
ANR	3958462	Callee	NUM_ELEMENTS		3958446	0					
ANR	3958463	Identifier	NUM_ELEMENTS		3958446	0					
ANR	3958464	ArgumentList	aPerfTimerTypeNames		3958446	1					
ANR	3958465	Argument	aPerfTimerTypeNames		3958446	0					
ANR	3958466	Identifier	aPerfTimerTypeNames		3958446	0					
ANR	3958467	UnaryExpression	++ ii	775:58:25311:25314	3958446	2	True				
ANR	3958468	IncDec	++		3958446	0					
ANR	3958469	Identifier	ii		3958446	1					
ANR	3958470	CompoundStatement		3:1:66:66	3958446	3					
ANR	3958471	IfStatement	if ( type == aPerfTimerTypeNames [ ii ] . type )		3958446	0					
ANR	3958472	Condition	type == aPerfTimerTypeNames [ ii ] . type	777:6:25326:25361	3958446	0	True				
ANR	3958473	EqualityExpression	type == aPerfTimerTypeNames [ ii ] . type		3958446	0		==			
ANR	3958474	Identifier	type		3958446	0					
ANR	3958475	MemberAccess	aPerfTimerTypeNames [ ii ] . type		3958446	1					
ANR	3958476	ArrayIndexing	aPerfTimerTypeNames [ ii ]		3958446	0					
ANR	3958477	Identifier	aPerfTimerTypeNames		3958446	0					
ANR	3958478	Identifier	ii		3958446	1					
ANR	3958479	Identifier	type		3958446	1					
ANR	3958480	ReturnStatement	return aPerfTimerTypeNames [ ii ] . psz ;	778:3:25367:25401	3958446	1	True				
ANR	3958481	MemberAccess	aPerfTimerTypeNames [ ii ] . psz		3958446	0					
ANR	3958482	ArrayIndexing	aPerfTimerTypeNames [ ii ]		3958446	0					
ANR	3958483	Identifier	aPerfTimerTypeNames		3958446	0					
ANR	3958484	Identifier	ii		3958446	1					
ANR	3958485	Identifier	psz		3958446	1					
ANR	3958486	ReturnStatement	"return """" ;"	780:1:25407:25416	3958446	1	True				
ANR	3958487	PrimaryExpression	""""""		3958446	0					
ANR	3958488	ReturnType	static const char *		3958446	1					
ANR	3958489	Identifier	perf_timer_type_name		3958446	2					
ANR	3958490	ParameterList	DWORD type		3958446	3					
ANR	3958491	Parameter	DWORD type	773:41:25239:25248	3958446	0	True				
ANR	3958492	ParameterType	DWORD		3958446	0					
ANR	3958493	Identifier	type		3958446	1					
ANR	3958494	CFGEntryNode	ENTRY		3958446		True				
ANR	3958495	CFGExitNode	EXIT		3958446		True				
ANR	3958496	Symbol	ii		3958446						
ANR	3958497	Symbol	NUM_ELEMENTS		3958446						
ANR	3958498	Symbol	aPerfTimerTypeNames		3958446						
ANR	3958499	Symbol	aPerfTimerTypeNames [ ii ] . psz		3958446						
ANR	3958500	Symbol	* ii		3958446						
ANR	3958501	Symbol	aPerfTimerTypeNames [ ii ] . type		3958446						
ANR	3958502	Symbol	type		3958446						
ANR	3958503	Symbol	* aPerfTimerTypeNames		3958446						
ANR	3958504	ClassDef	<unnamed>	794:0:25736:26487							
ANR	3958505	DeclStmt									
ANR	3958506	Decl							int	int	WinPerf_CounterValueType
ANR	3958507	ClassDef	_WinPerf_CounterValue	813:8:26538:26811							
ANR	3958508	DeclStmt									
ANR	3958509	Decl							WinPerf_CounterValueType	WinPerf_CounterValueType	type
ANR	3958510	DeclStmt									
ANR	3958511	Decl							int	int	spare
ANR	3958512	ClassDef	<unnamed>	816:1:26635:26728							
ANR	3958513	DeclStmt									
ANR	3958514	Decl							int	int	i
ANR	3958515	DeclStmt									
ANR	3958516	Decl							UINT	UINT	u
ANR	3958517	DeclStmt									
ANR	3958518	Decl							LONGLONG	LONGLONG	ll
ANR	3958519	DeclStmt									
ANR	3958520	Decl							ULONGLONG	ULONGLONG	ul
ANR	3958521	DeclStmt									
ANR	3958522	Decl							double	double	d
ANR	3958523	DeclStmt									
ANR	3958524	Decl									value
ANR	3958525	DeclStmt									
ANR	3958526	Decl							_WinPerf_CounterValue	_WinPerf_CounterValue	WinPerf_CounterValue
ANR	3958527	ClassDef	_WinPerf_TimerDeltas	826:8:26822:27127							
ANR	3958528	DeclStmt									
ANR	3958529	Decl							LONGLONG	LONGLONG	obj
ANR	3958530	DeclStmt									
ANR	3958531	Decl							LONGLONG	LONGLONG	objabs
ANR	3958532	DeclStmt									
ANR	3958533	Decl							LONGLONG	LONGLONG	objfreq
ANR	3958534	DeclStmt									
ANR	3958535	Decl							LONGLONG	LONGLONG	head
ANR	3958536	DeclStmt									
ANR	3958537	Decl							LONGLONG	LONGLONG	headfreq
ANR	3958538	DeclStmt									
ANR	3958539	Decl							LONGLONG	LONGLONG	nanos
ANR	3958540	DeclStmt									
ANR	3958541	Decl							_WinPerf_TimerDeltas	_WinPerf_TimerDeltas	WinPerf_TimerDeltas
ANR	3958542	ClassDef	<unnamed>	838:7:27220:27680							
ANR	3958543	DeclStmt									
ANR	3958544	Decl							char	char *	pszzNames
ANR	3958545	DeclStmt									
ANR	3958546	Decl							"HashTable < YourString , const char * >"	"HashTable < YourString , const char * > *"	pPerfTable
ANR	3958547	DeclStmt									
ANR	3958548	Decl							"HashTable < DWORD , const char * >"	"HashTable < DWORD , const char * > *"	pNameTable
ANR	3958549	DeclStmt									
ANR	3958550	Decl							"HashTable < DWORD , WinPerf_QueryResult >"	"HashTable < DWORD , WinPerf_QueryResult > *"	pQueries
ANR	3958551	DeclStmt									
ANR	3958552	Decl									rl
ANR	3958553	Function	init_windows_performance_hashtable	851:0:27793:29318							
ANR	3958554	FunctionDef	init_windows_performance_hashtable ()		3958553	0					
ANR	3958555	CompoundStatement		852:0:27842:29318	3958553	0					
ANR	3958556	IfStatement	if ( rl . pPerfTable )		3958553	0					
ANR	3958557	Condition	rl . pPerfTable	853:5:27849:27861	3958553	0	True				
ANR	3958558	MemberAccess	rl . pPerfTable		3958553	0					
ANR	3958559	Identifier	rl		3958553	0					
ANR	3958560	Identifier	pPerfTable		3958553	1					
ANR	3958561	ReturnStatement	return true ;	854:2:27866:27877	3958553	1	True				
ANR	3958562	Identifier	true		3958553	0					
ANR	3958563	IdentifierDeclStatement	DWORD cbData = 0 ;	858:1:27920:27936	3958553	1	True				
ANR	3958564	IdentifierDecl	cbData = 0		3958553	0					
ANR	3958565	IdentifierDeclType	DWORD		3958553	0					
ANR	3958566	Identifier	cbData		3958553	1					
ANR	3958567	AssignmentExpression	cbData = 0		3958553	2		=			
ANR	3958568	Identifier	cbData		3958553	0					
ANR	3958569	PrimaryExpression	0		3958553	1					
ANR	3958570	IdentifierDeclStatement	DWORD vtype = REG_SZ ;	859:1:27939:27959	3958553	2	True				
ANR	3958571	IdentifierDecl	vtype = REG_SZ		3958553	0					
ANR	3958572	IdentifierDeclType	DWORD		3958553	0					
ANR	3958573	Identifier	vtype		3958553	1					
ANR	3958574	AssignmentExpression	vtype = REG_SZ		3958553	2		=			
ANR	3958575	Identifier	REG_SZ		3958553	0					
ANR	3958576	Identifier	REG_SZ		3958553	1					
ANR	3958577	IdentifierDeclStatement	"LONG lres = RegQueryValueEx ( HKEY_PERFORMANCE_TEXT , ""Counter"" , NULL , & vtype , NULL , & cbData ) ;"	860:1:27963:28053	3958553	3	True				
ANR	3958578	IdentifierDecl	"lres = RegQueryValueEx ( HKEY_PERFORMANCE_TEXT , ""Counter"" , NULL , & vtype , NULL , & cbData )"		3958553	0					
ANR	3958579	IdentifierDeclType	LONG		3958553	0					
ANR	3958580	Identifier	lres		3958553	1					
ANR	3958581	AssignmentExpression	"lres = RegQueryValueEx ( HKEY_PERFORMANCE_TEXT , ""Counter"" , NULL , & vtype , NULL , & cbData )"		3958553	2		=			
ANR	3958582	Identifier	lres		3958553	0					
ANR	3958583	CallExpression	"RegQueryValueEx ( HKEY_PERFORMANCE_TEXT , ""Counter"" , NULL , & vtype , NULL , & cbData )"		3958553	1					
ANR	3958584	Callee	RegQueryValueEx		3958553	0					
ANR	3958585	Identifier	RegQueryValueEx		3958553	0					
ANR	3958586	ArgumentList	HKEY_PERFORMANCE_TEXT		3958553	1					
ANR	3958587	Argument	HKEY_PERFORMANCE_TEXT		3958553	0					
ANR	3958588	Identifier	HKEY_PERFORMANCE_TEXT		3958553	0					
ANR	3958589	Argument	"""Counter"""		3958553	1					
ANR	3958590	PrimaryExpression	"""Counter"""		3958553	0					
ANR	3958591	Argument	NULL		3958553	2					
ANR	3958592	Identifier	NULL		3958553	0					
ANR	3958593	Argument	& vtype		3958553	3					
ANR	3958594	UnaryOperationExpression	& vtype		3958553	0					
ANR	3958595	UnaryOperator	&		3958553	0					
ANR	3958596	Identifier	vtype		3958553	1					
ANR	3958597	Argument	NULL		3958553	4					
ANR	3958598	Identifier	NULL		3958553	0					
ANR	3958599	Argument	& cbData		3958553	5					
ANR	3958600	UnaryOperationExpression	& cbData		3958553	0					
ANR	3958601	UnaryOperator	&		3958553	0					
ANR	3958602	Identifier	cbData		3958553	1					
ANR	3958603	IfStatement	if ( ERROR_SUCCESS == lres )		3958553	4					
ANR	3958604	Condition	ERROR_SUCCESS == lres	861:5:28060:28080	3958553	0	True				
ANR	3958605	EqualityExpression	ERROR_SUCCESS == lres		3958553	0		==			
ANR	3958606	Identifier	ERROR_SUCCESS		3958553	0					
ANR	3958607	Identifier	lres		3958553	1					
ANR	3958608	CompoundStatement		11:1:241:241	3958553	1					
ANR	3958609	ExpressionStatement	rl . pszzNames = ( char * ) malloc ( cbData )	863:2:28088:28124	3958553	0	True				
ANR	3958610	AssignmentExpression	rl . pszzNames = ( char * ) malloc ( cbData )		3958553	0		=			
ANR	3958611	MemberAccess	rl . pszzNames		3958553	0					
ANR	3958612	Identifier	rl		3958553	0					
ANR	3958613	Identifier	pszzNames		3958553	1					
ANR	3958614	CastExpression	( char * ) malloc ( cbData )		3958553	1					
ANR	3958615	CastTarget	char *		3958553	0					
ANR	3958616	CallExpression	malloc ( cbData )		3958553	1					
ANR	3958617	Callee	malloc		3958553	0					
ANR	3958618	Identifier	malloc		3958553	0					
ANR	3958619	ArgumentList	cbData		3958553	1					
ANR	3958620	Argument	cbData		3958553	0					
ANR	3958621	Identifier	cbData		3958553	0					
ANR	3958622	ExpressionStatement	"lres = RegQueryValueEx ( HKEY_PERFORMANCE_TEXT , ""Counter"" , NULL , & vtype , ( byte * ) rl . pszzNames , & cbData )"	864:2:28128:28228	3958553	1	True				
ANR	3958623	AssignmentExpression	"lres = RegQueryValueEx ( HKEY_PERFORMANCE_TEXT , ""Counter"" , NULL , & vtype , ( byte * ) rl . pszzNames , & cbData )"		3958553	0		=			
ANR	3958624	Identifier	lres		3958553	0					
ANR	3958625	CallExpression	"RegQueryValueEx ( HKEY_PERFORMANCE_TEXT , ""Counter"" , NULL , & vtype , ( byte * ) rl . pszzNames , & cbData )"		3958553	1					
ANR	3958626	Callee	RegQueryValueEx		3958553	0					
ANR	3958627	Identifier	RegQueryValueEx		3958553	0					
ANR	3958628	ArgumentList	HKEY_PERFORMANCE_TEXT		3958553	1					
ANR	3958629	Argument	HKEY_PERFORMANCE_TEXT		3958553	0					
ANR	3958630	Identifier	HKEY_PERFORMANCE_TEXT		3958553	0					
ANR	3958631	Argument	"""Counter"""		3958553	1					
ANR	3958632	PrimaryExpression	"""Counter"""		3958553	0					
ANR	3958633	Argument	NULL		3958553	2					
ANR	3958634	Identifier	NULL		3958553	0					
ANR	3958635	Argument	& vtype		3958553	3					
ANR	3958636	UnaryOperationExpression	& vtype		3958553	0					
ANR	3958637	UnaryOperator	&		3958553	0					
ANR	3958638	Identifier	vtype		3958553	1					
ANR	3958639	Argument	( byte * ) rl . pszzNames		3958553	4					
ANR	3958640	CastExpression	( byte * ) rl . pszzNames		3958553	0					
ANR	3958641	CastTarget	byte *		3958553	0					
ANR	3958642	MemberAccess	rl . pszzNames		3958553	1					
ANR	3958643	Identifier	rl		3958553	0					
ANR	3958644	Identifier	pszzNames		3958553	1					
ANR	3958645	Argument	& cbData		3958553	5					
ANR	3958646	UnaryOperationExpression	& cbData		3958553	0					
ANR	3958647	UnaryOperator	&		3958553	0					
ANR	3958648	Identifier	cbData		3958553	1					
ANR	3958649	IfStatement	if ( ERROR_SUCCESS != lres )		3958553	2					
ANR	3958650	Condition	ERROR_SUCCESS != lres	865:6:28236:28256	3958553	0	True				
ANR	3958651	EqualityExpression	ERROR_SUCCESS != lres		3958553	0		!=			
ANR	3958652	Identifier	ERROR_SUCCESS		3958553	0					
ANR	3958653	Identifier	lres		3958553	1					
ANR	3958654	CompoundStatement		15:2:418:418	3958553	1					
ANR	3958655	IfStatement	if ( rl . pszzNames )		3958553	0					
ANR	3958656	Condition	rl . pszzNames	867:7:28270:28281	3958553	0	True				
ANR	3958657	MemberAccess	rl . pszzNames		3958553	0					
ANR	3958658	Identifier	rl		3958553	0					
ANR	3958659	Identifier	pszzNames		3958553	1					
ANR	3958660	ExpressionStatement	free ( rl . pszzNames )	867:21:28284:28303	3958553	1	True				
ANR	3958661	CallExpression	free ( rl . pszzNames )		3958553	0					
ANR	3958662	Callee	free		3958553	0					
ANR	3958663	Identifier	free		3958553	0					
ANR	3958664	ArgumentList	rl . pszzNames		3958553	1					
ANR	3958665	Argument	rl . pszzNames		3958553	0					
ANR	3958666	MemberAccess	rl . pszzNames		3958553	0					
ANR	3958667	Identifier	rl		3958553	0					
ANR	3958668	Identifier	pszzNames		3958553	1					
ANR	3958669	ExpressionStatement	rl . pszzNames = NULL	868:3:28308:28327	3958553	1	True				
ANR	3958670	AssignmentExpression	rl . pszzNames = NULL		3958553	0		=			
ANR	3958671	MemberAccess	rl . pszzNames		3958553	0					
ANR	3958672	Identifier	rl		3958553	0					
ANR	3958673	Identifier	pszzNames		3958553	1					
ANR	3958674	Identifier	NULL		3958553	1					
ANR	3958675	IfStatement	if ( ERROR_SUCCESS != lres )		3958553	5					
ANR	3958676	Condition	ERROR_SUCCESS != lres	871:5:28341:28361	3958553	0	True				
ANR	3958677	EqualityExpression	ERROR_SUCCESS != lres		3958553	0		!=			
ANR	3958678	Identifier	ERROR_SUCCESS		3958553	0					
ANR	3958679	Identifier	lres		3958553	1					
ANR	3958680	CompoundStatement		23:2:589:609	3958553	1					
ANR	3958681	IdentifierDeclStatement	char szMsg [ MAX_PATH ] ;	874:2:28432:28452	3958553	0	True				
ANR	3958682	IdentifierDecl	szMsg [ MAX_PATH ]		3958553	0					
ANR	3958683	IdentifierDeclType	char [ MAX_PATH ]		3958553	0					
ANR	3958684	Identifier	szMsg		3958553	1					
ANR	3958685	Identifier	MAX_PATH		3958553	2					
ANR	3958686	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to read Performance Text! Reason: %s\\n"" , GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) ) )"	875:2:28456:28594	3958553	1	True				
ANR	3958687	CallExpression	"dprintf ( D_ALWAYS , ""Failed to read Performance Text! Reason: %s\\n"" , GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) ) )"		3958553	0					
ANR	3958688	Callee	dprintf		3958553	0					
ANR	3958689	Identifier	dprintf		3958553	0					
ANR	3958690	ArgumentList	D_ALWAYS		3958553	1					
ANR	3958691	Argument	D_ALWAYS		3958553	0					
ANR	3958692	Identifier	D_ALWAYS		3958553	0					
ANR	3958693	Argument	"""Failed to read Performance Text! Reason: %s\\n"""		3958553	1					
ANR	3958694	PrimaryExpression	"""Failed to read Performance Text! Reason: %s\\n"""		3958553	0					
ANR	3958695	Argument	"GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) )"		3958553	2					
ANR	3958696	CallExpression	"GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) )"		3958553	0					
ANR	3958697	Callee	GetLastErrMessage		3958553	0					
ANR	3958698	Identifier	GetLastErrMessage		3958553	0					
ANR	3958699	ArgumentList	GetLastError ( )		3958553	1					
ANR	3958700	Argument	GetLastError ( )		3958553	0					
ANR	3958701	CallExpression	GetLastError ( )		3958553	0					
ANR	3958702	Callee	GetLastError		3958553	0					
ANR	3958703	Identifier	GetLastError		3958553	0					
ANR	3958704	ArgumentList			3958553	1					
ANR	3958705	Argument	szMsg		3958553	1					
ANR	3958706	Identifier	szMsg		3958553	0					
ANR	3958707	Argument	NUM_ELEMENTS ( szMsg )		3958553	2					
ANR	3958708	CallExpression	NUM_ELEMENTS ( szMsg )		3958553	0					
ANR	3958709	Callee	NUM_ELEMENTS		3958553	0					
ANR	3958710	Identifier	NUM_ELEMENTS		3958553	0					
ANR	3958711	ArgumentList	szMsg		3958553	1					
ANR	3958712	Argument	szMsg		3958553	0					
ANR	3958713	Identifier	szMsg		3958553	0					
ANR	3958714	ElseStatement	else		3958553	0					
ANR	3958715	IfStatement	if ( REG_MULTI_SZ == vtype )		3958553	0					
ANR	3958716	Condition	REG_MULTI_SZ == vtype	879:10:28609:28629	3958553	0	True				
ANR	3958717	EqualityExpression	REG_MULTI_SZ == vtype		3958553	0		==			
ANR	3958718	Identifier	REG_MULTI_SZ		3958553	0					
ANR	3958719	Identifier	vtype		3958553	1					
ANR	3958720	CompoundStatement		29:1:790:790	3958553	1					
ANR	3958721	ExpressionStatement	"rl . pQueries = new HashTable < DWORD , WinPerf_QueryResult > ( 2 , DWORDHash , updateDuplicateKeys )"	881:2:28637:28729	3958553	0	True				
ANR	3958722	AssignmentExpression	"rl . pQueries = new HashTable < DWORD , WinPerf_QueryResult > ( 2 , DWORDHash , updateDuplicateKeys )"		3958553	0		=			
ANR	3958723	MemberAccess	rl . pQueries		3958553	0					
ANR	3958724	Identifier	rl		3958553	0					
ANR	3958725	Identifier	pQueries		3958553	1					
ANR	3958726	Expression	"2 , DWORDHash , updateDuplicateKeys"		3958553	1					
ANR	3958727	PrimaryExpression	2		3958553	0					
ANR	3958728	Expression	"DWORDHash , updateDuplicateKeys"		3958553	1					
ANR	3958729	Identifier	DWORDHash		3958553	0					
ANR	3958730	Identifier	updateDuplicateKeys		3958553	1					
ANR	3958731	ExpressionStatement	"rl . pPerfTable = new HashTable < YourString , const char * > ( 4000 , torekHash , allowDuplicateKeys )"	882:2:28733:28825	3958553	1	True				
ANR	3958732	AssignmentExpression	"rl . pPerfTable = new HashTable < YourString , const char * > ( 4000 , torekHash , allowDuplicateKeys )"		3958553	0		=			
ANR	3958733	MemberAccess	rl . pPerfTable		3958553	0					
ANR	3958734	Identifier	rl		3958553	0					
ANR	3958735	Identifier	pPerfTable		3958553	1					
ANR	3958736	Expression	"4000 , torekHash , allowDuplicateKeys"		3958553	1					
ANR	3958737	PrimaryExpression	4000		3958553	0					
ANR	3958738	Expression	"torekHash , allowDuplicateKeys"		3958553	1					
ANR	3958739	Identifier	torekHash		3958553	0					
ANR	3958740	Identifier	allowDuplicateKeys		3958553	1					
ANR	3958741	ExpressionStatement	"rl . pNameTable = new HashTable < DWORD , const char * > ( 4000 , DWORDHash , rejectDuplicateKeys )"	883:2:28829:28917	3958553	2	True				
ANR	3958742	AssignmentExpression	"rl . pNameTable = new HashTable < DWORD , const char * > ( 4000 , DWORDHash , rejectDuplicateKeys )"		3958553	0		=			
ANR	3958743	MemberAccess	rl . pNameTable		3958553	0					
ANR	3958744	Identifier	rl		3958553	0					
ANR	3958745	Identifier	pNameTable		3958553	1					
ANR	3958746	Expression	"4000 , DWORDHash , rejectDuplicateKeys"		3958553	1					
ANR	3958747	PrimaryExpression	4000		3958553	0					
ANR	3958748	Expression	"DWORDHash , rejectDuplicateKeys"		3958553	1					
ANR	3958749	Identifier	DWORDHash		3958553	0					
ANR	3958750	Identifier	rejectDuplicateKeys		3958553	1					
ANR	3958751	IfStatement	if ( rl . pPerfTable )		3958553	3					
ANR	3958752	Condition	rl . pPerfTable	884:6:28925:28937	3958553	0	True				
ANR	3958753	MemberAccess	rl . pPerfTable		3958553	0					
ANR	3958754	Identifier	rl		3958553	0					
ANR	3958755	Identifier	pPerfTable		3958553	1					
ANR	3958756	CompoundStatement		35:3:1104:1129	3958553	1					
ANR	3958757	IdentifierDeclStatement	char * psz = rl . pszzNames ;	886:3:28947:28972	3958553	0	True				
ANR	3958758	IdentifierDecl	* psz = rl . pszzNames		3958553	0					
ANR	3958759	IdentifierDeclType	char *		3958553	0					
ANR	3958760	Identifier	psz		3958553	1					
ANR	3958761	AssignmentExpression	* psz = rl . pszzNames		3958553	2		=			
ANR	3958762	Identifier	psz		3958553	0					
ANR	3958763	MemberAccess	rl . pszzNames		3958553	1					
ANR	3958764	Identifier	rl		3958553	0					
ANR	3958765	Identifier	pszzNames		3958553	1					
ANR	3958766	WhileStatement	while ( * psz )		3958553	1					
ANR	3958767	Condition	* psz	887:10:28984:28987	3958553	0	True				
ANR	3958768	UnaryOperationExpression	* psz		3958553	0					
ANR	3958769	UnaryOperator	*		3958553	0					
ANR	3958770	Identifier	psz		3958553	1					
ANR	3958771	CompoundStatement		39:4:1183:1220	3958553	1					
ANR	3958772	IdentifierDeclStatement	char * pszIndex = psz ;	889:4:28999:29020	3958553	0	True				
ANR	3958773	IdentifierDecl	* pszIndex = psz		3958553	0					
ANR	3958774	IdentifierDeclType	char *		3958553	0					
ANR	3958775	Identifier	pszIndex		3958553	1					
ANR	3958776	AssignmentExpression	* pszIndex = psz		3958553	2		=			
ANR	3958777	Identifier	psz		3958553	0					
ANR	3958778	Identifier	psz		3958553	1					
ANR	3958779	IdentifierDeclStatement	char * pszName = psz + lstrlen ( psz ) + 1 ;	890:4:29026:29063	3958553	1	True				
ANR	3958780	IdentifierDecl	* pszName = psz + lstrlen ( psz ) + 1		3958553	0					
ANR	3958781	IdentifierDeclType	char *		3958553	0					
ANR	3958782	Identifier	pszName		3958553	1					
ANR	3958783	AssignmentExpression	* pszName = psz + lstrlen ( psz ) + 1		3958553	2		=			
ANR	3958784	Identifier	pszName		3958553	0					
ANR	3958785	AdditiveExpression	psz + lstrlen ( psz ) + 1		3958553	1		+			
ANR	3958786	Identifier	psz		3958553	0					
ANR	3958787	AdditiveExpression	lstrlen ( psz ) + 1		3958553	1		+			
ANR	3958788	CallExpression	lstrlen ( psz )		3958553	0					
ANR	3958789	Callee	lstrlen		3958553	0					
ANR	3958790	Identifier	lstrlen		3958553	0					
ANR	3958791	ArgumentList	psz		3958553	1					
ANR	3958792	Argument	psz		3958553	0					
ANR	3958793	Identifier	psz		3958553	0					
ANR	3958794	PrimaryExpression	1		3958553	1					
ANR	3958795	IfStatement	if ( * pszName )		3958553	2					
ANR	3958796	Condition	* pszName	891:8:29073:29080	3958553	0	True				
ANR	3958797	UnaryOperationExpression	* pszName		3958553	0					
ANR	3958798	UnaryOperator	*		3958553	0					
ANR	3958799	Identifier	pszName		3958553	1					
ANR	3958800	ExpressionStatement	psz = pszName + lstrlen ( pszName ) + 1	891:18:29083:29117	3958553	1	True				
ANR	3958801	AssignmentExpression	psz = pszName + lstrlen ( pszName ) + 1		3958553	0		=			
ANR	3958802	Identifier	psz		3958553	0					
ANR	3958803	AdditiveExpression	pszName + lstrlen ( pszName ) + 1		3958553	1		+			
ANR	3958804	Identifier	pszName		3958553	0					
ANR	3958805	AdditiveExpression	lstrlen ( pszName ) + 1		3958553	1		+			
ANR	3958806	CallExpression	lstrlen ( pszName )		3958553	0					
ANR	3958807	Callee	lstrlen		3958553	0					
ANR	3958808	Identifier	lstrlen		3958553	0					
ANR	3958809	ArgumentList	pszName		3958553	1					
ANR	3958810	Argument	pszName		3958553	0					
ANR	3958811	Identifier	pszName		3958553	0					
ANR	3958812	PrimaryExpression	1		3958553	1					
ANR	3958813	ExpressionStatement	"rl . pPerfTable -> insert ( pszName , pszIndex )"	892:4:29123:29163	3958553	3	True				
ANR	3958814	CallExpression	"rl . pPerfTable -> insert ( pszName , pszIndex )"		3958553	0					
ANR	3958815	Callee	rl . pPerfTable -> insert		3958553	0					
ANR	3958816	PtrMemberAccess	rl . pPerfTable -> insert		3958553	0					
ANR	3958817	MemberAccess	rl . pPerfTable		3958553	0					
ANR	3958818	Identifier	rl		3958553	0					
ANR	3958819	Identifier	pPerfTable		3958553	1					
ANR	3958820	Identifier	insert		3958553	1					
ANR	3958821	ArgumentList	pszName		3958553	1					
ANR	3958822	Argument	pszName		3958553	0					
ANR	3958823	Identifier	pszName		3958553	0					
ANR	3958824	Argument	pszIndex		3958553	1					
ANR	3958825	Identifier	pszIndex		3958553	0					
ANR	3958826	IfStatement	if ( rl . pNameTable )		3958553	4					
ANR	3958827	Condition	rl . pNameTable	893:8:29173:29185	3958553	0	True				
ANR	3958828	MemberAccess	rl . pNameTable		3958553	0					
ANR	3958829	Identifier	rl		3958553	0					
ANR	3958830	Identifier	pNameTable		3958553	1					
ANR	3958831	CompoundStatement		44:5:1356:1381	3958553	1					
ANR	3958832	IdentifierDeclStatement	DWORD ix = atoi ( pszIndex ) ;	895:5:29199:29224	3958553	0	True				
ANR	3958833	IdentifierDecl	ix = atoi ( pszIndex )		3958553	0					
ANR	3958834	IdentifierDeclType	DWORD		3958553	0					
ANR	3958835	Identifier	ix		3958553	1					
ANR	3958836	AssignmentExpression	ix = atoi ( pszIndex )		3958553	2		=			
ANR	3958837	Identifier	ix		3958553	0					
ANR	3958838	CallExpression	atoi ( pszIndex )		3958553	1					
ANR	3958839	Callee	atoi		3958553	0					
ANR	3958840	Identifier	atoi		3958553	0					
ANR	3958841	ArgumentList	pszIndex		3958553	1					
ANR	3958842	Argument	pszIndex		3958553	0					
ANR	3958843	Identifier	pszIndex		3958553	0					
ANR	3958844	ExpressionStatement	"rl . pNameTable -> insert ( ix , pszName )"	896:5:29231:29265	3958553	1	True				
ANR	3958845	CallExpression	"rl . pNameTable -> insert ( ix , pszName )"		3958553	0					
ANR	3958846	Callee	rl . pNameTable -> insert		3958553	0					
ANR	3958847	PtrMemberAccess	rl . pNameTable -> insert		3958553	0					
ANR	3958848	MemberAccess	rl . pNameTable		3958553	0					
ANR	3958849	Identifier	rl		3958553	0					
ANR	3958850	Identifier	pNameTable		3958553	1					
ANR	3958851	Identifier	insert		3958553	1					
ANR	3958852	ArgumentList	ix		3958553	1					
ANR	3958853	Argument	ix		3958553	0					
ANR	3958854	Identifier	ix		3958553	0					
ANR	3958855	Argument	pszName		3958553	1					
ANR	3958856	Identifier	pszName		3958553	0					
ANR	3958857	ReturnStatement	return ( rl . pPerfTable != NULL ) ;	901:1:29286:29316	3958553	6	True				
ANR	3958858	EqualityExpression	rl . pPerfTable != NULL		3958553	0		!=			
ANR	3958859	MemberAccess	rl . pPerfTable		3958553	0					
ANR	3958860	Identifier	rl		3958553	0					
ANR	3958861	Identifier	pPerfTable		3958553	1					
ANR	3958862	Identifier	NULL		3958553	1					
ANR	3958863	ReturnType	static bool		3958553	1					
ANR	3958864	Identifier	init_windows_performance_hashtable		3958553	2					
ANR	3958865	ParameterList			3958553	3					
ANR	3958866	CFGEntryNode	ENTRY		3958553		True				
ANR	3958867	CFGExitNode	EXIT		3958553		True				
ANR	3958868	Symbol	GetLastErrMessage		3958553						
ANR	3958869	Symbol	* psz		3958553						
ANR	3958870	Symbol	NUM_ELEMENTS		3958553						
ANR	3958871	Symbol	vtype		3958553						
ANR	3958872	Symbol	lres		3958553						
ANR	3958873	Symbol	lstrlen		3958553						
ANR	3958874	Symbol	rl . pQueries		3958553						
ANR	3958875	Symbol	REG_SZ		3958553						
ANR	3958876	Symbol	& cbData		3958553						
ANR	3958877	Symbol	rl . pPerfTable		3958553						
ANR	3958878	Symbol	& vtype		3958553						
ANR	3958879	Symbol	rl . pszzNames		3958553						
ANR	3958880	Symbol	pszName		3958553						
ANR	3958881	Symbol	ERROR_SUCCESS		3958553						
ANR	3958882	Symbol	RegQueryValueEx		3958553						
ANR	3958883	Symbol	allowDuplicateKeys		3958553						
ANR	3958884	Symbol	REG_MULTI_SZ		3958553						
ANR	3958885	Symbol	psz		3958553						
ANR	3958886	Symbol	szMsg		3958553						
ANR	3958887	Symbol	updateDuplicateKeys		3958553						
ANR	3958888	Symbol	cbData		3958553						
ANR	3958889	Symbol	atoi		3958553						
ANR	3958890	Symbol	malloc		3958553						
ANR	3958891	Symbol	torekHash		3958553						
ANR	3958892	Symbol	NULL		3958553						
ANR	3958893	Symbol	D_ALWAYS		3958553						
ANR	3958894	Symbol	pszIndex		3958553						
ANR	3958895	Symbol	rl . pNameTable		3958553						
ANR	3958896	Symbol	ix		3958553						
ANR	3958897	Symbol	DWORDHash		3958553						
ANR	3958898	Symbol	GetLastError		3958553						
ANR	3958899	Symbol	true		3958553						
ANR	3958900	Symbol	rejectDuplicateKeys		3958553						
ANR	3958901	Symbol	rl		3958553						
ANR	3958902	Symbol	HKEY_PERFORMANCE_TEXT		3958553						
ANR	3958903	Symbol	* pszName		3958553						
ANR	3958904	ClassDef	WinPerf_CounterDef	915:0:30015:30152							
ANR	3958905	Function	NameIndex	918:1:30084:30150							
ANR	3958906	FunctionDef	NameIndex ()		3958905	0					
ANR	3958907	CompoundStatement		918:25:30108:30150	3958905	0					
ANR	3958908	ReturnStatement	return this -> CounterNameTitleIndex ;	919:2:30112:30146	3958905	0	True				
ANR	3958909	PtrMemberAccess	this -> CounterNameTitleIndex		3958905	0					
ANR	3958910	Identifier	this		3958905	0					
ANR	3958911	Identifier	CounterNameTitleIndex		3958905	1					
ANR	3958912	ReturnType	DWORD		3958905	1					
ANR	3958913	Identifier	NameIndex		3958905	2					
ANR	3958914	ParameterList			3958905	3					
ANR	3958915	CFGEntryNode	ENTRY		3958905		True				
ANR	3958916	CFGExitNode	EXIT		3958905		True				
ANR	3958917	Symbol	* this		3958905						
ANR	3958918	Symbol	this -> CounterNameTitleIndex		3958905						
ANR	3958919	Symbol	this		3958905						
ANR	3958920	ClassDef	WinPerf_ObjInst	923:0:30156:31664							
ANR	3958921	Function	Next	926:1:30223:30348							
ANR	3958922	FunctionDef	Next ()		3958921	0					
ANR	3958923	CompoundStatement		926:38:30260:30348	3958921	0					
ANR	3958924	ReturnStatement	return ( const WinPerf_ObjInst * ) ( ( BYTE * ) this + this -> ByteLength + CounterBytes ( ) ) ;	927:2:30265:30345	3958921	0	True				
ANR	3958925	CastExpression	( const WinPerf_ObjInst * ) ( ( BYTE * ) this + this -> ByteLength + CounterBytes ( ) )		3958921	0					
ANR	3958926	CastTarget	const WinPerf_ObjInst *		3958921	0					
ANR	3958927	AdditiveExpression	( BYTE * ) this + this -> ByteLength + CounterBytes ( )		3958921	1		+			
ANR	3958928	CastExpression	( BYTE * ) this		3958921	0					
ANR	3958929	CastTarget	BYTE *		3958921	0					
ANR	3958930	Identifier	this		3958921	1					
ANR	3958931	AdditiveExpression	this -> ByteLength + CounterBytes ( )		3958921	1		+			
ANR	3958932	PtrMemberAccess	this -> ByteLength		3958921	0					
ANR	3958933	Identifier	this		3958921	0					
ANR	3958934	Identifier	ByteLength		3958921	1					
ANR	3958935	CallExpression	CounterBytes ( )		3958921	1					
ANR	3958936	Callee	CounterBytes		3958921	0					
ANR	3958937	Identifier	CounterBytes		3958921	0					
ANR	3958938	ArgumentList			3958921	1					
ANR	3958939	ReturnType	const WinPerf_ObjInst *		3958921	1					
ANR	3958940	Identifier	Next		3958921	2					
ANR	3958941	ParameterList			3958921	3					
ANR	3958942	CFGEntryNode	ENTRY		3958921		True				
ANR	3958943	CFGExitNode	EXIT		3958921		True				
ANR	3958944	Symbol	* this		3958921						
ANR	3958945	Symbol	this		3958921						
ANR	3958946	Symbol	this -> ByteLength		3958921						
ANR	3958947	Symbol	CounterBytes		3958921						
ANR	3958948	Function	Name	929:1:30351:30496							
ANR	3958949	FunctionDef	Name ()		3958948	1					
ANR	3958950	CompoundStatement		929:38:30388:30496	3958948	0					
ANR	3958951	IfStatement	if ( this -> NameLength <= 0 )		3958948	0					
ANR	3958952	Condition	this -> NameLength <= 0	930:6:30397:30417	3958948	0	True				
ANR	3958953	RelationalExpression	this -> NameLength <= 0		3958948	0		<=			
ANR	3958954	PtrMemberAccess	this -> NameLength		3958948	0					
ANR	3958955	Identifier	this		3958948	0					
ANR	3958956	Identifier	NameLength		3958948	1					
ANR	3958957	PrimaryExpression	0		3958948	1					
ANR	3958958	ReturnStatement	return NULL ;	931:3:30423:30434	3958948	1	True				
ANR	3958959	Identifier	NULL		3958948	0					
ANR	3958960	ReturnStatement	return ( const WCHAR * ) ( ( BYTE * ) this + this -> NameOffset ) ;	932:2:30438:30492	3958948	1	True				
ANR	3958961	CastExpression	( const WCHAR * ) ( ( BYTE * ) this + this -> NameOffset )		3958948	0					
ANR	3958962	CastTarget	const WCHAR *		3958948	0					
ANR	3958963	AdditiveExpression	( BYTE * ) this + this -> NameOffset		3958948	1		+			
ANR	3958964	CastExpression	( BYTE * ) this		3958948	0					
ANR	3958965	CastTarget	BYTE *		3958948	0					
ANR	3958966	Identifier	this		3958948	1					
ANR	3958967	PtrMemberAccess	this -> NameOffset		3958948	1					
ANR	3958968	Identifier	this		3958948	0					
ANR	3958969	Identifier	NameOffset		3958948	1					
ANR	3958970	ReturnType	const WCHAR *		3958948	1					
ANR	3958971	Identifier	Name		3958948	2					
ANR	3958972	ParameterList			3958948	3					
ANR	3958973	CFGEntryNode	ENTRY		3958948		True				
ANR	3958974	CFGExitNode	EXIT		3958948		True				
ANR	3958975	Symbol	* this		3958948						
ANR	3958976	Symbol	NULL		3958948						
ANR	3958977	Symbol	this -> NameOffset		3958948						
ANR	3958978	Symbol	this		3958948						
ANR	3958979	Symbol	this -> NameLength		3958948						
ANR	3958980	Function	Matches	940:1:30812:31308							
ANR	3958981	FunctionDef	Matches (const char * psz)		3958980	2					
ANR	3958982	CompoundStatement		940:38:30849:31308	3958980	0					
ANR	3958983	IfStatement	if ( psz && * psz == '*' )		3958980	0					
ANR	3958984	Condition	psz && * psz == '*'	941:6:30857:30874	3958980	0	True				
ANR	3958985	AndExpression	psz && * psz == '*'		3958980	0		&&			
ANR	3958986	Identifier	psz		3958980	0					
ANR	3958987	EqualityExpression	* psz == '*'		3958980	1		==			
ANR	3958988	UnaryOperationExpression	* psz		3958980	0					
ANR	3958989	UnaryOperator	*		3958980	0					
ANR	3958990	Identifier	psz		3958980	1					
ANR	3958991	PrimaryExpression	'*'		3958980	1					
ANR	3958992	ReturnStatement	return true ;	942:3:30880:30891	3958980	1	True				
ANR	3958993	Identifier	true		3958980	0					
ANR	3958994	IfStatement	if ( this -> NameLength <= 0 || ! psz )		3958980	1					
ANR	3958995	Condition	this -> NameLength <= 0 || ! psz	943:6:30899:30928	3958980	0	True				
ANR	3958996	OrExpression	this -> NameLength <= 0 || ! psz		3958980	0		||			
ANR	3958997	RelationalExpression	this -> NameLength <= 0		3958980	0		<=			
ANR	3958998	PtrMemberAccess	this -> NameLength		3958980	0					
ANR	3958999	Identifier	this		3958980	0					
ANR	3959000	Identifier	NameLength		3958980	1					
ANR	3959001	PrimaryExpression	0		3958980	1					
ANR	3959002	UnaryOperationExpression	! psz		3958980	1					
ANR	3959003	UnaryOperator	!		3958980	0					
ANR	3959004	Identifier	psz		3958980	1					
ANR	3959005	ReturnStatement	return false ;	944:3:30934:30946	3958980	1	True				
ANR	3959006	Identifier	false		3958980	0					
ANR	3959007	IfStatement	if ( * psz == '(' )		3958980	2					
ANR	3959008	Condition	* psz == '('	945:6:30954:30964	3958980	0	True				
ANR	3959009	EqualityExpression	* psz == '('		3958980	0		==			
ANR	3959010	UnaryOperationExpression	* psz		3958980	0					
ANR	3959011	UnaryOperator	*		3958980	0					
ANR	3959012	Identifier	psz		3958980	1					
ANR	3959013	PrimaryExpression	'('		3958980	1					
ANR	3959014	ExpressionStatement	++ psz	946:3:30970:30975	3958980	1	True				
ANR	3959015	UnaryExpression	++ psz		3958980	0					
ANR	3959016	IncDec	++		3958980	0					
ANR	3959017	Identifier	psz		3958980	1					
ANR	3959018	IdentifierDeclStatement	const WCHAR * pwsz = ( const WCHAR * ) ( ( BYTE * ) this + this -> NameOffset ) ;	947:2:30979:31047	3958980	3	True				
ANR	3959019	IdentifierDecl	* pwsz = ( const WCHAR * ) ( ( BYTE * ) this + this -> NameOffset )		3958980	0					
ANR	3959020	IdentifierDeclType	const WCHAR *		3958980	0					
ANR	3959021	Identifier	pwsz		3958980	1					
ANR	3959022	AssignmentExpression	* pwsz = ( const WCHAR * ) ( ( BYTE * ) this + this -> NameOffset )		3958980	2		=			
ANR	3959023	Identifier	pwsz		3958980	0					
ANR	3959024	CastExpression	( const WCHAR * ) ( ( BYTE * ) this + this -> NameOffset )		3958980	1					
ANR	3959025	CastTarget	const WCHAR *		3958980	0					
ANR	3959026	AdditiveExpression	( BYTE * ) this + this -> NameOffset		3958980	1		+			
ANR	3959027	CastExpression	( BYTE * ) this		3958980	0					
ANR	3959028	CastTarget	BYTE *		3958980	0					
ANR	3959029	Identifier	this		3958980	1					
ANR	3959030	PtrMemberAccess	this -> NameOffset		3958980	1					
ANR	3959031	Identifier	this		3958980	0					
ANR	3959032	Identifier	NameOffset		3958980	1					
ANR	3959033	IfStatement	if ( ! * pwsz )		3958980	4					
ANR	3959034	Condition	! * pwsz	948:7:31057:31063	3958980	0	True				
ANR	3959035	UnaryOperationExpression	! * pwsz		3958980	0					
ANR	3959036	UnaryOperator	!		3958980	0					
ANR	3959037	UnaryOperationExpression	* pwsz		3958980	1					
ANR	3959038	UnaryOperator	*		3958980	0					
ANR	3959039	Identifier	pwsz		3958980	1					
ANR	3959040	ReturnStatement	return false ;	949:3:31069:31081	3958980	1	True				
ANR	3959041	Identifier	false		3958980	0					
ANR	3959042	WhileStatement	while ( * pwsz )		3958980	5					
ANR	3959043	Condition	* pwsz	950:9:31092:31096	3958980	0	True				
ANR	3959044	UnaryOperationExpression	* pwsz		3958980	0					
ANR	3959045	UnaryOperator	*		3958980	0					
ANR	3959046	Identifier	pwsz		3958980	1					
ANR	3959047	CompoundStatement		11:16:249:249	3958980	1					
ANR	3959048	IfStatement	if ( ! * psz || * psz == ')' )		3958980	0					
ANR	3959049	Condition	! * psz || * psz == ')'	951:8:31109:31129	3958980	0	True				
ANR	3959050	OrExpression	! * psz || * psz == ')'		3958980	0		||			
ANR	3959051	UnaryOperationExpression	! * psz		3958980	0					
ANR	3959052	UnaryOperator	!		3958980	0					
ANR	3959053	UnaryOperationExpression	* psz		3958980	1					
ANR	3959054	UnaryOperator	*		3958980	0					
ANR	3959055	Identifier	psz		3958980	1					
ANR	3959056	EqualityExpression	* psz == ')'		3958980	1		==			
ANR	3959057	UnaryOperationExpression	* psz		3958980	0					
ANR	3959058	UnaryOperator	*		3958980	0					
ANR	3959059	Identifier	psz		3958980	1					
ANR	3959060	PrimaryExpression	')'		3958980	1					
ANR	3959061	ReturnStatement	return false ;	952:4:31136:31148	3958980	1	True				
ANR	3959062	Identifier	false		3958980	0					
ANR	3959063	IfStatement	if ( tolower ( * psz ) != tolower ( * pwsz ) )		3958980	1					
ANR	3959064	Condition	tolower ( * psz ) != tolower ( * pwsz )	953:7:31157:31187	3958980	0	True				
ANR	3959065	EqualityExpression	tolower ( * psz ) != tolower ( * pwsz )		3958980	0		!=			
ANR	3959066	CallExpression	tolower ( * psz )		3958980	0					
ANR	3959067	Callee	tolower		3958980	0					
ANR	3959068	Identifier	tolower		3958980	0					
ANR	3959069	ArgumentList	* psz		3958980	1					
ANR	3959070	Argument	* psz		3958980	0					
ANR	3959071	UnaryOperationExpression	* psz		3958980	0					
ANR	3959072	UnaryOperator	*		3958980	0					
ANR	3959073	Identifier	psz		3958980	1					
ANR	3959074	CallExpression	tolower ( * pwsz )		3958980	1					
ANR	3959075	Callee	tolower		3958980	0					
ANR	3959076	Identifier	tolower		3958980	0					
ANR	3959077	ArgumentList	* pwsz		3958980	1					
ANR	3959078	Argument	* pwsz		3958980	0					
ANR	3959079	UnaryOperationExpression	* pwsz		3958980	0					
ANR	3959080	UnaryOperator	*		3958980	0					
ANR	3959081	Identifier	pwsz		3958980	1					
ANR	3959082	ReturnStatement	return false ;	954:4:31194:31206	3958980	1	True				
ANR	3959083	Identifier	false		3958980	0					
ANR	3959084	ExpressionStatement	++ psz	955:3:31211:31216	3958980	2	True				
ANR	3959085	UnaryExpression	++ psz		3958980	0					
ANR	3959086	IncDec	++		3958980	0					
ANR	3959087	Identifier	psz		3958980	1					
ANR	3959088	ExpressionStatement	++ pwsz	956:3:31221:31227	3958980	3	True				
ANR	3959089	UnaryExpression	++ pwsz		3958980	0					
ANR	3959090	IncDec	++		3958980	0					
ANR	3959091	Identifier	pwsz		3958980	1					
ANR	3959092	IfStatement	if ( * psz == '*' )		3958980	4					
ANR	3959093	Condition	* psz == '*'	957:7:31236:31246	3958980	0	True				
ANR	3959094	EqualityExpression	* psz == '*'		3958980	0		==			
ANR	3959095	UnaryOperationExpression	* psz		3958980	0					
ANR	3959096	UnaryOperator	*		3958980	0					
ANR	3959097	Identifier	psz		3958980	1					
ANR	3959098	PrimaryExpression	'*'		3958980	1					
ANR	3959099	ReturnStatement	return true ;	958:4:31253:31264	3958980	1	True				
ANR	3959100	Identifier	true		3958980	0					
ANR	3959101	ReturnStatement	return ( * psz == 0 || * psz == ')' ) ;	960:2:31272:31305	3958980	6	True				
ANR	3959102	OrExpression	* psz == 0 || * psz == ')'		3958980	0		||			
ANR	3959103	EqualityExpression	* psz == 0		3958980	0		==			
ANR	3959104	UnaryOperationExpression	* psz		3958980	0					
ANR	3959105	UnaryOperator	*		3958980	0					
ANR	3959106	Identifier	psz		3958980	1					
ANR	3959107	PrimaryExpression	0		3958980	1					
ANR	3959108	EqualityExpression	* psz == ')'		3958980	1		==			
ANR	3959109	UnaryOperationExpression	* psz		3958980	0					
ANR	3959110	UnaryOperator	*		3958980	0					
ANR	3959111	Identifier	psz		3958980	1					
ANR	3959112	PrimaryExpression	')'		3958980	1					
ANR	3959113	ReturnType	bool		3958980	1					
ANR	3959114	Identifier	Matches		3958980	2					
ANR	3959115	ParameterList	const char * psz		3958980	3					
ANR	3959116	Parameter	const char * psz	940:14:30825:30840	3958980	0	True				
ANR	3959117	ParameterType	const char *		3958980	0					
ANR	3959118	Identifier	psz		3958980	1					
ANR	3959119	CFGEntryNode	ENTRY		3958980		True				
ANR	3959120	CFGExitNode	EXIT		3958980		True				
ANR	3959121	Symbol	* this		3958980						
ANR	3959122	Symbol	* psz		3958980						
ANR	3959123	Symbol	this -> NameOffset		3958980						
ANR	3959124	Symbol	tolower		3958980						
ANR	3959125	Symbol	psz		3958980						
ANR	3959126	Symbol	* pwsz		3958980						
ANR	3959127	Symbol	true		3958980						
ANR	3959128	Symbol	this -> NameLength		3958980						
ANR	3959129	Symbol	this		3958980						
ANR	3959130	Symbol	false		3958980						
ANR	3959131	Symbol	pwsz		3958980						
ANR	3959132	Function	CounterBytes	962:1:31311:31469							
ANR	3959133	FunctionDef	CounterBytes ()		3959132	3					
ANR	3959134	CompoundStatement		962:28:31338:31469	3959132	0					
ANR	3959135	IdentifierDeclStatement	const PERF_COUNTER_BLOCK * pBlock = ( const PERF_COUNTER_BLOCK * ) ( ( BYTE * ) this + this -> ByteLength ) ;	963:2:31343:31437	3959132	0	True				
ANR	3959136	IdentifierDecl	* pBlock = ( const PERF_COUNTER_BLOCK * ) ( ( BYTE * ) this + this -> ByteLength )		3959132	0					
ANR	3959137	IdentifierDeclType	const PERF_COUNTER_BLOCK *		3959132	0					
ANR	3959138	Identifier	pBlock		3959132	1					
ANR	3959139	AssignmentExpression	* pBlock = ( const PERF_COUNTER_BLOCK * ) ( ( BYTE * ) this + this -> ByteLength )		3959132	2		=			
ANR	3959140	Identifier	pBlock		3959132	0					
ANR	3959141	CastExpression	( const PERF_COUNTER_BLOCK * ) ( ( BYTE * ) this + this -> ByteLength )		3959132	1					
ANR	3959142	CastTarget	const PERF_COUNTER_BLOCK *		3959132	0					
ANR	3959143	AdditiveExpression	( BYTE * ) this + this -> ByteLength		3959132	1		+			
ANR	3959144	CastExpression	( BYTE * ) this		3959132	0					
ANR	3959145	CastTarget	BYTE *		3959132	0					
ANR	3959146	Identifier	this		3959132	1					
ANR	3959147	PtrMemberAccess	this -> ByteLength		3959132	1					
ANR	3959148	Identifier	this		3959132	0					
ANR	3959149	Identifier	ByteLength		3959132	1					
ANR	3959150	ReturnStatement	return pBlock -> ByteLength ;	964:2:31441:31466	3959132	1	True				
ANR	3959151	PtrMemberAccess	pBlock -> ByteLength		3959132	0					
ANR	3959152	Identifier	pBlock		3959132	0					
ANR	3959153	Identifier	ByteLength		3959132	1					
ANR	3959154	ReturnType	DWORD		3959132	1					
ANR	3959155	Identifier	CounterBytes		3959132	2					
ANR	3959156	ParameterList			3959132	3					
ANR	3959157	CFGEntryNode	ENTRY		3959132		True				
ANR	3959158	CFGExitNode	EXIT		3959132		True				
ANR	3959159	Symbol	* this		3959132						
ANR	3959160	Symbol	this		3959132						
ANR	3959161	Symbol	pBlock -> ByteLength		3959132						
ANR	3959162	Symbol	this -> ByteLength		3959132						
ANR	3959163	Symbol	pBlock		3959132						
ANR	3959164	Symbol	* pBlock		3959132						
ANR	3959165	Function	CounterData	968:1:31570:31662							
ANR	3959166	FunctionDef	CounterData ()		3959165	4					
ANR	3959167	CompoundStatement		968:34:31603:31662	3959165	0					
ANR	3959168	ReturnStatement	return ( const BYTE * ) ( ( BYTE * ) this + this -> ByteLength ) ;	969:2:31607:31659	3959165	0	True				
ANR	3959169	CastExpression	( const BYTE * ) ( ( BYTE * ) this + this -> ByteLength )		3959165	0					
ANR	3959170	CastTarget	const BYTE *		3959165	0					
ANR	3959171	AdditiveExpression	( BYTE * ) this + this -> ByteLength		3959165	1		+			
ANR	3959172	CastExpression	( BYTE * ) this		3959165	0					
ANR	3959173	CastTarget	BYTE *		3959165	0					
ANR	3959174	Identifier	this		3959165	1					
ANR	3959175	PtrMemberAccess	this -> ByteLength		3959165	1					
ANR	3959176	Identifier	this		3959165	0					
ANR	3959177	Identifier	ByteLength		3959165	1					
ANR	3959178	ReturnType	const BYTE *		3959165	1					
ANR	3959179	Identifier	CounterData		3959165	2					
ANR	3959180	ParameterList			3959165	3					
ANR	3959181	CFGEntryNode	ENTRY		3959165		True				
ANR	3959182	CFGExitNode	EXIT		3959165		True				
ANR	3959183	Symbol	* this		3959165						
ANR	3959184	Symbol	this		3959165						
ANR	3959185	Symbol	this -> ByteLength		3959165						
ANR	3959186	ClassDef	WinPerf_Object	974:0:31669:34293							
ANR	3959187	Function	Next	977:1:31727:31835							
ANR	3959188	FunctionDef	Next ()		3959187	0					
ANR	3959189	CompoundStatement		977:37:31763:31835	3959187	0					
ANR	3959190	ReturnStatement	return ( const WinPerf_Object * ) ( ( BYTE * ) this + this -> TotalByteLength ) ;	977:1:31765:31833	3959187	0	True				
ANR	3959191	CastExpression	( const WinPerf_Object * ) ( ( BYTE * ) this + this -> TotalByteLength )		3959187	0					
ANR	3959192	CastTarget	const WinPerf_Object *		3959187	0					
ANR	3959193	AdditiveExpression	( BYTE * ) this + this -> TotalByteLength		3959187	1		+			
ANR	3959194	CastExpression	( BYTE * ) this		3959187	0					
ANR	3959195	CastTarget	BYTE *		3959187	0					
ANR	3959196	Identifier	this		3959187	1					
ANR	3959197	PtrMemberAccess	this -> TotalByteLength		3959187	1					
ANR	3959198	Identifier	this		3959187	0					
ANR	3959199	Identifier	TotalByteLength		3959187	1					
ANR	3959200	ReturnType	const WinPerf_Object *		3959187	1					
ANR	3959201	Identifier	Next		3959187	2					
ANR	3959202	ParameterList			3959187	3					
ANR	3959203	CFGEntryNode	ENTRY		3959187		True				
ANR	3959204	CFGExitNode	EXIT		3959187		True				
ANR	3959205	Symbol	* this		3959187						
ANR	3959206	Symbol	this		3959187						
ANR	3959207	Symbol	this -> TotalByteLength		3959187						
ANR	3959208	Function	NameIndex	978:1:31838:31910							
ANR	3959209	FunctionDef	NameIndex ()		3959208	1					
ANR	3959210	CompoundStatement		978:36:31873:31910	3959208	0					
ANR	3959211	ReturnStatement	return this -> ObjectNameTitleIndex ;	978:1:31875:31908	3959208	0	True				
ANR	3959212	PtrMemberAccess	this -> ObjectNameTitleIndex		3959208	0					
ANR	3959213	Identifier	this		3959208	0					
ANR	3959214	Identifier	ObjectNameTitleIndex		3959208	1					
ANR	3959215	ReturnType	DWORD		3959208	1					
ANR	3959216	Identifier	NameIndex		3959208	2					
ANR	3959217	ParameterList			3959208	3					
ANR	3959218	CFGEntryNode	ENTRY		3959208		True				
ANR	3959219	CFGExitNode	EXIT		3959208		True				
ANR	3959220	Symbol	* this		3959208						
ANR	3959221	Symbol	this		3959208						
ANR	3959222	Symbol	this -> ObjectNameTitleIndex		3959208						
ANR	3959223	Function	InstanceCount	980:1:31914:31982							
ANR	3959224	FunctionDef	InstanceCount ()		3959223	2					
ANR	3959225	CompoundStatement		980:40:31953:31982	3959223	0					
ANR	3959226	ReturnStatement	return this -> NumInstances ;	980:1:31955:31980	3959223	0	True				
ANR	3959227	PtrMemberAccess	this -> NumInstances		3959223	0					
ANR	3959228	Identifier	this		3959223	0					
ANR	3959229	Identifier	NumInstances		3959223	1					
ANR	3959230	ReturnType	int		3959223	1					
ANR	3959231	Identifier	InstanceCount		3959223	2					
ANR	3959232	ParameterList			3959223	3					
ANR	3959233	CFGEntryNode	ENTRY		3959223		True				
ANR	3959234	CFGExitNode	EXIT		3959223		True				
ANR	3959235	Symbol	* this		3959223						
ANR	3959236	Symbol	this		3959223						
ANR	3959237	Symbol	this -> NumInstances		3959223						
ANR	3959238	Function	FirstInstance	982:1:31986:32157							
ANR	3959239	FunctionDef	FirstInstance ()		3959238	3					
ANR	3959240	CompoundStatement		982:47:32032:32157	3959238	0					
ANR	3959241	IfStatement	if ( this -> NumInstances <= 0 )		3959238	0					
ANR	3959242	Condition	this -> NumInstances <= 0	983:6:32041:32063	3959238	0	True				
ANR	3959243	RelationalExpression	this -> NumInstances <= 0		3959238	0		<=			
ANR	3959244	PtrMemberAccess	this -> NumInstances		3959238	0					
ANR	3959245	Identifier	this		3959238	0					
ANR	3959246	Identifier	NumInstances		3959238	1					
ANR	3959247	PrimaryExpression	0		3959238	1					
ANR	3959248	ReturnStatement	return NULL ;	984:3:32069:32080	3959238	1	True				
ANR	3959249	Identifier	NULL		3959238	0					
ANR	3959250	ReturnStatement	return ( const WinPerf_ObjInst * ) ( ( BYTE * ) this + this -> DefinitionLength ) ;	985:2:32084:32154	3959238	1	True				
ANR	3959251	CastExpression	( const WinPerf_ObjInst * ) ( ( BYTE * ) this + this -> DefinitionLength )		3959238	0					
ANR	3959252	CastTarget	const WinPerf_ObjInst *		3959238	0					
ANR	3959253	AdditiveExpression	( BYTE * ) this + this -> DefinitionLength		3959238	1		+			
ANR	3959254	CastExpression	( BYTE * ) this		3959238	0					
ANR	3959255	CastTarget	BYTE *		3959238	0					
ANR	3959256	Identifier	this		3959238	1					
ANR	3959257	PtrMemberAccess	this -> DefinitionLength		3959238	1					
ANR	3959258	Identifier	this		3959238	0					
ANR	3959259	Identifier	DefinitionLength		3959238	1					
ANR	3959260	ReturnType	const WinPerf_ObjInst *		3959238	1					
ANR	3959261	Identifier	FirstInstance		3959238	2					
ANR	3959262	ParameterList			3959238	3					
ANR	3959263	CFGEntryNode	ENTRY		3959238		True				
ANR	3959264	CFGExitNode	EXIT		3959238		True				
ANR	3959265	Symbol	* this		3959238						
ANR	3959266	Symbol	NULL		3959238						
ANR	3959267	Symbol	this -> DefinitionLength		3959238						
ANR	3959268	Symbol	this		3959238						
ANR	3959269	Symbol	this -> NumInstances		3959238						
ANR	3959270	Function	Counter	989:1:32245:32483							
ANR	3959271	FunctionDef	Counter (int ix)		3959270	4					
ANR	3959272	CompoundStatement		989:50:32294:32483	3959270	0					
ANR	3959273	IfStatement	if ( ix < 0 || ix >= this -> NumCounters )		3959270	0					
ANR	3959274	Condition	ix < 0 || ix >= this -> NumCounters	990:6:32303:32335	3959270	0	True				
ANR	3959275	OrExpression	ix < 0 || ix >= this -> NumCounters		3959270	0		||			
ANR	3959276	RelationalExpression	ix < 0		3959270	0		<			
ANR	3959277	Identifier	ix		3959270	0					
ANR	3959278	PrimaryExpression	0		3959270	1					
ANR	3959279	RelationalExpression	ix >= this -> NumCounters		3959270	1		>=			
ANR	3959280	Identifier	ix		3959270	0					
ANR	3959281	PtrMemberAccess	this -> NumCounters		3959270	1					
ANR	3959282	Identifier	this		3959270	0					
ANR	3959283	Identifier	NumCounters		3959270	1					
ANR	3959284	ReturnStatement	return NULL ;	991:3:32341:32352	3959270	1	True				
ANR	3959285	Identifier	NULL		3959270	0					
ANR	3959286	IdentifierDeclStatement	const WinPerf_CounterDef * pCounter = ( const WinPerf_CounterDef * ) ( ( BYTE * ) this + this -> HeaderLength ) ;	992:2:32356:32456	3959270	1	True				
ANR	3959287	IdentifierDecl	* pCounter = ( const WinPerf_CounterDef * ) ( ( BYTE * ) this + this -> HeaderLength )		3959270	0					
ANR	3959288	IdentifierDeclType	const WinPerf_CounterDef *		3959270	0					
ANR	3959289	Identifier	pCounter		3959270	1					
ANR	3959290	AssignmentExpression	* pCounter = ( const WinPerf_CounterDef * ) ( ( BYTE * ) this + this -> HeaderLength )		3959270	2		=			
ANR	3959291	Identifier	pCounter		3959270	0					
ANR	3959292	CastExpression	( const WinPerf_CounterDef * ) ( ( BYTE * ) this + this -> HeaderLength )		3959270	1					
ANR	3959293	CastTarget	const WinPerf_CounterDef *		3959270	0					
ANR	3959294	AdditiveExpression	( BYTE * ) this + this -> HeaderLength		3959270	1		+			
ANR	3959295	CastExpression	( BYTE * ) this		3959270	0					
ANR	3959296	CastTarget	BYTE *		3959270	0					
ANR	3959297	Identifier	this		3959270	1					
ANR	3959298	PtrMemberAccess	this -> HeaderLength		3959270	1					
ANR	3959299	Identifier	this		3959270	0					
ANR	3959300	Identifier	HeaderLength		3959270	1					
ANR	3959301	ReturnStatement	return pCounter + ix ;	993:2:32460:32480	3959270	2	True				
ANR	3959302	AdditiveExpression	pCounter + ix		3959270	0		+			
ANR	3959303	Identifier	pCounter		3959270	0					
ANR	3959304	Identifier	ix		3959270	1					
ANR	3959305	ReturnType	const WinPerf_CounterDef *		3959270	1					
ANR	3959306	Identifier	Counter		3959270	2					
ANR	3959307	ParameterList	int ix		3959270	3					
ANR	3959308	Parameter	int ix	989:36:32280:32285	3959270	0	True				
ANR	3959309	ParameterType	int		3959270	0					
ANR	3959310	Identifier	ix		3959270	1					
ANR	3959311	CFGEntryNode	ENTRY		3959270		True				
ANR	3959312	CFGExitNode	EXIT		3959270		True				
ANR	3959313	Symbol	* this		3959270						
ANR	3959314	Symbol	NULL		3959270						
ANR	3959315	Symbol	this -> NumCounters		3959270						
ANR	3959316	Symbol	this -> HeaderLength		3959270						
ANR	3959317	Symbol	this		3959270						
ANR	3959318	Symbol	ix		3959270						
ANR	3959319	Symbol	pCounter		3959270						
ANR	3959320	Function	CounterData	997:1:32657:32801							
ANR	3959321	FunctionDef	CounterData ()		3959320	5					
ANR	3959322	CompoundStatement		997:34:32690:32801	3959320	0					
ANR	3959323	IfStatement	if ( this -> NumInstances > 0 )		3959320	0					
ANR	3959324	Condition	this -> NumInstances > 0	998:6:32698:32719	3959320	0	True				
ANR	3959325	RelationalExpression	this -> NumInstances > 0		3959320	0		>			
ANR	3959326	PtrMemberAccess	this -> NumInstances		3959320	0					
ANR	3959327	Identifier	this		3959320	0					
ANR	3959328	Identifier	NumInstances		3959320	1					
ANR	3959329	PrimaryExpression	0		3959320	1					
ANR	3959330	ReturnStatement	return NULL ;	999:3:32725:32736	3959320	1	True				
ANR	3959331	Identifier	NULL		3959320	0					
ANR	3959332	ReturnStatement	return ( const BYTE * ) ( ( BYTE * ) this + this -> DefinitionLength ) ;	1000:2:32740:32798	3959320	1	True				
ANR	3959333	CastExpression	( const BYTE * ) ( ( BYTE * ) this + this -> DefinitionLength )		3959320	0					
ANR	3959334	CastTarget	const BYTE *		3959320	0					
ANR	3959335	AdditiveExpression	( BYTE * ) this + this -> DefinitionLength		3959320	1		+			
ANR	3959336	CastExpression	( BYTE * ) this		3959320	0					
ANR	3959337	CastTarget	BYTE *		3959320	0					
ANR	3959338	Identifier	this		3959320	1					
ANR	3959339	PtrMemberAccess	this -> DefinitionLength		3959320	1					
ANR	3959340	Identifier	this		3959320	0					
ANR	3959341	Identifier	DefinitionLength		3959320	1					
ANR	3959342	ReturnType	const BYTE *		3959320	1					
ANR	3959343	Identifier	CounterData		3959320	2					
ANR	3959344	ParameterList			3959320	3					
ANR	3959345	CFGEntryNode	ENTRY		3959320		True				
ANR	3959346	CFGExitNode	EXIT		3959320		True				
ANR	3959347	Symbol	* this		3959320						
ANR	3959348	Symbol	NULL		3959320						
ANR	3959349	Symbol	this -> DefinitionLength		3959320						
ANR	3959350	Symbol	this		3959320						
ANR	3959351	Symbol	this -> NumInstances		3959320						
ANR	3959352	Function	Default	1003:1:32805:32990							
ANR	3959353	FunctionDef	Default ()		3959352	6					
ANR	3959354	CompoundStatement		1003:44:32848:32990	3959352	0					
ANR	3959355	IfStatement	if ( this -> DefaultCounter >= 0 && this -> DefaultCounter < this -> NumCounters )		3959352	0					
ANR	3959356	Condition	this -> DefaultCounter >= 0 && this -> DefaultCounter < this -> NumCounters	1004:6:32856:32924	3959352	0	True				
ANR	3959357	AndExpression	this -> DefaultCounter >= 0 && this -> DefaultCounter < this -> NumCounters		3959352	0		&&			
ANR	3959358	RelationalExpression	this -> DefaultCounter >= 0		3959352	0		>=			
ANR	3959359	PtrMemberAccess	this -> DefaultCounter		3959352	0					
ANR	3959360	Identifier	this		3959352	0					
ANR	3959361	Identifier	DefaultCounter		3959352	1					
ANR	3959362	PrimaryExpression	0		3959352	1					
ANR	3959363	RelationalExpression	this -> DefaultCounter < this -> NumCounters		3959352	1		<			
ANR	3959364	PtrMemberAccess	this -> DefaultCounter		3959352	0					
ANR	3959365	Identifier	this		3959352	0					
ANR	3959366	Identifier	DefaultCounter		3959352	1					
ANR	3959367	PtrMemberAccess	this -> NumCounters		3959352	1					
ANR	3959368	Identifier	this		3959352	0					
ANR	3959369	Identifier	NumCounters		3959352	1					
ANR	3959370	ReturnStatement	return this -> Counter ( this -> DefaultCounter ) ;	1005:3:32930:32972	3959352	1	True				
ANR	3959371	CallExpression	this -> Counter ( this -> DefaultCounter )		3959352	0					
ANR	3959372	Callee	this -> Counter		3959352	0					
ANR	3959373	PtrMemberAccess	this -> Counter		3959352	0					
ANR	3959374	Identifier	this		3959352	0					
ANR	3959375	Identifier	Counter		3959352	1					
ANR	3959376	ArgumentList	this -> DefaultCounter		3959352	1					
ANR	3959377	Argument	this -> DefaultCounter		3959352	0					
ANR	3959378	PtrMemberAccess	this -> DefaultCounter		3959352	0					
ANR	3959379	Identifier	this		3959352	0					
ANR	3959380	Identifier	DefaultCounter		3959352	1					
ANR	3959381	ReturnStatement	return NULL ;	1006:2:32976:32987	3959352	1	True				
ANR	3959382	Identifier	NULL		3959352	0					
ANR	3959383	ReturnType	const WinPerf_CounterDef *		3959352	1					
ANR	3959384	Identifier	Default		3959352	2					
ANR	3959385	ParameterList			3959352	3					
ANR	3959386	CFGEntryNode	ENTRY		3959352		True				
ANR	3959387	CFGExitNode	EXIT		3959352		True				
ANR	3959388	Symbol	* this		3959352						
ANR	3959389	Symbol	NULL		3959352						
ANR	3959390	Symbol	this -> NumCounters		3959352						
ANR	3959391	Symbol	this -> Counter		3959352						
ANR	3959392	Symbol	this		3959352						
ANR	3959393	Symbol	this -> DefaultCounter		3959352						
ANR	3959394	Function	Select	1010:1:33070:33563							
ANR	3959395	FunctionDef	Select (const DWORD * pidCounters)		3959394	7					
ANR	3959396	CompoundStatement		1010:68:33137:33563	3959394	0					
ANR	3959397	IdentifierDeclStatement	const WinPerf_CounterDef * pCounter = ( const WinPerf_CounterDef * ) ( ( BYTE * ) this + this -> HeaderLength ) ;	1011:2:33141:33241	3959394	0	True				
ANR	3959398	IdentifierDecl	* pCounter = ( const WinPerf_CounterDef * ) ( ( BYTE * ) this + this -> HeaderLength )		3959394	0					
ANR	3959399	IdentifierDeclType	const WinPerf_CounterDef *		3959394	0					
ANR	3959400	Identifier	pCounter		3959394	1					
ANR	3959401	AssignmentExpression	* pCounter = ( const WinPerf_CounterDef * ) ( ( BYTE * ) this + this -> HeaderLength )		3959394	2		=			
ANR	3959402	Identifier	pCounter		3959394	0					
ANR	3959403	CastExpression	( const WinPerf_CounterDef * ) ( ( BYTE * ) this + this -> HeaderLength )		3959394	1					
ANR	3959404	CastTarget	const WinPerf_CounterDef *		3959394	0					
ANR	3959405	AdditiveExpression	( BYTE * ) this + this -> HeaderLength		3959394	1		+			
ANR	3959406	CastExpression	( BYTE * ) this		3959394	0					
ANR	3959407	CastTarget	BYTE *		3959394	0					
ANR	3959408	Identifier	this		3959394	1					
ANR	3959409	PtrMemberAccess	this -> HeaderLength		3959394	1					
ANR	3959410	Identifier	this		3959394	0					
ANR	3959411	Identifier	HeaderLength		3959394	1					
ANR	3959412	WhileStatement	while ( * pidCounters )		3959394	1					
ANR	3959413	Condition	* pidCounters	1012:9:33252:33263	3959394	0	True				
ANR	3959414	UnaryOperationExpression	* pidCounters		3959394	0					
ANR	3959415	UnaryOperator	*		3959394	0					
ANR	3959416	Identifier	pidCounters		3959394	1					
ANR	3959417	CompoundStatement		3:23:128:128	3959394	1					
ANR	3959418	ForStatement	for ( UINT jj = 0 ; jj < this -> NumCounters ; ++ jj )		3959394	0					
ANR	3959419	ForInit	UINT jj = 0 ;	1013:8:33276:33287	3959394	0	True				
ANR	3959420	IdentifierDeclStatement	UINT jj = 0 ;		3959394	0					
ANR	3959421	IdentifierDecl	jj = 0		3959394	0					
ANR	3959422	IdentifierDeclType	UINT		3959394	0					
ANR	3959423	Identifier	jj		3959394	1					
ANR	3959424	AssignmentExpression	jj = 0		3959394	2		=			
ANR	3959425	Identifier	jj		3959394	0					
ANR	3959426	PrimaryExpression	0		3959394	1					
ANR	3959427	Condition	jj < this -> NumCounters	1013:21:33289:33310	3959394	1	True				
ANR	3959428	RelationalExpression	jj < this -> NumCounters		3959394	0		<			
ANR	3959429	Identifier	jj		3959394	0					
ANR	3959430	PtrMemberAccess	this -> NumCounters		3959394	1					
ANR	3959431	Identifier	this		3959394	0					
ANR	3959432	Identifier	NumCounters		3959394	1					
ANR	3959433	UnaryExpression	++ jj	1013:45:33313:33316	3959394	2	True				
ANR	3959434	IncDec	++		3959394	0					
ANR	3959435	Identifier	jj		3959394	1					
ANR	3959436	CompoundStatement		4:51:181:181	3959394	3					
ANR	3959437	IfStatement	if ( ( pCounter + jj ) -> NameIndex ( ) == * pidCounters )		3959394	0					
ANR	3959438	Condition	( pCounter + jj ) -> NameIndex ( ) == * pidCounters	1014:8:33329:33370	3959394	0	True				
ANR	3959439	EqualityExpression	( pCounter + jj ) -> NameIndex ( ) == * pidCounters		3959394	0		==			
ANR	3959440	CallExpression	( pCounter + jj ) -> NameIndex ( )		3959394	0					
ANR	3959441	Callee	( pCounter + jj ) -> NameIndex		3959394	0					
ANR	3959442	PtrMemberAccess	( pCounter + jj ) -> NameIndex		3959394	0					
ANR	3959443	AdditiveExpression	pCounter + jj		3959394	0		+			
ANR	3959444	Identifier	pCounter		3959394	0					
ANR	3959445	Identifier	jj		3959394	1					
ANR	3959446	Identifier	NameIndex		3959394	1					
ANR	3959447	ArgumentList			3959394	1					
ANR	3959448	UnaryOperationExpression	* pidCounters		3959394	1					
ANR	3959449	UnaryOperator	*		3959394	0					
ANR	3959450	Identifier	pidCounters		3959394	1					
ANR	3959451	ReturnStatement	return pCounter + jj ;	1015:5:33378:33398	3959394	1	True				
ANR	3959452	AdditiveExpression	pCounter + jj		3959394	0		+			
ANR	3959453	Identifier	pCounter		3959394	0					
ANR	3959454	Identifier	jj		3959394	1					
ANR	3959455	ExpressionStatement	++ pidCounters	1017:3:33408:33421	3959394	1	True				
ANR	3959456	UnaryExpression	++ pidCounters		3959394	0					
ANR	3959457	IncDec	++		3959394	0					
ANR	3959458	Identifier	pidCounters		3959394	1					
ANR	3959459	IfStatement	if ( this -> DefaultCounter >= 0 && this -> DefaultCounter < this -> NumCounters )		3959394	2					
ANR	3959460	Condition	this -> DefaultCounter >= 0 && this -> DefaultCounter < this -> NumCounters	1019:6:33433:33501	3959394	0	True				
ANR	3959461	AndExpression	this -> DefaultCounter >= 0 && this -> DefaultCounter < this -> NumCounters		3959394	0		&&			
ANR	3959462	RelationalExpression	this -> DefaultCounter >= 0		3959394	0		>=			
ANR	3959463	PtrMemberAccess	this -> DefaultCounter		3959394	0					
ANR	3959464	Identifier	this		3959394	0					
ANR	3959465	Identifier	DefaultCounter		3959394	1					
ANR	3959466	PrimaryExpression	0		3959394	1					
ANR	3959467	RelationalExpression	this -> DefaultCounter < this -> NumCounters		3959394	1		<			
ANR	3959468	PtrMemberAccess	this -> DefaultCounter		3959394	0					
ANR	3959469	Identifier	this		3959394	0					
ANR	3959470	Identifier	DefaultCounter		3959394	1					
ANR	3959471	PtrMemberAccess	this -> NumCounters		3959394	1					
ANR	3959472	Identifier	this		3959394	0					
ANR	3959473	Identifier	NumCounters		3959394	1					
ANR	3959474	ReturnStatement	return pCounter + this -> DefaultCounter ;	1020:3:33507:33545	3959394	1	True				
ANR	3959475	AdditiveExpression	pCounter + this -> DefaultCounter		3959394	0		+			
ANR	3959476	Identifier	pCounter		3959394	0					
ANR	3959477	PtrMemberAccess	this -> DefaultCounter		3959394	1					
ANR	3959478	Identifier	this		3959394	0					
ANR	3959479	Identifier	DefaultCounter		3959394	1					
ANR	3959480	ReturnStatement	return NULL ;	1021:2:33549:33560	3959394	3	True				
ANR	3959481	Identifier	NULL		3959394	0					
ANR	3959482	ReturnType	const WinPerf_CounterDef *		3959394	1					
ANR	3959483	Identifier	Select		3959394	2					
ANR	3959484	ParameterList	const DWORD * pidCounters		3959394	3					
ANR	3959485	Parameter	const DWORD * pidCounters	1010:35:33104:33128	3959394	0	True				
ANR	3959486	ParameterType	const DWORD *		3959394	0					
ANR	3959487	Identifier	pidCounters		3959394	1					
ANR	3959488	CFGEntryNode	ENTRY		3959394		True				
ANR	3959489	CFGExitNode	EXIT		3959394		True				
ANR	3959490	Symbol	jj		3959394						
ANR	3959491	Symbol	NULL		3959394						
ANR	3959492	Symbol	this -> NumCounters		3959394						
ANR	3959493	Symbol	* jj		3959394						
ANR	3959494	Symbol	this -> HeaderLength		3959394						
ANR	3959495	Symbol	* pidCounters		3959394						
ANR	3959496	Symbol	this		3959394						
ANR	3959497	Symbol	* pCounter		3959394						
ANR	3959498	Symbol	* this		3959394						
ANR	3959499	Symbol	pidCounters		3959394						
ANR	3959500	Symbol	( pCounter + jj ) -> NameIndex		3959394						
ANR	3959501	Symbol	this -> DefaultCounter		3959394						
ANR	3959502	Symbol	pCounter		3959394						
ANR	3959503	Function	GetRawValue	1023:1:33566:33921							
ANR	3959504	FunctionDef	"GetRawValue (const WinPerf_CounterDef * pCounter , const BYTE * data)"		3959503	8					
ANR	3959505	CompoundStatement		1026:85:33659:33921	3959503	0					
ANR	3959506	IdentifierDeclStatement	ULARGE_INTEGER uli = { 0 } ;	1027:2:33663:33687	3959503	0	True				
ANR	3959507	IdentifierDecl	uli = { 0 }		3959503	0					
ANR	3959508	IdentifierDeclType	ULARGE_INTEGER		3959503	0					
ANR	3959509	Identifier	uli		3959503	1					
ANR	3959510	AssignmentExpression	uli = { 0 }		3959503	2		=			
ANR	3959511	Identifier	uli		3959503	0					
ANR	3959512	InitializerList	0		3959503	1					
ANR	3959513	PrimaryExpression	0		3959503	0					
ANR	3959514	IfStatement	if ( pCounter -> CounterSize == 4 )		3959503	1					
ANR	3959515	Condition	pCounter -> CounterSize == 4	1028:6:33695:33720	3959503	0	True				
ANR	3959516	EqualityExpression	pCounter -> CounterSize == 4		3959503	0		==			
ANR	3959517	PtrMemberAccess	pCounter -> CounterSize		3959503	0					
ANR	3959518	Identifier	pCounter		3959503	0					
ANR	3959519	Identifier	CounterSize		3959503	1					
ANR	3959520	PrimaryExpression	4		3959503	1					
ANR	3959521	ExpressionStatement	uli . LowPart = * ( DWORD * ) ( data + pCounter -> CounterOffset )	1029:3:33726:33781	3959503	1	True				
ANR	3959522	AssignmentExpression	uli . LowPart = * ( DWORD * ) ( data + pCounter -> CounterOffset )		3959503	0		=			
ANR	3959523	MemberAccess	uli . LowPart		3959503	0					
ANR	3959524	Identifier	uli		3959503	0					
ANR	3959525	Identifier	LowPart		3959503	1					
ANR	3959526	UnaryOperationExpression	* ( DWORD * ) ( data + pCounter -> CounterOffset )		3959503	1					
ANR	3959527	UnaryOperator	*		3959503	0					
ANR	3959528	CastExpression	( DWORD * ) ( data + pCounter -> CounterOffset )		3959503	1					
ANR	3959529	CastTarget	DWORD *		3959503	0					
ANR	3959530	AdditiveExpression	data + pCounter -> CounterOffset		3959503	1		+			
ANR	3959531	Identifier	data		3959503	0					
ANR	3959532	PtrMemberAccess	pCounter -> CounterOffset		3959503	1					
ANR	3959533	Identifier	pCounter		3959503	0					
ANR	3959534	Identifier	CounterOffset		3959503	1					
ANR	3959535	ElseStatement	else		3959503	0					
ANR	3959536	IfStatement	if ( pCounter -> CounterSize >= 8 )		3959503	0					
ANR	3959537	Condition	pCounter -> CounterSize >= 8	1030:11:33794:33819	3959503	0	True				
ANR	3959538	RelationalExpression	pCounter -> CounterSize >= 8		3959503	0		>=			
ANR	3959539	PtrMemberAccess	pCounter -> CounterSize		3959503	0					
ANR	3959540	Identifier	pCounter		3959503	0					
ANR	3959541	Identifier	CounterSize		3959503	1					
ANR	3959542	PrimaryExpression	8		3959503	1					
ANR	3959543	ExpressionStatement	uli . QuadPart = * ( UNALIGNED ULONGLONG * ) ( data + pCounter -> CounterOffset )	1031:3:33825:33895	3959503	1	True				
ANR	3959544	AssignmentExpression	uli . QuadPart = * ( UNALIGNED ULONGLONG * ) ( data + pCounter -> CounterOffset )		3959503	0		=			
ANR	3959545	MemberAccess	uli . QuadPart		3959503	0					
ANR	3959546	Identifier	uli		3959503	0					
ANR	3959547	Identifier	QuadPart		3959503	1					
ANR	3959548	UnaryOperationExpression	* ( UNALIGNED ULONGLONG * ) ( data + pCounter -> CounterOffset )		3959503	1					
ANR	3959549	UnaryOperator	*		3959503	0					
ANR	3959550	CastExpression	( UNALIGNED ULONGLONG * ) ( data + pCounter -> CounterOffset )		3959503	1					
ANR	3959551	CastTarget	UNALIGNED ULONGLONG *		3959503	0					
ANR	3959552	AdditiveExpression	data + pCounter -> CounterOffset		3959503	1		+			
ANR	3959553	Identifier	data		3959503	0					
ANR	3959554	PtrMemberAccess	pCounter -> CounterOffset		3959503	1					
ANR	3959555	Identifier	pCounter		3959503	0					
ANR	3959556	Identifier	CounterOffset		3959503	1					
ANR	3959557	ReturnStatement	return uli . QuadPart ;	1032:2:33899:33918	3959503	2	True				
ANR	3959558	MemberAccess	uli . QuadPart		3959503	0					
ANR	3959559	Identifier	uli		3959503	0					
ANR	3959560	Identifier	QuadPart		3959503	1					
ANR	3959561	ReturnType	const ULONGLONG		3959503	1					
ANR	3959562	Identifier	GetRawValue		3959503	2					
ANR	3959563	ParameterList	"const WinPerf_CounterDef * pCounter , const BYTE * data"		3959503	3					
ANR	3959564	Parameter	const WinPerf_CounterDef * pCounter	1026:23:33597:33631	3959503	0	True				
ANR	3959565	ParameterType	const WinPerf_CounterDef *		3959503	0					
ANR	3959566	Identifier	pCounter		3959503	1					
ANR	3959567	Parameter	const BYTE * data	1026:60:33634:33650	3959503	1	True				
ANR	3959568	ParameterType	const BYTE *		3959503	0					
ANR	3959569	Identifier	data		3959503	1					
ANR	3959570	CFGEntryNode	ENTRY		3959503		True				
ANR	3959571	CFGExitNode	EXIT		3959503		True				
ANR	3959572	Symbol	* pCounter -> CounterOffset		3959503						
ANR	3959573	Symbol	data		3959503						
ANR	3959574	Symbol	* ( UNALIGNED ULONGLONG * ) ( data + pCounter -> CounterOffset )		3959503						
ANR	3959575	Symbol	uli . QuadPart		3959503						
ANR	3959576	Symbol	* pCounter		3959503						
ANR	3959577	Symbol	uli . LowPart		3959503						
ANR	3959578	Symbol	pCounter -> CounterOffset		3959503						
ANR	3959579	Symbol	* * pCounter		3959503						
ANR	3959580	Symbol	uli		3959503						
ANR	3959581	Symbol	pCounter -> CounterSize		3959503						
ANR	3959582	Symbol	* ( DWORD * ) ( data + pCounter -> CounterOffset )		3959503						
ANR	3959583	Symbol	* data		3959503						
ANR	3959584	Symbol	pCounter		3959503						
ANR	3959585	ClassDef	WinPerf_Data	1047:0:34297:34987							
ANR	3959586	Function	First	1050:1:34352:34511							
ANR	3959587	FunctionDef	First ()		3959586	0					
ANR	3959588	CompoundStatement		1050:38:34389:34511	3959586	0					
ANR	3959589	IfStatement	if ( this -> NumObjectTypes > 0 )		3959586	0					
ANR	3959590	Condition	this -> NumObjectTypes > 0	1051:6:34398:34421	3959586	0	True				
ANR	3959591	RelationalExpression	this -> NumObjectTypes > 0		3959586	0		>			
ANR	3959592	PtrMemberAccess	this -> NumObjectTypes		3959586	0					
ANR	3959593	Identifier	this		3959586	0					
ANR	3959594	Identifier	NumObjectTypes		3959586	1					
ANR	3959595	PrimaryExpression	0		3959586	1					
ANR	3959596	ReturnStatement	return ( const WinPerf_Object * ) ( ( BYTE * ) this + this -> HeaderLength ) ;	1052:3:34427:34492	3959586	1	True				
ANR	3959597	CastExpression	( const WinPerf_Object * ) ( ( BYTE * ) this + this -> HeaderLength )		3959586	0					
ANR	3959598	CastTarget	const WinPerf_Object *		3959586	0					
ANR	3959599	AdditiveExpression	( BYTE * ) this + this -> HeaderLength		3959586	1		+			
ANR	3959600	CastExpression	( BYTE * ) this		3959586	0					
ANR	3959601	CastTarget	BYTE *		3959586	0					
ANR	3959602	Identifier	this		3959586	1					
ANR	3959603	PtrMemberAccess	this -> HeaderLength		3959586	1					
ANR	3959604	Identifier	this		3959586	0					
ANR	3959605	Identifier	HeaderLength		3959586	1					
ANR	3959606	ReturnStatement	return NULL ;	1053:2:34497:34508	3959586	1	True				
ANR	3959607	Identifier	NULL		3959586	0					
ANR	3959608	ReturnType	const WinPerf_Object *		3959586	1					
ANR	3959609	Identifier	First		3959586	2					
ANR	3959610	ParameterList			3959586	3					
ANR	3959611	CFGEntryNode	ENTRY		3959586		True				
ANR	3959612	CFGExitNode	EXIT		3959586		True				
ANR	3959613	Symbol	* this		3959586						
ANR	3959614	Symbol	NULL		3959586						
ANR	3959615	Symbol	this -> HeaderLength		3959586						
ANR	3959616	Symbol	this		3959586						
ANR	3959617	Symbol	this -> NumObjectTypes		3959586						
ANR	3959618	Function	Find	1055:1:34514:34767							
ANR	3959619	FunctionDef	Find (DWORD idObject)		3959618	1					
ANR	3959620	CompoundStatement		1055:51:34564:34767	3959618	0					
ANR	3959621	IdentifierDeclStatement	const WinPerf_Object * pObj = First ( ) ;	1056:2:34568:34605	3959618	0	True				
ANR	3959622	IdentifierDecl	* pObj = First ( )		3959618	0					
ANR	3959623	IdentifierDeclType	const WinPerf_Object *		3959618	0					
ANR	3959624	Identifier	pObj		3959618	1					
ANR	3959625	AssignmentExpression	* pObj = First ( )		3959618	2		=			
ANR	3959626	Identifier	pObj		3959618	0					
ANR	3959627	CallExpression	First ( )		3959618	1					
ANR	3959628	Callee	First		3959618	0					
ANR	3959629	Identifier	First		3959618	0					
ANR	3959630	ArgumentList			3959618	1					
ANR	3959631	ForStatement	"for ( UINT ii = 0 ; ii < this -> NumObjectTypes ; ++ ii , pObj = pObj -> Next ( ) )"		3959618	1					
ANR	3959632	ForInit	UINT ii = 0 ;	1057:7:34614:34625	3959618	0	True				
ANR	3959633	IdentifierDeclStatement	UINT ii = 0 ;		3959618	0					
ANR	3959634	IdentifierDecl	ii = 0		3959618	0					
ANR	3959635	IdentifierDeclType	UINT		3959618	0					
ANR	3959636	Identifier	ii		3959618	1					
ANR	3959637	AssignmentExpression	ii = 0		3959618	2		=			
ANR	3959638	Identifier	ii		3959618	0					
ANR	3959639	PrimaryExpression	0		3959618	1					
ANR	3959640	Condition	ii < this -> NumObjectTypes	1057:20:34627:34651	3959618	1	True				
ANR	3959641	RelationalExpression	ii < this -> NumObjectTypes		3959618	0		<			
ANR	3959642	Identifier	ii		3959618	0					
ANR	3959643	PtrMemberAccess	this -> NumObjectTypes		3959618	1					
ANR	3959644	Identifier	this		3959618	0					
ANR	3959645	Identifier	NumObjectTypes		3959618	1					
ANR	3959646	Expression	"++ ii , pObj = pObj -> Next ( )"	1057:47:34654:34678	3959618	2	True				
ANR	3959647	UnaryExpression	++ ii		3959618	0					
ANR	3959648	IncDec	++		3959618	0					
ANR	3959649	Identifier	ii		3959618	1					
ANR	3959650	AssignmentExpression	pObj = pObj -> Next ( )		3959618	1		=			
ANR	3959651	Identifier	pObj		3959618	0					
ANR	3959652	CallExpression	pObj -> Next ( )		3959618	1					
ANR	3959653	Callee	pObj -> Next		3959618	0					
ANR	3959654	PtrMemberAccess	pObj -> Next		3959618	0					
ANR	3959655	Identifier	pObj		3959618	0					
ANR	3959656	Identifier	Next		3959618	1					
ANR	3959657	ArgumentList			3959618	1					
ANR	3959658	CompoundStatement		3:74:116:116	3959618	3					
ANR	3959659	IfStatement	if ( pObj -> ObjectNameTitleIndex == idObject )		3959618	0					
ANR	3959660	Condition	pObj -> ObjectNameTitleIndex == idObject	1058:7:34690:34727	3959618	0	True				
ANR	3959661	EqualityExpression	pObj -> ObjectNameTitleIndex == idObject		3959618	0		==			
ANR	3959662	PtrMemberAccess	pObj -> ObjectNameTitleIndex		3959618	0					
ANR	3959663	Identifier	pObj		3959618	0					
ANR	3959664	Identifier	ObjectNameTitleIndex		3959618	1					
ANR	3959665	Identifier	idObject		3959618	1					
ANR	3959666	ReturnStatement	return pObj ;	1059:4:34734:34745	3959618	1	True				
ANR	3959667	Identifier	pObj		3959618	0					
ANR	3959668	ReturnStatement	return NULL ;	1061:2:34753:34764	3959618	2	True				
ANR	3959669	Identifier	NULL		3959618	0					
ANR	3959670	ReturnType	const WinPerf_Object *		3959618	1					
ANR	3959671	Identifier	Find		3959618	2					
ANR	3959672	ParameterList	DWORD idObject		3959618	3					
ANR	3959673	Parameter	DWORD idObject	1055:29:34542:34555	3959618	0	True				
ANR	3959674	ParameterType	DWORD		3959618	0					
ANR	3959675	Identifier	idObject		3959618	1					
ANR	3959676	CFGEntryNode	ENTRY		3959618		True				
ANR	3959677	CFGExitNode	EXIT		3959618		True				
ANR	3959678	Symbol	* this		3959618						
ANR	3959679	Symbol	ii		3959618						
ANR	3959680	Symbol	pObj		3959618						
ANR	3959681	Symbol	NULL		3959618						
ANR	3959682	Symbol	pObj -> ObjectNameTitleIndex		3959618						
ANR	3959683	Symbol	this		3959618						
ANR	3959684	Symbol	this -> NumObjectTypes		3959618						
ANR	3959685	Symbol	pObj -> Next		3959618						
ANR	3959686	Symbol	idObject		3959618						
ANR	3959687	Symbol	First		3959618						
ANR	3959688	Symbol	* pObj		3959618						
ANR	3959689	Function	Length	1063:1:34770:34830							
ANR	3959690	FunctionDef	Length ()		3959689	2					
ANR	3959691	CompoundStatement		1063:20:34789:34830	3959689	0					
ANR	3959692	ReturnStatement	return ( int ) this -> NumObjectTypes ;	1064:2:34794:34826	3959689	0	True				
ANR	3959693	CastExpression	( int ) this -> NumObjectTypes		3959689	0					
ANR	3959694	CastTarget	int		3959689	0					
ANR	3959695	PtrMemberAccess	this -> NumObjectTypes		3959689	1					
ANR	3959696	Identifier	this		3959689	0					
ANR	3959697	Identifier	NumObjectTypes		3959689	1					
ANR	3959698	ReturnType	int		3959689	1					
ANR	3959699	Identifier	Length		3959689	2					
ANR	3959700	ParameterList			3959689	3					
ANR	3959701	CFGEntryNode	ENTRY		3959689		True				
ANR	3959702	CFGExitNode	EXIT		3959689		True				
ANR	3959703	Symbol	* this		3959689						
ANR	3959704	Symbol	this -> NumObjectTypes		3959689						
ANR	3959705	Symbol	this		3959689						
ANR	3959706	Function	SystemName	1066:1:34833:34985							
ANR	3959707	FunctionDef	SystemName ()		3959706	3					
ANR	3959708	CompoundStatement		1066:34:34866:34985	3959706	0					
ANR	3959709	IfStatement	if ( this -> SystemNameLength > 0 )		3959706	0					
ANR	3959710	Condition	this -> SystemNameLength > 0	1067:6:34875:34900	3959706	0	True				
ANR	3959711	RelationalExpression	this -> SystemNameLength > 0		3959706	0		>			
ANR	3959712	PtrMemberAccess	this -> SystemNameLength		3959706	0					
ANR	3959713	Identifier	this		3959706	0					
ANR	3959714	Identifier	SystemNameLength		3959706	1					
ANR	3959715	PrimaryExpression	0		3959706	1					
ANR	3959716	ReturnStatement	return ( const WCHAR * ) ( ( BYTE * ) this + this -> SystemNameOffset ) ;	1068:3:34906:34966	3959706	1	True				
ANR	3959717	CastExpression	( const WCHAR * ) ( ( BYTE * ) this + this -> SystemNameOffset )		3959706	0					
ANR	3959718	CastTarget	const WCHAR *		3959706	0					
ANR	3959719	AdditiveExpression	( BYTE * ) this + this -> SystemNameOffset		3959706	1		+			
ANR	3959720	CastExpression	( BYTE * ) this		3959706	0					
ANR	3959721	CastTarget	BYTE *		3959706	0					
ANR	3959722	Identifier	this		3959706	1					
ANR	3959723	PtrMemberAccess	this -> SystemNameOffset		3959706	1					
ANR	3959724	Identifier	this		3959706	0					
ANR	3959725	Identifier	SystemNameOffset		3959706	1					
ANR	3959726	ReturnStatement	return NULL ;	1069:2:34971:34982	3959706	1	True				
ANR	3959727	Identifier	NULL		3959706	0					
ANR	3959728	ReturnType	const WCHAR *		3959706	1					
ANR	3959729	Identifier	SystemName		3959706	2					
ANR	3959730	ParameterList			3959706	3					
ANR	3959731	CFGEntryNode	ENTRY		3959706		True				
ANR	3959732	CFGExitNode	EXIT		3959706		True				
ANR	3959733	Symbol	* this		3959706						
ANR	3959734	Symbol	NULL		3959706						
ANR	3959735	Symbol	this		3959706						
ANR	3959736	Symbol	this -> SystemNameLength		3959706						
ANR	3959737	Symbol	this -> SystemNameOffset		3959706						
ANR	3959738	Function	WinPerf_Object :: GetValue	1073:0:34991:40047							
ANR	3959739	FunctionDef	"WinPerf_Object :: GetValue (WinPerf_CounterValue & ctval , const WinPerf_CounterDef * pCounter , const WinPerf_TimerDeltas & time , const BYTE * curr , const BYTE * prev)"		3959738	0					
ANR	3959740	CompoundStatement		1079:0:35175:40047	3959738	0					
ANR	3959741	ExpressionStatement	ctval . type = WinPerf_CT_Empty	1080:1:35178:35207	3959738	0	True				
ANR	3959742	AssignmentExpression	ctval . type = WinPerf_CT_Empty		3959738	0		=			
ANR	3959743	MemberAccess	ctval . type		3959738	0					
ANR	3959744	Identifier	ctval		3959738	0					
ANR	3959745	Identifier	type		3959738	1					
ANR	3959746	Identifier	WinPerf_CT_Empty		3959738	1					
ANR	3959747	ExpressionStatement	ctval . value . ul = 0	1081:1:35210:35228	3959738	1	True				
ANR	3959748	AssignmentExpression	ctval . value . ul = 0		3959738	0		=			
ANR	3959749	MemberAccess	ctval . value . ul		3959738	0					
ANR	3959750	MemberAccess	ctval . value		3959738	0					
ANR	3959751	Identifier	ctval		3959738	0					
ANR	3959752	Identifier	value		3959738	1					
ANR	3959753	Identifier	ul		3959738	1					
ANR	3959754	PrimaryExpression	0		3959738	1					
ANR	3959755	IdentifierDeclStatement	const DWORD type = pCounter -> CounterType ;	1083:1:35232:35272	3959738	2	True				
ANR	3959756	IdentifierDecl	type = pCounter -> CounterType		3959738	0					
ANR	3959757	IdentifierDeclType	const DWORD		3959738	0					
ANR	3959758	Identifier	type		3959738	1					
ANR	3959759	AssignmentExpression	type = pCounter -> CounterType		3959738	2		=			
ANR	3959760	Identifier	type		3959738	0					
ANR	3959761	PtrMemberAccess	pCounter -> CounterType		3959738	1					
ANR	3959762	Identifier	pCounter		3959738	0					
ANR	3959763	Identifier	CounterType		3959738	1					
ANR	3959764	IfStatement	if ( type & PERF_DISPLAY_NOSHOW )		3959738	3					
ANR	3959765	Condition	type & PERF_DISPLAY_NOSHOW	1084:5:35279:35304	3959738	0	True				
ANR	3959766	BitAndExpression	type & PERF_DISPLAY_NOSHOW		3959738	0		&			
ANR	3959767	Identifier	type		3959738	0					
ANR	3959768	Identifier	PERF_DISPLAY_NOSHOW		3959738	1					
ANR	3959769	ReturnStatement	return false ;	1085:2:35309:35321	3959738	1	True				
ANR	3959770	Identifier	false		3959738	0					
ANR	3959771	ExpressionStatement	"ctval . value . ul = GetRawValue ( pCounter , curr )"	1087:1:35325:35369	3959738	4	True				
ANR	3959772	AssignmentExpression	"ctval . value . ul = GetRawValue ( pCounter , curr )"		3959738	0		=			
ANR	3959773	MemberAccess	ctval . value . ul		3959738	0					
ANR	3959774	MemberAccess	ctval . value		3959738	0					
ANR	3959775	Identifier	ctval		3959738	0					
ANR	3959776	Identifier	value		3959738	1					
ANR	3959777	Identifier	ul		3959738	1					
ANR	3959778	CallExpression	"GetRawValue ( pCounter , curr )"		3959738	1					
ANR	3959779	Callee	GetRawValue		3959738	0					
ANR	3959780	Identifier	GetRawValue		3959738	0					
ANR	3959781	ArgumentList	pCounter		3959738	1					
ANR	3959782	Argument	pCounter		3959738	0					
ANR	3959783	Identifier	pCounter		3959738	0					
ANR	3959784	Argument	curr		3959738	1					
ANR	3959785	Identifier	curr		3959738	0					
ANR	3959786	IfStatement	if ( type & PERF_DELTA_COUNTER )		3959738	5					
ANR	3959787	Condition	type & PERF_DELTA_COUNTER	1088:5:35376:35400	3959738	0	True				
ANR	3959788	BitAndExpression	type & PERF_DELTA_COUNTER		3959738	0		&			
ANR	3959789	Identifier	type		3959738	0					
ANR	3959790	Identifier	PERF_DELTA_COUNTER		3959738	1					
ANR	3959791	CompoundStatement		14:2:266:309	3959738	1					
ANR	3959792	IfStatement	if ( ! prev )		3959738	0					
ANR	3959793	Condition	! prev	1090:7:35414:35420	3959738	0	True				
ANR	3959794	UnaryOperationExpression	! prev		3959738	0					
ANR	3959795	UnaryOperator	!		3959738	0					
ANR	3959796	Identifier	prev		3959738	1					
ANR	3959797	ReturnStatement	return false ;	1091:3:35426:35438	3959738	1	True				
ANR	3959798	Identifier	false		3959738	0					
ANR	3959799	IdentifierDeclStatement	"ULONGLONG old = GetRawValue ( pCounter , prev ) ;"	1092:2:35442:35485	3959738	1	True				
ANR	3959800	IdentifierDecl	"old = GetRawValue ( pCounter , prev )"		3959738	0					
ANR	3959801	IdentifierDeclType	ULONGLONG		3959738	0					
ANR	3959802	Identifier	old		3959738	1					
ANR	3959803	AssignmentExpression	"old = GetRawValue ( pCounter , prev )"		3959738	2		=			
ANR	3959804	Identifier	old		3959738	0					
ANR	3959805	CallExpression	"GetRawValue ( pCounter , prev )"		3959738	1					
ANR	3959806	Callee	GetRawValue		3959738	0					
ANR	3959807	Identifier	GetRawValue		3959738	0					
ANR	3959808	ArgumentList	pCounter		3959738	1					
ANR	3959809	Argument	pCounter		3959738	0					
ANR	3959810	Identifier	pCounter		3959738	0					
ANR	3959811	Argument	prev		3959738	1					
ANR	3959812	Identifier	prev		3959738	0					
ANR	3959813	IfStatement	if ( ctval . value . ul >= old )		3959738	2					
ANR	3959814	Condition	ctval . value . ul >= old	1093:6:35493:35513	3959738	0	True				
ANR	3959815	RelationalExpression	ctval . value . ul >= old		3959738	0		>=			
ANR	3959816	MemberAccess	ctval . value . ul		3959738	0					
ANR	3959817	MemberAccess	ctval . value		3959738	0					
ANR	3959818	Identifier	ctval		3959738	0					
ANR	3959819	Identifier	value		3959738	1					
ANR	3959820	Identifier	ul		3959738	1					
ANR	3959821	Identifier	old		3959738	1					
ANR	3959822	ExpressionStatement	ctval . value . ul = ctval . value . ul - old	1094:3:35519:35556	3959738	1	True				
ANR	3959823	AssignmentExpression	ctval . value . ul = ctval . value . ul - old		3959738	0		=			
ANR	3959824	MemberAccess	ctval . value . ul		3959738	0					
ANR	3959825	MemberAccess	ctval . value		3959738	0					
ANR	3959826	Identifier	ctval		3959738	0					
ANR	3959827	Identifier	value		3959738	1					
ANR	3959828	Identifier	ul		3959738	1					
ANR	3959829	AdditiveExpression	ctval . value . ul - old		3959738	1		-			
ANR	3959830	MemberAccess	ctval . value . ul		3959738	0					
ANR	3959831	MemberAccess	ctval . value		3959738	0					
ANR	3959832	Identifier	ctval		3959738	0					
ANR	3959833	Identifier	value		3959738	1					
ANR	3959834	Identifier	ul		3959738	1					
ANR	3959835	Identifier	old		3959738	1					
ANR	3959836	IfStatement	if ( ( type & PERF_TYPE_ZERO ) == PERF_TYPE_NUMBER )		3959738	6					
ANR	3959837	Condition	( type & PERF_TYPE_ZERO ) == PERF_TYPE_NUMBER	1101:5:35743:35785	3959738	0	True				
ANR	3959838	EqualityExpression	( type & PERF_TYPE_ZERO ) == PERF_TYPE_NUMBER		3959738	0		==			
ANR	3959839	BitAndExpression	type & PERF_TYPE_ZERO		3959738	0		&			
ANR	3959840	Identifier	type		3959738	0					
ANR	3959841	Identifier	PERF_TYPE_ZERO		3959738	1					
ANR	3959842	Identifier	PERF_TYPE_NUMBER		3959738	1					
ANR	3959843	CompoundStatement		24:1:613:613	3959738	1					
ANR	3959844	ExpressionStatement	ctval . type = WinPerf_CT_Unsigned	1103:2:35793:35825	3959738	0	True				
ANR	3959845	AssignmentExpression	ctval . type = WinPerf_CT_Unsigned		3959738	0		=			
ANR	3959846	MemberAccess	ctval . type		3959738	0					
ANR	3959847	Identifier	ctval		3959738	0					
ANR	3959848	Identifier	type		3959738	1					
ANR	3959849	Identifier	WinPerf_CT_Unsigned		3959738	1					
ANR	3959850	IfStatement	if ( type & PERF_NUMBER_DECIMAL )		3959738	1					
ANR	3959851	Condition	type & PERF_NUMBER_DECIMAL	1104:6:35833:35858	3959738	0	True				
ANR	3959852	BitAndExpression	type & PERF_NUMBER_DECIMAL		3959738	0		&			
ANR	3959853	Identifier	type		3959738	0					
ANR	3959854	Identifier	PERF_NUMBER_DECIMAL		3959738	1					
ANR	3959855	ExpressionStatement	ctval . type = ctval . type | WinPerf_CT_Decimal	1105:3:35864:35908	3959738	1	True				
ANR	3959856	AssignmentExpression	ctval . type = ctval . type | WinPerf_CT_Decimal		3959738	0		=			
ANR	3959857	MemberAccess	ctval . type		3959738	0					
ANR	3959858	Identifier	ctval		3959738	0					
ANR	3959859	Identifier	type		3959738	1					
ANR	3959860	InclusiveOrExpression	ctval . type | WinPerf_CT_Decimal		3959738	1		|			
ANR	3959861	MemberAccess	ctval . type		3959738	0					
ANR	3959862	Identifier	ctval		3959738	0					
ANR	3959863	Identifier	type		3959738	1					
ANR	3959864	Identifier	WinPerf_CT_Decimal		3959738	1					
ANR	3959865	ElseStatement	else		3959738	0					
ANR	3959866	CompoundStatement		29:2:744:744	3959738	0					
ANR	3959867	ExpressionStatement	ctval . type = WinPerf_CT_Hex	1108:3:35925:35952	3959738	0	True				
ANR	3959868	AssignmentExpression	ctval . type = WinPerf_CT_Hex		3959738	0		=			
ANR	3959869	MemberAccess	ctval . type		3959738	0					
ANR	3959870	Identifier	ctval		3959738	0					
ANR	3959871	Identifier	type		3959738	1					
ANR	3959872	Identifier	WinPerf_CT_Hex		3959738	1					
ANR	3959873	IfStatement	if ( ! ( type & PERF_SIZE_LARGE ) )		3959738	1					
ANR	3959874	Condition	! ( type & PERF_SIZE_LARGE )	1109:8:35962:35987	3959738	0	True				
ANR	3959875	UnaryOperationExpression	! ( type & PERF_SIZE_LARGE )		3959738	0					
ANR	3959876	UnaryOperator	!		3959738	0					
ANR	3959877	BitAndExpression	type & PERF_SIZE_LARGE		3959738	1		&			
ANR	3959878	Identifier	type		3959738	0					
ANR	3959879	Identifier	PERF_SIZE_LARGE		3959738	1					
ANR	3959880	ExpressionStatement	ctval . type = ctval . type | WinPerf_CT_Short	1110:4:35994:36036	3959738	1	True				
ANR	3959881	AssignmentExpression	ctval . type = ctval . type | WinPerf_CT_Short		3959738	0		=			
ANR	3959882	MemberAccess	ctval . type		3959738	0					
ANR	3959883	Identifier	ctval		3959738	0					
ANR	3959884	Identifier	type		3959738	1					
ANR	3959885	InclusiveOrExpression	ctval . type | WinPerf_CT_Short		3959738	1		|			
ANR	3959886	MemberAccess	ctval . type		3959738	0					
ANR	3959887	Identifier	ctval		3959738	0					
ANR	3959888	Identifier	type		3959738	1					
ANR	3959889	Identifier	WinPerf_CT_Short		3959738	1					
ANR	3959890	ReturnStatement	return true ;	1112:2:36044:36055	3959738	2	True				
ANR	3959891	Identifier	true		3959738	0					
ANR	3959892	IfStatement	if ( ( type & PERF_TYPE_ZERO ) != PERF_TYPE_COUNTER )		3959738	7					
ANR	3959893	Condition	( type & PERF_TYPE_ZERO ) != PERF_TYPE_COUNTER	1118:5:36178:36221	3959738	0	True				
ANR	3959894	EqualityExpression	( type & PERF_TYPE_ZERO ) != PERF_TYPE_COUNTER		3959738	0		!=			
ANR	3959895	BitAndExpression	type & PERF_TYPE_ZERO		3959738	0		&			
ANR	3959896	Identifier	type		3959738	0					
ANR	3959897	Identifier	PERF_TYPE_ZERO		3959738	1					
ANR	3959898	Identifier	PERF_TYPE_COUNTER		3959738	1					
ANR	3959899	ReturnStatement	return false ;	1119:2:36226:36238	3959738	1	True				
ANR	3959900	Identifier	false		3959738	0					
ANR	3959901	IfStatement	if ( ( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_VALUE )		3959738	8					
ANR	3959902	Condition	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_VALUE	1124:8:36329:36381	3959738	0	True				
ANR	3959903	EqualityExpression	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_VALUE		3959738	0		==			
ANR	3959904	BitAndExpression	type & PERF_COUNTER_PRECISION		3959738	0		&			
ANR	3959905	Identifier	type		3959738	0					
ANR	3959906	Identifier	PERF_COUNTER_PRECISION		3959738	1					
ANR	3959907	Identifier	PERF_COUNTER_VALUE		3959738	1					
ANR	3959908	CompoundStatement		47:1:1236:1236	3959738	1					
ANR	3959909	ExpressionStatement	ctval . type = WinPerf_CT_Unsigned	1126:2:36416:36448	3959738	0	True				
ANR	3959910	AssignmentExpression	ctval . type = WinPerf_CT_Unsigned		3959738	0		=			
ANR	3959911	MemberAccess	ctval . type		3959738	0					
ANR	3959912	Identifier	ctval		3959738	0					
ANR	3959913	Identifier	type		3959738	1					
ANR	3959914	Identifier	WinPerf_CT_Unsigned		3959738	1					
ANR	3959915	IfStatement	if ( ! ( type & PERF_SIZE_LARGE ) )		3959738	1					
ANR	3959916	Condition	! ( type & PERF_SIZE_LARGE )	1127:7:36457:36482	3959738	0	True				
ANR	3959917	UnaryOperationExpression	! ( type & PERF_SIZE_LARGE )		3959738	0					
ANR	3959918	UnaryOperator	!		3959738	0					
ANR	3959919	BitAndExpression	type & PERF_SIZE_LARGE		3959738	1		&			
ANR	3959920	Identifier	type		3959738	0					
ANR	3959921	Identifier	PERF_SIZE_LARGE		3959738	1					
ANR	3959922	ExpressionStatement	ctval . type |= WinPerf_CT_Short	1128:3:36488:36518	3959738	1	True				
ANR	3959923	AssignmentExpression	ctval . type |= WinPerf_CT_Short		3959738	0		|=			
ANR	3959924	MemberAccess	ctval . type		3959738	0					
ANR	3959925	Identifier	ctval		3959738	0					
ANR	3959926	Identifier	type		3959738	1					
ANR	3959927	Identifier	WinPerf_CT_Short		3959738	1					
ANR	3959928	ElseStatement	else		3959738	0					
ANR	3959929	IfStatement	if ( ( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_RATE )		3959738	0					
ANR	3959930	Condition	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_RATE	1130:10:36533:36584	3959738	0	True				
ANR	3959931	EqualityExpression	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_RATE		3959738	0		==			
ANR	3959932	BitAndExpression	type & PERF_COUNTER_PRECISION		3959738	0		&			
ANR	3959933	Identifier	type		3959738	0					
ANR	3959934	Identifier	PERF_COUNTER_PRECISION		3959738	1					
ANR	3959935	Identifier	PERF_COUNTER_RATE		3959738	1					
ANR	3959936	CompoundStatement		94:2:2691:2709	3959738	1					
ANR	3959937	IdentifierDeclStatement	LONGLONG val = ctval . value . ul ;	1132:2:36619:36648	3959738	0	True				
ANR	3959938	IdentifierDecl	val = ctval . value . ul		3959738	0					
ANR	3959939	IdentifierDeclType	LONGLONG		3959738	0					
ANR	3959940	Identifier	val		3959738	1					
ANR	3959941	AssignmentExpression	val = ctval . value . ul		3959738	2		=			
ANR	3959942	Identifier	val		3959738	0					
ANR	3959943	MemberAccess	ctval . value . ul		3959738	1					
ANR	3959944	MemberAccess	ctval . value		3959738	0					
ANR	3959945	Identifier	ctval		3959738	0					
ANR	3959946	Identifier	value		3959738	1					
ANR	3959947	Identifier	ul		3959738	1					
ANR	3959948	ExpressionStatement	ctval . type = WinPerf_CT_Double	1133:2:36652:36682	3959738	1	True				
ANR	3959949	AssignmentExpression	ctval . type = WinPerf_CT_Double		3959738	0		=			
ANR	3959950	MemberAccess	ctval . type		3959738	0					
ANR	3959951	Identifier	ctval		3959738	0					
ANR	3959952	Identifier	type		3959738	1					
ANR	3959953	Identifier	WinPerf_CT_Double		3959738	1					
ANR	3959954	ExpressionStatement	ctval . value . d = 0.0	1134:2:36686:36705	3959738	2	True				
ANR	3959955	AssignmentExpression	ctval . value . d = 0.0		3959738	0		=			
ANR	3959956	MemberAccess	ctval . value . d		3959738	0					
ANR	3959957	MemberAccess	ctval . value		3959738	0					
ANR	3959958	Identifier	ctval		3959738	0					
ANR	3959959	Identifier	value		3959738	1					
ANR	3959960	Identifier	d		3959738	1					
ANR	3959961	PrimaryExpression	0.0		3959738	1					
ANR	3959962	IdentifierDeclStatement	LONGLONG freq = 1 ;	1144:2:37159:37176	3959738	3	True				
ANR	3959963	IdentifierDecl	freq = 1		3959738	0					
ANR	3959964	IdentifierDeclType	LONGLONG		3959738	0					
ANR	3959965	Identifier	freq		3959738	1					
ANR	3959966	AssignmentExpression	freq = 1		3959738	2		=			
ANR	3959967	Identifier	freq		3959738	0					
ANR	3959968	PrimaryExpression	1		3959738	1					
ANR	3959969	IfStatement	if ( ( type & PERF_DISPLAY_SECONDS ) <= PERF_DISPLAY_PER_SEC )		3959738	4					
ANR	3959970	Condition	( type & PERF_DISPLAY_SECONDS ) <= PERF_DISPLAY_PER_SEC	1145:6:37184:37236	3959738	0	True				
ANR	3959971	RelationalExpression	( type & PERF_DISPLAY_SECONDS ) <= PERF_DISPLAY_PER_SEC		3959738	0		<=			
ANR	3959972	BitAndExpression	type & PERF_DISPLAY_SECONDS		3959738	0		&			
ANR	3959973	Identifier	type		3959738	0					
ANR	3959974	Identifier	PERF_DISPLAY_SECONDS		3959738	1					
ANR	3959975	Identifier	PERF_DISPLAY_PER_SEC		3959738	1					
ANR	3959976	ExpressionStatement	freq = time . headfreq	1146:3:37265:37285	3959738	1	True				
ANR	3959977	AssignmentExpression	freq = time . headfreq		3959738	0		=			
ANR	3959978	Identifier	freq		3959738	0					
ANR	3959979	MemberAccess	time . headfreq		3959738	1					
ANR	3959980	Identifier	time		3959738	0					
ANR	3959981	Identifier	headfreq		3959738	1					
ANR	3959982	IdentifierDeclStatement	LONG pct = 1 ;	1150:2:37388:37401	3959738	5	True				
ANR	3959983	IdentifierDecl	pct = 1		3959738	0					
ANR	3959984	IdentifierDeclType	LONG		3959738	0					
ANR	3959985	Identifier	pct		3959738	1					
ANR	3959986	AssignmentExpression	pct = 1		3959738	2		=			
ANR	3959987	Identifier	pct		3959738	0					
ANR	3959988	PrimaryExpression	1		3959738	1					
ANR	3959989	IfStatement	if ( ( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PERCENT )		3959738	6					
ANR	3959990	Condition	( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PERCENT	1151:6:37409:37461	3959738	0	True				
ANR	3959991	EqualityExpression	( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PERCENT		3959738	0		==			
ANR	3959992	BitAndExpression	type & PERF_DISPLAY_SECONDS		3959738	0		&			
ANR	3959993	Identifier	type		3959738	0					
ANR	3959994	Identifier	PERF_DISPLAY_SECONDS		3959738	1					
ANR	3959995	Identifier	PERF_DISPLAY_PERCENT		3959738	1					
ANR	3959996	ExpressionStatement	pct = 100	1152:3:37467:37476	3959738	1	True				
ANR	3959997	AssignmentExpression	pct = 100		3959738	0		=			
ANR	3959998	Identifier	pct		3959738	0					
ANR	3959999	PrimaryExpression	100		3959738	1					
ANR	3960000	IdentifierDeclStatement	double scale = 1.0 ;	1156:2:37531:37551	3959738	7	True				
ANR	3960001	IdentifierDecl	scale = 1.0		3959738	0					
ANR	3960002	IdentifierDeclType	double		3959738	0					
ANR	3960003	Identifier	scale		3959738	1					
ANR	3960004	AssignmentExpression	scale = 1.0		3959738	2		=			
ANR	3960005	Identifier	scale		3959738	0					
ANR	3960006	PrimaryExpression	1.0		3959738	1					
ANR	3960007	IfStatement	if ( type & PERF_TIMER_100NS )		3959738	8					
ANR	3960008	Condition	type & PERF_TIMER_100NS	1157:6:37559:37581	3959738	0	True				
ANR	3960009	BitAndExpression	type & PERF_TIMER_100NS		3959738	0		&			
ANR	3960010	Identifier	type		3959738	0					
ANR	3960011	Identifier	PERF_TIMER_100NS		3959738	1					
ANR	3960012	CompoundStatement		80:2:2411:2411	3959738	1					
ANR	3960013	IfStatement	if ( time . nanos )		3959738	0					
ANR	3960014	Condition	time . nanos	1159:7:37596:37605	3959738	0	True				
ANR	3960015	MemberAccess	time . nanos		3959738	0					
ANR	3960016	Identifier	time		3959738	0					
ANR	3960017	Identifier	nanos		3959738	1					
ANR	3960018	ExpressionStatement	scale = ( double ) freq * pct / time . nanos	1159:19:37608:37643	3959738	1	True				
ANR	3960019	AssignmentExpression	scale = ( double ) freq * pct / time . nanos		3959738	0		=			
ANR	3960020	Identifier	scale		3959738	0					
ANR	3960021	MultiplicativeExpression	( double ) freq * pct / time . nanos		3959738	1		*			
ANR	3960022	CastExpression	( double ) freq		3959738	0					
ANR	3960023	CastTarget	double		3959738	0					
ANR	3960024	Identifier	freq		3959738	1					
ANR	3960025	MultiplicativeExpression	pct / time . nanos		3959738	1		/			
ANR	3960026	Identifier	pct		3959738	0					
ANR	3960027	MemberAccess	time . nanos		3959738	1					
ANR	3960028	Identifier	time		3959738	0					
ANR	3960029	Identifier	nanos		3959738	1					
ANR	3960030	ElseStatement	else		3959738	0					
ANR	3960031	IfStatement	if ( type & PERF_OBJECT_TIMER )		3959738	0					
ANR	3960032	Condition	type & PERF_OBJECT_TIMER	1161:11:37660:37683	3959738	0	True				
ANR	3960033	BitAndExpression	type & PERF_OBJECT_TIMER		3959738	0		&			
ANR	3960034	Identifier	type		3959738	0					
ANR	3960035	Identifier	PERF_OBJECT_TIMER		3959738	1					
ANR	3960036	CompoundStatement		84:2:2513:2513	3959738	1					
ANR	3960037	IfStatement	if ( time . obj )		3959738	0					
ANR	3960038	Condition	time . obj	1163:7:37698:37705	3959738	0	True				
ANR	3960039	MemberAccess	time . obj		3959738	0					
ANR	3960040	Identifier	time		3959738	0					
ANR	3960041	Identifier	obj		3959738	1					
ANR	3960042	ExpressionStatement	scale = ( double ) freq * pct / time . obj	1163:17:37708:37741	3959738	1	True				
ANR	3960043	AssignmentExpression	scale = ( double ) freq * pct / time . obj		3959738	0		=			
ANR	3960044	Identifier	scale		3959738	0					
ANR	3960045	MultiplicativeExpression	( double ) freq * pct / time . obj		3959738	1		*			
ANR	3960046	CastExpression	( double ) freq		3959738	0					
ANR	3960047	CastTarget	double		3959738	0					
ANR	3960048	Identifier	freq		3959738	1					
ANR	3960049	MultiplicativeExpression	pct / time . obj		3959738	1		/			
ANR	3960050	Identifier	pct		3959738	0					
ANR	3960051	MemberAccess	time . obj		3959738	1					
ANR	3960052	Identifier	time		3959738	0					
ANR	3960053	Identifier	obj		3959738	1					
ANR	3960054	ElseStatement	else		3959738	0					
ANR	3960055	CompoundStatement		88:2:2580:2580	3959738	0					
ANR	3960056	IfStatement	if ( time . head )		3959738	0					
ANR	3960057	Condition	time . head	1167:7:37765:37773	3959738	0	True				
ANR	3960058	MemberAccess	time . head		3959738	0					
ANR	3960059	Identifier	time		3959738	0					
ANR	3960060	Identifier	head		3959738	1					
ANR	3960061	ExpressionStatement	scale = ( double ) freq * pct / time . head	1167:18:37776:37810	3959738	1	True				
ANR	3960062	AssignmentExpression	scale = ( double ) freq * pct / time . head		3959738	0		=			
ANR	3960063	Identifier	scale		3959738	0					
ANR	3960064	MultiplicativeExpression	( double ) freq * pct / time . head		3959738	1		*			
ANR	3960065	CastExpression	( double ) freq		3959738	0					
ANR	3960066	CastTarget	double		3959738	0					
ANR	3960067	Identifier	freq		3959738	1					
ANR	3960068	MultiplicativeExpression	pct / time . head		3959738	1		/			
ANR	3960069	Identifier	pct		3959738	0					
ANR	3960070	MemberAccess	time . head		3959738	1					
ANR	3960071	Identifier	time		3959738	0					
ANR	3960072	Identifier	head		3959738	1					
ANR	3960073	IdentifierDeclStatement	double value = 0.0 ;	1172:2:37867:37885	3959738	9	True				
ANR	3960074	IdentifierDecl	value = 0.0		3959738	0					
ANR	3960075	IdentifierDeclType	double		3959738	0					
ANR	3960076	Identifier	value		3959738	1					
ANR	3960077	AssignmentExpression	value = 0.0		3959738	2		=			
ANR	3960078	Identifier	value		3959738	0					
ANR	3960079	PrimaryExpression	0.0		3959738	1					
ANR	3960080	IfStatement	if ( type & PERF_MULTI_COUNTER )		3959738	10					
ANR	3960081	Condition	type & PERF_MULTI_COUNTER	1173:6:37893:37917	3959738	0	True				
ANR	3960082	BitAndExpression	type & PERF_MULTI_COUNTER		3959738	0		&			
ANR	3960083	Identifier	type		3959738	0					
ANR	3960084	Identifier	PERF_MULTI_COUNTER		3959738	1					
ANR	3960085	CompoundStatement		97:3:2751:2810	3959738	1					
ANR	3960086	IdentifierDeclStatement	DWORD multi = ( ( DWORD * ) ( curr + pCounter -> CounterOffset ) ) [ 2 ] ;	1175:3:37927:37986	3959738	0	True				
ANR	3960087	IdentifierDecl	multi = ( ( DWORD * ) ( curr + pCounter -> CounterOffset ) ) [ 2 ]		3959738	0					
ANR	3960088	IdentifierDeclType	DWORD		3959738	0					
ANR	3960089	Identifier	multi		3959738	1					
ANR	3960090	AssignmentExpression	multi = ( ( DWORD * ) ( curr + pCounter -> CounterOffset ) ) [ 2 ]		3959738	2		=			
ANR	3960091	Identifier	multi		3959738	0					
ANR	3960092	ArrayIndexing	( ( DWORD * ) ( curr + pCounter -> CounterOffset ) ) [ 2 ]		3959738	1					
ANR	3960093	CastExpression	( DWORD * ) ( curr + pCounter -> CounterOffset )		3959738	0					
ANR	3960094	CastTarget	DWORD *		3959738	0					
ANR	3960095	AdditiveExpression	curr + pCounter -> CounterOffset		3959738	1		+			
ANR	3960096	Identifier	curr		3959738	0					
ANR	3960097	PtrMemberAccess	pCounter -> CounterOffset		3959738	1					
ANR	3960098	Identifier	pCounter		3959738	0					
ANR	3960099	Identifier	CounterOffset		3959738	1					
ANR	3960100	PrimaryExpression	2		3959738	1					
ANR	3960101	IfStatement	if ( type & PERF_INVERSE_COUNTER )		3959738	1					
ANR	3960102	Condition	type & PERF_INVERSE_COUNTER	1176:7:37995:38021	3959738	0	True				
ANR	3960103	BitAndExpression	type & PERF_INVERSE_COUNTER		3959738	0		&			
ANR	3960104	Identifier	type		3959738	0					
ANR	3960105	Identifier	PERF_INVERSE_COUNTER		3959738	1					
ANR	3960106	ExpressionStatement	ctval . value . d = ( double ) multi * pct - val * scale	1177:4:38028:38077	3959738	1	True				
ANR	3960107	AssignmentExpression	ctval . value . d = ( double ) multi * pct - val * scale		3959738	0		=			
ANR	3960108	MemberAccess	ctval . value . d		3959738	0					
ANR	3960109	MemberAccess	ctval . value		3959738	0					
ANR	3960110	Identifier	ctval		3959738	0					
ANR	3960111	Identifier	value		3959738	1					
ANR	3960112	Identifier	d		3959738	1					
ANR	3960113	AdditiveExpression	( double ) multi * pct - val * scale		3959738	1		-			
ANR	3960114	MultiplicativeExpression	( double ) multi * pct		3959738	0		*			
ANR	3960115	CastExpression	( double ) multi		3959738	0					
ANR	3960116	CastTarget	double		3959738	0					
ANR	3960117	Identifier	multi		3959738	1					
ANR	3960118	Identifier	pct		3959738	1					
ANR	3960119	MultiplicativeExpression	val * scale		3959738	1		*			
ANR	3960120	Identifier	val		3959738	0					
ANR	3960121	Identifier	scale		3959738	1					
ANR	3960122	ElseStatement	else		3959738	0					
ANR	3960123	IfStatement	if ( multi )		3959738	0					
ANR	3960124	Condition	multi	1178:12:38091:38095	3959738	0	True				
ANR	3960125	Identifier	multi		3959738	0					
ANR	3960126	ExpressionStatement	ctval . value . d = ( val * scale ) / multi	1179:4:38102:38139	3959738	1	True				
ANR	3960127	AssignmentExpression	ctval . value . d = ( val * scale ) / multi		3959738	0		=			
ANR	3960128	MemberAccess	ctval . value . d		3959738	0					
ANR	3960129	MemberAccess	ctval . value		3959738	0					
ANR	3960130	Identifier	ctval		3959738	0					
ANR	3960131	Identifier	value		3959738	1					
ANR	3960132	Identifier	d		3959738	1					
ANR	3960133	MultiplicativeExpression	( val * scale ) / multi		3959738	1		/			
ANR	3960134	MultiplicativeExpression	val * scale		3959738	0		*			
ANR	3960135	Identifier	val		3959738	0					
ANR	3960136	Identifier	scale		3959738	1					
ANR	3960137	Identifier	multi		3959738	1					
ANR	3960138	ElseStatement	else		3959738	0					
ANR	3960139	IfStatement	if ( type & PERF_INVERSE_COUNTER )		3959738	0					
ANR	3960140	Condition	type & PERF_INVERSE_COUNTER	1181:11:38156:38182	3959738	0	True				
ANR	3960141	BitAndExpression	type & PERF_INVERSE_COUNTER		3959738	0		&			
ANR	3960142	Identifier	type		3959738	0					
ANR	3960143	Identifier	PERF_INVERSE_COUNTER		3959738	1					
ANR	3960144	CompoundStatement		104:2:3011:3011	3959738	1					
ANR	3960145	ExpressionStatement	ctval . value . d = pct - ( val * scale )	1183:3:38192:38227	3959738	0	True				
ANR	3960146	AssignmentExpression	ctval . value . d = pct - ( val * scale )		3959738	0		=			
ANR	3960147	MemberAccess	ctval . value . d		3959738	0					
ANR	3960148	MemberAccess	ctval . value		3959738	0					
ANR	3960149	Identifier	ctval		3959738	0					
ANR	3960150	Identifier	value		3959738	1					
ANR	3960151	Identifier	d		3959738	1					
ANR	3960152	AdditiveExpression	pct - ( val * scale )		3959738	1		-			
ANR	3960153	Identifier	pct		3959738	0					
ANR	3960154	MultiplicativeExpression	val * scale		3959738	1		*			
ANR	3960155	Identifier	val		3959738	0					
ANR	3960156	Identifier	scale		3959738	1					
ANR	3960157	ElseStatement	else		3959738	0					
ANR	3960158	CompoundStatement		108:2:3066:3066	3959738	0					
ANR	3960159	ExpressionStatement	ctval . value . d = val * scale	1187:3:38247:38274	3959738	0	True				
ANR	3960160	AssignmentExpression	ctval . value . d = val * scale		3959738	0		=			
ANR	3960161	MemberAccess	ctval . value . d		3959738	0					
ANR	3960162	MemberAccess	ctval . value		3959738	0					
ANR	3960163	Identifier	ctval		3959738	0					
ANR	3960164	Identifier	value		3959738	1					
ANR	3960165	Identifier	d		3959738	1					
ANR	3960166	MultiplicativeExpression	val * scale		3959738	1		*			
ANR	3960167	Identifier	val		3959738	0					
ANR	3960168	Identifier	scale		3959738	1					
ANR	3960169	ElseStatement	else		3959738	0					
ANR	3960170	IfStatement	if ( ( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_ELAPSED )		3959738	0					
ANR	3960171	Condition	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_ELAPSED	1190:10:38293:38347	3959738	0	True				
ANR	3960172	EqualityExpression	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_ELAPSED		3959738	0		==			
ANR	3960173	BitAndExpression	type & PERF_COUNTER_PRECISION		3959738	0		&			
ANR	3960174	Identifier	type		3959738	0					
ANR	3960175	Identifier	PERF_COUNTER_PRECISION		3959738	1					
ANR	3960176	Identifier	PERF_COUNTER_ELAPSED		3959738	1					
ANR	3960177	CompoundStatement		113:1:3209:3209	3959738	1					
ANR	3960178	ExpressionStatement	ctval . value . d = ( double ) ( time . objabs - ctval . value . ul )	1192:2:38389:38443	3959738	0	True				
ANR	3960179	AssignmentExpression	ctval . value . d = ( double ) ( time . objabs - ctval . value . ul )		3959738	0		=			
ANR	3960180	MemberAccess	ctval . value . d		3959738	0					
ANR	3960181	MemberAccess	ctval . value		3959738	0					
ANR	3960182	Identifier	ctval		3959738	0					
ANR	3960183	Identifier	value		3959738	1					
ANR	3960184	Identifier	d		3959738	1					
ANR	3960185	CastExpression	( double ) ( time . objabs - ctval . value . ul )		3959738	1					
ANR	3960186	CastTarget	double		3959738	0					
ANR	3960187	AdditiveExpression	time . objabs - ctval . value . ul		3959738	1		-			
ANR	3960188	MemberAccess	time . objabs		3959738	0					
ANR	3960189	Identifier	time		3959738	0					
ANR	3960190	Identifier	objabs		3959738	1					
ANR	3960191	MemberAccess	ctval . value . ul		3959738	1					
ANR	3960192	MemberAccess	ctval . value		3959738	0					
ANR	3960193	Identifier	ctval		3959738	0					
ANR	3960194	Identifier	value		3959738	1					
ANR	3960195	Identifier	ul		3959738	1					
ANR	3960196	IfStatement	if ( time . objfreq )		3959738	1					
ANR	3960197	Condition	time . objfreq	1193:6:38451:38462	3959738	0	True				
ANR	3960198	MemberAccess	time . objfreq		3959738	0					
ANR	3960199	Identifier	time		3959738	0					
ANR	3960200	Identifier	objfreq		3959738	1					
ANR	3960201	ExpressionStatement	ctval . value . d /= time . objfreq	1194:3:38468:38497	3959738	1	True				
ANR	3960202	AssignmentExpression	ctval . value . d /= time . objfreq		3959738	0		/=			
ANR	3960203	MemberAccess	ctval . value . d		3959738	0					
ANR	3960204	MemberAccess	ctval . value		3959738	0					
ANR	3960205	Identifier	ctval		3959738	0					
ANR	3960206	Identifier	value		3959738	1					
ANR	3960207	Identifier	d		3959738	1					
ANR	3960208	MemberAccess	time . objfreq		3959738	1					
ANR	3960209	Identifier	time		3959738	0					
ANR	3960210	Identifier	objfreq		3959738	1					
ANR	3960211	ExpressionStatement	ctval . type = WinPerf_CT_Double	1195:2:38501:38531	3959738	2	True				
ANR	3960212	AssignmentExpression	ctval . type = WinPerf_CT_Double		3959738	0		=			
ANR	3960213	MemberAccess	ctval . type		3959738	0					
ANR	3960214	Identifier	ctval		3959738	0					
ANR	3960215	Identifier	type		3959738	1					
ANR	3960216	Identifier	WinPerf_CT_Double		3959738	1					
ANR	3960217	ElseStatement	else		3959738	0					
ANR	3960218	IfStatement	if ( ( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_FRACTION )		3959738	0					
ANR	3960219	Condition	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_FRACTION	1197:10:38546:38601	3959738	0	True				
ANR	3960220	EqualityExpression	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_FRACTION		3959738	0		==			
ANR	3960221	BitAndExpression	type & PERF_COUNTER_PRECISION		3959738	0		&			
ANR	3960222	Identifier	type		3959738	0					
ANR	3960223	Identifier	PERF_COUNTER_PRECISION		3959738	1					
ANR	3960224	Identifier	PERF_COUNTER_FRACTION		3959738	1					
ANR	3960225	CompoundStatement		129:2:3707:3725	3959738	1					
ANR	3960226	IdentifierDeclStatement	ULONGLONG val = ctval . value . ul ;	1199:2:38609:38639	3959738	0	True				
ANR	3960227	IdentifierDecl	val = ctval . value . ul		3959738	0					
ANR	3960228	IdentifierDeclType	ULONGLONG		3959738	0					
ANR	3960229	Identifier	val		3959738	1					
ANR	3960230	AssignmentExpression	val = ctval . value . ul		3959738	2		=			
ANR	3960231	Identifier	val		3959738	0					
ANR	3960232	MemberAccess	ctval . value . ul		3959738	1					
ANR	3960233	MemberAccess	ctval . value		3959738	0					
ANR	3960234	Identifier	ctval		3959738	0					
ANR	3960235	Identifier	value		3959738	1					
ANR	3960236	Identifier	ul		3959738	1					
ANR	3960237	IdentifierDeclStatement	LONG pct = 1 ;	1202:2:38741:38754	3959738	1	True				
ANR	3960238	IdentifierDecl	pct = 1		3959738	0					
ANR	3960239	IdentifierDeclType	LONG		3959738	0					
ANR	3960240	Identifier	pct		3959738	1					
ANR	3960241	AssignmentExpression	pct = 1		3959738	2		=			
ANR	3960242	Identifier	pct		3959738	0					
ANR	3960243	PrimaryExpression	1		3959738	1					
ANR	3960244	IfStatement	if ( ( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PERCENT )		3959738	2					
ANR	3960245	Condition	( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PERCENT	1203:6:38762:38814	3959738	0	True				
ANR	3960246	EqualityExpression	( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PERCENT		3959738	0		==			
ANR	3960247	BitAndExpression	type & PERF_DISPLAY_SECONDS		3959738	0		&			
ANR	3960248	Identifier	type		3959738	0					
ANR	3960249	Identifier	PERF_DISPLAY_SECONDS		3959738	1					
ANR	3960250	Identifier	PERF_DISPLAY_PERCENT		3959738	1					
ANR	3960251	ExpressionStatement	pct = 100	1204:3:38820:38829	3959738	1	True				
ANR	3960252	AssignmentExpression	pct = 100		3959738	0		=			
ANR	3960253	Identifier	pct		3959738	0					
ANR	3960254	PrimaryExpression	100		3959738	1					
ANR	3960255	IdentifierDeclStatement	const WinPerf_CounterDef * pBase = pCounter + 1 ;	1206:2:38834:38879	3959738	3	True				
ANR	3960256	IdentifierDecl	* pBase = pCounter + 1		3959738	0					
ANR	3960257	IdentifierDeclType	const WinPerf_CounterDef *		3959738	0					
ANR	3960258	Identifier	pBase		3959738	1					
ANR	3960259	AssignmentExpression	* pBase = pCounter + 1		3959738	2		=			
ANR	3960260	Identifier	pBase		3959738	0					
ANR	3960261	AdditiveExpression	pCounter + 1		3959738	1		+			
ANR	3960262	Identifier	pCounter		3959738	0					
ANR	3960263	PrimaryExpression	1		3959738	1					
ANR	3960264	IdentifierDeclStatement	double scale = 1.0 ;	1207:2:38883:38901	3959738	4	True				
ANR	3960265	IdentifierDecl	scale = 1.0		3959738	0					
ANR	3960266	IdentifierDeclType	double		3959738	0					
ANR	3960267	Identifier	scale		3959738	1					
ANR	3960268	AssignmentExpression	scale = 1.0		3959738	2		=			
ANR	3960269	Identifier	scale		3959738	0					
ANR	3960270	PrimaryExpression	1.0		3959738	1					
ANR	3960271	IfStatement	if ( ( pBase -> CounterType & PERF_COUNTER_PRECISION ) == PERF_COUNTER_BASE )		3959738	5					
ANR	3960272	Condition	( pBase -> CounterType & PERF_COUNTER_PRECISION ) == PERF_COUNTER_BASE	1208:6:38909:38974	3959738	0	True				
ANR	3960273	EqualityExpression	( pBase -> CounterType & PERF_COUNTER_PRECISION ) == PERF_COUNTER_BASE		3959738	0		==			
ANR	3960274	BitAndExpression	pBase -> CounterType & PERF_COUNTER_PRECISION		3959738	0		&			
ANR	3960275	PtrMemberAccess	pBase -> CounterType		3959738	0					
ANR	3960276	Identifier	pBase		3959738	0					
ANR	3960277	Identifier	CounterType		3959738	1					
ANR	3960278	Identifier	PERF_COUNTER_PRECISION		3959738	1					
ANR	3960279	Identifier	PERF_COUNTER_BASE		3959738	1					
ANR	3960280	CompoundStatement		132:3:3808:3849	3959738	1					
ANR	3960281	IdentifierDeclStatement	"ULONGLONG base = GetRawValue ( pBase , curr ) ;"	1210:3:38984:39025	3959738	0	True				
ANR	3960282	IdentifierDecl	"base = GetRawValue ( pBase , curr )"		3959738	0					
ANR	3960283	IdentifierDeclType	ULONGLONG		3959738	0					
ANR	3960284	Identifier	base		3959738	1					
ANR	3960285	AssignmentExpression	"base = GetRawValue ( pBase , curr )"		3959738	2		=			
ANR	3960286	Identifier	base		3959738	0					
ANR	3960287	CallExpression	"GetRawValue ( pBase , curr )"		3959738	1					
ANR	3960288	Callee	GetRawValue		3959738	0					
ANR	3960289	Identifier	GetRawValue		3959738	0					
ANR	3960290	ArgumentList	pBase		3959738	1					
ANR	3960291	Argument	pBase		3959738	0					
ANR	3960292	Identifier	pBase		3959738	0					
ANR	3960293	Argument	curr		3959738	1					
ANR	3960294	Identifier	curr		3959738	0					
ANR	3960295	IfStatement	if ( type & PERF_DELTA_COUNTER )		3959738	1					
ANR	3960296	Condition	type & PERF_DELTA_COUNTER	1211:7:39034:39058	3959738	0	True				
ANR	3960297	BitAndExpression	type & PERF_DELTA_COUNTER		3959738	0		&			
ANR	3960298	Identifier	type		3959738	0					
ANR	3960299	Identifier	PERF_DELTA_COUNTER		3959738	1					
ANR	3960300	CompoundStatement		135:4:3894:3938	3959738	1					
ANR	3960301	IdentifierDeclStatement	"ULONGLONG baseOld = GetRawValue ( pBase , prev ) ;"	1213:4:39070:39114	3959738	0	True				
ANR	3960302	IdentifierDecl	"baseOld = GetRawValue ( pBase , prev )"		3959738	0					
ANR	3960303	IdentifierDeclType	ULONGLONG		3959738	0					
ANR	3960304	Identifier	baseOld		3959738	1					
ANR	3960305	AssignmentExpression	"baseOld = GetRawValue ( pBase , prev )"		3959738	2		=			
ANR	3960306	Identifier	baseOld		3959738	0					
ANR	3960307	CallExpression	"GetRawValue ( pBase , prev )"		3959738	1					
ANR	3960308	Callee	GetRawValue		3959738	0					
ANR	3960309	Identifier	GetRawValue		3959738	0					
ANR	3960310	ArgumentList	pBase		3959738	1					
ANR	3960311	Argument	pBase		3959738	0					
ANR	3960312	Identifier	pBase		3959738	0					
ANR	3960313	Argument	prev		3959738	1					
ANR	3960314	Identifier	prev		3959738	0					
ANR	3960315	ExpressionStatement	base -= baseOld	1214:4:39120:39135	3959738	1	True				
ANR	3960316	AssignmentExpression	base -= baseOld		3959738	0		-=			
ANR	3960317	Identifier	base		3959738	0					
ANR	3960318	Identifier	baseOld		3959738	1					
ANR	3960319	IfStatement	if ( base )		3959738	2					
ANR	3960320	Condition	base	1216:7:39149:39152	3959738	0	True				
ANR	3960321	Identifier	base		3959738	0					
ANR	3960322	ExpressionStatement	scale = pct / base	1217:4:39159:39175	3959738	1	True				
ANR	3960323	AssignmentExpression	scale = pct / base		3959738	0		=			
ANR	3960324	Identifier	scale		3959738	0					
ANR	3960325	MultiplicativeExpression	pct / base		3959738	1		/			
ANR	3960326	Identifier	pct		3959738	0					
ANR	3960327	Identifier	base		3959738	1					
ANR	3960328	IfStatement	if ( PERF_AVERAGE_TIMER == type )		3959738	6					
ANR	3960329	Condition	PERF_AVERAGE_TIMER == type	1223:6:39384:39409	3959738	0	True				
ANR	3960330	EqualityExpression	PERF_AVERAGE_TIMER == type		3959738	0		==			
ANR	3960331	Identifier	PERF_AVERAGE_TIMER		3959738	0					
ANR	3960332	Identifier	type		3959738	1					
ANR	3960333	CompoundStatement		146:2:4238:4238	3959738	1					
ANR	3960334	ExpressionStatement	ctval . type = WinPerf_CT_Double	1225:3:39419:39449	3959738	0	True				
ANR	3960335	AssignmentExpression	ctval . type = WinPerf_CT_Double		3959738	0		=			
ANR	3960336	MemberAccess	ctval . type		3959738	0					
ANR	3960337	Identifier	ctval		3959738	0					
ANR	3960338	Identifier	type		3959738	1					
ANR	3960339	Identifier	WinPerf_CT_Double		3959738	1					
ANR	3960340	ExpressionStatement	ctval . value . d = val / time . headfreq * scale	1226:3:39454:39497	3959738	1	True				
ANR	3960341	AssignmentExpression	ctval . value . d = val / time . headfreq * scale		3959738	0		=			
ANR	3960342	MemberAccess	ctval . value . d		3959738	0					
ANR	3960343	MemberAccess	ctval . value		3959738	0					
ANR	3960344	Identifier	ctval		3959738	0					
ANR	3960345	Identifier	value		3959738	1					
ANR	3960346	Identifier	d		3959738	1					
ANR	3960347	MultiplicativeExpression	val / time . headfreq * scale		3959738	1		/			
ANR	3960348	Identifier	val		3959738	0					
ANR	3960349	MultiplicativeExpression	time . headfreq * scale		3959738	1		*			
ANR	3960350	MemberAccess	time . headfreq		3959738	0					
ANR	3960351	Identifier	time		3959738	0					
ANR	3960352	Identifier	headfreq		3959738	1					
ANR	3960353	Identifier	scale		3959738	1					
ANR	3960354	ElseStatement	else		3959738	0					
ANR	3960355	CompoundStatement		151:2:4336:4336	3959738	0					
ANR	3960356	ExpressionStatement	ctval . type = WinPerf_CT_Double	1230:3:39517:39547	3959738	0	True				
ANR	3960357	AssignmentExpression	ctval . type = WinPerf_CT_Double		3959738	0		=			
ANR	3960358	MemberAccess	ctval . type		3959738	0					
ANR	3960359	Identifier	ctval		3959738	0					
ANR	3960360	Identifier	type		3959738	1					
ANR	3960361	Identifier	WinPerf_CT_Double		3959738	1					
ANR	3960362	ExpressionStatement	ctval . value . d = val * scale	1231:3:39552:39579	3959738	1	True				
ANR	3960363	AssignmentExpression	ctval . value . d = val * scale		3959738	0		=			
ANR	3960364	MemberAccess	ctval . value . d		3959738	0					
ANR	3960365	MemberAccess	ctval . value		3959738	0					
ANR	3960366	Identifier	ctval		3959738	0					
ANR	3960367	Identifier	value		3959738	1					
ANR	3960368	Identifier	d		3959738	1					
ANR	3960369	MultiplicativeExpression	val * scale		3959738	1		*			
ANR	3960370	Identifier	val		3959738	0					
ANR	3960371	Identifier	scale		3959738	1					
ANR	3960372	ElseStatement	else		3959738	0					
ANR	3960373	IfStatement	if ( ( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_QUEUELEN )		3959738	0					
ANR	3960374	Condition	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_QUEUELEN	1234:10:39598:39653	3959738	0	True				
ANR	3960375	EqualityExpression	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_QUEUELEN		3959738	0		==			
ANR	3960376	BitAndExpression	type & PERF_COUNTER_PRECISION		3959738	0		&			
ANR	3960377	Identifier	type		3959738	0					
ANR	3960378	Identifier	PERF_COUNTER_PRECISION		3959738	1					
ANR	3960379	Identifier	PERF_COUNTER_QUEUELEN		3959738	1					
ANR	3960380	CompoundStatement		157:1:4481:4481	3959738	1					
ANR	3960381	ExpressionStatement	"EXCEPT ( ""WinReg perf counter type QUEUELEN is unimplemented."" )"	1236:2:39661:39724	3959738	0	True				
ANR	3960382	CallExpression	"EXCEPT ( ""WinReg perf counter type QUEUELEN is unimplemented."" )"		3959738	0					
ANR	3960383	Callee	EXCEPT		3959738	0					
ANR	3960384	Identifier	EXCEPT		3959738	0					
ANR	3960385	ArgumentList	"""WinReg perf counter type QUEUELEN is unimplemented."""		3959738	1					
ANR	3960386	Argument	"""WinReg perf counter type QUEUELEN is unimplemented."""		3959738	0					
ANR	3960387	PrimaryExpression	"""WinReg perf counter type QUEUELEN is unimplemented."""		3959738	0					
ANR	3960388	IfStatement	if ( ctval . type != WinPerf_CT_Empty )		3959738	9					
ANR	3960389	Condition	ctval . type != WinPerf_CT_Empty	1239:5:39735:39764	3959738	0	True				
ANR	3960390	EqualityExpression	ctval . type != WinPerf_CT_Empty		3959738	0		!=			
ANR	3960391	MemberAccess	ctval . type		3959738	0					
ANR	3960392	Identifier	ctval		3959738	0					
ANR	3960393	Identifier	type		3959738	1					
ANR	3960394	Identifier	WinPerf_CT_Empty		3959738	1					
ANR	3960395	CompoundStatement		162:1:4592:4592	3959738	1					
ANR	3960396	SwitchStatement	switch ( type & PERF_DISPLAY_SECONDS )		3959738	0					
ANR	3960397	Condition	type & PERF_DISPLAY_SECONDS	1241:10:39780:39806	3959738	0	True				
ANR	3960398	BitAndExpression	type & PERF_DISPLAY_SECONDS		3959738	0		&			
ANR	3960399	Identifier	type		3959738	0					
ANR	3960400	Identifier	PERF_DISPLAY_SECONDS		3959738	1					
ANR	3960401	CompoundStatement		164:2:4635:4635	3959738	1					
ANR	3960402	Label	case PERF_DISPLAY_PERCENT :	1243:2:39815:39840	3959738	0	True				
ANR	3960403	Identifier	PERF_DISPLAY_PERCENT		3959738	0					
ANR	3960404	ExpressionStatement	ctval . type |= WinPerf_CT_Percent	1243:29:39842:39874	3959738	1	True				
ANR	3960405	AssignmentExpression	ctval . type |= WinPerf_CT_Percent		3959738	0		|=			
ANR	3960406	MemberAccess	ctval . type		3959738	0					
ANR	3960407	Identifier	ctval		3959738	0					
ANR	3960408	Identifier	type		3959738	1					
ANR	3960409	Identifier	WinPerf_CT_Percent		3959738	1					
ANR	3960410	BreakStatement	break ;	1243:63:39876:39881	3959738	2	True				
ANR	3960411	Label	case PERF_DISPLAY_PER_SEC :	1244:2:39885:39910	3959738	3	True				
ANR	3960412	Identifier	PERF_DISPLAY_PER_SEC		3959738	0					
ANR	3960413	ExpressionStatement	ctval . type |= WinPerf_CT_PerSecond	1244:29:39912:39946	3959738	4	True				
ANR	3960414	AssignmentExpression	ctval . type |= WinPerf_CT_PerSecond		3959738	0		|=			
ANR	3960415	MemberAccess	ctval . type		3959738	0					
ANR	3960416	Identifier	ctval		3959738	0					
ANR	3960417	Identifier	type		3959738	1					
ANR	3960418	Identifier	WinPerf_CT_PerSecond		3959738	1					
ANR	3960419	BreakStatement	break ;	1244:65:39948:39953	3959738	5	True				
ANR	3960420	Label	case PERF_DISPLAY_SECONDS :	1245:2:39957:39982	3959738	6	True				
ANR	3960421	Identifier	PERF_DISPLAY_SECONDS		3959738	0					
ANR	3960422	ExpressionStatement	ctval . type |= WinPerf_CT_Seconds	1245:29:39984:40016	3959738	7	True				
ANR	3960423	AssignmentExpression	ctval . type |= WinPerf_CT_Seconds		3959738	0		|=			
ANR	3960424	MemberAccess	ctval . type		3959738	0					
ANR	3960425	Identifier	ctval		3959738	0					
ANR	3960426	Identifier	type		3959738	1					
ANR	3960427	Identifier	WinPerf_CT_Seconds		3959738	1					
ANR	3960428	BreakStatement	break ;	1245:63:40018:40023	3959738	8	True				
ANR	3960429	ReturnStatement	return true ;	1249:1:40034:40045	3959738	10	True				
ANR	3960430	Identifier	true		3959738	0					
ANR	3960431	ReturnType	bool		3959738	1					
ANR	3960432	Identifier	WinPerf_Object :: GetValue		3959738	2					
ANR	3960433	ParameterList	"WinPerf_CounterValue & ctval , const WinPerf_CounterDef * pCounter , const WinPerf_TimerDeltas & time , const BYTE * curr , const BYTE * prev"		3959738	3					
ANR	3960434	Parameter	WinPerf_CounterValue & ctval	1074:1:35023:35050	3959738	0	True				
ANR	3960435	ParameterType	WinPerf_CounterValue &		3959738	0					
ANR	3960436	Identifier	ctval		3959738	1					
ANR	3960437	Parameter	const WinPerf_CounterDef * pCounter	1075:1:35054:35088	3959738	1	True				
ANR	3960438	ParameterType	const WinPerf_CounterDef *		3959738	0					
ANR	3960439	Identifier	pCounter		3959738	1					
ANR	3960440	Parameter	const WinPerf_TimerDeltas & time	1076:1:35093:35124	3959738	2	True				
ANR	3960441	ParameterType	const WinPerf_TimerDeltas &		3959738	0					
ANR	3960442	Identifier	time		3959738	1					
ANR	3960443	Parameter	const BYTE * curr	1077:1:35129:35145	3959738	3	True				
ANR	3960444	ParameterType	const BYTE *		3959738	0					
ANR	3960445	Identifier	curr		3959738	1					
ANR	3960446	Parameter	const BYTE * prev	1078:1:35150:35166	3959738	4	True				
ANR	3960447	ParameterType	const BYTE *		3959738	0					
ANR	3960448	Identifier	prev		3959738	1					
ANR	3960449	CFGEntryNode	ENTRY		3959738		True				
ANR	3960450	CFGExitNode	EXIT		3959738		True				
ANR	3960451	Symbol	PERF_COUNTER_RATE		3959738						
ANR	3960452	Symbol	prev		3959738						
ANR	3960453	Symbol	PERF_COUNTER_PRECISION		3959738						
ANR	3960454	Symbol	PERF_COUNTER_QUEUELEN		3959738						
ANR	3960455	Symbol	type		3959738						
ANR	3960456	Symbol	pCounter -> CounterType		3959738						
ANR	3960457	Symbol	multi		3959738						
ANR	3960458	Symbol	PERF_NUMBER_DECIMAL		3959738						
ANR	3960459	Symbol	pCounter -> CounterOffset		3959738						
ANR	3960460	Symbol	PERF_COUNTER_BASE		3959738						
ANR	3960461	Symbol	PERF_TYPE_ZERO		3959738						
ANR	3960462	Symbol	time . nanos		3959738						
ANR	3960463	Symbol	PERF_INVERSE_COUNTER		3959738						
ANR	3960464	Symbol	curr		3959738						
ANR	3960465	Symbol	time . headfreq		3959738						
ANR	3960466	Symbol	PERF_DISPLAY_SECONDS		3959738						
ANR	3960467	Symbol	PERF_TYPE_NUMBER		3959738						
ANR	3960468	Symbol	val		3959738						
ANR	3960469	Symbol	time . objabs		3959738						
ANR	3960470	Symbol	time . objfreq		3959738						
ANR	3960471	Symbol	ctval . type		3959738						
ANR	3960472	Symbol	old		3959738						
ANR	3960473	Symbol	pBase		3959738						
ANR	3960474	Symbol	WinPerf_CT_Seconds		3959738						
ANR	3960475	Symbol	WinPerf_CT_Unsigned		3959738						
ANR	3960476	Symbol	PERF_DISPLAY_NOSHOW		3959738						
ANR	3960477	Symbol	time . head		3959738						
ANR	3960478	Symbol	ctval . value . ul		3959738						
ANR	3960479	Symbol	time . obj		3959738						
ANR	3960480	Symbol	PERF_COUNTER_ELAPSED		3959738						
ANR	3960481	Symbol	true		3959738						
ANR	3960482	Symbol	ctval		3959738						
ANR	3960483	Symbol	PERF_DELTA_COUNTER		3959738						
ANR	3960484	Symbol	ctval . value . d		3959738						
ANR	3960485	Symbol	baseOld		3959738						
ANR	3960486	Symbol	PERF_DISPLAY_PERCENT		3959738						
ANR	3960487	Symbol	pCounter		3959738						
ANR	3960488	Symbol	GetRawValue		3959738						
ANR	3960489	Symbol	* pBase		3959738						
ANR	3960490	Symbol	WinPerf_CT_Hex		3959738						
ANR	3960491	Symbol	PERF_SIZE_LARGE		3959738						
ANR	3960492	Symbol	freq		3959738						
ANR	3960493	Symbol	scale		3959738						
ANR	3960494	Symbol	* pCounter		3959738						
ANR	3960495	Symbol	PERF_AVERAGE_TIMER		3959738						
ANR	3960496	Symbol	PERF_COUNTER_FRACTION		3959738						
ANR	3960497	Symbol	value		3959738						
ANR	3960498	Symbol	PERF_MULTI_COUNTER		3959738						
ANR	3960499	Symbol	pct		3959738						
ANR	3960500	Symbol	WinPerf_CT_Empty		3959738						
ANR	3960501	Symbol	* pCounter -> CounterOffset		3959738						
ANR	3960502	Symbol	PERF_DISPLAY_PER_SEC		3959738						
ANR	3960503	Symbol	false		3959738						
ANR	3960504	Symbol	pBase -> CounterType		3959738						
ANR	3960505	Symbol	WinPerf_CT_Percent		3959738						
ANR	3960506	Symbol	PERF_TIMER_100NS		3959738						
ANR	3960507	Symbol	WinPerf_CT_Double		3959738						
ANR	3960508	Symbol	* * pCounter		3959738						
ANR	3960509	Symbol	WinPerf_CT_PerSecond		3959738						
ANR	3960510	Symbol	PERF_COUNTER_VALUE		3959738						
ANR	3960511	Symbol	* curr		3959738						
ANR	3960512	Symbol	WinPerf_CT_Short		3959738						
ANR	3960513	Symbol	time		3959738						
ANR	3960514	Symbol	PERF_TYPE_COUNTER		3959738						
ANR	3960515	Symbol	PERF_OBJECT_TIMER		3959738						
ANR	3960516	Symbol	ctval . value		3959738						
ANR	3960517	Symbol	WinPerf_CT_Decimal		3959738						
ANR	3960518	Symbol	base		3959738						
ANR	3960519	Function	WinPerf_Object :: PrintValue	1252:0:40050:43420							
ANR	3960520	FunctionDef	"WinPerf_Object :: PrintValue (const WinPerf_CounterDef * pCounter , const WinPerf_TimerDeltas & time , const BYTE * curr , const BYTE * prev)"		3960519	0					
ANR	3960521	CompoundStatement		1257:0:40208:43420	3960519	0					
ANR	3960522	IdentifierDeclStatement	"ULONGLONG val = GetRawValue ( pCounter , curr ) ;"	1258:1:40211:40254	3960519	0	True				
ANR	3960523	IdentifierDecl	"val = GetRawValue ( pCounter , curr )"		3960519	0					
ANR	3960524	IdentifierDeclType	ULONGLONG		3960519	0					
ANR	3960525	Identifier	val		3960519	1					
ANR	3960526	AssignmentExpression	"val = GetRawValue ( pCounter , curr )"		3960519	2		=			
ANR	3960527	Identifier	val		3960519	0					
ANR	3960528	CallExpression	"GetRawValue ( pCounter , curr )"		3960519	1					
ANR	3960529	Callee	GetRawValue		3960519	0					
ANR	3960530	Identifier	GetRawValue		3960519	0					
ANR	3960531	ArgumentList	pCounter		3960519	1					
ANR	3960532	Argument	pCounter		3960519	0					
ANR	3960533	Identifier	pCounter		3960519	0					
ANR	3960534	Argument	curr		3960519	1					
ANR	3960535	Identifier	curr		3960519	0					
ANR	3960536	IdentifierDeclStatement	char sz [ 64 ] ;	1259:1:40257:40268	3960519	1	True				
ANR	3960537	IdentifierDecl	sz [ 64 ]		3960519	0					
ANR	3960538	IdentifierDeclType	char [ 64 ]		3960519	0					
ANR	3960539	Identifier	sz		3960519	1					
ANR	3960540	PrimaryExpression	64		3960519	2					
ANR	3960541	ExpressionStatement	sz [ 0 ] = 0	1260:1:40271:40280	3960519	2	True				
ANR	3960542	AssignmentExpression	sz [ 0 ] = 0		3960519	0		=			
ANR	3960543	ArrayIndexing	sz [ 0 ]		3960519	0					
ANR	3960544	Identifier	sz		3960519	0					
ANR	3960545	PrimaryExpression	0		3960519	1					
ANR	3960546	PrimaryExpression	0		3960519	1					
ANR	3960547	IdentifierDeclStatement	const DWORD type = pCounter -> CounterType ;	1262:1:40284:40324	3960519	3	True				
ANR	3960548	IdentifierDecl	type = pCounter -> CounterType		3960519	0					
ANR	3960549	IdentifierDeclType	const DWORD		3960519	0					
ANR	3960550	Identifier	type		3960519	1					
ANR	3960551	AssignmentExpression	type = pCounter -> CounterType		3960519	2		=			
ANR	3960552	Identifier	type		3960519	0					
ANR	3960553	PtrMemberAccess	pCounter -> CounterType		3960519	1					
ANR	3960554	Identifier	pCounter		3960519	0					
ANR	3960555	Identifier	CounterType		3960519	1					
ANR	3960556	IfStatement	if ( type & PERF_DELTA_COUNTER )		3960519	4					
ANR	3960557	Condition	type & PERF_DELTA_COUNTER	1263:5:40331:40355	3960519	0	True				
ANR	3960558	BitAndExpression	type & PERF_DELTA_COUNTER		3960519	0		&			
ANR	3960559	Identifier	type		3960519	0					
ANR	3960560	Identifier	PERF_DELTA_COUNTER		3960519	1					
ANR	3960561	CompoundStatement		11:2:187:230	3960519	1					
ANR	3960562	IfStatement	if ( ! prev )		3960519	0					
ANR	3960563	Condition	! prev	1265:7:40369:40375	3960519	0	True				
ANR	3960564	UnaryOperationExpression	! prev		3960519	0					
ANR	3960565	UnaryOperator	!		3960519	0					
ANR	3960566	Identifier	prev		3960519	1					
ANR	3960567	ReturnStatement	return NULL ;	1266:3:40381:40392	3960519	1	True				
ANR	3960568	Identifier	NULL		3960519	0					
ANR	3960569	IdentifierDeclStatement	"ULONGLONG old = GetRawValue ( pCounter , prev ) ;"	1267:2:40396:40439	3960519	1	True				
ANR	3960570	IdentifierDecl	"old = GetRawValue ( pCounter , prev )"		3960519	0					
ANR	3960571	IdentifierDeclType	ULONGLONG		3960519	0					
ANR	3960572	Identifier	old		3960519	1					
ANR	3960573	AssignmentExpression	"old = GetRawValue ( pCounter , prev )"		3960519	2		=			
ANR	3960574	Identifier	old		3960519	0					
ANR	3960575	CallExpression	"GetRawValue ( pCounter , prev )"		3960519	1					
ANR	3960576	Callee	GetRawValue		3960519	0					
ANR	3960577	Identifier	GetRawValue		3960519	0					
ANR	3960578	ArgumentList	pCounter		3960519	1					
ANR	3960579	Argument	pCounter		3960519	0					
ANR	3960580	Identifier	pCounter		3960519	0					
ANR	3960581	Argument	prev		3960519	1					
ANR	3960582	Identifier	prev		3960519	0					
ANR	3960583	IfStatement	if ( val >= old )		3960519	2					
ANR	3960584	Condition	val >= old	1268:6:40447:40456	3960519	0	True				
ANR	3960585	RelationalExpression	val >= old		3960519	0		>=			
ANR	3960586	Identifier	val		3960519	0					
ANR	3960587	Identifier	old		3960519	1					
ANR	3960588	ExpressionStatement	val = val - old	1269:3:40462:40477	3960519	1	True				
ANR	3960589	AssignmentExpression	val = val - old		3960519	0		=			
ANR	3960590	Identifier	val		3960519	0					
ANR	3960591	AdditiveExpression	val - old		3960519	1		-			
ANR	3960592	Identifier	val		3960519	0					
ANR	3960593	Identifier	old		3960519	1					
ANR	3960594	ElseStatement	else		3960519	0					
ANR	3960595	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""  PrintValue: negative delta from winreg performance data."" )"	1271:3:40489:40571	3960519	0	True				
ANR	3960596	CallExpression	"dprintf ( D_FULLDEBUG , ""  PrintValue: negative delta from winreg performance data."" )"		3960519	0					
ANR	3960597	Callee	dprintf		3960519	0					
ANR	3960598	Identifier	dprintf		3960519	0					
ANR	3960599	ArgumentList	D_FULLDEBUG		3960519	1					
ANR	3960600	Argument	D_FULLDEBUG		3960519	0					
ANR	3960601	Identifier	D_FULLDEBUG		3960519	0					
ANR	3960602	Argument	"""  PrintValue: negative delta from winreg performance data."""		3960519	1					
ANR	3960603	PrimaryExpression	"""  PrintValue: negative delta from winreg performance data."""		3960519	0					
ANR	3960604	IfStatement	if ( ( type & PERF_TYPE_ZERO ) == PERF_TYPE_NUMBER || ( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_VALUE )		3960519	5					
ANR	3960605	Condition	( type & PERF_TYPE_ZERO ) == PERF_TYPE_NUMBER || ( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_VALUE	1276:5:40795:40894	3960519	0	True				
ANR	3960606	OrExpression	( type & PERF_TYPE_ZERO ) == PERF_TYPE_NUMBER || ( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_VALUE		3960519	0		||			
ANR	3960607	EqualityExpression	( type & PERF_TYPE_ZERO ) == PERF_TYPE_NUMBER		3960519	0		==			
ANR	3960608	BitAndExpression	type & PERF_TYPE_ZERO		3960519	0		&			
ANR	3960609	Identifier	type		3960519	0					
ANR	3960610	Identifier	PERF_TYPE_ZERO		3960519	1					
ANR	3960611	Identifier	PERF_TYPE_NUMBER		3960519	1					
ANR	3960612	EqualityExpression	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_VALUE		3960519	1		==			
ANR	3960613	BitAndExpression	type & PERF_COUNTER_PRECISION		3960519	0		&			
ANR	3960614	Identifier	type		3960519	0					
ANR	3960615	Identifier	PERF_COUNTER_PRECISION		3960519	1					
ANR	3960616	Identifier	PERF_COUNTER_VALUE		3960519	1					
ANR	3960617	CompoundStatement		21:1:689:689	3960519	1					
ANR	3960618	IfStatement	if ( type & PERF_NUMBER_DECIMAL )		3960519	0					
ANR	3960619	Condition	type & PERF_NUMBER_DECIMAL	1278:6:40906:40931	3960519	0	True				
ANR	3960620	BitAndExpression	type & PERF_NUMBER_DECIMAL		3960519	0		&			
ANR	3960621	Identifier	type		3960519	0					
ANR	3960622	Identifier	PERF_NUMBER_DECIMAL		3960519	1					
ANR	3960623	ExpressionStatement	"sprintf ( sz , ""%I64d     "" , val )"	1279:3:40937:40967	3960519	1	True				
ANR	3960624	CallExpression	"sprintf ( sz , ""%I64d     "" , val )"		3960519	0					
ANR	3960625	Callee	sprintf		3960519	0					
ANR	3960626	Identifier	sprintf		3960519	0					
ANR	3960627	ArgumentList	sz		3960519	1					
ANR	3960628	Argument	sz		3960519	0					
ANR	3960629	Identifier	sz		3960519	0					
ANR	3960630	Argument	"""%I64d     """		3960519	1					
ANR	3960631	PrimaryExpression	"""%I64d     """		3960519	0					
ANR	3960632	Argument	val		3960519	2					
ANR	3960633	Identifier	val		3960519	0					
ANR	3960634	ElseStatement	else		3960519	0					
ANR	3960635	IfStatement	if ( type & PERF_SIZE_LARGE )		3960519	0					
ANR	3960636	Condition	type & PERF_SIZE_LARGE	1280:11:40980:41001	3960519	0	True				
ANR	3960637	BitAndExpression	type & PERF_SIZE_LARGE		3960519	0		&			
ANR	3960638	Identifier	type		3960519	0					
ANR	3960639	Identifier	PERF_SIZE_LARGE		3960519	1					
ANR	3960640	ExpressionStatement	"sprintf ( sz , ""0x%I64X     "" , val )"	1281:3:41007:41039	3960519	1	True				
ANR	3960641	CallExpression	"sprintf ( sz , ""0x%I64X     "" , val )"		3960519	0					
ANR	3960642	Callee	sprintf		3960519	0					
ANR	3960643	Identifier	sprintf		3960519	0					
ANR	3960644	ArgumentList	sz		3960519	1					
ANR	3960645	Argument	sz		3960519	0					
ANR	3960646	Identifier	sz		3960519	0					
ANR	3960647	Argument	"""0x%I64X     """		3960519	1					
ANR	3960648	PrimaryExpression	"""0x%I64X     """		3960519	0					
ANR	3960649	Argument	val		3960519	2					
ANR	3960650	Identifier	val		3960519	0					
ANR	3960651	ElseStatement	else		3960519	0					
ANR	3960652	ExpressionStatement	"sprintf ( sz , ""0x%X     "" , * ( DWORD * ) & val )"	1283:3:41051:41090	3960519	0	True				
ANR	3960653	CallExpression	"sprintf ( sz , ""0x%X     "" , * ( DWORD * ) & val )"		3960519	0					
ANR	3960654	Callee	sprintf		3960519	0					
ANR	3960655	Identifier	sprintf		3960519	0					
ANR	3960656	ArgumentList	sz		3960519	1					
ANR	3960657	Argument	sz		3960519	0					
ANR	3960658	Identifier	sz		3960519	0					
ANR	3960659	Argument	"""0x%X     """		3960519	1					
ANR	3960660	PrimaryExpression	"""0x%X     """		3960519	0					
ANR	3960661	Argument	* ( DWORD * ) & val		3960519	2					
ANR	3960662	UnaryOperationExpression	* ( DWORD * ) & val		3960519	0					
ANR	3960663	UnaryOperator	*		3960519	0					
ANR	3960664	CastExpression	( DWORD * ) & val		3960519	1					
ANR	3960665	CastTarget	DWORD *		3960519	0					
ANR	3960666	UnaryOperationExpression	& val		3960519	1					
ANR	3960667	UnaryOperator	&		3960519	0					
ANR	3960668	Identifier	val		3960519	1					
ANR	3960669	ElseStatement	else		3960519	0					
ANR	3960670	IfStatement	if ( ( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_RATE )		3960519	0					
ANR	3960671	Condition	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_RATE	1285:10:41105:41156	3960519	0	True				
ANR	3960672	EqualityExpression	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_RATE		3960519	0		==			
ANR	3960673	BitAndExpression	type & PERF_COUNTER_PRECISION		3960519	0		&			
ANR	3960674	Identifier	type		3960519	0					
ANR	3960675	Identifier	PERF_COUNTER_PRECISION		3960519	1					
ANR	3960676	Identifier	PERF_COUNTER_RATE		3960519	1					
ANR	3960677	CompoundStatement		34:2:1058:1075	3960519	1					
ANR	3960678	IdentifierDeclStatement	double scale = 1 ;	1287:2:41191:41207	3960519	0	True				
ANR	3960679	IdentifierDecl	scale = 1		3960519	0					
ANR	3960680	IdentifierDeclType	double		3960519	0					
ANR	3960681	Identifier	scale		3960519	1					
ANR	3960682	AssignmentExpression	scale = 1		3960519	2		=			
ANR	3960683	Identifier	scale		3960519	0					
ANR	3960684	PrimaryExpression	1		3960519	1					
ANR	3960685	IdentifierDeclStatement	double value = 0.0 ;	1288:2:41211:41229	3960519	1	True				
ANR	3960686	IdentifierDecl	value = 0.0		3960519	0					
ANR	3960687	IdentifierDeclType	double		3960519	0					
ANR	3960688	Identifier	value		3960519	1					
ANR	3960689	AssignmentExpression	value = 0.0		3960519	2		=			
ANR	3960690	Identifier	value		3960519	0					
ANR	3960691	PrimaryExpression	0.0		3960519	1					
ANR	3960692	IdentifierDeclStatement	"const char * pszUnits = ""    "" ;"	1289:2:41233:41263	3960519	2	True				
ANR	3960693	IdentifierDecl	"* pszUnits = ""    """		3960519	0					
ANR	3960694	IdentifierDeclType	const char *		3960519	0					
ANR	3960695	Identifier	pszUnits		3960519	1					
ANR	3960696	AssignmentExpression	"* pszUnits = ""    """		3960519	2		=			
ANR	3960697	Identifier	pszUnits		3960519	0					
ANR	3960698	PrimaryExpression	"""    """		3960519	1					
ANR	3960699	IdentifierDeclStatement	LONGLONG mult = 1 ;	1290:2:41267:41284	3960519	3	True				
ANR	3960700	IdentifierDecl	mult = 1		3960519	0					
ANR	3960701	IdentifierDeclType	LONGLONG		3960519	0					
ANR	3960702	Identifier	mult		3960519	1					
ANR	3960703	AssignmentExpression	mult = 1		3960519	2		=			
ANR	3960704	Identifier	mult		3960519	0					
ANR	3960705	PrimaryExpression	1		3960519	1					
ANR	3960706	IfStatement	if ( ( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PERCENT )		3960519	4					
ANR	3960707	Condition	( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PERCENT	1291:6:41292:41344	3960519	0	True				
ANR	3960708	EqualityExpression	( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PERCENT		3960519	0		==			
ANR	3960709	BitAndExpression	type & PERF_DISPLAY_SECONDS		3960519	0		&			
ANR	3960710	Identifier	type		3960519	0					
ANR	3960711	Identifier	PERF_DISPLAY_SECONDS		3960519	1					
ANR	3960712	Identifier	PERF_DISPLAY_PERCENT		3960519	1					
ANR	3960713	CompoundStatement		36:2:1140:1140	3960519	1					
ANR	3960714	ExpressionStatement	mult = 100	1293:3:41354:41364	3960519	0	True				
ANR	3960715	AssignmentExpression	mult = 100		3960519	0		=			
ANR	3960716	Identifier	mult		3960519	0					
ANR	3960717	PrimaryExpression	100		3960519	1					
ANR	3960718	ExpressionStatement	"pszUnits = "" %   """	1294:3:41369:41387	3960519	1	True				
ANR	3960719	AssignmentExpression	"pszUnits = "" %   """		3960519	0		=			
ANR	3960720	Identifier	pszUnits		3960519	0					
ANR	3960721	PrimaryExpression	""" %   """		3960519	1					
ANR	3960722	ElseStatement	else		3960519	0					
ANR	3960723	IfStatement	if ( ( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PER_SEC )		3960519	0					
ANR	3960724	Condition	( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PER_SEC	1296:11:41404:41456	3960519	0	True				
ANR	3960725	EqualityExpression	( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PER_SEC		3960519	0		==			
ANR	3960726	BitAndExpression	type & PERF_DISPLAY_SECONDS		3960519	0		&			
ANR	3960727	Identifier	type		3960519	0					
ANR	3960728	Identifier	PERF_DISPLAY_SECONDS		3960519	1					
ANR	3960729	Identifier	PERF_DISPLAY_PER_SEC		3960519	1					
ANR	3960730	CompoundStatement		41:2:1275:1275	3960519	1					
ANR	3960731	ExpressionStatement	mult = time . headfreq	1298:3:41489:41509	3960519	0	True				
ANR	3960732	AssignmentExpression	mult = time . headfreq		3960519	0		=			
ANR	3960733	Identifier	mult		3960519	0					
ANR	3960734	MemberAccess	time . headfreq		3960519	1					
ANR	3960735	Identifier	time		3960519	0					
ANR	3960736	Identifier	headfreq		3960519	1					
ANR	3960737	ExpressionStatement	"pszUnits = "" /sec"""	1299:3:41514:41532	3960519	1	True				
ANR	3960738	AssignmentExpression	"pszUnits = "" /sec"""		3960519	0		=			
ANR	3960739	Identifier	pszUnits		3960519	0					
ANR	3960740	PrimaryExpression	""" /sec"""		3960519	1					
ANR	3960741	ElseStatement	else		3960519	0					
ANR	3960742	IfStatement	if ( ( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_NO_SUFFIX )		3960519	0					
ANR	3960743	Condition	( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_NO_SUFFIX	1301:11:41549:41603	3960519	0	True				
ANR	3960744	EqualityExpression	( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_NO_SUFFIX		3960519	0		==			
ANR	3960745	BitAndExpression	type & PERF_DISPLAY_SECONDS		3960519	0		&			
ANR	3960746	Identifier	type		3960519	0					
ANR	3960747	Identifier	PERF_DISPLAY_SECONDS		3960519	1					
ANR	3960748	Identifier	PERF_DISPLAY_NO_SUFFIX		3960519	1					
ANR	3960749	CompoundStatement		46:2:1422:1422	3960519	1					
ANR	3960750	ExpressionStatement	mult = time . headfreq	1303:3:41636:41656	3960519	0	True				
ANR	3960751	AssignmentExpression	mult = time . headfreq		3960519	0		=			
ANR	3960752	Identifier	mult		3960519	0					
ANR	3960753	MemberAccess	time . headfreq		3960519	1					
ANR	3960754	Identifier	time		3960519	0					
ANR	3960755	Identifier	headfreq		3960519	1					
ANR	3960756	ElseStatement	else		3960519	0					
ANR	3960757	IfStatement	if ( ( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_SECONDS )		3960519	0					
ANR	3960758	Condition	( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_SECONDS	1305:11:41673:41725	3960519	0	True				
ANR	3960759	EqualityExpression	( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_SECONDS		3960519	0		==			
ANR	3960760	BitAndExpression	type & PERF_DISPLAY_SECONDS		3960519	0		&			
ANR	3960761	Identifier	type		3960519	0					
ANR	3960762	Identifier	PERF_DISPLAY_SECONDS		3960519	1					
ANR	3960763	Identifier	PERF_DISPLAY_SECONDS		3960519	1					
ANR	3960764	CompoundStatement		50:2:1521:1521	3960519	1					
ANR	3960765	ExpressionStatement	"pszUnits = "" sec """	1307:3:41735:41753	3960519	0	True				
ANR	3960766	AssignmentExpression	"pszUnits = "" sec """		3960519	0		=			
ANR	3960767	Identifier	pszUnits		3960519	0					
ANR	3960768	PrimaryExpression	""" sec """		3960519	1					
ANR	3960769	IfStatement	if ( type & PERF_TIMER_100NS )		3960519	5					
ANR	3960770	Condition	type & PERF_TIMER_100NS	1310:6:41766:41788	3960519	0	True				
ANR	3960771	BitAndExpression	type & PERF_TIMER_100NS		3960519	0		&			
ANR	3960772	Identifier	type		3960519	0					
ANR	3960773	Identifier	PERF_TIMER_100NS		3960519	1					
ANR	3960774	CompoundStatement		55:2:1585:1585	3960519	1					
ANR	3960775	IfStatement	if ( time . nanos )		3960519	0					
ANR	3960776	Condition	time . nanos	1312:7:41803:41812	3960519	0	True				
ANR	3960777	MemberAccess	time . nanos		3960519	0					
ANR	3960778	Identifier	time		3960519	0					
ANR	3960779	Identifier	nanos		3960519	1					
ANR	3960780	ExpressionStatement	scale = ( double ) mult / time . nanos	1312:19:41815:41846	3960519	1	True				
ANR	3960781	AssignmentExpression	scale = ( double ) mult / time . nanos		3960519	0		=			
ANR	3960782	Identifier	scale		3960519	0					
ANR	3960783	MultiplicativeExpression	( double ) mult / time . nanos		3960519	1		/			
ANR	3960784	CastExpression	( double ) mult		3960519	0					
ANR	3960785	CastTarget	double		3960519	0					
ANR	3960786	Identifier	mult		3960519	1					
ANR	3960787	MemberAccess	time . nanos		3960519	1					
ANR	3960788	Identifier	time		3960519	0					
ANR	3960789	Identifier	nanos		3960519	1					
ANR	3960790	ElseStatement	else		3960519	0					
ANR	3960791	IfStatement	if ( type & PERF_OBJECT_TIMER )		3960519	0					
ANR	3960792	Condition	type & PERF_OBJECT_TIMER	1314:11:41863:41886	3960519	0	True				
ANR	3960793	BitAndExpression	type & PERF_OBJECT_TIMER		3960519	0		&			
ANR	3960794	Identifier	type		3960519	0					
ANR	3960795	Identifier	PERF_OBJECT_TIMER		3960519	1					
ANR	3960796	CompoundStatement		59:2:1683:1683	3960519	1					
ANR	3960797	IfStatement	if ( time . obj )		3960519	0					
ANR	3960798	Condition	time . obj	1316:7:41901:41908	3960519	0	True				
ANR	3960799	MemberAccess	time . obj		3960519	0					
ANR	3960800	Identifier	time		3960519	0					
ANR	3960801	Identifier	obj		3960519	1					
ANR	3960802	ExpressionStatement	scale = ( double ) mult / time . obj	1316:17:41911:41940	3960519	1	True				
ANR	3960803	AssignmentExpression	scale = ( double ) mult / time . obj		3960519	0		=			
ANR	3960804	Identifier	scale		3960519	0					
ANR	3960805	MultiplicativeExpression	( double ) mult / time . obj		3960519	1		/			
ANR	3960806	CastExpression	( double ) mult		3960519	0					
ANR	3960807	CastTarget	double		3960519	0					
ANR	3960808	Identifier	mult		3960519	1					
ANR	3960809	MemberAccess	time . obj		3960519	1					
ANR	3960810	Identifier	time		3960519	0					
ANR	3960811	Identifier	obj		3960519	1					
ANR	3960812	ElseStatement	else		3960519	0					
ANR	3960813	CompoundStatement		63:2:1746:1746	3960519	0					
ANR	3960814	IfStatement	if ( time . head )		3960519	0					
ANR	3960815	Condition	time . head	1320:7:41964:41972	3960519	0	True				
ANR	3960816	MemberAccess	time . head		3960519	0					
ANR	3960817	Identifier	time		3960519	0					
ANR	3960818	Identifier	head		3960519	1					
ANR	3960819	ExpressionStatement	scale = ( double ) mult / time . head	1320:18:41975:42005	3960519	1	True				
ANR	3960820	AssignmentExpression	scale = ( double ) mult / time . head		3960519	0		=			
ANR	3960821	Identifier	scale		3960519	0					
ANR	3960822	MultiplicativeExpression	( double ) mult / time . head		3960519	1		/			
ANR	3960823	CastExpression	( double ) mult		3960519	0					
ANR	3960824	CastTarget	double		3960519	0					
ANR	3960825	Identifier	mult		3960519	1					
ANR	3960826	MemberAccess	time . head		3960519	1					
ANR	3960827	Identifier	time		3960519	0					
ANR	3960828	Identifier	head		3960519	1					
ANR	3960829	IfStatement	if ( type & PERF_MULTI_COUNTER )		3960519	6					
ANR	3960830	Condition	type & PERF_MULTI_COUNTER	1323:6:42018:42042	3960519	0	True				
ANR	3960831	BitAndExpression	type & PERF_MULTI_COUNTER		3960519	0		&			
ANR	3960832	Identifier	type		3960519	0					
ANR	3960833	Identifier	PERF_MULTI_COUNTER		3960519	1					
ANR	3960834	CompoundStatement		69:3:1843:1902	3960519	1					
ANR	3960835	IdentifierDeclStatement	DWORD multi = ( ( DWORD * ) ( curr + pCounter -> CounterOffset ) ) [ 2 ] ;	1325:3:42052:42111	3960519	0	True				
ANR	3960836	IdentifierDecl	multi = ( ( DWORD * ) ( curr + pCounter -> CounterOffset ) ) [ 2 ]		3960519	0					
ANR	3960837	IdentifierDeclType	DWORD		3960519	0					
ANR	3960838	Identifier	multi		3960519	1					
ANR	3960839	AssignmentExpression	multi = ( ( DWORD * ) ( curr + pCounter -> CounterOffset ) ) [ 2 ]		3960519	2		=			
ANR	3960840	Identifier	multi		3960519	0					
ANR	3960841	ArrayIndexing	( ( DWORD * ) ( curr + pCounter -> CounterOffset ) ) [ 2 ]		3960519	1					
ANR	3960842	CastExpression	( DWORD * ) ( curr + pCounter -> CounterOffset )		3960519	0					
ANR	3960843	CastTarget	DWORD *		3960519	0					
ANR	3960844	AdditiveExpression	curr + pCounter -> CounterOffset		3960519	1		+			
ANR	3960845	Identifier	curr		3960519	0					
ANR	3960846	PtrMemberAccess	pCounter -> CounterOffset		3960519	1					
ANR	3960847	Identifier	pCounter		3960519	0					
ANR	3960848	Identifier	CounterOffset		3960519	1					
ANR	3960849	PrimaryExpression	2		3960519	1					
ANR	3960850	IfStatement	if ( type & PERF_INVERSE_COUNTER )		3960519	1					
ANR	3960851	Condition	type & PERF_INVERSE_COUNTER	1326:7:42120:42146	3960519	0	True				
ANR	3960852	BitAndExpression	type & PERF_INVERSE_COUNTER		3960519	0		&			
ANR	3960853	Identifier	type		3960519	0					
ANR	3960854	Identifier	PERF_INVERSE_COUNTER		3960519	1					
ANR	3960855	ExpressionStatement	value = 100.0 * multi - val * scale	1327:4:42153:42188	3960519	1	True				
ANR	3960856	AssignmentExpression	value = 100.0 * multi - val * scale		3960519	0		=			
ANR	3960857	Identifier	value		3960519	0					
ANR	3960858	AdditiveExpression	100.0 * multi - val * scale		3960519	1		-			
ANR	3960859	MultiplicativeExpression	100.0 * multi		3960519	0		*			
ANR	3960860	PrimaryExpression	100.0		3960519	0					
ANR	3960861	Identifier	multi		3960519	1					
ANR	3960862	MultiplicativeExpression	val * scale		3960519	1		*			
ANR	3960863	Identifier	val		3960519	0					
ANR	3960864	Identifier	scale		3960519	1					
ANR	3960865	ElseStatement	else		3960519	0					
ANR	3960866	IfStatement	if ( multi )		3960519	0					
ANR	3960867	Condition	multi	1328:12:42202:42206	3960519	0	True				
ANR	3960868	Identifier	multi		3960519	0					
ANR	3960869	ExpressionStatement	value = ( val * scale ) / multi	1329:4:42213:42242	3960519	1	True				
ANR	3960870	AssignmentExpression	value = ( val * scale ) / multi		3960519	0		=			
ANR	3960871	Identifier	value		3960519	0					
ANR	3960872	MultiplicativeExpression	( val * scale ) / multi		3960519	1		/			
ANR	3960873	MultiplicativeExpression	val * scale		3960519	0		*			
ANR	3960874	Identifier	val		3960519	0					
ANR	3960875	Identifier	scale		3960519	1					
ANR	3960876	Identifier	multi		3960519	1					
ANR	3960877	ElseStatement	else		3960519	0					
ANR	3960878	IfStatement	if ( type & PERF_INVERSE_COUNTER )		3960519	0					
ANR	3960879	Condition	type & PERF_INVERSE_COUNTER	1331:11:42259:42285	3960519	0	True				
ANR	3960880	BitAndExpression	type & PERF_INVERSE_COUNTER		3960519	0		&			
ANR	3960881	Identifier	type		3960519	0					
ANR	3960882	Identifier	PERF_INVERSE_COUNTER		3960519	1					
ANR	3960883	CompoundStatement		76:2:2081:2081	3960519	1					
ANR	3960884	IfStatement	if ( ( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PERCENT )		3960519	0					
ANR	3960885	Condition	( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PERCENT	1333:7:42299:42351	3960519	0	True				
ANR	3960886	EqualityExpression	( type & PERF_DISPLAY_SECONDS ) == PERF_DISPLAY_PERCENT		3960519	0		==			
ANR	3960887	BitAndExpression	type & PERF_DISPLAY_SECONDS		3960519	0		&			
ANR	3960888	Identifier	type		3960519	0					
ANR	3960889	Identifier	PERF_DISPLAY_SECONDS		3960519	1					
ANR	3960890	Identifier	PERF_DISPLAY_PERCENT		3960519	1					
ANR	3960891	ExpressionStatement	value = 100.0 - ( val * scale )	1334:4:42358:42387	3960519	1	True				
ANR	3960892	AssignmentExpression	value = 100.0 - ( val * scale )		3960519	0		=			
ANR	3960893	Identifier	value		3960519	0					
ANR	3960894	AdditiveExpression	100.0 - ( val * scale )		3960519	1		-			
ANR	3960895	PrimaryExpression	100.0		3960519	0					
ANR	3960896	MultiplicativeExpression	val * scale		3960519	1		*			
ANR	3960897	Identifier	val		3960519	0					
ANR	3960898	Identifier	scale		3960519	1					
ANR	3960899	ElseStatement	else		3960519	0					
ANR	3960900	ExpressionStatement	value = 1.0 - ( val * scale )	1336:4:42401:42428	3960519	0	True				
ANR	3960901	AssignmentExpression	value = 1.0 - ( val * scale )		3960519	0		=			
ANR	3960902	Identifier	value		3960519	0					
ANR	3960903	AdditiveExpression	1.0 - ( val * scale )		3960519	1		-			
ANR	3960904	PrimaryExpression	1.0		3960519	0					
ANR	3960905	MultiplicativeExpression	val * scale		3960519	1		*			
ANR	3960906	Identifier	val		3960519	0					
ANR	3960907	Identifier	scale		3960519	1					
ANR	3960908	ElseStatement	else		3960519	0					
ANR	3960909	CompoundStatement		83:2:2234:2234	3960519	0					
ANR	3960910	ExpressionStatement	value = ( double ) val * scale	1341:3:42517:42544	3960519	0	True				
ANR	3960911	AssignmentExpression	value = ( double ) val * scale		3960519	0		=			
ANR	3960912	Identifier	value		3960519	0					
ANR	3960913	MultiplicativeExpression	( double ) val * scale		3960519	1		*			
ANR	3960914	CastExpression	( double ) val		3960519	0					
ANR	3960915	CastTarget	double		3960519	0					
ANR	3960916	Identifier	val		3960519	1					
ANR	3960917	Identifier	scale		3960519	1					
ANR	3960918	ExpressionStatement	"sprintf ( sz , ""%f%s"" , value , pszUnits )"	1343:2:42552:42588	3960519	7	True				
ANR	3960919	CallExpression	"sprintf ( sz , ""%f%s"" , value , pszUnits )"		3960519	0					
ANR	3960920	Callee	sprintf		3960519	0					
ANR	3960921	Identifier	sprintf		3960519	0					
ANR	3960922	ArgumentList	sz		3960519	1					
ANR	3960923	Argument	sz		3960519	0					
ANR	3960924	Identifier	sz		3960519	0					
ANR	3960925	Argument	"""%f%s"""		3960519	1					
ANR	3960926	PrimaryExpression	"""%f%s"""		3960519	0					
ANR	3960927	Argument	value		3960519	2					
ANR	3960928	Identifier	value		3960519	0					
ANR	3960929	Argument	pszUnits		3960519	3					
ANR	3960930	Identifier	pszUnits		3960519	0					
ANR	3960931	ElseStatement	else		3960519	0					
ANR	3960932	IfStatement	if ( ( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_ELAPSED )		3960519	0					
ANR	3960933	Condition	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_ELAPSED	1345:10:42603:42657	3960519	0	True				
ANR	3960934	EqualityExpression	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_ELAPSED		3960519	0		==			
ANR	3960935	BitAndExpression	type & PERF_COUNTER_PRECISION		3960519	0		&			
ANR	3960936	Identifier	type		3960519	0					
ANR	3960937	Identifier	PERF_COUNTER_PRECISION		3960519	1					
ANR	3960938	Identifier	PERF_COUNTER_ELAPSED		3960519	1					
ANR	3960939	CompoundStatement		91:2:2490:2532	3960519	1					
ANR	3960940	IdentifierDeclStatement	double value = ( double ) ( time . objabs - val ) ;	1347:2:42699:42741	3960519	0	True				
ANR	3960941	IdentifierDecl	value = ( double ) ( time . objabs - val )		3960519	0					
ANR	3960942	IdentifierDeclType	double		3960519	0					
ANR	3960943	Identifier	value		3960519	1					
ANR	3960944	AssignmentExpression	value = ( double ) ( time . objabs - val )		3960519	2		=			
ANR	3960945	Identifier	value		3960519	0					
ANR	3960946	CastExpression	( double ) ( time . objabs - val )		3960519	1					
ANR	3960947	CastTarget	double		3960519	0					
ANR	3960948	AdditiveExpression	time . objabs - val		3960519	1		-			
ANR	3960949	MemberAccess	time . objabs		3960519	0					
ANR	3960950	Identifier	time		3960519	0					
ANR	3960951	Identifier	objabs		3960519	1					
ANR	3960952	Identifier	val		3960519	1					
ANR	3960953	IfStatement	if ( time . objfreq )		3960519	1					
ANR	3960954	Condition	time . objfreq	1348:6:42749:42760	3960519	0	True				
ANR	3960955	MemberAccess	time . objfreq		3960519	0					
ANR	3960956	Identifier	time		3960519	0					
ANR	3960957	Identifier	objfreq		3960519	1					
ANR	3960958	ExpressionStatement	value /= time . objfreq	1349:3:42766:42787	3960519	1	True				
ANR	3960959	AssignmentExpression	value /= time . objfreq		3960519	0		/=			
ANR	3960960	Identifier	value		3960519	0					
ANR	3960961	MemberAccess	time . objfreq		3960519	1					
ANR	3960962	Identifier	time		3960519	0					
ANR	3960963	Identifier	objfreq		3960519	1					
ANR	3960964	ExpressionStatement	"sprintf ( sz , ""%f sec "" , value )"	1350:2:42791:42820	3960519	2	True				
ANR	3960965	CallExpression	"sprintf ( sz , ""%f sec "" , value )"		3960519	0					
ANR	3960966	Callee	sprintf		3960519	0					
ANR	3960967	Identifier	sprintf		3960519	0					
ANR	3960968	ArgumentList	sz		3960519	1					
ANR	3960969	Argument	sz		3960519	0					
ANR	3960970	Identifier	sz		3960519	0					
ANR	3960971	Argument	"""%f sec """		3960519	1					
ANR	3960972	PrimaryExpression	"""%f sec """		3960519	0					
ANR	3960973	Argument	value		3960519	2					
ANR	3960974	Identifier	value		3960519	0					
ANR	3960975	ElseStatement	else		3960519	0					
ANR	3960976	IfStatement	if ( ( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_FRACTION )		3960519	0					
ANR	3960977	Condition	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_FRACTION	1352:10:42835:42890	3960519	0	True				
ANR	3960978	EqualityExpression	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_FRACTION		3960519	0		==			
ANR	3960979	BitAndExpression	type & PERF_COUNTER_PRECISION		3960519	0		&			
ANR	3960980	Identifier	type		3960519	0					
ANR	3960981	Identifier	PERF_COUNTER_PRECISION		3960519	1					
ANR	3960982	Identifier	PERF_COUNTER_FRACTION		3960519	1					
ANR	3960983	CompoundStatement		107:2:2951:2985	3960519	1					
ANR	3960984	IdentifierDeclStatement	const WinPerf_CounterDef * pBase = pCounter + 1 ;	1354:2:42898:42943	3960519	0	True				
ANR	3960985	IdentifierDecl	* pBase = pCounter + 1		3960519	0					
ANR	3960986	IdentifierDeclType	const WinPerf_CounterDef *		3960519	0					
ANR	3960987	Identifier	pBase		3960519	1					
ANR	3960988	AssignmentExpression	* pBase = pCounter + 1		3960519	2		=			
ANR	3960989	Identifier	pBase		3960519	0					
ANR	3960990	AdditiveExpression	pCounter + 1		3960519	1		+			
ANR	3960991	Identifier	pCounter		3960519	0					
ANR	3960992	PrimaryExpression	1		3960519	1					
ANR	3960993	IdentifierDeclStatement	ULONGLONG baseCurr = 0 ;	1355:2:42947:42969	3960519	1	True				
ANR	3960994	IdentifierDecl	baseCurr = 0		3960519	0					
ANR	3960995	IdentifierDeclType	ULONGLONG		3960519	0					
ANR	3960996	Identifier	baseCurr		3960519	1					
ANR	3960997	AssignmentExpression	baseCurr = 0		3960519	2		=			
ANR	3960998	Identifier	baseCurr		3960519	0					
ANR	3960999	PrimaryExpression	0		3960519	1					
ANR	3961000	IfStatement	if ( ( pBase -> CounterType & PERF_COUNTER_PRECISION ) == PERF_COUNTER_BASE )		3960519	2					
ANR	3961001	Condition	( pBase -> CounterType & PERF_COUNTER_PRECISION ) == PERF_COUNTER_BASE	1356:6:42977:43042	3960519	0	True				
ANR	3961002	EqualityExpression	( pBase -> CounterType & PERF_COUNTER_PRECISION ) == PERF_COUNTER_BASE		3960519	0		==			
ANR	3961003	BitAndExpression	pBase -> CounterType & PERF_COUNTER_PRECISION		3960519	0		&			
ANR	3961004	PtrMemberAccess	pBase -> CounterType		3960519	0					
ANR	3961005	Identifier	pBase		3960519	0					
ANR	3961006	Identifier	CounterType		3960519	1					
ANR	3961007	Identifier	PERF_COUNTER_PRECISION		3960519	1					
ANR	3961008	Identifier	PERF_COUNTER_BASE		3960519	1					
ANR	3961009	CompoundStatement		101:2:2838:2838	3960519	1					
ANR	3961010	ExpressionStatement	"baseCurr = GetRawValue ( pBase , curr )"	1358:3:43052:43087	3960519	0	True				
ANR	3961011	AssignmentExpression	"baseCurr = GetRawValue ( pBase , curr )"		3960519	0		=			
ANR	3961012	Identifier	baseCurr		3960519	0					
ANR	3961013	CallExpression	"GetRawValue ( pBase , curr )"		3960519	1					
ANR	3961014	Callee	GetRawValue		3960519	0					
ANR	3961015	Identifier	GetRawValue		3960519	0					
ANR	3961016	ArgumentList	pBase		3960519	1					
ANR	3961017	Argument	pBase		3960519	0					
ANR	3961018	Identifier	pBase		3960519	0					
ANR	3961019	Argument	curr		3960519	1					
ANR	3961020	Identifier	curr		3960519	0					
ANR	3961021	IdentifierDeclStatement	double scale = 1.0 ;	1360:2:43095:43113	3960519	3	True				
ANR	3961022	IdentifierDecl	scale = 1.0		3960519	0					
ANR	3961023	IdentifierDeclType	double		3960519	0					
ANR	3961024	Identifier	scale		3960519	1					
ANR	3961025	AssignmentExpression	scale = 1.0		3960519	2		=			
ANR	3961026	Identifier	scale		3960519	0					
ANR	3961027	PrimaryExpression	1.0		3960519	1					
ANR	3961028	IfStatement	if ( baseCurr )		3960519	4					
ANR	3961029	Condition	baseCurr	1361:6:43121:43128	3960519	0	True				
ANR	3961030	Identifier	baseCurr		3960519	0					
ANR	3961031	ExpressionStatement	scale = 100.0 / baseCurr	1362:3:43134:43156	3960519	1	True				
ANR	3961032	AssignmentExpression	scale = 100.0 / baseCurr		3960519	0		=			
ANR	3961033	Identifier	scale		3960519	0					
ANR	3961034	MultiplicativeExpression	100.0 / baseCurr		3960519	1		/			
ANR	3961035	PrimaryExpression	100.0		3960519	0					
ANR	3961036	Identifier	baseCurr		3960519	1					
ANR	3961037	IdentifierDeclStatement	double value = ( double ) val * scale ;	1363:2:43160:43194	3960519	5	True				
ANR	3961038	IdentifierDecl	value = ( double ) val * scale		3960519	0					
ANR	3961039	IdentifierDeclType	double		3960519	0					
ANR	3961040	Identifier	value		3960519	1					
ANR	3961041	AssignmentExpression	value = ( double ) val * scale		3960519	2		=			
ANR	3961042	Identifier	value		3960519	0					
ANR	3961043	MultiplicativeExpression	( double ) val * scale		3960519	1		*			
ANR	3961044	CastExpression	( double ) val		3960519	0					
ANR	3961045	CastTarget	double		3960519	0					
ANR	3961046	Identifier	val		3960519	1					
ANR	3961047	Identifier	scale		3960519	1					
ANR	3961048	ExpressionStatement	"sprintf ( sz , ""%f     "" , value )"	1364:2:43198:43227	3960519	6	True				
ANR	3961049	CallExpression	"sprintf ( sz , ""%f     "" , value )"		3960519	0					
ANR	3961050	Callee	sprintf		3960519	0					
ANR	3961051	Identifier	sprintf		3960519	0					
ANR	3961052	ArgumentList	sz		3960519	1					
ANR	3961053	Argument	sz		3960519	0					
ANR	3961054	Identifier	sz		3960519	0					
ANR	3961055	Argument	"""%f     """		3960519	1					
ANR	3961056	PrimaryExpression	"""%f     """		3960519	0					
ANR	3961057	Argument	value		3960519	2					
ANR	3961058	Identifier	value		3960519	0					
ANR	3961059	ElseStatement	else		3960519	0					
ANR	3961060	IfStatement	if ( ( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_QUEUELEN )		3960519	0					
ANR	3961061	Condition	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_QUEUELEN	1366:10:43242:43297	3960519	0	True				
ANR	3961062	EqualityExpression	( type & PERF_COUNTER_PRECISION ) == PERF_COUNTER_QUEUELEN		3960519	0		==			
ANR	3961063	BitAndExpression	type & PERF_COUNTER_PRECISION		3960519	0		&			
ANR	3961064	Identifier	type		3960519	0					
ANR	3961065	Identifier	PERF_COUNTER_PRECISION		3960519	1					
ANR	3961066	Identifier	PERF_COUNTER_QUEUELEN		3960519	1					
ANR	3961067	CompoundStatement		111:1:3092:3092	3960519	1					
ANR	3961068	ExpressionStatement	"EXCEPT ( ""WinReg perf counter type QUEUELEN is unimplemented."" )"	1368:2:43305:43368	3960519	0	True				
ANR	3961069	CallExpression	"EXCEPT ( ""WinReg perf counter type QUEUELEN is unimplemented."" )"		3960519	0					
ANR	3961070	Callee	EXCEPT		3960519	0					
ANR	3961071	Identifier	EXCEPT		3960519	0					
ANR	3961072	ArgumentList	"""WinReg perf counter type QUEUELEN is unimplemented."""		3960519	1					
ANR	3961073	Argument	"""WinReg perf counter type QUEUELEN is unimplemented."""		3960519	0					
ANR	3961074	PrimaryExpression	"""WinReg perf counter type QUEUELEN is unimplemented."""		3960519	0					
ANR	3961075	IfStatement	if ( sz [ 0 ] )		3960519	6					
ANR	3961076	Condition	sz [ 0 ]	1370:5:43378:43382	3960519	0	True				
ANR	3961077	ArrayIndexing	sz [ 0 ]		3960519	0					
ANR	3961078	Identifier	sz		3960519	0					
ANR	3961079	PrimaryExpression	0		3960519	1					
ANR	3961080	ReturnStatement	return strdup ( sz ) ;	1371:2:43387:43404	3960519	1	True				
ANR	3961081	CallExpression	strdup ( sz )		3960519	0					
ANR	3961082	Callee	strdup		3960519	0					
ANR	3961083	Identifier	strdup		3960519	0					
ANR	3961084	ArgumentList	sz		3960519	1					
ANR	3961085	Argument	sz		3960519	0					
ANR	3961086	Identifier	sz		3960519	0					
ANR	3961087	ReturnStatement	return NULL ;	1372:1:43407:43418	3960519	7	True				
ANR	3961088	Identifier	NULL		3960519	0					
ANR	3961089	ReturnType	char *		3960519	1					
ANR	3961090	Identifier	WinPerf_Object :: PrintValue		3960519	2					
ANR	3961091	ParameterList	"const WinPerf_CounterDef * pCounter , const WinPerf_TimerDeltas & time , const BYTE * curr , const BYTE * prev"		3960519	3					
ANR	3961092	Parameter	const WinPerf_CounterDef * pCounter	1253:1:40086:40120	3960519	0	True				
ANR	3961093	ParameterType	const WinPerf_CounterDef *		3960519	0					
ANR	3961094	Identifier	pCounter		3960519	1					
ANR	3961095	Parameter	const WinPerf_TimerDeltas & time	1254:1:40125:40156	3960519	1	True				
ANR	3961096	ParameterType	const WinPerf_TimerDeltas &		3960519	0					
ANR	3961097	Identifier	time		3960519	1					
ANR	3961098	Parameter	const BYTE * curr	1255:1:40161:40177	3960519	2	True				
ANR	3961099	ParameterType	const BYTE *		3960519	0					
ANR	3961100	Identifier	curr		3960519	1					
ANR	3961101	Parameter	const BYTE * prev	1256:1:40182:40198	3960519	3	True				
ANR	3961102	ParameterType	const BYTE *		3960519	0					
ANR	3961103	Identifier	prev		3960519	1					
ANR	3961104	CFGEntryNode	ENTRY		3960519		True				
ANR	3961105	CFGExitNode	EXIT		3960519		True				
ANR	3961106	Symbol	& val		3960519						
ANR	3961107	Symbol	mult		3960519						
ANR	3961108	Symbol	PERF_COUNTER_RATE		3960519						
ANR	3961109	Symbol	prev		3960519						
ANR	3961110	Symbol	PERF_COUNTER_PRECISION		3960519						
ANR	3961111	Symbol	PERF_COUNTER_QUEUELEN		3960519						
ANR	3961112	Symbol	type		3960519						
ANR	3961113	Symbol	* sz		3960519						
ANR	3961114	Symbol	pCounter -> CounterType		3960519						
ANR	3961115	Symbol	multi		3960519						
ANR	3961116	Symbol	PERF_NUMBER_DECIMAL		3960519						
ANR	3961117	Symbol	pCounter -> CounterOffset		3960519						
ANR	3961118	Symbol	PERF_COUNTER_BASE		3960519						
ANR	3961119	Symbol	PERF_TYPE_ZERO		3960519						
ANR	3961120	Symbol	time . nanos		3960519						
ANR	3961121	Symbol	PERF_INVERSE_COUNTER		3960519						
ANR	3961122	Symbol	curr		3960519						
ANR	3961123	Symbol	time . headfreq		3960519						
ANR	3961124	Symbol	PERF_DISPLAY_SECONDS		3960519						
ANR	3961125	Symbol	PERF_TYPE_NUMBER		3960519						
ANR	3961126	Symbol	val		3960519						
ANR	3961127	Symbol	time . objabs		3960519						
ANR	3961128	Symbol	NULL		3960519						
ANR	3961129	Symbol	time . objfreq		3960519						
ANR	3961130	Symbol	old		3960519						
ANR	3961131	Symbol	pBase		3960519						
ANR	3961132	Symbol	D_FULLDEBUG		3960519						
ANR	3961133	Symbol	time . head		3960519						
ANR	3961134	Symbol	time . obj		3960519						
ANR	3961135	Symbol	PERF_COUNTER_ELAPSED		3960519						
ANR	3961136	Symbol	PERF_DELTA_COUNTER		3960519						
ANR	3961137	Symbol	PERF_DISPLAY_PERCENT		3960519						
ANR	3961138	Symbol	pCounter		3960519						
ANR	3961139	Symbol	GetRawValue		3960519						
ANR	3961140	Symbol	* pBase		3960519						
ANR	3961141	Symbol	PERF_SIZE_LARGE		3960519						
ANR	3961142	Symbol	scale		3960519						
ANR	3961143	Symbol	* pCounter		3960519						
ANR	3961144	Symbol	PERF_COUNTER_FRACTION		3960519						
ANR	3961145	Symbol	pszUnits		3960519						
ANR	3961146	Symbol	value		3960519						
ANR	3961147	Symbol	* ( DWORD * ) & val		3960519						
ANR	3961148	Symbol	PERF_MULTI_COUNTER		3960519						
ANR	3961149	Symbol	* pCounter -> CounterOffset		3960519						
ANR	3961150	Symbol	PERF_DISPLAY_PER_SEC		3960519						
ANR	3961151	Symbol	PERF_DISPLAY_NO_SUFFIX		3960519						
ANR	3961152	Symbol	sz		3960519						
ANR	3961153	Symbol	pBase -> CounterType		3960519						
ANR	3961154	Symbol	PERF_TIMER_100NS		3960519						
ANR	3961155	Symbol	* * pCounter		3960519						
ANR	3961156	Symbol	PERF_COUNTER_VALUE		3960519						
ANR	3961157	Symbol	* curr		3960519						
ANR	3961158	Symbol	time		3960519						
ANR	3961159	Symbol	PERF_OBJECT_TIMER		3960519						
ANR	3961160	Symbol	strdup		3960519						
ANR	3961161	Symbol	baseCurr		3960519						
ANR	3961162	Function	init_WinPerf_Query	1376:0:43424:46000							
ANR	3961163	FunctionDef	"init_WinPerf_Query (const char * pszRegKey , const char * pszValueName , WinPerf_Query & query)"		3961162	0					
ANR	3961164	CompoundStatement		1380:0:43528:46000	3961162	0					
ANR	3961165	ExpressionStatement	"ZeroMemory ( & query , sizeof ( query ) )"	1381:1:43531:43564	3961162	0	True				
ANR	3961166	CallExpression	"ZeroMemory ( & query , sizeof ( query ) )"		3961162	0					
ANR	3961167	Callee	ZeroMemory		3961162	0					
ANR	3961168	Identifier	ZeroMemory		3961162	0					
ANR	3961169	ArgumentList	& query		3961162	1					
ANR	3961170	Argument	& query		3961162	0					
ANR	3961171	UnaryOperationExpression	& query		3961162	0					
ANR	3961172	UnaryOperator	&		3961162	0					
ANR	3961173	Identifier	query		3961162	1					
ANR	3961174	Argument	sizeof ( query )		3961162	1					
ANR	3961175	SizeofExpression	sizeof ( query )		3961162	0					
ANR	3961176	Sizeof	sizeof		3961162	0					
ANR	3961177	SizeofOperand	query		3961162	1					
ANR	3961178	IdentifierDeclStatement	char * pszTemp = NULL ;	1383:1:43568:43589	3961162	1	True				
ANR	3961179	IdentifierDecl	* pszTemp = NULL		3961162	0					
ANR	3961180	IdentifierDeclType	char *		3961162	0					
ANR	3961181	Identifier	pszTemp		3961162	1					
ANR	3961182	AssignmentExpression	* pszTemp = NULL		3961162	2		=			
ANR	3961183	Identifier	NULL		3961162	0					
ANR	3961184	Identifier	NULL		3961162	1					
ANR	3961185	IfStatement	"if ( ( ! pszValueName || ! pszValueName [ 0 ] ) && strchr ( pszRegKey , '\\\\' ) )"		3961162	2					
ANR	3961186	Condition	"( ! pszValueName || ! pszValueName [ 0 ] ) && strchr ( pszRegKey , '\\\\' )"	1385:5:43636:43700	3961162	0	True				
ANR	3961187	AndExpression	"( ! pszValueName || ! pszValueName [ 0 ] ) && strchr ( pszRegKey , '\\\\' )"		3961162	0		&&			
ANR	3961188	OrExpression	! pszValueName || ! pszValueName [ 0 ]		3961162	0		||			
ANR	3961189	UnaryOperationExpression	! pszValueName		3961162	0					
ANR	3961190	UnaryOperator	!		3961162	0					
ANR	3961191	Identifier	pszValueName		3961162	1					
ANR	3961192	UnaryOperationExpression	! pszValueName [ 0 ]		3961162	1					
ANR	3961193	UnaryOperator	!		3961162	0					
ANR	3961194	ArrayIndexing	pszValueName [ 0 ]		3961162	1					
ANR	3961195	Identifier	pszValueName		3961162	0					
ANR	3961196	PrimaryExpression	0		3961162	1					
ANR	3961197	CallExpression	"strchr ( pszRegKey , '\\\\' )"		3961162	1					
ANR	3961198	Callee	strchr		3961162	0					
ANR	3961199	Identifier	strchr		3961162	0					
ANR	3961200	ArgumentList	pszRegKey		3961162	1					
ANR	3961201	Argument	pszRegKey		3961162	0					
ANR	3961202	Identifier	pszRegKey		3961162	0					
ANR	3961203	Argument	'\\\\'		3961162	1					
ANR	3961204	PrimaryExpression	'\\\\'		3961162	0					
ANR	3961205	CompoundStatement		9:2:256:297	3961162	1					
ANR	3961206	ExpressionStatement	pszTemp = strdup ( pszRegKey )	1387:2:43708:43735	3961162	0	True				
ANR	3961207	AssignmentExpression	pszTemp = strdup ( pszRegKey )		3961162	0		=			
ANR	3961208	Identifier	pszTemp		3961162	0					
ANR	3961209	CallExpression	strdup ( pszRegKey )		3961162	1					
ANR	3961210	Callee	strdup		3961162	0					
ANR	3961211	Identifier	strdup		3961162	0					
ANR	3961212	ArgumentList	pszRegKey		3961162	1					
ANR	3961213	Argument	pszRegKey		3961162	0					
ANR	3961214	Identifier	pszRegKey		3961162	0					
ANR	3961215	IdentifierDeclStatement	"char * pszCounter = strchr ( pszTemp , '\\\\' ) ;"	1388:2:43785:43826	3961162	1	True				
ANR	3961216	IdentifierDecl	"* pszCounter = strchr ( pszTemp , '\\\\' )"		3961162	0					
ANR	3961217	IdentifierDeclType	char *		3961162	0					
ANR	3961218	Identifier	pszCounter		3961162	1					
ANR	3961219	AssignmentExpression	"* pszCounter = strchr ( pszTemp , '\\\\' )"		3961162	2		=			
ANR	3961220	Identifier	pszCounter		3961162	0					
ANR	3961221	CallExpression	"strchr ( pszTemp , '\\\\' )"		3961162	1					
ANR	3961222	Callee	strchr		3961162	0					
ANR	3961223	Identifier	strchr		3961162	0					
ANR	3961224	ArgumentList	pszTemp		3961162	1					
ANR	3961225	Argument	pszTemp		3961162	0					
ANR	3961226	Identifier	pszTemp		3961162	0					
ANR	3961227	Argument	'\\\\'		3961162	1					
ANR	3961228	PrimaryExpression	'\\\\'		3961162	0					
ANR	3961229	IfStatement	if ( pszCounter )		3961162	2					
ANR	3961230	Condition	pszCounter	1389:6:43834:43843	3961162	0	True				
ANR	3961231	Identifier	pszCounter		3961162	0					
ANR	3961232	CompoundStatement		11:2:319:319	3961162	1					
ANR	3961233	ExpressionStatement	* pszCounter ++ = 0	1391:11:43861:43878	3961162	0	True				
ANR	3961234	AssignmentExpression	* pszCounter ++ = 0		3961162	0		=			
ANR	3961235	UnaryOperationExpression	* pszCounter ++		3961162	0					
ANR	3961236	UnaryOperator	*		3961162	0					
ANR	3961237	PostIncDecOperationExpression	pszCounter ++		3961162	1					
ANR	3961238	Identifier	pszCounter		3961162	0					
ANR	3961239	IncDec	++		3961162	1					
ANR	3961240	PrimaryExpression	0		3961162	1					
ANR	3961241	ExpressionStatement	pszRegKey = pszTemp	1392:3:43883:43902	3961162	1	True				
ANR	3961242	AssignmentExpression	pszRegKey = pszTemp		3961162	0		=			
ANR	3961243	Identifier	pszRegKey		3961162	0					
ANR	3961244	Identifier	pszTemp		3961162	1					
ANR	3961245	ExpressionStatement	pszValueName = pszCounter	1393:3:43907:43932	3961162	2	True				
ANR	3961246	AssignmentExpression	pszValueName = pszCounter		3961162	0		=			
ANR	3961247	Identifier	pszValueName		3961162	0					
ANR	3961248	Identifier	pszCounter		3961162	1					
ANR	3961249	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""cracking key as key=\\""%s\\"", counter=\\""%s\\""\\n"" , pszRegKey , pszValueName )"	1395:2:43940:44043	3961162	3	True				
ANR	3961250	CallExpression	"dprintf ( D_FULLDEBUG , ""cracking key as key=\\""%s\\"", counter=\\""%s\\""\\n"" , pszRegKey , pszValueName )"		3961162	0					
ANR	3961251	Callee	dprintf		3961162	0					
ANR	3961252	Identifier	dprintf		3961162	0					
ANR	3961253	ArgumentList	D_FULLDEBUG		3961162	1					
ANR	3961254	Argument	D_FULLDEBUG		3961162	0					
ANR	3961255	Identifier	D_FULLDEBUG		3961162	0					
ANR	3961256	Argument	"""cracking key as key=\\""%s\\"", counter=\\""%s\\""\\n"""		3961162	1					
ANR	3961257	PrimaryExpression	"""cracking key as key=\\""%s\\"", counter=\\""%s\\""\\n"""		3961162	0					
ANR	3961258	Argument	pszRegKey		3961162	2					
ANR	3961259	Identifier	pszRegKey		3961162	0					
ANR	3961260	Argument	pszValueName		3961162	3					
ANR	3961261	Identifier	pszValueName		3961162	0					
ANR	3961262	IfStatement	"if ( strchr ( pszRegKey , '(' ) )"		3961162	3					
ANR	3961263	Condition	"strchr ( pszRegKey , '(' )"	1398:5:44053:44074	3961162	0	True				
ANR	3961264	CallExpression	"strchr ( pszRegKey , '(' )"		3961162	0					
ANR	3961265	Callee	strchr		3961162	0					
ANR	3961266	Identifier	strchr		3961162	0					
ANR	3961267	ArgumentList	pszRegKey		3961162	1					
ANR	3961268	Argument	pszRegKey		3961162	0					
ANR	3961269	Identifier	pszRegKey		3961162	0					
ANR	3961270	Argument	'('		3961162	1					
ANR	3961271	PrimaryExpression	'('		3961162	0					
ANR	3961272	CompoundStatement		24:2:674:715	3961162	1					
ANR	3961273	IdentifierDeclStatement	char * pszInst = NULL ;	1400:2:44082:44103	3961162	0	True				
ANR	3961274	IdentifierDecl	* pszInst = NULL		3961162	0					
ANR	3961275	IdentifierDeclType	char *		3961162	0					
ANR	3961276	Identifier	pszInst		3961162	1					
ANR	3961277	AssignmentExpression	* pszInst = NULL		3961162	2		=			
ANR	3961278	Identifier	NULL		3961162	0					
ANR	3961279	Identifier	NULL		3961162	1					
ANR	3961280	IfStatement	if ( ! pszTemp )		3961162	1					
ANR	3961281	Condition	! pszTemp	1401:7:44112:44120	3961162	0	True				
ANR	3961282	UnaryOperationExpression	! pszTemp		3961162	0					
ANR	3961283	UnaryOperator	!		3961162	0					
ANR	3961284	Identifier	pszTemp		3961162	1					
ANR	3961285	ExpressionStatement	pszTemp = strdup ( pszRegKey )	1402:3:44126:44153	3961162	1	True				
ANR	3961286	AssignmentExpression	pszTemp = strdup ( pszRegKey )		3961162	0		=			
ANR	3961287	Identifier	pszTemp		3961162	0					
ANR	3961288	CallExpression	strdup ( pszRegKey )		3961162	1					
ANR	3961289	Callee	strdup		3961162	0					
ANR	3961290	Identifier	strdup		3961162	0					
ANR	3961291	ArgumentList	pszRegKey		3961162	1					
ANR	3961292	Argument	pszRegKey		3961162	0					
ANR	3961293	Identifier	pszRegKey		3961162	0					
ANR	3961294	IdentifierDeclStatement	"char * pszInstance = strchr ( pszTemp , '(' ) ;"	1403:2:44203:44244	3961162	2	True				
ANR	3961295	IdentifierDecl	"* pszInstance = strchr ( pszTemp , '(' )"		3961162	0					
ANR	3961296	IdentifierDeclType	char *		3961162	0					
ANR	3961297	Identifier	pszInstance		3961162	1					
ANR	3961298	AssignmentExpression	"* pszInstance = strchr ( pszTemp , '(' )"		3961162	2		=			
ANR	3961299	Identifier	pszInstance		3961162	0					
ANR	3961300	CallExpression	"strchr ( pszTemp , '(' )"		3961162	1					
ANR	3961301	Callee	strchr		3961162	0					
ANR	3961302	Identifier	strchr		3961162	0					
ANR	3961303	ArgumentList	pszTemp		3961162	1					
ANR	3961304	Argument	pszTemp		3961162	0					
ANR	3961305	Identifier	pszTemp		3961162	0					
ANR	3961306	Argument	'('		3961162	1					
ANR	3961307	PrimaryExpression	'('		3961162	0					
ANR	3961308	IfStatement	if ( pszInstance )		3961162	3					
ANR	3961309	Condition	pszInstance	1404:6:44252:44262	3961162	0	True				
ANR	3961310	Identifier	pszInstance		3961162	0					
ANR	3961311	CompoundStatement		26:2:738:738	3961162	1					
ANR	3961312	ExpressionStatement	* pszInstance ++ = 0	1406:3:44272:44290	3961162	0	True				
ANR	3961313	AssignmentExpression	* pszInstance ++ = 0		3961162	0		=			
ANR	3961314	UnaryOperationExpression	* pszInstance ++		3961162	0					
ANR	3961315	UnaryOperator	*		3961162	0					
ANR	3961316	PostIncDecOperationExpression	pszInstance ++		3961162	1					
ANR	3961317	Identifier	pszInstance		3961162	0					
ANR	3961318	IncDec	++		3961162	1					
ANR	3961319	PrimaryExpression	0		3961162	1					
ANR	3961320	ExpressionStatement	pszInst = pszInstance	1407:3:44295:44316	3961162	1	True				
ANR	3961321	AssignmentExpression	pszInst = pszInstance		3961162	0		=			
ANR	3961322	Identifier	pszInst		3961162	0					
ANR	3961323	Identifier	pszInstance		3961162	1					
ANR	3961324	ExpressionStatement	"pszInstance = strchr ( pszInstance , ')' )"	1408:3:44321:44359	3961162	2	True				
ANR	3961325	AssignmentExpression	"pszInstance = strchr ( pszInstance , ')' )"		3961162	0		=			
ANR	3961326	Identifier	pszInstance		3961162	0					
ANR	3961327	CallExpression	"strchr ( pszInstance , ')' )"		3961162	1					
ANR	3961328	Callee	strchr		3961162	0					
ANR	3961329	Identifier	strchr		3961162	0					
ANR	3961330	ArgumentList	pszInstance		3961162	1					
ANR	3961331	Argument	pszInstance		3961162	0					
ANR	3961332	Identifier	pszInstance		3961162	0					
ANR	3961333	Argument	')'		3961162	1					
ANR	3961334	PrimaryExpression	')'		3961162	0					
ANR	3961335	IfStatement	if ( pszInstance )		3961162	3					
ANR	3961336	Condition	pszInstance	1409:7:44368:44378	3961162	0	True				
ANR	3961337	Identifier	pszInstance		3961162	0					
ANR	3961338	CompoundStatement		31:3:855:855	3961162	1					
ANR	3961339	ExpressionStatement	* pszInstance = 0	1411:4:44390:44406	3961162	0	True				
ANR	3961340	AssignmentExpression	* pszInstance = 0		3961162	0		=			
ANR	3961341	UnaryOperationExpression	* pszInstance		3961162	0					
ANR	3961342	UnaryOperator	*		3961162	0					
ANR	3961343	Identifier	pszInstance		3961162	1					
ANR	3961344	PrimaryExpression	0		3961162	1					
ANR	3961345	ExpressionStatement	query . ixInst = ( int ) ( pszInst - pszTemp )	1412:4:44412:44451	3961162	1	True				
ANR	3961346	AssignmentExpression	query . ixInst = ( int ) ( pszInst - pszTemp )		3961162	0		=			
ANR	3961347	MemberAccess	query . ixInst		3961162	0					
ANR	3961348	Identifier	query		3961162	0					
ANR	3961349	Identifier	ixInst		3961162	1					
ANR	3961350	CastExpression	( int ) ( pszInst - pszTemp )		3961162	1					
ANR	3961351	CastTarget	int		3961162	0					
ANR	3961352	AdditiveExpression	pszInst - pszTemp		3961162	1		-			
ANR	3961353	Identifier	pszInst		3961162	0					
ANR	3961354	Identifier	pszTemp		3961162	1					
ANR	3961355	ExpressionStatement	query . cchInst = ( int ) ( pszInstance - pszInst )	1413:4:44457:44501	3961162	2	True				
ANR	3961356	AssignmentExpression	query . cchInst = ( int ) ( pszInstance - pszInst )		3961162	0		=			
ANR	3961357	MemberAccess	query . cchInst		3961162	0					
ANR	3961358	Identifier	query		3961162	0					
ANR	3961359	Identifier	cchInst		3961162	1					
ANR	3961360	CastExpression	( int ) ( pszInstance - pszInst )		3961162	1					
ANR	3961361	CastTarget	int		3961162	0					
ANR	3961362	AdditiveExpression	pszInstance - pszInst		3961162	1		-			
ANR	3961363	Identifier	pszInstance		3961162	0					
ANR	3961364	Identifier	pszInst		3961162	1					
ANR	3961365	ExpressionStatement	query . idInst = atoi ( pszInst )	1414:4:44507:44535	3961162	3	True				
ANR	3961366	AssignmentExpression	query . idInst = atoi ( pszInst )		3961162	0		=			
ANR	3961367	MemberAccess	query . idInst		3961162	0					
ANR	3961368	Identifier	query		3961162	0					
ANR	3961369	Identifier	idInst		3961162	1					
ANR	3961370	CallExpression	atoi ( pszInst )		3961162	1					
ANR	3961371	Callee	atoi		3961162	0					
ANR	3961372	Identifier	atoi		3961162	0					
ANR	3961373	ArgumentList	pszInst		3961162	1					
ANR	3961374	Argument	pszInst		3961162	0					
ANR	3961375	Identifier	pszInst		3961162	0					
ANR	3961376	ExpressionStatement	pszRegKey = pszTemp	1416:3:44545:44564	3961162	4	True				
ANR	3961377	AssignmentExpression	pszRegKey = pszTemp		3961162	0		=			
ANR	3961378	Identifier	pszRegKey		3961162	0					
ANR	3961379	Identifier	pszTemp		3961162	1					
ANR	3961380	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""cracking key as key=\\""%s\\"", inst=\\""%s\\""\\n"" , pszRegKey , pszInst )"	1418:2:44572:44667	3961162	4	True				
ANR	3961381	CallExpression	"dprintf ( D_FULLDEBUG , ""cracking key as key=\\""%s\\"", inst=\\""%s\\""\\n"" , pszRegKey , pszInst )"		3961162	0					
ANR	3961382	Callee	dprintf		3961162	0					
ANR	3961383	Identifier	dprintf		3961162	0					
ANR	3961384	ArgumentList	D_FULLDEBUG		3961162	1					
ANR	3961385	Argument	D_FULLDEBUG		3961162	0					
ANR	3961386	Identifier	D_FULLDEBUG		3961162	0					
ANR	3961387	Argument	"""cracking key as key=\\""%s\\"", inst=\\""%s\\""\\n"""		3961162	1					
ANR	3961388	PrimaryExpression	"""cracking key as key=\\""%s\\"", inst=\\""%s\\""\\n"""		3961162	0					
ANR	3961389	Argument	pszRegKey		3961162	2					
ANR	3961390	Identifier	pszRegKey		3961162	0					
ANR	3961391	Argument	pszInst		3961162	3					
ANR	3961392	Identifier	pszInst		3961162	0					
ANR	3961393	IfStatement	if ( isdigit ( pszRegKey [ 0 ] ) )		3961162	4					
ANR	3961394	Condition	isdigit ( pszRegKey [ 0 ] )	1425:5:44804:44824	3961162	0	True				
ANR	3961395	CallExpression	isdigit ( pszRegKey [ 0 ] )		3961162	0					
ANR	3961396	Callee	isdigit		3961162	0					
ANR	3961397	Identifier	isdigit		3961162	0					
ANR	3961398	ArgumentList	pszRegKey [ 0 ]		3961162	1					
ANR	3961399	Argument	pszRegKey [ 0 ]		3961162	0					
ANR	3961400	ArrayIndexing	pszRegKey [ 0 ]		3961162	0					
ANR	3961401	Identifier	pszRegKey		3961162	0					
ANR	3961402	PrimaryExpression	0		3961162	1					
ANR	3961403	ExpressionStatement	query . idKey = atoi ( pszRegKey )	1426:2:44829:44858	3961162	1	True				
ANR	3961404	AssignmentExpression	query . idKey = atoi ( pszRegKey )		3961162	0		=			
ANR	3961405	MemberAccess	query . idKey		3961162	0					
ANR	3961406	Identifier	query		3961162	0					
ANR	3961407	Identifier	idKey		3961162	1					
ANR	3961408	CallExpression	atoi ( pszRegKey )		3961162	1					
ANR	3961409	Callee	atoi		3961162	0					
ANR	3961410	Identifier	atoi		3961162	0					
ANR	3961411	ArgumentList	pszRegKey		3961162	1					
ANR	3961412	Argument	pszRegKey		3961162	0					
ANR	3961413	Identifier	pszRegKey		3961162	0					
ANR	3961414	ElseStatement	else		3961162	0					
ANR	3961415	CompoundStatement		51:2:1421:1453	3961162	0					
ANR	3961416	ExpressionStatement	init_windows_performance_hashtable ( )	1429:2:44871:44907	3961162	0	True				
ANR	3961417	CallExpression	init_windows_performance_hashtable ( )		3961162	0					
ANR	3961418	Callee	init_windows_performance_hashtable		3961162	0					
ANR	3961419	Identifier	init_windows_performance_hashtable		3961162	0					
ANR	3961420	ArgumentList			3961162	1					
ANR	3961421	IdentifierDeclStatement	const char * pszPerfIndex = NULL ;	1430:2:44950:44982	3961162	1	True				
ANR	3961422	IdentifierDecl	* pszPerfIndex = NULL		3961162	0					
ANR	3961423	IdentifierDeclType	const char *		3961162	0					
ANR	3961424	Identifier	pszPerfIndex		3961162	1					
ANR	3961425	AssignmentExpression	* pszPerfIndex = NULL		3961162	2		=			
ANR	3961426	Identifier	NULL		3961162	0					
ANR	3961427	Identifier	NULL		3961162	1					
ANR	3961428	IfStatement	"if ( rl . pPerfTable && ( rl . pPerfTable -> lookup ( pszRegKey , pszPerfIndex ) >= 0 ) )"		3961162	2					
ANR	3961429	Condition	"rl . pPerfTable && ( rl . pPerfTable -> lookup ( pszRegKey , pszPerfIndex ) >= 0 )"	1431:6:44990:45063	3961162	0	True				
ANR	3961430	AndExpression	"rl . pPerfTable && ( rl . pPerfTable -> lookup ( pszRegKey , pszPerfIndex ) >= 0 )"		3961162	0		&&			
ANR	3961431	MemberAccess	rl . pPerfTable		3961162	0					
ANR	3961432	Identifier	rl		3961162	0					
ANR	3961433	Identifier	pPerfTable		3961162	1					
ANR	3961434	RelationalExpression	"rl . pPerfTable -> lookup ( pszRegKey , pszPerfIndex ) >= 0"		3961162	1		>=			
ANR	3961435	CallExpression	"rl . pPerfTable -> lookup ( pszRegKey , pszPerfIndex )"		3961162	0					
ANR	3961436	Callee	rl . pPerfTable -> lookup		3961162	0					
ANR	3961437	PtrMemberAccess	rl . pPerfTable -> lookup		3961162	0					
ANR	3961438	MemberAccess	rl . pPerfTable		3961162	0					
ANR	3961439	Identifier	rl		3961162	0					
ANR	3961440	Identifier	pPerfTable		3961162	1					
ANR	3961441	Identifier	lookup		3961162	1					
ANR	3961442	ArgumentList	pszRegKey		3961162	1					
ANR	3961443	Argument	pszRegKey		3961162	0					
ANR	3961444	Identifier	pszRegKey		3961162	0					
ANR	3961445	Argument	pszPerfIndex		3961162	1					
ANR	3961446	Identifier	pszPerfIndex		3961162	0					
ANR	3961447	PrimaryExpression	0		3961162	1					
ANR	3961448	CompoundStatement		54:2:1539:1539	3961162	1					
ANR	3961449	ExpressionStatement	query . idKey = atoi ( pszPerfIndex )	1434:3:45073:45105	3961162	0	True				
ANR	3961450	AssignmentExpression	query . idKey = atoi ( pszPerfIndex )		3961162	0		=			
ANR	3961451	MemberAccess	query . idKey		3961162	0					
ANR	3961452	Identifier	query		3961162	0					
ANR	3961453	Identifier	idKey		3961162	1					
ANR	3961454	CallExpression	atoi ( pszPerfIndex )		3961162	1					
ANR	3961455	Callee	atoi		3961162	0					
ANR	3961456	Identifier	atoi		3961162	0					
ANR	3961457	ArgumentList	pszPerfIndex		3961162	1					
ANR	3961458	Argument	pszPerfIndex		3961162	0					
ANR	3961459	Identifier	pszPerfIndex		3961162	0					
ANR	3961460	IfStatement	if ( pszValueName && pszValueName [ 0 ] )		3961162	5					
ANR	3961461	Condition	pszValueName && pszValueName [ 0 ]	1438:5:45120:45150	3961162	0	True				
ANR	3961462	AndExpression	pszValueName && pszValueName [ 0 ]		3961162	0		&&			
ANR	3961463	Identifier	pszValueName		3961162	0					
ANR	3961464	ArrayIndexing	pszValueName [ 0 ]		3961162	1					
ANR	3961465	Identifier	pszValueName		3961162	0					
ANR	3961466	PrimaryExpression	0		3961162	1					
ANR	3961467	CompoundStatement		60:1:1625:1625	3961162	1					
ANR	3961468	IfStatement	if ( isdigit ( pszValueName [ 0 ] ) )		3961162	0					
ANR	3961469	Condition	isdigit ( pszValueName [ 0 ] )	1440:6:45162:45185	3961162	0	True				
ANR	3961470	CallExpression	isdigit ( pszValueName [ 0 ] )		3961162	0					
ANR	3961471	Callee	isdigit		3961162	0					
ANR	3961472	Identifier	isdigit		3961162	0					
ANR	3961473	ArgumentList	pszValueName [ 0 ]		3961162	1					
ANR	3961474	Argument	pszValueName [ 0 ]		3961162	0					
ANR	3961475	ArrayIndexing	pszValueName [ 0 ]		3961162	0					
ANR	3961476	Identifier	pszValueName		3961162	0					
ANR	3961477	PrimaryExpression	0		3961162	1					
ANR	3961478	ExpressionStatement	query . idCounter = atoi ( pszValueName )	1441:3:45191:45227	3961162	1	True				
ANR	3961479	AssignmentExpression	query . idCounter = atoi ( pszValueName )		3961162	0		=			
ANR	3961480	MemberAccess	query . idCounter		3961162	0					
ANR	3961481	Identifier	query		3961162	0					
ANR	3961482	Identifier	idCounter		3961162	1					
ANR	3961483	CallExpression	atoi ( pszValueName )		3961162	1					
ANR	3961484	Callee	atoi		3961162	0					
ANR	3961485	Identifier	atoi		3961162	0					
ANR	3961486	ArgumentList	pszValueName		3961162	1					
ANR	3961487	Argument	pszValueName		3961162	0					
ANR	3961488	Identifier	pszValueName		3961162	0					
ANR	3961489	ElseStatement	else		3961162	0					
ANR	3961490	CompoundStatement		66:3:1794:1829	3961162	0					
ANR	3961491	ExpressionStatement	init_windows_performance_hashtable ( )	1444:3:45243:45279	3961162	0	True				
ANR	3961492	CallExpression	init_windows_performance_hashtable ( )		3961162	0					
ANR	3961493	Callee	init_windows_performance_hashtable		3961162	0					
ANR	3961494	Identifier	init_windows_performance_hashtable		3961162	0					
ANR	3961495	ArgumentList			3961162	1					
ANR	3961496	IdentifierDeclStatement	const char * pszCounterIndex = NULL ;	1445:3:45323:45358	3961162	1	True				
ANR	3961497	IdentifierDecl	* pszCounterIndex = NULL		3961162	0					
ANR	3961498	IdentifierDeclType	const char *		3961162	0					
ANR	3961499	Identifier	pszCounterIndex		3961162	1					
ANR	3961500	AssignmentExpression	* pszCounterIndex = NULL		3961162	2		=			
ANR	3961501	Identifier	NULL		3961162	0					
ANR	3961502	Identifier	NULL		3961162	1					
ANR	3961503	IfStatement	if ( rl . pPerfTable )		3961162	2					
ANR	3961504	Condition	rl . pPerfTable	1446:7:45367:45379	3961162	0	True				
ANR	3961505	MemberAccess	rl . pPerfTable		3961162	0					
ANR	3961506	Identifier	rl		3961162	0					
ANR	3961507	Identifier	pPerfTable		3961162	1					
ANR	3961508	CompoundStatement		72:4:2016:2026	3961162	1					
ANR	3961509	IdentifierDeclStatement	"void * cur = NULL , * next = NULL ;"	1450:4:45508:45539	3961162	0	True				
ANR	3961510	IdentifierDecl	* cur = NULL		3961162	0					
ANR	3961511	IdentifierDeclType	void *		3961162	0					
ANR	3961512	Identifier	cur		3961162	1					
ANR	3961513	AssignmentExpression	* cur = NULL		3961162	2		=			
ANR	3961514	Identifier	NULL		3961162	0					
ANR	3961515	Identifier	NULL		3961162	1					
ANR	3961516	IdentifierDecl	* next = NULL		3961162	1					
ANR	3961517	IdentifierDeclType	void *		3961162	0					
ANR	3961518	Identifier	next		3961162	1					
ANR	3961519	AssignmentExpression	* next = NULL		3961162	2		=			
ANR	3961520	Identifier	NULL		3961162	0					
ANR	3961521	Identifier	NULL		3961162	1					
ANR	3961522	IdentifierDeclStatement	int ix = 0 ;	1451:4:45545:45555	3961162	1	True				
ANR	3961523	IdentifierDecl	ix = 0		3961162	0					
ANR	3961524	IdentifierDeclType	int		3961162	0					
ANR	3961525	Identifier	ix		3961162	1					
ANR	3961526	AssignmentExpression	ix = 0		3961162	2		=			
ANR	3961527	Identifier	ix		3961162	0					
ANR	3961528	PrimaryExpression	0		3961162	1					
ANR	3961529	WhileStatement	"while ( rl . pPerfTable -> getNext ( pszValueName , cur , pszCounterIndex , next ) >= 0 )"		3961162	2					
ANR	3961530	Condition	"rl . pPerfTable -> getNext ( pszValueName , cur , pszCounterIndex , next ) >= 0"	1452:11:45568:45636	3961162	0	True				
ANR	3961531	RelationalExpression	"rl . pPerfTable -> getNext ( pszValueName , cur , pszCounterIndex , next ) >= 0"		3961162	0		>=			
ANR	3961532	CallExpression	"rl . pPerfTable -> getNext ( pszValueName , cur , pszCounterIndex , next )"		3961162	0					
ANR	3961533	Callee	rl . pPerfTable -> getNext		3961162	0					
ANR	3961534	PtrMemberAccess	rl . pPerfTable -> getNext		3961162	0					
ANR	3961535	MemberAccess	rl . pPerfTable		3961162	0					
ANR	3961536	Identifier	rl		3961162	0					
ANR	3961537	Identifier	pPerfTable		3961162	1					
ANR	3961538	Identifier	getNext		3961162	1					
ANR	3961539	ArgumentList	pszValueName		3961162	1					
ANR	3961540	Argument	pszValueName		3961162	0					
ANR	3961541	Identifier	pszValueName		3961162	0					
ANR	3961542	Argument	cur		3961162	1					
ANR	3961543	Identifier	cur		3961162	0					
ANR	3961544	Argument	pszCounterIndex		3961162	2					
ANR	3961545	Identifier	pszCounterIndex		3961162	0					
ANR	3961546	Argument	next		3961162	3					
ANR	3961547	Identifier	next		3961162	0					
ANR	3961548	PrimaryExpression	0		3961162	1					
ANR	3961549	CompoundStatement		74:4:2114:2114	3961162	1					
ANR	3961550	ExpressionStatement	( ( DWORD * ) & query . idCounter ) [ ix ++ ] = atoi ( pszCounterIndex )	1454:5:45650:45706	3961162	0	True				
ANR	3961551	AssignmentExpression	( ( DWORD * ) & query . idCounter ) [ ix ++ ] = atoi ( pszCounterIndex )		3961162	0		=			
ANR	3961552	ArrayIndexing	( ( DWORD * ) & query . idCounter ) [ ix ++ ]		3961162	0					
ANR	3961553	CastExpression	( DWORD * ) & query . idCounter		3961162	0					
ANR	3961554	CastTarget	DWORD *		3961162	0					
ANR	3961555	UnaryOperationExpression	& query . idCounter		3961162	1					
ANR	3961556	UnaryOperator	&		3961162	0					
ANR	3961557	MemberAccess	query . idCounter		3961162	1					
ANR	3961558	Identifier	query		3961162	0					
ANR	3961559	Identifier	idCounter		3961162	1					
ANR	3961560	PostIncDecOperationExpression	ix ++		3961162	1					
ANR	3961561	Identifier	ix		3961162	0					
ANR	3961562	IncDec	++		3961162	1					
ANR	3961563	CallExpression	atoi ( pszCounterIndex )		3961162	1					
ANR	3961564	Callee	atoi		3961162	0					
ANR	3961565	Identifier	atoi		3961162	0					
ANR	3961566	ArgumentList	pszCounterIndex		3961162	1					
ANR	3961567	Argument	pszCounterIndex		3961162	0					
ANR	3961568	Identifier	pszCounterIndex		3961162	0					
ANR	3961569	ExpressionStatement	cur = next	1455:5:45713:45723	3961162	1	True				
ANR	3961570	AssignmentExpression	cur = next		3961162	0		=			
ANR	3961571	Identifier	cur		3961162	0					
ANR	3961572	Identifier	next		3961162	1					
ANR	3961573	IfStatement	if ( query . idAlt [ NUM_ELEMENTS ( query . idAlt ) - 1 ] != 0 )		3961162	3					
ANR	3961574	Condition	query . idAlt [ NUM_ELEMENTS ( query . idAlt ) - 1 ] != 0	1457:8:45739:45783	3961162	0	True				
ANR	3961575	EqualityExpression	query . idAlt [ NUM_ELEMENTS ( query . idAlt ) - 1 ] != 0		3961162	0		!=			
ANR	3961576	ArrayIndexing	query . idAlt [ NUM_ELEMENTS ( query . idAlt ) - 1 ]		3961162	0					
ANR	3961577	MemberAccess	query . idAlt		3961162	0					
ANR	3961578	Identifier	query		3961162	0					
ANR	3961579	Identifier	idAlt		3961162	1					
ANR	3961580	AdditiveExpression	NUM_ELEMENTS ( query . idAlt ) - 1		3961162	1		-			
ANR	3961581	CallExpression	NUM_ELEMENTS ( query . idAlt )		3961162	0					
ANR	3961582	Callee	NUM_ELEMENTS		3961162	0					
ANR	3961583	Identifier	NUM_ELEMENTS		3961162	0					
ANR	3961584	ArgumentList	query . idAlt		3961162	1					
ANR	3961585	Argument	query . idAlt		3961162	0					
ANR	3961586	MemberAccess	query . idAlt		3961162	0					
ANR	3961587	Identifier	query		3961162	0					
ANR	3961588	Identifier	idAlt		3961162	1					
ANR	3961589	PrimaryExpression	1		3961162	1					
ANR	3961590	PrimaryExpression	0		3961162	1					
ANR	3961591	CompoundStatement		79:4:2261:2261	3961162	1					
ANR	3961592	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error: too many counter ids map to the same name!"" )"	1459:5:45797:45868	3961162	0	True				
ANR	3961593	CallExpression	"dprintf ( D_ALWAYS , ""Error: too many counter ids map to the same name!"" )"		3961162	0					
ANR	3961594	Callee	dprintf		3961162	0					
ANR	3961595	Identifier	dprintf		3961162	0					
ANR	3961596	ArgumentList	D_ALWAYS		3961162	1					
ANR	3961597	Argument	D_ALWAYS		3961162	0					
ANR	3961598	Identifier	D_ALWAYS		3961162	0					
ANR	3961599	Argument	"""Error: too many counter ids map to the same name!"""		3961162	1					
ANR	3961600	PrimaryExpression	"""Error: too many counter ids map to the same name!"""		3961162	0					
ANR	3961601	ExpressionStatement	query . idAlt [ NUM_ELEMENTS ( query . idAlt ) - 1 ] = 0	1460:5:45875:45919	3961162	1	True				
ANR	3961602	AssignmentExpression	query . idAlt [ NUM_ELEMENTS ( query . idAlt ) - 1 ] = 0		3961162	0		=			
ANR	3961603	ArrayIndexing	query . idAlt [ NUM_ELEMENTS ( query . idAlt ) - 1 ]		3961162	0					
ANR	3961604	MemberAccess	query . idAlt		3961162	0					
ANR	3961605	Identifier	query		3961162	0					
ANR	3961606	Identifier	idAlt		3961162	1					
ANR	3961607	AdditiveExpression	NUM_ELEMENTS ( query . idAlt ) - 1		3961162	1		-			
ANR	3961608	CallExpression	NUM_ELEMENTS ( query . idAlt )		3961162	0					
ANR	3961609	Callee	NUM_ELEMENTS		3961162	0					
ANR	3961610	Identifier	NUM_ELEMENTS		3961162	0					
ANR	3961611	ArgumentList	query . idAlt		3961162	1					
ANR	3961612	Argument	query . idAlt		3961162	0					
ANR	3961613	MemberAccess	query . idAlt		3961162	0					
ANR	3961614	Identifier	query		3961162	0					
ANR	3961615	Identifier	idAlt		3961162	1					
ANR	3961616	PrimaryExpression	1		3961162	1					
ANR	3961617	PrimaryExpression	0		3961162	1					
ANR	3961618	IfStatement	if ( pszTemp )		3961162	6					
ANR	3961619	Condition	pszTemp	1466:5:45945:45951	3961162	0	True				
ANR	3961620	Identifier	pszTemp		3961162	0					
ANR	3961621	ExpressionStatement	free ( pszTemp )	1467:2:45956:45969	3961162	1	True				
ANR	3961622	CallExpression	free ( pszTemp )		3961162	0					
ANR	3961623	Callee	free		3961162	0					
ANR	3961624	Identifier	free		3961162	0					
ANR	3961625	ArgumentList	pszTemp		3961162	1					
ANR	3961626	Argument	pszTemp		3961162	0					
ANR	3961627	Identifier	pszTemp		3961162	0					
ANR	3961628	ReturnStatement	return ( query . idKey != 0 ) ;	1469:1:45973:45998	3961162	7	True				
ANR	3961629	EqualityExpression	query . idKey != 0		3961162	0		!=			
ANR	3961630	MemberAccess	query . idKey		3961162	0					
ANR	3961631	Identifier	query		3961162	0					
ANR	3961632	Identifier	idKey		3961162	1					
ANR	3961633	PrimaryExpression	0		3961162	1					
ANR	3961634	ReturnType	bool		3961162	1					
ANR	3961635	Identifier	init_WinPerf_Query		3961162	2					
ANR	3961636	ParameterList	"const char * pszRegKey , const char * pszValueName , WinPerf_Query & query"		3961162	3					
ANR	3961637	Parameter	const char * pszRegKey	1377:1:43450:43471	3961162	0	True				
ANR	3961638	ParameterType	const char *		3961162	0					
ANR	3961639	Identifier	pszRegKey		3961162	1					
ANR	3961640	Parameter	const char * pszValueName	1378:1:43476:43500	3961162	1	True				
ANR	3961641	ParameterType	const char *		3961162	0					
ANR	3961642	Identifier	pszValueName		3961162	1					
ANR	3961643	Parameter	WinPerf_Query & query	1379:1:43505:43525	3961162	2	True				
ANR	3961644	ParameterType	WinPerf_Query &		3961162	0					
ANR	3961645	Identifier	query		3961162	1					
ANR	3961646	CFGEntryNode	ENTRY		3961162		True				
ANR	3961647	CFGExitNode	EXIT		3961162		True				
ANR	3961648	Symbol	next		3961162						
ANR	3961649	Symbol	cur		3961162						
ANR	3961650	Symbol	* pszCounter ++		3961162						
ANR	3961651	Symbol	NUM_ELEMENTS		3961162						
ANR	3961652	Symbol	query . idInst		3961162						
ANR	3961653	Symbol	pszValueName		3961162						
ANR	3961654	Symbol	strchr		3961162						
ANR	3961655	Symbol	rl . pPerfTable		3961162						
ANR	3961656	Symbol	* NUM_ELEMENTS		3961162						
ANR	3961657	Symbol	pszInstance		3961162						
ANR	3961658	Symbol	* query . idAlt		3961162						
ANR	3961659	Symbol	rl . pPerfTable -> getNext		3961162						
ANR	3961660	Symbol	query . idKey		3961162						
ANR	3961661	Symbol	pszCounter		3961162						
ANR	3961662	Symbol	* pszInstance		3961162						
ANR	3961663	Symbol	* pszRegKey		3961162						
ANR	3961664	Symbol	pszTemp		3961162						
ANR	3961665	Symbol	isdigit		3961162						
ANR	3961666	Symbol	& query . idCounter		3961162						
ANR	3961667	Symbol	* query		3961162						
ANR	3961668	Symbol	pszRegKey		3961162						
ANR	3961669	Symbol	atoi		3961162						
ANR	3961670	Symbol	pszCounterIndex		3961162						
ANR	3961671	Symbol	NULL		3961162						
ANR	3961672	Symbol	* rl		3961162						
ANR	3961673	Symbol	query		3961162						
ANR	3961674	Symbol	query . idAlt		3961162						
ANR	3961675	Symbol	pszPerfIndex		3961162						
ANR	3961676	Symbol	D_ALWAYS		3961162						
ANR	3961677	Symbol	D_FULLDEBUG		3961162						
ANR	3961678	Symbol	pszInst		3961162						
ANR	3961679	Symbol	* pszInstance ++		3961162						
ANR	3961680	Symbol	query . idCounter		3961162						
ANR	3961681	Symbol	ix		3961162						
ANR	3961682	Symbol	query . cchInst		3961162						
ANR	3961683	Symbol	rl . pPerfTable -> lookup		3961162						
ANR	3961684	Symbol	* rl . pPerfTable		3961162						
ANR	3961685	Symbol	& query		3961162						
ANR	3961686	Symbol	* pszValueName		3961162						
ANR	3961687	Symbol	rl		3961162						
ANR	3961688	Symbol	strdup		3961162						
ANR	3961689	Symbol	query . ixInst		3961162						
ANR	3961690	Function	WinPerf_CounterValue :: Print	1472:0:46003:47244							
ANR	3961691	FunctionDef	"WinPerf_CounterValue :: Print (char * psz , int cchMax , bool fIncludeUnits)"		3961690	0					
ANR	3961692	CompoundStatement		1473:0:46085:47244	3961690	0					
ANR	3961693	IdentifierDeclStatement	int cch = 0 ;	1474:1:46088:46099	3961690	0	True				
ANR	3961694	IdentifierDecl	cch = 0		3961690	0					
ANR	3961695	IdentifierDeclType	int		3961690	0					
ANR	3961696	Identifier	cch		3961690	1					
ANR	3961697	AssignmentExpression	cch = 0		3961690	2		=			
ANR	3961698	Identifier	cch		3961690	0					
ANR	3961699	PrimaryExpression	0		3961690	1					
ANR	3961700	ExpressionStatement	psz [ 0 ] = 0	1475:1:46102:46112	3961690	1	True				
ANR	3961701	AssignmentExpression	psz [ 0 ] = 0		3961690	0		=			
ANR	3961702	ArrayIndexing	psz [ 0 ]		3961690	0					
ANR	3961703	Identifier	psz		3961690	0					
ANR	3961704	PrimaryExpression	0		3961690	1					
ANR	3961705	PrimaryExpression	0		3961690	1					
ANR	3961706	IfStatement	if ( ( this -> type & WinPerf_CT_Double ) == WinPerf_CT_Double )		3961690	2					
ANR	3961707	Condition	( this -> type & WinPerf_CT_Double ) == WinPerf_CT_Double	1476:5:46119:46171	3961690	0	True				
ANR	3961708	EqualityExpression	( this -> type & WinPerf_CT_Double ) == WinPerf_CT_Double		3961690	0		==			
ANR	3961709	BitAndExpression	this -> type & WinPerf_CT_Double		3961690	0		&			
ANR	3961710	PtrMemberAccess	this -> type		3961690	0					
ANR	3961711	Identifier	this		3961690	0					
ANR	3961712	Identifier	type		3961690	1					
ANR	3961713	Identifier	WinPerf_CT_Double		3961690	1					
ANR	3961714	Identifier	WinPerf_CT_Double		3961690	1					
ANR	3961715	CompoundStatement		5:1:89:89	3961690	1					
ANR	3961716	ExpressionStatement	"cch = sprintf ( psz , ""%f"" , value . d )"	1478:2:46179:46212	3961690	0	True				
ANR	3961717	AssignmentExpression	"cch = sprintf ( psz , ""%f"" , value . d )"		3961690	0		=			
ANR	3961718	Identifier	cch		3961690	0					
ANR	3961719	CallExpression	"sprintf ( psz , ""%f"" , value . d )"		3961690	1					
ANR	3961720	Callee	sprintf		3961690	0					
ANR	3961721	Identifier	sprintf		3961690	0					
ANR	3961722	ArgumentList	psz		3961690	1					
ANR	3961723	Argument	psz		3961690	0					
ANR	3961724	Identifier	psz		3961690	0					
ANR	3961725	Argument	"""%f"""		3961690	1					
ANR	3961726	PrimaryExpression	"""%f"""		3961690	0					
ANR	3961727	Argument	value . d		3961690	2					
ANR	3961728	MemberAccess	value . d		3961690	0					
ANR	3961729	Identifier	value		3961690	0					
ANR	3961730	Identifier	d		3961690	1					
ANR	3961731	ElseStatement	else		3961690	0					
ANR	3961732	CompoundStatement		10:2:142:166	3961690	0					
ANR	3961733	IdentifierDeclStatement	"const char * pszFmt = """" ;"	1482:2:46228:46252	3961690	0	True				
ANR	3961734	IdentifierDecl	"* pszFmt = """""		3961690	0					
ANR	3961735	IdentifierDeclType	const char *		3961690	0					
ANR	3961736	Identifier	pszFmt		3961690	1					
ANR	3961737	AssignmentExpression	"* pszFmt = """""		3961690	2		=			
ANR	3961738	Identifier	pszFmt		3961690	0					
ANR	3961739	PrimaryExpression	""""""		3961690	1					
ANR	3961740	SwitchStatement	switch ( this -> type & ~WinPerf_CT_UnitsMask )		3961690	1					
ANR	3961741	Condition	this -> type & ~WinPerf_CT_UnitsMask	1483:10:46264:46297	3961690	0	True				
ANR	3961742	BitAndExpression	this -> type & ~WinPerf_CT_UnitsMask		3961690	0		&			
ANR	3961743	PtrMemberAccess	this -> type		3961690	0					
ANR	3961744	Identifier	this		3961690	0					
ANR	3961745	Identifier	type		3961690	1					
ANR	3961746	Identifier	~WinPerf_CT_UnitsMask		3961690	1					
ANR	3961747	CompoundStatement		12:2:216:216	3961690	1					
ANR	3961748	Statement	case	1485:2:46306:46309	3961690	0	True				
ANR	3961749	Statement	WinPerf_CT_Unsigned	1485:7:46311:46329	3961690	1	True				
ANR	3961750	Statement	|	1485:27:46331:46331	3961690	2	True				
ANR	3961751	Label	WinPerf_CT_Hex :	1485:29:46333:46347	3961690	3	True				
ANR	3961752	Identifier	WinPerf_CT_Hex		3961690	0					
ANR	3961753	ExpressionStatement	"pszFmt = ""%I64X"""	1485:49:46353:46369	3961690	4	True				
ANR	3961754	AssignmentExpression	"pszFmt = ""%I64X"""		3961690	0		=			
ANR	3961755	Identifier	pszFmt		3961690	0					
ANR	3961756	PrimaryExpression	"""%I64X"""		3961690	1					
ANR	3961757	BreakStatement	break ;	1485:67:46371:46376	3961690	5	True				
ANR	3961758	Statement	case	1486:2:46380:46383	3961690	6	True				
ANR	3961759	Statement	WinPerf_CT_Signed	1486:7:46385:46401	3961690	7	True				
ANR	3961760	Statement	|	1486:27:46405:46405	3961690	8	True				
ANR	3961761	Label	WinPerf_CT_Decimal :	1486:29:46407:46425	3961690	9	True				
ANR	3961762	Identifier	WinPerf_CT_Decimal		3961690	0					
ANR	3961763	ExpressionStatement	"pszFmt = ""%I64d"""	1486:49:46427:46443	3961690	10	True				
ANR	3961764	AssignmentExpression	"pszFmt = ""%I64d"""		3961690	0		=			
ANR	3961765	Identifier	pszFmt		3961690	0					
ANR	3961766	PrimaryExpression	"""%I64d"""		3961690	1					
ANR	3961767	BreakStatement	break ;	1486:67:46445:46450	3961690	11	True				
ANR	3961768	Statement	case	1487:2:46454:46457	3961690	12	True				
ANR	3961769	Statement	WinPerf_CT_Unsigned	1487:7:46459:46477	3961690	13	True				
ANR	3961770	Statement	|	1487:27:46479:46479	3961690	14	True				
ANR	3961771	Label	WinPerf_CT_Decimal :	1487:29:46481:46499	3961690	15	True				
ANR	3961772	Identifier	WinPerf_CT_Decimal		3961690	0					
ANR	3961773	ExpressionStatement	"pszFmt = ""%I64u"""	1487:49:46501:46517	3961690	16	True				
ANR	3961774	AssignmentExpression	"pszFmt = ""%I64u"""		3961690	0		=			
ANR	3961775	Identifier	pszFmt		3961690	0					
ANR	3961776	PrimaryExpression	"""%I64u"""		3961690	1					
ANR	3961777	BreakStatement	break ;	1487:67:46519:46524	3961690	17	True				
ANR	3961778	Statement	case	1489:2:46529:46532	3961690	18	True				
ANR	3961779	Statement	WinPerf_CT_Unsigned	1489:7:46534:46552	3961690	19	True				
ANR	3961780	Statement	|	1489:27:46554:46554	3961690	20	True				
ANR	3961781	Statement	WinPerf_CT_Hex	1489:29:46556:46569	3961690	21	True				
ANR	3961782	Statement	|	1489:44:46571:46571	3961690	22	True				
ANR	3961783	Label	WinPerf_CT_Short :	1489:46:46573:46589	3961690	23	True				
ANR	3961784	Identifier	WinPerf_CT_Short		3961690	0					
ANR	3961785	ExpressionStatement	"pszFmt = ""%X"""	1489:68:46595:46608	3961690	24	True				
ANR	3961786	AssignmentExpression	"pszFmt = ""%X"""		3961690	0		=			
ANR	3961787	Identifier	pszFmt		3961690	0					
ANR	3961788	PrimaryExpression	"""%X"""		3961690	1					
ANR	3961789	BreakStatement	break ;	1489:83:46610:46615	3961690	25	True				
ANR	3961790	Statement	case	1490:2:46619:46622	3961690	26	True				
ANR	3961791	Statement	WinPerf_CT_Signed	1490:7:46624:46640	3961690	27	True				
ANR	3961792	Statement	|	1490:27:46644:46644	3961690	28	True				
ANR	3961793	Statement	WinPerf_CT_Decimal	1490:29:46646:46663	3961690	29	True				
ANR	3961794	Statement	|	1490:48:46665:46665	3961690	30	True				
ANR	3961795	Label	WinPerf_CT_Short :	1490:50:46667:46683	3961690	31	True				
ANR	3961796	Identifier	WinPerf_CT_Short		3961690	0					
ANR	3961797	ExpressionStatement	"pszFmt = ""%d"""	1490:68:46685:46698	3961690	32	True				
ANR	3961798	AssignmentExpression	"pszFmt = ""%d"""		3961690	0		=			
ANR	3961799	Identifier	pszFmt		3961690	0					
ANR	3961800	PrimaryExpression	"""%d"""		3961690	1					
ANR	3961801	BreakStatement	break ;	1490:83:46700:46705	3961690	33	True				
ANR	3961802	Statement	case	1491:2:46709:46712	3961690	34	True				
ANR	3961803	Statement	WinPerf_CT_Unsigned	1491:7:46714:46732	3961690	35	True				
ANR	3961804	Statement	|	1491:27:46734:46734	3961690	36	True				
ANR	3961805	Statement	WinPerf_CT_Decimal	1491:29:46736:46753	3961690	37	True				
ANR	3961806	Statement	|	1491:48:46755:46755	3961690	38	True				
ANR	3961807	Label	WinPerf_CT_Short :	1491:50:46757:46773	3961690	39	True				
ANR	3961808	Identifier	WinPerf_CT_Short		3961690	0					
ANR	3961809	ExpressionStatement	"pszFmt = ""%u"""	1491:68:46775:46788	3961690	40	True				
ANR	3961810	AssignmentExpression	"pszFmt = ""%u"""		3961690	0		=			
ANR	3961811	Identifier	pszFmt		3961690	0					
ANR	3961812	PrimaryExpression	"""%u"""		3961690	1					
ANR	3961813	BreakStatement	break ;	1491:83:46790:46795	3961690	41	True				
ANR	3961814	ExpressionStatement	"cch = sprintf ( psz , pszFmt , value . ul )"	1493:2:46803:46839	3961690	2	True				
ANR	3961815	AssignmentExpression	"cch = sprintf ( psz , pszFmt , value . ul )"		3961690	0		=			
ANR	3961816	Identifier	cch		3961690	0					
ANR	3961817	CallExpression	"sprintf ( psz , pszFmt , value . ul )"		3961690	1					
ANR	3961818	Callee	sprintf		3961690	0					
ANR	3961819	Identifier	sprintf		3961690	0					
ANR	3961820	ArgumentList	psz		3961690	1					
ANR	3961821	Argument	psz		3961690	0					
ANR	3961822	Identifier	psz		3961690	0					
ANR	3961823	Argument	pszFmt		3961690	1					
ANR	3961824	Identifier	pszFmt		3961690	0					
ANR	3961825	Argument	value . ul		3961690	2					
ANR	3961826	MemberAccess	value . ul		3961690	0					
ANR	3961827	Identifier	value		3961690	0					
ANR	3961828	Identifier	ul		3961690	1					
ANR	3961829	IfStatement	if ( fIncludeUnits )		3961690	3					
ANR	3961830	Condition	fIncludeUnits	1496:5:46851:46863	3961690	0	True				
ANR	3961831	Identifier	fIncludeUnits		3961690	0					
ANR	3961832	CompoundStatement		26:2:785:813	3961690	1					
ANR	3961833	IdentifierDeclStatement	const char * pszUnits = NULL ;	1498:2:46871:46899	3961690	0	True				
ANR	3961834	IdentifierDecl	* pszUnits = NULL		3961690	0					
ANR	3961835	IdentifierDeclType	const char *		3961690	0					
ANR	3961836	Identifier	pszUnits		3961690	1					
ANR	3961837	AssignmentExpression	* pszUnits = NULL		3961690	2		=			
ANR	3961838	Identifier	NULL		3961690	0					
ANR	3961839	Identifier	NULL		3961690	1					
ANR	3961840	SwitchStatement	switch ( this -> type & WinPerf_CT_UnitsMask )		3961690	1					
ANR	3961841	Condition	this -> type & WinPerf_CT_UnitsMask	1499:10:46911:46943	3961690	0	True				
ANR	3961842	BitAndExpression	this -> type & WinPerf_CT_UnitsMask		3961690	0		&			
ANR	3961843	PtrMemberAccess	this -> type		3961690	0					
ANR	3961844	Identifier	this		3961690	0					
ANR	3961845	Identifier	type		3961690	1					
ANR	3961846	Identifier	WinPerf_CT_UnitsMask		3961690	1					
ANR	3961847	CompoundStatement		28:2:862:862	3961690	1					
ANR	3961848	Label	case WinPerf_CT_Seconds :	1501:2:46952:46975	3961690	0	True				
ANR	3961849	Identifier	WinPerf_CT_Seconds		3961690	0					
ANR	3961850	ExpressionStatement	"pszUnits = "" sec"""	1501:29:46979:46996	3961690	1	True				
ANR	3961851	AssignmentExpression	"pszUnits = "" sec"""		3961690	0		=			
ANR	3961852	Identifier	pszUnits		3961690	0					
ANR	3961853	PrimaryExpression	""" sec"""		3961690	1					
ANR	3961854	BreakStatement	break ;	1501:49:46999:47004	3961690	2	True				
ANR	3961855	Label	case WinPerf_CT_PerSecond :	1502:2:47008:47033	3961690	3	True				
ANR	3961856	Identifier	WinPerf_CT_PerSecond		3961690	0					
ANR	3961857	ExpressionStatement	"pszUnits = ""/sec"""	1502:29:47035:47052	3961690	4	True				
ANR	3961858	AssignmentExpression	"pszUnits = ""/sec"""		3961690	0		=			
ANR	3961859	Identifier	pszUnits		3961690	0					
ANR	3961860	PrimaryExpression	"""/sec"""		3961690	1					
ANR	3961861	BreakStatement	break ;	1502:48:47054:47059	3961690	5	True				
ANR	3961862	Label	case WinPerf_CT_Percent :	1503:2:47063:47086	3961690	6	True				
ANR	3961863	Identifier	WinPerf_CT_Percent		3961690	0					
ANR	3961864	ExpressionStatement	"pszUnits = "" %"""	1503:29:47090:47105	3961690	7	True				
ANR	3961865	AssignmentExpression	"pszUnits = "" %"""		3961690	0		=			
ANR	3961866	Identifier	pszUnits		3961690	0					
ANR	3961867	PrimaryExpression	""" %"""		3961690	1					
ANR	3961868	BreakStatement	break ;	1503:48:47109:47114	3961690	8	True				
ANR	3961869	IfStatement	if ( pszUnits )		3961690	2					
ANR	3961870	Condition	pszUnits	1505:6:47126:47133	3961690	0	True				
ANR	3961871	Identifier	pszUnits		3961690	0					
ANR	3961872	CompoundStatement		34:2:1052:1052	3961690	1					
ANR	3961873	ExpressionStatement	"strcpy ( & psz [ cch ] , pszUnits )"	1508:3:47166:47193	3961690	0	True				
ANR	3961874	CallExpression	"strcpy ( & psz [ cch ] , pszUnits )"		3961690	0					
ANR	3961875	Callee	strcpy		3961690	0					
ANR	3961876	Identifier	strcpy		3961690	0					
ANR	3961877	ArgumentList	& psz [ cch ]		3961690	1					
ANR	3961878	Argument	& psz [ cch ]		3961690	0					
ANR	3961879	UnaryOperationExpression	& psz [ cch ]		3961690	0					
ANR	3961880	UnaryOperator	&		3961690	0					
ANR	3961881	ArrayIndexing	psz [ cch ]		3961690	1					
ANR	3961882	Identifier	psz		3961690	0					
ANR	3961883	Identifier	cch		3961690	1					
ANR	3961884	Argument	pszUnits		3961690	1					
ANR	3961885	Identifier	pszUnits		3961690	0					
ANR	3961886	ExpressionStatement	cch += strlen ( pszUnits )	1509:3:47198:47221	3961690	1	True				
ANR	3961887	AssignmentExpression	cch += strlen ( pszUnits )		3961690	0		+=			
ANR	3961888	Identifier	cch		3961690	0					
ANR	3961889	CallExpression	strlen ( pszUnits )		3961690	1					
ANR	3961890	Callee	strlen		3961690	0					
ANR	3961891	Identifier	strlen		3961690	0					
ANR	3961892	ArgumentList	pszUnits		3961690	1					
ANR	3961893	Argument	pszUnits		3961690	0					
ANR	3961894	Identifier	pszUnits		3961690	0					
ANR	3961895	ReturnStatement	return cch ;	1513:1:47232:47242	3961690	4	True				
ANR	3961896	Identifier	cch		3961690	0					
ANR	3961897	ReturnType	int		3961690	1					
ANR	3961898	Identifier	WinPerf_CounterValue :: Print		3961690	2					
ANR	3961899	ParameterList	"char * psz , int cchMax , bool fIncludeUnits"		3961690	3					
ANR	3961900	Parameter	char * psz	1472:32:46035:46044	3961690	0	True				
ANR	3961901	ParameterType	char *		3961690	0					
ANR	3961902	Identifier	psz		3961690	1					
ANR	3961903	Parameter	int cchMax	1472:44:46047:46056	3961690	1	True				
ANR	3961904	ParameterType	int		3961690	0					
ANR	3961905	Identifier	cchMax		3961690	1					
ANR	3961906	Parameter	bool fIncludeUnits	1472:56:46059:46076	3961690	2	True				
ANR	3961907	ParameterType	bool		3961690	0					
ANR	3961908	Identifier	fIncludeUnits		3961690	1					
ANR	3961909	CFGEntryNode	ENTRY		3961690		True				
ANR	3961910	CFGExitNode	EXIT		3961690		True				
ANR	3961911	Symbol	value . d		3961690						
ANR	3961912	Symbol	* psz		3961690						
ANR	3961913	Symbol	NULL		3961690						
ANR	3961914	Symbol	WinPerf_CT_UnitsMask		3961690						
ANR	3961915	Symbol	this		3961690						
ANR	3961916	Symbol	cch		3961690						
ANR	3961917	Symbol	~WinPerf_CT_UnitsMask		3961690						
ANR	3961918	Symbol	value . ul		3961690						
ANR	3961919	Symbol	cchMax		3961690						
ANR	3961920	Symbol	this -> type		3961690						
ANR	3961921	Symbol	WinPerf_CT_Double		3961690						
ANR	3961922	Symbol	sprintf		3961690						
ANR	3961923	Symbol	* this		3961690						
ANR	3961924	Symbol	strlen		3961690						
ANR	3961925	Symbol	psz		3961690						
ANR	3961926	Symbol	fIncludeUnits		3961690						
ANR	3961927	Symbol	pszUnits		3961690						
ANR	3961928	Symbol	value		3961690						
ANR	3961929	Symbol	pszFmt		3961690						
ANR	3961930	Function	free_query_data	1516:0:47247:47418							
ANR	3961931	FunctionDef	free_query_data (WinPerf_QueryResult result)		3961930	0					
ANR	3961932	CompoundStatement		1516:55:47302:47418	3961930	0					
ANR	3961933	IfStatement	if ( result . pdata1 )		3961930	0					
ANR	3961934	Condition	result . pdata1	1517:5:47309:47321	3961930	0	True				
ANR	3961935	MemberAccess	result . pdata1		3961930	0					
ANR	3961936	Identifier	result		3961930	0					
ANR	3961937	Identifier	pdata1		3961930	1					
ANR	3961938	ExpressionStatement	free ( ( void * ) result . pdata1 )	1518:2:47326:47352	3961930	1	True				
ANR	3961939	CallExpression	free ( ( void * ) result . pdata1 )		3961930	0					
ANR	3961940	Callee	free		3961930	0					
ANR	3961941	Identifier	free		3961930	0					
ANR	3961942	ArgumentList	( void * ) result . pdata1		3961930	1					
ANR	3961943	Argument	( void * ) result . pdata1		3961930	0					
ANR	3961944	CastExpression	( void * ) result . pdata1		3961930	0					
ANR	3961945	CastTarget	void *		3961930	0					
ANR	3961946	MemberAccess	result . pdata1		3961930	1					
ANR	3961947	Identifier	result		3961930	0					
ANR	3961948	Identifier	pdata1		3961930	1					
ANR	3961949	IfStatement	if ( result . pdata2 )		3961930	1					
ANR	3961950	Condition	result . pdata2	1519:5:47359:47371	3961930	0	True				
ANR	3961951	MemberAccess	result . pdata2		3961930	0					
ANR	3961952	Identifier	result		3961930	0					
ANR	3961953	Identifier	pdata2		3961930	1					
ANR	3961954	ExpressionStatement	free ( ( void * ) result . pdata2 )	1520:2:47376:47402	3961930	1	True				
ANR	3961955	CallExpression	free ( ( void * ) result . pdata2 )		3961930	0					
ANR	3961956	Callee	free		3961930	0					
ANR	3961957	Identifier	free		3961930	0					
ANR	3961958	ArgumentList	( void * ) result . pdata2		3961930	1					
ANR	3961959	Argument	( void * ) result . pdata2		3961930	0					
ANR	3961960	CastExpression	( void * ) result . pdata2		3961930	0					
ANR	3961961	CastTarget	void *		3961930	0					
ANR	3961962	MemberAccess	result . pdata2		3961930	1					
ANR	3961963	Identifier	result		3961930	0					
ANR	3961964	Identifier	pdata2		3961930	1					
ANR	3961965	ReturnStatement	return true ;	1521:1:47405:47416	3961930	2	True				
ANR	3961966	Identifier	true		3961930	0					
ANR	3961967	ReturnType	static int		3961930	1					
ANR	3961968	Identifier	free_query_data		3961930	2					
ANR	3961969	ParameterList	WinPerf_QueryResult result		3961930	3					
ANR	3961970	Parameter	WinPerf_QueryResult result	1516:27:47274:47299	3961930	0	True				
ANR	3961971	ParameterType	WinPerf_QueryResult		3961930	0					
ANR	3961972	Identifier	result		3961930	1					
ANR	3961973	CFGEntryNode	ENTRY		3961930		True				
ANR	3961974	CFGExitNode	EXIT		3961930		True				
ANR	3961975	Symbol	result		3961930						
ANR	3961976	Symbol	result . pdata1		3961930						
ANR	3961977	Symbol	result . pdata2		3961930						
ANR	3961978	Symbol	true		3961930						
ANR	3961979	Function	release_all_WinPerf_results	1524:0:47421:47591							
ANR	3961980	FunctionDef	release_all_WinPerf_results ()		3961979	0					
ANR	3961981	CompoundStatement		1525:0:47456:47591	3961979	0					
ANR	3961982	IfStatement	if ( rl . pQueries )		3961979	0					
ANR	3961983	Condition	rl . pQueries	1526:8:47466:47476	3961979	0	True				
ANR	3961984	MemberAccess	rl . pQueries		3961979	0					
ANR	3961985	Identifier	rl		3961979	0					
ANR	3961986	Identifier	pQueries		3961979	1					
ANR	3961987	CompoundStatement		3:4:26:26	3961979	1					
ANR	3961988	ExpressionStatement	rl . pQueries -> walk ( free_query_data )	1528:8:47493:47527	3961979	0	True				
ANR	3961989	CallExpression	rl . pQueries -> walk ( free_query_data )		3961979	0					
ANR	3961990	Callee	rl . pQueries -> walk		3961979	0					
ANR	3961991	PtrMemberAccess	rl . pQueries -> walk		3961979	0					
ANR	3961992	MemberAccess	rl . pQueries		3961979	0					
ANR	3961993	Identifier	rl		3961979	0					
ANR	3961994	Identifier	pQueries		3961979	1					
ANR	3961995	Identifier	walk		3961979	1					
ANR	3961996	ArgumentList	free_query_data		3961979	1					
ANR	3961997	Argument	free_query_data		3961979	0					
ANR	3961998	Identifier	free_query_data		3961979	0					
ANR	3961999	ExpressionStatement	free ( rl . pQueries )	1529:8:47537:47555	3961979	1	True				
ANR	3962000	CallExpression	free ( rl . pQueries )		3961979	0					
ANR	3962001	Callee	free		3961979	0					
ANR	3962002	Identifier	free		3961979	0					
ANR	3962003	ArgumentList	rl . pQueries		3961979	1					
ANR	3962004	Argument	rl . pQueries		3961979	0					
ANR	3962005	MemberAccess	rl . pQueries		3961979	0					
ANR	3962006	Identifier	rl		3961979	0					
ANR	3962007	Identifier	pQueries		3961979	1					
ANR	3962008	ExpressionStatement	rl . pQueries = NULL	1530:8:47565:47583	3961979	2	True				
ANR	3962009	AssignmentExpression	rl . pQueries = NULL		3961979	0		=			
ANR	3962010	MemberAccess	rl . pQueries		3961979	0					
ANR	3962011	Identifier	rl		3961979	0					
ANR	3962012	Identifier	pQueries		3961979	1					
ANR	3962013	Identifier	NULL		3961979	1					
ANR	3962014	ReturnType	void		3961979	1					
ANR	3962015	Identifier	release_all_WinPerf_results		3961979	2					
ANR	3962016	ParameterList			3961979	3					
ANR	3962017	CFGEntryNode	ENTRY		3961979		True				
ANR	3962018	CFGExitNode	EXIT		3961979		True				
ANR	3962019	Symbol	NULL		3961979						
ANR	3962020	Symbol	rl . pQueries		3961979						
ANR	3962021	Symbol	rl		3961979						
ANR	3962022	Symbol	free_query_data		3961979						
ANR	3962023	Function	update_windows_performance_result	1534:0:47594:50043							
ANR	3962024	FunctionDef	update_windows_performance_result (WinPerf_QueryResult & result)		3962023	0					
ANR	3962025	CompoundStatement		1535:0:47663:50043	3962023	0					
ANR	3962026	IdentifierDeclStatement	char szKeyID [ 12 ] ;	1536:1:47666:47682	3962023	0	True				
ANR	3962027	IdentifierDecl	szKeyID [ 12 ]		3962023	0					
ANR	3962028	IdentifierDeclType	char [ 12 ]		3962023	0					
ANR	3962029	Identifier	szKeyID		3962023	1					
ANR	3962030	PrimaryExpression	12		3962023	2					
ANR	3962031	ExpressionStatement	"wsprintf ( szKeyID , ""%d"" , result . idObject )"	1537:1:47685:47725	3962023	1	True				
ANR	3962032	CallExpression	"wsprintf ( szKeyID , ""%d"" , result . idObject )"		3962023	0					
ANR	3962033	Callee	wsprintf		3962023	0					
ANR	3962034	Identifier	wsprintf		3962023	0					
ANR	3962035	ArgumentList	szKeyID		3962023	1					
ANR	3962036	Argument	szKeyID		3962023	0					
ANR	3962037	Identifier	szKeyID		3962023	0					
ANR	3962038	Argument	"""%d"""		3962023	1					
ANR	3962039	PrimaryExpression	"""%d"""		3962023	0					
ANR	3962040	Argument	result . idObject		3962023	2					
ANR	3962041	MemberAccess	result . idObject		3962023	0					
ANR	3962042	Identifier	result		3962023	0					
ANR	3962043	Identifier	idObject		3962023	1					
ANR	3962044	IdentifierDeclStatement	DWORD cbData = result . cbAlloc ;	1538:1:47728:47757	3962023	2	True				
ANR	3962045	IdentifierDecl	cbData = result . cbAlloc		3962023	0					
ANR	3962046	IdentifierDeclType	DWORD		3962023	0					
ANR	3962047	Identifier	cbData		3962023	1					
ANR	3962048	AssignmentExpression	cbData = result . cbAlloc		3962023	2		=			
ANR	3962049	Identifier	cbData		3962023	0					
ANR	3962050	MemberAccess	result . cbAlloc		3962023	1					
ANR	3962051	Identifier	result		3962023	0					
ANR	3962052	Identifier	cbAlloc		3962023	1					
ANR	3962053	IdentifierDeclStatement	DWORD vtype = REG_SZ ;	1539:1:47760:47780	3962023	3	True				
ANR	3962054	IdentifierDecl	vtype = REG_SZ		3962023	0					
ANR	3962055	IdentifierDeclType	DWORD		3962023	0					
ANR	3962056	Identifier	vtype		3962023	1					
ANR	3962057	AssignmentExpression	vtype = REG_SZ		3962023	2		=			
ANR	3962058	Identifier	REG_SZ		3962023	0					
ANR	3962059	Identifier	REG_SZ		3962023	1					
ANR	3962060	IdentifierDeclStatement	byte * pdata = ( byte * ) result . pdata1 ;	1543:1:47890:47925	3962023	4	True				
ANR	3962061	IdentifierDecl	* pdata = ( byte * ) result . pdata1		3962023	0					
ANR	3962062	IdentifierDeclType	byte *		3962023	0					
ANR	3962063	Identifier	pdata		3962023	1					
ANR	3962064	AssignmentExpression	* pdata = ( byte * ) result . pdata1		3962023	2		=			
ANR	3962065	Identifier	pdata		3962023	0					
ANR	3962066	CastExpression	( byte * ) result . pdata1		3962023	1					
ANR	3962067	CastTarget	byte *		3962023	0					
ANR	3962068	MemberAccess	result . pdata1		3962023	1					
ANR	3962069	Identifier	result		3962023	0					
ANR	3962070	Identifier	pdata1		3962023	1					
ANR	3962071	ExpressionStatement	result . pdata1 = result . pdata2	1544:1:47928:47957	3962023	5	True				
ANR	3962072	AssignmentExpression	result . pdata1 = result . pdata2		3962023	0		=			
ANR	3962073	MemberAccess	result . pdata1		3962023	0					
ANR	3962074	Identifier	result		3962023	0					
ANR	3962075	Identifier	pdata1		3962023	1					
ANR	3962076	MemberAccess	result . pdata2		3962023	1					
ANR	3962077	Identifier	result		3962023	0					
ANR	3962078	Identifier	pdata2		3962023	1					
ANR	3962079	ExpressionStatement	result . pdata2 = ( const WinPerf_Data * ) pdata	1545:1:47960:48003	3962023	6	True				
ANR	3962080	AssignmentExpression	result . pdata2 = ( const WinPerf_Data * ) pdata		3962023	0		=			
ANR	3962081	MemberAccess	result . pdata2		3962023	0					
ANR	3962082	Identifier	result		3962023	0					
ANR	3962083	Identifier	pdata2		3962023	1					
ANR	3962084	CastExpression	( const WinPerf_Data * ) pdata		3962023	1					
ANR	3962085	CastTarget	const WinPerf_Data *		3962023	0					
ANR	3962086	Identifier	pdata		3962023	1					
ANR	3962087	IdentifierDeclStatement	"LONG lres = RegQueryValueEx ( HKEY_PERFORMANCE_DATA , szKeyID , NULL , & vtype , pdata , & cbData ) ;"	1549:1:48118:48207	3962023	7	True				
ANR	3962088	IdentifierDecl	"lres = RegQueryValueEx ( HKEY_PERFORMANCE_DATA , szKeyID , NULL , & vtype , pdata , & cbData )"		3962023	0					
ANR	3962089	IdentifierDeclType	LONG		3962023	0					
ANR	3962090	Identifier	lres		3962023	1					
ANR	3962091	AssignmentExpression	"lres = RegQueryValueEx ( HKEY_PERFORMANCE_DATA , szKeyID , NULL , & vtype , pdata , & cbData )"		3962023	2		=			
ANR	3962092	Identifier	lres		3962023	0					
ANR	3962093	CallExpression	"RegQueryValueEx ( HKEY_PERFORMANCE_DATA , szKeyID , NULL , & vtype , pdata , & cbData )"		3962023	1					
ANR	3962094	Callee	RegQueryValueEx		3962023	0					
ANR	3962095	Identifier	RegQueryValueEx		3962023	0					
ANR	3962096	ArgumentList	HKEY_PERFORMANCE_DATA		3962023	1					
ANR	3962097	Argument	HKEY_PERFORMANCE_DATA		3962023	0					
ANR	3962098	Identifier	HKEY_PERFORMANCE_DATA		3962023	0					
ANR	3962099	Argument	szKeyID		3962023	1					
ANR	3962100	Identifier	szKeyID		3962023	0					
ANR	3962101	Argument	NULL		3962023	2					
ANR	3962102	Identifier	NULL		3962023	0					
ANR	3962103	Argument	& vtype		3962023	3					
ANR	3962104	UnaryOperationExpression	& vtype		3962023	0					
ANR	3962105	UnaryOperator	&		3962023	0					
ANR	3962106	Identifier	vtype		3962023	1					
ANR	3962107	Argument	pdata		3962023	4					
ANR	3962108	Identifier	pdata		3962023	0					
ANR	3962109	Argument	& cbData		3962023	5					
ANR	3962110	UnaryOperationExpression	& cbData		3962023	0					
ANR	3962111	UnaryOperator	&		3962023	0					
ANR	3962112	Identifier	cbData		3962023	1					
ANR	3962113	IfStatement	if ( ERROR_SUCCESS == lres )		3962023	8					
ANR	3962114	Condition	ERROR_SUCCESS == lres	1550:5:48214:48234	3962023	0	True				
ANR	3962115	EqualityExpression	ERROR_SUCCESS == lres		3962023	0		==			
ANR	3962116	Identifier	ERROR_SUCCESS		3962023	0					
ANR	3962117	Identifier	lres		3962023	1					
ANR	3962118	CompoundStatement		17:1:574:574	3962023	1					
ANR	3962119	ReturnStatement	return true ;	1552:2:48242:48253	3962023	0	True				
ANR	3962120	Identifier	true		3962023	0					
ANR	3962121	IfStatement	if ( ERROR_SUCCESS != lres && ERROR_MORE_DATA != lres )		3962023	9					
ANR	3962122	Condition	ERROR_SUCCESS != lres && ERROR_MORE_DATA != lres	1555:5:48264:48311	3962023	0	True				
ANR	3962123	AndExpression	ERROR_SUCCESS != lres && ERROR_MORE_DATA != lres		3962023	0		&&			
ANR	3962124	EqualityExpression	ERROR_SUCCESS != lres		3962023	0		!=			
ANR	3962125	Identifier	ERROR_SUCCESS		3962023	0					
ANR	3962126	Identifier	lres		3962023	1					
ANR	3962127	EqualityExpression	ERROR_MORE_DATA != lres		3962023	1		!=			
ANR	3962128	Identifier	ERROR_MORE_DATA		3962023	0					
ANR	3962129	Identifier	lres		3962023	1					
ANR	3962130	CompoundStatement		22:1:651:651	3962023	1					
ANR	3962131	IfStatement	if ( ERROR_FILE_NOT_FOUND == lres )		3962023	0					
ANR	3962132	Condition	ERROR_FILE_NOT_FOUND == lres	1557:6:48323:48350	3962023	0	True				
ANR	3962133	EqualityExpression	ERROR_FILE_NOT_FOUND == lres		3962023	0		==			
ANR	3962134	Identifier	ERROR_FILE_NOT_FOUND		3962023	0					
ANR	3962135	Identifier	lres		3962023	1					
ANR	3962136	CompoundStatement		24:2:691:691	3962023	1					
ANR	3962137	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""The Performance Key \\""HKPD\\\\%s\\"" does not exist\\n"" , szKeyID )"	1560:3:48389:48483	3962023	0	True				
ANR	3962138	CallExpression	"dprintf ( D_FULLDEBUG , ""The Performance Key \\""HKPD\\\\%s\\"" does not exist\\n"" , szKeyID )"		3962023	0					
ANR	3962139	Callee	dprintf		3962023	0					
ANR	3962140	Identifier	dprintf		3962023	0					
ANR	3962141	ArgumentList	D_FULLDEBUG		3962023	1					
ANR	3962142	Argument	D_FULLDEBUG		3962023	0					
ANR	3962143	Identifier	D_FULLDEBUG		3962023	0					
ANR	3962144	Argument	"""The Performance Key \\""HKPD\\\\%s\\"" does not exist\\n"""		3962023	1					
ANR	3962145	PrimaryExpression	"""The Performance Key \\""HKPD\\\\%s\\"" does not exist\\n"""		3962023	0					
ANR	3962146	Argument	szKeyID		3962023	2					
ANR	3962147	Identifier	szKeyID		3962023	0					
ANR	3962148	ElseStatement	else		3962023	0					
ANR	3962149	CompoundStatement		33:3:903:923	3962023	0					
ANR	3962150	IdentifierDeclStatement	char szMsg [ MAX_PATH ] ;	1567:3:48567:48587	3962023	0	True				
ANR	3962151	IdentifierDecl	szMsg [ MAX_PATH ]		3962023	0					
ANR	3962152	IdentifierDeclType	char [ MAX_PATH ]		3962023	0					
ANR	3962153	Identifier	szMsg		3962023	1					
ANR	3962154	Identifier	MAX_PATH		3962023	2					
ANR	3962155	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to read Performance Key \\""HKPD\\\\%s\\""\\nReason: %s\\n"" , szKeyID , GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) ) )"	1568:3:48592:48759	3962023	1	True				
ANR	3962156	CallExpression	"dprintf ( D_ALWAYS , ""Failed to read Performance Key \\""HKPD\\\\%s\\""\\nReason: %s\\n"" , szKeyID , GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) ) )"		3962023	0					
ANR	3962157	Callee	dprintf		3962023	0					
ANR	3962158	Identifier	dprintf		3962023	0					
ANR	3962159	ArgumentList	D_ALWAYS		3962023	1					
ANR	3962160	Argument	D_ALWAYS		3962023	0					
ANR	3962161	Identifier	D_ALWAYS		3962023	0					
ANR	3962162	Argument	"""Failed to read Performance Key \\""HKPD\\\\%s\\""\\nReason: %s\\n"""		3962023	1					
ANR	3962163	PrimaryExpression	"""Failed to read Performance Key \\""HKPD\\\\%s\\""\\nReason: %s\\n"""		3962023	0					
ANR	3962164	Argument	szKeyID		3962023	2					
ANR	3962165	Identifier	szKeyID		3962023	0					
ANR	3962166	Argument	"GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) )"		3962023	3					
ANR	3962167	CallExpression	"GetLastErrMessage ( GetLastError ( ) , szMsg , NUM_ELEMENTS ( szMsg ) )"		3962023	0					
ANR	3962168	Callee	GetLastErrMessage		3962023	0					
ANR	3962169	Identifier	GetLastErrMessage		3962023	0					
ANR	3962170	ArgumentList	GetLastError ( )		3962023	1					
ANR	3962171	Argument	GetLastError ( )		3962023	0					
ANR	3962172	CallExpression	GetLastError ( )		3962023	0					
ANR	3962173	Callee	GetLastError		3962023	0					
ANR	3962174	Identifier	GetLastError		3962023	0					
ANR	3962175	ArgumentList			3962023	1					
ANR	3962176	Argument	szMsg		3962023	1					
ANR	3962177	Identifier	szMsg		3962023	0					
ANR	3962178	Argument	NUM_ELEMENTS ( szMsg )		3962023	2					
ANR	3962179	CallExpression	NUM_ELEMENTS ( szMsg )		3962023	0					
ANR	3962180	Callee	NUM_ELEMENTS		3962023	0					
ANR	3962181	Identifier	NUM_ELEMENTS		3962023	0					
ANR	3962182	ArgumentList	szMsg		3962023	1					
ANR	3962183	Argument	szMsg		3962023	0					
ANR	3962184	Identifier	szMsg		3962023	0					
ANR	3962185	ReturnStatement	return false ;	1573:2:48767:48779	3962023	1	True				
ANR	3962186	Identifier	false		3962023	0					
ANR	3962187	IdentifierDeclStatement	const byte * pdataOld = ( const byte * ) result . pdata1 ;	1577:1:48860:48911	3962023	10	True				
ANR	3962188	IdentifierDecl	* pdataOld = ( const byte * ) result . pdata1		3962023	0					
ANR	3962189	IdentifierDeclType	const byte *		3962023	0					
ANR	3962190	Identifier	pdataOld		3962023	1					
ANR	3962191	AssignmentExpression	* pdataOld = ( const byte * ) result . pdata1		3962023	2		=			
ANR	3962192	Identifier	pdataOld		3962023	0					
ANR	3962193	CastExpression	( const byte * ) result . pdata1		3962023	1					
ANR	3962194	CastTarget	const byte *		3962023	0					
ANR	3962195	MemberAccess	result . pdata1		3962023	1					
ANR	3962196	Identifier	result		3962023	0					
ANR	3962197	Identifier	pdata1		3962023	1					
ANR	3962198	ExpressionStatement	result . pdata1 = NULL	1578:1:48914:48934	3962023	11	True				
ANR	3962199	AssignmentExpression	result . pdata1 = NULL		3962023	0		=			
ANR	3962200	MemberAccess	result . pdata1		3962023	0					
ANR	3962201	Identifier	result		3962023	0					
ANR	3962202	Identifier	pdata1		3962023	1					
ANR	3962203	Identifier	NULL		3962023	1					
ANR	3962204	ExpressionStatement	result . pdata2 = NULL	1579:1:48937:48957	3962023	12	True				
ANR	3962205	AssignmentExpression	result . pdata2 = NULL		3962023	0		=			
ANR	3962206	MemberAccess	result . pdata2		3962023	0					
ANR	3962207	Identifier	result		3962023	0					
ANR	3962208	Identifier	pdata2		3962023	1					
ANR	3962209	Identifier	NULL		3962023	1					
ANR	3962210	IdentifierDeclStatement	DWORD cbAlloc = result . cbAlloc ;	1583:1:49076:49107	3962023	13	True				
ANR	3962211	IdentifierDecl	cbAlloc = result . cbAlloc		3962023	0					
ANR	3962212	IdentifierDeclType	DWORD		3962023	0					
ANR	3962213	Identifier	cbAlloc		3962023	1					
ANR	3962214	AssignmentExpression	cbAlloc = result . cbAlloc		3962023	2		=			
ANR	3962215	Identifier	cbAlloc		3962023	0					
ANR	3962216	MemberAccess	result . cbAlloc		3962023	1					
ANR	3962217	Identifier	result		3962023	0					
ANR	3962218	Identifier	cbAlloc		3962023	1					
ANR	3962219	DoStatement	do		3962023	14					
ANR	3962220	CompoundStatement		51:1:1451:1451	3962023	0					
ANR	3962221	IfStatement	if ( cbAlloc < 0x10000 )		3962023	0					
ANR	3962222	Condition	cbAlloc < 0x10000	1586:6:49123:49139	3962023	0	True				
ANR	3962223	RelationalExpression	cbAlloc < 0x10000		3962023	0		<			
ANR	3962224	Identifier	cbAlloc		3962023	0					
ANR	3962225	PrimaryExpression	0x10000		3962023	1					
ANR	3962226	ExpressionStatement	cbAlloc *= 2	1586:25:49142:49154	3962023	1	True				
ANR	3962227	AssignmentExpression	cbAlloc *= 2		3962023	0		*=			
ANR	3962228	Identifier	cbAlloc		3962023	0					
ANR	3962229	PrimaryExpression	2		3962023	1					
ANR	3962230	ExpressionStatement	cbAlloc += ( cbAlloc > 0x200 ) ? cbAlloc : 0x200	1587:8:49164:49210	3962023	1	True				
ANR	3962231	AssignmentExpression	cbAlloc += ( cbAlloc > 0x200 ) ? cbAlloc : 0x200		3962023	0		+=			
ANR	3962232	Identifier	cbAlloc		3962023	0					
ANR	3962233	ConditionalExpression	( cbAlloc > 0x200 ) ? cbAlloc : 0x200		3962023	1					
ANR	3962234	Condition	cbAlloc > 0x200		3962023	0					
ANR	3962235	RelationalExpression	cbAlloc > 0x200		3962023	0		>			
ANR	3962236	Identifier	cbAlloc		3962023	0					
ANR	3962237	PrimaryExpression	0x200		3962023	1					
ANR	3962238	Identifier	cbAlloc		3962023	1					
ANR	3962239	PrimaryExpression	0x200		3962023	2					
ANR	3962240	IfStatement	if ( pdata )		3962023	2					
ANR	3962241	Condition	pdata	1589:6:49219:49223	3962023	0	True				
ANR	3962242	Identifier	pdata		3962023	0					
ANR	3962243	ExpressionStatement	free ( pdata )	1590:3:49230:49241	3962023	1	True				
ANR	3962244	CallExpression	free ( pdata )		3962023	0					
ANR	3962245	Callee	free		3962023	0					
ANR	3962246	Identifier	free		3962023	0					
ANR	3962247	ArgumentList	pdata		3962023	1					
ANR	3962248	Argument	pdata		3962023	0					
ANR	3962249	Identifier	pdata		3962023	0					
ANR	3962250	ExpressionStatement	pdata = ( byte * ) malloc ( cbAlloc )	1591:2:49245:49275	3962023	3	True				
ANR	3962251	AssignmentExpression	pdata = ( byte * ) malloc ( cbAlloc )		3962023	0		=			
ANR	3962252	Identifier	pdata		3962023	0					
ANR	3962253	CastExpression	( byte * ) malloc ( cbAlloc )		3962023	1					
ANR	3962254	CastTarget	byte *		3962023	0					
ANR	3962255	CallExpression	malloc ( cbAlloc )		3962023	1					
ANR	3962256	Callee	malloc		3962023	0					
ANR	3962257	Identifier	malloc		3962023	0					
ANR	3962258	ArgumentList	cbAlloc		3962023	1					
ANR	3962259	Argument	cbAlloc		3962023	0					
ANR	3962260	Identifier	cbAlloc		3962023	0					
ANR	3962261	IfStatement	if ( ! pdata )		3962023	4					
ANR	3962262	Condition	! pdata	1592:7:49284:49290	3962023	0	True				
ANR	3962263	UnaryOperationExpression	! pdata		3962023	0					
ANR	3962264	UnaryOperator	!		3962023	0					
ANR	3962265	Identifier	pdata		3962023	1					
ANR	3962266	BreakStatement	break ;	1593:3:49296:49301	3962023	1	True				
ANR	3962267	ExpressionStatement	cbData = cbAlloc	1597:2:49385:49401	3962023	5	True				
ANR	3962268	AssignmentExpression	cbData = cbAlloc		3962023	0		=			
ANR	3962269	Identifier	cbData		3962023	0					
ANR	3962270	Identifier	cbAlloc		3962023	1					
ANR	3962271	ExpressionStatement	"lres = RegQueryValueEx ( HKEY_PERFORMANCE_DATA , szKeyID , NULL , & vtype , pdata , & cbData )"	1598:2:49405:49489	3962023	6	True				
ANR	3962272	AssignmentExpression	"lres = RegQueryValueEx ( HKEY_PERFORMANCE_DATA , szKeyID , NULL , & vtype , pdata , & cbData )"		3962023	0		=			
ANR	3962273	Identifier	lres		3962023	0					
ANR	3962274	CallExpression	"RegQueryValueEx ( HKEY_PERFORMANCE_DATA , szKeyID , NULL , & vtype , pdata , & cbData )"		3962023	1					
ANR	3962275	Callee	RegQueryValueEx		3962023	0					
ANR	3962276	Identifier	RegQueryValueEx		3962023	0					
ANR	3962277	ArgumentList	HKEY_PERFORMANCE_DATA		3962023	1					
ANR	3962278	Argument	HKEY_PERFORMANCE_DATA		3962023	0					
ANR	3962279	Identifier	HKEY_PERFORMANCE_DATA		3962023	0					
ANR	3962280	Argument	szKeyID		3962023	1					
ANR	3962281	Identifier	szKeyID		3962023	0					
ANR	3962282	Argument	NULL		3962023	2					
ANR	3962283	Identifier	NULL		3962023	0					
ANR	3962284	Argument	& vtype		3962023	3					
ANR	3962285	UnaryOperationExpression	& vtype		3962023	0					
ANR	3962286	UnaryOperator	&		3962023	0					
ANR	3962287	Identifier	vtype		3962023	1					
ANR	3962288	Argument	pdata		3962023	4					
ANR	3962289	Identifier	pdata		3962023	0					
ANR	3962290	Argument	& cbData		3962023	5					
ANR	3962291	UnaryOperationExpression	& cbData		3962023	0					
ANR	3962292	UnaryOperator	&		3962023	0					
ANR	3962293	Identifier	cbData		3962023	1					
ANR	3962294	Condition	lres == ERROR_MORE_DATA	1600:10:49502:49524	3962023	1	True				
ANR	3962295	EqualityExpression	lres == ERROR_MORE_DATA		3962023	0		==			
ANR	3962296	Identifier	lres		3962023	0					
ANR	3962297	Identifier	ERROR_MORE_DATA		3962023	1					
ANR	3962298	IfStatement	if ( lres != ERROR_SUCCESS )		3962023	15					
ANR	3962299	Condition	lres != ERROR_SUCCESS	1602:5:49534:49554	3962023	0	True				
ANR	3962300	EqualityExpression	lres != ERROR_SUCCESS		3962023	0		!=			
ANR	3962301	Identifier	lres		3962023	0					
ANR	3962302	Identifier	ERROR_SUCCESS		3962023	1					
ANR	3962303	CompoundStatement		69:1:1894:1894	3962023	1					
ANR	3962304	IfStatement	if ( pdataOld )		3962023	0					
ANR	3962305	Condition	pdataOld	1604:6:49566:49573	3962023	0	True				
ANR	3962306	Identifier	pdataOld		3962023	0					
ANR	3962307	ExpressionStatement	free ( ( void * ) pdataOld )	1604:16:49576:49597	3962023	1	True				
ANR	3962308	CallExpression	free ( ( void * ) pdataOld )		3962023	0					
ANR	3962309	Callee	free		3962023	0					
ANR	3962310	Identifier	free		3962023	0					
ANR	3962311	ArgumentList	( void * ) pdataOld		3962023	1					
ANR	3962312	Argument	( void * ) pdataOld		3962023	0					
ANR	3962313	CastExpression	( void * ) pdataOld		3962023	0					
ANR	3962314	CastTarget	void *		3962023	0					
ANR	3962315	Identifier	pdataOld		3962023	1					
ANR	3962316	IfStatement	if ( pdata )		3962023	1					
ANR	3962317	Condition	pdata	1605:6:49605:49609	3962023	0	True				
ANR	3962318	Identifier	pdata		3962023	0					
ANR	3962319	ExpressionStatement	free ( pdata )	1605:13:49612:49623	3962023	1	True				
ANR	3962320	CallExpression	free ( pdata )		3962023	0					
ANR	3962321	Callee	free		3962023	0					
ANR	3962322	Identifier	free		3962023	0					
ANR	3962323	ArgumentList	pdata		3962023	1					
ANR	3962324	Argument	pdata		3962023	0					
ANR	3962325	Identifier	pdata		3962023	0					
ANR	3962326	ReturnStatement	return false ;	1606:2:49627:49639	3962023	2	True				
ANR	3962327	Identifier	false		3962023	0					
ANR	3962328	IfStatement	if ( pdataOld )		3962023	16					
ANR	3962329	Condition	pdataOld	1611:5:49728:49735	3962023	0	True				
ANR	3962330	Identifier	pdataOld		3962023	0					
ANR	3962331	CompoundStatement		79:2:2079:2117	3962023	1					
ANR	3962332	IdentifierDeclStatement	byte * pdataT = ( byte * ) malloc ( cbAlloc ) ;	1613:2:49743:49781	3962023	0	True				
ANR	3962333	IdentifierDecl	* pdataT = ( byte * ) malloc ( cbAlloc )		3962023	0					
ANR	3962334	IdentifierDeclType	byte *		3962023	0					
ANR	3962335	Identifier	pdataT		3962023	1					
ANR	3962336	AssignmentExpression	* pdataT = ( byte * ) malloc ( cbAlloc )		3962023	2		=			
ANR	3962337	Identifier	pdataT		3962023	0					
ANR	3962338	CastExpression	( byte * ) malloc ( cbAlloc )		3962023	1					
ANR	3962339	CastTarget	byte *		3962023	0					
ANR	3962340	CallExpression	malloc ( cbAlloc )		3962023	1					
ANR	3962341	Callee	malloc		3962023	0					
ANR	3962342	Identifier	malloc		3962023	0					
ANR	3962343	ArgumentList	cbAlloc		3962023	1					
ANR	3962344	Argument	cbAlloc		3962023	0					
ANR	3962345	Identifier	cbAlloc		3962023	0					
ANR	3962346	IfStatement	if ( pdataT )		3962023	1					
ANR	3962347	Condition	pdataT	1614:6:49789:49794	3962023	0	True				
ANR	3962348	Identifier	pdataT		3962023	0					
ANR	3962349	CompoundStatement		81:2:2135:2135	3962023	1					
ANR	3962350	ExpressionStatement	"CopyMemory ( pdataT , pdataOld , result . cbAlloc )"	1616:3:49804:49848	3962023	0	True				
ANR	3962351	CallExpression	"CopyMemory ( pdataT , pdataOld , result . cbAlloc )"		3962023	0					
ANR	3962352	Callee	CopyMemory		3962023	0					
ANR	3962353	Identifier	CopyMemory		3962023	0					
ANR	3962354	ArgumentList	pdataT		3962023	1					
ANR	3962355	Argument	pdataT		3962023	0					
ANR	3962356	Identifier	pdataT		3962023	0					
ANR	3962357	Argument	pdataOld		3962023	1					
ANR	3962358	Identifier	pdataOld		3962023	0					
ANR	3962359	Argument	result . cbAlloc		3962023	2					
ANR	3962360	MemberAccess	result . cbAlloc		3962023	0					
ANR	3962361	Identifier	result		3962023	0					
ANR	3962362	Identifier	cbAlloc		3962023	1					
ANR	3962363	ExpressionStatement	free ( ( void * ) pdataOld )	1617:3:49853:49875	3962023	1	True				
ANR	3962364	CallExpression	free ( ( void * ) pdataOld )		3962023	0					
ANR	3962365	Callee	free		3962023	0					
ANR	3962366	Identifier	free		3962023	0					
ANR	3962367	ArgumentList	( void * ) pdataOld		3962023	1					
ANR	3962368	Argument	( void * ) pdataOld		3962023	0					
ANR	3962369	CastExpression	( void * ) pdataOld		3962023	0					
ANR	3962370	CastTarget	void *		3962023	0					
ANR	3962371	Identifier	pdataOld		3962023	1					
ANR	3962372	ExpressionStatement	pdataOld = pdataT	1618:3:49880:49897	3962023	2	True				
ANR	3962373	AssignmentExpression	pdataOld = pdataT		3962023	0		=			
ANR	3962374	Identifier	pdataOld		3962023	0					
ANR	3962375	Identifier	pdataT		3962023	1					
ANR	3962376	ExpressionStatement	result . cbAlloc = cbAlloc	1622:1:49908:49932	3962023	17	True				
ANR	3962377	AssignmentExpression	result . cbAlloc = cbAlloc		3962023	0		=			
ANR	3962378	MemberAccess	result . cbAlloc		3962023	0					
ANR	3962379	Identifier	result		3962023	0					
ANR	3962380	Identifier	cbAlloc		3962023	1					
ANR	3962381	Identifier	cbAlloc		3962023	1					
ANR	3962382	ExpressionStatement	result . pdata1 = ( const WinPerf_Data * ) pdataOld	1623:1:49935:49981	3962023	18	True				
ANR	3962383	AssignmentExpression	result . pdata1 = ( const WinPerf_Data * ) pdataOld		3962023	0		=			
ANR	3962384	MemberAccess	result . pdata1		3962023	0					
ANR	3962385	Identifier	result		3962023	0					
ANR	3962386	Identifier	pdata1		3962023	1					
ANR	3962387	CastExpression	( const WinPerf_Data * ) pdataOld		3962023	1					
ANR	3962388	CastTarget	const WinPerf_Data *		3962023	0					
ANR	3962389	Identifier	pdataOld		3962023	1					
ANR	3962390	ExpressionStatement	result . pdata2 = ( const WinPerf_Data * ) pdata	1624:1:49984:50027	3962023	19	True				
ANR	3962391	AssignmentExpression	result . pdata2 = ( const WinPerf_Data * ) pdata		3962023	0		=			
ANR	3962392	MemberAccess	result . pdata2		3962023	0					
ANR	3962393	Identifier	result		3962023	0					
ANR	3962394	Identifier	pdata2		3962023	1					
ANR	3962395	CastExpression	( const WinPerf_Data * ) pdata		3962023	1					
ANR	3962396	CastTarget	const WinPerf_Data *		3962023	0					
ANR	3962397	Identifier	pdata		3962023	1					
ANR	3962398	ReturnStatement	return true ;	1625:1:50030:50041	3962023	20	True				
ANR	3962399	Identifier	true		3962023	0					
ANR	3962400	ReturnType	bool		3962023	1					
ANR	3962401	Identifier	update_windows_performance_result		3962023	2					
ANR	3962402	ParameterList	WinPerf_QueryResult & result		3962023	3					
ANR	3962403	Parameter	WinPerf_QueryResult & result	1534:39:47633:47660	3962023	0	True				
ANR	3962404	ParameterType	WinPerf_QueryResult &		3962023	0					
ANR	3962405	Identifier	result		3962023	1					
ANR	3962406	CFGEntryNode	ENTRY		3962023		True				
ANR	3962407	CFGExitNode	EXIT		3962023		True				
ANR	3962408	Symbol	GetLastErrMessage		3962023						
ANR	3962409	Symbol	NUM_ELEMENTS		3962023						
ANR	3962410	Symbol	pdata		3962023						
ANR	3962411	Symbol	vtype		3962023						
ANR	3962412	Symbol	lres		3962023						
ANR	3962413	Symbol	REG_SZ		3962023						
ANR	3962414	Symbol	& cbData		3962023						
ANR	3962415	Symbol	& vtype		3962023						
ANR	3962416	Symbol	result		3962023						
ANR	3962417	Symbol	ERROR_SUCCESS		3962023						
ANR	3962418	Symbol	RegQueryValueEx		3962023						
ANR	3962419	Symbol	ERROR_FILE_NOT_FOUND		3962023						
ANR	3962420	Symbol	szMsg		3962023						
ANR	3962421	Symbol	ERROR_MORE_DATA		3962023						
ANR	3962422	Symbol	cbData		3962023						
ANR	3962423	Symbol	cbAlloc		3962023						
ANR	3962424	Symbol	malloc		3962023						
ANR	3962425	Symbol	NULL		3962023						
ANR	3962426	Symbol	result . idObject		3962023						
ANR	3962427	Symbol	pdataOld		3962023						
ANR	3962428	Symbol	result . cbAlloc		3962023						
ANR	3962429	Symbol	D_ALWAYS		3962023						
ANR	3962430	Symbol	false		3962023						
ANR	3962431	Symbol	D_FULLDEBUG		3962023						
ANR	3962432	Symbol	result . pdata1		3962023						
ANR	3962433	Symbol	result . pdata2		3962023						
ANR	3962434	Symbol	HKEY_PERFORMANCE_DATA		3962023						
ANR	3962435	Symbol	GetLastError		3962023						
ANR	3962436	Symbol	pdataT		3962023						
ANR	3962437	Symbol	true		3962023						
ANR	3962438	Symbol	szKeyID		3962023						
ANR	3962439	Function	update_all_WinPerf_results	1628:0:50046:50370							
ANR	3962440	FunctionDef	update_all_WinPerf_results ()		3962439	0					
ANR	3962441	CompoundStatement		1629:0:50080:50370	3962439	0					
ANR	3962442	IfStatement	if ( rl . pQueries )		3962439	0					
ANR	3962443	Condition	rl . pQueries	1630:8:50090:50100	3962439	0	True				
ANR	3962444	MemberAccess	rl . pQueries		3962439	0					
ANR	3962445	Identifier	rl		3962439	0					
ANR	3962446	Identifier	pQueries		3962439	1					
ANR	3962447	CompoundStatement		5:8:76:102	3962439	1					
ANR	3962448	ExpressionStatement	rl . pQueries -> startIterations ( )	1632:8:50117:50147	3962439	0	True				
ANR	3962449	CallExpression	rl . pQueries -> startIterations ( )		3962439	0					
ANR	3962450	Callee	rl . pQueries -> startIterations		3962439	0					
ANR	3962451	PtrMemberAccess	rl . pQueries -> startIterations		3962439	0					
ANR	3962452	MemberAccess	rl . pQueries		3962439	0					
ANR	3962453	Identifier	rl		3962439	0					
ANR	3962454	Identifier	pQueries		3962439	1					
ANR	3962455	Identifier	startIterations		3962439	1					
ANR	3962456	ArgumentList			3962439	1					
ANR	3962457	IdentifierDeclStatement	WinPerf_QueryResult result ;	1633:8:50157:50183	3962439	1	True				
ANR	3962458	IdentifierDecl	result		3962439	0					
ANR	3962459	IdentifierDeclType	WinPerf_QueryResult		3962439	0					
ANR	3962460	Identifier	result		3962439	1					
ANR	3962461	WhileStatement	while ( rl . pQueries -> iterate ( result ) )		3962439	2					
ANR	3962462	Condition	rl . pQueries -> iterate ( result )	1634:15:50200:50227	3962439	0	True				
ANR	3962463	CallExpression	rl . pQueries -> iterate ( result )		3962439	0					
ANR	3962464	Callee	rl . pQueries -> iterate		3962439	0					
ANR	3962465	PtrMemberAccess	rl . pQueries -> iterate		3962439	0					
ANR	3962466	MemberAccess	rl . pQueries		3962439	0					
ANR	3962467	Identifier	rl		3962439	0					
ANR	3962468	Identifier	pQueries		3962439	1					
ANR	3962469	Identifier	iterate		3962439	1					
ANR	3962470	ArgumentList	result		3962439	1					
ANR	3962471	Argument	result		3962439	0					
ANR	3962472	Identifier	result		3962439	0					
ANR	3962473	CompoundStatement		7:8:158:158	3962439	1					
ANR	3962474	ExpressionStatement	update_windows_performance_result ( result )	1636:12:50253:50294	3962439	0	True				
ANR	3962475	CallExpression	update_windows_performance_result ( result )		3962439	0					
ANR	3962476	Callee	update_windows_performance_result		3962439	0					
ANR	3962477	Identifier	update_windows_performance_result		3962439	0					
ANR	3962478	ArgumentList	result		3962439	1					
ANR	3962479	Argument	result		3962439	0					
ANR	3962480	Identifier	result		3962439	0					
ANR	3962481	ExpressionStatement	"rl . pQueries -> insert ( result . idObject , result )"	1637:12:50308:50352	3962439	1	True				
ANR	3962482	CallExpression	"rl . pQueries -> insert ( result . idObject , result )"		3962439	0					
ANR	3962483	Callee	rl . pQueries -> insert		3962439	0					
ANR	3962484	PtrMemberAccess	rl . pQueries -> insert		3962439	0					
ANR	3962485	MemberAccess	rl . pQueries		3962439	0					
ANR	3962486	Identifier	rl		3962439	0					
ANR	3962487	Identifier	pQueries		3962439	1					
ANR	3962488	Identifier	insert		3962439	1					
ANR	3962489	ArgumentList	result . idObject		3962439	1					
ANR	3962490	Argument	result . idObject		3962439	0					
ANR	3962491	MemberAccess	result . idObject		3962439	0					
ANR	3962492	Identifier	result		3962439	0					
ANR	3962493	Identifier	idObject		3962439	1					
ANR	3962494	Argument	result		3962439	1					
ANR	3962495	Identifier	result		3962439	0					
ANR	3962496	ReturnType	void		3962439	1					
ANR	3962497	Identifier	update_all_WinPerf_results		3962439	2					
ANR	3962498	ParameterList			3962439	3					
ANR	3962499	CFGEntryNode	ENTRY		3962439		True				
ANR	3962500	CFGExitNode	EXIT		3962439		True				
ANR	3962501	Symbol	result		3962439						
ANR	3962502	Symbol	* rl		3962439						
ANR	3962503	Symbol	result . idObject		3962439						
ANR	3962504	Symbol	rl . pQueries		3962439						
ANR	3962505	Symbol	* rl . pQueries		3962439						
ANR	3962506	Symbol	rl		3962439						
ANR	3962507	Symbol	rl . pQueries -> iterate		3962439						
ANR	3962508	Function	update_windows_performance_value	1642:0:50373:53655							
ANR	3962509	FunctionDef	"update_windows_performance_value (const WinPerf_QueryResult & result , const WinPerf_Query & query , AttribValue * pav)"		3962508	0					
ANR	3962510	CompoundStatement		1646:0:50507:53655	3962508	0					
ANR	3962511	IfStatement	if ( ! pav )		3962508	0					
ANR	3962512	Condition	! pav	1647:6:50515:50519	3962508	0	True				
ANR	3962513	UnaryOperationExpression	! pav		3962508	0					
ANR	3962514	UnaryOperator	!		3962508	0					
ANR	3962515	Identifier	pav		3962508	1					
ANR	3962516	ReturnStatement	return false ;	1648:2:50524:50536	3962508	1	True				
ANR	3962517	Identifier	false		3962508	0					
ANR	3962518	IdentifierDeclStatement	const WinPerf_Data * pHead = result . pdata2 ;	1650:1:50540:50582	3962508	1	True				
ANR	3962519	IdentifierDecl	* pHead = result . pdata2		3962508	0					
ANR	3962520	IdentifierDeclType	const WinPerf_Data *		3962508	0					
ANR	3962521	Identifier	pHead		3962508	1					
ANR	3962522	AssignmentExpression	* pHead = result . pdata2		3962508	2		=			
ANR	3962523	Identifier	pHead		3962508	0					
ANR	3962524	MemberAccess	result . pdata2		3962508	1					
ANR	3962525	Identifier	result		3962508	0					
ANR	3962526	Identifier	pdata2		3962508	1					
ANR	3962527	IdentifierDeclStatement	const WinPerf_Object * pObj = pHead -> Find ( query . idKey ) ;	1651:1:50585:50639	3962508	2	True				
ANR	3962528	IdentifierDecl	* pObj = pHead -> Find ( query . idKey )		3962508	0					
ANR	3962529	IdentifierDeclType	const WinPerf_Object *		3962508	0					
ANR	3962530	Identifier	pObj		3962508	1					
ANR	3962531	AssignmentExpression	* pObj = pHead -> Find ( query . idKey )		3962508	2		=			
ANR	3962532	Identifier	pObj		3962508	0					
ANR	3962533	CallExpression	pHead -> Find ( query . idKey )		3962508	1					
ANR	3962534	Callee	pHead -> Find		3962508	0					
ANR	3962535	PtrMemberAccess	pHead -> Find		3962508	0					
ANR	3962536	Identifier	pHead		3962508	0					
ANR	3962537	Identifier	Find		3962508	1					
ANR	3962538	ArgumentList	query . idKey		3962508	1					
ANR	3962539	Argument	query . idKey		3962508	0					
ANR	3962540	MemberAccess	query . idKey		3962508	0					
ANR	3962541	Identifier	query		3962508	0					
ANR	3962542	Identifier	idKey		3962508	1					
ANR	3962543	IfStatement	if ( ! pObj )		3962508	3					
ANR	3962544	Condition	! pObj	1652:6:50647:50652	3962508	0	True				
ANR	3962545	UnaryOperationExpression	! pObj		3962508	0					
ANR	3962546	UnaryOperator	!		3962508	0					
ANR	3962547	Identifier	pObj		3962508	1					
ANR	3962548	ReturnStatement	return false ;	1653:2:50657:50669	3962508	1	True				
ANR	3962549	Identifier	false		3962508	0					
ANR	3962550	IdentifierDeclStatement	const WinPerf_CounterDef * pCounter = pObj -> Select ( & query . idCounter ) ;	1655:1:50673:50741	3962508	4	True				
ANR	3962551	IdentifierDecl	* pCounter = pObj -> Select ( & query . idCounter )		3962508	0					
ANR	3962552	IdentifierDeclType	const WinPerf_CounterDef *		3962508	0					
ANR	3962553	Identifier	pCounter		3962508	1					
ANR	3962554	AssignmentExpression	* pCounter = pObj -> Select ( & query . idCounter )		3962508	2		=			
ANR	3962555	Identifier	pCounter		3962508	0					
ANR	3962556	CallExpression	pObj -> Select ( & query . idCounter )		3962508	1					
ANR	3962557	Callee	pObj -> Select		3962508	0					
ANR	3962558	PtrMemberAccess	pObj -> Select		3962508	0					
ANR	3962559	Identifier	pObj		3962508	0					
ANR	3962560	Identifier	Select		3962508	1					
ANR	3962561	ArgumentList	& query . idCounter		3962508	1					
ANR	3962562	Argument	& query . idCounter		3962508	0					
ANR	3962563	UnaryOperationExpression	& query . idCounter		3962508	0					
ANR	3962564	UnaryOperator	&		3962508	0					
ANR	3962565	MemberAccess	query . idCounter		3962508	1					
ANR	3962566	Identifier	query		3962508	0					
ANR	3962567	Identifier	idCounter		3962508	1					
ANR	3962568	IfStatement	if ( ! pCounter )		3962508	5					
ANR	3962569	Condition	! pCounter	1656:6:50749:50758	3962508	0	True				
ANR	3962570	UnaryOperationExpression	! pCounter		3962508	0					
ANR	3962571	UnaryOperator	!		3962508	0					
ANR	3962572	Identifier	pCounter		3962508	1					
ANR	3962573	ReturnStatement	return false ;	1657:2:50763:50775	3962508	1	True				
ANR	3962574	Identifier	false		3962508	0					
ANR	3962575	IdentifierDeclStatement	const char * pszInst = NULL ;	1659:1:50779:50805	3962508	6	True				
ANR	3962576	IdentifierDecl	* pszInst = NULL		3962508	0					
ANR	3962577	IdentifierDeclType	const char *		3962508	0					
ANR	3962578	Identifier	pszInst		3962508	1					
ANR	3962579	AssignmentExpression	* pszInst = NULL		3962508	2		=			
ANR	3962580	Identifier	NULL		3962508	0					
ANR	3962581	Identifier	NULL		3962508	1					
ANR	3962582	IfStatement	if ( query . cchInst )		3962508	7					
ANR	3962583	Condition	query . cchInst	1660:5:50812:50824	3962508	0	True				
ANR	3962584	MemberAccess	query . cchInst		3962508	0					
ANR	3962585	Identifier	query		3962508	0					
ANR	3962586	Identifier	cchInst		3962508	1					
ANR	3962587	CompoundStatement		16:1:320:320	3962508	1					
ANR	3962588	IfStatement	if ( ! query . ixInst )		3962508	0					
ANR	3962589	Condition	! query . ixInst	1662:7:50837:50850	3962508	0	True				
ANR	3962590	UnaryOperationExpression	! query . ixInst		3962508	0					
ANR	3962591	UnaryOperator	!		3962508	0					
ANR	3962592	MemberAccess	query . ixInst		3962508	1					
ANR	3962593	Identifier	query		3962508	0					
ANR	3962594	Identifier	ixInst		3962508	1					
ANR	3962595	ExpressionStatement	pszInst = ( const char * ) ( ( & query ) + 1 )	1663:3:50856:50891	3962508	1	True				
ANR	3962596	AssignmentExpression	pszInst = ( const char * ) ( ( & query ) + 1 )		3962508	0		=			
ANR	3962597	Identifier	pszInst		3962508	0					
ANR	3962598	CastExpression	( const char * ) ( ( & query ) + 1 )		3962508	1					
ANR	3962599	CastTarget	const char *		3962508	0					
ANR	3962600	AdditiveExpression	( & query ) + 1		3962508	1		+			
ANR	3962601	UnaryOperationExpression	& query		3962508	0					
ANR	3962602	UnaryOperator	&		3962508	0					
ANR	3962603	Identifier	query		3962508	1					
ANR	3962604	PrimaryExpression	1		3962508	1					
ANR	3962605	ElseStatement	else		3962508	0					
ANR	3962606	CompoundStatement		20:2:394:394	3962508	0					
ANR	3962607	IdentifierDeclStatement	const BYTE * pbData = pObj -> CounterData ( ) ;	1671:1:51000:51041	3962508	8	True				
ANR	3962608	IdentifierDecl	* pbData = pObj -> CounterData ( )		3962508	0					
ANR	3962609	IdentifierDeclType	const BYTE *		3962508	0					
ANR	3962610	Identifier	pbData		3962508	1					
ANR	3962611	AssignmentExpression	* pbData = pObj -> CounterData ( )		3962508	2		=			
ANR	3962612	Identifier	pbData		3962508	0					
ANR	3962613	CallExpression	pObj -> CounterData ( )		3962508	1					
ANR	3962614	Callee	pObj -> CounterData		3962508	0					
ANR	3962615	PtrMemberAccess	pObj -> CounterData		3962508	0					
ANR	3962616	Identifier	pObj		3962508	0					
ANR	3962617	Identifier	CounterData		3962508	1					
ANR	3962618	ArgumentList			3962508	1					
ANR	3962619	IdentifierDeclStatement	const WinPerf_ObjInst * pInst = pObj -> FirstInstance ( ) ;	1679:1:51394:51447	3962508	9	True				
ANR	3962620	IdentifierDecl	* pInst = pObj -> FirstInstance ( )		3962508	0					
ANR	3962621	IdentifierDeclType	const WinPerf_ObjInst *		3962508	0					
ANR	3962622	Identifier	pInst		3962508	1					
ANR	3962623	AssignmentExpression	* pInst = pObj -> FirstInstance ( )		3962508	2		=			
ANR	3962624	Identifier	pInst		3962508	0					
ANR	3962625	CallExpression	pObj -> FirstInstance ( )		3962508	1					
ANR	3962626	Callee	pObj -> FirstInstance		3962508	0					
ANR	3962627	PtrMemberAccess	pObj -> FirstInstance		3962508	0					
ANR	3962628	Identifier	pObj		3962508	0					
ANR	3962629	Identifier	FirstInstance		3962508	1					
ANR	3962630	ArgumentList			3962508	1					
ANR	3962631	IdentifierDeclStatement	const WCHAR * pszDataName = NULL ;	1680:1:51450:51482	3962508	10	True				
ANR	3962632	IdentifierDecl	* pszDataName = NULL		3962508	0					
ANR	3962633	IdentifierDeclType	const WCHAR *		3962508	0					
ANR	3962634	Identifier	pszDataName		3962508	1					
ANR	3962635	AssignmentExpression	* pszDataName = NULL		3962508	2		=			
ANR	3962636	Identifier	NULL		3962508	0					
ANR	3962637	Identifier	NULL		3962508	1					
ANR	3962638	ForStatement	"for ( int ix = 1 ; ix < ( int ) pObj -> NumInstances ; ++ ix , pInst = pInst -> Next ( ) )"		3962508	11					
ANR	3962639	ForInit	int ix = 1 ;	1681:6:51490:51500	3962508	0	True				
ANR	3962640	IdentifierDeclStatement	int ix = 1 ;		3962508	0					
ANR	3962641	IdentifierDecl	ix = 1		3962508	0					
ANR	3962642	IdentifierDeclType	int		3962508	0					
ANR	3962643	Identifier	ix		3962508	1					
ANR	3962644	AssignmentExpression	ix = 1		3962508	2		=			
ANR	3962645	Identifier	ix		3962508	0					
ANR	3962646	PrimaryExpression	1		3962508	1					
ANR	3962647	Condition	ix < ( int ) pObj -> NumInstances	1681:18:51502:51529	3962508	1	True				
ANR	3962648	RelationalExpression	ix < ( int ) pObj -> NumInstances		3962508	0		<			
ANR	3962649	Identifier	ix		3962508	0					
ANR	3962650	CastExpression	( int ) pObj -> NumInstances		3962508	1					
ANR	3962651	CastTarget	int		3962508	0					
ANR	3962652	PtrMemberAccess	pObj -> NumInstances		3962508	1					
ANR	3962653	Identifier	pObj		3962508	0					
ANR	3962654	Identifier	NumInstances		3962508	1					
ANR	3962655	Expression	"++ ix , pInst = pInst -> Next ( )"	1681:48:51532:51558	3962508	2	True				
ANR	3962656	UnaryExpression	++ ix		3962508	0					
ANR	3962657	IncDec	++		3962508	0					
ANR	3962658	Identifier	ix		3962508	1					
ANR	3962659	AssignmentExpression	pInst = pInst -> Next ( )		3962508	1		=			
ANR	3962660	Identifier	pInst		3962508	0					
ANR	3962661	CallExpression	pInst -> Next ( )		3962508	1					
ANR	3962662	Callee	pInst -> Next		3962508	0					
ANR	3962663	PtrMemberAccess	pInst -> Next		3962508	0					
ANR	3962664	Identifier	pInst		3962508	0					
ANR	3962665	Identifier	Next		3962508	1					
ANR	3962666	ArgumentList			3962508	1					
ANR	3962667	CompoundStatement		37:1:1054:1054	3962508	3					
ANR	3962668	IfStatement	if ( pszInst && pInst -> Matches ( pszInst ) )		3962508	0					
ANR	3962669	Condition	pszInst && pInst -> Matches ( pszInst )	1683:6:51570:51603	3962508	0	True				
ANR	3962670	AndExpression	pszInst && pInst -> Matches ( pszInst )		3962508	0		&&			
ANR	3962671	Identifier	pszInst		3962508	0					
ANR	3962672	CallExpression	pInst -> Matches ( pszInst )		3962508	1					
ANR	3962673	Callee	pInst -> Matches		3962508	0					
ANR	3962674	PtrMemberAccess	pInst -> Matches		3962508	0					
ANR	3962675	Identifier	pInst		3962508	0					
ANR	3962676	Identifier	Matches		3962508	1					
ANR	3962677	ArgumentList	pszInst		3962508	1					
ANR	3962678	Argument	pszInst		3962508	0					
ANR	3962679	Identifier	pszInst		3962508	0					
ANR	3962680	CompoundStatement		39:2:1100:1100	3962508	1					
ANR	3962681	ExpressionStatement	pszDataName = pInst -> Name ( )	1685:3:51613:51640	3962508	0	True				
ANR	3962682	AssignmentExpression	pszDataName = pInst -> Name ( )		3962508	0		=			
ANR	3962683	Identifier	pszDataName		3962508	0					
ANR	3962684	CallExpression	pInst -> Name ( )		3962508	1					
ANR	3962685	Callee	pInst -> Name		3962508	0					
ANR	3962686	PtrMemberAccess	pInst -> Name		3962508	0					
ANR	3962687	Identifier	pInst		3962508	0					
ANR	3962688	Identifier	Name		3962508	1					
ANR	3962689	ArgumentList			3962508	1					
ANR	3962690	BreakStatement	break ;	1686:3:51645:51650	3962508	1	True				
ANR	3962691	IfStatement	if ( pInst )		3962508	12					
ANR	3962692	Condition	pInst	1689:5:51664:51668	3962508	0	True				
ANR	3962693	Identifier	pInst		3962508	0					
ANR	3962694	ExpressionStatement	pbData = pInst -> CounterData ( )	1690:2:51673:51702	3962508	1	True				
ANR	3962695	AssignmentExpression	pbData = pInst -> CounterData ( )		3962508	0		=			
ANR	3962696	Identifier	pbData		3962508	0					
ANR	3962697	CallExpression	pInst -> CounterData ( )		3962508	1					
ANR	3962698	Callee	pInst -> CounterData		3962508	0					
ANR	3962699	PtrMemberAccess	pInst -> CounterData		3962508	0					
ANR	3962700	Identifier	pInst		3962508	0					
ANR	3962701	Identifier	CounterData		3962508	1					
ANR	3962702	ArgumentList			3962508	1					
ANR	3962703	IfStatement	if ( ! pbData )		3962508	13					
ANR	3962704	Condition	! pbData	1692:6:51711:51718	3962508	0	True				
ANR	3962705	UnaryOperationExpression	! pbData		3962508	0					
ANR	3962706	UnaryOperator	!		3962508	0					
ANR	3962707	Identifier	pbData		3962508	1					
ANR	3962708	ReturnStatement	return false ;	1693:2:51723:51735	3962508	1	True				
ANR	3962709	Identifier	false		3962508	0					
ANR	3962710	IdentifierDeclStatement	WinPerf_CounterValue ctval ;	1695:1:51739:51765	3962508	14	True				
ANR	3962711	IdentifierDecl	ctval		3962508	0					
ANR	3962712	IdentifierDeclType	WinPerf_CounterValue		3962508	0					
ANR	3962713	Identifier	ctval		3962508	1					
ANR	3962714	IdentifierDeclStatement	WinPerf_TimerDeltas time ;	1696:1:51768:51792	3962508	15	True				
ANR	3962715	IdentifierDecl	time		3962508	0					
ANR	3962716	IdentifierDeclType	WinPerf_TimerDeltas		3962508	0					
ANR	3962717	Identifier	time		3962508	1					
ANR	3962718	ExpressionStatement	time . obj = pObj -> PerfTime . QuadPart	1697:1:51795:51834	3962508	16	True				
ANR	3962719	AssignmentExpression	time . obj = pObj -> PerfTime . QuadPart		3962508	0		=			
ANR	3962720	MemberAccess	time . obj		3962508	0					
ANR	3962721	Identifier	time		3962508	0					
ANR	3962722	Identifier	obj		3962508	1					
ANR	3962723	MemberAccess	pObj -> PerfTime . QuadPart		3962508	1					
ANR	3962724	PtrMemberAccess	pObj -> PerfTime		3962508	0					
ANR	3962725	Identifier	pObj		3962508	0					
ANR	3962726	Identifier	PerfTime		3962508	1					
ANR	3962727	Identifier	QuadPart		3962508	1					
ANR	3962728	ExpressionStatement	time . objabs = pObj -> PerfTime . QuadPart	1698:1:51837:51876	3962508	17	True				
ANR	3962729	AssignmentExpression	time . objabs = pObj -> PerfTime . QuadPart		3962508	0		=			
ANR	3962730	MemberAccess	time . objabs		3962508	0					
ANR	3962731	Identifier	time		3962508	0					
ANR	3962732	Identifier	objabs		3962508	1					
ANR	3962733	MemberAccess	pObj -> PerfTime . QuadPart		3962508	1					
ANR	3962734	PtrMemberAccess	pObj -> PerfTime		3962508	0					
ANR	3962735	Identifier	pObj		3962508	0					
ANR	3962736	Identifier	PerfTime		3962508	1					
ANR	3962737	Identifier	QuadPart		3962508	1					
ANR	3962738	ExpressionStatement	time . objfreq = pObj -> PerfFreq . QuadPart	1699:1:51879:51918	3962508	18	True				
ANR	3962739	AssignmentExpression	time . objfreq = pObj -> PerfFreq . QuadPart		3962508	0		=			
ANR	3962740	MemberAccess	time . objfreq		3962508	0					
ANR	3962741	Identifier	time		3962508	0					
ANR	3962742	Identifier	objfreq		3962508	1					
ANR	3962743	MemberAccess	pObj -> PerfFreq . QuadPart		3962508	1					
ANR	3962744	PtrMemberAccess	pObj -> PerfFreq		3962508	0					
ANR	3962745	Identifier	pObj		3962508	0					
ANR	3962746	Identifier	PerfFreq		3962508	1					
ANR	3962747	Identifier	QuadPart		3962508	1					
ANR	3962748	ExpressionStatement	time . head = pHead -> PerfTime . QuadPart	1700:1:51921:51961	3962508	19	True				
ANR	3962749	AssignmentExpression	time . head = pHead -> PerfTime . QuadPart		3962508	0		=			
ANR	3962750	MemberAccess	time . head		3962508	0					
ANR	3962751	Identifier	time		3962508	0					
ANR	3962752	Identifier	head		3962508	1					
ANR	3962753	MemberAccess	pHead -> PerfTime . QuadPart		3962508	1					
ANR	3962754	PtrMemberAccess	pHead -> PerfTime		3962508	0					
ANR	3962755	Identifier	pHead		3962508	0					
ANR	3962756	Identifier	PerfTime		3962508	1					
ANR	3962757	Identifier	QuadPart		3962508	1					
ANR	3962758	ExpressionStatement	time . headfreq = pHead -> PerfFreq . QuadPart	1701:1:51964:52004	3962508	20	True				
ANR	3962759	AssignmentExpression	time . headfreq = pHead -> PerfFreq . QuadPart		3962508	0		=			
ANR	3962760	MemberAccess	time . headfreq		3962508	0					
ANR	3962761	Identifier	time		3962508	0					
ANR	3962762	Identifier	headfreq		3962508	1					
ANR	3962763	MemberAccess	pHead -> PerfFreq . QuadPart		3962508	1					
ANR	3962764	PtrMemberAccess	pHead -> PerfFreq		3962508	0					
ANR	3962765	Identifier	pHead		3962508	0					
ANR	3962766	Identifier	PerfFreq		3962508	1					
ANR	3962767	Identifier	QuadPart		3962508	1					
ANR	3962768	ExpressionStatement	time . nanos = pHead -> PerfTime100nSec . QuadPart	1702:1:52007:52054	3962508	21	True				
ANR	3962769	AssignmentExpression	time . nanos = pHead -> PerfTime100nSec . QuadPart		3962508	0		=			
ANR	3962770	MemberAccess	time . nanos		3962508	0					
ANR	3962771	Identifier	time		3962508	0					
ANR	3962772	Identifier	nanos		3962508	1					
ANR	3962773	MemberAccess	pHead -> PerfTime100nSec . QuadPart		3962508	1					
ANR	3962774	PtrMemberAccess	pHead -> PerfTime100nSec		3962508	0					
ANR	3962775	Identifier	pHead		3962508	0					
ANR	3962776	Identifier	PerfTime100nSec		3962508	1					
ANR	3962777	Identifier	QuadPart		3962508	1					
ANR	3962778	IdentifierDeclStatement	const BYTE * pbDataPrev = NULL ;	1704:1:52058:52088	3962508	22	True				
ANR	3962779	IdentifierDecl	* pbDataPrev = NULL		3962508	0					
ANR	3962780	IdentifierDeclType	const BYTE *		3962508	0					
ANR	3962781	Identifier	pbDataPrev		3962508	1					
ANR	3962782	AssignmentExpression	* pbDataPrev = NULL		3962508	2		=			
ANR	3962783	Identifier	NULL		3962508	0					
ANR	3962784	Identifier	NULL		3962508	1					
ANR	3962785	IfStatement	if ( result . pdata1 && ( pCounter -> CounterType & PERF_DELTA_COUNTER ) )		3962508	23					
ANR	3962786	Condition	result . pdata1 && ( pCounter -> CounterType & PERF_DELTA_COUNTER )	1705:5:52095:52155	3962508	0	True				
ANR	3962787	AndExpression	result . pdata1 && ( pCounter -> CounterType & PERF_DELTA_COUNTER )		3962508	0		&&			
ANR	3962788	MemberAccess	result . pdata1		3962508	0					
ANR	3962789	Identifier	result		3962508	0					
ANR	3962790	Identifier	pdata1		3962508	1					
ANR	3962791	BitAndExpression	pCounter -> CounterType & PERF_DELTA_COUNTER		3962508	1		&			
ANR	3962792	PtrMemberAccess	pCounter -> CounterType		3962508	0					
ANR	3962793	Identifier	pCounter		3962508	0					
ANR	3962794	Identifier	CounterType		3962508	1					
ANR	3962795	Identifier	PERF_DELTA_COUNTER		3962508	1					
ANR	3962796	CompoundStatement		63:2:1723:1778	3962508	1					
ANR	3962797	IdentifierDeclStatement	const WinPerf_Object * pObj1 = result . pdata1 -> Find ( query . idKey ) ;	1707:2:52163:52227	3962508	0	True				
ANR	3962798	IdentifierDecl	* pObj1 = result . pdata1 -> Find ( query . idKey )		3962508	0					
ANR	3962799	IdentifierDeclType	const WinPerf_Object *		3962508	0					
ANR	3962800	Identifier	pObj1		3962508	1					
ANR	3962801	AssignmentExpression	* pObj1 = result . pdata1 -> Find ( query . idKey )		3962508	2		=			
ANR	3962802	Identifier	pObj1		3962508	0					
ANR	3962803	CallExpression	result . pdata1 -> Find ( query . idKey )		3962508	1					
ANR	3962804	Callee	result . pdata1 -> Find		3962508	0					
ANR	3962805	PtrMemberAccess	result . pdata1 -> Find		3962508	0					
ANR	3962806	MemberAccess	result . pdata1		3962508	0					
ANR	3962807	Identifier	result		3962508	0					
ANR	3962808	Identifier	pdata1		3962508	1					
ANR	3962809	Identifier	Find		3962508	1					
ANR	3962810	ArgumentList	query . idKey		3962508	1					
ANR	3962811	Argument	query . idKey		3962508	0					
ANR	3962812	MemberAccess	query . idKey		3962508	0					
ANR	3962813	Identifier	query		3962508	0					
ANR	3962814	Identifier	idKey		3962508	1					
ANR	3962815	IdentifierDeclStatement	const WinPerf_ObjInst * pInst1 = pObj1 -> FirstInstance ( ) ;	1708:2:52231:52286	3962508	1	True				
ANR	3962816	IdentifierDecl	* pInst1 = pObj1 -> FirstInstance ( )		3962508	0					
ANR	3962817	IdentifierDeclType	const WinPerf_ObjInst *		3962508	0					
ANR	3962818	Identifier	pInst1		3962508	1					
ANR	3962819	AssignmentExpression	* pInst1 = pObj1 -> FirstInstance ( )		3962508	2		=			
ANR	3962820	Identifier	pInst1		3962508	0					
ANR	3962821	CallExpression	pObj1 -> FirstInstance ( )		3962508	1					
ANR	3962822	Callee	pObj1 -> FirstInstance		3962508	0					
ANR	3962823	PtrMemberAccess	pObj1 -> FirstInstance		3962508	0					
ANR	3962824	Identifier	pObj1		3962508	0					
ANR	3962825	Identifier	FirstInstance		3962508	1					
ANR	3962826	ArgumentList			3962508	1					
ANR	3962827	ExpressionStatement	pbDataPrev = pObj1 -> CounterData ( )	1709:2:52290:52323	3962508	2	True				
ANR	3962828	AssignmentExpression	pbDataPrev = pObj1 -> CounterData ( )		3962508	0		=			
ANR	3962829	Identifier	pbDataPrev		3962508	0					
ANR	3962830	CallExpression	pObj1 -> CounterData ( )		3962508	1					
ANR	3962831	Callee	pObj1 -> CounterData		3962508	0					
ANR	3962832	PtrMemberAccess	pObj1 -> CounterData		3962508	0					
ANR	3962833	Identifier	pObj1		3962508	0					
ANR	3962834	Identifier	CounterData		3962508	1					
ANR	3962835	ArgumentList			3962508	1					
ANR	3962836	ForStatement	"for ( int ix = 1 ; ix < ( int ) pObj1 -> NumInstances ; ++ ix , pInst1 = pInst1 -> Next ( ) )"		3962508	3					
ANR	3962837	ForInit	int ix = 1 ;	1710:7:52332:52342	3962508	0	True				
ANR	3962838	IdentifierDeclStatement	int ix = 1 ;		3962508	0					
ANR	3962839	IdentifierDecl	ix = 1		3962508	0					
ANR	3962840	IdentifierDeclType	int		3962508	0					
ANR	3962841	Identifier	ix		3962508	1					
ANR	3962842	AssignmentExpression	ix = 1		3962508	2		=			
ANR	3962843	Identifier	ix		3962508	0					
ANR	3962844	PrimaryExpression	1		3962508	1					
ANR	3962845	Condition	ix < ( int ) pObj1 -> NumInstances	1710:19:52344:52372	3962508	1	True				
ANR	3962846	RelationalExpression	ix < ( int ) pObj1 -> NumInstances		3962508	0		<			
ANR	3962847	Identifier	ix		3962508	0					
ANR	3962848	CastExpression	( int ) pObj1 -> NumInstances		3962508	1					
ANR	3962849	CastTarget	int		3962508	0					
ANR	3962850	PtrMemberAccess	pObj1 -> NumInstances		3962508	1					
ANR	3962851	Identifier	pObj1		3962508	0					
ANR	3962852	Identifier	NumInstances		3962508	1					
ANR	3962853	Expression	"++ ix , pInst1 = pInst1 -> Next ( )"	1710:50:52375:52403	3962508	2	True				
ANR	3962854	UnaryExpression	++ ix		3962508	0					
ANR	3962855	IncDec	++		3962508	0					
ANR	3962856	Identifier	ix		3962508	1					
ANR	3962857	AssignmentExpression	pInst1 = pInst1 -> Next ( )		3962508	1		=			
ANR	3962858	Identifier	pInst1		3962508	0					
ANR	3962859	CallExpression	pInst1 -> Next ( )		3962508	1					
ANR	3962860	Callee	pInst1 -> Next		3962508	0					
ANR	3962861	PtrMemberAccess	pInst1 -> Next		3962508	0					
ANR	3962862	Identifier	pInst1		3962508	0					
ANR	3962863	Identifier	Next		3962508	1					
ANR	3962864	ArgumentList			3962508	1					
ANR	3962865	CompoundStatement		66:2:1900:1900	3962508	3					
ANR	3962866	IfStatement	"if ( pszInst && pInst1 -> Matches ( pszInst ) && pInst -> Name ( ) && pszDataName && ( 0 == lstrcmpW ( pInst -> Name ( ) , pszDataName ) ) )"		3962508	0					
ANR	3962867	Condition	"pszInst && pInst1 -> Matches ( pszInst ) && pInst -> Name ( ) && pszDataName && ( 0 == lstrcmpW ( pInst -> Name ( ) , pszDataName ) )"	1712:7:52417:52538	3962508	0	True				
ANR	3962868	AndExpression	"pszInst && pInst1 -> Matches ( pszInst ) && pInst -> Name ( ) && pszDataName && ( 0 == lstrcmpW ( pInst -> Name ( ) , pszDataName ) )"		3962508	0		&&			
ANR	3962869	Identifier	pszInst		3962508	0					
ANR	3962870	AndExpression	"pInst1 -> Matches ( pszInst ) && pInst -> Name ( ) && pszDataName && ( 0 == lstrcmpW ( pInst -> Name ( ) , pszDataName ) )"		3962508	1		&&			
ANR	3962871	CallExpression	pInst1 -> Matches ( pszInst )		3962508	0					
ANR	3962872	Callee	pInst1 -> Matches		3962508	0					
ANR	3962873	PtrMemberAccess	pInst1 -> Matches		3962508	0					
ANR	3962874	Identifier	pInst1		3962508	0					
ANR	3962875	Identifier	Matches		3962508	1					
ANR	3962876	ArgumentList	pszInst		3962508	1					
ANR	3962877	Argument	pszInst		3962508	0					
ANR	3962878	Identifier	pszInst		3962508	0					
ANR	3962879	AndExpression	"pInst -> Name ( ) && pszDataName && ( 0 == lstrcmpW ( pInst -> Name ( ) , pszDataName ) )"		3962508	1		&&			
ANR	3962880	CallExpression	pInst -> Name ( )		3962508	0					
ANR	3962881	Callee	pInst -> Name		3962508	0					
ANR	3962882	PtrMemberAccess	pInst -> Name		3962508	0					
ANR	3962883	Identifier	pInst		3962508	0					
ANR	3962884	Identifier	Name		3962508	1					
ANR	3962885	ArgumentList			3962508	1					
ANR	3962886	AndExpression	"pszDataName && ( 0 == lstrcmpW ( pInst -> Name ( ) , pszDataName ) )"		3962508	1		&&			
ANR	3962887	Identifier	pszDataName		3962508	0					
ANR	3962888	EqualityExpression	"0 == lstrcmpW ( pInst -> Name ( ) , pszDataName )"		3962508	1		==			
ANR	3962889	PrimaryExpression	0		3962508	0					
ANR	3962890	CallExpression	"lstrcmpW ( pInst -> Name ( ) , pszDataName )"		3962508	1					
ANR	3962891	Callee	lstrcmpW		3962508	0					
ANR	3962892	Identifier	lstrcmpW		3962508	0					
ANR	3962893	ArgumentList	pInst -> Name ( )		3962508	1					
ANR	3962894	Argument	pInst -> Name ( )		3962508	0					
ANR	3962895	CallExpression	pInst -> Name ( )		3962508	0					
ANR	3962896	Callee	pInst -> Name		3962508	0					
ANR	3962897	PtrMemberAccess	pInst -> Name		3962508	0					
ANR	3962898	Identifier	pInst		3962508	0					
ANR	3962899	Identifier	Name		3962508	1					
ANR	3962900	ArgumentList			3962508	1					
ANR	3962901	Argument	pszDataName		3962508	1					
ANR	3962902	Identifier	pszDataName		3962508	0					
ANR	3962903	BreakStatement	break ;	1715:4:52545:52550	3962508	1	True				
ANR	3962904	IfStatement	if ( pInst1 )		3962508	4					
ANR	3962905	Condition	pInst1	1717:6:52562:52567	3962508	0	True				
ANR	3962906	Identifier	pInst1		3962508	0					
ANR	3962907	ExpressionStatement	pbDataPrev = pInst1 -> CounterData ( )	1718:3:52573:52607	3962508	1	True				
ANR	3962908	AssignmentExpression	pbDataPrev = pInst1 -> CounterData ( )		3962508	0		=			
ANR	3962909	Identifier	pbDataPrev		3962508	0					
ANR	3962910	CallExpression	pInst1 -> CounterData ( )		3962508	1					
ANR	3962911	Callee	pInst1 -> CounterData		3962508	0					
ANR	3962912	PtrMemberAccess	pInst1 -> CounterData		3962508	0					
ANR	3962913	Identifier	pInst1		3962508	0					
ANR	3962914	Identifier	CounterData		3962508	1					
ANR	3962915	ArgumentList			3962508	1					
ANR	3962916	ExpressionStatement	time . obj -= pObj1 -> PerfTime . QuadPart	1720:2:52612:52653	3962508	5	True				
ANR	3962917	AssignmentExpression	time . obj -= pObj1 -> PerfTime . QuadPart		3962508	0		-=			
ANR	3962918	MemberAccess	time . obj		3962508	0					
ANR	3962919	Identifier	time		3962508	0					
ANR	3962920	Identifier	obj		3962508	1					
ANR	3962921	MemberAccess	pObj1 -> PerfTime . QuadPart		3962508	1					
ANR	3962922	PtrMemberAccess	pObj1 -> PerfTime		3962508	0					
ANR	3962923	Identifier	pObj1		3962508	0					
ANR	3962924	Identifier	PerfTime		3962508	1					
ANR	3962925	Identifier	QuadPart		3962508	1					
ANR	3962926	ExpressionStatement	time . head -= result . pdata1 -> PerfTime . QuadPart	1721:2:52657:52706	3962508	6	True				
ANR	3962927	AssignmentExpression	time . head -= result . pdata1 -> PerfTime . QuadPart		3962508	0		-=			
ANR	3962928	MemberAccess	time . head		3962508	0					
ANR	3962929	Identifier	time		3962508	0					
ANR	3962930	Identifier	head		3962508	1					
ANR	3962931	MemberAccess	result . pdata1 -> PerfTime . QuadPart		3962508	1					
ANR	3962932	PtrMemberAccess	result . pdata1 -> PerfTime		3962508	0					
ANR	3962933	MemberAccess	result . pdata1		3962508	0					
ANR	3962934	Identifier	result		3962508	0					
ANR	3962935	Identifier	pdata1		3962508	1					
ANR	3962936	Identifier	PerfTime		3962508	1					
ANR	3962937	Identifier	QuadPart		3962508	1					
ANR	3962938	ExpressionStatement	time . nanos -= result . pdata1 -> PerfTime100nSec . QuadPart	1722:2:52710:52766	3962508	7	True				
ANR	3962939	AssignmentExpression	time . nanos -= result . pdata1 -> PerfTime100nSec . QuadPart		3962508	0		-=			
ANR	3962940	MemberAccess	time . nanos		3962508	0					
ANR	3962941	Identifier	time		3962508	0					
ANR	3962942	Identifier	nanos		3962508	1					
ANR	3962943	MemberAccess	result . pdata1 -> PerfTime100nSec . QuadPart		3962508	1					
ANR	3962944	PtrMemberAccess	result . pdata1 -> PerfTime100nSec		3962508	0					
ANR	3962945	MemberAccess	result . pdata1		3962508	0					
ANR	3962946	Identifier	result		3962508	0					
ANR	3962947	Identifier	pdata1		3962508	1					
ANR	3962948	Identifier	PerfTime100nSec		3962508	1					
ANR	3962949	Identifier	QuadPart		3962508	1					
ANR	3962950	IfStatement	"if ( ! pObj -> GetValue ( ctval , pCounter , time , pbData , pbDataPrev ) )"		3962508	24					
ANR	3962951	Condition	"! pObj -> GetValue ( ctval , pCounter , time , pbData , pbDataPrev )"	1725:6:52778:52836	3962508	0	True				
ANR	3962952	UnaryOperationExpression	"! pObj -> GetValue ( ctval , pCounter , time , pbData , pbDataPrev )"		3962508	0					
ANR	3962953	UnaryOperator	!		3962508	0					
ANR	3962954	CallExpression	"pObj -> GetValue ( ctval , pCounter , time , pbData , pbDataPrev )"		3962508	1					
ANR	3962955	Callee	pObj -> GetValue		3962508	0					
ANR	3962956	PtrMemberAccess	pObj -> GetValue		3962508	0					
ANR	3962957	Identifier	pObj		3962508	0					
ANR	3962958	Identifier	GetValue		3962508	1					
ANR	3962959	ArgumentList	ctval		3962508	1					
ANR	3962960	Argument	ctval		3962508	0					
ANR	3962961	Identifier	ctval		3962508	0					
ANR	3962962	Argument	pCounter		3962508	1					
ANR	3962963	Identifier	pCounter		3962508	0					
ANR	3962964	Argument	time		3962508	2					
ANR	3962965	Identifier	time		3962508	0					
ANR	3962966	Argument	pbData		3962508	3					
ANR	3962967	Identifier	pbData		3962508	0					
ANR	3962968	Argument	pbDataPrev		3962508	4					
ANR	3962969	Identifier	pbDataPrev		3962508	0					
ANR	3962970	ReturnStatement	return false ;	1726:2:52841:52853	3962508	1	True				
ANR	3962971	Identifier	false		3962508	0					
ANR	3962972	ExpressionStatement	pav -> value . ll = ctval . value . ll	1728:1:52857:52887	3962508	25	True				
ANR	3962973	AssignmentExpression	pav -> value . ll = ctval . value . ll		3962508	0		=			
ANR	3962974	MemberAccess	pav -> value . ll		3962508	0					
ANR	3962975	PtrMemberAccess	pav -> value		3962508	0					
ANR	3962976	Identifier	pav		3962508	0					
ANR	3962977	Identifier	value		3962508	1					
ANR	3962978	Identifier	ll		3962508	1					
ANR	3962979	MemberAccess	ctval . value . ll		3962508	1					
ANR	3962980	MemberAccess	ctval . value		3962508	0					
ANR	3962981	Identifier	ctval		3962508	0					
ANR	3962982	Identifier	value		3962508	1					
ANR	3962983	Identifier	ll		3962508	1					
ANR	3962984	ExpressionStatement	pav -> vtype = AttribValue_DataType_Int	1729:1:52890:52927	3962508	26	True				
ANR	3962985	AssignmentExpression	pav -> vtype = AttribValue_DataType_Int		3962508	0		=			
ANR	3962986	PtrMemberAccess	pav -> vtype		3962508	0					
ANR	3962987	Identifier	pav		3962508	0					
ANR	3962988	Identifier	vtype		3962508	1					
ANR	3962989	Identifier	AttribValue_DataType_Int		3962508	1					
ANR	3962990	IfStatement	if ( ( ctval . type & WinPerf_CT_Double ) == WinPerf_CT_Double )		3962508	27					
ANR	3962991	Condition	( ctval . type & WinPerf_CT_Double ) == WinPerf_CT_Double	1730:5:52934:52986	3962508	0	True				
ANR	3962992	EqualityExpression	( ctval . type & WinPerf_CT_Double ) == WinPerf_CT_Double		3962508	0		==			
ANR	3962993	BitAndExpression	ctval . type & WinPerf_CT_Double		3962508	0		&			
ANR	3962994	MemberAccess	ctval . type		3962508	0					
ANR	3962995	Identifier	ctval		3962508	0					
ANR	3962996	Identifier	type		3962508	1					
ANR	3962997	Identifier	WinPerf_CT_Double		3962508	1					
ANR	3962998	Identifier	WinPerf_CT_Double		3962508	1					
ANR	3962999	ExpressionStatement	pav -> vtype = AttribValue_DataType_Double	1731:2:52991:53031	3962508	1	True				
ANR	3963000	AssignmentExpression	pav -> vtype = AttribValue_DataType_Double		3962508	0		=			
ANR	3963001	PtrMemberAccess	pav -> vtype		3962508	0					
ANR	3963002	Identifier	pav		3962508	0					
ANR	3963003	Identifier	vtype		3962508	1					
ANR	3963004	Identifier	AttribValue_DataType_Double		3962508	1					
ANR	3963005	IfStatement	if ( ( ctval . type & ( WinPerf_CT_Double | WinPerf_CT_Short ) ) == WinPerf_CT_Signed )		3962508	28					
ANR	3963006	Condition	( ctval . type & ( WinPerf_CT_Double | WinPerf_CT_Short ) ) == WinPerf_CT_Signed	1736:5:53174:53247	3962508	0	True				
ANR	3963007	EqualityExpression	( ctval . type & ( WinPerf_CT_Double | WinPerf_CT_Short ) ) == WinPerf_CT_Signed		3962508	0		==			
ANR	3963008	BitAndExpression	ctval . type & ( WinPerf_CT_Double | WinPerf_CT_Short )		3962508	0		&			
ANR	3963009	MemberAccess	ctval . type		3962508	0					
ANR	3963010	Identifier	ctval		3962508	0					
ANR	3963011	Identifier	type		3962508	1					
ANR	3963012	InclusiveOrExpression	WinPerf_CT_Double | WinPerf_CT_Short		3962508	1		|			
ANR	3963013	Identifier	WinPerf_CT_Double		3962508	0					
ANR	3963014	Identifier	WinPerf_CT_Short		3962508	1					
ANR	3963015	Identifier	WinPerf_CT_Signed		3962508	1					
ANR	3963016	CompoundStatement		92:1:2743:2743	3962508	1					
ANR	3963017	IfStatement	if ( ctval . value . ll > 0x7FFFFFFF || ctval . value . ll < 0x8000000 )		3962508	0					
ANR	3963018	Condition	ctval . value . ll > 0x7FFFFFFF || ctval . value . ll < 0x8000000	1738:6:53259:53315	3962508	0	True				
ANR	3963019	OrExpression	ctval . value . ll > 0x7FFFFFFF || ctval . value . ll < 0x8000000		3962508	0		||			
ANR	3963020	RelationalExpression	ctval . value . ll > 0x7FFFFFFF		3962508	0		>			
ANR	3963021	MemberAccess	ctval . value . ll		3962508	0					
ANR	3963022	MemberAccess	ctval . value		3962508	0					
ANR	3963023	Identifier	ctval		3962508	0					
ANR	3963024	Identifier	value		3962508	1					
ANR	3963025	Identifier	ll		3962508	1					
ANR	3963026	PrimaryExpression	0x7FFFFFFF		3962508	1					
ANR	3963027	RelationalExpression	ctval . value . ll < 0x8000000		3962508	1		<			
ANR	3963028	MemberAccess	ctval . value . ll		3962508	0					
ANR	3963029	MemberAccess	ctval . value		3962508	0					
ANR	3963030	Identifier	ctval		3962508	0					
ANR	3963031	Identifier	value		3962508	1					
ANR	3963032	Identifier	ll		3962508	1					
ANR	3963033	PrimaryExpression	0x8000000		3962508	1					
ANR	3963034	CompoundStatement		94:2:2812:2812	3962508	1					
ANR	3963035	ExpressionStatement	pav -> value . d = ( double ) ctval . value . ll	1740:3:53325:53362	3962508	0	True				
ANR	3963036	AssignmentExpression	pav -> value . d = ( double ) ctval . value . ll		3962508	0		=			
ANR	3963037	MemberAccess	pav -> value . d		3962508	0					
ANR	3963038	PtrMemberAccess	pav -> value		3962508	0					
ANR	3963039	Identifier	pav		3962508	0					
ANR	3963040	Identifier	value		3962508	1					
ANR	3963041	Identifier	d		3962508	1					
ANR	3963042	CastExpression	( double ) ctval . value . ll		3962508	1					
ANR	3963043	CastTarget	double		3962508	0					
ANR	3963044	MemberAccess	ctval . value . ll		3962508	1					
ANR	3963045	MemberAccess	ctval . value		3962508	0					
ANR	3963046	Identifier	ctval		3962508	0					
ANR	3963047	Identifier	value		3962508	1					
ANR	3963048	Identifier	ll		3962508	1					
ANR	3963049	ExpressionStatement	pav -> vtype = AttribValue_DataType_Double	1741:3:53367:53407	3962508	1	True				
ANR	3963050	AssignmentExpression	pav -> vtype = AttribValue_DataType_Double		3962508	0		=			
ANR	3963051	PtrMemberAccess	pav -> vtype		3962508	0					
ANR	3963052	Identifier	pav		3962508	0					
ANR	3963053	Identifier	vtype		3962508	1					
ANR	3963054	Identifier	AttribValue_DataType_Double		3962508	1					
ANR	3963055	ElseStatement	else		3962508	0					
ANR	3963056	IfStatement	if ( ( ctval . type & ( WinPerf_CT_Double | WinPerf_CT_Short ) ) == WinPerf_CT_Unsigned )		3962508	0					
ANR	3963057	Condition	( ctval . type & ( WinPerf_CT_Double | WinPerf_CT_Short ) ) == WinPerf_CT_Unsigned	1744:10:53426:53501	3962508	0	True				
ANR	3963058	EqualityExpression	( ctval . type & ( WinPerf_CT_Double | WinPerf_CT_Short ) ) == WinPerf_CT_Unsigned		3962508	0		==			
ANR	3963059	BitAndExpression	ctval . type & ( WinPerf_CT_Double | WinPerf_CT_Short )		3962508	0		&			
ANR	3963060	MemberAccess	ctval . type		3962508	0					
ANR	3963061	Identifier	ctval		3962508	0					
ANR	3963062	Identifier	type		3962508	1					
ANR	3963063	InclusiveOrExpression	WinPerf_CT_Double | WinPerf_CT_Short		3962508	1		|			
ANR	3963064	Identifier	WinPerf_CT_Double		3962508	0					
ANR	3963065	Identifier	WinPerf_CT_Short		3962508	1					
ANR	3963066	Identifier	WinPerf_CT_Unsigned		3962508	1					
ANR	3963067	CompoundStatement		100:1:2997:2997	3962508	1					
ANR	3963068	IfStatement	if ( ctval . value . ul > 0x7FFFFFFF )		3962508	0					
ANR	3963069	Condition	ctval . value . ul > 0x7FFFFFFF	1746:6:53513:53539	3962508	0	True				
ANR	3963070	RelationalExpression	ctval . value . ul > 0x7FFFFFFF		3962508	0		>			
ANR	3963071	MemberAccess	ctval . value . ul		3962508	0					
ANR	3963072	MemberAccess	ctval . value		3962508	0					
ANR	3963073	Identifier	ctval		3962508	0					
ANR	3963074	Identifier	value		3962508	1					
ANR	3963075	Identifier	ul		3962508	1					
ANR	3963076	PrimaryExpression	0x7FFFFFFF		3962508	1					
ANR	3963077	CompoundStatement		102:2:3036:3036	3962508	1					
ANR	3963078	ExpressionStatement	pav -> value . d = ( double ) ctval . value . ul	1748:3:53549:53586	3962508	0	True				
ANR	3963079	AssignmentExpression	pav -> value . d = ( double ) ctval . value . ul		3962508	0		=			
ANR	3963080	MemberAccess	pav -> value . d		3962508	0					
ANR	3963081	PtrMemberAccess	pav -> value		3962508	0					
ANR	3963082	Identifier	pav		3962508	0					
ANR	3963083	Identifier	value		3962508	1					
ANR	3963084	Identifier	d		3962508	1					
ANR	3963085	CastExpression	( double ) ctval . value . ul		3962508	1					
ANR	3963086	CastTarget	double		3962508	0					
ANR	3963087	MemberAccess	ctval . value . ul		3962508	1					
ANR	3963088	MemberAccess	ctval . value		3962508	0					
ANR	3963089	Identifier	ctval		3962508	0					
ANR	3963090	Identifier	value		3962508	1					
ANR	3963091	Identifier	ul		3962508	1					
ANR	3963092	ExpressionStatement	pav -> vtype = AttribValue_DataType_Double	1749:3:53591:53631	3962508	1	True				
ANR	3963093	AssignmentExpression	pav -> vtype = AttribValue_DataType_Double		3962508	0		=			
ANR	3963094	PtrMemberAccess	pav -> vtype		3962508	0					
ANR	3963095	Identifier	pav		3962508	0					
ANR	3963096	Identifier	vtype		3962508	1					
ANR	3963097	Identifier	AttribValue_DataType_Double		3962508	1					
ANR	3963098	ReturnStatement	return true ;	1753:1:53642:53653	3962508	29	True				
ANR	3963099	Identifier	true		3962508	0					
ANR	3963100	ReturnType	static bool		3962508	1					
ANR	3963101	Identifier	update_windows_performance_value		3962508	2					
ANR	3963102	ParameterList	"const WinPerf_QueryResult & result , const WinPerf_Query & query , AttribValue * pav"		3962508	3					
ANR	3963103	Parameter	const WinPerf_QueryResult & result	1643:1:50420:50453	3962508	0	True				
ANR	3963104	ParameterType	const WinPerf_QueryResult &		3962508	0					
ANR	3963105	Identifier	result		3962508	1					
ANR	3963106	Parameter	const WinPerf_Query & query	1644:1:50458:50484	3962508	1	True				
ANR	3963107	ParameterType	const WinPerf_Query &		3962508	0					
ANR	3963108	Identifier	query		3962508	1					
ANR	3963109	Parameter	AttribValue * pav	1645:1:50489:50504	3962508	2	True				
ANR	3963110	ParameterType	AttribValue *		3962508	0					
ANR	3963111	Identifier	pav		3962508	1					
ANR	3963112	CFGEntryNode	ENTRY		3962508		True				
ANR	3963113	CFGExitNode	EXIT		3962508		True				
ANR	3963114	Symbol	pObj -> NumInstances		3962508						
ANR	3963115	Symbol	pHead -> PerfFreq . QuadPart		3962508						
ANR	3963116	Symbol	pInst1 -> CounterData		3962508						
ANR	3963117	Symbol	result . pdata1 -> PerfTime100nSec		3962508						
ANR	3963118	Symbol	* pObj1		3962508						
ANR	3963119	Symbol	pObj -> PerfTime . QuadPart		3962508						
ANR	3963120	Symbol	pInst1 -> Matches		3962508						
ANR	3963121	Symbol	pCounter -> CounterType		3962508						
ANR	3963122	Symbol	* result . pdata1		3962508						
ANR	3963123	Symbol	pObj1 -> PerfTime . QuadPart		3962508						
ANR	3963124	Symbol	result . pdata1 -> PerfTime		3962508						
ANR	3963125	Symbol	pHead -> PerfTime . QuadPart		3962508						
ANR	3963126	Symbol	pObj1 -> FirstInstance		3962508						
ANR	3963127	Symbol	time . nanos		3962508						
ANR	3963128	Symbol	pbData		3962508						
ANR	3963129	Symbol	query . idKey		3962508						
ANR	3963130	Symbol	pInst		3962508						
ANR	3963131	Symbol	pObj -> FirstInstance		3962508						
ANR	3963132	Symbol	time . headfreq		3962508						
ANR	3963133	Symbol	pObj -> PerfFreq		3962508						
ANR	3963134	Symbol	time . objabs		3962508						
ANR	3963135	Symbol	NULL		3962508						
ANR	3963136	Symbol	pObj -> PerfTime		3962508						
ANR	3963137	Symbol	pObj -> GetValue		3962508						
ANR	3963138	Symbol	pav		3962508						
ANR	3963139	Symbol	time . objfreq		3962508						
ANR	3963140	Symbol	ctval . type		3962508						
ANR	3963141	Symbol	query		3962508						
ANR	3963142	Symbol	ctval . value . ll		3962508						
ANR	3963143	Symbol	WinPerf_CT_Unsigned		3962508						
ANR	3963144	Symbol	pObj1 -> NumInstances		3962508						
ANR	3963145	Symbol	ix		3962508						
ANR	3963146	Symbol	result . pdata1 -> Find		3962508						
ANR	3963147	Symbol	pav -> value . d		3962508						
ANR	3963148	Symbol	time . head		3962508						
ANR	3963149	Symbol	result . pdata1		3962508						
ANR	3963150	Symbol	ctval . value . ul		3962508						
ANR	3963151	Symbol	result . pdata2		3962508						
ANR	3963152	Symbol	time . obj		3962508						
ANR	3963153	Symbol	pObj -> CounterData		3962508						
ANR	3963154	Symbol	pInst1 -> Next		3962508						
ANR	3963155	Symbol	query . cchInst		3962508						
ANR	3963156	Symbol	pHead -> PerfTime		3962508						
ANR	3963157	Symbol	pInst -> Matches		3962508						
ANR	3963158	Symbol	true		3962508						
ANR	3963159	Symbol	ctval		3962508						
ANR	3963160	Symbol	pHead -> PerfTime100nSec . QuadPart		3962508						
ANR	3963161	Symbol	PERF_DELTA_COUNTER		3962508						
ANR	3963162	Symbol	pav -> value		3962508						
ANR	3963163	Symbol	pHead		3962508						
ANR	3963164	Symbol	query . ixInst		3962508						
ANR	3963165	Symbol	AttribValue_DataType_Double		3962508						
ANR	3963166	Symbol	* pObj		3962508						
ANR	3963167	Symbol	pCounter		3962508						
ANR	3963168	Symbol	pbDataPrev		3962508						
ANR	3963169	Symbol	lstrcmpW		3962508						
ANR	3963170	Symbol	result . pdata1 -> PerfTime . QuadPart		3962508						
ANR	3963171	Symbol	pInst -> Next		3962508						
ANR	3963172	Symbol	pInst1		3962508						
ANR	3963173	Symbol	* pInst		3962508						
ANR	3963174	Symbol	pObj1 -> CounterData		3962508						
ANR	3963175	Symbol	* pCounter		3962508						
ANR	3963176	Symbol	* pav		3962508						
ANR	3963177	Symbol	result		3962508						
ANR	3963178	Symbol	pObj		3962508						
ANR	3963179	Symbol	* result		3962508						
ANR	3963180	Symbol	* pHead		3962508						
ANR	3963181	Symbol	AttribValue_DataType_Int		3962508						
ANR	3963182	Symbol	pHead -> Find		3962508						
ANR	3963183	Symbol	pHead -> PerfFreq		3962508						
ANR	3963184	Symbol	& query . idCounter		3962508						
ANR	3963185	Symbol	pav -> value . ll		3962508						
ANR	3963186	Symbol	* pInst1		3962508						
ANR	3963187	Symbol	result . pdata1 -> PerfTime100nSec . QuadPart		3962508						
ANR	3963188	Symbol	pInst -> Name		3962508						
ANR	3963189	Symbol	pInst -> CounterData		3962508						
ANR	3963190	Symbol	pObj -> PerfFreq . QuadPart		3962508						
ANR	3963191	Symbol	pObj1		3962508						
ANR	3963192	Symbol	pObj -> Select		3962508						
ANR	3963193	Symbol	false		3962508						
ANR	3963194	Symbol	pszInst		3962508						
ANR	3963195	Symbol	pszDataName		3962508						
ANR	3963196	Symbol	WinPerf_CT_Double		3962508						
ANR	3963197	Symbol	pObj1 -> PerfTime		3962508						
ANR	3963198	Symbol	pav -> vtype		3962508						
ANR	3963199	Symbol	pHead -> PerfTime100nSec		3962508						
ANR	3963200	Symbol	WinPerf_CT_Short		3962508						
ANR	3963201	Symbol	& query		3962508						
ANR	3963202	Symbol	WinPerf_CT_Signed		3962508						
ANR	3963203	Symbol	time		3962508						
ANR	3963204	Symbol	ctval . value		3962508						
ANR	3963205	Function	update_WinPerf_Value	1756:0:53658:54036							
ANR	3963206	FunctionDef	update_WinPerf_Value (AttribValue * pav)		3963205	0					
ANR	3963207	CompoundStatement		1757:0:53702:54036	3963205	0					
ANR	3963208	IfStatement	if ( ! pav )		3963205	0					
ANR	3963209	Condition	! pav	1758:9:53713:53717	3963205	0	True				
ANR	3963210	UnaryOperationExpression	! pav		3963205	0					
ANR	3963211	UnaryOperator	!		3963205	0					
ANR	3963212	Identifier	pav		3963205	1					
ANR	3963213	ReturnStatement	return false ;	1759:8:53728:53740	3963205	1	True				
ANR	3963214	Identifier	false		3963205	0					
ANR	3963215	IdentifierDeclStatement	WinPerf_Query * pquery = ( WinPerf_Query * ) pav -> pquery ;	1761:4:53747:53800	3963205	1	True				
ANR	3963216	IdentifierDecl	* pquery = ( WinPerf_Query * ) pav -> pquery		3963205	0					
ANR	3963217	IdentifierDeclType	WinPerf_Query *		3963205	0					
ANR	3963218	Identifier	pquery		3963205	1					
ANR	3963219	AssignmentExpression	* pquery = ( WinPerf_Query * ) pav -> pquery		3963205	2		=			
ANR	3963220	Identifier	pquery		3963205	0					
ANR	3963221	CastExpression	( WinPerf_Query * ) pav -> pquery		3963205	1					
ANR	3963222	CastTarget	WinPerf_Query *		3963205	0					
ANR	3963223	PtrMemberAccess	pav -> pquery		3963205	1					
ANR	3963224	Identifier	pav		3963205	0					
ANR	3963225	Identifier	pquery		3963205	1					
ANR	3963226	IfStatement	if ( pquery && rl . pQueries )		3963205	2					
ANR	3963227	Condition	pquery && rl . pQueries	1762:8:53810:53830	3963205	0	True				
ANR	3963228	AndExpression	pquery && rl . pQueries		3963205	0		&&			
ANR	3963229	Identifier	pquery		3963205	0					
ANR	3963230	MemberAccess	rl . pQueries		3963205	1					
ANR	3963231	Identifier	rl		3963205	0					
ANR	3963232	Identifier	pQueries		3963205	1					
ANR	3963233	CompoundStatement		8:8:144:170	3963205	1					
ANR	3963234	IdentifierDeclStatement	WinPerf_QueryResult result ;	1764:8:53847:53873	3963205	0	True				
ANR	3963235	IdentifierDecl	result		3963205	0					
ANR	3963236	IdentifierDeclType	WinPerf_QueryResult		3963205	0					
ANR	3963237	Identifier	result		3963205	1					
ANR	3963238	IfStatement	"if ( rl . pQueries -> lookup ( pquery -> idKey , result ) >= 0 )"		3963205	1					
ANR	3963239	Condition	"rl . pQueries -> lookup ( pquery -> idKey , result ) >= 0"	1765:12:53887:53933	3963205	0	True				
ANR	3963240	RelationalExpression	"rl . pQueries -> lookup ( pquery -> idKey , result ) >= 0"		3963205	0		>=			
ANR	3963241	CallExpression	"rl . pQueries -> lookup ( pquery -> idKey , result )"		3963205	0					
ANR	3963242	Callee	rl . pQueries -> lookup		3963205	0					
ANR	3963243	PtrMemberAccess	rl . pQueries -> lookup		3963205	0					
ANR	3963244	MemberAccess	rl . pQueries		3963205	0					
ANR	3963245	Identifier	rl		3963205	0					
ANR	3963246	Identifier	pQueries		3963205	1					
ANR	3963247	Identifier	lookup		3963205	1					
ANR	3963248	ArgumentList	pquery -> idKey		3963205	1					
ANR	3963249	Argument	pquery -> idKey		3963205	0					
ANR	3963250	PtrMemberAccess	pquery -> idKey		3963205	0					
ANR	3963251	Identifier	pquery		3963205	0					
ANR	3963252	Identifier	idKey		3963205	1					
ANR	3963253	Argument	result		3963205	1					
ANR	3963254	Identifier	result		3963205	0					
ANR	3963255	PrimaryExpression	0		3963205	1					
ANR	3963256	ReturnStatement	"return update_windows_performance_value ( result , * pquery , pav ) ;"	1766:12:53948:54009	3963205	1	True				
ANR	3963257	CallExpression	"update_windows_performance_value ( result , * pquery , pav )"		3963205	0					
ANR	3963258	Callee	update_windows_performance_value		3963205	0					
ANR	3963259	Identifier	update_windows_performance_value		3963205	0					
ANR	3963260	ArgumentList	result		3963205	1					
ANR	3963261	Argument	result		3963205	0					
ANR	3963262	Identifier	result		3963205	0					
ANR	3963263	Argument	* pquery		3963205	1					
ANR	3963264	UnaryOperationExpression	* pquery		3963205	0					
ANR	3963265	UnaryOperator	*		3963205	0					
ANR	3963266	Identifier	pquery		3963205	1					
ANR	3963267	Argument	pav		3963205	2					
ANR	3963268	Identifier	pav		3963205	0					
ANR	3963269	ReturnStatement	return false ;	1769:4:54022:54034	3963205	3	True				
ANR	3963270	Identifier	false		3963205	0					
ANR	3963271	ReturnType	bool		3963205	1					
ANR	3963272	Identifier	update_WinPerf_Value		3963205	2					
ANR	3963273	ParameterList	AttribValue * pav		3963205	3					
ANR	3963274	Parameter	AttribValue * pav	1756:26:53684:53699	3963205	0	True				
ANR	3963275	ParameterType	AttribValue *		3963205	0					
ANR	3963276	Identifier	pav		3963205	1					
ANR	3963277	CFGEntryNode	ENTRY		3963205		True				
ANR	3963278	CFGExitNode	EXIT		3963205		True				
ANR	3963279	Symbol	* rl		3963205						
ANR	3963280	Symbol	pav		3963205						
ANR	3963281	Symbol	rl . pQueries		3963205						
ANR	3963282	Symbol	false		3963205						
ANR	3963283	Symbol	* pquery		3963205						
ANR	3963284	Symbol	pav -> pquery		3963205						
ANR	3963285	Symbol	* pav		3963205						
ANR	3963286	Symbol	update_windows_performance_value		3963205						
ANR	3963287	Symbol	result		3963205						
ANR	3963288	Symbol	rl . pQueries -> lookup		3963205						
ANR	3963289	Symbol	pquery		3963205						
ANR	3963290	Symbol	* rl . pQueries		3963205						
ANR	3963291	Symbol	rl		3963205						
ANR	3963292	Symbol	pquery -> idKey		3963205						
ANR	3963293	Function	add_WinPerf_Query	1773:0:54040:55870							
ANR	3963294	FunctionDef	"add_WinPerf_Query (const char * pszAttr , const char * pkey)"		3963293	0					
ANR	3963295	CompoundStatement		1776:0:54122:55870	3963293	0					
ANR	3963296	IdentifierDeclStatement	WinPerf_Query query ;	1777:1:54125:54144	3963293	0	True				
ANR	3963297	IdentifierDecl	query		3963293	0					
ANR	3963298	IdentifierDeclType	WinPerf_Query		3963293	0					
ANR	3963299	Identifier	query		3963293	1					
ANR	3963300	IfStatement	"if ( ! init_WinPerf_Query ( pkey , NULL , query ) )"		3963293	1					
ANR	3963301	Condition	"! init_WinPerf_Query ( pkey , NULL , query )"	1778:6:54152:54190	3963293	0	True				
ANR	3963302	UnaryOperationExpression	"! init_WinPerf_Query ( pkey , NULL , query )"		3963293	0					
ANR	3963303	UnaryOperator	!		3963293	0					
ANR	3963304	CallExpression	"init_WinPerf_Query ( pkey , NULL , query )"		3963293	1					
ANR	3963305	Callee	init_WinPerf_Query		3963293	0					
ANR	3963306	Identifier	init_WinPerf_Query		3963293	0					
ANR	3963307	ArgumentList	pkey		3963293	1					
ANR	3963308	Argument	pkey		3963293	0					
ANR	3963309	Identifier	pkey		3963293	0					
ANR	3963310	Argument	NULL		3963293	1					
ANR	3963311	Identifier	NULL		3963293	0					
ANR	3963312	Argument	query		3963293	2					
ANR	3963313	Identifier	query		3963293	0					
ANR	3963314	ReturnStatement	return NULL ;	1779:7:54201:54212	3963293	1	True				
ANR	3963315	Identifier	NULL		3963293	0					
ANR	3963316	IdentifierDeclStatement	int cbQuery = sizeof ( query ) + query . cchInst + 1 ;	1786:1:54469:54515	3963293	2	True				
ANR	3963317	IdentifierDecl	cbQuery = sizeof ( query ) + query . cchInst + 1		3963293	0					
ANR	3963318	IdentifierDeclType	int		3963293	0					
ANR	3963319	Identifier	cbQuery		3963293	1					
ANR	3963320	AssignmentExpression	cbQuery = sizeof ( query ) + query . cchInst + 1		3963293	2		=			
ANR	3963321	Identifier	cbQuery		3963293	0					
ANR	3963322	AdditiveExpression	sizeof ( query ) + query . cchInst + 1		3963293	1		+			
ANR	3963323	SizeofExpression	sizeof ( query )		3963293	0					
ANR	3963324	Sizeof	sizeof		3963293	0					
ANR	3963325	SizeofOperand	query		3963293	1					
ANR	3963326	AdditiveExpression	query . cchInst + 1		3963293	1		+			
ANR	3963327	MemberAccess	query . cchInst		3963293	0					
ANR	3963328	Identifier	query		3963293	0					
ANR	3963329	Identifier	cchInst		3963293	1					
ANR	3963330	PrimaryExpression	1		3963293	1					
ANR	3963331	IdentifierDeclStatement	int cchAttr = strlen ( pszAttr ) + 1 ;	1787:1:54518:54552	3963293	3	True				
ANR	3963332	IdentifierDecl	cchAttr = strlen ( pszAttr ) + 1		3963293	0					
ANR	3963333	IdentifierDeclType	int		3963293	0					
ANR	3963334	Identifier	cchAttr		3963293	1					
ANR	3963335	AssignmentExpression	cchAttr = strlen ( pszAttr ) + 1		3963293	2		=			
ANR	3963336	Identifier	cchAttr		3963293	0					
ANR	3963337	AdditiveExpression	strlen ( pszAttr ) + 1		3963293	1		+			
ANR	3963338	CallExpression	strlen ( pszAttr )		3963293	0					
ANR	3963339	Callee	strlen		3963293	0					
ANR	3963340	Identifier	strlen		3963293	0					
ANR	3963341	ArgumentList	pszAttr		3963293	1					
ANR	3963342	Argument	pszAttr		3963293	0					
ANR	3963343	Identifier	pszAttr		3963293	0					
ANR	3963344	PrimaryExpression	1		3963293	1					
ANR	3963345	IdentifierDeclStatement	int cb = sizeof ( AttribValue ) + cbQuery + cchAttr ;	1788:1:54555:54603	3963293	4	True				
ANR	3963346	IdentifierDecl	cb = sizeof ( AttribValue ) + cbQuery + cchAttr		3963293	0					
ANR	3963347	IdentifierDeclType	int		3963293	0					
ANR	3963348	Identifier	cb		3963293	1					
ANR	3963349	AssignmentExpression	cb = sizeof ( AttribValue ) + cbQuery + cchAttr		3963293	2		=			
ANR	3963350	Identifier	cb		3963293	0					
ANR	3963351	AdditiveExpression	sizeof ( AttribValue ) + cbQuery + cchAttr		3963293	1		+			
ANR	3963352	SizeofExpression	sizeof ( AttribValue )		3963293	0					
ANR	3963353	Sizeof	sizeof		3963293	0					
ANR	3963354	SizeofOperand	AttribValue		3963293	1					
ANR	3963355	AdditiveExpression	cbQuery + cchAttr		3963293	1		+			
ANR	3963356	Identifier	cbQuery		3963293	0					
ANR	3963357	Identifier	cchAttr		3963293	1					
ANR	3963358	IdentifierDeclStatement	AttribValue * pav = ( AttribValue * ) malloc ( cb ) ;	1789:1:54606:54650	3963293	5	True				
ANR	3963359	IdentifierDecl	* pav = ( AttribValue * ) malloc ( cb )		3963293	0					
ANR	3963360	IdentifierDeclType	AttribValue *		3963293	0					
ANR	3963361	Identifier	pav		3963293	1					
ANR	3963362	AssignmentExpression	* pav = ( AttribValue * ) malloc ( cb )		3963293	2		=			
ANR	3963363	Identifier	pav		3963293	0					
ANR	3963364	CastExpression	( AttribValue * ) malloc ( cb )		3963293	1					
ANR	3963365	CastTarget	AttribValue *		3963293	0					
ANR	3963366	CallExpression	malloc ( cb )		3963293	1					
ANR	3963367	Callee	malloc		3963293	0					
ANR	3963368	Identifier	malloc		3963293	0					
ANR	3963369	ArgumentList	cb		3963293	1					
ANR	3963370	Argument	cb		3963293	0					
ANR	3963371	Identifier	cb		3963293	0					
ANR	3963372	IfStatement	if ( pav )		3963293	6					
ANR	3963373	Condition	pav	1790:5:54657:54659	3963293	0	True				
ANR	3963374	Identifier	pav		3963293	0					
ANR	3963375	CompoundStatement		34:2:1036:1093	3963293	1					
ANR	3963376	ExpressionStatement	pav -> cb = cb	1792:2:54671:54683	3963293	0	True				
ANR	3963377	AssignmentExpression	pav -> cb = cb		3963293	0		=			
ANR	3963378	PtrMemberAccess	pav -> cb		3963293	0					
ANR	3963379	Identifier	pav		3963293	0					
ANR	3963380	Identifier	cb		3963293	1					
ANR	3963381	Identifier	cb		3963293	1					
ANR	3963382	ExpressionStatement	"strcpy ( ( char * ) ( pav + 1 ) , pszAttr )"	1793:2:54687:54718	3963293	1	True				
ANR	3963383	CallExpression	"strcpy ( ( char * ) ( pav + 1 ) , pszAttr )"		3963293	0					
ANR	3963384	Callee	strcpy		3963293	0					
ANR	3963385	Identifier	strcpy		3963293	0					
ANR	3963386	ArgumentList	( char * ) ( pav + 1 )		3963293	1					
ANR	3963387	Argument	( char * ) ( pav + 1 )		3963293	0					
ANR	3963388	CastExpression	( char * ) ( pav + 1 )		3963293	0					
ANR	3963389	CastTarget	char *		3963293	0					
ANR	3963390	AdditiveExpression	pav + 1		3963293	1		+			
ANR	3963391	Identifier	pav		3963293	0					
ANR	3963392	PrimaryExpression	1		3963293	1					
ANR	3963393	Argument	pszAttr		3963293	1					
ANR	3963394	Identifier	pszAttr		3963293	0					
ANR	3963395	ExpressionStatement	pav -> pszAttr = ( char * ) ( pav + 1 )	1794:2:54722:54751	3963293	2	True				
ANR	3963396	AssignmentExpression	pav -> pszAttr = ( char * ) ( pav + 1 )		3963293	0		=			
ANR	3963397	PtrMemberAccess	pav -> pszAttr		3963293	0					
ANR	3963398	Identifier	pav		3963293	0					
ANR	3963399	Identifier	pszAttr		3963293	1					
ANR	3963400	CastExpression	( char * ) ( pav + 1 )		3963293	1					
ANR	3963401	CastTarget	char *		3963293	0					
ANR	3963402	AdditiveExpression	pav + 1		3963293	1		+			
ANR	3963403	Identifier	pav		3963293	0					
ANR	3963404	PrimaryExpression	1		3963293	1					
ANR	3963405	ExpressionStatement	pav -> vtype = AttribValue_DataType_Double	1796:2:54756:54796	3963293	3	True				
ANR	3963406	AssignmentExpression	pav -> vtype = AttribValue_DataType_Double		3963293	0		=			
ANR	3963407	PtrMemberAccess	pav -> vtype		3963293	0					
ANR	3963408	Identifier	pav		3963293	0					
ANR	3963409	Identifier	vtype		3963293	1					
ANR	3963410	Identifier	AttribValue_DataType_Double		3963293	1					
ANR	3963411	ExpressionStatement	pav -> value . d = 0.0	1797:2:54800:54818	3963293	4	True				
ANR	3963412	AssignmentExpression	pav -> value . d = 0.0		3963293	0		=			
ANR	3963413	MemberAccess	pav -> value . d		3963293	0					
ANR	3963414	PtrMemberAccess	pav -> value		3963293	0					
ANR	3963415	Identifier	pav		3963293	0					
ANR	3963416	Identifier	value		3963293	1					
ANR	3963417	Identifier	d		3963293	1					
ANR	3963418	PrimaryExpression	0.0		3963293	1					
ANR	3963419	IdentifierDeclStatement	WinPerf_Query * pquery = ( WinPerf_Query * ) ( pav -> pszAttr + cchAttr ) ;	1798:2:54822:54888	3963293	5	True				
ANR	3963420	IdentifierDecl	* pquery = ( WinPerf_Query * ) ( pav -> pszAttr + cchAttr )		3963293	0					
ANR	3963421	IdentifierDeclType	WinPerf_Query *		3963293	0					
ANR	3963422	Identifier	pquery		3963293	1					
ANR	3963423	AssignmentExpression	* pquery = ( WinPerf_Query * ) ( pav -> pszAttr + cchAttr )		3963293	2		=			
ANR	3963424	Identifier	pquery		3963293	0					
ANR	3963425	CastExpression	( WinPerf_Query * ) ( pav -> pszAttr + cchAttr )		3963293	1					
ANR	3963426	CastTarget	WinPerf_Query *		3963293	0					
ANR	3963427	AdditiveExpression	pav -> pszAttr + cchAttr		3963293	1		+			
ANR	3963428	PtrMemberAccess	pav -> pszAttr		3963293	0					
ANR	3963429	Identifier	pav		3963293	0					
ANR	3963430	Identifier	pszAttr		3963293	1					
ANR	3963431	Identifier	cchAttr		3963293	1					
ANR	3963432	ExpressionStatement	* pquery = query	1799:2:54892:54907	3963293	6	True				
ANR	3963433	AssignmentExpression	* pquery = query		3963293	0		=			
ANR	3963434	UnaryOperationExpression	* pquery		3963293	0					
ANR	3963435	UnaryOperator	*		3963293	0					
ANR	3963436	Identifier	pquery		3963293	1					
ANR	3963437	Identifier	query		3963293	1					
ANR	3963438	ExpressionStatement	pquery -> ixInst = 0	1800:2:54911:54929	3963293	7	True				
ANR	3963439	AssignmentExpression	pquery -> ixInst = 0		3963293	0		=			
ANR	3963440	PtrMemberAccess	pquery -> ixInst		3963293	0					
ANR	3963441	Identifier	pquery		3963293	0					
ANR	3963442	Identifier	ixInst		3963293	1					
ANR	3963443	PrimaryExpression	0		3963293	1					
ANR	3963444	IfStatement	if ( pquery -> cchInst )		3963293	8					
ANR	3963445	Condition	pquery -> cchInst	1801:6:54937:54951	3963293	0	True				
ANR	3963446	PtrMemberAccess	pquery -> cchInst		3963293	0					
ANR	3963447	Identifier	pquery		3963293	0					
ANR	3963448	Identifier	cchInst		3963293	1					
ANR	3963449	CompoundStatement		27:8:840:840	3963293	1					
ANR	3963450	ExpressionStatement	"strncpy ( ( char * ) ( pquery + 1 ) , pkey + query . ixInst , query . cchInst )"	1803:3:54968:55030	3963293	0	True				
ANR	3963451	CallExpression	"strncpy ( ( char * ) ( pquery + 1 ) , pkey + query . ixInst , query . cchInst )"		3963293	0					
ANR	3963452	Callee	strncpy		3963293	0					
ANR	3963453	Identifier	strncpy		3963293	0					
ANR	3963454	ArgumentList	( char * ) ( pquery + 1 )		3963293	1					
ANR	3963455	Argument	( char * ) ( pquery + 1 )		3963293	0					
ANR	3963456	CastExpression	( char * ) ( pquery + 1 )		3963293	0					
ANR	3963457	CastTarget	char *		3963293	0					
ANR	3963458	AdditiveExpression	pquery + 1		3963293	1		+			
ANR	3963459	Identifier	pquery		3963293	0					
ANR	3963460	PrimaryExpression	1		3963293	1					
ANR	3963461	Argument	pkey + query . ixInst		3963293	1					
ANR	3963462	AdditiveExpression	pkey + query . ixInst		3963293	0		+			
ANR	3963463	Identifier	pkey		3963293	0					
ANR	3963464	MemberAccess	query . ixInst		3963293	1					
ANR	3963465	Identifier	query		3963293	0					
ANR	3963466	Identifier	ixInst		3963293	1					
ANR	3963467	Argument	query . cchInst		3963293	2					
ANR	3963468	MemberAccess	query . cchInst		3963293	0					
ANR	3963469	Identifier	query		3963293	0					
ANR	3963470	Identifier	cchInst		3963293	1					
ANR	3963471	ExpressionStatement	( ( char * ) ( pquery + 1 ) ) [ query . cchInst ] = 0	1804:3:55035:55073	3963293	1	True				
ANR	3963472	AssignmentExpression	( ( char * ) ( pquery + 1 ) ) [ query . cchInst ] = 0		3963293	0		=			
ANR	3963473	ArrayIndexing	( ( char * ) ( pquery + 1 ) ) [ query . cchInst ]		3963293	0					
ANR	3963474	CastExpression	( char * ) ( pquery + 1 )		3963293	0					
ANR	3963475	CastTarget	char *		3963293	0					
ANR	3963476	AdditiveExpression	pquery + 1		3963293	1		+			
ANR	3963477	Identifier	pquery		3963293	0					
ANR	3963478	PrimaryExpression	1		3963293	1					
ANR	3963479	MemberAccess	query . cchInst		3963293	1					
ANR	3963480	Identifier	query		3963293	0					
ANR	3963481	Identifier	cchInst		3963293	1					
ANR	3963482	PrimaryExpression	0		3963293	1					
ANR	3963483	ExpressionStatement	pav -> pquery = ( void * ) pquery	1806:2:55081:55108	3963293	9	True				
ANR	3963484	AssignmentExpression	pav -> pquery = ( void * ) pquery		3963293	0		=			
ANR	3963485	PtrMemberAccess	pav -> pquery		3963293	0					
ANR	3963486	Identifier	pav		3963293	0					
ANR	3963487	Identifier	pquery		3963293	1					
ANR	3963488	CastExpression	( void * ) pquery		3963293	1					
ANR	3963489	CastTarget	void *		3963293	0					
ANR	3963490	Identifier	pquery		3963293	1					
ANR	3963491	IdentifierDeclStatement	"WinPerf_QueryResult result = { query . idKey , 0 , NULL , NULL } ;"	1809:2:55159:55216	3963293	10	True				
ANR	3963492	IdentifierDecl	"result = { query . idKey , 0 , NULL , NULL }"		3963293	0					
ANR	3963493	IdentifierDeclType	WinPerf_QueryResult		3963293	0					
ANR	3963494	Identifier	result		3963293	1					
ANR	3963495	AssignmentExpression	"result = { query . idKey , 0 , NULL , NULL }"		3963293	2		=			
ANR	3963496	Identifier	result		3963293	0					
ANR	3963497	InitializerList	query . idKey		3963293	1					
ANR	3963498	MemberAccess	query . idKey		3963293	0					
ANR	3963499	Identifier	query		3963293	0					
ANR	3963500	Identifier	idKey		3963293	1					
ANR	3963501	PrimaryExpression	0		3963293	1					
ANR	3963502	Identifier	NULL		3963293	2					
ANR	3963503	Identifier	NULL		3963293	3					
ANR	3963504	ExpressionStatement	"rl . pQueries -> insert ( query . idKey , result )"	1810:2:55220:55260	3963293	11	True				
ANR	3963505	CallExpression	"rl . pQueries -> insert ( query . idKey , result )"		3963293	0					
ANR	3963506	Callee	rl . pQueries -> insert		3963293	0					
ANR	3963507	PtrMemberAccess	rl . pQueries -> insert		3963293	0					
ANR	3963508	MemberAccess	rl . pQueries		3963293	0					
ANR	3963509	Identifier	rl		3963293	0					
ANR	3963510	Identifier	pQueries		3963293	1					
ANR	3963511	Identifier	insert		3963293	1					
ANR	3963512	ArgumentList	query . idKey		3963293	1					
ANR	3963513	Argument	query . idKey		3963293	0					
ANR	3963514	MemberAccess	query . idKey		3963293	0					
ANR	3963515	Identifier	query		3963293	0					
ANR	3963516	Identifier	idKey		3963293	1					
ANR	3963517	Argument	result		3963293	1					
ANR	3963518	Identifier	result		3963293	0					
ANR	3963519	ReturnStatement	return pav ;	1834:4:55858:55868	3963293	7	True				
ANR	3963520	Identifier	pav		3963293	0					
ANR	3963521	ReturnType	AttribValue *		3963293	1					
ANR	3963522	Identifier	add_WinPerf_Query		3963293	2					
ANR	3963523	ParameterList	"const char * pszAttr , const char * pkey"		3963293	3					
ANR	3963524	Parameter	const char * pszAttr	1774:4:54077:54096	3963293	0	True				
ANR	3963525	ParameterType	const char *		3963293	0					
ANR	3963526	Identifier	pszAttr		3963293	1					
ANR	3963527	Parameter	const char * pkey	1775:4:54103:54119	3963293	1	True				
ANR	3963528	ParameterType	const char *		3963293	0					
ANR	3963529	Identifier	pkey		3963293	1					
ANR	3963530	CFGEntryNode	ENTRY		3963293		True				
ANR	3963531	CFGExitNode	EXIT		3963293		True				
ANR	3963532	Symbol	pav -> pszAttr		3963293						
ANR	3963533	Symbol	pquery -> ixInst		3963293						
ANR	3963534	Symbol	* query . cchInst		3963293						
ANR	3963535	Symbol	cbQuery		3963293						
ANR	3963536	Symbol	rl . pQueries		3963293						
ANR	3963537	Symbol	cchAttr		3963293						
ANR	3963538	Symbol	* pquery		3963293						
ANR	3963539	Symbol	pav -> pquery		3963293						
ANR	3963540	Symbol	* pav		3963293						
ANR	3963541	Symbol	result		3963293						
ANR	3963542	Symbol	strlen		3963293						
ANR	3963543	Symbol	pquery		3963293						
ANR	3963544	Symbol	query . idKey		3963293						
ANR	3963545	Symbol	pkey		3963293						
ANR	3963546	Symbol	* query		3963293						
ANR	3963547	Symbol	pquery -> cchInst		3963293						
ANR	3963548	Symbol	cb		3963293						
ANR	3963549	Symbol	pav -> cb		3963293						
ANR	3963550	Symbol	malloc		3963293						
ANR	3963551	Symbol	NULL		3963293						
ANR	3963552	Symbol	pav		3963293						
ANR	3963553	Symbol	pszAttr		3963293						
ANR	3963554	Symbol	query		3963293						
ANR	3963555	Symbol	pav -> value . d		3963293						
ANR	3963556	Symbol	pav -> vtype		3963293						
ANR	3963557	Symbol	query . cchInst		3963293						
ANR	3963558	Symbol	init_WinPerf_Query		3963293						
ANR	3963559	Symbol	rl		3963293						
ANR	3963560	Symbol	pav -> value		3963293						
ANR	3963561	Symbol	AttribValue_DataType_Double		3963293						
ANR	3963562	Symbol	query . ixInst		3963293						
