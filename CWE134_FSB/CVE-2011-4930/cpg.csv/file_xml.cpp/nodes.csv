command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1349423	File	data/converged/CVE-2011-4930_htcondor/file_xml.cpp								
ANR	1349424	Function	FILEXML :: file_readAttrList	32:0:1035:1226							
ANR	1349425	FunctionDef	FILEXML :: file_readAttrList ()		1349424	0					
ANR	1349426	CompoundStatement		33:0:1075:1226	1349424	0					
ANR	1349427	IdentifierDeclStatement	AttrList * ad = 0 ;	34:1:1078:1094	1349424	0	True				
ANR	1349428	IdentifierDecl	* ad = 0		1349424	0					
ANR	1349429	IdentifierDeclType	AttrList *		1349424	0					
ANR	1349430	Identifier	ad		1349424	1					
ANR	1349431	AssignmentExpression	* ad = 0		1349424	2		=			
ANR	1349432	Identifier	ad		1349424	0					
ANR	1349433	PrimaryExpression	0		1349424	1					
ANR	1349434	IfStatement	if ( is_dummy )		1349424	1					
ANR	1349435	Condition	is_dummy	36:8:1105:1112	1349424	0	True				
ANR	1349436	Identifier	is_dummy		1349424	0					
ANR	1349437	ReturnStatement	return ad ;	36:18:1115:1124	1349424	1	True				
ANR	1349438	Identifier	ad		1349424	0					
ANR	1349439	ExpressionStatement	"dprintf ( D_ALWAYS , ""file_readAttrList: Method not implemented for XML log files\\n"" )"	38:1:1128:1211	1349424	2	True				
ANR	1349440	CallExpression	"dprintf ( D_ALWAYS , ""file_readAttrList: Method not implemented for XML log files\\n"" )"		1349424	0					
ANR	1349441	Callee	dprintf		1349424	0					
ANR	1349442	Identifier	dprintf		1349424	0					
ANR	1349443	ArgumentList	D_ALWAYS		1349424	1					
ANR	1349444	Argument	D_ALWAYS		1349424	0					
ANR	1349445	Identifier	D_ALWAYS		1349424	0					
ANR	1349446	Argument	"""file_readAttrList: Method not implemented for XML log files\\n"""		1349424	1					
ANR	1349447	PrimaryExpression	"""file_readAttrList: Method not implemented for XML log files\\n"""		1349424	0					
ANR	1349448	ReturnStatement	return ad ;	40:1:1215:1224	1349424	3	True				
ANR	1349449	Identifier	ad		1349424	0					
ANR	1349450	ReturnType	AttrList *		1349424	1					
ANR	1349451	Identifier	FILEXML :: file_readAttrList		1349424	2					
ANR	1349452	ParameterList			1349424	3					
ANR	1349453	CFGEntryNode	ENTRY		1349424		True				
ANR	1349454	CFGExitNode	EXIT		1349424		True				
ANR	1349455	Symbol	ad		1349424						
ANR	1349456	Symbol	D_ALWAYS		1349424						
ANR	1349457	Symbol	is_dummy		1349424						
ANR	1349458	DeclStmt									
ANR	1349459	Decl							int	int	retval
ANR	1349460	DeclStmt									
ANR	1349461	Decl							struct stat	struct stat	file_status
ANR	1349462	DeclStmt									
ANR	1349463	Decl							int	int	xml_log_limit
ANR	1349464	DeclStmt									
ANR	1349465	Decl							MyString	MyString	temp
ANR	1349466	DeclStmt									
ANR	1349467	Decl							const char	const char *	tag
ANR	1349468	DeclStmt									
ANR	1349469	Decl							const char	const char *	val_temp
ANR	1349470	DeclStmt									
ANR	1349471	Decl							ExprTree	ExprTree *	value
ANR	1349472	Function	FILEXML :: file_deleteEvent	114:0:2866:3072							
ANR	1349473	FunctionDef	"FILEXML :: file_deleteEvent (const char * eventType , AttrList * condition)"		1349472	0					
ANR	1349474	CompoundStatement		115:33:2962:3072	1349472	0					
ANR	1349475	ExpressionStatement	"dprintf ( D_ALWAYS , ""file_deleteEvent: Method not implemented for XML log files\\n"" )"	117:1:2966:3046	1349472	0	True				
ANR	1349476	CallExpression	"dprintf ( D_ALWAYS , ""file_deleteEvent: Method not implemented for XML log files\\n"" )"		1349472	0					
ANR	1349477	Callee	dprintf		1349472	0					
ANR	1349478	Identifier	dprintf		1349472	0					
ANR	1349479	ArgumentList	D_ALWAYS		1349472	1					
ANR	1349480	Argument	D_ALWAYS		1349472	0					
ANR	1349481	Identifier	D_ALWAYS		1349472	0					
ANR	1349482	Argument	"""file_deleteEvent: Method not implemented for XML log files\\n"""		1349472	1					
ANR	1349483	PrimaryExpression	"""file_deleteEvent: Method not implemented for XML log files\\n"""		1349472	0					
ANR	1349484	ReturnStatement	return QUILL_FAILURE ;	118:1:3049:3069	1349472	1	True				
ANR	1349485	Identifier	QUILL_FAILURE		1349472	0					
ANR	1349486	ReturnType	QuillErrCode		1349472	1					
ANR	1349487	Identifier	FILEXML :: file_deleteEvent		1349472	2					
ANR	1349488	ParameterList	"const char * eventType , AttrList * condition"		1349472	3					
ANR	1349489	Parameter	const char * eventType	114:39:2905:2925	1349472	0	True				
ANR	1349490	ParameterType	const char *		1349472	0					
ANR	1349491	Identifier	eventType		1349472	1					
ANR	1349492	Parameter	AttrList * condition	115:12:2941:2959	1349472	1	True				
ANR	1349493	ParameterType	AttrList *		1349472	0					
ANR	1349494	Identifier	condition		1349472	1					
ANR	1349495	CFGEntryNode	ENTRY		1349472		True				
ANR	1349496	CFGExitNode	EXIT		1349472		True				
ANR	1349497	Symbol	condition		1349472						
ANR	1349498	Symbol	D_ALWAYS		1349472						
ANR	1349499	Symbol	eventType		1349472						
ANR	1349500	Symbol	QUILL_FAILURE		1349472						
ANR	1349501	DeclStmt									
ANR	1349502	Decl							FILEXML	FILEXML *	XMLObj
ANR	1349503	Function	FILEXML :: createInstanceXML	133:11:3578:4708							
ANR	1349504	FunctionDef	FILEXML :: createInstanceXML ()		1349503	0					
ANR	1349505	CompoundStatement		134:29:3617:4708	1349503	0					
ANR	1349506	IdentifierDeclStatement	FILEXML * ptr = NULL ;	135:1:3621:3640	1349503	0	True				
ANR	1349507	IdentifierDecl	* ptr = NULL		1349503	0					
ANR	1349508	IdentifierDeclType	FILEXML *		1349503	0					
ANR	1349509	Identifier	ptr		1349503	1					
ANR	1349510	AssignmentExpression	* ptr = NULL		1349503	2		=			
ANR	1349511	Identifier	NULL		1349503	0					
ANR	1349512	Identifier	NULL		1349503	1					
ANR	1349513	IdentifierDeclStatement	"char * tmp , * outfilename ;"	136:1:3643:3666	1349503	1	True				
ANR	1349514	IdentifierDecl	* tmp		1349503	0					
ANR	1349515	IdentifierDeclType	char *		1349503	0					
ANR	1349516	Identifier	tmp		1349503	1					
ANR	1349517	IdentifierDecl	* outfilename		1349503	1					
ANR	1349518	IdentifierDeclType	char *		1349503	0					
ANR	1349519	Identifier	outfilename		1349503	1					
ANR	1349520	IdentifierDeclStatement	char * tmpParamName ;	137:1:3669:3687	1349503	2	True				
ANR	1349521	IdentifierDecl	* tmpParamName		1349503	0					
ANR	1349522	IdentifierDeclType	char *		1349503	0					
ANR	1349523	Identifier	tmpParamName		1349503	1					
ANR	1349524	IdentifierDeclStatement	const char * daemon_name ;	138:1:3690:3713	1349503	3	True				
ANR	1349525	IdentifierDecl	* daemon_name		1349503	0					
ANR	1349526	IdentifierDeclType	const char *		1349503	0					
ANR	1349527	Identifier	daemon_name		1349503	1					
ANR	1349528	IdentifierDeclStatement	bool want_xml_log = false ;	139:4:3719:3744	1349503	4	True				
ANR	1349529	IdentifierDecl	want_xml_log = false		1349503	0					
ANR	1349530	IdentifierDeclType	bool		1349503	0					
ANR	1349531	Identifier	want_xml_log		1349503	1					
ANR	1349532	AssignmentExpression	want_xml_log = false		1349503	2		=			
ANR	1349533	Identifier	false		1349503	0					
ANR	1349534	Identifier	false		1349503	1					
ANR	1349535	ExpressionStatement	"want_xml_log = param_boolean ( ""WANT_XML_LOG"" , false )"	141:4:3751:3802	1349503	5	True				
ANR	1349536	AssignmentExpression	"want_xml_log = param_boolean ( ""WANT_XML_LOG"" , false )"		1349503	0		=			
ANR	1349537	Identifier	want_xml_log		1349503	0					
ANR	1349538	CallExpression	"param_boolean ( ""WANT_XML_LOG"" , false )"		1349503	1					
ANR	1349539	Callee	param_boolean		1349503	0					
ANR	1349540	Identifier	param_boolean		1349503	0					
ANR	1349541	ArgumentList	"""WANT_XML_LOG"""		1349503	1					
ANR	1349542	Argument	"""WANT_XML_LOG"""		1349503	0					
ANR	1349543	PrimaryExpression	"""WANT_XML_LOG"""		1349503	0					
ANR	1349544	Argument	false		1349503	1					
ANR	1349545	Identifier	false		1349503	0					
ANR	1349546	IfStatement	if ( ! want_xml_log )		1349503	6					
ANR	1349547	Condition	! want_xml_log	143:9:3814:3827	1349503	0	True				
ANR	1349548	UnaryOperationExpression	! want_xml_log		1349503	0					
ANR	1349549	UnaryOperator	!		1349503	0					
ANR	1349550	Identifier	want_xml_log		1349503	1					
ANR	1349551	CompoundStatement		10:26:213:213	1349503	1					
ANR	1349552	ExpressionStatement	ptr = new FILEXML ( )	144:8:3908:3927	1349503	0	True				
ANR	1349553	AssignmentExpression	ptr = new FILEXML ( )		1349503	0		=			
ANR	1349554	Identifier	ptr		1349503	0					
ANR	1349555	UnaryExpression	new FILEXML ( )		1349503	1					
ANR	1349556	ReturnStatement	return ptr ;	145:8:3937:3947	1349503	1	True				
ANR	1349557	Identifier	ptr		1349503	0					
ANR	1349558	ExpressionStatement	daemon_name = get_mySubSystem ( ) -> getName ( )	147:1:3956:3998	1349503	7	True				
ANR	1349559	AssignmentExpression	daemon_name = get_mySubSystem ( ) -> getName ( )		1349503	0		=			
ANR	1349560	Identifier	daemon_name		1349503	0					
ANR	1349561	CallExpression	get_mySubSystem ( ) -> getName ( )		1349503	1					
ANR	1349562	Callee	get_mySubSystem ( ) -> getName		1349503	0					
ANR	1349563	PtrMemberAccess	get_mySubSystem ( ) -> getName		1349503	0					
ANR	1349564	CallExpression	get_mySubSystem ( )		1349503	0					
ANR	1349565	Callee	get_mySubSystem		1349503	0					
ANR	1349566	Identifier	get_mySubSystem		1349503	0					
ANR	1349567	ArgumentList			1349503	1					
ANR	1349568	Identifier	getName		1349503	1					
ANR	1349569	ArgumentList			1349503	1					
ANR	1349570	ExpressionStatement	tmpParamName = ( char * ) malloc ( 10 + strlen ( daemon_name ) )	149:1:4002:4055	1349503	8	True				
ANR	1349571	AssignmentExpression	tmpParamName = ( char * ) malloc ( 10 + strlen ( daemon_name ) )		1349503	0		=			
ANR	1349572	Identifier	tmpParamName		1349503	0					
ANR	1349573	CastExpression	( char * ) malloc ( 10 + strlen ( daemon_name ) )		1349503	1					
ANR	1349574	CastTarget	char *		1349503	0					
ANR	1349575	CallExpression	malloc ( 10 + strlen ( daemon_name ) )		1349503	1					
ANR	1349576	Callee	malloc		1349503	0					
ANR	1349577	Identifier	malloc		1349503	0					
ANR	1349578	ArgumentList	10 + strlen ( daemon_name )		1349503	1					
ANR	1349579	Argument	10 + strlen ( daemon_name )		1349503	0					
ANR	1349580	AdditiveExpression	10 + strlen ( daemon_name )		1349503	0		+			
ANR	1349581	PrimaryExpression	10		1349503	0					
ANR	1349582	CallExpression	strlen ( daemon_name )		1349503	1					
ANR	1349583	Callee	strlen		1349503	0					
ANR	1349584	Identifier	strlen		1349503	0					
ANR	1349585	ArgumentList	daemon_name		1349503	1					
ANR	1349586	Argument	daemon_name		1349503	0					
ANR	1349587	Identifier	daemon_name		1349503	0					
ANR	1349588	ExpressionStatement	"sprintf ( tmpParamName , ""%s_XMLLOG"" , daemon_name )"	152:1:4113:4160	1349503	9	True				
ANR	1349589	CallExpression	"sprintf ( tmpParamName , ""%s_XMLLOG"" , daemon_name )"		1349503	0					
ANR	1349590	Callee	sprintf		1349503	0					
ANR	1349591	Identifier	sprintf		1349503	0					
ANR	1349592	ArgumentList	tmpParamName		1349503	1					
ANR	1349593	Argument	tmpParamName		1349503	0					
ANR	1349594	Identifier	tmpParamName		1349503	0					
ANR	1349595	Argument	"""%s_XMLLOG"""		1349503	1					
ANR	1349596	PrimaryExpression	"""%s_XMLLOG"""		1349503	0					
ANR	1349597	Argument	daemon_name		1349503	2					
ANR	1349598	Identifier	daemon_name		1349503	0					
ANR	1349599	ExpressionStatement	tmp = param ( tmpParamName )	153:1:4163:4188	1349503	10	True				
ANR	1349600	AssignmentExpression	tmp = param ( tmpParamName )		1349503	0		=			
ANR	1349601	Identifier	tmp		1349503	0					
ANR	1349602	CallExpression	param ( tmpParamName )		1349503	1					
ANR	1349603	Callee	param		1349503	0					
ANR	1349604	Identifier	param		1349503	0					
ANR	1349605	ArgumentList	tmpParamName		1349503	1					
ANR	1349606	Argument	tmpParamName		1349503	0					
ANR	1349607	Identifier	tmpParamName		1349503	0					
ANR	1349608	ExpressionStatement	free ( tmpParamName )	154:1:4191:4209	1349503	11	True				
ANR	1349609	CallExpression	free ( tmpParamName )		1349503	0					
ANR	1349610	Callee	free		1349503	0					
ANR	1349611	Identifier	free		1349503	0					
ANR	1349612	ArgumentList	tmpParamName		1349503	1					
ANR	1349613	Argument	tmpParamName		1349503	0					
ANR	1349614	Identifier	tmpParamName		1349503	0					
ANR	1349615	IfStatement	if ( tmp )		1349503	12					
ANR	1349616	Condition	tmp	156:5:4217:4219	1349503	0	True				
ANR	1349617	Identifier	tmp		1349503	0					
ANR	1349618	CompoundStatement		23:11:605:605	1349503	1					
ANR	1349619	ExpressionStatement	outfilename = tmp	157:2:4227:4244	1349503	0	True				
ANR	1349620	AssignmentExpression	outfilename = tmp		1349503	0		=			
ANR	1349621	Identifier	outfilename		1349503	0					
ANR	1349622	Identifier	tmp		1349503	1					
ANR	1349623	ElseStatement	else		1349503	0					
ANR	1349624	CompoundStatement		26:6:637:637	1349503	0					
ANR	1349625	ExpressionStatement	"tmp = param ( ""LOG"" )"	160:2:4259:4278	1349503	0	True				
ANR	1349626	AssignmentExpression	"tmp = param ( ""LOG"" )"		1349503	0		=			
ANR	1349627	Identifier	tmp		1349503	0					
ANR	1349628	CallExpression	"param ( ""LOG"" )"		1349503	1					
ANR	1349629	Callee	param		1349503	0					
ANR	1349630	Identifier	param		1349503	0					
ANR	1349631	ArgumentList	"""LOG"""		1349503	1					
ANR	1349632	Argument	"""LOG"""		1349503	0					
ANR	1349633	PrimaryExpression	"""LOG"""		1349503	0					
ANR	1349634	IfStatement	if ( tmp )		1349503	1					
ANR	1349635	Condition	tmp	162:6:4289:4291	1349503	0	True				
ANR	1349636	Identifier	tmp		1349503	0					
ANR	1349637	CompoundStatement		29:11:676:676	1349503	1					
ANR	1349638	ExpressionStatement	outfilename = ( char * ) malloc ( strlen ( tmp ) + 12 )	163:3:4299:4345	1349503	0	True				
ANR	1349639	AssignmentExpression	outfilename = ( char * ) malloc ( strlen ( tmp ) + 12 )		1349503	0		=			
ANR	1349640	Identifier	outfilename		1349503	0					
ANR	1349641	CastExpression	( char * ) malloc ( strlen ( tmp ) + 12 )		1349503	1					
ANR	1349642	CastTarget	char *		1349503	0					
ANR	1349643	CallExpression	malloc ( strlen ( tmp ) + 12 )		1349503	1					
ANR	1349644	Callee	malloc		1349503	0					
ANR	1349645	Identifier	malloc		1349503	0					
ANR	1349646	ArgumentList	strlen ( tmp ) + 12		1349503	1					
ANR	1349647	Argument	strlen ( tmp ) + 12		1349503	0					
ANR	1349648	AdditiveExpression	strlen ( tmp ) + 12		1349503	0		+			
ANR	1349649	CallExpression	strlen ( tmp )		1349503	0					
ANR	1349650	Callee	strlen		1349503	0					
ANR	1349651	Identifier	strlen		1349503	0					
ANR	1349652	ArgumentList	tmp		1349503	1					
ANR	1349653	Argument	tmp		1349503	0					
ANR	1349654	Identifier	tmp		1349503	0					
ANR	1349655	PrimaryExpression	12		1349503	1					
ANR	1349656	ExpressionStatement	"sprintf ( outfilename , ""%s/Events.xml"" , tmp )"	164:3:4350:4392	1349503	1	True				
ANR	1349657	CallExpression	"sprintf ( outfilename , ""%s/Events.xml"" , tmp )"		1349503	0					
ANR	1349658	Callee	sprintf		1349503	0					
ANR	1349659	Identifier	sprintf		1349503	0					
ANR	1349660	ArgumentList	outfilename		1349503	1					
ANR	1349661	Argument	outfilename		1349503	0					
ANR	1349662	Identifier	outfilename		1349503	0					
ANR	1349663	Argument	"""%s/Events.xml"""		1349503	1					
ANR	1349664	PrimaryExpression	"""%s/Events.xml"""		1349503	0					
ANR	1349665	Argument	tmp		1349503	2					
ANR	1349666	Identifier	tmp		1349503	0					
ANR	1349667	ExpressionStatement	free ( tmp )	165:3:4397:4406	1349503	2	True				
ANR	1349668	CallExpression	free ( tmp )		1349503	0					
ANR	1349669	Callee	free		1349503	0					
ANR	1349670	Identifier	free		1349503	0					
ANR	1349671	ArgumentList	tmp		1349503	1					
ANR	1349672	Argument	tmp		1349503	0					
ANR	1349673	Identifier	tmp		1349503	0					
ANR	1349674	ElseStatement	else		1349503	0					
ANR	1349675	CompoundStatement		34:7:801:801	1349503	0					
ANR	1349676	ExpressionStatement	outfilename = ( char * ) malloc ( 11 )	168:3:4424:4456	1349503	0	True				
ANR	1349677	AssignmentExpression	outfilename = ( char * ) malloc ( 11 )		1349503	0		=			
ANR	1349678	Identifier	outfilename		1349503	0					
ANR	1349679	CastExpression	( char * ) malloc ( 11 )		1349503	1					
ANR	1349680	CastTarget	char *		1349503	0					
ANR	1349681	CallExpression	malloc ( 11 )		1349503	1					
ANR	1349682	Callee	malloc		1349503	0					
ANR	1349683	Identifier	malloc		1349503	0					
ANR	1349684	ArgumentList	11		1349503	1					
ANR	1349685	Argument	11		1349503	0					
ANR	1349686	PrimaryExpression	11		1349503	0					
ANR	1349687	ExpressionStatement	"sprintf ( outfilename , ""Events.xml"" )"	169:3:4461:4495	1349503	1	True				
ANR	1349688	CallExpression	"sprintf ( outfilename , ""Events.xml"" )"		1349503	0					
ANR	1349689	Callee	sprintf		1349503	0					
ANR	1349690	Identifier	sprintf		1349503	0					
ANR	1349691	ArgumentList	outfilename		1349503	1					
ANR	1349692	Argument	outfilename		1349503	0					
ANR	1349693	Identifier	outfilename		1349503	0					
ANR	1349694	Argument	"""Events.xml"""		1349503	1					
ANR	1349695	PrimaryExpression	"""Events.xml"""		1349503	0					
ANR	1349696	ExpressionStatement	"ptr = new FILEXML ( outfilename , O_WRONLY | O_CREAT | O_APPEND , true )"	173:1:4506:4569	1349503	13	True				
ANR	1349697	AssignmentExpression	"ptr = new FILEXML ( outfilename , O_WRONLY | O_CREAT | O_APPEND , true )"		1349503	0		=			
ANR	1349698	Identifier	ptr		1349503	0					
ANR	1349699	Expression	"outfilename , O_WRONLY | O_CREAT | O_APPEND , true"		1349503	1					
ANR	1349700	Identifier	outfilename		1349503	0					
ANR	1349701	Expression	"O_WRONLY | O_CREAT | O_APPEND , true"		1349503	1					
ANR	1349702	InclusiveOrExpression	O_WRONLY | O_CREAT | O_APPEND		1349503	0		|			
ANR	1349703	Identifier	O_WRONLY		1349503	0					
ANR	1349704	InclusiveOrExpression	O_CREAT | O_APPEND		1349503	1		|			
ANR	1349705	Identifier	O_CREAT		1349503	0					
ANR	1349706	Identifier	O_APPEND		1349503	1					
ANR	1349707	Identifier	true		1349503	1					
ANR	1349708	ExpressionStatement	free ( outfilename )	175:1:4573:4590	1349503	14	True				
ANR	1349709	CallExpression	free ( outfilename )		1349503	0					
ANR	1349710	Callee	free		1349503	0					
ANR	1349711	Identifier	free		1349503	0					
ANR	1349712	ArgumentList	outfilename		1349503	1					
ANR	1349713	Argument	outfilename		1349503	0					
ANR	1349714	Identifier	outfilename		1349503	0					
ANR	1349715	IfStatement	if ( ptr -> file_open ( ) == QUILL_FAILURE )		1349503	15					
ANR	1349716	Condition	ptr -> file_open ( ) == QUILL_FAILURE	177:5:4598:4630	1349503	0	True				
ANR	1349717	EqualityExpression	ptr -> file_open ( ) == QUILL_FAILURE		1349503	0		==			
ANR	1349718	CallExpression	ptr -> file_open ( )		1349503	0					
ANR	1349719	Callee	ptr -> file_open		1349503	0					
ANR	1349720	PtrMemberAccess	ptr -> file_open		1349503	0					
ANR	1349721	Identifier	ptr		1349503	0					
ANR	1349722	Identifier	file_open		1349503	1					
ANR	1349723	ArgumentList			1349503	1					
ANR	1349724	Identifier	QUILL_FAILURE		1349503	1					
ANR	1349725	CompoundStatement		44:40:1015:1015	1349503	1					
ANR	1349726	ExpressionStatement	"dprintf ( D_ALWAYS , ""FILEXML createInstance failed\\n"" )"	178:2:4637:4689	1349503	0	True				
ANR	1349727	CallExpression	"dprintf ( D_ALWAYS , ""FILEXML createInstance failed\\n"" )"		1349503	0					
ANR	1349728	Callee	dprintf		1349503	0					
ANR	1349729	Identifier	dprintf		1349503	0					
ANR	1349730	ArgumentList	D_ALWAYS		1349503	1					
ANR	1349731	Argument	D_ALWAYS		1349503	0					
ANR	1349732	Identifier	D_ALWAYS		1349503	0					
ANR	1349733	Argument	"""FILEXML createInstance failed\\n"""		1349503	1					
ANR	1349734	PrimaryExpression	"""FILEXML createInstance failed\\n"""		1349503	0					
ANR	1349735	ReturnStatement	return ptr ;	181:1:4696:4706	1349503	16	True				
ANR	1349736	Identifier	ptr		1349503	0					
ANR	1349737	ReturnType	FILEXML *		1349503	1					
ANR	1349738	Identifier	FILEXML :: createInstanceXML		1349503	2					
ANR	1349739	ParameterList			1349503	3					
ANR	1349740	CFGEntryNode	ENTRY		1349503		True				
ANR	1349741	CFGExitNode	EXIT		1349503		True				
ANR	1349742	Symbol	malloc		1349503						
ANR	1349743	Symbol	NULL		1349503						
ANR	1349744	Symbol	get_mySubSystem ( ) -> getName		1349503						
ANR	1349745	Symbol	outfilename		1349503						
ANR	1349746	Symbol	* get_mySubSystem		1349503						
ANR	1349747	Symbol	daemon_name		1349503						
ANR	1349748	Symbol	O_CREAT		1349503						
ANR	1349749	Symbol	ptr -> file_open		1349503						
ANR	1349750	Symbol	tmpParamName		1349503						
ANR	1349751	Symbol	false		1349503						
ANR	1349752	Symbol	D_ALWAYS		1349503						
ANR	1349753	Symbol	param_boolean		1349503						
ANR	1349754	Symbol	want_xml_log		1349503						
ANR	1349755	Symbol	QUILL_FAILURE		1349503						
ANR	1349756	Symbol	O_APPEND		1349503						
ANR	1349757	Symbol	ptr		1349503						
ANR	1349758	Symbol	strlen		1349503						
ANR	1349759	Symbol	param		1349503						
ANR	1349760	Symbol	tmp		1349503						
ANR	1349761	Symbol	true		1349503						
ANR	1349762	Symbol	* ptr		1349503						
ANR	1349763	Symbol	O_WRONLY		1349503						
ANR	1349764	Symbol	get_mySubSystem		1349503						
