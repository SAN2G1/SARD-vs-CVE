command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	81910	File	data/converged/CVE-2011-4930_htcondor/AviaryJob_ControlJobResponse.cpp								
ANR	81911	Function	AviaryJob :: ControlJobResponse :: ControlJobResponse	26:11:732:913							
ANR	81912	FunctionDef	AviaryJob :: ControlJobResponse :: ControlJobResponse ()		81911	0					
ANR	81913	CompoundStatement		27:8:792:913	81911	0					
ANR	81914	ExpressionStatement	property_Status = NULL	30:16:820:843	81911	0	True				
ANR	81915	AssignmentExpression	property_Status = NULL		81911	0		=			
ANR	81916	Identifier	property_Status		81911	0					
ANR	81917	Identifier	NULL		81911	1					
ANR	81918	ExpressionStatement	isValidStatus = false	32:12:872:894	81911	1	True				
ANR	81919	AssignmentExpression	isValidStatus = false		81911	0		=			
ANR	81920	Identifier	isValidStatus		81911	0					
ANR	81921	Identifier	false		81911	1					
ANR	81922	Identifier	AviaryJob :: ControlJobResponse :: ControlJobResponse		81911	1					
ANR	81923	ParameterList			81911	2					
ANR	81924	CFGEntryNode	ENTRY		81911		True				
ANR	81925	CFGExitNode	EXIT		81911		True				
ANR	81926	Symbol	property_Status		81911						
ANR	81927	Symbol	NULL		81911						
ANR	81928	Symbol	false		81911						
ANR	81929	Symbol	isValidStatus		81911						
ANR	81930	Function	AviaryJob :: ControlJobResponse :: ControlJobResponse	36:7:923:1204							
ANR	81931	FunctionDef	AviaryJob :: ControlJobResponse :: ControlJobResponse (AviaryCommon :: Status * arg_Status)		81930	0					
ANR	81932	CompoundStatement		37:8:1015:1204	81930	0					
ANR	81933	ExpressionStatement	property_Status = NULL	39:15:1046:1069	81930	0	True				
ANR	81934	AssignmentExpression	property_Status = NULL		81930	0		=			
ANR	81935	Identifier	property_Status		81930	0					
ANR	81936	Identifier	NULL		81930	1					
ANR	81937	ExpressionStatement	isValidStatus = true	41:12:1097:1118	81930	1	True				
ANR	81938	AssignmentExpression	isValidStatus = true		81930	0		=			
ANR	81939	Identifier	isValidStatus		81930	0					
ANR	81940	Identifier	true		81930	1					
ANR	81941	ExpressionStatement	property_Status = arg_Status	43:20:1153:1181	81930	2	True				
ANR	81942	AssignmentExpression	property_Status = arg_Status		81930	0		=			
ANR	81943	Identifier	property_Status		81930	0					
ANR	81944	Identifier	arg_Status		81930	1					
ANR	81945	Identifier	AviaryJob :: ControlJobResponse :: ControlJobResponse		81930	1					
ANR	81946	ParameterList	AviaryCommon :: Status * arg_Status		81930	2					
ANR	81947	Parameter	AviaryCommon :: Status * arg_Status	36:57:973:1004	81930	0	True				
ANR	81948	ParameterType	AviaryCommon :: Status *		81930	0					
ANR	81949	Identifier	arg_Status		81930	1					
ANR	81950	CFGEntryNode	ENTRY		81930		True				
ANR	81951	CFGExitNode	EXIT		81930		True				
ANR	81952	Symbol	property_Status		81930						
ANR	81953	Symbol	arg_Status		81930						
ANR	81954	Symbol	NULL		81930						
ANR	81955	Symbol	true		81930						
ANR	81956	Symbol	isValidStatus		81930						
ANR	81957	Function	AviaryJob :: ControlJobResponse :: ~ControlJobResponse	46:8:1214:1342							
ANR	81958	FunctionDef	AviaryJob :: ControlJobResponse :: ~ControlJobResponse ()		81957	0					
ANR	81959	CompoundStatement		47:8:1275:1342	81957	0					
ANR	81960	IfStatement	if ( property_Status )		81957	0					
ANR	81961	Condition	property_Status	48:16:1293:1307	81957	0	True				
ANR	81962	Identifier	property_Status		81957	0					
ANR	81963	Statement	delete	48:33:1310:1315	81957	1	True				
ANR	81964	ExpressionStatement	property_Status	48:40:1317:1332	81957	1	True				
ANR	81965	Identifier	property_Status		81957	0					
ANR	81966	Identifier	AviaryJob :: ControlJobResponse :: ~ControlJobResponse		81957	1					
ANR	81967	ParameterList			81957	2					
ANR	81968	CFGEntryNode	ENTRY		81957		True				
ANR	81969	CFGExitNode	EXIT		81957		True				
ANR	81970	Symbol	property_Status		81957						
ANR	81971	Function	AviaryJob :: ControlJobResponse :: deserialize	53:8:1363:6768							
ANR	81972	FunctionDef	"AviaryJob :: ControlJobResponse :: deserialize (axiom_node_t * * dp_parent , bool * dp_is_early_node_valid , bool dont_care_minoccurs)"		81971	0					
ANR	81973	CompoundStatement		55:8:1517:6768	81971	0					
ANR	81974	IdentifierDeclStatement	axiom_node_t * parent = * dp_parent ;	56:10:1529:1562	81971	0	True				
ANR	81975	IdentifierDecl	* parent = * dp_parent		81971	0					
ANR	81976	IdentifierDeclType	axiom_node_t *		81971	0					
ANR	81977	Identifier	parent		81971	1					
ANR	81978	AssignmentExpression	* parent = * dp_parent		81971	2		=			
ANR	81979	Identifier	parent		81971	0					
ANR	81980	UnaryOperationExpression	* dp_parent		81971	1					
ANR	81981	UnaryOperator	*		81971	0					
ANR	81982	Identifier	dp_parent		81971	1					
ANR	81983	IdentifierDeclStatement	bool status = AXIS2_SUCCESS ;	58:10:1585:1612	81971	1	True				
ANR	81984	IdentifierDecl	status = AXIS2_SUCCESS		81971	0					
ANR	81985	IdentifierDeclType	bool		81971	0					
ANR	81986	Identifier	status		81971	1					
ANR	81987	AssignmentExpression	status = AXIS2_SUCCESS		81971	2		=			
ANR	81988	Identifier	AXIS2_SUCCESS		81971	0					
ANR	81989	Identifier	AXIS2_SUCCESS		81971	1					
ANR	81990	IdentifierDeclStatement	const axis2_char_t * text_value = NULL ;	60:9:1635:1672	81971	2	True				
ANR	81991	IdentifierDecl	* text_value = NULL		81971	0					
ANR	81992	IdentifierDeclType	const axis2_char_t *		81971	0					
ANR	81993	Identifier	text_value		81971	1					
ANR	81994	AssignmentExpression	* text_value = NULL		81971	2		=			
ANR	81995	Identifier	NULL		81971	0					
ANR	81996	Identifier	NULL		81971	1					
ANR	81997	IdentifierDeclStatement	axutil_qname_t * mqname = NULL ;	61:9:1683:1712	81971	3	True				
ANR	81998	IdentifierDecl	* mqname = NULL		81971	0					
ANR	81999	IdentifierDeclType	axutil_qname_t *		81971	0					
ANR	82000	Identifier	mqname		81971	1					
ANR	82001	AssignmentExpression	* mqname = NULL		81971	2		=			
ANR	82002	Identifier	NULL		81971	0					
ANR	82003	Identifier	NULL		81971	1					
ANR	82004	IdentifierDeclStatement	axutil_qname_t * element_qname = NULL ;	63:12:1737:1773	81971	4	True				
ANR	82005	IdentifierDecl	* element_qname = NULL		81971	0					
ANR	82006	IdentifierDeclType	axutil_qname_t *		81971	0					
ANR	82007	Identifier	element_qname		81971	1					
ANR	82008	AssignmentExpression	* element_qname = NULL		81971	2		=			
ANR	82009	Identifier	NULL		81971	0					
ANR	82010	Identifier	NULL		81971	1					
ANR	82011	IdentifierDeclStatement	axiom_node_t * first_node = NULL ;	65:15:1804:1835	81971	5	True				
ANR	82012	IdentifierDecl	* first_node = NULL		81971	0					
ANR	82013	IdentifierDeclType	axiom_node_t *		81971	0					
ANR	82014	Identifier	first_node		81971	1					
ANR	82015	AssignmentExpression	* first_node = NULL		81971	2		=			
ANR	82016	Identifier	NULL		81971	0					
ANR	82017	Identifier	NULL		81971	1					
ANR	82018	IdentifierDeclStatement	bool is_early_node_valid = true ;	66:15:1852:1883	81971	6	True				
ANR	82019	IdentifierDecl	is_early_node_valid = true		81971	0					
ANR	82020	IdentifierDeclType	bool		81971	0					
ANR	82021	Identifier	is_early_node_valid		81971	1					
ANR	82022	AssignmentExpression	is_early_node_valid = true		81971	2		=			
ANR	82023	Identifier	true		81971	0					
ANR	82024	Identifier	true		81971	1					
ANR	82025	IdentifierDeclStatement	axiom_node_t * current_node = NULL ;	67:15:1900:1933	81971	7	True				
ANR	82026	IdentifierDecl	* current_node = NULL		81971	0					
ANR	82027	IdentifierDeclType	axiom_node_t *		81971	0					
ANR	82028	Identifier	current_node		81971	1					
ANR	82029	AssignmentExpression	* current_node = NULL		81971	2		=			
ANR	82030	Identifier	NULL		81971	0					
ANR	82031	Identifier	NULL		81971	1					
ANR	82032	IdentifierDeclStatement	axiom_element_t * current_element = NULL ;	68:15:1950:1989	81971	8	True				
ANR	82033	IdentifierDecl	* current_element = NULL		81971	0					
ANR	82034	IdentifierDeclType	axiom_element_t *		81971	0					
ANR	82035	Identifier	current_element		81971	1					
ANR	82036	AssignmentExpression	* current_element = NULL		81971	2		=			
ANR	82037	Identifier	NULL		81971	0					
ANR	82038	Identifier	NULL		81971	1					
ANR	82039	WhileStatement	"while ( parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		81971	9					
ANR	82040	Condition	"parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	71:20:2039:2120	81971	0	True				
ANR	82041	AndExpression	"parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		81971	0		&&			
ANR	82042	Identifier	parent		81971	0					
ANR	82043	EqualityExpression	"axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		81971	1		!=			
ANR	82044	CallExpression	"axiom_node_get_node_type ( parent , Environment :: getEnv ( ) )"		81971	0					
ANR	82045	Callee	axiom_node_get_node_type		81971	0					
ANR	82046	Identifier	axiom_node_get_node_type		81971	0					
ANR	82047	ArgumentList	parent		81971	1					
ANR	82048	Argument	parent		81971	0					
ANR	82049	Identifier	parent		81971	0					
ANR	82050	Argument	Environment :: getEnv ( )		81971	1					
ANR	82051	CallExpression	Environment :: getEnv ( )		81971	0					
ANR	82052	Callee	Environment :: getEnv		81971	0					
ANR	82053	Identifier	Environment :: getEnv		81971	0					
ANR	82054	ArgumentList			81971	1					
ANR	82055	Identifier	AXIOM_ELEMENT		81971	1					
ANR	82056	CompoundStatement		18:14:619:619	81971	1					
ANR	82057	ExpressionStatement	"parent = axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"	73:18:2157:2224	81971	0	True				
ANR	82058	AssignmentExpression	"parent = axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"		81971	0		=			
ANR	82059	Identifier	parent		81971	0					
ANR	82060	CallExpression	"axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"		81971	1					
ANR	82061	Callee	axiom_node_get_next_sibling		81971	0					
ANR	82062	Identifier	axiom_node_get_next_sibling		81971	0					
ANR	82063	ArgumentList	parent		81971	1					
ANR	82064	Argument	parent		81971	0					
ANR	82065	Identifier	parent		81971	0					
ANR	82066	Argument	Environment :: getEnv ( )		81971	1					
ANR	82067	CallExpression	Environment :: getEnv ( )		81971	0					
ANR	82068	Callee	Environment :: getEnv		81971	0					
ANR	82069	Identifier	Environment :: getEnv		81971	0					
ANR	82070	ArgumentList			81971	1					
ANR	82071	IfStatement	if ( NULL == parent )		81971	10					
ANR	82072	Condition	NULL == parent	75:18:2260:2273	81971	0	True				
ANR	82073	EqualityExpression	NULL == parent		81971	0		==			
ANR	82074	Identifier	NULL		81971	0					
ANR	82075	Identifier	parent		81971	1					
ANR	82076	CompoundStatement		22:14:772:772	81971	1					
ANR	82077	ReturnStatement	return AXIS2_FAILURE ;	77:16:2311:2331	81971	0	True				
ANR	82078	Identifier	AXIS2_FAILURE		81971	0					
ANR	82079	ExpressionStatement	"first_node = axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"	81:22:2409:2479	81971	11	True				
ANR	82080	AssignmentExpression	"first_node = axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"		81971	0		=			
ANR	82081	Identifier	first_node		81971	0					
ANR	82082	CallExpression	"axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"		81971	1					
ANR	82083	Callee	axiom_node_get_first_child		81971	0					
ANR	82084	Identifier	axiom_node_get_first_child		81971	0					
ANR	82085	ArgumentList	parent		81971	1					
ANR	82086	Argument	parent		81971	0					
ANR	82087	Identifier	parent		81971	0					
ANR	82088	Argument	Environment :: getEnv ( )		81971	1					
ANR	82089	CallExpression	Environment :: getEnv ( )		81971	0					
ANR	82090	Callee	Environment :: getEnv		81971	0					
ANR	82091	Identifier	Environment :: getEnv		81971	0					
ANR	82092	ArgumentList			81971	1					
ANR	82093	ExpressionStatement	current_node = first_node	92:35:2746:2771	81971	12	True				
ANR	82094	AssignmentExpression	current_node = first_node		81971	0		=			
ANR	82095	Identifier	current_node		81971	0					
ANR	82096	Identifier	first_node		81971	1					
ANR	82097	ExpressionStatement	is_early_node_valid = false	93:35:2808:2835	81971	13	True				
ANR	82098	AssignmentExpression	is_early_node_valid = false		81971	0		=			
ANR	82099	Identifier	is_early_node_valid		81971	0					
ANR	82100	Identifier	false		81971	1					
ANR	82101	WhileStatement	"while ( current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		81971	14					
ANR	82102	Condition	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	96:42:2951:3044	81971	0	True				
ANR	82103	AndExpression	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		81971	0		&&			
ANR	82104	Identifier	current_node		81971	0					
ANR	82105	EqualityExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		81971	1		!=			
ANR	82106	CallExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) )"		81971	0					
ANR	82107	Callee	axiom_node_get_node_type		81971	0					
ANR	82108	Identifier	axiom_node_get_node_type		81971	0					
ANR	82109	ArgumentList	current_node		81971	1					
ANR	82110	Argument	current_node		81971	0					
ANR	82111	Identifier	current_node		81971	0					
ANR	82112	Argument	Environment :: getEnv ( )		81971	1					
ANR	82113	CallExpression	Environment :: getEnv ( )		81971	0					
ANR	82114	Callee	Environment :: getEnv		81971	0					
ANR	82115	Identifier	Environment :: getEnv		81971	0					
ANR	82116	ArgumentList			81971	1					
ANR	82117	Identifier	AXIOM_ELEMENT		81971	1					
ANR	82118	CompoundStatement		43:36:1565:1565	81971	1					
ANR	82119	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	98:40:3125:3204	81971	0	True				
ANR	82120	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		81971	0		=			
ANR	82121	Identifier	current_node		81971	0					
ANR	82122	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		81971	1					
ANR	82123	Callee	axiom_node_get_next_sibling		81971	0					
ANR	82124	Identifier	axiom_node_get_next_sibling		81971	0					
ANR	82125	ArgumentList	current_node		81971	1					
ANR	82126	Argument	current_node		81971	0					
ANR	82127	Identifier	current_node		81971	0					
ANR	82128	Argument	Environment :: getEnv ( )		81971	1					
ANR	82129	CallExpression	Environment :: getEnv ( )		81971	0					
ANR	82130	Callee	Environment :: getEnv		81971	0					
ANR	82131	Identifier	Environment :: getEnv		81971	0					
ANR	82132	ArgumentList			81971	1					
ANR	82133	IfStatement	if ( current_node != NULL )		81971	15					
ANR	82134	Condition	current_node != NULL	100:39:3283:3302	81971	0	True				
ANR	82135	EqualityExpression	current_node != NULL		81971	0		!=			
ANR	82136	Identifier	current_node		81971	0					
ANR	82137	Identifier	NULL		81971	1					
ANR	82138	CompoundStatement		47:36:1823:1823	81971	1					
ANR	82139	ExpressionStatement	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"	102:40:3383:3484	81971	0	True				
ANR	82140	AssignmentExpression	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		81971	0		=			
ANR	82141	Identifier	current_element		81971	0					
ANR	82142	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		81971	1					
ANR	82143	CastTarget	axiom_element_t *		81971	0					
ANR	82144	CallExpression	"axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		81971	1					
ANR	82145	Callee	axiom_node_get_data_element		81971	0					
ANR	82146	Identifier	axiom_node_get_data_element		81971	0					
ANR	82147	ArgumentList	current_node		81971	1					
ANR	82148	Argument	current_node		81971	0					
ANR	82149	Identifier	current_node		81971	0					
ANR	82150	Argument	Environment :: getEnv ( )		81971	1					
ANR	82151	CallExpression	Environment :: getEnv ( )		81971	0					
ANR	82152	Callee	Environment :: getEnv		81971	0					
ANR	82153	Identifier	Environment :: getEnv		81971	0					
ANR	82154	ArgumentList			81971	1					
ANR	82155	ExpressionStatement	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"	103:40:3526:3612	81971	1	True				
ANR	82156	AssignmentExpression	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		81971	0		=			
ANR	82157	Identifier	mqname		81971	0					
ANR	82158	CallExpression	"axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		81971	1					
ANR	82159	Callee	axiom_element_get_qname		81971	0					
ANR	82160	Identifier	axiom_element_get_qname		81971	0					
ANR	82161	ArgumentList	current_element		81971	1					
ANR	82162	Argument	current_element		81971	0					
ANR	82163	Identifier	current_element		81971	0					
ANR	82164	Argument	Environment :: getEnv ( )		81971	1					
ANR	82165	CallExpression	Environment :: getEnv ( )		81971	0					
ANR	82166	Callee	Environment :: getEnv		81971	0					
ANR	82167	Identifier	Environment :: getEnv		81971	0					
ANR	82168	ArgumentList			81971	1					
ANR	82169	Argument	current_node		81971	2					
ANR	82170	Identifier	current_node		81971	0					
ANR	82171	ExpressionStatement	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""status"" , NULL , NULL )"	106:33:3721:3801	81971	16	True				
ANR	82172	AssignmentExpression	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""status"" , NULL , NULL )"		81971	0		=			
ANR	82173	Identifier	element_qname		81971	0					
ANR	82174	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""status"" , NULL , NULL )"		81971	1					
ANR	82175	Callee	axutil_qname_create		81971	0					
ANR	82176	Identifier	axutil_qname_create		81971	0					
ANR	82177	ArgumentList	Environment :: getEnv ( )		81971	1					
ANR	82178	Argument	Environment :: getEnv ( )		81971	0					
ANR	82179	CallExpression	Environment :: getEnv ( )		81971	0					
ANR	82180	Callee	Environment :: getEnv		81971	0					
ANR	82181	Identifier	Environment :: getEnv		81971	0					
ANR	82182	ArgumentList			81971	1					
ANR	82183	Argument	"""status"""		81971	1					
ANR	82184	PrimaryExpression	"""status"""		81971	0					
ANR	82185	Argument	NULL		81971	2					
ANR	82186	Identifier	NULL		81971	0					
ANR	82187	Argument	NULL		81971	3					
ANR	82188	Identifier	NULL		81971	0					
ANR	82189	IfStatement	"if ( isParticle ( ) || ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) ) )"		81971	17					
ANR	82190	Condition	"isParticle ( ) || ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) )"	109:31:3869:4121	81971	0	True				
ANR	82191	OrExpression	"isParticle ( ) || ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) )"		81971	0		||			
ANR	82192	CallExpression	isParticle ( )		81971	0					
ANR	82193	Callee	isParticle		81971	0					
ANR	82194	Identifier	isParticle		81971	0					
ANR	82195	ArgumentList			81971	1					
ANR	82196	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		81971	1		&&			
ANR	82197	Identifier	current_node		81971	0					
ANR	82198	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		81971	1		&&			
ANR	82199	Identifier	current_element		81971	0					
ANR	82200	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		81971	1		||			
ANR	82201	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		81971	0					
ANR	82202	Callee	axutil_qname_equals		81971	0					
ANR	82203	Identifier	axutil_qname_equals		81971	0					
ANR	82204	ArgumentList	element_qname		81971	1					
ANR	82205	Argument	element_qname		81971	0					
ANR	82206	Identifier	element_qname		81971	0					
ANR	82207	Argument	Environment :: getEnv ( )		81971	1					
ANR	82208	CallExpression	Environment :: getEnv ( )		81971	0					
ANR	82209	Callee	Environment :: getEnv		81971	0					
ANR	82210	Identifier	Environment :: getEnv		81971	0					
ANR	82211	ArgumentList			81971	1					
ANR	82212	Argument	mqname		81971	2					
ANR	82213	Identifier	mqname		81971	0					
ANR	82214	UnaryOperationExpression	"! axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		81971	1					
ANR	82215	UnaryOperator	!		81971	0					
ANR	82216	CallExpression	"axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		81971	1					
ANR	82217	Callee	axutil_strcmp		81971	0					
ANR	82218	Identifier	axutil_strcmp		81971	0					
ANR	82219	ArgumentList	"""status"""		81971	1					
ANR	82220	Argument	"""status"""		81971	0					
ANR	82221	PrimaryExpression	"""status"""		81971	0					
ANR	82222	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		81971	1					
ANR	82223	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		81971	0					
ANR	82224	Callee	axiom_element_get_localname		81971	0					
ANR	82225	Identifier	axiom_element_get_localname		81971	0					
ANR	82226	ArgumentList	current_element		81971	1					
ANR	82227	Argument	current_element		81971	0					
ANR	82228	Identifier	current_element		81971	0					
ANR	82229	Argument	Environment :: getEnv ( )		81971	1					
ANR	82230	CallExpression	Environment :: getEnv ( )		81971	0					
ANR	82231	Callee	Environment :: getEnv		81971	0					
ANR	82232	Identifier	Environment :: getEnv		81971	0					
ANR	82233	ArgumentList			81971	1					
ANR	82234	CompoundStatement		63:33:3060:3118	81971	1					
ANR	82235	IfStatement	"if ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) )"		81971	0					
ANR	82236	Condition	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"	112:34:4187:4387	81971	0	True				
ANR	82237	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		81971	0		&&			
ANR	82238	Identifier	current_node		81971	0					
ANR	82239	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		81971	1		&&			
ANR	82240	Identifier	current_element		81971	0					
ANR	82241	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		81971	1		||			
ANR	82242	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		81971	0					
ANR	82243	Callee	axutil_qname_equals		81971	0					
ANR	82244	Identifier	axutil_qname_equals		81971	0					
ANR	82245	ArgumentList	element_qname		81971	1					
ANR	82246	Argument	element_qname		81971	0					
ANR	82247	Identifier	element_qname		81971	0					
ANR	82248	Argument	Environment :: getEnv ( )		81971	1					
ANR	82249	CallExpression	Environment :: getEnv ( )		81971	0					
ANR	82250	Callee	Environment :: getEnv		81971	0					
ANR	82251	Identifier	Environment :: getEnv		81971	0					
ANR	82252	ArgumentList			81971	1					
ANR	82253	Argument	mqname		81971	2					
ANR	82254	Identifier	mqname		81971	0					
ANR	82255	UnaryOperationExpression	"! axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		81971	1					
ANR	82256	UnaryOperator	!		81971	0					
ANR	82257	CallExpression	"axutil_strcmp ( ""status"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		81971	1					
ANR	82258	Callee	axutil_strcmp		81971	0					
ANR	82259	Identifier	axutil_strcmp		81971	0					
ANR	82260	ArgumentList	"""status"""		81971	1					
ANR	82261	Argument	"""status"""		81971	0					
ANR	82262	PrimaryExpression	"""status"""		81971	0					
ANR	82263	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		81971	1					
ANR	82264	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		81971	0					
ANR	82265	Callee	axiom_element_get_localname		81971	0					
ANR	82266	Identifier	axiom_element_get_localname		81971	0					
ANR	82267	ArgumentList	current_element		81971	1					
ANR	82268	Argument	current_element		81971	0					
ANR	82269	Identifier	current_element		81971	0					
ANR	82270	Argument	Environment :: getEnv ( )		81971	1					
ANR	82271	CallExpression	Environment :: getEnv ( )		81971	0					
ANR	82272	Callee	Environment :: getEnv		81971	0					
ANR	82273	Identifier	Environment :: getEnv		81971	0					
ANR	82274	ArgumentList			81971	1					
ANR	82275	CompoundStatement		59:30:2902:2902	81971	1					
ANR	82276	ExpressionStatement	is_early_node_valid = true	114:32:4454:4480	81971	0	True				
ANR	82277	AssignmentExpression	is_early_node_valid = true		81971	0		=			
ANR	82278	Identifier	is_early_node_valid		81971	0					
ANR	82279	Identifier	true		81971	1					
ANR	82280	IdentifierDeclStatement	AviaryCommon :: Status * element = new AviaryCommon :: Status ( ) ;	117:33:4578:4636	81971	1	True				
ANR	82281	IdentifierDecl	* element = new AviaryCommon :: Status ( )		81971	0					
ANR	82282	IdentifierDeclType	AviaryCommon :: Status *		81971	0					
ANR	82283	Identifier	element		81971	1					
ANR	82284	AssignmentExpression	* element = new AviaryCommon :: Status ( )		81971	2		=			
ANR	82285	Identifier	element		81971	0					
ANR	82286	UnaryExpression	new AviaryCommon :: Status ( )		81971	1					
ANR	82287	ExpressionStatement	"status = element -> deserialize ( & current_node , & is_early_node_valid , false )"	119:38:4677:4751	81971	2	True				
ANR	82288	AssignmentExpression	"status = element -> deserialize ( & current_node , & is_early_node_valid , false )"		81971	0		=			
ANR	82289	Identifier	status		81971	0					
ANR	82290	CallExpression	"element -> deserialize ( & current_node , & is_early_node_valid , false )"		81971	1					
ANR	82291	Callee	element -> deserialize		81971	0					
ANR	82292	PtrMemberAccess	element -> deserialize		81971	0					
ANR	82293	Identifier	element		81971	0					
ANR	82294	Identifier	deserialize		81971	1					
ANR	82295	ArgumentList	& current_node		81971	1					
ANR	82296	Argument	& current_node		81971	0					
ANR	82297	UnaryOperationExpression	& current_node		81971	0					
ANR	82298	UnaryOperator	&		81971	0					
ANR	82299	Identifier	current_node		81971	1					
ANR	82300	Argument	& is_early_node_valid		81971	1					
ANR	82301	UnaryOperationExpression	& is_early_node_valid		81971	0					
ANR	82302	UnaryOperator	&		81971	0					
ANR	82303	Identifier	is_early_node_valid		81971	1					
ANR	82304	Argument	false		81971	2					
ANR	82305	Identifier	false		81971	0					
ANR	82306	IfStatement	if ( AXIS2_FAILURE == status )		81971	3					
ANR	82307	Condition	AXIS2_FAILURE == status	120:41:4794:4816	81971	0	True				
ANR	82308	EqualityExpression	AXIS2_FAILURE == status		81971	0		==			
ANR	82309	Identifier	AXIS2_FAILURE		81971	0					
ANR	82310	Identifier	status		81971	1					
ANR	82311	CompoundStatement		67:38:3339:3339	81971	1					
ANR	82312	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in building adb object for element status"" )"	122:42:4901:5010	81971	0	True				
ANR	82313	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in building adb object for element status"" )"		81971	0					
ANR	82314	Callee	WSF_LOG_ERROR_MSG		81971	0					
ANR	82315	Identifier	WSF_LOG_ERROR_MSG		81971	0					
ANR	82316	ArgumentList	Environment :: getEnv ( ) -> log		81971	1					
ANR	82317	Argument	Environment :: getEnv ( ) -> log		81971	0					
ANR	82318	PtrMemberAccess	Environment :: getEnv ( ) -> log		81971	0					
ANR	82319	CallExpression	Environment :: getEnv ( )		81971	0					
ANR	82320	Callee	Environment :: getEnv		81971	0					
ANR	82321	Identifier	Environment :: getEnv		81971	0					
ANR	82322	ArgumentList			81971	1					
ANR	82323	Identifier	log		81971	1					
ANR	82324	Argument	WSF_LOG_SI		81971	1					
ANR	82325	Identifier	WSF_LOG_SI		81971	0					
ANR	82326	Argument	"""failed in building adb object for element status"""		81971	2					
ANR	82327	PrimaryExpression	"""failed in building adb object for element status"""		81971	0					
ANR	82328	ElseStatement	else		81971	0					
ANR	82329	CompoundStatement		71:38:3615:3615	81971	0					
ANR	82330	ExpressionStatement	status = setStatus ( element )	126:42:5177:5204	81971	0	True				
ANR	82331	AssignmentExpression	status = setStatus ( element )		81971	0		=			
ANR	82332	Identifier	status		81971	0					
ANR	82333	CallExpression	setStatus ( element )		81971	1					
ANR	82334	Callee	setStatus		81971	0					
ANR	82335	Identifier	setStatus		81971	0					
ANR	82336	ArgumentList	element		81971	1					
ANR	82337	Argument	element		81971	0					
ANR	82338	Identifier	element		81971	0					
ANR	82339	IfStatement	if ( AXIS2_FAILURE == status )		81971	4					
ANR	82340	Condition	AXIS2_FAILURE == status	129:36:5319:5342	81971	0	True				
ANR	82341	EqualityExpression	AXIS2_FAILURE == status		81971	0		==			
ANR	82342	Identifier	AXIS2_FAILURE		81971	0					
ANR	82343	Identifier	status		81971	1					
ANR	82344	CompoundStatement		76:33:3860:3860	81971	1					
ANR	82345	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for status "" )"	131:37:5417:5516	81971	0	True				
ANR	82346	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for status "" )"		81971	0					
ANR	82347	Callee	WSF_LOG_ERROR_MSG		81971	0					
ANR	82348	Identifier	WSF_LOG_ERROR_MSG		81971	0					
ANR	82349	ArgumentList	Environment :: getEnv ( ) -> log		81971	1					
ANR	82350	Argument	Environment :: getEnv ( ) -> log		81971	0					
ANR	82351	PtrMemberAccess	Environment :: getEnv ( ) -> log		81971	0					
ANR	82352	CallExpression	Environment :: getEnv ( )		81971	0					
ANR	82353	Callee	Environment :: getEnv		81971	0					
ANR	82354	Identifier	Environment :: getEnv		81971	0					
ANR	82355	ArgumentList			81971	1					
ANR	82356	Identifier	log		81971	1					
ANR	82357	Argument	WSF_LOG_SI		81971	1					
ANR	82358	Identifier	WSF_LOG_SI		81971	0					
ANR	82359	Argument	"""failed in setting the value for status """		81971	2					
ANR	82360	PrimaryExpression	"""failed in setting the value for status """		81971	0					
ANR	82361	IfStatement	if ( element_qname )		81971	1					
ANR	82362	Condition	element_qname	132:40:5558:5570	81971	0	True				
ANR	82363	Identifier	element_qname		81971	0					
ANR	82364	CompoundStatement		79:37:4092:4092	81971	1					
ANR	82365	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	134:41:5653:5708	81971	0	True				
ANR	82366	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		81971	0					
ANR	82367	Callee	axutil_qname_free		81971	0					
ANR	82368	Identifier	axutil_qname_free		81971	0					
ANR	82369	ArgumentList	element_qname		81971	1					
ANR	82370	Argument	element_qname		81971	0					
ANR	82371	Identifier	element_qname		81971	0					
ANR	82372	Argument	Environment :: getEnv ( )		81971	1					
ANR	82373	CallExpression	Environment :: getEnv ( )		81971	0					
ANR	82374	Callee	Environment :: getEnv		81971	0					
ANR	82375	Identifier	Environment :: getEnv		81971	0					
ANR	82376	ArgumentList			81971	1					
ANR	82377	ReturnStatement	return AXIS2_FAILURE ;	136:37:5786:5806	81971	2	True				
ANR	82378	Identifier	AXIS2_FAILURE		81971	0					
ANR	82379	ElseStatement	else		81971	0					
ANR	82380	IfStatement	if ( ! dont_care_minoccurs )		81971	0					
ANR	82381	Condition	! dont_care_minoccurs	140:38:5941:5960	81971	0	True				
ANR	82382	UnaryOperationExpression	! dont_care_minoccurs		81971	0					
ANR	82383	UnaryOperator	!		81971	0					
ANR	82384	Identifier	dont_care_minoccurs		81971	1					
ANR	82385	CompoundStatement		87:30:4475:4475	81971	1					
ANR	82386	IfStatement	if ( element_qname )		81971	0					
ANR	82387	Condition	element_qname	142:37:6032:6044	81971	0	True				
ANR	82388	Identifier	element_qname		81971	0					
ANR	82389	CompoundStatement		89:34:4563:4563	81971	1					
ANR	82390	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	144:38:6121:6176	81971	0	True				
ANR	82391	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		81971	0					
ANR	82392	Callee	axutil_qname_free		81971	0					
ANR	82393	Identifier	axutil_qname_free		81971	0					
ANR	82394	ArgumentList	element_qname		81971	1					
ANR	82395	Argument	element_qname		81971	0					
ANR	82396	Identifier	element_qname		81971	0					
ANR	82397	Argument	Environment :: getEnv ( )		81971	1					
ANR	82398	CallExpression	Environment :: getEnv ( )		81971	0					
ANR	82399	Callee	Environment :: getEnv		81971	0					
ANR	82400	Identifier	Environment :: getEnv		81971	0					
ANR	82401	ArgumentList			81971	1					
ANR	82402	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""non nillable or minOuccrs != 0 element status missing"" )"	147:6:6290:6403	81971	1	True				
ANR	82403	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""non nillable or minOuccrs != 0 element status missing"" )"		81971	0					
ANR	82404	Callee	WSF_LOG_ERROR_MSG		81971	0					
ANR	82405	Identifier	WSF_LOG_ERROR_MSG		81971	0					
ANR	82406	ArgumentList	Environment :: getEnv ( ) -> log		81971	1					
ANR	82407	Argument	Environment :: getEnv ( ) -> log		81971	0					
ANR	82408	PtrMemberAccess	Environment :: getEnv ( ) -> log		81971	0					
ANR	82409	CallExpression	Environment :: getEnv ( )		81971	0					
ANR	82410	Callee	Environment :: getEnv		81971	0					
ANR	82411	Identifier	Environment :: getEnv		81971	0					
ANR	82412	ArgumentList			81971	1					
ANR	82413	Identifier	log		81971	1					
ANR	82414	Argument	WSF_LOG_SI		81971	1					
ANR	82415	Identifier	WSF_LOG_SI		81971	0					
ANR	82416	Argument	"""non nillable or minOuccrs != 0 element status missing"""		81971	2					
ANR	82417	PrimaryExpression	"""non nillable or minOuccrs != 0 element status missing"""		81971	0					
ANR	82418	ReturnStatement	return AXIS2_FAILURE ;	148:34:6439:6459	81971	2	True				
ANR	82419	Identifier	AXIS2_FAILURE		81971	0					
ANR	82420	IfStatement	if ( element_qname )		81971	18					
ANR	82421	Condition	element_qname	151:21:6542:6554	81971	0	True				
ANR	82422	Identifier	element_qname		81971	0					
ANR	82423	CompoundStatement		98:18:5057:5057	81971	1					
ANR	82424	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	153:21:6598:6653	81971	0	True				
ANR	82425	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		81971	0					
ANR	82426	Callee	axutil_qname_free		81971	0					
ANR	82427	Identifier	axutil_qname_free		81971	0					
ANR	82428	ArgumentList	element_qname		81971	1					
ANR	82429	Argument	element_qname		81971	0					
ANR	82430	Identifier	element_qname		81971	0					
ANR	82431	Argument	Environment :: getEnv ( )		81971	1					
ANR	82432	CallExpression	Environment :: getEnv ( )		81971	0					
ANR	82433	Callee	Environment :: getEnv		81971	0					
ANR	82434	Identifier	Environment :: getEnv		81971	0					
ANR	82435	ArgumentList			81971	1					
ANR	82436	ExpressionStatement	element_qname = NULL	154:21:6676:6696	81971	1	True				
ANR	82437	AssignmentExpression	element_qname = NULL		81971	0		=			
ANR	82438	Identifier	element_qname		81971	0					
ANR	82439	Identifier	NULL		81971	1					
ANR	82440	ReturnStatement	return status ;	157:10:6746:6759	81971	19	True				
ANR	82441	Identifier	status		81971	0					
ANR	82442	ReturnType	bool WSF_CALL		81971	1					
ANR	82443	Identifier	AviaryJob :: ControlJobResponse :: deserialize		81971	2					
ANR	82444	ParameterList	"axiom_node_t * * dp_parent , bool * dp_is_early_node_valid , bool dont_care_minoccurs"		81971	3					
ANR	82445	Parameter	axiom_node_t * * dp_parent	54:51:1428:1451	81971	0	True				
ANR	82446	ParameterType	axiom_node_t * *		81971	0					
ANR	82447	Identifier	dp_parent		81971	1					
ANR	82448	Parameter	bool * dp_is_early_node_valid	54:76:1453:1480	81971	1	True				
ANR	82449	ParameterType	bool *		81971	0					
ANR	82450	Identifier	dp_is_early_node_valid		81971	1					
ANR	82451	Parameter	bool dont_care_minoccurs	54:106:1483:1506	81971	2	True				
ANR	82452	ParameterType	bool		81971	0					
ANR	82453	Identifier	dont_care_minoccurs		81971	1					
ANR	82454	CFGEntryNode	ENTRY		81971		True				
ANR	82455	CFGExitNode	EXIT		81971		True				
ANR	82456	Symbol	parent		81971						
ANR	82457	Symbol	is_early_node_valid		81971						
ANR	82458	Symbol	Environment :: getEnv		81971						
ANR	82459	Symbol	mqname		81971						
ANR	82460	Symbol	current_node		81971						
ANR	82461	Symbol	axiom_element_get_qname		81971						
ANR	82462	Symbol	isParticle		81971						
ANR	82463	Symbol	* element		81971						
ANR	82464	Symbol	element_qname		81971						
ANR	82465	Symbol	axutil_qname_create		81971						
ANR	82466	Symbol	* dp_parent		81971						
ANR	82467	Symbol	AXIS2_FAILURE		81971						
ANR	82468	Symbol	axiom_node_get_data_element		81971						
ANR	82469	Symbol	dont_care_minoccurs		81971						
ANR	82470	Symbol	dp_is_early_node_valid		81971						
ANR	82471	Symbol	WSF_LOG_SI		81971						
ANR	82472	Symbol	& current_node		81971						
ANR	82473	Symbol	first_node		81971						
ANR	82474	Symbol	& is_early_node_valid		81971						
ANR	82475	Symbol	AXIS2_SUCCESS		81971						
ANR	82476	Symbol	current_element		81971						
ANR	82477	Symbol	element		81971						
ANR	82478	Symbol	NULL		81971						
ANR	82479	Symbol	dp_parent		81971						
ANR	82480	Symbol	AXIOM_ELEMENT		81971						
ANR	82481	Symbol	false		81971						
ANR	82482	Symbol	axiom_node_get_node_type		81971						
ANR	82483	Symbol	axiom_element_get_localname		81971						
ANR	82484	Symbol	Environment :: getEnv ( ) -> log		81971						
ANR	82485	Symbol	setStatus		81971						
ANR	82486	Symbol	text_value		81971						
ANR	82487	Symbol	axiom_node_get_next_sibling		81971						
ANR	82488	Symbol	axiom_node_get_first_child		81971						
ANR	82489	Symbol	axutil_strcmp		81971						
ANR	82490	Symbol	* Environment :: getEnv		81971						
ANR	82491	Symbol	true		81971						
ANR	82492	Symbol	axutil_qname_equals		81971						
ANR	82493	Symbol	element -> deserialize		81971						
ANR	82494	Symbol	status		81971						
ANR	82495	Function	AviaryJob :: ControlJobResponse :: isParticle	160:10:6781:6930							
ANR	82496	FunctionDef	AviaryJob :: ControlJobResponse :: isParticle ()		82495	0					
ANR	82497	CompoundStatement		162:10:6859:6930	82495	0					
ANR	82498	ReturnStatement	return false ;	164:17:6891:6903	82495	0	True				
ANR	82499	Identifier	false		82495	0					
ANR	82500	ReturnType	bool WSF_CALL		82495	1					
ANR	82501	Identifier	AviaryJob :: ControlJobResponse :: isParticle		82495	2					
ANR	82502	ParameterList			82495	3					
ANR	82503	CFGEntryNode	ENTRY		82495		True				
ANR	82504	CFGExitNode	EXIT		82495		True				
ANR	82505	Symbol	false		82495						
ANR	82506	Function	AviaryJob :: ControlJobResponse :: declareParentNamespaces	169:10:6944:7272							
ANR	82507	FunctionDef	"AviaryJob :: ControlJobResponse :: declareParentNamespaces (axiom_element_t * parent_element , axutil_hash_t * namespaces , int * next_ns_index)"		82506	0					
ANR	82508	CompoundStatement		173:10:7154:7272	82506	0					
ANR	82509	ReturnType	void WSF_CALL		82506	1					
ANR	82510	Identifier	AviaryJob :: ControlJobResponse :: declareParentNamespaces		82506	2					
ANR	82511	ParameterList	"axiom_element_t * parent_element , axutil_hash_t * namespaces , int * next_ns_index"		82506	3					
ANR	82512	Parameter	axiom_element_t * parent_element	171:20:7044:7074	82506	0	True				
ANR	82513	ParameterType	axiom_element_t *		82506	0					
ANR	82514	Identifier	parent_element		82506	1					
ANR	82515	Parameter	axutil_hash_t * namespaces	172:20:7097:7121	82506	1	True				
ANR	82516	ParameterType	axutil_hash_t *		82506	0					
ANR	82517	Identifier	namespaces		82506	1					
ANR	82518	Parameter	int * next_ns_index	172:47:7124:7141	82506	2	True				
ANR	82519	ParameterType	int *		82506	0					
ANR	82520	Identifier	next_ns_index		82506	1					
ANR	82521	CFGEntryNode	ENTRY		82506		True				
ANR	82522	CFGExitNode	EXIT		82506		True				
ANR	82523	Symbol	parent_element		82506						
ANR	82524	Symbol	next_ns_index		82506						
ANR	82525	Symbol	namespaces		82506						
ANR	82526	Function	AviaryJob :: ControlJobResponse :: serialize	181:22:7315:12107							
ANR	82527	FunctionDef	"AviaryJob :: ControlJobResponse :: serialize (axiom_node_t * parent , axiom_element_t * parent_element , int parent_tag_closed , axutil_hash_t * namespaces , int * next_ns_index)"		82526	0					
ANR	82528	CompoundStatement		187:8:7515:12107	82526	0					
ANR	82529	IdentifierDeclStatement	axis2_char_t * string_to_stream ;	190:13:7556:7586	82526	0	True				
ANR	82530	IdentifierDecl	* string_to_stream		82526	0					
ANR	82531	IdentifierDeclType	axis2_char_t *		82526	0					
ANR	82532	Identifier	string_to_stream		82526	1					
ANR	82533	IdentifierDeclStatement	axiom_node_t * current_node = NULL ;	193:9:7620:7653	82526	1	True				
ANR	82534	IdentifierDecl	* current_node = NULL		82526	0					
ANR	82535	IdentifierDeclType	axiom_node_t *		82526	0					
ANR	82536	Identifier	current_node		82526	1					
ANR	82537	AssignmentExpression	* current_node = NULL		82526	2		=			
ANR	82538	Identifier	NULL		82526	0					
ANR	82539	Identifier	NULL		82526	1					
ANR	82540	IdentifierDeclStatement	int tag_closed = 0 ;	194:9:7664:7682	82526	2	True				
ANR	82541	IdentifierDecl	tag_closed = 0		82526	0					
ANR	82542	IdentifierDeclType	int		82526	0					
ANR	82543	Identifier	tag_closed		82526	1					
ANR	82544	AssignmentExpression	tag_closed = 0		82526	2		=			
ANR	82545	Identifier	tag_closed		82526	0					
ANR	82546	PrimaryExpression	0		82526	1					
ANR	82547	IdentifierDeclStatement	axiom_namespace_t * ns1 = NULL ;	198:16:7721:7750	82526	3	True				
ANR	82548	IdentifierDecl	* ns1 = NULL		82526	0					
ANR	82549	IdentifierDeclType	axiom_namespace_t *		82526	0					
ANR	82550	Identifier	ns1		82526	1					
ANR	82551	AssignmentExpression	* ns1 = NULL		82526	2		=			
ANR	82552	Identifier	NULL		82526	0					
ANR	82553	Identifier	NULL		82526	1					
ANR	82554	IdentifierDeclStatement	axis2_char_t * qname_uri = NULL ;	200:16:7769:7799	82526	4	True				
ANR	82555	IdentifierDecl	* qname_uri = NULL		82526	0					
ANR	82556	IdentifierDeclType	axis2_char_t *		82526	0					
ANR	82557	Identifier	qname_uri		82526	1					
ANR	82558	AssignmentExpression	* qname_uri = NULL		82526	2		=			
ANR	82559	Identifier	NULL		82526	0					
ANR	82560	Identifier	NULL		82526	1					
ANR	82561	IdentifierDeclStatement	axis2_char_t * qname_prefix = NULL ;	201:16:7817:7850	82526	5	True				
ANR	82562	IdentifierDecl	* qname_prefix = NULL		82526	0					
ANR	82563	IdentifierDeclType	axis2_char_t *		82526	0					
ANR	82564	Identifier	qname_prefix		82526	1					
ANR	82565	AssignmentExpression	* qname_prefix = NULL		82526	2		=			
ANR	82566	Identifier	NULL		82526	0					
ANR	82567	Identifier	NULL		82526	1					
ANR	82568	IdentifierDeclStatement	axis2_char_t * p_prefix = NULL ;	202:16:7868:7897	82526	6	True				
ANR	82569	IdentifierDecl	* p_prefix = NULL		82526	0					
ANR	82570	IdentifierDeclType	axis2_char_t *		82526	0					
ANR	82571	Identifier	p_prefix		82526	1					
ANR	82572	AssignmentExpression	* p_prefix = NULL		82526	2		=			
ANR	82573	Identifier	NULL		82526	0					
ANR	82574	Identifier	NULL		82526	1					
ANR	82575	IdentifierDeclStatement	axis2_char_t text_value_1 [ ADB_DEFAULT_DIGIT_LIMIT ] ;	204:20:7932:7982	82526	7	True				
ANR	82576	IdentifierDecl	text_value_1 [ ADB_DEFAULT_DIGIT_LIMIT ]		82526	0					
ANR	82577	IdentifierDeclType	axis2_char_t [ ADB_DEFAULT_DIGIT_LIMIT ]		82526	0					
ANR	82578	Identifier	text_value_1		82526	1					
ANR	82579	Identifier	ADB_DEFAULT_DIGIT_LIMIT		82526	2					
ANR	82580	IdentifierDeclStatement	axis2_char_t * start_input_str = NULL ;	206:15:8020:8056	82526	8	True				
ANR	82581	IdentifierDecl	* start_input_str = NULL		82526	0					
ANR	82582	IdentifierDeclType	axis2_char_t *		82526	0					
ANR	82583	Identifier	start_input_str		82526	1					
ANR	82584	AssignmentExpression	* start_input_str = NULL		82526	2		=			
ANR	82585	Identifier	NULL		82526	0					
ANR	82586	Identifier	NULL		82526	1					
ANR	82587	IdentifierDeclStatement	axis2_char_t * end_input_str = NULL ;	207:15:8073:8107	82526	9	True				
ANR	82588	IdentifierDecl	* end_input_str = NULL		82526	0					
ANR	82589	IdentifierDeclType	axis2_char_t *		82526	0					
ANR	82590	Identifier	end_input_str		82526	1					
ANR	82591	AssignmentExpression	* end_input_str = NULL		82526	2		=			
ANR	82592	Identifier	NULL		82526	0					
ANR	82593	Identifier	NULL		82526	1					
ANR	82594	IdentifierDeclStatement	unsigned int start_input_str_len = 0 ;	208:15:8124:8160	82526	10	True				
ANR	82595	IdentifierDecl	start_input_str_len = 0		82526	0					
ANR	82596	IdentifierDeclType	unsigned int		82526	0					
ANR	82597	Identifier	start_input_str_len		82526	1					
ANR	82598	AssignmentExpression	start_input_str_len = 0		82526	2		=			
ANR	82599	Identifier	start_input_str_len		82526	0					
ANR	82600	PrimaryExpression	0		82526	1					
ANR	82601	IdentifierDeclStatement	unsigned int end_input_str_len = 0 ;	209:15:8177:8211	82526	11	True				
ANR	82602	IdentifierDecl	end_input_str_len = 0		82526	0					
ANR	82603	IdentifierDeclType	unsigned int		82526	0					
ANR	82604	Identifier	end_input_str_len		82526	1					
ANR	82605	AssignmentExpression	end_input_str_len = 0		82526	2		=			
ANR	82606	Identifier	end_input_str_len		82526	0					
ANR	82607	PrimaryExpression	0		82526	1					
ANR	82608	IdentifierDeclStatement	axiom_data_source_t * data_source = NULL ;	212:15:8254:8293	82526	12	True				
ANR	82609	IdentifierDecl	* data_source = NULL		82526	0					
ANR	82610	IdentifierDeclType	axiom_data_source_t *		82526	0					
ANR	82611	Identifier	data_source		82526	1					
ANR	82612	AssignmentExpression	* data_source = NULL		82526	2		=			
ANR	82613	Identifier	NULL		82526	0					
ANR	82614	Identifier	NULL		82526	1					
ANR	82615	IdentifierDeclStatement	axutil_stream_t * stream = NULL ;	213:15:8310:8340	82526	13	True				
ANR	82616	IdentifierDecl	* stream = NULL		82526	0					
ANR	82617	IdentifierDeclType	axutil_stream_t *		82526	0					
ANR	82618	Identifier	stream		82526	1					
ANR	82619	AssignmentExpression	* stream = NULL		82526	2		=			
ANR	82620	Identifier	NULL		82526	0					
ANR	82621	Identifier	NULL		82526	1					
ANR	82622	ExpressionStatement	current_node = parent	216:20:8376:8397	82526	14	True				
ANR	82623	AssignmentExpression	current_node = parent		82526	0		=			
ANR	82624	Identifier	current_node		82526	0					
ANR	82625	Identifier	parent		82526	1					
ANR	82626	ExpressionStatement	"data_source = ( axiom_data_source_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"	217:20:8419:8520	82526	15	True				
ANR	82627	AssignmentExpression	"data_source = ( axiom_data_source_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		82526	0		=			
ANR	82628	Identifier	data_source		82526	0					
ANR	82629	CastExpression	"( axiom_data_source_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		82526	1					
ANR	82630	CastTarget	axiom_data_source_t *		82526	0					
ANR	82631	CallExpression	"axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		82526	1					
ANR	82632	Callee	axiom_node_get_data_element		82526	0					
ANR	82633	Identifier	axiom_node_get_data_element		82526	0					
ANR	82634	ArgumentList	current_node		82526	1					
ANR	82635	Argument	current_node		82526	0					
ANR	82636	Identifier	current_node		82526	0					
ANR	82637	Argument	Environment :: getEnv ( )		82526	1					
ANR	82638	CallExpression	Environment :: getEnv ( )		82526	0					
ANR	82639	Callee	Environment :: getEnv		82526	0					
ANR	82640	Identifier	Environment :: getEnv		82526	0					
ANR	82641	ArgumentList			82526	1					
ANR	82642	IfStatement	if ( ! data_source )		82526	16					
ANR	82643	Condition	! data_source	218:24:8546:8557	82526	0	True				
ANR	82644	UnaryOperationExpression	! data_source		82526	0					
ANR	82645	UnaryOperator	!		82526	0					
ANR	82646	Identifier	data_source		82526	1					
ANR	82647	ReturnStatement	return NULL ;	219:24:8584:8595	82526	1	True				
ANR	82648	Identifier	NULL		82526	0					
ANR	82649	ExpressionStatement	"stream = axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"	220:20:8617:8690	82526	17	True				
ANR	82650	AssignmentExpression	"stream = axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"		82526	0		=			
ANR	82651	Identifier	stream		82526	0					
ANR	82652	CallExpression	"axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"		82526	1					
ANR	82653	Callee	axiom_data_source_get_stream		82526	0					
ANR	82654	Identifier	axiom_data_source_get_stream		82526	0					
ANR	82655	ArgumentList	data_source		82526	1					
ANR	82656	Argument	data_source		82526	0					
ANR	82657	Identifier	data_source		82526	0					
ANR	82658	Argument	Environment :: getEnv ( )		82526	1					
ANR	82659	CallExpression	Environment :: getEnv ( )		82526	0					
ANR	82660	Callee	Environment :: getEnv		82526	0					
ANR	82661	Identifier	Environment :: getEnv		82526	0					
ANR	82662	ArgumentList			82526	1					
ANR	82663	IfStatement	if ( ! stream )		82526	18					
ANR	82664	Condition	! stream	221:24:8759:8765	82526	0	True				
ANR	82665	UnaryOperationExpression	! stream		82526	0					
ANR	82666	UnaryOperator	!		82526	0					
ANR	82667	Identifier	stream		82526	1					
ANR	82668	ReturnStatement	return NULL ;	222:24:8792:8803	82526	1	True				
ANR	82669	Identifier	NULL		82526	0					
ANR	82670	IfStatement	if ( ! parent_tag_closed )		82526	19					
ANR	82671	Condition	! parent_tag_closed	224:15:8839:8856	82526	0	True				
ANR	82672	UnaryOperationExpression	! parent_tag_closed		82526	0					
ANR	82673	UnaryOperator	!		82526	0					
ANR	82674	Identifier	parent_tag_closed		82526	1					
ANR	82675	CompoundStatement		39:12:1355:1355	82526	1					
ANR	82676	ExpressionStatement	"string_to_stream = "">"""	227:14:8900:8922	82526	0	True				
ANR	82677	AssignmentExpression	"string_to_stream = "">"""		82526	0		=			
ANR	82678	Identifier	string_to_stream		82526	0					
ANR	82679	PrimaryExpression	""">"""		82526	1					
ANR	82680	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , string_to_stream , axutil_strlen ( string_to_stream ) )"	228:14:8939:9040	82526	1	True				
ANR	82681	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , string_to_stream , axutil_strlen ( string_to_stream ) )"		82526	0					
ANR	82682	Callee	axutil_stream_write		82526	0					
ANR	82683	Identifier	axutil_stream_write		82526	0					
ANR	82684	ArgumentList	stream		82526	1					
ANR	82685	Argument	stream		82526	0					
ANR	82686	Identifier	stream		82526	0					
ANR	82687	Argument	Environment :: getEnv ( )		82526	1					
ANR	82688	CallExpression	Environment :: getEnv ( )		82526	0					
ANR	82689	Callee	Environment :: getEnv		82526	0					
ANR	82690	Identifier	Environment :: getEnv		82526	0					
ANR	82691	ArgumentList			82526	1					
ANR	82692	Argument	string_to_stream		82526	2					
ANR	82693	Identifier	string_to_stream		82526	0					
ANR	82694	Argument	axutil_strlen ( string_to_stream )		82526	3					
ANR	82695	CallExpression	axutil_strlen ( string_to_stream )		82526	0					
ANR	82696	Callee	axutil_strlen		82526	0					
ANR	82697	Identifier	axutil_strlen		82526	0					
ANR	82698	ArgumentList	string_to_stream		82526	1					
ANR	82699	Argument	string_to_stream		82526	0					
ANR	82700	Identifier	string_to_stream		82526	0					
ANR	82701	ExpressionStatement	tag_closed = 1	229:14:9056:9070	82526	2	True				
ANR	82702	AssignmentExpression	tag_closed = 1		82526	0		=			
ANR	82703	Identifier	tag_closed		82526	0					
ANR	82704	PrimaryExpression	1		82526	1					
ANR	82705	ExpressionStatement	p_prefix = NULL	233:23:9135:9150	82526	20	True				
ANR	82706	AssignmentExpression	p_prefix = NULL		82526	0		=			
ANR	82707	Identifier	p_prefix		82526	0					
ANR	82708	Identifier	NULL		82526	1					
ANR	82709	IfStatement	if ( ! isValidStatus )		82526	21					
ANR	82710	Condition	! isValidStatus	236:23:9199:9212	82526	0	True				
ANR	82711	UnaryOperationExpression	! isValidStatus		82526	0					
ANR	82712	UnaryOperator	!		82526	0					
ANR	82713	Identifier	isValidStatus		82526	1					
ANR	82714	CompoundStatement		51:19:1718:1718	82526	1					
ANR	82715	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Nil value found in non-nillable property status"" )"	240:28:9316:9423	82526	0	True				
ANR	82716	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Nil value found in non-nillable property status"" )"		82526	0					
ANR	82717	Callee	WSF_LOG_ERROR_MSG		82526	0					
ANR	82718	Identifier	WSF_LOG_ERROR_MSG		82526	0					
ANR	82719	ArgumentList	Environment :: getEnv ( ) -> log		82526	1					
ANR	82720	Argument	Environment :: getEnv ( ) -> log		82526	0					
ANR	82721	PtrMemberAccess	Environment :: getEnv ( ) -> log		82526	0					
ANR	82722	CallExpression	Environment :: getEnv ( )		82526	0					
ANR	82723	Callee	Environment :: getEnv		82526	0					
ANR	82724	Identifier	Environment :: getEnv		82526	0					
ANR	82725	ArgumentList			82526	1					
ANR	82726	Identifier	log		82526	1					
ANR	82727	Argument	WSF_LOG_SI		82526	1					
ANR	82728	Identifier	WSF_LOG_SI		82526	0					
ANR	82729	Argument	"""Nil value found in non-nillable property status"""		82526	2					
ANR	82730	PrimaryExpression	"""Nil value found in non-nillable property status"""		82526	0					
ANR	82731	ReturnStatement	return NULL ;	241:28:9453:9464	82526	1	True				
ANR	82732	Identifier	NULL		82526	0					
ANR	82733	ElseStatement	else		82526	0					
ANR	82734	CompoundStatement		59:19:2041:2041	82526	0					
ANR	82735	ExpressionStatement	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" ) ) )"	246:21:9580:9807	82526	0	True				
ANR	82736	AssignmentExpression	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" ) ) )"		82526	0		=			
ANR	82737	Identifier	start_input_str		82526	0					
ANR	82738	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" ) ) )"		82526	1					
ANR	82739	CastTarget	axis2_char_t *		82526	0					
ANR	82740	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" ) ) )"		82526	1					
ANR	82741	Callee	AXIS2_MALLOC		82526	0					
ANR	82742	Identifier	AXIS2_MALLOC		82526	0					
ANR	82743	ArgumentList	Environment :: getEnv ( ) -> allocator		82526	1					
ANR	82744	Argument	Environment :: getEnv ( ) -> allocator		82526	0					
ANR	82745	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		82526	0					
ANR	82746	CallExpression	Environment :: getEnv ( )		82526	0					
ANR	82747	Callee	Environment :: getEnv		82526	0					
ANR	82748	Identifier	Environment :: getEnv		82526	0					
ANR	82749	ArgumentList			82526	1					
ANR	82750	Identifier	allocator		82526	1					
ANR	82751	Argument	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" ) )"		82526	1					
ANR	82752	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" ) )"		82526	0		*			
ANR	82753	SizeofExpression	sizeof ( axis2_char_t )		82526	0					
ANR	82754	Sizeof	sizeof		82526	0					
ANR	82755	SizeofOperand	axis2_char_t		82526	1					
ANR	82756	AdditiveExpression	"4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" )"		82526	1		+			
ANR	82757	PrimaryExpression	4		82526	0					
ANR	82758	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" )"		82526	1		+			
ANR	82759	CallExpression	axutil_strlen ( p_prefix )		82526	0					
ANR	82760	Callee	axutil_strlen		82526	0					
ANR	82761	Identifier	axutil_strlen		82526	0					
ANR	82762	ArgumentList	p_prefix		82526	1					
ANR	82763	Argument	p_prefix		82526	0					
ANR	82764	Identifier	p_prefix		82526	0					
ANR	82765	CallExpression	"axutil_strlen ( ""status"" )"		82526	1					
ANR	82766	Callee	axutil_strlen		82526	0					
ANR	82767	Identifier	axutil_strlen		82526	0					
ANR	82768	ArgumentList	"""status"""		82526	1					
ANR	82769	Argument	"""status"""		82526	0					
ANR	82770	PrimaryExpression	"""status"""		82526	0					
ANR	82771	ExpressionStatement	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" ) ) )"	251:21:9933:10123	82526	1	True				
ANR	82772	AssignmentExpression	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" ) ) )"		82526	0		=			
ANR	82773	Identifier	end_input_str		82526	0					
ANR	82774	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" ) ) )"		82526	1					
ANR	82775	CastTarget	axis2_char_t *		82526	0					
ANR	82776	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" ) ) )"		82526	1					
ANR	82777	Callee	AXIS2_MALLOC		82526	0					
ANR	82778	Identifier	AXIS2_MALLOC		82526	0					
ANR	82779	ArgumentList	Environment :: getEnv ( ) -> allocator		82526	1					
ANR	82780	Argument	Environment :: getEnv ( ) -> allocator		82526	0					
ANR	82781	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		82526	0					
ANR	82782	CallExpression	Environment :: getEnv ( )		82526	0					
ANR	82783	Callee	Environment :: getEnv		82526	0					
ANR	82784	Identifier	Environment :: getEnv		82526	0					
ANR	82785	ArgumentList			82526	1					
ANR	82786	Identifier	allocator		82526	1					
ANR	82787	Argument	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" ) )"		82526	1					
ANR	82788	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" ) )"		82526	0		*			
ANR	82789	SizeofExpression	sizeof ( axis2_char_t )		82526	0					
ANR	82790	Sizeof	sizeof		82526	0					
ANR	82791	SizeofOperand	axis2_char_t		82526	1					
ANR	82792	AdditiveExpression	"5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" )"		82526	1		+			
ANR	82793	PrimaryExpression	5		82526	0					
ANR	82794	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""status"" )"		82526	1		+			
ANR	82795	CallExpression	axutil_strlen ( p_prefix )		82526	0					
ANR	82796	Callee	axutil_strlen		82526	0					
ANR	82797	Identifier	axutil_strlen		82526	0					
ANR	82798	ArgumentList	p_prefix		82526	1					
ANR	82799	Argument	p_prefix		82526	0					
ANR	82800	Identifier	p_prefix		82526	0					
ANR	82801	CallExpression	"axutil_strlen ( ""status"" )"		82526	1					
ANR	82802	Callee	axutil_strlen		82526	0					
ANR	82803	Identifier	axutil_strlen		82526	0					
ANR	82804	ArgumentList	"""status"""		82526	1					
ANR	82805	Argument	"""status"""		82526	0					
ANR	82806	PrimaryExpression	"""status"""		82526	0					
ANR	82807	ExpressionStatement	"sprintf ( start_input_str , ""<%s%sstatus"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	266:28:10482:10659	82526	2	True				
ANR	82808	CallExpression	"sprintf ( start_input_str , ""<%s%sstatus"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		82526	0					
ANR	82809	Callee	sprintf		82526	0					
ANR	82810	Identifier	sprintf		82526	0					
ANR	82811	ArgumentList	start_input_str		82526	1					
ANR	82812	Argument	start_input_str		82526	0					
ANR	82813	Identifier	start_input_str		82526	0					
ANR	82814	Argument	"""<%s%sstatus"""		82526	1					
ANR	82815	PrimaryExpression	"""<%s%sstatus"""		82526	0					
ANR	82816	Argument	"p_prefix ? p_prefix : """""		82526	2					
ANR	82817	ConditionalExpression	"p_prefix ? p_prefix : """""		82526	0					
ANR	82818	Condition	p_prefix		82526	0					
ANR	82819	Identifier	p_prefix		82526	0					
ANR	82820	Identifier	p_prefix		82526	1					
ANR	82821	PrimaryExpression	""""""		82526	2					
ANR	82822	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		82526	3					
ANR	82823	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		82526	0					
ANR	82824	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		82526	0					
ANR	82825	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		82526	0		&&			
ANR	82826	Identifier	p_prefix		82526	0					
ANR	82827	CallExpression	"axutil_strcmp ( p_prefix , """" )"		82526	1					
ANR	82828	Callee	axutil_strcmp		82526	0					
ANR	82829	Identifier	axutil_strcmp		82526	0					
ANR	82830	ArgumentList	p_prefix		82526	1					
ANR	82831	Argument	p_prefix		82526	0					
ANR	82832	Identifier	p_prefix		82526	0					
ANR	82833	Argument	""""""		82526	1					
ANR	82834	PrimaryExpression	""""""		82526	0					
ANR	82835	PrimaryExpression	""":"""		82526	1					
ANR	82836	PrimaryExpression	""""""		82526	2					
ANR	82837	ExpressionStatement	start_input_str_len = axutil_strlen ( start_input_str )	270:24:10715:10767	82526	3	True				
ANR	82838	AssignmentExpression	start_input_str_len = axutil_strlen ( start_input_str )		82526	0		=			
ANR	82839	Identifier	start_input_str_len		82526	0					
ANR	82840	CallExpression	axutil_strlen ( start_input_str )		82526	1					
ANR	82841	Callee	axutil_strlen		82526	0					
ANR	82842	Identifier	axutil_strlen		82526	0					
ANR	82843	ArgumentList	start_input_str		82526	1					
ANR	82844	Argument	start_input_str		82526	0					
ANR	82845	Identifier	start_input_str		82526	0					
ANR	82846	ExpressionStatement	"sprintf ( end_input_str , ""</%s%sstatus>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	271:24:10793:10970	82526	4	True				
ANR	82847	CallExpression	"sprintf ( end_input_str , ""</%s%sstatus>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		82526	0					
ANR	82848	Callee	sprintf		82526	0					
ANR	82849	Identifier	sprintf		82526	0					
ANR	82850	ArgumentList	end_input_str		82526	1					
ANR	82851	Argument	end_input_str		82526	0					
ANR	82852	Identifier	end_input_str		82526	0					
ANR	82853	Argument	"""</%s%sstatus>"""		82526	1					
ANR	82854	PrimaryExpression	"""</%s%sstatus>"""		82526	0					
ANR	82855	Argument	"p_prefix ? p_prefix : """""		82526	2					
ANR	82856	ConditionalExpression	"p_prefix ? p_prefix : """""		82526	0					
ANR	82857	Condition	p_prefix		82526	0					
ANR	82858	Identifier	p_prefix		82526	0					
ANR	82859	Identifier	p_prefix		82526	1					
ANR	82860	PrimaryExpression	""""""		82526	2					
ANR	82861	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		82526	3					
ANR	82862	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		82526	0					
ANR	82863	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		82526	0					
ANR	82864	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		82526	0		&&			
ANR	82865	Identifier	p_prefix		82526	0					
ANR	82866	CallExpression	"axutil_strcmp ( p_prefix , """" )"		82526	1					
ANR	82867	Callee	axutil_strcmp		82526	0					
ANR	82868	Identifier	axutil_strcmp		82526	0					
ANR	82869	ArgumentList	p_prefix		82526	1					
ANR	82870	Argument	p_prefix		82526	0					
ANR	82871	Identifier	p_prefix		82526	0					
ANR	82872	Argument	""""""		82526	1					
ANR	82873	PrimaryExpression	""""""		82526	0					
ANR	82874	PrimaryExpression	""":"""		82526	1					
ANR	82875	PrimaryExpression	""""""		82526	2					
ANR	82876	ExpressionStatement	end_input_str_len = axutil_strlen ( end_input_str )	274:24:10996:11044	82526	5	True				
ANR	82877	AssignmentExpression	end_input_str_len = axutil_strlen ( end_input_str )		82526	0		=			
ANR	82878	Identifier	end_input_str_len		82526	0					
ANR	82879	CallExpression	axutil_strlen ( end_input_str )		82526	1					
ANR	82880	Callee	axutil_strlen		82526	0					
ANR	82881	Identifier	axutil_strlen		82526	0					
ANR	82882	ArgumentList	end_input_str		82526	1					
ANR	82883	Argument	end_input_str		82526	0					
ANR	82884	Identifier	end_input_str		82526	0					
ANR	82885	IfStatement	if ( ! property_Status -> isParticle ( ) )		82526	6					
ANR	82886	Condition	! property_Status -> isParticle ( )	276:31:11099:11128	82526	0	True				
ANR	82887	UnaryOperationExpression	! property_Status -> isParticle ( )		82526	0					
ANR	82888	UnaryOperator	!		82526	0					
ANR	82889	CallExpression	property_Status -> isParticle ( )		82526	1					
ANR	82890	Callee	property_Status -> isParticle		82526	0					
ANR	82891	PtrMemberAccess	property_Status -> isParticle		82526	0					
ANR	82892	Identifier	property_Status		82526	0					
ANR	82893	Identifier	isParticle		82526	1					
ANR	82894	ArgumentList			82526	1					
ANR	82895	CompoundStatement		91:28:3643:3643	82526	1					
ANR	82896	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"	278:32:11193:11281	82526	0	True				
ANR	82897	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"		82526	0					
ANR	82898	Callee	axutil_stream_write		82526	0					
ANR	82899	Identifier	axutil_stream_write		82526	0					
ANR	82900	ArgumentList	stream		82526	1					
ANR	82901	Argument	stream		82526	0					
ANR	82902	Identifier	stream		82526	0					
ANR	82903	Argument	Environment :: getEnv ( )		82526	1					
ANR	82904	CallExpression	Environment :: getEnv ( )		82526	0					
ANR	82905	Callee	Environment :: getEnv		82526	0					
ANR	82906	Identifier	Environment :: getEnv		82526	0					
ANR	82907	ArgumentList			82526	1					
ANR	82908	Argument	start_input_str		82526	2					
ANR	82909	Identifier	start_input_str		82526	0					
ANR	82910	Argument	start_input_str_len		82526	3					
ANR	82911	Identifier	start_input_str_len		82526	0					
ANR	82912	ExpressionStatement	"property_Status -> serialize ( current_node , parent_element , property_Status -> isParticle ( ) || false , namespaces , next_ns_index )"	280:28:11341:11545	82526	7	True				
ANR	82913	CallExpression	"property_Status -> serialize ( current_node , parent_element , property_Status -> isParticle ( ) || false , namespaces , next_ns_index )"		82526	0					
ANR	82914	Callee	property_Status -> serialize		82526	0					
ANR	82915	PtrMemberAccess	property_Status -> serialize		82526	0					
ANR	82916	Identifier	property_Status		82526	0					
ANR	82917	Identifier	serialize		82526	1					
ANR	82918	ArgumentList	current_node		82526	1					
ANR	82919	Argument	current_node		82526	0					
ANR	82920	Identifier	current_node		82526	0					
ANR	82921	Argument	parent_element		82526	1					
ANR	82922	Identifier	parent_element		82526	0					
ANR	82923	Argument	property_Status -> isParticle ( ) || false		82526	2					
ANR	82924	OrExpression	property_Status -> isParticle ( ) || false		82526	0		||			
ANR	82925	CallExpression	property_Status -> isParticle ( )		82526	0					
ANR	82926	Callee	property_Status -> isParticle		82526	0					
ANR	82927	PtrMemberAccess	property_Status -> isParticle		82526	0					
ANR	82928	Identifier	property_Status		82526	0					
ANR	82929	Identifier	isParticle		82526	1					
ANR	82930	ArgumentList			82526	1					
ANR	82931	Identifier	false		82526	1					
ANR	82932	Argument	namespaces		82526	3					
ANR	82933	Identifier	namespaces		82526	0					
ANR	82934	Argument	next_ns_index		82526	4					
ANR	82935	Identifier	next_ns_index		82526	0					
ANR	82936	IfStatement	if ( ! property_Status -> isParticle ( ) )		82526	8					
ANR	82937	Condition	! property_Status -> isParticle ( )	283:31:11607:11636	82526	0	True				
ANR	82938	UnaryOperationExpression	! property_Status -> isParticle ( )		82526	0					
ANR	82939	UnaryOperator	!		82526	0					
ANR	82940	CallExpression	property_Status -> isParticle ( )		82526	1					
ANR	82941	Callee	property_Status -> isParticle		82526	0					
ANR	82942	PtrMemberAccess	property_Status -> isParticle		82526	0					
ANR	82943	Identifier	property_Status		82526	0					
ANR	82944	Identifier	isParticle		82526	1					
ANR	82945	ArgumentList			82526	1					
ANR	82946	CompoundStatement		98:28:4151:4151	82526	1					
ANR	82947	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"	285:32:11701:11785	82526	0	True				
ANR	82948	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"		82526	0					
ANR	82949	Callee	axutil_stream_write		82526	0					
ANR	82950	Identifier	axutil_stream_write		82526	0					
ANR	82951	ArgumentList	stream		82526	1					
ANR	82952	Argument	stream		82526	0					
ANR	82953	Identifier	stream		82526	0					
ANR	82954	Argument	Environment :: getEnv ( )		82526	1					
ANR	82955	CallExpression	Environment :: getEnv ( )		82526	0					
ANR	82956	Callee	Environment :: getEnv		82526	0					
ANR	82957	Identifier	Environment :: getEnv		82526	0					
ANR	82958	ArgumentList			82526	1					
ANR	82959	Argument	end_input_str		82526	2					
ANR	82960	Identifier	end_input_str		82526	0					
ANR	82961	Argument	end_input_str_len		82526	3					
ANR	82962	Identifier	end_input_str_len		82526	0					
ANR	82963	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"	289:21:11889:11949	82526	9	True				
ANR	82964	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"		82526	0					
ANR	82965	Callee	AXIS2_FREE		82526	0					
ANR	82966	Identifier	AXIS2_FREE		82526	0					
ANR	82967	ArgumentList	Environment :: getEnv ( ) -> allocator		82526	1					
ANR	82968	Argument	Environment :: getEnv ( ) -> allocator		82526	0					
ANR	82969	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		82526	0					
ANR	82970	CallExpression	Environment :: getEnv ( )		82526	0					
ANR	82971	Callee	Environment :: getEnv		82526	0					
ANR	82972	Identifier	Environment :: getEnv		82526	0					
ANR	82973	ArgumentList			82526	1					
ANR	82974	Identifier	allocator		82526	1					
ANR	82975	Argument	start_input_str		82526	1					
ANR	82976	Identifier	start_input_str		82526	0					
ANR	82977	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"	290:21:11972:12030	82526	10	True				
ANR	82978	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"		82526	0					
ANR	82979	Callee	AXIS2_FREE		82526	0					
ANR	82980	Identifier	AXIS2_FREE		82526	0					
ANR	82981	ArgumentList	Environment :: getEnv ( ) -> allocator		82526	1					
ANR	82982	Argument	Environment :: getEnv ( ) -> allocator		82526	0					
ANR	82983	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		82526	0					
ANR	82984	CallExpression	Environment :: getEnv ( )		82526	0					
ANR	82985	Callee	Environment :: getEnv		82526	0					
ANR	82986	Identifier	Environment :: getEnv		82526	0					
ANR	82987	ArgumentList			82526	1					
ANR	82988	Identifier	allocator		82526	1					
ANR	82989	Argument	end_input_str		82526	1					
ANR	82990	Identifier	end_input_str		82526	0					
ANR	82991	ReturnStatement	return parent ;	295:12:12084:12097	82526	22	True				
ANR	82992	Identifier	parent		82526	0					
ANR	82993	ReturnType	WSF_CALL		82526	1					
ANR	82994	Identifier	AviaryJob :: ControlJobResponse :: serialize		82526	2					
ANR	82995	ParameterList	"axiom_node_t * parent , axiom_element_t * parent_element , int parent_tag_closed , axutil_hash_t * namespaces , int * next_ns_index"		82526	3					
ANR	82996	Parameter	axiom_node_t * parent	182:42:7366:7385	82526	0	True				
ANR	82997	ParameterType	axiom_node_t *		82526	0					
ANR	82998	Identifier	parent		82526	1					
ANR	82999	Parameter	axiom_element_t * parent_element	183:3:7392:7422	82526	1	True				
ANR	83000	ParameterType	axiom_element_t *		82526	0					
ANR	83001	Identifier	parent_element		82526	1					
ANR	83002	Parameter	int parent_tag_closed	184:3:7429:7449	82526	2	True				
ANR	83003	ParameterType	int		82526	0					
ANR	83004	Identifier	parent_tag_closed		82526	1					
ANR	83005	Parameter	axutil_hash_t * namespaces	185:3:7456:7480	82526	3	True				
ANR	83006	ParameterType	axutil_hash_t *		82526	0					
ANR	83007	Identifier	namespaces		82526	1					
ANR	83008	Parameter	int * next_ns_index	186:3:7487:7504	82526	4	True				
ANR	83009	ParameterType	int *		82526	0					
ANR	83010	Identifier	next_ns_index		82526	1					
ANR	83011	CFGEntryNode	ENTRY		82526		True				
ANR	83012	CFGExitNode	EXIT		82526		True				
ANR	83013	Symbol	parent		82526						
ANR	83014	Symbol	Environment :: getEnv		82526						
ANR	83015	Symbol	current_node		82526						
ANR	83016	Symbol	qname_uri		82526						
ANR	83017	Symbol	axutil_strlen		82526						
ANR	83018	Symbol	p_prefix		82526						
ANR	83019	Symbol	isValidStatus		82526						
ANR	83020	Symbol	ns1		82526						
ANR	83021	Symbol	axiom_node_get_data_element		82526						
ANR	83022	Symbol	WSF_LOG_SI		82526						
ANR	83023	Symbol	stream		82526						
ANR	83024	Symbol	text_value_1		82526						
ANR	83025	Symbol	AXIS2_MALLOC		82526						
ANR	83026	Symbol	Environment :: getEnv ( ) -> allocator		82526						
ANR	83027	Symbol	parent_element		82526						
ANR	83028	Symbol	* property_Status		82526						
ANR	83029	Symbol	axiom_data_source_get_stream		82526						
ANR	83030	Symbol	NULL		82526						
ANR	83031	Symbol	end_input_str_len		82526						
ANR	83032	Symbol	tag_closed		82526						
ANR	83033	Symbol	false		82526						
ANR	83034	Symbol	start_input_str		82526						
ANR	83035	Symbol	parent_tag_closed		82526						
ANR	83036	Symbol	next_ns_index		82526						
ANR	83037	Symbol	Environment :: getEnv ( ) -> log		82526						
ANR	83038	Symbol	string_to_stream		82526						
ANR	83039	Symbol	data_source		82526						
ANR	83040	Symbol	start_input_str_len		82526						
ANR	83041	Symbol	property_Status		82526						
ANR	83042	Symbol	qname_prefix		82526						
ANR	83043	Symbol	property_Status -> isParticle		82526						
ANR	83044	Symbol	* Environment :: getEnv		82526						
ANR	83045	Symbol	axutil_strcmp		82526						
ANR	83046	Symbol	end_input_str		82526						
ANR	83047	Symbol	namespaces		82526						
ANR	83048	Function	AviaryJob :: ControlJobResponse :: getProperty1	304:34:12242:12371							
ANR	83049	FunctionDef	AviaryJob :: ControlJobResponse :: getProperty1 ()		83048	0					
ANR	83050	CompoundStatement		306:12:12321:12371	83048	0					
ANR	83051	ReturnStatement	return getStatus ( ) ;	307:16:12339:12357	83048	0	True				
ANR	83052	CallExpression	getStatus ( )		83048	0					
ANR	83053	Callee	getStatus		83048	0					
ANR	83054	Identifier	getStatus		83048	0					
ANR	83055	ArgumentList			83048	1					
ANR	83056	ReturnType	WSF_CALL		83048	1					
ANR	83057	Identifier	AviaryJob :: ControlJobResponse :: getProperty1		83048	2					
ANR	83058	ParameterList			83048	3					
ANR	83059	CFGEntryNode	ENTRY		83048		True				
ANR	83060	CFGExitNode	EXIT		83048		True				
ANR	83061	Symbol	getStatus		83048						
ANR	83062	Function	AviaryJob :: ControlJobResponse :: getStatus	313:34:12474:12606							
ANR	83063	FunctionDef	AviaryJob :: ControlJobResponse :: getStatus ()		83062	0					
ANR	83064	CompoundStatement		315:13:12551:12606	83062	0					
ANR	83065	ReturnStatement	return property_Status ;	316:16:12569:12591	83062	0	True				
ANR	83066	Identifier	property_Status		83062	0					
ANR	83067	ReturnType	WSF_CALL		83062	1					
ANR	83068	Identifier	AviaryJob :: ControlJobResponse :: getStatus		83062	2					
ANR	83069	ParameterList			83062	3					
ANR	83070	CFGEntryNode	ENTRY		83062		True				
ANR	83071	CFGExitNode	EXIT		83062		True				
ANR	83072	Symbol	property_Status		83062						
ANR	83073	Function	AviaryJob :: ControlJobResponse :: setStatus	322:12:12686:13783							
ANR	83074	FunctionDef	AviaryJob :: ControlJobResponse :: setStatus (AviaryCommon :: Status * arg_Status)		83073	0					
ANR	83075	CompoundStatement		325:13:12822:13783	83073	0					
ANR	83076	IfStatement	if ( isValidStatus && arg_Status == property_Status )		83073	0					
ANR	83077	Condition	isValidStatus && arg_Status == property_Status	328:19:12861:12930	83073	0	True				
ANR	83078	AndExpression	isValidStatus && arg_Status == property_Status		83073	0		&&			
ANR	83079	Identifier	isValidStatus		83073	0					
ANR	83080	EqualityExpression	arg_Status == property_Status		83073	1		==			
ANR	83081	Identifier	arg_Status		83073	0					
ANR	83082	Identifier	property_Status		83073	1					
ANR	83083	CompoundStatement		6:16:126:126	83073	1					
ANR	83084	ReturnStatement	return true ;	332:20:12992:13003	83073	0	True				
ANR	83085	Identifier	true		83073	0					
ANR	83086	IfStatement	if ( NULL == arg_Status )		83073	1					
ANR	83087	Condition	NULL == arg_Status	336:21:13062:13079	83073	0	True				
ANR	83088	EqualityExpression	NULL == arg_Status		83073	0		==			
ANR	83089	Identifier	NULL		83073	0					
ANR	83090	Identifier	arg_Status		83073	1					
ANR	83091	CompoundStatement		14:18:301:301	83073	1					
ANR	83092	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""status is being set to NULL, but it is not a nullable element"" )"	339:22:13148:13269	83073	0	True				
ANR	83093	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""status is being set to NULL, but it is not a nullable element"" )"		83073	0					
ANR	83094	Callee	WSF_LOG_ERROR_MSG		83073	0					
ANR	83095	Identifier	WSF_LOG_ERROR_MSG		83073	0					
ANR	83096	ArgumentList	Environment :: getEnv ( ) -> log		83073	1					
ANR	83097	Argument	Environment :: getEnv ( ) -> log		83073	0					
ANR	83098	PtrMemberAccess	Environment :: getEnv ( ) -> log		83073	0					
ANR	83099	CallExpression	Environment :: getEnv ( )		83073	0					
ANR	83100	Callee	Environment :: getEnv		83073	0					
ANR	83101	Identifier	Environment :: getEnv		83073	0					
ANR	83102	ArgumentList			83073	1					
ANR	83103	Identifier	log		83073	1					
ANR	83104	Argument	WSF_LOG_SI		83073	1					
ANR	83105	Identifier	WSF_LOG_SI		83073	0					
ANR	83106	Argument	"""status is being set to NULL, but it is not a nullable element"""		83073	2					
ANR	83107	PrimaryExpression	"""status is being set to NULL, but it is not a nullable element"""		83073	0					
ANR	83108	ReturnStatement	return AXIS2_FAILURE ;	340:22:13293:13313	83073	1	True				
ANR	83109	Identifier	AXIS2_FAILURE		83073	0					
ANR	83110	ExpressionStatement	resetStatus ( )	345:16:13386:13399	83073	2	True				
ANR	83111	CallExpression	resetStatus ( )		83073	0					
ANR	83112	Callee	resetStatus		83073	0					
ANR	83113	Identifier	resetStatus		83073	0					
ANR	83114	ArgumentList			83073	1					
ANR	83115	IfStatement	if ( NULL == arg_Status )		83073	3					
ANR	83116	Condition	NULL == arg_Status	348:23:13442:13459	83073	0	True				
ANR	83117	EqualityExpression	NULL == arg_Status		83073	0		==			
ANR	83118	Identifier	NULL		83073	0					
ANR	83119	Identifier	arg_Status		83073	1					
ANR	83120	CompoundStatement		26:16:681:681	83073	1					
ANR	83121	ReturnStatement	return true ;	352:20:13572:13583	83073	0	True				
ANR	83122	Identifier	true		83073	0					
ANR	83123	ExpressionStatement	property_Status = arg_Status	355:24:13644:13672	83073	4	True				
ANR	83124	AssignmentExpression	property_Status = arg_Status		83073	0		=			
ANR	83125	Identifier	property_Status		83073	0					
ANR	83126	Identifier	arg_Status		83073	1					
ANR	83127	ExpressionStatement	isValidStatus = true	356:24:13698:13718	83073	5	True				
ANR	83128	AssignmentExpression	isValidStatus = true		83073	0		=			
ANR	83129	Identifier	isValidStatus		83073	0					
ANR	83130	Identifier	true		83073	1					
ANR	83131	ReturnStatement	return true ;	358:16:13757:13768	83073	6	True				
ANR	83132	Identifier	true		83073	0					
ANR	83133	ReturnType	bool WSF_CALL		83073	1					
ANR	83134	Identifier	AviaryJob :: ControlJobResponse :: setStatus		83073	2					
ANR	83135	ParameterList	AviaryCommon :: Status * arg_Status		83073	3					
ANR	83136	Parameter	AviaryCommon :: Status * arg_Status	324:20:12774:12806	83073	0	True				
ANR	83137	ParameterType	AviaryCommon :: Status *		83073	0					
ANR	83138	Identifier	arg_Status		83073	1					
ANR	83139	CFGEntryNode	ENTRY		83073		True				
ANR	83140	CFGExitNode	EXIT		83073		True				
ANR	83141	Symbol	property_Status		83073						
ANR	83142	Symbol	arg_Status		83073						
ANR	83143	Symbol	Environment :: getEnv		83073						
ANR	83144	Symbol	NULL		83073						
ANR	83145	Symbol	WSF_LOG_SI		83073						
ANR	83146	Symbol	* Environment :: getEnv		83073						
ANR	83147	Symbol	true		83073						
ANR	83148	Symbol	isValidStatus		83073						
ANR	83149	Symbol	Environment :: getEnv ( ) -> log		83073						
ANR	83150	Symbol	AXIS2_FAILURE		83073						
ANR	83151	Function	AviaryJob :: ControlJobResponse :: resetStatus	366:11:13876:14390							
ANR	83152	FunctionDef	AviaryJob :: ControlJobResponse :: resetStatus ()		83151	0					
ANR	83153	CompoundStatement		368:11:13957:14390	83151	0					
ANR	83154	IdentifierDeclStatement	int i = 0 ;	369:15:13974:13983	83151	0	True				
ANR	83155	IdentifierDecl	i = 0		83151	0					
ANR	83156	IdentifierDeclType	int		83151	0					
ANR	83157	Identifier	i		83151	1					
ANR	83158	AssignmentExpression	i = 0		83151	2		=			
ANR	83159	Identifier	i		83151	0					
ANR	83160	PrimaryExpression	0		83151	1					
ANR	83161	IdentifierDeclStatement	int count = 0 ;	370:15:14000:14013	83151	1	True				
ANR	83162	IdentifierDecl	count = 0		83151	0					
ANR	83163	IdentifierDeclType	int		83151	0					
ANR	83164	Identifier	count		83151	1					
ANR	83165	AssignmentExpression	count = 0		83151	2		=			
ANR	83166	Identifier	count		83151	0					
ANR	83167	PrimaryExpression	0		83151	1					
ANR	83168	IfStatement	if ( property_Status != NULL )		83151	2					
ANR	83169	Condition	property_Status != NULL	377:19:14083:14105	83151	0	True				
ANR	83170	EqualityExpression	property_Status != NULL		83151	0		!=			
ANR	83171	Identifier	property_Status		83151	0					
ANR	83172	Identifier	NULL		83151	1					
ANR	83173	CompoundStatement		11:16:166:166	83151	1					
ANR	83174	Statement	delete	381:25:14191:14196	83151	0	True				
ANR	83175	ExpressionStatement	property_Status	381:33:14199:14214	83151	1	True				
ANR	83176	Identifier	property_Status		83151	0					
ANR	83177	ExpressionStatement	isValidStatus = false	389:15:14327:14348	83151	3	True				
ANR	83178	AssignmentExpression	isValidStatus = false		83151	0		=			
ANR	83179	Identifier	isValidStatus		83151	0					
ANR	83180	Identifier	false		83151	1					
ANR	83181	ReturnStatement	return true ;	390:15:14366:14377	83151	4	True				
ANR	83182	Identifier	true		83151	0					
ANR	83183	ReturnType	bool WSF_CALL		83151	1					
ANR	83184	Identifier	AviaryJob :: ControlJobResponse :: resetStatus		83151	2					
ANR	83185	ParameterList			83151	3					
ANR	83186	CFGEntryNode	ENTRY		83151		True				
ANR	83187	CFGExitNode	EXIT		83151		True				
ANR	83188	Symbol	property_Status		83151						
ANR	83189	Symbol	NULL		83151						
ANR	83190	Symbol	count		83151						
ANR	83191	Symbol	false		83151						
ANR	83192	Symbol	true		83151						
ANR	83193	Symbol	i		83151						
ANR	83194	Symbol	isValidStatus		83151						
ANR	83195	Function	AviaryJob :: ControlJobResponse :: isStatusNil	396:11:14477:14609							
ANR	83196	FunctionDef	AviaryJob :: ControlJobResponse :: isStatusNil ()		83195	0					
ANR	83197	CompoundStatement		398:11:14558:14609	83195	0					
ANR	83198	ReturnStatement	return ! isValidStatus ;	399:15:14575:14596	83195	0	True				
ANR	83199	UnaryOperationExpression	! isValidStatus		83195	0					
ANR	83200	UnaryOperator	!		83195	0					
ANR	83201	Identifier	isValidStatus		83195	1					
ANR	83202	ReturnType	bool WSF_CALL		83195	1					
ANR	83203	Identifier	AviaryJob :: ControlJobResponse :: isStatusNil		83195	2					
ANR	83204	ParameterList			83195	3					
ANR	83205	CFGEntryNode	ENTRY		83195		True				
ANR	83206	CFGExitNode	EXIT		83195		True				
ANR	83207	Symbol	isValidStatus		83195						
ANR	83208	Function	AviaryJob :: ControlJobResponse :: setStatusNil	405:11:14716:14848							
ANR	83209	FunctionDef	AviaryJob :: ControlJobResponse :: setStatusNil ()		83208	0					
ANR	83210	CompoundStatement		407:11:14798:14848	83208	0					
ANR	83211	ReturnStatement	return resetStatus ( ) ;	408:15:14815:14835	83208	0	True				
ANR	83212	CallExpression	resetStatus ( )		83208	0					
ANR	83213	Callee	resetStatus		83208	0					
ANR	83214	Identifier	resetStatus		83208	0					
ANR	83215	ArgumentList			83208	1					
ANR	83216	ReturnType	bool WSF_CALL		83208	1					
ANR	83217	Identifier	AviaryJob :: ControlJobResponse :: setStatusNil		83208	2					
ANR	83218	ParameterList			83208	3					
ANR	83219	CFGEntryNode	ENTRY		83208		True				
ANR	83220	CFGExitNode	EXIT		83208		True				
ANR	83221	Symbol	resetStatus		83208						
