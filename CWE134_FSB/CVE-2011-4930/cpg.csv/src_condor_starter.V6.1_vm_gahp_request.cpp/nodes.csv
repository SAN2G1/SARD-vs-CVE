command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4039151	File	data/converged/CVE-2011-4930_htcondor/src_condor_starter.V6.1_vm_gahp_request.cpp								
ANR	4039152	Function	VMGahpRequest :: VMGahpRequest	38:0:1199:1488							
ANR	4039153	FunctionDef	VMGahpRequest :: VMGahpRequest (VMGahpServer * server)		4039152	0					
ANR	4039154	CompoundStatement		39:0:1250:1488	4039152	0					
ANR	4039155	ExpressionStatement	m_mode = NORMAL	40:1:1253:1268	4039152	0	True				
ANR	4039156	AssignmentExpression	m_mode = NORMAL		4039152	0		=			
ANR	4039157	Identifier	m_mode		4039152	0					
ANR	4039158	Identifier	NORMAL		4039152	1					
ANR	4039159	ExpressionStatement	m_server = server	41:1:1271:1288	4039152	1	True				
ANR	4039160	AssignmentExpression	m_server = server		4039152	0		=			
ANR	4039161	Identifier	m_server		4039152	0					
ANR	4039162	Identifier	server		4039152	1					
ANR	4039163	ExpressionStatement	m_pending_status = REQ_INITIALIZED	43:1:1292:1326	4039152	2	True				
ANR	4039164	AssignmentExpression	m_pending_status = REQ_INITIALIZED		4039152	0		=			
ANR	4039165	Identifier	m_pending_status		4039152	0					
ANR	4039166	Identifier	REQ_INITIALIZED		4039152	1					
ANR	4039167	ExpressionStatement	m_pending_reqid = 0	44:1:1329:1348	4039152	3	True				
ANR	4039168	AssignmentExpression	m_pending_reqid = 0		4039152	0		=			
ANR	4039169	Identifier	m_pending_reqid		4039152	0					
ANR	4039170	PrimaryExpression	0		4039152	1					
ANR	4039171	ExpressionStatement	"m_pending_args = """""	45:1:1351:1370	4039152	4	True				
ANR	4039172	AssignmentExpression	"m_pending_args = """""		4039152	0		=			
ANR	4039173	Identifier	m_pending_args		4039152	0					
ANR	4039174	PrimaryExpression	""""""		4039152	1					
ANR	4039175	ExpressionStatement	m_pending_result = NULL	46:1:1373:1396	4039152	5	True				
ANR	4039176	AssignmentExpression	m_pending_result = NULL		4039152	0		=			
ANR	4039177	Identifier	m_pending_result		4039152	0					
ANR	4039178	Identifier	NULL		4039152	1					
ANR	4039179	ExpressionStatement	m_timeout = 0	48:1:1401:1414	4039152	6	True				
ANR	4039180	AssignmentExpression	m_timeout = 0		4039152	0		=			
ANR	4039181	Identifier	m_timeout		4039152	0					
ANR	4039182	PrimaryExpression	0		4039152	1					
ANR	4039183	ExpressionStatement	m_expire_time = 0	49:1:1417:1434	4039152	7	True				
ANR	4039184	AssignmentExpression	m_expire_time = 0		4039152	0		=			
ANR	4039185	Identifier	m_expire_time		4039152	0					
ANR	4039186	PrimaryExpression	0		4039152	1					
ANR	4039187	ExpressionStatement	m_user_timer_id = - 1	50:1:1437:1457	4039152	8	True				
ANR	4039188	AssignmentExpression	m_user_timer_id = - 1		4039152	0		=			
ANR	4039189	Identifier	m_user_timer_id		4039152	0					
ANR	4039190	UnaryOperationExpression	- 1		4039152	1					
ANR	4039191	UnaryOperator	-		4039152	0					
ANR	4039192	PrimaryExpression	1		4039152	1					
ANR	4039193	ExpressionStatement	m_pending_timeout_tid = - 1	51:1:1460:1486	4039152	9	True				
ANR	4039194	AssignmentExpression	m_pending_timeout_tid = - 1		4039152	0		=			
ANR	4039195	Identifier	m_pending_timeout_tid		4039152	0					
ANR	4039196	UnaryOperationExpression	- 1		4039152	1					
ANR	4039197	UnaryOperator	-		4039152	0					
ANR	4039198	PrimaryExpression	1		4039152	1					
ANR	4039199	Identifier	VMGahpRequest :: VMGahpRequest		4039152	1					
ANR	4039200	ParameterList	VMGahpServer * server		4039152	2					
ANR	4039201	Parameter	VMGahpServer * server	38:29:1228:1247	4039152	0	True				
ANR	4039202	ParameterType	VMGahpServer *		4039152	0					
ANR	4039203	Identifier	server		4039152	1					
ANR	4039204	CFGEntryNode	ENTRY		4039152		True				
ANR	4039205	CFGExitNode	EXIT		4039152		True				
ANR	4039206	Symbol	m_pending_reqid		4039152						
ANR	4039207	Symbol	server		4039152						
ANR	4039208	Symbol	REQ_INITIALIZED		4039152						
ANR	4039209	Symbol	m_expire_time		4039152						
ANR	4039210	Symbol	NULL		4039152						
ANR	4039211	Symbol	m_pending_timeout_tid		4039152						
ANR	4039212	Symbol	m_pending_status		4039152						
ANR	4039213	Symbol	m_server		4039152						
ANR	4039214	Symbol	m_pending_args		4039152						
ANR	4039215	Symbol	m_timeout		4039152						
ANR	4039216	Symbol	m_user_timer_id		4039152						
ANR	4039217	Symbol	m_mode		4039152						
ANR	4039218	Symbol	m_pending_result		4039152						
ANR	4039219	Symbol	NORMAL		4039152						
ANR	4039220	Function	VMGahpRequest :: ~VMGahpRequest	54:0:1491:1542							
ANR	4039221	FunctionDef	VMGahpRequest :: ~VMGahpRequest ()		4039220	0					
ANR	4039222	CompoundStatement		55:0:1523:1542	4039220	0					
ANR	4039223	ExpressionStatement	clearPending ( )	56:1:1526:1540	4039220	0	True				
ANR	4039224	CallExpression	clearPending ( )		4039220	0					
ANR	4039225	Callee	clearPending		4039220	0					
ANR	4039226	Identifier	clearPending		4039220	0					
ANR	4039227	ArgumentList			4039220	1					
ANR	4039228	Identifier	VMGahpRequest :: ~VMGahpRequest		4039220	1					
ANR	4039229	ParameterList			4039220	2					
ANR	4039230	CFGEntryNode	ENTRY		4039220		True				
ANR	4039231	CFGExitNode	EXIT		4039220		True				
ANR	4039232	Function	VMGahpRequest :: clearPending	59:0:1545:2177							
ANR	4039233	FunctionDef	VMGahpRequest :: clearPending ()		4039232	0					
ANR	4039234	CompoundStatement		61:0:1580:2177	4039232	0					
ANR	4039235	IfStatement	if ( m_pending_reqid && m_server && ( m_pending_status != REQ_INITIALIZED ) )		4039232	0					
ANR	4039236	Condition	m_pending_reqid && m_server && ( m_pending_status != REQ_INITIALIZED )	62:5:1587:1657	4039232	0	True				
ANR	4039237	AndExpression	m_pending_reqid && m_server && ( m_pending_status != REQ_INITIALIZED )		4039232	0		&&			
ANR	4039238	Identifier	m_pending_reqid		4039232	0					
ANR	4039239	AndExpression	m_server && ( m_pending_status != REQ_INITIALIZED )		4039232	1		&&			
ANR	4039240	Identifier	m_server		4039232	0					
ANR	4039241	EqualityExpression	m_pending_status != REQ_INITIALIZED		4039232	1		!=			
ANR	4039242	Identifier	m_pending_status		4039232	0					
ANR	4039243	Identifier	REQ_INITIALIZED		4039232	1					
ANR	4039244	CompoundStatement		3:42:79:79	4039232	1					
ANR	4039245	ExpressionStatement	m_server -> cancelPendingRequest ( m_pending_reqid )	64:2:1664:1711	4039232	0	True				
ANR	4039246	CallExpression	m_server -> cancelPendingRequest ( m_pending_reqid )		4039232	0					
ANR	4039247	Callee	m_server -> cancelPendingRequest		4039232	0					
ANR	4039248	PtrMemberAccess	m_server -> cancelPendingRequest		4039232	0					
ANR	4039249	Identifier	m_server		4039232	0					
ANR	4039250	Identifier	cancelPendingRequest		4039232	1					
ANR	4039251	ArgumentList	m_pending_reqid		4039232	1					
ANR	4039252	Argument	m_pending_reqid		4039232	0					
ANR	4039253	Identifier	m_pending_reqid		4039232	0					
ANR	4039254	ExpressionStatement	m_server = NULL	66:1:1717:1732	4039232	1	True				
ANR	4039255	AssignmentExpression	m_server = NULL		4039232	0		=			
ANR	4039256	Identifier	m_server		4039232	0					
ANR	4039257	Identifier	NULL		4039232	1					
ANR	4039258	ExpressionStatement	m_mode = NORMAL	67:1:1735:1750	4039232	2	True				
ANR	4039259	AssignmentExpression	m_mode = NORMAL		4039232	0		=			
ANR	4039260	Identifier	m_mode		4039232	0					
ANR	4039261	Identifier	NORMAL		4039232	1					
ANR	4039262	ExpressionStatement	m_pending_reqid = 0	69:1:1754:1773	4039232	3	True				
ANR	4039263	AssignmentExpression	m_pending_reqid = 0		4039232	0		=			
ANR	4039264	Identifier	m_pending_reqid		4039232	0					
ANR	4039265	PrimaryExpression	0		4039232	1					
ANR	4039266	ExpressionStatement	"m_pending_args = """""	70:1:1776:1795	4039232	4	True				
ANR	4039267	AssignmentExpression	"m_pending_args = """""		4039232	0		=			
ANR	4039268	Identifier	m_pending_args		4039232	0					
ANR	4039269	PrimaryExpression	""""""		4039232	1					
ANR	4039270	IfStatement	if ( m_pending_result )		4039232	5					
ANR	4039271	Condition	m_pending_result	71:4:1801:1816	4039232	0	True				
ANR	4039272	Identifier	m_pending_result		4039232	0					
ANR	4039273	CompoundStatement		11:22:238:238	4039232	1					
ANR	4039274	Statement	delete	72:2:1823:1828	4039232	0	True				
ANR	4039275	ExpressionStatement	m_pending_result	72:9:1830:1846	4039232	1	True				
ANR	4039276	Identifier	m_pending_result		4039232	0					
ANR	4039277	ExpressionStatement	m_pending_result = NULL	73:2:1850:1873	4039232	2	True				
ANR	4039278	AssignmentExpression	m_pending_result = NULL		4039232	0		=			
ANR	4039279	Identifier	m_pending_result		4039232	0					
ANR	4039280	Identifier	NULL		4039232	1					
ANR	4039281	ExpressionStatement	m_pending_status = REQ_INITIALIZED	76:1:1880:1914	4039232	6	True				
ANR	4039282	AssignmentExpression	m_pending_status = REQ_INITIALIZED		4039232	0		=			
ANR	4039283	Identifier	m_pending_status		4039232	0					
ANR	4039284	Identifier	REQ_INITIALIZED		4039232	1					
ANR	4039285	ExpressionStatement	m_timeout = 0	77:1:1917:1930	4039232	7	True				
ANR	4039286	AssignmentExpression	m_timeout = 0		4039232	0		=			
ANR	4039287	Identifier	m_timeout		4039232	0					
ANR	4039288	PrimaryExpression	0		4039232	1					
ANR	4039289	ExpressionStatement	m_expire_time = 0	78:1:1933:1950	4039232	8	True				
ANR	4039290	AssignmentExpression	m_expire_time = 0		4039232	0		=			
ANR	4039291	Identifier	m_expire_time		4039232	0					
ANR	4039292	PrimaryExpression	0		4039232	1					
ANR	4039293	IfStatement	if ( m_pending_timeout_tid != - 1 )		4039232	9					
ANR	4039294	Condition	m_pending_timeout_tid != - 1	79:5:1957:1983	4039232	0	True				
ANR	4039295	EqualityExpression	m_pending_timeout_tid != - 1		4039232	0		!=			
ANR	4039296	Identifier	m_pending_timeout_tid		4039232	0					
ANR	4039297	UnaryOperationExpression	- 1		4039232	1					
ANR	4039298	UnaryOperator	-		4039232	0					
ANR	4039299	PrimaryExpression	1		4039232	1					
ANR	4039300	CompoundStatement		19:35:406:406	4039232	1					
ANR	4039301	ExpressionStatement	daemonCore -> Cancel_Timer ( m_pending_timeout_tid )	80:2:1991:2038	4039232	0	True				
ANR	4039302	CallExpression	daemonCore -> Cancel_Timer ( m_pending_timeout_tid )		4039232	0					
ANR	4039303	Callee	daemonCore -> Cancel_Timer		4039232	0					
ANR	4039304	PtrMemberAccess	daemonCore -> Cancel_Timer		4039232	0					
ANR	4039305	Identifier	daemonCore		4039232	0					
ANR	4039306	Identifier	Cancel_Timer		4039232	1					
ANR	4039307	ArgumentList	m_pending_timeout_tid		4039232	1					
ANR	4039308	Argument	m_pending_timeout_tid		4039232	0					
ANR	4039309	Identifier	m_pending_timeout_tid		4039232	0					
ANR	4039310	ExpressionStatement	m_pending_timeout_tid = - 1	81:2:2042:2068	4039232	1	True				
ANR	4039311	AssignmentExpression	m_pending_timeout_tid = - 1		4039232	0		=			
ANR	4039312	Identifier	m_pending_timeout_tid		4039232	0					
ANR	4039313	UnaryOperationExpression	- 1		4039232	1					
ANR	4039314	UnaryOperator	-		4039232	0					
ANR	4039315	PrimaryExpression	1		4039232	1					
ANR	4039316	IfStatement	if ( m_user_timer_id != - 1 )		4039232	10					
ANR	4039317	Condition	m_user_timer_id != - 1	84:5:2079:2099	4039232	0	True				
ANR	4039318	EqualityExpression	m_user_timer_id != - 1		4039232	0		!=			
ANR	4039319	Identifier	m_user_timer_id		4039232	0					
ANR	4039320	UnaryOperationExpression	- 1		4039232	1					
ANR	4039321	UnaryOperator	-		4039232	0					
ANR	4039322	PrimaryExpression	1		4039232	1					
ANR	4039323	CompoundStatement		24:29:522:522	4039232	1					
ANR	4039324	ExpressionStatement	daemonCore -> Cancel_Timer ( m_user_timer_id )	85:2:2107:2148	4039232	0	True				
ANR	4039325	CallExpression	daemonCore -> Cancel_Timer ( m_user_timer_id )		4039232	0					
ANR	4039326	Callee	daemonCore -> Cancel_Timer		4039232	0					
ANR	4039327	PtrMemberAccess	daemonCore -> Cancel_Timer		4039232	0					
ANR	4039328	Identifier	daemonCore		4039232	0					
ANR	4039329	Identifier	Cancel_Timer		4039232	1					
ANR	4039330	ArgumentList	m_user_timer_id		4039232	1					
ANR	4039331	Argument	m_user_timer_id		4039232	0					
ANR	4039332	Identifier	m_user_timer_id		4039232	0					
ANR	4039333	ExpressionStatement	m_user_timer_id = - 1	86:2:2152:2172	4039232	1	True				
ANR	4039334	AssignmentExpression	m_user_timer_id = - 1		4039232	0		=			
ANR	4039335	Identifier	m_user_timer_id		4039232	0					
ANR	4039336	UnaryOperationExpression	- 1		4039232	1					
ANR	4039337	UnaryOperator	-		4039232	0					
ANR	4039338	PrimaryExpression	1		4039232	1					
ANR	4039339	ReturnType	void		4039232	1					
ANR	4039340	Identifier	VMGahpRequest :: clearPending		4039232	2					
ANR	4039341	ParameterList			4039232	3					
ANR	4039342	CFGEntryNode	ENTRY		4039232		True				
ANR	4039343	CFGExitNode	EXIT		4039232		True				
ANR	4039344	Symbol	m_pending_reqid		4039232						
ANR	4039345	Symbol	REQ_INITIALIZED		4039232						
ANR	4039346	Symbol	m_expire_time		4039232						
ANR	4039347	Symbol	NULL		4039232						
ANR	4039348	Symbol	m_pending_timeout_tid		4039232						
ANR	4039349	Symbol	m_pending_status		4039232						
ANR	4039350	Symbol	m_server		4039232						
ANR	4039351	Symbol	m_pending_args		4039232						
ANR	4039352	Symbol	m_timeout		4039232						
ANR	4039353	Symbol	m_user_timer_id		4039232						
ANR	4039354	Symbol	daemonCore		4039232						
ANR	4039355	Symbol	m_mode		4039232						
ANR	4039356	Symbol	m_pending_result		4039232						
ANR	4039357	Symbol	NORMAL		4039232						
ANR	4039358	Function	VMGahpRequest :: pending_timer_fn	90:0:2180:2490							
ANR	4039359	FunctionDef	VMGahpRequest :: pending_timer_fn ()		4039358	0					
ANR	4039360	CompoundStatement		92:0:2218:2490	4039358	0					
ANR	4039361	IdentifierDeclStatement	int retval = TRUE ;	93:1:2221:2238	4039358	0	True				
ANR	4039362	IdentifierDecl	retval = TRUE		4039358	0					
ANR	4039363	IdentifierDeclType	int		4039358	0					
ANR	4039364	Identifier	retval		4039358	1					
ANR	4039365	AssignmentExpression	retval = TRUE		4039358	2		=			
ANR	4039366	Identifier	TRUE		4039358	0					
ANR	4039367	Identifier	TRUE		4039358	1					
ANR	4039368	IfStatement	if ( m_user_timer_id != - 1 )		4039358	1					
ANR	4039369	Condition	m_user_timer_id != - 1	97:5:2335:2355	4039358	0	True				
ANR	4039370	EqualityExpression	m_user_timer_id != - 1		4039358	0		!=			
ANR	4039371	Identifier	m_user_timer_id		4039358	0					
ANR	4039372	UnaryOperationExpression	- 1		4039358	1					
ANR	4039373	UnaryOperator	-		4039358	0					
ANR	4039374	PrimaryExpression	1		4039358	1					
ANR	4039375	CompoundStatement		6:29:140:140	4039358	1					
ANR	4039376	ExpressionStatement	"retval = daemonCore -> Reset_Timer ( m_user_timer_id , 0 )"	98:2:2363:2415	4039358	0	True				
ANR	4039377	AssignmentExpression	"retval = daemonCore -> Reset_Timer ( m_user_timer_id , 0 )"		4039358	0		=			
ANR	4039378	Identifier	retval		4039358	0					
ANR	4039379	CallExpression	"daemonCore -> Reset_Timer ( m_user_timer_id , 0 )"		4039358	1					
ANR	4039380	Callee	daemonCore -> Reset_Timer		4039358	0					
ANR	4039381	PtrMemberAccess	daemonCore -> Reset_Timer		4039358	0					
ANR	4039382	Identifier	daemonCore		4039358	0					
ANR	4039383	Identifier	Reset_Timer		4039358	1					
ANR	4039384	ArgumentList	m_user_timer_id		4039358	1					
ANR	4039385	Argument	m_user_timer_id		4039358	0					
ANR	4039386	Identifier	m_user_timer_id		4039358	0					
ANR	4039387	Argument	0		4039358	1					
ANR	4039388	PrimaryExpression	0		4039358	0					
ANR	4039389	ExpressionStatement	m_user_timer_id = - 1	99:2:2419:2439	4039358	1	True				
ANR	4039390	AssignmentExpression	m_user_timer_id = - 1		4039358	0		=			
ANR	4039391	Identifier	m_user_timer_id		4039358	0					
ANR	4039392	UnaryOperationExpression	- 1		4039358	1					
ANR	4039393	UnaryOperator	-		4039358	0					
ANR	4039394	PrimaryExpression	1		4039358	1					
ANR	4039395	ExpressionStatement	m_pending_timeout_tid = - 1	102:1:2446:2472	4039358	2	True				
ANR	4039396	AssignmentExpression	m_pending_timeout_tid = - 1		4039358	0		=			
ANR	4039397	Identifier	m_pending_timeout_tid		4039358	0					
ANR	4039398	UnaryOperationExpression	- 1		4039358	1					
ANR	4039399	UnaryOperator	-		4039358	0					
ANR	4039400	PrimaryExpression	1		4039358	1					
ANR	4039401	ReturnStatement	return retval ;	103:1:2475:2488	4039358	3	True				
ANR	4039402	Identifier	retval		4039358	0					
ANR	4039403	ReturnType	int		4039358	1					
ANR	4039404	Identifier	VMGahpRequest :: pending_timer_fn		4039358	2					
ANR	4039405	ParameterList			4039358	3					
ANR	4039406	CFGEntryNode	ENTRY		4039358		True				
ANR	4039407	CFGExitNode	EXIT		4039358		True				
ANR	4039408	Symbol	daemonCore -> Reset_Timer		4039358						
ANR	4039409	Symbol	m_pending_timeout_tid		4039358						
ANR	4039410	Symbol	* daemonCore		4039358						
ANR	4039411	Symbol	daemonCore		4039358						
ANR	4039412	Symbol	TRUE		4039358						
ANR	4039413	Symbol	retval		4039358						
ANR	4039414	Symbol	m_user_timer_id		4039358						
ANR	4039415	Function	VMGahpRequest :: startPendingTimer	106:0:2493:2907							
ANR	4039416	FunctionDef	VMGahpRequest :: startPendingTimer ()		4039415	0					
ANR	4039417	CompoundStatement		108:0:2533:2907	4039415	0					
ANR	4039418	IfStatement	if ( m_pending_timeout_tid != - 1 )		4039415	0					
ANR	4039419	Condition	m_pending_timeout_tid != - 1	109:5:2540:2566	4039415	0	True				
ANR	4039420	EqualityExpression	m_pending_timeout_tid != - 1		4039415	0		!=			
ANR	4039421	Identifier	m_pending_timeout_tid		4039415	0					
ANR	4039422	UnaryOperationExpression	- 1		4039415	1					
ANR	4039423	UnaryOperator	-		4039415	0					
ANR	4039424	PrimaryExpression	1		4039415	1					
ANR	4039425	CompoundStatement		2:35:36:36	4039415	1					
ANR	4039426	ExpressionStatement	daemonCore -> Cancel_Timer ( m_pending_timeout_tid )	110:2:2574:2621	4039415	0	True				
ANR	4039427	CallExpression	daemonCore -> Cancel_Timer ( m_pending_timeout_tid )		4039415	0					
ANR	4039428	Callee	daemonCore -> Cancel_Timer		4039415	0					
ANR	4039429	PtrMemberAccess	daemonCore -> Cancel_Timer		4039415	0					
ANR	4039430	Identifier	daemonCore		4039415	0					
ANR	4039431	Identifier	Cancel_Timer		4039415	1					
ANR	4039432	ArgumentList	m_pending_timeout_tid		4039415	1					
ANR	4039433	Argument	m_pending_timeout_tid		4039415	0					
ANR	4039434	Identifier	m_pending_timeout_tid		4039415	0					
ANR	4039435	ExpressionStatement	m_pending_timeout_tid = - 1	111:2:2625:2651	4039415	1	True				
ANR	4039436	AssignmentExpression	m_pending_timeout_tid = - 1		4039415	0		=			
ANR	4039437	Identifier	m_pending_timeout_tid		4039415	0					
ANR	4039438	UnaryOperationExpression	- 1		4039415	1					
ANR	4039439	UnaryOperator	-		4039415	0					
ANR	4039440	PrimaryExpression	1		4039415	1					
ANR	4039441	ExpressionStatement	m_expire_time = 0	113:1:2657:2674	4039415	1	True				
ANR	4039442	AssignmentExpression	m_expire_time = 0		4039415	0		=			
ANR	4039443	Identifier	m_expire_time		4039415	0					
ANR	4039444	PrimaryExpression	0		4039415	1					
ANR	4039445	IfStatement	if ( m_timeout )		4039415	2					
ANR	4039446	Condition	m_timeout	115:5:2682:2690	4039415	0	True				
ANR	4039447	Identifier	m_timeout		4039415	0					
ANR	4039448	CompoundStatement		8:17:160:160	4039415	1					
ANR	4039449	ExpressionStatement	"m_pending_timeout_tid = daemonCore -> Register_Timer ( m_timeout , ( TimerHandlercpp ) & VMGahpRequest :: pending_timer_fn , ""VMGahpRequest::pending_timer_fn"" , this )"	116:2:2698:2860	4039415	0	True				
ANR	4039450	AssignmentExpression	"m_pending_timeout_tid = daemonCore -> Register_Timer ( m_timeout , ( TimerHandlercpp ) & VMGahpRequest :: pending_timer_fn , ""VMGahpRequest::pending_timer_fn"" , this )"		4039415	0		=			
ANR	4039451	Identifier	m_pending_timeout_tid		4039415	0					
ANR	4039452	CallExpression	"daemonCore -> Register_Timer ( m_timeout , ( TimerHandlercpp ) & VMGahpRequest :: pending_timer_fn , ""VMGahpRequest::pending_timer_fn"" , this )"		4039415	1					
ANR	4039453	Callee	daemonCore -> Register_Timer		4039415	0					
ANR	4039454	PtrMemberAccess	daemonCore -> Register_Timer		4039415	0					
ANR	4039455	Identifier	daemonCore		4039415	0					
ANR	4039456	Identifier	Register_Timer		4039415	1					
ANR	4039457	ArgumentList	m_timeout		4039415	1					
ANR	4039458	Argument	m_timeout		4039415	0					
ANR	4039459	Identifier	m_timeout		4039415	0					
ANR	4039460	Argument	( TimerHandlercpp ) & VMGahpRequest :: pending_timer_fn		4039415	1					
ANR	4039461	CastExpression	( TimerHandlercpp ) & VMGahpRequest :: pending_timer_fn		4039415	0					
ANR	4039462	CastTarget	TimerHandlercpp		4039415	0					
ANR	4039463	UnaryOperationExpression	& VMGahpRequest :: pending_timer_fn		4039415	1					
ANR	4039464	UnaryOperator	&		4039415	0					
ANR	4039465	Identifier	VMGahpRequest :: pending_timer_fn		4039415	1					
ANR	4039466	Argument	"""VMGahpRequest::pending_timer_fn"""		4039415	2					
ANR	4039467	PrimaryExpression	"""VMGahpRequest::pending_timer_fn"""		4039415	0					
ANR	4039468	Argument	this		4039415	3					
ANR	4039469	Identifier	this		4039415	0					
ANR	4039470	ExpressionStatement	m_expire_time = time ( NULL ) + m_timeout	119:2:2864:2902	4039415	1	True				
ANR	4039471	AssignmentExpression	m_expire_time = time ( NULL ) + m_timeout		4039415	0		=			
ANR	4039472	Identifier	m_expire_time		4039415	0					
ANR	4039473	AdditiveExpression	time ( NULL ) + m_timeout		4039415	1		+			
ANR	4039474	CallExpression	time ( NULL )		4039415	0					
ANR	4039475	Callee	time		4039415	0					
ANR	4039476	Identifier	time		4039415	0					
ANR	4039477	ArgumentList	NULL		4039415	1					
ANR	4039478	Argument	NULL		4039415	0					
ANR	4039479	Identifier	NULL		4039415	0					
ANR	4039480	Identifier	m_timeout		4039415	1					
ANR	4039481	ReturnType	void		4039415	1					
ANR	4039482	Identifier	VMGahpRequest :: startPendingTimer		4039415	2					
ANR	4039483	ParameterList			4039415	3					
ANR	4039484	CFGEntryNode	ENTRY		4039415		True				
ANR	4039485	CFGExitNode	EXIT		4039415		True				
ANR	4039486	Symbol	m_expire_time		4039415						
ANR	4039487	Symbol	NULL		4039415						
ANR	4039488	Symbol	m_pending_timeout_tid		4039415						
ANR	4039489	Symbol	* daemonCore		4039415						
ANR	4039490	Symbol	& VMGahpRequest :: pending_timer_fn		4039415						
ANR	4039491	Symbol	daemonCore		4039415						
ANR	4039492	Symbol	daemonCore -> Register_Timer		4039415						
ANR	4039493	Symbol	this		4039415						
ANR	4039494	Symbol	time		4039415						
ANR	4039495	Symbol	m_timeout		4039415						
ANR	4039496	Function	VMGahpRequest :: stopPendingTimer	123:0:2910:3091							
ANR	4039497	FunctionDef	VMGahpRequest :: stopPendingTimer ()		4039496	0					
ANR	4039498	CompoundStatement		125:0:2949:3091	4039496	0					
ANR	4039499	IfStatement	if ( m_pending_timeout_tid != - 1 )		4039496	0					
ANR	4039500	Condition	m_pending_timeout_tid != - 1	126:5:2956:2982	4039496	0	True				
ANR	4039501	EqualityExpression	m_pending_timeout_tid != - 1		4039496	0		!=			
ANR	4039502	Identifier	m_pending_timeout_tid		4039496	0					
ANR	4039503	UnaryOperationExpression	- 1		4039496	1					
ANR	4039504	UnaryOperator	-		4039496	0					
ANR	4039505	PrimaryExpression	1		4039496	1					
ANR	4039506	CompoundStatement		2:35:36:36	4039496	1					
ANR	4039507	ExpressionStatement	daemonCore -> Cancel_Timer ( m_pending_timeout_tid )	127:2:2990:3037	4039496	0	True				
ANR	4039508	CallExpression	daemonCore -> Cancel_Timer ( m_pending_timeout_tid )		4039496	0					
ANR	4039509	Callee	daemonCore -> Cancel_Timer		4039496	0					
ANR	4039510	PtrMemberAccess	daemonCore -> Cancel_Timer		4039496	0					
ANR	4039511	Identifier	daemonCore		4039496	0					
ANR	4039512	Identifier	Cancel_Timer		4039496	1					
ANR	4039513	ArgumentList	m_pending_timeout_tid		4039496	1					
ANR	4039514	Argument	m_pending_timeout_tid		4039496	0					
ANR	4039515	Identifier	m_pending_timeout_tid		4039496	0					
ANR	4039516	ExpressionStatement	m_pending_timeout_tid = - 1	129:1:3043:3069	4039496	1	True				
ANR	4039517	AssignmentExpression	m_pending_timeout_tid = - 1		4039496	0		=			
ANR	4039518	Identifier	m_pending_timeout_tid		4039496	0					
ANR	4039519	UnaryOperationExpression	- 1		4039496	1					
ANR	4039520	UnaryOperator	-		4039496	0					
ANR	4039521	PrimaryExpression	1		4039496	1					
ANR	4039522	ExpressionStatement	m_expire_time = 0	130:1:3072:3089	4039496	2	True				
ANR	4039523	AssignmentExpression	m_expire_time = 0		4039496	0		=			
ANR	4039524	Identifier	m_expire_time		4039496	0					
ANR	4039525	PrimaryExpression	0		4039496	1					
ANR	4039526	ReturnType	void		4039496	1					
ANR	4039527	Identifier	VMGahpRequest :: stopPendingTimer		4039496	2					
ANR	4039528	ParameterList			4039496	3					
ANR	4039529	CFGEntryNode	ENTRY		4039496		True				
ANR	4039530	CFGExitNode	EXIT		4039496		True				
ANR	4039531	Symbol	m_expire_time		4039496						
ANR	4039532	Symbol	m_pending_timeout_tid		4039496						
ANR	4039533	Symbol	daemonCore		4039496						
ANR	4039534	Function	VMGahpRequest :: isPendingTimeout	133:0:3094:3381							
ANR	4039535	FunctionDef	VMGahpRequest :: isPendingTimeout ()		4039534	0					
ANR	4039536	CompoundStatement		135:0:3133:3381	4039534	0					
ANR	4039537	IfStatement	if ( getPendingStatus ( ) == REQ_REJECTED )		4039534	0					
ANR	4039538	Condition	getPendingStatus ( ) == REQ_REJECTED	136:5:3140:3173	4039534	0	True				
ANR	4039539	EqualityExpression	getPendingStatus ( ) == REQ_REJECTED		4039534	0		==			
ANR	4039540	CallExpression	getPendingStatus ( )		4039534	0					
ANR	4039541	Callee	getPendingStatus		4039534	0					
ANR	4039542	Identifier	getPendingStatus		4039534	0					
ANR	4039543	ArgumentList			4039534	1					
ANR	4039544	Identifier	REQ_REJECTED		4039534	1					
ANR	4039545	CompoundStatement		2:42:43:43	4039534	1					
ANR	4039546	ReturnStatement	return true ;	138:2:3230:3241	4039534	0	True				
ANR	4039547	Identifier	true		4039534	0					
ANR	4039548	IfStatement	if ( getPendingStatus ( ) == REQ_SUBMITTED )		4039534	1					
ANR	4039549	Condition	getPendingStatus ( ) == REQ_SUBMITTED	141:5:3252:3286	4039534	0	True				
ANR	4039550	EqualityExpression	getPendingStatus ( ) == REQ_SUBMITTED		4039534	0		==			
ANR	4039551	CallExpression	getPendingStatus ( )		4039534	0					
ANR	4039552	Callee	getPendingStatus		4039534	0					
ANR	4039553	Identifier	getPendingStatus		4039534	0					
ANR	4039554	ArgumentList			4039534	1					
ANR	4039555	Identifier	REQ_SUBMITTED		4039534	1					
ANR	4039556	CompoundStatement		7:43:156:156	4039534	1					
ANR	4039557	IfStatement	if ( m_expire_time && ( time ( NULL ) > m_expire_time ) )		4039534	0					
ANR	4039558	Condition	m_expire_time && ( time ( NULL ) > m_expire_time )	142:6:3298:3342	4039534	0	True				
ANR	4039559	AndExpression	m_expire_time && ( time ( NULL ) > m_expire_time )		4039534	0		&&			
ANR	4039560	Identifier	m_expire_time		4039534	0					
ANR	4039561	RelationalExpression	time ( NULL ) > m_expire_time		4039534	1		>			
ANR	4039562	CallExpression	time ( NULL )		4039534	0					
ANR	4039563	Callee	time		4039534	0					
ANR	4039564	Identifier	time		4039534	0					
ANR	4039565	ArgumentList	NULL		4039534	1					
ANR	4039566	Argument	NULL		4039534	0					
ANR	4039567	Identifier	NULL		4039534	0					
ANR	4039568	Identifier	m_expire_time		4039534	1					
ANR	4039569	ReturnStatement	return true ;	143:3:3349:3360	4039534	1	True				
ANR	4039570	Identifier	true		4039534	0					
ANR	4039571	ReturnStatement	return false ;	146:1:3367:3379	4039534	2	True				
ANR	4039572	Identifier	false		4039534	0					
ANR	4039573	ReturnType	bool		4039534	1					
ANR	4039574	Identifier	VMGahpRequest :: isPendingTimeout		4039534	2					
ANR	4039575	ParameterList			4039534	3					
ANR	4039576	CFGEntryNode	ENTRY		4039534		True				
ANR	4039577	CFGExitNode	EXIT		4039534		True				
ANR	4039578	Symbol	REQ_REJECTED		4039534						
ANR	4039579	Symbol	m_expire_time		4039534						
ANR	4039580	Symbol	NULL		4039534						
ANR	4039581	Symbol	getPendingStatus		4039534						
ANR	4039582	Symbol	true		4039534						
ANR	4039583	Symbol	false		4039534						
ANR	4039584	Symbol	time		4039534						
ANR	4039585	Symbol	REQ_SUBMITTED		4039534						
ANR	4039586	Function	VMGahpRequest :: resetUserTimer	149:0:3384:3760							
ANR	4039587	FunctionDef	VMGahpRequest :: resetUserTimer ()		4039586	0					
ANR	4039588	CompoundStatement		151:0:3420:3760	4039586	0					
ANR	4039589	IdentifierDeclStatement	int retval = TRUE ;	152:1:3423:3440	4039586	0	True				
ANR	4039590	IdentifierDecl	retval = TRUE		4039586	0					
ANR	4039591	IdentifierDeclType	int		4039586	0					
ANR	4039592	Identifier	retval		4039586	1					
ANR	4039593	AssignmentExpression	retval = TRUE		4039586	2		=			
ANR	4039594	Identifier	TRUE		4039586	0					
ANR	4039595	Identifier	TRUE		4039586	1					
ANR	4039596	IfStatement	if ( m_pending_timeout_tid != - 1 )		4039586	1					
ANR	4039597	Condition	m_pending_timeout_tid != - 1	155:5:3512:3538	4039586	0	True				
ANR	4039598	EqualityExpression	m_pending_timeout_tid != - 1		4039586	0		!=			
ANR	4039599	Identifier	m_pending_timeout_tid		4039586	0					
ANR	4039600	UnaryOperationExpression	- 1		4039586	1					
ANR	4039601	UnaryOperator	-		4039586	0					
ANR	4039602	PrimaryExpression	1		4039586	1					
ANR	4039603	CompoundStatement		5:35:121:121	4039586	1					
ANR	4039604	ExpressionStatement	daemonCore -> Cancel_Timer ( m_pending_timeout_tid )	156:2:3546:3593	4039586	0	True				
ANR	4039605	CallExpression	daemonCore -> Cancel_Timer ( m_pending_timeout_tid )		4039586	0					
ANR	4039606	Callee	daemonCore -> Cancel_Timer		4039586	0					
ANR	4039607	PtrMemberAccess	daemonCore -> Cancel_Timer		4039586	0					
ANR	4039608	Identifier	daemonCore		4039586	0					
ANR	4039609	Identifier	Cancel_Timer		4039586	1					
ANR	4039610	ArgumentList	m_pending_timeout_tid		4039586	1					
ANR	4039611	Argument	m_pending_timeout_tid		4039586	0					
ANR	4039612	Identifier	m_pending_timeout_tid		4039586	0					
ANR	4039613	ExpressionStatement	m_pending_timeout_tid = - 1	157:2:3597:3623	4039586	1	True				
ANR	4039614	AssignmentExpression	m_pending_timeout_tid = - 1		4039586	0		=			
ANR	4039615	Identifier	m_pending_timeout_tid		4039586	0					
ANR	4039616	UnaryOperationExpression	- 1		4039586	1					
ANR	4039617	UnaryOperator	-		4039586	0					
ANR	4039618	PrimaryExpression	1		4039586	1					
ANR	4039619	IfStatement	if ( m_user_timer_id != - 1 )		4039586	2					
ANR	4039620	Condition	m_user_timer_id != - 1	160:5:3634:3654	4039586	0	True				
ANR	4039621	EqualityExpression	m_user_timer_id != - 1		4039586	0		!=			
ANR	4039622	Identifier	m_user_timer_id		4039586	0					
ANR	4039623	UnaryOperationExpression	- 1		4039586	1					
ANR	4039624	UnaryOperator	-		4039586	0					
ANR	4039625	PrimaryExpression	1		4039586	1					
ANR	4039626	CompoundStatement		10:29:237:237	4039586	1					
ANR	4039627	ExpressionStatement	"retval = daemonCore -> Reset_Timer ( m_user_timer_id , 0 )"	161:2:3662:3714	4039586	0	True				
ANR	4039628	AssignmentExpression	"retval = daemonCore -> Reset_Timer ( m_user_timer_id , 0 )"		4039586	0		=			
ANR	4039629	Identifier	retval		4039586	0					
ANR	4039630	CallExpression	"daemonCore -> Reset_Timer ( m_user_timer_id , 0 )"		4039586	1					
ANR	4039631	Callee	daemonCore -> Reset_Timer		4039586	0					
ANR	4039632	PtrMemberAccess	daemonCore -> Reset_Timer		4039586	0					
ANR	4039633	Identifier	daemonCore		4039586	0					
ANR	4039634	Identifier	Reset_Timer		4039586	1					
ANR	4039635	ArgumentList	m_user_timer_id		4039586	1					
ANR	4039636	Argument	m_user_timer_id		4039586	0					
ANR	4039637	Identifier	m_user_timer_id		4039586	0					
ANR	4039638	Argument	0		4039586	1					
ANR	4039639	PrimaryExpression	0		4039586	0					
ANR	4039640	ExpressionStatement	m_user_timer_id = - 1	162:2:3718:3738	4039586	1	True				
ANR	4039641	AssignmentExpression	m_user_timer_id = - 1		4039586	0		=			
ANR	4039642	Identifier	m_user_timer_id		4039586	0					
ANR	4039643	UnaryOperationExpression	- 1		4039586	1					
ANR	4039644	UnaryOperator	-		4039586	0					
ANR	4039645	PrimaryExpression	1		4039586	1					
ANR	4039646	ReturnStatement	return retval ;	165:1:3745:3758	4039586	3	True				
ANR	4039647	Identifier	retval		4039586	0					
ANR	4039648	ReturnType	int		4039586	1					
ANR	4039649	Identifier	VMGahpRequest :: resetUserTimer		4039586	2					
ANR	4039650	ParameterList			4039586	3					
ANR	4039651	CFGEntryNode	ENTRY		4039586		True				
ANR	4039652	CFGExitNode	EXIT		4039586		True				
ANR	4039653	Symbol	m_pending_timeout_tid		4039586						
ANR	4039654	Symbol	daemonCore -> Reset_Timer		4039586						
ANR	4039655	Symbol	* daemonCore		4039586						
ANR	4039656	Symbol	daemonCore		4039586						
ANR	4039657	Symbol	TRUE		4039586						
ANR	4039658	Symbol	retval		4039586						
ANR	4039659	Symbol	m_user_timer_id		4039586						
ANR	4039660	Function	VMGahpRequest :: detachVMGahpServer	168:0:3763:3952							
ANR	4039661	FunctionDef	VMGahpRequest :: detachVMGahpServer ()		4039660	0					
ANR	4039662	CompoundStatement		170:0:3805:3952	4039660	0					
ANR	4039663	ExpressionStatement	m_server = NULL	171:1:3808:3823	4039660	0	True				
ANR	4039664	AssignmentExpression	m_server = NULL		4039660	0		=			
ANR	4039665	Identifier	m_server		4039660	0					
ANR	4039666	Identifier	NULL		4039660	1					
ANR	4039667	ExpressionStatement	setPendingStatus ( REQ_REJECTED )	173:1:3827:3857	4039660	1	True				
ANR	4039668	CallExpression	setPendingStatus ( REQ_REJECTED )		4039660	0					
ANR	4039669	Callee	setPendingStatus		4039660	0					
ANR	4039670	Identifier	setPendingStatus		4039660	0					
ANR	4039671	ArgumentList	REQ_REJECTED		4039660	1					
ANR	4039672	Argument	REQ_REJECTED		4039660	0					
ANR	4039673	Identifier	REQ_REJECTED		4039660	0					
ANR	4039674	IfStatement	if ( m_pending_timeout_tid != - 1 )		4039660	2					
ANR	4039675	Condition	m_pending_timeout_tid != - 1	175:5:3865:3891	4039660	0	True				
ANR	4039676	EqualityExpression	m_pending_timeout_tid != - 1		4039660	0		!=			
ANR	4039677	Identifier	m_pending_timeout_tid		4039660	0					
ANR	4039678	UnaryOperationExpression	- 1		4039660	1					
ANR	4039679	UnaryOperator	-		4039660	0					
ANR	4039680	PrimaryExpression	1		4039660	1					
ANR	4039681	CompoundStatement		6:35:89:89	4039660	1					
ANR	4039682	ExpressionStatement	"daemonCore -> Reset_Timer ( m_pending_timeout_tid , 0 )"	176:2:3899:3947	4039660	0	True				
ANR	4039683	CallExpression	"daemonCore -> Reset_Timer ( m_pending_timeout_tid , 0 )"		4039660	0					
ANR	4039684	Callee	daemonCore -> Reset_Timer		4039660	0					
ANR	4039685	PtrMemberAccess	daemonCore -> Reset_Timer		4039660	0					
ANR	4039686	Identifier	daemonCore		4039660	0					
ANR	4039687	Identifier	Reset_Timer		4039660	1					
ANR	4039688	ArgumentList	m_pending_timeout_tid		4039660	1					
ANR	4039689	Argument	m_pending_timeout_tid		4039660	0					
ANR	4039690	Identifier	m_pending_timeout_tid		4039660	0					
ANR	4039691	Argument	0		4039660	1					
ANR	4039692	PrimaryExpression	0		4039660	0					
ANR	4039693	ReturnType	void		4039660	1					
ANR	4039694	Identifier	VMGahpRequest :: detachVMGahpServer		4039660	2					
ANR	4039695	ParameterList			4039660	3					
ANR	4039696	CFGEntryNode	ENTRY		4039660		True				
ANR	4039697	CFGExitNode	EXIT		4039660		True				
ANR	4039698	Symbol	REQ_REJECTED		4039660						
ANR	4039699	Symbol	NULL		4039660						
ANR	4039700	Symbol	m_pending_timeout_tid		4039660						
ANR	4039701	Symbol	m_server		4039660						
ANR	4039702	Symbol	daemonCore		4039660						
ANR	4039703	Function	VMGahpRequest :: vmStart	180:0:3955:5555							
ANR	4039704	FunctionDef	"VMGahpRequest :: vmStart (const char * vm_type , const char * workingdir)"		4039703	0					
ANR	4039705	CompoundStatement		182:0:4027:5555	4039703	0					
ANR	4039706	Statement	static	183:1:4030:4035	4039703	0	True				
ANR	4039707	IdentifierDeclStatement	"const char * command = ""CONDOR_VM_START"" ;"	183:8:4037:4076	4039703	1	True				
ANR	4039708	IdentifierDecl	"* command = ""CONDOR_VM_START"""		4039703	0					
ANR	4039709	IdentifierDeclType	const char *		4039703	0					
ANR	4039710	Identifier	command		4039703	1					
ANR	4039711	AssignmentExpression	"* command = ""CONDOR_VM_START"""		4039703	2		=			
ANR	4039712	Identifier	command		4039703	0					
ANR	4039713	PrimaryExpression	"""CONDOR_VM_START"""		4039703	1					
ANR	4039714	IfStatement	if ( ! vm_type || ( getPendingStatus ( ) != REQ_INITIALIZED ) )		4039703	2					
ANR	4039715	Condition	! vm_type || ( getPendingStatus ( ) != REQ_INITIALIZED )	185:5:4084:4134	4039703	0	True				
ANR	4039716	OrExpression	! vm_type || ( getPendingStatus ( ) != REQ_INITIALIZED )		4039703	0		||			
ANR	4039717	UnaryOperationExpression	! vm_type		4039703	0					
ANR	4039718	UnaryOperator	!		4039703	0					
ANR	4039719	Identifier	vm_type		4039703	1					
ANR	4039720	EqualityExpression	getPendingStatus ( ) != REQ_INITIALIZED		4039703	1		!=			
ANR	4039721	CallExpression	getPendingStatus ( )		4039703	0					
ANR	4039722	Callee	getPendingStatus		4039703	0					
ANR	4039723	Identifier	getPendingStatus		4039703	0					
ANR	4039724	ArgumentList			4039703	1					
ANR	4039725	Identifier	REQ_INITIALIZED		4039703	1					
ANR	4039726	CompoundStatement		4:58:109:109	4039703	1					
ANR	4039727	ReturnStatement	return VMGAHP_REQ_COMMAND_ERROR ;	186:2:4141:4172	4039703	0	True				
ANR	4039728	Identifier	VMGAHP_REQ_COMMAND_ERROR		4039703	0					
ANR	4039729	IfStatement	if ( m_server -> isSupportedCommand ( command ) == FALSE )		4039703	3					
ANR	4039730	Condition	m_server -> isSupportedCommand ( command ) == FALSE	189:4:4182:4227	4039703	0	True				
ANR	4039731	EqualityExpression	m_server -> isSupportedCommand ( command ) == FALSE		4039703	0		==			
ANR	4039732	CallExpression	m_server -> isSupportedCommand ( command )		4039703	0					
ANR	4039733	Callee	m_server -> isSupportedCommand		4039703	0					
ANR	4039734	PtrMemberAccess	m_server -> isSupportedCommand		4039703	0					
ANR	4039735	Identifier	m_server		4039703	0					
ANR	4039736	Identifier	isSupportedCommand		4039703	1					
ANR	4039737	ArgumentList	command		4039703	1					
ANR	4039738	Argument	command		4039703	0					
ANR	4039739	Identifier	command		4039703	0					
ANR	4039740	Identifier	FALSE		4039703	1					
ANR	4039741	CompoundStatement		8:52:202:202	4039703	1					
ANR	4039742	ReturnStatement	return VMGAHP_REQ_COMMAND_NOT_SUPPORTED ;	190:2:4234:4273	4039703	0	True				
ANR	4039743	Identifier	VMGAHP_REQ_COMMAND_NOT_SUPPORTED		4039703	0					
ANR	4039744	IfStatement	if ( m_server -> isSupportedVMType ( vm_type ) == FALSE )		4039703	4					
ANR	4039745	Condition	m_server -> isSupportedVMType ( vm_type ) == FALSE	193:4:4283:4327	4039703	0	True				
ANR	4039746	EqualityExpression	m_server -> isSupportedVMType ( vm_type ) == FALSE		4039703	0		==			
ANR	4039747	CallExpression	m_server -> isSupportedVMType ( vm_type )		4039703	0					
ANR	4039748	Callee	m_server -> isSupportedVMType		4039703	0					
ANR	4039749	PtrMemberAccess	m_server -> isSupportedVMType		4039703	0					
ANR	4039750	Identifier	m_server		4039703	0					
ANR	4039751	Identifier	isSupportedVMType		4039703	1					
ANR	4039752	ArgumentList	vm_type		4039703	1					
ANR	4039753	Argument	vm_type		4039703	0					
ANR	4039754	Identifier	vm_type		4039703	0					
ANR	4039755	Identifier	FALSE		4039703	1					
ANR	4039756	CompoundStatement		12:51:302:302	4039703	1					
ANR	4039757	ReturnStatement	return VMGAHP_REQ_VMTYPE_NOT_SUPPORTED ;	194:2:4334:4372	4039703	0	True				
ANR	4039758	Identifier	VMGAHP_REQ_VMTYPE_NOT_SUPPORTED		4039703	0					
ANR	4039759	IfStatement	if ( m_server -> publishVMClassAd ( workingdir ) == FALSE )		4039703	5					
ANR	4039760	Condition	m_server -> publishVMClassAd ( workingdir ) == FALSE	198:4:4455:4501	4039703	0	True				
ANR	4039761	EqualityExpression	m_server -> publishVMClassAd ( workingdir ) == FALSE		4039703	0		==			
ANR	4039762	CallExpression	m_server -> publishVMClassAd ( workingdir )		4039703	0					
ANR	4039763	Callee	m_server -> publishVMClassAd		4039703	0					
ANR	4039764	PtrMemberAccess	m_server -> publishVMClassAd		4039703	0					
ANR	4039765	Identifier	m_server		4039703	0					
ANR	4039766	Identifier	publishVMClassAd		4039703	1					
ANR	4039767	ArgumentList	workingdir		4039703	1					
ANR	4039768	Argument	workingdir		4039703	0					
ANR	4039769	Identifier	workingdir		4039703	0					
ANR	4039770	Identifier	FALSE		4039703	1					
ANR	4039771	CompoundStatement		17:54:477:477	4039703	1					
ANR	4039772	ReturnStatement	return VMGAHP_REQ_COMMAND_ERROR ;	199:2:4509:4540	4039703	0	True				
ANR	4039773	Identifier	VMGAHP_REQ_COMMAND_ERROR		4039703	0					
ANR	4039774	IdentifierDeclStatement	MyString reqline ;	202:1:4547:4563	4039703	6	True				
ANR	4039775	IdentifierDecl	reqline		4039703	0					
ANR	4039776	IdentifierDeclType	MyString		4039703	0					
ANR	4039777	Identifier	reqline		4039703	1					
ANR	4039778	ExpressionStatement	"reqline . sprintf ( ""%s"" , vm_type )"	203:1:4566:4596	4039703	7	True				
ANR	4039779	CallExpression	"reqline . sprintf ( ""%s"" , vm_type )"		4039703	0					
ANR	4039780	Callee	reqline . sprintf		4039703	0					
ANR	4039781	MemberAccess	reqline . sprintf		4039703	0					
ANR	4039782	Identifier	reqline		4039703	0					
ANR	4039783	Identifier	sprintf		4039703	1					
ANR	4039784	ArgumentList	"""%s"""		4039703	1					
ANR	4039785	Argument	"""%s"""		4039703	0					
ANR	4039786	PrimaryExpression	"""%s"""		4039703	0					
ANR	4039787	Argument	vm_type		4039703	1					
ANR	4039788	Identifier	vm_type		4039703	0					
ANR	4039789	IfStatement	"if ( m_server -> nowPending ( command , reqline . Value ( ) , this ) == false )"		4039703	8					
ANR	4039790	Condition	"m_server -> nowPending ( command , reqline . Value ( ) , this ) == false"	207:5:4689:4749	4039703	0	True				
ANR	4039791	EqualityExpression	"m_server -> nowPending ( command , reqline . Value ( ) , this ) == false"		4039703	0		==			
ANR	4039792	CallExpression	"m_server -> nowPending ( command , reqline . Value ( ) , this )"		4039703	0					
ANR	4039793	Callee	m_server -> nowPending		4039703	0					
ANR	4039794	PtrMemberAccess	m_server -> nowPending		4039703	0					
ANR	4039795	Identifier	m_server		4039703	0					
ANR	4039796	Identifier	nowPending		4039703	1					
ANR	4039797	ArgumentList	command		4039703	1					
ANR	4039798	Argument	command		4039703	0					
ANR	4039799	Identifier	command		4039703	0					
ANR	4039800	Argument	reqline . Value ( )		4039703	1					
ANR	4039801	CallExpression	reqline . Value ( )		4039703	0					
ANR	4039802	Callee	reqline . Value		4039703	0					
ANR	4039803	MemberAccess	reqline . Value		4039703	0					
ANR	4039804	Identifier	reqline		4039703	0					
ANR	4039805	Identifier	Value		4039703	1					
ANR	4039806	ArgumentList			4039703	1					
ANR	4039807	Argument	this		4039703	2					
ANR	4039808	Identifier	this		4039703	0					
ANR	4039809	Identifier	false		4039703	1					
ANR	4039810	CompoundStatement		26:69:725:725	4039703	1					
ANR	4039811	ReturnStatement	return VMGAHP_REQ_COMMAND_ERROR ;	208:2:4757:4788	4039703	0	True				
ANR	4039812	Identifier	VMGAHP_REQ_COMMAND_ERROR		4039703	0					
ANR	4039813	ExpressionStatement	m_command = command	212:1:4837:4856	4039703	9	True				
ANR	4039814	AssignmentExpression	m_command = command		4039703	0		=			
ANR	4039815	Identifier	m_command		4039703	0					
ANR	4039816	Identifier	command		4039703	1					
ANR	4039817	ExpressionStatement	startPendingTimer ( )	213:1:4859:4878	4039703	10	True				
ANR	4039818	CallExpression	startPendingTimer ( )		4039703	0					
ANR	4039819	Callee	startPendingTimer		4039703	0					
ANR	4039820	Identifier	startPendingTimer		4039703	0					
ANR	4039821	ArgumentList			4039703	1					
ANR	4039822	IfStatement	if ( m_mode == BLOCKING )		4039703	11					
ANR	4039823	Condition	m_mode == BLOCKING	216:5:4925:4942	4039703	0	True				
ANR	4039824	EqualityExpression	m_mode == BLOCKING		4039703	0		==			
ANR	4039825	Identifier	m_mode		4039703	0					
ANR	4039826	Identifier	BLOCKING		4039703	1					
ANR	4039827	CompoundStatement		35:26:918:918	4039703	1					
ANR	4039828	ExpressionStatement	"m_server -> getPendingResult ( m_pending_reqid , true )"	217:2:4950:4999	4039703	0	True				
ANR	4039829	CallExpression	"m_server -> getPendingResult ( m_pending_reqid , true )"		4039703	0					
ANR	4039830	Callee	m_server -> getPendingResult		4039703	0					
ANR	4039831	PtrMemberAccess	m_server -> getPendingResult		4039703	0					
ANR	4039832	Identifier	m_server		4039703	0					
ANR	4039833	Identifier	getPendingResult		4039703	1					
ANR	4039834	ArgumentList	m_pending_reqid		4039703	1					
ANR	4039835	Argument	m_pending_reqid		4039703	0					
ANR	4039836	Identifier	m_pending_reqid		4039703	0					
ANR	4039837	Argument	true		4039703	1					
ANR	4039838	Identifier	true		4039703	0					
ANR	4039839	ElseStatement	else		4039703	0					
ANR	4039840	CompoundStatement		37:8:981:981	4039703	0					
ANR	4039841	ExpressionStatement	"m_server -> getPendingResult ( m_pending_reqid , false )"	219:2:5013:5063	4039703	0	True				
ANR	4039842	CallExpression	"m_server -> getPendingResult ( m_pending_reqid , false )"		4039703	0					
ANR	4039843	Callee	m_server -> getPendingResult		4039703	0					
ANR	4039844	PtrMemberAccess	m_server -> getPendingResult		4039703	0					
ANR	4039845	Identifier	m_server		4039703	0					
ANR	4039846	Identifier	getPendingResult		4039703	1					
ANR	4039847	ArgumentList	m_pending_reqid		4039703	1					
ANR	4039848	Argument	m_pending_reqid		4039703	0					
ANR	4039849	Identifier	m_pending_reqid		4039703	0					
ANR	4039850	Argument	false		4039703	1					
ANR	4039851	Identifier	false		4039703	0					
ANR	4039852	IfStatement	if ( m_pending_status == REQ_DONE )		4039703	12					
ANR	4039853	Condition	m_pending_status == REQ_DONE	222:5:5074:5101	4039703	0	True				
ANR	4039854	EqualityExpression	m_pending_status == REQ_DONE		4039703	0		==			
ANR	4039855	Identifier	m_pending_status		4039703	0					
ANR	4039856	Identifier	REQ_DONE		4039703	1					
ANR	4039857	CompoundStatement		41:36:1077:1077	4039703	1					
ANR	4039858	ExpressionStatement	stopPendingTimer ( )	223:2:5109:5127	4039703	0	True				
ANR	4039859	CallExpression	stopPendingTimer ( )		4039703	0					
ANR	4039860	Callee	stopPendingTimer		4039703	0					
ANR	4039861	Identifier	stopPendingTimer		4039703	0					
ANR	4039862	ArgumentList			4039703	1					
ANR	4039863	ReturnStatement	return VMGAHP_REQ_COMMAND_DONE ;	224:2:5131:5161	4039703	1	True				
ANR	4039864	Identifier	VMGAHP_REQ_COMMAND_DONE		4039703	0					
ANR	4039865	ElseStatement	else		4039703	0					
ANR	4039866	IfStatement	if ( m_pending_status == REQ_SUBMITTED )		4039703	0					
ANR	4039867	Condition	m_pending_status == REQ_SUBMITTED	225:12:5175:5207	4039703	0	True				
ANR	4039868	EqualityExpression	m_pending_status == REQ_SUBMITTED		4039703	0		==			
ANR	4039869	Identifier	m_pending_status		4039703	0					
ANR	4039870	Identifier	REQ_SUBMITTED		4039703	1					
ANR	4039871	CompoundStatement		44:48:1183:1183	4039703	1					
ANR	4039872	IfStatement	if ( isPendingTimeout ( ) )		4039703	0					
ANR	4039873	Condition	isPendingTimeout ( )	227:6:5253:5270	4039703	0	True				
ANR	4039874	CallExpression	isPendingTimeout ( )		4039703	0					
ANR	4039875	Callee	isPendingTimeout		4039703	0					
ANR	4039876	Identifier	isPendingTimeout		4039703	0					
ANR	4039877	ArgumentList			4039703	1					
ANR	4039878	CompoundStatement		46:27:1246:1246	4039703	1					
ANR	4039879	ExpressionStatement	"dprintf ( D_ALWAYS , ""(%s %s) timed out\\n"" , command , reqline . Value ( ) )"	228:3:5279:5342	4039703	0	True				
ANR	4039880	CallExpression	"dprintf ( D_ALWAYS , ""(%s %s) timed out\\n"" , command , reqline . Value ( ) )"		4039703	0					
ANR	4039881	Callee	dprintf		4039703	0					
ANR	4039882	Identifier	dprintf		4039703	0					
ANR	4039883	ArgumentList	D_ALWAYS		4039703	1					
ANR	4039884	Argument	D_ALWAYS		4039703	0					
ANR	4039885	Identifier	D_ALWAYS		4039703	0					
ANR	4039886	Argument	"""(%s %s) timed out\\n"""		4039703	1					
ANR	4039887	PrimaryExpression	"""(%s %s) timed out\\n"""		4039703	0					
ANR	4039888	Argument	command		4039703	2					
ANR	4039889	Identifier	command		4039703	0					
ANR	4039890	Argument	reqline . Value ( )		4039703	3					
ANR	4039891	CallExpression	reqline . Value ( )		4039703	0					
ANR	4039892	Callee	reqline . Value		4039703	0					
ANR	4039893	MemberAccess	reqline . Value		4039703	0					
ANR	4039894	Identifier	reqline		4039703	0					
ANR	4039895	Identifier	Value		4039703	1					
ANR	4039896	ArgumentList			4039703	1					
ANR	4039897	ReturnStatement	return VMGAHP_REQ_COMMAND_TIMED_OUT ;	229:3:5347:5382	4039703	1	True				
ANR	4039898	Identifier	VMGAHP_REQ_COMMAND_TIMED_OUT		4039703	0					
ANR	4039899	ReturnStatement	return VMGAHP_REQ_COMMAND_PENDING ;	233:2:5440:5473	4039703	1	True				
ANR	4039900	Identifier	VMGAHP_REQ_COMMAND_PENDING		4039703	0					
ANR	4039901	ElseStatement	else		4039703	0					
ANR	4039902	CompoundStatement		53:7:1454:1454	4039703	0					
ANR	4039903	ExpressionStatement	stopPendingTimer ( )	236:2:5497:5515	4039703	0	True				
ANR	4039904	CallExpression	stopPendingTimer ( )		4039703	0					
ANR	4039905	Callee	stopPendingTimer		4039703	0					
ANR	4039906	Identifier	stopPendingTimer		4039703	0					
ANR	4039907	ArgumentList			4039703	1					
ANR	4039908	ReturnStatement	return VMGAHP_REQ_COMMAND_ERROR ;	237:2:5519:5550	4039703	1	True				
ANR	4039909	Identifier	VMGAHP_REQ_COMMAND_ERROR		4039703	0					
ANR	4039910	ReturnType	int		4039703	1					
ANR	4039911	Identifier	VMGahpRequest :: vmStart		4039703	2					
ANR	4039912	ParameterList	"const char * vm_type , const char * workingdir"		4039703	3					
ANR	4039913	Parameter	const char * vm_type	181:23:3982:4000	4039703	0	True				
ANR	4039914	ParameterType	const char *		4039703	0					
ANR	4039915	Identifier	vm_type		4039703	1					
ANR	4039916	Parameter	const char * workingdir	181:44:4003:4024	4039703	1	True				
ANR	4039917	ParameterType	const char *		4039703	0					
ANR	4039918	Identifier	workingdir		4039703	1					
ANR	4039919	CFGEntryNode	ENTRY		4039703		True				
ANR	4039920	CFGExitNode	EXIT		4039703		True				
ANR	4039921	Symbol	m_server -> isSupportedVMType		4039703						
ANR	4039922	Symbol	VMGAHP_REQ_COMMAND_ERROR		4039703						
ANR	4039923	Symbol	workingdir		4039703						
ANR	4039924	Symbol	m_server		4039703						
ANR	4039925	Symbol	VMGAHP_REQ_COMMAND_TIMED_OUT		4039703						
ANR	4039926	Symbol	isPendingTimeout		4039703						
ANR	4039927	Symbol	VMGAHP_REQ_VMTYPE_NOT_SUPPORTED		4039703						
ANR	4039928	Symbol	REQ_SUBMITTED		4039703						
ANR	4039929	Symbol	VMGAHP_REQ_COMMAND_NOT_SUPPORTED		4039703						
ANR	4039930	Symbol	vm_type		4039703						
ANR	4039931	Symbol	VMGAHP_REQ_COMMAND_DONE		4039703						
ANR	4039932	Symbol	m_server -> nowPending		4039703						
ANR	4039933	Symbol	getPendingStatus		4039703						
ANR	4039934	Symbol	reqline		4039703						
ANR	4039935	Symbol	m_mode		4039703						
ANR	4039936	Symbol	m_pending_reqid		4039703						
ANR	4039937	Symbol	REQ_INITIALIZED		4039703						
ANR	4039938	Symbol	m_server -> publishVMClassAd		4039703						
ANR	4039939	Symbol	m_command		4039703						
ANR	4039940	Symbol	REQ_DONE		4039703						
ANR	4039941	Symbol	m_server -> isSupportedCommand		4039703						
ANR	4039942	Symbol	m_pending_status		4039703						
ANR	4039943	Symbol	* m_server		4039703						
ANR	4039944	Symbol	false		4039703						
ANR	4039945	Symbol	this		4039703						
ANR	4039946	Symbol	D_ALWAYS		4039703						
ANR	4039947	Symbol	command		4039703						
ANR	4039948	Symbol	VMGAHP_REQ_COMMAND_PENDING		4039703						
ANR	4039949	Symbol	reqline . Value		4039703						
ANR	4039950	Symbol	true		4039703						
ANR	4039951	Symbol	FALSE		4039703						
ANR	4039952	Symbol	BLOCKING		4039703						
ANR	4039953	Function	VMGahpRequest :: vmStop	241:0:5558:5687							
ANR	4039954	FunctionDef	VMGahpRequest :: vmStop (int vm_id)		4039953	0					
ANR	4039955	CompoundStatement		243:0:5595:5687	4039953	0					
ANR	4039956	Statement	static	244:1:5598:5603	4039953	0	True				
ANR	4039957	IdentifierDeclStatement	"const char * command = ""CONDOR_VM_STOP"" ;"	244:8:5605:5643	4039953	1	True				
ANR	4039958	IdentifierDecl	"* command = ""CONDOR_VM_STOP"""		4039953	0					
ANR	4039959	IdentifierDeclType	const char *		4039953	0					
ANR	4039960	Identifier	command		4039953	1					
ANR	4039961	AssignmentExpression	"* command = ""CONDOR_VM_STOP"""		4039953	2		=			
ANR	4039962	Identifier	command		4039953	0					
ANR	4039963	PrimaryExpression	"""CONDOR_VM_STOP"""		4039953	1					
ANR	4039964	ReturnStatement	"return executeBasicCmd ( command , vm_id ) ;"	246:1:5647:5685	4039953	2	True				
ANR	4039965	CallExpression	"executeBasicCmd ( command , vm_id )"		4039953	0					
ANR	4039966	Callee	executeBasicCmd		4039953	0					
ANR	4039967	Identifier	executeBasicCmd		4039953	0					
ANR	4039968	ArgumentList	command		4039953	1					
ANR	4039969	Argument	command		4039953	0					
ANR	4039970	Identifier	command		4039953	0					
ANR	4039971	Argument	vm_id		4039953	1					
ANR	4039972	Identifier	vm_id		4039953	0					
ANR	4039973	ReturnType	int		4039953	1					
ANR	4039974	Identifier	VMGahpRequest :: vmStop		4039953	2					
ANR	4039975	ParameterList	int vm_id		4039953	3					
ANR	4039976	Parameter	int vm_id	242:22:5584:5592	4039953	0	True				
ANR	4039977	ParameterType	int		4039953	0					
ANR	4039978	Identifier	vm_id		4039953	1					
ANR	4039979	CFGEntryNode	ENTRY		4039953		True				
ANR	4039980	CFGExitNode	EXIT		4039953		True				
ANR	4039981	Symbol	vm_id		4039953						
ANR	4039982	Symbol	executeBasicCmd		4039953						
ANR	4039983	Symbol	command		4039953						
ANR	4039984	Function	VMGahpRequest :: vmSuspend	249:0:5690:5825							
ANR	4039985	FunctionDef	VMGahpRequest :: vmSuspend (int vm_id)		4039984	0					
ANR	4039986	CompoundStatement		251:0:5730:5825	4039984	0					
ANR	4039987	Statement	static	252:1:5733:5738	4039984	0	True				
ANR	4039988	IdentifierDeclStatement	"const char * command = ""CONDOR_VM_SUSPEND"" ;"	252:8:5740:5781	4039984	1	True				
ANR	4039989	IdentifierDecl	"* command = ""CONDOR_VM_SUSPEND"""		4039984	0					
ANR	4039990	IdentifierDeclType	const char *		4039984	0					
ANR	4039991	Identifier	command		4039984	1					
ANR	4039992	AssignmentExpression	"* command = ""CONDOR_VM_SUSPEND"""		4039984	2		=			
ANR	4039993	Identifier	command		4039984	0					
ANR	4039994	PrimaryExpression	"""CONDOR_VM_SUSPEND"""		4039984	1					
ANR	4039995	ReturnStatement	"return executeBasicCmd ( command , vm_id ) ;"	254:1:5785:5823	4039984	2	True				
ANR	4039996	CallExpression	"executeBasicCmd ( command , vm_id )"		4039984	0					
ANR	4039997	Callee	executeBasicCmd		4039984	0					
ANR	4039998	Identifier	executeBasicCmd		4039984	0					
ANR	4039999	ArgumentList	command		4039984	1					
ANR	4040000	Argument	command		4039984	0					
ANR	4040001	Identifier	command		4039984	0					
ANR	4040002	Argument	vm_id		4039984	1					
ANR	4040003	Identifier	vm_id		4039984	0					
ANR	4040004	ReturnType	int		4039984	1					
ANR	4040005	Identifier	VMGahpRequest :: vmSuspend		4039984	2					
ANR	4040006	ParameterList	int vm_id		4039984	3					
ANR	4040007	Parameter	int vm_id	250:25:5719:5727	4039984	0	True				
ANR	4040008	ParameterType	int		4039984	0					
ANR	4040009	Identifier	vm_id		4039984	1					
ANR	4040010	CFGEntryNode	ENTRY		4039984		True				
ANR	4040011	CFGExitNode	EXIT		4039984		True				
ANR	4040012	Symbol	vm_id		4039984						
ANR	4040013	Symbol	executeBasicCmd		4039984						
ANR	4040014	Symbol	command		4039984						
ANR	4040015	Function	VMGahpRequest :: vmSoftSuspend	257:0:5828:5972							
ANR	4040016	FunctionDef	VMGahpRequest :: vmSoftSuspend (int vm_id)		4040015	0					
ANR	4040017	CompoundStatement		259:0:5872:5972	4040015	0					
ANR	4040018	Statement	static	260:1:5875:5880	4040015	0	True				
ANR	4040019	IdentifierDeclStatement	"const char * command = ""CONDOR_VM_SOFT_SUSPEND"" ;"	260:8:5882:5928	4040015	1	True				
ANR	4040020	IdentifierDecl	"* command = ""CONDOR_VM_SOFT_SUSPEND"""		4040015	0					
ANR	4040021	IdentifierDeclType	const char *		4040015	0					
ANR	4040022	Identifier	command		4040015	1					
ANR	4040023	AssignmentExpression	"* command = ""CONDOR_VM_SOFT_SUSPEND"""		4040015	2		=			
ANR	4040024	Identifier	command		4040015	0					
ANR	4040025	PrimaryExpression	"""CONDOR_VM_SOFT_SUSPEND"""		4040015	1					
ANR	4040026	ReturnStatement	"return executeBasicCmd ( command , vm_id ) ;"	262:1:5932:5970	4040015	2	True				
ANR	4040027	CallExpression	"executeBasicCmd ( command , vm_id )"		4040015	0					
ANR	4040028	Callee	executeBasicCmd		4040015	0					
ANR	4040029	Identifier	executeBasicCmd		4040015	0					
ANR	4040030	ArgumentList	command		4040015	1					
ANR	4040031	Argument	command		4040015	0					
ANR	4040032	Identifier	command		4040015	0					
ANR	4040033	Argument	vm_id		4040015	1					
ANR	4040034	Identifier	vm_id		4040015	0					
ANR	4040035	ReturnType	int		4040015	1					
ANR	4040036	Identifier	VMGahpRequest :: vmSoftSuspend		4040015	2					
ANR	4040037	ParameterList	int vm_id		4040015	3					
ANR	4040038	Parameter	int vm_id	258:29:5861:5869	4040015	0	True				
ANR	4040039	ParameterType	int		4040015	0					
ANR	4040040	Identifier	vm_id		4040015	1					
ANR	4040041	CFGEntryNode	ENTRY		4040015		True				
ANR	4040042	CFGExitNode	EXIT		4040015		True				
ANR	4040043	Symbol	vm_id		4040015						
ANR	4040044	Symbol	executeBasicCmd		4040015						
ANR	4040045	Symbol	command		4040015						
ANR	4040046	Function	VMGahpRequest :: vmResume	265:0:5975:6108							
ANR	4040047	FunctionDef	VMGahpRequest :: vmResume (int vm_id)		4040046	0					
ANR	4040048	CompoundStatement		267:0:6014:6108	4040046	0					
ANR	4040049	Statement	static	268:1:6017:6022	4040046	0	True				
ANR	4040050	IdentifierDeclStatement	"const char * command = ""CONDOR_VM_RESUME"" ;"	268:8:6024:6064	4040046	1	True				
ANR	4040051	IdentifierDecl	"* command = ""CONDOR_VM_RESUME"""		4040046	0					
ANR	4040052	IdentifierDeclType	const char *		4040046	0					
ANR	4040053	Identifier	command		4040046	1					
ANR	4040054	AssignmentExpression	"* command = ""CONDOR_VM_RESUME"""		4040046	2		=			
ANR	4040055	Identifier	command		4040046	0					
ANR	4040056	PrimaryExpression	"""CONDOR_VM_RESUME"""		4040046	1					
ANR	4040057	ReturnStatement	"return executeBasicCmd ( command , vm_id ) ;"	270:1:6068:6106	4040046	2	True				
ANR	4040058	CallExpression	"executeBasicCmd ( command , vm_id )"		4040046	0					
ANR	4040059	Callee	executeBasicCmd		4040046	0					
ANR	4040060	Identifier	executeBasicCmd		4040046	0					
ANR	4040061	ArgumentList	command		4040046	1					
ANR	4040062	Argument	command		4040046	0					
ANR	4040063	Identifier	command		4040046	0					
ANR	4040064	Argument	vm_id		4040046	1					
ANR	4040065	Identifier	vm_id		4040046	0					
ANR	4040066	ReturnType	int		4040046	1					
ANR	4040067	Identifier	VMGahpRequest :: vmResume		4040046	2					
ANR	4040068	ParameterList	int vm_id		4040046	3					
ANR	4040069	Parameter	int vm_id	266:24:6003:6011	4040046	0	True				
ANR	4040070	ParameterType	int		4040046	0					
ANR	4040071	Identifier	vm_id		4040046	1					
ANR	4040072	CFGEntryNode	ENTRY		4040046		True				
ANR	4040073	CFGExitNode	EXIT		4040046		True				
ANR	4040074	Symbol	vm_id		4040046						
ANR	4040075	Symbol	executeBasicCmd		4040046						
ANR	4040076	Symbol	command		4040046						
ANR	4040077	Function	VMGahpRequest :: vmCheckpoint	273:0:6111:6252							
ANR	4040078	FunctionDef	VMGahpRequest :: vmCheckpoint (int vm_id)		4040077	0					
ANR	4040079	CompoundStatement		275:0:6154:6252	4040077	0					
ANR	4040080	Statement	static	276:1:6157:6162	4040077	0	True				
ANR	4040081	IdentifierDeclStatement	"const char * command = ""CONDOR_VM_CHECKPOINT"" ;"	276:8:6164:6208	4040077	1	True				
ANR	4040082	IdentifierDecl	"* command = ""CONDOR_VM_CHECKPOINT"""		4040077	0					
ANR	4040083	IdentifierDeclType	const char *		4040077	0					
ANR	4040084	Identifier	command		4040077	1					
ANR	4040085	AssignmentExpression	"* command = ""CONDOR_VM_CHECKPOINT"""		4040077	2		=			
ANR	4040086	Identifier	command		4040077	0					
ANR	4040087	PrimaryExpression	"""CONDOR_VM_CHECKPOINT"""		4040077	1					
ANR	4040088	ReturnStatement	"return executeBasicCmd ( command , vm_id ) ;"	278:1:6212:6250	4040077	2	True				
ANR	4040089	CallExpression	"executeBasicCmd ( command , vm_id )"		4040077	0					
ANR	4040090	Callee	executeBasicCmd		4040077	0					
ANR	4040091	Identifier	executeBasicCmd		4040077	0					
ANR	4040092	ArgumentList	command		4040077	1					
ANR	4040093	Argument	command		4040077	0					
ANR	4040094	Identifier	command		4040077	0					
ANR	4040095	Argument	vm_id		4040077	1					
ANR	4040096	Identifier	vm_id		4040077	0					
ANR	4040097	ReturnType	int		4040077	1					
ANR	4040098	Identifier	VMGahpRequest :: vmCheckpoint		4040077	2					
ANR	4040099	ParameterList	int vm_id		4040077	3					
ANR	4040100	Parameter	int vm_id	274:28:6143:6151	4040077	0	True				
ANR	4040101	ParameterType	int		4040077	0					
ANR	4040102	Identifier	vm_id		4040077	1					
ANR	4040103	CFGEntryNode	ENTRY		4040077		True				
ANR	4040104	CFGExitNode	EXIT		4040077		True				
ANR	4040105	Symbol	vm_id		4040077						
ANR	4040106	Symbol	executeBasicCmd		4040077						
ANR	4040107	Symbol	command		4040077						
ANR	4040108	Function	VMGahpRequest :: vmStatus	281:0:6255:6388							
ANR	4040109	FunctionDef	VMGahpRequest :: vmStatus (int vm_id)		4040108	0					
ANR	4040110	CompoundStatement		283:0:6294:6388	4040108	0					
ANR	4040111	Statement	static	284:1:6297:6302	4040108	0	True				
ANR	4040112	IdentifierDeclStatement	"const char * command = ""CONDOR_VM_STATUS"" ;"	284:8:6304:6344	4040108	1	True				
ANR	4040113	IdentifierDecl	"* command = ""CONDOR_VM_STATUS"""		4040108	0					
ANR	4040114	IdentifierDeclType	const char *		4040108	0					
ANR	4040115	Identifier	command		4040108	1					
ANR	4040116	AssignmentExpression	"* command = ""CONDOR_VM_STATUS"""		4040108	2		=			
ANR	4040117	Identifier	command		4040108	0					
ANR	4040118	PrimaryExpression	"""CONDOR_VM_STATUS"""		4040108	1					
ANR	4040119	ReturnStatement	"return executeBasicCmd ( command , vm_id ) ;"	286:1:6348:6386	4040108	2	True				
ANR	4040120	CallExpression	"executeBasicCmd ( command , vm_id )"		4040108	0					
ANR	4040121	Callee	executeBasicCmd		4040108	0					
ANR	4040122	Identifier	executeBasicCmd		4040108	0					
ANR	4040123	ArgumentList	command		4040108	1					
ANR	4040124	Argument	command		4040108	0					
ANR	4040125	Identifier	command		4040108	0					
ANR	4040126	Argument	vm_id		4040108	1					
ANR	4040127	Identifier	vm_id		4040108	0					
ANR	4040128	ReturnType	int		4040108	1					
ANR	4040129	Identifier	VMGahpRequest :: vmStatus		4040108	2					
ANR	4040130	ParameterList	int vm_id		4040108	3					
ANR	4040131	Parameter	int vm_id	282:24:6283:6291	4040108	0	True				
ANR	4040132	ParameterType	int		4040108	0					
ANR	4040133	Identifier	vm_id		4040108	1					
ANR	4040134	CFGEntryNode	ENTRY		4040108		True				
ANR	4040135	CFGExitNode	EXIT		4040108		True				
ANR	4040136	Symbol	vm_id		4040108						
ANR	4040137	Symbol	executeBasicCmd		4040108						
ANR	4040138	Symbol	command		4040108						
ANR	4040139	Function	VMGahpRequest :: vmGetPid	289:0:6391:6524							
ANR	4040140	FunctionDef	VMGahpRequest :: vmGetPid (int vm_id)		4040139	0					
ANR	4040141	CompoundStatement		291:0:6430:6524	4040139	0					
ANR	4040142	Statement	static	292:1:6433:6438	4040139	0	True				
ANR	4040143	IdentifierDeclStatement	"const char * command = ""CONDOR_VM_GETPID"" ;"	292:8:6440:6480	4040139	1	True				
ANR	4040144	IdentifierDecl	"* command = ""CONDOR_VM_GETPID"""		4040139	0					
ANR	4040145	IdentifierDeclType	const char *		4040139	0					
ANR	4040146	Identifier	command		4040139	1					
ANR	4040147	AssignmentExpression	"* command = ""CONDOR_VM_GETPID"""		4040139	2		=			
ANR	4040148	Identifier	command		4040139	0					
ANR	4040149	PrimaryExpression	"""CONDOR_VM_GETPID"""		4040139	1					
ANR	4040150	ReturnStatement	"return executeBasicCmd ( command , vm_id ) ;"	294:1:6484:6522	4040139	2	True				
ANR	4040151	CallExpression	"executeBasicCmd ( command , vm_id )"		4040139	0					
ANR	4040152	Callee	executeBasicCmd		4040139	0					
ANR	4040153	Identifier	executeBasicCmd		4040139	0					
ANR	4040154	ArgumentList	command		4040139	1					
ANR	4040155	Argument	command		4040139	0					
ANR	4040156	Identifier	command		4040139	0					
ANR	4040157	Argument	vm_id		4040139	1					
ANR	4040158	Identifier	vm_id		4040139	0					
ANR	4040159	ReturnType	int		4040139	1					
ANR	4040160	Identifier	VMGahpRequest :: vmGetPid		4040139	2					
ANR	4040161	ParameterList	int vm_id		4040139	3					
ANR	4040162	Parameter	int vm_id	290:24:6419:6427	4040139	0	True				
ANR	4040163	ParameterType	int		4040139	0					
ANR	4040164	Identifier	vm_id		4040139	1					
ANR	4040165	CFGEntryNode	ENTRY		4040139		True				
ANR	4040166	CFGExitNode	EXIT		4040139		True				
ANR	4040167	Symbol	vm_id		4040139						
ANR	4040168	Symbol	executeBasicCmd		4040139						
ANR	4040169	Symbol	command		4040139						
ANR	4040170	Function	VMGahpRequest :: executeBasicCmd	297:0:6527:7792							
ANR	4040171	FunctionDef	"VMGahpRequest :: executeBasicCmd (const char * command , int vm_id)"		4040170	0					
ANR	4040172	CompoundStatement		299:0:6594:7792	4040170	0					
ANR	4040173	IfStatement	if ( getPendingStatus ( ) != REQ_INITIALIZED )		4040170	0					
ANR	4040174	Condition	getPendingStatus ( ) != REQ_INITIALIZED	300:5:6601:6637	4040170	0	True				
ANR	4040175	EqualityExpression	getPendingStatus ( ) != REQ_INITIALIZED		4040170	0		!=			
ANR	4040176	CallExpression	getPendingStatus ( )		4040170	0					
ANR	4040177	Callee	getPendingStatus		4040170	0					
ANR	4040178	Identifier	getPendingStatus		4040170	0					
ANR	4040179	ArgumentList			4040170	1					
ANR	4040180	Identifier	REQ_INITIALIZED		4040170	1					
ANR	4040181	CompoundStatement		2:45:46:46	4040170	1					
ANR	4040182	ReturnStatement	return VMGAHP_REQ_COMMAND_ERROR ;	301:2:6645:6676	4040170	0	True				
ANR	4040183	Identifier	VMGAHP_REQ_COMMAND_ERROR		4040170	0					
ANR	4040184	IfStatement	if ( m_server -> isSupportedCommand ( command ) == FALSE )		4040170	1					
ANR	4040185	Condition	m_server -> isSupportedCommand ( command ) == FALSE	304:4:6686:6731	4040170	0	True				
ANR	4040186	EqualityExpression	m_server -> isSupportedCommand ( command ) == FALSE		4040170	0		==			
ANR	4040187	CallExpression	m_server -> isSupportedCommand ( command )		4040170	0					
ANR	4040188	Callee	m_server -> isSupportedCommand		4040170	0					
ANR	4040189	PtrMemberAccess	m_server -> isSupportedCommand		4040170	0					
ANR	4040190	Identifier	m_server		4040170	0					
ANR	4040191	Identifier	isSupportedCommand		4040170	1					
ANR	4040192	ArgumentList	command		4040170	1					
ANR	4040193	Argument	command		4040170	0					
ANR	4040194	Identifier	command		4040170	0					
ANR	4040195	Identifier	FALSE		4040170	1					
ANR	4040196	CompoundStatement		6:52:139:139	4040170	1					
ANR	4040197	ReturnStatement	return VMGAHP_REQ_COMMAND_NOT_SUPPORTED ;	305:2:6738:6777	4040170	0	True				
ANR	4040198	Identifier	VMGAHP_REQ_COMMAND_NOT_SUPPORTED		4040170	0					
ANR	4040199	IdentifierDeclStatement	MyString reqline ;	308:1:6784:6800	4040170	2	True				
ANR	4040200	IdentifierDecl	reqline		4040170	0					
ANR	4040201	IdentifierDeclType	MyString		4040170	0					
ANR	4040202	Identifier	reqline		4040170	1					
ANR	4040203	ExpressionStatement	"reqline . sprintf ( ""%d"" , vm_id )"	309:1:6803:6831	4040170	3	True				
ANR	4040204	CallExpression	"reqline . sprintf ( ""%d"" , vm_id )"		4040170	0					
ANR	4040205	Callee	reqline . sprintf		4040170	0					
ANR	4040206	MemberAccess	reqline . sprintf		4040170	0					
ANR	4040207	Identifier	reqline		4040170	0					
ANR	4040208	Identifier	sprintf		4040170	1					
ANR	4040209	ArgumentList	"""%d"""		4040170	1					
ANR	4040210	Argument	"""%d"""		4040170	0					
ANR	4040211	PrimaryExpression	"""%d"""		4040170	0					
ANR	4040212	Argument	vm_id		4040170	1					
ANR	4040213	Identifier	vm_id		4040170	0					
ANR	4040214	IfStatement	"if ( m_server -> nowPending ( command , reqline . Value ( ) , this ) == false )"		4040170	4					
ANR	4040215	Condition	"m_server -> nowPending ( command , reqline . Value ( ) , this ) == false"	313:5:6924:6984	4040170	0	True				
ANR	4040216	EqualityExpression	"m_server -> nowPending ( command , reqline . Value ( ) , this ) == false"		4040170	0		==			
ANR	4040217	CallExpression	"m_server -> nowPending ( command , reqline . Value ( ) , this )"		4040170	0					
ANR	4040218	Callee	m_server -> nowPending		4040170	0					
ANR	4040219	PtrMemberAccess	m_server -> nowPending		4040170	0					
ANR	4040220	Identifier	m_server		4040170	0					
ANR	4040221	Identifier	nowPending		4040170	1					
ANR	4040222	ArgumentList	command		4040170	1					
ANR	4040223	Argument	command		4040170	0					
ANR	4040224	Identifier	command		4040170	0					
ANR	4040225	Argument	reqline . Value ( )		4040170	1					
ANR	4040226	CallExpression	reqline . Value ( )		4040170	0					
ANR	4040227	Callee	reqline . Value		4040170	0					
ANR	4040228	MemberAccess	reqline . Value		4040170	0					
ANR	4040229	Identifier	reqline		4040170	0					
ANR	4040230	Identifier	Value		4040170	1					
ANR	4040231	ArgumentList			4040170	1					
ANR	4040232	Argument	this		4040170	2					
ANR	4040233	Identifier	this		4040170	0					
ANR	4040234	Identifier	false		4040170	1					
ANR	4040235	CompoundStatement		15:69:393:393	4040170	1					
ANR	4040236	ReturnStatement	return VMGAHP_REQ_COMMAND_ERROR ;	314:2:6992:7023	4040170	0	True				
ANR	4040237	Identifier	VMGAHP_REQ_COMMAND_ERROR		4040170	0					
ANR	4040238	ExpressionStatement	m_command = command	318:1:7072:7091	4040170	5	True				
ANR	4040239	AssignmentExpression	m_command = command		4040170	0		=			
ANR	4040240	Identifier	m_command		4040170	0					
ANR	4040241	Identifier	command		4040170	1					
ANR	4040242	ExpressionStatement	startPendingTimer ( )	319:1:7094:7113	4040170	6	True				
ANR	4040243	CallExpression	startPendingTimer ( )		4040170	0					
ANR	4040244	Callee	startPendingTimer		4040170	0					
ANR	4040245	Identifier	startPendingTimer		4040170	0					
ANR	4040246	ArgumentList			4040170	1					
ANR	4040247	IfStatement	if ( m_mode == BLOCKING )		4040170	7					
ANR	4040248	Condition	m_mode == BLOCKING	322:5:7161:7178	4040170	0	True				
ANR	4040249	EqualityExpression	m_mode == BLOCKING		4040170	0		==			
ANR	4040250	Identifier	m_mode		4040170	0					
ANR	4040251	Identifier	BLOCKING		4040170	1					
ANR	4040252	CompoundStatement		24:26:587:587	4040170	1					
ANR	4040253	ExpressionStatement	"m_server -> getPendingResult ( m_pending_reqid , true )"	323:2:7186:7235	4040170	0	True				
ANR	4040254	CallExpression	"m_server -> getPendingResult ( m_pending_reqid , true )"		4040170	0					
ANR	4040255	Callee	m_server -> getPendingResult		4040170	0					
ANR	4040256	PtrMemberAccess	m_server -> getPendingResult		4040170	0					
ANR	4040257	Identifier	m_server		4040170	0					
ANR	4040258	Identifier	getPendingResult		4040170	1					
ANR	4040259	ArgumentList	m_pending_reqid		4040170	1					
ANR	4040260	Argument	m_pending_reqid		4040170	0					
ANR	4040261	Identifier	m_pending_reqid		4040170	0					
ANR	4040262	Argument	true		4040170	1					
ANR	4040263	Identifier	true		4040170	0					
ANR	4040264	ElseStatement	else		4040170	0					
ANR	4040265	CompoundStatement		26:8:650:650	4040170	0					
ANR	4040266	ExpressionStatement	"m_server -> getPendingResult ( m_pending_reqid , false )"	325:2:7250:7300	4040170	0	True				
ANR	4040267	CallExpression	"m_server -> getPendingResult ( m_pending_reqid , false )"		4040170	0					
ANR	4040268	Callee	m_server -> getPendingResult		4040170	0					
ANR	4040269	PtrMemberAccess	m_server -> getPendingResult		4040170	0					
ANR	4040270	Identifier	m_server		4040170	0					
ANR	4040271	Identifier	getPendingResult		4040170	1					
ANR	4040272	ArgumentList	m_pending_reqid		4040170	1					
ANR	4040273	Argument	m_pending_reqid		4040170	0					
ANR	4040274	Identifier	m_pending_reqid		4040170	0					
ANR	4040275	Argument	false		4040170	1					
ANR	4040276	Identifier	false		4040170	0					
ANR	4040277	IfStatement	if ( m_pending_status == REQ_DONE )		4040170	8					
ANR	4040278	Condition	m_pending_status == REQ_DONE	328:5:7311:7338	4040170	0	True				
ANR	4040279	EqualityExpression	m_pending_status == REQ_DONE		4040170	0		==			
ANR	4040280	Identifier	m_pending_status		4040170	0					
ANR	4040281	Identifier	REQ_DONE		4040170	1					
ANR	4040282	CompoundStatement		30:36:747:747	4040170	1					
ANR	4040283	ExpressionStatement	stopPendingTimer ( )	329:2:7346:7364	4040170	0	True				
ANR	4040284	CallExpression	stopPendingTimer ( )		4040170	0					
ANR	4040285	Callee	stopPendingTimer		4040170	0					
ANR	4040286	Identifier	stopPendingTimer		4040170	0					
ANR	4040287	ArgumentList			4040170	1					
ANR	4040288	ReturnStatement	return VMGAHP_REQ_COMMAND_DONE ;	330:2:7368:7398	4040170	1	True				
ANR	4040289	Identifier	VMGAHP_REQ_COMMAND_DONE		4040170	0					
ANR	4040290	ElseStatement	else		4040170	0					
ANR	4040291	IfStatement	if ( m_pending_status == REQ_SUBMITTED )		4040170	0					
ANR	4040292	Condition	m_pending_status == REQ_SUBMITTED	331:12:7412:7444	4040170	0	True				
ANR	4040293	EqualityExpression	m_pending_status == REQ_SUBMITTED		4040170	0		==			
ANR	4040294	Identifier	m_pending_status		4040170	0					
ANR	4040295	Identifier	REQ_SUBMITTED		4040170	1					
ANR	4040296	CompoundStatement		33:48:853:853	4040170	1					
ANR	4040297	IfStatement	if ( isPendingTimeout ( ) )		4040170	0					
ANR	4040298	Condition	isPendingTimeout ( )	333:6:7490:7507	4040170	0	True				
ANR	4040299	CallExpression	isPendingTimeout ( )		4040170	0					
ANR	4040300	Callee	isPendingTimeout		4040170	0					
ANR	4040301	Identifier	isPendingTimeout		4040170	0					
ANR	4040302	ArgumentList			4040170	1					
ANR	4040303	CompoundStatement		35:27:916:916	4040170	1					
ANR	4040304	ExpressionStatement	"dprintf ( D_ALWAYS , ""(%s %s) timed out\\n"" , command , reqline . Value ( ) )"	334:3:7516:7579	4040170	0	True				
ANR	4040305	CallExpression	"dprintf ( D_ALWAYS , ""(%s %s) timed out\\n"" , command , reqline . Value ( ) )"		4040170	0					
ANR	4040306	Callee	dprintf		4040170	0					
ANR	4040307	Identifier	dprintf		4040170	0					
ANR	4040308	ArgumentList	D_ALWAYS		4040170	1					
ANR	4040309	Argument	D_ALWAYS		4040170	0					
ANR	4040310	Identifier	D_ALWAYS		4040170	0					
ANR	4040311	Argument	"""(%s %s) timed out\\n"""		4040170	1					
ANR	4040312	PrimaryExpression	"""(%s %s) timed out\\n"""		4040170	0					
ANR	4040313	Argument	command		4040170	2					
ANR	4040314	Identifier	command		4040170	0					
ANR	4040315	Argument	reqline . Value ( )		4040170	3					
ANR	4040316	CallExpression	reqline . Value ( )		4040170	0					
ANR	4040317	Callee	reqline . Value		4040170	0					
ANR	4040318	MemberAccess	reqline . Value		4040170	0					
ANR	4040319	Identifier	reqline		4040170	0					
ANR	4040320	Identifier	Value		4040170	1					
ANR	4040321	ArgumentList			4040170	1					
ANR	4040322	ReturnStatement	return VMGAHP_REQ_COMMAND_TIMED_OUT ;	335:3:7584:7619	4040170	1	True				
ANR	4040323	Identifier	VMGAHP_REQ_COMMAND_TIMED_OUT		4040170	0					
ANR	4040324	ReturnStatement	return VMGAHP_REQ_COMMAND_PENDING ;	339:2:7677:7710	4040170	1	True				
ANR	4040325	Identifier	VMGAHP_REQ_COMMAND_PENDING		4040170	0					
ANR	4040326	ElseStatement	else		4040170	0					
ANR	4040327	CompoundStatement		42:7:1124:1124	4040170	0					
ANR	4040328	ExpressionStatement	stopPendingTimer ( )	342:2:7734:7752	4040170	0	True				
ANR	4040329	CallExpression	stopPendingTimer ( )		4040170	0					
ANR	4040330	Callee	stopPendingTimer		4040170	0					
ANR	4040331	Identifier	stopPendingTimer		4040170	0					
ANR	4040332	ArgumentList			4040170	1					
ANR	4040333	ReturnStatement	return VMGAHP_REQ_COMMAND_ERROR ;	343:2:7756:7787	4040170	1	True				
ANR	4040334	Identifier	VMGAHP_REQ_COMMAND_ERROR		4040170	0					
ANR	4040335	ReturnType	int		4040170	1					
ANR	4040336	Identifier	VMGahpRequest :: executeBasicCmd		4040170	2					
ANR	4040337	ParameterList	"const char * command , int vm_id"		4040170	3					
ANR	4040338	Parameter	const char * command	298:31:6562:6580	4040170	0	True				
ANR	4040339	ParameterType	const char *		4040170	0					
ANR	4040340	Identifier	command		4040170	1					
ANR	4040341	Parameter	int vm_id	298:52:6583:6591	4040170	1	True				
ANR	4040342	ParameterType	int		4040170	0					
ANR	4040343	Identifier	vm_id		4040170	1					
ANR	4040344	CFGEntryNode	ENTRY		4040170		True				
ANR	4040345	CFGExitNode	EXIT		4040170		True				
ANR	4040346	Symbol	VMGAHP_REQ_COMMAND_ERROR		4040170						
ANR	4040347	Symbol	m_server		4040170						
ANR	4040348	Symbol	VMGAHP_REQ_COMMAND_TIMED_OUT		4040170						
ANR	4040349	Symbol	isPendingTimeout		4040170						
ANR	4040350	Symbol	REQ_SUBMITTED		4040170						
ANR	4040351	Symbol	VMGAHP_REQ_COMMAND_NOT_SUPPORTED		4040170						
ANR	4040352	Symbol	vm_id		4040170						
ANR	4040353	Symbol	VMGAHP_REQ_COMMAND_DONE		4040170						
ANR	4040354	Symbol	m_server -> nowPending		4040170						
ANR	4040355	Symbol	getPendingStatus		4040170						
ANR	4040356	Symbol	reqline		4040170						
ANR	4040357	Symbol	m_mode		4040170						
ANR	4040358	Symbol	m_pending_reqid		4040170						
ANR	4040359	Symbol	REQ_INITIALIZED		4040170						
ANR	4040360	Symbol	m_command		4040170						
ANR	4040361	Symbol	REQ_DONE		4040170						
ANR	4040362	Symbol	m_server -> isSupportedCommand		4040170						
ANR	4040363	Symbol	m_pending_status		4040170						
ANR	4040364	Symbol	* m_server		4040170						
ANR	4040365	Symbol	false		4040170						
ANR	4040366	Symbol	this		4040170						
ANR	4040367	Symbol	D_ALWAYS		4040170						
ANR	4040368	Symbol	command		4040170						
ANR	4040369	Symbol	VMGAHP_REQ_COMMAND_PENDING		4040170						
ANR	4040370	Symbol	reqline . Value		4040170						
ANR	4040371	Symbol	true		4040170						
ANR	4040372	Symbol	FALSE		4040170						
ANR	4040373	Symbol	BLOCKING		4040170						
ANR	4040374	Function	VMGahpRequest :: setMode	347:0:7795:7852							
ANR	4040375	FunctionDef	VMGahpRequest :: setMode (reqmode m)		4040374	0					
ANR	4040376	CompoundStatement		349:0:7835:7852	4040374	0					
ANR	4040377	ExpressionStatement	m_mode = m	350:1:7839:7849	4040374	0	True				
ANR	4040378	AssignmentExpression	m_mode = m		4040374	0		=			
ANR	4040379	Identifier	m_mode		4040374	0					
ANR	4040380	Identifier	m		4040374	1					
ANR	4040381	ReturnType	void		4040374	1					
ANR	4040382	Identifier	VMGahpRequest :: setMode		4040374	2					
ANR	4040383	ParameterList	reqmode m		4040374	3					
ANR	4040384	Parameter	reqmode m	348:23:7823:7831	4040374	0	True				
ANR	4040385	ParameterType	reqmode		4040374	0					
ANR	4040386	Identifier	m		4040374	1					
ANR	4040387	CFGEntryNode	ENTRY		4040374		True				
ANR	4040388	CFGExitNode	EXIT		4040374		True				
ANR	4040389	Symbol	m_mode		4040374						
ANR	4040390	Symbol	m		4040374						
ANR	4040391	Function	VMGahpRequest :: setTimeout	353:0:7855:7913							
ANR	4040392	FunctionDef	VMGahpRequest :: setTimeout (int t)		4040391	0					
ANR	4040393	CompoundStatement		355:0:7895:7913	4040391	0					
ANR	4040394	ExpressionStatement	m_timeout = t	356:1:7898:7911	4040391	0	True				
ANR	4040395	AssignmentExpression	m_timeout = t		4040391	0		=			
ANR	4040396	Identifier	m_timeout		4040391	0					
ANR	4040397	Identifier	t		4040391	1					
ANR	4040398	ReturnType	void		4040391	1					
ANR	4040399	Identifier	VMGahpRequest :: setTimeout		4040391	2					
ANR	4040400	ParameterList	int t		4040391	3					
ANR	4040401	Parameter	int t	354:26:7887:7891	4040391	0	True				
ANR	4040402	ParameterType	int		4040391	0					
ANR	4040403	Identifier	t		4040391	1					
ANR	4040404	CFGEntryNode	ENTRY		4040391		True				
ANR	4040405	CFGExitNode	EXIT		4040391		True				
ANR	4040406	Symbol	t		4040391						
ANR	4040407	Symbol	m_timeout		4040391						
ANR	4040408	Function	VMGahpRequest :: getTimeout	359:0:7916:7971							
ANR	4040409	FunctionDef	VMGahpRequest :: getTimeout ()		4040408	0					
ANR	4040410	CompoundStatement		361:0:7950:7971	4040408	0					
ANR	4040411	ReturnStatement	return m_timeout ;	362:1:7953:7969	4040408	0	True				
ANR	4040412	Identifier	m_timeout		4040408	0					
ANR	4040413	ReturnType	int		4040408	1					
ANR	4040414	Identifier	VMGahpRequest :: getTimeout		4040408	2					
ANR	4040415	ParameterList			4040408	3					
ANR	4040416	CFGEntryNode	ENTRY		4040408		True				
ANR	4040417	CFGExitNode	EXIT		4040408		True				
ANR	4040418	Symbol	m_timeout		4040408						
ANR	4040419	Function	VMGahpRequest :: setNotificationTimerId	365:0:7974:8054							
ANR	4040420	FunctionDef	VMGahpRequest :: setNotificationTimerId (int tid)		4040419	0					
ANR	4040421	CompoundStatement		367:0:8028:8054	4040419	0					
ANR	4040422	ExpressionStatement	m_user_timer_id = tid	368:1:8031:8052	4040419	0	True				
ANR	4040423	AssignmentExpression	m_user_timer_id = tid		4040419	0		=			
ANR	4040424	Identifier	m_user_timer_id		4040419	0					
ANR	4040425	Identifier	tid		4040419	1					
ANR	4040426	ReturnType	void		4040419	1					
ANR	4040427	Identifier	VMGahpRequest :: setNotificationTimerId		4040419	2					
ANR	4040428	ParameterList	int tid		4040419	3					
ANR	4040429	Parameter	int tid	366:38:8018:8024	4040419	0	True				
ANR	4040430	ParameterType	int		4040419	0					
ANR	4040431	Identifier	tid		4040419	1					
ANR	4040432	CFGEntryNode	ENTRY		4040419		True				
ANR	4040433	CFGExitNode	EXIT		4040419		True				
ANR	4040434	Symbol	tid		4040419						
ANR	4040435	Symbol	m_user_timer_id		4040419						
ANR	4040436	Function	VMGahpRequest :: getNotificationTimerId	371:0:8057:8130							
ANR	4040437	FunctionDef	VMGahpRequest :: getNotificationTimerId ()		4040436	0					
ANR	4040438	CompoundStatement		373:0:8103:8130	4040436	0					
ANR	4040439	ReturnStatement	return m_user_timer_id ;	374:1:8106:8128	4040436	0	True				
ANR	4040440	Identifier	m_user_timer_id		4040436	0					
ANR	4040441	ReturnType	int		4040436	1					
ANR	4040442	Identifier	VMGahpRequest :: getNotificationTimerId		4040436	2					
ANR	4040443	ParameterList			4040436	3					
ANR	4040444	CFGEntryNode	ENTRY		4040436		True				
ANR	4040445	CFGExitNode	EXIT		4040436		True				
ANR	4040446	Symbol	m_user_timer_id		4040436						
ANR	4040447	Function	VMGahpRequest :: getVMGahpServer	377:0:8133:8202							
ANR	4040448	FunctionDef	VMGahpRequest :: getVMGahpServer ()		4040447	0					
ANR	4040449	CompoundStatement		379:0:8182:8202	4040447	0					
ANR	4040450	ReturnStatement	return m_server ;	380:1:8185:8200	4040447	0	True				
ANR	4040451	Identifier	m_server		4040447	0					
ANR	4040452	ReturnType	VMGahpServer *		4040447	1					
ANR	4040453	Identifier	VMGahpRequest :: getVMGahpServer		4040447	2					
ANR	4040454	ParameterList			4040447	3					
ANR	4040455	CFGEntryNode	ENTRY		4040447		True				
ANR	4040456	CFGExitNode	EXIT		4040447		True				
ANR	4040457	Symbol	m_server		4040447						
ANR	4040458	Function	VMGahpRequest :: setReqId	383:0:8205:8269							
ANR	4040459	FunctionDef	VMGahpRequest :: setReqId (int id)		4040458	0					
ANR	4040460	CompoundStatement		385:0:8244:8269	4040458	0					
ANR	4040461	ExpressionStatement	m_pending_reqid = id	386:1:8247:8267	4040458	0	True				
ANR	4040462	AssignmentExpression	m_pending_reqid = id		4040458	0		=			
ANR	4040463	Identifier	m_pending_reqid		4040458	0					
ANR	4040464	Identifier	id		4040458	1					
ANR	4040465	ReturnType	void		4040458	1					
ANR	4040466	Identifier	VMGahpRequest :: setReqId		4040458	2					
ANR	4040467	ParameterList	int id		4040458	3					
ANR	4040468	Parameter	int id	384:24:8235:8240	4040458	0	True				
ANR	4040469	ParameterType	int		4040458	0					
ANR	4040470	Identifier	id		4040458	1					
ANR	4040471	CFGEntryNode	ENTRY		4040458		True				
ANR	4040472	CFGExitNode	EXIT		4040458		True				
ANR	4040473	Symbol	m_pending_reqid		4040458						
ANR	4040474	Symbol	id		4040458						
ANR	4040475	Function	VMGahpRequest :: getReqId	389:0:8273:8332							
ANR	4040476	FunctionDef	VMGahpRequest :: getReqId ()		4040475	0					
ANR	4040477	CompoundStatement		391:0:8305:8332	4040475	0					
ANR	4040478	ReturnStatement	return m_pending_reqid ;	392:1:8308:8330	4040475	0	True				
ANR	4040479	Identifier	m_pending_reqid		4040475	0					
ANR	4040480	ReturnType	int		4040475	1					
ANR	4040481	Identifier	VMGahpRequest :: getReqId		4040475	2					
ANR	4040482	ParameterList			4040475	3					
ANR	4040483	CFGEntryNode	ENTRY		4040475		True				
ANR	4040484	CFGExitNode	EXIT		4040475		True				
ANR	4040485	Symbol	m_pending_reqid		4040475						
ANR	4040486	Function	VMGahpRequest :: setResult	395:0:8336:8417							
ANR	4040487	FunctionDef	VMGahpRequest :: setResult (Gahp_Args * result)		4040486	0					
ANR	4040488	CompoundStatement		397:0:8387:8417	4040486	0					
ANR	4040489	ExpressionStatement	m_pending_result = result	398:1:8390:8415	4040486	0	True				
ANR	4040490	AssignmentExpression	m_pending_result = result		4040486	0		=			
ANR	4040491	Identifier	m_pending_result		4040486	0					
ANR	4040492	Identifier	result		4040486	1					
ANR	4040493	ReturnType	void		4040486	1					
ANR	4040494	Identifier	VMGahpRequest :: setResult		4040486	2					
ANR	4040495	ParameterList	Gahp_Args * result		4040486	3					
ANR	4040496	Parameter	Gahp_Args * result	396:25:8367:8383	4040486	0	True				
ANR	4040497	ParameterType	Gahp_Args *		4040486	0					
ANR	4040498	Identifier	result		4040486	1					
ANR	4040499	CFGEntryNode	ENTRY		4040486		True				
ANR	4040500	CFGExitNode	EXIT		4040486		True				
ANR	4040501	Symbol	result		4040486						
ANR	4040502	Symbol	m_pending_result		4040486						
ANR	4040503	Function	VMGahpRequest :: getResult	401:0:8420:8487							
ANR	4040504	FunctionDef	VMGahpRequest :: getResult ()		4040503	0					
ANR	4040505	CompoundStatement		402:27:8459:8487	4040503	0					
ANR	4040506	ReturnStatement	return m_pending_result ;	403:1:8462:8485	4040503	0	True				
ANR	4040507	Identifier	m_pending_result		4040503	0					
ANR	4040508	ReturnType	Gahp_Args *		4040503	1					
ANR	4040509	Identifier	VMGahpRequest :: getResult		4040503	2					
ANR	4040510	ParameterList			4040503	3					
ANR	4040511	CFGEntryNode	ENTRY		4040503		True				
ANR	4040512	CFGExitNode	EXIT		4040503		True				
ANR	4040513	Symbol	m_pending_result		4040503						
ANR	4040514	Function	VMGahpRequest :: checkResult	406:0:8490:9165							
ANR	4040515	FunctionDef	VMGahpRequest :: checkResult (MyString & errmsg)		4040514	0					
ANR	4040516	CompoundStatement		407:45:8541:9165	4040514	0					
ANR	4040517	IfStatement	if ( ! m_pending_result || m_pending_result -> argc != 3 )		4040514	0					
ANR	4040518	Condition	! m_pending_result || m_pending_result -> argc != 3	408:5:8548:8595	4040514	0	True				
ANR	4040519	OrExpression	! m_pending_result || m_pending_result -> argc != 3		4040514	0		||			
ANR	4040520	UnaryOperationExpression	! m_pending_result		4040514	0					
ANR	4040521	UnaryOperator	!		4040514	0					
ANR	4040522	Identifier	m_pending_result		4040514	1					
ANR	4040523	EqualityExpression	m_pending_result -> argc != 3		4040514	1		!=			
ANR	4040524	PtrMemberAccess	m_pending_result -> argc		4040514	0					
ANR	4040525	Identifier	m_pending_result		4040514	0					
ANR	4040526	Identifier	argc		4040514	1					
ANR	4040527	PrimaryExpression	3		4040514	1					
ANR	4040528	CompoundStatement		2:55:56:56	4040514	1					
ANR	4040529	ExpressionStatement	"dprintf ( D_ALWAYS , ""Bad Result of VM Request('%s')\\n"" , m_command . Value ( ) )"	409:2:8602:8679	4040514	0	True				
ANR	4040530	CallExpression	"dprintf ( D_ALWAYS , ""Bad Result of VM Request('%s')\\n"" , m_command . Value ( ) )"		4040514	0					
ANR	4040531	Callee	dprintf		4040514	0					
ANR	4040532	Identifier	dprintf		4040514	0					
ANR	4040533	ArgumentList	D_ALWAYS		4040514	1					
ANR	4040534	Argument	D_ALWAYS		4040514	0					
ANR	4040535	Identifier	D_ALWAYS		4040514	0					
ANR	4040536	Argument	"""Bad Result of VM Request('%s')\\n"""		4040514	1					
ANR	4040537	PrimaryExpression	"""Bad Result of VM Request('%s')\\n"""		4040514	0					
ANR	4040538	Argument	m_command . Value ( )		4040514	2					
ANR	4040539	CallExpression	m_command . Value ( )		4040514	0					
ANR	4040540	Callee	m_command . Value		4040514	0					
ANR	4040541	MemberAccess	m_command . Value		4040514	0					
ANR	4040542	Identifier	m_command		4040514	0					
ANR	4040543	Identifier	Value		4040514	1					
ANR	4040544	ArgumentList			4040514	1					
ANR	4040545	ExpressionStatement	errmsg = VMGAHP_ERR_INTERNAL	411:2:8683:8711	4040514	1	True				
ANR	4040546	AssignmentExpression	errmsg = VMGAHP_ERR_INTERNAL		4040514	0		=			
ANR	4040547	Identifier	errmsg		4040514	0					
ANR	4040548	Identifier	VMGAHP_ERR_INTERNAL		4040514	1					
ANR	4040549	ReturnStatement	return false ;	412:2:8715:8727	4040514	2	True				
ANR	4040550	Identifier	false		4040514	0					
ANR	4040551	IdentifierDeclStatement	"int resultno = ( int ) strtol ( m_pending_result -> argv [ 1 ] , ( char * * ) NULL , 10 ) ;"	415:1:8734:8806	4040514	1	True				
ANR	4040552	IdentifierDecl	"resultno = ( int ) strtol ( m_pending_result -> argv [ 1 ] , ( char * * ) NULL , 10 )"		4040514	0					
ANR	4040553	IdentifierDeclType	int		4040514	0					
ANR	4040554	Identifier	resultno		4040514	1					
ANR	4040555	AssignmentExpression	"resultno = ( int ) strtol ( m_pending_result -> argv [ 1 ] , ( char * * ) NULL , 10 )"		4040514	2		=			
ANR	4040556	Identifier	resultno		4040514	0					
ANR	4040557	CastExpression	"( int ) strtol ( m_pending_result -> argv [ 1 ] , ( char * * ) NULL , 10 )"		4040514	1					
ANR	4040558	CastTarget	int		4040514	0					
ANR	4040559	CallExpression	"strtol ( m_pending_result -> argv [ 1 ] , ( char * * ) NULL , 10 )"		4040514	1					
ANR	4040560	Callee	strtol		4040514	0					
ANR	4040561	Identifier	strtol		4040514	0					
ANR	4040562	ArgumentList	m_pending_result -> argv [ 1 ]		4040514	1					
ANR	4040563	Argument	m_pending_result -> argv [ 1 ]		4040514	0					
ANR	4040564	ArrayIndexing	m_pending_result -> argv [ 1 ]		4040514	0					
ANR	4040565	PtrMemberAccess	m_pending_result -> argv		4040514	0					
ANR	4040566	Identifier	m_pending_result		4040514	0					
ANR	4040567	Identifier	argv		4040514	1					
ANR	4040568	PrimaryExpression	1		4040514	1					
ANR	4040569	Argument	( char * * ) NULL		4040514	1					
ANR	4040570	CastExpression	( char * * ) NULL		4040514	0					
ANR	4040571	CastTarget	char * *		4040514	0					
ANR	4040572	Identifier	NULL		4040514	1					
ANR	4040573	Argument	10		4040514	2					
ANR	4040574	PrimaryExpression	10		4040514	0					
ANR	4040575	IfStatement	if ( resultno != 0 )		4040514	2					
ANR	4040576	Condition	resultno != 0	416:5:8813:8825	4040514	0	True				
ANR	4040577	EqualityExpression	resultno != 0		4040514	0		!=			
ANR	4040578	Identifier	resultno		4040514	0					
ANR	4040579	PrimaryExpression	0		4040514	1					
ANR	4040580	CompoundStatement		10:21:287:287	4040514	1					
ANR	4040581	Statement	dprintf	417:2:8833:8839	4040514	0	True				
ANR	4040582	Statement	(	417:9:8840:8840	4040514	1	True				
ANR	4040583	Statement	D_ALWAYS	417:10:8841:8848	4040514	2	True				
ANR	4040584	Statement	","	417:18:8849:8849	4040514	3	True				
ANR	4040585	Statement	"""Failed to execute command('%s'), """	417:20:8851:8885	4040514	4	True				
ANR	4040586	Statement	"""vmgahp error string('%s')\\n"""	418:4:8891:8919	4040514	5	True				
ANR	4040587	Statement	","	418:33:8920:8920	4040514	6	True				
ANR	4040588	Statement	m_command	419:4:8927:8935	4040514	7	True				
ANR	4040589	Statement	.	419:13:8936:8936	4040514	8	True				
ANR	4040590	Statement	Value	419:14:8937:8941	4040514	9	True				
ANR	4040591	Statement	(	419:19:8942:8942	4040514	10	True				
ANR	4040592	Statement	)	419:20:8943:8943	4040514	11	True				
ANR	4040593	Statement	","	419:21:8944:8944	4040514	12	True				
ANR	4040594	Statement	m_pending_result	419:23:8946:8961	4040514	13	True				
ANR	4040595	Statement	->	419:39:8962:8963	4040514	14	True				
ANR	4040596	Statement	argv	419:41:8964:8967	4040514	15	True				
ANR	4040597	Statement	[	419:45:8968:8968	4040514	16	True				
ANR	4040598	Statement	2	419:46:8969:8969	4040514	17	True				
ANR	4040599	Statement	]	419:47:8970:8970	4040514	18	True				
ANR	4040600	Statement	)	419:48:8971:8971	4040514	19	True				
ANR	4040601	ExpressionStatement		419:49:8972:8972	4040514	20	True				
ANR	4040602	IfStatement	"if ( ! strcmp ( m_pending_result -> argv [ 2 ] , ""NULL"" ) )"		4040514	21					
ANR	4040603	Condition	"! strcmp ( m_pending_result -> argv [ 2 ] , ""NULL"" )"	421:6:8981:9022	4040514	0	True				
ANR	4040604	UnaryOperationExpression	"! strcmp ( m_pending_result -> argv [ 2 ] , ""NULL"" )"		4040514	0					
ANR	4040605	UnaryOperator	!		4040514	0					
ANR	4040606	CallExpression	"strcmp ( m_pending_result -> argv [ 2 ] , ""NULL"" )"		4040514	1					
ANR	4040607	Callee	strcmp		4040514	0					
ANR	4040608	Identifier	strcmp		4040514	0					
ANR	4040609	ArgumentList	m_pending_result -> argv [ 2 ]		4040514	1					
ANR	4040610	Argument	m_pending_result -> argv [ 2 ]		4040514	0					
ANR	4040611	ArrayIndexing	m_pending_result -> argv [ 2 ]		4040514	0					
ANR	4040612	PtrMemberAccess	m_pending_result -> argv		4040514	0					
ANR	4040613	Identifier	m_pending_result		4040514	0					
ANR	4040614	Identifier	argv		4040514	1					
ANR	4040615	PrimaryExpression	2		4040514	1					
ANR	4040616	Argument	"""NULL"""		4040514	1					
ANR	4040617	PrimaryExpression	"""NULL"""		4040514	0					
ANR	4040618	CompoundStatement		15:51:484:484	4040514	1					
ANR	4040619	ExpressionStatement	errmsg = VMGAHP_ERR_INTERNAL	422:3:9031:9059	4040514	0	True				
ANR	4040620	AssignmentExpression	errmsg = VMGAHP_ERR_INTERNAL		4040514	0		=			
ANR	4040621	Identifier	errmsg		4040514	0					
ANR	4040622	Identifier	VMGAHP_ERR_INTERNAL		4040514	1					
ANR	4040623	ReturnStatement	return false ;	423:3:9064:9076	4040514	1	True				
ANR	4040624	Identifier	false		4040514	0					
ANR	4040625	ElseStatement	else		4040514	0					
ANR	4040626	CompoundStatement		18:8:544:544	4040514	0					
ANR	4040627	ExpressionStatement	errmsg = m_pending_result -> argv [ 2 ]	425:3:9091:9125	4040514	0	True				
ANR	4040628	AssignmentExpression	errmsg = m_pending_result -> argv [ 2 ]		4040514	0		=			
ANR	4040629	Identifier	errmsg		4040514	0					
ANR	4040630	ArrayIndexing	m_pending_result -> argv [ 2 ]		4040514	1					
ANR	4040631	PtrMemberAccess	m_pending_result -> argv		4040514	0					
ANR	4040632	Identifier	m_pending_result		4040514	0					
ANR	4040633	Identifier	argv		4040514	1					
ANR	4040634	PrimaryExpression	2		4040514	1					
ANR	4040635	ReturnStatement	return false ;	426:3:9130:9142	4040514	1	True				
ANR	4040636	Identifier	false		4040514	0					
ANR	4040637	ReturnStatement	return true ;	429:1:9152:9163	4040514	3	True				
ANR	4040638	Identifier	true		4040514	0					
ANR	4040639	ReturnType	bool		4040514	1					
ANR	4040640	Identifier	VMGahpRequest :: checkResult		4040514	2					
ANR	4040641	ParameterList	MyString & errmsg		4040514	3					
ANR	4040642	Parameter	MyString & errmsg	407:27:8523:8538	4040514	0	True				
ANR	4040643	ParameterType	MyString &		4040514	0					
ANR	4040644	Identifier	errmsg		4040514	1					
ANR	4040645	CFGEntryNode	ENTRY		4040514		True				
ANR	4040646	CFGExitNode	EXIT		4040514		True				
ANR	4040647	Symbol	strcmp		4040514						
ANR	4040648	Symbol	m_command		4040514						
ANR	4040649	Symbol	VMGAHP_ERR_INTERNAL		4040514						
ANR	4040650	Symbol	resultno		4040514						
ANR	4040651	Symbol	NULL		4040514						
ANR	4040652	Symbol	m_pending_result -> argc		4040514						
ANR	4040653	Symbol	D_ALWAYS		4040514						
ANR	4040654	Symbol	false		4040514						
ANR	4040655	Symbol	errmsg		4040514						
ANR	4040656	Symbol	* * m_pending_result		4040514						
ANR	4040657	Symbol	m_pending_result -> argv		4040514						
ANR	4040658	Symbol	strtol		4040514						
ANR	4040659	Symbol	* m_pending_result		4040514						
ANR	4040660	Symbol	true		4040514						
ANR	4040661	Symbol	m_command . Value		4040514						
ANR	4040662	Symbol	* m_pending_result -> argv		4040514						
ANR	4040663	Symbol	m_pending_result		4040514						
ANR	4040664	Function	VMGahpRequest :: setPendingStatus	432:0:9168:9254							
ANR	4040665	FunctionDef	VMGahpRequest :: setPendingStatus (reqstatus status)		4040664	0					
ANR	4040666	CompoundStatement		433:50:9224:9254	4040664	0					
ANR	4040667	ExpressionStatement	m_pending_status = status	434:1:9227:9252	4040664	0	True				
ANR	4040668	AssignmentExpression	m_pending_status = status		4040664	0		=			
ANR	4040669	Identifier	m_pending_status		4040664	0					
ANR	4040670	Identifier	status		4040664	1					
ANR	4040671	ReturnType	void		4040664	1					
ANR	4040672	Identifier	VMGahpRequest :: setPendingStatus		4040664	2					
ANR	4040673	ParameterList	reqstatus status		4040664	3					
ANR	4040674	Parameter	reqstatus status	433:32:9206:9221	4040664	0	True				
ANR	4040675	ParameterType	reqstatus		4040664	0					
ANR	4040676	Identifier	status		4040664	1					
ANR	4040677	CFGEntryNode	ENTRY		4040664		True				
ANR	4040678	CFGExitNode	EXIT		4040664		True				
ANR	4040679	Symbol	m_pending_status		4040664						
ANR	4040680	Symbol	status		4040664						
ANR	4040681	Function	VMGahpRequest :: getPendingStatus	437:0:9258:9330							
ANR	4040682	FunctionDef	VMGahpRequest :: getPendingStatus ()		4040681	0					
ANR	4040683	CompoundStatement		437:44:9302:9330	4040681	0					
ANR	4040684	ReturnStatement	return m_pending_status ;	438:1:9305:9328	4040681	0	True				
ANR	4040685	Identifier	m_pending_status		4040681	0					
ANR	4040686	ReturnType	reqstatus		4040681	1					
ANR	4040687	Identifier	VMGahpRequest :: getPendingStatus		4040681	2					
ANR	4040688	ParameterList			4040681	3					
ANR	4040689	CFGEntryNode	ENTRY		4040681		True				
ANR	4040690	CFGExitNode	EXIT		4040681		True				
ANR	4040691	Symbol	m_pending_status		4040681						
