command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1045615	File	data/converged/CVE-2011-4930_htcondor/daemon.cpp								
ANR	1045616	Function	Daemon :: common_init	47:0:1439:2173							
ANR	1045617	FunctionDef	Daemon :: common_init ()		1045616	0					
ANR	1045618	CompoundStatement		48:22:1466:2173	1045616	0					
ANR	1045619	ExpressionStatement	_type = DT_NONE	49:1:1469:1484	1045616	0	True				
ANR	1045620	AssignmentExpression	_type = DT_NONE		1045616	0		=			
ANR	1045621	Identifier	_type		1045616	0					
ANR	1045622	Identifier	DT_NONE		1045616	1					
ANR	1045623	ExpressionStatement	_port = - 1	50:1:1487:1497	1045616	1	True				
ANR	1045624	AssignmentExpression	_port = - 1		1045616	0		=			
ANR	1045625	Identifier	_port		1045616	0					
ANR	1045626	UnaryOperationExpression	- 1		1045616	1					
ANR	1045627	UnaryOperator	-		1045616	0					
ANR	1045628	PrimaryExpression	1		1045616	1					
ANR	1045629	ExpressionStatement	_is_local = false	51:1:1500:1517	1045616	2	True				
ANR	1045630	AssignmentExpression	_is_local = false		1045616	0		=			
ANR	1045631	Identifier	_is_local		1045616	0					
ANR	1045632	Identifier	false		1045616	1					
ANR	1045633	ExpressionStatement	_tried_locate = false	52:1:1520:1541	1045616	3	True				
ANR	1045634	AssignmentExpression	_tried_locate = false		1045616	0		=			
ANR	1045635	Identifier	_tried_locate		1045616	0					
ANR	1045636	Identifier	false		1045616	1					
ANR	1045637	ExpressionStatement	_tried_init_hostname = false	53:1:1544:1572	1045616	4	True				
ANR	1045638	AssignmentExpression	_tried_init_hostname = false		1045616	0		=			
ANR	1045639	Identifier	_tried_init_hostname		1045616	0					
ANR	1045640	Identifier	false		1045616	1					
ANR	1045641	ExpressionStatement	_tried_init_version = false	54:1:1575:1602	1045616	5	True				
ANR	1045642	AssignmentExpression	_tried_init_version = false		1045616	0		=			
ANR	1045643	Identifier	_tried_init_version		1045616	0					
ANR	1045644	Identifier	false		1045616	1					
ANR	1045645	ExpressionStatement	_is_configured = true	55:1:1605:1626	1045616	6	True				
ANR	1045646	AssignmentExpression	_is_configured = true		1045616	0		=			
ANR	1045647	Identifier	_is_configured		1045616	0					
ANR	1045648	Identifier	true		1045616	1					
ANR	1045649	ExpressionStatement	_addr = NULL	56:1:1629:1641	1045616	7	True				
ANR	1045650	AssignmentExpression	_addr = NULL		1045616	0		=			
ANR	1045651	Identifier	_addr		1045616	0					
ANR	1045652	Identifier	NULL		1045616	1					
ANR	1045653	ExpressionStatement	_name = NULL	57:1:1644:1656	1045616	8	True				
ANR	1045654	AssignmentExpression	_name = NULL		1045616	0		=			
ANR	1045655	Identifier	_name		1045616	0					
ANR	1045656	Identifier	NULL		1045616	1					
ANR	1045657	ExpressionStatement	_pool = NULL	58:1:1659:1671	1045616	9	True				
ANR	1045658	AssignmentExpression	_pool = NULL		1045616	0		=			
ANR	1045659	Identifier	_pool		1045616	0					
ANR	1045660	Identifier	NULL		1045616	1					
ANR	1045661	ExpressionStatement	_version = NULL	59:1:1674:1689	1045616	10	True				
ANR	1045662	AssignmentExpression	_version = NULL		1045616	0		=			
ANR	1045663	Identifier	_version		1045616	0					
ANR	1045664	Identifier	NULL		1045616	1					
ANR	1045665	ExpressionStatement	_platform = NULL	60:1:1692:1708	1045616	11	True				
ANR	1045666	AssignmentExpression	_platform = NULL		1045616	0		=			
ANR	1045667	Identifier	_platform		1045616	0					
ANR	1045668	Identifier	NULL		1045616	1					
ANR	1045669	ExpressionStatement	_error = NULL	61:1:1711:1724	1045616	12	True				
ANR	1045670	AssignmentExpression	_error = NULL		1045616	0		=			
ANR	1045671	Identifier	_error		1045616	0					
ANR	1045672	Identifier	NULL		1045616	1					
ANR	1045673	ExpressionStatement	_error_code = CA_SUCCESS	62:1:1727:1751	1045616	13	True				
ANR	1045674	AssignmentExpression	_error_code = CA_SUCCESS		1045616	0		=			
ANR	1045675	Identifier	_error_code		1045616	0					
ANR	1045676	Identifier	CA_SUCCESS		1045616	1					
ANR	1045677	ExpressionStatement	_id_str = NULL	63:1:1754:1768	1045616	14	True				
ANR	1045678	AssignmentExpression	_id_str = NULL		1045616	0		=			
ANR	1045679	Identifier	_id_str		1045616	0					
ANR	1045680	Identifier	NULL		1045616	1					
ANR	1045681	ExpressionStatement	_subsys = NULL	64:1:1771:1785	1045616	15	True				
ANR	1045682	AssignmentExpression	_subsys = NULL		1045616	0		=			
ANR	1045683	Identifier	_subsys		1045616	0					
ANR	1045684	Identifier	NULL		1045616	1					
ANR	1045685	ExpressionStatement	_hostname = NULL	65:1:1788:1804	1045616	16	True				
ANR	1045686	AssignmentExpression	_hostname = NULL		1045616	0		=			
ANR	1045687	Identifier	_hostname		1045616	0					
ANR	1045688	Identifier	NULL		1045616	1					
ANR	1045689	ExpressionStatement	_full_hostname = NULL	66:1:1807:1828	1045616	17	True				
ANR	1045690	AssignmentExpression	_full_hostname = NULL		1045616	0		=			
ANR	1045691	Identifier	_full_hostname		1045616	0					
ANR	1045692	Identifier	NULL		1045616	1					
ANR	1045693	ExpressionStatement	_cmd_str = NULL	67:1:1831:1846	1045616	18	True				
ANR	1045694	AssignmentExpression	_cmd_str = NULL		1045616	0		=			
ANR	1045695	Identifier	_cmd_str		1045616	0					
ANR	1045696	Identifier	NULL		1045616	1					
ANR	1045697	ExpressionStatement	m_daemon_ad_ptr = NULL	68:1:1849:1871	1045616	19	True				
ANR	1045698	AssignmentExpression	m_daemon_ad_ptr = NULL		1045616	0		=			
ANR	1045699	Identifier	m_daemon_ad_ptr		1045616	0					
ANR	1045700	Identifier	NULL		1045616	1					
ANR	1045701	IdentifierDeclStatement	char buf [ 200 ] ;	69:1:1874:1887	1045616	20	True				
ANR	1045702	IdentifierDecl	buf [ 200 ]		1045616	0					
ANR	1045703	IdentifierDeclType	char [ 200 ]		1045616	0					
ANR	1045704	Identifier	buf		1045616	1					
ANR	1045705	PrimaryExpression	200		1045616	2					
ANR	1045706	ExpressionStatement	"sprintf ( buf , ""%s_TIMEOUT_MULTIPLIER"" , get_mySubSystem ( ) -> getName ( ) )"	70:1:1890:1956	1045616	21	True				
ANR	1045707	CallExpression	"sprintf ( buf , ""%s_TIMEOUT_MULTIPLIER"" , get_mySubSystem ( ) -> getName ( ) )"		1045616	0					
ANR	1045708	Callee	sprintf		1045616	0					
ANR	1045709	Identifier	sprintf		1045616	0					
ANR	1045710	ArgumentList	buf		1045616	1					
ANR	1045711	Argument	buf		1045616	0					
ANR	1045712	Identifier	buf		1045616	0					
ANR	1045713	Argument	"""%s_TIMEOUT_MULTIPLIER"""		1045616	1					
ANR	1045714	PrimaryExpression	"""%s_TIMEOUT_MULTIPLIER"""		1045616	0					
ANR	1045715	Argument	get_mySubSystem ( ) -> getName ( )		1045616	2					
ANR	1045716	CallExpression	get_mySubSystem ( ) -> getName ( )		1045616	0					
ANR	1045717	Callee	get_mySubSystem ( ) -> getName		1045616	0					
ANR	1045718	PtrMemberAccess	get_mySubSystem ( ) -> getName		1045616	0					
ANR	1045719	CallExpression	get_mySubSystem ( )		1045616	0					
ANR	1045720	Callee	get_mySubSystem		1045616	0					
ANR	1045721	Identifier	get_mySubSystem		1045616	0					
ANR	1045722	ArgumentList			1045616	1					
ANR	1045723	Identifier	getName		1045616	1					
ANR	1045724	ArgumentList			1045616	1					
ANR	1045725	ExpressionStatement	"Sock :: set_timeout_multiplier ( param_integer ( buf , param_integer ( ""TIMEOUT_MULTIPLIER"" , 0 ) ) )"	71:1:1959:2049	1045616	22	True				
ANR	1045726	CallExpression	"Sock :: set_timeout_multiplier ( param_integer ( buf , param_integer ( ""TIMEOUT_MULTIPLIER"" , 0 ) ) )"		1045616	0					
ANR	1045727	Callee	Sock :: set_timeout_multiplier		1045616	0					
ANR	1045728	Identifier	Sock :: set_timeout_multiplier		1045616	0					
ANR	1045729	ArgumentList	"param_integer ( buf , param_integer ( ""TIMEOUT_MULTIPLIER"" , 0 ) )"		1045616	1					
ANR	1045730	Argument	"param_integer ( buf , param_integer ( ""TIMEOUT_MULTIPLIER"" , 0 ) )"		1045616	0					
ANR	1045731	CallExpression	"param_integer ( buf , param_integer ( ""TIMEOUT_MULTIPLIER"" , 0 ) )"		1045616	0					
ANR	1045732	Callee	param_integer		1045616	0					
ANR	1045733	Identifier	param_integer		1045616	0					
ANR	1045734	ArgumentList	buf		1045616	1					
ANR	1045735	Argument	buf		1045616	0					
ANR	1045736	Identifier	buf		1045616	0					
ANR	1045737	Argument	"param_integer ( ""TIMEOUT_MULTIPLIER"" , 0 )"		1045616	1					
ANR	1045738	CallExpression	"param_integer ( ""TIMEOUT_MULTIPLIER"" , 0 )"		1045616	0					
ANR	1045739	Callee	param_integer		1045616	0					
ANR	1045740	Identifier	param_integer		1045616	0					
ANR	1045741	ArgumentList	"""TIMEOUT_MULTIPLIER"""		1045616	1					
ANR	1045742	Argument	"""TIMEOUT_MULTIPLIER"""		1045616	0					
ANR	1045743	PrimaryExpression	"""TIMEOUT_MULTIPLIER"""		1045616	0					
ANR	1045744	Argument	0		1045616	1					
ANR	1045745	PrimaryExpression	0		1045616	0					
ANR	1045746	ExpressionStatement	"dprintf ( D_DAEMONCORE , ""*** TIMEOUT_MULTIPLIER :: %d\\n"" , Sock :: get_timeout_multiplier ( ) )"	72:1:2052:2139	1045616	23	True				
ANR	1045747	CallExpression	"dprintf ( D_DAEMONCORE , ""*** TIMEOUT_MULTIPLIER :: %d\\n"" , Sock :: get_timeout_multiplier ( ) )"		1045616	0					
ANR	1045748	Callee	dprintf		1045616	0					
ANR	1045749	Identifier	dprintf		1045616	0					
ANR	1045750	ArgumentList	D_DAEMONCORE		1045616	1					
ANR	1045751	Argument	D_DAEMONCORE		1045616	0					
ANR	1045752	Identifier	D_DAEMONCORE		1045616	0					
ANR	1045753	Argument	"""*** TIMEOUT_MULTIPLIER :: %d\\n"""		1045616	1					
ANR	1045754	PrimaryExpression	"""*** TIMEOUT_MULTIPLIER :: %d\\n"""		1045616	0					
ANR	1045755	Argument	Sock :: get_timeout_multiplier ( )		1045616	2					
ANR	1045756	CallExpression	Sock :: get_timeout_multiplier ( )		1045616	0					
ANR	1045757	Callee	Sock :: get_timeout_multiplier		1045616	0					
ANR	1045758	Identifier	Sock :: get_timeout_multiplier		1045616	0					
ANR	1045759	ArgumentList			1045616	1					
ANR	1045760	ExpressionStatement	m_has_udp_command_port = true	73:1:2142:2171	1045616	24	True				
ANR	1045761	AssignmentExpression	m_has_udp_command_port = true		1045616	0		=			
ANR	1045762	Identifier	m_has_udp_command_port		1045616	0					
ANR	1045763	Identifier	true		1045616	1					
ANR	1045764	ReturnType	void		1045616	1					
ANR	1045765	Identifier	Daemon :: common_init		1045616	2					
ANR	1045766	ParameterList			1045616	3					
ANR	1045767	CFGEntryNode	ENTRY		1045616		True				
ANR	1045768	CFGExitNode	EXIT		1045616		True				
ANR	1045769	Symbol	_name		1045616						
ANR	1045770	Symbol	_port		1045616						
ANR	1045771	Symbol	m_daemon_ad_ptr		1045616						
ANR	1045772	Symbol	_pool		1045616						
ANR	1045773	Symbol	_hostname		1045616						
ANR	1045774	Symbol	_full_hostname		1045616						
ANR	1045775	Symbol	_tried_locate		1045616						
ANR	1045776	Symbol	DT_NONE		1045616						
ANR	1045777	Symbol	_is_local		1045616						
ANR	1045778	Symbol	_version		1045616						
ANR	1045779	Symbol	_subsys		1045616						
ANR	1045780	Symbol	_is_configured		1045616						
ANR	1045781	Symbol	NULL		1045616						
ANR	1045782	Symbol	get_mySubSystem ( ) -> getName		1045616						
ANR	1045783	Symbol	* get_mySubSystem		1045616						
ANR	1045784	Symbol	D_DAEMONCORE		1045616						
ANR	1045785	Symbol	_id_str		1045616						
ANR	1045786	Symbol	_type		1045616						
ANR	1045787	Symbol	false		1045616						
ANR	1045788	Symbol	_error		1045616						
ANR	1045789	Symbol	CA_SUCCESS		1045616						
ANR	1045790	Symbol	_cmd_str		1045616						
ANR	1045791	Symbol	_tried_init_hostname		1045616						
ANR	1045792	Symbol	_platform		1045616						
ANR	1045793	Symbol	buf		1045616						
ANR	1045794	Symbol	_tried_init_version		1045616						
ANR	1045795	Symbol	Sock :: get_timeout_multiplier		1045616						
ANR	1045796	Symbol	true		1045616						
ANR	1045797	Symbol	_addr		1045616						
ANR	1045798	Symbol	m_has_udp_command_port		1045616						
ANR	1045799	Symbol	param_integer		1045616						
ANR	1045800	Symbol	get_mySubSystem		1045616						
ANR	1045801	Symbol	_error_code		1045616						
ANR	1045802	Function	Daemon :: Daemon	77:0:2177:2960							
ANR	1045803	FunctionDef	"Daemon :: Daemon (daemon_t tType , const char * tName , const char * tPool)"		1045802	0					
ANR	1045804	CompoundStatement		78:0:2249:2960	1045802	0					
ANR	1045805	ExpressionStatement	common_init ( )	86:1:2515:2528	1045802	0	True				
ANR	1045806	CallExpression	common_init ( )		1045802	0					
ANR	1045807	Callee	common_init		1045802	0					
ANR	1045808	Identifier	common_init		1045802	0					
ANR	1045809	ArgumentList			1045802	1					
ANR	1045810	ExpressionStatement	_type = tType	87:1:2531:2544	1045802	1	True				
ANR	1045811	AssignmentExpression	_type = tType		1045802	0		=			
ANR	1045812	Identifier	_type		1045802	0					
ANR	1045813	Identifier	tType		1045802	1					
ANR	1045814	IfStatement	if ( tPool )		1045802	2					
ANR	1045815	Condition	tPool	89:5:2552:2556	1045802	0	True				
ANR	1045816	Identifier	tPool		1045802	0					
ANR	1045817	CompoundStatement		12:13:310:310	1045802	1					
ANR	1045818	ExpressionStatement	_pool = strnewp ( tPool )	90:2:2564:2588	1045802	0	True				
ANR	1045819	AssignmentExpression	_pool = strnewp ( tPool )		1045802	0		=			
ANR	1045820	Identifier	_pool		1045802	0					
ANR	1045821	CallExpression	strnewp ( tPool )		1045802	1					
ANR	1045822	Callee	strnewp		1045802	0					
ANR	1045823	Identifier	strnewp		1045802	0					
ANR	1045824	ArgumentList	tPool		1045802	1					
ANR	1045825	Argument	tPool		1045802	0					
ANR	1045826	Identifier	tPool		1045802	0					
ANR	1045827	ElseStatement	else		1045802	0					
ANR	1045828	CompoundStatement		14:8:348:348	1045802	0					
ANR	1045829	ExpressionStatement	_pool = NULL	92:2:2602:2614	1045802	0	True				
ANR	1045830	AssignmentExpression	_pool = NULL		1045802	0		=			
ANR	1045831	Identifier	_pool		1045802	0					
ANR	1045832	Identifier	NULL		1045802	1					
ANR	1045833	IfStatement	if ( tName && tName [ 0 ] )		1045802	3					
ANR	1045834	Condition	tName && tName [ 0 ]	95:5:2625:2641	1045802	0	True				
ANR	1045835	AndExpression	tName && tName [ 0 ]		1045802	0		&&			
ANR	1045836	Identifier	tName		1045802	0					
ANR	1045837	ArrayIndexing	tName [ 0 ]		1045802	1					
ANR	1045838	Identifier	tName		1045802	0					
ANR	1045839	PrimaryExpression	0		1045802	1					
ANR	1045840	CompoundStatement		18:25:395:395	1045802	1					
ANR	1045841	IfStatement	if ( is_valid_sinful ( tName ) )		1045802	0					
ANR	1045842	Condition	is_valid_sinful ( tName )	96:6:2653:2674	1045802	0	True				
ANR	1045843	CallExpression	is_valid_sinful ( tName )		1045802	0					
ANR	1045844	Callee	is_valid_sinful		1045802	0					
ANR	1045845	Identifier	is_valid_sinful		1045802	0					
ANR	1045846	ArgumentList	tName		1045802	1					
ANR	1045847	Argument	tName		1045802	0					
ANR	1045848	Identifier	tName		1045802	0					
ANR	1045849	CompoundStatement		19:31:428:428	1045802	1					
ANR	1045850	ExpressionStatement	New_addr ( strnewp ( tName ) )	97:3:2683:2709	1045802	0	True				
ANR	1045851	CallExpression	New_addr ( strnewp ( tName ) )		1045802	0					
ANR	1045852	Callee	New_addr		1045802	0					
ANR	1045853	Identifier	New_addr		1045802	0					
ANR	1045854	ArgumentList	strnewp ( tName )		1045802	1					
ANR	1045855	Argument	strnewp ( tName )		1045802	0					
ANR	1045856	CallExpression	strnewp ( tName )		1045802	0					
ANR	1045857	Callee	strnewp		1045802	0					
ANR	1045858	Identifier	strnewp		1045802	0					
ANR	1045859	ArgumentList	tName		1045802	1					
ANR	1045860	Argument	tName		1045802	0					
ANR	1045861	Identifier	tName		1045802	0					
ANR	1045862	ElseStatement	else		1045802	0					
ANR	1045863	CompoundStatement		21:9:470:470	1045802	0					
ANR	1045864	ExpressionStatement	_name = strnewp ( tName )	99:3:2725:2749	1045802	0	True				
ANR	1045865	AssignmentExpression	_name = strnewp ( tName )		1045802	0		=			
ANR	1045866	Identifier	_name		1045802	0					
ANR	1045867	CallExpression	strnewp ( tName )		1045802	1					
ANR	1045868	Callee	strnewp		1045802	0					
ANR	1045869	Identifier	strnewp		1045802	0					
ANR	1045870	ArgumentList	tName		1045802	1					
ANR	1045871	Argument	tName		1045802	0					
ANR	1045872	Identifier	tName		1045802	0					
ANR	1045873	Statement	dprintf	102:1:2760:2766	1045802	4	True				
ANR	1045874	Statement	(	102:8:2767:2767	1045802	5	True				
ANR	1045875	Statement	D_HOSTNAME	102:10:2769:2778	1045802	6	True				
ANR	1045876	Statement	","	102:20:2779:2779	1045802	7	True				
ANR	1045877	Statement	"""New Daemon obj (%s) name: \\""%s\\"", pool: """	102:22:2781:2822	1045802	8	True				
ANR	1045878	Statement	"""\\""%s\\"", addr: \\""%s\\""\\n"""	103:4:2830:2853	1045802	9	True				
ANR	1045879	Statement	","	103:28:2854:2854	1045802	10	True				
ANR	1045880	Statement	daemonString	103:30:2856:2867	1045802	11	True				
ANR	1045881	Statement	(	103:42:2868:2868	1045802	12	True				
ANR	1045882	Statement	_type	103:43:2869:2873	1045802	13	True				
ANR	1045883	Statement	)	103:48:2874:2874	1045802	14	True				
ANR	1045884	Statement	","	103:49:2875:2875	1045802	15	True				
ANR	1045885	Statement	_name	104:4:2882:2886	1045802	16	True				
ANR	1045886	Statement	?	104:10:2888:2888	1045802	17	True				
ANR	1045887	Label	_name :	104:12:2890:2896	1045802	18	True				
ANR	1045888	Identifier	_name		1045802	0					
ANR	1045889	Statement	"""NULL"""	104:20:2898:2903	1045802	19	True				
ANR	1045890	Statement	","	104:26:2904:2904	1045802	20	True				
ANR	1045891	Statement	_pool	104:28:2906:2910	1045802	21	True				
ANR	1045892	Statement	?	104:34:2912:2912	1045802	22	True				
ANR	1045893	Label	_pool :	104:36:2914:2920	1045802	23	True				
ANR	1045894	Identifier	_pool		1045802	0					
ANR	1045895	Statement	"""NULL"""	104:44:2922:2927	1045802	24	True				
ANR	1045896	Statement	","	104:50:2928:2928	1045802	25	True				
ANR	1045897	Statement	_addr	105:4:2934:2938	1045802	26	True				
ANR	1045898	Statement	?	105:10:2940:2940	1045802	27	True				
ANR	1045899	Label	_addr :	105:12:2942:2948	1045802	28	True				
ANR	1045900	Identifier	_addr		1045802	0					
ANR	1045901	Statement	"""NULL"""	105:20:2950:2955	1045802	29	True				
ANR	1045902	Statement	)	105:27:2957:2957	1045802	30	True				
ANR	1045903	ExpressionStatement		105:28:2958:2958	1045802	31	True				
ANR	1045904	Identifier	Daemon :: Daemon		1045802	1					
ANR	1045905	ParameterList	"daemon_t tType , const char * tName , const char * tPool"		1045802	2					
ANR	1045906	Parameter	daemon_t tType	77:16:2193:2206	1045802	0	True				
ANR	1045907	ParameterType	daemon_t		1045802	0					
ANR	1045908	Identifier	tType		1045802	1					
ANR	1045909	Parameter	const char * tName	77:32:2209:2225	1045802	1	True				
ANR	1045910	ParameterType	const char *		1045802	0					
ANR	1045911	Identifier	tName		1045802	1					
ANR	1045912	Parameter	const char * tPool	77:51:2228:2244	1045802	2	True				
ANR	1045913	ParameterType	const char *		1045802	0					
ANR	1045914	Identifier	tPool		1045802	1					
ANR	1045915	CFGEntryNode	ENTRY		1045802		True				
ANR	1045916	CFGExitNode	EXIT		1045802		True				
ANR	1045917	Symbol	* tName		1045802						
ANR	1045918	Symbol	NULL		1045802						
ANR	1045919	Symbol	tType		1045802						
ANR	1045920	Symbol	_pool		1045802						
ANR	1045921	Symbol	_name		1045802						
ANR	1045922	Symbol	tName		1045802						
ANR	1045923	Symbol	tPool		1045802						
ANR	1045924	Symbol	_type		1045802						
ANR	1045925	Symbol	strnewp		1045802						
ANR	1045926	Symbol	is_valid_sinful		1045802						
ANR	1045927	Function	Daemon :: Daemon	109:0:2964:4373							
ANR	1045928	FunctionDef	"Daemon :: Daemon (const ClassAd * tAd , daemon_t tType , const char * tPool)"		1045927	0					
ANR	1045929	CompoundStatement		110:0:3037:4373	1045927	0					
ANR	1045930	IfStatement	if ( ! tAd )		1045927	0					
ANR	1045931	Condition	! tAd	111:5:3044:3048	1045927	0	True				
ANR	1045932	UnaryOperationExpression	! tAd		1045927	0					
ANR	1045933	UnaryOperator	!		1045927	0					
ANR	1045934	Identifier	tAd		1045927	1					
ANR	1045935	CompoundStatement		2:13:14:14	1045927	1					
ANR	1045936	ExpressionStatement	"EXCEPT ( ""Daemon constructor called with NULL ClassAd!"" )"	112:2:3056:3112	1045927	0	True				
ANR	1045937	CallExpression	"EXCEPT ( ""Daemon constructor called with NULL ClassAd!"" )"		1045927	0					
ANR	1045938	Callee	EXCEPT		1045927	0					
ANR	1045939	Identifier	EXCEPT		1045927	0					
ANR	1045940	ArgumentList	"""Daemon constructor called with NULL ClassAd!"""		1045927	1					
ANR	1045941	Argument	"""Daemon constructor called with NULL ClassAd!"""		1045927	0					
ANR	1045942	PrimaryExpression	"""Daemon constructor called with NULL ClassAd!"""		1045927	0					
ANR	1045943	ExpressionStatement	common_init ( )	115:1:3119:3132	1045927	1	True				
ANR	1045944	CallExpression	common_init ( )		1045927	0					
ANR	1045945	Callee	common_init		1045927	0					
ANR	1045946	Identifier	common_init		1045927	0					
ANR	1045947	ArgumentList			1045927	1					
ANR	1045948	ExpressionStatement	_type = tType	116:1:3135:3148	1045927	2	True				
ANR	1045949	AssignmentExpression	_type = tType		1045927	0		=			
ANR	1045950	Identifier	_type		1045927	0					
ANR	1045951	Identifier	tType		1045927	1					
ANR	1045952	SwitchStatement	switch ( _type )		1045927	3					
ANR	1045953	Condition	_type	118:9:3160:3164	1045927	0	True				
ANR	1045954	Identifier	_type		1045927	0					
ANR	1045955	CompoundStatement		9:17:130:130	1045927	1					
ANR	1045956	Label	case DT_MASTER :	119:1:3171:3185	1045927	0	True				
ANR	1045957	Identifier	DT_MASTER		1045927	0					
ANR	1045958	ExpressionStatement	"_subsys = strnewp ( ""MASTER"" )"	120:2:3189:3218	1045927	1	True				
ANR	1045959	AssignmentExpression	"_subsys = strnewp ( ""MASTER"" )"		1045927	0		=			
ANR	1045960	Identifier	_subsys		1045927	0					
ANR	1045961	CallExpression	"strnewp ( ""MASTER"" )"		1045927	1					
ANR	1045962	Callee	strnewp		1045927	0					
ANR	1045963	Identifier	strnewp		1045927	0					
ANR	1045964	ArgumentList	"""MASTER"""		1045927	1					
ANR	1045965	Argument	"""MASTER"""		1045927	0					
ANR	1045966	PrimaryExpression	"""MASTER"""		1045927	0					
ANR	1045967	BreakStatement	break ;	121:2:3222:3227	1045927	2	True				
ANR	1045968	Label	case DT_STARTD :	122:1:3230:3244	1045927	3	True				
ANR	1045969	Identifier	DT_STARTD		1045927	0					
ANR	1045970	ExpressionStatement	"_subsys = strnewp ( ""STARTD"" )"	123:2:3248:3277	1045927	4	True				
ANR	1045971	AssignmentExpression	"_subsys = strnewp ( ""STARTD"" )"		1045927	0		=			
ANR	1045972	Identifier	_subsys		1045927	0					
ANR	1045973	CallExpression	"strnewp ( ""STARTD"" )"		1045927	1					
ANR	1045974	Callee	strnewp		1045927	0					
ANR	1045975	Identifier	strnewp		1045927	0					
ANR	1045976	ArgumentList	"""STARTD"""		1045927	1					
ANR	1045977	Argument	"""STARTD"""		1045927	0					
ANR	1045978	PrimaryExpression	"""STARTD"""		1045927	0					
ANR	1045979	BreakStatement	break ;	124:2:3281:3286	1045927	5	True				
ANR	1045980	Label	case DT_SCHEDD :	125:1:3289:3303	1045927	6	True				
ANR	1045981	Identifier	DT_SCHEDD		1045927	0					
ANR	1045982	ExpressionStatement	"_subsys = strnewp ( ""SCHEDD"" )"	126:2:3307:3336	1045927	7	True				
ANR	1045983	AssignmentExpression	"_subsys = strnewp ( ""SCHEDD"" )"		1045927	0		=			
ANR	1045984	Identifier	_subsys		1045927	0					
ANR	1045985	CallExpression	"strnewp ( ""SCHEDD"" )"		1045927	1					
ANR	1045986	Callee	strnewp		1045927	0					
ANR	1045987	Identifier	strnewp		1045927	0					
ANR	1045988	ArgumentList	"""SCHEDD"""		1045927	1					
ANR	1045989	Argument	"""SCHEDD"""		1045927	0					
ANR	1045990	PrimaryExpression	"""SCHEDD"""		1045927	0					
ANR	1045991	BreakStatement	break ;	127:2:3340:3345	1045927	8	True				
ANR	1045992	Label	case DT_CLUSTER :	128:1:3348:3363	1045927	9	True				
ANR	1045993	Identifier	DT_CLUSTER		1045927	0					
ANR	1045994	ExpressionStatement	"_subsys = strnewp ( ""CLUSTERD"" )"	129:2:3367:3398	1045927	10	True				
ANR	1045995	AssignmentExpression	"_subsys = strnewp ( ""CLUSTERD"" )"		1045927	0		=			
ANR	1045996	Identifier	_subsys		1045927	0					
ANR	1045997	CallExpression	"strnewp ( ""CLUSTERD"" )"		1045927	1					
ANR	1045998	Callee	strnewp		1045927	0					
ANR	1045999	Identifier	strnewp		1045927	0					
ANR	1046000	ArgumentList	"""CLUSTERD"""		1045927	1					
ANR	1046001	Argument	"""CLUSTERD"""		1045927	0					
ANR	1046002	PrimaryExpression	"""CLUSTERD"""		1045927	0					
ANR	1046003	BreakStatement	break ;	130:2:3402:3407	1045927	11	True				
ANR	1046004	Label	case DT_COLLECTOR :	131:1:3410:3427	1045927	12	True				
ANR	1046005	Identifier	DT_COLLECTOR		1045927	0					
ANR	1046006	ExpressionStatement	"_subsys = strnewp ( ""COLLECTOR"" )"	132:2:3431:3463	1045927	13	True				
ANR	1046007	AssignmentExpression	"_subsys = strnewp ( ""COLLECTOR"" )"		1045927	0		=			
ANR	1046008	Identifier	_subsys		1045927	0					
ANR	1046009	CallExpression	"strnewp ( ""COLLECTOR"" )"		1045927	1					
ANR	1046010	Callee	strnewp		1045927	0					
ANR	1046011	Identifier	strnewp		1045927	0					
ANR	1046012	ArgumentList	"""COLLECTOR"""		1045927	1					
ANR	1046013	Argument	"""COLLECTOR"""		1045927	0					
ANR	1046014	PrimaryExpression	"""COLLECTOR"""		1045927	0					
ANR	1046015	BreakStatement	break ;	133:2:3467:3472	1045927	14	True				
ANR	1046016	Label	case DT_NEGOTIATOR :	134:1:3475:3493	1045927	15	True				
ANR	1046017	Identifier	DT_NEGOTIATOR		1045927	0					
ANR	1046018	ExpressionStatement	"_subsys = strnewp ( ""NEGOTIATOR"" )"	135:2:3497:3530	1045927	16	True				
ANR	1046019	AssignmentExpression	"_subsys = strnewp ( ""NEGOTIATOR"" )"		1045927	0		=			
ANR	1046020	Identifier	_subsys		1045927	0					
ANR	1046021	CallExpression	"strnewp ( ""NEGOTIATOR"" )"		1045927	1					
ANR	1046022	Callee	strnewp		1045927	0					
ANR	1046023	Identifier	strnewp		1045927	0					
ANR	1046024	ArgumentList	"""NEGOTIATOR"""		1045927	1					
ANR	1046025	Argument	"""NEGOTIATOR"""		1045927	0					
ANR	1046026	PrimaryExpression	"""NEGOTIATOR"""		1045927	0					
ANR	1046027	BreakStatement	break ;	136:2:3534:3539	1045927	17	True				
ANR	1046028	Label	case DT_CREDD :	137:1:3542:3555	1045927	18	True				
ANR	1046029	Identifier	DT_CREDD		1045927	0					
ANR	1046030	ExpressionStatement	"_subsys = strnewp ( ""CREDD"" )"	138:2:3559:3587	1045927	19	True				
ANR	1046031	AssignmentExpression	"_subsys = strnewp ( ""CREDD"" )"		1045927	0		=			
ANR	1046032	Identifier	_subsys		1045927	0					
ANR	1046033	CallExpression	"strnewp ( ""CREDD"" )"		1045927	1					
ANR	1046034	Callee	strnewp		1045927	0					
ANR	1046035	Identifier	strnewp		1045927	0					
ANR	1046036	ArgumentList	"""CREDD"""		1045927	1					
ANR	1046037	Argument	"""CREDD"""		1045927	0					
ANR	1046038	PrimaryExpression	"""CREDD"""		1045927	0					
ANR	1046039	BreakStatement	break ;	139:2:3591:3596	1045927	20	True				
ANR	1046040	Label	case DT_QUILL :	140:1:3599:3612	1045927	21	True				
ANR	1046041	Identifier	DT_QUILL		1045927	0					
ANR	1046042	ExpressionStatement	"_subsys = strnewp ( ""QUILL"" )"	141:2:3616:3644	1045927	22	True				
ANR	1046043	AssignmentExpression	"_subsys = strnewp ( ""QUILL"" )"		1045927	0		=			
ANR	1046044	Identifier	_subsys		1045927	0					
ANR	1046045	CallExpression	"strnewp ( ""QUILL"" )"		1045927	1					
ANR	1046046	Callee	strnewp		1045927	0					
ANR	1046047	Identifier	strnewp		1045927	0					
ANR	1046048	ArgumentList	"""QUILL"""		1045927	1					
ANR	1046049	Argument	"""QUILL"""		1045927	0					
ANR	1046050	PrimaryExpression	"""QUILL"""		1045927	0					
ANR	1046051	BreakStatement	break ;	142:2:3648:3653	1045927	23	True				
ANR	1046052	Label	case DT_LEASE_MANAGER :	143:1:3656:3677	1045927	24	True				
ANR	1046053	Identifier	DT_LEASE_MANAGER		1045927	0					
ANR	1046054	ExpressionStatement	"_subsys = strnewp ( ""LEASE_MANAGER"" )"	144:2:3681:3717	1045927	25	True				
ANR	1046055	AssignmentExpression	"_subsys = strnewp ( ""LEASE_MANAGER"" )"		1045927	0		=			
ANR	1046056	Identifier	_subsys		1045927	0					
ANR	1046057	CallExpression	"strnewp ( ""LEASE_MANAGER"" )"		1045927	1					
ANR	1046058	Callee	strnewp		1045927	0					
ANR	1046059	Identifier	strnewp		1045927	0					
ANR	1046060	ArgumentList	"""LEASE_MANAGER"""		1045927	1					
ANR	1046061	Argument	"""LEASE_MANAGER"""		1045927	0					
ANR	1046062	PrimaryExpression	"""LEASE_MANAGER"""		1045927	0					
ANR	1046063	BreakStatement	break ;	145:2:3721:3726	1045927	26	True				
ANR	1046064	Label	case DT_GENERIC :	146:1:3729:3744	1045927	27	True				
ANR	1046065	Identifier	DT_GENERIC		1045927	0					
ANR	1046066	ExpressionStatement	"_subsys = strnewp ( ""GENERIC"" )"	147:2:3748:3778	1045927	28	True				
ANR	1046067	AssignmentExpression	"_subsys = strnewp ( ""GENERIC"" )"		1045927	0		=			
ANR	1046068	Identifier	_subsys		1045927	0					
ANR	1046069	CallExpression	"strnewp ( ""GENERIC"" )"		1045927	1					
ANR	1046070	Callee	strnewp		1045927	0					
ANR	1046071	Identifier	strnewp		1045927	0					
ANR	1046072	ArgumentList	"""GENERIC"""		1045927	1					
ANR	1046073	Argument	"""GENERIC"""		1045927	0					
ANR	1046074	PrimaryExpression	"""GENERIC"""		1045927	0					
ANR	1046075	BreakStatement	break ;	148:2:3782:3787	1045927	29	True				
ANR	1046076	Label	case DT_HAD :	149:1:3790:3801	1045927	30	True				
ANR	1046077	Identifier	DT_HAD		1045927	0					
ANR	1046078	ExpressionStatement	"_subsys = strnewp ( ""HAD"" )"	150:2:3805:3831	1045927	31	True				
ANR	1046079	AssignmentExpression	"_subsys = strnewp ( ""HAD"" )"		1045927	0		=			
ANR	1046080	Identifier	_subsys		1045927	0					
ANR	1046081	CallExpression	"strnewp ( ""HAD"" )"		1045927	1					
ANR	1046082	Callee	strnewp		1045927	0					
ANR	1046083	Identifier	strnewp		1045927	0					
ANR	1046084	ArgumentList	"""HAD"""		1045927	1					
ANR	1046085	Argument	"""HAD"""		1045927	0					
ANR	1046086	PrimaryExpression	"""HAD"""		1045927	0					
ANR	1046087	BreakStatement	break ;	151:2:3835:3840	1045927	32	True				
ANR	1046088	Label	default :	152:1:3843:3850	1045927	33	True				
ANR	1046089	Identifier	default		1045927	0					
ANR	1046090	Statement	EXCEPT	153:2:3854:3859	1045927	34	True				
ANR	1046091	Statement	(	153:8:3860:3860	1045927	35	True				
ANR	1046092	Statement	"""Invalid daemon_type %d (%s) in ClassAd version of """	153:10:3862:3913	1045927	36	True				
ANR	1046093	Statement	"""Daemon object"""	154:4:3919:3933	1045927	37	True				
ANR	1046094	Statement	","	154:19:3934:3934	1045927	38	True				
ANR	1046095	Statement	(	154:21:3936:3936	1045927	39	True				
ANR	1046096	Statement	int	154:22:3937:3939	1045927	40	True				
ANR	1046097	Statement	)	154:25:3940:3940	1045927	41	True				
ANR	1046098	Statement	_type	154:26:3941:3945	1045927	42	True				
ANR	1046099	Statement	","	154:31:3946:3946	1045927	43	True				
ANR	1046100	Statement	daemonString	154:33:3948:3959	1045927	44	True				
ANR	1046101	Statement	(	154:45:3960:3960	1045927	45	True				
ANR	1046102	Statement	_type	154:46:3961:3965	1045927	46	True				
ANR	1046103	Statement	)	154:51:3966:3966	1045927	47	True				
ANR	1046104	Statement	)	154:53:3968:3968	1045927	48	True				
ANR	1046105	ExpressionStatement		154:54:3969:3969	1045927	49	True				
ANR	1046106	IfStatement	if ( tPool )		1045927	4					
ANR	1046107	Condition	tPool	157:5:3980:3984	1045927	0	True				
ANR	1046108	Identifier	tPool		1045927	0					
ANR	1046109	CompoundStatement		48:13:950:950	1045927	1					
ANR	1046110	ExpressionStatement	_pool = strnewp ( tPool )	158:2:3992:4016	1045927	0	True				
ANR	1046111	AssignmentExpression	_pool = strnewp ( tPool )		1045927	0		=			
ANR	1046112	Identifier	_pool		1045927	0					
ANR	1046113	CallExpression	strnewp ( tPool )		1045927	1					
ANR	1046114	Callee	strnewp		1045927	0					
ANR	1046115	Identifier	strnewp		1045927	0					
ANR	1046116	ArgumentList	tPool		1045927	1					
ANR	1046117	Argument	tPool		1045927	0					
ANR	1046118	Identifier	tPool		1045927	0					
ANR	1046119	ElseStatement	else		1045927	0					
ANR	1046120	CompoundStatement		50:8:988:988	1045927	0					
ANR	1046121	ExpressionStatement	_pool = NULL	160:2:4030:4042	1045927	0	True				
ANR	1046122	AssignmentExpression	_pool = NULL		1045927	0		=			
ANR	1046123	Identifier	_pool		1045927	0					
ANR	1046124	Identifier	NULL		1045927	1					
ANR	1046125	ExpressionStatement	getInfoFromAd ( tAd )	163:1:4049:4069	1045927	5	True				
ANR	1046126	CallExpression	getInfoFromAd ( tAd )		1045927	0					
ANR	1046127	Callee	getInfoFromAd		1045927	0					
ANR	1046128	Identifier	getInfoFromAd		1045927	0					
ANR	1046129	ArgumentList	tAd		1045927	1					
ANR	1046130	Argument	tAd		1045927	0					
ANR	1046131	Identifier	tAd		1045927	0					
ANR	1046132	Statement	dprintf	165:1:4073:4079	1045927	6	True				
ANR	1046133	Statement	(	165:8:4080:4080	1045927	7	True				
ANR	1046134	Statement	D_HOSTNAME	165:10:4082:4091	1045927	8	True				
ANR	1046135	Statement	","	165:20:4092:4092	1045927	9	True				
ANR	1046136	Statement	"""New Daemon obj (%s) name: \\""%s\\"", pool: """	165:22:4094:4135	1045927	10	True				
ANR	1046137	Statement	"""\\""%s\\"", addr: \\""%s\\""\\n"""	166:4:4141:4164	1045927	11	True				
ANR	1046138	Statement	","	166:28:4165:4165	1045927	12	True				
ANR	1046139	Statement	daemonString	166:30:4167:4178	1045927	13	True				
ANR	1046140	Statement	(	166:42:4179:4179	1045927	14	True				
ANR	1046141	Statement	_type	166:43:4180:4184	1045927	15	True				
ANR	1046142	Statement	)	166:48:4185:4185	1045927	16	True				
ANR	1046143	Statement	","	166:49:4186:4186	1045927	17	True				
ANR	1046144	Statement	_name	167:4:4193:4197	1045927	18	True				
ANR	1046145	Statement	?	167:10:4199:4199	1045927	19	True				
ANR	1046146	Label	_name :	167:12:4201:4207	1045927	20	True				
ANR	1046147	Identifier	_name		1045927	0					
ANR	1046148	Statement	"""NULL"""	167:20:4209:4214	1045927	21	True				
ANR	1046149	Statement	","	167:26:4215:4215	1045927	22	True				
ANR	1046150	Statement	_pool	167:28:4217:4221	1045927	23	True				
ANR	1046151	Statement	?	167:34:4223:4223	1045927	24	True				
ANR	1046152	Label	_pool :	167:36:4225:4231	1045927	25	True				
ANR	1046153	Identifier	_pool		1045927	0					
ANR	1046154	Statement	"""NULL"""	167:44:4233:4238	1045927	26	True				
ANR	1046155	Statement	","	167:50:4239:4239	1045927	27	True				
ANR	1046156	Statement	_addr	168:4:4245:4249	1045927	28	True				
ANR	1046157	Statement	?	168:10:4251:4251	1045927	29	True				
ANR	1046158	Label	_addr :	168:12:4253:4259	1045927	30	True				
ANR	1046159	Identifier	_addr		1045927	0					
ANR	1046160	Statement	"""NULL"""	168:20:4261:4266	1045927	31	True				
ANR	1046161	Statement	)	168:27:4268:4268	1045927	32	True				
ANR	1046162	ExpressionStatement		168:28:4269:4269	1045927	33	True				
ANR	1046163	ExpressionStatement	m_daemon_ad_ptr = new ClassAd ( * tAd )	171:1:4334:4369	1045927	34	True				
ANR	1046164	AssignmentExpression	m_daemon_ad_ptr = new ClassAd ( * tAd )		1045927	0		=			
ANR	1046165	Identifier	m_daemon_ad_ptr		1045927	0					
ANR	1046166	UnaryOperationExpression	* tAd		1045927	1					
ANR	1046167	UnaryOperator	*		1045927	0					
ANR	1046168	Identifier	tAd		1045927	1					
ANR	1046169	Identifier	Daemon :: Daemon		1045927	1					
ANR	1046170	ParameterList	"const ClassAd * tAd , daemon_t tType , const char * tPool"		1045927	2					
ANR	1046171	Parameter	const ClassAd * tAd	109:16:2980:2997	1045927	0	True				
ANR	1046172	ParameterType	const ClassAd *		1045927	0					
ANR	1046173	Identifier	tAd		1045927	1					
ANR	1046174	Parameter	daemon_t tType	109:36:3000:3013	1045927	1	True				
ANR	1046175	ParameterType	daemon_t		1045927	0					
ANR	1046176	Identifier	tType		1045927	1					
ANR	1046177	Parameter	const char * tPool	109:52:3016:3032	1045927	2	True				
ANR	1046178	ParameterType	const char *		1045927	0					
ANR	1046179	Identifier	tPool		1045927	1					
ANR	1046180	CFGEntryNode	ENTRY		1045927		True				
ANR	1046181	CFGExitNode	EXIT		1045927		True				
ANR	1046182	Symbol	_subsys		1045927						
ANR	1046183	Symbol	* tAd		1045927						
ANR	1046184	Symbol	m_daemon_ad_ptr		1045927						
ANR	1046185	Symbol	NULL		1045927						
ANR	1046186	Symbol	tType		1045927						
ANR	1046187	Symbol	_pool		1045927						
ANR	1046188	Symbol	tAd		1045927						
ANR	1046189	Symbol	tPool		1045927						
ANR	1046190	Symbol	_type		1045927						
ANR	1046191	Symbol	strnewp		1045927						
ANR	1046192	Function	Daemon :: Daemon	176:0:4377:4598							
ANR	1046193	FunctionDef	Daemon :: Daemon (const Daemon & copy)		1046192	0					
ANR	1046194	CompoundStatement		177:0:4434:4598	1046192	0					
ANR	1046195	ExpressionStatement	common_init ( )	180:1:4564:4577	1046192	0	True				
ANR	1046196	CallExpression	common_init ( )		1046192	0					
ANR	1046197	Callee	common_init		1046192	0					
ANR	1046198	Identifier	common_init		1046192	0					
ANR	1046199	ArgumentList			1046192	1					
ANR	1046200	ExpressionStatement	deepCopy ( copy )	181:1:4580:4596	1046192	1	True				
ANR	1046201	CallExpression	deepCopy ( copy )		1046192	0					
ANR	1046202	Callee	deepCopy		1046192	0					
ANR	1046203	Identifier	deepCopy		1046192	0					
ANR	1046204	ArgumentList	copy		1046192	1					
ANR	1046205	Argument	copy		1046192	0					
ANR	1046206	Identifier	copy		1046192	0					
ANR	1046207	Identifier	Daemon :: Daemon		1046192	1					
ANR	1046208	ParameterList	const Daemon & copy		1046192	2					
ANR	1046209	Parameter	const Daemon & copy	176:16:4393:4410	1046192	0	True				
ANR	1046210	ParameterType	const Daemon &		1046192	0					
ANR	1046211	Identifier	copy		1046192	1					
ANR	1046212	CFGEntryNode	ENTRY		1046192		True				
ANR	1046213	CFGExitNode	EXIT		1046192		True				
ANR	1046214	Symbol	copy		1046192						
ANR	1046215	Function	operator =	186:8:4619:4736							
ANR	1046216	FunctionDef	operator = (const Daemon & copy)		1046215	0					
ANR	1046217	CompoundStatement		187:0:4649:4736	1046215	0					
ANR	1046218	IfStatement	if ( & copy != this )		1046215	0					
ANR	1046219	Condition	& copy != this	189:5:4681:4693	1046215	0	True				
ANR	1046220	EqualityExpression	& copy != this		1046215	0		!=			
ANR	1046221	UnaryOperationExpression	& copy		1046215	0					
ANR	1046222	UnaryOperator	&		1046215	0					
ANR	1046223	Identifier	copy		1046215	1					
ANR	1046224	Identifier	this		1046215	1					
ANR	1046225	CompoundStatement		3:20:46:46	1046215	1					
ANR	1046226	ExpressionStatement	deepCopy ( copy )	190:2:4700:4716	1046215	0	True				
ANR	1046227	CallExpression	deepCopy ( copy )		1046215	0					
ANR	1046228	Callee	deepCopy		1046215	0					
ANR	1046229	Identifier	deepCopy		1046215	0					
ANR	1046230	ArgumentList	copy		1046215	1					
ANR	1046231	Argument	copy		1046215	0					
ANR	1046232	Identifier	copy		1046215	0					
ANR	1046233	ReturnStatement	return * this ;	192:1:4722:4734	1046215	1	True				
ANR	1046234	UnaryOperationExpression	* this		1046215	0					
ANR	1046235	UnaryOperator	*		1046215	0					
ANR	1046236	Identifier	this		1046215	1					
ANR	1046237	Identifier	operator =		1046215	1					
ANR	1046238	ParameterList	const Daemon & copy		1046215	2					
ANR	1046239	Parameter	const Daemon & copy	186:18:4629:4646	1046215	0	True				
ANR	1046240	ParameterType	const Daemon &		1046215	0					
ANR	1046241	Identifier	copy		1046215	1					
ANR	1046242	CFGEntryNode	ENTRY		1046215		True				
ANR	1046243	CFGExitNode	EXIT		1046215		True				
ANR	1046244	Symbol	* this		1046215						
ANR	1046245	Symbol	& copy		1046215						
ANR	1046246	Symbol	this		1046215						
ANR	1046247	Symbol	copy		1046215						
ANR	1046248	Function	Daemon :: deepCopy	196:0:4740:6105							
ANR	1046249	FunctionDef	Daemon :: deepCopy (const Daemon & copy)		1046248	0					
ANR	1046250	CompoundStatement		198:0:4784:6105	1046248	0					
ANR	1046251	ExpressionStatement	New_name ( strnewp ( copy . _name ) )	202:1:4912:4943	1046248	0	True				
ANR	1046252	CallExpression	New_name ( strnewp ( copy . _name ) )		1046248	0					
ANR	1046253	Callee	New_name		1046248	0					
ANR	1046254	Identifier	New_name		1046248	0					
ANR	1046255	ArgumentList	strnewp ( copy . _name )		1046248	1					
ANR	1046256	Argument	strnewp ( copy . _name )		1046248	0					
ANR	1046257	CallExpression	strnewp ( copy . _name )		1046248	0					
ANR	1046258	Callee	strnewp		1046248	0					
ANR	1046259	Identifier	strnewp		1046248	0					
ANR	1046260	ArgumentList	copy . _name		1046248	1					
ANR	1046261	Argument	copy . _name		1046248	0					
ANR	1046262	MemberAccess	copy . _name		1046248	0					
ANR	1046263	Identifier	copy		1046248	0					
ANR	1046264	Identifier	_name		1046248	1					
ANR	1046265	ExpressionStatement	New_hostname ( strnewp ( copy . _hostname ) )	203:1:4946:4985	1046248	1	True				
ANR	1046266	CallExpression	New_hostname ( strnewp ( copy . _hostname ) )		1046248	0					
ANR	1046267	Callee	New_hostname		1046248	0					
ANR	1046268	Identifier	New_hostname		1046248	0					
ANR	1046269	ArgumentList	strnewp ( copy . _hostname )		1046248	1					
ANR	1046270	Argument	strnewp ( copy . _hostname )		1046248	0					
ANR	1046271	CallExpression	strnewp ( copy . _hostname )		1046248	0					
ANR	1046272	Callee	strnewp		1046248	0					
ANR	1046273	Identifier	strnewp		1046248	0					
ANR	1046274	ArgumentList	copy . _hostname		1046248	1					
ANR	1046275	Argument	copy . _hostname		1046248	0					
ANR	1046276	MemberAccess	copy . _hostname		1046248	0					
ANR	1046277	Identifier	copy		1046248	0					
ANR	1046278	Identifier	_hostname		1046248	1					
ANR	1046279	ExpressionStatement	New_full_hostname ( strnewp ( copy . _full_hostname ) )	204:1:4988:5037	1046248	2	True				
ANR	1046280	CallExpression	New_full_hostname ( strnewp ( copy . _full_hostname ) )		1046248	0					
ANR	1046281	Callee	New_full_hostname		1046248	0					
ANR	1046282	Identifier	New_full_hostname		1046248	0					
ANR	1046283	ArgumentList	strnewp ( copy . _full_hostname )		1046248	1					
ANR	1046284	Argument	strnewp ( copy . _full_hostname )		1046248	0					
ANR	1046285	CallExpression	strnewp ( copy . _full_hostname )		1046248	0					
ANR	1046286	Callee	strnewp		1046248	0					
ANR	1046287	Identifier	strnewp		1046248	0					
ANR	1046288	ArgumentList	copy . _full_hostname		1046248	1					
ANR	1046289	Argument	copy . _full_hostname		1046248	0					
ANR	1046290	MemberAccess	copy . _full_hostname		1046248	0					
ANR	1046291	Identifier	copy		1046248	0					
ANR	1046292	Identifier	_full_hostname		1046248	1					
ANR	1046293	ExpressionStatement	New_addr ( strnewp ( copy . _addr ) )	205:1:5040:5071	1046248	3	True				
ANR	1046294	CallExpression	New_addr ( strnewp ( copy . _addr ) )		1046248	0					
ANR	1046295	Callee	New_addr		1046248	0					
ANR	1046296	Identifier	New_addr		1046248	0					
ANR	1046297	ArgumentList	strnewp ( copy . _addr )		1046248	1					
ANR	1046298	Argument	strnewp ( copy . _addr )		1046248	0					
ANR	1046299	CallExpression	strnewp ( copy . _addr )		1046248	0					
ANR	1046300	Callee	strnewp		1046248	0					
ANR	1046301	Identifier	strnewp		1046248	0					
ANR	1046302	ArgumentList	copy . _addr		1046248	1					
ANR	1046303	Argument	copy . _addr		1046248	0					
ANR	1046304	MemberAccess	copy . _addr		1046248	0					
ANR	1046305	Identifier	copy		1046248	0					
ANR	1046306	Identifier	_addr		1046248	1					
ANR	1046307	ExpressionStatement	New_version ( strnewp ( copy . _version ) )	206:1:5074:5111	1046248	4	True				
ANR	1046308	CallExpression	New_version ( strnewp ( copy . _version ) )		1046248	0					
ANR	1046309	Callee	New_version		1046248	0					
ANR	1046310	Identifier	New_version		1046248	0					
ANR	1046311	ArgumentList	strnewp ( copy . _version )		1046248	1					
ANR	1046312	Argument	strnewp ( copy . _version )		1046248	0					
ANR	1046313	CallExpression	strnewp ( copy . _version )		1046248	0					
ANR	1046314	Callee	strnewp		1046248	0					
ANR	1046315	Identifier	strnewp		1046248	0					
ANR	1046316	ArgumentList	copy . _version		1046248	1					
ANR	1046317	Argument	copy . _version		1046248	0					
ANR	1046318	MemberAccess	copy . _version		1046248	0					
ANR	1046319	Identifier	copy		1046248	0					
ANR	1046320	Identifier	_version		1046248	1					
ANR	1046321	ExpressionStatement	New_platform ( strnewp ( copy . _platform ) )	207:1:5114:5153	1046248	5	True				
ANR	1046322	CallExpression	New_platform ( strnewp ( copy . _platform ) )		1046248	0					
ANR	1046323	Callee	New_platform		1046248	0					
ANR	1046324	Identifier	New_platform		1046248	0					
ANR	1046325	ArgumentList	strnewp ( copy . _platform )		1046248	1					
ANR	1046326	Argument	strnewp ( copy . _platform )		1046248	0					
ANR	1046327	CallExpression	strnewp ( copy . _platform )		1046248	0					
ANR	1046328	Callee	strnewp		1046248	0					
ANR	1046329	Identifier	strnewp		1046248	0					
ANR	1046330	ArgumentList	copy . _platform		1046248	1					
ANR	1046331	Argument	copy . _platform		1046248	0					
ANR	1046332	MemberAccess	copy . _platform		1046248	0					
ANR	1046333	Identifier	copy		1046248	0					
ANR	1046334	Identifier	_platform		1046248	1					
ANR	1046335	ExpressionStatement	New_pool ( strnewp ( copy . _pool ) )	208:1:5156:5187	1046248	6	True				
ANR	1046336	CallExpression	New_pool ( strnewp ( copy . _pool ) )		1046248	0					
ANR	1046337	Callee	New_pool		1046248	0					
ANR	1046338	Identifier	New_pool		1046248	0					
ANR	1046339	ArgumentList	strnewp ( copy . _pool )		1046248	1					
ANR	1046340	Argument	strnewp ( copy . _pool )		1046248	0					
ANR	1046341	CallExpression	strnewp ( copy . _pool )		1046248	0					
ANR	1046342	Callee	strnewp		1046248	0					
ANR	1046343	Identifier	strnewp		1046248	0					
ANR	1046344	ArgumentList	copy . _pool		1046248	1					
ANR	1046345	Argument	copy . _pool		1046248	0					
ANR	1046346	MemberAccess	copy . _pool		1046248	0					
ANR	1046347	Identifier	copy		1046248	0					
ANR	1046348	Identifier	_pool		1046248	1					
ANR	1046349	IfStatement	if ( copy . _error )		1046248	7					
ANR	1046350	Condition	copy . _error	210:5:5195:5205	1046248	0	True				
ANR	1046351	MemberAccess	copy . _error		1046248	0					
ANR	1046352	Identifier	copy		1046248	0					
ANR	1046353	Identifier	_error		1046248	1					
ANR	1046354	CompoundStatement		13:19:424:424	1046248	1					
ANR	1046355	ExpressionStatement	"newError ( copy . _error_code , copy . _error )"	211:2:5213:5254	1046248	0	True				
ANR	1046356	CallExpression	"newError ( copy . _error_code , copy . _error )"		1046248	0					
ANR	1046357	Callee	newError		1046248	0					
ANR	1046358	Identifier	newError		1046248	0					
ANR	1046359	ArgumentList	copy . _error_code		1046248	1					
ANR	1046360	Argument	copy . _error_code		1046248	0					
ANR	1046361	MemberAccess	copy . _error_code		1046248	0					
ANR	1046362	Identifier	copy		1046248	0					
ANR	1046363	Identifier	_error_code		1046248	1					
ANR	1046364	Argument	copy . _error		1046248	1					
ANR	1046365	MemberAccess	copy . _error		1046248	0					
ANR	1046366	Identifier	copy		1046248	0					
ANR	1046367	Identifier	_error		1046248	1					
ANR	1046368	ElseStatement	else		1046248	0					
ANR	1046369	CompoundStatement		15:8:479:479	1046248	0					
ANR	1046370	IfStatement	if ( _error )		1046248	0					
ANR	1046371	Condition	_error	213:6:5272:5277	1046248	0	True				
ANR	1046372	Identifier	_error		1046248	0					
ANR	1046373	CompoundStatement		16:15:496:496	1046248	1					
ANR	1046374	Statement	delete	214:3:5287:5292	1046248	0	True				
ANR	1046375	Statement	[	214:10:5294:5294	1046248	1	True				
ANR	1046376	Statement	]	214:11:5295:5295	1046248	2	True				
ANR	1046377	ExpressionStatement	_error	214:13:5297:5303	1046248	3	True				
ANR	1046378	Identifier	_error		1046248	0					
ANR	1046379	ExpressionStatement	_error = NULL	215:3:5308:5321	1046248	4	True				
ANR	1046380	AssignmentExpression	_error = NULL		1046248	0		=			
ANR	1046381	Identifier	_error		1046248	0					
ANR	1046382	Identifier	NULL		1046248	1					
ANR	1046383	ExpressionStatement	_error_code = copy . _error_code	217:2:5329:5359	1046248	1	True				
ANR	1046384	AssignmentExpression	_error_code = copy . _error_code		1046248	0		=			
ANR	1046385	Identifier	_error_code		1046248	0					
ANR	1046386	MemberAccess	copy . _error_code		1046248	1					
ANR	1046387	Identifier	copy		1046248	0					
ANR	1046388	Identifier	_error_code		1046248	1					
ANR	1046389	IfStatement	if ( _id_str )		1046248	8					
ANR	1046390	Condition	_id_str	220:5:5370:5376	1046248	0	True				
ANR	1046391	Identifier	_id_str		1046248	0					
ANR	1046392	CompoundStatement		23:15:595:595	1046248	1					
ANR	1046393	Statement	delete	221:2:5384:5389	1046248	0	True				
ANR	1046394	Statement	[	221:9:5391:5391	1046248	1	True				
ANR	1046395	Statement	]	221:10:5392:5392	1046248	2	True				
ANR	1046396	ExpressionStatement	_id_str	221:12:5394:5401	1046248	3	True				
ANR	1046397	Identifier	_id_str		1046248	0					
ANR	1046398	ExpressionStatement	_id_str = strnewp ( copy . _id_str )	223:1:5407:5440	1046248	9	True				
ANR	1046399	AssignmentExpression	_id_str = strnewp ( copy . _id_str )		1046248	0		=			
ANR	1046400	Identifier	_id_str		1046248	0					
ANR	1046401	CallExpression	strnewp ( copy . _id_str )		1046248	1					
ANR	1046402	Callee	strnewp		1046248	0					
ANR	1046403	Identifier	strnewp		1046248	0					
ANR	1046404	ArgumentList	copy . _id_str		1046248	1					
ANR	1046405	Argument	copy . _id_str		1046248	0					
ANR	1046406	MemberAccess	copy . _id_str		1046248	0					
ANR	1046407	Identifier	copy		1046248	0					
ANR	1046408	Identifier	_id_str		1046248	1					
ANR	1046409	IfStatement	if ( _subsys )		1046248	10					
ANR	1046410	Condition	_subsys	225:5:5448:5454	1046248	0	True				
ANR	1046411	Identifier	_subsys		1046248	0					
ANR	1046412	CompoundStatement		28:15:673:673	1046248	1					
ANR	1046413	Statement	delete	226:2:5462:5467	1046248	0	True				
ANR	1046414	Statement	[	226:9:5469:5469	1046248	1	True				
ANR	1046415	Statement	]	226:10:5470:5470	1046248	2	True				
ANR	1046416	ExpressionStatement	_subsys	226:12:5472:5479	1046248	3	True				
ANR	1046417	Identifier	_subsys		1046248	0					
ANR	1046418	ExpressionStatement	_subsys = strnewp ( copy . _subsys )	228:1:5485:5518	1046248	11	True				
ANR	1046419	AssignmentExpression	_subsys = strnewp ( copy . _subsys )		1046248	0		=			
ANR	1046420	Identifier	_subsys		1046248	0					
ANR	1046421	CallExpression	strnewp ( copy . _subsys )		1046248	1					
ANR	1046422	Callee	strnewp		1046248	0					
ANR	1046423	Identifier	strnewp		1046248	0					
ANR	1046424	ArgumentList	copy . _subsys		1046248	1					
ANR	1046425	Argument	copy . _subsys		1046248	0					
ANR	1046426	MemberAccess	copy . _subsys		1046248	0					
ANR	1046427	Identifier	copy		1046248	0					
ANR	1046428	Identifier	_subsys		1046248	1					
ANR	1046429	ExpressionStatement	_port = copy . _port	230:1:5522:5540	1046248	12	True				
ANR	1046430	AssignmentExpression	_port = copy . _port		1046248	0		=			
ANR	1046431	Identifier	_port		1046248	0					
ANR	1046432	MemberAccess	copy . _port		1046248	1					
ANR	1046433	Identifier	copy		1046248	0					
ANR	1046434	Identifier	_port		1046248	1					
ANR	1046435	ExpressionStatement	_type = copy . _type	231:1:5543:5561	1046248	13	True				
ANR	1046436	AssignmentExpression	_type = copy . _type		1046248	0		=			
ANR	1046437	Identifier	_type		1046248	0					
ANR	1046438	MemberAccess	copy . _type		1046248	1					
ANR	1046439	Identifier	copy		1046248	0					
ANR	1046440	Identifier	_type		1046248	1					
ANR	1046441	ExpressionStatement	_is_local = copy . _is_local	232:1:5564:5590	1046248	14	True				
ANR	1046442	AssignmentExpression	_is_local = copy . _is_local		1046248	0		=			
ANR	1046443	Identifier	_is_local		1046248	0					
ANR	1046444	MemberAccess	copy . _is_local		1046248	1					
ANR	1046445	Identifier	copy		1046248	0					
ANR	1046446	Identifier	_is_local		1046248	1					
ANR	1046447	ExpressionStatement	_tried_locate = copy . _tried_locate	233:1:5593:5627	1046248	15	True				
ANR	1046448	AssignmentExpression	_tried_locate = copy . _tried_locate		1046248	0		=			
ANR	1046449	Identifier	_tried_locate		1046248	0					
ANR	1046450	MemberAccess	copy . _tried_locate		1046248	1					
ANR	1046451	Identifier	copy		1046248	0					
ANR	1046452	Identifier	_tried_locate		1046248	1					
ANR	1046453	ExpressionStatement	_tried_init_hostname = copy . _tried_init_hostname	234:1:5630:5678	1046248	16	True				
ANR	1046454	AssignmentExpression	_tried_init_hostname = copy . _tried_init_hostname		1046248	0		=			
ANR	1046455	Identifier	_tried_init_hostname		1046248	0					
ANR	1046456	MemberAccess	copy . _tried_init_hostname		1046248	1					
ANR	1046457	Identifier	copy		1046248	0					
ANR	1046458	Identifier	_tried_init_hostname		1046248	1					
ANR	1046459	ExpressionStatement	_tried_init_version = copy . _tried_init_version	235:1:5681:5727	1046248	17	True				
ANR	1046460	AssignmentExpression	_tried_init_version = copy . _tried_init_version		1046248	0		=			
ANR	1046461	Identifier	_tried_init_version		1046248	0					
ANR	1046462	MemberAccess	copy . _tried_init_version		1046248	1					
ANR	1046463	Identifier	copy		1046248	0					
ANR	1046464	Identifier	_tried_init_version		1046248	1					
ANR	1046465	ExpressionStatement	_is_configured = copy . _is_configured	236:1:5730:5766	1046248	18	True				
ANR	1046466	AssignmentExpression	_is_configured = copy . _is_configured		1046248	0		=			
ANR	1046467	Identifier	_is_configured		1046248	0					
ANR	1046468	MemberAccess	copy . _is_configured		1046248	1					
ANR	1046469	Identifier	copy		1046248	0					
ANR	1046470	Identifier	_is_configured		1046248	1					
ANR	1046471	IfStatement	if ( copy . m_daemon_ad_ptr )		1046248	19					
ANR	1046472	Condition	copy . m_daemon_ad_ptr	237:4:5772:5791	1046248	0	True				
ANR	1046473	MemberAccess	copy . m_daemon_ad_ptr		1046248	0					
ANR	1046474	Identifier	copy		1046248	0					
ANR	1046475	Identifier	m_daemon_ad_ptr		1046248	1					
ANR	1046476	CompoundStatement		40:26:1009:1009	1046248	1					
ANR	1046477	ExpressionStatement	m_daemon_ad_ptr = new ClassAd ( * copy . m_daemon_ad_ptr )	238:2:5798:5850	1046248	0	True				
ANR	1046478	AssignmentExpression	m_daemon_ad_ptr = new ClassAd ( * copy . m_daemon_ad_ptr )		1046248	0		=			
ANR	1046479	Identifier	m_daemon_ad_ptr		1046248	0					
ANR	1046480	UnaryOperationExpression	* copy . m_daemon_ad_ptr		1046248	1					
ANR	1046481	UnaryOperator	*		1046248	0					
ANR	1046482	MemberAccess	copy . m_daemon_ad_ptr		1046248	1					
ANR	1046483	Identifier	copy		1046248	0					
ANR	1046484	Identifier	m_daemon_ad_ptr		1046248	1					
ANR	1046485	ExpressionStatement	setCmdStr ( copy . _cmd_str )	247:1:6077:6103	1046248	20	True				
ANR	1046486	CallExpression	setCmdStr ( copy . _cmd_str )		1046248	0					
ANR	1046487	Callee	setCmdStr		1046248	0					
ANR	1046488	Identifier	setCmdStr		1046248	0					
ANR	1046489	ArgumentList	copy . _cmd_str		1046248	1					
ANR	1046490	Argument	copy . _cmd_str		1046248	0					
ANR	1046491	MemberAccess	copy . _cmd_str		1046248	0					
ANR	1046492	Identifier	copy		1046248	0					
ANR	1046493	Identifier	_cmd_str		1046248	1					
ANR	1046494	ReturnType	void		1046248	1					
ANR	1046495	Identifier	Daemon :: deepCopy		1046248	2					
ANR	1046496	ParameterList	const Daemon & copy		1046248	3					
ANR	1046497	Parameter	const Daemon & copy	197:18:4763:4780	1046248	0	True				
ANR	1046498	ParameterType	const Daemon &		1046248	0					
ANR	1046499	Identifier	copy		1046248	1					
ANR	1046500	CFGEntryNode	ENTRY		1046248		True				
ANR	1046501	CFGExitNode	EXIT		1046248		True				
ANR	1046502	Symbol	copy . _full_hostname		1046248						
ANR	1046503	Symbol	copy . _cmd_str		1046248						
ANR	1046504	Symbol	_port		1046248						
ANR	1046505	Symbol	m_daemon_ad_ptr		1046248						
ANR	1046506	Symbol	_tried_locate		1046248						
ANR	1046507	Symbol	copy . m_daemon_ad_ptr		1046248						
ANR	1046508	Symbol	strnewp		1046248						
ANR	1046509	Symbol	_is_local		1046248						
ANR	1046510	Symbol	copy		1046248						
ANR	1046511	Symbol	copy . _type		1046248						
ANR	1046512	Symbol	copy . _subsys		1046248						
ANR	1046513	Symbol	copy . _id_str		1046248						
ANR	1046514	Symbol	_subsys		1046248						
ANR	1046515	Symbol	_is_configured		1046248						
ANR	1046516	Symbol	NULL		1046248						
ANR	1046517	Symbol	copy . _tried_init_hostname		1046248						
ANR	1046518	Symbol	copy . _error		1046248						
ANR	1046519	Symbol	_id_str		1046248						
ANR	1046520	Symbol	copy . _port		1046248						
ANR	1046521	Symbol	_error		1046248						
ANR	1046522	Symbol	_type		1046248						
ANR	1046523	Symbol	copy . _platform		1046248						
ANR	1046524	Symbol	copy . _error_code		1046248						
ANR	1046525	Symbol	copy . _tried_locate		1046248						
ANR	1046526	Symbol	copy . _addr		1046248						
ANR	1046527	Symbol	_tried_init_hostname		1046248						
ANR	1046528	Symbol	copy . _name		1046248						
ANR	1046529	Symbol	* copy . m_daemon_ad_ptr		1046248						
ANR	1046530	Symbol	copy . _tried_init_version		1046248						
ANR	1046531	Symbol	copy . _is_local		1046248						
ANR	1046532	Symbol	_tried_init_version		1046248						
ANR	1046533	Symbol	copy . _hostname		1046248						
ANR	1046534	Symbol	* copy		1046248						
ANR	1046535	Symbol	copy . _is_configured		1046248						
ANR	1046536	Symbol	copy . _pool		1046248						
ANR	1046537	Symbol	copy . _version		1046248						
ANR	1046538	Symbol	_error_code		1046248						
ANR	1046539	Function	Daemon :: ~Daemon	251:0:6109:6756							
ANR	1046540	FunctionDef	Daemon :: ~Daemon ()		1046539	0					
ANR	1046541	CompoundStatement		252:0:6128:6756	1046539	0					
ANR	1046542	IfStatement	if ( DebugFlags & D_HOSTNAME )		1046539	0					
ANR	1046543	Condition	DebugFlags & D_HOSTNAME	253:5:6135:6157	1046539	0	True				
ANR	1046544	BitAndExpression	DebugFlags & D_HOSTNAME		1046539	0		&			
ANR	1046545	Identifier	DebugFlags		1046539	0					
ANR	1046546	Identifier	D_HOSTNAME		1046539	1					
ANR	1046547	CompoundStatement		2:31:32:32	1046539	1					
ANR	1046548	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Destroying Daemon object:\\n"" )"	254:2:6165:6217	1046539	0	True				
ANR	1046549	CallExpression	"dprintf ( D_HOSTNAME , ""Destroying Daemon object:\\n"" )"		1046539	0					
ANR	1046550	Callee	dprintf		1046539	0					
ANR	1046551	Identifier	dprintf		1046539	0					
ANR	1046552	ArgumentList	D_HOSTNAME		1046539	1					
ANR	1046553	Argument	D_HOSTNAME		1046539	0					
ANR	1046554	Identifier	D_HOSTNAME		1046539	0					
ANR	1046555	Argument	"""Destroying Daemon object:\\n"""		1046539	1					
ANR	1046556	PrimaryExpression	"""Destroying Daemon object:\\n"""		1046539	0					
ANR	1046557	ExpressionStatement	display ( D_HOSTNAME )	255:2:6221:6242	1046539	1	True				
ANR	1046558	CallExpression	display ( D_HOSTNAME )		1046539	0					
ANR	1046559	Callee	display		1046539	0					
ANR	1046560	Identifier	display		1046539	0					
ANR	1046561	ArgumentList	D_HOSTNAME		1046539	1					
ANR	1046562	Argument	D_HOSTNAME		1046539	0					
ANR	1046563	Identifier	D_HOSTNAME		1046539	0					
ANR	1046564	ExpressionStatement	"dprintf ( D_HOSTNAME , "" --- End of Daemon object info ---\\n"" )"	256:2:6246:6307	1046539	2	True				
ANR	1046565	CallExpression	"dprintf ( D_HOSTNAME , "" --- End of Daemon object info ---\\n"" )"		1046539	0					
ANR	1046566	Callee	dprintf		1046539	0					
ANR	1046567	Identifier	dprintf		1046539	0					
ANR	1046568	ArgumentList	D_HOSTNAME		1046539	1					
ANR	1046569	Argument	D_HOSTNAME		1046539	0					
ANR	1046570	Identifier	D_HOSTNAME		1046539	0					
ANR	1046571	Argument	""" --- End of Daemon object info ---\\n"""		1046539	1					
ANR	1046572	PrimaryExpression	""" --- End of Daemon object info ---\\n"""		1046539	0					
ANR	1046573	IfStatement	if ( _name )		1046539	1					
ANR	1046574	Condition	_name	258:5:6317:6321	1046539	0	True				
ANR	1046575	Identifier	_name		1046539	0					
ANR	1046576	Statement	delete	258:13:6325:6330	1046539	1	True				
ANR	1046577	Statement	[	258:20:6332:6332	1046539	2	True				
ANR	1046578	Statement	]	258:21:6333:6333	1046539	3	True				
ANR	1046579	ExpressionStatement	_name	258:23:6335:6340	1046539	4	True				
ANR	1046580	Identifier	_name		1046539	0					
ANR	1046581	IfStatement	if ( _pool )		1046539	5					
ANR	1046582	Condition	_pool	259:5:6347:6351	1046539	0	True				
ANR	1046583	Identifier	_pool		1046539	0					
ANR	1046584	Statement	delete	259:13:6355:6360	1046539	1	True				
ANR	1046585	Statement	[	259:20:6362:6362	1046539	6	True				
ANR	1046586	Statement	]	259:21:6363:6363	1046539	7	True				
ANR	1046587	ExpressionStatement	_pool	259:23:6365:6370	1046539	8	True				
ANR	1046588	Identifier	_pool		1046539	0					
ANR	1046589	IfStatement	if ( _addr )		1046539	9					
ANR	1046590	Condition	_addr	260:5:6377:6381	1046539	0	True				
ANR	1046591	Identifier	_addr		1046539	0					
ANR	1046592	Statement	delete	260:13:6385:6390	1046539	1	True				
ANR	1046593	Statement	[	260:20:6392:6392	1046539	10	True				
ANR	1046594	Statement	]	260:21:6393:6393	1046539	11	True				
ANR	1046595	ExpressionStatement	_addr	260:23:6395:6400	1046539	12	True				
ANR	1046596	Identifier	_addr		1046539	0					
ANR	1046597	IfStatement	if ( _error )		1046539	13					
ANR	1046598	Condition	_error	261:5:6407:6412	1046539	0	True				
ANR	1046599	Identifier	_error		1046539	0					
ANR	1046600	Statement	delete	261:14:6416:6421	1046539	1	True				
ANR	1046601	Statement	[	261:21:6423:6423	1046539	14	True				
ANR	1046602	Statement	]	261:22:6424:6424	1046539	15	True				
ANR	1046603	ExpressionStatement	_error	261:24:6426:6432	1046539	16	True				
ANR	1046604	Identifier	_error		1046539	0					
ANR	1046605	IfStatement	if ( _id_str )		1046539	17					
ANR	1046606	Condition	_id_str	262:5:6439:6445	1046539	0	True				
ANR	1046607	Identifier	_id_str		1046539	0					
ANR	1046608	Statement	delete	262:15:6449:6454	1046539	1	True				
ANR	1046609	Statement	[	262:22:6456:6456	1046539	18	True				
ANR	1046610	Statement	]	262:23:6457:6457	1046539	19	True				
ANR	1046611	ExpressionStatement	_id_str	262:25:6459:6466	1046539	20	True				
ANR	1046612	Identifier	_id_str		1046539	0					
ANR	1046613	IfStatement	if ( _subsys )		1046539	21					
ANR	1046614	Condition	_subsys	263:5:6473:6479	1046539	0	True				
ANR	1046615	Identifier	_subsys		1046539	0					
ANR	1046616	Statement	delete	263:15:6483:6488	1046539	1	True				
ANR	1046617	Statement	[	263:22:6490:6490	1046539	22	True				
ANR	1046618	Statement	]	263:23:6491:6491	1046539	23	True				
ANR	1046619	ExpressionStatement	_subsys	263:25:6493:6500	1046539	24	True				
ANR	1046620	Identifier	_subsys		1046539	0					
ANR	1046621	IfStatement	if ( _hostname )		1046539	25					
ANR	1046622	Condition	_hostname	264:5:6507:6515	1046539	0	True				
ANR	1046623	Identifier	_hostname		1046539	0					
ANR	1046624	Statement	delete	264:17:6519:6524	1046539	1	True				
ANR	1046625	Statement	[	264:24:6526:6526	1046539	26	True				
ANR	1046626	Statement	]	264:25:6527:6527	1046539	27	True				
ANR	1046627	ExpressionStatement	_hostname	264:27:6529:6538	1046539	28	True				
ANR	1046628	Identifier	_hostname		1046539	0					
ANR	1046629	IfStatement	if ( _full_hostname )		1046539	29					
ANR	1046630	Condition	_full_hostname	265:5:6545:6558	1046539	0	True				
ANR	1046631	Identifier	_full_hostname		1046539	0					
ANR	1046632	Statement	delete	265:22:6562:6567	1046539	1	True				
ANR	1046633	Statement	[	265:29:6569:6569	1046539	30	True				
ANR	1046634	Statement	]	265:30:6570:6570	1046539	31	True				
ANR	1046635	ExpressionStatement	_full_hostname	265:32:6572:6586	1046539	32	True				
ANR	1046636	Identifier	_full_hostname		1046539	0					
ANR	1046637	IfStatement	if ( _version )		1046539	33					
ANR	1046638	Condition	_version	266:5:6593:6600	1046539	0	True				
ANR	1046639	Identifier	_version		1046539	0					
ANR	1046640	Statement	delete	266:16:6604:6609	1046539	1	True				
ANR	1046641	Statement	[	266:23:6611:6611	1046539	34	True				
ANR	1046642	Statement	]	266:24:6612:6612	1046539	35	True				
ANR	1046643	ExpressionStatement	_version	266:26:6614:6622	1046539	36	True				
ANR	1046644	Identifier	_version		1046539	0					
ANR	1046645	IfStatement	if ( _platform )		1046539	37					
ANR	1046646	Condition	_platform	267:5:6629:6637	1046539	0	True				
ANR	1046647	Identifier	_platform		1046539	0					
ANR	1046648	CompoundStatement		16:17:512:512	1046539	1					
ANR	1046649	Statement	delete	267:19:6643:6648	1046539	0	True				
ANR	1046650	Statement	[	267:26:6650:6650	1046539	1	True				
ANR	1046651	Statement	]	267:27:6651:6651	1046539	2	True				
ANR	1046652	ExpressionStatement	_platform	267:29:6653:6662	1046539	3	True				
ANR	1046653	Identifier	_platform		1046539	0					
ANR	1046654	IfStatement	if ( _cmd_str )		1046539	38					
ANR	1046655	Condition	_cmd_str	268:5:6671:6678	1046539	0	True				
ANR	1046656	Identifier	_cmd_str		1046539	0					
ANR	1046657	CompoundStatement		17:16:553:553	1046539	1					
ANR	1046658	Statement	delete	268:18:6684:6689	1046539	0	True				
ANR	1046659	Statement	[	268:25:6691:6691	1046539	1	True				
ANR	1046660	Statement	]	268:26:6692:6692	1046539	2	True				
ANR	1046661	ExpressionStatement	_cmd_str	268:28:6694:6702	1046539	3	True				
ANR	1046662	Identifier	_cmd_str		1046539	0					
ANR	1046663	IfStatement	if ( m_daemon_ad_ptr )		1046539	39					
ANR	1046664	Condition	m_daemon_ad_ptr	269:5:6711:6725	1046539	0	True				
ANR	1046665	Identifier	m_daemon_ad_ptr		1046539	0					
ANR	1046666	CompoundStatement		18:22:599:599	1046539	1					
ANR	1046667	Statement	delete	269:24:6730:6735	1046539	0	True				
ANR	1046668	ExpressionStatement	m_daemon_ad_ptr	269:31:6737:6752	1046539	1	True				
ANR	1046669	Identifier	m_daemon_ad_ptr		1046539	0					
ANR	1046670	Identifier	Daemon :: ~Daemon		1046539	1					
ANR	1046671	ParameterList			1046539	2					
ANR	1046672	CFGEntryNode	ENTRY		1046539		True				
ANR	1046673	CFGExitNode	EXIT		1046539		True				
ANR	1046674	Symbol	D_HOSTNAME		1046539						
ANR	1046675	Symbol	_subsys		1046539						
ANR	1046676	Symbol	_name		1046539						
ANR	1046677	Symbol	_id_str		1046539						
ANR	1046678	Symbol	_error		1046539						
ANR	1046679	Symbol	DebugFlags		1046539						
ANR	1046680	Symbol	_cmd_str		1046539						
ANR	1046681	Symbol	_platform		1046539						
ANR	1046682	Symbol	m_daemon_ad_ptr		1046539						
ANR	1046683	Symbol	_pool		1046539						
ANR	1046684	Symbol	_hostname		1046539						
ANR	1046685	Symbol	_full_hostname		1046539						
ANR	1046686	Symbol	_addr		1046539						
ANR	1046687	Symbol	_version		1046539						
ANR	1046688	Function	Daemon :: name	277:0:6929:7005							
ANR	1046689	FunctionDef	Daemon :: name ()		1046688	0					
ANR	1046690	CompoundStatement		279:0:6956:7005	1046688	0					
ANR	1046691	IfStatement	if ( ! _name )		1046688	0					
ANR	1046692	Condition	! _name	280:5:6963:6969	1046688	0	True				
ANR	1046693	UnaryOperationExpression	! _name		1046688	0					
ANR	1046694	UnaryOperator	!		1046688	0					
ANR	1046695	Identifier	_name		1046688	1					
ANR	1046696	CompoundStatement		2:15:16:16	1046688	1					
ANR	1046697	ExpressionStatement	locate ( )	281:2:6977:6985	1046688	0	True				
ANR	1046698	CallExpression	locate ( )		1046688	0					
ANR	1046699	Callee	locate		1046688	0					
ANR	1046700	Identifier	locate		1046688	0					
ANR	1046701	ArgumentList			1046688	1					
ANR	1046702	ReturnStatement	return _name ;	283:1:6991:7003	1046688	1	True				
ANR	1046703	Identifier	_name		1046688	0					
ANR	1046704	ReturnType	char *		1046688	1					
ANR	1046705	Identifier	Daemon :: name		1046688	2					
ANR	1046706	ParameterList			1046688	3					
ANR	1046707	CFGEntryNode	ENTRY		1046688		True				
ANR	1046708	CFGExitNode	EXIT		1046688		True				
ANR	1046709	Symbol	_name		1046688						
ANR	1046710	Function	Daemon :: hostname	287:0:7009:7129							
ANR	1046711	FunctionDef	Daemon :: hostname ()		1046710	0					
ANR	1046712	CompoundStatement		289:0:7040:7129	1046710	0					
ANR	1046713	IfStatement	if ( ! _hostname && ! _tried_init_hostname )		1046710	0					
ANR	1046714	Condition	! _hostname && ! _tried_init_hostname	290:5:7047:7083	1046710	0	True				
ANR	1046715	AndExpression	! _hostname && ! _tried_init_hostname		1046710	0		&&			
ANR	1046716	UnaryOperationExpression	! _hostname		1046710	0					
ANR	1046717	UnaryOperator	!		1046710	0					
ANR	1046718	Identifier	_hostname		1046710	1					
ANR	1046719	UnaryOperationExpression	! _tried_init_hostname		1046710	1					
ANR	1046720	UnaryOperator	!		1046710	0					
ANR	1046721	Identifier	_tried_init_hostname		1046710	1					
ANR	1046722	CompoundStatement		2:45:46:46	1046710	1					
ANR	1046723	ExpressionStatement	initHostname ( )	291:2:7091:7105	1046710	0	True				
ANR	1046724	CallExpression	initHostname ( )		1046710	0					
ANR	1046725	Callee	initHostname		1046710	0					
ANR	1046726	Identifier	initHostname		1046710	0					
ANR	1046727	ArgumentList			1046710	1					
ANR	1046728	ReturnStatement	return _hostname ;	293:1:7111:7127	1046710	1	True				
ANR	1046729	Identifier	_hostname		1046710	0					
ANR	1046730	ReturnType	char *		1046710	1					
ANR	1046731	Identifier	Daemon :: hostname		1046710	2					
ANR	1046732	ParameterList			1046710	3					
ANR	1046733	CFGEntryNode	ENTRY		1046710		True				
ANR	1046734	CFGExitNode	EXIT		1046710		True				
ANR	1046735	Symbol	_hostname		1046710						
ANR	1046736	Symbol	_tried_init_hostname		1046710						
ANR	1046737	Function	Daemon :: version	297:0:7133:7248							
ANR	1046738	FunctionDef	Daemon :: version ()		1046737	0					
ANR	1046739	CompoundStatement		299:0:7163:7248	1046737	0					
ANR	1046740	IfStatement	if ( ! _version && ! _tried_init_version )		1046737	0					
ANR	1046741	Condition	! _version && ! _tried_init_version	300:5:7170:7204	1046737	0	True				
ANR	1046742	AndExpression	! _version && ! _tried_init_version		1046737	0		&&			
ANR	1046743	UnaryOperationExpression	! _version		1046737	0					
ANR	1046744	UnaryOperator	!		1046737	0					
ANR	1046745	Identifier	_version		1046737	1					
ANR	1046746	UnaryOperationExpression	! _tried_init_version		1046737	1					
ANR	1046747	UnaryOperator	!		1046737	0					
ANR	1046748	Identifier	_tried_init_version		1046737	1					
ANR	1046749	CompoundStatement		2:43:44:44	1046737	1					
ANR	1046750	ExpressionStatement	initVersion ( )	301:2:7212:7225	1046737	0	True				
ANR	1046751	CallExpression	initVersion ( )		1046737	0					
ANR	1046752	Callee	initVersion		1046737	0					
ANR	1046753	Identifier	initVersion		1046737	0					
ANR	1046754	ArgumentList			1046737	1					
ANR	1046755	ReturnStatement	return _version ;	303:1:7231:7246	1046737	1	True				
ANR	1046756	Identifier	_version		1046737	0					
ANR	1046757	ReturnType	char *		1046737	1					
ANR	1046758	Identifier	Daemon :: version		1046737	2					
ANR	1046759	ParameterList			1046737	3					
ANR	1046760	CFGEntryNode	ENTRY		1046737		True				
ANR	1046761	CFGExitNode	EXIT		1046737		True				
ANR	1046762	Symbol	_tried_init_version		1046737						
ANR	1046763	Symbol	_version		1046737						
ANR	1046764	Function	Daemon :: platform	307:0:7252:7370							
ANR	1046765	FunctionDef	Daemon :: platform ()		1046764	0					
ANR	1046766	CompoundStatement		309:0:7283:7370	1046764	0					
ANR	1046767	IfStatement	if ( ! _platform && ! _tried_init_version )		1046764	0					
ANR	1046768	Condition	! _platform && ! _tried_init_version	310:5:7290:7325	1046764	0	True				
ANR	1046769	AndExpression	! _platform && ! _tried_init_version		1046764	0		&&			
ANR	1046770	UnaryOperationExpression	! _platform		1046764	0					
ANR	1046771	UnaryOperator	!		1046764	0					
ANR	1046772	Identifier	_platform		1046764	1					
ANR	1046773	UnaryOperationExpression	! _tried_init_version		1046764	1					
ANR	1046774	UnaryOperator	!		1046764	0					
ANR	1046775	Identifier	_tried_init_version		1046764	1					
ANR	1046776	CompoundStatement		2:44:45:45	1046764	1					
ANR	1046777	ExpressionStatement	initVersion ( )	311:2:7333:7346	1046764	0	True				
ANR	1046778	CallExpression	initVersion ( )		1046764	0					
ANR	1046779	Callee	initVersion		1046764	0					
ANR	1046780	Identifier	initVersion		1046764	0					
ANR	1046781	ArgumentList			1046764	1					
ANR	1046782	ReturnStatement	return _platform ;	313:1:7352:7368	1046764	1	True				
ANR	1046783	Identifier	_platform		1046764	0					
ANR	1046784	ReturnType	char *		1046764	1					
ANR	1046785	Identifier	Daemon :: platform		1046764	2					
ANR	1046786	ParameterList			1046764	3					
ANR	1046787	CFGEntryNode	ENTRY		1046764		True				
ANR	1046788	CFGExitNode	EXIT		1046764		True				
ANR	1046789	Symbol	_platform		1046764						
ANR	1046790	Symbol	_tried_init_version		1046764						
ANR	1046791	Function	Daemon :: fullHostname	317:0:7374:7508							
ANR	1046792	FunctionDef	Daemon :: fullHostname ()		1046791	0					
ANR	1046793	CompoundStatement		319:0:7409:7508	1046791	0					
ANR	1046794	IfStatement	if ( ! _full_hostname && ! _tried_init_hostname )		1046791	0					
ANR	1046795	Condition	! _full_hostname && ! _tried_init_hostname	320:5:7416:7457	1046791	0	True				
ANR	1046796	AndExpression	! _full_hostname && ! _tried_init_hostname		1046791	0		&&			
ANR	1046797	UnaryOperationExpression	! _full_hostname		1046791	0					
ANR	1046798	UnaryOperator	!		1046791	0					
ANR	1046799	Identifier	_full_hostname		1046791	1					
ANR	1046800	UnaryOperationExpression	! _tried_init_hostname		1046791	1					
ANR	1046801	UnaryOperator	!		1046791	0					
ANR	1046802	Identifier	_tried_init_hostname		1046791	1					
ANR	1046803	CompoundStatement		2:50:51:51	1046791	1					
ANR	1046804	ExpressionStatement	initHostname ( )	321:2:7465:7479	1046791	0	True				
ANR	1046805	CallExpression	initHostname ( )		1046791	0					
ANR	1046806	Callee	initHostname		1046791	0					
ANR	1046807	Identifier	initHostname		1046791	0					
ANR	1046808	ArgumentList			1046791	1					
ANR	1046809	ReturnStatement	return _full_hostname ;	323:1:7485:7506	1046791	1	True				
ANR	1046810	Identifier	_full_hostname		1046791	0					
ANR	1046811	ReturnType	char *		1046791	1					
ANR	1046812	Identifier	Daemon :: fullHostname		1046791	2					
ANR	1046813	ParameterList			1046791	3					
ANR	1046814	CFGEntryNode	ENTRY		1046791		True				
ANR	1046815	CFGExitNode	EXIT		1046791		True				
ANR	1046816	Symbol	_full_hostname		1046791						
ANR	1046817	Symbol	_tried_init_hostname		1046791						
ANR	1046818	Function	Daemon :: addr	327:0:7512:7588							
ANR	1046819	FunctionDef	Daemon :: addr ()		1046818	0					
ANR	1046820	CompoundStatement		329:0:7539:7588	1046818	0					
ANR	1046821	IfStatement	if ( ! _addr )		1046818	0					
ANR	1046822	Condition	! _addr	330:5:7546:7552	1046818	0	True				
ANR	1046823	UnaryOperationExpression	! _addr		1046818	0					
ANR	1046824	UnaryOperator	!		1046818	0					
ANR	1046825	Identifier	_addr		1046818	1					
ANR	1046826	CompoundStatement		2:15:16:16	1046818	1					
ANR	1046827	ExpressionStatement	locate ( )	331:2:7560:7568	1046818	0	True				
ANR	1046828	CallExpression	locate ( )		1046818	0					
ANR	1046829	Callee	locate		1046818	0					
ANR	1046830	Identifier	locate		1046818	0					
ANR	1046831	ArgumentList			1046818	1					
ANR	1046832	ReturnStatement	return _addr ;	333:1:7574:7586	1046818	1	True				
ANR	1046833	Identifier	_addr		1046818	0					
ANR	1046834	ReturnType	char *		1046818	1					
ANR	1046835	Identifier	Daemon :: addr		1046818	2					
ANR	1046836	ParameterList			1046818	3					
ANR	1046837	CFGEntryNode	ENTRY		1046818		True				
ANR	1046838	CFGExitNode	EXIT		1046818		True				
ANR	1046839	Symbol	_addr		1046818						
ANR	1046840	Function	Daemon :: pool	337:0:7592:7668							
ANR	1046841	FunctionDef	Daemon :: pool ()		1046840	0					
ANR	1046842	CompoundStatement		339:0:7619:7668	1046840	0					
ANR	1046843	IfStatement	if ( ! _pool )		1046840	0					
ANR	1046844	Condition	! _pool	340:5:7626:7632	1046840	0	True				
ANR	1046845	UnaryOperationExpression	! _pool		1046840	0					
ANR	1046846	UnaryOperator	!		1046840	0					
ANR	1046847	Identifier	_pool		1046840	1					
ANR	1046848	CompoundStatement		2:15:16:16	1046840	1					
ANR	1046849	ExpressionStatement	locate ( )	341:2:7640:7648	1046840	0	True				
ANR	1046850	CallExpression	locate ( )		1046840	0					
ANR	1046851	Callee	locate		1046840	0					
ANR	1046852	Identifier	locate		1046840	0					
ANR	1046853	ArgumentList			1046840	1					
ANR	1046854	ReturnStatement	return _pool ;	343:1:7654:7666	1046840	1	True				
ANR	1046855	Identifier	_pool		1046840	0					
ANR	1046856	ReturnType	char *		1046840	1					
ANR	1046857	Identifier	Daemon :: pool		1046840	2					
ANR	1046858	ParameterList			1046840	3					
ANR	1046859	CFGEntryNode	ENTRY		1046840		True				
ANR	1046860	CFGExitNode	EXIT		1046840		True				
ANR	1046861	Symbol	_pool		1046840						
ANR	1046862	Function	Daemon :: port	347:0:7672:7748							
ANR	1046863	FunctionDef	Daemon :: port ()		1046862	0					
ANR	1046864	CompoundStatement		349:0:7697:7748	1046862	0					
ANR	1046865	IfStatement	if ( _port < 0 )		1046862	0					
ANR	1046866	Condition	_port < 0	350:5:7704:7712	1046862	0	True				
ANR	1046867	RelationalExpression	_port < 0		1046862	0		<			
ANR	1046868	Identifier	_port		1046862	0					
ANR	1046869	PrimaryExpression	0		1046862	1					
ANR	1046870	CompoundStatement		2:17:18:18	1046862	1					
ANR	1046871	ExpressionStatement	locate ( )	351:2:7720:7728	1046862	0	True				
ANR	1046872	CallExpression	locate ( )		1046862	0					
ANR	1046873	Callee	locate		1046862	0					
ANR	1046874	Identifier	locate		1046862	0					
ANR	1046875	ArgumentList			1046862	1					
ANR	1046876	ReturnStatement	return _port ;	353:1:7734:7746	1046862	1	True				
ANR	1046877	Identifier	_port		1046862	0					
ANR	1046878	ReturnType	int		1046862	1					
ANR	1046879	Identifier	Daemon :: port		1046862	2					
ANR	1046880	ParameterList			1046862	3					
ANR	1046881	CFGEntryNode	ENTRY		1046862		True				
ANR	1046882	CFGExitNode	EXIT		1046862		True				
ANR	1046883	Symbol	_port		1046862						
ANR	1046884	Function	Daemon :: idStr	357:0:7752:8555							
ANR	1046885	FunctionDef	Daemon :: idStr ()		1046884	0					
ANR	1046886	CompoundStatement		359:0:7786:8555	1046884	0					
ANR	1046887	IfStatement	if ( _id_str )		1046884	0					
ANR	1046888	Condition	_id_str	360:5:7793:7799	1046884	0	True				
ANR	1046889	Identifier	_id_str		1046884	0					
ANR	1046890	CompoundStatement		2:15:16:16	1046884	1					
ANR	1046891	ReturnStatement	return _id_str ;	361:2:7807:7821	1046884	0	True				
ANR	1046892	Identifier	_id_str		1046884	0					
ANR	1046893	ExpressionStatement	locate ( )	363:1:7827:7835	1046884	1	True				
ANR	1046894	CallExpression	locate ( )		1046884	0					
ANR	1046895	Callee	locate		1046884	0					
ANR	1046896	Identifier	locate		1046884	0					
ANR	1046897	ArgumentList			1046884	1					
ANR	1046898	IdentifierDeclStatement	const char * dt_str ;	365:1:7839:7857	1046884	2	True				
ANR	1046899	IdentifierDecl	* dt_str		1046884	0					
ANR	1046900	IdentifierDeclType	const char *		1046884	0					
ANR	1046901	Identifier	dt_str		1046884	1					
ANR	1046902	IfStatement	if ( _type == DT_ANY )		1046884	3					
ANR	1046903	Condition	_type == DT_ANY	366:5:7864:7878	1046884	0	True				
ANR	1046904	EqualityExpression	_type == DT_ANY		1046884	0		==			
ANR	1046905	Identifier	_type		1046884	0					
ANR	1046906	Identifier	DT_ANY		1046884	1					
ANR	1046907	CompoundStatement		8:23:95:95	1046884	1					
ANR	1046908	ExpressionStatement	"dt_str = ""daemon"""	367:2:7886:7903	1046884	0	True				
ANR	1046909	AssignmentExpression	"dt_str = ""daemon"""		1046884	0		=			
ANR	1046910	Identifier	dt_str		1046884	0					
ANR	1046911	PrimaryExpression	"""daemon"""		1046884	1					
ANR	1046912	ElseStatement	else		1046884	0					
ANR	1046913	IfStatement	if ( _type == DT_GENERIC )		1046884	0					
ANR	1046914	Condition	_type == DT_GENERIC	368:12:7917:7935	1046884	0	True				
ANR	1046915	EqualityExpression	_type == DT_GENERIC		1046884	0		==			
ANR	1046916	Identifier	_type		1046884	0					
ANR	1046917	Identifier	DT_GENERIC		1046884	1					
ANR	1046918	CompoundStatement		10:34:152:152	1046884	1					
ANR	1046919	ExpressionStatement	dt_str = _subsys	369:2:7943:7959	1046884	0	True				
ANR	1046920	AssignmentExpression	dt_str = _subsys		1046884	0		=			
ANR	1046921	Identifier	dt_str		1046884	0					
ANR	1046922	Identifier	_subsys		1046884	1					
ANR	1046923	ElseStatement	else		1046884	0					
ANR	1046924	CompoundStatement		12:8:182:182	1046884	0					
ANR	1046925	ExpressionStatement	dt_str = daemonString ( _type )	371:2:7973:8001	1046884	0	True				
ANR	1046926	AssignmentExpression	dt_str = daemonString ( _type )		1046884	0		=			
ANR	1046927	Identifier	dt_str		1046884	0					
ANR	1046928	CallExpression	daemonString ( _type )		1046884	1					
ANR	1046929	Callee	daemonString		1046884	0					
ANR	1046930	Identifier	daemonString		1046884	0					
ANR	1046931	ArgumentList	_type		1046884	1					
ANR	1046932	Argument	_type		1046884	0					
ANR	1046933	Identifier	_type		1046884	0					
ANR	1046934	IdentifierDeclStatement	MyString buf ;	373:1:8007:8019	1046884	4	True				
ANR	1046935	IdentifierDecl	buf		1046884	0					
ANR	1046936	IdentifierDeclType	MyString		1046884	0					
ANR	1046937	Identifier	buf		1046884	1					
ANR	1046938	IfStatement	if ( _is_local )		1046884	5					
ANR	1046939	Condition	_is_local	374:5:8026:8034	1046884	0	True				
ANR	1046940	Identifier	_is_local		1046884	0					
ANR	1046941	CompoundStatement		16:17:251:251	1046884	1					
ANR	1046942	ExpressionStatement	ASSERT ( dt_str )	375:2:8042:8058	1046884	0	True				
ANR	1046943	CallExpression	ASSERT ( dt_str )		1046884	0					
ANR	1046944	Callee	ASSERT		1046884	0					
ANR	1046945	Identifier	ASSERT		1046884	0					
ANR	1046946	ArgumentList	dt_str		1046884	1					
ANR	1046947	Argument	dt_str		1046884	0					
ANR	1046948	Identifier	dt_str		1046884	0					
ANR	1046949	ExpressionStatement	"buf . sprintf ( ""local %s"" , dt_str )"	376:2:8062:8095	1046884	1	True				
ANR	1046950	CallExpression	"buf . sprintf ( ""local %s"" , dt_str )"		1046884	0					
ANR	1046951	Callee	buf . sprintf		1046884	0					
ANR	1046952	MemberAccess	buf . sprintf		1046884	0					
ANR	1046953	Identifier	buf		1046884	0					
ANR	1046954	Identifier	sprintf		1046884	1					
ANR	1046955	ArgumentList	"""local %s"""		1046884	1					
ANR	1046956	Argument	"""local %s"""		1046884	0					
ANR	1046957	PrimaryExpression	"""local %s"""		1046884	0					
ANR	1046958	Argument	dt_str		1046884	1					
ANR	1046959	Identifier	dt_str		1046884	0					
ANR	1046960	ElseStatement	else		1046884	0					
ANR	1046961	IfStatement	if ( _name )		1046884	0					
ANR	1046962	Condition	_name	377:12:8109:8113	1046884	0	True				
ANR	1046963	Identifier	_name		1046884	0					
ANR	1046964	CompoundStatement		19:20:330:330	1046884	1					
ANR	1046965	ExpressionStatement	ASSERT ( dt_str )	378:2:8121:8137	1046884	0	True				
ANR	1046966	CallExpression	ASSERT ( dt_str )		1046884	0					
ANR	1046967	Callee	ASSERT		1046884	0					
ANR	1046968	Identifier	ASSERT		1046884	0					
ANR	1046969	ArgumentList	dt_str		1046884	1					
ANR	1046970	Argument	dt_str		1046884	0					
ANR	1046971	Identifier	dt_str		1046884	0					
ANR	1046972	ExpressionStatement	"buf . sprintf ( ""%s %s"" , dt_str , _name )"	379:2:8141:8178	1046884	1	True				
ANR	1046973	CallExpression	"buf . sprintf ( ""%s %s"" , dt_str , _name )"		1046884	0					
ANR	1046974	Callee	buf . sprintf		1046884	0					
ANR	1046975	MemberAccess	buf . sprintf		1046884	0					
ANR	1046976	Identifier	buf		1046884	0					
ANR	1046977	Identifier	sprintf		1046884	1					
ANR	1046978	ArgumentList	"""%s %s"""		1046884	1					
ANR	1046979	Argument	"""%s %s"""		1046884	0					
ANR	1046980	PrimaryExpression	"""%s %s"""		1046884	0					
ANR	1046981	Argument	dt_str		1046884	1					
ANR	1046982	Identifier	dt_str		1046884	0					
ANR	1046983	Argument	_name		1046884	2					
ANR	1046984	Identifier	_name		1046884	0					
ANR	1046985	ElseStatement	else		1046884	0					
ANR	1046986	IfStatement	if ( _addr )		1046884	0					
ANR	1046987	Condition	_addr	380:12:8192:8196	1046884	0	True				
ANR	1046988	Identifier	_addr		1046884	0					
ANR	1046989	CompoundStatement		24:2:437:457	1046884	1					
ANR	1046990	ExpressionStatement	ASSERT ( dt_str )	381:2:8204:8220	1046884	0	True				
ANR	1046991	CallExpression	ASSERT ( dt_str )		1046884	0					
ANR	1046992	Callee	ASSERT		1046884	0					
ANR	1046993	Identifier	ASSERT		1046884	0					
ANR	1046994	ArgumentList	dt_str		1046884	1					
ANR	1046995	Argument	dt_str		1046884	0					
ANR	1046996	Identifier	dt_str		1046884	0					
ANR	1046997	IdentifierDeclStatement	Sinful sinful ( _addr ) ;	382:2:8224:8244	1046884	1	True				
ANR	1046998	IdentifierDecl	sinful ( _addr )		1046884	0					
ANR	1046999	IdentifierDeclType	Sinful		1046884	0					
ANR	1047000	Identifier	sinful		1046884	1					
ANR	1047001	Identifier	_addr		1046884	2					
ANR	1047002	ExpressionStatement	sinful . clearParams ( )	383:2:8248:8268	1046884	2	True				
ANR	1047003	CallExpression	sinful . clearParams ( )		1046884	0					
ANR	1047004	Callee	sinful . clearParams		1046884	0					
ANR	1047005	MemberAccess	sinful . clearParams		1046884	0					
ANR	1047006	Identifier	sinful		1046884	0					
ANR	1047007	Identifier	clearParams		1046884	1					
ANR	1047008	ArgumentList			1046884	1					
ANR	1047009	ExpressionStatement	"buf . sprintf ( ""%s at %s"" , dt_str , sinful . getSinful ( ) ? sinful . getSinful ( ) : _addr )"	384:2:8297:8385	1046884	3	True				
ANR	1047010	CallExpression	"buf . sprintf ( ""%s at %s"" , dt_str , sinful . getSinful ( ) ? sinful . getSinful ( ) : _addr )"		1046884	0					
ANR	1047011	Callee	buf . sprintf		1046884	0					
ANR	1047012	MemberAccess	buf . sprintf		1046884	0					
ANR	1047013	Identifier	buf		1046884	0					
ANR	1047014	Identifier	sprintf		1046884	1					
ANR	1047015	ArgumentList	"""%s at %s"""		1046884	1					
ANR	1047016	Argument	"""%s at %s"""		1046884	0					
ANR	1047017	PrimaryExpression	"""%s at %s"""		1046884	0					
ANR	1047018	Argument	dt_str		1046884	1					
ANR	1047019	Identifier	dt_str		1046884	0					
ANR	1047020	Argument	sinful . getSinful ( ) ? sinful . getSinful ( ) : _addr		1046884	2					
ANR	1047021	ConditionalExpression	sinful . getSinful ( ) ? sinful . getSinful ( ) : _addr		1046884	0					
ANR	1047022	Condition	sinful . getSinful ( )		1046884	0					
ANR	1047023	CallExpression	sinful . getSinful ( )		1046884	0					
ANR	1047024	Callee	sinful . getSinful		1046884	0					
ANR	1047025	MemberAccess	sinful . getSinful		1046884	0					
ANR	1047026	Identifier	sinful		1046884	0					
ANR	1047027	Identifier	getSinful		1046884	1					
ANR	1047028	ArgumentList			1046884	1					
ANR	1047029	CallExpression	sinful . getSinful ( )		1046884	1					
ANR	1047030	Callee	sinful . getSinful		1046884	0					
ANR	1047031	MemberAccess	sinful . getSinful		1046884	0					
ANR	1047032	Identifier	sinful		1046884	0					
ANR	1047033	Identifier	getSinful		1046884	1					
ANR	1047034	ArgumentList			1046884	1					
ANR	1047035	Identifier	_addr		1046884	2					
ANR	1047036	IfStatement	if ( _full_hostname )		1046884	4					
ANR	1047037	Condition	_full_hostname	386:6:8393:8406	1046884	0	True				
ANR	1047038	Identifier	_full_hostname		1046884	0					
ANR	1047039	CompoundStatement		28:23:623:623	1046884	1					
ANR	1047040	ExpressionStatement	"buf . sprintf_cat ( "" (%s)"" , _full_hostname )"	387:3:8415:8457	1046884	0	True				
ANR	1047041	CallExpression	"buf . sprintf_cat ( "" (%s)"" , _full_hostname )"		1046884	0					
ANR	1047042	Callee	buf . sprintf_cat		1046884	0					
ANR	1047043	MemberAccess	buf . sprintf_cat		1046884	0					
ANR	1047044	Identifier	buf		1046884	0					
ANR	1047045	Identifier	sprintf_cat		1046884	1					
ANR	1047046	ArgumentList	""" (%s)"""		1046884	1					
ANR	1047047	Argument	""" (%s)"""		1046884	0					
ANR	1047048	PrimaryExpression	""" (%s)"""		1046884	0					
ANR	1047049	Argument	_full_hostname		1046884	1					
ANR	1047050	Identifier	_full_hostname		1046884	0					
ANR	1047051	ElseStatement	else		1046884	0					
ANR	1047052	CompoundStatement		31:8:684:684	1046884	0					
ANR	1047053	ReturnStatement	"return ""unknown daemon"" ;"	390:2:8475:8498	1046884	0	True				
ANR	1047054	PrimaryExpression	"""unknown daemon"""		1046884	0					
ANR	1047055	ExpressionStatement	_id_str = strnewp ( buf . Value ( ) )	392:1:8504:8536	1046884	6	True				
ANR	1047056	AssignmentExpression	_id_str = strnewp ( buf . Value ( ) )		1046884	0		=			
ANR	1047057	Identifier	_id_str		1046884	0					
ANR	1047058	CallExpression	strnewp ( buf . Value ( ) )		1046884	1					
ANR	1047059	Callee	strnewp		1046884	0					
ANR	1047060	Identifier	strnewp		1046884	0					
ANR	1047061	ArgumentList	buf . Value ( )		1046884	1					
ANR	1047062	Argument	buf . Value ( )		1046884	0					
ANR	1047063	CallExpression	buf . Value ( )		1046884	0					
ANR	1047064	Callee	buf . Value		1046884	0					
ANR	1047065	MemberAccess	buf . Value		1046884	0					
ANR	1047066	Identifier	buf		1046884	0					
ANR	1047067	Identifier	Value		1046884	1					
ANR	1047068	ArgumentList			1046884	1					
ANR	1047069	ReturnStatement	return _id_str ;	393:1:8539:8553	1046884	7	True				
ANR	1047070	Identifier	_id_str		1046884	0					
ANR	1047071	ReturnType	const char *		1046884	1					
ANR	1047072	Identifier	Daemon :: idStr		1046884	2					
ANR	1047073	ParameterList			1046884	3					
ANR	1047074	CFGEntryNode	ENTRY		1046884		True				
ANR	1047075	CFGExitNode	EXIT		1046884		True				
ANR	1047076	Symbol	_subsys		1046884						
ANR	1047077	Symbol	DT_GENERIC		1046884						
ANR	1047078	Symbol	_name		1046884						
ANR	1047079	Symbol	_id_str		1046884						
ANR	1047080	Symbol	daemonString		1046884						
ANR	1047081	Symbol	DT_ANY		1046884						
ANR	1047082	Symbol	_type		1046884						
ANR	1047083	Symbol	buf		1046884						
ANR	1047084	Symbol	sinful . getSinful		1046884						
ANR	1047085	Symbol	_full_hostname		1046884						
ANR	1047086	Symbol	dt_str		1046884						
ANR	1047087	Symbol	_addr		1046884						
ANR	1047088	Symbol	buf . Value		1046884						
ANR	1047089	Symbol	strnewp		1046884						
ANR	1047090	Symbol	_is_local		1046884						
ANR	1047091	Symbol	sinful		1046884						
ANR	1047092	Function	Daemon :: display	396:0:8558:9114							
ANR	1047093	FunctionDef	Daemon :: display (int debugflag)		1047092	0					
ANR	1047094	CompoundStatement		398:0:8597:9114	1047092	0					
ANR	1047095	ExpressionStatement	"dprintf ( debugflag , ""Type: %d (%s), Name: %s, Addr: %s\\n"" , ( int ) _type , daemonString ( _type ) , _name ? _name : ""(null)"" , _addr ? _addr : ""(null)"" )"	399:1:8600:8759	1047092	0	True				
ANR	1047096	CallExpression	"dprintf ( debugflag , ""Type: %d (%s), Name: %s, Addr: %s\\n"" , ( int ) _type , daemonString ( _type ) , _name ? _name : ""(null)"" , _addr ? _addr : ""(null)"" )"		1047092	0					
ANR	1047097	Callee	dprintf		1047092	0					
ANR	1047098	Identifier	dprintf		1047092	0					
ANR	1047099	ArgumentList	debugflag		1047092	1					
ANR	1047100	Argument	debugflag		1047092	0					
ANR	1047101	Identifier	debugflag		1047092	0					
ANR	1047102	Argument	"""Type: %d (%s), Name: %s, Addr: %s\\n"""		1047092	1					
ANR	1047103	PrimaryExpression	"""Type: %d (%s), Name: %s, Addr: %s\\n"""		1047092	0					
ANR	1047104	Argument	( int ) _type		1047092	2					
ANR	1047105	CastExpression	( int ) _type		1047092	0					
ANR	1047106	CastTarget	int		1047092	0					
ANR	1047107	Identifier	_type		1047092	1					
ANR	1047108	Argument	daemonString ( _type )		1047092	3					
ANR	1047109	CallExpression	daemonString ( _type )		1047092	0					
ANR	1047110	Callee	daemonString		1047092	0					
ANR	1047111	Identifier	daemonString		1047092	0					
ANR	1047112	ArgumentList	_type		1047092	1					
ANR	1047113	Argument	_type		1047092	0					
ANR	1047114	Identifier	_type		1047092	0					
ANR	1047115	Argument	"_name ? _name : ""(null)"""		1047092	4					
ANR	1047116	ConditionalExpression	"_name ? _name : ""(null)"""		1047092	0					
ANR	1047117	Condition	_name		1047092	0					
ANR	1047118	Identifier	_name		1047092	0					
ANR	1047119	Identifier	_name		1047092	1					
ANR	1047120	PrimaryExpression	"""(null)"""		1047092	2					
ANR	1047121	Argument	"_addr ? _addr : ""(null)"""		1047092	5					
ANR	1047122	ConditionalExpression	"_addr ? _addr : ""(null)"""		1047092	0					
ANR	1047123	Condition	_addr		1047092	0					
ANR	1047124	Identifier	_addr		1047092	0					
ANR	1047125	Identifier	_addr		1047092	1					
ANR	1047126	PrimaryExpression	"""(null)"""		1047092	2					
ANR	1047127	ExpressionStatement	"dprintf ( debugflag , ""FullHost: %s, Host: %s, Pool: %s, Port: %d\\n"" , _full_hostname ? _full_hostname : ""(null)"" , _hostname ? _hostname : ""(null)"" , _pool ? _pool : ""(null)"" , _port )"	403:1:8762:8955	1047092	1	True				
ANR	1047128	CallExpression	"dprintf ( debugflag , ""FullHost: %s, Host: %s, Pool: %s, Port: %d\\n"" , _full_hostname ? _full_hostname : ""(null)"" , _hostname ? _hostname : ""(null)"" , _pool ? _pool : ""(null)"" , _port )"		1047092	0					
ANR	1047129	Callee	dprintf		1047092	0					
ANR	1047130	Identifier	dprintf		1047092	0					
ANR	1047131	ArgumentList	debugflag		1047092	1					
ANR	1047132	Argument	debugflag		1047092	0					
ANR	1047133	Identifier	debugflag		1047092	0					
ANR	1047134	Argument	"""FullHost: %s, Host: %s, Pool: %s, Port: %d\\n"""		1047092	1					
ANR	1047135	PrimaryExpression	"""FullHost: %s, Host: %s, Pool: %s, Port: %d\\n"""		1047092	0					
ANR	1047136	Argument	"_full_hostname ? _full_hostname : ""(null)"""		1047092	2					
ANR	1047137	ConditionalExpression	"_full_hostname ? _full_hostname : ""(null)"""		1047092	0					
ANR	1047138	Condition	_full_hostname		1047092	0					
ANR	1047139	Identifier	_full_hostname		1047092	0					
ANR	1047140	Identifier	_full_hostname		1047092	1					
ANR	1047141	PrimaryExpression	"""(null)"""		1047092	2					
ANR	1047142	Argument	"_hostname ? _hostname : ""(null)"""		1047092	3					
ANR	1047143	ConditionalExpression	"_hostname ? _hostname : ""(null)"""		1047092	0					
ANR	1047144	Condition	_hostname		1047092	0					
ANR	1047145	Identifier	_hostname		1047092	0					
ANR	1047146	Identifier	_hostname		1047092	1					
ANR	1047147	PrimaryExpression	"""(null)"""		1047092	2					
ANR	1047148	Argument	"_pool ? _pool : ""(null)"""		1047092	4					
ANR	1047149	ConditionalExpression	"_pool ? _pool : ""(null)"""		1047092	0					
ANR	1047150	Condition	_pool		1047092	0					
ANR	1047151	Identifier	_pool		1047092	0					
ANR	1047152	Identifier	_pool		1047092	1					
ANR	1047153	PrimaryExpression	"""(null)"""		1047092	2					
ANR	1047154	Argument	_port		1047092	5					
ANR	1047155	Identifier	_port		1047092	0					
ANR	1047156	ExpressionStatement	"dprintf ( debugflag , ""IsLocal: %s, IdStr: %s, Error: %s\\n"" , _is_local ? ""Y"" : ""N"" , _id_str ? _id_str : ""(null)"" , _error ? _error : ""(null)"" )"	407:1:8958:9112	1047092	2	True				
ANR	1047157	CallExpression	"dprintf ( debugflag , ""IsLocal: %s, IdStr: %s, Error: %s\\n"" , _is_local ? ""Y"" : ""N"" , _id_str ? _id_str : ""(null)"" , _error ? _error : ""(null)"" )"		1047092	0					
ANR	1047158	Callee	dprintf		1047092	0					
ANR	1047159	Identifier	dprintf		1047092	0					
ANR	1047160	ArgumentList	debugflag		1047092	1					
ANR	1047161	Argument	debugflag		1047092	0					
ANR	1047162	Identifier	debugflag		1047092	0					
ANR	1047163	Argument	"""IsLocal: %s, IdStr: %s, Error: %s\\n"""		1047092	1					
ANR	1047164	PrimaryExpression	"""IsLocal: %s, IdStr: %s, Error: %s\\n"""		1047092	0					
ANR	1047165	Argument	"_is_local ? ""Y"" : ""N"""		1047092	2					
ANR	1047166	ConditionalExpression	"_is_local ? ""Y"" : ""N"""		1047092	0					
ANR	1047167	Condition	_is_local		1047092	0					
ANR	1047168	Identifier	_is_local		1047092	0					
ANR	1047169	PrimaryExpression	"""Y"""		1047092	1					
ANR	1047170	PrimaryExpression	"""N"""		1047092	2					
ANR	1047171	Argument	"_id_str ? _id_str : ""(null)"""		1047092	3					
ANR	1047172	ConditionalExpression	"_id_str ? _id_str : ""(null)"""		1047092	0					
ANR	1047173	Condition	_id_str		1047092	0					
ANR	1047174	Identifier	_id_str		1047092	0					
ANR	1047175	Identifier	_id_str		1047092	1					
ANR	1047176	PrimaryExpression	"""(null)"""		1047092	2					
ANR	1047177	Argument	"_error ? _error : ""(null)"""		1047092	4					
ANR	1047178	ConditionalExpression	"_error ? _error : ""(null)"""		1047092	0					
ANR	1047179	Condition	_error		1047092	0					
ANR	1047180	Identifier	_error		1047092	0					
ANR	1047181	Identifier	_error		1047092	1					
ANR	1047182	PrimaryExpression	"""(null)"""		1047092	2					
ANR	1047183	ReturnType	void		1047092	1					
ANR	1047184	Identifier	Daemon :: display		1047092	2					
ANR	1047185	ParameterList	int debugflag		1047092	3					
ANR	1047186	Parameter	int debugflag	397:17:8580:8592	1047092	0	True				
ANR	1047187	ParameterType	int		1047092	0					
ANR	1047188	Identifier	debugflag		1047092	1					
ANR	1047189	CFGEntryNode	ENTRY		1047092		True				
ANR	1047190	CFGExitNode	EXIT		1047092		True				
ANR	1047191	Symbol	_name		1047092						
ANR	1047192	Symbol	_full_hostname		1047092						
ANR	1047193	Symbol	_pool		1047092						
ANR	1047194	Symbol	_hostname		1047092						
ANR	1047195	Symbol	daemonString		1047092						
ANR	1047196	Symbol	_id_str		1047092						
ANR	1047197	Symbol	debugflag		1047092						
ANR	1047198	Symbol	_addr		1047092						
ANR	1047199	Symbol	_type		1047092						
ANR	1047200	Symbol	_error		1047092						
ANR	1047201	Symbol	_is_local		1047092						
ANR	1047202	Symbol	_port		1047092						
ANR	1047203	Function	Daemon :: display	414:0:9118:9648							
ANR	1047204	FunctionDef	Daemon :: display (FILE * fp)		1047203	0					
ANR	1047205	CompoundStatement		416:0:9152:9648	1047203	0					
ANR	1047206	ExpressionStatement	"fprintf ( fp , ""Type: %d (%s), Name: %s, Addr: %s\\n"" , ( int ) _type , daemonString ( _type ) , _name ? _name : ""(null)"" , _addr ? _addr : ""(null)"" )"	417:1:9155:9307	1047203	0	True				
ANR	1047207	CallExpression	"fprintf ( fp , ""Type: %d (%s), Name: %s, Addr: %s\\n"" , ( int ) _type , daemonString ( _type ) , _name ? _name : ""(null)"" , _addr ? _addr : ""(null)"" )"		1047203	0					
ANR	1047208	Callee	fprintf		1047203	0					
ANR	1047209	Identifier	fprintf		1047203	0					
ANR	1047210	ArgumentList	fp		1047203	1					
ANR	1047211	Argument	fp		1047203	0					
ANR	1047212	Identifier	fp		1047203	0					
ANR	1047213	Argument	"""Type: %d (%s), Name: %s, Addr: %s\\n"""		1047203	1					
ANR	1047214	PrimaryExpression	"""Type: %d (%s), Name: %s, Addr: %s\\n"""		1047203	0					
ANR	1047215	Argument	( int ) _type		1047203	2					
ANR	1047216	CastExpression	( int ) _type		1047203	0					
ANR	1047217	CastTarget	int		1047203	0					
ANR	1047218	Identifier	_type		1047203	1					
ANR	1047219	Argument	daemonString ( _type )		1047203	3					
ANR	1047220	CallExpression	daemonString ( _type )		1047203	0					
ANR	1047221	Callee	daemonString		1047203	0					
ANR	1047222	Identifier	daemonString		1047203	0					
ANR	1047223	ArgumentList	_type		1047203	1					
ANR	1047224	Argument	_type		1047203	0					
ANR	1047225	Identifier	_type		1047203	0					
ANR	1047226	Argument	"_name ? _name : ""(null)"""		1047203	4					
ANR	1047227	ConditionalExpression	"_name ? _name : ""(null)"""		1047203	0					
ANR	1047228	Condition	_name		1047203	0					
ANR	1047229	Identifier	_name		1047203	0					
ANR	1047230	Identifier	_name		1047203	1					
ANR	1047231	PrimaryExpression	"""(null)"""		1047203	2					
ANR	1047232	Argument	"_addr ? _addr : ""(null)"""		1047203	5					
ANR	1047233	ConditionalExpression	"_addr ? _addr : ""(null)"""		1047203	0					
ANR	1047234	Condition	_addr		1047203	0					
ANR	1047235	Identifier	_addr		1047203	0					
ANR	1047236	Identifier	_addr		1047203	1					
ANR	1047237	PrimaryExpression	"""(null)"""		1047203	2					
ANR	1047238	ExpressionStatement	"fprintf ( fp , ""FullHost: %s, Host: %s, Pool: %s, Port: %d\\n"" , _full_hostname ? _full_hostname : ""(null)"" , _hostname ? _hostname : ""(null)"" , _pool ? _pool : ""(null)"" , _port )"	421:1:9310:9496	1047203	1	True				
ANR	1047239	CallExpression	"fprintf ( fp , ""FullHost: %s, Host: %s, Pool: %s, Port: %d\\n"" , _full_hostname ? _full_hostname : ""(null)"" , _hostname ? _hostname : ""(null)"" , _pool ? _pool : ""(null)"" , _port )"		1047203	0					
ANR	1047240	Callee	fprintf		1047203	0					
ANR	1047241	Identifier	fprintf		1047203	0					
ANR	1047242	ArgumentList	fp		1047203	1					
ANR	1047243	Argument	fp		1047203	0					
ANR	1047244	Identifier	fp		1047203	0					
ANR	1047245	Argument	"""FullHost: %s, Host: %s, Pool: %s, Port: %d\\n"""		1047203	1					
ANR	1047246	PrimaryExpression	"""FullHost: %s, Host: %s, Pool: %s, Port: %d\\n"""		1047203	0					
ANR	1047247	Argument	"_full_hostname ? _full_hostname : ""(null)"""		1047203	2					
ANR	1047248	ConditionalExpression	"_full_hostname ? _full_hostname : ""(null)"""		1047203	0					
ANR	1047249	Condition	_full_hostname		1047203	0					
ANR	1047250	Identifier	_full_hostname		1047203	0					
ANR	1047251	Identifier	_full_hostname		1047203	1					
ANR	1047252	PrimaryExpression	"""(null)"""		1047203	2					
ANR	1047253	Argument	"_hostname ? _hostname : ""(null)"""		1047203	3					
ANR	1047254	ConditionalExpression	"_hostname ? _hostname : ""(null)"""		1047203	0					
ANR	1047255	Condition	_hostname		1047203	0					
ANR	1047256	Identifier	_hostname		1047203	0					
ANR	1047257	Identifier	_hostname		1047203	1					
ANR	1047258	PrimaryExpression	"""(null)"""		1047203	2					
ANR	1047259	Argument	"_pool ? _pool : ""(null)"""		1047203	4					
ANR	1047260	ConditionalExpression	"_pool ? _pool : ""(null)"""		1047203	0					
ANR	1047261	Condition	_pool		1047203	0					
ANR	1047262	Identifier	_pool		1047203	0					
ANR	1047263	Identifier	_pool		1047203	1					
ANR	1047264	PrimaryExpression	"""(null)"""		1047203	2					
ANR	1047265	Argument	_port		1047203	5					
ANR	1047266	Identifier	_port		1047203	0					
ANR	1047267	ExpressionStatement	"fprintf ( fp , ""IsLocal: %s, IdStr: %s, Error: %s\\n"" , _is_local ? ""Y"" : ""N"" , _id_str ? _id_str : ""(null)"" , _error ? _error : ""(null)"" )"	425:1:9499:9646	1047203	2	True				
ANR	1047268	CallExpression	"fprintf ( fp , ""IsLocal: %s, IdStr: %s, Error: %s\\n"" , _is_local ? ""Y"" : ""N"" , _id_str ? _id_str : ""(null)"" , _error ? _error : ""(null)"" )"		1047203	0					
ANR	1047269	Callee	fprintf		1047203	0					
ANR	1047270	Identifier	fprintf		1047203	0					
ANR	1047271	ArgumentList	fp		1047203	1					
ANR	1047272	Argument	fp		1047203	0					
ANR	1047273	Identifier	fp		1047203	0					
ANR	1047274	Argument	"""IsLocal: %s, IdStr: %s, Error: %s\\n"""		1047203	1					
ANR	1047275	PrimaryExpression	"""IsLocal: %s, IdStr: %s, Error: %s\\n"""		1047203	0					
ANR	1047276	Argument	"_is_local ? ""Y"" : ""N"""		1047203	2					
ANR	1047277	ConditionalExpression	"_is_local ? ""Y"" : ""N"""		1047203	0					
ANR	1047278	Condition	_is_local		1047203	0					
ANR	1047279	Identifier	_is_local		1047203	0					
ANR	1047280	PrimaryExpression	"""Y"""		1047203	1					
ANR	1047281	PrimaryExpression	"""N"""		1047203	2					
ANR	1047282	Argument	"_id_str ? _id_str : ""(null)"""		1047203	3					
ANR	1047283	ConditionalExpression	"_id_str ? _id_str : ""(null)"""		1047203	0					
ANR	1047284	Condition	_id_str		1047203	0					
ANR	1047285	Identifier	_id_str		1047203	0					
ANR	1047286	Identifier	_id_str		1047203	1					
ANR	1047287	PrimaryExpression	"""(null)"""		1047203	2					
ANR	1047288	Argument	"_error ? _error : ""(null)"""		1047203	4					
ANR	1047289	ConditionalExpression	"_error ? _error : ""(null)"""		1047203	0					
ANR	1047290	Condition	_error		1047203	0					
ANR	1047291	Identifier	_error		1047203	0					
ANR	1047292	Identifier	_error		1047203	1					
ANR	1047293	PrimaryExpression	"""(null)"""		1047203	2					
ANR	1047294	ReturnType	void		1047203	1					
ANR	1047295	Identifier	Daemon :: display		1047203	2					
ANR	1047296	ParameterList	FILE * fp		1047203	3					
ANR	1047297	Parameter	FILE * fp	415:17:9140:9147	1047203	0	True				
ANR	1047298	ParameterType	FILE *		1047203	0					
ANR	1047299	Identifier	fp		1047203	1					
ANR	1047300	CFGEntryNode	ENTRY		1047203		True				
ANR	1047301	CFGExitNode	EXIT		1047203		True				
ANR	1047302	Symbol	_name		1047203						
ANR	1047303	Symbol	_pool		1047203						
ANR	1047304	Symbol	_full_hostname		1047203						
ANR	1047305	Symbol	_hostname		1047203						
ANR	1047306	Symbol	daemonString		1047203						
ANR	1047307	Symbol	_id_str		1047203						
ANR	1047308	Symbol	_addr		1047203						
ANR	1047309	Symbol	_type		1047203						
ANR	1047310	Symbol	_error		1047203						
ANR	1047311	Symbol	fp		1047203						
ANR	1047312	Symbol	_is_local		1047203						
ANR	1047313	Symbol	_port		1047203						
ANR	1047314	Function	Daemon :: nextValidCm	431:0:9651:9916							
ANR	1047315	FunctionDef	Daemon :: nextValidCm ()		1047314	0					
ANR	1047316	CompoundStatement		433:0:9678:9916	1047314	0					
ANR	1047317	IdentifierDeclStatement	char * dname ;	434:1:9681:9692	1047314	0	True				
ANR	1047318	IdentifierDecl	* dname		1047314	0					
ANR	1047319	IdentifierDeclType	char *		1047314	0					
ANR	1047320	Identifier	dname		1047314	1					
ANR	1047321	IdentifierDeclStatement	bool rval = false ;	435:1:9695:9712	1047314	1	True				
ANR	1047322	IdentifierDecl	rval = false		1047314	0					
ANR	1047323	IdentifierDeclType	bool		1047314	0					
ANR	1047324	Identifier	rval		1047314	1					
ANR	1047325	AssignmentExpression	rval = false		1047314	2		=			
ANR	1047326	Identifier	false		1047314	0					
ANR	1047327	Identifier	false		1047314	1					
ANR	1047328	DoStatement	do		1047314	2					
ANR	1047329	CompoundStatement		5:4:40:40	1047314	0					
ANR	1047330	ExpressionStatement	dname = daemon_list . next ( )	438:3:9724:9750	1047314	0	True				
ANR	1047331	AssignmentExpression	dname = daemon_list . next ( )		1047314	0		=			
ANR	1047332	Identifier	dname		1047314	0					
ANR	1047333	CallExpression	daemon_list . next ( )		1047314	1					
ANR	1047334	Callee	daemon_list . next		1047314	0					
ANR	1047335	MemberAccess	daemon_list . next		1047314	0					
ANR	1047336	Identifier	daemon_list		1047314	0					
ANR	1047337	Identifier	next		1047314	1					
ANR	1047338	ArgumentList			1047314	1					
ANR	1047339	IfStatement	if ( dname != NULL )		1047314	1					
ANR	1047340	Condition	dname != NULL	439:6:9758:9770	1047314	0	True				
ANR	1047341	EqualityExpression	dname != NULL		1047314	0		!=			
ANR	1047342	Identifier	dname		1047314	0					
ANR	1047343	Identifier	NULL		1047314	1					
ANR	1047344	CompoundStatement		8:2:97:97	1047314	1					
ANR	1047345	ExpressionStatement	rval = findCmDaemon ( dname )	441:3:9781:9809	1047314	0	True				
ANR	1047346	AssignmentExpression	rval = findCmDaemon ( dname )		1047314	0		=			
ANR	1047347	Identifier	rval		1047314	0					
ANR	1047348	CallExpression	findCmDaemon ( dname )		1047314	1					
ANR	1047349	Callee	findCmDaemon		1047314	0					
ANR	1047350	Identifier	findCmDaemon		1047314	0					
ANR	1047351	ArgumentList	dname		1047314	1					
ANR	1047352	Argument	dname		1047314	0					
ANR	1047353	Identifier	dname		1047314	0					
ANR	1047354	IfStatement	if ( rval == true )		1047314	1					
ANR	1047355	Condition	rval == true	442:7:9818:9829	1047314	0	True				
ANR	1047356	EqualityExpression	rval == true		1047314	0		==			
ANR	1047357	Identifier	rval		1047314	0					
ANR	1047358	Identifier	true		1047314	1					
ANR	1047359	CompoundStatement		10:22:154:154	1047314	1					
ANR	1047360	ExpressionStatement	locate ( )	443:4:9839:9847	1047314	0	True				
ANR	1047361	CallExpression	locate ( )		1047314	0					
ANR	1047362	Callee	locate		1047314	0					
ANR	1047363	Identifier	locate		1047314	0					
ANR	1047364	ArgumentList			1047314	1					
ANR	1047365	Condition	rval == false && dname != NULL	446:10:9868:9897	1047314	1	True				
ANR	1047366	AndExpression	rval == false && dname != NULL		1047314	0		&&			
ANR	1047367	EqualityExpression	rval == false		1047314	0		==			
ANR	1047368	Identifier	rval		1047314	0					
ANR	1047369	Identifier	false		1047314	1					
ANR	1047370	EqualityExpression	dname != NULL		1047314	1		!=			
ANR	1047371	Identifier	dname		1047314	0					
ANR	1047372	Identifier	NULL		1047314	1					
ANR	1047373	ReturnStatement	return rval ;	447:1:9903:9914	1047314	3	True				
ANR	1047374	Identifier	rval		1047314	0					
ANR	1047375	ReturnType	bool		1047314	1					
ANR	1047376	Identifier	Daemon :: nextValidCm		1047314	2					
ANR	1047377	ParameterList			1047314	3					
ANR	1047378	CFGEntryNode	ENTRY		1047314		True				
ANR	1047379	CFGExitNode	EXIT		1047314		True				
ANR	1047380	Symbol	findCmDaemon		1047314						
ANR	1047381	Symbol	NULL		1047314						
ANR	1047382	Symbol	daemon_list		1047314						
ANR	1047383	Symbol	false		1047314						
ANR	1047384	Symbol	true		1047314						
ANR	1047385	Symbol	rval		1047314						
ANR	1047386	Symbol	dname		1047314						
ANR	1047387	Symbol	daemon_list . next		1047314						
ANR	1047388	Function	Daemon :: rewindCmList	451:0:9920:10053							
ANR	1047389	FunctionDef	Daemon :: rewindCmList ()		1047388	0					
ANR	1047390	CompoundStatement		453:0:9948:10053	1047388	0					
ANR	1047391	IdentifierDeclStatement	char * dname ;	454:1:9951:9962	1047388	0	True				
ANR	1047392	IdentifierDecl	* dname		1047388	0					
ANR	1047393	IdentifierDeclType	char *		1047388	0					
ANR	1047394	Identifier	dname		1047388	1					
ANR	1047395	ExpressionStatement	daemon_list . rewind ( )	456:1:9966:9986	1047388	1	True				
ANR	1047396	CallExpression	daemon_list . rewind ( )		1047388	0					
ANR	1047397	Callee	daemon_list . rewind		1047388	0					
ANR	1047398	MemberAccess	daemon_list . rewind		1047388	0					
ANR	1047399	Identifier	daemon_list		1047388	0					
ANR	1047400	Identifier	rewind		1047388	1					
ANR	1047401	ArgumentList			1047388	1					
ANR	1047402	ExpressionStatement	dname = daemon_list . next ( )	457:2:9990:10016	1047388	2	True				
ANR	1047403	AssignmentExpression	dname = daemon_list . next ( )		1047388	0		=			
ANR	1047404	Identifier	dname		1047388	0					
ANR	1047405	CallExpression	daemon_list . next ( )		1047388	1					
ANR	1047406	Callee	daemon_list . next		1047388	0					
ANR	1047407	MemberAccess	daemon_list . next		1047388	0					
ANR	1047408	Identifier	daemon_list		1047388	0					
ANR	1047409	Identifier	next		1047388	1					
ANR	1047410	ArgumentList			1047388	1					
ANR	1047411	ExpressionStatement	findCmDaemon ( dname )	458:1:10019:10040	1047388	3	True				
ANR	1047412	CallExpression	findCmDaemon ( dname )		1047388	0					
ANR	1047413	Callee	findCmDaemon		1047388	0					
ANR	1047414	Identifier	findCmDaemon		1047388	0					
ANR	1047415	ArgumentList	dname		1047388	1					
ANR	1047416	Argument	dname		1047388	0					
ANR	1047417	Identifier	dname		1047388	0					
ANR	1047418	ExpressionStatement	locate ( )	459:1:10043:10051	1047388	4	True				
ANR	1047419	CallExpression	locate ( )		1047388	0					
ANR	1047420	Callee	locate		1047388	0					
ANR	1047421	Identifier	locate		1047388	0					
ANR	1047422	ArgumentList			1047388	1					
ANR	1047423	ReturnType	void		1047388	1					
ANR	1047424	Identifier	Daemon :: rewindCmList		1047388	2					
ANR	1047425	ParameterList			1047388	3					
ANR	1047426	CFGEntryNode	ENTRY		1047388		True				
ANR	1047427	CFGExitNode	EXIT		1047388		True				
ANR	1047428	Symbol	daemon_list		1047388						
ANR	1047429	Symbol	dname		1047388						
ANR	1047430	Symbol	daemon_list . next		1047388						
ANR	1047431	Function	Daemon :: reliSock	467:0:10225:10654							
ANR	1047432	FunctionDef	"Daemon :: reliSock (int timeout , time_t deadline , CondorError * errstack , bool non_blocking , bool ignore_timeout_multiplier)"		1047431	0					
ANR	1047433	CompoundStatement		469:0:10358:10654	1047431	0					
ANR	1047434	IfStatement	if ( ! checkAddr ( ) )		1047431	0					
ANR	1047435	Condition	! checkAddr ( )	470:5:10365:10376	1047431	0	True				
ANR	1047436	UnaryOperationExpression	! checkAddr ( )		1047431	0					
ANR	1047437	UnaryOperator	!		1047431	0					
ANR	1047438	CallExpression	checkAddr ( )		1047431	1					
ANR	1047439	Callee	checkAddr		1047431	0					
ANR	1047440	Identifier	checkAddr		1047431	0					
ANR	1047441	ArgumentList			1047431	1					
ANR	1047442	CompoundStatement		2:20:21:21	1047431	1					
ANR	1047443	ReturnStatement	return NULL ;	472:2:10429:10440	1047431	0	True				
ANR	1047444	Identifier	NULL		1047431	0					
ANR	1047445	IdentifierDeclStatement	ReliSock * sock ;	474:1:10446:10460	1047431	1	True				
ANR	1047446	IdentifierDecl	* sock		1047431	0					
ANR	1047447	IdentifierDeclType	ReliSock *		1047431	0					
ANR	1047448	Identifier	sock		1047431	1					
ANR	1047449	ExpressionStatement	sock = new ReliSock ( )	475:1:10463:10484	1047431	2	True				
ANR	1047450	AssignmentExpression	sock = new ReliSock ( )		1047431	0		=			
ANR	1047451	Identifier	sock		1047431	0					
ANR	1047452	UnaryExpression	new ReliSock ( )		1047431	1					
ANR	1047453	ExpressionStatement	sock -> set_deadline ( deadline )	477:1:10488:10518	1047431	3	True				
ANR	1047454	CallExpression	sock -> set_deadline ( deadline )		1047431	0					
ANR	1047455	Callee	sock -> set_deadline		1047431	0					
ANR	1047456	PtrMemberAccess	sock -> set_deadline		1047431	0					
ANR	1047457	Identifier	sock		1047431	0					
ANR	1047458	Identifier	set_deadline		1047431	1					
ANR	1047459	ArgumentList	deadline		1047431	1					
ANR	1047460	Argument	deadline		1047431	0					
ANR	1047461	Identifier	deadline		1047431	0					
ANR	1047462	IfStatement	"if ( ! connectSock ( sock , timeout , errstack , non_blocking , ignore_timeout_multiplier ) )"		1047431	4					
ANR	1047463	Condition	"! connectSock ( sock , timeout , errstack , non_blocking , ignore_timeout_multiplier )"	479:5:10526:10599	1047431	0	True				
ANR	1047464	UnaryOperationExpression	"! connectSock ( sock , timeout , errstack , non_blocking , ignore_timeout_multiplier )"		1047431	0					
ANR	1047465	UnaryOperator	!		1047431	0					
ANR	1047466	CallExpression	"connectSock ( sock , timeout , errstack , non_blocking , ignore_timeout_multiplier )"		1047431	1					
ANR	1047467	Callee	connectSock		1047431	0					
ANR	1047468	Identifier	connectSock		1047431	0					
ANR	1047469	ArgumentList	sock		1047431	1					
ANR	1047470	Argument	sock		1047431	0					
ANR	1047471	Identifier	sock		1047431	0					
ANR	1047472	Argument	timeout		1047431	1					
ANR	1047473	Identifier	timeout		1047431	0					
ANR	1047474	Argument	errstack		1047431	2					
ANR	1047475	Identifier	errstack		1047431	0					
ANR	1047476	Argument	non_blocking		1047431	3					
ANR	1047477	Identifier	non_blocking		1047431	0					
ANR	1047478	Argument	ignore_timeout_multiplier		1047431	4					
ANR	1047479	Identifier	ignore_timeout_multiplier		1047431	0					
ANR	1047480	CompoundStatement		12:1:245:245	1047431	1					
ANR	1047481	Statement	delete	481:2:10608:10613	1047431	0	True				
ANR	1047482	ExpressionStatement	sock	481:9:10615:10619	1047431	1	True				
ANR	1047483	Identifier	sock		1047431	0					
ANR	1047484	ReturnStatement	return NULL ;	482:2:10623:10634	1047431	2	True				
ANR	1047485	Identifier	NULL		1047431	0					
ANR	1047486	ReturnStatement	return sock ;	485:1:10641:10652	1047431	5	True				
ANR	1047487	Identifier	sock		1047431	0					
ANR	1047488	ReturnType	ReliSock *		1047431	1					
ANR	1047489	Identifier	Daemon :: reliSock		1047431	2					
ANR	1047490	ParameterList	"int timeout , time_t deadline , CondorError * errstack , bool non_blocking , bool ignore_timeout_multiplier"		1047431	3					
ANR	1047491	Parameter	int timeout	468:18:10253:10263	1047431	0	True				
ANR	1047492	ParameterType	int		1047431	0					
ANR	1047493	Identifier	timeout		1047431	1					
ANR	1047494	Parameter	time_t deadline	468:31:10266:10280	1047431	1	True				
ANR	1047495	ParameterType	time_t		1047431	0					
ANR	1047496	Identifier	deadline		1047431	1					
ANR	1047497	Parameter	CondorError * errstack	468:48:10283:10303	1047431	2	True				
ANR	1047498	ParameterType	CondorError *		1047431	0					
ANR	1047499	Identifier	errstack		1047431	1					
ANR	1047500	Parameter	bool non_blocking	468:71:10306:10322	1047431	3	True				
ANR	1047501	ParameterType	bool		1047431	0					
ANR	1047502	Identifier	non_blocking		1047431	1					
ANR	1047503	Parameter	bool ignore_timeout_multiplier	468:90:10325:10354	1047431	4	True				
ANR	1047504	ParameterType	bool		1047431	0					
ANR	1047505	Identifier	ignore_timeout_multiplier		1047431	1					
ANR	1047506	CFGEntryNode	ENTRY		1047431		True				
ANR	1047507	CFGExitNode	EXIT		1047431		True				
ANR	1047508	Symbol	checkAddr		1047431						
ANR	1047509	Symbol	sock		1047431						
ANR	1047510	Symbol	non_blocking		1047431						
ANR	1047511	Symbol	errstack		1047431						
ANR	1047512	Symbol	NULL		1047431						
ANR	1047513	Symbol	deadline		1047431						
ANR	1047514	Symbol	ignore_timeout_multiplier		1047431						
ANR	1047515	Symbol	timeout		1047431						
ANR	1047516	Symbol	connectSock		1047431						
ANR	1047517	Function	Daemon :: safeSock	488:0:10657:11028							
ANR	1047518	FunctionDef	"Daemon :: safeSock (int timeout , time_t deadline , CondorError * errstack , bool non_blocking)"		1047517	0					
ANR	1047519	CompoundStatement		490:0:10758:11028	1047517	0					
ANR	1047520	IfStatement	if ( ! checkAddr ( ) )		1047517	0					
ANR	1047521	Condition	! checkAddr ( )	491:5:10765:10776	1047517	0	True				
ANR	1047522	UnaryOperationExpression	! checkAddr ( )		1047517	0					
ANR	1047523	UnaryOperator	!		1047517	0					
ANR	1047524	CallExpression	checkAddr ( )		1047517	1					
ANR	1047525	Callee	checkAddr		1047517	0					
ANR	1047526	Identifier	checkAddr		1047517	0					
ANR	1047527	ArgumentList			1047517	1					
ANR	1047528	CompoundStatement		2:20:21:21	1047517	1					
ANR	1047529	ReturnStatement	return NULL ;	493:2:10829:10840	1047517	0	True				
ANR	1047530	Identifier	NULL		1047517	0					
ANR	1047531	IdentifierDeclStatement	SafeSock * sock ;	495:1:10846:10860	1047517	1	True				
ANR	1047532	IdentifierDecl	* sock		1047517	0					
ANR	1047533	IdentifierDeclType	SafeSock *		1047517	0					
ANR	1047534	Identifier	sock		1047517	1					
ANR	1047535	ExpressionStatement	sock = new SafeSock ( )	496:1:10863:10884	1047517	2	True				
ANR	1047536	AssignmentExpression	sock = new SafeSock ( )		1047517	0		=			
ANR	1047537	Identifier	sock		1047517	0					
ANR	1047538	UnaryExpression	new SafeSock ( )		1047517	1					
ANR	1047539	ExpressionStatement	sock -> set_deadline ( deadline )	498:1:10888:10918	1047517	3	True				
ANR	1047540	CallExpression	sock -> set_deadline ( deadline )		1047517	0					
ANR	1047541	Callee	sock -> set_deadline		1047517	0					
ANR	1047542	PtrMemberAccess	sock -> set_deadline		1047517	0					
ANR	1047543	Identifier	sock		1047517	0					
ANR	1047544	Identifier	set_deadline		1047517	1					
ANR	1047545	ArgumentList	deadline		1047517	1					
ANR	1047546	Argument	deadline		1047517	0					
ANR	1047547	Identifier	deadline		1047517	0					
ANR	1047548	IfStatement	"if ( ! connectSock ( sock , timeout , errstack , non_blocking ) )"		1047517	4					
ANR	1047549	Condition	"! connectSock ( sock , timeout , errstack , non_blocking )"	500:5:10926:10973	1047517	0	True				
ANR	1047550	UnaryOperationExpression	"! connectSock ( sock , timeout , errstack , non_blocking )"		1047517	0					
ANR	1047551	UnaryOperator	!		1047517	0					
ANR	1047552	CallExpression	"connectSock ( sock , timeout , errstack , non_blocking )"		1047517	1					
ANR	1047553	Callee	connectSock		1047517	0					
ANR	1047554	Identifier	connectSock		1047517	0					
ANR	1047555	ArgumentList	sock		1047517	1					
ANR	1047556	Argument	sock		1047517	0					
ANR	1047557	Identifier	sock		1047517	0					
ANR	1047558	Argument	timeout		1047517	1					
ANR	1047559	Identifier	timeout		1047517	0					
ANR	1047560	Argument	errstack		1047517	2					
ANR	1047561	Identifier	errstack		1047517	0					
ANR	1047562	Argument	non_blocking		1047517	3					
ANR	1047563	Identifier	non_blocking		1047517	0					
ANR	1047564	CompoundStatement		12:1:219:219	1047517	1					
ANR	1047565	Statement	delete	502:2:10982:10987	1047517	0	True				
ANR	1047566	ExpressionStatement	sock	502:9:10989:10993	1047517	1	True				
ANR	1047567	Identifier	sock		1047517	0					
ANR	1047568	ReturnStatement	return NULL ;	503:2:10997:11008	1047517	2	True				
ANR	1047569	Identifier	NULL		1047517	0					
ANR	1047570	ReturnStatement	return sock ;	506:1:11015:11026	1047517	5	True				
ANR	1047571	Identifier	sock		1047517	0					
ANR	1047572	ReturnType	SafeSock *		1047517	1					
ANR	1047573	Identifier	Daemon :: safeSock		1047517	2					
ANR	1047574	ParameterList	"int timeout , time_t deadline , CondorError * errstack , bool non_blocking"		1047517	3					
ANR	1047575	Parameter	int timeout	489:18:10685:10695	1047517	0	True				
ANR	1047576	ParameterType	int		1047517	0					
ANR	1047577	Identifier	timeout		1047517	1					
ANR	1047578	Parameter	time_t deadline	489:31:10698:10712	1047517	1	True				
ANR	1047579	ParameterType	time_t		1047517	0					
ANR	1047580	Identifier	deadline		1047517	1					
ANR	1047581	Parameter	CondorError * errstack	489:48:10715:10735	1047517	2	True				
ANR	1047582	ParameterType	CondorError *		1047517	0					
ANR	1047583	Identifier	errstack		1047517	1					
ANR	1047584	Parameter	bool non_blocking	489:71:10738:10754	1047517	3	True				
ANR	1047585	ParameterType	bool		1047517	0					
ANR	1047586	Identifier	non_blocking		1047517	1					
ANR	1047587	CFGEntryNode	ENTRY		1047517		True				
ANR	1047588	CFGExitNode	EXIT		1047517		True				
ANR	1047589	Symbol	checkAddr		1047517						
ANR	1047590	Symbol	sock		1047517						
ANR	1047591	Symbol	non_blocking		1047517						
ANR	1047592	Symbol	errstack		1047517						
ANR	1047593	Symbol	NULL		1047517						
ANR	1047594	Symbol	deadline		1047517						
ANR	1047595	Symbol	timeout		1047517						
ANR	1047596	Symbol	connectSock		1047517						
ANR	1047597	Function	Daemon :: connectSock	510:0:11032:11560							
ANR	1047598	FunctionDef	"Daemon :: connectSock (Sock * sock , int sec , CondorError * errstack , bool non_blocking , bool ignore_timeout_multiplier)"		1047597	0					
ANR	1047599	CompoundStatement		512:0:11153:11560	1047597	0					
ANR	1047600	ExpressionStatement	sock -> set_peer_description ( idStr ( ) )	514:1:11157:11192	1047597	0	True				
ANR	1047601	CallExpression	sock -> set_peer_description ( idStr ( ) )		1047597	0					
ANR	1047602	Callee	sock -> set_peer_description		1047597	0					
ANR	1047603	PtrMemberAccess	sock -> set_peer_description		1047597	0					
ANR	1047604	Identifier	sock		1047597	0					
ANR	1047605	Identifier	set_peer_description		1047597	1					
ANR	1047606	ArgumentList	idStr ( )		1047597	1					
ANR	1047607	Argument	idStr ( )		1047597	0					
ANR	1047608	CallExpression	idStr ( )		1047597	0					
ANR	1047609	Callee	idStr		1047597	0					
ANR	1047610	Identifier	idStr		1047597	0					
ANR	1047611	ArgumentList			1047597	1					
ANR	1047612	IfStatement	if ( sec )		1047597	1					
ANR	1047613	Condition	sec	515:5:11199:11201	1047597	0	True				
ANR	1047614	Identifier	sec		1047597	0					
ANR	1047615	CompoundStatement		4:11:51:51	1047597	1					
ANR	1047616	ExpressionStatement	sock -> timeout ( sec )	516:2:11209:11229	1047597	0	True				
ANR	1047617	CallExpression	sock -> timeout ( sec )		1047597	0					
ANR	1047618	Callee	sock -> timeout		1047597	0					
ANR	1047619	PtrMemberAccess	sock -> timeout		1047597	0					
ANR	1047620	Identifier	sock		1047597	0					
ANR	1047621	Identifier	timeout		1047597	1					
ANR	1047622	ArgumentList	sec		1047597	1					
ANR	1047623	Argument	sec		1047597	0					
ANR	1047624	Identifier	sec		1047597	0					
ANR	1047625	IfStatement	if ( ignore_timeout_multiplier )		1047597	1					
ANR	1047626	Condition	ignore_timeout_multiplier	517:6:11237:11261	1047597	0	True				
ANR	1047627	Identifier	ignore_timeout_multiplier		1047597	0					
ANR	1047628	CompoundStatement		6:34:111:111	1047597	1					
ANR	1047629	ExpressionStatement	sock -> ignoreTimeoutMultiplier ( )	518:3:11270:11301	1047597	0	True				
ANR	1047630	CallExpression	sock -> ignoreTimeoutMultiplier ( )		1047597	0					
ANR	1047631	Callee	sock -> ignoreTimeoutMultiplier		1047597	0					
ANR	1047632	PtrMemberAccess	sock -> ignoreTimeoutMultiplier		1047597	0					
ANR	1047633	Identifier	sock		1047597	0					
ANR	1047634	Identifier	ignoreTimeoutMultiplier		1047597	1					
ANR	1047635	ArgumentList			1047597	1					
ANR	1047636	IdentifierDeclStatement	"int rc = sock -> connect ( _addr , 0 , non_blocking ) ;"	522:1:11312:11358	1047597	2	True				
ANR	1047637	IdentifierDecl	"rc = sock -> connect ( _addr , 0 , non_blocking )"		1047597	0					
ANR	1047638	IdentifierDeclType	int		1047597	0					
ANR	1047639	Identifier	rc		1047597	1					
ANR	1047640	AssignmentExpression	"rc = sock -> connect ( _addr , 0 , non_blocking )"		1047597	2		=			
ANR	1047641	Identifier	rc		1047597	0					
ANR	1047642	CallExpression	"sock -> connect ( _addr , 0 , non_blocking )"		1047597	1					
ANR	1047643	Callee	sock -> connect		1047597	0					
ANR	1047644	PtrMemberAccess	sock -> connect		1047597	0					
ANR	1047645	Identifier	sock		1047597	0					
ANR	1047646	Identifier	connect		1047597	1					
ANR	1047647	ArgumentList	_addr		1047597	1					
ANR	1047648	Argument	_addr		1047597	0					
ANR	1047649	Identifier	_addr		1047597	0					
ANR	1047650	Argument	0		1047597	1					
ANR	1047651	PrimaryExpression	0		1047597	0					
ANR	1047652	Argument	non_blocking		1047597	2					
ANR	1047653	Identifier	non_blocking		1047597	0					
ANR	1047654	IfStatement	if ( rc || ( non_blocking && rc == CEDAR_EWOULDBLOCK ) )		1047597	3					
ANR	1047655	Condition	rc || ( non_blocking && rc == CEDAR_EWOULDBLOCK )	523:4:11364:11410	1047597	0	True				
ANR	1047656	OrExpression	rc || ( non_blocking && rc == CEDAR_EWOULDBLOCK )		1047597	0		||			
ANR	1047657	Identifier	rc		1047597	0					
ANR	1047658	AndExpression	non_blocking && rc == CEDAR_EWOULDBLOCK		1047597	1		&&			
ANR	1047659	Identifier	non_blocking		1047597	0					
ANR	1047660	EqualityExpression	rc == CEDAR_EWOULDBLOCK		1047597	1		==			
ANR	1047661	Identifier	rc		1047597	0					
ANR	1047662	Identifier	CEDAR_EWOULDBLOCK		1047597	1					
ANR	1047663	CompoundStatement		12:53:259:259	1047597	1					
ANR	1047664	ReturnStatement	return true ;	524:2:11417:11428	1047597	0	True				
ANR	1047665	Identifier	true		1047597	0					
ANR	1047666	IfStatement	if ( errstack )		1047597	4					
ANR	1047667	Condition	errstack	527:5:11439:11446	1047597	0	True				
ANR	1047668	Identifier	errstack		1047597	0					
ANR	1047669	CompoundStatement		16:15:295:295	1047597	1					
ANR	1047670	ExpressionStatement	"errstack -> pushf ( ""CEDAR"" , CEDAR_ERR_CONNECT_FAILED , ""Failed to connect to %s"" , _addr )"	528:2:11453:11540	1047597	0	True				
ANR	1047671	CallExpression	"errstack -> pushf ( ""CEDAR"" , CEDAR_ERR_CONNECT_FAILED , ""Failed to connect to %s"" , _addr )"		1047597	0					
ANR	1047672	Callee	errstack -> pushf		1047597	0					
ANR	1047673	PtrMemberAccess	errstack -> pushf		1047597	0					
ANR	1047674	Identifier	errstack		1047597	0					
ANR	1047675	Identifier	pushf		1047597	1					
ANR	1047676	ArgumentList	"""CEDAR"""		1047597	1					
ANR	1047677	Argument	"""CEDAR"""		1047597	0					
ANR	1047678	PrimaryExpression	"""CEDAR"""		1047597	0					
ANR	1047679	Argument	CEDAR_ERR_CONNECT_FAILED		1047597	1					
ANR	1047680	Identifier	CEDAR_ERR_CONNECT_FAILED		1047597	0					
ANR	1047681	Argument	"""Failed to connect to %s"""		1047597	2					
ANR	1047682	PrimaryExpression	"""Failed to connect to %s"""		1047597	0					
ANR	1047683	Argument	_addr		1047597	3					
ANR	1047684	Identifier	_addr		1047597	0					
ANR	1047685	ReturnStatement	return false ;	531:1:11546:11558	1047597	5	True				
ANR	1047686	Identifier	false		1047597	0					
ANR	1047687	ReturnType	bool		1047597	1					
ANR	1047688	Identifier	Daemon :: connectSock		1047597	2					
ANR	1047689	ParameterList	"Sock * sock , int sec , CondorError * errstack , bool non_blocking , bool ignore_timeout_multiplier"		1047597	3					
ANR	1047690	Parameter	Sock * sock	511:20:11057:11066	1047597	0	True				
ANR	1047691	ParameterType	Sock *		1047597	0					
ANR	1047692	Identifier	sock		1047597	1					
ANR	1047693	Parameter	int sec	511:32:11069:11075	1047597	1	True				
ANR	1047694	ParameterType	int		1047597	0					
ANR	1047695	Identifier	sec		1047597	1					
ANR	1047696	Parameter	CondorError * errstack	511:41:11078:11098	1047597	2	True				
ANR	1047697	ParameterType	CondorError *		1047597	0					
ANR	1047698	Identifier	errstack		1047597	1					
ANR	1047699	Parameter	bool non_blocking	511:64:11101:11117	1047597	3	True				
ANR	1047700	ParameterType	bool		1047597	0					
ANR	1047701	Identifier	non_blocking		1047597	1					
ANR	1047702	Parameter	bool ignore_timeout_multiplier	511:83:11120:11149	1047597	4	True				
ANR	1047703	ParameterType	bool		1047597	0					
ANR	1047704	Identifier	ignore_timeout_multiplier		1047597	1					
ANR	1047705	CFGEntryNode	ENTRY		1047597		True				
ANR	1047706	CFGExitNode	EXIT		1047597		True				
ANR	1047707	Symbol	idStr		1047597						
ANR	1047708	Symbol	sock -> connect		1047597						
ANR	1047709	Symbol	false		1047597						
ANR	1047710	Symbol	sec		1047597						
ANR	1047711	Symbol	sock		1047597						
ANR	1047712	Symbol	rc		1047597						
ANR	1047713	Symbol	non_blocking		1047597						
ANR	1047714	Symbol	errstack		1047597						
ANR	1047715	Symbol	CEDAR_EWOULDBLOCK		1047597						
ANR	1047716	Symbol	CEDAR_ERR_CONNECT_FAILED		1047597						
ANR	1047717	Symbol	_addr		1047597						
ANR	1047718	Symbol	true		1047597						
ANR	1047719	Symbol	ignore_timeout_multiplier		1047597						
ANR	1047720	Symbol	* sock		1047597						
ANR	1047721	DeclStmt									
ANR	1047722	Decl							StartCommandResult	StartCommandResult	start_command_result
ANR	1047723	Function	Daemon :: makeConnectedSocket	570:0:12812:13270							
ANR	1047724	FunctionDef	"Daemon :: makeConnectedSocket (Stream :: stream_type st , int timeout , time_t deadline , CondorError * errstack , bool non_blocking)"		1047723	0					
ANR	1047725	CompoundStatement		574:0:12961:13270	1047723	0					
ANR	1047726	SwitchStatement	switch ( st )		1047723	0					
ANR	1047727	Condition	st	575:9:12972:12973	1047723	0	True				
ANR	1047728	Identifier	st		1047723	0					
ANR	1047729	CompoundStatement		2:14:15:15	1047723	1					
ANR	1047730	Label	case Stream :: reli_sock :	576:1:12980:13002	1047723	0	True				
ANR	1047731	Identifier	Stream :: reli_sock		1047723	0					
ANR	1047732	ReturnStatement	"return reliSock ( timeout , deadline , errstack , non_blocking ) ;"	577:2:13006:13064	1047723	1	True				
ANR	1047733	CallExpression	"reliSock ( timeout , deadline , errstack , non_blocking )"		1047723	0					
ANR	1047734	Callee	reliSock		1047723	0					
ANR	1047735	Identifier	reliSock		1047723	0					
ANR	1047736	ArgumentList	timeout		1047723	1					
ANR	1047737	Argument	timeout		1047723	0					
ANR	1047738	Identifier	timeout		1047723	0					
ANR	1047739	Argument	deadline		1047723	1					
ANR	1047740	Identifier	deadline		1047723	0					
ANR	1047741	Argument	errstack		1047723	2					
ANR	1047742	Identifier	errstack		1047723	0					
ANR	1047743	Argument	non_blocking		1047723	3					
ANR	1047744	Identifier	non_blocking		1047723	0					
ANR	1047745	Label	case Stream :: safe_sock :	578:1:13067:13089	1047723	2	True				
ANR	1047746	Identifier	Stream :: safe_sock		1047723	0					
ANR	1047747	ReturnStatement	"return safeSock ( timeout , deadline , errstack , non_blocking ) ;"	579:2:13093:13151	1047723	3	True				
ANR	1047748	CallExpression	"safeSock ( timeout , deadline , errstack , non_blocking )"		1047723	0					
ANR	1047749	Callee	safeSock		1047723	0					
ANR	1047750	Identifier	safeSock		1047723	0					
ANR	1047751	ArgumentList	timeout		1047723	1					
ANR	1047752	Argument	timeout		1047723	0					
ANR	1047753	Identifier	timeout		1047723	0					
ANR	1047754	Argument	deadline		1047723	1					
ANR	1047755	Identifier	deadline		1047723	0					
ANR	1047756	Argument	errstack		1047723	2					
ANR	1047757	Identifier	errstack		1047723	0					
ANR	1047758	Argument	non_blocking		1047723	3					
ANR	1047759	Identifier	non_blocking		1047723	0					
ANR	1047760	Label	default :	580:1:13154:13161	1047723	4	True				
ANR	1047761	Identifier	default		1047723	0					
ANR	1047762	BreakStatement	break ;	580:10:13163:13168	1047723	5	True				
ANR	1047763	ExpressionStatement	"EXCEPT ( ""Unknown stream_type (%d) in Daemon::makeConnectedSocket"" , ( int ) st )"	583:1:13175:13254	1047723	1	True				
ANR	1047764	CallExpression	"EXCEPT ( ""Unknown stream_type (%d) in Daemon::makeConnectedSocket"" , ( int ) st )"		1047723	0					
ANR	1047765	Callee	EXCEPT		1047723	0					
ANR	1047766	Identifier	EXCEPT		1047723	0					
ANR	1047767	ArgumentList	"""Unknown stream_type (%d) in Daemon::makeConnectedSocket"""		1047723	1					
ANR	1047768	Argument	"""Unknown stream_type (%d) in Daemon::makeConnectedSocket"""		1047723	0					
ANR	1047769	PrimaryExpression	"""Unknown stream_type (%d) in Daemon::makeConnectedSocket"""		1047723	0					
ANR	1047770	Argument	( int ) st		1047723	1					
ANR	1047771	CastExpression	( int ) st		1047723	0					
ANR	1047772	CastTarget	int		1047723	0					
ANR	1047773	Identifier	st		1047723	1					
ANR	1047774	ReturnStatement	return NULL ;	585:1:13257:13268	1047723	2	True				
ANR	1047775	Identifier	NULL		1047723	0					
ANR	1047776	ReturnType	Sock *		1047723	1					
ANR	1047777	Identifier	Daemon :: makeConnectedSocket		1047723	2					
ANR	1047778	ParameterList	"Stream :: stream_type st , int timeout , time_t deadline , CondorError * errstack , bool non_blocking"		1047723	3					
ANR	1047779	Parameter	Stream :: stream_type st	571:29:12848:12869	1047723	0	True				
ANR	1047780	ParameterType	Stream :: stream_type		1047723	0					
ANR	1047781	Identifier	st		1047723	1					
ANR	1047782	Parameter	int timeout	572:8:12880:12890	1047723	1	True				
ANR	1047783	ParameterType	int		1047723	0					
ANR	1047784	Identifier	timeout		1047723	1					
ANR	1047785	Parameter	time_t deadline	572:21:12893:12907	1047723	2	True				
ANR	1047786	ParameterType	time_t		1047723	0					
ANR	1047787	Identifier	deadline		1047723	1					
ANR	1047788	Parameter	CondorError * errstack	573:8:12918:12938	1047723	3	True				
ANR	1047789	ParameterType	CondorError *		1047723	0					
ANR	1047790	Identifier	errstack		1047723	1					
ANR	1047791	Parameter	bool non_blocking	573:31:12941:12957	1047723	4	True				
ANR	1047792	ParameterType	bool		1047723	0					
ANR	1047793	Identifier	non_blocking		1047723	1					
ANR	1047794	CFGEntryNode	ENTRY		1047723		True				
ANR	1047795	CFGExitNode	EXIT		1047723		True				
ANR	1047796	Symbol	st		1047723						
ANR	1047797	Symbol	reliSock		1047723						
ANR	1047798	Symbol	non_blocking		1047723						
ANR	1047799	Symbol	errstack		1047723						
ANR	1047800	Symbol	NULL		1047723						
ANR	1047801	Symbol	safeSock		1047723						
ANR	1047802	Symbol	deadline		1047723						
ANR	1047803	Symbol	timeout		1047723						
ANR	1047804	Function	Daemon :: startCommand	588:0:13273:14426							
ANR	1047805	FunctionDef	"Daemon :: startCommand (int cmd , Stream :: stream_type st , Sock * * sock , int timeout , CondorError * errstack , StartCommandCallbackType * callback_fn , void * misc_data , bool nonblocking , char const * cmd_description , bool raw_protocol , char const * sec_session_id)"		1047804	0					
ANR	1047806	CompoundStatement		590:0:13545:14426	1047804	0					
ANR	1047807	ExpressionStatement	ASSERT ( ! nonblocking || callback_fn )	598:1:13902:13937	1047804	0	True				
ANR	1047808	CallExpression	ASSERT ( ! nonblocking || callback_fn )		1047804	0					
ANR	1047809	Callee	ASSERT		1047804	0					
ANR	1047810	Identifier	ASSERT		1047804	0					
ANR	1047811	ArgumentList	! nonblocking || callback_fn		1047804	1					
ANR	1047812	Argument	! nonblocking || callback_fn		1047804	0					
ANR	1047813	OrExpression	! nonblocking || callback_fn		1047804	0		||			
ANR	1047814	UnaryOperationExpression	! nonblocking		1047804	0					
ANR	1047815	UnaryOperator	!		1047804	0					
ANR	1047816	Identifier	nonblocking		1047804	1					
ANR	1047817	Identifier	callback_fn		1047804	1					
ANR	1047818	ExpressionStatement	"* sock = makeConnectedSocket ( st , timeout , 0 , errstack , nonblocking )"	600:1:13941:14003	1047804	1	True				
ANR	1047819	AssignmentExpression	"* sock = makeConnectedSocket ( st , timeout , 0 , errstack , nonblocking )"		1047804	0		=			
ANR	1047820	UnaryOperationExpression	* sock		1047804	0					
ANR	1047821	UnaryOperator	*		1047804	0					
ANR	1047822	Identifier	sock		1047804	1					
ANR	1047823	CallExpression	"makeConnectedSocket ( st , timeout , 0 , errstack , nonblocking )"		1047804	1					
ANR	1047824	Callee	makeConnectedSocket		1047804	0					
ANR	1047825	Identifier	makeConnectedSocket		1047804	0					
ANR	1047826	ArgumentList	st		1047804	1					
ANR	1047827	Argument	st		1047804	0					
ANR	1047828	Identifier	st		1047804	0					
ANR	1047829	Argument	timeout		1047804	1					
ANR	1047830	Identifier	timeout		1047804	0					
ANR	1047831	Argument	0		1047804	2					
ANR	1047832	PrimaryExpression	0		1047804	0					
ANR	1047833	Argument	errstack		1047804	3					
ANR	1047834	Identifier	errstack		1047804	0					
ANR	1047835	Argument	nonblocking		1047804	4					
ANR	1047836	Identifier	nonblocking		1047804	0					
ANR	1047837	IfStatement	if ( ! * sock )		1047804	2					
ANR	1047838	Condition	! * sock	601:5:14010:14016	1047804	0	True				
ANR	1047839	UnaryOperationExpression	! * sock		1047804	0					
ANR	1047840	UnaryOperator	!		1047804	0					
ANR	1047841	UnaryOperationExpression	* sock		1047804	1					
ANR	1047842	UnaryOperator	*		1047804	0					
ANR	1047843	Identifier	sock		1047804	1					
ANR	1047844	CompoundStatement		12:15:474:474	1047804	1					
ANR	1047845	IfStatement	if ( callback_fn )		1047804	0					
ANR	1047846	Condition	callback_fn	602:7:14029:14039	1047804	0	True				
ANR	1047847	Identifier	callback_fn		1047804	0					
ANR	1047848	CompoundStatement		13:21:497:497	1047804	1					
ANR	1047849	ExpressionStatement	"( * callback_fn ) ( false , NULL , errstack , misc_data )"	603:3:14048:14098	1047804	0	True				
ANR	1047850	CallExpression	"( * callback_fn ) ( false , NULL , errstack , misc_data )"		1047804	0					
ANR	1047851	Callee	* callback_fn		1047804	0					
ANR	1047852	UnaryOperationExpression	* callback_fn		1047804	0					
ANR	1047853	UnaryOperator	*		1047804	0					
ANR	1047854	Identifier	callback_fn		1047804	1					
ANR	1047855	ArgumentList	false		1047804	1					
ANR	1047856	Argument	false		1047804	0					
ANR	1047857	Identifier	false		1047804	0					
ANR	1047858	Argument	NULL		1047804	1					
ANR	1047859	Identifier	NULL		1047804	0					
ANR	1047860	Argument	errstack		1047804	2					
ANR	1047861	Identifier	errstack		1047804	0					
ANR	1047862	Argument	misc_data		1047804	3					
ANR	1047863	Identifier	misc_data		1047804	0					
ANR	1047864	ReturnStatement	return StartCommandSucceeded ;	604:3:14103:14131	1047804	1	True				
ANR	1047865	Identifier	StartCommandSucceeded		1047804	0					
ANR	1047866	ElseStatement	else		1047804	0					
ANR	1047867	CompoundStatement		16:9:596:596	1047804	0					
ANR	1047868	ReturnStatement	return StartCommandFailed ;	606:3:14147:14172	1047804	0	True				
ANR	1047869	Identifier	StartCommandFailed		1047804	0					
ANR	1047870	ReturnStatement	"return startCommand ( cmd , * sock , timeout , errstack , callback_fn , misc_data , nonblocking , cmd_description , _version , & _sec_man , raw_protocol , sec_session_id ) ;"	610:1:14183:14424	1047804	3	True				
ANR	1047871	CallExpression	"startCommand ( cmd , * sock , timeout , errstack , callback_fn , misc_data , nonblocking , cmd_description , _version , & _sec_man , raw_protocol , sec_session_id )"		1047804	0					
ANR	1047872	Callee	startCommand		1047804	0					
ANR	1047873	Identifier	startCommand		1047804	0					
ANR	1047874	ArgumentList	cmd		1047804	1					
ANR	1047875	Argument	cmd		1047804	0					
ANR	1047876	Identifier	cmd		1047804	0					
ANR	1047877	Argument	* sock		1047804	1					
ANR	1047878	UnaryOperationExpression	* sock		1047804	0					
ANR	1047879	UnaryOperator	*		1047804	0					
ANR	1047880	Identifier	sock		1047804	1					
ANR	1047881	Argument	timeout		1047804	2					
ANR	1047882	Identifier	timeout		1047804	0					
ANR	1047883	Argument	errstack		1047804	3					
ANR	1047884	Identifier	errstack		1047804	0					
ANR	1047885	Argument	callback_fn		1047804	4					
ANR	1047886	Identifier	callback_fn		1047804	0					
ANR	1047887	Argument	misc_data		1047804	5					
ANR	1047888	Identifier	misc_data		1047804	0					
ANR	1047889	Argument	nonblocking		1047804	6					
ANR	1047890	Identifier	nonblocking		1047804	0					
ANR	1047891	Argument	cmd_description		1047804	7					
ANR	1047892	Identifier	cmd_description		1047804	0					
ANR	1047893	Argument	_version		1047804	8					
ANR	1047894	Identifier	_version		1047804	0					
ANR	1047895	Argument	& _sec_man		1047804	9					
ANR	1047896	UnaryOperationExpression	& _sec_man		1047804	0					
ANR	1047897	UnaryOperator	&		1047804	0					
ANR	1047898	Identifier	_sec_man		1047804	1					
ANR	1047899	Argument	raw_protocol		1047804	10					
ANR	1047900	Identifier	raw_protocol		1047804	0					
ANR	1047901	Argument	sec_session_id		1047804	11					
ANR	1047902	Identifier	sec_session_id		1047804	0					
ANR	1047903	ReturnType	StartCommandResult		1047804	1					
ANR	1047904	Identifier	Daemon :: startCommand		1047804	2					
ANR	1047905	ParameterList	"int cmd , Stream :: stream_type st , Sock * * sock , int timeout , CondorError * errstack , StartCommandCallbackType * callback_fn , void * misc_data , bool nonblocking , char const * cmd_description , bool raw_protocol , char const * sec_session_id"		1047804	3					
ANR	1047906	Parameter	int cmd	589:22:13314:13320	1047804	0	True				
ANR	1047907	ParameterType	int		1047804	0					
ANR	1047908	Identifier	cmd		1047804	1					
ANR	1047909	Parameter	Stream :: stream_type st	589:31:13323:13344	1047804	1	True				
ANR	1047910	ParameterType	Stream :: stream_type		1047804	0					
ANR	1047911	Identifier	st		1047804	1					
ANR	1047912	Parameter	Sock * * sock	589:54:13346:13356	1047804	2	True				
ANR	1047913	ParameterType	Sock * *		1047804	0					
ANR	1047914	Identifier	sock		1047804	1					
ANR	1047915	Parameter	int timeout	589:66:13358:13368	1047804	3	True				
ANR	1047916	ParameterType	int		1047804	0					
ANR	1047917	Identifier	timeout		1047804	1					
ANR	1047918	Parameter	CondorError * errstack	589:79:13371:13391	1047804	4	True				
ANR	1047919	ParameterType	CondorError *		1047804	0					
ANR	1047920	Identifier	errstack		1047804	1					
ANR	1047921	Parameter	StartCommandCallbackType * callback_fn	589:102:13394:13430	1047804	5	True				
ANR	1047922	ParameterType	StartCommandCallbackType *		1047804	0					
ANR	1047923	Identifier	callback_fn		1047804	1					
ANR	1047924	Parameter	void * misc_data	589:141:13433:13447	1047804	6	True				
ANR	1047925	ParameterType	void *		1047804	0					
ANR	1047926	Identifier	misc_data		1047804	1					
ANR	1047927	Parameter	bool nonblocking	589:158:13450:13465	1047804	7	True				
ANR	1047928	ParameterType	bool		1047804	0					
ANR	1047929	Identifier	nonblocking		1047804	1					
ANR	1047930	Parameter	char const * cmd_description	589:176:13468:13494	1047804	8	True				
ANR	1047931	ParameterType	char const *		1047804	0					
ANR	1047932	Identifier	cmd_description		1047804	1					
ANR	1047933	Parameter	bool raw_protocol	589:205:13497:13513	1047804	9	True				
ANR	1047934	ParameterType	bool		1047804	0					
ANR	1047935	Identifier	raw_protocol		1047804	1					
ANR	1047936	Parameter	char const * sec_session_id	589:224:13516:13541	1047804	10	True				
ANR	1047937	ParameterType	char const *		1047804	0					
ANR	1047938	Identifier	sec_session_id		1047804	1					
ANR	1047939	CFGEntryNode	ENTRY		1047804		True				
ANR	1047940	CFGExitNode	EXIT		1047804		True				
ANR	1047941	Symbol	sec_session_id		1047804						
ANR	1047942	Symbol	makeConnectedSocket		1047804						
ANR	1047943	Symbol	st		1047804						
ANR	1047944	Symbol	NULL		1047804						
ANR	1047945	Symbol	nonblocking		1047804						
ANR	1047946	Symbol	false		1047804						
ANR	1047947	Symbol	StartCommandFailed		1047804						
ANR	1047948	Symbol	startCommand		1047804						
ANR	1047949	Symbol	& _sec_man		1047804						
ANR	1047950	Symbol	timeout		1047804						
ANR	1047951	Symbol	cmd_description		1047804						
ANR	1047952	Symbol	sock		1047804						
ANR	1047953	Symbol	StartCommandSucceeded		1047804						
ANR	1047954	Symbol	callback_fn		1047804						
ANR	1047955	Symbol	errstack		1047804						
ANR	1047956	Symbol	misc_data		1047804						
ANR	1047957	Symbol	raw_protocol		1047804						
ANR	1047958	Symbol	cmd		1047804						
ANR	1047959	Symbol	_version		1047804						
ANR	1047960	Symbol	* sock		1047804						
ANR	1047961	Function	Daemon :: startCommand	625:0:14429:15195							
ANR	1047962	FunctionDef	"Daemon :: startCommand (int cmd , Stream :: stream_type st , int timeout , CondorError * errstack , char const * cmd_description , bool raw_protocol , char const * sec_session_id)"		1047961	0					
ANR	1047963	CompoundStatement		627:0:14603:15195	1047961	0					
ANR	1047964	IdentifierDeclStatement	const bool nonblocking = false ;	629:1:14654:14684	1047961	0	True				
ANR	1047965	IdentifierDecl	nonblocking = false		1047961	0					
ANR	1047966	IdentifierDeclType	const bool		1047961	0					
ANR	1047967	Identifier	nonblocking		1047961	1					
ANR	1047968	AssignmentExpression	nonblocking = false		1047961	2		=			
ANR	1047969	Identifier	false		1047961	0					
ANR	1047970	Identifier	false		1047961	1					
ANR	1047971	IdentifierDeclStatement	Sock * sock = NULL ;	630:1:14687:14704	1047961	1	True				
ANR	1047972	IdentifierDecl	* sock = NULL		1047961	0					
ANR	1047973	IdentifierDeclType	Sock *		1047961	0					
ANR	1047974	Identifier	sock		1047961	1					
ANR	1047975	AssignmentExpression	* sock = NULL		1047961	2		=			
ANR	1047976	Identifier	NULL		1047961	0					
ANR	1047977	Identifier	NULL		1047961	1					
ANR	1047978	IdentifierDeclStatement	"StartCommandResult rc = startCommand ( cmd , st , & sock , timeout , errstack , NULL , NULL , nonblocking , cmd_description , raw_protocol , sec_session_id ) ;"	631:1:14707:14840	1047961	2	True				
ANR	1047979	IdentifierDecl	"rc = startCommand ( cmd , st , & sock , timeout , errstack , NULL , NULL , nonblocking , cmd_description , raw_protocol , sec_session_id )"		1047961	0					
ANR	1047980	IdentifierDeclType	StartCommandResult		1047961	0					
ANR	1047981	Identifier	rc		1047961	1					
ANR	1047982	AssignmentExpression	"rc = startCommand ( cmd , st , & sock , timeout , errstack , NULL , NULL , nonblocking , cmd_description , raw_protocol , sec_session_id )"		1047961	2		=			
ANR	1047983	Identifier	rc		1047961	0					
ANR	1047984	CallExpression	"startCommand ( cmd , st , & sock , timeout , errstack , NULL , NULL , nonblocking , cmd_description , raw_protocol , sec_session_id )"		1047961	1					
ANR	1047985	Callee	startCommand		1047961	0					
ANR	1047986	Identifier	startCommand		1047961	0					
ANR	1047987	ArgumentList	cmd		1047961	1					
ANR	1047988	Argument	cmd		1047961	0					
ANR	1047989	Identifier	cmd		1047961	0					
ANR	1047990	Argument	st		1047961	1					
ANR	1047991	Identifier	st		1047961	0					
ANR	1047992	Argument	& sock		1047961	2					
ANR	1047993	UnaryOperationExpression	& sock		1047961	0					
ANR	1047994	UnaryOperator	&		1047961	0					
ANR	1047995	Identifier	sock		1047961	1					
ANR	1047996	Argument	timeout		1047961	3					
ANR	1047997	Identifier	timeout		1047961	0					
ANR	1047998	Argument	errstack		1047961	4					
ANR	1047999	Identifier	errstack		1047961	0					
ANR	1048000	Argument	NULL		1047961	5					
ANR	1048001	Identifier	NULL		1047961	0					
ANR	1048002	Argument	NULL		1047961	6					
ANR	1048003	Identifier	NULL		1047961	0					
ANR	1048004	Argument	nonblocking		1047961	7					
ANR	1048005	Identifier	nonblocking		1047961	0					
ANR	1048006	Argument	cmd_description		1047961	8					
ANR	1048007	Identifier	cmd_description		1047961	0					
ANR	1048008	Argument	raw_protocol		1047961	9					
ANR	1048009	Identifier	raw_protocol		1047961	0					
ANR	1048010	Argument	sec_session_id		1047961	10					
ANR	1048011	Identifier	sec_session_id		1047961	0					
ANR	1048012	SwitchStatement	switch ( rc )		1047961	3					
ANR	1048013	Condition	rc	632:8:14850:14851	1047961	0	True				
ANR	1048014	Identifier	rc		1047961	0					
ANR	1048015	CompoundStatement		6:12:250:250	1047961	1					
ANR	1048016	Label	case StartCommandSucceeded :	633:1:14857:14883	1047961	0	True				
ANR	1048017	Identifier	StartCommandSucceeded		1047961	0					
ANR	1048018	ReturnStatement	return sock ;	634:2:14887:14898	1047961	1	True				
ANR	1048019	Identifier	sock		1047961	0					
ANR	1048020	Label	case StartCommandFailed :	635:1:14901:14924	1047961	2	True				
ANR	1048021	Identifier	StartCommandFailed		1047961	0					
ANR	1048022	IfStatement	if ( sock )		1047961	3					
ANR	1048023	Condition	sock	636:5:14931:14934	1047961	0	True				
ANR	1048024	Identifier	sock		1047961	0					
ANR	1048025	CompoundStatement		10:11:333:333	1047961	1					
ANR	1048026	Statement	delete	637:3:14942:14947	1047961	0	True				
ANR	1048027	ExpressionStatement	sock	637:10:14949:14953	1047961	1	True				
ANR	1048028	Identifier	sock		1047961	0					
ANR	1048029	ReturnStatement	return NULL ;	639:2:14961:14972	1047961	4	True				
ANR	1048030	Identifier	NULL		1047961	0					
ANR	1048031	Label	case StartCommandInProgress :	640:1:14975:15002	1047961	5	True				
ANR	1048032	Identifier	StartCommandInProgress		1047961	0					
ANR	1048033	Label	case StartCommandWouldBlock :	641:1:15005:15032	1047961	6	True				
ANR	1048034	Identifier	StartCommandWouldBlock		1047961	0					
ANR	1048035	Label	case StartCommandContinue :	642:1:15049:15074	1047961	7	True				
ANR	1048036	Identifier	StartCommandContinue		1047961	0					
ANR	1048037	BreakStatement	break ;	643:2:15092:15097	1047961	8	True				
ANR	1048038	ExpressionStatement	"EXCEPT ( ""startCommand(blocking=true) returned an unexpected result: %d\\n"" , rc )"	645:1:15103:15179	1047961	4	True				
ANR	1048039	CallExpression	"EXCEPT ( ""startCommand(blocking=true) returned an unexpected result: %d\\n"" , rc )"		1047961	0					
ANR	1048040	Callee	EXCEPT		1047961	0					
ANR	1048041	Identifier	EXCEPT		1047961	0					
ANR	1048042	ArgumentList	"""startCommand(blocking=true) returned an unexpected result: %d\\n"""		1047961	1					
ANR	1048043	Argument	"""startCommand(blocking=true) returned an unexpected result: %d\\n"""		1047961	0					
ANR	1048044	PrimaryExpression	"""startCommand(blocking=true) returned an unexpected result: %d\\n"""		1047961	0					
ANR	1048045	Argument	rc		1047961	1					
ANR	1048046	Identifier	rc		1047961	0					
ANR	1048047	ReturnStatement	return NULL ;	646:1:15182:15193	1047961	5	True				
ANR	1048048	Identifier	NULL		1047961	0					
ANR	1048049	ReturnType	Sock *		1047961	1					
ANR	1048050	Identifier	Daemon :: startCommand		1047961	2					
ANR	1048051	ParameterList	"int cmd , Stream :: stream_type st , int timeout , CondorError * errstack , char const * cmd_description , bool raw_protocol , char const * sec_session_id"		1047961	3					
ANR	1048052	Parameter	int cmd	626:22:14457:14463	1047961	0	True				
ANR	1048053	ParameterType	int		1047961	0					
ANR	1048054	Identifier	cmd		1047961	1					
ANR	1048055	Parameter	Stream :: stream_type st	626:31:14466:14487	1047961	1	True				
ANR	1048056	ParameterType	Stream :: stream_type		1047961	0					
ANR	1048057	Identifier	st		1047961	1					
ANR	1048058	Parameter	int timeout	626:55:14490:14500	1047961	2	True				
ANR	1048059	ParameterType	int		1047961	0					
ANR	1048060	Identifier	timeout		1047961	1					
ANR	1048061	Parameter	CondorError * errstack	626:68:14503:14523	1047961	3	True				
ANR	1048062	ParameterType	CondorError *		1047961	0					
ANR	1048063	Identifier	errstack		1047961	1					
ANR	1048064	Parameter	char const * cmd_description	626:91:14526:14552	1047961	4	True				
ANR	1048065	ParameterType	char const *		1047961	0					
ANR	1048066	Identifier	cmd_description		1047961	1					
ANR	1048067	Parameter	bool raw_protocol	626:120:14555:14571	1047961	5	True				
ANR	1048068	ParameterType	bool		1047961	0					
ANR	1048069	Identifier	raw_protocol		1047961	1					
ANR	1048070	Parameter	char const * sec_session_id	626:139:14574:14599	1047961	6	True				
ANR	1048071	ParameterType	char const *		1047961	0					
ANR	1048072	Identifier	sec_session_id		1047961	1					
ANR	1048073	CFGEntryNode	ENTRY		1047961		True				
ANR	1048074	CFGExitNode	EXIT		1047961		True				
ANR	1048075	Symbol	sec_session_id		1047961						
ANR	1048076	Symbol	st		1047961						
ANR	1048077	Symbol	NULL		1047961						
ANR	1048078	Symbol	nonblocking		1047961						
ANR	1048079	Symbol	false		1047961						
ANR	1048080	Symbol	startCommand		1047961						
ANR	1048081	Symbol	timeout		1047961						
ANR	1048082	Symbol	cmd_description		1047961						
ANR	1048083	Symbol	& sock		1047961						
ANR	1048084	Symbol	sock		1047961						
ANR	1048085	Symbol	rc		1047961						
ANR	1048086	Symbol	errstack		1047961						
ANR	1048087	Symbol	raw_protocol		1047961						
ANR	1048088	Symbol	cmd		1047961						
ANR	1048089	Function	Daemon :: startCommand_nonblocking	649:0:15198:15786							
ANR	1048090	FunctionDef	"Daemon :: startCommand_nonblocking (int cmd , Stream :: stream_type st , int timeout , CondorError * errstack , StartCommandCallbackType * callback_fn , void * misc_data , char const * cmd_description , bool raw_protocol , char const * sec_session_id)"		1048089	0					
ANR	1048091	CompoundStatement		651:0:15453:15786	1048089	0					
ANR	1048092	IdentifierDeclStatement	const int nonblocking = true ;	653:1:15507:15535	1048089	0	True				
ANR	1048093	IdentifierDecl	nonblocking = true		1048089	0					
ANR	1048094	IdentifierDeclType	const int		1048089	0					
ANR	1048095	Identifier	nonblocking		1048089	1					
ANR	1048096	AssignmentExpression	nonblocking = true		1048089	2		=			
ANR	1048097	Identifier	true		1048089	0					
ANR	1048098	Identifier	true		1048089	1					
ANR	1048099	IdentifierDeclStatement	Sock * sock = NULL ;	654:1:15538:15555	1048089	1	True				
ANR	1048100	IdentifierDecl	* sock = NULL		1048089	0					
ANR	1048101	IdentifierDeclType	Sock *		1048089	0					
ANR	1048102	Identifier	sock		1048089	1					
ANR	1048103	AssignmentExpression	* sock = NULL		1048089	2		=			
ANR	1048104	Identifier	NULL		1048089	0					
ANR	1048105	Identifier	NULL		1048089	1					
ANR	1048106	ReturnStatement	"return startCommand ( cmd , st , & sock , timeout , errstack , callback_fn , misc_data , nonblocking , cmd_description , raw_protocol , sec_session_id ) ;"	657:1:15656:15784	1048089	2	True				
ANR	1048107	CallExpression	"startCommand ( cmd , st , & sock , timeout , errstack , callback_fn , misc_data , nonblocking , cmd_description , raw_protocol , sec_session_id )"		1048089	0					
ANR	1048108	Callee	startCommand		1048089	0					
ANR	1048109	Identifier	startCommand		1048089	0					
ANR	1048110	ArgumentList	cmd		1048089	1					
ANR	1048111	Argument	cmd		1048089	0					
ANR	1048112	Identifier	cmd		1048089	0					
ANR	1048113	Argument	st		1048089	1					
ANR	1048114	Identifier	st		1048089	0					
ANR	1048115	Argument	& sock		1048089	2					
ANR	1048116	UnaryOperationExpression	& sock		1048089	0					
ANR	1048117	UnaryOperator	&		1048089	0					
ANR	1048118	Identifier	sock		1048089	1					
ANR	1048119	Argument	timeout		1048089	3					
ANR	1048120	Identifier	timeout		1048089	0					
ANR	1048121	Argument	errstack		1048089	4					
ANR	1048122	Identifier	errstack		1048089	0					
ANR	1048123	Argument	callback_fn		1048089	5					
ANR	1048124	Identifier	callback_fn		1048089	0					
ANR	1048125	Argument	misc_data		1048089	6					
ANR	1048126	Identifier	misc_data		1048089	0					
ANR	1048127	Argument	nonblocking		1048089	7					
ANR	1048128	Identifier	nonblocking		1048089	0					
ANR	1048129	Argument	cmd_description		1048089	8					
ANR	1048130	Identifier	cmd_description		1048089	0					
ANR	1048131	Argument	raw_protocol		1048089	9					
ANR	1048132	Identifier	raw_protocol		1048089	0					
ANR	1048133	Argument	sec_session_id		1048089	10					
ANR	1048134	Identifier	sec_session_id		1048089	0					
ANR	1048135	ReturnType	StartCommandResult		1048089	1					
ANR	1048136	Identifier	Daemon :: startCommand_nonblocking		1048089	2					
ANR	1048137	ParameterList	"int cmd , Stream :: stream_type st , int timeout , CondorError * errstack , StartCommandCallbackType * callback_fn , void * misc_data , char const * cmd_description , bool raw_protocol , char const * sec_session_id"		1048089	3					
ANR	1048138	Parameter	int cmd	650:34:15251:15257	1048089	0	True				
ANR	1048139	ParameterType	int		1048089	0					
ANR	1048140	Identifier	cmd		1048089	1					
ANR	1048141	Parameter	Stream :: stream_type st	650:43:15260:15281	1048089	1	True				
ANR	1048142	ParameterType	Stream :: stream_type		1048089	0					
ANR	1048143	Identifier	st		1048089	1					
ANR	1048144	Parameter	int timeout	650:67:15284:15294	1048089	2	True				
ANR	1048145	ParameterType	int		1048089	0					
ANR	1048146	Identifier	timeout		1048089	1					
ANR	1048147	Parameter	CondorError * errstack	650:80:15297:15317	1048089	3	True				
ANR	1048148	ParameterType	CondorError *		1048089	0					
ANR	1048149	Identifier	errstack		1048089	1					
ANR	1048150	Parameter	StartCommandCallbackType * callback_fn	650:103:15320:15356	1048089	4	True				
ANR	1048151	ParameterType	StartCommandCallbackType *		1048089	0					
ANR	1048152	Identifier	callback_fn		1048089	1					
ANR	1048153	Parameter	void * misc_data	650:142:15359:15373	1048089	5	True				
ANR	1048154	ParameterType	void *		1048089	0					
ANR	1048155	Identifier	misc_data		1048089	1					
ANR	1048156	Parameter	char const * cmd_description	650:159:15376:15402	1048089	6	True				
ANR	1048157	ParameterType	char const *		1048089	0					
ANR	1048158	Identifier	cmd_description		1048089	1					
ANR	1048159	Parameter	bool raw_protocol	650:188:15405:15421	1048089	7	True				
ANR	1048160	ParameterType	bool		1048089	0					
ANR	1048161	Identifier	raw_protocol		1048089	1					
ANR	1048162	Parameter	char const * sec_session_id	650:207:15424:15449	1048089	8	True				
ANR	1048163	ParameterType	char const *		1048089	0					
ANR	1048164	Identifier	sec_session_id		1048089	1					
ANR	1048165	CFGEntryNode	ENTRY		1048089		True				
ANR	1048166	CFGExitNode	EXIT		1048089		True				
ANR	1048167	Symbol	sec_session_id		1048089						
ANR	1048168	Symbol	st		1048089						
ANR	1048169	Symbol	NULL		1048089						
ANR	1048170	Symbol	nonblocking		1048089						
ANR	1048171	Symbol	startCommand		1048089						
ANR	1048172	Symbol	timeout		1048089						
ANR	1048173	Symbol	cmd_description		1048089						
ANR	1048174	Symbol	& sock		1048089						
ANR	1048175	Symbol	sock		1048089						
ANR	1048176	Symbol	callback_fn		1048089						
ANR	1048177	Symbol	errstack		1048089						
ANR	1048178	Symbol	true		1048089						
ANR	1048179	Symbol	misc_data		1048089						
ANR	1048180	Symbol	raw_protocol		1048089						
ANR	1048181	Symbol	cmd		1048089						
ANR	1048182	Function	Daemon :: startCommand_nonblocking	660:0:15789:16267							
ANR	1048183	FunctionDef	"Daemon :: startCommand_nonblocking (int cmd , Sock * sock , int timeout , CondorError * errstack , StartCommandCallbackType * callback_fn , void * misc_data , char const * cmd_description , bool raw_protocol , char const * sec_session_id)"		1048182	0					
ANR	1048184	CompoundStatement		662:0:16032:16267	1048182	0					
ANR	1048185	IdentifierDeclStatement	const bool nonblocking = true ;	664:1:16090:16119	1048182	0	True				
ANR	1048186	IdentifierDecl	nonblocking = true		1048182	0					
ANR	1048187	IdentifierDeclType	const bool		1048182	0					
ANR	1048188	Identifier	nonblocking		1048182	1					
ANR	1048189	AssignmentExpression	nonblocking = true		1048182	2		=			
ANR	1048190	Identifier	true		1048182	0					
ANR	1048191	Identifier	true		1048182	1					
ANR	1048192	ReturnStatement	"return startCommand ( cmd , sock , timeout , errstack , callback_fn , misc_data , nonblocking , cmd_description , _version , & _sec_man , raw_protocol , sec_session_id ) ;"	665:1:16122:16265	1048182	1	True				
ANR	1048193	CallExpression	"startCommand ( cmd , sock , timeout , errstack , callback_fn , misc_data , nonblocking , cmd_description , _version , & _sec_man , raw_protocol , sec_session_id )"		1048182	0					
ANR	1048194	Callee	startCommand		1048182	0					
ANR	1048195	Identifier	startCommand		1048182	0					
ANR	1048196	ArgumentList	cmd		1048182	1					
ANR	1048197	Argument	cmd		1048182	0					
ANR	1048198	Identifier	cmd		1048182	0					
ANR	1048199	Argument	sock		1048182	1					
ANR	1048200	Identifier	sock		1048182	0					
ANR	1048201	Argument	timeout		1048182	2					
ANR	1048202	Identifier	timeout		1048182	0					
ANR	1048203	Argument	errstack		1048182	3					
ANR	1048204	Identifier	errstack		1048182	0					
ANR	1048205	Argument	callback_fn		1048182	4					
ANR	1048206	Identifier	callback_fn		1048182	0					
ANR	1048207	Argument	misc_data		1048182	5					
ANR	1048208	Identifier	misc_data		1048182	0					
ANR	1048209	Argument	nonblocking		1048182	6					
ANR	1048210	Identifier	nonblocking		1048182	0					
ANR	1048211	Argument	cmd_description		1048182	7					
ANR	1048212	Identifier	cmd_description		1048182	0					
ANR	1048213	Argument	_version		1048182	8					
ANR	1048214	Identifier	_version		1048182	0					
ANR	1048215	Argument	& _sec_man		1048182	9					
ANR	1048216	UnaryOperationExpression	& _sec_man		1048182	0					
ANR	1048217	UnaryOperator	&		1048182	0					
ANR	1048218	Identifier	_sec_man		1048182	1					
ANR	1048219	Argument	raw_protocol		1048182	10					
ANR	1048220	Identifier	raw_protocol		1048182	0					
ANR	1048221	Argument	sec_session_id		1048182	11					
ANR	1048222	Identifier	sec_session_id		1048182	0					
ANR	1048223	ReturnType	StartCommandResult		1048182	1					
ANR	1048224	Identifier	Daemon :: startCommand_nonblocking		1048182	2					
ANR	1048225	ParameterList	"int cmd , Sock * sock , int timeout , CondorError * errstack , StartCommandCallbackType * callback_fn , void * misc_data , char const * cmd_description , bool raw_protocol , char const * sec_session_id"		1048182	3					
ANR	1048226	Parameter	int cmd	661:34:15842:15848	1048182	0	True				
ANR	1048227	ParameterType	int		1048182	0					
ANR	1048228	Identifier	cmd		1048182	1					
ANR	1048229	Parameter	Sock * sock	661:43:15851:15860	1048182	1	True				
ANR	1048230	ParameterType	Sock *		1048182	0					
ANR	1048231	Identifier	sock		1048182	1					
ANR	1048232	Parameter	int timeout	661:55:15863:15873	1048182	2	True				
ANR	1048233	ParameterType	int		1048182	0					
ANR	1048234	Identifier	timeout		1048182	1					
ANR	1048235	Parameter	CondorError * errstack	661:68:15876:15896	1048182	3	True				
ANR	1048236	ParameterType	CondorError *		1048182	0					
ANR	1048237	Identifier	errstack		1048182	1					
ANR	1048238	Parameter	StartCommandCallbackType * callback_fn	661:91:15899:15935	1048182	4	True				
ANR	1048239	ParameterType	StartCommandCallbackType *		1048182	0					
ANR	1048240	Identifier	callback_fn		1048182	1					
ANR	1048241	Parameter	void * misc_data	661:130:15938:15952	1048182	5	True				
ANR	1048242	ParameterType	void *		1048182	0					
ANR	1048243	Identifier	misc_data		1048182	1					
ANR	1048244	Parameter	char const * cmd_description	661:147:15955:15981	1048182	6	True				
ANR	1048245	ParameterType	char const *		1048182	0					
ANR	1048246	Identifier	cmd_description		1048182	1					
ANR	1048247	Parameter	bool raw_protocol	661:176:15984:16000	1048182	7	True				
ANR	1048248	ParameterType	bool		1048182	0					
ANR	1048249	Identifier	raw_protocol		1048182	1					
ANR	1048250	Parameter	char const * sec_session_id	661:195:16003:16028	1048182	8	True				
ANR	1048251	ParameterType	char const *		1048182	0					
ANR	1048252	Identifier	sec_session_id		1048182	1					
ANR	1048253	CFGEntryNode	ENTRY		1048182		True				
ANR	1048254	CFGExitNode	EXIT		1048182		True				
ANR	1048255	Symbol	sec_session_id		1048182						
ANR	1048256	Symbol	nonblocking		1048182						
ANR	1048257	Symbol	startCommand		1048182						
ANR	1048258	Symbol	& _sec_man		1048182						
ANR	1048259	Symbol	timeout		1048182						
ANR	1048260	Symbol	cmd_description		1048182						
ANR	1048261	Symbol	sock		1048182						
ANR	1048262	Symbol	callback_fn		1048182						
ANR	1048263	Symbol	errstack		1048182						
ANR	1048264	Symbol	true		1048182						
ANR	1048265	Symbol	misc_data		1048182						
ANR	1048266	Symbol	raw_protocol		1048182						
ANR	1048267	Symbol	cmd		1048182						
ANR	1048268	Symbol	_version		1048182						
ANR	1048269	Function	Daemon :: startCommand	668:0:16270:16992							
ANR	1048270	FunctionDef	"Daemon :: startCommand (int cmd , Sock * sock , int timeout , CondorError * errstack , char const * cmd_description , bool raw_protocol , char const * sec_session_id)"		1048269	0					
ANR	1048271	CompoundStatement		670:0:16430:16992	1048269	0					
ANR	1048272	IdentifierDeclStatement	const bool nonblocking = false ;	672:1:16483:16513	1048269	0	True				
ANR	1048273	IdentifierDecl	nonblocking = false		1048269	0					
ANR	1048274	IdentifierDeclType	const bool		1048269	0					
ANR	1048275	Identifier	nonblocking		1048269	1					
ANR	1048276	AssignmentExpression	nonblocking = false		1048269	2		=			
ANR	1048277	Identifier	false		1048269	0					
ANR	1048278	Identifier	false		1048269	1					
ANR	1048279	IdentifierDeclStatement	"StartCommandResult rc = startCommand ( cmd , sock , timeout , errstack , NULL , NULL , nonblocking , cmd_description , _version , & _sec_man , raw_protocol , sec_session_id ) ;"	673:1:16516:16664	1048269	1	True				
ANR	1048280	IdentifierDecl	"rc = startCommand ( cmd , sock , timeout , errstack , NULL , NULL , nonblocking , cmd_description , _version , & _sec_man , raw_protocol , sec_session_id )"		1048269	0					
ANR	1048281	IdentifierDeclType	StartCommandResult		1048269	0					
ANR	1048282	Identifier	rc		1048269	1					
ANR	1048283	AssignmentExpression	"rc = startCommand ( cmd , sock , timeout , errstack , NULL , NULL , nonblocking , cmd_description , _version , & _sec_man , raw_protocol , sec_session_id )"		1048269	2		=			
ANR	1048284	Identifier	rc		1048269	0					
ANR	1048285	CallExpression	"startCommand ( cmd , sock , timeout , errstack , NULL , NULL , nonblocking , cmd_description , _version , & _sec_man , raw_protocol , sec_session_id )"		1048269	1					
ANR	1048286	Callee	startCommand		1048269	0					
ANR	1048287	Identifier	startCommand		1048269	0					
ANR	1048288	ArgumentList	cmd		1048269	1					
ANR	1048289	Argument	cmd		1048269	0					
ANR	1048290	Identifier	cmd		1048269	0					
ANR	1048291	Argument	sock		1048269	1					
ANR	1048292	Identifier	sock		1048269	0					
ANR	1048293	Argument	timeout		1048269	2					
ANR	1048294	Identifier	timeout		1048269	0					
ANR	1048295	Argument	errstack		1048269	3					
ANR	1048296	Identifier	errstack		1048269	0					
ANR	1048297	Argument	NULL		1048269	4					
ANR	1048298	Identifier	NULL		1048269	0					
ANR	1048299	Argument	NULL		1048269	5					
ANR	1048300	Identifier	NULL		1048269	0					
ANR	1048301	Argument	nonblocking		1048269	6					
ANR	1048302	Identifier	nonblocking		1048269	0					
ANR	1048303	Argument	cmd_description		1048269	7					
ANR	1048304	Identifier	cmd_description		1048269	0					
ANR	1048305	Argument	_version		1048269	8					
ANR	1048306	Identifier	_version		1048269	0					
ANR	1048307	Argument	& _sec_man		1048269	9					
ANR	1048308	UnaryOperationExpression	& _sec_man		1048269	0					
ANR	1048309	UnaryOperator	&		1048269	0					
ANR	1048310	Identifier	_sec_man		1048269	1					
ANR	1048311	Argument	raw_protocol		1048269	10					
ANR	1048312	Identifier	raw_protocol		1048269	0					
ANR	1048313	Argument	sec_session_id		1048269	11					
ANR	1048314	Identifier	sec_session_id		1048269	0					
ANR	1048315	SwitchStatement	switch ( rc )		1048269	2					
ANR	1048316	Condition	rc	674:8:16674:16675	1048269	0	True				
ANR	1048317	Identifier	rc		1048269	0					
ANR	1048318	CompoundStatement		5:12:247:247	1048269	1					
ANR	1048319	Label	case StartCommandSucceeded :	675:1:16681:16707	1048269	0	True				
ANR	1048320	Identifier	StartCommandSucceeded		1048269	0					
ANR	1048321	ReturnStatement	return true ;	676:2:16711:16722	1048269	1	True				
ANR	1048322	Identifier	true		1048269	0					
ANR	1048323	Label	case StartCommandFailed :	677:1:16725:16748	1048269	2	True				
ANR	1048324	Identifier	StartCommandFailed		1048269	0					
ANR	1048325	ReturnStatement	return false ;	678:2:16752:16764	1048269	3	True				
ANR	1048326	Identifier	false		1048269	0					
ANR	1048327	Label	case StartCommandInProgress :	679:1:16767:16794	1048269	4	True				
ANR	1048328	Identifier	StartCommandInProgress		1048269	0					
ANR	1048329	Label	case StartCommandWouldBlock :	680:1:16797:16824	1048269	5	True				
ANR	1048330	Identifier	StartCommandWouldBlock		1048269	0					
ANR	1048331	Label	case StartCommandContinue :	681:1:16841:16866	1048269	6	True				
ANR	1048332	Identifier	StartCommandContinue		1048269	0					
ANR	1048333	BreakStatement	break ;	682:2:16884:16889	1048269	7	True				
ANR	1048334	ExpressionStatement	"EXCEPT ( ""startCommand(nonblocking=false) returned an unexpected result: %d\\n"" , rc )"	684:1:16895:16975	1048269	3	True				
ANR	1048335	CallExpression	"EXCEPT ( ""startCommand(nonblocking=false) returned an unexpected result: %d\\n"" , rc )"		1048269	0					
ANR	1048336	Callee	EXCEPT		1048269	0					
ANR	1048337	Identifier	EXCEPT		1048269	0					
ANR	1048338	ArgumentList	"""startCommand(nonblocking=false) returned an unexpected result: %d\\n"""		1048269	1					
ANR	1048339	Argument	"""startCommand(nonblocking=false) returned an unexpected result: %d\\n"""		1048269	0					
ANR	1048340	PrimaryExpression	"""startCommand(nonblocking=false) returned an unexpected result: %d\\n"""		1048269	0					
ANR	1048341	Argument	rc		1048269	1					
ANR	1048342	Identifier	rc		1048269	0					
ANR	1048343	ReturnStatement	return false ;	685:1:16978:16990	1048269	4	True				
ANR	1048344	Identifier	false		1048269	0					
ANR	1048345	ReturnType	bool		1048269	1					
ANR	1048346	Identifier	Daemon :: startCommand		1048269	2					
ANR	1048347	ParameterList	"int cmd , Sock * sock , int timeout , CondorError * errstack , char const * cmd_description , bool raw_protocol , char const * sec_session_id"		1048269	3					
ANR	1048348	Parameter	int cmd	669:22:16297:16303	1048269	0	True				
ANR	1048349	ParameterType	int		1048269	0					
ANR	1048350	Identifier	cmd		1048269	1					
ANR	1048351	Parameter	Sock * sock	669:31:16306:16315	1048269	1	True				
ANR	1048352	ParameterType	Sock *		1048269	0					
ANR	1048353	Identifier	sock		1048269	1					
ANR	1048354	Parameter	int timeout	669:43:16318:16328	1048269	2	True				
ANR	1048355	ParameterType	int		1048269	0					
ANR	1048356	Identifier	timeout		1048269	1					
ANR	1048357	Parameter	CondorError * errstack	669:56:16331:16351	1048269	3	True				
ANR	1048358	ParameterType	CondorError *		1048269	0					
ANR	1048359	Identifier	errstack		1048269	1					
ANR	1048360	Parameter	char const * cmd_description	669:79:16354:16380	1048269	4	True				
ANR	1048361	ParameterType	char const *		1048269	0					
ANR	1048362	Identifier	cmd_description		1048269	1					
ANR	1048363	Parameter	bool raw_protocol	669:107:16382:16398	1048269	5	True				
ANR	1048364	ParameterType	bool		1048269	0					
ANR	1048365	Identifier	raw_protocol		1048269	1					
ANR	1048366	Parameter	char const * sec_session_id	669:126:16401:16426	1048269	6	True				
ANR	1048367	ParameterType	char const *		1048269	0					
ANR	1048368	Identifier	sec_session_id		1048269	1					
ANR	1048369	CFGEntryNode	ENTRY		1048269		True				
ANR	1048370	CFGExitNode	EXIT		1048269		True				
ANR	1048371	Symbol	sec_session_id		1048269						
ANR	1048372	Symbol	NULL		1048269						
ANR	1048373	Symbol	nonblocking		1048269						
ANR	1048374	Symbol	false		1048269						
ANR	1048375	Symbol	startCommand		1048269						
ANR	1048376	Symbol	& _sec_man		1048269						
ANR	1048377	Symbol	timeout		1048269						
ANR	1048378	Symbol	cmd_description		1048269						
ANR	1048379	Symbol	sock		1048269						
ANR	1048380	Symbol	rc		1048269						
ANR	1048381	Symbol	errstack		1048269						
ANR	1048382	Symbol	true		1048269						
ANR	1048383	Symbol	raw_protocol		1048269						
ANR	1048384	Symbol	cmd		1048269						
ANR	1048385	Symbol	_version		1048269						
ANR	1048386	Function	Daemon :: sendCommand	688:0:16995:17410							
ANR	1048387	FunctionDef	"Daemon :: sendCommand (int cmd , Sock * sock , int sec , CondorError * errstack , char const * cmd_description)"		1048386	0					
ANR	1048388	CompoundStatement		690:0:17104:17410	1048386	0					
ANR	1048389	IfStatement	"if ( ! startCommand ( cmd , sock , sec , errstack , cmd_description ) )"		1048386	0					
ANR	1048390	Condition	"! startCommand ( cmd , sock , sec , errstack , cmd_description )"	692:5:17113:17171	1048386	0	True				
ANR	1048391	UnaryOperationExpression	"! startCommand ( cmd , sock , sec , errstack , cmd_description )"		1048386	0					
ANR	1048392	UnaryOperator	!		1048386	0					
ANR	1048393	CallExpression	"startCommand ( cmd , sock , sec , errstack , cmd_description )"		1048386	1					
ANR	1048394	Callee	startCommand		1048386	0					
ANR	1048395	Identifier	startCommand		1048386	0					
ANR	1048396	ArgumentList	cmd		1048386	1					
ANR	1048397	Argument	cmd		1048386	0					
ANR	1048398	Identifier	cmd		1048386	0					
ANR	1048399	Argument	sock		1048386	1					
ANR	1048400	Identifier	sock		1048386	0					
ANR	1048401	Argument	sec		1048386	2					
ANR	1048402	Identifier	sec		1048386	0					
ANR	1048403	Argument	errstack		1048386	3					
ANR	1048404	Identifier	errstack		1048386	0					
ANR	1048405	Argument	cmd_description		1048386	4					
ANR	1048406	Identifier	cmd_description		1048386	0					
ANR	1048407	CompoundStatement		3:66:69:69	1048386	1					
ANR	1048408	ReturnStatement	return false ;	693:2:17178:17190	1048386	0	True				
ANR	1048409	Identifier	false		1048386	0					
ANR	1048410	IfStatement	if ( ! sock -> end_of_message ( ) )		1048386	1					
ANR	1048411	Condition	! sock -> end_of_message ( )	695:5:17200:17223	1048386	0	True				
ANR	1048412	UnaryOperationExpression	! sock -> end_of_message ( )		1048386	0					
ANR	1048413	UnaryOperator	!		1048386	0					
ANR	1048414	CallExpression	sock -> end_of_message ( )		1048386	1					
ANR	1048415	Callee	sock -> end_of_message		1048386	0					
ANR	1048416	PtrMemberAccess	sock -> end_of_message		1048386	0					
ANR	1048417	Identifier	sock		1048386	0					
ANR	1048418	Identifier	end_of_message		1048386	1					
ANR	1048419	ArgumentList			1048386	1					
ANR	1048420	CompoundStatement		7:2:126:142	1048386	1					
ANR	1048421	IdentifierDeclStatement	MyString err_buf ;	696:2:17231:17247	1048386	0	True				
ANR	1048422	IdentifierDecl	err_buf		1048386	0					
ANR	1048423	IdentifierDeclType	MyString		1048386	0					
ANR	1048424	Identifier	err_buf		1048386	1					
ANR	1048425	ExpressionStatement	"err_buf . sprintf ( ""Can't send eom for %d to %s"" , cmd , idStr ( ) )"	697:2:17251:17320	1048386	1	True				
ANR	1048426	CallExpression	"err_buf . sprintf ( ""Can't send eom for %d to %s"" , cmd , idStr ( ) )"		1048386	0					
ANR	1048427	Callee	err_buf . sprintf		1048386	0					
ANR	1048428	MemberAccess	err_buf . sprintf		1048386	0					
ANR	1048429	Identifier	err_buf		1048386	0					
ANR	1048430	Identifier	sprintf		1048386	1					
ANR	1048431	ArgumentList	"""Can't send eom for %d to %s"""		1048386	1					
ANR	1048432	Argument	"""Can't send eom for %d to %s"""		1048386	0					
ANR	1048433	PrimaryExpression	"""Can't send eom for %d to %s"""		1048386	0					
ANR	1048434	Argument	cmd		1048386	1					
ANR	1048435	Identifier	cmd		1048386	0					
ANR	1048436	Argument	idStr ( )		1048386	2					
ANR	1048437	CallExpression	idStr ( )		1048386	0					
ANR	1048438	Callee	idStr		1048386	0					
ANR	1048439	Identifier	idStr		1048386	0					
ANR	1048440	ArgumentList			1048386	1					
ANR	1048441	ExpressionStatement	"newError ( CA_COMMUNICATION_ERROR , err_buf . Value ( ) )"	699:2:17324:17375	1048386	2	True				
ANR	1048442	CallExpression	"newError ( CA_COMMUNICATION_ERROR , err_buf . Value ( ) )"		1048386	0					
ANR	1048443	Callee	newError		1048386	0					
ANR	1048444	Identifier	newError		1048386	0					
ANR	1048445	ArgumentList	CA_COMMUNICATION_ERROR		1048386	1					
ANR	1048446	Argument	CA_COMMUNICATION_ERROR		1048386	0					
ANR	1048447	Identifier	CA_COMMUNICATION_ERROR		1048386	0					
ANR	1048448	Argument	err_buf . Value ( )		1048386	1					
ANR	1048449	CallExpression	err_buf . Value ( )		1048386	0					
ANR	1048450	Callee	err_buf . Value		1048386	0					
ANR	1048451	MemberAccess	err_buf . Value		1048386	0					
ANR	1048452	Identifier	err_buf		1048386	0					
ANR	1048453	Identifier	Value		1048386	1					
ANR	1048454	ArgumentList			1048386	1					
ANR	1048455	ReturnStatement	return false ;	700:2:17379:17391	1048386	3	True				
ANR	1048456	Identifier	false		1048386	0					
ANR	1048457	ReturnStatement	return true ;	702:1:17397:17408	1048386	2	True				
ANR	1048458	Identifier	true		1048386	0					
ANR	1048459	ReturnType	bool		1048386	1					
ANR	1048460	Identifier	Daemon :: sendCommand		1048386	2					
ANR	1048461	ParameterList	"int cmd , Sock * sock , int sec , CondorError * errstack , char const * cmd_description"		1048386	3					
ANR	1048462	Parameter	int cmd	689:21:17021:17027	1048386	0	True				
ANR	1048463	ParameterType	int		1048386	0					
ANR	1048464	Identifier	cmd		1048386	1					
ANR	1048465	Parameter	Sock * sock	689:30:17030:17039	1048386	1	True				
ANR	1048466	ParameterType	Sock *		1048386	0					
ANR	1048467	Identifier	sock		1048386	1					
ANR	1048468	Parameter	int sec	689:42:17042:17048	1048386	2	True				
ANR	1048469	ParameterType	int		1048386	0					
ANR	1048470	Identifier	sec		1048386	1					
ANR	1048471	Parameter	CondorError * errstack	689:51:17051:17071	1048386	3	True				
ANR	1048472	ParameterType	CondorError *		1048386	0					
ANR	1048473	Identifier	errstack		1048386	1					
ANR	1048474	Parameter	char const * cmd_description	689:74:17074:17100	1048386	4	True				
ANR	1048475	ParameterType	char const *		1048386	0					
ANR	1048476	Identifier	cmd_description		1048386	1					
ANR	1048477	CFGEntryNode	ENTRY		1048386		True				
ANR	1048478	CFGExitNode	EXIT		1048386		True				
ANR	1048479	Symbol	idStr		1048386						
ANR	1048480	Symbol	sock -> end_of_message		1048386						
ANR	1048481	Symbol	false		1048386						
ANR	1048482	Symbol	err_buf		1048386						
ANR	1048483	Symbol	startCommand		1048386						
ANR	1048484	Symbol	cmd_description		1048386						
ANR	1048485	Symbol	sec		1048386						
ANR	1048486	Symbol	sock		1048386						
ANR	1048487	Symbol	errstack		1048386						
ANR	1048488	Symbol	true		1048386						
ANR	1048489	Symbol	cmd		1048386						
ANR	1048490	Symbol	err_buf . Value		1048386						
ANR	1048491	Symbol	* sock		1048386						
ANR	1048492	Symbol	CA_COMMUNICATION_ERROR		1048386						
ANR	1048493	Function	Daemon :: sendCommand	706:0:17414:17882							
ANR	1048494	FunctionDef	"Daemon :: sendCommand (int cmd , Stream :: stream_type st , int sec , CondorError * errstack , char const * cmd_description)"		1048493	0					
ANR	1048495	CompoundStatement		708:0:17535:17882	1048493	0					
ANR	1048496	IdentifierDeclStatement	"Sock * tmp = startCommand ( cmd , st , sec , errstack , cmd_description ) ;"	709:1:17538:17605	1048493	0	True				
ANR	1048497	IdentifierDecl	"* tmp = startCommand ( cmd , st , sec , errstack , cmd_description )"		1048493	0					
ANR	1048498	IdentifierDeclType	Sock *		1048493	0					
ANR	1048499	Identifier	tmp		1048493	1					
ANR	1048500	AssignmentExpression	"* tmp = startCommand ( cmd , st , sec , errstack , cmd_description )"		1048493	2		=			
ANR	1048501	Identifier	tmp		1048493	0					
ANR	1048502	CallExpression	"startCommand ( cmd , st , sec , errstack , cmd_description )"		1048493	1					
ANR	1048503	Callee	startCommand		1048493	0					
ANR	1048504	Identifier	startCommand		1048493	0					
ANR	1048505	ArgumentList	cmd		1048493	1					
ANR	1048506	Argument	cmd		1048493	0					
ANR	1048507	Identifier	cmd		1048493	0					
ANR	1048508	Argument	st		1048493	1					
ANR	1048509	Identifier	st		1048493	0					
ANR	1048510	Argument	sec		1048493	2					
ANR	1048511	Identifier	sec		1048493	0					
ANR	1048512	Argument	errstack		1048493	3					
ANR	1048513	Identifier	errstack		1048493	0					
ANR	1048514	Argument	cmd_description		1048493	4					
ANR	1048515	Identifier	cmd_description		1048493	0					
ANR	1048516	IfStatement	if ( ! tmp )		1048493	1					
ANR	1048517	Condition	! tmp	710:5:17612:17616	1048493	0	True				
ANR	1048518	UnaryOperationExpression	! tmp		1048493	0					
ANR	1048519	UnaryOperator	!		1048493	0					
ANR	1048520	Identifier	tmp		1048493	1					
ANR	1048521	CompoundStatement		3:13:84:84	1048493	1					
ANR	1048522	ReturnStatement	return false ;	711:2:17624:17636	1048493	0	True				
ANR	1048523	Identifier	false		1048493	0					
ANR	1048524	IfStatement	if ( ! tmp -> end_of_message ( ) )		1048493	2					
ANR	1048525	Condition	! tmp -> end_of_message ( )	713:5:17646:17668	1048493	0	True				
ANR	1048526	UnaryOperationExpression	! tmp -> end_of_message ( )		1048493	0					
ANR	1048527	UnaryOperator	!		1048493	0					
ANR	1048528	CallExpression	tmp -> end_of_message ( )		1048493	1					
ANR	1048529	Callee	tmp -> end_of_message		1048493	0					
ANR	1048530	PtrMemberAccess	tmp -> end_of_message		1048493	0					
ANR	1048531	Identifier	tmp		1048493	0					
ANR	1048532	Identifier	end_of_message		1048493	1					
ANR	1048533	ArgumentList			1048493	1					
ANR	1048534	CompoundStatement		7:2:140:156	1048493	1					
ANR	1048535	IdentifierDeclStatement	MyString err_buf ;	714:2:17676:17692	1048493	0	True				
ANR	1048536	IdentifierDecl	err_buf		1048493	0					
ANR	1048537	IdentifierDeclType	MyString		1048493	0					
ANR	1048538	Identifier	err_buf		1048493	1					
ANR	1048539	ExpressionStatement	"err_buf . sprintf ( ""Can't send eom for %d to %s"" , cmd , idStr ( ) )"	715:2:17696:17765	1048493	1	True				
ANR	1048540	CallExpression	"err_buf . sprintf ( ""Can't send eom for %d to %s"" , cmd , idStr ( ) )"		1048493	0					
ANR	1048541	Callee	err_buf . sprintf		1048493	0					
ANR	1048542	MemberAccess	err_buf . sprintf		1048493	0					
ANR	1048543	Identifier	err_buf		1048493	0					
ANR	1048544	Identifier	sprintf		1048493	1					
ANR	1048545	ArgumentList	"""Can't send eom for %d to %s"""		1048493	1					
ANR	1048546	Argument	"""Can't send eom for %d to %s"""		1048493	0					
ANR	1048547	PrimaryExpression	"""Can't send eom for %d to %s"""		1048493	0					
ANR	1048548	Argument	cmd		1048493	1					
ANR	1048549	Identifier	cmd		1048493	0					
ANR	1048550	Argument	idStr ( )		1048493	2					
ANR	1048551	CallExpression	idStr ( )		1048493	0					
ANR	1048552	Callee	idStr		1048493	0					
ANR	1048553	Identifier	idStr		1048493	0					
ANR	1048554	ArgumentList			1048493	1					
ANR	1048555	ExpressionStatement	"newError ( CA_COMMUNICATION_ERROR , err_buf . Value ( ) )"	717:2:17769:17820	1048493	2	True				
ANR	1048556	CallExpression	"newError ( CA_COMMUNICATION_ERROR , err_buf . Value ( ) )"		1048493	0					
ANR	1048557	Callee	newError		1048493	0					
ANR	1048558	Identifier	newError		1048493	0					
ANR	1048559	ArgumentList	CA_COMMUNICATION_ERROR		1048493	1					
ANR	1048560	Argument	CA_COMMUNICATION_ERROR		1048493	0					
ANR	1048561	Identifier	CA_COMMUNICATION_ERROR		1048493	0					
ANR	1048562	Argument	err_buf . Value ( )		1048493	1					
ANR	1048563	CallExpression	err_buf . Value ( )		1048493	0					
ANR	1048564	Callee	err_buf . Value		1048493	0					
ANR	1048565	MemberAccess	err_buf . Value		1048493	0					
ANR	1048566	Identifier	err_buf		1048493	0					
ANR	1048567	Identifier	Value		1048493	1					
ANR	1048568	ArgumentList			1048493	1					
ANR	1048569	Statement	delete	718:2:17824:17829	1048493	3	True				
ANR	1048570	ExpressionStatement	tmp	718:9:17831:17834	1048493	4	True				
ANR	1048571	Identifier	tmp		1048493	0					
ANR	1048572	ReturnStatement	return false ;	719:2:17838:17850	1048493	5	True				
ANR	1048573	Identifier	false		1048493	0					
ANR	1048574	Statement	delete	721:1:17856:17861	1048493	3	True				
ANR	1048575	ExpressionStatement	tmp	721:8:17863:17866	1048493	4	True				
ANR	1048576	Identifier	tmp		1048493	0					
ANR	1048577	ReturnStatement	return true ;	722:1:17869:17880	1048493	5	True				
ANR	1048578	Identifier	true		1048493	0					
ANR	1048579	ReturnType	bool		1048493	1					
ANR	1048580	Identifier	Daemon :: sendCommand		1048493	2					
ANR	1048581	ParameterList	"int cmd , Stream :: stream_type st , int sec , CondorError * errstack , char const * cmd_description"		1048493	3					
ANR	1048582	Parameter	int cmd	707:21:17440:17446	1048493	0	True				
ANR	1048583	ParameterType	int		1048493	0					
ANR	1048584	Identifier	cmd		1048493	1					
ANR	1048585	Parameter	Stream :: stream_type st	707:30:17449:17470	1048493	1	True				
ANR	1048586	ParameterType	Stream :: stream_type		1048493	0					
ANR	1048587	Identifier	st		1048493	1					
ANR	1048588	Parameter	int sec	707:54:17473:17479	1048493	2	True				
ANR	1048589	ParameterType	int		1048493	0					
ANR	1048590	Identifier	sec		1048493	1					
ANR	1048591	Parameter	CondorError * errstack	707:63:17482:17502	1048493	3	True				
ANR	1048592	ParameterType	CondorError *		1048493	0					
ANR	1048593	Identifier	errstack		1048493	1					
ANR	1048594	Parameter	char const * cmd_description	707:86:17505:17531	1048493	4	True				
ANR	1048595	ParameterType	char const *		1048493	0					
ANR	1048596	Identifier	cmd_description		1048493	1					
ANR	1048597	CFGEntryNode	ENTRY		1048493		True				
ANR	1048598	CFGExitNode	EXIT		1048493		True				
ANR	1048599	Symbol	idStr		1048493						
ANR	1048600	Symbol	st		1048493						
ANR	1048601	Symbol	* tmp		1048493						
ANR	1048602	Symbol	false		1048493						
ANR	1048603	Symbol	err_buf		1048493						
ANR	1048604	Symbol	startCommand		1048493						
ANR	1048605	Symbol	tmp -> end_of_message		1048493						
ANR	1048606	Symbol	cmd_description		1048493						
ANR	1048607	Symbol	sec		1048493						
ANR	1048608	Symbol	errstack		1048493						
ANR	1048609	Symbol	tmp		1048493						
ANR	1048610	Symbol	true		1048493						
ANR	1048611	Symbol	cmd		1048493						
ANR	1048612	Symbol	err_buf . Value		1048493						
ANR	1048613	Symbol	CA_COMMUNICATION_ERROR		1048493						
ANR	1048614	Function	Daemon :: sendCACmd	726:0:17886:18109							
ANR	1048615	FunctionDef	"Daemon :: sendCACmd (ClassAd * req , ClassAd * reply , bool force_auth , int timeout , char const * sec_session_id)"		1048614	0					
ANR	1048616	CompoundStatement		729:0:18006:18109	1048614	0					
ANR	1048617	IdentifierDeclStatement	ReliSock cmd_sock ;	730:1:18009:18026	1048614	0	True				
ANR	1048618	IdentifierDecl	cmd_sock		1048614	0					
ANR	1048619	IdentifierDeclType	ReliSock		1048614	0					
ANR	1048620	Identifier	cmd_sock		1048614	1					
ANR	1048621	ReturnStatement	"return sendCACmd ( req , reply , & cmd_sock , force_auth , timeout , sec_session_id ) ;"	731:1:18029:18107	1048614	1	True				
ANR	1048622	CallExpression	"sendCACmd ( req , reply , & cmd_sock , force_auth , timeout , sec_session_id )"		1048614	0					
ANR	1048623	Callee	sendCACmd		1048614	0					
ANR	1048624	Identifier	sendCACmd		1048614	0					
ANR	1048625	ArgumentList	req		1048614	1					
ANR	1048626	Argument	req		1048614	0					
ANR	1048627	Identifier	req		1048614	0					
ANR	1048628	Argument	reply		1048614	1					
ANR	1048629	Identifier	reply		1048614	0					
ANR	1048630	Argument	& cmd_sock		1048614	2					
ANR	1048631	UnaryOperationExpression	& cmd_sock		1048614	0					
ANR	1048632	UnaryOperator	&		1048614	0					
ANR	1048633	Identifier	cmd_sock		1048614	1					
ANR	1048634	Argument	force_auth		1048614	3					
ANR	1048635	Identifier	force_auth		1048614	0					
ANR	1048636	Argument	timeout		1048614	4					
ANR	1048637	Identifier	timeout		1048614	0					
ANR	1048638	Argument	sec_session_id		1048614	5					
ANR	1048639	Identifier	sec_session_id		1048614	0					
ANR	1048640	ReturnType	bool		1048614	1					
ANR	1048641	Identifier	Daemon :: sendCACmd		1048614	2					
ANR	1048642	ParameterList	"ClassAd * req , ClassAd * reply , bool force_auth , int timeout , char const * sec_session_id"		1048614	3					
ANR	1048643	Parameter	ClassAd * req	727:19:17910:17921	1048614	0	True				
ANR	1048644	ParameterType	ClassAd *		1048614	0					
ANR	1048645	Identifier	req		1048614	1					
ANR	1048646	Parameter	ClassAd * reply	727:33:17924:17937	1048614	1	True				
ANR	1048647	ParameterType	ClassAd *		1048614	0					
ANR	1048648	Identifier	reply		1048614	1					
ANR	1048649	Parameter	bool force_auth	727:49:17940:17954	1048614	2	True				
ANR	1048650	ParameterType	bool		1048614	0					
ANR	1048651	Identifier	force_auth		1048614	1					
ANR	1048652	Parameter	int timeout	728:7:17964:17974	1048614	3	True				
ANR	1048653	ParameterType	int		1048614	0					
ANR	1048654	Identifier	timeout		1048614	1					
ANR	1048655	Parameter	char const * sec_session_id	728:20:17977:18002	1048614	4	True				
ANR	1048656	ParameterType	char const *		1048614	0					
ANR	1048657	Identifier	sec_session_id		1048614	1					
ANR	1048658	CFGEntryNode	ENTRY		1048614		True				
ANR	1048659	CFGExitNode	EXIT		1048614		True				
ANR	1048660	Symbol	sec_session_id		1048614						
ANR	1048661	Symbol	sendCACmd		1048614						
ANR	1048662	Symbol	& cmd_sock		1048614						
ANR	1048663	Symbol	cmd_sock		1048614						
ANR	1048664	Symbol	reply		1048614						
ANR	1048665	Symbol	force_auth		1048614						
ANR	1048666	Symbol	timeout		1048614						
ANR	1048667	Symbol	req		1048614						
ANR	1048668	Function	Daemon :: sendCACmd	735:0:18113:22219							
ANR	1048669	FunctionDef	"Daemon :: sendCACmd (ClassAd * req , ClassAd * reply , ReliSock * cmd_sock , bool force_auth , int timeout , char const * sec_session_id)"		1048668	0					
ANR	1048670	CompoundStatement		738:0:18253:22219	1048668	0					
ANR	1048671	IfStatement	if ( ! req )		1048668	0					
ANR	1048672	Condition	! req	739:5:18260:18263	1048668	0	True				
ANR	1048673	UnaryOperationExpression	! req		1048668	0					
ANR	1048674	UnaryOperator	!		1048668	0					
ANR	1048675	Identifier	req		1048668	1					
ANR	1048676	CompoundStatement		2:12:13:13	1048668	1					
ANR	1048677	ExpressionStatement	"newError ( CA_INVALID_REQUEST , ""sendCACmd() called with no request ClassAd"" )"	740:2:18271:18353	1048668	0	True				
ANR	1048678	CallExpression	"newError ( CA_INVALID_REQUEST , ""sendCACmd() called with no request ClassAd"" )"		1048668	0					
ANR	1048679	Callee	newError		1048668	0					
ANR	1048680	Identifier	newError		1048668	0					
ANR	1048681	ArgumentList	CA_INVALID_REQUEST		1048668	1					
ANR	1048682	Argument	CA_INVALID_REQUEST		1048668	0					
ANR	1048683	Identifier	CA_INVALID_REQUEST		1048668	0					
ANR	1048684	Argument	"""sendCACmd() called with no request ClassAd"""		1048668	1					
ANR	1048685	PrimaryExpression	"""sendCACmd() called with no request ClassAd"""		1048668	0					
ANR	1048686	ReturnStatement	return false ;	742:2:18358:18370	1048668	1	True				
ANR	1048687	Identifier	false		1048668	0					
ANR	1048688	IfStatement	if ( ! reply )		1048668	1					
ANR	1048689	Condition	! reply	744:5:18380:18385	1048668	0	True				
ANR	1048690	UnaryOperationExpression	! reply		1048668	0					
ANR	1048691	UnaryOperator	!		1048668	0					
ANR	1048692	Identifier	reply		1048668	1					
ANR	1048693	CompoundStatement		7:14:135:135	1048668	1					
ANR	1048694	ExpressionStatement	"newError ( CA_INVALID_REQUEST , ""sendCACmd() called with no reply ClassAd"" )"	745:2:18393:18473	1048668	0	True				
ANR	1048695	CallExpression	"newError ( CA_INVALID_REQUEST , ""sendCACmd() called with no reply ClassAd"" )"		1048668	0					
ANR	1048696	Callee	newError		1048668	0					
ANR	1048697	Identifier	newError		1048668	0					
ANR	1048698	ArgumentList	CA_INVALID_REQUEST		1048668	1					
ANR	1048699	Argument	CA_INVALID_REQUEST		1048668	0					
ANR	1048700	Identifier	CA_INVALID_REQUEST		1048668	0					
ANR	1048701	Argument	"""sendCACmd() called with no reply ClassAd"""		1048668	1					
ANR	1048702	PrimaryExpression	"""sendCACmd() called with no reply ClassAd"""		1048668	0					
ANR	1048703	ReturnStatement	return false ;	747:2:18477:18489	1048668	1	True				
ANR	1048704	Identifier	false		1048668	0					
ANR	1048705	IfStatement	if ( ! cmd_sock )		1048668	2					
ANR	1048706	Condition	! cmd_sock	749:5:18499:18508	1048668	0	True				
ANR	1048707	UnaryOperationExpression	! cmd_sock		1048668	0					
ANR	1048708	UnaryOperator	!		1048668	0					
ANR	1048709	Identifier	cmd_sock		1048668	1					
ANR	1048710	CompoundStatement		12:18:258:258	1048668	1					
ANR	1048711	ExpressionStatement	"newError ( CA_INVALID_REQUEST , ""sendCACmd() called with no socket to use"" )"	750:2:18516:18596	1048668	0	True				
ANR	1048712	CallExpression	"newError ( CA_INVALID_REQUEST , ""sendCACmd() called with no socket to use"" )"		1048668	0					
ANR	1048713	Callee	newError		1048668	0					
ANR	1048714	Identifier	newError		1048668	0					
ANR	1048715	ArgumentList	CA_INVALID_REQUEST		1048668	1					
ANR	1048716	Argument	CA_INVALID_REQUEST		1048668	0					
ANR	1048717	Identifier	CA_INVALID_REQUEST		1048668	0					
ANR	1048718	Argument	"""sendCACmd() called with no socket to use"""		1048668	1					
ANR	1048719	PrimaryExpression	"""sendCACmd() called with no socket to use"""		1048668	0					
ANR	1048720	ReturnStatement	return false ;	752:2:18600:18612	1048668	1	True				
ANR	1048721	Identifier	false		1048668	0					
ANR	1048722	IfStatement	if ( ! checkAddr ( ) )		1048668	3					
ANR	1048723	Condition	! checkAddr ( )	754:5:18622:18633	1048668	0	True				
ANR	1048724	UnaryOperationExpression	! checkAddr ( )		1048668	0					
ANR	1048725	UnaryOperator	!		1048668	0					
ANR	1048726	CallExpression	checkAddr ( )		1048668	1					
ANR	1048727	Callee	checkAddr		1048668	0					
ANR	1048728	Identifier	checkAddr		1048668	0					
ANR	1048729	ArgumentList			1048668	1					
ANR	1048730	CompoundStatement		17:20:383:383	1048668	1					
ANR	1048731	ReturnStatement	return false ;	756:2:18686:18698	1048668	0	True				
ANR	1048732	Identifier	false		1048668	0					
ANR	1048733	ExpressionStatement	req -> SetMyTypeName ( COMMAND_ADTYPE )	759:1:18706:18742	1048668	4	True				
ANR	1048734	CallExpression	req -> SetMyTypeName ( COMMAND_ADTYPE )		1048668	0					
ANR	1048735	Callee	req -> SetMyTypeName		1048668	0					
ANR	1048736	PtrMemberAccess	req -> SetMyTypeName		1048668	0					
ANR	1048737	Identifier	req		1048668	0					
ANR	1048738	Identifier	SetMyTypeName		1048668	1					
ANR	1048739	ArgumentList	COMMAND_ADTYPE		1048668	1					
ANR	1048740	Argument	COMMAND_ADTYPE		1048668	0					
ANR	1048741	Identifier	COMMAND_ADTYPE		1048668	0					
ANR	1048742	ExpressionStatement	req -> SetTargetTypeName ( REPLY_ADTYPE )	760:1:18745:18783	1048668	5	True				
ANR	1048743	CallExpression	req -> SetTargetTypeName ( REPLY_ADTYPE )		1048668	0					
ANR	1048744	Callee	req -> SetTargetTypeName		1048668	0					
ANR	1048745	PtrMemberAccess	req -> SetTargetTypeName		1048668	0					
ANR	1048746	Identifier	req		1048668	0					
ANR	1048747	Identifier	SetTargetTypeName		1048668	1					
ANR	1048748	ArgumentList	REPLY_ADTYPE		1048668	1					
ANR	1048749	Argument	REPLY_ADTYPE		1048668	0					
ANR	1048750	Identifier	REPLY_ADTYPE		1048668	0					
ANR	1048751	IfStatement	if ( timeout >= 0 )		1048668	6					
ANR	1048752	Condition	timeout >= 0	762:5:18791:18802	1048668	0	True				
ANR	1048753	RelationalExpression	timeout >= 0		1048668	0		>=			
ANR	1048754	Identifier	timeout		1048668	0					
ANR	1048755	PrimaryExpression	0		1048668	1					
ANR	1048756	CompoundStatement		25:20:552:552	1048668	1					
ANR	1048757	ExpressionStatement	cmd_sock -> timeout ( timeout )	763:2:18810:18838	1048668	0	True				
ANR	1048758	CallExpression	cmd_sock -> timeout ( timeout )		1048668	0					
ANR	1048759	Callee	cmd_sock -> timeout		1048668	0					
ANR	1048760	PtrMemberAccess	cmd_sock -> timeout		1048668	0					
ANR	1048761	Identifier	cmd_sock		1048668	0					
ANR	1048762	Identifier	timeout		1048668	1					
ANR	1048763	ArgumentList	timeout		1048668	1					
ANR	1048764	Argument	timeout		1048668	0					
ANR	1048765	Identifier	timeout		1048668	0					
ANR	1048766	IfStatement	if ( ! connectSock ( cmd_sock ) )		1048668	7					
ANR	1048767	Condition	! connectSock ( cmd_sock )	766:5:18849:18871	1048668	0	True				
ANR	1048768	UnaryOperationExpression	! connectSock ( cmd_sock )		1048668	0					
ANR	1048769	UnaryOperator	!		1048668	0					
ANR	1048770	CallExpression	connectSock ( cmd_sock )		1048668	1					
ANR	1048771	Callee	connectSock		1048668	0					
ANR	1048772	Identifier	connectSock		1048668	0					
ANR	1048773	ArgumentList	cmd_sock		1048668	1					
ANR	1048774	Argument	cmd_sock		1048668	0					
ANR	1048775	Identifier	cmd_sock		1048668	0					
ANR	1048776	CompoundStatement		30:2:625:667	1048668	1					
ANR	1048777	IdentifierDeclStatement	"MyString err_msg = ""Failed to connect to "" ;"	767:2:18879:18921	1048668	0	True				
ANR	1048778	IdentifierDecl	"err_msg = ""Failed to connect to """		1048668	0					
ANR	1048779	IdentifierDeclType	MyString		1048668	0					
ANR	1048780	Identifier	err_msg		1048668	1					
ANR	1048781	AssignmentExpression	"err_msg = ""Failed to connect to """		1048668	2		=			
ANR	1048782	Identifier	err_msg		1048668	0					
ANR	1048783	PrimaryExpression	"""Failed to connect to """		1048668	1					
ANR	1048784	ExpressionStatement	err_msg += daemonString ( _type )	768:2:18925:18955	1048668	1	True				
ANR	1048785	AssignmentExpression	err_msg += daemonString ( _type )		1048668	0		+=			
ANR	1048786	Identifier	err_msg		1048668	0					
ANR	1048787	CallExpression	daemonString ( _type )		1048668	1					
ANR	1048788	Callee	daemonString		1048668	0					
ANR	1048789	Identifier	daemonString		1048668	0					
ANR	1048790	ArgumentList	_type		1048668	1					
ANR	1048791	Argument	_type		1048668	0					
ANR	1048792	Identifier	_type		1048668	0					
ANR	1048793	ExpressionStatement	"err_msg += "" """	769:2:18959:18973	1048668	2	True				
ANR	1048794	AssignmentExpression	"err_msg += "" """		1048668	0		+=			
ANR	1048795	Identifier	err_msg		1048668	0					
ANR	1048796	PrimaryExpression	""" """		1048668	1					
ANR	1048797	ExpressionStatement	err_msg += _addr	770:2:18977:18993	1048668	3	True				
ANR	1048798	AssignmentExpression	err_msg += _addr		1048668	0		+=			
ANR	1048799	Identifier	err_msg		1048668	0					
ANR	1048800	Identifier	_addr		1048668	1					
ANR	1048801	ExpressionStatement	"newError ( CA_CONNECT_FAILED , err_msg . Value ( ) )"	771:2:18997:19043	1048668	4	True				
ANR	1048802	CallExpression	"newError ( CA_CONNECT_FAILED , err_msg . Value ( ) )"		1048668	0					
ANR	1048803	Callee	newError		1048668	0					
ANR	1048804	Identifier	newError		1048668	0					
ANR	1048805	ArgumentList	CA_CONNECT_FAILED		1048668	1					
ANR	1048806	Argument	CA_CONNECT_FAILED		1048668	0					
ANR	1048807	Identifier	CA_CONNECT_FAILED		1048668	0					
ANR	1048808	Argument	err_msg . Value ( )		1048668	1					
ANR	1048809	CallExpression	err_msg . Value ( )		1048668	0					
ANR	1048810	Callee	err_msg . Value		1048668	0					
ANR	1048811	MemberAccess	err_msg . Value		1048668	0					
ANR	1048812	Identifier	err_msg		1048668	0					
ANR	1048813	Identifier	Value		1048668	1					
ANR	1048814	ArgumentList			1048668	1					
ANR	1048815	ReturnStatement	return false ;	772:2:19047:19059	1048668	5	True				
ANR	1048816	Identifier	false		1048668	0					
ANR	1048817	IdentifierDeclStatement	int cmd ;	775:1:19066:19073	1048668	8	True				
ANR	1048818	IdentifierDecl	cmd		1048668	0					
ANR	1048819	IdentifierDeclType	int		1048668	0					
ANR	1048820	Identifier	cmd		1048668	1					
ANR	1048821	IfStatement	if ( force_auth )		1048668	9					
ANR	1048822	Condition	force_auth	776:5:19080:19089	1048668	0	True				
ANR	1048823	Identifier	force_auth		1048668	0					
ANR	1048824	CompoundStatement		39:18:839:839	1048668	1					
ANR	1048825	ExpressionStatement	cmd = CA_AUTH_CMD	777:2:19097:19114	1048668	0	True				
ANR	1048826	AssignmentExpression	cmd = CA_AUTH_CMD		1048668	0		=			
ANR	1048827	Identifier	cmd		1048668	0					
ANR	1048828	Identifier	CA_AUTH_CMD		1048668	1					
ANR	1048829	ElseStatement	else		1048668	0					
ANR	1048830	CompoundStatement		41:8:870:870	1048668	0					
ANR	1048831	ExpressionStatement	cmd = CA_CMD	779:2:19128:19140	1048668	0	True				
ANR	1048832	AssignmentExpression	cmd = CA_CMD		1048668	0		=			
ANR	1048833	Identifier	cmd		1048668	0					
ANR	1048834	Identifier	CA_CMD		1048668	1					
ANR	1048835	IdentifierDeclStatement	CondorError errstack ;	781:1:19146:19166	1048668	10	True				
ANR	1048836	IdentifierDecl	errstack		1048668	0					
ANR	1048837	IdentifierDeclType	CondorError		1048668	0					
ANR	1048838	Identifier	errstack		1048668	1					
ANR	1048839	IfStatement	"if ( ! startCommand ( cmd , cmd_sock , 20 , & errstack , NULL , false , sec_session_id ) )"		1048668	11					
ANR	1048840	Condition	"! startCommand ( cmd , cmd_sock , 20 , & errstack , NULL , false , sec_session_id )"	782:5:19173:19245	1048668	0	True				
ANR	1048841	UnaryOperationExpression	"! startCommand ( cmd , cmd_sock , 20 , & errstack , NULL , false , sec_session_id )"		1048668	0					
ANR	1048842	UnaryOperator	!		1048668	0					
ANR	1048843	CallExpression	"startCommand ( cmd , cmd_sock , 20 , & errstack , NULL , false , sec_session_id )"		1048668	1					
ANR	1048844	Callee	startCommand		1048668	0					
ANR	1048845	Identifier	startCommand		1048668	0					
ANR	1048846	ArgumentList	cmd		1048668	1					
ANR	1048847	Argument	cmd		1048668	0					
ANR	1048848	Identifier	cmd		1048668	0					
ANR	1048849	Argument	cmd_sock		1048668	1					
ANR	1048850	Identifier	cmd_sock		1048668	0					
ANR	1048851	Argument	20		1048668	2					
ANR	1048852	PrimaryExpression	20		1048668	0					
ANR	1048853	Argument	& errstack		1048668	3					
ANR	1048854	UnaryOperationExpression	& errstack		1048668	0					
ANR	1048855	UnaryOperator	&		1048668	0					
ANR	1048856	Identifier	errstack		1048668	1					
ANR	1048857	Argument	NULL		1048668	4					
ANR	1048858	Identifier	NULL		1048668	0					
ANR	1048859	Argument	false		1048668	5					
ANR	1048860	Identifier	false		1048668	0					
ANR	1048861	Argument	sec_session_id		1048668	6					
ANR	1048862	Identifier	sec_session_id		1048668	0					
ANR	1048863	CompoundStatement		46:2:999:1044	1048668	1					
ANR	1048864	IdentifierDeclStatement	"MyString err_msg = ""Failed to send command ("" ;"	783:2:19253:19298	1048668	0	True				
ANR	1048865	IdentifierDecl	"err_msg = ""Failed to send command ("""		1048668	0					
ANR	1048866	IdentifierDeclType	MyString		1048668	0					
ANR	1048867	Identifier	err_msg		1048668	1					
ANR	1048868	AssignmentExpression	"err_msg = ""Failed to send command ("""		1048668	2		=			
ANR	1048869	Identifier	err_msg		1048668	0					
ANR	1048870	PrimaryExpression	"""Failed to send command ("""		1048668	1					
ANR	1048871	IfStatement	if ( cmd == CA_CMD )		1048668	1					
ANR	1048872	Condition	cmd == CA_CMD	784:6:19306:19318	1048668	0	True				
ANR	1048873	EqualityExpression	cmd == CA_CMD		1048668	0		==			
ANR	1048874	Identifier	cmd		1048668	0					
ANR	1048875	Identifier	CA_CMD		1048668	1					
ANR	1048876	CompoundStatement		47:22:1068:1068	1048668	1					
ANR	1048877	ExpressionStatement	"err_msg += ""CA_CMD"""	785:3:19327:19346	1048668	0	True				
ANR	1048878	AssignmentExpression	"err_msg += ""CA_CMD"""		1048668	0		+=			
ANR	1048879	Identifier	err_msg		1048668	0					
ANR	1048880	PrimaryExpression	"""CA_CMD"""		1048668	1					
ANR	1048881	ElseStatement	else		1048668	0					
ANR	1048882	CompoundStatement		49:9:1103:1103	1048668	0					
ANR	1048883	ExpressionStatement	"err_msg += ""CA_AUTH_CMD"""	787:3:19362:19386	1048668	0	True				
ANR	1048884	AssignmentExpression	"err_msg += ""CA_AUTH_CMD"""		1048668	0		+=			
ANR	1048885	Identifier	err_msg		1048668	0					
ANR	1048886	PrimaryExpression	"""CA_AUTH_CMD"""		1048668	1					
ANR	1048887	ExpressionStatement	"err_msg += ""): """	789:2:19394:19410	1048668	2	True				
ANR	1048888	AssignmentExpression	"err_msg += ""): """		1048668	0		+=			
ANR	1048889	Identifier	err_msg		1048668	0					
ANR	1048890	PrimaryExpression	"""): """		1048668	1					
ANR	1048891	ExpressionStatement	err_msg += errstack . getFullText ( )	790:2:19414:19447	1048668	3	True				
ANR	1048892	AssignmentExpression	err_msg += errstack . getFullText ( )		1048668	0		+=			
ANR	1048893	Identifier	err_msg		1048668	0					
ANR	1048894	CallExpression	errstack . getFullText ( )		1048668	1					
ANR	1048895	Callee	errstack . getFullText		1048668	0					
ANR	1048896	MemberAccess	errstack . getFullText		1048668	0					
ANR	1048897	Identifier	errstack		1048668	0					
ANR	1048898	Identifier	getFullText		1048668	1					
ANR	1048899	ArgumentList			1048668	1					
ANR	1048900	ExpressionStatement	"newError ( CA_COMMUNICATION_ERROR , err_msg . Value ( ) )"	791:2:19451:19502	1048668	4	True				
ANR	1048901	CallExpression	"newError ( CA_COMMUNICATION_ERROR , err_msg . Value ( ) )"		1048668	0					
ANR	1048902	Callee	newError		1048668	0					
ANR	1048903	Identifier	newError		1048668	0					
ANR	1048904	ArgumentList	CA_COMMUNICATION_ERROR		1048668	1					
ANR	1048905	Argument	CA_COMMUNICATION_ERROR		1048668	0					
ANR	1048906	Identifier	CA_COMMUNICATION_ERROR		1048668	0					
ANR	1048907	Argument	err_msg . Value ( )		1048668	1					
ANR	1048908	CallExpression	err_msg . Value ( )		1048668	0					
ANR	1048909	Callee	err_msg . Value		1048668	0					
ANR	1048910	MemberAccess	err_msg . Value		1048668	0					
ANR	1048911	Identifier	err_msg		1048668	0					
ANR	1048912	Identifier	Value		1048668	1					
ANR	1048913	ArgumentList			1048668	1					
ANR	1048914	ReturnStatement	return false ;	792:2:19506:19518	1048668	5	True				
ANR	1048915	Identifier	false		1048668	0					
ANR	1048916	IfStatement	if ( force_auth )		1048668	12					
ANR	1048917	Condition	force_auth	794:5:19528:19537	1048668	0	True				
ANR	1048918	Identifier	force_auth		1048668	0					
ANR	1048919	CompoundStatement		58:2:1291:1304	1048668	1					
ANR	1048920	IdentifierDeclStatement	CondorError e ;	795:2:19545:19558	1048668	0	True				
ANR	1048921	IdentifierDecl	e		1048668	0					
ANR	1048922	IdentifierDeclType	CondorError		1048668	0					
ANR	1048923	Identifier	e		1048668	1					
ANR	1048924	IfStatement	"if ( ! forceAuthentication ( cmd_sock , & e ) )"		1048668	1					
ANR	1048925	Condition	"! forceAuthentication ( cmd_sock , & e )"	796:6:19566:19600	1048668	0	True				
ANR	1048926	UnaryOperationExpression	"! forceAuthentication ( cmd_sock , & e )"		1048668	0					
ANR	1048927	UnaryOperator	!		1048668	0					
ANR	1048928	CallExpression	"forceAuthentication ( cmd_sock , & e )"		1048668	1					
ANR	1048929	Callee	forceAuthentication		1048668	0					
ANR	1048930	Identifier	forceAuthentication		1048668	0					
ANR	1048931	ArgumentList	cmd_sock		1048668	1					
ANR	1048932	Argument	cmd_sock		1048668	0					
ANR	1048933	Identifier	cmd_sock		1048668	0					
ANR	1048934	Argument	& e		1048668	1					
ANR	1048935	UnaryOperationExpression	& e		1048668	0					
ANR	1048936	UnaryOperator	&		1048668	0					
ANR	1048937	Identifier	e		1048668	1					
ANR	1048938	CompoundStatement		59:44:1350:1350	1048668	1					
ANR	1048939	ExpressionStatement	"newError ( CA_NOT_AUTHENTICATED , e . getFullText ( ) )"	797:3:19609:19658	1048668	0	True				
ANR	1048940	CallExpression	"newError ( CA_NOT_AUTHENTICATED , e . getFullText ( ) )"		1048668	0					
ANR	1048941	Callee	newError		1048668	0					
ANR	1048942	Identifier	newError		1048668	0					
ANR	1048943	ArgumentList	CA_NOT_AUTHENTICATED		1048668	1					
ANR	1048944	Argument	CA_NOT_AUTHENTICATED		1048668	0					
ANR	1048945	Identifier	CA_NOT_AUTHENTICATED		1048668	0					
ANR	1048946	Argument	e . getFullText ( )		1048668	1					
ANR	1048947	CallExpression	e . getFullText ( )		1048668	0					
ANR	1048948	Callee	e . getFullText		1048668	0					
ANR	1048949	MemberAccess	e . getFullText		1048668	0					
ANR	1048950	Identifier	e		1048668	0					
ANR	1048951	Identifier	getFullText		1048668	1					
ANR	1048952	ArgumentList			1048668	1					
ANR	1048953	ReturnStatement	return false ;	798:3:19663:19675	1048668	1	True				
ANR	1048954	Identifier	false		1048668	0					
ANR	1048955	IfStatement	if ( timeout >= 0 )		1048668	13					
ANR	1048956	Condition	timeout >= 0	805:5:19838:19849	1048668	0	True				
ANR	1048957	RelationalExpression	timeout >= 0		1048668	0		>=			
ANR	1048958	Identifier	timeout		1048668	0					
ANR	1048959	PrimaryExpression	0		1048668	1					
ANR	1048960	CompoundStatement		68:20:1599:1599	1048668	1					
ANR	1048961	ExpressionStatement	cmd_sock -> timeout ( timeout )	806:2:19857:19885	1048668	0	True				
ANR	1048962	CallExpression	cmd_sock -> timeout ( timeout )		1048668	0					
ANR	1048963	Callee	cmd_sock -> timeout		1048668	0					
ANR	1048964	PtrMemberAccess	cmd_sock -> timeout		1048668	0					
ANR	1048965	Identifier	cmd_sock		1048668	0					
ANR	1048966	Identifier	timeout		1048668	1					
ANR	1048967	ArgumentList	timeout		1048668	1					
ANR	1048968	Argument	timeout		1048668	0					
ANR	1048969	Identifier	timeout		1048668	0					
ANR	1048970	IfStatement	if ( ! req -> put ( * cmd_sock ) )		1048668	14					
ANR	1048971	Condition	! req -> put ( * cmd_sock )	809:5:19896:19916	1048668	0	True				
ANR	1048972	UnaryOperationExpression	! req -> put ( * cmd_sock )		1048668	0					
ANR	1048973	UnaryOperator	!		1048668	0					
ANR	1048974	CallExpression	req -> put ( * cmd_sock )		1048668	1					
ANR	1048975	Callee	req -> put		1048668	0					
ANR	1048976	PtrMemberAccess	req -> put		1048668	0					
ANR	1048977	Identifier	req		1048668	0					
ANR	1048978	Identifier	put		1048668	1					
ANR	1048979	ArgumentList	* cmd_sock		1048668	1					
ANR	1048980	Argument	* cmd_sock		1048668	0					
ANR	1048981	UnaryOperationExpression	* cmd_sock		1048668	0					
ANR	1048982	UnaryOperator	*		1048668	0					
ANR	1048983	Identifier	cmd_sock		1048668	1					
ANR	1048984	CompoundStatement		72:29:1666:1666	1048668	1					
ANR	1048985	ExpressionStatement	"newError ( CA_COMMUNICATION_ERROR , ""Failed to send request ClassAd"" )"	810:2:19925:19999	1048668	0	True				
ANR	1048986	CallExpression	"newError ( CA_COMMUNICATION_ERROR , ""Failed to send request ClassAd"" )"		1048668	0					
ANR	1048987	Callee	newError		1048668	0					
ANR	1048988	Identifier	newError		1048668	0					
ANR	1048989	ArgumentList	CA_COMMUNICATION_ERROR		1048668	1					
ANR	1048990	Argument	CA_COMMUNICATION_ERROR		1048668	0					
ANR	1048991	Identifier	CA_COMMUNICATION_ERROR		1048668	0					
ANR	1048992	Argument	"""Failed to send request ClassAd"""		1048668	1					
ANR	1048993	PrimaryExpression	"""Failed to send request ClassAd"""		1048668	0					
ANR	1048994	ReturnStatement	return false ;	812:2:20003:20015	1048668	1	True				
ANR	1048995	Identifier	false		1048668	0					
ANR	1048996	IfStatement	if ( ! cmd_sock -> end_of_message ( ) )		1048668	15					
ANR	1048997	Condition	! cmd_sock -> end_of_message ( )	814:5:20025:20052	1048668	0	True				
ANR	1048998	UnaryOperationExpression	! cmd_sock -> end_of_message ( )		1048668	0					
ANR	1048999	UnaryOperator	!		1048668	0					
ANR	1049000	CallExpression	cmd_sock -> end_of_message ( )		1048668	1					
ANR	1049001	Callee	cmd_sock -> end_of_message		1048668	0					
ANR	1049002	PtrMemberAccess	cmd_sock -> end_of_message		1048668	0					
ANR	1049003	Identifier	cmd_sock		1048668	0					
ANR	1049004	Identifier	end_of_message		1048668	1					
ANR	1049005	ArgumentList			1048668	1					
ANR	1049006	CompoundStatement		77:36:1802:1802	1048668	1					
ANR	1049007	ExpressionStatement	"newError ( CA_COMMUNICATION_ERROR , ""Failed to send end-of-message"" )"	815:2:20060:20133	1048668	0	True				
ANR	1049008	CallExpression	"newError ( CA_COMMUNICATION_ERROR , ""Failed to send end-of-message"" )"		1048668	0					
ANR	1049009	Callee	newError		1048668	0					
ANR	1049010	Identifier	newError		1048668	0					
ANR	1049011	ArgumentList	CA_COMMUNICATION_ERROR		1048668	1					
ANR	1049012	Argument	CA_COMMUNICATION_ERROR		1048668	0					
ANR	1049013	Identifier	CA_COMMUNICATION_ERROR		1048668	0					
ANR	1049014	Argument	"""Failed to send end-of-message"""		1048668	1					
ANR	1049015	PrimaryExpression	"""Failed to send end-of-message"""		1048668	0					
ANR	1049016	ReturnStatement	return false ;	817:2:20137:20149	1048668	1	True				
ANR	1049017	Identifier	false		1048668	0					
ANR	1049018	ExpressionStatement	cmd_sock -> decode ( )	821:1:20187:20205	1048668	16	True				
ANR	1049019	CallExpression	cmd_sock -> decode ( )		1048668	0					
ANR	1049020	Callee	cmd_sock -> decode		1048668	0					
ANR	1049021	PtrMemberAccess	cmd_sock -> decode		1048668	0					
ANR	1049022	Identifier	cmd_sock		1048668	0					
ANR	1049023	Identifier	decode		1048668	1					
ANR	1049024	ArgumentList			1048668	1					
ANR	1049025	IfStatement	if ( ! reply -> initFromStream ( * cmd_sock ) )		1048668	17					
ANR	1049026	Condition	! reply -> initFromStream ( * cmd_sock )	822:5:20212:20245	1048668	0	True				
ANR	1049027	UnaryOperationExpression	! reply -> initFromStream ( * cmd_sock )		1048668	0					
ANR	1049028	UnaryOperator	!		1048668	0					
ANR	1049029	CallExpression	reply -> initFromStream ( * cmd_sock )		1048668	1					
ANR	1049030	Callee	reply -> initFromStream		1048668	0					
ANR	1049031	PtrMemberAccess	reply -> initFromStream		1048668	0					
ANR	1049032	Identifier	reply		1048668	0					
ANR	1049033	Identifier	initFromStream		1048668	1					
ANR	1049034	ArgumentList	* cmd_sock		1048668	1					
ANR	1049035	Argument	* cmd_sock		1048668	0					
ANR	1049036	UnaryOperationExpression	* cmd_sock		1048668	0					
ANR	1049037	UnaryOperator	*		1048668	0					
ANR	1049038	Identifier	cmd_sock		1048668	1					
ANR	1049039	CompoundStatement		85:42:1995:1995	1048668	1					
ANR	1049040	ExpressionStatement	"newError ( CA_COMMUNICATION_ERROR , ""Failed to read reply ClassAd"" )"	823:2:20253:20319	1048668	0	True				
ANR	1049041	CallExpression	"newError ( CA_COMMUNICATION_ERROR , ""Failed to read reply ClassAd"" )"		1048668	0					
ANR	1049042	Callee	newError		1048668	0					
ANR	1049043	Identifier	newError		1048668	0					
ANR	1049044	ArgumentList	CA_COMMUNICATION_ERROR		1048668	1					
ANR	1049045	Argument	CA_COMMUNICATION_ERROR		1048668	0					
ANR	1049046	Identifier	CA_COMMUNICATION_ERROR		1048668	0					
ANR	1049047	Argument	"""Failed to read reply ClassAd"""		1048668	1					
ANR	1049048	PrimaryExpression	"""Failed to read reply ClassAd"""		1048668	0					
ANR	1049049	ReturnStatement	return false ;	824:2:20323:20335	1048668	1	True				
ANR	1049050	Identifier	false		1048668	0					
ANR	1049051	IfStatement	if ( ! cmd_sock -> end_of_message ( ) )		1048668	18					
ANR	1049052	Condition	! cmd_sock -> end_of_message ( )	826:5:20345:20371	1048668	0	True				
ANR	1049053	UnaryOperationExpression	! cmd_sock -> end_of_message ( )		1048668	0					
ANR	1049054	UnaryOperator	!		1048668	0					
ANR	1049055	CallExpression	cmd_sock -> end_of_message ( )		1048668	1					
ANR	1049056	Callee	cmd_sock -> end_of_message		1048668	0					
ANR	1049057	PtrMemberAccess	cmd_sock -> end_of_message		1048668	0					
ANR	1049058	Identifier	cmd_sock		1048668	0					
ANR	1049059	Identifier	end_of_message		1048668	1					
ANR	1049060	ArgumentList			1048668	1					
ANR	1049061	CompoundStatement		89:35:2121:2121	1048668	1					
ANR	1049062	ExpressionStatement	"newError ( CA_COMMUNICATION_ERROR , ""Failed to read end-of-message"" )"	827:2:20379:20446	1048668	0	True				
ANR	1049063	CallExpression	"newError ( CA_COMMUNICATION_ERROR , ""Failed to read end-of-message"" )"		1048668	0					
ANR	1049064	Callee	newError		1048668	0					
ANR	1049065	Identifier	newError		1048668	0					
ANR	1049066	ArgumentList	CA_COMMUNICATION_ERROR		1048668	1					
ANR	1049067	Argument	CA_COMMUNICATION_ERROR		1048668	0					
ANR	1049068	Identifier	CA_COMMUNICATION_ERROR		1048668	0					
ANR	1049069	Argument	"""Failed to read end-of-message"""		1048668	1					
ANR	1049070	PrimaryExpression	"""Failed to read end-of-message"""		1048668	0					
ANR	1049071	ReturnStatement	return false ;	828:2:20450:20462	1048668	1	True				
ANR	1049072	Identifier	false		1048668	0					
ANR	1049073	IdentifierDeclStatement	char * result_str = NULL ;	832:1:20505:20528	1048668	19	True				
ANR	1049074	IdentifierDecl	* result_str = NULL		1048668	0					
ANR	1049075	IdentifierDeclType	char *		1048668	0					
ANR	1049076	Identifier	result_str		1048668	1					
ANR	1049077	AssignmentExpression	* result_str = NULL		1048668	2		=			
ANR	1049078	Identifier	NULL		1048668	0					
ANR	1049079	Identifier	NULL		1048668	1					
ANR	1049080	IfStatement	"if ( ! reply -> LookupString ( ATTR_RESULT , & result_str ) )"		1048668	20					
ANR	1049081	Condition	"! reply -> LookupString ( ATTR_RESULT , & result_str )"	833:5:20535:20581	1048668	0	True				
ANR	1049082	UnaryOperationExpression	"! reply -> LookupString ( ATTR_RESULT , & result_str )"		1048668	0					
ANR	1049083	UnaryOperator	!		1048668	0					
ANR	1049084	CallExpression	"reply -> LookupString ( ATTR_RESULT , & result_str )"		1048668	1					
ANR	1049085	Callee	reply -> LookupString		1048668	0					
ANR	1049086	PtrMemberAccess	reply -> LookupString		1048668	0					
ANR	1049087	Identifier	reply		1048668	0					
ANR	1049088	Identifier	LookupString		1048668	1					
ANR	1049089	ArgumentList	ATTR_RESULT		1048668	1					
ANR	1049090	Argument	ATTR_RESULT		1048668	0					
ANR	1049091	Identifier	ATTR_RESULT		1048668	0					
ANR	1049092	Argument	& result_str		1048668	1					
ANR	1049093	UnaryOperationExpression	& result_str		1048668	0					
ANR	1049094	UnaryOperator	&		1048668	0					
ANR	1049095	Identifier	result_str		1048668	1					
ANR	1049096	CompoundStatement		97:2:2335:2384	1048668	1					
ANR	1049097	IdentifierDeclStatement	"MyString err_msg = ""Reply ClassAd does not have "" ;"	834:2:20589:20638	1048668	0	True				
ANR	1049098	IdentifierDecl	"err_msg = ""Reply ClassAd does not have """		1048668	0					
ANR	1049099	IdentifierDeclType	MyString		1048668	0					
ANR	1049100	Identifier	err_msg		1048668	1					
ANR	1049101	AssignmentExpression	"err_msg = ""Reply ClassAd does not have """		1048668	2		=			
ANR	1049102	Identifier	err_msg		1048668	0					
ANR	1049103	PrimaryExpression	"""Reply ClassAd does not have """		1048668	1					
ANR	1049104	ExpressionStatement	err_msg += ATTR_RESULT	835:2:20642:20664	1048668	1	True				
ANR	1049105	AssignmentExpression	err_msg += ATTR_RESULT		1048668	0		+=			
ANR	1049106	Identifier	err_msg		1048668	0					
ANR	1049107	Identifier	ATTR_RESULT		1048668	1					
ANR	1049108	ExpressionStatement	"err_msg += "" attribute"""	836:2:20668:20691	1048668	2	True				
ANR	1049109	AssignmentExpression	"err_msg += "" attribute"""		1048668	0		+=			
ANR	1049110	Identifier	err_msg		1048668	0					
ANR	1049111	PrimaryExpression	""" attribute"""		1048668	1					
ANR	1049112	ExpressionStatement	"newError ( CA_INVALID_REPLY , err_msg . Value ( ) )"	837:2:20695:20740	1048668	3	True				
ANR	1049113	CallExpression	"newError ( CA_INVALID_REPLY , err_msg . Value ( ) )"		1048668	0					
ANR	1049114	Callee	newError		1048668	0					
ANR	1049115	Identifier	newError		1048668	0					
ANR	1049116	ArgumentList	CA_INVALID_REPLY		1048668	1					
ANR	1049117	Argument	CA_INVALID_REPLY		1048668	0					
ANR	1049118	Identifier	CA_INVALID_REPLY		1048668	0					
ANR	1049119	Argument	err_msg . Value ( )		1048668	1					
ANR	1049120	CallExpression	err_msg . Value ( )		1048668	0					
ANR	1049121	Callee	err_msg . Value		1048668	0					
ANR	1049122	MemberAccess	err_msg . Value		1048668	0					
ANR	1049123	Identifier	err_msg		1048668	0					
ANR	1049124	Identifier	Value		1048668	1					
ANR	1049125	ArgumentList			1048668	1					
ANR	1049126	ReturnStatement	return false ;	838:2:20744:20756	1048668	4	True				
ANR	1049127	Identifier	false		1048668	0					
ANR	1049128	IdentifierDeclStatement	CAResult result = getCAResultNum ( result_str ) ;	840:1:20762:20808	1048668	21	True				
ANR	1049129	IdentifierDecl	result = getCAResultNum ( result_str )		1048668	0					
ANR	1049130	IdentifierDeclType	CAResult		1048668	0					
ANR	1049131	Identifier	result		1048668	1					
ANR	1049132	AssignmentExpression	result = getCAResultNum ( result_str )		1048668	2		=			
ANR	1049133	Identifier	result		1048668	0					
ANR	1049134	CallExpression	getCAResultNum ( result_str )		1048668	1					
ANR	1049135	Callee	getCAResultNum		1048668	0					
ANR	1049136	Identifier	getCAResultNum		1048668	0					
ANR	1049137	ArgumentList	result_str		1048668	1					
ANR	1049138	Argument	result_str		1048668	0					
ANR	1049139	Identifier	result_str		1048668	0					
ANR	1049140	IfStatement	if ( result == CA_SUCCESS )		1048668	22					
ANR	1049141	Condition	result == CA_SUCCESS	841:5:20815:20834	1048668	0	True				
ANR	1049142	EqualityExpression	result == CA_SUCCESS		1048668	0		==			
ANR	1049143	Identifier	result		1048668	0					
ANR	1049144	Identifier	CA_SUCCESS		1048668	1					
ANR	1049145	CompoundStatement		104:28:2584:2584	1048668	1					
ANR	1049146	ExpressionStatement	free ( result_str )	843:2:20894:20912	1048668	0	True				
ANR	1049147	CallExpression	free ( result_str )		1048668	0					
ANR	1049148	Callee	free		1048668	0					
ANR	1049149	Identifier	free		1048668	0					
ANR	1049150	ArgumentList	result_str		1048668	1					
ANR	1049151	Argument	result_str		1048668	0					
ANR	1049152	Identifier	result_str		1048668	0					
ANR	1049153	ReturnStatement	return true ;	844:2:20916:20927	1048668	1	True				
ANR	1049154	Identifier	true		1048668	0					
ANR	1049155	IdentifierDeclStatement	char * err = NULL ;	850:1:21086:21102	1048668	23	True				
ANR	1049156	IdentifierDecl	* err = NULL		1048668	0					
ANR	1049157	IdentifierDeclType	char *		1048668	0					
ANR	1049158	Identifier	err		1048668	1					
ANR	1049159	AssignmentExpression	* err = NULL		1048668	2		=			
ANR	1049160	Identifier	NULL		1048668	0					
ANR	1049161	Identifier	NULL		1048668	1					
ANR	1049162	IfStatement	"if ( ! reply -> LookupString ( ATTR_ERROR_STRING , & err ) )"		1048668	24					
ANR	1049163	Condition	"! reply -> LookupString ( ATTR_ERROR_STRING , & err )"	851:5:21109:21154	1048668	0	True				
ANR	1049164	UnaryOperationExpression	"! reply -> LookupString ( ATTR_ERROR_STRING , & err )"		1048668	0					
ANR	1049165	UnaryOperator	!		1048668	0					
ANR	1049166	CallExpression	"reply -> LookupString ( ATTR_ERROR_STRING , & err )"		1048668	1					
ANR	1049167	Callee	reply -> LookupString		1048668	0					
ANR	1049168	PtrMemberAccess	reply -> LookupString		1048668	0					
ANR	1049169	Identifier	reply		1048668	0					
ANR	1049170	Identifier	LookupString		1048668	1					
ANR	1049171	ArgumentList	ATTR_ERROR_STRING		1048668	1					
ANR	1049172	Argument	ATTR_ERROR_STRING		1048668	0					
ANR	1049173	Identifier	ATTR_ERROR_STRING		1048668	0					
ANR	1049174	Argument	& err		1048668	1					
ANR	1049175	UnaryOperationExpression	& err		1048668	0					
ANR	1049176	UnaryOperator	&		1048668	0					
ANR	1049177	Identifier	err		1048668	1					
ANR	1049178	CompoundStatement		124:2:3210:3255	1048668	1					
ANR	1049179	IfStatement	if ( ! result )		1048668	0					
ANR	1049180	Condition	! result	852:6:21166:21173	1048668	0	True				
ANR	1049181	UnaryOperationExpression	! result		1048668	0					
ANR	1049182	UnaryOperator	!		1048668	0					
ANR	1049183	Identifier	result		1048668	1					
ANR	1049184	CompoundStatement		115:17:2923:2923	1048668	1					
ANR	1049185	ExpressionStatement	free ( result_str )	856:3:21335:21353	1048668	0	True				
ANR	1049186	CallExpression	free ( result_str )		1048668	0					
ANR	1049187	Callee	free		1048668	0					
ANR	1049188	Identifier	free		1048668	0					
ANR	1049189	ArgumentList	result_str		1048668	1					
ANR	1049190	Argument	result_str		1048668	0					
ANR	1049191	Identifier	result_str		1048668	0					
ANR	1049192	ReturnStatement	return true ;	857:3:21358:21369	1048668	1	True				
ANR	1049193	Identifier	true		1048668	0					
ANR	1049194	IdentifierDeclStatement	"MyString err_msg = ""Reply ClassAd returned '"" ;"	861:2:21464:21509	1048668	1	True				
ANR	1049195	IdentifierDecl	"err_msg = ""Reply ClassAd returned '"""		1048668	0					
ANR	1049196	IdentifierDeclType	MyString		1048668	0					
ANR	1049197	Identifier	err_msg		1048668	1					
ANR	1049198	AssignmentExpression	"err_msg = ""Reply ClassAd returned '"""		1048668	2		=			
ANR	1049199	Identifier	err_msg		1048668	0					
ANR	1049200	PrimaryExpression	"""Reply ClassAd returned '"""		1048668	1					
ANR	1049201	ExpressionStatement	err_msg += result_str	862:2:21513:21534	1048668	2	True				
ANR	1049202	AssignmentExpression	err_msg += result_str		1048668	0		+=			
ANR	1049203	Identifier	err_msg		1048668	0					
ANR	1049204	Identifier	result_str		1048668	1					
ANR	1049205	ExpressionStatement	"err_msg += ""' but does not have the """	863:2:21538:21575	1048668	3	True				
ANR	1049206	AssignmentExpression	"err_msg += ""' but does not have the """		1048668	0		+=			
ANR	1049207	Identifier	err_msg		1048668	0					
ANR	1049208	PrimaryExpression	"""' but does not have the """		1048668	1					
ANR	1049209	ExpressionStatement	err_msg += ATTR_ERROR_STRING	864:2:21579:21607	1048668	4	True				
ANR	1049210	AssignmentExpression	err_msg += ATTR_ERROR_STRING		1048668	0		+=			
ANR	1049211	Identifier	err_msg		1048668	0					
ANR	1049212	Identifier	ATTR_ERROR_STRING		1048668	1					
ANR	1049213	ExpressionStatement	"err_msg += "" attribute"""	865:2:21611:21634	1048668	5	True				
ANR	1049214	AssignmentExpression	"err_msg += "" attribute"""		1048668	0		+=			
ANR	1049215	Identifier	err_msg		1048668	0					
ANR	1049216	PrimaryExpression	""" attribute"""		1048668	1					
ANR	1049217	ExpressionStatement	"newError ( result , err_msg . Value ( ) )"	866:2:21638:21673	1048668	6	True				
ANR	1049218	CallExpression	"newError ( result , err_msg . Value ( ) )"		1048668	0					
ANR	1049219	Callee	newError		1048668	0					
ANR	1049220	Identifier	newError		1048668	0					
ANR	1049221	ArgumentList	result		1048668	1					
ANR	1049222	Argument	result		1048668	0					
ANR	1049223	Identifier	result		1048668	0					
ANR	1049224	Argument	err_msg . Value ( )		1048668	1					
ANR	1049225	CallExpression	err_msg . Value ( )		1048668	0					
ANR	1049226	Callee	err_msg . Value		1048668	0					
ANR	1049227	MemberAccess	err_msg . Value		1048668	0					
ANR	1049228	Identifier	err_msg		1048668	0					
ANR	1049229	Identifier	Value		1048668	1					
ANR	1049230	ArgumentList			1048668	1					
ANR	1049231	ExpressionStatement	free ( result_str )	867:2:21677:21695	1048668	7	True				
ANR	1049232	CallExpression	free ( result_str )		1048668	0					
ANR	1049233	Callee	free		1048668	0					
ANR	1049234	Identifier	free		1048668	0					
ANR	1049235	ArgumentList	result_str		1048668	1					
ANR	1049236	Argument	result_str		1048668	0					
ANR	1049237	Identifier	result_str		1048668	0					
ANR	1049238	ReturnStatement	return false ;	868:2:21699:21711	1048668	8	True				
ANR	1049239	Identifier	false		1048668	0					
ANR	1049240	IfStatement	if ( result )		1048668	25					
ANR	1049241	Condition	result	870:5:21721:21726	1048668	0	True				
ANR	1049242	Identifier	result		1048668	0					
ANR	1049243	CompoundStatement		133:14:3476:3476	1048668	1					
ANR	1049244	ExpressionStatement	"newError ( result , err )"	872:2:21791:21814	1048668	0	True				
ANR	1049245	CallExpression	"newError ( result , err )"		1048668	0					
ANR	1049246	Callee	newError		1048668	0					
ANR	1049247	Identifier	newError		1048668	0					
ANR	1049248	ArgumentList	result		1048668	1					
ANR	1049249	Argument	result		1048668	0					
ANR	1049250	Identifier	result		1048668	0					
ANR	1049251	Argument	err		1048668	1					
ANR	1049252	Identifier	err		1048668	0					
ANR	1049253	ElseStatement	else		1048668	0					
ANR	1049254	CompoundStatement		136:8:3570:3570	1048668	0					
ANR	1049255	ExpressionStatement	"newError ( CA_INVALID_REPLY , err )"	879:2:22126:22159	1048668	0	True				
ANR	1049256	CallExpression	"newError ( CA_INVALID_REPLY , err )"		1048668	0					
ANR	1049257	Callee	newError		1048668	0					
ANR	1049258	Identifier	newError		1048668	0					
ANR	1049259	ArgumentList	CA_INVALID_REPLY		1048668	1					
ANR	1049260	Argument	CA_INVALID_REPLY		1048668	0					
ANR	1049261	Identifier	CA_INVALID_REPLY		1048668	0					
ANR	1049262	Argument	err		1048668	1					
ANR	1049263	Identifier	err		1048668	0					
ANR	1049264	ExpressionStatement	free ( err )	881:1:22170:22181	1048668	26	True				
ANR	1049265	CallExpression	free ( err )		1048668	0					
ANR	1049266	Callee	free		1048668	0					
ANR	1049267	Identifier	free		1048668	0					
ANR	1049268	ArgumentList	err		1048668	1					
ANR	1049269	Argument	err		1048668	0					
ANR	1049270	Identifier	err		1048668	0					
ANR	1049271	ExpressionStatement	free ( result_str )	882:1:22184:22202	1048668	27	True				
ANR	1049272	CallExpression	free ( result_str )		1048668	0					
ANR	1049273	Callee	free		1048668	0					
ANR	1049274	Identifier	free		1048668	0					
ANR	1049275	ArgumentList	result_str		1048668	1					
ANR	1049276	Argument	result_str		1048668	0					
ANR	1049277	Identifier	result_str		1048668	0					
ANR	1049278	ReturnStatement	return false ;	883:1:22205:22217	1048668	28	True				
ANR	1049279	Identifier	false		1048668	0					
ANR	1049280	ReturnType	bool		1048668	1					
ANR	1049281	Identifier	Daemon :: sendCACmd		1048668	2					
ANR	1049282	ParameterList	"ClassAd * req , ClassAd * reply , ReliSock * cmd_sock , bool force_auth , int timeout , char const * sec_session_id"		1048668	3					
ANR	1049283	Parameter	ClassAd * req	736:19:18137:18148	1048668	0	True				
ANR	1049284	ParameterType	ClassAd *		1048668	0					
ANR	1049285	Identifier	req		1048668	1					
ANR	1049286	Parameter	ClassAd * reply	736:33:18151:18164	1048668	1	True				
ANR	1049287	ParameterType	ClassAd *		1048668	0					
ANR	1049288	Identifier	reply		1048668	1					
ANR	1049289	Parameter	ReliSock * cmd_sock	736:49:18167:18184	1048668	2	True				
ANR	1049290	ParameterType	ReliSock *		1048668	0					
ANR	1049291	Identifier	cmd_sock		1048668	1					
ANR	1049292	Parameter	bool force_auth	737:7:18194:18208	1048668	3	True				
ANR	1049293	ParameterType	bool		1048668	0					
ANR	1049294	Identifier	force_auth		1048668	1					
ANR	1049295	Parameter	int timeout	737:24:18211:18221	1048668	4	True				
ANR	1049296	ParameterType	int		1048668	0					
ANR	1049297	Identifier	timeout		1048668	1					
ANR	1049298	Parameter	char const * sec_session_id	737:37:18224:18249	1048668	5	True				
ANR	1049299	ParameterType	char const *		1048668	0					
ANR	1049300	Identifier	sec_session_id		1048668	1					
ANR	1049301	CFGEntryNode	ENTRY		1048668		True				
ANR	1049302	CFGExitNode	EXIT		1048668		True				
ANR	1049303	Symbol	connectSock		1048668						
ANR	1049304	Symbol	* cmd_sock		1048668						
ANR	1049305	Symbol	cmd_sock		1048668						
ANR	1049306	Symbol	& errstack		1048668						
ANR	1049307	Symbol	reply		1048668						
ANR	1049308	Symbol	req		1048668						
ANR	1049309	Symbol	CA_COMMUNICATION_ERROR		1048668						
ANR	1049310	Symbol	checkAddr		1048668						
ANR	1049311	Symbol	* reply		1048668						
ANR	1049312	Symbol	NULL		1048668						
ANR	1049313	Symbol	REPLY_ADTYPE		1048668						
ANR	1049314	Symbol	startCommand		1048668						
ANR	1049315	Symbol	CA_SUCCESS		1048668						
ANR	1049316	Symbol	CA_CMD		1048668						
ANR	1049317	Symbol	& result_str		1048668						
ANR	1049318	Symbol	ATTR_ERROR_STRING		1048668						
ANR	1049319	Symbol	COMMAND_ADTYPE		1048668						
ANR	1049320	Symbol	errstack		1048668						
ANR	1049321	Symbol	reply -> initFromStream		1048668						
ANR	1049322	Symbol	CA_CONNECT_FAILED		1048668						
ANR	1049323	Symbol	_addr		1048668						
ANR	1049324	Symbol	true		1048668						
ANR	1049325	Symbol	CA_AUTH_CMD		1048668						
ANR	1049326	Symbol	cmd		1048668						
ANR	1049327	Symbol	ATTR_RESULT		1048668						
ANR	1049328	Symbol	getCAResultNum		1048668						
ANR	1049329	Symbol	CA_INVALID_REQUEST		1048668						
ANR	1049330	Symbol	daemonString		1048668						
ANR	1049331	Symbol	req -> put		1048668						
ANR	1049332	Symbol	* req		1048668						
ANR	1049333	Symbol	cmd_sock -> end_of_message		1048668						
ANR	1049334	Symbol	& err		1048668						
ANR	1049335	Symbol	timeout		1048668						
ANR	1049336	Symbol	result		1048668						
ANR	1049337	Symbol	reply -> LookupString		1048668						
ANR	1049338	Symbol	CA_INVALID_REPLY		1048668						
ANR	1049339	Symbol	CA_NOT_AUTHENTICATED		1048668						
ANR	1049340	Symbol	e . getFullText		1048668						
ANR	1049341	Symbol	sec_session_id		1048668						
ANR	1049342	Symbol	result_str		1048668						
ANR	1049343	Symbol	err		1048668						
ANR	1049344	Symbol	e		1048668						
ANR	1049345	Symbol	false		1048668						
ANR	1049346	Symbol	_type		1048668						
ANR	1049347	Symbol	& e		1048668						
ANR	1049348	Symbol	err_msg . Value		1048668						
ANR	1049349	Symbol	forceAuthentication		1048668						
ANR	1049350	Symbol	err_msg		1048668						
ANR	1049351	Symbol	errstack . getFullText		1048668						
ANR	1049352	Symbol	force_auth		1048668						
ANR	1049353	Function	Daemon :: locate	891:0:22392:25898							
ANR	1049354	FunctionDef	Daemon :: locate ()		1049353	0					
ANR	1049355	CompoundStatement		893:0:22420:25898	1049353	0					
ANR	1049356	IdentifierDeclStatement	bool rval = false ;	894:1:22423:22438	1049353	0	True				
ANR	1049357	IdentifierDecl	rval = false		1049353	0					
ANR	1049358	IdentifierDeclType	bool		1049353	0					
ANR	1049359	Identifier	rval		1049353	1					
ANR	1049360	AssignmentExpression	rval = false		1049353	2		=			
ANR	1049361	Identifier	false		1049353	0					
ANR	1049362	Identifier	false		1049353	1					
ANR	1049363	IdentifierDeclStatement	char * tmp = NULL ;	895:1:22441:22457	1049353	1	True				
ANR	1049364	IdentifierDecl	* tmp = NULL		1049353	0					
ANR	1049365	IdentifierDeclType	char *		1049353	0					
ANR	1049366	Identifier	tmp		1049353	1					
ANR	1049367	AssignmentExpression	* tmp = NULL		1049353	2		=			
ANR	1049368	Identifier	NULL		1049353	0					
ANR	1049369	Identifier	NULL		1049353	1					
ANR	1049370	IfStatement	if ( _tried_locate )		1049353	2					
ANR	1049371	Condition	_tried_locate	898:5:22508:22520	1049353	0	True				
ANR	1049372	Identifier	_tried_locate		1049353	0					
ANR	1049373	CompoundStatement		6:21:103:103	1049353	1					
ANR	1049374	IfStatement	if ( _addr )		1049353	0					
ANR	1049375	Condition	_addr	901:6:22648:22652	1049353	0	True				
ANR	1049376	Identifier	_addr		1049353	0					
ANR	1049377	CompoundStatement		9:14:235:235	1049353	1					
ANR	1049378	ReturnStatement	return true ;	902:3:22661:22672	1049353	0	True				
ANR	1049379	Identifier	true		1049353	0					
ANR	1049380	ElseStatement	else		1049353	0					
ANR	1049381	CompoundStatement		11:9:262:262	1049353	0					
ANR	1049382	ReturnStatement	return false ;	904:3:22688:22700	1049353	0	True				
ANR	1049383	Identifier	false		1049353	0					
ANR	1049384	ExpressionStatement	_tried_locate = true	907:1:22710:22730	1049353	3	True				
ANR	1049385	AssignmentExpression	_tried_locate = true		1049353	0		=			
ANR	1049386	Identifier	_tried_locate		1049353	0					
ANR	1049387	Identifier	true		1049353	1					
ANR	1049388	SwitchStatement	switch ( _type )		1049353	4					
ANR	1049389	Condition	_type	914:9:23014:23018	1049353	0	True				
ANR	1049390	Identifier	_type		1049353	0					
ANR	1049391	CompoundStatement		22:17:601:601	1049353	1					
ANR	1049392	Label	case DT_ANY :	915:1:23025:23036	1049353	0	True				
ANR	1049393	Identifier	DT_ANY		1049353	0					
ANR	1049394	ExpressionStatement	rval = true	917:2:23063:23074	1049353	1	True				
ANR	1049395	AssignmentExpression	rval = true		1049353	0		=			
ANR	1049396	Identifier	rval		1049353	0					
ANR	1049397	Identifier	true		1049353	1					
ANR	1049398	BreakStatement	break ;	918:2:23078:23083	1049353	2	True				
ANR	1049399	Label	case DT_GENERIC :	919:1:23086:23101	1049353	3	True				
ANR	1049400	Identifier	DT_GENERIC		1049353	0					
ANR	1049401	ExpressionStatement	rval = getDaemonInfo ( GENERIC_AD )	920:2:23105:23139	1049353	4	True				
ANR	1049402	AssignmentExpression	rval = getDaemonInfo ( GENERIC_AD )		1049353	0		=			
ANR	1049403	Identifier	rval		1049353	0					
ANR	1049404	CallExpression	getDaemonInfo ( GENERIC_AD )		1049353	1					
ANR	1049405	Callee	getDaemonInfo		1049353	0					
ANR	1049406	Identifier	getDaemonInfo		1049353	0					
ANR	1049407	ArgumentList	GENERIC_AD		1049353	1					
ANR	1049408	Argument	GENERIC_AD		1049353	0					
ANR	1049409	Identifier	GENERIC_AD		1049353	0					
ANR	1049410	BreakStatement	break ;	921:2:23143:23148	1049353	5	True				
ANR	1049411	Label	case DT_CLUSTER :	922:1:23151:23166	1049353	6	True				
ANR	1049412	Identifier	DT_CLUSTER		1049353	0					
ANR	1049413	ExpressionStatement	"setSubsystem ( ""CLUSTER"" )"	923:2:23170:23195	1049353	7	True				
ANR	1049414	CallExpression	"setSubsystem ( ""CLUSTER"" )"		1049353	0					
ANR	1049415	Callee	setSubsystem		1049353	0					
ANR	1049416	Identifier	setSubsystem		1049353	0					
ANR	1049417	ArgumentList	"""CLUSTER"""		1049353	1					
ANR	1049418	Argument	"""CLUSTER"""		1049353	0					
ANR	1049419	PrimaryExpression	"""CLUSTER"""		1049353	0					
ANR	1049420	ExpressionStatement	rval = getDaemonInfo ( CLUSTER_AD )	924:2:23199:23233	1049353	8	True				
ANR	1049421	AssignmentExpression	rval = getDaemonInfo ( CLUSTER_AD )		1049353	0		=			
ANR	1049422	Identifier	rval		1049353	0					
ANR	1049423	CallExpression	getDaemonInfo ( CLUSTER_AD )		1049353	1					
ANR	1049424	Callee	getDaemonInfo		1049353	0					
ANR	1049425	Identifier	getDaemonInfo		1049353	0					
ANR	1049426	ArgumentList	CLUSTER_AD		1049353	1					
ANR	1049427	Argument	CLUSTER_AD		1049353	0					
ANR	1049428	Identifier	CLUSTER_AD		1049353	0					
ANR	1049429	BreakStatement	break ;	925:2:23237:23242	1049353	9	True				
ANR	1049430	Label	case DT_SCHEDD :	926:1:23245:23259	1049353	10	True				
ANR	1049431	Identifier	DT_SCHEDD		1049353	0					
ANR	1049432	ExpressionStatement	"setSubsystem ( ""SCHEDD"" )"	927:2:23263:23287	1049353	11	True				
ANR	1049433	CallExpression	"setSubsystem ( ""SCHEDD"" )"		1049353	0					
ANR	1049434	Callee	setSubsystem		1049353	0					
ANR	1049435	Identifier	setSubsystem		1049353	0					
ANR	1049436	ArgumentList	"""SCHEDD"""		1049353	1					
ANR	1049437	Argument	"""SCHEDD"""		1049353	0					
ANR	1049438	PrimaryExpression	"""SCHEDD"""		1049353	0					
ANR	1049439	ExpressionStatement	rval = getDaemonInfo ( SCHEDD_AD )	928:2:23291:23324	1049353	12	True				
ANR	1049440	AssignmentExpression	rval = getDaemonInfo ( SCHEDD_AD )		1049353	0		=			
ANR	1049441	Identifier	rval		1049353	0					
ANR	1049442	CallExpression	getDaemonInfo ( SCHEDD_AD )		1049353	1					
ANR	1049443	Callee	getDaemonInfo		1049353	0					
ANR	1049444	Identifier	getDaemonInfo		1049353	0					
ANR	1049445	ArgumentList	SCHEDD_AD		1049353	1					
ANR	1049446	Argument	SCHEDD_AD		1049353	0					
ANR	1049447	Identifier	SCHEDD_AD		1049353	0					
ANR	1049448	BreakStatement	break ;	929:2:23328:23333	1049353	13	True				
ANR	1049449	Label	case DT_STARTD :	930:1:23336:23350	1049353	14	True				
ANR	1049450	Identifier	DT_STARTD		1049353	0					
ANR	1049451	ExpressionStatement	"setSubsystem ( ""STARTD"" )"	931:2:23354:23378	1049353	15	True				
ANR	1049452	CallExpression	"setSubsystem ( ""STARTD"" )"		1049353	0					
ANR	1049453	Callee	setSubsystem		1049353	0					
ANR	1049454	Identifier	setSubsystem		1049353	0					
ANR	1049455	ArgumentList	"""STARTD"""		1049353	1					
ANR	1049456	Argument	"""STARTD"""		1049353	0					
ANR	1049457	PrimaryExpression	"""STARTD"""		1049353	0					
ANR	1049458	ExpressionStatement	rval = getDaemonInfo ( STARTD_AD )	932:2:23382:23415	1049353	16	True				
ANR	1049459	AssignmentExpression	rval = getDaemonInfo ( STARTD_AD )		1049353	0		=			
ANR	1049460	Identifier	rval		1049353	0					
ANR	1049461	CallExpression	getDaemonInfo ( STARTD_AD )		1049353	1					
ANR	1049462	Callee	getDaemonInfo		1049353	0					
ANR	1049463	Identifier	getDaemonInfo		1049353	0					
ANR	1049464	ArgumentList	STARTD_AD		1049353	1					
ANR	1049465	Argument	STARTD_AD		1049353	0					
ANR	1049466	Identifier	STARTD_AD		1049353	0					
ANR	1049467	BreakStatement	break ;	933:2:23419:23424	1049353	17	True				
ANR	1049468	Label	case DT_MASTER :	934:1:23427:23441	1049353	18	True				
ANR	1049469	Identifier	DT_MASTER		1049353	0					
ANR	1049470	ExpressionStatement	"setSubsystem ( ""MASTER"" )"	935:2:23445:23469	1049353	19	True				
ANR	1049471	CallExpression	"setSubsystem ( ""MASTER"" )"		1049353	0					
ANR	1049472	Callee	setSubsystem		1049353	0					
ANR	1049473	Identifier	setSubsystem		1049353	0					
ANR	1049474	ArgumentList	"""MASTER"""		1049353	1					
ANR	1049475	Argument	"""MASTER"""		1049353	0					
ANR	1049476	PrimaryExpression	"""MASTER"""		1049353	0					
ANR	1049477	ExpressionStatement	rval = getDaemonInfo ( MASTER_AD )	936:2:23473:23506	1049353	20	True				
ANR	1049478	AssignmentExpression	rval = getDaemonInfo ( MASTER_AD )		1049353	0		=			
ANR	1049479	Identifier	rval		1049353	0					
ANR	1049480	CallExpression	getDaemonInfo ( MASTER_AD )		1049353	1					
ANR	1049481	Callee	getDaemonInfo		1049353	0					
ANR	1049482	Identifier	getDaemonInfo		1049353	0					
ANR	1049483	ArgumentList	MASTER_AD		1049353	1					
ANR	1049484	Argument	MASTER_AD		1049353	0					
ANR	1049485	Identifier	MASTER_AD		1049353	0					
ANR	1049486	BreakStatement	break ;	937:2:23510:23515	1049353	21	True				
ANR	1049487	Label	case DT_COLLECTOR :	938:1:23518:23535	1049353	22	True				
ANR	1049488	Identifier	DT_COLLECTOR		1049353	0					
ANR	1049489	DoStatement	do		1049353	23					
ANR	1049490	CompoundStatement		47:5:1121:1121	1049353	0					
ANR	1049491	ExpressionStatement	"rval = getCmInfo ( ""COLLECTOR"" )"	940:3:23547:23578	1049353	0	True				
ANR	1049492	AssignmentExpression	"rval = getCmInfo ( ""COLLECTOR"" )"		1049353	0		=			
ANR	1049493	Identifier	rval		1049353	0					
ANR	1049494	CallExpression	"getCmInfo ( ""COLLECTOR"" )"		1049353	1					
ANR	1049495	Callee	getCmInfo		1049353	0					
ANR	1049496	Identifier	getCmInfo		1049353	0					
ANR	1049497	ArgumentList	"""COLLECTOR"""		1049353	1					
ANR	1049498	Argument	"""COLLECTOR"""		1049353	0					
ANR	1049499	PrimaryExpression	"""COLLECTOR"""		1049353	0					
ANR	1049500	Condition	rval == false && nextValidCm ( ) == true	941:11:23591:23628	1049353	1	True				
ANR	1049501	AndExpression	rval == false && nextValidCm ( ) == true		1049353	0		&&			
ANR	1049502	EqualityExpression	rval == false		1049353	0		==			
ANR	1049503	Identifier	rval		1049353	0					
ANR	1049504	Identifier	false		1049353	1					
ANR	1049505	EqualityExpression	nextValidCm ( ) == true		1049353	1		==			
ANR	1049506	CallExpression	nextValidCm ( )		1049353	0					
ANR	1049507	Callee	nextValidCm		1049353	0					
ANR	1049508	Identifier	nextValidCm		1049353	0					
ANR	1049509	ArgumentList			1049353	1					
ANR	1049510	Identifier	true		1049353	1					
ANR	1049511	BreakStatement	break ;	942:2:23634:23639	1049353	24	True				
ANR	1049512	Label	case DT_NEGOTIATOR :	943:1:23642:23660	1049353	25	True				
ANR	1049513	Identifier	DT_NEGOTIATOR		1049353	0					
ANR	1049514	IfStatement	"if ( ! _pool && ( tmp = getCmHostFromConfig ( ""NEGOTIATOR"" ) ) )"		1049353	26					
ANR	1049515	Condition	"! _pool && ( tmp = getCmHostFromConfig ( ""NEGOTIATOR"" ) )"	944:6:23668:23720	1049353	0	True				
ANR	1049516	AndExpression	"! _pool && ( tmp = getCmHostFromConfig ( ""NEGOTIATOR"" ) )"		1049353	0		&&			
ANR	1049517	UnaryOperationExpression	! _pool		1049353	0					
ANR	1049518	UnaryOperator	!		1049353	0					
ANR	1049519	Identifier	_pool		1049353	1					
ANR	1049520	AssignmentExpression	"tmp = getCmHostFromConfig ( ""NEGOTIATOR"" )"		1049353	1		=			
ANR	1049521	Identifier	tmp		1049353	0					
ANR	1049522	CallExpression	"getCmHostFromConfig ( ""NEGOTIATOR"" )"		1049353	1					
ANR	1049523	Callee	getCmHostFromConfig		1049353	0					
ANR	1049524	Identifier	getCmHostFromConfig		1049353	0					
ANR	1049525	ArgumentList	"""NEGOTIATOR"""		1049353	1					
ANR	1049526	Argument	"""NEGOTIATOR"""		1049353	0					
ANR	1049527	PrimaryExpression	"""NEGOTIATOR"""		1049353	0					
ANR	1049528	CompoundStatement		52:62:1303:1303	1049353	1					
ANR	1049529	ExpressionStatement	"rval = getCmInfo ( ""NEGOTIATOR"" )"	948:3:23869:23901	1049353	0	True				
ANR	1049530	AssignmentExpression	"rval = getCmInfo ( ""NEGOTIATOR"" )"		1049353	0		=			
ANR	1049531	Identifier	rval		1049353	0					
ANR	1049532	CallExpression	"getCmInfo ( ""NEGOTIATOR"" )"		1049353	1					
ANR	1049533	Callee	getCmInfo		1049353	0					
ANR	1049534	Identifier	getCmInfo		1049353	0					
ANR	1049535	ArgumentList	"""NEGOTIATOR"""		1049353	1					
ANR	1049536	Argument	"""NEGOTIATOR"""		1049353	0					
ANR	1049537	PrimaryExpression	"""NEGOTIATOR"""		1049353	0					
ANR	1049538	ExpressionStatement	free ( tmp )	949:3:23906:23917	1049353	1	True				
ANR	1049539	CallExpression	free ( tmp )		1049353	0					
ANR	1049540	Callee	free		1049353	0					
ANR	1049541	Identifier	free		1049353	0					
ANR	1049542	ArgumentList	tmp		1049353	1					
ANR	1049543	Argument	tmp		1049353	0					
ANR	1049544	Identifier	tmp		1049353	0					
ANR	1049545	ExpressionStatement	tmp = NULL	950:3:23922:23932	1049353	2	True				
ANR	1049546	AssignmentExpression	tmp = NULL		1049353	0		=			
ANR	1049547	Identifier	tmp		1049353	0					
ANR	1049548	Identifier	NULL		1049353	1					
ANR	1049549	ElseStatement	else		1049353	0					
ANR	1049550	CompoundStatement		59:9:1522:1522	1049353	0					
ANR	1049551	ExpressionStatement	"setSubsystem ( ""NEGOTIATOR"" )"	954:5:24034:24062	1049353	0	True				
ANR	1049552	CallExpression	"setSubsystem ( ""NEGOTIATOR"" )"		1049353	0					
ANR	1049553	Callee	setSubsystem		1049353	0					
ANR	1049554	Identifier	setSubsystem		1049353	0					
ANR	1049555	ArgumentList	"""NEGOTIATOR"""		1049353	1					
ANR	1049556	Argument	"""NEGOTIATOR"""		1049353	0					
ANR	1049557	PrimaryExpression	"""NEGOTIATOR"""		1049353	0					
ANR	1049558	ExpressionStatement	rval = getDaemonInfo ( NEGOTIATOR_AD )	955:3:24067:24105	1049353	1	True				
ANR	1049559	AssignmentExpression	rval = getDaemonInfo ( NEGOTIATOR_AD )		1049353	0		=			
ANR	1049560	Identifier	rval		1049353	0					
ANR	1049561	CallExpression	getDaemonInfo ( NEGOTIATOR_AD )		1049353	1					
ANR	1049562	Callee	getDaemonInfo		1049353	0					
ANR	1049563	Identifier	getDaemonInfo		1049353	0					
ANR	1049564	ArgumentList	NEGOTIATOR_AD		1049353	1					
ANR	1049565	Argument	NEGOTIATOR_AD		1049353	0					
ANR	1049566	Identifier	NEGOTIATOR_AD		1049353	0					
ANR	1049567	BreakStatement	break ;	957:2:24113:24118	1049353	27	True				
ANR	1049568	Label	case DT_CREDD :	958:1:24121:24134	1049353	28	True				
ANR	1049569	Identifier	DT_CREDD		1049353	0					
ANR	1049570	ExpressionStatement	"setSubsystem ( ""CREDD"" )"	959:3:24139:24162	1049353	29	True				
ANR	1049571	CallExpression	"setSubsystem ( ""CREDD"" )"		1049353	0					
ANR	1049572	Callee	setSubsystem		1049353	0					
ANR	1049573	Identifier	setSubsystem		1049353	0					
ANR	1049574	ArgumentList	"""CREDD"""		1049353	1					
ANR	1049575	Argument	"""CREDD"""		1049353	0					
ANR	1049576	PrimaryExpression	"""CREDD"""		1049353	0					
ANR	1049577	ExpressionStatement	rval = getDaemonInfo ( CREDD_AD )	960:3:24167:24199	1049353	30	True				
ANR	1049578	AssignmentExpression	rval = getDaemonInfo ( CREDD_AD )		1049353	0		=			
ANR	1049579	Identifier	rval		1049353	0					
ANR	1049580	CallExpression	getDaemonInfo ( CREDD_AD )		1049353	1					
ANR	1049581	Callee	getDaemonInfo		1049353	0					
ANR	1049582	Identifier	getDaemonInfo		1049353	0					
ANR	1049583	ArgumentList	CREDD_AD		1049353	1					
ANR	1049584	Argument	CREDD_AD		1049353	0					
ANR	1049585	Identifier	CREDD_AD		1049353	0					
ANR	1049586	BreakStatement	break ;	961:3:24204:24209	1049353	31	True				
ANR	1049587	Label	case DT_STORK :	962:1:24212:24225	1049353	32	True				
ANR	1049588	Identifier	DT_STORK		1049353	0					
ANR	1049589	ExpressionStatement	"setSubsystem ( ""STORK"" )"	963:3:24230:24253	1049353	33	True				
ANR	1049590	CallExpression	"setSubsystem ( ""STORK"" )"		1049353	0					
ANR	1049591	Callee	setSubsystem		1049353	0					
ANR	1049592	Identifier	setSubsystem		1049353	0					
ANR	1049593	ArgumentList	"""STORK"""		1049353	1					
ANR	1049594	Argument	"""STORK"""		1049353	0					
ANR	1049595	PrimaryExpression	"""STORK"""		1049353	0					
ANR	1049596	ExpressionStatement	"rval = getDaemonInfo ( ANY_AD , false )"	964:3:24258:24295	1049353	34	True				
ANR	1049597	AssignmentExpression	"rval = getDaemonInfo ( ANY_AD , false )"		1049353	0		=			
ANR	1049598	Identifier	rval		1049353	0					
ANR	1049599	CallExpression	"getDaemonInfo ( ANY_AD , false )"		1049353	1					
ANR	1049600	Callee	getDaemonInfo		1049353	0					
ANR	1049601	Identifier	getDaemonInfo		1049353	0					
ANR	1049602	ArgumentList	ANY_AD		1049353	1					
ANR	1049603	Argument	ANY_AD		1049353	0					
ANR	1049604	Identifier	ANY_AD		1049353	0					
ANR	1049605	Argument	false		1049353	1					
ANR	1049606	Identifier	false		1049353	0					
ANR	1049607	BreakStatement	break ;	965:3:24300:24305	1049353	35	True				
ANR	1049608	Label	case DT_VIEW_COLLECTOR :	966:1:24308:24330	1049353	36	True				
ANR	1049609	Identifier	DT_VIEW_COLLECTOR		1049353	0					
ANR	1049610	IfStatement	"if ( ( rval = getCmInfo ( ""CONDOR_VIEW"" ) ) )"		1049353	37					
ANR	1049611	Condition	"rval = getCmInfo ( ""CONDOR_VIEW"" )"	967:6:24338:24370	1049353	0	True				
ANR	1049612	AssignmentExpression	"rval = getCmInfo ( ""CONDOR_VIEW"" )"		1049353	0		=			
ANR	1049613	Identifier	rval		1049353	0					
ANR	1049614	CallExpression	"getCmInfo ( ""CONDOR_VIEW"" )"		1049353	1					
ANR	1049615	Callee	getCmInfo		1049353	0					
ANR	1049616	Identifier	getCmInfo		1049353	0					
ANR	1049617	ArgumentList	"""CONDOR_VIEW"""		1049353	1					
ANR	1049618	Argument	"""CONDOR_VIEW"""		1049353	0					
ANR	1049619	PrimaryExpression	"""CONDOR_VIEW"""		1049353	0					
ANR	1049620	CompoundStatement		75:42:1953:1953	1049353	1					
ANR	1049621	BreakStatement	break ;	969:3:24414:24419	1049353	0	True				
ANR	1049622	DoStatement	do		1049353	38					
ANR	1049623	CompoundStatement		81:5:2091:2091	1049353	0					
ANR	1049624	ExpressionStatement	"rval = getCmInfo ( ""COLLECTOR"" )"	974:3:24517:24548	1049353	0	True				
ANR	1049625	AssignmentExpression	"rval = getCmInfo ( ""COLLECTOR"" )"		1049353	0		=			
ANR	1049626	Identifier	rval		1049353	0					
ANR	1049627	CallExpression	"getCmInfo ( ""COLLECTOR"" )"		1049353	1					
ANR	1049628	Callee	getCmInfo		1049353	0					
ANR	1049629	Identifier	getCmInfo		1049353	0					
ANR	1049630	ArgumentList	"""COLLECTOR"""		1049353	1					
ANR	1049631	Argument	"""COLLECTOR"""		1049353	0					
ANR	1049632	PrimaryExpression	"""COLLECTOR"""		1049353	0					
ANR	1049633	Condition	rval == false && nextValidCm ( ) == true	975:11:24561:24598	1049353	1	True				
ANR	1049634	AndExpression	rval == false && nextValidCm ( ) == true		1049353	0		&&			
ANR	1049635	EqualityExpression	rval == false		1049353	0		==			
ANR	1049636	Identifier	rval		1049353	0					
ANR	1049637	Identifier	false		1049353	1					
ANR	1049638	EqualityExpression	nextValidCm ( ) == true		1049353	1		==			
ANR	1049639	CallExpression	nextValidCm ( )		1049353	0					
ANR	1049640	Callee	nextValidCm		1049353	0					
ANR	1049641	Identifier	nextValidCm		1049353	0					
ANR	1049642	ArgumentList			1049353	1					
ANR	1049643	Identifier	true		1049353	1					
ANR	1049644	BreakStatement	break ;	976:2:24604:24609	1049353	39	True				
ANR	1049645	Label	case DT_QUILL :	977:1:24612:24625	1049353	40	True				
ANR	1049646	Identifier	DT_QUILL		1049353	0					
ANR	1049647	ExpressionStatement	"setSubsystem ( ""QUILL"" )"	978:2:24629:24652	1049353	41	True				
ANR	1049648	CallExpression	"setSubsystem ( ""QUILL"" )"		1049353	0					
ANR	1049649	Callee	setSubsystem		1049353	0					
ANR	1049650	Identifier	setSubsystem		1049353	0					
ANR	1049651	ArgumentList	"""QUILL"""		1049353	1					
ANR	1049652	Argument	"""QUILL"""		1049353	0					
ANR	1049653	PrimaryExpression	"""QUILL"""		1049353	0					
ANR	1049654	ExpressionStatement	rval = getDaemonInfo ( SCHEDD_AD )	979:2:24656:24689	1049353	42	True				
ANR	1049655	AssignmentExpression	rval = getDaemonInfo ( SCHEDD_AD )		1049353	0		=			
ANR	1049656	Identifier	rval		1049353	0					
ANR	1049657	CallExpression	getDaemonInfo ( SCHEDD_AD )		1049353	1					
ANR	1049658	Callee	getDaemonInfo		1049353	0					
ANR	1049659	Identifier	getDaemonInfo		1049353	0					
ANR	1049660	ArgumentList	SCHEDD_AD		1049353	1					
ANR	1049661	Argument	SCHEDD_AD		1049353	0					
ANR	1049662	Identifier	SCHEDD_AD		1049353	0					
ANR	1049663	BreakStatement	break ;	980:2:24693:24698	1049353	43	True				
ANR	1049664	Label	case DT_TRANSFERD :	981:1:24701:24718	1049353	44	True				
ANR	1049665	Identifier	DT_TRANSFERD		1049353	0					
ANR	1049666	ExpressionStatement	"setSubsystem ( ""TRANSFERD"" )"	982:2:24722:24749	1049353	45	True				
ANR	1049667	CallExpression	"setSubsystem ( ""TRANSFERD"" )"		1049353	0					
ANR	1049668	Callee	setSubsystem		1049353	0					
ANR	1049669	Identifier	setSubsystem		1049353	0					
ANR	1049670	ArgumentList	"""TRANSFERD"""		1049353	1					
ANR	1049671	Argument	"""TRANSFERD"""		1049353	0					
ANR	1049672	PrimaryExpression	"""TRANSFERD"""		1049353	0					
ANR	1049673	ExpressionStatement	rval = getDaemonInfo ( ANY_AD )	983:2:24753:24783	1049353	46	True				
ANR	1049674	AssignmentExpression	rval = getDaemonInfo ( ANY_AD )		1049353	0		=			
ANR	1049675	Identifier	rval		1049353	0					
ANR	1049676	CallExpression	getDaemonInfo ( ANY_AD )		1049353	1					
ANR	1049677	Callee	getDaemonInfo		1049353	0					
ANR	1049678	Identifier	getDaemonInfo		1049353	0					
ANR	1049679	ArgumentList	ANY_AD		1049353	1					
ANR	1049680	Argument	ANY_AD		1049353	0					
ANR	1049681	Identifier	ANY_AD		1049353	0					
ANR	1049682	BreakStatement	break ;	984:2:24787:24792	1049353	47	True				
ANR	1049683	Label	case DT_LEASE_MANAGER :	985:1:24795:24816	1049353	48	True				
ANR	1049684	Identifier	DT_LEASE_MANAGER		1049353	0					
ANR	1049685	ExpressionStatement	"setSubsystem ( ""LEASEMANAGER"" )"	986:2:24820:24850	1049353	49	True				
ANR	1049686	CallExpression	"setSubsystem ( ""LEASEMANAGER"" )"		1049353	0					
ANR	1049687	Callee	setSubsystem		1049353	0					
ANR	1049688	Identifier	setSubsystem		1049353	0					
ANR	1049689	ArgumentList	"""LEASEMANAGER"""		1049353	1					
ANR	1049690	Argument	"""LEASEMANAGER"""		1049353	0					
ANR	1049691	PrimaryExpression	"""LEASEMANAGER"""		1049353	0					
ANR	1049692	ExpressionStatement	"rval = getDaemonInfo ( LEASE_MANAGER_AD , true )"	987:2:24854:24900	1049353	50	True				
ANR	1049693	AssignmentExpression	"rval = getDaemonInfo ( LEASE_MANAGER_AD , true )"		1049353	0		=			
ANR	1049694	Identifier	rval		1049353	0					
ANR	1049695	CallExpression	"getDaemonInfo ( LEASE_MANAGER_AD , true )"		1049353	1					
ANR	1049696	Callee	getDaemonInfo		1049353	0					
ANR	1049697	Identifier	getDaemonInfo		1049353	0					
ANR	1049698	ArgumentList	LEASE_MANAGER_AD		1049353	1					
ANR	1049699	Argument	LEASE_MANAGER_AD		1049353	0					
ANR	1049700	Identifier	LEASE_MANAGER_AD		1049353	0					
ANR	1049701	Argument	true		1049353	1					
ANR	1049702	Identifier	true		1049353	0					
ANR	1049703	BreakStatement	break ;	988:2:24904:24909	1049353	51	True				
ANR	1049704	Label	case DT_HAD :	989:1:24912:24923	1049353	52	True				
ANR	1049705	Identifier	DT_HAD		1049353	0					
ANR	1049706	ExpressionStatement	"setSubsystem ( ""HAD"" )"	990:2:24927:24948	1049353	53	True				
ANR	1049707	CallExpression	"setSubsystem ( ""HAD"" )"		1049353	0					
ANR	1049708	Callee	setSubsystem		1049353	0					
ANR	1049709	Identifier	setSubsystem		1049353	0					
ANR	1049710	ArgumentList	"""HAD"""		1049353	1					
ANR	1049711	Argument	"""HAD"""		1049353	0					
ANR	1049712	PrimaryExpression	"""HAD"""		1049353	0					
ANR	1049713	ExpressionStatement	rval = getDaemonInfo ( HAD_AD )	991:2:24952:24982	1049353	54	True				
ANR	1049714	AssignmentExpression	rval = getDaemonInfo ( HAD_AD )		1049353	0		=			
ANR	1049715	Identifier	rval		1049353	0					
ANR	1049716	CallExpression	getDaemonInfo ( HAD_AD )		1049353	1					
ANR	1049717	Callee	getDaemonInfo		1049353	0					
ANR	1049718	Identifier	getDaemonInfo		1049353	0					
ANR	1049719	ArgumentList	HAD_AD		1049353	1					
ANR	1049720	Argument	HAD_AD		1049353	0					
ANR	1049721	Identifier	HAD_AD		1049353	0					
ANR	1049722	BreakStatement	break ;	992:2:24986:24991	1049353	55	True				
ANR	1049723	Label	case DT_KBDD :	993:1:24994:25006	1049353	56	True				
ANR	1049724	Identifier	DT_KBDD		1049353	0					
ANR	1049725	ExpressionStatement	"setSubsystem ( ""KBDD"" )"	994:2:25010:25032	1049353	57	True				
ANR	1049726	CallExpression	"setSubsystem ( ""KBDD"" )"		1049353	0					
ANR	1049727	Callee	setSubsystem		1049353	0					
ANR	1049728	Identifier	setSubsystem		1049353	0					
ANR	1049729	ArgumentList	"""KBDD"""		1049353	1					
ANR	1049730	Argument	"""KBDD"""		1049353	0					
ANR	1049731	PrimaryExpression	"""KBDD"""		1049353	0					
ANR	1049732	ExpressionStatement	rval = getDaemonInfo ( NO_AD )	995:2:25036:25065	1049353	58	True				
ANR	1049733	AssignmentExpression	rval = getDaemonInfo ( NO_AD )		1049353	0		=			
ANR	1049734	Identifier	rval		1049353	0					
ANR	1049735	CallExpression	getDaemonInfo ( NO_AD )		1049353	1					
ANR	1049736	Callee	getDaemonInfo		1049353	0					
ANR	1049737	Identifier	getDaemonInfo		1049353	0					
ANR	1049738	ArgumentList	NO_AD		1049353	1					
ANR	1049739	Argument	NO_AD		1049353	0					
ANR	1049740	Identifier	NO_AD		1049353	0					
ANR	1049741	BreakStatement	break ;	996:2:25069:25074	1049353	59	True				
ANR	1049742	Label	default :	997:1:25077:25084	1049353	60	True				
ANR	1049743	Identifier	default		1049353	0					
ANR	1049744	ExpressionStatement	"EXCEPT ( ""Unknown daemon type (%d) in Daemon::locate"" , ( int ) _type )"	998:2:25088:25154	1049353	61	True				
ANR	1049745	CallExpression	"EXCEPT ( ""Unknown daemon type (%d) in Daemon::locate"" , ( int ) _type )"		1049353	0					
ANR	1049746	Callee	EXCEPT		1049353	0					
ANR	1049747	Identifier	EXCEPT		1049353	0					
ANR	1049748	ArgumentList	"""Unknown daemon type (%d) in Daemon::locate"""		1049353	1					
ANR	1049749	Argument	"""Unknown daemon type (%d) in Daemon::locate"""		1049353	0					
ANR	1049750	PrimaryExpression	"""Unknown daemon type (%d) in Daemon::locate"""		1049353	0					
ANR	1049751	Argument	( int ) _type		1049353	1					
ANR	1049752	CastExpression	( int ) _type		1049353	0					
ANR	1049753	CastTarget	int		1049353	0					
ANR	1049754	Identifier	_type		1049353	1					
ANR	1049755	IfStatement	if ( ! rval )		1049353	5					
ANR	1049756	Condition	! rval	1001:5:25165:25170	1049353	0	True				
ANR	1049757	UnaryOperationExpression	! rval		1049353	0					
ANR	1049758	UnaryOperator	!		1049353	0					
ANR	1049759	Identifier	rval		1049353	1					
ANR	1049760	CompoundStatement		109:13:2752:2752	1049353	1					
ANR	1049761	ReturnStatement	return false ;	1003:2:25225:25237	1049353	0	True				
ANR	1049762	Identifier	false		1049353	0					
ANR	1049763	ExpressionStatement	initHostnameFromFull ( )	1011:1:25463:25485	1049353	6	True				
ANR	1049764	CallExpression	initHostnameFromFull ( )		1049353	0					
ANR	1049765	Callee	initHostnameFromFull		1049353	0					
ANR	1049766	Identifier	initHostnameFromFull		1049353	0					
ANR	1049767	ArgumentList			1049353	1					
ANR	1049768	IfStatement	if ( _port <= 0 && _addr )		1049353	7					
ANR	1049769	Condition	_port <= 0 && _addr	1013:5:25493:25511	1049353	0	True				
ANR	1049770	AndExpression	_port <= 0 && _addr		1049353	0		&&			
ANR	1049771	RelationalExpression	_port <= 0		1049353	0		<=			
ANR	1049772	Identifier	_port		1049353	0					
ANR	1049773	PrimaryExpression	0		1049353	1					
ANR	1049774	Identifier	_addr		1049353	1					
ANR	1049775	CompoundStatement		121:27:3094:3094	1049353	1					
ANR	1049776	ExpressionStatement	_port = string_to_port ( _addr )	1015:2:25578:25609	1049353	0	True				
ANR	1049777	AssignmentExpression	_port = string_to_port ( _addr )		1049353	0		=			
ANR	1049778	Identifier	_port		1049353	0					
ANR	1049779	CallExpression	string_to_port ( _addr )		1049353	1					
ANR	1049780	Callee	string_to_port		1049353	0					
ANR	1049781	Identifier	string_to_port		1049353	0					
ANR	1049782	ArgumentList	_addr		1049353	1					
ANR	1049783	Argument	_addr		1049353	0					
ANR	1049784	Identifier	_addr		1049353	0					
ANR	1049785	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Using port %d based on address \\""%s\\""\\n"" , _port , _addr )"	1016:2:25613:25696	1049353	1	True				
ANR	1049786	CallExpression	"dprintf ( D_HOSTNAME , ""Using port %d based on address \\""%s\\""\\n"" , _port , _addr )"		1049353	0					
ANR	1049787	Callee	dprintf		1049353	0					
ANR	1049788	Identifier	dprintf		1049353	0					
ANR	1049789	ArgumentList	D_HOSTNAME		1049353	1					
ANR	1049790	Argument	D_HOSTNAME		1049353	0					
ANR	1049791	Identifier	D_HOSTNAME		1049353	0					
ANR	1049792	Argument	"""Using port %d based on address \\""%s\\""\\n"""		1049353	1					
ANR	1049793	PrimaryExpression	"""Using port %d based on address \\""%s\\""\\n"""		1049353	0					
ANR	1049794	Argument	_port		1049353	2					
ANR	1049795	Identifier	_port		1049353	0					
ANR	1049796	Argument	_addr		1049353	3					
ANR	1049797	Identifier	_addr		1049353	0					
ANR	1049798	IfStatement	if ( ! _name && _is_local )		1049353	8					
ANR	1049799	Condition	! _name && _is_local	1022:5:25833:25852	1049353	0	True				
ANR	1049800	AndExpression	! _name && _is_local		1049353	0		&&			
ANR	1049801	UnaryOperationExpression	! _name		1049353	0					
ANR	1049802	UnaryOperator	!		1049353	0					
ANR	1049803	Identifier	_name		1049353	1					
ANR	1049804	Identifier	_is_local		1049353	1					
ANR	1049805	CompoundStatement		130:27:3434:3434	1049353	1					
ANR	1049806	ExpressionStatement	_name = localName ( )	1023:2:25859:25878	1049353	0	True				
ANR	1049807	AssignmentExpression	_name = localName ( )		1049353	0		=			
ANR	1049808	Identifier	_name		1049353	0					
ANR	1049809	CallExpression	localName ( )		1049353	1					
ANR	1049810	Callee	localName		1049353	0					
ANR	1049811	Identifier	localName		1049353	0					
ANR	1049812	ArgumentList			1049353	1					
ANR	1049813	ReturnStatement	return true ;	1026:1:25885:25896	1049353	9	True				
ANR	1049814	Identifier	true		1049353	0					
ANR	1049815	ReturnType	bool		1049353	1					
ANR	1049816	Identifier	Daemon :: locate		1049353	2					
ANR	1049817	ParameterList			1049353	3					
ANR	1049818	CFGEntryNode	ENTRY		1049353		True				
ANR	1049819	CFGExitNode	EXIT		1049353		True				
ANR	1049820	Symbol	NEGOTIATOR_AD		1049353						
ANR	1049821	Symbol	_name		1049353						
ANR	1049822	Symbol	CREDD_AD		1049353						
ANR	1049823	Symbol	getCmInfo		1049353						
ANR	1049824	Symbol	nextValidCm		1049353						
ANR	1049825	Symbol	_port		1049353						
ANR	1049826	Symbol	MASTER_AD		1049353						
ANR	1049827	Symbol	NO_AD		1049353						
ANR	1049828	Symbol	CLUSTER_AD		1049353						
ANR	1049829	Symbol	_pool		1049353						
ANR	1049830	Symbol	tmp		1049353						
ANR	1049831	Symbol	_tried_locate		1049353						
ANR	1049832	Symbol	ANY_AD		1049353						
ANR	1049833	Symbol	rval		1049353						
ANR	1049834	Symbol	_is_local		1049353						
ANR	1049835	Symbol	getDaemonInfo		1049353						
ANR	1049836	Symbol	GENERIC_AD		1049353						
ANR	1049837	Symbol	D_HOSTNAME		1049353						
ANR	1049838	Symbol	NULL		1049353						
ANR	1049839	Symbol	LEASE_MANAGER_AD		1049353						
ANR	1049840	Symbol	HAD_AD		1049353						
ANR	1049841	Symbol	false		1049353						
ANR	1049842	Symbol	_type		1049353						
ANR	1049843	Symbol	SCHEDD_AD		1049353						
ANR	1049844	Symbol	string_to_port		1049353						
ANR	1049845	Symbol	localName		1049353						
ANR	1049846	Symbol	STARTD_AD		1049353						
ANR	1049847	Symbol	_addr		1049353						
ANR	1049848	Symbol	true		1049353						
ANR	1049849	Symbol	getCmHostFromConfig		1049353						
ANR	1049850	Function	Daemon :: setSubsystem	1030:0:25902:26038							
ANR	1049851	FunctionDef	Daemon :: setSubsystem (const char * subsys)		1049850	0					
ANR	1049852	CompoundStatement		1032:0:25950:26038	1049850	0					
ANR	1049853	IfStatement	if ( _subsys )		1049850	0					
ANR	1049854	Condition	_subsys	1033:5:25957:25963	1049850	0	True				
ANR	1049855	Identifier	_subsys		1049850	0					
ANR	1049856	CompoundStatement		2:15:16:16	1049850	1					
ANR	1049857	Statement	delete	1034:2:25971:25976	1049850	0	True				
ANR	1049858	Statement	[	1034:9:25978:25978	1049850	1	True				
ANR	1049859	Statement	]	1034:10:25979:25979	1049850	2	True				
ANR	1049860	ExpressionStatement	_subsys	1034:12:25981:25988	1049850	3	True				
ANR	1049861	Identifier	_subsys		1049850	0					
ANR	1049862	ExpressionStatement	_subsys = strnewp ( subsys )	1036:1:25994:26021	1049850	1	True				
ANR	1049863	AssignmentExpression	_subsys = strnewp ( subsys )		1049850	0		=			
ANR	1049864	Identifier	_subsys		1049850	0					
ANR	1049865	CallExpression	strnewp ( subsys )		1049850	1					
ANR	1049866	Callee	strnewp		1049850	0					
ANR	1049867	Identifier	strnewp		1049850	0					
ANR	1049868	ArgumentList	subsys		1049850	1					
ANR	1049869	Argument	subsys		1049850	0					
ANR	1049870	Identifier	subsys		1049850	0					
ANR	1049871	ReturnStatement	return true ;	1038:1:26025:26036	1049850	2	True				
ANR	1049872	Identifier	true		1049850	0					
ANR	1049873	ReturnType	bool		1049850	1					
ANR	1049874	Identifier	Daemon :: setSubsystem		1049850	2					
ANR	1049875	ParameterList	const char * subsys		1049850	3					
ANR	1049876	Parameter	const char * subsys	1031:22:25929:25946	1049850	0	True				
ANR	1049877	ParameterType	const char *		1049850	0					
ANR	1049878	Identifier	subsys		1049850	1					
ANR	1049879	CFGEntryNode	ENTRY		1049850		True				
ANR	1049880	CFGExitNode	EXIT		1049850		True				
ANR	1049881	Symbol	_subsys		1049850						
ANR	1049882	Symbol	subsys		1049850						
ANR	1049883	Symbol	true		1049850						
ANR	1049884	Symbol	strnewp		1049850						
ANR	1049885	Function	Daemon :: getDaemonInfo	1042:0:26042:34501							
ANR	1049886	FunctionDef	"Daemon :: getDaemonInfo (AdTypes adtype , bool query_collector)"		1049885	0					
ANR	1049887	CompoundStatement		1044:0:26109:34501	1049885	0					
ANR	1049888	IdentifierDeclStatement	MyString buf ;	1045:1:26112:26126	1049885	0	True				
ANR	1049889	IdentifierDecl	buf		1049885	0					
ANR	1049890	IdentifierDeclType	MyString		1049885	0					
ANR	1049891	Identifier	buf		1049885	1					
ANR	1049892	IdentifierDeclStatement	"char * tmp , * my_name ;"	1046:1:26129:26151	1049885	1	True				
ANR	1049893	IdentifierDecl	* tmp		1049885	0					
ANR	1049894	IdentifierDeclType	char *		1049885	0					
ANR	1049895	Identifier	tmp		1049885	1					
ANR	1049896	IdentifierDecl	* my_name		1049885	1					
ANR	1049897	IdentifierDeclType	char *		1049885	0					
ANR	1049898	Identifier	my_name		1049885	1					
ANR	1049899	IdentifierDeclStatement	char * host = NULL ;	1047:1:26154:26174	1049885	2	True				
ANR	1049900	IdentifierDecl	* host = NULL		1049885	0					
ANR	1049901	IdentifierDeclType	char *		1049885	0					
ANR	1049902	Identifier	host		1049885	1					
ANR	1049903	AssignmentExpression	* host = NULL		1049885	2		=			
ANR	1049904	Identifier	NULL		1049885	0					
ANR	1049905	Identifier	NULL		1049885	1					
ANR	1049906	IdentifierDeclStatement	bool nameHasPort = false ;	1048:1:26177:26204	1049885	3	True				
ANR	1049907	IdentifierDecl	nameHasPort = false		1049885	0					
ANR	1049908	IdentifierDeclType	bool		1049885	0					
ANR	1049909	Identifier	nameHasPort		1049885	1					
ANR	1049910	AssignmentExpression	nameHasPort = false		1049885	2		=			
ANR	1049911	Identifier	false		1049885	0					
ANR	1049912	Identifier	false		1049885	1					
ANR	1049913	IfStatement	if ( ! _subsys )		1049885	4					
ANR	1049914	Condition	! _subsys	1050:6:26213:26221	1049885	0	True				
ANR	1049915	UnaryOperationExpression	! _subsys		1049885	0					
ANR	1049916	UnaryOperator	!		1049885	0					
ANR	1049917	Identifier	_subsys		1049885	1					
ANR	1049918	CompoundStatement		7:18:115:115	1049885	1					
ANR	1049919	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to get daemon information because no subsystem specified\\n"" )"	1051:2:26229:26316	1049885	0	True				
ANR	1049920	CallExpression	"dprintf ( D_ALWAYS , ""Unable to get daemon information because no subsystem specified\\n"" )"		1049885	0					
ANR	1049921	Callee	dprintf		1049885	0					
ANR	1049922	Identifier	dprintf		1049885	0					
ANR	1049923	ArgumentList	D_ALWAYS		1049885	1					
ANR	1049924	Argument	D_ALWAYS		1049885	0					
ANR	1049925	Identifier	D_ALWAYS		1049885	0					
ANR	1049926	Argument	"""Unable to get daemon information because no subsystem specified\\n"""		1049885	1					
ANR	1049927	PrimaryExpression	"""Unable to get daemon information because no subsystem specified\\n"""		1049885	0					
ANR	1049928	ReturnStatement	return false ;	1052:2:26320:26332	1049885	1	True				
ANR	1049929	Identifier	false		1049885	0					
ANR	1049930	IfStatement	if ( _addr && is_valid_sinful ( _addr ) )		1049885	5					
ANR	1049931	Condition	_addr && is_valid_sinful ( _addr )	1055:5:26343:26373	1049885	0	True				
ANR	1049932	AndExpression	_addr && is_valid_sinful ( _addr )		1049885	0		&&			
ANR	1049933	Identifier	_addr		1049885	0					
ANR	1049934	CallExpression	is_valid_sinful ( _addr )		1049885	1					
ANR	1049935	Callee	is_valid_sinful		1049885	0					
ANR	1049936	Identifier	is_valid_sinful		1049885	0					
ANR	1049937	ArgumentList	_addr		1049885	1					
ANR	1049938	Argument	_addr		1049885	0					
ANR	1049939	Identifier	_addr		1049885	0					
ANR	1049940	CompoundStatement		12:39:267:267	1049885	1					
ANR	1049941	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Already have address, no info to locate\\n"" )"	1056:2:26381:26447	1049885	0	True				
ANR	1049942	CallExpression	"dprintf ( D_HOSTNAME , ""Already have address, no info to locate\\n"" )"		1049885	0					
ANR	1049943	Callee	dprintf		1049885	0					
ANR	1049944	Identifier	dprintf		1049885	0					
ANR	1049945	ArgumentList	D_HOSTNAME		1049885	1					
ANR	1049946	Argument	D_HOSTNAME		1049885	0					
ANR	1049947	Identifier	D_HOSTNAME		1049885	0					
ANR	1049948	Argument	"""Already have address, no info to locate\\n"""		1049885	1					
ANR	1049949	PrimaryExpression	"""Already have address, no info to locate\\n"""		1049885	0					
ANR	1049950	ExpressionStatement	_is_local = false	1057:2:26451:26468	1049885	1	True				
ANR	1049951	AssignmentExpression	_is_local = false		1049885	0		=			
ANR	1049952	Identifier	_is_local		1049885	0					
ANR	1049953	Identifier	false		1049885	1					
ANR	1049954	ReturnStatement	return true ;	1058:2:26472:26483	1049885	2	True				
ANR	1049955	Identifier	true		1049885	0					
ANR	1049956	IfStatement	if ( ! _name && ! _pool )		1049885	6					
ANR	1049957	Condition	! _name && ! _pool	1063:5:26611:26628	1049885	0	True				
ANR	1049958	AndExpression	! _name && ! _pool		1049885	0		&&			
ANR	1049959	UnaryOperationExpression	! _name		1049885	0					
ANR	1049960	UnaryOperator	!		1049885	0					
ANR	1049961	Identifier	_name		1049885	1					
ANR	1049962	UnaryOperationExpression	! _pool		1049885	1					
ANR	1049963	UnaryOperator	!		1049885	0					
ANR	1049964	Identifier	_pool		1049885	1					
ANR	1049965	CompoundStatement		22:2:563:606	1049885	1					
ANR	1049966	ExpressionStatement	"buf . sprintf ( ""%s_HOST"" , _subsys )"	1064:2:26636:26669	1049885	0	True				
ANR	1049967	CallExpression	"buf . sprintf ( ""%s_HOST"" , _subsys )"		1049885	0					
ANR	1049968	Callee	buf . sprintf		1049885	0					
ANR	1049969	MemberAccess	buf . sprintf		1049885	0					
ANR	1049970	Identifier	buf		1049885	0					
ANR	1049971	Identifier	sprintf		1049885	1					
ANR	1049972	ArgumentList	"""%s_HOST"""		1049885	1					
ANR	1049973	Argument	"""%s_HOST"""		1049885	0					
ANR	1049974	PrimaryExpression	"""%s_HOST"""		1049885	0					
ANR	1049975	Argument	_subsys		1049885	1					
ANR	1049976	Identifier	_subsys		1049885	0					
ANR	1049977	IdentifierDeclStatement	char * specified_host = param ( buf . Value ( ) ) ;	1065:2:26673:26716	1049885	1	True				
ANR	1049978	IdentifierDecl	* specified_host = param ( buf . Value ( ) )		1049885	0					
ANR	1049979	IdentifierDeclType	char *		1049885	0					
ANR	1049980	Identifier	specified_host		1049885	1					
ANR	1049981	AssignmentExpression	* specified_host = param ( buf . Value ( ) )		1049885	2		=			
ANR	1049982	Identifier	specified_host		1049885	0					
ANR	1049983	CallExpression	param ( buf . Value ( ) )		1049885	1					
ANR	1049984	Callee	param		1049885	0					
ANR	1049985	Identifier	param		1049885	0					
ANR	1049986	ArgumentList	buf . Value ( )		1049885	1					
ANR	1049987	Argument	buf . Value ( )		1049885	0					
ANR	1049988	CallExpression	buf . Value ( )		1049885	0					
ANR	1049989	Callee	buf . Value		1049885	0					
ANR	1049990	MemberAccess	buf . Value		1049885	0					
ANR	1049991	Identifier	buf		1049885	0					
ANR	1049992	Identifier	Value		1049885	1					
ANR	1049993	ArgumentList			1049885	1					
ANR	1049994	IfStatement	if ( specified_host )		1049885	2					
ANR	1049995	Condition	specified_host	1066:7:26725:26738	1049885	0	True				
ANR	1049996	Identifier	specified_host		1049885	0					
ANR	1049997	CompoundStatement		23:24:632:632	1049885	1					
ANR	1049998	ExpressionStatement	_name = strnewp ( specified_host )	1068:3:26786:26819	1049885	0	True				
ANR	1049999	AssignmentExpression	_name = strnewp ( specified_host )		1049885	0		=			
ANR	1050000	Identifier	_name		1049885	0					
ANR	1050001	CallExpression	strnewp ( specified_host )		1049885	1					
ANR	1050002	Callee	strnewp		1049885	0					
ANR	1050003	Identifier	strnewp		1049885	0					
ANR	1050004	ArgumentList	specified_host		1049885	1					
ANR	1050005	Argument	specified_host		1049885	0					
ANR	1050006	Identifier	specified_host		1049885	0					
ANR	1050007	ExpressionStatement	"dprintf ( D_HOSTNAME , ""No name given, but %s defined to \\""%s\\""\\n"" , buf . Value ( ) , specified_host )"	1069:3:26824:26932	1049885	1	True				
ANR	1050008	CallExpression	"dprintf ( D_HOSTNAME , ""No name given, but %s defined to \\""%s\\""\\n"" , buf . Value ( ) , specified_host )"		1049885	0					
ANR	1050009	Callee	dprintf		1049885	0					
ANR	1050010	Identifier	dprintf		1049885	0					
ANR	1050011	ArgumentList	D_HOSTNAME		1049885	1					
ANR	1050012	Argument	D_HOSTNAME		1049885	0					
ANR	1050013	Identifier	D_HOSTNAME		1049885	0					
ANR	1050014	Argument	"""No name given, but %s defined to \\""%s\\""\\n"""		1049885	1					
ANR	1050015	PrimaryExpression	"""No name given, but %s defined to \\""%s\\""\\n"""		1049885	0					
ANR	1050016	Argument	buf . Value ( )		1049885	2					
ANR	1050017	CallExpression	buf . Value ( )		1049885	0					
ANR	1050018	Callee	buf . Value		1049885	0					
ANR	1050019	MemberAccess	buf . Value		1049885	0					
ANR	1050020	Identifier	buf		1049885	0					
ANR	1050021	Identifier	Value		1049885	1					
ANR	1050022	ArgumentList			1049885	1					
ANR	1050023	Argument	specified_host		1049885	3					
ANR	1050024	Identifier	specified_host		1049885	0					
ANR	1050025	ExpressionStatement	free ( specified_host )	1072:3:26937:26957	1049885	2	True				
ANR	1050026	CallExpression	free ( specified_host )		1049885	0					
ANR	1050027	Callee	free		1049885	0					
ANR	1050028	Identifier	free		1049885	0					
ANR	1050029	ArgumentList	specified_host		1049885	1					
ANR	1050030	Argument	specified_host		1049885	0					
ANR	1050031	Identifier	specified_host		1049885	0					
ANR	1050032	IfStatement	if ( _name )		1049885	7					
ANR	1050033	Condition	_name	1075:5:26971:26975	1049885	0	True				
ANR	1050034	Identifier	_name		1049885	0					
ANR	1050035	CompoundStatement		32:13:869:869	1049885	1					
ANR	1050036	ExpressionStatement	_port = getPortFromAddr ( _name )	1077:2:27038:27070	1049885	0	True				
ANR	1050037	AssignmentExpression	_port = getPortFromAddr ( _name )		1049885	0		=			
ANR	1050038	Identifier	_port		1049885	0					
ANR	1050039	CallExpression	getPortFromAddr ( _name )		1049885	1					
ANR	1050040	Callee	getPortFromAddr		1049885	0					
ANR	1050041	Identifier	getPortFromAddr		1049885	0					
ANR	1050042	ArgumentList	_name		1049885	1					
ANR	1050043	Argument	_name		1049885	0					
ANR	1050044	Identifier	_name		1049885	0					
ANR	1050045	IfStatement	if ( _port >= 0 )		1049885	1					
ANR	1050046	Condition	_port >= 0	1078:7:27079:27088	1049885	0	True				
ANR	1050047	RelationalExpression	_port >= 0		1049885	0		>=			
ANR	1050048	Identifier	_port		1049885	0					
ANR	1050049	PrimaryExpression	0		1049885	1					
ANR	1050050	CompoundStatement		35:20:982:982	1049885	1					
ANR	1050051	ExpressionStatement	host = getHostFromAddr ( _name )	1079:3:27097:27128	1049885	0	True				
ANR	1050052	AssignmentExpression	host = getHostFromAddr ( _name )		1049885	0		=			
ANR	1050053	Identifier	host		1049885	0					
ANR	1050054	CallExpression	getHostFromAddr ( _name )		1049885	1					
ANR	1050055	Callee	getHostFromAddr		1049885	0					
ANR	1050056	Identifier	getHostFromAddr		1049885	0					
ANR	1050057	ArgumentList	_name		1049885	1					
ANR	1050058	Argument	_name		1049885	0					
ANR	1050059	Identifier	_name		1049885	0					
ANR	1050060	IfStatement	if ( host )		1049885	1					
ANR	1050061	Condition	host	1080:8:27138:27141	1049885	0	True				
ANR	1050062	Identifier	host		1049885	0					
ANR	1050063	CompoundStatement		37:15:1035:1035	1049885	1					
ANR	1050064	ExpressionStatement	nameHasPort = true	1081:4:27151:27169	1049885	0	True				
ANR	1050065	AssignmentExpression	nameHasPort = true		1049885	0		=			
ANR	1050066	Identifier	nameHasPort		1049885	0					
ANR	1050067	Identifier	true		1049885	1					
ANR	1050068	ElseStatement	else		1049885	0					
ANR	1050069	CompoundStatement		39:10:1071:1071	1049885	0					
ANR	1050070	Statement	dprintf	1083:4:27187:27193	1049885	0	True				
ANR	1050071	Statement	(	1083:11:27194:27194	1049885	1	True				
ANR	1050072	Statement	D_ALWAYS	1083:13:27196:27203	1049885	2	True				
ANR	1050073	Statement	","	1083:21:27204:27204	1049885	3	True				
ANR	1050074	Statement	"""warning: unable to parse hostname from '%s'"""	1083:23:27206:27250	1049885	4	True				
ANR	1050075	Statement	""" but will attempt to use this daemon name anyhow\\n"""	1084:6:27258:27309	1049885	5	True				
ANR	1050076	Statement	","	1084:58:27310:27310	1049885	6	True				
ANR	1050077	Statement	_name	1085:6:27318:27322	1049885	7	True				
ANR	1050078	Statement	)	1085:11:27323:27323	1049885	8	True				
ANR	1050079	ExpressionStatement		1085:12:27324:27324	1049885	9	True				
ANR	1050080	IfStatement	if ( nameHasPort )		1049885	8					
ANR	1050081	Condition	nameHasPort	1092:5:27484:27494	1049885	0	True				
ANR	1050082	Identifier	nameHasPort		1049885	0					
ANR	1050083	CompoundStatement		50:2:1392:1412	1049885	1					
ANR	1050084	IdentifierDeclStatement	condor_sockaddr addr ;	1093:2:27502:27522	1049885	0	True				
ANR	1050085	IdentifierDecl	addr		1049885	0					
ANR	1050086	IdentifierDeclType	condor_sockaddr		1049885	0					
ANR	1050087	Identifier	addr		1049885	1					
ANR	1050088	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Port %d specified in name\\n"" , _port )"	1095:2:27529:27588	1049885	1	True				
ANR	1050089	CallExpression	"dprintf ( D_HOSTNAME , ""Port %d specified in name\\n"" , _port )"		1049885	0					
ANR	1050090	Callee	dprintf		1049885	0					
ANR	1050091	Identifier	dprintf		1049885	0					
ANR	1050092	ArgumentList	D_HOSTNAME		1049885	1					
ANR	1050093	Argument	D_HOSTNAME		1049885	0					
ANR	1050094	Identifier	D_HOSTNAME		1049885	0					
ANR	1050095	Argument	"""Port %d specified in name\\n"""		1049885	1					
ANR	1050096	PrimaryExpression	"""Port %d specified in name\\n"""		1049885	0					
ANR	1050097	Argument	_port		1049885	2					
ANR	1050098	Identifier	_port		1049885	0					
ANR	1050099	IfStatement	if ( host && addr . from_ip_string ( host ) )		1049885	2					
ANR	1050100	Condition	host && addr . from_ip_string ( host )	1097:5:27596:27628	1049885	0	True				
ANR	1050101	AndExpression	host && addr . from_ip_string ( host )		1049885	0		&&			
ANR	1050102	Identifier	host		1049885	0					
ANR	1050103	CallExpression	addr . from_ip_string ( host )		1049885	1					
ANR	1050104	Callee	addr . from_ip_string		1049885	0					
ANR	1050105	MemberAccess	addr . from_ip_string		1049885	0					
ANR	1050106	Identifier	addr		1049885	0					
ANR	1050107	Identifier	from_ip_string		1049885	1					
ANR	1050108	ArgumentList	host		1049885	1					
ANR	1050109	Argument	host		1049885	0					
ANR	1050110	Identifier	host		1049885	0					
ANR	1050111	CompoundStatement		54:41:1522:1522	1049885	1					
ANR	1050112	ExpressionStatement	"buf = generate_sinful ( host , _port )"	1098:3:27637:27671	1049885	0	True				
ANR	1050113	AssignmentExpression	"buf = generate_sinful ( host , _port )"		1049885	0		=			
ANR	1050114	Identifier	buf		1049885	0					
ANR	1050115	CallExpression	"generate_sinful ( host , _port )"		1049885	1					
ANR	1050116	Callee	generate_sinful		1049885	0					
ANR	1050117	Identifier	generate_sinful		1049885	0					
ANR	1050118	ArgumentList	host		1049885	1					
ANR	1050119	Argument	host		1049885	0					
ANR	1050120	Identifier	host		1049885	0					
ANR	1050121	Argument	_port		1049885	1					
ANR	1050122	Identifier	_port		1049885	0					
ANR	1050123	ExpressionStatement	New_addr ( strnewp ( buf . Value ( ) ) )	1099:3:27676:27708	1049885	1	True				
ANR	1050124	CallExpression	New_addr ( strnewp ( buf . Value ( ) ) )		1049885	0					
ANR	1050125	Callee	New_addr		1049885	0					
ANR	1050126	Identifier	New_addr		1049885	0					
ANR	1050127	ArgumentList	strnewp ( buf . Value ( ) )		1049885	1					
ANR	1050128	Argument	strnewp ( buf . Value ( ) )		1049885	0					
ANR	1050129	CallExpression	strnewp ( buf . Value ( ) )		1049885	0					
ANR	1050130	Callee	strnewp		1049885	0					
ANR	1050131	Identifier	strnewp		1049885	0					
ANR	1050132	ArgumentList	buf . Value ( )		1049885	1					
ANR	1050133	Argument	buf . Value ( )		1049885	0					
ANR	1050134	CallExpression	buf . Value ( )		1049885	0					
ANR	1050135	Callee	buf . Value		1049885	0					
ANR	1050136	MemberAccess	buf . Value		1049885	0					
ANR	1050137	Identifier	buf		1049885	0					
ANR	1050138	Identifier	Value		1049885	1					
ANR	1050139	ArgumentList			1049885	1					
ANR	1050140	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Host info \\""%s\\"" is an IP address\\n"" , host )"	1100:3:27713:27784	1049885	2	True				
ANR	1050141	CallExpression	"dprintf ( D_HOSTNAME , ""Host info \\""%s\\"" is an IP address\\n"" , host )"		1049885	0					
ANR	1050142	Callee	dprintf		1049885	0					
ANR	1050143	Identifier	dprintf		1049885	0					
ANR	1050144	ArgumentList	D_HOSTNAME		1049885	1					
ANR	1050145	Argument	D_HOSTNAME		1049885	0					
ANR	1050146	Identifier	D_HOSTNAME		1049885	0					
ANR	1050147	Argument	"""Host info \\""%s\\"" is an IP address\\n"""		1049885	1					
ANR	1050148	PrimaryExpression	"""Host info \\""%s\\"" is an IP address\\n"""		1049885	0					
ANR	1050149	Argument	host		1049885	2					
ANR	1050150	Identifier	host		1049885	0					
ANR	1050151	ElseStatement	else		1049885	0					
ANR	1050152	CompoundStatement		61:3:1739:1752	1049885	0					
ANR	1050153	IdentifierDeclStatement	MyString fqdn ;	1104:3:27849:27862	1049885	0	True				
ANR	1050154	IdentifierDecl	fqdn		1049885	0					
ANR	1050155	IdentifierDeclType	MyString		1049885	0					
ANR	1050156	Identifier	fqdn		1049885	1					
ANR	1050157	IfStatement	if ( host )		1049885	1					
ANR	1050158	Condition	host	1105:6:27870:27873	1049885	0	True				
ANR	1050159	Identifier	host		1049885	0					
ANR	1050160	CompoundStatement		62:12:1766:1766	1049885	1					
ANR	1050161	Statement	dprintf	1106:4:27882:27888	1049885	0	True				
ANR	1050162	Statement	(	1106:11:27889:27889	1049885	1	True				
ANR	1050163	Statement	D_HOSTNAME	1106:13:27891:27900	1049885	2	True				
ANR	1050164	Statement	","	1106:23:27901:27901	1049885	3	True				
ANR	1050165	Statement	"""Host info \\""%s\\"" is a hostname, """	1106:25:27903:27936	1049885	4	True				
ANR	1050166	Statement	"""finding IP address\\n"""	1107:7:27945:27966	1049885	5	True				
ANR	1050167	Statement	","	1107:29:27967:27967	1049885	6	True				
ANR	1050168	Statement	host	1107:31:27969:27972	1049885	7	True				
ANR	1050169	Statement	)	1107:36:27974:27974	1049885	8	True				
ANR	1050170	ExpressionStatement		1107:37:27975:27975	1049885	9	True				
ANR	1050171	IfStatement	"if ( ! get_fqdn_and_ip_from_hostname ( host , fqdn , addr ) )"		1049885	10					
ANR	1050172	Condition	"! get_fqdn_and_ip_from_hostname ( host , fqdn , addr )"	1108:8:27985:28032	1049885	0	True				
ANR	1050173	UnaryOperationExpression	"! get_fqdn_and_ip_from_hostname ( host , fqdn , addr )"		1049885	0					
ANR	1050174	UnaryOperator	!		1049885	0					
ANR	1050175	CallExpression	"get_fqdn_and_ip_from_hostname ( host , fqdn , addr )"		1049885	1					
ANR	1050176	Callee	get_fqdn_and_ip_from_hostname		1049885	0					
ANR	1050177	Identifier	get_fqdn_and_ip_from_hostname		1049885	0					
ANR	1050178	ArgumentList	host		1049885	1					
ANR	1050179	Argument	host		1049885	0					
ANR	1050180	Identifier	host		1049885	0					
ANR	1050181	Argument	fqdn		1049885	1					
ANR	1050182	Identifier	fqdn		1049885	0					
ANR	1050183	Argument	addr		1049885	2					
ANR	1050184	Identifier	addr		1049885	0					
ANR	1050185	CompoundStatement		65:58:1925:1925	1049885	1					
ANR	1050186	ExpressionStatement	"buf . sprintf ( ""unknown host %s"" , host )"	1110:5:28097:28135	1049885	0	True				
ANR	1050187	CallExpression	"buf . sprintf ( ""unknown host %s"" , host )"		1049885	0					
ANR	1050188	Callee	buf . sprintf		1049885	0					
ANR	1050189	MemberAccess	buf . sprintf		1049885	0					
ANR	1050190	Identifier	buf		1049885	0					
ANR	1050191	Identifier	sprintf		1049885	1					
ANR	1050192	ArgumentList	"""unknown host %s"""		1049885	1					
ANR	1050193	Argument	"""unknown host %s"""		1049885	0					
ANR	1050194	PrimaryExpression	"""unknown host %s"""		1049885	0					
ANR	1050195	Argument	host		1049885	1					
ANR	1050196	Identifier	host		1049885	0					
ANR	1050197	ExpressionStatement	"newError ( CA_LOCATE_FAILED , buf . Value ( ) )"	1111:5:28142:28183	1049885	1	True				
ANR	1050198	CallExpression	"newError ( CA_LOCATE_FAILED , buf . Value ( ) )"		1049885	0					
ANR	1050199	Callee	newError		1049885	0					
ANR	1050200	Identifier	newError		1049885	0					
ANR	1050201	ArgumentList	CA_LOCATE_FAILED		1049885	1					
ANR	1050202	Argument	CA_LOCATE_FAILED		1049885	0					
ANR	1050203	Identifier	CA_LOCATE_FAILED		1049885	0					
ANR	1050204	Argument	buf . Value ( )		1049885	1					
ANR	1050205	CallExpression	buf . Value ( )		1049885	0					
ANR	1050206	Callee	buf . Value		1049885	0					
ANR	1050207	MemberAccess	buf . Value		1049885	0					
ANR	1050208	Identifier	buf		1049885	0					
ANR	1050209	Identifier	Value		1049885	1					
ANR	1050210	ArgumentList			1049885	1					
ANR	1050211	IfStatement	if ( host )		1049885	2					
ANR	1050212	Condition	host	1112:9:28194:28197	1049885	0	True				
ANR	1050213	Identifier	host		1049885	0					
ANR	1050214	ExpressionStatement	free ( host )	1112:15:28200:28212	1049885	1	True				
ANR	1050215	CallExpression	free ( host )		1049885	0					
ANR	1050216	Callee	free		1049885	0					
ANR	1050217	Identifier	free		1049885	0					
ANR	1050218	ArgumentList	host		1049885	1					
ANR	1050219	Argument	host		1049885	0					
ANR	1050220	Identifier	host		1049885	0					
ANR	1050221	ExpressionStatement	_tried_locate = false	1117:5:28381:28402	1049885	3	True				
ANR	1050222	AssignmentExpression	_tried_locate = false		1049885	0		=			
ANR	1050223	Identifier	_tried_locate		1049885	0					
ANR	1050224	Identifier	false		1049885	1					
ANR	1050225	ReturnStatement	return false ;	1119:5:28410:28422	1049885	4	True				
ANR	1050226	Identifier	false		1049885	0					
ANR	1050227	ElseStatement	else		1049885	0					
ANR	1050228	ReturnStatement	return false ;	1121:10:28440:28452	1049885	0	True				
ANR	1050229	Identifier	false		1049885	0					
ANR	1050230	ExpressionStatement	"buf = generate_sinful ( addr . to_ip_string ( ) . Value ( ) , _port )"	1122:3:28457:28514	1049885	2	True				
ANR	1050231	AssignmentExpression	"buf = generate_sinful ( addr . to_ip_string ( ) . Value ( ) , _port )"		1049885	0		=			
ANR	1050232	Identifier	buf		1049885	0					
ANR	1050233	CallExpression	"generate_sinful ( addr . to_ip_string ( ) . Value ( ) , _port )"		1049885	1					
ANR	1050234	Callee	generate_sinful		1049885	0					
ANR	1050235	Identifier	generate_sinful		1049885	0					
ANR	1050236	ArgumentList	addr . to_ip_string ( ) . Value ( )		1049885	1					
ANR	1050237	Argument	addr . to_ip_string ( ) . Value ( )		1049885	0					
ANR	1050238	CallExpression	addr . to_ip_string ( ) . Value ( )		1049885	0					
ANR	1050239	Callee	addr . to_ip_string ( ) . Value		1049885	0					
ANR	1050240	MemberAccess	addr . to_ip_string ( ) . Value		1049885	0					
ANR	1050241	CallExpression	addr . to_ip_string ( )		1049885	0					
ANR	1050242	Callee	addr . to_ip_string		1049885	0					
ANR	1050243	MemberAccess	addr . to_ip_string		1049885	0					
ANR	1050244	Identifier	addr		1049885	0					
ANR	1050245	Identifier	to_ip_string		1049885	1					
ANR	1050246	ArgumentList			1049885	1					
ANR	1050247	Identifier	Value		1049885	1					
ANR	1050248	ArgumentList			1049885	1					
ANR	1050249	Argument	_port		1049885	1					
ANR	1050250	Identifier	_port		1049885	0					
ANR	1050251	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Found IP address and port %s\\n"" , buf . Value ( ) )"	1123:3:28519:28587	1049885	3	True				
ANR	1050252	CallExpression	"dprintf ( D_HOSTNAME , ""Found IP address and port %s\\n"" , buf . Value ( ) )"		1049885	0					
ANR	1050253	Callee	dprintf		1049885	0					
ANR	1050254	Identifier	dprintf		1049885	0					
ANR	1050255	ArgumentList	D_HOSTNAME		1049885	1					
ANR	1050256	Argument	D_HOSTNAME		1049885	0					
ANR	1050257	Identifier	D_HOSTNAME		1049885	0					
ANR	1050258	Argument	"""Found IP address and port %s\\n"""		1049885	1					
ANR	1050259	PrimaryExpression	"""Found IP address and port %s\\n"""		1049885	0					
ANR	1050260	Argument	buf . Value ( )		1049885	2					
ANR	1050261	CallExpression	buf . Value ( )		1049885	0					
ANR	1050262	Callee	buf . Value		1049885	0					
ANR	1050263	MemberAccess	buf . Value		1049885	0					
ANR	1050264	Identifier	buf		1049885	0					
ANR	1050265	Identifier	Value		1049885	1					
ANR	1050266	ArgumentList			1049885	1					
ANR	1050267	ExpressionStatement	New_addr ( strnewp ( buf . Value ( ) ) )	1124:3:28592:28624	1049885	4	True				
ANR	1050268	CallExpression	New_addr ( strnewp ( buf . Value ( ) ) )		1049885	0					
ANR	1050269	Callee	New_addr		1049885	0					
ANR	1050270	Identifier	New_addr		1049885	0					
ANR	1050271	ArgumentList	strnewp ( buf . Value ( ) )		1049885	1					
ANR	1050272	Argument	strnewp ( buf . Value ( ) )		1049885	0					
ANR	1050273	CallExpression	strnewp ( buf . Value ( ) )		1049885	0					
ANR	1050274	Callee	strnewp		1049885	0					
ANR	1050275	Identifier	strnewp		1049885	0					
ANR	1050276	ArgumentList	buf . Value ( )		1049885	1					
ANR	1050277	Argument	buf . Value ( )		1049885	0					
ANR	1050278	CallExpression	buf . Value ( )		1049885	0					
ANR	1050279	Callee	buf . Value		1049885	0					
ANR	1050280	MemberAccess	buf . Value		1049885	0					
ANR	1050281	Identifier	buf		1049885	0					
ANR	1050282	Identifier	Value		1049885	1					
ANR	1050283	ArgumentList			1049885	1					
ANR	1050284	IfStatement	if ( fqdn . Length ( ) > 0 )		1049885	5					
ANR	1050285	Condition	fqdn . Length ( ) > 0	1125:7:28633:28649	1049885	0	True				
ANR	1050286	RelationalExpression	fqdn . Length ( ) > 0		1049885	0		>			
ANR	1050287	CallExpression	fqdn . Length ( )		1049885	0					
ANR	1050288	Callee	fqdn . Length		1049885	0					
ANR	1050289	MemberAccess	fqdn . Length		1049885	0					
ANR	1050290	Identifier	fqdn		1049885	0					
ANR	1050291	Identifier	Length		1049885	1					
ANR	1050292	ArgumentList			1049885	1					
ANR	1050293	PrimaryExpression	0		1049885	1					
ANR	1050294	ExpressionStatement	New_full_hostname ( strnewp ( fqdn . Value ( ) ) )	1126:4:28656:28696	1049885	1	True				
ANR	1050295	CallExpression	New_full_hostname ( strnewp ( fqdn . Value ( ) ) )		1049885	0					
ANR	1050296	Callee	New_full_hostname		1049885	0					
ANR	1050297	Identifier	New_full_hostname		1049885	0					
ANR	1050298	ArgumentList	strnewp ( fqdn . Value ( ) )		1049885	1					
ANR	1050299	Argument	strnewp ( fqdn . Value ( ) )		1049885	0					
ANR	1050300	CallExpression	strnewp ( fqdn . Value ( ) )		1049885	0					
ANR	1050301	Callee	strnewp		1049885	0					
ANR	1050302	Identifier	strnewp		1049885	0					
ANR	1050303	ArgumentList	fqdn . Value ( )		1049885	1					
ANR	1050304	Argument	fqdn . Value ( )		1049885	0					
ANR	1050305	CallExpression	fqdn . Value ( )		1049885	0					
ANR	1050306	Callee	fqdn . Value		1049885	0					
ANR	1050307	MemberAccess	fqdn . Value		1049885	0					
ANR	1050308	Identifier	fqdn		1049885	0					
ANR	1050309	Identifier	Value		1049885	1					
ANR	1050310	ArgumentList			1049885	1					
ANR	1050311	IfStatement	if ( host )		1049885	3					
ANR	1050312	Condition	host	1129:6:28709:28712	1049885	0	True				
ANR	1050313	Identifier	host		1049885	0					
ANR	1050314	ExpressionStatement	free ( host )	1129:12:28715:28727	1049885	1	True				
ANR	1050315	CallExpression	free ( host )		1049885	0					
ANR	1050316	Callee	free		1049885	0					
ANR	1050317	Identifier	free		1049885	0					
ANR	1050318	ArgumentList	host		1049885	1					
ANR	1050319	Argument	host		1049885	0					
ANR	1050320	Identifier	host		1049885	0					
ANR	1050321	ExpressionStatement	_is_local = false	1130:2:28731:28748	1049885	4	True				
ANR	1050322	AssignmentExpression	_is_local = false		1049885	0		=			
ANR	1050323	Identifier	_is_local		1049885	0					
ANR	1050324	Identifier	false		1049885	1					
ANR	1050325	ReturnStatement	return true ;	1131:2:28752:28763	1049885	5	True				
ANR	1050326	Identifier	true		1049885	0					
ANR	1050327	ElseStatement	else		1049885	0					
ANR	1050328	IfStatement	if ( _name )		1049885	0					
ANR	1050329	Condition	_name	1135:12:28882:28886	1049885	0	True				
ANR	1050330	Identifier	_name		1049885	0					
ANR	1050331	CompoundStatement		92:20:2780:2780	1049885	1					
ANR	1050332	ExpressionStatement	tmp = get_daemon_name ( _name )	1139:2:28984:29014	1049885	0	True				
ANR	1050333	AssignmentExpression	tmp = get_daemon_name ( _name )		1049885	0		=			
ANR	1050334	Identifier	tmp		1049885	0					
ANR	1050335	CallExpression	get_daemon_name ( _name )		1049885	1					
ANR	1050336	Callee	get_daemon_name		1049885	0					
ANR	1050337	Identifier	get_daemon_name		1049885	0					
ANR	1050338	ArgumentList	_name		1049885	1					
ANR	1050339	Argument	_name		1049885	0					
ANR	1050340	Identifier	_name		1049885	0					
ANR	1050341	IfStatement	if ( ! tmp )		1049885	1					
ANR	1050342	Condition	! tmp	1140:6:29022:29026	1049885	0	True				
ANR	1050343	UnaryOperationExpression	! tmp		1049885	0					
ANR	1050344	UnaryOperator	!		1049885	0					
ANR	1050345	Identifier	tmp		1049885	1					
ANR	1050346	CompoundStatement		101:3:3076:3110	1049885	1					
ANR	1050347	IdentifierDeclStatement	"MyString err_msg = ""unknown host "" ;"	1144:3:29186:29220	1049885	0	True				
ANR	1050348	IdentifierDecl	"err_msg = ""unknown host """		1049885	0					
ANR	1050349	IdentifierDeclType	MyString		1049885	0					
ANR	1050350	Identifier	err_msg		1049885	1					
ANR	1050351	AssignmentExpression	"err_msg = ""unknown host """		1049885	2		=			
ANR	1050352	Identifier	err_msg		1049885	0					
ANR	1050353	PrimaryExpression	"""unknown host """		1049885	1					
ANR	1050354	ExpressionStatement	err_msg += get_host_part ( _name )	1145:3:29225:29258	1049885	1	True				
ANR	1050355	AssignmentExpression	err_msg += get_host_part ( _name )		1049885	0		+=			
ANR	1050356	Identifier	err_msg		1049885	0					
ANR	1050357	CallExpression	get_host_part ( _name )		1049885	1					
ANR	1050358	Callee	get_host_part		1049885	0					
ANR	1050359	Identifier	get_host_part		1049885	0					
ANR	1050360	ArgumentList	_name		1049885	1					
ANR	1050361	Argument	_name		1049885	0					
ANR	1050362	Identifier	_name		1049885	0					
ANR	1050363	ExpressionStatement	"newError ( CA_LOCATE_FAILED , err_msg . Value ( ) )"	1146:3:29263:29308	1049885	2	True				
ANR	1050364	CallExpression	"newError ( CA_LOCATE_FAILED , err_msg . Value ( ) )"		1049885	0					
ANR	1050365	Callee	newError		1049885	0					
ANR	1050366	Identifier	newError		1049885	0					
ANR	1050367	ArgumentList	CA_LOCATE_FAILED		1049885	1					
ANR	1050368	Argument	CA_LOCATE_FAILED		1049885	0					
ANR	1050369	Identifier	CA_LOCATE_FAILED		1049885	0					
ANR	1050370	Argument	err_msg . Value ( )		1049885	1					
ANR	1050371	CallExpression	err_msg . Value ( )		1049885	0					
ANR	1050372	Callee	err_msg . Value		1049885	0					
ANR	1050373	MemberAccess	err_msg . Value		1049885	0					
ANR	1050374	Identifier	err_msg		1049885	0					
ANR	1050375	Identifier	Value		1049885	1					
ANR	1050376	ArgumentList			1049885	1					
ANR	1050377	ReturnStatement	return false ;	1147:3:29313:29325	1049885	3	True				
ANR	1050378	Identifier	false		1049885	0					
ANR	1050379	ExpressionStatement	New_name ( tmp )	1152:2:29485:29500	1049885	2	True				
ANR	1050380	CallExpression	New_name ( tmp )		1049885	0					
ANR	1050381	Callee	New_name		1049885	0					
ANR	1050382	Identifier	New_name		1049885	0					
ANR	1050383	ArgumentList	tmp		1049885	1					
ANR	1050384	Argument	tmp		1049885	0					
ANR	1050385	Identifier	tmp		1049885	0					
ANR	1050386	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Using \\""%s\\"" for name in Daemon object\\n"" , tmp )"	1153:2:29504:29579	1049885	3	True				
ANR	1050387	CallExpression	"dprintf ( D_HOSTNAME , ""Using \\""%s\\"" for name in Daemon object\\n"" , tmp )"		1049885	0					
ANR	1050388	Callee	dprintf		1049885	0					
ANR	1050389	Identifier	dprintf		1049885	0					
ANR	1050390	ArgumentList	D_HOSTNAME		1049885	1					
ANR	1050391	Argument	D_HOSTNAME		1049885	0					
ANR	1050392	Identifier	D_HOSTNAME		1049885	0					
ANR	1050393	Argument	"""Using \\""%s\\"" for name in Daemon object\\n"""		1049885	1					
ANR	1050394	PrimaryExpression	"""Using \\""%s\\"" for name in Daemon object\\n"""		1049885	0					
ANR	1050395	Argument	tmp		1049885	2					
ANR	1050396	Identifier	tmp		1049885	0					
ANR	1050397	ExpressionStatement	tmp = strnewp ( get_host_part ( _name ) )	1156:2:29642:29679	1049885	4	True				
ANR	1050398	AssignmentExpression	tmp = strnewp ( get_host_part ( _name ) )		1049885	0		=			
ANR	1050399	Identifier	tmp		1049885	0					
ANR	1050400	CallExpression	strnewp ( get_host_part ( _name ) )		1049885	1					
ANR	1050401	Callee	strnewp		1049885	0					
ANR	1050402	Identifier	strnewp		1049885	0					
ANR	1050403	ArgumentList	get_host_part ( _name )		1049885	1					
ANR	1050404	Argument	get_host_part ( _name )		1049885	0					
ANR	1050405	CallExpression	get_host_part ( _name )		1049885	0					
ANR	1050406	Callee	get_host_part		1049885	0					
ANR	1050407	Identifier	get_host_part		1049885	0					
ANR	1050408	ArgumentList	_name		1049885	1					
ANR	1050409	Argument	_name		1049885	0					
ANR	1050410	Identifier	_name		1049885	0					
ANR	1050411	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Using \\""%s\\"" for full hostname in Daemon object\\n"" , tmp )"	1157:2:29684:29768	1049885	5	True				
ANR	1050412	CallExpression	"dprintf ( D_HOSTNAME , ""Using \\""%s\\"" for full hostname in Daemon object\\n"" , tmp )"		1049885	0					
ANR	1050413	Callee	dprintf		1049885	0					
ANR	1050414	Identifier	dprintf		1049885	0					
ANR	1050415	ArgumentList	D_HOSTNAME		1049885	1					
ANR	1050416	Argument	D_HOSTNAME		1049885	0					
ANR	1050417	Identifier	D_HOSTNAME		1049885	0					
ANR	1050418	Argument	"""Using \\""%s\\"" for full hostname in Daemon object\\n"""		1049885	1					
ANR	1050419	PrimaryExpression	"""Using \\""%s\\"" for full hostname in Daemon object\\n"""		1049885	0					
ANR	1050420	Argument	tmp		1049885	2					
ANR	1050421	Identifier	tmp		1049885	0					
ANR	1050422	ExpressionStatement	New_full_hostname ( tmp )	1159:2:29772:29796	1049885	6	True				
ANR	1050423	CallExpression	New_full_hostname ( tmp )		1049885	0					
ANR	1050424	Callee	New_full_hostname		1049885	0					
ANR	1050425	Identifier	New_full_hostname		1049885	0					
ANR	1050426	ArgumentList	tmp		1049885	1					
ANR	1050427	Argument	tmp		1049885	0					
ANR	1050428	Identifier	tmp		1049885	0					
ANR	1050429	ExpressionStatement	tmp = NULL	1160:2:29800:29810	1049885	7	True				
ANR	1050430	AssignmentExpression	tmp = NULL		1049885	0		=			
ANR	1050431	Identifier	tmp		1049885	0					
ANR	1050432	Identifier	NULL		1049885	1					
ANR	1050433	IfStatement	if ( _pool )		1049885	8					
ANR	1050434	Condition	_pool	1166:6:30034:30038	1049885	0	True				
ANR	1050435	Identifier	_pool		1049885	0					
ANR	1050436	CompoundStatement		123:14:3932:3932	1049885	1					
ANR	1050437	Statement	dprintf	1167:3:30047:30053	1049885	0	True				
ANR	1050438	Statement	(	1167:10:30054:30054	1049885	1	True				
ANR	1050439	Statement	D_HOSTNAME	1167:12:30056:30065	1049885	2	True				
ANR	1050440	Statement	","	1167:22:30066:30066	1049885	3	True				
ANR	1050441	Statement	"""Pool was specified, """	1167:24:30068:30089	1049885	4	True				
ANR	1050442	Statement	"""forcing collector query\\n"""	1168:6:30097:30123	1049885	5	True				
ANR	1050443	Statement	)	1168:34:30125:30125	1049885	6	True				
ANR	1050444	ExpressionStatement		1168:35:30126:30126	1049885	7	True				
ANR	1050445	ElseStatement	else		1049885	0					
ANR	1050446	CompoundStatement		126:9:4027:4027	1049885	0					
ANR	1050447	ExpressionStatement	my_name = localName ( )	1170:3:30142:30163	1049885	0	True				
ANR	1050448	AssignmentExpression	my_name = localName ( )		1049885	0		=			
ANR	1050449	Identifier	my_name		1049885	0					
ANR	1050450	CallExpression	localName ( )		1049885	1					
ANR	1050451	Callee	localName		1049885	0					
ANR	1050452	Identifier	localName		1049885	0					
ANR	1050453	ArgumentList			1049885	1					
ANR	1050454	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Local daemon name would be \\""%s\\""\\n"" , my_name )"	1171:3:30168:30244	1049885	1	True				
ANR	1050455	CallExpression	"dprintf ( D_HOSTNAME , ""Local daemon name would be \\""%s\\""\\n"" , my_name )"		1049885	0					
ANR	1050456	Callee	dprintf		1049885	0					
ANR	1050457	Identifier	dprintf		1049885	0					
ANR	1050458	ArgumentList	D_HOSTNAME		1049885	1					
ANR	1050459	Argument	D_HOSTNAME		1049885	0					
ANR	1050460	Identifier	D_HOSTNAME		1049885	0					
ANR	1050461	Argument	"""Local daemon name would be \\""%s\\""\\n"""		1049885	1					
ANR	1050462	PrimaryExpression	"""Local daemon name would be \\""%s\\""\\n"""		1049885	0					
ANR	1050463	Argument	my_name		1049885	2					
ANR	1050464	Identifier	my_name		1049885	0					
ANR	1050465	IfStatement	"if ( ! strcmp ( _name , my_name ) )"		1049885	2					
ANR	1050466	Condition	"! strcmp ( _name , my_name )"	1173:7:30253:30275	1049885	0	True				
ANR	1050467	UnaryOperationExpression	"! strcmp ( _name , my_name )"		1049885	0					
ANR	1050468	UnaryOperator	!		1049885	0					
ANR	1050469	CallExpression	"strcmp ( _name , my_name )"		1049885	1					
ANR	1050470	Callee	strcmp		1049885	0					
ANR	1050471	Identifier	strcmp		1049885	0					
ANR	1050472	ArgumentList	_name		1049885	1					
ANR	1050473	Argument	_name		1049885	0					
ANR	1050474	Identifier	_name		1049885	0					
ANR	1050475	Argument	my_name		1049885	1					
ANR	1050476	Identifier	my_name		1049885	0					
ANR	1050477	CompoundStatement		130:33:4169:4169	1049885	1					
ANR	1050478	Statement	dprintf	1174:4:30285:30291	1049885	0	True				
ANR	1050479	Statement	(	1174:11:30292:30292	1049885	1	True				
ANR	1050480	Statement	D_HOSTNAME	1174:13:30294:30303	1049885	2	True				
ANR	1050481	Statement	","	1174:23:30304:30304	1049885	3	True				
ANR	1050482	Statement	"""Name \\""%s\\"" matches local name and """	1174:25:30306:30342	1049885	4	True				
ANR	1050483	Statement	"""no pool given, treating as a local daemon\\n"""	1175:7:30351:30395	1049885	5	True				
ANR	1050484	Statement	","	1175:52:30396:30396	1049885	6	True				
ANR	1050485	Statement	_name	1176:7:30405:30409	1049885	7	True				
ANR	1050486	Statement	)	1176:13:30411:30411	1049885	8	True				
ANR	1050487	ExpressionStatement		1176:14:30412:30412	1049885	9	True				
ANR	1050488	ExpressionStatement	_is_local = true	1177:4:30418:30434	1049885	10	True				
ANR	1050489	AssignmentExpression	_is_local = true		1049885	0		=			
ANR	1050490	Identifier	_is_local		1049885	0					
ANR	1050491	Identifier	true		1049885	1					
ANR	1050492	Statement	delete	1179:3:30444:30449	1049885	3	True				
ANR	1050493	Statement	[	1179:10:30451:30451	1049885	4	True				
ANR	1050494	Statement	]	1179:11:30452:30452	1049885	5	True				
ANR	1050495	ExpressionStatement	my_name	1179:13:30454:30461	1049885	6	True				
ANR	1050496	Identifier	my_name		1049885	0					
ANR	1050497	ElseStatement	else		1049885	0					
ANR	1050498	IfStatement	if ( ( _type != DT_NEGOTIATOR ) && ( _type != DT_LEASE_MANAGER ) )		1049885	0					
ANR	1050499	Condition	( _type != DT_NEGOTIATOR ) && ( _type != DT_LEASE_MANAGER )	1181:13:30480:30538	1049885	0	True				
ANR	1050500	AndExpression	( _type != DT_NEGOTIATOR ) && ( _type != DT_LEASE_MANAGER )		1049885	0		&&			
ANR	1050501	EqualityExpression	_type != DT_NEGOTIATOR		1049885	0		!=			
ANR	1050502	Identifier	_type		1049885	0					
ANR	1050503	Identifier	DT_NEGOTIATOR		1049885	1					
ANR	1050504	EqualityExpression	_type != DT_LEASE_MANAGER		1049885	1		!=			
ANR	1050505	Identifier	_type		1049885	0					
ANR	1050506	Identifier	DT_LEASE_MANAGER		1049885	1					
ANR	1050507	CompoundStatement		138:75:4432:4432	1049885	1					
ANR	1050508	ExpressionStatement	_is_local = true	1186:2:30753:30769	1049885	0	True				
ANR	1050509	AssignmentExpression	_is_local = true		1049885	0		=			
ANR	1050510	Identifier	_is_local		1049885	0					
ANR	1050511	Identifier	true		1049885	1					
ANR	1050512	ExpressionStatement	New_name ( localName ( ) )	1187:2:30773:30796	1049885	1	True				
ANR	1050513	CallExpression	New_name ( localName ( ) )		1049885	0					
ANR	1050514	Callee	New_name		1049885	0					
ANR	1050515	Identifier	New_name		1049885	0					
ANR	1050516	ArgumentList	localName ( )		1049885	1					
ANR	1050517	Argument	localName ( )		1049885	0					
ANR	1050518	CallExpression	localName ( )		1049885	0					
ANR	1050519	Callee	localName		1049885	0					
ANR	1050520	Identifier	localName		1049885	0					
ANR	1050521	ArgumentList			1049885	1					
ANR	1050522	ExpressionStatement	New_full_hostname ( strnewp ( get_local_fqdn ( ) . Value ( ) ) )	1188:2:30800:30854	1049885	2	True				
ANR	1050523	CallExpression	New_full_hostname ( strnewp ( get_local_fqdn ( ) . Value ( ) ) )		1049885	0					
ANR	1050524	Callee	New_full_hostname		1049885	0					
ANR	1050525	Identifier	New_full_hostname		1049885	0					
ANR	1050526	ArgumentList	strnewp ( get_local_fqdn ( ) . Value ( ) )		1049885	1					
ANR	1050527	Argument	strnewp ( get_local_fqdn ( ) . Value ( ) )		1049885	0					
ANR	1050528	CallExpression	strnewp ( get_local_fqdn ( ) . Value ( ) )		1049885	0					
ANR	1050529	Callee	strnewp		1049885	0					
ANR	1050530	Identifier	strnewp		1049885	0					
ANR	1050531	ArgumentList	get_local_fqdn ( ) . Value ( )		1049885	1					
ANR	1050532	Argument	get_local_fqdn ( ) . Value ( )		1049885	0					
ANR	1050533	CallExpression	get_local_fqdn ( ) . Value ( )		1049885	0					
ANR	1050534	Callee	get_local_fqdn ( ) . Value		1049885	0					
ANR	1050535	MemberAccess	get_local_fqdn ( ) . Value		1049885	0					
ANR	1050536	CallExpression	get_local_fqdn ( )		1049885	0					
ANR	1050537	Callee	get_local_fqdn		1049885	0					
ANR	1050538	Identifier	get_local_fqdn		1049885	0					
ANR	1050539	ArgumentList			1049885	1					
ANR	1050540	Identifier	Value		1049885	1					
ANR	1050541	ArgumentList			1049885	1					
ANR	1050542	Statement	dprintf	1189:2:30858:30864	1049885	3	True				
ANR	1050543	Statement	(	1189:9:30865:30865	1049885	4	True				
ANR	1050544	Statement	D_HOSTNAME	1189:11:30867:30876	1049885	5	True				
ANR	1050545	Statement	","	1189:21:30877:30877	1049885	6	True				
ANR	1050546	Statement	"""Neither name nor addr specified, using local """	1189:23:30879:30925	1049885	7	True				
ANR	1050547	Statement	"""values - name: \\""%s\\"", full host: \\""%s\\""\\n"""	1190:5:30932:30975	1049885	8	True				
ANR	1050548	Statement	","	1190:49:30976:30976	1049885	9	True				
ANR	1050549	Statement	_name	1191:5:30984:30988	1049885	10	True				
ANR	1050550	Statement	","	1191:10:30989:30989	1049885	11	True				
ANR	1050551	Statement	_full_hostname	1191:12:30991:31004	1049885	12	True				
ANR	1050552	Statement	)	1191:27:31006:31006	1049885	13	True				
ANR	1050553	ExpressionStatement		1191:28:31007:31007	1049885	14	True				
ANR	1050554	IfStatement	if ( _is_local )		1049885	9					
ANR	1050555	Condition	_is_local	1197:5:31121:31129	1049885	0	True				
ANR	1050556	Identifier	_is_local		1049885	0					
ANR	1050557	CompoundStatement		155:2:5027:5074	1049885	1					
ANR	1050558	IdentifierDeclStatement	bool foundLocalAd = readLocalClassAd ( _subsys ) ;	1198:2:31137:31184	1049885	0	True				
ANR	1050559	IdentifierDecl	foundLocalAd = readLocalClassAd ( _subsys )		1049885	0					
ANR	1050560	IdentifierDeclType	bool		1049885	0					
ANR	1050561	Identifier	foundLocalAd		1049885	1					
ANR	1050562	AssignmentExpression	foundLocalAd = readLocalClassAd ( _subsys )		1049885	2		=			
ANR	1050563	Identifier	foundLocalAd		1049885	0					
ANR	1050564	CallExpression	readLocalClassAd ( _subsys )		1049885	1					
ANR	1050565	Callee	readLocalClassAd		1049885	0					
ANR	1050566	Identifier	readLocalClassAd		1049885	0					
ANR	1050567	ArgumentList	_subsys		1049885	1					
ANR	1050568	Argument	_subsys		1049885	0					
ANR	1050569	Identifier	_subsys		1049885	0					
ANR	1050570	IfStatement	if ( ! foundLocalAd )		1049885	1					
ANR	1050571	Condition	! foundLocalAd	1199:5:31191:31203	1049885	0	True				
ANR	1050572	UnaryOperationExpression	! foundLocalAd		1049885	0					
ANR	1050573	UnaryOperator	!		1049885	0					
ANR	1050574	Identifier	foundLocalAd		1049885	1					
ANR	1050575	CompoundStatement		156:20:5096:5096	1049885	1					
ANR	1050576	ExpressionStatement	readAddressFile ( _subsys )	1200:3:31211:31237	1049885	0	True				
ANR	1050577	CallExpression	readAddressFile ( _subsys )		1049885	0					
ANR	1050578	Callee	readAddressFile		1049885	0					
ANR	1050579	Identifier	readAddressFile		1049885	0					
ANR	1050580	ArgumentList	_subsys		1049885	1					
ANR	1050581	Argument	_subsys		1049885	0					
ANR	1050582	Identifier	_subsys		1049885	0					
ANR	1050583	IfStatement	if ( ( ! _addr ) && ( ! query_collector ) )		1049885	10					
ANR	1050584	Condition	( ! _addr ) && ( ! query_collector )	1204:5:31252:31282	1049885	0	True				
ANR	1050585	AndExpression	( ! _addr ) && ( ! query_collector )		1049885	0		&&			
ANR	1050586	UnaryOperationExpression	! _addr		1049885	0					
ANR	1050587	UnaryOperator	!		1049885	0					
ANR	1050588	Identifier	_addr		1049885	1					
ANR	1050589	UnaryOperationExpression	! query_collector		1049885	1					
ANR	1050590	UnaryOperator	!		1049885	0					
ANR	1050591	Identifier	query_collector		1049885	1					
ANR	1050592	CompoundStatement		161:38:5175:5175	1049885	1					
ANR	1050593	ReturnStatement	return false ;	1205:3:31290:31302	1049885	0	True				
ANR	1050594	Identifier	false		1049885	0					
ANR	1050595	IfStatement	if ( ! _addr )		1049885	11					
ANR	1050596	Condition	! _addr	1208:5:31313:31319	1049885	0	True				
ANR	1050597	UnaryOperationExpression	! _addr		1049885	0					
ANR	1050598	UnaryOperator	!		1049885	0					
ANR	1050599	Identifier	_addr		1049885	1					
ANR	1050600	CompoundStatement		214:2:7083:7103	1049885	1					
ANR	1050601	IdentifierDeclStatement	CondorQuery query ( adtype ) ;	1211:2:31424:31451	1049885	0	True				
ANR	1050602	IdentifierDecl	query ( adtype )		1049885	0					
ANR	1050603	IdentifierDeclType	CondorQuery		1049885	0					
ANR	1050604	Identifier	query		1049885	1					
ANR	1050605	Identifier	adtype		1049885	2					
ANR	1050606	IdentifierDeclStatement	ClassAd * scan ;	1212:2:31455:31470	1049885	1	True				
ANR	1050607	IdentifierDecl	* scan		1049885	0					
ANR	1050608	IdentifierDeclType	ClassAd *		1049885	0					
ANR	1050609	Identifier	scan		1049885	1					
ANR	1050610	IdentifierDeclStatement	ClassAdList ads ;	1213:2:31474:31491	1049885	2	True				
ANR	1050611	IdentifierDecl	ads		1049885	0					
ANR	1050612	IdentifierDeclType	ClassAdList		1049885	0					
ANR	1050613	Identifier	ads		1049885	1					
ANR	1050614	IfStatement	"if ( ( _type == DT_STARTD && ! strchr ( _name , '@' ) ) || _type == DT_HAD )"		1049885	3					
ANR	1050615	Condition	"( _type == DT_STARTD && ! strchr ( _name , '@' ) ) || _type == DT_HAD"	1215:6:31500:31565	1049885	0	True				
ANR	1050616	OrExpression	"( _type == DT_STARTD && ! strchr ( _name , '@' ) ) || _type == DT_HAD"		1049885	0		||			
ANR	1050617	AndExpression	"_type == DT_STARTD && ! strchr ( _name , '@' )"		1049885	0		&&			
ANR	1050618	EqualityExpression	_type == DT_STARTD		1049885	0		==			
ANR	1050619	Identifier	_type		1049885	0					
ANR	1050620	Identifier	DT_STARTD		1049885	1					
ANR	1050621	UnaryOperationExpression	"! strchr ( _name , '@' )"		1049885	1					
ANR	1050622	UnaryOperator	!		1049885	0					
ANR	1050623	CallExpression	"strchr ( _name , '@' )"		1049885	1					
ANR	1050624	Callee	strchr		1049885	0					
ANR	1050625	Identifier	strchr		1049885	0					
ANR	1050626	ArgumentList	_name		1049885	1					
ANR	1050627	Argument	_name		1049885	0					
ANR	1050628	Identifier	_name		1049885	0					
ANR	1050629	Argument	'@'		1049885	1					
ANR	1050630	PrimaryExpression	'@'		1049885	0					
ANR	1050631	EqualityExpression	_type == DT_HAD		1049885	1		==			
ANR	1050632	Identifier	_type		1049885	0					
ANR	1050633	Identifier	DT_HAD		1049885	1					
ANR	1050634	CompoundStatement		173:21:5459:5459	1049885	1					
ANR	1050635	ExpressionStatement	"buf . sprintf ( ""%s == \\""%s\\"""" , ATTR_MACHINE , _full_hostname )"	1237:3:32493:32552	1049885	0	True				
ANR	1050636	CallExpression	"buf . sprintf ( ""%s == \\""%s\\"""" , ATTR_MACHINE , _full_hostname )"		1049885	0					
ANR	1050637	Callee	buf . sprintf		1049885	0					
ANR	1050638	MemberAccess	buf . sprintf		1049885	0					
ANR	1050639	Identifier	buf		1049885	0					
ANR	1050640	Identifier	sprintf		1049885	1					
ANR	1050641	ArgumentList	"""%s == \\""%s\\"""""		1049885	1					
ANR	1050642	Argument	"""%s == \\""%s\\"""""		1049885	0					
ANR	1050643	PrimaryExpression	"""%s == \\""%s\\"""""		1049885	0					
ANR	1050644	Argument	ATTR_MACHINE		1049885	1					
ANR	1050645	Identifier	ATTR_MACHINE		1049885	0					
ANR	1050646	Argument	_full_hostname		1049885	2					
ANR	1050647	Identifier	_full_hostname		1049885	0					
ANR	1050648	ExpressionStatement	query . addANDConstraint ( buf . Value ( ) )	1238:3:32558:32595	1049885	1	True				
ANR	1050649	CallExpression	query . addANDConstraint ( buf . Value ( ) )		1049885	0					
ANR	1050650	Callee	query . addANDConstraint		1049885	0					
ANR	1050651	MemberAccess	query . addANDConstraint		1049885	0					
ANR	1050652	Identifier	query		1049885	0					
ANR	1050653	Identifier	addANDConstraint		1049885	1					
ANR	1050654	ArgumentList	buf . Value ( )		1049885	1					
ANR	1050655	Argument	buf . Value ( )		1049885	0					
ANR	1050656	CallExpression	buf . Value ( )		1049885	0					
ANR	1050657	Callee	buf . Value		1049885	0					
ANR	1050658	MemberAccess	buf . Value		1049885	0					
ANR	1050659	Identifier	buf		1049885	0					
ANR	1050660	Identifier	Value		1049885	1					
ANR	1050661	ArgumentList			1049885	1					
ANR	1050662	ElseStatement	else		1049885	0					
ANR	1050663	IfStatement	if ( _type == DT_GENERIC )		1049885	0					
ANR	1050664	Condition	_type == DT_GENERIC	1239:14:32611:32629	1049885	0	True				
ANR	1050665	EqualityExpression	_type == DT_GENERIC		1049885	0		==			
ANR	1050666	Identifier	_type		1049885	0					
ANR	1050667	Identifier	DT_GENERIC		1049885	1					
ANR	1050668	CompoundStatement		196:36:6523:6523	1049885	1					
ANR	1050669	ExpressionStatement	query . setGenericQueryType ( _subsys )	1240:3:32638:32672	1049885	0	True				
ANR	1050670	CallExpression	query . setGenericQueryType ( _subsys )		1049885	0					
ANR	1050671	Callee	query . setGenericQueryType		1049885	0					
ANR	1050672	MemberAccess	query . setGenericQueryType		1049885	0					
ANR	1050673	Identifier	query		1049885	0					
ANR	1050674	Identifier	setGenericQueryType		1049885	1					
ANR	1050675	ArgumentList	_subsys		1049885	1					
ANR	1050676	Argument	_subsys		1049885	0					
ANR	1050677	Identifier	_subsys		1049885	0					
ANR	1050678	ElseStatement	else		1049885	0					
ANR	1050679	IfStatement	if ( _name )		1049885	0					
ANR	1050680	Condition	_name	1241:14:32688:32692	1049885	0	True				
ANR	1050681	Identifier	_name		1049885	0					
ANR	1050682	CompoundStatement		198:22:6586:6586	1049885	1					
ANR	1050683	ExpressionStatement	"buf . sprintf ( ""%s == \\""%s\\"""" , ATTR_NAME , _name )"	1242:3:32701:32748	1049885	0	True				
ANR	1050684	CallExpression	"buf . sprintf ( ""%s == \\""%s\\"""" , ATTR_NAME , _name )"		1049885	0					
ANR	1050685	Callee	buf . sprintf		1049885	0					
ANR	1050686	MemberAccess	buf . sprintf		1049885	0					
ANR	1050687	Identifier	buf		1049885	0					
ANR	1050688	Identifier	sprintf		1049885	1					
ANR	1050689	ArgumentList	"""%s == \\""%s\\"""""		1049885	1					
ANR	1050690	Argument	"""%s == \\""%s\\"""""		1049885	0					
ANR	1050691	PrimaryExpression	"""%s == \\""%s\\"""""		1049885	0					
ANR	1050692	Argument	ATTR_NAME		1049885	1					
ANR	1050693	Identifier	ATTR_NAME		1049885	0					
ANR	1050694	Argument	_name		1049885	2					
ANR	1050695	Identifier	_name		1049885	0					
ANR	1050696	ExpressionStatement	query . addANDConstraint ( buf . Value ( ) )	1243:3:32754:32791	1049885	1	True				
ANR	1050697	CallExpression	query . addANDConstraint ( buf . Value ( ) )		1049885	0					
ANR	1050698	Callee	query . addANDConstraint		1049885	0					
ANR	1050699	MemberAccess	query . addANDConstraint		1049885	0					
ANR	1050700	Identifier	query		1049885	0					
ANR	1050701	Identifier	addANDConstraint		1049885	1					
ANR	1050702	ArgumentList	buf . Value ( )		1049885	1					
ANR	1050703	Argument	buf . Value ( )		1049885	0					
ANR	1050704	CallExpression	buf . Value ( )		1049885	0					
ANR	1050705	Callee	buf . Value		1049885	0					
ANR	1050706	MemberAccess	buf . Value		1049885	0					
ANR	1050707	Identifier	buf		1049885	0					
ANR	1050708	Identifier	Value		1049885	1					
ANR	1050709	ArgumentList			1049885	1					
ANR	1050710	ElseStatement	else		1049885	0					
ANR	1050711	CompoundStatement		201:9:6692:6692	1049885	0					
ANR	1050712	IfStatement	if ( ( _type != DT_NEGOTIATOR ) && ( _type != DT_LEASE_MANAGER ) )		1049885	0					
ANR	1050713	Condition	( _type != DT_NEGOTIATOR ) && ( _type != DT_LEASE_MANAGER )	1245:8:32812:32869	1049885	0	True				
ANR	1050714	AndExpression	( _type != DT_NEGOTIATOR ) && ( _type != DT_LEASE_MANAGER )		1049885	0		&&			
ANR	1050715	EqualityExpression	_type != DT_NEGOTIATOR		1049885	0		!=			
ANR	1050716	Identifier	_type		1049885	0					
ANR	1050717	Identifier	DT_NEGOTIATOR		1049885	1					
ANR	1050718	EqualityExpression	_type != DT_LEASE_MANAGER		1049885	1		!=			
ANR	1050719	Identifier	_type		1049885	0					
ANR	1050720	Identifier	DT_LEASE_MANAGER		1049885	1					
ANR	1050721	CompoundStatement		202:69:6763:6763	1049885	1					
ANR	1050722	ReturnStatement	return false ;	1251:4:33069:33081	1049885	0	True				
ANR	1050723	Identifier	false		1049885	0					
ANR	1050724	IdentifierDeclStatement	CollectorList * collectors = CollectorList :: create ( _pool ) ;	1256:2:33132:33189	1049885	4	True				
ANR	1050725	IdentifierDecl	* collectors = CollectorList :: create ( _pool )		1049885	0					
ANR	1050726	IdentifierDeclType	CollectorList *		1049885	0					
ANR	1050727	Identifier	collectors		1049885	1					
ANR	1050728	AssignmentExpression	* collectors = CollectorList :: create ( _pool )		1049885	2		=			
ANR	1050729	Identifier	collectors		1049885	0					
ANR	1050730	CallExpression	CollectorList :: create ( _pool )		1049885	1					
ANR	1050731	Callee	CollectorList :: create		1049885	0					
ANR	1050732	Identifier	CollectorList :: create		1049885	0					
ANR	1050733	ArgumentList	_pool		1049885	1					
ANR	1050734	Argument	_pool		1049885	0					
ANR	1050735	Identifier	_pool		1049885	0					
ANR	1050736	IdentifierDeclStatement	CondorError errstack ;	1257:2:33193:33213	1049885	5	True				
ANR	1050737	IdentifierDecl	errstack		1049885	0					
ANR	1050738	IdentifierDeclType	CondorError		1049885	0					
ANR	1050739	Identifier	errstack		1049885	1					
ANR	1050740	IfStatement	"if ( collectors -> query ( query , ads ) != Q_OK )"		1049885	6					
ANR	1050741	Condition	"collectors -> query ( query , ads ) != Q_OK"	1258:6:33221:33258	1049885	0	True				
ANR	1050742	EqualityExpression	"collectors -> query ( query , ads ) != Q_OK"		1049885	0		!=			
ANR	1050743	CallExpression	"collectors -> query ( query , ads )"		1049885	0					
ANR	1050744	Callee	collectors -> query		1049885	0					
ANR	1050745	PtrMemberAccess	collectors -> query		1049885	0					
ANR	1050746	Identifier	collectors		1049885	0					
ANR	1050747	Identifier	query		1049885	1					
ANR	1050748	ArgumentList	query		1049885	1					
ANR	1050749	Argument	query		1049885	0					
ANR	1050750	Identifier	query		1049885	0					
ANR	1050751	Argument	ads		1049885	1					
ANR	1050752	Identifier	ads		1049885	0					
ANR	1050753	Identifier	Q_OK		1049885	1					
ANR	1050754	CompoundStatement		215:46:7151:7151	1049885	1					
ANR	1050755	Statement	delete	1259:3:33266:33271	1049885	0	True				
ANR	1050756	ExpressionStatement	collectors	1259:10:33273:33283	1049885	1	True				
ANR	1050757	Identifier	collectors		1049885	0					
ANR	1050758	ExpressionStatement	"newError ( CA_LOCATE_FAILED , errstack . getFullText ( ) )"	1260:3:33288:33340	1049885	2	True				
ANR	1050759	CallExpression	"newError ( CA_LOCATE_FAILED , errstack . getFullText ( ) )"		1049885	0					
ANR	1050760	Callee	newError		1049885	0					
ANR	1050761	Identifier	newError		1049885	0					
ANR	1050762	ArgumentList	CA_LOCATE_FAILED		1049885	1					
ANR	1050763	Argument	CA_LOCATE_FAILED		1049885	0					
ANR	1050764	Identifier	CA_LOCATE_FAILED		1049885	0					
ANR	1050765	Argument	errstack . getFullText ( )		1049885	1					
ANR	1050766	CallExpression	errstack . getFullText ( )		1049885	0					
ANR	1050767	Callee	errstack . getFullText		1049885	0					
ANR	1050768	MemberAccess	errstack . getFullText		1049885	0					
ANR	1050769	Identifier	errstack		1049885	0					
ANR	1050770	Identifier	getFullText		1049885	1					
ANR	1050771	ArgumentList			1049885	1					
ANR	1050772	ReturnStatement	return false ;	1261:3:33345:33357	1049885	3	True				
ANR	1050773	Identifier	false		1049885	0					
ANR	1050774	ExpressionStatement		1262:3:33362:33362	1049885	7	True				
ANR	1050775	Statement	delete	1263:2:33366:33371	1049885	8	True				
ANR	1050776	ExpressionStatement	collectors	1263:9:33373:33383	1049885	9	True				
ANR	1050777	Identifier	collectors		1049885	0					
ANR	1050778	ExpressionStatement	ads . Open ( )	1265:2:33388:33398	1049885	10	True				
ANR	1050779	CallExpression	ads . Open ( )		1049885	0					
ANR	1050780	Callee	ads . Open		1049885	0					
ANR	1050781	MemberAccess	ads . Open		1049885	0					
ANR	1050782	Identifier	ads		1049885	0					
ANR	1050783	Identifier	Open		1049885	1					
ANR	1050784	ArgumentList			1049885	1					
ANR	1050785	ExpressionStatement	scan = ads . Next ( )	1266:2:33402:33419	1049885	11	True				
ANR	1050786	AssignmentExpression	scan = ads . Next ( )		1049885	0		=			
ANR	1050787	Identifier	scan		1049885	0					
ANR	1050788	CallExpression	ads . Next ( )		1049885	1					
ANR	1050789	Callee	ads . Next		1049885	0					
ANR	1050790	MemberAccess	ads . Next		1049885	0					
ANR	1050791	Identifier	ads		1049885	0					
ANR	1050792	Identifier	Next		1049885	1					
ANR	1050793	ArgumentList			1049885	1					
ANR	1050794	IfStatement	if ( ! scan )		1049885	12					
ANR	1050795	Condition	! scan	1267:5:33426:33430	1049885	0	True				
ANR	1050796	UnaryOperationExpression	! scan		1049885	0					
ANR	1050797	UnaryOperator	!		1049885	0					
ANR	1050798	Identifier	scan		1049885	1					
ANR	1050799	CompoundStatement		224:12:7323:7323	1049885	1					
ANR	1050800	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't find address for %s %s\\n"" , daemonString ( _type ) , _name ? _name : """" )"	1268:3:33438:33538	1049885	0	True				
ANR	1050801	CallExpression	"dprintf ( D_ALWAYS , ""Can't find address for %s %s\\n"" , daemonString ( _type ) , _name ? _name : """" )"		1049885	0					
ANR	1050802	Callee	dprintf		1049885	0					
ANR	1050803	Identifier	dprintf		1049885	0					
ANR	1050804	ArgumentList	D_ALWAYS		1049885	1					
ANR	1050805	Argument	D_ALWAYS		1049885	0					
ANR	1050806	Identifier	D_ALWAYS		1049885	0					
ANR	1050807	Argument	"""Can't find address for %s %s\\n"""		1049885	1					
ANR	1050808	PrimaryExpression	"""Can't find address for %s %s\\n"""		1049885	0					
ANR	1050809	Argument	daemonString ( _type )		1049885	2					
ANR	1050810	CallExpression	daemonString ( _type )		1049885	0					
ANR	1050811	Callee	daemonString		1049885	0					
ANR	1050812	Identifier	daemonString		1049885	0					
ANR	1050813	ArgumentList	_type		1049885	1					
ANR	1050814	Argument	_type		1049885	0					
ANR	1050815	Identifier	_type		1049885	0					
ANR	1050816	Argument	"_name ? _name : """""		1049885	3					
ANR	1050817	ConditionalExpression	"_name ? _name : """""		1049885	0					
ANR	1050818	Condition	_name		1049885	0					
ANR	1050819	Identifier	_name		1049885	0					
ANR	1050820	Identifier	_name		1049885	1					
ANR	1050821	PrimaryExpression	""""""		1049885	2					
ANR	1050822	ExpressionStatement	"buf . sprintf ( ""Can't find address for %s %s"" , daemonString ( _type ) , _name ? _name : """" )"	1270:3:33543:33637	1049885	1	True				
ANR	1050823	CallExpression	"buf . sprintf ( ""Can't find address for %s %s"" , daemonString ( _type ) , _name ? _name : """" )"		1049885	0					
ANR	1050824	Callee	buf . sprintf		1049885	0					
ANR	1050825	MemberAccess	buf . sprintf		1049885	0					
ANR	1050826	Identifier	buf		1049885	0					
ANR	1050827	Identifier	sprintf		1049885	1					
ANR	1050828	ArgumentList	"""Can't find address for %s %s"""		1049885	1					
ANR	1050829	Argument	"""Can't find address for %s %s"""		1049885	0					
ANR	1050830	PrimaryExpression	"""Can't find address for %s %s"""		1049885	0					
ANR	1050831	Argument	daemonString ( _type )		1049885	1					
ANR	1050832	CallExpression	daemonString ( _type )		1049885	0					
ANR	1050833	Callee	daemonString		1049885	0					
ANR	1050834	Identifier	daemonString		1049885	0					
ANR	1050835	ArgumentList	_type		1049885	1					
ANR	1050836	Argument	_type		1049885	0					
ANR	1050837	Identifier	_type		1049885	0					
ANR	1050838	Argument	"_name ? _name : """""		1049885	2					
ANR	1050839	ConditionalExpression	"_name ? _name : """""		1049885	0					
ANR	1050840	Condition	_name		1049885	0					
ANR	1050841	Identifier	_name		1049885	0					
ANR	1050842	Identifier	_name		1049885	1					
ANR	1050843	PrimaryExpression	""""""		1049885	2					
ANR	1050844	ExpressionStatement	"newError ( CA_LOCATE_FAILED , buf . Value ( ) )"	1272:3:33642:33683	1049885	2	True				
ANR	1050845	CallExpression	"newError ( CA_LOCATE_FAILED , buf . Value ( ) )"		1049885	0					
ANR	1050846	Callee	newError		1049885	0					
ANR	1050847	Identifier	newError		1049885	0					
ANR	1050848	ArgumentList	CA_LOCATE_FAILED		1049885	1					
ANR	1050849	Argument	CA_LOCATE_FAILED		1049885	0					
ANR	1050850	Identifier	CA_LOCATE_FAILED		1049885	0					
ANR	1050851	Argument	buf . Value ( )		1049885	1					
ANR	1050852	CallExpression	buf . Value ( )		1049885	0					
ANR	1050853	Callee	buf . Value		1049885	0					
ANR	1050854	MemberAccess	buf . Value		1049885	0					
ANR	1050855	Identifier	buf		1049885	0					
ANR	1050856	Identifier	Value		1049885	1					
ANR	1050857	ArgumentList			1049885	1					
ANR	1050858	ReturnStatement	return false ;	1273:3:33688:33700	1049885	3	True				
ANR	1050859	Identifier	false		1049885	0					
ANR	1050860	IfStatement	if ( ! getInfoFromAd ( scan ) )		1049885	13					
ANR	1050861	Condition	! getInfoFromAd ( scan )	1276:7:33715:33737	1049885	0	True				
ANR	1050862	UnaryOperationExpression	! getInfoFromAd ( scan )		1049885	0					
ANR	1050863	UnaryOperator	!		1049885	0					
ANR	1050864	CallExpression	getInfoFromAd ( scan )		1049885	1					
ANR	1050865	Callee	getInfoFromAd		1049885	0					
ANR	1050866	Identifier	getInfoFromAd		1049885	0					
ANR	1050867	ArgumentList	scan		1049885	1					
ANR	1050868	Argument	scan		1049885	0					
ANR	1050869	Identifier	scan		1049885	0					
ANR	1050870	CompoundStatement		233:33:7631:7631	1049885	1					
ANR	1050871	ReturnStatement	return false ;	1277:3:33746:33758	1049885	0	True				
ANR	1050872	Identifier	false		1049885	0					
ANR	1050873	IfStatement	if ( ! m_daemon_ad_ptr )		1049885	14					
ANR	1050874	Condition	! m_daemon_ad_ptr	1279:6:33770:33785	1049885	0	True				
ANR	1050875	UnaryOperationExpression	! m_daemon_ad_ptr		1049885	0					
ANR	1050876	UnaryOperator	!		1049885	0					
ANR	1050877	Identifier	m_daemon_ad_ptr		1049885	1					
ANR	1050878	CompoundStatement		236:24:7678:7678	1049885	1					
ANR	1050879	ExpressionStatement	m_daemon_ad_ptr = new ClassAd ( * scan )	1284:3:34050:34086	1049885	0	True				
ANR	1050880	AssignmentExpression	m_daemon_ad_ptr = new ClassAd ( * scan )		1049885	0		=			
ANR	1050881	Identifier	m_daemon_ad_ptr		1049885	0					
ANR	1050882	UnaryOperationExpression	* scan		1049885	1					
ANR	1050883	UnaryOperator	*		1049885	0					
ANR	1050884	Identifier	scan		1049885	1					
ANR	1050885	ExpressionStatement	"initStringFromAd ( scan , ATTR_VERSION , & _version )"	1288:2:34198:34247	1049885	15	True				
ANR	1050886	CallExpression	"initStringFromAd ( scan , ATTR_VERSION , & _version )"		1049885	0					
ANR	1050887	Callee	initStringFromAd		1049885	0					
ANR	1050888	Identifier	initStringFromAd		1049885	0					
ANR	1050889	ArgumentList	scan		1049885	1					
ANR	1050890	Argument	scan		1049885	0					
ANR	1050891	Identifier	scan		1049885	0					
ANR	1050892	Argument	ATTR_VERSION		1049885	1					
ANR	1050893	Identifier	ATTR_VERSION		1049885	0					
ANR	1050894	Argument	& _version		1049885	2					
ANR	1050895	UnaryOperationExpression	& _version		1049885	0					
ANR	1050896	UnaryOperator	&		1049885	0					
ANR	1050897	Identifier	_version		1049885	1					
ANR	1050898	ExpressionStatement	"initStringFromAd ( scan , ATTR_PLATFORM , & _platform )"	1289:2:34251:34302	1049885	16	True				
ANR	1050899	CallExpression	"initStringFromAd ( scan , ATTR_PLATFORM , & _platform )"		1049885	0					
ANR	1050900	Callee	initStringFromAd		1049885	0					
ANR	1050901	Identifier	initStringFromAd		1049885	0					
ANR	1050902	ArgumentList	scan		1049885	1					
ANR	1050903	Argument	scan		1049885	0					
ANR	1050904	Identifier	scan		1049885	0					
ANR	1050905	Argument	ATTR_PLATFORM		1049885	1					
ANR	1050906	Identifier	ATTR_PLATFORM		1049885	0					
ANR	1050907	Argument	& _platform		1049885	2					
ANR	1050908	UnaryOperationExpression	& _platform		1049885	0					
ANR	1050909	UnaryOperator	&		1049885	0					
ANR	1050910	Identifier	_platform		1049885	1					
ANR	1050911	ExpressionStatement	_port = string_to_port ( _addr )	1293:1:34369:34400	1049885	12	True				
ANR	1050912	AssignmentExpression	_port = string_to_port ( _addr )		1049885	0		=			
ANR	1050913	Identifier	_port		1049885	0					
ANR	1050914	CallExpression	string_to_port ( _addr )		1049885	1					
ANR	1050915	Callee	string_to_port		1049885	0					
ANR	1050916	Identifier	string_to_port		1049885	0					
ANR	1050917	ArgumentList	_addr		1049885	1					
ANR	1050918	Argument	_addr		1049885	0					
ANR	1050919	Identifier	_addr		1049885	0					
ANR	1050920	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Using port %d based on address \\""%s\\""\\n"" , _port , _addr )"	1294:1:34403:34485	1049885	13	True				
ANR	1050921	CallExpression	"dprintf ( D_HOSTNAME , ""Using port %d based on address \\""%s\\""\\n"" , _port , _addr )"		1049885	0					
ANR	1050922	Callee	dprintf		1049885	0					
ANR	1050923	Identifier	dprintf		1049885	0					
ANR	1050924	ArgumentList	D_HOSTNAME		1049885	1					
ANR	1050925	Argument	D_HOSTNAME		1049885	0					
ANR	1050926	Identifier	D_HOSTNAME		1049885	0					
ANR	1050927	Argument	"""Using port %d based on address \\""%s\\""\\n"""		1049885	1					
ANR	1050928	PrimaryExpression	"""Using port %d based on address \\""%s\\""\\n"""		1049885	0					
ANR	1050929	Argument	_port		1049885	2					
ANR	1050930	Identifier	_port		1049885	0					
ANR	1050931	Argument	_addr		1049885	3					
ANR	1050932	Identifier	_addr		1049885	0					
ANR	1050933	ReturnStatement	return true ;	1296:1:34488:34499	1049885	14	True				
ANR	1050934	Identifier	true		1049885	0					
ANR	1050935	ReturnType	bool		1049885	1					
ANR	1050936	Identifier	Daemon :: getDaemonInfo		1049885	2					
ANR	1050937	ParameterList	"AdTypes adtype , bool query_collector"		1049885	3					
ANR	1050938	Parameter	AdTypes adtype	1043:23:26070:26083	1049885	0	True				
ANR	1050939	ParameterType	AdTypes		1049885	0					
ANR	1050940	Identifier	adtype		1049885	1					
ANR	1050941	Parameter	bool query_collector	1043:39:26086:26105	1049885	1	True				
ANR	1050942	ParameterType	bool		1049885	0					
ANR	1050943	Identifier	query_collector		1049885	1					
ANR	1050944	CFGEntryNode	ENTRY		1049885		True				
ANR	1050945	CFGExitNode	EXIT		1049885		True				
ANR	1050946	Symbol	CA_LOCATE_FAILED		1049885						
ANR	1050947	Symbol	DT_GENERIC		1049885						
ANR	1050948	Symbol	ATTR_NAME		1049885						
ANR	1050949	Symbol	_name		1049885						
ANR	1050950	Symbol	strchr		1049885						
ANR	1050951	Symbol	get_local_fqdn		1049885						
ANR	1050952	Symbol	_port		1049885						
ANR	1050953	Symbol	fqdn . Value		1049885						
ANR	1050954	Symbol	getHostFromAddr		1049885						
ANR	1050955	Symbol	ATTR_VERSION		1049885						
ANR	1050956	Symbol	_pool		1049885						
ANR	1050957	Symbol	tmp		1049885						
ANR	1050958	Symbol	_tried_locate		1049885						
ANR	1050959	Symbol	readLocalClassAd		1049885						
ANR	1050960	Symbol	* scan		1049885						
ANR	1050961	Symbol	host		1049885						
ANR	1050962	Symbol	_is_local		1049885						
ANR	1050963	Symbol	& _platform		1049885						
ANR	1050964	Symbol	CollectorList :: create		1049885						
ANR	1050965	Symbol	addr . from_ip_string		1049885						
ANR	1050966	Symbol	strcmp		1049885						
ANR	1050967	Symbol	fqdn . Length		1049885						
ANR	1050968	Symbol	NULL		1049885						
ANR	1050969	Symbol	fqdn		1049885						
ANR	1050970	Symbol	query		1049885						
ANR	1050971	Symbol	& _version		1049885						
ANR	1050972	Symbol	collectors -> query		1049885						
ANR	1050973	Symbol	string_to_port		1049885						
ANR	1050974	Symbol	Q_OK		1049885						
ANR	1050975	Symbol	addr . to_ip_string ( ) . Value		1049885						
ANR	1050976	Symbol	localName		1049885						
ANR	1050977	Symbol	ads		1049885						
ANR	1050978	Symbol	DT_STARTD		1049885						
ANR	1050979	Symbol	collectors		1049885						
ANR	1050980	Symbol	errstack		1049885						
ANR	1050981	Symbol	_addr		1049885						
ANR	1050982	Symbol	true		1049885						
ANR	1050983	Symbol	DT_NEGOTIATOR		1049885						
ANR	1050984	Symbol	get_fqdn_and_ip_from_hostname		1049885						
ANR	1050985	Symbol	daemonString		1049885						
ANR	1050986	Symbol	scan		1049885						
ANR	1050987	Symbol	is_valid_sinful		1049885						
ANR	1050988	Symbol	* collectors		1049885						
ANR	1050989	Symbol	foundLocalAd		1049885						
ANR	1050990	Symbol	my_name		1049885						
ANR	1050991	Symbol	ads . Next		1049885						
ANR	1050992	Symbol	m_daemon_ad_ptr		1049885						
ANR	1050993	Symbol	DT_LEASE_MANAGER		1049885						
ANR	1050994	Symbol	_full_hostname		1049885						
ANR	1050995	Symbol	param		1049885						
ANR	1050996	Symbol	get_local_fqdn ( ) . Value		1049885						
ANR	1050997	Symbol	buf . Value		1049885						
ANR	1050998	Symbol	strnewp		1049885						
ANR	1050999	Symbol	addr		1049885						
ANR	1051000	Symbol	adtype		1049885						
ANR	1051001	Symbol	_subsys		1049885						
ANR	1051002	Symbol	D_HOSTNAME		1049885						
ANR	1051003	Symbol	addr . to_ip_string		1049885						
ANR	1051004	Symbol	nameHasPort		1049885						
ANR	1051005	Symbol	false		1049885						
ANR	1051006	Symbol	D_ALWAYS		1049885						
ANR	1051007	Symbol	_type		1049885						
ANR	1051008	Symbol	get_daemon_name		1049885						
ANR	1051009	Symbol	DT_HAD		1049885						
ANR	1051010	Symbol	ATTR_PLATFORM		1049885						
ANR	1051011	Symbol	get_host_part		1049885						
ANR	1051012	Symbol	err_msg . Value		1049885						
ANR	1051013	Symbol	ATTR_MACHINE		1049885						
ANR	1051014	Symbol	getInfoFromAd		1049885						
ANR	1051015	Symbol	buf		1049885						
ANR	1051016	Symbol	err_msg		1049885						
ANR	1051017	Symbol	query_collector		1049885						
ANR	1051018	Symbol	specified_host		1049885						
ANR	1051019	Symbol	generate_sinful		1049885						
ANR	1051020	Symbol	errstack . getFullText		1049885						
ANR	1051021	Symbol	getPortFromAddr		1049885						
ANR	1051022	Function	Daemon :: getCmInfo	1300:0:34505:37128							
ANR	1051023	FunctionDef	Daemon :: getCmInfo (const char * subsys)		1051022	0					
ANR	1051024	CompoundStatement		1302:0:34550:37128	1051022	0					
ANR	1051025	IdentifierDeclStatement	MyString buf ;	1303:1:34553:34565	1051022	0	True				
ANR	1051026	IdentifierDecl	buf		1051022	0					
ANR	1051027	IdentifierDeclType	MyString		1051022	0					
ANR	1051028	Identifier	buf		1051022	1					
ANR	1051029	IdentifierDeclStatement	char * host = NULL ;	1304:1:34568:34585	1051022	1	True				
ANR	1051030	IdentifierDecl	* host = NULL		1051022	0					
ANR	1051031	IdentifierDeclType	char *		1051022	0					
ANR	1051032	Identifier	host		1051022	1					
ANR	1051033	AssignmentExpression	* host = NULL		1051022	2		=			
ANR	1051034	Identifier	NULL		1051022	0					
ANR	1051035	Identifier	NULL		1051022	1					
ANR	1051036	ExpressionStatement	setSubsystem ( subsys )	1306:1:34589:34611	1051022	2	True				
ANR	1051037	CallExpression	setSubsystem ( subsys )		1051022	0					
ANR	1051038	Callee	setSubsystem		1051022	0					
ANR	1051039	Identifier	setSubsystem		1051022	0					
ANR	1051040	ArgumentList	subsys		1051022	1					
ANR	1051041	Argument	subsys		1051022	0					
ANR	1051042	Identifier	subsys		1051022	0					
ANR	1051043	IfStatement	if ( _addr && is_valid_sinful ( _addr ) )		1051022	3					
ANR	1051044	Condition	_addr && is_valid_sinful ( _addr )	1308:5:34619:34649	1051022	0	True				
ANR	1051045	AndExpression	_addr && is_valid_sinful ( _addr )		1051022	0		&&			
ANR	1051046	Identifier	_addr		1051022	0					
ANR	1051047	CallExpression	is_valid_sinful ( _addr )		1051022	1					
ANR	1051048	Callee	is_valid_sinful		1051022	0					
ANR	1051049	Identifier	is_valid_sinful		1051022	0					
ANR	1051050	ArgumentList	_addr		1051022	1					
ANR	1051051	Argument	_addr		1051022	0					
ANR	1051052	Identifier	_addr		1051022	0					
ANR	1051053	CompoundStatement		7:39:102:102	1051022	1					
ANR	1051054	ExpressionStatement	_port = string_to_port ( _addr )	1310:2:34717:34748	1051022	0	True				
ANR	1051055	AssignmentExpression	_port = string_to_port ( _addr )		1051022	0		=			
ANR	1051056	Identifier	_port		1051022	0					
ANR	1051057	CallExpression	string_to_port ( _addr )		1051022	1					
ANR	1051058	Callee	string_to_port		1051022	0					
ANR	1051059	Identifier	string_to_port		1051022	0					
ANR	1051060	ArgumentList	_addr		1051022	1					
ANR	1051061	Argument	_addr		1051022	0					
ANR	1051062	Identifier	_addr		1051022	0					
ANR	1051063	IfStatement	if ( _port > 0 )		1051022	1					
ANR	1051064	Condition	_port > 0	1311:6:34756:34764	1051022	0	True				
ANR	1051065	RelationalExpression	_port > 0		1051022	0		>			
ANR	1051066	Identifier	_port		1051022	0					
ANR	1051067	PrimaryExpression	0		1051022	1					
ANR	1051068	CompoundStatement		10:18:217:217	1051022	1					
ANR	1051069	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Already have address, no info to locate\\n"" )"	1312:3:34773:34839	1051022	0	True				
ANR	1051070	CallExpression	"dprintf ( D_HOSTNAME , ""Already have address, no info to locate\\n"" )"		1051022	0					
ANR	1051071	Callee	dprintf		1051022	0					
ANR	1051072	Identifier	dprintf		1051022	0					
ANR	1051073	ArgumentList	D_HOSTNAME		1051022	1					
ANR	1051074	Argument	D_HOSTNAME		1051022	0					
ANR	1051075	Identifier	D_HOSTNAME		1051022	0					
ANR	1051076	Argument	"""Already have address, no info to locate\\n"""		1051022	1					
ANR	1051077	PrimaryExpression	"""Already have address, no info to locate\\n"""		1051022	0					
ANR	1051078	ExpressionStatement	_is_local = false	1313:3:34844:34861	1051022	1	True				
ANR	1051079	AssignmentExpression	_is_local = false		1051022	0		=			
ANR	1051080	Identifier	_is_local		1051022	0					
ANR	1051081	Identifier	false		1051022	1					
ANR	1051082	ReturnStatement	return true ;	1314:3:34866:34877	1051022	2	True				
ANR	1051083	Identifier	true		1051022	0					
ANR	1051084	ExpressionStatement	_is_local = true	1323:1:35161:35177	1051022	4	True				
ANR	1051085	AssignmentExpression	_is_local = true		1051022	0		=			
ANR	1051086	Identifier	_is_local		1051022	0					
ANR	1051087	Identifier	true		1051022	1					
ANR	1051088	IfStatement	if ( _name && ! _pool )		1051022	5					
ANR	1051089	Condition	_name && ! _pool	1327:5:35312:35327	1051022	0	True				
ANR	1051090	AndExpression	_name && ! _pool		1051022	0		&&			
ANR	1051091	Identifier	_name		1051022	0					
ANR	1051092	UnaryOperationExpression	! _pool		1051022	1					
ANR	1051093	UnaryOperator	!		1051022	0					
ANR	1051094	Identifier	_pool		1051022	1					
ANR	1051095	CompoundStatement		26:24:780:780	1051022	1					
ANR	1051096	ExpressionStatement	New_pool ( strnewp ( _name ) )	1328:2:35335:35361	1051022	0	True				
ANR	1051097	CallExpression	New_pool ( strnewp ( _name ) )		1051022	0					
ANR	1051098	Callee	New_pool		1051022	0					
ANR	1051099	Identifier	New_pool		1051022	0					
ANR	1051100	ArgumentList	strnewp ( _name )		1051022	1					
ANR	1051101	Argument	strnewp ( _name )		1051022	0					
ANR	1051102	CallExpression	strnewp ( _name )		1051022	0					
ANR	1051103	Callee	strnewp		1051022	0					
ANR	1051104	Identifier	strnewp		1051022	0					
ANR	1051105	ArgumentList	_name		1051022	1					
ANR	1051106	Argument	_name		1051022	0					
ANR	1051107	Identifier	_name		1051022	0					
ANR	1051108	ElseStatement	else		1051022	0					
ANR	1051109	IfStatement	if ( ! _name && _pool )		1051022	0					
ANR	1051110	Condition	! _name && _pool	1329:13:35376:35391	1051022	0	True				
ANR	1051111	AndExpression	! _name && _pool		1051022	0		&&			
ANR	1051112	UnaryOperationExpression	! _name		1051022	0					
ANR	1051113	UnaryOperator	!		1051022	0					
ANR	1051114	Identifier	_name		1051022	1					
ANR	1051115	Identifier	_pool		1051022	1					
ANR	1051116	CompoundStatement		28:32:844:844	1051022	1					
ANR	1051117	ExpressionStatement	New_name ( strnewp ( _pool ) )	1330:2:35399:35425	1051022	0	True				
ANR	1051118	CallExpression	New_name ( strnewp ( _pool ) )		1051022	0					
ANR	1051119	Callee	New_name		1051022	0					
ANR	1051120	Identifier	New_name		1051022	0					
ANR	1051121	ArgumentList	strnewp ( _pool )		1051022	1					
ANR	1051122	Argument	strnewp ( _pool )		1051022	0					
ANR	1051123	CallExpression	strnewp ( _pool )		1051022	0					
ANR	1051124	Callee	strnewp		1051022	0					
ANR	1051125	Identifier	strnewp		1051022	0					
ANR	1051126	ArgumentList	_pool		1051022	1					
ANR	1051127	Argument	_pool		1051022	0					
ANR	1051128	Identifier	_pool		1051022	0					
ANR	1051129	ElseStatement	else		1051022	0					
ANR	1051130	IfStatement	if ( _name && _pool )		1051022	0					
ANR	1051131	Condition	_name && _pool	1331:13:35440:35453	1051022	0	True				
ANR	1051132	AndExpression	_name && _pool		1051022	0		&&			
ANR	1051133	Identifier	_name		1051022	0					
ANR	1051134	Identifier	_pool		1051022	1					
ANR	1051135	CompoundStatement		30:30:906:906	1051022	1					
ANR	1051136	IfStatement	"if ( strcmp ( _name , _pool ) )"		1051022	0					
ANR	1051137	Condition	"strcmp ( _name , _pool )"	1332:6:35465:35484	1051022	0	True				
ANR	1051138	CallExpression	"strcmp ( _name , _pool )"		1051022	0					
ANR	1051139	Callee	strcmp		1051022	0					
ANR	1051140	Identifier	strcmp		1051022	0					
ANR	1051141	ArgumentList	_name		1051022	1					
ANR	1051142	Argument	_name		1051022	0					
ANR	1051143	Identifier	_name		1051022	0					
ANR	1051144	Argument	_pool		1051022	1					
ANR	1051145	Identifier	_pool		1051022	0					
ANR	1051146	CompoundStatement		31:29:937:937	1051022	1					
ANR	1051147	ExpressionStatement	"EXCEPT ( ""Daemon: pool (%s) and name (%s) conflict for %s"" , _pool , _name , subsys )"	1334:3:35532:35618	1051022	0	True				
ANR	1051148	CallExpression	"EXCEPT ( ""Daemon: pool (%s) and name (%s) conflict for %s"" , _pool , _name , subsys )"		1051022	0					
ANR	1051149	Callee	EXCEPT		1051022	0					
ANR	1051150	Identifier	EXCEPT		1051022	0					
ANR	1051151	ArgumentList	"""Daemon: pool (%s) and name (%s) conflict for %s"""		1051022	1					
ANR	1051152	Argument	"""Daemon: pool (%s) and name (%s) conflict for %s"""		1051022	0					
ANR	1051153	PrimaryExpression	"""Daemon: pool (%s) and name (%s) conflict for %s"""		1051022	0					
ANR	1051154	Argument	_pool		1051022	1					
ANR	1051155	Identifier	_pool		1051022	0					
ANR	1051156	Argument	_name		1051022	2					
ANR	1051157	Identifier	_name		1051022	0					
ANR	1051158	Argument	subsys		1051022	3					
ANR	1051159	Identifier	subsys		1051022	0					
ANR	1051160	IfStatement	if ( _name && * _name )		1051022	6					
ANR	1051161	Condition	_name && * _name	1340:5:35686:35700	1051022	0	True				
ANR	1051162	AndExpression	_name && * _name		1051022	0		&&			
ANR	1051163	Identifier	_name		1051022	0					
ANR	1051164	UnaryOperationExpression	* _name		1051022	1					
ANR	1051165	UnaryOperator	*		1051022	0					
ANR	1051166	Identifier	_name		1051022	1					
ANR	1051167	CompoundStatement		39:23:1153:1153	1051022	1					
ANR	1051168	ExpressionStatement	host = strdup ( _name )	1342:2:35749:35771	1051022	0	True				
ANR	1051169	AssignmentExpression	host = strdup ( _name )		1051022	0		=			
ANR	1051170	Identifier	host		1051022	0					
ANR	1051171	CallExpression	strdup ( _name )		1051022	1					
ANR	1051172	Callee	strdup		1051022	0					
ANR	1051173	Identifier	strdup		1051022	0					
ANR	1051174	ArgumentList	_name		1051022	1					
ANR	1051175	Argument	_name		1051022	0					
ANR	1051176	Identifier	_name		1051022	0					
ANR	1051177	ExpressionStatement	_is_local = false	1343:2:35775:35792	1051022	1	True				
ANR	1051178	AssignmentExpression	_is_local = false		1051022	0		=			
ANR	1051179	Identifier	_is_local		1051022	0					
ANR	1051180	Identifier	false		1051022	1					
ANR	1051181	IfStatement	if ( ! host || ! host [ 0 ] )		1051022	7					
ANR	1051182	Condition	! host || ! host [ 0 ]	1347:5:35804:35822	1051022	0	True				
ANR	1051183	OrExpression	! host || ! host [ 0 ]		1051022	0		||			
ANR	1051184	UnaryOperationExpression	! host		1051022	0					
ANR	1051185	UnaryOperator	!		1051022	0					
ANR	1051186	Identifier	host		1051022	1					
ANR	1051187	UnaryOperationExpression	! host [ 0 ]		1051022	1					
ANR	1051188	UnaryOperator	!		1051022	0					
ANR	1051189	ArrayIndexing	host [ 0 ]		1051022	1					
ANR	1051190	Identifier	host		1051022	0					
ANR	1051191	PrimaryExpression	0		1051022	1					
ANR	1051192	CompoundStatement		51:2:1361:1408	1051022	1					
ANR	1051193	ExpressionStatement	free ( host )	1348:2:35830:35842	1051022	0	True				
ANR	1051194	CallExpression	free ( host )		1051022	0					
ANR	1051195	Callee	free		1051022	0					
ANR	1051196	Identifier	free		1051022	0					
ANR	1051197	ArgumentList	host		1051022	1					
ANR	1051198	Argument	host		1051022	0					
ANR	1051199	Identifier	host		1051022	0					
ANR	1051200	ExpressionStatement	host = NULL	1349:2:35846:35857	1051022	1	True				
ANR	1051201	AssignmentExpression	host = NULL		1051022	0		=			
ANR	1051202	Identifier	host		1051022	0					
ANR	1051203	Identifier	NULL		1051022	1					
ANR	1051204	IdentifierDeclStatement	char * hostnames = getCmHostFromConfig ( subsys ) ;	1352:2:35912:35959	1051022	2	True				
ANR	1051205	IdentifierDecl	* hostnames = getCmHostFromConfig ( subsys )		1051022	0					
ANR	1051206	IdentifierDeclType	char *		1051022	0					
ANR	1051207	Identifier	hostnames		1051022	1					
ANR	1051208	AssignmentExpression	* hostnames = getCmHostFromConfig ( subsys )		1051022	2		=			
ANR	1051209	Identifier	hostnames		1051022	0					
ANR	1051210	CallExpression	getCmHostFromConfig ( subsys )		1051022	1					
ANR	1051211	Callee	getCmHostFromConfig		1051022	0					
ANR	1051212	Identifier	getCmHostFromConfig		1051022	0					
ANR	1051213	ArgumentList	subsys		1051022	1					
ANR	1051214	Argument	subsys		1051022	0					
ANR	1051215	Identifier	subsys		1051022	0					
ANR	1051216	IfStatement	if ( ! hostnames )		1051022	3					
ANR	1051217	Condition	! hostnames	1353:5:35966:35975	1051022	0	True				
ANR	1051218	UnaryOperationExpression	! hostnames		1051022	0					
ANR	1051219	UnaryOperator	!		1051022	0					
ANR	1051220	Identifier	hostnames		1051022	1					
ANR	1051221	CompoundStatement		52:17:1427:1427	1051022	1					
ANR	1051222	ExpressionStatement	"buf . sprintf ( ""%s address or hostname not specified in config file"" , subsys )"	1354:3:35983:36064	1051022	0	True				
ANR	1051223	CallExpression	"buf . sprintf ( ""%s address or hostname not specified in config file"" , subsys )"		1051022	0					
ANR	1051224	Callee	buf . sprintf		1051022	0					
ANR	1051225	MemberAccess	buf . sprintf		1051022	0					
ANR	1051226	Identifier	buf		1051022	0					
ANR	1051227	Identifier	sprintf		1051022	1					
ANR	1051228	ArgumentList	"""%s address or hostname not specified in config file"""		1051022	1					
ANR	1051229	Argument	"""%s address or hostname not specified in config file"""		1051022	0					
ANR	1051230	PrimaryExpression	"""%s address or hostname not specified in config file"""		1051022	0					
ANR	1051231	Argument	subsys		1051022	1					
ANR	1051232	Identifier	subsys		1051022	0					
ANR	1051233	ExpressionStatement	"newError ( CA_LOCATE_FAILED , buf . Value ( ) )"	1356:3:36070:36111	1051022	1	True				
ANR	1051234	CallExpression	"newError ( CA_LOCATE_FAILED , buf . Value ( ) )"		1051022	0					
ANR	1051235	Callee	newError		1051022	0					
ANR	1051236	Identifier	newError		1051022	0					
ANR	1051237	ArgumentList	CA_LOCATE_FAILED		1051022	1					
ANR	1051238	Argument	CA_LOCATE_FAILED		1051022	0					
ANR	1051239	Identifier	CA_LOCATE_FAILED		1051022	0					
ANR	1051240	Argument	buf . Value ( )		1051022	1					
ANR	1051241	CallExpression	buf . Value ( )		1051022	0					
ANR	1051242	Callee	buf . Value		1051022	0					
ANR	1051243	MemberAccess	buf . Value		1051022	0					
ANR	1051244	Identifier	buf		1051022	0					
ANR	1051245	Identifier	Value		1051022	1					
ANR	1051246	ArgumentList			1051022	1					
ANR	1051247	ExpressionStatement	_is_configured = false	1357:3:36116:36138	1051022	2	True				
ANR	1051248	AssignmentExpression	_is_configured = false		1051022	0		=			
ANR	1051249	Identifier	_is_configured		1051022	0					
ANR	1051250	Identifier	false		1051022	1					
ANR	1051251	ReturnStatement	return false ;	1358:3:36143:36155	1051022	3	True				
ANR	1051252	Identifier	false		1051022	0					
ANR	1051253	ExpressionStatement	daemon_list . initializeFromString ( hostnames )	1361:2:36164:36207	1051022	4	True				
ANR	1051254	CallExpression	daemon_list . initializeFromString ( hostnames )		1051022	0					
ANR	1051255	Callee	daemon_list . initializeFromString		1051022	0					
ANR	1051256	MemberAccess	daemon_list . initializeFromString		1051022	0					
ANR	1051257	Identifier	daemon_list		1051022	0					
ANR	1051258	Identifier	initializeFromString		1051022	1					
ANR	1051259	ArgumentList	hostnames		1051022	1					
ANR	1051260	Argument	hostnames		1051022	0					
ANR	1051261	Identifier	hostnames		1051022	0					
ANR	1051262	ExpressionStatement	daemon_list . rewind ( )	1362:2:36211:36231	1051022	5	True				
ANR	1051263	CallExpression	daemon_list . rewind ( )		1051022	0					
ANR	1051264	Callee	daemon_list . rewind		1051022	0					
ANR	1051265	MemberAccess	daemon_list . rewind		1051022	0					
ANR	1051266	Identifier	daemon_list		1051022	0					
ANR	1051267	Identifier	rewind		1051022	1					
ANR	1051268	ArgumentList			1051022	1					
ANR	1051269	ExpressionStatement	host = strdup ( daemon_list . next ( ) )	1363:2:36235:36268	1051022	6	True				
ANR	1051270	AssignmentExpression	host = strdup ( daemon_list . next ( ) )		1051022	0		=			
ANR	1051271	Identifier	host		1051022	0					
ANR	1051272	CallExpression	strdup ( daemon_list . next ( ) )		1051022	1					
ANR	1051273	Callee	strdup		1051022	0					
ANR	1051274	Identifier	strdup		1051022	0					
ANR	1051275	ArgumentList	daemon_list . next ( )		1051022	1					
ANR	1051276	Argument	daemon_list . next ( )		1051022	0					
ANR	1051277	CallExpression	daemon_list . next ( )		1051022	0					
ANR	1051278	Callee	daemon_list . next		1051022	0					
ANR	1051279	MemberAccess	daemon_list . next		1051022	0					
ANR	1051280	Identifier	daemon_list		1051022	0					
ANR	1051281	Identifier	next		1051022	1					
ANR	1051282	ArgumentList			1051022	1					
ANR	1051283	ExpressionStatement	free ( hostnames )	1364:2:36272:36289	1051022	7	True				
ANR	1051284	CallExpression	free ( hostnames )		1051022	0					
ANR	1051285	Callee	free		1051022	0					
ANR	1051286	Identifier	free		1051022	0					
ANR	1051287	ArgumentList	hostnames		1051022	1					
ANR	1051288	Argument	hostnames		1051022	0					
ANR	1051289	Identifier	hostnames		1051022	0					
ANR	1051290	IfStatement	if ( ! host || ! host [ 0 ] )		1051022	8					
ANR	1051291	Condition	! host || ! host [ 0 ]	1367:5:36300:36317	1051022	0	True				
ANR	1051292	OrExpression	! host || ! host [ 0 ]		1051022	0		||			
ANR	1051293	UnaryOperationExpression	! host		1051022	0					
ANR	1051294	UnaryOperator	!		1051022	0					
ANR	1051295	Identifier	host		1051022	1					
ANR	1051296	UnaryOperationExpression	! host [ 0 ]		1051022	1					
ANR	1051297	UnaryOperator	!		1051022	0					
ANR	1051298	ArrayIndexing	host [ 0 ]		1051022	1					
ANR	1051299	Identifier	host		1051022	0					
ANR	1051300	PrimaryExpression	0		1051022	1					
ANR	1051301	CompoundStatement		66:25:1769:1769	1051022	1					
ANR	1051302	IfStatement	if ( readAddressFile ( subsys ) )		1051022	0					
ANR	1051303	Condition	readAddressFile ( subsys )	1369:6:36390:36412	1051022	0	True				
ANR	1051304	CallExpression	readAddressFile ( subsys )		1051022	0					
ANR	1051305	Callee	readAddressFile		1051022	0					
ANR	1051306	Identifier	readAddressFile		1051022	0					
ANR	1051307	ArgumentList	subsys		1051022	1					
ANR	1051308	Argument	subsys		1051022	0					
ANR	1051309	Identifier	subsys		1051022	0					
ANR	1051310	CompoundStatement		68:32:1865:1865	1051022	1					
ANR	1051311	ExpressionStatement	New_name ( strnewp ( get_local_fqdn ( ) . Value ( ) ) )	1375:3:36687:36732	1051022	0	True				
ANR	1051312	CallExpression	New_name ( strnewp ( get_local_fqdn ( ) . Value ( ) ) )		1051022	0					
ANR	1051313	Callee	New_name		1051022	0					
ANR	1051314	Identifier	New_name		1051022	0					
ANR	1051315	ArgumentList	strnewp ( get_local_fqdn ( ) . Value ( ) )		1051022	1					
ANR	1051316	Argument	strnewp ( get_local_fqdn ( ) . Value ( ) )		1051022	0					
ANR	1051317	CallExpression	strnewp ( get_local_fqdn ( ) . Value ( ) )		1051022	0					
ANR	1051318	Callee	strnewp		1051022	0					
ANR	1051319	Identifier	strnewp		1051022	0					
ANR	1051320	ArgumentList	get_local_fqdn ( ) . Value ( )		1051022	1					
ANR	1051321	Argument	get_local_fqdn ( ) . Value ( )		1051022	0					
ANR	1051322	CallExpression	get_local_fqdn ( ) . Value ( )		1051022	0					
ANR	1051323	Callee	get_local_fqdn ( ) . Value		1051022	0					
ANR	1051324	MemberAccess	get_local_fqdn ( ) . Value		1051022	0					
ANR	1051325	CallExpression	get_local_fqdn ( )		1051022	0					
ANR	1051326	Callee	get_local_fqdn		1051022	0					
ANR	1051327	Identifier	get_local_fqdn		1051022	0					
ANR	1051328	ArgumentList			1051022	1					
ANR	1051329	Identifier	Value		1051022	1					
ANR	1051330	ArgumentList			1051022	1					
ANR	1051331	ExpressionStatement	New_full_hostname ( strnewp ( get_local_fqdn ( ) . Value ( ) ) )	1376:3:36737:36791	1051022	1	True				
ANR	1051332	CallExpression	New_full_hostname ( strnewp ( get_local_fqdn ( ) . Value ( ) ) )		1051022	0					
ANR	1051333	Callee	New_full_hostname		1051022	0					
ANR	1051334	Identifier	New_full_hostname		1051022	0					
ANR	1051335	ArgumentList	strnewp ( get_local_fqdn ( ) . Value ( ) )		1051022	1					
ANR	1051336	Argument	strnewp ( get_local_fqdn ( ) . Value ( ) )		1051022	0					
ANR	1051337	CallExpression	strnewp ( get_local_fqdn ( ) . Value ( ) )		1051022	0					
ANR	1051338	Callee	strnewp		1051022	0					
ANR	1051339	Identifier	strnewp		1051022	0					
ANR	1051340	ArgumentList	get_local_fqdn ( ) . Value ( )		1051022	1					
ANR	1051341	Argument	get_local_fqdn ( ) . Value ( )		1051022	0					
ANR	1051342	CallExpression	get_local_fqdn ( ) . Value ( )		1051022	0					
ANR	1051343	Callee	get_local_fqdn ( ) . Value		1051022	0					
ANR	1051344	MemberAccess	get_local_fqdn ( ) . Value		1051022	0					
ANR	1051345	CallExpression	get_local_fqdn ( )		1051022	0					
ANR	1051346	Callee	get_local_fqdn		1051022	0					
ANR	1051347	Identifier	get_local_fqdn		1051022	0					
ANR	1051348	ArgumentList			1051022	1					
ANR	1051349	Identifier	Value		1051022	1					
ANR	1051350	ArgumentList			1051022	1					
ANR	1051351	ExpressionStatement	free ( host )	1377:3:36796:36808	1051022	2	True				
ANR	1051352	CallExpression	free ( host )		1051022	0					
ANR	1051353	Callee	free		1051022	0					
ANR	1051354	Identifier	free		1051022	0					
ANR	1051355	ArgumentList	host		1051022	1					
ANR	1051356	Argument	host		1051022	0					
ANR	1051357	Identifier	host		1051022	0					
ANR	1051358	ReturnStatement	return true ;	1378:3:36813:36824	1051022	3	True				
ANR	1051359	Identifier	true		1051022	0					
ANR	1051360	IfStatement	if ( ! host || ! host [ 0 ] )		1051022	9					
ANR	1051361	Condition	! host || ! host [ 0 ]	1382:5:36839:36856	1051022	0	True				
ANR	1051362	OrExpression	! host || ! host [ 0 ]		1051022	0		||			
ANR	1051363	UnaryOperationExpression	! host		1051022	0					
ANR	1051364	UnaryOperator	!		1051022	0					
ANR	1051365	Identifier	host		1051022	1					
ANR	1051366	UnaryOperationExpression	! host [ 0 ]		1051022	1					
ANR	1051367	UnaryOperator	!		1051022	0					
ANR	1051368	ArrayIndexing	host [ 0 ]		1051022	1					
ANR	1051369	Identifier	host		1051022	0					
ANR	1051370	PrimaryExpression	0		1051022	1					
ANR	1051371	CompoundStatement		81:25:2308:2308	1051022	1					
ANR	1051372	ExpressionStatement	"buf . sprintf ( ""%s address or hostname not specified in config file"" , subsys )"	1383:2:36863:36943	1051022	0	True				
ANR	1051373	CallExpression	"buf . sprintf ( ""%s address or hostname not specified in config file"" , subsys )"		1051022	0					
ANR	1051374	Callee	buf . sprintf		1051022	0					
ANR	1051375	MemberAccess	buf . sprintf		1051022	0					
ANR	1051376	Identifier	buf		1051022	0					
ANR	1051377	Identifier	sprintf		1051022	1					
ANR	1051378	ArgumentList	"""%s address or hostname not specified in config file"""		1051022	1					
ANR	1051379	Argument	"""%s address or hostname not specified in config file"""		1051022	0					
ANR	1051380	PrimaryExpression	"""%s address or hostname not specified in config file"""		1051022	0					
ANR	1051381	Argument	subsys		1051022	1					
ANR	1051382	Identifier	subsys		1051022	0					
ANR	1051383	ExpressionStatement	"newError ( CA_LOCATE_FAILED , buf . Value ( ) )"	1385:2:36948:36989	1051022	1	True				
ANR	1051384	CallExpression	"newError ( CA_LOCATE_FAILED , buf . Value ( ) )"		1051022	0					
ANR	1051385	Callee	newError		1051022	0					
ANR	1051386	Identifier	newError		1051022	0					
ANR	1051387	ArgumentList	CA_LOCATE_FAILED		1051022	1					
ANR	1051388	Argument	CA_LOCATE_FAILED		1051022	0					
ANR	1051389	Identifier	CA_LOCATE_FAILED		1051022	0					
ANR	1051390	Argument	buf . Value ( )		1051022	1					
ANR	1051391	CallExpression	buf . Value ( )		1051022	0					
ANR	1051392	Callee	buf . Value		1051022	0					
ANR	1051393	MemberAccess	buf . Value		1051022	0					
ANR	1051394	Identifier	buf		1051022	0					
ANR	1051395	Identifier	Value		1051022	1					
ANR	1051396	ArgumentList			1051022	1					
ANR	1051397	ExpressionStatement	_is_configured = false	1386:2:36993:37015	1051022	2	True				
ANR	1051398	AssignmentExpression	_is_configured = false		1051022	0		=			
ANR	1051399	Identifier	_is_configured		1051022	0					
ANR	1051400	Identifier	false		1051022	1					
ANR	1051401	IfStatement	if ( host )		1051022	3					
ANR	1051402	Condition	host	1387:6:37023:37026	1051022	0	True				
ANR	1051403	Identifier	host		1051022	0					
ANR	1051404	ExpressionStatement	free ( host )	1387:13:37030:37042	1051022	1	True				
ANR	1051405	CallExpression	free ( host )		1051022	0					
ANR	1051406	Callee	free		1051022	0					
ANR	1051407	Identifier	free		1051022	0					
ANR	1051408	ArgumentList	host		1051022	1					
ANR	1051409	Argument	host		1051022	0					
ANR	1051410	Identifier	host		1051022	0					
ANR	1051411	ReturnStatement	return false ;	1389:2:37047:37059	1051022	4	True				
ANR	1051412	Identifier	false		1051022	0					
ANR	1051413	IdentifierDeclStatement	bool ret = findCmDaemon ( host ) ;	1392:1:37067:37098	1051022	10	True				
ANR	1051414	IdentifierDecl	ret = findCmDaemon ( host )		1051022	0					
ANR	1051415	IdentifierDeclType	bool		1051022	0					
ANR	1051416	Identifier	ret		1051022	1					
ANR	1051417	AssignmentExpression	ret = findCmDaemon ( host )		1051022	2		=			
ANR	1051418	Identifier	ret		1051022	0					
ANR	1051419	CallExpression	findCmDaemon ( host )		1051022	1					
ANR	1051420	Callee	findCmDaemon		1051022	0					
ANR	1051421	Identifier	findCmDaemon		1051022	0					
ANR	1051422	ArgumentList	host		1051022	1					
ANR	1051423	Argument	host		1051022	0					
ANR	1051424	Identifier	host		1051022	0					
ANR	1051425	ExpressionStatement	free ( host )	1393:1:37101:37113	1051022	11	True				
ANR	1051426	CallExpression	free ( host )		1051022	0					
ANR	1051427	Callee	free		1051022	0					
ANR	1051428	Identifier	free		1051022	0					
ANR	1051429	ArgumentList	host		1051022	1					
ANR	1051430	Argument	host		1051022	0					
ANR	1051431	Identifier	host		1051022	0					
ANR	1051432	ReturnStatement	return ret ;	1394:1:37116:37126	1051022	12	True				
ANR	1051433	Identifier	ret		1051022	0					
ANR	1051434	ReturnType	bool		1051022	1					
ANR	1051435	Identifier	Daemon :: getCmInfo		1051022	2					
ANR	1051436	ParameterList	const char * subsys		1051022	3					
ANR	1051437	Parameter	const char * subsys	1301:19:34529:34546	1051022	0	True				
ANR	1051438	ParameterType	const char *		1051022	0					
ANR	1051439	Identifier	subsys		1051022	1					
ANR	1051440	CFGEntryNode	ENTRY		1051022		True				
ANR	1051441	CFGExitNode	EXIT		1051022		True				
ANR	1051442	Symbol	* host		1051022						
ANR	1051443	Symbol	CA_LOCATE_FAILED		1051022						
ANR	1051444	Symbol	findCmDaemon		1051022						
ANR	1051445	Symbol	_name		1051022						
ANR	1051446	Symbol	daemon_list		1051022						
ANR	1051447	Symbol	is_valid_sinful		1051022						
ANR	1051448	Symbol	get_local_fqdn		1051022						
ANR	1051449	Symbol	_port		1051022						
ANR	1051450	Symbol	subsys		1051022						
ANR	1051451	Symbol	readAddressFile		1051022						
ANR	1051452	Symbol	_pool		1051022						
ANR	1051453	Symbol	get_local_fqdn ( ) . Value		1051022						
ANR	1051454	Symbol	host		1051022						
ANR	1051455	Symbol	buf . Value		1051022						
ANR	1051456	Symbol	strnewp		1051022						
ANR	1051457	Symbol	_is_local		1051022						
ANR	1051458	Symbol	D_HOSTNAME		1051022						
ANR	1051459	Symbol	strcmp		1051022						
ANR	1051460	Symbol	ret		1051022						
ANR	1051461	Symbol	_is_configured		1051022						
ANR	1051462	Symbol	NULL		1051022						
ANR	1051463	Symbol	false		1051022						
ANR	1051464	Symbol	hostnames		1051022						
ANR	1051465	Symbol	string_to_port		1051022						
ANR	1051466	Symbol	buf		1051022						
ANR	1051467	Symbol	_addr		1051022						
ANR	1051468	Symbol	true		1051022						
ANR	1051469	Symbol	* _name		1051022						
ANR	1051470	Symbol	strdup		1051022						
ANR	1051471	Symbol	getCmHostFromConfig		1051022						
ANR	1051472	Symbol	daemon_list . next		1051022						
ANR	1051473	Function	Daemon :: findCmDaemon	1398:0:37132:40279							
ANR	1051474	FunctionDef	Daemon :: findCmDaemon (const char * cm_name)		1051473	0					
ANR	1051475	CompoundStatement		1400:0:37181:40279	1051473	0					
ANR	1051476	IdentifierDeclStatement	char * host = NULL ;	1401:1:37184:37201	1051473	0	True				
ANR	1051477	IdentifierDecl	* host = NULL		1051473	0					
ANR	1051478	IdentifierDeclType	char *		1051473	0					
ANR	1051479	Identifier	host		1051473	1					
ANR	1051480	AssignmentExpression	* host = NULL		1051473	2		=			
ANR	1051481	Identifier	NULL		1051473	0					
ANR	1051482	Identifier	NULL		1051473	1					
ANR	1051483	IdentifierDeclStatement	MyString buf ;	1402:1:37204:37216	1051473	1	True				
ANR	1051484	IdentifierDecl	buf		1051473	0					
ANR	1051485	IdentifierDeclType	MyString		1051473	0					
ANR	1051486	Identifier	buf		1051473	1					
ANR	1051487	IdentifierDeclStatement	condor_sockaddr saddr ;	1403:1:37219:37240	1051473	2	True				
ANR	1051488	IdentifierDecl	saddr		1051473	0					
ANR	1051489	IdentifierDeclType	condor_sockaddr		1051473	0					
ANR	1051490	Identifier	saddr		1051473	1					
ANR	1051491	IdentifierDeclStatement	char * tmp ;	1404:1:37243:37252	1051473	3	True				
ANR	1051492	IdentifierDecl	* tmp		1051473	0					
ANR	1051493	IdentifierDeclType	char *		1051473	0					
ANR	1051494	Identifier	tmp		1051473	1					
ANR	1051495	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Using name \\""%s\\"" to find daemon\\n"" , cm_name )"	1406:1:37256:37324	1051473	4	True				
ANR	1051496	CallExpression	"dprintf ( D_HOSTNAME , ""Using name \\""%s\\"" to find daemon\\n"" , cm_name )"		1051473	0					
ANR	1051497	Callee	dprintf		1051473	0					
ANR	1051498	Identifier	dprintf		1051473	0					
ANR	1051499	ArgumentList	D_HOSTNAME		1051473	1					
ANR	1051500	Argument	D_HOSTNAME		1051473	0					
ANR	1051501	Identifier	D_HOSTNAME		1051473	0					
ANR	1051502	Argument	"""Using name \\""%s\\"" to find daemon\\n"""		1051473	1					
ANR	1051503	PrimaryExpression	"""Using name \\""%s\\"" to find daemon\\n"""		1051473	0					
ANR	1051504	Argument	cm_name		1051473	2					
ANR	1051505	Identifier	cm_name		1051473	0					
ANR	1051506	IdentifierDeclStatement	Sinful sinful ( cm_name ) ;	1408:1:37329:37353	1051473	5	True				
ANR	1051507	IdentifierDecl	sinful ( cm_name )		1051473	0					
ANR	1051508	IdentifierDeclType	Sinful		1051473	0					
ANR	1051509	Identifier	sinful		1051473	1					
ANR	1051510	Identifier	cm_name		1051473	2					
ANR	1051511	IfStatement	if ( ! sinful . valid ( ) || ! sinful . getHost ( ) )		1051473	6					
ANR	1051512	Condition	! sinful . valid ( ) || ! sinful . getHost ( )	1410:5:37361:37396	1051473	0	True				
ANR	1051513	OrExpression	! sinful . valid ( ) || ! sinful . getHost ( )		1051473	0		||			
ANR	1051514	UnaryOperationExpression	! sinful . valid ( )		1051473	0					
ANR	1051515	UnaryOperator	!		1051473	0					
ANR	1051516	CallExpression	sinful . valid ( )		1051473	1					
ANR	1051517	Callee	sinful . valid		1051473	0					
ANR	1051518	MemberAccess	sinful . valid		1051473	0					
ANR	1051519	Identifier	sinful		1051473	0					
ANR	1051520	Identifier	valid		1051473	1					
ANR	1051521	ArgumentList			1051473	1					
ANR	1051522	UnaryOperationExpression	! sinful . getHost ( )		1051473	1					
ANR	1051523	UnaryOperator	!		1051473	0					
ANR	1051524	CallExpression	sinful . getHost ( )		1051473	1					
ANR	1051525	Callee	sinful . getHost		1051473	0					
ANR	1051526	MemberAccess	sinful . getHost		1051473	0					
ANR	1051527	Identifier	sinful		1051473	0					
ANR	1051528	Identifier	getHost		1051473	1					
ANR	1051529	ArgumentList			1051473	1					
ANR	1051530	CompoundStatement		11:44:218:218	1051473	1					
ANR	1051531	ExpressionStatement	"dprintf ( D_ALWAYS , ""Invalid address: %s\\n"" , cm_name )"	1411:2:37404:37457	1051473	0	True				
ANR	1051532	CallExpression	"dprintf ( D_ALWAYS , ""Invalid address: %s\\n"" , cm_name )"		1051473	0					
ANR	1051533	Callee	dprintf		1051473	0					
ANR	1051534	Identifier	dprintf		1051473	0					
ANR	1051535	ArgumentList	D_ALWAYS		1051473	1					
ANR	1051536	Argument	D_ALWAYS		1051473	0					
ANR	1051537	Identifier	D_ALWAYS		1051473	0					
ANR	1051538	Argument	"""Invalid address: %s\\n"""		1051473	1					
ANR	1051539	PrimaryExpression	"""Invalid address: %s\\n"""		1051473	0					
ANR	1051540	Argument	cm_name		1051473	2					
ANR	1051541	Identifier	cm_name		1051473	0					
ANR	1051542	ExpressionStatement	"buf . sprintf ( ""%s address or hostname not specified in config file"" , _subsys )"	1412:2:37461:37543	1051473	1	True				
ANR	1051543	CallExpression	"buf . sprintf ( ""%s address or hostname not specified in config file"" , _subsys )"		1051473	0					
ANR	1051544	Callee	buf . sprintf		1051473	0					
ANR	1051545	MemberAccess	buf . sprintf		1051473	0					
ANR	1051546	Identifier	buf		1051473	0					
ANR	1051547	Identifier	sprintf		1051473	1					
ANR	1051548	ArgumentList	"""%s address or hostname not specified in config file"""		1051473	1					
ANR	1051549	Argument	"""%s address or hostname not specified in config file"""		1051473	0					
ANR	1051550	PrimaryExpression	"""%s address or hostname not specified in config file"""		1051473	0					
ANR	1051551	Argument	_subsys		1051473	1					
ANR	1051552	Identifier	_subsys		1051473	0					
ANR	1051553	ExpressionStatement	"newError ( CA_LOCATE_FAILED , buf . Value ( ) )"	1414:2:37548:37589	1051473	2	True				
ANR	1051554	CallExpression	"newError ( CA_LOCATE_FAILED , buf . Value ( ) )"		1051473	0					
ANR	1051555	Callee	newError		1051473	0					
ANR	1051556	Identifier	newError		1051473	0					
ANR	1051557	ArgumentList	CA_LOCATE_FAILED		1051473	1					
ANR	1051558	Argument	CA_LOCATE_FAILED		1051473	0					
ANR	1051559	Identifier	CA_LOCATE_FAILED		1051473	0					
ANR	1051560	Argument	buf . Value ( )		1051473	1					
ANR	1051561	CallExpression	buf . Value ( )		1051473	0					
ANR	1051562	Callee	buf . Value		1051473	0					
ANR	1051563	MemberAccess	buf . Value		1051473	0					
ANR	1051564	Identifier	buf		1051473	0					
ANR	1051565	Identifier	Value		1051473	1					
ANR	1051566	ArgumentList			1051473	1					
ANR	1051567	ExpressionStatement	_is_configured = false	1415:2:37593:37615	1051473	3	True				
ANR	1051568	AssignmentExpression	_is_configured = false		1051473	0		=			
ANR	1051569	Identifier	_is_configured		1051473	0					
ANR	1051570	Identifier	false		1051473	1					
ANR	1051571	ReturnStatement	return false ;	1416:2:37619:37631	1051473	4	True				
ANR	1051572	Identifier	false		1051473	0					
ANR	1051573	ExpressionStatement	_port = sinful . getPortNum ( )	1421:1:37758:37785	1051473	7	True				
ANR	1051574	AssignmentExpression	_port = sinful . getPortNum ( )		1051473	0		=			
ANR	1051575	Identifier	_port		1051473	0					
ANR	1051576	CallExpression	sinful . getPortNum ( )		1051473	1					
ANR	1051577	Callee	sinful . getPortNum		1051473	0					
ANR	1051578	MemberAccess	sinful . getPortNum		1051473	0					
ANR	1051579	Identifier	sinful		1051473	0					
ANR	1051580	Identifier	getPortNum		1051473	1					
ANR	1051581	ArgumentList			1051473	1					
ANR	1051582	IfStatement	if ( _port < 0 )		1051473	8					
ANR	1051583	Condition	_port < 0	1422:5:37792:37800	1051473	0	True				
ANR	1051584	RelationalExpression	_port < 0		1051473	0		<			
ANR	1051585	Identifier	_port		1051473	0					
ANR	1051586	PrimaryExpression	0		1051473	1					
ANR	1051587	CompoundStatement		23:17:622:622	1051473	1					
ANR	1051588	ExpressionStatement	_port = getDefaultPort ( )	1423:2:37808:37832	1051473	0	True				
ANR	1051589	AssignmentExpression	_port = getDefaultPort ( )		1051473	0		=			
ANR	1051590	Identifier	_port		1051473	0					
ANR	1051591	CallExpression	getDefaultPort ( )		1051473	1					
ANR	1051592	Callee	getDefaultPort		1051473	0					
ANR	1051593	Identifier	getDefaultPort		1051473	0					
ANR	1051594	ArgumentList			1051473	1					
ANR	1051595	ExpressionStatement	sinful . setPort ( _port )	1424:2:37836:37859	1051473	1	True				
ANR	1051596	CallExpression	sinful . setPort ( _port )		1051473	0					
ANR	1051597	Callee	sinful . setPort		1051473	0					
ANR	1051598	MemberAccess	sinful . setPort		1051473	0					
ANR	1051599	Identifier	sinful		1051473	0					
ANR	1051600	Identifier	setPort		1051473	1					
ANR	1051601	ArgumentList	_port		1051473	1					
ANR	1051602	Argument	_port		1051473	0					
ANR	1051603	Identifier	_port		1051473	0					
ANR	1051604	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Port not specified, using default (%d)\\n"" , _port )"	1425:2:37863:37940	1051473	2	True				
ANR	1051605	CallExpression	"dprintf ( D_HOSTNAME , ""Port not specified, using default (%d)\\n"" , _port )"		1051473	0					
ANR	1051606	Callee	dprintf		1051473	0					
ANR	1051607	Identifier	dprintf		1051473	0					
ANR	1051608	ArgumentList	D_HOSTNAME		1051473	1					
ANR	1051609	Argument	D_HOSTNAME		1051473	0					
ANR	1051610	Identifier	D_HOSTNAME		1051473	0					
ANR	1051611	Argument	"""Port not specified, using default (%d)\\n"""		1051473	1					
ANR	1051612	PrimaryExpression	"""Port not specified, using default (%d)\\n"""		1051473	0					
ANR	1051613	Argument	_port		1051473	2					
ANR	1051614	Identifier	_port		1051473	0					
ANR	1051615	ElseStatement	else		1051473	0					
ANR	1051616	CompoundStatement		28:8:769:769	1051473	0					
ANR	1051617	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Port %d specified in name\\n"" , _port )"	1428:2:37955:38014	1051473	0	True				
ANR	1051618	CallExpression	"dprintf ( D_HOSTNAME , ""Port %d specified in name\\n"" , _port )"		1051473	0					
ANR	1051619	Callee	dprintf		1051473	0					
ANR	1051620	Identifier	dprintf		1051473	0					
ANR	1051621	ArgumentList	D_HOSTNAME		1051473	1					
ANR	1051622	Argument	D_HOSTNAME		1051473	0					
ANR	1051623	Identifier	D_HOSTNAME		1051473	0					
ANR	1051624	Argument	"""Port %d specified in name\\n"""		1051473	1					
ANR	1051625	PrimaryExpression	"""Port %d specified in name\\n"""		1051473	0					
ANR	1051626	Argument	_port		1051473	2					
ANR	1051627	Identifier	_port		1051473	0					
ANR	1051628	IfStatement	if ( _port == 0 && readAddressFile ( _subsys ) )		1051473	9					
ANR	1051629	Condition	_port == 0 && readAddressFile ( _subsys )	1430:5:38024:38061	1051473	0	True				
ANR	1051630	AndExpression	_port == 0 && readAddressFile ( _subsys )		1051473	0		&&			
ANR	1051631	EqualityExpression	_port == 0		1051473	0		==			
ANR	1051632	Identifier	_port		1051473	0					
ANR	1051633	PrimaryExpression	0		1051473	1					
ANR	1051634	CallExpression	readAddressFile ( _subsys )		1051473	1					
ANR	1051635	Callee	readAddressFile		1051473	0					
ANR	1051636	Identifier	readAddressFile		1051473	0					
ANR	1051637	ArgumentList	_subsys		1051473	1					
ANR	1051638	Argument	_subsys		1051473	0					
ANR	1051639	Identifier	_subsys		1051473	0					
ANR	1051640	CompoundStatement		31:46:883:883	1051473	1					
ANR	1051641	Statement	dprintf	1431:2:38069:38075	1051473	0	True				
ANR	1051642	Statement	(	1431:9:38076:38076	1051473	1	True				
ANR	1051643	Statement	D_HOSTNAME	1431:11:38078:38087	1051473	2	True				
ANR	1051644	Statement	","	1431:21:38088:38088	1051473	3	True				
ANR	1051645	Statement	"""Port 0 specified in name, """	1431:23:38090:38117	1051473	4	True				
ANR	1051646	Statement	"""IP/port found in address file\\n"""	1432:5:38124:38156	1051473	5	True				
ANR	1051647	Statement	)	1432:39:38158:38158	1051473	6	True				
ANR	1051648	ExpressionStatement		1432:40:38159:38159	1051473	7	True				
ANR	1051649	ExpressionStatement	New_name ( strnewp ( get_local_fqdn ( ) . Value ( ) ) )	1433:2:38163:38208	1051473	8	True				
ANR	1051650	CallExpression	New_name ( strnewp ( get_local_fqdn ( ) . Value ( ) ) )		1051473	0					
ANR	1051651	Callee	New_name		1051473	0					
ANR	1051652	Identifier	New_name		1051473	0					
ANR	1051653	ArgumentList	strnewp ( get_local_fqdn ( ) . Value ( ) )		1051473	1					
ANR	1051654	Argument	strnewp ( get_local_fqdn ( ) . Value ( ) )		1051473	0					
ANR	1051655	CallExpression	strnewp ( get_local_fqdn ( ) . Value ( ) )		1051473	0					
ANR	1051656	Callee	strnewp		1051473	0					
ANR	1051657	Identifier	strnewp		1051473	0					
ANR	1051658	ArgumentList	get_local_fqdn ( ) . Value ( )		1051473	1					
ANR	1051659	Argument	get_local_fqdn ( ) . Value ( )		1051473	0					
ANR	1051660	CallExpression	get_local_fqdn ( ) . Value ( )		1051473	0					
ANR	1051661	Callee	get_local_fqdn ( ) . Value		1051473	0					
ANR	1051662	MemberAccess	get_local_fqdn ( ) . Value		1051473	0					
ANR	1051663	CallExpression	get_local_fqdn ( )		1051473	0					
ANR	1051664	Callee	get_local_fqdn		1051473	0					
ANR	1051665	Identifier	get_local_fqdn		1051473	0					
ANR	1051666	ArgumentList			1051473	1					
ANR	1051667	Identifier	Value		1051473	1					
ANR	1051668	ArgumentList			1051473	1					
ANR	1051669	ExpressionStatement	New_full_hostname ( strnewp ( get_local_fqdn ( ) . Value ( ) ) )	1434:2:38212:38266	1051473	9	True				
ANR	1051670	CallExpression	New_full_hostname ( strnewp ( get_local_fqdn ( ) . Value ( ) ) )		1051473	0					
ANR	1051671	Callee	New_full_hostname		1051473	0					
ANR	1051672	Identifier	New_full_hostname		1051473	0					
ANR	1051673	ArgumentList	strnewp ( get_local_fqdn ( ) . Value ( ) )		1051473	1					
ANR	1051674	Argument	strnewp ( get_local_fqdn ( ) . Value ( ) )		1051473	0					
ANR	1051675	CallExpression	strnewp ( get_local_fqdn ( ) . Value ( ) )		1051473	0					
ANR	1051676	Callee	strnewp		1051473	0					
ANR	1051677	Identifier	strnewp		1051473	0					
ANR	1051678	ArgumentList	get_local_fqdn ( ) . Value ( )		1051473	1					
ANR	1051679	Argument	get_local_fqdn ( ) . Value ( )		1051473	0					
ANR	1051680	CallExpression	get_local_fqdn ( ) . Value ( )		1051473	0					
ANR	1051681	Callee	get_local_fqdn ( ) . Value		1051473	0					
ANR	1051682	MemberAccess	get_local_fqdn ( ) . Value		1051473	0					
ANR	1051683	CallExpression	get_local_fqdn ( )		1051473	0					
ANR	1051684	Callee	get_local_fqdn		1051473	0					
ANR	1051685	Identifier	get_local_fqdn		1051473	0					
ANR	1051686	ArgumentList			1051473	1					
ANR	1051687	Identifier	Value		1051473	1					
ANR	1051688	ArgumentList			1051473	1					
ANR	1051689	ReturnStatement	return true ;	1435:2:38270:38281	1051473	10	True				
ANR	1051690	Identifier	true		1051473	0					
ANR	1051691	IfStatement	if ( ! _name )		1051473	10					
ANR	1051692	Condition	! _name	1441:5:38475:38481	1051473	0	True				
ANR	1051693	UnaryOperationExpression	! _name		1051473	0					
ANR	1051694	UnaryOperator	!		1051473	0					
ANR	1051695	Identifier	_name		1051473	1					
ANR	1051696	CompoundStatement		42:15:1303:1303	1051473	1					
ANR	1051697	ExpressionStatement	New_name ( strnewp ( cm_name ) )	1442:2:38489:38517	1051473	0	True				
ANR	1051698	CallExpression	New_name ( strnewp ( cm_name ) )		1051473	0					
ANR	1051699	Callee	New_name		1051473	0					
ANR	1051700	Identifier	New_name		1051473	0					
ANR	1051701	ArgumentList	strnewp ( cm_name )		1051473	1					
ANR	1051702	Argument	strnewp ( cm_name )		1051473	0					
ANR	1051703	CallExpression	strnewp ( cm_name )		1051473	0					
ANR	1051704	Callee	strnewp		1051473	0					
ANR	1051705	Identifier	strnewp		1051473	0					
ANR	1051706	ArgumentList	cm_name		1051473	1					
ANR	1051707	Argument	cm_name		1051473	0					
ANR	1051708	Identifier	cm_name		1051473	0					
ANR	1051709	IfStatement	if ( sinful . getHost ( ) )		1051473	11					
ANR	1051710	Condition	sinful . getHost ( )	1451:5:38863:38878	1051473	0	True				
ANR	1051711	CallExpression	sinful . getHost ( )		1051473	0					
ANR	1051712	Callee	sinful . getHost		1051473	0					
ANR	1051713	MemberAccess	sinful . getHost		1051473	0					
ANR	1051714	Identifier	sinful		1051473	0					
ANR	1051715	Identifier	getHost		1051473	1					
ANR	1051716	ArgumentList			1051473	1					
ANR	1051717	CompoundStatement		52:24:1700:1700	1051473	1					
ANR	1051718	ExpressionStatement	host = strdup ( sinful . getHost ( ) )	1452:2:38886:38919	1051473	0	True				
ANR	1051719	AssignmentExpression	host = strdup ( sinful . getHost ( ) )		1051473	0		=			
ANR	1051720	Identifier	host		1051473	0					
ANR	1051721	CallExpression	strdup ( sinful . getHost ( ) )		1051473	1					
ANR	1051722	Callee	strdup		1051473	0					
ANR	1051723	Identifier	strdup		1051473	0					
ANR	1051724	ArgumentList	sinful . getHost ( )		1051473	1					
ANR	1051725	Argument	sinful . getHost ( )		1051473	0					
ANR	1051726	CallExpression	sinful . getHost ( )		1051473	0					
ANR	1051727	Callee	sinful . getHost		1051473	0					
ANR	1051728	MemberAccess	sinful . getHost		1051473	0					
ANR	1051729	Identifier	sinful		1051473	0					
ANR	1051730	Identifier	getHost		1051473	1					
ANR	1051731	ArgumentList			1051473	1					
ANR	1051732	IfStatement	if ( ! host )		1051473	12					
ANR	1051733	Condition	! host	1456:6:38932:38936	1051473	0	True				
ANR	1051734	UnaryOperationExpression	! host		1051473	0					
ANR	1051735	UnaryOperator	!		1051473	0					
ANR	1051736	Identifier	host		1051473	1					
ANR	1051737	CompoundStatement		57:14:1758:1758	1051473	1					
ANR	1051738	ExpressionStatement	"buf . sprintf ( ""%s address or hostname not specified in config file"" , _subsys )"	1457:2:38944:39026	1051473	0	True				
ANR	1051739	CallExpression	"buf . sprintf ( ""%s address or hostname not specified in config file"" , _subsys )"		1051473	0					
ANR	1051740	Callee	buf . sprintf		1051473	0					
ANR	1051741	MemberAccess	buf . sprintf		1051473	0					
ANR	1051742	Identifier	buf		1051473	0					
ANR	1051743	Identifier	sprintf		1051473	1					
ANR	1051744	ArgumentList	"""%s address or hostname not specified in config file"""		1051473	1					
ANR	1051745	Argument	"""%s address or hostname not specified in config file"""		1051473	0					
ANR	1051746	PrimaryExpression	"""%s address or hostname not specified in config file"""		1051473	0					
ANR	1051747	Argument	_subsys		1051473	1					
ANR	1051748	Identifier	_subsys		1051473	0					
ANR	1051749	ExpressionStatement	"newError ( CA_LOCATE_FAILED , buf . Value ( ) )"	1459:2:39031:39072	1051473	1	True				
ANR	1051750	CallExpression	"newError ( CA_LOCATE_FAILED , buf . Value ( ) )"		1051473	0					
ANR	1051751	Callee	newError		1051473	0					
ANR	1051752	Identifier	newError		1051473	0					
ANR	1051753	ArgumentList	CA_LOCATE_FAILED		1051473	1					
ANR	1051754	Argument	CA_LOCATE_FAILED		1051473	0					
ANR	1051755	Identifier	CA_LOCATE_FAILED		1051473	0					
ANR	1051756	Argument	buf . Value ( )		1051473	1					
ANR	1051757	CallExpression	buf . Value ( )		1051473	0					
ANR	1051758	Callee	buf . Value		1051473	0					
ANR	1051759	MemberAccess	buf . Value		1051473	0					
ANR	1051760	Identifier	buf		1051473	0					
ANR	1051761	Identifier	Value		1051473	1					
ANR	1051762	ArgumentList			1051473	1					
ANR	1051763	ExpressionStatement	_is_configured = false	1460:2:39076:39098	1051473	2	True				
ANR	1051764	AssignmentExpression	_is_configured = false		1051473	0		=			
ANR	1051765	Identifier	_is_configured		1051473	0					
ANR	1051766	Identifier	false		1051473	1					
ANR	1051767	ReturnStatement	return false ;	1461:2:39102:39114	1051473	3	True				
ANR	1051768	Identifier	false		1051473	0					
ANR	1051769	IfStatement	if ( saddr . from_ip_string ( host ) )		1051473	13					
ANR	1051770	Condition	saddr . from_ip_string ( host )	1465:5:39126:39151	1051473	0	True				
ANR	1051771	CallExpression	saddr . from_ip_string ( host )		1051473	0					
ANR	1051772	Callee	saddr . from_ip_string		1051473	0					
ANR	1051773	MemberAccess	saddr . from_ip_string		1051473	0					
ANR	1051774	Identifier	saddr		1051473	0					
ANR	1051775	Identifier	from_ip_string		1051473	1					
ANR	1051776	ArgumentList	host		1051473	1					
ANR	1051777	Argument	host		1051473	0					
ANR	1051778	Identifier	host		1051473	0					
ANR	1051779	CompoundStatement		66:34:1973:1973	1051473	1					
ANR	1051780	ExpressionStatement	New_addr ( strnewp ( sinful . getSinful ( ) ) )	1466:2:39159:39200	1051473	0	True				
ANR	1051781	CallExpression	New_addr ( strnewp ( sinful . getSinful ( ) ) )		1051473	0					
ANR	1051782	Callee	New_addr		1051473	0					
ANR	1051783	Identifier	New_addr		1051473	0					
ANR	1051784	ArgumentList	strnewp ( sinful . getSinful ( ) )		1051473	1					
ANR	1051785	Argument	strnewp ( sinful . getSinful ( ) )		1051473	0					
ANR	1051786	CallExpression	strnewp ( sinful . getSinful ( ) )		1051473	0					
ANR	1051787	Callee	strnewp		1051473	0					
ANR	1051788	Identifier	strnewp		1051473	0					
ANR	1051789	ArgumentList	sinful . getSinful ( )		1051473	1					
ANR	1051790	Argument	sinful . getSinful ( )		1051473	0					
ANR	1051791	CallExpression	sinful . getSinful ( )		1051473	0					
ANR	1051792	Callee	sinful . getSinful		1051473	0					
ANR	1051793	MemberAccess	sinful . getSinful		1051473	0					
ANR	1051794	Identifier	sinful		1051473	0					
ANR	1051795	Identifier	getSinful		1051473	1					
ANR	1051796	ArgumentList			1051473	1					
ANR	1051797	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Host info \\""%s\\"" is an IP address\\n"" , host )"	1467:2:39204:39270	1051473	1	True				
ANR	1051798	CallExpression	"dprintf ( D_HOSTNAME , ""Host info \\""%s\\"" is an IP address\\n"" , host )"		1051473	0					
ANR	1051799	Callee	dprintf		1051473	0					
ANR	1051800	Identifier	dprintf		1051473	0					
ANR	1051801	ArgumentList	D_HOSTNAME		1051473	1					
ANR	1051802	Argument	D_HOSTNAME		1051473	0					
ANR	1051803	Identifier	D_HOSTNAME		1051473	0					
ANR	1051804	Argument	"""Host info \\""%s\\"" is an IP address\\n"""		1051473	1					
ANR	1051805	PrimaryExpression	"""Host info \\""%s\\"" is an IP address\\n"""		1051473	0					
ANR	1051806	Argument	host		1051473	2					
ANR	1051807	Identifier	host		1051473	0					
ANR	1051808	ElseStatement	else		1051473	0					
ANR	1051809	CompoundStatement		75:2:2263:2321	1051473	0					
ANR	1051810	Statement	dprintf	1470:2:39332:39338	1051473	0	True				
ANR	1051811	Statement	(	1470:9:39339:39339	1051473	1	True				
ANR	1051812	Statement	D_HOSTNAME	1470:11:39341:39350	1051473	2	True				
ANR	1051813	Statement	","	1470:21:39351:39351	1051473	3	True				
ANR	1051814	Statement	"""Host info \\""%s\\"" is a hostname, """	1470:23:39353:39386	1051473	4	True				
ANR	1051815	Statement	"""finding IP address\\n"""	1471:5:39393:39414	1051473	5	True				
ANR	1051816	Statement	","	1471:27:39415:39415	1051473	6	True				
ANR	1051817	Statement	host	1471:29:39417:39420	1051473	7	True				
ANR	1051818	Statement	)	1471:34:39422:39422	1051473	8	True				
ANR	1051819	ExpressionStatement		1471:35:39423:39423	1051473	9	True				
ANR	1051820	IdentifierDeclStatement	MyString fqdn ;	1473:2:39428:39441	1051473	10	True				
ANR	1051821	IdentifierDecl	fqdn		1051473	0					
ANR	1051822	IdentifierDeclType	MyString		1051473	0					
ANR	1051823	Identifier	fqdn		1051473	1					
ANR	1051824	IdentifierDeclStatement	"int ret = get_fqdn_and_ip_from_hostname ( host , fqdn , saddr ) ;"	1474:2:39445:39503	1051473	11	True				
ANR	1051825	IdentifierDecl	"ret = get_fqdn_and_ip_from_hostname ( host , fqdn , saddr )"		1051473	0					
ANR	1051826	IdentifierDeclType	int		1051473	0					
ANR	1051827	Identifier	ret		1051473	1					
ANR	1051828	AssignmentExpression	"ret = get_fqdn_and_ip_from_hostname ( host , fqdn , saddr )"		1051473	2		=			
ANR	1051829	Identifier	ret		1051473	0					
ANR	1051830	CallExpression	"get_fqdn_and_ip_from_hostname ( host , fqdn , saddr )"		1051473	1					
ANR	1051831	Callee	get_fqdn_and_ip_from_hostname		1051473	0					
ANR	1051832	Identifier	get_fqdn_and_ip_from_hostname		1051473	0					
ANR	1051833	ArgumentList	host		1051473	1					
ANR	1051834	Argument	host		1051473	0					
ANR	1051835	Identifier	host		1051473	0					
ANR	1051836	Argument	fqdn		1051473	1					
ANR	1051837	Identifier	fqdn		1051473	0					
ANR	1051838	Argument	saddr		1051473	2					
ANR	1051839	Identifier	saddr		1051473	0					
ANR	1051840	IfStatement	if ( ! ret )		1051473	12					
ANR	1051841	Condition	! ret	1475:6:39511:39514	1051473	0	True				
ANR	1051842	UnaryOperationExpression	! ret		1051473	0					
ANR	1051843	UnaryOperator	!		1051473	0					
ANR	1051844	Identifier	ret		1051473	1					
ANR	1051845	CompoundStatement		76:12:2335:2335	1051473	1					
ANR	1051846	ExpressionStatement	"buf . sprintf ( ""unknown host %s"" , host )"	1477:3:39576:39614	1051473	0	True				
ANR	1051847	CallExpression	"buf . sprintf ( ""unknown host %s"" , host )"		1051473	0					
ANR	1051848	Callee	buf . sprintf		1051473	0					
ANR	1051849	MemberAccess	buf . sprintf		1051473	0					
ANR	1051850	Identifier	buf		1051473	0					
ANR	1051851	Identifier	sprintf		1051473	1					
ANR	1051852	ArgumentList	"""unknown host %s"""		1051473	1					
ANR	1051853	Argument	"""unknown host %s"""		1051473	0					
ANR	1051854	PrimaryExpression	"""unknown host %s"""		1051473	0					
ANR	1051855	Argument	host		1051473	1					
ANR	1051856	Identifier	host		1051473	0					
ANR	1051857	ExpressionStatement	"newError ( CA_LOCATE_FAILED , buf . Value ( ) )"	1478:3:39619:39660	1051473	1	True				
ANR	1051858	CallExpression	"newError ( CA_LOCATE_FAILED , buf . Value ( ) )"		1051473	0					
ANR	1051859	Callee	newError		1051473	0					
ANR	1051860	Identifier	newError		1051473	0					
ANR	1051861	ArgumentList	CA_LOCATE_FAILED		1051473	1					
ANR	1051862	Argument	CA_LOCATE_FAILED		1051473	0					
ANR	1051863	Identifier	CA_LOCATE_FAILED		1051473	0					
ANR	1051864	Argument	buf . Value ( )		1051473	1					
ANR	1051865	CallExpression	buf . Value ( )		1051473	0					
ANR	1051866	Callee	buf . Value		1051473	0					
ANR	1051867	MemberAccess	buf . Value		1051473	0					
ANR	1051868	Identifier	buf		1051473	0					
ANR	1051869	Identifier	Value		1051473	1					
ANR	1051870	ArgumentList			1051473	1					
ANR	1051871	ExpressionStatement	free ( host )	1479:3:39665:39677	1051473	2	True				
ANR	1051872	CallExpression	free ( host )		1051473	0					
ANR	1051873	Callee	free		1051473	0					
ANR	1051874	Identifier	free		1051473	0					
ANR	1051875	ArgumentList	host		1051473	1					
ANR	1051876	Argument	host		1051473	0					
ANR	1051877	Identifier	host		1051473	0					
ANR	1051878	ExpressionStatement	_tried_locate = false	1484:3:39838:39859	1051473	3	True				
ANR	1051879	AssignmentExpression	_tried_locate = false		1051473	0		=			
ANR	1051880	Identifier	_tried_locate		1051473	0					
ANR	1051881	Identifier	false		1051473	1					
ANR	1051882	ReturnStatement	return false ;	1486:3:39865:39877	1051473	4	True				
ANR	1051883	Identifier	false		1051473	0					
ANR	1051884	ExpressionStatement	sinful . setHost ( saddr . to_ip_string ( ) . Value ( ) )	1488:2:39885:39929	1051473	13	True				
ANR	1051885	CallExpression	sinful . setHost ( saddr . to_ip_string ( ) . Value ( ) )		1051473	0					
ANR	1051886	Callee	sinful . setHost		1051473	0					
ANR	1051887	MemberAccess	sinful . setHost		1051473	0					
ANR	1051888	Identifier	sinful		1051473	0					
ANR	1051889	Identifier	setHost		1051473	1					
ANR	1051890	ArgumentList	saddr . to_ip_string ( ) . Value ( )		1051473	1					
ANR	1051891	Argument	saddr . to_ip_string ( ) . Value ( )		1051473	0					
ANR	1051892	CallExpression	saddr . to_ip_string ( ) . Value ( )		1051473	0					
ANR	1051893	Callee	saddr . to_ip_string ( ) . Value		1051473	0					
ANR	1051894	MemberAccess	saddr . to_ip_string ( ) . Value		1051473	0					
ANR	1051895	CallExpression	saddr . to_ip_string ( )		1051473	0					
ANR	1051896	Callee	saddr . to_ip_string		1051473	0					
ANR	1051897	MemberAccess	saddr . to_ip_string		1051473	0					
ANR	1051898	Identifier	saddr		1051473	0					
ANR	1051899	Identifier	to_ip_string		1051473	1					
ANR	1051900	ArgumentList			1051473	1					
ANR	1051901	Identifier	Value		1051473	1					
ANR	1051902	ArgumentList			1051473	1					
ANR	1051903	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Found IP address and port %s\\n"" , sinful . getSinful ( ) ? sinful . getSinful ( ) : ""NULL"" )"	1489:2:39933:40043	1051473	14	True				
ANR	1051904	CallExpression	"dprintf ( D_HOSTNAME , ""Found IP address and port %s\\n"" , sinful . getSinful ( ) ? sinful . getSinful ( ) : ""NULL"" )"		1051473	0					
ANR	1051905	Callee	dprintf		1051473	0					
ANR	1051906	Identifier	dprintf		1051473	0					
ANR	1051907	ArgumentList	D_HOSTNAME		1051473	1					
ANR	1051908	Argument	D_HOSTNAME		1051473	0					
ANR	1051909	Identifier	D_HOSTNAME		1051473	0					
ANR	1051910	Argument	"""Found IP address and port %s\\n"""		1051473	1					
ANR	1051911	PrimaryExpression	"""Found IP address and port %s\\n"""		1051473	0					
ANR	1051912	Argument	"sinful . getSinful ( ) ? sinful . getSinful ( ) : ""NULL"""		1051473	2					
ANR	1051913	ConditionalExpression	"sinful . getSinful ( ) ? sinful . getSinful ( ) : ""NULL"""		1051473	0					
ANR	1051914	Condition	sinful . getSinful ( )		1051473	0					
ANR	1051915	CallExpression	sinful . getSinful ( )		1051473	0					
ANR	1051916	Callee	sinful . getSinful		1051473	0					
ANR	1051917	MemberAccess	sinful . getSinful		1051473	0					
ANR	1051918	Identifier	sinful		1051473	0					
ANR	1051919	Identifier	getSinful		1051473	1					
ANR	1051920	ArgumentList			1051473	1					
ANR	1051921	CallExpression	sinful . getSinful ( )		1051473	1					
ANR	1051922	Callee	sinful . getSinful		1051473	0					
ANR	1051923	MemberAccess	sinful . getSinful		1051473	0					
ANR	1051924	Identifier	sinful		1051473	0					
ANR	1051925	Identifier	getSinful		1051473	1					
ANR	1051926	ArgumentList			1051473	1					
ANR	1051927	PrimaryExpression	"""NULL"""		1051473	2					
ANR	1051928	ExpressionStatement	New_addr ( strnewp ( sinful . getSinful ( ) ) )	1491:2:40047:40088	1051473	15	True				
ANR	1051929	CallExpression	New_addr ( strnewp ( sinful . getSinful ( ) ) )		1051473	0					
ANR	1051930	Callee	New_addr		1051473	0					
ANR	1051931	Identifier	New_addr		1051473	0					
ANR	1051932	ArgumentList	strnewp ( sinful . getSinful ( ) )		1051473	1					
ANR	1051933	Argument	strnewp ( sinful . getSinful ( ) )		1051473	0					
ANR	1051934	CallExpression	strnewp ( sinful . getSinful ( ) )		1051473	0					
ANR	1051935	Callee	strnewp		1051473	0					
ANR	1051936	Identifier	strnewp		1051473	0					
ANR	1051937	ArgumentList	sinful . getSinful ( )		1051473	1					
ANR	1051938	Argument	sinful . getSinful ( )		1051473	0					
ANR	1051939	CallExpression	sinful . getSinful ( )		1051473	0					
ANR	1051940	Callee	sinful . getSinful		1051473	0					
ANR	1051941	MemberAccess	sinful . getSinful		1051473	0					
ANR	1051942	Identifier	sinful		1051473	0					
ANR	1051943	Identifier	getSinful		1051473	1					
ANR	1051944	ArgumentList			1051473	1					
ANR	1051945	ExpressionStatement	New_full_hostname ( strnewp ( fqdn . Value ( ) ) )	1492:2:40092:40132	1051473	16	True				
ANR	1051946	CallExpression	New_full_hostname ( strnewp ( fqdn . Value ( ) ) )		1051473	0					
ANR	1051947	Callee	New_full_hostname		1051473	0					
ANR	1051948	Identifier	New_full_hostname		1051473	0					
ANR	1051949	ArgumentList	strnewp ( fqdn . Value ( ) )		1051473	1					
ANR	1051950	Argument	strnewp ( fqdn . Value ( ) )		1051473	0					
ANR	1051951	CallExpression	strnewp ( fqdn . Value ( ) )		1051473	0					
ANR	1051952	Callee	strnewp		1051473	0					
ANR	1051953	Identifier	strnewp		1051473	0					
ANR	1051954	ArgumentList	fqdn . Value ( )		1051473	1					
ANR	1051955	Argument	fqdn . Value ( )		1051473	0					
ANR	1051956	CallExpression	fqdn . Value ( )		1051473	0					
ANR	1051957	Callee	fqdn . Value		1051473	0					
ANR	1051958	MemberAccess	fqdn . Value		1051473	0					
ANR	1051959	Identifier	fqdn		1051473	0					
ANR	1051960	Identifier	Value		1051473	1					
ANR	1051961	ArgumentList			1051473	1					
ANR	1051962	IfStatement	if ( _pool )		1051473	14					
ANR	1051963	Condition	_pool	1496:5:40206:40210	1051473	0	True				
ANR	1051964	Identifier	_pool		1051473	0					
ANR	1051965	CompoundStatement		97:13:3032:3032	1051473	1					
ANR	1051966	ExpressionStatement	New_pool ( strnewp ( _name ) )	1497:2:40218:40244	1051473	0	True				
ANR	1051967	CallExpression	New_pool ( strnewp ( _name ) )		1051473	0					
ANR	1051968	Callee	New_pool		1051473	0					
ANR	1051969	Identifier	New_pool		1051473	0					
ANR	1051970	ArgumentList	strnewp ( _name )		1051473	1					
ANR	1051971	Argument	strnewp ( _name )		1051473	0					
ANR	1051972	CallExpression	strnewp ( _name )		1051473	0					
ANR	1051973	Callee	strnewp		1051473	0					
ANR	1051974	Identifier	strnewp		1051473	0					
ANR	1051975	ArgumentList	_name		1051473	1					
ANR	1051976	Argument	_name		1051473	0					
ANR	1051977	Identifier	_name		1051473	0					
ANR	1051978	ExpressionStatement	free ( host )	1500:1:40251:40263	1051473	15	True				
ANR	1051979	CallExpression	free ( host )		1051473	0					
ANR	1051980	Callee	free		1051473	0					
ANR	1051981	Identifier	free		1051473	0					
ANR	1051982	ArgumentList	host		1051473	1					
ANR	1051983	Argument	host		1051473	0					
ANR	1051984	Identifier	host		1051473	0					
ANR	1051985	ReturnStatement	return true ;	1501:1:40266:40277	1051473	16	True				
ANR	1051986	Identifier	true		1051473	0					
ANR	1051987	ReturnType	bool		1051473	1					
ANR	1051988	Identifier	Daemon :: findCmDaemon		1051473	2					
ANR	1051989	ParameterList	const char * cm_name		1051473	3					
ANR	1051990	Parameter	const char * cm_name	1399:22:37159:37177	1051473	0	True				
ANR	1051991	ParameterType	const char *		1051473	0					
ANR	1051992	Identifier	cm_name		1051473	1					
ANR	1051993	CFGEntryNode	ENTRY		1051473		True				
ANR	1051994	CFGExitNode	EXIT		1051473		True				
ANR	1051995	Symbol	get_fqdn_and_ip_from_hostname		1051473						
ANR	1051996	Symbol	sinful . valid		1051473						
ANR	1051997	Symbol	CA_LOCATE_FAILED		1051473						
ANR	1051998	Symbol	_name		1051473						
ANR	1051999	Symbol	get_local_fqdn		1051473						
ANR	1052000	Symbol	_port		1051473						
ANR	1052001	Symbol	fqdn . Value		1051473						
ANR	1052002	Symbol	readAddressFile		1051473						
ANR	1052003	Symbol	sinful . getSinful		1051473						
ANR	1052004	Symbol	_pool		1051473						
ANR	1052005	Symbol	get_local_fqdn ( ) . Value		1051473						
ANR	1052006	Symbol	tmp		1051473						
ANR	1052007	Symbol	_tried_locate		1051473						
ANR	1052008	Symbol	host		1051473						
ANR	1052009	Symbol	buf . Value		1051473						
ANR	1052010	Symbol	strnewp		1051473						
ANR	1052011	Symbol	sinful		1051473						
ANR	1052012	Symbol	saddr . from_ip_string		1051473						
ANR	1052013	Symbol	D_HOSTNAME		1051473						
ANR	1052014	Symbol	_subsys		1051473						
ANR	1052015	Symbol	ret		1051473						
ANR	1052016	Symbol	_is_configured		1051473						
ANR	1052017	Symbol	NULL		1051473						
ANR	1052018	Symbol	sinful . getHost		1051473						
ANR	1052019	Symbol	getDefaultPort		1051473						
ANR	1052020	Symbol	fqdn		1051473						
ANR	1052021	Symbol	saddr		1051473						
ANR	1052022	Symbol	D_ALWAYS		1051473						
ANR	1052023	Symbol	false		1051473						
ANR	1052024	Symbol	saddr . to_ip_string		1051473						
ANR	1052025	Symbol	saddr . to_ip_string ( ) . Value		1051473						
ANR	1052026	Symbol	buf		1051473						
ANR	1052027	Symbol	cm_name		1051473						
ANR	1052028	Symbol	sinful . getPortNum		1051473						
ANR	1052029	Symbol	true		1051473						
ANR	1052030	Symbol	strdup		1051473						
ANR	1052031	Function	Daemon :: initHostname	1505:0:40283:41740							
ANR	1052032	FunctionDef	Daemon :: initHostname ()		1052031	0					
ANR	1052033	CompoundStatement		1507:0:40317:41740	1052031	0					
ANR	1052034	IfStatement	if ( _tried_init_hostname )		1052031	0					
ANR	1052035	Condition	_tried_init_hostname	1509:5:40361:40380	1052031	0	True				
ANR	1052036	Identifier	_tried_init_hostname		1052031	0					
ANR	1052037	CompoundStatement		3:28:66:66	1052031	1					
ANR	1052038	ReturnStatement	return true ;	1510:2:40388:40399	1052031	0	True				
ANR	1052039	Identifier	true		1052031	0					
ANR	1052040	ExpressionStatement	_tried_init_hostname = true	1512:1:40405:40432	1052031	1	True				
ANR	1052041	AssignmentExpression	_tried_init_hostname = true		1052031	0		=			
ANR	1052042	Identifier	_tried_init_hostname		1052031	0					
ANR	1052043	Identifier	true		1052031	1					
ANR	1052044	IfStatement	if ( _hostname && _full_hostname )		1052031	2					
ANR	1052045	Condition	_hostname && _full_hostname	1515:5:40485:40511	1052031	0	True				
ANR	1052046	AndExpression	_hostname && _full_hostname		1052031	0		&&			
ANR	1052047	Identifier	_hostname		1052031	0					
ANR	1052048	Identifier	_full_hostname		1052031	1					
ANR	1052049	CompoundStatement		9:35:197:197	1052031	1					
ANR	1052050	ReturnStatement	return true ;	1516:2:40519:40530	1052031	0	True				
ANR	1052051	Identifier	true		1052031	0					
ANR	1052052	IfStatement	if ( ! _tried_locate )		1052031	3					
ANR	1052053	Condition	! _tried_locate	1522:5:40727:40741	1052031	0	True				
ANR	1052054	UnaryOperationExpression	! _tried_locate		1052031	0					
ANR	1052055	UnaryOperator	!		1052031	0					
ANR	1052056	Identifier	_tried_locate		1052031	1					
ANR	1052057	CompoundStatement		16:23:427:427	1052031	1					
ANR	1052058	ExpressionStatement	locate ( )	1523:2:40749:40757	1052031	0	True				
ANR	1052059	CallExpression	locate ( )		1052031	0					
ANR	1052060	Callee	locate		1052031	0					
ANR	1052061	Identifier	locate		1052031	0					
ANR	1052062	ArgumentList			1052031	1					
ANR	1052063	IfStatement	if ( _full_hostname )		1052031	4					
ANR	1052064	Condition	_full_hostname	1527:5:40813:40826	1052031	0	True				
ANR	1052065	Identifier	_full_hostname		1052031	0					
ANR	1052066	CompoundStatement		21:22:512:512	1052031	1					
ANR	1052067	IfStatement	if ( ! _hostname )		1052031	0					
ANR	1052068	Condition	! _hostname	1528:6:40838:40847	1052031	0	True				
ANR	1052069	UnaryOperationExpression	! _hostname		1052031	0					
ANR	1052070	UnaryOperator	!		1052031	0					
ANR	1052071	Identifier	_hostname		1052031	1					
ANR	1052072	CompoundStatement		22:19:533:533	1052031	1					
ANR	1052073	ReturnStatement	return initHostnameFromFull ( ) ;	1529:3:40856:40885	1052031	0	True				
ANR	1052074	CallExpression	initHostnameFromFull ( )		1052031	0					
ANR	1052075	Callee	initHostnameFromFull		1052031	0					
ANR	1052076	Identifier	initHostnameFromFull		1052031	0					
ANR	1052077	ArgumentList			1052031	1					
ANR	1052078	ReturnStatement	return true ;	1531:2:40893:40904	1052031	1	True				
ANR	1052079	Identifier	true		1052031	0					
ANR	1052080	IfStatement	if ( ! _addr )		1052031	5					
ANR	1052081	Condition	! _addr	1534:5:40915:40921	1052031	0	True				
ANR	1052082	UnaryOperationExpression	! _addr		1052031	0					
ANR	1052083	UnaryOperator	!		1052031	0					
ANR	1052084	Identifier	_addr		1052031	1					
ANR	1052085	CompoundStatement		28:15:607:607	1052031	1					
ANR	1052086	ReturnStatement	return false ;	1536:2:40950:40962	1052031	0	True				
ANR	1052087	Identifier	false		1052031	0					
ANR	1052088	Statement	dprintf	1543:1:41125:41131	1052031	6	True				
ANR	1052089	Statement	(	1543:8:41132:41132	1052031	7	True				
ANR	1052090	Statement	D_HOSTNAME	1543:10:41134:41143	1052031	8	True				
ANR	1052091	Statement	","	1543:20:41144:41144	1052031	9	True				
ANR	1052092	Statement	"""Address \\""%s\\"" specified but no name, """	1543:22:41146:41185	1052031	10	True				
ANR	1052093	Statement	"""looking up host info\\n"""	1544:4:41191:41214	1052031	11	True				
ANR	1052094	Statement	","	1544:28:41215:41215	1052031	12	True				
ANR	1052095	Statement	_addr	1544:30:41217:41221	1052031	13	True				
ANR	1052096	Statement	)	1544:36:41223:41223	1052031	14	True				
ANR	1052097	ExpressionStatement		1544:37:41224:41224	1052031	15	True				
ANR	1052098	IdentifierDeclStatement	condor_sockaddr saddr ;	1546:1:41228:41249	1052031	16	True				
ANR	1052099	IdentifierDecl	saddr		1052031	0					
ANR	1052100	IdentifierDeclType	condor_sockaddr		1052031	0					
ANR	1052101	Identifier	saddr		1052031	1					
ANR	1052102	ExpressionStatement	saddr . from_sinful ( _addr )	1547:1:41252:41276	1052031	17	True				
ANR	1052103	CallExpression	saddr . from_sinful ( _addr )		1052031	0					
ANR	1052104	Callee	saddr . from_sinful		1052031	0					
ANR	1052105	MemberAccess	saddr . from_sinful		1052031	0					
ANR	1052106	Identifier	saddr		1052031	0					
ANR	1052107	Identifier	from_sinful		1052031	1					
ANR	1052108	ArgumentList	_addr		1052031	1					
ANR	1052109	Argument	_addr		1052031	0					
ANR	1052110	Identifier	_addr		1052031	0					
ANR	1052111	IdentifierDeclStatement	MyString fqdn = get_full_hostname ( saddr ) ;	1548:1:41279:41319	1052031	18	True				
ANR	1052112	IdentifierDecl	fqdn = get_full_hostname ( saddr )		1052031	0					
ANR	1052113	IdentifierDeclType	MyString		1052031	0					
ANR	1052114	Identifier	fqdn		1052031	1					
ANR	1052115	AssignmentExpression	fqdn = get_full_hostname ( saddr )		1052031	2		=			
ANR	1052116	Identifier	fqdn		1052031	0					
ANR	1052117	CallExpression	get_full_hostname ( saddr )		1052031	1					
ANR	1052118	Callee	get_full_hostname		1052031	0					
ANR	1052119	Identifier	get_full_hostname		1052031	0					
ANR	1052120	ArgumentList	saddr		1052031	1					
ANR	1052121	Argument	saddr		1052031	0					
ANR	1052122	Identifier	saddr		1052031	0					
ANR	1052123	IfStatement	if ( fqdn . IsEmpty ( ) )		1052031	19					
ANR	1052124	Condition	fqdn . IsEmpty ( )	1549:5:41326:41339	1052031	0	True				
ANR	1052125	CallExpression	fqdn . IsEmpty ( )		1052031	0					
ANR	1052126	Callee	fqdn . IsEmpty		1052031	0					
ANR	1052127	MemberAccess	fqdn . IsEmpty		1052031	0					
ANR	1052128	Identifier	fqdn		1052031	0					
ANR	1052129	Identifier	IsEmpty		1052031	1					
ANR	1052130	ArgumentList			1052031	1					
ANR	1052131	CompoundStatement		48:2:1183:1229	1052031	1					
ANR	1052132	ExpressionStatement	New_hostname ( NULL )	1550:2:41346:41366	1052031	0	True				
ANR	1052133	CallExpression	New_hostname ( NULL )		1052031	0					
ANR	1052134	Callee	New_hostname		1052031	0					
ANR	1052135	Identifier	New_hostname		1052031	0					
ANR	1052136	ArgumentList	NULL		1052031	1					
ANR	1052137	Argument	NULL		1052031	0					
ANR	1052138	Identifier	NULL		1052031	0					
ANR	1052139	ExpressionStatement	New_full_hostname ( NULL )	1551:2:41370:41395	1052031	1	True				
ANR	1052140	CallExpression	New_full_hostname ( NULL )		1052031	0					
ANR	1052141	Callee	New_full_hostname		1052031	0					
ANR	1052142	Identifier	New_full_hostname		1052031	0					
ANR	1052143	ArgumentList	NULL		1052031	1					
ANR	1052144	Argument	NULL		1052031	0					
ANR	1052145	Identifier	NULL		1052031	0					
ANR	1052146	ExpressionStatement	"dprintf ( D_HOSTNAME , ""get_full_hostname() failed for address %s"" , saddr . to_ip_string ( ) . Value ( ) )"	1552:2:41399:41497	1052031	2	True				
ANR	1052147	CallExpression	"dprintf ( D_HOSTNAME , ""get_full_hostname() failed for address %s"" , saddr . to_ip_string ( ) . Value ( ) )"		1052031	0					
ANR	1052148	Callee	dprintf		1052031	0					
ANR	1052149	Identifier	dprintf		1052031	0					
ANR	1052150	ArgumentList	D_HOSTNAME		1052031	1					
ANR	1052151	Argument	D_HOSTNAME		1052031	0					
ANR	1052152	Identifier	D_HOSTNAME		1052031	0					
ANR	1052153	Argument	"""get_full_hostname() failed for address %s"""		1052031	1					
ANR	1052154	PrimaryExpression	"""get_full_hostname() failed for address %s"""		1052031	0					
ANR	1052155	Argument	saddr . to_ip_string ( ) . Value ( )		1052031	2					
ANR	1052156	CallExpression	saddr . to_ip_string ( ) . Value ( )		1052031	0					
ANR	1052157	Callee	saddr . to_ip_string ( ) . Value		1052031	0					
ANR	1052158	MemberAccess	saddr . to_ip_string ( ) . Value		1052031	0					
ANR	1052159	CallExpression	saddr . to_ip_string ( )		1052031	0					
ANR	1052160	Callee	saddr . to_ip_string		1052031	0					
ANR	1052161	MemberAccess	saddr . to_ip_string		1052031	0					
ANR	1052162	Identifier	saddr		1052031	0					
ANR	1052163	Identifier	to_ip_string		1052031	1					
ANR	1052164	ArgumentList			1052031	1					
ANR	1052165	Identifier	Value		1052031	1					
ANR	1052166	ArgumentList			1052031	1					
ANR	1052167	IdentifierDeclStatement	"MyString err_msg = ""can't find host info for "" ;"	1554:2:41501:41547	1052031	3	True				
ANR	1052168	IdentifierDecl	"err_msg = ""can't find host info for """		1052031	0					
ANR	1052169	IdentifierDeclType	MyString		1052031	0					
ANR	1052170	Identifier	err_msg		1052031	1					
ANR	1052171	AssignmentExpression	"err_msg = ""can't find host info for """		1052031	2		=			
ANR	1052172	Identifier	err_msg		1052031	0					
ANR	1052173	PrimaryExpression	"""can't find host info for """		1052031	1					
ANR	1052174	ExpressionStatement	err_msg += _addr	1555:2:41551:41567	1052031	4	True				
ANR	1052175	AssignmentExpression	err_msg += _addr		1052031	0		+=			
ANR	1052176	Identifier	err_msg		1052031	0					
ANR	1052177	Identifier	_addr		1052031	1					
ANR	1052178	ExpressionStatement	"newError ( CA_LOCATE_FAILED , err_msg . Value ( ) )"	1556:2:41571:41616	1052031	5	True				
ANR	1052179	CallExpression	"newError ( CA_LOCATE_FAILED , err_msg . Value ( ) )"		1052031	0					
ANR	1052180	Callee	newError		1052031	0					
ANR	1052181	Identifier	newError		1052031	0					
ANR	1052182	ArgumentList	CA_LOCATE_FAILED		1052031	1					
ANR	1052183	Argument	CA_LOCATE_FAILED		1052031	0					
ANR	1052184	Identifier	CA_LOCATE_FAILED		1052031	0					
ANR	1052185	Argument	err_msg . Value ( )		1052031	1					
ANR	1052186	CallExpression	err_msg . Value ( )		1052031	0					
ANR	1052187	Callee	err_msg . Value		1052031	0					
ANR	1052188	MemberAccess	err_msg . Value		1052031	0					
ANR	1052189	Identifier	err_msg		1052031	0					
ANR	1052190	Identifier	Value		1052031	1					
ANR	1052191	ArgumentList			1052031	1					
ANR	1052192	ReturnStatement	return false ;	1557:2:41620:41632	1052031	6	True				
ANR	1052193	Identifier	false		1052031	0					
ANR	1052194	IdentifierDeclStatement	char * tmp = strnewp ( fqdn . Value ( ) ) ;	1560:1:41639:41672	1052031	20	True				
ANR	1052195	IdentifierDecl	* tmp = strnewp ( fqdn . Value ( ) )		1052031	0					
ANR	1052196	IdentifierDeclType	char *		1052031	0					
ANR	1052197	Identifier	tmp		1052031	1					
ANR	1052198	AssignmentExpression	* tmp = strnewp ( fqdn . Value ( ) )		1052031	2		=			
ANR	1052199	Identifier	tmp		1052031	0					
ANR	1052200	CallExpression	strnewp ( fqdn . Value ( ) )		1052031	1					
ANR	1052201	Callee	strnewp		1052031	0					
ANR	1052202	Identifier	strnewp		1052031	0					
ANR	1052203	ArgumentList	fqdn . Value ( )		1052031	1					
ANR	1052204	Argument	fqdn . Value ( )		1052031	0					
ANR	1052205	CallExpression	fqdn . Value ( )		1052031	0					
ANR	1052206	Callee	fqdn . Value		1052031	0					
ANR	1052207	MemberAccess	fqdn . Value		1052031	0					
ANR	1052208	Identifier	fqdn		1052031	0					
ANR	1052209	Identifier	Value		1052031	1					
ANR	1052210	ArgumentList			1052031	1					
ANR	1052211	ExpressionStatement	New_full_hostname ( tmp )	1561:1:41675:41699	1052031	21	True				
ANR	1052212	CallExpression	New_full_hostname ( tmp )		1052031	0					
ANR	1052213	Callee	New_full_hostname		1052031	0					
ANR	1052214	Identifier	New_full_hostname		1052031	0					
ANR	1052215	ArgumentList	tmp		1052031	1					
ANR	1052216	Argument	tmp		1052031	0					
ANR	1052217	Identifier	tmp		1052031	0					
ANR	1052218	ExpressionStatement	initHostnameFromFull ( )	1562:1:41702:41724	1052031	22	True				
ANR	1052219	CallExpression	initHostnameFromFull ( )		1052031	0					
ANR	1052220	Callee	initHostnameFromFull		1052031	0					
ANR	1052221	Identifier	initHostnameFromFull		1052031	0					
ANR	1052222	ArgumentList			1052031	1					
ANR	1052223	ReturnStatement	return true ;	1563:1:41727:41738	1052031	23	True				
ANR	1052224	Identifier	true		1052031	0					
ANR	1052225	ReturnType	bool		1052031	1					
ANR	1052226	Identifier	Daemon :: initHostname		1052031	2					
ANR	1052227	ParameterList			1052031	3					
ANR	1052228	CFGEntryNode	ENTRY		1052031		True				
ANR	1052229	CFGExitNode	EXIT		1052031		True				
ANR	1052230	Symbol	D_HOSTNAME		1052031						
ANR	1052231	Symbol	CA_LOCATE_FAILED		1052031						
ANR	1052232	Symbol	NULL		1052031						
ANR	1052233	Symbol	fqdn		1052031						
ANR	1052234	Symbol	saddr		1052031						
ANR	1052235	Symbol	fqdn . IsEmpty		1052031						
ANR	1052236	Symbol	false		1052031						
ANR	1052237	Symbol	initHostnameFromFull		1052031						
ANR	1052238	Symbol	saddr . to_ip_string		1052031						
ANR	1052239	Symbol	saddr . to_ip_string ( ) . Value		1052031						
ANR	1052240	Symbol	_tried_init_hostname		1052031						
ANR	1052241	Symbol	err_msg . Value		1052031						
ANR	1052242	Symbol	fqdn . Value		1052031						
ANR	1052243	Symbol	_hostname		1052031						
ANR	1052244	Symbol	_full_hostname		1052031						
ANR	1052245	Symbol	_tried_locate		1052031						
ANR	1052246	Symbol	err_msg		1052031						
ANR	1052247	Symbol	tmp		1052031						
ANR	1052248	Symbol	true		1052031						
ANR	1052249	Symbol	_addr		1052031						
ANR	1052250	Symbol	strnewp		1052031						
ANR	1052251	Symbol	get_full_hostname		1052031						
ANR	1052252	Function	Daemon :: initHostnameFromFull	1567:0:41744:42246							
ANR	1052253	FunctionDef	Daemon :: initHostnameFromFull ()		1052252	0					
ANR	1052254	CompoundStatement		1569:0:41786:42246	1052252	0					
ANR	1052255	IdentifierDeclStatement	char * copy ;	1570:1:41789:41799	1052252	0	True				
ANR	1052256	IdentifierDecl	* copy		1052252	0					
ANR	1052257	IdentifierDeclType	char *		1052252	0					
ANR	1052258	Identifier	copy		1052252	1					
ANR	1052259	IdentifierDeclStatement	char * tmp ;	1571:1:41802:41811	1052252	1	True				
ANR	1052260	IdentifierDecl	* tmp		1052252	0					
ANR	1052261	IdentifierDeclType	char *		1052252	0					
ANR	1052262	Identifier	tmp		1052252	1					
ANR	1052263	IfStatement	if ( _full_hostname )		1052252	2					
ANR	1052264	Condition	_full_hostname	1577:5:42043:42056	1052252	0	True				
ANR	1052265	Identifier	_full_hostname		1052252	0					
ANR	1052266	CompoundStatement		9:22:273:273	1052252	1					
ANR	1052267	ExpressionStatement	copy = strnewp ( _full_hostname )	1578:2:42064:42096	1052252	0	True				
ANR	1052268	AssignmentExpression	copy = strnewp ( _full_hostname )		1052252	0		=			
ANR	1052269	Identifier	copy		1052252	0					
ANR	1052270	CallExpression	strnewp ( _full_hostname )		1052252	1					
ANR	1052271	Callee	strnewp		1052252	0					
ANR	1052272	Identifier	strnewp		1052252	0					
ANR	1052273	ArgumentList	_full_hostname		1052252	1					
ANR	1052274	Argument	_full_hostname		1052252	0					
ANR	1052275	Identifier	_full_hostname		1052252	0					
ANR	1052276	ExpressionStatement	"tmp = strchr ( copy , '.' )"	1579:2:42100:42125	1052252	1	True				
ANR	1052277	AssignmentExpression	"tmp = strchr ( copy , '.' )"		1052252	0		=			
ANR	1052278	Identifier	tmp		1052252	0					
ANR	1052279	CallExpression	"strchr ( copy , '.' )"		1052252	1					
ANR	1052280	Callee	strchr		1052252	0					
ANR	1052281	Identifier	strchr		1052252	0					
ANR	1052282	ArgumentList	copy		1052252	1					
ANR	1052283	Argument	copy		1052252	0					
ANR	1052284	Identifier	copy		1052252	0					
ANR	1052285	Argument	'.'		1052252	1					
ANR	1052286	PrimaryExpression	'.'		1052252	0					
ANR	1052287	IfStatement	if ( tmp )		1052252	2					
ANR	1052288	Condition	tmp	1580:6:42133:42135	1052252	0	True				
ANR	1052289	Identifier	tmp		1052252	0					
ANR	1052290	CompoundStatement		12:12:352:352	1052252	1					
ANR	1052291	ExpressionStatement	* tmp = '\\0'	1581:3:42144:42155	1052252	0	True				
ANR	1052292	AssignmentExpression	* tmp = '\\0'		1052252	0		=			
ANR	1052293	UnaryOperationExpression	* tmp		1052252	0					
ANR	1052294	UnaryOperator	*		1052252	0					
ANR	1052295	Identifier	tmp		1052252	1					
ANR	1052296	PrimaryExpression	'\\0'		1052252	1					
ANR	1052297	ExpressionStatement	New_hostname ( strnewp ( copy ) )	1583:2:42163:42192	1052252	3	True				
ANR	1052298	CallExpression	New_hostname ( strnewp ( copy ) )		1052252	0					
ANR	1052299	Callee	New_hostname		1052252	0					
ANR	1052300	Identifier	New_hostname		1052252	0					
ANR	1052301	ArgumentList	strnewp ( copy )		1052252	1					
ANR	1052302	Argument	strnewp ( copy )		1052252	0					
ANR	1052303	CallExpression	strnewp ( copy )		1052252	0					
ANR	1052304	Callee	strnewp		1052252	0					
ANR	1052305	Identifier	strnewp		1052252	0					
ANR	1052306	ArgumentList	copy		1052252	1					
ANR	1052307	Argument	copy		1052252	0					
ANR	1052308	Identifier	copy		1052252	0					
ANR	1052309	Statement	delete	1584:2:42196:42201	1052252	4	True				
ANR	1052310	Statement	[	1584:9:42203:42203	1052252	5	True				
ANR	1052311	Statement	]	1584:10:42204:42204	1052252	6	True				
ANR	1052312	ExpressionStatement	copy	1584:12:42206:42210	1052252	7	True				
ANR	1052313	Identifier	copy		1052252	0					
ANR	1052314	ReturnStatement	return true ;	1585:2:42214:42225	1052252	8	True				
ANR	1052315	Identifier	true		1052252	0					
ANR	1052316	ReturnStatement	return false ;	1587:1:42232:42244	1052252	3	True				
ANR	1052317	Identifier	false		1052252	0					
ANR	1052318	ReturnType	bool		1052252	1					
ANR	1052319	Identifier	Daemon :: initHostnameFromFull		1052252	2					
ANR	1052320	ParameterList			1052252	3					
ANR	1052321	CFGEntryNode	ENTRY		1052252		True				
ANR	1052322	CFGExitNode	EXIT		1052252		True				
ANR	1052323	Symbol	* tmp		1052252						
ANR	1052324	Symbol	_full_hostname		1052252						
ANR	1052325	Symbol	tmp		1052252						
ANR	1052326	Symbol	true		1052252						
ANR	1052327	Symbol	false		1052252						
ANR	1052328	Symbol	strnewp		1052252						
ANR	1052329	Symbol	strchr		1052252						
ANR	1052330	Symbol	copy		1052252						
ANR	1052331	Function	Daemon :: initVersion	1591:0:42250:43740							
ANR	1052332	FunctionDef	Daemon :: initVersion ()		1052331	0					
ANR	1052333	CompoundStatement		1593:0:42283:43740	1052331	0					
ANR	1052334	IfStatement	if ( _tried_init_version )		1052331	0					
ANR	1052335	Condition	_tried_init_version	1595:5:42327:42345	1052331	0	True				
ANR	1052336	Identifier	_tried_init_version		1052331	0					
ANR	1052337	CompoundStatement		3:27:65:65	1052331	1					
ANR	1052338	ReturnStatement	return true ;	1596:2:42353:42364	1052331	0	True				
ANR	1052339	Identifier	true		1052331	0					
ANR	1052340	ExpressionStatement	_tried_init_version = true	1598:1:42370:42396	1052331	1	True				
ANR	1052341	AssignmentExpression	_tried_init_version = true		1052331	0		=			
ANR	1052342	Identifier	_tried_init_version		1052331	0					
ANR	1052343	Identifier	true		1052331	1					
ANR	1052344	IfStatement	if ( _version && _platform )		1052331	2					
ANR	1052345	Condition	_version && _platform	1601:5:42449:42469	1052331	0	True				
ANR	1052346	AndExpression	_version && _platform		1052331	0		&&			
ANR	1052347	Identifier	_version		1052331	0					
ANR	1052348	Identifier	_platform		1052331	1					
ANR	1052349	CompoundStatement		9:29:189:189	1052331	1					
ANR	1052350	ReturnStatement	return true ;	1602:2:42477:42488	1052331	0	True				
ANR	1052351	Identifier	true		1052331	0					
ANR	1052352	IfStatement	if ( ! _tried_locate )		1052331	3					
ANR	1052353	Condition	! _tried_locate	1609:5:42709:42723	1052331	0	True				
ANR	1052354	UnaryOperationExpression	! _tried_locate		1052331	0					
ANR	1052355	UnaryOperator	!		1052331	0					
ANR	1052356	Identifier	_tried_locate		1052331	1					
ANR	1052357	CompoundStatement		17:23:443:443	1052331	1					
ANR	1052358	ExpressionStatement	locate ( )	1610:2:42731:42739	1052331	0	True				
ANR	1052359	CallExpression	locate ( )		1052331	0					
ANR	1052360	Callee	locate		1052331	0					
ANR	1052361	Identifier	locate		1052331	0					
ANR	1052362	ArgumentList			1052331	1					
ANR	1052363	IfStatement	if ( ! _version && _is_local )		1052331	4					
ANR	1052364	Condition	! _version && _is_local	1616:5:42886:42908	1052331	0	True				
ANR	1052365	AndExpression	! _version && _is_local		1052331	0		&&			
ANR	1052366	UnaryOperationExpression	! _version		1052331	0					
ANR	1052367	UnaryOperator	!		1052331	0					
ANR	1052368	Identifier	_version		1052331	1					
ANR	1052369	Identifier	_is_local		1052331	1					
ANR	1052370	CompoundStatement		27:2:752:785	1052331	1					
ANR	1052371	Statement	dprintf	1617:2:42916:42922	1052331	0	True				
ANR	1052372	Statement	(	1617:9:42923:42923	1052331	1	True				
ANR	1052373	Statement	D_HOSTNAME	1617:11:42925:42934	1052331	2	True				
ANR	1052374	Statement	","	1617:21:42935:42935	1052331	3	True				
ANR	1052375	Statement	"""No version string in local address file, """	1617:23:42937:42979	1052331	4	True				
ANR	1052376	Statement	"""trying to find it in the daemon's binary\\n"""	1618:5:42986:43029	1052331	5	True				
ANR	1052377	Statement	)	1618:50:43031:43031	1052331	6	True				
ANR	1052378	ExpressionStatement		1618:51:43032:43032	1052331	7	True				
ANR	1052379	IdentifierDeclStatement	char * exe_file = param ( _subsys ) ;	1619:2:43036:43069	1052331	8	True				
ANR	1052380	IdentifierDecl	* exe_file = param ( _subsys )		1052331	0					
ANR	1052381	IdentifierDeclType	char *		1052331	0					
ANR	1052382	Identifier	exe_file		1052331	1					
ANR	1052383	AssignmentExpression	* exe_file = param ( _subsys )		1052331	2		=			
ANR	1052384	Identifier	exe_file		1052331	0					
ANR	1052385	CallExpression	param ( _subsys )		1052331	1					
ANR	1052386	Callee	param		1052331	0					
ANR	1052387	Identifier	param		1052331	0					
ANR	1052388	ArgumentList	_subsys		1052331	1					
ANR	1052389	Argument	_subsys		1052331	0					
ANR	1052390	Identifier	_subsys		1052331	0					
ANR	1052391	IfStatement	if ( exe_file )		1052331	9					
ANR	1052392	Condition	exe_file	1620:6:43077:43084	1052331	0	True				
ANR	1052393	Identifier	exe_file		1052331	0					
ANR	1052394	CompoundStatement		30:3:827:847	1052331	1					
ANR	1052395	IdentifierDeclStatement	char ver [ 128 ] ;	1621:3:43093:43106	1052331	0	True				
ANR	1052396	IdentifierDecl	ver [ 128 ]		1052331	0					
ANR	1052397	IdentifierDeclType	char [ 128 ]		1052331	0					
ANR	1052398	Identifier	ver		1052331	1					
ANR	1052399	PrimaryExpression	128		1052331	2					
ANR	1052400	IdentifierDeclStatement	CondorVersionInfo vi ;	1622:3:43111:43131	1052331	1	True				
ANR	1052401	IdentifierDecl	vi		1052331	0					
ANR	1052402	IdentifierDeclType	CondorVersionInfo		1052331	0					
ANR	1052403	Identifier	vi		1052331	1					
ANR	1052404	ExpressionStatement	"vi . get_version_from_file ( exe_file , ver , 128 )"	1623:3:43136:43180	1052331	2	True				
ANR	1052405	CallExpression	"vi . get_version_from_file ( exe_file , ver , 128 )"		1052331	0					
ANR	1052406	Callee	vi . get_version_from_file		1052331	0					
ANR	1052407	MemberAccess	vi . get_version_from_file		1052331	0					
ANR	1052408	Identifier	vi		1052331	0					
ANR	1052409	Identifier	get_version_from_file		1052331	1					
ANR	1052410	ArgumentList	exe_file		1052331	1					
ANR	1052411	Argument	exe_file		1052331	0					
ANR	1052412	Identifier	exe_file		1052331	0					
ANR	1052413	Argument	ver		1052331	1					
ANR	1052414	Identifier	ver		1052331	0					
ANR	1052415	Argument	128		1052331	2					
ANR	1052416	PrimaryExpression	128		1052331	0					
ANR	1052417	ExpressionStatement	New_version ( strnewp ( ver ) )	1624:3:43185:43212	1052331	3	True				
ANR	1052418	CallExpression	New_version ( strnewp ( ver ) )		1052331	0					
ANR	1052419	Callee	New_version		1052331	0					
ANR	1052420	Identifier	New_version		1052331	0					
ANR	1052421	ArgumentList	strnewp ( ver )		1052331	1					
ANR	1052422	Argument	strnewp ( ver )		1052331	0					
ANR	1052423	CallExpression	strnewp ( ver )		1052331	0					
ANR	1052424	Callee	strnewp		1052331	0					
ANR	1052425	Identifier	strnewp		1052331	0					
ANR	1052426	ArgumentList	ver		1052331	1					
ANR	1052427	Argument	ver		1052331	0					
ANR	1052428	Identifier	ver		1052331	0					
ANR	1052429	Statement	dprintf	1625:3:43217:43223	1052331	4	True				
ANR	1052430	Statement	(	1625:10:43224:43224	1052331	5	True				
ANR	1052431	Statement	D_HOSTNAME	1625:12:43226:43235	1052331	6	True				
ANR	1052432	Statement	","	1625:22:43236:43236	1052331	7	True				
ANR	1052433	Statement	"""Found version string \\""%s\\"" """	1625:24:43238:43267	1052331	8	True				
ANR	1052434	Statement	"""in local binary (%s)\\n"""	1626:6:43275:43298	1052331	9	True				
ANR	1052435	Statement	","	1626:30:43299:43299	1052331	10	True				
ANR	1052436	Statement	ver	1626:32:43301:43303	1052331	11	True				
ANR	1052437	Statement	","	1626:35:43304:43304	1052331	12	True				
ANR	1052438	Statement	exe_file	1626:37:43306:43313	1052331	13	True				
ANR	1052439	Statement	)	1626:46:43315:43315	1052331	14	True				
ANR	1052440	ExpressionStatement		1626:47:43316:43316	1052331	15	True				
ANR	1052441	ExpressionStatement	free ( exe_file )	1627:3:43321:43337	1052331	16	True				
ANR	1052442	CallExpression	free ( exe_file )		1052331	0					
ANR	1052443	Callee	free		1052331	0					
ANR	1052444	Identifier	free		1052331	0					
ANR	1052445	ArgumentList	exe_file		1052331	1					
ANR	1052446	Argument	exe_file		1052331	0					
ANR	1052447	Identifier	exe_file		1052331	0					
ANR	1052448	ReturnStatement	return true ;	1628:3:43342:43353	1052331	17	True				
ANR	1052449	Identifier	true		1052331	0					
ANR	1052450	ElseStatement	else		1052331	0					
ANR	1052451	CompoundStatement		37:9:1080:1080	1052331	0					
ANR	1052452	Statement	dprintf	1630:3:43369:43375	1052331	0	True				
ANR	1052453	Statement	(	1630:10:43376:43376	1052331	1	True				
ANR	1052454	Statement	D_HOSTNAME	1630:12:43378:43387	1052331	2	True				
ANR	1052455	Statement	","	1630:22:43388:43388	1052331	3	True				
ANR	1052456	Statement	"""%s not defined in config file, """	1630:24:43390:43422	1052331	4	True				
ANR	1052457	Statement	"""can't locate daemon binary for version info\\n"""	1631:6:43430:43476	1052331	5	True				
ANR	1052458	Statement	","	1631:53:43477:43477	1052331	6	True				
ANR	1052459	Statement	_subsys	1632:6:43486:43492	1052331	7	True				
ANR	1052460	Statement	)	1632:14:43494:43494	1052331	8	True				
ANR	1052461	ExpressionStatement		1632:15:43495:43495	1052331	9	True				
ANR	1052462	ReturnStatement	return false ;	1633:3:43500:43512	1052331	10	True				
ANR	1052463	Identifier	false		1052331	0					
ANR	1052464	Statement	dprintf	1639:1:43613:43619	1052331	5	True				
ANR	1052465	Statement	(	1639:8:43620:43620	1052331	6	True				
ANR	1052466	Statement	D_HOSTNAME	1639:10:43622:43631	1052331	7	True				
ANR	1052467	Statement	","	1639:20:43632:43632	1052331	8	True				
ANR	1052468	Statement	"""Daemon isn't local and couldn't find """	1639:22:43634:43672	1052331	9	True				
ANR	1052469	Statement	"""version string with locate(), giving up\\n"""	1640:4:43678:43720	1052331	10	True				
ANR	1052470	Statement	)	1640:48:43722:43722	1052331	11	True				
ANR	1052471	ExpressionStatement		1640:49:43723:43723	1052331	12	True				
ANR	1052472	ReturnStatement	return false ;	1641:1:43726:43738	1052331	13	True				
ANR	1052473	Identifier	false		1052331	0					
ANR	1052474	ReturnType	bool		1052331	1					
ANR	1052475	Identifier	Daemon :: initVersion		1052331	2					
ANR	1052476	ParameterList			1052331	3					
ANR	1052477	CFGEntryNode	ENTRY		1052331		True				
ANR	1052478	CFGExitNode	EXIT		1052331		True				
ANR	1052479	Symbol	_subsys		1052331						
ANR	1052480	Symbol	ver		1052331						
ANR	1052481	Symbol	false		1052331						
ANR	1052482	Symbol	exe_file		1052331						
ANR	1052483	Symbol	_platform		1052331						
ANR	1052484	Symbol	vi		1052331						
ANR	1052485	Symbol	_tried_init_version		1052331						
ANR	1052486	Symbol	param		1052331						
ANR	1052487	Symbol	_tried_locate		1052331						
ANR	1052488	Symbol	true		1052331						
ANR	1052489	Symbol	strnewp		1052331						
ANR	1052490	Symbol	_is_local		1052331						
ANR	1052491	Symbol	_version		1052331						
ANR	1052492	Function	Daemon :: getDefaultPort	1645:0:43744:43960							
ANR	1052493	FunctionDef	Daemon :: getDefaultPort ()		1052492	0					
ANR	1052494	CompoundStatement		1647:0:43779:43960	1052492	0					
ANR	1052495	SwitchStatement	switch ( _type )		1052492	0					
ANR	1052496	Condition	_type	1648:9:43790:43794	1052492	0	True				
ANR	1052497	Identifier	_type		1052492	0					
ANR	1052498	CompoundStatement		2:17:18:18	1052492	1					
ANR	1052499	Label	case DT_COLLECTOR :	1649:1:43801:43818	1052492	0	True				
ANR	1052500	Identifier	DT_COLLECTOR		1052492	0					
ANR	1052501	ReturnStatement	return COLLECTOR_PORT ;	1650:2:43822:43843	1052492	1	True				
ANR	1052502	Identifier	COLLECTOR_PORT		1052492	0					
ANR	1052503	BreakStatement	break ;	1651:2:43847:43852	1052492	2	True				
ANR	1052504	Label	case DT_VIEW_COLLECTOR :	1652:1:43855:43877	1052492	3	True				
ANR	1052505	Identifier	DT_VIEW_COLLECTOR		1052492	0					
ANR	1052506	ReturnStatement	return CONDOR_VIEW_PORT ;	1653:2:43881:43904	1052492	4	True				
ANR	1052507	Identifier	CONDOR_VIEW_PORT		1052492	0					
ANR	1052508	BreakStatement	break ;	1654:2:43908:43913	1052492	5	True				
ANR	1052509	Label	default :	1655:1:43916:43923	1052492	6	True				
ANR	1052510	Identifier	default		1052492	0					
ANR	1052511	ReturnStatement	return 0 ;	1656:2:43927:43935	1052492	7	True				
ANR	1052512	PrimaryExpression	0		1052492	0					
ANR	1052513	BreakStatement	break ;	1657:2:43939:43944	1052492	8	True				
ANR	1052514	ReturnStatement	return 0 ;	1659:1:43950:43958	1052492	1	True				
ANR	1052515	PrimaryExpression	0		1052492	0					
ANR	1052516	ReturnType	int		1052492	1					
ANR	1052517	Identifier	Daemon :: getDefaultPort		1052492	2					
ANR	1052518	ParameterList			1052492	3					
ANR	1052519	CFGEntryNode	ENTRY		1052492		True				
ANR	1052520	CFGExitNode	EXIT		1052492		True				
ANR	1052521	Symbol	_type		1052492						
ANR	1052522	Symbol	COLLECTOR_PORT		1052492						
ANR	1052523	Symbol	CONDOR_VIEW_PORT		1052492						
ANR	1052524	Function	Daemon :: newError	1667:0:44131:44283							
ANR	1052525	FunctionDef	"Daemon :: newError (CAResult err_code , const char * str)"		1052524	0					
ANR	1052526	CompoundStatement		1669:0:44191:44283	1052524	0					
ANR	1052527	IfStatement	if ( _error )		1052524	0					
ANR	1052528	Condition	_error	1670:5:44198:44203	1052524	0	True				
ANR	1052529	Identifier	_error		1052524	0					
ANR	1052530	CompoundStatement		2:14:15:15	1052524	1					
ANR	1052531	Statement	delete	1671:2:44211:44216	1052524	0	True				
ANR	1052532	Statement	[	1671:9:44218:44218	1052524	1	True				
ANR	1052533	Statement	]	1671:10:44219:44219	1052524	2	True				
ANR	1052534	ExpressionStatement	_error	1671:12:44221:44227	1052524	3	True				
ANR	1052535	Identifier	_error		1052524	0					
ANR	1052536	ExpressionStatement	_error = strnewp ( str )	1673:1:44233:44256	1052524	1	True				
ANR	1052537	AssignmentExpression	_error = strnewp ( str )		1052524	0		=			
ANR	1052538	Identifier	_error		1052524	0					
ANR	1052539	CallExpression	strnewp ( str )		1052524	1					
ANR	1052540	Callee	strnewp		1052524	0					
ANR	1052541	Identifier	strnewp		1052524	0					
ANR	1052542	ArgumentList	str		1052524	1					
ANR	1052543	Argument	str		1052524	0					
ANR	1052544	Identifier	str		1052524	0					
ANR	1052545	ExpressionStatement	_error_code = err_code	1674:1:44259:44281	1052524	2	True				
ANR	1052546	AssignmentExpression	_error_code = err_code		1052524	0		=			
ANR	1052547	Identifier	_error_code		1052524	0					
ANR	1052548	Identifier	err_code		1052524	1					
ANR	1052549	ReturnType	void		1052524	1					
ANR	1052550	Identifier	Daemon :: newError		1052524	2					
ANR	1052551	ParameterList	"CAResult err_code , const char * str"		1052524	3					
ANR	1052552	Parameter	CAResult err_code	1668:18:44154:44170	1052524	0	True				
ANR	1052553	ParameterType	CAResult		1052524	0					
ANR	1052554	Identifier	err_code		1052524	1					
ANR	1052555	Parameter	const char * str	1668:37:44173:44187	1052524	1	True				
ANR	1052556	ParameterType	const char *		1052524	0					
ANR	1052557	Identifier	str		1052524	1					
ANR	1052558	CFGEntryNode	ENTRY		1052524		True				
ANR	1052559	CFGExitNode	EXIT		1052524		True				
ANR	1052560	Symbol	str		1052524						
ANR	1052561	Symbol	_error		1052524						
ANR	1052562	Symbol	err_code		1052524						
ANR	1052563	Symbol	strnewp		1052524						
ANR	1052564	Symbol	_error_code		1052524						
ANR	1052565	Function	Daemon :: localName	1678:0:44287:44574							
ANR	1052566	FunctionDef	Daemon :: localName ()		1052565	0					
ANR	1052567	CompoundStatement		1680:0:44319:44574	1052565	0					
ANR	1052568	IdentifierDeclStatement	"char buf [ 100 ] , * tmp , * my_name ;"	1681:1:44322:44351	1052565	0	True				
ANR	1052569	IdentifierDecl	buf [ 100 ]		1052565	0					
ANR	1052570	IdentifierDeclType	char [ 100 ]		1052565	0					
ANR	1052571	Identifier	buf		1052565	1					
ANR	1052572	PrimaryExpression	100		1052565	2					
ANR	1052573	IdentifierDecl	* tmp		1052565	1					
ANR	1052574	IdentifierDeclType	char *		1052565	0					
ANR	1052575	Identifier	tmp		1052565	1					
ANR	1052576	IdentifierDecl	* my_name		1052565	2					
ANR	1052577	IdentifierDeclType	char *		1052565	0					
ANR	1052578	Identifier	my_name		1052565	1					
ANR	1052579	ExpressionStatement	"sprintf ( buf , ""%s_NAME"" , daemonString ( _type ) )"	1682:1:44354:44400	1052565	1	True				
ANR	1052580	CallExpression	"sprintf ( buf , ""%s_NAME"" , daemonString ( _type ) )"		1052565	0					
ANR	1052581	Callee	sprintf		1052565	0					
ANR	1052582	Identifier	sprintf		1052565	0					
ANR	1052583	ArgumentList	buf		1052565	1					
ANR	1052584	Argument	buf		1052565	0					
ANR	1052585	Identifier	buf		1052565	0					
ANR	1052586	Argument	"""%s_NAME"""		1052565	1					
ANR	1052587	PrimaryExpression	"""%s_NAME"""		1052565	0					
ANR	1052588	Argument	daemonString ( _type )		1052565	2					
ANR	1052589	CallExpression	daemonString ( _type )		1052565	0					
ANR	1052590	Callee	daemonString		1052565	0					
ANR	1052591	Identifier	daemonString		1052565	0					
ANR	1052592	ArgumentList	_type		1052565	1					
ANR	1052593	Argument	_type		1052565	0					
ANR	1052594	Identifier	_type		1052565	0					
ANR	1052595	ExpressionStatement	tmp = param ( buf )	1683:1:44403:44421	1052565	2	True				
ANR	1052596	AssignmentExpression	tmp = param ( buf )		1052565	0		=			
ANR	1052597	Identifier	tmp		1052565	0					
ANR	1052598	CallExpression	param ( buf )		1052565	1					
ANR	1052599	Callee	param		1052565	0					
ANR	1052600	Identifier	param		1052565	0					
ANR	1052601	ArgumentList	buf		1052565	1					
ANR	1052602	Argument	buf		1052565	0					
ANR	1052603	Identifier	buf		1052565	0					
ANR	1052604	IfStatement	if ( tmp )		1052565	3					
ANR	1052605	Condition	tmp	1684:5:44428:44430	1052565	0	True				
ANR	1052606	Identifier	tmp		1052565	0					
ANR	1052607	CompoundStatement		5:11:114:114	1052565	1					
ANR	1052608	ExpressionStatement	my_name = build_valid_daemon_name ( tmp )	1685:2:44438:44478	1052565	0	True				
ANR	1052609	AssignmentExpression	my_name = build_valid_daemon_name ( tmp )		1052565	0		=			
ANR	1052610	Identifier	my_name		1052565	0					
ANR	1052611	CallExpression	build_valid_daemon_name ( tmp )		1052565	1					
ANR	1052612	Callee	build_valid_daemon_name		1052565	0					
ANR	1052613	Identifier	build_valid_daemon_name		1052565	0					
ANR	1052614	ArgumentList	tmp		1052565	1					
ANR	1052615	Argument	tmp		1052565	0					
ANR	1052616	Identifier	tmp		1052565	0					
ANR	1052617	ExpressionStatement	free ( tmp )	1686:2:44482:44493	1052565	1	True				
ANR	1052618	CallExpression	free ( tmp )		1052565	0					
ANR	1052619	Callee	free		1052565	0					
ANR	1052620	Identifier	free		1052565	0					
ANR	1052621	ArgumentList	tmp		1052565	1					
ANR	1052622	Argument	tmp		1052565	0					
ANR	1052623	Identifier	tmp		1052565	0					
ANR	1052624	ElseStatement	else		1052565	0					
ANR	1052625	CompoundStatement		8:8:183:183	1052565	0					
ANR	1052626	ExpressionStatement	my_name = strnewp ( get_local_fqdn ( ) . Value ( ) )	1688:2:44507:44552	1052565	0	True				
ANR	1052627	AssignmentExpression	my_name = strnewp ( get_local_fqdn ( ) . Value ( ) )		1052565	0		=			
ANR	1052628	Identifier	my_name		1052565	0					
ANR	1052629	CallExpression	strnewp ( get_local_fqdn ( ) . Value ( ) )		1052565	1					
ANR	1052630	Callee	strnewp		1052565	0					
ANR	1052631	Identifier	strnewp		1052565	0					
ANR	1052632	ArgumentList	get_local_fqdn ( ) . Value ( )		1052565	1					
ANR	1052633	Argument	get_local_fqdn ( ) . Value ( )		1052565	0					
ANR	1052634	CallExpression	get_local_fqdn ( ) . Value ( )		1052565	0					
ANR	1052635	Callee	get_local_fqdn ( ) . Value		1052565	0					
ANR	1052636	MemberAccess	get_local_fqdn ( ) . Value		1052565	0					
ANR	1052637	CallExpression	get_local_fqdn ( )		1052565	0					
ANR	1052638	Callee	get_local_fqdn		1052565	0					
ANR	1052639	Identifier	get_local_fqdn		1052565	0					
ANR	1052640	ArgumentList			1052565	1					
ANR	1052641	Identifier	Value		1052565	1					
ANR	1052642	ArgumentList			1052565	1					
ANR	1052643	ReturnStatement	return my_name ;	1690:1:44558:44572	1052565	4	True				
ANR	1052644	Identifier	my_name		1052565	0					
ANR	1052645	ReturnType	char *		1052565	1					
ANR	1052646	Identifier	Daemon :: localName		1052565	2					
ANR	1052647	ParameterList			1052565	3					
ANR	1052648	CFGEntryNode	ENTRY		1052565		True				
ANR	1052649	CFGExitNode	EXIT		1052565		True				
ANR	1052650	Symbol	my_name		1052565						
ANR	1052651	Symbol	buf		1052565						
ANR	1052652	Symbol	param		1052565						
ANR	1052653	Symbol	get_local_fqdn ( ) . Value		1052565						
ANR	1052654	Symbol	tmp		1052565						
ANR	1052655	Symbol	daemonString		1052565						
ANR	1052656	Symbol	build_valid_daemon_name		1052565						
ANR	1052657	Symbol	_type		1052565						
ANR	1052658	Symbol	strnewp		1052565						
ANR	1052659	Symbol	get_local_fqdn		1052565						
ANR	1052660	Function	Daemon :: readAddressFile	1694:0:44578:46237							
ANR	1052661	FunctionDef	Daemon :: readAddressFile (const char * subsys)		1052660	0					
ANR	1052662	CompoundStatement		1696:0:44629:46237	1052660	0					
ANR	1052663	IdentifierDeclStatement	char * addr_file ;	1697:1:44632:44647	1052660	0	True				
ANR	1052664	IdentifierDecl	* addr_file		1052660	0					
ANR	1052665	IdentifierDeclType	char *		1052660	0					
ANR	1052666	Identifier	addr_file		1052660	1					
ANR	1052667	IdentifierDeclStatement	FILE * addr_fp ;	1698:1:44650:44663	1052660	1	True				
ANR	1052668	IdentifierDecl	* addr_fp		1052660	0					
ANR	1052669	IdentifierDeclType	FILE *		1052660	0					
ANR	1052670	Identifier	addr_fp		1052660	1					
ANR	1052671	IdentifierDeclStatement	MyString param_name ;	1699:1:44666:44685	1052660	2	True				
ANR	1052672	IdentifierDecl	param_name		1052660	0					
ANR	1052673	IdentifierDeclType	MyString		1052660	0					
ANR	1052674	Identifier	param_name		1052660	1					
ANR	1052675	IdentifierDeclStatement	MyString buf ;	1700:1:44688:44700	1052660	3	True				
ANR	1052676	IdentifierDecl	buf		1052660	0					
ANR	1052677	IdentifierDeclType	MyString		1052660	0					
ANR	1052678	Identifier	buf		1052660	1					
ANR	1052679	IdentifierDeclStatement	bool rval = false ;	1701:1:44703:44720	1052660	4	True				
ANR	1052680	IdentifierDecl	rval = false		1052660	0					
ANR	1052681	IdentifierDeclType	bool		1052660	0					
ANR	1052682	Identifier	rval		1052660	1					
ANR	1052683	AssignmentExpression	rval = false		1052660	2		=			
ANR	1052684	Identifier	false		1052660	0					
ANR	1052685	Identifier	false		1052660	1					
ANR	1052686	ExpressionStatement	"param_name . sprintf ( ""%s_ADDRESS_FILE"" , subsys )"	1703:1:44724:44771	1052660	5	True				
ANR	1052687	CallExpression	"param_name . sprintf ( ""%s_ADDRESS_FILE"" , subsys )"		1052660	0					
ANR	1052688	Callee	param_name . sprintf		1052660	0					
ANR	1052689	MemberAccess	param_name . sprintf		1052660	0					
ANR	1052690	Identifier	param_name		1052660	0					
ANR	1052691	Identifier	sprintf		1052660	1					
ANR	1052692	ArgumentList	"""%s_ADDRESS_FILE"""		1052660	1					
ANR	1052693	Argument	"""%s_ADDRESS_FILE"""		1052660	0					
ANR	1052694	PrimaryExpression	"""%s_ADDRESS_FILE"""		1052660	0					
ANR	1052695	Argument	subsys		1052660	1					
ANR	1052696	Identifier	subsys		1052660	0					
ANR	1052697	ExpressionStatement	addr_file = param ( param_name . Value ( ) )	1704:1:44774:44813	1052660	6	True				
ANR	1052698	AssignmentExpression	addr_file = param ( param_name . Value ( ) )		1052660	0		=			
ANR	1052699	Identifier	addr_file		1052660	0					
ANR	1052700	CallExpression	param ( param_name . Value ( ) )		1052660	1					
ANR	1052701	Callee	param		1052660	0					
ANR	1052702	Identifier	param		1052660	0					
ANR	1052703	ArgumentList	param_name . Value ( )		1052660	1					
ANR	1052704	Argument	param_name . Value ( )		1052660	0					
ANR	1052705	CallExpression	param_name . Value ( )		1052660	0					
ANR	1052706	Callee	param_name . Value		1052660	0					
ANR	1052707	MemberAccess	param_name . Value		1052660	0					
ANR	1052708	Identifier	param_name		1052660	0					
ANR	1052709	Identifier	Value		1052660	1					
ANR	1052710	ArgumentList			1052660	1					
ANR	1052711	IfStatement	if ( ! addr_file )		1052660	7					
ANR	1052712	Condition	! addr_file	1705:5:44820:44830	1052660	0	True				
ANR	1052713	UnaryOperationExpression	! addr_file		1052660	0					
ANR	1052714	UnaryOperator	!		1052660	0					
ANR	1052715	Identifier	addr_file		1052660	1					
ANR	1052716	CompoundStatement		10:19:204:204	1052660	1					
ANR	1052717	ReturnStatement	return false ;	1706:2:44838:44850	1052660	0	True				
ANR	1052718	Identifier	false		1052660	0					
ANR	1052719	Statement	dprintf	1709:1:44857:44863	1052660	8	True				
ANR	1052720	Statement	(	1709:8:44864:44864	1052660	9	True				
ANR	1052721	Statement	D_HOSTNAME	1709:10:44866:44875	1052660	10	True				
ANR	1052722	Statement	","	1709:20:44876:44876	1052660	11	True				
ANR	1052723	Statement	"""Finding address for local daemon, """	1709:22:44878:44913	1052660	12	True				
ANR	1052724	Statement	"""%s is \\""%s\\""\\n"""	1710:4:44919:44934	1052660	13	True				
ANR	1052725	Statement	","	1710:20:44935:44935	1052660	14	True				
ANR	1052726	Statement	param_name	1710:22:44937:44946	1052660	15	True				
ANR	1052727	Statement	.	1710:32:44947:44947	1052660	16	True				
ANR	1052728	Statement	Value	1710:33:44948:44952	1052660	17	True				
ANR	1052729	Statement	(	1710:38:44953:44953	1052660	18	True				
ANR	1052730	Statement	)	1710:39:44954:44954	1052660	19	True				
ANR	1052731	Statement	","	1710:40:44955:44955	1052660	20	True				
ANR	1052732	Statement	addr_file	1710:42:44957:44965	1052660	21	True				
ANR	1052733	Statement	)	1710:52:44967:44967	1052660	22	True				
ANR	1052734	ExpressionStatement		1710:53:44968:44968	1052660	23	True				
ANR	1052735	IfStatement	"if ( ! ( addr_fp = safe_fopen_wrapper_follow ( addr_file , ""r"" ) ) )"		1052660	24					
ANR	1052736	Condition	"! ( addr_fp = safe_fopen_wrapper_follow ( addr_file , ""r"" ) )"	1712:5:44976:45030	1052660	0	True				
ANR	1052737	UnaryOperationExpression	"! ( addr_fp = safe_fopen_wrapper_follow ( addr_file , ""r"" ) )"		1052660	0					
ANR	1052738	UnaryOperator	!		1052660	0					
ANR	1052739	AssignmentExpression	"addr_fp = safe_fopen_wrapper_follow ( addr_file , ""r"" )"		1052660	1		=			
ANR	1052740	Identifier	addr_fp		1052660	0					
ANR	1052741	CallExpression	"safe_fopen_wrapper_follow ( addr_file , ""r"" )"		1052660	1					
ANR	1052742	Callee	safe_fopen_wrapper_follow		1052660	0					
ANR	1052743	Identifier	safe_fopen_wrapper_follow		1052660	0					
ANR	1052744	ArgumentList	addr_file		1052660	1					
ANR	1052745	Argument	addr_file		1052660	0					
ANR	1052746	Identifier	addr_file		1052660	0					
ANR	1052747	Argument	"""r"""		1052660	1					
ANR	1052748	PrimaryExpression	"""r"""		1052660	0					
ANR	1052749	CompoundStatement		17:63:404:404	1052660	1					
ANR	1052750	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Failed to open address file %s: %s (errno %d)\\n"" , addr_file , strerror ( errno ) , errno )"	1713:2:45038:45155	1052660	0	True				
ANR	1052751	CallExpression	"dprintf ( D_HOSTNAME , ""Failed to open address file %s: %s (errno %d)\\n"" , addr_file , strerror ( errno ) , errno )"		1052660	0					
ANR	1052752	Callee	dprintf		1052660	0					
ANR	1052753	Identifier	dprintf		1052660	0					
ANR	1052754	ArgumentList	D_HOSTNAME		1052660	1					
ANR	1052755	Argument	D_HOSTNAME		1052660	0					
ANR	1052756	Identifier	D_HOSTNAME		1052660	0					
ANR	1052757	Argument	"""Failed to open address file %s: %s (errno %d)\\n"""		1052660	1					
ANR	1052758	PrimaryExpression	"""Failed to open address file %s: %s (errno %d)\\n"""		1052660	0					
ANR	1052759	Argument	addr_file		1052660	2					
ANR	1052760	Identifier	addr_file		1052660	0					
ANR	1052761	Argument	strerror ( errno )		1052660	3					
ANR	1052762	CallExpression	strerror ( errno )		1052660	0					
ANR	1052763	Callee	strerror		1052660	0					
ANR	1052764	Identifier	strerror		1052660	0					
ANR	1052765	ArgumentList	errno		1052660	1					
ANR	1052766	Argument	errno		1052660	0					
ANR	1052767	Identifier	errno		1052660	0					
ANR	1052768	Argument	errno		1052660	4					
ANR	1052769	Identifier	errno		1052660	0					
ANR	1052770	ExpressionStatement	free ( addr_file )	1716:2:45159:45176	1052660	1	True				
ANR	1052771	CallExpression	free ( addr_file )		1052660	0					
ANR	1052772	Callee	free		1052660	0					
ANR	1052773	Identifier	free		1052660	0					
ANR	1052774	ArgumentList	addr_file		1052660	1					
ANR	1052775	Argument	addr_file		1052660	0					
ANR	1052776	Identifier	addr_file		1052660	0					
ANR	1052777	ReturnStatement	return false ;	1717:2:45180:45192	1052660	2	True				
ANR	1052778	Identifier	false		1052660	0					
ANR	1052779	ExpressionStatement	free ( addr_file )	1721:1:45277:45294	1052660	25	True				
ANR	1052780	CallExpression	free ( addr_file )		1052660	0					
ANR	1052781	Callee	free		1052660	0					
ANR	1052782	Identifier	free		1052660	0					
ANR	1052783	ArgumentList	addr_file		1052660	1					
ANR	1052784	Argument	addr_file		1052660	0					
ANR	1052785	Identifier	addr_file		1052660	0					
ANR	1052786	ExpressionStatement	addr_file = NULL	1722:1:45297:45313	1052660	26	True				
ANR	1052787	AssignmentExpression	addr_file = NULL		1052660	0		=			
ANR	1052788	Identifier	addr_file		1052660	0					
ANR	1052789	Identifier	NULL		1052660	1					
ANR	1052790	IfStatement	if ( ! buf . readLine ( addr_fp ) )		1052660	27					
ANR	1052791	Condition	! buf . readLine ( addr_fp )	1725:5:45354:45376	1052660	0	True				
ANR	1052792	UnaryOperationExpression	! buf . readLine ( addr_fp )		1052660	0					
ANR	1052793	UnaryOperator	!		1052660	0					
ANR	1052794	CallExpression	buf . readLine ( addr_fp )		1052660	1					
ANR	1052795	Callee	buf . readLine		1052660	0					
ANR	1052796	MemberAccess	buf . readLine		1052660	0					
ANR	1052797	Identifier	buf		1052660	0					
ANR	1052798	Identifier	readLine		1052660	1					
ANR	1052799	ArgumentList	addr_fp		1052660	1					
ANR	1052800	Argument	addr_fp		1052660	0					
ANR	1052801	Identifier	addr_fp		1052660	0					
ANR	1052802	CompoundStatement		30:31:750:750	1052660	1					
ANR	1052803	ExpressionStatement	"dprintf ( D_HOSTNAME , ""address file contained no data\\n"" )"	1726:2:45384:45441	1052660	0	True				
ANR	1052804	CallExpression	"dprintf ( D_HOSTNAME , ""address file contained no data\\n"" )"		1052660	0					
ANR	1052805	Callee	dprintf		1052660	0					
ANR	1052806	Identifier	dprintf		1052660	0					
ANR	1052807	ArgumentList	D_HOSTNAME		1052660	1					
ANR	1052808	Argument	D_HOSTNAME		1052660	0					
ANR	1052809	Identifier	D_HOSTNAME		1052660	0					
ANR	1052810	Argument	"""address file contained no data\\n"""		1052660	1					
ANR	1052811	PrimaryExpression	"""address file contained no data\\n"""		1052660	0					
ANR	1052812	ExpressionStatement	fclose ( addr_fp )	1727:2:45445:45462	1052660	1	True				
ANR	1052813	CallExpression	fclose ( addr_fp )		1052660	0					
ANR	1052814	Callee	fclose		1052660	0					
ANR	1052815	Identifier	fclose		1052660	0					
ANR	1052816	ArgumentList	addr_fp		1052660	1					
ANR	1052817	Argument	addr_fp		1052660	0					
ANR	1052818	Identifier	addr_fp		1052660	0					
ANR	1052819	ReturnStatement	return false ;	1728:2:45466:45478	1052660	2	True				
ANR	1052820	Identifier	false		1052660	0					
ANR	1052821	ExpressionStatement	buf . chomp ( )	1730:1:45484:45495	1052660	28	True				
ANR	1052822	CallExpression	buf . chomp ( )		1052660	0					
ANR	1052823	Callee	buf . chomp		1052660	0					
ANR	1052824	MemberAccess	buf . chomp		1052660	0					
ANR	1052825	Identifier	buf		1052660	0					
ANR	1052826	Identifier	chomp		1052660	1					
ANR	1052827	ArgumentList			1052660	1					
ANR	1052828	IfStatement	if ( is_valid_sinful ( buf . Value ( ) ) )		1052660	29					
ANR	1052829	Condition	is_valid_sinful ( buf . Value ( ) )	1731:5:45502:45529	1052660	0	True				
ANR	1052830	CallExpression	is_valid_sinful ( buf . Value ( ) )		1052660	0					
ANR	1052831	Callee	is_valid_sinful		1052660	0					
ANR	1052832	Identifier	is_valid_sinful		1052660	0					
ANR	1052833	ArgumentList	buf . Value ( )		1052660	1					
ANR	1052834	Argument	buf . Value ( )		1052660	0					
ANR	1052835	CallExpression	buf . Value ( )		1052660	0					
ANR	1052836	Callee	buf . Value		1052660	0					
ANR	1052837	MemberAccess	buf . Value		1052660	0					
ANR	1052838	Identifier	buf		1052660	0					
ANR	1052839	Identifier	Value		1052660	1					
ANR	1052840	ArgumentList			1052660	1					
ANR	1052841	CompoundStatement		36:36:903:903	1052660	1					
ANR	1052842	Statement	dprintf	1732:2:45537:45543	1052660	0	True				
ANR	1052843	Statement	(	1732:9:45544:45544	1052660	1	True				
ANR	1052844	Statement	D_HOSTNAME	1732:11:45546:45555	1052660	2	True				
ANR	1052845	Statement	","	1732:21:45556:45556	1052660	3	True				
ANR	1052846	Statement	"""Found valid address \\""%s\\"" in """	1732:23:45558:45589	1052660	4	True				
ANR	1052847	Statement	"""local address file\\n"""	1733:5:45596:45617	1052660	5	True				
ANR	1052848	Statement	","	1733:27:45618:45618	1052660	6	True				
ANR	1052849	Statement	buf	1733:29:45620:45622	1052660	7	True				
ANR	1052850	Statement	.	1733:32:45623:45623	1052660	8	True				
ANR	1052851	Statement	Value	1733:33:45624:45628	1052660	9	True				
ANR	1052852	Statement	(	1733:38:45629:45629	1052660	10	True				
ANR	1052853	Statement	)	1733:39:45630:45630	1052660	11	True				
ANR	1052854	Statement	)	1733:41:45632:45632	1052660	12	True				
ANR	1052855	ExpressionStatement		1733:42:45633:45633	1052660	13	True				
ANR	1052856	ExpressionStatement	New_addr ( strnewp ( buf . Value ( ) ) )	1734:2:45637:45669	1052660	14	True				
ANR	1052857	CallExpression	New_addr ( strnewp ( buf . Value ( ) ) )		1052660	0					
ANR	1052858	Callee	New_addr		1052660	0					
ANR	1052859	Identifier	New_addr		1052660	0					
ANR	1052860	ArgumentList	strnewp ( buf . Value ( ) )		1052660	1					
ANR	1052861	Argument	strnewp ( buf . Value ( ) )		1052660	0					
ANR	1052862	CallExpression	strnewp ( buf . Value ( ) )		1052660	0					
ANR	1052863	Callee	strnewp		1052660	0					
ANR	1052864	Identifier	strnewp		1052660	0					
ANR	1052865	ArgumentList	buf . Value ( )		1052660	1					
ANR	1052866	Argument	buf . Value ( )		1052660	0					
ANR	1052867	CallExpression	buf . Value ( )		1052660	0					
ANR	1052868	Callee	buf . Value		1052660	0					
ANR	1052869	MemberAccess	buf . Value		1052660	0					
ANR	1052870	Identifier	buf		1052660	0					
ANR	1052871	Identifier	Value		1052660	1					
ANR	1052872	ArgumentList			1052660	1					
ANR	1052873	ExpressionStatement	rval = true	1735:2:45673:45684	1052660	15	True				
ANR	1052874	AssignmentExpression	rval = true		1052660	0		=			
ANR	1052875	Identifier	rval		1052660	0					
ANR	1052876	Identifier	true		1052660	1					
ANR	1052877	IfStatement	if ( buf . readLine ( addr_fp ) )		1052660	30					
ANR	1052878	Condition	buf . readLine ( addr_fp )	1740:5:45790:45810	1052660	0	True				
ANR	1052879	CallExpression	buf . readLine ( addr_fp )		1052660	0					
ANR	1052880	Callee	buf . readLine		1052660	0					
ANR	1052881	MemberAccess	buf . readLine		1052660	0					
ANR	1052882	Identifier	buf		1052660	0					
ANR	1052883	Identifier	readLine		1052660	1					
ANR	1052884	ArgumentList	addr_fp		1052660	1					
ANR	1052885	Argument	addr_fp		1052660	0					
ANR	1052886	Identifier	addr_fp		1052660	0					
ANR	1052887	CompoundStatement		45:29:1184:1184	1052660	1					
ANR	1052888	ExpressionStatement	buf . chomp ( )	1742:2:45845:45856	1052660	0	True				
ANR	1052889	CallExpression	buf . chomp ( )		1052660	0					
ANR	1052890	Callee	buf . chomp		1052660	0					
ANR	1052891	MemberAccess	buf . chomp		1052660	0					
ANR	1052892	Identifier	buf		1052660	0					
ANR	1052893	Identifier	chomp		1052660	1					
ANR	1052894	ArgumentList			1052660	1					
ANR	1052895	ExpressionStatement	New_version ( strnewp ( buf . Value ( ) ) )	1743:2:45860:45895	1052660	1	True				
ANR	1052896	CallExpression	New_version ( strnewp ( buf . Value ( ) ) )		1052660	0					
ANR	1052897	Callee	New_version		1052660	0					
ANR	1052898	Identifier	New_version		1052660	0					
ANR	1052899	ArgumentList	strnewp ( buf . Value ( ) )		1052660	1					
ANR	1052900	Argument	strnewp ( buf . Value ( ) )		1052660	0					
ANR	1052901	CallExpression	strnewp ( buf . Value ( ) )		1052660	0					
ANR	1052902	Callee	strnewp		1052660	0					
ANR	1052903	Identifier	strnewp		1052660	0					
ANR	1052904	ArgumentList	buf . Value ( )		1052660	1					
ANR	1052905	Argument	buf . Value ( )		1052660	0					
ANR	1052906	CallExpression	buf . Value ( )		1052660	0					
ANR	1052907	Callee	buf . Value		1052660	0					
ANR	1052908	MemberAccess	buf . Value		1052660	0					
ANR	1052909	Identifier	buf		1052660	0					
ANR	1052910	Identifier	Value		1052660	1					
ANR	1052911	ArgumentList			1052660	1					
ANR	1052912	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Found version string \\""%s\\"" in local address file\\n"" , buf . Value ( ) )"	1744:2:45899:45998	1052660	2	True				
ANR	1052913	CallExpression	"dprintf ( D_HOSTNAME , ""Found version string \\""%s\\"" in local address file\\n"" , buf . Value ( ) )"		1052660	0					
ANR	1052914	Callee	dprintf		1052660	0					
ANR	1052915	Identifier	dprintf		1052660	0					
ANR	1052916	ArgumentList	D_HOSTNAME		1052660	1					
ANR	1052917	Argument	D_HOSTNAME		1052660	0					
ANR	1052918	Identifier	D_HOSTNAME		1052660	0					
ANR	1052919	Argument	"""Found version string \\""%s\\"" in local address file\\n"""		1052660	1					
ANR	1052920	PrimaryExpression	"""Found version string \\""%s\\"" in local address file\\n"""		1052660	0					
ANR	1052921	Argument	buf . Value ( )		1052660	2					
ANR	1052922	CallExpression	buf . Value ( )		1052660	0					
ANR	1052923	Callee	buf . Value		1052660	0					
ANR	1052924	MemberAccess	buf . Value		1052660	0					
ANR	1052925	Identifier	buf		1052660	0					
ANR	1052926	Identifier	Value		1052660	1					
ANR	1052927	ArgumentList			1052660	1					
ANR	1052928	IfStatement	if ( buf . readLine ( addr_fp ) )		1052660	3					
ANR	1052929	Condition	buf . readLine ( addr_fp )	1747:6:46006:46026	1052660	0	True				
ANR	1052930	CallExpression	buf . readLine ( addr_fp )		1052660	0					
ANR	1052931	Callee	buf . readLine		1052660	0					
ANR	1052932	MemberAccess	buf . readLine		1052660	0					
ANR	1052933	Identifier	buf		1052660	0					
ANR	1052934	Identifier	readLine		1052660	1					
ANR	1052935	ArgumentList	addr_fp		1052660	1					
ANR	1052936	Argument	addr_fp		1052660	0					
ANR	1052937	Identifier	addr_fp		1052660	0					
ANR	1052938	CompoundStatement		52:30:1400:1400	1052660	1					
ANR	1052939	ExpressionStatement	buf . chomp ( )	1748:3:46035:46046	1052660	0	True				
ANR	1052940	CallExpression	buf . chomp ( )		1052660	0					
ANR	1052941	Callee	buf . chomp		1052660	0					
ANR	1052942	MemberAccess	buf . chomp		1052660	0					
ANR	1052943	Identifier	buf		1052660	0					
ANR	1052944	Identifier	chomp		1052660	1					
ANR	1052945	ArgumentList			1052660	1					
ANR	1052946	ExpressionStatement	New_platform ( strnewp ( buf . Value ( ) ) )	1749:3:46051:46087	1052660	1	True				
ANR	1052947	CallExpression	New_platform ( strnewp ( buf . Value ( ) ) )		1052660	0					
ANR	1052948	Callee	New_platform		1052660	0					
ANR	1052949	Identifier	New_platform		1052660	0					
ANR	1052950	ArgumentList	strnewp ( buf . Value ( ) )		1052660	1					
ANR	1052951	Argument	strnewp ( buf . Value ( ) )		1052660	0					
ANR	1052952	CallExpression	strnewp ( buf . Value ( ) )		1052660	0					
ANR	1052953	Callee	strnewp		1052660	0					
ANR	1052954	Identifier	strnewp		1052660	0					
ANR	1052955	ArgumentList	buf . Value ( )		1052660	1					
ANR	1052956	Argument	buf . Value ( )		1052660	0					
ANR	1052957	CallExpression	buf . Value ( )		1052660	0					
ANR	1052958	Callee	buf . Value		1052660	0					
ANR	1052959	MemberAccess	buf . Value		1052660	0					
ANR	1052960	Identifier	buf		1052660	0					
ANR	1052961	Identifier	Value		1052660	1					
ANR	1052962	ArgumentList			1052660	1					
ANR	1052963	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Found platform string \\""%s\\"" in local address file\\n"" , buf . Value ( ) )"	1750:3:46092:46194	1052660	2	True				
ANR	1052964	CallExpression	"dprintf ( D_HOSTNAME , ""Found platform string \\""%s\\"" in local address file\\n"" , buf . Value ( ) )"		1052660	0					
ANR	1052965	Callee	dprintf		1052660	0					
ANR	1052966	Identifier	dprintf		1052660	0					
ANR	1052967	ArgumentList	D_HOSTNAME		1052660	1					
ANR	1052968	Argument	D_HOSTNAME		1052660	0					
ANR	1052969	Identifier	D_HOSTNAME		1052660	0					
ANR	1052970	Argument	"""Found platform string \\""%s\\"" in local address file\\n"""		1052660	1					
ANR	1052971	PrimaryExpression	"""Found platform string \\""%s\\"" in local address file\\n"""		1052660	0					
ANR	1052972	Argument	buf . Value ( )		1052660	2					
ANR	1052973	CallExpression	buf . Value ( )		1052660	0					
ANR	1052974	Callee	buf . Value		1052660	0					
ANR	1052975	MemberAccess	buf . Value		1052660	0					
ANR	1052976	Identifier	buf		1052660	0					
ANR	1052977	Identifier	Value		1052660	1					
ANR	1052978	ArgumentList			1052660	1					
ANR	1052979	ExpressionStatement	fclose ( addr_fp )	1755:1:46204:46221	1052660	31	True				
ANR	1052980	CallExpression	fclose ( addr_fp )		1052660	0					
ANR	1052981	Callee	fclose		1052660	0					
ANR	1052982	Identifier	fclose		1052660	0					
ANR	1052983	ArgumentList	addr_fp		1052660	1					
ANR	1052984	Argument	addr_fp		1052660	0					
ANR	1052985	Identifier	addr_fp		1052660	0					
ANR	1052986	ReturnStatement	return rval ;	1756:1:46224:46235	1052660	32	True				
ANR	1052987	Identifier	rval		1052660	0					
ANR	1052988	ReturnType	bool		1052660	1					
ANR	1052989	Identifier	Daemon :: readAddressFile		1052660	2					
ANR	1052990	ParameterList	const char * subsys		1052660	3					
ANR	1052991	Parameter	const char * subsys	1695:25:44608:44625	1052660	0	True				
ANR	1052992	ParameterType	const char *		1052660	0					
ANR	1052993	Identifier	subsys		1052660	1					
ANR	1052994	CFGEntryNode	ENTRY		1052660		True				
ANR	1052995	CFGExitNode	EXIT		1052660		True				
ANR	1052996	Symbol	D_HOSTNAME		1052660						
ANR	1052997	Symbol	errno		1052660						
ANR	1052998	Symbol	NULL		1052660						
ANR	1052999	Symbol	buf . readLine		1052660						
ANR	1053000	Symbol	false		1052660						
ANR	1053001	Symbol	is_valid_sinful		1052660						
ANR	1053002	Symbol	addr_file		1052660						
ANR	1053003	Symbol	addr_fp		1052660						
ANR	1053004	Symbol	strerror		1052660						
ANR	1053005	Symbol	subsys		1052660						
ANR	1053006	Symbol	buf		1052660						
ANR	1053007	Symbol	param		1052660						
ANR	1053008	Symbol	buf . Value		1052660						
ANR	1053009	Symbol	true		1052660						
ANR	1053010	Symbol	strnewp		1052660						
ANR	1053011	Symbol	rval		1052660						
ANR	1053012	Symbol	param_name		1052660						
ANR	1053013	Symbol	param_name . Value		1052660						
ANR	1053014	Symbol	safe_fopen_wrapper_follow		1052660						
ANR	1053015	Function	Daemon :: readLocalClassAd	1759:0:46240:47381							
ANR	1053016	FunctionDef	Daemon :: readLocalClassAd (const char * subsys)		1053015	0					
ANR	1053017	CompoundStatement		1761:0:46292:47381	1053015	0					
ANR	1053018	IdentifierDeclStatement	char * addr_file ;	1762:1:46295:46310	1053015	0	True				
ANR	1053019	IdentifierDecl	* addr_file		1053015	0					
ANR	1053020	IdentifierDeclType	char *		1053015	0					
ANR	1053021	Identifier	addr_file		1053015	1					
ANR	1053022	IdentifierDeclStatement	FILE * addr_fp ;	1763:1:46313:46326	1053015	1	True				
ANR	1053023	IdentifierDecl	* addr_fp		1053015	0					
ANR	1053024	IdentifierDeclType	FILE *		1053015	0					
ANR	1053025	Identifier	addr_fp		1053015	1					
ANR	1053026	IdentifierDeclStatement	ClassAd * adFromFile ;	1764:1:46329:46348	1053015	2	True				
ANR	1053027	IdentifierDecl	* adFromFile		1053015	0					
ANR	1053028	IdentifierDeclType	ClassAd *		1053015	0					
ANR	1053029	Identifier	adFromFile		1053015	1					
ANR	1053030	IdentifierDeclStatement	MyString param_name ;	1765:1:46351:46370	1053015	3	True				
ANR	1053031	IdentifierDecl	param_name		1053015	0					
ANR	1053032	IdentifierDeclType	MyString		1053015	0					
ANR	1053033	Identifier	param_name		1053015	1					
ANR	1053034	IdentifierDeclStatement	MyString buf ;	1766:1:46373:46385	1053015	4	True				
ANR	1053035	IdentifierDecl	buf		1053015	0					
ANR	1053036	IdentifierDeclType	MyString		1053015	0					
ANR	1053037	Identifier	buf		1053015	1					
ANR	1053038	ExpressionStatement	"param_name . sprintf ( ""%s_DAEMON_AD_FILE"" , subsys )"	1768:1:46389:46438	1053015	5	True				
ANR	1053039	CallExpression	"param_name . sprintf ( ""%s_DAEMON_AD_FILE"" , subsys )"		1053015	0					
ANR	1053040	Callee	param_name . sprintf		1053015	0					
ANR	1053041	MemberAccess	param_name . sprintf		1053015	0					
ANR	1053042	Identifier	param_name		1053015	0					
ANR	1053043	Identifier	sprintf		1053015	1					
ANR	1053044	ArgumentList	"""%s_DAEMON_AD_FILE"""		1053015	1					
ANR	1053045	Argument	"""%s_DAEMON_AD_FILE"""		1053015	0					
ANR	1053046	PrimaryExpression	"""%s_DAEMON_AD_FILE"""		1053015	0					
ANR	1053047	Argument	subsys		1053015	1					
ANR	1053048	Identifier	subsys		1053015	0					
ANR	1053049	ExpressionStatement	addr_file = param ( param_name . Value ( ) )	1769:1:46441:46480	1053015	6	True				
ANR	1053050	AssignmentExpression	addr_file = param ( param_name . Value ( ) )		1053015	0		=			
ANR	1053051	Identifier	addr_file		1053015	0					
ANR	1053052	CallExpression	param ( param_name . Value ( ) )		1053015	1					
ANR	1053053	Callee	param		1053015	0					
ANR	1053054	Identifier	param		1053015	0					
ANR	1053055	ArgumentList	param_name . Value ( )		1053015	1					
ANR	1053056	Argument	param_name . Value ( )		1053015	0					
ANR	1053057	CallExpression	param_name . Value ( )		1053015	0					
ANR	1053058	Callee	param_name . Value		1053015	0					
ANR	1053059	MemberAccess	param_name . Value		1053015	0					
ANR	1053060	Identifier	param_name		1053015	0					
ANR	1053061	Identifier	Value		1053015	1					
ANR	1053062	ArgumentList			1053015	1					
ANR	1053063	IfStatement	if ( ! addr_file )		1053015	7					
ANR	1053064	Condition	! addr_file	1770:5:46487:46497	1053015	0	True				
ANR	1053065	UnaryOperationExpression	! addr_file		1053015	0					
ANR	1053066	UnaryOperator	!		1053015	0					
ANR	1053067	Identifier	addr_file		1053015	1					
ANR	1053068	CompoundStatement		10:19:208:208	1053015	1					
ANR	1053069	ReturnStatement	return false ;	1771:2:46505:46517	1053015	0	True				
ANR	1053070	Identifier	false		1053015	0					
ANR	1053071	Statement	dprintf	1774:1:46524:46530	1053015	8	True				
ANR	1053072	Statement	(	1774:8:46531:46531	1053015	9	True				
ANR	1053073	Statement	D_HOSTNAME	1774:10:46533:46542	1053015	10	True				
ANR	1053074	Statement	","	1774:20:46543:46543	1053015	11	True				
ANR	1053075	Statement	"""Finding classad for local daemon, """	1774:22:46545:46580	1053015	12	True				
ANR	1053076	Statement	"""%s is \\""%s\\""\\n"""	1775:4:46586:46601	1053015	13	True				
ANR	1053077	Statement	","	1775:20:46602:46602	1053015	14	True				
ANR	1053078	Statement	param_name	1775:22:46604:46613	1053015	15	True				
ANR	1053079	Statement	.	1775:32:46614:46614	1053015	16	True				
ANR	1053080	Statement	Value	1775:33:46615:46619	1053015	17	True				
ANR	1053081	Statement	(	1775:38:46620:46620	1053015	18	True				
ANR	1053082	Statement	)	1775:39:46621:46621	1053015	19	True				
ANR	1053083	Statement	","	1775:40:46622:46622	1053015	20	True				
ANR	1053084	Statement	addr_file	1775:42:46624:46632	1053015	21	True				
ANR	1053085	Statement	)	1775:52:46634:46634	1053015	22	True				
ANR	1053086	ExpressionStatement		1775:53:46635:46635	1053015	23	True				
ANR	1053087	IfStatement	"if ( ! ( addr_fp = safe_fopen_wrapper_follow ( addr_file , ""r"" ) ) )"		1053015	24					
ANR	1053088	Condition	"! ( addr_fp = safe_fopen_wrapper_follow ( addr_file , ""r"" ) )"	1777:5:46643:46697	1053015	0	True				
ANR	1053089	UnaryOperationExpression	"! ( addr_fp = safe_fopen_wrapper_follow ( addr_file , ""r"" ) )"		1053015	0					
ANR	1053090	UnaryOperator	!		1053015	0					
ANR	1053091	AssignmentExpression	"addr_fp = safe_fopen_wrapper_follow ( addr_file , ""r"" )"		1053015	1		=			
ANR	1053092	Identifier	addr_fp		1053015	0					
ANR	1053093	CallExpression	"safe_fopen_wrapper_follow ( addr_file , ""r"" )"		1053015	1					
ANR	1053094	Callee	safe_fopen_wrapper_follow		1053015	0					
ANR	1053095	Identifier	safe_fopen_wrapper_follow		1053015	0					
ANR	1053096	ArgumentList	addr_file		1053015	1					
ANR	1053097	Argument	addr_file		1053015	0					
ANR	1053098	Identifier	addr_file		1053015	0					
ANR	1053099	Argument	"""r"""		1053015	1					
ANR	1053100	PrimaryExpression	"""r"""		1053015	0					
ANR	1053101	CompoundStatement		17:63:408:408	1053015	1					
ANR	1053102	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Failed to open classad file %s: %s (errno %d)\\n"" , addr_file , strerror ( errno ) , errno )"	1778:2:46705:46822	1053015	0	True				
ANR	1053103	CallExpression	"dprintf ( D_HOSTNAME , ""Failed to open classad file %s: %s (errno %d)\\n"" , addr_file , strerror ( errno ) , errno )"		1053015	0					
ANR	1053104	Callee	dprintf		1053015	0					
ANR	1053105	Identifier	dprintf		1053015	0					
ANR	1053106	ArgumentList	D_HOSTNAME		1053015	1					
ANR	1053107	Argument	D_HOSTNAME		1053015	0					
ANR	1053108	Identifier	D_HOSTNAME		1053015	0					
ANR	1053109	Argument	"""Failed to open classad file %s: %s (errno %d)\\n"""		1053015	1					
ANR	1053110	PrimaryExpression	"""Failed to open classad file %s: %s (errno %d)\\n"""		1053015	0					
ANR	1053111	Argument	addr_file		1053015	2					
ANR	1053112	Identifier	addr_file		1053015	0					
ANR	1053113	Argument	strerror ( errno )		1053015	3					
ANR	1053114	CallExpression	strerror ( errno )		1053015	0					
ANR	1053115	Callee	strerror		1053015	0					
ANR	1053116	Identifier	strerror		1053015	0					
ANR	1053117	ArgumentList	errno		1053015	1					
ANR	1053118	Argument	errno		1053015	0					
ANR	1053119	Identifier	errno		1053015	0					
ANR	1053120	Argument	errno		1053015	4					
ANR	1053121	Identifier	errno		1053015	0					
ANR	1053122	ExpressionStatement	free ( addr_file )	1781:2:46826:46843	1053015	1	True				
ANR	1053123	CallExpression	free ( addr_file )		1053015	0					
ANR	1053124	Callee	free		1053015	0					
ANR	1053125	Identifier	free		1053015	0					
ANR	1053126	ArgumentList	addr_file		1053015	1					
ANR	1053127	Argument	addr_file		1053015	0					
ANR	1053128	Identifier	addr_file		1053015	0					
ANR	1053129	ReturnStatement	return false ;	1782:2:46847:46859	1053015	2	True				
ANR	1053130	Identifier	false		1053015	0					
ANR	1053131	ExpressionStatement	free ( addr_file )	1786:1:46944:46961	1053015	25	True				
ANR	1053132	CallExpression	free ( addr_file )		1053015	0					
ANR	1053133	Callee	free		1053015	0					
ANR	1053134	Identifier	free		1053015	0					
ANR	1053135	ArgumentList	addr_file		1053015	1					
ANR	1053136	Argument	addr_file		1053015	0					
ANR	1053137	Identifier	addr_file		1053015	0					
ANR	1053138	ExpressionStatement	addr_file = NULL	1787:1:46964:46980	1053015	26	True				
ANR	1053139	AssignmentExpression	addr_file = NULL		1053015	0		=			
ANR	1053140	Identifier	addr_file		1053015	0					
ANR	1053141	Identifier	NULL		1053015	1					
ANR	1053142	IdentifierDeclStatement	"int adIsEOF , errorReadingAd , adEmpty = 0 ;"	1789:1:46984:47024	1053015	27	True				
ANR	1053143	IdentifierDecl	adIsEOF		1053015	0					
ANR	1053144	IdentifierDeclType	int		1053015	0					
ANR	1053145	Identifier	adIsEOF		1053015	1					
ANR	1053146	IdentifierDecl	errorReadingAd		1053015	1					
ANR	1053147	IdentifierDeclType	int		1053015	0					
ANR	1053148	Identifier	errorReadingAd		1053015	1					
ANR	1053149	IdentifierDecl	adEmpty = 0		1053015	2					
ANR	1053150	IdentifierDeclType	int		1053015	0					
ANR	1053151	Identifier	adEmpty		1053015	1					
ANR	1053152	AssignmentExpression	adEmpty = 0		1053015	2		=			
ANR	1053153	Identifier	adEmpty		1053015	0					
ANR	1053154	PrimaryExpression	0		1053015	1					
ANR	1053155	ExpressionStatement	"adFromFile = new ClassAd ( addr_fp , ""..."" , adIsEOF , errorReadingAd , adEmpty )"	1790:1:47027:47101	1053015	28	True				
ANR	1053156	AssignmentExpression	"adFromFile = new ClassAd ( addr_fp , ""..."" , adIsEOF , errorReadingAd , adEmpty )"		1053015	0		=			
ANR	1053157	Identifier	adFromFile		1053015	0					
ANR	1053158	Expression	"addr_fp , ""..."" , adIsEOF , errorReadingAd , adEmpty"		1053015	1					
ANR	1053159	Identifier	addr_fp		1053015	0					
ANR	1053160	Expression	"""..."" , adIsEOF , errorReadingAd , adEmpty"		1053015	1					
ANR	1053161	PrimaryExpression	"""..."""		1053015	0					
ANR	1053162	Expression	"adIsEOF , errorReadingAd , adEmpty"		1053015	1					
ANR	1053163	Identifier	adIsEOF		1053015	0					
ANR	1053164	Expression	"errorReadingAd , adEmpty"		1053015	1					
ANR	1053165	Identifier	errorReadingAd		1053015	0					
ANR	1053166	Identifier	adEmpty		1053015	1					
ANR	1053167	ExpressionStatement	ASSERT ( adFromFile )	1791:1:47104:47122	1053015	29	True				
ANR	1053168	CallExpression	ASSERT ( adFromFile )		1053015	0					
ANR	1053169	Callee	ASSERT		1053015	0					
ANR	1053170	Identifier	ASSERT		1053015	0					
ANR	1053171	ArgumentList	adFromFile		1053015	1					
ANR	1053172	Argument	adFromFile		1053015	0					
ANR	1053173	Identifier	adFromFile		1053015	0					
ANR	1053174	IfStatement	if ( ! m_daemon_ad_ptr )		1053015	30					
ANR	1053175	Condition	! m_daemon_ad_ptr	1792:4:47128:47143	1053015	0	True				
ANR	1053176	UnaryOperationExpression	! m_daemon_ad_ptr		1053015	0					
ANR	1053177	UnaryOperator	!		1053015	0					
ANR	1053178	Identifier	m_daemon_ad_ptr		1053015	1					
ANR	1053179	CompoundStatement		32:22:853:853	1053015	1					
ANR	1053180	ExpressionStatement	m_daemon_ad_ptr = new ClassAd ( * adFromFile )	1793:2:47150:47192	1053015	0	True				
ANR	1053181	AssignmentExpression	m_daemon_ad_ptr = new ClassAd ( * adFromFile )		1053015	0		=			
ANR	1053182	Identifier	m_daemon_ad_ptr		1053015	0					
ANR	1053183	UnaryOperationExpression	* adFromFile		1053015	1					
ANR	1053184	UnaryOperator	*		1053015	0					
ANR	1053185	Identifier	adFromFile		1053015	1					
ANR	1053186	IdentifierDeclStatement	counted_ptr < ClassAd > smart_ad_ptr ( adFromFile ) ;	1795:1:47198:47243	1053015	31	True				
ANR	1053187	IdentifierDecl	smart_ad_ptr ( adFromFile )		1053015	0					
ANR	1053188	IdentifierDeclType	counted_ptr < ClassAd >		1053015	0					
ANR	1053189	Identifier	smart_ad_ptr		1053015	1					
ANR	1053190	Identifier	adFromFile		1053015	2					
ANR	1053191	ExpressionStatement	fclose ( addr_fp )	1797:1:47248:47263	1053015	32	True				
ANR	1053192	CallExpression	fclose ( addr_fp )		1053015	0					
ANR	1053193	Callee	fclose		1053015	0					
ANR	1053194	Identifier	fclose		1053015	0					
ANR	1053195	ArgumentList	addr_fp		1053015	1					
ANR	1053196	Argument	addr_fp		1053015	0					
ANR	1053197	Identifier	addr_fp		1053015	0					
ANR	1053198	IfStatement	if ( errorReadingAd )		1053015	33					
ANR	1053199	Condition	errorReadingAd	1799:4:47270:47283	1053015	0	True				
ANR	1053200	Identifier	errorReadingAd		1053015	0					
ANR	1053201	CompoundStatement		39:20:993:993	1053015	1					
ANR	1053202	ReturnStatement	return false ;	1800:2:47290:47302	1053015	0	True				
ANR	1053203	Identifier	false		1053015	0					
ANR	1053204	ReturnStatement	return getInfoFromAd ( smart_ad_ptr ) ;	1803:1:47343:47379	1053015	34	True				
ANR	1053205	CallExpression	getInfoFromAd ( smart_ad_ptr )		1053015	0					
ANR	1053206	Callee	getInfoFromAd		1053015	0					
ANR	1053207	Identifier	getInfoFromAd		1053015	0					
ANR	1053208	ArgumentList	smart_ad_ptr		1053015	1					
ANR	1053209	Argument	smart_ad_ptr		1053015	0					
ANR	1053210	Identifier	smart_ad_ptr		1053015	0					
ANR	1053211	ReturnType	bool		1053015	1					
ANR	1053212	Identifier	Daemon :: readLocalClassAd		1053015	2					
ANR	1053213	ParameterList	const char * subsys		1053015	3					
ANR	1053214	Parameter	const char * subsys	1760:26:46271:46288	1053015	0	True				
ANR	1053215	ParameterType	const char *		1053015	0					
ANR	1053216	Identifier	subsys		1053015	1					
ANR	1053217	CFGEntryNode	ENTRY		1053015		True				
ANR	1053218	CFGExitNode	EXIT		1053015		True				
ANR	1053219	Symbol	D_HOSTNAME		1053015						
ANR	1053220	Symbol	errno		1053015						
ANR	1053221	Symbol	NULL		1053015						
ANR	1053222	Symbol	false		1053015						
ANR	1053223	Symbol	adEmpty		1053015						
ANR	1053224	Symbol	addr_file		1053015						
ANR	1053225	Symbol	addr_fp		1053015						
ANR	1053226	Symbol	smart_ad_ptr		1053015						
ANR	1053227	Symbol	strerror		1053015						
ANR	1053228	Symbol	getInfoFromAd		1053015						
ANR	1053229	Symbol	subsys		1053015						
ANR	1053230	Symbol	* adFromFile		1053015						
ANR	1053231	Symbol	buf		1053015						
ANR	1053232	Symbol	m_daemon_ad_ptr		1053015						
ANR	1053233	Symbol	adIsEOF		1053015						
ANR	1053234	Symbol	param		1053015						
ANR	1053235	Symbol	errorReadingAd		1053015						
ANR	1053236	Symbol	adFromFile		1053015						
ANR	1053237	Symbol	param_name		1053015						
ANR	1053238	Symbol	param_name . Value		1053015						
ANR	1053239	Symbol	safe_fopen_wrapper_follow		1053015						
ANR	1053240	Function	Daemon :: hasUDPCommandPort	1806:0:47384:47490							
ANR	1053241	FunctionDef	Daemon :: hasUDPCommandPort ()		1053240	0					
ANR	1053242	CompoundStatement		1808:0:47417:47490	1053240	0					
ANR	1053243	IfStatement	if ( ! _tried_locate )		1053240	0					
ANR	1053244	Condition	! _tried_locate	1809:5:47424:47437	1053240	0	True				
ANR	1053245	UnaryOperationExpression	! _tried_locate		1053240	0					
ANR	1053246	UnaryOperator	!		1053240	0					
ANR	1053247	Identifier	_tried_locate		1053240	1					
ANR	1053248	CompoundStatement		2:22:23:23	1053240	1					
ANR	1053249	ExpressionStatement	locate ( )	1810:2:47445:47453	1053240	0	True				
ANR	1053250	CallExpression	locate ( )		1053240	0					
ANR	1053251	Callee	locate		1053240	0					
ANR	1053252	Identifier	locate		1053240	0					
ANR	1053253	ArgumentList			1053240	1					
ANR	1053254	ReturnStatement	return m_has_udp_command_port ;	1812:1:47459:47488	1053240	1	True				
ANR	1053255	Identifier	m_has_udp_command_port		1053240	0					
ANR	1053256	ReturnType	bool		1053240	1					
ANR	1053257	Identifier	Daemon :: hasUDPCommandPort		1053240	2					
ANR	1053258	ParameterList			1053240	3					
ANR	1053259	CFGEntryNode	ENTRY		1053240		True				
ANR	1053260	CFGExitNode	EXIT		1053240		True				
ANR	1053261	Symbol	_tried_locate		1053240						
ANR	1053262	Symbol	m_has_udp_command_port		1053240						
ANR	1053263	Function	Daemon :: getInfoFromAd	1815:0:47493:49094							
ANR	1053264	FunctionDef	Daemon :: getInfoFromAd (const ClassAd * ad)		1053263	0					
ANR	1053265	CompoundStatement		1817:0:47542:49094	1053263	0					
ANR	1053266	IdentifierDeclStatement	"MyString buf = """" ;"	1818:1:47545:47562	1053263	0	True				
ANR	1053267	IdentifierDecl	"buf = """""		1053263	0					
ANR	1053268	IdentifierDeclType	MyString		1053263	0					
ANR	1053269	Identifier	buf		1053263	1					
ANR	1053270	AssignmentExpression	"buf = """""		1053263	2		=			
ANR	1053271	Identifier	buf		1053263	0					
ANR	1053272	PrimaryExpression	""""""		1053263	1					
ANR	1053273	IdentifierDeclStatement	"MyString buf2 = """" ;"	1819:1:47565:47583	1053263	1	True				
ANR	1053274	IdentifierDecl	"buf2 = """""		1053263	0					
ANR	1053275	IdentifierDeclType	MyString		1053263	0					
ANR	1053276	Identifier	buf2		1053263	1					
ANR	1053277	AssignmentExpression	"buf2 = """""		1053263	2		=			
ANR	1053278	Identifier	buf2		1053263	0					
ANR	1053279	PrimaryExpression	""""""		1053263	1					
ANR	1053280	IdentifierDeclStatement	"MyString addr_attr_name = """" ;"	1820:1:47586:47614	1053263	2	True				
ANR	1053281	IdentifierDecl	"addr_attr_name = """""		1053263	0					
ANR	1053282	IdentifierDeclType	MyString		1053263	0					
ANR	1053283	Identifier	addr_attr_name		1053263	1					
ANR	1053284	AssignmentExpression	"addr_attr_name = """""		1053263	2		=			
ANR	1053285	Identifier	addr_attr_name		1053263	0					
ANR	1053286	PrimaryExpression	""""""		1053263	1					
ANR	1053287	IdentifierDeclStatement	bool ret_val = true ;	1823:1:47719:47738	1053263	3	True				
ANR	1053288	IdentifierDecl	ret_val = true		1053263	0					
ANR	1053289	IdentifierDeclType	bool		1053263	0					
ANR	1053290	Identifier	ret_val		1053263	1					
ANR	1053291	AssignmentExpression	ret_val = true		1053263	2		=			
ANR	1053292	Identifier	true		1053263	0					
ANR	1053293	Identifier	true		1053263	1					
ANR	1053294	IdentifierDeclStatement	bool found_addr = false ;	1824:1:47741:47764	1053263	4	True				
ANR	1053295	IdentifierDecl	found_addr = false		1053263	0					
ANR	1053296	IdentifierDeclType	bool		1053263	0					
ANR	1053297	Identifier	found_addr		1053263	1					
ANR	1053298	AssignmentExpression	found_addr = false		1053263	2		=			
ANR	1053299	Identifier	false		1053263	0					
ANR	1053300	Identifier	false		1053263	1					
ANR	1053301	ExpressionStatement	"initStringFromAd ( ad , ATTR_NAME , & _name )"	1828:1:47896:47937	1053263	5	True				
ANR	1053302	CallExpression	"initStringFromAd ( ad , ATTR_NAME , & _name )"		1053263	0					
ANR	1053303	Callee	initStringFromAd		1053263	0					
ANR	1053304	Identifier	initStringFromAd		1053263	0					
ANR	1053305	ArgumentList	ad		1053263	1					
ANR	1053306	Argument	ad		1053263	0					
ANR	1053307	Identifier	ad		1053263	0					
ANR	1053308	Argument	ATTR_NAME		1053263	1					
ANR	1053309	Identifier	ATTR_NAME		1053263	0					
ANR	1053310	Argument	& _name		1053263	2					
ANR	1053311	UnaryOperationExpression	& _name		1053263	0					
ANR	1053312	UnaryOperator	&		1053263	0					
ANR	1053313	Identifier	_name		1053263	1					
ANR	1053314	ExpressionStatement	"buf . sprintf ( ""%sIpAddr"" , _subsys )"	1831:1:47978:48012	1053263	6	True				
ANR	1053315	CallExpression	"buf . sprintf ( ""%sIpAddr"" , _subsys )"		1053263	0					
ANR	1053316	Callee	buf . sprintf		1053263	0					
ANR	1053317	MemberAccess	buf . sprintf		1053263	0					
ANR	1053318	Identifier	buf		1053263	0					
ANR	1053319	Identifier	sprintf		1053263	1					
ANR	1053320	ArgumentList	"""%sIpAddr"""		1053263	1					
ANR	1053321	Argument	"""%sIpAddr"""		1053263	0					
ANR	1053322	PrimaryExpression	"""%sIpAddr"""		1053263	0					
ANR	1053323	Argument	_subsys		1053263	1					
ANR	1053324	Identifier	_subsys		1053263	0					
ANR	1053325	IfStatement	"if ( ad -> LookupString ( buf . Value ( ) , buf2 ) )"		1053263	7					
ANR	1053326	Condition	"ad -> LookupString ( buf . Value ( ) , buf2 )"	1832:6:48020:48056	1053263	0	True				
ANR	1053327	CallExpression	"ad -> LookupString ( buf . Value ( ) , buf2 )"		1053263	0					
ANR	1053328	Callee	ad -> LookupString		1053263	0					
ANR	1053329	PtrMemberAccess	ad -> LookupString		1053263	0					
ANR	1053330	Identifier	ad		1053263	0					
ANR	1053331	Identifier	LookupString		1053263	1					
ANR	1053332	ArgumentList	buf . Value ( )		1053263	1					
ANR	1053333	Argument	buf . Value ( )		1053263	0					
ANR	1053334	CallExpression	buf . Value ( )		1053263	0					
ANR	1053335	Callee	buf . Value		1053263	0					
ANR	1053336	MemberAccess	buf . Value		1053263	0					
ANR	1053337	Identifier	buf		1053263	0					
ANR	1053338	Identifier	Value		1053263	1					
ANR	1053339	ArgumentList			1053263	1					
ANR	1053340	Argument	buf2		1053263	1					
ANR	1053341	Identifier	buf2		1053263	0					
ANR	1053342	CompoundStatement		16:46:517:517	1053263	1					
ANR	1053343	ExpressionStatement	New_addr ( strnewp ( buf2 . Value ( ) ) )	1833:2:48064:48099	1053263	0	True				
ANR	1053344	CallExpression	New_addr ( strnewp ( buf2 . Value ( ) ) )		1053263	0					
ANR	1053345	Callee	New_addr		1053263	0					
ANR	1053346	Identifier	New_addr		1053263	0					
ANR	1053347	ArgumentList	strnewp ( buf2 . Value ( ) )		1053263	1					
ANR	1053348	Argument	strnewp ( buf2 . Value ( ) )		1053263	0					
ANR	1053349	CallExpression	strnewp ( buf2 . Value ( ) )		1053263	0					
ANR	1053350	Callee	strnewp		1053263	0					
ANR	1053351	Identifier	strnewp		1053263	0					
ANR	1053352	ArgumentList	buf2 . Value ( )		1053263	1					
ANR	1053353	Argument	buf2 . Value ( )		1053263	0					
ANR	1053354	CallExpression	buf2 . Value ( )		1053263	0					
ANR	1053355	Callee	buf2 . Value		1053263	0					
ANR	1053356	MemberAccess	buf2 . Value		1053263	0					
ANR	1053357	Identifier	buf2		1053263	0					
ANR	1053358	Identifier	Value		1053263	1					
ANR	1053359	ArgumentList			1053263	1					
ANR	1053360	ExpressionStatement	found_addr = true	1834:2:48103:48120	1053263	1	True				
ANR	1053361	AssignmentExpression	found_addr = true		1053263	0		=			
ANR	1053362	Identifier	found_addr		1053263	0					
ANR	1053363	Identifier	true		1053263	1					
ANR	1053364	ExpressionStatement	addr_attr_name = buf	1835:2:48124:48144	1053263	2	True				
ANR	1053365	AssignmentExpression	addr_attr_name = buf		1053263	0		=			
ANR	1053366	Identifier	addr_attr_name		1053263	0					
ANR	1053367	Identifier	buf		1053263	1					
ANR	1053368	ElseStatement	else		1053263	0					
ANR	1053369	IfStatement	"if ( ad -> LookupString ( ATTR_MY_ADDRESS , buf2 ) )"		1053263	0					
ANR	1053370	Condition	"ad -> LookupString ( ATTR_MY_ADDRESS , buf2 )"	1837:11:48160:48200	1053263	0	True				
ANR	1053371	CallExpression	"ad -> LookupString ( ATTR_MY_ADDRESS , buf2 )"		1053263	0					
ANR	1053372	Callee	ad -> LookupString		1053263	0					
ANR	1053373	PtrMemberAccess	ad -> LookupString		1053263	0					
ANR	1053374	Identifier	ad		1053263	0					
ANR	1053375	Identifier	LookupString		1053263	1					
ANR	1053376	ArgumentList	ATTR_MY_ADDRESS		1053263	1					
ANR	1053377	Argument	ATTR_MY_ADDRESS		1053263	0					
ANR	1053378	Identifier	ATTR_MY_ADDRESS		1053263	0					
ANR	1053379	Argument	buf2		1053263	1					
ANR	1053380	Identifier	buf2		1053263	0					
ANR	1053381	CompoundStatement		21:55:661:661	1053263	1					
ANR	1053382	ExpressionStatement	New_addr ( strnewp ( buf2 . Value ( ) ) )	1838:2:48208:48243	1053263	0	True				
ANR	1053383	CallExpression	New_addr ( strnewp ( buf2 . Value ( ) ) )		1053263	0					
ANR	1053384	Callee	New_addr		1053263	0					
ANR	1053385	Identifier	New_addr		1053263	0					
ANR	1053386	ArgumentList	strnewp ( buf2 . Value ( ) )		1053263	1					
ANR	1053387	Argument	strnewp ( buf2 . Value ( ) )		1053263	0					
ANR	1053388	CallExpression	strnewp ( buf2 . Value ( ) )		1053263	0					
ANR	1053389	Callee	strnewp		1053263	0					
ANR	1053390	Identifier	strnewp		1053263	0					
ANR	1053391	ArgumentList	buf2 . Value ( )		1053263	1					
ANR	1053392	Argument	buf2 . Value ( )		1053263	0					
ANR	1053393	CallExpression	buf2 . Value ( )		1053263	0					
ANR	1053394	Callee	buf2 . Value		1053263	0					
ANR	1053395	MemberAccess	buf2 . Value		1053263	0					
ANR	1053396	Identifier	buf2		1053263	0					
ANR	1053397	Identifier	Value		1053263	1					
ANR	1053398	ArgumentList			1053263	1					
ANR	1053399	ExpressionStatement	found_addr = true	1839:2:48247:48264	1053263	1	True				
ANR	1053400	AssignmentExpression	found_addr = true		1053263	0		=			
ANR	1053401	Identifier	found_addr		1053263	0					
ANR	1053402	Identifier	true		1053263	1					
ANR	1053403	ExpressionStatement	addr_attr_name = ATTR_MY_ADDRESS	1840:2:48268:48300	1053263	2	True				
ANR	1053404	AssignmentExpression	addr_attr_name = ATTR_MY_ADDRESS		1053263	0		=			
ANR	1053405	Identifier	addr_attr_name		1053263	0					
ANR	1053406	Identifier	ATTR_MY_ADDRESS		1053263	1					
ANR	1053407	IfStatement	if ( found_addr )		1053263	8					
ANR	1053408	Condition	found_addr	1843:6:48312:48321	1053263	0	True				
ANR	1053409	Identifier	found_addr		1053263	0					
ANR	1053410	CompoundStatement		27:19:782:782	1053263	1					
ANR	1053411	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Found %s in ClassAd, using \\""%s\\""\\n"" , addr_attr_name . Value ( ) , _addr )"	1844:2:48329:48424	1053263	0	True				
ANR	1053412	CallExpression	"dprintf ( D_HOSTNAME , ""Found %s in ClassAd, using \\""%s\\""\\n"" , addr_attr_name . Value ( ) , _addr )"		1053263	0					
ANR	1053413	Callee	dprintf		1053263	0					
ANR	1053414	Identifier	dprintf		1053263	0					
ANR	1053415	ArgumentList	D_HOSTNAME		1053263	1					
ANR	1053416	Argument	D_HOSTNAME		1053263	0					
ANR	1053417	Identifier	D_HOSTNAME		1053263	0					
ANR	1053418	Argument	"""Found %s in ClassAd, using \\""%s\\""\\n"""		1053263	1					
ANR	1053419	PrimaryExpression	"""Found %s in ClassAd, using \\""%s\\""\\n"""		1053263	0					
ANR	1053420	Argument	addr_attr_name . Value ( )		1053263	2					
ANR	1053421	CallExpression	addr_attr_name . Value ( )		1053263	0					
ANR	1053422	Callee	addr_attr_name . Value		1053263	0					
ANR	1053423	MemberAccess	addr_attr_name . Value		1053263	0					
ANR	1053424	Identifier	addr_attr_name		1053263	0					
ANR	1053425	Identifier	Value		1053263	1					
ANR	1053426	ArgumentList			1053263	1					
ANR	1053427	Argument	_addr		1053263	3					
ANR	1053428	Identifier	_addr		1053263	0					
ANR	1053429	ExpressionStatement	_tried_locate = true	1846:2:48428:48448	1053263	1	True				
ANR	1053430	AssignmentExpression	_tried_locate = true		1053263	0		=			
ANR	1053431	Identifier	_tried_locate		1053263	0					
ANR	1053432	Identifier	true		1053263	1					
ANR	1053433	ElseStatement	else		1053263	0					
ANR	1053434	CompoundStatement		31:8:915:915	1053263	0					
ANR	1053435	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't find address in classad for %s %s\\n"" , daemonString ( _type ) , _name ? _name : """" )"	1848:2:48462:48572	1053263	0	True				
ANR	1053436	CallExpression	"dprintf ( D_ALWAYS , ""Can't find address in classad for %s %s\\n"" , daemonString ( _type ) , _name ? _name : """" )"		1053263	0					
ANR	1053437	Callee	dprintf		1053263	0					
ANR	1053438	Identifier	dprintf		1053263	0					
ANR	1053439	ArgumentList	D_ALWAYS		1053263	1					
ANR	1053440	Argument	D_ALWAYS		1053263	0					
ANR	1053441	Identifier	D_ALWAYS		1053263	0					
ANR	1053442	Argument	"""Can't find address in classad for %s %s\\n"""		1053263	1					
ANR	1053443	PrimaryExpression	"""Can't find address in classad for %s %s\\n"""		1053263	0					
ANR	1053444	Argument	daemonString ( _type )		1053263	2					
ANR	1053445	CallExpression	daemonString ( _type )		1053263	0					
ANR	1053446	Callee	daemonString		1053263	0					
ANR	1053447	Identifier	daemonString		1053263	0					
ANR	1053448	ArgumentList	_type		1053263	1					
ANR	1053449	Argument	_type		1053263	0					
ANR	1053450	Identifier	_type		1053263	0					
ANR	1053451	Argument	"_name ? _name : """""		1053263	3					
ANR	1053452	ConditionalExpression	"_name ? _name : """""		1053263	0					
ANR	1053453	Condition	_name		1053263	0					
ANR	1053454	Identifier	_name		1053263	0					
ANR	1053455	Identifier	_name		1053263	1					
ANR	1053456	PrimaryExpression	""""""		1053263	2					
ANR	1053457	ExpressionStatement	"buf . sprintf ( ""Can't find address in classad for %s %s"" , daemonString ( _type ) , _name ? _name : """" )"	1850:2:48576:48679	1053263	1	True				
ANR	1053458	CallExpression	"buf . sprintf ( ""Can't find address in classad for %s %s"" , daemonString ( _type ) , _name ? _name : """" )"		1053263	0					
ANR	1053459	Callee	buf . sprintf		1053263	0					
ANR	1053460	MemberAccess	buf . sprintf		1053263	0					
ANR	1053461	Identifier	buf		1053263	0					
ANR	1053462	Identifier	sprintf		1053263	1					
ANR	1053463	ArgumentList	"""Can't find address in classad for %s %s"""		1053263	1					
ANR	1053464	Argument	"""Can't find address in classad for %s %s"""		1053263	0					
ANR	1053465	PrimaryExpression	"""Can't find address in classad for %s %s"""		1053263	0					
ANR	1053466	Argument	daemonString ( _type )		1053263	1					
ANR	1053467	CallExpression	daemonString ( _type )		1053263	0					
ANR	1053468	Callee	daemonString		1053263	0					
ANR	1053469	Identifier	daemonString		1053263	0					
ANR	1053470	ArgumentList	_type		1053263	1					
ANR	1053471	Argument	_type		1053263	0					
ANR	1053472	Identifier	_type		1053263	0					
ANR	1053473	Argument	"_name ? _name : """""		1053263	2					
ANR	1053474	ConditionalExpression	"_name ? _name : """""		1053263	0					
ANR	1053475	Condition	_name		1053263	0					
ANR	1053476	Identifier	_name		1053263	0					
ANR	1053477	Identifier	_name		1053263	1					
ANR	1053478	PrimaryExpression	""""""		1053263	2					
ANR	1053479	ExpressionStatement	"newError ( CA_LOCATE_FAILED , buf . Value ( ) )"	1852:2:48683:48724	1053263	2	True				
ANR	1053480	CallExpression	"newError ( CA_LOCATE_FAILED , buf . Value ( ) )"		1053263	0					
ANR	1053481	Callee	newError		1053263	0					
ANR	1053482	Identifier	newError		1053263	0					
ANR	1053483	ArgumentList	CA_LOCATE_FAILED		1053263	1					
ANR	1053484	Argument	CA_LOCATE_FAILED		1053263	0					
ANR	1053485	Identifier	CA_LOCATE_FAILED		1053263	0					
ANR	1053486	Argument	buf . Value ( )		1053263	1					
ANR	1053487	CallExpression	buf . Value ( )		1053263	0					
ANR	1053488	Callee	buf . Value		1053263	0					
ANR	1053489	MemberAccess	buf . Value		1053263	0					
ANR	1053490	Identifier	buf		1053263	0					
ANR	1053491	Identifier	Value		1053263	1					
ANR	1053492	ArgumentList			1053263	1					
ANR	1053493	ExpressionStatement	ret_val = false	1854:2:48729:48744	1053263	3	True				
ANR	1053494	AssignmentExpression	ret_val = false		1053263	0		=			
ANR	1053495	Identifier	ret_val		1053263	0					
ANR	1053496	Identifier	false		1053263	1					
ANR	1053497	IfStatement	"if ( initStringFromAd ( ad , ATTR_VERSION , & _version ) )"		1053263	9					
ANR	1053498	Condition	"initStringFromAd ( ad , ATTR_VERSION , & _version )"	1857:5:48755:48801	1053263	0	True				
ANR	1053499	CallExpression	"initStringFromAd ( ad , ATTR_VERSION , & _version )"		1053263	0					
ANR	1053500	Callee	initStringFromAd		1053263	0					
ANR	1053501	Identifier	initStringFromAd		1053263	0					
ANR	1053502	ArgumentList	ad		1053263	1					
ANR	1053503	Argument	ad		1053263	0					
ANR	1053504	Identifier	ad		1053263	0					
ANR	1053505	Argument	ATTR_VERSION		1053263	1					
ANR	1053506	Identifier	ATTR_VERSION		1053263	0					
ANR	1053507	Argument	& _version		1053263	2					
ANR	1053508	UnaryOperationExpression	& _version		1053263	0					
ANR	1053509	UnaryOperator	&		1053263	0					
ANR	1053510	Identifier	_version		1053263	1					
ANR	1053511	CompoundStatement		41:55:1262:1262	1053263	1					
ANR	1053512	ExpressionStatement	_tried_init_version = true	1858:2:48809:48835	1053263	0	True				
ANR	1053513	AssignmentExpression	_tried_init_version = true		1053263	0		=			
ANR	1053514	Identifier	_tried_init_version		1053263	0					
ANR	1053515	Identifier	true		1053263	1					
ANR	1053516	ElseStatement	else		1053263	0					
ANR	1053517	CompoundStatement		43:8:1302:1302	1053263	0					
ANR	1053518	ExpressionStatement	ret_val = false	1860:2:48849:48864	1053263	0	True				
ANR	1053519	AssignmentExpression	ret_val = false		1053263	0		=			
ANR	1053520	Identifier	ret_val		1053263	0					
ANR	1053521	Identifier	false		1053263	1					
ANR	1053522	ExpressionStatement	"initStringFromAd ( ad , ATTR_PLATFORM , & _platform )"	1863:1:48871:48920	1053263	10	True				
ANR	1053523	CallExpression	"initStringFromAd ( ad , ATTR_PLATFORM , & _platform )"		1053263	0					
ANR	1053524	Callee	initStringFromAd		1053263	0					
ANR	1053525	Identifier	initStringFromAd		1053263	0					
ANR	1053526	ArgumentList	ad		1053263	1					
ANR	1053527	Argument	ad		1053263	0					
ANR	1053528	Identifier	ad		1053263	0					
ANR	1053529	Argument	ATTR_PLATFORM		1053263	1					
ANR	1053530	Identifier	ATTR_PLATFORM		1053263	0					
ANR	1053531	Argument	& _platform		1053263	2					
ANR	1053532	UnaryOperationExpression	& _platform		1053263	0					
ANR	1053533	UnaryOperator	&		1053263	0					
ANR	1053534	Identifier	_platform		1053263	1					
ANR	1053535	IfStatement	"if ( initStringFromAd ( ad , ATTR_MACHINE , & _full_hostname ) )"		1053263	11					
ANR	1053536	Condition	"initStringFromAd ( ad , ATTR_MACHINE , & _full_hostname )"	1865:5:48928:48980	1053263	0	True				
ANR	1053537	CallExpression	"initStringFromAd ( ad , ATTR_MACHINE , & _full_hostname )"		1053263	0					
ANR	1053538	Callee	initStringFromAd		1053263	0					
ANR	1053539	Identifier	initStringFromAd		1053263	0					
ANR	1053540	ArgumentList	ad		1053263	1					
ANR	1053541	Argument	ad		1053263	0					
ANR	1053542	Identifier	ad		1053263	0					
ANR	1053543	Argument	ATTR_MACHINE		1053263	1					
ANR	1053544	Identifier	ATTR_MACHINE		1053263	0					
ANR	1053545	Argument	& _full_hostname		1053263	2					
ANR	1053546	UnaryOperationExpression	& _full_hostname		1053263	0					
ANR	1053547	UnaryOperator	&		1053263	0					
ANR	1053548	Identifier	_full_hostname		1053263	1					
ANR	1053549	CompoundStatement		49:61:1441:1441	1053263	1					
ANR	1053550	ExpressionStatement	initHostnameFromFull ( )	1866:2:48988:49010	1053263	0	True				
ANR	1053551	CallExpression	initHostnameFromFull ( )		1053263	0					
ANR	1053552	Callee	initHostnameFromFull		1053263	0					
ANR	1053553	Identifier	initHostnameFromFull		1053263	0					
ANR	1053554	ArgumentList			1053263	1					
ANR	1053555	ExpressionStatement	_tried_init_hostname = false	1867:2:49014:49042	1053263	1	True				
ANR	1053556	AssignmentExpression	_tried_init_hostname = false		1053263	0		=			
ANR	1053557	Identifier	_tried_init_hostname		1053263	0					
ANR	1053558	Identifier	false		1053263	1					
ANR	1053559	ElseStatement	else		1053263	0					
ANR	1053560	CompoundStatement		52:8:1509:1509	1053263	0					
ANR	1053561	ExpressionStatement	ret_val = false	1869:2:49056:49071	1053263	0	True				
ANR	1053562	AssignmentExpression	ret_val = false		1053263	0		=			
ANR	1053563	Identifier	ret_val		1053263	0					
ANR	1053564	Identifier	false		1053263	1					
ANR	1053565	ReturnStatement	return ret_val ;	1872:1:49078:49092	1053263	12	True				
ANR	1053566	Identifier	ret_val		1053263	0					
ANR	1053567	ReturnType	bool		1053263	1					
ANR	1053568	Identifier	Daemon :: getInfoFromAd		1053263	2					
ANR	1053569	ParameterList	const ClassAd * ad		1053263	3					
ANR	1053570	Parameter	const ClassAd * ad	1816:23:47522:47538	1053263	0	True				
ANR	1053571	ParameterType	const ClassAd *		1053263	0					
ANR	1053572	Identifier	ad		1053263	1					
ANR	1053573	CFGEntryNode	ENTRY		1053263		True				
ANR	1053574	CFGExitNode	EXIT		1053263		True				
ANR	1053575	Symbol	CA_LOCATE_FAILED		1053263						
ANR	1053576	Symbol	ATTR_NAME		1053263						
ANR	1053577	Symbol	_name		1053263						
ANR	1053578	Symbol	& _name		1053263						
ANR	1053579	Symbol	daemonString		1053263						
ANR	1053580	Symbol	* ad		1053263						
ANR	1053581	Symbol	initStringFromAd		1053263						
ANR	1053582	Symbol	ATTR_VERSION		1053263						
ANR	1053583	Symbol	_tried_locate		1053263						
ANR	1053584	Symbol	buf . Value		1053263						
ANR	1053585	Symbol	strnewp		1053263						
ANR	1053586	Symbol	& _full_hostname		1053263						
ANR	1053587	Symbol	& _platform		1053263						
ANR	1053588	Symbol	ATTR_MY_ADDRESS		1053263						
ANR	1053589	Symbol	found_addr		1053263						
ANR	1053590	Symbol	_subsys		1053263						
ANR	1053591	Symbol	ad -> LookupString		1053263						
ANR	1053592	Symbol	D_HOSTNAME		1053263						
ANR	1053593	Symbol	ad		1053263						
ANR	1053594	Symbol	false		1053263						
ANR	1053595	Symbol	_type		1053263						
ANR	1053596	Symbol	D_ALWAYS		1053263						
ANR	1053597	Symbol	ATTR_PLATFORM		1053263						
ANR	1053598	Symbol	& _version		1053263						
ANR	1053599	Symbol	ret_val		1053263						
ANR	1053600	Symbol	_tried_init_hostname		1053263						
ANR	1053601	Symbol	buf2 . Value		1053263						
ANR	1053602	Symbol	ATTR_MACHINE		1053263						
ANR	1053603	Symbol	buf2		1053263						
ANR	1053604	Symbol	buf		1053263						
ANR	1053605	Symbol	_tried_init_version		1053263						
ANR	1053606	Symbol	true		1053263						
ANR	1053607	Symbol	_addr		1053263						
ANR	1053608	Symbol	addr_attr_name		1053263						
ANR	1053609	Symbol	addr_attr_name . Value		1053263						
ANR	1053610	Function	Daemon :: getInfoFromAd	1876:0:49098:49196							
ANR	1053611	FunctionDef	Daemon :: getInfoFromAd (counted_ptr < class ClassAd > & ad)		1053610	0					
ANR	1053612	CompoundStatement		1878:0:49159:49196	1053610	0					
ANR	1053613	ReturnStatement	return getInfoFromAd ( ad . get ( ) ) ;	1879:1:49162:49194	1053610	0	True				
ANR	1053614	CallExpression	getInfoFromAd ( ad . get ( ) )		1053610	0					
ANR	1053615	Callee	getInfoFromAd		1053610	0					
ANR	1053616	Identifier	getInfoFromAd		1053610	0					
ANR	1053617	ArgumentList	ad . get ( )		1053610	1					
ANR	1053618	Argument	ad . get ( )		1053610	0					
ANR	1053619	CallExpression	ad . get ( )		1053610	0					
ANR	1053620	Callee	ad . get		1053610	0					
ANR	1053621	MemberAccess	ad . get		1053610	0					
ANR	1053622	Identifier	ad		1053610	0					
ANR	1053623	Identifier	get		1053610	1					
ANR	1053624	ArgumentList			1053610	1					
ANR	1053625	ReturnType	bool		1053610	1					
ANR	1053626	Identifier	Daemon :: getInfoFromAd		1053610	2					
ANR	1053627	ParameterList	counted_ptr < class ClassAd > & ad		1053610	3					
ANR	1053628	Parameter	counted_ptr < class ClassAd > & ad	1877:23:49126:49155	1053610	0	True				
ANR	1053629	ParameterType	counted_ptr < class ClassAd > &		1053610	0					
ANR	1053630	Identifier	ad		1053610	1					
ANR	1053631	CFGEntryNode	ENTRY		1053610		True				
ANR	1053632	CFGExitNode	EXIT		1053610		True				
ANR	1053633	Symbol	getInfoFromAd		1053610						
ANR	1053634	Symbol	ad		1053610						
ANR	1053635	Symbol	ad . get		1053610						
ANR	1053636	Function	Daemon :: initStringFromAd	1883:0:49200:49945							
ANR	1053637	FunctionDef	"Daemon :: initStringFromAd (const ClassAd * ad , const char * attrname , char * * value)"		1053636	0					
ANR	1053638	CompoundStatement		1885:0:49287:49945	1053636	0					
ANR	1053639	IfStatement	if ( ! value )		1053636	0					
ANR	1053640	Condition	! value	1886:5:49294:49300	1053636	0	True				
ANR	1053641	UnaryOperationExpression	! value		1053636	0					
ANR	1053642	UnaryOperator	!		1053636	0					
ANR	1053643	Identifier	value		1053636	1					
ANR	1053644	CompoundStatement		2:15:16:16	1053636	1					
ANR	1053645	ExpressionStatement	"EXCEPT ( ""Daemon::initStringFromAd() called with NULL value!"" )"	1887:2:49308:49370	1053636	0	True				
ANR	1053646	CallExpression	"EXCEPT ( ""Daemon::initStringFromAd() called with NULL value!"" )"		1053636	0					
ANR	1053647	Callee	EXCEPT		1053636	0					
ANR	1053648	Identifier	EXCEPT		1053636	0					
ANR	1053649	ArgumentList	"""Daemon::initStringFromAd() called with NULL value!"""		1053636	1					
ANR	1053650	Argument	"""Daemon::initStringFromAd() called with NULL value!"""		1053636	0					
ANR	1053651	PrimaryExpression	"""Daemon::initStringFromAd() called with NULL value!"""		1053636	0					
ANR	1053652	IdentifierDeclStatement	char * tmp = NULL ;	1889:1:49376:49392	1053636	1	True				
ANR	1053653	IdentifierDecl	* tmp = NULL		1053636	0					
ANR	1053654	IdentifierDeclType	char *		1053636	0					
ANR	1053655	Identifier	tmp		1053636	1					
ANR	1053656	AssignmentExpression	* tmp = NULL		1053636	2		=			
ANR	1053657	Identifier	NULL		1053636	0					
ANR	1053658	Identifier	NULL		1053636	1					
ANR	1053659	IdentifierDeclStatement	MyString buf ;	1890:1:49395:49407	1053636	2	True				
ANR	1053660	IdentifierDecl	buf		1053636	0					
ANR	1053661	IdentifierDeclType	MyString		1053636	0					
ANR	1053662	Identifier	buf		1053636	1					
ANR	1053663	IfStatement	"if ( ! ad -> LookupString ( attrname , & tmp ) )"		1053636	3					
ANR	1053664	Condition	"! ad -> LookupString ( attrname , & tmp )"	1891:5:49414:49447	1053636	0	True				
ANR	1053665	UnaryOperationExpression	"! ad -> LookupString ( attrname , & tmp )"		1053636	0					
ANR	1053666	UnaryOperator	!		1053636	0					
ANR	1053667	CallExpression	"ad -> LookupString ( attrname , & tmp )"		1053636	1					
ANR	1053668	Callee	ad -> LookupString		1053636	0					
ANR	1053669	PtrMemberAccess	ad -> LookupString		1053636	0					
ANR	1053670	Identifier	ad		1053636	0					
ANR	1053671	Identifier	LookupString		1053636	1					
ANR	1053672	ArgumentList	attrname		1053636	1					
ANR	1053673	Argument	attrname		1053636	0					
ANR	1053674	Identifier	attrname		1053636	0					
ANR	1053675	Argument	& tmp		1053636	1					
ANR	1053676	UnaryOperationExpression	& tmp		1053636	0					
ANR	1053677	UnaryOperator	&		1053636	0					
ANR	1053678	Identifier	tmp		1053636	1					
ANR	1053679	CompoundStatement		7:42:163:163	1053636	1					
ANR	1053680	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't find %s in classad for %s %s\\n"" , attrname , daemonString ( _type ) , _name ? _name : """" )"	1892:2:49455:49575	1053636	0	True				
ANR	1053681	CallExpression	"dprintf ( D_ALWAYS , ""Can't find %s in classad for %s %s\\n"" , attrname , daemonString ( _type ) , _name ? _name : """" )"		1053636	0					
ANR	1053682	Callee	dprintf		1053636	0					
ANR	1053683	Identifier	dprintf		1053636	0					
ANR	1053684	ArgumentList	D_ALWAYS		1053636	1					
ANR	1053685	Argument	D_ALWAYS		1053636	0					
ANR	1053686	Identifier	D_ALWAYS		1053636	0					
ANR	1053687	Argument	"""Can't find %s in classad for %s %s\\n"""		1053636	1					
ANR	1053688	PrimaryExpression	"""Can't find %s in classad for %s %s\\n"""		1053636	0					
ANR	1053689	Argument	attrname		1053636	2					
ANR	1053690	Identifier	attrname		1053636	0					
ANR	1053691	Argument	daemonString ( _type )		1053636	3					
ANR	1053692	CallExpression	daemonString ( _type )		1053636	0					
ANR	1053693	Callee	daemonString		1053636	0					
ANR	1053694	Identifier	daemonString		1053636	0					
ANR	1053695	ArgumentList	_type		1053636	1					
ANR	1053696	Argument	_type		1053636	0					
ANR	1053697	Identifier	_type		1053636	0					
ANR	1053698	Argument	"_name ? _name : """""		1053636	4					
ANR	1053699	ConditionalExpression	"_name ? _name : """""		1053636	0					
ANR	1053700	Condition	_name		1053636	0					
ANR	1053701	Identifier	_name		1053636	0					
ANR	1053702	Identifier	_name		1053636	1					
ANR	1053703	PrimaryExpression	""""""		1053636	2					
ANR	1053704	ExpressionStatement	"buf . sprintf ( ""Can't find %s in classad for %s %s"" , attrname , daemonString ( _type ) , _name ? _name : """" )"	1895:2:49579:49693	1053636	1	True				
ANR	1053705	CallExpression	"buf . sprintf ( ""Can't find %s in classad for %s %s"" , attrname , daemonString ( _type ) , _name ? _name : """" )"		1053636	0					
ANR	1053706	Callee	buf . sprintf		1053636	0					
ANR	1053707	MemberAccess	buf . sprintf		1053636	0					
ANR	1053708	Identifier	buf		1053636	0					
ANR	1053709	Identifier	sprintf		1053636	1					
ANR	1053710	ArgumentList	"""Can't find %s in classad for %s %s"""		1053636	1					
ANR	1053711	Argument	"""Can't find %s in classad for %s %s"""		1053636	0					
ANR	1053712	PrimaryExpression	"""Can't find %s in classad for %s %s"""		1053636	0					
ANR	1053713	Argument	attrname		1053636	1					
ANR	1053714	Identifier	attrname		1053636	0					
ANR	1053715	Argument	daemonString ( _type )		1053636	2					
ANR	1053716	CallExpression	daemonString ( _type )		1053636	0					
ANR	1053717	Callee	daemonString		1053636	0					
ANR	1053718	Identifier	daemonString		1053636	0					
ANR	1053719	ArgumentList	_type		1053636	1					
ANR	1053720	Argument	_type		1053636	0					
ANR	1053721	Identifier	_type		1053636	0					
ANR	1053722	Argument	"_name ? _name : """""		1053636	3					
ANR	1053723	ConditionalExpression	"_name ? _name : """""		1053636	0					
ANR	1053724	Condition	_name		1053636	0					
ANR	1053725	Identifier	_name		1053636	0					
ANR	1053726	Identifier	_name		1053636	1					
ANR	1053727	PrimaryExpression	""""""		1053636	2					
ANR	1053728	ExpressionStatement	"newError ( CA_LOCATE_FAILED , buf . Value ( ) )"	1898:2:49697:49738	1053636	2	True				
ANR	1053729	CallExpression	"newError ( CA_LOCATE_FAILED , buf . Value ( ) )"		1053636	0					
ANR	1053730	Callee	newError		1053636	0					
ANR	1053731	Identifier	newError		1053636	0					
ANR	1053732	ArgumentList	CA_LOCATE_FAILED		1053636	1					
ANR	1053733	Argument	CA_LOCATE_FAILED		1053636	0					
ANR	1053734	Identifier	CA_LOCATE_FAILED		1053636	0					
ANR	1053735	Argument	buf . Value ( )		1053636	1					
ANR	1053736	CallExpression	buf . Value ( )		1053636	0					
ANR	1053737	Callee	buf . Value		1053636	0					
ANR	1053738	MemberAccess	buf . Value		1053636	0					
ANR	1053739	Identifier	buf		1053636	0					
ANR	1053740	Identifier	Value		1053636	1					
ANR	1053741	ArgumentList			1053636	1					
ANR	1053742	ReturnStatement	return false ;	1899:2:49742:49754	1053636	3	True				
ANR	1053743	Identifier	false		1053636	0					
ANR	1053744	IfStatement	if ( * value )		1053636	4					
ANR	1053745	Condition	* value	1901:5:49764:49769	1053636	0	True				
ANR	1053746	UnaryOperationExpression	* value		1053636	0					
ANR	1053747	UnaryOperator	*		1053636	0					
ANR	1053748	Identifier	value		1053636	1					
ANR	1053749	CompoundStatement		17:14:485:485	1053636	1					
ANR	1053750	Statement	delete	1902:2:49777:49782	1053636	0	True				
ANR	1053751	Statement	[	1902:9:49784:49784	1053636	1	True				
ANR	1053752	Statement	]	1902:10:49785:49785	1053636	2	True				
ANR	1053753	ExpressionStatement	* value	1902:12:49787:49793	1053636	3	True				
ANR	1053754	UnaryOperationExpression	* value		1053636	0					
ANR	1053755	UnaryOperator	*		1053636	0					
ANR	1053756	Identifier	value		1053636	1					
ANR	1053757	ExpressionStatement	* value = strnewp ( tmp )	1904:1:49799:49820	1053636	5	True				
ANR	1053758	AssignmentExpression	* value = strnewp ( tmp )		1053636	0		=			
ANR	1053759	UnaryOperationExpression	* value		1053636	0					
ANR	1053760	UnaryOperator	*		1053636	0					
ANR	1053761	Identifier	value		1053636	1					
ANR	1053762	CallExpression	strnewp ( tmp )		1053636	1					
ANR	1053763	Callee	strnewp		1053636	0					
ANR	1053764	Identifier	strnewp		1053636	0					
ANR	1053765	ArgumentList	tmp		1053636	1					
ANR	1053766	Argument	tmp		1053636	0					
ANR	1053767	Identifier	tmp		1053636	0					
ANR	1053768	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Found %s in ClassAd, using \\""%s\\""\\n"" , attrname , tmp )"	1905:1:49823:49902	1053636	6	True				
ANR	1053769	CallExpression	"dprintf ( D_HOSTNAME , ""Found %s in ClassAd, using \\""%s\\""\\n"" , attrname , tmp )"		1053636	0					
ANR	1053770	Callee	dprintf		1053636	0					
ANR	1053771	Identifier	dprintf		1053636	0					
ANR	1053772	ArgumentList	D_HOSTNAME		1053636	1					
ANR	1053773	Argument	D_HOSTNAME		1053636	0					
ANR	1053774	Identifier	D_HOSTNAME		1053636	0					
ANR	1053775	Argument	"""Found %s in ClassAd, using \\""%s\\""\\n"""		1053636	1					
ANR	1053776	PrimaryExpression	"""Found %s in ClassAd, using \\""%s\\""\\n"""		1053636	0					
ANR	1053777	Argument	attrname		1053636	2					
ANR	1053778	Identifier	attrname		1053636	0					
ANR	1053779	Argument	tmp		1053636	3					
ANR	1053780	Identifier	tmp		1053636	0					
ANR	1053781	ExpressionStatement	free ( tmp )	1907:1:49905:49916	1053636	7	True				
ANR	1053782	CallExpression	free ( tmp )		1053636	0					
ANR	1053783	Callee	free		1053636	0					
ANR	1053784	Identifier	free		1053636	0					
ANR	1053785	ArgumentList	tmp		1053636	1					
ANR	1053786	Argument	tmp		1053636	0					
ANR	1053787	Identifier	tmp		1053636	0					
ANR	1053788	ExpressionStatement	tmp = NULL	1908:1:49919:49929	1053636	8	True				
ANR	1053789	AssignmentExpression	tmp = NULL		1053636	0		=			
ANR	1053790	Identifier	tmp		1053636	0					
ANR	1053791	Identifier	NULL		1053636	1					
ANR	1053792	ReturnStatement	return true ;	1909:1:49932:49943	1053636	9	True				
ANR	1053793	Identifier	true		1053636	0					
ANR	1053794	ReturnType	bool		1053636	1					
ANR	1053795	Identifier	Daemon :: initStringFromAd		1053636	2					
ANR	1053796	ParameterList	"const ClassAd * ad , const char * attrname , char * * value"		1053636	3					
ANR	1053797	Parameter	const ClassAd * ad	1884:26:49231:49247	1053636	0	True				
ANR	1053798	ParameterType	const ClassAd *		1053636	0					
ANR	1053799	Identifier	ad		1053636	1					
ANR	1053800	Parameter	const char * attrname	1884:45:49250:49269	1053636	1	True				
ANR	1053801	ParameterType	const char *		1053636	0					
ANR	1053802	Identifier	attrname		1053636	1					
ANR	1053803	Parameter	char * * value	1884:67:49272:49283	1053636	2	True				
ANR	1053804	ParameterType	char * *		1053636	0					
ANR	1053805	Identifier	value		1053636	1					
ANR	1053806	CFGEntryNode	ENTRY		1053636		True				
ANR	1053807	CFGExitNode	EXIT		1053636		True				
ANR	1053808	Symbol	ad -> LookupString		1053636						
ANR	1053809	Symbol	D_HOSTNAME		1053636						
ANR	1053810	Symbol	CA_LOCATE_FAILED		1053636						
ANR	1053811	Symbol	ad		1053636						
ANR	1053812	Symbol	NULL		1053636						
ANR	1053813	Symbol	_name		1053636						
ANR	1053814	Symbol	daemonString		1053636						
ANR	1053815	Symbol	_type		1053636						
ANR	1053816	Symbol	D_ALWAYS		1053636						
ANR	1053817	Symbol	false		1053636						
ANR	1053818	Symbol	* ad		1053636						
ANR	1053819	Symbol	attrname		1053636						
ANR	1053820	Symbol	buf		1053636						
ANR	1053821	Symbol	tmp		1053636						
ANR	1053822	Symbol	* value		1053636						
ANR	1053823	Symbol	buf . Value		1053636						
ANR	1053824	Symbol	true		1053636						
ANR	1053825	Symbol	strnewp		1053636						
ANR	1053826	Symbol	& tmp		1053636						
ANR	1053827	Symbol	value		1053636						
ANR	1053828	Function	Daemon :: initStringFromAd	1912:0:49948:50104							
ANR	1053829	FunctionDef	"Daemon :: initStringFromAd (counted_ptr < class ClassAd > & ad , const char * attrname , char * * value)"		1053828	0					
ANR	1053830	CompoundStatement		1914:0:50048:50104	1053828	0					
ANR	1053831	ReturnStatement	"return initStringFromAd ( ad . get ( ) , attrname , value ) ;"	1915:1:50051:50102	1053828	0	True				
ANR	1053832	CallExpression	"initStringFromAd ( ad . get ( ) , attrname , value )"		1053828	0					
ANR	1053833	Callee	initStringFromAd		1053828	0					
ANR	1053834	Identifier	initStringFromAd		1053828	0					
ANR	1053835	ArgumentList	ad . get ( )		1053828	1					
ANR	1053836	Argument	ad . get ( )		1053828	0					
ANR	1053837	CallExpression	ad . get ( )		1053828	0					
ANR	1053838	Callee	ad . get		1053828	0					
ANR	1053839	MemberAccess	ad . get		1053828	0					
ANR	1053840	Identifier	ad		1053828	0					
ANR	1053841	Identifier	get		1053828	1					
ANR	1053842	ArgumentList			1053828	1					
ANR	1053843	Argument	attrname		1053828	1					
ANR	1053844	Identifier	attrname		1053828	0					
ANR	1053845	Argument	value		1053828	2					
ANR	1053846	Identifier	value		1053828	0					
ANR	1053847	ReturnType	bool		1053828	1					
ANR	1053848	Identifier	Daemon :: initStringFromAd		1053828	2					
ANR	1053849	ParameterList	"counted_ptr < class ClassAd > & ad , const char * attrname , char * * value"		1053828	3					
ANR	1053850	Parameter	counted_ptr < class ClassAd > & ad	1913:26:49979:50008	1053828	0	True				
ANR	1053851	ParameterType	counted_ptr < class ClassAd > &		1053828	0					
ANR	1053852	Identifier	ad		1053828	1					
ANR	1053853	Parameter	const char * attrname	1913:58:50011:50030	1053828	1	True				
ANR	1053854	ParameterType	const char *		1053828	0					
ANR	1053855	Identifier	attrname		1053828	1					
ANR	1053856	Parameter	char * * value	1913:80:50033:50044	1053828	2	True				
ANR	1053857	ParameterType	char * *		1053828	0					
ANR	1053858	Identifier	value		1053828	1					
ANR	1053859	CFGEntryNode	ENTRY		1053828		True				
ANR	1053860	CFGExitNode	EXIT		1053828		True				
ANR	1053861	Symbol	ad		1053828						
ANR	1053862	Symbol	ad . get		1053828						
ANR	1053863	Symbol	attrname		1053828						
ANR	1053864	Symbol	initStringFromAd		1053828						
ANR	1053865	Symbol	value		1053828						
ANR	1053866	Function	Daemon :: New_full_hostname	1919:0:50108:50247							
ANR	1053867	FunctionDef	Daemon :: New_full_hostname (char * str)		1053866	0					
ANR	1053868	CompoundStatement		1921:0:50153:50247	1053866	0					
ANR	1053869	IfStatement	if ( _full_hostname )		1053866	0					
ANR	1053870	Condition	_full_hostname	1922:5:50160:50173	1053866	0	True				
ANR	1053871	Identifier	_full_hostname		1053866	0					
ANR	1053872	CompoundStatement		2:22:23:23	1053866	1					
ANR	1053873	Statement	delete	1923:2:50181:50186	1053866	0	True				
ANR	1053874	Statement	[	1923:9:50188:50188	1053866	1	True				
ANR	1053875	Statement	]	1923:10:50189:50189	1053866	2	True				
ANR	1053876	ExpressionStatement	_full_hostname	1923:12:50191:50205	1053866	3	True				
ANR	1053877	Identifier	_full_hostname		1053866	0					
ANR	1053878	ExpressionStatement	_full_hostname = str	1925:1:50212:50232	1053866	1	True				
ANR	1053879	AssignmentExpression	_full_hostname = str		1053866	0		=			
ANR	1053880	Identifier	_full_hostname		1053866	0					
ANR	1053881	Identifier	str		1053866	1					
ANR	1053882	ReturnStatement	return str ;	1926:1:50235:50245	1053866	2	True				
ANR	1053883	Identifier	str		1053866	0					
ANR	1053884	ReturnType	char *		1053866	1					
ANR	1053885	Identifier	Daemon :: New_full_hostname		1053866	2					
ANR	1053886	ParameterList	char * str		1053866	3					
ANR	1053887	Parameter	char * str	1920:27:50141:50149	1053866	0	True				
ANR	1053888	ParameterType	char *		1053866	0					
ANR	1053889	Identifier	str		1053866	1					
ANR	1053890	CFGEntryNode	ENTRY		1053866		True				
ANR	1053891	CFGExitNode	EXIT		1053866		True				
ANR	1053892	Symbol	str		1053866						
ANR	1053893	Symbol	_full_hostname		1053866						
ANR	1053894	Function	Daemon :: New_hostname	1930:0:50251:50370							
ANR	1053895	FunctionDef	Daemon :: New_hostname (char * str)		1053894	0					
ANR	1053896	CompoundStatement		1932:0:50291:50370	1053894	0					
ANR	1053897	IfStatement	if ( _hostname )		1053894	0					
ANR	1053898	Condition	_hostname	1933:5:50298:50306	1053894	0	True				
ANR	1053899	Identifier	_hostname		1053894	0					
ANR	1053900	CompoundStatement		2:17:18:18	1053894	1					
ANR	1053901	Statement	delete	1934:2:50314:50319	1053894	0	True				
ANR	1053902	Statement	[	1934:9:50321:50321	1053894	1	True				
ANR	1053903	Statement	]	1934:10:50322:50322	1053894	2	True				
ANR	1053904	ExpressionStatement	_hostname	1934:12:50324:50333	1053894	3	True				
ANR	1053905	Identifier	_hostname		1053894	0					
ANR	1053906	ExpressionStatement	_hostname = str	1936:1:50340:50355	1053894	1	True				
ANR	1053907	AssignmentExpression	_hostname = str		1053894	0		=			
ANR	1053908	Identifier	_hostname		1053894	0					
ANR	1053909	Identifier	str		1053894	1					
ANR	1053910	ReturnStatement	return str ;	1937:1:50358:50368	1053894	2	True				
ANR	1053911	Identifier	str		1053894	0					
ANR	1053912	ReturnType	char *		1053894	1					
ANR	1053913	Identifier	Daemon :: New_hostname		1053894	2					
ANR	1053914	ParameterList	char * str		1053894	3					
ANR	1053915	Parameter	char * str	1931:22:50279:50287	1053894	0	True				
ANR	1053916	ParameterType	char *		1053894	0					
ANR	1053917	Identifier	str		1053894	1					
ANR	1053918	CFGEntryNode	ENTRY		1053894		True				
ANR	1053919	CFGExitNode	EXIT		1053894		True				
ANR	1053920	Symbol	str		1053894						
ANR	1053921	Symbol	_hostname		1053894						
ANR	1053922	Function	Daemon :: New_addr	1941:0:50374:52291							
ANR	1053923	FunctionDef	Daemon :: New_addr (char * str)		1053922	0					
ANR	1053924	CompoundStatement		1943:0:50409:52291	1053922	0					
ANR	1053925	IfStatement	if ( _addr )		1053922	0					
ANR	1053926	Condition	_addr	1944:5:50416:50420	1053922	0	True				
ANR	1053927	Identifier	_addr		1053922	0					
ANR	1053928	CompoundStatement		2:13:14:14	1053922	1					
ANR	1053929	Statement	delete	1945:2:50428:50433	1053922	0	True				
ANR	1053930	Statement	[	1945:9:50435:50435	1053922	1	True				
ANR	1053931	Statement	]	1945:10:50436:50436	1053922	2	True				
ANR	1053932	ExpressionStatement	_addr	1945:12:50438:50443	1053922	3	True				
ANR	1053933	Identifier	_addr		1053922	0					
ANR	1053934	ExpressionStatement	_addr = str	1947:1:50450:50461	1053922	1	True				
ANR	1053935	AssignmentExpression	_addr = str		1053922	0		=			
ANR	1053936	Identifier	_addr		1053922	0					
ANR	1053937	Identifier	str		1053922	1					
ANR	1053938	IfStatement	if ( _addr )		1053922	2					
ANR	1053939	Condition	_addr	1949:5:50469:50473	1053922	0	True				
ANR	1053940	Identifier	_addr		1053922	0					
ANR	1053941	CompoundStatement		9:2:95:148	1053922	1					
ANR	1053942	IdentifierDeclStatement	Sinful sinful ( _addr ) ;	1950:2:50481:50501	1053922	0	True				
ANR	1053943	IdentifierDecl	sinful ( _addr )		1053922	0					
ANR	1053944	IdentifierDeclType	Sinful		1053922	0					
ANR	1053945	Identifier	sinful		1053922	1					
ANR	1053946	Identifier	_addr		1053922	2					
ANR	1053947	IdentifierDeclStatement	char const * priv_net = sinful . getPrivateNetworkName ( ) ;	1951:2:50505:50558	1053922	1	True				
ANR	1053948	IdentifierDecl	* priv_net = sinful . getPrivateNetworkName ( )		1053922	0					
ANR	1053949	IdentifierDeclType	char const *		1053922	0					
ANR	1053950	Identifier	priv_net		1053922	1					
ANR	1053951	AssignmentExpression	* priv_net = sinful . getPrivateNetworkName ( )		1053922	2		=			
ANR	1053952	Identifier	priv_net		1053922	0					
ANR	1053953	CallExpression	sinful . getPrivateNetworkName ( )		1053922	1					
ANR	1053954	Callee	sinful . getPrivateNetworkName		1053922	0					
ANR	1053955	MemberAccess	sinful . getPrivateNetworkName		1053922	0					
ANR	1053956	Identifier	sinful		1053922	0					
ANR	1053957	Identifier	getPrivateNetworkName		1053922	1					
ANR	1053958	ArgumentList			1053922	1					
ANR	1053959	IfStatement	if ( priv_net )		1053922	2					
ANR	1053960	Condition	priv_net	1952:6:50566:50573	1053922	0	True				
ANR	1053961	Identifier	priv_net		1053922	0					
ANR	1053962	CompoundStatement		12:3:203:259	1053922	1					
ANR	1053963	IdentifierDeclStatement	bool using_private = false ;	1953:3:50582:50608	1053922	0	True				
ANR	1053964	IdentifierDecl	using_private = false		1053922	0					
ANR	1053965	IdentifierDeclType	bool		1053922	0					
ANR	1053966	Identifier	using_private		1053922	1					
ANR	1053967	AssignmentExpression	using_private = false		1053922	2		=			
ANR	1053968	Identifier	false		1053922	0					
ANR	1053969	Identifier	false		1053922	1					
ANR	1053970	IdentifierDeclStatement	"char * our_network_name = param ( ""PRIVATE_NETWORK_NAME"" ) ;"	1954:3:50613:50669	1053922	1	True				
ANR	1053971	IdentifierDecl	"* our_network_name = param ( ""PRIVATE_NETWORK_NAME"" )"		1053922	0					
ANR	1053972	IdentifierDeclType	char *		1053922	0					
ANR	1053973	Identifier	our_network_name		1053922	1					
ANR	1053974	AssignmentExpression	"* our_network_name = param ( ""PRIVATE_NETWORK_NAME"" )"		1053922	2		=			
ANR	1053975	Identifier	our_network_name		1053922	0					
ANR	1053976	CallExpression	"param ( ""PRIVATE_NETWORK_NAME"" )"		1053922	1					
ANR	1053977	Callee	param		1053922	0					
ANR	1053978	Identifier	param		1053922	0					
ANR	1053979	ArgumentList	"""PRIVATE_NETWORK_NAME"""		1053922	1					
ANR	1053980	Argument	"""PRIVATE_NETWORK_NAME"""		1053922	0					
ANR	1053981	PrimaryExpression	"""PRIVATE_NETWORK_NAME"""		1053922	0					
ANR	1053982	IfStatement	if ( our_network_name )		1053922	2					
ANR	1053983	Condition	our_network_name	1955:7:50678:50693	1053922	0	True				
ANR	1053984	Identifier	our_network_name		1053922	0					
ANR	1053985	CompoundStatement		13:26:287:287	1053922	1					
ANR	1053986	IfStatement	"if ( strcmp ( our_network_name , priv_net ) == 0 )"		1053922	0					
ANR	1053987	Condition	"strcmp ( our_network_name , priv_net ) == 0"	1956:8:50707:50747	1053922	0	True				
ANR	1053988	EqualityExpression	"strcmp ( our_network_name , priv_net ) == 0"		1053922	0		==			
ANR	1053989	CallExpression	"strcmp ( our_network_name , priv_net )"		1053922	0					
ANR	1053990	Callee	strcmp		1053922	0					
ANR	1053991	Identifier	strcmp		1053922	0					
ANR	1053992	ArgumentList	our_network_name		1053922	1					
ANR	1053993	Argument	our_network_name		1053922	0					
ANR	1053994	Identifier	our_network_name		1053922	0					
ANR	1053995	Argument	priv_net		1053922	1					
ANR	1053996	Identifier	priv_net		1053922	0					
ANR	1053997	PrimaryExpression	0		1053922	1					
ANR	1053998	CompoundStatement		15:5:348:395	1053922	1					
ANR	1053999	IdentifierDeclStatement	char const * priv_addr = sinful . getPrivateAddr ( ) ;	1957:5:50758:50805	1053922	0	True				
ANR	1054000	IdentifierDecl	* priv_addr = sinful . getPrivateAddr ( )		1053922	0					
ANR	1054001	IdentifierDeclType	char const *		1053922	0					
ANR	1054002	Identifier	priv_addr		1053922	1					
ANR	1054003	AssignmentExpression	* priv_addr = sinful . getPrivateAddr ( )		1053922	2		=			
ANR	1054004	Identifier	priv_addr		1053922	0					
ANR	1054005	CallExpression	sinful . getPrivateAddr ( )		1053922	1					
ANR	1054006	Callee	sinful . getPrivateAddr		1053922	0					
ANR	1054007	MemberAccess	sinful . getPrivateAddr		1053922	0					
ANR	1054008	Identifier	sinful		1053922	0					
ANR	1054009	Identifier	getPrivateAddr		1053922	1					
ANR	1054010	ArgumentList			1053922	1					
ANR	1054011	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Private network name matched.\\n"" )"	1958:5:50812:50867	1053922	1	True				
ANR	1054012	CallExpression	"dprintf ( D_HOSTNAME , ""Private network name matched.\\n"" )"		1053922	0					
ANR	1054013	Callee	dprintf		1053922	0					
ANR	1054014	Identifier	dprintf		1053922	0					
ANR	1054015	ArgumentList	D_HOSTNAME		1053922	1					
ANR	1054016	Argument	D_HOSTNAME		1053922	0					
ANR	1054017	Identifier	D_HOSTNAME		1053922	0					
ANR	1054018	Argument	"""Private network name matched.\\n"""		1053922	1					
ANR	1054019	PrimaryExpression	"""Private network name matched.\\n"""		1053922	0					
ANR	1054020	ExpressionStatement	using_private = true	1959:5:50874:50894	1053922	2	True				
ANR	1054021	AssignmentExpression	using_private = true		1053922	0		=			
ANR	1054022	Identifier	using_private		1053922	0					
ANR	1054023	Identifier	true		1053922	1					
ANR	1054024	IfStatement	if ( priv_addr )		1053922	3					
ANR	1054025	Condition	priv_addr	1960:9:50905:50913	1053922	0	True				
ANR	1054026	Identifier	priv_addr		1053922	0					
ANR	1054027	CompoundStatement		20:6:561:573	1053922	1					
ANR	1054028	IdentifierDeclStatement	MyString buf ;	1962:6:50971:50983	1053922	0	True				
ANR	1054029	IdentifierDecl	buf		1053922	0					
ANR	1054030	IdentifierDeclType	MyString		1053922	0					
ANR	1054031	Identifier	buf		1053922	1					
ANR	1054032	IfStatement	if ( * priv_addr != '<' )		1053922	1					
ANR	1054033	Condition	* priv_addr != '<'	1963:10:50995:51011	1053922	0	True				
ANR	1054034	EqualityExpression	* priv_addr != '<'		1053922	0		!=			
ANR	1054035	UnaryOperationExpression	* priv_addr		1053922	0					
ANR	1054036	UnaryOperator	*		1053922	0					
ANR	1054037	Identifier	priv_addr		1053922	1					
ANR	1054038	PrimaryExpression	'<'		1053922	1					
ANR	1054039	CompoundStatement		21:30:605:605	1053922	1					
ANR	1054040	ExpressionStatement	"buf . sprintf ( ""<%s>"" , priv_addr )"	1967:7:51125:51154	1053922	0	True				
ANR	1054041	CallExpression	"buf . sprintf ( ""<%s>"" , priv_addr )"		1053922	0					
ANR	1054042	Callee	buf . sprintf		1053922	0					
ANR	1054043	MemberAccess	buf . sprintf		1053922	0					
ANR	1054044	Identifier	buf		1053922	0					
ANR	1054045	Identifier	sprintf		1053922	1					
ANR	1054046	ArgumentList	"""<%s>"""		1053922	1					
ANR	1054047	Argument	"""<%s>"""		1053922	0					
ANR	1054048	PrimaryExpression	"""<%s>"""		1053922	0					
ANR	1054049	Argument	priv_addr		1053922	1					
ANR	1054050	Identifier	priv_addr		1053922	0					
ANR	1054051	ExpressionStatement	priv_addr = buf . Value ( )	1968:7:51163:51186	1053922	1	True				
ANR	1054052	AssignmentExpression	priv_addr = buf . Value ( )		1053922	0		=			
ANR	1054053	Identifier	priv_addr		1053922	0					
ANR	1054054	CallExpression	buf . Value ( )		1053922	1					
ANR	1054055	Callee	buf . Value		1053922	0					
ANR	1054056	MemberAccess	buf . Value		1053922	0					
ANR	1054057	Identifier	buf		1053922	0					
ANR	1054058	Identifier	Value		1053922	1					
ANR	1054059	ArgumentList			1053922	1					
ANR	1054060	Statement	delete	1970:6:51202:51207	1053922	2	True				
ANR	1054061	Statement	[	1970:13:51209:51209	1053922	3	True				
ANR	1054062	Statement	]	1970:14:51210:51210	1053922	4	True				
ANR	1054063	ExpressionStatement	_addr	1970:16:51212:51217	1053922	5	True				
ANR	1054064	Identifier	_addr		1053922	0					
ANR	1054065	ExpressionStatement	_addr = strnewp ( priv_addr )	1971:6:51225:51253	1053922	6	True				
ANR	1054066	AssignmentExpression	_addr = strnewp ( priv_addr )		1053922	0		=			
ANR	1054067	Identifier	_addr		1053922	0					
ANR	1054068	CallExpression	strnewp ( priv_addr )		1053922	1					
ANR	1054069	Callee	strnewp		1053922	0					
ANR	1054070	Identifier	strnewp		1053922	0					
ANR	1054071	ArgumentList	priv_addr		1053922	1					
ANR	1054072	Argument	priv_addr		1053922	0					
ANR	1054073	Identifier	priv_addr		1053922	0					
ANR	1054074	ExpressionStatement	sinful = Sinful ( _addr )	1972:6:51261:51285	1053922	7	True				
ANR	1054075	AssignmentExpression	sinful = Sinful ( _addr )		1053922	0		=			
ANR	1054076	Identifier	sinful		1053922	0					
ANR	1054077	CallExpression	Sinful ( _addr )		1053922	1					
ANR	1054078	Callee	Sinful		1053922	0					
ANR	1054079	Identifier	Sinful		1053922	0					
ANR	1054080	ArgumentList	_addr		1053922	1					
ANR	1054081	Argument	_addr		1053922	0					
ANR	1054082	Identifier	_addr		1053922	0					
ANR	1054083	ElseStatement	else		1053922	0					
ANR	1054084	CompoundStatement		32:10:894:894	1053922	0					
ANR	1054085	ExpressionStatement	sinful . setCCBContact ( NULL )	1977:6:51404:51430	1053922	0	True				
ANR	1054086	CallExpression	sinful . setCCBContact ( NULL )		1053922	0					
ANR	1054087	Callee	sinful . setCCBContact		1053922	0					
ANR	1054088	MemberAccess	sinful . setCCBContact		1053922	0					
ANR	1054089	Identifier	sinful		1053922	0					
ANR	1054090	Identifier	setCCBContact		1053922	1					
ANR	1054091	ArgumentList	NULL		1053922	1					
ANR	1054092	Argument	NULL		1053922	0					
ANR	1054093	Identifier	NULL		1053922	0					
ANR	1054094	Statement	delete	1978:6:51438:51443	1053922	1	True				
ANR	1054095	Statement	[	1978:13:51445:51445	1053922	2	True				
ANR	1054096	Statement	]	1978:14:51446:51446	1053922	3	True				
ANR	1054097	ExpressionStatement	_addr	1978:16:51448:51453	1053922	4	True				
ANR	1054098	Identifier	_addr		1053922	0					
ANR	1054099	ExpressionStatement	_addr = strnewp ( sinful . getSinful ( ) )	1979:6:51461:51498	1053922	5	True				
ANR	1054100	AssignmentExpression	_addr = strnewp ( sinful . getSinful ( ) )		1053922	0		=			
ANR	1054101	Identifier	_addr		1053922	0					
ANR	1054102	CallExpression	strnewp ( sinful . getSinful ( ) )		1053922	1					
ANR	1054103	Callee	strnewp		1053922	0					
ANR	1054104	Identifier	strnewp		1053922	0					
ANR	1054105	ArgumentList	sinful . getSinful ( )		1053922	1					
ANR	1054106	Argument	sinful . getSinful ( )		1053922	0					
ANR	1054107	CallExpression	sinful . getSinful ( )		1053922	0					
ANR	1054108	Callee	sinful . getSinful		1053922	0					
ANR	1054109	MemberAccess	sinful . getSinful		1053922	0					
ANR	1054110	Identifier	sinful		1053922	0					
ANR	1054111	Identifier	getSinful		1053922	1					
ANR	1054112	ArgumentList			1053922	1					
ANR	1054113	ExpressionStatement	free ( our_network_name )	1982:4:51517:51541	1053922	1	True				
ANR	1054114	CallExpression	free ( our_network_name )		1053922	0					
ANR	1054115	Callee	free		1053922	0					
ANR	1054116	Identifier	free		1053922	0					
ANR	1054117	ArgumentList	our_network_name		1053922	1					
ANR	1054118	Argument	our_network_name		1053922	0					
ANR	1054119	Identifier	our_network_name		1053922	0					
ANR	1054120	IfStatement	if ( ! using_private )		1053922	3					
ANR	1054121	Condition	! using_private	1984:7:51555:51568	1053922	0	True				
ANR	1054122	UnaryOperationExpression	! using_private		1053922	0					
ANR	1054123	UnaryOperator	!		1053922	0					
ANR	1054124	Identifier	using_private		1053922	1					
ANR	1054125	CompoundStatement		42:24:1162:1162	1053922	1					
ANR	1054126	ExpressionStatement	sinful . setPrivateAddr ( NULL )	1987:4:51682:51709	1053922	0	True				
ANR	1054127	CallExpression	sinful . setPrivateAddr ( NULL )		1053922	0					
ANR	1054128	Callee	sinful . setPrivateAddr		1053922	0					
ANR	1054129	MemberAccess	sinful . setPrivateAddr		1053922	0					
ANR	1054130	Identifier	sinful		1053922	0					
ANR	1054131	Identifier	setPrivateAddr		1053922	1					
ANR	1054132	ArgumentList	NULL		1053922	1					
ANR	1054133	Argument	NULL		1053922	0					
ANR	1054134	Identifier	NULL		1053922	0					
ANR	1054135	ExpressionStatement	sinful . setPrivateNetworkName ( NULL )	1988:4:51715:51749	1053922	1	True				
ANR	1054136	CallExpression	sinful . setPrivateNetworkName ( NULL )		1053922	0					
ANR	1054137	Callee	sinful . setPrivateNetworkName		1053922	0					
ANR	1054138	MemberAccess	sinful . setPrivateNetworkName		1053922	0					
ANR	1054139	Identifier	sinful		1053922	0					
ANR	1054140	Identifier	setPrivateNetworkName		1053922	1					
ANR	1054141	ArgumentList	NULL		1053922	1					
ANR	1054142	Argument	NULL		1053922	0					
ANR	1054143	Identifier	NULL		1053922	0					
ANR	1054144	Statement	delete	1989:4:51755:51760	1053922	2	True				
ANR	1054145	Statement	[	1989:11:51762:51762	1053922	3	True				
ANR	1054146	Statement	]	1989:12:51763:51763	1053922	4	True				
ANR	1054147	ExpressionStatement	_addr	1989:14:51765:51770	1053922	5	True				
ANR	1054148	Identifier	_addr		1053922	0					
ANR	1054149	ExpressionStatement	_addr = strnewp ( sinful . getSinful ( ) )	1990:4:51776:51813	1053922	6	True				
ANR	1054150	AssignmentExpression	_addr = strnewp ( sinful . getSinful ( ) )		1053922	0		=			
ANR	1054151	Identifier	_addr		1053922	0					
ANR	1054152	CallExpression	strnewp ( sinful . getSinful ( ) )		1053922	1					
ANR	1054153	Callee	strnewp		1053922	0					
ANR	1054154	Identifier	strnewp		1053922	0					
ANR	1054155	ArgumentList	sinful . getSinful ( )		1053922	1					
ANR	1054156	Argument	sinful . getSinful ( )		1053922	0					
ANR	1054157	CallExpression	sinful . getSinful ( )		1053922	0					
ANR	1054158	Callee	sinful . getSinful		1053922	0					
ANR	1054159	MemberAccess	sinful . getSinful		1053922	0					
ANR	1054160	Identifier	sinful		1053922	0					
ANR	1054161	Identifier	getSinful		1053922	1					
ANR	1054162	ArgumentList			1053922	1					
ANR	1054163	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Private network name not matched.\\n"" )"	1991:4:51819:51878	1053922	7	True				
ANR	1054164	CallExpression	"dprintf ( D_HOSTNAME , ""Private network name not matched.\\n"" )"		1053922	0					
ANR	1054165	Callee	dprintf		1053922	0					
ANR	1054166	Identifier	dprintf		1053922	0					
ANR	1054167	ArgumentList	D_HOSTNAME		1053922	1					
ANR	1054168	Argument	D_HOSTNAME		1053922	0					
ANR	1054169	Identifier	D_HOSTNAME		1053922	0					
ANR	1054170	Argument	"""Private network name not matched.\\n"""		1053922	1					
ANR	1054171	PrimaryExpression	"""Private network name not matched.\\n"""		1053922	0					
ANR	1054172	IfStatement	if ( sinful . getCCBContact ( ) )		1053922	3					
ANR	1054173	Condition	sinful . getCCBContact ( )	1995:6:51896:51917	1053922	0	True				
ANR	1054174	CallExpression	sinful . getCCBContact ( )		1053922	0					
ANR	1054175	Callee	sinful . getCCBContact		1053922	0					
ANR	1054176	MemberAccess	sinful . getCCBContact		1053922	0					
ANR	1054177	Identifier	sinful		1053922	0					
ANR	1054178	Identifier	getCCBContact		1053922	1					
ANR	1054179	ArgumentList			1053922	1					
ANR	1054180	CompoundStatement		53:31:1511:1511	1053922	1					
ANR	1054181	ExpressionStatement	m_has_udp_command_port = false	1998:3:52001:52031	1053922	0	True				
ANR	1054182	AssignmentExpression	m_has_udp_command_port = false		1053922	0		=			
ANR	1054183	Identifier	m_has_udp_command_port		1053922	0					
ANR	1054184	Identifier	false		1053922	1					
ANR	1054185	IfStatement	if ( sinful . getSharedPortID ( ) )		1053922	4					
ANR	1054186	Condition	sinful . getSharedPortID ( )	2000:6:52043:52066	1053922	0	True				
ANR	1054187	CallExpression	sinful . getSharedPortID ( )		1053922	0					
ANR	1054188	Callee	sinful . getSharedPortID		1053922	0					
ANR	1054189	MemberAccess	sinful . getSharedPortID		1053922	0					
ANR	1054190	Identifier	sinful		1053922	0					
ANR	1054191	Identifier	getSharedPortID		1053922	1					
ANR	1054192	ArgumentList			1053922	1					
ANR	1054193	CompoundStatement		58:33:1660:1660	1053922	1					
ANR	1054194	ExpressionStatement	m_has_udp_command_port = false	2002:3:52112:52142	1053922	0	True				
ANR	1054195	AssignmentExpression	m_has_udp_command_port = false		1053922	0		=			
ANR	1054196	Identifier	m_has_udp_command_port		1053922	0					
ANR	1054197	Identifier	false		1053922	1					
ANR	1054198	IfStatement	if ( sinful . noUDP ( ) )		1053922	5					
ANR	1054199	Condition	sinful . noUDP ( )	2004:6:52154:52167	1053922	0	True				
ANR	1054200	CallExpression	sinful . noUDP ( )		1053922	0					
ANR	1054201	Callee	sinful . noUDP		1053922	0					
ANR	1054202	MemberAccess	sinful . noUDP		1053922	0					
ANR	1054203	Identifier	sinful		1053922	0					
ANR	1054204	Identifier	noUDP		1053922	1					
ANR	1054205	ArgumentList			1053922	1					
ANR	1054206	CompoundStatement		62:23:1761:1761	1053922	1					
ANR	1054207	ExpressionStatement	m_has_udp_command_port = false	2006:3:52242:52272	1053922	0	True				
ANR	1054208	AssignmentExpression	m_has_udp_command_port = false		1053922	0		=			
ANR	1054209	Identifier	m_has_udp_command_port		1053922	0					
ANR	1054210	Identifier	false		1053922	1					
ANR	1054211	ReturnStatement	return ;	2010:1:52283:52289	1053922	3	True				
ANR	1054212	ReturnType	void		1053922	1					
ANR	1054213	Identifier	Daemon :: New_addr		1053922	2					
ANR	1054214	ParameterList	char * str		1053922	3					
ANR	1054215	Parameter	char * str	1942:18:50397:50405	1053922	0	True				
ANR	1054216	ParameterType	char *		1053922	0					
ANR	1054217	Identifier	str		1053922	1					
ANR	1054218	CFGEntryNode	ENTRY		1053922		True				
ANR	1054219	CFGExitNode	EXIT		1053922		True				
ANR	1054220	Symbol	sinful . getCCBContact		1053922						
ANR	1054221	Symbol	sinful . getSinful		1053922						
ANR	1054222	Symbol	param		1053922						
ANR	1054223	Symbol	* priv_addr		1053922						
ANR	1054224	Symbol	buf . Value		1053922						
ANR	1054225	Symbol	Sinful		1053922						
ANR	1054226	Symbol	strnewp		1053922						
ANR	1054227	Symbol	sinful . getPrivateAddr		1053922						
ANR	1054228	Symbol	sinful		1053922						
ANR	1054229	Symbol	strcmp		1053922						
ANR	1054230	Symbol	D_HOSTNAME		1053922						
ANR	1054231	Symbol	sinful . getPrivateNetworkName		1053922						
ANR	1054232	Symbol	NULL		1053922						
ANR	1054233	Symbol	false		1053922						
ANR	1054234	Symbol	priv_addr		1053922						
ANR	1054235	Symbol	using_private		1053922						
ANR	1054236	Symbol	priv_net		1053922						
ANR	1054237	Symbol	str		1053922						
ANR	1054238	Symbol	sinful . getSharedPortID		1053922						
ANR	1054239	Symbol	our_network_name		1053922						
ANR	1054240	Symbol	buf		1053922						
ANR	1054241	Symbol	sinful . noUDP		1053922						
ANR	1054242	Symbol	_addr		1053922						
ANR	1054243	Symbol	true		1053922						
ANR	1054244	Symbol	m_has_udp_command_port		1053922						
ANR	1054245	Function	Daemon :: New_version	2013:0:52294:52410							
ANR	1054246	FunctionDef	Daemon :: New_version (char * ver)		1054245	0					
ANR	1054247	CompoundStatement		2015:0:52334:52410	1054245	0					
ANR	1054248	IfStatement	if ( _version )		1054245	0					
ANR	1054249	Condition	_version	2016:5:52341:52348	1054245	0	True				
ANR	1054250	Identifier	_version		1054245	0					
ANR	1054251	CompoundStatement		2:16:17:17	1054245	1					
ANR	1054252	Statement	delete	2017:2:52356:52361	1054245	0	True				
ANR	1054253	Statement	[	2017:9:52363:52363	1054245	1	True				
ANR	1054254	Statement	]	2017:10:52364:52364	1054245	2	True				
ANR	1054255	ExpressionStatement	_version	2017:12:52366:52374	1054245	3	True				
ANR	1054256	Identifier	_version		1054245	0					
ANR	1054257	ExpressionStatement	_version = ver	2019:1:52381:52395	1054245	1	True				
ANR	1054258	AssignmentExpression	_version = ver		1054245	0		=			
ANR	1054259	Identifier	_version		1054245	0					
ANR	1054260	Identifier	ver		1054245	1					
ANR	1054261	ReturnStatement	return ver ;	2020:1:52398:52408	1054245	2	True				
ANR	1054262	Identifier	ver		1054245	0					
ANR	1054263	ReturnType	char *		1054245	1					
ANR	1054264	Identifier	Daemon :: New_version		1054245	2					
ANR	1054265	ParameterList	char * ver		1054245	3					
ANR	1054266	Parameter	char * ver	2014:22:52322:52330	1054245	0	True				
ANR	1054267	ParameterType	char *		1054245	0					
ANR	1054268	Identifier	ver		1054245	1					
ANR	1054269	CFGEntryNode	ENTRY		1054245		True				
ANR	1054270	CFGExitNode	EXIT		1054245		True				
ANR	1054271	Symbol	ver		1054245						
ANR	1054272	Symbol	_version		1054245						
ANR	1054273	Function	Daemon :: New_platform	2023:0:52413:52536							
ANR	1054274	FunctionDef	Daemon :: New_platform (char * plat)		1054273	0					
ANR	1054275	CompoundStatement		2025:0:52455:52536	1054273	0					
ANR	1054276	IfStatement	if ( _platform )		1054273	0					
ANR	1054277	Condition	_platform	2026:5:52462:52470	1054273	0	True				
ANR	1054278	Identifier	_platform		1054273	0					
ANR	1054279	CompoundStatement		2:17:18:18	1054273	1					
ANR	1054280	Statement	delete	2027:2:52478:52483	1054273	0	True				
ANR	1054281	Statement	[	2027:9:52485:52485	1054273	1	True				
ANR	1054282	Statement	]	2027:10:52486:52486	1054273	2	True				
ANR	1054283	ExpressionStatement	_platform	2027:12:52488:52497	1054273	3	True				
ANR	1054284	Identifier	_platform		1054273	0					
ANR	1054285	ExpressionStatement	_platform = plat	2029:1:52504:52520	1054273	1	True				
ANR	1054286	AssignmentExpression	_platform = plat		1054273	0		=			
ANR	1054287	Identifier	_platform		1054273	0					
ANR	1054288	Identifier	plat		1054273	1					
ANR	1054289	ReturnStatement	return plat ;	2030:1:52523:52534	1054273	2	True				
ANR	1054290	Identifier	plat		1054273	0					
ANR	1054291	ReturnType	char *		1054273	1					
ANR	1054292	Identifier	Daemon :: New_platform		1054273	2					
ANR	1054293	ParameterList	char * plat		1054273	3					
ANR	1054294	Parameter	char * plat	2024:23:52442:52451	1054273	0	True				
ANR	1054295	ParameterType	char *		1054273	0					
ANR	1054296	Identifier	plat		1054273	1					
ANR	1054297	CFGEntryNode	ENTRY		1054273		True				
ANR	1054298	CFGExitNode	EXIT		1054273		True				
ANR	1054299	Symbol	_platform		1054273						
ANR	1054300	Symbol	plat		1054273						
ANR	1054301	Function	Daemon :: New_name	2034:0:52540:52643							
ANR	1054302	FunctionDef	Daemon :: New_name (char * str)		1054301	0					
ANR	1054303	CompoundStatement		2036:0:52576:52643	1054301	0					
ANR	1054304	IfStatement	if ( _name )		1054301	0					
ANR	1054305	Condition	_name	2037:5:52583:52587	1054301	0	True				
ANR	1054306	Identifier	_name		1054301	0					
ANR	1054307	CompoundStatement		2:13:14:14	1054301	1					
ANR	1054308	Statement	delete	2038:2:52595:52600	1054301	0	True				
ANR	1054309	Statement	[	2038:9:52602:52602	1054301	1	True				
ANR	1054310	Statement	]	2038:10:52603:52603	1054301	2	True				
ANR	1054311	ExpressionStatement	_name	2038:12:52605:52610	1054301	3	True				
ANR	1054312	Identifier	_name		1054301	0					
ANR	1054313	ExpressionStatement	_name = str	2040:1:52617:52628	1054301	1	True				
ANR	1054314	AssignmentExpression	_name = str		1054301	0		=			
ANR	1054315	Identifier	_name		1054301	0					
ANR	1054316	Identifier	str		1054301	1					
ANR	1054317	ReturnStatement	return str ;	2041:1:52631:52641	1054301	2	True				
ANR	1054318	Identifier	str		1054301	0					
ANR	1054319	ReturnType	char *		1054301	1					
ANR	1054320	Identifier	Daemon :: New_name		1054301	2					
ANR	1054321	ParameterList	char * str		1054301	3					
ANR	1054322	Parameter	char * str	2035:18:52564:52572	1054301	0	True				
ANR	1054323	ParameterType	char *		1054301	0					
ANR	1054324	Identifier	str		1054301	1					
ANR	1054325	CFGEntryNode	ENTRY		1054301		True				
ANR	1054326	CFGExitNode	EXIT		1054301		True				
ANR	1054327	Symbol	str		1054301						
ANR	1054328	Symbol	_name		1054301						
ANR	1054329	Function	Daemon :: New_pool	2045:0:52647:52750							
ANR	1054330	FunctionDef	Daemon :: New_pool (char * str)		1054329	0					
ANR	1054331	CompoundStatement		2047:0:52683:52750	1054329	0					
ANR	1054332	IfStatement	if ( _pool )		1054329	0					
ANR	1054333	Condition	_pool	2048:5:52690:52694	1054329	0	True				
ANR	1054334	Identifier	_pool		1054329	0					
ANR	1054335	CompoundStatement		2:13:14:14	1054329	1					
ANR	1054336	Statement	delete	2049:2:52702:52707	1054329	0	True				
ANR	1054337	Statement	[	2049:9:52709:52709	1054329	1	True				
ANR	1054338	Statement	]	2049:10:52710:52710	1054329	2	True				
ANR	1054339	ExpressionStatement	_pool	2049:12:52712:52717	1054329	3	True				
ANR	1054340	Identifier	_pool		1054329	0					
ANR	1054341	ExpressionStatement	_pool = str	2051:1:52724:52735	1054329	1	True				
ANR	1054342	AssignmentExpression	_pool = str		1054329	0		=			
ANR	1054343	Identifier	_pool		1054329	0					
ANR	1054344	Identifier	str		1054329	1					
ANR	1054345	ReturnStatement	return str ;	2052:1:52738:52748	1054329	2	True				
ANR	1054346	Identifier	str		1054329	0					
ANR	1054347	ReturnType	char *		1054329	1					
ANR	1054348	Identifier	Daemon :: New_pool		1054329	2					
ANR	1054349	ParameterList	char * str		1054329	3					
ANR	1054350	Parameter	char * str	2046:18:52671:52679	1054329	0	True				
ANR	1054351	ParameterType	char *		1054329	0					
ANR	1054352	Identifier	str		1054329	1					
ANR	1054353	CFGEntryNode	ENTRY		1054329		True				
ANR	1054354	CFGExitNode	EXIT		1054329		True				
ANR	1054355	Symbol	str		1054329						
ANR	1054356	Symbol	_pool		1054329						
ANR	1054357	Function	Daemon :: checkAddr	2056:0:52754:53851							
ANR	1054358	FunctionDef	Daemon :: checkAddr ()		1054357	0					
ANR	1054359	CompoundStatement		2058:0:52785:53851	1054357	0					
ANR	1054360	IdentifierDeclStatement	bool just_tried_locate = false ;	2059:1:52788:52818	1054357	0	True				
ANR	1054361	IdentifierDecl	just_tried_locate = false		1054357	0					
ANR	1054362	IdentifierDeclType	bool		1054357	0					
ANR	1054363	Identifier	just_tried_locate		1054357	1					
ANR	1054364	AssignmentExpression	just_tried_locate = false		1054357	2		=			
ANR	1054365	Identifier	false		1054357	0					
ANR	1054366	Identifier	false		1054357	1					
ANR	1054367	IfStatement	if ( ! _addr )		1054357	1					
ANR	1054368	Condition	! _addr	2060:5:52825:52831	1054357	0	True				
ANR	1054369	UnaryOperationExpression	! _addr		1054357	0					
ANR	1054370	UnaryOperator	!		1054357	0					
ANR	1054371	Identifier	_addr		1054357	1					
ANR	1054372	CompoundStatement		3:15:49:49	1054357	1					
ANR	1054373	ExpressionStatement	locate ( )	2061:2:52839:52847	1054357	0	True				
ANR	1054374	CallExpression	locate ( )		1054357	0					
ANR	1054375	Callee	locate		1054357	0					
ANR	1054376	Identifier	locate		1054357	0					
ANR	1054377	ArgumentList			1054357	1					
ANR	1054378	ExpressionStatement	just_tried_locate = true	2062:2:52851:52875	1054357	1	True				
ANR	1054379	AssignmentExpression	just_tried_locate = true		1054357	0		=			
ANR	1054380	Identifier	just_tried_locate		1054357	0					
ANR	1054381	Identifier	true		1054357	1					
ANR	1054382	IfStatement	if ( ! _addr )		1054357	2					
ANR	1054383	Condition	! _addr	2064:5:52885:52891	1054357	0	True				
ANR	1054384	UnaryOperationExpression	! _addr		1054357	0					
ANR	1054385	UnaryOperator	!		1054357	0					
ANR	1054386	Identifier	_addr		1054357	1					
ANR	1054387	CompoundStatement		7:15:109:109	1054357	1					
ANR	1054388	ReturnStatement	return false ;	2066:2:52946:52958	1054357	0	True				
ANR	1054389	Identifier	false		1054357	0					
ANR	1054390	IfStatement	if ( _port == 0 && Sinful ( _addr ) . getSharedPortID ( ) )		1054357	3					
ANR	1054391	Condition	_port == 0 && Sinful ( _addr ) . getSharedPortID ( )	2068:5:52968:53012	1054357	0	True				
ANR	1054392	AndExpression	_port == 0 && Sinful ( _addr ) . getSharedPortID ( )		1054357	0		&&			
ANR	1054393	EqualityExpression	_port == 0		1054357	0		==			
ANR	1054394	Identifier	_port		1054357	0					
ANR	1054395	PrimaryExpression	0		1054357	1					
ANR	1054396	CallExpression	Sinful ( _addr ) . getSharedPortID ( )		1054357	1					
ANR	1054397	Callee	Sinful ( _addr ) . getSharedPortID		1054357	0					
ANR	1054398	MemberAccess	Sinful ( _addr ) . getSharedPortID		1054357	0					
ANR	1054399	CallExpression	Sinful ( _addr )		1054357	0					
ANR	1054400	Callee	Sinful		1054357	0					
ANR	1054401	Identifier	Sinful		1054357	0					
ANR	1054402	ArgumentList	_addr		1054357	1					
ANR	1054403	Argument	_addr		1054357	0					
ANR	1054404	Identifier	_addr		1054357	0					
ANR	1054405	Identifier	getSharedPortID		1054357	1					
ANR	1054406	ArgumentList			1054357	1					
ANR	1054407	CompoundStatement		11:52:229:229	1054357	1					
ANR	1054408	ReturnStatement	return true ;	2072:2:53173:53184	1054357	0	True				
ANR	1054409	Identifier	true		1054357	0					
ANR	1054410	ElseStatement	else		1054357	0					
ANR	1054411	IfStatement	if ( _port == 0 )		1054357	0					
ANR	1054412	Condition	_port == 0	2074:10:53199:53208	1054357	0	True				
ANR	1054413	EqualityExpression	_port == 0		1054357	0		==			
ANR	1054414	Identifier	_port		1054357	0					
ANR	1054415	PrimaryExpression	0		1054357	1					
ANR	1054416	CompoundStatement		17:23:426:426	1054357	1					
ANR	1054417	IfStatement	if ( just_tried_locate )		1054357	0					
ANR	1054418	Condition	just_tried_locate	2078:6:53378:53394	1054357	0	True				
ANR	1054419	Identifier	just_tried_locate		1054357	0					
ANR	1054420	CompoundStatement		21:26:612:612	1054357	1					
ANR	1054421	ExpressionStatement	"newError ( CA_LOCATE_FAILED , ""port is still 0 after locate(), address invalid"" )"	2079:3:53403:53489	1054357	0	True				
ANR	1054422	CallExpression	"newError ( CA_LOCATE_FAILED , ""port is still 0 after locate(), address invalid"" )"		1054357	0					
ANR	1054423	Callee	newError		1054357	0					
ANR	1054424	Identifier	newError		1054357	0					
ANR	1054425	ArgumentList	CA_LOCATE_FAILED		1054357	1					
ANR	1054426	Argument	CA_LOCATE_FAILED		1054357	0					
ANR	1054427	Identifier	CA_LOCATE_FAILED		1054357	0					
ANR	1054428	Argument	"""port is still 0 after locate(), address invalid"""		1054357	1					
ANR	1054429	PrimaryExpression	"""port is still 0 after locate(), address invalid"""		1054357	0					
ANR	1054430	ReturnStatement	return false ;	2081:3:53494:53506	1054357	1	True				
ANR	1054431	Identifier	false		1054357	0					
ANR	1054432	ExpressionStatement	_tried_locate = false	2084:2:53570:53591	1054357	1	True				
ANR	1054433	AssignmentExpression	_tried_locate = false		1054357	0		=			
ANR	1054434	Identifier	_tried_locate		1054357	0					
ANR	1054435	Identifier	false		1054357	1					
ANR	1054436	Statement	delete	2085:2:53595:53600	1054357	2	True				
ANR	1054437	Statement	[	2085:9:53602:53602	1054357	3	True				
ANR	1054438	Statement	]	2085:10:53603:53603	1054357	4	True				
ANR	1054439	ExpressionStatement	_addr	2085:12:53605:53610	1054357	5	True				
ANR	1054440	Identifier	_addr		1054357	0					
ANR	1054441	ExpressionStatement	_addr = NULL	2086:2:53614:53626	1054357	6	True				
ANR	1054442	AssignmentExpression	_addr = NULL		1054357	0		=			
ANR	1054443	Identifier	_addr		1054357	0					
ANR	1054444	Identifier	NULL		1054357	1					
ANR	1054445	IfStatement	if ( _is_local )		1054357	7					
ANR	1054446	Condition	_is_local	2087:6:53634:53642	1054357	0	True				
ANR	1054447	Identifier	_is_local		1054357	0					
ANR	1054448	CompoundStatement		30:18:860:860	1054357	1					
ANR	1054449	Statement	delete	2088:3:53651:53656	1054357	0	True				
ANR	1054450	Statement	[	2088:10:53658:53658	1054357	1	True				
ANR	1054451	Statement	]	2088:11:53659:53659	1054357	2	True				
ANR	1054452	ExpressionStatement	_name	2088:13:53661:53666	1054357	3	True				
ANR	1054453	Identifier	_name		1054357	0					
ANR	1054454	ExpressionStatement	_name = NULL	2089:3:53671:53683	1054357	4	True				
ANR	1054455	AssignmentExpression	_name = NULL		1054357	0		=			
ANR	1054456	Identifier	_name		1054357	0					
ANR	1054457	Identifier	NULL		1054357	1					
ANR	1054458	ExpressionStatement	locate ( )	2091:2:53691:53699	1054357	8	True				
ANR	1054459	CallExpression	locate ( )		1054357	0					
ANR	1054460	Callee	locate		1054357	0					
ANR	1054461	Identifier	locate		1054357	0					
ANR	1054462	ArgumentList			1054357	1					
ANR	1054463	IfStatement	if ( _port == 0 )		1054357	9					
ANR	1054464	Condition	_port == 0	2092:6:53707:53716	1054357	0	True				
ANR	1054465	EqualityExpression	_port == 0		1054357	0		==			
ANR	1054466	Identifier	_port		1054357	0					
ANR	1054467	PrimaryExpression	0		1054357	1					
ANR	1054468	CompoundStatement		35:19:934:934	1054357	1					
ANR	1054469	ExpressionStatement	"newError ( CA_LOCATE_FAILED , ""port is still 0 after locate(), address invalid"" )"	2093:3:53725:53811	1054357	0	True				
ANR	1054470	CallExpression	"newError ( CA_LOCATE_FAILED , ""port is still 0 after locate(), address invalid"" )"		1054357	0					
ANR	1054471	Callee	newError		1054357	0					
ANR	1054472	Identifier	newError		1054357	0					
ANR	1054473	ArgumentList	CA_LOCATE_FAILED		1054357	1					
ANR	1054474	Argument	CA_LOCATE_FAILED		1054357	0					
ANR	1054475	Identifier	CA_LOCATE_FAILED		1054357	0					
ANR	1054476	Argument	"""port is still 0 after locate(), address invalid"""		1054357	1					
ANR	1054477	PrimaryExpression	"""port is still 0 after locate(), address invalid"""		1054357	0					
ANR	1054478	ReturnStatement	return false ;	2095:3:53816:53828	1054357	1	True				
ANR	1054479	Identifier	false		1054357	0					
ANR	1054480	ReturnStatement	return true ;	2098:1:53838:53849	1054357	4	True				
ANR	1054481	Identifier	true		1054357	0					
ANR	1054482	ReturnType	bool		1054357	1					
ANR	1054483	Identifier	Daemon :: checkAddr		1054357	2					
ANR	1054484	ParameterList			1054357	3					
ANR	1054485	CFGEntryNode	ENTRY		1054357		True				
ANR	1054486	CFGExitNode	EXIT		1054357		True				
ANR	1054487	Symbol	CA_LOCATE_FAILED		1054357						
ANR	1054488	Symbol	Sinful ( _addr ) . getSharedPortID		1054357						
ANR	1054489	Symbol	NULL		1054357						
ANR	1054490	Symbol	_name		1054357						
ANR	1054491	Symbol	_tried_locate		1054357						
ANR	1054492	Symbol	false		1054357						
ANR	1054493	Symbol	_addr		1054357						
ANR	1054494	Symbol	true		1054357						
ANR	1054495	Symbol	Sinful		1054357						
ANR	1054496	Symbol	_is_local		1054357						
ANR	1054497	Symbol	just_tried_locate		1054357						
ANR	1054498	Symbol	_port		1054357						
ANR	1054499	Function	Daemon :: forceAuthentication	2102:0:53855:54147							
ANR	1054500	FunctionDef	"Daemon :: forceAuthentication (ReliSock * rsock , CondorError * errstack)"		1054499	0					
ANR	1054501	CompoundStatement		2104:0:53930:54147	1054499	0					
ANR	1054502	IfStatement	if ( ! rsock )		1054499	0					
ANR	1054503	Condition	! rsock	2105:5:53937:53943	1054499	0	True				
ANR	1054504	UnaryOperationExpression	! rsock		1054499	0					
ANR	1054505	UnaryOperator	!		1054499	0					
ANR	1054506	Identifier	rsock		1054499	1					
ANR	1054507	CompoundStatement		2:15:16:16	1054499	1					
ANR	1054508	ReturnStatement	return false ;	2106:2:53951:53963	1054499	0	True				
ANR	1054509	Identifier	false		1054499	0					
ANR	1054510	IfStatement	if ( rsock -> triedAuthentication ( ) )		1054499	1					
ANR	1054511	Condition	rsock -> triedAuthentication ( )	2110:5:54029:54056	1054499	0	True				
ANR	1054512	CallExpression	rsock -> triedAuthentication ( )		1054499	0					
ANR	1054513	Callee	rsock -> triedAuthentication		1054499	0					
ANR	1054514	PtrMemberAccess	rsock -> triedAuthentication		1054499	0					
ANR	1054515	Identifier	rsock		1054499	0					
ANR	1054516	Identifier	triedAuthentication		1054499	1					
ANR	1054517	ArgumentList			1054499	1					
ANR	1054518	CompoundStatement		7:36:129:129	1054499	1					
ANR	1054519	ReturnStatement	return true ;	2111:2:54064:54075	1054499	0	True				
ANR	1054520	Identifier	true		1054499	0					
ANR	1054521	ReturnStatement	"return SecMan :: authenticate_sock ( rsock , CLIENT_PERM , errstack ) ;"	2114:1:54082:54145	1054499	2	True				
ANR	1054522	CallExpression	"SecMan :: authenticate_sock ( rsock , CLIENT_PERM , errstack )"		1054499	0					
ANR	1054523	Callee	SecMan :: authenticate_sock		1054499	0					
ANR	1054524	Identifier	SecMan :: authenticate_sock		1054499	0					
ANR	1054525	ArgumentList	rsock		1054499	1					
ANR	1054526	Argument	rsock		1054499	0					
ANR	1054527	Identifier	rsock		1054499	0					
ANR	1054528	Argument	CLIENT_PERM		1054499	1					
ANR	1054529	Identifier	CLIENT_PERM		1054499	0					
ANR	1054530	Argument	errstack		1054499	2					
ANR	1054531	Identifier	errstack		1054499	0					
ANR	1054532	ReturnType	bool		1054499	1					
ANR	1054533	Identifier	Daemon :: forceAuthentication		1054499	2					
ANR	1054534	ParameterList	"ReliSock * rsock , CondorError * errstack"		1054499	3					
ANR	1054535	Parameter	ReliSock * rsock	2103:29:53889:53903	1054499	0	True				
ANR	1054536	ParameterType	ReliSock *		1054499	0					
ANR	1054537	Identifier	rsock		1054499	1					
ANR	1054538	Parameter	CondorError * errstack	2103:46:53906:53926	1054499	1	True				
ANR	1054539	ParameterType	CondorError *		1054499	0					
ANR	1054540	Identifier	errstack		1054499	1					
ANR	1054541	CFGEntryNode	ENTRY		1054499		True				
ANR	1054542	CFGExitNode	EXIT		1054499		True				
ANR	1054543	Symbol	SecMan :: authenticate_sock		1054499						
ANR	1054544	Symbol	errstack		1054499						
ANR	1054545	Symbol	false		1054499						
ANR	1054546	Symbol	true		1054499						
ANR	1054547	Symbol	rsock		1054499						
ANR	1054548	Symbol	* rsock		1054499						
ANR	1054549	Symbol	CLIENT_PERM		1054499						
ANR	1054550	Symbol	rsock -> triedAuthentication		1054499						
ANR	1054551	Function	Daemon :: setCmdStr	2118:0:54151:54303							
ANR	1054552	FunctionDef	Daemon :: setCmdStr (const char * cmd)		1054551	0					
ANR	1054553	CompoundStatement		2120:0:54193:54303	1054551	0					
ANR	1054554	IfStatement	if ( _cmd_str )		1054551	0					
ANR	1054555	Condition	_cmd_str	2121:5:54200:54207	1054551	0	True				
ANR	1054556	Identifier	_cmd_str		1054551	0					
ANR	1054557	CompoundStatement		2:16:17:17	1054551	1					
ANR	1054558	Statement	delete	2122:2:54216:54221	1054551	0	True				
ANR	1054559	Statement	[	2122:9:54223:54223	1054551	1	True				
ANR	1054560	Statement	]	2122:10:54224:54224	1054551	2	True				
ANR	1054561	ExpressionStatement	_cmd_str	2122:12:54226:54234	1054551	3	True				
ANR	1054562	Identifier	_cmd_str		1054551	0					
ANR	1054563	ExpressionStatement	_cmd_str = NULL	2123:2:54238:54253	1054551	4	True				
ANR	1054564	AssignmentExpression	_cmd_str = NULL		1054551	0		=			
ANR	1054565	Identifier	_cmd_str		1054551	0					
ANR	1054566	Identifier	NULL		1054551	1					
ANR	1054567	IfStatement	if ( cmd )		1054551	1					
ANR	1054568	Condition	cmd	2125:5:54263:54265	1054551	0	True				
ANR	1054569	Identifier	cmd		1054551	0					
ANR	1054570	CompoundStatement		6:11:75:75	1054551	1					
ANR	1054571	ExpressionStatement	_cmd_str = strnewp ( cmd )	2126:2:54273:54298	1054551	0	True				
ANR	1054572	AssignmentExpression	_cmd_str = strnewp ( cmd )		1054551	0		=			
ANR	1054573	Identifier	_cmd_str		1054551	0					
ANR	1054574	CallExpression	strnewp ( cmd )		1054551	1					
ANR	1054575	Callee	strnewp		1054551	0					
ANR	1054576	Identifier	strnewp		1054551	0					
ANR	1054577	ArgumentList	cmd		1054551	1					
ANR	1054578	Argument	cmd		1054551	0					
ANR	1054579	Identifier	cmd		1054551	0					
ANR	1054580	ReturnType	void		1054551	1					
ANR	1054581	Identifier	Daemon :: setCmdStr		1054551	2					
ANR	1054582	ParameterList	const char * cmd		1054551	3					
ANR	1054583	Parameter	const char * cmd	2119:19:54175:54189	1054551	0	True				
ANR	1054584	ParameterType	const char *		1054551	0					
ANR	1054585	Identifier	cmd		1054551	1					
ANR	1054586	CFGEntryNode	ENTRY		1054551		True				
ANR	1054587	CFGExitNode	EXIT		1054551		True				
ANR	1054588	Symbol	NULL		1054551						
ANR	1054589	Symbol	strnewp		1054551						
ANR	1054590	Symbol	cmd		1054551						
ANR	1054591	Symbol	_cmd_str		1054551						
ANR	1054592	Function	getCmHostFromConfig	2131:0:54307:55396							
ANR	1054593	FunctionDef	getCmHostFromConfig (const char * subsys)		1054592	0					
ANR	1054594	CompoundStatement		2133:0:54356:55396	1054592	0					
ANR	1054595	IdentifierDeclStatement	MyString buf ;	2134:1:54360:54372	1054592	0	True				
ANR	1054596	IdentifierDecl	buf		1054592	0					
ANR	1054597	IdentifierDeclType	MyString		1054592	0					
ANR	1054598	Identifier	buf		1054592	1					
ANR	1054599	IdentifierDeclStatement	char * host = NULL ;	2135:1:54375:54392	1054592	1	True				
ANR	1054600	IdentifierDecl	* host = NULL		1054592	0					
ANR	1054601	IdentifierDeclType	char *		1054592	0					
ANR	1054602	Identifier	host		1054592	1					
ANR	1054603	AssignmentExpression	* host = NULL		1054592	2		=			
ANR	1054604	Identifier	NULL		1054592	0					
ANR	1054605	Identifier	NULL		1054592	1					
ANR	1054606	ExpressionStatement	"buf . sprintf ( ""%s_HOST"" , subsys )"	2138:1:54453:54485	1054592	2	True				
ANR	1054607	CallExpression	"buf . sprintf ( ""%s_HOST"" , subsys )"		1054592	0					
ANR	1054608	Callee	buf . sprintf		1054592	0					
ANR	1054609	MemberAccess	buf . sprintf		1054592	0					
ANR	1054610	Identifier	buf		1054592	0					
ANR	1054611	Identifier	sprintf		1054592	1					
ANR	1054612	ArgumentList	"""%s_HOST"""		1054592	1					
ANR	1054613	Argument	"""%s_HOST"""		1054592	0					
ANR	1054614	PrimaryExpression	"""%s_HOST"""		1054592	0					
ANR	1054615	Argument	subsys		1054592	1					
ANR	1054616	Identifier	subsys		1054592	0					
ANR	1054617	ExpressionStatement	host = param ( buf . Value ( ) )	2139:1:54488:54515	1054592	3	True				
ANR	1054618	AssignmentExpression	host = param ( buf . Value ( ) )		1054592	0		=			
ANR	1054619	Identifier	host		1054592	0					
ANR	1054620	CallExpression	param ( buf . Value ( ) )		1054592	1					
ANR	1054621	Callee	param		1054592	0					
ANR	1054622	Identifier	param		1054592	0					
ANR	1054623	ArgumentList	buf . Value ( )		1054592	1					
ANR	1054624	Argument	buf . Value ( )		1054592	0					
ANR	1054625	CallExpression	buf . Value ( )		1054592	0					
ANR	1054626	Callee	buf . Value		1054592	0					
ANR	1054627	MemberAccess	buf . Value		1054592	0					
ANR	1054628	Identifier	buf		1054592	0					
ANR	1054629	Identifier	Value		1054592	1					
ANR	1054630	ArgumentList			1054592	1					
ANR	1054631	IfStatement	if ( host )		1054592	4					
ANR	1054632	Condition	host	2140:5:54522:54525	1054592	0	True				
ANR	1054633	Identifier	host		1054592	0					
ANR	1054634	CompoundStatement		8:12:172:172	1054592	1					
ANR	1054635	IfStatement	if ( host [ 0 ] )		1054592	0					
ANR	1054636	Condition	host [ 0 ]	2141:6:54537:54543	1054592	0	True				
ANR	1054637	ArrayIndexing	host [ 0 ]		1054592	0					
ANR	1054638	Identifier	host		1054592	0					
ANR	1054639	PrimaryExpression	0		1054592	1					
ANR	1054640	CompoundStatement		9:16:190:190	1054592	1					
ANR	1054641	ExpressionStatement	"dprintf ( D_HOSTNAME , ""%s is set to \\""%s\\""\\n"" , buf . Value ( ) , host )"	2142:3:54552:54624	1054592	0	True				
ANR	1054642	CallExpression	"dprintf ( D_HOSTNAME , ""%s is set to \\""%s\\""\\n"" , buf . Value ( ) , host )"		1054592	0					
ANR	1054643	Callee	dprintf		1054592	0					
ANR	1054644	Identifier	dprintf		1054592	0					
ANR	1054645	ArgumentList	D_HOSTNAME		1054592	1					
ANR	1054646	Argument	D_HOSTNAME		1054592	0					
ANR	1054647	Identifier	D_HOSTNAME		1054592	0					
ANR	1054648	Argument	"""%s is set to \\""%s\\""\\n"""		1054592	1					
ANR	1054649	PrimaryExpression	"""%s is set to \\""%s\\""\\n"""		1054592	0					
ANR	1054650	Argument	buf . Value ( )		1054592	2					
ANR	1054651	CallExpression	buf . Value ( )		1054592	0					
ANR	1054652	Callee	buf . Value		1054592	0					
ANR	1054653	MemberAccess	buf . Value		1054592	0					
ANR	1054654	Identifier	buf		1054592	0					
ANR	1054655	Identifier	Value		1054592	1					
ANR	1054656	ArgumentList			1054592	1					
ANR	1054657	Argument	host		1054592	3					
ANR	1054658	Identifier	host		1054592	0					
ANR	1054659	IfStatement	if ( host [ 0 ] == ':' )		1054592	1					
ANR	1054660	Condition	host [ 0 ] == ':'	2144:6:54633:54646	1054592	0	True				
ANR	1054661	EqualityExpression	host [ 0 ] == ':'		1054592	0		==			
ANR	1054662	ArrayIndexing	host [ 0 ]		1054592	0					
ANR	1054663	Identifier	host		1054592	0					
ANR	1054664	PrimaryExpression	0		1054592	1					
ANR	1054665	PrimaryExpression	':'		1054592	1					
ANR	1054666	CompoundStatement		12:22:292:292	1054592	1					
ANR	1054667	ExpressionStatement	"dprintf ( D_ALWAYS , ""Warning: Configuration file sets '%s=%s'.  This does not look like a valid host name with optional port.\\n"" , buf . Value ( ) , host )"	2145:4:54655:54802	1054592	0	True				
ANR	1054668	CallExpression	"dprintf ( D_ALWAYS , ""Warning: Configuration file sets '%s=%s'.  This does not look like a valid host name with optional port.\\n"" , buf . Value ( ) , host )"		1054592	0					
ANR	1054669	Callee	dprintf		1054592	0					
ANR	1054670	Identifier	dprintf		1054592	0					
ANR	1054671	ArgumentList	D_ALWAYS		1054592	1					
ANR	1054672	Argument	D_ALWAYS		1054592	0					
ANR	1054673	Identifier	D_ALWAYS		1054592	0					
ANR	1054674	Argument	"""Warning: Configuration file sets '%s=%s'.  This does not look like a valid host name with optional port.\\n"""		1054592	1					
ANR	1054675	PrimaryExpression	"""Warning: Configuration file sets '%s=%s'.  This does not look like a valid host name with optional port.\\n"""		1054592	0					
ANR	1054676	Argument	buf . Value ( )		1054592	2					
ANR	1054677	CallExpression	buf . Value ( )		1054592	0					
ANR	1054678	Callee	buf . Value		1054592	0					
ANR	1054679	MemberAccess	buf . Value		1054592	0					
ANR	1054680	Identifier	buf		1054592	0					
ANR	1054681	Identifier	Value		1054592	1					
ANR	1054682	ArgumentList			1054592	1					
ANR	1054683	Argument	host		1054592	3					
ANR	1054684	Identifier	host		1054592	0					
ANR	1054685	ReturnStatement	return host ;	2147:3:54812:54823	1054592	2	True				
ANR	1054686	Identifier	host		1054592	0					
ANR	1054687	ElseStatement	else		1054592	0					
ANR	1054688	CompoundStatement		16:9:477:477	1054592	0					
ANR	1054689	ExpressionStatement	free ( host )	2149:3:54839:54851	1054592	0	True				
ANR	1054690	CallExpression	free ( host )		1054592	0					
ANR	1054691	Callee	free		1054592	0					
ANR	1054692	Identifier	free		1054592	0					
ANR	1054693	ArgumentList	host		1054592	1					
ANR	1054694	Argument	host		1054592	0					
ANR	1054695	Identifier	host		1054592	0					
ANR	1054696	ExpressionStatement	"buf . sprintf ( ""%s_IP_ADDR"" , subsys )"	2154:1:54918:54953	1054592	5	True				
ANR	1054697	CallExpression	"buf . sprintf ( ""%s_IP_ADDR"" , subsys )"		1054592	0					
ANR	1054698	Callee	buf . sprintf		1054592	0					
ANR	1054699	MemberAccess	buf . sprintf		1054592	0					
ANR	1054700	Identifier	buf		1054592	0					
ANR	1054701	Identifier	sprintf		1054592	1					
ANR	1054702	ArgumentList	"""%s_IP_ADDR"""		1054592	1					
ANR	1054703	Argument	"""%s_IP_ADDR"""		1054592	0					
ANR	1054704	PrimaryExpression	"""%s_IP_ADDR"""		1054592	0					
ANR	1054705	Argument	subsys		1054592	1					
ANR	1054706	Identifier	subsys		1054592	0					
ANR	1054707	ExpressionStatement	host = param ( buf . Value ( ) )	2155:1:54956:54983	1054592	6	True				
ANR	1054708	AssignmentExpression	host = param ( buf . Value ( ) )		1054592	0		=			
ANR	1054709	Identifier	host		1054592	0					
ANR	1054710	CallExpression	param ( buf . Value ( ) )		1054592	1					
ANR	1054711	Callee	param		1054592	0					
ANR	1054712	Identifier	param		1054592	0					
ANR	1054713	ArgumentList	buf . Value ( )		1054592	1					
ANR	1054714	Argument	buf . Value ( )		1054592	0					
ANR	1054715	CallExpression	buf . Value ( )		1054592	0					
ANR	1054716	Callee	buf . Value		1054592	0					
ANR	1054717	MemberAccess	buf . Value		1054592	0					
ANR	1054718	Identifier	buf		1054592	0					
ANR	1054719	Identifier	Value		1054592	1					
ANR	1054720	ArgumentList			1054592	1					
ANR	1054721	IfStatement	if ( host )		1054592	7					
ANR	1054722	Condition	host	2156:5:54990:54993	1054592	0	True				
ANR	1054723	Identifier	host		1054592	0					
ANR	1054724	CompoundStatement		24:12:640:640	1054592	1					
ANR	1054725	IfStatement	if ( host [ 0 ] )		1054592	0					
ANR	1054726	Condition	host [ 0 ]	2157:6:55005:55011	1054592	0	True				
ANR	1054727	ArrayIndexing	host [ 0 ]		1054592	0					
ANR	1054728	Identifier	host		1054592	0					
ANR	1054729	PrimaryExpression	0		1054592	1					
ANR	1054730	CompoundStatement		25:16:658:658	1054592	1					
ANR	1054731	ExpressionStatement	"dprintf ( D_HOSTNAME , ""%s is set to \\""%s\\""\\n"" , buf . Value ( ) , host )"	2158:3:55020:55085	1054592	0	True				
ANR	1054732	CallExpression	"dprintf ( D_HOSTNAME , ""%s is set to \\""%s\\""\\n"" , buf . Value ( ) , host )"		1054592	0					
ANR	1054733	Callee	dprintf		1054592	0					
ANR	1054734	Identifier	dprintf		1054592	0					
ANR	1054735	ArgumentList	D_HOSTNAME		1054592	1					
ANR	1054736	Argument	D_HOSTNAME		1054592	0					
ANR	1054737	Identifier	D_HOSTNAME		1054592	0					
ANR	1054738	Argument	"""%s is set to \\""%s\\""\\n"""		1054592	1					
ANR	1054739	PrimaryExpression	"""%s is set to \\""%s\\""\\n"""		1054592	0					
ANR	1054740	Argument	buf . Value ( )		1054592	2					
ANR	1054741	CallExpression	buf . Value ( )		1054592	0					
ANR	1054742	Callee	buf . Value		1054592	0					
ANR	1054743	MemberAccess	buf . Value		1054592	0					
ANR	1054744	Identifier	buf		1054592	0					
ANR	1054745	Identifier	Value		1054592	1					
ANR	1054746	ArgumentList			1054592	1					
ANR	1054747	Argument	host		1054592	3					
ANR	1054748	Identifier	host		1054592	0					
ANR	1054749	ReturnStatement	return host ;	2159:3:55090:55101	1054592	1	True				
ANR	1054750	Identifier	host		1054592	0					
ANR	1054751	ElseStatement	else		1054592	0					
ANR	1054752	CompoundStatement		28:9:755:755	1054592	0					
ANR	1054753	ExpressionStatement	free ( host )	2161:3:55117:55129	1054592	0	True				
ANR	1054754	CallExpression	free ( host )		1054592	0					
ANR	1054755	Callee	free		1054592	0					
ANR	1054756	Identifier	free		1054592	0					
ANR	1054757	ArgumentList	host		1054592	1					
ANR	1054758	Argument	host		1054592	0					
ANR	1054759	Identifier	host		1054592	0					
ANR	1054760	ExpressionStatement	"host = param ( ""CM_IP_ADDR"" )"	2166:1:55190:55218	1054592	8	True				
ANR	1054761	AssignmentExpression	"host = param ( ""CM_IP_ADDR"" )"		1054592	0		=			
ANR	1054762	Identifier	host		1054592	0					
ANR	1054763	CallExpression	"param ( ""CM_IP_ADDR"" )"		1054592	1					
ANR	1054764	Callee	param		1054592	0					
ANR	1054765	Identifier	param		1054592	0					
ANR	1054766	ArgumentList	"""CM_IP_ADDR"""		1054592	1					
ANR	1054767	Argument	"""CM_IP_ADDR"""		1054592	0					
ANR	1054768	PrimaryExpression	"""CM_IP_ADDR"""		1054592	0					
ANR	1054769	IfStatement	if ( host )		1054592	9					
ANR	1054770	Condition	host	2167:5:55225:55228	1054592	0	True				
ANR	1054771	Identifier	host		1054592	0					
ANR	1054772	CompoundStatement		35:12:875:875	1054592	1					
ANR	1054773	IfStatement	if ( host [ 0 ] )		1054592	0					
ANR	1054774	Condition	host [ 0 ]	2168:7:55241:55247	1054592	0	True				
ANR	1054775	ArrayIndexing	host [ 0 ]		1054592	0					
ANR	1054776	Identifier	host		1054592	0					
ANR	1054777	PrimaryExpression	0		1054592	1					
ANR	1054778	CompoundStatement		36:17:894:894	1054592	1					
ANR	1054779	ExpressionStatement	"dprintf ( D_HOSTNAME , ""%s is set to \\""%s\\""\\n"" , buf . Value ( ) , host )"	2169:3:55256:55328	1054592	0	True				
ANR	1054780	CallExpression	"dprintf ( D_HOSTNAME , ""%s is set to \\""%s\\""\\n"" , buf . Value ( ) , host )"		1054592	0					
ANR	1054781	Callee	dprintf		1054592	0					
ANR	1054782	Identifier	dprintf		1054592	0					
ANR	1054783	ArgumentList	D_HOSTNAME		1054592	1					
ANR	1054784	Argument	D_HOSTNAME		1054592	0					
ANR	1054785	Identifier	D_HOSTNAME		1054592	0					
ANR	1054786	Argument	"""%s is set to \\""%s\\""\\n"""		1054592	1					
ANR	1054787	PrimaryExpression	"""%s is set to \\""%s\\""\\n"""		1054592	0					
ANR	1054788	Argument	buf . Value ( )		1054592	2					
ANR	1054789	CallExpression	buf . Value ( )		1054592	0					
ANR	1054790	Callee	buf . Value		1054592	0					
ANR	1054791	MemberAccess	buf . Value		1054592	0					
ANR	1054792	Identifier	buf		1054592	0					
ANR	1054793	Identifier	Value		1054592	1					
ANR	1054794	ArgumentList			1054592	1					
ANR	1054795	Argument	host		1054592	3					
ANR	1054796	Identifier	host		1054592	0					
ANR	1054797	ReturnStatement	return host ;	2171:3:55334:55345	1054592	1	True				
ANR	1054798	Identifier	host		1054592	0					
ANR	1054799	ElseStatement	else		1054592	0					
ANR	1054800	CompoundStatement		40:9:999:999	1054592	0					
ANR	1054801	ExpressionStatement	free ( host )	2173:3:55361:55373	1054592	0	True				
ANR	1054802	CallExpression	free ( host )		1054592	0					
ANR	1054803	Callee	free		1054592	0					
ANR	1054804	Identifier	free		1054592	0					
ANR	1054805	ArgumentList	host		1054592	1					
ANR	1054806	Argument	host		1054592	0					
ANR	1054807	Identifier	host		1054592	0					
ANR	1054808	ReturnStatement	return NULL ;	2176:1:55383:55394	1054592	10	True				
ANR	1054809	Identifier	NULL		1054592	0					
ANR	1054810	ReturnType	char *		1054592	1					
ANR	1054811	Identifier	getCmHostFromConfig		1054592	2					
ANR	1054812	ParameterList	const char * subsys		1054592	3					
ANR	1054813	Parameter	const char * subsys	2132:21:54334:54352	1054592	0	True				
ANR	1054814	ParameterType	const char *		1054592	0					
ANR	1054815	Identifier	subsys		1054592	1					
ANR	1054816	CFGEntryNode	ENTRY		1054592		True				
ANR	1054817	CFGExitNode	EXIT		1054592		True				
ANR	1054818	Symbol	D_HOSTNAME		1054592						
ANR	1054819	Symbol	subsys		1054592						
ANR	1054820	Symbol	* host		1054592						
ANR	1054821	Symbol	buf		1054592						
ANR	1054822	Symbol	NULL		1054592						
ANR	1054823	Symbol	param		1054592						
ANR	1054824	Symbol	host		1054592						
ANR	1054825	Symbol	buf . Value		1054592						
ANR	1054826	Symbol	D_ALWAYS		1054592						
ANR	1054827	Function	Daemon :: getTimeOffset	2190:0:55871:56872							
ANR	1054828	FunctionDef	Daemon :: getTimeOffset (long & offset)		1054827	0					
ANR	1054829	CompoundStatement		2192:0:55914:56872	1054827	0					
ANR	1054830	ExpressionStatement	offset = TIME_OFFSET_DEFAULT	2196:1:55975:56003	1054827	0	True				
ANR	1054831	AssignmentExpression	offset = TIME_OFFSET_DEFAULT		1054827	0		=			
ANR	1054832	Identifier	offset		1054827	0					
ANR	1054833	Identifier	TIME_OFFSET_DEFAULT		1054827	1					
ANR	1054834	IdentifierDeclStatement	ReliSock reli_sock ;	2201:1:56067:56085	1054827	1	True				
ANR	1054835	IdentifierDecl	reli_sock		1054827	0					
ANR	1054836	IdentifierDeclType	ReliSock		1054827	0					
ANR	1054837	Identifier	reli_sock		1054827	1					
ANR	1054838	ExpressionStatement	reli_sock . timeout ( 30 )	2202:1:56088:56111	1054827	2	True				
ANR	1054839	CallExpression	reli_sock . timeout ( 30 )		1054827	0					
ANR	1054840	Callee	reli_sock . timeout		1054827	0					
ANR	1054841	MemberAccess	reli_sock . timeout		1054827	0					
ANR	1054842	Identifier	reli_sock		1054827	0					
ANR	1054843	Identifier	timeout		1054827	1					
ANR	1054844	ArgumentList	30		1054827	1					
ANR	1054845	Argument	30		1054827	0					
ANR	1054846	PrimaryExpression	30		1054827	0					
ANR	1054847	IfStatement	if ( ! connectSock ( & reli_sock ) )		1054827	3					
ANR	1054848	Condition	! connectSock ( & reli_sock )	2203:5:56159:56183	1054827	0	True				
ANR	1054849	UnaryOperationExpression	! connectSock ( & reli_sock )		1054827	0					
ANR	1054850	UnaryOperator	!		1054827	0					
ANR	1054851	CallExpression	connectSock ( & reli_sock )		1054827	1					
ANR	1054852	Callee	connectSock		1054827	0					
ANR	1054853	Identifier	connectSock		1054827	0					
ANR	1054854	ArgumentList	& reli_sock		1054827	1					
ANR	1054855	Argument	& reli_sock		1054827	0					
ANR	1054856	UnaryOperationExpression	& reli_sock		1054827	0					
ANR	1054857	UnaryOperator	&		1054827	0					
ANR	1054858	Identifier	reli_sock		1054827	1					
ANR	1054859	CompoundStatement		12:33:272:272	1054827	1					
ANR	1054860	Statement	dprintf	2204:2:56191:56197	1054827	0	True				
ANR	1054861	Statement	(	2204:9:56198:56198	1054827	1	True				
ANR	1054862	Statement	D_FULLDEBUG	2204:11:56200:56210	1054827	2	True				
ANR	1054863	Statement	","	2204:22:56211:56211	1054827	3	True				
ANR	1054864	Statement	"""Daemon::getTimeOffset() failed to connect """	2204:24:56213:56256	1054827	4	True				
ANR	1054865	Statement	"""to remote daemon at '%s'\\n"""	2205:13:56271:56298	1054827	5	True				
ANR	1054866	Statement	","	2205:41:56299:56299	1054827	6	True				
ANR	1054867	Statement	this	2206:13:56314:56317	1054827	7	True				
ANR	1054868	Statement	->	2206:17:56318:56319	1054827	8	True				
ANR	1054869	Statement	_addr	2206:19:56320:56324	1054827	9	True				
ANR	1054870	Statement	)	2206:25:56326:56326	1054827	10	True				
ANR	1054871	ExpressionStatement		2206:26:56327:56327	1054827	11	True				
ANR	1054872	ReturnStatement	return ( false ) ;	2207:2:56331:56347	1054827	12	True				
ANR	1054873	Identifier	false		1054827	0					
ANR	1054874	IfStatement	"if ( ! this -> startCommand ( DC_TIME_OFFSET , ( Sock * ) & reli_sock ) )"		1054827	4					
ANR	1054875	Condition	"! this -> startCommand ( DC_TIME_OFFSET , ( Sock * ) & reli_sock )"	2213:5:56448:56504	1054827	0	True				
ANR	1054876	UnaryOperationExpression	"! this -> startCommand ( DC_TIME_OFFSET , ( Sock * ) & reli_sock )"		1054827	0					
ANR	1054877	UnaryOperator	!		1054827	0					
ANR	1054878	CallExpression	"this -> startCommand ( DC_TIME_OFFSET , ( Sock * ) & reli_sock )"		1054827	1					
ANR	1054879	Callee	this -> startCommand		1054827	0					
ANR	1054880	PtrMemberAccess	this -> startCommand		1054827	0					
ANR	1054881	Identifier	this		1054827	0					
ANR	1054882	Identifier	startCommand		1054827	1					
ANR	1054883	ArgumentList	DC_TIME_OFFSET		1054827	1					
ANR	1054884	Argument	DC_TIME_OFFSET		1054827	0					
ANR	1054885	Identifier	DC_TIME_OFFSET		1054827	0					
ANR	1054886	Argument	( Sock * ) & reli_sock		1054827	1					
ANR	1054887	CastExpression	( Sock * ) & reli_sock		1054827	0					
ANR	1054888	CastTarget	Sock *		1054827	0					
ANR	1054889	UnaryOperationExpression	& reli_sock		1054827	1					
ANR	1054890	UnaryOperator	&		1054827	0					
ANR	1054891	Identifier	reli_sock		1054827	1					
ANR	1054892	CompoundStatement		22:65:593:593	1054827	1					
ANR	1054893	Statement	dprintf	2214:2:56513:56519	1054827	0	True				
ANR	1054894	Statement	(	2214:9:56520:56520	1054827	1	True				
ANR	1054895	Statement	D_FULLDEBUG	2214:11:56522:56532	1054827	2	True				
ANR	1054896	Statement	","	2214:22:56533:56533	1054827	3	True				
ANR	1054897	Statement	"""Daemon::getTimeOffset() failed to send """	2214:24:56535:56575	1054827	4	True				
ANR	1054898	Statement	"""command to remote daemon at '%s'\\n"""	2215:13:56590:56625	1054827	5	True				
ANR	1054899	Statement	","	2215:49:56626:56626	1054827	6	True				
ANR	1054900	Statement	this	2216:13:56642:56645	1054827	7	True				
ANR	1054901	Statement	->	2216:17:56646:56647	1054827	8	True				
ANR	1054902	Statement	_addr	2216:19:56648:56652	1054827	9	True				
ANR	1054903	Statement	)	2216:25:56654:56654	1054827	10	True				
ANR	1054904	ExpressionStatement		2216:26:56655:56655	1054827	11	True				
ANR	1054905	ReturnStatement	return ( false ) ;	2217:2:56659:56675	1054827	12	True				
ANR	1054906	Identifier	false		1054827	0					
ANR	1054907	ReturnStatement	"return ( time_offset_cedar_stub ( ( Stream * ) & reli_sock , offset ) ) ;"	2223:1:56806:56870	1054827	5	True				
ANR	1054908	CallExpression	"time_offset_cedar_stub ( ( Stream * ) & reli_sock , offset )"		1054827	0					
ANR	1054909	Callee	time_offset_cedar_stub		1054827	0					
ANR	1054910	Identifier	time_offset_cedar_stub		1054827	0					
ANR	1054911	ArgumentList	( Stream * ) & reli_sock		1054827	1					
ANR	1054912	Argument	( Stream * ) & reli_sock		1054827	0					
ANR	1054913	CastExpression	( Stream * ) & reli_sock		1054827	0					
ANR	1054914	CastTarget	Stream *		1054827	0					
ANR	1054915	UnaryOperationExpression	& reli_sock		1054827	1					
ANR	1054916	UnaryOperator	&		1054827	0					
ANR	1054917	Identifier	reli_sock		1054827	1					
ANR	1054918	Argument	offset		1054827	1					
ANR	1054919	Identifier	offset		1054827	0					
ANR	1054920	ReturnType	bool		1054827	1					
ANR	1054921	Identifier	Daemon :: getTimeOffset		1054827	2					
ANR	1054922	ParameterList	long & offset		1054827	3					
ANR	1054923	Parameter	long & offset	2191:23:55899:55910	1054827	0	True				
ANR	1054924	ParameterType	long &		1054827	0					
ANR	1054925	Identifier	offset		1054827	1					
ANR	1054926	CFGEntryNode	ENTRY		1054827		True				
ANR	1054927	CFGExitNode	EXIT		1054827		True				
ANR	1054928	Symbol	* this		1054827						
ANR	1054929	Symbol	offset		1054827						
ANR	1054930	Symbol	TIME_OFFSET_DEFAULT		1054827						
ANR	1054931	Symbol	& reli_sock		1054827						
ANR	1054932	Symbol	false		1054827						
ANR	1054933	Symbol	this		1054827						
ANR	1054934	Symbol	DC_TIME_OFFSET		1054827						
ANR	1054935	Symbol	time_offset_cedar_stub		1054827						
ANR	1054936	Symbol	reli_sock		1054827						
ANR	1054937	Symbol	this -> startCommand		1054827						
ANR	1054938	Symbol	connectSock		1054827						
ANR	1054939	Function	Daemon :: getTimeOffsetRange	2239:0:57510:58594							
ANR	1054940	FunctionDef	"Daemon :: getTimeOffsetRange (long & min_range , long & max_range)"		1054939	0					
ANR	1054941	CompoundStatement		2241:0:57578:58594	1054939	0					
ANR	1054942	ExpressionStatement	min_range = max_range = TIME_OFFSET_DEFAULT	2245:1:57639:57682	1054939	0	True				
ANR	1054943	AssignmentExpression	min_range = max_range = TIME_OFFSET_DEFAULT		1054939	0		=			
ANR	1054944	Identifier	min_range		1054939	0					
ANR	1054945	AssignmentExpression	max_range = TIME_OFFSET_DEFAULT		1054939	1		=			
ANR	1054946	Identifier	max_range		1054939	0					
ANR	1054947	Identifier	TIME_OFFSET_DEFAULT		1054939	1					
ANR	1054948	IdentifierDeclStatement	ReliSock reli_sock ;	2250:1:57746:57764	1054939	1	True				
ANR	1054949	IdentifierDecl	reli_sock		1054939	0					
ANR	1054950	IdentifierDeclType	ReliSock		1054939	0					
ANR	1054951	Identifier	reli_sock		1054939	1					
ANR	1054952	ExpressionStatement	reli_sock . timeout ( 30 )	2251:1:57767:57790	1054939	2	True				
ANR	1054953	CallExpression	reli_sock . timeout ( 30 )		1054939	0					
ANR	1054954	Callee	reli_sock . timeout		1054939	0					
ANR	1054955	MemberAccess	reli_sock . timeout		1054939	0					
ANR	1054956	Identifier	reli_sock		1054939	0					
ANR	1054957	Identifier	timeout		1054939	1					
ANR	1054958	ArgumentList	30		1054939	1					
ANR	1054959	Argument	30		1054939	0					
ANR	1054960	PrimaryExpression	30		1054939	0					
ANR	1054961	IfStatement	if ( ! connectSock ( & reli_sock ) )		1054939	3					
ANR	1054962	Condition	! connectSock ( & reli_sock )	2252:5:57838:57862	1054939	0	True				
ANR	1054963	UnaryOperationExpression	! connectSock ( & reli_sock )		1054939	0					
ANR	1054964	UnaryOperator	!		1054939	0					
ANR	1054965	CallExpression	connectSock ( & reli_sock )		1054939	1					
ANR	1054966	Callee	connectSock		1054939	0					
ANR	1054967	Identifier	connectSock		1054939	0					
ANR	1054968	ArgumentList	& reli_sock		1054939	1					
ANR	1054969	Argument	& reli_sock		1054939	0					
ANR	1054970	UnaryOperationExpression	& reli_sock		1054939	0					
ANR	1054971	UnaryOperator	&		1054939	0					
ANR	1054972	Identifier	reli_sock		1054939	1					
ANR	1054973	CompoundStatement		12:33:287:287	1054939	1					
ANR	1054974	Statement	dprintf	2253:2:57870:57876	1054939	0	True				
ANR	1054975	Statement	(	2253:9:57877:57877	1054939	1	True				
ANR	1054976	Statement	D_FULLDEBUG	2253:11:57879:57889	1054939	2	True				
ANR	1054977	Statement	","	2253:22:57890:57890	1054939	3	True				
ANR	1054978	Statement	"""Daemon::getTimeOffsetRange() failed to connect """	2253:24:57892:57940	1054939	4	True				
ANR	1054979	Statement	"""to remote daemon at '%s'\\n"""	2254:13:57955:57982	1054939	5	True				
ANR	1054980	Statement	","	2254:41:57983:57983	1054939	6	True				
ANR	1054981	Statement	this	2255:13:57998:58001	1054939	7	True				
ANR	1054982	Statement	->	2255:17:58002:58003	1054939	8	True				
ANR	1054983	Statement	_addr	2255:19:58004:58008	1054939	9	True				
ANR	1054984	Statement	)	2255:25:58010:58010	1054939	10	True				
ANR	1054985	ExpressionStatement		2255:26:58011:58011	1054939	11	True				
ANR	1054986	ReturnStatement	return ( false ) ;	2256:2:58015:58031	1054939	12	True				
ANR	1054987	Identifier	false		1054939	0					
ANR	1054988	IfStatement	"if ( ! this -> startCommand ( DC_TIME_OFFSET , ( Sock * ) & reli_sock ) )"		1054939	4					
ANR	1054989	Condition	"! this -> startCommand ( DC_TIME_OFFSET , ( Sock * ) & reli_sock )"	2262:5:58132:58188	1054939	0	True				
ANR	1054990	UnaryOperationExpression	"! this -> startCommand ( DC_TIME_OFFSET , ( Sock * ) & reli_sock )"		1054939	0					
ANR	1054991	UnaryOperator	!		1054939	0					
ANR	1054992	CallExpression	"this -> startCommand ( DC_TIME_OFFSET , ( Sock * ) & reli_sock )"		1054939	1					
ANR	1054993	Callee	this -> startCommand		1054939	0					
ANR	1054994	PtrMemberAccess	this -> startCommand		1054939	0					
ANR	1054995	Identifier	this		1054939	0					
ANR	1054996	Identifier	startCommand		1054939	1					
ANR	1054997	ArgumentList	DC_TIME_OFFSET		1054939	1					
ANR	1054998	Argument	DC_TIME_OFFSET		1054939	0					
ANR	1054999	Identifier	DC_TIME_OFFSET		1054939	0					
ANR	1055000	Argument	( Sock * ) & reli_sock		1054939	1					
ANR	1055001	CastExpression	( Sock * ) & reli_sock		1054939	0					
ANR	1055002	CastTarget	Sock *		1054939	0					
ANR	1055003	UnaryOperationExpression	& reli_sock		1054939	1					
ANR	1055004	UnaryOperator	&		1054939	0					
ANR	1055005	Identifier	reli_sock		1054939	1					
ANR	1055006	CompoundStatement		22:65:613:613	1054939	1					
ANR	1055007	Statement	dprintf	2263:2:58197:58203	1054939	0	True				
ANR	1055008	Statement	(	2263:9:58204:58204	1054939	1	True				
ANR	1055009	Statement	D_FULLDEBUG	2263:11:58206:58216	1054939	2	True				
ANR	1055010	Statement	","	2263:22:58217:58217	1054939	3	True				
ANR	1055011	Statement	"""Daemon::getTimeOffsetRange() failed to send """	2263:24:58219:58264	1054939	4	True				
ANR	1055012	Statement	"""command to remote daemon at '%s'\\n"""	2264:13:58279:58314	1054939	5	True				
ANR	1055013	Statement	","	2264:49:58315:58315	1054939	6	True				
ANR	1055014	Statement	this	2265:13:58331:58334	1054939	7	True				
ANR	1055015	Statement	->	2265:17:58335:58336	1054939	8	True				
ANR	1055016	Statement	_addr	2265:19:58337:58341	1054939	9	True				
ANR	1055017	Statement	)	2265:25:58343:58343	1054939	10	True				
ANR	1055018	ExpressionStatement		2265:26:58344:58344	1054939	11	True				
ANR	1055019	ReturnStatement	return ( false ) ;	2266:2:58348:58364	1054939	12	True				
ANR	1055020	Identifier	false		1054939	0					
ANR	1055021	ReturnStatement	"return ( time_offset_range_cedar_stub ( ( Stream * ) & reli_sock , min_range , max_range ) ) ;"	2272:1:58495:58592	1054939	5	True				
ANR	1055022	CallExpression	"time_offset_range_cedar_stub ( ( Stream * ) & reli_sock , min_range , max_range )"		1054939	0					
ANR	1055023	Callee	time_offset_range_cedar_stub		1054939	0					
ANR	1055024	Identifier	time_offset_range_cedar_stub		1054939	0					
ANR	1055025	ArgumentList	( Stream * ) & reli_sock		1054939	1					
ANR	1055026	Argument	( Stream * ) & reli_sock		1054939	0					
ANR	1055027	CastExpression	( Stream * ) & reli_sock		1054939	0					
ANR	1055028	CastTarget	Stream *		1054939	0					
ANR	1055029	UnaryOperationExpression	& reli_sock		1054939	1					
ANR	1055030	UnaryOperator	&		1054939	0					
ANR	1055031	Identifier	reli_sock		1054939	1					
ANR	1055032	Argument	min_range		1054939	1					
ANR	1055033	Identifier	min_range		1054939	0					
ANR	1055034	Argument	max_range		1054939	2					
ANR	1055035	Identifier	max_range		1054939	0					
ANR	1055036	ReturnType	bool		1054939	1					
ANR	1055037	Identifier	Daemon :: getTimeOffsetRange		1054939	2					
ANR	1055038	ParameterList	"long & min_range , long & max_range"		1054939	3					
ANR	1055039	Parameter	long & min_range	2240:28:57543:57557	1054939	0	True				
ANR	1055040	ParameterType	long &		1054939	0					
ANR	1055041	Identifier	min_range		1054939	1					
ANR	1055042	Parameter	long & max_range	2240:45:57560:57574	1054939	1	True				
ANR	1055043	ParameterType	long &		1054939	0					
ANR	1055044	Identifier	max_range		1054939	1					
ANR	1055045	CFGEntryNode	ENTRY		1054939		True				
ANR	1055046	CFGExitNode	EXIT		1054939		True				
ANR	1055047	Symbol	* this		1054939						
ANR	1055048	Symbol	max_range		1054939						
ANR	1055049	Symbol	TIME_OFFSET_DEFAULT		1054939						
ANR	1055050	Symbol	& reli_sock		1054939						
ANR	1055051	Symbol	false		1054939						
ANR	1055052	Symbol	DC_TIME_OFFSET		1054939						
ANR	1055053	Symbol	this		1054939						
ANR	1055054	Symbol	time_offset_range_cedar_stub		1054939						
ANR	1055055	Symbol	min_range		1054939						
ANR	1055056	Symbol	reli_sock		1054939						
ANR	1055057	Symbol	this -> startCommand		1054939						
ANR	1055058	Symbol	connectSock		1054939						
ANR	1055059	Function	Daemon :: sendMsg	2276:0:58597:58843							
ANR	1055060	FunctionDef	Daemon :: sendMsg (classy_counted_ptr < DCMsg > msg)		1055059	0					
ANR	1055061	CompoundStatement		2277:0:58651:58843	1055059	0					
ANR	1055062	IdentifierDeclStatement	DCMessenger * messenger = new DCMessenger ( this ) ;	2280:1:58761:58807	1055059	0	True				
ANR	1055063	IdentifierDecl	* messenger = new DCMessenger ( this )		1055059	0					
ANR	1055064	IdentifierDeclType	DCMessenger *		1055059	0					
ANR	1055065	Identifier	messenger		1055059	1					
ANR	1055066	AssignmentExpression	* messenger = new DCMessenger ( this )		1055059	2		=			
ANR	1055067	Identifier	this		1055059	0					
ANR	1055068	Identifier	this		1055059	1					
ANR	1055069	ExpressionStatement	messenger -> startCommand ( msg )	2282:1:58811:58841	1055059	1	True				
ANR	1055070	CallExpression	messenger -> startCommand ( msg )		1055059	0					
ANR	1055071	Callee	messenger -> startCommand		1055059	0					
ANR	1055072	PtrMemberAccess	messenger -> startCommand		1055059	0					
ANR	1055073	Identifier	messenger		1055059	0					
ANR	1055074	Identifier	startCommand		1055059	1					
ANR	1055075	ArgumentList	msg		1055059	1					
ANR	1055076	Argument	msg		1055059	0					
ANR	1055077	Identifier	msg		1055059	0					
ANR	1055078	ReturnType	void		1055059	1					
ANR	1055079	Identifier	Daemon :: sendMsg		1055059	2					
ANR	1055080	ParameterList	classy_counted_ptr < DCMsg > msg		1055059	3					
ANR	1055081	Parameter	classy_counted_ptr < DCMsg > msg	2276:22:58619:58647	1055059	0	True				
ANR	1055082	ParameterType	classy_counted_ptr < DCMsg >		1055059	0					
ANR	1055083	Identifier	msg		1055059	1					
ANR	1055084	CFGEntryNode	ENTRY		1055059		True				
ANR	1055085	CFGExitNode	EXIT		1055059		True				
ANR	1055086	Symbol	msg		1055059						
ANR	1055087	Symbol	messenger		1055059						
ANR	1055088	Symbol	this		1055059						
ANR	1055089	Function	Daemon :: sendBlockingMsg	2285:0:58846:59103							
ANR	1055090	FunctionDef	Daemon :: sendBlockingMsg (classy_counted_ptr < DCMsg > msg)		1055089	0					
ANR	1055091	CompoundStatement		2286:0:58908:59103	1055089	0					
ANR	1055092	IdentifierDeclStatement	DCMessenger * messenger = new DCMessenger ( this ) ;	2289:1:59018:59064	1055089	0	True				
ANR	1055093	IdentifierDecl	* messenger = new DCMessenger ( this )		1055089	0					
ANR	1055094	IdentifierDeclType	DCMessenger *		1055089	0					
ANR	1055095	Identifier	messenger		1055089	1					
ANR	1055096	AssignmentExpression	* messenger = new DCMessenger ( this )		1055089	2		=			
ANR	1055097	Identifier	this		1055089	0					
ANR	1055098	Identifier	this		1055089	1					
ANR	1055099	ExpressionStatement	messenger -> sendBlockingMsg ( msg )	2291:1:59068:59101	1055089	1	True				
ANR	1055100	CallExpression	messenger -> sendBlockingMsg ( msg )		1055089	0					
ANR	1055101	Callee	messenger -> sendBlockingMsg		1055089	0					
ANR	1055102	PtrMemberAccess	messenger -> sendBlockingMsg		1055089	0					
ANR	1055103	Identifier	messenger		1055089	0					
ANR	1055104	Identifier	sendBlockingMsg		1055089	1					
ANR	1055105	ArgumentList	msg		1055089	1					
ANR	1055106	Argument	msg		1055089	0					
ANR	1055107	Identifier	msg		1055089	0					
ANR	1055108	ReturnType	void		1055089	1					
ANR	1055109	Identifier	Daemon :: sendBlockingMsg		1055089	2					
ANR	1055110	ParameterList	classy_counted_ptr < DCMsg > msg		1055089	3					
ANR	1055111	Parameter	classy_counted_ptr < DCMsg > msg	2285:30:58876:58904	1055089	0	True				
ANR	1055112	ParameterType	classy_counted_ptr < DCMsg >		1055089	0					
ANR	1055113	Identifier	msg		1055089	1					
ANR	1055114	CFGEntryNode	ENTRY		1055089		True				
ANR	1055115	CFGExitNode	EXIT		1055089		True				
ANR	1055116	Symbol	msg		1055089						
ANR	1055117	Symbol	messenger		1055089						
ANR	1055118	Symbol	this		1055089						
