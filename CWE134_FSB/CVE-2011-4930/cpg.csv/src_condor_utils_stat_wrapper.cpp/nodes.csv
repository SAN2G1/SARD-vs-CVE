command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4894376	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_stat_wrapper.cpp								
ANR	4894377	DeclStmt									
ANR	4894378	Decl							extern int	"extern int ( const char * path , struct stat64 * buf )"	stat64
ANR	4894379	DeclStmt									
ANR	4894380	Decl							extern int	"extern int ( const char * path , struct stat64 * buf )"	lstat64
ANR	4894381	DeclStmt									
ANR	4894382	Decl							extern int	"extern int ( int fildes , struct stat64 * buf )"	fstat64
ANR	4894383	DeclStmt									
ANR	4894384	Decl							const char	const char *	STAT_NAME
ANR	4894385	DeclStmt									
ANR	4894386	Decl							const char	const char *	STAT_NAME
ANR	4894387	DeclStmt									
ANR	4894388	Decl							const char	const char *	STAT_NAME
ANR	4894389	DeclStmt									
ANR	4894390	Decl							const char	const char *	LSTAT_NAME
ANR	4894391	DeclStmt									
ANR	4894392	Decl							const char	const char *	LSTAT_NAME
ANR	4894393	DeclStmt									
ANR	4894394	Decl							const char	const char *	LSTAT_NAME
ANR	4894395	DeclStmt									
ANR	4894396	Decl							const char	const char *	LSTAT_NAME
ANR	4894397	DeclStmt									
ANR	4894398	Decl							const char	const char *	FSTAT_NAME
ANR	4894399	DeclStmt									
ANR	4894400	Decl							const char	const char *	FSTAT_NAME
ANR	4894401	DeclStmt									
ANR	4894402	Decl							const char	const char *	FSTAT_NAME
ANR	4894403	ClassDef	StatWrapperOp	83:0:2505:3223							
ANR	4894404	Function	StatWrapperOp	86:1:2536:2838							
ANR	4894405	FunctionDef	"StatWrapperOp (StatWrapperIntBase * stat , StatWrapperIntBase * lstat , StatWrapperIntBase * fstat , StatWrapperIntBase * primary)"		4894404	0					
ANR	4894406	CompoundStatement		90:2:2684:2838	4894404	0					
ANR	4894407	ExpressionStatement	m_stat = stat	91:3:2689:2704	4894404	0	True				
ANR	4894408	AssignmentExpression	m_stat = stat		4894404	0		=			
ANR	4894409	Identifier	m_stat		4894404	0					
ANR	4894410	Identifier	stat		4894404	1					
ANR	4894411	ExpressionStatement	m_lstat = lstat	92:3:2709:2725	4894404	1	True				
ANR	4894412	AssignmentExpression	m_lstat = lstat		4894404	0		=			
ANR	4894413	Identifier	m_lstat		4894404	0					
ANR	4894414	Identifier	lstat		4894404	1					
ANR	4894415	ExpressionStatement	m_fstat = fstat	93:3:2730:2746	4894404	2	True				
ANR	4894416	AssignmentExpression	m_fstat = fstat		4894404	0		=			
ANR	4894417	Identifier	m_fstat		4894404	0					
ANR	4894418	Identifier	fstat		4894404	1					
ANR	4894419	ExpressionStatement	m_all [ 0 ] = stat	95:3:2752:2767	4894404	3	True				
ANR	4894420	AssignmentExpression	m_all [ 0 ] = stat		4894404	0		=			
ANR	4894421	ArrayIndexing	m_all [ 0 ]		4894404	0					
ANR	4894422	Identifier	m_all		4894404	0					
ANR	4894423	PrimaryExpression	0		4894404	1					
ANR	4894424	Identifier	stat		4894404	1					
ANR	4894425	ExpressionStatement	m_all [ 1 ] = lstat	96:3:2772:2788	4894404	4	True				
ANR	4894426	AssignmentExpression	m_all [ 1 ] = lstat		4894404	0		=			
ANR	4894427	ArrayIndexing	m_all [ 1 ]		4894404	0					
ANR	4894428	Identifier	m_all		4894404	0					
ANR	4894429	PrimaryExpression	1		4894404	1					
ANR	4894430	Identifier	lstat		4894404	1					
ANR	4894431	ExpressionStatement	m_all [ 2 ] = fstat	97:3:2793:2809	4894404	5	True				
ANR	4894432	AssignmentExpression	m_all [ 2 ] = fstat		4894404	0		=			
ANR	4894433	ArrayIndexing	m_all [ 2 ]		4894404	0					
ANR	4894434	Identifier	m_all		4894404	0					
ANR	4894435	PrimaryExpression	2		4894404	1					
ANR	4894436	Identifier	fstat		4894404	1					
ANR	4894437	ExpressionStatement	m_primary = primary	99:3:2815:2834	4894404	6	True				
ANR	4894438	AssignmentExpression	m_primary = primary		4894404	0		=			
ANR	4894439	Identifier	m_primary		4894404	0					
ANR	4894440	Identifier	primary		4894404	1					
ANR	4894441	Identifier	StatWrapperOp		4894404	1					
ANR	4894442	ParameterList	"StatWrapperIntBase * stat , StatWrapperIntBase * lstat , StatWrapperIntBase * fstat , StatWrapperIntBase * primary"		4894404	2					
ANR	4894443	Parameter	StatWrapperIntBase * stat	86:16:2551:2574	4894404	0	True				
ANR	4894444	ParameterType	StatWrapperIntBase *		4894404	0					
ANR	4894445	Identifier	stat		4894404	1					
ANR	4894446	Parameter	StatWrapperIntBase * lstat	87:7:2584:2608	4894404	1	True				
ANR	4894447	ParameterType	StatWrapperIntBase *		4894404	0					
ANR	4894448	Identifier	lstat		4894404	1					
ANR	4894449	Parameter	StatWrapperIntBase * fstat	88:7:2618:2642	4894404	2	True				
ANR	4894450	ParameterType	StatWrapperIntBase *		4894404	0					
ANR	4894451	Identifier	fstat		4894404	1					
ANR	4894452	Parameter	StatWrapperIntBase * primary	89:7:2652:2678	4894404	3	True				
ANR	4894453	ParameterType	StatWrapperIntBase *		4894404	0					
ANR	4894454	Identifier	primary		4894404	1					
ANR	4894455	CFGEntryNode	ENTRY		4894404		True				
ANR	4894456	CFGExitNode	EXIT		4894404		True				
ANR	4894457	Symbol	stat		4894404						
ANR	4894458	Symbol	m_all		4894404						
ANR	4894459	Symbol	* m_all		4894404						
ANR	4894460	Symbol	m_lstat		4894404						
ANR	4894461	Symbol	m_stat		4894404						
ANR	4894462	Symbol	lstat		4894404						
ANR	4894463	Symbol	fstat		4894404						
ANR	4894464	Symbol	primary		4894404						
ANR	4894465	Symbol	m_fstat		4894404						
ANR	4894466	Symbol	m_primary		4894404						
ANR	4894467	Function	~StatWrapperOp	101:1:2841:2866							
ANR	4894468	FunctionDef	~StatWrapperOp ()		4894467	1					
ANR	4894469	CompoundStatement		101:24:2864:2866	4894467	0					
ANR	4894470	Identifier	~StatWrapperOp		4894467	1					
ANR	4894471	ParameterList			4894467	2					
ANR	4894472	CFGEntryNode	ENTRY		4894467		True				
ANR	4894473	CFGExitNode	EXIT		4894467		True				
ANR	4894474	DeclStmt									
ANR	4894475	Decl							int	int ( bool force )	StatAll
ANR	4894476	Function	getPrimary	106:1:2938:3000							
ANR	4894477	FunctionDef	getPrimary ()		4894476	3					
ANR	4894478	CompoundStatement		106:40:2977:3000	4894476	0					
ANR	4894479	ReturnStatement	return m_primary ;	107:2:2981:2997	4894476	0	True				
ANR	4894480	Identifier	m_primary		4894476	0					
ANR	4894481	ReturnType	StatWrapperIntBase *		4894476	1					
ANR	4894482	Identifier	getPrimary		4894476	2					
ANR	4894483	ParameterList			4894476	3					
ANR	4894484	CFGEntryNode	ENTRY		4894476		True				
ANR	4894485	CFGExitNode	EXIT		4894476		True				
ANR	4894486	Symbol	m_primary		4894476						
ANR	4894487	Function	getAll	109:1:3003:3058							
ANR	4894488	FunctionDef	getAll ()		4894487	4					
ANR	4894489	CompoundStatement		109:37:3039:3058	4894487	0					
ANR	4894490	ReturnStatement	return m_all ;	110:2:3043:3055	4894487	0	True				
ANR	4894491	Identifier	m_all		4894487	0					
ANR	4894492	ReturnType	StatWrapperIntBase * *		4894487	1					
ANR	4894493	Identifier	getAll		4894487	2					
ANR	4894494	ParameterList			4894487	3					
ANR	4894495	CFGEntryNode	ENTRY		4894487		True				
ANR	4894496	CFGExitNode	EXIT		4894487		True				
ANR	4894497	Symbol	m_all		4894487						
ANR	4894498	DeclStmt									
ANR	4894499	Decl							StatWrapperIntBase	StatWrapperIntBase *	m_stat
ANR	4894500	DeclStmt									
ANR	4894501	Decl							StatWrapperIntBase	StatWrapperIntBase *	m_fstat
ANR	4894502	DeclStmt									
ANR	4894503	Decl							StatWrapperIntBase	StatWrapperIntBase *	m_lstat
ANR	4894504	DeclStmt									
ANR	4894505	Decl							StatWrapperIntBase	StatWrapperIntBase *	m_primary
ANR	4894506	DeclStmt									
ANR	4894507	Decl							StatWrapperIntBase	StatWrapperIntBase * [ 3 ]	m_all
ANR	4894508	Function	StatWrapperOp :: StatAll	122:0:3227:3510							
ANR	4894509	FunctionDef	StatWrapperOp :: StatAll (bool force)		4894508	0					
ANR	4894510	CompoundStatement		124:0:3268:3510	4894508	0					
ANR	4894511	ExpressionStatement	m_stat -> Stat ( force )	125:1:3271:3293	4894508	0	True				
ANR	4894512	CallExpression	m_stat -> Stat ( force )		4894508	0					
ANR	4894513	Callee	m_stat -> Stat		4894508	0					
ANR	4894514	PtrMemberAccess	m_stat -> Stat		4894508	0					
ANR	4894515	Identifier	m_stat		4894508	0					
ANR	4894516	Identifier	Stat		4894508	1					
ANR	4894517	ArgumentList	force		4894508	1					
ANR	4894518	Argument	force		4894508	0					
ANR	4894519	Identifier	force		4894508	0					
ANR	4894520	ExpressionStatement	m_lstat -> Stat ( force )	126:1:3296:3318	4894508	1	True				
ANR	4894521	CallExpression	m_lstat -> Stat ( force )		4894508	0					
ANR	4894522	Callee	m_lstat -> Stat		4894508	0					
ANR	4894523	PtrMemberAccess	m_lstat -> Stat		4894508	0					
ANR	4894524	Identifier	m_lstat		4894508	0					
ANR	4894525	Identifier	Stat		4894508	1					
ANR	4894526	ArgumentList	force		4894508	1					
ANR	4894527	Argument	force		4894508	0					
ANR	4894528	Identifier	force		4894508	0					
ANR	4894529	ExpressionStatement	m_fstat -> Stat ( force )	127:1:3321:3343	4894508	2	True				
ANR	4894530	CallExpression	m_fstat -> Stat ( force )		4894508	0					
ANR	4894531	Callee	m_fstat -> Stat		4894508	0					
ANR	4894532	PtrMemberAccess	m_fstat -> Stat		4894508	0					
ANR	4894533	Identifier	m_fstat		4894508	0					
ANR	4894534	Identifier	Stat		4894508	1					
ANR	4894535	ArgumentList	force		4894508	1					
ANR	4894536	Argument	force		4894508	0					
ANR	4894537	Identifier	force		4894508	0					
ANR	4894538	IfStatement	if ( m_stat -> GetRc ( ) )		4894508	3					
ANR	4894539	Condition	m_stat -> GetRc ( )	129:6:3352:3368	4894508	0	True				
ANR	4894540	CallExpression	m_stat -> GetRc ( )		4894508	0					
ANR	4894541	Callee	m_stat -> GetRc		4894508	0					
ANR	4894542	PtrMemberAccess	m_stat -> GetRc		4894508	0					
ANR	4894543	Identifier	m_stat		4894508	0					
ANR	4894544	Identifier	GetRc		4894508	1					
ANR	4894545	ArgumentList			4894508	1					
ANR	4894546	ReturnStatement	return m_stat -> GetRc ( ) ;	129:26:3372:3395	4894508	1	True				
ANR	4894547	CallExpression	m_stat -> GetRc ( )		4894508	0					
ANR	4894548	Callee	m_stat -> GetRc		4894508	0					
ANR	4894549	PtrMemberAccess	m_stat -> GetRc		4894508	0					
ANR	4894550	Identifier	m_stat		4894508	0					
ANR	4894551	Identifier	GetRc		4894508	1					
ANR	4894552	ArgumentList			4894508	1					
ANR	4894553	IfStatement	if ( m_lstat -> GetRc ( ) )		4894508	4					
ANR	4894554	Condition	m_lstat -> GetRc ( )	130:6:3403:3419	4894508	0	True				
ANR	4894555	CallExpression	m_lstat -> GetRc ( )		4894508	0					
ANR	4894556	Callee	m_lstat -> GetRc		4894508	0					
ANR	4894557	PtrMemberAccess	m_lstat -> GetRc		4894508	0					
ANR	4894558	Identifier	m_lstat		4894508	0					
ANR	4894559	Identifier	GetRc		4894508	1					
ANR	4894560	ArgumentList			4894508	1					
ANR	4894561	ReturnStatement	return m_lstat -> GetRc ( ) ;	130:26:3423:3446	4894508	1	True				
ANR	4894562	CallExpression	m_lstat -> GetRc ( )		4894508	0					
ANR	4894563	Callee	m_lstat -> GetRc		4894508	0					
ANR	4894564	PtrMemberAccess	m_lstat -> GetRc		4894508	0					
ANR	4894565	Identifier	m_lstat		4894508	0					
ANR	4894566	Identifier	GetRc		4894508	1					
ANR	4894567	ArgumentList			4894508	1					
ANR	4894568	IfStatement	if ( m_fstat -> GetRc ( ) )		4894508	5					
ANR	4894569	Condition	m_fstat -> GetRc ( )	131:6:3454:3470	4894508	0	True				
ANR	4894570	CallExpression	m_fstat -> GetRc ( )		4894508	0					
ANR	4894571	Callee	m_fstat -> GetRc		4894508	0					
ANR	4894572	PtrMemberAccess	m_fstat -> GetRc		4894508	0					
ANR	4894573	Identifier	m_fstat		4894508	0					
ANR	4894574	Identifier	GetRc		4894508	1					
ANR	4894575	ArgumentList			4894508	1					
ANR	4894576	ReturnStatement	return m_fstat -> GetRc ( ) ;	131:26:3474:3497	4894508	1	True				
ANR	4894577	CallExpression	m_fstat -> GetRc ( )		4894508	0					
ANR	4894578	Callee	m_fstat -> GetRc		4894508	0					
ANR	4894579	PtrMemberAccess	m_fstat -> GetRc		4894508	0					
ANR	4894580	Identifier	m_fstat		4894508	0					
ANR	4894581	Identifier	GetRc		4894508	1					
ANR	4894582	ArgumentList			4894508	1					
ANR	4894583	ReturnStatement	return 0 ;	132:1:3500:3508	4894508	6	True				
ANR	4894584	PrimaryExpression	0		4894508	0					
ANR	4894585	ReturnType	int		4894508	1					
ANR	4894586	Identifier	StatWrapperOp :: StatAll		4894508	2					
ANR	4894587	ParameterList	bool force		4894508	3					
ANR	4894588	Parameter	bool force	123:24:3255:3264	4894508	0	True				
ANR	4894589	ParameterType	bool		4894508	0					
ANR	4894590	Identifier	force		4894508	1					
ANR	4894591	CFGEntryNode	ENTRY		4894508		True				
ANR	4894592	CFGExitNode	EXIT		4894508		True				
ANR	4894593	Symbol	m_lstat -> GetRc		4894508						
ANR	4894594	Symbol	* m_lstat		4894508						
ANR	4894595	Symbol	* m_fstat		4894508						
ANR	4894596	Symbol	m_lstat		4894508						
ANR	4894597	Symbol	* m_stat		4894508						
ANR	4894598	Symbol	m_stat		4894508						
ANR	4894599	Symbol	m_fstat -> GetRc		4894508						
ANR	4894600	Symbol	force		4894508						
ANR	4894601	Symbol	m_stat -> GetRc		4894508						
ANR	4894602	Symbol	m_fstat		4894508						
ANR	4894603	Function	StatWrapper :: StatWrapper	139:0:3556:3706							
ANR	4894604	FunctionDef	"StatWrapper :: StatWrapper (const MyString & path , StatOpType which)"		4894603	0					
ANR	4894605	CompoundStatement		140:0:3623:3706	4894603	0					
ANR	4894606	ExpressionStatement	init ( )	141:1:3626:3633	4894603	0	True				
ANR	4894607	CallExpression	init ( )		4894603	0					
ANR	4894608	Callee	init		4894603	0					
ANR	4894609	Identifier	init		4894603	0					
ANR	4894610	ArgumentList			4894603	1					
ANR	4894611	IfStatement	if ( which != STATOP_NONE )		4894603	1					
ANR	4894612	Condition	which != STATOP_NONE	143:6:3642:3661	4894603	0	True				
ANR	4894613	EqualityExpression	which != STATOP_NONE		4894603	0		!=			
ANR	4894614	Identifier	which		4894603	0					
ANR	4894615	Identifier	STATOP_NONE		4894603	1					
ANR	4894616	CompoundStatement		4:29:41:41	4894603	1					
ANR	4894617	ExpressionStatement	"( void ) Stat ( path , which , true )"	144:2:3669:3701	4894603	0	True				
ANR	4894618	CastExpression	"( void ) Stat ( path , which , true )"		4894603	0					
ANR	4894619	CastTarget	void		4894603	0					
ANR	4894620	CallExpression	"Stat ( path , which , true )"		4894603	1					
ANR	4894621	Callee	Stat		4894603	0					
ANR	4894622	Identifier	Stat		4894603	0					
ANR	4894623	ArgumentList	path		4894603	1					
ANR	4894624	Argument	path		4894603	0					
ANR	4894625	Identifier	path		4894603	0					
ANR	4894626	Argument	which		4894603	1					
ANR	4894627	Identifier	which		4894603	0					
ANR	4894628	Argument	true		4894603	2					
ANR	4894629	Identifier	true		4894603	0					
ANR	4894630	Identifier	StatWrapper :: StatWrapper		4894603	1					
ANR	4894631	ParameterList	"const MyString & path , StatOpType which"		4894603	2					
ANR	4894632	Parameter	const MyString & path	139:26:3582:3601	4894603	0	True				
ANR	4894633	ParameterType	const MyString &		4894603	0					
ANR	4894634	Identifier	path		4894603	1					
ANR	4894635	Parameter	StatOpType which	139:48:3604:3619	4894603	1	True				
ANR	4894636	ParameterType	StatOpType		4894603	0					
ANR	4894637	Identifier	which		4894603	1					
ANR	4894638	CFGEntryNode	ENTRY		4894603		True				
ANR	4894639	CFGExitNode	EXIT		4894603		True				
ANR	4894640	Symbol	which		4894603						
ANR	4894641	Symbol	path		4894603						
ANR	4894642	Symbol	STATOP_NONE		4894603						
ANR	4894643	Symbol	true		4894603						
ANR	4894644	Function	StatWrapper :: StatWrapper	148:0:3709:3909							
ANR	4894645	FunctionDef	"StatWrapper :: StatWrapper (const char * path , StatOpType which)"		4894644	0					
ANR	4894646	CompoundStatement		149:0:3772:3909	4894644	0					
ANR	4894647	ExpressionStatement	init ( )	150:1:3775:3782	4894644	0	True				
ANR	4894648	CallExpression	init ( )		4894644	0					
ANR	4894649	Callee	init		4894644	0					
ANR	4894650	Identifier	init		4894644	0					
ANR	4894651	ArgumentList			4894644	1					
ANR	4894652	ExpressionStatement	m_stat -> SetPath ( path )	151:1:3785:3809	4894644	1	True				
ANR	4894653	CallExpression	m_stat -> SetPath ( path )		4894644	0					
ANR	4894654	Callee	m_stat -> SetPath		4894644	0					
ANR	4894655	PtrMemberAccess	m_stat -> SetPath		4894644	0					
ANR	4894656	Identifier	m_stat		4894644	0					
ANR	4894657	Identifier	SetPath		4894644	1					
ANR	4894658	ArgumentList	path		4894644	1					
ANR	4894659	Argument	path		4894644	0					
ANR	4894660	Identifier	path		4894644	0					
ANR	4894661	ExpressionStatement	m_lstat -> SetPath ( path )	152:1:3812:3836	4894644	2	True				
ANR	4894662	CallExpression	m_lstat -> SetPath ( path )		4894644	0					
ANR	4894663	Callee	m_lstat -> SetPath		4894644	0					
ANR	4894664	PtrMemberAccess	m_lstat -> SetPath		4894644	0					
ANR	4894665	Identifier	m_lstat		4894644	0					
ANR	4894666	Identifier	SetPath		4894644	1					
ANR	4894667	ArgumentList	path		4894644	1					
ANR	4894668	Argument	path		4894644	0					
ANR	4894669	Identifier	path		4894644	0					
ANR	4894670	IfStatement	if ( which != STATOP_NONE )		4894644	3					
ANR	4894671	Condition	which != STATOP_NONE	154:6:3845:3864	4894644	0	True				
ANR	4894672	EqualityExpression	which != STATOP_NONE		4894644	0		!=			
ANR	4894673	Identifier	which		4894644	0					
ANR	4894674	Identifier	STATOP_NONE		4894644	1					
ANR	4894675	CompoundStatement		6:29:95:95	4894644	1					
ANR	4894676	ExpressionStatement	"( void ) Stat ( path , which , true )"	155:2:3872:3904	4894644	0	True				
ANR	4894677	CastExpression	"( void ) Stat ( path , which , true )"		4894644	0					
ANR	4894678	CastTarget	void		4894644	0					
ANR	4894679	CallExpression	"Stat ( path , which , true )"		4894644	1					
ANR	4894680	Callee	Stat		4894644	0					
ANR	4894681	Identifier	Stat		4894644	0					
ANR	4894682	ArgumentList	path		4894644	1					
ANR	4894683	Argument	path		4894644	0					
ANR	4894684	Identifier	path		4894644	0					
ANR	4894685	Argument	which		4894644	1					
ANR	4894686	Identifier	which		4894644	0					
ANR	4894687	Argument	true		4894644	2					
ANR	4894688	Identifier	true		4894644	0					
ANR	4894689	Identifier	StatWrapper :: StatWrapper		4894644	1					
ANR	4894690	ParameterList	"const char * path , StatOpType which"		4894644	2					
ANR	4894691	Parameter	const char * path	148:26:3735:3750	4894644	0	True				
ANR	4894692	ParameterType	const char *		4894644	0					
ANR	4894693	Identifier	path		4894644	1					
ANR	4894694	Parameter	StatOpType which	148:44:3753:3768	4894644	1	True				
ANR	4894695	ParameterType	StatOpType		4894644	0					
ANR	4894696	Identifier	which		4894644	1					
ANR	4894697	CFGEntryNode	ENTRY		4894644		True				
ANR	4894698	CFGExitNode	EXIT		4894644		True				
ANR	4894699	Symbol	which		4894644						
ANR	4894700	Symbol	path		4894644						
ANR	4894701	Symbol	STATOP_NONE		4894644						
ANR	4894702	Symbol	m_lstat		4894644						
ANR	4894703	Symbol	m_stat		4894644						
ANR	4894704	Symbol	true		4894644						
ANR	4894705	Function	StatWrapper :: StatWrapper	159:0:3912:4062							
ANR	4894706	FunctionDef	"StatWrapper :: StatWrapper (int fd , StatOpType which)"		4894705	0					
ANR	4894707	CompoundStatement		160:0:3965:4062	4894705	0					
ANR	4894708	ExpressionStatement	init ( )	161:1:3968:3975	4894705	0	True				
ANR	4894709	CallExpression	init ( )		4894705	0					
ANR	4894710	Callee	init		4894705	0					
ANR	4894711	Identifier	init		4894705	0					
ANR	4894712	ArgumentList			4894705	1					
ANR	4894713	ExpressionStatement	m_fstat -> SetFD ( fd )	162:1:3978:3998	4894705	1	True				
ANR	4894714	CallExpression	m_fstat -> SetFD ( fd )		4894705	0					
ANR	4894715	Callee	m_fstat -> SetFD		4894705	0					
ANR	4894716	PtrMemberAccess	m_fstat -> SetFD		4894705	0					
ANR	4894717	Identifier	m_fstat		4894705	0					
ANR	4894718	Identifier	SetFD		4894705	1					
ANR	4894719	ArgumentList	fd		4894705	1					
ANR	4894720	Argument	fd		4894705	0					
ANR	4894721	Identifier	fd		4894705	0					
ANR	4894722	IfStatement	if ( which != STATOP_NONE )		4894705	2					
ANR	4894723	Condition	which != STATOP_NONE	164:6:4007:4026	4894705	0	True				
ANR	4894724	EqualityExpression	which != STATOP_NONE		4894705	0		!=			
ANR	4894725	Identifier	which		4894705	0					
ANR	4894726	Identifier	STATOP_NONE		4894705	1					
ANR	4894727	CompoundStatement		5:29:64:64	4894705	1					
ANR	4894728	ExpressionStatement	"( void ) Stat ( fd , true )"	165:2:4034:4057	4894705	0	True				
ANR	4894729	CastExpression	"( void ) Stat ( fd , true )"		4894705	0					
ANR	4894730	CastTarget	void		4894705	0					
ANR	4894731	CallExpression	"Stat ( fd , true )"		4894705	1					
ANR	4894732	Callee	Stat		4894705	0					
ANR	4894733	Identifier	Stat		4894705	0					
ANR	4894734	ArgumentList	fd		4894705	1					
ANR	4894735	Argument	fd		4894705	0					
ANR	4894736	Identifier	fd		4894705	0					
ANR	4894737	Argument	true		4894705	1					
ANR	4894738	Identifier	true		4894705	0					
ANR	4894739	Identifier	StatWrapper :: StatWrapper		4894705	1					
ANR	4894740	ParameterList	"int fd , StatOpType which"		4894705	2					
ANR	4894741	Parameter	int fd	159:26:3938:3943	4894705	0	True				
ANR	4894742	ParameterType	int		4894705	0					
ANR	4894743	Identifier	fd		4894705	1					
ANR	4894744	Parameter	StatOpType which	159:34:3946:3961	4894705	1	True				
ANR	4894745	ParameterType	StatOpType		4894705	0					
ANR	4894746	Identifier	which		4894705	1					
ANR	4894747	CFGEntryNode	ENTRY		4894705		True				
ANR	4894748	CFGExitNode	EXIT		4894705		True				
ANR	4894749	Symbol	which		4894705						
ANR	4894750	Symbol	STATOP_NONE		4894705						
ANR	4894751	Symbol	true		4894705						
ANR	4894752	Symbol	fd		4894705						
ANR	4894753	Symbol	m_fstat		4894705						
ANR	4894754	Function	StatWrapper :: StatWrapper	169:0:4065:4110							
ANR	4894755	FunctionDef	StatWrapper :: StatWrapper ()		4894754	0					
ANR	4894756	CompoundStatement		170:0:4098:4110	4894754	0					
ANR	4894757	ExpressionStatement	init ( )	171:1:4101:4108	4894754	0	True				
ANR	4894758	CallExpression	init ( )		4894754	0					
ANR	4894759	Callee	init		4894754	0					
ANR	4894760	Identifier	init		4894754	0					
ANR	4894761	ArgumentList			4894754	1					
ANR	4894762	Identifier	StatWrapper :: StatWrapper		4894754	1					
ANR	4894763	ParameterList			4894754	2					
ANR	4894764	CFGEntryNode	ENTRY		4894754		True				
ANR	4894765	CFGExitNode	EXIT		4894754		True				
ANR	4894766	Function	StatWrapper :: ~StatWrapper	174:0:4113:4307							
ANR	4894767	FunctionDef	StatWrapper :: ~StatWrapper ()		4894766	0					
ANR	4894768	CompoundStatement		175:0:4147:4307	4894766	0					
ANR	4894769	ForStatement	for ( int i = STATOP_MIN ; i <= STATOP_MAX ; i ++ )		4894766	0					
ANR	4894770	ForInit	int i = STATOP_MIN ;	176:5:4154:4170	4894766	0	True				
ANR	4894771	IdentifierDeclStatement	int i = STATOP_MIN ;		4894766	0					
ANR	4894772	IdentifierDecl	i = STATOP_MIN		4894766	0					
ANR	4894773	IdentifierDeclType	int		4894766	0					
ANR	4894774	Identifier	i		4894766	1					
ANR	4894775	AssignmentExpression	i = STATOP_MIN		4894766	2		=			
ANR	4894776	Identifier	STATOP_MIN		4894766	0					
ANR	4894777	Identifier	STATOP_MIN		4894766	1					
ANR	4894778	Condition	i <= STATOP_MAX	176:23:4172:4184	4894766	1	True				
ANR	4894779	RelationalExpression	i <= STATOP_MAX		4894766	0		<=			
ANR	4894780	Identifier	i		4894766	0					
ANR	4894781	Identifier	STATOP_MAX		4894766	1					
ANR	4894782	PostIncDecOperationExpression	i ++	176:38:4187:4189	4894766	2	True				
ANR	4894783	Identifier	i		4894766	0					
ANR	4894784	IncDec	++		4894766	1					
ANR	4894785	CompoundStatement		2:44:45:45	4894766	3					
ANR	4894786	IfStatement	if ( m_ops [ i ] )		4894766	0					
ANR	4894787	Condition	m_ops [ i ]	177:6:4201:4208	4894766	0	True				
ANR	4894788	ArrayIndexing	m_ops [ i ]		4894766	0					
ANR	4894789	Identifier	m_ops		4894766	0					
ANR	4894790	Identifier	i		4894766	1					
ANR	4894791	CompoundStatement		3:17:64:64	4894766	1					
ANR	4894792	Statement	delete	178:3:4217:4222	4894766	0	True				
ANR	4894793	ExpressionStatement	m_ops [ i ]	178:10:4224:4232	4894766	1	True				
ANR	4894794	ArrayIndexing	m_ops [ i ]		4894766	0					
ANR	4894795	Identifier	m_ops		4894766	0					
ANR	4894796	Identifier	i		4894766	1					
ANR	4894797	Statement	delete	182:1:4243:4248	4894766	1	True				
ANR	4894798	ExpressionStatement	m_nop	182:8:4250:4255	4894766	2	True				
ANR	4894799	Identifier	m_nop		4894766	0					
ANR	4894800	Statement	delete	183:1:4258:4263	4894766	3	True				
ANR	4894801	ExpressionStatement	m_stat	183:8:4265:4271	4894766	4	True				
ANR	4894802	Identifier	m_stat		4894766	0					
ANR	4894803	Statement	delete	184:1:4274:4279	4894766	5	True				
ANR	4894804	ExpressionStatement	m_lstat	184:8:4281:4288	4894766	6	True				
ANR	4894805	Identifier	m_lstat		4894766	0					
ANR	4894806	Statement	delete	185:1:4291:4296	4894766	7	True				
ANR	4894807	ExpressionStatement	m_fstat	185:8:4298:4305	4894766	8	True				
ANR	4894808	Identifier	m_fstat		4894766	0					
ANR	4894809	Identifier	StatWrapper :: ~StatWrapper		4894766	1					
ANR	4894810	ParameterList			4894766	2					
ANR	4894811	CFGEntryNode	ENTRY		4894766		True				
ANR	4894812	CFGExitNode	EXIT		4894766		True				
ANR	4894813	Symbol	* i		4894766						
ANR	4894814	Symbol	STATOP_MAX		4894766						
ANR	4894815	Symbol	STATOP_MIN		4894766						
ANR	4894816	Symbol	* m_ops		4894766						
ANR	4894817	Symbol	i		4894766						
ANR	4894818	Symbol	m_ops		4894766						
ANR	4894819	Function	StatWrapper :: IsInitialized	188:0:4310:4407							
ANR	4894820	FunctionDef	StatWrapper :: IsInitialized ()		4894819	0					
ANR	4894821	CompoundStatement		190:0:4356:4407	4894819	0					
ANR	4894822	ReturnStatement	return m_stat -> IsValid ( ) || m_fstat -> IsValid ( ) ;	191:1:4359:4405	4894819	0	True				
ANR	4894823	OrExpression	m_stat -> IsValid ( ) || m_fstat -> IsValid ( )		4894819	0		||			
ANR	4894824	CallExpression	m_stat -> IsValid ( )		4894819	0					
ANR	4894825	Callee	m_stat -> IsValid		4894819	0					
ANR	4894826	PtrMemberAccess	m_stat -> IsValid		4894819	0					
ANR	4894827	Identifier	m_stat		4894819	0					
ANR	4894828	Identifier	IsValid		4894819	1					
ANR	4894829	ArgumentList			4894819	1					
ANR	4894830	CallExpression	m_fstat -> IsValid ( )		4894819	1					
ANR	4894831	Callee	m_fstat -> IsValid		4894819	0					
ANR	4894832	PtrMemberAccess	m_fstat -> IsValid		4894819	0					
ANR	4894833	Identifier	m_fstat		4894819	0					
ANR	4894834	Identifier	IsValid		4894819	1					
ANR	4894835	ArgumentList			4894819	1					
ANR	4894836	ReturnType	bool		4894819	1					
ANR	4894837	Identifier	StatWrapper :: IsInitialized		4894819	2					
ANR	4894838	ParameterList			4894819	3					
ANR	4894839	CFGEntryNode	ENTRY		4894819		True				
ANR	4894840	CFGExitNode	EXIT		4894819		True				
ANR	4894841	Symbol	m_stat -> IsValid		4894819						
ANR	4894842	Symbol	m_fstat -> IsValid		4894819						
ANR	4894843	Symbol	* m_fstat		4894819						
ANR	4894844	Symbol	* m_stat		4894819						
ANR	4894845	Symbol	m_stat		4894819						
ANR	4894846	Symbol	m_fstat		4894819						
ANR	4894847	Function	StatWrapper :: init	195:0:4422:5515							
ANR	4894848	FunctionDef	StatWrapper :: init ()		4894847	0					
ANR	4894849	CompoundStatement		197:0:4453:5515	4894847	0					
ANR	4894850	ExpressionStatement	"m_nop = new StatWrapperIntNop ( NULL , NULL )"	198:1:4456:4508	4894847	0	True				
ANR	4894851	AssignmentExpression	"m_nop = new StatWrapperIntNop ( NULL , NULL )"		4894847	0		=			
ANR	4894852	Identifier	m_nop		4894847	0					
ANR	4894853	Expression	"NULL , NULL"		4894847	1					
ANR	4894854	Identifier	NULL		4894847	0					
ANR	4894855	Identifier	NULL		4894847	1					
ANR	4894856	ExpressionStatement	"m_stat = new StatWrapperIntPath ( STAT_NAME , STAT_FUNC )"	199:1:4511:4569	4894847	1	True				
ANR	4894857	AssignmentExpression	"m_stat = new StatWrapperIntPath ( STAT_NAME , STAT_FUNC )"		4894847	0		=			
ANR	4894858	Identifier	m_stat		4894847	0					
ANR	4894859	Expression	"STAT_NAME , STAT_FUNC"		4894847	1					
ANR	4894860	Identifier	STAT_NAME		4894847	0					
ANR	4894861	Identifier	STAT_FUNC		4894847	1					
ANR	4894862	ExpressionStatement	"m_lstat = new StatWrapperIntPath ( LSTAT_NAME , LSTAT_FUNC )"	200:1:4572:4630	4894847	2	True				
ANR	4894863	AssignmentExpression	"m_lstat = new StatWrapperIntPath ( LSTAT_NAME , LSTAT_FUNC )"		4894847	0		=			
ANR	4894864	Identifier	m_lstat		4894847	0					
ANR	4894865	Expression	"LSTAT_NAME , LSTAT_FUNC"		4894847	1					
ANR	4894866	Identifier	LSTAT_NAME		4894847	0					
ANR	4894867	Identifier	LSTAT_FUNC		4894847	1					
ANR	4894868	ExpressionStatement	"m_fstat = new StatWrapperIntFd ( FSTAT_NAME , FSTAT_FUNC )"	201:1:4633:4691	4894847	3	True				
ANR	4894869	AssignmentExpression	"m_fstat = new StatWrapperIntFd ( FSTAT_NAME , FSTAT_FUNC )"		4894847	0		=			
ANR	4894870	Identifier	m_fstat		4894847	0					
ANR	4894871	Expression	"FSTAT_NAME , FSTAT_FUNC"		4894847	1					
ANR	4894872	Identifier	FSTAT_NAME		4894847	0					
ANR	4894873	Identifier	FSTAT_FUNC		4894847	1					
ANR	4894874	ExpressionStatement	"memset ( m_ops , 0 , sizeof ( m_ops ) )"	205:1:4781:4814	4894847	4	True				
ANR	4894875	CallExpression	"memset ( m_ops , 0 , sizeof ( m_ops ) )"		4894847	0					
ANR	4894876	Callee	memset		4894847	0					
ANR	4894877	Identifier	memset		4894847	0					
ANR	4894878	ArgumentList	m_ops		4894847	1					
ANR	4894879	Argument	m_ops		4894847	0					
ANR	4894880	Identifier	m_ops		4894847	0					
ANR	4894881	Argument	0		4894847	1					
ANR	4894882	PrimaryExpression	0		4894847	0					
ANR	4894883	Argument	sizeof ( m_ops )		4894847	2					
ANR	4894884	SizeofExpression	sizeof ( m_ops )		4894847	0					
ANR	4894885	Sizeof	sizeof		4894847	0					
ANR	4894886	SizeofOperand	m_ops		4894847	1					
ANR	4894887	IdentifierDeclStatement	ifdef HAVE_AN_LSTAT StatWrapperIntPath * lstat = m_lstat ;	206:2:4818:4874	4894847	5	True				
ANR	4894888	IdentifierDecl	* lstat = m_lstat		4894847	0					
ANR	4894889	IdentifierDeclType	ifdef HAVE_AN_LSTAT StatWrapperIntPath *		4894847	0					
ANR	4894890	Identifier	lstat		4894847	1					
ANR	4894891	AssignmentExpression	* lstat = m_lstat		4894847	2		=			
ANR	4894892	Identifier	m_lstat		4894847	0					
ANR	4894893	Identifier	m_lstat		4894847	1					
ANR	4894894	ReturnType	void		4894847	1					
ANR	4894895	Identifier	StatWrapper :: init		4894847	2					
ANR	4894896	ParameterList			4894847	3					
ANR	4894897	CFGEntryNode	ENTRY		4894847		True				
ANR	4894898	CFGExitNode	EXIT		4894847		True				
ANR	4894899	Symbol	LSTAT_NAME		4894847						
ANR	4894900	Symbol	FSTAT_NAME		4894847						
ANR	4894901	Symbol	NULL		4894847						
ANR	4894902	Symbol	m_lstat		4894847						
ANR	4894903	Symbol	FSTAT_FUNC		4894847						
ANR	4894904	Symbol	lstat		4894847						
ANR	4894905	Symbol	STAT_NAME		4894847						
ANR	4894906	Symbol	LSTAT_FUNC		4894847						
ANR	4894907	Symbol	m_ops		4894847						
ANR	4894908	Symbol	m_nop		4894847						
ANR	4894909	Symbol	STAT_FUNC		4894847						
ANR	4894910	Symbol	m_stat		4894847						
ANR	4894911	Symbol	m_fstat		4894847						
ANR	4894912	Function	StatWrapper :: SetPath	224:0:5537:5645							
ANR	4894913	FunctionDef	StatWrapper :: SetPath (const MyString & path)		4894912	0					
ANR	4894914	CompoundStatement		226:0:5587:5645	4894912	0					
ANR	4894915	ReturnStatement	return SetPath ( path . IsEmpty ( ) ? NULL : path . Value ( ) ) ;	227:1:5590:5643	4894912	0	True				
ANR	4894916	CallExpression	SetPath ( path . IsEmpty ( ) ? NULL : path . Value ( ) )		4894912	0					
ANR	4894917	Callee	SetPath		4894912	0					
ANR	4894918	Identifier	SetPath		4894912	0					
ANR	4894919	ArgumentList	path . IsEmpty ( ) ? NULL : path . Value ( )		4894912	1					
ANR	4894920	Argument	path . IsEmpty ( ) ? NULL : path . Value ( )		4894912	0					
ANR	4894921	ConditionalExpression	path . IsEmpty ( ) ? NULL : path . Value ( )		4894912	0					
ANR	4894922	Condition	path . IsEmpty ( )		4894912	0					
ANR	4894923	CallExpression	path . IsEmpty ( )		4894912	0					
ANR	4894924	Callee	path . IsEmpty		4894912	0					
ANR	4894925	MemberAccess	path . IsEmpty		4894912	0					
ANR	4894926	Identifier	path		4894912	0					
ANR	4894927	Identifier	IsEmpty		4894912	1					
ANR	4894928	ArgumentList			4894912	1					
ANR	4894929	Identifier	NULL		4894912	1					
ANR	4894930	CallExpression	path . Value ( )		4894912	2					
ANR	4894931	Callee	path . Value		4894912	0					
ANR	4894932	MemberAccess	path . Value		4894912	0					
ANR	4894933	Identifier	path		4894912	0					
ANR	4894934	Identifier	Value		4894912	1					
ANR	4894935	ArgumentList			4894912	1					
ANR	4894936	ReturnType	bool		4894912	1					
ANR	4894937	Identifier	StatWrapper :: SetPath		4894912	2					
ANR	4894938	ParameterList	const MyString & path		4894912	3					
ANR	4894939	Parameter	const MyString & path	225:22:5564:5583	4894912	0	True				
ANR	4894940	ParameterType	const MyString &		4894912	0					
ANR	4894941	Identifier	path		4894912	1					
ANR	4894942	CFGEntryNode	ENTRY		4894912		True				
ANR	4894943	CFGExitNode	EXIT		4894912		True				
ANR	4894944	Symbol	SetPath		4894912						
ANR	4894945	Symbol	path		4894912						
ANR	4894946	Symbol	NULL		4894912						
ANR	4894947	Symbol	path . Value		4894912						
ANR	4894948	Symbol	path . IsEmpty		4894912						
ANR	4894949	Function	StatWrapper :: SetPath	231:0:5667:5867							
ANR	4894950	FunctionDef	StatWrapper :: SetPath (const char * path)		4894949	0					
ANR	4894951	CompoundStatement		233:0:5713:5867	4894949	0					
ANR	4894952	IdentifierDeclStatement	bool status = true ;	234:1:5716:5734	4894949	0	True				
ANR	4894953	IdentifierDecl	status = true		4894949	0					
ANR	4894954	IdentifierDeclType	bool		4894949	0					
ANR	4894955	Identifier	status		4894949	1					
ANR	4894956	AssignmentExpression	status = true		4894949	2		=			
ANR	4894957	Identifier	true		4894949	0					
ANR	4894958	Identifier	true		4894949	1					
ANR	4894959	IfStatement	if ( ! m_stat -> SetPath ( path ) )		4894949	1					
ANR	4894960	Condition	! m_stat -> SetPath ( path )	236:6:5743:5766	4894949	0	True				
ANR	4894961	UnaryOperationExpression	! m_stat -> SetPath ( path )		4894949	0					
ANR	4894962	UnaryOperator	!		4894949	0					
ANR	4894963	CallExpression	m_stat -> SetPath ( path )		4894949	1					
ANR	4894964	Callee	m_stat -> SetPath		4894949	0					
ANR	4894965	PtrMemberAccess	m_stat -> SetPath		4894949	0					
ANR	4894966	Identifier	m_stat		4894949	0					
ANR	4894967	Identifier	SetPath		4894949	1					
ANR	4894968	ArgumentList	path		4894949	1					
ANR	4894969	Argument	path		4894949	0					
ANR	4894970	Identifier	path		4894949	0					
ANR	4894971	CompoundStatement		4:33:56:56	4894949	1					
ANR	4894972	ExpressionStatement	status = false	237:2:5774:5788	4894949	0	True				
ANR	4894973	AssignmentExpression	status = false		4894949	0		=			
ANR	4894974	Identifier	status		4894949	0					
ANR	4894975	Identifier	false		4894949	1					
ANR	4894976	IfStatement	if ( ! m_lstat -> SetPath ( path ) )		4894949	2					
ANR	4894977	Condition	! m_lstat -> SetPath ( path )	239:6:5799:5823	4894949	0	True				
ANR	4894978	UnaryOperationExpression	! m_lstat -> SetPath ( path )		4894949	0					
ANR	4894979	UnaryOperator	!		4894949	0					
ANR	4894980	CallExpression	m_lstat -> SetPath ( path )		4894949	1					
ANR	4894981	Callee	m_lstat -> SetPath		4894949	0					
ANR	4894982	PtrMemberAccess	m_lstat -> SetPath		4894949	0					
ANR	4894983	Identifier	m_lstat		4894949	0					
ANR	4894984	Identifier	SetPath		4894949	1					
ANR	4894985	ArgumentList	path		4894949	1					
ANR	4894986	Argument	path		4894949	0					
ANR	4894987	Identifier	path		4894949	0					
ANR	4894988	CompoundStatement		7:34:113:113	4894949	1					
ANR	4894989	ExpressionStatement	status = false	240:2:5831:5845	4894949	0	True				
ANR	4894990	AssignmentExpression	status = false		4894949	0		=			
ANR	4894991	Identifier	status		4894949	0					
ANR	4894992	Identifier	false		4894949	1					
ANR	4894993	ReturnStatement	return status ;	243:1:5852:5865	4894949	3	True				
ANR	4894994	Identifier	status		4894949	0					
ANR	4894995	ReturnType	bool		4894949	1					
ANR	4894996	Identifier	StatWrapper :: SetPath		4894949	2					
ANR	4894997	ParameterList	const char * path		4894949	3					
ANR	4894998	Parameter	const char * path	232:22:5694:5709	4894949	0	True				
ANR	4894999	ParameterType	const char *		4894949	0					
ANR	4895000	Identifier	path		4894949	1					
ANR	4895001	CFGEntryNode	ENTRY		4894949		True				
ANR	4895002	CFGExitNode	EXIT		4894949		True				
ANR	4895003	Symbol	path		4894949						
ANR	4895004	Symbol	* m_lstat		4894949						
ANR	4895005	Symbol	* m_stat		4894949						
ANR	4895006	Symbol	m_lstat		4894949						
ANR	4895007	Symbol	m_stat		4894949						
ANR	4895008	Symbol	true		4894949						
ANR	4895009	Symbol	false		4894949						
ANR	4895010	Symbol	m_lstat -> SetPath		4894949						
ANR	4895011	Symbol	m_stat -> SetPath		4894949						
ANR	4895012	Symbol	status		4894949						
ANR	4895013	Function	StatWrapper :: SetFD	246:0:5870:5936							
ANR	4895014	FunctionDef	StatWrapper :: SetFD (int fd)		4895013	0					
ANR	4895015	CompoundStatement		248:0:5904:5936	4895013	0					
ANR	4895016	ReturnStatement	return m_fstat -> SetFD ( fd ) ;	249:1:5907:5934	4895013	0	True				
ANR	4895017	CallExpression	m_fstat -> SetFD ( fd )		4895013	0					
ANR	4895018	Callee	m_fstat -> SetFD		4895013	0					
ANR	4895019	PtrMemberAccess	m_fstat -> SetFD		4895013	0					
ANR	4895020	Identifier	m_fstat		4895013	0					
ANR	4895021	Identifier	SetFD		4895013	1					
ANR	4895022	ArgumentList	fd		4895013	1					
ANR	4895023	Argument	fd		4895013	0					
ANR	4895024	Identifier	fd		4895013	0					
ANR	4895025	ReturnType	bool		4895013	1					
ANR	4895026	Identifier	StatWrapper :: SetFD		4895013	2					
ANR	4895027	ParameterList	int fd		4895013	3					
ANR	4895028	Parameter	int fd	247:20:5895:5900	4895013	0	True				
ANR	4895029	ParameterType	int		4895013	0					
ANR	4895030	Identifier	fd		4895013	1					
ANR	4895031	CFGEntryNode	ENTRY		4895013		True				
ANR	4895032	CFGExitNode	EXIT		4895013		True				
ANR	4895033	Symbol	* m_fstat		4895013						
ANR	4895034	Symbol	m_fstat -> SetFD		4895013						
ANR	4895035	Symbol	fd		4895013						
ANR	4895036	Symbol	m_fstat		4895013						
ANR	4895037	Function	StatWrapper :: GetRc	252:0:5939:6060							
ANR	4895038	FunctionDef	StatWrapper :: GetRc (const StatWrapperIntBase * stat)		4895037	0					
ANR	4895039	CompoundStatement		254:0:6002:6060	4895037	0					
ANR	4895040	IfStatement	if ( ! stat )		4895037	0					
ANR	4895041	Condition	! stat	255:6:6010:6014	4895037	0	True				
ANR	4895042	UnaryOperationExpression	! stat		4895037	0					
ANR	4895043	UnaryOperator	!		4895037	0					
ANR	4895044	Identifier	stat		4895037	1					
ANR	4895045	CompoundStatement		2:14:15:15	4895037	1					
ANR	4895046	ReturnStatement	return - 1 ;	256:2:6022:6031	4895037	0	True				
ANR	4895047	UnaryOperationExpression	- 1		4895037	0					
ANR	4895048	UnaryOperator	-		4895037	0					
ANR	4895049	PrimaryExpression	1		4895037	1					
ANR	4895050	ReturnStatement	return stat -> GetRc ( ) ;	258:1:6037:6058	4895037	1	True				
ANR	4895051	CallExpression	stat -> GetRc ( )		4895037	0					
ANR	4895052	Callee	stat -> GetRc		4895037	0					
ANR	4895053	PtrMemberAccess	stat -> GetRc		4895037	0					
ANR	4895054	Identifier	stat		4895037	0					
ANR	4895055	Identifier	GetRc		4895037	1					
ANR	4895056	ArgumentList			4895037	1					
ANR	4895057	ReturnType	int		4895037	1					
ANR	4895058	Identifier	StatWrapper :: GetRc		4895037	2					
ANR	4895059	ParameterList	const StatWrapperIntBase * stat		4895037	3					
ANR	4895060	Parameter	const StatWrapperIntBase * stat	253:20:5963:5992	4895037	0	True				
ANR	4895061	ParameterType	const StatWrapperIntBase *		4895037	0					
ANR	4895062	Identifier	stat		4895037	1					
ANR	4895063	CFGEntryNode	ENTRY		4895037		True				
ANR	4895064	CFGExitNode	EXIT		4895037		True				
ANR	4895065	Symbol	stat		4895037						
ANR	4895066	Symbol	stat -> GetRc		4895037						
ANR	4895067	Symbol	* stat		4895037						
ANR	4895068	Function	StatWrapper :: GetErrno	261:0:6063:6190							
ANR	4895069	FunctionDef	StatWrapper :: GetErrno (const StatWrapperIntBase * stat)		4895068	0					
ANR	4895070	CompoundStatement		263:0:6129:6190	4895068	0					
ANR	4895071	IfStatement	if ( ! stat )		4895068	0					
ANR	4895072	Condition	! stat	264:6:6137:6141	4895068	0	True				
ANR	4895073	UnaryOperationExpression	! stat		4895068	0					
ANR	4895074	UnaryOperator	!		4895068	0					
ANR	4895075	Identifier	stat		4895068	1					
ANR	4895076	CompoundStatement		2:14:15:15	4895068	1					
ANR	4895077	ReturnStatement	return - 1 ;	265:2:6149:6158	4895068	0	True				
ANR	4895078	UnaryOperationExpression	- 1		4895068	0					
ANR	4895079	UnaryOperator	-		4895068	0					
ANR	4895080	PrimaryExpression	1		4895068	1					
ANR	4895081	ReturnStatement	return stat -> GetErrno ( ) ;	267:1:6164:6188	4895068	1	True				
ANR	4895082	CallExpression	stat -> GetErrno ( )		4895068	0					
ANR	4895083	Callee	stat -> GetErrno		4895068	0					
ANR	4895084	PtrMemberAccess	stat -> GetErrno		4895068	0					
ANR	4895085	Identifier	stat		4895068	0					
ANR	4895086	Identifier	GetErrno		4895068	1					
ANR	4895087	ArgumentList			4895068	1					
ANR	4895088	ReturnType	int		4895068	1					
ANR	4895089	Identifier	StatWrapper :: GetErrno		4895068	2					
ANR	4895090	ParameterList	const StatWrapperIntBase * stat		4895068	3					
ANR	4895091	Parameter	const StatWrapperIntBase * stat	262:23:6090:6119	4895068	0	True				
ANR	4895092	ParameterType	const StatWrapperIntBase *		4895068	0					
ANR	4895093	Identifier	stat		4895068	1					
ANR	4895094	CFGEntryNode	ENTRY		4895068		True				
ANR	4895095	CFGExitNode	EXIT		4895068		True				
ANR	4895096	Symbol	stat		4895068						
ANR	4895097	Symbol	stat -> GetErrno		4895068						
ANR	4895098	Symbol	* stat		4895068						
ANR	4895099	Function	StatWrapper :: IsValid	270:0:6193:6322							
ANR	4895100	FunctionDef	StatWrapper :: IsValid (const StatWrapperIntBase * stat)		4895099	0					
ANR	4895101	CompoundStatement		272:0:6259:6322	4895099	0					
ANR	4895102	IfStatement	if ( ! stat )		4895099	0					
ANR	4895103	Condition	! stat	273:6:6267:6271	4895099	0	True				
ANR	4895104	UnaryOperationExpression	! stat		4895099	0					
ANR	4895105	UnaryOperator	!		4895099	0					
ANR	4895106	Identifier	stat		4895099	1					
ANR	4895107	CompoundStatement		2:14:15:15	4895099	1					
ANR	4895108	ReturnStatement	return false ;	274:2:6279:6291	4895099	0	True				
ANR	4895109	Identifier	false		4895099	0					
ANR	4895110	ReturnStatement	return stat -> IsValid ( ) ;	276:1:6297:6320	4895099	1	True				
ANR	4895111	CallExpression	stat -> IsValid ( )		4895099	0					
ANR	4895112	Callee	stat -> IsValid		4895099	0					
ANR	4895113	PtrMemberAccess	stat -> IsValid		4895099	0					
ANR	4895114	Identifier	stat		4895099	0					
ANR	4895115	Identifier	IsValid		4895099	1					
ANR	4895116	ArgumentList			4895099	1					
ANR	4895117	ReturnType	bool		4895099	1					
ANR	4895118	Identifier	StatWrapper :: IsValid		4895099	2					
ANR	4895119	ParameterList	const StatWrapperIntBase * stat		4895099	3					
ANR	4895120	Parameter	const StatWrapperIntBase * stat	271:22:6220:6249	4895099	0	True				
ANR	4895121	ParameterType	const StatWrapperIntBase *		4895099	0					
ANR	4895122	Identifier	stat		4895099	1					
ANR	4895123	CFGEntryNode	ENTRY		4895099		True				
ANR	4895124	CFGExitNode	EXIT		4895099		True				
ANR	4895125	Symbol	stat		4895099						
ANR	4895126	Symbol	stat -> IsValid		4895099						
ANR	4895127	Symbol	false		4895099						
ANR	4895128	Symbol	* stat		4895099						
ANR	4895129	Function	StatWrapper :: GetStatFn	279:0:6325:6465							
ANR	4895130	FunctionDef	StatWrapper :: GetStatFn (const StatWrapperIntBase * stat)		4895129	0					
ANR	4895131	CompoundStatement		281:0:6401:6465	4895129	0					
ANR	4895132	IfStatement	if ( ! stat )		4895129	0					
ANR	4895133	Condition	! stat	282:6:6409:6413	4895129	0	True				
ANR	4895134	UnaryOperationExpression	! stat		4895129	0					
ANR	4895135	UnaryOperator	!		4895129	0					
ANR	4895136	Identifier	stat		4895129	1					
ANR	4895137	CompoundStatement		2:14:15:15	4895129	1					
ANR	4895138	ReturnStatement	return NULL ;	283:2:6421:6432	4895129	0	True				
ANR	4895139	Identifier	NULL		4895129	0					
ANR	4895140	ReturnStatement	return stat -> GetFnName ( ) ;	285:1:6438:6463	4895129	1	True				
ANR	4895141	CallExpression	stat -> GetFnName ( )		4895129	0					
ANR	4895142	Callee	stat -> GetFnName		4895129	0					
ANR	4895143	PtrMemberAccess	stat -> GetFnName		4895129	0					
ANR	4895144	Identifier	stat		4895129	0					
ANR	4895145	Identifier	GetFnName		4895129	1					
ANR	4895146	ArgumentList			4895129	1					
ANR	4895147	ReturnType	const char *		4895129	1					
ANR	4895148	Identifier	StatWrapper :: GetStatFn		4895129	2					
ANR	4895149	ParameterList	const StatWrapperIntBase * stat		4895129	3					
ANR	4895150	Parameter	const StatWrapperIntBase * stat	280:24:6362:6391	4895129	0	True				
ANR	4895151	ParameterType	const StatWrapperIntBase *		4895129	0					
ANR	4895152	Identifier	stat		4895129	1					
ANR	4895153	CFGEntryNode	ENTRY		4895129		True				
ANR	4895154	CFGExitNode	EXIT		4895129		True				
ANR	4895155	Symbol	stat		4895129						
ANR	4895156	Symbol	NULL		4895129						
ANR	4895157	Symbol	stat -> GetFnName		4895129						
ANR	4895158	Symbol	* stat		4895129						
ANR	4895159	Function	StatWrapper :: IsBufValid	288:0:6468:6603							
ANR	4895160	FunctionDef	StatWrapper :: IsBufValid (const StatWrapperIntBase * stat)		4895159	0					
ANR	4895161	CompoundStatement		290:0:6537:6603	4895159	0					
ANR	4895162	IfStatement	if ( ! stat )		4895159	0					
ANR	4895163	Condition	! stat	291:6:6545:6549	4895159	0	True				
ANR	4895164	UnaryOperationExpression	! stat		4895159	0					
ANR	4895165	UnaryOperator	!		4895159	0					
ANR	4895166	Identifier	stat		4895159	1					
ANR	4895167	CompoundStatement		2:14:15:15	4895159	1					
ANR	4895168	ReturnStatement	return false ;	292:2:6557:6569	4895159	0	True				
ANR	4895169	Identifier	false		4895159	0					
ANR	4895170	ReturnStatement	return stat -> IsBufValid ( ) ;	294:1:6575:6601	4895159	1	True				
ANR	4895171	CallExpression	stat -> IsBufValid ( )		4895159	0					
ANR	4895172	Callee	stat -> IsBufValid		4895159	0					
ANR	4895173	PtrMemberAccess	stat -> IsBufValid		4895159	0					
ANR	4895174	Identifier	stat		4895159	0					
ANR	4895175	Identifier	IsBufValid		4895159	1					
ANR	4895176	ArgumentList			4895159	1					
ANR	4895177	ReturnType	bool		4895159	1					
ANR	4895178	Identifier	StatWrapper :: IsBufValid		4895159	2					
ANR	4895179	ParameterList	const StatWrapperIntBase * stat		4895159	3					
ANR	4895180	Parameter	const StatWrapperIntBase * stat	289:25:6498:6527	4895159	0	True				
ANR	4895181	ParameterType	const StatWrapperIntBase *		4895159	0					
ANR	4895182	Identifier	stat		4895159	1					
ANR	4895183	CFGEntryNode	ENTRY		4895159		True				
ANR	4895184	CFGExitNode	EXIT		4895159		True				
ANR	4895185	Symbol	stat		4895159						
ANR	4895186	Symbol	false		4895159						
ANR	4895187	Symbol	stat -> IsBufValid		4895159						
ANR	4895188	Symbol	* stat		4895159						
ANR	4895189	Function	StatWrapper :: GetBuf	297:0:6606:6750							
ANR	4895190	FunctionDef	StatWrapper :: GetBuf (const StatWrapperIntBase * stat)		4895189	0					
ANR	4895191	CompoundStatement		299:0:6689:6750	4895189	0					
ANR	4895192	IfStatement	if ( ! stat )		4895189	0					
ANR	4895193	Condition	! stat	300:6:6697:6701	4895189	0	True				
ANR	4895194	UnaryOperationExpression	! stat		4895189	0					
ANR	4895195	UnaryOperator	!		4895189	0					
ANR	4895196	Identifier	stat		4895189	1					
ANR	4895197	CompoundStatement		2:14:15:15	4895189	1					
ANR	4895198	ReturnStatement	return NULL ;	301:2:6709:6720	4895189	0	True				
ANR	4895199	Identifier	NULL		4895189	0					
ANR	4895200	ReturnStatement	return stat -> GetBuf ( ) ;	303:1:6726:6748	4895189	1	True				
ANR	4895201	CallExpression	stat -> GetBuf ( )		4895189	0					
ANR	4895202	Callee	stat -> GetBuf		4895189	0					
ANR	4895203	PtrMemberAccess	stat -> GetBuf		4895189	0					
ANR	4895204	Identifier	stat		4895189	0					
ANR	4895205	Identifier	GetBuf		4895189	1					
ANR	4895206	ArgumentList			4895189	1					
ANR	4895207	ReturnType	const StatStructType *		4895189	1					
ANR	4895208	Identifier	StatWrapper :: GetBuf		4895189	2					
ANR	4895209	ParameterList	const StatWrapperIntBase * stat		4895189	3					
ANR	4895210	Parameter	const StatWrapperIntBase * stat	298:21:6650:6679	4895189	0	True				
ANR	4895211	ParameterType	const StatWrapperIntBase *		4895189	0					
ANR	4895212	Identifier	stat		4895189	1					
ANR	4895213	CFGEntryNode	ENTRY		4895189		True				
ANR	4895214	CFGExitNode	EXIT		4895189		True				
ANR	4895215	Symbol	stat		4895189						
ANR	4895216	Symbol	NULL		4895189						
ANR	4895217	Symbol	stat -> GetBuf		4895189						
ANR	4895218	Symbol	* stat		4895189						
ANR	4895219	Function	StatWrapper :: GetBuf	306:0:6753:6911							
ANR	4895220	FunctionDef	"StatWrapper :: GetBuf (const StatWrapperIntBase * stat , StatStructType & buf)"		4895219	0					
ANR	4895221	CompoundStatement		309:0:6845:6911	4895219	0					
ANR	4895222	IfStatement	if ( ! stat )		4895219	0					
ANR	4895223	Condition	! stat	310:6:6853:6857	4895219	0	True				
ANR	4895224	UnaryOperationExpression	! stat		4895219	0					
ANR	4895225	UnaryOperator	!		4895219	0					
ANR	4895226	Identifier	stat		4895219	1					
ANR	4895227	CompoundStatement		2:14:15:15	4895219	1					
ANR	4895228	ReturnStatement	return false ;	311:2:6865:6877	4895219	0	True				
ANR	4895229	Identifier	false		4895219	0					
ANR	4895230	ReturnStatement	return stat -> GetBuf ( buf ) ;	313:1:6883:6909	4895219	1	True				
ANR	4895231	CallExpression	stat -> GetBuf ( buf )		4895219	0					
ANR	4895232	Callee	stat -> GetBuf		4895219	0					
ANR	4895233	PtrMemberAccess	stat -> GetBuf		4895219	0					
ANR	4895234	Identifier	stat		4895219	0					
ANR	4895235	Identifier	GetBuf		4895219	1					
ANR	4895236	ArgumentList	buf		4895219	1					
ANR	4895237	Argument	buf		4895219	0					
ANR	4895238	Identifier	buf		4895219	0					
ANR	4895239	ReturnType	bool		4895219	1					
ANR	4895240	Identifier	StatWrapper :: GetBuf		4895219	2					
ANR	4895241	ParameterList	"const StatWrapperIntBase * stat , StatStructType & buf"		4895219	3					
ANR	4895242	Parameter	const StatWrapperIntBase * stat	307:21:6779:6808	4895219	0	True				
ANR	4895243	ParameterType	const StatWrapperIntBase *		4895219	0					
ANR	4895244	Identifier	stat		4895219	1					
ANR	4895245	Parameter	StatStructType & buf	308:6:6817:6835	4895219	1	True				
ANR	4895246	ParameterType	StatStructType &		4895219	0					
ANR	4895247	Identifier	buf		4895219	1					
ANR	4895248	CFGEntryNode	ENTRY		4895219		True				
ANR	4895249	CFGExitNode	EXIT		4895219		True				
ANR	4895250	Symbol	stat		4895219						
ANR	4895251	Symbol	buf		4895219						
ANR	4895252	Symbol	stat -> GetBuf		4895219						
ANR	4895253	Symbol	false		4895219						
ANR	4895254	Symbol	* stat		4895219						
ANR	4895255	Function	StatWrapper :: GetAccess	316:0:6914:7026							
ANR	4895256	FunctionDef	StatWrapper :: GetAccess (const StatWrapperIntBase * stat)		4895255	0					
ANR	4895257	CompoundStatement		318:0:6996:7026	4895255	0					
ANR	4895258	ReturnStatement	return stat -> GetAccess ( ) ;	319:1:6999:7024	4895255	0	True				
ANR	4895259	CallExpression	stat -> GetAccess ( )		4895255	0					
ANR	4895260	Callee	stat -> GetAccess		4895255	0					
ANR	4895261	PtrMemberAccess	stat -> GetAccess		4895255	0					
ANR	4895262	Identifier	stat		4895255	0					
ANR	4895263	Identifier	GetAccess		4895255	1					
ANR	4895264	ArgumentList			4895255	1					
ANR	4895265	ReturnType	const StatAccess &		4895255	1					
ANR	4895266	Identifier	StatWrapper :: GetAccess		4895255	2					
ANR	4895267	ParameterList	const StatWrapperIntBase * stat		4895255	3					
ANR	4895268	Parameter	const StatWrapperIntBase * stat	317:24:6957:6986	4895255	0	True				
ANR	4895269	ParameterType	const StatWrapperIntBase *		4895255	0					
ANR	4895270	Identifier	stat		4895255	1					
ANR	4895271	CFGEntryNode	ENTRY		4895255		True				
ANR	4895272	CFGExitNode	EXIT		4895255		True				
ANR	4895273	Symbol	stat -> GetAccess		4895255						
ANR	4895274	Symbol	stat		4895255						
ANR	4895275	Symbol	* stat		4895255						
ANR	4895276	Function	StatWrapper :: GetAccess	322:0:7029:7191							
ANR	4895277	FunctionDef	"StatWrapper :: GetAccess (const StatWrapperIntBase * stat , StatAccess & abuf)"		4895276	0					
ANR	4895278	CompoundStatement		325:0:7121:7191	4895276	0					
ANR	4895279	IfStatement	if ( ! stat )		4895276	0					
ANR	4895280	Condition	! stat	326:6:7129:7133	4895276	0	True				
ANR	4895281	UnaryOperationExpression	! stat		4895276	0					
ANR	4895282	UnaryOperator	!		4895276	0					
ANR	4895283	Identifier	stat		4895276	1					
ANR	4895284	CompoundStatement		2:14:15:15	4895276	1					
ANR	4895285	ReturnStatement	return false ;	327:2:7141:7153	4895276	0	True				
ANR	4895286	Identifier	false		4895276	0					
ANR	4895287	ReturnStatement	return stat -> GetAccess ( abuf ) ;	329:1:7159:7189	4895276	1	True				
ANR	4895288	CallExpression	stat -> GetAccess ( abuf )		4895276	0					
ANR	4895289	Callee	stat -> GetAccess		4895276	0					
ANR	4895290	PtrMemberAccess	stat -> GetAccess		4895276	0					
ANR	4895291	Identifier	stat		4895276	0					
ANR	4895292	Identifier	GetAccess		4895276	1					
ANR	4895293	ArgumentList	abuf		4895276	1					
ANR	4895294	Argument	abuf		4895276	0					
ANR	4895295	Identifier	abuf		4895276	0					
ANR	4895296	ReturnType	bool		4895276	1					
ANR	4895297	Identifier	StatWrapper :: GetAccess		4895276	2					
ANR	4895298	ParameterList	"const StatWrapperIntBase * stat , StatAccess & abuf"		4895276	3					
ANR	4895299	Parameter	const StatWrapperIntBase * stat	323:24:7058:7087	4895276	0	True				
ANR	4895300	ParameterType	const StatWrapperIntBase *		4895276	0					
ANR	4895301	Identifier	stat		4895276	1					
ANR	4895302	Parameter	StatAccess & abuf	324:6:7096:7111	4895276	1	True				
ANR	4895303	ParameterType	StatAccess &		4895276	0					
ANR	4895304	Identifier	abuf		4895276	1					
ANR	4895305	CFGEntryNode	ENTRY		4895276		True				
ANR	4895306	CFGExitNode	EXIT		4895276		True				
ANR	4895307	Symbol	stat -> GetAccess		4895276						
ANR	4895308	Symbol	stat		4895276						
ANR	4895309	Symbol	false		4895276						
ANR	4895310	Symbol	* stat		4895276						
ANR	4895311	Symbol	abuf		4895276						
ANR	4895312	Function	StatWrapper :: Stat	334:0:7234:7472							
ANR	4895313	FunctionDef	"StatWrapper :: Stat (StatOpType which , bool force)"		4895312	0					
ANR	4895314	CompoundStatement		336:0:7288:7472	4895312	0					
ANR	4895315	IdentifierDeclStatement	StatWrapperOp * op = m_ops [ which ] ;	337:1:7291:7323	4895312	0	True				
ANR	4895316	IdentifierDecl	* op = m_ops [ which ]		4895312	0					
ANR	4895317	IdentifierDeclType	StatWrapperOp *		4895312	0					
ANR	4895318	Identifier	op		4895312	1					
ANR	4895319	AssignmentExpression	* op = m_ops [ which ]		4895312	2		=			
ANR	4895320	Identifier	op		4895312	0					
ANR	4895321	ArrayIndexing	m_ops [ which ]		4895312	1					
ANR	4895322	Identifier	m_ops		4895312	0					
ANR	4895323	Identifier	which		4895312	1					
ANR	4895324	ExpressionStatement	m_last_op = op	339:1:7327:7341	4895312	1	True				
ANR	4895325	AssignmentExpression	m_last_op = op		4895312	0		=			
ANR	4895326	Identifier	m_last_op		4895312	0					
ANR	4895327	Identifier	op		4895312	1					
ANR	4895328	ExpressionStatement	m_last_which = which	340:1:7344:7364	4895312	2	True				
ANR	4895329	AssignmentExpression	m_last_which = which		4895312	0		=			
ANR	4895330	Identifier	m_last_which		4895312	0					
ANR	4895331	Identifier	which		4895312	1					
ANR	4895332	ReturnStatement	return op -> StatAll ( force ) ;	344:1:7443:7470	4895312	3	True				
ANR	4895333	CallExpression	op -> StatAll ( force )		4895312	0					
ANR	4895334	Callee	op -> StatAll		4895312	0					
ANR	4895335	PtrMemberAccess	op -> StatAll		4895312	0					
ANR	4895336	Identifier	op		4895312	0					
ANR	4895337	Identifier	StatAll		4895312	1					
ANR	4895338	ArgumentList	force		4895312	1					
ANR	4895339	Argument	force		4895312	0					
ANR	4895340	Identifier	force		4895312	0					
ANR	4895341	ReturnType	int		4895312	1					
ANR	4895342	Identifier	StatWrapper :: Stat		4895312	2					
ANR	4895343	ParameterList	"StatOpType which , bool force"		4895312	3					
ANR	4895344	Parameter	StatOpType which	335:19:7257:7272	4895312	0	True				
ANR	4895345	ParameterType	StatOpType		4895312	0					
ANR	4895346	Identifier	which		4895312	1					
ANR	4895347	Parameter	bool force	335:37:7275:7284	4895312	1	True				
ANR	4895348	ParameterType	bool		4895312	0					
ANR	4895349	Identifier	force		4895312	1					
ANR	4895350	CFGEntryNode	ENTRY		4895312		True				
ANR	4895351	CFGExitNode	EXIT		4895312		True				
ANR	4895352	Symbol	which		4895312						
ANR	4895353	Symbol	op		4895312						
ANR	4895354	Symbol	* op		4895312						
ANR	4895355	Symbol	* m_ops		4895312						
ANR	4895356	Symbol	* which		4895312						
ANR	4895357	Symbol	m_last_which		4895312						
ANR	4895358	Symbol	force		4895312						
ANR	4895359	Symbol	m_ops		4895312						
ANR	4895360	Symbol	m_last_op		4895312						
ANR	4895361	Symbol	op -> StatAll		4895312						
ANR	4895362	Function	StatWrapper :: Stat	348:0:7529:7681							
ANR	4895363	FunctionDef	"StatWrapper :: Stat (const MyString & path , StatOpType which , bool force)"		4895362	0					
ANR	4895364	CompoundStatement		350:0:7605:7681	4895362	0					
ANR	4895365	IfStatement	if ( ! SetPath ( path ) )		4895362	0					
ANR	4895366	Condition	! SetPath ( path )	351:6:7613:7628	4895362	0	True				
ANR	4895367	UnaryOperationExpression	! SetPath ( path )		4895362	0					
ANR	4895368	UnaryOperator	!		4895362	0					
ANR	4895369	CallExpression	SetPath ( path )		4895362	1					
ANR	4895370	Callee	SetPath		4895362	0					
ANR	4895371	Identifier	SetPath		4895362	0					
ANR	4895372	ArgumentList	path		4895362	1					
ANR	4895373	Argument	path		4895362	0					
ANR	4895374	Identifier	path		4895362	0					
ANR	4895375	CompoundStatement		2:25:26:26	4895362	1					
ANR	4895376	ReturnStatement	return - 1 ;	352:2:7636:7645	4895362	0	True				
ANR	4895377	UnaryOperationExpression	- 1		4895362	0					
ANR	4895378	UnaryOperator	-		4895362	0					
ANR	4895379	PrimaryExpression	1		4895362	1					
ANR	4895380	ReturnStatement	"return Stat ( which , force ) ;"	355:1:7652:7679	4895362	1	True				
ANR	4895381	CallExpression	"Stat ( which , force )"		4895362	0					
ANR	4895382	Callee	Stat		4895362	0					
ANR	4895383	Identifier	Stat		4895362	0					
ANR	4895384	ArgumentList	which		4895362	1					
ANR	4895385	Argument	which		4895362	0					
ANR	4895386	Identifier	which		4895362	0					
ANR	4895387	Argument	force		4895362	1					
ANR	4895388	Identifier	force		4895362	0					
ANR	4895389	ReturnType	int		4895362	1					
ANR	4895390	Identifier	StatWrapper :: Stat		4895362	2					
ANR	4895391	ParameterList	"const MyString & path , StatOpType which , bool force"		4895362	3					
ANR	4895392	Parameter	const MyString & path	349:19:7552:7571	4895362	0	True				
ANR	4895393	ParameterType	const MyString &		4895362	0					
ANR	4895394	Identifier	path		4895362	1					
ANR	4895395	Parameter	StatOpType which	349:41:7574:7589	4895362	1	True				
ANR	4895396	ParameterType	StatOpType		4895362	0					
ANR	4895397	Identifier	which		4895362	1					
ANR	4895398	Parameter	bool force	349:59:7592:7601	4895362	2	True				
ANR	4895399	ParameterType	bool		4895362	0					
ANR	4895400	Identifier	force		4895362	1					
ANR	4895401	CFGEntryNode	ENTRY		4895362		True				
ANR	4895402	CFGExitNode	EXIT		4895362		True				
ANR	4895403	Symbol	which		4895362						
ANR	4895404	Symbol	SetPath		4895362						
ANR	4895405	Symbol	path		4895362						
ANR	4895406	Symbol	Stat		4895362						
ANR	4895407	Symbol	force		4895362						
ANR	4895408	Function	StatWrapper :: Stat	359:0:7738:7886							
ANR	4895409	FunctionDef	"StatWrapper :: Stat (const char * path , StatOpType which , bool force)"		4895408	0					
ANR	4895410	CompoundStatement		361:0:7810:7886	4895408	0					
ANR	4895411	IfStatement	if ( ! SetPath ( path ) )		4895408	0					
ANR	4895412	Condition	! SetPath ( path )	362:6:7818:7833	4895408	0	True				
ANR	4895413	UnaryOperationExpression	! SetPath ( path )		4895408	0					
ANR	4895414	UnaryOperator	!		4895408	0					
ANR	4895415	CallExpression	SetPath ( path )		4895408	1					
ANR	4895416	Callee	SetPath		4895408	0					
ANR	4895417	Identifier	SetPath		4895408	0					
ANR	4895418	ArgumentList	path		4895408	1					
ANR	4895419	Argument	path		4895408	0					
ANR	4895420	Identifier	path		4895408	0					
ANR	4895421	CompoundStatement		2:25:26:26	4895408	1					
ANR	4895422	ReturnStatement	return - 1 ;	363:2:7841:7850	4895408	0	True				
ANR	4895423	UnaryOperationExpression	- 1		4895408	0					
ANR	4895424	UnaryOperator	-		4895408	0					
ANR	4895425	PrimaryExpression	1		4895408	1					
ANR	4895426	ReturnStatement	"return Stat ( which , force ) ;"	366:1:7857:7884	4895408	1	True				
ANR	4895427	CallExpression	"Stat ( which , force )"		4895408	0					
ANR	4895428	Callee	Stat		4895408	0					
ANR	4895429	Identifier	Stat		4895408	0					
ANR	4895430	ArgumentList	which		4895408	1					
ANR	4895431	Argument	which		4895408	0					
ANR	4895432	Identifier	which		4895408	0					
ANR	4895433	Argument	force		4895408	1					
ANR	4895434	Identifier	force		4895408	0					
ANR	4895435	ReturnType	int		4895408	1					
ANR	4895436	Identifier	StatWrapper :: Stat		4895408	2					
ANR	4895437	ParameterList	"const char * path , StatOpType which , bool force"		4895408	3					
ANR	4895438	Parameter	const char * path	360:19:7761:7776	4895408	0	True				
ANR	4895439	ParameterType	const char *		4895408	0					
ANR	4895440	Identifier	path		4895408	1					
ANR	4895441	Parameter	StatOpType which	360:37:7779:7794	4895408	1	True				
ANR	4895442	ParameterType	StatOpType		4895408	0					
ANR	4895443	Identifier	which		4895408	1					
ANR	4895444	Parameter	bool force	360:55:7797:7806	4895408	2	True				
ANR	4895445	ParameterType	bool		4895408	0					
ANR	4895446	Identifier	force		4895408	1					
ANR	4895447	CFGEntryNode	ENTRY		4895408		True				
ANR	4895448	CFGExitNode	EXIT		4895408		True				
ANR	4895449	Symbol	which		4895408						
ANR	4895450	Symbol	SetPath		4895408						
ANR	4895451	Symbol	path		4895408						
ANR	4895452	Symbol	Stat		4895408						
ANR	4895453	Symbol	force		4895408						
ANR	4895454	Function	StatWrapper :: Stat	370:0:7911:8034							
ANR	4895455	FunctionDef	"StatWrapper :: Stat (int fd , bool force)"		4895454	0					
ANR	4895456	CompoundStatement		372:0:7955:8034	4895454	0					
ANR	4895457	IfStatement	if ( ! SetFD ( fd ) )		4895454	0					
ANR	4895458	Condition	! SetFD ( fd )	373:6:7963:7974	4895454	0	True				
ANR	4895459	UnaryOperationExpression	! SetFD ( fd )		4895454	0					
ANR	4895460	UnaryOperator	!		4895454	0					
ANR	4895461	CallExpression	SetFD ( fd )		4895454	1					
ANR	4895462	Callee	SetFD		4895454	0					
ANR	4895463	Identifier	SetFD		4895454	0					
ANR	4895464	ArgumentList	fd		4895454	1					
ANR	4895465	Argument	fd		4895454	0					
ANR	4895466	Identifier	fd		4895454	0					
ANR	4895467	CompoundStatement		2:21:22:22	4895454	1					
ANR	4895468	ReturnStatement	return - 1 ;	374:2:7982:7991	4895454	0	True				
ANR	4895469	UnaryOperationExpression	- 1		4895454	0					
ANR	4895470	UnaryOperator	-		4895454	0					
ANR	4895471	PrimaryExpression	1		4895454	1					
ANR	4895472	ReturnStatement	"return Stat ( STATOP_FSTAT , force ) ;"	377:1:7998:8032	4895454	1	True				
ANR	4895473	CallExpression	"Stat ( STATOP_FSTAT , force )"		4895454	0					
ANR	4895474	Callee	Stat		4895454	0					
ANR	4895475	Identifier	Stat		4895454	0					
ANR	4895476	ArgumentList	STATOP_FSTAT		4895454	1					
ANR	4895477	Argument	STATOP_FSTAT		4895454	0					
ANR	4895478	Identifier	STATOP_FSTAT		4895454	0					
ANR	4895479	Argument	force		4895454	1					
ANR	4895480	Identifier	force		4895454	0					
ANR	4895481	ReturnType	int		4895454	1					
ANR	4895482	Identifier	StatWrapper :: Stat		4895454	2					
ANR	4895483	ParameterList	"int fd , bool force"		4895454	3					
ANR	4895484	Parameter	int fd	371:19:7934:7939	4895454	0	True				
ANR	4895485	ParameterType	int		4895454	0					
ANR	4895486	Identifier	fd		4895454	1					
ANR	4895487	Parameter	bool force	371:27:7942:7951	4895454	1	True				
ANR	4895488	ParameterType	bool		4895454	0					
ANR	4895489	Identifier	force		4895454	1					
ANR	4895490	CFGEntryNode	ENTRY		4895454		True				
ANR	4895491	CFGExitNode	EXIT		4895454		True				
ANR	4895492	Symbol	SetFD		4895454						
ANR	4895493	Symbol	Stat		4895454						
ANR	4895494	Symbol	force		4895454						
ANR	4895495	Symbol	STATOP_FSTAT		4895454						
ANR	4895496	Symbol	fd		4895454						
ANR	4895497	Function	StatWrapper :: Retry	381:0:8065:8134							
ANR	4895498	FunctionDef	StatWrapper :: Retry ()		4895497	0					
ANR	4895499	CompoundStatement		383:0:8096:8134	4895497	0					
ANR	4895500	ReturnStatement	return m_last_op -> StatAll ( true ) ;	384:1:8099:8132	4895497	0	True				
ANR	4895501	CallExpression	m_last_op -> StatAll ( true )		4895497	0					
ANR	4895502	Callee	m_last_op -> StatAll		4895497	0					
ANR	4895503	PtrMemberAccess	m_last_op -> StatAll		4895497	0					
ANR	4895504	Identifier	m_last_op		4895497	0					
ANR	4895505	Identifier	StatAll		4895497	1					
ANR	4895506	ArgumentList	true		4895497	1					
ANR	4895507	Argument	true		4895497	0					
ANR	4895508	Identifier	true		4895497	0					
ANR	4895509	ReturnType	int		4895497	1					
ANR	4895510	Identifier	StatWrapper :: Retry		4895497	2					
ANR	4895511	ParameterList			4895497	3					
ANR	4895512	CFGEntryNode	ENTRY		4895497		True				
ANR	4895513	CFGExitNode	EXIT		4895497		True				
ANR	4895514	Symbol	true		4895497						
ANR	4895515	Symbol	m_last_op -> StatAll		4895497						
ANR	4895516	Symbol	* m_last_op		4895497						
ANR	4895517	Symbol	m_last_op		4895497						
ANR	4895518	Function	StatWrapper :: GetStat	388:0:8163:8409							
ANR	4895519	FunctionDef	StatWrapper :: GetStat (StatOpType which)		4895518	0					
ANR	4895520	CompoundStatement		390:0:8231:8409	4895518	0					
ANR	4895521	IfStatement	if ( STATOP_LAST == which )		4895518	0					
ANR	4895522	Condition	STATOP_LAST == which	391:6:8239:8258	4895518	0	True				
ANR	4895523	EqualityExpression	STATOP_LAST == which		4895518	0		==			
ANR	4895524	Identifier	STATOP_LAST		4895518	0					
ANR	4895525	Identifier	which		4895518	1					
ANR	4895526	CompoundStatement		2:29:30:30	4895518	1					
ANR	4895527	ExpressionStatement	which = m_last_which	392:2:8266:8286	4895518	0	True				
ANR	4895528	AssignmentExpression	which = m_last_which		4895518	0		=			
ANR	4895529	Identifier	which		4895518	0					
ANR	4895530	Identifier	m_last_which		4895518	1					
ANR	4895531	IfStatement	if ( ( which < STATOP_MIN ) || ( which > STATOP_MAX ) )		4895518	1					
ANR	4895532	Condition	( which < STATOP_MIN ) || ( which > STATOP_MAX )	394:6:8297:8340	4895518	0	True				
ANR	4895533	OrExpression	( which < STATOP_MIN ) || ( which > STATOP_MAX )		4895518	0		||			
ANR	4895534	RelationalExpression	which < STATOP_MIN		4895518	0		<			
ANR	4895535	Identifier	which		4895518	0					
ANR	4895536	Identifier	STATOP_MIN		4895518	1					
ANR	4895537	RelationalExpression	which > STATOP_MAX		4895518	1		>			
ANR	4895538	Identifier	which		4895518	0					
ANR	4895539	Identifier	STATOP_MAX		4895518	1					
ANR	4895540	CompoundStatement		5:53:112:112	4895518	1					
ANR	4895541	ExpressionStatement	which = STATOP_NONE	395:2:8348:8367	4895518	0	True				
ANR	4895542	AssignmentExpression	which = STATOP_NONE		4895518	0		=			
ANR	4895543	Identifier	which		4895518	0					
ANR	4895544	Identifier	STATOP_NONE		4895518	1					
ANR	4895545	ReturnStatement	return m_ops [ which ] -> getPrimary ( ) ;	397:1:8373:8407	4895518	2	True				
ANR	4895546	CallExpression	m_ops [ which ] -> getPrimary ( )		4895518	0					
ANR	4895547	Callee	m_ops [ which ] -> getPrimary		4895518	0					
ANR	4895548	PtrMemberAccess	m_ops [ which ] -> getPrimary		4895518	0					
ANR	4895549	ArrayIndexing	m_ops [ which ]		4895518	0					
ANR	4895550	Identifier	m_ops		4895518	0					
ANR	4895551	Identifier	which		4895518	1					
ANR	4895552	Identifier	getPrimary		4895518	1					
ANR	4895553	ArgumentList			4895518	1					
ANR	4895554	ReturnType	StatWrapperIntBase *		4895518	1					
ANR	4895555	Identifier	StatWrapper :: GetStat		4895518	2					
ANR	4895556	ParameterList	StatOpType which		4895518	3					
ANR	4895557	Parameter	StatOpType which	389:22:8206:8221	4895518	0	True				
ANR	4895558	ParameterType	StatOpType		4895518	0					
ANR	4895559	Identifier	which		4895518	1					
ANR	4895560	CFGEntryNode	ENTRY		4895518		True				
ANR	4895561	CFGExitNode	EXIT		4895518		True				
ANR	4895562	Symbol	which		4895518						
ANR	4895563	Symbol	STATOP_LAST		4895518						
ANR	4895564	Symbol	STATOP_NONE		4895518						
ANR	4895565	Symbol	STATOP_MAX		4895518						
ANR	4895566	Symbol	STATOP_MIN		4895518						
ANR	4895567	Symbol	* m_ops		4895518						
ANR	4895568	Symbol	m_last_which		4895518						
ANR	4895569	Symbol	* which		4895518						
ANR	4895570	Symbol	* * m_ops		4895518						
ANR	4895571	Symbol	m_ops		4895518						
ANR	4895572	Symbol	* * which		4895518						
ANR	4895573	Symbol	m_ops [ which ] -> getPrimary		4895518						
