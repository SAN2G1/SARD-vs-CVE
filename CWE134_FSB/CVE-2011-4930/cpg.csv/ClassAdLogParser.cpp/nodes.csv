command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	153554	File	data/converged/CVE-2011-4930_htcondor/ClassAdLogParser.cpp								
ANR	153555	Function	ClassAdLogParser :: ClassAdLogParser	55:0:1848:1947							
ANR	153556	FunctionDef	ClassAdLogParser :: ClassAdLogParser ()		153555	0					
ANR	153557	CompoundStatement		56:0:1885:1947	153555	0					
ANR	153558	ExpressionStatement	log_fp = NULL	57:1:1888:1901	153555	0	True				
ANR	153559	AssignmentExpression	log_fp = NULL		153555	0		=			
ANR	153560	Identifier	log_fp		153555	0					
ANR	153561	Identifier	NULL		153555	1					
ANR	153562	ExpressionStatement	nextOffset = 0	58:1:1904:1918	153555	1	True				
ANR	153563	AssignmentExpression	nextOffset = 0		153555	0		=			
ANR	153564	Identifier	nextOffset		153555	0					
ANR	153565	PrimaryExpression	0		153555	1					
ANR	153566	ExpressionStatement	job_queue_name [ 0 ] = '\\0'	59:1:1921:1945	153555	2	True				
ANR	153567	AssignmentExpression	job_queue_name [ 0 ] = '\\0'		153555	0		=			
ANR	153568	ArrayIndexing	job_queue_name [ 0 ]		153555	0					
ANR	153569	Identifier	job_queue_name		153555	0					
ANR	153570	PrimaryExpression	0		153555	1					
ANR	153571	PrimaryExpression	'\\0'		153555	1					
ANR	153572	Identifier	ClassAdLogParser :: ClassAdLogParser		153555	1					
ANR	153573	ParameterList			153555	2					
ANR	153574	CFGEntryNode	ENTRY		153555		True				
ANR	153575	CFGExitNode	EXIT		153555		True				
ANR	153576	Symbol	log_fp		153555						
ANR	153577	Symbol	NULL		153555						
ANR	153578	Symbol	job_queue_name		153555						
ANR	153579	Symbol	* job_queue_name		153555						
ANR	153580	Symbol	nextOffset		153555						
ANR	153581	Function	ClassAdLogParser :: ~ClassAdLogParser	62:0:1950:2023							
ANR	153582	FunctionDef	ClassAdLogParser :: ~ClassAdLogParser ()		153581	0					
ANR	153583	CompoundStatement		63:0:1988:2023	153581	0					
ANR	153584	ExpressionStatement	log_fp = NULL	64:1:1991:2004	153581	0	True				
ANR	153585	AssignmentExpression	log_fp = NULL		153581	0		=			
ANR	153586	Identifier	log_fp		153581	0					
ANR	153587	Identifier	NULL		153581	1					
ANR	153588	ExpressionStatement	nextOffset = 0	65:1:2007:2021	153581	1	True				
ANR	153589	AssignmentExpression	nextOffset = 0		153581	0		=			
ANR	153590	Identifier	nextOffset		153581	0					
ANR	153591	PrimaryExpression	0		153581	1					
ANR	153592	Identifier	ClassAdLogParser :: ~ClassAdLogParser		153581	1					
ANR	153593	ParameterList			153581	2					
ANR	153594	CFGEntryNode	ENTRY		153581		True				
ANR	153595	CFGExitNode	EXIT		153581		True				
ANR	153596	Symbol	log_fp		153581						
ANR	153597	Symbol	NULL		153581						
ANR	153598	Symbol	nextOffset		153581						
ANR	153599	Function	ClassAdLogParser :: getFileDescriptor	69:0:2027:2095							
ANR	153600	FunctionDef	ClassAdLogParser :: getFileDescriptor ()		153599	0					
ANR	153601	CompoundStatement		71:0:2069:2095	153599	0					
ANR	153602	ReturnStatement	return fileno ( log_fp ) ;	72:1:2072:2093	153599	0	True				
ANR	153603	CallExpression	fileno ( log_fp )		153599	0					
ANR	153604	Callee	fileno		153599	0					
ANR	153605	Identifier	fileno		153599	0					
ANR	153606	ArgumentList	log_fp		153599	1					
ANR	153607	Argument	log_fp		153599	0					
ANR	153608	Identifier	log_fp		153599	0					
ANR	153609	ReturnType	int		153599	1					
ANR	153610	Identifier	ClassAdLogParser :: getFileDescriptor		153599	2					
ANR	153611	ParameterList			153599	3					
ANR	153612	CFGEntryNode	ENTRY		153599		True				
ANR	153613	CFGExitNode	EXIT		153599		True				
ANR	153614	Symbol	log_fp		153599						
ANR	153615	Symbol	fileno		153599						
ANR	153616	Function	ClassAdLogParser :: setFileDescriptor	75:0:2098:2178							
ANR	153617	FunctionDef	ClassAdLogParser :: setFileDescriptor (int fd)		153616	0					
ANR	153618	CompoundStatement		77:0:2147:2178	153616	0					
ANR	153619	ExpressionStatement	"log_fp = fdopen ( fd , ""r"" )"	78:4:2153:2176	153616	0	True				
ANR	153620	AssignmentExpression	"log_fp = fdopen ( fd , ""r"" )"		153616	0		=			
ANR	153621	Identifier	log_fp		153616	0					
ANR	153622	CallExpression	"fdopen ( fd , ""r"" )"		153616	1					
ANR	153623	Callee	fdopen		153616	0					
ANR	153624	Identifier	fdopen		153616	0					
ANR	153625	ArgumentList	fd		153616	1					
ANR	153626	Argument	fd		153616	0					
ANR	153627	Identifier	fd		153616	0					
ANR	153628	Argument	"""r"""		153616	1					
ANR	153629	PrimaryExpression	"""r"""		153616	0					
ANR	153630	ReturnType	void		153616	1					
ANR	153631	Identifier	ClassAdLogParser :: setFileDescriptor		153616	2					
ANR	153632	ParameterList	int fd		153616	3					
ANR	153633	Parameter	int fd	76:36:2139:2144	153616	0	True				
ANR	153634	ParameterType	int		153616	0					
ANR	153635	Identifier	fd		153616	1					
ANR	153636	CFGEntryNode	ENTRY		153616		True				
ANR	153637	CFGExitNode	EXIT		153616		True				
ANR	153638	Symbol	log_fp		153616						
ANR	153639	Symbol	fdopen		153616						
ANR	153640	Symbol	fd		153616						
ANR	153641	Function	ClassAdLogParser :: getFilePointer	81:0:2181:2242							
ANR	153642	FunctionDef	ClassAdLogParser :: getFilePointer ()		153641	0					
ANR	153643	CompoundStatement		83:0:2224:2242	153641	0					
ANR	153644	ReturnStatement	return log_fp ;	84:1:2227:2240	153641	0	True				
ANR	153645	Identifier	log_fp		153641	0					
ANR	153646	ReturnType	FILE *		153641	1					
ANR	153647	Identifier	ClassAdLogParser :: getFilePointer		153641	2					
ANR	153648	ParameterList			153641	3					
ANR	153649	CFGEntryNode	ENTRY		153641		True				
ANR	153650	CFGExitNode	EXIT		153641		True				
ANR	153651	Symbol	log_fp		153641						
ANR	153652	Function	ClassAdLogParser :: setFilePointer	87:0:2245:2309							
ANR	153653	FunctionDef	ClassAdLogParser :: setFilePointer (FILE * fp)		153652	0					
ANR	153654	CompoundStatement		89:0:2293:2309	153652	0					
ANR	153655	ExpressionStatement	log_fp = fp	90:1:2296:2307	153652	0	True				
ANR	153656	AssignmentExpression	log_fp = fp		153652	0		=			
ANR	153657	Identifier	log_fp		153652	0					
ANR	153658	Identifier	fp		153652	1					
ANR	153659	ReturnType	void		153652	1					
ANR	153660	Identifier	ClassAdLogParser :: setFilePointer		153652	2					
ANR	153661	ParameterList	FILE * fp		153652	3					
ANR	153662	Parameter	FILE * fp	88:33:2283:2290	153652	0	True				
ANR	153663	ParameterType	FILE *		153652	0					
ANR	153664	Identifier	fp		153652	1					
ANR	153665	CFGEntryNode	ENTRY		153652		True				
ANR	153666	CFGExitNode	EXIT		153652		True				
ANR	153667	Symbol	log_fp		153652						
ANR	153668	Symbol	fp		153652						
ANR	153669	Function	ClassAdLogParser :: getLastCALogEntry	93:0:2312:2394							
ANR	153670	FunctionDef	ClassAdLogParser :: getLastCALogEntry ()		153669	0					
ANR	153671	CompoundStatement		95:0:2367:2394	153669	0					
ANR	153672	ReturnStatement	return & lastCALogEntry ;	96:1:2370:2392	153669	0	True				
ANR	153673	UnaryOperationExpression	& lastCALogEntry		153669	0					
ANR	153674	UnaryOperator	&		153669	0					
ANR	153675	Identifier	lastCALogEntry		153669	1					
ANR	153676	ReturnType	ClassAdLogEntry *		153669	1					
ANR	153677	Identifier	ClassAdLogParser :: getLastCALogEntry		153669	2					
ANR	153678	ParameterList			153669	3					
ANR	153679	CFGEntryNode	ENTRY		153669		True				
ANR	153680	CFGExitNode	EXIT		153669		True				
ANR	153681	Symbol	& lastCALogEntry		153669						
ANR	153682	Function	ClassAdLogParser :: getCurCALogEntry	99:0:2397:2477							
ANR	153683	FunctionDef	ClassAdLogParser :: getCurCALogEntry ()		153682	0					
ANR	153684	CompoundStatement		101:0:2451:2477	153682	0					
ANR	153685	ReturnStatement	return & curCALogEntry ;	102:1:2454:2475	153682	0	True				
ANR	153686	UnaryOperationExpression	& curCALogEntry		153682	0					
ANR	153687	UnaryOperator	&		153682	0					
ANR	153688	Identifier	curCALogEntry		153682	1					
ANR	153689	ReturnType	ClassAdLogEntry *		153682	1					
ANR	153690	Identifier	ClassAdLogParser :: getCurCALogEntry		153682	2					
ANR	153691	ParameterList			153682	3					
ANR	153692	CFGEntryNode	ENTRY		153682		True				
ANR	153693	CFGExitNode	EXIT		153682		True				
ANR	153694	Symbol	& curCALogEntry		153682						
ANR	153695	Function	ClassAdLogParser :: setNextOffset	105:0:2480:2773							
ANR	153696	FunctionDef	ClassAdLogParser :: setNextOffset (long offset)		153695	0					
ANR	153697	CompoundStatement		107:0:2530:2773	153695	0					
ANR	153698	IfStatement	if ( offset == IMPOSSIBLE_OFFSET )		153695	0					
ANR	153699	Condition	offset == IMPOSSIBLE_OFFSET	110:5:2661:2687	153695	0	True				
ANR	153700	EqualityExpression	offset == IMPOSSIBLE_OFFSET		153695	0		==			
ANR	153701	Identifier	offset		153695	0					
ANR	153702	Identifier	IMPOSSIBLE_OFFSET		153695	1					
ANR	153703	CompoundStatement		4:34:159:159	153695	1					
ANR	153704	ExpressionStatement	nextOffset = curCALogEntry . next_offset	111:2:2696:2734	153695	0	True				
ANR	153705	AssignmentExpression	nextOffset = curCALogEntry . next_offset		153695	0		=			
ANR	153706	Identifier	nextOffset		153695	0					
ANR	153707	MemberAccess	curCALogEntry . next_offset		153695	1					
ANR	153708	Identifier	curCALogEntry		153695	0					
ANR	153709	Identifier	next_offset		153695	1					
ANR	153710	ElseStatement	else		153695	0					
ANR	153711	CompoundStatement		7:6:214:214	153695	0					
ANR	153712	ExpressionStatement	nextOffset = offset	114:2:2749:2768	153695	0	True				
ANR	153713	AssignmentExpression	nextOffset = offset		153695	0		=			
ANR	153714	Identifier	nextOffset		153695	0					
ANR	153715	Identifier	offset		153695	1					
ANR	153716	ReturnType	void		153695	1					
ANR	153717	Identifier	ClassAdLogParser :: setNextOffset		153695	2					
ANR	153718	ParameterList	long offset		153695	3					
ANR	153719	Parameter	long offset	106:32:2517:2527	153695	0	True				
ANR	153720	ParameterType	long		153695	0					
ANR	153721	Identifier	offset		153695	1					
ANR	153722	CFGEntryNode	ENTRY		153695		True				
ANR	153723	CFGExitNode	EXIT		153695		True				
ANR	153724	Symbol	curCALogEntry		153695						
ANR	153725	Symbol	curCALogEntry . next_offset		153695						
ANR	153726	Symbol	offset		153695						
ANR	153727	Symbol	IMPOSSIBLE_OFFSET		153695						
ANR	153728	Symbol	nextOffset		153695						
ANR	153729	Function	ClassAdLogParser :: openFile	118:0:2776:3079							
ANR	153730	FunctionDef	ClassAdLogParser :: openFile ()		153729	0					
ANR	153731	CompoundStatement		119:29:2820:3079	153729	0					
ANR	153732	ExpressionStatement	"log_fp = fopen ( job_queue_name , ""r"" )"	122:4:2878:2913	153729	0	True				
ANR	153733	AssignmentExpression	"log_fp = fopen ( job_queue_name , ""r"" )"		153729	0		=			
ANR	153734	Identifier	log_fp		153729	0					
ANR	153735	CallExpression	"fopen ( job_queue_name , ""r"" )"		153729	1					
ANR	153736	Callee	fopen		153729	0					
ANR	153737	Identifier	fopen		153729	0					
ANR	153738	ArgumentList	job_queue_name		153729	1					
ANR	153739	Argument	job_queue_name		153729	0					
ANR	153740	Identifier	job_queue_name		153729	0					
ANR	153741	Argument	"""r"""		153729	1					
ANR	153742	PrimaryExpression	"""r"""		153729	0					
ANR	153743	IfStatement	if ( log_fp == NULL )		153729	1					
ANR	153744	Condition	log_fp == NULL	127:8:2998:3011	153729	0	True				
ANR	153745	EqualityExpression	log_fp == NULL		153729	0		==			
ANR	153746	Identifier	log_fp		153729	0					
ANR	153747	Identifier	NULL		153729	1					
ANR	153748	CompoundStatement		9:24:193:193	153729	1					
ANR	153749	ReturnStatement	return FILE_OPEN_ERROR ;	128:8:3024:3046	153729	0	True				
ANR	153750	Identifier	FILE_OPEN_ERROR		153729	0					
ANR	153751	ReturnStatement	return FILE_OP_SUCCESS ;	130:1:3055:3077	153729	2	True				
ANR	153752	Identifier	FILE_OP_SUCCESS		153729	0					
ANR	153753	ReturnType	FileOpErrCode		153729	1					
ANR	153754	Identifier	ClassAdLogParser :: openFile		153729	2					
ANR	153755	ParameterList			153729	3					
ANR	153756	CFGEntryNode	ENTRY		153729		True				
ANR	153757	CFGExitNode	EXIT		153729		True				
ANR	153758	Symbol	FILE_OPEN_ERROR		153729						
ANR	153759	Symbol	fopen		153729						
ANR	153760	Symbol	log_fp		153729						
ANR	153761	Symbol	NULL		153729						
ANR	153762	Symbol	job_queue_name		153729						
ANR	153763	Symbol	FILE_OP_SUCCESS		153729						
ANR	153764	Function	ClassAdLogParser :: closeFile	133:0:3082:3217							
ANR	153765	FunctionDef	ClassAdLogParser :: closeFile ()		153764	0					
ANR	153766	CompoundStatement		134:30:3127:3217	153764	0					
ANR	153767	IfStatement	if ( log_fp != NULL )		153764	0					
ANR	153768	Condition	log_fp != NULL	135:5:3134:3147	153764	0	True				
ANR	153769	EqualityExpression	log_fp != NULL		153764	0		!=			
ANR	153770	Identifier	log_fp		153764	0					
ANR	153771	Identifier	NULL		153764	1					
ANR	153772	CompoundStatement		2:21:22:22	153764	1					
ANR	153773	ExpressionStatement	fclose ( log_fp )	136:3:3155:3169	153764	0	True				
ANR	153774	CallExpression	fclose ( log_fp )		153764	0					
ANR	153775	Callee	fclose		153764	0					
ANR	153776	Identifier	fclose		153764	0					
ANR	153777	ArgumentList	log_fp		153764	1					
ANR	153778	Argument	log_fp		153764	0					
ANR	153779	Identifier	log_fp		153764	0					
ANR	153780	ExpressionStatement	log_fp = NULL	137:3:3174:3187	153764	1	True				
ANR	153781	AssignmentExpression	log_fp = NULL		153764	0		=			
ANR	153782	Identifier	log_fp		153764	0					
ANR	153783	Identifier	NULL		153764	1					
ANR	153784	ReturnStatement	return FILE_OP_SUCCESS ;	139:1:3193:3215	153764	1	True				
ANR	153785	Identifier	FILE_OP_SUCCESS		153764	0					
ANR	153786	ReturnType	FileOpErrCode		153764	1					
ANR	153787	Identifier	ClassAdLogParser :: closeFile		153764	2					
ANR	153788	ParameterList			153764	3					
ANR	153789	CFGEntryNode	ENTRY		153764		True				
ANR	153790	CFGExitNode	EXIT		153764		True				
ANR	153791	Symbol	log_fp		153764						
ANR	153792	Symbol	NULL		153764						
ANR	153793	Symbol	FILE_OP_SUCCESS		153764						
ANR	153794	Function	ClassAdLogParser :: setJobQueueName	143:0:3221:3309							
ANR	153795	FunctionDef	ClassAdLogParser :: setJobQueueName (const char * jqn)		153794	0					
ANR	153796	CompoundStatement		145:0:3277:3309	153794	0					
ANR	153797	ExpressionStatement	"strcpy ( job_queue_name , jqn )"	146:1:3280:3307	153794	0	True				
ANR	153798	CallExpression	"strcpy ( job_queue_name , jqn )"		153794	0					
ANR	153799	Callee	strcpy		153794	0					
ANR	153800	Identifier	strcpy		153794	0					
ANR	153801	ArgumentList	job_queue_name		153794	1					
ANR	153802	Argument	job_queue_name		153794	0					
ANR	153803	Identifier	job_queue_name		153794	0					
ANR	153804	Argument	jqn		153794	1					
ANR	153805	Identifier	jqn		153794	0					
ANR	153806	ReturnType	void		153794	1					
ANR	153807	Identifier	ClassAdLogParser :: setJobQueueName		153794	2					
ANR	153808	ParameterList	const char * jqn		153794	3					
ANR	153809	Parameter	const char * jqn	144:34:3260:3274	153794	0	True				
ANR	153810	ParameterType	const char *		153794	0					
ANR	153811	Identifier	jqn		153794	1					
ANR	153812	CFGEntryNode	ENTRY		153794		True				
ANR	153813	CFGExitNode	EXIT		153794		True				
ANR	153814	Symbol	job_queue_name		153794						
ANR	153815	Symbol	jqn		153794						
ANR	153816	Function	ClassAdLogParser :: getJobQueueName	149:0:3312:3380							
ANR	153817	FunctionDef	ClassAdLogParser :: getJobQueueName ()		153816	0					
ANR	153818	CompoundStatement		151:0:3354:3380	153816	0					
ANR	153819	ReturnStatement	return job_queue_name ;	152:1:3357:3378	153816	0	True				
ANR	153820	Identifier	job_queue_name		153816	0					
ANR	153821	ReturnType	char *		153816	1					
ANR	153822	Identifier	ClassAdLogParser :: getJobQueueName		153816	2					
ANR	153823	ParameterList			153816	3					
ANR	153824	CFGEntryNode	ENTRY		153816		True				
ANR	153825	CFGExitNode	EXIT		153816		True				
ANR	153826	Symbol	job_queue_name		153816						
ANR	153827	Function	ClassAdLogParser :: readLogEntry	159:0:3517:6824							
ANR	153828	FunctionDef	ClassAdLogParser :: readLogEntry (int & op_type)		153827	0					
ANR	153829	CompoundStatement		161:0:3576:6824	153827	0					
ANR	153830	IdentifierDeclStatement	int rval ;	162:1:3579:3587	153827	0	True				
ANR	153831	IdentifierDecl	rval		153827	0					
ANR	153832	IdentifierDeclType	int		153827	0					
ANR	153833	Identifier	rval		153827	1					
ANR	153834	IfStatement	"if ( log_fp && fseek ( log_fp , nextOffset , SEEK_SET ) != 0 )"		153827	1					
ANR	153835	Condition	"log_fp && fseek ( log_fp , nextOffset , SEEK_SET ) != 0"	165:8:3632:3681	153827	0	True				
ANR	153836	AndExpression	"log_fp && fseek ( log_fp , nextOffset , SEEK_SET ) != 0"		153827	0		&&			
ANR	153837	Identifier	log_fp		153827	0					
ANR	153838	EqualityExpression	"fseek ( log_fp , nextOffset , SEEK_SET ) != 0"		153827	1		!=			
ANR	153839	CallExpression	"fseek ( log_fp , nextOffset , SEEK_SET )"		153827	0					
ANR	153840	Callee	fseek		153827	0					
ANR	153841	Identifier	fseek		153827	0					
ANR	153842	ArgumentList	log_fp		153827	1					
ANR	153843	Argument	log_fp		153827	0					
ANR	153844	Identifier	log_fp		153827	0					
ANR	153845	Argument	nextOffset		153827	1					
ANR	153846	Identifier	nextOffset		153827	0					
ANR	153847	Argument	SEEK_SET		153827	2					
ANR	153848	Identifier	SEEK_SET		153827	0					
ANR	153849	PrimaryExpression	0		153827	1					
ANR	153850	CompoundStatement		5:60:107:107	153827	1					
ANR	153851	ExpressionStatement	fclose ( log_fp )	166:8:3694:3708	153827	0	True				
ANR	153852	CallExpression	fclose ( log_fp )		153827	0					
ANR	153853	Callee	fclose		153827	0					
ANR	153854	Identifier	fclose		153827	0					
ANR	153855	ArgumentList	log_fp		153827	1					
ANR	153856	Argument	log_fp		153827	0					
ANR	153857	Identifier	log_fp		153827	0					
ANR	153858	ExpressionStatement	log_fp = NULL	167:8:3718:3731	153827	1	True				
ANR	153859	AssignmentExpression	log_fp = NULL		153827	0		=			
ANR	153860	Identifier	log_fp		153827	0					
ANR	153861	Identifier	NULL		153827	1					
ANR	153862	ReturnStatement	return FILE_READ_EOF ;	168:8:3741:3761	153827	2	True				
ANR	153863	Identifier	FILE_READ_EOF		153827	0					
ANR	153864	IfStatement	if ( log_fp )		153827	2					
ANR	153865	Condition	log_fp	171:7:3777:3782	153827	0	True				
ANR	153866	Identifier	log_fp		153827	0					
ANR	153867	CompoundStatement		11:15:208:208	153827	1					
ANR	153868	ExpressionStatement	"rval = readHeader ( log_fp , op_type )"	172:5:3792:3826	153827	0	True				
ANR	153869	AssignmentExpression	"rval = readHeader ( log_fp , op_type )"		153827	0		=			
ANR	153870	Identifier	rval		153827	0					
ANR	153871	CallExpression	"readHeader ( log_fp , op_type )"		153827	1					
ANR	153872	Callee	readHeader		153827	0					
ANR	153873	Identifier	readHeader		153827	0					
ANR	153874	ArgumentList	log_fp		153827	1					
ANR	153875	Argument	log_fp		153827	0					
ANR	153876	Identifier	log_fp		153827	0					
ANR	153877	Argument	op_type		153827	1					
ANR	153878	Identifier	op_type		153827	0					
ANR	153879	IfStatement	if ( rval < 0 )		153827	1					
ANR	153880	Condition	rval < 0	173:9:3837:3844	153827	0	True				
ANR	153881	RelationalExpression	rval < 0		153827	0		<			
ANR	153882	Identifier	rval		153827	0					
ANR	153883	PrimaryExpression	0		153827	1					
ANR	153884	CompoundStatement		13:19:270:270	153827	1					
ANR	153885	ExpressionStatement	fclose ( log_fp )	174:6:3855:3869	153827	0	True				
ANR	153886	CallExpression	fclose ( log_fp )		153827	0					
ANR	153887	Callee	fclose		153827	0					
ANR	153888	Identifier	fclose		153827	0					
ANR	153889	ArgumentList	log_fp		153827	1					
ANR	153890	Argument	log_fp		153827	0					
ANR	153891	Identifier	log_fp		153827	0					
ANR	153892	ExpressionStatement	log_fp = NULL	175:6:3877:3890	153827	1	True				
ANR	153893	AssignmentExpression	log_fp = NULL		153827	0		=			
ANR	153894	Identifier	log_fp		153827	0					
ANR	153895	Identifier	NULL		153827	1					
ANR	153896	ReturnStatement	return FILE_READ_EOF ;	176:6:3898:3918	153827	2	True				
ANR	153897	Identifier	FILE_READ_EOF		153827	0					
ANR	153898	ExpressionStatement	lastCALogEntry . init ( curCALogEntry . op_type )	181:1:3995:4037	153827	3	True				
ANR	153899	CallExpression	lastCALogEntry . init ( curCALogEntry . op_type )		153827	0					
ANR	153900	Callee	lastCALogEntry . init		153827	0					
ANR	153901	MemberAccess	lastCALogEntry . init		153827	0					
ANR	153902	Identifier	lastCALogEntry		153827	0					
ANR	153903	Identifier	init		153827	1					
ANR	153904	ArgumentList	curCALogEntry . op_type		153827	1					
ANR	153905	Argument	curCALogEntry . op_type		153827	0					
ANR	153906	MemberAccess	curCALogEntry . op_type		153827	0					
ANR	153907	Identifier	curCALogEntry		153827	0					
ANR	153908	Identifier	op_type		153827	1					
ANR	153909	ExpressionStatement	lastCALogEntry = curCALogEntry	182:1:4040:4070	153827	4	True				
ANR	153910	AssignmentExpression	lastCALogEntry = curCALogEntry		153827	0		=			
ANR	153911	Identifier	lastCALogEntry		153827	0					
ANR	153912	Identifier	curCALogEntry		153827	1					
ANR	153913	ExpressionStatement	curCALogEntry . init ( op_type )	183:1:4073:4100	153827	5	True				
ANR	153914	CallExpression	curCALogEntry . init ( op_type )		153827	0					
ANR	153915	Callee	curCALogEntry . init		153827	0					
ANR	153916	MemberAccess	curCALogEntry . init		153827	0					
ANR	153917	Identifier	curCALogEntry		153827	0					
ANR	153918	Identifier	init		153827	1					
ANR	153919	ArgumentList	op_type		153827	1					
ANR	153920	Argument	op_type		153827	0					
ANR	153921	Identifier	op_type		153827	0					
ANR	153922	ExpressionStatement	curCALogEntry . offset = nextOffset	184:1:4103:4136	153827	6	True				
ANR	153923	AssignmentExpression	curCALogEntry . offset = nextOffset		153827	0		=			
ANR	153924	MemberAccess	curCALogEntry . offset		153827	0					
ANR	153925	Identifier	curCALogEntry		153827	0					
ANR	153926	Identifier	offset		153827	1					
ANR	153927	Identifier	nextOffset		153827	1					
ANR	153928	IfStatement	if ( log_fp )		153827	7					
ANR	153929	Condition	log_fp	188:4:4179:4184	153827	0	True				
ANR	153930	Identifier	log_fp		153827	0					
ANR	153931	CompoundStatement		28:12:610:610	153827	1					
ANR	153932	SwitchStatement	switch ( op_type )		153827	0					
ANR	153933	Condition	op_type	189:9:4198:4204	153827	0	True				
ANR	153934	Identifier	op_type		153827	0					
ANR	153935	CompoundStatement		29:18:630:630	153827	1					
ANR	153936	Label	case CondorLogOp_LogHistoricalSequenceNumber :	190:6:4215:4259	153827	0	True				
ANR	153937	Identifier	CondorLogOp_LogHistoricalSequenceNumber		153827	0					
ANR	153938	ExpressionStatement	rval = readLogHistoricalSNBody ( log_fp )	191:6:4267:4305	153827	1	True				
ANR	153939	AssignmentExpression	rval = readLogHistoricalSNBody ( log_fp )		153827	0		=			
ANR	153940	Identifier	rval		153827	0					
ANR	153941	CallExpression	readLogHistoricalSNBody ( log_fp )		153827	1					
ANR	153942	Callee	readLogHistoricalSNBody		153827	0					
ANR	153943	Identifier	readLogHistoricalSNBody		153827	0					
ANR	153944	ArgumentList	log_fp		153827	1					
ANR	153945	Argument	log_fp		153827	0					
ANR	153946	Identifier	log_fp		153827	0					
ANR	153947	BreakStatement	break ;	192:4:4311:4316	153827	2	True				
ANR	153948	Label	case CondorLogOp_NewClassAd :	193:6:4324:4351	153827	3	True				
ANR	153949	Identifier	CondorLogOp_NewClassAd		153827	0					
ANR	153950	ExpressionStatement	rval = readNewClassAdBody ( log_fp )	194:6:4359:4392	153827	4	True				
ANR	153951	AssignmentExpression	rval = readNewClassAdBody ( log_fp )		153827	0		=			
ANR	153952	Identifier	rval		153827	0					
ANR	153953	CallExpression	readNewClassAdBody ( log_fp )		153827	1					
ANR	153954	Callee	readNewClassAdBody		153827	0					
ANR	153955	Identifier	readNewClassAdBody		153827	0					
ANR	153956	ArgumentList	log_fp		153827	1					
ANR	153957	Argument	log_fp		153827	0					
ANR	153958	Identifier	log_fp		153827	0					
ANR	153959	BreakStatement	break ;	195:4:4398:4403	153827	5	True				
ANR	153960	Label	case CondorLogOp_DestroyClassAd :	196:6:4411:4442	153827	6	True				
ANR	153961	Identifier	CondorLogOp_DestroyClassAd		153827	0					
ANR	153962	ExpressionStatement	rval = readDestroyClassAdBody ( log_fp )	197:6:4450:4487	153827	7	True				
ANR	153963	AssignmentExpression	rval = readDestroyClassAdBody ( log_fp )		153827	0		=			
ANR	153964	Identifier	rval		153827	0					
ANR	153965	CallExpression	readDestroyClassAdBody ( log_fp )		153827	1					
ANR	153966	Callee	readDestroyClassAdBody		153827	0					
ANR	153967	Identifier	readDestroyClassAdBody		153827	0					
ANR	153968	ArgumentList	log_fp		153827	1					
ANR	153969	Argument	log_fp		153827	0					
ANR	153970	Identifier	log_fp		153827	0					
ANR	153971	BreakStatement	break ;	198:4:4493:4498	153827	8	True				
ANR	153972	Label	case CondorLogOp_SetAttribute :	199:6:4506:4535	153827	9	True				
ANR	153973	Identifier	CondorLogOp_SetAttribute		153827	0					
ANR	153974	ExpressionStatement	rval = readSetAttributeBody ( log_fp )	200:6:4543:4578	153827	10	True				
ANR	153975	AssignmentExpression	rval = readSetAttributeBody ( log_fp )		153827	0		=			
ANR	153976	Identifier	rval		153827	0					
ANR	153977	CallExpression	readSetAttributeBody ( log_fp )		153827	1					
ANR	153978	Callee	readSetAttributeBody		153827	0					
ANR	153979	Identifier	readSetAttributeBody		153827	0					
ANR	153980	ArgumentList	log_fp		153827	1					
ANR	153981	Argument	log_fp		153827	0					
ANR	153982	Identifier	log_fp		153827	0					
ANR	153983	BreakStatement	break ;	201:4:4584:4589	153827	11	True				
ANR	153984	Label	case CondorLogOp_DeleteAttribute :	202:6:4597:4629	153827	12	True				
ANR	153985	Identifier	CondorLogOp_DeleteAttribute		153827	0					
ANR	153986	ExpressionStatement	rval = readDeleteAttributeBody ( log_fp )	203:6:4637:4675	153827	13	True				
ANR	153987	AssignmentExpression	rval = readDeleteAttributeBody ( log_fp )		153827	0		=			
ANR	153988	Identifier	rval		153827	0					
ANR	153989	CallExpression	readDeleteAttributeBody ( log_fp )		153827	1					
ANR	153990	Callee	readDeleteAttributeBody		153827	0					
ANR	153991	Identifier	readDeleteAttributeBody		153827	0					
ANR	153992	ArgumentList	log_fp		153827	1					
ANR	153993	Argument	log_fp		153827	0					
ANR	153994	Identifier	log_fp		153827	0					
ANR	153995	BreakStatement	break ;	204:4:4681:4686	153827	14	True				
ANR	153996	Label	case CondorLogOp_BeginTransaction :	205:3:4691:4724	153827	15	True				
ANR	153997	Identifier	CondorLogOp_BeginTransaction		153827	0					
ANR	153998	ExpressionStatement	rval = readBeginTransactionBody ( log_fp )	206:6:4732:4771	153827	16	True				
ANR	153999	AssignmentExpression	rval = readBeginTransactionBody ( log_fp )		153827	0		=			
ANR	154000	Identifier	rval		153827	0					
ANR	154001	CallExpression	readBeginTransactionBody ( log_fp )		153827	1					
ANR	154002	Callee	readBeginTransactionBody		153827	0					
ANR	154003	Identifier	readBeginTransactionBody		153827	0					
ANR	154004	ArgumentList	log_fp		153827	1					
ANR	154005	Argument	log_fp		153827	0					
ANR	154006	Identifier	log_fp		153827	0					
ANR	154007	BreakStatement	break ;	207:4:4777:4782	153827	17	True				
ANR	154008	Label	case CondorLogOp_EndTransaction :	208:3:4787:4818	153827	18	True				
ANR	154009	Identifier	CondorLogOp_EndTransaction		153827	0					
ANR	154010	ExpressionStatement	rval = readEndTransactionBody ( log_fp )	209:6:4826:4863	153827	19	True				
ANR	154011	AssignmentExpression	rval = readEndTransactionBody ( log_fp )		153827	0		=			
ANR	154012	Identifier	rval		153827	0					
ANR	154013	CallExpression	readEndTransactionBody ( log_fp )		153827	1					
ANR	154014	Callee	readEndTransactionBody		153827	0					
ANR	154015	Identifier	readEndTransactionBody		153827	0					
ANR	154016	ArgumentList	log_fp		153827	1					
ANR	154017	Argument	log_fp		153827	0					
ANR	154018	Identifier	log_fp		153827	0					
ANR	154019	BreakStatement	break ;	210:4:4869:4874	153827	20	True				
ANR	154020	Label	default :	211:6:4882:4889	153827	21	True				
ANR	154021	Identifier	default		153827	0					
ANR	154022	ExpressionStatement	fclose ( log_fp )	212:6:4897:4911	153827	22	True				
ANR	154023	CallExpression	fclose ( log_fp )		153827	0					
ANR	154024	Callee	fclose		153827	0					
ANR	154025	Identifier	fclose		153827	0					
ANR	154026	ArgumentList	log_fp		153827	1					
ANR	154027	Argument	log_fp		153827	0					
ANR	154028	Identifier	log_fp		153827	0					
ANR	154029	ExpressionStatement	log_fp = NULL	213:6:4919:4932	153827	23	True				
ANR	154030	AssignmentExpression	log_fp = NULL		153827	0		=			
ANR	154031	Identifier	log_fp		153827	0					
ANR	154032	Identifier	NULL		153827	1					
ANR	154033	ReturnStatement	return FILE_READ_ERROR ;	214:7:4941:4963	153827	24	True				
ANR	154034	Identifier	FILE_READ_ERROR		153827	0					
ANR	154035	BreakStatement	break ;	215:4:4969:4974	153827	25	True				
ANR	154036	ElseStatement	else		153827	0					
ANR	154037	ReturnStatement	return FILE_READ_ERROR ;	217:8:4988:5010	153827	0	True				
ANR	154038	Identifier	FILE_READ_ERROR		153827	0					
ANR	154039	IfStatement	if ( rval < 0 )		153827	8					
ANR	154040	Condition	rval < 0	219:5:5018:5025	153827	0	True				
ANR	154041	RelationalExpression	rval < 0		153827	0		<			
ANR	154042	Identifier	rval		153827	0					
ANR	154043	PrimaryExpression	0		153827	1					
ANR	154044	CompoundStatement		70:2:1651:1658	153827	1					
ANR	154045	IdentifierDeclStatement	char * line ;	228:2:5213:5223	153827	0	True				
ANR	154046	IdentifierDecl	* line		153827	0					
ANR	154047	IdentifierDeclType	char *		153827	0					
ANR	154048	Identifier	line		153827	1					
ANR	154049	IdentifierDeclStatement	int op ;	230:2:5228:5235	153827	1	True				
ANR	154050	IdentifierDecl	op		153827	0					
ANR	154051	IdentifierDeclType	int		153827	0					
ANR	154052	Identifier	op		153827	1					
ANR	154053	IfStatement	if ( ! log_fp )		153827	2					
ANR	154054	Condition	! log_fp	232:6:5244:5250	153827	0	True				
ANR	154055	UnaryOperationExpression	! log_fp		153827	0					
ANR	154056	UnaryOperator	!		153827	0					
ANR	154057	Identifier	log_fp		153827	1					
ANR	154058	CompoundStatement		72:16:1677:1677	153827	1					
ANR	154059	ExpressionStatement	"syslog ( LOG_ERR , ""Failed fdopen() when recovering corrupt log file"" )"	234:3:5278:5345	153827	0	True				
ANR	154060	CallExpression	"syslog ( LOG_ERR , ""Failed fdopen() when recovering corrupt log file"" )"		153827	0					
ANR	154061	Callee	syslog		153827	0					
ANR	154062	Identifier	syslog		153827	0					
ANR	154063	ArgumentList	LOG_ERR		153827	1					
ANR	154064	Argument	LOG_ERR		153827	0					
ANR	154065	Identifier	LOG_ERR		153827	0					
ANR	154066	Argument	"""Failed fdopen() when recovering corrupt log file"""		153827	1					
ANR	154067	PrimaryExpression	"""Failed fdopen() when recovering corrupt log file"""		153827	0					
ANR	154068	ReturnStatement	return FILE_FATAL_ERROR ;	238:3:5437:5460	153827	1	True				
ANR	154069	Identifier	FILE_FATAL_ERROR		153827	0					
ANR	154070	WhileStatement	"while ( - 1 != readline ( log_fp , line ) )"		153827	3					
ANR	154071	Condition	"- 1 != readline ( log_fp , line )"	241:9:5476:5505	153827	0	True				
ANR	154072	EqualityExpression	"- 1 != readline ( log_fp , line )"		153827	0		!=			
ANR	154073	UnaryOperationExpression	- 1		153827	0					
ANR	154074	UnaryOperator	-		153827	0					
ANR	154075	PrimaryExpression	1		153827	1					
ANR	154076	CallExpression	"readline ( log_fp , line )"		153827	1					
ANR	154077	Callee	readline		153827	0					
ANR	154078	Identifier	readline		153827	0					
ANR	154079	ArgumentList	log_fp		153827	1					
ANR	154080	Argument	log_fp		153827	0					
ANR	154081	Identifier	log_fp		153827	0					
ANR	154082	Argument	line		153827	1					
ANR	154083	Identifier	line		153827	0					
ANR	154084	CompoundStatement		82:3:1937:1972	153827	1					
ANR	154085	IdentifierDeclStatement	"int rv = sscanf ( line , ""%d "" , & op ) ;"	242:3:5514:5549	153827	0	True				
ANR	154086	IdentifierDecl	"rv = sscanf ( line , ""%d "" , & op )"		153827	0					
ANR	154087	IdentifierDeclType	int		153827	0					
ANR	154088	Identifier	rv		153827	1					
ANR	154089	AssignmentExpression	"rv = sscanf ( line , ""%d "" , & op )"		153827	2		=			
ANR	154090	Identifier	rv		153827	0					
ANR	154091	CallExpression	"sscanf ( line , ""%d "" , & op )"		153827	1					
ANR	154092	Callee	sscanf		153827	0					
ANR	154093	Identifier	sscanf		153827	0					
ANR	154094	ArgumentList	line		153827	1					
ANR	154095	Argument	line		153827	0					
ANR	154096	Identifier	line		153827	0					
ANR	154097	Argument	"""%d """		153827	1					
ANR	154098	PrimaryExpression	"""%d """		153827	0					
ANR	154099	Argument	& op		153827	2					
ANR	154100	UnaryOperationExpression	& op		153827	0					
ANR	154101	UnaryOperator	&		153827	0					
ANR	154102	Identifier	op		153827	1					
ANR	154103	ExpressionStatement	free ( line )	243:3:5554:5564	153827	1	True				
ANR	154104	CallExpression	free ( line )		153827	0					
ANR	154105	Callee	free		153827	0					
ANR	154106	Identifier	free		153827	0					
ANR	154107	ArgumentList	line		153827	1					
ANR	154108	Argument	line		153827	0					
ANR	154109	Identifier	line		153827	0					
ANR	154110	IfStatement	if ( rv != 1 )		153827	2					
ANR	154111	Condition	rv != 1	244:7:5573:5579	153827	0	True				
ANR	154112	EqualityExpression	rv != 1		153827	0		!=			
ANR	154113	Identifier	rv		153827	0					
ANR	154114	PrimaryExpression	1		153827	1					
ANR	154115	CompoundStatement		84:17:2006:2006	153827	1					
ANR	154116	ContinueStatement	continue ;	246:4:5642:5650	153827	0	True				
ANR	154117	IfStatement	if ( op == CondorLogOp_EndTransaction )		153827	3					
ANR	154118	Condition	op == CondorLogOp_EndTransaction	248:7:5664:5695	153827	0	True				
ANR	154119	EqualityExpression	op == CondorLogOp_EndTransaction		153827	0		==			
ANR	154120	Identifier	op		153827	0					
ANR	154121	Identifier	CondorLogOp_EndTransaction		153827	1					
ANR	154122	CompoundStatement		88:42:2122:2122	153827	1					
ANR	154123	ExpressionStatement	"syslog ( LOG_ERR , ""Bad record with op=%d in corrupt logfile"" , op_type )"	251:4:5775:5843	153827	0	True				
ANR	154124	CallExpression	"syslog ( LOG_ERR , ""Bad record with op=%d in corrupt logfile"" , op_type )"		153827	0					
ANR	154125	Callee	syslog		153827	0					
ANR	154126	Identifier	syslog		153827	0					
ANR	154127	ArgumentList	LOG_ERR		153827	1					
ANR	154128	Argument	LOG_ERR		153827	0					
ANR	154129	Identifier	LOG_ERR		153827	0					
ANR	154130	Argument	"""Bad record with op=%d in corrupt logfile"""		153827	1					
ANR	154131	PrimaryExpression	"""Bad record with op=%d in corrupt logfile"""		153827	0					
ANR	154132	Argument	op_type		153827	2					
ANR	154133	Identifier	op_type		153827	0					
ANR	154134	ReturnStatement	return FILE_FATAL_ERROR ;	255:4:5938:5961	153827	1	True				
ANR	154135	Identifier	FILE_FATAL_ERROR		153827	0					
ANR	154136	IfStatement	if ( ! feof ( log_fp ) )		153827	4					
ANR	154137	Condition	! feof ( log_fp )	259:6:5981:5995	153827	0	True				
ANR	154138	UnaryOperationExpression	! feof ( log_fp )		153827	0					
ANR	154139	UnaryOperator	!		153827	0					
ANR	154140	CallExpression	feof ( log_fp )		153827	1					
ANR	154141	Callee	feof		153827	0					
ANR	154142	Identifier	feof		153827	0					
ANR	154143	ArgumentList	log_fp		153827	1					
ANR	154144	Argument	log_fp		153827	0					
ANR	154145	Identifier	log_fp		153827	0					
ANR	154146	CompoundStatement		99:24:2422:2422	153827	1					
ANR	154147	ExpressionStatement	fclose ( log_fp )	260:3:6004:6018	153827	0	True				
ANR	154148	CallExpression	fclose ( log_fp )		153827	0					
ANR	154149	Callee	fclose		153827	0					
ANR	154150	Identifier	fclose		153827	0					
ANR	154151	ArgumentList	log_fp		153827	1					
ANR	154152	Argument	log_fp		153827	0					
ANR	154153	Identifier	log_fp		153827	0					
ANR	154154	ExpressionStatement	log_fp = NULL	261:12:6032:6045	153827	1	True				
ANR	154155	AssignmentExpression	log_fp = NULL		153827	0		=			
ANR	154156	Identifier	log_fp		153827	0					
ANR	154157	Identifier	NULL		153827	1					
ANR	154158	ExpressionStatement	"syslog ( LOG_ERR , ""Failed recovering from corrupt file, errno=%d (%m)"" , errno )"	263:3:6069:6159	153827	2	True				
ANR	154159	CallExpression	"syslog ( LOG_ERR , ""Failed recovering from corrupt file, errno=%d (%m)"" , errno )"		153827	0					
ANR	154160	Callee	syslog		153827	0					
ANR	154161	Identifier	syslog		153827	0					
ANR	154162	ArgumentList	LOG_ERR		153827	1					
ANR	154163	Argument	LOG_ERR		153827	0					
ANR	154164	Identifier	LOG_ERR		153827	0					
ANR	154165	Argument	"""Failed recovering from corrupt file, errno=%d (%m)"""		153827	1					
ANR	154166	PrimaryExpression	"""Failed recovering from corrupt file, errno=%d (%m)"""		153827	0					
ANR	154167	Argument	errno		153827	2					
ANR	154168	Identifier	errno		153827	0					
ANR	154169	ReturnStatement	return FILE_FATAL_ERROR ;	271:3:6265:6288	153827	3	True				
ANR	154170	Identifier	FILE_FATAL_ERROR		153827	0					
ANR	154171	ExpressionStatement	fclose ( log_fp )	279:2:6540:6556	153827	5	True				
ANR	154172	CallExpression	fclose ( log_fp )		153827	0					
ANR	154173	Callee	fclose		153827	0					
ANR	154174	Identifier	fclose		153827	0					
ANR	154175	ArgumentList	log_fp		153827	1					
ANR	154176	Argument	log_fp		153827	0					
ANR	154177	Identifier	log_fp		153827	0					
ANR	154178	ExpressionStatement	log_fp = NULL	280:8:6566:6579	153827	6	True				
ANR	154179	AssignmentExpression	log_fp = NULL		153827	0		=			
ANR	154180	Identifier	log_fp		153827	0					
ANR	154181	Identifier	NULL		153827	1					
ANR	154182	ExpressionStatement	curCALogEntry = lastCALogEntry	282:2:6584:6614	153827	7	True				
ANR	154183	AssignmentExpression	curCALogEntry = lastCALogEntry		153827	0		=			
ANR	154184	Identifier	curCALogEntry		153827	0					
ANR	154185	Identifier	lastCALogEntry		153827	1					
ANR	154186	ExpressionStatement	curCALogEntry . offset = nextOffset	283:2:6618:6651	153827	8	True				
ANR	154187	AssignmentExpression	curCALogEntry . offset = nextOffset		153827	0		=			
ANR	154188	MemberAccess	curCALogEntry . offset		153827	0					
ANR	154189	Identifier	curCALogEntry		153827	0					
ANR	154190	Identifier	offset		153827	1					
ANR	154191	Identifier	nextOffset		153827	1					
ANR	154192	ReturnStatement	return FILE_READ_EOF ;	285:2:6656:6676	153827	9	True				
ANR	154193	Identifier	FILE_READ_EOF		153827	0					
ANR	154194	ExpressionStatement	nextOffset = ftell ( log_fp )	290:4:6726:6752	153827	9	True				
ANR	154195	AssignmentExpression	nextOffset = ftell ( log_fp )		153827	0		=			
ANR	154196	Identifier	nextOffset		153827	0					
ANR	154197	CallExpression	ftell ( log_fp )		153827	1					
ANR	154198	Callee	ftell		153827	0					
ANR	154199	Identifier	ftell		153827	0					
ANR	154200	ArgumentList	log_fp		153827	1					
ANR	154201	Argument	log_fp		153827	0					
ANR	154202	Identifier	log_fp		153827	0					
ANR	154203	ExpressionStatement	curCALogEntry . next_offset = nextOffset	292:1:6756:6794	153827	10	True				
ANR	154204	AssignmentExpression	curCALogEntry . next_offset = nextOffset		153827	0		=			
ANR	154205	MemberAccess	curCALogEntry . next_offset		153827	0					
ANR	154206	Identifier	curCALogEntry		153827	0					
ANR	154207	Identifier	next_offset		153827	1					
ANR	154208	Identifier	nextOffset		153827	1					
ANR	154209	ReturnStatement	return FILE_READ_SUCCESS ;	294:1:6798:6822	153827	11	True				
ANR	154210	Identifier	FILE_READ_SUCCESS		153827	0					
ANR	154211	ReturnType	FileOpErrCode		153827	1					
ANR	154212	Identifier	ClassAdLogParser :: readLogEntry		153827	2					
ANR	154213	ParameterList	int & op_type		153827	3					
ANR	154214	Parameter	int & op_type	160:31:3562:3573	153827	0	True				
ANR	154215	ParameterType	int &		153827	0					
ANR	154216	Identifier	op_type		153827	1					
ANR	154217	CFGEntryNode	ENTRY		153827		True				
ANR	154218	CFGExitNode	EXIT		153827		True				
ANR	154219	Symbol	readNewClassAdBody		153827						
ANR	154220	Symbol	FILE_READ_EOF		153827						
ANR	154221	Symbol	rv		153827						
ANR	154222	Symbol	ftell		153827						
ANR	154223	Symbol	line		153827						
ANR	154224	Symbol	& op		153827						
ANR	154225	Symbol	FILE_FATAL_ERROR		153827						
ANR	154226	Symbol	readHeader		153827						
ANR	154227	Symbol	fseek		153827						
ANR	154228	Symbol	readDeleteAttributeBody		153827						
ANR	154229	Symbol	lastCALogEntry		153827						
ANR	154230	Symbol	curCALogEntry . next_offset		153827						
ANR	154231	Symbol	readBeginTransactionBody		153827						
ANR	154232	Symbol	LOG_ERR		153827						
ANR	154233	Symbol	readEndTransactionBody		153827						
ANR	154234	Symbol	FILE_READ_SUCCESS		153827						
ANR	154235	Symbol	rval		153827						
ANR	154236	Symbol	FILE_READ_ERROR		153827						
ANR	154237	Symbol	readline		153827						
ANR	154238	Symbol	SEEK_SET		153827						
ANR	154239	Symbol	op		153827						
ANR	154240	Symbol	CondorLogOp_EndTransaction		153827						
ANR	154241	Symbol	errno		153827						
ANR	154242	Symbol	NULL		153827						
ANR	154243	Symbol	curCALogEntry . op_type		153827						
ANR	154244	Symbol	nextOffset		153827						
ANR	154245	Symbol	readSetAttributeBody		153827						
ANR	154246	Symbol	curCALogEntry		153827						
ANR	154247	Symbol	log_fp		153827						
ANR	154248	Symbol	curCALogEntry . offset		153827						
ANR	154249	Symbol	readDestroyClassAdBody		153827						
ANR	154250	Symbol	sscanf		153827						
ANR	154251	Symbol	feof		153827						
ANR	154252	Symbol	op_type		153827						
ANR	154253	Symbol	readLogHistoricalSNBody		153827						
ANR	154254	Function	ClassAdLogParser :: getNewClassAdBody	300:0:6892:7242							
ANR	154255	FunctionDef	"ClassAdLogParser :: getNewClassAdBody (char * & key , char * & mytype , char * & targettype)"		154254	0					
ANR	154256	CompoundStatement		304:0:7008:7242	154254	0					
ANR	154257	IfStatement	if ( curCALogEntry . op_type != CondorLogOp_NewClassAd )		154254	0					
ANR	154258	Condition	curCALogEntry . op_type != CondorLogOp_NewClassAd	305:5:7015:7061	154254	0	True				
ANR	154259	EqualityExpression	curCALogEntry . op_type != CondorLogOp_NewClassAd		154254	0		!=			
ANR	154260	MemberAccess	curCALogEntry . op_type		154254	0					
ANR	154261	Identifier	curCALogEntry		154254	0					
ANR	154262	Identifier	op_type		154254	1					
ANR	154263	Identifier	CondorLogOp_NewClassAd		154254	1					
ANR	154264	CompoundStatement		2:54:55:55	154254	1					
ANR	154265	ReturnStatement	return PARSER_FAILURE ;	306:2:7068:7089	154254	0	True				
ANR	154266	Identifier	PARSER_FAILURE		154254	0					
ANR	154267	ExpressionStatement	key = strdup ( curCALogEntry . key )	308:1:7095:7126	154254	1	True				
ANR	154268	AssignmentExpression	key = strdup ( curCALogEntry . key )		154254	0		=			
ANR	154269	Identifier	key		154254	0					
ANR	154270	CallExpression	strdup ( curCALogEntry . key )		154254	1					
ANR	154271	Callee	strdup		154254	0					
ANR	154272	Identifier	strdup		154254	0					
ANR	154273	ArgumentList	curCALogEntry . key		154254	1					
ANR	154274	Argument	curCALogEntry . key		154254	0					
ANR	154275	MemberAccess	curCALogEntry . key		154254	0					
ANR	154276	Identifier	curCALogEntry		154254	0					
ANR	154277	Identifier	key		154254	1					
ANR	154278	ExpressionStatement	mytype = strdup ( curCALogEntry . mytype )	309:1:7129:7166	154254	2	True				
ANR	154279	AssignmentExpression	mytype = strdup ( curCALogEntry . mytype )		154254	0		=			
ANR	154280	Identifier	mytype		154254	0					
ANR	154281	CallExpression	strdup ( curCALogEntry . mytype )		154254	1					
ANR	154282	Callee	strdup		154254	0					
ANR	154283	Identifier	strdup		154254	0					
ANR	154284	ArgumentList	curCALogEntry . mytype		154254	1					
ANR	154285	Argument	curCALogEntry . mytype		154254	0					
ANR	154286	MemberAccess	curCALogEntry . mytype		154254	0					
ANR	154287	Identifier	curCALogEntry		154254	0					
ANR	154288	Identifier	mytype		154254	1					
ANR	154289	ExpressionStatement	targettype = strdup ( curCALogEntry . targettype )	310:1:7169:7214	154254	3	True				
ANR	154290	AssignmentExpression	targettype = strdup ( curCALogEntry . targettype )		154254	0		=			
ANR	154291	Identifier	targettype		154254	0					
ANR	154292	CallExpression	strdup ( curCALogEntry . targettype )		154254	1					
ANR	154293	Callee	strdup		154254	0					
ANR	154294	Identifier	strdup		154254	0					
ANR	154295	ArgumentList	curCALogEntry . targettype		154254	1					
ANR	154296	Argument	curCALogEntry . targettype		154254	0					
ANR	154297	MemberAccess	curCALogEntry . targettype		154254	0					
ANR	154298	Identifier	curCALogEntry		154254	0					
ANR	154299	Identifier	targettype		154254	1					
ANR	154300	ReturnStatement	return PARSER_SUCCESS ;	312:1:7219:7240	154254	4	True				
ANR	154301	Identifier	PARSER_SUCCESS		154254	0					
ANR	154302	ReturnType	ParserErrCode		154254	1					
ANR	154303	Identifier	ClassAdLogParser :: getNewClassAdBody		154254	2					
ANR	154304	ParameterList	"char * & key , char * & mytype , char * & targettype"		154254	3					
ANR	154305	Parameter	char * & key	301:36:6942:6951	154254	0	True				
ANR	154306	ParameterType	char * &		154254	0					
ANR	154307	Identifier	key		154254	1					
ANR	154308	Parameter	char * & mytype	302:9:6964:6976	154254	1	True				
ANR	154309	ParameterType	char * &		154254	0					
ANR	154310	Identifier	mytype		154254	1					
ANR	154311	Parameter	char * & targettype	303:9:6989:7005	154254	2	True				
ANR	154312	ParameterType	char * &		154254	0					
ANR	154313	Identifier	targettype		154254	1					
ANR	154314	CFGEntryNode	ENTRY		154254		True				
ANR	154315	CFGExitNode	EXIT		154254		True				
ANR	154316	Symbol	curCALogEntry		154254						
ANR	154317	Symbol	curCALogEntry . key		154254						
ANR	154318	Symbol	CondorLogOp_NewClassAd		154254						
ANR	154319	Symbol	targettype		154254						
ANR	154320	Symbol	curCALogEntry . targettype		154254						
ANR	154321	Symbol	PARSER_FAILURE		154254						
ANR	154322	Symbol	curCALogEntry . op_type		154254						
ANR	154323	Symbol	curCALogEntry . mytype		154254						
ANR	154324	Symbol	mytype		154254						
ANR	154325	Symbol	strdup		154254						
ANR	154326	Symbol	PARSER_SUCCESS		154254						
ANR	154327	Symbol	key		154254						
ANR	154328	Function	ClassAdLogParser :: getDestroyClassAdBody	318:0:7310:7526							
ANR	154329	FunctionDef	ClassAdLogParser :: getDestroyClassAdBody (char * & key)		154328	0					
ANR	154330	CompoundStatement		320:0:7376:7526	154328	0					
ANR	154331	IfStatement	if ( curCALogEntry . op_type != CondorLogOp_DestroyClassAd )		154328	0					
ANR	154332	Condition	curCALogEntry . op_type != CondorLogOp_DestroyClassAd	321:5:7383:7433	154328	0	True				
ANR	154333	EqualityExpression	curCALogEntry . op_type != CondorLogOp_DestroyClassAd		154328	0		!=			
ANR	154334	MemberAccess	curCALogEntry . op_type		154328	0					
ANR	154335	Identifier	curCALogEntry		154328	0					
ANR	154336	Identifier	op_type		154328	1					
ANR	154337	Identifier	CondorLogOp_DestroyClassAd		154328	1					
ANR	154338	CompoundStatement		2:58:59:59	154328	1					
ANR	154339	ReturnStatement	return PARSER_FAILURE ;	322:2:7440:7461	154328	0	True				
ANR	154340	Identifier	PARSER_FAILURE		154328	0					
ANR	154341	ExpressionStatement	key = strdup ( curCALogEntry . key )	325:1:7468:7499	154328	1	True				
ANR	154342	AssignmentExpression	key = strdup ( curCALogEntry . key )		154328	0		=			
ANR	154343	Identifier	key		154328	0					
ANR	154344	CallExpression	strdup ( curCALogEntry . key )		154328	1					
ANR	154345	Callee	strdup		154328	0					
ANR	154346	Identifier	strdup		154328	0					
ANR	154347	ArgumentList	curCALogEntry . key		154328	1					
ANR	154348	Argument	curCALogEntry . key		154328	0					
ANR	154349	MemberAccess	curCALogEntry . key		154328	0					
ANR	154350	Identifier	curCALogEntry		154328	0					
ANR	154351	Identifier	key		154328	1					
ANR	154352	ReturnStatement	return PARSER_SUCCESS ;	327:1:7503:7524	154328	2	True				
ANR	154353	Identifier	PARSER_SUCCESS		154328	0					
ANR	154354	ReturnType	ParserErrCode		154328	1					
ANR	154355	Identifier	ClassAdLogParser :: getDestroyClassAdBody		154328	2					
ANR	154356	ParameterList	char * & key		154328	3					
ANR	154357	Parameter	char * & key	319:40:7364:7373	154328	0	True				
ANR	154358	ParameterType	char * &		154328	0					
ANR	154359	Identifier	key		154328	1					
ANR	154360	CFGEntryNode	ENTRY		154328		True				
ANR	154361	CFGExitNode	EXIT		154328		True				
ANR	154362	Symbol	curCALogEntry		154328						
ANR	154363	Symbol	curCALogEntry . key		154328						
ANR	154364	Symbol	PARSER_FAILURE		154328						
ANR	154365	Symbol	curCALogEntry . op_type		154328						
ANR	154366	Symbol	strdup		154328						
ANR	154367	Symbol	PARSER_SUCCESS		154328						
ANR	154368	Symbol	key		154328						
ANR	154369	Symbol	CondorLogOp_DestroyClassAd		154328						
ANR	154370	Function	ClassAdLogParser :: getSetAttributeBody	333:0:7594:7907							
ANR	154371	FunctionDef	"ClassAdLogParser :: getSetAttributeBody (char * & key , char * & name , char * & value)"		154370	0					
ANR	154372	CompoundStatement		335:0:7685:7907	154370	0					
ANR	154373	IfStatement	if ( curCALogEntry . op_type != CondorLogOp_SetAttribute )		154370	0					
ANR	154374	Condition	curCALogEntry . op_type != CondorLogOp_SetAttribute	336:5:7692:7740	154370	0	True				
ANR	154375	EqualityExpression	curCALogEntry . op_type != CondorLogOp_SetAttribute		154370	0		!=			
ANR	154376	MemberAccess	curCALogEntry . op_type		154370	0					
ANR	154377	Identifier	curCALogEntry		154370	0					
ANR	154378	Identifier	op_type		154370	1					
ANR	154379	Identifier	CondorLogOp_SetAttribute		154370	1					
ANR	154380	CompoundStatement		2:56:57:57	154370	1					
ANR	154381	ReturnStatement	return PARSER_FAILURE ;	337:2:7747:7768	154370	0	True				
ANR	154382	Identifier	PARSER_FAILURE		154370	0					
ANR	154383	ExpressionStatement	key = strdup ( curCALogEntry . key )	340:1:7775:7806	154370	1	True				
ANR	154384	AssignmentExpression	key = strdup ( curCALogEntry . key )		154370	0		=			
ANR	154385	Identifier	key		154370	0					
ANR	154386	CallExpression	strdup ( curCALogEntry . key )		154370	1					
ANR	154387	Callee	strdup		154370	0					
ANR	154388	Identifier	strdup		154370	0					
ANR	154389	ArgumentList	curCALogEntry . key		154370	1					
ANR	154390	Argument	curCALogEntry . key		154370	0					
ANR	154391	MemberAccess	curCALogEntry . key		154370	0					
ANR	154392	Identifier	curCALogEntry		154370	0					
ANR	154393	Identifier	key		154370	1					
ANR	154394	ExpressionStatement	name = strdup ( curCALogEntry . name )	341:1:7809:7842	154370	2	True				
ANR	154395	AssignmentExpression	name = strdup ( curCALogEntry . name )		154370	0		=			
ANR	154396	Identifier	name		154370	0					
ANR	154397	CallExpression	strdup ( curCALogEntry . name )		154370	1					
ANR	154398	Callee	strdup		154370	0					
ANR	154399	Identifier	strdup		154370	0					
ANR	154400	ArgumentList	curCALogEntry . name		154370	1					
ANR	154401	Argument	curCALogEntry . name		154370	0					
ANR	154402	MemberAccess	curCALogEntry . name		154370	0					
ANR	154403	Identifier	curCALogEntry		154370	0					
ANR	154404	Identifier	name		154370	1					
ANR	154405	ExpressionStatement	value = strdup ( curCALogEntry . value )	342:1:7845:7880	154370	3	True				
ANR	154406	AssignmentExpression	value = strdup ( curCALogEntry . value )		154370	0		=			
ANR	154407	Identifier	value		154370	0					
ANR	154408	CallExpression	strdup ( curCALogEntry . value )		154370	1					
ANR	154409	Callee	strdup		154370	0					
ANR	154410	Identifier	strdup		154370	0					
ANR	154411	ArgumentList	curCALogEntry . value		154370	1					
ANR	154412	Argument	curCALogEntry . value		154370	0					
ANR	154413	MemberAccess	curCALogEntry . value		154370	0					
ANR	154414	Identifier	curCALogEntry		154370	0					
ANR	154415	Identifier	value		154370	1					
ANR	154416	ReturnStatement	return PARSER_SUCCESS ;	344:1:7884:7905	154370	4	True				
ANR	154417	Identifier	PARSER_SUCCESS		154370	0					
ANR	154418	ReturnType	ParserErrCode		154370	1					
ANR	154419	Identifier	ClassAdLogParser :: getSetAttributeBody		154370	2					
ANR	154420	ParameterList	"char * & key , char * & name , char * & value"		154370	3					
ANR	154421	Parameter	char * & key	334:38:7646:7655	154370	0	True				
ANR	154422	ParameterType	char * &		154370	0					
ANR	154423	Identifier	key		154370	1					
ANR	154424	Parameter	char * & name	334:50:7658:7668	154370	1	True				
ANR	154425	ParameterType	char * &		154370	0					
ANR	154426	Identifier	name		154370	1					
ANR	154427	Parameter	char * & value	334:63:7671:7682	154370	2	True				
ANR	154428	ParameterType	char * &		154370	0					
ANR	154429	Identifier	value		154370	1					
ANR	154430	CFGEntryNode	ENTRY		154370		True				
ANR	154431	CFGExitNode	EXIT		154370		True				
ANR	154432	Symbol	curCALogEntry		154370						
ANR	154433	Symbol	curCALogEntry . key		154370						
ANR	154434	Symbol	curCALogEntry . name		154370						
ANR	154435	Symbol	curCALogEntry . value		154370						
ANR	154436	Symbol	PARSER_FAILURE		154370						
ANR	154437	Symbol	curCALogEntry . op_type		154370						
ANR	154438	Symbol	name		154370						
ANR	154439	Symbol	CondorLogOp_SetAttribute		154370						
ANR	154440	Symbol	strdup		154370						
ANR	154441	Symbol	PARSER_SUCCESS		154370						
ANR	154442	Symbol	value		154370						
ANR	154443	Symbol	key		154370						
ANR	154444	Function	ClassAdLogParser :: getDeleteAttributeBody	350:0:7975:8242							
ANR	154445	FunctionDef	"ClassAdLogParser :: getDeleteAttributeBody (char * & key , char * & name)"		154444	0					
ANR	154446	CompoundStatement		352:0:8055:8242	154444	0					
ANR	154447	IfStatement	if ( curCALogEntry . op_type != CondorLogOp_DeleteAttribute )		154444	0					
ANR	154448	Condition	curCALogEntry . op_type != CondorLogOp_DeleteAttribute	353:5:8062:8113	154444	0	True				
ANR	154449	EqualityExpression	curCALogEntry . op_type != CondorLogOp_DeleteAttribute		154444	0		!=			
ANR	154450	MemberAccess	curCALogEntry . op_type		154444	0					
ANR	154451	Identifier	curCALogEntry		154444	0					
ANR	154452	Identifier	op_type		154444	1					
ANR	154453	Identifier	CondorLogOp_DeleteAttribute		154444	1					
ANR	154454	CompoundStatement		2:59:60:60	154444	1					
ANR	154455	ReturnStatement	return PARSER_FAILURE ;	354:2:8120:8141	154444	0	True				
ANR	154456	Identifier	PARSER_FAILURE		154444	0					
ANR	154457	ExpressionStatement	key = strdup ( curCALogEntry . key )	357:1:8148:8179	154444	1	True				
ANR	154458	AssignmentExpression	key = strdup ( curCALogEntry . key )		154444	0		=			
ANR	154459	Identifier	key		154444	0					
ANR	154460	CallExpression	strdup ( curCALogEntry . key )		154444	1					
ANR	154461	Callee	strdup		154444	0					
ANR	154462	Identifier	strdup		154444	0					
ANR	154463	ArgumentList	curCALogEntry . key		154444	1					
ANR	154464	Argument	curCALogEntry . key		154444	0					
ANR	154465	MemberAccess	curCALogEntry . key		154444	0					
ANR	154466	Identifier	curCALogEntry		154444	0					
ANR	154467	Identifier	key		154444	1					
ANR	154468	ExpressionStatement	name = strdup ( curCALogEntry . name )	358:1:8182:8215	154444	2	True				
ANR	154469	AssignmentExpression	name = strdup ( curCALogEntry . name )		154444	0		=			
ANR	154470	Identifier	name		154444	0					
ANR	154471	CallExpression	strdup ( curCALogEntry . name )		154444	1					
ANR	154472	Callee	strdup		154444	0					
ANR	154473	Identifier	strdup		154444	0					
ANR	154474	ArgumentList	curCALogEntry . name		154444	1					
ANR	154475	Argument	curCALogEntry . name		154444	0					
ANR	154476	MemberAccess	curCALogEntry . name		154444	0					
ANR	154477	Identifier	curCALogEntry		154444	0					
ANR	154478	Identifier	name		154444	1					
ANR	154479	ReturnStatement	return PARSER_SUCCESS ;	360:1:8219:8240	154444	3	True				
ANR	154480	Identifier	PARSER_SUCCESS		154444	0					
ANR	154481	ReturnType	ParserErrCode		154444	1					
ANR	154482	Identifier	ClassAdLogParser :: getDeleteAttributeBody		154444	2					
ANR	154483	ParameterList	"char * & key , char * & name"		154444	3					
ANR	154484	Parameter	char * & key	351:41:8030:8039	154444	0	True				
ANR	154485	ParameterType	char * &		154444	0					
ANR	154486	Identifier	key		154444	1					
ANR	154487	Parameter	char * & name	351:53:8042:8052	154444	1	True				
ANR	154488	ParameterType	char * &		154444	0					
ANR	154489	Identifier	name		154444	1					
ANR	154490	CFGEntryNode	ENTRY		154444		True				
ANR	154491	CFGExitNode	EXIT		154444		True				
ANR	154492	Symbol	curCALogEntry		154444						
ANR	154493	Symbol	curCALogEntry . key		154444						
ANR	154494	Symbol	curCALogEntry . name		154444						
ANR	154495	Symbol	CondorLogOp_DeleteAttribute		154444						
ANR	154496	Symbol	PARSER_FAILURE		154444						
ANR	154497	Symbol	curCALogEntry . op_type		154444						
ANR	154498	Symbol	name		154444						
ANR	154499	Symbol	strdup		154444						
ANR	154500	Symbol	PARSER_SUCCESS		154444						
ANR	154501	Symbol	key		154444						
ANR	154502	Function	ClassAdLogParser :: getLogHistoricalSNBody	366:0:8310:8606							
ANR	154503	FunctionDef	"ClassAdLogParser :: getLogHistoricalSNBody (char * & seqnum , char * & timestamp)"		154502	0					
ANR	154504	CompoundStatement		368:0:8398:8606	154502	0					
ANR	154505	IfStatement	if ( curCALogEntry . op_type != CondorLogOp_LogHistoricalSequenceNumber )		154502	0					
ANR	154506	Condition	curCALogEntry . op_type != CondorLogOp_LogHistoricalSequenceNumber	369:5:8405:8468	154502	0	True				
ANR	154507	EqualityExpression	curCALogEntry . op_type != CondorLogOp_LogHistoricalSequenceNumber		154502	0		!=			
ANR	154508	MemberAccess	curCALogEntry . op_type		154502	0					
ANR	154509	Identifier	curCALogEntry		154502	0					
ANR	154510	Identifier	op_type		154502	1					
ANR	154511	Identifier	CondorLogOp_LogHistoricalSequenceNumber		154502	1					
ANR	154512	CompoundStatement		2:71:72:72	154502	1					
ANR	154513	ReturnStatement	return PARSER_FAILURE ;	370:2:8475:8496	154502	0	True				
ANR	154514	Identifier	PARSER_FAILURE		154502	0					
ANR	154515	ExpressionStatement	seqnum = strdup ( curCALogEntry . key )	373:1:8503:8537	154502	1	True				
ANR	154516	AssignmentExpression	seqnum = strdup ( curCALogEntry . key )		154502	0		=			
ANR	154517	Identifier	seqnum		154502	0					
ANR	154518	CallExpression	strdup ( curCALogEntry . key )		154502	1					
ANR	154519	Callee	strdup		154502	0					
ANR	154520	Identifier	strdup		154502	0					
ANR	154521	ArgumentList	curCALogEntry . key		154502	1					
ANR	154522	Argument	curCALogEntry . key		154502	0					
ANR	154523	MemberAccess	curCALogEntry . key		154502	0					
ANR	154524	Identifier	curCALogEntry		154502	0					
ANR	154525	Identifier	key		154502	1					
ANR	154526	ExpressionStatement	timestamp = strdup ( curCALogEntry . value )	374:1:8540:8579	154502	2	True				
ANR	154527	AssignmentExpression	timestamp = strdup ( curCALogEntry . value )		154502	0		=			
ANR	154528	Identifier	timestamp		154502	0					
ANR	154529	CallExpression	strdup ( curCALogEntry . value )		154502	1					
ANR	154530	Callee	strdup		154502	0					
ANR	154531	Identifier	strdup		154502	0					
ANR	154532	ArgumentList	curCALogEntry . value		154502	1					
ANR	154533	Argument	curCALogEntry . value		154502	0					
ANR	154534	MemberAccess	curCALogEntry . value		154502	0					
ANR	154535	Identifier	curCALogEntry		154502	0					
ANR	154536	Identifier	value		154502	1					
ANR	154537	ReturnStatement	return PARSER_SUCCESS ;	376:1:8583:8604	154502	3	True				
ANR	154538	Identifier	PARSER_SUCCESS		154502	0					
ANR	154539	ReturnType	ParserErrCode		154502	1					
ANR	154540	Identifier	ClassAdLogParser :: getLogHistoricalSNBody		154502	2					
ANR	154541	ParameterList	"char * & seqnum , char * & timestamp"		154502	3					
ANR	154542	Parameter	char * & seqnum	367:41:8365:8377	154502	0	True				
ANR	154543	ParameterType	char * &		154502	0					
ANR	154544	Identifier	seqnum		154502	1					
ANR	154545	Parameter	char * & timestamp	367:56:8380:8395	154502	1	True				
ANR	154546	ParameterType	char * &		154502	0					
ANR	154547	Identifier	timestamp		154502	1					
ANR	154548	CFGEntryNode	ENTRY		154502		True				
ANR	154549	CFGExitNode	EXIT		154502		True				
ANR	154550	Symbol	curCALogEntry		154502						
ANR	154551	Symbol	curCALogEntry . key		154502						
ANR	154552	Symbol	curCALogEntry . value		154502						
ANR	154553	Symbol	PARSER_FAILURE		154502						
ANR	154554	Symbol	seqnum		154502						
ANR	154555	Symbol	curCALogEntry . op_type		154502						
ANR	154556	Symbol	CondorLogOp_LogHistoricalSequenceNumber		154502						
ANR	154557	Symbol	strdup		154502						
ANR	154558	Symbol	PARSER_SUCCESS		154502						
ANR	154559	Symbol	timestamp		154502						
ANR	154560	Function	ClassAdLogParser :: readNewClassAdBody	379:0:8609:9498							
ANR	154561	FunctionDef	ClassAdLogParser :: readNewClassAdBody (FILE * fp)		154560	0					
ANR	154562	CompoundStatement		381:0:8660:9498	154560	0					
ANR	154563	ExpressionStatement	curCALogEntry . init ( CondorLogOp_NewClassAd )	382:1:8663:8705	154560	0	True				
ANR	154564	CallExpression	curCALogEntry . init ( CondorLogOp_NewClassAd )		154560	0					
ANR	154565	Callee	curCALogEntry . init		154560	0					
ANR	154566	MemberAccess	curCALogEntry . init		154560	0					
ANR	154567	Identifier	curCALogEntry		154560	0					
ANR	154568	Identifier	init		154560	1					
ANR	154569	ArgumentList	CondorLogOp_NewClassAd		154560	1					
ANR	154570	Argument	CondorLogOp_NewClassAd		154560	0					
ANR	154571	Identifier	CondorLogOp_NewClassAd		154560	0					
ANR	154572	IdentifierDeclStatement	"int rval , rval1 ;"	386:1:8793:8808	154560	1	True				
ANR	154573	IdentifierDecl	rval		154560	0					
ANR	154574	IdentifierDeclType	int		154560	0					
ANR	154575	Identifier	rval		154560	1					
ANR	154576	IdentifierDecl	rval1		154560	1					
ANR	154577	IdentifierDeclType	int		154560	0					
ANR	154578	Identifier	rval1		154560	1					
ANR	154579	ExpressionStatement	"rval = readword ( fp , curCALogEntry . key )"	387:1:8811:8849	154560	2	True				
ANR	154580	AssignmentExpression	"rval = readword ( fp , curCALogEntry . key )"		154560	0		=			
ANR	154581	Identifier	rval		154560	0					
ANR	154582	CallExpression	"readword ( fp , curCALogEntry . key )"		154560	1					
ANR	154583	Callee	readword		154560	0					
ANR	154584	Identifier	readword		154560	0					
ANR	154585	ArgumentList	fp		154560	1					
ANR	154586	Argument	fp		154560	0					
ANR	154587	Identifier	fp		154560	0					
ANR	154588	Argument	curCALogEntry . key		154560	1					
ANR	154589	MemberAccess	curCALogEntry . key		154560	0					
ANR	154590	Identifier	curCALogEntry		154560	0					
ANR	154591	Identifier	key		154560	1					
ANR	154592	IfStatement	if ( rval < 0 )		154560	3					
ANR	154593	Condition	rval < 0	388:5:8856:8863	154560	0	True				
ANR	154594	RelationalExpression	rval < 0		154560	0		<			
ANR	154595	Identifier	rval		154560	0					
ANR	154596	PrimaryExpression	0		154560	1					
ANR	154597	CompoundStatement		8:15:205:205	154560	1					
ANR	154598	ReturnStatement	return rval ;	389:2:8870:8881	154560	0	True				
ANR	154599	Identifier	rval		154560	0					
ANR	154600	ExpressionStatement	"rval1 = readword ( fp , curCALogEntry . mytype )"	391:1:8887:8929	154560	4	True				
ANR	154601	AssignmentExpression	"rval1 = readword ( fp , curCALogEntry . mytype )"		154560	0		=			
ANR	154602	Identifier	rval1		154560	0					
ANR	154603	CallExpression	"readword ( fp , curCALogEntry . mytype )"		154560	1					
ANR	154604	Callee	readword		154560	0					
ANR	154605	Identifier	readword		154560	0					
ANR	154606	ArgumentList	fp		154560	1					
ANR	154607	Argument	fp		154560	0					
ANR	154608	Identifier	fp		154560	0					
ANR	154609	Argument	curCALogEntry . mytype		154560	1					
ANR	154610	MemberAccess	curCALogEntry . mytype		154560	0					
ANR	154611	Identifier	curCALogEntry		154560	0					
ANR	154612	Identifier	mytype		154560	1					
ANR	154613	IfStatement	"if ( curCALogEntry . mytype && strcmp ( curCALogEntry . mytype , EMPTY_CLASSAD_TYPE_NAME ) == 0 )"		154560	5					
ANR	154614	Condition	"curCALogEntry . mytype && strcmp ( curCALogEntry . mytype , EMPTY_CLASSAD_TYPE_NAME ) == 0"	392:5:8936:9014	154560	0	True				
ANR	154615	AndExpression	"curCALogEntry . mytype && strcmp ( curCALogEntry . mytype , EMPTY_CLASSAD_TYPE_NAME ) == 0"		154560	0		&&			
ANR	154616	MemberAccess	curCALogEntry . mytype		154560	0					
ANR	154617	Identifier	curCALogEntry		154560	0					
ANR	154618	Identifier	mytype		154560	1					
ANR	154619	EqualityExpression	"strcmp ( curCALogEntry . mytype , EMPTY_CLASSAD_TYPE_NAME ) == 0"		154560	1		==			
ANR	154620	CallExpression	"strcmp ( curCALogEntry . mytype , EMPTY_CLASSAD_TYPE_NAME )"		154560	0					
ANR	154621	Callee	strcmp		154560	0					
ANR	154622	Identifier	strcmp		154560	0					
ANR	154623	ArgumentList	curCALogEntry . mytype		154560	1					
ANR	154624	Argument	curCALogEntry . mytype		154560	0					
ANR	154625	MemberAccess	curCALogEntry . mytype		154560	0					
ANR	154626	Identifier	curCALogEntry		154560	0					
ANR	154627	Identifier	mytype		154560	1					
ANR	154628	Argument	EMPTY_CLASSAD_TYPE_NAME		154560	1					
ANR	154629	Identifier	EMPTY_CLASSAD_TYPE_NAME		154560	0					
ANR	154630	PrimaryExpression	0		154560	1					
ANR	154631	CompoundStatement		12:87:357:357	154560	1					
ANR	154632	ExpressionStatement	free ( curCALogEntry . mytype )	393:2:9022:9048	154560	0	True				
ANR	154633	CallExpression	free ( curCALogEntry . mytype )		154560	0					
ANR	154634	Callee	free		154560	0					
ANR	154635	Identifier	free		154560	0					
ANR	154636	ArgumentList	curCALogEntry . mytype		154560	1					
ANR	154637	Argument	curCALogEntry . mytype		154560	0					
ANR	154638	MemberAccess	curCALogEntry . mytype		154560	0					
ANR	154639	Identifier	curCALogEntry		154560	0					
ANR	154640	Identifier	mytype		154560	1					
ANR	154641	ExpressionStatement	"curCALogEntry . mytype = strdup ( """" )"	394:2:9052:9085	154560	1	True				
ANR	154642	AssignmentExpression	"curCALogEntry . mytype = strdup ( """" )"		154560	0		=			
ANR	154643	MemberAccess	curCALogEntry . mytype		154560	0					
ANR	154644	Identifier	curCALogEntry		154560	0					
ANR	154645	Identifier	mytype		154560	1					
ANR	154646	CallExpression	"strdup ( """" )"		154560	1					
ANR	154647	Callee	strdup		154560	0					
ANR	154648	Identifier	strdup		154560	0					
ANR	154649	ArgumentList	""""""		154560	1					
ANR	154650	Argument	""""""		154560	0					
ANR	154651	PrimaryExpression	""""""		154560	0					
ANR	154652	ExpressionStatement	ASSERT ( curCALogEntry . mytype )	395:2:9089:9119	154560	2	True				
ANR	154653	CallExpression	ASSERT ( curCALogEntry . mytype )		154560	0					
ANR	154654	Callee	ASSERT		154560	0					
ANR	154655	Identifier	ASSERT		154560	0					
ANR	154656	ArgumentList	curCALogEntry . mytype		154560	1					
ANR	154657	Argument	curCALogEntry . mytype		154560	0					
ANR	154658	MemberAccess	curCALogEntry . mytype		154560	0					
ANR	154659	Identifier	curCALogEntry		154560	0					
ANR	154660	Identifier	mytype		154560	1					
ANR	154661	IfStatement	if ( rval1 < 0 )		154560	6					
ANR	154662	Condition	rval1 < 0	397:5:9129:9137	154560	0	True				
ANR	154663	RelationalExpression	rval1 < 0		154560	0		<			
ANR	154664	Identifier	rval1		154560	0					
ANR	154665	PrimaryExpression	0		154560	1					
ANR	154666	CompoundStatement		17:16:479:479	154560	1					
ANR	154667	ReturnStatement	return rval1 ;	398:2:9144:9156	154560	0	True				
ANR	154668	Identifier	rval1		154560	0					
ANR	154669	ExpressionStatement	rval += rval1	400:1:9162:9175	154560	7	True				
ANR	154670	AssignmentExpression	rval += rval1		154560	0		+=			
ANR	154671	Identifier	rval		154560	0					
ANR	154672	Identifier	rval1		154560	1					
ANR	154673	ExpressionStatement	"rval1 = readword ( fp , curCALogEntry . targettype )"	401:1:9178:9224	154560	8	True				
ANR	154674	AssignmentExpression	"rval1 = readword ( fp , curCALogEntry . targettype )"		154560	0		=			
ANR	154675	Identifier	rval1		154560	0					
ANR	154676	CallExpression	"readword ( fp , curCALogEntry . targettype )"		154560	1					
ANR	154677	Callee	readword		154560	0					
ANR	154678	Identifier	readword		154560	0					
ANR	154679	ArgumentList	fp		154560	1					
ANR	154680	Argument	fp		154560	0					
ANR	154681	Identifier	fp		154560	0					
ANR	154682	Argument	curCALogEntry . targettype		154560	1					
ANR	154683	MemberAccess	curCALogEntry . targettype		154560	0					
ANR	154684	Identifier	curCALogEntry		154560	0					
ANR	154685	Identifier	targettype		154560	1					
ANR	154686	IfStatement	"if ( curCALogEntry . targettype && strcmp ( curCALogEntry . targettype , EMPTY_CLASSAD_TYPE_NAME ) == 0 )"		154560	9					
ANR	154687	Condition	"curCALogEntry . targettype && strcmp ( curCALogEntry . targettype , EMPTY_CLASSAD_TYPE_NAME ) == 0"	402:5:9231:9317	154560	0	True				
ANR	154688	AndExpression	"curCALogEntry . targettype && strcmp ( curCALogEntry . targettype , EMPTY_CLASSAD_TYPE_NAME ) == 0"		154560	0		&&			
ANR	154689	MemberAccess	curCALogEntry . targettype		154560	0					
ANR	154690	Identifier	curCALogEntry		154560	0					
ANR	154691	Identifier	targettype		154560	1					
ANR	154692	EqualityExpression	"strcmp ( curCALogEntry . targettype , EMPTY_CLASSAD_TYPE_NAME ) == 0"		154560	1		==			
ANR	154693	CallExpression	"strcmp ( curCALogEntry . targettype , EMPTY_CLASSAD_TYPE_NAME )"		154560	0					
ANR	154694	Callee	strcmp		154560	0					
ANR	154695	Identifier	strcmp		154560	0					
ANR	154696	ArgumentList	curCALogEntry . targettype		154560	1					
ANR	154697	Argument	curCALogEntry . targettype		154560	0					
ANR	154698	MemberAccess	curCALogEntry . targettype		154560	0					
ANR	154699	Identifier	curCALogEntry		154560	0					
ANR	154700	Identifier	targettype		154560	1					
ANR	154701	Argument	EMPTY_CLASSAD_TYPE_NAME		154560	1					
ANR	154702	Identifier	EMPTY_CLASSAD_TYPE_NAME		154560	0					
ANR	154703	PrimaryExpression	0		154560	1					
ANR	154704	CompoundStatement		22:95:660:660	154560	1					
ANR	154705	ExpressionStatement	free ( curCALogEntry . targettype )	403:2:9325:9355	154560	0	True				
ANR	154706	CallExpression	free ( curCALogEntry . targettype )		154560	0					
ANR	154707	Callee	free		154560	0					
ANR	154708	Identifier	free		154560	0					
ANR	154709	ArgumentList	curCALogEntry . targettype		154560	1					
ANR	154710	Argument	curCALogEntry . targettype		154560	0					
ANR	154711	MemberAccess	curCALogEntry . targettype		154560	0					
ANR	154712	Identifier	curCALogEntry		154560	0					
ANR	154713	Identifier	targettype		154560	1					
ANR	154714	ExpressionStatement	"curCALogEntry . targettype = strdup ( """" )"	404:2:9359:9396	154560	1	True				
ANR	154715	AssignmentExpression	"curCALogEntry . targettype = strdup ( """" )"		154560	0		=			
ANR	154716	MemberAccess	curCALogEntry . targettype		154560	0					
ANR	154717	Identifier	curCALogEntry		154560	0					
ANR	154718	Identifier	targettype		154560	1					
ANR	154719	CallExpression	"strdup ( """" )"		154560	1					
ANR	154720	Callee	strdup		154560	0					
ANR	154721	Identifier	strdup		154560	0					
ANR	154722	ArgumentList	""""""		154560	1					
ANR	154723	Argument	""""""		154560	0					
ANR	154724	PrimaryExpression	""""""		154560	0					
ANR	154725	ExpressionStatement	ASSERT ( curCALogEntry . targettype )	405:2:9400:9434	154560	2	True				
ANR	154726	CallExpression	ASSERT ( curCALogEntry . targettype )		154560	0					
ANR	154727	Callee	ASSERT		154560	0					
ANR	154728	Identifier	ASSERT		154560	0					
ANR	154729	ArgumentList	curCALogEntry . targettype		154560	1					
ANR	154730	Argument	curCALogEntry . targettype		154560	0					
ANR	154731	MemberAccess	curCALogEntry . targettype		154560	0					
ANR	154732	Identifier	curCALogEntry		154560	0					
ANR	154733	Identifier	targettype		154560	1					
ANR	154734	IfStatement	if ( rval1 < 0 )		154560	10					
ANR	154735	Condition	rval1 < 0	407:5:9444:9452	154560	0	True				
ANR	154736	RelationalExpression	rval1 < 0		154560	0		<			
ANR	154737	Identifier	rval1		154560	0					
ANR	154738	PrimaryExpression	0		154560	1					
ANR	154739	CompoundStatement		27:16:794:794	154560	1					
ANR	154740	ReturnStatement	return rval1 ;	408:2:9459:9471	154560	0	True				
ANR	154741	Identifier	rval1		154560	0					
ANR	154742	ReturnStatement	return rval + rval1 ;	410:1:9477:9496	154560	11	True				
ANR	154743	AdditiveExpression	rval + rval1		154560	0		+			
ANR	154744	Identifier	rval		154560	0					
ANR	154745	Identifier	rval1		154560	1					
ANR	154746	ReturnType	int		154560	1					
ANR	154747	Identifier	ClassAdLogParser :: readNewClassAdBody		154560	2					
ANR	154748	ParameterList	FILE * fp		154560	3					
ANR	154749	Parameter	FILE * fp	380:37:8650:8657	154560	0	True				
ANR	154750	ParameterType	FILE *		154560	0					
ANR	154751	Identifier	fp		154560	1					
ANR	154752	CFGEntryNode	ENTRY		154560		True				
ANR	154753	CFGExitNode	EXIT		154560		True				
ANR	154754	Symbol	curCALogEntry		154560						
ANR	154755	Symbol	curCALogEntry . key		154560						
ANR	154756	Symbol	strcmp		154560						
ANR	154757	Symbol	CondorLogOp_NewClassAd		154560						
ANR	154758	Symbol	curCALogEntry . targettype		154560						
ANR	154759	Symbol	curCALogEntry . mytype		154560						
ANR	154760	Symbol	EMPTY_CLASSAD_TYPE_NAME		154560						
ANR	154761	Symbol	fp		154560						
ANR	154762	Symbol	rval		154560						
ANR	154763	Symbol	readword		154560						
ANR	154764	Symbol	strdup		154560						
ANR	154765	Symbol	rval1		154560						
ANR	154766	Function	ClassAdLogParser :: readDestroyClassAdBody	413:0:9501:9737							
ANR	154767	FunctionDef	ClassAdLogParser :: readDestroyClassAdBody (FILE * fp)		154766	0					
ANR	154768	CompoundStatement		415:0:9556:9737	154766	0					
ANR	154769	ExpressionStatement	curCALogEntry . init ( CondorLogOp_DestroyClassAd )	416:1:9559:9605	154766	0	True				
ANR	154770	CallExpression	curCALogEntry . init ( CondorLogOp_DestroyClassAd )		154766	0					
ANR	154771	Callee	curCALogEntry . init		154766	0					
ANR	154772	MemberAccess	curCALogEntry . init		154766	0					
ANR	154773	Identifier	curCALogEntry		154766	0					
ANR	154774	Identifier	init		154766	1					
ANR	154775	ArgumentList	CondorLogOp_DestroyClassAd		154766	1					
ANR	154776	Argument	CondorLogOp_DestroyClassAd		154766	0					
ANR	154777	Identifier	CondorLogOp_DestroyClassAd		154766	0					
ANR	154778	ReturnStatement	"return readword ( fp , curCALogEntry . key ) ;"	420:1:9697:9735	154766	1	True				
ANR	154779	CallExpression	"readword ( fp , curCALogEntry . key )"		154766	0					
ANR	154780	Callee	readword		154766	0					
ANR	154781	Identifier	readword		154766	0					
ANR	154782	ArgumentList	fp		154766	1					
ANR	154783	Argument	fp		154766	0					
ANR	154784	Identifier	fp		154766	0					
ANR	154785	Argument	curCALogEntry . key		154766	1					
ANR	154786	MemberAccess	curCALogEntry . key		154766	0					
ANR	154787	Identifier	curCALogEntry		154766	0					
ANR	154788	Identifier	key		154766	1					
ANR	154789	ReturnType	int		154766	1					
ANR	154790	Identifier	ClassAdLogParser :: readDestroyClassAdBody		154766	2					
ANR	154791	ParameterList	FILE * fp		154766	3					
ANR	154792	Parameter	FILE * fp	414:41:9546:9553	154766	0	True				
ANR	154793	ParameterType	FILE *		154766	0					
ANR	154794	Identifier	fp		154766	1					
ANR	154795	CFGEntryNode	ENTRY		154766		True				
ANR	154796	CFGExitNode	EXIT		154766		True				
ANR	154797	Symbol	curCALogEntry		154766						
ANR	154798	Symbol	curCALogEntry . key		154766						
ANR	154799	Symbol	fp		154766						
ANR	154800	Symbol	readword		154766						
ANR	154801	Symbol	CondorLogOp_DestroyClassAd		154766						
ANR	154802	Function	ClassAdLogParser :: readSetAttributeBody	423:0:9740:10222							
ANR	154803	FunctionDef	ClassAdLogParser :: readSetAttributeBody (FILE * fp)		154802	0					
ANR	154804	CompoundStatement		425:0:9793:10222	154802	0					
ANR	154805	ExpressionStatement	curCALogEntry . init ( CondorLogOp_SetAttribute )	426:1:9796:9840	154802	0	True				
ANR	154806	CallExpression	curCALogEntry . init ( CondorLogOp_SetAttribute )		154802	0					
ANR	154807	Callee	curCALogEntry . init		154802	0					
ANR	154808	MemberAccess	curCALogEntry . init		154802	0					
ANR	154809	Identifier	curCALogEntry		154802	0					
ANR	154810	Identifier	init		154802	1					
ANR	154811	ArgumentList	CondorLogOp_SetAttribute		154802	1					
ANR	154812	Argument	CondorLogOp_SetAttribute		154802	0					
ANR	154813	Identifier	CondorLogOp_SetAttribute		154802	0					
ANR	154814	IdentifierDeclStatement	"int rval , rval1 ;"	430:1:9930:9945	154802	1	True				
ANR	154815	IdentifierDecl	rval		154802	0					
ANR	154816	IdentifierDeclType	int		154802	0					
ANR	154817	Identifier	rval		154802	1					
ANR	154818	IdentifierDecl	rval1		154802	1					
ANR	154819	IdentifierDeclType	int		154802	0					
ANR	154820	Identifier	rval1		154802	1					
ANR	154821	ExpressionStatement	"rval1 = readword ( fp , curCALogEntry . key )"	432:1:9949:9988	154802	2	True				
ANR	154822	AssignmentExpression	"rval1 = readword ( fp , curCALogEntry . key )"		154802	0		=			
ANR	154823	Identifier	rval1		154802	0					
ANR	154824	CallExpression	"readword ( fp , curCALogEntry . key )"		154802	1					
ANR	154825	Callee	readword		154802	0					
ANR	154826	Identifier	readword		154802	0					
ANR	154827	ArgumentList	fp		154802	1					
ANR	154828	Argument	fp		154802	0					
ANR	154829	Identifier	fp		154802	0					
ANR	154830	Argument	curCALogEntry . key		154802	1					
ANR	154831	MemberAccess	curCALogEntry . key		154802	0					
ANR	154832	Identifier	curCALogEntry		154802	0					
ANR	154833	Identifier	key		154802	1					
ANR	154834	IfStatement	if ( rval1 < 0 )		154802	3					
ANR	154835	Condition	rval1 < 0	433:5:9995:10003	154802	0	True				
ANR	154836	RelationalExpression	rval1 < 0		154802	0		<			
ANR	154837	Identifier	rval1		154802	0					
ANR	154838	PrimaryExpression	0		154802	1					
ANR	154839	CompoundStatement		9:16:212:212	154802	1					
ANR	154840	ReturnStatement	return rval1 ;	434:2:10010:10022	154802	0	True				
ANR	154841	Identifier	rval1		154802	0					
ANR	154842	ExpressionStatement	"rval = readword ( fp , curCALogEntry . name )"	437:1:10029:10068	154802	4	True				
ANR	154843	AssignmentExpression	"rval = readword ( fp , curCALogEntry . name )"		154802	0		=			
ANR	154844	Identifier	rval		154802	0					
ANR	154845	CallExpression	"readword ( fp , curCALogEntry . name )"		154802	1					
ANR	154846	Callee	readword		154802	0					
ANR	154847	Identifier	readword		154802	0					
ANR	154848	ArgumentList	fp		154802	1					
ANR	154849	Argument	fp		154802	0					
ANR	154850	Identifier	fp		154802	0					
ANR	154851	Argument	curCALogEntry . name		154802	1					
ANR	154852	MemberAccess	curCALogEntry . name		154802	0					
ANR	154853	Identifier	curCALogEntry		154802	0					
ANR	154854	Identifier	name		154802	1					
ANR	154855	IfStatement	if ( rval < 0 )		154802	5					
ANR	154856	Condition	rval < 0	438:5:10075:10082	154802	0	True				
ANR	154857	RelationalExpression	rval < 0		154802	0		<			
ANR	154858	Identifier	rval		154802	0					
ANR	154859	PrimaryExpression	0		154802	1					
ANR	154860	CompoundStatement		14:15:291:291	154802	1					
ANR	154861	ReturnStatement	return rval ;	439:2:10089:10100	154802	0	True				
ANR	154862	Identifier	rval		154802	0					
ANR	154863	ExpressionStatement	rval1 += rval	441:1:10106:10119	154802	6	True				
ANR	154864	AssignmentExpression	rval1 += rval		154802	0		+=			
ANR	154865	Identifier	rval1		154802	0					
ANR	154866	Identifier	rval		154802	1					
ANR	154867	ExpressionStatement	"rval = readline ( fp , curCALogEntry . value )"	443:1:10123:10163	154802	7	True				
ANR	154868	AssignmentExpression	"rval = readline ( fp , curCALogEntry . value )"		154802	0		=			
ANR	154869	Identifier	rval		154802	0					
ANR	154870	CallExpression	"readline ( fp , curCALogEntry . value )"		154802	1					
ANR	154871	Callee	readline		154802	0					
ANR	154872	Identifier	readline		154802	0					
ANR	154873	ArgumentList	fp		154802	1					
ANR	154874	Argument	fp		154802	0					
ANR	154875	Identifier	fp		154802	0					
ANR	154876	Argument	curCALogEntry . value		154802	1					
ANR	154877	MemberAccess	curCALogEntry . value		154802	0					
ANR	154878	Identifier	curCALogEntry		154802	0					
ANR	154879	Identifier	value		154802	1					
ANR	154880	IfStatement	if ( rval < 0 )		154802	8					
ANR	154881	Condition	rval < 0	444:5:10170:10177	154802	0	True				
ANR	154882	RelationalExpression	rval < 0		154802	0		<			
ANR	154883	Identifier	rval		154802	0					
ANR	154884	PrimaryExpression	0		154802	1					
ANR	154885	CompoundStatement		20:15:386:386	154802	1					
ANR	154886	ReturnStatement	return rval ;	445:2:10184:10195	154802	0	True				
ANR	154887	Identifier	rval		154802	0					
ANR	154888	ReturnStatement	return rval + rval1 ;	447:1:10201:10220	154802	9	True				
ANR	154889	AdditiveExpression	rval + rval1		154802	0		+			
ANR	154890	Identifier	rval		154802	0					
ANR	154891	Identifier	rval1		154802	1					
ANR	154892	ReturnType	int		154802	1					
ANR	154893	Identifier	ClassAdLogParser :: readSetAttributeBody		154802	2					
ANR	154894	ParameterList	FILE * fp		154802	3					
ANR	154895	Parameter	FILE * fp	424:39:9783:9790	154802	0	True				
ANR	154896	ParameterType	FILE *		154802	0					
ANR	154897	Identifier	fp		154802	1					
ANR	154898	CFGEntryNode	ENTRY		154802		True				
ANR	154899	CFGExitNode	EXIT		154802		True				
ANR	154900	Symbol	curCALogEntry		154802						
ANR	154901	Symbol	curCALogEntry . key		154802						
ANR	154902	Symbol	curCALogEntry . name		154802						
ANR	154903	Symbol	curCALogEntry . value		154802						
ANR	154904	Symbol	fp		154802						
ANR	154905	Symbol	CondorLogOp_SetAttribute		154802						
ANR	154906	Symbol	rval		154802						
ANR	154907	Symbol	readword		154802						
ANR	154908	Symbol	rval1		154802						
ANR	154909	Symbol	readline		154802						
ANR	154910	Function	ClassAdLogParser :: readDeleteAttributeBody	450:0:10225:10616							
ANR	154911	FunctionDef	ClassAdLogParser :: readDeleteAttributeBody (FILE * fp)		154910	0					
ANR	154912	CompoundStatement		452:0:10281:10616	154910	0					
ANR	154913	ExpressionStatement	curCALogEntry . init ( CondorLogOp_DeleteAttribute )	453:1:10284:10331	154910	0	True				
ANR	154914	CallExpression	curCALogEntry . init ( CondorLogOp_DeleteAttribute )		154910	0					
ANR	154915	Callee	curCALogEntry . init		154910	0					
ANR	154916	MemberAccess	curCALogEntry . init		154910	0					
ANR	154917	Identifier	curCALogEntry		154910	0					
ANR	154918	Identifier	init		154910	1					
ANR	154919	ArgumentList	CondorLogOp_DeleteAttribute		154910	1					
ANR	154920	Argument	CondorLogOp_DeleteAttribute		154910	0					
ANR	154921	Identifier	CondorLogOp_DeleteAttribute		154910	0					
ANR	154922	IdentifierDeclStatement	"int rval , rval1 ;"	457:1:10419:10434	154910	1	True				
ANR	154923	IdentifierDecl	rval		154910	0					
ANR	154924	IdentifierDeclType	int		154910	0					
ANR	154925	Identifier	rval		154910	1					
ANR	154926	IdentifierDecl	rval1		154910	1					
ANR	154927	IdentifierDeclType	int		154910	0					
ANR	154928	Identifier	rval1		154910	1					
ANR	154929	ExpressionStatement	"rval1 = readword ( fp , curCALogEntry . key )"	459:1:10438:10477	154910	2	True				
ANR	154930	AssignmentExpression	"rval1 = readword ( fp , curCALogEntry . key )"		154910	0		=			
ANR	154931	Identifier	rval1		154910	0					
ANR	154932	CallExpression	"readword ( fp , curCALogEntry . key )"		154910	1					
ANR	154933	Callee	readword		154910	0					
ANR	154934	Identifier	readword		154910	0					
ANR	154935	ArgumentList	fp		154910	1					
ANR	154936	Argument	fp		154910	0					
ANR	154937	Identifier	fp		154910	0					
ANR	154938	Argument	curCALogEntry . key		154910	1					
ANR	154939	MemberAccess	curCALogEntry . key		154910	0					
ANR	154940	Identifier	curCALogEntry		154910	0					
ANR	154941	Identifier	key		154910	1					
ANR	154942	IfStatement	if ( rval1 < 0 )		154910	3					
ANR	154943	Condition	rval1 < 0	460:5:10484:10492	154910	0	True				
ANR	154944	RelationalExpression	rval1 < 0		154910	0		<			
ANR	154945	Identifier	rval1		154910	0					
ANR	154946	PrimaryExpression	0		154910	1					
ANR	154947	CompoundStatement		9:16:213:213	154910	1					
ANR	154948	ReturnStatement	return rval1 ;	461:2:10499:10511	154910	0	True				
ANR	154949	Identifier	rval1		154910	0					
ANR	154950	ExpressionStatement	"rval = readword ( fp , curCALogEntry . name )"	464:1:10518:10557	154910	4	True				
ANR	154951	AssignmentExpression	"rval = readword ( fp , curCALogEntry . name )"		154910	0		=			
ANR	154952	Identifier	rval		154910	0					
ANR	154953	CallExpression	"readword ( fp , curCALogEntry . name )"		154910	1					
ANR	154954	Callee	readword		154910	0					
ANR	154955	Identifier	readword		154910	0					
ANR	154956	ArgumentList	fp		154910	1					
ANR	154957	Argument	fp		154910	0					
ANR	154958	Identifier	fp		154910	0					
ANR	154959	Argument	curCALogEntry . name		154910	1					
ANR	154960	MemberAccess	curCALogEntry . name		154910	0					
ANR	154961	Identifier	curCALogEntry		154910	0					
ANR	154962	Identifier	name		154910	1					
ANR	154963	IfStatement	if ( rval < 0 )		154910	5					
ANR	154964	Condition	rval < 0	465:5:10564:10571	154910	0	True				
ANR	154965	RelationalExpression	rval < 0		154910	0		<			
ANR	154966	Identifier	rval		154910	0					
ANR	154967	PrimaryExpression	0		154910	1					
ANR	154968	CompoundStatement		14:15:292:292	154910	1					
ANR	154969	ReturnStatement	return rval ;	466:2:10578:10589	154910	0	True				
ANR	154970	Identifier	rval		154910	0					
ANR	154971	ReturnStatement	return rval + rval1 ;	468:1:10595:10614	154910	6	True				
ANR	154972	AdditiveExpression	rval + rval1		154910	0		+			
ANR	154973	Identifier	rval		154910	0					
ANR	154974	Identifier	rval1		154910	1					
ANR	154975	ReturnType	int		154910	1					
ANR	154976	Identifier	ClassAdLogParser :: readDeleteAttributeBody		154910	2					
ANR	154977	ParameterList	FILE * fp		154910	3					
ANR	154978	Parameter	FILE * fp	451:42:10271:10278	154910	0	True				
ANR	154979	ParameterType	FILE *		154910	0					
ANR	154980	Identifier	fp		154910	1					
ANR	154981	CFGEntryNode	ENTRY		154910		True				
ANR	154982	CFGExitNode	EXIT		154910		True				
ANR	154983	Symbol	curCALogEntry		154910						
ANR	154984	Symbol	curCALogEntry . key		154910						
ANR	154985	Symbol	curCALogEntry . name		154910						
ANR	154986	Symbol	CondorLogOp_DeleteAttribute		154910						
ANR	154987	Symbol	fp		154910						
ANR	154988	Symbol	rval		154910						
ANR	154989	Symbol	readword		154910						
ANR	154990	Symbol	rval1		154910						
ANR	154991	Function	ClassAdLogParser :: readBeginTransactionBody	471:0:10619:10915							
ANR	154992	FunctionDef	ClassAdLogParser :: readBeginTransactionBody (FILE * fp)		154991	0					
ANR	154993	CompoundStatement		473:0:10676:10915	154991	0					
ANR	154994	ExpressionStatement	curCALogEntry . init ( CondorLogOp_BeginTransaction )	474:1:10679:10727	154991	0	True				
ANR	154995	CallExpression	curCALogEntry . init ( CondorLogOp_BeginTransaction )		154991	0					
ANR	154996	Callee	curCALogEntry . init		154991	0					
ANR	154997	MemberAccess	curCALogEntry . init		154991	0					
ANR	154998	Identifier	curCALogEntry		154991	0					
ANR	154999	Identifier	init		154991	1					
ANR	155000	ArgumentList	CondorLogOp_BeginTransaction		154991	1					
ANR	155001	Argument	CondorLogOp_BeginTransaction		154991	0					
ANR	155002	Identifier	CondorLogOp_BeginTransaction		154991	0					
ANR	155003	IdentifierDeclStatement	int ch ;	478:1:10821:10828	154991	1	True				
ANR	155004	IdentifierDecl	ch		154991	0					
ANR	155005	IdentifierDeclType	int		154991	0					
ANR	155006	Identifier	ch		154991	1					
ANR	155007	ExpressionStatement	ch = fgetc ( fp )	480:1:10832:10846	154991	2	True				
ANR	155008	AssignmentExpression	ch = fgetc ( fp )		154991	0		=			
ANR	155009	Identifier	ch		154991	0					
ANR	155010	CallExpression	fgetc ( fp )		154991	1					
ANR	155011	Callee	fgetc		154991	0					
ANR	155012	Identifier	fgetc		154991	0					
ANR	155013	ArgumentList	fp		154991	1					
ANR	155014	Argument	fp		154991	0					
ANR	155015	Identifier	fp		154991	0					
ANR	155016	IfStatement	if ( ch == EOF || ch != '\\n' )		154991	3					
ANR	155017	Condition	ch == EOF || ch != '\\n'	482:5:10854:10876	154991	0	True				
ANR	155018	OrExpression	ch == EOF || ch != '\\n'		154991	0		||			
ANR	155019	EqualityExpression	ch == EOF		154991	0		==			
ANR	155020	Identifier	ch		154991	0					
ANR	155021	Identifier	EOF		154991	1					
ANR	155022	EqualityExpression	ch != '\\n'		154991	1		!=			
ANR	155023	Identifier	ch		154991	0					
ANR	155024	PrimaryExpression	'\\n'		154991	1					
ANR	155025	CompoundStatement		10:31:203:203	154991	1					
ANR	155026	ReturnStatement	return ( - 1 ) ;	483:2:10884:10896	154991	0	True				
ANR	155027	UnaryOperationExpression	- 1		154991	0					
ANR	155028	UnaryOperator	-		154991	0					
ANR	155029	PrimaryExpression	1		154991	1					
ANR	155030	ReturnStatement	return ( 1 ) ;	485:1:10902:10913	154991	4	True				
ANR	155031	PrimaryExpression	1		154991	0					
ANR	155032	ReturnType	int		154991	1					
ANR	155033	Identifier	ClassAdLogParser :: readBeginTransactionBody		154991	2					
ANR	155034	ParameterList	FILE * fp		154991	3					
ANR	155035	Parameter	FILE * fp	472:43:10666:10673	154991	0	True				
ANR	155036	ParameterType	FILE *		154991	0					
ANR	155037	Identifier	fp		154991	1					
ANR	155038	CFGEntryNode	ENTRY		154991		True				
ANR	155039	CFGExitNode	EXIT		154991		True				
ANR	155040	Symbol	curCALogEntry		154991						
ANR	155041	Symbol	CondorLogOp_BeginTransaction		154991						
ANR	155042	Symbol	ch		154991						
ANR	155043	Symbol	fp		154991						
ANR	155044	Symbol	EOF		154991						
ANR	155045	Symbol	fgetc		154991						
ANR	155046	Function	ClassAdLogParser :: readEndTransactionBody	488:0:10918:11208							
ANR	155047	FunctionDef	ClassAdLogParser :: readEndTransactionBody (FILE * fp)		155046	0					
ANR	155048	CompoundStatement		490:0:10973:11208	155046	0					
ANR	155049	ExpressionStatement	curCALogEntry . init ( CondorLogOp_EndTransaction )	491:1:10976:11022	155046	0	True				
ANR	155050	CallExpression	curCALogEntry . init ( CondorLogOp_EndTransaction )		155046	0					
ANR	155051	Callee	curCALogEntry . init		155046	0					
ANR	155052	MemberAccess	curCALogEntry . init		155046	0					
ANR	155053	Identifier	curCALogEntry		155046	0					
ANR	155054	Identifier	init		155046	1					
ANR	155055	ArgumentList	CondorLogOp_EndTransaction		155046	1					
ANR	155056	Argument	CondorLogOp_EndTransaction		155046	0					
ANR	155057	Identifier	CondorLogOp_EndTransaction		155046	0					
ANR	155058	IdentifierDeclStatement	int ch ;	495:1:11114:11121	155046	1	True				
ANR	155059	IdentifierDecl	ch		155046	0					
ANR	155060	IdentifierDeclType	int		155046	0					
ANR	155061	Identifier	ch		155046	1					
ANR	155062	ExpressionStatement	ch = fgetc ( fp )	497:1:11125:11139	155046	2	True				
ANR	155063	AssignmentExpression	ch = fgetc ( fp )		155046	0		=			
ANR	155064	Identifier	ch		155046	0					
ANR	155065	CallExpression	fgetc ( fp )		155046	1					
ANR	155066	Callee	fgetc		155046	0					
ANR	155067	Identifier	fgetc		155046	0					
ANR	155068	ArgumentList	fp		155046	1					
ANR	155069	Argument	fp		155046	0					
ANR	155070	Identifier	fp		155046	0					
ANR	155071	IfStatement	if ( ch == EOF || ch != '\\n' )		155046	3					
ANR	155072	Condition	ch == EOF || ch != '\\n'	499:5:11147:11169	155046	0	True				
ANR	155073	OrExpression	ch == EOF || ch != '\\n'		155046	0		||			
ANR	155074	EqualityExpression	ch == EOF		155046	0		==			
ANR	155075	Identifier	ch		155046	0					
ANR	155076	Identifier	EOF		155046	1					
ANR	155077	EqualityExpression	ch != '\\n'		155046	1		!=			
ANR	155078	Identifier	ch		155046	0					
ANR	155079	PrimaryExpression	'\\n'		155046	1					
ANR	155080	CompoundStatement		10:31:199:199	155046	1					
ANR	155081	ReturnStatement	return ( - 1 ) ;	500:2:11177:11189	155046	0	True				
ANR	155082	UnaryOperationExpression	- 1		155046	0					
ANR	155083	UnaryOperator	-		155046	0					
ANR	155084	PrimaryExpression	1		155046	1					
ANR	155085	ReturnStatement	return ( 1 ) ;	502:1:11195:11206	155046	4	True				
ANR	155086	PrimaryExpression	1		155046	0					
ANR	155087	ReturnType	int		155046	1					
ANR	155088	Identifier	ClassAdLogParser :: readEndTransactionBody		155046	2					
ANR	155089	ParameterList	FILE * fp		155046	3					
ANR	155090	Parameter	FILE * fp	489:41:10963:10970	155046	0	True				
ANR	155091	ParameterType	FILE *		155046	0					
ANR	155092	Identifier	fp		155046	1					
ANR	155093	CFGEntryNode	ENTRY		155046		True				
ANR	155094	CFGExitNode	EXIT		155046		True				
ANR	155095	Symbol	curCALogEntry		155046						
ANR	155096	Symbol	CondorLogOp_EndTransaction		155046						
ANR	155097	Symbol	ch		155046						
ANR	155098	Symbol	fp		155046						
ANR	155099	Symbol	EOF		155046						
ANR	155100	Symbol	fgetc		155046						
ANR	155101	Function	ClassAdLogParser :: readLogHistoricalSNBody	505:0:11211:11711							
ANR	155102	FunctionDef	ClassAdLogParser :: readLogHistoricalSNBody (FILE * fp)		155101	0					
ANR	155103	CompoundStatement		507:0:11267:11711	155101	0					
ANR	155104	ExpressionStatement	curCALogEntry . init ( CondorLogOp_LogHistoricalSequenceNumber )	508:1:11270:11329	155101	0	True				
ANR	155105	CallExpression	curCALogEntry . init ( CondorLogOp_LogHistoricalSequenceNumber )		155101	0					
ANR	155106	Callee	curCALogEntry . init		155101	0					
ANR	155107	MemberAccess	curCALogEntry . init		155101	0					
ANR	155108	Identifier	curCALogEntry		155101	0					
ANR	155109	Identifier	init		155101	1					
ANR	155110	ArgumentList	CondorLogOp_LogHistoricalSequenceNumber		155101	1					
ANR	155111	Argument	CondorLogOp_LogHistoricalSequenceNumber		155101	0					
ANR	155112	Identifier	CondorLogOp_LogHistoricalSequenceNumber		155101	0					
ANR	155113	IdentifierDeclStatement	"int rval , rval1 ;"	512:1:11419:11434	155101	1	True				
ANR	155114	IdentifierDecl	rval		155101	0					
ANR	155115	IdentifierDeclType	int		155101	0					
ANR	155116	Identifier	rval		155101	1					
ANR	155117	IdentifierDecl	rval1		155101	1					
ANR	155118	IdentifierDeclType	int		155101	0					
ANR	155119	Identifier	rval1		155101	1					
ANR	155120	ExpressionStatement	"rval1 = readword ( fp , curCALogEntry . key )"	514:1:11438:11477	155101	2	True				
ANR	155121	AssignmentExpression	"rval1 = readword ( fp , curCALogEntry . key )"		155101	0		=			
ANR	155122	Identifier	rval1		155101	0					
ANR	155123	CallExpression	"readword ( fp , curCALogEntry . key )"		155101	1					
ANR	155124	Callee	readword		155101	0					
ANR	155125	Identifier	readword		155101	0					
ANR	155126	ArgumentList	fp		155101	1					
ANR	155127	Argument	fp		155101	0					
ANR	155128	Identifier	fp		155101	0					
ANR	155129	Argument	curCALogEntry . key		155101	1					
ANR	155130	MemberAccess	curCALogEntry . key		155101	0					
ANR	155131	Identifier	curCALogEntry		155101	0					
ANR	155132	Identifier	key		155101	1					
ANR	155133	IfStatement	if ( rval1 < 0 )		155101	3					
ANR	155134	Condition	rval1 < 0	515:5:11484:11492	155101	0	True				
ANR	155135	RelationalExpression	rval1 < 0		155101	0		<			
ANR	155136	Identifier	rval1		155101	0					
ANR	155137	PrimaryExpression	0		155101	1					
ANR	155138	CompoundStatement		9:16:227:227	155101	1					
ANR	155139	ReturnStatement	return rval1 ;	516:2:11499:11511	155101	0	True				
ANR	155140	Identifier	rval1		155101	0					
ANR	155141	ExpressionStatement	"rval = readword ( fp , curCALogEntry . name )"	519:1:11518:11557	155101	4	True				
ANR	155142	AssignmentExpression	"rval = readword ( fp , curCALogEntry . name )"		155101	0		=			
ANR	155143	Identifier	rval		155101	0					
ANR	155144	CallExpression	"readword ( fp , curCALogEntry . name )"		155101	1					
ANR	155145	Callee	readword		155101	0					
ANR	155146	Identifier	readword		155101	0					
ANR	155147	ArgumentList	fp		155101	1					
ANR	155148	Argument	fp		155101	0					
ANR	155149	Identifier	fp		155101	0					
ANR	155150	Argument	curCALogEntry . name		155101	1					
ANR	155151	MemberAccess	curCALogEntry . name		155101	0					
ANR	155152	Identifier	curCALogEntry		155101	0					
ANR	155153	Identifier	name		155101	1					
ANR	155154	IfStatement	if ( rval < 0 )		155101	5					
ANR	155155	Condition	rval < 0	520:5:11564:11571	155101	0	True				
ANR	155156	RelationalExpression	rval < 0		155101	0		<			
ANR	155157	Identifier	rval		155101	0					
ANR	155158	PrimaryExpression	0		155101	1					
ANR	155159	CompoundStatement		14:15:306:306	155101	1					
ANR	155160	ReturnStatement	return rval ;	521:2:11578:11589	155101	0	True				
ANR	155161	Identifier	rval		155101	0					
ANR	155162	ExpressionStatement	rval1 += rval	523:1:11595:11608	155101	6	True				
ANR	155163	AssignmentExpression	rval1 += rval		155101	0		+=			
ANR	155164	Identifier	rval1		155101	0					
ANR	155165	Identifier	rval		155101	1					
ANR	155166	ExpressionStatement	"rval = readline ( fp , curCALogEntry . value )"	525:1:11612:11652	155101	7	True				
ANR	155167	AssignmentExpression	"rval = readline ( fp , curCALogEntry . value )"		155101	0		=			
ANR	155168	Identifier	rval		155101	0					
ANR	155169	CallExpression	"readline ( fp , curCALogEntry . value )"		155101	1					
ANR	155170	Callee	readline		155101	0					
ANR	155171	Identifier	readline		155101	0					
ANR	155172	ArgumentList	fp		155101	1					
ANR	155173	Argument	fp		155101	0					
ANR	155174	Identifier	fp		155101	0					
ANR	155175	Argument	curCALogEntry . value		155101	1					
ANR	155176	MemberAccess	curCALogEntry . value		155101	0					
ANR	155177	Identifier	curCALogEntry		155101	0					
ANR	155178	Identifier	value		155101	1					
ANR	155179	IfStatement	if ( rval < 0 )		155101	8					
ANR	155180	Condition	rval < 0	526:5:11659:11666	155101	0	True				
ANR	155181	RelationalExpression	rval < 0		155101	0		<			
ANR	155182	Identifier	rval		155101	0					
ANR	155183	PrimaryExpression	0		155101	1					
ANR	155184	CompoundStatement		20:15:401:401	155101	1					
ANR	155185	ReturnStatement	return rval ;	527:2:11673:11684	155101	0	True				
ANR	155186	Identifier	rval		155101	0					
ANR	155187	ReturnStatement	return rval + rval1 ;	529:1:11690:11709	155101	9	True				
ANR	155188	AdditiveExpression	rval + rval1		155101	0		+			
ANR	155189	Identifier	rval		155101	0					
ANR	155190	Identifier	rval1		155101	1					
ANR	155191	ReturnType	int		155101	1					
ANR	155192	Identifier	ClassAdLogParser :: readLogHistoricalSNBody		155101	2					
ANR	155193	ParameterList	FILE * fp		155101	3					
ANR	155194	Parameter	FILE * fp	506:42:11257:11264	155101	0	True				
ANR	155195	ParameterType	FILE *		155101	0					
ANR	155196	Identifier	fp		155101	1					
ANR	155197	CFGEntryNode	ENTRY		155101		True				
ANR	155198	CFGExitNode	EXIT		155101		True				
ANR	155199	Symbol	curCALogEntry		155101						
ANR	155200	Symbol	curCALogEntry . key		155101						
ANR	155201	Symbol	curCALogEntry . name		155101						
ANR	155202	Symbol	curCALogEntry . value		155101						
ANR	155203	Symbol	CondorLogOp_LogHistoricalSequenceNumber		155101						
ANR	155204	Symbol	fp		155101						
ANR	155205	Symbol	rval		155101						
ANR	155206	Symbol	readword		155101						
ANR	155207	Symbol	rval1		155101						
ANR	155208	Symbol	readline		155101						
ANR	155209	Function	ClassAdLogParser :: readHeader	533:0:11715:11911							
ANR	155210	FunctionDef	"ClassAdLogParser :: readHeader (FILE * fp , int & op_type)"		155209	0					
ANR	155211	CompoundStatement		535:0:11772:11911	155209	0					
ANR	155212	IdentifierDeclStatement	int rval ;	536:1:11775:11783	155209	0	True				
ANR	155213	IdentifierDecl	rval		155209	0					
ANR	155214	IdentifierDeclType	int		155209	0					
ANR	155215	Identifier	rval		155209	1					
ANR	155216	IdentifierDeclStatement	char * op = NULL ;	537:1:11786:11801	155209	1	True				
ANR	155217	IdentifierDecl	* op = NULL		155209	0					
ANR	155218	IdentifierDeclType	char *		155209	0					
ANR	155219	Identifier	op		155209	1					
ANR	155220	AssignmentExpression	* op = NULL		155209	2		=			
ANR	155221	Identifier	NULL		155209	0					
ANR	155222	Identifier	NULL		155209	1					
ANR	155223	ExpressionStatement	"rval = readword ( fp , op )"	539:1:11805:11828	155209	2	True				
ANR	155224	AssignmentExpression	"rval = readword ( fp , op )"		155209	0		=			
ANR	155225	Identifier	rval		155209	0					
ANR	155226	CallExpression	"readword ( fp , op )"		155209	1					
ANR	155227	Callee	readword		155209	0					
ANR	155228	Identifier	readword		155209	0					
ANR	155229	ArgumentList	fp		155209	1					
ANR	155230	Argument	fp		155209	0					
ANR	155231	Identifier	fp		155209	0					
ANR	155232	Argument	op		155209	1					
ANR	155233	Identifier	op		155209	0					
ANR	155234	IfStatement	if ( rval < 0 )		155209	3					
ANR	155235	Condition	rval < 0	540:5:11835:11842	155209	0	True				
ANR	155236	RelationalExpression	rval < 0		155209	0		<			
ANR	155237	Identifier	rval		155209	0					
ANR	155238	PrimaryExpression	0		155209	1					
ANR	155239	CompoundStatement		6:15:72:72	155209	1					
ANR	155240	ReturnStatement	return rval ;	541:2:11849:11860	155209	0	True				
ANR	155241	Identifier	rval		155209	0					
ANR	155242	ExpressionStatement	op_type = atoi ( op )	543:1:11866:11884	155209	4	True				
ANR	155243	AssignmentExpression	op_type = atoi ( op )		155209	0		=			
ANR	155244	Identifier	op_type		155209	0					
ANR	155245	CallExpression	atoi ( op )		155209	1					
ANR	155246	Callee	atoi		155209	0					
ANR	155247	Identifier	atoi		155209	0					
ANR	155248	ArgumentList	op		155209	1					
ANR	155249	Argument	op		155209	0					
ANR	155250	Identifier	op		155209	0					
ANR	155251	ExpressionStatement	free ( op )	544:1:11887:11895	155209	5	True				
ANR	155252	CallExpression	free ( op )		155209	0					
ANR	155253	Callee	free		155209	0					
ANR	155254	Identifier	free		155209	0					
ANR	155255	ArgumentList	op		155209	1					
ANR	155256	Argument	op		155209	0					
ANR	155257	Identifier	op		155209	0					
ANR	155258	ReturnStatement	return rval ;	545:1:11898:11909	155209	6	True				
ANR	155259	Identifier	rval		155209	0					
ANR	155260	ReturnType	int		155209	1					
ANR	155261	Identifier	ClassAdLogParser :: readHeader		155209	2					
ANR	155262	ParameterList	"FILE * fp , int & op_type"		155209	3					
ANR	155263	Parameter	FILE * fp	534:29:11748:11755	155209	0	True				
ANR	155264	ParameterType	FILE *		155209	0					
ANR	155265	Identifier	fp		155209	1					
ANR	155266	Parameter	int & op_type	534:39:11758:11769	155209	1	True				
ANR	155267	ParameterType	int &		155209	0					
ANR	155268	Identifier	op_type		155209	1					
ANR	155269	CFGEntryNode	ENTRY		155209		True				
ANR	155270	CFGExitNode	EXIT		155209		True				
ANR	155271	Symbol	atoi		155209						
ANR	155272	Symbol	op		155209						
ANR	155273	Symbol	NULL		155209						
ANR	155274	Symbol	fp		155209						
ANR	155275	Symbol	rval		155209						
ANR	155276	Symbol	readword		155209						
ANR	155277	Symbol	op_type		155209						
ANR	155278	Function	ClassAdLogParser :: readword	549:0:11915:12008							
ANR	155279	FunctionDef	"ClassAdLogParser :: readword (FILE * fp , char * & str)"		155278	0					
ANR	155280	CompoundStatement		551:0:11969:12008	155278	0					
ANR	155281	ReturnStatement	"return LogRecord :: readword ( fp , str ) ;"	552:1:11972:12006	155278	0	True				
ANR	155282	CallExpression	"LogRecord :: readword ( fp , str )"		155278	0					
ANR	155283	Callee	LogRecord :: readword		155278	0					
ANR	155284	Identifier	LogRecord :: readword		155278	0					
ANR	155285	ArgumentList	fp		155278	1					
ANR	155286	Argument	fp		155278	0					
ANR	155287	Identifier	fp		155278	0					
ANR	155288	Argument	str		155278	1					
ANR	155289	Identifier	str		155278	0					
ANR	155290	ReturnType	int		155278	1					
ANR	155291	Identifier	ClassAdLogParser :: readword		155278	2					
ANR	155292	ParameterList	"FILE * fp , char * & str"		155278	3					
ANR	155293	Parameter	FILE * fp	550:27:11946:11953	155278	0	True				
ANR	155294	ParameterType	FILE *		155278	0					
ANR	155295	Identifier	fp		155278	1					
ANR	155296	Parameter	char * & str	550:37:11956:11966	155278	1	True				
ANR	155297	ParameterType	char * &		155278	0					
ANR	155298	Identifier	str		155278	1					
ANR	155299	CFGEntryNode	ENTRY		155278		True				
ANR	155300	CFGExitNode	EXIT		155278		True				
ANR	155301	Symbol	str		155278						
ANR	155302	Symbol	LogRecord :: readword		155278						
ANR	155303	Symbol	fp		155278						
ANR	155304	Function	ClassAdLogParser :: readline	555:0:12011:12104							
ANR	155305	FunctionDef	"ClassAdLogParser :: readline (FILE * fp , char * & str)"		155304	0					
ANR	155306	CompoundStatement		557:0:12065:12104	155304	0					
ANR	155307	ReturnStatement	"return LogRecord :: readline ( fp , str ) ;"	558:1:12068:12102	155304	0	True				
ANR	155308	CallExpression	"LogRecord :: readline ( fp , str )"		155304	0					
ANR	155309	Callee	LogRecord :: readline		155304	0					
ANR	155310	Identifier	LogRecord :: readline		155304	0					
ANR	155311	ArgumentList	fp		155304	1					
ANR	155312	Argument	fp		155304	0					
ANR	155313	Identifier	fp		155304	0					
ANR	155314	Argument	str		155304	1					
ANR	155315	Identifier	str		155304	0					
ANR	155316	ReturnType	int		155304	1					
ANR	155317	Identifier	ClassAdLogParser :: readline		155304	2					
ANR	155318	ParameterList	"FILE * fp , char * & str"		155304	3					
ANR	155319	Parameter	FILE * fp	556:27:12042:12049	155304	0	True				
ANR	155320	ParameterType	FILE *		155304	0					
ANR	155321	Identifier	fp		155304	1					
ANR	155322	Parameter	char * & str	556:37:12052:12062	155304	1	True				
ANR	155323	ParameterType	char * &		155304	0					
ANR	155324	Identifier	str		155304	1					
ANR	155325	CFGEntryNode	ENTRY		155304		True				
ANR	155326	CFGExitNode	EXIT		155304		True				
ANR	155327	Symbol	str		155304						
ANR	155328	Symbol	LogRecord :: readline		155304						
ANR	155329	Symbol	fp		155304						
