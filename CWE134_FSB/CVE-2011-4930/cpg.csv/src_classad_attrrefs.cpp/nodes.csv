command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2501745	File	data/converged/CVE-2011-4930_htcondor/src_classad_attrrefs.cpp								
ANR	2501746	Function	AttributeReference :: AttributeReference	28:0:912:1015							
ANR	2501747	FunctionDef	AttributeReference :: AttributeReference ()		2501746	0					
ANR	2501748	CompoundStatement		30:0:954:1015	2501746	0					
ANR	2501749	ExpressionStatement	nodeKind = ATTRREF_NODE	31:1:957:980	2501746	0	True				
ANR	2501750	AssignmentExpression	nodeKind = ATTRREF_NODE		2501746	0		=			
ANR	2501751	Identifier	nodeKind		2501746	0					
ANR	2501752	Identifier	ATTRREF_NODE		2501746	1					
ANR	2501753	ExpressionStatement	expr = NULL	32:1:983:994	2501746	1	True				
ANR	2501754	AssignmentExpression	expr = NULL		2501746	0		=			
ANR	2501755	Identifier	expr		2501746	0					
ANR	2501756	Identifier	NULL		2501746	1					
ANR	2501757	ExpressionStatement	absolute = false	33:1:997:1013	2501746	2	True				
ANR	2501758	AssignmentExpression	absolute = false		2501746	0		=			
ANR	2501759	Identifier	absolute		2501746	0					
ANR	2501760	Identifier	false		2501746	1					
ANR	2501761	Identifier	AttributeReference :: AttributeReference		2501746	1					
ANR	2501762	ParameterList			2501746	2					
ANR	2501763	CFGEntryNode	ENTRY		2501746		True				
ANR	2501764	CFGExitNode	EXIT		2501746		True				
ANR	2501765	Symbol	NULL		2501746						
ANR	2501766	Symbol	ATTRREF_NODE		2501746						
ANR	2501767	Symbol	absolute		2501746						
ANR	2501768	Symbol	false		2501746						
ANR	2501769	Symbol	nodeKind		2501746						
ANR	2501770	Symbol	expr		2501746						
ANR	2501771	Function	AttributeReference :: AttributeReference	38:0:1080:1265							
ANR	2501772	FunctionDef	"AttributeReference :: AttributeReference (ExprTree * tree , const string & attrname , bool absolut)"		2501771	0					
ANR	2501773	CompoundStatement		40:0:1176:1265	2501771	0					
ANR	2501774	ExpressionStatement	nodeKind = ATTRREF_NODE	41:1:1179:1202	2501771	0	True				
ANR	2501775	AssignmentExpression	nodeKind = ATTRREF_NODE		2501771	0		=			
ANR	2501776	Identifier	nodeKind		2501771	0					
ANR	2501777	Identifier	ATTRREF_NODE		2501771	1					
ANR	2501778	ExpressionStatement	attributeStr = attrname	42:1:1205:1228	2501771	1	True				
ANR	2501779	AssignmentExpression	attributeStr = attrname		2501771	0		=			
ANR	2501780	Identifier	attributeStr		2501771	0					
ANR	2501781	Identifier	attrname		2501771	1					
ANR	2501782	ExpressionStatement	expr = tree	43:1:1231:1242	2501771	2	True				
ANR	2501783	AssignmentExpression	expr = tree		2501771	0		=			
ANR	2501784	Identifier	expr		2501771	0					
ANR	2501785	Identifier	tree		2501771	1					
ANR	2501786	ExpressionStatement	absolute = absolut	44:1:1245:1263	2501771	3	True				
ANR	2501787	AssignmentExpression	absolute = absolut		2501771	0		=			
ANR	2501788	Identifier	absolute		2501771	0					
ANR	2501789	Identifier	absolut		2501771	1					
ANR	2501790	Identifier	AttributeReference :: AttributeReference		2501771	1					
ANR	2501791	ParameterList	"ExprTree * tree , const string & attrname , bool absolut"		2501771	2					
ANR	2501792	Parameter	ExprTree * tree	39:20:1121:1134	2501771	0	True				
ANR	2501793	ParameterType	ExprTree *		2501771	0					
ANR	2501794	Identifier	tree		2501771	1					
ANR	2501795	Parameter	const string & attrname	39:36:1137:1158	2501771	1	True				
ANR	2501796	ParameterType	const string &		2501771	0					
ANR	2501797	Identifier	attrname		2501771	1					
ANR	2501798	Parameter	bool absolut	39:60:1161:1172	2501771	2	True				
ANR	2501799	ParameterType	bool		2501771	0					
ANR	2501800	Identifier	absolut		2501771	1					
ANR	2501801	CFGEntryNode	ENTRY		2501771		True				
ANR	2501802	CFGExitNode	EXIT		2501771		True				
ANR	2501803	Symbol	ATTRREF_NODE		2501771						
ANR	2501804	Symbol	absolute		2501771						
ANR	2501805	Symbol	tree		2501771						
ANR	2501806	Symbol	nodeKind		2501771						
ANR	2501807	Symbol	expr		2501771						
ANR	2501808	Symbol	attrname		2501771						
ANR	2501809	Symbol	attributeStr		2501771						
ANR	2501810	Symbol	absolut		2501771						
ANR	2501811	Function	AttributeReference :: AttributeReference	47:0:1268:1372							
ANR	2501812	FunctionDef	AttributeReference :: AttributeReference (const AttributeReference & ref)		2501811	0					
ANR	2501813	CompoundStatement		49:0:1339:1372	2501811	0					
ANR	2501814	ExpressionStatement	CopyFrom ( ref )	50:4:1345:1358	2501811	0	True				
ANR	2501815	CallExpression	CopyFrom ( ref )		2501811	0					
ANR	2501816	Callee	CopyFrom		2501811	0					
ANR	2501817	Identifier	CopyFrom		2501811	0					
ANR	2501818	ArgumentList	ref		2501811	1					
ANR	2501819	Argument	ref		2501811	0					
ANR	2501820	Identifier	ref		2501811	0					
ANR	2501821	ReturnStatement	return ;	51:4:1364:1370	2501811	1	True				
ANR	2501822	Identifier	AttributeReference :: AttributeReference		2501811	1					
ANR	2501823	ParameterList	const AttributeReference & ref		2501811	2					
ANR	2501824	Parameter	const AttributeReference & ref	48:19:1308:1336	2501811	0	True				
ANR	2501825	ParameterType	const AttributeReference &		2501811	0					
ANR	2501826	Identifier	ref		2501811	1					
ANR	2501827	CFGEntryNode	ENTRY		2501811		True				
ANR	2501828	CFGExitNode	EXIT		2501811		True				
ANR	2501829	Symbol	ref		2501811						
ANR	2501830	Function	AttributeReference :: ~AttributeReference	54:0:1375:1445							
ANR	2501831	FunctionDef	AttributeReference :: ~AttributeReference ()		2501830	0					
ANR	2501832	CompoundStatement		56:0:1418:1445	2501830	0					
ANR	2501833	IfStatement	if ( expr )		2501830	0					
ANR	2501834	Condition	expr	57:5:1425:1428	2501830	0	True				
ANR	2501835	Identifier	expr		2501830	0					
ANR	2501836	Statement	delete	57:12:1432:1437	2501830	1	True				
ANR	2501837	ExpressionStatement	expr	57:19:1439:1443	2501830	1	True				
ANR	2501838	Identifier	expr		2501830	0					
ANR	2501839	Identifier	AttributeReference :: ~AttributeReference		2501830	1					
ANR	2501840	ParameterList			2501830	2					
ANR	2501841	CFGEntryNode	ENTRY		2501830		True				
ANR	2501842	CFGExitNode	EXIT		2501830		True				
ANR	2501843	Symbol	expr		2501830						
ANR	2501844	Function	operator =	61:0:1489:1603							
ANR	2501845	FunctionDef	operator = (const AttributeReference & ref)		2501844	0					
ANR	2501846	CompoundStatement		62:0:1530:1603	2501844	0					
ANR	2501847	IfStatement	if ( this != & ref )		2501844	0					
ANR	2501848	Condition	this != & ref	63:8:1540:1551	2501844	0	True				
ANR	2501849	EqualityExpression	this != & ref		2501844	0		!=			
ANR	2501850	Identifier	this		2501844	0					
ANR	2501851	UnaryOperationExpression	& ref		2501844	1					
ANR	2501852	UnaryOperator	&		2501844	0					
ANR	2501853	Identifier	ref		2501844	1					
ANR	2501854	CompoundStatement		2:22:23:23	2501844	1					
ANR	2501855	ExpressionStatement	CopyFrom ( ref )	64:8:1564:1577	2501844	0	True				
ANR	2501856	CallExpression	CopyFrom ( ref )		2501844	0					
ANR	2501857	Callee	CopyFrom		2501844	0					
ANR	2501858	Identifier	CopyFrom		2501844	0					
ANR	2501859	ArgumentList	ref		2501844	1					
ANR	2501860	Argument	ref		2501844	0					
ANR	2501861	Identifier	ref		2501844	0					
ANR	2501862	ReturnStatement	return * this ;	66:4:1589:1601	2501844	1	True				
ANR	2501863	UnaryOperationExpression	* this		2501844	0					
ANR	2501864	UnaryOperator	*		2501844	0					
ANR	2501865	Identifier	this		2501844	1					
ANR	2501866	Identifier	operator =		2501844	1					
ANR	2501867	ParameterList	const AttributeReference & ref		2501844	2					
ANR	2501868	Parameter	const AttributeReference & ref	61:10:1499:1527	2501844	0	True				
ANR	2501869	ParameterType	const AttributeReference &		2501844	0					
ANR	2501870	Identifier	ref		2501844	1					
ANR	2501871	CFGEntryNode	ENTRY		2501844		True				
ANR	2501872	CFGExitNode	EXIT		2501844		True				
ANR	2501873	Symbol	* this		2501844						
ANR	2501874	Symbol	ref		2501844						
ANR	2501875	Symbol	this		2501844						
ANR	2501876	Symbol	& ref		2501844						
ANR	2501877	Function	AttributeReference :: Copy	70:0:1607:1920							
ANR	2501878	FunctionDef	AttributeReference :: Copy ()		2501877	0					
ANR	2501879	CompoundStatement		72:0:1652:1920	2501877	0					
ANR	2501880	IdentifierDeclStatement	AttributeReference * newTree = new AttributeReference ( ) ;	73:1:1655:1710	2501877	0	True				
ANR	2501881	IdentifierDecl	* newTree = new AttributeReference ( )		2501877	0					
ANR	2501882	IdentifierDeclType	AttributeReference *		2501877	0					
ANR	2501883	Identifier	newTree		2501877	1					
ANR	2501884	AssignmentExpression	* newTree = new AttributeReference ( )		2501877	2		=			
ANR	2501885	Identifier	newTree		2501877	0					
ANR	2501886	UnaryExpression	new AttributeReference ( )		2501877	1					
ANR	2501887	IfStatement	if ( newTree == 0 )		2501877	1					
ANR	2501888	Condition	newTree == 0	74:5:1717:1728	2501877	0	True				
ANR	2501889	EqualityExpression	newTree == 0		2501877	0		==			
ANR	2501890	Identifier	newTree		2501877	0					
ANR	2501891	PrimaryExpression	0		2501877	1					
ANR	2501892	CompoundStatement		3:19:78:78	2501877	1					
ANR	2501893	ExpressionStatement	CondorErrno = ERR_MEM_ALLOC_FAILED	75:2:1735:1769	2501877	0	True				
ANR	2501894	AssignmentExpression	CondorErrno = ERR_MEM_ALLOC_FAILED		2501877	0		=			
ANR	2501895	Identifier	CondorErrno		2501877	0					
ANR	2501896	Identifier	ERR_MEM_ALLOC_FAILED		2501877	1					
ANR	2501897	ExpressionStatement	"CondorErrMsg = """""	76:2:1773:1790	2501877	1	True				
ANR	2501898	AssignmentExpression	"CondorErrMsg = """""		2501877	0		=			
ANR	2501899	Identifier	CondorErrMsg		2501877	0					
ANR	2501900	PrimaryExpression	""""""		2501877	1					
ANR	2501901	ReturnStatement	return NULL ;	77:2:1794:1805	2501877	2	True				
ANR	2501902	Identifier	NULL		2501877	0					
ANR	2501903	IfStatement	if ( ! newTree -> CopyFrom ( * this ) )		2501877	2					
ANR	2501904	Condition	! newTree -> CopyFrom ( * this )	80:8:1819:1843	2501877	0	True				
ANR	2501905	UnaryOperationExpression	! newTree -> CopyFrom ( * this )		2501877	0					
ANR	2501906	UnaryOperator	!		2501877	0					
ANR	2501907	CallExpression	newTree -> CopyFrom ( * this )		2501877	1					
ANR	2501908	Callee	newTree -> CopyFrom		2501877	0					
ANR	2501909	PtrMemberAccess	newTree -> CopyFrom		2501877	0					
ANR	2501910	Identifier	newTree		2501877	0					
ANR	2501911	Identifier	CopyFrom		2501877	1					
ANR	2501912	ArgumentList	* this		2501877	1					
ANR	2501913	Argument	* this		2501877	0					
ANR	2501914	UnaryOperationExpression	* this		2501877	0					
ANR	2501915	UnaryOperator	*		2501877	0					
ANR	2501916	Identifier	this		2501877	1					
ANR	2501917	CompoundStatement		9:35:193:193	2501877	1					
ANR	2501918	Statement	delete	81:8:1856:1861	2501877	0	True				
ANR	2501919	ExpressionStatement	newTree	81:15:1863:1870	2501877	1	True				
ANR	2501920	Identifier	newTree		2501877	0					
ANR	2501921	ExpressionStatement	newTree = NULL	82:8:1880:1894	2501877	2	True				
ANR	2501922	AssignmentExpression	newTree = NULL		2501877	0		=			
ANR	2501923	Identifier	newTree		2501877	0					
ANR	2501924	Identifier	NULL		2501877	1					
ANR	2501925	ReturnStatement	return newTree ;	85:1:1904:1918	2501877	3	True				
ANR	2501926	Identifier	newTree		2501877	0					
ANR	2501927	ReturnType	ExprTree *		2501877	1					
ANR	2501928	Identifier	AttributeReference :: Copy		2501877	2					
ANR	2501929	ParameterList			2501877	3					
ANR	2501930	CFGEntryNode	ENTRY		2501877		True				
ANR	2501931	CFGExitNode	EXIT		2501877		True				
ANR	2501932	Symbol	* this		2501877						
ANR	2501933	Symbol	NULL		2501877						
ANR	2501934	Symbol	* newTree		2501877						
ANR	2501935	Symbol	newTree		2501877						
ANR	2501936	Symbol	CondorErrMsg		2501877						
ANR	2501937	Symbol	newTree -> CopyFrom		2501877						
ANR	2501938	Symbol	this		2501877						
ANR	2501939	Symbol	ERR_MEM_ALLOC_FAILED		2501877						
ANR	2501940	Symbol	CondorErrno		2501877						
ANR	2501941	Function	AttributeReference :: CopyFrom	88:0:1923:2248							
ANR	2501942	FunctionDef	AttributeReference :: CopyFrom (const AttributeReference & ref)		2501941	0					
ANR	2501943	CompoundStatement		90:0:1989:2248	2501941	0					
ANR	2501944	IdentifierDeclStatement	bool success ;	91:4:1995:2007	2501941	0	True				
ANR	2501945	IdentifierDecl	success		2501941	0					
ANR	2501946	IdentifierDeclType	bool		2501941	0					
ANR	2501947	Identifier	success		2501941	1					
ANR	2501948	ExpressionStatement	success = true	93:4:2014:2028	2501941	1	True				
ANR	2501949	AssignmentExpression	success = true		2501941	0		=			
ANR	2501950	Identifier	success		2501941	0					
ANR	2501951	Identifier	true		2501941	1					
ANR	2501952	ExpressionStatement	attributeStr = ref . attributeStr	95:1:2032:2063	2501941	2	True				
ANR	2501953	AssignmentExpression	attributeStr = ref . attributeStr		2501941	0		=			
ANR	2501954	Identifier	attributeStr		2501941	0					
ANR	2501955	MemberAccess	ref . attributeStr		2501941	1					
ANR	2501956	Identifier	ref		2501941	0					
ANR	2501957	Identifier	attributeStr		2501941	1					
ANR	2501958	IfStatement	if ( ref . expr && ( expr = ref . expr -> Copy ( ) ) == NULL )		2501941	3					
ANR	2501959	Condition	ref . expr && ( expr = ref . expr -> Copy ( ) ) == NULL	96:5:2070:2115	2501941	0	True				
ANR	2501960	AndExpression	ref . expr && ( expr = ref . expr -> Copy ( ) ) == NULL		2501941	0		&&			
ANR	2501961	MemberAccess	ref . expr		2501941	0					
ANR	2501962	Identifier	ref		2501941	0					
ANR	2501963	Identifier	expr		2501941	1					
ANR	2501964	EqualityExpression	( expr = ref . expr -> Copy ( ) ) == NULL		2501941	1		==			
ANR	2501965	AssignmentExpression	expr = ref . expr -> Copy ( )		2501941	0		=			
ANR	2501966	Identifier	expr		2501941	0					
ANR	2501967	CallExpression	ref . expr -> Copy ( )		2501941	1					
ANR	2501968	Callee	ref . expr -> Copy		2501941	0					
ANR	2501969	PtrMemberAccess	ref . expr -> Copy		2501941	0					
ANR	2501970	MemberAccess	ref . expr		2501941	0					
ANR	2501971	Identifier	ref		2501941	0					
ANR	2501972	Identifier	expr		2501941	1					
ANR	2501973	Identifier	Copy		2501941	1					
ANR	2501974	ArgumentList			2501941	1					
ANR	2501975	Identifier	NULL		2501941	1					
ANR	2501976	CompoundStatement		7:54:129:129	2501941	1					
ANR	2501977	ExpressionStatement	success = false	97:8:2129:2144	2501941	0	True				
ANR	2501978	AssignmentExpression	success = false		2501941	0		=			
ANR	2501979	Identifier	success		2501941	0					
ANR	2501980	Identifier	false		2501941	1					
ANR	2501981	ElseStatement	else		2501941	0					
ANR	2501982	CompoundStatement		9:8:164:164	2501941	0					
ANR	2501983	ExpressionStatement	ExprTree :: CopyFrom ( ref )	99:8:2164:2187	2501941	0	True				
ANR	2501984	CallExpression	ExprTree :: CopyFrom ( ref )		2501941	0					
ANR	2501985	Callee	ExprTree :: CopyFrom		2501941	0					
ANR	2501986	Identifier	ExprTree :: CopyFrom		2501941	0					
ANR	2501987	ArgumentList	ref		2501941	1					
ANR	2501988	Argument	ref		2501941	0					
ANR	2501989	Identifier	ref		2501941	0					
ANR	2501990	ExpressionStatement	absolute = ref . absolute	100:8:2197:2220	2501941	1	True				
ANR	2501991	AssignmentExpression	absolute = ref . absolute		2501941	0		=			
ANR	2501992	Identifier	absolute		2501941	0					
ANR	2501993	MemberAccess	ref . absolute		2501941	1					
ANR	2501994	Identifier	ref		2501941	0					
ANR	2501995	Identifier	absolute		2501941	1					
ANR	2501996	ReturnStatement	return success ;	102:4:2232:2246	2501941	4	True				
ANR	2501997	Identifier	success		2501941	0					
ANR	2501998	ReturnType	bool		2501941	1					
ANR	2501999	Identifier	AttributeReference :: CopyFrom		2501941	2					
ANR	2502000	ParameterList	const AttributeReference & ref		2501941	3					
ANR	2502001	Parameter	const AttributeReference & ref	89:9:1958:1986	2501941	0	True				
ANR	2502002	ParameterType	const AttributeReference &		2501941	0					
ANR	2502003	Identifier	ref		2501941	1					
ANR	2502004	CFGEntryNode	ENTRY		2501941		True				
ANR	2502005	CFGExitNode	EXIT		2501941		True				
ANR	2502006	Symbol	ref . absolute		2501941						
ANR	2502007	Symbol	NULL		2501941						
ANR	2502008	Symbol	false		2501941						
ANR	2502009	Symbol	* ref . expr		2501941						
ANR	2502010	Symbol	ref . expr -> Copy		2501941						
ANR	2502011	Symbol	ref . expr		2501941						
ANR	2502012	Symbol	ref		2501941						
ANR	2502013	Symbol	success		2501941						
ANR	2502014	Symbol	absolute		2501941						
ANR	2502015	Symbol	true		2501941						
ANR	2502016	Symbol	expr		2501941						
ANR	2502017	Symbol	attributeStr		2501941						
ANR	2502018	Symbol	* ref		2501941						
ANR	2502019	Symbol	ref . attributeStr		2501941						
ANR	2502020	Function	AttributeReference :: SameAs	105:0:2251:3048							
ANR	2502021	FunctionDef	AttributeReference :: SameAs (const ExprTree * tree)		2502020	0					
ANR	2502022	CompoundStatement		107:0:2312:3048	2502020	0					
ANR	2502023	IdentifierDeclStatement	bool is_same ;	108:4:2318:2330	2502020	0	True				
ANR	2502024	IdentifierDecl	is_same		2502020	0					
ANR	2502025	IdentifierDeclType	bool		2502020	0					
ANR	2502026	Identifier	is_same		2502020	1					
ANR	2502027	IfStatement	if ( tree -> GetKind ( ) != ATTRREF_NODE )		2502020	1					
ANR	2502028	Condition	tree -> GetKind ( ) != ATTRREF_NODE	110:8:2341:2371	2502020	0	True				
ANR	2502029	EqualityExpression	tree -> GetKind ( ) != ATTRREF_NODE		2502020	0		!=			
ANR	2502030	CallExpression	tree -> GetKind ( )		2502020	0					
ANR	2502031	Callee	tree -> GetKind		2502020	0					
ANR	2502032	PtrMemberAccess	tree -> GetKind		2502020	0					
ANR	2502033	Identifier	tree		2502020	0					
ANR	2502034	Identifier	GetKind		2502020	1					
ANR	2502035	ArgumentList			2502020	1					
ANR	2502036	Identifier	ATTRREF_NODE		2502020	1					
ANR	2502037	CompoundStatement		4:41:61:61	2502020	1					
ANR	2502038	ExpressionStatement	is_same = false	111:8:2384:2399	2502020	0	True				
ANR	2502039	AssignmentExpression	is_same = false		2502020	0		=			
ANR	2502040	Identifier	is_same		2502020	0					
ANR	2502041	Identifier	false		2502020	1					
ANR	2502042	ElseStatement	else		2502020	0					
ANR	2502043	CompoundStatement		7:8:109:180	2502020	0					
ANR	2502044	IdentifierDeclStatement	const AttributeReference * other_ref = ( const AttributeReference * ) tree ;	113:8:2422:2493	2502020	0	True				
ANR	2502045	IdentifierDecl	* other_ref = ( const AttributeReference * ) tree		2502020	0					
ANR	2502046	IdentifierDeclType	const AttributeReference *		2502020	0					
ANR	2502047	Identifier	other_ref		2502020	1					
ANR	2502048	AssignmentExpression	* other_ref = ( const AttributeReference * ) tree		2502020	2		=			
ANR	2502049	Identifier	other_ref		2502020	0					
ANR	2502050	CastExpression	( const AttributeReference * ) tree		2502020	1					
ANR	2502051	CastTarget	const AttributeReference *		2502020	0					
ANR	2502052	Identifier	tree		2502020	1					
ANR	2502053	IfStatement	if ( absolute != other_ref -> absolute || attributeStr != other_ref -> attributeStr )		2502020	1					
ANR	2502054	Condition	absolute != other_ref -> absolute || attributeStr != other_ref -> attributeStr	115:15:2519:2608	2502020	0	True				
ANR	2502055	OrExpression	absolute != other_ref -> absolute || attributeStr != other_ref -> attributeStr		2502020	0		||			
ANR	2502056	EqualityExpression	absolute != other_ref -> absolute		2502020	0		!=			
ANR	2502057	Identifier	absolute		2502020	0					
ANR	2502058	PtrMemberAccess	other_ref -> absolute		2502020	1					
ANR	2502059	Identifier	other_ref		2502020	0					
ANR	2502060	Identifier	absolute		2502020	1					
ANR	2502061	EqualityExpression	attributeStr != other_ref -> attributeStr		2502020	1		!=			
ANR	2502062	Identifier	attributeStr		2502020	0					
ANR	2502063	PtrMemberAccess	other_ref -> attributeStr		2502020	1					
ANR	2502064	Identifier	other_ref		2502020	0					
ANR	2502065	Identifier	attributeStr		2502020	1					
ANR	2502066	CompoundStatement		10:56:298:298	2502020	1					
ANR	2502067	ExpressionStatement	is_same = false	117:12:2625:2640	2502020	0	True				
ANR	2502068	AssignmentExpression	is_same = false		2502020	0		=			
ANR	2502069	Identifier	is_same		2502020	0					
ANR	2502070	Identifier	false		2502020	1					
ANR	2502071	ElseStatement	else		2502020	0					
ANR	2502072	IfStatement	if ( ( expr == NULL && other_ref -> expr == NULL ) || ( expr == other_ref -> expr ) || ( expr != NULL && other_ref -> expr != NULL && expr -> SameAs ( other_ref -> expr ) ) )		2502020	0					
ANR	2502073	Condition	( expr == NULL && other_ref -> expr == NULL ) || ( expr == other_ref -> expr ) || ( expr != NULL && other_ref -> expr != NULL && expr -> SameAs ( other_ref -> expr ) )	118:23:2665:2852	2502020	0	True				
ANR	2502074	OrExpression	( expr == NULL && other_ref -> expr == NULL ) || ( expr == other_ref -> expr ) || ( expr != NULL && other_ref -> expr != NULL && expr -> SameAs ( other_ref -> expr ) )		2502020	0		||			
ANR	2502075	AndExpression	expr == NULL && other_ref -> expr == NULL		2502020	0		&&			
ANR	2502076	EqualityExpression	expr == NULL		2502020	0		==			
ANR	2502077	Identifier	expr		2502020	0					
ANR	2502078	Identifier	NULL		2502020	1					
ANR	2502079	EqualityExpression	other_ref -> expr == NULL		2502020	1		==			
ANR	2502080	PtrMemberAccess	other_ref -> expr		2502020	0					
ANR	2502081	Identifier	other_ref		2502020	0					
ANR	2502082	Identifier	expr		2502020	1					
ANR	2502083	Identifier	NULL		2502020	1					
ANR	2502084	OrExpression	( expr == other_ref -> expr ) || ( expr != NULL && other_ref -> expr != NULL && expr -> SameAs ( other_ref -> expr ) )		2502020	1		||			
ANR	2502085	EqualityExpression	expr == other_ref -> expr		2502020	0		==			
ANR	2502086	Identifier	expr		2502020	0					
ANR	2502087	PtrMemberAccess	other_ref -> expr		2502020	1					
ANR	2502088	Identifier	other_ref		2502020	0					
ANR	2502089	Identifier	expr		2502020	1					
ANR	2502090	AndExpression	expr != NULL && other_ref -> expr != NULL && expr -> SameAs ( other_ref -> expr )		2502020	1		&&			
ANR	2502091	EqualityExpression	expr != NULL		2502020	0		!=			
ANR	2502092	Identifier	expr		2502020	0					
ANR	2502093	Identifier	NULL		2502020	1					
ANR	2502094	AndExpression	other_ref -> expr != NULL && expr -> SameAs ( other_ref -> expr )		2502020	1		&&			
ANR	2502095	EqualityExpression	other_ref -> expr != NULL		2502020	0		!=			
ANR	2502096	PtrMemberAccess	other_ref -> expr		2502020	0					
ANR	2502097	Identifier	other_ref		2502020	0					
ANR	2502098	Identifier	expr		2502020	1					
ANR	2502099	Identifier	NULL		2502020	1					
ANR	2502100	CallExpression	expr -> SameAs ( other_ref -> expr )		2502020	1					
ANR	2502101	Callee	expr -> SameAs		2502020	0					
ANR	2502102	PtrMemberAccess	expr -> SameAs		2502020	0					
ANR	2502103	Identifier	expr		2502020	0					
ANR	2502104	Identifier	SameAs		2502020	1					
ANR	2502105	ArgumentList	other_ref -> expr		2502020	1					
ANR	2502106	Argument	other_ref -> expr		2502020	0					
ANR	2502107	PtrMemberAccess	other_ref -> expr		2502020	0					
ANR	2502108	Identifier	other_ref		2502020	0					
ANR	2502109	Identifier	expr		2502020	1					
ANR	2502110	CompoundStatement		14:99:542:542	2502020	1					
ANR	2502111	ExpressionStatement	is_same = true	122:12:2949:2963	2502020	0	True				
ANR	2502112	AssignmentExpression	is_same = true		2502020	0		=			
ANR	2502113	Identifier	is_same		2502020	0					
ANR	2502114	Identifier	true		2502020	1					
ANR	2502115	ElseStatement	else		2502020	0					
ANR	2502116	CompoundStatement		17:15:667:667	2502020	0					
ANR	2502117	ExpressionStatement	is_same = false	124:12:2994:3009	2502020	0	True				
ANR	2502118	AssignmentExpression	is_same = false		2502020	0		=			
ANR	2502119	Identifier	is_same		2502020	0					
ANR	2502120	Identifier	false		2502020	1					
ANR	2502121	ReturnStatement	return is_same ;	128:4:3032:3046	2502020	2	True				
ANR	2502122	Identifier	is_same		2502020	0					
ANR	2502123	ReturnType	bool		2502020	1					
ANR	2502124	Identifier	AttributeReference :: SameAs		2502020	2					
ANR	2502125	ParameterList	const ExprTree * tree		2502020	3					
ANR	2502126	Parameter	const ExprTree * tree	106:7:2284:2303	2502020	0	True				
ANR	2502127	ParameterType	const ExprTree *		2502020	0					
ANR	2502128	Identifier	tree		2502020	1					
ANR	2502129	CFGEntryNode	ENTRY		2502020		True				
ANR	2502130	CFGExitNode	EXIT		2502020		True				
ANR	2502131	Symbol	NULL		2502020						
ANR	2502132	Symbol	is_same		2502020						
ANR	2502133	Symbol	tree		2502020						
ANR	2502134	Symbol	false		2502020						
ANR	2502135	Symbol	other_ref -> attributeStr		2502020						
ANR	2502136	Symbol	other_ref		2502020						
ANR	2502137	Symbol	* tree		2502020						
ANR	2502138	Symbol	expr -> SameAs		2502020						
ANR	2502139	Symbol	* other_ref		2502020						
ANR	2502140	Symbol	other_ref -> expr		2502020						
ANR	2502141	Symbol	ATTRREF_NODE		2502020						
ANR	2502142	Symbol	tree -> GetKind		2502020						
ANR	2502143	Symbol	other_ref -> absolute		2502020						
ANR	2502144	Symbol	* expr		2502020						
ANR	2502145	Symbol	absolute		2502020						
ANR	2502146	Symbol	true		2502020						
ANR	2502147	Symbol	expr		2502020						
ANR	2502148	Symbol	attributeStr		2502020						
ANR	2502149	Function	operator ==	131:0:3051:3165							
ANR	2502150	FunctionDef	"operator == (const AttributeReference & ref1 , const AttributeReference & ref2)"		2502149	0					
ANR	2502151	CompoundStatement		133:0:3132:3165	2502149	0					
ANR	2502152	ReturnStatement	return ref1 . SameAs ( & ref2 ) ;	134:4:3138:3163	2502149	0	True				
ANR	2502153	CallExpression	ref1 . SameAs ( & ref2 )		2502149	0					
ANR	2502154	Callee	ref1 . SameAs		2502149	0					
ANR	2502155	MemberAccess	ref1 . SameAs		2502149	0					
ANR	2502156	Identifier	ref1		2502149	0					
ANR	2502157	Identifier	SameAs		2502149	1					
ANR	2502158	ArgumentList	& ref2		2502149	1					
ANR	2502159	Argument	& ref2		2502149	0					
ANR	2502160	UnaryOperationExpression	& ref2		2502149	0					
ANR	2502161	UnaryOperator	&		2502149	0					
ANR	2502162	Identifier	ref2		2502149	1					
ANR	2502163	ReturnType	bool		2502149	1					
ANR	2502164	Identifier	operator ==		2502149	2					
ANR	2502165	ParameterList	"const AttributeReference & ref1 , const AttributeReference & ref2"		2502149	3					
ANR	2502166	Parameter	const AttributeReference & ref1	132:11:3068:3097	2502149	0	True				
ANR	2502167	ParameterType	const AttributeReference &		2502149	0					
ANR	2502168	Identifier	ref1		2502149	1					
ANR	2502169	Parameter	const AttributeReference & ref2	132:43:3100:3129	2502149	1	True				
ANR	2502170	ParameterType	const AttributeReference &		2502149	0					
ANR	2502171	Identifier	ref2		2502149	1					
ANR	2502172	CFGEntryNode	ENTRY		2502149		True				
ANR	2502173	CFGExitNode	EXIT		2502149		True				
ANR	2502174	Symbol	ref1 . SameAs		2502149						
ANR	2502175	Symbol	& ref2		2502149						
ANR	2502176	Symbol	ref2		2502149						
ANR	2502177	Symbol	ref1		2502149						
ANR	2502178	Function	AttributeReference :: _SetParentScope	137:0:3168:3282							
ANR	2502179	FunctionDef	AttributeReference :: _SetParentScope (const ClassAd * parent)		2502178	0					
ANR	2502180	CompoundStatement		139:0:3236:3282	2502178	0					
ANR	2502181	IfStatement	if ( expr )		2502178	0					
ANR	2502182	Condition	expr	140:5:3243:3246	2502178	0	True				
ANR	2502183	Identifier	expr		2502178	0					
ANR	2502184	ExpressionStatement	expr -> SetParentScope ( parent )	140:12:3250:3280	2502178	1	True				
ANR	2502185	CallExpression	expr -> SetParentScope ( parent )		2502178	0					
ANR	2502186	Callee	expr -> SetParentScope		2502178	0					
ANR	2502187	PtrMemberAccess	expr -> SetParentScope		2502178	0					
ANR	2502188	Identifier	expr		2502178	0					
ANR	2502189	Identifier	SetParentScope		2502178	1					
ANR	2502190	ArgumentList	parent		2502178	1					
ANR	2502191	Argument	parent		2502178	0					
ANR	2502192	Identifier	parent		2502178	0					
ANR	2502193	ReturnType	void		2502178	1					
ANR	2502194	Identifier	AttributeReference :: _SetParentScope		2502178	2					
ANR	2502195	ParameterList	const ClassAd * parent		2502178	3					
ANR	2502196	Parameter	const ClassAd * parent	138:17:3211:3231	2502178	0	True				
ANR	2502197	ParameterType	const ClassAd *		2502178	0					
ANR	2502198	Identifier	parent		2502178	1					
ANR	2502199	CFGEntryNode	ENTRY		2502178		True				
ANR	2502200	CFGExitNode	EXIT		2502178		True				
ANR	2502201	Symbol	parent		2502178						
ANR	2502202	Symbol	expr		2502178						
ANR	2502203	Function	AttributeReference :: GetComponents	144:0:3286:3431							
ANR	2502204	FunctionDef	"AttributeReference :: GetComponents (ExprTree * & tree , string & attr , bool & abs)"		2502203	0					
ANR	2502205	CompoundStatement		146:0:3376:3431	2502203	0					
ANR	2502206	ExpressionStatement	tree = expr	147:1:3379:3390	2502203	0	True				
ANR	2502207	AssignmentExpression	tree = expr		2502203	0		=			
ANR	2502208	Identifier	tree		2502203	0					
ANR	2502209	Identifier	expr		2502203	1					
ANR	2502210	ExpressionStatement	attr = attributeStr	148:1:3393:3412	2502203	1	True				
ANR	2502211	AssignmentExpression	attr = attributeStr		2502203	0		=			
ANR	2502212	Identifier	attr		2502203	0					
ANR	2502213	Identifier	attributeStr		2502203	1					
ANR	2502214	ExpressionStatement	abs = absolute	149:1:3415:3429	2502203	2	True				
ANR	2502215	AssignmentExpression	abs = absolute		2502203	0		=			
ANR	2502216	Identifier	abs		2502203	0					
ANR	2502217	Identifier	absolute		2502203	1					
ANR	2502218	ReturnType	void		2502203	1					
ANR	2502219	Identifier	AttributeReference :: GetComponents		2502203	2					
ANR	2502220	ParameterList	"ExprTree * & tree , string & attr , bool & abs"		2502203	3					
ANR	2502221	Parameter	ExprTree * & tree	145:15:3327:3341	2502203	0	True				
ANR	2502222	ParameterType	ExprTree * &		2502203	0					
ANR	2502223	Identifier	tree		2502203	1					
ANR	2502224	Parameter	string & attr	145:32:3344:3355	2502203	1	True				
ANR	2502225	ParameterType	string &		2502203	0					
ANR	2502226	Identifier	attr		2502203	1					
ANR	2502227	Parameter	bool & abs	145:46:3358:3366	2502203	2	True				
ANR	2502228	ParameterType	bool &		2502203	0					
ANR	2502229	Identifier	abs		2502203	1					
ANR	2502230	CFGEntryNode	ENTRY		2502203		True				
ANR	2502231	CFGExitNode	EXIT		2502203		True				
ANR	2502232	Symbol	abs		2502203						
ANR	2502233	Symbol	absolute		2502203						
ANR	2502234	Symbol	tree		2502203						
ANR	2502235	Symbol	expr		2502203						
ANR	2502236	Symbol	attr		2502203						
ANR	2502237	Symbol	attributeStr		2502203						
ANR	2502238	Function	AttributeReference :: _Evaluate	153:0:3435:4303							
ANR	2502239	FunctionDef	"AttributeReference :: _Evaluate (EvalState & state , Value & val)"		2502238	0					
ANR	2502240	CompoundStatement		155:0:3508:4303	2502238	0					
ANR	2502241	IdentifierDeclStatement	ExprTree * tree ;	156:1:3511:3525	2502238	0	True				
ANR	2502242	IdentifierDecl	* tree		2502238	0					
ANR	2502243	IdentifierDeclType	ExprTree *		2502238	0					
ANR	2502244	Identifier	tree		2502238	1					
ANR	2502245	IdentifierDeclStatement	ExprTree * dummy ;	157:1:3529:3544	2502238	1	True				
ANR	2502246	IdentifierDecl	* dummy		2502238	0					
ANR	2502247	IdentifierDeclType	ExprTree *		2502238	0					
ANR	2502248	Identifier	dummy		2502238	1					
ANR	2502249	IdentifierDeclStatement	const ClassAd * curAd ;	158:1:3547:3567	2502238	2	True				
ANR	2502250	IdentifierDecl	* curAd		2502238	0					
ANR	2502251	IdentifierDeclType	const ClassAd *		2502238	0					
ANR	2502252	Identifier	curAd		2502238	1					
ANR	2502253	IdentifierDeclStatement	bool rval ;	159:1:3570:3580	2502238	3	True				
ANR	2502254	IdentifierDecl	rval		2502238	0					
ANR	2502255	IdentifierDeclType	bool		2502238	0					
ANR	2502256	Identifier	rval		2502238	1					
ANR	2502257	ExpressionStatement	curAd = state . curAd	162:1:3626:3645	2502238	4	True				
ANR	2502258	AssignmentExpression	curAd = state . curAd		2502238	0		=			
ANR	2502259	Identifier	curAd		2502238	0					
ANR	2502260	MemberAccess	state . curAd		2502238	1					
ANR	2502261	Identifier	state		2502238	0					
ANR	2502262	Identifier	curAd		2502238	1					
ANR	2502263	SwitchStatement	"switch ( FindExpr ( state , tree , dummy , false ) )"		2502238	5					
ANR	2502264	Condition	"FindExpr ( state , tree , dummy , false )"	163:9:3656:3692	2502238	0	True				
ANR	2502265	CallExpression	"FindExpr ( state , tree , dummy , false )"		2502238	0					
ANR	2502266	Callee	FindExpr		2502238	0					
ANR	2502267	Identifier	FindExpr		2502238	0					
ANR	2502268	ArgumentList	state		2502238	1					
ANR	2502269	Argument	state		2502238	0					
ANR	2502270	Identifier	state		2502238	0					
ANR	2502271	Argument	tree		2502238	1					
ANR	2502272	Identifier	tree		2502238	0					
ANR	2502273	Argument	dummy		2502238	2					
ANR	2502274	Identifier	dummy		2502238	0					
ANR	2502275	Argument	false		2502238	3					
ANR	2502276	Identifier	false		2502238	0					
ANR	2502277	CompoundStatement		9:49:187:187	2502238	1					
ANR	2502278	Label	case EVAL_FAIL :	164:2:3700:3714	2502238	0	True				
ANR	2502279	Identifier	EVAL_FAIL		2502238	0					
ANR	2502280	ReturnStatement	return false ;	165:3:3719:3731	2502238	1	True				
ANR	2502281	Identifier	false		2502238	0					
ANR	2502282	Label	case EVAL_ERROR :	167:2:3736:3751	2502238	2	True				
ANR	2502283	Identifier	EVAL_ERROR		2502238	0					
ANR	2502284	Label	case PROP_ERROR :	168:2:3755:3770	2502238	3	True				
ANR	2502285	Identifier	PROP_ERROR		2502238	0					
ANR	2502286	ExpressionStatement	val . SetErrorValue ( )	169:3:3775:3794	2502238	4	True				
ANR	2502287	CallExpression	val . SetErrorValue ( )		2502238	0					
ANR	2502288	Callee	val . SetErrorValue		2502238	0					
ANR	2502289	MemberAccess	val . SetErrorValue		2502238	0					
ANR	2502290	Identifier	val		2502238	0					
ANR	2502291	Identifier	SetErrorValue		2502238	1					
ANR	2502292	ArgumentList			2502238	1					
ANR	2502293	ExpressionStatement	state . curAd = curAd	170:3:3799:3818	2502238	5	True				
ANR	2502294	AssignmentExpression	state . curAd = curAd		2502238	0		=			
ANR	2502295	MemberAccess	state . curAd		2502238	0					
ANR	2502296	Identifier	state		2502238	0					
ANR	2502297	Identifier	curAd		2502238	1					
ANR	2502298	Identifier	curAd		2502238	1					
ANR	2502299	ReturnStatement	return true ;	171:3:3823:3834	2502238	6	True				
ANR	2502300	Identifier	true		2502238	0					
ANR	2502301	Label	case EVAL_UNDEF :	173:2:3839:3854	2502238	7	True				
ANR	2502302	Identifier	EVAL_UNDEF		2502238	0					
ANR	2502303	Label	case PROP_UNDEF :	174:2:3858:3873	2502238	8	True				
ANR	2502304	Identifier	PROP_UNDEF		2502238	0					
ANR	2502305	ExpressionStatement	val . SetUndefinedValue ( )	175:3:3878:3901	2502238	9	True				
ANR	2502306	CallExpression	val . SetUndefinedValue ( )		2502238	0					
ANR	2502307	Callee	val . SetUndefinedValue		2502238	0					
ANR	2502308	MemberAccess	val . SetUndefinedValue		2502238	0					
ANR	2502309	Identifier	val		2502238	0					
ANR	2502310	Identifier	SetUndefinedValue		2502238	1					
ANR	2502311	ArgumentList			2502238	1					
ANR	2502312	ExpressionStatement	state . curAd = curAd	176:3:3906:3925	2502238	10	True				
ANR	2502313	AssignmentExpression	state . curAd = curAd		2502238	0		=			
ANR	2502314	MemberAccess	state . curAd		2502238	0					
ANR	2502315	Identifier	state		2502238	0					
ANR	2502316	Identifier	curAd		2502238	1					
ANR	2502317	Identifier	curAd		2502238	1					
ANR	2502318	ReturnStatement	return true ;	177:3:3930:3941	2502238	11	True				
ANR	2502319	Identifier	true		2502238	0					
ANR	2502320	Label	case EVAL_OK :	179:2:3946:3958	2502238	12	True				
ANR	2502321	Identifier	EVAL_OK		2502238	0					
ANR	2502322	CompoundStatement		26:2:454:454	2502238	13					
ANR	2502323	IfStatement	if ( state . depth_remaining <= 0 )		2502238	0					
ANR	2502324	Condition	state . depth_remaining <= 0	181:7:3972:3997	2502238	0	True				
ANR	2502325	RelationalExpression	state . depth_remaining <= 0		2502238	0		<=			
ANR	2502326	MemberAccess	state . depth_remaining		2502238	0					
ANR	2502327	Identifier	state		2502238	0					
ANR	2502328	Identifier	depth_remaining		2502238	1					
ANR	2502329	PrimaryExpression	0		2502238	1					
ANR	2502330	CompoundStatement		27:36:492:492	2502238	1					
ANR	2502331	ExpressionStatement	val . SetErrorValue ( )	182:4:4007:4026	2502238	0	True				
ANR	2502332	CallExpression	val . SetErrorValue ( )		2502238	0					
ANR	2502333	Callee	val . SetErrorValue		2502238	0					
ANR	2502334	MemberAccess	val . SetErrorValue		2502238	0					
ANR	2502335	Identifier	val		2502238	0					
ANR	2502336	Identifier	SetErrorValue		2502238	1					
ANR	2502337	ArgumentList			2502238	1					
ANR	2502338	ExpressionStatement	state . curAd = curAd	183:4:4032:4051	2502238	1	True				
ANR	2502339	AssignmentExpression	state . curAd = curAd		2502238	0		=			
ANR	2502340	MemberAccess	state . curAd		2502238	0					
ANR	2502341	Identifier	state		2502238	0					
ANR	2502342	Identifier	curAd		2502238	1					
ANR	2502343	Identifier	curAd		2502238	1					
ANR	2502344	ReturnStatement	return false ;	184:4:4057:4069	2502238	2	True				
ANR	2502345	Identifier	false		2502238	0					
ANR	2502346	ExpressionStatement	state . depth_remaining --	186:3:4079:4102	2502238	1	True				
ANR	2502347	PostIncDecOperationExpression	state . depth_remaining --		2502238	0					
ANR	2502348	MemberAccess	state . depth_remaining		2502238	0					
ANR	2502349	Identifier	state		2502238	0					
ANR	2502350	Identifier	depth_remaining		2502238	1					
ANR	2502351	IncDec	--		2502238	1					
ANR	2502352	ExpressionStatement	"rval = tree -> Evaluate ( state , val )"	188:3:4108:4143	2502238	2	True				
ANR	2502353	AssignmentExpression	"rval = tree -> Evaluate ( state , val )"		2502238	0		=			
ANR	2502354	Identifier	rval		2502238	0					
ANR	2502355	CallExpression	"tree -> Evaluate ( state , val )"		2502238	1					
ANR	2502356	Callee	tree -> Evaluate		2502238	0					
ANR	2502357	PtrMemberAccess	tree -> Evaluate		2502238	0					
ANR	2502358	Identifier	tree		2502238	0					
ANR	2502359	Identifier	Evaluate		2502238	1					
ANR	2502360	ArgumentList	state		2502238	1					
ANR	2502361	Argument	state		2502238	0					
ANR	2502362	Identifier	state		2502238	0					
ANR	2502363	Argument	val		2502238	1					
ANR	2502364	Identifier	val		2502238	0					
ANR	2502365	ExpressionStatement	state . depth_remaining ++	190:3:4149:4172	2502238	3	True				
ANR	2502366	PostIncDecOperationExpression	state . depth_remaining ++		2502238	0					
ANR	2502367	MemberAccess	state . depth_remaining		2502238	0					
ANR	2502368	Identifier	state		2502238	0					
ANR	2502369	Identifier	depth_remaining		2502238	1					
ANR	2502370	IncDec	++		2502238	1					
ANR	2502371	ExpressionStatement	state . curAd = curAd	192:3:4178:4197	2502238	4	True				
ANR	2502372	AssignmentExpression	state . curAd = curAd		2502238	0		=			
ANR	2502373	MemberAccess	state . curAd		2502238	0					
ANR	2502374	Identifier	state		2502238	0					
ANR	2502375	Identifier	curAd		2502238	1					
ANR	2502376	Identifier	curAd		2502238	1					
ANR	2502377	ReturnStatement	return rval ;	194:3:4203:4214	2502238	5	True				
ANR	2502378	Identifier	rval		2502238	0					
ANR	2502379	Label	default :	196:2:4222:4229	2502238	14	True				
ANR	2502380	Identifier	default		2502238	0					
ANR	2502381	ExpressionStatement	"CLASSAD_EXCEPT ( ""ClassAd:  Should not reach here"" )"	196:12:4232:4283	2502238	15	True				
ANR	2502382	CallExpression	"CLASSAD_EXCEPT ( ""ClassAd:  Should not reach here"" )"		2502238	0					
ANR	2502383	Callee	CLASSAD_EXCEPT		2502238	0					
ANR	2502384	Identifier	CLASSAD_EXCEPT		2502238	0					
ANR	2502385	ArgumentList	"""ClassAd:  Should not reach here"""		2502238	1					
ANR	2502386	Argument	"""ClassAd:  Should not reach here"""		2502238	0					
ANR	2502387	PrimaryExpression	"""ClassAd:  Should not reach here"""		2502238	0					
ANR	2502388	ReturnStatement	return false ;	198:1:4289:4301	2502238	6	True				
ANR	2502389	Identifier	false		2502238	0					
ANR	2502390	ReturnType	bool		2502238	1					
ANR	2502391	Identifier	AttributeReference :: _Evaluate		2502238	2					
ANR	2502392	ParameterList	"EvalState & state , Value & val"		2502238	3					
ANR	2502393	Parameter	EvalState & state	154:11:3472:3487	2502238	0	True				
ANR	2502394	ParameterType	EvalState &		2502238	0					
ANR	2502395	Identifier	state		2502238	1					
ANR	2502396	Parameter	Value & val	154:29:3490:3499	2502238	1	True				
ANR	2502397	ParameterType	Value &		2502238	0					
ANR	2502398	Identifier	val		2502238	1					
ANR	2502399	CFGEntryNode	ENTRY		2502238		True				
ANR	2502400	CFGExitNode	EXIT		2502238		True				
ANR	2502401	Symbol	val		2502238						
ANR	2502402	Symbol	tree		2502238						
ANR	2502403	Symbol	false		2502238						
ANR	2502404	Symbol	curAd		2502238						
ANR	2502405	Symbol	dummy		2502238						
ANR	2502406	Symbol	state . curAd		2502238						
ANR	2502407	Symbol	* tree		2502238						
ANR	2502408	Symbol	state . depth_remaining		2502238						
ANR	2502409	Symbol	FindExpr		2502238						
ANR	2502410	Symbol	true		2502238						
ANR	2502411	Symbol	tree -> Evaluate		2502238						
ANR	2502412	Symbol	rval		2502238						
ANR	2502413	Symbol	state		2502238						
ANR	2502414	Function	AttributeReference :: _Evaluate	202:0:4307:5339							
ANR	2502415	FunctionDef	"AttributeReference :: _Evaluate (EvalState & state , Value & val , ExprTree * & sig)"		2502414	0					
ANR	2502416	CompoundStatement		204:0:4397:5339	2502414	0					
ANR	2502417	IdentifierDeclStatement	ExprTree * tree ;	205:1:4400:4414	2502414	0	True				
ANR	2502418	IdentifierDecl	* tree		2502414	0					
ANR	2502419	IdentifierDeclType	ExprTree *		2502414	0					
ANR	2502420	Identifier	tree		2502414	1					
ANR	2502421	IdentifierDeclStatement	ExprTree * exprSig ;	206:1:4417:4434	2502414	1	True				
ANR	2502422	IdentifierDecl	* exprSig		2502414	0					
ANR	2502423	IdentifierDeclType	ExprTree *		2502414	0					
ANR	2502424	Identifier	exprSig		2502414	1					
ANR	2502425	IdentifierDeclStatement	const ClassAd * curAd ;	207:1:4437:4457	2502414	2	True				
ANR	2502426	IdentifierDecl	* curAd		2502414	0					
ANR	2502427	IdentifierDeclType	const ClassAd *		2502414	0					
ANR	2502428	Identifier	curAd		2502414	1					
ANR	2502429	IdentifierDeclStatement	bool rval ;	208:1:4460:4470	2502414	3	True				
ANR	2502430	IdentifierDecl	rval		2502414	0					
ANR	2502431	IdentifierDeclType	bool		2502414	0					
ANR	2502432	Identifier	rval		2502414	1					
ANR	2502433	ExpressionStatement	curAd = state . curAd	210:1:4474:4493	2502414	4	True				
ANR	2502434	AssignmentExpression	curAd = state . curAd		2502414	0		=			
ANR	2502435	Identifier	curAd		2502414	0					
ANR	2502436	MemberAccess	state . curAd		2502414	1					
ANR	2502437	Identifier	state		2502414	0					
ANR	2502438	Identifier	curAd		2502414	1					
ANR	2502439	ExpressionStatement	exprSig = NULL	211:1:4496:4510	2502414	5	True				
ANR	2502440	AssignmentExpression	exprSig = NULL		2502414	0		=			
ANR	2502441	Identifier	exprSig		2502414	0					
ANR	2502442	Identifier	NULL		2502414	1					
ANR	2502443	ExpressionStatement	rval = true	212:1:4513:4525	2502414	6	True				
ANR	2502444	AssignmentExpression	rval = true		2502414	0		=			
ANR	2502445	Identifier	rval		2502414	0					
ANR	2502446	Identifier	true		2502414	1					
ANR	2502447	SwitchStatement	"switch ( FindExpr ( state , tree , exprSig , true ) )"		2502414	7					
ANR	2502448	Condition	"FindExpr ( state , tree , exprSig , true )"	214:9:4537:4577	2502414	0	True				
ANR	2502449	CallExpression	"FindExpr ( state , tree , exprSig , true )"		2502414	0					
ANR	2502450	Callee	FindExpr		2502414	0					
ANR	2502451	Identifier	FindExpr		2502414	0					
ANR	2502452	ArgumentList	state		2502414	1					
ANR	2502453	Argument	state		2502414	0					
ANR	2502454	Identifier	state		2502414	0					
ANR	2502455	Argument	tree		2502414	1					
ANR	2502456	Identifier	tree		2502414	0					
ANR	2502457	Argument	exprSig		2502414	2					
ANR	2502458	Identifier	exprSig		2502414	0					
ANR	2502459	Argument	true		2502414	3					
ANR	2502460	Identifier	true		2502414	0					
ANR	2502461	CompoundStatement		11:53:183:183	2502414	1					
ANR	2502462	Label	case EVAL_FAIL :	215:2:4585:4599	2502414	0	True				
ANR	2502463	Identifier	EVAL_FAIL		2502414	0					
ANR	2502464	ExpressionStatement	rval = false	216:3:4604:4616	2502414	1	True				
ANR	2502465	AssignmentExpression	rval = false		2502414	0		=			
ANR	2502466	Identifier	rval		2502414	0					
ANR	2502467	Identifier	false		2502414	1					
ANR	2502468	BreakStatement	break ;	217:3:4621:4626	2502414	2	True				
ANR	2502469	Label	case EVAL_ERROR :	219:2:4631:4646	2502414	3	True				
ANR	2502470	Identifier	EVAL_ERROR		2502414	0					
ANR	2502471	Label	case PROP_ERROR :	220:2:4650:4665	2502414	4	True				
ANR	2502472	Identifier	PROP_ERROR		2502414	0					
ANR	2502473	ExpressionStatement	val . SetErrorValue ( )	221:3:4670:4690	2502414	5	True				
ANR	2502474	CallExpression	val . SetErrorValue ( )		2502414	0					
ANR	2502475	Callee	val . SetErrorValue		2502414	0					
ANR	2502476	MemberAccess	val . SetErrorValue		2502414	0					
ANR	2502477	Identifier	val		2502414	0					
ANR	2502478	Identifier	SetErrorValue		2502414	1					
ANR	2502479	ArgumentList			2502414	1					
ANR	2502480	BreakStatement	break ;	222:3:4695:4700	2502414	6	True				
ANR	2502481	Label	case EVAL_UNDEF :	224:2:4705:4720	2502414	7	True				
ANR	2502482	Identifier	EVAL_UNDEF		2502414	0					
ANR	2502483	Label	case PROP_UNDEF :	225:2:4724:4739	2502414	8	True				
ANR	2502484	Identifier	PROP_UNDEF		2502414	0					
ANR	2502485	ExpressionStatement	val . SetUndefinedValue ( )	226:3:4744:4768	2502414	9	True				
ANR	2502486	CallExpression	val . SetUndefinedValue ( )		2502414	0					
ANR	2502487	Callee	val . SetUndefinedValue		2502414	0					
ANR	2502488	MemberAccess	val . SetUndefinedValue		2502414	0					
ANR	2502489	Identifier	val		2502414	0					
ANR	2502490	Identifier	SetUndefinedValue		2502414	1					
ANR	2502491	ArgumentList			2502414	1					
ANR	2502492	BreakStatement	break ;	227:3:4773:4778	2502414	10	True				
ANR	2502493	Label	case EVAL_OK :	229:2:4783:4795	2502414	11	True				
ANR	2502494	Identifier	EVAL_OK		2502414	0					
ANR	2502495	CompoundStatement		27:2:401:401	2502414	12					
ANR	2502496	IfStatement	if ( state . depth_remaining <= 0 )		2502414	0					
ANR	2502497	Condition	state . depth_remaining <= 0	231:7:4808:4833	2502414	0	True				
ANR	2502498	RelationalExpression	state . depth_remaining <= 0		2502414	0		<=			
ANR	2502499	MemberAccess	state . depth_remaining		2502414	0					
ANR	2502500	Identifier	state		2502414	0					
ANR	2502501	Identifier	depth_remaining		2502414	1					
ANR	2502502	PrimaryExpression	0		2502414	1					
ANR	2502503	CompoundStatement		28:36:439:439	2502414	1					
ANR	2502504	ExpressionStatement	val . SetErrorValue ( )	232:4:4843:4862	2502414	0	True				
ANR	2502505	CallExpression	val . SetErrorValue ( )		2502414	0					
ANR	2502506	Callee	val . SetErrorValue		2502414	0					
ANR	2502507	MemberAccess	val . SetErrorValue		2502414	0					
ANR	2502508	Identifier	val		2502414	0					
ANR	2502509	Identifier	SetErrorValue		2502414	1					
ANR	2502510	ArgumentList			2502414	1					
ANR	2502511	ExpressionStatement	state . curAd = curAd	233:4:4868:4887	2502414	1	True				
ANR	2502512	AssignmentExpression	state . curAd = curAd		2502414	0		=			
ANR	2502513	MemberAccess	state . curAd		2502414	0					
ANR	2502514	Identifier	state		2502414	0					
ANR	2502515	Identifier	curAd		2502414	1					
ANR	2502516	Identifier	curAd		2502414	1					
ANR	2502517	ReturnStatement	return false ;	234:4:4893:4905	2502414	2	True				
ANR	2502518	Identifier	false		2502414	0					
ANR	2502519	ExpressionStatement	state . depth_remaining --	236:3:4915:4938	2502414	1	True				
ANR	2502520	PostIncDecOperationExpression	state . depth_remaining --		2502414	0					
ANR	2502521	MemberAccess	state . depth_remaining		2502414	0					
ANR	2502522	Identifier	state		2502414	0					
ANR	2502523	Identifier	depth_remaining		2502414	1					
ANR	2502524	IncDec	--		2502414	1					
ANR	2502525	ExpressionStatement	"rval = tree -> Evaluate ( state , val )"	238:3:4944:4979	2502414	2	True				
ANR	2502526	AssignmentExpression	"rval = tree -> Evaluate ( state , val )"		2502414	0		=			
ANR	2502527	Identifier	rval		2502414	0					
ANR	2502528	CallExpression	"tree -> Evaluate ( state , val )"		2502414	1					
ANR	2502529	Callee	tree -> Evaluate		2502414	0					
ANR	2502530	PtrMemberAccess	tree -> Evaluate		2502414	0					
ANR	2502531	Identifier	tree		2502414	0					
ANR	2502532	Identifier	Evaluate		2502414	1					
ANR	2502533	ArgumentList	state		2502414	1					
ANR	2502534	Argument	state		2502414	0					
ANR	2502535	Identifier	state		2502414	0					
ANR	2502536	Argument	val		2502414	1					
ANR	2502537	Identifier	val		2502414	0					
ANR	2502538	ExpressionStatement	state . depth_remaining ++	240:3:4985:5008	2502414	3	True				
ANR	2502539	PostIncDecOperationExpression	state . depth_remaining ++		2502414	0					
ANR	2502540	MemberAccess	state . depth_remaining		2502414	0					
ANR	2502541	Identifier	state		2502414	0					
ANR	2502542	Identifier	depth_remaining		2502414	1					
ANR	2502543	IncDec	++		2502414	1					
ANR	2502544	BreakStatement	break ;	242:3:5014:5019	2502414	4	True				
ANR	2502545	Label	default :	244:2:5027:5034	2502414	13	True				
ANR	2502546	Identifier	default		2502414	0					
ANR	2502547	ExpressionStatement	"CLASSAD_EXCEPT ( ""ClassAd:  Should not reach here"" )"	244:12:5037:5088	2502414	14	True				
ANR	2502548	CallExpression	"CLASSAD_EXCEPT ( ""ClassAd:  Should not reach here"" )"		2502414	0					
ANR	2502549	Callee	CLASSAD_EXCEPT		2502414	0					
ANR	2502550	Identifier	CLASSAD_EXCEPT		2502414	0					
ANR	2502551	ArgumentList	"""ClassAd:  Should not reach here"""		2502414	1					
ANR	2502552	Argument	"""ClassAd:  Should not reach here"""		2502414	0					
ANR	2502553	PrimaryExpression	"""ClassAd:  Should not reach here"""		2502414	0					
ANR	2502554	IfStatement	"if ( ! rval || ! ( sig = new AttributeReference ( exprSig , attributeStr , absolute ) ) )"		2502414	8					
ANR	2502555	Condition	"! rval || ! ( sig = new AttributeReference ( exprSig , attributeStr , absolute ) )"	246:4:5097:5165	2502414	0	True				
ANR	2502556	OrExpression	"! rval || ! ( sig = new AttributeReference ( exprSig , attributeStr , absolute ) )"		2502414	0		||			
ANR	2502557	UnaryOperationExpression	! rval		2502414	0					
ANR	2502558	UnaryOperator	!		2502414	0					
ANR	2502559	Identifier	rval		2502414	1					
ANR	2502560	UnaryOperationExpression	"! ( sig = new AttributeReference ( exprSig , attributeStr , absolute ) )"		2502414	1					
ANR	2502561	UnaryOperator	!		2502414	0					
ANR	2502562	AssignmentExpression	"sig = new AttributeReference ( exprSig , attributeStr , absolute )"		2502414	1		=			
ANR	2502563	Identifier	sig		2502414	0					
ANR	2502564	Expression	"exprSig , attributeStr , absolute"		2502414	1					
ANR	2502565	Identifier	exprSig		2502414	0					
ANR	2502566	Expression	"attributeStr , absolute"		2502414	1					
ANR	2502567	Identifier	attributeStr		2502414	0					
ANR	2502568	Identifier	absolute		2502414	1					
ANR	2502569	CompoundStatement		43:74:769:769	2502414	1					
ANR	2502570	IfStatement	if ( rval )		2502414	0					
ANR	2502571	Condition	rval	247:6:5175:5178	2502414	0	True				
ANR	2502572	Identifier	rval		2502414	0					
ANR	2502573	CompoundStatement		44:13:784:784	2502414	1					
ANR	2502574	ExpressionStatement	CondorErrno = ERR_MEM_ALLOC_FAILED	248:3:5187:5221	2502414	0	True				
ANR	2502575	AssignmentExpression	CondorErrno = ERR_MEM_ALLOC_FAILED		2502414	0		=			
ANR	2502576	Identifier	CondorErrno		2502414	0					
ANR	2502577	Identifier	ERR_MEM_ALLOC_FAILED		2502414	1					
ANR	2502578	ExpressionStatement	"CondorErrMsg = """""	249:3:5226:5243	2502414	1	True				
ANR	2502579	AssignmentExpression	"CondorErrMsg = """""		2502414	0		=			
ANR	2502580	Identifier	CondorErrMsg		2502414	0					
ANR	2502581	PrimaryExpression	""""""		2502414	1					
ANR	2502582	Statement	delete	251:2:5251:5256	2502414	1	True				
ANR	2502583	ExpressionStatement	exprSig	251:9:5258:5265	2502414	2	True				
ANR	2502584	Identifier	exprSig		2502414	0					
ANR	2502585	ExpressionStatement	sig = NULL	252:2:5269:5279	2502414	3	True				
ANR	2502586	AssignmentExpression	sig = NULL		2502414	0		=			
ANR	2502587	Identifier	sig		2502414	0					
ANR	2502588	Identifier	NULL		2502414	1					
ANR	2502589	ReturnStatement	return ( false ) ;	253:2:5283:5298	2502414	4	True				
ANR	2502590	Identifier	false		2502414	0					
ANR	2502591	ExpressionStatement	state . curAd = curAd	255:1:5304:5323	2502414	9	True				
ANR	2502592	AssignmentExpression	state . curAd = curAd		2502414	0		=			
ANR	2502593	MemberAccess	state . curAd		2502414	0					
ANR	2502594	Identifier	state		2502414	0					
ANR	2502595	Identifier	curAd		2502414	1					
ANR	2502596	Identifier	curAd		2502414	1					
ANR	2502597	ReturnStatement	return rval ;	256:1:5326:5337	2502414	10	True				
ANR	2502598	Identifier	rval		2502414	0					
ANR	2502599	ReturnType	bool		2502414	1					
ANR	2502600	Identifier	AttributeReference :: _Evaluate		2502414	2					
ANR	2502601	ParameterList	"EvalState & state , Value & val , ExprTree * & sig"		2502414	3					
ANR	2502602	Parameter	EvalState & state	203:11:4344:4359	2502414	0	True				
ANR	2502603	ParameterType	EvalState &		2502414	0					
ANR	2502604	Identifier	state		2502414	1					
ANR	2502605	Parameter	Value & val	203:29:4362:4371	2502414	1	True				
ANR	2502606	ParameterType	Value &		2502414	0					
ANR	2502607	Identifier	val		2502414	1					
ANR	2502608	Parameter	ExprTree * & sig	203:41:4374:4387	2502414	2	True				
ANR	2502609	ParameterType	ExprTree * &		2502414	0					
ANR	2502610	Identifier	sig		2502414	1					
ANR	2502611	CFGEntryNode	ENTRY		2502414		True				
ANR	2502612	CFGExitNode	EXIT		2502414		True				
ANR	2502613	Symbol	val		2502414						
ANR	2502614	Symbol	NULL		2502414						
ANR	2502615	Symbol	exprSig		2502414						
ANR	2502616	Symbol	tree		2502414						
ANR	2502617	Symbol	false		2502414						
ANR	2502618	Symbol	ERR_MEM_ALLOC_FAILED		2502414						
ANR	2502619	Symbol	curAd		2502414						
ANR	2502620	Symbol	CondorErrno		2502414						
ANR	2502621	Symbol	sig		2502414						
ANR	2502622	Symbol	state . curAd		2502414						
ANR	2502623	Symbol	* tree		2502414						
ANR	2502624	Symbol	state . depth_remaining		2502414						
ANR	2502625	Symbol	CondorErrMsg		2502414						
ANR	2502626	Symbol	FindExpr		2502414						
ANR	2502627	Symbol	absolute		2502414						
ANR	2502628	Symbol	true		2502414						
ANR	2502629	Symbol	tree -> Evaluate		2502414						
ANR	2502630	Symbol	rval		2502414						
ANR	2502631	Symbol	state		2502414						
ANR	2502632	Symbol	attributeStr		2502414						
ANR	2502633	DeclStmt									
ANR	2502634	Decl							ExprTree	ExprTree *	tree
ANR	2502635	DeclStmt									
ANR	2502636	Decl							ExprTree	ExprTree *	dummy
ANR	2502637	DeclStmt									
ANR	2502638	Decl							const ClassAd	const ClassAd *	curAd
ANR	2502639	DeclStmt									
ANR	2502640	Decl							bool	bool	rval
ANR	2502641	DeclStmt									
ANR	2502642	Decl							ExprTree	ExprTree *	expr_ntree
ANR	2502643	DeclStmt									
ANR	2502644	Decl							Value	Value	expr_val
ANR	2502645	Function	AttributeReference :: FindExpr	349:0:7240:10170							
ANR	2502646	FunctionDef	"AttributeReference :: FindExpr (EvalState & state , ExprTree * & tree , ExprTree * & sig , bool wantSig)"		2502645	0					
ANR	2502647	CompoundStatement		351:0:7345:10170	2502645	0					
ANR	2502648	IdentifierDeclStatement	const ClassAd * current = NULL ;	352:1:7348:7375	2502645	0	True				
ANR	2502649	IdentifierDecl	* current = NULL		2502645	0					
ANR	2502650	IdentifierDeclType	const ClassAd *		2502645	0					
ANR	2502651	Identifier	current		2502645	1					
ANR	2502652	AssignmentExpression	* current = NULL		2502645	2		=			
ANR	2502653	Identifier	NULL		2502645	0					
ANR	2502654	Identifier	NULL		2502645	1					
ANR	2502655	IdentifierDeclStatement	const ExprList * adList = NULL ;	353:1:7378:7407	2502645	1	True				
ANR	2502656	IdentifierDecl	* adList = NULL		2502645	0					
ANR	2502657	IdentifierDeclType	const ExprList *		2502645	0					
ANR	2502658	Identifier	adList		2502645	1					
ANR	2502659	AssignmentExpression	* adList = NULL		2502645	2		=			
ANR	2502660	Identifier	NULL		2502645	0					
ANR	2502661	Identifier	NULL		2502645	1					
ANR	2502662	IdentifierDeclStatement	Value val ;	354:1:7410:7419	2502645	2	True				
ANR	2502663	IdentifierDecl	val		2502645	0					
ANR	2502664	IdentifierDeclType	Value		2502645	0					
ANR	2502665	Identifier	val		2502645	1					
ANR	2502666	IdentifierDeclStatement	bool rval ;	355:1:7422:7431	2502645	3	True				
ANR	2502667	IdentifierDecl	rval		2502645	0					
ANR	2502668	IdentifierDeclType	bool		2502645	0					
ANR	2502669	Identifier	rval		2502645	1					
ANR	2502670	ExpressionStatement	sig = NULL	357:1:7435:7445	2502645	4	True				
ANR	2502671	AssignmentExpression	sig = NULL		2502645	0		=			
ANR	2502672	Identifier	sig		2502645	0					
ANR	2502673	Identifier	NULL		2502645	1					
ANR	2502674	IfStatement	if ( expr == NULL )		2502645	5					
ANR	2502675	Condition	expr == NULL	360:5:7493:7504	2502645	0	True				
ANR	2502676	EqualityExpression	expr == NULL		2502645	0		==			
ANR	2502677	Identifier	expr		2502645	0					
ANR	2502678	Identifier	NULL		2502645	1					
ANR	2502679	CompoundStatement		10:20:162:162	2502645	1					
ANR	2502680	ExpressionStatement	current = absolute ? state . rootAd : state . curAd	362:2:7536:7583	2502645	0	True				
ANR	2502681	AssignmentExpression	current = absolute ? state . rootAd : state . curAd		2502645	0		=			
ANR	2502682	Identifier	current		2502645	0					
ANR	2502683	ConditionalExpression	absolute ? state . rootAd : state . curAd		2502645	1					
ANR	2502684	Condition	absolute		2502645	0					
ANR	2502685	Identifier	absolute		2502645	0					
ANR	2502686	MemberAccess	state . rootAd		2502645	1					
ANR	2502687	Identifier	state		2502645	0					
ANR	2502688	Identifier	rootAd		2502645	1					
ANR	2502689	MemberAccess	state . curAd		2502645	2					
ANR	2502690	Identifier	state		2502645	0					
ANR	2502691	Identifier	curAd		2502645	1					
ANR	2502692	IfStatement	if ( absolute && ( current == NULL ) )		2502645	1					
ANR	2502693	Condition	absolute && ( current == NULL )	363:6:7591:7621	2502645	0	True				
ANR	2502694	AndExpression	absolute && ( current == NULL )		2502645	0		&&			
ANR	2502695	Identifier	absolute		2502645	0					
ANR	2502696	EqualityExpression	current == NULL		2502645	1		==			
ANR	2502697	Identifier	current		2502645	0					
ANR	2502698	Identifier	NULL		2502645	1					
ANR	2502699	CompoundStatement		13:40:279:279	2502645	1					
ANR	2502700	ReturnStatement	return EVAL_FAIL ;	364:3:7662:7678	2502645	0	True				
ANR	2502701	Identifier	EVAL_FAIL		2502645	0					
ANR	2502702	ElseStatement	else		2502645	0					
ANR	2502703	CompoundStatement		16:8:373:373	2502645	0					
ANR	2502704	ExpressionStatement	"rval = wantSig ? expr -> Evaluate ( state , val , sig ) : expr -> Evaluate ( state , val )"	368:2:7740:7808	2502645	0	True				
ANR	2502705	AssignmentExpression	"rval = wantSig ? expr -> Evaluate ( state , val , sig ) : expr -> Evaluate ( state , val )"		2502645	0		=			
ANR	2502706	Identifier	rval		2502645	0					
ANR	2502707	ConditionalExpression	"wantSig ? expr -> Evaluate ( state , val , sig ) : expr -> Evaluate ( state , val )"		2502645	1					
ANR	2502708	Condition	wantSig		2502645	0					
ANR	2502709	Identifier	wantSig		2502645	0					
ANR	2502710	CallExpression	"expr -> Evaluate ( state , val , sig )"		2502645	1					
ANR	2502711	Callee	expr -> Evaluate		2502645	0					
ANR	2502712	PtrMemberAccess	expr -> Evaluate		2502645	0					
ANR	2502713	Identifier	expr		2502645	0					
ANR	2502714	Identifier	Evaluate		2502645	1					
ANR	2502715	ArgumentList	state		2502645	1					
ANR	2502716	Argument	state		2502645	0					
ANR	2502717	Identifier	state		2502645	0					
ANR	2502718	Argument	val		2502645	1					
ANR	2502719	Identifier	val		2502645	0					
ANR	2502720	Argument	sig		2502645	2					
ANR	2502721	Identifier	sig		2502645	0					
ANR	2502722	CallExpression	"expr -> Evaluate ( state , val )"		2502645	2					
ANR	2502723	Callee	expr -> Evaluate		2502645	0					
ANR	2502724	PtrMemberAccess	expr -> Evaluate		2502645	0					
ANR	2502725	Identifier	expr		2502645	0					
ANR	2502726	Identifier	Evaluate		2502645	1					
ANR	2502727	ArgumentList	state		2502645	1					
ANR	2502728	Argument	state		2502645	0					
ANR	2502729	Identifier	state		2502645	0					
ANR	2502730	Argument	val		2502645	1					
ANR	2502731	Identifier	val		2502645	0					
ANR	2502732	IfStatement	if ( ! rval )		2502645	1					
ANR	2502733	Condition	! rval	369:6:7816:7820	2502645	0	True				
ANR	2502734	UnaryOperationExpression	! rval		2502645	0					
ANR	2502735	UnaryOperator	!		2502645	0					
ANR	2502736	Identifier	rval		2502645	1					
ANR	2502737	CompoundStatement		19:14:478:478	2502645	1					
ANR	2502738	ReturnStatement	return ( EVAL_FAIL ) ;	370:3:7829:7848	2502645	0	True				
ANR	2502739	Identifier	EVAL_FAIL		2502645	0					
ANR	2502740	IfStatement	if ( val . IsUndefinedValue ( ) )		2502645	2					
ANR	2502741	Condition	val . IsUndefinedValue ( )	373:6:7861:7883	2502645	0	True				
ANR	2502742	CallExpression	val . IsUndefinedValue ( )		2502645	0					
ANR	2502743	Callee	val . IsUndefinedValue		2502645	0					
ANR	2502744	MemberAccess	val . IsUndefinedValue		2502645	0					
ANR	2502745	Identifier	val		2502645	0					
ANR	2502746	Identifier	IsUndefinedValue		2502645	1					
ANR	2502747	ArgumentList			2502645	1					
ANR	2502748	CompoundStatement		23:32:541:541	2502645	1					
ANR	2502749	ReturnStatement	return ( PROP_UNDEF ) ;	374:3:7892:7912	2502645	0	True				
ANR	2502750	Identifier	PROP_UNDEF		2502645	0					
ANR	2502751	ElseStatement	else		2502645	0					
ANR	2502752	IfStatement	if ( val . IsErrorValue ( ) )		2502645	0					
ANR	2502753	Condition	val . IsErrorValue ( )	375:13:7927:7945	2502645	0	True				
ANR	2502754	CallExpression	val . IsErrorValue ( )		2502645	0					
ANR	2502755	Callee	val . IsErrorValue		2502645	0					
ANR	2502756	MemberAccess	val . IsErrorValue		2502645	0					
ANR	2502757	Identifier	val		2502645	0					
ANR	2502758	Identifier	IsErrorValue		2502645	1					
ANR	2502759	ArgumentList			2502645	1					
ANR	2502760	CompoundStatement		25:35:603:603	2502645	1					
ANR	2502761	ReturnStatement	return ( PROP_ERROR ) ;	376:3:7954:7974	2502645	0	True				
ANR	2502762	Identifier	PROP_ERROR		2502645	0					
ANR	2502763	IfStatement	if ( ! val . IsClassAdValue ( current ) && ! val . IsListValue ( adList ) )		2502645	3					
ANR	2502764	Condition	! val . IsClassAdValue ( current ) && ! val . IsListValue ( adList )	379:6:7989:8048	2502645	0	True				
ANR	2502765	AndExpression	! val . IsClassAdValue ( current ) && ! val . IsListValue ( adList )		2502645	0		&&			
ANR	2502766	UnaryOperationExpression	! val . IsClassAdValue ( current )		2502645	0					
ANR	2502767	UnaryOperator	!		2502645	0					
ANR	2502768	CallExpression	val . IsClassAdValue ( current )		2502645	1					
ANR	2502769	Callee	val . IsClassAdValue		2502645	0					
ANR	2502770	MemberAccess	val . IsClassAdValue		2502645	0					
ANR	2502771	Identifier	val		2502645	0					
ANR	2502772	Identifier	IsClassAdValue		2502645	1					
ANR	2502773	ArgumentList	current		2502645	1					
ANR	2502774	Argument	current		2502645	0					
ANR	2502775	Identifier	current		2502645	0					
ANR	2502776	UnaryOperationExpression	! val . IsListValue ( adList )		2502645	1					
ANR	2502777	UnaryOperator	!		2502645	0					
ANR	2502778	CallExpression	val . IsListValue ( adList )		2502645	1					
ANR	2502779	Callee	val . IsListValue		2502645	0					
ANR	2502780	MemberAccess	val . IsListValue		2502645	0					
ANR	2502781	Identifier	val		2502645	0					
ANR	2502782	Identifier	IsListValue		2502645	1					
ANR	2502783	ArgumentList	adList		2502645	1					
ANR	2502784	Argument	adList		2502645	0					
ANR	2502785	Identifier	adList		2502645	0					
ANR	2502786	CompoundStatement		29:69:706:706	2502645	1					
ANR	2502787	ReturnStatement	return ( EVAL_ERROR ) ;	380:3:8057:8077	2502645	0	True				
ANR	2502788	Identifier	EVAL_ERROR		2502645	0					
ANR	2502789	IfStatement	if ( val . IsListValue ( ) )		2502645	6					
ANR	2502790	Condition	val . IsListValue ( )	384:5:8092:8109	2502645	0	True				
ANR	2502791	CallExpression	val . IsListValue ( )		2502645	0					
ANR	2502792	Callee	val . IsListValue		2502645	0					
ANR	2502793	MemberAccess	val . IsListValue		2502645	0					
ANR	2502794	Identifier	val		2502645	0					
ANR	2502795	Identifier	IsListValue		2502645	1					
ANR	2502796	ArgumentList			2502645	1					
ANR	2502797	CompoundStatement		77:2:2069:2102	2502645	1					
ANR	2502798	IdentifierDeclStatement	vector < ExprTree * > eVector ;	385:2:8117:8144	2502645	0	True				
ANR	2502799	IdentifierDecl	eVector		2502645	0					
ANR	2502800	IdentifierDeclType	vector < ExprTree * >		2502645	0					
ANR	2502801	Identifier	eVector		2502645	1					
ANR	2502802	IdentifierDeclStatement	const ExprTree * currExpr ;	386:2:8148:8172	2502645	1	True				
ANR	2502803	IdentifierDecl	* currExpr		2502645	0					
ANR	2502804	IdentifierDeclType	const ExprTree *		2502645	0					
ANR	2502805	Identifier	currExpr		2502645	1					
ANR	2502806	ForStatement	for ( ExprListIterator itr ( adList ) ; ! itr . IsAfterLast ( ) ; itr . NextExpr ( ) )		2502645	2					
ANR	2502807	ForInit	ExprListIterator itr ( adList ) ;	389:6:8264:8292	2502645	0	True				
ANR	2502808	IdentifierDeclStatement	ExprListIterator itr ( adList ) ;		2502645	0					
ANR	2502809	IdentifierDecl	itr ( adList )		2502645	0					
ANR	2502810	IdentifierDeclType	ExprListIterator		2502645	0					
ANR	2502811	Identifier	itr		2502645	1					
ANR	2502812	Identifier	adList		2502645	2					
ANR	2502813	Condition	! itr . IsAfterLast ( )	389:35:8293:8311	2502645	1	True				
ANR	2502814	UnaryOperationExpression	! itr . IsAfterLast ( )		2502645	0					
ANR	2502815	UnaryOperator	!		2502645	0					
ANR	2502816	CallExpression	itr . IsAfterLast ( )		2502645	1					
ANR	2502817	Callee	itr . IsAfterLast		2502645	0					
ANR	2502818	MemberAccess	itr . IsAfterLast		2502645	0					
ANR	2502819	Identifier	itr		2502645	0					
ANR	2502820	Identifier	IsAfterLast		2502645	1					
ANR	2502821	ArgumentList			2502645	1					
ANR	2502822	CallExpression	itr . NextExpr ( )	389:55:8313:8327	2502645	2	True				
ANR	2502823	Callee	itr . NextExpr		2502645	0					
ANR	2502824	MemberAccess	itr . NextExpr		2502645	0					
ANR	2502825	Identifier	itr		2502645	0					
ANR	2502826	Identifier	NextExpr		2502645	1					
ANR	2502827	ArgumentList			2502645	1					
ANR	2502828	CompoundStatement		39:71:983:983	2502645	3					
ANR	2502829	ExpressionStatement	currExpr = itr . CurrentExpr ( )	390:4:8335:8364	2502645	0	True				
ANR	2502830	AssignmentExpression	currExpr = itr . CurrentExpr ( )		2502645	0		=			
ANR	2502831	Identifier	currExpr		2502645	0					
ANR	2502832	CallExpression	itr . CurrentExpr ( )		2502645	1					
ANR	2502833	Callee	itr . CurrentExpr		2502645	0					
ANR	2502834	MemberAccess	itr . CurrentExpr		2502645	0					
ANR	2502835	Identifier	itr		2502645	0					
ANR	2502836	Identifier	CurrentExpr		2502645	1					
ANR	2502837	ArgumentList			2502645	1					
ANR	2502838	IfStatement	if ( currExpr == NULL )		2502645	1					
ANR	2502839	Condition	currExpr == NULL	391:7:8373:8388	2502645	0	True				
ANR	2502840	EqualityExpression	currExpr == NULL		2502645	0		==			
ANR	2502841	Identifier	currExpr		2502645	0					
ANR	2502842	Identifier	NULL		2502645	1					
ANR	2502843	CompoundStatement		41:26:1046:1046	2502645	1					
ANR	2502844	ReturnStatement	return ( EVAL_FAIL ) ;	392:4:8398:8417	2502645	0	True				
ANR	2502845	Identifier	EVAL_FAIL		2502645	0					
ANR	2502846	ElseStatement	else		2502645	0					
ANR	2502847	CompoundStatement		62:4:1692:1725	2502645	0					
ANR	2502848	IdentifierDeclStatement	AttributeReference * attrRef = NULL ;	394:4:8435:8469	2502645	0	True				
ANR	2502849	IdentifierDecl	* attrRef = NULL		2502645	0					
ANR	2502850	IdentifierDeclType	AttributeReference *		2502645	0					
ANR	2502851	Identifier	attrRef		2502645	1					
ANR	2502852	AssignmentExpression	* attrRef = NULL		2502645	2		=			
ANR	2502853	Identifier	NULL		2502645	0					
ANR	2502854	Identifier	NULL		2502645	1					
ANR	2502855	ExpressionStatement	"attrRef = MakeAttributeReference ( currExpr -> Copy ( ) , attributeStr , false )"	395:4:8475:8577	2502645	1	True				
ANR	2502856	AssignmentExpression	"attrRef = MakeAttributeReference ( currExpr -> Copy ( ) , attributeStr , false )"		2502645	0		=			
ANR	2502857	Identifier	attrRef		2502645	0					
ANR	2502858	CallExpression	"MakeAttributeReference ( currExpr -> Copy ( ) , attributeStr , false )"		2502645	1					
ANR	2502859	Callee	MakeAttributeReference		2502645	0					
ANR	2502860	Identifier	MakeAttributeReference		2502645	0					
ANR	2502861	ArgumentList	currExpr -> Copy ( )		2502645	1					
ANR	2502862	Argument	currExpr -> Copy ( )		2502645	0					
ANR	2502863	CallExpression	currExpr -> Copy ( )		2502645	0					
ANR	2502864	Callee	currExpr -> Copy		2502645	0					
ANR	2502865	PtrMemberAccess	currExpr -> Copy		2502645	0					
ANR	2502866	Identifier	currExpr		2502645	0					
ANR	2502867	Identifier	Copy		2502645	1					
ANR	2502868	ArgumentList			2502645	1					
ANR	2502869	Argument	attributeStr		2502645	1					
ANR	2502870	Identifier	attributeStr		2502645	0					
ANR	2502871	Argument	false		2502645	2					
ANR	2502872	Identifier	false		2502645	0					
ANR	2502873	ExpressionStatement	val . Clear ( )	398:4:8583:8595	2502645	2	True				
ANR	2502874	CallExpression	val . Clear ( )		2502645	0					
ANR	2502875	Callee	val . Clear		2502645	0					
ANR	2502876	MemberAccess	val . Clear		2502645	0					
ANR	2502877	Identifier	val		2502645	0					
ANR	2502878	Identifier	Clear		2502645	1					
ANR	2502879	ArgumentList			2502645	1					
ANR	2502880	IdentifierDeclStatement	EvalState tstate ;	402:4:8776:8792	2502645	3	True				
ANR	2502881	IdentifierDecl	tstate		2502645	0					
ANR	2502882	IdentifierDeclType	EvalState		2502645	0					
ANR	2502883	Identifier	tstate		2502645	1					
ANR	2502884	ExpressionStatement	tstate . SetScopes ( state . curAd )	403:4:8798:8827	2502645	4	True				
ANR	2502885	CallExpression	tstate . SetScopes ( state . curAd )		2502645	0					
ANR	2502886	Callee	tstate . SetScopes		2502645	0					
ANR	2502887	MemberAccess	tstate . SetScopes		2502645	0					
ANR	2502888	Identifier	tstate		2502645	0					
ANR	2502889	Identifier	SetScopes		2502645	1					
ANR	2502890	ArgumentList	state . curAd		2502645	1					
ANR	2502891	Argument	state . curAd		2502645	0					
ANR	2502892	MemberAccess	state . curAd		2502645	0					
ANR	2502893	Identifier	state		2502645	0					
ANR	2502894	Identifier	curAd		2502645	1					
ANR	2502895	ExpressionStatement	"rval = wantSig ? attrRef -> Evaluate ( tstate , val , sig ) : attrRef -> Evaluate ( tstate , val )"	404:4:8833:8927	2502645	5	True				
ANR	2502896	AssignmentExpression	"rval = wantSig ? attrRef -> Evaluate ( tstate , val , sig ) : attrRef -> Evaluate ( tstate , val )"		2502645	0		=			
ANR	2502897	Identifier	rval		2502645	0					
ANR	2502898	ConditionalExpression	"wantSig ? attrRef -> Evaluate ( tstate , val , sig ) : attrRef -> Evaluate ( tstate , val )"		2502645	1					
ANR	2502899	Condition	wantSig		2502645	0					
ANR	2502900	Identifier	wantSig		2502645	0					
ANR	2502901	CallExpression	"attrRef -> Evaluate ( tstate , val , sig )"		2502645	1					
ANR	2502902	Callee	attrRef -> Evaluate		2502645	0					
ANR	2502903	PtrMemberAccess	attrRef -> Evaluate		2502645	0					
ANR	2502904	Identifier	attrRef		2502645	0					
ANR	2502905	Identifier	Evaluate		2502645	1					
ANR	2502906	ArgumentList	tstate		2502645	1					
ANR	2502907	Argument	tstate		2502645	0					
ANR	2502908	Identifier	tstate		2502645	0					
ANR	2502909	Argument	val		2502645	1					
ANR	2502910	Identifier	val		2502645	0					
ANR	2502911	Argument	sig		2502645	2					
ANR	2502912	Identifier	sig		2502645	0					
ANR	2502913	CallExpression	"attrRef -> Evaluate ( tstate , val )"		2502645	2					
ANR	2502914	Callee	attrRef -> Evaluate		2502645	0					
ANR	2502915	PtrMemberAccess	attrRef -> Evaluate		2502645	0					
ANR	2502916	Identifier	attrRef		2502645	0					
ANR	2502917	Identifier	Evaluate		2502645	1					
ANR	2502918	ArgumentList	tstate		2502645	1					
ANR	2502919	Argument	tstate		2502645	0					
ANR	2502920	Identifier	tstate		2502645	0					
ANR	2502921	Argument	val		2502645	1					
ANR	2502922	Identifier	val		2502645	0					
ANR	2502923	Statement	delete	406:4:8933:8938	2502645	6	True				
ANR	2502924	ExpressionStatement	attrRef	406:11:8940:8947	2502645	7	True				
ANR	2502925	Identifier	attrRef		2502645	0					
ANR	2502926	IfStatement	if ( ! rval )		2502645	8					
ANR	2502927	Condition	! rval	407:8:8957:8961	2502645	0	True				
ANR	2502928	UnaryOperationExpression	! rval		2502645	0					
ANR	2502929	UnaryOperator	!		2502645	0					
ANR	2502930	Identifier	rval		2502645	1					
ANR	2502931	CompoundStatement		57:16:1619:1619	2502645	1					
ANR	2502932	ReturnStatement	return ( EVAL_FAIL ) ;	408:5:8972:8991	2502645	0	True				
ANR	2502933	Identifier	EVAL_FAIL		2502645	0					
ANR	2502934	IdentifierDeclStatement	ClassAd * evaledAd = NULL ;	411:4:9008:9032	2502645	9	True				
ANR	2502935	IdentifierDecl	* evaledAd = NULL		2502645	0					
ANR	2502936	IdentifierDeclType	ClassAd *		2502645	0					
ANR	2502937	Identifier	evaledAd		2502645	1					
ANR	2502938	AssignmentExpression	* evaledAd = NULL		2502645	2		=			
ANR	2502939	Identifier	NULL		2502645	0					
ANR	2502940	Identifier	NULL		2502645	1					
ANR	2502941	IdentifierDeclStatement	const ExprList * evaledList = NULL ;	412:4:9038:9071	2502645	10	True				
ANR	2502942	IdentifierDecl	* evaledList = NULL		2502645	0					
ANR	2502943	IdentifierDeclType	const ExprList *		2502645	0					
ANR	2502944	Identifier	evaledList		2502645	1					
ANR	2502945	AssignmentExpression	* evaledList = NULL		2502645	2		=			
ANR	2502946	Identifier	NULL		2502645	0					
ANR	2502947	Identifier	NULL		2502645	1					
ANR	2502948	IfStatement	if ( val . IsClassAdValue ( evaledAd ) )		2502645	11					
ANR	2502949	Condition	val . IsClassAdValue ( evaledAd )	413:8:9081:9110	2502645	0	True				
ANR	2502950	CallExpression	val . IsClassAdValue ( evaledAd )		2502645	0					
ANR	2502951	Callee	val . IsClassAdValue		2502645	0					
ANR	2502952	MemberAccess	val . IsClassAdValue		2502645	0					
ANR	2502953	Identifier	val		2502645	0					
ANR	2502954	Identifier	IsClassAdValue		2502645	1					
ANR	2502955	ArgumentList	evaledAd		2502645	1					
ANR	2502956	Argument	evaledAd		2502645	0					
ANR	2502957	Identifier	evaledAd		2502645	0					
ANR	2502958	CompoundStatement		63:41:1768:1768	2502645	1					
ANR	2502959	ExpressionStatement	eVector . push_back ( evaledAd )	414:5:9121:9150	2502645	0	True				
ANR	2502960	CallExpression	eVector . push_back ( evaledAd )		2502645	0					
ANR	2502961	Callee	eVector . push_back		2502645	0					
ANR	2502962	MemberAccess	eVector . push_back		2502645	0					
ANR	2502963	Identifier	eVector		2502645	0					
ANR	2502964	Identifier	push_back		2502645	1					
ANR	2502965	ArgumentList	evaledAd		2502645	1					
ANR	2502966	Argument	evaledAd		2502645	0					
ANR	2502967	Identifier	evaledAd		2502645	0					
ANR	2502968	ContinueStatement	continue ;	415:5:9157:9165	2502645	1	True				
ANR	2502969	ElseStatement	else		2502645	0					
ANR	2502970	IfStatement	if ( val . IsListValue ( evaledList ) )		2502645	0					
ANR	2502971	Condition	val . IsListValue ( evaledList )	417:13:9186:9214	2502645	0	True				
ANR	2502972	CallExpression	val . IsListValue ( evaledList )		2502645	0					
ANR	2502973	Callee	val . IsListValue		2502645	0					
ANR	2502974	MemberAccess	val . IsListValue		2502645	0					
ANR	2502975	Identifier	val		2502645	0					
ANR	2502976	Identifier	IsListValue		2502645	1					
ANR	2502977	ArgumentList	evaledList		2502645	1					
ANR	2502978	Argument	evaledList		2502645	0					
ANR	2502979	Identifier	evaledList		2502645	0					
ANR	2502980	CompoundStatement		67:45:1872:1872	2502645	1					
ANR	2502981	ExpressionStatement	eVector . push_back ( evaledList -> Copy ( ) )	418:5:9225:9265	2502645	0	True				
ANR	2502982	CallExpression	eVector . push_back ( evaledList -> Copy ( ) )		2502645	0					
ANR	2502983	Callee	eVector . push_back		2502645	0					
ANR	2502984	MemberAccess	eVector . push_back		2502645	0					
ANR	2502985	Identifier	eVector		2502645	0					
ANR	2502986	Identifier	push_back		2502645	1					
ANR	2502987	ArgumentList	evaledList -> Copy ( )		2502645	1					
ANR	2502988	Argument	evaledList -> Copy ( )		2502645	0					
ANR	2502989	CallExpression	evaledList -> Copy ( )		2502645	0					
ANR	2502990	Callee	evaledList -> Copy		2502645	0					
ANR	2502991	PtrMemberAccess	evaledList -> Copy		2502645	0					
ANR	2502992	Identifier	evaledList		2502645	0					
ANR	2502993	Identifier	Copy		2502645	1					
ANR	2502994	ArgumentList			2502645	1					
ANR	2502995	ContinueStatement	continue ;	419:5:9272:9280	2502645	1	True				
ANR	2502996	ElseStatement	else		2502645	0					
ANR	2502997	CompoundStatement		71:9:1951:1951	2502645	0					
ANR	2502998	ExpressionStatement	eVector . push_back ( Literal :: MakeLiteral ( val ) )	422:5:9304:9352	2502645	0	True				
ANR	2502999	CallExpression	eVector . push_back ( Literal :: MakeLiteral ( val ) )		2502645	0					
ANR	2503000	Callee	eVector . push_back		2502645	0					
ANR	2503001	MemberAccess	eVector . push_back		2502645	0					
ANR	2503002	Identifier	eVector		2502645	0					
ANR	2503003	Identifier	push_back		2502645	1					
ANR	2503004	ArgumentList	Literal :: MakeLiteral ( val )		2502645	1					
ANR	2503005	Argument	Literal :: MakeLiteral ( val )		2502645	0					
ANR	2503006	CallExpression	Literal :: MakeLiteral ( val )		2502645	0					
ANR	2503007	Callee	Literal :: MakeLiteral		2502645	0					
ANR	2503008	Identifier	Literal :: MakeLiteral		2502645	0					
ANR	2503009	ArgumentList	val		2502645	1					
ANR	2503010	Argument	val		2502645	0					
ANR	2503011	Identifier	val		2502645	0					
ANR	2503012	ExpressionStatement	tree = ExprList :: MakeExprList ( eVector )	426:2:9371:9411	2502645	3	True				
ANR	2503013	AssignmentExpression	tree = ExprList :: MakeExprList ( eVector )		2502645	0		=			
ANR	2503014	Identifier	tree		2502645	0					
ANR	2503015	CallExpression	ExprList :: MakeExprList ( eVector )		2502645	1					
ANR	2503016	Callee	ExprList :: MakeExprList		2502645	0					
ANR	2503017	Identifier	ExprList :: MakeExprList		2502645	0					
ANR	2503018	ArgumentList	eVector		2502645	1					
ANR	2503019	Argument	eVector		2502645	0					
ANR	2503020	Identifier	eVector		2502645	0					
ANR	2503021	IdentifierDeclStatement	ClassAd * newRoot = new ClassAd ( ) ;	427:2:9415:9448	2502645	4	True				
ANR	2503022	IdentifierDecl	* newRoot = new ClassAd ( )		2502645	0					
ANR	2503023	IdentifierDeclType	ClassAd *		2502645	0					
ANR	2503024	Identifier	newRoot		2502645	1					
ANR	2503025	AssignmentExpression	* newRoot = new ClassAd ( )		2502645	2		=			
ANR	2503026	Identifier	newRoot		2502645	0					
ANR	2503027	UnaryExpression	new ClassAd ( )		2502645	1					
ANR	2503028	ExpressionStatement	( ( ExprList * ) tree ) -> SetParentScope ( newRoot )	428:2:9452:9496	2502645	5	True				
ANR	2503029	CallExpression	( ( ExprList * ) tree ) -> SetParentScope ( newRoot )		2502645	0					
ANR	2503030	Callee	( ( ExprList * ) tree ) -> SetParentScope		2502645	0					
ANR	2503031	PtrMemberAccess	( ( ExprList * ) tree ) -> SetParentScope		2502645	0					
ANR	2503032	CastExpression	( ExprList * ) tree		2502645	0					
ANR	2503033	CastTarget	ExprList *		2502645	0					
ANR	2503034	Identifier	tree		2502645	1					
ANR	2503035	Identifier	SetParentScope		2502645	1					
ANR	2503036	ArgumentList	newRoot		2502645	1					
ANR	2503037	Argument	newRoot		2502645	0					
ANR	2503038	Identifier	newRoot		2502645	0					
ANR	2503039	ReturnStatement	return EVAL_OK ;	429:2:9500:9514	2502645	6	True				
ANR	2503040	Identifier	EVAL_OK		2502645	0					
ANR	2503041	IdentifierDeclStatement	"int rc = current -> LookupInScope ( attributeStr , tree , state ) ;"	440:1:9954:10014	2502645	7	True				
ANR	2503042	IdentifierDecl	"rc = current -> LookupInScope ( attributeStr , tree , state )"		2502645	0					
ANR	2503043	IdentifierDeclType	int		2502645	0					
ANR	2503044	Identifier	rc		2502645	1					
ANR	2503045	AssignmentExpression	"rc = current -> LookupInScope ( attributeStr , tree , state )"		2502645	2		=			
ANR	2503046	Identifier	rc		2502645	0					
ANR	2503047	CallExpression	"current -> LookupInScope ( attributeStr , tree , state )"		2502645	1					
ANR	2503048	Callee	current -> LookupInScope		2502645	0					
ANR	2503049	PtrMemberAccess	current -> LookupInScope		2502645	0					
ANR	2503050	Identifier	current		2502645	0					
ANR	2503051	Identifier	LookupInScope		2502645	1					
ANR	2503052	ArgumentList	attributeStr		2502645	1					
ANR	2503053	Argument	attributeStr		2502645	0					
ANR	2503054	Identifier	attributeStr		2502645	0					
ANR	2503055	Argument	tree		2502645	1					
ANR	2503056	Identifier	tree		2502645	0					
ANR	2503057	Argument	state		2502645	2					
ANR	2503058	Identifier	state		2502645	0					
ANR	2503059	IfStatement	if ( ! expr && rc == EVAL_UNDEF && current -> alternateScope )		2502645	8					
ANR	2503060	Condition	! expr && rc == EVAL_UNDEF && current -> alternateScope	441:6:10022:10073	2502645	0	True				
ANR	2503061	AndExpression	! expr && rc == EVAL_UNDEF && current -> alternateScope		2502645	0		&&			
ANR	2503062	UnaryOperationExpression	! expr		2502645	0					
ANR	2503063	UnaryOperator	!		2502645	0					
ANR	2503064	Identifier	expr		2502645	1					
ANR	2503065	AndExpression	rc == EVAL_UNDEF && current -> alternateScope		2502645	1		&&			
ANR	2503066	EqualityExpression	rc == EVAL_UNDEF		2502645	0		==			
ANR	2503067	Identifier	rc		2502645	0					
ANR	2503068	Identifier	EVAL_UNDEF		2502645	1					
ANR	2503069	PtrMemberAccess	current -> alternateScope		2502645	1					
ANR	2503070	Identifier	current		2502645	0					
ANR	2503071	Identifier	alternateScope		2502645	1					
ANR	2503072	CompoundStatement		91:61:2731:2731	2502645	1					
ANR	2503073	ExpressionStatement	"rc = current -> alternateScope -> LookupInScope ( attributeStr , tree , state )"	442:2:10081:10153	2502645	0	True				
ANR	2503074	AssignmentExpression	"rc = current -> alternateScope -> LookupInScope ( attributeStr , tree , state )"		2502645	0		=			
ANR	2503075	Identifier	rc		2502645	0					
ANR	2503076	CallExpression	"current -> alternateScope -> LookupInScope ( attributeStr , tree , state )"		2502645	1					
ANR	2503077	Callee	current -> alternateScope -> LookupInScope		2502645	0					
ANR	2503078	PtrMemberAccess	current -> alternateScope -> LookupInScope		2502645	0					
ANR	2503079	PtrMemberAccess	current -> alternateScope		2502645	0					
ANR	2503080	Identifier	current		2502645	0					
ANR	2503081	Identifier	alternateScope		2502645	1					
ANR	2503082	Identifier	LookupInScope		2502645	1					
ANR	2503083	ArgumentList	attributeStr		2502645	1					
ANR	2503084	Argument	attributeStr		2502645	0					
ANR	2503085	Identifier	attributeStr		2502645	0					
ANR	2503086	Argument	tree		2502645	1					
ANR	2503087	Identifier	tree		2502645	0					
ANR	2503088	Argument	state		2502645	2					
ANR	2503089	Identifier	state		2502645	0					
ANR	2503090	ReturnStatement	return rc ;	444:1:10159:10168	2502645	9	True				
ANR	2503091	Identifier	rc		2502645	0					
ANR	2503092	ReturnType	int		2502645	1					
ANR	2503093	Identifier	AttributeReference :: FindExpr		2502645	2					
ANR	2503094	ParameterList	"EvalState & state , ExprTree * & tree , ExprTree * & sig , bool wantSig"		2502645	3					
ANR	2503095	Parameter	EvalState & state	350:9:7274:7289	2502645	0	True				
ANR	2503096	ParameterType	EvalState &		2502645	0					
ANR	2503097	Identifier	state		2502645	1					
ANR	2503098	Parameter	ExprTree * & tree	350:27:7292:7306	2502645	1	True				
ANR	2503099	ParameterType	ExprTree * &		2502645	0					
ANR	2503100	Identifier	tree		2502645	1					
ANR	2503101	Parameter	ExprTree * & sig	350:44:7309:7322	2502645	2	True				
ANR	2503102	ParameterType	ExprTree * &		2502645	0					
ANR	2503103	Identifier	sig		2502645	1					
ANR	2503104	Parameter	bool wantSig	350:60:7325:7336	2502645	3	True				
ANR	2503105	ParameterType	bool		2502645	0					
ANR	2503106	Identifier	wantSig		2502645	1					
ANR	2503107	CFGEntryNode	ENTRY		2502645		True				
ANR	2503108	CFGExitNode	EXIT		2502645		True				
ANR	2503109	Symbol	currExpr -> Copy		2502645						
ANR	2503110	Symbol	Literal :: MakeLiteral		2502645						
ANR	2503111	Symbol	state . rootAd		2502645						
ANR	2503112	Symbol	* current		2502645						
ANR	2503113	Symbol	evaledList		2502645						
ANR	2503114	Symbol	state . curAd		2502645						
ANR	2503115	Symbol	expr -> Evaluate		2502645						
ANR	2503116	Symbol	state		2502645						
ANR	2503117	Symbol	attributeStr		2502645						
ANR	2503118	Symbol	* evaledList		2502645						
ANR	2503119	Symbol	val		2502645						
ANR	2503120	Symbol	NULL		2502645						
ANR	2503121	Symbol	evaledAd		2502645						
ANR	2503122	Symbol	attrRef		2502645						
ANR	2503123	Symbol	itr		2502645						
ANR	2503124	Symbol	tree		2502645						
ANR	2503125	Symbol	MakeAttributeReference		2502645						
ANR	2503126	Symbol	* currExpr		2502645						
ANR	2503127	Symbol	val . IsUndefinedValue		2502645						
ANR	2503128	Symbol	rc		2502645						
ANR	2503129	Symbol	* * current		2502645						
ANR	2503130	Symbol	* expr		2502645						
ANR	2503131	Symbol	current -> alternateScope		2502645						
ANR	2503132	Symbol	* current -> alternateScope		2502645						
ANR	2503133	Symbol	val . IsErrorValue		2502645						
ANR	2503134	Symbol	current -> LookupInScope		2502645						
ANR	2503135	Symbol	adList		2502645						
ANR	2503136	Symbol	* attrRef		2502645						
ANR	2503137	Symbol	evaledList -> Copy		2502645						
ANR	2503138	Symbol	ExprList :: MakeExprList		2502645						
ANR	2503139	Symbol	sig		2502645						
ANR	2503140	Symbol	PROP_ERROR		2502645						
ANR	2503141	Symbol	current		2502645						
ANR	2503142	Symbol	val . IsClassAdValue		2502645						
ANR	2503143	Symbol	attrRef -> Evaluate		2502645						
ANR	2503144	Symbol	newRoot		2502645						
ANR	2503145	Symbol	EVAL_OK		2502645						
ANR	2503146	Symbol	rval		2502645						
ANR	2503147	Symbol	expr		2502645						
ANR	2503148	Symbol	EVAL_ERROR		2502645						
ANR	2503149	Symbol	val . IsListValue		2502645						
ANR	2503150	Symbol	eVector		2502645						
ANR	2503151	Symbol	tstate		2502645						
ANR	2503152	Symbol	current -> alternateScope -> LookupInScope		2502645						
ANR	2503153	Symbol	false		2502645						
ANR	2503154	Symbol	itr . IsAfterLast		2502645						
ANR	2503155	Symbol	PROP_UNDEF		2502645						
ANR	2503156	Symbol	wantSig		2502645						
ANR	2503157	Symbol	itr . CurrentExpr		2502645						
ANR	2503158	Symbol	EVAL_UNDEF		2502645						
ANR	2503159	Symbol	absolute		2502645						
ANR	2503160	Symbol	EVAL_FAIL		2502645						
ANR	2503161	Symbol	currExpr		2502645						
ANR	2503162	Function	AttributeReference :: MakeAttributeReference	448:0:10174:10354							
ANR	2503163	FunctionDef	"AttributeReference :: MakeAttributeReference (ExprTree * tree , const string & attrStr , bool absolut)"		2503162	0					
ANR	2503164	CompoundStatement		450:0:10291:10354	2503162	0					
ANR	2503165	ReturnStatement	"return ( new AttributeReference ( tree , attrStr , absolut ) ) ;"	451:1:10294:10352	2503162	0	True				
ANR	2503166	Expression	"tree , attrStr , absolut"		2503162	0					
ANR	2503167	Identifier	tree		2503162	0					
ANR	2503168	Expression	"attrStr , absolut"		2503162	1					
ANR	2503169	Identifier	attrStr		2503162	0					
ANR	2503170	Identifier	absolut		2503162	1					
ANR	2503171	ReturnType	AttributeReference *		2503162	1					
ANR	2503172	Identifier	AttributeReference :: MakeAttributeReference		2503162	2					
ANR	2503173	ParameterList	"ExprTree * tree , const string & attrStr , bool absolut"		2503162	3					
ANR	2503174	Parameter	ExprTree * tree	449:23:10238:10251	2503162	0	True				
ANR	2503175	ParameterType	ExprTree *		2503162	0					
ANR	2503176	Identifier	tree		2503162	1					
ANR	2503177	Parameter	const string & attrStr	449:39:10254:10274	2503162	1	True				
ANR	2503178	ParameterType	const string &		2503162	0					
ANR	2503179	Identifier	attrStr		2503162	1					
ANR	2503180	Parameter	bool absolut	449:62:10277:10288	2503162	2	True				
ANR	2503181	ParameterType	bool		2503162	0					
ANR	2503182	Identifier	absolut		2503162	1					
ANR	2503183	CFGEntryNode	ENTRY		2503162		True				
ANR	2503184	CFGExitNode	EXIT		2503162		True				
ANR	2503185	Symbol	attrStr		2503162						
ANR	2503186	Symbol	tree		2503162						
ANR	2503187	Symbol	absolut		2503162						
