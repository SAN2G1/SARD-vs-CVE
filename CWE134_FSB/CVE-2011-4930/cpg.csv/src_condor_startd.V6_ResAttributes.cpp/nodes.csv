command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3882792	File	data/converged/CVE-2011-4930_htcondor/src_condor_startd.V6_ResAttributes.cpp								
ANR	3882793	Function	MachAttributes :: MachAttributes	29:0:926:3247							
ANR	3882794	FunctionDef	MachAttributes :: MachAttributes ()		3882793	0					
ANR	3882795	CompoundStatement		31:0:1021:3247	3882793	0					
ANR	3882796	ExpressionStatement	m_mips = - 1	32:1:1024:1035	3882793	0	True				
ANR	3882797	AssignmentExpression	m_mips = - 1		3882793	0		=			
ANR	3882798	Identifier	m_mips		3882793	0					
ANR	3882799	UnaryOperationExpression	- 1		3882793	1					
ANR	3882800	UnaryOperator	-		3882793	0					
ANR	3882801	PrimaryExpression	1		3882793	1					
ANR	3882802	ExpressionStatement	m_kflops = - 1	33:1:1038:1051	3882793	1	True				
ANR	3882803	AssignmentExpression	m_kflops = - 1		3882793	0		=			
ANR	3882804	Identifier	m_kflops		3882793	0					
ANR	3882805	UnaryOperationExpression	- 1		3882793	1					
ANR	3882806	UnaryOperator	-		3882793	0					
ANR	3882807	PrimaryExpression	1		3882793	1					
ANR	3882808	ExpressionStatement	m_last_benchmark = 0	34:1:1054:1074	3882793	2	True				
ANR	3882809	AssignmentExpression	m_last_benchmark = 0		3882793	0		=			
ANR	3882810	Identifier	m_last_benchmark		3882793	0					
ANR	3882811	PrimaryExpression	0		3882793	1					
ANR	3882812	ExpressionStatement	m_last_keypress = time ( 0 ) - 1	35:1:1077:1104	3882793	3	True				
ANR	3882813	AssignmentExpression	m_last_keypress = time ( 0 ) - 1		3882793	0		=			
ANR	3882814	Identifier	m_last_keypress		3882793	0					
ANR	3882815	AdditiveExpression	time ( 0 ) - 1		3882793	1		-			
ANR	3882816	CallExpression	time ( 0 )		3882793	0					
ANR	3882817	Callee	time		3882793	0					
ANR	3882818	Identifier	time		3882793	0					
ANR	3882819	ArgumentList	0		3882793	1					
ANR	3882820	Argument	0		3882793	0					
ANR	3882821	PrimaryExpression	0		3882793	0					
ANR	3882822	PrimaryExpression	1		3882793	1					
ANR	3882823	ExpressionStatement	m_seen_keypress = false	36:1:1107:1130	3882793	4	True				
ANR	3882824	AssignmentExpression	m_seen_keypress = false		3882793	0		=			
ANR	3882825	Identifier	m_seen_keypress		3882793	0					
ANR	3882826	Identifier	false		3882793	1					
ANR	3882827	ExpressionStatement	m_arch = NULL	38:1:1134:1147	3882793	5	True				
ANR	3882828	AssignmentExpression	m_arch = NULL		3882793	0		=			
ANR	3882829	Identifier	m_arch		3882793	0					
ANR	3882830	Identifier	NULL		3882793	1					
ANR	3882831	ExpressionStatement	m_opsys = NULL	39:1:1150:1164	3882793	6	True				
ANR	3882832	AssignmentExpression	m_opsys = NULL		3882793	0		=			
ANR	3882833	Identifier	m_opsys		3882793	0					
ANR	3882834	Identifier	NULL		3882793	1					
ANR	3882835	ExpressionStatement	m_opsysver = 0	40:1:1167:1181	3882793	7	True				
ANR	3882836	AssignmentExpression	m_opsysver = 0		3882793	0		=			
ANR	3882837	Identifier	m_opsysver		3882793	0					
ANR	3882838	PrimaryExpression	0		3882793	1					
ANR	3882839	ExpressionStatement	m_opsys_and_ver = NULL	41:1:1184:1206	3882793	8	True				
ANR	3882840	AssignmentExpression	m_opsys_and_ver = NULL		3882793	0		=			
ANR	3882841	Identifier	m_opsys_and_ver		3882793	0					
ANR	3882842	Identifier	NULL		3882793	1					
ANR	3882843	ExpressionStatement	m_uid_domain = NULL	42:1:1209:1228	3882793	9	True				
ANR	3882844	AssignmentExpression	m_uid_domain = NULL		3882793	0		=			
ANR	3882845	Identifier	m_uid_domain		3882793	0					
ANR	3882846	Identifier	NULL		3882793	1					
ANR	3882847	ExpressionStatement	m_filesystem_domain = NULL	43:1:1231:1257	3882793	10	True				
ANR	3882848	AssignmentExpression	m_filesystem_domain = NULL		3882793	0		=			
ANR	3882849	Identifier	m_filesystem_domain		3882793	0					
ANR	3882850	Identifier	NULL		3882793	1					
ANR	3882851	ExpressionStatement	m_idle_interval = - 1	44:1:1260:1280	3882793	11	True				
ANR	3882852	AssignmentExpression	m_idle_interval = - 1		3882793	0		=			
ANR	3882853	Identifier	m_idle_interval		3882793	0					
ANR	3882854	UnaryOperationExpression	- 1		3882793	1					
ANR	3882855	UnaryOperator	-		3882793	0					
ANR	3882856	PrimaryExpression	1		3882793	1					
ANR	3882857	ExpressionStatement	m_ckptpltfrm = NULL	45:1:1283:1302	3882793	12	True				
ANR	3882858	AssignmentExpression	m_ckptpltfrm = NULL		3882793	0		=			
ANR	3882859	Identifier	m_ckptpltfrm		3882793	0					
ANR	3882860	Identifier	NULL		3882793	1					
ANR	3882861	ExpressionStatement	m_clock_day = - 1	47:1:1306:1322	3882793	13	True				
ANR	3882862	AssignmentExpression	m_clock_day = - 1		3882793	0		=			
ANR	3882863	Identifier	m_clock_day		3882793	0					
ANR	3882864	UnaryOperationExpression	- 1		3882793	1					
ANR	3882865	UnaryOperator	-		3882793	0					
ANR	3882866	PrimaryExpression	1		3882793	1					
ANR	3882867	ExpressionStatement	m_clock_min = - 1	48:1:1325:1341	3882793	14	True				
ANR	3882868	AssignmentExpression	m_clock_min = - 1		3882793	0		=			
ANR	3882869	Identifier	m_clock_min		3882793	0					
ANR	3882870	UnaryOperationExpression	- 1		3882793	1					
ANR	3882871	UnaryOperator	-		3882793	0					
ANR	3882872	PrimaryExpression	1		3882793	1					
ANR	3882873	ExpressionStatement	m_condor_load = - 1.0	49:1:1344:1364	3882793	15	True				
ANR	3882874	AssignmentExpression	m_condor_load = - 1.0		3882793	0		=			
ANR	3882875	Identifier	m_condor_load		3882793	0					
ANR	3882876	UnaryOperationExpression	- 1.0		3882793	1					
ANR	3882877	UnaryOperator	-		3882793	0					
ANR	3882878	PrimaryExpression	1.0		3882793	1					
ANR	3882879	ExpressionStatement	m_console_idle = 0	50:1:1367:1385	3882793	16	True				
ANR	3882880	AssignmentExpression	m_console_idle = 0		3882793	0		=			
ANR	3882881	Identifier	m_console_idle		3882793	0					
ANR	3882882	PrimaryExpression	0		3882793	1					
ANR	3882883	ExpressionStatement	m_idle = 0	51:1:1388:1398	3882793	17	True				
ANR	3882884	AssignmentExpression	m_idle = 0		3882793	0		=			
ANR	3882885	Identifier	m_idle		3882793	0					
ANR	3882886	PrimaryExpression	0		3882793	1					
ANR	3882887	ExpressionStatement	m_load = - 1.0	52:1:1401:1414	3882793	18	True				
ANR	3882888	AssignmentExpression	m_load = - 1.0		3882793	0		=			
ANR	3882889	Identifier	m_load		3882793	0					
ANR	3882890	UnaryOperationExpression	- 1.0		3882793	1					
ANR	3882891	UnaryOperator	-		3882793	0					
ANR	3882892	PrimaryExpression	1.0		3882793	1					
ANR	3882893	ExpressionStatement	m_owner_load = - 1.0	53:1:1417:1436	3882793	19	True				
ANR	3882894	AssignmentExpression	m_owner_load = - 1.0		3882793	0		=			
ANR	3882895	Identifier	m_owner_load		3882793	0					
ANR	3882896	UnaryOperationExpression	- 1.0		3882793	1					
ANR	3882897	UnaryOperator	-		3882793	0					
ANR	3882898	PrimaryExpression	1.0		3882793	1					
ANR	3882899	ExpressionStatement	m_virt_mem = 0	54:1:1439:1453	3882793	20	True				
ANR	3882900	AssignmentExpression	m_virt_mem = 0		3882793	0		=			
ANR	3882901	Identifier	m_virt_mem		3882793	0					
ANR	3882902	PrimaryExpression	0		3882793	1					
ANR	3882903	ExpressionStatement	m_num_cpus = sysapi_ncpus ( )	59:1:1647:1674	3882793	21	True				
ANR	3882904	AssignmentExpression	m_num_cpus = sysapi_ncpus ( )		3882793	0		=			
ANR	3882905	Identifier	m_num_cpus		3882793	0					
ANR	3882906	CallExpression	sysapi_ncpus ( )		3882793	1					
ANR	3882907	Callee	sysapi_ncpus		3882793	0					
ANR	3882908	Identifier	sysapi_ncpus		3882793	0					
ANR	3882909	ArgumentList			3882793	1					
ANR	3882910	ExpressionStatement	m_num_real_cpus = sysapi_ncpus_raw ( )	61:1:1678:1714	3882793	22	True				
ANR	3882911	AssignmentExpression	m_num_real_cpus = sysapi_ncpus_raw ( )		3882793	0		=			
ANR	3882912	Identifier	m_num_real_cpus		3882793	0					
ANR	3882913	CallExpression	sysapi_ncpus_raw ( )		3882793	1					
ANR	3882914	Callee	sysapi_ncpus_raw		3882793	0					
ANR	3882915	Identifier	sysapi_ncpus_raw		3882793	0					
ANR	3882916	ArgumentList			3882793	1					
ANR	3882917	ExpressionStatement	m_phys_mem = sysapi_phys_memory ( )	66:1:1897:1930	3882793	23	True				
ANR	3882918	AssignmentExpression	m_phys_mem = sysapi_phys_memory ( )		3882793	0		=			
ANR	3882919	Identifier	m_phys_mem		3882793	0					
ANR	3882920	CallExpression	sysapi_phys_memory ( )		3882793	1					
ANR	3882921	Callee	sysapi_phys_memory		3882793	0					
ANR	3882922	Identifier	sysapi_phys_memory		3882793	0					
ANR	3882923	ArgumentList			3882793	1					
ANR	3882924	IfStatement	if ( m_phys_mem <= 0 )		3882793	24					
ANR	3882925	Condition	m_phys_mem <= 0	67:5:1937:1951	3882793	0	True				
ANR	3882926	RelationalExpression	m_phys_mem <= 0		3882793	0		<=			
ANR	3882927	Identifier	m_phys_mem		3882793	0					
ANR	3882928	PrimaryExpression	0		3882793	1					
ANR	3882929	CompoundStatement		37:23:933:933	3882793	1					
ANR	3882930	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error computing physical memory with calc_phys_mem().\\n"" )"	68:2:1959:2043	3882793	0	True				
ANR	3882931	CallExpression	"dprintf ( D_ALWAYS , ""Error computing physical memory with calc_phys_mem().\\n"" )"		3882793	0					
ANR	3882932	Callee	dprintf		3882793	0					
ANR	3882933	Identifier	dprintf		3882793	0					
ANR	3882934	ArgumentList	D_ALWAYS		3882793	1					
ANR	3882935	Argument	D_ALWAYS		3882793	0					
ANR	3882936	Identifier	D_ALWAYS		3882793	0					
ANR	3882937	Argument	"""Error computing physical memory with calc_phys_mem().\\n"""		3882793	1					
ANR	3882938	PrimaryExpression	"""Error computing physical memory with calc_phys_mem().\\n"""		3882793	0					
ANR	3882939	ExpressionStatement	"dprintf ( D_ALWAYS | D_NOHEADER , ""\\t\\tMEMORY parameter not defined in config file.\\n"" )"	70:2:2047:2139	3882793	1	True				
ANR	3882940	CallExpression	"dprintf ( D_ALWAYS | D_NOHEADER , ""\\t\\tMEMORY parameter not defined in config file.\\n"" )"		3882793	0					
ANR	3882941	Callee	dprintf		3882793	0					
ANR	3882942	Identifier	dprintf		3882793	0					
ANR	3882943	ArgumentList	D_ALWAYS | D_NOHEADER		3882793	1					
ANR	3882944	Argument	D_ALWAYS | D_NOHEADER		3882793	0					
ANR	3882945	InclusiveOrExpression	D_ALWAYS | D_NOHEADER		3882793	0		|			
ANR	3882946	Identifier	D_ALWAYS		3882793	0					
ANR	3882947	Identifier	D_NOHEADER		3882793	1					
ANR	3882948	Argument	"""\\t\\tMEMORY parameter not defined in config file.\\n"""		3882793	1					
ANR	3882949	PrimaryExpression	"""\\t\\tMEMORY parameter not defined in config file.\\n"""		3882793	0					
ANR	3882950	ExpressionStatement	"dprintf ( D_ALWAYS | D_NOHEADER , ""\\t\\tTry setting MEMORY to the number of megabytes of RAM.\\n"" )"	72:2:2143:2249	3882793	2	True				
ANR	3882951	CallExpression	"dprintf ( D_ALWAYS | D_NOHEADER , ""\\t\\tTry setting MEMORY to the number of megabytes of RAM.\\n"" )"		3882793	0					
ANR	3882952	Callee	dprintf		3882793	0					
ANR	3882953	Identifier	dprintf		3882793	0					
ANR	3882954	ArgumentList	D_ALWAYS | D_NOHEADER		3882793	1					
ANR	3882955	Argument	D_ALWAYS | D_NOHEADER		3882793	0					
ANR	3882956	InclusiveOrExpression	D_ALWAYS | D_NOHEADER		3882793	0		|			
ANR	3882957	Identifier	D_ALWAYS		3882793	0					
ANR	3882958	Identifier	D_NOHEADER		3882793	1					
ANR	3882959	Argument	"""\\t\\tTry setting MEMORY to the number of megabytes of RAM.\\n"""		3882793	1					
ANR	3882960	PrimaryExpression	"""\\t\\tTry setting MEMORY to the number of megabytes of RAM.\\n"""		3882793	0					
ANR	3882961	ExpressionStatement	"EXCEPT ( ""Can't compute physical memory."" )"	75:2:2253:2295	3882793	3	True				
ANR	3882962	CallExpression	"EXCEPT ( ""Can't compute physical memory."" )"		3882793	0					
ANR	3882963	Callee	EXCEPT		3882793	0					
ANR	3882964	Identifier	EXCEPT		3882793	0					
ANR	3882965	ArgumentList	"""Can't compute physical memory."""		3882793	1					
ANR	3882966	Argument	"""Can't compute physical memory."""		3882793	0					
ANR	3882967	PrimaryExpression	"""Can't compute physical memory."""		3882793	0					
ANR	3882968	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Memory: Detected %d megs RAM\\n"" , m_phys_mem )"	78:1:2302:2370	3882793	25	True				
ANR	3882969	CallExpression	"dprintf ( D_FULLDEBUG , ""Memory: Detected %d megs RAM\\n"" , m_phys_mem )"		3882793	0					
ANR	3882970	Callee	dprintf		3882793	0					
ANR	3882971	Identifier	dprintf		3882793	0					
ANR	3882972	ArgumentList	D_FULLDEBUG		3882793	1					
ANR	3882973	Argument	D_FULLDEBUG		3882793	0					
ANR	3882974	Identifier	D_FULLDEBUG		3882793	0					
ANR	3882975	Argument	"""Memory: Detected %d megs RAM\\n"""		3882793	1					
ANR	3882976	PrimaryExpression	"""Memory: Detected %d megs RAM\\n"""		3882793	0					
ANR	3882977	Argument	m_phys_mem		3882793	2					
ANR	3882978	Identifier	m_phys_mem		3882793	0					
ANR	3882979	ExpressionStatement	m_ckptpltfrm = strdup ( sysapi_ckptpltfrm ( ) )	81:1:2434:2476	3882793	26	True				
ANR	3882980	AssignmentExpression	m_ckptpltfrm = strdup ( sysapi_ckptpltfrm ( ) )		3882793	0		=			
ANR	3882981	Identifier	m_ckptpltfrm		3882793	0					
ANR	3882982	CallExpression	strdup ( sysapi_ckptpltfrm ( ) )		3882793	1					
ANR	3882983	Callee	strdup		3882793	0					
ANR	3882984	Identifier	strdup		3882793	0					
ANR	3882985	ArgumentList	sysapi_ckptpltfrm ( )		3882793	1					
ANR	3882986	Argument	sysapi_ckptpltfrm ( )		3882793	0					
ANR	3882987	CallExpression	sysapi_ckptpltfrm ( )		3882793	0					
ANR	3882988	Callee	sysapi_ckptpltfrm		3882793	0					
ANR	3882989	Identifier	sysapi_ckptpltfrm		3882793	0					
ANR	3882990	ArgumentList			3882793	1					
ANR	3882991	ExpressionStatement	"ZeroMemory ( & m_window_version_info , sizeof ( OSVERSIONINFOEX ) )"	86:1:2577:2642	3882793	27	True				
ANR	3882992	CallExpression	"ZeroMemory ( & m_window_version_info , sizeof ( OSVERSIONINFOEX ) )"		3882793	0					
ANR	3882993	Callee	ZeroMemory		3882793	0					
ANR	3882994	Identifier	ZeroMemory		3882793	0					
ANR	3882995	ArgumentList	& m_window_version_info		3882793	1					
ANR	3882996	Argument	& m_window_version_info		3882793	0					
ANR	3882997	UnaryOperationExpression	& m_window_version_info		3882793	0					
ANR	3882998	UnaryOperator	&		3882793	0					
ANR	3882999	Identifier	m_window_version_info		3882793	1					
ANR	3883000	Argument	sizeof ( OSVERSIONINFOEX )		3882793	1					
ANR	3883001	SizeofExpression	sizeof ( OSVERSIONINFOEX )		3882793	0					
ANR	3883002	Sizeof	sizeof		3882793	0					
ANR	3883003	SizeofOperand	OSVERSIONINFOEX		3882793	1					
ANR	3883004	ExpressionStatement	m_window_version_info . dwOSVersionInfoSize = sizeof ( OSVERSIONINFOEX )	87:1:2645:2718	3882793	28	True				
ANR	3883005	AssignmentExpression	m_window_version_info . dwOSVersionInfoSize = sizeof ( OSVERSIONINFOEX )		3882793	0		=			
ANR	3883006	MemberAccess	m_window_version_info . dwOSVersionInfoSize		3882793	0					
ANR	3883007	Identifier	m_window_version_info		3882793	0					
ANR	3883008	Identifier	dwOSVersionInfoSize		3882793	1					
ANR	3883009	SizeofExpression	sizeof ( OSVERSIONINFOEX )		3882793	1					
ANR	3883010	Sizeof	sizeof		3882793	0					
ANR	3883011	SizeofOperand	OSVERSIONINFOEX		3882793	1					
ANR	3883012	ExpressionStatement	m_got_windows_version_info = GetVersionEx ( ( OSVERSIONINFO * ) & m_window_version_info )	89:1:2722:2810	3882793	29	True				
ANR	3883013	AssignmentExpression	m_got_windows_version_info = GetVersionEx ( ( OSVERSIONINFO * ) & m_window_version_info )		3882793	0		=			
ANR	3883014	Identifier	m_got_windows_version_info		3882793	0					
ANR	3883015	CallExpression	GetVersionEx ( ( OSVERSIONINFO * ) & m_window_version_info )		3882793	1					
ANR	3883016	Callee	GetVersionEx		3882793	0					
ANR	3883017	Identifier	GetVersionEx		3882793	0					
ANR	3883018	ArgumentList	( OSVERSIONINFO * ) & m_window_version_info		3882793	1					
ANR	3883019	Argument	( OSVERSIONINFO * ) & m_window_version_info		3882793	0					
ANR	3883020	CastExpression	( OSVERSIONINFO * ) & m_window_version_info		3882793	0					
ANR	3883021	CastTarget	OSVERSIONINFO *		3882793	0					
ANR	3883022	UnaryOperationExpression	& m_window_version_info		3882793	1					
ANR	3883023	UnaryOperator	&		3882793	0					
ANR	3883024	Identifier	m_window_version_info		3882793	1					
ANR	3883025	IfStatement	if ( ! m_got_windows_version_info )		3882793	30					
ANR	3883026	Condition	! m_got_windows_version_info	91:6:2818:2844	3882793	0	True				
ANR	3883027	UnaryOperationExpression	! m_got_windows_version_info		3882793	0					
ANR	3883028	UnaryOperator	!		3882793	0					
ANR	3883029	Identifier	m_got_windows_version_info		3882793	1					
ANR	3883030	CompoundStatement		61:36:1826:1826	3882793	1					
ANR	3883031	ExpressionStatement	m_window_version_info . dwOSVersionInfoSize = sizeof ( OSVERSIONINFO )	92:2:2852:2924	3882793	0	True				
ANR	3883032	AssignmentExpression	m_window_version_info . dwOSVersionInfoSize = sizeof ( OSVERSIONINFO )		3882793	0		=			
ANR	3883033	MemberAccess	m_window_version_info . dwOSVersionInfoSize		3882793	0					
ANR	3883034	Identifier	m_window_version_info		3882793	0					
ANR	3883035	Identifier	dwOSVersionInfoSize		3882793	1					
ANR	3883036	SizeofExpression	sizeof ( OSVERSIONINFO )		3882793	1					
ANR	3883037	Sizeof	sizeof		3882793	0					
ANR	3883038	SizeofOperand	OSVERSIONINFO		3882793	1					
ANR	3883039	ExpressionStatement	m_got_windows_version_info = GetVersionEx ( ( OSVERSIONINFO * ) & m_window_version_info )	94:2:2929:3018	3882793	1	True				
ANR	3883040	AssignmentExpression	m_got_windows_version_info = GetVersionEx ( ( OSVERSIONINFO * ) & m_window_version_info )		3882793	0		=			
ANR	3883041	Identifier	m_got_windows_version_info		3882793	0					
ANR	3883042	CallExpression	GetVersionEx ( ( OSVERSIONINFO * ) & m_window_version_info )		3882793	1					
ANR	3883043	Callee	GetVersionEx		3882793	0					
ANR	3883044	Identifier	GetVersionEx		3882793	0					
ANR	3883045	ArgumentList	( OSVERSIONINFO * ) & m_window_version_info		3882793	1					
ANR	3883046	Argument	( OSVERSIONINFO * ) & m_window_version_info		3882793	0					
ANR	3883047	CastExpression	( OSVERSIONINFO * ) & m_window_version_info		3882793	0					
ANR	3883048	CastTarget	OSVERSIONINFO *		3882793	0					
ANR	3883049	UnaryOperationExpression	& m_window_version_info		3882793	1					
ANR	3883050	UnaryOperator	&		3882793	0					
ANR	3883051	Identifier	m_window_version_info		3882793	1					
ANR	3883052	IfStatement	if ( ! m_got_windows_version_info )		3882793	2					
ANR	3883053	Condition	! m_got_windows_version_info	96:7:3027:3053	3882793	0	True				
ANR	3883054	UnaryOperationExpression	! m_got_windows_version_info		3882793	0					
ANR	3883055	UnaryOperator	!		3882793	0					
ANR	3883056	Identifier	m_got_windows_version_info		3882793	1					
ANR	3883057	CompoundStatement		66:37:2035:2035	3882793	1					
ANR	3883058	Statement	dprintf	97:3:3062:3068	3882793	0	True				
ANR	3883059	Statement	(	97:11:3070:3070	3882793	1	True				
ANR	3883060	Statement	D_ALWAYS	97:13:3072:3079	3882793	2	True				
ANR	3883061	Statement	","	97:21:3080:3080	3882793	3	True				
ANR	3883062	Statement	"""MachAttributes: failed to """	97:23:3082:3109	3882793	4	True				
ANR	3883063	Statement	"""get Windows version information.\\n"""	98:4:3115:3150	3882793	5	True				
ANR	3883064	Statement	)	98:41:3152:3152	3882793	6	True				
ANR	3883065	ExpressionStatement		98:42:3153:3153	3882793	7	True				
ANR	3883066	ExpressionStatement	m_local_credd = NULL	101:1:3163:3183	3882793	31	True				
ANR	3883067	AssignmentExpression	m_local_credd = NULL		3882793	0		=			
ANR	3883068	Identifier	m_local_credd		3882793	0					
ANR	3883069	Identifier	NULL		3882793	1					
ANR	3883070	ExpressionStatement	m_last_credd_test = 0	102:1:3186:3207	3882793	32	True				
ANR	3883071	AssignmentExpression	m_last_credd_test = 0		3882793	0		=			
ANR	3883072	Identifier	m_last_credd_test		3882793	0					
ANR	3883073	PrimaryExpression	0		3882793	1					
ANR	3883074	ExpressionStatement	m_dot_Net_Versions = NULL	103:4:3213:3238	3882793	33	True				
ANR	3883075	AssignmentExpression	m_dot_Net_Versions = NULL		3882793	0		=			
ANR	3883076	Identifier	m_dot_Net_Versions		3882793	0					
ANR	3883077	Identifier	NULL		3882793	1					
ANR	3883078	Identifier	MachAttributes :: MachAttributes		3882793	1					
ANR	3883079	ParameterList			3882793	2					
ANR	3883080	CFGEntryNode	ENTRY		3882793		True				
ANR	3883081	CFGExitNode	EXIT		3882793		True				
ANR	3883082	Symbol	m_arch		3882793						
ANR	3883083	Symbol	m_kflops		3882793						
ANR	3883084	Symbol	m_ckptpltfrm		3882793						
ANR	3883085	Symbol	m_idle_interval		3882793						
ANR	3883086	Symbol	m_local_credd		3882793						
ANR	3883087	Symbol	m_opsysver		3882793						
ANR	3883088	Symbol	m_idle		3882793						
ANR	3883089	Symbol	m_phys_mem		3882793						
ANR	3883090	Symbol	m_opsys		3882793						
ANR	3883091	Symbol	m_console_idle		3882793						
ANR	3883092	Symbol	GetVersionEx		3882793						
ANR	3883093	Symbol	m_window_version_info . dwOSVersionInfoSize		3882793						
ANR	3883094	Symbol	m_seen_keypress		3882793						
ANR	3883095	Symbol	m_last_credd_test		3882793						
ANR	3883096	Symbol	m_opsys_and_ver		3882793						
ANR	3883097	Symbol	m_load		3882793						
ANR	3883098	Symbol	m_uid_domain		3882793						
ANR	3883099	Symbol	m_num_real_cpus		3882793						
ANR	3883100	Symbol	m_filesystem_domain		3882793						
ANR	3883101	Symbol	m_mips		3882793						
ANR	3883102	Symbol	sysapi_ckptpltfrm		3882793						
ANR	3883103	Symbol	m_got_windows_version_info		3882793						
ANR	3883104	Symbol	NULL		3882793						
ANR	3883105	Symbol	m_clock_min		3882793						
ANR	3883106	Symbol	m_last_benchmark		3882793						
ANR	3883107	Symbol	m_virt_mem		3882793						
ANR	3883108	Symbol	& m_window_version_info		3882793						
ANR	3883109	Symbol	false		3882793						
ANR	3883110	Symbol	m_condor_load		3882793						
ANR	3883111	Symbol	D_ALWAYS		3882793						
ANR	3883112	Symbol	D_FULLDEBUG		3882793						
ANR	3883113	Symbol	m_owner_load		3882793						
ANR	3883114	Symbol	m_clock_day		3882793						
ANR	3883115	Symbol	m_dot_Net_Versions		3882793						
ANR	3883116	Symbol	m_num_cpus		3882793						
ANR	3883117	Symbol	sysapi_ncpus_raw		3882793						
ANR	3883118	Symbol	m_window_version_info		3882793						
ANR	3883119	Symbol	sysapi_phys_memory		3882793						
ANR	3883120	Symbol	time		3882793						
ANR	3883121	Symbol	sysapi_ncpus		3882793						
ANR	3883122	Symbol	strdup		3882793						
ANR	3883123	Symbol	m_last_keypress		3882793						
ANR	3883124	Symbol	D_NOHEADER		3882793						
ANR	3883125	Function	MachAttributes :: ~MachAttributes	108:0:3251:4049							
ANR	3883126	FunctionDef	MachAttributes :: ~MachAttributes ()		3883125	0					
ANR	3883127	CompoundStatement		109:0:3285:4049	3883125	0					
ANR	3883128	IfStatement	if ( m_arch )		3883125	0					
ANR	3883129	Condition	m_arch	110:5:3292:3297	3883125	0	True				
ANR	3883130	Identifier	m_arch		3883125	0					
ANR	3883131	ExpressionStatement	free ( m_arch )	110:14:3301:3315	3883125	1	True				
ANR	3883132	CallExpression	free ( m_arch )		3883125	0					
ANR	3883133	Callee	free		3883125	0					
ANR	3883134	Identifier	free		3883125	0					
ANR	3883135	ArgumentList	m_arch		3883125	1					
ANR	3883136	Argument	m_arch		3883125	0					
ANR	3883137	Identifier	m_arch		3883125	0					
ANR	3883138	IfStatement	if ( m_opsys )		3883125	1					
ANR	3883139	Condition	m_opsys	111:5:3322:3328	3883125	0	True				
ANR	3883140	Identifier	m_opsys		3883125	0					
ANR	3883141	ExpressionStatement	free ( m_opsys )	111:15:3332:3347	3883125	1	True				
ANR	3883142	CallExpression	free ( m_opsys )		3883125	0					
ANR	3883143	Callee	free		3883125	0					
ANR	3883144	Identifier	free		3883125	0					
ANR	3883145	ArgumentList	m_opsys		3883125	1					
ANR	3883146	Argument	m_opsys		3883125	0					
ANR	3883147	Identifier	m_opsys		3883125	0					
ANR	3883148	IfStatement	if ( m_opsys_and_ver )		3883125	2					
ANR	3883149	Condition	m_opsys_and_ver	112:5:3354:3368	3883125	0	True				
ANR	3883150	Identifier	m_opsys_and_ver		3883125	0					
ANR	3883151	ExpressionStatement	free ( m_opsys_and_ver )	112:23:3372:3395	3883125	1	True				
ANR	3883152	CallExpression	free ( m_opsys_and_ver )		3883125	0					
ANR	3883153	Callee	free		3883125	0					
ANR	3883154	Identifier	free		3883125	0					
ANR	3883155	ArgumentList	m_opsys_and_ver		3883125	1					
ANR	3883156	Argument	m_opsys_and_ver		3883125	0					
ANR	3883157	Identifier	m_opsys_and_ver		3883125	0					
ANR	3883158	IfStatement	if ( m_uid_domain )		3883125	3					
ANR	3883159	Condition	m_uid_domain	113:5:3402:3413	3883125	0	True				
ANR	3883160	Identifier	m_uid_domain		3883125	0					
ANR	3883161	ExpressionStatement	free ( m_uid_domain )	113:20:3417:3437	3883125	1	True				
ANR	3883162	CallExpression	free ( m_uid_domain )		3883125	0					
ANR	3883163	Callee	free		3883125	0					
ANR	3883164	Identifier	free		3883125	0					
ANR	3883165	ArgumentList	m_uid_domain		3883125	1					
ANR	3883166	Argument	m_uid_domain		3883125	0					
ANR	3883167	Identifier	m_uid_domain		3883125	0					
ANR	3883168	IfStatement	if ( m_filesystem_domain )		3883125	4					
ANR	3883169	Condition	m_filesystem_domain	114:5:3444:3462	3883125	0	True				
ANR	3883170	Identifier	m_filesystem_domain		3883125	0					
ANR	3883171	ExpressionStatement	free ( m_filesystem_domain )	114:27:3466:3493	3883125	1	True				
ANR	3883172	CallExpression	free ( m_filesystem_domain )		3883125	0					
ANR	3883173	Callee	free		3883125	0					
ANR	3883174	Identifier	free		3883125	0					
ANR	3883175	ArgumentList	m_filesystem_domain		3883125	1					
ANR	3883176	Argument	m_filesystem_domain		3883125	0					
ANR	3883177	Identifier	m_filesystem_domain		3883125	0					
ANR	3883178	IfStatement	if ( m_ckptpltfrm )		3883125	5					
ANR	3883179	Condition	m_ckptpltfrm	115:5:3500:3511	3883125	0	True				
ANR	3883180	Identifier	m_ckptpltfrm		3883125	0					
ANR	3883181	ExpressionStatement	free ( m_ckptpltfrm )	115:20:3515:3535	3883125	1	True				
ANR	3883182	CallExpression	free ( m_ckptpltfrm )		3883125	0					
ANR	3883183	Callee	free		3883125	0					
ANR	3883184	Identifier	free		3883125	0					
ANR	3883185	ArgumentList	m_ckptpltfrm		3883125	1					
ANR	3883186	Argument	m_ckptpltfrm		3883125	0					
ANR	3883187	Identifier	m_ckptpltfrm		3883125	0					
ANR	3883188	IdentifierDeclStatement	AttribValue * val = NULL ;	117:4:3542:3565	3883125	6	True				
ANR	3883189	IdentifierDecl	* val = NULL		3883125	0					
ANR	3883190	IdentifierDeclType	AttribValue *		3883125	0					
ANR	3883191	Identifier	val		3883125	1					
ANR	3883192	AssignmentExpression	* val = NULL		3883125	2		=			
ANR	3883193	Identifier	NULL		3883125	0					
ANR	3883194	Identifier	NULL		3883125	1					
ANR	3883195	ExpressionStatement	m_lst_dynamic . Rewind ( )	118:4:3571:3593	3883125	7	True				
ANR	3883196	CallExpression	m_lst_dynamic . Rewind ( )		3883125	0					
ANR	3883197	Callee	m_lst_dynamic . Rewind		3883125	0					
ANR	3883198	MemberAccess	m_lst_dynamic . Rewind		3883125	0					
ANR	3883199	Identifier	m_lst_dynamic		3883125	0					
ANR	3883200	Identifier	Rewind		3883125	1					
ANR	3883201	ArgumentList			3883125	1					
ANR	3883202	WhileStatement	while ( ( val = m_lst_dynamic . Next ( ) ) )		3883125	8					
ANR	3883203	Condition	val = m_lst_dynamic . Next ( )	119:11:3606:3633	3883125	0	True				
ANR	3883204	AssignmentExpression	val = m_lst_dynamic . Next ( )		3883125	0		=			
ANR	3883205	Identifier	val		3883125	0					
ANR	3883206	CallExpression	m_lst_dynamic . Next ( )		3883125	1					
ANR	3883207	Callee	m_lst_dynamic . Next		3883125	0					
ANR	3883208	MemberAccess	m_lst_dynamic . Next		3883125	0					
ANR	3883209	Identifier	m_lst_dynamic		3883125	0					
ANR	3883210	Identifier	Next		3883125	1					
ANR	3883211	ArgumentList			3883125	1					
ANR	3883212	CompoundStatement		11:42:351:351	3883125	1					
ANR	3883213	IfStatement	if ( val )		3883125	0					
ANR	3883214	Condition	val	120:11:3650:3652	3883125	0	True				
ANR	3883215	Identifier	val		3883125	0					
ANR	3883216	ExpressionStatement	free ( val )	120:16:3655:3665	3883125	1	True				
ANR	3883217	CallExpression	free ( val )		3883125	0					
ANR	3883218	Callee	free		3883125	0					
ANR	3883219	Identifier	free		3883125	0					
ANR	3883220	ArgumentList	val		3883125	1					
ANR	3883221	Argument	val		3883125	0					
ANR	3883222	Identifier	val		3883125	0					
ANR	3883223	ExpressionStatement	m_lst_dynamic . DeleteCurrent ( )	121:7:3674:3703	3883125	1	True				
ANR	3883224	CallExpression	m_lst_dynamic . DeleteCurrent ( )		3883125	0					
ANR	3883225	Callee	m_lst_dynamic . DeleteCurrent		3883125	0					
ANR	3883226	MemberAccess	m_lst_dynamic . DeleteCurrent		3883125	0					
ANR	3883227	Identifier	m_lst_dynamic		3883125	0					
ANR	3883228	Identifier	DeleteCurrent		3883125	1					
ANR	3883229	ArgumentList			3883125	1					
ANR	3883230	ExpressionStatement	m_lst_static . Rewind ( )	124:4:3716:3737	3883125	9	True				
ANR	3883231	CallExpression	m_lst_static . Rewind ( )		3883125	0					
ANR	3883232	Callee	m_lst_static . Rewind		3883125	0					
ANR	3883233	MemberAccess	m_lst_static . Rewind		3883125	0					
ANR	3883234	Identifier	m_lst_static		3883125	0					
ANR	3883235	Identifier	Rewind		3883125	1					
ANR	3883236	ArgumentList			3883125	1					
ANR	3883237	WhileStatement	while ( ( val = m_lst_static . Next ( ) ) )		3883125	10					
ANR	3883238	Condition	val = m_lst_static . Next ( )	125:11:3750:3776	3883125	0	True				
ANR	3883239	AssignmentExpression	val = m_lst_static . Next ( )		3883125	0		=			
ANR	3883240	Identifier	val		3883125	0					
ANR	3883241	CallExpression	m_lst_static . Next ( )		3883125	1					
ANR	3883242	Callee	m_lst_static . Next		3883125	0					
ANR	3883243	MemberAccess	m_lst_static . Next		3883125	0					
ANR	3883244	Identifier	m_lst_static		3883125	0					
ANR	3883245	Identifier	Next		3883125	1					
ANR	3883246	ArgumentList			3883125	1					
ANR	3883247	CompoundStatement		17:40:493:493	3883125	1					
ANR	3883248	IfStatement	if ( val )		3883125	0					
ANR	3883249	Condition	val	126:11:3792:3794	3883125	0	True				
ANR	3883250	Identifier	val		3883125	0					
ANR	3883251	ExpressionStatement	free ( val )	126:16:3797:3807	3883125	1	True				
ANR	3883252	CallExpression	free ( val )		3883125	0					
ANR	3883253	Callee	free		3883125	0					
ANR	3883254	Identifier	free		3883125	0					
ANR	3883255	ArgumentList	val		3883125	1					
ANR	3883256	Argument	val		3883125	0					
ANR	3883257	Identifier	val		3883125	0					
ANR	3883258	ExpressionStatement	m_lst_static . DeleteCurrent ( )	127:7:3816:3844	3883125	1	True				
ANR	3883259	CallExpression	m_lst_static . DeleteCurrent ( )		3883125	0					
ANR	3883260	Callee	m_lst_static . DeleteCurrent		3883125	0					
ANR	3883261	MemberAccess	m_lst_static . DeleteCurrent		3883125	0					
ANR	3883262	Identifier	m_lst_static		3883125	0					
ANR	3883263	Identifier	DeleteCurrent		3883125	1					
ANR	3883264	ArgumentList			3883125	1					
ANR	3883265	ExpressionStatement	m_user_specified . clearAll ( )	129:4:3856:3883	3883125	11	True				
ANR	3883266	CallExpression	m_user_specified . clearAll ( )		3883125	0					
ANR	3883267	Callee	m_user_specified . clearAll		3883125	0					
ANR	3883268	MemberAccess	m_user_specified . clearAll		3883125	0					
ANR	3883269	Identifier	m_user_specified		3883125	0					
ANR	3883270	Identifier	clearAll		3883125	1					
ANR	3883271	ArgumentList			3883125	1					
ANR	3883272	IfStatement	if ( m_local_credd )		3883125	12					
ANR	3883273	Condition	m_local_credd	131:5:3909:3921	3883125	0	True				
ANR	3883274	Identifier	m_local_credd		3883125	0					
ANR	3883275	ExpressionStatement	free ( m_local_credd )	131:21:3925:3946	3883125	1	True				
ANR	3883276	CallExpression	free ( m_local_credd )		3883125	0					
ANR	3883277	Callee	free		3883125	0					
ANR	3883278	Identifier	free		3883125	0					
ANR	3883279	ArgumentList	m_local_credd		3883125	1					
ANR	3883280	Argument	m_local_credd		3883125	0					
ANR	3883281	Identifier	m_local_credd		3883125	0					
ANR	3883282	IfStatement	if ( m_dot_Net_Versions )		3883125	13					
ANR	3883283	Condition	m_dot_Net_Versions	132:8:3956:3973	3883125	0	True				
ANR	3883284	Identifier	m_dot_Net_Versions		3883125	0					
ANR	3883285	ExpressionStatement	free ( m_dot_Net_Versions )	132:29:3977:4004	3883125	1	True				
ANR	3883286	CallExpression	free ( m_dot_Net_Versions )		3883125	0					
ANR	3883287	Callee	free		3883125	0					
ANR	3883288	Identifier	free		3883125	0					
ANR	3883289	ArgumentList	m_dot_Net_Versions		3883125	1					
ANR	3883290	Argument	m_dot_Net_Versions		3883125	0					
ANR	3883291	Identifier	m_dot_Net_Versions		3883125	0					
ANR	3883292	ExpressionStatement	release_all_WinPerf_results ( )	134:4:4011:4040	3883125	14	True				
ANR	3883293	CallExpression	release_all_WinPerf_results ( )		3883125	0					
ANR	3883294	Callee	release_all_WinPerf_results		3883125	0					
ANR	3883295	Identifier	release_all_WinPerf_results		3883125	0					
ANR	3883296	ArgumentList			3883125	1					
ANR	3883297	Identifier	MachAttributes :: ~MachAttributes		3883125	1					
ANR	3883298	ParameterList			3883125	2					
ANR	3883299	CFGEntryNode	ENTRY		3883125		True				
ANR	3883300	CFGExitNode	EXIT		3883125		True				
ANR	3883301	Symbol	m_arch		3883125						
ANR	3883302	Symbol	val		3883125						
ANR	3883303	Symbol	m_user_specified		3883125						
ANR	3883304	Symbol	m_lst_dynamic . Next		3883125						
ANR	3883305	Symbol	NULL		3883125						
ANR	3883306	Symbol	m_lst_static . Next		3883125						
ANR	3883307	Symbol	m_ckptpltfrm		3883125						
ANR	3883308	Symbol	m_local_credd		3883125						
ANR	3883309	Symbol	m_opsys		3883125						
ANR	3883310	Symbol	m_lst_static		3883125						
ANR	3883311	Symbol	m_opsys_and_ver		3883125						
ANR	3883312	Symbol	m_dot_Net_Versions		3883125						
ANR	3883313	Symbol	m_uid_domain		3883125						
ANR	3883314	Symbol	m_filesystem_domain		3883125						
ANR	3883315	Symbol	m_lst_dynamic		3883125						
ANR	3883316	Function	MachAttributes :: init_user_settings	138:0:4052:8421							
ANR	3883317	FunctionDef	MachAttributes :: init_user_settings ()		3883316	0					
ANR	3883318	CompoundStatement		140:0:4094:8421	3883316	0					
ANR	3883319	ExpressionStatement	m_user_settings_init = true	141:1:4097:4124	3883316	0	True				
ANR	3883320	AssignmentExpression	m_user_settings_init = true		3883316	0		=			
ANR	3883321	Identifier	m_user_settings_init		3883316	0					
ANR	3883322	Identifier	true		3883316	1					
ANR	3883323	IdentifierDeclStatement	AttribValue * val = NULL ;	143:1:4128:4151	3883316	1	True				
ANR	3883324	IdentifierDecl	* val = NULL		3883316	0					
ANR	3883325	IdentifierDeclType	AttribValue *		3883316	0					
ANR	3883326	Identifier	val		3883316	1					
ANR	3883327	AssignmentExpression	* val = NULL		3883316	2		=			
ANR	3883328	Identifier	NULL		3883316	0					
ANR	3883329	Identifier	NULL		3883316	1					
ANR	3883330	ExpressionStatement	m_lst_dynamic . Rewind ( )	144:1:4154:4176	3883316	2	True				
ANR	3883331	CallExpression	m_lst_dynamic . Rewind ( )		3883316	0					
ANR	3883332	Callee	m_lst_dynamic . Rewind		3883316	0					
ANR	3883333	MemberAccess	m_lst_dynamic . Rewind		3883316	0					
ANR	3883334	Identifier	m_lst_dynamic		3883316	0					
ANR	3883335	Identifier	Rewind		3883316	1					
ANR	3883336	ArgumentList			3883316	1					
ANR	3883337	WhileStatement	while ( ( val = m_lst_dynamic . Next ( ) ) )		3883316	3					
ANR	3883338	Condition	val = m_lst_dynamic . Next ( )	145:8:4186:4213	3883316	0	True				
ANR	3883339	AssignmentExpression	val = m_lst_dynamic . Next ( )		3883316	0		=			
ANR	3883340	Identifier	val		3883316	0					
ANR	3883341	CallExpression	m_lst_dynamic . Next ( )		3883316	1					
ANR	3883342	Callee	m_lst_dynamic . Next		3883316	0					
ANR	3883343	MemberAccess	m_lst_dynamic . Next		3883316	0					
ANR	3883344	Identifier	m_lst_dynamic		3883316	0					
ANR	3883345	Identifier	Next		3883316	1					
ANR	3883346	ArgumentList			3883316	1					
ANR	3883347	CompoundStatement		7:4:125:125	3883316	1					
ANR	3883348	IfStatement	if ( val )		3883316	0					
ANR	3883349	Condition	val	147:12:4234:4236	3883316	0	True				
ANR	3883350	Identifier	val		3883316	0					
ANR	3883351	ExpressionStatement	free ( val )	147:17:4239:4249	3883316	1	True				
ANR	3883352	CallExpression	free ( val )		3883316	0					
ANR	3883353	Callee	free		3883316	0					
ANR	3883354	Identifier	free		3883316	0					
ANR	3883355	ArgumentList	val		3883316	1					
ANR	3883356	Argument	val		3883316	0					
ANR	3883357	Identifier	val		3883316	0					
ANR	3883358	ExpressionStatement	m_lst_dynamic . DeleteCurrent ( )	148:5:4256:4285	3883316	1	True				
ANR	3883359	CallExpression	m_lst_dynamic . DeleteCurrent ( )		3883316	0					
ANR	3883360	Callee	m_lst_dynamic . DeleteCurrent		3883316	0					
ANR	3883361	MemberAccess	m_lst_dynamic . DeleteCurrent		3883316	0					
ANR	3883362	Identifier	m_lst_dynamic		3883316	0					
ANR	3883363	Identifier	DeleteCurrent		3883316	1					
ANR	3883364	ArgumentList			3883316	1					
ANR	3883365	ExpressionStatement	m_lst_static . Rewind ( )	151:1:4292:4313	3883316	4	True				
ANR	3883366	CallExpression	m_lst_static . Rewind ( )		3883316	0					
ANR	3883367	Callee	m_lst_static . Rewind		3883316	0					
ANR	3883368	MemberAccess	m_lst_static . Rewind		3883316	0					
ANR	3883369	Identifier	m_lst_static		3883316	0					
ANR	3883370	Identifier	Rewind		3883316	1					
ANR	3883371	ArgumentList			3883316	1					
ANR	3883372	WhileStatement	while ( ( val = m_lst_static . Next ( ) ) )		3883316	5					
ANR	3883373	Condition	val = m_lst_static . Next ( )	152:8:4323:4349	3883316	0	True				
ANR	3883374	AssignmentExpression	val = m_lst_static . Next ( )		3883316	0		=			
ANR	3883375	Identifier	val		3883316	0					
ANR	3883376	CallExpression	m_lst_static . Next ( )		3883316	1					
ANR	3883377	Callee	m_lst_static . Next		3883316	0					
ANR	3883378	MemberAccess	m_lst_static . Next		3883316	0					
ANR	3883379	Identifier	m_lst_static		3883316	0					
ANR	3883380	Identifier	Next		3883316	1					
ANR	3883381	ArgumentList			3883316	1					
ANR	3883382	CompoundStatement		14:4:261:261	3883316	1					
ANR	3883383	IfStatement	if ( val )		3883316	0					
ANR	3883384	Condition	val	154:9:4367:4369	3883316	0	True				
ANR	3883385	Identifier	val		3883316	0					
ANR	3883386	ExpressionStatement	free ( val )	154:14:4372:4382	3883316	1	True				
ANR	3883387	CallExpression	free ( val )		3883316	0					
ANR	3883388	Callee	free		3883316	0					
ANR	3883389	Identifier	free		3883316	0					
ANR	3883390	ArgumentList	val		3883316	1					
ANR	3883391	Argument	val		3883316	0					
ANR	3883392	Identifier	val		3883316	0					
ANR	3883393	ExpressionStatement	m_lst_static . DeleteCurrent ( )	155:5:4389:4417	3883316	1	True				
ANR	3883394	CallExpression	m_lst_static . DeleteCurrent ( )		3883316	0					
ANR	3883395	Callee	m_lst_static . DeleteCurrent		3883316	0					
ANR	3883396	MemberAccess	m_lst_static . DeleteCurrent		3883316	0					
ANR	3883397	Identifier	m_lst_static		3883316	0					
ANR	3883398	Identifier	DeleteCurrent		3883316	1					
ANR	3883399	ArgumentList			3883316	1					
ANR	3883400	ExpressionStatement	m_user_specified . clearAll ( )	158:1:4424:4451	3883316	6	True				
ANR	3883401	CallExpression	m_user_specified . clearAll ( )		3883316	0					
ANR	3883402	Callee	m_user_specified . clearAll		3883316	0					
ANR	3883403	MemberAccess	m_user_specified . clearAll		3883316	0					
ANR	3883404	Identifier	m_user_specified		3883316	0					
ANR	3883405	Identifier	clearAll		3883316	1					
ANR	3883406	ArgumentList			3883316	1					
ANR	3883407	IdentifierDeclStatement	char * pszParam = NULL ;	159:1:4454:4476	3883316	7	True				
ANR	3883408	IdentifierDecl	* pszParam = NULL		3883316	0					
ANR	3883409	IdentifierDeclType	char *		3883316	0					
ANR	3883410	Identifier	pszParam		3883316	1					
ANR	3883411	AssignmentExpression	* pszParam = NULL		3883316	2		=			
ANR	3883412	Identifier	NULL		3883316	0					
ANR	3883413	Identifier	NULL		3883316	1					
ANR	3883414	ExpressionStatement	"pszParam = param ( ""STARTD_PUBLISH_WINREG"" )"	161:1:4495:4536	3883316	8	True				
ANR	3883415	AssignmentExpression	"pszParam = param ( ""STARTD_PUBLISH_WINREG"" )"		3883316	0		=			
ANR	3883416	Identifier	pszParam		3883316	0					
ANR	3883417	CallExpression	"param ( ""STARTD_PUBLISH_WINREG"" )"		3883316	1					
ANR	3883418	Callee	param		3883316	0					
ANR	3883419	Identifier	param		3883316	0					
ANR	3883420	ArgumentList	"""STARTD_PUBLISH_WINREG"""		3883316	1					
ANR	3883421	Argument	"""STARTD_PUBLISH_WINREG"""		3883316	0					
ANR	3883422	PrimaryExpression	"""STARTD_PUBLISH_WINREG"""		3883316	0					
ANR	3883423	IfStatement	if ( pszParam )		3883316	9					
ANR	3883424	Condition	pszParam	163:5:4553:4560	3883316	0	True				
ANR	3883425	Identifier	pszParam		3883316	0					
ANR	3883426	CompoundStatement		25:4:472:472	3883316	1					
ANR	3883427	ExpressionStatement	m_user_specified . initializeFromString ( pszParam )	165:2:4571:4618	3883316	0	True				
ANR	3883428	CallExpression	m_user_specified . initializeFromString ( pszParam )		3883316	0					
ANR	3883429	Callee	m_user_specified . initializeFromString		3883316	0					
ANR	3883430	MemberAccess	m_user_specified . initializeFromString		3883316	0					
ANR	3883431	Identifier	m_user_specified		3883316	0					
ANR	3883432	Identifier	initializeFromString		3883316	1					
ANR	3883433	ArgumentList	pszParam		3883316	1					
ANR	3883434	Argument	pszParam		3883316	0					
ANR	3883435	Identifier	pszParam		3883316	0					
ANR	3883436	ExpressionStatement	free ( pszParam )	166:2:4622:4636	3883316	1	True				
ANR	3883437	CallExpression	free ( pszParam )		3883316	0					
ANR	3883438	Callee	free		3883316	0					
ANR	3883439	Identifier	free		3883316	0					
ANR	3883440	ArgumentList	pszParam		3883316	1					
ANR	3883441	Argument	pszParam		3883316	0					
ANR	3883442	Identifier	pszParam		3883316	0					
ANR	3883443	ExpressionStatement	m_user_specified . rewind ( )	169:1:4643:4668	3883316	10	True				
ANR	3883444	CallExpression	m_user_specified . rewind ( )		3883316	0					
ANR	3883445	Callee	m_user_specified . rewind		3883316	0					
ANR	3883446	MemberAccess	m_user_specified . rewind		3883316	0					
ANR	3883447	Identifier	m_user_specified		3883316	0					
ANR	3883448	Identifier	rewind		3883316	1					
ANR	3883449	ArgumentList			3883316	1					
ANR	3883450	WhileStatement	while ( char * pszItem = m_user_specified . next ( ) )		3883316	11					
ANR	3883451	Condition	char * pszItem = m_user_specified . next ( )	170:7:4677:4716	3883316	0	True				
ANR	3883452	AssignmentExpression	char * pszItem = m_user_specified . next ( )		3883316	0		=			
ANR	3883453	MultiplicativeExpression	char * pszItem		3883316	0		*			
ANR	3883454	Identifier	char		3883316	0					
ANR	3883455	Identifier	pszItem		3883316	1					
ANR	3883456	CallExpression	m_user_specified . next ( )		3883316	1					
ANR	3883457	Callee	m_user_specified . next		3883316	0					
ANR	3883458	MemberAccess	m_user_specified . next		3883316	0					
ANR	3883459	Identifier	m_user_specified		3883316	0					
ANR	3883460	Identifier	next		3883316	1					
ANR	3883461	ArgumentList			3883316	1					
ANR	3883462	CompoundStatement		66:2:1568:1618	3883316	1					
ANR	3883463	IdentifierDeclStatement	"const char * pkey = strchr ( pszItem , '=' ) ;"	177:2:4949:4989	3883316	0	True				
ANR	3883464	IdentifierDecl	"* pkey = strchr ( pszItem , '=' )"		3883316	0					
ANR	3883465	IdentifierDeclType	const char *		3883316	0					
ANR	3883466	Identifier	pkey		3883316	1					
ANR	3883467	AssignmentExpression	"* pkey = strchr ( pszItem , '=' )"		3883316	2		=			
ANR	3883468	Identifier	pkey		3883316	0					
ANR	3883469	CallExpression	"strchr ( pszItem , '=' )"		3883316	1					
ANR	3883470	Callee	strchr		3883316	0					
ANR	3883471	Identifier	strchr		3883316	0					
ANR	3883472	ArgumentList	pszItem		3883316	1					
ANR	3883473	Argument	pszItem		3883316	0					
ANR	3883474	Identifier	pszItem		3883316	0					
ANR	3883475	Argument	'='		3883316	1					
ANR	3883476	PrimaryExpression	'='		3883316	0					
ANR	3883477	IdentifierDeclStatement	"const char * pbs = strchr ( pszItem , '\\\\' ) ;"	178:2:4993:5034	3883316	1	True				
ANR	3883478	IdentifierDecl	"* pbs = strchr ( pszItem , '\\\\' )"		3883316	0					
ANR	3883479	IdentifierDeclType	const char *		3883316	0					
ANR	3883480	Identifier	pbs		3883316	1					
ANR	3883481	AssignmentExpression	"* pbs = strchr ( pszItem , '\\\\' )"		3883316	2		=			
ANR	3883482	Identifier	pbs		3883316	0					
ANR	3883483	CallExpression	"strchr ( pszItem , '\\\\' )"		3883316	1					
ANR	3883484	Callee	strchr		3883316	0					
ANR	3883485	Identifier	strchr		3883316	0					
ANR	3883486	ArgumentList	pszItem		3883316	1					
ANR	3883487	Argument	pszItem		3883316	0					
ANR	3883488	Identifier	pszItem		3883316	0					
ANR	3883489	Argument	'\\\\'		3883316	1					
ANR	3883490	PrimaryExpression	'\\\\'		3883316	0					
ANR	3883491	IfStatement	if ( pkey && ( ! pbs || pkey < pbs ) )		3883316	2					
ANR	3883492	Condition	pkey && ( ! pbs || pkey < pbs )	179:6:5042:5071	3883316	0	True				
ANR	3883493	AndExpression	pkey && ( ! pbs || pkey < pbs )		3883316	0		&&			
ANR	3883494	Identifier	pkey		3883316	0					
ANR	3883495	OrExpression	! pbs || pkey < pbs		3883316	1		||			
ANR	3883496	UnaryOperationExpression	! pbs		3883316	0					
ANR	3883497	UnaryOperator	!		3883316	0					
ANR	3883498	Identifier	pbs		3883316	1					
ANR	3883499	RelationalExpression	pkey < pbs		3883316	1		<			
ANR	3883500	Identifier	pkey		3883316	0					
ANR	3883501	Identifier	pbs		3883316	1					
ANR	3883502	CompoundStatement		40:38:979:979	3883316	1					
ANR	3883503	ExpressionStatement	++ pkey	180:3:5079:5085	3883316	0	True				
ANR	3883504	UnaryExpression	++ pkey		3883316	0					
ANR	3883505	IncDec	++		3883316	0					
ANR	3883506	Identifier	pkey		3883316	1					
ANR	3883507	ElseStatement	else		3883316	0					
ANR	3883508	CompoundStatement		42:9:1017:1017	3883316	0					
ANR	3883509	ExpressionStatement	pkey = pszItem	182:3:5117:5131	3883316	0	True				
ANR	3883510	AssignmentExpression	pkey = pszItem		3883316	0		=			
ANR	3883511	Identifier	pkey		3883316	0					
ANR	3883512	Identifier	pszItem		3883316	1					
ANR	3883513	WhileStatement	while ( isspace ( pkey [ 0 ] ) )		3883316	3					
ANR	3883514	Condition	isspace ( pkey [ 0 ] )	186:9:5191:5206	3883316	0	True				
ANR	3883515	CallExpression	isspace ( pkey [ 0 ] )		3883316	0					
ANR	3883516	Callee	isspace		3883316	0					
ANR	3883517	Identifier	isspace		3883316	0					
ANR	3883518	ArgumentList	pkey [ 0 ]		3883316	1					
ANR	3883519	Argument	pkey [ 0 ]		3883316	0					
ANR	3883520	ArrayIndexing	pkey [ 0 ]		3883316	0					
ANR	3883521	Identifier	pkey		3883316	0					
ANR	3883522	PrimaryExpression	0		3883316	1					
ANR	3883523	ExpressionStatement	++ pkey	187:3:5212:5218	3883316	1	True				
ANR	3883524	UnaryExpression	++ pkey		3883316	0					
ANR	3883525	IncDec	++		3883316	0					
ANR	3883526	Identifier	pkey		3883316	1					
ANR	3883527	IdentifierDeclStatement	"char * pszAttr = generate_reg_key_attr_name ( ""WINREG_"" , pszItem ) ;"	190:2:5243:5306	3883316	4	True				
ANR	3883528	IdentifierDecl	"* pszAttr = generate_reg_key_attr_name ( ""WINREG_"" , pszItem )"		3883316	0					
ANR	3883529	IdentifierDeclType	char *		3883316	0					
ANR	3883530	Identifier	pszAttr		3883316	1					
ANR	3883531	AssignmentExpression	"* pszAttr = generate_reg_key_attr_name ( ""WINREG_"" , pszItem )"		3883316	2		=			
ANR	3883532	Identifier	pszAttr		3883316	0					
ANR	3883533	CallExpression	"generate_reg_key_attr_name ( ""WINREG_"" , pszItem )"		3883316	1					
ANR	3883534	Callee	generate_reg_key_attr_name		3883316	0					
ANR	3883535	Identifier	generate_reg_key_attr_name		3883316	0					
ANR	3883536	ArgumentList	"""WINREG_"""		3883316	1					
ANR	3883537	Argument	"""WINREG_"""		3883316	0					
ANR	3883538	PrimaryExpression	"""WINREG_"""		3883316	0					
ANR	3883539	Argument	pszItem		3883316	1					
ANR	3883540	Identifier	pszItem		3883316	0					
ANR	3883541	IdentifierDeclStatement	int options = 0 ;	195:2:5495:5510	3883316	5	True				
ANR	3883542	IdentifierDecl	options = 0		3883316	0					
ANR	3883543	IdentifierDeclType	int		3883316	0					
ANR	3883544	Identifier	options		3883316	1					
ANR	3883545	AssignmentExpression	options = 0		3883316	2		=			
ANR	3883546	Identifier	options		3883316	0					
ANR	3883547	PrimaryExpression	0		3883316	1					
ANR	3883548	IfStatement	if ( isdigit ( pkey [ 0 ] ) )		3883316	6					
ANR	3883549	Condition	isdigit ( pkey [ 0 ] )	196:6:5518:5533	3883316	0	True				
ANR	3883550	CallExpression	isdigit ( pkey [ 0 ] )		3883316	0					
ANR	3883551	Callee	isdigit		3883316	0					
ANR	3883552	Identifier	isdigit		3883316	0					
ANR	3883553	ArgumentList	pkey [ 0 ]		3883316	1					
ANR	3883554	Argument	pkey [ 0 ]		3883316	0					
ANR	3883555	ArrayIndexing	pkey [ 0 ]		3883316	0					
ANR	3883556	Identifier	pkey		3883316	0					
ANR	3883557	PrimaryExpression	0		3883316	1					
ANR	3883558	CompoundStatement		57:24:1441:1441	3883316	1					
ANR	3883559	ExpressionStatement	options = atoi ( pkey )	197:3:5541:5561	3883316	0	True				
ANR	3883560	AssignmentExpression	options = atoi ( pkey )		3883316	0		=			
ANR	3883561	Identifier	options		3883316	0					
ANR	3883562	CallExpression	atoi ( pkey )		3883316	1					
ANR	3883563	Callee	atoi		3883316	0					
ANR	3883564	Identifier	atoi		3883316	0					
ANR	3883565	ArgumentList	pkey		3883316	1					
ANR	3883566	Argument	pkey		3883316	0					
ANR	3883567	Identifier	pkey		3883316	0					
ANR	3883568	WhileStatement	while ( isdigit ( pkey [ 0 ] ) )		3883316	1					
ANR	3883569	Condition	isdigit ( pkey [ 0 ] )	198:10:5573:5588	3883316	0	True				
ANR	3883570	CallExpression	isdigit ( pkey [ 0 ] )		3883316	0					
ANR	3883571	Callee	isdigit		3883316	0					
ANR	3883572	Identifier	isdigit		3883316	0					
ANR	3883573	ArgumentList	pkey [ 0 ]		3883316	1					
ANR	3883574	Argument	pkey [ 0 ]		3883316	0					
ANR	3883575	ArrayIndexing	pkey [ 0 ]		3883316	0					
ANR	3883576	Identifier	pkey		3883316	0					
ANR	3883577	PrimaryExpression	0		3883316	1					
ANR	3883578	CompoundStatement		59:28:1496:1496	3883316	1					
ANR	3883579	ExpressionStatement	++ pkey	199:4:5597:5603	3883316	0	True				
ANR	3883580	UnaryExpression	++ pkey		3883316	0					
ANR	3883581	IncDec	++		3883316	0					
ANR	3883582	Identifier	pkey		3883316	1					
ANR	3883583	IdentifierDeclStatement	int ixStart = 0 ;	203:2:5617:5632	3883316	7	True				
ANR	3883584	IdentifierDecl	ixStart = 0		3883316	0					
ANR	3883585	IdentifierDeclType	int		3883316	0					
ANR	3883586	Identifier	ixStart		3883316	1					
ANR	3883587	AssignmentExpression	ixStart = 0		3883316	2		=			
ANR	3883588	Identifier	ixStart		3883316	0					
ANR	3883589	PrimaryExpression	0		3883316	1					
ANR	3883590	IdentifierDeclStatement	int cch = lstrlen ( pkey ) ;	204:2:5636:5659	3883316	8	True				
ANR	3883591	IdentifierDecl	cch = lstrlen ( pkey )		3883316	0					
ANR	3883592	IdentifierDeclType	int		3883316	0					
ANR	3883593	Identifier	cch		3883316	1					
ANR	3883594	AssignmentExpression	cch = lstrlen ( pkey )		3883316	2		=			
ANR	3883595	Identifier	cch		3883316	0					
ANR	3883596	CallExpression	lstrlen ( pkey )		3883316	1					
ANR	3883597	Callee	lstrlen		3883316	0					
ANR	3883598	Identifier	lstrlen		3883316	0					
ANR	3883599	ArgumentList	pkey		3883316	1					
ANR	3883600	Argument	pkey		3883316	0					
ANR	3883601	Identifier	pkey		3883316	0					
ANR	3883602	IdentifierDeclStatement	"HKEY hkey = parse_hive_prefix ( pkey , cch , & ixStart ) ;"	205:2:5663:5713	3883316	9	True				
ANR	3883603	IdentifierDecl	"hkey = parse_hive_prefix ( pkey , cch , & ixStart )"		3883316	0					
ANR	3883604	IdentifierDeclType	HKEY		3883316	0					
ANR	3883605	Identifier	hkey		3883316	1					
ANR	3883606	AssignmentExpression	"hkey = parse_hive_prefix ( pkey , cch , & ixStart )"		3883316	2		=			
ANR	3883607	Identifier	hkey		3883316	0					
ANR	3883608	CallExpression	"parse_hive_prefix ( pkey , cch , & ixStart )"		3883316	1					
ANR	3883609	Callee	parse_hive_prefix		3883316	0					
ANR	3883610	Identifier	parse_hive_prefix		3883316	0					
ANR	3883611	ArgumentList	pkey		3883316	1					
ANR	3883612	Argument	pkey		3883316	0					
ANR	3883613	Identifier	pkey		3883316	0					
ANR	3883614	Argument	cch		3883316	1					
ANR	3883615	Identifier	cch		3883316	0					
ANR	3883616	Argument	& ixStart		3883316	2					
ANR	3883617	UnaryOperationExpression	& ixStart		3883316	0					
ANR	3883618	UnaryOperator	&		3883316	0					
ANR	3883619	Identifier	ixStart		3883316	1					
ANR	3883620	IfStatement	if ( hkey == HKEY_PERFORMANCE_DATA )		3883316	10					
ANR	3883621	Condition	hkey == HKEY_PERFORMANCE_DATA	206:6:5721:5749	3883316	0	True				
ANR	3883622	EqualityExpression	hkey == HKEY_PERFORMANCE_DATA		3883316	0		==			
ANR	3883623	Identifier	hkey		3883316	0					
ANR	3883624	Identifier	HKEY_PERFORMANCE_DATA		3883316	1					
ANR	3883625	CompoundStatement		76:12:2006:2068	3883316	1					
ANR	3883626	IdentifierDeclStatement	"AttribValue * pav = add_WinPerf_Query ( pszAttr , pkey + ixStart + 1 ) ;"	215:12:6101:6163	3883316	0	True				
ANR	3883627	IdentifierDecl	"* pav = add_WinPerf_Query ( pszAttr , pkey + ixStart + 1 )"		3883316	0					
ANR	3883628	IdentifierDeclType	AttribValue *		3883316	0					
ANR	3883629	Identifier	pav		3883316	1					
ANR	3883630	AssignmentExpression	"* pav = add_WinPerf_Query ( pszAttr , pkey + ixStart + 1 )"		3883316	2		=			
ANR	3883631	Identifier	pav		3883316	0					
ANR	3883632	CallExpression	"add_WinPerf_Query ( pszAttr , pkey + ixStart + 1 )"		3883316	1					
ANR	3883633	Callee	add_WinPerf_Query		3883316	0					
ANR	3883634	Identifier	add_WinPerf_Query		3883316	0					
ANR	3883635	ArgumentList	pszAttr		3883316	1					
ANR	3883636	Argument	pszAttr		3883316	0					
ANR	3883637	Identifier	pszAttr		3883316	0					
ANR	3883638	Argument	pkey + ixStart + 1		3883316	1					
ANR	3883639	AdditiveExpression	pkey + ixStart + 1		3883316	0		+			
ANR	3883640	Identifier	pkey		3883316	0					
ANR	3883641	AdditiveExpression	ixStart + 1		3883316	1		+			
ANR	3883642	Identifier	ixStart		3883316	0					
ANR	3883643	PrimaryExpression	1		3883316	1					
ANR	3883644	IfStatement	if ( pav )		3883316	1					
ANR	3883645	Condition	pav	216:16:6181:6183	3883316	0	True				
ANR	3883646	Identifier	pav		3883316	0					
ANR	3883647	ExpressionStatement	m_lst_dynamic . Append ( pav )	217:10:6196:6221	3883316	1	True				
ANR	3883648	CallExpression	m_lst_dynamic . Append ( pav )		3883316	0					
ANR	3883649	Callee	m_lst_dynamic . Append		3883316	0					
ANR	3883650	MemberAccess	m_lst_dynamic . Append		3883316	0					
ANR	3883651	Identifier	m_lst_dynamic		3883316	0					
ANR	3883652	Identifier	Append		3883316	1					
ANR	3883653	ArgumentList	pav		3883316	1					
ANR	3883654	Argument	pav		3883316	0					
ANR	3883655	Identifier	pav		3883316	0					
ANR	3883656	ElseStatement	else		3883316	0					
ANR	3883657	CompoundStatement		86:12:2365:2422	3883316	0					
ANR	3883658	IdentifierDeclStatement	"char * value = get_windows_reg_value ( pkey , NULL , options ) ;"	224:3:6389:6446	3883316	0	True				
ANR	3883659	IdentifierDecl	"* value = get_windows_reg_value ( pkey , NULL , options )"		3883316	0					
ANR	3883660	IdentifierDeclType	char *		3883316	0					
ANR	3883661	Identifier	value		3883316	1					
ANR	3883662	AssignmentExpression	"* value = get_windows_reg_value ( pkey , NULL , options )"		3883316	2		=			
ANR	3883663	Identifier	value		3883316	0					
ANR	3883664	CallExpression	"get_windows_reg_value ( pkey , NULL , options )"		3883316	1					
ANR	3883665	Callee	get_windows_reg_value		3883316	0					
ANR	3883666	Identifier	get_windows_reg_value		3883316	0					
ANR	3883667	ArgumentList	pkey		3883316	1					
ANR	3883668	Argument	pkey		3883316	0					
ANR	3883669	Identifier	pkey		3883316	0					
ANR	3883670	Argument	NULL		3883316	1					
ANR	3883671	Identifier	NULL		3883316	0					
ANR	3883672	Argument	options		3883316	2					
ANR	3883673	Identifier	options		3883316	0					
ANR	3883674	IdentifierDeclStatement	"AttribValue * pav = AttribValue :: Allocate ( pszAttr , value ) ;"	225:12:6460:6517	3883316	1	True				
ANR	3883675	IdentifierDecl	"* pav = AttribValue :: Allocate ( pszAttr , value )"		3883316	0					
ANR	3883676	IdentifierDeclType	AttribValue *		3883316	0					
ANR	3883677	Identifier	pav		3883316	1					
ANR	3883678	AssignmentExpression	"* pav = AttribValue :: Allocate ( pszAttr , value )"		3883316	2		=			
ANR	3883679	Identifier	pav		3883316	0					
ANR	3883680	CallExpression	"AttribValue :: Allocate ( pszAttr , value )"		3883316	1					
ANR	3883681	Callee	AttribValue :: Allocate		3883316	0					
ANR	3883682	Identifier	AttribValue :: Allocate		3883316	0					
ANR	3883683	ArgumentList	pszAttr		3883316	1					
ANR	3883684	Argument	pszAttr		3883316	0					
ANR	3883685	Identifier	pszAttr		3883316	0					
ANR	3883686	Argument	value		3883316	1					
ANR	3883687	Identifier	value		3883316	0					
ANR	3883688	IfStatement	if ( pav )		3883316	2					
ANR	3883689	Condition	pav	226:16:6535:6537	3883316	0	True				
ANR	3883690	Identifier	pav		3883316	0					
ANR	3883691	CompoundStatement		88:12:2457:2457	3883316	1					
ANR	3883692	ExpressionStatement	pav -> pquery = ( void * ) pkey	228:16:6570:6595	3883316	0	True				
ANR	3883693	AssignmentExpression	pav -> pquery = ( void * ) pkey		3883316	0		=			
ANR	3883694	PtrMemberAccess	pav -> pquery		3883316	0					
ANR	3883695	Identifier	pav		3883316	0					
ANR	3883696	Identifier	pquery		3883316	1					
ANR	3883697	CastExpression	( void * ) pkey		3883316	1					
ANR	3883698	CastTarget	void *		3883316	0					
ANR	3883699	Identifier	pkey		3883316	1					
ANR	3883700	ExpressionStatement	m_lst_static . Append ( pav )	229:4:6601:6625	3883316	1	True				
ANR	3883701	CallExpression	m_lst_static . Append ( pav )		3883316	0					
ANR	3883702	Callee	m_lst_static . Append		3883316	0					
ANR	3883703	MemberAccess	m_lst_static . Append		3883316	0					
ANR	3883704	Identifier	m_lst_static		3883316	0					
ANR	3883705	Identifier	Append		3883316	1					
ANR	3883706	ArgumentList	pav		3883316	1					
ANR	3883707	Argument	pav		3883316	0					
ANR	3883708	Identifier	pav		3883316	0					
ANR	3883709	IdentifierDeclStatement	"char * detected_versions = param ( ""DOT_NET_VERSIONS"" ) ;"	243:4:6811:6862	3883316	12	True				
ANR	3883710	IdentifierDecl	"* detected_versions = param ( ""DOT_NET_VERSIONS"" )"		3883316	0					
ANR	3883711	IdentifierDeclType	char *		3883316	0					
ANR	3883712	Identifier	detected_versions		3883316	1					
ANR	3883713	AssignmentExpression	"* detected_versions = param ( ""DOT_NET_VERSIONS"" )"		3883316	2		=			
ANR	3883714	Identifier	detected_versions		3883316	0					
ANR	3883715	CallExpression	"param ( ""DOT_NET_VERSIONS"" )"		3883316	1					
ANR	3883716	Callee	param		3883316	0					
ANR	3883717	Identifier	param		3883316	0					
ANR	3883718	ArgumentList	"""DOT_NET_VERSIONS"""		3883316	1					
ANR	3883719	Argument	"""DOT_NET_VERSIONS"""		3883316	0					
ANR	3883720	PrimaryExpression	"""DOT_NET_VERSIONS"""		3883316	0					
ANR	3883721	IfStatement	if ( ! detected_versions )		3883316	13					
ANR	3883722	Condition	! detected_versions	244:8:6872:6890	3883316	0	True				
ANR	3883723	UnaryOperationExpression	! detected_versions		3883316	0					
ANR	3883724	UnaryOperator	!		3883316	0					
ANR	3883725	Identifier	detected_versions		3883316	1					
ANR	3883726	CompoundStatement		109:21:2861:2979	3883316	1					
ANR	3883727	IdentifierDeclStatement	string s_dot_Net_Versions ;	246:8:6907:6932	3883316	0	True				
ANR	3883728	IdentifierDecl	s_dot_Net_Versions		3883316	0					
ANR	3883729	IdentifierDeclType	string		3883316	0					
ANR	3883730	Identifier	s_dot_Net_Versions		3883316	1					
ANR	3883731	Statement	static	248:8:6943:6948	3883316	1	True				
ANR	3883732	Statement	const	248:15:6950:6954	3883316	2	True				
ANR	3883733	ClassDefStatement	struct { const char * pszKey ; const char * pszValue ; const char * pszVer ; }	248:21:6956:7074	3883316	3	True				
ANR	3883734	Statement	aNet	252:10:7076:7079	3883316	4	True				
ANR	3883735	Statement	[	252:14:7080:7080	3883316	5	True				
ANR	3883736	Statement	]	252:15:7081:7081	3883316	6	True				
ANR	3883737	Statement	=	252:17:7083:7083	3883316	7	True				
ANR	3883738	CompoundStatement		113:19:2990:2990	3883316	8					
ANR	3883739	Statement	"""HKLM\\\\SOFTWARE\\\\Microsoft\\\\NET Framework Setup\\\\NDP\\\\v1.1.4322"""	253:11:7098:7161	3883316	0	True				
ANR	3883740	Statement	","	253:75:7162:7162	3883316	1	True				
ANR	3883741	Statement	"""Install"""	253:78:7165:7173	3883316	2	True				
ANR	3883742	Statement	","	253:87:7174:7174	3883316	3	True				
ANR	3883743	Statement	"""1.1"""	253:89:7176:7180	3883316	4	True				
ANR	3883744	Statement	","	253:94:7181:7181	3883316	5	True				
ANR	3883745	Statement	"""HKLM\\\\SOFTWARE\\\\Microsoft\\\\NET Framework Setup\\\\NDP\\\\v2.0.50727"""	254:11:7194:7258	3883316	6	True				
ANR	3883746	Statement	","	254:76:7259:7259	3883316	7	True				
ANR	3883747	Statement	"""Install"""	254:78:7261:7269	3883316	8	True				
ANR	3883748	Statement	","	254:87:7270:7270	3883316	9	True				
ANR	3883749	Statement	"""2.0"""	254:89:7272:7276	3883316	10	True				
ANR	3883750	Statement	","	254:94:7277:7277	3883316	11	True				
ANR	3883751	Statement	"""HKLM\\\\SOFTWARE\\\\Microsoft\\\\NET Framework Setup\\\\NDP\\\\v3.0"""	255:11:7290:7348	3883316	12	True				
ANR	3883752	Statement	","	255:70:7349:7349	3883316	13	True				
ANR	3883753	Statement	"""Install"""	255:78:7357:7365	3883316	14	True				
ANR	3883754	Statement	","	255:87:7366:7366	3883316	15	True				
ANR	3883755	Statement	"""3.0"""	255:89:7368:7372	3883316	16	True				
ANR	3883756	Statement	","	255:94:7373:7373	3883316	17	True				
ANR	3883757	Statement	"""HKLM\\\\SOFTWARE\\\\Microsoft\\\\NET Framework Setup\\\\NDP\\\\v3.5"""	256:11:7386:7444	3883316	18	True				
ANR	3883758	Statement	","	256:70:7445:7445	3883316	19	True				
ANR	3883759	Statement	"""Install"""	256:78:7453:7461	3883316	20	True				
ANR	3883760	Statement	","	256:87:7462:7462	3883316	21	True				
ANR	3883761	Statement	"""3.5"""	256:89:7464:7468	3883316	22	True				
ANR	3883762	Statement	","	256:94:7469:7469	3883316	23	True				
ANR	3883763	Statement	"""HKLM\\\\SOFTWARE\\\\Microsoft\\\\NET Framework Setup\\\\NDP\\\\v4\\\\Client"""	257:11:7482:7546	3883316	24	True				
ANR	3883764	Statement	","	257:76:7547:7547	3883316	25	True				
ANR	3883765	Statement	"""Install"""	257:78:7549:7557	3883316	26	True				
ANR	3883766	Statement	","	257:87:7558:7558	3883316	27	True				
ANR	3883767	Statement	"""4.0Client"""	257:89:7560:7570	3883316	28	True				
ANR	3883768	Statement	","	257:100:7571:7571	3883316	29	True				
ANR	3883769	Statement	"""HKLM\\\\SOFTWARE\\\\Microsoft\\\\NET Framework Setup\\\\NDP\\\\v4\\\\Full"""	258:11:7584:7646	3883316	30	True				
ANR	3883770	Statement	","	258:74:7647:7647	3883316	31	True				
ANR	3883771	Statement	"""Install"""	258:78:7651:7659	3883316	32	True				
ANR	3883772	Statement	","	258:87:7660:7660	3883316	33	True				
ANR	3883773	Statement	"""4.0Full"""	258:89:7662:7670	3883316	34	True				
ANR	3883774	Statement	","	258:98:7671:7671	3883316	35	True				
ANR	3883775	ExpressionStatement		259:9:7682:7682	3883316	9	True				
ANR	3883776	ForStatement	for ( int ii = 0 ; ii < NUM_ELEMENTS ( aNet ) ; ++ ii )		3883316	10					
ANR	3883777	ForInit	int ii = 0 ;	261:12:7697:7707	3883316	0	True				
ANR	3883778	IdentifierDeclStatement	int ii = 0 ;		3883316	0					
ANR	3883779	IdentifierDecl	ii = 0		3883316	0					
ANR	3883780	IdentifierDeclType	int		3883316	0					
ANR	3883781	Identifier	ii		3883316	1					
ANR	3883782	AssignmentExpression	ii = 0		3883316	2		=			
ANR	3883783	Identifier	ii		3883316	0					
ANR	3883784	PrimaryExpression	0		3883316	1					
ANR	3883785	Condition	ii < NUM_ELEMENTS ( aNet )	261:24:7709:7731	3883316	1	True				
ANR	3883786	RelationalExpression	ii < NUM_ELEMENTS ( aNet )		3883316	0		<			
ANR	3883787	Identifier	ii		3883316	0					
ANR	3883788	CallExpression	NUM_ELEMENTS ( aNet )		3883316	1					
ANR	3883789	Callee	NUM_ELEMENTS		3883316	0					
ANR	3883790	Identifier	NUM_ELEMENTS		3883316	0					
ANR	3883791	ArgumentList	aNet		3883316	1					
ANR	3883792	Argument	aNet		3883316	0					
ANR	3883793	Identifier	aNet		3883316	0					
ANR	3883794	UnaryExpression	++ ii	261:49:7734:7737	3883316	2	True				
ANR	3883795	IncDec	++		3883316	0					
ANR	3883796	Identifier	ii		3883316	1					
ANR	3883797	CompoundStatement		124:11:3665:3740	3883316	3					
ANR	3883798	IdentifierDeclStatement	"char * pszVal = get_windows_reg_value ( aNet [ ii ] . pszKey , aNet [ ii ] . pszValue , 0 ) ;"	263:11:7760:7835	3883316	0	True				
ANR	3883799	IdentifierDecl	"* pszVal = get_windows_reg_value ( aNet [ ii ] . pszKey , aNet [ ii ] . pszValue , 0 )"		3883316	0					
ANR	3883800	IdentifierDeclType	char *		3883316	0					
ANR	3883801	Identifier	pszVal		3883316	1					
ANR	3883802	AssignmentExpression	"* pszVal = get_windows_reg_value ( aNet [ ii ] . pszKey , aNet [ ii ] . pszValue , 0 )"		3883316	2		=			
ANR	3883803	Identifier	pszVal		3883316	0					
ANR	3883804	CallExpression	"get_windows_reg_value ( aNet [ ii ] . pszKey , aNet [ ii ] . pszValue , 0 )"		3883316	1					
ANR	3883805	Callee	get_windows_reg_value		3883316	0					
ANR	3883806	Identifier	get_windows_reg_value		3883316	0					
ANR	3883807	ArgumentList	aNet [ ii ] . pszKey		3883316	1					
ANR	3883808	Argument	aNet [ ii ] . pszKey		3883316	0					
ANR	3883809	MemberAccess	aNet [ ii ] . pszKey		3883316	0					
ANR	3883810	ArrayIndexing	aNet [ ii ]		3883316	0					
ANR	3883811	Identifier	aNet		3883316	0					
ANR	3883812	Identifier	ii		3883316	1					
ANR	3883813	Identifier	pszKey		3883316	1					
ANR	3883814	Argument	aNet [ ii ] . pszValue		3883316	1					
ANR	3883815	MemberAccess	aNet [ ii ] . pszValue		3883316	0					
ANR	3883816	ArrayIndexing	aNet [ ii ]		3883316	0					
ANR	3883817	Identifier	aNet		3883316	0					
ANR	3883818	Identifier	ii		3883316	1					
ANR	3883819	Identifier	pszValue		3883316	1					
ANR	3883820	Argument	0		3883316	2					
ANR	3883821	PrimaryExpression	0		3883316	0					
ANR	3883822	IfStatement	if ( pszVal )		3883316	1					
ANR	3883823	Condition	pszVal	264:15:7852:7857	3883316	0	True				
ANR	3883824	Identifier	pszVal		3883316	0					
ANR	3883825	CompoundStatement		127:15:3793:3816	3883316	1					
ANR	3883826	IdentifierDeclStatement	DWORD dw = atoi ( pszVal ) ;	266:15:7888:7911	3883316	0	True				
ANR	3883827	IdentifierDecl	dw = atoi ( pszVal )		3883316	0					
ANR	3883828	IdentifierDeclType	DWORD		3883316	0					
ANR	3883829	Identifier	dw		3883316	1					
ANR	3883830	AssignmentExpression	dw = atoi ( pszVal )		3883316	2		=			
ANR	3883831	Identifier	dw		3883316	0					
ANR	3883832	CallExpression	atoi ( pszVal )		3883316	1					
ANR	3883833	Callee	atoi		3883316	0					
ANR	3883834	Identifier	atoi		3883316	0					
ANR	3883835	ArgumentList	pszVal		3883316	1					
ANR	3883836	Argument	pszVal		3883316	0					
ANR	3883837	Identifier	pszVal		3883316	0					
ANR	3883838	IfStatement	if ( dw )		3883316	1					
ANR	3883839	Condition	dw	267:18:7931:7932	3883316	0	True				
ANR	3883840	Identifier	dw		3883316	0					
ANR	3883841	CompoundStatement		129:15:3855:3855	3883316	1					
ANR	3883842	IfStatement	if ( ! s_dot_Net_Versions . empty ( ) )		3883316	0					
ANR	3883843	Condition	! s_dot_Net_Versions . empty ( )	269:23:7975:8002	3883316	0	True				
ANR	3883844	UnaryOperationExpression	! s_dot_Net_Versions . empty ( )		3883316	0					
ANR	3883845	UnaryOperator	!		3883316	0					
ANR	3883846	CallExpression	s_dot_Net_Versions . empty ( )		3883316	1					
ANR	3883847	Callee	s_dot_Net_Versions . empty		3883316	0					
ANR	3883848	MemberAccess	s_dot_Net_Versions . empty		3883316	0					
ANR	3883849	Identifier	s_dot_Net_Versions		3883316	0					
ANR	3883850	Identifier	empty		3883316	1					
ANR	3883851	ArgumentList			3883316	1					
ANR	3883852	ExpressionStatement	"s_dot_Net_Versions . append ( "","" )"	270:23:8028:8058	3883316	1	True				
ANR	3883853	CallExpression	"s_dot_Net_Versions . append ( "","" )"		3883316	0					
ANR	3883854	Callee	s_dot_Net_Versions . append		3883316	0					
ANR	3883855	MemberAccess	s_dot_Net_Versions . append		3883316	0					
ANR	3883856	Identifier	s_dot_Net_Versions		3883316	0					
ANR	3883857	Identifier	append		3883316	1					
ANR	3883858	ArgumentList	""","""		3883316	1					
ANR	3883859	Argument	""","""		3883316	0					
ANR	3883860	PrimaryExpression	""","""		3883316	0					
ANR	3883861	ExpressionStatement	s_dot_Net_Versions . append ( aNet [ ii ] . pszVer )	271:18:8078:8120	3883316	1	True				
ANR	3883862	CallExpression	s_dot_Net_Versions . append ( aNet [ ii ] . pszVer )		3883316	0					
ANR	3883863	Callee	s_dot_Net_Versions . append		3883316	0					
ANR	3883864	MemberAccess	s_dot_Net_Versions . append		3883316	0					
ANR	3883865	Identifier	s_dot_Net_Versions		3883316	0					
ANR	3883866	Identifier	append		3883316	1					
ANR	3883867	ArgumentList	aNet [ ii ] . pszVer		3883316	1					
ANR	3883868	Argument	aNet [ ii ] . pszVer		3883316	0					
ANR	3883869	MemberAccess	aNet [ ii ] . pszVer		3883316	0					
ANR	3883870	ArrayIndexing	aNet [ ii ]		3883316	0					
ANR	3883871	Identifier	aNet		3883316	0					
ANR	3883872	Identifier	ii		3883316	1					
ANR	3883873	Identifier	pszVer		3883316	1					
ANR	3883874	ExpressionStatement	free ( pszVal )	273:15:8154:8166	3883316	2	True				
ANR	3883875	CallExpression	free ( pszVal )		3883316	0					
ANR	3883876	Callee	free		3883316	0					
ANR	3883877	Identifier	free		3883316	0					
ANR	3883878	ArgumentList	pszVal		3883316	1					
ANR	3883879	Argument	pszVal		3883316	0					
ANR	3883880	Identifier	pszVal		3883316	0					
ANR	3883881	IfStatement	if ( ! s_dot_Net_Versions . empty ( ) )		3883316	11					
ANR	3883882	Condition	! s_dot_Net_Versions . empty ( )	277:12:8203:8230	3883316	0	True				
ANR	3883883	UnaryOperationExpression	! s_dot_Net_Versions . empty ( )		3883316	0					
ANR	3883884	UnaryOperator	!		3883316	0					
ANR	3883885	CallExpression	s_dot_Net_Versions . empty ( )		3883316	1					
ANR	3883886	Callee	s_dot_Net_Versions . empty		3883316	0					
ANR	3883887	MemberAccess	s_dot_Net_Versions . empty		3883316	0					
ANR	3883888	Identifier	s_dot_Net_Versions		3883316	0					
ANR	3883889	Identifier	empty		3883316	1					
ANR	3883890	ArgumentList			3883316	1					
ANR	3883891	ExpressionStatement	detected_versions = _strdup ( s_dot_Net_Versions . c_str ( ) )	278:11:8244:8299	3883316	1	True				
ANR	3883892	AssignmentExpression	detected_versions = _strdup ( s_dot_Net_Versions . c_str ( ) )		3883316	0		=			
ANR	3883893	Identifier	detected_versions		3883316	0					
ANR	3883894	CallExpression	_strdup ( s_dot_Net_Versions . c_str ( ) )		3883316	1					
ANR	3883895	Callee	_strdup		3883316	0					
ANR	3883896	Identifier	_strdup		3883316	0					
ANR	3883897	ArgumentList	s_dot_Net_Versions . c_str ( )		3883316	1					
ANR	3883898	Argument	s_dot_Net_Versions . c_str ( )		3883316	0					
ANR	3883899	CallExpression	s_dot_Net_Versions . c_str ( )		3883316	0					
ANR	3883900	Callee	s_dot_Net_Versions . c_str		3883316	0					
ANR	3883901	MemberAccess	s_dot_Net_Versions . c_str		3883316	0					
ANR	3883902	Identifier	s_dot_Net_Versions		3883316	0					
ANR	3883903	Identifier	c_str		3883316	1					
ANR	3883904	ArgumentList			3883316	1					
ANR	3883905	IfStatement	if ( m_dot_Net_Versions )		3883316	14					
ANR	3883906	Condition	m_dot_Net_Versions	280:7:8314:8331	3883316	0	True				
ANR	3883907	Identifier	m_dot_Net_Versions		3883316	0					
ANR	3883908	ExpressionStatement	free ( m_dot_Net_Versions )	280:27:8334:8358	3883316	1	True				
ANR	3883909	CallExpression	free ( m_dot_Net_Versions )		3883316	0					
ANR	3883910	Callee	free		3883316	0					
ANR	3883911	Identifier	free		3883316	0					
ANR	3883912	ArgumentList	m_dot_Net_Versions		3883316	1					
ANR	3883913	Argument	m_dot_Net_Versions		3883316	0					
ANR	3883914	Identifier	m_dot_Net_Versions		3883316	0					
ANR	3883915	ExpressionStatement	m_dot_Net_Versions = detected_versions	281:4:8364:8402	3883316	15	True				
ANR	3883916	AssignmentExpression	m_dot_Net_Versions = detected_versions		3883316	0		=			
ANR	3883917	Identifier	m_dot_Net_Versions		3883316	0					
ANR	3883918	Identifier	detected_versions		3883316	1					
ANR	3883919	ReturnType	void		3883316	1					
ANR	3883920	Identifier	MachAttributes :: init_user_settings		3883316	2					
ANR	3883921	ParameterList			3883316	3					
ANR	3883922	CFGEntryNode	ENTRY		3883316		True				
ANR	3883923	CFGExitNode	EXIT		3883316		True				
ANR	3883924	Symbol	NUM_ELEMENTS		3883316						
ANR	3883925	Symbol	* pkey		3883316						
ANR	3883926	Symbol	ixStart		3883316						
ANR	3883927	Symbol	_strdup		3883316						
ANR	3883928	Symbol	strchr		3883316						
ANR	3883929	Symbol	cch		3883316						
ANR	3883930	Symbol	dw		3883316						
ANR	3883931	Symbol	options		3883316						
ANR	3883932	Symbol	m_lst_dynamic		3883316						
ANR	3883933	Symbol	isdigit		3883316						
ANR	3883934	Symbol	AttribValue :: Allocate		3883316						
ANR	3883935	Symbol	val		3883316						
ANR	3883936	Symbol	m_user_specified		3883316						
ANR	3883937	Symbol	ii		3883316						
ANR	3883938	Symbol	m_lst_dynamic . Next		3883316						
ANR	3883939	Symbol	NULL		3883316						
ANR	3883940	Symbol	pav		3883316						
ANR	3883941	Symbol	pszAttr		3883316						
ANR	3883942	Symbol	m_user_specified . next		3883316						
ANR	3883943	Symbol	isspace		3883316						
ANR	3883944	Symbol	aNet [ ii ] . pszValue		3883316						
ANR	3883945	Symbol	* aNet		3883316						
ANR	3883946	Symbol	generate_reg_key_attr_name		3883316						
ANR	3883947	Symbol	get_windows_reg_value		3883316						
ANR	3883948	Symbol	& ixStart		3883316						
ANR	3883949	Symbol	m_lst_static		3883316						
ANR	3883950	Symbol	aNet [ ii ] . pszVer		3883316						
ANR	3883951	Symbol	true		3883316						
ANR	3883952	Symbol	pbs		3883316						
ANR	3883953	Symbol	pszParam		3883316						
ANR	3883954	Symbol	detected_versions		3883316						
ANR	3883955	Symbol	m_lst_static . Next		3883316						
ANR	3883956	Symbol	* ii		3883316						
ANR	3883957	Symbol	lstrlen		3883316						
ANR	3883958	Symbol	hkey		3883316						
ANR	3883959	Symbol	parse_hive_prefix		3883316						
ANR	3883960	Symbol	pav -> pquery		3883316						
ANR	3883961	Symbol	* pav		3883316						
ANR	3883962	Symbol	add_WinPerf_Query		3883316						
ANR	3883963	Symbol	aNet		3883316						
ANR	3883964	Symbol	param		3883316						
ANR	3883965	Symbol	pszItem		3883316						
ANR	3883966	Symbol	pkey		3883316						
ANR	3883967	Symbol	value		3883316						
ANR	3883968	Symbol	atoi		3883316						
ANR	3883969	Symbol	s_dot_Net_Versions		3883316						
ANR	3883970	Symbol	pszVal		3883316						
ANR	3883971	Symbol	s_dot_Net_Versions . empty		3883316						
ANR	3883972	Symbol	m_user_settings_init		3883316						
ANR	3883973	Symbol	HKEY_PERFORMANCE_DATA		3883316						
ANR	3883974	Symbol	s_dot_Net_Versions . c_str		3883316						
ANR	3883975	Symbol	m_dot_Net_Versions		3883316						
ANR	3883976	Symbol	char		3883316						
ANR	3883977	Symbol	aNet [ ii ] . pszKey		3883316						
ANR	3883978	Function	MachAttributes :: init	288:0:8425:8509							
ANR	3883979	FunctionDef	MachAttributes :: init ()		3883978	0					
ANR	3883980	CompoundStatement		290:0:8453:8509	3883978	0					
ANR	3883981	ExpressionStatement	this -> init_user_settings ( )	291:1:8456:8482	3883978	0	True				
ANR	3883982	CallExpression	this -> init_user_settings ( )		3883978	0					
ANR	3883983	Callee	this -> init_user_settings		3883978	0					
ANR	3883984	PtrMemberAccess	this -> init_user_settings		3883978	0					
ANR	3883985	Identifier	this		3883978	0					
ANR	3883986	Identifier	init_user_settings		3883978	1					
ANR	3883987	ArgumentList			3883978	1					
ANR	3883988	ExpressionStatement	this -> compute ( A_ALL )	292:1:8485:8507	3883978	1	True				
ANR	3883989	CallExpression	this -> compute ( A_ALL )		3883978	0					
ANR	3883990	Callee	this -> compute		3883978	0					
ANR	3883991	PtrMemberAccess	this -> compute		3883978	0					
ANR	3883992	Identifier	this		3883978	0					
ANR	3883993	Identifier	compute		3883978	1					
ANR	3883994	ArgumentList	A_ALL		3883978	1					
ANR	3883995	Argument	A_ALL		3883978	0					
ANR	3883996	Identifier	A_ALL		3883978	0					
ANR	3883997	ReturnType	void		3883978	1					
ANR	3883998	Identifier	MachAttributes :: init		3883978	2					
ANR	3883999	ParameterList			3883978	3					
ANR	3884000	CFGEntryNode	ENTRY		3883978		True				
ANR	3884001	CFGExitNode	EXIT		3883978		True				
ANR	3884002	Symbol	A_ALL		3883978						
ANR	3884003	Symbol	this		3883978						
ANR	3884004	Function	MachAttributes :: compute	296:0:8513:11831							
ANR	3884005	FunctionDef	MachAttributes :: compute (amask_t how_much)		3884004	0					
ANR	3884006	CompoundStatement		298:0:8562:11831	3884004	0					
ANR	3884007	IfStatement	if ( ! m_user_settings_init )		3884004	0					
ANR	3884008	Condition	! m_user_settings_init	302:6:8780:8801	3884004	0	True				
ANR	3884009	UnaryOperationExpression	! m_user_settings_init		3884004	0					
ANR	3884010	UnaryOperator	!		3884004	0					
ANR	3884011	Identifier	m_user_settings_init		3884004	1					
ANR	3884012	ExpressionStatement	init_user_settings ( )	303:2:8806:8826	3884004	1	True				
ANR	3884013	CallExpression	init_user_settings ( )		3884004	0					
ANR	3884014	Callee	init_user_settings		3884004	0					
ANR	3884015	Identifier	init_user_settings		3884004	0					
ANR	3884016	ArgumentList			3884004	1					
ANR	3884017	IfStatement	if ( IS_STATIC ( how_much ) && IS_SHARED ( how_much ) )		3884004	1					
ANR	3884018	Condition	IS_STATIC ( how_much ) && IS_SHARED ( how_much )	305:5:8834:8875	3884004	0	True				
ANR	3884019	AndExpression	IS_STATIC ( how_much ) && IS_SHARED ( how_much )		3884004	0		&&			
ANR	3884020	CallExpression	IS_STATIC ( how_much )		3884004	0					
ANR	3884021	Callee	IS_STATIC		3884004	0					
ANR	3884022	Identifier	IS_STATIC		3884004	0					
ANR	3884023	ArgumentList	how_much		3884004	1					
ANR	3884024	Argument	how_much		3884004	0					
ANR	3884025	Identifier	how_much		3884004	0					
ANR	3884026	CallExpression	IS_SHARED ( how_much )		3884004	1					
ANR	3884027	Callee	IS_SHARED		3884004	0					
ANR	3884028	Identifier	IS_SHARED		3884004	0					
ANR	3884029	ArgumentList	how_much		3884004	1					
ANR	3884030	Argument	how_much		3884004	0					
ANR	3884031	Identifier	how_much		3884004	0					
ANR	3884032	CompoundStatement		8:50:316:316	3884004	1					
ANR	3884033	IfStatement	if ( m_arch )		3884004	0					
ANR	3884034	Condition	m_arch	315:6:9280:9285	3884004	0	True				
ANR	3884035	Identifier	m_arch		3884004	0					
ANR	3884036	CompoundStatement		18:15:726:726	3884004	1					
ANR	3884037	ExpressionStatement	free ( m_arch )	316:3:9294:9308	3884004	0	True				
ANR	3884038	CallExpression	free ( m_arch )		3884004	0					
ANR	3884039	Callee	free		3884004	0					
ANR	3884040	Identifier	free		3884004	0					
ANR	3884041	ArgumentList	m_arch		3884004	1					
ANR	3884042	Argument	m_arch		3884004	0					
ANR	3884043	Identifier	m_arch		3884004	0					
ANR	3884044	ExpressionStatement	"m_arch = param ( ""ARCH"" )"	318:2:9316:9340	3884004	1	True				
ANR	3884045	AssignmentExpression	"m_arch = param ( ""ARCH"" )"		3884004	0		=			
ANR	3884046	Identifier	m_arch		3884004	0					
ANR	3884047	CallExpression	"param ( ""ARCH"" )"		3884004	1					
ANR	3884048	Callee	param		3884004	0					
ANR	3884049	Identifier	param		3884004	0					
ANR	3884050	ArgumentList	"""ARCH"""		3884004	1					
ANR	3884051	Argument	"""ARCH"""		3884004	0					
ANR	3884052	PrimaryExpression	"""ARCH"""		3884004	0					
ANR	3884053	IfStatement	if ( m_opsys )		3884004	2					
ANR	3884054	Condition	m_opsys	320:6:9349:9355	3884004	0	True				
ANR	3884055	Identifier	m_opsys		3884004	0					
ANR	3884056	CompoundStatement		23:16:796:796	3884004	1					
ANR	3884057	ExpressionStatement	free ( m_opsys )	321:3:9364:9379	3884004	0	True				
ANR	3884058	CallExpression	free ( m_opsys )		3884004	0					
ANR	3884059	Callee	free		3884004	0					
ANR	3884060	Identifier	free		3884004	0					
ANR	3884061	ArgumentList	m_opsys		3884004	1					
ANR	3884062	Argument	m_opsys		3884004	0					
ANR	3884063	Identifier	m_opsys		3884004	0					
ANR	3884064	ExpressionStatement	"m_opsys = param ( ""OPSYS"" )"	323:2:9387:9413	3884004	3	True				
ANR	3884065	AssignmentExpression	"m_opsys = param ( ""OPSYS"" )"		3884004	0		=			
ANR	3884066	Identifier	m_opsys		3884004	0					
ANR	3884067	CallExpression	"param ( ""OPSYS"" )"		3884004	1					
ANR	3884068	Callee	param		3884004	0					
ANR	3884069	Identifier	param		3884004	0					
ANR	3884070	ArgumentList	"""OPSYS"""		3884004	1					
ANR	3884071	Argument	"""OPSYS"""		3884004	0					
ANR	3884072	PrimaryExpression	"""OPSYS"""		3884004	0					
ANR	3884073	ExpressionStatement	"m_opsysver = param_integer ( ""OPSYSVER"" , 0 )"	324:2:9417:9460	3884004	4	True				
ANR	3884074	AssignmentExpression	"m_opsysver = param_integer ( ""OPSYSVER"" , 0 )"		3884004	0		=			
ANR	3884075	Identifier	m_opsysver		3884004	0					
ANR	3884076	CallExpression	"param_integer ( ""OPSYSVER"" , 0 )"		3884004	1					
ANR	3884077	Callee	param_integer		3884004	0					
ANR	3884078	Identifier	param_integer		3884004	0					
ANR	3884079	ArgumentList	"""OPSYSVER"""		3884004	1					
ANR	3884080	Argument	"""OPSYSVER"""		3884004	0					
ANR	3884081	PrimaryExpression	"""OPSYSVER"""		3884004	0					
ANR	3884082	Argument	0		3884004	1					
ANR	3884083	PrimaryExpression	0		3884004	0					
ANR	3884084	IfStatement	if ( m_opsys_and_ver )		3884004	5					
ANR	3884085	Condition	m_opsys_and_ver	326:6:9469:9483	3884004	0	True				
ANR	3884086	Identifier	m_opsys_and_ver		3884004	0					
ANR	3884087	CompoundStatement		29:24:924:924	3884004	1					
ANR	3884088	ExpressionStatement	free ( m_opsys_and_ver )	327:3:9492:9515	3884004	0	True				
ANR	3884089	CallExpression	free ( m_opsys_and_ver )		3884004	0					
ANR	3884090	Callee	free		3884004	0					
ANR	3884091	Identifier	free		3884004	0					
ANR	3884092	ArgumentList	m_opsys_and_ver		3884004	1					
ANR	3884093	Argument	m_opsys_and_ver		3884004	0					
ANR	3884094	Identifier	m_opsys_and_ver		3884004	0					
ANR	3884095	ExpressionStatement	"m_opsys_and_ver = param ( ""OPSYS_AND_VER"" )"	329:2:9523:9565	3884004	6	True				
ANR	3884096	AssignmentExpression	"m_opsys_and_ver = param ( ""OPSYS_AND_VER"" )"		3884004	0		=			
ANR	3884097	Identifier	m_opsys_and_ver		3884004	0					
ANR	3884098	CallExpression	"param ( ""OPSYS_AND_VER"" )"		3884004	1					
ANR	3884099	Callee	param		3884004	0					
ANR	3884100	Identifier	param		3884004	0					
ANR	3884101	ArgumentList	"""OPSYS_AND_VER"""		3884004	1					
ANR	3884102	Argument	"""OPSYS_AND_VER"""		3884004	0					
ANR	3884103	PrimaryExpression	"""OPSYS_AND_VER"""		3884004	0					
ANR	3884104	IfStatement	if ( m_uid_domain )		3884004	7					
ANR	3884105	Condition	m_uid_domain	331:6:9574:9585	3884004	0	True				
ANR	3884106	Identifier	m_uid_domain		3884004	0					
ANR	3884107	CompoundStatement		34:21:1026:1026	3884004	1					
ANR	3884108	ExpressionStatement	free ( m_uid_domain )	332:3:9594:9614	3884004	0	True				
ANR	3884109	CallExpression	free ( m_uid_domain )		3884004	0					
ANR	3884110	Callee	free		3884004	0					
ANR	3884111	Identifier	free		3884004	0					
ANR	3884112	ArgumentList	m_uid_domain		3884004	1					
ANR	3884113	Argument	m_uid_domain		3884004	0					
ANR	3884114	Identifier	m_uid_domain		3884004	0					
ANR	3884115	ExpressionStatement	"m_uid_domain = param ( ""UID_DOMAIN"" )"	334:2:9622:9658	3884004	8	True				
ANR	3884116	AssignmentExpression	"m_uid_domain = param ( ""UID_DOMAIN"" )"		3884004	0		=			
ANR	3884117	Identifier	m_uid_domain		3884004	0					
ANR	3884118	CallExpression	"param ( ""UID_DOMAIN"" )"		3884004	1					
ANR	3884119	Callee	param		3884004	0					
ANR	3884120	Identifier	param		3884004	0					
ANR	3884121	ArgumentList	"""UID_DOMAIN"""		3884004	1					
ANR	3884122	Argument	"""UID_DOMAIN"""		3884004	0					
ANR	3884123	PrimaryExpression	"""UID_DOMAIN"""		3884004	0					
ANR	3884124	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%s = \\""%s\\""\\n"" , ATTR_UID_DOMAIN , m_uid_domain )"	335:2:9662:9737	3884004	9	True				
ANR	3884125	CallExpression	"dprintf ( D_FULLDEBUG , ""%s = \\""%s\\""\\n"" , ATTR_UID_DOMAIN , m_uid_domain )"		3884004	0					
ANR	3884126	Callee	dprintf		3884004	0					
ANR	3884127	Identifier	dprintf		3884004	0					
ANR	3884128	ArgumentList	D_FULLDEBUG		3884004	1					
ANR	3884129	Argument	D_FULLDEBUG		3884004	0					
ANR	3884130	Identifier	D_FULLDEBUG		3884004	0					
ANR	3884131	Argument	"""%s = \\""%s\\""\\n"""		3884004	1					
ANR	3884132	PrimaryExpression	"""%s = \\""%s\\""\\n"""		3884004	0					
ANR	3884133	Argument	ATTR_UID_DOMAIN		3884004	2					
ANR	3884134	Identifier	ATTR_UID_DOMAIN		3884004	0					
ANR	3884135	Argument	m_uid_domain		3884004	3					
ANR	3884136	Identifier	m_uid_domain		3884004	0					
ANR	3884137	IfStatement	if ( m_filesystem_domain )		3884004	10					
ANR	3884138	Condition	m_filesystem_domain	338:6:9746:9764	3884004	0	True				
ANR	3884139	Identifier	m_filesystem_domain		3884004	0					
ANR	3884140	CompoundStatement		41:28:1205:1205	3884004	1					
ANR	3884141	ExpressionStatement	free ( m_filesystem_domain )	339:3:9773:9800	3884004	0	True				
ANR	3884142	CallExpression	free ( m_filesystem_domain )		3884004	0					
ANR	3884143	Callee	free		3884004	0					
ANR	3884144	Identifier	free		3884004	0					
ANR	3884145	ArgumentList	m_filesystem_domain		3884004	1					
ANR	3884146	Argument	m_filesystem_domain		3884004	0					
ANR	3884147	Identifier	m_filesystem_domain		3884004	0					
ANR	3884148	ExpressionStatement	"m_filesystem_domain = param ( ""FILESYSTEM_DOMAIN"" )"	341:2:9808:9858	3884004	11	True				
ANR	3884149	AssignmentExpression	"m_filesystem_domain = param ( ""FILESYSTEM_DOMAIN"" )"		3884004	0		=			
ANR	3884150	Identifier	m_filesystem_domain		3884004	0					
ANR	3884151	CallExpression	"param ( ""FILESYSTEM_DOMAIN"" )"		3884004	1					
ANR	3884152	Callee	param		3884004	0					
ANR	3884153	Identifier	param		3884004	0					
ANR	3884154	ArgumentList	"""FILESYSTEM_DOMAIN"""		3884004	1					
ANR	3884155	Argument	"""FILESYSTEM_DOMAIN"""		3884004	0					
ANR	3884156	PrimaryExpression	"""FILESYSTEM_DOMAIN"""		3884004	0					
ANR	3884157	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%s = \\""%s\\""\\n"" , ATTR_FILE_SYSTEM_DOMAIN , m_filesystem_domain )"	342:2:9862:9952	3884004	12	True				
ANR	3884158	CallExpression	"dprintf ( D_FULLDEBUG , ""%s = \\""%s\\""\\n"" , ATTR_FILE_SYSTEM_DOMAIN , m_filesystem_domain )"		3884004	0					
ANR	3884159	Callee	dprintf		3884004	0					
ANR	3884160	Identifier	dprintf		3884004	0					
ANR	3884161	ArgumentList	D_FULLDEBUG		3884004	1					
ANR	3884162	Argument	D_FULLDEBUG		3884004	0					
ANR	3884163	Identifier	D_FULLDEBUG		3884004	0					
ANR	3884164	Argument	"""%s = \\""%s\\""\\n"""		3884004	1					
ANR	3884165	PrimaryExpression	"""%s = \\""%s\\""\\n"""		3884004	0					
ANR	3884166	Argument	ATTR_FILE_SYSTEM_DOMAIN		3884004	2					
ANR	3884167	Identifier	ATTR_FILE_SYSTEM_DOMAIN		3884004	0					
ANR	3884168	Argument	m_filesystem_domain		3884004	3					
ANR	3884169	Identifier	m_filesystem_domain		3884004	0					
ANR	3884170	ExpressionStatement	"m_idle_interval = param_integer ( ""IDLE_INTERVAL"" , - 1 )"	345:2:9957:10011	3884004	13	True				
ANR	3884171	AssignmentExpression	"m_idle_interval = param_integer ( ""IDLE_INTERVAL"" , - 1 )"		3884004	0		=			
ANR	3884172	Identifier	m_idle_interval		3884004	0					
ANR	3884173	CallExpression	"param_integer ( ""IDLE_INTERVAL"" , - 1 )"		3884004	1					
ANR	3884174	Callee	param_integer		3884004	0					
ANR	3884175	Identifier	param_integer		3884004	0					
ANR	3884176	ArgumentList	"""IDLE_INTERVAL"""		3884004	1					
ANR	3884177	Argument	"""IDLE_INTERVAL"""		3884004	0					
ANR	3884178	PrimaryExpression	"""IDLE_INTERVAL"""		3884004	0					
ANR	3884179	Argument	- 1		3884004	1					
ANR	3884180	UnaryOperationExpression	- 1		3884004	0					
ANR	3884181	UnaryOperator	-		3884004	0					
ANR	3884182	PrimaryExpression	1		3884004	1					
ANR	3884183	IfStatement	if ( m_ckptpltfrm )		3884004	14					
ANR	3884184	Condition	m_ckptpltfrm	348:6:10056:10067	3884004	0	True				
ANR	3884185	Identifier	m_ckptpltfrm		3884004	0					
ANR	3884186	CompoundStatement		51:20:1507:1507	3884004	1					
ANR	3884187	ExpressionStatement	free ( m_ckptpltfrm )	349:3:10075:10093	3884004	0	True				
ANR	3884188	CallExpression	free ( m_ckptpltfrm )		3884004	0					
ANR	3884189	Callee	free		3884004	0					
ANR	3884190	Identifier	free		3884004	0					
ANR	3884191	ArgumentList	m_ckptpltfrm		3884004	1					
ANR	3884192	Argument	m_ckptpltfrm		3884004	0					
ANR	3884193	Identifier	m_ckptpltfrm		3884004	0					
ANR	3884194	ExpressionStatement	m_ckptpltfrm = strdup ( sysapi_ckptpltfrm ( ) )	351:2:10101:10143	3884004	15	True				
ANR	3884195	AssignmentExpression	m_ckptpltfrm = strdup ( sysapi_ckptpltfrm ( ) )		3884004	0		=			
ANR	3884196	Identifier	m_ckptpltfrm		3884004	0					
ANR	3884197	CallExpression	strdup ( sysapi_ckptpltfrm ( ) )		3884004	1					
ANR	3884198	Callee	strdup		3884004	0					
ANR	3884199	Identifier	strdup		3884004	0					
ANR	3884200	ArgumentList	sysapi_ckptpltfrm ( )		3884004	1					
ANR	3884201	Argument	sysapi_ckptpltfrm ( )		3884004	0					
ANR	3884202	CallExpression	sysapi_ckptpltfrm ( )		3884004	0					
ANR	3884203	Callee	sysapi_ckptpltfrm		3884004	0					
ANR	3884204	Identifier	sysapi_ckptpltfrm		3884004	0					
ANR	3884205	ArgumentList			3884004	1					
ANR	3884206	IfStatement	if ( IS_UPDATE ( how_much ) && IS_SHARED ( how_much ) )		3884004	2					
ANR	3884207	Condition	IS_UPDATE ( how_much ) && IS_SHARED ( how_much )	355:5:10158:10199	3884004	0	True				
ANR	3884208	AndExpression	IS_UPDATE ( how_much ) && IS_SHARED ( how_much )		3884004	0		&&			
ANR	3884209	CallExpression	IS_UPDATE ( how_much )		3884004	0					
ANR	3884210	Callee	IS_UPDATE		3884004	0					
ANR	3884211	Identifier	IS_UPDATE		3884004	0					
ANR	3884212	ArgumentList	how_much		3884004	1					
ANR	3884213	Argument	how_much		3884004	0					
ANR	3884214	Identifier	how_much		3884004	0					
ANR	3884215	CallExpression	IS_SHARED ( how_much )		3884004	1					
ANR	3884216	Callee	IS_SHARED		3884004	0					
ANR	3884217	Identifier	IS_SHARED		3884004	0					
ANR	3884218	ArgumentList	how_much		3884004	1					
ANR	3884219	Argument	how_much		3884004	0					
ANR	3884220	Identifier	how_much		3884004	0					
ANR	3884221	CompoundStatement		58:50:1640:1640	3884004	1					
ANR	3884222	ExpressionStatement	m_virt_mem = sysapi_swap_space ( )	357:2:10208:10240	3884004	0	True				
ANR	3884223	AssignmentExpression	m_virt_mem = sysapi_swap_space ( )		3884004	0		=			
ANR	3884224	Identifier	m_virt_mem		3884004	0					
ANR	3884225	CallExpression	sysapi_swap_space ( )		3884004	1					
ANR	3884226	Callee	sysapi_swap_space		3884004	0					
ANR	3884227	Identifier	sysapi_swap_space		3884004	0					
ANR	3884228	ArgumentList			3884004	1					
ANR	3884229	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Swap space: %lu\\n"" , m_virt_mem )"	358:2:10244:10299	3884004	1	True				
ANR	3884230	CallExpression	"dprintf ( D_FULLDEBUG , ""Swap space: %lu\\n"" , m_virt_mem )"		3884004	0					
ANR	3884231	Callee	dprintf		3884004	0					
ANR	3884232	Identifier	dprintf		3884004	0					
ANR	3884233	ArgumentList	D_FULLDEBUG		3884004	1					
ANR	3884234	Argument	D_FULLDEBUG		3884004	0					
ANR	3884235	Identifier	D_FULLDEBUG		3884004	0					
ANR	3884236	Argument	"""Swap space: %lu\\n"""		3884004	1					
ANR	3884237	PrimaryExpression	"""Swap space: %lu\\n"""		3884004	0					
ANR	3884238	Argument	m_virt_mem		3884004	2					
ANR	3884239	Identifier	m_virt_mem		3884004	0					
ANR	3884240	ExpressionStatement	credd_test ( )	361:2:10323:10335	3884004	2	True				
ANR	3884241	CallExpression	credd_test ( )		3884004	0					
ANR	3884242	Callee	credd_test		3884004	0					
ANR	3884243	Identifier	credd_test		3884004	0					
ANR	3884244	ArgumentList			3884004	1					
ANR	3884245	IfStatement	if ( IS_TIMEOUT ( how_much ) && IS_SHARED ( how_much ) )		3884004	3					
ANR	3884246	Condition	IS_TIMEOUT ( how_much ) && IS_SHARED ( how_much )	366:5:10354:10396	3884004	0	True				
ANR	3884247	AndExpression	IS_TIMEOUT ( how_much ) && IS_SHARED ( how_much )		3884004	0		&&			
ANR	3884248	CallExpression	IS_TIMEOUT ( how_much )		3884004	0					
ANR	3884249	Callee	IS_TIMEOUT		3884004	0					
ANR	3884250	Identifier	IS_TIMEOUT		3884004	0					
ANR	3884251	ArgumentList	how_much		3884004	1					
ANR	3884252	Argument	how_much		3884004	0					
ANR	3884253	Identifier	how_much		3884004	0					
ANR	3884254	CallExpression	IS_SHARED ( how_much )		3884004	1					
ANR	3884255	Callee	IS_SHARED		3884004	0					
ANR	3884256	Identifier	IS_SHARED		3884004	0					
ANR	3884257	ArgumentList	how_much		3884004	1					
ANR	3884258	Argument	how_much		3884004	0					
ANR	3884259	Identifier	how_much		3884004	0					
ANR	3884260	CompoundStatement		103:8:2637:2660	3884004	1					
ANR	3884261	ExpressionStatement	m_load = sysapi_load_avg ( )	367:2:10404:10430	3884004	0	True				
ANR	3884262	AssignmentExpression	m_load = sysapi_load_avg ( )		3884004	0		=			
ANR	3884263	Identifier	m_load		3884004	0					
ANR	3884264	CallExpression	sysapi_load_avg ( )		3884004	1					
ANR	3884265	Callee	sysapi_load_avg		3884004	0					
ANR	3884266	Identifier	sysapi_load_avg		3884004	0					
ANR	3884267	ArgumentList			3884004	1					
ANR	3884268	ExpressionStatement	"sysapi_idle_time ( & m_idle , & m_console_idle )"	369:2:10435:10479	3884004	1	True				
ANR	3884269	CallExpression	"sysapi_idle_time ( & m_idle , & m_console_idle )"		3884004	0					
ANR	3884270	Callee	sysapi_idle_time		3884004	0					
ANR	3884271	Identifier	sysapi_idle_time		3884004	0					
ANR	3884272	ArgumentList	& m_idle		3884004	1					
ANR	3884273	Argument	& m_idle		3884004	0					
ANR	3884274	UnaryOperationExpression	& m_idle		3884004	0					
ANR	3884275	UnaryOperator	&		3884004	0					
ANR	3884276	Identifier	m_idle		3884004	1					
ANR	3884277	Argument	& m_console_idle		3884004	1					
ANR	3884278	UnaryOperationExpression	& m_console_idle		3884004	0					
ANR	3884279	UnaryOperator	&		3884004	0					
ANR	3884280	Identifier	m_console_idle		3884004	1					
ANR	3884281	IdentifierDeclStatement	time_t my_timer ;	371:2:10484:10499	3884004	2	True				
ANR	3884282	IdentifierDecl	my_timer		3884004	0					
ANR	3884283	IdentifierDeclType	time_t		3884004	0					
ANR	3884284	Identifier	my_timer		3884004	1					
ANR	3884285	IdentifierDeclStatement	struct tm * the_time ;	372:2:10503:10522	3884004	3	True				
ANR	3884286	IdentifierDecl	* the_time		3884004	0					
ANR	3884287	IdentifierDeclType	struct tm *		3884004	0					
ANR	3884288	Identifier	the_time		3884004	1					
ANR	3884289	ExpressionStatement	time ( & my_timer )	373:2:10526:10543	3884004	4	True				
ANR	3884290	CallExpression	time ( & my_timer )		3884004	0					
ANR	3884291	Callee	time		3884004	0					
ANR	3884292	Identifier	time		3884004	0					
ANR	3884293	ArgumentList	& my_timer		3884004	1					
ANR	3884294	Argument	& my_timer		3884004	0					
ANR	3884295	UnaryOperationExpression	& my_timer		3884004	0					
ANR	3884296	UnaryOperator	&		3884004	0					
ANR	3884297	Identifier	my_timer		3884004	1					
ANR	3884298	ExpressionStatement	the_time = localtime ( & my_timer )	374:2:10547:10578	3884004	5	True				
ANR	3884299	AssignmentExpression	the_time = localtime ( & my_timer )		3884004	0		=			
ANR	3884300	Identifier	the_time		3884004	0					
ANR	3884301	CallExpression	localtime ( & my_timer )		3884004	1					
ANR	3884302	Callee	localtime		3884004	0					
ANR	3884303	Identifier	localtime		3884004	0					
ANR	3884304	ArgumentList	& my_timer		3884004	1					
ANR	3884305	Argument	& my_timer		3884004	0					
ANR	3884306	UnaryOperationExpression	& my_timer		3884004	0					
ANR	3884307	UnaryOperator	&		3884004	0					
ANR	3884308	Identifier	my_timer		3884004	1					
ANR	3884309	ExpressionStatement	m_clock_min = ( the_time -> tm_hour * 60 ) + the_time -> tm_min	375:2:10582:10639	3884004	6	True				
ANR	3884310	AssignmentExpression	m_clock_min = ( the_time -> tm_hour * 60 ) + the_time -> tm_min		3884004	0		=			
ANR	3884311	Identifier	m_clock_min		3884004	0					
ANR	3884312	AdditiveExpression	( the_time -> tm_hour * 60 ) + the_time -> tm_min		3884004	1		+			
ANR	3884313	MultiplicativeExpression	the_time -> tm_hour * 60		3884004	0		*			
ANR	3884314	PtrMemberAccess	the_time -> tm_hour		3884004	0					
ANR	3884315	Identifier	the_time		3884004	0					
ANR	3884316	Identifier	tm_hour		3884004	1					
ANR	3884317	PrimaryExpression	60		3884004	1					
ANR	3884318	PtrMemberAccess	the_time -> tm_min		3884004	1					
ANR	3884319	Identifier	the_time		3884004	0					
ANR	3884320	Identifier	tm_min		3884004	1					
ANR	3884321	ExpressionStatement	m_clock_day = the_time -> tm_wday	376:2:10643:10674	3884004	7	True				
ANR	3884322	AssignmentExpression	m_clock_day = the_time -> tm_wday		3884004	0		=			
ANR	3884323	Identifier	m_clock_day		3884004	0					
ANR	3884324	PtrMemberAccess	the_time -> tm_wday		3884004	1					
ANR	3884325	Identifier	the_time		3884004	0					
ANR	3884326	Identifier	tm_wday		3884004	1					
ANR	3884327	IfStatement	if ( m_last_keypress < my_timer - m_idle )		3884004	8					
ANR	3884328	Condition	m_last_keypress < my_timer - m_idle	378:6:10683:10717	3884004	0	True				
ANR	3884329	RelationalExpression	m_last_keypress < my_timer - m_idle		3884004	0		<			
ANR	3884330	Identifier	m_last_keypress		3884004	0					
ANR	3884331	AdditiveExpression	my_timer - m_idle		3884004	1		-			
ANR	3884332	Identifier	my_timer		3884004	0					
ANR	3884333	Identifier	m_idle		3884004	1					
ANR	3884334	CompoundStatement		81:43:2157:2157	3884004	1					
ANR	3884335	IfStatement	if ( m_idle_interval >= 0 )		3884004	0					
ANR	3884336	Condition	m_idle_interval >= 0	379:7:10729:10748	3884004	0	True				
ANR	3884337	RelationalExpression	m_idle_interval >= 0		3884004	0		>=			
ANR	3884338	Identifier	m_idle_interval		3884004	0					
ANR	3884339	PrimaryExpression	0		3884004	1					
ANR	3884340	CompoundStatement		83:4:2194:2235	3884004	1					
ANR	3884341	IdentifierDeclStatement	int duration = my_timer - m_last_keypress ;	380:4:10757:10798	3884004	0	True				
ANR	3884342	IdentifierDecl	duration = my_timer - m_last_keypress		3884004	0					
ANR	3884343	IdentifierDeclType	int		3884004	0					
ANR	3884344	Identifier	duration		3884004	1					
ANR	3884345	AssignmentExpression	duration = my_timer - m_last_keypress		3884004	2		=			
ANR	3884346	Identifier	duration		3884004	0					
ANR	3884347	AdditiveExpression	my_timer - m_last_keypress		3884004	1		-			
ANR	3884348	Identifier	my_timer		3884004	0					
ANR	3884349	Identifier	m_last_keypress		3884004	1					
ANR	3884350	IfStatement	if ( duration > m_idle_interval )		3884004	1					
ANR	3884351	Condition	duration > m_idle_interval	381:8:10808:10833	3884004	0	True				
ANR	3884352	RelationalExpression	duration > m_idle_interval		3884004	0		>			
ANR	3884353	Identifier	duration		3884004	0					
ANR	3884354	Identifier	m_idle_interval		3884004	1					
ANR	3884355	CompoundStatement		84:36:2273:2273	3884004	1					
ANR	3884356	IfStatement	if ( m_seen_keypress )		3884004	0					
ANR	3884357	Condition	m_seen_keypress	382:9:10847:10861	3884004	0	True				
ANR	3884358	Identifier	m_seen_keypress		3884004	0					
ANR	3884359	CompoundStatement		85:26:2301:2301	3884004	1					
ANR	3884360	ExpressionStatement	"dprintf ( D_IDLE , ""end idle interval of %d sec.\\n"" , duration )"	383:6:10872:10939	3884004	0	True				
ANR	3884361	CallExpression	"dprintf ( D_IDLE , ""end idle interval of %d sec.\\n"" , duration )"		3884004	0					
ANR	3884362	Callee	dprintf		3884004	0					
ANR	3884363	Identifier	dprintf		3884004	0					
ANR	3884364	ArgumentList	D_IDLE		3884004	1					
ANR	3884365	Argument	D_IDLE		3884004	0					
ANR	3884366	Identifier	D_IDLE		3884004	0					
ANR	3884367	Argument	"""end idle interval of %d sec.\\n"""		3884004	1					
ANR	3884368	PrimaryExpression	"""end idle interval of %d sec.\\n"""		3884004	0					
ANR	3884369	Argument	duration		3884004	2					
ANR	3884370	Identifier	duration		3884004	0					
ANR	3884371	ElseStatement	else		3884004	0					
ANR	3884372	CompoundStatement		88:12:2390:2390	3884004	0					
ANR	3884373	ExpressionStatement	"dprintf ( D_IDLE , ""first keyboard event %d sec. after startup\\n"" , duration )"	386:6:10961:11050	3884004	0	True				
ANR	3884374	CallExpression	"dprintf ( D_IDLE , ""first keyboard event %d sec. after startup\\n"" , duration )"		3884004	0					
ANR	3884375	Callee	dprintf		3884004	0					
ANR	3884376	Identifier	dprintf		3884004	0					
ANR	3884377	ArgumentList	D_IDLE		3884004	1					
ANR	3884378	Argument	D_IDLE		3884004	0					
ANR	3884379	Identifier	D_IDLE		3884004	0					
ANR	3884380	Argument	"""first keyboard event %d sec. after startup\\n"""		3884004	1					
ANR	3884381	PrimaryExpression	"""first keyboard event %d sec. after startup\\n"""		3884004	0					
ANR	3884382	Argument	duration		3884004	2					
ANR	3884383	Identifier	duration		3884004	0					
ANR	3884384	ExpressionStatement	m_last_keypress = my_timer	392:3:11073:11099	3884004	1	True				
ANR	3884385	AssignmentExpression	m_last_keypress = my_timer		3884004	0		=			
ANR	3884386	Identifier	m_last_keypress		3884004	0					
ANR	3884387	Identifier	my_timer		3884004	1					
ANR	3884388	ExpressionStatement	m_seen_keypress = true	393:3:11104:11126	3884004	2	True				
ANR	3884389	AssignmentExpression	m_seen_keypress = true		3884004	0		=			
ANR	3884390	Identifier	m_seen_keypress		3884004	0					
ANR	3884391	Identifier	true		3884004	1					
ANR	3884392	ExpressionStatement	update_all_WinPerf_results ( )	397:8:11154:11182	3884004	9	True				
ANR	3884393	CallExpression	update_all_WinPerf_results ( )		3884004	0					
ANR	3884394	Callee	update_all_WinPerf_results		3884004	0					
ANR	3884395	Identifier	update_all_WinPerf_results		3884004	0					
ANR	3884396	ArgumentList			3884004	1					
ANR	3884397	IdentifierDeclStatement	AttribValue * pav = NULL ;	400:8:11200:11223	3884004	10	True				
ANR	3884398	IdentifierDecl	* pav = NULL		3884004	0					
ANR	3884399	IdentifierDeclType	AttribValue *		3884004	0					
ANR	3884400	Identifier	pav		3884004	1					
ANR	3884401	AssignmentExpression	* pav = NULL		3884004	2		=			
ANR	3884402	Identifier	NULL		3884004	0					
ANR	3884403	Identifier	NULL		3884004	1					
ANR	3884404	ExpressionStatement	m_lst_dynamic . Rewind ( )	401:8:11233:11255	3884004	11	True				
ANR	3884405	CallExpression	m_lst_dynamic . Rewind ( )		3884004	0					
ANR	3884406	Callee	m_lst_dynamic . Rewind		3884004	0					
ANR	3884407	MemberAccess	m_lst_dynamic . Rewind		3884004	0					
ANR	3884408	Identifier	m_lst_dynamic		3884004	0					
ANR	3884409	Identifier	Rewind		3884004	1					
ANR	3884410	ArgumentList			3884004	1					
ANR	3884411	WhileStatement	while ( ( pav = m_lst_dynamic . Next ( ) ) )		3884004	12					
ANR	3884412	Condition	pav = m_lst_dynamic . Next ( )	402:15:11272:11299	3884004	0	True				
ANR	3884413	AssignmentExpression	pav = m_lst_dynamic . Next ( )		3884004	0		=			
ANR	3884414	Identifier	pav		3884004	0					
ANR	3884415	CallExpression	m_lst_dynamic . Next ( )		3884004	1					
ANR	3884416	Callee	m_lst_dynamic . Next		3884004	0					
ANR	3884417	MemberAccess	m_lst_dynamic . Next		3884004	0					
ANR	3884418	Identifier	m_lst_dynamic		3884004	0					
ANR	3884419	Identifier	Next		3884004	1					
ANR	3884420	ArgumentList			3884004	1					
ANR	3884421	CompoundStatement		105:46:2740:2740	3884004	1					
ANR	3884422	IfStatement	if ( pav )		3884004	0					
ANR	3884423	Condition	pav	403:15:11320:11322	3884004	0	True				
ANR	3884424	Identifier	pav		3884004	0					
ANR	3884425	CompoundStatement		106:20:2762:2762	3884004	1					
ANR	3884426	IfStatement	if ( ! update_WinPerf_Value ( pav ) )		3884004	0					
ANR	3884427	Condition	! update_WinPerf_Value ( pav )	405:19:11372:11398	3884004	0	True				
ANR	3884428	UnaryOperationExpression	! update_WinPerf_Value ( pav )		3884004	0					
ANR	3884429	UnaryOperator	!		3884004	0					
ANR	3884430	CallExpression	update_WinPerf_Value ( pav )		3884004	1					
ANR	3884431	Callee	update_WinPerf_Value		3884004	0					
ANR	3884432	Identifier	update_WinPerf_Value		3884004	0					
ANR	3884433	ArgumentList	pav		3884004	1					
ANR	3884434	Argument	pav		3884004	0					
ANR	3884435	Identifier	pav		3884004	0					
ANR	3884436	ExpressionStatement	pav -> vtype = AttribValue_DataType_Max	406:17:11418:11455	3884004	1	True				
ANR	3884437	AssignmentExpression	pav -> vtype = AttribValue_DataType_Max		3884004	0		=			
ANR	3884438	PtrMemberAccess	pav -> vtype		3884004	0					
ANR	3884439	Identifier	pav		3884004	0					
ANR	3884440	Identifier	vtype		3884004	1					
ANR	3884441	Identifier	AttribValue_DataType_Max		3884004	1					
ANR	3884442	IfStatement	if ( IS_TIMEOUT ( how_much ) && IS_SUMMED ( how_much ) )		3884004	4					
ANR	3884443	Condition	IS_TIMEOUT ( how_much ) && IS_SUMMED ( how_much )	416:5:11659:11701	3884004	0	True				
ANR	3884444	AndExpression	IS_TIMEOUT ( how_much ) && IS_SUMMED ( how_much )		3884004	0		&&			
ANR	3884445	CallExpression	IS_TIMEOUT ( how_much )		3884004	0					
ANR	3884446	Callee	IS_TIMEOUT		3884004	0					
ANR	3884447	Identifier	IS_TIMEOUT		3884004	0					
ANR	3884448	ArgumentList	how_much		3884004	1					
ANR	3884449	Argument	how_much		3884004	0					
ANR	3884450	Identifier	how_much		3884004	0					
ANR	3884451	CallExpression	IS_SUMMED ( how_much )		3884004	1					
ANR	3884452	Callee	IS_SUMMED		3884004	0					
ANR	3884453	Identifier	IS_SUMMED		3884004	0					
ANR	3884454	ArgumentList	how_much		3884004	1					
ANR	3884455	Argument	how_much		3884004	0					
ANR	3884456	Identifier	how_much		3884004	0					
ANR	3884457	CompoundStatement		119:51:3142:3142	3884004	1					
ANR	3884458	ExpressionStatement	m_condor_load = resmgr -> sum ( & Resource :: condor_load )	417:2:11709:11762	3884004	0	True				
ANR	3884459	AssignmentExpression	m_condor_load = resmgr -> sum ( & Resource :: condor_load )		3884004	0		=			
ANR	3884460	Identifier	m_condor_load		3884004	0					
ANR	3884461	CallExpression	resmgr -> sum ( & Resource :: condor_load )		3884004	1					
ANR	3884462	Callee	resmgr -> sum		3884004	0					
ANR	3884463	PtrMemberAccess	resmgr -> sum		3884004	0					
ANR	3884464	Identifier	resmgr		3884004	0					
ANR	3884465	Identifier	sum		3884004	1					
ANR	3884466	ArgumentList	& Resource :: condor_load		3884004	1					
ANR	3884467	Argument	& Resource :: condor_load		3884004	0					
ANR	3884468	UnaryOperationExpression	& Resource :: condor_load		3884004	0					
ANR	3884469	UnaryOperator	&		3884004	0					
ANR	3884470	Identifier	Resource :: condor_load		3884004	1					
ANR	3884471	IfStatement	if ( m_condor_load > m_load )		3884004	1					
ANR	3884472	Condition	m_condor_load > m_load	418:6:11770:11791	3884004	0	True				
ANR	3884473	RelationalExpression	m_condor_load > m_load		3884004	0		>			
ANR	3884474	Identifier	m_condor_load		3884004	0					
ANR	3884475	Identifier	m_load		3884004	1					
ANR	3884476	CompoundStatement		121:31:3232:3232	3884004	1					
ANR	3884477	ExpressionStatement	m_condor_load = m_load	419:3:11800:11822	3884004	0	True				
ANR	3884478	AssignmentExpression	m_condor_load = m_load		3884004	0		=			
ANR	3884479	Identifier	m_condor_load		3884004	0					
ANR	3884480	Identifier	m_load		3884004	1					
ANR	3884481	ReturnType	void		3884004	1					
ANR	3884482	Identifier	MachAttributes :: compute		3884004	2					
ANR	3884483	ParameterList	amask_t how_much		3884004	3					
ANR	3884484	Parameter	amask_t how_much	297:25:8543:8558	3884004	0	True				
ANR	3884485	ParameterType	amask_t		3884004	0					
ANR	3884486	Identifier	how_much		3884004	1					
ANR	3884487	CFGEntryNode	ENTRY		3884004		True				
ANR	3884488	CFGExitNode	EXIT		3884004		True				
ANR	3884489	Symbol	m_arch		3884004						
ANR	3884490	Symbol	& m_idle		3884004						
ANR	3884491	Symbol	localtime		3884004						
ANR	3884492	Symbol	the_time		3884004						
ANR	3884493	Symbol	the_time -> tm_min		3884004						
ANR	3884494	Symbol	m_ckptpltfrm		3884004						
ANR	3884495	Symbol	IS_TIMEOUT		3884004						
ANR	3884496	Symbol	D_IDLE		3884004						
ANR	3884497	Symbol	m_idle		3884004						
ANR	3884498	Symbol	m_opsys		3884004						
ANR	3884499	Symbol	my_timer		3884004						
ANR	3884500	Symbol	m_seen_keypress		3884004						
ANR	3884501	Symbol	m_load		3884004						
ANR	3884502	Symbol	update_WinPerf_Value		3884004						
ANR	3884503	Symbol	m_lst_dynamic		3884004						
ANR	3884504	Symbol	the_time -> tm_wday		3884004						
ANR	3884505	Symbol	m_lst_dynamic . Next		3884004						
ANR	3884506	Symbol	NULL		3884004						
ANR	3884507	Symbol	m_clock_min		3884004						
ANR	3884508	Symbol	pav		3884004						
ANR	3884509	Symbol	m_virt_mem		3884004						
ANR	3884510	Symbol	* resmgr		3884004						
ANR	3884511	Symbol	m_condor_load		3884004						
ANR	3884512	Symbol	D_FULLDEBUG		3884004						
ANR	3884513	Symbol	ATTR_UID_DOMAIN		3884004						
ANR	3884514	Symbol	ATTR_FILE_SYSTEM_DOMAIN		3884004						
ANR	3884515	Symbol	resmgr		3884004						
ANR	3884516	Symbol	IS_SHARED		3884004						
ANR	3884517	Symbol	the_time -> tm_hour		3884004						
ANR	3884518	Symbol	true		3884004						
ANR	3884519	Symbol	param_integer		3884004						
ANR	3884520	Symbol	IS_SUMMED		3884004						
ANR	3884521	Symbol	& Resource :: condor_load		3884004						
ANR	3884522	Symbol	m_idle_interval		3884004						
ANR	3884523	Symbol	m_opsysver		3884004						
ANR	3884524	Symbol	sysapi_swap_space		3884004						
ANR	3884525	Symbol	resmgr -> sum		3884004						
ANR	3884526	Symbol	* pav		3884004						
ANR	3884527	Symbol	how_much		3884004						
ANR	3884528	Symbol	duration		3884004						
ANR	3884529	Symbol	m_opsys_and_ver		3884004						
ANR	3884530	Symbol	param		3884004						
ANR	3884531	Symbol	m_uid_domain		3884004						
ANR	3884532	Symbol	m_filesystem_domain		3884004						
ANR	3884533	Symbol	AttribValue_DataType_Max		3884004						
ANR	3884534	Symbol	& m_console_idle		3884004						
ANR	3884535	Symbol	sysapi_ckptpltfrm		3884004						
ANR	3884536	Symbol	sysapi_load_avg		3884004						
ANR	3884537	Symbol	* the_time		3884004						
ANR	3884538	Symbol	m_user_settings_init		3884004						
ANR	3884539	Symbol	m_clock_day		3884004						
ANR	3884540	Symbol	pav -> vtype		3884004						
ANR	3884541	Symbol	IS_STATIC		3884004						
ANR	3884542	Symbol	IS_UPDATE		3884004						
ANR	3884543	Symbol	strdup		3884004						
ANR	3884544	Symbol	& my_timer		3884004						
ANR	3884545	Symbol	m_last_keypress		3884004						
ANR	3884546	Function	MachAttributes :: final_idle_dprintf	424:0:11834:12106							
ANR	3884547	FunctionDef	MachAttributes :: final_idle_dprintf ()		3884546	0					
ANR	3884548	CompoundStatement		426:0:11876:12106	3884546	0					
ANR	3884549	IfStatement	if ( m_idle_interval >= 0 )		3884546	0					
ANR	3884550	Condition	m_idle_interval >= 0	427:5:11883:11902	3884546	0	True				
ANR	3884551	RelationalExpression	m_idle_interval >= 0		3884546	0		>=			
ANR	3884552	Identifier	m_idle_interval		3884546	0					
ANR	3884553	PrimaryExpression	0		3884546	1					
ANR	3884554	CompoundStatement		4:2:61:102	3884546	1					
ANR	3884555	IdentifierDeclStatement	time_t my_timer = time ( 0 ) ;	428:2:11909:11934	3884546	0	True				
ANR	3884556	IdentifierDecl	my_timer = time ( 0 )		3884546	0					
ANR	3884557	IdentifierDeclType	time_t		3884546	0					
ANR	3884558	Identifier	my_timer		3884546	1					
ANR	3884559	AssignmentExpression	my_timer = time ( 0 )		3884546	2		=			
ANR	3884560	Identifier	my_timer		3884546	0					
ANR	3884561	CallExpression	time ( 0 )		3884546	1					
ANR	3884562	Callee	time		3884546	0					
ANR	3884563	Identifier	time		3884546	0					
ANR	3884564	ArgumentList	0		3884546	1					
ANR	3884565	Argument	0		3884546	0					
ANR	3884566	PrimaryExpression	0		3884546	0					
ANR	3884567	IdentifierDeclStatement	int duration = my_timer - m_last_keypress ;	429:2:11938:11979	3884546	1	True				
ANR	3884568	IdentifierDecl	duration = my_timer - m_last_keypress		3884546	0					
ANR	3884569	IdentifierDeclType	int		3884546	0					
ANR	3884570	Identifier	duration		3884546	1					
ANR	3884571	AssignmentExpression	duration = my_timer - m_last_keypress		3884546	2		=			
ANR	3884572	Identifier	duration		3884546	0					
ANR	3884573	AdditiveExpression	my_timer - m_last_keypress		3884546	1		-			
ANR	3884574	Identifier	my_timer		3884546	0					
ANR	3884575	Identifier	m_last_keypress		3884546	1					
ANR	3884576	IfStatement	if ( duration > m_idle_interval )		3884546	2					
ANR	3884577	Condition	duration > m_idle_interval	430:6:11987:12012	3884546	0	True				
ANR	3884578	RelationalExpression	duration > m_idle_interval		3884546	0		>			
ANR	3884579	Identifier	duration		3884546	0					
ANR	3884580	Identifier	m_idle_interval		3884546	1					
ANR	3884581	CompoundStatement		5:34:138:138	3884546	1					
ANR	3884582	ExpressionStatement	"dprintf ( D_IDLE , ""keyboard idle for %d sec. before shutdown\\n"" , duration )"	431:3:12020:12097	3884546	0	True				
ANR	3884583	CallExpression	"dprintf ( D_IDLE , ""keyboard idle for %d sec. before shutdown\\n"" , duration )"		3884546	0					
ANR	3884584	Callee	dprintf		3884546	0					
ANR	3884585	Identifier	dprintf		3884546	0					
ANR	3884586	ArgumentList	D_IDLE		3884546	1					
ANR	3884587	Argument	D_IDLE		3884546	0					
ANR	3884588	Identifier	D_IDLE		3884546	0					
ANR	3884589	Argument	"""keyboard idle for %d sec. before shutdown\\n"""		3884546	1					
ANR	3884590	PrimaryExpression	"""keyboard idle for %d sec. before shutdown\\n"""		3884546	0					
ANR	3884591	Argument	duration		3884546	2					
ANR	3884592	Identifier	duration		3884546	0					
ANR	3884593	ReturnType	void		3884546	1					
ANR	3884594	Identifier	MachAttributes :: final_idle_dprintf		3884546	2					
ANR	3884595	ParameterList			3884546	3					
ANR	3884596	CFGEntryNode	ENTRY		3884546		True				
ANR	3884597	CFGExitNode	EXIT		3884546		True				
ANR	3884598	Symbol	my_timer		3884546						
ANR	3884599	Symbol	duration		3884546						
ANR	3884600	Symbol	m_idle_interval		3884546						
ANR	3884601	Symbol	D_IDLE		3884546						
ANR	3884602	Symbol	time		3884546						
ANR	3884603	Symbol	m_last_keypress		3884546						
ANR	3884604	Function	MachAttributes :: publish	437:0:12109:16873							
ANR	3884605	FunctionDef	"MachAttributes :: publish (ClassAd * cp , amask_t how_much)"		3884604	0					
ANR	3884606	CompoundStatement		439:0:12171:16873	3884604	0					
ANR	3884607	IfStatement	if ( IS_STATIC ( how_much ) || IS_PUBLIC ( how_much ) )		3884604	0					
ANR	3884608	Condition	IS_STATIC ( how_much ) || IS_PUBLIC ( how_much )	440:5:12178:12219	3884604	0	True				
ANR	3884609	OrExpression	IS_STATIC ( how_much ) || IS_PUBLIC ( how_much )		3884604	0		||			
ANR	3884610	CallExpression	IS_STATIC ( how_much )		3884604	0					
ANR	3884611	Callee	IS_STATIC		3884604	0					
ANR	3884612	Identifier	IS_STATIC		3884604	0					
ANR	3884613	ArgumentList	how_much		3884604	1					
ANR	3884614	Argument	how_much		3884604	0					
ANR	3884615	Identifier	how_much		3884604	0					
ANR	3884616	CallExpression	IS_PUBLIC ( how_much )		3884604	1					
ANR	3884617	Callee	IS_PUBLIC		3884604	0					
ANR	3884618	Identifier	IS_PUBLIC		3884604	0					
ANR	3884619	ArgumentList	how_much		3884604	1					
ANR	3884620	Argument	how_much		3884604	0					
ANR	3884621	Identifier	how_much		3884604	0					
ANR	3884622	CompoundStatement		2:50:51:51	3884604	1					
ANR	3884623	ExpressionStatement	"cp -> Assign ( ATTR_STARTD_IP_ADDR , daemonCore -> InfoCommandSinfulString ( ) )"	443:2:12249:12326	3884604	0	True				
ANR	3884624	CallExpression	"cp -> Assign ( ATTR_STARTD_IP_ADDR , daemonCore -> InfoCommandSinfulString ( ) )"		3884604	0					
ANR	3884625	Callee	cp -> Assign		3884604	0					
ANR	3884626	PtrMemberAccess	cp -> Assign		3884604	0					
ANR	3884627	Identifier	cp		3884604	0					
ANR	3884628	Identifier	Assign		3884604	1					
ANR	3884629	ArgumentList	ATTR_STARTD_IP_ADDR		3884604	1					
ANR	3884630	Argument	ATTR_STARTD_IP_ADDR		3884604	0					
ANR	3884631	Identifier	ATTR_STARTD_IP_ADDR		3884604	0					
ANR	3884632	Argument	daemonCore -> InfoCommandSinfulString ( )		3884604	1					
ANR	3884633	CallExpression	daemonCore -> InfoCommandSinfulString ( )		3884604	0					
ANR	3884634	Callee	daemonCore -> InfoCommandSinfulString		3884604	0					
ANR	3884635	PtrMemberAccess	daemonCore -> InfoCommandSinfulString		3884604	0					
ANR	3884636	Identifier	daemonCore		3884604	0					
ANR	3884637	Identifier	InfoCommandSinfulString		3884604	1					
ANR	3884638	ArgumentList			3884604	1					
ANR	3884639	ExpressionStatement	"cp -> Assign ( ATTR_ARCH , m_arch )"	446:8:12337:12368	3884604	1	True				
ANR	3884640	CallExpression	"cp -> Assign ( ATTR_ARCH , m_arch )"		3884604	0					
ANR	3884641	Callee	cp -> Assign		3884604	0					
ANR	3884642	PtrMemberAccess	cp -> Assign		3884604	0					
ANR	3884643	Identifier	cp		3884604	0					
ANR	3884644	Identifier	Assign		3884604	1					
ANR	3884645	ArgumentList	ATTR_ARCH		3884604	1					
ANR	3884646	Argument	ATTR_ARCH		3884604	0					
ANR	3884647	Identifier	ATTR_ARCH		3884604	0					
ANR	3884648	Argument	m_arch		3884604	1					
ANR	3884649	Identifier	m_arch		3884604	0					
ANR	3884650	ExpressionStatement	"cp -> Assign ( ATTR_OPSYS , m_opsys )"	448:2:12373:12406	3884604	2	True				
ANR	3884651	CallExpression	"cp -> Assign ( ATTR_OPSYS , m_opsys )"		3884604	0					
ANR	3884652	Callee	cp -> Assign		3884604	0					
ANR	3884653	PtrMemberAccess	cp -> Assign		3884604	0					
ANR	3884654	Identifier	cp		3884604	0					
ANR	3884655	Identifier	Assign		3884604	1					
ANR	3884656	ArgumentList	ATTR_OPSYS		3884604	1					
ANR	3884657	Argument	ATTR_OPSYS		3884604	0					
ANR	3884658	Identifier	ATTR_OPSYS		3884604	0					
ANR	3884659	Argument	m_opsys		3884604	1					
ANR	3884660	Identifier	m_opsys		3884604	0					
ANR	3884661	IfStatement	if ( m_opsysver )		3884604	3					
ANR	3884662	Condition	m_opsysver	449:12:12420:12429	3884604	0	True				
ANR	3884663	Identifier	m_opsysver		3884604	0					
ANR	3884664	CompoundStatement		11:24:260:260	3884604	1					
ANR	3884665	ExpressionStatement	"cp -> Assign ( ATTR_OPSYSVER , m_opsysver )"	450:3:12437:12476	3884604	0	True				
ANR	3884666	CallExpression	"cp -> Assign ( ATTR_OPSYSVER , m_opsysver )"		3884604	0					
ANR	3884667	Callee	cp -> Assign		3884604	0					
ANR	3884668	PtrMemberAccess	cp -> Assign		3884604	0					
ANR	3884669	Identifier	cp		3884604	0					
ANR	3884670	Identifier	Assign		3884604	1					
ANR	3884671	ArgumentList	ATTR_OPSYSVER		3884604	1					
ANR	3884672	Argument	ATTR_OPSYSVER		3884604	0					
ANR	3884673	Identifier	ATTR_OPSYSVER		3884604	0					
ANR	3884674	Argument	m_opsysver		3884604	1					
ANR	3884675	Identifier	m_opsysver		3884604	0					
ANR	3884676	ExpressionStatement	"cp -> Assign ( ATTR_OPSYS_AND_VER , m_opsys_and_ver )"	452:2:12490:12539	3884604	4	True				
ANR	3884677	CallExpression	"cp -> Assign ( ATTR_OPSYS_AND_VER , m_opsys_and_ver )"		3884604	0					
ANR	3884678	Callee	cp -> Assign		3884604	0					
ANR	3884679	PtrMemberAccess	cp -> Assign		3884604	0					
ANR	3884680	Identifier	cp		3884604	0					
ANR	3884681	Identifier	Assign		3884604	1					
ANR	3884682	ArgumentList	ATTR_OPSYS_AND_VER		3884604	1					
ANR	3884683	Argument	ATTR_OPSYS_AND_VER		3884604	0					
ANR	3884684	Identifier	ATTR_OPSYS_AND_VER		3884604	0					
ANR	3884685	Argument	m_opsys_and_ver		3884604	1					
ANR	3884686	Identifier	m_opsys_and_ver		3884604	0					
ANR	3884687	ExpressionStatement	"cp -> Assign ( ATTR_UID_DOMAIN , m_uid_domain )"	454:2:12544:12587	3884604	5	True				
ANR	3884688	CallExpression	"cp -> Assign ( ATTR_UID_DOMAIN , m_uid_domain )"		3884604	0					
ANR	3884689	Callee	cp -> Assign		3884604	0					
ANR	3884690	PtrMemberAccess	cp -> Assign		3884604	0					
ANR	3884691	Identifier	cp		3884604	0					
ANR	3884692	Identifier	Assign		3884604	1					
ANR	3884693	ArgumentList	ATTR_UID_DOMAIN		3884604	1					
ANR	3884694	Argument	ATTR_UID_DOMAIN		3884604	0					
ANR	3884695	Identifier	ATTR_UID_DOMAIN		3884604	0					
ANR	3884696	Argument	m_uid_domain		3884604	1					
ANR	3884697	Identifier	m_uid_domain		3884604	0					
ANR	3884698	ExpressionStatement	"cp -> Assign ( ATTR_FILE_SYSTEM_DOMAIN , m_filesystem_domain )"	456:2:12592:12650	3884604	6	True				
ANR	3884699	CallExpression	"cp -> Assign ( ATTR_FILE_SYSTEM_DOMAIN , m_filesystem_domain )"		3884604	0					
ANR	3884700	Callee	cp -> Assign		3884604	0					
ANR	3884701	PtrMemberAccess	cp -> Assign		3884604	0					
ANR	3884702	Identifier	cp		3884604	0					
ANR	3884703	Identifier	Assign		3884604	1					
ANR	3884704	ArgumentList	ATTR_FILE_SYSTEM_DOMAIN		3884604	1					
ANR	3884705	Argument	ATTR_FILE_SYSTEM_DOMAIN		3884604	0					
ANR	3884706	Identifier	ATTR_FILE_SYSTEM_DOMAIN		3884604	0					
ANR	3884707	Argument	m_filesystem_domain		3884604	1					
ANR	3884708	Identifier	m_filesystem_domain		3884604	0					
ANR	3884709	ExpressionStatement	"cp -> Assign ( ATTR_HAS_IO_PROXY , true )"	458:2:12655:12692	3884604	7	True				
ANR	3884710	CallExpression	"cp -> Assign ( ATTR_HAS_IO_PROXY , true )"		3884604	0					
ANR	3884711	Callee	cp -> Assign		3884604	0					
ANR	3884712	PtrMemberAccess	cp -> Assign		3884604	0					
ANR	3884713	Identifier	cp		3884604	0					
ANR	3884714	Identifier	Assign		3884604	1					
ANR	3884715	ArgumentList	ATTR_HAS_IO_PROXY		3884604	1					
ANR	3884716	Argument	ATTR_HAS_IO_PROXY		3884604	0					
ANR	3884717	Identifier	ATTR_HAS_IO_PROXY		3884604	0					
ANR	3884718	Argument	true		3884604	1					
ANR	3884719	Identifier	true		3884604	0					
ANR	3884720	ExpressionStatement	"cp -> Assign ( ATTR_CHECKPOINT_PLATFORM , m_ckptpltfrm )"	460:2:12697:12749	3884604	8	True				
ANR	3884721	CallExpression	"cp -> Assign ( ATTR_CHECKPOINT_PLATFORM , m_ckptpltfrm )"		3884604	0					
ANR	3884722	Callee	cp -> Assign		3884604	0					
ANR	3884723	PtrMemberAccess	cp -> Assign		3884604	0					
ANR	3884724	Identifier	cp		3884604	0					
ANR	3884725	Identifier	Assign		3884604	1					
ANR	3884726	ArgumentList	ATTR_CHECKPOINT_PLATFORM		3884604	1					
ANR	3884727	Argument	ATTR_CHECKPOINT_PLATFORM		3884604	0					
ANR	3884728	Identifier	ATTR_CHECKPOINT_PLATFORM		3884604	0					
ANR	3884729	Argument	m_ckptpltfrm		3884604	1					
ANR	3884730	Identifier	m_ckptpltfrm		3884604	0					
ANR	3884731	IfStatement	if ( m_got_windows_version_info )		3884604	9					
ANR	3884732	Condition	m_got_windows_version_info	464:7:12826:12851	3884604	0	True				
ANR	3884733	Identifier	m_got_windows_version_info		3884604	0					
ANR	3884734	CompoundStatement		26:36:683:683	3884604	1					
ANR	3884735	ExpressionStatement	"cp -> Assign ( ATTR_WINDOWS_MAJOR_VERSION , ( int ) m_window_version_info . dwMajorVersion )"	465:3:12860:12948	3884604	0	True				
ANR	3884736	CallExpression	"cp -> Assign ( ATTR_WINDOWS_MAJOR_VERSION , ( int ) m_window_version_info . dwMajorVersion )"		3884604	0					
ANR	3884737	Callee	cp -> Assign		3884604	0					
ANR	3884738	PtrMemberAccess	cp -> Assign		3884604	0					
ANR	3884739	Identifier	cp		3884604	0					
ANR	3884740	Identifier	Assign		3884604	1					
ANR	3884741	ArgumentList	ATTR_WINDOWS_MAJOR_VERSION		3884604	1					
ANR	3884742	Argument	ATTR_WINDOWS_MAJOR_VERSION		3884604	0					
ANR	3884743	Identifier	ATTR_WINDOWS_MAJOR_VERSION		3884604	0					
ANR	3884744	Argument	( int ) m_window_version_info . dwMajorVersion		3884604	1					
ANR	3884745	CastExpression	( int ) m_window_version_info . dwMajorVersion		3884604	0					
ANR	3884746	CastTarget	int		3884604	0					
ANR	3884747	MemberAccess	m_window_version_info . dwMajorVersion		3884604	1					
ANR	3884748	Identifier	m_window_version_info		3884604	0					
ANR	3884749	Identifier	dwMajorVersion		3884604	1					
ANR	3884750	ExpressionStatement	"cp -> Assign ( ATTR_WINDOWS_MINOR_VERSION , ( int ) m_window_version_info . dwMinorVersion )"	467:3:12953:13041	3884604	1	True				
ANR	3884751	CallExpression	"cp -> Assign ( ATTR_WINDOWS_MINOR_VERSION , ( int ) m_window_version_info . dwMinorVersion )"		3884604	0					
ANR	3884752	Callee	cp -> Assign		3884604	0					
ANR	3884753	PtrMemberAccess	cp -> Assign		3884604	0					
ANR	3884754	Identifier	cp		3884604	0					
ANR	3884755	Identifier	Assign		3884604	1					
ANR	3884756	ArgumentList	ATTR_WINDOWS_MINOR_VERSION		3884604	1					
ANR	3884757	Argument	ATTR_WINDOWS_MINOR_VERSION		3884604	0					
ANR	3884758	Identifier	ATTR_WINDOWS_MINOR_VERSION		3884604	0					
ANR	3884759	Argument	( int ) m_window_version_info . dwMinorVersion		3884604	1					
ANR	3884760	CastExpression	( int ) m_window_version_info . dwMinorVersion		3884604	0					
ANR	3884761	CastTarget	int		3884604	0					
ANR	3884762	MemberAccess	m_window_version_info . dwMinorVersion		3884604	1					
ANR	3884763	Identifier	m_window_version_info		3884604	0					
ANR	3884764	Identifier	dwMinorVersion		3884604	1					
ANR	3884765	ExpressionStatement	"cp -> Assign ( ATTR_WINDOWS_BUILD_NUMBER , ( int ) m_window_version_info . dwBuildNumber )"	469:3:13046:13132	3884604	2	True				
ANR	3884766	CallExpression	"cp -> Assign ( ATTR_WINDOWS_BUILD_NUMBER , ( int ) m_window_version_info . dwBuildNumber )"		3884604	0					
ANR	3884767	Callee	cp -> Assign		3884604	0					
ANR	3884768	PtrMemberAccess	cp -> Assign		3884604	0					
ANR	3884769	Identifier	cp		3884604	0					
ANR	3884770	Identifier	Assign		3884604	1					
ANR	3884771	ArgumentList	ATTR_WINDOWS_BUILD_NUMBER		3884604	1					
ANR	3884772	Argument	ATTR_WINDOWS_BUILD_NUMBER		3884604	0					
ANR	3884773	Identifier	ATTR_WINDOWS_BUILD_NUMBER		3884604	0					
ANR	3884774	Argument	( int ) m_window_version_info . dwBuildNumber		3884604	1					
ANR	3884775	CastExpression	( int ) m_window_version_info . dwBuildNumber		3884604	0					
ANR	3884776	CastTarget	int		3884604	0					
ANR	3884777	MemberAccess	m_window_version_info . dwBuildNumber		3884604	1					
ANR	3884778	Identifier	m_window_version_info		3884604	0					
ANR	3884779	Identifier	dwBuildNumber		3884604	1					
ANR	3884780	IfStatement	if ( sizeof ( OSVERSIONINFOEX ) == m_window_version_info . dwOSVersionInfoSize )		3884604	3					
ANR	3884781	Condition	sizeof ( OSVERSIONINFOEX ) == m_window_version_info . dwOSVersionInfoSize	473:8:13233:13309	3884604	0	True				
ANR	3884782	EqualityExpression	sizeof ( OSVERSIONINFOEX ) == m_window_version_info . dwOSVersionInfoSize		3884604	0		==			
ANR	3884783	SizeofExpression	sizeof ( OSVERSIONINFOEX )		3884604	0					
ANR	3884784	Sizeof	sizeof		3884604	0					
ANR	3884785	SizeofOperand	OSVERSIONINFOEX		3884604	1					
ANR	3884786	MemberAccess	m_window_version_info . dwOSVersionInfoSize		3884604	1					
ANR	3884787	Identifier	m_window_version_info		3884604	0					
ANR	3884788	Identifier	dwOSVersionInfoSize		3884604	1					
ANR	3884789	CompoundStatement		36:49:1141:1141	3884604	1					
ANR	3884790	ExpressionStatement	"cp -> Assign ( ATTR_WINDOWS_SERVICE_PACK_MAJOR , ( int ) m_window_version_info . wServicePackMajor )"	475:4:13319:13416	3884604	0	True				
ANR	3884791	CallExpression	"cp -> Assign ( ATTR_WINDOWS_SERVICE_PACK_MAJOR , ( int ) m_window_version_info . wServicePackMajor )"		3884604	0					
ANR	3884792	Callee	cp -> Assign		3884604	0					
ANR	3884793	PtrMemberAccess	cp -> Assign		3884604	0					
ANR	3884794	Identifier	cp		3884604	0					
ANR	3884795	Identifier	Assign		3884604	1					
ANR	3884796	ArgumentList	ATTR_WINDOWS_SERVICE_PACK_MAJOR		3884604	1					
ANR	3884797	Argument	ATTR_WINDOWS_SERVICE_PACK_MAJOR		3884604	0					
ANR	3884798	Identifier	ATTR_WINDOWS_SERVICE_PACK_MAJOR		3884604	0					
ANR	3884799	Argument	( int ) m_window_version_info . wServicePackMajor		3884604	1					
ANR	3884800	CastExpression	( int ) m_window_version_info . wServicePackMajor		3884604	0					
ANR	3884801	CastTarget	int		3884604	0					
ANR	3884802	MemberAccess	m_window_version_info . wServicePackMajor		3884604	1					
ANR	3884803	Identifier	m_window_version_info		3884604	0					
ANR	3884804	Identifier	wServicePackMajor		3884604	1					
ANR	3884805	ExpressionStatement	"cp -> Assign ( ATTR_WINDOWS_SERVICE_PACK_MINOR , ( int ) m_window_version_info . wServicePackMinor )"	477:4:13422:13519	3884604	1	True				
ANR	3884806	CallExpression	"cp -> Assign ( ATTR_WINDOWS_SERVICE_PACK_MINOR , ( int ) m_window_version_info . wServicePackMinor )"		3884604	0					
ANR	3884807	Callee	cp -> Assign		3884604	0					
ANR	3884808	PtrMemberAccess	cp -> Assign		3884604	0					
ANR	3884809	Identifier	cp		3884604	0					
ANR	3884810	Identifier	Assign		3884604	1					
ANR	3884811	ArgumentList	ATTR_WINDOWS_SERVICE_PACK_MINOR		3884604	1					
ANR	3884812	Argument	ATTR_WINDOWS_SERVICE_PACK_MINOR		3884604	0					
ANR	3884813	Identifier	ATTR_WINDOWS_SERVICE_PACK_MINOR		3884604	0					
ANR	3884814	Argument	( int ) m_window_version_info . wServicePackMinor		3884604	1					
ANR	3884815	CastExpression	( int ) m_window_version_info . wServicePackMinor		3884604	0					
ANR	3884816	CastTarget	int		3884604	0					
ANR	3884817	MemberAccess	m_window_version_info . wServicePackMinor		3884604	1					
ANR	3884818	Identifier	m_window_version_info		3884604	0					
ANR	3884819	Identifier	wServicePackMinor		3884604	1					
ANR	3884820	ExpressionStatement	"cp -> Assign ( ATTR_WINDOWS_PRODUCT_TYPE , ( int ) m_window_version_info . wProductType )"	479:4:13525:13611	3884604	2	True				
ANR	3884821	CallExpression	"cp -> Assign ( ATTR_WINDOWS_PRODUCT_TYPE , ( int ) m_window_version_info . wProductType )"		3884604	0					
ANR	3884822	Callee	cp -> Assign		3884604	0					
ANR	3884823	PtrMemberAccess	cp -> Assign		3884604	0					
ANR	3884824	Identifier	cp		3884604	0					
ANR	3884825	Identifier	Assign		3884604	1					
ANR	3884826	ArgumentList	ATTR_WINDOWS_PRODUCT_TYPE		3884604	1					
ANR	3884827	Argument	ATTR_WINDOWS_PRODUCT_TYPE		3884604	0					
ANR	3884828	Identifier	ATTR_WINDOWS_PRODUCT_TYPE		3884604	0					
ANR	3884829	Argument	( int ) m_window_version_info . wProductType		3884604	1					
ANR	3884830	CastExpression	( int ) m_window_version_info . wProductType		3884604	0					
ANR	3884831	CastTarget	int		3884604	0					
ANR	3884832	MemberAccess	m_window_version_info . wProductType		3884604	1					
ANR	3884833	Identifier	m_window_version_info		3884604	0					
ANR	3884834	Identifier	wProductType		3884604	1					
ANR	3884835	IfStatement	"if ( param_boolean ( ""STARTD_PUBLISH_DOTNET"" , true ) )"		3884604	10					
ANR	3884836	Condition	"param_boolean ( ""STARTD_PUBLISH_DOTNET"" , true )"	489:11:13759:13802	3884604	0	True				
ANR	3884837	CallExpression	"param_boolean ( ""STARTD_PUBLISH_DOTNET"" , true )"		3884604	0					
ANR	3884838	Callee	param_boolean		3884604	0					
ANR	3884839	Identifier	param_boolean		3884604	0					
ANR	3884840	ArgumentList	"""STARTD_PUBLISH_DOTNET"""		3884604	1					
ANR	3884841	Argument	"""STARTD_PUBLISH_DOTNET"""		3884604	0					
ANR	3884842	PrimaryExpression	"""STARTD_PUBLISH_DOTNET"""		3884604	0					
ANR	3884843	Argument	true		3884604	1					
ANR	3884844	Identifier	true		3884604	0					
ANR	3884845	CompoundStatement		52:8:1641:1641	3884604	1					
ANR	3884846	IfStatement	if ( m_dot_Net_Versions )		3884604	0					
ANR	3884847	Condition	m_dot_Net_Versions	491:15:13830:13847	3884604	0	True				
ANR	3884848	Identifier	m_dot_Net_Versions		3884604	0					
ANR	3884849	ExpressionStatement	"cp -> Assign ( ATTR_DOTNET_VERSIONS , m_dot_Net_Versions )"	492:16:13866:13918	3884604	1	True				
ANR	3884850	CallExpression	"cp -> Assign ( ATTR_DOTNET_VERSIONS , m_dot_Net_Versions )"		3884604	0					
ANR	3884851	Callee	cp -> Assign		3884604	0					
ANR	3884852	PtrMemberAccess	cp -> Assign		3884604	0					
ANR	3884853	Identifier	cp		3884604	0					
ANR	3884854	Identifier	Assign		3884604	1					
ANR	3884855	ArgumentList	ATTR_DOTNET_VERSIONS		3884604	1					
ANR	3884856	Argument	ATTR_DOTNET_VERSIONS		3884604	0					
ANR	3884857	Identifier	ATTR_DOTNET_VERSIONS		3884604	0					
ANR	3884858	Argument	m_dot_Net_Versions		3884604	1					
ANR	3884859	Identifier	m_dot_Net_Versions		3884604	0					
ANR	3884860	ExpressionStatement	m_lst_static . Rewind ( )	498:2:14045:14066	3884604	11	True				
ANR	3884861	CallExpression	m_lst_static . Rewind ( )		3884604	0					
ANR	3884862	Callee	m_lst_static . Rewind		3884604	0					
ANR	3884863	MemberAccess	m_lst_static . Rewind		3884604	0					
ANR	3884864	Identifier	m_lst_static		3884604	0					
ANR	3884865	Identifier	Rewind		3884604	1					
ANR	3884866	ArgumentList			3884604	1					
ANR	3884867	WhileStatement	while ( AttribValue * pav = m_lst_static . Next ( ) )		3884604	12					
ANR	3884868	Condition	AttribValue * pav = m_lst_static . Next ( )	499:9:14077:14114	3884604	0	True				
ANR	3884869	AssignmentExpression	AttribValue * pav = m_lst_static . Next ( )		3884604	0		=			
ANR	3884870	MultiplicativeExpression	AttribValue * pav		3884604	0		*			
ANR	3884871	Identifier	AttribValue		3884604	0					
ANR	3884872	Identifier	pav		3884604	1					
ANR	3884873	CallExpression	m_lst_static . Next ( )		3884604	1					
ANR	3884874	Callee	m_lst_static . Next		3884604	0					
ANR	3884875	MemberAccess	m_lst_static . Next		3884604	0					
ANR	3884876	Identifier	m_lst_static		3884604	0					
ANR	3884877	Identifier	Next		3884604	1					
ANR	3884878	ArgumentList			3884604	1					
ANR	3884879	CompoundStatement		61:49:1945:1945	3884604	1					
ANR	3884880	IfStatement	if ( pav )		3884604	0					
ANR	3884881	Condition	pav	500:7:14126:14128	3884604	0	True				
ANR	3884882	Identifier	pav		3884604	0					
ANR	3884883	ExpressionStatement	pav -> AssignToClassAd ( cp )	500:12:14131:14155	3884604	1	True				
ANR	3884884	CallExpression	pav -> AssignToClassAd ( cp )		3884604	0					
ANR	3884885	Callee	pav -> AssignToClassAd		3884604	0					
ANR	3884886	PtrMemberAccess	pav -> AssignToClassAd		3884604	0					
ANR	3884887	Identifier	pav		3884604	0					
ANR	3884888	Identifier	AssignToClassAd		3884604	1					
ANR	3884889	ArgumentList	cp		3884604	1					
ANR	3884890	Argument	cp		3884604	0					
ANR	3884891	Identifier	cp		3884604	0					
ANR	3884892	IfStatement	if ( IS_UPDATE ( how_much ) || IS_PUBLIC ( how_much ) )		3884604	1					
ANR	3884893	Condition	IS_UPDATE ( how_much ) || IS_PUBLIC ( how_much )	559:5:15703:15744	3884604	0	True				
ANR	3884894	OrExpression	IS_UPDATE ( how_much ) || IS_PUBLIC ( how_much )		3884604	0		||			
ANR	3884895	CallExpression	IS_UPDATE ( how_much )		3884604	0					
ANR	3884896	Callee	IS_UPDATE		3884604	0					
ANR	3884897	Identifier	IS_UPDATE		3884604	0					
ANR	3884898	ArgumentList	how_much		3884604	1					
ANR	3884899	Argument	how_much		3884604	0					
ANR	3884900	Identifier	how_much		3884604	0					
ANR	3884901	CallExpression	IS_PUBLIC ( how_much )		3884604	1					
ANR	3884902	Callee	IS_PUBLIC		3884604	0					
ANR	3884903	Identifier	IS_PUBLIC		3884604	0					
ANR	3884904	ArgumentList	how_much		3884604	1					
ANR	3884905	Argument	how_much		3884604	0					
ANR	3884906	Identifier	how_much		3884604	0					
ANR	3884907	CompoundStatement		121:50:3576:3576	3884604	1					
ANR	3884908	ExpressionStatement	"cp -> Assign ( ATTR_TOTAL_VIRTUAL_MEMORY , ( int ) m_virt_mem )"	561:2:15753:15809	3884604	0	True				
ANR	3884909	CallExpression	"cp -> Assign ( ATTR_TOTAL_VIRTUAL_MEMORY , ( int ) m_virt_mem )"		3884604	0					
ANR	3884910	Callee	cp -> Assign		3884604	0					
ANR	3884911	PtrMemberAccess	cp -> Assign		3884604	0					
ANR	3884912	Identifier	cp		3884604	0					
ANR	3884913	Identifier	Assign		3884604	1					
ANR	3884914	ArgumentList	ATTR_TOTAL_VIRTUAL_MEMORY		3884604	1					
ANR	3884915	Argument	ATTR_TOTAL_VIRTUAL_MEMORY		3884604	0					
ANR	3884916	Identifier	ATTR_TOTAL_VIRTUAL_MEMORY		3884604	0					
ANR	3884917	Argument	( int ) m_virt_mem		3884604	1					
ANR	3884918	CastExpression	( int ) m_virt_mem		3884604	0					
ANR	3884919	CastTarget	int		3884604	0					
ANR	3884920	Identifier	m_virt_mem		3884604	1					
ANR	3884921	ExpressionStatement	"cp -> Assign ( ATTR_TOTAL_CPUS , m_num_cpus )"	563:2:15814:15855	3884604	1	True				
ANR	3884922	CallExpression	"cp -> Assign ( ATTR_TOTAL_CPUS , m_num_cpus )"		3884604	0					
ANR	3884923	Callee	cp -> Assign		3884604	0					
ANR	3884924	PtrMemberAccess	cp -> Assign		3884604	0					
ANR	3884925	Identifier	cp		3884604	0					
ANR	3884926	Identifier	Assign		3884604	1					
ANR	3884927	ArgumentList	ATTR_TOTAL_CPUS		3884604	1					
ANR	3884928	Argument	ATTR_TOTAL_CPUS		3884604	0					
ANR	3884929	Identifier	ATTR_TOTAL_CPUS		3884604	0					
ANR	3884930	Argument	m_num_cpus		3884604	1					
ANR	3884931	Identifier	m_num_cpus		3884604	0					
ANR	3884932	ExpressionStatement	"cp -> Assign ( ATTR_TOTAL_MEMORY , m_phys_mem )"	565:2:15860:15903	3884604	2	True				
ANR	3884933	CallExpression	"cp -> Assign ( ATTR_TOTAL_MEMORY , m_phys_mem )"		3884604	0					
ANR	3884934	Callee	cp -> Assign		3884604	0					
ANR	3884935	PtrMemberAccess	cp -> Assign		3884604	0					
ANR	3884936	Identifier	cp		3884604	0					
ANR	3884937	Identifier	Assign		3884604	1					
ANR	3884938	ArgumentList	ATTR_TOTAL_MEMORY		3884604	1					
ANR	3884939	Argument	ATTR_TOTAL_MEMORY		3884604	0					
ANR	3884940	Identifier	ATTR_TOTAL_MEMORY		3884604	0					
ANR	3884941	Argument	m_phys_mem		3884604	1					
ANR	3884942	Identifier	m_phys_mem		3884604	0					
ANR	3884943	IfStatement	if ( m_kflops > 0 )		3884604	3					
ANR	3884944	Condition	m_kflops > 0	569:7:16021:16032	3884604	0	True				
ANR	3884945	RelationalExpression	m_kflops > 0		3884604	0		>			
ANR	3884946	Identifier	m_kflops		3884604	0					
ANR	3884947	PrimaryExpression	0		3884604	1					
ANR	3884948	CompoundStatement		131:22:3864:3864	3884604	1					
ANR	3884949	ExpressionStatement	"cp -> Assign ( ATTR_KFLOPS , m_kflops )"	570:3:16041:16076	3884604	0	True				
ANR	3884950	CallExpression	"cp -> Assign ( ATTR_KFLOPS , m_kflops )"		3884604	0					
ANR	3884951	Callee	cp -> Assign		3884604	0					
ANR	3884952	PtrMemberAccess	cp -> Assign		3884604	0					
ANR	3884953	Identifier	cp		3884604	0					
ANR	3884954	Identifier	Assign		3884604	1					
ANR	3884955	ArgumentList	ATTR_KFLOPS		3884604	1					
ANR	3884956	Argument	ATTR_KFLOPS		3884604	0					
ANR	3884957	Identifier	ATTR_KFLOPS		3884604	0					
ANR	3884958	Argument	m_kflops		3884604	1					
ANR	3884959	Identifier	m_kflops		3884604	0					
ANR	3884960	IfStatement	if ( m_mips > 0 )		3884604	4					
ANR	3884961	Condition	m_mips > 0	572:7:16089:16098	3884604	0	True				
ANR	3884962	RelationalExpression	m_mips > 0		3884604	0		>			
ANR	3884963	Identifier	m_mips		3884604	0					
ANR	3884964	PrimaryExpression	0		3884604	1					
ANR	3884965	CompoundStatement		134:20:3930:3930	3884604	1					
ANR	3884966	ExpressionStatement	"cp -> Assign ( ATTR_MIPS , m_mips )"	573:3:16107:16138	3884604	0	True				
ANR	3884967	CallExpression	"cp -> Assign ( ATTR_MIPS , m_mips )"		3884604	0					
ANR	3884968	Callee	cp -> Assign		3884604	0					
ANR	3884969	PtrMemberAccess	cp -> Assign		3884604	0					
ANR	3884970	Identifier	cp		3884604	0					
ANR	3884971	Identifier	Assign		3884604	1					
ANR	3884972	ArgumentList	ATTR_MIPS		3884604	1					
ANR	3884973	Argument	ATTR_MIPS		3884604	0					
ANR	3884974	Identifier	ATTR_MIPS		3884604	0					
ANR	3884975	Argument	m_mips		3884604	1					
ANR	3884976	Identifier	m_mips		3884604	0					
ANR	3884977	IfStatement	if ( m_local_credd != NULL )		3884604	5					
ANR	3884978	Condition	m_local_credd != NULL	577:7:16171:16191	3884604	0	True				
ANR	3884979	EqualityExpression	m_local_credd != NULL		3884604	0		!=			
ANR	3884980	Identifier	m_local_credd		3884604	0					
ANR	3884981	Identifier	NULL		3884604	1					
ANR	3884982	CompoundStatement		139:31:4023:4023	3884604	1					
ANR	3884983	ExpressionStatement	"cp -> Assign ( ATTR_LOCAL_CREDD , m_local_credd )"	578:3:16200:16243	3884604	0	True				
ANR	3884984	CallExpression	"cp -> Assign ( ATTR_LOCAL_CREDD , m_local_credd )"		3884604	0					
ANR	3884985	Callee	cp -> Assign		3884604	0					
ANR	3884986	PtrMemberAccess	cp -> Assign		3884604	0					
ANR	3884987	Identifier	cp		3884604	0					
ANR	3884988	Identifier	Assign		3884604	1					
ANR	3884989	ArgumentList	ATTR_LOCAL_CREDD		3884604	1					
ANR	3884990	Argument	ATTR_LOCAL_CREDD		3884604	0					
ANR	3884991	Identifier	ATTR_LOCAL_CREDD		3884604	0					
ANR	3884992	Argument	m_local_credd		3884604	1					
ANR	3884993	Identifier	m_local_credd		3884604	0					
ANR	3884994	IfStatement	if ( IS_UPDATE ( how_much ) || IS_TIMEOUT ( how_much ) )		3884604	2					
ANR	3884995	Condition	IS_UPDATE ( how_much ) || IS_TIMEOUT ( how_much )	584:5:16331:16373	3884604	0	True				
ANR	3884996	OrExpression	IS_UPDATE ( how_much ) || IS_TIMEOUT ( how_much )		3884604	0		||			
ANR	3884997	CallExpression	IS_UPDATE ( how_much )		3884604	0					
ANR	3884998	Callee	IS_UPDATE		3884604	0					
ANR	3884999	Identifier	IS_UPDATE		3884604	0					
ANR	3885000	ArgumentList	how_much		3884604	1					
ANR	3885001	Argument	how_much		3884604	0					
ANR	3885002	Identifier	how_much		3884604	0					
ANR	3885003	CallExpression	IS_TIMEOUT ( how_much )		3884604	1					
ANR	3885004	Callee	IS_TIMEOUT		3884604	0					
ANR	3885005	Identifier	IS_TIMEOUT		3884604	0					
ANR	3885006	ArgumentList	how_much		3884604	1					
ANR	3885007	Argument	how_much		3884604	0					
ANR	3885008	Identifier	how_much		3884604	0					
ANR	3885009	CompoundStatement		146:51:4205:4205	3884604	1					
ANR	3885010	ExpressionStatement	"cp -> Assign ( ATTR_LAST_BENCHMARK , ( unsigned ) m_last_benchmark )"	585:2:16381:16442	3884604	0	True				
ANR	3885011	CallExpression	"cp -> Assign ( ATTR_LAST_BENCHMARK , ( unsigned ) m_last_benchmark )"		3884604	0					
ANR	3885012	Callee	cp -> Assign		3884604	0					
ANR	3885013	PtrMemberAccess	cp -> Assign		3884604	0					
ANR	3885014	Identifier	cp		3884604	0					
ANR	3885015	Identifier	Assign		3884604	1					
ANR	3885016	ArgumentList	ATTR_LAST_BENCHMARK		3884604	1					
ANR	3885017	Argument	ATTR_LAST_BENCHMARK		3884604	0					
ANR	3885018	Identifier	ATTR_LAST_BENCHMARK		3884604	0					
ANR	3885019	Argument	( unsigned ) m_last_benchmark		3884604	1					
ANR	3885020	CastExpression	( unsigned ) m_last_benchmark		3884604	0					
ANR	3885021	CastTarget	unsigned		3884604	0					
ANR	3885022	Identifier	m_last_benchmark		3884604	1					
ANR	3885023	IfStatement	if ( IS_TIMEOUT ( how_much ) || IS_PUBLIC ( how_much ) )		3884604	3					
ANR	3885024	Condition	IS_TIMEOUT ( how_much ) || IS_PUBLIC ( how_much )	589:5:16454:16496	3884604	0	True				
ANR	3885025	OrExpression	IS_TIMEOUT ( how_much ) || IS_PUBLIC ( how_much )		3884604	0		||			
ANR	3885026	CallExpression	IS_TIMEOUT ( how_much )		3884604	0					
ANR	3885027	Callee	IS_TIMEOUT		3884604	0					
ANR	3885028	Identifier	IS_TIMEOUT		3884604	0					
ANR	3885029	ArgumentList	how_much		3884604	1					
ANR	3885030	Argument	how_much		3884604	0					
ANR	3885031	Identifier	how_much		3884604	0					
ANR	3885032	CallExpression	IS_PUBLIC ( how_much )		3884604	1					
ANR	3885033	Callee	IS_PUBLIC		3884604	0					
ANR	3885034	Identifier	IS_PUBLIC		3884604	0					
ANR	3885035	ArgumentList	how_much		3884604	1					
ANR	3885036	Argument	how_much		3884604	0					
ANR	3885037	Identifier	how_much		3884604	0					
ANR	3885038	CompoundStatement		151:51:4328:4328	3884604	1					
ANR	3885039	ExpressionStatement	"cp -> Assign ( ATTR_TOTAL_LOAD_AVG , rint ( m_load * 100 ) / 100.0 )"	591:2:16505:16565	3884604	0	True				
ANR	3885040	CallExpression	"cp -> Assign ( ATTR_TOTAL_LOAD_AVG , rint ( m_load * 100 ) / 100.0 )"		3884604	0					
ANR	3885041	Callee	cp -> Assign		3884604	0					
ANR	3885042	PtrMemberAccess	cp -> Assign		3884604	0					
ANR	3885043	Identifier	cp		3884604	0					
ANR	3885044	Identifier	Assign		3884604	1					
ANR	3885045	ArgumentList	ATTR_TOTAL_LOAD_AVG		3884604	1					
ANR	3885046	Argument	ATTR_TOTAL_LOAD_AVG		3884604	0					
ANR	3885047	Identifier	ATTR_TOTAL_LOAD_AVG		3884604	0					
ANR	3885048	Argument	rint ( m_load * 100 ) / 100.0		3884604	1					
ANR	3885049	MultiplicativeExpression	rint ( m_load * 100 ) / 100.0		3884604	0		/			
ANR	3885050	CallExpression	rint ( m_load * 100 )		3884604	0					
ANR	3885051	Callee	rint		3884604	0					
ANR	3885052	Identifier	rint		3884604	0					
ANR	3885053	ArgumentList	m_load * 100		3884604	1					
ANR	3885054	Argument	m_load * 100		3884604	0					
ANR	3885055	MultiplicativeExpression	m_load * 100		3884604	0		*			
ANR	3885056	Identifier	m_load		3884604	0					
ANR	3885057	PrimaryExpression	100		3884604	1					
ANR	3885058	PrimaryExpression	100.0		3884604	1					
ANR	3885059	ExpressionStatement	"cp -> Assign ( ATTR_TOTAL_CONDOR_LOAD_AVG , rint ( m_condor_load * 100 ) / 100.0 )"	593:2:16572:16651	3884604	1	True				
ANR	3885060	CallExpression	"cp -> Assign ( ATTR_TOTAL_CONDOR_LOAD_AVG , rint ( m_condor_load * 100 ) / 100.0 )"		3884604	0					
ANR	3885061	Callee	cp -> Assign		3884604	0					
ANR	3885062	PtrMemberAccess	cp -> Assign		3884604	0					
ANR	3885063	Identifier	cp		3884604	0					
ANR	3885064	Identifier	Assign		3884604	1					
ANR	3885065	ArgumentList	ATTR_TOTAL_CONDOR_LOAD_AVG		3884604	1					
ANR	3885066	Argument	ATTR_TOTAL_CONDOR_LOAD_AVG		3884604	0					
ANR	3885067	Identifier	ATTR_TOTAL_CONDOR_LOAD_AVG		3884604	0					
ANR	3885068	Argument	rint ( m_condor_load * 100 ) / 100.0		3884604	1					
ANR	3885069	MultiplicativeExpression	rint ( m_condor_load * 100 ) / 100.0		3884604	0		/			
ANR	3885070	CallExpression	rint ( m_condor_load * 100 )		3884604	0					
ANR	3885071	Callee	rint		3884604	0					
ANR	3885072	Identifier	rint		3884604	0					
ANR	3885073	ArgumentList	m_condor_load * 100		3884604	1					
ANR	3885074	Argument	m_condor_load * 100		3884604	0					
ANR	3885075	MultiplicativeExpression	m_condor_load * 100		3884604	0		*			
ANR	3885076	Identifier	m_condor_load		3884604	0					
ANR	3885077	PrimaryExpression	100		3884604	1					
ANR	3885078	PrimaryExpression	100.0		3884604	1					
ANR	3885079	ExpressionStatement	"cp -> Assign ( ATTR_CLOCK_MIN , m_clock_min )"	596:2:16658:16699	3884604	2	True				
ANR	3885080	CallExpression	"cp -> Assign ( ATTR_CLOCK_MIN , m_clock_min )"		3884604	0					
ANR	3885081	Callee	cp -> Assign		3884604	0					
ANR	3885082	PtrMemberAccess	cp -> Assign		3884604	0					
ANR	3885083	Identifier	cp		3884604	0					
ANR	3885084	Identifier	Assign		3884604	1					
ANR	3885085	ArgumentList	ATTR_CLOCK_MIN		3884604	1					
ANR	3885086	Argument	ATTR_CLOCK_MIN		3884604	0					
ANR	3885087	Identifier	ATTR_CLOCK_MIN		3884604	0					
ANR	3885088	Argument	m_clock_min		3884604	1					
ANR	3885089	Identifier	m_clock_min		3884604	0					
ANR	3885090	ExpressionStatement	"cp -> Assign ( ATTR_CLOCK_DAY , m_clock_day )"	598:2:16704:16745	3884604	3	True				
ANR	3885091	CallExpression	"cp -> Assign ( ATTR_CLOCK_DAY , m_clock_day )"		3884604	0					
ANR	3885092	Callee	cp -> Assign		3884604	0					
ANR	3885093	PtrMemberAccess	cp -> Assign		3884604	0					
ANR	3885094	Identifier	cp		3884604	0					
ANR	3885095	Identifier	Assign		3884604	1					
ANR	3885096	ArgumentList	ATTR_CLOCK_DAY		3884604	1					
ANR	3885097	Argument	ATTR_CLOCK_DAY		3884604	0					
ANR	3885098	Identifier	ATTR_CLOCK_DAY		3884604	0					
ANR	3885099	Argument	m_clock_day		3884604	1					
ANR	3885100	Identifier	m_clock_day		3884604	0					
ANR	3885101	ExpressionStatement	m_lst_dynamic . Rewind ( )	600:2:16750:16772	3884604	4	True				
ANR	3885102	CallExpression	m_lst_dynamic . Rewind ( )		3884604	0					
ANR	3885103	Callee	m_lst_dynamic . Rewind		3884604	0					
ANR	3885104	MemberAccess	m_lst_dynamic . Rewind		3884604	0					
ANR	3885105	Identifier	m_lst_dynamic		3884604	0					
ANR	3885106	Identifier	Rewind		3884604	1					
ANR	3885107	ArgumentList			3884604	1					
ANR	3885108	WhileStatement	while ( AttribValue * pav = m_lst_dynamic . Next ( ) )		3884604	5					
ANR	3885109	Condition	AttribValue * pav = m_lst_dynamic . Next ( )	601:9:16783:16821	3884604	0	True				
ANR	3885110	AssignmentExpression	AttribValue * pav = m_lst_dynamic . Next ( )		3884604	0		=			
ANR	3885111	MultiplicativeExpression	AttribValue * pav		3884604	0		*			
ANR	3885112	Identifier	AttribValue		3884604	0					
ANR	3885113	Identifier	pav		3884604	1					
ANR	3885114	CallExpression	m_lst_dynamic . Next ( )		3884604	1					
ANR	3885115	Callee	m_lst_dynamic . Next		3884604	0					
ANR	3885116	MemberAccess	m_lst_dynamic . Next		3884604	0					
ANR	3885117	Identifier	m_lst_dynamic		3884604	0					
ANR	3885118	Identifier	Next		3884604	1					
ANR	3885119	ArgumentList			3884604	1					
ANR	3885120	CompoundStatement		163:51:4653:4653	3884604	1					
ANR	3885121	IfStatement	if ( pav )		3884604	0					
ANR	3885122	Condition	pav	602:7:16834:16836	3884604	0	True				
ANR	3885123	Identifier	pav		3884604	0					
ANR	3885124	ExpressionStatement	pav -> AssignToClassAd ( cp )	602:12:16839:16863	3884604	1	True				
ANR	3885125	CallExpression	pav -> AssignToClassAd ( cp )		3884604	0					
ANR	3885126	Callee	pav -> AssignToClassAd		3884604	0					
ANR	3885127	PtrMemberAccess	pav -> AssignToClassAd		3884604	0					
ANR	3885128	Identifier	pav		3884604	0					
ANR	3885129	Identifier	AssignToClassAd		3884604	1					
ANR	3885130	ArgumentList	cp		3884604	1					
ANR	3885131	Argument	cp		3884604	0					
ANR	3885132	Identifier	cp		3884604	0					
ANR	3885133	ReturnType	void		3884604	1					
ANR	3885134	Identifier	MachAttributes :: publish		3884604	2					
ANR	3885135	ParameterList	"ClassAd * cp , amask_t how_much"		3884604	3					
ANR	3885136	Parameter	ClassAd * cp	438:25:12139:12149	3884604	0	True				
ANR	3885137	ParameterType	ClassAd *		3884604	0					
ANR	3885138	Identifier	cp		3884604	1					
ANR	3885139	Parameter	amask_t how_much	438:38:12152:12167	3884604	1	True				
ANR	3885140	ParameterType	amask_t		3884604	0					
ANR	3885141	Identifier	how_much		3884604	1					
ANR	3885142	CFGEntryNode	ENTRY		3884604		True				
ANR	3885143	CFGExitNode	EXIT		3884604		True				
ANR	3885144	Symbol	m_arch		3884604						
ANR	3885145	Symbol	m_kflops		3884604						
ANR	3885146	Symbol	m_ckptpltfrm		3884604						
ANR	3885147	Symbol	ATTR_KFLOPS		3884604						
ANR	3885148	Symbol	IS_TIMEOUT		3884604						
ANR	3885149	Symbol	m_local_credd		3884604						
ANR	3885150	Symbol	rint		3884604						
ANR	3885151	Symbol	ATTR_OPSYS		3884604						
ANR	3885152	Symbol	ATTR_WINDOWS_MINOR_VERSION		3884604						
ANR	3885153	Symbol	m_phys_mem		3884604						
ANR	3885154	Symbol	m_opsys		3884604						
ANR	3885155	Symbol	ATTR_OPSYS_AND_VER		3884604						
ANR	3885156	Symbol	ATTR_TOTAL_CONDOR_LOAD_AVG		3884604						
ANR	3885157	Symbol	m_window_version_info . dwBuildNumber		3884604						
ANR	3885158	Symbol	ATTR_CHECKPOINT_PLATFORM		3884604						
ANR	3885159	Symbol	m_window_version_info . dwMajorVersion		3884604						
ANR	3885160	Symbol	m_window_version_info . wProductType		3884604						
ANR	3885161	Symbol	AttribValue		3884604						
ANR	3885162	Symbol	m_load		3884604						
ANR	3885163	Symbol	ATTR_TOTAL_MEMORY		3884604						
ANR	3885164	Symbol	ATTR_CLOCK_MIN		3884604						
ANR	3885165	Symbol	m_lst_dynamic		3884604						
ANR	3885166	Symbol	m_got_windows_version_info		3884604						
ANR	3885167	Symbol	m_lst_dynamic . Next		3884604						
ANR	3885168	Symbol	NULL		3884604						
ANR	3885169	Symbol	ATTR_TOTAL_LOAD_AVG		3884604						
ANR	3885170	Symbol	pav		3884604						
ANR	3885171	Symbol	m_clock_min		3884604						
ANR	3885172	Symbol	ATTR_WINDOWS_MAJOR_VERSION		3884604						
ANR	3885173	Symbol	m_virt_mem		3884604						
ANR	3885174	Symbol	m_condor_load		3884604						
ANR	3885175	Symbol	param_boolean		3884604						
ANR	3885176	Symbol	ATTR_UID_DOMAIN		3884604						
ANR	3885177	Symbol	m_window_version_info . wServicePackMajor		3884604						
ANR	3885178	Symbol	ATTR_FILE_SYSTEM_DOMAIN		3884604						
ANR	3885179	Symbol	m_lst_static		3884604						
ANR	3885180	Symbol	* daemonCore		3884604						
ANR	3885181	Symbol	ATTR_MIPS		3884604						
ANR	3885182	Symbol	true		3884604						
ANR	3885183	Symbol	m_window_version_info		3884604						
ANR	3885184	Symbol	ATTR_STARTD_IP_ADDR		3884604						
ANR	3885185	Symbol	m_lst_static . Next		3884604						
ANR	3885186	Symbol	ATTR_OPSYSVER		3884604						
ANR	3885187	Symbol	m_opsysver		3884604						
ANR	3885188	Symbol	m_window_version_info . wServicePackMinor		3884604						
ANR	3885189	Symbol	ATTR_TOTAL_CPUS		3884604						
ANR	3885190	Symbol	ATTR_DOTNET_VERSIONS		3884604						
ANR	3885191	Symbol	how_much		3884604						
ANR	3885192	Symbol	m_window_version_info . dwOSVersionInfoSize		3884604						
ANR	3885193	Symbol	ATTR_WINDOWS_PRODUCT_TYPE		3884604						
ANR	3885194	Symbol	m_opsys_and_ver		3884604						
ANR	3885195	Symbol	ATTR_CLOCK_DAY		3884604						
ANR	3885196	Symbol	daemonCore		3884604						
ANR	3885197	Symbol	ATTR_WINDOWS_BUILD_NUMBER		3884604						
ANR	3885198	Symbol	ATTR_LOCAL_CREDD		3884604						
ANR	3885199	Symbol	m_uid_domain		3884604						
ANR	3885200	Symbol	m_window_version_info . dwMinorVersion		3884604						
ANR	3885201	Symbol	m_filesystem_domain		3884604						
ANR	3885202	Symbol	IS_PUBLIC		3884604						
ANR	3885203	Symbol	m_mips		3884604						
ANR	3885204	Symbol	daemonCore -> InfoCommandSinfulString		3884604						
ANR	3885205	Symbol	ATTR_TOTAL_VIRTUAL_MEMORY		3884604						
ANR	3885206	Symbol	m_last_benchmark		3884604						
ANR	3885207	Symbol	cp		3884604						
ANR	3885208	Symbol	ATTR_LAST_BENCHMARK		3884604						
ANR	3885209	Symbol	ATTR_ARCH		3884604						
ANR	3885210	Symbol	m_clock_day		3884604						
ANR	3885211	Symbol	IS_STATIC		3884604						
ANR	3885212	Symbol	m_dot_Net_Versions		3884604						
ANR	3885213	Symbol	IS_UPDATE		3884604						
ANR	3885214	Symbol	ATTR_HAS_IO_PROXY		3884604						
ANR	3885215	Symbol	m_num_cpus		3884604						
ANR	3885216	Symbol	ATTR_WINDOWS_SERVICE_PACK_MAJOR		3884604						
ANR	3885217	Symbol	ATTR_WINDOWS_SERVICE_PACK_MINOR		3884604						
ANR	3885218	Function	MachAttributes :: start_benchmarks	608:0:16876:18138							
ANR	3885219	FunctionDef	"MachAttributes :: start_benchmarks (Resource * rip , int & count)"		3885218	0					
ANR	3885220	CompoundStatement		610:0:16943:18138	3885218	0					
ANR	3885221	ExpressionStatement	count = 0	611:1:16946:16955	3885218	0	True				
ANR	3885222	AssignmentExpression	count = 0		3885218	0		=			
ANR	3885223	Identifier	count		3885218	0					
ANR	3885224	PrimaryExpression	0		3885218	1					
ANR	3885225	IdentifierDeclStatement	ClassAd * cp = rip -> r_classad ;	612:1:16958:16986	3885218	1	True				
ANR	3885226	IdentifierDecl	* cp = rip -> r_classad		3885218	0					
ANR	3885227	IdentifierDeclType	ClassAd *		3885218	0					
ANR	3885228	Identifier	cp		3885218	1					
ANR	3885229	AssignmentExpression	* cp = rip -> r_classad		3885218	2		=			
ANR	3885230	Identifier	cp		3885218	0					
ANR	3885231	PtrMemberAccess	rip -> r_classad		3885218	1					
ANR	3885232	Identifier	rip		3885218	0					
ANR	3885233	Identifier	r_classad		3885218	1					
ANR	3885234	IfStatement	if ( rip -> isSuspendedForCOD ( ) )		3885218	2					
ANR	3885235	Condition	rip -> isSuspendedForCOD ( )	614:5:16994:17017	3885218	0	True				
ANR	3885236	CallExpression	rip -> isSuspendedForCOD ( )		3885218	0					
ANR	3885237	Callee	rip -> isSuspendedForCOD		3885218	0					
ANR	3885238	PtrMemberAccess	rip -> isSuspendedForCOD		3885218	0					
ANR	3885239	Identifier	rip		3885218	0					
ANR	3885240	Identifier	isSuspendedForCOD		3885218	1					
ANR	3885241	ArgumentList			3885218	1					
ANR	3885242	CompoundStatement		5:32:77:77	3885218	1					
ANR	3885243	ReturnStatement	return ;	617:2:17102:17108	3885218	0	True				
ANR	3885244	IdentifierDeclStatement	int run_benchmarks = 0 ;	621:1:17172:17194	3885218	3	True				
ANR	3885245	IdentifierDecl	run_benchmarks = 0		3885218	0					
ANR	3885246	IdentifierDeclType	int		3885218	0					
ANR	3885247	Identifier	run_benchmarks		3885218	1					
ANR	3885248	AssignmentExpression	run_benchmarks = 0		3885218	2		=			
ANR	3885249	Identifier	run_benchmarks		3885218	0					
ANR	3885250	PrimaryExpression	0		3885218	1					
ANR	3885251	IfStatement	"if ( cp -> EvalBool ( ATTR_RUN_BENCHMARKS , cp , run_benchmarks ) == 0 )"		3885218	4					
ANR	3885252	Condition	"cp -> EvalBool ( ATTR_RUN_BENCHMARKS , cp , run_benchmarks ) == 0"	622:6:17202:17261	3885218	0	True				
ANR	3885253	EqualityExpression	"cp -> EvalBool ( ATTR_RUN_BENCHMARKS , cp , run_benchmarks ) == 0"		3885218	0		==			
ANR	3885254	CallExpression	"cp -> EvalBool ( ATTR_RUN_BENCHMARKS , cp , run_benchmarks )"		3885218	0					
ANR	3885255	Callee	cp -> EvalBool		3885218	0					
ANR	3885256	PtrMemberAccess	cp -> EvalBool		3885218	0					
ANR	3885257	Identifier	cp		3885218	0					
ANR	3885258	Identifier	EvalBool		3885218	1					
ANR	3885259	ArgumentList	ATTR_RUN_BENCHMARKS		3885218	1					
ANR	3885260	Argument	ATTR_RUN_BENCHMARKS		3885218	0					
ANR	3885261	Identifier	ATTR_RUN_BENCHMARKS		3885218	0					
ANR	3885262	Argument	cp		3885218	1					
ANR	3885263	Identifier	cp		3885218	0					
ANR	3885264	Argument	run_benchmarks		3885218	2					
ANR	3885265	Identifier	run_benchmarks		3885218	0					
ANR	3885266	PrimaryExpression	0		3885218	1					
ANR	3885267	CompoundStatement		13:69:321:321	3885218	1					
ANR	3885268	ExpressionStatement	run_benchmarks = 0	623:2:17269:17287	3885218	0	True				
ANR	3885269	AssignmentExpression	run_benchmarks = 0		3885218	0		=			
ANR	3885270	Identifier	run_benchmarks		3885218	0					
ANR	3885271	PrimaryExpression	0		3885218	1					
ANR	3885272	IfStatement	if ( ! run_benchmarks )		3885218	5					
ANR	3885273	Condition	! run_benchmarks	625:6:17298:17312	3885218	0	True				
ANR	3885274	UnaryOperationExpression	! run_benchmarks		3885218	0					
ANR	3885275	UnaryOperator	!		3885218	0					
ANR	3885276	Identifier	run_benchmarks		3885218	1					
ANR	3885277	CompoundStatement		16:24:372:372	3885218	1					
ANR	3885278	ReturnStatement	return ;	626:2:17320:17326	3885218	0	True				
ANR	3885279	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: %s is TRUE\\n"" , ATTR_RUN_BENCHMARKS )"	629:1:17333:17407	3885218	6	True				
ANR	3885280	CallExpression	"dprintf ( D_ALWAYS , ""State change: %s is TRUE\\n"" , ATTR_RUN_BENCHMARKS )"		3885218	0					
ANR	3885281	Callee	dprintf		3885218	0					
ANR	3885282	Identifier	dprintf		3885218	0					
ANR	3885283	ArgumentList	D_ALWAYS		3885218	1					
ANR	3885284	Argument	D_ALWAYS		3885218	0					
ANR	3885285	Identifier	D_ALWAYS		3885218	0					
ANR	3885286	Argument	"""State change: %s is TRUE\\n"""		3885218	1					
ANR	3885287	PrimaryExpression	"""State change: %s is TRUE\\n"""		3885218	0					
ANR	3885288	Argument	ATTR_RUN_BENCHMARKS		3885218	2					
ANR	3885289	Identifier	ATTR_RUN_BENCHMARKS		3885218	0					
ANR	3885290	IfStatement	if ( ( rip -> state ( ) != unclaimed_state ) && ( rip -> activity ( ) != idle_act ) )		3885218	7					
ANR	3885291	Condition	( rip -> state ( ) != unclaimed_state ) && ( rip -> activity ( ) != idle_act )	632:6:17416:17485	3885218	0	True				
ANR	3885292	AndExpression	( rip -> state ( ) != unclaimed_state ) && ( rip -> activity ( ) != idle_act )		3885218	0		&&			
ANR	3885293	EqualityExpression	rip -> state ( ) != unclaimed_state		3885218	0		!=			
ANR	3885294	CallExpression	rip -> state ( )		3885218	0					
ANR	3885295	Callee	rip -> state		3885218	0					
ANR	3885296	PtrMemberAccess	rip -> state		3885218	0					
ANR	3885297	Identifier	rip		3885218	0					
ANR	3885298	Identifier	state		3885218	1					
ANR	3885299	ArgumentList			3885218	1					
ANR	3885300	Identifier	unclaimed_state		3885218	1					
ANR	3885301	EqualityExpression	rip -> activity ( ) != idle_act		3885218	1		!=			
ANR	3885302	CallExpression	rip -> activity ( )		3885218	0					
ANR	3885303	Callee	rip -> activity		3885218	0					
ANR	3885304	PtrMemberAccess	rip -> activity		3885218	0					
ANR	3885305	Identifier	rip		3885218	0					
ANR	3885306	Identifier	activity		3885218	1					
ANR	3885307	ArgumentList			3885218	1					
ANR	3885308	Identifier	idle_act		3885218	1					
ANR	3885309	CompoundStatement		24:40:550:550	3885218	1					
ANR	3885310	ExpressionStatement	"dprintf ( D_ALWAYS , ""Tried to run benchmarks when not idle, aborting.\\n"" )"	634:2:17498:17576	3885218	0	True				
ANR	3885311	CallExpression	"dprintf ( D_ALWAYS , ""Tried to run benchmarks when not idle, aborting.\\n"" )"		3885218	0					
ANR	3885312	Callee	dprintf		3885218	0					
ANR	3885313	Identifier	dprintf		3885218	0					
ANR	3885314	ArgumentList	D_ALWAYS		3885218	1					
ANR	3885315	Argument	D_ALWAYS		3885218	0					
ANR	3885316	Identifier	D_ALWAYS		3885218	0					
ANR	3885317	Argument	"""Tried to run benchmarks when not idle, aborting.\\n"""		3885218	1					
ANR	3885318	PrimaryExpression	"""Tried to run benchmarks when not idle, aborting.\\n"""		3885218	0					
ANR	3885319	ReturnStatement	return ;	636:2:17580:17586	3885218	1	True				
ANR	3885320	ExpressionStatement	ASSERT ( bench_job_mgr != NULL )	639:1:17593:17624	3885218	8	True				
ANR	3885321	CallExpression	ASSERT ( bench_job_mgr != NULL )		3885218	0					
ANR	3885322	Callee	ASSERT		3885218	0					
ANR	3885323	Identifier	ASSERT		3885218	0					
ANR	3885324	ArgumentList	bench_job_mgr != NULL		3885218	1					
ANR	3885325	Argument	bench_job_mgr != NULL		3885218	0					
ANR	3885326	EqualityExpression	bench_job_mgr != NULL		3885218	0		!=			
ANR	3885327	Identifier	bench_job_mgr		3885218	0					
ANR	3885328	Identifier	NULL		3885218	1					
ANR	3885329	ExpressionStatement	rip -> change_state ( benchmarking_act )	645:1:17843:17880	3885218	9	True				
ANR	3885330	CallExpression	rip -> change_state ( benchmarking_act )		3885218	0					
ANR	3885331	Callee	rip -> change_state		3885218	0					
ANR	3885332	PtrMemberAccess	rip -> change_state		3885218	0					
ANR	3885333	Identifier	rip		3885218	0					
ANR	3885334	Identifier	change_state		3885218	1					
ANR	3885335	ArgumentList	benchmarking_act		3885218	1					
ANR	3885336	Argument	benchmarking_act		3885218	0					
ANR	3885337	Identifier	benchmarking_act		3885218	0					
ANR	3885338	ExpressionStatement	"bench_job_mgr -> StartBenchmarks ( rip , count )"	646:1:17883:17927	3885218	10	True				
ANR	3885339	CallExpression	"bench_job_mgr -> StartBenchmarks ( rip , count )"		3885218	0					
ANR	3885340	Callee	bench_job_mgr -> StartBenchmarks		3885218	0					
ANR	3885341	PtrMemberAccess	bench_job_mgr -> StartBenchmarks		3885218	0					
ANR	3885342	Identifier	bench_job_mgr		3885218	0					
ANR	3885343	Identifier	StartBenchmarks		3885218	1					
ANR	3885344	ArgumentList	rip		3885218	1					
ANR	3885345	Argument	rip		3885218	0					
ANR	3885346	Identifier	rip		3885218	0					
ANR	3885347	Argument	count		3885218	1					
ANR	3885348	Identifier	count		3885218	0					
ANR	3885349	IfStatement	if ( count == 0 )		3885218	11					
ANR	3885350	Condition	count == 0	650:6:18086:18095	3885218	0	True				
ANR	3885351	EqualityExpression	count == 0		3885218	0		==			
ANR	3885352	Identifier	count		3885218	0					
ANR	3885353	PrimaryExpression	0		3885218	1					
ANR	3885354	CompoundStatement		41:19:1155:1155	3885218	1					
ANR	3885355	ExpressionStatement	rip -> change_state ( idle_act )	651:2:18103:18132	3885218	0	True				
ANR	3885356	CallExpression	rip -> change_state ( idle_act )		3885218	0					
ANR	3885357	Callee	rip -> change_state		3885218	0					
ANR	3885358	PtrMemberAccess	rip -> change_state		3885218	0					
ANR	3885359	Identifier	rip		3885218	0					
ANR	3885360	Identifier	change_state		3885218	1					
ANR	3885361	ArgumentList	idle_act		3885218	1					
ANR	3885362	Argument	idle_act		3885218	0					
ANR	3885363	Identifier	idle_act		3885218	0					
ANR	3885364	ReturnType	void		3885218	1					
ANR	3885365	Identifier	MachAttributes :: start_benchmarks		3885218	2					
ANR	3885366	ParameterList	"Resource * rip , int & count"		3885218	3					
ANR	3885367	Parameter	Resource * rip	609:34:16915:16927	3885218	0	True				
ANR	3885368	ParameterType	Resource *		3885218	0					
ANR	3885369	Identifier	rip		3885218	1					
ANR	3885370	Parameter	int & count	609:49:16930:16939	3885218	1	True				
ANR	3885371	ParameterType	int &		3885218	0					
ANR	3885372	Identifier	count		3885218	1					
ANR	3885373	CFGEntryNode	ENTRY		3885218		True				
ANR	3885374	CFGExitNode	EXIT		3885218		True				
ANR	3885375	Symbol	* rip		3885218						
ANR	3885376	Symbol	NULL		3885218						
ANR	3885377	Symbol	count		3885218						
ANR	3885378	Symbol	D_ALWAYS		3885218						
ANR	3885379	Symbol	benchmarking_act		3885218						
ANR	3885380	Symbol	rip -> isSuspendedForCOD		3885218						
ANR	3885381	Symbol	run_benchmarks		3885218						
ANR	3885382	Symbol	cp		3885218						
ANR	3885383	Symbol	* cp		3885218						
ANR	3885384	Symbol	bench_job_mgr		3885218						
ANR	3885385	Symbol	rip -> r_classad		3885218						
ANR	3885386	Symbol	idle_act		3885218						
ANR	3885387	Symbol	rip		3885218						
ANR	3885388	Symbol	ATTR_RUN_BENCHMARKS		3885218						
ANR	3885389	Symbol	rip -> activity		3885218						
ANR	3885390	Symbol	rip -> state		3885218						
ANR	3885391	Symbol	unclaimed_state		3885218						
ANR	3885392	Symbol	cp -> EvalBool		3885218						
ANR	3885393	Function	MachAttributes :: benchmarks_finished	656:0:18141:18471							
ANR	3885394	FunctionDef	MachAttributes :: benchmarks_finished (Resource * rip)		3885393	0					
ANR	3885395	CompoundStatement		658:0:18199:18471	3885393	0					
ANR	3885396	ExpressionStatement	m_last_benchmark = time ( NULL )	660:1:18265:18294	3885393	0	True				
ANR	3885397	AssignmentExpression	m_last_benchmark = time ( NULL )		3885393	0		=			
ANR	3885398	Identifier	m_last_benchmark		3885393	0					
ANR	3885399	CallExpression	time ( NULL )		3885393	1					
ANR	3885400	Callee	time		3885393	0					
ANR	3885401	Identifier	time		3885393	0					
ANR	3885402	ArgumentList	NULL		3885393	1					
ANR	3885403	Argument	NULL		3885393	0					
ANR	3885404	Identifier	NULL		3885393	0					
ANR	3885405	ExpressionStatement	resmgr -> refresh_benchmarks ( )	661:1:18297:18325	3885393	1	True				
ANR	3885406	CallExpression	resmgr -> refresh_benchmarks ( )		3885393	0					
ANR	3885407	Callee	resmgr -> refresh_benchmarks		3885393	0					
ANR	3885408	PtrMemberAccess	resmgr -> refresh_benchmarks		3885393	0					
ANR	3885409	Identifier	resmgr		3885393	0					
ANR	3885410	Identifier	refresh_benchmarks		3885393	1					
ANR	3885411	ArgumentList			3885393	1					
ANR	3885412	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: benchmarks completed\\n"" )"	663:1:18329:18388	3885393	2	True				
ANR	3885413	CallExpression	"dprintf ( D_ALWAYS , ""State change: benchmarks completed\\n"" )"		3885393	0					
ANR	3885414	Callee	dprintf		3885393	0					
ANR	3885415	Identifier	dprintf		3885393	0					
ANR	3885416	ArgumentList	D_ALWAYS		3885393	1					
ANR	3885417	Argument	D_ALWAYS		3885393	0					
ANR	3885418	Identifier	D_ALWAYS		3885393	0					
ANR	3885419	Argument	"""State change: benchmarks completed\\n"""		3885393	1					
ANR	3885420	PrimaryExpression	"""State change: benchmarks completed\\n"""		3885393	0					
ANR	3885421	IfStatement	if ( rip -> activity ( ) == benchmarking_act )		3885393	3					
ANR	3885422	Condition	rip -> activity ( ) == benchmarking_act	664:5:18395:18429	3885393	0	True				
ANR	3885423	EqualityExpression	rip -> activity ( ) == benchmarking_act		3885393	0		==			
ANR	3885424	CallExpression	rip -> activity ( )		3885393	0					
ANR	3885425	Callee	rip -> activity		3885393	0					
ANR	3885426	PtrMemberAccess	rip -> activity		3885393	0					
ANR	3885427	Identifier	rip		3885393	0					
ANR	3885428	Identifier	activity		3885393	1					
ANR	3885429	ArgumentList			3885393	1					
ANR	3885430	Identifier	benchmarking_act		3885393	1					
ANR	3885431	CompoundStatement		7:43:233:233	3885393	1					
ANR	3885432	ExpressionStatement	rip -> change_state ( idle_act )	665:2:18437:18466	3885393	0	True				
ANR	3885433	CallExpression	rip -> change_state ( idle_act )		3885393	0					
ANR	3885434	Callee	rip -> change_state		3885393	0					
ANR	3885435	PtrMemberAccess	rip -> change_state		3885393	0					
ANR	3885436	Identifier	rip		3885393	0					
ANR	3885437	Identifier	change_state		3885393	1					
ANR	3885438	ArgumentList	idle_act		3885393	1					
ANR	3885439	Argument	idle_act		3885393	0					
ANR	3885440	Identifier	idle_act		3885393	0					
ANR	3885441	ReturnType	void		3885393	1					
ANR	3885442	Identifier	MachAttributes :: benchmarks_finished		3885393	2					
ANR	3885443	ParameterList	Resource * rip		3885393	3					
ANR	3885444	Parameter	Resource * rip	657:37:18183:18195	3885393	0	True				
ANR	3885445	ParameterType	Resource *		3885393	0					
ANR	3885446	Identifier	rip		3885393	1					
ANR	3885447	CFGEntryNode	ENTRY		3885393		True				
ANR	3885448	CFGExitNode	EXIT		3885393		True				
ANR	3885449	Symbol	NULL		3885393						
ANR	3885450	Symbol	* rip		3885393						
ANR	3885451	Symbol	resmgr		3885393						
ANR	3885452	Symbol	m_last_benchmark		3885393						
ANR	3885453	Symbol	idle_act		3885393						
ANR	3885454	Symbol	rip		3885393						
ANR	3885455	Symbol	D_ALWAYS		3885393						
ANR	3885456	Symbol	benchmarking_act		3885393						
ANR	3885457	Symbol	time		3885393						
ANR	3885458	Symbol	rip -> activity		3885393						
ANR	3885459	Function	MachAttributes :: credd_test	670:0:18493:19576							
ANR	3885460	FunctionDef	MachAttributes :: credd_test ()		3885459	0					
ANR	3885461	CompoundStatement		672:0:18527:19576	3885459	0					
ANR	3885462	IdentifierDeclStatement	"char * credd_host = param ( ""CREDD_HOST"" ) ;"	677:1:18726:18764	3885459	0	True				
ANR	3885463	IdentifierDecl	"* credd_host = param ( ""CREDD_HOST"" )"		3885459	0					
ANR	3885464	IdentifierDeclType	char *		3885459	0					
ANR	3885465	Identifier	credd_host		3885459	1					
ANR	3885466	AssignmentExpression	"* credd_host = param ( ""CREDD_HOST"" )"		3885459	2		=			
ANR	3885467	Identifier	credd_host		3885459	0					
ANR	3885468	CallExpression	"param ( ""CREDD_HOST"" )"		3885459	1					
ANR	3885469	Callee	param		3885459	0					
ANR	3885470	Identifier	param		3885459	0					
ANR	3885471	ArgumentList	"""CREDD_HOST"""		3885459	1					
ANR	3885472	Argument	"""CREDD_HOST"""		3885459	0					
ANR	3885473	PrimaryExpression	"""CREDD_HOST"""		3885459	0					
ANR	3885474	IfStatement	if ( credd_host == NULL )		3885459	1					
ANR	3885475	Condition	credd_host == NULL	679:5:18772:18789	3885459	0	True				
ANR	3885476	EqualityExpression	credd_host == NULL		3885459	0		==			
ANR	3885477	Identifier	credd_host		3885459	0					
ANR	3885478	Identifier	NULL		3885459	1					
ANR	3885479	CompoundStatement		8:25:264:264	3885459	1					
ANR	3885480	IfStatement	if ( m_local_credd != NULL )		3885459	0					
ANR	3885481	Condition	m_local_credd != NULL	680:6:18800:18820	3885459	0	True				
ANR	3885482	EqualityExpression	m_local_credd != NULL		3885459	0		!=			
ANR	3885483	Identifier	m_local_credd		3885459	0					
ANR	3885484	Identifier	NULL		3885459	1					
ANR	3885485	CompoundStatement		9:29:295:295	3885459	1					
ANR	3885486	ExpressionStatement	free ( m_local_credd )	681:3:18828:18847	3885459	0	True				
ANR	3885487	CallExpression	free ( m_local_credd )		3885459	0					
ANR	3885488	Callee	free		3885459	0					
ANR	3885489	Identifier	free		3885459	0					
ANR	3885490	ArgumentList	m_local_credd		3885459	1					
ANR	3885491	Argument	m_local_credd		3885459	0					
ANR	3885492	Identifier	m_local_credd		3885459	0					
ANR	3885493	ExpressionStatement	m_local_credd = NULL	682:3:18852:18872	3885459	1	True				
ANR	3885494	AssignmentExpression	m_local_credd = NULL		3885459	0		=			
ANR	3885495	Identifier	m_local_credd		3885459	0					
ANR	3885496	Identifier	NULL		3885459	1					
ANR	3885497	ReturnStatement	return ;	684:2:18880:18886	3885459	1	True				
ANR	3885498	IfStatement	if ( m_local_credd != NULL )		3885459	2					
ANR	3885499	Condition	m_local_credd != NULL	687:5:18897:18917	3885459	0	True				
ANR	3885500	EqualityExpression	m_local_credd != NULL		3885459	0		!=			
ANR	3885501	Identifier	m_local_credd		3885459	0					
ANR	3885502	Identifier	NULL		3885459	1					
ANR	3885503	CompoundStatement		16:28:392:392	3885459	1					
ANR	3885504	IfStatement	"if ( strcmp ( m_local_credd , credd_host ) == 0 )"		3885459	0					
ANR	3885505	Condition	"strcmp ( m_local_credd , credd_host ) == 0"	688:6:18928:18965	3885459	0	True				
ANR	3885506	EqualityExpression	"strcmp ( m_local_credd , credd_host ) == 0"		3885459	0		==			
ANR	3885507	CallExpression	"strcmp ( m_local_credd , credd_host )"		3885459	0					
ANR	3885508	Callee	strcmp		3885459	0					
ANR	3885509	Identifier	strcmp		3885459	0					
ANR	3885510	ArgumentList	m_local_credd		3885459	1					
ANR	3885511	Argument	m_local_credd		3885459	0					
ANR	3885512	Identifier	m_local_credd		3885459	0					
ANR	3885513	Argument	credd_host		3885459	1					
ANR	3885514	Identifier	credd_host		3885459	0					
ANR	3885515	PrimaryExpression	0		3885459	1					
ANR	3885516	CompoundStatement		17:46:440:440	3885459	1					
ANR	3885517	ExpressionStatement	free ( credd_host )	689:3:18973:18989	3885459	0	True				
ANR	3885518	CallExpression	free ( credd_host )		3885459	0					
ANR	3885519	Callee	free		3885459	0					
ANR	3885520	Identifier	free		3885459	0					
ANR	3885521	ArgumentList	credd_host		3885459	1					
ANR	3885522	Argument	credd_host		3885459	0					
ANR	3885523	Identifier	credd_host		3885459	0					
ANR	3885524	ReturnStatement	return ;	690:3:18994:19000	3885459	1	True				
ANR	3885525	ElseStatement	else		3885459	0					
ANR	3885526	CompoundStatement		21:7:485:485	3885459	0					
ANR	3885527	ExpressionStatement	free ( m_local_credd )	693:3:19018:19037	3885459	0	True				
ANR	3885528	CallExpression	free ( m_local_credd )		3885459	0					
ANR	3885529	Callee	free		3885459	0					
ANR	3885530	Identifier	free		3885459	0					
ANR	3885531	ArgumentList	m_local_credd		3885459	1					
ANR	3885532	Argument	m_local_credd		3885459	0					
ANR	3885533	Identifier	m_local_credd		3885459	0					
ANR	3885534	ExpressionStatement	m_local_credd = NULL	694:3:19042:19062	3885459	1	True				
ANR	3885535	AssignmentExpression	m_local_credd = NULL		3885459	0		=			
ANR	3885536	Identifier	m_local_credd		3885459	0					
ANR	3885537	Identifier	NULL		3885459	1					
ANR	3885538	ExpressionStatement	m_last_credd_test = 0	695:3:19067:19088	3885459	2	True				
ANR	3885539	AssignmentExpression	m_last_credd_test = 0		3885459	0		=			
ANR	3885540	Identifier	m_last_credd_test		3885459	0					
ANR	3885541	PrimaryExpression	0		3885459	1					
ANR	3885542	IdentifierDeclStatement	time_t now = time ( NULL ) ;	699:1:19099:19122	3885459	3	True				
ANR	3885543	IdentifierDecl	now = time ( NULL )		3885459	0					
ANR	3885544	IdentifierDeclType	time_t		3885459	0					
ANR	3885545	Identifier	now		3885459	1					
ANR	3885546	AssignmentExpression	now = time ( NULL )		3885459	2		=			
ANR	3885547	Identifier	now		3885459	0					
ANR	3885548	CallExpression	time ( NULL )		3885459	1					
ANR	3885549	Callee	time		3885459	0					
ANR	3885550	Identifier	time		3885459	0					
ANR	3885551	ArgumentList	NULL		3885459	1					
ANR	3885552	Argument	NULL		3885459	0					
ANR	3885553	Identifier	NULL		3885459	0					
ANR	3885554	IdentifierDeclStatement	"double thresh = ( double ) param_integer ( ""CREDD_TEST_INTERVAL"" , 300 ) ;"	700:1:19125:19190	3885459	4	True				
ANR	3885555	IdentifierDecl	"thresh = ( double ) param_integer ( ""CREDD_TEST_INTERVAL"" , 300 )"		3885459	0					
ANR	3885556	IdentifierDeclType	double		3885459	0					
ANR	3885557	Identifier	thresh		3885459	1					
ANR	3885558	AssignmentExpression	"thresh = ( double ) param_integer ( ""CREDD_TEST_INTERVAL"" , 300 )"		3885459	2		=			
ANR	3885559	Identifier	thresh		3885459	0					
ANR	3885560	CastExpression	"( double ) param_integer ( ""CREDD_TEST_INTERVAL"" , 300 )"		3885459	1					
ANR	3885561	CastTarget	double		3885459	0					
ANR	3885562	CallExpression	"param_integer ( ""CREDD_TEST_INTERVAL"" , 300 )"		3885459	1					
ANR	3885563	Callee	param_integer		3885459	0					
ANR	3885564	Identifier	param_integer		3885459	0					
ANR	3885565	ArgumentList	"""CREDD_TEST_INTERVAL"""		3885459	1					
ANR	3885566	Argument	"""CREDD_TEST_INTERVAL"""		3885459	0					
ANR	3885567	PrimaryExpression	"""CREDD_TEST_INTERVAL"""		3885459	0					
ANR	3885568	Argument	300		3885459	1					
ANR	3885569	PrimaryExpression	300		3885459	0					
ANR	3885570	IfStatement	"if ( difftime ( now , m_last_credd_test ) > thresh )"		3885459	5					
ANR	3885571	Condition	"difftime ( now , m_last_credd_test ) > thresh"	701:5:19197:19237	3885459	0	True				
ANR	3885572	RelationalExpression	"difftime ( now , m_last_credd_test ) > thresh"		3885459	0		>			
ANR	3885573	CallExpression	"difftime ( now , m_last_credd_test )"		3885459	0					
ANR	3885574	Callee	difftime		3885459	0					
ANR	3885575	Identifier	difftime		3885459	0					
ANR	3885576	ArgumentList	now		3885459	1					
ANR	3885577	Argument	now		3885459	0					
ANR	3885578	Identifier	now		3885459	0					
ANR	3885579	Argument	m_last_credd_test		3885459	1					
ANR	3885580	Identifier	m_last_credd_test		3885459	0					
ANR	3885581	Identifier	thresh		3885459	1					
ANR	3885582	CompoundStatement		31:2:716:738	3885459	1					
ANR	3885583	IdentifierDeclStatement	Daemon credd ( DT_CREDD ) ;	702:2:19244:19266	3885459	0	True				
ANR	3885584	IdentifierDecl	credd ( DT_CREDD )		3885459	0					
ANR	3885585	IdentifierDeclType	Daemon		3885459	0					
ANR	3885586	Identifier	credd		3885459	1					
ANR	3885587	Identifier	DT_CREDD		3885459	2					
ANR	3885588	IfStatement	if ( credd . locate ( ) )		3885459	1					
ANR	3885589	Condition	credd . locate ( )	703:6:19274:19287	3885459	0	True				
ANR	3885590	CallExpression	credd . locate ( )		3885459	0					
ANR	3885591	Callee	credd . locate		3885459	0					
ANR	3885592	MemberAccess	credd . locate		3885459	0					
ANR	3885593	Identifier	credd		3885459	0					
ANR	3885594	Identifier	locate		3885459	1					
ANR	3885595	ArgumentList			3885459	1					
ANR	3885596	CompoundStatement		33:3:767:832	3885459	1					
ANR	3885597	IdentifierDeclStatement	"Sock * sock = credd . startCommand ( CREDD_NOP , Stream :: reli_sock , 20 ) ;"	704:3:19295:19360	3885459	0	True				
ANR	3885598	IdentifierDecl	"* sock = credd . startCommand ( CREDD_NOP , Stream :: reli_sock , 20 )"		3885459	0					
ANR	3885599	IdentifierDeclType	Sock *		3885459	0					
ANR	3885600	Identifier	sock		3885459	1					
ANR	3885601	AssignmentExpression	"* sock = credd . startCommand ( CREDD_NOP , Stream :: reli_sock , 20 )"		3885459	2		=			
ANR	3885602	Identifier	sock		3885459	0					
ANR	3885603	CallExpression	"credd . startCommand ( CREDD_NOP , Stream :: reli_sock , 20 )"		3885459	1					
ANR	3885604	Callee	credd . startCommand		3885459	0					
ANR	3885605	MemberAccess	credd . startCommand		3885459	0					
ANR	3885606	Identifier	credd		3885459	0					
ANR	3885607	Identifier	startCommand		3885459	1					
ANR	3885608	ArgumentList	CREDD_NOP		3885459	1					
ANR	3885609	Argument	CREDD_NOP		3885459	0					
ANR	3885610	Identifier	CREDD_NOP		3885459	0					
ANR	3885611	Argument	Stream :: reli_sock		3885459	1					
ANR	3885612	Identifier	Stream :: reli_sock		3885459	0					
ANR	3885613	Argument	20		3885459	2					
ANR	3885614	PrimaryExpression	20		3885459	0					
ANR	3885615	IfStatement	if ( sock != NULL )		3885459	1					
ANR	3885616	Condition	sock != NULL	705:7:19369:19380	3885459	0	True				
ANR	3885617	EqualityExpression	sock != NULL		3885459	0		!=			
ANR	3885618	Identifier	sock		3885459	0					
ANR	3885619	Identifier	NULL		3885459	1					
ANR	3885620	CompoundStatement		34:21:855:855	3885459	1					
ANR	3885621	ExpressionStatement	sock -> decode ( )	706:4:19389:19403	3885459	0	True				
ANR	3885622	CallExpression	sock -> decode ( )		3885459	0					
ANR	3885623	Callee	sock -> decode		3885459	0					
ANR	3885624	PtrMemberAccess	sock -> decode		3885459	0					
ANR	3885625	Identifier	sock		3885459	0					
ANR	3885626	Identifier	decode		3885459	1					
ANR	3885627	ArgumentList			3885459	1					
ANR	3885628	IfStatement	if ( sock -> end_of_message ( ) )		3885459	1					
ANR	3885629	Condition	sock -> end_of_message ( )	707:8:19413:19434	3885459	0	True				
ANR	3885630	CallExpression	sock -> end_of_message ( )		3885459	0					
ANR	3885631	Callee	sock -> end_of_message		3885459	0					
ANR	3885632	PtrMemberAccess	sock -> end_of_message		3885459	0					
ANR	3885633	Identifier	sock		3885459	0					
ANR	3885634	Identifier	end_of_message		3885459	1					
ANR	3885635	ArgumentList			3885459	1					
ANR	3885636	CompoundStatement		36:32:909:909	3885459	1					
ANR	3885637	ExpressionStatement	m_local_credd = credd_host	708:5:19444:19470	3885459	0	True				
ANR	3885638	AssignmentExpression	m_local_credd = credd_host		3885459	0		=			
ANR	3885639	Identifier	m_local_credd		3885459	0					
ANR	3885640	Identifier	credd_host		3885459	1					
ANR	3885641	ExpressionStatement	m_last_credd_test = now	712:2:19489:19512	3885459	2	True				
ANR	3885642	AssignmentExpression	m_last_credd_test = now		3885459	0		=			
ANR	3885643	Identifier	m_last_credd_test		3885459	0					
ANR	3885644	Identifier	now		3885459	1					
ANR	3885645	IfStatement	if ( credd_host != m_local_credd )		3885459	6					
ANR	3885646	Condition	credd_host != m_local_credd	714:5:19522:19548	3885459	0	True				
ANR	3885647	EqualityExpression	credd_host != m_local_credd		3885459	0		!=			
ANR	3885648	Identifier	credd_host		3885459	0					
ANR	3885649	Identifier	m_local_credd		3885459	1					
ANR	3885650	CompoundStatement		43:34:1023:1023	3885459	1					
ANR	3885651	ExpressionStatement	free ( credd_host )	715:2:19555:19571	3885459	0	True				
ANR	3885652	CallExpression	free ( credd_host )		3885459	0					
ANR	3885653	Callee	free		3885459	0					
ANR	3885654	Identifier	free		3885459	0					
ANR	3885655	ArgumentList	credd_host		3885459	1					
ANR	3885656	Argument	credd_host		3885459	0					
ANR	3885657	Identifier	credd_host		3885459	0					
ANR	3885658	ReturnType	void		3885459	1					
ANR	3885659	Identifier	MachAttributes :: credd_test		3885459	2					
ANR	3885660	ParameterList			3885459	3					
ANR	3885661	CFGEntryNode	ENTRY		3885459		True				
ANR	3885662	CFGExitNode	EXIT		3885459		True				
ANR	3885663	Symbol	strcmp		3885459						
ANR	3885664	Symbol	NULL		3885459						
ANR	3885665	Symbol	sock -> end_of_message		3885459						
ANR	3885666	Symbol	credd . startCommand		3885459						
ANR	3885667	Symbol	credd_host		3885459						
ANR	3885668	Symbol	m_local_credd		3885459						
ANR	3885669	Symbol	CREDD_NOP		3885459						
ANR	3885670	Symbol	m_last_credd_test		3885459						
ANR	3885671	Symbol	sock		3885459						
ANR	3885672	Symbol	param		3885459						
ANR	3885673	Symbol	credd . locate		3885459						
ANR	3885674	Symbol	now		3885459						
ANR	3885675	Symbol	difftime		3885459						
ANR	3885676	Symbol	param_integer		3885459						
ANR	3885677	Symbol	Stream :: reli_sock		3885459						
ANR	3885678	Symbol	time		3885459						
ANR	3885679	Symbol	thresh		3885459						
ANR	3885680	Symbol	credd		3885459						
ANR	3885681	Symbol	* sock		3885459						
ANR	3885682	Function	CpuAttributes :: CpuAttributes	720:0:19586:20252							
ANR	3885683	FunctionDef	"CpuAttributes :: CpuAttributes (MachAttributes * map_arg , int slot_type , int num_cpus_arg , int num_phys_mem , float virt_mem_fraction , float disk_fraction , MyString & execute_dir , MyString & execute_partition_id)"		3885682	0					
ANR	3885684	CompoundStatement		728:0:19859:20252	3885682	0					
ANR	3885685	ExpressionStatement	map = map_arg	729:1:19862:19875	3885682	0	True				
ANR	3885686	AssignmentExpression	map = map_arg		3885682	0		=			
ANR	3885687	Identifier	map		3885682	0					
ANR	3885688	Identifier	map_arg		3885682	1					
ANR	3885689	ExpressionStatement	c_type = slot_type	730:1:19878:19896	3885682	1	True				
ANR	3885690	AssignmentExpression	c_type = slot_type		3885682	0		=			
ANR	3885691	Identifier	c_type		3885682	0					
ANR	3885692	Identifier	slot_type		3885682	1					
ANR	3885693	ExpressionStatement	c_num_cpus = num_cpus_arg	731:1:19899:19924	3885682	2	True				
ANR	3885694	AssignmentExpression	c_num_cpus = num_cpus_arg		3885682	0		=			
ANR	3885695	Identifier	c_num_cpus		3885682	0					
ANR	3885696	Identifier	num_cpus_arg		3885682	1					
ANR	3885697	ExpressionStatement	c_phys_mem = num_phys_mem	732:1:19927:19952	3885682	3	True				
ANR	3885698	AssignmentExpression	c_phys_mem = num_phys_mem		3885682	0		=			
ANR	3885699	Identifier	c_phys_mem		3885682	0					
ANR	3885700	Identifier	num_phys_mem		3885682	1					
ANR	3885701	ExpressionStatement	c_virt_mem_fraction = virt_mem_fraction	733:1:19955:19994	3885682	4	True				
ANR	3885702	AssignmentExpression	c_virt_mem_fraction = virt_mem_fraction		3885682	0		=			
ANR	3885703	Identifier	c_virt_mem_fraction		3885682	0					
ANR	3885704	Identifier	virt_mem_fraction		3885682	1					
ANR	3885705	ExpressionStatement	c_disk_fraction = disk_fraction	734:1:19997:20028	3885682	5	True				
ANR	3885706	AssignmentExpression	c_disk_fraction = disk_fraction		3885682	0		=			
ANR	3885707	Identifier	c_disk_fraction		3885682	0					
ANR	3885708	Identifier	disk_fraction		3885682	1					
ANR	3885709	ExpressionStatement	c_execute_dir = execute_dir	735:1:20031:20058	3885682	6	True				
ANR	3885710	AssignmentExpression	c_execute_dir = execute_dir		3885682	0		=			
ANR	3885711	Identifier	c_execute_dir		3885682	0					
ANR	3885712	Identifier	execute_dir		3885682	1					
ANR	3885713	ExpressionStatement	c_execute_partition_id = execute_partition_id	736:1:20061:20106	3885682	7	True				
ANR	3885714	AssignmentExpression	c_execute_partition_id = execute_partition_id		3885682	0		=			
ANR	3885715	Identifier	c_execute_partition_id		3885682	0					
ANR	3885716	Identifier	execute_partition_id		3885682	1					
ANR	3885717	ExpressionStatement	c_idle = - 1	737:1:20109:20120	3885682	8	True				
ANR	3885718	AssignmentExpression	c_idle = - 1		3885682	0		=			
ANR	3885719	Identifier	c_idle		3885682	0					
ANR	3885720	UnaryOperationExpression	- 1		3885682	1					
ANR	3885721	UnaryOperator	-		3885682	0					
ANR	3885722	PrimaryExpression	1		3885682	1					
ANR	3885723	ExpressionStatement	c_console_idle = - 1	738:1:20123:20142	3885682	9	True				
ANR	3885724	AssignmentExpression	c_console_idle = - 1		3885682	0		=			
ANR	3885725	Identifier	c_console_idle		3885682	0					
ANR	3885726	UnaryOperationExpression	- 1		3885682	1					
ANR	3885727	UnaryOperator	-		3885682	0					
ANR	3885728	PrimaryExpression	1		3885682	1					
ANR	3885729	ExpressionStatement	c_disk = 0	739:1:20145:20155	3885682	10	True				
ANR	3885730	AssignmentExpression	c_disk = 0		3885682	0		=			
ANR	3885731	Identifier	c_disk		3885682	0					
ANR	3885732	PrimaryExpression	0		3885682	1					
ANR	3885733	ExpressionStatement	c_total_disk = 0	740:1:20158:20174	3885682	11	True				
ANR	3885734	AssignmentExpression	c_total_disk = 0		3885682	0		=			
ANR	3885735	Identifier	c_total_disk		3885682	0					
ANR	3885736	PrimaryExpression	0		3885682	1					
ANR	3885737	ExpressionStatement	c_condor_load = - 1.0	742:1:20178:20198	3885682	12	True				
ANR	3885738	AssignmentExpression	c_condor_load = - 1.0		3885682	0		=			
ANR	3885739	Identifier	c_condor_load		3885682	0					
ANR	3885740	UnaryOperationExpression	- 1.0		3885682	1					
ANR	3885741	UnaryOperator	-		3885682	0					
ANR	3885742	PrimaryExpression	1.0		3885682	1					
ANR	3885743	ExpressionStatement	c_owner_load = - 1.0	743:1:20201:20220	3885682	13	True				
ANR	3885744	AssignmentExpression	c_owner_load = - 1.0		3885682	0		=			
ANR	3885745	Identifier	c_owner_load		3885682	0					
ANR	3885746	UnaryOperationExpression	- 1.0		3885682	1					
ANR	3885747	UnaryOperator	-		3885682	0					
ANR	3885748	PrimaryExpression	1.0		3885682	1					
ANR	3885749	ExpressionStatement	c_virt_mem = 0	744:1:20223:20237	3885682	14	True				
ANR	3885750	AssignmentExpression	c_virt_mem = 0		3885682	0		=			
ANR	3885751	Identifier	c_virt_mem		3885682	0					
ANR	3885752	PrimaryExpression	0		3885682	1					
ANR	3885753	ExpressionStatement	rip = NULL	745:1:20240:20250	3885682	15	True				
ANR	3885754	AssignmentExpression	rip = NULL		3885682	0		=			
ANR	3885755	Identifier	rip		3885682	0					
ANR	3885756	Identifier	NULL		3885682	1					
ANR	3885757	Identifier	CpuAttributes :: CpuAttributes		3885682	1					
ANR	3885758	ParameterList	"MachAttributes * map_arg , int slot_type , int num_cpus_arg , int num_phys_mem , float virt_mem_fraction , float disk_fraction , MyString & execute_dir , MyString & execute_partition_id"		3885682	2					
ANR	3885759	Parameter	MachAttributes * map_arg	720:30:19616:19638	3885682	0	True				
ANR	3885760	ParameterType	MachAttributes *		3885682	0					
ANR	3885761	Identifier	map_arg		3885682	1					
ANR	3885762	Parameter	int slot_type	721:9:19651:19663	3885682	1	True				
ANR	3885763	ParameterType	int		3885682	0					
ANR	3885764	Identifier	slot_type		3885682	1					
ANR	3885765	Parameter	int num_cpus_arg	722:9:19675:19690	3885682	2	True				
ANR	3885766	ParameterType	int		3885682	0					
ANR	3885767	Identifier	num_cpus_arg		3885682	1					
ANR	3885768	Parameter	int num_phys_mem	723:9:19703:19718	3885682	3	True				
ANR	3885769	ParameterType	int		3885682	0					
ANR	3885770	Identifier	num_phys_mem		3885682	1					
ANR	3885771	Parameter	float virt_mem_fraction	724:9:19730:19752	3885682	4	True				
ANR	3885772	ParameterType	float		3885682	0					
ANR	3885773	Identifier	virt_mem_fraction		3885682	1					
ANR	3885774	Parameter	float disk_fraction	725:9:19764:19782	3885682	5	True				
ANR	3885775	ParameterType	float		3885682	0					
ANR	3885776	Identifier	disk_fraction		3885682	1					
ANR	3885777	Parameter	MyString & execute_dir	726:9:19794:19814	3885682	6	True				
ANR	3885778	ParameterType	MyString &		3885682	0					
ANR	3885779	Identifier	execute_dir		3885682	1					
ANR	3885780	Parameter	MyString & execute_partition_id	727:9:19826:19855	3885682	7	True				
ANR	3885781	ParameterType	MyString &		3885682	0					
ANR	3885782	Identifier	execute_partition_id		3885682	1					
ANR	3885783	CFGEntryNode	ENTRY		3885682		True				
ANR	3885784	CFGExitNode	EXIT		3885682		True				
ANR	3885785	Symbol	num_cpus_arg		3885682						
ANR	3885786	Symbol	c_condor_load		3885682						
ANR	3885787	Symbol	c_owner_load		3885682						
ANR	3885788	Symbol	num_phys_mem		3885682						
ANR	3885789	Symbol	c_console_idle		3885682						
ANR	3885790	Symbol	map_arg		3885682						
ANR	3885791	Symbol	c_phys_mem		3885682						
ANR	3885792	Symbol	rip		3885682						
ANR	3885793	Symbol	virt_mem_fraction		3885682						
ANR	3885794	Symbol	map		3885682						
ANR	3885795	Symbol	c_execute_dir		3885682						
ANR	3885796	Symbol	c_execute_partition_id		3885682						
ANR	3885797	Symbol	c_disk		3885682						
ANR	3885798	Symbol	execute_dir		3885682						
ANR	3885799	Symbol	NULL		3885682						
ANR	3885800	Symbol	slot_type		3885682						
ANR	3885801	Symbol	disk_fraction		3885682						
ANR	3885802	Symbol	c_total_disk		3885682						
ANR	3885803	Symbol	c_virt_mem_fraction		3885682						
ANR	3885804	Symbol	c_idle		3885682						
ANR	3885805	Symbol	c_num_cpus		3885682						
ANR	3885806	Symbol	execute_partition_id		3885682						
ANR	3885807	Symbol	c_type		3885682						
ANR	3885808	Symbol	c_virt_mem		3885682						
ANR	3885809	Symbol	c_disk_fraction		3885682						
ANR	3885810	Function	CpuAttributes :: attach	749:0:20256:20326							
ANR	3885811	FunctionDef	CpuAttributes :: attach (Resource * res_ip)		3885810	0					
ANR	3885812	CompoundStatement		751:0:20303:20326	3885810	0					
ANR	3885813	ExpressionStatement	this -> rip = res_ip	752:1:20306:20324	3885810	0	True				
ANR	3885814	AssignmentExpression	this -> rip = res_ip		3885810	0		=			
ANR	3885815	PtrMemberAccess	this -> rip		3885810	0					
ANR	3885816	Identifier	this		3885810	0					
ANR	3885817	Identifier	rip		3885810	1					
ANR	3885818	Identifier	res_ip		3885810	1					
ANR	3885819	ReturnType	void		3885810	1					
ANR	3885820	Identifier	CpuAttributes :: attach		3885810	2					
ANR	3885821	ParameterList	Resource * res_ip		3885810	3					
ANR	3885822	Parameter	Resource * res_ip	750:23:20284:20299	3885810	0	True				
ANR	3885823	ParameterType	Resource *		3885810	0					
ANR	3885824	Identifier	res_ip		3885810	1					
ANR	3885825	CFGEntryNode	ENTRY		3885810		True				
ANR	3885826	CFGExitNode	EXIT		3885810		True				
ANR	3885827	Symbol	* this		3885810						
ANR	3885828	Symbol	this -> rip		3885810						
ANR	3885829	Symbol	this		3885810						
ANR	3885830	Symbol	res_ip		3885810						
ANR	3885831	Function	CpuAttributes :: publish	756:0:20330:21196							
ANR	3885832	FunctionDef	"CpuAttributes :: publish (ClassAd * cp , amask_t how_much)"		3885831	0					
ANR	3885833	CompoundStatement		758:0:20391:21196	3885831	0					
ANR	3885834	IfStatement	if ( IS_UPDATE ( how_much ) || IS_PUBLIC ( how_much ) )		3885831	0					
ANR	3885835	Condition	IS_UPDATE ( how_much ) || IS_PUBLIC ( how_much )	759:5:20398:20439	3885831	0	True				
ANR	3885836	OrExpression	IS_UPDATE ( how_much ) || IS_PUBLIC ( how_much )		3885831	0		||			
ANR	3885837	CallExpression	IS_UPDATE ( how_much )		3885831	0					
ANR	3885838	Callee	IS_UPDATE		3885831	0					
ANR	3885839	Identifier	IS_UPDATE		3885831	0					
ANR	3885840	ArgumentList	how_much		3885831	1					
ANR	3885841	Argument	how_much		3885831	0					
ANR	3885842	Identifier	how_much		3885831	0					
ANR	3885843	CallExpression	IS_PUBLIC ( how_much )		3885831	1					
ANR	3885844	Callee	IS_PUBLIC		3885831	0					
ANR	3885845	Identifier	IS_PUBLIC		3885831	0					
ANR	3885846	ArgumentList	how_much		3885831	1					
ANR	3885847	Argument	how_much		3885831	0					
ANR	3885848	Identifier	how_much		3885831	0					
ANR	3885849	CompoundStatement		2:50:51:51	3885831	1					
ANR	3885850	ExpressionStatement	"cp -> Assign ( ATTR_VIRTUAL_MEMORY , ( int ) c_virt_mem )"	761:2:20448:20498	3885831	0	True				
ANR	3885851	CallExpression	"cp -> Assign ( ATTR_VIRTUAL_MEMORY , ( int ) c_virt_mem )"		3885831	0					
ANR	3885852	Callee	cp -> Assign		3885831	0					
ANR	3885853	PtrMemberAccess	cp -> Assign		3885831	0					
ANR	3885854	Identifier	cp		3885831	0					
ANR	3885855	Identifier	Assign		3885831	1					
ANR	3885856	ArgumentList	ATTR_VIRTUAL_MEMORY		3885831	1					
ANR	3885857	Argument	ATTR_VIRTUAL_MEMORY		3885831	0					
ANR	3885858	Identifier	ATTR_VIRTUAL_MEMORY		3885831	0					
ANR	3885859	Argument	( int ) c_virt_mem		3885831	1					
ANR	3885860	CastExpression	( int ) c_virt_mem		3885831	0					
ANR	3885861	CastTarget	int		3885831	0					
ANR	3885862	Identifier	c_virt_mem		3885831	1					
ANR	3885863	ExpressionStatement	"cp -> Assign ( ATTR_TOTAL_DISK , ( int ) c_total_disk )"	763:2:20503:20551	3885831	1	True				
ANR	3885864	CallExpression	"cp -> Assign ( ATTR_TOTAL_DISK , ( int ) c_total_disk )"		3885831	0					
ANR	3885865	Callee	cp -> Assign		3885831	0					
ANR	3885866	PtrMemberAccess	cp -> Assign		3885831	0					
ANR	3885867	Identifier	cp		3885831	0					
ANR	3885868	Identifier	Assign		3885831	1					
ANR	3885869	ArgumentList	ATTR_TOTAL_DISK		3885831	1					
ANR	3885870	Argument	ATTR_TOTAL_DISK		3885831	0					
ANR	3885871	Identifier	ATTR_TOTAL_DISK		3885831	0					
ANR	3885872	Argument	( int ) c_total_disk		3885831	1					
ANR	3885873	CastExpression	( int ) c_total_disk		3885831	0					
ANR	3885874	CastTarget	int		3885831	0					
ANR	3885875	Identifier	c_total_disk		3885831	1					
ANR	3885876	ExpressionStatement	"cp -> Assign ( ATTR_DISK , ( int ) c_disk )"	765:2:20556:20592	3885831	2	True				
ANR	3885877	CallExpression	"cp -> Assign ( ATTR_DISK , ( int ) c_disk )"		3885831	0					
ANR	3885878	Callee	cp -> Assign		3885831	0					
ANR	3885879	PtrMemberAccess	cp -> Assign		3885831	0					
ANR	3885880	Identifier	cp		3885831	0					
ANR	3885881	Identifier	Assign		3885831	1					
ANR	3885882	ArgumentList	ATTR_DISK		3885831	1					
ANR	3885883	Argument	ATTR_DISK		3885831	0					
ANR	3885884	Identifier	ATTR_DISK		3885831	0					
ANR	3885885	Argument	( int ) c_disk		3885831	1					
ANR	3885886	CastExpression	( int ) c_disk		3885831	0					
ANR	3885887	CastTarget	int		3885831	0					
ANR	3885888	Identifier	c_disk		3885831	1					
ANR	3885889	IfStatement	if ( IS_TIMEOUT ( how_much ) || IS_PUBLIC ( how_much ) )		3885831	1					
ANR	3885890	Condition	IS_TIMEOUT ( how_much ) || IS_PUBLIC ( how_much )	768:5:20603:20645	3885831	0	True				
ANR	3885891	OrExpression	IS_TIMEOUT ( how_much ) || IS_PUBLIC ( how_much )		3885831	0		||			
ANR	3885892	CallExpression	IS_TIMEOUT ( how_much )		3885831	0					
ANR	3885893	Callee	IS_TIMEOUT		3885831	0					
ANR	3885894	Identifier	IS_TIMEOUT		3885831	0					
ANR	3885895	ArgumentList	how_much		3885831	1					
ANR	3885896	Argument	how_much		3885831	0					
ANR	3885897	Identifier	how_much		3885831	0					
ANR	3885898	CallExpression	IS_PUBLIC ( how_much )		3885831	1					
ANR	3885899	Callee	IS_PUBLIC		3885831	0					
ANR	3885900	Identifier	IS_PUBLIC		3885831	0					
ANR	3885901	ArgumentList	how_much		3885831	1					
ANR	3885902	Argument	how_much		3885831	0					
ANR	3885903	Identifier	how_much		3885831	0					
ANR	3885904	CompoundStatement		11:51:257:257	3885831	1					
ANR	3885905	ExpressionStatement	"cp -> Assign ( ATTR_CONDOR_LOAD_AVG , rint ( c_condor_load * 100 ) / 100.0 )"	770:2:20654:20723	3885831	0	True				
ANR	3885906	CallExpression	"cp -> Assign ( ATTR_CONDOR_LOAD_AVG , rint ( c_condor_load * 100 ) / 100.0 )"		3885831	0					
ANR	3885907	Callee	cp -> Assign		3885831	0					
ANR	3885908	PtrMemberAccess	cp -> Assign		3885831	0					
ANR	3885909	Identifier	cp		3885831	0					
ANR	3885910	Identifier	Assign		3885831	1					
ANR	3885911	ArgumentList	ATTR_CONDOR_LOAD_AVG		3885831	1					
ANR	3885912	Argument	ATTR_CONDOR_LOAD_AVG		3885831	0					
ANR	3885913	Identifier	ATTR_CONDOR_LOAD_AVG		3885831	0					
ANR	3885914	Argument	rint ( c_condor_load * 100 ) / 100.0		3885831	1					
ANR	3885915	MultiplicativeExpression	rint ( c_condor_load * 100 ) / 100.0		3885831	0		/			
ANR	3885916	CallExpression	rint ( c_condor_load * 100 )		3885831	0					
ANR	3885917	Callee	rint		3885831	0					
ANR	3885918	Identifier	rint		3885831	0					
ANR	3885919	ArgumentList	c_condor_load * 100		3885831	1					
ANR	3885920	Argument	c_condor_load * 100		3885831	0					
ANR	3885921	MultiplicativeExpression	c_condor_load * 100		3885831	0		*			
ANR	3885922	Identifier	c_condor_load		3885831	0					
ANR	3885923	PrimaryExpression	100		3885831	1					
ANR	3885924	PrimaryExpression	100.0		3885831	1					
ANR	3885925	ExpressionStatement	"cp -> Assign ( ATTR_LOAD_AVG , rint ( ( c_owner_load + c_condor_load ) * 100 ) / 100.0 )"	772:2:20728:20807	3885831	1	True				
ANR	3885926	CallExpression	"cp -> Assign ( ATTR_LOAD_AVG , rint ( ( c_owner_load + c_condor_load ) * 100 ) / 100.0 )"		3885831	0					
ANR	3885927	Callee	cp -> Assign		3885831	0					
ANR	3885928	PtrMemberAccess	cp -> Assign		3885831	0					
ANR	3885929	Identifier	cp		3885831	0					
ANR	3885930	Identifier	Assign		3885831	1					
ANR	3885931	ArgumentList	ATTR_LOAD_AVG		3885831	1					
ANR	3885932	Argument	ATTR_LOAD_AVG		3885831	0					
ANR	3885933	Identifier	ATTR_LOAD_AVG		3885831	0					
ANR	3885934	Argument	rint ( ( c_owner_load + c_condor_load ) * 100 ) / 100.0		3885831	1					
ANR	3885935	MultiplicativeExpression	rint ( ( c_owner_load + c_condor_load ) * 100 ) / 100.0		3885831	0		/			
ANR	3885936	CallExpression	rint ( ( c_owner_load + c_condor_load ) * 100 )		3885831	0					
ANR	3885937	Callee	rint		3885831	0					
ANR	3885938	Identifier	rint		3885831	0					
ANR	3885939	ArgumentList	( c_owner_load + c_condor_load ) * 100		3885831	1					
ANR	3885940	Argument	( c_owner_load + c_condor_load ) * 100		3885831	0					
ANR	3885941	MultiplicativeExpression	( c_owner_load + c_condor_load ) * 100		3885831	0		*			
ANR	3885942	AdditiveExpression	c_owner_load + c_condor_load		3885831	0		+			
ANR	3885943	Identifier	c_owner_load		3885831	0					
ANR	3885944	Identifier	c_condor_load		3885831	1					
ANR	3885945	PrimaryExpression	100		3885831	1					
ANR	3885946	PrimaryExpression	100.0		3885831	1					
ANR	3885947	ExpressionStatement	"cp -> Assign ( ATTR_KEYBOARD_IDLE , ( int ) c_idle )"	774:2:20812:20857	3885831	2	True				
ANR	3885948	CallExpression	"cp -> Assign ( ATTR_KEYBOARD_IDLE , ( int ) c_idle )"		3885831	0					
ANR	3885949	Callee	cp -> Assign		3885831	0					
ANR	3885950	PtrMemberAccess	cp -> Assign		3885831	0					
ANR	3885951	Identifier	cp		3885831	0					
ANR	3885952	Identifier	Assign		3885831	1					
ANR	3885953	ArgumentList	ATTR_KEYBOARD_IDLE		3885831	1					
ANR	3885954	Argument	ATTR_KEYBOARD_IDLE		3885831	0					
ANR	3885955	Identifier	ATTR_KEYBOARD_IDLE		3885831	0					
ANR	3885956	Argument	( int ) c_idle		3885831	1					
ANR	3885957	CastExpression	( int ) c_idle		3885831	0					
ANR	3885958	CastTarget	int		3885831	0					
ANR	3885959	Identifier	c_idle		3885831	1					
ANR	3885960	IfStatement	if ( c_console_idle != - 1 )		3885831	3					
ANR	3885961	Condition	c_console_idle != - 1	778:6:20969:20988	3885831	0	True				
ANR	3885962	EqualityExpression	c_console_idle != - 1		3885831	0		!=			
ANR	3885963	Identifier	c_console_idle		3885831	0					
ANR	3885964	UnaryOperationExpression	- 1		3885831	1					
ANR	3885965	UnaryOperator	-		3885831	0					
ANR	3885966	PrimaryExpression	1		3885831	1					
ANR	3885967	CompoundStatement		21:29:600:600	3885831	1					
ANR	3885968	ExpressionStatement	"cp -> Assign ( ATTR_CONSOLE_IDLE , ( int ) c_console_idle )"	779:3:20997:21049	3885831	0	True				
ANR	3885969	CallExpression	"cp -> Assign ( ATTR_CONSOLE_IDLE , ( int ) c_console_idle )"		3885831	0					
ANR	3885970	Callee	cp -> Assign		3885831	0					
ANR	3885971	PtrMemberAccess	cp -> Assign		3885831	0					
ANR	3885972	Identifier	cp		3885831	0					
ANR	3885973	Identifier	Assign		3885831	1					
ANR	3885974	ArgumentList	ATTR_CONSOLE_IDLE		3885831	1					
ANR	3885975	Argument	ATTR_CONSOLE_IDLE		3885831	0					
ANR	3885976	Identifier	ATTR_CONSOLE_IDLE		3885831	0					
ANR	3885977	Argument	( int ) c_console_idle		3885831	1					
ANR	3885978	CastExpression	( int ) c_console_idle		3885831	0					
ANR	3885979	CastTarget	int		3885831	0					
ANR	3885980	Identifier	c_console_idle		3885831	1					
ANR	3885981	IfStatement	if ( IS_STATIC ( how_much ) || IS_PUBLIC ( how_much ) )		3885831	2					
ANR	3885982	Condition	IS_STATIC ( how_much ) || IS_PUBLIC ( how_much )	783:5:21064:21105	3885831	0	True				
ANR	3885983	OrExpression	IS_STATIC ( how_much ) || IS_PUBLIC ( how_much )		3885831	0		||			
ANR	3885984	CallExpression	IS_STATIC ( how_much )		3885831	0					
ANR	3885985	Callee	IS_STATIC		3885831	0					
ANR	3885986	Identifier	IS_STATIC		3885831	0					
ANR	3885987	ArgumentList	how_much		3885831	1					
ANR	3885988	Argument	how_much		3885831	0					
ANR	3885989	Identifier	how_much		3885831	0					
ANR	3885990	CallExpression	IS_PUBLIC ( how_much )		3885831	1					
ANR	3885991	Callee	IS_PUBLIC		3885831	0					
ANR	3885992	Identifier	IS_PUBLIC		3885831	0					
ANR	3885993	ArgumentList	how_much		3885831	1					
ANR	3885994	Argument	how_much		3885831	0					
ANR	3885995	Identifier	how_much		3885831	0					
ANR	3885996	CompoundStatement		26:50:717:717	3885831	1					
ANR	3885997	ExpressionStatement	"cp -> Assign ( ATTR_MEMORY , c_phys_mem )"	785:2:21114:21151	3885831	0	True				
ANR	3885998	CallExpression	"cp -> Assign ( ATTR_MEMORY , c_phys_mem )"		3885831	0					
ANR	3885999	Callee	cp -> Assign		3885831	0					
ANR	3886000	PtrMemberAccess	cp -> Assign		3885831	0					
ANR	3886001	Identifier	cp		3885831	0					
ANR	3886002	Identifier	Assign		3885831	1					
ANR	3886003	ArgumentList	ATTR_MEMORY		3885831	1					
ANR	3886004	Argument	ATTR_MEMORY		3885831	0					
ANR	3886005	Identifier	ATTR_MEMORY		3885831	0					
ANR	3886006	Argument	c_phys_mem		3885831	1					
ANR	3886007	Identifier	c_phys_mem		3885831	0					
ANR	3886008	ExpressionStatement	"cp -> Assign ( ATTR_CPUS , c_num_cpus )"	787:2:21156:21191	3885831	1	True				
ANR	3886009	CallExpression	"cp -> Assign ( ATTR_CPUS , c_num_cpus )"		3885831	0					
ANR	3886010	Callee	cp -> Assign		3885831	0					
ANR	3886011	PtrMemberAccess	cp -> Assign		3885831	0					
ANR	3886012	Identifier	cp		3885831	0					
ANR	3886013	Identifier	Assign		3885831	1					
ANR	3886014	ArgumentList	ATTR_CPUS		3885831	1					
ANR	3886015	Argument	ATTR_CPUS		3885831	0					
ANR	3886016	Identifier	ATTR_CPUS		3885831	0					
ANR	3886017	Argument	c_num_cpus		3885831	1					
ANR	3886018	Identifier	c_num_cpus		3885831	0					
ANR	3886019	ReturnType	void		3885831	1					
ANR	3886020	Identifier	CpuAttributes :: publish		3885831	2					
ANR	3886021	ParameterList	"ClassAd * cp , amask_t how_much"		3885831	3					
ANR	3886022	Parameter	ClassAd * cp	757:24:20359:20369	3885831	0	True				
ANR	3886023	ParameterType	ClassAd *		3885831	0					
ANR	3886024	Identifier	cp		3885831	1					
ANR	3886025	Parameter	amask_t how_much	757:37:20372:20387	3885831	1	True				
ANR	3886026	ParameterType	amask_t		3885831	0					
ANR	3886027	Identifier	how_much		3885831	1					
ANR	3886028	CFGEntryNode	ENTRY		3885831		True				
ANR	3886029	CFGExitNode	EXIT		3885831		True				
ANR	3886030	Symbol	ATTR_KEYBOARD_IDLE		3885831						
ANR	3886031	Symbol	c_condor_load		3885831						
ANR	3886032	Symbol	IS_TIMEOUT		3885831						
ANR	3886033	Symbol	rint		3885831						
ANR	3886034	Symbol	c_owner_load		3885831						
ANR	3886035	Symbol	ATTR_MEMORY		3885831						
ANR	3886036	Symbol	c_console_idle		3885831						
ANR	3886037	Symbol	ATTR_CPUS		3885831						
ANR	3886038	Symbol	how_much		3885831						
ANR	3886039	Symbol	ATTR_CONSOLE_IDLE		3885831						
ANR	3886040	Symbol	ATTR_VIRTUAL_MEMORY		3885831						
ANR	3886041	Symbol	c_phys_mem		3885831						
ANR	3886042	Symbol	IS_PUBLIC		3885831						
ANR	3886043	Symbol	ATTR_CONDOR_LOAD_AVG		3885831						
ANR	3886044	Symbol	c_disk		3885831						
ANR	3886045	Symbol	ATTR_LOAD_AVG		3885831						
ANR	3886046	Symbol	c_total_disk		3885831						
ANR	3886047	Symbol	c_idle		3885831						
ANR	3886048	Symbol	cp		3885831						
ANR	3886049	Symbol	c_num_cpus		3885831						
ANR	3886050	Symbol	IS_UPDATE		3885831						
ANR	3886051	Symbol	IS_STATIC		3885831						
ANR	3886052	Symbol	c_virt_mem		3885831						
ANR	3886053	Symbol	ATTR_DISK		3885831						
ANR	3886054	Symbol	ATTR_TOTAL_DISK		3885831						
ANR	3886055	Function	CpuAttributes :: compute	792:0:21200:21923							
ANR	3886056	FunctionDef	CpuAttributes :: compute (amask_t how_much)		3886055	0					
ANR	3886057	CompoundStatement		794:0:21248:21923	3886055	0					
ANR	3886058	IdentifierDeclStatement	double val ;	795:1:21251:21261	3886055	0	True				
ANR	3886059	IdentifierDecl	val		3886055	0					
ANR	3886060	IdentifierDeclType	double		3886055	0					
ANR	3886061	Identifier	val		3886055	1					
ANR	3886062	IfStatement	if ( IS_UPDATE ( how_much ) && IS_SHARED ( how_much ) )		3886055	1					
ANR	3886063	Condition	IS_UPDATE ( how_much ) && IS_SHARED ( how_much )	797:5:21269:21310	3886055	0	True				
ANR	3886064	AndExpression	IS_UPDATE ( how_much ) && IS_SHARED ( how_much )		3886055	0		&&			
ANR	3886065	CallExpression	IS_UPDATE ( how_much )		3886055	0					
ANR	3886066	Callee	IS_UPDATE		3886055	0					
ANR	3886067	Identifier	IS_UPDATE		3886055	0					
ANR	3886068	ArgumentList	how_much		3886055	1					
ANR	3886069	Argument	how_much		3886055	0					
ANR	3886070	Identifier	how_much		3886055	0					
ANR	3886071	CallExpression	IS_SHARED ( how_much )		3886055	1					
ANR	3886072	Callee	IS_SHARED		3886055	0					
ANR	3886073	Identifier	IS_SHARED		3886055	0					
ANR	3886074	ArgumentList	how_much		3886055	1					
ANR	3886075	Argument	how_much		3886055	0					
ANR	3886076	Identifier	how_much		3886055	0					
ANR	3886077	CompoundStatement		4:50:65:65	3886055	1					
ANR	3886078	ExpressionStatement	val = map -> virt_mem ( )	800:2:21374:21395	3886055	0	True				
ANR	3886079	AssignmentExpression	val = map -> virt_mem ( )		3886055	0		=			
ANR	3886080	Identifier	val		3886055	0					
ANR	3886081	CallExpression	map -> virt_mem ( )		3886055	1					
ANR	3886082	Callee	map -> virt_mem		3886055	0					
ANR	3886083	PtrMemberAccess	map -> virt_mem		3886055	0					
ANR	3886084	Identifier	map		3886055	0					
ANR	3886085	Identifier	virt_mem		3886055	1					
ANR	3886086	ArgumentList			3886055	1					
ANR	3886087	IfStatement	if ( ! IS_AUTO_SHARE ( c_virt_mem_fraction ) )		3886055	1					
ANR	3886088	Condition	! IS_AUTO_SHARE ( c_virt_mem_fraction )	801:6:21403:21437	3886055	0	True				
ANR	3886089	UnaryOperationExpression	! IS_AUTO_SHARE ( c_virt_mem_fraction )		3886055	0					
ANR	3886090	UnaryOperator	!		3886055	0					
ANR	3886091	CallExpression	IS_AUTO_SHARE ( c_virt_mem_fraction )		3886055	1					
ANR	3886092	Callee	IS_AUTO_SHARE		3886055	0					
ANR	3886093	Identifier	IS_AUTO_SHARE		3886055	0					
ANR	3886094	ArgumentList	c_virt_mem_fraction		3886055	1					
ANR	3886095	Argument	c_virt_mem_fraction		3886055	0					
ANR	3886096	Identifier	c_virt_mem_fraction		3886055	0					
ANR	3886097	CompoundStatement		8:43:191:191	3886055	1					
ANR	3886098	ExpressionStatement	val *= c_virt_mem_fraction	802:3:21445:21471	3886055	0	True				
ANR	3886099	AssignmentExpression	val *= c_virt_mem_fraction		3886055	0		*=			
ANR	3886100	Identifier	val		3886055	0					
ANR	3886101	Identifier	c_virt_mem_fraction		3886055	1					
ANR	3886102	ExpressionStatement	c_virt_mem = ( unsigned long ) floor ( val )	804:2:21479:21519	3886055	2	True				
ANR	3886103	AssignmentExpression	c_virt_mem = ( unsigned long ) floor ( val )		3886055	0		=			
ANR	3886104	Identifier	c_virt_mem		3886055	0					
ANR	3886105	CastExpression	( unsigned long ) floor ( val )		3886055	1					
ANR	3886106	CastTarget	unsigned long		3886055	0					
ANR	3886107	CallExpression	floor ( val )		3886055	1					
ANR	3886108	Callee	floor		3886055	0					
ANR	3886109	Identifier	floor		3886055	0					
ANR	3886110	ArgumentList	val		3886055	1					
ANR	3886111	Argument	val		3886055	0					
ANR	3886112	Identifier	val		3886055	0					
ANR	3886113	IfStatement	if ( IS_TIMEOUT ( how_much ) && ! IS_SHARED ( how_much ) )		3886055	2					
ANR	3886114	Condition	IS_TIMEOUT ( how_much ) && ! IS_SHARED ( how_much )	807:5:21530:21573	3886055	0	True				
ANR	3886115	AndExpression	IS_TIMEOUT ( how_much ) && ! IS_SHARED ( how_much )		3886055	0		&&			
ANR	3886116	CallExpression	IS_TIMEOUT ( how_much )		3886055	0					
ANR	3886117	Callee	IS_TIMEOUT		3886055	0					
ANR	3886118	Identifier	IS_TIMEOUT		3886055	0					
ANR	3886119	ArgumentList	how_much		3886055	1					
ANR	3886120	Argument	how_much		3886055	0					
ANR	3886121	Identifier	how_much		3886055	0					
ANR	3886122	UnaryOperationExpression	! IS_SHARED ( how_much )		3886055	1					
ANR	3886123	UnaryOperator	!		3886055	0					
ANR	3886124	CallExpression	IS_SHARED ( how_much )		3886055	1					
ANR	3886125	Callee	IS_SHARED		3886055	0					
ANR	3886126	Identifier	IS_SHARED		3886055	0					
ANR	3886127	ArgumentList	how_much		3886055	1					
ANR	3886128	Argument	how_much		3886055	0					
ANR	3886129	Identifier	how_much		3886055	0					
ANR	3886130	CompoundStatement		14:52:328:328	3886055	1					
ANR	3886131	ExpressionStatement	c_condor_load = rip -> compute_condor_load ( )	810:2:21646:21688	3886055	0	True				
ANR	3886132	AssignmentExpression	c_condor_load = rip -> compute_condor_load ( )		3886055	0		=			
ANR	3886133	Identifier	c_condor_load		3886055	0					
ANR	3886134	CallExpression	rip -> compute_condor_load ( )		3886055	1					
ANR	3886135	Callee	rip -> compute_condor_load		3886055	0					
ANR	3886136	PtrMemberAccess	rip -> compute_condor_load		3886055	0					
ANR	3886137	Identifier	rip		3886055	0					
ANR	3886138	Identifier	compute_condor_load		3886055	1					
ANR	3886139	ArgumentList			3886055	1					
ANR	3886140	ExpressionStatement	c_total_disk = sysapi_disk_space ( rip -> executeDir ( ) )	812:2:21693:21744	3886055	1	True				
ANR	3886141	AssignmentExpression	c_total_disk = sysapi_disk_space ( rip -> executeDir ( ) )		3886055	0		=			
ANR	3886142	Identifier	c_total_disk		3886055	0					
ANR	3886143	CallExpression	sysapi_disk_space ( rip -> executeDir ( ) )		3886055	1					
ANR	3886144	Callee	sysapi_disk_space		3886055	0					
ANR	3886145	Identifier	sysapi_disk_space		3886055	0					
ANR	3886146	ArgumentList	rip -> executeDir ( )		3886055	1					
ANR	3886147	Argument	rip -> executeDir ( )		3886055	0					
ANR	3886148	CallExpression	rip -> executeDir ( )		3886055	0					
ANR	3886149	Callee	rip -> executeDir		3886055	0					
ANR	3886150	PtrMemberAccess	rip -> executeDir		3886055	0					
ANR	3886151	Identifier	rip		3886055	0					
ANR	3886152	Identifier	executeDir		3886055	1					
ANR	3886153	ArgumentList			3886055	1					
ANR	3886154	IfStatement	if ( IS_UPDATE ( how_much ) )		3886055	2					
ANR	3886155	Condition	IS_UPDATE ( how_much )	813:6:21752:21770	3886055	0	True				
ANR	3886156	CallExpression	IS_UPDATE ( how_much )		3886055	0					
ANR	3886157	Callee	IS_UPDATE		3886055	0					
ANR	3886158	Identifier	IS_UPDATE		3886055	0					
ANR	3886159	ArgumentList	how_much		3886055	1					
ANR	3886160	Argument	how_much		3886055	0					
ANR	3886161	Identifier	how_much		3886055	0					
ANR	3886162	CompoundStatement		20:27:524:524	3886055	1					
ANR	3886163	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Total execute space: %lu\\n"" , c_total_disk )"	814:3:21778:21842	3886055	0	True				
ANR	3886164	CallExpression	"dprintf ( D_FULLDEBUG , ""Total execute space: %lu\\n"" , c_total_disk )"		3886055	0					
ANR	3886165	Callee	dprintf		3886055	0					
ANR	3886166	Identifier	dprintf		3886055	0					
ANR	3886167	ArgumentList	D_FULLDEBUG		3886055	1					
ANR	3886168	Argument	D_FULLDEBUG		3886055	0					
ANR	3886169	Identifier	D_FULLDEBUG		3886055	0					
ANR	3886170	Argument	"""Total execute space: %lu\\n"""		3886055	1					
ANR	3886171	PrimaryExpression	"""Total execute space: %lu\\n"""		3886055	0					
ANR	3886172	Argument	c_total_disk		3886055	2					
ANR	3886173	Identifier	c_total_disk		3886055	0					
ANR	3886174	ExpressionStatement	val = c_total_disk * c_disk_fraction	817:2:21851:21887	3886055	3	True				
ANR	3886175	AssignmentExpression	val = c_total_disk * c_disk_fraction		3886055	0		=			
ANR	3886176	Identifier	val		3886055	0					
ANR	3886177	MultiplicativeExpression	c_total_disk * c_disk_fraction		3886055	1		*			
ANR	3886178	Identifier	c_total_disk		3886055	0					
ANR	3886179	Identifier	c_disk_fraction		3886055	1					
ANR	3886180	ExpressionStatement	c_disk = ( int ) floor ( val )	818:2:21891:21917	3886055	4	True				
ANR	3886181	AssignmentExpression	c_disk = ( int ) floor ( val )		3886055	0		=			
ANR	3886182	Identifier	c_disk		3886055	0					
ANR	3886183	CastExpression	( int ) floor ( val )		3886055	1					
ANR	3886184	CastTarget	int		3886055	0					
ANR	3886185	CallExpression	floor ( val )		3886055	1					
ANR	3886186	Callee	floor		3886055	0					
ANR	3886187	Identifier	floor		3886055	0					
ANR	3886188	ArgumentList	val		3886055	1					
ANR	3886189	Argument	val		3886055	0					
ANR	3886190	Identifier	val		3886055	0					
ANR	3886191	ReturnType	void		3886055	1					
ANR	3886192	Identifier	CpuAttributes :: compute		3886055	2					
ANR	3886193	ParameterList	amask_t how_much		3886055	3					
ANR	3886194	Parameter	amask_t how_much	793:24:21229:21244	3886055	0	True				
ANR	3886195	ParameterType	amask_t		3886055	0					
ANR	3886196	Identifier	how_much		3886055	1					
ANR	3886197	CFGEntryNode	ENTRY		3886055		True				
ANR	3886198	CFGExitNode	EXIT		3886055		True				
ANR	3886199	Symbol	val		3886055						
ANR	3886200	Symbol	c_disk		3886055						
ANR	3886201	Symbol	* rip		3886055						
ANR	3886202	Symbol	c_condor_load		3886055						
ANR	3886203	Symbol	* map		3886055						
ANR	3886204	Symbol	IS_TIMEOUT		3886055						
ANR	3886205	Symbol	sysapi_disk_space		3886055						
ANR	3886206	Symbol	c_total_disk		3886055						
ANR	3886207	Symbol	D_FULLDEBUG		3886055						
ANR	3886208	Symbol	c_virt_mem_fraction		3886055						
ANR	3886209	Symbol	map -> virt_mem		3886055						
ANR	3886210	Symbol	rip -> compute_condor_load		3886055						
ANR	3886211	Symbol	how_much		3886055						
ANR	3886212	Symbol	IS_AUTO_SHARE		3886055						
ANR	3886213	Symbol	IS_UPDATE		3886055						
ANR	3886214	Symbol	IS_SHARED		3886055						
ANR	3886215	Symbol	rip		3886055						
ANR	3886216	Symbol	rip -> executeDir		3886055						
ANR	3886217	Symbol	c_virt_mem		3886055						
ANR	3886218	Symbol	floor		3886055						
ANR	3886219	Symbol	c_disk_fraction		3886055						
ANR	3886220	Symbol	map		3886055						
ANR	3886221	Function	CpuAttributes :: display	822:0:21926:22728							
ANR	3886222	FunctionDef	CpuAttributes :: display (amask_t how_much)		3886221	0					
ANR	3886223	CompoundStatement		824:0:21974:22728	3886221	0					
ANR	3886224	IfStatement	if ( IS_UPDATE ( how_much ) )		3886221	0					
ANR	3886225	Condition	IS_UPDATE ( how_much )	825:5:21981:21999	3886221	0	True				
ANR	3886226	CallExpression	IS_UPDATE ( how_much )		3886221	0					
ANR	3886227	Callee	IS_UPDATE		3886221	0					
ANR	3886228	Identifier	IS_UPDATE		3886221	0					
ANR	3886229	ArgumentList	how_much		3886221	1					
ANR	3886230	Argument	how_much		3886221	0					
ANR	3886231	Identifier	how_much		3886221	0					
ANR	3886232	CompoundStatement		2:27:28:28	3886221	1					
ANR	3886233	ExpressionStatement	"dprintf ( D_KEYBOARD , ""Idle time: %s %-8d %s %d\\n"" , ""Keyboard:"" , ( int ) c_idle , ""Console:"" , ( int ) c_console_idle )"	826:2:22007:22136	3886221	0	True				
ANR	3886234	CallExpression	"dprintf ( D_KEYBOARD , ""Idle time: %s %-8d %s %d\\n"" , ""Keyboard:"" , ( int ) c_idle , ""Console:"" , ( int ) c_console_idle )"		3886221	0					
ANR	3886235	Callee	dprintf		3886221	0					
ANR	3886236	Identifier	dprintf		3886221	0					
ANR	3886237	ArgumentList	D_KEYBOARD		3886221	1					
ANR	3886238	Argument	D_KEYBOARD		3886221	0					
ANR	3886239	Identifier	D_KEYBOARD		3886221	0					
ANR	3886240	Argument	"""Idle time: %s %-8d %s %d\\n"""		3886221	1					
ANR	3886241	PrimaryExpression	"""Idle time: %s %-8d %s %d\\n"""		3886221	0					
ANR	3886242	Argument	"""Keyboard:"""		3886221	2					
ANR	3886243	PrimaryExpression	"""Keyboard:"""		3886221	0					
ANR	3886244	Argument	( int ) c_idle		3886221	3					
ANR	3886245	CastExpression	( int ) c_idle		3886221	0					
ANR	3886246	CastTarget	int		3886221	0					
ANR	3886247	Identifier	c_idle		3886221	1					
ANR	3886248	Argument	"""Console:"""		3886221	4					
ANR	3886249	PrimaryExpression	"""Console:"""		3886221	0					
ANR	3886250	Argument	( int ) c_console_idle		3886221	5					
ANR	3886251	CastExpression	( int ) c_console_idle		3886221	0					
ANR	3886252	CastTarget	int		3886221	0					
ANR	3886253	Identifier	c_console_idle		3886221	1					
ANR	3886254	ExpressionStatement	"dprintf ( D_LOAD , ""%s %.2f  %s %.2f  %s %.2f\\n"" , ""SystemLoad:"" , c_condor_load + c_owner_load , ""CondorLoad:"" , c_condor_load , ""OwnerLoad:"" , c_owner_load )"	831:2:22141:22315	3886221	1	True				
ANR	3886255	CallExpression	"dprintf ( D_LOAD , ""%s %.2f  %s %.2f  %s %.2f\\n"" , ""SystemLoad:"" , c_condor_load + c_owner_load , ""CondorLoad:"" , c_condor_load , ""OwnerLoad:"" , c_owner_load )"		3886221	0					
ANR	3886256	Callee	dprintf		3886221	0					
ANR	3886257	Identifier	dprintf		3886221	0					
ANR	3886258	ArgumentList	D_LOAD		3886221	1					
ANR	3886259	Argument	D_LOAD		3886221	0					
ANR	3886260	Identifier	D_LOAD		3886221	0					
ANR	3886261	Argument	"""%s %.2f  %s %.2f  %s %.2f\\n"""		3886221	1					
ANR	3886262	PrimaryExpression	"""%s %.2f  %s %.2f  %s %.2f\\n"""		3886221	0					
ANR	3886263	Argument	"""SystemLoad:"""		3886221	2					
ANR	3886264	PrimaryExpression	"""SystemLoad:"""		3886221	0					
ANR	3886265	Argument	c_condor_load + c_owner_load		3886221	3					
ANR	3886266	AdditiveExpression	c_condor_load + c_owner_load		3886221	0		+			
ANR	3886267	Identifier	c_condor_load		3886221	0					
ANR	3886268	Identifier	c_owner_load		3886221	1					
ANR	3886269	Argument	"""CondorLoad:"""		3886221	4					
ANR	3886270	PrimaryExpression	"""CondorLoad:"""		3886221	0					
ANR	3886271	Argument	c_condor_load		3886221	5					
ANR	3886272	Identifier	c_condor_load		3886221	0					
ANR	3886273	Argument	"""OwnerLoad:"""		3886221	6					
ANR	3886274	PrimaryExpression	"""OwnerLoad:"""		3886221	0					
ANR	3886275	Argument	c_owner_load		3886221	7					
ANR	3886276	Identifier	c_owner_load		3886221	0					
ANR	3886277	ElseStatement	else		3886221	0					
ANR	3886278	CompoundStatement		13:8:350:350	3886221	0					
ANR	3886279	IfStatement	if ( DebugFlags & D_LOAD )		3886221	0					
ANR	3886280	Condition	DebugFlags & D_LOAD	837:6:22333:22351	3886221	0	True				
ANR	3886281	BitAndExpression	DebugFlags & D_LOAD		3886221	0		&			
ANR	3886282	Identifier	DebugFlags		3886221	0					
ANR	3886283	Identifier	D_LOAD		3886221	1					
ANR	3886284	CompoundStatement		14:28:380:380	3886221	1					
ANR	3886285	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%s %.2f  %s %.2f  %s %.2f\\n"" , ""SystemLoad:"" , c_condor_load + c_owner_load , ""CondorLoad:"" , c_condor_load , ""OwnerLoad:"" , c_owner_load )"	838:3:22360:22543	3886221	0	True				
ANR	3886286	CallExpression	"dprintf ( D_FULLDEBUG , ""%s %.2f  %s %.2f  %s %.2f\\n"" , ""SystemLoad:"" , c_condor_load + c_owner_load , ""CondorLoad:"" , c_condor_load , ""OwnerLoad:"" , c_owner_load )"		3886221	0					
ANR	3886287	Callee	dprintf		3886221	0					
ANR	3886288	Identifier	dprintf		3886221	0					
ANR	3886289	ArgumentList	D_FULLDEBUG		3886221	1					
ANR	3886290	Argument	D_FULLDEBUG		3886221	0					
ANR	3886291	Identifier	D_FULLDEBUG		3886221	0					
ANR	3886292	Argument	"""%s %.2f  %s %.2f  %s %.2f\\n"""		3886221	1					
ANR	3886293	PrimaryExpression	"""%s %.2f  %s %.2f  %s %.2f\\n"""		3886221	0					
ANR	3886294	Argument	"""SystemLoad:"""		3886221	2					
ANR	3886295	PrimaryExpression	"""SystemLoad:"""		3886221	0					
ANR	3886296	Argument	c_condor_load + c_owner_load		3886221	3					
ANR	3886297	AdditiveExpression	c_condor_load + c_owner_load		3886221	0		+			
ANR	3886298	Identifier	c_condor_load		3886221	0					
ANR	3886299	Identifier	c_owner_load		3886221	1					
ANR	3886300	Argument	"""CondorLoad:"""		3886221	4					
ANR	3886301	PrimaryExpression	"""CondorLoad:"""		3886221	0					
ANR	3886302	Argument	c_condor_load		3886221	5					
ANR	3886303	Identifier	c_condor_load		3886221	0					
ANR	3886304	Argument	"""OwnerLoad:"""		3886221	6					
ANR	3886305	PrimaryExpression	"""OwnerLoad:"""		3886221	0					
ANR	3886306	Argument	c_owner_load		3886221	7					
ANR	3886307	Identifier	c_owner_load		3886221	0					
ANR	3886308	IfStatement	if ( DebugFlags & D_KEYBOARD )		3886221	1					
ANR	3886309	Condition	DebugFlags & D_KEYBOARD	844:6:22555:22577	3886221	0	True				
ANR	3886310	BitAndExpression	DebugFlags & D_KEYBOARD		3886221	0		&			
ANR	3886311	Identifier	DebugFlags		3886221	0					
ANR	3886312	Identifier	D_KEYBOARD		3886221	1					
ANR	3886313	CompoundStatement		21:32:606:606	3886221	1					
ANR	3886314	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Idle time: %s %-8d %s %d\\n"" , ""Keyboard:"" , ( int ) c_idle , ""Console:"" , ( int ) c_console_idle )"	845:3:22586:22719	3886221	0	True				
ANR	3886315	CallExpression	"dprintf ( D_FULLDEBUG , ""Idle time: %s %-8d %s %d\\n"" , ""Keyboard:"" , ( int ) c_idle , ""Console:"" , ( int ) c_console_idle )"		3886221	0					
ANR	3886316	Callee	dprintf		3886221	0					
ANR	3886317	Identifier	dprintf		3886221	0					
ANR	3886318	ArgumentList	D_FULLDEBUG		3886221	1					
ANR	3886319	Argument	D_FULLDEBUG		3886221	0					
ANR	3886320	Identifier	D_FULLDEBUG		3886221	0					
ANR	3886321	Argument	"""Idle time: %s %-8d %s %d\\n"""		3886221	1					
ANR	3886322	PrimaryExpression	"""Idle time: %s %-8d %s %d\\n"""		3886221	0					
ANR	3886323	Argument	"""Keyboard:"""		3886221	2					
ANR	3886324	PrimaryExpression	"""Keyboard:"""		3886221	0					
ANR	3886325	Argument	( int ) c_idle		3886221	3					
ANR	3886326	CastExpression	( int ) c_idle		3886221	0					
ANR	3886327	CastTarget	int		3886221	0					
ANR	3886328	Identifier	c_idle		3886221	1					
ANR	3886329	Argument	"""Console:"""		3886221	4					
ANR	3886330	PrimaryExpression	"""Console:"""		3886221	0					
ANR	3886331	Argument	( int ) c_console_idle		3886221	5					
ANR	3886332	CastExpression	( int ) c_console_idle		3886221	0					
ANR	3886333	CastTarget	int		3886221	0					
ANR	3886334	Identifier	c_console_idle		3886221	1					
ANR	3886335	ReturnType	void		3886221	1					
ANR	3886336	Identifier	CpuAttributes :: display		3886221	2					
ANR	3886337	ParameterList	amask_t how_much		3886221	3					
ANR	3886338	Parameter	amask_t how_much	823:24:21955:21970	3886221	0	True				
ANR	3886339	ParameterType	amask_t		3886221	0					
ANR	3886340	Identifier	how_much		3886221	1					
ANR	3886341	CFGEntryNode	ENTRY		3886221		True				
ANR	3886342	CFGExitNode	EXIT		3886221		True				
ANR	3886343	Symbol	how_much		3886221						
ANR	3886344	Symbol	D_KEYBOARD		3886221						
ANR	3886345	Symbol	c_condor_load		3886221						
ANR	3886346	Symbol	IS_UPDATE		3886221						
ANR	3886347	Symbol	D_LOAD		3886221						
ANR	3886348	Symbol	DebugFlags		3886221						
ANR	3886349	Symbol	D_FULLDEBUG		3886221						
ANR	3886350	Symbol	c_idle		3886221						
ANR	3886351	Symbol	c_owner_load		3886221						
ANR	3886352	Symbol	c_console_idle		3886221						
ANR	3886353	Function	CpuAttributes :: show_totals	854:0:22733:23428							
ANR	3886354	FunctionDef	CpuAttributes :: show_totals (int dflag)		3886353	0					
ANR	3886355	CompoundStatement		856:0:22778:23428	3886353	0					
ANR	3886356	Statement	::	857:1:22781:22782	3886353	0	True				
ANR	3886357	ExpressionStatement	"dprintf ( dflag | D_NOHEADER , ""Cpus: %d"" , c_num_cpus )"	857:3:22783:22840	3886353	1	True				
ANR	3886358	CallExpression	"dprintf ( dflag | D_NOHEADER , ""Cpus: %d"" , c_num_cpus )"		3886353	0					
ANR	3886359	Callee	dprintf		3886353	0					
ANR	3886360	Identifier	dprintf		3886353	0					
ANR	3886361	ArgumentList	dflag | D_NOHEADER		3886353	1					
ANR	3886362	Argument	dflag | D_NOHEADER		3886353	0					
ANR	3886363	InclusiveOrExpression	dflag | D_NOHEADER		3886353	0		|			
ANR	3886364	Identifier	dflag		3886353	0					
ANR	3886365	Identifier	D_NOHEADER		3886353	1					
ANR	3886366	Argument	"""Cpus: %d"""		3886353	1					
ANR	3886367	PrimaryExpression	"""Cpus: %d"""		3886353	0					
ANR	3886368	Argument	c_num_cpus		3886353	2					
ANR	3886369	Identifier	c_num_cpus		3886353	0					
ANR	3886370	IfStatement	if ( c_phys_mem == AUTO_MEM )		3886353	2					
ANR	3886371	Condition	c_phys_mem == AUTO_MEM	860:5:22848:22869	3886353	0	True				
ANR	3886372	EqualityExpression	c_phys_mem == AUTO_MEM		3886353	0		==			
ANR	3886373	Identifier	c_phys_mem		3886353	0					
ANR	3886374	Identifier	AUTO_MEM		3886353	1					
ANR	3886375	CompoundStatement		5:30:94:94	3886353	1					
ANR	3886376	Statement	::	861:2:22877:22878	3886353	0	True				
ANR	3886377	ExpressionStatement	"dprintf ( dflag | D_NOHEADER , "", Memory: auto"" )"	861:4:22879:22934	3886353	1	True				
ANR	3886378	CallExpression	"dprintf ( dflag | D_NOHEADER , "", Memory: auto"" )"		3886353	0					
ANR	3886379	Callee	dprintf		3886353	0					
ANR	3886380	Identifier	dprintf		3886353	0					
ANR	3886381	ArgumentList	dflag | D_NOHEADER		3886353	1					
ANR	3886382	Argument	dflag | D_NOHEADER		3886353	0					
ANR	3886383	InclusiveOrExpression	dflag | D_NOHEADER		3886353	0		|			
ANR	3886384	Identifier	dflag		3886353	0					
ANR	3886385	Identifier	D_NOHEADER		3886353	1					
ANR	3886386	Argument	""", Memory: auto"""		3886353	1					
ANR	3886387	PrimaryExpression	""", Memory: auto"""		3886353	0					
ANR	3886388	ElseStatement	else		3886353	0					
ANR	3886389	CompoundStatement		9:6:166:166	3886353	0					
ANR	3886390	Statement	::	865:2:22949:22950	3886353	0	True				
ANR	3886391	ExpressionStatement	"dprintf ( dflag | D_NOHEADER , "", Memory: %d"" , c_phys_mem )"	865:4:22951:23015	3886353	1	True				
ANR	3886392	CallExpression	"dprintf ( dflag | D_NOHEADER , "", Memory: %d"" , c_phys_mem )"		3886353	0					
ANR	3886393	Callee	dprintf		3886353	0					
ANR	3886394	Identifier	dprintf		3886353	0					
ANR	3886395	ArgumentList	dflag | D_NOHEADER		3886353	1					
ANR	3886396	Argument	dflag | D_NOHEADER		3886353	0					
ANR	3886397	InclusiveOrExpression	dflag | D_NOHEADER		3886353	0		|			
ANR	3886398	Identifier	dflag		3886353	0					
ANR	3886399	Identifier	D_NOHEADER		3886353	1					
ANR	3886400	Argument	""", Memory: %d"""		3886353	1					
ANR	3886401	PrimaryExpression	""", Memory: %d"""		3886353	0					
ANR	3886402	Argument	c_phys_mem		3886353	2					
ANR	3886403	Identifier	c_phys_mem		3886353	0					
ANR	3886404	IfStatement	if ( IS_AUTO_SHARE ( c_virt_mem_fraction ) )		3886353	3					
ANR	3886405	Condition	IS_AUTO_SHARE ( c_virt_mem_fraction )	870:5:23028:23061	3886353	0	True				
ANR	3886406	CallExpression	IS_AUTO_SHARE ( c_virt_mem_fraction )		3886353	0					
ANR	3886407	Callee	IS_AUTO_SHARE		3886353	0					
ANR	3886408	Identifier	IS_AUTO_SHARE		3886353	0					
ANR	3886409	ArgumentList	c_virt_mem_fraction		3886353	1					
ANR	3886410	Argument	c_virt_mem_fraction		3886353	0					
ANR	3886411	Identifier	c_virt_mem_fraction		3886353	0					
ANR	3886412	CompoundStatement		15:42:286:286	3886353	1					
ANR	3886413	Statement	::	871:2:23069:23070	3886353	0	True				
ANR	3886414	ExpressionStatement	"dprintf ( dflag | D_NOHEADER , "", Swap: auto"" )"	871:4:23071:23124	3886353	1	True				
ANR	3886415	CallExpression	"dprintf ( dflag | D_NOHEADER , "", Swap: auto"" )"		3886353	0					
ANR	3886416	Callee	dprintf		3886353	0					
ANR	3886417	Identifier	dprintf		3886353	0					
ANR	3886418	ArgumentList	dflag | D_NOHEADER		3886353	1					
ANR	3886419	Argument	dflag | D_NOHEADER		3886353	0					
ANR	3886420	InclusiveOrExpression	dflag | D_NOHEADER		3886353	0		|			
ANR	3886421	Identifier	dflag		3886353	0					
ANR	3886422	Identifier	D_NOHEADER		3886353	1					
ANR	3886423	Argument	""", Swap: auto"""		3886353	1					
ANR	3886424	PrimaryExpression	""", Swap: auto"""		3886353	0					
ANR	3886425	ElseStatement	else		3886353	0					
ANR	3886426	CompoundStatement		19:6:356:356	3886353	0					
ANR	3886427	Statement	::	875:2:23139:23140	3886353	0	True				
ANR	3886428	ExpressionStatement	"dprintf ( dflag | D_NOHEADER , "", Swap: %.2f%%"" , 100 * c_virt_mem_fraction )"	875:4:23141:23221	3886353	1	True				
ANR	3886429	CallExpression	"dprintf ( dflag | D_NOHEADER , "", Swap: %.2f%%"" , 100 * c_virt_mem_fraction )"		3886353	0					
ANR	3886430	Callee	dprintf		3886353	0					
ANR	3886431	Identifier	dprintf		3886353	0					
ANR	3886432	ArgumentList	dflag | D_NOHEADER		3886353	1					
ANR	3886433	Argument	dflag | D_NOHEADER		3886353	0					
ANR	3886434	InclusiveOrExpression	dflag | D_NOHEADER		3886353	0		|			
ANR	3886435	Identifier	dflag		3886353	0					
ANR	3886436	Identifier	D_NOHEADER		3886353	1					
ANR	3886437	Argument	""", Swap: %.2f%%"""		3886353	1					
ANR	3886438	PrimaryExpression	""", Swap: %.2f%%"""		3886353	0					
ANR	3886439	Argument	100 * c_virt_mem_fraction		3886353	2					
ANR	3886440	MultiplicativeExpression	100 * c_virt_mem_fraction		3886353	0		*			
ANR	3886441	PrimaryExpression	100		3886353	0					
ANR	3886442	Identifier	c_virt_mem_fraction		3886353	1					
ANR	3886443	IfStatement	if ( IS_AUTO_SHARE ( c_disk_fraction ) )		3886353	4					
ANR	3886444	Condition	IS_AUTO_SHARE ( c_disk_fraction )	880:5:23234:23263	3886353	0	True				
ANR	3886445	CallExpression	IS_AUTO_SHARE ( c_disk_fraction )		3886353	0					
ANR	3886446	Callee	IS_AUTO_SHARE		3886353	0					
ANR	3886447	Identifier	IS_AUTO_SHARE		3886353	0					
ANR	3886448	ArgumentList	c_disk_fraction		3886353	1					
ANR	3886449	Argument	c_disk_fraction		3886353	0					
ANR	3886450	Identifier	c_disk_fraction		3886353	0					
ANR	3886451	CompoundStatement		25:38:488:488	3886353	1					
ANR	3886452	Statement	::	881:2:23271:23272	3886353	0	True				
ANR	3886453	ExpressionStatement	"dprintf ( dflag | D_NOHEADER , "", Disk: auto\\n"" )"	881:4:23273:23328	3886353	1	True				
ANR	3886454	CallExpression	"dprintf ( dflag | D_NOHEADER , "", Disk: auto\\n"" )"		3886353	0					
ANR	3886455	Callee	dprintf		3886353	0					
ANR	3886456	Identifier	dprintf		3886353	0					
ANR	3886457	ArgumentList	dflag | D_NOHEADER		3886353	1					
ANR	3886458	Argument	dflag | D_NOHEADER		3886353	0					
ANR	3886459	InclusiveOrExpression	dflag | D_NOHEADER		3886353	0		|			
ANR	3886460	Identifier	dflag		3886353	0					
ANR	3886461	Identifier	D_NOHEADER		3886353	1					
ANR	3886462	Argument	""", Disk: auto\\n"""		3886353	1					
ANR	3886463	PrimaryExpression	""", Disk: auto\\n"""		3886353	0					
ANR	3886464	ElseStatement	else		3886353	0					
ANR	3886465	CompoundStatement		29:6:560:560	3886353	0					
ANR	3886466	Statement	::	885:2:23343:23344	3886353	0	True				
ANR	3886467	ExpressionStatement	"dprintf ( dflag | D_NOHEADER , "", Disk: %.2f%%\\n"" , 100 * c_disk_fraction )"	885:4:23345:23423	3886353	1	True				
ANR	3886468	CallExpression	"dprintf ( dflag | D_NOHEADER , "", Disk: %.2f%%\\n"" , 100 * c_disk_fraction )"		3886353	0					
ANR	3886469	Callee	dprintf		3886353	0					
ANR	3886470	Identifier	dprintf		3886353	0					
ANR	3886471	ArgumentList	dflag | D_NOHEADER		3886353	1					
ANR	3886472	Argument	dflag | D_NOHEADER		3886353	0					
ANR	3886473	InclusiveOrExpression	dflag | D_NOHEADER		3886353	0		|			
ANR	3886474	Identifier	dflag		3886353	0					
ANR	3886475	Identifier	D_NOHEADER		3886353	1					
ANR	3886476	Argument	""", Disk: %.2f%%\\n"""		3886353	1					
ANR	3886477	PrimaryExpression	""", Disk: %.2f%%\\n"""		3886353	0					
ANR	3886478	Argument	100 * c_disk_fraction		3886353	2					
ANR	3886479	MultiplicativeExpression	100 * c_disk_fraction		3886353	0		*			
ANR	3886480	PrimaryExpression	100		3886353	0					
ANR	3886481	Identifier	c_disk_fraction		3886353	1					
ANR	3886482	ReturnType	void		3886353	1					
ANR	3886483	Identifier	CpuAttributes :: show_totals		3886353	2					
ANR	3886484	ParameterList	int dflag		3886353	3					
ANR	3886485	Parameter	int dflag	855:28:22766:22774	3886353	0	True				
ANR	3886486	ParameterType	int		3886353	0					
ANR	3886487	Identifier	dflag		3886353	1					
ANR	3886488	CFGEntryNode	ENTRY		3886353		True				
ANR	3886489	CFGExitNode	EXIT		3886353		True				
ANR	3886490	Symbol	dflag		3886353						
ANR	3886491	Symbol	IS_AUTO_SHARE		3886353						
ANR	3886492	Symbol	c_phys_mem		3886353						
ANR	3886493	Symbol	c_virt_mem_fraction		3886353						
ANR	3886494	Symbol	c_disk_fraction		3886353						
ANR	3886495	Symbol	D_NOHEADER		3886353						
ANR	3886496	Symbol	c_num_cpus		3886353						
ANR	3886497	Symbol	AUTO_MEM		3886353						
ANR	3886498	Function	CpuAttributes :: dprintf	891:0:23432:23591							
ANR	3886499	FunctionDef	"CpuAttributes :: dprintf (int flags , const char * fmt)"		3886498	0					
ANR	3886500	CompoundStatement		893:0:23495:23591	3886498	0					
ANR	3886501	IdentifierDeclStatement	va_list args ;	894:1:23498:23510	3886498	0	True				
ANR	3886502	IdentifierDecl	args		3886498	0					
ANR	3886503	IdentifierDeclType	va_list		3886498	0					
ANR	3886504	Identifier	args		3886498	1					
ANR	3886505	ExpressionStatement	"va_start ( args , fmt )"	895:1:23513:23534	3886498	1	True				
ANR	3886506	CallExpression	"va_start ( args , fmt )"		3886498	0					
ANR	3886507	Callee	va_start		3886498	0					
ANR	3886508	Identifier	va_start		3886498	0					
ANR	3886509	ArgumentList	args		3886498	1					
ANR	3886510	Argument	args		3886498	0					
ANR	3886511	Identifier	args		3886498	0					
ANR	3886512	Argument	fmt		3886498	1					
ANR	3886513	Identifier	fmt		3886498	0					
ANR	3886514	ExpressionStatement	"rip -> dprintf_va ( flags , fmt , args )"	896:1:23537:23572	3886498	2	True				
ANR	3886515	CallExpression	"rip -> dprintf_va ( flags , fmt , args )"		3886498	0					
ANR	3886516	Callee	rip -> dprintf_va		3886498	0					
ANR	3886517	PtrMemberAccess	rip -> dprintf_va		3886498	0					
ANR	3886518	Identifier	rip		3886498	0					
ANR	3886519	Identifier	dprintf_va		3886498	1					
ANR	3886520	ArgumentList	flags		3886498	1					
ANR	3886521	Argument	flags		3886498	0					
ANR	3886522	Identifier	flags		3886498	0					
ANR	3886523	Argument	fmt		3886498	1					
ANR	3886524	Identifier	fmt		3886498	0					
ANR	3886525	Argument	args		3886498	2					
ANR	3886526	Identifier	args		3886498	0					
ANR	3886527	ExpressionStatement	va_end ( args )	897:1:23575:23589	3886498	3	True				
ANR	3886528	CallExpression	va_end ( args )		3886498	0					
ANR	3886529	Callee	va_end		3886498	0					
ANR	3886530	Identifier	va_end		3886498	0					
ANR	3886531	ArgumentList	args		3886498	1					
ANR	3886532	Argument	args		3886498	0					
ANR	3886533	Identifier	args		3886498	0					
ANR	3886534	ReturnType	void		3886498	1					
ANR	3886535	Identifier	CpuAttributes :: dprintf		3886498	2					
ANR	3886536	ParameterList	"int flags , const char * fmt"		3886498	3					
ANR	3886537	Parameter	int flags	892:24:23461:23469	3886498	0	True				
ANR	3886538	ParameterType	int		3886498	0					
ANR	3886539	Identifier	flags		3886498	1					
ANR	3886540	Parameter	const char * fmt	892:35:23472:23486	3886498	1	True				
ANR	3886541	ParameterType	const char *		3886498	0					
ANR	3886542	Identifier	fmt		3886498	1					
ANR	3886543	CFGEntryNode	ENTRY		3886498		True				
ANR	3886544	CFGExitNode	EXIT		3886498		True				
ANR	3886545	Symbol	args		3886498						
ANR	3886546	Symbol	flags		3886498						
ANR	3886547	Symbol	rip		3886498						
ANR	3886548	Symbol	fmt		3886498						
ANR	3886549	Function	operator +=	902:15:23625:24055							
ANR	3886550	FunctionDef	operator += (CpuAttributes & rhs)		3886549	0					
ANR	3886551	CompoundStatement		903:0:23658:24055	3886549	0					
ANR	3886552	ExpressionStatement	c_num_cpus += rhs . c_num_cpus	904:1:23661:23689	3886549	0	True				
ANR	3886553	AssignmentExpression	c_num_cpus += rhs . c_num_cpus		3886549	0		+=			
ANR	3886554	Identifier	c_num_cpus		3886549	0					
ANR	3886555	MemberAccess	rhs . c_num_cpus		3886549	1					
ANR	3886556	Identifier	rhs		3886549	0					
ANR	3886557	Identifier	c_num_cpus		3886549	1					
ANR	3886558	ExpressionStatement	c_phys_mem += rhs . c_phys_mem	905:1:23692:23720	3886549	1	True				
ANR	3886559	AssignmentExpression	c_phys_mem += rhs . c_phys_mem		3886549	0		+=			
ANR	3886560	Identifier	c_phys_mem		3886549	0					
ANR	3886561	MemberAccess	rhs . c_phys_mem		3886549	1					
ANR	3886562	Identifier	rhs		3886549	0					
ANR	3886563	Identifier	c_phys_mem		3886549	1					
ANR	3886564	IfStatement	if ( ! IS_AUTO_SHARE ( rhs . c_virt_mem_fraction ) && ! IS_AUTO_SHARE ( c_virt_mem_fraction ) )		3886549	2					
ANR	3886565	Condition	! IS_AUTO_SHARE ( rhs . c_virt_mem_fraction ) && ! IS_AUTO_SHARE ( c_virt_mem_fraction )	906:5:23727:23806	3886549	0	True				
ANR	3886566	AndExpression	! IS_AUTO_SHARE ( rhs . c_virt_mem_fraction ) && ! IS_AUTO_SHARE ( c_virt_mem_fraction )		3886549	0		&&			
ANR	3886567	UnaryOperationExpression	! IS_AUTO_SHARE ( rhs . c_virt_mem_fraction )		3886549	0					
ANR	3886568	UnaryOperator	!		3886549	0					
ANR	3886569	CallExpression	IS_AUTO_SHARE ( rhs . c_virt_mem_fraction )		3886549	1					
ANR	3886570	Callee	IS_AUTO_SHARE		3886549	0					
ANR	3886571	Identifier	IS_AUTO_SHARE		3886549	0					
ANR	3886572	ArgumentList	rhs . c_virt_mem_fraction		3886549	1					
ANR	3886573	Argument	rhs . c_virt_mem_fraction		3886549	0					
ANR	3886574	MemberAccess	rhs . c_virt_mem_fraction		3886549	0					
ANR	3886575	Identifier	rhs		3886549	0					
ANR	3886576	Identifier	c_virt_mem_fraction		3886549	1					
ANR	3886577	UnaryOperationExpression	! IS_AUTO_SHARE ( c_virt_mem_fraction )		3886549	1					
ANR	3886578	UnaryOperator	!		3886549	0					
ANR	3886579	CallExpression	IS_AUTO_SHARE ( c_virt_mem_fraction )		3886549	1					
ANR	3886580	Callee	IS_AUTO_SHARE		3886549	0					
ANR	3886581	Identifier	IS_AUTO_SHARE		3886549	0					
ANR	3886582	ArgumentList	c_virt_mem_fraction		3886549	1					
ANR	3886583	Argument	c_virt_mem_fraction		3886549	0					
ANR	3886584	Identifier	c_virt_mem_fraction		3886549	0					
ANR	3886585	CompoundStatement		5:39:150:150	3886549	1					
ANR	3886586	ExpressionStatement	c_virt_mem_fraction += rhs . c_virt_mem_fraction	908:2:23813:23859	3886549	0	True				
ANR	3886587	AssignmentExpression	c_virt_mem_fraction += rhs . c_virt_mem_fraction		3886549	0		+=			
ANR	3886588	Identifier	c_virt_mem_fraction		3886549	0					
ANR	3886589	MemberAccess	rhs . c_virt_mem_fraction		3886549	1					
ANR	3886590	Identifier	rhs		3886549	0					
ANR	3886591	Identifier	c_virt_mem_fraction		3886549	1					
ANR	3886592	IfStatement	if ( ! IS_AUTO_SHARE ( rhs . c_disk_fraction ) && ! IS_AUTO_SHARE ( c_disk_fraction ) )		3886549	3					
ANR	3886593	Condition	! IS_AUTO_SHARE ( rhs . c_disk_fraction ) && ! IS_AUTO_SHARE ( c_disk_fraction )	910:5:23869:23940	3886549	0	True				
ANR	3886594	AndExpression	! IS_AUTO_SHARE ( rhs . c_disk_fraction ) && ! IS_AUTO_SHARE ( c_disk_fraction )		3886549	0		&&			
ANR	3886595	UnaryOperationExpression	! IS_AUTO_SHARE ( rhs . c_disk_fraction )		3886549	0					
ANR	3886596	UnaryOperator	!		3886549	0					
ANR	3886597	CallExpression	IS_AUTO_SHARE ( rhs . c_disk_fraction )		3886549	1					
ANR	3886598	Callee	IS_AUTO_SHARE		3886549	0					
ANR	3886599	Identifier	IS_AUTO_SHARE		3886549	0					
ANR	3886600	ArgumentList	rhs . c_disk_fraction		3886549	1					
ANR	3886601	Argument	rhs . c_disk_fraction		3886549	0					
ANR	3886602	MemberAccess	rhs . c_disk_fraction		3886549	0					
ANR	3886603	Identifier	rhs		3886549	0					
ANR	3886604	Identifier	c_disk_fraction		3886549	1					
ANR	3886605	UnaryOperationExpression	! IS_AUTO_SHARE ( c_disk_fraction )		3886549	1					
ANR	3886606	UnaryOperator	!		3886549	0					
ANR	3886607	CallExpression	IS_AUTO_SHARE ( c_disk_fraction )		3886549	1					
ANR	3886608	Callee	IS_AUTO_SHARE		3886549	0					
ANR	3886609	Identifier	IS_AUTO_SHARE		3886549	0					
ANR	3886610	ArgumentList	c_disk_fraction		3886549	1					
ANR	3886611	Argument	c_disk_fraction		3886549	0					
ANR	3886612	Identifier	c_disk_fraction		3886549	0					
ANR	3886613	CompoundStatement		9:35:284:284	3886549	1					
ANR	3886614	ExpressionStatement	c_disk_fraction += rhs . c_disk_fraction	912:2:23947:23985	3886549	0	True				
ANR	3886615	AssignmentExpression	c_disk_fraction += rhs . c_disk_fraction		3886549	0		+=			
ANR	3886616	Identifier	c_disk_fraction		3886549	0					
ANR	3886617	MemberAccess	rhs . c_disk_fraction		3886549	1					
ANR	3886618	Identifier	rhs		3886549	0					
ANR	3886619	Identifier	c_disk_fraction		3886549	1					
ANR	3886620	ExpressionStatement	compute ( A_TIMEOUT | A_UPDATE )	915:1:23992:24023	3886549	4	True				
ANR	3886621	CallExpression	compute ( A_TIMEOUT | A_UPDATE )		3886549	0					
ANR	3886622	Callee	compute		3886549	0					
ANR	3886623	Identifier	compute		3886549	0					
ANR	3886624	ArgumentList	A_TIMEOUT | A_UPDATE		3886549	1					
ANR	3886625	Argument	A_TIMEOUT | A_UPDATE		3886549	0					
ANR	3886626	InclusiveOrExpression	A_TIMEOUT | A_UPDATE		3886549	0		|			
ANR	3886627	Identifier	A_TIMEOUT		3886549	0					
ANR	3886628	Identifier	A_UPDATE		3886549	1					
ANR	3886629	ReturnStatement	return * this ;	917:1:24041:24053	3886549	5	True				
ANR	3886630	UnaryOperationExpression	* this		3886549	0					
ANR	3886631	UnaryOperator	*		3886549	0					
ANR	3886632	Identifier	this		3886549	1					
ANR	3886633	Identifier	operator +=		3886549	1					
ANR	3886634	ParameterList	CpuAttributes & rhs		3886549	2					
ANR	3886635	Parameter	CpuAttributes & rhs	902:27:23637:23654	3886549	0	True				
ANR	3886636	ParameterType	CpuAttributes &		3886549	0					
ANR	3886637	Identifier	rhs		3886549	1					
ANR	3886638	CFGEntryNode	ENTRY		3886549		True				
ANR	3886639	CFGExitNode	EXIT		3886549		True				
ANR	3886640	Symbol	A_UPDATE		3886549						
ANR	3886641	Symbol	this		3886549						
ANR	3886642	Symbol	A_TIMEOUT		3886549						
ANR	3886643	Symbol	rhs . c_disk_fraction		3886549						
ANR	3886644	Symbol	c_virt_mem_fraction		3886549						
ANR	3886645	Symbol	rhs . c_virt_mem_fraction		3886549						
ANR	3886646	Symbol	c_num_cpus		3886549						
ANR	3886647	Symbol	* this		3886549						
ANR	3886648	Symbol	IS_AUTO_SHARE		3886549						
ANR	3886649	Symbol	rhs . c_phys_mem		3886549						
ANR	3886650	Symbol	c_phys_mem		3886549						
ANR	3886651	Symbol	rhs . c_num_cpus		3886549						
ANR	3886652	Symbol	rhs		3886549						
ANR	3886653	Symbol	c_disk_fraction		3886549						
ANR	3886654	Function	operator -=	921:15:24088:24518							
ANR	3886655	FunctionDef	operator -= (CpuAttributes & rhs)		3886654	0					
ANR	3886656	CompoundStatement		922:0:24121:24518	3886654	0					
ANR	3886657	ExpressionStatement	c_num_cpus -= rhs . c_num_cpus	923:1:24124:24152	3886654	0	True				
ANR	3886658	AssignmentExpression	c_num_cpus -= rhs . c_num_cpus		3886654	0		-=			
ANR	3886659	Identifier	c_num_cpus		3886654	0					
ANR	3886660	MemberAccess	rhs . c_num_cpus		3886654	1					
ANR	3886661	Identifier	rhs		3886654	0					
ANR	3886662	Identifier	c_num_cpus		3886654	1					
ANR	3886663	ExpressionStatement	c_phys_mem -= rhs . c_phys_mem	924:1:24155:24183	3886654	1	True				
ANR	3886664	AssignmentExpression	c_phys_mem -= rhs . c_phys_mem		3886654	0		-=			
ANR	3886665	Identifier	c_phys_mem		3886654	0					
ANR	3886666	MemberAccess	rhs . c_phys_mem		3886654	1					
ANR	3886667	Identifier	rhs		3886654	0					
ANR	3886668	Identifier	c_phys_mem		3886654	1					
ANR	3886669	IfStatement	if ( ! IS_AUTO_SHARE ( rhs . c_virt_mem_fraction ) && ! IS_AUTO_SHARE ( c_virt_mem_fraction ) )		3886654	2					
ANR	3886670	Condition	! IS_AUTO_SHARE ( rhs . c_virt_mem_fraction ) && ! IS_AUTO_SHARE ( c_virt_mem_fraction )	925:5:24190:24269	3886654	0	True				
ANR	3886671	AndExpression	! IS_AUTO_SHARE ( rhs . c_virt_mem_fraction ) && ! IS_AUTO_SHARE ( c_virt_mem_fraction )		3886654	0		&&			
ANR	3886672	UnaryOperationExpression	! IS_AUTO_SHARE ( rhs . c_virt_mem_fraction )		3886654	0					
ANR	3886673	UnaryOperator	!		3886654	0					
ANR	3886674	CallExpression	IS_AUTO_SHARE ( rhs . c_virt_mem_fraction )		3886654	1					
ANR	3886675	Callee	IS_AUTO_SHARE		3886654	0					
ANR	3886676	Identifier	IS_AUTO_SHARE		3886654	0					
ANR	3886677	ArgumentList	rhs . c_virt_mem_fraction		3886654	1					
ANR	3886678	Argument	rhs . c_virt_mem_fraction		3886654	0					
ANR	3886679	MemberAccess	rhs . c_virt_mem_fraction		3886654	0					
ANR	3886680	Identifier	rhs		3886654	0					
ANR	3886681	Identifier	c_virt_mem_fraction		3886654	1					
ANR	3886682	UnaryOperationExpression	! IS_AUTO_SHARE ( c_virt_mem_fraction )		3886654	1					
ANR	3886683	UnaryOperator	!		3886654	0					
ANR	3886684	CallExpression	IS_AUTO_SHARE ( c_virt_mem_fraction )		3886654	1					
ANR	3886685	Callee	IS_AUTO_SHARE		3886654	0					
ANR	3886686	Identifier	IS_AUTO_SHARE		3886654	0					
ANR	3886687	ArgumentList	c_virt_mem_fraction		3886654	1					
ANR	3886688	Argument	c_virt_mem_fraction		3886654	0					
ANR	3886689	Identifier	c_virt_mem_fraction		3886654	0					
ANR	3886690	CompoundStatement		5:39:150:150	3886654	1					
ANR	3886691	ExpressionStatement	c_virt_mem_fraction -= rhs . c_virt_mem_fraction	927:2:24276:24322	3886654	0	True				
ANR	3886692	AssignmentExpression	c_virt_mem_fraction -= rhs . c_virt_mem_fraction		3886654	0		-=			
ANR	3886693	Identifier	c_virt_mem_fraction		3886654	0					
ANR	3886694	MemberAccess	rhs . c_virt_mem_fraction		3886654	1					
ANR	3886695	Identifier	rhs		3886654	0					
ANR	3886696	Identifier	c_virt_mem_fraction		3886654	1					
ANR	3886697	IfStatement	if ( ! IS_AUTO_SHARE ( rhs . c_disk_fraction ) && ! IS_AUTO_SHARE ( c_disk_fraction ) )		3886654	3					
ANR	3886698	Condition	! IS_AUTO_SHARE ( rhs . c_disk_fraction ) && ! IS_AUTO_SHARE ( c_disk_fraction )	929:5:24332:24403	3886654	0	True				
ANR	3886699	AndExpression	! IS_AUTO_SHARE ( rhs . c_disk_fraction ) && ! IS_AUTO_SHARE ( c_disk_fraction )		3886654	0		&&			
ANR	3886700	UnaryOperationExpression	! IS_AUTO_SHARE ( rhs . c_disk_fraction )		3886654	0					
ANR	3886701	UnaryOperator	!		3886654	0					
ANR	3886702	CallExpression	IS_AUTO_SHARE ( rhs . c_disk_fraction )		3886654	1					
ANR	3886703	Callee	IS_AUTO_SHARE		3886654	0					
ANR	3886704	Identifier	IS_AUTO_SHARE		3886654	0					
ANR	3886705	ArgumentList	rhs . c_disk_fraction		3886654	1					
ANR	3886706	Argument	rhs . c_disk_fraction		3886654	0					
ANR	3886707	MemberAccess	rhs . c_disk_fraction		3886654	0					
ANR	3886708	Identifier	rhs		3886654	0					
ANR	3886709	Identifier	c_disk_fraction		3886654	1					
ANR	3886710	UnaryOperationExpression	! IS_AUTO_SHARE ( c_disk_fraction )		3886654	1					
ANR	3886711	UnaryOperator	!		3886654	0					
ANR	3886712	CallExpression	IS_AUTO_SHARE ( c_disk_fraction )		3886654	1					
ANR	3886713	Callee	IS_AUTO_SHARE		3886654	0					
ANR	3886714	Identifier	IS_AUTO_SHARE		3886654	0					
ANR	3886715	ArgumentList	c_disk_fraction		3886654	1					
ANR	3886716	Argument	c_disk_fraction		3886654	0					
ANR	3886717	Identifier	c_disk_fraction		3886654	0					
ANR	3886718	CompoundStatement		9:35:284:284	3886654	1					
ANR	3886719	ExpressionStatement	c_disk_fraction -= rhs . c_disk_fraction	931:2:24410:24448	3886654	0	True				
ANR	3886720	AssignmentExpression	c_disk_fraction -= rhs . c_disk_fraction		3886654	0		-=			
ANR	3886721	Identifier	c_disk_fraction		3886654	0					
ANR	3886722	MemberAccess	rhs . c_disk_fraction		3886654	1					
ANR	3886723	Identifier	rhs		3886654	0					
ANR	3886724	Identifier	c_disk_fraction		3886654	1					
ANR	3886725	ExpressionStatement	compute ( A_TIMEOUT | A_UPDATE )	934:1:24455:24486	3886654	4	True				
ANR	3886726	CallExpression	compute ( A_TIMEOUT | A_UPDATE )		3886654	0					
ANR	3886727	Callee	compute		3886654	0					
ANR	3886728	Identifier	compute		3886654	0					
ANR	3886729	ArgumentList	A_TIMEOUT | A_UPDATE		3886654	1					
ANR	3886730	Argument	A_TIMEOUT | A_UPDATE		3886654	0					
ANR	3886731	InclusiveOrExpression	A_TIMEOUT | A_UPDATE		3886654	0		|			
ANR	3886732	Identifier	A_TIMEOUT		3886654	0					
ANR	3886733	Identifier	A_UPDATE		3886654	1					
ANR	3886734	ReturnStatement	return * this ;	936:1:24504:24516	3886654	5	True				
ANR	3886735	UnaryOperationExpression	* this		3886654	0					
ANR	3886736	UnaryOperator	*		3886654	0					
ANR	3886737	Identifier	this		3886654	1					
ANR	3886738	Identifier	operator -=		3886654	1					
ANR	3886739	ParameterList	CpuAttributes & rhs		3886654	2					
ANR	3886740	Parameter	CpuAttributes & rhs	921:27:24100:24117	3886654	0	True				
ANR	3886741	ParameterType	CpuAttributes &		3886654	0					
ANR	3886742	Identifier	rhs		3886654	1					
ANR	3886743	CFGEntryNode	ENTRY		3886654		True				
ANR	3886744	CFGExitNode	EXIT		3886654		True				
ANR	3886745	Symbol	A_UPDATE		3886654						
ANR	3886746	Symbol	this		3886654						
ANR	3886747	Symbol	A_TIMEOUT		3886654						
ANR	3886748	Symbol	rhs . c_disk_fraction		3886654						
ANR	3886749	Symbol	c_virt_mem_fraction		3886654						
ANR	3886750	Symbol	rhs . c_virt_mem_fraction		3886654						
ANR	3886751	Symbol	c_num_cpus		3886654						
ANR	3886752	Symbol	* this		3886654						
ANR	3886753	Symbol	IS_AUTO_SHARE		3886654						
ANR	3886754	Symbol	rhs . c_phys_mem		3886654						
ANR	3886755	Symbol	c_phys_mem		3886654						
ANR	3886756	Symbol	rhs . c_num_cpus		3886654						
ANR	3886757	Symbol	rhs		3886654						
ANR	3886758	Symbol	c_disk_fraction		3886654						
ANR	3886759	Function	AvailAttributes :: AvailAttributes	939:0:24521:24786							
ANR	3886760	FunctionDef	AvailAttributes :: AvailAttributes (MachAttributes * map)		3886759	0					
ANR	3886761	CompoundStatement		941:0:24638:24786	3886759	0					
ANR	3886762	ExpressionStatement	a_num_cpus = map -> num_cpus ( )	942:1:24641:24669	3886759	0	True				
ANR	3886763	AssignmentExpression	a_num_cpus = map -> num_cpus ( )		3886759	0		=			
ANR	3886764	Identifier	a_num_cpus		3886759	0					
ANR	3886765	CallExpression	map -> num_cpus ( )		3886759	1					
ANR	3886766	Callee	map -> num_cpus		3886759	0					
ANR	3886767	PtrMemberAccess	map -> num_cpus		3886759	0					
ANR	3886768	Identifier	map		3886759	0					
ANR	3886769	Identifier	num_cpus		3886759	1					
ANR	3886770	ArgumentList			3886759	1					
ANR	3886771	ExpressionStatement	a_phys_mem = map -> phys_mem ( )	943:1:24672:24700	3886759	1	True				
ANR	3886772	AssignmentExpression	a_phys_mem = map -> phys_mem ( )		3886759	0		=			
ANR	3886773	Identifier	a_phys_mem		3886759	0					
ANR	3886774	CallExpression	map -> phys_mem ( )		3886759	1					
ANR	3886775	Callee	map -> phys_mem		3886759	0					
ANR	3886776	PtrMemberAccess	map -> phys_mem		3886759	0					
ANR	3886777	Identifier	map		3886759	0					
ANR	3886778	Identifier	phys_mem		3886759	1					
ANR	3886779	ArgumentList			3886759	1					
ANR	3886780	ExpressionStatement	a_phys_mem_auto_count = 0	944:1:24703:24728	3886759	2	True				
ANR	3886781	AssignmentExpression	a_phys_mem_auto_count = 0		3886759	0		=			
ANR	3886782	Identifier	a_phys_mem_auto_count		3886759	0					
ANR	3886783	PrimaryExpression	0		3886759	1					
ANR	3886784	ExpressionStatement	a_virt_mem_fraction = 1.0	945:1:24731:24756	3886759	3	True				
ANR	3886785	AssignmentExpression	a_virt_mem_fraction = 1.0		3886759	0		=			
ANR	3886786	Identifier	a_virt_mem_fraction		3886759	0					
ANR	3886787	PrimaryExpression	1.0		3886759	1					
ANR	3886788	ExpressionStatement	a_virt_mem_auto_count = 0	946:1:24759:24784	3886759	4	True				
ANR	3886789	AssignmentExpression	a_virt_mem_auto_count = 0		3886759	0		=			
ANR	3886790	Identifier	a_virt_mem_auto_count		3886759	0					
ANR	3886791	PrimaryExpression	0		3886759	1					
ANR	3886792	Identifier	AvailAttributes :: AvailAttributes		3886759	1					
ANR	3886793	ParameterList	MachAttributes * map		3886759	2					
ANR	3886794	Parameter	MachAttributes * map	939:34:24555:24573	3886759	0	True				
ANR	3886795	ParameterType	MachAttributes *		3886759	0					
ANR	3886796	Identifier	map		3886759	1					
ANR	3886797	CFGEntryNode	ENTRY		3886759		True				
ANR	3886798	CFGExitNode	EXIT		3886759		True				
ANR	3886799	Symbol	a_phys_mem_auto_count		3886759						
ANR	3886800	Symbol	map -> num_cpus		3886759						
ANR	3886801	Symbol	a_virt_mem_fraction		3886759						
ANR	3886802	Symbol	* map		3886759						
ANR	3886803	Symbol	a_phys_mem		3886759						
ANR	3886804	Symbol	map -> phys_mem		3886759						
ANR	3886805	Symbol	map		3886759						
ANR	3886806	Symbol	a_virt_mem_auto_count		3886759						
ANR	3886807	Symbol	a_num_cpus		3886759						
ANR	3886808	Function	AvailAttributes :: GetAvailDiskPartition	949:0:24789:25199							
ANR	3886809	FunctionDef	AvailAttributes :: GetAvailDiskPartition (MyString const & execute_partition_id)		3886808	0					
ANR	3886810	CompoundStatement		951:0:24887:25199	3886808	0					
ANR	3886811	IdentifierDeclStatement	AvailDiskPartition * a = NULL ;	952:1:24890:24918	3886808	0	True				
ANR	3886812	IdentifierDecl	* a = NULL		3886808	0					
ANR	3886813	IdentifierDeclType	AvailDiskPartition *		3886808	0					
ANR	3886814	Identifier	a		3886808	1					
ANR	3886815	AssignmentExpression	* a = NULL		3886808	2		=			
ANR	3886816	Identifier	NULL		3886808	0					
ANR	3886817	Identifier	NULL		3886808	1					
ANR	3886818	IfStatement	"if ( m_execute_partitions . lookup ( execute_partition_id , a ) < 0 )"		3886808	1					
ANR	3886819	Condition	"m_execute_partitions . lookup ( execute_partition_id , a ) < 0"	953:5:24925:24979	3886808	0	True				
ANR	3886820	RelationalExpression	"m_execute_partitions . lookup ( execute_partition_id , a ) < 0"		3886808	0		<			
ANR	3886821	CallExpression	"m_execute_partitions . lookup ( execute_partition_id , a )"		3886808	0					
ANR	3886822	Callee	m_execute_partitions . lookup		3886808	0					
ANR	3886823	MemberAccess	m_execute_partitions . lookup		3886808	0					
ANR	3886824	Identifier	m_execute_partitions		3886808	0					
ANR	3886825	Identifier	lookup		3886808	1					
ANR	3886826	ArgumentList	execute_partition_id		3886808	1					
ANR	3886827	Argument	execute_partition_id		3886808	0					
ANR	3886828	Identifier	execute_partition_id		3886808	0					
ANR	3886829	Argument	a		3886808	1					
ANR	3886830	Identifier	a		3886808	0					
ANR	3886831	PrimaryExpression	0		3886808	1					
ANR	3886832	CompoundStatement		3:63:95:95	3886808	1					
ANR	3886833	ExpressionStatement	"m_execute_partitions . insert ( execute_partition_id , AvailDiskPartition ( ) )"	955:2:25041:25114	3886808	0	True				
ANR	3886834	CallExpression	"m_execute_partitions . insert ( execute_partition_id , AvailDiskPartition ( ) )"		3886808	0					
ANR	3886835	Callee	m_execute_partitions . insert		3886808	0					
ANR	3886836	MemberAccess	m_execute_partitions . insert		3886808	0					
ANR	3886837	Identifier	m_execute_partitions		3886808	0					
ANR	3886838	Identifier	insert		3886808	1					
ANR	3886839	ArgumentList	execute_partition_id		3886808	1					
ANR	3886840	Argument	execute_partition_id		3886808	0					
ANR	3886841	Identifier	execute_partition_id		3886808	0					
ANR	3886842	Argument	AvailDiskPartition ( )		3886808	1					
ANR	3886843	CallExpression	AvailDiskPartition ( )		3886808	0					
ANR	3886844	Callee	AvailDiskPartition		3886808	0					
ANR	3886845	Identifier	AvailDiskPartition		3886808	0					
ANR	3886846	ArgumentList			3886808	1					
ANR	3886847	ExpressionStatement	"m_execute_partitions . lookup ( execute_partition_id , a )"	956:2:25118:25169	3886808	1	True				
ANR	3886848	CallExpression	"m_execute_partitions . lookup ( execute_partition_id , a )"		3886808	0					
ANR	3886849	Callee	m_execute_partitions . lookup		3886808	0					
ANR	3886850	MemberAccess	m_execute_partitions . lookup		3886808	0					
ANR	3886851	Identifier	m_execute_partitions		3886808	0					
ANR	3886852	Identifier	lookup		3886808	1					
ANR	3886853	ArgumentList	execute_partition_id		3886808	1					
ANR	3886854	Argument	execute_partition_id		3886808	0					
ANR	3886855	Identifier	execute_partition_id		3886808	0					
ANR	3886856	Argument	a		3886808	1					
ANR	3886857	Identifier	a		3886808	0					
ANR	3886858	ExpressionStatement	ASSERT ( a )	957:2:25173:25182	3886808	2	True				
ANR	3886859	CallExpression	ASSERT ( a )		3886808	0					
ANR	3886860	Callee	ASSERT		3886808	0					
ANR	3886861	Identifier	ASSERT		3886808	0					
ANR	3886862	ArgumentList	a		3886808	1					
ANR	3886863	Argument	a		3886808	0					
ANR	3886864	Identifier	a		3886808	0					
ANR	3886865	ReturnStatement	return * a ;	959:1:25188:25197	3886808	2	True				
ANR	3886866	UnaryOperationExpression	* a		3886808	0					
ANR	3886867	UnaryOperator	*		3886808	0					
ANR	3886868	Identifier	a		3886808	1					
ANR	3886869	ReturnType	AvailDiskPartition &		3886808	1					
ANR	3886870	Identifier	AvailAttributes :: GetAvailDiskPartition		3886808	2					
ANR	3886871	ParameterList	MyString const & execute_partition_id		3886808	3					
ANR	3886872	Parameter	MyString const & execute_partition_id	950:39:24849:24884	3886808	0	True				
ANR	3886873	ParameterType	MyString const &		3886808	0					
ANR	3886874	Identifier	execute_partition_id		3886808	1					
ANR	3886875	CFGEntryNode	ENTRY		3886808		True				
ANR	3886876	CFGExitNode	EXIT		3886808		True				
ANR	3886877	Symbol	a		3886808						
ANR	3886878	Symbol	AvailDiskPartition		3886808						
ANR	3886879	Symbol	NULL		3886808						
ANR	3886880	Symbol	execute_partition_id		3886808						
ANR	3886881	Symbol	m_execute_partitions		3886808						
ANR	3886882	Symbol	m_execute_partitions . lookup		3886808						
ANR	3886883	Symbol	* a		3886808						
ANR	3886884	Function	AvailAttributes :: decrement	962:0:25202:26348							
ANR	3886885	FunctionDef	AvailAttributes :: decrement (CpuAttributes * cap)		3886884	0					
ANR	3886886	CompoundStatement		964:0:25257:26348	3886884	0					
ANR	3886887	IdentifierDeclStatement	"int new_cpus , new_phys_mem ;"	965:1:25260:25286	3886884	0	True				
ANR	3886888	IdentifierDecl	new_cpus		3886884	0					
ANR	3886889	IdentifierDeclType	int		3886884	0					
ANR	3886890	Identifier	new_cpus		3886884	1					
ANR	3886891	IdentifierDecl	new_phys_mem		3886884	1					
ANR	3886892	IdentifierDeclType	int		3886884	0					
ANR	3886893	Identifier	new_phys_mem		3886884	1					
ANR	3886894	IdentifierDeclStatement	"float new_virt_mem , new_disk , floor = - 0.000001f ;"	966:1:25289:25337	3886884	1	True				
ANR	3886895	IdentifierDecl	new_virt_mem		3886884	0					
ANR	3886896	IdentifierDeclType	float		3886884	0					
ANR	3886897	Identifier	new_virt_mem		3886884	1					
ANR	3886898	IdentifierDecl	new_disk		3886884	1					
ANR	3886899	IdentifierDeclType	float		3886884	0					
ANR	3886900	Identifier	new_disk		3886884	1					
ANR	3886901	IdentifierDecl	floor = - 0.000001f		3886884	2					
ANR	3886902	IdentifierDeclType	float		3886884	0					
ANR	3886903	Identifier	floor		3886884	1					
ANR	3886904	AssignmentExpression	floor = - 0.000001f		3886884	2		=			
ANR	3886905	Identifier	floor		3886884	0					
ANR	3886906	UnaryOperationExpression	- 0.000001f		3886884	1					
ANR	3886907	UnaryOperator	-		3886884	0					
ANR	3886908	PrimaryExpression	0.000001f		3886884	1					
ANR	3886909	ExpressionStatement	new_cpus = a_num_cpus - cap -> c_num_cpus	968:1:25342:25381	3886884	2	True				
ANR	3886910	AssignmentExpression	new_cpus = a_num_cpus - cap -> c_num_cpus		3886884	0		=			
ANR	3886911	Identifier	new_cpus		3886884	0					
ANR	3886912	AdditiveExpression	a_num_cpus - cap -> c_num_cpus		3886884	1		-			
ANR	3886913	Identifier	a_num_cpus		3886884	0					
ANR	3886914	PtrMemberAccess	cap -> c_num_cpus		3886884	1					
ANR	3886915	Identifier	cap		3886884	0					
ANR	3886916	Identifier	c_num_cpus		3886884	1					
ANR	3886917	ExpressionStatement	new_phys_mem = a_phys_mem	970:1:25385:25410	3886884	3	True				
ANR	3886918	AssignmentExpression	new_phys_mem = a_phys_mem		3886884	0		=			
ANR	3886919	Identifier	new_phys_mem		3886884	0					
ANR	3886920	Identifier	a_phys_mem		3886884	1					
ANR	3886921	IfStatement	if ( cap -> c_phys_mem != AUTO_MEM )		3886884	4					
ANR	3886922	Condition	cap -> c_phys_mem != AUTO_MEM	971:5:25417:25443	3886884	0	True				
ANR	3886923	EqualityExpression	cap -> c_phys_mem != AUTO_MEM		3886884	0		!=			
ANR	3886924	PtrMemberAccess	cap -> c_phys_mem		3886884	0					
ANR	3886925	Identifier	cap		3886884	0					
ANR	3886926	Identifier	c_phys_mem		3886884	1					
ANR	3886927	Identifier	AUTO_MEM		3886884	1					
ANR	3886928	CompoundStatement		8:35:189:189	3886884	1					
ANR	3886929	ExpressionStatement	new_phys_mem -= cap -> c_phys_mem	972:2:25451:25482	3886884	0	True				
ANR	3886930	AssignmentExpression	new_phys_mem -= cap -> c_phys_mem		3886884	0		-=			
ANR	3886931	Identifier	new_phys_mem		3886884	0					
ANR	3886932	PtrMemberAccess	cap -> c_phys_mem		3886884	1					
ANR	3886933	Identifier	cap		3886884	0					
ANR	3886934	Identifier	c_phys_mem		3886884	1					
ANR	3886935	ExpressionStatement	new_virt_mem = a_virt_mem_fraction	975:1:25489:25523	3886884	5	True				
ANR	3886936	AssignmentExpression	new_virt_mem = a_virt_mem_fraction		3886884	0		=			
ANR	3886937	Identifier	new_virt_mem		3886884	0					
ANR	3886938	Identifier	a_virt_mem_fraction		3886884	1					
ANR	3886939	IfStatement	if ( ! IS_AUTO_SHARE ( cap -> c_virt_mem_fraction ) )		3886884	6					
ANR	3886940	Condition	! IS_AUTO_SHARE ( cap -> c_virt_mem_fraction )	976:5:25530:25569	3886884	0	True				
ANR	3886941	UnaryOperationExpression	! IS_AUTO_SHARE ( cap -> c_virt_mem_fraction )		3886884	0					
ANR	3886942	UnaryOperator	!		3886884	0					
ANR	3886943	CallExpression	IS_AUTO_SHARE ( cap -> c_virt_mem_fraction )		3886884	1					
ANR	3886944	Callee	IS_AUTO_SHARE		3886884	0					
ANR	3886945	Identifier	IS_AUTO_SHARE		3886884	0					
ANR	3886946	ArgumentList	cap -> c_virt_mem_fraction		3886884	1					
ANR	3886947	Argument	cap -> c_virt_mem_fraction		3886884	0					
ANR	3886948	PtrMemberAccess	cap -> c_virt_mem_fraction		3886884	0					
ANR	3886949	Identifier	cap		3886884	0					
ANR	3886950	Identifier	c_virt_mem_fraction		3886884	1					
ANR	3886951	CompoundStatement		13:48:315:315	3886884	1					
ANR	3886952	ExpressionStatement	new_virt_mem -= cap -> c_virt_mem_fraction	977:2:25577:25617	3886884	0	True				
ANR	3886953	AssignmentExpression	new_virt_mem -= cap -> c_virt_mem_fraction		3886884	0		-=			
ANR	3886954	Identifier	new_virt_mem		3886884	0					
ANR	3886955	PtrMemberAccess	cap -> c_virt_mem_fraction		3886884	1					
ANR	3886956	Identifier	cap		3886884	0					
ANR	3886957	Identifier	c_virt_mem_fraction		3886884	1					
ANR	3886958	IdentifierDeclStatement	AvailDiskPartition & partition = GetAvailDiskPartition ( cap -> executePartitionID ( ) ) ;	980:1:25624:25706	3886884	7	True				
ANR	3886959	IdentifierDecl	& partition = GetAvailDiskPartition ( cap -> executePartitionID ( ) )		3886884	0					
ANR	3886960	IdentifierDeclType	AvailDiskPartition &		3886884	0					
ANR	3886961	Identifier	partition		3886884	1					
ANR	3886962	AssignmentExpression	& partition = GetAvailDiskPartition ( cap -> executePartitionID ( ) )		3886884	2		=			
ANR	3886963	Identifier	partition		3886884	0					
ANR	3886964	CallExpression	GetAvailDiskPartition ( cap -> executePartitionID ( ) )		3886884	1					
ANR	3886965	Callee	GetAvailDiskPartition		3886884	0					
ANR	3886966	Identifier	GetAvailDiskPartition		3886884	0					
ANR	3886967	ArgumentList	cap -> executePartitionID ( )		3886884	1					
ANR	3886968	Argument	cap -> executePartitionID ( )		3886884	0					
ANR	3886969	CallExpression	cap -> executePartitionID ( )		3886884	0					
ANR	3886970	Callee	cap -> executePartitionID		3886884	0					
ANR	3886971	PtrMemberAccess	cap -> executePartitionID		3886884	0					
ANR	3886972	Identifier	cap		3886884	0					
ANR	3886973	Identifier	executePartitionID		3886884	1					
ANR	3886974	ArgumentList			3886884	1					
ANR	3886975	ExpressionStatement	new_disk = partition . m_disk_fraction	981:1:25709:25745	3886884	8	True				
ANR	3886976	AssignmentExpression	new_disk = partition . m_disk_fraction		3886884	0		=			
ANR	3886977	Identifier	new_disk		3886884	0					
ANR	3886978	MemberAccess	partition . m_disk_fraction		3886884	1					
ANR	3886979	Identifier	partition		3886884	0					
ANR	3886980	Identifier	m_disk_fraction		3886884	1					
ANR	3886981	IfStatement	if ( ! IS_AUTO_SHARE ( cap -> c_disk_fraction ) )		3886884	9					
ANR	3886982	Condition	! IS_AUTO_SHARE ( cap -> c_disk_fraction )	982:5:25752:25787	3886884	0	True				
ANR	3886983	UnaryOperationExpression	! IS_AUTO_SHARE ( cap -> c_disk_fraction )		3886884	0					
ANR	3886984	UnaryOperator	!		3886884	0					
ANR	3886985	CallExpression	IS_AUTO_SHARE ( cap -> c_disk_fraction )		3886884	1					
ANR	3886986	Callee	IS_AUTO_SHARE		3886884	0					
ANR	3886987	Identifier	IS_AUTO_SHARE		3886884	0					
ANR	3886988	ArgumentList	cap -> c_disk_fraction		3886884	1					
ANR	3886989	Argument	cap -> c_disk_fraction		3886884	0					
ANR	3886990	PtrMemberAccess	cap -> c_disk_fraction		3886884	0					
ANR	3886991	Identifier	cap		3886884	0					
ANR	3886992	Identifier	c_disk_fraction		3886884	1					
ANR	3886993	CompoundStatement		19:44:533:533	3886884	1					
ANR	3886994	ExpressionStatement	new_disk -= cap -> c_disk_fraction	983:2:25795:25827	3886884	0	True				
ANR	3886995	AssignmentExpression	new_disk -= cap -> c_disk_fraction		3886884	0		-=			
ANR	3886996	Identifier	new_disk		3886884	0					
ANR	3886997	PtrMemberAccess	cap -> c_disk_fraction		3886884	1					
ANR	3886998	Identifier	cap		3886884	0					
ANR	3886999	Identifier	c_disk_fraction		3886884	1					
ANR	3887000	IfStatement	if ( new_cpus < floor || new_phys_mem < floor || new_virt_mem < floor || new_disk < floor )		3886884	10					
ANR	3887001	Condition	new_cpus < floor || new_phys_mem < floor || new_virt_mem < floor || new_disk < floor	986:5:25838:25924	3886884	0	True				
ANR	3887002	OrExpression	new_cpus < floor || new_phys_mem < floor || new_virt_mem < floor || new_disk < floor		3886884	0		||			
ANR	3887003	RelationalExpression	new_cpus < floor		3886884	0		<			
ANR	3887004	Identifier	new_cpus		3886884	0					
ANR	3887005	Identifier	floor		3886884	1					
ANR	3887006	OrExpression	new_phys_mem < floor || new_virt_mem < floor || new_disk < floor		3886884	1		||			
ANR	3887007	RelationalExpression	new_phys_mem < floor		3886884	0		<			
ANR	3887008	Identifier	new_phys_mem		3886884	0					
ANR	3887009	Identifier	floor		3886884	1					
ANR	3887010	OrExpression	new_virt_mem < floor || new_disk < floor		3886884	1		||			
ANR	3887011	RelationalExpression	new_virt_mem < floor		3886884	0		<			
ANR	3887012	Identifier	new_virt_mem		3886884	0					
ANR	3887013	Identifier	floor		3886884	1					
ANR	3887014	RelationalExpression	new_disk < floor		3886884	1		<			
ANR	3887015	Identifier	new_disk		3886884	0					
ANR	3887016	Identifier	floor		3886884	1					
ANR	3887017	CompoundStatement		24:45:670:670	3886884	1					
ANR	3887018	ReturnStatement	return false ;	988:2:25932:25944	3886884	0	True				
ANR	3887019	Identifier	false		3886884	0					
ANR	3887020	ElseStatement	else		3886884	0					
ANR	3887021	CompoundStatement		26:8:696:696	3886884	0					
ANR	3887022	ExpressionStatement	a_num_cpus = new_cpus	990:2:25958:25979	3886884	0	True				
ANR	3887023	AssignmentExpression	a_num_cpus = new_cpus		3886884	0		=			
ANR	3887024	Identifier	a_num_cpus		3886884	0					
ANR	3887025	Identifier	new_cpus		3886884	1					
ANR	3887026	ExpressionStatement	a_phys_mem = new_phys_mem	992:2:25984:26009	3886884	1	True				
ANR	3887027	AssignmentExpression	a_phys_mem = new_phys_mem		3886884	0		=			
ANR	3887028	Identifier	a_phys_mem		3886884	0					
ANR	3887029	Identifier	new_phys_mem		3886884	1					
ANR	3887030	IfStatement	if ( cap -> c_phys_mem == AUTO_MEM )		3886884	2					
ANR	3887031	Condition	cap -> c_phys_mem == AUTO_MEM	993:6:26017:26043	3886884	0	True				
ANR	3887032	EqualityExpression	cap -> c_phys_mem == AUTO_MEM		3886884	0		==			
ANR	3887033	PtrMemberAccess	cap -> c_phys_mem		3886884	0					
ANR	3887034	Identifier	cap		3886884	0					
ANR	3887035	Identifier	c_phys_mem		3886884	1					
ANR	3887036	Identifier	AUTO_MEM		3886884	1					
ANR	3887037	CompoundStatement		30:36:789:789	3886884	1					
ANR	3887038	ExpressionStatement	a_phys_mem_auto_count += 1	994:3:26052:26078	3886884	0	True				
ANR	3887039	AssignmentExpression	a_phys_mem_auto_count += 1		3886884	0		+=			
ANR	3887040	Identifier	a_phys_mem_auto_count		3886884	0					
ANR	3887041	PrimaryExpression	1		3886884	1					
ANR	3887042	ExpressionStatement	a_virt_mem_fraction = new_virt_mem	997:2:26087:26121	3886884	3	True				
ANR	3887043	AssignmentExpression	a_virt_mem_fraction = new_virt_mem		3886884	0		=			
ANR	3887044	Identifier	a_virt_mem_fraction		3886884	0					
ANR	3887045	Identifier	new_virt_mem		3886884	1					
ANR	3887046	IfStatement	if ( IS_AUTO_SHARE ( cap -> c_virt_mem_fraction ) )		3886884	4					
ANR	3887047	Condition	IS_AUTO_SHARE ( cap -> c_virt_mem_fraction )	998:6:26129:26167	3886884	0	True				
ANR	3887048	CallExpression	IS_AUTO_SHARE ( cap -> c_virt_mem_fraction )		3886884	0					
ANR	3887049	Callee	IS_AUTO_SHARE		3886884	0					
ANR	3887050	Identifier	IS_AUTO_SHARE		3886884	0					
ANR	3887051	ArgumentList	cap -> c_virt_mem_fraction		3886884	1					
ANR	3887052	Argument	cap -> c_virt_mem_fraction		3886884	0					
ANR	3887053	PtrMemberAccess	cap -> c_virt_mem_fraction		3886884	0					
ANR	3887054	Identifier	cap		3886884	0					
ANR	3887055	Identifier	c_virt_mem_fraction		3886884	1					
ANR	3887056	CompoundStatement		35:48:913:913	3886884	1					
ANR	3887057	ExpressionStatement	a_virt_mem_auto_count += 1	999:3:26176:26202	3886884	0	True				
ANR	3887058	AssignmentExpression	a_virt_mem_auto_count += 1		3886884	0		+=			
ANR	3887059	Identifier	a_virt_mem_auto_count		3886884	0					
ANR	3887060	PrimaryExpression	1		3886884	1					
ANR	3887061	ExpressionStatement	partition . m_disk_fraction = new_disk	1002:2:26211:26247	3886884	5	True				
ANR	3887062	AssignmentExpression	partition . m_disk_fraction = new_disk		3886884	0		=			
ANR	3887063	MemberAccess	partition . m_disk_fraction		3886884	0					
ANR	3887064	Identifier	partition		3886884	0					
ANR	3887065	Identifier	m_disk_fraction		3886884	1					
ANR	3887066	Identifier	new_disk		3886884	1					
ANR	3887067	IfStatement	if ( IS_AUTO_SHARE ( cap -> c_disk_fraction ) )		3886884	6					
ANR	3887068	Condition	IS_AUTO_SHARE ( cap -> c_disk_fraction )	1003:6:26255:26289	3886884	0	True				
ANR	3887069	CallExpression	IS_AUTO_SHARE ( cap -> c_disk_fraction )		3886884	0					
ANR	3887070	Callee	IS_AUTO_SHARE		3886884	0					
ANR	3887071	Identifier	IS_AUTO_SHARE		3886884	0					
ANR	3887072	ArgumentList	cap -> c_disk_fraction		3886884	1					
ANR	3887073	Argument	cap -> c_disk_fraction		3886884	0					
ANR	3887074	PtrMemberAccess	cap -> c_disk_fraction		3886884	0					
ANR	3887075	Identifier	cap		3886884	0					
ANR	3887076	Identifier	c_disk_fraction		3886884	1					
ANR	3887077	CompoundStatement		40:44:1035:1035	3886884	1					
ANR	3887078	ExpressionStatement	partition . m_auto_count += 1	1004:3:26298:26325	3886884	0	True				
ANR	3887079	AssignmentExpression	partition . m_auto_count += 1		3886884	0		+=			
ANR	3887080	MemberAccess	partition . m_auto_count		3886884	0					
ANR	3887081	Identifier	partition		3886884	0					
ANR	3887082	Identifier	m_auto_count		3886884	1					
ANR	3887083	PrimaryExpression	1		3886884	1					
ANR	3887084	ReturnStatement	return true ;	1007:1:26335:26346	3886884	11	True				
ANR	3887085	Identifier	true		3886884	0					
ANR	3887086	ReturnType	bool		3886884	1					
ANR	3887087	Identifier	AvailAttributes :: decrement		3886884	2					
ANR	3887088	ParameterList	CpuAttributes * cap		3886884	3					
ANR	3887089	Parameter	CpuAttributes * cap	963:28:25235:25252	3886884	0	True				
ANR	3887090	ParameterType	CpuAttributes *		3886884	0					
ANR	3887091	Identifier	cap		3886884	1					
ANR	3887092	CFGEntryNode	ENTRY		3886884		True				
ANR	3887093	CFGExitNode	EXIT		3886884		True				
ANR	3887094	Symbol	partition . m_auto_count		3886884						
ANR	3887095	Symbol	* cap		3886884						
ANR	3887096	Symbol	cap -> c_num_cpus		3886884						
ANR	3887097	Symbol	a_virt_mem_fraction		3886884						
ANR	3887098	Symbol	a_phys_mem		3886884						
ANR	3887099	Symbol	cap -> c_virt_mem_fraction		3886884						
ANR	3887100	Symbol	new_disk		3886884						
ANR	3887101	Symbol	cap		3886884						
ANR	3887102	Symbol	partition		3886884						
ANR	3887103	Symbol	IS_AUTO_SHARE		3886884						
ANR	3887104	Symbol	cap -> c_disk_fraction		3886884						
ANR	3887105	Symbol	new_cpus		3886884						
ANR	3887106	Symbol	floor		3886884						
ANR	3887107	Symbol	GetAvailDiskPartition		3886884						
ANR	3887108	Symbol	a_num_cpus		3886884						
ANR	3887109	Symbol	AUTO_MEM		3886884						
ANR	3887110	Symbol	cap -> c_phys_mem		3886884						
ANR	3887111	Symbol	new_virt_mem		3886884						
ANR	3887112	Symbol	false		3886884						
ANR	3887113	Symbol	cap -> executePartitionID		3886884						
ANR	3887114	Symbol	partition . m_disk_fraction		3886884						
ANR	3887115	Symbol	a_phys_mem_auto_count		3886884						
ANR	3887116	Symbol	new_phys_mem		3886884						
ANR	3887117	Symbol	true		3886884						
ANR	3887118	Symbol	a_virt_mem_auto_count		3886884						
ANR	3887119	Function	AvailAttributes :: computeAutoShares	1010:0:26351:27212							
ANR	3887120	FunctionDef	AvailAttributes :: computeAutoShares (CpuAttributes * cap)		3887119	0					
ANR	3887121	CompoundStatement		1012:0:26413:27212	3887119	0					
ANR	3887122	IfStatement	if ( cap -> c_phys_mem == AUTO_MEM )		3887119	0					
ANR	3887123	Condition	cap -> c_phys_mem == AUTO_MEM	1013:5:26420:26446	3887119	0	True				
ANR	3887124	EqualityExpression	cap -> c_phys_mem == AUTO_MEM		3887119	0		==			
ANR	3887125	PtrMemberAccess	cap -> c_phys_mem		3887119	0					
ANR	3887126	Identifier	cap		3887119	0					
ANR	3887127	Identifier	c_phys_mem		3887119	1					
ANR	3887128	Identifier	AUTO_MEM		3887119	1					
ANR	3887129	CompoundStatement		4:2:79:129	3887119	1					
ANR	3887130	ExpressionStatement	ASSERT ( a_phys_mem_auto_count > 0 )	1014:2:26454:26489	3887119	0	True				
ANR	3887131	CallExpression	ASSERT ( a_phys_mem_auto_count > 0 )		3887119	0					
ANR	3887132	Callee	ASSERT		3887119	0					
ANR	3887133	Identifier	ASSERT		3887119	0					
ANR	3887134	ArgumentList	a_phys_mem_auto_count > 0		3887119	1					
ANR	3887135	Argument	a_phys_mem_auto_count > 0		3887119	0					
ANR	3887136	RelationalExpression	a_phys_mem_auto_count > 0		3887119	0		>			
ANR	3887137	Identifier	a_phys_mem_auto_count		3887119	0					
ANR	3887138	PrimaryExpression	0		3887119	1					
ANR	3887139	IdentifierDeclStatement	int new_value = a_phys_mem / a_phys_mem_auto_count ;	1015:2:26493:26543	3887119	1	True				
ANR	3887140	IdentifierDecl	new_value = a_phys_mem / a_phys_mem_auto_count		3887119	0					
ANR	3887141	IdentifierDeclType	int		3887119	0					
ANR	3887142	Identifier	new_value		3887119	1					
ANR	3887143	AssignmentExpression	new_value = a_phys_mem / a_phys_mem_auto_count		3887119	2		=			
ANR	3887144	Identifier	new_value		3887119	0					
ANR	3887145	MultiplicativeExpression	a_phys_mem / a_phys_mem_auto_count		3887119	1		/			
ANR	3887146	Identifier	a_phys_mem		3887119	0					
ANR	3887147	Identifier	a_phys_mem_auto_count		3887119	1					
ANR	3887148	IfStatement	if ( new_value < 1 )		3887119	2					
ANR	3887149	Condition	new_value < 1	1016:6:26551:26563	3887119	0	True				
ANR	3887150	RelationalExpression	new_value < 1		3887119	0		<			
ANR	3887151	Identifier	new_value		3887119	0					
ANR	3887152	PrimaryExpression	1		3887119	1					
ANR	3887153	CompoundStatement		5:22:153:153	3887119	1					
ANR	3887154	ReturnStatement	return false ;	1017:3:26572:26584	3887119	0	True				
ANR	3887155	Identifier	false		3887119	0					
ANR	3887156	ExpressionStatement	cap -> c_phys_mem = new_value	1019:2:26592:26619	3887119	3	True				
ANR	3887157	AssignmentExpression	cap -> c_phys_mem = new_value		3887119	0		=			
ANR	3887158	PtrMemberAccess	cap -> c_phys_mem		3887119	0					
ANR	3887159	Identifier	cap		3887119	0					
ANR	3887160	Identifier	c_phys_mem		3887119	1					
ANR	3887161	Identifier	new_value		3887119	1					
ANR	3887162	IfStatement	if ( IS_AUTO_SHARE ( cap -> c_virt_mem_fraction ) )		3887119	1					
ANR	3887163	Condition	IS_AUTO_SHARE ( cap -> c_virt_mem_fraction )	1022:5:26630:26668	3887119	0	True				
ANR	3887164	CallExpression	IS_AUTO_SHARE ( cap -> c_virt_mem_fraction )		3887119	0					
ANR	3887165	Callee	IS_AUTO_SHARE		3887119	0					
ANR	3887166	Identifier	IS_AUTO_SHARE		3887119	0					
ANR	3887167	ArgumentList	cap -> c_virt_mem_fraction		3887119	1					
ANR	3887168	Argument	cap -> c_virt_mem_fraction		3887119	0					
ANR	3887169	PtrMemberAccess	cap -> c_virt_mem_fraction		3887119	0					
ANR	3887170	Identifier	cap		3887119	0					
ANR	3887171	Identifier	c_virt_mem_fraction		3887119	1					
ANR	3887172	CompoundStatement		13:2:301:362	3887119	1					
ANR	3887173	ExpressionStatement	ASSERT ( a_virt_mem_auto_count > 0 )	1023:2:26676:26711	3887119	0	True				
ANR	3887174	CallExpression	ASSERT ( a_virt_mem_auto_count > 0 )		3887119	0					
ANR	3887175	Callee	ASSERT		3887119	0					
ANR	3887176	Identifier	ASSERT		3887119	0					
ANR	3887177	ArgumentList	a_virt_mem_auto_count > 0		3887119	1					
ANR	3887178	Argument	a_virt_mem_auto_count > 0		3887119	0					
ANR	3887179	RelationalExpression	a_virt_mem_auto_count > 0		3887119	0		>			
ANR	3887180	Identifier	a_virt_mem_auto_count		3887119	0					
ANR	3887181	PrimaryExpression	0		3887119	1					
ANR	3887182	IdentifierDeclStatement	float new_value = a_virt_mem_fraction / a_virt_mem_auto_count ;	1024:2:26715:26776	3887119	1	True				
ANR	3887183	IdentifierDecl	new_value = a_virt_mem_fraction / a_virt_mem_auto_count		3887119	0					
ANR	3887184	IdentifierDeclType	float		3887119	0					
ANR	3887185	Identifier	new_value		3887119	1					
ANR	3887186	AssignmentExpression	new_value = a_virt_mem_fraction / a_virt_mem_auto_count		3887119	2		=			
ANR	3887187	Identifier	new_value		3887119	0					
ANR	3887188	MultiplicativeExpression	a_virt_mem_fraction / a_virt_mem_auto_count		3887119	1		/			
ANR	3887189	Identifier	a_virt_mem_fraction		3887119	0					
ANR	3887190	Identifier	a_virt_mem_auto_count		3887119	1					
ANR	3887191	IfStatement	if ( new_value <= 0 )		3887119	2					
ANR	3887192	Condition	new_value <= 0	1025:6:26784:26797	3887119	0	True				
ANR	3887193	RelationalExpression	new_value <= 0		3887119	0		<=			
ANR	3887194	Identifier	new_value		3887119	0					
ANR	3887195	PrimaryExpression	0		3887119	1					
ANR	3887196	CompoundStatement		14:23:387:387	3887119	1					
ANR	3887197	ReturnStatement	return false ;	1026:3:26806:26818	3887119	0	True				
ANR	3887198	Identifier	false		3887119	0					
ANR	3887199	ExpressionStatement	cap -> c_virt_mem_fraction = new_value	1028:2:26826:26862	3887119	3	True				
ANR	3887200	AssignmentExpression	cap -> c_virt_mem_fraction = new_value		3887119	0		=			
ANR	3887201	PtrMemberAccess	cap -> c_virt_mem_fraction		3887119	0					
ANR	3887202	Identifier	cap		3887119	0					
ANR	3887203	Identifier	c_virt_mem_fraction		3887119	1					
ANR	3887204	Identifier	new_value		3887119	1					
ANR	3887205	IfStatement	if ( IS_AUTO_SHARE ( cap -> c_disk_fraction ) )		3887119	2					
ANR	3887206	Condition	IS_AUTO_SHARE ( cap -> c_disk_fraction )	1031:5:26873:26907	3887119	0	True				
ANR	3887207	CallExpression	IS_AUTO_SHARE ( cap -> c_disk_fraction )		3887119	0					
ANR	3887208	Callee	IS_AUTO_SHARE		3887119	0					
ANR	3887209	Identifier	IS_AUTO_SHARE		3887119	0					
ANR	3887210	ArgumentList	cap -> c_disk_fraction		3887119	1					
ANR	3887211	Argument	cap -> c_disk_fraction		3887119	0					
ANR	3887212	PtrMemberAccess	cap -> c_disk_fraction		3887119	0					
ANR	3887213	Identifier	cap		3887119	0					
ANR	3887214	Identifier	c_disk_fraction		3887119	1					
ANR	3887215	CompoundStatement		23:2:629:697	3887119	1					
ANR	3887216	IdentifierDeclStatement	AvailDiskPartition & partition = GetAvailDiskPartition ( cap -> c_execute_partition_id ) ;	1032:2:26915:26999	3887119	0	True				
ANR	3887217	IdentifierDecl	& partition = GetAvailDiskPartition ( cap -> c_execute_partition_id )		3887119	0					
ANR	3887218	IdentifierDeclType	AvailDiskPartition &		3887119	0					
ANR	3887219	Identifier	partition		3887119	1					
ANR	3887220	AssignmentExpression	& partition = GetAvailDiskPartition ( cap -> c_execute_partition_id )		3887119	2		=			
ANR	3887221	Identifier	partition		3887119	0					
ANR	3887222	CallExpression	GetAvailDiskPartition ( cap -> c_execute_partition_id )		3887119	1					
ANR	3887223	Callee	GetAvailDiskPartition		3887119	0					
ANR	3887224	Identifier	GetAvailDiskPartition		3887119	0					
ANR	3887225	ArgumentList	cap -> c_execute_partition_id		3887119	1					
ANR	3887226	Argument	cap -> c_execute_partition_id		3887119	0					
ANR	3887227	PtrMemberAccess	cap -> c_execute_partition_id		3887119	0					
ANR	3887228	Identifier	cap		3887119	0					
ANR	3887229	Identifier	c_execute_partition_id		3887119	1					
ANR	3887230	ExpressionStatement	ASSERT ( partition . m_auto_count > 0 )	1033:2:27003:27039	3887119	1	True				
ANR	3887231	CallExpression	ASSERT ( partition . m_auto_count > 0 )		3887119	0					
ANR	3887232	Callee	ASSERT		3887119	0					
ANR	3887233	Identifier	ASSERT		3887119	0					
ANR	3887234	ArgumentList	partition . m_auto_count > 0		3887119	1					
ANR	3887235	Argument	partition . m_auto_count > 0		3887119	0					
ANR	3887236	RelationalExpression	partition . m_auto_count > 0		3887119	0		>			
ANR	3887237	MemberAccess	partition . m_auto_count		3887119	0					
ANR	3887238	Identifier	partition		3887119	0					
ANR	3887239	Identifier	m_auto_count		3887119	1					
ANR	3887240	PrimaryExpression	0		3887119	1					
ANR	3887241	IdentifierDeclStatement	float new_value = partition . m_disk_fraction / partition . m_auto_count ;	1034:2:27043:27111	3887119	2	True				
ANR	3887242	IdentifierDecl	new_value = partition . m_disk_fraction / partition . m_auto_count		3887119	0					
ANR	3887243	IdentifierDeclType	float		3887119	0					
ANR	3887244	Identifier	new_value		3887119	1					
ANR	3887245	AssignmentExpression	new_value = partition . m_disk_fraction / partition . m_auto_count		3887119	2		=			
ANR	3887246	Identifier	new_value		3887119	0					
ANR	3887247	MultiplicativeExpression	partition . m_disk_fraction / partition . m_auto_count		3887119	1		/			
ANR	3887248	MemberAccess	partition . m_disk_fraction		3887119	0					
ANR	3887249	Identifier	partition		3887119	0					
ANR	3887250	Identifier	m_disk_fraction		3887119	1					
ANR	3887251	MemberAccess	partition . m_auto_count		3887119	1					
ANR	3887252	Identifier	partition		3887119	0					
ANR	3887253	Identifier	m_auto_count		3887119	1					
ANR	3887254	IfStatement	if ( new_value <= 0 )		3887119	3					
ANR	3887255	Condition	new_value <= 0	1035:6:27119:27132	3887119	0	True				
ANR	3887256	RelationalExpression	new_value <= 0		3887119	0		<=			
ANR	3887257	Identifier	new_value		3887119	0					
ANR	3887258	PrimaryExpression	0		3887119	1					
ANR	3887259	CompoundStatement		24:23:722:722	3887119	1					
ANR	3887260	ReturnStatement	return false ;	1036:3:27141:27153	3887119	0	True				
ANR	3887261	Identifier	false		3887119	0					
ANR	3887262	ExpressionStatement	cap -> c_disk_fraction = new_value	1038:2:27161:27193	3887119	4	True				
ANR	3887263	AssignmentExpression	cap -> c_disk_fraction = new_value		3887119	0		=			
ANR	3887264	PtrMemberAccess	cap -> c_disk_fraction		3887119	0					
ANR	3887265	Identifier	cap		3887119	0					
ANR	3887266	Identifier	c_disk_fraction		3887119	1					
ANR	3887267	Identifier	new_value		3887119	1					
ANR	3887268	ReturnStatement	return true ;	1040:1:27199:27210	3887119	3	True				
ANR	3887269	Identifier	true		3887119	0					
ANR	3887270	ReturnType	bool		3887119	1					
ANR	3887271	Identifier	AvailAttributes :: computeAutoShares		3887119	2					
ANR	3887272	ParameterList	CpuAttributes * cap		3887119	3					
ANR	3887273	Parameter	CpuAttributes * cap	1011:36:26392:26409	3887119	0	True				
ANR	3887274	ParameterType	CpuAttributes *		3887119	0					
ANR	3887275	Identifier	cap		3887119	1					
ANR	3887276	CFGEntryNode	ENTRY		3887119		True				
ANR	3887277	CFGExitNode	EXIT		3887119		True				
ANR	3887278	Symbol	cap -> c_phys_mem		3887119						
ANR	3887279	Symbol	partition . m_auto_count		3887119						
ANR	3887280	Symbol	* cap		3887119						
ANR	3887281	Symbol	cap -> c_execute_partition_id		3887119						
ANR	3887282	Symbol	a_virt_mem_fraction		3887119						
ANR	3887283	Symbol	a_phys_mem		3887119						
ANR	3887284	Symbol	false		3887119						
ANR	3887285	Symbol	cap -> c_virt_mem_fraction		3887119						
ANR	3887286	Symbol	partition . m_disk_fraction		3887119						
ANR	3887287	Symbol	cap		3887119						
ANR	3887288	Symbol	a_phys_mem_auto_count		3887119						
ANR	3887289	Symbol	partition		3887119						
ANR	3887290	Symbol	IS_AUTO_SHARE		3887119						
ANR	3887291	Symbol	cap -> c_disk_fraction		3887119						
ANR	3887292	Symbol	true		3887119						
ANR	3887293	Symbol	a_virt_mem_auto_count		3887119						
ANR	3887294	Symbol	GetAvailDiskPartition		3887119						
ANR	3887295	Symbol	new_value		3887119						
ANR	3887296	Symbol	AUTO_MEM		3887119						
ANR	3887297	Function	AvailAttributes :: show_totals	1044:0:27216:27553							
ANR	3887298	FunctionDef	"AvailAttributes :: show_totals (int dflag , CpuAttributes * cap)"		3887297	0					
ANR	3887299	CompoundStatement		1046:0:27283:27553	3887297	0					
ANR	3887300	IdentifierDeclStatement	AvailDiskPartition & partition = GetAvailDiskPartition ( cap -> c_execute_partition_id ) ;	1047:1:27286:27370	3887297	0	True				
ANR	3887301	IdentifierDecl	& partition = GetAvailDiskPartition ( cap -> c_execute_partition_id )		3887297	0					
ANR	3887302	IdentifierDeclType	AvailDiskPartition &		3887297	0					
ANR	3887303	Identifier	partition		3887297	1					
ANR	3887304	AssignmentExpression	& partition = GetAvailDiskPartition ( cap -> c_execute_partition_id )		3887297	2		=			
ANR	3887305	Identifier	partition		3887297	0					
ANR	3887306	CallExpression	GetAvailDiskPartition ( cap -> c_execute_partition_id )		3887297	1					
ANR	3887307	Callee	GetAvailDiskPartition		3887297	0					
ANR	3887308	Identifier	GetAvailDiskPartition		3887297	0					
ANR	3887309	ArgumentList	cap -> c_execute_partition_id		3887297	1					
ANR	3887310	Argument	cap -> c_execute_partition_id		3887297	0					
ANR	3887311	PtrMemberAccess	cap -> c_execute_partition_id		3887297	0					
ANR	3887312	Identifier	cap		3887297	0					
ANR	3887313	Identifier	c_execute_partition_id		3887297	1					
ANR	3887314	Statement	::	1048:1:27373:27374	3887297	1	True				
ANR	3887315	ExpressionStatement	"dprintf ( dflag | D_NOHEADER , ""Cpus: %d, Memory: %d, Swap: %.2f%%, Disk: %.2f%%\\n"" , a_num_cpus , a_phys_mem , 100 * a_virt_mem_fraction , 100 * partition . m_disk_fraction )"	1048:3:27375:27551	3887297	2	True				
ANR	3887316	CallExpression	"dprintf ( dflag | D_NOHEADER , ""Cpus: %d, Memory: %d, Swap: %.2f%%, Disk: %.2f%%\\n"" , a_num_cpus , a_phys_mem , 100 * a_virt_mem_fraction , 100 * partition . m_disk_fraction )"		3887297	0					
ANR	3887317	Callee	dprintf		3887297	0					
ANR	3887318	Identifier	dprintf		3887297	0					
ANR	3887319	ArgumentList	dflag | D_NOHEADER		3887297	1					
ANR	3887320	Argument	dflag | D_NOHEADER		3887297	0					
ANR	3887321	InclusiveOrExpression	dflag | D_NOHEADER		3887297	0		|			
ANR	3887322	Identifier	dflag		3887297	0					
ANR	3887323	Identifier	D_NOHEADER		3887297	1					
ANR	3887324	Argument	"""Cpus: %d, Memory: %d, Swap: %.2f%%, Disk: %.2f%%\\n"""		3887297	1					
ANR	3887325	PrimaryExpression	"""Cpus: %d, Memory: %d, Swap: %.2f%%, Disk: %.2f%%\\n"""		3887297	0					
ANR	3887326	Argument	a_num_cpus		3887297	2					
ANR	3887327	Identifier	a_num_cpus		3887297	0					
ANR	3887328	Argument	a_phys_mem		3887297	3					
ANR	3887329	Identifier	a_phys_mem		3887297	0					
ANR	3887330	Argument	100 * a_virt_mem_fraction		3887297	4					
ANR	3887331	MultiplicativeExpression	100 * a_virt_mem_fraction		3887297	0		*			
ANR	3887332	PrimaryExpression	100		3887297	0					
ANR	3887333	Identifier	a_virt_mem_fraction		3887297	1					
ANR	3887334	Argument	100 * partition . m_disk_fraction		3887297	5					
ANR	3887335	MultiplicativeExpression	100 * partition . m_disk_fraction		3887297	0		*			
ANR	3887336	PrimaryExpression	100		3887297	0					
ANR	3887337	MemberAccess	partition . m_disk_fraction		3887297	1					
ANR	3887338	Identifier	partition		3887297	0					
ANR	3887339	Identifier	m_disk_fraction		3887297	1					
ANR	3887340	ReturnType	void		3887297	1					
ANR	3887341	Identifier	AvailAttributes :: show_totals		3887297	2					
ANR	3887342	ParameterList	"int dflag , CpuAttributes * cap"		3887297	3					
ANR	3887343	Parameter	int dflag	1045:30:27251:27259	3887297	0	True				
ANR	3887344	ParameterType	int		3887297	0					
ANR	3887345	Identifier	dflag		3887297	1					
ANR	3887346	Parameter	CpuAttributes * cap	1045:41:27262:27279	3887297	1	True				
ANR	3887347	ParameterType	CpuAttributes *		3887297	0					
ANR	3887348	Identifier	cap		3887297	1					
ANR	3887349	CFGEntryNode	ENTRY		3887297		True				
ANR	3887350	CFGExitNode	EXIT		3887297		True				
ANR	3887351	Symbol	partition . m_disk_fraction		3887297						
ANR	3887352	Symbol	dflag		3887297						
ANR	3887353	Symbol	cap		3887297						
ANR	3887354	Symbol	partition		3887297						
ANR	3887355	Symbol	* cap		3887297						
ANR	3887356	Symbol	cap -> c_execute_partition_id		3887297						
ANR	3887357	Symbol	a_virt_mem_fraction		3887297						
ANR	3887358	Symbol	a_phys_mem		3887297						
ANR	3887359	Symbol	GetAvailDiskPartition		3887297						
ANR	3887360	Symbol	D_NOHEADER		3887297						
ANR	3887361	Symbol	a_num_cpus		3887297						
