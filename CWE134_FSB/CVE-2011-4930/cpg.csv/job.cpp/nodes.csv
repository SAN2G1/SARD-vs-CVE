command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1698883	File	data/converged/CVE-2011-4930_htcondor/job.cpp								
ANR	1698884	DeclStmt									
ANR	1698885	Decl							const char	const char *	JOB_TAG_NAME
ANR	1698886	DeclStmt									
ANR	1698887	Decl							const char	const char *	PEGASUS_SITE
ANR	1698888	DeclStmt									
ANR	1698889	Decl							JobID_t	JobID_t	Job :: _jobID_counter
ANR	1698890	DeclStmt									
ANR	1698891	Decl							int	int	Job :: NOOP_NODE_PROCID
ANR	1698892	DeclStmt									
ANR	1698893	Decl							int	int	Job :: _nextJobstateSeqNum
ANR	1698894	DeclStmt									
ANR	1698895	Decl							const char	const char * [ ]	Job :: queue_t_names
ANR	1698896	DeclStmt									
ANR	1698897	Decl							const char	const char * [ ]	Job :: status_t_names
ANR	1698898	DeclStmt									
ANR	1698899	Decl							const char	const char * [ ]	Job :: _job_type_names
ANR	1698900	Function	Job :: ~Job	67:0:2199:2977							
ANR	1698901	FunctionDef	Job :: ~Job ()		1698900	0					
ANR	1698902	CompoundStatement		67:12:2211:2977	1698900	0					
ANR	1698903	Statement	delete	68:1:2214:2219	1698900	0	True				
ANR	1698904	Statement	[	68:8:2221:2221	1698900	1	True				
ANR	1698905	Statement	]	68:9:2222:2222	1698900	2	True				
ANR	1698906	ExpressionStatement	_directory	68:11:2224:2234	1698900	3	True				
ANR	1698907	Identifier	_directory		1698900	0					
ANR	1698908	Statement	delete	69:1:2237:2242	1698900	4	True				
ANR	1698909	Statement	[	69:8:2244:2244	1698900	5	True				
ANR	1698910	Statement	]	69:9:2245:2245	1698900	6	True				
ANR	1698911	ExpressionStatement	_cmdFile	69:11:2247:2255	1698900	7	True				
ANR	1698912	Identifier	_cmdFile		1698900	0					
ANR	1698913	Statement	delete	70:1:2258:2263	1698900	8	True				
ANR	1698914	Statement	[	70:8:2265:2265	1698900	9	True				
ANR	1698915	Statement	]	70:9:2266:2266	1698900	10	True				
ANR	1698916	ExpressionStatement	_dagFile	70:11:2268:2276	1698900	11	True				
ANR	1698917	Identifier	_dagFile		1698900	0					
ANR	1698918	Statement	delete	76:1:2609:2614	1698900	12	True				
ANR	1698919	Statement	[	76:8:2616:2616	1698900	13	True				
ANR	1698920	Statement	]	76:9:2617:2617	1698900	14	True				
ANR	1698921	ExpressionStatement	_jobName	76:11:2619:2627	1698900	15	True				
ANR	1698922	Identifier	_jobName		1698900	0					
ANR	1698923	Statement	delete	77:1:2630:2635	1698900	16	True				
ANR	1698924	Statement	[	77:8:2637:2637	1698900	17	True				
ANR	1698925	Statement	]	77:9:2638:2638	1698900	18	True				
ANR	1698926	ExpressionStatement	_logFile	77:11:2640:2648	1698900	19	True				
ANR	1698927	Identifier	_logFile		1698900	0					
ANR	1698928	ExpressionStatement	varNamesFromDag -> Rewind ( )	79:1:2652:2677	1698900	20	True				
ANR	1698929	CallExpression	varNamesFromDag -> Rewind ( )		1698900	0					
ANR	1698930	Callee	varNamesFromDag -> Rewind		1698900	0					
ANR	1698931	PtrMemberAccess	varNamesFromDag -> Rewind		1698900	0					
ANR	1698932	Identifier	varNamesFromDag		1698900	0					
ANR	1698933	Identifier	Rewind		1698900	1					
ANR	1698934	ArgumentList			1698900	1					
ANR	1698935	IdentifierDeclStatement	MyString * name ;	80:1:2680:2694	1698900	21	True				
ANR	1698936	IdentifierDecl	* name		1698900	0					
ANR	1698937	IdentifierDeclType	MyString *		1698900	0					
ANR	1698938	Identifier	name		1698900	1					
ANR	1698939	WhileStatement	while ( ( name = varNamesFromDag -> Next ( ) ) )		1698900	22					
ANR	1698940	Condition	name = varNamesFromDag -> Next ( )	81:9:2705:2736	1698900	0	True				
ANR	1698941	AssignmentExpression	name = varNamesFromDag -> Next ( )		1698900	0		=			
ANR	1698942	Identifier	name		1698900	0					
ANR	1698943	CallExpression	varNamesFromDag -> Next ( )		1698900	1					
ANR	1698944	Callee	varNamesFromDag -> Next		1698900	0					
ANR	1698945	PtrMemberAccess	varNamesFromDag -> Next		1698900	0					
ANR	1698946	Identifier	varNamesFromDag		1698900	0					
ANR	1698947	Identifier	Next		1698900	1					
ANR	1698948	ArgumentList			1698900	1					
ANR	1698949	CompoundStatement		15:44:528:528	1698900	1					
ANR	1698950	Statement	delete	82:2:2744:2749	1698900	0	True				
ANR	1698951	ExpressionStatement	name	82:9:2751:2755	1698900	1	True				
ANR	1698952	Identifier	name		1698900	0					
ANR	1698953	Statement	delete	84:1:2761:2766	1698900	23	True				
ANR	1698954	ExpressionStatement	varNamesFromDag	84:8:2768:2783	1698900	24	True				
ANR	1698955	Identifier	varNamesFromDag		1698900	0					
ANR	1698956	ExpressionStatement	varValsFromDag -> Rewind ( )	86:1:2787:2811	1698900	25	True				
ANR	1698957	CallExpression	varValsFromDag -> Rewind ( )		1698900	0					
ANR	1698958	Callee	varValsFromDag -> Rewind		1698900	0					
ANR	1698959	PtrMemberAccess	varValsFromDag -> Rewind		1698900	0					
ANR	1698960	Identifier	varValsFromDag		1698900	0					
ANR	1698961	Identifier	Rewind		1698900	1					
ANR	1698962	ArgumentList			1698900	1					
ANR	1698963	IdentifierDeclStatement	MyString * val ;	87:1:2814:2827	1698900	26	True				
ANR	1698964	IdentifierDecl	* val		1698900	0					
ANR	1698965	IdentifierDeclType	MyString *		1698900	0					
ANR	1698966	Identifier	val		1698900	1					
ANR	1698967	WhileStatement	while ( ( val = varValsFromDag -> Next ( ) ) )		1698900	27					
ANR	1698968	Condition	val = varValsFromDag -> Next ( )	88:9:2838:2867	1698900	0	True				
ANR	1698969	AssignmentExpression	val = varValsFromDag -> Next ( )		1698900	0		=			
ANR	1698970	Identifier	val		1698900	0					
ANR	1698971	CallExpression	varValsFromDag -> Next ( )		1698900	1					
ANR	1698972	Callee	varValsFromDag -> Next		1698900	0					
ANR	1698973	PtrMemberAccess	varValsFromDag -> Next		1698900	0					
ANR	1698974	Identifier	varValsFromDag		1698900	0					
ANR	1698975	Identifier	Next		1698900	1					
ANR	1698976	ArgumentList			1698900	1					
ANR	1698977	CompoundStatement		22:42:659:659	1698900	1					
ANR	1698978	Statement	delete	89:2:2875:2880	1698900	0	True				
ANR	1698979	ExpressionStatement	val	89:9:2882:2885	1698900	1	True				
ANR	1698980	Identifier	val		1698900	0					
ANR	1698981	Statement	delete	91:1:2891:2896	1698900	28	True				
ANR	1698982	ExpressionStatement	varValsFromDag	91:8:2898:2912	1698900	29	True				
ANR	1698983	Identifier	varValsFromDag		1698900	0					
ANR	1698984	Statement	delete	93:1:2916:2921	1698900	30	True				
ANR	1698985	ExpressionStatement	_scriptPre	93:8:2923:2933	1698900	31	True				
ANR	1698986	Identifier	_scriptPre		1698900	0					
ANR	1698987	Statement	delete	94:1:2936:2941	1698900	32	True				
ANR	1698988	ExpressionStatement	_scriptPost	94:8:2943:2954	1698900	33	True				
ANR	1698989	Identifier	_scriptPost		1698900	0					
ANR	1698990	Statement	delete	96:1:2958:2963	1698900	34	True				
ANR	1698991	Statement	[	96:8:2965:2965	1698900	35	True				
ANR	1698992	Statement	]	96:9:2966:2966	1698900	36	True				
ANR	1698993	ExpressionStatement	_jobTag	96:11:2968:2975	1698900	37	True				
ANR	1698994	Identifier	_jobTag		1698900	0					
ANR	1698995	Identifier	Job :: ~Job		1698900	1					
ANR	1698996	ParameterList			1698900	2					
ANR	1698997	CFGEntryNode	ENTRY		1698900		True				
ANR	1698998	CFGExitNode	EXIT		1698900		True				
ANR	1698999	Symbol	varNamesFromDag -> Next		1698900						
ANR	1699000	Symbol	val		1698900						
ANR	1699001	Symbol	varValsFromDag		1698900						
ANR	1699002	Symbol	* varNamesFromDag		1698900						
ANR	1699003	Symbol	name		1698900						
ANR	1699004	Symbol	varNamesFromDag		1698900						
ANR	1699005	Symbol	varValsFromDag -> Next		1698900						
ANR	1699006	Symbol	* varValsFromDag		1698900						
ANR	1699007	Function	Job :: Job	100:0:3058:3285							
ANR	1699008	FunctionDef	"Job :: Job (const job_type_t jobType , const char * jobName , const char * directory , const char * cmdFile)"		1699007	0					
ANR	1699009	CompoundStatement		103:0:3245:3285	1699007	0					
ANR	1699010	ExpressionStatement	"Init ( jobName , directory , cmdFile )"	104:1:3248:3283	1699007	0	True				
ANR	1699011	CallExpression	"Init ( jobName , directory , cmdFile )"		1699007	0					
ANR	1699012	Callee	Init		1699007	0					
ANR	1699013	Identifier	Init		1699007	0					
ANR	1699014	ArgumentList	jobName		1699007	1					
ANR	1699015	Argument	jobName		1699007	0					
ANR	1699016	Identifier	jobName		1699007	0					
ANR	1699017	Argument	directory		1699007	1					
ANR	1699018	Identifier	directory		1699007	0					
ANR	1699019	Argument	cmdFile		1699007	2					
ANR	1699020	Identifier	cmdFile		1699007	0					
ANR	1699021	Identifier	Job :: Job		1699007	1					
ANR	1699022	ParameterList	"const job_type_t jobType , const char * jobName , const char * directory , const char * cmdFile"		1699007	2					
ANR	1699023	Parameter	const job_type_t jobType	100:10:3068:3091	1699007	0	True				
ANR	1699024	ParameterType	const job_type_t		1699007	0					
ANR	1699025	Identifier	jobType		1699007	1					
ANR	1699026	Parameter	const char * jobName	100:36:3094:3112	1699007	1	True				
ANR	1699027	ParameterType	const char *		1699007	0					
ANR	1699028	Identifier	jobName		1699007	1					
ANR	1699029	Parameter	const char * directory	101:3:3118:3138	1699007	2	True				
ANR	1699030	ParameterType	const char *		1699007	0					
ANR	1699031	Identifier	directory		1699007	1					
ANR	1699032	Parameter	const char * cmdFile	101:26:3141:3159	1699007	3	True				
ANR	1699033	ParameterType	const char *		1699007	0					
ANR	1699034	Identifier	cmdFile		1699007	1					
ANR	1699035	CFGEntryNode	ENTRY		1699007		True				
ANR	1699036	CFGExitNode	EXIT		1699007		True				
ANR	1699037	Symbol	jobName		1699007						
ANR	1699038	Symbol	jobType		1699007						
ANR	1699039	Symbol	directory		1699007						
ANR	1699040	Symbol	cmdFile		1699007						
ANR	1699041	Function	Job :: Init	108:0:3366:4843							
ANR	1699042	FunctionDef	"Job :: Init (const char * jobName , const char * directory , const char * cmdFile)"		1699041	0					
ANR	1699043	CompoundStatement		110:0:3451:4843	1699041	0					
ANR	1699044	ExpressionStatement	ASSERT ( jobName != NULL )	111:1:3454:3479	1699041	0	True				
ANR	1699045	CallExpression	ASSERT ( jobName != NULL )		1699041	0					
ANR	1699046	Callee	ASSERT		1699041	0					
ANR	1699047	Identifier	ASSERT		1699041	0					
ANR	1699048	ArgumentList	jobName != NULL		1699041	1					
ANR	1699049	Argument	jobName != NULL		1699041	0					
ANR	1699050	EqualityExpression	jobName != NULL		1699041	0		!=			
ANR	1699051	Identifier	jobName		1699041	0					
ANR	1699052	Identifier	NULL		1699041	1					
ANR	1699053	ExpressionStatement	ASSERT ( cmdFile != NULL )	112:1:3482:3507	1699041	1	True				
ANR	1699054	CallExpression	ASSERT ( cmdFile != NULL )		1699041	0					
ANR	1699055	Callee	ASSERT		1699041	0					
ANR	1699056	Identifier	ASSERT		1699041	0					
ANR	1699057	ArgumentList	cmdFile != NULL		1699041	1					
ANR	1699058	Argument	cmdFile != NULL		1699041	0					
ANR	1699059	EqualityExpression	cmdFile != NULL		1699041	0		!=			
ANR	1699060	Identifier	cmdFile		1699041	0					
ANR	1699061	Identifier	NULL		1699041	1					
ANR	1699062	ExpressionStatement	"debug_printf ( DEBUG_DEBUG_1 , ""Job::Init(%s, %s, %s)\\n"" , jobName , directory , cmdFile )"	114:1:3511:3600	1699041	2	True				
ANR	1699063	CallExpression	"debug_printf ( DEBUG_DEBUG_1 , ""Job::Init(%s, %s, %s)\\n"" , jobName , directory , cmdFile )"		1699041	0					
ANR	1699064	Callee	debug_printf		1699041	0					
ANR	1699065	Identifier	debug_printf		1699041	0					
ANR	1699066	ArgumentList	DEBUG_DEBUG_1		1699041	1					
ANR	1699067	Argument	DEBUG_DEBUG_1		1699041	0					
ANR	1699068	Identifier	DEBUG_DEBUG_1		1699041	0					
ANR	1699069	Argument	"""Job::Init(%s, %s, %s)\\n"""		1699041	1					
ANR	1699070	PrimaryExpression	"""Job::Init(%s, %s, %s)\\n"""		1699041	0					
ANR	1699071	Argument	jobName		1699041	2					
ANR	1699072	Identifier	jobName		1699041	0					
ANR	1699073	Argument	directory		1699041	3					
ANR	1699074	Identifier	directory		1699041	0					
ANR	1699075	Argument	cmdFile		1699041	4					
ANR	1699076	Identifier	cmdFile		1699041	0					
ANR	1699077	ExpressionStatement	_scriptPre = NULL	117:4:3607:3624	1699041	3	True				
ANR	1699078	AssignmentExpression	_scriptPre = NULL		1699041	0		=			
ANR	1699079	Identifier	_scriptPre		1699041	0					
ANR	1699080	Identifier	NULL		1699041	1					
ANR	1699081	ExpressionStatement	_scriptPost = NULL	118:4:3630:3648	1699041	4	True				
ANR	1699082	AssignmentExpression	_scriptPost = NULL		1699041	0		=			
ANR	1699083	Identifier	_scriptPost		1699041	0					
ANR	1699084	Identifier	NULL		1699041	1					
ANR	1699085	ExpressionStatement	_Status = STATUS_READY	119:4:3654:3676	1699041	5	True				
ANR	1699086	AssignmentExpression	_Status = STATUS_READY		1699041	0		=			
ANR	1699087	Identifier	_Status		1699041	0					
ANR	1699088	Identifier	STATUS_READY		1699041	1					
ANR	1699089	ExpressionStatement	_isIdle = false	120:1:3679:3694	1699041	6	True				
ANR	1699090	AssignmentExpression	_isIdle = false		1699041	0		=			
ANR	1699091	Identifier	_isIdle		1699041	0					
ANR	1699092	Identifier	false		1699041	1					
ANR	1699093	ExpressionStatement	countedAsDone = false	121:1:3697:3718	1699041	7	True				
ANR	1699094	AssignmentExpression	countedAsDone = false		1699041	0		=			
ANR	1699095	Identifier	countedAsDone		1699041	0					
ANR	1699096	Identifier	false		1699041	1					
ANR	1699097	ExpressionStatement	_jobName = strnewp ( jobName )	123:4:3725:3753	1699041	8	True				
ANR	1699098	AssignmentExpression	_jobName = strnewp ( jobName )		1699041	0		=			
ANR	1699099	Identifier	_jobName		1699041	0					
ANR	1699100	CallExpression	strnewp ( jobName )		1699041	1					
ANR	1699101	Callee	strnewp		1699041	0					
ANR	1699102	Identifier	strnewp		1699041	0					
ANR	1699103	ArgumentList	jobName		1699041	1					
ANR	1699104	Argument	jobName		1699041	0					
ANR	1699105	Identifier	jobName		1699041	0					
ANR	1699106	ExpressionStatement	_directory = strnewp ( directory )	124:1:3756:3788	1699041	9	True				
ANR	1699107	AssignmentExpression	_directory = strnewp ( directory )		1699041	0		=			
ANR	1699108	Identifier	_directory		1699041	0					
ANR	1699109	CallExpression	strnewp ( directory )		1699041	1					
ANR	1699110	Callee	strnewp		1699041	0					
ANR	1699111	Identifier	strnewp		1699041	0					
ANR	1699112	ArgumentList	directory		1699041	1					
ANR	1699113	Argument	directory		1699041	0					
ANR	1699114	Identifier	directory		1699041	0					
ANR	1699115	ExpressionStatement	_cmdFile = strnewp ( cmdFile )	125:4:3794:3822	1699041	10	True				
ANR	1699116	AssignmentExpression	_cmdFile = strnewp ( cmdFile )		1699041	0		=			
ANR	1699117	Identifier	_cmdFile		1699041	0					
ANR	1699118	CallExpression	strnewp ( cmdFile )		1699041	1					
ANR	1699119	Callee	strnewp		1699041	0					
ANR	1699120	Identifier	strnewp		1699041	0					
ANR	1699121	ArgumentList	cmdFile		1699041	1					
ANR	1699122	Argument	cmdFile		1699041	0					
ANR	1699123	Identifier	cmdFile		1699041	0					
ANR	1699124	ExpressionStatement	_dagFile = NULL	126:1:3825:3840	1699041	11	True				
ANR	1699125	AssignmentExpression	_dagFile = NULL		1699041	0		=			
ANR	1699126	Identifier	_dagFile		1699041	0					
ANR	1699127	Identifier	NULL		1699041	1					
ANR	1699128	ExpressionStatement	_throttleInfo = NULL	127:1:3843:3863	1699041	12	True				
ANR	1699129	AssignmentExpression	_throttleInfo = NULL		1699041	0		=			
ANR	1699130	Identifier	_throttleInfo		1699041	0					
ANR	1699131	Identifier	NULL		1699041	1					
ANR	1699132	ExpressionStatement	_logIsMonitored = false	128:1:3866:3889	1699041	13	True				
ANR	1699133	AssignmentExpression	_logIsMonitored = false		1699041	0		=			
ANR	1699134	Identifier	_logIsMonitored		1699041	0					
ANR	1699135	Identifier	false		1699041	1					
ANR	1699136	ExpressionStatement	_useDefaultLog = false	129:1:3892:3914	1699041	14	True				
ANR	1699137	AssignmentExpression	_useDefaultLog = false		1699041	0		=			
ANR	1699138	Identifier	_useDefaultLog		1699041	0					
ANR	1699139	Identifier	false		1699041	1					
ANR	1699140	ExpressionStatement	_jobID = _jobID_counter ++	134:4:4036:4061	1699041	15	True				
ANR	1699141	AssignmentExpression	_jobID = _jobID_counter ++		1699041	0		=			
ANR	1699142	Identifier	_jobID		1699041	0					
ANR	1699143	PostIncDecOperationExpression	_jobID_counter ++		1699041	1					
ANR	1699144	Identifier	_jobID_counter		1699041	0					
ANR	1699145	IncDec	++		1699041	1					
ANR	1699146	ExpressionStatement	retry_max = 0	136:4:4068:4081	1699041	16	True				
ANR	1699147	AssignmentExpression	retry_max = 0		1699041	0		=			
ANR	1699148	Identifier	retry_max		1699041	0					
ANR	1699149	PrimaryExpression	0		1699041	1					
ANR	1699150	ExpressionStatement	retries = 0	137:4:4087:4098	1699041	17	True				
ANR	1699151	AssignmentExpression	retries = 0		1699041	0		=			
ANR	1699152	Identifier	retries		1699041	0					
ANR	1699153	PrimaryExpression	0		1699041	1					
ANR	1699154	ExpressionStatement	_submitTries = 0	138:4:4104:4120	1699041	18	True				
ANR	1699155	AssignmentExpression	_submitTries = 0		1699041	0		=			
ANR	1699156	Identifier	_submitTries		1699041	0					
ANR	1699157	PrimaryExpression	0		1699041	1					
ANR	1699158	ExpressionStatement	retval = - 1	139:1:4123:4134	1699041	19	True				
ANR	1699159	AssignmentExpression	retval = - 1		1699041	0		=			
ANR	1699160	Identifier	retval		1699041	0					
ANR	1699161	UnaryOperationExpression	- 1		1699041	1					
ANR	1699162	UnaryOperator	-		1699041	0					
ANR	1699163	PrimaryExpression	1		1699041	1					
ANR	1699164	ExpressionStatement	have_retry_abort_val = false	140:4:4164:4192	1699041	20	True				
ANR	1699165	AssignmentExpression	have_retry_abort_val = false		1699041	0		=			
ANR	1699166	Identifier	have_retry_abort_val		1699041	0					
ANR	1699167	Identifier	false		1699041	1					
ANR	1699168	ExpressionStatement	retry_abort_val = 0xdeadbeef	141:4:4198:4226	1699041	21	True				
ANR	1699169	AssignmentExpression	retry_abort_val = 0xdeadbeef		1699041	0		=			
ANR	1699170	Identifier	retry_abort_val		1699041	0					
ANR	1699171	PrimaryExpression	0xdeadbeef		1699041	1					
ANR	1699172	ExpressionStatement	have_abort_dag_val = false	142:4:4232:4258	1699041	22	True				
ANR	1699173	AssignmentExpression	have_abort_dag_val = false		1699041	0		=			
ANR	1699174	Identifier	have_abort_dag_val		1699041	0					
ANR	1699175	Identifier	false		1699041	1					
ANR	1699176	ExpressionStatement	abort_dag_val = - 1	143:1:4261:4279	1699041	23	True				
ANR	1699177	AssignmentExpression	abort_dag_val = - 1		1699041	0		=			
ANR	1699178	Identifier	abort_dag_val		1699041	0					
ANR	1699179	UnaryOperationExpression	- 1		1699041	1					
ANR	1699180	UnaryOperator	-		1699041	0					
ANR	1699181	PrimaryExpression	1		1699041	1					
ANR	1699182	ExpressionStatement	have_abort_dag_return_val = false	144:4:4309:4342	1699041	24	True				
ANR	1699183	AssignmentExpression	have_abort_dag_return_val = false		1699041	0		=			
ANR	1699184	Identifier	have_abort_dag_return_val		1699041	0					
ANR	1699185	Identifier	false		1699041	1					
ANR	1699186	ExpressionStatement	abort_dag_return_val = - 1	145:1:4345:4370	1699041	25	True				
ANR	1699187	AssignmentExpression	abort_dag_return_val = - 1		1699041	0		=			
ANR	1699188	Identifier	abort_dag_return_val		1699041	0					
ANR	1699189	UnaryOperationExpression	- 1		1699041	1					
ANR	1699190	UnaryOperator	-		1699041	0					
ANR	1699191	PrimaryExpression	1		1699041	1					
ANR	1699192	ExpressionStatement	_visited = false	146:1:4397:4413	1699041	26	True				
ANR	1699193	AssignmentExpression	_visited = false		1699041	0		=			
ANR	1699194	Identifier	_visited		1699041	0					
ANR	1699195	Identifier	false		1699041	1					
ANR	1699196	ExpressionStatement	_dfsOrder = - 1	147:1:4416:4430	1699041	27	True				
ANR	1699197	AssignmentExpression	_dfsOrder = - 1		1699041	0		=			
ANR	1699198	Identifier	_dfsOrder		1699041	0					
ANR	1699199	UnaryOperationExpression	- 1		1699041	1					
ANR	1699200	UnaryOperator	-		1699041	0					
ANR	1699201	PrimaryExpression	1		1699041	1					
ANR	1699202	ExpressionStatement	_queuedNodeJobProcs = 0	149:1:4458:4481	1699041	28	True				
ANR	1699203	AssignmentExpression	_queuedNodeJobProcs = 0		1699041	0		=			
ANR	1699204	Identifier	_queuedNodeJobProcs		1699041	0					
ANR	1699205	PrimaryExpression	0		1699041	1					
ANR	1699206	ExpressionStatement	_hasNodePriority = false	151:1:4485:4509	1699041	29	True				
ANR	1699207	AssignmentExpression	_hasNodePriority = false		1699041	0		=			
ANR	1699208	Identifier	_hasNodePriority		1699041	0					
ANR	1699209	Identifier	false		1699041	1					
ANR	1699210	ExpressionStatement	_nodePriority = 0	152:1:4512:4529	1699041	30	True				
ANR	1699211	AssignmentExpression	_nodePriority = 0		1699041	0		=			
ANR	1699212	Identifier	_nodePriority		1699041	0					
ANR	1699213	PrimaryExpression	0		1699041	1					
ANR	1699214	ExpressionStatement	_logFile = NULL	154:4:4536:4551	1699041	31	True				
ANR	1699215	AssignmentExpression	_logFile = NULL		1699041	0		=			
ANR	1699216	Identifier	_logFile		1699041	0					
ANR	1699217	Identifier	NULL		1699041	1					
ANR	1699218	ExpressionStatement	_logFileIsXml = false	155:1:4554:4575	1699041	32	True				
ANR	1699219	AssignmentExpression	_logFileIsXml = false		1699041	0		=			
ANR	1699220	Identifier	_logFileIsXml		1699041	0					
ANR	1699221	Identifier	false		1699041	1					
ANR	1699222	ExpressionStatement	_noop = false	157:1:4579:4592	1699041	33	True				
ANR	1699223	AssignmentExpression	_noop = false		1699041	0		=			
ANR	1699224	Identifier	_noop		1699041	0					
ANR	1699225	Identifier	false		1699041	1					
ANR	1699226	ExpressionStatement	_jobTag = NULL	159:1:4596:4610	1699041	34	True				
ANR	1699227	AssignmentExpression	_jobTag = NULL		1699041	0		=			
ANR	1699228	Identifier	_jobTag		1699041	0					
ANR	1699229	Identifier	NULL		1699041	1					
ANR	1699230	ExpressionStatement	_jobstateSeqNum = 0	160:1:4613:4632	1699041	35	True				
ANR	1699231	AssignmentExpression	_jobstateSeqNum = 0		1699041	0		=			
ANR	1699232	Identifier	_jobstateSeqNum		1699041	0					
ANR	1699233	PrimaryExpression	0		1699041	1					
ANR	1699234	ExpressionStatement	_lastEventTime = 0	161:1:4635:4653	1699041	36	True				
ANR	1699235	AssignmentExpression	_lastEventTime = 0		1699041	0		=			
ANR	1699236	Identifier	_lastEventTime		1699041	0					
ANR	1699237	PrimaryExpression	0		1699041	1					
ANR	1699238	Statement	varNamesFromDag	163:1:4657:4671	1699041	37	True				
ANR	1699239	Statement	=	163:17:4673:4673	1699041	38	True				
ANR	1699240	Statement	new	163:19:4675:4677	1699041	39	True				
ANR	1699241	Statement	List	163:23:4679:4682	1699041	40	True				
ANR	1699242	Statement	<	163:27:4683:4683	1699041	41	True				
ANR	1699243	Statement	MyString	163:28:4684:4691	1699041	42	True				
ANR	1699244	Statement	>	163:36:4692:4692	1699041	43	True				
ANR	1699245	ExpressionStatement		163:37:4693:4693	1699041	44	True				
ANR	1699246	Statement	varValsFromDag	164:1:4696:4709	1699041	45	True				
ANR	1699247	Statement	=	164:16:4711:4711	1699041	46	True				
ANR	1699248	Statement	new	164:18:4713:4715	1699041	47	True				
ANR	1699249	Statement	List	164:22:4717:4720	1699041	48	True				
ANR	1699250	Statement	<	164:26:4721:4721	1699041	49	True				
ANR	1699251	Statement	MyString	164:27:4722:4729	1699041	50	True				
ANR	1699252	Statement	>	164:35:4730:4730	1699041	51	True				
ANR	1699253	ExpressionStatement		164:36:4731:4731	1699041	52	True				
ANR	1699254	ExpressionStatement	"snprintf ( error_text , JOB_ERROR_TEXT_MAXLEN , ""unknown"" )"	166:1:4735:4791	1699041	53	True				
ANR	1699255	CallExpression	"snprintf ( error_text , JOB_ERROR_TEXT_MAXLEN , ""unknown"" )"		1699041	0					
ANR	1699256	Callee	snprintf		1699041	0					
ANR	1699257	Identifier	snprintf		1699041	0					
ANR	1699258	ArgumentList	error_text		1699041	1					
ANR	1699259	Argument	error_text		1699041	0					
ANR	1699260	Identifier	error_text		1699041	0					
ANR	1699261	Argument	JOB_ERROR_TEXT_MAXLEN		1699041	1					
ANR	1699262	Identifier	JOB_ERROR_TEXT_MAXLEN		1699041	0					
ANR	1699263	Argument	"""unknown"""		1699041	2					
ANR	1699264	PrimaryExpression	"""unknown"""		1699041	0					
ANR	1699265	ExpressionStatement	_timesHeld = 0	168:1:4795:4809	1699041	54	True				
ANR	1699266	AssignmentExpression	_timesHeld = 0		1699041	0		=			
ANR	1699267	Identifier	_timesHeld		1699041	0					
ANR	1699268	PrimaryExpression	0		1699041	1					
ANR	1699269	ExpressionStatement	_jobProcsOnHold = 0	169:1:4812:4831	1699041	55	True				
ANR	1699270	AssignmentExpression	_jobProcsOnHold = 0		1699041	0		=			
ANR	1699271	Identifier	_jobProcsOnHold		1699041	0					
ANR	1699272	PrimaryExpression	0		1699041	1					
ANR	1699273	ReturnStatement	return ;	171:1:4835:4841	1699041	56	True				
ANR	1699274	ReturnType	void		1699041	1					
ANR	1699275	Identifier	Job :: Init		1699041	2					
ANR	1699276	ParameterList	"const char * jobName , const char * directory , const char * cmdFile"		1699041	3					
ANR	1699277	Parameter	const char * jobName	108:16:3382:3400	1699041	0	True				
ANR	1699278	ParameterType	const char *		1699041	0					
ANR	1699279	Identifier	jobName		1699041	1					
ANR	1699280	Parameter	const char * directory	108:37:3403:3423	1699041	1	True				
ANR	1699281	ParameterType	const char *		1699041	0					
ANR	1699282	Identifier	directory		1699041	1					
ANR	1699283	Parameter	const char * cmdFile	109:3:3429:3447	1699041	2	True				
ANR	1699284	ParameterType	const char *		1699041	0					
ANR	1699285	Identifier	cmdFile		1699041	1					
ANR	1699286	CFGEntryNode	ENTRY		1699041		True				
ANR	1699287	CFGExitNode	EXIT		1699041		True				
ANR	1699288	Symbol	error_text		1699041						
ANR	1699289	Symbol	_scriptPost		1699041						
ANR	1699290	Symbol	_logFile		1699041						
ANR	1699291	Symbol	_hasNodePriority		1699041						
ANR	1699292	Symbol	_visited		1699041						
ANR	1699293	Symbol	countedAsDone		1699041						
ANR	1699294	Symbol	retry_max		1699041						
ANR	1699295	Symbol	directory		1699041						
ANR	1699296	Symbol	_logIsMonitored		1699041						
ANR	1699297	Symbol	_directory		1699041						
ANR	1699298	Symbol	STATUS_READY		1699041						
ANR	1699299	Symbol	_jobstateSeqNum		1699041						
ANR	1699300	Symbol	_Status		1699041						
ANR	1699301	Symbol	_nodePriority		1699041						
ANR	1699302	Symbol	_throttleInfo		1699041						
ANR	1699303	Symbol	_useDefaultLog		1699041						
ANR	1699304	Symbol	strnewp		1699041						
ANR	1699305	Symbol	abort_dag_return_val		1699041						
ANR	1699306	Symbol	DEBUG_DEBUG_1		1699041						
ANR	1699307	Symbol	_dfsOrder		1699041						
ANR	1699308	Symbol	jobName		1699041						
ANR	1699309	Symbol	_logFileIsXml		1699041						
ANR	1699310	Symbol	NULL		1699041						
ANR	1699311	Symbol	_submitTries		1699041						
ANR	1699312	Symbol	JOB_ERROR_TEXT_MAXLEN		1699041						
ANR	1699313	Symbol	have_abort_dag_return_val		1699041						
ANR	1699314	Symbol	have_abort_dag_val		1699041						
ANR	1699315	Symbol	_jobTag		1699041						
ANR	1699316	Symbol	false		1699041						
ANR	1699317	Symbol	_isIdle		1699041						
ANR	1699318	Symbol	_timesHeld		1699041						
ANR	1699319	Symbol	_lastEventTime		1699041						
ANR	1699320	Symbol	_cmdFile		1699041						
ANR	1699321	Symbol	have_retry_abort_val		1699041						
ANR	1699322	Symbol	retry_abort_val		1699041						
ANR	1699323	Symbol	retval		1699041						
ANR	1699324	Symbol	_noop		1699041						
ANR	1699325	Symbol	_jobName		1699041						
ANR	1699326	Symbol	_jobID_counter		1699041						
ANR	1699327	Symbol	retries		1699041						
ANR	1699328	Symbol	_queuedNodeJobProcs		1699041						
ANR	1699329	Symbol	_dagFile		1699041						
ANR	1699330	Symbol	_jobProcsOnHold		1699041						
ANR	1699331	Symbol	abort_dag_val		1699041						
ANR	1699332	Symbol	cmdFile		1699041						
ANR	1699333	Symbol	_scriptPre		1699041						
ANR	1699334	Symbol	_jobID		1699041						
ANR	1699335	Function	Job :: PrefixDirectory	174:0:4923:5300							
ANR	1699336	FunctionDef	Job :: PrefixDirectory (MyString & prefix)		1699335	0					
ANR	1699337	CompoundStatement		176:0:4967:5300	1699335	0					
ANR	1699338	IdentifierDeclStatement	MyString newdir ;	177:1:4970:4985	1699335	0	True				
ANR	1699339	IdentifierDecl	newdir		1699335	0					
ANR	1699340	IdentifierDeclType	MyString		1699335	0					
ANR	1699341	Identifier	newdir		1699335	1					
ANR	1699342	IfStatement	"if ( prefix == ""."" )"		1699335	1					
ANR	1699343	Condition	"prefix == ""."""	180:5:5029:5041	1699335	0	True				
ANR	1699344	EqualityExpression	"prefix == ""."""		1699335	0		==			
ANR	1699345	Identifier	prefix		1699335	0					
ANR	1699346	PrimaryExpression	"""."""		1699335	1					
ANR	1699347	CompoundStatement		5:20:76:76	1699335	1					
ANR	1699348	ReturnStatement	return ;	181:2:5048:5054	1699335	0	True				
ANR	1699349	IfStatement	if ( _directory [ 0 ] == '/' )		1699335	2					
ANR	1699350	Condition	_directory [ 0 ] == '/'	185:5:5113:5132	1699335	0	True				
ANR	1699351	EqualityExpression	_directory [ 0 ] == '/'		1699335	0		==			
ANR	1699352	ArrayIndexing	_directory [ 0 ]		1699335	0					
ANR	1699353	Identifier	_directory		1699335	0					
ANR	1699354	PrimaryExpression	0		1699335	1					
ANR	1699355	PrimaryExpression	'/'		1699335	1					
ANR	1699356	CompoundStatement		10:27:167:167	1699335	1					
ANR	1699357	ReturnStatement	return ;	186:2:5139:5145	1699335	0	True				
ANR	1699358	ExpressionStatement	newdir += prefix	191:1:5179:5195	1699335	3	True				
ANR	1699359	AssignmentExpression	newdir += prefix		1699335	0		+=			
ANR	1699360	Identifier	newdir		1699335	0					
ANR	1699361	Identifier	prefix		1699335	1					
ANR	1699362	ExpressionStatement	"newdir += ""/"""	192:1:5198:5211	1699335	4	True				
ANR	1699363	AssignmentExpression	"newdir += ""/"""		1699335	0		+=			
ANR	1699364	Identifier	newdir		1699335	0					
ANR	1699365	PrimaryExpression	"""/"""		1699335	1					
ANR	1699366	ExpressionStatement	newdir += _directory	193:1:5214:5234	1699335	5	True				
ANR	1699367	AssignmentExpression	newdir += _directory		1699335	0		+=			
ANR	1699368	Identifier	newdir		1699335	0					
ANR	1699369	Identifier	_directory		1699335	1					
ANR	1699370	Statement	delete	195:1:5238:5243	1699335	6	True				
ANR	1699371	Statement	[	195:8:5245:5245	1699335	7	True				
ANR	1699372	Statement	]	195:9:5246:5246	1699335	8	True				
ANR	1699373	ExpressionStatement	_directory	195:11:5248:5258	1699335	9	True				
ANR	1699374	Identifier	_directory		1699335	0					
ANR	1699375	ExpressionStatement	_directory = strnewp ( newdir . Value ( ) )	197:1:5262:5298	1699335	10	True				
ANR	1699376	AssignmentExpression	_directory = strnewp ( newdir . Value ( ) )		1699335	0		=			
ANR	1699377	Identifier	_directory		1699335	0					
ANR	1699378	CallExpression	strnewp ( newdir . Value ( ) )		1699335	1					
ANR	1699379	Callee	strnewp		1699335	0					
ANR	1699380	Identifier	strnewp		1699335	0					
ANR	1699381	ArgumentList	newdir . Value ( )		1699335	1					
ANR	1699382	Argument	newdir . Value ( )		1699335	0					
ANR	1699383	CallExpression	newdir . Value ( )		1699335	0					
ANR	1699384	Callee	newdir . Value		1699335	0					
ANR	1699385	MemberAccess	newdir . Value		1699335	0					
ANR	1699386	Identifier	newdir		1699335	0					
ANR	1699387	Identifier	Value		1699335	1					
ANR	1699388	ArgumentList			1699335	1					
ANR	1699389	ReturnType	void		1699335	1					
ANR	1699390	Identifier	Job :: PrefixDirectory		1699335	2					
ANR	1699391	ParameterList	MyString & prefix		1699335	3					
ANR	1699392	Parameter	MyString & prefix	175:21:4949:4964	1699335	0	True				
ANR	1699393	ParameterType	MyString &		1699335	0					
ANR	1699394	Identifier	prefix		1699335	1					
ANR	1699395	CFGEntryNode	ENTRY		1699335		True				
ANR	1699396	CFGExitNode	EXIT		1699335		True				
ANR	1699397	Symbol	newdir . Value		1699335						
ANR	1699398	Symbol	prefix		1699335						
ANR	1699399	Symbol	newdir		1699335						
ANR	1699400	Symbol	* _directory		1699335						
ANR	1699401	Symbol	strnewp		1699335						
ANR	1699402	Symbol	_directory		1699335						
ANR	1699403	Function	Job :: Remove	201:0:5381:5539							
ANR	1699404	FunctionDef	"Job :: Remove (const queue_t queue , const JobID_t jobID)"		1699403	0					
ANR	1699405	CompoundStatement		202:0:5441:5539	1699403	0					
ANR	1699406	IfStatement	if ( _queues [ queue ] . erase ( jobID ) == 0 )		1699403	0					
ANR	1699407	Condition	_queues [ queue ] . erase ( jobID ) == 0	203:5:5448:5479	1699403	0	True				
ANR	1699408	EqualityExpression	_queues [ queue ] . erase ( jobID ) == 0		1699403	0		==			
ANR	1699409	CallExpression	_queues [ queue ] . erase ( jobID )		1699403	0					
ANR	1699410	Callee	_queues [ queue ] . erase		1699403	0					
ANR	1699411	MemberAccess	_queues [ queue ] . erase		1699403	0					
ANR	1699412	ArrayIndexing	_queues [ queue ]		1699403	0					
ANR	1699413	Identifier	_queues		1699403	0					
ANR	1699414	Identifier	queue		1699403	1					
ANR	1699415	Identifier	erase		1699403	1					
ANR	1699416	ArgumentList	jobID		1699403	1					
ANR	1699417	Argument	jobID		1699403	0					
ANR	1699418	Identifier	jobID		1699403	0					
ANR	1699419	PrimaryExpression	0		1699403	1					
ANR	1699420	CompoundStatement		2:39:40:40	1699403	1					
ANR	1699421	ReturnStatement	return false ;	204:2:5486:5498	1699403	0	True				
ANR	1699422	Identifier	false		1699403	0					
ANR	1699423	ReturnStatement	return true ;	207:1:5526:5537	1699403	1	True				
ANR	1699424	Identifier	true		1699403	0					
ANR	1699425	ReturnType	bool		1699403	1					
ANR	1699426	Identifier	Job :: Remove		1699403	2					
ANR	1699427	ParameterList	"const queue_t queue , const JobID_t jobID"		1699403	3					
ANR	1699428	Parameter	const queue_t queue	201:18:5399:5417	1699403	0	True				
ANR	1699429	ParameterType	const queue_t		1699403	0					
ANR	1699430	Identifier	queue		1699403	1					
ANR	1699431	Parameter	const JobID_t jobID	201:39:5420:5438	1699403	1	True				
ANR	1699432	ParameterType	const JobID_t		1699403	0					
ANR	1699433	Identifier	jobID		1699403	1					
ANR	1699434	CFGEntryNode	ENTRY		1699403		True				
ANR	1699435	CFGExitNode	EXIT		1699403		True				
ANR	1699436	Symbol	jobID		1699403						
ANR	1699437	Symbol	* queue		1699403						
ANR	1699438	Symbol	_queues		1699403						
ANR	1699439	Symbol	* _queues		1699403						
ANR	1699440	Symbol	false		1699403						
ANR	1699441	Symbol	true		1699403						
ANR	1699442	Symbol	_queues [ queue ] . erase		1699403						
ANR	1699443	Symbol	queue		1699403						
ANR	1699444	Function	Job :: CheckForLogFile	211:0:5622:5837							
ANR	1699445	FunctionDef	Job :: CheckForLogFile ()		1699444	0					
ANR	1699446	CompoundStatement		213:0:5656:5837	1699444	0					
ANR	1699447	IdentifierDeclStatement	bool tmpLogFileIsXml ;	214:1:5659:5679	1699444	0	True				
ANR	1699448	IdentifierDecl	tmpLogFileIsXml		1699444	0					
ANR	1699449	IdentifierDeclType	bool		1699444	0					
ANR	1699450	Identifier	tmpLogFileIsXml		1699444	1					
ANR	1699451	IdentifierDeclStatement	"MyString logFile = MultiLogFiles :: loadLogFileNameFromSubFile ( _cmdFile , _directory , tmpLogFileIsXml ) ;"	215:1:5682:5787	1699444	1	True				
ANR	1699452	IdentifierDecl	"logFile = MultiLogFiles :: loadLogFileNameFromSubFile ( _cmdFile , _directory , tmpLogFileIsXml )"		1699444	0					
ANR	1699453	IdentifierDeclType	MyString		1699444	0					
ANR	1699454	Identifier	logFile		1699444	1					
ANR	1699455	AssignmentExpression	"logFile = MultiLogFiles :: loadLogFileNameFromSubFile ( _cmdFile , _directory , tmpLogFileIsXml )"		1699444	2		=			
ANR	1699456	Identifier	logFile		1699444	0					
ANR	1699457	CallExpression	"MultiLogFiles :: loadLogFileNameFromSubFile ( _cmdFile , _directory , tmpLogFileIsXml )"		1699444	1					
ANR	1699458	Callee	MultiLogFiles :: loadLogFileNameFromSubFile		1699444	0					
ANR	1699459	Identifier	MultiLogFiles :: loadLogFileNameFromSubFile		1699444	0					
ANR	1699460	ArgumentList	_cmdFile		1699444	1					
ANR	1699461	Argument	_cmdFile		1699444	0					
ANR	1699462	Identifier	_cmdFile		1699444	0					
ANR	1699463	Argument	_directory		1699444	1					
ANR	1699464	Identifier	_directory		1699444	0					
ANR	1699465	Argument	tmpLogFileIsXml		1699444	2					
ANR	1699466	Identifier	tmpLogFileIsXml		1699444	0					
ANR	1699467	IdentifierDeclStatement	"bool result = ( logFile != """" ) ;"	217:1:5790:5819	1699444	2	True				
ANR	1699468	IdentifierDecl	"result = ( logFile != """" )"		1699444	0					
ANR	1699469	IdentifierDeclType	bool		1699444	0					
ANR	1699470	Identifier	result		1699444	1					
ANR	1699471	AssignmentExpression	"result = ( logFile != """" )"		1699444	2		=			
ANR	1699472	Identifier	result		1699444	0					
ANR	1699473	EqualityExpression	"logFile != """""		1699444	1		!=			
ANR	1699474	Identifier	logFile		1699444	0					
ANR	1699475	PrimaryExpression	""""""		1699444	1					
ANR	1699476	ReturnStatement	return result ;	218:1:5822:5835	1699444	3	True				
ANR	1699477	Identifier	result		1699444	0					
ANR	1699478	ReturnType	bool		1699444	1					
ANR	1699479	Identifier	Job :: CheckForLogFile		1699444	2					
ANR	1699480	ParameterList			1699444	3					
ANR	1699481	CFGEntryNode	ENTRY		1699444		True				
ANR	1699482	CFGExitNode	EXIT		1699444		True				
ANR	1699483	Symbol	result		1699444						
ANR	1699484	Symbol	tmpLogFileIsXml		1699444						
ANR	1699485	Symbol	logFile		1699444						
ANR	1699486	Symbol	_cmdFile		1699444						
ANR	1699487	Symbol	MultiLogFiles :: loadLogFileNameFromSubFile		1699444						
ANR	1699488	Symbol	_directory		1699444						
ANR	1699489	Function	Job :: Dump	222:0:5918:7428							
ANR	1699490	FunctionDef	Job :: Dump (const Dag * dag)		1699489	0					
ANR	1699491	CompoundStatement		222:40:5958:7428	1699489	0					
ANR	1699492	ExpressionStatement	"dprintf ( D_ALWAYS , ""---------------------- Job ----------------------\\n"" )"	223:4:5964:6037	1699489	0	True				
ANR	1699493	CallExpression	"dprintf ( D_ALWAYS , ""---------------------- Job ----------------------\\n"" )"		1699489	0					
ANR	1699494	Callee	dprintf		1699489	0					
ANR	1699495	Identifier	dprintf		1699489	0					
ANR	1699496	ArgumentList	D_ALWAYS		1699489	1					
ANR	1699497	Argument	D_ALWAYS		1699489	0					
ANR	1699498	Identifier	D_ALWAYS		1699489	0					
ANR	1699499	Argument	"""---------------------- Job ----------------------\\n"""		1699489	1					
ANR	1699500	PrimaryExpression	"""---------------------- Job ----------------------\\n"""		1699489	0					
ANR	1699501	ExpressionStatement	"dprintf ( D_ALWAYS , ""      Node Name: %s\\n"" , _jobName )"	224:4:6043:6097	1699489	1	True				
ANR	1699502	CallExpression	"dprintf ( D_ALWAYS , ""      Node Name: %s\\n"" , _jobName )"		1699489	0					
ANR	1699503	Callee	dprintf		1699489	0					
ANR	1699504	Identifier	dprintf		1699489	0					
ANR	1699505	ArgumentList	D_ALWAYS		1699489	1					
ANR	1699506	Argument	D_ALWAYS		1699489	0					
ANR	1699507	Identifier	D_ALWAYS		1699489	0					
ANR	1699508	Argument	"""      Node Name: %s\\n"""		1699489	1					
ANR	1699509	PrimaryExpression	"""      Node Name: %s\\n"""		1699489	0					
ANR	1699510	Argument	_jobName		1699489	2					
ANR	1699511	Identifier	_jobName		1699489	0					
ANR	1699512	ExpressionStatement	"dprintf ( D_ALWAYS , ""           Noop: %s\\n"" , _noop ? ""true"" : ""false"" )"	225:4:6103:6173	1699489	2	True				
ANR	1699513	CallExpression	"dprintf ( D_ALWAYS , ""           Noop: %s\\n"" , _noop ? ""true"" : ""false"" )"		1699489	0					
ANR	1699514	Callee	dprintf		1699489	0					
ANR	1699515	Identifier	dprintf		1699489	0					
ANR	1699516	ArgumentList	D_ALWAYS		1699489	1					
ANR	1699517	Argument	D_ALWAYS		1699489	0					
ANR	1699518	Identifier	D_ALWAYS		1699489	0					
ANR	1699519	Argument	"""           Noop: %s\\n"""		1699489	1					
ANR	1699520	PrimaryExpression	"""           Noop: %s\\n"""		1699489	0					
ANR	1699521	Argument	"_noop ? ""true"" : ""false"""		1699489	2					
ANR	1699522	ConditionalExpression	"_noop ? ""true"" : ""false"""		1699489	0					
ANR	1699523	Condition	_noop		1699489	0					
ANR	1699524	Identifier	_noop		1699489	0					
ANR	1699525	PrimaryExpression	"""true"""		1699489	1					
ANR	1699526	PrimaryExpression	"""false"""		1699489	2					
ANR	1699527	ExpressionStatement	"dprintf ( D_ALWAYS , ""         NodeID: %d\\n"" , _jobID )"	226:4:6179:6231	1699489	3	True				
ANR	1699528	CallExpression	"dprintf ( D_ALWAYS , ""         NodeID: %d\\n"" , _jobID )"		1699489	0					
ANR	1699529	Callee	dprintf		1699489	0					
ANR	1699530	Identifier	dprintf		1699489	0					
ANR	1699531	ArgumentList	D_ALWAYS		1699489	1					
ANR	1699532	Argument	D_ALWAYS		1699489	0					
ANR	1699533	Identifier	D_ALWAYS		1699489	0					
ANR	1699534	Argument	"""         NodeID: %d\\n"""		1699489	1					
ANR	1699535	PrimaryExpression	"""         NodeID: %d\\n"""		1699489	0					
ANR	1699536	Argument	_jobID		1699489	2					
ANR	1699537	Identifier	_jobID		1699489	0					
ANR	1699538	ExpressionStatement	"dprintf ( D_ALWAYS , ""    Node Status: %s\\n"" , GetStatusName ( ) )"	227:4:6237:6298	1699489	4	True				
ANR	1699539	CallExpression	"dprintf ( D_ALWAYS , ""    Node Status: %s\\n"" , GetStatusName ( ) )"		1699489	0					
ANR	1699540	Callee	dprintf		1699489	0					
ANR	1699541	Identifier	dprintf		1699489	0					
ANR	1699542	ArgumentList	D_ALWAYS		1699489	1					
ANR	1699543	Argument	D_ALWAYS		1699489	0					
ANR	1699544	Identifier	D_ALWAYS		1699489	0					
ANR	1699545	Argument	"""    Node Status: %s\\n"""		1699489	1					
ANR	1699546	PrimaryExpression	"""    Node Status: %s\\n"""		1699489	0					
ANR	1699547	Argument	GetStatusName ( )		1699489	2					
ANR	1699548	CallExpression	GetStatusName ( )		1699489	0					
ANR	1699549	Callee	GetStatusName		1699489	0					
ANR	1699550	Identifier	GetStatusName		1699489	0					
ANR	1699551	ArgumentList			1699489	1					
ANR	1699552	ExpressionStatement	"dprintf ( D_ALWAYS , ""Node return val: %d\\n"" , retval )"	228:4:6304:6356	1699489	5	True				
ANR	1699553	CallExpression	"dprintf ( D_ALWAYS , ""Node return val: %d\\n"" , retval )"		1699489	0					
ANR	1699554	Callee	dprintf		1699489	0					
ANR	1699555	Identifier	dprintf		1699489	0					
ANR	1699556	ArgumentList	D_ALWAYS		1699489	1					
ANR	1699557	Argument	D_ALWAYS		1699489	0					
ANR	1699558	Identifier	D_ALWAYS		1699489	0					
ANR	1699559	Argument	"""Node return val: %d\\n"""		1699489	1					
ANR	1699560	PrimaryExpression	"""Node return val: %d\\n"""		1699489	0					
ANR	1699561	Argument	retval		1699489	2					
ANR	1699562	Identifier	retval		1699489	0					
ANR	1699563	IfStatement	if ( _Status == STATUS_ERROR )		1699489	6					
ANR	1699564	Condition	_Status == STATUS_ERROR	229:5:6363:6385	1699489	0	True				
ANR	1699565	EqualityExpression	_Status == STATUS_ERROR		1699489	0		==			
ANR	1699566	Identifier	_Status		1699489	0					
ANR	1699567	Identifier	STATUS_ERROR		1699489	1					
ANR	1699568	CompoundStatement		8:31:430:430	1699489	1					
ANR	1699569	ExpressionStatement	"dprintf ( D_ALWAYS , ""          Error: %s\\n"" , error_text )"	230:2:6393:6449	1699489	0	True				
ANR	1699570	CallExpression	"dprintf ( D_ALWAYS , ""          Error: %s\\n"" , error_text )"		1699489	0					
ANR	1699571	Callee	dprintf		1699489	0					
ANR	1699572	Identifier	dprintf		1699489	0					
ANR	1699573	ArgumentList	D_ALWAYS		1699489	1					
ANR	1699574	Argument	D_ALWAYS		1699489	0					
ANR	1699575	Identifier	D_ALWAYS		1699489	0					
ANR	1699576	Argument	"""          Error: %s\\n"""		1699489	1					
ANR	1699577	PrimaryExpression	"""          Error: %s\\n"""		1699489	0					
ANR	1699578	Argument	error_text		1699489	2					
ANR	1699579	Identifier	error_text		1699489	0					
ANR	1699580	ExpressionStatement	"dprintf ( D_ALWAYS , ""Job Submit File: %s\\n"" , _cmdFile )"	232:4:6458:6512	1699489	7	True				
ANR	1699581	CallExpression	"dprintf ( D_ALWAYS , ""Job Submit File: %s\\n"" , _cmdFile )"		1699489	0					
ANR	1699582	Callee	dprintf		1699489	0					
ANR	1699583	Identifier	dprintf		1699489	0					
ANR	1699584	ArgumentList	D_ALWAYS		1699489	1					
ANR	1699585	Argument	D_ALWAYS		1699489	0					
ANR	1699586	Identifier	D_ALWAYS		1699489	0					
ANR	1699587	Argument	"""Job Submit File: %s\\n"""		1699489	1					
ANR	1699588	PrimaryExpression	"""Job Submit File: %s\\n"""		1699489	0					
ANR	1699589	Argument	_cmdFile		1699489	2					
ANR	1699590	Identifier	_cmdFile		1699489	0					
ANR	1699591	IfStatement	if ( _scriptPre )		1699489	8					
ANR	1699592	Condition	_scriptPre	233:5:6519:6528	1699489	0	True				
ANR	1699593	Identifier	_scriptPre		1699489	0					
ANR	1699594	CompoundStatement		12:18:573:573	1699489	1					
ANR	1699595	ExpressionStatement	"dprintf ( D_ALWAYS , ""     PRE Script: %s\\n"" , _scriptPre -> GetCmd ( ) )"	234:2:6536:6602	1699489	0	True				
ANR	1699596	CallExpression	"dprintf ( D_ALWAYS , ""     PRE Script: %s\\n"" , _scriptPre -> GetCmd ( ) )"		1699489	0					
ANR	1699597	Callee	dprintf		1699489	0					
ANR	1699598	Identifier	dprintf		1699489	0					
ANR	1699599	ArgumentList	D_ALWAYS		1699489	1					
ANR	1699600	Argument	D_ALWAYS		1699489	0					
ANR	1699601	Identifier	D_ALWAYS		1699489	0					
ANR	1699602	Argument	"""     PRE Script: %s\\n"""		1699489	1					
ANR	1699603	PrimaryExpression	"""     PRE Script: %s\\n"""		1699489	0					
ANR	1699604	Argument	_scriptPre -> GetCmd ( )		1699489	2					
ANR	1699605	CallExpression	_scriptPre -> GetCmd ( )		1699489	0					
ANR	1699606	Callee	_scriptPre -> GetCmd		1699489	0					
ANR	1699607	PtrMemberAccess	_scriptPre -> GetCmd		1699489	0					
ANR	1699608	Identifier	_scriptPre		1699489	0					
ANR	1699609	Identifier	GetCmd		1699489	1					
ANR	1699610	ArgumentList			1699489	1					
ANR	1699611	IfStatement	if ( _scriptPost )		1699489	9					
ANR	1699612	Condition	_scriptPost	236:5:6612:6622	1699489	0	True				
ANR	1699613	Identifier	_scriptPost		1699489	0					
ANR	1699614	CompoundStatement		15:19:667:667	1699489	1					
ANR	1699615	ExpressionStatement	"dprintf ( D_ALWAYS , ""    POST Script: %s\\n"" , _scriptPost -> GetCmd ( ) )"	237:2:6630:6697	1699489	0	True				
ANR	1699616	CallExpression	"dprintf ( D_ALWAYS , ""    POST Script: %s\\n"" , _scriptPost -> GetCmd ( ) )"		1699489	0					
ANR	1699617	Callee	dprintf		1699489	0					
ANR	1699618	Identifier	dprintf		1699489	0					
ANR	1699619	ArgumentList	D_ALWAYS		1699489	1					
ANR	1699620	Argument	D_ALWAYS		1699489	0					
ANR	1699621	Identifier	D_ALWAYS		1699489	0					
ANR	1699622	Argument	"""    POST Script: %s\\n"""		1699489	1					
ANR	1699623	PrimaryExpression	"""    POST Script: %s\\n"""		1699489	0					
ANR	1699624	Argument	_scriptPost -> GetCmd ( )		1699489	2					
ANR	1699625	CallExpression	_scriptPost -> GetCmd ( )		1699489	0					
ANR	1699626	Callee	_scriptPost -> GetCmd		1699489	0					
ANR	1699627	PtrMemberAccess	_scriptPost -> GetCmd		1699489	0					
ANR	1699628	Identifier	_scriptPost		1699489	0					
ANR	1699629	Identifier	GetCmd		1699489	1					
ANR	1699630	ArgumentList			1699489	1					
ANR	1699631	IfStatement	if ( retry_max > 0 )		1699489	10					
ANR	1699632	Condition	retry_max > 0	239:5:6707:6719	1699489	0	True				
ANR	1699633	RelationalExpression	retry_max > 0		1699489	0		>			
ANR	1699634	Identifier	retry_max		1699489	0					
ANR	1699635	PrimaryExpression	0		1699489	1					
ANR	1699636	CompoundStatement		18:21:764:764	1699489	1					
ANR	1699637	ExpressionStatement	"dprintf ( D_ALWAYS , ""          Retry: %d\\n"" , retry_max )"	240:2:6727:6782	1699489	0	True				
ANR	1699638	CallExpression	"dprintf ( D_ALWAYS , ""          Retry: %d\\n"" , retry_max )"		1699489	0					
ANR	1699639	Callee	dprintf		1699489	0					
ANR	1699640	Identifier	dprintf		1699489	0					
ANR	1699641	ArgumentList	D_ALWAYS		1699489	1					
ANR	1699642	Argument	D_ALWAYS		1699489	0					
ANR	1699643	Identifier	D_ALWAYS		1699489	0					
ANR	1699644	Argument	"""          Retry: %d\\n"""		1699489	1					
ANR	1699645	PrimaryExpression	"""          Retry: %d\\n"""		1699489	0					
ANR	1699646	Argument	retry_max		1699489	2					
ANR	1699647	Identifier	retry_max		1699489	0					
ANR	1699648	IfStatement	if ( _CondorID . _cluster == - 1 )		1699489	11					
ANR	1699649	Condition	_CondorID . _cluster == - 1	242:5:6792:6815	1699489	0	True				
ANR	1699650	EqualityExpression	_CondorID . _cluster == - 1		1699489	0		==			
ANR	1699651	MemberAccess	_CondorID . _cluster		1699489	0					
ANR	1699652	Identifier	_CondorID		1699489	0					
ANR	1699653	Identifier	_cluster		1699489	1					
ANR	1699654	UnaryOperationExpression	- 1		1699489	1					
ANR	1699655	UnaryOperator	-		1699489	0					
ANR	1699656	PrimaryExpression	1		1699489	1					
ANR	1699657	CompoundStatement		21:32:860:860	1699489	1					
ANR	1699658	ExpressionStatement	"dprintf ( D_ALWAYS , "" %7s Job ID: [not yet submitted]\\n"" , JobTypeString ( ) )"	243:2:6823:6902	1699489	0	True				
ANR	1699659	CallExpression	"dprintf ( D_ALWAYS , "" %7s Job ID: [not yet submitted]\\n"" , JobTypeString ( ) )"		1699489	0					
ANR	1699660	Callee	dprintf		1699489	0					
ANR	1699661	Identifier	dprintf		1699489	0					
ANR	1699662	ArgumentList	D_ALWAYS		1699489	1					
ANR	1699663	Argument	D_ALWAYS		1699489	0					
ANR	1699664	Identifier	D_ALWAYS		1699489	0					
ANR	1699665	Argument	""" %7s Job ID: [not yet submitted]\\n"""		1699489	1					
ANR	1699666	PrimaryExpression	""" %7s Job ID: [not yet submitted]\\n"""		1699489	0					
ANR	1699667	Argument	JobTypeString ( )		1699489	2					
ANR	1699668	CallExpression	JobTypeString ( )		1699489	0					
ANR	1699669	Callee	JobTypeString		1699489	0					
ANR	1699670	Identifier	JobTypeString		1699489	0					
ANR	1699671	ArgumentList			1699489	1					
ANR	1699672	ElseStatement	else		1699489	0					
ANR	1699673	CompoundStatement		25:6:954:954	1699489	0					
ANR	1699674	ExpressionStatement	"dprintf ( D_ALWAYS , "" %7s Job ID: (%d.%d.%d)\\n"" , JobTypeString ( ) , _CondorID . _cluster , _CondorID . _proc , _CondorID . _subproc )"	247:2:6917:7044	1699489	0	True				
ANR	1699675	CallExpression	"dprintf ( D_ALWAYS , "" %7s Job ID: (%d.%d.%d)\\n"" , JobTypeString ( ) , _CondorID . _cluster , _CondorID . _proc , _CondorID . _subproc )"		1699489	0					
ANR	1699676	Callee	dprintf		1699489	0					
ANR	1699677	Identifier	dprintf		1699489	0					
ANR	1699678	ArgumentList	D_ALWAYS		1699489	1					
ANR	1699679	Argument	D_ALWAYS		1699489	0					
ANR	1699680	Identifier	D_ALWAYS		1699489	0					
ANR	1699681	Argument	""" %7s Job ID: (%d.%d.%d)\\n"""		1699489	1					
ANR	1699682	PrimaryExpression	""" %7s Job ID: (%d.%d.%d)\\n"""		1699489	0					
ANR	1699683	Argument	JobTypeString ( )		1699489	2					
ANR	1699684	CallExpression	JobTypeString ( )		1699489	0					
ANR	1699685	Callee	JobTypeString		1699489	0					
ANR	1699686	Identifier	JobTypeString		1699489	0					
ANR	1699687	ArgumentList			1699489	1					
ANR	1699688	Argument	_CondorID . _cluster		1699489	3					
ANR	1699689	MemberAccess	_CondorID . _cluster		1699489	0					
ANR	1699690	Identifier	_CondorID		1699489	0					
ANR	1699691	Identifier	_cluster		1699489	1					
ANR	1699692	Argument	_CondorID . _proc		1699489	4					
ANR	1699693	MemberAccess	_CondorID . _proc		1699489	0					
ANR	1699694	Identifier	_CondorID		1699489	0					
ANR	1699695	Identifier	_proc		1699489	1					
ANR	1699696	Argument	_CondorID . _subproc		1699489	5					
ANR	1699697	MemberAccess	_CondorID . _subproc		1699489	0					
ANR	1699698	Identifier	_CondorID		1699489	0					
ANR	1699699	Identifier	_subproc		1699489	1					
ANR	1699700	ForStatement	for ( int i = 0 ; i < 3 ; i ++ )		1699489	12					
ANR	1699701	ForInit	int i = 0 ;	251:9:7061:7071	1699489	0	True				
ANR	1699702	IdentifierDeclStatement	int i = 0 ;		1699489	0					
ANR	1699703	IdentifierDecl	i = 0		1699489	0					
ANR	1699704	IdentifierDeclType	int		1699489	0					
ANR	1699705	Identifier	i		1699489	1					
ANR	1699706	AssignmentExpression	i = 0		1699489	2		=			
ANR	1699707	Identifier	i		1699489	0					
ANR	1699708	PrimaryExpression	0		1699489	1					
ANR	1699709	Condition	i < 3	251:21:7073:7077	1699489	1	True				
ANR	1699710	RelationalExpression	i < 3		1699489	0		<			
ANR	1699711	Identifier	i		1699489	0					
ANR	1699712	PrimaryExpression	3		1699489	1					
ANR	1699713	PostIncDecOperationExpression	i ++	251:29:7081:7083	1699489	2	True				
ANR	1699714	Identifier	i		1699489	0					
ANR	1699715	IncDec	++		1699489	1					
ANR	1699716	CompoundStatement		33:2:1189:1221	1699489	3					
ANR	1699717	ExpressionStatement	"dprintf ( D_ALWAYS , ""%15s: "" , queue_t_names [ i ] )"	252:8:7096:7143	1699489	0	True				
ANR	1699718	CallExpression	"dprintf ( D_ALWAYS , ""%15s: "" , queue_t_names [ i ] )"		1699489	0					
ANR	1699719	Callee	dprintf		1699489	0					
ANR	1699720	Identifier	dprintf		1699489	0					
ANR	1699721	ArgumentList	D_ALWAYS		1699489	1					
ANR	1699722	Argument	D_ALWAYS		1699489	0					
ANR	1699723	Identifier	D_ALWAYS		1699489	0					
ANR	1699724	Argument	"""%15s: """		1699489	1					
ANR	1699725	PrimaryExpression	"""%15s: """		1699489	0					
ANR	1699726	Argument	queue_t_names [ i ]		1699489	2					
ANR	1699727	ArrayIndexing	queue_t_names [ i ]		1699489	0					
ANR	1699728	Identifier	queue_t_names		1699489	0					
ANR	1699729	Identifier	i		1699489	1					
ANR	1699730	IdentifierDeclStatement	set < JobID_t > :: const_iterator qit ;	254:2:7148:7180	1699489	1	True				
ANR	1699731	IdentifierDecl	qit		1699489	0					
ANR	1699732	IdentifierDeclType	set < JobID_t > :: const_iterator		1699489	0					
ANR	1699733	Identifier	qit		1699489	1					
ANR	1699734	ForStatement	for ( qit = _queues [ i ] . begin ( ) ; qit != _queues [ i ] . end ( ) ; qit ++ )		1699489	2					
ANR	1699735	ForInit	qit = _queues [ i ] . begin ( ) ;	255:7:7189:7213	1699489	0	True				
ANR	1699736	AssignmentExpression	qit = _queues [ i ] . begin ( )		1699489	0		=			
ANR	1699737	Identifier	qit		1699489	0					
ANR	1699738	CallExpression	_queues [ i ] . begin ( )		1699489	1					
ANR	1699739	Callee	_queues [ i ] . begin		1699489	0					
ANR	1699740	MemberAccess	_queues [ i ] . begin		1699489	0					
ANR	1699741	ArrayIndexing	_queues [ i ]		1699489	0					
ANR	1699742	Identifier	_queues		1699489	0					
ANR	1699743	Identifier	i		1699489	1					
ANR	1699744	Identifier	begin		1699489	1					
ANR	1699745	ArgumentList			1699489	1					
ANR	1699746	Condition	qit != _queues [ i ] . end ( )	255:33:7215:7237	1699489	1	True				
ANR	1699747	EqualityExpression	qit != _queues [ i ] . end ( )		1699489	0		!=			
ANR	1699748	Identifier	qit		1699489	0					
ANR	1699749	CallExpression	_queues [ i ] . end ( )		1699489	1					
ANR	1699750	Callee	_queues [ i ] . end		1699489	0					
ANR	1699751	MemberAccess	_queues [ i ] . end		1699489	0					
ANR	1699752	ArrayIndexing	_queues [ i ]		1699489	0					
ANR	1699753	Identifier	_queues		1699489	0					
ANR	1699754	Identifier	i		1699489	1					
ANR	1699755	Identifier	end		1699489	1					
ANR	1699756	ArgumentList			1699489	1					
ANR	1699757	PostIncDecOperationExpression	qit ++	255:58:7240:7244	1699489	2	True				
ANR	1699758	Identifier	qit		1699489	0					
ANR	1699759	IncDec	++		1699489	1					
ANR	1699760	CompoundStatement		35:3:1293:1339	1699489	3					
ANR	1699761	IdentifierDeclStatement	Job * node = dag -> Dag :: FindNodeByNodeID ( * qit ) ;	256:3:7252:7298	1699489	0	True				
ANR	1699762	IdentifierDecl	* node = dag -> Dag :: FindNodeByNodeID ( * qit )		1699489	0					
ANR	1699763	IdentifierDeclType	Job *		1699489	0					
ANR	1699764	Identifier	node		1699489	1					
ANR	1699765	AssignmentExpression	* node = dag -> Dag :: FindNodeByNodeID ( * qit )		1699489	2		=			
ANR	1699766	Identifier	node		1699489	0					
ANR	1699767	CallExpression	dag -> Dag :: FindNodeByNodeID ( * qit )		1699489	1					
ANR	1699768	Callee	dag -> Dag :: FindNodeByNodeID		1699489	0					
ANR	1699769	PtrMemberAccess	dag -> Dag :: FindNodeByNodeID		1699489	0					
ANR	1699770	Identifier	dag		1699489	0					
ANR	1699771	Identifier	Dag :: FindNodeByNodeID		1699489	1					
ANR	1699772	ArgumentList	* qit		1699489	1					
ANR	1699773	Argument	* qit		1699489	0					
ANR	1699774	UnaryOperationExpression	* qit		1699489	0					
ANR	1699775	UnaryOperator	*		1699489	0					
ANR	1699776	Identifier	qit		1699489	1					
ANR	1699777	ExpressionStatement	"dprintf ( D_ALWAYS | D_NOHEADER , ""%s, "" , node -> GetJobName ( ) )"	257:3:7303:7363	1699489	1	True				
ANR	1699778	CallExpression	"dprintf ( D_ALWAYS | D_NOHEADER , ""%s, "" , node -> GetJobName ( ) )"		1699489	0					
ANR	1699779	Callee	dprintf		1699489	0					
ANR	1699780	Identifier	dprintf		1699489	0					
ANR	1699781	ArgumentList	D_ALWAYS | D_NOHEADER		1699489	1					
ANR	1699782	Argument	D_ALWAYS | D_NOHEADER		1699489	0					
ANR	1699783	InclusiveOrExpression	D_ALWAYS | D_NOHEADER		1699489	0		|			
ANR	1699784	Identifier	D_ALWAYS		1699489	0					
ANR	1699785	Identifier	D_NOHEADER		1699489	1					
ANR	1699786	Argument	"""%s, """		1699489	1					
ANR	1699787	PrimaryExpression	"""%s, """		1699489	0					
ANR	1699788	Argument	node -> GetJobName ( )		1699489	2					
ANR	1699789	CallExpression	node -> GetJobName ( )		1699489	0					
ANR	1699790	Callee	node -> GetJobName		1699489	0					
ANR	1699791	PtrMemberAccess	node -> GetJobName		1699489	0					
ANR	1699792	Identifier	node		1699489	0					
ANR	1699793	Identifier	GetJobName		1699489	1					
ANR	1699794	ArgumentList			1699489	1					
ANR	1699795	ExpressionStatement	"dprintf ( D_ALWAYS | D_NOHEADER , ""<END>\\n"" )"	259:8:7377:7420	1699489	3	True				
ANR	1699796	CallExpression	"dprintf ( D_ALWAYS | D_NOHEADER , ""<END>\\n"" )"		1699489	0					
ANR	1699797	Callee	dprintf		1699489	0					
ANR	1699798	Identifier	dprintf		1699489	0					
ANR	1699799	ArgumentList	D_ALWAYS | D_NOHEADER		1699489	1					
ANR	1699800	Argument	D_ALWAYS | D_NOHEADER		1699489	0					
ANR	1699801	InclusiveOrExpression	D_ALWAYS | D_NOHEADER		1699489	0		|			
ANR	1699802	Identifier	D_ALWAYS		1699489	0					
ANR	1699803	Identifier	D_NOHEADER		1699489	1					
ANR	1699804	Argument	"""<END>\\n"""		1699489	1					
ANR	1699805	PrimaryExpression	"""<END>\\n"""		1699489	0					
ANR	1699806	ReturnType	void		1699489	1					
ANR	1699807	Identifier	Job :: Dump		1699489	2					
ANR	1699808	ParameterList	const Dag * dag		1699489	3					
ANR	1699809	Parameter	const Dag * dag	222:17:5935:5948	1699489	0	True				
ANR	1699810	ParameterType	const Dag *		1699489	0					
ANR	1699811	Identifier	dag		1699489	1					
ANR	1699812	CFGEntryNode	ENTRY		1699489		True				
ANR	1699813	CFGExitNode	EXIT		1699489		True				
ANR	1699814	Symbol	error_text		1699489						
ANR	1699815	Symbol	queue_t_names		1699489						
ANR	1699816	Symbol	_scriptPost		1699489						
ANR	1699817	Symbol	_queues		1699489						
ANR	1699818	Symbol	_queues [ i ] . end		1699489						
ANR	1699819	Symbol	* qit		1699489						
ANR	1699820	Symbol	_scriptPost -> GetCmd		1699489						
ANR	1699821	Symbol	dag		1699489						
ANR	1699822	Symbol	* dag		1699489						
ANR	1699823	Symbol	retry_max		1699489						
ANR	1699824	Symbol	_CondorID . _subproc		1699489						
ANR	1699825	Symbol	_CondorID		1699489						
ANR	1699826	Symbol	_Status		1699489						
ANR	1699827	Symbol	_queues [ i ] . begin		1699489						
ANR	1699828	Symbol	GetStatusName		1699489						
ANR	1699829	Symbol	* _scriptPost		1699489						
ANR	1699830	Symbol	_scriptPre -> GetCmd		1699489						
ANR	1699831	Symbol	* node		1699489						
ANR	1699832	Symbol	* queue_t_names		1699489						
ANR	1699833	Symbol	qit		1699489						
ANR	1699834	Symbol	JobTypeString		1699489						
ANR	1699835	Symbol	_CondorID . _proc		1699489						
ANR	1699836	Symbol	node -> GetJobName		1699489						
ANR	1699837	Symbol	D_ALWAYS		1699489						
ANR	1699838	Symbol	* _queues		1699489						
ANR	1699839	Symbol	dag -> Dag :: FindNodeByNodeID		1699489						
ANR	1699840	Symbol	i		1699489						
ANR	1699841	Symbol	_cmdFile		1699489						
ANR	1699842	Symbol	* _scriptPre		1699489						
ANR	1699843	Symbol	retval		1699489						
ANR	1699844	Symbol	STATUS_ERROR		1699489						
ANR	1699845	Symbol	_noop		1699489						
ANR	1699846	Symbol	_jobName		1699489						
ANR	1699847	Symbol	node		1699489						
ANR	1699848	Symbol	* i		1699489						
ANR	1699849	Symbol	_CondorID . _cluster		1699489						
ANR	1699850	Symbol	D_NOHEADER		1699489						
ANR	1699851	Symbol	_jobID		1699489						
ANR	1699852	Symbol	_scriptPre		1699489						
ANR	1699853	Function	Job :: Print	264:0:7509:7754							
ANR	1699854	FunctionDef	Job :: Print (bool condorID)		1699853	0					
ANR	1699855	CompoundStatement		264:38:7547:7754	1699853	0					
ANR	1699856	ExpressionStatement	"dprintf ( D_ALWAYS , ""ID: %4d Name: %s"" , _jobID , _jobName )"	265:4:7553:7609	1699853	0	True				
ANR	1699857	CallExpression	"dprintf ( D_ALWAYS , ""ID: %4d Name: %s"" , _jobID , _jobName )"		1699853	0					
ANR	1699858	Callee	dprintf		1699853	0					
ANR	1699859	Identifier	dprintf		1699853	0					
ANR	1699860	ArgumentList	D_ALWAYS		1699853	1					
ANR	1699861	Argument	D_ALWAYS		1699853	0					
ANR	1699862	Identifier	D_ALWAYS		1699853	0					
ANR	1699863	Argument	"""ID: %4d Name: %s"""		1699853	1					
ANR	1699864	PrimaryExpression	"""ID: %4d Name: %s"""		1699853	0					
ANR	1699865	Argument	_jobID		1699853	2					
ANR	1699866	Identifier	_jobID		1699853	0					
ANR	1699867	Argument	_jobName		1699853	3					
ANR	1699868	Identifier	_jobName		1699853	0					
ANR	1699869	IfStatement	if ( condorID )		1699853	1					
ANR	1699870	Condition	condorID	266:8:7619:7626	1699853	0	True				
ANR	1699871	Identifier	condorID		1699853	0					
ANR	1699872	CompoundStatement		3:18:81:81	1699853	1					
ANR	1699873	ExpressionStatement	"dprintf ( D_ALWAYS , ""  CondorID: (%d.%d.%d)"" , _CondorID . _cluster , _CondorID . _proc , _CondorID . _subproc )"	267:8:7639:7746	1699853	0	True				
ANR	1699874	CallExpression	"dprintf ( D_ALWAYS , ""  CondorID: (%d.%d.%d)"" , _CondorID . _cluster , _CondorID . _proc , _CondorID . _subproc )"		1699853	0					
ANR	1699875	Callee	dprintf		1699853	0					
ANR	1699876	Identifier	dprintf		1699853	0					
ANR	1699877	ArgumentList	D_ALWAYS		1699853	1					
ANR	1699878	Argument	D_ALWAYS		1699853	0					
ANR	1699879	Identifier	D_ALWAYS		1699853	0					
ANR	1699880	Argument	"""  CondorID: (%d.%d.%d)"""		1699853	1					
ANR	1699881	PrimaryExpression	"""  CondorID: (%d.%d.%d)"""		1699853	0					
ANR	1699882	Argument	_CondorID . _cluster		1699853	2					
ANR	1699883	MemberAccess	_CondorID . _cluster		1699853	0					
ANR	1699884	Identifier	_CondorID		1699853	0					
ANR	1699885	Identifier	_cluster		1699853	1					
ANR	1699886	Argument	_CondorID . _proc		1699853	3					
ANR	1699887	MemberAccess	_CondorID . _proc		1699853	0					
ANR	1699888	Identifier	_CondorID		1699853	0					
ANR	1699889	Identifier	_proc		1699853	1					
ANR	1699890	Argument	_CondorID . _subproc		1699853	4					
ANR	1699891	MemberAccess	_CondorID . _subproc		1699853	0					
ANR	1699892	Identifier	_CondorID		1699853	0					
ANR	1699893	Identifier	_subproc		1699853	1					
ANR	1699894	ReturnType	void		1699853	1					
ANR	1699895	Identifier	Job :: Print		1699853	2					
ANR	1699896	ParameterList	bool condorID		1699853	3					
ANR	1699897	Parameter	bool condorID	264:17:7526:7538	1699853	0	True				
ANR	1699898	ParameterType	bool		1699853	0					
ANR	1699899	Identifier	condorID		1699853	1					
ANR	1699900	CFGEntryNode	ENTRY		1699853		True				
ANR	1699901	CFGExitNode	EXIT		1699853		True				
ANR	1699902	Symbol	_jobName		1699853						
ANR	1699903	Symbol	condorID		1699853						
ANR	1699904	Symbol	_CondorID . _proc		1699853						
ANR	1699905	Symbol	D_ALWAYS		1699853						
ANR	1699906	Symbol	_CondorID . _cluster		1699853						
ANR	1699907	Symbol	_CondorID . _subproc		1699853						
ANR	1699908	Symbol	_CondorID		1699853						
ANR	1699909	Symbol	_jobID		1699853						
ANR	1699910	Function	job_print	273:0:7835:7974							
ANR	1699911	FunctionDef	"job_print (Job * job , bool condorID)"		1699910	0					
ANR	1699912	CompoundStatement		273:42:7877:7974	1699910	0					
ANR	1699913	IfStatement	if ( job == NULL )		1699910	0					
ANR	1699914	Condition	job == NULL	274:8:7887:7897	1699910	0	True				
ANR	1699915	EqualityExpression	job == NULL		1699910	0		==			
ANR	1699916	Identifier	job		1699910	0					
ANR	1699917	Identifier	NULL		1699910	1					
ANR	1699918	CompoundStatement		2:21:22:22	1699910	1					
ANR	1699919	ExpressionStatement	"dprintf ( D_ALWAYS , ""(UNKNOWN)"" )"	275:2:7904:7935	1699910	0	True				
ANR	1699920	CallExpression	"dprintf ( D_ALWAYS , ""(UNKNOWN)"" )"		1699910	0					
ANR	1699921	Callee	dprintf		1699910	0					
ANR	1699922	Identifier	dprintf		1699910	0					
ANR	1699923	ArgumentList	D_ALWAYS		1699910	1					
ANR	1699924	Argument	D_ALWAYS		1699910	0					
ANR	1699925	Identifier	D_ALWAYS		1699910	0					
ANR	1699926	Argument	"""(UNKNOWN)"""		1699910	1					
ANR	1699927	PrimaryExpression	"""(UNKNOWN)"""		1699910	0					
ANR	1699928	ElseStatement	else		1699910	0					
ANR	1699929	CompoundStatement		4:8:67:67	1699910	0					
ANR	1699930	ExpressionStatement	job -> Print ( condorID )	277:2:7949:7969	1699910	0	True				
ANR	1699931	CallExpression	job -> Print ( condorID )		1699910	0					
ANR	1699932	Callee	job -> Print		1699910	0					
ANR	1699933	PtrMemberAccess	job -> Print		1699910	0					
ANR	1699934	Identifier	job		1699910	0					
ANR	1699935	Identifier	Print		1699910	1					
ANR	1699936	ArgumentList	condorID		1699910	1					
ANR	1699937	Argument	condorID		1699910	0					
ANR	1699938	Identifier	condorID		1699910	0					
ANR	1699939	ReturnType	void		1699910	1					
ANR	1699940	Identifier	job_print		1699910	2					
ANR	1699941	ParameterList	"Job * job , bool condorID"		1699910	3					
ANR	1699942	Parameter	Job * job	273:16:7851:7859	1699910	0	True				
ANR	1699943	ParameterType	Job *		1699910	0					
ANR	1699944	Identifier	job		1699910	1					
ANR	1699945	Parameter	bool condorID	273:27:7862:7874	1699910	1	True				
ANR	1699946	ParameterType	bool		1699910	0					
ANR	1699947	Identifier	condorID		1699910	1					
ANR	1699948	CFGEntryNode	ENTRY		1699910		True				
ANR	1699949	CFGExitNode	EXIT		1699910		True				
ANR	1699950	Symbol	condorID		1699910						
ANR	1699951	Symbol	NULL		1699910						
ANR	1699952	Symbol	D_ALWAYS		1699910						
ANR	1699953	Symbol	job		1699910						
ANR	1699954	Function	Job :: GetPreScriptName	281:0:7977:8090							
ANR	1699955	FunctionDef	Job :: GetPreScriptName ()		1699954	0					
ANR	1699956	CompoundStatement		283:0:8019:8090	1699954	0					
ANR	1699957	IfStatement	if ( ! _scriptPre )		1699954	0					
ANR	1699958	Condition	! _scriptPre	284:5:8026:8036	1699954	0	True				
ANR	1699959	UnaryOperationExpression	! _scriptPre		1699954	0					
ANR	1699960	UnaryOperator	!		1699954	0					
ANR	1699961	Identifier	_scriptPre		1699954	1					
ANR	1699962	CompoundStatement		2:19:20:20	1699954	1					
ANR	1699963	ReturnStatement	return NULL ;	285:2:8044:8055	1699954	0	True				
ANR	1699964	Identifier	NULL		1699954	0					
ANR	1699965	ReturnStatement	return _scriptPre -> GetCmd ( ) ;	287:1:8061:8088	1699954	1	True				
ANR	1699966	CallExpression	_scriptPre -> GetCmd ( )		1699954	0					
ANR	1699967	Callee	_scriptPre -> GetCmd		1699954	0					
ANR	1699968	PtrMemberAccess	_scriptPre -> GetCmd		1699954	0					
ANR	1699969	Identifier	_scriptPre		1699954	0					
ANR	1699970	Identifier	GetCmd		1699954	1					
ANR	1699971	ArgumentList			1699954	1					
ANR	1699972	ReturnType	const char *		1699954	1					
ANR	1699973	Identifier	Job :: GetPreScriptName		1699954	2					
ANR	1699974	ParameterList			1699954	3					
ANR	1699975	CFGEntryNode	ENTRY		1699954		True				
ANR	1699976	CFGExitNode	EXIT		1699954		True				
ANR	1699977	Symbol	NULL		1699954						
ANR	1699978	Symbol	_scriptPre -> GetCmd		1699954						
ANR	1699979	Symbol	* _scriptPre		1699954						
ANR	1699980	Symbol	_scriptPre		1699954						
ANR	1699981	Function	Job :: GetPostScriptName	290:0:8093:8209							
ANR	1699982	FunctionDef	Job :: GetPostScriptName ()		1699981	0					
ANR	1699983	CompoundStatement		292:0:8136:8209	1699981	0					
ANR	1699984	IfStatement	if ( ! _scriptPost )		1699981	0					
ANR	1699985	Condition	! _scriptPost	293:5:8143:8154	1699981	0	True				
ANR	1699986	UnaryOperationExpression	! _scriptPost		1699981	0					
ANR	1699987	UnaryOperator	!		1699981	0					
ANR	1699988	Identifier	_scriptPost		1699981	1					
ANR	1699989	CompoundStatement		2:20:21:21	1699981	1					
ANR	1699990	ReturnStatement	return NULL ;	294:2:8162:8173	1699981	0	True				
ANR	1699991	Identifier	NULL		1699981	0					
ANR	1699992	ReturnStatement	return _scriptPost -> GetCmd ( ) ;	296:1:8179:8207	1699981	1	True				
ANR	1699993	CallExpression	_scriptPost -> GetCmd ( )		1699981	0					
ANR	1699994	Callee	_scriptPost -> GetCmd		1699981	0					
ANR	1699995	PtrMemberAccess	_scriptPost -> GetCmd		1699981	0					
ANR	1699996	Identifier	_scriptPost		1699981	0					
ANR	1699997	Identifier	GetCmd		1699981	1					
ANR	1699998	ArgumentList			1699981	1					
ANR	1699999	ReturnType	const char *		1699981	1					
ANR	1700000	Identifier	Job :: GetPostScriptName		1699981	2					
ANR	1700001	ParameterList			1699981	3					
ANR	1700002	CFGEntryNode	ENTRY		1699981		True				
ANR	1700003	CFGExitNode	EXIT		1699981		True				
ANR	1700004	Symbol	NULL		1699981						
ANR	1700005	Symbol	_scriptPost		1699981						
ANR	1700006	Symbol	* _scriptPost		1699981						
ANR	1700007	Symbol	_scriptPost -> GetCmd		1699981						
ANR	1700008	Function	Job :: SanityCheck	299:0:8212:8679							
ANR	1700009	FunctionDef	Job :: SanityCheck ()		1700008	0					
ANR	1700010	CompoundStatement		301:0:8242:8679	1700008	0					
ANR	1700011	IdentifierDeclStatement	bool result = true ;	302:1:8245:8263	1700008	0	True				
ANR	1700012	IdentifierDecl	result = true		1700008	0					
ANR	1700013	IdentifierDeclType	bool		1700008	0					
ANR	1700014	Identifier	result		1700008	1					
ANR	1700015	AssignmentExpression	result = true		1700008	2		=			
ANR	1700016	Identifier	true		1700008	0					
ANR	1700017	Identifier	true		1700008	1					
ANR	1700018	IfStatement	if ( countedAsDone == true && _Status != STATUS_DONE )		1700008	1					
ANR	1700019	Condition	countedAsDone == true && _Status != STATUS_DONE	304:5:8271:8317	1700008	0	True				
ANR	1700020	AndExpression	countedAsDone == true && _Status != STATUS_DONE		1700008	0		&&			
ANR	1700021	EqualityExpression	countedAsDone == true		1700008	0		==			
ANR	1700022	Identifier	countedAsDone		1700008	0					
ANR	1700023	Identifier	true		1700008	1					
ANR	1700024	EqualityExpression	_Status != STATUS_DONE		1700008	1		!=			
ANR	1700025	Identifier	_Status		1700008	0					
ANR	1700026	Identifier	STATUS_DONE		1700008	1					
ANR	1700027	CompoundStatement		4:55:78:78	1700008	1					
ANR	1700028	Statement	dprintf	305:2:8325:8331	1700008	0	True				
ANR	1700029	Statement	(	305:9:8332:8332	1700008	1	True				
ANR	1700030	Statement	D_ALWAYS	305:11:8334:8341	1700008	2	True				
ANR	1700031	Statement	","	305:19:8342:8342	1700008	3	True				
ANR	1700032	Statement	"""BADNESS 10000: countedAsDone == true but """	305:21:8344:8386	1700008	4	True				
ANR	1700033	Statement	"""_Status != STATUS_DONE\\n"""	306:5:8393:8418	1700008	5	True				
ANR	1700034	Statement	)	306:32:8420:8420	1700008	6	True				
ANR	1700035	ExpressionStatement		306:33:8421:8421	1700008	7	True				
ANR	1700036	ExpressionStatement	result = false	307:2:8425:8439	1700008	8	True				
ANR	1700037	AssignmentExpression	result = false		1700008	0		=			
ANR	1700038	Identifier	result		1700008	0					
ANR	1700039	Identifier	false		1700008	1					
ANR	1700040	ReturnStatement	return result ;	319:1:8664:8677	1700008	2	True				
ANR	1700041	Identifier	result		1700008	0					
ANR	1700042	ReturnType	bool		1700008	1					
ANR	1700043	Identifier	Job :: SanityCheck		1700008	2					
ANR	1700044	ParameterList			1700008	3					
ANR	1700045	CFGEntryNode	ENTRY		1700008		True				
ANR	1700046	CFGExitNode	EXIT		1700008		True				
ANR	1700047	Symbol	result		1700008						
ANR	1700048	Symbol	_Status		1700008						
ANR	1700049	Symbol	true		1700008						
ANR	1700050	Symbol	false		1700008						
ANR	1700051	Symbol	countedAsDone		1700008						
ANR	1700052	Symbol	STATUS_DONE		1700008						
ANR	1700053	Function	Job :: GetStatus	322:0:8682:8738							
ANR	1700054	FunctionDef	Job :: GetStatus ()		1700053	0					
ANR	1700055	CompoundStatement		324:0:8719:8738	1700053	0					
ANR	1700056	ReturnStatement	return _Status ;	325:1:8722:8736	1700053	0	True				
ANR	1700057	Identifier	_Status		1700053	0					
ANR	1700058	ReturnType	Job :: status_t		1700053	1					
ANR	1700059	Identifier	Job :: GetStatus		1700053	2					
ANR	1700060	ParameterList			1700053	3					
ANR	1700061	CFGEntryNode	ENTRY		1700053		True				
ANR	1700062	CFGExitNode	EXIT		1700053		True				
ANR	1700063	Symbol	_Status		1700053						
ANR	1700064	Function	Job :: SetStatus	329:0:8742:8881							
ANR	1700065	FunctionDef	Job :: SetStatus (status_t newStatus)		1700064	0					
ANR	1700066	CompoundStatement		331:0:8784:8881	1700064	0					
ANR	1700067	ExpressionStatement	_Status = newStatus	333:1:8846:8865	1700064	0	True				
ANR	1700068	AssignmentExpression	_Status = newStatus		1700064	0		=			
ANR	1700069	Identifier	_Status		1700064	0					
ANR	1700070	Identifier	newStatus		1700064	1					
ANR	1700071	ReturnStatement	return true ;	334:1:8868:8879	1700064	1	True				
ANR	1700072	Identifier	true		1700064	0					
ANR	1700073	ReturnType	bool		1700064	1					
ANR	1700074	Identifier	Job :: SetStatus		1700064	2					
ANR	1700075	ParameterList	status_t newStatus		1700064	3					
ANR	1700076	Parameter	status_t newStatus	330:16:8763:8780	1700064	0	True				
ANR	1700077	ParameterType	status_t		1700064	0					
ANR	1700078	Identifier	newStatus		1700064	1					
ANR	1700079	CFGEntryNode	ENTRY		1700064		True				
ANR	1700080	CFGExitNode	EXIT		1700064		True				
ANR	1700081	Symbol	_Status		1700064						
ANR	1700082	Symbol	newStatus		1700064						
ANR	1700083	Symbol	true		1700064						
ANR	1700084	Function	Job :: AddParent	338:0:8885:9214							
ANR	1700085	FunctionDef	Job :: AddParent (Job * parent)		1700084	0					
ANR	1700086	CompoundStatement		340:0:8920:9214	1700084	0					
ANR	1700087	IdentifierDeclStatement	bool success ;	341:1:8923:8935	1700084	0	True				
ANR	1700088	IdentifierDecl	success		1700084	0					
ANR	1700089	IdentifierDeclType	bool		1700084	0					
ANR	1700090	Identifier	success		1700084	1					
ANR	1700091	IdentifierDeclStatement	MyString whynot ;	342:1:8938:8953	1700084	1	True				
ANR	1700092	IdentifierDecl	whynot		1700084	0					
ANR	1700093	IdentifierDeclType	MyString		1700084	0					
ANR	1700094	Identifier	whynot		1700084	1					
ANR	1700095	ExpressionStatement	"success = AddParent ( parent , whynot )"	343:1:8956:8993	1700084	2	True				
ANR	1700096	AssignmentExpression	"success = AddParent ( parent , whynot )"		1700084	0		=			
ANR	1700097	Identifier	success		1700084	0					
ANR	1700098	CallExpression	"AddParent ( parent , whynot )"		1700084	1					
ANR	1700099	Callee	AddParent		1700084	0					
ANR	1700100	Identifier	AddParent		1700084	0					
ANR	1700101	ArgumentList	parent		1700084	1					
ANR	1700102	Argument	parent		1700084	0					
ANR	1700103	Identifier	parent		1700084	0					
ANR	1700104	Argument	whynot		1700084	1					
ANR	1700105	Identifier	whynot		1700084	0					
ANR	1700106	IfStatement	if ( ! success )		1700084	3					
ANR	1700107	Condition	! success	344:5:9000:9007	1700084	0	True				
ANR	1700108	UnaryOperationExpression	! success		1700084	0					
ANR	1700109	UnaryOperator	!		1700084	0					
ANR	1700110	Identifier	success		1700084	1					
ANR	1700111	CompoundStatement		5:16:90:90	1700084	1					
ANR	1700112	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""ERROR: AddParent( %s ) failed for node %s: %s\\n"" , parent ? parent -> GetJobName ( ) : ""(null)"" , this -> GetJobName ( ) , whynot . Value ( ) )"	345:2:9015:9192	1700084	0	True				
ANR	1700113	CallExpression	"debug_printf ( DEBUG_QUIET , ""ERROR: AddParent( %s ) failed for node %s: %s\\n"" , parent ? parent -> GetJobName ( ) : ""(null)"" , this -> GetJobName ( ) , whynot . Value ( ) )"		1700084	0					
ANR	1700114	Callee	debug_printf		1700084	0					
ANR	1700115	Identifier	debug_printf		1700084	0					
ANR	1700116	ArgumentList	DEBUG_QUIET		1700084	1					
ANR	1700117	Argument	DEBUG_QUIET		1700084	0					
ANR	1700118	Identifier	DEBUG_QUIET		1700084	0					
ANR	1700119	Argument	"""ERROR: AddParent( %s ) failed for node %s: %s\\n"""		1700084	1					
ANR	1700120	PrimaryExpression	"""ERROR: AddParent( %s ) failed for node %s: %s\\n"""		1700084	0					
ANR	1700121	Argument	"parent ? parent -> GetJobName ( ) : ""(null)"""		1700084	2					
ANR	1700122	ConditionalExpression	"parent ? parent -> GetJobName ( ) : ""(null)"""		1700084	0					
ANR	1700123	Condition	parent		1700084	0					
ANR	1700124	Identifier	parent		1700084	0					
ANR	1700125	CallExpression	parent -> GetJobName ( )		1700084	1					
ANR	1700126	Callee	parent -> GetJobName		1700084	0					
ANR	1700127	PtrMemberAccess	parent -> GetJobName		1700084	0					
ANR	1700128	Identifier	parent		1700084	0					
ANR	1700129	Identifier	GetJobName		1700084	1					
ANR	1700130	ArgumentList			1700084	1					
ANR	1700131	PrimaryExpression	"""(null)"""		1700084	2					
ANR	1700132	Argument	this -> GetJobName ( )		1700084	3					
ANR	1700133	CallExpression	this -> GetJobName ( )		1700084	0					
ANR	1700134	Callee	this -> GetJobName		1700084	0					
ANR	1700135	PtrMemberAccess	this -> GetJobName		1700084	0					
ANR	1700136	Identifier	this		1700084	0					
ANR	1700137	Identifier	GetJobName		1700084	1					
ANR	1700138	ArgumentList			1700084	1					
ANR	1700139	Argument	whynot . Value ( )		1700084	4					
ANR	1700140	CallExpression	whynot . Value ( )		1700084	0					
ANR	1700141	Callee	whynot . Value		1700084	0					
ANR	1700142	MemberAccess	whynot . Value		1700084	0					
ANR	1700143	Identifier	whynot		1700084	0					
ANR	1700144	Identifier	Value		1700084	1					
ANR	1700145	ArgumentList			1700084	1					
ANR	1700146	ReturnStatement	return success ;	350:1:9198:9212	1700084	4	True				
ANR	1700147	Identifier	success		1700084	0					
ANR	1700148	ReturnType	bool		1700084	1					
ANR	1700149	Identifier	Job :: AddParent		1700084	2					
ANR	1700150	ParameterList	Job * parent		1700084	3					
ANR	1700151	Parameter	Job * parent	339:16:8906:8916	1700084	0	True				
ANR	1700152	ParameterType	Job *		1700084	0					
ANR	1700153	Identifier	parent		1700084	1					
ANR	1700154	CFGEntryNode	ENTRY		1700084		True				
ANR	1700155	CFGExitNode	EXIT		1700084		True				
ANR	1700156	Symbol	* this		1700084						
ANR	1700157	Symbol	parent		1700084						
ANR	1700158	Symbol	* parent		1700084						
ANR	1700159	Symbol	success		1700084						
ANR	1700160	Symbol	whynot . Value		1700084						
ANR	1700161	Symbol	this		1700084						
ANR	1700162	Symbol	whynot		1700084						
ANR	1700163	Symbol	this -> GetJobName		1700084						
ANR	1700164	Symbol	parent -> GetJobName		1700084						
ANR	1700165	Symbol	AddParent		1700084						
ANR	1700166	Symbol	DEBUG_QUIET		1700084						
ANR	1700167	Function	Job :: AddParent	354:0:9218:10054							
ANR	1700168	FunctionDef	"Job :: AddParent (Job * parent , MyString & whynot)"		1700167	0					
ANR	1700169	CompoundStatement		356:0:9271:10054	1700167	0					
ANR	1700170	IfStatement	"if ( ! this -> CanAddParent ( parent , whynot ) )"		1700167	0					
ANR	1700171	Condition	"! this -> CanAddParent ( parent , whynot )"	357:5:9278:9314	1700167	0	True				
ANR	1700172	UnaryOperationExpression	"! this -> CanAddParent ( parent , whynot )"		1700167	0					
ANR	1700173	UnaryOperator	!		1700167	0					
ANR	1700174	CallExpression	"this -> CanAddParent ( parent , whynot )"		1700167	1					
ANR	1700175	Callee	this -> CanAddParent		1700167	0					
ANR	1700176	PtrMemberAccess	this -> CanAddParent		1700167	0					
ANR	1700177	Identifier	this		1700167	0					
ANR	1700178	Identifier	CanAddParent		1700167	1					
ANR	1700179	ArgumentList	parent		1700167	1					
ANR	1700180	Argument	parent		1700167	0					
ANR	1700181	Identifier	parent		1700167	0					
ANR	1700182	Argument	whynot		1700167	1					
ANR	1700183	Identifier	whynot		1700167	0					
ANR	1700184	CompoundStatement		2:45:46:46	1700167	1					
ANR	1700185	ReturnStatement	return false ;	358:2:9322:9334	1700167	0	True				
ANR	1700186	Identifier	false		1700167	0					
ANR	1700187	IfStatement	if ( HasParent ( parent ) )		1700167	1					
ANR	1700188	Condition	HasParent ( parent )	361:5:9345:9363	1700167	0	True				
ANR	1700189	CallExpression	HasParent ( parent )		1700167	0					
ANR	1700190	Callee	HasParent		1700167	0					
ANR	1700191	Identifier	HasParent		1700167	0					
ANR	1700192	ArgumentList	parent		1700167	1					
ANR	1700193	Argument	parent		1700167	0					
ANR	1700194	Identifier	parent		1700167	0					
ANR	1700195	CompoundStatement		6:27:95:95	1700167	1					
ANR	1700196	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""Warning: child %s already has parent %s\\n"" , GetJobName ( ) , parent -> GetJobName ( ) )"	362:2:9371:9489	1700167	0	True				
ANR	1700197	CallExpression	"debug_printf ( DEBUG_QUIET , ""Warning: child %s already has parent %s\\n"" , GetJobName ( ) , parent -> GetJobName ( ) )"		1700167	0					
ANR	1700198	Callee	debug_printf		1700167	0					
ANR	1700199	Identifier	debug_printf		1700167	0					
ANR	1700200	ArgumentList	DEBUG_QUIET		1700167	1					
ANR	1700201	Argument	DEBUG_QUIET		1700167	0					
ANR	1700202	Identifier	DEBUG_QUIET		1700167	0					
ANR	1700203	Argument	"""Warning: child %s already has parent %s\\n"""		1700167	1					
ANR	1700204	PrimaryExpression	"""Warning: child %s already has parent %s\\n"""		1700167	0					
ANR	1700205	Argument	GetJobName ( )		1700167	2					
ANR	1700206	CallExpression	GetJobName ( )		1700167	0					
ANR	1700207	Callee	GetJobName		1700167	0					
ANR	1700208	Identifier	GetJobName		1700167	0					
ANR	1700209	ArgumentList			1700167	1					
ANR	1700210	Argument	parent -> GetJobName ( )		1700167	3					
ANR	1700211	CallExpression	parent -> GetJobName ( )		1700167	0					
ANR	1700212	Callee	parent -> GetJobName		1700167	0					
ANR	1700213	PtrMemberAccess	parent -> GetJobName		1700167	0					
ANR	1700214	Identifier	parent		1700167	0					
ANR	1700215	Identifier	GetJobName		1700167	1					
ANR	1700216	ArgumentList			1700167	1					
ANR	1700217	ExpressionStatement	check_warning_strictness ( DAG_STRICT_3 )	365:2:9493:9533	1700167	1	True				
ANR	1700218	CallExpression	check_warning_strictness ( DAG_STRICT_3 )		1700167	0					
ANR	1700219	Callee	check_warning_strictness		1700167	0					
ANR	1700220	Identifier	check_warning_strictness		1700167	0					
ANR	1700221	ArgumentList	DAG_STRICT_3		1700167	1					
ANR	1700222	Argument	DAG_STRICT_3		1700167	0					
ANR	1700223	Identifier	DAG_STRICT_3		1700167	0					
ANR	1700224	ReturnStatement	return true ;	366:2:9537:9548	1700167	2	True				
ANR	1700225	Identifier	true		1700167	0					
ANR	1700226	IfStatement	"if ( ! Add ( Q_PARENTS , parent -> GetJobID ( ) ) )"		1700167	2					
ANR	1700227	Condition	"! Add ( Q_PARENTS , parent -> GetJobID ( ) )"	369:5:9559:9595	1700167	0	True				
ANR	1700228	UnaryOperationExpression	"! Add ( Q_PARENTS , parent -> GetJobID ( ) )"		1700167	0					
ANR	1700229	UnaryOperator	!		1700167	0					
ANR	1700230	CallExpression	"Add ( Q_PARENTS , parent -> GetJobID ( ) )"		1700167	1					
ANR	1700231	Callee	Add		1700167	0					
ANR	1700232	Identifier	Add		1700167	0					
ANR	1700233	ArgumentList	Q_PARENTS		1700167	1					
ANR	1700234	Argument	Q_PARENTS		1700167	0					
ANR	1700235	Identifier	Q_PARENTS		1700167	0					
ANR	1700236	Argument	parent -> GetJobID ( )		1700167	1					
ANR	1700237	CallExpression	parent -> GetJobID ( )		1700167	0					
ANR	1700238	Callee	parent -> GetJobID		1700167	0					
ANR	1700239	PtrMemberAccess	parent -> GetJobID		1700167	0					
ANR	1700240	Identifier	parent		1700167	0					
ANR	1700241	Identifier	GetJobID		1700167	1					
ANR	1700242	ArgumentList			1700167	1					
ANR	1700243	CompoundStatement		14:45:327:327	1700167	1					
ANR	1700244	ExpressionStatement	"whynot = ""unknown error appending to PARENTS queue"""	370:2:9603:9654	1700167	0	True				
ANR	1700245	AssignmentExpression	"whynot = ""unknown error appending to PARENTS queue"""		1700167	0		=			
ANR	1700246	Identifier	whynot		1700167	0					
ANR	1700247	PrimaryExpression	"""unknown error appending to PARENTS queue"""		1700167	1					
ANR	1700248	ReturnStatement	return false ;	371:2:9658:9670	1700167	1	True				
ANR	1700249	Identifier	false		1700167	0					
ANR	1700250	IfStatement	if ( parent -> GetStatus ( ) != STATUS_DONE )		1700167	3					
ANR	1700251	Condition	parent -> GetStatus ( ) != STATUS_DONE	373:8:9683:9716	1700167	0	True				
ANR	1700252	EqualityExpression	parent -> GetStatus ( ) != STATUS_DONE		1700167	0		!=			
ANR	1700253	CallExpression	parent -> GetStatus ( )		1700167	0					
ANR	1700254	Callee	parent -> GetStatus		1700167	0					
ANR	1700255	PtrMemberAccess	parent -> GetStatus		1700167	0					
ANR	1700256	Identifier	parent		1700167	0					
ANR	1700257	Identifier	GetStatus		1700167	1					
ANR	1700258	ArgumentList			1700167	1					
ANR	1700259	Identifier	STATUS_DONE		1700167	1					
ANR	1700260	CompoundStatement		18:45:448:448	1700167	1					
ANR	1700261	IfStatement	"if ( ! Add ( Q_WAITING , parent -> GetJobID ( ) ) )"		1700167	0					
ANR	1700262	Condition	"! Add ( Q_WAITING , parent -> GetJobID ( ) )"	374:6:9728:9764	1700167	0	True				
ANR	1700263	UnaryOperationExpression	"! Add ( Q_WAITING , parent -> GetJobID ( ) )"		1700167	0					
ANR	1700264	UnaryOperator	!		1700167	0					
ANR	1700265	CallExpression	"Add ( Q_WAITING , parent -> GetJobID ( ) )"		1700167	1					
ANR	1700266	Callee	Add		1700167	0					
ANR	1700267	Identifier	Add		1700167	0					
ANR	1700268	ArgumentList	Q_WAITING		1700167	1					
ANR	1700269	Argument	Q_WAITING		1700167	0					
ANR	1700270	Identifier	Q_WAITING		1700167	0					
ANR	1700271	Argument	parent -> GetJobID ( )		1700167	1					
ANR	1700272	CallExpression	parent -> GetJobID ( )		1700167	0					
ANR	1700273	Callee	parent -> GetJobID		1700167	0					
ANR	1700274	PtrMemberAccess	parent -> GetJobID		1700167	0					
ANR	1700275	Identifier	parent		1700167	0					
ANR	1700276	Identifier	GetJobID		1700167	1					
ANR	1700277	ArgumentList			1700167	1					
ANR	1700278	CompoundStatement		19:46:496:496	1700167	1					
ANR	1700279	ExpressionStatement	"EXCEPT ( ""Failed to add parent %s to job %s"" , parent -> GetJobName ( ) , GetJobName ( ) )"	377:3:9907:9994	1700167	0	True				
ANR	1700280	CallExpression	"EXCEPT ( ""Failed to add parent %s to job %s"" , parent -> GetJobName ( ) , GetJobName ( ) )"		1700167	0					
ANR	1700281	Callee	EXCEPT		1700167	0					
ANR	1700282	Identifier	EXCEPT		1700167	0					
ANR	1700283	ArgumentList	"""Failed to add parent %s to job %s"""		1700167	1					
ANR	1700284	Argument	"""Failed to add parent %s to job %s"""		1700167	0					
ANR	1700285	PrimaryExpression	"""Failed to add parent %s to job %s"""		1700167	0					
ANR	1700286	Argument	parent -> GetJobName ( )		1700167	1					
ANR	1700287	CallExpression	parent -> GetJobName ( )		1700167	0					
ANR	1700288	Callee	parent -> GetJobName		1700167	0					
ANR	1700289	PtrMemberAccess	parent -> GetJobName		1700167	0					
ANR	1700290	Identifier	parent		1700167	0					
ANR	1700291	Identifier	GetJobName		1700167	1					
ANR	1700292	ArgumentList			1700167	1					
ANR	1700293	Argument	GetJobName ( )		1700167	2					
ANR	1700294	CallExpression	GetJobName ( )		1700167	0					
ANR	1700295	Callee	GetJobName		1700167	0					
ANR	1700296	Identifier	GetJobName		1700167	0					
ANR	1700297	ArgumentList			1700167	1					
ANR	1700298	ReturnStatement	return false ;	379:3:9999:10011	1700167	1	True				
ANR	1700299	Identifier	false		1700167	0					
ANR	1700300	ExpressionStatement	"whynot = ""n/a"""	382:1:10021:10035	1700167	4	True				
ANR	1700301	AssignmentExpression	"whynot = ""n/a"""		1700167	0		=			
ANR	1700302	Identifier	whynot		1700167	0					
ANR	1700303	PrimaryExpression	"""n/a"""		1700167	1					
ANR	1700304	ReturnStatement	return true ;	383:4:10041:10052	1700167	5	True				
ANR	1700305	Identifier	true		1700167	0					
ANR	1700306	ReturnType	bool		1700167	1					
ANR	1700307	Identifier	Job :: AddParent		1700167	2					
ANR	1700308	ParameterList	"Job * parent , MyString & whynot"		1700167	3					
ANR	1700309	Parameter	Job * parent	355:16:9239:9249	1700167	0	True				
ANR	1700310	ParameterType	Job *		1700167	0					
ANR	1700311	Identifier	parent		1700167	1					
ANR	1700312	Parameter	MyString & whynot	355:29:9252:9267	1700167	1	True				
ANR	1700313	ParameterType	MyString &		1700167	0					
ANR	1700314	Identifier	whynot		1700167	1					
ANR	1700315	CFGEntryNode	ENTRY		1700167		True				
ANR	1700316	CFGExitNode	EXIT		1700167		True				
ANR	1700317	Symbol	Add		1700167						
ANR	1700318	Symbol	parent		1700167						
ANR	1700319	Symbol	parent -> GetStatus		1700167						
ANR	1700320	Symbol	* parent		1700167						
ANR	1700321	Symbol	Q_PARENTS		1700167						
ANR	1700322	Symbol	this		1700167						
ANR	1700323	Symbol	false		1700167						
ANR	1700324	Symbol	whynot		1700167						
ANR	1700325	Symbol	HasParent		1700167						
ANR	1700326	Symbol	DEBUG_QUIET		1700167						
ANR	1700327	Symbol	* this		1700167						
ANR	1700328	Symbol	DAG_STRICT_3		1700167						
ANR	1700329	Symbol	Q_WAITING		1700167						
ANR	1700330	Symbol	GetJobName		1700167						
ANR	1700331	Symbol	this -> CanAddParent		1700167						
ANR	1700332	Symbol	true		1700167						
ANR	1700333	Symbol	parent -> GetJobID		1700167						
ANR	1700334	Symbol	parent -> GetJobName		1700167						
ANR	1700335	Symbol	STATUS_DONE		1700167						
ANR	1700336	Function	Job :: CanAddParent	387:0:10058:10747							
ANR	1700337	FunctionDef	"Job :: CanAddParent (Job * parent , MyString & whynot)"		1700336	0					
ANR	1700338	CompoundStatement		389:0:10114:10747	1700336	0					
ANR	1700339	IfStatement	if ( ! parent )		1700336	0					
ANR	1700340	Condition	! parent	390:5:10121:10127	1700336	0	True				
ANR	1700341	UnaryOperationExpression	! parent		1700336	0					
ANR	1700342	UnaryOperator	!		1700336	0					
ANR	1700343	Identifier	parent		1700336	1					
ANR	1700344	CompoundStatement		2:15:16:16	1700336	1					
ANR	1700345	ExpressionStatement	"whynot = ""parent == NULL"""	391:2:10135:10160	1700336	0	True				
ANR	1700346	AssignmentExpression	"whynot = ""parent == NULL"""		1700336	0		=			
ANR	1700347	Identifier	whynot		1700336	0					
ANR	1700348	PrimaryExpression	"""parent == NULL"""		1700336	1					
ANR	1700349	ReturnStatement	return false ;	392:2:10164:10176	1700336	1	True				
ANR	1700350	Identifier	false		1700336	0					
ANR	1700351	IfStatement	if ( _Status != STATUS_READY && parent -> GetStatus ( ) != STATUS_DONE )		1700336	1					
ANR	1700352	Condition	_Status != STATUS_READY && parent -> GetStatus ( ) != STATUS_DONE	401:5:10512:10572	1700336	0	True				
ANR	1700353	AndExpression	_Status != STATUS_READY && parent -> GetStatus ( ) != STATUS_DONE		1700336	0		&&			
ANR	1700354	EqualityExpression	_Status != STATUS_READY		1700336	0		!=			
ANR	1700355	Identifier	_Status		1700336	0					
ANR	1700356	Identifier	STATUS_READY		1700336	1					
ANR	1700357	EqualityExpression	parent -> GetStatus ( ) != STATUS_DONE		1700336	1		!=			
ANR	1700358	CallExpression	parent -> GetStatus ( )		1700336	0					
ANR	1700359	Callee	parent -> GetStatus		1700336	0					
ANR	1700360	PtrMemberAccess	parent -> GetStatus		1700336	0					
ANR	1700361	Identifier	parent		1700336	0					
ANR	1700362	Identifier	GetStatus		1700336	1					
ANR	1700363	ArgumentList			1700336	1					
ANR	1700364	Identifier	STATUS_DONE		1700336	1					
ANR	1700365	CompoundStatement		13:69:461:461	1700336	1					
ANR	1700366	ExpressionStatement	"whynot . sprintf ( ""%s child may not be given a new %s parent"" , this -> GetStatusName ( ) , parent -> GetStatusName ( ) )"	402:2:10580:10695	1700336	0	True				
ANR	1700367	CallExpression	"whynot . sprintf ( ""%s child may not be given a new %s parent"" , this -> GetStatusName ( ) , parent -> GetStatusName ( ) )"		1700336	0					
ANR	1700368	Callee	whynot . sprintf		1700336	0					
ANR	1700369	MemberAccess	whynot . sprintf		1700336	0					
ANR	1700370	Identifier	whynot		1700336	0					
ANR	1700371	Identifier	sprintf		1700336	1					
ANR	1700372	ArgumentList	"""%s child may not be given a new %s parent"""		1700336	1					
ANR	1700373	Argument	"""%s child may not be given a new %s parent"""		1700336	0					
ANR	1700374	PrimaryExpression	"""%s child may not be given a new %s parent"""		1700336	0					
ANR	1700375	Argument	this -> GetStatusName ( )		1700336	1					
ANR	1700376	CallExpression	this -> GetStatusName ( )		1700336	0					
ANR	1700377	Callee	this -> GetStatusName		1700336	0					
ANR	1700378	PtrMemberAccess	this -> GetStatusName		1700336	0					
ANR	1700379	Identifier	this		1700336	0					
ANR	1700380	Identifier	GetStatusName		1700336	1					
ANR	1700381	ArgumentList			1700336	1					
ANR	1700382	Argument	parent -> GetStatusName ( )		1700336	2					
ANR	1700383	CallExpression	parent -> GetStatusName ( )		1700336	0					
ANR	1700384	Callee	parent -> GetStatusName		1700336	0					
ANR	1700385	PtrMemberAccess	parent -> GetStatusName		1700336	0					
ANR	1700386	Identifier	parent		1700336	0					
ANR	1700387	Identifier	GetStatusName		1700336	1					
ANR	1700388	ArgumentList			1700336	1					
ANR	1700389	ReturnStatement	return false ;	404:2:10699:10711	1700336	1	True				
ANR	1700390	Identifier	false		1700336	0					
ANR	1700391	ExpressionStatement	"whynot = ""n/a"""	406:1:10717:10731	1700336	2	True				
ANR	1700392	AssignmentExpression	"whynot = ""n/a"""		1700336	0		=			
ANR	1700393	Identifier	whynot		1700336	0					
ANR	1700394	PrimaryExpression	"""n/a"""		1700336	1					
ANR	1700395	ReturnStatement	return true ;	407:1:10734:10745	1700336	3	True				
ANR	1700396	Identifier	true		1700336	0					
ANR	1700397	ReturnType	bool		1700336	1					
ANR	1700398	Identifier	Job :: CanAddParent		1700336	2					
ANR	1700399	ParameterList	"Job * parent , MyString & whynot"		1700336	3					
ANR	1700400	Parameter	Job * parent	388:19:10082:10092	1700336	0	True				
ANR	1700401	ParameterType	Job *		1700336	0					
ANR	1700402	Identifier	parent		1700336	1					
ANR	1700403	Parameter	MyString & whynot	388:32:10095:10110	1700336	1	True				
ANR	1700404	ParameterType	MyString &		1700336	0					
ANR	1700405	Identifier	whynot		1700336	1					
ANR	1700406	CFGEntryNode	ENTRY		1700336		True				
ANR	1700407	CFGExitNode	EXIT		1700336		True				
ANR	1700408	Symbol	parent		1700336						
ANR	1700409	Symbol	parent -> GetStatus		1700336						
ANR	1700410	Symbol	* parent		1700336						
ANR	1700411	Symbol	false		1700336						
ANR	1700412	Symbol	this		1700336						
ANR	1700413	Symbol	whynot		1700336						
ANR	1700414	Symbol	STATUS_READY		1700336						
ANR	1700415	Symbol	* this		1700336						
ANR	1700416	Symbol	parent -> GetStatusName		1700336						
ANR	1700417	Symbol	_Status		1700336						
ANR	1700418	Symbol	true		1700336						
ANR	1700419	Symbol	this -> GetStatusName		1700336						
ANR	1700420	Symbol	STATUS_DONE		1700336						
ANR	1700421	Function	Job :: AddChild	411:0:10751:11073							
ANR	1700422	FunctionDef	Job :: AddChild (Job * child)		1700421	0					
ANR	1700423	CompoundStatement		413:0:10784:11073	1700421	0					
ANR	1700424	IdentifierDeclStatement	bool success ;	414:1:10787:10799	1700421	0	True				
ANR	1700425	IdentifierDecl	success		1700421	0					
ANR	1700426	IdentifierDeclType	bool		1700421	0					
ANR	1700427	Identifier	success		1700421	1					
ANR	1700428	IdentifierDeclStatement	MyString whynot ;	415:1:10802:10817	1700421	1	True				
ANR	1700429	IdentifierDecl	whynot		1700421	0					
ANR	1700430	IdentifierDeclType	MyString		1700421	0					
ANR	1700431	Identifier	whynot		1700421	1					
ANR	1700432	ExpressionStatement	"success = AddChild ( child , whynot )"	416:1:10820:10855	1700421	2	True				
ANR	1700433	AssignmentExpression	"success = AddChild ( child , whynot )"		1700421	0		=			
ANR	1700434	Identifier	success		1700421	0					
ANR	1700435	CallExpression	"AddChild ( child , whynot )"		1700421	1					
ANR	1700436	Callee	AddChild		1700421	0					
ANR	1700437	Identifier	AddChild		1700421	0					
ANR	1700438	ArgumentList	child		1700421	1					
ANR	1700439	Argument	child		1700421	0					
ANR	1700440	Identifier	child		1700421	0					
ANR	1700441	Argument	whynot		1700421	1					
ANR	1700442	Identifier	whynot		1700421	0					
ANR	1700443	IfStatement	if ( ! success )		1700421	3					
ANR	1700444	Condition	! success	417:5:10862:10869	1700421	0	True				
ANR	1700445	UnaryOperationExpression	! success		1700421	0					
ANR	1700446	UnaryOperator	!		1700421	0					
ANR	1700447	Identifier	success		1700421	1					
ANR	1700448	CompoundStatement		5:16:88:88	1700421	1					
ANR	1700449	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""ERROR: AddChild( %s ) failed for node %s: %s\\n"" , child ? child -> GetJobName ( ) : ""(null)"" , this -> GetJobName ( ) , whynot . Value ( ) )"	418:2:10877:11051	1700421	0	True				
ANR	1700450	CallExpression	"debug_printf ( DEBUG_QUIET , ""ERROR: AddChild( %s ) failed for node %s: %s\\n"" , child ? child -> GetJobName ( ) : ""(null)"" , this -> GetJobName ( ) , whynot . Value ( ) )"		1700421	0					
ANR	1700451	Callee	debug_printf		1700421	0					
ANR	1700452	Identifier	debug_printf		1700421	0					
ANR	1700453	ArgumentList	DEBUG_QUIET		1700421	1					
ANR	1700454	Argument	DEBUG_QUIET		1700421	0					
ANR	1700455	Identifier	DEBUG_QUIET		1700421	0					
ANR	1700456	Argument	"""ERROR: AddChild( %s ) failed for node %s: %s\\n"""		1700421	1					
ANR	1700457	PrimaryExpression	"""ERROR: AddChild( %s ) failed for node %s: %s\\n"""		1700421	0					
ANR	1700458	Argument	"child ? child -> GetJobName ( ) : ""(null)"""		1700421	2					
ANR	1700459	ConditionalExpression	"child ? child -> GetJobName ( ) : ""(null)"""		1700421	0					
ANR	1700460	Condition	child		1700421	0					
ANR	1700461	Identifier	child		1700421	0					
ANR	1700462	CallExpression	child -> GetJobName ( )		1700421	1					
ANR	1700463	Callee	child -> GetJobName		1700421	0					
ANR	1700464	PtrMemberAccess	child -> GetJobName		1700421	0					
ANR	1700465	Identifier	child		1700421	0					
ANR	1700466	Identifier	GetJobName		1700421	1					
ANR	1700467	ArgumentList			1700421	1					
ANR	1700468	PrimaryExpression	"""(null)"""		1700421	2					
ANR	1700469	Argument	this -> GetJobName ( )		1700421	3					
ANR	1700470	CallExpression	this -> GetJobName ( )		1700421	0					
ANR	1700471	Callee	this -> GetJobName		1700421	0					
ANR	1700472	PtrMemberAccess	this -> GetJobName		1700421	0					
ANR	1700473	Identifier	this		1700421	0					
ANR	1700474	Identifier	GetJobName		1700421	1					
ANR	1700475	ArgumentList			1700421	1					
ANR	1700476	Argument	whynot . Value ( )		1700421	4					
ANR	1700477	CallExpression	whynot . Value ( )		1700421	0					
ANR	1700478	Callee	whynot . Value		1700421	0					
ANR	1700479	MemberAccess	whynot . Value		1700421	0					
ANR	1700480	Identifier	whynot		1700421	0					
ANR	1700481	Identifier	Value		1700421	1					
ANR	1700482	ArgumentList			1700421	1					
ANR	1700483	ReturnStatement	return success ;	423:1:11057:11071	1700421	4	True				
ANR	1700484	Identifier	success		1700421	0					
ANR	1700485	ReturnType	bool		1700421	1					
ANR	1700486	Identifier	Job :: AddChild		1700421	2					
ANR	1700487	ParameterList	Job * child		1700421	3					
ANR	1700488	Parameter	Job * child	412:15:10771:10780	1700421	0	True				
ANR	1700489	ParameterType	Job *		1700421	0					
ANR	1700490	Identifier	child		1700421	1					
ANR	1700491	CFGEntryNode	ENTRY		1700421		True				
ANR	1700492	CFGExitNode	EXIT		1700421		True				
ANR	1700493	Symbol	* this		1700421						
ANR	1700494	Symbol	* child		1700421						
ANR	1700495	Symbol	child -> GetJobName		1700421						
ANR	1700496	Symbol	success		1700421						
ANR	1700497	Symbol	whynot . Value		1700421						
ANR	1700498	Symbol	this		1700421						
ANR	1700499	Symbol	whynot		1700421						
ANR	1700500	Symbol	this -> GetJobName		1700421						
ANR	1700501	Symbol	AddChild		1700421						
ANR	1700502	Symbol	child		1700421						
ANR	1700503	Symbol	DEBUG_QUIET		1700421						
ANR	1700504	Function	Job :: AddChild	427:0:11077:11563							
ANR	1700505	FunctionDef	"Job :: AddChild (Job * child , MyString & whynot)"		1700504	0					
ANR	1700506	CompoundStatement		429:0:11128:11563	1700504	0					
ANR	1700507	IfStatement	"if ( ! this -> CanAddChild ( child , whynot ) )"		1700504	0					
ANR	1700508	Condition	"! this -> CanAddChild ( child , whynot )"	430:5:11135:11169	1700504	0	True				
ANR	1700509	UnaryOperationExpression	"! this -> CanAddChild ( child , whynot )"		1700504	0					
ANR	1700510	UnaryOperator	!		1700504	0					
ANR	1700511	CallExpression	"this -> CanAddChild ( child , whynot )"		1700504	1					
ANR	1700512	Callee	this -> CanAddChild		1700504	0					
ANR	1700513	PtrMemberAccess	this -> CanAddChild		1700504	0					
ANR	1700514	Identifier	this		1700504	0					
ANR	1700515	Identifier	CanAddChild		1700504	1					
ANR	1700516	ArgumentList	child		1700504	1					
ANR	1700517	Argument	child		1700504	0					
ANR	1700518	Identifier	child		1700504	0					
ANR	1700519	Argument	whynot		1700504	1					
ANR	1700520	Identifier	whynot		1700504	0					
ANR	1700521	CompoundStatement		2:43:44:44	1700504	1					
ANR	1700522	ReturnStatement	return false ;	431:2:11177:11189	1700504	0	True				
ANR	1700523	Identifier	false		1700504	0					
ANR	1700524	IfStatement	if ( HasChild ( child ) )		1700504	1					
ANR	1700525	Condition	HasChild ( child )	434:5:11200:11216	1700504	0	True				
ANR	1700526	CallExpression	HasChild ( child )		1700504	0					
ANR	1700527	Callee	HasChild		1700504	0					
ANR	1700528	Identifier	HasChild		1700504	0					
ANR	1700529	ArgumentList	child		1700504	1					
ANR	1700530	Argument	child		1700504	0					
ANR	1700531	Identifier	child		1700504	0					
ANR	1700532	CompoundStatement		6:25:91:91	1700504	1					
ANR	1700533	ExpressionStatement	"debug_printf ( DEBUG_NORMAL , ""Warning: parent %s already has child %s\\n"" , GetJobName ( ) , child -> GetJobName ( ) )"	435:2:11224:11342	1700504	0	True				
ANR	1700534	CallExpression	"debug_printf ( DEBUG_NORMAL , ""Warning: parent %s already has child %s\\n"" , GetJobName ( ) , child -> GetJobName ( ) )"		1700504	0					
ANR	1700535	Callee	debug_printf		1700504	0					
ANR	1700536	Identifier	debug_printf		1700504	0					
ANR	1700537	ArgumentList	DEBUG_NORMAL		1700504	1					
ANR	1700538	Argument	DEBUG_NORMAL		1700504	0					
ANR	1700539	Identifier	DEBUG_NORMAL		1700504	0					
ANR	1700540	Argument	"""Warning: parent %s already has child %s\\n"""		1700504	1					
ANR	1700541	PrimaryExpression	"""Warning: parent %s already has child %s\\n"""		1700504	0					
ANR	1700542	Argument	GetJobName ( )		1700504	2					
ANR	1700543	CallExpression	GetJobName ( )		1700504	0					
ANR	1700544	Callee	GetJobName		1700504	0					
ANR	1700545	Identifier	GetJobName		1700504	0					
ANR	1700546	ArgumentList			1700504	1					
ANR	1700547	Argument	child -> GetJobName ( )		1700504	3					
ANR	1700548	CallExpression	child -> GetJobName ( )		1700504	0					
ANR	1700549	Callee	child -> GetJobName		1700504	0					
ANR	1700550	PtrMemberAccess	child -> GetJobName		1700504	0					
ANR	1700551	Identifier	child		1700504	0					
ANR	1700552	Identifier	GetJobName		1700504	1					
ANR	1700553	ArgumentList			1700504	1					
ANR	1700554	ExpressionStatement	check_warning_strictness ( DAG_STRICT_3 )	438:2:11346:11386	1700504	1	True				
ANR	1700555	CallExpression	check_warning_strictness ( DAG_STRICT_3 )		1700504	0					
ANR	1700556	Callee	check_warning_strictness		1700504	0					
ANR	1700557	Identifier	check_warning_strictness		1700504	0					
ANR	1700558	ArgumentList	DAG_STRICT_3		1700504	1					
ANR	1700559	Argument	DAG_STRICT_3		1700504	0					
ANR	1700560	Identifier	DAG_STRICT_3		1700504	0					
ANR	1700561	ReturnStatement	return true ;	439:2:11390:11401	1700504	2	True				
ANR	1700562	Identifier	true		1700504	0					
ANR	1700563	IfStatement	"if ( ! Add ( Q_CHILDREN , child -> GetJobID ( ) ) )"		1700504	2					
ANR	1700564	Condition	"! Add ( Q_CHILDREN , child -> GetJobID ( ) )"	442:5:11412:11448	1700504	0	True				
ANR	1700565	UnaryOperationExpression	"! Add ( Q_CHILDREN , child -> GetJobID ( ) )"		1700504	0					
ANR	1700566	UnaryOperator	!		1700504	0					
ANR	1700567	CallExpression	"Add ( Q_CHILDREN , child -> GetJobID ( ) )"		1700504	1					
ANR	1700568	Callee	Add		1700504	0					
ANR	1700569	Identifier	Add		1700504	0					
ANR	1700570	ArgumentList	Q_CHILDREN		1700504	1					
ANR	1700571	Argument	Q_CHILDREN		1700504	0					
ANR	1700572	Identifier	Q_CHILDREN		1700504	0					
ANR	1700573	Argument	child -> GetJobID ( )		1700504	1					
ANR	1700574	CallExpression	child -> GetJobID ( )		1700504	0					
ANR	1700575	Callee	child -> GetJobID		1700504	0					
ANR	1700576	PtrMemberAccess	child -> GetJobID		1700504	0					
ANR	1700577	Identifier	child		1700504	0					
ANR	1700578	Identifier	GetJobID		1700504	1					
ANR	1700579	ArgumentList			1700504	1					
ANR	1700580	CompoundStatement		14:45:323:323	1700504	1					
ANR	1700581	ExpressionStatement	"whynot = ""unknown error appending to CHILDREN queue"""	443:2:11456:11508	1700504	0	True				
ANR	1700582	AssignmentExpression	"whynot = ""unknown error appending to CHILDREN queue"""		1700504	0		=			
ANR	1700583	Identifier	whynot		1700504	0					
ANR	1700584	PrimaryExpression	"""unknown error appending to CHILDREN queue"""		1700504	1					
ANR	1700585	ReturnStatement	return false ;	444:2:11512:11524	1700504	1	True				
ANR	1700586	Identifier	false		1700504	0					
ANR	1700587	ExpressionStatement	"whynot = ""n/a"""	446:1:11530:11544	1700504	3	True				
ANR	1700588	AssignmentExpression	"whynot = ""n/a"""		1700504	0		=			
ANR	1700589	Identifier	whynot		1700504	0					
ANR	1700590	PrimaryExpression	"""n/a"""		1700504	1					
ANR	1700591	ReturnStatement	return true ;	447:4:11550:11561	1700504	4	True				
ANR	1700592	Identifier	true		1700504	0					
ANR	1700593	ReturnType	bool		1700504	1					
ANR	1700594	Identifier	Job :: AddChild		1700504	2					
ANR	1700595	ParameterList	"Job * child , MyString & whynot"		1700504	3					
ANR	1700596	Parameter	Job * child	428:15:11097:11106	1700504	0	True				
ANR	1700597	ParameterType	Job *		1700504	0					
ANR	1700598	Identifier	child		1700504	1					
ANR	1700599	Parameter	MyString & whynot	428:27:11109:11124	1700504	1	True				
ANR	1700600	ParameterType	MyString &		1700504	0					
ANR	1700601	Identifier	whynot		1700504	1					
ANR	1700602	CFGEntryNode	ENTRY		1700504		True				
ANR	1700603	CFGExitNode	EXIT		1700504		True				
ANR	1700604	Symbol	Add		1700504						
ANR	1700605	Symbol	this -> CanAddChild		1700504						
ANR	1700606	Symbol	* child		1700504						
ANR	1700607	Symbol	child -> GetJobName		1700504						
ANR	1700608	Symbol	this		1700504						
ANR	1700609	Symbol	false		1700504						
ANR	1700610	Symbol	whynot		1700504						
ANR	1700611	Symbol	DEBUG_NORMAL		1700504						
ANR	1700612	Symbol	HasChild		1700504						
ANR	1700613	Symbol	* this		1700504						
ANR	1700614	Symbol	DAG_STRICT_3		1700504						
ANR	1700615	Symbol	GetJobName		1700504						
ANR	1700616	Symbol	true		1700504						
ANR	1700617	Symbol	child		1700504						
ANR	1700618	Symbol	child -> GetJobID		1700504						
ANR	1700619	Symbol	Q_CHILDREN		1700504						
ANR	1700620	Function	Job :: CanAddChild	451:0:11567:11718							
ANR	1700621	FunctionDef	"Job :: CanAddChild (Job * child , MyString & whynot)"		1700620	0					
ANR	1700622	CompoundStatement		453:0:11621:11718	1700620	0					
ANR	1700623	IfStatement	if ( ! child )		1700620	0					
ANR	1700624	Condition	! child	454:5:11628:11633	1700620	0	True				
ANR	1700625	UnaryOperationExpression	! child		1700620	0					
ANR	1700626	UnaryOperator	!		1700620	0					
ANR	1700627	Identifier	child		1700620	1					
ANR	1700628	CompoundStatement		2:14:15:15	1700620	1					
ANR	1700629	ExpressionStatement	"whynot = ""child == NULL"""	455:2:11641:11665	1700620	0	True				
ANR	1700630	AssignmentExpression	"whynot = ""child == NULL"""		1700620	0		=			
ANR	1700631	Identifier	whynot		1700620	0					
ANR	1700632	PrimaryExpression	"""child == NULL"""		1700620	1					
ANR	1700633	ReturnStatement	return false ;	456:2:11669:11681	1700620	1	True				
ANR	1700634	Identifier	false		1700620	0					
ANR	1700635	ExpressionStatement	"whynot = ""n/a"""	459:1:11688:11702	1700620	1	True				
ANR	1700636	AssignmentExpression	"whynot = ""n/a"""		1700620	0		=			
ANR	1700637	Identifier	whynot		1700620	0					
ANR	1700638	PrimaryExpression	"""n/a"""		1700620	1					
ANR	1700639	ReturnStatement	return true ;	460:1:11705:11716	1700620	2	True				
ANR	1700640	Identifier	true		1700620	0					
ANR	1700641	ReturnType	bool		1700620	1					
ANR	1700642	Identifier	Job :: CanAddChild		1700620	2					
ANR	1700643	ParameterList	"Job * child , MyString & whynot"		1700620	3					
ANR	1700644	Parameter	Job * child	452:18:11590:11599	1700620	0	True				
ANR	1700645	ParameterType	Job *		1700620	0					
ANR	1700646	Identifier	child		1700620	1					
ANR	1700647	Parameter	MyString & whynot	452:30:11602:11617	1700620	1	True				
ANR	1700648	ParameterType	MyString &		1700620	0					
ANR	1700649	Identifier	whynot		1700620	1					
ANR	1700650	CFGEntryNode	ENTRY		1700620		True				
ANR	1700651	CFGExitNode	EXIT		1700620		True				
ANR	1700652	Symbol	false		1700620						
ANR	1700653	Symbol	true		1700620						
ANR	1700654	Symbol	whynot		1700620						
ANR	1700655	Symbol	child		1700620						
ANR	1700656	Function	Job :: TerminateSuccess	464:0:11722:11791							
ANR	1700657	FunctionDef	Job :: TerminateSuccess ()		1700656	0					
ANR	1700658	CompoundStatement		466:0:11751:11791	1700656	0					
ANR	1700659	ExpressionStatement	_Status = STATUS_DONE	467:1:11754:11775	1700656	0	True				
ANR	1700660	AssignmentExpression	_Status = STATUS_DONE		1700656	0		=			
ANR	1700661	Identifier	_Status		1700656	0					
ANR	1700662	Identifier	STATUS_DONE		1700656	1					
ANR	1700663	ReturnStatement	return true ;	468:1:11778:11789	1700656	1	True				
ANR	1700664	Identifier	true		1700656	0					
ANR	1700665	ReturnType	bool		1700656	1					
ANR	1700666	Identifier	Job :: TerminateSuccess		1700656	2					
ANR	1700667	ParameterList			1700656	3					
ANR	1700668	CFGEntryNode	ENTRY		1700656		True				
ANR	1700669	CFGExitNode	EXIT		1700656		True				
ANR	1700670	Symbol	_Status		1700656						
ANR	1700671	Symbol	true		1700656						
ANR	1700672	Symbol	STATUS_DONE		1700656						
ANR	1700673	Function	Job :: TerminateFailure	471:0:11795:11865							
ANR	1700674	FunctionDef	Job :: TerminateFailure ()		1700673	0					
ANR	1700675	CompoundStatement		473:0:11824:11865	1700673	0					
ANR	1700676	ExpressionStatement	_Status = STATUS_ERROR	474:1:11827:11849	1700673	0	True				
ANR	1700677	AssignmentExpression	_Status = STATUS_ERROR		1700673	0		=			
ANR	1700678	Identifier	_Status		1700673	0					
ANR	1700679	Identifier	STATUS_ERROR		1700673	1					
ANR	1700680	ReturnStatement	return true ;	475:1:11852:11863	1700673	1	True				
ANR	1700681	Identifier	true		1700673	0					
ANR	1700682	ReturnType	bool		1700673	1					
ANR	1700683	Identifier	Job :: TerminateFailure		1700673	2					
ANR	1700684	ParameterList			1700673	3					
ANR	1700685	CFGEntryNode	ENTRY		1700673		True				
ANR	1700686	CFGExitNode	EXIT		1700673		True				
ANR	1700687	Symbol	_Status		1700673						
ANR	1700688	Symbol	true		1700673						
ANR	1700689	Symbol	STATUS_ERROR		1700673						
ANR	1700690	Function	Job :: Add	478:0:11869:12166							
ANR	1700691	FunctionDef	"Job :: Add (const queue_t queue , const JobID_t jobID)"		1700690	0					
ANR	1700692	CompoundStatement		480:0:11927:12166	1700690	0					
ANR	1700693	IdentifierDeclStatement	"pair < set < JobID_t > :: iterator , bool > ret ;"	481:1:11930:11968	1700690	0	True				
ANR	1700694	IdentifierDecl	ret		1700690	0					
ANR	1700695	IdentifierDeclType	"pair < set < JobID_t > :: iterator , bool >"		1700690	0					
ANR	1700696	Identifier	ret		1700690	1					
ANR	1700697	ExpressionStatement	ret = _queues [ queue ] . insert ( jobID )	483:1:11972:12006	1700690	1	True				
ANR	1700698	AssignmentExpression	ret = _queues [ queue ] . insert ( jobID )		1700690	0		=			
ANR	1700699	Identifier	ret		1700690	0					
ANR	1700700	CallExpression	_queues [ queue ] . insert ( jobID )		1700690	1					
ANR	1700701	Callee	_queues [ queue ] . insert		1700690	0					
ANR	1700702	MemberAccess	_queues [ queue ] . insert		1700690	0					
ANR	1700703	ArrayIndexing	_queues [ queue ]		1700690	0					
ANR	1700704	Identifier	_queues		1700690	0					
ANR	1700705	Identifier	queue		1700690	1					
ANR	1700706	Identifier	insert		1700690	1					
ANR	1700707	ArgumentList	jobID		1700690	1					
ANR	1700708	Argument	jobID		1700690	0					
ANR	1700709	Identifier	jobID		1700690	0					
ANR	1700710	IfStatement	if ( ret . second == false )		1700690	2					
ANR	1700711	Condition	ret . second == false	485:5:12014:12032	1700690	0	True				
ANR	1700712	EqualityExpression	ret . second == false		1700690	0		==			
ANR	1700713	MemberAccess	ret . second		1700690	0					
ANR	1700714	Identifier	ret		1700690	0					
ANR	1700715	Identifier	second		1700690	1					
ANR	1700716	Identifier	false		1700690	1					
ANR	1700717	CompoundStatement		6:26:107:107	1700690	1					
ANR	1700718	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: can't add Job ID %d to DAG: already present!"" , jobID )"	486:2:12039:12130	1700690	0	True				
ANR	1700719	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: can't add Job ID %d to DAG: already present!"" , jobID )"		1700690	0					
ANR	1700720	Callee	dprintf		1700690	0					
ANR	1700721	Identifier	dprintf		1700690	0					
ANR	1700722	ArgumentList	D_ALWAYS		1700690	1					
ANR	1700723	Argument	D_ALWAYS		1700690	0					
ANR	1700724	Identifier	D_ALWAYS		1700690	0					
ANR	1700725	Argument	"""ERROR: can't add Job ID %d to DAG: already present!"""		1700690	1					
ANR	1700726	PrimaryExpression	"""ERROR: can't add Job ID %d to DAG: already present!"""		1700690	0					
ANR	1700727	Argument	jobID		1700690	2					
ANR	1700728	Identifier	jobID		1700690	0					
ANR	1700729	ReturnStatement	return false ;	489:2:12134:12146	1700690	1	True				
ANR	1700730	Identifier	false		1700690	0					
ANR	1700731	ReturnStatement	return true ;	492:1:12153:12164	1700690	3	True				
ANR	1700732	Identifier	true		1700690	0					
ANR	1700733	ReturnType	bool		1700690	1					
ANR	1700734	Identifier	Job :: Add		1700690	2					
ANR	1700735	ParameterList	"const queue_t queue , const JobID_t jobID"		1700690	3					
ANR	1700736	Parameter	const queue_t queue	479:10:11884:11902	1700690	0	True				
ANR	1700737	ParameterType	const queue_t		1700690	0					
ANR	1700738	Identifier	queue		1700690	1					
ANR	1700739	Parameter	const JobID_t jobID	479:31:11905:11923	1700690	1	True				
ANR	1700740	ParameterType	const JobID_t		1700690	0					
ANR	1700741	Identifier	jobID		1700690	1					
ANR	1700742	CFGEntryNode	ENTRY		1700690		True				
ANR	1700743	CFGExitNode	EXIT		1700690		True				
ANR	1700744	Symbol	ret		1700690						
ANR	1700745	Symbol	_queues [ queue ] . insert		1700690						
ANR	1700746	Symbol	jobID		1700690						
ANR	1700747	Symbol	ret . second		1700690						
ANR	1700748	Symbol	* queue		1700690						
ANR	1700749	Symbol	_queues		1700690						
ANR	1700750	Symbol	* _queues		1700690						
ANR	1700751	Symbol	false		1700690						
ANR	1700752	Symbol	D_ALWAYS		1700690						
ANR	1700753	Symbol	true		1700690						
ANR	1700754	Symbol	queue		1700690						
ANR	1700755	Function	Job :: AddPreScript	495:0:12169:12272							
ANR	1700756	FunctionDef	"Job :: AddPreScript (const char * cmd , MyString & whynot)"		1700755	0					
ANR	1700757	CompoundStatement		497:0:12229:12272	1700755	0					
ANR	1700758	ReturnStatement	"return AddScript ( false , cmd , whynot ) ;"	498:1:12232:12270	1700755	0	True				
ANR	1700759	CallExpression	"AddScript ( false , cmd , whynot )"		1700755	0					
ANR	1700760	Callee	AddScript		1700755	0					
ANR	1700761	Identifier	AddScript		1700755	0					
ANR	1700762	ArgumentList	false		1700755	1					
ANR	1700763	Argument	false		1700755	0					
ANR	1700764	Identifier	false		1700755	0					
ANR	1700765	Argument	cmd		1700755	1					
ANR	1700766	Identifier	cmd		1700755	0					
ANR	1700767	Argument	whynot		1700755	2					
ANR	1700768	Identifier	whynot		1700755	0					
ANR	1700769	ReturnType	bool		1700755	1					
ANR	1700770	Identifier	Job :: AddPreScript		1700755	2					
ANR	1700771	ParameterList	"const char * cmd , MyString & whynot"		1700755	3					
ANR	1700772	Parameter	const char * cmd	496:19:12193:12207	1700755	0	True				
ANR	1700773	ParameterType	const char *		1700755	0					
ANR	1700774	Identifier	cmd		1700755	1					
ANR	1700775	Parameter	MyString & whynot	496:36:12210:12225	1700755	1	True				
ANR	1700776	ParameterType	MyString &		1700755	0					
ANR	1700777	Identifier	whynot		1700755	1					
ANR	1700778	CFGEntryNode	ENTRY		1700755		True				
ANR	1700779	CFGExitNode	EXIT		1700755		True				
ANR	1700780	Symbol	AddScript		1700755						
ANR	1700781	Symbol	false		1700755						
ANR	1700782	Symbol	whynot		1700755						
ANR	1700783	Symbol	cmd		1700755						
ANR	1700784	Function	Job :: AddPostScript	501:0:12275:12378							
ANR	1700785	FunctionDef	"Job :: AddPostScript (const char * cmd , MyString & whynot)"		1700784	0					
ANR	1700786	CompoundStatement		503:0:12336:12378	1700784	0					
ANR	1700787	ReturnStatement	"return AddScript ( true , cmd , whynot ) ;"	504:1:12339:12376	1700784	0	True				
ANR	1700788	CallExpression	"AddScript ( true , cmd , whynot )"		1700784	0					
ANR	1700789	Callee	AddScript		1700784	0					
ANR	1700790	Identifier	AddScript		1700784	0					
ANR	1700791	ArgumentList	true		1700784	1					
ANR	1700792	Argument	true		1700784	0					
ANR	1700793	Identifier	true		1700784	0					
ANR	1700794	Argument	cmd		1700784	1					
ANR	1700795	Identifier	cmd		1700784	0					
ANR	1700796	Argument	whynot		1700784	2					
ANR	1700797	Identifier	whynot		1700784	0					
ANR	1700798	ReturnType	bool		1700784	1					
ANR	1700799	Identifier	Job :: AddPostScript		1700784	2					
ANR	1700800	ParameterList	"const char * cmd , MyString & whynot"		1700784	3					
ANR	1700801	Parameter	const char * cmd	502:20:12300:12314	1700784	0	True				
ANR	1700802	ParameterType	const char *		1700784	0					
ANR	1700803	Identifier	cmd		1700784	1					
ANR	1700804	Parameter	MyString & whynot	502:37:12317:12332	1700784	1	True				
ANR	1700805	ParameterType	MyString &		1700784	0					
ANR	1700806	Identifier	whynot		1700784	1					
ANR	1700807	CFGEntryNode	ENTRY		1700784		True				
ANR	1700808	CFGExitNode	EXIT		1700784		True				
ANR	1700809	Symbol	AddScript		1700784						
ANR	1700810	Symbol	true		1700784						
ANR	1700811	Symbol	whynot		1700784						
ANR	1700812	Symbol	cmd		1700784						
ANR	1700813	Function	Job :: AddScript	507:0:12381:13088							
ANR	1700814	FunctionDef	"Job :: AddScript (bool post , const char * cmd , MyString & whynot)"		1700813	0					
ANR	1700815	CompoundStatement		509:0:12449:13088	1700813	0					
ANR	1700816	IfStatement	"if ( ! cmd || strcmp ( cmd , """" ) == 0 )"		1700813	0					
ANR	1700817	Condition	"! cmd || strcmp ( cmd , """" ) == 0"	510:5:12456:12485	1700813	0	True				
ANR	1700818	OrExpression	"! cmd || strcmp ( cmd , """" ) == 0"		1700813	0		||			
ANR	1700819	UnaryOperationExpression	! cmd		1700813	0					
ANR	1700820	UnaryOperator	!		1700813	0					
ANR	1700821	Identifier	cmd		1700813	1					
ANR	1700822	EqualityExpression	"strcmp ( cmd , """" ) == 0"		1700813	1		==			
ANR	1700823	CallExpression	"strcmp ( cmd , """" )"		1700813	0					
ANR	1700824	Callee	strcmp		1700813	0					
ANR	1700825	Identifier	strcmp		1700813	0					
ANR	1700826	ArgumentList	cmd		1700813	1					
ANR	1700827	Argument	cmd		1700813	0					
ANR	1700828	Identifier	cmd		1700813	0					
ANR	1700829	Argument	""""""		1700813	1					
ANR	1700830	PrimaryExpression	""""""		1700813	0					
ANR	1700831	PrimaryExpression	0		1700813	1					
ANR	1700832	CompoundStatement		2:38:39:39	1700813	1					
ANR	1700833	ExpressionStatement	"whynot = ""missing script name"""	511:2:12493:12523	1700813	0	True				
ANR	1700834	AssignmentExpression	"whynot = ""missing script name"""		1700813	0		=			
ANR	1700835	Identifier	whynot		1700813	0					
ANR	1700836	PrimaryExpression	"""missing script name"""		1700813	1					
ANR	1700837	ReturnStatement	return false ;	512:2:12527:12539	1700813	1	True				
ANR	1700838	Identifier	false		1700813	0					
ANR	1700839	IfStatement	if ( post ? _scriptPost : _scriptPre )		1700813	1					
ANR	1700840	Condition	post ? _scriptPost : _scriptPre	514:5:12549:12579	1700813	0	True				
ANR	1700841	ConditionalExpression	post ? _scriptPost : _scriptPre		1700813	0					
ANR	1700842	Condition	post		1700813	0					
ANR	1700843	Identifier	post		1700813	0					
ANR	1700844	Identifier	_scriptPost		1700813	1					
ANR	1700845	Identifier	_scriptPre		1700813	2					
ANR	1700846	CompoundStatement		6:39:133:133	1700813	1					
ANR	1700847	ExpressionStatement	"whynot . sprintf ( ""%s script already assigned (%s)"" , post ? ""POST"" : ""PRE"" , GetPreScriptName ( ) )"	515:2:12587:12687	1700813	0	True				
ANR	1700848	CallExpression	"whynot . sprintf ( ""%s script already assigned (%s)"" , post ? ""POST"" : ""PRE"" , GetPreScriptName ( ) )"		1700813	0					
ANR	1700849	Callee	whynot . sprintf		1700813	0					
ANR	1700850	MemberAccess	whynot . sprintf		1700813	0					
ANR	1700851	Identifier	whynot		1700813	0					
ANR	1700852	Identifier	sprintf		1700813	1					
ANR	1700853	ArgumentList	"""%s script already assigned (%s)"""		1700813	1					
ANR	1700854	Argument	"""%s script already assigned (%s)"""		1700813	0					
ANR	1700855	PrimaryExpression	"""%s script already assigned (%s)"""		1700813	0					
ANR	1700856	Argument	"post ? ""POST"" : ""PRE"""		1700813	1					
ANR	1700857	ConditionalExpression	"post ? ""POST"" : ""PRE"""		1700813	0					
ANR	1700858	Condition	post		1700813	0					
ANR	1700859	Identifier	post		1700813	0					
ANR	1700860	PrimaryExpression	"""POST"""		1700813	1					
ANR	1700861	PrimaryExpression	"""PRE"""		1700813	2					
ANR	1700862	Argument	GetPreScriptName ( )		1700813	2					
ANR	1700863	CallExpression	GetPreScriptName ( )		1700813	0					
ANR	1700864	Callee	GetPreScriptName		1700813	0					
ANR	1700865	Identifier	GetPreScriptName		1700813	0					
ANR	1700866	ArgumentList			1700813	1					
ANR	1700867	ReturnStatement	return false ;	517:2:12691:12703	1700813	1	True				
ANR	1700868	Identifier	false		1700813	0					
ANR	1700869	IdentifierDeclStatement	"Script * script = new Script ( post , cmd , this ) ;"	519:1:12709:12755	1700813	2	True				
ANR	1700870	IdentifierDecl	"* script = new Script ( post , cmd , this )"		1700813	0					
ANR	1700871	IdentifierDeclType	Script *		1700813	0					
ANR	1700872	Identifier	script		1700813	1					
ANR	1700873	AssignmentExpression	"* script = new Script ( post , cmd , this )"		1700813	2		=			
ANR	1700874	Identifier	script		1700813	0					
ANR	1700875	Expression	"post , cmd , this"		1700813	1					
ANR	1700876	Identifier	post		1700813	0					
ANR	1700877	Expression	"cmd , this"		1700813	1					
ANR	1700878	Identifier	cmd		1700813	0					
ANR	1700879	Identifier	this		1700813	1					
ANR	1700880	IfStatement	if ( ! script )		1700813	3					
ANR	1700881	Condition	! script	520:5:12762:12768	1700813	0	True				
ANR	1700882	UnaryOperationExpression	! script		1700813	0					
ANR	1700883	UnaryOperator	!		1700813	0					
ANR	1700884	Identifier	script		1700813	1					
ANR	1700885	CompoundStatement		12:15:322:322	1700813	1					
ANR	1700886	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: out of memory!\\n"" )"	521:2:12776:12822	1700813	0	True				
ANR	1700887	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: out of memory!\\n"" )"		1700813	0					
ANR	1700888	Callee	dprintf		1700813	0					
ANR	1700889	Identifier	dprintf		1700813	0					
ANR	1700890	ArgumentList	D_ALWAYS		1700813	1					
ANR	1700891	Argument	D_ALWAYS		1700813	0					
ANR	1700892	Identifier	D_ALWAYS		1700813	0					
ANR	1700893	Argument	"""ERROR: out of memory!\\n"""		1700813	1					
ANR	1700894	PrimaryExpression	"""ERROR: out of memory!\\n"""		1700813	0					
ANR	1700895	ExpressionStatement	"whynot = ""out of memory!"""	524:2:12936:12961	1700813	1	True				
ANR	1700896	AssignmentExpression	"whynot = ""out of memory!"""		1700813	0		=			
ANR	1700897	Identifier	whynot		1700813	0					
ANR	1700898	PrimaryExpression	"""out of memory!"""		1700813	1					
ANR	1700899	ReturnStatement	return false ;	525:2:12965:12977	1700813	2	True				
ANR	1700900	Identifier	false		1700813	0					
ANR	1700901	IfStatement	if ( post )		1700813	4					
ANR	1700902	Condition	post	527:5:12987:12990	1700813	0	True				
ANR	1700903	Identifier	post		1700813	0					
ANR	1700904	CompoundStatement		19:12:544:544	1700813	1					
ANR	1700905	ExpressionStatement	_scriptPost = script	528:2:12998:13018	1700813	0	True				
ANR	1700906	AssignmentExpression	_scriptPost = script		1700813	0		=			
ANR	1700907	Identifier	_scriptPost		1700813	0					
ANR	1700908	Identifier	script		1700813	1					
ANR	1700909	ElseStatement	else		1700813	0					
ANR	1700910	CompoundStatement		22:6:579:579	1700813	0					
ANR	1700911	ExpressionStatement	_scriptPre = script	531:2:13033:13052	1700813	0	True				
ANR	1700912	AssignmentExpression	_scriptPre = script		1700813	0		=			
ANR	1700913	Identifier	_scriptPre		1700813	0					
ANR	1700914	Identifier	script		1700813	1					
ANR	1700915	ExpressionStatement	"whynot = ""n/a"""	533:1:13058:13072	1700813	5	True				
ANR	1700916	AssignmentExpression	"whynot = ""n/a"""		1700813	0		=			
ANR	1700917	Identifier	whynot		1700813	0					
ANR	1700918	PrimaryExpression	"""n/a"""		1700813	1					
ANR	1700919	ReturnStatement	return true ;	534:1:13075:13086	1700813	6	True				
ANR	1700920	Identifier	true		1700813	0					
ANR	1700921	ReturnType	bool		1700813	1					
ANR	1700922	Identifier	Job :: AddScript		1700813	2					
ANR	1700923	ParameterList	"bool post , const char * cmd , MyString & whynot"		1700813	3					
ANR	1700924	Parameter	bool post	508:16:12402:12410	1700813	0	True				
ANR	1700925	ParameterType	bool		1700813	0					
ANR	1700926	Identifier	post		1700813	1					
ANR	1700927	Parameter	const char * cmd	508:27:12413:12427	1700813	1	True				
ANR	1700928	ParameterType	const char *		1700813	0					
ANR	1700929	Identifier	cmd		1700813	1					
ANR	1700930	Parameter	MyString & whynot	508:44:12430:12445	1700813	2	True				
ANR	1700931	ParameterType	MyString &		1700813	0					
ANR	1700932	Identifier	whynot		1700813	1					
ANR	1700933	CFGEntryNode	ENTRY		1700813		True				
ANR	1700934	CFGExitNode	EXIT		1700813		True				
ANR	1700935	Symbol	strcmp		1700813						
ANR	1700936	Symbol	post		1700813						
ANR	1700937	Symbol	_scriptPost		1700813						
ANR	1700938	Symbol	false		1700813						
ANR	1700939	Symbol	this		1700813						
ANR	1700940	Symbol	D_ALWAYS		1700813						
ANR	1700941	Symbol	true		1700813						
ANR	1700942	Symbol	whynot		1700813						
ANR	1700943	Symbol	cmd		1700813						
ANR	1700944	Symbol	GetPreScriptName		1700813						
ANR	1700945	Symbol	script		1700813						
ANR	1700946	Symbol	_scriptPre		1700813						
ANR	1700947	Function	Job :: AddPreSkip	537:0:13091:13628							
ANR	1700948	FunctionDef	"Job :: AddPreSkip (int exitCode , MyString & whynot)"		1700947	0					
ANR	1700949	CompoundStatement		539:0:13146:13628	1700947	0					
ANR	1700950	IfStatement	if ( exitCode < PRE_SKIP_MIN || exitCode > PRE_SKIP_MAX )		1700947	0					
ANR	1700951	Condition	exitCode < PRE_SKIP_MIN || exitCode > PRE_SKIP_MAX	540:5:13153:13202	1700947	0	True				
ANR	1700952	OrExpression	exitCode < PRE_SKIP_MIN || exitCode > PRE_SKIP_MAX		1700947	0		||			
ANR	1700953	RelationalExpression	exitCode < PRE_SKIP_MIN		1700947	0		<			
ANR	1700954	Identifier	exitCode		1700947	0					
ANR	1700955	Identifier	PRE_SKIP_MIN		1700947	1					
ANR	1700956	RelationalExpression	exitCode > PRE_SKIP_MAX		1700947	1		>			
ANR	1700957	Identifier	exitCode		1700947	0					
ANR	1700958	Identifier	PRE_SKIP_MAX		1700947	1					
ANR	1700959	CompoundStatement		2:58:59:59	1700947	1					
ANR	1700960	ExpressionStatement	"whynot . sprintf ( ""PRE_SKIP exit code must be between %d and %d\\n"" , PRE_SKIP_MIN , PRE_SKIP_MAX )"	541:2:13210:13307	1700947	0	True				
ANR	1700961	CallExpression	"whynot . sprintf ( ""PRE_SKIP exit code must be between %d and %d\\n"" , PRE_SKIP_MIN , PRE_SKIP_MAX )"		1700947	0					
ANR	1700962	Callee	whynot . sprintf		1700947	0					
ANR	1700963	MemberAccess	whynot . sprintf		1700947	0					
ANR	1700964	Identifier	whynot		1700947	0					
ANR	1700965	Identifier	sprintf		1700947	1					
ANR	1700966	ArgumentList	"""PRE_SKIP exit code must be between %d and %d\\n"""		1700947	1					
ANR	1700967	Argument	"""PRE_SKIP exit code must be between %d and %d\\n"""		1700947	0					
ANR	1700968	PrimaryExpression	"""PRE_SKIP exit code must be between %d and %d\\n"""		1700947	0					
ANR	1700969	Argument	PRE_SKIP_MIN		1700947	1					
ANR	1700970	Identifier	PRE_SKIP_MIN		1700947	0					
ANR	1700971	Argument	PRE_SKIP_MAX		1700947	2					
ANR	1700972	Identifier	PRE_SKIP_MAX		1700947	0					
ANR	1700973	ReturnStatement	return false ;	543:2:13311:13323	1700947	1	True				
ANR	1700974	Identifier	false		1700947	0					
ANR	1700975	IfStatement	if ( exitCode == 0 )		1700947	1					
ANR	1700976	Condition	exitCode == 0	546:5:13334:13346	1700947	0	True				
ANR	1700977	EqualityExpression	exitCode == 0		1700947	0		==			
ANR	1700978	Identifier	exitCode		1700947	0					
ANR	1700979	PrimaryExpression	0		1700947	1					
ANR	1700980	CompoundStatement		8:21:203:203	1700947	1					
ANR	1700981	Statement	debug_printf	547:2:13354:13365	1700947	0	True				
ANR	1700982	Statement	(	547:14:13366:13366	1700947	1	True				
ANR	1700983	Statement	DEBUG_NORMAL	547:16:13368:13379	1700947	2	True				
ANR	1700984	Statement	","	547:28:13380:13380	1700947	3	True				
ANR	1700985	Statement	"""Warning: exit code 0 for a PRE_SKIP """	547:30:13382:13419	1700947	4	True				
ANR	1700986	Statement	"""value is weird.\\n"""	548:3:13424:13442	1700947	5	True				
ANR	1700987	Statement	)	548:22:13443:13443	1700947	6	True				
ANR	1700988	ExpressionStatement		548:23:13444:13444	1700947	7	True				
ANR	1700989	IfStatement	if ( _preskip == PRE_SKIP_INVALID )		1700947	2					
ANR	1700990	Condition	_preskip == PRE_SKIP_INVALID	551:5:13455:13482	1700947	0	True				
ANR	1700991	EqualityExpression	_preskip == PRE_SKIP_INVALID		1700947	0		==			
ANR	1700992	Identifier	_preskip		1700947	0					
ANR	1700993	Identifier	PRE_SKIP_INVALID		1700947	1					
ANR	1700994	CompoundStatement		13:36:339:339	1700947	1					
ANR	1700995	ExpressionStatement	_preskip = exitCode	552:2:13490:13509	1700947	0	True				
ANR	1700996	AssignmentExpression	_preskip = exitCode		1700947	0		=			
ANR	1700997	Identifier	_preskip		1700947	0					
ANR	1700998	Identifier	exitCode		1700947	1					
ANR	1700999	ElseStatement	else		1700947	0					
ANR	1701000	CompoundStatement		15:8:373:373	1700947	0					
ANR	1701001	ExpressionStatement	"whynot = ""Two definitions of PRE_SKIP for a node.\\n"""	554:2:13524:13576	1700947	0	True				
ANR	1701002	AssignmentExpression	"whynot = ""Two definitions of PRE_SKIP for a node.\\n"""		1700947	0		=			
ANR	1701003	Identifier	whynot		1700947	0					
ANR	1701004	PrimaryExpression	"""Two definitions of PRE_SKIP for a node.\\n"""		1700947	1					
ANR	1701005	ReturnStatement	return false ;	555:2:13580:13592	1700947	1	True				
ANR	1701006	Identifier	false		1700947	0					
ANR	1701007	ExpressionStatement	"whynot = ""n/a"""	557:1:13598:13612	1700947	3	True				
ANR	1701008	AssignmentExpression	"whynot = ""n/a"""		1700947	0		=			
ANR	1701009	Identifier	whynot		1700947	0					
ANR	1701010	PrimaryExpression	"""n/a"""		1700947	1					
ANR	1701011	ReturnStatement	return true ;	558:1:13615:13626	1700947	4	True				
ANR	1701012	Identifier	true		1700947	0					
ANR	1701013	ReturnType	bool		1700947	1					
ANR	1701014	Identifier	Job :: AddPreSkip		1700947	2					
ANR	1701015	ParameterList	"int exitCode , MyString & whynot"		1700947	3					
ANR	1701016	Parameter	int exitCode	538:17:13113:13124	1700947	0	True				
ANR	1701017	ParameterType	int		1700947	0					
ANR	1701018	Identifier	exitCode		1700947	1					
ANR	1701019	Parameter	MyString & whynot	538:31:13127:13142	1700947	1	True				
ANR	1701020	ParameterType	MyString &		1700947	0					
ANR	1701021	Identifier	whynot		1700947	1					
ANR	1701022	CFGEntryNode	ENTRY		1700947		True				
ANR	1701023	CFGExitNode	EXIT		1700947		True				
ANR	1701024	Symbol	PRE_SKIP_MIN		1700947						
ANR	1701025	Symbol	_preskip		1700947						
ANR	1701026	Symbol	false		1700947						
ANR	1701027	Symbol	true		1700947						
ANR	1701028	Symbol	exitCode		1700947						
ANR	1701029	Symbol	whynot		1700947						
ANR	1701030	Symbol	PRE_SKIP_MAX		1700947						
ANR	1701031	Symbol	PRE_SKIP_INVALID		1700947						
ANR	1701032	Function	Job :: IsActive	561:0:13631:13757							
ANR	1701033	FunctionDef	Job :: IsActive ()		1701032	0					
ANR	1701034	CompoundStatement		563:0:13658:13757	1701032	0					
ANR	1701035	ReturnStatement	return _Status == STATUS_PRERUN || _Status == STATUS_SUBMITTED || _Status == STATUS_POSTRUN ;	564:1:13661:13755	1701032	0	True				
ANR	1701036	OrExpression	_Status == STATUS_PRERUN || _Status == STATUS_SUBMITTED || _Status == STATUS_POSTRUN		1701032	0		||			
ANR	1701037	EqualityExpression	_Status == STATUS_PRERUN		1701032	0		==			
ANR	1701038	Identifier	_Status		1701032	0					
ANR	1701039	Identifier	STATUS_PRERUN		1701032	1					
ANR	1701040	OrExpression	_Status == STATUS_SUBMITTED || _Status == STATUS_POSTRUN		1701032	1		||			
ANR	1701041	EqualityExpression	_Status == STATUS_SUBMITTED		1701032	0		==			
ANR	1701042	Identifier	_Status		1701032	0					
ANR	1701043	Identifier	STATUS_SUBMITTED		1701032	1					
ANR	1701044	EqualityExpression	_Status == STATUS_POSTRUN		1701032	1		==			
ANR	1701045	Identifier	_Status		1701032	0					
ANR	1701046	Identifier	STATUS_POSTRUN		1701032	1					
ANR	1701047	ReturnType	bool		1701032	1					
ANR	1701048	Identifier	Job :: IsActive		1701032	2					
ANR	1701049	ParameterList			1701032	3					
ANR	1701050	CFGEntryNode	ENTRY		1701032		True				
ANR	1701051	CFGExitNode	EXIT		1701032		True				
ANR	1701052	Symbol	_Status		1701032						
ANR	1701053	Symbol	STATUS_SUBMITTED		1701032						
ANR	1701054	Symbol	STATUS_POSTRUN		1701032						
ANR	1701055	Symbol	STATUS_PRERUN		1701032						
ANR	1701056	Function	Job :: GetStatusName	568:0:13760:13865							
ANR	1701057	FunctionDef	Job :: GetStatusName ()		1701056	0					
ANR	1701058	CompoundStatement		570:0:13799:13865	1701056	0					
ANR	1701059	ReturnStatement	return status_t_names [ _Status ] ;	572:1:13833:13863	1701056	0	True				
ANR	1701060	ArrayIndexing	status_t_names [ _Status ]		1701056	0					
ANR	1701061	Identifier	status_t_names		1701056	0					
ANR	1701062	Identifier	_Status		1701056	1					
ANR	1701063	ReturnType	const char *		1701056	1					
ANR	1701064	Identifier	Job :: GetStatusName		1701056	2					
ANR	1701065	ParameterList			1701056	3					
ANR	1701066	CFGEntryNode	ENTRY		1701056		True				
ANR	1701067	CFGExitNode	EXIT		1701056		True				
ANR	1701068	Symbol	* status_t_names		1701056						
ANR	1701069	Symbol	_Status		1701056						
ANR	1701070	Symbol	* _Status		1701056						
ANR	1701071	Symbol	status_t_names		1701056						
ANR	1701072	Function	Job :: HasChild	576:0:13869:14121							
ANR	1701073	FunctionDef	Job :: HasChild (Job * child)		1701072	0					
ANR	1701074	CompoundStatement		577:28:13902:14121	1701072	0					
ANR	1701075	IdentifierDeclStatement	JobID_t cid ;	578:1:13905:13916	1701072	0	True				
ANR	1701076	IdentifierDecl	cid		1701072	0					
ANR	1701077	IdentifierDeclType	JobID_t		1701072	0					
ANR	1701078	Identifier	cid		1701072	1					
ANR	1701079	IdentifierDeclStatement	set < JobID_t > :: iterator it ;	579:1:13919:13944	1701072	1	True				
ANR	1701080	IdentifierDecl	it		1701072	0					
ANR	1701081	IdentifierDeclType	set < JobID_t > :: iterator		1701072	0					
ANR	1701082	Identifier	it		1701072	1					
ANR	1701083	IfStatement	if ( ! child )		1701072	2					
ANR	1701084	Condition	! child	581:5:13952:13957	1701072	0	True				
ANR	1701085	UnaryOperationExpression	! child		1701072	0					
ANR	1701086	UnaryOperator	!		1701072	0					
ANR	1701087	Identifier	child		1701072	1					
ANR	1701088	CompoundStatement		5:14:58:58	1701072	1					
ANR	1701089	ReturnStatement	return false ;	582:2:13965:13977	1701072	0	True				
ANR	1701090	Identifier	false		1701072	0					
ANR	1701091	ExpressionStatement	cid = child -> GetJobID ( )	585:1:13984:14007	1701072	3	True				
ANR	1701092	AssignmentExpression	cid = child -> GetJobID ( )		1701072	0		=			
ANR	1701093	Identifier	cid		1701072	0					
ANR	1701094	CallExpression	child -> GetJobID ( )		1701072	1					
ANR	1701095	Callee	child -> GetJobID		1701072	0					
ANR	1701096	PtrMemberAccess	child -> GetJobID		1701072	0					
ANR	1701097	Identifier	child		1701072	0					
ANR	1701098	Identifier	GetJobID		1701072	1					
ANR	1701099	ArgumentList			1701072	1					
ANR	1701100	ExpressionStatement	it = _queues [ Q_CHILDREN ] . find ( cid )	586:1:14010:14044	1701072	4	True				
ANR	1701101	AssignmentExpression	it = _queues [ Q_CHILDREN ] . find ( cid )		1701072	0		=			
ANR	1701102	Identifier	it		1701072	0					
ANR	1701103	CallExpression	_queues [ Q_CHILDREN ] . find ( cid )		1701072	1					
ANR	1701104	Callee	_queues [ Q_CHILDREN ] . find		1701072	0					
ANR	1701105	MemberAccess	_queues [ Q_CHILDREN ] . find		1701072	0					
ANR	1701106	ArrayIndexing	_queues [ Q_CHILDREN ]		1701072	0					
ANR	1701107	Identifier	_queues		1701072	0					
ANR	1701108	Identifier	Q_CHILDREN		1701072	1					
ANR	1701109	Identifier	find		1701072	1					
ANR	1701110	ArgumentList	cid		1701072	1					
ANR	1701111	Argument	cid		1701072	0					
ANR	1701112	Identifier	cid		1701072	0					
ANR	1701113	IfStatement	if ( it == _queues [ Q_CHILDREN ] . end ( ) )		1701072	5					
ANR	1701114	Condition	it == _queues [ Q_CHILDREN ] . end ( )	588:5:14052:14082	1701072	0	True				
ANR	1701115	EqualityExpression	it == _queues [ Q_CHILDREN ] . end ( )		1701072	0		==			
ANR	1701116	Identifier	it		1701072	0					
ANR	1701117	CallExpression	_queues [ Q_CHILDREN ] . end ( )		1701072	1					
ANR	1701118	Callee	_queues [ Q_CHILDREN ] . end		1701072	0					
ANR	1701119	MemberAccess	_queues [ Q_CHILDREN ] . end		1701072	0					
ANR	1701120	ArrayIndexing	_queues [ Q_CHILDREN ]		1701072	0					
ANR	1701121	Identifier	_queues		1701072	0					
ANR	1701122	Identifier	Q_CHILDREN		1701072	1					
ANR	1701123	Identifier	end		1701072	1					
ANR	1701124	ArgumentList			1701072	1					
ANR	1701125	CompoundStatement		12:38:182:182	1701072	1					
ANR	1701126	ReturnStatement	return false ;	589:2:14089:14101	1701072	0	True				
ANR	1701127	Identifier	false		1701072	0					
ANR	1701128	ReturnStatement	return true ;	592:1:14108:14119	1701072	6	True				
ANR	1701129	Identifier	true		1701072	0					
ANR	1701130	ReturnType	bool		1701072	1					
ANR	1701131	Identifier	Job :: HasChild		1701072	2					
ANR	1701132	ParameterList	Job * child		1701072	3					
ANR	1701133	Parameter	Job * child	577:15:13889:13898	1701072	0	True				
ANR	1701134	ParameterType	Job *		1701072	0					
ANR	1701135	Identifier	child		1701072	1					
ANR	1701136	CFGEntryNode	ENTRY		1701072		True				
ANR	1701137	CFGExitNode	EXIT		1701072		True				
ANR	1701138	Symbol	_queues [ Q_CHILDREN ] . find		1701072						
ANR	1701139	Symbol	* child		1701072						
ANR	1701140	Symbol	_queues [ Q_CHILDREN ] . end		1701072						
ANR	1701141	Symbol	_queues		1701072						
ANR	1701142	Symbol	false		1701072						
ANR	1701143	Symbol	* _queues		1701072						
ANR	1701144	Symbol	it		1701072						
ANR	1701145	Symbol	* Q_CHILDREN		1701072						
ANR	1701146	Symbol	true		1701072						
ANR	1701147	Symbol	child		1701072						
ANR	1701148	Symbol	cid		1701072						
ANR	1701149	Symbol	child -> GetJobID		1701072						
ANR	1701150	Symbol	Q_CHILDREN		1701072						
ANR	1701151	Function	Job :: HasParent	595:0:14124:14378							
ANR	1701152	FunctionDef	Job :: HasParent (Job * parent)		1701151	0					
ANR	1701153	CompoundStatement		596:30:14159:14378	1701151	0					
ANR	1701154	IdentifierDeclStatement	JobID_t pid ;	597:1:14162:14173	1701151	0	True				
ANR	1701155	IdentifierDecl	pid		1701151	0					
ANR	1701156	IdentifierDeclType	JobID_t		1701151	0					
ANR	1701157	Identifier	pid		1701151	1					
ANR	1701158	IdentifierDeclStatement	set < JobID_t > :: iterator it ;	598:1:14176:14201	1701151	1	True				
ANR	1701159	IdentifierDecl	it		1701151	0					
ANR	1701160	IdentifierDeclType	set < JobID_t > :: iterator		1701151	0					
ANR	1701161	Identifier	it		1701151	1					
ANR	1701162	IfStatement	if ( ! parent )		1701151	2					
ANR	1701163	Condition	! parent	600:5:14209:14215	1701151	0	True				
ANR	1701164	UnaryOperationExpression	! parent		1701151	0					
ANR	1701165	UnaryOperator	!		1701151	0					
ANR	1701166	Identifier	parent		1701151	1					
ANR	1701167	CompoundStatement		5:15:59:59	1701151	1					
ANR	1701168	ReturnStatement	return false ;	601:2:14223:14235	1701151	0	True				
ANR	1701169	Identifier	false		1701151	0					
ANR	1701170	ExpressionStatement	pid = parent -> GetJobID ( )	604:1:14242:14266	1701151	3	True				
ANR	1701171	AssignmentExpression	pid = parent -> GetJobID ( )		1701151	0		=			
ANR	1701172	Identifier	pid		1701151	0					
ANR	1701173	CallExpression	parent -> GetJobID ( )		1701151	1					
ANR	1701174	Callee	parent -> GetJobID		1701151	0					
ANR	1701175	PtrMemberAccess	parent -> GetJobID		1701151	0					
ANR	1701176	Identifier	parent		1701151	0					
ANR	1701177	Identifier	GetJobID		1701151	1					
ANR	1701178	ArgumentList			1701151	1					
ANR	1701179	ExpressionStatement	it = _queues [ Q_PARENTS ] . find ( pid )	605:1:14269:14302	1701151	4	True				
ANR	1701180	AssignmentExpression	it = _queues [ Q_PARENTS ] . find ( pid )		1701151	0		=			
ANR	1701181	Identifier	it		1701151	0					
ANR	1701182	CallExpression	_queues [ Q_PARENTS ] . find ( pid )		1701151	1					
ANR	1701183	Callee	_queues [ Q_PARENTS ] . find		1701151	0					
ANR	1701184	MemberAccess	_queues [ Q_PARENTS ] . find		1701151	0					
ANR	1701185	ArrayIndexing	_queues [ Q_PARENTS ]		1701151	0					
ANR	1701186	Identifier	_queues		1701151	0					
ANR	1701187	Identifier	Q_PARENTS		1701151	1					
ANR	1701188	Identifier	find		1701151	1					
ANR	1701189	ArgumentList	pid		1701151	1					
ANR	1701190	Argument	pid		1701151	0					
ANR	1701191	Identifier	pid		1701151	0					
ANR	1701192	IfStatement	if ( it == _queues [ Q_PARENTS ] . end ( ) )		1701151	5					
ANR	1701193	Condition	it == _queues [ Q_PARENTS ] . end ( )	607:5:14310:14339	1701151	0	True				
ANR	1701194	EqualityExpression	it == _queues [ Q_PARENTS ] . end ( )		1701151	0		==			
ANR	1701195	Identifier	it		1701151	0					
ANR	1701196	CallExpression	_queues [ Q_PARENTS ] . end ( )		1701151	1					
ANR	1701197	Callee	_queues [ Q_PARENTS ] . end		1701151	0					
ANR	1701198	MemberAccess	_queues [ Q_PARENTS ] . end		1701151	0					
ANR	1701199	ArrayIndexing	_queues [ Q_PARENTS ]		1701151	0					
ANR	1701200	Identifier	_queues		1701151	0					
ANR	1701201	Identifier	Q_PARENTS		1701151	1					
ANR	1701202	Identifier	end		1701151	1					
ANR	1701203	ArgumentList			1701151	1					
ANR	1701204	CompoundStatement		12:37:182:182	1701151	1					
ANR	1701205	ReturnStatement	return false ;	608:2:14346:14358	1701151	0	True				
ANR	1701206	Identifier	false		1701151	0					
ANR	1701207	ReturnStatement	return true ;	611:1:14365:14376	1701151	6	True				
ANR	1701208	Identifier	true		1701151	0					
ANR	1701209	ReturnType	bool		1701151	1					
ANR	1701210	Identifier	Job :: HasParent		1701151	2					
ANR	1701211	ParameterList	Job * parent		1701151	3					
ANR	1701212	Parameter	Job * parent	596:16:14145:14155	1701151	0	True				
ANR	1701213	ParameterType	Job *		1701151	0					
ANR	1701214	Identifier	parent		1701151	1					
ANR	1701215	CFGEntryNode	ENTRY		1701151		True				
ANR	1701216	CFGExitNode	EXIT		1701151		True				
ANR	1701217	Symbol	parent		1701151						
ANR	1701218	Symbol	* parent		1701151						
ANR	1701219	Symbol	Q_PARENTS		1701151						
ANR	1701220	Symbol	_queues		1701151						
ANR	1701221	Symbol	false		1701151						
ANR	1701222	Symbol	* _queues		1701151						
ANR	1701223	Symbol	pid		1701151						
ANR	1701224	Symbol	it		1701151						
ANR	1701225	Symbol	* Q_PARENTS		1701151						
ANR	1701226	Symbol	_queues [ Q_PARENTS ] . end		1701151						
ANR	1701227	Symbol	_queues [ Q_PARENTS ] . find		1701151						
ANR	1701228	Symbol	true		1701151						
ANR	1701229	Symbol	parent -> GetJobID		1701151						
ANR	1701230	Function	Job :: RemoveChild	615:0:14382:14743							
ANR	1701231	FunctionDef	Job :: RemoveChild (Job * child)		1701230	0					
ANR	1701232	CompoundStatement		617:0:14418:14743	1701230	0					
ANR	1701233	IdentifierDeclStatement	bool success ;	618:1:14421:14433	1701230	0	True				
ANR	1701234	IdentifierDecl	success		1701230	0					
ANR	1701235	IdentifierDeclType	bool		1701230	0					
ANR	1701236	Identifier	success		1701230	1					
ANR	1701237	IdentifierDeclStatement	MyString whynot ;	619:1:14436:14451	1701230	1	True				
ANR	1701238	IdentifierDecl	whynot		1701230	0					
ANR	1701239	IdentifierDeclType	MyString		1701230	0					
ANR	1701240	Identifier	whynot		1701230	1					
ANR	1701241	ExpressionStatement	"success = RemoveChild ( child , whynot )"	620:1:14454:14492	1701230	2	True				
ANR	1701242	AssignmentExpression	"success = RemoveChild ( child , whynot )"		1701230	0		=			
ANR	1701243	Identifier	success		1701230	0					
ANR	1701244	CallExpression	"RemoveChild ( child , whynot )"		1701230	1					
ANR	1701245	Callee	RemoveChild		1701230	0					
ANR	1701246	Identifier	RemoveChild		1701230	0					
ANR	1701247	ArgumentList	child		1701230	1					
ANR	1701248	Argument	child		1701230	0					
ANR	1701249	Identifier	child		1701230	0					
ANR	1701250	Argument	whynot		1701230	1					
ANR	1701251	Identifier	whynot		1701230	0					
ANR	1701252	IfStatement	if ( ! success )		1701230	3					
ANR	1701253	Condition	! success	621:5:14499:14506	1701230	0	True				
ANR	1701254	UnaryOperationExpression	! success		1701230	0					
ANR	1701255	UnaryOperator	!		1701230	0					
ANR	1701256	Identifier	success		1701230	1					
ANR	1701257	CompoundStatement		5:16:91:91	1701230	1					
ANR	1701258	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""ERROR: RemoveChild( %s ) failed for node %s: %s\\n"" , child ? child -> GetJobName ( ) : ""(null)"" , this -> GetJobName ( ) , whynot . Value ( ) )"	622:2:14514:14721	1701230	0	True				
ANR	1701259	CallExpression	"debug_printf ( DEBUG_QUIET , ""ERROR: RemoveChild( %s ) failed for node %s: %s\\n"" , child ? child -> GetJobName ( ) : ""(null)"" , this -> GetJobName ( ) , whynot . Value ( ) )"		1701230	0					
ANR	1701260	Callee	debug_printf		1701230	0					
ANR	1701261	Identifier	debug_printf		1701230	0					
ANR	1701262	ArgumentList	DEBUG_QUIET		1701230	1					
ANR	1701263	Argument	DEBUG_QUIET		1701230	0					
ANR	1701264	Identifier	DEBUG_QUIET		1701230	0					
ANR	1701265	Argument	"""ERROR: RemoveChild( %s ) failed for node %s: %s\\n"""		1701230	1					
ANR	1701266	PrimaryExpression	"""ERROR: RemoveChild( %s ) failed for node %s: %s\\n"""		1701230	0					
ANR	1701267	Argument	"child ? child -> GetJobName ( ) : ""(null)"""		1701230	2					
ANR	1701268	ConditionalExpression	"child ? child -> GetJobName ( ) : ""(null)"""		1701230	0					
ANR	1701269	Condition	child		1701230	0					
ANR	1701270	Identifier	child		1701230	0					
ANR	1701271	CallExpression	child -> GetJobName ( )		1701230	1					
ANR	1701272	Callee	child -> GetJobName		1701230	0					
ANR	1701273	PtrMemberAccess	child -> GetJobName		1701230	0					
ANR	1701274	Identifier	child		1701230	0					
ANR	1701275	Identifier	GetJobName		1701230	1					
ANR	1701276	ArgumentList			1701230	1					
ANR	1701277	PrimaryExpression	"""(null)"""		1701230	2					
ANR	1701278	Argument	this -> GetJobName ( )		1701230	3					
ANR	1701279	CallExpression	this -> GetJobName ( )		1701230	0					
ANR	1701280	Callee	this -> GetJobName		1701230	0					
ANR	1701281	PtrMemberAccess	this -> GetJobName		1701230	0					
ANR	1701282	Identifier	this		1701230	0					
ANR	1701283	Identifier	GetJobName		1701230	1					
ANR	1701284	ArgumentList			1701230	1					
ANR	1701285	Argument	whynot . Value ( )		1701230	4					
ANR	1701286	CallExpression	whynot . Value ( )		1701230	0					
ANR	1701287	Callee	whynot . Value		1701230	0					
ANR	1701288	MemberAccess	whynot . Value		1701230	0					
ANR	1701289	Identifier	whynot		1701230	0					
ANR	1701290	Identifier	Value		1701230	1					
ANR	1701291	ArgumentList			1701230	1					
ANR	1701292	ReturnStatement	return success ;	627:1:14727:14741	1701230	4	True				
ANR	1701293	Identifier	success		1701230	0					
ANR	1701294	ReturnType	bool		1701230	1					
ANR	1701295	Identifier	Job :: RemoveChild		1701230	2					
ANR	1701296	ParameterList	Job * child		1701230	3					
ANR	1701297	Parameter	Job * child	616:18:14405:14414	1701230	0	True				
ANR	1701298	ParameterType	Job *		1701230	0					
ANR	1701299	Identifier	child		1701230	1					
ANR	1701300	CFGEntryNode	ENTRY		1701230		True				
ANR	1701301	CFGExitNode	EXIT		1701230		True				
ANR	1701302	Symbol	* this		1701230						
ANR	1701303	Symbol	RemoveChild		1701230						
ANR	1701304	Symbol	* child		1701230						
ANR	1701305	Symbol	child -> GetJobName		1701230						
ANR	1701306	Symbol	success		1701230						
ANR	1701307	Symbol	whynot . Value		1701230						
ANR	1701308	Symbol	this		1701230						
ANR	1701309	Symbol	whynot		1701230						
ANR	1701310	Symbol	this -> GetJobName		1701230						
ANR	1701311	Symbol	child		1701230						
ANR	1701312	Symbol	DEBUG_QUIET		1701230						
ANR	1701313	Function	Job :: RemoveChild	631:0:14747:14933							
ANR	1701314	FunctionDef	"Job :: RemoveChild (Job * child , MyString & whynot)"		1701313	0					
ANR	1701315	CompoundStatement		633:0:14801:14933	1701313	0					
ANR	1701316	IfStatement	if ( ! child )		1701313	0					
ANR	1701317	Condition	! child	634:5:14808:14813	1701313	0	True				
ANR	1701318	UnaryOperationExpression	! child		1701313	0					
ANR	1701319	UnaryOperator	!		1701313	0					
ANR	1701320	Identifier	child		1701313	1					
ANR	1701321	CompoundStatement		2:14:15:15	1701313	1					
ANR	1701322	ExpressionStatement	"whynot = ""child == NULL"""	635:2:14821:14845	1701313	0	True				
ANR	1701323	AssignmentExpression	"whynot = ""child == NULL"""		1701313	0		=			
ANR	1701324	Identifier	whynot		1701313	0					
ANR	1701325	PrimaryExpression	"""child == NULL"""		1701313	1					
ANR	1701326	ReturnStatement	return false ;	636:2:14849:14861	1701313	1	True				
ANR	1701327	Identifier	false		1701313	0					
ANR	1701328	ReturnStatement	"return RemoveDependency ( Q_CHILDREN , child -> GetJobID ( ) , whynot ) ;"	638:1:14867:14931	1701313	1	True				
ANR	1701329	CallExpression	"RemoveDependency ( Q_CHILDREN , child -> GetJobID ( ) , whynot )"		1701313	0					
ANR	1701330	Callee	RemoveDependency		1701313	0					
ANR	1701331	Identifier	RemoveDependency		1701313	0					
ANR	1701332	ArgumentList	Q_CHILDREN		1701313	1					
ANR	1701333	Argument	Q_CHILDREN		1701313	0					
ANR	1701334	Identifier	Q_CHILDREN		1701313	0					
ANR	1701335	Argument	child -> GetJobID ( )		1701313	1					
ANR	1701336	CallExpression	child -> GetJobID ( )		1701313	0					
ANR	1701337	Callee	child -> GetJobID		1701313	0					
ANR	1701338	PtrMemberAccess	child -> GetJobID		1701313	0					
ANR	1701339	Identifier	child		1701313	0					
ANR	1701340	Identifier	GetJobID		1701313	1					
ANR	1701341	ArgumentList			1701313	1					
ANR	1701342	Argument	whynot		1701313	2					
ANR	1701343	Identifier	whynot		1701313	0					
ANR	1701344	ReturnType	bool		1701313	1					
ANR	1701345	Identifier	Job :: RemoveChild		1701313	2					
ANR	1701346	ParameterList	"Job * child , MyString & whynot"		1701313	3					
ANR	1701347	Parameter	Job * child	632:18:14770:14779	1701313	0	True				
ANR	1701348	ParameterType	Job *		1701313	0					
ANR	1701349	Identifier	child		1701313	1					
ANR	1701350	Parameter	MyString & whynot	632:30:14782:14797	1701313	1	True				
ANR	1701351	ParameterType	MyString &		1701313	0					
ANR	1701352	Identifier	whynot		1701313	1					
ANR	1701353	CFGEntryNode	ENTRY		1701313		True				
ANR	1701354	CFGExitNode	EXIT		1701313		True				
ANR	1701355	Symbol	* child		1701313						
ANR	1701356	Symbol	false		1701313						
ANR	1701357	Symbol	whynot		1701313						
ANR	1701358	Symbol	RemoveDependency		1701313						
ANR	1701359	Symbol	child		1701313						
ANR	1701360	Symbol	Q_CHILDREN		1701313						
ANR	1701361	Symbol	child -> GetJobID		1701313						
ANR	1701362	Function	Job :: RemoveParent	642:0:14937:15127							
ANR	1701363	FunctionDef	"Job :: RemoveParent (Job * parent , MyString & whynot)"		1701362	0					
ANR	1701364	CompoundStatement		644:0:14993:15127	1701362	0					
ANR	1701365	IfStatement	if ( ! parent )		1701362	0					
ANR	1701366	Condition	! parent	645:5:15000:15006	1701362	0	True				
ANR	1701367	UnaryOperationExpression	! parent		1701362	0					
ANR	1701368	UnaryOperator	!		1701362	0					
ANR	1701369	Identifier	parent		1701362	1					
ANR	1701370	CompoundStatement		2:15:16:16	1701362	1					
ANR	1701371	ExpressionStatement	"whynot = ""parent == NULL"""	646:2:15014:15039	1701362	0	True				
ANR	1701372	AssignmentExpression	"whynot = ""parent == NULL"""		1701362	0		=			
ANR	1701373	Identifier	whynot		1701362	0					
ANR	1701374	PrimaryExpression	"""parent == NULL"""		1701362	1					
ANR	1701375	ReturnStatement	return false ;	647:2:15043:15055	1701362	1	True				
ANR	1701376	Identifier	false		1701362	0					
ANR	1701377	ReturnStatement	"return RemoveDependency ( Q_PARENTS , parent -> GetJobID ( ) , whynot ) ;"	649:1:15061:15125	1701362	1	True				
ANR	1701378	CallExpression	"RemoveDependency ( Q_PARENTS , parent -> GetJobID ( ) , whynot )"		1701362	0					
ANR	1701379	Callee	RemoveDependency		1701362	0					
ANR	1701380	Identifier	RemoveDependency		1701362	0					
ANR	1701381	ArgumentList	Q_PARENTS		1701362	1					
ANR	1701382	Argument	Q_PARENTS		1701362	0					
ANR	1701383	Identifier	Q_PARENTS		1701362	0					
ANR	1701384	Argument	parent -> GetJobID ( )		1701362	1					
ANR	1701385	CallExpression	parent -> GetJobID ( )		1701362	0					
ANR	1701386	Callee	parent -> GetJobID		1701362	0					
ANR	1701387	PtrMemberAccess	parent -> GetJobID		1701362	0					
ANR	1701388	Identifier	parent		1701362	0					
ANR	1701389	Identifier	GetJobID		1701362	1					
ANR	1701390	ArgumentList			1701362	1					
ANR	1701391	Argument	whynot		1701362	2					
ANR	1701392	Identifier	whynot		1701362	0					
ANR	1701393	ReturnType	bool		1701362	1					
ANR	1701394	Identifier	Job :: RemoveParent		1701362	2					
ANR	1701395	ParameterList	"Job * parent , MyString & whynot"		1701362	3					
ANR	1701396	Parameter	Job * parent	643:19:14961:14971	1701362	0	True				
ANR	1701397	ParameterType	Job *		1701362	0					
ANR	1701398	Identifier	parent		1701362	1					
ANR	1701399	Parameter	MyString & whynot	643:32:14974:14989	1701362	1	True				
ANR	1701400	ParameterType	MyString &		1701362	0					
ANR	1701401	Identifier	whynot		1701362	1					
ANR	1701402	CFGEntryNode	ENTRY		1701362		True				
ANR	1701403	CFGExitNode	EXIT		1701362		True				
ANR	1701404	Symbol	parent		1701362						
ANR	1701405	Symbol	* parent		1701362						
ANR	1701406	Symbol	Q_PARENTS		1701362						
ANR	1701407	Symbol	false		1701362						
ANR	1701408	Symbol	whynot		1701362						
ANR	1701409	Symbol	RemoveDependency		1701362						
ANR	1701410	Symbol	parent -> GetJobID		1701362						
ANR	1701411	Function	Job :: RemoveDependency	652:0:15130:15255							
ANR	1701412	FunctionDef	"Job :: RemoveDependency (queue_t queue , JobID_t job)"		1701411	0					
ANR	1701413	CompoundStatement		654:0:15187:15255	1701411	0					
ANR	1701414	IdentifierDeclStatement	MyString whynot ;	655:1:15190:15205	1701411	0	True				
ANR	1701415	IdentifierDecl	whynot		1701411	0					
ANR	1701416	IdentifierDeclType	MyString		1701411	0					
ANR	1701417	Identifier	whynot		1701411	1					
ANR	1701418	ReturnStatement	"return RemoveDependency ( queue , job , whynot ) ;"	656:1:15208:15253	1701411	1	True				
ANR	1701419	CallExpression	"RemoveDependency ( queue , job , whynot )"		1701411	0					
ANR	1701420	Callee	RemoveDependency		1701411	0					
ANR	1701421	Identifier	RemoveDependency		1701411	0					
ANR	1701422	ArgumentList	queue		1701411	1					
ANR	1701423	Argument	queue		1701411	0					
ANR	1701424	Identifier	queue		1701411	0					
ANR	1701425	Argument	job		1701411	1					
ANR	1701426	Identifier	job		1701411	0					
ANR	1701427	Argument	whynot		1701411	2					
ANR	1701428	Identifier	whynot		1701411	0					
ANR	1701429	ReturnType	bool		1701411	1					
ANR	1701430	Identifier	Job :: RemoveDependency		1701411	2					
ANR	1701431	ParameterList	"queue_t queue , JobID_t job"		1701411	3					
ANR	1701432	Parameter	queue_t queue	653:23:15158:15170	1701411	0	True				
ANR	1701433	ParameterType	queue_t		1701411	0					
ANR	1701434	Identifier	queue		1701411	1					
ANR	1701435	Parameter	JobID_t job	653:38:15173:15183	1701411	1	True				
ANR	1701436	ParameterType	JobID_t		1701411	0					
ANR	1701437	Identifier	job		1701411	1					
ANR	1701438	CFGEntryNode	ENTRY		1701411		True				
ANR	1701439	CFGExitNode	EXIT		1701411		True				
ANR	1701440	Symbol	whynot		1701411						
ANR	1701441	Symbol	RemoveDependency		1701411						
ANR	1701442	Symbol	job		1701411						
ANR	1701443	Symbol	queue		1701411						
ANR	1701444	Function	Job :: RemoveDependency	659:0:15258:15459							
ANR	1701445	FunctionDef	"Job :: RemoveDependency (queue_t queue , JobID_t job , MyString & whynot)"		1701444	0					
ANR	1701446	CompoundStatement		661:0:15333:15459	1701444	0					
ANR	1701447	IfStatement	if ( _queues [ queue ] . erase ( job ) == 0 )		1701444	0					
ANR	1701448	Condition	_queues [ queue ] . erase ( job ) == 0	662:5:15340:15369	1701444	0	True				
ANR	1701449	EqualityExpression	_queues [ queue ] . erase ( job ) == 0		1701444	0		==			
ANR	1701450	CallExpression	_queues [ queue ] . erase ( job )		1701444	0					
ANR	1701451	Callee	_queues [ queue ] . erase		1701444	0					
ANR	1701452	MemberAccess	_queues [ queue ] . erase		1701444	0					
ANR	1701453	ArrayIndexing	_queues [ queue ]		1701444	0					
ANR	1701454	Identifier	_queues		1701444	0					
ANR	1701455	Identifier	queue		1701444	1					
ANR	1701456	Identifier	erase		1701444	1					
ANR	1701457	ArgumentList	job		1701444	1					
ANR	1701458	Argument	job		1701444	0					
ANR	1701459	Identifier	job		1701444	0					
ANR	1701460	PrimaryExpression	0		1701444	1					
ANR	1701461	CompoundStatement		3:1:39:39	1701444	1					
ANR	1701462	ExpressionStatement	"whynot = ""no such dependency"""	664:2:15377:15406	1701444	0	True				
ANR	1701463	AssignmentExpression	"whynot = ""no such dependency"""		1701444	0		=			
ANR	1701464	Identifier	whynot		1701444	0					
ANR	1701465	PrimaryExpression	"""no such dependency"""		1701444	1					
ANR	1701466	ReturnStatement	return false ;	665:2:15410:15422	1701444	1	True				
ANR	1701467	Identifier	false		1701444	0					
ANR	1701468	ExpressionStatement	"whynot = ""n/a"""	668:1:15429:15443	1701444	1	True				
ANR	1701469	AssignmentExpression	"whynot = ""n/a"""		1701444	0		=			
ANR	1701470	Identifier	whynot		1701444	0					
ANR	1701471	PrimaryExpression	"""n/a"""		1701444	1					
ANR	1701472	ReturnStatement	return true ;	669:1:15446:15457	1701444	2	True				
ANR	1701473	Identifier	true		1701444	0					
ANR	1701474	ReturnType	bool		1701444	1					
ANR	1701475	Identifier	Job :: RemoveDependency		1701444	2					
ANR	1701476	ParameterList	"queue_t queue , JobID_t job , MyString & whynot"		1701444	3					
ANR	1701477	Parameter	queue_t queue	660:23:15286:15298	1701444	0	True				
ANR	1701478	ParameterType	queue_t		1701444	0					
ANR	1701479	Identifier	queue		1701444	1					
ANR	1701480	Parameter	JobID_t job	660:38:15301:15311	1701444	1	True				
ANR	1701481	ParameterType	JobID_t		1701444	0					
ANR	1701482	Identifier	job		1701444	1					
ANR	1701483	Parameter	MyString & whynot	660:51:15314:15329	1701444	2	True				
ANR	1701484	ParameterType	MyString &		1701444	0					
ANR	1701485	Identifier	whynot		1701444	1					
ANR	1701486	CFGEntryNode	ENTRY		1701444		True				
ANR	1701487	CFGExitNode	EXIT		1701444		True				
ANR	1701488	Symbol	* queue		1701444						
ANR	1701489	Symbol	_queues		1701444						
ANR	1701490	Symbol	* _queues		1701444						
ANR	1701491	Symbol	false		1701444						
ANR	1701492	Symbol	true		1701444						
ANR	1701493	Symbol	whynot		1701444						
ANR	1701494	Symbol	job		1701444						
ANR	1701495	Symbol	_queues [ queue ] . erase		1701444						
ANR	1701496	Symbol	queue		1701444						
ANR	1701497	Function	Job :: JobType	673:0:15463:15523							
ANR	1701498	FunctionDef	Job :: JobType ()		1701497	0					
ANR	1701499	CompoundStatement		675:0:15500:15523	1701497	0					
ANR	1701500	ReturnStatement	return _jobType ;	676:4:15506:15521	1701497	0	True				
ANR	1701501	Identifier	_jobType		1701497	0					
ANR	1701502	ReturnType	Job :: job_type_t		1701497	1					
ANR	1701503	Identifier	Job :: JobType		1701497	2					
ANR	1701504	ParameterList			1701497	3					
ANR	1701505	CFGEntryNode	ENTRY		1701497		True				
ANR	1701506	CFGExitNode	EXIT		1701497		True				
ANR	1701507	Symbol	_jobType		1701497						
ANR	1701508	Function	Job :: JobTypeString	680:0:15527:15606							
ANR	1701509	FunctionDef	Job :: JobTypeString ()		1701508	0					
ANR	1701510	CompoundStatement		682:0:15566:15606	1701508	0					
ANR	1701511	ReturnStatement	return _job_type_names [ _jobType ] ;	683:4:15572:15604	1701508	0	True				
ANR	1701512	ArrayIndexing	_job_type_names [ _jobType ]		1701508	0					
ANR	1701513	Identifier	_job_type_names		1701508	0					
ANR	1701514	Identifier	_jobType		1701508	1					
ANR	1701515	ReturnType	const char *		1701508	1					
ANR	1701516	Identifier	Job :: JobTypeString		1701508	2					
ANR	1701517	ParameterList			1701508	3					
ANR	1701518	CFGEntryNode	ENTRY		1701508		True				
ANR	1701519	CFGExitNode	EXIT		1701508		True				
ANR	1701520	Symbol	* _job_type_names		1701508						
ANR	1701521	Symbol	_jobType		1701508						
ANR	1701522	Symbol	_job_type_names		1701508						
ANR	1701523	Symbol	* _jobType		1701508						
ANR	1701524	Function	Job :: NumParents	695:0:15660:15725							
ANR	1701525	FunctionDef	Job :: NumParents ()		1701524	0					
ANR	1701526	CompoundStatement		697:0:15688:15725	1701524	0					
ANR	1701527	ReturnStatement	return _queues [ Q_PARENTS ] . size ( ) ;	698:1:15691:15723	1701524	0	True				
ANR	1701528	CallExpression	_queues [ Q_PARENTS ] . size ( )		1701524	0					
ANR	1701529	Callee	_queues [ Q_PARENTS ] . size		1701524	0					
ANR	1701530	MemberAccess	_queues [ Q_PARENTS ] . size		1701524	0					
ANR	1701531	ArrayIndexing	_queues [ Q_PARENTS ]		1701524	0					
ANR	1701532	Identifier	_queues		1701524	0					
ANR	1701533	Identifier	Q_PARENTS		1701524	1					
ANR	1701534	Identifier	size		1701524	1					
ANR	1701535	ArgumentList			1701524	1					
ANR	1701536	ReturnType	int		1701524	1					
ANR	1701537	Identifier	Job :: NumParents		1701524	2					
ANR	1701538	ParameterList			1701524	3					
ANR	1701539	CFGEntryNode	ENTRY		1701524		True				
ANR	1701540	CFGExitNode	EXIT		1701524		True				
ANR	1701541	Symbol	Q_PARENTS		1701524						
ANR	1701542	Symbol	_queues		1701524						
ANR	1701543	Symbol	* _queues		1701524						
ANR	1701544	Symbol	_queues [ Q_PARENTS ] . size		1701524						
ANR	1701545	Symbol	* Q_PARENTS		1701524						
ANR	1701546	Function	Job :: NumChildren	701:0:15728:15795							
ANR	1701547	FunctionDef	Job :: NumChildren ()		1701546	0					
ANR	1701548	CompoundStatement		703:0:15757:15795	1701546	0					
ANR	1701549	ReturnStatement	return _queues [ Q_CHILDREN ] . size ( ) ;	704:1:15760:15793	1701546	0	True				
ANR	1701550	CallExpression	_queues [ Q_CHILDREN ] . size ( )		1701546	0					
ANR	1701551	Callee	_queues [ Q_CHILDREN ] . size		1701546	0					
ANR	1701552	MemberAccess	_queues [ Q_CHILDREN ] . size		1701546	0					
ANR	1701553	ArrayIndexing	_queues [ Q_CHILDREN ]		1701546	0					
ANR	1701554	Identifier	_queues		1701546	0					
ANR	1701555	Identifier	Q_CHILDREN		1701546	1					
ANR	1701556	Identifier	size		1701546	1					
ANR	1701557	ArgumentList			1701546	1					
ANR	1701558	ReturnType	int		1701546	1					
ANR	1701559	Identifier	Job :: NumChildren		1701546	2					
ANR	1701560	ParameterList			1701546	3					
ANR	1701561	CFGEntryNode	ENTRY		1701546		True				
ANR	1701562	CFGExitNode	EXIT		1701546		True				
ANR	1701563	Symbol	_queues		1701546						
ANR	1701564	Symbol	_queues [ Q_CHILDREN ] . size		1701546						
ANR	1701565	Symbol	* _queues		1701546						
ANR	1701566	Symbol	* Q_CHILDREN		1701546						
ANR	1701567	Symbol	Q_CHILDREN		1701546						
ANR	1701568	Function	Job :: SetCategory	707:0:15798:16757							
ANR	1701569	FunctionDef	"Job :: SetCategory (const char * categoryName , ThrottleByCategory & catThrottles)"		1701568	0					
ANR	1701570	CompoundStatement		709:0:15882:16757	1701568	0					
ANR	1701571	IdentifierDeclStatement	MyString tmpName ( categoryName ) ;	710:1:15885:15917	1701568	0	True				
ANR	1701572	IdentifierDecl	tmpName ( categoryName )		1701568	0					
ANR	1701573	IdentifierDeclType	MyString		1701568	0					
ANR	1701574	Identifier	tmpName		1701568	1					
ANR	1701575	Identifier	categoryName		1701568	2					
ANR	1701576	IfStatement	if ( ( _throttleInfo != NULL ) && ( tmpName != * ( _throttleInfo -> _category ) ) )		1701568	1					
ANR	1701577	Condition	( _throttleInfo != NULL ) && ( tmpName != * ( _throttleInfo -> _category ) )	712:6:15926:15996	1701568	0	True				
ANR	1701578	AndExpression	( _throttleInfo != NULL ) && ( tmpName != * ( _throttleInfo -> _category ) )		1701568	0		&&			
ANR	1701579	EqualityExpression	_throttleInfo != NULL		1701568	0		!=			
ANR	1701580	Identifier	_throttleInfo		1701568	0					
ANR	1701581	Identifier	NULL		1701568	1					
ANR	1701582	EqualityExpression	tmpName != * ( _throttleInfo -> _category )		1701568	1		!=			
ANR	1701583	Identifier	tmpName		1701568	0					
ANR	1701584	UnaryOperationExpression	* ( _throttleInfo -> _category )		1701568	1					
ANR	1701585	UnaryOperator	*		1701568	0					
ANR	1701586	PtrMemberAccess	_throttleInfo -> _category		1701568	1					
ANR	1701587	Identifier	_throttleInfo		1701568	0					
ANR	1701588	Identifier	_category		1701568	1					
ANR	1701589	CompoundStatement		5:47:117:117	1701568	1					
ANR	1701590	Statement	debug_printf	714:2:16004:16015	1701568	0	True				
ANR	1701591	Statement	(	714:14:16016:16016	1701568	1	True				
ANR	1701592	Statement	DEBUG_NORMAL	714:16:16018:16029	1701568	2	True				
ANR	1701593	Statement	","	714:28:16030:16030	1701568	3	True				
ANR	1701594	Statement	"""Warning: new category %s for node %s """	714:30:16032:16070	1701568	4	True				
ANR	1701595	Statement	"""overrides old value %s\\n"""	715:5:16077:16102	1701568	5	True				
ANR	1701596	Statement	","	715:31:16103:16103	1701568	6	True				
ANR	1701597	Statement	categoryName	715:33:16105:16116	1701568	7	True				
ANR	1701598	Statement	","	715:45:16117:16117	1701568	8	True				
ANR	1701599	Statement	GetJobName	715:47:16119:16128	1701568	9	True				
ANR	1701600	Statement	(	715:57:16129:16129	1701568	10	True				
ANR	1701601	Statement	)	715:58:16130:16130	1701568	11	True				
ANR	1701602	Statement	","	715:59:16131:16131	1701568	12	True				
ANR	1701603	Statement	_throttleInfo	716:5:16138:16150	1701568	13	True				
ANR	1701604	Statement	->	716:18:16151:16152	1701568	14	True				
ANR	1701605	Statement	_category	716:20:16153:16161	1701568	15	True				
ANR	1701606	Statement	->	716:29:16162:16163	1701568	16	True				
ANR	1701607	Statement	Value	716:31:16164:16168	1701568	17	True				
ANR	1701608	Statement	(	716:36:16169:16169	1701568	18	True				
ANR	1701609	Statement	)	716:37:16170:16170	1701568	19	True				
ANR	1701610	Statement	)	716:39:16172:16172	1701568	20	True				
ANR	1701611	ExpressionStatement		716:40:16173:16173	1701568	21	True				
ANR	1701612	ExpressionStatement	check_warning_strictness ( DAG_STRICT_3 )	717:2:16177:16217	1701568	22	True				
ANR	1701613	CallExpression	check_warning_strictness ( DAG_STRICT_3 )		1701568	0					
ANR	1701614	Callee	check_warning_strictness		1701568	0					
ANR	1701615	Identifier	check_warning_strictness		1701568	0					
ANR	1701616	ArgumentList	DAG_STRICT_3		1701568	1					
ANR	1701617	Argument	DAG_STRICT_3		1701568	0					
ANR	1701618	Identifier	DAG_STRICT_3		1701568	0					
ANR	1701619	IdentifierDeclStatement	ThrottleByCategory :: ThrottleInfo * oldInfo = _throttleInfo ;	722:1:16342:16399	1701568	2	True				
ANR	1701620	IdentifierDecl	* oldInfo = _throttleInfo		1701568	0					
ANR	1701621	IdentifierDeclType	ThrottleByCategory :: ThrottleInfo *		1701568	0					
ANR	1701622	Identifier	oldInfo		1701568	1					
ANR	1701623	AssignmentExpression	* oldInfo = _throttleInfo		1701568	2		=			
ANR	1701624	Identifier	_throttleInfo		1701568	0					
ANR	1701625	Identifier	_throttleInfo		1701568	1					
ANR	1701626	IdentifierDeclStatement	ThrottleByCategory :: ThrottleInfo * throttleInfo = catThrottles . GetThrottleInfo ( & tmpName ) ;	724:1:16403:16496	1701568	3	True				
ANR	1701627	IdentifierDecl	* throttleInfo = catThrottles . GetThrottleInfo ( & tmpName )		1701568	0					
ANR	1701628	IdentifierDeclType	ThrottleByCategory :: ThrottleInfo *		1701568	0					
ANR	1701629	Identifier	throttleInfo		1701568	1					
ANR	1701630	AssignmentExpression	* throttleInfo = catThrottles . GetThrottleInfo ( & tmpName )		1701568	2		=			
ANR	1701631	Identifier	throttleInfo		1701568	0					
ANR	1701632	CallExpression	catThrottles . GetThrottleInfo ( & tmpName )		1701568	1					
ANR	1701633	Callee	catThrottles . GetThrottleInfo		1701568	0					
ANR	1701634	MemberAccess	catThrottles . GetThrottleInfo		1701568	0					
ANR	1701635	Identifier	catThrottles		1701568	0					
ANR	1701636	Identifier	GetThrottleInfo		1701568	1					
ANR	1701637	ArgumentList	& tmpName		1701568	1					
ANR	1701638	Argument	& tmpName		1701568	0					
ANR	1701639	UnaryOperationExpression	& tmpName		1701568	0					
ANR	1701640	UnaryOperator	&		1701568	0					
ANR	1701641	Identifier	tmpName		1701568	1					
ANR	1701642	IfStatement	if ( throttleInfo != NULL )		1701568	4					
ANR	1701643	Condition	throttleInfo != NULL	726:6:16504:16523	1701568	0	True				
ANR	1701644	EqualityExpression	throttleInfo != NULL		1701568	0		!=			
ANR	1701645	Identifier	throttleInfo		1701568	0					
ANR	1701646	Identifier	NULL		1701568	1					
ANR	1701647	CompoundStatement		18:29:644:644	1701568	1					
ANR	1701648	ExpressionStatement	_throttleInfo = throttleInfo	727:2:16531:16559	1701568	0	True				
ANR	1701649	AssignmentExpression	_throttleInfo = throttleInfo		1701568	0		=			
ANR	1701650	Identifier	_throttleInfo		1701568	0					
ANR	1701651	Identifier	throttleInfo		1701568	1					
ANR	1701652	ElseStatement	else		1701568	0					
ANR	1701653	CompoundStatement		20:8:686:686	1701568	0					
ANR	1701654	ExpressionStatement	_throttleInfo = catThrottles . AddCategory ( & tmpName )	729:2:16573:16625	1701568	0	True				
ANR	1701655	AssignmentExpression	_throttleInfo = catThrottles . AddCategory ( & tmpName )		1701568	0		=			
ANR	1701656	Identifier	_throttleInfo		1701568	0					
ANR	1701657	CallExpression	catThrottles . AddCategory ( & tmpName )		1701568	1					
ANR	1701658	Callee	catThrottles . AddCategory		1701568	0					
ANR	1701659	MemberAccess	catThrottles . AddCategory		1701568	0					
ANR	1701660	Identifier	catThrottles		1701568	0					
ANR	1701661	Identifier	AddCategory		1701568	1					
ANR	1701662	ArgumentList	& tmpName		1701568	1					
ANR	1701663	Argument	& tmpName		1701568	0					
ANR	1701664	UnaryOperationExpression	& tmpName		1701568	0					
ANR	1701665	UnaryOperator	&		1701568	0					
ANR	1701666	Identifier	tmpName		1701568	1					
ANR	1701667	IfStatement	if ( oldInfo != _throttleInfo )		1701568	5					
ANR	1701668	Condition	oldInfo != _throttleInfo	732:6:16637:16660	1701568	0	True				
ANR	1701669	EqualityExpression	oldInfo != _throttleInfo		1701568	0		!=			
ANR	1701670	Identifier	oldInfo		1701568	0					
ANR	1701671	Identifier	_throttleInfo		1701568	1					
ANR	1701672	CompoundStatement		24:33:781:781	1701568	1					
ANR	1701673	IfStatement	if ( oldInfo != NULL )		1701568	0					
ANR	1701674	Condition	oldInfo != NULL	733:7:16673:16687	1701568	0	True				
ANR	1701675	EqualityExpression	oldInfo != NULL		1701568	0		!=			
ANR	1701676	Identifier	oldInfo		1701568	0					
ANR	1701677	Identifier	NULL		1701568	1					
ANR	1701678	CompoundStatement		25:25:808:808	1701568	1					
ANR	1701679	ExpressionStatement	oldInfo -> _totalJobs --	734:3:16696:16717	1701568	0	True				
ANR	1701680	PostIncDecOperationExpression	oldInfo -> _totalJobs --		1701568	0					
ANR	1701681	PtrMemberAccess	oldInfo -> _totalJobs		1701568	0					
ANR	1701682	Identifier	oldInfo		1701568	0					
ANR	1701683	Identifier	_totalJobs		1701568	1					
ANR	1701684	IncDec	--		1701568	1					
ANR	1701685	ExpressionStatement	_throttleInfo -> _totalJobs ++	736:2:16725:16752	1701568	1	True				
ANR	1701686	PostIncDecOperationExpression	_throttleInfo -> _totalJobs ++		1701568	0					
ANR	1701687	PtrMemberAccess	_throttleInfo -> _totalJobs		1701568	0					
ANR	1701688	Identifier	_throttleInfo		1701568	0					
ANR	1701689	Identifier	_totalJobs		1701568	1					
ANR	1701690	IncDec	++		1701568	1					
ANR	1701691	ReturnType	void		1701568	1					
ANR	1701692	Identifier	Job :: SetCategory		1701568	2					
ANR	1701693	ParameterList	"const char * categoryName , ThrottleByCategory & catThrottles"		1701568	3					
ANR	1701694	Parameter	const char * categoryName	708:18:15821:15844	1701568	0	True				
ANR	1701695	ParameterType	const char *		1701568	0					
ANR	1701696	Identifier	categoryName		1701568	1					
ANR	1701697	Parameter	ThrottleByCategory & catThrottles	708:44:15847:15878	1701568	1	True				
ANR	1701698	ParameterType	ThrottleByCategory &		1701568	0					
ANR	1701699	Identifier	catThrottles		1701568	1					
ANR	1701700	CFGEntryNode	ENTRY		1701568		True				
ANR	1701701	CFGExitNode	EXIT		1701568		True				
ANR	1701702	Symbol	tmpName		1701568						
ANR	1701703	Symbol	NULL		1701568						
ANR	1701704	Symbol	* ( _throttleInfo -> _category )		1701568						
ANR	1701705	Symbol	catThrottles		1701568						
ANR	1701706	Symbol	* _throttleInfo -> _category		1701568						
ANR	1701707	Symbol	categoryName		1701568						
ANR	1701708	Symbol	_throttleInfo -> _category		1701568						
ANR	1701709	Symbol	oldInfo -> _totalJobs		1701568						
ANR	1701710	Symbol	DAG_STRICT_3		1701568						
ANR	1701711	Symbol	_throttleInfo -> _totalJobs		1701568						
ANR	1701712	Symbol	oldInfo		1701568						
ANR	1701713	Symbol	_throttleInfo		1701568						
ANR	1701714	Symbol	& tmpName		1701568						
ANR	1701715	Symbol	throttleInfo		1701568						
ANR	1701716	Symbol	* * _throttleInfo		1701568						
ANR	1701717	Symbol	* _throttleInfo		1701568						
ANR	1701718	Symbol	catThrottles . GetThrottleInfo		1701568						
ANR	1701719	Symbol	catThrottles . AddCategory		1701568						
ANR	1701720	Symbol	* oldInfo		1701568						
ANR	1701721	Function	Job :: PrefixName	740:0:16760:16911							
ANR	1701722	FunctionDef	Job :: PrefixName (const MyString & prefix)		1701721	0					
ANR	1701723	CompoundStatement		742:0:16805:16911	1701721	0					
ANR	1701724	IdentifierDeclStatement	MyString tmp = _jobName ;	743:1:16808:16831	1701721	0	True				
ANR	1701725	IdentifierDecl	tmp = _jobName		1701721	0					
ANR	1701726	IdentifierDeclType	MyString		1701721	0					
ANR	1701727	Identifier	tmp		1701721	1					
ANR	1701728	AssignmentExpression	tmp = _jobName		1701721	2		=			
ANR	1701729	Identifier	_jobName		1701721	0					
ANR	1701730	Identifier	_jobName		1701721	1					
ANR	1701731	ExpressionStatement	tmp = prefix + tmp	745:1:16835:16853	1701721	1	True				
ANR	1701732	AssignmentExpression	tmp = prefix + tmp		1701721	0		=			
ANR	1701733	Identifier	tmp		1701721	0					
ANR	1701734	AdditiveExpression	prefix + tmp		1701721	1		+			
ANR	1701735	Identifier	prefix		1701721	0					
ANR	1701736	Identifier	tmp		1701721	1					
ANR	1701737	Statement	delete	747:1:16857:16862	1701721	2	True				
ANR	1701738	Statement	[	747:7:16863:16863	1701721	3	True				
ANR	1701739	Statement	]	747:8:16864:16864	1701721	4	True				
ANR	1701740	ExpressionStatement	_jobName	747:10:16866:16874	1701721	5	True				
ANR	1701741	Identifier	_jobName		1701721	0					
ANR	1701742	ExpressionStatement	_jobName = strnewp ( tmp . Value ( ) )	749:1:16878:16909	1701721	6	True				
ANR	1701743	AssignmentExpression	_jobName = strnewp ( tmp . Value ( ) )		1701721	0		=			
ANR	1701744	Identifier	_jobName		1701721	0					
ANR	1701745	CallExpression	strnewp ( tmp . Value ( ) )		1701721	1					
ANR	1701746	Callee	strnewp		1701721	0					
ANR	1701747	Identifier	strnewp		1701721	0					
ANR	1701748	ArgumentList	tmp . Value ( )		1701721	1					
ANR	1701749	Argument	tmp . Value ( )		1701721	0					
ANR	1701750	CallExpression	tmp . Value ( )		1701721	0					
ANR	1701751	Callee	tmp . Value		1701721	0					
ANR	1701752	MemberAccess	tmp . Value		1701721	0					
ANR	1701753	Identifier	tmp		1701721	0					
ANR	1701754	Identifier	Value		1701721	1					
ANR	1701755	ArgumentList			1701721	1					
ANR	1701756	ReturnType	void		1701721	1					
ANR	1701757	Identifier	Job :: PrefixName		1701721	2					
ANR	1701758	ParameterList	const MyString & prefix		1701721	3					
ANR	1701759	Parameter	const MyString & prefix	741:16:16781:16802	1701721	0	True				
ANR	1701760	ParameterType	const MyString &		1701721	0					
ANR	1701761	Identifier	prefix		1701721	1					
ANR	1701762	CFGEntryNode	ENTRY		1701721		True				
ANR	1701763	CFGExitNode	EXIT		1701721		True				
ANR	1701764	Symbol	_jobName		1701721						
ANR	1701765	Symbol	prefix		1701721						
ANR	1701766	Symbol	tmp		1701721						
ANR	1701767	Symbol	strnewp		1701721						
ANR	1701768	Symbol	tmp . Value		1701721						
ANR	1701769	Function	Job :: ResolveVarsInterpolations	755:0:17068:17426							
ANR	1701770	FunctionDef	Job :: ResolveVarsInterpolations ()		1701769	0					
ANR	1701771	CompoundStatement		757:0:17110:17426	1701769	0					
ANR	1701772	IdentifierDeclStatement	MyString * val ;	758:1:17113:17126	1701769	0	True				
ANR	1701773	IdentifierDecl	* val		1701769	0					
ANR	1701774	IdentifierDeclType	MyString *		1701769	0					
ANR	1701775	Identifier	val		1701769	1					
ANR	1701776	ExpressionStatement	varValsFromDag -> Rewind ( )	760:1:17130:17154	1701769	1	True				
ANR	1701777	CallExpression	varValsFromDag -> Rewind ( )		1701769	0					
ANR	1701778	Callee	varValsFromDag -> Rewind		1701769	0					
ANR	1701779	PtrMemberAccess	varValsFromDag -> Rewind		1701769	0					
ANR	1701780	Identifier	varValsFromDag		1701769	0					
ANR	1701781	Identifier	Rewind		1701769	1					
ANR	1701782	ArgumentList			1701769	1					
ANR	1701783	WhileStatement	while ( ( val = varValsFromDag -> Next ( ) ) != NULL )		1701769	2					
ANR	1701784	Condition	( val = varValsFromDag -> Next ( ) ) != NULL	761:8:17164:17201	1701769	0	True				
ANR	1701785	EqualityExpression	( val = varValsFromDag -> Next ( ) ) != NULL		1701769	0		!=			
ANR	1701786	AssignmentExpression	val = varValsFromDag -> Next ( )		1701769	0		=			
ANR	1701787	Identifier	val		1701769	0					
ANR	1701788	CallExpression	varValsFromDag -> Next ( )		1701769	1					
ANR	1701789	Callee	varValsFromDag -> Next		1701769	0					
ANR	1701790	PtrMemberAccess	varValsFromDag -> Next		1701769	0					
ANR	1701791	Identifier	varValsFromDag		1701769	0					
ANR	1701792	Identifier	Next		1701769	1					
ANR	1701793	ArgumentList			1701769	1					
ANR	1701794	Identifier	NULL		1701769	1					
ANR	1701795	CompoundStatement		5:49:94:94	1701769	1					
ANR	1701796	ExpressionStatement	"val -> replaceString ( ""$(JOB)"" , GetJobName ( ) )"	765:2:17379:17421	1701769	0	True				
ANR	1701797	CallExpression	"val -> replaceString ( ""$(JOB)"" , GetJobName ( ) )"		1701769	0					
ANR	1701798	Callee	val -> replaceString		1701769	0					
ANR	1701799	PtrMemberAccess	val -> replaceString		1701769	0					
ANR	1701800	Identifier	val		1701769	0					
ANR	1701801	Identifier	replaceString		1701769	1					
ANR	1701802	ArgumentList	"""$(JOB)"""		1701769	1					
ANR	1701803	Argument	"""$(JOB)"""		1701769	0					
ANR	1701804	PrimaryExpression	"""$(JOB)"""		1701769	0					
ANR	1701805	Argument	GetJobName ( )		1701769	1					
ANR	1701806	CallExpression	GetJobName ( )		1701769	0					
ANR	1701807	Callee	GetJobName		1701769	0					
ANR	1701808	Identifier	GetJobName		1701769	0					
ANR	1701809	ArgumentList			1701769	1					
ANR	1701810	ReturnType	void		1701769	1					
ANR	1701811	Identifier	Job :: ResolveVarsInterpolations		1701769	2					
ANR	1701812	ParameterList			1701769	3					
ANR	1701813	CFGEntryNode	ENTRY		1701769		True				
ANR	1701814	CFGExitNode	EXIT		1701769		True				
ANR	1701815	Symbol	val		1701769						
ANR	1701816	Symbol	varValsFromDag		1701769						
ANR	1701817	Symbol	NULL		1701769						
ANR	1701818	Symbol	GetJobName		1701769						
ANR	1701819	Symbol	varValsFromDag -> Next		1701769						
ANR	1701820	Symbol	* varValsFromDag		1701769						
ANR	1701821	Function	Job :: SetDagFile	770:0:17507:17601							
ANR	1701822	FunctionDef	Job :: SetDagFile (const char * dagFile)		1701821	0					
ANR	1701823	CompoundStatement		772:0:17549:17601	1701821	0					
ANR	1701824	Statement	delete	773:1:17552:17557	1701821	0	True				
ANR	1701825	ExpressionStatement	_dagFile	773:8:17559:17567	1701821	1	True				
ANR	1701826	Identifier	_dagFile		1701821	0					
ANR	1701827	ExpressionStatement	_dagFile = strnewp ( dagFile )	774:1:17570:17599	1701821	2	True				
ANR	1701828	AssignmentExpression	_dagFile = strnewp ( dagFile )		1701821	0		=			
ANR	1701829	Identifier	_dagFile		1701821	0					
ANR	1701830	CallExpression	strnewp ( dagFile )		1701821	1					
ANR	1701831	Callee	strnewp		1701821	0					
ANR	1701832	Identifier	strnewp		1701821	0					
ANR	1701833	ArgumentList	dagFile		1701821	1					
ANR	1701834	Argument	dagFile		1701821	0					
ANR	1701835	Identifier	dagFile		1701821	0					
ANR	1701836	ReturnType	void		1701821	1					
ANR	1701837	Identifier	Job :: SetDagFile		1701821	2					
ANR	1701838	ParameterList	const char * dagFile		1701821	3					
ANR	1701839	Parameter	const char * dagFile	771:16:17528:17546	1701821	0	True				
ANR	1701840	ParameterType	const char *		1701821	0					
ANR	1701841	Identifier	dagFile		1701821	1					
ANR	1701842	CFGEntryNode	ENTRY		1701821		True				
ANR	1701843	CFGExitNode	EXIT		1701821		True				
ANR	1701844	Symbol	dagFile		1701821						
ANR	1701845	Symbol	_dagFile		1701821						
ANR	1701846	Symbol	strnewp		1701821						
ANR	1701847	Function	Job :: MonitorLogFile	778:0:17682:20301							
ANR	1701848	FunctionDef	"Job :: MonitorLogFile (ReadMultipleUserLogs & condorLogReader , ReadMultipleUserLogs & storkLogReader , bool nfsIsError , bool recovery , const char * defaultNodeLog)"		1701847	0					
ANR	1701849	CompoundStatement		782:0:17852:20301	1701847	0					
ANR	1701850	ExpressionStatement	"debug_printf ( DEBUG_DEBUG_2 , ""Attempting to monitor log file for node %s\\n"" , GetJobName ( ) )"	783:1:17855:17954	1701847	0	True				
ANR	1701851	CallExpression	"debug_printf ( DEBUG_DEBUG_2 , ""Attempting to monitor log file for node %s\\n"" , GetJobName ( ) )"		1701847	0					
ANR	1701852	Callee	debug_printf		1701847	0					
ANR	1701853	Identifier	debug_printf		1701847	0					
ANR	1701854	ArgumentList	DEBUG_DEBUG_2		1701847	1					
ANR	1701855	Argument	DEBUG_DEBUG_2		1701847	0					
ANR	1701856	Identifier	DEBUG_DEBUG_2		1701847	0					
ANR	1701857	Argument	"""Attempting to monitor log file for node %s\\n"""		1701847	1					
ANR	1701858	PrimaryExpression	"""Attempting to monitor log file for node %s\\n"""		1701847	0					
ANR	1701859	Argument	GetJobName ( )		1701847	2					
ANR	1701860	CallExpression	GetJobName ( )		1701847	0					
ANR	1701861	Callee	GetJobName		1701847	0					
ANR	1701862	Identifier	GetJobName		1701847	0					
ANR	1701863	ArgumentList			1701847	1					
ANR	1701864	IfStatement	if ( _logIsMonitored )		1701847	1					
ANR	1701865	Condition	_logIsMonitored	787:6:17963:17977	1701847	0	True				
ANR	1701866	Identifier	_logIsMonitored		1701847	0					
ANR	1701867	CompoundStatement		6:24:128:128	1701847	1					
ANR	1701868	Statement	debug_printf	788:2:17985:17996	1701847	0	True				
ANR	1701869	Statement	(	788:14:17997:17997	1701847	1	True				
ANR	1701870	Statement	DEBUG_DEBUG_1	788:16:17999:18011	1701847	2	True				
ANR	1701871	Statement	","	788:29:18012:18012	1701847	3	True				
ANR	1701872	Statement	"""Warning: log file for node """	788:31:18014:18042	1701847	4	True				
ANR	1701873	Statement	"""%s is already monitored\\n"""	789:5:18049:18075	1701847	5	True				
ANR	1701874	Statement	","	789:32:18076:18076	1701847	6	True				
ANR	1701875	Statement	GetJobName	789:34:18078:18087	1701847	7	True				
ANR	1701876	Statement	(	789:44:18088:18088	1701847	8	True				
ANR	1701877	Statement	)	789:45:18089:18089	1701847	9	True				
ANR	1701878	Statement	)	789:47:18091:18091	1701847	10	True				
ANR	1701879	ExpressionStatement		789:48:18092:18092	1701847	11	True				
ANR	1701880	ReturnStatement	return true ;	790:2:18096:18107	1701847	12	True				
ANR	1701881	Identifier	true		1701847	0					
ANR	1701882	IdentifierDeclStatement	ReadMultipleUserLogs & logReader = ( _jobType == TYPE_CONDOR ) ? condorLogReader : storkLogReader ;	793:1:18114:18212	1701847	2	True				
ANR	1701883	IdentifierDecl	& logReader = ( _jobType == TYPE_CONDOR ) ? condorLogReader : storkLogReader		1701847	0					
ANR	1701884	IdentifierDeclType	ReadMultipleUserLogs &		1701847	0					
ANR	1701885	Identifier	logReader		1701847	1					
ANR	1701886	AssignmentExpression	& logReader = ( _jobType == TYPE_CONDOR ) ? condorLogReader : storkLogReader		1701847	2		=			
ANR	1701887	Identifier	logReader		1701847	0					
ANR	1701888	ConditionalExpression	( _jobType == TYPE_CONDOR ) ? condorLogReader : storkLogReader		1701847	1					
ANR	1701889	Condition	_jobType == TYPE_CONDOR		1701847	0					
ANR	1701890	EqualityExpression	_jobType == TYPE_CONDOR		1701847	0		==			
ANR	1701891	Identifier	_jobType		1701847	0					
ANR	1701892	Identifier	TYPE_CONDOR		1701847	1					
ANR	1701893	Identifier	condorLogReader		1701847	1					
ANR	1701894	Identifier	storkLogReader		1701847	2					
ANR	1701895	IdentifierDeclStatement	MyString logFileStr ;	796:4:18219:18238	1701847	3	True				
ANR	1701896	IdentifierDecl	logFileStr		1701847	0					
ANR	1701897	IdentifierDeclType	MyString		1701847	0					
ANR	1701898	Identifier	logFileStr		1701847	1					
ANR	1701899	IfStatement	if ( _jobType == TYPE_CONDOR )		1701847	4					
ANR	1701900	Condition	_jobType == TYPE_CONDOR	797:6:18246:18268	1701847	0	True				
ANR	1701901	EqualityExpression	_jobType == TYPE_CONDOR		1701847	0		==			
ANR	1701902	Identifier	_jobType		1701847	0					
ANR	1701903	Identifier	TYPE_CONDOR		1701847	1					
ANR	1701904	CompoundStatement		16:32:419:419	1701847	1					
ANR	1701905	ExpressionStatement	"logFileStr = MultiLogFiles :: loadLogFileNameFromSubFile ( _cmdFile , _directory , _logFileIsXml )"	798:5:18279:18377	1701847	0	True				
ANR	1701906	AssignmentExpression	"logFileStr = MultiLogFiles :: loadLogFileNameFromSubFile ( _cmdFile , _directory , _logFileIsXml )"		1701847	0		=			
ANR	1701907	Identifier	logFileStr		1701847	0					
ANR	1701908	CallExpression	"MultiLogFiles :: loadLogFileNameFromSubFile ( _cmdFile , _directory , _logFileIsXml )"		1701847	1					
ANR	1701909	Callee	MultiLogFiles :: loadLogFileNameFromSubFile		1701847	0					
ANR	1701910	Identifier	MultiLogFiles :: loadLogFileNameFromSubFile		1701847	0					
ANR	1701911	ArgumentList	_cmdFile		1701847	1					
ANR	1701912	Argument	_cmdFile		1701847	0					
ANR	1701913	Identifier	_cmdFile		1701847	0					
ANR	1701914	Argument	_directory		1701847	1					
ANR	1701915	Identifier	_directory		1701847	0					
ANR	1701916	Argument	_logFileIsXml		1701847	2					
ANR	1701917	Identifier	_logFileIsXml		1701847	0					
ANR	1701918	ElseStatement	else		1701847	0					
ANR	1701919	CompoundStatement		21:2:561:668	1701847	0					
ANR	1701920	IdentifierDeclStatement	StringList logFiles ;	801:2:18391:18410	1701847	0	True				
ANR	1701921	IdentifierDecl	logFiles		1701847	0					
ANR	1701922	IdentifierDeclType	StringList		1701847	0					
ANR	1701923	Identifier	logFiles		1701847	1					
ANR	1701924	IdentifierDeclStatement	"MyString tmpResult = MultiLogFiles :: loadLogFileNamesFromStorkSubFile ( _cmdFile , _directory , logFiles ) ;"	802:2:18414:18521	1701847	1	True				
ANR	1701925	IdentifierDecl	"tmpResult = MultiLogFiles :: loadLogFileNamesFromStorkSubFile ( _cmdFile , _directory , logFiles )"		1701847	0					
ANR	1701926	IdentifierDeclType	MyString		1701847	0					
ANR	1701927	Identifier	tmpResult		1701847	1					
ANR	1701928	AssignmentExpression	"tmpResult = MultiLogFiles :: loadLogFileNamesFromStorkSubFile ( _cmdFile , _directory , logFiles )"		1701847	2		=			
ANR	1701929	Identifier	tmpResult		1701847	0					
ANR	1701930	CallExpression	"MultiLogFiles :: loadLogFileNamesFromStorkSubFile ( _cmdFile , _directory , logFiles )"		1701847	1					
ANR	1701931	Callee	MultiLogFiles :: loadLogFileNamesFromStorkSubFile		1701847	0					
ANR	1701932	Identifier	MultiLogFiles :: loadLogFileNamesFromStorkSubFile		1701847	0					
ANR	1701933	ArgumentList	_cmdFile		1701847	1					
ANR	1701934	Argument	_cmdFile		1701847	0					
ANR	1701935	Identifier	_cmdFile		1701847	0					
ANR	1701936	Argument	_directory		1701847	1					
ANR	1701937	Identifier	_directory		1701847	0					
ANR	1701938	Argument	logFiles		1701847	2					
ANR	1701939	Identifier	logFiles		1701847	0					
ANR	1701940	IfStatement	"if ( tmpResult != """" )"		1701847	2					
ANR	1701941	Condition	"tmpResult != """""	804:7:18530:18544	1701847	0	True				
ANR	1701942	EqualityExpression	"tmpResult != """""		1701847	0		!=			
ANR	1701943	Identifier	tmpResult		1701847	0					
ANR	1701944	PrimaryExpression	""""""		1701847	1					
ANR	1701945	CompoundStatement		23:25:695:695	1701847	1					
ANR	1701946	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""Error getting Stork log file: %s\\n"" , tmpResult . Value ( ) )"	805:3:18553:18643	1701847	0	True				
ANR	1701947	CallExpression	"debug_printf ( DEBUG_QUIET , ""Error getting Stork log file: %s\\n"" , tmpResult . Value ( ) )"		1701847	0					
ANR	1701948	Callee	debug_printf		1701847	0					
ANR	1701949	Identifier	debug_printf		1701847	0					
ANR	1701950	ArgumentList	DEBUG_QUIET		1701847	1					
ANR	1701951	Argument	DEBUG_QUIET		1701847	0					
ANR	1701952	Identifier	DEBUG_QUIET		1701847	0					
ANR	1701953	Argument	"""Error getting Stork log file: %s\\n"""		1701847	1					
ANR	1701954	PrimaryExpression	"""Error getting Stork log file: %s\\n"""		1701847	0					
ANR	1701955	Argument	tmpResult . Value ( )		1701847	2					
ANR	1701956	CallExpression	tmpResult . Value ( )		1701847	0					
ANR	1701957	Callee	tmpResult . Value		1701847	0					
ANR	1701958	MemberAccess	tmpResult . Value		1701847	0					
ANR	1701959	Identifier	tmpResult		1701847	0					
ANR	1701960	Identifier	Value		1701847	1					
ANR	1701961	ArgumentList			1701847	1					
ANR	1701962	ExpressionStatement	LogMonitorFailed ( )	807:3:18648:18666	1701847	1	True				
ANR	1701963	CallExpression	LogMonitorFailed ( )		1701847	0					
ANR	1701964	Callee	LogMonitorFailed		1701847	0					
ANR	1701965	Identifier	LogMonitorFailed		1701847	0					
ANR	1701966	ArgumentList			1701847	1					
ANR	1701967	ReturnStatement	return false ;	808:3:18671:18683	1701847	2	True				
ANR	1701968	Identifier	false		1701847	0					
ANR	1701969	ElseStatement	else		1701847	0					
ANR	1701970	IfStatement	if ( logFiles . number ( ) != 1 )		1701847	0					
ANR	1701971	Condition	logFiles . number ( ) != 1	809:14:18699:18720	1701847	0	True				
ANR	1701972	EqualityExpression	logFiles . number ( ) != 1		1701847	0		!=			
ANR	1701973	CallExpression	logFiles . number ( )		1701847	0					
ANR	1701974	Callee	logFiles . number		1701847	0					
ANR	1701975	MemberAccess	logFiles . number		1701847	0					
ANR	1701976	Identifier	logFiles		1701847	0					
ANR	1701977	Identifier	number		1701847	1					
ANR	1701978	ArgumentList			1701847	1					
ANR	1701979	PrimaryExpression	1		1701847	1					
ANR	1701980	CompoundStatement		28:39:871:871	1701847	1					
ANR	1701981	Statement	debug_printf	810:3:18729:18740	1701847	0	True				
ANR	1701982	Statement	(	810:15:18741:18741	1701847	1	True				
ANR	1701983	Statement	DEBUG_QUIET	810:17:18743:18753	1701847	2	True				
ANR	1701984	Statement	","	810:28:18754:18754	1701847	3	True				
ANR	1701985	Statement	"""Error: %d Stork log files found """	810:30:18756:18789	1701847	4	True				
ANR	1701986	Statement	"""in submit file %s; we want 1\\n"""	811:6:18797:18828	1701847	5	True				
ANR	1701987	Statement	","	811:38:18829:18829	1701847	6	True				
ANR	1701988	Statement	logFiles	812:6:18837:18844	1701847	7	True				
ANR	1701989	Statement	.	812:14:18845:18845	1701847	8	True				
ANR	1701990	Statement	number	812:15:18846:18851	1701847	9	True				
ANR	1701991	Statement	(	812:21:18852:18852	1701847	10	True				
ANR	1701992	Statement	)	812:22:18853:18853	1701847	11	True				
ANR	1701993	Statement	","	812:23:18854:18854	1701847	12	True				
ANR	1701994	Statement	_cmdFile	812:25:18856:18863	1701847	13	True				
ANR	1701995	Statement	)	812:34:18865:18865	1701847	14	True				
ANR	1701996	ExpressionStatement		812:35:18866:18866	1701847	15	True				
ANR	1701997	ExpressionStatement	LogMonitorFailed ( )	813:3:18871:18889	1701847	16	True				
ANR	1701998	CallExpression	LogMonitorFailed ( )		1701847	0					
ANR	1701999	Callee	LogMonitorFailed		1701847	0					
ANR	1702000	Identifier	LogMonitorFailed		1701847	0					
ANR	1702001	ArgumentList			1701847	1					
ANR	1702002	ReturnStatement	return false ;	814:3:18894:18906	1701847	17	True				
ANR	1702003	Identifier	false		1701847	0					
ANR	1702004	ElseStatement	else		1701847	0					
ANR	1702005	CompoundStatement		34:9:1064:1064	1701847	0					
ANR	1702006	ExpressionStatement	logFiles . rewind ( )	816:3:18922:18939	1701847	0	True				
ANR	1702007	CallExpression	logFiles . rewind ( )		1701847	0					
ANR	1702008	Callee	logFiles . rewind		1701847	0					
ANR	1702009	MemberAccess	logFiles . rewind		1701847	0					
ANR	1702010	Identifier	logFiles		1701847	0					
ANR	1702011	Identifier	rewind		1701847	1					
ANR	1702012	ArgumentList			1701847	1					
ANR	1702013	ExpressionStatement	logFileStr = logFiles . next ( )	817:3:18944:18972	1701847	1	True				
ANR	1702014	AssignmentExpression	logFileStr = logFiles . next ( )		1701847	0		=			
ANR	1702015	Identifier	logFileStr		1701847	0					
ANR	1702016	CallExpression	logFiles . next ( )		1701847	1					
ANR	1702017	Callee	logFiles . next		1701847	0					
ANR	1702018	MemberAccess	logFiles . next		1701847	0					
ANR	1702019	Identifier	logFiles		1701847	0					
ANR	1702020	Identifier	next		1701847	1					
ANR	1702021	ArgumentList			1701847	1					
ANR	1702022	IfStatement	"if ( logFileStr == """" )"		1701847	5					
ANR	1702023	Condition	"logFileStr == """""	821:6:18988:19003	1701847	0	True				
ANR	1702024	EqualityExpression	"logFileStr == """""		1701847	0		==			
ANR	1702025	Identifier	logFileStr		1701847	0					
ANR	1702026	PrimaryExpression	""""""		1701847	1					
ANR	1702027	CompoundStatement		40:25:1154:1154	1701847	1					
ANR	1702028	ExpressionStatement	logFileStr = defaultNodeLog	822:2:19011:19038	1701847	0	True				
ANR	1702029	AssignmentExpression	logFileStr = defaultNodeLog		1701847	0		=			
ANR	1702030	Identifier	logFileStr		1701847	0					
ANR	1702031	Identifier	defaultNodeLog		1701847	1					
ANR	1702032	ExpressionStatement	_useDefaultLog = true	823:2:19042:19063	1701847	1	True				
ANR	1702033	AssignmentExpression	_useDefaultLog = true		1701847	0		=			
ANR	1702034	Identifier	_useDefaultLog		1701847	0					
ANR	1702035	Identifier	true		1701847	1					
ANR	1702036	ExpressionStatement	_logFileIsXml = false	824:2:19067:19088	1701847	2	True				
ANR	1702037	AssignmentExpression	_logFileIsXml = false		1701847	0		=			
ANR	1702038	Identifier	_logFileIsXml		1701847	0					
ANR	1702039	Identifier	false		1701847	1					
ANR	1702040	Statement	debug_printf	825:2:19092:19103	1701847	3	True				
ANR	1702041	Statement	(	825:14:19104:19104	1701847	4	True				
ANR	1702042	Statement	DEBUG_NORMAL	825:16:19106:19117	1701847	5	True				
ANR	1702043	Statement	","	825:28:19118:19118	1701847	6	True				
ANR	1702044	Statement	"""Unable to get log file from """	825:30:19120:19149	1701847	7	True				
ANR	1702045	Statement	"""submit file %s (node %s); using default (%s)\\n"""	826:5:19156:19203	1701847	8	True				
ANR	1702046	Statement	","	826:53:19204:19204	1701847	9	True				
ANR	1702047	Statement	_cmdFile	827:5:19211:19218	1701847	10	True				
ANR	1702048	Statement	","	827:13:19219:19219	1701847	11	True				
ANR	1702049	Statement	GetJobName	827:15:19221:19230	1701847	12	True				
ANR	1702050	Statement	(	827:25:19231:19231	1701847	13	True				
ANR	1702051	Statement	)	827:26:19232:19232	1701847	14	True				
ANR	1702052	Statement	","	827:27:19233:19233	1701847	15	True				
ANR	1702053	Statement	logFileStr	827:29:19235:19244	1701847	16	True				
ANR	1702054	Statement	.	827:39:19245:19245	1701847	17	True				
ANR	1702055	Statement	Value	827:40:19246:19250	1701847	18	True				
ANR	1702056	Statement	(	827:45:19251:19251	1701847	19	True				
ANR	1702057	Statement	)	827:46:19252:19252	1701847	20	True				
ANR	1702058	Statement	)	827:48:19254:19254	1701847	21	True				
ANR	1702059	ExpressionStatement		827:49:19255:19255	1701847	22	True				
ANR	1702060	IfStatement	"if ( MultiLogFiles :: logFileNFSError ( logFileStr . Value ( ) , nfsIsError ) )"		1701847	6					
ANR	1702061	Condition	"MultiLogFiles :: logFileNFSError ( logFileStr . Value ( ) , nfsIsError )"	833:6:19449:19516	1701847	0	True				
ANR	1702062	CallExpression	"MultiLogFiles :: logFileNFSError ( logFileStr . Value ( ) , nfsIsError )"		1701847	0					
ANR	1702063	Callee	MultiLogFiles :: logFileNFSError		1701847	0					
ANR	1702064	Identifier	MultiLogFiles :: logFileNFSError		1701847	0					
ANR	1702065	ArgumentList	logFileStr . Value ( )		1701847	1					
ANR	1702066	Argument	logFileStr . Value ( )		1701847	0					
ANR	1702067	CallExpression	logFileStr . Value ( )		1701847	0					
ANR	1702068	Callee	logFileStr . Value		1701847	0					
ANR	1702069	MemberAccess	logFileStr . Value		1701847	0					
ANR	1702070	Identifier	logFileStr		1701847	0					
ANR	1702071	Identifier	Value		1701847	1					
ANR	1702072	ArgumentList			1701847	1					
ANR	1702073	Argument	nfsIsError		1701847	1					
ANR	1702074	Identifier	nfsIsError		1701847	0					
ANR	1702075	CompoundStatement		53:19:1667:1667	1701847	1					
ANR	1702076	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""Error: log file %s on NFS\\n"" , logFileStr . Value ( ) )"	835:2:19524:19607	1701847	0	True				
ANR	1702077	CallExpression	"debug_printf ( DEBUG_QUIET , ""Error: log file %s on NFS\\n"" , logFileStr . Value ( ) )"		1701847	0					
ANR	1702078	Callee	debug_printf		1701847	0					
ANR	1702079	Identifier	debug_printf		1701847	0					
ANR	1702080	ArgumentList	DEBUG_QUIET		1701847	1					
ANR	1702081	Argument	DEBUG_QUIET		1701847	0					
ANR	1702082	Identifier	DEBUG_QUIET		1701847	0					
ANR	1702083	Argument	"""Error: log file %s on NFS\\n"""		1701847	1					
ANR	1702084	PrimaryExpression	"""Error: log file %s on NFS\\n"""		1701847	0					
ANR	1702085	Argument	logFileStr . Value ( )		1701847	2					
ANR	1702086	CallExpression	logFileStr . Value ( )		1701847	0					
ANR	1702087	Callee	logFileStr . Value		1701847	0					
ANR	1702088	MemberAccess	logFileStr . Value		1701847	0					
ANR	1702089	Identifier	logFileStr		1701847	0					
ANR	1702090	Identifier	Value		1701847	1					
ANR	1702091	ArgumentList			1701847	1					
ANR	1702092	ExpressionStatement	LogMonitorFailed ( )	837:2:19611:19629	1701847	1	True				
ANR	1702093	CallExpression	LogMonitorFailed ( )		1701847	0					
ANR	1702094	Callee	LogMonitorFailed		1701847	0					
ANR	1702095	Identifier	LogMonitorFailed		1701847	0					
ANR	1702096	ArgumentList			1701847	1					
ANR	1702097	ReturnStatement	return false ;	838:2:19633:19645	1701847	2	True				
ANR	1702098	Identifier	false		1701847	0					
ANR	1702099	Statement	delete	841:1:19652:19657	1701847	7	True				
ANR	1702100	Statement	[	841:8:19659:19659	1701847	8	True				
ANR	1702101	Statement	]	841:9:19660:19660	1701847	9	True				
ANR	1702102	ExpressionStatement	_logFile	841:11:19662:19670	1701847	10	True				
ANR	1702103	Identifier	_logFile		1701847	0					
ANR	1702104	ExpressionStatement	_logFile = strnewp ( logFileStr . Value ( ) )	843:1:19733:19773	1701847	11	True				
ANR	1702105	AssignmentExpression	_logFile = strnewp ( logFileStr . Value ( ) )		1701847	0		=			
ANR	1702106	Identifier	_logFile		1701847	0					
ANR	1702107	CallExpression	strnewp ( logFileStr . Value ( ) )		1701847	1					
ANR	1702108	Callee	strnewp		1701847	0					
ANR	1702109	Identifier	strnewp		1701847	0					
ANR	1702110	ArgumentList	logFileStr . Value ( )		1701847	1					
ANR	1702111	Argument	logFileStr . Value ( )		1701847	0					
ANR	1702112	CallExpression	logFileStr . Value ( )		1701847	0					
ANR	1702113	Callee	logFileStr . Value		1701847	0					
ANR	1702114	MemberAccess	logFileStr . Value		1701847	0					
ANR	1702115	Identifier	logFileStr		1701847	0					
ANR	1702116	Identifier	Value		1701847	1					
ANR	1702117	ArgumentList			1701847	1					
ANR	1702118	ExpressionStatement	"debug_printf ( DEBUG_DEBUG_2 , ""Monitoring log file <%s> for node %s\\n"" , GetLogFile ( ) , GetJobName ( ) )"	844:1:19776:19879	1701847	12	True				
ANR	1702119	CallExpression	"debug_printf ( DEBUG_DEBUG_2 , ""Monitoring log file <%s> for node %s\\n"" , GetLogFile ( ) , GetJobName ( ) )"		1701847	0					
ANR	1702120	Callee	debug_printf		1701847	0					
ANR	1702121	Identifier	debug_printf		1701847	0					
ANR	1702122	ArgumentList	DEBUG_DEBUG_2		1701847	1					
ANR	1702123	Argument	DEBUG_DEBUG_2		1701847	0					
ANR	1702124	Identifier	DEBUG_DEBUG_2		1701847	0					
ANR	1702125	Argument	"""Monitoring log file <%s> for node %s\\n"""		1701847	1					
ANR	1702126	PrimaryExpression	"""Monitoring log file <%s> for node %s\\n"""		1701847	0					
ANR	1702127	Argument	GetLogFile ( )		1701847	2					
ANR	1702128	CallExpression	GetLogFile ( )		1701847	0					
ANR	1702129	Callee	GetLogFile		1701847	0					
ANR	1702130	Identifier	GetLogFile		1701847	0					
ANR	1702131	ArgumentList			1701847	1					
ANR	1702132	Argument	GetJobName ( )		1701847	3					
ANR	1702133	CallExpression	GetJobName ( )		1701847	0					
ANR	1702134	Callee	GetJobName		1701847	0					
ANR	1702135	Identifier	GetJobName		1701847	0					
ANR	1702136	ArgumentList			1701847	1					
ANR	1702137	IdentifierDeclStatement	CondorError errstack ;	846:1:19882:19902	1701847	13	True				
ANR	1702138	IdentifierDecl	errstack		1701847	0					
ANR	1702139	IdentifierDeclType	CondorError		1701847	0					
ANR	1702140	Identifier	errstack		1701847	1					
ANR	1702141	IfStatement	"if ( ! logReader . monitorLogFile ( GetLogFile ( ) , ! recovery , errstack ) )"		1701847	14					
ANR	1702142	Condition	"! logReader . monitorLogFile ( GetLogFile ( ) , ! recovery , errstack )"	847:6:19910:19971	1701847	0	True				
ANR	1702143	UnaryOperationExpression	"! logReader . monitorLogFile ( GetLogFile ( ) , ! recovery , errstack )"		1701847	0					
ANR	1702144	UnaryOperator	!		1701847	0					
ANR	1702145	CallExpression	"logReader . monitorLogFile ( GetLogFile ( ) , ! recovery , errstack )"		1701847	1					
ANR	1702146	Callee	logReader . monitorLogFile		1701847	0					
ANR	1702147	MemberAccess	logReader . monitorLogFile		1701847	0					
ANR	1702148	Identifier	logReader		1701847	0					
ANR	1702149	Identifier	monitorLogFile		1701847	1					
ANR	1702150	ArgumentList	GetLogFile ( )		1701847	1					
ANR	1702151	Argument	GetLogFile ( )		1701847	0					
ANR	1702152	CallExpression	GetLogFile ( )		1701847	0					
ANR	1702153	Callee	GetLogFile		1701847	0					
ANR	1702154	Identifier	GetLogFile		1701847	0					
ANR	1702155	ArgumentList			1701847	1					
ANR	1702156	Argument	! recovery		1701847	1					
ANR	1702157	UnaryOperationExpression	! recovery		1701847	0					
ANR	1702158	UnaryOperator	!		1701847	0					
ANR	1702159	Identifier	recovery		1701847	1					
ANR	1702160	Argument	errstack		1701847	2					
ANR	1702161	Identifier	errstack		1701847	0					
ANR	1702162	CompoundStatement		66:71:2122:2122	1701847	1					
ANR	1702163	ExpressionStatement	"errstack . pushf ( ""DAGMan::Job"" , DAGMAN_ERR_LOG_FILE , ""ERROR: Unable to monitor log file for node %s"" , GetJobName ( ) )"	848:2:19979:20104	1701847	0	True				
ANR	1702164	CallExpression	"errstack . pushf ( ""DAGMan::Job"" , DAGMAN_ERR_LOG_FILE , ""ERROR: Unable to monitor log file for node %s"" , GetJobName ( ) )"		1701847	0					
ANR	1702165	Callee	errstack . pushf		1701847	0					
ANR	1702166	MemberAccess	errstack . pushf		1701847	0					
ANR	1702167	Identifier	errstack		1701847	0					
ANR	1702168	Identifier	pushf		1701847	1					
ANR	1702169	ArgumentList	"""DAGMan::Job"""		1701847	1					
ANR	1702170	Argument	"""DAGMan::Job"""		1701847	0					
ANR	1702171	PrimaryExpression	"""DAGMan::Job"""		1701847	0					
ANR	1702172	Argument	DAGMAN_ERR_LOG_FILE		1701847	1					
ANR	1702173	Identifier	DAGMAN_ERR_LOG_FILE		1701847	0					
ANR	1702174	Argument	"""ERROR: Unable to monitor log file for node %s"""		1701847	2					
ANR	1702175	PrimaryExpression	"""ERROR: Unable to monitor log file for node %s"""		1701847	0					
ANR	1702176	Argument	GetJobName ( )		1701847	3					
ANR	1702177	CallExpression	GetJobName ( )		1701847	0					
ANR	1702178	Callee	GetJobName		1701847	0					
ANR	1702179	Identifier	GetJobName		1701847	0					
ANR	1702180	ArgumentList			1701847	1					
ANR	1702181	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""%s\\n"" , errstack . getFullText ( ) )"	851:2:20108:20167	1701847	1	True				
ANR	1702182	CallExpression	"debug_printf ( DEBUG_QUIET , ""%s\\n"" , errstack . getFullText ( ) )"		1701847	0					
ANR	1702183	Callee	debug_printf		1701847	0					
ANR	1702184	Identifier	debug_printf		1701847	0					
ANR	1702185	ArgumentList	DEBUG_QUIET		1701847	1					
ANR	1702186	Argument	DEBUG_QUIET		1701847	0					
ANR	1702187	Identifier	DEBUG_QUIET		1701847	0					
ANR	1702188	Argument	"""%s\\n"""		1701847	1					
ANR	1702189	PrimaryExpression	"""%s\\n"""		1701847	0					
ANR	1702190	Argument	errstack . getFullText ( )		1701847	2					
ANR	1702191	CallExpression	errstack . getFullText ( )		1701847	0					
ANR	1702192	Callee	errstack . getFullText		1701847	0					
ANR	1702193	MemberAccess	errstack . getFullText		1701847	0					
ANR	1702194	Identifier	errstack		1701847	0					
ANR	1702195	Identifier	getFullText		1701847	1					
ANR	1702196	ArgumentList			1701847	1					
ANR	1702197	ExpressionStatement	LogMonitorFailed ( )	852:2:20171:20189	1701847	2	True				
ANR	1702198	CallExpression	LogMonitorFailed ( )		1701847	0					
ANR	1702199	Callee	LogMonitorFailed		1701847	0					
ANR	1702200	Identifier	LogMonitorFailed		1701847	0					
ANR	1702201	ArgumentList			1701847	1					
ANR	1702202	ExpressionStatement	"EXCEPT ( ""Fatal log file monitoring error!\\n"" )"	853:2:20193:20239	1701847	3	True				
ANR	1702203	CallExpression	"EXCEPT ( ""Fatal log file monitoring error!\\n"" )"		1701847	0					
ANR	1702204	Callee	EXCEPT		1701847	0					
ANR	1702205	Identifier	EXCEPT		1701847	0					
ANR	1702206	ArgumentList	"""Fatal log file monitoring error!\\n"""		1701847	1					
ANR	1702207	Argument	"""Fatal log file monitoring error!\\n"""		1701847	0					
ANR	1702208	PrimaryExpression	"""Fatal log file monitoring error!\\n"""		1701847	0					
ANR	1702209	ReturnStatement	return false ;	854:2:20243:20255	1701847	4	True				
ANR	1702210	Identifier	false		1701847	0					
ANR	1702211	ExpressionStatement	_logIsMonitored = true	857:1:20262:20284	1701847	15	True				
ANR	1702212	AssignmentExpression	_logIsMonitored = true		1701847	0		=			
ANR	1702213	Identifier	_logIsMonitored		1701847	0					
ANR	1702214	Identifier	true		1701847	1					
ANR	1702215	ReturnStatement	return true ;	859:1:20288:20299	1701847	16	True				
ANR	1702216	Identifier	true		1701847	0					
ANR	1702217	ReturnType	bool		1701847	1					
ANR	1702218	Identifier	Job :: MonitorLogFile		1701847	2					
ANR	1702219	ParameterList	"ReadMultipleUserLogs & condorLogReader , ReadMultipleUserLogs & storkLogReader , bool nfsIsError , bool recovery , const char * defaultNodeLog"		1701847	3					
ANR	1702220	Parameter	ReadMultipleUserLogs & condorLogReader	779:21:17708:17744	1701847	0	True				
ANR	1702221	ParameterType	ReadMultipleUserLogs &		1701847	0					
ANR	1702222	Identifier	condorLogReader		1701847	1					
ANR	1702223	Parameter	ReadMultipleUserLogs & storkLogReader	780:3:17750:17785	1701847	1	True				
ANR	1702224	ParameterType	ReadMultipleUserLogs &		1701847	0					
ANR	1702225	Identifier	storkLogReader		1701847	1					
ANR	1702226	Parameter	bool nfsIsError	780:41:17788:17802	1701847	2	True				
ANR	1702227	ParameterType	bool		1701847	0					
ANR	1702228	Identifier	nfsIsError		1701847	1					
ANR	1702229	Parameter	bool recovery	781:3:17808:17820	1701847	3	True				
ANR	1702230	ParameterType	bool		1701847	0					
ANR	1702231	Identifier	recovery		1701847	1					
ANR	1702232	Parameter	const char * defaultNodeLog	781:18:17823:17848	1701847	4	True				
ANR	1702233	ParameterType	const char *		1701847	0					
ANR	1702234	Identifier	defaultNodeLog		1701847	1					
ANR	1702235	CFGEntryNode	ENTRY		1701847		True				
ANR	1702236	CFGExitNode	EXIT		1701847		True				
ANR	1702237	Symbol	TYPE_CONDOR		1701847						
ANR	1702238	Symbol	_jobType		1701847						
ANR	1702239	Symbol	_logFile		1701847						
ANR	1702240	Symbol	logFiles . number		1701847						
ANR	1702241	Symbol	recovery		1701847						
ANR	1702242	Symbol	_logIsMonitored		1701847						
ANR	1702243	Symbol	_directory		1701847						
ANR	1702244	Symbol	DEBUG_QUIET		1701847						
ANR	1702245	Symbol	storkLogReader		1701847						
ANR	1702246	Symbol	logFileStr . Value		1701847						
ANR	1702247	Symbol	_useDefaultLog		1701847						
ANR	1702248	Symbol	DEBUG_DEBUG_2		1701847						
ANR	1702249	Symbol	strnewp		1701847						
ANR	1702250	Symbol	tmpResult		1701847						
ANR	1702251	Symbol	defaultNodeLog		1701847						
ANR	1702252	Symbol	MultiLogFiles :: loadLogFileNameFromSubFile		1701847						
ANR	1702253	Symbol	logFiles . next		1701847						
ANR	1702254	Symbol	_logFileIsXml		1701847						
ANR	1702255	Symbol	nfsIsError		1701847						
ANR	1702256	Symbol	false		1701847						
ANR	1702257	Symbol	DAGMAN_ERR_LOG_FILE		1701847						
ANR	1702258	Symbol	logReader		1701847						
ANR	1702259	Symbol	_cmdFile		1701847						
ANR	1702260	Symbol	condorLogReader		1701847						
ANR	1702261	Symbol	logFileStr		1701847						
ANR	1702262	Symbol	logFiles		1701847						
ANR	1702263	Symbol	errstack		1701847						
ANR	1702264	Symbol	GetJobName		1701847						
ANR	1702265	Symbol	true		1701847						
ANR	1702266	Symbol	MultiLogFiles :: logFileNFSError		1701847						
ANR	1702267	Symbol	errstack . getFullText		1701847						
ANR	1702268	Symbol	tmpResult . Value		1701847						
ANR	1702269	Symbol	GetLogFile		1701847						
ANR	1702270	Symbol	MultiLogFiles :: loadLogFileNamesFromStorkSubFile		1701847						
ANR	1702271	Symbol	logReader . monitorLogFile		1701847						
ANR	1702272	Function	Job :: UnmonitorLogFile	863:0:20382:21438							
ANR	1702273	FunctionDef	"Job :: UnmonitorLogFile (ReadMultipleUserLogs & condorLogReader , ReadMultipleUserLogs & storkLogReader)"		1702272	0					
ANR	1702274	CompoundStatement		866:0:20491:21438	1702272	0					
ANR	1702275	ExpressionStatement	"debug_printf ( DEBUG_DEBUG_2 , ""Unmonitoring log file <%s> for node %s\\n"" , GetLogFile ( ) , GetJobName ( ) )"	867:1:20494:20599	1702272	0	True				
ANR	1702276	CallExpression	"debug_printf ( DEBUG_DEBUG_2 , ""Unmonitoring log file <%s> for node %s\\n"" , GetLogFile ( ) , GetJobName ( ) )"		1702272	0					
ANR	1702277	Callee	debug_printf		1702272	0					
ANR	1702278	Identifier	debug_printf		1702272	0					
ANR	1702279	ArgumentList	DEBUG_DEBUG_2		1702272	1					
ANR	1702280	Argument	DEBUG_DEBUG_2		1702272	0					
ANR	1702281	Identifier	DEBUG_DEBUG_2		1702272	0					
ANR	1702282	Argument	"""Unmonitoring log file <%s> for node %s\\n"""		1702272	1					
ANR	1702283	PrimaryExpression	"""Unmonitoring log file <%s> for node %s\\n"""		1702272	0					
ANR	1702284	Argument	GetLogFile ( )		1702272	2					
ANR	1702285	CallExpression	GetLogFile ( )		1702272	0					
ANR	1702286	Callee	GetLogFile		1702272	0					
ANR	1702287	Identifier	GetLogFile		1702272	0					
ANR	1702288	ArgumentList			1702272	1					
ANR	1702289	Argument	GetJobName ( )		1702272	3					
ANR	1702290	CallExpression	GetJobName ( )		1702272	0					
ANR	1702291	Callee	GetJobName		1702272	0					
ANR	1702292	Identifier	GetJobName		1702272	0					
ANR	1702293	ArgumentList			1702272	1					
ANR	1702294	IfStatement	if ( ! _logIsMonitored )		1702272	1					
ANR	1702295	Condition	! _logIsMonitored	870:6:20608:20623	1702272	0	True				
ANR	1702296	UnaryOperationExpression	! _logIsMonitored		1702272	0					
ANR	1702297	UnaryOperator	!		1702272	0					
ANR	1702298	Identifier	_logIsMonitored		1702272	1					
ANR	1702299	CompoundStatement		5:25:135:135	1702272	1					
ANR	1702300	Statement	debug_printf	871:2:20631:20642	1702272	0	True				
ANR	1702301	Statement	(	871:14:20643:20643	1702272	1	True				
ANR	1702302	Statement	DEBUG_DEBUG_1	871:16:20645:20657	1702272	2	True				
ANR	1702303	Statement	","	871:29:20658:20658	1702272	3	True				
ANR	1702304	Statement	"""Warning: log file for node """	871:31:20660:20688	1702272	4	True				
ANR	1702305	Statement	"""%s is already unmonitored\\n"""	872:5:20695:20723	1702272	5	True				
ANR	1702306	Statement	","	872:34:20724:20724	1702272	6	True				
ANR	1702307	Statement	GetJobName	872:36:20726:20735	1702272	7	True				
ANR	1702308	Statement	(	872:46:20736:20736	1702272	8	True				
ANR	1702309	Statement	)	872:47:20737:20737	1702272	9	True				
ANR	1702310	Statement	)	872:49:20739:20739	1702272	10	True				
ANR	1702311	ExpressionStatement		872:50:20740:20740	1702272	11	True				
ANR	1702312	ReturnStatement	return true ;	873:2:20744:20755	1702272	12	True				
ANR	1702313	Identifier	true		1702272	0					
ANR	1702314	IdentifierDeclStatement	ReadMultipleUserLogs & logReader = ( _jobType == TYPE_CONDOR ) ? condorLogReader : storkLogReader ;	876:1:20762:20860	1702272	2	True				
ANR	1702315	IdentifierDecl	& logReader = ( _jobType == TYPE_CONDOR ) ? condorLogReader : storkLogReader		1702272	0					
ANR	1702316	IdentifierDeclType	ReadMultipleUserLogs &		1702272	0					
ANR	1702317	Identifier	logReader		1702272	1					
ANR	1702318	AssignmentExpression	& logReader = ( _jobType == TYPE_CONDOR ) ? condorLogReader : storkLogReader		1702272	2		=			
ANR	1702319	Identifier	logReader		1702272	0					
ANR	1702320	ConditionalExpression	( _jobType == TYPE_CONDOR ) ? condorLogReader : storkLogReader		1702272	1					
ANR	1702321	Condition	_jobType == TYPE_CONDOR		1702272	0					
ANR	1702322	EqualityExpression	_jobType == TYPE_CONDOR		1702272	0		==			
ANR	1702323	Identifier	_jobType		1702272	0					
ANR	1702324	Identifier	TYPE_CONDOR		1702272	1					
ANR	1702325	Identifier	condorLogReader		1702272	1					
ANR	1702326	Identifier	storkLogReader		1702272	2					
ANR	1702327	ExpressionStatement	"debug_printf ( DEBUG_DEBUG_1 , ""Unmonitoring log file <%s> for node %s\\n"" , GetLogFile ( ) , GetJobName ( ) )"	879:1:20864:20969	1702272	3	True				
ANR	1702328	CallExpression	"debug_printf ( DEBUG_DEBUG_1 , ""Unmonitoring log file <%s> for node %s\\n"" , GetLogFile ( ) , GetJobName ( ) )"		1702272	0					
ANR	1702329	Callee	debug_printf		1702272	0					
ANR	1702330	Identifier	debug_printf		1702272	0					
ANR	1702331	ArgumentList	DEBUG_DEBUG_1		1702272	1					
ANR	1702332	Argument	DEBUG_DEBUG_1		1702272	0					
ANR	1702333	Identifier	DEBUG_DEBUG_1		1702272	0					
ANR	1702334	Argument	"""Unmonitoring log file <%s> for node %s\\n"""		1702272	1					
ANR	1702335	PrimaryExpression	"""Unmonitoring log file <%s> for node %s\\n"""		1702272	0					
ANR	1702336	Argument	GetLogFile ( )		1702272	2					
ANR	1702337	CallExpression	GetLogFile ( )		1702272	0					
ANR	1702338	Callee	GetLogFile		1702272	0					
ANR	1702339	Identifier	GetLogFile		1702272	0					
ANR	1702340	ArgumentList			1702272	1					
ANR	1702341	Argument	GetJobName ( )		1702272	3					
ANR	1702342	CallExpression	GetJobName ( )		1702272	0					
ANR	1702343	Callee	GetJobName		1702272	0					
ANR	1702344	Identifier	GetJobName		1702272	0					
ANR	1702345	ArgumentList			1702272	1					
ANR	1702346	IdentifierDeclStatement	CondorError errstack ;	882:1:20973:20993	1702272	4	True				
ANR	1702347	IdentifierDecl	errstack		1702272	0					
ANR	1702348	IdentifierDeclType	CondorError		1702272	0					
ANR	1702349	Identifier	errstack		1702272	1					
ANR	1702350	IdentifierDeclStatement	"bool result = logReader . unmonitorLogFile ( GetLogFile ( ) , errstack ) ;"	883:1:20996:21062	1702272	5	True				
ANR	1702351	IdentifierDecl	"result = logReader . unmonitorLogFile ( GetLogFile ( ) , errstack )"		1702272	0					
ANR	1702352	IdentifierDeclType	bool		1702272	0					
ANR	1702353	Identifier	result		1702272	1					
ANR	1702354	AssignmentExpression	"result = logReader . unmonitorLogFile ( GetLogFile ( ) , errstack )"		1702272	2		=			
ANR	1702355	Identifier	result		1702272	0					
ANR	1702356	CallExpression	"logReader . unmonitorLogFile ( GetLogFile ( ) , errstack )"		1702272	1					
ANR	1702357	Callee	logReader . unmonitorLogFile		1702272	0					
ANR	1702358	MemberAccess	logReader . unmonitorLogFile		1702272	0					
ANR	1702359	Identifier	logReader		1702272	0					
ANR	1702360	Identifier	unmonitorLogFile		1702272	1					
ANR	1702361	ArgumentList	GetLogFile ( )		1702272	1					
ANR	1702362	Argument	GetLogFile ( )		1702272	0					
ANR	1702363	CallExpression	GetLogFile ( )		1702272	0					
ANR	1702364	Callee	GetLogFile		1702272	0					
ANR	1702365	Identifier	GetLogFile		1702272	0					
ANR	1702366	ArgumentList			1702272	1					
ANR	1702367	Argument	errstack		1702272	1					
ANR	1702368	Identifier	errstack		1702272	0					
ANR	1702369	IfStatement	if ( ! result )		1702272	6					
ANR	1702370	Condition	! result	884:6:21070:21076	1702272	0	True				
ANR	1702371	UnaryOperationExpression	! result		1702272	0					
ANR	1702372	UnaryOperator	!		1702272	0					
ANR	1702373	Identifier	result		1702272	1					
ANR	1702374	CompoundStatement		19:16:588:588	1702272	1					
ANR	1702375	Statement	errstack	885:2:21084:21091	1702272	0	True				
ANR	1702376	Statement	.	885:10:21092:21092	1702272	1	True				
ANR	1702377	Statement	pushf	885:11:21093:21097	1702272	2	True				
ANR	1702378	Statement	(	885:16:21098:21098	1702272	3	True				
ANR	1702379	Statement	"""DAGMan::Job"""	885:18:21100:21112	1702272	4	True				
ANR	1702380	Statement	","	885:31:21113:21113	1702272	5	True				
ANR	1702381	Statement	DAGMAN_ERR_LOG_FILE	885:33:21115:21133	1702272	6	True				
ANR	1702382	Statement	","	885:52:21134:21134	1702272	7	True				
ANR	1702383	Statement	"""ERROR: Unable to unmonitor log """	886:5:21141:21173	1702272	8	True				
ANR	1702384	Statement	"""file for node %s"""	886:39:21175:21192	1702272	9	True				
ANR	1702385	Statement	","	886:57:21193:21193	1702272	10	True				
ANR	1702386	Statement	GetJobName	887:5:21200:21209	1702272	11	True				
ANR	1702387	Statement	(	887:15:21210:21210	1702272	12	True				
ANR	1702388	Statement	)	887:16:21211:21211	1702272	13	True				
ANR	1702389	Statement	)	887:18:21213:21213	1702272	14	True				
ANR	1702390	ExpressionStatement		887:19:21214:21214	1702272	15	True				
ANR	1702391	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""%s\\n"" , errstack . getFullText ( ) )"	888:2:21218:21277	1702272	16	True				
ANR	1702392	CallExpression	"debug_printf ( DEBUG_QUIET , ""%s\\n"" , errstack . getFullText ( ) )"		1702272	0					
ANR	1702393	Callee	debug_printf		1702272	0					
ANR	1702394	Identifier	debug_printf		1702272	0					
ANR	1702395	ArgumentList	DEBUG_QUIET		1702272	1					
ANR	1702396	Argument	DEBUG_QUIET		1702272	0					
ANR	1702397	Identifier	DEBUG_QUIET		1702272	0					
ANR	1702398	Argument	"""%s\\n"""		1702272	1					
ANR	1702399	PrimaryExpression	"""%s\\n"""		1702272	0					
ANR	1702400	Argument	errstack . getFullText ( )		1702272	2					
ANR	1702401	CallExpression	errstack . getFullText ( )		1702272	0					
ANR	1702402	Callee	errstack . getFullText		1702272	0					
ANR	1702403	MemberAccess	errstack . getFullText		1702272	0					
ANR	1702404	Identifier	errstack		1702272	0					
ANR	1702405	Identifier	getFullText		1702272	1					
ANR	1702406	ArgumentList			1702272	1					
ANR	1702407	ExpressionStatement	"EXCEPT ( ""Fatal log file monitoring error!\\n"" )"	889:2:21281:21327	1702272	17	True				
ANR	1702408	CallExpression	"EXCEPT ( ""Fatal log file monitoring error!\\n"" )"		1702272	0					
ANR	1702409	Callee	EXCEPT		1702272	0					
ANR	1702410	Identifier	EXCEPT		1702272	0					
ANR	1702411	ArgumentList	"""Fatal log file monitoring error!\\n"""		1702272	1					
ANR	1702412	Argument	"""Fatal log file monitoring error!\\n"""		1702272	0					
ANR	1702413	PrimaryExpression	"""Fatal log file monitoring error!\\n"""		1702272	0					
ANR	1702414	IfStatement	if ( result )		1702272	7					
ANR	1702415	Condition	result	892:6:21339:21344	1702272	0	True				
ANR	1702416	Identifier	result		1702272	0					
ANR	1702417	CompoundStatement		27:15:856:856	1702272	1					
ANR	1702418	Statement	delete	893:2:21352:21357	1702272	0	True				
ANR	1702419	Statement	[	893:9:21359:21359	1702272	1	True				
ANR	1702420	Statement	]	893:10:21360:21360	1702272	2	True				
ANR	1702421	ExpressionStatement	_logFile	893:12:21362:21370	1702272	3	True				
ANR	1702422	Identifier	_logFile		1702272	0					
ANR	1702423	ExpressionStatement	_logFile = NULL	894:2:21374:21389	1702272	4	True				
ANR	1702424	AssignmentExpression	_logFile = NULL		1702272	0		=			
ANR	1702425	Identifier	_logFile		1702272	0					
ANR	1702426	Identifier	NULL		1702272	1					
ANR	1702427	ExpressionStatement	_logIsMonitored = false	895:2:21393:21416	1702272	5	True				
ANR	1702428	AssignmentExpression	_logIsMonitored = false		1702272	0		=			
ANR	1702429	Identifier	_logIsMonitored		1702272	0					
ANR	1702430	Identifier	false		1702272	1					
ANR	1702431	ReturnStatement	return result ;	898:1:21423:21436	1702272	8	True				
ANR	1702432	Identifier	result		1702272	0					
ANR	1702433	ReturnType	bool		1702272	1					
ANR	1702434	Identifier	Job :: UnmonitorLogFile		1702272	2					
ANR	1702435	ParameterList	"ReadMultipleUserLogs & condorLogReader , ReadMultipleUserLogs & storkLogReader"		1702272	3					
ANR	1702436	Parameter	ReadMultipleUserLogs & condorLogReader	864:23:20410:20446	1702272	0	True				
ANR	1702437	ParameterType	ReadMultipleUserLogs &		1702272	0					
ANR	1702438	Identifier	condorLogReader		1702272	1					
ANR	1702439	Parameter	ReadMultipleUserLogs & storkLogReader	865:3:20452:20487	1702272	1	True				
ANR	1702440	ParameterType	ReadMultipleUserLogs &		1702272	0					
ANR	1702441	Identifier	storkLogReader		1702272	1					
ANR	1702442	CFGEntryNode	ENTRY		1702272		True				
ANR	1702443	CFGExitNode	EXIT		1702272		True				
ANR	1702444	Symbol	_jobType		1702272						
ANR	1702445	Symbol	TYPE_CONDOR		1702272						
ANR	1702446	Symbol	logReader . unmonitorLogFile		1702272						
ANR	1702447	Symbol	NULL		1702272						
ANR	1702448	Symbol	_logFile		1702272						
ANR	1702449	Symbol	false		1702272						
ANR	1702450	Symbol	logReader		1702272						
ANR	1702451	Symbol	_logIsMonitored		1702272						
ANR	1702452	Symbol	DEBUG_QUIET		1702272						
ANR	1702453	Symbol	storkLogReader		1702272						
ANR	1702454	Symbol	result		1702272						
ANR	1702455	Symbol	condorLogReader		1702272						
ANR	1702456	Symbol	errstack		1702272						
ANR	1702457	Symbol	GetJobName		1702272						
ANR	1702458	Symbol	DEBUG_DEBUG_2		1702272						
ANR	1702459	Symbol	true		1702272						
ANR	1702460	Symbol	errstack . getFullText		1702272						
ANR	1702461	Symbol	DEBUG_DEBUG_1		1702272						
ANR	1702462	Symbol	GetLogFile		1702272						
ANR	1702463	Function	Job :: LogMonitorFailed	902:0:21519:21881							
ANR	1702464	FunctionDef	Job :: LogMonitorFailed ()		1702463	0					
ANR	1702465	CompoundStatement		904:0:21548:21881	1702463	0					
ANR	1702466	IfStatement	if ( _Status != Job :: STATUS_ERROR )		1702463	0					
ANR	1702467	Condition	_Status != Job :: STATUS_ERROR	905:6:21556:21583	1702463	0	True				
ANR	1702468	EqualityExpression	_Status != Job :: STATUS_ERROR		1702463	0		!=			
ANR	1702469	Identifier	_Status		1702463	0					
ANR	1702470	Identifier	Job :: STATUS_ERROR		1702463	1					
ANR	1702471	CompoundStatement		2:37:38:38	1702463	1					
ANR	1702472	ExpressionStatement	_Status = Job :: STATUS_ERROR	906:2:21591:21618	1702463	0	True				
ANR	1702473	AssignmentExpression	_Status = Job :: STATUS_ERROR		1702463	0		=			
ANR	1702474	Identifier	_Status		1702463	0					
ANR	1702475	Identifier	Job :: STATUS_ERROR		1702463	1					
ANR	1702476	ExpressionStatement	"snprintf ( error_text , JOB_ERROR_TEXT_MAXLEN , ""Unable to monitor node job log file"" )"	907:2:21622:21711	1702463	1	True				
ANR	1702477	CallExpression	"snprintf ( error_text , JOB_ERROR_TEXT_MAXLEN , ""Unable to monitor node job log file"" )"		1702463	0					
ANR	1702478	Callee	snprintf		1702463	0					
ANR	1702479	Identifier	snprintf		1702463	0					
ANR	1702480	ArgumentList	error_text		1702463	1					
ANR	1702481	Argument	error_text		1702463	0					
ANR	1702482	Identifier	error_text		1702463	0					
ANR	1702483	Argument	JOB_ERROR_TEXT_MAXLEN		1702463	1					
ANR	1702484	Identifier	JOB_ERROR_TEXT_MAXLEN		1702463	0					
ANR	1702485	Argument	"""Unable to monitor node job log file"""		1702463	2					
ANR	1702486	PrimaryExpression	"""Unable to monitor node job log file"""		1702463	0					
ANR	1702487	ExpressionStatement	retval = Dag :: DAG_ERROR_LOG_MONITOR_ERROR	909:2:21715:21756	1702463	2	True				
ANR	1702488	AssignmentExpression	retval = Dag :: DAG_ERROR_LOG_MONITOR_ERROR		1702463	0		=			
ANR	1702489	Identifier	retval		1702463	0					
ANR	1702490	Identifier	Dag :: DAG_ERROR_LOG_MONITOR_ERROR		1702463	1					
ANR	1702491	IfStatement	if ( _scriptPost != NULL )		1702463	3					
ANR	1702492	Condition	_scriptPost != NULL	910:7:21765:21783	1702463	0	True				
ANR	1702493	EqualityExpression	_scriptPost != NULL		1702463	0		!=			
ANR	1702494	Identifier	_scriptPost		1702463	0					
ANR	1702495	Identifier	NULL		1702463	1					
ANR	1702496	CompoundStatement		7:28:237:237	1702463	1					
ANR	1702497	ExpressionStatement	_scriptPost -> _retValJob = retval	912:3:21840:21872	1702463	0	True				
ANR	1702498	AssignmentExpression	_scriptPost -> _retValJob = retval		1702463	0		=			
ANR	1702499	PtrMemberAccess	_scriptPost -> _retValJob		1702463	0					
ANR	1702500	Identifier	_scriptPost		1702463	0					
ANR	1702501	Identifier	_retValJob		1702463	1					
ANR	1702502	Identifier	retval		1702463	1					
ANR	1702503	ReturnType	void		1702463	1					
ANR	1702504	Identifier	Job :: LogMonitorFailed		1702463	2					
ANR	1702505	ParameterList			1702463	3					
ANR	1702506	CFGEntryNode	ENTRY		1702463		True				
ANR	1702507	CFGExitNode	EXIT		1702463		True				
ANR	1702508	Symbol	_scriptPost -> _retValJob		1702463						
ANR	1702509	Symbol	error_text		1702463						
ANR	1702510	Symbol	_Status		1702463						
ANR	1702511	Symbol	JOB_ERROR_TEXT_MAXLEN		1702463						
ANR	1702512	Symbol	NULL		1702463						
ANR	1702513	Symbol	_scriptPost		1702463						
ANR	1702514	Symbol	* _scriptPost		1702463						
ANR	1702515	Symbol	Job :: STATUS_ERROR		1702463						
ANR	1702516	Symbol	Dag :: DAG_ERROR_LOG_MONITOR_ERROR		1702463						
ANR	1702517	Symbol	retval		1702463						
ANR	1702518	Function	Job :: GetJobstateJobTag	918:0:21962:22866							
ANR	1702519	FunctionDef	Job :: GetJobstateJobTag ()		1702518	0					
ANR	1702520	CompoundStatement		920:0:22000:22866	1702518	0					
ANR	1702521	IfStatement	if ( ! _jobTag )		1702518	0					
ANR	1702522	Condition	! _jobTag	921:6:22008:22015	1702518	0	True				
ANR	1702523	UnaryOperationExpression	! _jobTag		1702518	0					
ANR	1702524	UnaryOperator	!		1702518	0					
ANR	1702525	Identifier	_jobTag		1702518	1					
ANR	1702526	CompoundStatement		15:2:419:524	1702518	1					
ANR	1702527	IdentifierDeclStatement	"MyString jobTagName = MultiLogFiles :: loadValueFromSubFile ( _cmdFile , _directory , JOB_TAG_NAME ) ;"	922:2:22023:22123	1702518	0	True				
ANR	1702528	IdentifierDecl	"jobTagName = MultiLogFiles :: loadValueFromSubFile ( _cmdFile , _directory , JOB_TAG_NAME )"		1702518	0					
ANR	1702529	IdentifierDeclType	MyString		1702518	0					
ANR	1702530	Identifier	jobTagName		1702518	1					
ANR	1702531	AssignmentExpression	"jobTagName = MultiLogFiles :: loadValueFromSubFile ( _cmdFile , _directory , JOB_TAG_NAME )"		1702518	2		=			
ANR	1702532	Identifier	jobTagName		1702518	0					
ANR	1702533	CallExpression	"MultiLogFiles :: loadValueFromSubFile ( _cmdFile , _directory , JOB_TAG_NAME )"		1702518	1					
ANR	1702534	Callee	MultiLogFiles :: loadValueFromSubFile		1702518	0					
ANR	1702535	Identifier	MultiLogFiles :: loadValueFromSubFile		1702518	0					
ANR	1702536	ArgumentList	_cmdFile		1702518	1					
ANR	1702537	Argument	_cmdFile		1702518	0					
ANR	1702538	Identifier	_cmdFile		1702518	0					
ANR	1702539	Argument	_directory		1702518	1					
ANR	1702540	Identifier	_directory		1702518	0					
ANR	1702541	Argument	JOB_TAG_NAME		1702518	2					
ANR	1702542	Identifier	JOB_TAG_NAME		1702518	0					
ANR	1702543	IfStatement	"if ( jobTagName == """" )"		1702518	1					
ANR	1702544	Condition	"jobTagName == """""	924:7:22132:22147	1702518	0	True				
ANR	1702545	EqualityExpression	"jobTagName == """""		1702518	0		==			
ANR	1702546	Identifier	jobTagName		1702518	0					
ANR	1702547	PrimaryExpression	""""""		1702518	1					
ANR	1702548	CompoundStatement		5:26:150:150	1702518	1					
ANR	1702549	ExpressionStatement	jobTagName = PEGASUS_SITE	925:3:22156:22181	1702518	0	True				
ANR	1702550	AssignmentExpression	jobTagName = PEGASUS_SITE		1702518	0		=			
ANR	1702551	Identifier	jobTagName		1702518	0					
ANR	1702552	Identifier	PEGASUS_SITE		1702518	1					
ANR	1702553	ElseStatement	else		1702518	0					
ANR	1702554	CompoundStatement		11:3:309:361	1702518	0					
ANR	1702555	IdentifierDeclStatement	"int begin = jobTagName [ 0 ] == '\\""' ? 1 : 0 ;"	928:3:22225:22266	1702518	0	True				
ANR	1702556	IdentifierDecl	"begin = jobTagName [ 0 ] == '\\""' ? 1 : 0"		1702518	0					
ANR	1702557	IdentifierDeclType	int		1702518	0					
ANR	1702558	Identifier	begin		1702518	1					
ANR	1702559	AssignmentExpression	"begin = jobTagName [ 0 ] == '\\""' ? 1 : 0"		1702518	2		=			
ANR	1702560	Identifier	begin		1702518	0					
ANR	1702561	ConditionalExpression	"jobTagName [ 0 ] == '\\""' ? 1 : 0"		1702518	1					
ANR	1702562	Condition	"jobTagName [ 0 ] == '\\""'"		1702518	0					
ANR	1702563	EqualityExpression	"jobTagName [ 0 ] == '\\""'"		1702518	0		==			
ANR	1702564	ArrayIndexing	jobTagName [ 0 ]		1702518	0					
ANR	1702565	Identifier	jobTagName		1702518	0					
ANR	1702566	PrimaryExpression	0		1702518	1					
ANR	1702567	PrimaryExpression	"'\\""'"		1702518	1					
ANR	1702568	PrimaryExpression	1		1702518	1					
ANR	1702569	PrimaryExpression	0		1702518	2					
ANR	1702570	IdentifierDeclStatement	int last = jobTagName . Length ( ) - 1 ;	929:3:22271:22305	1702518	1	True				
ANR	1702571	IdentifierDecl	last = jobTagName . Length ( ) - 1		1702518	0					
ANR	1702572	IdentifierDeclType	int		1702518	0					
ANR	1702573	Identifier	last		1702518	1					
ANR	1702574	AssignmentExpression	last = jobTagName . Length ( ) - 1		1702518	2		=			
ANR	1702575	Identifier	last		1702518	0					
ANR	1702576	AdditiveExpression	jobTagName . Length ( ) - 1		1702518	1		-			
ANR	1702577	CallExpression	jobTagName . Length ( )		1702518	0					
ANR	1702578	Callee	jobTagName . Length		1702518	0					
ANR	1702579	MemberAccess	jobTagName . Length		1702518	0					
ANR	1702580	Identifier	jobTagName		1702518	0					
ANR	1702581	Identifier	Length		1702518	1					
ANR	1702582	ArgumentList			1702518	1					
ANR	1702583	PrimaryExpression	1		1702518	1					
ANR	1702584	IdentifierDeclStatement	"int end = jobTagName [ last ] == '\\""' ? last - 1 : last ;"	930:3:22310:22362	1702518	2	True				
ANR	1702585	IdentifierDecl	"end = jobTagName [ last ] == '\\""' ? last - 1 : last"		1702518	0					
ANR	1702586	IdentifierDeclType	int		1702518	0					
ANR	1702587	Identifier	end		1702518	1					
ANR	1702588	AssignmentExpression	"end = jobTagName [ last ] == '\\""' ? last - 1 : last"		1702518	2		=			
ANR	1702589	Identifier	end		1702518	0					
ANR	1702590	ConditionalExpression	"jobTagName [ last ] == '\\""' ? last - 1 : last"		1702518	1					
ANR	1702591	Condition	"jobTagName [ last ] == '\\""'"		1702518	0					
ANR	1702592	EqualityExpression	"jobTagName [ last ] == '\\""'"		1702518	0		==			
ANR	1702593	ArrayIndexing	jobTagName [ last ]		1702518	0					
ANR	1702594	Identifier	jobTagName		1702518	0					
ANR	1702595	Identifier	last		1702518	1					
ANR	1702596	PrimaryExpression	"'\\""'"		1702518	1					
ANR	1702597	AdditiveExpression	last - 1		1702518	1		-			
ANR	1702598	Identifier	last		1702518	0					
ANR	1702599	PrimaryExpression	1		1702518	1					
ANR	1702600	Identifier	last		1702518	2					
ANR	1702601	ExpressionStatement	"jobTagName = jobTagName . Substr ( begin , end )"	931:3:22367:22411	1702518	3	True				
ANR	1702602	AssignmentExpression	"jobTagName = jobTagName . Substr ( begin , end )"		1702518	0		=			
ANR	1702603	Identifier	jobTagName		1702518	0					
ANR	1702604	CallExpression	"jobTagName . Substr ( begin , end )"		1702518	1					
ANR	1702605	Callee	jobTagName . Substr		1702518	0					
ANR	1702606	MemberAccess	jobTagName . Substr		1702518	0					
ANR	1702607	Identifier	jobTagName		1702518	0					
ANR	1702608	Identifier	Substr		1702518	1					
ANR	1702609	ArgumentList	begin		1702518	1					
ANR	1702610	Argument	begin		1702518	0					
ANR	1702611	Identifier	begin		1702518	0					
ANR	1702612	Argument	end		1702518	1					
ANR	1702613	Identifier	end		1702518	0					
ANR	1702614	IdentifierDeclStatement	"MyString tmpJobTag = MultiLogFiles :: loadValueFromSubFile ( _cmdFile , _directory , jobTagName . Value ( ) ) ;"	934:2:22420:22525	1702518	2	True				
ANR	1702615	IdentifierDecl	"tmpJobTag = MultiLogFiles :: loadValueFromSubFile ( _cmdFile , _directory , jobTagName . Value ( ) )"		1702518	0					
ANR	1702616	IdentifierDeclType	MyString		1702518	0					
ANR	1702617	Identifier	tmpJobTag		1702518	1					
ANR	1702618	AssignmentExpression	"tmpJobTag = MultiLogFiles :: loadValueFromSubFile ( _cmdFile , _directory , jobTagName . Value ( ) )"		1702518	2		=			
ANR	1702619	Identifier	tmpJobTag		1702518	0					
ANR	1702620	CallExpression	"MultiLogFiles :: loadValueFromSubFile ( _cmdFile , _directory , jobTagName . Value ( ) )"		1702518	1					
ANR	1702621	Callee	MultiLogFiles :: loadValueFromSubFile		1702518	0					
ANR	1702622	Identifier	MultiLogFiles :: loadValueFromSubFile		1702518	0					
ANR	1702623	ArgumentList	_cmdFile		1702518	1					
ANR	1702624	Argument	_cmdFile		1702518	0					
ANR	1702625	Identifier	_cmdFile		1702518	0					
ANR	1702626	Argument	_directory		1702518	1					
ANR	1702627	Identifier	_directory		1702518	0					
ANR	1702628	Argument	jobTagName . Value ( )		1702518	2					
ANR	1702629	CallExpression	jobTagName . Value ( )		1702518	0					
ANR	1702630	Callee	jobTagName . Value		1702518	0					
ANR	1702631	MemberAccess	jobTagName . Value		1702518	0					
ANR	1702632	Identifier	jobTagName		1702518	0					
ANR	1702633	Identifier	Value		1702518	1					
ANR	1702634	ArgumentList			1702518	1					
ANR	1702635	IfStatement	"if ( tmpJobTag == """" )"		1702518	3					
ANR	1702636	Condition	"tmpJobTag == """""	936:7:22534:22548	1702518	0	True				
ANR	1702637	EqualityExpression	"tmpJobTag == """""		1702518	0		==			
ANR	1702638	Identifier	tmpJobTag		1702518	0					
ANR	1702639	PrimaryExpression	""""""		1702518	1					
ANR	1702640	CompoundStatement		17:25:551:551	1702518	1					
ANR	1702641	ExpressionStatement	"tmpJobTag = ""-"""	937:3:22557:22572	1702518	0	True				
ANR	1702642	AssignmentExpression	"tmpJobTag = ""-"""		1702518	0		=			
ANR	1702643	Identifier	tmpJobTag		1702518	0					
ANR	1702644	PrimaryExpression	"""-"""		1702518	1					
ANR	1702645	ElseStatement	else		1702518	0					
ANR	1702646	CompoundStatement		23:3:698:749	1702518	0					
ANR	1702647	IdentifierDeclStatement	"int begin = tmpJobTag [ 0 ] == '\\""' ? 1 : 0 ;"	940:3:22616:22656	1702518	0	True				
ANR	1702648	IdentifierDecl	"begin = tmpJobTag [ 0 ] == '\\""' ? 1 : 0"		1702518	0					
ANR	1702649	IdentifierDeclType	int		1702518	0					
ANR	1702650	Identifier	begin		1702518	1					
ANR	1702651	AssignmentExpression	"begin = tmpJobTag [ 0 ] == '\\""' ? 1 : 0"		1702518	2		=			
ANR	1702652	Identifier	begin		1702518	0					
ANR	1702653	ConditionalExpression	"tmpJobTag [ 0 ] == '\\""' ? 1 : 0"		1702518	1					
ANR	1702654	Condition	"tmpJobTag [ 0 ] == '\\""'"		1702518	0					
ANR	1702655	EqualityExpression	"tmpJobTag [ 0 ] == '\\""'"		1702518	0		==			
ANR	1702656	ArrayIndexing	tmpJobTag [ 0 ]		1702518	0					
ANR	1702657	Identifier	tmpJobTag		1702518	0					
ANR	1702658	PrimaryExpression	0		1702518	1					
ANR	1702659	PrimaryExpression	"'\\""'"		1702518	1					
ANR	1702660	PrimaryExpression	1		1702518	1					
ANR	1702661	PrimaryExpression	0		1702518	2					
ANR	1702662	IdentifierDeclStatement	int last = tmpJobTag . Length ( ) - 1 ;	941:3:22661:22694	1702518	1	True				
ANR	1702663	IdentifierDecl	last = tmpJobTag . Length ( ) - 1		1702518	0					
ANR	1702664	IdentifierDeclType	int		1702518	0					
ANR	1702665	Identifier	last		1702518	1					
ANR	1702666	AssignmentExpression	last = tmpJobTag . Length ( ) - 1		1702518	2		=			
ANR	1702667	Identifier	last		1702518	0					
ANR	1702668	AdditiveExpression	tmpJobTag . Length ( ) - 1		1702518	1		-			
ANR	1702669	CallExpression	tmpJobTag . Length ( )		1702518	0					
ANR	1702670	Callee	tmpJobTag . Length		1702518	0					
ANR	1702671	MemberAccess	tmpJobTag . Length		1702518	0					
ANR	1702672	Identifier	tmpJobTag		1702518	0					
ANR	1702673	Identifier	Length		1702518	1					
ANR	1702674	ArgumentList			1702518	1					
ANR	1702675	PrimaryExpression	1		1702518	1					
ANR	1702676	IdentifierDeclStatement	"int end = tmpJobTag [ last ] == '\\""' ? last - 1 : last ;"	942:3:22699:22750	1702518	2	True				
ANR	1702677	IdentifierDecl	"end = tmpJobTag [ last ] == '\\""' ? last - 1 : last"		1702518	0					
ANR	1702678	IdentifierDeclType	int		1702518	0					
ANR	1702679	Identifier	end		1702518	1					
ANR	1702680	AssignmentExpression	"end = tmpJobTag [ last ] == '\\""' ? last - 1 : last"		1702518	2		=			
ANR	1702681	Identifier	end		1702518	0					
ANR	1702682	ConditionalExpression	"tmpJobTag [ last ] == '\\""' ? last - 1 : last"		1702518	1					
ANR	1702683	Condition	"tmpJobTag [ last ] == '\\""'"		1702518	0					
ANR	1702684	EqualityExpression	"tmpJobTag [ last ] == '\\""'"		1702518	0		==			
ANR	1702685	ArrayIndexing	tmpJobTag [ last ]		1702518	0					
ANR	1702686	Identifier	tmpJobTag		1702518	0					
ANR	1702687	Identifier	last		1702518	1					
ANR	1702688	PrimaryExpression	"'\\""'"		1702518	1					
ANR	1702689	AdditiveExpression	last - 1		1702518	1		-			
ANR	1702690	Identifier	last		1702518	0					
ANR	1702691	PrimaryExpression	1		1702518	1					
ANR	1702692	Identifier	last		1702518	2					
ANR	1702693	ExpressionStatement	"tmpJobTag = tmpJobTag . Substr ( begin , end )"	943:3:22755:22797	1702518	3	True				
ANR	1702694	AssignmentExpression	"tmpJobTag = tmpJobTag . Substr ( begin , end )"		1702518	0		=			
ANR	1702695	Identifier	tmpJobTag		1702518	0					
ANR	1702696	CallExpression	"tmpJobTag . Substr ( begin , end )"		1702518	1					
ANR	1702697	Callee	tmpJobTag . Substr		1702518	0					
ANR	1702698	MemberAccess	tmpJobTag . Substr		1702518	0					
ANR	1702699	Identifier	tmpJobTag		1702518	0					
ANR	1702700	Identifier	Substr		1702518	1					
ANR	1702701	ArgumentList	begin		1702518	1					
ANR	1702702	Argument	begin		1702518	0					
ANR	1702703	Identifier	begin		1702518	0					
ANR	1702704	Argument	end		1702518	1					
ANR	1702705	Identifier	end		1702518	0					
ANR	1702706	ExpressionStatement	_jobTag = strnewp ( tmpJobTag . Value ( ) )	945:2:22805:22843	1702518	4	True				
ANR	1702707	AssignmentExpression	_jobTag = strnewp ( tmpJobTag . Value ( ) )		1702518	0		=			
ANR	1702708	Identifier	_jobTag		1702518	0					
ANR	1702709	CallExpression	strnewp ( tmpJobTag . Value ( ) )		1702518	1					
ANR	1702710	Callee	strnewp		1702518	0					
ANR	1702711	Identifier	strnewp		1702518	0					
ANR	1702712	ArgumentList	tmpJobTag . Value ( )		1702518	1					
ANR	1702713	Argument	tmpJobTag . Value ( )		1702518	0					
ANR	1702714	CallExpression	tmpJobTag . Value ( )		1702518	0					
ANR	1702715	Callee	tmpJobTag . Value		1702518	0					
ANR	1702716	MemberAccess	tmpJobTag . Value		1702518	0					
ANR	1702717	Identifier	tmpJobTag		1702518	0					
ANR	1702718	Identifier	Value		1702518	1					
ANR	1702719	ArgumentList			1702518	1					
ANR	1702720	ReturnStatement	return _jobTag ;	948:1:22850:22864	1702518	1	True				
ANR	1702721	Identifier	_jobTag		1702518	0					
ANR	1702722	ReturnType	const char *		1702518	1					
ANR	1702723	Identifier	Job :: GetJobstateJobTag		1702518	2					
ANR	1702724	ParameterList			1702518	3					
ANR	1702725	CFGEntryNode	ENTRY		1702518		True				
ANR	1702726	CFGExitNode	EXIT		1702518		True				
ANR	1702727	Symbol	jobTagName		1702518						
ANR	1702728	Symbol	tmpJobTag . Value		1702518						
ANR	1702729	Symbol	last		1702518						
ANR	1702730	Symbol	tmpJobTag . Substr		1702518						
ANR	1702731	Symbol	_jobTag		1702518						
ANR	1702732	Symbol	jobTagName . Substr		1702518						
ANR	1702733	Symbol	_cmdFile		1702518						
ANR	1702734	Symbol	* last		1702518						
ANR	1702735	Symbol	_directory		1702518						
ANR	1702736	Symbol	JOB_TAG_NAME		1702518						
ANR	1702737	Symbol	jobTagName . Length		1702518						
ANR	1702738	Symbol	tmpJobTag		1702518						
ANR	1702739	Symbol	PEGASUS_SITE		1702518						
ANR	1702740	Symbol	strnewp		1702518						
ANR	1702741	Symbol	end		1702518						
ANR	1702742	Symbol	* jobTagName		1702518						
ANR	1702743	Symbol	MultiLogFiles :: loadValueFromSubFile		1702518						
ANR	1702744	Symbol	jobTagName . Value		1702518						
ANR	1702745	Symbol	begin		1702518						
ANR	1702746	Symbol	* tmpJobTag		1702518						
ANR	1702747	Symbol	tmpJobTag . Length		1702518						
ANR	1702748	Function	Job :: GetJobstateSequenceNum	952:0:22947:23086							
ANR	1702749	FunctionDef	Job :: GetJobstateSequenceNum ()		1702748	0					
ANR	1702750	CompoundStatement		954:0:22981:23086	1702748	0					
ANR	1702751	IfStatement	if ( _jobstateSeqNum == 0 )		1702748	0					
ANR	1702752	Condition	_jobstateSeqNum == 0	955:6:22989:23008	1702748	0	True				
ANR	1702753	EqualityExpression	_jobstateSeqNum == 0		1702748	0		==			
ANR	1702754	Identifier	_jobstateSeqNum		1702748	0					
ANR	1702755	PrimaryExpression	0		1702748	1					
ANR	1702756	CompoundStatement		2:29:30:30	1702748	1					
ANR	1702757	ExpressionStatement	_jobstateSeqNum = _nextJobstateSeqNum ++	956:2:23016:23055	1702748	0	True				
ANR	1702758	AssignmentExpression	_jobstateSeqNum = _nextJobstateSeqNum ++		1702748	0		=			
ANR	1702759	Identifier	_jobstateSeqNum		1702748	0					
ANR	1702760	PostIncDecOperationExpression	_nextJobstateSeqNum ++		1702748	1					
ANR	1702761	Identifier	_nextJobstateSeqNum		1702748	0					
ANR	1702762	IncDec	++		1702748	1					
ANR	1702763	ReturnStatement	return _jobstateSeqNum ;	959:1:23062:23084	1702748	1	True				
ANR	1702764	Identifier	_jobstateSeqNum		1702748	0					
ANR	1702765	ReturnType	int		1702748	1					
ANR	1702766	Identifier	Job :: GetJobstateSequenceNum		1702748	2					
ANR	1702767	ParameterList			1702748	3					
ANR	1702768	CFGEntryNode	ENTRY		1702748		True				
ANR	1702769	CFGExitNode	EXIT		1702748		True				
ANR	1702770	Symbol	_nextJobstateSeqNum		1702748						
ANR	1702771	Symbol	_jobstateSeqNum		1702748						
ANR	1702772	Function	Job :: SetLastEventTime	963:0:23167:23299							
ANR	1702773	FunctionDef	Job :: SetLastEventTime (const ULogEvent * event)		1702772	0					
ANR	1702774	CompoundStatement		965:0:23220:23299	1702772	0					
ANR	1702775	IdentifierDeclStatement	struct tm eventTm = event -> eventTime ;	966:1:23223:23259	1702772	0	True				
ANR	1702776	IdentifierDecl	eventTm = event -> eventTime		1702772	0					
ANR	1702777	IdentifierDeclType	struct tm		1702772	0					
ANR	1702778	Identifier	eventTm		1702772	1					
ANR	1702779	AssignmentExpression	eventTm = event -> eventTime		1702772	2		=			
ANR	1702780	Identifier	eventTm		1702772	0					
ANR	1702781	PtrMemberAccess	event -> eventTime		1702772	1					
ANR	1702782	Identifier	event		1702772	0					
ANR	1702783	Identifier	eventTime		1702772	1					
ANR	1702784	ExpressionStatement	_lastEventTime = mktime ( & eventTm )	967:1:23262:23297	1702772	1	True				
ANR	1702785	AssignmentExpression	_lastEventTime = mktime ( & eventTm )		1702772	0		=			
ANR	1702786	Identifier	_lastEventTime		1702772	0					
ANR	1702787	CallExpression	mktime ( & eventTm )		1702772	1					
ANR	1702788	Callee	mktime		1702772	0					
ANR	1702789	Identifier	mktime		1702772	0					
ANR	1702790	ArgumentList	& eventTm		1702772	1					
ANR	1702791	Argument	& eventTm		1702772	0					
ANR	1702792	UnaryOperationExpression	& eventTm		1702772	0					
ANR	1702793	UnaryOperator	&		1702772	0					
ANR	1702794	Identifier	eventTm		1702772	1					
ANR	1702795	ReturnType	void		1702772	1					
ANR	1702796	Identifier	Job :: SetLastEventTime		1702772	2					
ANR	1702797	ParameterList	const ULogEvent * event		1702772	3					
ANR	1702798	Parameter	const ULogEvent * event	964:23:23195:23216	1702772	0	True				
ANR	1702799	ParameterType	const ULogEvent *		1702772	0					
ANR	1702800	Identifier	event		1702772	1					
ANR	1702801	CFGEntryNode	ENTRY		1702772		True				
ANR	1702802	CFGExitNode	EXIT		1702772		True				
ANR	1702803	Symbol	mktime		1702772						
ANR	1702804	Symbol	* event		1702772						
ANR	1702805	Symbol	event -> eventTime		1702772						
ANR	1702806	Symbol	eventTm		1702772						
ANR	1702807	Symbol	& eventTm		1702772						
ANR	1702808	Symbol	_lastEventTime		1702772						
ANR	1702809	Symbol	event		1702772						
ANR	1702810	Function	Job :: GetPreSkip	971:0:23380:23535							
ANR	1702811	FunctionDef	Job :: GetPreSkip ()		1702810	0					
ANR	1702812	CompoundStatement		973:0:23408:23535	1702810	0					
ANR	1702813	IfStatement	if ( ! HasPreSkip ( ) )		1702810	0					
ANR	1702814	Condition	! HasPreSkip ( )	974:5:23415:23427	1702810	0	True				
ANR	1702815	UnaryOperationExpression	! HasPreSkip ( )		1702810	0					
ANR	1702816	UnaryOperator	!		1702810	0					
ANR	1702817	CallExpression	HasPreSkip ( )		1702810	1					
ANR	1702818	Callee	HasPreSkip		1702810	0					
ANR	1702819	Identifier	HasPreSkip		1702810	0					
ANR	1702820	ArgumentList			1702810	1					
ANR	1702821	CompoundStatement		2:21:22:22	1702810	1					
ANR	1702822	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""Evaluating PRE_SKIP... It is not defined.\\n"" )"	975:2:23435:23512	1702810	0	True				
ANR	1702823	CallExpression	"debug_printf ( DEBUG_QUIET , ""Evaluating PRE_SKIP... It is not defined.\\n"" )"		1702810	0					
ANR	1702824	Callee	debug_printf		1702810	0					
ANR	1702825	Identifier	debug_printf		1702810	0					
ANR	1702826	ArgumentList	DEBUG_QUIET		1702810	1					
ANR	1702827	Argument	DEBUG_QUIET		1702810	0					
ANR	1702828	Identifier	DEBUG_QUIET		1702810	0					
ANR	1702829	Argument	"""Evaluating PRE_SKIP... It is not defined.\\n"""		1702810	1					
ANR	1702830	PrimaryExpression	"""Evaluating PRE_SKIP... It is not defined.\\n"""		1702810	0					
ANR	1702831	ReturnStatement	return _preskip ;	978:1:23518:23533	1702810	1	True				
ANR	1702832	Identifier	_preskip		1702810	0					
ANR	1702833	ReturnType	int		1702810	1					
ANR	1702834	Identifier	Job :: GetPreSkip		1702810	2					
ANR	1702835	ParameterList			1702810	3					
ANR	1702836	CFGEntryNode	ENTRY		1702810		True				
ANR	1702837	CFGExitNode	EXIT		1702810		True				
ANR	1702838	Symbol	_preskip		1702810						
ANR	1702839	Symbol	HasPreSkip		1702810						
ANR	1702840	Symbol	DEBUG_QUIET		1702810						
ANR	1702841	Function	Job :: FixPriority	994:0:24235:24650							
ANR	1702842	FunctionDef	Job :: FixPriority (Dag & dag)		1702841	0					
ANR	1702843	CompoundStatement		996:0:24267:24650	1702841	0					
ANR	1702844	IdentifierDeclStatement	set < JobID_t > parents = GetQueueRef ( Q_PARENTS ) ;	997:1:24270:24315	1702841	0	True				
ANR	1702845	IdentifierDecl	parents = GetQueueRef ( Q_PARENTS )		1702841	0					
ANR	1702846	IdentifierDeclType	set < JobID_t >		1702841	0					
ANR	1702847	Identifier	parents		1702841	1					
ANR	1702848	AssignmentExpression	parents = GetQueueRef ( Q_PARENTS )		1702841	2		=			
ANR	1702849	Identifier	parents		1702841	0					
ANR	1702850	CallExpression	GetQueueRef ( Q_PARENTS )		1702841	1					
ANR	1702851	Callee	GetQueueRef		1702841	0					
ANR	1702852	Identifier	GetQueueRef		1702841	0					
ANR	1702853	ArgumentList	Q_PARENTS		1702841	1					
ANR	1702854	Argument	Q_PARENTS		1702841	0					
ANR	1702855	Identifier	Q_PARENTS		1702841	0					
ANR	1702856	ForStatement	for ( set < JobID_t > :: iterator p = parents . begin ( ) ; p != parents . end ( ) ; ++ p )		1702841	1					
ANR	1702857	ForInit	set < JobID_t > :: iterator p = parents . begin ( ) ;	998:5:24322:24364	1702841	0	True				
ANR	1702858	IdentifierDeclStatement	set < JobID_t > :: iterator p = parents . begin ( ) ;		1702841	0					
ANR	1702859	IdentifierDecl	p = parents . begin ( )		1702841	0					
ANR	1702860	IdentifierDeclType	set < JobID_t > :: iterator		1702841	0					
ANR	1702861	Identifier	p		1702841	1					
ANR	1702862	AssignmentExpression	p = parents . begin ( )		1702841	2		=			
ANR	1702863	Identifier	p		1702841	0					
ANR	1702864	CallExpression	parents . begin ( )		1702841	1					
ANR	1702865	Callee	parents . begin		1702841	0					
ANR	1702866	MemberAccess	parents . begin		1702841	0					
ANR	1702867	Identifier	parents		1702841	0					
ANR	1702868	Identifier	begin		1702841	1					
ANR	1702869	ArgumentList			1702841	1					
ANR	1702870	Condition	p != parents . end ( )	998:49:24366:24383	1702841	1	True				
ANR	1702871	EqualityExpression	p != parents . end ( )		1702841	0		!=			
ANR	1702872	Identifier	p		1702841	0					
ANR	1702873	CallExpression	parents . end ( )		1702841	1					
ANR	1702874	Callee	parents . end		1702841	0					
ANR	1702875	MemberAccess	parents . end		1702841	0					
ANR	1702876	Identifier	parents		1702841	0					
ANR	1702877	Identifier	end		1702841	1					
ANR	1702878	ArgumentList			1702841	1					
ANR	1702879	UnaryExpression	++ p	998:69:24386:24388	1702841	2	True				
ANR	1702880	IncDec	++		1702841	0					
ANR	1702881	Identifier	p		1702841	1					
ANR	1702882	CompoundStatement		4:2:126:164	1702841	3					
ANR	1702883	IdentifierDeclStatement	Job * parent = dag . FindNodeByNodeID ( * p ) ;	999:2:24394:24432	1702841	0	True				
ANR	1702884	IdentifierDecl	* parent = dag . FindNodeByNodeID ( * p )		1702841	0					
ANR	1702885	IdentifierDeclType	Job *		1702841	0					
ANR	1702886	Identifier	parent		1702841	1					
ANR	1702887	AssignmentExpression	* parent = dag . FindNodeByNodeID ( * p )		1702841	2		=			
ANR	1702888	Identifier	parent		1702841	0					
ANR	1702889	CallExpression	dag . FindNodeByNodeID ( * p )		1702841	1					
ANR	1702890	Callee	dag . FindNodeByNodeID		1702841	0					
ANR	1702891	MemberAccess	dag . FindNodeByNodeID		1702841	0					
ANR	1702892	Identifier	dag		1702841	0					
ANR	1702893	Identifier	FindNodeByNodeID		1702841	1					
ANR	1702894	ArgumentList	* p		1702841	1					
ANR	1702895	Argument	* p		1702841	0					
ANR	1702896	UnaryOperationExpression	* p		1702841	0					
ANR	1702897	UnaryOperator	*		1702841	0					
ANR	1702898	Identifier	p		1702841	1					
ANR	1702899	IfStatement	if ( parent -> _hasNodePriority )		1702841	1					
ANR	1702900	Condition	parent -> _hasNodePriority	1000:6:24440:24463	1702841	0	True				
ANR	1702901	PtrMemberAccess	parent -> _hasNodePriority		1702841	0					
ANR	1702902	Identifier	parent		1702841	0					
ANR	1702903	Identifier	_hasNodePriority		1702841	1					
ANR	1702904	CompoundStatement		5:33:199:199	1702841	1					
ANR	1702905	IfStatement	if ( parent -> _nodePriority > _nodePriority )		1702841	0					
ANR	1702906	Condition	parent -> _nodePriority > _nodePriority	1002:7:24524:24560	1702841	0	True				
ANR	1702907	RelationalExpression	parent -> _nodePriority > _nodePriority		1702841	0		>			
ANR	1702908	PtrMemberAccess	parent -> _nodePriority		1702841	0					
ANR	1702909	Identifier	parent		1702841	0					
ANR	1702910	Identifier	_nodePriority		1702841	1					
ANR	1702911	Identifier	_nodePriority		1702841	1					
ANR	1702912	CompoundStatement		7:47:296:296	1702841	1					
ANR	1702913	ExpressionStatement	_nodePriority = parent -> _nodePriority	1003:4:24570:24607	1702841	0	True				
ANR	1702914	AssignmentExpression	_nodePriority = parent -> _nodePriority		1702841	0		=			
ANR	1702915	Identifier	_nodePriority		1702841	0					
ANR	1702916	PtrMemberAccess	parent -> _nodePriority		1702841	1					
ANR	1702917	Identifier	parent		1702841	0					
ANR	1702918	Identifier	_nodePriority		1702841	1					
ANR	1702919	ExpressionStatement	_hasNodePriority = true	1004:4:24613:24636	1702841	1	True				
ANR	1702920	AssignmentExpression	_hasNodePriority = true		1702841	0		=			
ANR	1702921	Identifier	_hasNodePriority		1702841	0					
ANR	1702922	Identifier	true		1702841	1					
ANR	1702923	ReturnType	void		1702841	1					
ANR	1702924	Identifier	Job :: FixPriority		1702841	2					
ANR	1702925	ParameterList	Dag & dag		1702841	3					
ANR	1702926	Parameter	Dag & dag	995:17:24257:24264	1702841	0	True				
ANR	1702927	ParameterType	Dag &		1702841	0					
ANR	1702928	Identifier	dag		1702841	1					
ANR	1702929	CFGEntryNode	ENTRY		1702841		True				
ANR	1702930	CFGExitNode	EXIT		1702841		True				
ANR	1702931	Symbol	parent		1702841						
ANR	1702932	Symbol	GetQueueRef		1702841						
ANR	1702933	Symbol	Q_PARENTS		1702841						
ANR	1702934	Symbol	* parent		1702841						
ANR	1702935	Symbol	_hasNodePriority		1702841						
ANR	1702936	Symbol	dag		1702841						
ANR	1702937	Symbol	p		1702841						
ANR	1702938	Symbol	parents . end		1702841						
ANR	1702939	Symbol	parents . begin		1702841						
ANR	1702940	Symbol	parent -> _hasNodePriority		1702841						
ANR	1702941	Symbol	_nodePriority		1702841						
ANR	1702942	Symbol	true		1702841						
ANR	1702943	Symbol	* p		1702841						
ANR	1702944	Symbol	parents		1702841						
ANR	1702945	Symbol	dag . FindNodeByNodeID		1702841						
ANR	1702946	Symbol	parent -> _nodePriority		1702841						
