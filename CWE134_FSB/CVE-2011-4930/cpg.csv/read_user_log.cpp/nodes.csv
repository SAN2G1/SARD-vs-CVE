command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2144246	File	data/converged/CVE-2011-4930_htcondor/read_user_log.cpp								
ANR	2144247	DeclStmt									
ANR	2144248	Decl							const char	const char [ ]	SynchDelimiter
ANR	2144249	DeclStmt									
ANR	2144250	Decl							const int	const int	SCORE_THRESH_RESTORE
ANR	2144251	DeclStmt									
ANR	2144252	Decl							const int	const int	SCORE_THRESH_FWSEARCH
ANR	2144253	DeclStmt									
ANR	2144254	Decl							const int	const int	SCORE_THRESH_NONROT
ANR	2144255	DeclStmt									
ANR	2144256	Decl							const int	const int	SCORE_MIN_MATCH
ANR	2144257	DeclStmt									
ANR	2144258	Decl							const int	const int	SCORE_FACTOR_UNIQ_MATCH
ANR	2144259	DeclStmt									
ANR	2144260	Decl							const int	const int	SCORE_FACTOR_CTIME
ANR	2144261	DeclStmt									
ANR	2144262	Decl							const int	const int	SCORE_FACTOR_INODE
ANR	2144263	DeclStmt									
ANR	2144264	Decl							const int	const int	SCORE_FACTOR_CTIME
ANR	2144265	DeclStmt									
ANR	2144266	Decl							const int	const int	SCORE_FACTOR_INODE
ANR	2144267	DeclStmt									
ANR	2144268	Decl							const int	const int	SCORE_FACTOR_SAME_SIZE
ANR	2144269	DeclStmt									
ANR	2144270	Decl							const int	const int	SCORE_FACTOR_GROWN
ANR	2144271	DeclStmt									
ANR	2144272	Decl							const int	const int	SCORE_FACTOR_SHRUNK
ANR	2144273	DeclStmt									
ANR	2144274	Decl							const int	const int	SCORE_RECENT_THRESH
ANR	2144275	ClassDef	ReadUserLogMatch	74:0:2402:3564							
ANR	2144276	Function	ReadUserLogMatch	79:1:2466:2532							
ANR	2144277	FunctionDef	ReadUserLogMatch (ReadUserLogState * state)		2144276	0					
ANR	2144278	CompoundStatement		79:45:2510:2532	2144276	0					
ANR	2144279	ExpressionStatement	m_state = state	80:2:2514:2529	2144276	0	True				
ANR	2144280	AssignmentExpression	m_state = state		2144276	0		=			
ANR	2144281	Identifier	m_state		2144276	0					
ANR	2144282	Identifier	state		2144276	1					
ANR	2144283	Identifier	ReadUserLogMatch		2144276	1					
ANR	2144284	ParameterList	ReadUserLogState * state		2144276	2					
ANR	2144285	Parameter	ReadUserLogState * state	79:19:2484:2506	2144276	0	True				
ANR	2144286	ParameterType	ReadUserLogState *		2144276	0					
ANR	2144287	Identifier	state		2144276	1					
ANR	2144288	CFGEntryNode	ENTRY		2144276		True				
ANR	2144289	CFGExitNode	EXIT		2144276		True				
ANR	2144290	Symbol	m_state		2144276						
ANR	2144291	Symbol	state		2144276						
ANR	2144292	Function	~ReadUserLogMatch	83:1:2594:2622							
ANR	2144293	FunctionDef	~ReadUserLogMatch ()		2144292	1					
ANR	2144294	CompoundStatement		83:27:2620:2622	2144292	0					
ANR	2144295	Identifier	~ReadUserLogMatch		2144292	1					
ANR	2144296	ParameterList			2144292	2					
ANR	2144297	CFGEntryNode	ENTRY		2144292		True				
ANR	2144298	CFGExitNode	EXIT		2144292		True				
ANR	2144299	ClassDef	MatchResult	86:1:2655:2724							
ANR	2144300	DeclStmt									
ANR	2144301	Decl							ReadUserLogState	ReadUserLogState *	m_state
ANR	2144302	Function	ReadUserLog :: ReadUserLog	128:0:3674:3772							
ANR	2144303	FunctionDef	ReadUserLog :: ReadUserLog (bool isEventLog)		2144302	0					
ANR	2144304	CompoundStatement		129:0:3719:3772	2144302	0					
ANR	2144305	ExpressionStatement	clear ( )	130:1:3722:3729	2144302	0	True				
ANR	2144306	CallExpression	clear ( )		2144302	0					
ANR	2144307	Callee	clear		2144302	0					
ANR	2144308	Identifier	clear		2144302	0					
ANR	2144309	ArgumentList			2144302	1					
ANR	2144310	IfStatement	if ( isEventLog )		2144302	1					
ANR	2144311	Condition	isEventLog	131:6:3737:3746	2144302	0	True				
ANR	2144312	Identifier	isEventLog		2144302	0					
ANR	2144313	CompoundStatement		3:19:30:30	2144302	1					
ANR	2144314	ExpressionStatement	initialize ( )	132:2:3754:3767	2144302	0	True				
ANR	2144315	CallExpression	initialize ( )		2144302	0					
ANR	2144316	Callee	initialize		2144302	0					
ANR	2144317	Identifier	initialize		2144302	0					
ANR	2144318	ArgumentList			2144302	1					
ANR	2144319	Identifier	ReadUserLog :: ReadUserLog		2144302	1					
ANR	2144320	ParameterList	bool isEventLog		2144302	2					
ANR	2144321	Parameter	bool isEventLog	128:27:3701:3715	2144302	0	True				
ANR	2144322	ParameterType	bool		2144302	0					
ANR	2144323	Identifier	isEventLog		2144302	1					
ANR	2144324	CFGEntryNode	ENTRY		2144302		True				
ANR	2144325	CFGExitNode	EXIT		2144302		True				
ANR	2144326	Symbol	isEventLog		2144302						
ANR	2144327	Function	ReadUserLog :: ReadUserLog	136:0:3775:3973							
ANR	2144328	FunctionDef	"ReadUserLog :: ReadUserLog (const char * filename , bool read_only)"		2144327	0					
ANR	2144329	CompoundStatement		137:0:3841:3973	2144327	0					
ANR	2144330	ExpressionStatement	clear ( )	138:1:3844:3851	2144327	0	True				
ANR	2144331	CallExpression	clear ( )		2144327	0					
ANR	2144332	Callee	clear		2144327	0					
ANR	2144333	Identifier	clear		2144327	0					
ANR	2144334	ArgumentList			2144327	1					
ANR	2144335	IfStatement	"if ( ! initialize ( filename , false , false , read_only ) )"		2144327	1					
ANR	2144336	Condition	"! initialize ( filename , false , false , read_only )"	140:8:3862:3908	2144327	0	True				
ANR	2144337	UnaryOperationExpression	"! initialize ( filename , false , false , read_only )"		2144327	0					
ANR	2144338	UnaryOperator	!		2144327	0					
ANR	2144339	CallExpression	"initialize ( filename , false , false , read_only )"		2144327	1					
ANR	2144340	Callee	initialize		2144327	0					
ANR	2144341	Identifier	initialize		2144327	0					
ANR	2144342	ArgumentList	filename		2144327	1					
ANR	2144343	Argument	filename		2144327	0					
ANR	2144344	Identifier	filename		2144327	0					
ANR	2144345	Argument	false		2144327	1					
ANR	2144346	Identifier	false		2144327	0					
ANR	2144347	Argument	false		2144327	2					
ANR	2144348	Identifier	false		2144327	0					
ANR	2144349	Argument	read_only		2144327	3					
ANR	2144350	Identifier	read_only		2144327	0					
ANR	2144351	CompoundStatement		4:57:69:69	2144327	1					
ANR	2144352	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to open %s\\n"" , filename )"	141:2:3915:3965	2144327	0	True				
ANR	2144353	CallExpression	"dprintf ( D_ALWAYS , ""Failed to open %s\\n"" , filename )"		2144327	0					
ANR	2144354	Callee	dprintf		2144327	0					
ANR	2144355	Identifier	dprintf		2144327	0					
ANR	2144356	ArgumentList	D_ALWAYS		2144327	1					
ANR	2144357	Argument	D_ALWAYS		2144327	0					
ANR	2144358	Identifier	D_ALWAYS		2144327	0					
ANR	2144359	Argument	"""Failed to open %s\\n"""		2144327	1					
ANR	2144360	PrimaryExpression	"""Failed to open %s\\n"""		2144327	0					
ANR	2144361	Argument	filename		2144327	2					
ANR	2144362	Identifier	filename		2144327	0					
ANR	2144363	Identifier	ReadUserLog :: ReadUserLog		2144327	1					
ANR	2144364	ParameterList	"const char * filename , bool read_only"		2144327	2					
ANR	2144365	Parameter	const char * filename	136:26:3801:3821	2144327	0	True				
ANR	2144366	ParameterType	const char *		2144327	0					
ANR	2144367	Identifier	filename		2144327	1					
ANR	2144368	Parameter	bool read_only	136:49:3824:3837	2144327	1	True				
ANR	2144369	ParameterType	bool		2144327	0					
ANR	2144370	Identifier	read_only		2144327	1					
ANR	2144371	CFGEntryNode	ENTRY		2144327		True				
ANR	2144372	CFGExitNode	EXIT		2144327		True				
ANR	2144373	Symbol	filename		2144327						
ANR	2144374	Symbol	read_only		2144327						
ANR	2144375	Symbol	false		2144327						
ANR	2144376	Symbol	D_ALWAYS		2144327						
ANR	2144377	Symbol	initialize		2144327						
ANR	2144378	Function	ReadUserLog :: ReadUserLog	146:0:4010:4196							
ANR	2144379	FunctionDef	"ReadUserLog :: ReadUserLog (const FileState & state , bool read_only)"		2144378	0					
ANR	2144380	CompoundStatement		147:0:4077:4196	2144378	0					
ANR	2144381	ExpressionStatement	clear ( )	148:1:4080:4087	2144378	0	True				
ANR	2144382	CallExpression	clear ( )		2144378	0					
ANR	2144383	Callee	clear		2144378	0					
ANR	2144384	Identifier	clear		2144378	0					
ANR	2144385	ArgumentList			2144378	1					
ANR	2144386	IfStatement	"if ( ! initialize ( state , read_only ) )"		2144378	1					
ANR	2144387	Condition	"! initialize ( state , read_only )"	150:8:4098:4127	2144378	0	True				
ANR	2144388	UnaryOperationExpression	"! initialize ( state , read_only )"		2144378	0					
ANR	2144389	UnaryOperator	!		2144378	0					
ANR	2144390	CallExpression	"initialize ( state , read_only )"		2144378	1					
ANR	2144391	Callee	initialize		2144378	0					
ANR	2144392	Identifier	initialize		2144378	0					
ANR	2144393	ArgumentList	state		2144378	1					
ANR	2144394	Argument	state		2144378	0					
ANR	2144395	Identifier	state		2144378	0					
ANR	2144396	Argument	read_only		2144378	1					
ANR	2144397	Identifier	read_only		2144378	0					
ANR	2144398	CompoundStatement		4:40:52:52	2144378	1					
ANR	2144399	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to initialize from state\\n"" )"	151:2:4134:4188	2144378	0	True				
ANR	2144400	CallExpression	"dprintf ( D_ALWAYS , ""Failed to initialize from state\\n"" )"		2144378	0					
ANR	2144401	Callee	dprintf		2144378	0					
ANR	2144402	Identifier	dprintf		2144378	0					
ANR	2144403	ArgumentList	D_ALWAYS		2144378	1					
ANR	2144404	Argument	D_ALWAYS		2144378	0					
ANR	2144405	Identifier	D_ALWAYS		2144378	0					
ANR	2144406	Argument	"""Failed to initialize from state\\n"""		2144378	1					
ANR	2144407	PrimaryExpression	"""Failed to initialize from state\\n"""		2144378	0					
ANR	2144408	Identifier	ReadUserLog :: ReadUserLog		2144378	1					
ANR	2144409	ParameterList	"const FileState & state , bool read_only"		2144378	2					
ANR	2144410	Parameter	const FileState & state	146:26:4036:4057	2144378	0	True				
ANR	2144411	ParameterType	const FileState &		2144378	0					
ANR	2144412	Identifier	state		2144378	1					
ANR	2144413	Parameter	bool read_only	146:50:4060:4073	2144378	1	True				
ANR	2144414	ParameterType	bool		2144378	0					
ANR	2144415	Identifier	read_only		2144378	1					
ANR	2144416	CFGEntryNode	ENTRY		2144378		True				
ANR	2144417	CFGExitNode	EXIT		2144378		True				
ANR	2144418	Symbol	read_only		2144378						
ANR	2144419	Symbol	D_ALWAYS		2144378						
ANR	2144420	Symbol	state		2144378						
ANR	2144421	Symbol	initialize		2144378						
ANR	2144422	Function	ReadUserLog :: ReadUserLog	157:0:4316:4654							
ANR	2144423	FunctionDef	"ReadUserLog :: ReadUserLog (FILE * fp , bool is_xml , bool enable_close)"		2144422	0					
ANR	2144424	CompoundStatement		158:0:4386:4654	2144422	0					
ANR	2144425	ExpressionStatement	clear ( )	159:1:4389:4396	2144422	0	True				
ANR	2144426	CallExpression	clear ( )		2144422	0					
ANR	2144427	Callee	clear		2144422	0					
ANR	2144428	Identifier	clear		2144422	0					
ANR	2144429	ArgumentList			2144422	1					
ANR	2144430	IfStatement	if ( ! fp )		2144422	1					
ANR	2144431	Condition	! fp	160:6:4404:4407	2144422	0	True				
ANR	2144432	UnaryOperationExpression	! fp		2144422	0					
ANR	2144433	UnaryOperator	!		2144422	0					
ANR	2144434	Identifier	fp		2144422	1					
ANR	2144435	CompoundStatement		3:13:24:24	2144422	1					
ANR	2144436	ReturnStatement	return ;	161:2:4415:4421	2144422	0	True				
ANR	2144437	ExpressionStatement	m_fp = fp	163:1:4427:4436	2144422	2	True				
ANR	2144438	AssignmentExpression	m_fp = fp		2144422	0		=			
ANR	2144439	Identifier	m_fp		2144422	0					
ANR	2144440	Identifier	fp		2144422	1					
ANR	2144441	ExpressionStatement	m_fd = fileno ( fp )	164:1:4439:4458	2144422	3	True				
ANR	2144442	AssignmentExpression	m_fd = fileno ( fp )		2144422	0		=			
ANR	2144443	Identifier	m_fd		2144422	0					
ANR	2144444	CallExpression	fileno ( fp )		2144422	1					
ANR	2144445	Callee	fileno		2144422	0					
ANR	2144446	Identifier	fileno		2144422	0					
ANR	2144447	ArgumentList	fp		2144422	1					
ANR	2144448	Argument	fp		2144422	0					
ANR	2144449	Identifier	fp		2144422	0					
ANR	2144450	ExpressionStatement	m_enable_close = enable_close	165:1:4461:4490	2144422	4	True				
ANR	2144451	AssignmentExpression	m_enable_close = enable_close		2144422	0		=			
ANR	2144452	Identifier	m_enable_close		2144422	0					
ANR	2144453	Identifier	enable_close		2144422	1					
ANR	2144454	ExpressionStatement	m_lock = new FakeFileLock ( )	167:1:4494:4522	2144422	5	True				
ANR	2144455	AssignmentExpression	m_lock = new FakeFileLock ( )		2144422	0		=			
ANR	2144456	Identifier	m_lock		2144422	0					
ANR	2144457	UnaryExpression	new FakeFileLock ( )		2144422	1					
ANR	2144458	ExpressionStatement	m_state = new ReadUserLogState ( )	169:1:4526:4559	2144422	6	True				
ANR	2144459	AssignmentExpression	m_state = new ReadUserLogState ( )		2144422	0		=			
ANR	2144460	Identifier	m_state		2144422	0					
ANR	2144461	UnaryExpression	new ReadUserLogState ( )		2144422	1					
ANR	2144462	ExpressionStatement	m_match = new ReadUserLogMatch ( m_state )	170:1:4562:4603	2144422	7	True				
ANR	2144463	AssignmentExpression	m_match = new ReadUserLogMatch ( m_state )		2144422	0		=			
ANR	2144464	Identifier	m_match		2144422	0					
ANR	2144465	Identifier	m_state		2144422	1					
ANR	2144466	ExpressionStatement	m_initialized = true	172:1:4607:4627	2144422	8	True				
ANR	2144467	AssignmentExpression	m_initialized = true		2144422	0		=			
ANR	2144468	Identifier	m_initialized		2144422	0					
ANR	2144469	Identifier	true		2144422	1					
ANR	2144470	ExpressionStatement	setIsXMLLog ( is_xml )	174:1:4631:4652	2144422	9	True				
ANR	2144471	CallExpression	setIsXMLLog ( is_xml )		2144422	0					
ANR	2144472	Callee	setIsXMLLog		2144422	0					
ANR	2144473	Identifier	setIsXMLLog		2144422	0					
ANR	2144474	ArgumentList	is_xml		2144422	1					
ANR	2144475	Argument	is_xml		2144422	0					
ANR	2144476	Identifier	is_xml		2144422	0					
ANR	2144477	Identifier	ReadUserLog :: ReadUserLog		2144422	1					
ANR	2144478	ParameterList	"FILE * fp , bool is_xml , bool enable_close"		2144422	2					
ANR	2144479	Parameter	FILE * fp	157:27:4343:4350	2144422	0	True				
ANR	2144480	ParameterType	FILE *		2144422	0					
ANR	2144481	Identifier	fp		2144422	1					
ANR	2144482	Parameter	bool is_xml	157:37:4353:4363	2144422	1	True				
ANR	2144483	ParameterType	bool		2144422	0					
ANR	2144484	Identifier	is_xml		2144422	1					
ANR	2144485	Parameter	bool enable_close	157:50:4366:4382	2144422	2	True				
ANR	2144486	ParameterType	bool		2144422	0					
ANR	2144487	Identifier	enable_close		2144422	1					
ANR	2144488	CFGEntryNode	ENTRY		2144422		True				
ANR	2144489	CFGExitNode	EXIT		2144422		True				
ANR	2144490	Symbol	m_lock		2144422						
ANR	2144491	Symbol	m_state		2144422						
ANR	2144492	Symbol	m_initialized		2144422						
ANR	2144493	Symbol	m_fd		2144422						
ANR	2144494	Symbol	m_match		2144422						
ANR	2144495	Symbol	fileno		2144422						
ANR	2144496	Symbol	m_enable_close		2144422						
ANR	2144497	Symbol	true		2144422						
ANR	2144498	Symbol	fp		2144422						
ANR	2144499	Symbol	enable_close		2144422						
ANR	2144500	Symbol	is_xml		2144422						
ANR	2144501	Symbol	m_fp		2144422						
ANR	2144502	Function	ReadUserLog :: initialize	183:0:4829:5150							
ANR	2144503	FunctionDef	ReadUserLog :: initialize ()		2144502	0					
ANR	2144504	CompoundStatement		185:0:4866:5150	2144502	0					
ANR	2144505	IdentifierDeclStatement	"char * path = param ( ""EVENT_LOG"" ) ;"	186:1:4869:4902	2144502	0	True				
ANR	2144506	IdentifierDecl	"* path = param ( ""EVENT_LOG"" )"		2144502	0					
ANR	2144507	IdentifierDeclType	char *		2144502	0					
ANR	2144508	Identifier	path		2144502	1					
ANR	2144509	AssignmentExpression	"* path = param ( ""EVENT_LOG"" )"		2144502	2		=			
ANR	2144510	Identifier	path		2144502	0					
ANR	2144511	CallExpression	"param ( ""EVENT_LOG"" )"		2144502	1					
ANR	2144512	Callee	param		2144502	0					
ANR	2144513	Identifier	param		2144502	0					
ANR	2144514	ArgumentList	"""EVENT_LOG"""		2144502	1					
ANR	2144515	Argument	"""EVENT_LOG"""		2144502	0					
ANR	2144516	PrimaryExpression	"""EVENT_LOG"""		2144502	0					
ANR	2144517	IfStatement	if ( NULL == path )		2144502	1					
ANR	2144518	Condition	NULL == path	187:6:4910:4921	2144502	0	True				
ANR	2144519	EqualityExpression	NULL == path		2144502	0		==			
ANR	2144520	Identifier	NULL		2144502	0					
ANR	2144521	Identifier	path		2144502	1					
ANR	2144522	CompoundStatement		3:21:58:58	2144502	1					
ANR	2144523	ExpressionStatement	"Error ( LOG_ERROR_FILE_NOT_FOUND , __LINE__ )"	188:2:4929:4971	2144502	0	True				
ANR	2144524	CallExpression	"Error ( LOG_ERROR_FILE_NOT_FOUND , __LINE__ )"		2144502	0					
ANR	2144525	Callee	Error		2144502	0					
ANR	2144526	Identifier	Error		2144502	0					
ANR	2144527	ArgumentList	LOG_ERROR_FILE_NOT_FOUND		2144502	1					
ANR	2144528	Argument	LOG_ERROR_FILE_NOT_FOUND		2144502	0					
ANR	2144529	Identifier	LOG_ERROR_FILE_NOT_FOUND		2144502	0					
ANR	2144530	Argument	__LINE__		2144502	1					
ANR	2144531	Identifier	__LINE__		2144502	0					
ANR	2144532	ReturnStatement	return false ;	189:2:4975:4987	2144502	1	True				
ANR	2144533	Identifier	false		2144502	0					
ANR	2144534	IdentifierDeclStatement	"int max_rotations = param_integer ( ""EVENT_LOG_MAX_ROTATIONS"" , 1 , 0 ) ;"	191:1:4993:5061	2144502	2	True				
ANR	2144535	IdentifierDecl	"max_rotations = param_integer ( ""EVENT_LOG_MAX_ROTATIONS"" , 1 , 0 )"		2144502	0					
ANR	2144536	IdentifierDeclType	int		2144502	0					
ANR	2144537	Identifier	max_rotations		2144502	1					
ANR	2144538	AssignmentExpression	"max_rotations = param_integer ( ""EVENT_LOG_MAX_ROTATIONS"" , 1 , 0 )"		2144502	2		=			
ANR	2144539	Identifier	max_rotations		2144502	0					
ANR	2144540	CallExpression	"param_integer ( ""EVENT_LOG_MAX_ROTATIONS"" , 1 , 0 )"		2144502	1					
ANR	2144541	Callee	param_integer		2144502	0					
ANR	2144542	Identifier	param_integer		2144502	0					
ANR	2144543	ArgumentList	"""EVENT_LOG_MAX_ROTATIONS"""		2144502	1					
ANR	2144544	Argument	"""EVENT_LOG_MAX_ROTATIONS"""		2144502	0					
ANR	2144545	PrimaryExpression	"""EVENT_LOG_MAX_ROTATIONS"""		2144502	0					
ANR	2144546	Argument	1		2144502	1					
ANR	2144547	PrimaryExpression	1		2144502	0					
ANR	2144548	Argument	0		2144502	2					
ANR	2144549	PrimaryExpression	0		2144502	0					
ANR	2144550	IdentifierDeclStatement	"bool status = initialize ( path , max_rotations , true ) ;"	192:1:5064:5117	2144502	3	True				
ANR	2144551	IdentifierDecl	"status = initialize ( path , max_rotations , true )"		2144502	0					
ANR	2144552	IdentifierDeclType	bool		2144502	0					
ANR	2144553	Identifier	status		2144502	1					
ANR	2144554	AssignmentExpression	"status = initialize ( path , max_rotations , true )"		2144502	2		=			
ANR	2144555	Identifier	status		2144502	0					
ANR	2144556	CallExpression	"initialize ( path , max_rotations , true )"		2144502	1					
ANR	2144557	Callee	initialize		2144502	0					
ANR	2144558	Identifier	initialize		2144502	0					
ANR	2144559	ArgumentList	path		2144502	1					
ANR	2144560	Argument	path		2144502	0					
ANR	2144561	Identifier	path		2144502	0					
ANR	2144562	Argument	max_rotations		2144502	1					
ANR	2144563	Identifier	max_rotations		2144502	0					
ANR	2144564	Argument	true		2144502	2					
ANR	2144565	Identifier	true		2144502	0					
ANR	2144566	ExpressionStatement	free ( path )	193:1:5120:5132	2144502	4	True				
ANR	2144567	CallExpression	free ( path )		2144502	0					
ANR	2144568	Callee	free		2144502	0					
ANR	2144569	Identifier	free		2144502	0					
ANR	2144570	ArgumentList	path		2144502	1					
ANR	2144571	Argument	path		2144502	0					
ANR	2144572	Identifier	path		2144502	0					
ANR	2144573	ReturnStatement	return status ;	194:1:5135:5148	2144502	5	True				
ANR	2144574	Identifier	status		2144502	0					
ANR	2144575	ReturnType	bool		2144502	1					
ANR	2144576	Identifier	ReadUserLog :: initialize		2144502	2					
ANR	2144577	ParameterList			2144502	3					
ANR	2144578	CFGEntryNode	ENTRY		2144502		True				
ANR	2144579	CFGExitNode	EXIT		2144502		True				
ANR	2144580	Symbol	path		2144502						
ANR	2144581	Symbol	NULL		2144502						
ANR	2144582	Symbol	param		2144502						
ANR	2144583	Symbol	false		2144502						
ANR	2144584	Symbol	true		2144502						
ANR	2144585	Symbol	param_integer		2144502						
ANR	2144586	Symbol	LOG_ERROR_FILE_NOT_FOUND		2144502						
ANR	2144587	Symbol	initialize		2144502						
ANR	2144588	Symbol	__LINE__		2144502						
ANR	2144589	Symbol	max_rotations		2144502						
ANR	2144590	Symbol	status		2144502						
ANR	2144591	Function	ReadUserLog :: initialize	198:0:5176:5417							
ANR	2144592	FunctionDef	"ReadUserLog :: initialize (const char * filename , bool handle_rotation , bool check_for_old , bool read_only)"		2144591	0					
ANR	2144593	CompoundStatement		203:0:5308:5417	2144591	0					
ANR	2144594	ReturnStatement	"return initialize ( filename , handle_rotation ? 1 : 0 , check_for_old , read_only ) ;"	204:1:5311:5415	2144591	0	True				
ANR	2144595	CallExpression	"initialize ( filename , handle_rotation ? 1 : 0 , check_for_old , read_only )"		2144591	0					
ANR	2144596	Callee	initialize		2144591	0					
ANR	2144597	Identifier	initialize		2144591	0					
ANR	2144598	ArgumentList	filename		2144591	1					
ANR	2144599	Argument	filename		2144591	0					
ANR	2144600	Identifier	filename		2144591	0					
ANR	2144601	Argument	handle_rotation ? 1 : 0		2144591	1					
ANR	2144602	ConditionalExpression	handle_rotation ? 1 : 0		2144591	0					
ANR	2144603	Condition	handle_rotation		2144591	0					
ANR	2144604	Identifier	handle_rotation		2144591	0					
ANR	2144605	PrimaryExpression	1		2144591	1					
ANR	2144606	PrimaryExpression	0		2144591	2					
ANR	2144607	Argument	check_for_old		2144591	2					
ANR	2144608	Identifier	check_for_old		2144591	0					
ANR	2144609	Argument	read_only		2144591	3					
ANR	2144610	Identifier	read_only		2144591	0					
ANR	2144611	ReturnType	bool		2144591	1					
ANR	2144612	Identifier	ReadUserLog :: initialize		2144591	2					
ANR	2144613	ParameterList	"const char * filename , bool handle_rotation , bool check_for_old , bool read_only"		2144591	3					
ANR	2144614	Parameter	const char * filename	199:25:5206:5225	2144591	0	True				
ANR	2144615	ParameterType	const char *		2144591	0					
ANR	2144616	Identifier	filename		2144591	1					
ANR	2144617	Parameter	bool handle_rotation	200:7:5235:5254	2144591	1	True				
ANR	2144618	ParameterType	bool		2144591	0					
ANR	2144619	Identifier	handle_rotation		2144591	1					
ANR	2144620	Parameter	bool check_for_old	201:7:5264:5281	2144591	2	True				
ANR	2144621	ParameterType	bool		2144591	0					
ANR	2144622	Identifier	check_for_old		2144591	1					
ANR	2144623	Parameter	bool read_only	202:7:5291:5304	2144591	3	True				
ANR	2144624	ParameterType	bool		2144591	0					
ANR	2144625	Identifier	read_only		2144591	1					
ANR	2144626	CFGEntryNode	ENTRY		2144591		True				
ANR	2144627	CFGExitNode	EXIT		2144591		True				
ANR	2144628	Symbol	check_for_old		2144591						
ANR	2144629	Symbol	filename		2144591						
ANR	2144630	Symbol	handle_rotation		2144591						
ANR	2144631	Symbol	read_only		2144591						
ANR	2144632	Symbol	initialize		2144591						
ANR	2144633	Function	ReadUserLog :: initialize	211:0:5489:6161							
ANR	2144634	FunctionDef	"ReadUserLog :: initialize (const char * filename , int max_rotations , bool check_for_old , bool read_only)"		2144633	0					
ANR	2144635	CompoundStatement		216:0:5618:6161	2144633	0					
ANR	2144636	IfStatement	if ( m_initialized )		2144633	0					
ANR	2144637	Condition	m_initialized	217:6:5626:5638	2144633	0	True				
ANR	2144638	Identifier	m_initialized		2144633	0					
ANR	2144639	CompoundStatement		2:22:23:23	2144633	1					
ANR	2144640	ExpressionStatement	"Error ( LOG_ERROR_RE_INITIALIZE , __LINE__ )"	218:2:5646:5688	2144633	0	True				
ANR	2144641	CallExpression	"Error ( LOG_ERROR_RE_INITIALIZE , __LINE__ )"		2144633	0					
ANR	2144642	Callee	Error		2144633	0					
ANR	2144643	Identifier	Error		2144633	0					
ANR	2144644	ArgumentList	LOG_ERROR_RE_INITIALIZE		2144633	1					
ANR	2144645	Argument	LOG_ERROR_RE_INITIALIZE		2144633	0					
ANR	2144646	Identifier	LOG_ERROR_RE_INITIALIZE		2144633	0					
ANR	2144647	Argument	__LINE__		2144633	1					
ANR	2144648	Identifier	__LINE__		2144633	0					
ANR	2144649	ReturnStatement	return false ;	219:2:5692:5704	2144633	1	True				
ANR	2144650	Identifier	false		2144633	0					
ANR	2144651	IdentifierDeclStatement	bool handle_rotation = ( max_rotations > 0 ) ;	222:1:5711:5755	2144633	1	True				
ANR	2144652	IdentifierDecl	handle_rotation = ( max_rotations > 0 )		2144633	0					
ANR	2144653	IdentifierDeclType	bool		2144633	0					
ANR	2144654	Identifier	handle_rotation		2144633	1					
ANR	2144655	AssignmentExpression	handle_rotation = ( max_rotations > 0 )		2144633	2		=			
ANR	2144656	Identifier	handle_rotation		2144633	0					
ANR	2144657	RelationalExpression	max_rotations > 0		2144633	1		>			
ANR	2144658	Identifier	max_rotations		2144633	0					
ANR	2144659	PrimaryExpression	0		2144633	1					
ANR	2144660	ExpressionStatement	"m_state = new ReadUserLogState ( filename , max_rotations , SCORE_RECENT_THRESH )"	223:1:5758:5845	2144633	2	True				
ANR	2144661	AssignmentExpression	"m_state = new ReadUserLogState ( filename , max_rotations , SCORE_RECENT_THRESH )"		2144633	0		=			
ANR	2144662	Identifier	m_state		2144633	0					
ANR	2144663	Expression	"filename , max_rotations , SCORE_RECENT_THRESH"		2144633	1					
ANR	2144664	Identifier	filename		2144633	0					
ANR	2144665	Expression	"max_rotations , SCORE_RECENT_THRESH"		2144633	1					
ANR	2144666	Identifier	max_rotations		2144633	0					
ANR	2144667	Identifier	SCORE_RECENT_THRESH		2144633	1					
ANR	2144668	IfStatement	if ( ! m_state -> Initialized ( ) )		2144633	3					
ANR	2144669	Condition	! m_state -> Initialized ( )	225:6:5853:5876	2144633	0	True				
ANR	2144670	UnaryOperationExpression	! m_state -> Initialized ( )		2144633	0					
ANR	2144671	UnaryOperator	!		2144633	0					
ANR	2144672	CallExpression	m_state -> Initialized ( )		2144633	1					
ANR	2144673	Callee	m_state -> Initialized		2144633	0					
ANR	2144674	PtrMemberAccess	m_state -> Initialized		2144633	0					
ANR	2144675	Identifier	m_state		2144633	0					
ANR	2144676	Identifier	Initialized		2144633	1					
ANR	2144677	ArgumentList			2144633	1					
ANR	2144678	CompoundStatement		10:33:261:261	2144633	1					
ANR	2144679	ExpressionStatement	"Error ( LOG_ERROR_NOT_INITIALIZED , __LINE__ )"	226:2:5884:5928	2144633	0	True				
ANR	2144680	CallExpression	"Error ( LOG_ERROR_NOT_INITIALIZED , __LINE__ )"		2144633	0					
ANR	2144681	Callee	Error		2144633	0					
ANR	2144682	Identifier	Error		2144633	0					
ANR	2144683	ArgumentList	LOG_ERROR_NOT_INITIALIZED		2144633	1					
ANR	2144684	Argument	LOG_ERROR_NOT_INITIALIZED		2144633	0					
ANR	2144685	Identifier	LOG_ERROR_NOT_INITIALIZED		2144633	0					
ANR	2144686	Argument	__LINE__		2144633	1					
ANR	2144687	Identifier	__LINE__		2144633	0					
ANR	2144688	ReturnStatement	return false ;	227:2:5932:5944	2144633	1	True				
ANR	2144689	Identifier	false		2144633	0					
ANR	2144690	ExpressionStatement	m_match = new ReadUserLogMatch ( m_state )	229:1:5950:5991	2144633	4	True				
ANR	2144691	AssignmentExpression	m_match = new ReadUserLogMatch ( m_state )		2144633	0		=			
ANR	2144692	Identifier	m_match		2144633	0					
ANR	2144693	Identifier	m_state		2144633	1					
ANR	2144694	IfStatement	"if ( ! InternalInitialize ( max_rotations , check_for_old , false , handle_rotation , read_only ) )"		2144633	5					
ANR	2144695	Condition	"! InternalInitialize ( max_rotations , check_for_old , false , handle_rotation , read_only )"	231:5:5999:6121	2144633	0	True				
ANR	2144696	UnaryOperationExpression	"! InternalInitialize ( max_rotations , check_for_old , false , handle_rotation , read_only )"		2144633	0					
ANR	2144697	UnaryOperator	!		2144633	0					
ANR	2144698	CallExpression	"InternalInitialize ( max_rotations , check_for_old , false , handle_rotation , read_only )"		2144633	1					
ANR	2144699	Callee	InternalInitialize		2144633	0					
ANR	2144700	Identifier	InternalInitialize		2144633	0					
ANR	2144701	ArgumentList	max_rotations		2144633	1					
ANR	2144702	Argument	max_rotations		2144633	0					
ANR	2144703	Identifier	max_rotations		2144633	0					
ANR	2144704	Argument	check_for_old		2144633	1					
ANR	2144705	Identifier	check_for_old		2144633	0					
ANR	2144706	Argument	false		2144633	2					
ANR	2144707	Identifier	false		2144633	0					
ANR	2144708	Argument	handle_rotation		2144633	3					
ANR	2144709	Identifier	handle_rotation		2144633	0					
ANR	2144710	Argument	read_only		2144633	4					
ANR	2144711	Identifier	read_only		2144633	0					
ANR	2144712	CompoundStatement		20:23:506:506	2144633	1					
ANR	2144713	ReturnStatement	return false ;	236:2:6129:6141	2144633	0	True				
ANR	2144714	Identifier	false		2144633	0					
ANR	2144715	ReturnStatement	return true ;	239:1:6148:6159	2144633	6	True				
ANR	2144716	Identifier	true		2144633	0					
ANR	2144717	ReturnType	bool		2144633	1					
ANR	2144718	Identifier	ReadUserLog :: initialize		2144633	2					
ANR	2144719	ParameterList	"const char * filename , int max_rotations , bool check_for_old , bool read_only"		2144633	3					
ANR	2144720	Parameter	const char * filename	212:25:5519:5538	2144633	0	True				
ANR	2144721	ParameterType	const char *		2144633	0					
ANR	2144722	Identifier	filename		2144633	1					
ANR	2144723	Parameter	int max_rotations	213:7:5548:5564	2144633	1	True				
ANR	2144724	ParameterType	int		2144633	0					
ANR	2144725	Identifier	max_rotations		2144633	1					
ANR	2144726	Parameter	bool check_for_old	214:7:5574:5591	2144633	2	True				
ANR	2144727	ParameterType	bool		2144633	0					
ANR	2144728	Identifier	check_for_old		2144633	1					
ANR	2144729	Parameter	bool read_only	215:7:5601:5614	2144633	3	True				
ANR	2144730	ParameterType	bool		2144633	0					
ANR	2144731	Identifier	read_only		2144633	1					
ANR	2144732	CFGEntryNode	ENTRY		2144633		True				
ANR	2144733	CFGExitNode	EXIT		2144633		True				
ANR	2144734	Symbol	check_for_old		2144633						
ANR	2144735	Symbol	m_initialized		2144633						
ANR	2144736	Symbol	m_match		2144633						
ANR	2144737	Symbol	handle_rotation		2144633						
ANR	2144738	Symbol	LOG_ERROR_RE_INITIALIZE		2144633						
ANR	2144739	Symbol	* m_state		2144633						
ANR	2144740	Symbol	false		2144633						
ANR	2144741	Symbol	LOG_ERROR_NOT_INITIALIZED		2144633						
ANR	2144742	Symbol	max_rotations		2144633						
ANR	2144743	Symbol	__LINE__		2144633						
ANR	2144744	Symbol	m_state		2144633						
ANR	2144745	Symbol	SCORE_RECENT_THRESH		2144633						
ANR	2144746	Symbol	filename		2144633						
ANR	2144747	Symbol	InternalInitialize		2144633						
ANR	2144748	Symbol	read_only		2144633						
ANR	2144749	Symbol	true		2144633						
ANR	2144750	Symbol	m_state -> Initialized		2144633						
ANR	2144751	Function	ReadUserLog :: initialize	247:0:6352:6503							
ANR	2144752	FunctionDef	"ReadUserLog :: initialize (const ReadUserLog :: FileState & state , bool read_only)"		2144751	0					
ANR	2144753	CompoundStatement		250:0:6443:6503	2144751	0					
ANR	2144754	ReturnStatement	"return InternalInitialize ( state , false , 0 , read_only ) ;"	251:1:6446:6501	2144751	0	True				
ANR	2144755	CallExpression	"InternalInitialize ( state , false , 0 , read_only )"		2144751	0					
ANR	2144756	Callee	InternalInitialize		2144751	0					
ANR	2144757	Identifier	InternalInitialize		2144751	0					
ANR	2144758	ArgumentList	state		2144751	1					
ANR	2144759	Argument	state		2144751	0					
ANR	2144760	Identifier	state		2144751	0					
ANR	2144761	Argument	false		2144751	1					
ANR	2144762	Identifier	false		2144751	0					
ANR	2144763	Argument	0		2144751	2					
ANR	2144764	PrimaryExpression	0		2144751	0					
ANR	2144765	Argument	read_only		2144751	3					
ANR	2144766	Identifier	read_only		2144751	0					
ANR	2144767	ReturnType	bool		2144751	1					
ANR	2144768	Identifier	ReadUserLog :: initialize		2144751	2					
ANR	2144769	ParameterList	"const ReadUserLog :: FileState & state , bool read_only"		2144751	3					
ANR	2144770	Parameter	const ReadUserLog :: FileState & state	248:25:6382:6416	2144751	0	True				
ANR	2144771	ParameterType	const ReadUserLog :: FileState &		2144751	0					
ANR	2144772	Identifier	state		2144751	1					
ANR	2144773	Parameter	bool read_only	249:7:6426:6439	2144751	1	True				
ANR	2144774	ParameterType	bool		2144751	0					
ANR	2144775	Identifier	read_only		2144751	1					
ANR	2144776	CFGEntryNode	ENTRY		2144751		True				
ANR	2144777	CFGExitNode	EXIT		2144751		True				
ANR	2144778	Symbol	InternalInitialize		2144751						
ANR	2144779	Symbol	read_only		2144751						
ANR	2144780	Symbol	false		2144751						
ANR	2144781	Symbol	state		2144751						
ANR	2144782	Function	ReadUserLog :: initialize	255:0:6561:6749							
ANR	2144783	FunctionDef	"ReadUserLog :: initialize (const ReadUserLog :: FileState & state , int max_rotations , bool read_only)"		2144782	0					
ANR	2144784	CompoundStatement		259:0:6678:6749	2144782	0					
ANR	2144785	ReturnStatement	"return InternalInitialize ( state , true , max_rotations , read_only ) ;"	260:1:6681:6747	2144782	0	True				
ANR	2144786	CallExpression	"InternalInitialize ( state , true , max_rotations , read_only )"		2144782	0					
ANR	2144787	Callee	InternalInitialize		2144782	0					
ANR	2144788	Identifier	InternalInitialize		2144782	0					
ANR	2144789	ArgumentList	state		2144782	1					
ANR	2144790	Argument	state		2144782	0					
ANR	2144791	Identifier	state		2144782	0					
ANR	2144792	Argument	true		2144782	1					
ANR	2144793	Identifier	true		2144782	0					
ANR	2144794	Argument	max_rotations		2144782	2					
ANR	2144795	Identifier	max_rotations		2144782	0					
ANR	2144796	Argument	read_only		2144782	3					
ANR	2144797	Identifier	read_only		2144782	0					
ANR	2144798	ReturnType	bool		2144782	1					
ANR	2144799	Identifier	ReadUserLog :: initialize		2144782	2					
ANR	2144800	ParameterList	"const ReadUserLog :: FileState & state , int max_rotations , bool read_only"		2144782	3					
ANR	2144801	Parameter	const ReadUserLog :: FileState & state	256:25:6591:6625	2144782	0	True				
ANR	2144802	ParameterType	const ReadUserLog :: FileState &		2144782	0					
ANR	2144803	Identifier	state		2144782	1					
ANR	2144804	Parameter	int max_rotations	257:7:6635:6651	2144782	1	True				
ANR	2144805	ParameterType	int		2144782	0					
ANR	2144806	Identifier	max_rotations		2144782	1					
ANR	2144807	Parameter	bool read_only	258:7:6661:6674	2144782	2	True				
ANR	2144808	ParameterType	bool		2144782	0					
ANR	2144809	Identifier	read_only		2144782	1					
ANR	2144810	CFGEntryNode	ENTRY		2144782		True				
ANR	2144811	CFGExitNode	EXIT		2144782		True				
ANR	2144812	Symbol	InternalInitialize		2144782						
ANR	2144813	Symbol	read_only		2144782						
ANR	2144814	Symbol	true		2144782						
ANR	2144815	Symbol	state		2144782						
ANR	2144816	Symbol	max_rotations		2144782						
ANR	2144817	Function	ReadUserLog :: getMaxRot	264:0:6785:6873							
ANR	2144818	FunctionDef	ReadUserLog :: getMaxRot (bool handle_rotation)		2144817	0					
ANR	2144819	CompoundStatement		266:0:6836:6873	2144817	0					
ANR	2144820	ReturnStatement	return ( handle_rotation ? 1 : 0 ) ;	267:1:6839:6871	2144817	0	True				
ANR	2144821	ConditionalExpression	handle_rotation ? 1 : 0		2144817	0					
ANR	2144822	Condition	handle_rotation		2144817	0					
ANR	2144823	Identifier	handle_rotation		2144817	0					
ANR	2144824	PrimaryExpression	1		2144817	1					
ANR	2144825	PrimaryExpression	0		2144817	2					
ANR	2144826	ReturnType	int		2144817	1					
ANR	2144827	Identifier	ReadUserLog :: getMaxRot		2144817	2					
ANR	2144828	ParameterList	bool handle_rotation		2144817	3					
ANR	2144829	Parameter	bool handle_rotation	265:24:6813:6832	2144817	0	True				
ANR	2144830	ParameterType	bool		2144817	0					
ANR	2144831	Identifier	handle_rotation		2144817	1					
ANR	2144832	CFGEntryNode	ENTRY		2144817		True				
ANR	2144833	CFGExitNode	EXIT		2144817		True				
ANR	2144834	Symbol	handle_rotation		2144817						
ANR	2144835	Function	ReadUserLog :: initRotParms	270:0:6876:7007							
ANR	2144836	FunctionDef	ReadUserLog :: initRotParms (int max_rotation)		2144835	0					
ANR	2144837	CompoundStatement		272:0:6927:7007	2144835	0					
ANR	2144838	ExpressionStatement	m_handle_rot = max_rotation ? true : false	273:1:6930:6972	2144835	0	True				
ANR	2144839	AssignmentExpression	m_handle_rot = max_rotation ? true : false		2144835	0		=			
ANR	2144840	Identifier	m_handle_rot		2144835	0					
ANR	2144841	ConditionalExpression	max_rotation ? true : false		2144835	1					
ANR	2144842	Condition	max_rotation		2144835	0					
ANR	2144843	Identifier	max_rotation		2144835	0					
ANR	2144844	Identifier	true		2144835	1					
ANR	2144845	Identifier	false		2144835	2					
ANR	2144846	ExpressionStatement	m_max_rotations = max_rotation	274:1:6975:7005	2144835	1	True				
ANR	2144847	AssignmentExpression	m_max_rotations = max_rotation		2144835	0		=			
ANR	2144848	Identifier	m_max_rotations		2144835	0					
ANR	2144849	Identifier	max_rotation		2144835	1					
ANR	2144850	ReturnType	void		2144835	1					
ANR	2144851	Identifier	ReadUserLog :: initRotParms		2144835	2					
ANR	2144852	ParameterList	int max_rotation		2144835	3					
ANR	2144853	Parameter	int max_rotation	271:27:6908:6923	2144835	0	True				
ANR	2144854	ParameterType	int		2144835	0					
ANR	2144855	Identifier	max_rotation		2144835	1					
ANR	2144856	CFGEntryNode	ENTRY		2144835		True				
ANR	2144857	CFGExitNode	EXIT		2144835		True				
ANR	2144858	Symbol	false		2144835						
ANR	2144859	Symbol	true		2144835						
ANR	2144860	Symbol	m_max_rotations		2144835						
ANR	2144861	Symbol	max_rotation		2144835						
ANR	2144862	Symbol	m_handle_rot		2144835						
ANR	2144863	Function	ReadUserLog :: InternalInitialize	284:0:7281:8022							
ANR	2144864	FunctionDef	"ReadUserLog :: InternalInitialize (const ReadUserLog :: FileState & state , bool set_rotations , int max_rotations , bool read_only)"		2144863	0					
ANR	2144865	CompoundStatement		289:0:7439:8022	2144863	0					
ANR	2144866	IfStatement	if ( m_initialized )		2144863	0					
ANR	2144867	Condition	m_initialized	290:6:7447:7459	2144863	0	True				
ANR	2144868	Identifier	m_initialized		2144863	0					
ANR	2144869	CompoundStatement		2:22:23:23	2144863	1					
ANR	2144870	ExpressionStatement	"Error ( LOG_ERROR_RE_INITIALIZE , __LINE__ )"	291:2:7467:7509	2144863	0	True				
ANR	2144871	CallExpression	"Error ( LOG_ERROR_RE_INITIALIZE , __LINE__ )"		2144863	0					
ANR	2144872	Callee	Error		2144863	0					
ANR	2144873	Identifier	Error		2144863	0					
ANR	2144874	ArgumentList	LOG_ERROR_RE_INITIALIZE		2144863	1					
ANR	2144875	Argument	LOG_ERROR_RE_INITIALIZE		2144863	0					
ANR	2144876	Identifier	LOG_ERROR_RE_INITIALIZE		2144863	0					
ANR	2144877	Argument	__LINE__		2144863	1					
ANR	2144878	Identifier	__LINE__		2144863	0					
ANR	2144879	ReturnStatement	return false ;	292:2:7513:7525	2144863	1	True				
ANR	2144880	Identifier	false		2144863	0					
ANR	2144881	ExpressionStatement	"m_state = new ReadUserLogState ( state , SCORE_RECENT_THRESH )"	295:1:7532:7592	2144863	1	True				
ANR	2144882	AssignmentExpression	"m_state = new ReadUserLogState ( state , SCORE_RECENT_THRESH )"		2144863	0		=			
ANR	2144883	Identifier	m_state		2144863	0					
ANR	2144884	Expression	"state , SCORE_RECENT_THRESH"		2144863	1					
ANR	2144885	Identifier	state		2144863	0					
ANR	2144886	Identifier	SCORE_RECENT_THRESH		2144863	1					
ANR	2144887	IfStatement	if ( ( m_state -> InitializeError ( ) ) || ( ! m_state -> Initialized ( ) ) )		2144863	2					
ANR	2144888	Condition	( m_state -> InitializeError ( ) ) || ( ! m_state -> Initialized ( ) )	296:7:7601:7661	2144863	0	True				
ANR	2144889	OrExpression	( m_state -> InitializeError ( ) ) || ( ! m_state -> Initialized ( ) )		2144863	0		||			
ANR	2144890	CallExpression	m_state -> InitializeError ( )		2144863	0					
ANR	2144891	Callee	m_state -> InitializeError		2144863	0					
ANR	2144892	PtrMemberAccess	m_state -> InitializeError		2144863	0					
ANR	2144893	Identifier	m_state		2144863	0					
ANR	2144894	Identifier	InitializeError		2144863	1					
ANR	2144895	ArgumentList			2144863	1					
ANR	2144896	UnaryOperationExpression	! m_state -> Initialized ( )		2144863	1					
ANR	2144897	UnaryOperator	!		2144863	0					
ANR	2144898	CallExpression	m_state -> Initialized ( )		2144863	1					
ANR	2144899	Callee	m_state -> Initialized		2144863	0					
ANR	2144900	PtrMemberAccess	m_state -> Initialized		2144863	0					
ANR	2144901	Identifier	m_state		2144863	0					
ANR	2144902	Identifier	Initialized		2144863	1					
ANR	2144903	ArgumentList			2144863	1					
ANR	2144904	CompoundStatement		8:72:226:226	2144863	1					
ANR	2144905	ExpressionStatement	"Error ( LOG_ERROR_STATE_ERROR , __LINE__ )"	297:2:7670:7710	2144863	0	True				
ANR	2144906	CallExpression	"Error ( LOG_ERROR_STATE_ERROR , __LINE__ )"		2144863	0					
ANR	2144907	Callee	Error		2144863	0					
ANR	2144908	Identifier	Error		2144863	0					
ANR	2144909	ArgumentList	LOG_ERROR_STATE_ERROR		2144863	1					
ANR	2144910	Argument	LOG_ERROR_STATE_ERROR		2144863	0					
ANR	2144911	Identifier	LOG_ERROR_STATE_ERROR		2144863	0					
ANR	2144912	Argument	__LINE__		2144863	1					
ANR	2144913	Identifier	__LINE__		2144863	0					
ANR	2144914	ReturnStatement	return false ;	298:2:7714:7726	2144863	1	True				
ANR	2144915	Identifier	false		2144863	0					
ANR	2144916	IfStatement	if ( set_rotations )		2144863	3					
ANR	2144917	Condition	set_rotations	302:6:7784:7796	2144863	0	True				
ANR	2144918	Identifier	set_rotations		2144863	0					
ANR	2144919	CompoundStatement		14:22:360:360	2144863	1					
ANR	2144920	ExpressionStatement	m_state -> MaxRotations ( max_rotations )	303:2:7804:7842	2144863	0	True				
ANR	2144921	CallExpression	m_state -> MaxRotations ( max_rotations )		2144863	0					
ANR	2144922	Callee	m_state -> MaxRotations		2144863	0					
ANR	2144923	PtrMemberAccess	m_state -> MaxRotations		2144863	0					
ANR	2144924	Identifier	m_state		2144863	0					
ANR	2144925	Identifier	MaxRotations		2144863	1					
ANR	2144926	ArgumentList	max_rotations		2144863	1					
ANR	2144927	Argument	max_rotations		2144863	0					
ANR	2144928	Identifier	max_rotations		2144863	0					
ANR	2144929	ElseStatement	else		2144863	0					
ANR	2144930	CompoundStatement		17:6:413:413	2144863	0					
ANR	2144931	ExpressionStatement	max_rotations = m_state -> MaxRotations ( )	306:2:7857:7897	2144863	0	True				
ANR	2144932	AssignmentExpression	max_rotations = m_state -> MaxRotations ( )		2144863	0		=			
ANR	2144933	Identifier	max_rotations		2144863	0					
ANR	2144934	CallExpression	m_state -> MaxRotations ( )		2144863	1					
ANR	2144935	Callee	m_state -> MaxRotations		2144863	0					
ANR	2144936	PtrMemberAccess	m_state -> MaxRotations		2144863	0					
ANR	2144937	Identifier	m_state		2144863	0					
ANR	2144938	Identifier	MaxRotations		2144863	1					
ANR	2144939	ArgumentList			2144863	1					
ANR	2144940	ExpressionStatement	m_match = new ReadUserLogMatch ( m_state )	309:1:7904:7945	2144863	4	True				
ANR	2144941	AssignmentExpression	m_match = new ReadUserLogMatch ( m_state )		2144863	0		=			
ANR	2144942	Identifier	m_match		2144863	0					
ANR	2144943	Identifier	m_state		2144863	1					
ANR	2144944	ReturnStatement	"return InternalInitialize ( max_rotations , false , true , true , read_only ) ;"	310:1:7948:8020	2144863	5	True				
ANR	2144945	CallExpression	"InternalInitialize ( max_rotations , false , true , true , read_only )"		2144863	0					
ANR	2144946	Callee	InternalInitialize		2144863	0					
ANR	2144947	Identifier	InternalInitialize		2144863	0					
ANR	2144948	ArgumentList	max_rotations		2144863	1					
ANR	2144949	Argument	max_rotations		2144863	0					
ANR	2144950	Identifier	max_rotations		2144863	0					
ANR	2144951	Argument	false		2144863	1					
ANR	2144952	Identifier	false		2144863	0					
ANR	2144953	Argument	true		2144863	2					
ANR	2144954	Identifier	true		2144863	0					
ANR	2144955	Argument	true		2144863	3					
ANR	2144956	Identifier	true		2144863	0					
ANR	2144957	Argument	read_only		2144863	4					
ANR	2144958	Identifier	read_only		2144863	0					
ANR	2144959	ReturnType	bool		2144863	1					
ANR	2144960	Identifier	ReadUserLog :: InternalInitialize		2144863	2					
ANR	2144961	ParameterList	"const ReadUserLog :: FileState & state , bool set_rotations , int max_rotations , bool read_only"		2144863	3					
ANR	2144962	Parameter	const ReadUserLog :: FileState & state	285:33:7319:7353	2144863	0	True				
ANR	2144963	ParameterType	const ReadUserLog :: FileState &		2144863	0					
ANR	2144964	Identifier	state		2144863	1					
ANR	2144965	Parameter	bool set_rotations	286:9:7365:7382	2144863	1	True				
ANR	2144966	ParameterType	bool		2144863	0					
ANR	2144967	Identifier	set_rotations		2144863	1					
ANR	2144968	Parameter	int max_rotations	287:9:7394:7410	2144863	2	True				
ANR	2144969	ParameterType	int		2144863	0					
ANR	2144970	Identifier	max_rotations		2144863	1					
ANR	2144971	Parameter	bool read_only	288:9:7422:7435	2144863	3	True				
ANR	2144972	ParameterType	bool		2144863	0					
ANR	2144973	Identifier	read_only		2144863	1					
ANR	2144974	CFGEntryNode	ENTRY		2144863		True				
ANR	2144975	CFGExitNode	EXIT		2144863		True				
ANR	2144976	Symbol	m_initialized		2144863						
ANR	2144977	Symbol	m_match		2144863						
ANR	2144978	Symbol	m_state -> MaxRotations		2144863						
ANR	2144979	Symbol	set_rotations		2144863						
ANR	2144980	Symbol	LOG_ERROR_RE_INITIALIZE		2144863						
ANR	2144981	Symbol	* m_state		2144863						
ANR	2144982	Symbol	false		2144863						
ANR	2144983	Symbol	max_rotations		2144863						
ANR	2144984	Symbol	__LINE__		2144863						
ANR	2144985	Symbol	m_state		2144863						
ANR	2144986	Symbol	SCORE_RECENT_THRESH		2144863						
ANR	2144987	Symbol	LOG_ERROR_STATE_ERROR		2144863						
ANR	2144988	Symbol	InternalInitialize		2144863						
ANR	2144989	Symbol	read_only		2144863						
ANR	2144990	Symbol	true		2144863						
ANR	2144991	Symbol	m_state -> InitializeError		2144863						
ANR	2144992	Symbol	state		2144863						
ANR	2144993	Symbol	m_state -> Initialized		2144863						
ANR	2144994	Function	ReadUserLog :: InternalInitialize	314:0:8057:10816							
ANR	2144995	FunctionDef	"ReadUserLog :: InternalInitialize (int max_rotations , bool check_for_rotation , bool restore , bool enable_header_read , bool read_only)"		2144994	0					
ANR	2144996	CompoundStatement		320:0:8236:10816	2144994	0					
ANR	2144997	IfStatement	if ( m_initialized )		2144994	0					
ANR	2144998	Condition	m_initialized	321:6:8244:8256	2144994	0	True				
ANR	2144999	Identifier	m_initialized		2144994	0					
ANR	2145000	CompoundStatement		2:22:23:23	2144994	1					
ANR	2145001	ExpressionStatement	"Error ( LOG_ERROR_RE_INITIALIZE , __LINE__ )"	322:2:8264:8306	2144994	0	True				
ANR	2145002	CallExpression	"Error ( LOG_ERROR_RE_INITIALIZE , __LINE__ )"		2144994	0					
ANR	2145003	Callee	Error		2144994	0					
ANR	2145004	Identifier	Error		2144994	0					
ANR	2145005	ArgumentList	LOG_ERROR_RE_INITIALIZE		2144994	1					
ANR	2145006	Argument	LOG_ERROR_RE_INITIALIZE		2144994	0					
ANR	2145007	Identifier	LOG_ERROR_RE_INITIALIZE		2144994	0					
ANR	2145008	Argument	__LINE__		2144994	1					
ANR	2145009	Identifier	__LINE__		2144994	0					
ANR	2145010	ReturnStatement	return false ;	323:2:8310:8322	2144994	1	True				
ANR	2145011	Identifier	false		2144994	0					
ANR	2145012	ExpressionStatement	m_handle_rot = ( max_rotations > 0 )	326:1:8329:8365	2144994	1	True				
ANR	2145013	AssignmentExpression	m_handle_rot = ( max_rotations > 0 )		2144994	0		=			
ANR	2145014	Identifier	m_handle_rot		2144994	0					
ANR	2145015	RelationalExpression	max_rotations > 0		2144994	1		>			
ANR	2145016	Identifier	max_rotations		2144994	0					
ANR	2145017	PrimaryExpression	0		2144994	1					
ANR	2145018	ExpressionStatement	m_max_rotations = max_rotations	327:1:8368:8399	2144994	2	True				
ANR	2145019	AssignmentExpression	m_max_rotations = max_rotations		2144994	0		=			
ANR	2145020	Identifier	m_max_rotations		2144994	0					
ANR	2145021	Identifier	max_rotations		2144994	1					
ANR	2145022	ExpressionStatement	m_read_header = enable_header_read	328:1:8402:8436	2144994	3	True				
ANR	2145023	AssignmentExpression	m_read_header = enable_header_read		2144994	0		=			
ANR	2145024	Identifier	m_read_header		2144994	0					
ANR	2145025	Identifier	enable_header_read		2144994	1					
ANR	2145026	ExpressionStatement	m_lock = NULL	329:1:8439:8452	2144994	4	True				
ANR	2145027	AssignmentExpression	m_lock = NULL		2144994	0		=			
ANR	2145028	Identifier	m_lock		2144994	0					
ANR	2145029	Identifier	NULL		2144994	1					
ANR	2145030	ExpressionStatement	m_read_only = read_only	330:1:8455:8478	2144994	5	True				
ANR	2145031	AssignmentExpression	m_read_only = read_only		2144994	0		=			
ANR	2145032	Identifier	m_read_only		2144994	0					
ANR	2145033	Identifier	read_only		2144994	1					
ANR	2145034	ExpressionStatement	"m_state -> SetScoreFactor ( ReadUserLogState :: SCORE_CTIME , SCORE_FACTOR_CTIME )"	333:1:8533:8617	2144994	6	True				
ANR	2145035	CallExpression	"m_state -> SetScoreFactor ( ReadUserLogState :: SCORE_CTIME , SCORE_FACTOR_CTIME )"		2144994	0					
ANR	2145036	Callee	m_state -> SetScoreFactor		2144994	0					
ANR	2145037	PtrMemberAccess	m_state -> SetScoreFactor		2144994	0					
ANR	2145038	Identifier	m_state		2144994	0					
ANR	2145039	Identifier	SetScoreFactor		2144994	1					
ANR	2145040	ArgumentList	ReadUserLogState :: SCORE_CTIME		2144994	1					
ANR	2145041	Argument	ReadUserLogState :: SCORE_CTIME		2144994	0					
ANR	2145042	Identifier	ReadUserLogState :: SCORE_CTIME		2144994	0					
ANR	2145043	Argument	SCORE_FACTOR_CTIME		2144994	1					
ANR	2145044	Identifier	SCORE_FACTOR_CTIME		2144994	0					
ANR	2145045	ExpressionStatement	"m_state -> SetScoreFactor ( ReadUserLogState :: SCORE_INODE , SCORE_FACTOR_INODE )"	335:1:8620:8704	2144994	7	True				
ANR	2145046	CallExpression	"m_state -> SetScoreFactor ( ReadUserLogState :: SCORE_INODE , SCORE_FACTOR_INODE )"		2144994	0					
ANR	2145047	Callee	m_state -> SetScoreFactor		2144994	0					
ANR	2145048	PtrMemberAccess	m_state -> SetScoreFactor		2144994	0					
ANR	2145049	Identifier	m_state		2144994	0					
ANR	2145050	Identifier	SetScoreFactor		2144994	1					
ANR	2145051	ArgumentList	ReadUserLogState :: SCORE_INODE		2144994	1					
ANR	2145052	Argument	ReadUserLogState :: SCORE_INODE		2144994	0					
ANR	2145053	Identifier	ReadUserLogState :: SCORE_INODE		2144994	0					
ANR	2145054	Argument	SCORE_FACTOR_INODE		2144994	1					
ANR	2145055	Identifier	SCORE_FACTOR_INODE		2144994	0					
ANR	2145056	ExpressionStatement	"m_state -> SetScoreFactor ( ReadUserLogState :: SCORE_SAME_SIZE , SCORE_FACTOR_SAME_SIZE )"	337:1:8707:8799	2144994	8	True				
ANR	2145057	CallExpression	"m_state -> SetScoreFactor ( ReadUserLogState :: SCORE_SAME_SIZE , SCORE_FACTOR_SAME_SIZE )"		2144994	0					
ANR	2145058	Callee	m_state -> SetScoreFactor		2144994	0					
ANR	2145059	PtrMemberAccess	m_state -> SetScoreFactor		2144994	0					
ANR	2145060	Identifier	m_state		2144994	0					
ANR	2145061	Identifier	SetScoreFactor		2144994	1					
ANR	2145062	ArgumentList	ReadUserLogState :: SCORE_SAME_SIZE		2144994	1					
ANR	2145063	Argument	ReadUserLogState :: SCORE_SAME_SIZE		2144994	0					
ANR	2145064	Identifier	ReadUserLogState :: SCORE_SAME_SIZE		2144994	0					
ANR	2145065	Argument	SCORE_FACTOR_SAME_SIZE		2144994	1					
ANR	2145066	Identifier	SCORE_FACTOR_SAME_SIZE		2144994	0					
ANR	2145067	ExpressionStatement	"m_state -> SetScoreFactor ( ReadUserLogState :: SCORE_GROWN , SCORE_FACTOR_GROWN )"	339:1:8802:8886	2144994	9	True				
ANR	2145068	CallExpression	"m_state -> SetScoreFactor ( ReadUserLogState :: SCORE_GROWN , SCORE_FACTOR_GROWN )"		2144994	0					
ANR	2145069	Callee	m_state -> SetScoreFactor		2144994	0					
ANR	2145070	PtrMemberAccess	m_state -> SetScoreFactor		2144994	0					
ANR	2145071	Identifier	m_state		2144994	0					
ANR	2145072	Identifier	SetScoreFactor		2144994	1					
ANR	2145073	ArgumentList	ReadUserLogState :: SCORE_GROWN		2144994	1					
ANR	2145074	Argument	ReadUserLogState :: SCORE_GROWN		2144994	0					
ANR	2145075	Identifier	ReadUserLogState :: SCORE_GROWN		2144994	0					
ANR	2145076	Argument	SCORE_FACTOR_GROWN		2144994	1					
ANR	2145077	Identifier	SCORE_FACTOR_GROWN		2144994	0					
ANR	2145078	ExpressionStatement	"m_state -> SetScoreFactor ( ReadUserLogState :: SCORE_SHRUNK , SCORE_FACTOR_SHRUNK )"	341:1:8889:8975	2144994	10	True				
ANR	2145079	CallExpression	"m_state -> SetScoreFactor ( ReadUserLogState :: SCORE_SHRUNK , SCORE_FACTOR_SHRUNK )"		2144994	0					
ANR	2145080	Callee	m_state -> SetScoreFactor		2144994	0					
ANR	2145081	PtrMemberAccess	m_state -> SetScoreFactor		2144994	0					
ANR	2145082	Identifier	m_state		2144994	0					
ANR	2145083	Identifier	SetScoreFactor		2144994	1					
ANR	2145084	ArgumentList	ReadUserLogState :: SCORE_SHRUNK		2144994	1					
ANR	2145085	Argument	ReadUserLogState :: SCORE_SHRUNK		2144994	0					
ANR	2145086	Identifier	ReadUserLogState :: SCORE_SHRUNK		2144994	0					
ANR	2145087	Argument	SCORE_FACTOR_SHRUNK		2144994	1					
ANR	2145088	Identifier	SCORE_FACTOR_SHRUNK		2144994	0					
ANR	2145089	IfStatement	if ( restore )		2144994	11					
ANR	2145090	Condition	restore	344:6:8984:8990	2144994	0	True				
ANR	2145091	Identifier	restore		2144994	0					
ANR	2145092	CompoundStatement		25:16:757:757	2144994	1					
ANR	2145093	ElseStatement	else		2144994	0					
ANR	2145094	IfStatement	if ( m_handle_rot && check_for_rotation )		2144994	0					
ANR	2145095	Condition	m_handle_rot && check_for_rotation	347:11:9026:9059	2144994	0	True				
ANR	2145096	AndExpression	m_handle_rot && check_for_rotation		2144994	0		&&			
ANR	2145097	Identifier	m_handle_rot		2144994	0					
ANR	2145098	Identifier	check_for_rotation		2144994	1					
ANR	2145099	CompoundStatement		28:48:826:826	2144994	1					
ANR	2145100	IfStatement	"if ( ! FindPrevFile ( m_max_rotations , 0 , true ) )"		2144994	0					
ANR	2145101	Condition	"! FindPrevFile ( m_max_rotations , 0 , true )"	348:6:9071:9112	2144994	0	True				
ANR	2145102	UnaryOperationExpression	"! FindPrevFile ( m_max_rotations , 0 , true )"		2144994	0					
ANR	2145103	UnaryOperator	!		2144994	0					
ANR	2145104	CallExpression	"FindPrevFile ( m_max_rotations , 0 , true )"		2144994	1					
ANR	2145105	Callee	FindPrevFile		2144994	0					
ANR	2145106	Identifier	FindPrevFile		2144994	0					
ANR	2145107	ArgumentList	m_max_rotations		2144994	1					
ANR	2145108	Argument	m_max_rotations		2144994	0					
ANR	2145109	Identifier	m_max_rotations		2144994	0					
ANR	2145110	Argument	0		2144994	1					
ANR	2145111	PrimaryExpression	0		2144994	0					
ANR	2145112	Argument	true		2144994	2					
ANR	2145113	Identifier	true		2144994	0					
ANR	2145114	CompoundStatement		29:51:879:879	2144994	1					
ANR	2145115	ExpressionStatement	releaseResources ( )	349:3:9121:9139	2144994	0	True				
ANR	2145116	CallExpression	releaseResources ( )		2144994	0					
ANR	2145117	Callee	releaseResources		2144994	0					
ANR	2145118	Identifier	releaseResources		2144994	0					
ANR	2145119	ArgumentList			2144994	1					
ANR	2145120	ExpressionStatement	"Error ( LOG_ERROR_FILE_NOT_FOUND , __LINE__ )"	350:3:9144:9187	2144994	1	True				
ANR	2145121	CallExpression	"Error ( LOG_ERROR_FILE_NOT_FOUND , __LINE__ )"		2144994	0					
ANR	2145122	Callee	Error		2144994	0					
ANR	2145123	Identifier	Error		2144994	0					
ANR	2145124	ArgumentList	LOG_ERROR_FILE_NOT_FOUND		2144994	1					
ANR	2145125	Argument	LOG_ERROR_FILE_NOT_FOUND		2144994	0					
ANR	2145126	Identifier	LOG_ERROR_FILE_NOT_FOUND		2144994	0					
ANR	2145127	Argument	__LINE__		2144994	1					
ANR	2145128	Identifier	__LINE__		2144994	0					
ANR	2145129	ReturnStatement	return false ;	351:3:9192:9204	2144994	2	True				
ANR	2145130	Identifier	false		2144994	0					
ANR	2145131	ElseStatement	else		2144994	0					
ANR	2145132	CompoundStatement		35:6:982:982	2144994	0					
ANR	2145133	ExpressionStatement	m_max_rotations = 0	355:2:9223:9242	2144994	0	True				
ANR	2145134	AssignmentExpression	m_max_rotations = 0		2144994	0		=			
ANR	2145135	Identifier	m_max_rotations		2144994	0					
ANR	2145136	PrimaryExpression	0		2144994	1					
ANR	2145137	IfStatement	"if ( m_state -> Rotation ( 0 , true ) )"		2144994	1					
ANR	2145138	Condition	"m_state -> Rotation ( 0 , true )"	356:7:9251:9278	2144994	0	True				
ANR	2145139	CallExpression	"m_state -> Rotation ( 0 , true )"		2144994	0					
ANR	2145140	Callee	m_state -> Rotation		2144994	0					
ANR	2145141	PtrMemberAccess	m_state -> Rotation		2144994	0					
ANR	2145142	Identifier	m_state		2144994	0					
ANR	2145143	Identifier	Rotation		2144994	1					
ANR	2145144	ArgumentList	0		2144994	1					
ANR	2145145	Argument	0		2144994	0					
ANR	2145146	PrimaryExpression	0		2144994	0					
ANR	2145147	Argument	true		2144994	1					
ANR	2145148	Identifier	true		2144994	0					
ANR	2145149	CompoundStatement		37:38:1045:1045	2144994	1					
ANR	2145150	ExpressionStatement	releaseResources ( )	357:3:9287:9305	2144994	0	True				
ANR	2145151	CallExpression	releaseResources ( )		2144994	0					
ANR	2145152	Callee	releaseResources		2144994	0					
ANR	2145153	Identifier	releaseResources		2144994	0					
ANR	2145154	ArgumentList			2144994	1					
ANR	2145155	ExpressionStatement	"Error ( LOG_ERROR_FILE_NOT_FOUND , __LINE__ )"	358:3:9310:9353	2144994	1	True				
ANR	2145156	CallExpression	"Error ( LOG_ERROR_FILE_NOT_FOUND , __LINE__ )"		2144994	0					
ANR	2145157	Callee	Error		2144994	0					
ANR	2145158	Identifier	Error		2144994	0					
ANR	2145159	ArgumentList	LOG_ERROR_FILE_NOT_FOUND		2144994	1					
ANR	2145160	Argument	LOG_ERROR_FILE_NOT_FOUND		2144994	0					
ANR	2145161	Identifier	LOG_ERROR_FILE_NOT_FOUND		2144994	0					
ANR	2145162	Argument	__LINE__		2144994	1					
ANR	2145163	Identifier	__LINE__		2144994	0					
ANR	2145164	ReturnStatement	return false ;	359:3:9358:9370	2144994	2	True				
ANR	2145165	Identifier	false		2144994	0					
ANR	2145166	IfStatement	if ( read_only )		2144994	12					
ANR	2145167	Condition	read_only	364:6:9412:9420	2144994	0	True				
ANR	2145168	Identifier	read_only		2144994	0					
ANR	2145169	CompoundStatement		45:18:1187:1187	2144994	1					
ANR	2145170	ExpressionStatement	m_lock_enable = false	365:2:9428:9449	2144994	0	True				
ANR	2145171	AssignmentExpression	m_lock_enable = false		2144994	0		=			
ANR	2145172	Identifier	m_lock_enable		2144994	0					
ANR	2145173	Identifier	false		2144994	1					
ANR	2145174	ElseStatement	else		2144994	0					
ANR	2145175	CompoundStatement		47:8:1222:1222	2144994	0					
ANR	2145176	ExpressionStatement	"m_lock_enable = param_boolean ( ""ENABLE_USERLOG_LOCKING"" , true )"	367:2:9463:9526	2144994	0	True				
ANR	2145177	AssignmentExpression	"m_lock_enable = param_boolean ( ""ENABLE_USERLOG_LOCKING"" , true )"		2144994	0		=			
ANR	2145178	Identifier	m_lock_enable		2144994	0					
ANR	2145179	CallExpression	"param_boolean ( ""ENABLE_USERLOG_LOCKING"" , true )"		2144994	1					
ANR	2145180	Callee	param_boolean		2144994	0					
ANR	2145181	Identifier	param_boolean		2144994	0					
ANR	2145182	ArgumentList	"""ENABLE_USERLOG_LOCKING"""		2144994	1					
ANR	2145183	Argument	"""ENABLE_USERLOG_LOCKING"""		2144994	0					
ANR	2145184	PrimaryExpression	"""ENABLE_USERLOG_LOCKING"""		2144994	0					
ANR	2145185	Argument	true		2144994	1					
ANR	2145186	Identifier	true		2144994	0					
ANR	2145187	ExpressionStatement	"m_close_file = param_boolean ( ""ALWAYS_CLOSE_USERLOG"" , false )"	371:1:9582:9643	2144994	13	True				
ANR	2145188	AssignmentExpression	"m_close_file = param_boolean ( ""ALWAYS_CLOSE_USERLOG"" , false )"		2144994	0		=			
ANR	2145189	Identifier	m_close_file		2144994	0					
ANR	2145190	CallExpression	"param_boolean ( ""ALWAYS_CLOSE_USERLOG"" , false )"		2144994	1					
ANR	2145191	Callee	param_boolean		2144994	0					
ANR	2145192	Identifier	param_boolean		2144994	0					
ANR	2145193	ArgumentList	"""ALWAYS_CLOSE_USERLOG"""		2144994	1					
ANR	2145194	Argument	"""ALWAYS_CLOSE_USERLOG"""		2144994	0					
ANR	2145195	PrimaryExpression	"""ALWAYS_CLOSE_USERLOG"""		2144994	0					
ANR	2145196	Argument	false		2144994	1					
ANR	2145197	Identifier	false		2144994	0					
ANR	2145198	Statement	if	372:2:9647:9648	2144994	14	True				
ANR	2145199	Statement	defined	372:5:9650:9656	2144994	15	True				
ANR	2145200	Statement	(	372:12:9657:9657	2144994	16	True				
ANR	2145201	Statement	WIN32	372:13:9658:9662	2144994	17	True				
ANR	2145202	Statement	)	372:18:9663:9663	2144994	18	True				
ANR	2145203	IfStatement	if ( m_handle_rot )		2144994	19					
ANR	2145204	Condition	m_handle_rot	373:6:9671:9682	2144994	0	True				
ANR	2145205	Identifier	m_handle_rot		2144994	0					
ANR	2145206	CompoundStatement		54:21:1449:1449	2144994	1					
ANR	2145207	ExpressionStatement	m_close_file = true	374:2:9690:9709	2144994	0	True				
ANR	2145208	AssignmentExpression	m_close_file = true		2144994	0		=			
ANR	2145209	Identifier	m_close_file		2144994	0					
ANR	2145210	Identifier	true		2144994	1					
ANR	2145211	Statement	endif	376:2:9762:9766	2144994	20	True				
ANR	2145212	IfStatement	if ( restore )		2144994	21					
ANR	2145213	Condition	restore	379:6:9834:9840	2144994	0	True				
ANR	2145214	Identifier	restore		2144994	0					
ANR	2145215	CompoundStatement		63:2:1691:1738	2144994	1					
ANR	2145216	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""init: ReOpening file %s\\n"" , m_state -> CurPath ( ) )"	380:2:9848:9924	2144994	0	True				
ANR	2145217	CallExpression	"dprintf ( D_FULLDEBUG , ""init: ReOpening file %s\\n"" , m_state -> CurPath ( ) )"		2144994	0					
ANR	2145218	Callee	dprintf		2144994	0					
ANR	2145219	Identifier	dprintf		2144994	0					
ANR	2145220	ArgumentList	D_FULLDEBUG		2144994	1					
ANR	2145221	Argument	D_FULLDEBUG		2144994	0					
ANR	2145222	Identifier	D_FULLDEBUG		2144994	0					
ANR	2145223	Argument	"""init: ReOpening file %s\\n"""		2144994	1					
ANR	2145224	PrimaryExpression	"""init: ReOpening file %s\\n"""		2144994	0					
ANR	2145225	Argument	m_state -> CurPath ( )		2144994	2					
ANR	2145226	CallExpression	m_state -> CurPath ( )		2144994	0					
ANR	2145227	Callee	m_state -> CurPath		2144994	0					
ANR	2145228	PtrMemberAccess	m_state -> CurPath		2144994	0					
ANR	2145229	Identifier	m_state		2144994	0					
ANR	2145230	Identifier	CurPath		2144994	1					
ANR	2145231	ArgumentList			2144994	1					
ANR	2145232	IdentifierDeclStatement	ULogEventOutcome status = ReopenLogFile ( true ) ;	382:2:9928:9975	2144994	1	True				
ANR	2145233	IdentifierDecl	status = ReopenLogFile ( true )		2144994	0					
ANR	2145234	IdentifierDeclType	ULogEventOutcome		2144994	0					
ANR	2145235	Identifier	status		2144994	1					
ANR	2145236	AssignmentExpression	status = ReopenLogFile ( true )		2144994	2		=			
ANR	2145237	Identifier	status		2144994	0					
ANR	2145238	CallExpression	ReopenLogFile ( true )		2144994	1					
ANR	2145239	Callee	ReopenLogFile		2144994	0					
ANR	2145240	Identifier	ReopenLogFile		2144994	0					
ANR	2145241	ArgumentList	true		2144994	1					
ANR	2145242	Argument	true		2144994	0					
ANR	2145243	Identifier	true		2144994	0					
ANR	2145244	IfStatement	if ( ULOG_MISSED_EVENT == status )		2144994	2					
ANR	2145245	Condition	ULOG_MISSED_EVENT == status	383:7:9984:10010	2144994	0	True				
ANR	2145246	EqualityExpression	ULOG_MISSED_EVENT == status		2144994	0		==			
ANR	2145247	Identifier	ULOG_MISSED_EVENT		2144994	0					
ANR	2145248	Identifier	status		2144994	1					
ANR	2145249	CompoundStatement		64:37:1777:1777	2144994	1					
ANR	2145250	ExpressionStatement	m_missed_event = true	384:3:10019:10040	2144994	0	True				
ANR	2145251	AssignmentExpression	m_missed_event = true		2144994	0		=			
ANR	2145252	Identifier	m_missed_event		2144994	0					
ANR	2145253	Identifier	true		2144994	1					
ANR	2145254	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""ReadUserLog::initialize: Missed event\\n"" )"	385:3:10084:10155	2144994	1	True				
ANR	2145255	CallExpression	"dprintf ( D_FULLDEBUG , ""ReadUserLog::initialize: Missed event\\n"" )"		2144994	0					
ANR	2145256	Callee	dprintf		2144994	0					
ANR	2145257	Identifier	dprintf		2144994	0					
ANR	2145258	ArgumentList	D_FULLDEBUG		2144994	1					
ANR	2145259	Argument	D_FULLDEBUG		2144994	0					
ANR	2145260	Identifier	D_FULLDEBUG		2144994	0					
ANR	2145261	Argument	"""ReadUserLog::initialize: Missed event\\n"""		2144994	1					
ANR	2145262	PrimaryExpression	"""ReadUserLog::initialize: Missed event\\n"""		2144994	0					
ANR	2145263	ElseStatement	else		2144994	0					
ANR	2145264	IfStatement	if ( status != ULOG_OK )		2144994	0					
ANR	2145265	Condition	status != ULOG_OK	388:12:10173:10189	2144994	0	True				
ANR	2145266	EqualityExpression	status != ULOG_OK		2144994	0		!=			
ANR	2145267	Identifier	status		2144994	0					
ANR	2145268	Identifier	ULOG_OK		2144994	1					
ANR	2145269	CompoundStatement		69:32:1956:1956	2144994	1					
ANR	2145270	ExpressionStatement	"dprintf ( D_ALWAYS , ""ReadUserLog::initialize: error re-opening file: %d (%d @ %d)\\n"" , status , m_error , m_line_num )"	389:3:10198:10318	2144994	0	True				
ANR	2145271	CallExpression	"dprintf ( D_ALWAYS , ""ReadUserLog::initialize: error re-opening file: %d (%d @ %d)\\n"" , status , m_error , m_line_num )"		2144994	0					
ANR	2145272	Callee	dprintf		2144994	0					
ANR	2145273	Identifier	dprintf		2144994	0					
ANR	2145274	ArgumentList	D_ALWAYS		2144994	1					
ANR	2145275	Argument	D_ALWAYS		2144994	0					
ANR	2145276	Identifier	D_ALWAYS		2144994	0					
ANR	2145277	Argument	"""ReadUserLog::initialize: error re-opening file: %d (%d @ %d)\\n"""		2144994	1					
ANR	2145278	PrimaryExpression	"""ReadUserLog::initialize: error re-opening file: %d (%d @ %d)\\n"""		2144994	0					
ANR	2145279	Argument	status		2144994	2					
ANR	2145280	Identifier	status		2144994	0					
ANR	2145281	Argument	m_error		2144994	3					
ANR	2145282	Identifier	m_error		2144994	0					
ANR	2145283	Argument	m_line_num		2144994	4					
ANR	2145284	Identifier	m_line_num		2144994	0					
ANR	2145285	ExpressionStatement	releaseResources ( )	391:3:10323:10341	2144994	1	True				
ANR	2145286	CallExpression	releaseResources ( )		2144994	0					
ANR	2145287	Callee	releaseResources		2144994	0					
ANR	2145288	Identifier	releaseResources		2144994	0					
ANR	2145289	ArgumentList			2144994	1					
ANR	2145290	ExpressionStatement	"Error ( LOG_ERROR_FILE_NOT_FOUND , __LINE__ )"	392:3:10346:10389	2144994	2	True				
ANR	2145291	CallExpression	"Error ( LOG_ERROR_FILE_NOT_FOUND , __LINE__ )"		2144994	0					
ANR	2145292	Callee	Error		2144994	0					
ANR	2145293	Identifier	Error		2144994	0					
ANR	2145294	ArgumentList	LOG_ERROR_FILE_NOT_FOUND		2144994	1					
ANR	2145295	Argument	LOG_ERROR_FILE_NOT_FOUND		2144994	0					
ANR	2145296	Identifier	LOG_ERROR_FILE_NOT_FOUND		2144994	0					
ANR	2145297	Argument	__LINE__		2144994	1					
ANR	2145298	Identifier	__LINE__		2144994	0					
ANR	2145299	ReturnStatement	return false ;	393:3:10394:10406	2144994	3	True				
ANR	2145300	Identifier	false		2144994	0					
ANR	2145301	ElseStatement	else		2144994	0					
ANR	2145302	CompoundStatement		77:6:2184:2184	2144994	0					
ANR	2145303	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""init: Opening file %s\\n"" , m_state -> CurPath ( ) )"	397:2:10425:10494	2144994	0	True				
ANR	2145304	CallExpression	"dprintf ( D_FULLDEBUG , ""init: Opening file %s\\n"" , m_state -> CurPath ( ) )"		2144994	0					
ANR	2145305	Callee	dprintf		2144994	0					
ANR	2145306	Identifier	dprintf		2144994	0					
ANR	2145307	ArgumentList	D_FULLDEBUG		2144994	1					
ANR	2145308	Argument	D_FULLDEBUG		2144994	0					
ANR	2145309	Identifier	D_FULLDEBUG		2144994	0					
ANR	2145310	Argument	"""init: Opening file %s\\n"""		2144994	1					
ANR	2145311	PrimaryExpression	"""init: Opening file %s\\n"""		2144994	0					
ANR	2145312	Argument	m_state -> CurPath ( )		2144994	2					
ANR	2145313	CallExpression	m_state -> CurPath ( )		2144994	0					
ANR	2145314	Callee	m_state -> CurPath		2144994	0					
ANR	2145315	PtrMemberAccess	m_state -> CurPath		2144994	0					
ANR	2145316	Identifier	m_state		2144994	0					
ANR	2145317	Identifier	CurPath		2144994	1					
ANR	2145318	ArgumentList			2144994	1					
ANR	2145319	IfStatement	if ( ULOG_OK != OpenLogFile ( restore ) )		2144994	1					
ANR	2145320	Condition	ULOG_OK != OpenLogFile ( restore )	398:7:10503:10535	2144994	0	True				
ANR	2145321	EqualityExpression	ULOG_OK != OpenLogFile ( restore )		2144994	0		!=			
ANR	2145322	Identifier	ULOG_OK		2144994	0					
ANR	2145323	CallExpression	OpenLogFile ( restore )		2144994	1					
ANR	2145324	Callee	OpenLogFile		2144994	0					
ANR	2145325	Identifier	OpenLogFile		2144994	0					
ANR	2145326	ArgumentList	restore		2144994	1					
ANR	2145327	Argument	restore		2144994	0					
ANR	2145328	Identifier	restore		2144994	0					
ANR	2145329	CompoundStatement		79:43:2302:2302	2144994	1					
ANR	2145330	ExpressionStatement	"dprintf ( D_ALWAYS , ""ReadUserLog::initialize: error opening file\\n"" )"	399:3:10544:10618	2144994	0	True				
ANR	2145331	CallExpression	"dprintf ( D_ALWAYS , ""ReadUserLog::initialize: error opening file\\n"" )"		2144994	0					
ANR	2145332	Callee	dprintf		2144994	0					
ANR	2145333	Identifier	dprintf		2144994	0					
ANR	2145334	ArgumentList	D_ALWAYS		2144994	1					
ANR	2145335	Argument	D_ALWAYS		2144994	0					
ANR	2145336	Identifier	D_ALWAYS		2144994	0					
ANR	2145337	Argument	"""ReadUserLog::initialize: error opening file\\n"""		2144994	1					
ANR	2145338	PrimaryExpression	"""ReadUserLog::initialize: error opening file\\n"""		2144994	0					
ANR	2145339	ExpressionStatement	releaseResources ( )	401:3:10623:10641	2144994	1	True				
ANR	2145340	CallExpression	releaseResources ( )		2144994	0					
ANR	2145341	Callee	releaseResources		2144994	0					
ANR	2145342	Identifier	releaseResources		2144994	0					
ANR	2145343	ArgumentList			2144994	1					
ANR	2145344	ExpressionStatement	"Error ( LOG_ERROR_FILE_NOT_FOUND , __LINE__ )"	402:3:10646:10689	2144994	2	True				
ANR	2145345	CallExpression	"Error ( LOG_ERROR_FILE_NOT_FOUND , __LINE__ )"		2144994	0					
ANR	2145346	Callee	Error		2144994	0					
ANR	2145347	Identifier	Error		2144994	0					
ANR	2145348	ArgumentList	LOG_ERROR_FILE_NOT_FOUND		2144994	1					
ANR	2145349	Argument	LOG_ERROR_FILE_NOT_FOUND		2144994	0					
ANR	2145350	Identifier	LOG_ERROR_FILE_NOT_FOUND		2144994	0					
ANR	2145351	Argument	__LINE__		2144994	1					
ANR	2145352	Identifier	__LINE__		2144994	0					
ANR	2145353	ReturnStatement	return false ;	403:3:10694:10706	2144994	3	True				
ANR	2145354	Identifier	false		2144994	0					
ANR	2145355	ExpressionStatement	CloseLogFile ( false )	408:1:10755:10776	2144994	22	True				
ANR	2145356	CallExpression	CloseLogFile ( false )		2144994	0					
ANR	2145357	Callee	CloseLogFile		2144994	0					
ANR	2145358	Identifier	CloseLogFile		2144994	0					
ANR	2145359	ArgumentList	false		2144994	1					
ANR	2145360	Argument	false		2144994	0					
ANR	2145361	Identifier	false		2144994	0					
ANR	2145362	ExpressionStatement	m_initialized = true	409:1:10779:10799	2144994	23	True				
ANR	2145363	AssignmentExpression	m_initialized = true		2144994	0		=			
ANR	2145364	Identifier	m_initialized		2144994	0					
ANR	2145365	Identifier	true		2144994	1					
ANR	2145366	ReturnStatement	return true ;	410:1:10802:10813	2144994	24	True				
ANR	2145367	Identifier	true		2144994	0					
ANR	2145368	ReturnType	bool		2144994	1					
ANR	2145369	Identifier	ReadUserLog :: InternalInitialize		2144994	2					
ANR	2145370	ParameterList	"int max_rotations , bool check_for_rotation , bool restore , bool enable_header_read , bool read_only"		2144994	3					
ANR	2145371	Parameter	int max_rotations	315:34:8096:8112	2144994	0	True				
ANR	2145372	ParameterType	int		2144994	0					
ANR	2145373	Identifier	max_rotations		2144994	1					
ANR	2145374	Parameter	bool check_for_rotation	316:10:8125:8147	2144994	1	True				
ANR	2145375	ParameterType	bool		2144994	0					
ANR	2145376	Identifier	check_for_rotation		2144994	1					
ANR	2145377	Parameter	bool restore	317:10:8160:8171	2144994	2	True				
ANR	2145378	ParameterType	bool		2144994	0					
ANR	2145379	Identifier	restore		2144994	1					
ANR	2145380	Parameter	bool enable_header_read	318:10:8184:8206	2144994	3	True				
ANR	2145381	ParameterType	bool		2144994	0					
ANR	2145382	Identifier	enable_header_read		2144994	1					
ANR	2145383	Parameter	bool read_only	319:10:8219:8232	2144994	4	True				
ANR	2145384	ParameterType	bool		2144994	0					
ANR	2145385	Identifier	read_only		2144994	1					
ANR	2145386	CFGEntryNode	ENTRY		2144994		True				
ANR	2145387	CFGExitNode	EXIT		2144994		True				
ANR	2145388	Symbol	FindPrevFile		2144994						
ANR	2145389	Symbol	m_initialized		2144994						
ANR	2145390	Symbol	SCORE_FACTOR_SAME_SIZE		2144994						
ANR	2145391	Symbol	check_for_rotation		2144994						
ANR	2145392	Symbol	LOG_ERROR_RE_INITIALIZE		2144994						
ANR	2145393	Symbol	ReadUserLogState :: SCORE_CTIME		2144994						
ANR	2145394	Symbol	m_line_num		2144994						
ANR	2145395	Symbol	* m_state		2144994						
ANR	2145396	Symbol	m_read_header		2144994						
ANR	2145397	Symbol	max_rotations		2144994						
ANR	2145398	Symbol	SCORE_FACTOR_INODE		2144994						
ANR	2145399	Symbol	m_lock		2144994						
ANR	2145400	Symbol	m_state -> Rotation		2144994						
ANR	2145401	Symbol	OpenLogFile		2144994						
ANR	2145402	Symbol	m_state		2144994						
ANR	2145403	Symbol	m_state -> CurPath		2144994						
ANR	2145404	Symbol	read_only		2144994						
ANR	2145405	Symbol	m_max_rotations		2144994						
ANR	2145406	Symbol	enable_header_read		2144994						
ANR	2145407	Symbol	m_error		2144994						
ANR	2145408	Symbol	m_read_only		2144994						
ANR	2145409	Symbol	NULL		2144994						
ANR	2145410	Symbol	restore		2144994						
ANR	2145411	Symbol	m_lock_enable		2144994						
ANR	2145412	Symbol	ReadUserLogState :: SCORE_GROWN		2144994						
ANR	2145413	Symbol	false		2144994						
ANR	2145414	Symbol	D_ALWAYS		2144994						
ANR	2145415	Symbol	ReopenLogFile		2144994						
ANR	2145416	Symbol	SCORE_FACTOR_SHRUNK		2144994						
ANR	2145417	Symbol	param_boolean		2144994						
ANR	2145418	Symbol	D_FULLDEBUG		2144994						
ANR	2145419	Symbol	m_missed_event		2144994						
ANR	2145420	Symbol	ReadUserLogState :: SCORE_SHRUNK		2144994						
ANR	2145421	Symbol	__LINE__		2144994						
ANR	2145422	Symbol	m_handle_rot		2144994						
ANR	2145423	Symbol	m_close_file		2144994						
ANR	2145424	Symbol	ULOG_OK		2144994						
ANR	2145425	Symbol	ReadUserLogState :: SCORE_INODE		2144994						
ANR	2145426	Symbol	SCORE_FACTOR_GROWN		2144994						
ANR	2145427	Symbol	true		2144994						
ANR	2145428	Symbol	SCORE_FACTOR_CTIME		2144994						
ANR	2145429	Symbol	ReadUserLogState :: SCORE_SAME_SIZE		2144994						
ANR	2145430	Symbol	LOG_ERROR_FILE_NOT_FOUND		2144994						
ANR	2145431	Symbol	ULOG_MISSED_EVENT		2144994						
ANR	2145432	Symbol	status		2144994						
ANR	2145433	Function	ReadUserLog :: CheckFileStatus	414:0:10843:11037							
ANR	2145434	FunctionDef	ReadUserLog :: CheckFileStatus ()		2145433	0					
ANR	2145435	CompoundStatement		416:0:10904:11037	2145433	0					
ANR	2145436	IdentifierDeclStatement	bool is_empty ;	417:1:10907:10921	2145433	0	True				
ANR	2145437	IdentifierDecl	is_empty		2145433	0					
ANR	2145438	IdentifierDeclType	bool		2145433	0					
ANR	2145439	Identifier	is_empty		2145433	1					
ANR	2145440	IfStatement	if ( ! m_state )		2145433	1					
ANR	2145441	Condition	! m_state	418:6:10929:10936	2145433	0	True				
ANR	2145442	UnaryOperationExpression	! m_state		2145433	0					
ANR	2145443	UnaryOperator	!		2145433	0					
ANR	2145444	Identifier	m_state		2145433	1					
ANR	2145445	CompoundStatement		3:17:35:35	2145433	1					
ANR	2145446	ReturnStatement	return ReadUserLog :: LOG_STATUS_ERROR ;	419:2:10944:10980	2145433	0	True				
ANR	2145447	Identifier	ReadUserLog :: LOG_STATUS_ERROR		2145433	0					
ANR	2145448	ReturnStatement	"return m_state -> CheckFileStatus ( m_fd , is_empty ) ;"	421:1:10986:11035	2145433	2	True				
ANR	2145449	CallExpression	"m_state -> CheckFileStatus ( m_fd , is_empty )"		2145433	0					
ANR	2145450	Callee	m_state -> CheckFileStatus		2145433	0					
ANR	2145451	PtrMemberAccess	m_state -> CheckFileStatus		2145433	0					
ANR	2145452	Identifier	m_state		2145433	0					
ANR	2145453	Identifier	CheckFileStatus		2145433	1					
ANR	2145454	ArgumentList	m_fd		2145433	1					
ANR	2145455	Argument	m_fd		2145433	0					
ANR	2145456	Identifier	m_fd		2145433	0					
ANR	2145457	Argument	is_empty		2145433	1					
ANR	2145458	Identifier	is_empty		2145433	0					
ANR	2145459	ReturnType	ReadUserLog :: FileStatus		2145433	1					
ANR	2145460	Identifier	ReadUserLog :: CheckFileStatus		2145433	2					
ANR	2145461	ParameterList			2145433	3					
ANR	2145462	CFGEntryNode	ENTRY		2145433		True				
ANR	2145463	CFGExitNode	EXIT		2145433		True				
ANR	2145464	Symbol	m_state		2145433						
ANR	2145465	Symbol	m_fd		2145433						
ANR	2145466	Symbol	* m_state		2145433						
ANR	2145467	Symbol	ReadUserLog :: LOG_STATUS_ERROR		2145433						
ANR	2145468	Symbol	is_empty		2145433						
ANR	2145469	Symbol	m_state -> CheckFileStatus		2145433						
ANR	2145470	Function	ReadUserLog :: CheckFileStatus	424:0:11040:11227							
ANR	2145471	FunctionDef	ReadUserLog :: CheckFileStatus (bool & is_empty)		2145470	0					
ANR	2145472	CompoundStatement		426:0:11111:11227	2145470	0					
ANR	2145473	IfStatement	if ( ! m_state )		2145470	0					
ANR	2145474	Condition	! m_state	427:6:11119:11126	2145470	0	True				
ANR	2145475	UnaryOperationExpression	! m_state		2145470	0					
ANR	2145476	UnaryOperator	!		2145470	0					
ANR	2145477	Identifier	m_state		2145470	1					
ANR	2145478	CompoundStatement		2:17:18:18	2145470	1					
ANR	2145479	ReturnStatement	return ReadUserLog :: LOG_STATUS_ERROR ;	428:2:11134:11170	2145470	0	True				
ANR	2145480	Identifier	ReadUserLog :: LOG_STATUS_ERROR		2145470	0					
ANR	2145481	ReturnStatement	"return m_state -> CheckFileStatus ( m_fd , is_empty ) ;"	430:1:11176:11225	2145470	1	True				
ANR	2145482	CallExpression	"m_state -> CheckFileStatus ( m_fd , is_empty )"		2145470	0					
ANR	2145483	Callee	m_state -> CheckFileStatus		2145470	0					
ANR	2145484	PtrMemberAccess	m_state -> CheckFileStatus		2145470	0					
ANR	2145485	Identifier	m_state		2145470	0					
ANR	2145486	Identifier	CheckFileStatus		2145470	1					
ANR	2145487	ArgumentList	m_fd		2145470	1					
ANR	2145488	Argument	m_fd		2145470	0					
ANR	2145489	Identifier	m_fd		2145470	0					
ANR	2145490	Argument	is_empty		2145470	1					
ANR	2145491	Identifier	is_empty		2145470	0					
ANR	2145492	ReturnType	ReadUserLog :: FileStatus		2145470	1					
ANR	2145493	Identifier	ReadUserLog :: CheckFileStatus		2145470	2					
ANR	2145494	ParameterList	bool & is_empty		2145470	3					
ANR	2145495	Parameter	bool & is_empty	425:30:11094:11107	2145470	0	True				
ANR	2145496	ParameterType	bool &		2145470	0					
ANR	2145497	Identifier	is_empty		2145470	1					
ANR	2145498	CFGEntryNode	ENTRY		2145470		True				
ANR	2145499	CFGExitNode	EXIT		2145470		True				
ANR	2145500	Symbol	m_state		2145470						
ANR	2145501	Symbol	m_fd		2145470						
ANR	2145502	Symbol	* m_state		2145470						
ANR	2145503	Symbol	ReadUserLog :: LOG_STATUS_ERROR		2145470						
ANR	2145504	Symbol	is_empty		2145470						
ANR	2145505	Symbol	m_state -> CheckFileStatus		2145470						
ANR	2145506	Function	ReadUserLog :: CloseLogFile	433:0:11230:11583							
ANR	2145507	FunctionDef	ReadUserLog :: CloseLogFile (bool force)		2145506	0					
ANR	2145508	CompoundStatement		435:0:11275:11583	2145506	0					
ANR	2145509	IfStatement	if ( force || m_close_file )		2145506	0					
ANR	2145510	Condition	force || m_close_file	436:6:11283:11303	2145506	0	True				
ANR	2145511	OrExpression	force || m_close_file		2145506	0		||			
ANR	2145512	Identifier	force		2145506	0					
ANR	2145513	Identifier	m_close_file		2145506	1					
ANR	2145514	CompoundStatement		2:30:31:31	2145506	1					
ANR	2145515	IfStatement	if ( m_lock && m_lock -> isLocked ( ) )		2145506	0					
ANR	2145516	Condition	m_lock && m_lock -> isLocked ( )	438:7:11317:11344	2145506	0	True				
ANR	2145517	AndExpression	m_lock && m_lock -> isLocked ( )		2145506	0		&&			
ANR	2145518	Identifier	m_lock		2145506	0					
ANR	2145519	CallExpression	m_lock -> isLocked ( )		2145506	1					
ANR	2145520	Callee	m_lock -> isLocked		2145506	0					
ANR	2145521	PtrMemberAccess	m_lock -> isLocked		2145506	0					
ANR	2145522	Identifier	m_lock		2145506	0					
ANR	2145523	Identifier	isLocked		2145506	1					
ANR	2145524	ArgumentList			2145506	1					
ANR	2145525	CompoundStatement		4:38:72:72	2145506	1					
ANR	2145526	ExpressionStatement	m_lock -> release ( )	439:3:11353:11370	2145506	0	True				
ANR	2145527	CallExpression	m_lock -> release ( )		2145506	0					
ANR	2145528	Callee	m_lock -> release		2145506	0					
ANR	2145529	PtrMemberAccess	m_lock -> release		2145506	0					
ANR	2145530	Identifier	m_lock		2145506	0					
ANR	2145531	Identifier	release		2145506	1					
ANR	2145532	ArgumentList			2145506	1					
ANR	2145533	ExpressionStatement	m_lock_rot = - 1	440:3:11375:11390	2145506	1	True				
ANR	2145534	AssignmentExpression	m_lock_rot = - 1		2145506	0		=			
ANR	2145535	Identifier	m_lock_rot		2145506	0					
ANR	2145536	UnaryOperationExpression	- 1		2145506	1					
ANR	2145537	UnaryOperator	-		2145506	0					
ANR	2145538	PrimaryExpression	1		2145506	1					
ANR	2145539	IfStatement	if ( m_enable_close )		2145506	1					
ANR	2145540	Condition	m_enable_close	443:7:11404:11417	2145506	0	True				
ANR	2145541	Identifier	m_enable_close		2145506	0					
ANR	2145542	CompoundStatement		9:24:145:145	2145506	1					
ANR	2145543	IfStatement	if ( m_fp )		2145506	0					
ANR	2145544	Condition	m_fp	444:8:11431:11434	2145506	0	True				
ANR	2145545	Identifier	m_fp		2145506	0					
ANR	2145546	CompoundStatement		10:15:162:162	2145506	1					
ANR	2145547	ExpressionStatement	fclose ( m_fp )	445:4:11444:11458	2145506	0	True				
ANR	2145548	CallExpression	fclose ( m_fp )		2145506	0					
ANR	2145549	Callee	fclose		2145506	0					
ANR	2145550	Identifier	fclose		2145506	0					
ANR	2145551	ArgumentList	m_fp		2145506	1					
ANR	2145552	Argument	m_fp		2145506	0					
ANR	2145553	Identifier	m_fp		2145506	0					
ANR	2145554	ExpressionStatement	m_fp = NULL	446:4:11464:11475	2145506	1	True				
ANR	2145555	AssignmentExpression	m_fp = NULL		2145506	0		=			
ANR	2145556	Identifier	m_fp		2145506	0					
ANR	2145557	Identifier	NULL		2145506	1					
ANR	2145558	ExpressionStatement	m_fd = - 1	447:4:11481:11490	2145506	2	True				
ANR	2145559	AssignmentExpression	m_fd = - 1		2145506	0		=			
ANR	2145560	Identifier	m_fd		2145506	0					
ANR	2145561	UnaryOperationExpression	- 1		2145506	1					
ANR	2145562	UnaryOperator	-		2145506	0					
ANR	2145563	PrimaryExpression	1		2145506	1					
ANR	2145564	ElseStatement	else		2145506	0					
ANR	2145565	IfStatement	if ( m_fd >= 0 )		2145506	0					
ANR	2145566	Condition	m_fd >= 0	449:13:11510:11518	2145506	0	True				
ANR	2145567	RelationalExpression	m_fd >= 0		2145506	0		>=			
ANR	2145568	Identifier	m_fd		2145506	0					
ANR	2145569	PrimaryExpression	0		2145506	1					
ANR	2145570	CompoundStatement		15:25:246:246	2145506	1					
ANR	2145571	ExpressionStatement	close ( m_fd )	450:4:11528:11539	2145506	0	True				
ANR	2145572	CallExpression	close ( m_fd )		2145506	0					
ANR	2145573	Callee	close		2145506	0					
ANR	2145574	Identifier	close		2145506	0					
ANR	2145575	ArgumentList	m_fd		2145506	1					
ANR	2145576	Argument	m_fd		2145506	0					
ANR	2145577	Identifier	m_fd		2145506	0					
ANR	2145578	ExpressionStatement	m_fd = - 1	451:4:11545:11554	2145506	1	True				
ANR	2145579	AssignmentExpression	m_fd = - 1		2145506	0		=			
ANR	2145580	Identifier	m_fd		2145506	0					
ANR	2145581	UnaryOperationExpression	- 1		2145506	1					
ANR	2145582	UnaryOperator	-		2145506	0					
ANR	2145583	PrimaryExpression	1		2145506	1					
ANR	2145584	ReturnStatement	return true ;	456:1:11570:11581	2145506	1	True				
ANR	2145585	Identifier	true		2145506	0					
ANR	2145586	ReturnType	bool		2145506	1					
ANR	2145587	Identifier	ReadUserLog :: CloseLogFile		2145506	2					
ANR	2145588	ParameterList	bool force		2145506	3					
ANR	2145589	Parameter	bool force	434:27:11262:11271	2145506	0	True				
ANR	2145590	ParameterType	bool		2145506	0					
ANR	2145591	Identifier	force		2145506	1					
ANR	2145592	CFGEntryNode	ENTRY		2145506		True				
ANR	2145593	CFGExitNode	EXIT		2145506		True				
ANR	2145594	Symbol	m_lock		2145506						
ANR	2145595	Symbol	m_fd		2145506						
ANR	2145596	Symbol	NULL		2145506						
ANR	2145597	Symbol	* m_lock		2145506						
ANR	2145598	Symbol	m_lock_rot		2145506						
ANR	2145599	Symbol	m_enable_close		2145506						
ANR	2145600	Symbol	true		2145506						
ANR	2145601	Symbol	force		2145506						
ANR	2145602	Symbol	m_lock -> isLocked		2145506						
ANR	2145603	Symbol	m_fp		2145506						
ANR	2145604	Symbol	m_close_file		2145506						
ANR	2145605	Function	ReadUserLog :: OpenLogFile	459:0:11586:15869							
ANR	2145606	FunctionDef	"ReadUserLog :: OpenLogFile (bool do_seek , bool read_header)"		2145605	0					
ANR	2145607	CompoundStatement		461:0:11662:15869	2145605	0					
ANR	2145608	IdentifierDeclStatement	bool is_lock_current = ( m_state -> Rotation ( ) == m_lock_rot ) ;	471:1:12050:12110	2145605	0	True				
ANR	2145609	IdentifierDecl	is_lock_current = ( m_state -> Rotation ( ) == m_lock_rot )		2145605	0					
ANR	2145610	IdentifierDeclType	bool		2145605	0					
ANR	2145611	Identifier	is_lock_current		2145605	1					
ANR	2145612	AssignmentExpression	is_lock_current = ( m_state -> Rotation ( ) == m_lock_rot )		2145605	2		=			
ANR	2145613	Identifier	is_lock_current		2145605	0					
ANR	2145614	EqualityExpression	m_state -> Rotation ( ) == m_lock_rot		2145605	1		==			
ANR	2145615	CallExpression	m_state -> Rotation ( )		2145605	0					
ANR	2145616	Callee	m_state -> Rotation		2145605	0					
ANR	2145617	PtrMemberAccess	m_state -> Rotation		2145605	0					
ANR	2145618	Identifier	m_state		2145605	0					
ANR	2145619	Identifier	Rotation		2145605	1					
ANR	2145620	ArgumentList			2145605	1					
ANR	2145621	Identifier	m_lock_rot		2145605	1					
ANR	2145622	Statement	dprintf	473:1:12114:12120	2145605	1	True				
ANR	2145623	Statement	(	473:8:12121:12121	2145605	2	True				
ANR	2145624	Statement	D_FULLDEBUG	473:10:12123:12133	2145605	3	True				
ANR	2145625	Statement	","	473:21:12134:12134	2145605	4	True				
ANR	2145626	Statement	"""Opening log file #%d '%s'"""	473:23:12136:12162	2145605	5	True				
ANR	2145627	Statement	"""(is_lock_cur=%s,seek=%s,read_header=%s)\\n"""	474:4:12168:12210	2145605	6	True				
ANR	2145628	Statement	","	474:47:12211:12211	2145605	7	True				
ANR	2145629	Statement	m_state	475:4:12217:12223	2145605	8	True				
ANR	2145630	Statement	->	475:11:12224:12225	2145605	9	True				
ANR	2145631	Statement	Rotation	475:13:12226:12233	2145605	10	True				
ANR	2145632	Statement	(	475:21:12234:12234	2145605	11	True				
ANR	2145633	Statement	)	475:22:12235:12235	2145605	12	True				
ANR	2145634	Statement	","	475:23:12236:12236	2145605	13	True				
ANR	2145635	Statement	m_state	475:25:12238:12244	2145605	14	True				
ANR	2145636	Statement	->	475:32:12245:12246	2145605	15	True				
ANR	2145637	Statement	CurPath	475:34:12247:12253	2145605	16	True				
ANR	2145638	Statement	(	475:41:12254:12254	2145605	17	True				
ANR	2145639	Statement	)	475:42:12255:12255	2145605	18	True				
ANR	2145640	Statement	","	475:43:12256:12256	2145605	19	True				
ANR	2145641	Statement	is_lock_current	476:4:12262:12276	2145605	20	True				
ANR	2145642	Statement	?	476:20:12278:12278	2145605	21	True				
ANR	2145643	Statement	"""true"""	476:22:12280:12285	2145605	22	True				
ANR	2145644	Statement	:	476:29:12287:12287	2145605	23	True				
ANR	2145645	Statement	"""false"""	476:31:12289:12295	2145605	24	True				
ANR	2145646	Statement	","	476:38:12296:12296	2145605	25	True				
ANR	2145647	Statement	do_seek	477:4:12302:12308	2145605	26	True				
ANR	2145648	Statement	?	477:12:12310:12310	2145605	27	True				
ANR	2145649	Statement	"""true"""	477:14:12312:12317	2145605	28	True				
ANR	2145650	Statement	:	477:21:12319:12319	2145605	29	True				
ANR	2145651	Statement	"""false"""	477:23:12321:12327	2145605	30	True				
ANR	2145652	Statement	","	477:30:12328:12328	2145605	31	True				
ANR	2145653	Statement	read_header	478:4:12334:12344	2145605	32	True				
ANR	2145654	Statement	?	478:16:12346:12346	2145605	33	True				
ANR	2145655	Statement	"""true"""	478:18:12348:12353	2145605	34	True				
ANR	2145656	Statement	:	478:25:12355:12355	2145605	35	True				
ANR	2145657	Statement	"""false"""	478:27:12357:12363	2145605	36	True				
ANR	2145658	Statement	)	478:35:12365:12365	2145605	37	True				
ANR	2145659	ExpressionStatement		478:36:12366:12366	2145605	38	True				
ANR	2145660	IfStatement	if ( m_state -> Rotation ( ) < 0 )		2145605	39					
ANR	2145661	Condition	m_state -> Rotation ( ) < 0	479:6:12374:12396	2145605	0	True				
ANR	2145662	RelationalExpression	m_state -> Rotation ( ) < 0		2145605	0		<			
ANR	2145663	CallExpression	m_state -> Rotation ( )		2145605	0					
ANR	2145664	Callee	m_state -> Rotation		2145605	0					
ANR	2145665	PtrMemberAccess	m_state -> Rotation		2145605	0					
ANR	2145666	Identifier	m_state		2145605	0					
ANR	2145667	Identifier	Rotation		2145605	1					
ANR	2145668	ArgumentList			2145605	1					
ANR	2145669	PrimaryExpression	0		2145605	1					
ANR	2145670	CompoundStatement		19:32:737:737	2145605	1					
ANR	2145671	IfStatement	if ( m_state -> Rotation ( - 1 ) < 0 )		2145605	0					
ANR	2145672	Condition	m_state -> Rotation ( - 1 ) < 0	480:7:12409:12433	2145605	0	True				
ANR	2145673	RelationalExpression	m_state -> Rotation ( - 1 ) < 0		2145605	0		<			
ANR	2145674	CallExpression	m_state -> Rotation ( - 1 )		2145605	0					
ANR	2145675	Callee	m_state -> Rotation		2145605	0					
ANR	2145676	PtrMemberAccess	m_state -> Rotation		2145605	0					
ANR	2145677	Identifier	m_state		2145605	0					
ANR	2145678	Identifier	Rotation		2145605	1					
ANR	2145679	ArgumentList	- 1		2145605	1					
ANR	2145680	Argument	- 1		2145605	0					
ANR	2145681	UnaryOperationExpression	- 1		2145605	0					
ANR	2145682	UnaryOperator	-		2145605	0					
ANR	2145683	PrimaryExpression	1		2145605	1					
ANR	2145684	PrimaryExpression	0		2145605	1					
ANR	2145685	CompoundStatement		20:35:774:774	2145605	1					
ANR	2145686	ReturnStatement	return ULOG_RD_ERROR ;	481:3:12442:12462	2145605	0	True				
ANR	2145687	Identifier	ULOG_RD_ERROR		2145605	0					
ANR	2145688	ExpressionStatement	"m_fd = safe_open_wrapper_follow ( m_state -> CurPath ( ) , m_read_only ? O_RDONLY : O_RDWR , 0 )"	485:1:12473:12580	2145605	40	True				
ANR	2145689	AssignmentExpression	"m_fd = safe_open_wrapper_follow ( m_state -> CurPath ( ) , m_read_only ? O_RDONLY : O_RDWR , 0 )"		2145605	0		=			
ANR	2145690	Identifier	m_fd		2145605	0					
ANR	2145691	CallExpression	"safe_open_wrapper_follow ( m_state -> CurPath ( ) , m_read_only ? O_RDONLY : O_RDWR , 0 )"		2145605	1					
ANR	2145692	Callee	safe_open_wrapper_follow		2145605	0					
ANR	2145693	Identifier	safe_open_wrapper_follow		2145605	0					
ANR	2145694	ArgumentList	m_state -> CurPath ( )		2145605	1					
ANR	2145695	Argument	m_state -> CurPath ( )		2145605	0					
ANR	2145696	CallExpression	m_state -> CurPath ( )		2145605	0					
ANR	2145697	Callee	m_state -> CurPath		2145605	0					
ANR	2145698	PtrMemberAccess	m_state -> CurPath		2145605	0					
ANR	2145699	Identifier	m_state		2145605	0					
ANR	2145700	Identifier	CurPath		2145605	1					
ANR	2145701	ArgumentList			2145605	1					
ANR	2145702	Argument	m_read_only ? O_RDONLY : O_RDWR		2145605	1					
ANR	2145703	ConditionalExpression	m_read_only ? O_RDONLY : O_RDWR		2145605	0					
ANR	2145704	Condition	m_read_only		2145605	0					
ANR	2145705	Identifier	m_read_only		2145605	0					
ANR	2145706	Identifier	O_RDONLY		2145605	1					
ANR	2145707	Identifier	O_RDWR		2145605	2					
ANR	2145708	Argument	0		2145605	2					
ANR	2145709	PrimaryExpression	0		2145605	0					
ANR	2145710	IfStatement	if ( m_fd < 0 )		2145605	41					
ANR	2145711	Condition	m_fd < 0	488:6:12588:12595	2145605	0	True				
ANR	2145712	RelationalExpression	m_fd < 0		2145605	0		<			
ANR	2145713	Identifier	m_fd		2145605	0					
ANR	2145714	PrimaryExpression	0		2145605	1					
ANR	2145715	CompoundStatement		28:17:936:936	2145605	1					
ANR	2145716	ExpressionStatement	"dprintf ( D_ALWAYS , ""ReadUserLog::OpenLogFile safe_open_wrapper on %s returns %d: error %d(%s)\\n"" , m_state -> CurPath ( ) , m_fd , errno , strerror ( errno ) )"	489:2:12603:12749	2145605	0	True				
ANR	2145717	CallExpression	"dprintf ( D_ALWAYS , ""ReadUserLog::OpenLogFile safe_open_wrapper on %s returns %d: error %d(%s)\\n"" , m_state -> CurPath ( ) , m_fd , errno , strerror ( errno ) )"		2145605	0					
ANR	2145718	Callee	dprintf		2145605	0					
ANR	2145719	Identifier	dprintf		2145605	0					
ANR	2145720	ArgumentList	D_ALWAYS		2145605	1					
ANR	2145721	Argument	D_ALWAYS		2145605	0					
ANR	2145722	Identifier	D_ALWAYS		2145605	0					
ANR	2145723	Argument	"""ReadUserLog::OpenLogFile safe_open_wrapper on %s returns %d: error %d(%s)\\n"""		2145605	1					
ANR	2145724	PrimaryExpression	"""ReadUserLog::OpenLogFile safe_open_wrapper on %s returns %d: error %d(%s)\\n"""		2145605	0					
ANR	2145725	Argument	m_state -> CurPath ( )		2145605	2					
ANR	2145726	CallExpression	m_state -> CurPath ( )		2145605	0					
ANR	2145727	Callee	m_state -> CurPath		2145605	0					
ANR	2145728	PtrMemberAccess	m_state -> CurPath		2145605	0					
ANR	2145729	Identifier	m_state		2145605	0					
ANR	2145730	Identifier	CurPath		2145605	1					
ANR	2145731	ArgumentList			2145605	1					
ANR	2145732	Argument	m_fd		2145605	3					
ANR	2145733	Identifier	m_fd		2145605	0					
ANR	2145734	Argument	errno		2145605	4					
ANR	2145735	Identifier	errno		2145605	0					
ANR	2145736	Argument	strerror ( errno )		2145605	5					
ANR	2145737	CallExpression	strerror ( errno )		2145605	0					
ANR	2145738	Callee	strerror		2145605	0					
ANR	2145739	Identifier	strerror		2145605	0					
ANR	2145740	ArgumentList	errno		2145605	1					
ANR	2145741	Argument	errno		2145605	0					
ANR	2145742	Identifier	errno		2145605	0					
ANR	2145743	ReturnStatement	return ULOG_RD_ERROR ;	490:2:12753:12773	2145605	1	True				
ANR	2145744	Identifier	ULOG_RD_ERROR		2145605	0					
ANR	2145745	ExpressionStatement	"m_fp = fdopen ( m_fd , ""r"" )"	493:1:12780:12806	2145605	42	True				
ANR	2145746	AssignmentExpression	"m_fp = fdopen ( m_fd , ""r"" )"		2145605	0		=			
ANR	2145747	Identifier	m_fp		2145605	0					
ANR	2145748	CallExpression	"fdopen ( m_fd , ""r"" )"		2145605	1					
ANR	2145749	Callee	fdopen		2145605	0					
ANR	2145750	Identifier	fdopen		2145605	0					
ANR	2145751	ArgumentList	m_fd		2145605	1					
ANR	2145752	Argument	m_fd		2145605	0					
ANR	2145753	Identifier	m_fd		2145605	0					
ANR	2145754	Argument	"""r"""		2145605	1					
ANR	2145755	PrimaryExpression	"""r"""		2145605	0					
ANR	2145756	IfStatement	if ( m_fp == NULL )		2145605	43					
ANR	2145757	Condition	m_fp == NULL	494:6:12814:12825	2145605	0	True				
ANR	2145758	EqualityExpression	m_fp == NULL		2145605	0		==			
ANR	2145759	Identifier	m_fp		2145605	0					
ANR	2145760	Identifier	NULL		2145605	1					
ANR	2145761	CompoundStatement		34:21:1166:1166	2145605	1					
ANR	2145762	ExpressionStatement	CloseLogFile ( true )	495:2:12833:12853	2145605	0	True				
ANR	2145763	CallExpression	CloseLogFile ( true )		2145605	0					
ANR	2145764	Callee	CloseLogFile		2145605	0					
ANR	2145765	Identifier	CloseLogFile		2145605	0					
ANR	2145766	ArgumentList	true		2145605	1					
ANR	2145767	Argument	true		2145605	0					
ANR	2145768	Identifier	true		2145605	0					
ANR	2145769	ExpressionStatement	"dprintf ( D_ALWAYS , ""ReadUserLog::OpenLogFile fdopen returns NULL\\n"" )"	496:2:12857:12924	2145605	1	True				
ANR	2145770	CallExpression	"dprintf ( D_ALWAYS , ""ReadUserLog::OpenLogFile fdopen returns NULL\\n"" )"		2145605	0					
ANR	2145771	Callee	dprintf		2145605	0					
ANR	2145772	Identifier	dprintf		2145605	0					
ANR	2145773	ArgumentList	D_ALWAYS		2145605	1					
ANR	2145774	Argument	D_ALWAYS		2145605	0					
ANR	2145775	Identifier	D_ALWAYS		2145605	0					
ANR	2145776	Argument	"""ReadUserLog::OpenLogFile fdopen returns NULL\\n"""		2145605	1					
ANR	2145777	PrimaryExpression	"""ReadUserLog::OpenLogFile fdopen returns NULL\\n"""		2145605	0					
ANR	2145778	ReturnStatement	return ULOG_RD_ERROR ;	497:5:12931:12951	2145605	2	True				
ANR	2145779	Identifier	ULOG_RD_ERROR		2145605	0					
ANR	2145780	IfStatement	if ( do_seek && m_state -> Offset ( ) )		2145605	44					
ANR	2145781	Condition	do_seek && m_state -> Offset ( )	501:6:12997:13024	2145605	0	True				
ANR	2145782	AndExpression	do_seek && m_state -> Offset ( )		2145605	0		&&			
ANR	2145783	Identifier	do_seek		2145605	0					
ANR	2145784	CallExpression	m_state -> Offset ( )		2145605	1					
ANR	2145785	Callee	m_state -> Offset		2145605	0					
ANR	2145786	PtrMemberAccess	m_state -> Offset		2145605	0					
ANR	2145787	Identifier	m_state		2145605	0					
ANR	2145788	Identifier	Offset		2145605	1					
ANR	2145789	ArgumentList			2145605	1					
ANR	2145790	CompoundStatement		41:37:1365:1365	2145605	1					
ANR	2145791	IfStatement	"if ( fseek ( m_fp , m_state -> Offset ( ) , SEEK_SET ) )"		2145605	0					
ANR	2145792	Condition	"fseek ( m_fp , m_state -> Offset ( ) , SEEK_SET )"	502:6:13036:13076	2145605	0	True				
ANR	2145793	CallExpression	"fseek ( m_fp , m_state -> Offset ( ) , SEEK_SET )"		2145605	0					
ANR	2145794	Callee	fseek		2145605	0					
ANR	2145795	Identifier	fseek		2145605	0					
ANR	2145796	ArgumentList	m_fp		2145605	1					
ANR	2145797	Argument	m_fp		2145605	0					
ANR	2145798	Identifier	m_fp		2145605	0					
ANR	2145799	Argument	m_state -> Offset ( )		2145605	1					
ANR	2145800	CallExpression	m_state -> Offset ( )		2145605	0					
ANR	2145801	Callee	m_state -> Offset		2145605	0					
ANR	2145802	PtrMemberAccess	m_state -> Offset		2145605	0					
ANR	2145803	Identifier	m_state		2145605	0					
ANR	2145804	Identifier	Offset		2145605	1					
ANR	2145805	ArgumentList			2145605	1					
ANR	2145806	Argument	SEEK_SET		2145605	2					
ANR	2145807	Identifier	SEEK_SET		2145605	0					
ANR	2145808	CompoundStatement		42:50:1417:1417	2145605	1					
ANR	2145809	ExpressionStatement	CloseLogFile ( true )	503:3:13085:13105	2145605	0	True				
ANR	2145810	CallExpression	CloseLogFile ( true )		2145605	0					
ANR	2145811	Callee	CloseLogFile		2145605	0					
ANR	2145812	Identifier	CloseLogFile		2145605	0					
ANR	2145813	ArgumentList	true		2145605	1					
ANR	2145814	Argument	true		2145605	0					
ANR	2145815	Identifier	true		2145605	0					
ANR	2145816	ExpressionStatement	"dprintf ( D_ALWAYS , ""ReadUserLog::OpenLogFile fseek returns NULL\\n"" )"	504:3:13110:13176	2145605	1	True				
ANR	2145817	CallExpression	"dprintf ( D_ALWAYS , ""ReadUserLog::OpenLogFile fseek returns NULL\\n"" )"		2145605	0					
ANR	2145818	Callee	dprintf		2145605	0					
ANR	2145819	Identifier	dprintf		2145605	0					
ANR	2145820	ArgumentList	D_ALWAYS		2145605	1					
ANR	2145821	Argument	D_ALWAYS		2145605	0					
ANR	2145822	Identifier	D_ALWAYS		2145605	0					
ANR	2145823	Argument	"""ReadUserLog::OpenLogFile fseek returns NULL\\n"""		2145605	1					
ANR	2145824	PrimaryExpression	"""ReadUserLog::OpenLogFile fseek returns NULL\\n"""		2145605	0					
ANR	2145825	ReturnStatement	return ULOG_RD_ERROR ;	505:3:13181:13201	2145605	2	True				
ANR	2145826	Identifier	ULOG_RD_ERROR		2145605	0					
ANR	2145827	IfStatement	if ( m_lock_enable )		2145605	45					
ANR	2145828	Condition	m_lock_enable	510:6:13246:13258	2145605	0	True				
ANR	2145829	Identifier	m_lock_enable		2145605	0					
ANR	2145830	CompoundStatement		50:22:1599:1599	2145605	1					
ANR	2145831	IfStatement	if ( ( ! is_lock_current ) && m_lock )		2145605	0					
ANR	2145832	Condition	( ! is_lock_current ) && m_lock	513:7:13341:13370	2145605	0	True				
ANR	2145833	AndExpression	( ! is_lock_current ) && m_lock		2145605	0		&&			
ANR	2145834	UnaryOperationExpression	! is_lock_current		2145605	0					
ANR	2145835	UnaryOperator	!		2145605	0					
ANR	2145836	Identifier	is_lock_current		2145605	1					
ANR	2145837	Identifier	m_lock		2145605	1					
ANR	2145838	CompoundStatement		53:40:1711:1711	2145605	1					
ANR	2145839	Statement	delete	514:3:13379:13384	2145605	0	True				
ANR	2145840	ExpressionStatement	m_lock	514:10:13386:13392	2145605	1	True				
ANR	2145841	Identifier	m_lock		2145605	0					
ANR	2145842	ExpressionStatement	m_lock = NULL	515:3:13397:13410	2145605	2	True				
ANR	2145843	AssignmentExpression	m_lock = NULL		2145605	0		=			
ANR	2145844	Identifier	m_lock		2145605	0					
ANR	2145845	Identifier	NULL		2145605	1					
ANR	2145846	ExpressionStatement	m_lock_rot = - 1	516:3:13415:13430	2145605	3	True				
ANR	2145847	AssignmentExpression	m_lock_rot = - 1		2145605	0		=			
ANR	2145848	Identifier	m_lock_rot		2145605	0					
ANR	2145849	UnaryOperationExpression	- 1		2145605	1					
ANR	2145850	UnaryOperator	-		2145605	0					
ANR	2145851	PrimaryExpression	1		2145605	1					
ANR	2145852	IfStatement	if ( ! m_lock )		2145605	1					
ANR	2145853	Condition	! m_lock	521:7:13520:13527	2145605	0	True				
ANR	2145854	UnaryOperationExpression	! m_lock		2145605	0					
ANR	2145855	UnaryOperator	!		2145605	0					
ANR	2145856	Identifier	m_lock		2145605	1					
ANR	2145857	CompoundStatement		64:3:1972:2040	2145605	1					
ANR	2145858	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Creating file lock(%d,%p,%s)\\n"" , m_fd , m_fp , m_state -> CurPath ( ) )"	522:3:13536:13630	2145605	0	True				
ANR	2145859	CallExpression	"dprintf ( D_FULLDEBUG , ""Creating file lock(%d,%p,%s)\\n"" , m_fd , m_fp , m_state -> CurPath ( ) )"		2145605	0					
ANR	2145860	Callee	dprintf		2145605	0					
ANR	2145861	Identifier	dprintf		2145605	0					
ANR	2145862	ArgumentList	D_FULLDEBUG		2145605	1					
ANR	2145863	Argument	D_FULLDEBUG		2145605	0					
ANR	2145864	Identifier	D_FULLDEBUG		2145605	0					
ANR	2145865	Argument	"""Creating file lock(%d,%p,%s)\\n"""		2145605	1					
ANR	2145866	PrimaryExpression	"""Creating file lock(%d,%p,%s)\\n"""		2145605	0					
ANR	2145867	Argument	m_fd		2145605	2					
ANR	2145868	Identifier	m_fd		2145605	0					
ANR	2145869	Argument	m_fp		2145605	3					
ANR	2145870	Identifier	m_fp		2145605	0					
ANR	2145871	Argument	m_state -> CurPath ( )		2145605	4					
ANR	2145872	CallExpression	m_state -> CurPath ( )		2145605	0					
ANR	2145873	Callee	m_state -> CurPath		2145605	0					
ANR	2145874	PtrMemberAccess	m_state -> CurPath		2145605	0					
ANR	2145875	Identifier	m_state		2145605	0					
ANR	2145876	Identifier	CurPath		2145605	1					
ANR	2145877	ArgumentList			2145605	1					
ANR	2145878	IdentifierDeclStatement	"bool new_locking = param_boolean ( ""CREATE_LOCKS_ON_LOCAL_DISK"" , true ) ;"	524:3:13635:13703	2145605	1	True				
ANR	2145879	IdentifierDecl	"new_locking = param_boolean ( ""CREATE_LOCKS_ON_LOCAL_DISK"" , true )"		2145605	0					
ANR	2145880	IdentifierDeclType	bool		2145605	0					
ANR	2145881	Identifier	new_locking		2145605	1					
ANR	2145882	AssignmentExpression	"new_locking = param_boolean ( ""CREATE_LOCKS_ON_LOCAL_DISK"" , true )"		2145605	2		=			
ANR	2145883	Identifier	new_locking		2145605	0					
ANR	2145884	CallExpression	"param_boolean ( ""CREATE_LOCKS_ON_LOCAL_DISK"" , true )"		2145605	1					
ANR	2145885	Callee	param_boolean		2145605	0					
ANR	2145886	Identifier	param_boolean		2145605	0					
ANR	2145887	ArgumentList	"""CREATE_LOCKS_ON_LOCAL_DISK"""		2145605	1					
ANR	2145888	Argument	"""CREATE_LOCKS_ON_LOCAL_DISK"""		2145605	0					
ANR	2145889	PrimaryExpression	"""CREATE_LOCKS_ON_LOCAL_DISK"""		2145605	0					
ANR	2145890	Argument	true		2145605	1					
ANR	2145891	Identifier	true		2145605	0					
ANR	2145892	ExpressionStatement	new_locking = false	526:3:13727:13746	2145605	2	True				
ANR	2145893	AssignmentExpression	new_locking = false		2145605	0		=			
ANR	2145894	Identifier	new_locking		2145605	0					
ANR	2145895	Identifier	false		2145605	1					
ANR	2145896	IfStatement	if ( new_locking )		2145605	3					
ANR	2145897	Condition	new_locking	528:7:13762:13772	2145605	0	True				
ANR	2145898	Identifier	new_locking		2145605	0					
ANR	2145899	CompoundStatement		68:20:2112:2112	2145605	1					
ANR	2145900	ExpressionStatement	"m_lock = new FileLock ( m_state -> CurPath ( ) , true , false )"	529:4:13781:13835	2145605	0	True				
ANR	2145901	AssignmentExpression	"m_lock = new FileLock ( m_state -> CurPath ( ) , true , false )"		2145605	0		=			
ANR	2145902	Identifier	m_lock		2145605	0					
ANR	2145903	Expression	"m_state -> CurPath ( ) , true , false"		2145605	1					
ANR	2145904	CallExpression	m_state -> CurPath ( )		2145605	0					
ANR	2145905	Callee	m_state -> CurPath		2145605	0					
ANR	2145906	PtrMemberAccess	m_state -> CurPath		2145605	0					
ANR	2145907	Identifier	m_state		2145605	0					
ANR	2145908	Identifier	CurPath		2145605	1					
ANR	2145909	ArgumentList			2145605	1					
ANR	2145910	Expression	"true , false"		2145605	1					
ANR	2145911	Identifier	true		2145605	0					
ANR	2145912	Identifier	false		2145605	1					
ANR	2145913	IfStatement	if ( ! m_lock -> initSucceeded ( ) )		2145605	1					
ANR	2145914	Condition	! m_lock -> initSucceeded ( )	530:8:13845:13869	2145605	0	True				
ANR	2145915	UnaryOperationExpression	! m_lock -> initSucceeded ( )		2145605	0					
ANR	2145916	UnaryOperator	!		2145605	0					
ANR	2145917	CallExpression	m_lock -> initSucceeded ( )		2145605	1					
ANR	2145918	Callee	m_lock -> initSucceeded		2145605	0					
ANR	2145919	PtrMemberAccess	m_lock -> initSucceeded		2145605	0					
ANR	2145920	Identifier	m_lock		2145605	0					
ANR	2145921	Identifier	initSucceeded		2145605	1					
ANR	2145922	ArgumentList			2145605	1					
ANR	2145923	CompoundStatement		70:36:2210:2210	2145605	1					
ANR	2145924	Statement	delete	531:5:13880:13885	2145605	0	True				
ANR	2145925	ExpressionStatement	m_lock	531:12:13887:13893	2145605	1	True				
ANR	2145926	Identifier	m_lock		2145605	0					
ANR	2145927	ExpressionStatement	"m_lock = new FileLock ( m_fd , m_fp , m_state -> CurPath ( ) )"	532:5:13900:13955	2145605	2	True				
ANR	2145928	AssignmentExpression	"m_lock = new FileLock ( m_fd , m_fp , m_state -> CurPath ( ) )"		2145605	0		=			
ANR	2145929	Identifier	m_lock		2145605	0					
ANR	2145930	Expression	"m_fd , m_fp , m_state -> CurPath ( )"		2145605	1					
ANR	2145931	Identifier	m_fd		2145605	0					
ANR	2145932	Expression	"m_fp , m_state -> CurPath ( )"		2145605	1					
ANR	2145933	Identifier	m_fp		2145605	0					
ANR	2145934	CallExpression	m_state -> CurPath ( )		2145605	1					
ANR	2145935	Callee	m_state -> CurPath		2145605	0					
ANR	2145936	PtrMemberAccess	m_state -> CurPath		2145605	0					
ANR	2145937	Identifier	m_state		2145605	0					
ANR	2145938	Identifier	CurPath		2145605	1					
ANR	2145939	ArgumentList			2145605	1					
ANR	2145940	ElseStatement	else		2145605	0					
ANR	2145941	CompoundStatement		74:10:2310:2310	2145605	0					
ANR	2145942	ExpressionStatement	"m_lock = new FileLock ( m_fd , m_fp , m_state -> CurPath ( ) )"	535:4:13979:14034	2145605	0	True				
ANR	2145943	AssignmentExpression	"m_lock = new FileLock ( m_fd , m_fp , m_state -> CurPath ( ) )"		2145605	0		=			
ANR	2145944	Identifier	m_lock		2145605	0					
ANR	2145945	Expression	"m_fd , m_fp , m_state -> CurPath ( )"		2145605	1					
ANR	2145946	Identifier	m_fd		2145605	0					
ANR	2145947	Expression	"m_fp , m_state -> CurPath ( )"		2145605	1					
ANR	2145948	Identifier	m_fp		2145605	0					
ANR	2145949	CallExpression	m_state -> CurPath ( )		2145605	1					
ANR	2145950	Callee	m_state -> CurPath		2145605	0					
ANR	2145951	PtrMemberAccess	m_state -> CurPath		2145605	0					
ANR	2145952	Identifier	m_state		2145605	0					
ANR	2145953	Identifier	CurPath		2145605	1					
ANR	2145954	ArgumentList			2145605	1					
ANR	2145955	IfStatement	if ( ! m_lock )		2145605	4					
ANR	2145956	Condition	! m_lock	537:7:14048:14055	2145605	0	True				
ANR	2145957	UnaryOperationExpression	! m_lock		2145605	0					
ANR	2145958	UnaryOperator	!		2145605	0					
ANR	2145959	Identifier	m_lock		2145605	1					
ANR	2145960	CompoundStatement		77:18:2396:2396	2145605	1					
ANR	2145961	ExpressionStatement	CloseLogFile ( true )	538:4:14065:14085	2145605	0	True				
ANR	2145962	CallExpression	CloseLogFile ( true )		2145605	0					
ANR	2145963	Callee	CloseLogFile		2145605	0					
ANR	2145964	Identifier	CloseLogFile		2145605	0					
ANR	2145965	ArgumentList	true		2145605	1					
ANR	2145966	Argument	true		2145605	0					
ANR	2145967	Identifier	true		2145605	0					
ANR	2145968	ExpressionStatement	"dprintf ( D_ALWAYS , ""ReadUserLog::OpenLogFile FileLock returns NULL\\n"" )"	539:4:14091:14160	2145605	1	True				
ANR	2145969	CallExpression	"dprintf ( D_ALWAYS , ""ReadUserLog::OpenLogFile FileLock returns NULL\\n"" )"		2145605	0					
ANR	2145970	Callee	dprintf		2145605	0					
ANR	2145971	Identifier	dprintf		2145605	0					
ANR	2145972	ArgumentList	D_ALWAYS		2145605	1					
ANR	2145973	Argument	D_ALWAYS		2145605	0					
ANR	2145974	Identifier	D_ALWAYS		2145605	0					
ANR	2145975	Argument	"""ReadUserLog::OpenLogFile FileLock returns NULL\\n"""		2145605	1					
ANR	2145976	PrimaryExpression	"""ReadUserLog::OpenLogFile FileLock returns NULL\\n"""		2145605	0					
ANR	2145977	ReturnStatement	return ULOG_RD_ERROR ;	540:4:14166:14186	2145605	2	True				
ANR	2145978	Identifier	ULOG_RD_ERROR		2145605	0					
ANR	2145979	ExpressionStatement	m_lock_rot = m_state -> Rotation ( )	542:3:14196:14229	2145605	5	True				
ANR	2145980	AssignmentExpression	m_lock_rot = m_state -> Rotation ( )		2145605	0		=			
ANR	2145981	Identifier	m_lock_rot		2145605	0					
ANR	2145982	CallExpression	m_state -> Rotation ( )		2145605	1					
ANR	2145983	Callee	m_state -> Rotation		2145605	0					
ANR	2145984	PtrMemberAccess	m_state -> Rotation		2145605	0					
ANR	2145985	Identifier	m_state		2145605	0					
ANR	2145986	Identifier	Rotation		2145605	1					
ANR	2145987	ArgumentList			2145605	1					
ANR	2145988	ElseStatement	else		2145605	0					
ANR	2145989	CompoundStatement		84:7:2579:2579	2145605	0					
ANR	2145990	ExpressionStatement	"m_lock -> SetFdFpFile ( m_fd , m_fp , m_state -> CurPath ( ) )"	545:3:14247:14300	2145605	0	True				
ANR	2145991	CallExpression	"m_lock -> SetFdFpFile ( m_fd , m_fp , m_state -> CurPath ( ) )"		2145605	0					
ANR	2145992	Callee	m_lock -> SetFdFpFile		2145605	0					
ANR	2145993	PtrMemberAccess	m_lock -> SetFdFpFile		2145605	0					
ANR	2145994	Identifier	m_lock		2145605	0					
ANR	2145995	Identifier	SetFdFpFile		2145605	1					
ANR	2145996	ArgumentList	m_fd		2145605	1					
ANR	2145997	Argument	m_fd		2145605	0					
ANR	2145998	Identifier	m_fd		2145605	0					
ANR	2145999	Argument	m_fp		2145605	1					
ANR	2146000	Identifier	m_fp		2145605	0					
ANR	2146001	Argument	m_state -> CurPath ( )		2145605	2					
ANR	2146002	CallExpression	m_state -> CurPath ( )		2145605	0					
ANR	2146003	Callee	m_state -> CurPath		2145605	0					
ANR	2146004	PtrMemberAccess	m_state -> CurPath		2145605	0					
ANR	2146005	Identifier	m_state		2145605	0					
ANR	2146006	Identifier	CurPath		2145605	1					
ANR	2146007	ArgumentList			2145605	1					
ANR	2146008	ElseStatement	else		2145605	0					
ANR	2146009	CompoundStatement		88:6:2652:2652	2145605	0					
ANR	2146010	IfStatement	if ( m_lock )		2145605	0					
ANR	2146011	Condition	m_lock	549:7:14324:14329	2145605	0	True				
ANR	2146012	Identifier	m_lock		2145605	0					
ANR	2146013	CompoundStatement		89:16:2670:2670	2145605	1					
ANR	2146014	Statement	delete	550:3:14338:14343	2145605	0	True				
ANR	2146015	ExpressionStatement	m_lock	550:10:14345:14351	2145605	1	True				
ANR	2146016	Identifier	m_lock		2145605	0					
ANR	2146017	ExpressionStatement	m_lock = NULL	551:3:14356:14369	2145605	2	True				
ANR	2146018	AssignmentExpression	m_lock = NULL		2145605	0		=			
ANR	2146019	Identifier	m_lock		2145605	0					
ANR	2146020	Identifier	NULL		2145605	1					
ANR	2146021	ExpressionStatement	m_lock_rot = - 1	552:3:14374:14389	2145605	3	True				
ANR	2146022	AssignmentExpression	m_lock_rot = - 1		2145605	0		=			
ANR	2146023	Identifier	m_lock_rot		2145605	0					
ANR	2146024	UnaryOperationExpression	- 1		2145605	1					
ANR	2146025	UnaryOperator	-		2145605	0					
ANR	2146026	PrimaryExpression	1		2145605	1					
ANR	2146027	Statement	m_lock	554:2:14397:14402	2145605	1	True				
ANR	2146028	Statement	=	554:9:14404:14404	2145605	2	True				
ANR	2146029	Statement	new	554:11:14406:14408	2145605	3	True				
ANR	2146030	ExpressionStatement	FakeFileLock	554:15:14410:14422	2145605	4	True				
ANR	2146031	Identifier	FakeFileLock		2145605	0					
ANR	2146032	IfStatement	if ( m_state -> IsLogType ( ReadUserLogState :: LOG_TYPE_UNKNOWN ) )		2145605	46					
ANR	2146033	Condition	m_state -> IsLogType ( ReadUserLogState :: LOG_TYPE_UNKNOWN )	558:6:14485:14539	2145605	0	True				
ANR	2146034	CallExpression	m_state -> IsLogType ( ReadUserLogState :: LOG_TYPE_UNKNOWN )		2145605	0					
ANR	2146035	Callee	m_state -> IsLogType		2145605	0					
ANR	2146036	PtrMemberAccess	m_state -> IsLogType		2145605	0					
ANR	2146037	Identifier	m_state		2145605	0					
ANR	2146038	Identifier	IsLogType		2145605	1					
ANR	2146039	ArgumentList	ReadUserLogState :: LOG_TYPE_UNKNOWN		2145605	1					
ANR	2146040	Argument	ReadUserLogState :: LOG_TYPE_UNKNOWN		2145605	0					
ANR	2146041	Identifier	ReadUserLogState :: LOG_TYPE_UNKNOWN		2145605	0					
ANR	2146042	CompoundStatement		98:64:2880:2880	2145605	1					
ANR	2146043	IfStatement	if ( ! determineLogType ( ) )		2145605	0					
ANR	2146044	Condition	! determineLogType ( )	559:7:14552:14570	2145605	0	True				
ANR	2146045	UnaryOperationExpression	! determineLogType ( )		2145605	0					
ANR	2146046	UnaryOperator	!		2145605	0					
ANR	2146047	CallExpression	determineLogType ( )		2145605	1					
ANR	2146048	Callee	determineLogType		2145605	0					
ANR	2146049	Identifier	determineLogType		2145605	0					
ANR	2146050	ArgumentList			2145605	1					
ANR	2146051	CompoundStatement		99:29:2911:2911	2145605	1					
ANR	2146052	ExpressionStatement	"dprintf ( D_ALWAYS , ""ReadUserLog::OpenLogFile(): Can't log type\\n"" )"	560:3:14579:14652	2145605	0	True				
ANR	2146053	CallExpression	"dprintf ( D_ALWAYS , ""ReadUserLog::OpenLogFile(): Can't log type\\n"" )"		2145605	0					
ANR	2146054	Callee	dprintf		2145605	0					
ANR	2146055	Identifier	dprintf		2145605	0					
ANR	2146056	ArgumentList	D_ALWAYS		2145605	1					
ANR	2146057	Argument	D_ALWAYS		2145605	0					
ANR	2146058	Identifier	D_ALWAYS		2145605	0					
ANR	2146059	Argument	"""ReadUserLog::OpenLogFile(): Can't log type\\n"""		2145605	1					
ANR	2146060	PrimaryExpression	"""ReadUserLog::OpenLogFile(): Can't log type\\n"""		2145605	0					
ANR	2146061	ExpressionStatement	releaseResources ( )	562:3:14657:14675	2145605	1	True				
ANR	2146062	CallExpression	releaseResources ( )		2145605	0					
ANR	2146063	Callee	releaseResources		2145605	0					
ANR	2146064	Identifier	releaseResources		2145605	0					
ANR	2146065	ArgumentList			2145605	1					
ANR	2146066	ReturnStatement	return ULOG_RD_ERROR ;	563:3:14680:14700	2145605	2	True				
ANR	2146067	Identifier	ULOG_RD_ERROR		2145605	0					
ANR	2146068	IfStatement	if ( read_header && m_read_header && ( ! m_state -> ValidUniqId ( ) ) )		2145605	47					
ANR	2146069	Condition	read_header && m_read_header && ( ! m_state -> ValidUniqId ( ) )	568:6:14749:14806	2145605	0	True				
ANR	2146070	AndExpression	read_header && m_read_header && ( ! m_state -> ValidUniqId ( ) )		2145605	0		&&			
ANR	2146071	Identifier	read_header		2145605	0					
ANR	2146072	AndExpression	m_read_header && ( ! m_state -> ValidUniqId ( ) )		2145605	1		&&			
ANR	2146073	Identifier	m_read_header		2145605	0					
ANR	2146074	UnaryOperationExpression	! m_state -> ValidUniqId ( )		2145605	1					
ANR	2146075	UnaryOperator	!		2145605	0					
ANR	2146076	CallExpression	m_state -> ValidUniqId ( )		2145605	1					
ANR	2146077	Callee	m_state -> ValidUniqId		2145605	0					
ANR	2146078	PtrMemberAccess	m_state -> ValidUniqId		2145605	0					
ANR	2146079	Identifier	m_state		2145605	0					
ANR	2146080	Identifier	ValidUniqId		2145605	1					
ANR	2146081	ArgumentList			2145605	1					
ANR	2146082	CompoundStatement		120:2:3433:3464	2145605	1					
ANR	2146083	IdentifierDeclStatement	const char * path = m_state -> CurPath ( ) ;	569:2:14814:14852	2145605	0	True				
ANR	2146084	IdentifierDecl	* path = m_state -> CurPath ( )		2145605	0					
ANR	2146085	IdentifierDeclType	const char *		2145605	0					
ANR	2146086	Identifier	path		2145605	1					
ANR	2146087	AssignmentExpression	* path = m_state -> CurPath ( )		2145605	2		=			
ANR	2146088	Identifier	path		2145605	0					
ANR	2146089	CallExpression	m_state -> CurPath ( )		2145605	1					
ANR	2146090	Callee	m_state -> CurPath		2145605	0					
ANR	2146091	PtrMemberAccess	m_state -> CurPath		2145605	0					
ANR	2146092	Identifier	m_state		2145605	0					
ANR	2146093	Identifier	CurPath		2145605	1					
ANR	2146094	ArgumentList			2145605	1					
ANR	2146095	IdentifierDeclStatement	MyString temp_path ;	572:2:14896:14914	2145605	1	True				
ANR	2146096	IdentifierDecl	temp_path		2145605	0					
ANR	2146097	IdentifierDeclType	MyString		2145605	0					
ANR	2146098	Identifier	temp_path		2145605	1					
ANR	2146099	IfStatement	if ( NULL == path )		2145605	2					
ANR	2146100	Condition	NULL == path	573:8:14924:14935	2145605	0	True				
ANR	2146101	EqualityExpression	NULL == path		2145605	0		==			
ANR	2146102	Identifier	NULL		2145605	0					
ANR	2146103	Identifier	path		2145605	1					
ANR	2146104	CompoundStatement		113:23:3276:3276	2145605	1					
ANR	2146105	ExpressionStatement	"m_state -> GeneratePath ( m_state -> Rotation ( ) , temp_path )"	574:3:14944:14999	2145605	0	True				
ANR	2146106	CallExpression	"m_state -> GeneratePath ( m_state -> Rotation ( ) , temp_path )"		2145605	0					
ANR	2146107	Callee	m_state -> GeneratePath		2145605	0					
ANR	2146108	PtrMemberAccess	m_state -> GeneratePath		2145605	0					
ANR	2146109	Identifier	m_state		2145605	0					
ANR	2146110	Identifier	GeneratePath		2145605	1					
ANR	2146111	ArgumentList	m_state -> Rotation ( )		2145605	1					
ANR	2146112	Argument	m_state -> Rotation ( )		2145605	0					
ANR	2146113	CallExpression	m_state -> Rotation ( )		2145605	0					
ANR	2146114	Callee	m_state -> Rotation		2145605	0					
ANR	2146115	PtrMemberAccess	m_state -> Rotation		2145605	0					
ANR	2146116	Identifier	m_state		2145605	0					
ANR	2146117	Identifier	Rotation		2145605	1					
ANR	2146118	ArgumentList			2145605	1					
ANR	2146119	Argument	temp_path		2145605	1					
ANR	2146120	Identifier	temp_path		2145605	0					
ANR	2146121	ExpressionStatement	path = temp_path . Value ( )	575:3:15004:15029	2145605	1	True				
ANR	2146122	AssignmentExpression	path = temp_path . Value ( )		2145605	0		=			
ANR	2146123	Identifier	path		2145605	0					
ANR	2146124	CallExpression	temp_path . Value ( )		2145605	1					
ANR	2146125	Callee	temp_path . Value		2145605	0					
ANR	2146126	MemberAccess	temp_path . Value		2145605	0					
ANR	2146127	Identifier	temp_path		2145605	0					
ANR	2146128	Identifier	Value		2145605	1					
ANR	2146129	ArgumentList			2145605	1					
ANR	2146130	IdentifierDeclStatement	ReadUserLog log_reader ;	579:2:15068:15092	2145605	3	True				
ANR	2146131	IdentifierDecl	log_reader		2145605	0					
ANR	2146132	IdentifierDeclType	ReadUserLog		2145605	0					
ANR	2146133	Identifier	log_reader		2145605	1					
ANR	2146134	IdentifierDeclStatement	ReadUserLogHeader header_reader ;	580:2:15096:15127	2145605	4	True				
ANR	2146135	IdentifierDecl	header_reader		2145605	0					
ANR	2146136	IdentifierDeclType	ReadUserLogHeader		2145605	0					
ANR	2146137	Identifier	header_reader		2145605	1					
ANR	2146138	IfStatement	"if ( ( path ) && ( log_reader . initialize ( path , false , false , true ) ) && ( header_reader . Read ( log_reader ) == ULOG_OK ) )"		2145605	5					
ANR	2146139	Condition	"( path ) && ( log_reader . initialize ( path , false , false , true ) ) && ( header_reader . Read ( log_reader ) == ULOG_OK )"	581:8:15137:15262	2145605	0	True				
ANR	2146140	AndExpression	"( path ) && ( log_reader . initialize ( path , false , false , true ) ) && ( header_reader . Read ( log_reader ) == ULOG_OK )"		2145605	0		&&			
ANR	2146141	Identifier	path		2145605	0					
ANR	2146142	AndExpression	"( log_reader . initialize ( path , false , false , true ) ) && ( header_reader . Read ( log_reader ) == ULOG_OK )"		2145605	1		&&			
ANR	2146143	CallExpression	"log_reader . initialize ( path , false , false , true )"		2145605	0					
ANR	2146144	Callee	log_reader . initialize		2145605	0					
ANR	2146145	MemberAccess	log_reader . initialize		2145605	0					
ANR	2146146	Identifier	log_reader		2145605	0					
ANR	2146147	Identifier	initialize		2145605	1					
ANR	2146148	ArgumentList	path		2145605	1					
ANR	2146149	Argument	path		2145605	0					
ANR	2146150	Identifier	path		2145605	0					
ANR	2146151	Argument	false		2145605	1					
ANR	2146152	Identifier	false		2145605	0					
ANR	2146153	Argument	false		2145605	2					
ANR	2146154	Identifier	false		2145605	0					
ANR	2146155	Argument	true		2145605	3					
ANR	2146156	Identifier	true		2145605	0					
ANR	2146157	EqualityExpression	header_reader . Read ( log_reader ) == ULOG_OK		2145605	1		==			
ANR	2146158	CallExpression	header_reader . Read ( log_reader )		2145605	0					
ANR	2146159	Callee	header_reader . Read		2145605	0					
ANR	2146160	MemberAccess	header_reader . Read		2145605	0					
ANR	2146161	Identifier	header_reader		2145605	0					
ANR	2146162	Identifier	Read		2145605	1					
ANR	2146163	ArgumentList	log_reader		2145605	1					
ANR	2146164	Argument	log_reader		2145605	0					
ANR	2146165	Identifier	log_reader		2145605	0					
ANR	2146166	Identifier	ULOG_OK		2145605	1					
ANR	2146167	CompoundStatement		123:56:3604:3604	2145605	1					
ANR	2146168	ExpressionStatement	m_state -> UniqId ( header_reader . getId ( ) )	584:3:15272:15312	2145605	0	True				
ANR	2146169	CallExpression	m_state -> UniqId ( header_reader . getId ( ) )		2145605	0					
ANR	2146170	Callee	m_state -> UniqId		2145605	0					
ANR	2146171	PtrMemberAccess	m_state -> UniqId		2145605	0					
ANR	2146172	Identifier	m_state		2145605	0					
ANR	2146173	Identifier	UniqId		2145605	1					
ANR	2146174	ArgumentList	header_reader . getId ( )		2145605	1					
ANR	2146175	Argument	header_reader . getId ( )		2145605	0					
ANR	2146176	CallExpression	header_reader . getId ( )		2145605	0					
ANR	2146177	Callee	header_reader . getId		2145605	0					
ANR	2146178	MemberAccess	header_reader . getId		2145605	0					
ANR	2146179	Identifier	header_reader		2145605	0					
ANR	2146180	Identifier	getId		2145605	1					
ANR	2146181	ArgumentList			2145605	1					
ANR	2146182	ExpressionStatement	m_state -> Sequence ( header_reader . getSequence ( ) )	585:3:15317:15365	2145605	1	True				
ANR	2146183	CallExpression	m_state -> Sequence ( header_reader . getSequence ( ) )		2145605	0					
ANR	2146184	Callee	m_state -> Sequence		2145605	0					
ANR	2146185	PtrMemberAccess	m_state -> Sequence		2145605	0					
ANR	2146186	Identifier	m_state		2145605	0					
ANR	2146187	Identifier	Sequence		2145605	1					
ANR	2146188	ArgumentList	header_reader . getSequence ( )		2145605	1					
ANR	2146189	Argument	header_reader . getSequence ( )		2145605	0					
ANR	2146190	CallExpression	header_reader . getSequence ( )		2145605	0					
ANR	2146191	Callee	header_reader . getSequence		2145605	0					
ANR	2146192	MemberAccess	header_reader . getSequence		2145605	0					
ANR	2146193	Identifier	header_reader		2145605	0					
ANR	2146194	Identifier	getSequence		2145605	1					
ANR	2146195	ArgumentList			2145605	1					
ANR	2146196	ExpressionStatement	m_state -> LogPosition ( header_reader . getFileOffset ( ) )	586:3:15370:15423	2145605	2	True				
ANR	2146197	CallExpression	m_state -> LogPosition ( header_reader . getFileOffset ( ) )		2145605	0					
ANR	2146198	Callee	m_state -> LogPosition		2145605	0					
ANR	2146199	PtrMemberAccess	m_state -> LogPosition		2145605	0					
ANR	2146200	Identifier	m_state		2145605	0					
ANR	2146201	Identifier	LogPosition		2145605	1					
ANR	2146202	ArgumentList	header_reader . getFileOffset ( )		2145605	1					
ANR	2146203	Argument	header_reader . getFileOffset ( )		2145605	0					
ANR	2146204	CallExpression	header_reader . getFileOffset ( )		2145605	0					
ANR	2146205	Callee	header_reader . getFileOffset		2145605	0					
ANR	2146206	MemberAccess	header_reader . getFileOffset		2145605	0					
ANR	2146207	Identifier	header_reader		2145605	0					
ANR	2146208	Identifier	getFileOffset		2145605	1					
ANR	2146209	ArgumentList			2145605	1					
ANR	2146210	IfStatement	if ( header_reader . getEventOffset ( ) )		2145605	3					
ANR	2146211	Condition	header_reader . getEventOffset ( )	587:8:15433:15462	2145605	0	True				
ANR	2146212	CallExpression	header_reader . getEventOffset ( )		2145605	0					
ANR	2146213	Callee	header_reader . getEventOffset		2145605	0					
ANR	2146214	MemberAccess	header_reader . getEventOffset		2145605	0					
ANR	2146215	Identifier	header_reader		2145605	0					
ANR	2146216	Identifier	getEventOffset		2145605	1					
ANR	2146217	ArgumentList			2145605	1					
ANR	2146218	CompoundStatement		127:41:3803:3803	2145605	1					
ANR	2146219	ExpressionStatement	m_state -> LogRecordNo ( header_reader . getEventOffset ( ) )	588:4:15472:15526	2145605	0	True				
ANR	2146220	CallExpression	m_state -> LogRecordNo ( header_reader . getEventOffset ( ) )		2145605	0					
ANR	2146221	Callee	m_state -> LogRecordNo		2145605	0					
ANR	2146222	PtrMemberAccess	m_state -> LogRecordNo		2145605	0					
ANR	2146223	Identifier	m_state		2145605	0					
ANR	2146224	Identifier	LogRecordNo		2145605	1					
ANR	2146225	ArgumentList	header_reader . getEventOffset ( )		2145605	1					
ANR	2146226	Argument	header_reader . getEventOffset ( )		2145605	0					
ANR	2146227	CallExpression	header_reader . getEventOffset ( )		2145605	0					
ANR	2146228	Callee	header_reader . getEventOffset		2145605	0					
ANR	2146229	MemberAccess	header_reader . getEventOffset		2145605	0					
ANR	2146230	Identifier	header_reader		2145605	0					
ANR	2146231	Identifier	getEventOffset		2145605	1					
ANR	2146232	ArgumentList			2145605	1					
ANR	2146233	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%s: Set UniqId to '%s', sequence to %d\\n"" , m_state -> CurPath ( ) , header_reader . getId ( ) . Value ( ) , header_reader . getSequence ( ) )"	590:3:15536:15706	2145605	4	True				
ANR	2146234	CallExpression	"dprintf ( D_FULLDEBUG , ""%s: Set UniqId to '%s', sequence to %d\\n"" , m_state -> CurPath ( ) , header_reader . getId ( ) . Value ( ) , header_reader . getSequence ( ) )"		2145605	0					
ANR	2146235	Callee	dprintf		2145605	0					
ANR	2146236	Identifier	dprintf		2145605	0					
ANR	2146237	ArgumentList	D_FULLDEBUG		2145605	1					
ANR	2146238	Argument	D_FULLDEBUG		2145605	0					
ANR	2146239	Identifier	D_FULLDEBUG		2145605	0					
ANR	2146240	Argument	"""%s: Set UniqId to '%s', sequence to %d\\n"""		2145605	1					
ANR	2146241	PrimaryExpression	"""%s: Set UniqId to '%s', sequence to %d\\n"""		2145605	0					
ANR	2146242	Argument	m_state -> CurPath ( )		2145605	2					
ANR	2146243	CallExpression	m_state -> CurPath ( )		2145605	0					
ANR	2146244	Callee	m_state -> CurPath		2145605	0					
ANR	2146245	PtrMemberAccess	m_state -> CurPath		2145605	0					
ANR	2146246	Identifier	m_state		2145605	0					
ANR	2146247	Identifier	CurPath		2145605	1					
ANR	2146248	ArgumentList			2145605	1					
ANR	2146249	Argument	header_reader . getId ( ) . Value ( )		2145605	3					
ANR	2146250	CallExpression	header_reader . getId ( ) . Value ( )		2145605	0					
ANR	2146251	Callee	header_reader . getId ( ) . Value		2145605	0					
ANR	2146252	MemberAccess	header_reader . getId ( ) . Value		2145605	0					
ANR	2146253	CallExpression	header_reader . getId ( )		2145605	0					
ANR	2146254	Callee	header_reader . getId		2145605	0					
ANR	2146255	MemberAccess	header_reader . getId		2145605	0					
ANR	2146256	Identifier	header_reader		2145605	0					
ANR	2146257	Identifier	getId		2145605	1					
ANR	2146258	ArgumentList			2145605	1					
ANR	2146259	Identifier	Value		2145605	1					
ANR	2146260	ArgumentList			2145605	1					
ANR	2146261	Argument	header_reader . getSequence ( )		2145605	4					
ANR	2146262	CallExpression	header_reader . getSequence ( )		2145605	0					
ANR	2146263	Callee	header_reader . getSequence		2145605	0					
ANR	2146264	MemberAccess	header_reader . getSequence		2145605	0					
ANR	2146265	Identifier	header_reader		2145605	0					
ANR	2146266	Identifier	getSequence		2145605	1					
ANR	2146267	ArgumentList			2145605	1					
ANR	2146268	ElseStatement	else		2145605	0					
ANR	2146269	CompoundStatement		138:7:4090:4090	2145605	0					
ANR	2146270	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%s: Failed to read file header\\n"" , m_state -> CurPath ( ) )"	599:3:15758:15842	2145605	0	True				
ANR	2146271	CallExpression	"dprintf ( D_FULLDEBUG , ""%s: Failed to read file header\\n"" , m_state -> CurPath ( ) )"		2145605	0					
ANR	2146272	Callee	dprintf		2145605	0					
ANR	2146273	Identifier	dprintf		2145605	0					
ANR	2146274	ArgumentList	D_FULLDEBUG		2145605	1					
ANR	2146275	Argument	D_FULLDEBUG		2145605	0					
ANR	2146276	Identifier	D_FULLDEBUG		2145605	0					
ANR	2146277	Argument	"""%s: Failed to read file header\\n"""		2145605	1					
ANR	2146278	PrimaryExpression	"""%s: Failed to read file header\\n"""		2145605	0					
ANR	2146279	Argument	m_state -> CurPath ( )		2145605	2					
ANR	2146280	CallExpression	m_state -> CurPath ( )		2145605	0					
ANR	2146281	Callee	m_state -> CurPath		2145605	0					
ANR	2146282	PtrMemberAccess	m_state -> CurPath		2145605	0					
ANR	2146283	Identifier	m_state		2145605	0					
ANR	2146284	Identifier	CurPath		2145605	1					
ANR	2146285	ArgumentList			2145605	1					
ANR	2146286	ReturnStatement	return ULOG_OK ;	604:1:15853:15867	2145605	48	True				
ANR	2146287	Identifier	ULOG_OK		2145605	0					
ANR	2146288	ReturnType	ULogEventOutcome		2145605	1					
ANR	2146289	Identifier	ReadUserLog :: OpenLogFile		2145605	2					
ANR	2146290	ParameterList	"bool do_seek , bool read_header"		2145605	3					
ANR	2146291	Parameter	bool do_seek	460:26:11629:11640	2145605	0	True				
ANR	2146292	ParameterType	bool		2145605	0					
ANR	2146293	Identifier	do_seek		2145605	1					
ANR	2146294	Parameter	bool read_header	460:40:11643:11658	2145605	1	True				
ANR	2146295	ParameterType	bool		2145605	0					
ANR	2146296	Identifier	read_header		2145605	1					
ANR	2146297	CFGEntryNode	ENTRY		2145605		True				
ANR	2146298	CFGExitNode	EXIT		2145605		True				
ANR	2146299	Symbol	m_lock -> initSucceeded		2145605						
ANR	2146300	Symbol	m_read_header		2145605						
ANR	2146301	Symbol	fseek		2145605						
ANR	2146302	Symbol	read_header		2145605						
ANR	2146303	Symbol	m_state		2145605						
ANR	2146304	Symbol	path		2145605						
ANR	2146305	Symbol	header_reader		2145605						
ANR	2146306	Symbol	m_read_only		2145605						
ANR	2146307	Symbol	errno		2145605						
ANR	2146308	Symbol	NULL		2145605						
ANR	2146309	Symbol	header_reader . getId ( ) . Value		2145605						
ANR	2146310	Symbol	m_lock_rot		2145605						
ANR	2146311	Symbol	D_FULLDEBUG		2145605						
ANR	2146312	Symbol	param_boolean		2145605						
ANR	2146313	Symbol	strerror		2145605						
ANR	2146314	Symbol	true		2145605						
ANR	2146315	Symbol	header_reader . getId		2145605						
ANR	2146316	Symbol	safe_open_wrapper_follow		2145605						
ANR	2146317	Symbol	m_state -> IsLogType		2145605						
ANR	2146318	Symbol	* m_state		2145605						
ANR	2146319	Symbol	ULOG_RD_ERROR		2145605						
ANR	2146320	Symbol	fdopen		2145605						
ANR	2146321	Symbol	is_lock_current		2145605						
ANR	2146322	Symbol	m_state -> Rotation		2145605						
ANR	2146323	Symbol	m_lock		2145605						
ANR	2146324	Symbol	O_RDWR		2145605						
ANR	2146325	Symbol	m_state -> CurPath		2145605						
ANR	2146326	Symbol	* m_lock		2145605						
ANR	2146327	Symbol	header_reader . Read		2145605						
ANR	2146328	Symbol	m_state -> ValidUniqId		2145605						
ANR	2146329	Symbol	header_reader . getEventOffset		2145605						
ANR	2146330	Symbol	header_reader . getFileOffset		2145605						
ANR	2146331	Symbol	temp_path		2145605						
ANR	2146332	Symbol	SEEK_SET		2145605						
ANR	2146333	Symbol	m_fd		2145605						
ANR	2146334	Symbol	do_seek		2145605						
ANR	2146335	Symbol	m_lock_enable		2145605						
ANR	2146336	Symbol	determineLogType		2145605						
ANR	2146337	Symbol	m_state -> Offset		2145605						
ANR	2146338	Symbol	D_ALWAYS		2145605						
ANR	2146339	Symbol	false		2145605						
ANR	2146340	Symbol	log_reader		2145605						
ANR	2146341	Symbol	m_fp		2145605						
ANR	2146342	Symbol	log_reader . initialize		2145605						
ANR	2146343	Symbol	ULOG_OK		2145605						
ANR	2146344	Symbol	header_reader . getSequence		2145605						
ANR	2146345	Symbol	O_RDONLY		2145605						
ANR	2146346	Symbol	new_locking		2145605						
ANR	2146347	Symbol	temp_path . Value		2145605						
ANR	2146348	Symbol	ReadUserLogState :: LOG_TYPE_UNKNOWN		2145605						
ANR	2146349	Function	ReadUserLog :: determineLogType	607:0:15872:18003							
ANR	2146350	FunctionDef	ReadUserLog :: determineLogType ()		2146349	0					
ANR	2146351	CompoundStatement		609:0:15915:18003	2146349	0					
ANR	2146352	ExpressionStatement	Lock ( false )	616:1:16180:16193	2146349	0	True				
ANR	2146353	CallExpression	Lock ( false )		2146349	0					
ANR	2146354	Callee	Lock		2146349	0					
ANR	2146355	Identifier	Lock		2146349	0					
ANR	2146356	ArgumentList	false		2146349	1					
ANR	2146357	Argument	false		2146349	0					
ANR	2146358	Identifier	false		2146349	0					
ANR	2146359	IdentifierDeclStatement	long filepos = ftell ( m_fp ) ;	619:1:16255:16283	2146349	1	True				
ANR	2146360	IdentifierDecl	filepos = ftell ( m_fp )		2146349	0					
ANR	2146361	IdentifierDeclType	long		2146349	0					
ANR	2146362	Identifier	filepos		2146349	1					
ANR	2146363	AssignmentExpression	filepos = ftell ( m_fp )		2146349	2		=			
ANR	2146364	Identifier	filepos		2146349	0					
ANR	2146365	CallExpression	ftell ( m_fp )		2146349	1					
ANR	2146366	Callee	ftell		2146349	0					
ANR	2146367	Identifier	ftell		2146349	0					
ANR	2146368	ArgumentList	m_fp		2146349	1					
ANR	2146369	Argument	m_fp		2146349	0					
ANR	2146370	Identifier	m_fp		2146349	0					
ANR	2146371	IfStatement	if ( filepos < 0 )		2146349	2					
ANR	2146372	Condition	filepos < 0	620:5:16290:16300	2146349	0	True				
ANR	2146373	RelationalExpression	filepos < 0		2146349	0		<			
ANR	2146374	Identifier	filepos		2146349	0					
ANR	2146375	PrimaryExpression	0		2146349	1					
ANR	2146376	CompoundStatement		12:19:388:388	2146349	1					
ANR	2146377	ExpressionStatement	"dprintf ( D_ALWAYS , ""ftell failed in ReadUserLog::determineLogType\\n"" )"	621:2:16308:16376	2146349	0	True				
ANR	2146378	CallExpression	"dprintf ( D_ALWAYS , ""ftell failed in ReadUserLog::determineLogType\\n"" )"		2146349	0					
ANR	2146379	Callee	dprintf		2146349	0					
ANR	2146380	Identifier	dprintf		2146349	0					
ANR	2146381	ArgumentList	D_ALWAYS		2146349	1					
ANR	2146382	Argument	D_ALWAYS		2146349	0					
ANR	2146383	Identifier	D_ALWAYS		2146349	0					
ANR	2146384	Argument	"""ftell failed in ReadUserLog::determineLogType\\n"""		2146349	1					
ANR	2146385	PrimaryExpression	"""ftell failed in ReadUserLog::determineLogType\\n"""		2146349	0					
ANR	2146386	ExpressionStatement	Unlock ( false )	622:2:16380:16395	2146349	1	True				
ANR	2146387	CallExpression	Unlock ( false )		2146349	0					
ANR	2146388	Callee	Unlock		2146349	0					
ANR	2146389	Identifier	Unlock		2146349	0					
ANR	2146390	ArgumentList	false		2146349	1					
ANR	2146391	Argument	false		2146349	0					
ANR	2146392	Identifier	false		2146349	0					
ANR	2146393	ExpressionStatement	"Error ( LOG_ERROR_FILE_OTHER , __LINE__ )"	623:2:16399:16438	2146349	2	True				
ANR	2146394	CallExpression	"Error ( LOG_ERROR_FILE_OTHER , __LINE__ )"		2146349	0					
ANR	2146395	Callee	Error		2146349	0					
ANR	2146396	Identifier	Error		2146349	0					
ANR	2146397	ArgumentList	LOG_ERROR_FILE_OTHER		2146349	1					
ANR	2146398	Argument	LOG_ERROR_FILE_OTHER		2146349	0					
ANR	2146399	Identifier	LOG_ERROR_FILE_OTHER		2146349	0					
ANR	2146400	Argument	__LINE__		2146349	1					
ANR	2146401	Identifier	__LINE__		2146349	0					
ANR	2146402	ReturnStatement	return false ;	624:2:16442:16454	2146349	3	True				
ANR	2146403	Identifier	false		2146349	0					
ANR	2146404	ExpressionStatement	m_state -> Offset ( filepos )	626:1:16460:16486	2146349	3	True				
ANR	2146405	CallExpression	m_state -> Offset ( filepos )		2146349	0					
ANR	2146406	Callee	m_state -> Offset		2146349	0					
ANR	2146407	PtrMemberAccess	m_state -> Offset		2146349	0					
ANR	2146408	Identifier	m_state		2146349	0					
ANR	2146409	Identifier	Offset		2146349	1					
ANR	2146410	ArgumentList	filepos		2146349	1					
ANR	2146411	Argument	filepos		2146349	0					
ANR	2146412	Identifier	filepos		2146349	0					
ANR	2146413	IdentifierDeclStatement	char afterangle ;	628:1:16490:16505	2146349	4	True				
ANR	2146414	IdentifierDecl	afterangle		2146349	0					
ANR	2146415	IdentifierDeclType	char		2146349	0					
ANR	2146416	Identifier	afterangle		2146349	1					
ANR	2146417	IfStatement	"if ( fseek ( m_fp , 0 , SEEK_SET ) < 0 )"		2146349	5					
ANR	2146418	Condition	"fseek ( m_fp , 0 , SEEK_SET ) < 0"	629:6:16513:16542	2146349	0	True				
ANR	2146419	RelationalExpression	"fseek ( m_fp , 0 , SEEK_SET ) < 0"		2146349	0		<			
ANR	2146420	CallExpression	"fseek ( m_fp , 0 , SEEK_SET )"		2146349	0					
ANR	2146421	Callee	fseek		2146349	0					
ANR	2146422	Identifier	fseek		2146349	0					
ANR	2146423	ArgumentList	m_fp		2146349	1					
ANR	2146424	Argument	m_fp		2146349	0					
ANR	2146425	Identifier	m_fp		2146349	0					
ANR	2146426	Argument	0		2146349	1					
ANR	2146427	PrimaryExpression	0		2146349	0					
ANR	2146428	Argument	SEEK_SET		2146349	2					
ANR	2146429	Identifier	SEEK_SET		2146349	0					
ANR	2146430	PrimaryExpression	0		2146349	1					
ANR	2146431	CompoundStatement		21:39:630:630	2146349	1					
ANR	2146432	ExpressionStatement	"dprintf ( D_ALWAYS , ""fseek(0) failed in ReadUserLog::determineLogType\\n"" )"	630:2:16550:16625	2146349	0	True				
ANR	2146433	CallExpression	"dprintf ( D_ALWAYS , ""fseek(0) failed in ReadUserLog::determineLogType\\n"" )"		2146349	0					
ANR	2146434	Callee	dprintf		2146349	0					
ANR	2146435	Identifier	dprintf		2146349	0					
ANR	2146436	ArgumentList	D_ALWAYS		2146349	1					
ANR	2146437	Argument	D_ALWAYS		2146349	0					
ANR	2146438	Identifier	D_ALWAYS		2146349	0					
ANR	2146439	Argument	"""fseek(0) failed in ReadUserLog::determineLogType\\n"""		2146349	1					
ANR	2146440	PrimaryExpression	"""fseek(0) failed in ReadUserLog::determineLogType\\n"""		2146349	0					
ANR	2146441	ExpressionStatement	Unlock ( false )	632:2:16629:16644	2146349	1	True				
ANR	2146442	CallExpression	Unlock ( false )		2146349	0					
ANR	2146443	Callee	Unlock		2146349	0					
ANR	2146444	Identifier	Unlock		2146349	0					
ANR	2146445	ArgumentList	false		2146349	1					
ANR	2146446	Argument	false		2146349	0					
ANR	2146447	Identifier	false		2146349	0					
ANR	2146448	ExpressionStatement	"Error ( LOG_ERROR_FILE_OTHER , __LINE__ )"	633:2:16648:16687	2146349	2	True				
ANR	2146449	CallExpression	"Error ( LOG_ERROR_FILE_OTHER , __LINE__ )"		2146349	0					
ANR	2146450	Callee	Error		2146349	0					
ANR	2146451	Identifier	Error		2146349	0					
ANR	2146452	ArgumentList	LOG_ERROR_FILE_OTHER		2146349	1					
ANR	2146453	Argument	LOG_ERROR_FILE_OTHER		2146349	0					
ANR	2146454	Identifier	LOG_ERROR_FILE_OTHER		2146349	0					
ANR	2146455	Argument	__LINE__		2146349	1					
ANR	2146456	Identifier	__LINE__		2146349	0					
ANR	2146457	ReturnStatement	return false ;	634:2:16691:16703	2146349	3	True				
ANR	2146458	Identifier	false		2146349	0					
ANR	2146459	IdentifierDeclStatement	"int scanf_result = fscanf ( m_fp , "" <%c"" , & afterangle ) ;"	636:1:16709:16761	2146349	6	True				
ANR	2146460	IdentifierDecl	"scanf_result = fscanf ( m_fp , "" <%c"" , & afterangle )"		2146349	0					
ANR	2146461	IdentifierDeclType	int		2146349	0					
ANR	2146462	Identifier	scanf_result		2146349	1					
ANR	2146463	AssignmentExpression	"scanf_result = fscanf ( m_fp , "" <%c"" , & afterangle )"		2146349	2		=			
ANR	2146464	Identifier	scanf_result		2146349	0					
ANR	2146465	CallExpression	"fscanf ( m_fp , "" <%c"" , & afterangle )"		2146349	1					
ANR	2146466	Callee	fscanf		2146349	0					
ANR	2146467	Identifier	fscanf		2146349	0					
ANR	2146468	ArgumentList	m_fp		2146349	1					
ANR	2146469	Argument	m_fp		2146349	0					
ANR	2146470	Identifier	m_fp		2146349	0					
ANR	2146471	Argument	""" <%c"""		2146349	1					
ANR	2146472	PrimaryExpression	""" <%c"""		2146349	0					
ANR	2146473	Argument	& afterangle		2146349	2					
ANR	2146474	UnaryOperationExpression	& afterangle		2146349	0					
ANR	2146475	UnaryOperator	&		2146349	0					
ANR	2146476	Identifier	afterangle		2146349	1					
ANR	2146477	IfStatement	if ( scanf_result > 0 )		2146349	7					
ANR	2146478	Condition	scanf_result > 0	638:5:16769:16784	2146349	0	True				
ANR	2146479	RelationalExpression	scanf_result > 0		2146349	0		>			
ANR	2146480	Identifier	scanf_result		2146349	0					
ANR	2146481	PrimaryExpression	0		2146349	1					
ANR	2146482	CompoundStatement		30:24:872:872	2146349	1					
ANR	2146483	ExpressionStatement	m_state -> LogType ( ReadUserLogState :: LOG_TYPE_XML )	639:2:16792:16842	2146349	0	True				
ANR	2146484	CallExpression	m_state -> LogType ( ReadUserLogState :: LOG_TYPE_XML )		2146349	0					
ANR	2146485	Callee	m_state -> LogType		2146349	0					
ANR	2146486	PtrMemberAccess	m_state -> LogType		2146349	0					
ANR	2146487	Identifier	m_state		2146349	0					
ANR	2146488	Identifier	LogType		2146349	1					
ANR	2146489	ArgumentList	ReadUserLogState :: LOG_TYPE_XML		2146349	1					
ANR	2146490	Argument	ReadUserLogState :: LOG_TYPE_XML		2146349	0					
ANR	2146491	Identifier	ReadUserLogState :: LOG_TYPE_XML		2146349	0					
ANR	2146492	IfStatement	if ( filepos == 0 )		2146349	1					
ANR	2146493	Condition	filepos == 0	642:7:16908:16919	2146349	0	True				
ANR	2146494	EqualityExpression	filepos == 0		2146349	0		==			
ANR	2146495	Identifier	filepos		2146349	0					
ANR	2146496	PrimaryExpression	0		2146349	1					
ANR	2146497	CompoundStatement		34:22:1007:1007	2146349	1					
ANR	2146498	IfStatement	"if ( ! skipXMLHeader ( afterangle , filepos ) )"		2146349	0					
ANR	2146499	Condition	"! skipXMLHeader ( afterangle , filepos )"	643:7:16932:16966	2146349	0	True				
ANR	2146500	UnaryOperationExpression	"! skipXMLHeader ( afterangle , filepos )"		2146349	0					
ANR	2146501	UnaryOperator	!		2146349	0					
ANR	2146502	CallExpression	"skipXMLHeader ( afterangle , filepos )"		2146349	1					
ANR	2146503	Callee	skipXMLHeader		2146349	0					
ANR	2146504	Identifier	skipXMLHeader		2146349	0					
ANR	2146505	ArgumentList	afterangle		2146349	1					
ANR	2146506	Argument	afterangle		2146349	0					
ANR	2146507	Identifier	afterangle		2146349	0					
ANR	2146508	Argument	filepos		2146349	1					
ANR	2146509	Identifier	filepos		2146349	0					
ANR	2146510	CompoundStatement		35:45:1054:1054	2146349	1					
ANR	2146511	ExpressionStatement	m_state -> LogType ( ReadUserLogState :: LOG_TYPE_UNKNOWN )	644:4:16976:17030	2146349	0	True				
ANR	2146512	CallExpression	m_state -> LogType ( ReadUserLogState :: LOG_TYPE_UNKNOWN )		2146349	0					
ANR	2146513	Callee	m_state -> LogType		2146349	0					
ANR	2146514	PtrMemberAccess	m_state -> LogType		2146349	0					
ANR	2146515	Identifier	m_state		2146349	0					
ANR	2146516	Identifier	LogType		2146349	1					
ANR	2146517	ArgumentList	ReadUserLogState :: LOG_TYPE_UNKNOWN		2146349	1					
ANR	2146518	Argument	ReadUserLogState :: LOG_TYPE_UNKNOWN		2146349	0					
ANR	2146519	Identifier	ReadUserLogState :: LOG_TYPE_UNKNOWN		2146349	0					
ANR	2146520	ExpressionStatement	Unlock ( false )	645:4:17036:17051	2146349	1	True				
ANR	2146521	CallExpression	Unlock ( false )		2146349	0					
ANR	2146522	Callee	Unlock		2146349	0					
ANR	2146523	Identifier	Unlock		2146349	0					
ANR	2146524	ArgumentList	false		2146349	1					
ANR	2146525	Argument	false		2146349	0					
ANR	2146526	Identifier	false		2146349	0					
ANR	2146527	ExpressionStatement	"Error ( LOG_ERROR_FILE_OTHER , __LINE__ )"	646:4:17057:17096	2146349	2	True				
ANR	2146528	CallExpression	"Error ( LOG_ERROR_FILE_OTHER , __LINE__ )"		2146349	0					
ANR	2146529	Callee	Error		2146349	0					
ANR	2146530	Identifier	Error		2146349	0					
ANR	2146531	ArgumentList	LOG_ERROR_FILE_OTHER		2146349	1					
ANR	2146532	Argument	LOG_ERROR_FILE_OTHER		2146349	0					
ANR	2146533	Identifier	LOG_ERROR_FILE_OTHER		2146349	0					
ANR	2146534	Argument	__LINE__		2146349	1					
ANR	2146535	Identifier	__LINE__		2146349	0					
ANR	2146536	ReturnStatement	return false ;	647:4:17102:17114	2146349	3	True				
ANR	2146537	Identifier	false		2146349	0					
ANR	2146538	ExpressionStatement	Unlock ( false )	652:2:17164:17179	2146349	2	True				
ANR	2146539	CallExpression	Unlock ( false )		2146349	0					
ANR	2146540	Callee	Unlock		2146349	0					
ANR	2146541	Identifier	Unlock		2146349	0					
ANR	2146542	ArgumentList	false		2146349	1					
ANR	2146543	Argument	false		2146349	0					
ANR	2146544	Identifier	false		2146349	0					
ANR	2146545	ReturnStatement	return true ;	653:2:17183:17194	2146349	3	True				
ANR	2146546	Identifier	true		2146349	0					
ANR	2146547	IdentifierDeclStatement	int nothing ;	658:1:17327:17338	2146349	8	True				
ANR	2146548	IdentifierDecl	nothing		2146349	0					
ANR	2146549	IdentifierDeclType	int		2146349	0					
ANR	2146550	Identifier	nothing		2146349	1					
ANR	2146551	IfStatement	"if ( fseek ( m_fp , 0 , SEEK_SET ) )"		2146349	9					
ANR	2146552	Condition	"fseek ( m_fp , 0 , SEEK_SET )"	659:5:17345:17369	2146349	0	True				
ANR	2146553	CallExpression	"fseek ( m_fp , 0 , SEEK_SET )"		2146349	0					
ANR	2146554	Callee	fseek		2146349	0					
ANR	2146555	Identifier	fseek		2146349	0					
ANR	2146556	ArgumentList	m_fp		2146349	1					
ANR	2146557	Argument	m_fp		2146349	0					
ANR	2146558	Identifier	m_fp		2146349	0					
ANR	2146559	Argument	0		2146349	1					
ANR	2146560	PrimaryExpression	0		2146349	0					
ANR	2146561	Argument	SEEK_SET		2146349	2					
ANR	2146562	Identifier	SEEK_SET		2146349	0					
ANR	2146563	CompoundStatement		51:33:1457:1457	2146349	1					
ANR	2146564	ExpressionStatement	"dprintf ( D_ALWAYS , ""fseek failed in ReadUserLog::determineLogType"" )"	660:2:17377:17447	2146349	0	True				
ANR	2146565	CallExpression	"dprintf ( D_ALWAYS , ""fseek failed in ReadUserLog::determineLogType"" )"		2146349	0					
ANR	2146566	Callee	dprintf		2146349	0					
ANR	2146567	Identifier	dprintf		2146349	0					
ANR	2146568	ArgumentList	D_ALWAYS		2146349	1					
ANR	2146569	Argument	D_ALWAYS		2146349	0					
ANR	2146570	Identifier	D_ALWAYS		2146349	0					
ANR	2146571	Argument	"""fseek failed in ReadUserLog::determineLogType"""		2146349	1					
ANR	2146572	PrimaryExpression	"""fseek failed in ReadUserLog::determineLogType"""		2146349	0					
ANR	2146573	ExpressionStatement	Unlock ( false )	662:2:17451:17466	2146349	1	True				
ANR	2146574	CallExpression	Unlock ( false )		2146349	0					
ANR	2146575	Callee	Unlock		2146349	0					
ANR	2146576	Identifier	Unlock		2146349	0					
ANR	2146577	ArgumentList	false		2146349	1					
ANR	2146578	Argument	false		2146349	0					
ANR	2146579	Identifier	false		2146349	0					
ANR	2146580	ExpressionStatement	"Error ( LOG_ERROR_FILE_OTHER , __LINE__ )"	663:2:17470:17509	2146349	2	True				
ANR	2146581	CallExpression	"Error ( LOG_ERROR_FILE_OTHER , __LINE__ )"		2146349	0					
ANR	2146582	Callee	Error		2146349	0					
ANR	2146583	Identifier	Error		2146349	0					
ANR	2146584	ArgumentList	LOG_ERROR_FILE_OTHER		2146349	1					
ANR	2146585	Argument	LOG_ERROR_FILE_OTHER		2146349	0					
ANR	2146586	Identifier	LOG_ERROR_FILE_OTHER		2146349	0					
ANR	2146587	Argument	__LINE__		2146349	1					
ANR	2146588	Identifier	__LINE__		2146349	0					
ANR	2146589	ReturnStatement	return false ;	664:2:17513:17525	2146349	3	True				
ANR	2146590	Identifier	false		2146349	0					
ANR	2146591	IfStatement	"if ( fscanf ( m_fp , "" %d"" , & nothing ) > 0 )"		2146349	10					
ANR	2146592	Condition	"fscanf ( m_fp , "" %d"" , & nothing ) > 0"	666:5:17535:17569	2146349	0	True				
ANR	2146593	RelationalExpression	"fscanf ( m_fp , "" %d"" , & nothing ) > 0"		2146349	0		>			
ANR	2146594	CallExpression	"fscanf ( m_fp , "" %d"" , & nothing )"		2146349	0					
ANR	2146595	Callee	fscanf		2146349	0					
ANR	2146596	Identifier	fscanf		2146349	0					
ANR	2146597	ArgumentList	m_fp		2146349	1					
ANR	2146598	Argument	m_fp		2146349	0					
ANR	2146599	Identifier	m_fp		2146349	0					
ANR	2146600	Argument	""" %d"""		2146349	1					
ANR	2146601	PrimaryExpression	""" %d"""		2146349	0					
ANR	2146602	Argument	& nothing		2146349	2					
ANR	2146603	UnaryOperationExpression	& nothing		2146349	0					
ANR	2146604	UnaryOperator	&		2146349	0					
ANR	2146605	Identifier	nothing		2146349	1					
ANR	2146606	PrimaryExpression	0		2146349	1					
ANR	2146607	CompoundStatement		58:43:1657:1657	2146349	1					
ANR	2146608	ExpressionStatement	setIsOldLog ( true )	667:2:17577:17594	2146349	0	True				
ANR	2146609	CallExpression	setIsOldLog ( true )		2146349	0					
ANR	2146610	Callee	setIsOldLog		2146349	0					
ANR	2146611	Identifier	setIsOldLog		2146349	0					
ANR	2146612	ArgumentList	true		2146349	1					
ANR	2146613	Argument	true		2146349	0					
ANR	2146614	Identifier	true		2146349	0					
ANR	2146615	ElseStatement	else		2146349	0					
ANR	2146616	CompoundStatement		61:6:1689:1689	2146349	0					
ANR	2146617	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Error, apparently invalid user log file\\n"" )"	671:2:17642:17707	2146349	0	True				
ANR	2146618	CallExpression	"dprintf ( D_FULLDEBUG , ""Error, apparently invalid user log file\\n"" )"		2146349	0					
ANR	2146619	Callee	dprintf		2146349	0					
ANR	2146620	Identifier	dprintf		2146349	0					
ANR	2146621	ArgumentList	D_FULLDEBUG		2146349	1					
ANR	2146622	Argument	D_FULLDEBUG		2146349	0					
ANR	2146623	Identifier	D_FULLDEBUG		2146349	0					
ANR	2146624	Argument	"""Error, apparently invalid user log file\\n"""		2146349	1					
ANR	2146625	PrimaryExpression	"""Error, apparently invalid user log file\\n"""		2146349	0					
ANR	2146626	ExpressionStatement	m_state -> LogType ( ReadUserLogState :: LOG_TYPE_UNKNOWN )	672:2:17711:17765	2146349	1	True				
ANR	2146627	CallExpression	m_state -> LogType ( ReadUserLogState :: LOG_TYPE_UNKNOWN )		2146349	0					
ANR	2146628	Callee	m_state -> LogType		2146349	0					
ANR	2146629	PtrMemberAccess	m_state -> LogType		2146349	0					
ANR	2146630	Identifier	m_state		2146349	0					
ANR	2146631	Identifier	LogType		2146349	1					
ANR	2146632	ArgumentList	ReadUserLogState :: LOG_TYPE_UNKNOWN		2146349	1					
ANR	2146633	Argument	ReadUserLogState :: LOG_TYPE_UNKNOWN		2146349	0					
ANR	2146634	Identifier	ReadUserLogState :: LOG_TYPE_UNKNOWN		2146349	0					
ANR	2146635	IfStatement	"if ( fseek ( m_fp , filepos , SEEK_SET ) )"		2146349	11					
ANR	2146636	Condition	"fseek ( m_fp , filepos , SEEK_SET )"	675:5:17776:17807	2146349	0	True				
ANR	2146637	CallExpression	"fseek ( m_fp , filepos , SEEK_SET )"		2146349	0					
ANR	2146638	Callee	fseek		2146349	0					
ANR	2146639	Identifier	fseek		2146349	0					
ANR	2146640	ArgumentList	m_fp		2146349	1					
ANR	2146641	Argument	m_fp		2146349	0					
ANR	2146642	Identifier	m_fp		2146349	0					
ANR	2146643	Argument	filepos		2146349	1					
ANR	2146644	Identifier	filepos		2146349	0					
ANR	2146645	Argument	SEEK_SET		2146349	2					
ANR	2146646	Identifier	SEEK_SET		2146349	0					
ANR	2146647	CompoundStatement		67:40:1895:1895	2146349	1					
ANR	2146648	ExpressionStatement	"dprintf ( D_ALWAYS , ""fseek failed in ReadUserLog::determineLogType"" )"	676:2:17815:17887	2146349	0	True				
ANR	2146649	CallExpression	"dprintf ( D_ALWAYS , ""fseek failed in ReadUserLog::determineLogType"" )"		2146349	0					
ANR	2146650	Callee	dprintf		2146349	0					
ANR	2146651	Identifier	dprintf		2146349	0					
ANR	2146652	ArgumentList	D_ALWAYS		2146349	1					
ANR	2146653	Argument	D_ALWAYS		2146349	0					
ANR	2146654	Identifier	D_ALWAYS		2146349	0					
ANR	2146655	Argument	"""fseek failed in ReadUserLog::determineLogType"""		2146349	1					
ANR	2146656	PrimaryExpression	"""fseek failed in ReadUserLog::determineLogType"""		2146349	0					
ANR	2146657	ExpressionStatement	Unlock ( false )	678:2:17891:17906	2146349	1	True				
ANR	2146658	CallExpression	Unlock ( false )		2146349	0					
ANR	2146659	Callee	Unlock		2146349	0					
ANR	2146660	Identifier	Unlock		2146349	0					
ANR	2146661	ArgumentList	false		2146349	1					
ANR	2146662	Argument	false		2146349	0					
ANR	2146663	Identifier	false		2146349	0					
ANR	2146664	ExpressionStatement	"Error ( LOG_ERROR_FILE_OTHER , __LINE__ )"	679:2:17910:17949	2146349	2	True				
ANR	2146665	CallExpression	"Error ( LOG_ERROR_FILE_OTHER , __LINE__ )"		2146349	0					
ANR	2146666	Callee	Error		2146349	0					
ANR	2146667	Identifier	Error		2146349	0					
ANR	2146668	ArgumentList	LOG_ERROR_FILE_OTHER		2146349	1					
ANR	2146669	Argument	LOG_ERROR_FILE_OTHER		2146349	0					
ANR	2146670	Identifier	LOG_ERROR_FILE_OTHER		2146349	0					
ANR	2146671	Argument	__LINE__		2146349	1					
ANR	2146672	Identifier	__LINE__		2146349	0					
ANR	2146673	ReturnStatement	return false ;	680:2:17953:17965	2146349	3	True				
ANR	2146674	Identifier	false		2146349	0					
ANR	2146675	ExpressionStatement	Unlock ( false )	683:1:17972:17987	2146349	12	True				
ANR	2146676	CallExpression	Unlock ( false )		2146349	0					
ANR	2146677	Callee	Unlock		2146349	0					
ANR	2146678	Identifier	Unlock		2146349	0					
ANR	2146679	ArgumentList	false		2146349	1					
ANR	2146680	Argument	false		2146349	0					
ANR	2146681	Identifier	false		2146349	0					
ANR	2146682	ReturnStatement	return true ;	684:1:17990:18001	2146349	13	True				
ANR	2146683	Identifier	true		2146349	0					
ANR	2146684	ReturnType	bool		2146349	1					
ANR	2146685	Identifier	ReadUserLog :: determineLogType		2146349	2					
ANR	2146686	ParameterList			2146349	3					
ANR	2146687	CFGEntryNode	ENTRY		2146349		True				
ANR	2146688	CFGExitNode	EXIT		2146349		True				
ANR	2146689	Symbol	SEEK_SET		2146349						
ANR	2146690	Symbol	ftell		2146349						
ANR	2146691	Symbol	nothing		2146349						
ANR	2146692	Symbol	false		2146349						
ANR	2146693	Symbol	D_ALWAYS		2146349						
ANR	2146694	Symbol	D_FULLDEBUG		2146349						
ANR	2146695	Symbol	ReadUserLogState :: LOG_TYPE_XML		2146349						
ANR	2146696	Symbol	& nothing		2146349						
ANR	2146697	Symbol	LOG_ERROR_FILE_OTHER		2146349						
ANR	2146698	Symbol	& afterangle		2146349						
ANR	2146699	Symbol	__LINE__		2146349						
ANR	2146700	Symbol	fseek		2146349						
ANR	2146701	Symbol	m_fp		2146349						
ANR	2146702	Symbol	filepos		2146349						
ANR	2146703	Symbol	m_state		2146349						
ANR	2146704	Symbol	fscanf		2146349						
ANR	2146705	Symbol	true		2146349						
ANR	2146706	Symbol	skipXMLHeader		2146349						
ANR	2146707	Symbol	scanf_result		2146349						
ANR	2146708	Symbol	ReadUserLogState :: LOG_TYPE_UNKNOWN		2146349						
ANR	2146709	Symbol	afterangle		2146349						
ANR	2146710	Function	ReadUserLog :: skipXMLHeader	687:0:18006:19470							
ANR	2146711	FunctionDef	"ReadUserLog :: skipXMLHeader (char afterangle , long filepos)"		2146710	0					
ANR	2146712	CompoundStatement		689:0:18069:19470	2146710	0					
ANR	2146713	IdentifierDeclStatement	int nextchar = afterangle ;	692:1:18170:18195	2146710	0	True				
ANR	2146714	IdentifierDecl	nextchar = afterangle		2146710	0					
ANR	2146715	IdentifierDeclType	int		2146710	0					
ANR	2146716	Identifier	nextchar		2146710	1					
ANR	2146717	AssignmentExpression	nextchar = afterangle		2146710	2		=			
ANR	2146718	Identifier	afterangle		2146710	0					
ANR	2146719	Identifier	afterangle		2146710	1					
ANR	2146720	IfStatement	if ( nextchar == '?' || nextchar == '!' )		2146710	1					
ANR	2146721	Condition	nextchar == '?' || nextchar == '!'	693:5:18202:18235	2146710	0	True				
ANR	2146722	OrExpression	nextchar == '?' || nextchar == '!'		2146710	0		||			
ANR	2146723	EqualityExpression	nextchar == '?'		2146710	0		==			
ANR	2146724	Identifier	nextchar		2146710	0					
ANR	2146725	PrimaryExpression	'?'		2146710	1					
ANR	2146726	EqualityExpression	nextchar == '!'		2146710	1		==			
ANR	2146727	Identifier	nextchar		2146710	0					
ANR	2146728	PrimaryExpression	'!'		2146710	1					
ANR	2146729	CompoundStatement		5:42:169:169	2146710	1					
ANR	2146730	WhileStatement	while ( nextchar == '?' || nextchar == '!' )		2146710	0					
ANR	2146731	Condition	nextchar == '?' || nextchar == '!'	695:9:18293:18326	2146710	0	True				
ANR	2146732	OrExpression	nextchar == '?' || nextchar == '!'		2146710	0		||			
ANR	2146733	EqualityExpression	nextchar == '?'		2146710	0		==			
ANR	2146734	Identifier	nextchar		2146710	0					
ANR	2146735	PrimaryExpression	'?'		2146710	1					
ANR	2146736	EqualityExpression	nextchar == '!'		2146710	1		==			
ANR	2146737	Identifier	nextchar		2146710	0					
ANR	2146738	PrimaryExpression	'!'		2146710	1					
ANR	2146739	CompoundStatement		7:46:260:260	2146710	1					
ANR	2146740	ExpressionStatement	nextchar = fgetc ( m_fp )	697:3:18375:18397	2146710	0	True				
ANR	2146741	AssignmentExpression	nextchar = fgetc ( m_fp )		2146710	0		=			
ANR	2146742	Identifier	nextchar		2146710	0					
ANR	2146743	CallExpression	fgetc ( m_fp )		2146710	1					
ANR	2146744	Callee	fgetc		2146710	0					
ANR	2146745	Identifier	fgetc		2146710	0					
ANR	2146746	ArgumentList	m_fp		2146710	1					
ANR	2146747	Argument	m_fp		2146710	0					
ANR	2146748	Identifier	m_fp		2146710	0					
ANR	2146749	WhileStatement	while ( nextchar != EOF && nextchar != '>' )		2146710	1					
ANR	2146750	Condition	nextchar != EOF && nextchar != '>'	698:10:18409:18442	2146710	0	True				
ANR	2146751	AndExpression	nextchar != EOF && nextchar != '>'		2146710	0		&&			
ANR	2146752	EqualityExpression	nextchar != EOF		2146710	0		!=			
ANR	2146753	Identifier	nextchar		2146710	0					
ANR	2146754	Identifier	EOF		2146710	1					
ANR	2146755	EqualityExpression	nextchar != '>'		2146710	1		!=			
ANR	2146756	Identifier	nextchar		2146710	0					
ANR	2146757	PrimaryExpression	'>'		2146710	1					
ANR	2146758	CompoundStatement		10:47:376:376	2146710	1					
ANR	2146759	ExpressionStatement	nextchar = fgetc ( m_fp )	699:4:18452:18474	2146710	0	True				
ANR	2146760	AssignmentExpression	nextchar = fgetc ( m_fp )		2146710	0		=			
ANR	2146761	Identifier	nextchar		2146710	0					
ANR	2146762	CallExpression	fgetc ( m_fp )		2146710	1					
ANR	2146763	Callee	fgetc		2146710	0					
ANR	2146764	Identifier	fgetc		2146710	0					
ANR	2146765	ArgumentList	m_fp		2146710	1					
ANR	2146766	Argument	m_fp		2146710	0					
ANR	2146767	Identifier	m_fp		2146710	0					
ANR	2146768	IfStatement	if ( nextchar == EOF )		2146710	2					
ANR	2146769	Condition	nextchar == EOF	702:7:18489:18503	2146710	0	True				
ANR	2146770	EqualityExpression	nextchar == EOF		2146710	0		==			
ANR	2146771	Identifier	nextchar		2146710	0					
ANR	2146772	Identifier	EOF		2146710	1					
ANR	2146773	CompoundStatement		14:25:437:437	2146710	1					
ANR	2146774	ExpressionStatement	"Error ( LOG_ERROR_FILE_OTHER , __LINE__ )"	703:4:18513:18552	2146710	0	True				
ANR	2146775	CallExpression	"Error ( LOG_ERROR_FILE_OTHER , __LINE__ )"		2146710	0					
ANR	2146776	Callee	Error		2146710	0					
ANR	2146777	Identifier	Error		2146710	0					
ANR	2146778	ArgumentList	LOG_ERROR_FILE_OTHER		2146710	1					
ANR	2146779	Argument	LOG_ERROR_FILE_OTHER		2146710	0					
ANR	2146780	Identifier	LOG_ERROR_FILE_OTHER		2146710	0					
ANR	2146781	Argument	__LINE__		2146710	1					
ANR	2146782	Identifier	__LINE__		2146710	0					
ANR	2146783	ReturnStatement	return false ;	704:4:18558:18570	2146710	1	True				
ANR	2146784	Identifier	false		2146710	0					
ANR	2146785	WhileStatement	while ( nextchar != EOF && nextchar != '<' )		2146710	3					
ANR	2146786	Condition	nextchar != EOF && nextchar != '<'	709:10:18700:18733	2146710	0	True				
ANR	2146787	AndExpression	nextchar != EOF && nextchar != '<'		2146710	0		&&			
ANR	2146788	EqualityExpression	nextchar != EOF		2146710	0		!=			
ANR	2146789	Identifier	nextchar		2146710	0					
ANR	2146790	Identifier	EOF		2146710	1					
ANR	2146791	EqualityExpression	nextchar != '<'		2146710	1		!=			
ANR	2146792	Identifier	nextchar		2146710	0					
ANR	2146793	PrimaryExpression	'<'		2146710	1					
ANR	2146794	CompoundStatement		21:47:667:667	2146710	1					
ANR	2146795	ExpressionStatement	filepos = ftell ( m_fp )	710:4:18743:18764	2146710	0	True				
ANR	2146796	AssignmentExpression	filepos = ftell ( m_fp )		2146710	0		=			
ANR	2146797	Identifier	filepos		2146710	0					
ANR	2146798	CallExpression	ftell ( m_fp )		2146710	1					
ANR	2146799	Callee	ftell		2146710	0					
ANR	2146800	Identifier	ftell		2146710	0					
ANR	2146801	ArgumentList	m_fp		2146710	1					
ANR	2146802	Argument	m_fp		2146710	0					
ANR	2146803	Identifier	m_fp		2146710	0					
ANR	2146804	ExpressionStatement	nextchar = fgetc ( m_fp )	711:4:18770:18792	2146710	1	True				
ANR	2146805	AssignmentExpression	nextchar = fgetc ( m_fp )		2146710	0		=			
ANR	2146806	Identifier	nextchar		2146710	0					
ANR	2146807	CallExpression	fgetc ( m_fp )		2146710	1					
ANR	2146808	Callee	fgetc		2146710	0					
ANR	2146809	Identifier	fgetc		2146710	0					
ANR	2146810	ArgumentList	m_fp		2146710	1					
ANR	2146811	Argument	m_fp		2146710	0					
ANR	2146812	Identifier	m_fp		2146710	0					
ANR	2146813	IfStatement	if ( nextchar == EOF )		2146710	4					
ANR	2146814	Condition	nextchar == EOF	713:7:18806:18820	2146710	0	True				
ANR	2146815	EqualityExpression	nextchar == EOF		2146710	0		==			
ANR	2146816	Identifier	nextchar		2146710	0					
ANR	2146817	Identifier	EOF		2146710	1					
ANR	2146818	CompoundStatement		25:25:754:754	2146710	1					
ANR	2146819	ExpressionStatement	"Error ( LOG_ERROR_FILE_OTHER , __LINE__ )"	714:4:18830:18869	2146710	0	True				
ANR	2146820	CallExpression	"Error ( LOG_ERROR_FILE_OTHER , __LINE__ )"		2146710	0					
ANR	2146821	Callee	Error		2146710	0					
ANR	2146822	Identifier	Error		2146710	0					
ANR	2146823	ArgumentList	LOG_ERROR_FILE_OTHER		2146710	1					
ANR	2146824	Argument	LOG_ERROR_FILE_OTHER		2146710	0					
ANR	2146825	Identifier	LOG_ERROR_FILE_OTHER		2146710	0					
ANR	2146826	Argument	__LINE__		2146710	1					
ANR	2146827	Identifier	__LINE__		2146710	0					
ANR	2146828	ReturnStatement	return false ;	715:4:18875:18887	2146710	1	True				
ANR	2146829	Identifier	false		2146710	0					
ANR	2146830	ExpressionStatement	nextchar = fgetc ( m_fp )	717:3:18897:18919	2146710	5	True				
ANR	2146831	AssignmentExpression	nextchar = fgetc ( m_fp )		2146710	0		=			
ANR	2146832	Identifier	nextchar		2146710	0					
ANR	2146833	CallExpression	fgetc ( m_fp )		2146710	1					
ANR	2146834	Callee	fgetc		2146710	0					
ANR	2146835	Identifier	fgetc		2146710	0					
ANR	2146836	ArgumentList	m_fp		2146710	1					
ANR	2146837	Argument	m_fp		2146710	0					
ANR	2146838	Identifier	m_fp		2146710	0					
ANR	2146839	IfStatement	"if ( fseek ( m_fp , filepos , SEEK_SET ) )"		2146710	1					
ANR	2146840	Condition	"fseek ( m_fp , filepos , SEEK_SET )"	722:6:19016:19045	2146710	0	True				
ANR	2146841	CallExpression	"fseek ( m_fp , filepos , SEEK_SET )"		2146710	0					
ANR	2146842	Callee	fseek		2146710	0					
ANR	2146843	Identifier	fseek		2146710	0					
ANR	2146844	ArgumentList	m_fp		2146710	1					
ANR	2146845	Argument	m_fp		2146710	0					
ANR	2146846	Identifier	m_fp		2146710	0					
ANR	2146847	Argument	filepos		2146710	1					
ANR	2146848	Identifier	filepos		2146710	0					
ANR	2146849	Argument	SEEK_SET		2146710	2					
ANR	2146850	Identifier	SEEK_SET		2146710	0					
ANR	2146851	CompoundStatement		34:39:979:979	2146710	1					
ANR	2146852	ExpressionStatement	"dprintf ( D_ALWAYS , ""fseek failed in ReadUserLog::skipXMLHeader"" )"	723:3:19054:19117	2146710	0	True				
ANR	2146853	CallExpression	"dprintf ( D_ALWAYS , ""fseek failed in ReadUserLog::skipXMLHeader"" )"		2146710	0					
ANR	2146854	Callee	dprintf		2146710	0					
ANR	2146855	Identifier	dprintf		2146710	0					
ANR	2146856	ArgumentList	D_ALWAYS		2146710	1					
ANR	2146857	Argument	D_ALWAYS		2146710	0					
ANR	2146858	Identifier	D_ALWAYS		2146710	0					
ANR	2146859	Argument	"""fseek failed in ReadUserLog::skipXMLHeader"""		2146710	1					
ANR	2146860	PrimaryExpression	"""fseek failed in ReadUserLog::skipXMLHeader"""		2146710	0					
ANR	2146861	ExpressionStatement	"Error ( LOG_ERROR_FILE_OTHER , __LINE__ )"	724:3:19122:19161	2146710	1	True				
ANR	2146862	CallExpression	"Error ( LOG_ERROR_FILE_OTHER , __LINE__ )"		2146710	0					
ANR	2146863	Callee	Error		2146710	0					
ANR	2146864	Identifier	Error		2146710	0					
ANR	2146865	ArgumentList	LOG_ERROR_FILE_OTHER		2146710	1					
ANR	2146866	Argument	LOG_ERROR_FILE_OTHER		2146710	0					
ANR	2146867	Identifier	LOG_ERROR_FILE_OTHER		2146710	0					
ANR	2146868	Argument	__LINE__		2146710	1					
ANR	2146869	Identifier	__LINE__		2146710	0					
ANR	2146870	ReturnStatement	return false ;	725:3:19166:19178	2146710	2	True				
ANR	2146871	Identifier	false		2146710	0					
ANR	2146872	ElseStatement	else		2146710	0					
ANR	2146873	CompoundStatement		39:8:1122:1122	2146710	0					
ANR	2146874	IfStatement	"if ( fseek ( m_fp , filepos , SEEK_SET ) )"		2146710	0					
ANR	2146875	Condition	"fseek ( m_fp , filepos , SEEK_SET )"	729:6:19254:19283	2146710	0	True				
ANR	2146876	CallExpression	"fseek ( m_fp , filepos , SEEK_SET )"		2146710	0					
ANR	2146877	Callee	fseek		2146710	0					
ANR	2146878	Identifier	fseek		2146710	0					
ANR	2146879	ArgumentList	m_fp		2146710	1					
ANR	2146880	Argument	m_fp		2146710	0					
ANR	2146881	Identifier	m_fp		2146710	0					
ANR	2146882	Argument	filepos		2146710	1					
ANR	2146883	Identifier	filepos		2146710	0					
ANR	2146884	Argument	SEEK_SET		2146710	2					
ANR	2146885	Identifier	SEEK_SET		2146710	0					
ANR	2146886	CompoundStatement		41:39:1217:1217	2146710	1					
ANR	2146887	ExpressionStatement	"dprintf ( D_ALWAYS , ""fseek failed in ReadUserLog::skipXMLHeader"" )"	730:3:19292:19355	2146710	0	True				
ANR	2146888	CallExpression	"dprintf ( D_ALWAYS , ""fseek failed in ReadUserLog::skipXMLHeader"" )"		2146710	0					
ANR	2146889	Callee	dprintf		2146710	0					
ANR	2146890	Identifier	dprintf		2146710	0					
ANR	2146891	ArgumentList	D_ALWAYS		2146710	1					
ANR	2146892	Argument	D_ALWAYS		2146710	0					
ANR	2146893	Identifier	D_ALWAYS		2146710	0					
ANR	2146894	Argument	"""fseek failed in ReadUserLog::skipXMLHeader"""		2146710	1					
ANR	2146895	PrimaryExpression	"""fseek failed in ReadUserLog::skipXMLHeader"""		2146710	0					
ANR	2146896	ExpressionStatement	"Error ( LOG_ERROR_FILE_OTHER , __LINE__ )"	731:3:19360:19399	2146710	1	True				
ANR	2146897	CallExpression	"Error ( LOG_ERROR_FILE_OTHER , __LINE__ )"		2146710	0					
ANR	2146898	Callee	Error		2146710	0					
ANR	2146899	Identifier	Error		2146710	0					
ANR	2146900	ArgumentList	LOG_ERROR_FILE_OTHER		2146710	1					
ANR	2146901	Argument	LOG_ERROR_FILE_OTHER		2146710	0					
ANR	2146902	Identifier	LOG_ERROR_FILE_OTHER		2146710	0					
ANR	2146903	Argument	__LINE__		2146710	1					
ANR	2146904	Identifier	__LINE__		2146710	0					
ANR	2146905	ReturnStatement	return false ;	732:3:19404:19416	2146710	2	True				
ANR	2146906	Identifier	false		2146710	0					
ANR	2146907	ExpressionStatement	m_state -> Offset ( filepos )	736:1:19427:19453	2146710	2	True				
ANR	2146908	CallExpression	m_state -> Offset ( filepos )		2146710	0					
ANR	2146909	Callee	m_state -> Offset		2146710	0					
ANR	2146910	PtrMemberAccess	m_state -> Offset		2146710	0					
ANR	2146911	Identifier	m_state		2146710	0					
ANR	2146912	Identifier	Offset		2146710	1					
ANR	2146913	ArgumentList	filepos		2146710	1					
ANR	2146914	Argument	filepos		2146710	0					
ANR	2146915	Identifier	filepos		2146710	0					
ANR	2146916	ReturnStatement	return true ;	738:1:19457:19468	2146710	3	True				
ANR	2146917	Identifier	true		2146710	0					
ANR	2146918	ReturnType	bool		2146710	1					
ANR	2146919	Identifier	ReadUserLog :: skipXMLHeader		2146710	2					
ANR	2146920	ParameterList	"char afterangle , long filepos"		2146710	3					
ANR	2146921	Parameter	char afterangle	688:27:18038:18052	2146710	0	True				
ANR	2146922	ParameterType	char		2146710	0					
ANR	2146923	Identifier	afterangle		2146710	1					
ANR	2146924	Parameter	long filepos	688:44:18055:18066	2146710	1	True				
ANR	2146925	ParameterType	long		2146710	0					
ANR	2146926	Identifier	filepos		2146710	1					
ANR	2146927	CFGEntryNode	ENTRY		2146710		True				
ANR	2146928	CFGExitNode	EXIT		2146710		True				
ANR	2146929	Symbol	SEEK_SET		2146710						
ANR	2146930	Symbol	nextchar		2146710						
ANR	2146931	Symbol	ftell		2146710						
ANR	2146932	Symbol	false		2146710						
ANR	2146933	Symbol	D_ALWAYS		2146710						
ANR	2146934	Symbol	LOG_ERROR_FILE_OTHER		2146710						
ANR	2146935	Symbol	__LINE__		2146710						
ANR	2146936	Symbol	fseek		2146710						
ANR	2146937	Symbol	m_fp		2146710						
ANR	2146938	Symbol	filepos		2146710						
ANR	2146939	Symbol	m_state		2146710						
ANR	2146940	Symbol	true		2146710						
ANR	2146941	Symbol	EOF		2146710						
ANR	2146942	Symbol	fgetc		2146710						
ANR	2146943	Symbol	afterangle		2146710						
ANR	2146944	Function	ReadUserLog :: FindPrevFile	741:0:19473:20022							
ANR	2146945	FunctionDef	"ReadUserLog :: FindPrevFile (int start , int num , bool store_stat)"		2146944	0					
ANR	2146946	CompoundStatement		743:0:19543:20022	2146944	0					
ANR	2146947	IfStatement	if ( ! m_handle_rot )		2146944	0					
ANR	2146948	Condition	! m_handle_rot	744:6:19551:19563	2146944	0	True				
ANR	2146949	UnaryOperationExpression	! m_handle_rot		2146944	0					
ANR	2146950	UnaryOperator	!		2146944	0					
ANR	2146951	Identifier	m_handle_rot		2146944	1					
ANR	2146952	CompoundStatement		2:22:23:23	2146944	1					
ANR	2146953	ReturnStatement	return true ;	745:2:19571:19582	2146944	0	True				
ANR	2146954	Identifier	true		2146944	0					
ANR	2146955	IdentifierDeclStatement	int end ;	749:1:19623:19633	2146944	1	True				
ANR	2146956	IdentifierDecl	end		2146944	0					
ANR	2146957	IdentifierDeclType	int		2146944	0					
ANR	2146958	Identifier	end		2146944	1					
ANR	2146959	IfStatement	if ( 0 == num )		2146944	2					
ANR	2146960	Condition	0 == num	750:6:19641:19648	2146944	0	True				
ANR	2146961	EqualityExpression	0 == num		2146944	0		==			
ANR	2146962	PrimaryExpression	0		2146944	0					
ANR	2146963	Identifier	num		2146944	1					
ANR	2146964	CompoundStatement		8:17:108:108	2146944	1					
ANR	2146965	ExpressionStatement	end = 0	751:2:19656:19663	2146944	0	True				
ANR	2146966	AssignmentExpression	end = 0		2146944	0		=			
ANR	2146967	Identifier	end		2146944	0					
ANR	2146968	PrimaryExpression	0		2146944	1					
ANR	2146969	ElseStatement	else		2146944	0					
ANR	2146970	CompoundStatement		10:8:129:129	2146944	0					
ANR	2146971	ExpressionStatement	end = start - num + 1	753:2:19677:19698	2146944	0	True				
ANR	2146972	AssignmentExpression	end = start - num + 1		2146944	0		=			
ANR	2146973	Identifier	end		2146944	0					
ANR	2146974	AdditiveExpression	start - num + 1		2146944	1		-			
ANR	2146975	Identifier	start		2146944	0					
ANR	2146976	AdditiveExpression	num + 1		2146944	1		+			
ANR	2146977	Identifier	num		2146944	0					
ANR	2146978	PrimaryExpression	1		2146944	1					
ANR	2146979	IfStatement	if ( end < 0 )		2146944	1					
ANR	2146980	Condition	end < 0	754:7:19707:19713	2146944	0	True				
ANR	2146981	RelationalExpression	end < 0		2146944	0		<			
ANR	2146982	Identifier	end		2146944	0					
ANR	2146983	PrimaryExpression	0		2146944	1					
ANR	2146984	CompoundStatement		12:17:173:173	2146944	1					
ANR	2146985	ExpressionStatement	end = 0	755:3:19722:19729	2146944	0	True				
ANR	2146986	AssignmentExpression	end = 0		2146944	0		=			
ANR	2146987	Identifier	end		2146944	0					
ANR	2146988	PrimaryExpression	0		2146944	1					
ANR	2146989	ForStatement	for ( int rot = start ; rot >= end ; rot -- )		2146944	3					
ANR	2146990	ForInit	int rot = start ;	760:7:19779:19794	2146944	0	True				
ANR	2146991	IdentifierDeclStatement	int rot = start ;		2146944	0					
ANR	2146992	IdentifierDecl	rot = start		2146944	0					
ANR	2146993	IdentifierDeclType	int		2146944	0					
ANR	2146994	Identifier	rot		2146944	1					
ANR	2146995	AssignmentExpression	rot = start		2146944	2		=			
ANR	2146996	Identifier	start		2146944	0					
ANR	2146997	Identifier	start		2146944	1					
ANR	2146998	Condition	rot >= end	760:25:19797:19806	2146944	1	True				
ANR	2146999	RelationalExpression	rot >= end		2146944	0		>=			
ANR	2147000	Identifier	rot		2146944	0					
ANR	2147001	Identifier	end		2146944	1					
ANR	2147002	PostIncDecOperationExpression	rot --	760:38:19810:19814	2146944	2	True				
ANR	2147003	Identifier	rot		2146944	0					
ANR	2147004	IncDec	--		2146944	1					
ANR	2147005	CompoundStatement		18:46:274:274	2146944	3					
ANR	2147006	IfStatement	"if ( 0 == m_state -> Rotation ( rot , store_stat ) )"		2146944	0					
ANR	2147007	Condition	"0 == m_state -> Rotation ( rot , store_stat )"	761:7:19827:19867	2146944	0	True				
ANR	2147008	EqualityExpression	"0 == m_state -> Rotation ( rot , store_stat )"		2146944	0		==			
ANR	2147009	PrimaryExpression	0		2146944	0					
ANR	2147010	CallExpression	"m_state -> Rotation ( rot , store_stat )"		2146944	1					
ANR	2147011	Callee	m_state -> Rotation		2146944	0					
ANR	2147012	PtrMemberAccess	m_state -> Rotation		2146944	0					
ANR	2147013	Identifier	m_state		2146944	0					
ANR	2147014	Identifier	Rotation		2146944	1					
ANR	2147015	ArgumentList	rot		2146944	1					
ANR	2147016	Argument	rot		2146944	0					
ANR	2147017	Identifier	rot		2146944	0					
ANR	2147018	Argument	store_stat		2146944	1					
ANR	2147019	Identifier	store_stat		2146944	0					
ANR	2147020	CompoundStatement		19:52:328:328	2146944	1					
ANR	2147021	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Found: '%s'\\n"" , m_state -> CurPath ( ) )"	762:3:19877:19936	2146944	0	True				
ANR	2147022	CallExpression	"dprintf ( D_FULLDEBUG , ""Found: '%s'\\n"" , m_state -> CurPath ( ) )"		2146944	0					
ANR	2147023	Callee	dprintf		2146944	0					
ANR	2147024	Identifier	dprintf		2146944	0					
ANR	2147025	ArgumentList	D_FULLDEBUG		2146944	1					
ANR	2147026	Argument	D_FULLDEBUG		2146944	0					
ANR	2147027	Identifier	D_FULLDEBUG		2146944	0					
ANR	2147028	Argument	"""Found: '%s'\\n"""		2146944	1					
ANR	2147029	PrimaryExpression	"""Found: '%s'\\n"""		2146944	0					
ANR	2147030	Argument	m_state -> CurPath ( )		2146944	2					
ANR	2147031	CallExpression	m_state -> CurPath ( )		2146944	0					
ANR	2147032	Callee	m_state -> CurPath		2146944	0					
ANR	2147033	PtrMemberAccess	m_state -> CurPath		2146944	0					
ANR	2147034	Identifier	m_state		2146944	0					
ANR	2147035	Identifier	CurPath		2146944	1					
ANR	2147036	ArgumentList			2146944	1					
ANR	2147037	ReturnStatement	return true ;	763:3:19941:19952	2146944	1	True				
ANR	2147038	Identifier	true		2146944	0					
ANR	2147039	ExpressionStatement	"Error ( LOG_ERROR_FILE_NOT_FOUND , __LINE__ )"	766:1:19962:20005	2146944	4	True				
ANR	2147040	CallExpression	"Error ( LOG_ERROR_FILE_NOT_FOUND , __LINE__ )"		2146944	0					
ANR	2147041	Callee	Error		2146944	0					
ANR	2147042	Identifier	Error		2146944	0					
ANR	2147043	ArgumentList	LOG_ERROR_FILE_NOT_FOUND		2146944	1					
ANR	2147044	Argument	LOG_ERROR_FILE_NOT_FOUND		2146944	0					
ANR	2147045	Identifier	LOG_ERROR_FILE_NOT_FOUND		2146944	0					
ANR	2147046	Argument	__LINE__		2146944	1					
ANR	2147047	Identifier	__LINE__		2146944	0					
ANR	2147048	ReturnStatement	return false ;	767:1:20008:20020	2146944	5	True				
ANR	2147049	Identifier	false		2146944	0					
ANR	2147050	ReturnType	bool		2146944	1					
ANR	2147051	Identifier	ReadUserLog :: FindPrevFile		2146944	2					
ANR	2147052	ParameterList	"int start , int num , bool store_stat"		2146944	3					
ANR	2147053	Parameter	int start	742:27:19505:19513	2146944	0	True				
ANR	2147054	ParameterType	int		2146944	0					
ANR	2147055	Identifier	start		2146944	1					
ANR	2147056	Parameter	int num	742:38:19516:19522	2146944	1	True				
ANR	2147057	ParameterType	int		2146944	0					
ANR	2147058	Identifier	num		2146944	1					
ANR	2147059	Parameter	bool store_stat	742:47:19525:19539	2146944	2	True				
ANR	2147060	ParameterType	bool		2146944	0					
ANR	2147061	Identifier	store_stat		2146944	1					
ANR	2147062	CFGEntryNode	ENTRY		2146944		True				
ANR	2147063	CFGExitNode	EXIT		2146944		True				
ANR	2147064	Symbol	store_stat		2146944						
ANR	2147065	Symbol	num		2146944						
ANR	2147066	Symbol	* m_state		2146944						
ANR	2147067	Symbol	start		2146944						
ANR	2147068	Symbol	false		2146944						
ANR	2147069	Symbol	D_FULLDEBUG		2146944						
ANR	2147070	Symbol	__LINE__		2146944						
ANR	2147071	Symbol	m_handle_rot		2146944						
ANR	2147072	Symbol	m_state -> Rotation		2146944						
ANR	2147073	Symbol	m_state		2146944						
ANR	2147074	Symbol	m_state -> CurPath		2146944						
ANR	2147075	Symbol	rot		2146944						
ANR	2147076	Symbol	true		2146944						
ANR	2147077	Symbol	end		2146944						
ANR	2147078	Symbol	LOG_ERROR_FILE_NOT_FOUND		2146944						
ANR	2147079	Function	ReadUserLog :: ReopenLogFile	770:0:20025:22186							
ANR	2147080	FunctionDef	ReadUserLog :: ReopenLogFile (bool restore)		2147079	0					
ANR	2147081	CompoundStatement		772:0:20085:22186	2147079	0					
ANR	2147082	IfStatement	if ( m_fp )		2147079	0					
ANR	2147083	Condition	m_fp	775:6:20141:20144	2147079	0	True				
ANR	2147084	Identifier	m_fp		2147079	0					
ANR	2147085	CompoundStatement		4:13:62:62	2147079	1					
ANR	2147086	ReturnStatement	return ULOG_OK ;	776:2:20152:20166	2147079	0	True				
ANR	2147087	Identifier	ULOG_OK		2147079	0					
ANR	2147088	IfStatement	if ( ! m_handle_rot )		2147079	1					
ANR	2147089	Condition	! m_handle_rot	780:6:20242:20255	2147079	0	True				
ANR	2147090	UnaryOperationExpression	! m_handle_rot		2147079	0					
ANR	2147091	UnaryOperator	!		2147079	0					
ANR	2147092	Identifier	m_handle_rot		2147079	1					
ANR	2147093	CompoundStatement		9:23:173:173	2147079	1					
ANR	2147094	ReturnStatement	return OpenLogFile ( true ) ;	781:2:20263:20289	2147079	0	True				
ANR	2147095	CallExpression	OpenLogFile ( true )		2147079	0					
ANR	2147096	Callee	OpenLogFile		2147079	0					
ANR	2147097	Identifier	OpenLogFile		2147079	0					
ANR	2147098	ArgumentList	true		2147079	1					
ANR	2147099	Argument	true		2147079	0					
ANR	2147100	Identifier	true		2147079	0					
ANR	2147101	IfStatement	if ( ! m_state -> IsValid ( ) )		2147079	2					
ANR	2147102	Condition	! m_state -> IsValid ( )	785:6:20371:20390	2147079	0	True				
ANR	2147103	UnaryOperationExpression	! m_state -> IsValid ( )		2147079	0					
ANR	2147104	UnaryOperator	!		2147079	0					
ANR	2147105	CallExpression	m_state -> IsValid ( )		2147079	1					
ANR	2147106	Callee	m_state -> IsValid		2147079	0					
ANR	2147107	PtrMemberAccess	m_state -> IsValid		2147079	0					
ANR	2147108	Identifier	m_state		2147079	0					
ANR	2147109	Identifier	IsValid		2147079	1					
ANR	2147110	ArgumentList			2147079	1					
ANR	2147111	CompoundStatement		14:29:308:308	2147079	1					
ANR	2147112	IfStatement	if ( m_handle_rot )		2147079	0					
ANR	2147113	Condition	m_handle_rot	786:7:20403:20414	2147079	0	True				
ANR	2147114	Identifier	m_handle_rot		2147079	0					
ANR	2147115	CompoundStatement		15:22:332:332	2147079	1					
ANR	2147116	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""reopen: looking for previous file...\\n"" )"	787:3:20423:20487	2147079	0	True				
ANR	2147117	CallExpression	"dprintf ( D_FULLDEBUG , ""reopen: looking for previous file...\\n"" )"		2147079	0					
ANR	2147118	Callee	dprintf		2147079	0					
ANR	2147119	Identifier	dprintf		2147079	0					
ANR	2147120	ArgumentList	D_FULLDEBUG		2147079	1					
ANR	2147121	Argument	D_FULLDEBUG		2147079	0					
ANR	2147122	Identifier	D_FULLDEBUG		2147079	0					
ANR	2147123	Argument	"""reopen: looking for previous file...\\n"""		2147079	1					
ANR	2147124	PrimaryExpression	"""reopen: looking for previous file...\\n"""		2147079	0					
ANR	2147125	IfStatement	"if ( ! FindPrevFile ( m_max_rotations , 0 , true ) )"		2147079	1					
ANR	2147126	Condition	"! FindPrevFile ( m_max_rotations , 0 , true )"	788:7:20496:20537	2147079	0	True				
ANR	2147127	UnaryOperationExpression	"! FindPrevFile ( m_max_rotations , 0 , true )"		2147079	0					
ANR	2147128	UnaryOperator	!		2147079	0					
ANR	2147129	CallExpression	"FindPrevFile ( m_max_rotations , 0 , true )"		2147079	1					
ANR	2147130	Callee	FindPrevFile		2147079	0					
ANR	2147131	Identifier	FindPrevFile		2147079	0					
ANR	2147132	ArgumentList	m_max_rotations		2147079	1					
ANR	2147133	Argument	m_max_rotations		2147079	0					
ANR	2147134	Identifier	m_max_rotations		2147079	0					
ANR	2147135	Argument	0		2147079	1					
ANR	2147136	PrimaryExpression	0		2147079	0					
ANR	2147137	Argument	true		2147079	2					
ANR	2147138	Identifier	true		2147079	0					
ANR	2147139	CompoundStatement		17:52:455:455	2147079	1					
ANR	2147140	ExpressionStatement	"Error ( LOG_ERROR_FILE_NOT_FOUND , __LINE__ )"	789:4:20547:20590	2147079	0	True				
ANR	2147141	CallExpression	"Error ( LOG_ERROR_FILE_NOT_FOUND , __LINE__ )"		2147079	0					
ANR	2147142	Callee	Error		2147079	0					
ANR	2147143	Identifier	Error		2147079	0					
ANR	2147144	ArgumentList	LOG_ERROR_FILE_NOT_FOUND		2147079	1					
ANR	2147145	Argument	LOG_ERROR_FILE_NOT_FOUND		2147079	0					
ANR	2147146	Identifier	LOG_ERROR_FILE_NOT_FOUND		2147079	0					
ANR	2147147	Argument	__LINE__		2147079	1					
ANR	2147148	Identifier	__LINE__		2147079	0					
ANR	2147149	ReturnStatement	return ULOG_NO_EVENT ;	790:4:20596:20616	2147079	1	True				
ANR	2147150	Identifier	ULOG_NO_EVENT		2147079	0					
ANR	2147151	ElseStatement	else		2147079	0					
ANR	2147152	CompoundStatement		22:7:548:548	2147079	0					
ANR	2147153	IfStatement	"if ( m_state -> Rotation ( 0 , true ) )"		2147079	0					
ANR	2147154	Condition	"m_state -> Rotation ( 0 , true )"	794:8:20644:20671	2147079	0	True				
ANR	2147155	CallExpression	"m_state -> Rotation ( 0 , true )"		2147079	0					
ANR	2147156	Callee	m_state -> Rotation		2147079	0					
ANR	2147157	PtrMemberAccess	m_state -> Rotation		2147079	0					
ANR	2147158	Identifier	m_state		2147079	0					
ANR	2147159	Identifier	Rotation		2147079	1					
ANR	2147160	ArgumentList	0		2147079	1					
ANR	2147161	Argument	0		2147079	0					
ANR	2147162	PrimaryExpression	0		2147079	0					
ANR	2147163	Argument	true		2147079	1					
ANR	2147164	Identifier	true		2147079	0					
ANR	2147165	CompoundStatement		23:39:589:589	2147079	1					
ANR	2147166	ExpressionStatement	"Error ( LOG_ERROR_FILE_NOT_FOUND , __LINE__ )"	795:4:20681:20724	2147079	0	True				
ANR	2147167	CallExpression	"Error ( LOG_ERROR_FILE_NOT_FOUND , __LINE__ )"		2147079	0					
ANR	2147168	Callee	Error		2147079	0					
ANR	2147169	Identifier	Error		2147079	0					
ANR	2147170	ArgumentList	LOG_ERROR_FILE_NOT_FOUND		2147079	1					
ANR	2147171	Argument	LOG_ERROR_FILE_NOT_FOUND		2147079	0					
ANR	2147172	Identifier	LOG_ERROR_FILE_NOT_FOUND		2147079	0					
ANR	2147173	Argument	__LINE__		2147079	1					
ANR	2147174	Identifier	__LINE__		2147079	0					
ANR	2147175	ReturnStatement	return ULOG_NO_EVENT ;	796:4:20730:20750	2147079	1	True				
ANR	2147176	Identifier	ULOG_NO_EVENT		2147079	0					
ANR	2147177	ReturnStatement	return OpenLogFile ( false ) ;	799:2:20763:20790	2147079	1	True				
ANR	2147178	CallExpression	OpenLogFile ( false )		2147079	0					
ANR	2147179	Callee	OpenLogFile		2147079	0					
ANR	2147180	Identifier	OpenLogFile		2147079	0					
ANR	2147181	ArgumentList	false		2147079	1					
ANR	2147182	Argument	false		2147079	0					
ANR	2147183	Identifier	false		2147079	0					
ANR	2147184	IdentifierDeclStatement	int new_rot = - 1 ;	804:1:20923:20939	2147079	3	True				
ANR	2147185	IdentifierDecl	new_rot = - 1		2147079	0					
ANR	2147186	IdentifierDeclType	int		2147079	0					
ANR	2147187	Identifier	new_rot		2147079	1					
ANR	2147188	AssignmentExpression	new_rot = - 1		2147079	2		=			
ANR	2147189	Identifier	new_rot		2147079	0					
ANR	2147190	UnaryOperationExpression	- 1		2147079	1					
ANR	2147191	UnaryOperator	-		2147079	0					
ANR	2147192	PrimaryExpression	1		2147079	1					
ANR	2147193	IdentifierDeclStatement	int max_score = - 1 ;	805:1:20942:20960	2147079	4	True				
ANR	2147194	IdentifierDecl	max_score = - 1		2147079	0					
ANR	2147195	IdentifierDeclType	int		2147079	0					
ANR	2147196	Identifier	max_score		2147079	1					
ANR	2147197	AssignmentExpression	max_score = - 1		2147079	2		=			
ANR	2147198	Identifier	max_score		2147079	0					
ANR	2147199	UnaryOperationExpression	- 1		2147079	1					
ANR	2147200	UnaryOperator	-		2147079	0					
ANR	2147201	PrimaryExpression	1		2147079	1					
ANR	2147202	IdentifierDeclStatement	int max_score_rot = - 1 ;	806:1:20963:20985	2147079	5	True				
ANR	2147203	IdentifierDecl	max_score_rot = - 1		2147079	0					
ANR	2147204	IdentifierDeclType	int		2147079	0					
ANR	2147205	Identifier	max_score_rot		2147079	1					
ANR	2147206	AssignmentExpression	max_score_rot = - 1		2147079	2		=			
ANR	2147207	Identifier	max_score_rot		2147079	0					
ANR	2147208	UnaryOperationExpression	- 1		2147079	1					
ANR	2147209	UnaryOperator	-		2147079	0					
ANR	2147210	PrimaryExpression	1		2147079	1					
ANR	2147211	IdentifierDeclStatement	int * scores = new int [ m_max_rotations + 1 ] ;	807:1:20988:21028	2147079	6	True				
ANR	2147212	IdentifierDecl	* scores = new int [ m_max_rotations + 1 ]		2147079	0					
ANR	2147213	IdentifierDeclType	int *		2147079	0					
ANR	2147214	Identifier	scores		2147079	1					
ANR	2147215	AssignmentExpression	* scores = new int [ m_max_rotations + 1 ]		2147079	2		=			
ANR	2147216	Identifier	scores		2147079	0					
ANR	2147217	AdditiveExpression	m_max_rotations + 1		2147079	1		+			
ANR	2147218	Identifier	m_max_rotations		2147079	0					
ANR	2147219	PrimaryExpression	1		2147079	1					
ANR	2147220	IdentifierDeclStatement	int start = m_state -> Rotation ( ) ;	808:1:21031:21062	2147079	7	True				
ANR	2147221	IdentifierDecl	start = m_state -> Rotation ( )		2147079	0					
ANR	2147222	IdentifierDeclType	int		2147079	0					
ANR	2147223	Identifier	start		2147079	1					
ANR	2147224	AssignmentExpression	start = m_state -> Rotation ( )		2147079	2		=			
ANR	2147225	Identifier	start		2147079	0					
ANR	2147226	CallExpression	m_state -> Rotation ( )		2147079	1					
ANR	2147227	Callee	m_state -> Rotation		2147079	0					
ANR	2147228	PtrMemberAccess	m_state -> Rotation		2147079	0					
ANR	2147229	Identifier	m_state		2147079	0					
ANR	2147230	Identifier	Rotation		2147079	1					
ANR	2147231	ArgumentList			2147079	1					
ANR	2147232	IdentifierDeclStatement	int thresh = restore ? SCORE_THRESH_RESTORE : SCORE_THRESH_FWSEARCH ;	809:1:21065:21132	2147079	8	True				
ANR	2147233	IdentifierDecl	thresh = restore ? SCORE_THRESH_RESTORE : SCORE_THRESH_FWSEARCH		2147079	0					
ANR	2147234	IdentifierDeclType	int		2147079	0					
ANR	2147235	Identifier	thresh		2147079	1					
ANR	2147236	AssignmentExpression	thresh = restore ? SCORE_THRESH_RESTORE : SCORE_THRESH_FWSEARCH		2147079	2		=			
ANR	2147237	Identifier	thresh		2147079	0					
ANR	2147238	ConditionalExpression	restore ? SCORE_THRESH_RESTORE : SCORE_THRESH_FWSEARCH		2147079	1					
ANR	2147239	Condition	restore		2147079	0					
ANR	2147240	Identifier	restore		2147079	0					
ANR	2147241	Identifier	SCORE_THRESH_RESTORE		2147079	1					
ANR	2147242	Identifier	SCORE_THRESH_FWSEARCH		2147079	2					
ANR	2147243	ForStatement	for ( int rot = start ; ( rot <= m_max_rotations ) && ( new_rot < 0 ) ; rot ++ )		2147079	9					
ANR	2147244	ForInit	int rot = start ;	810:6:21140:21155	2147079	0	True				
ANR	2147245	IdentifierDeclStatement	int rot = start ;		2147079	0					
ANR	2147246	IdentifierDecl	rot = start		2147079	0					
ANR	2147247	IdentifierDeclType	int		2147079	0					
ANR	2147248	Identifier	rot		2147079	1					
ANR	2147249	AssignmentExpression	rot = start		2147079	2		=			
ANR	2147250	Identifier	start		2147079	0					
ANR	2147251	Identifier	start		2147079	1					
ANR	2147252	Condition	( rot <= m_max_rotations ) && ( new_rot < 0 )	810:23:21157:21197	2147079	1	True				
ANR	2147253	AndExpression	( rot <= m_max_rotations ) && ( new_rot < 0 )		2147079	0		&&			
ANR	2147254	RelationalExpression	rot <= m_max_rotations		2147079	0		<=			
ANR	2147255	Identifier	rot		2147079	0					
ANR	2147256	Identifier	m_max_rotations		2147079	1					
ANR	2147257	RelationalExpression	new_rot < 0		2147079	1		<			
ANR	2147258	Identifier	new_rot		2147079	0					
ANR	2147259	PrimaryExpression	0		2147079	1					
ANR	2147260	PostIncDecOperationExpression	rot ++	810:66:21200:21204	2147079	2	True				
ANR	2147261	Identifier	rot		2147079	0					
ANR	2147262	IncDec	++		2147079	1					
ANR	2147263	CompoundStatement		42:2:1141:1220	2147079	3					
ANR	2147264	IdentifierDeclStatement	int score ;	811:2:21212:21222	2147079	0	True				
ANR	2147265	IdentifierDecl	score		2147079	0					
ANR	2147266	IdentifierDeclType	int		2147079	0					
ANR	2147267	Identifier	score		2147079	1					
ANR	2147268	IdentifierDeclStatement	"ReadUserLogMatch :: MatchResult result = m_match -> Match ( rot , thresh , & score ) ;"	813:2:21227:21306	2147079	1	True				
ANR	2147269	IdentifierDecl	"result = m_match -> Match ( rot , thresh , & score )"		2147079	0					
ANR	2147270	IdentifierDeclType	ReadUserLogMatch :: MatchResult		2147079	0					
ANR	2147271	Identifier	result		2147079	1					
ANR	2147272	AssignmentExpression	"result = m_match -> Match ( rot , thresh , & score )"		2147079	2		=			
ANR	2147273	Identifier	result		2147079	0					
ANR	2147274	CallExpression	"m_match -> Match ( rot , thresh , & score )"		2147079	1					
ANR	2147275	Callee	m_match -> Match		2147079	0					
ANR	2147276	PtrMemberAccess	m_match -> Match		2147079	0					
ANR	2147277	Identifier	m_match		2147079	0					
ANR	2147278	Identifier	Match		2147079	1					
ANR	2147279	ArgumentList	rot		2147079	1					
ANR	2147280	Argument	rot		2147079	0					
ANR	2147281	Identifier	rot		2147079	0					
ANR	2147282	Argument	thresh		2147079	1					
ANR	2147283	Identifier	thresh		2147079	0					
ANR	2147284	Argument	& score		2147079	2					
ANR	2147285	UnaryOperationExpression	& score		2147079	0					
ANR	2147286	UnaryOperator	&		2147079	0					
ANR	2147287	Identifier	score		2147079	1					
ANR	2147288	IfStatement	if ( ReadUserLogMatch :: MATCH_ERROR == result )		2147079	2					
ANR	2147289	Condition	ReadUserLogMatch :: MATCH_ERROR == result	815:7:21315:21353	2147079	0	True				
ANR	2147290	EqualityExpression	ReadUserLogMatch :: MATCH_ERROR == result		2147079	0		==			
ANR	2147291	Identifier	ReadUserLogMatch :: MATCH_ERROR		2147079	0					
ANR	2147292	Identifier	result		2147079	1					
ANR	2147293	CompoundStatement		44:49:1271:1271	2147079	1					
ANR	2147294	ExpressionStatement	scores [ rot ] = - 1	816:3:21362:21378	2147079	0	True				
ANR	2147295	AssignmentExpression	scores [ rot ] = - 1		2147079	0		=			
ANR	2147296	ArrayIndexing	scores [ rot ]		2147079	0					
ANR	2147297	Identifier	scores		2147079	0					
ANR	2147298	Identifier	rot		2147079	1					
ANR	2147299	UnaryOperationExpression	- 1		2147079	1					
ANR	2147300	UnaryOperator	-		2147079	0					
ANR	2147301	PrimaryExpression	1		2147079	1					
ANR	2147302	ElseStatement	else		2147079	0					
ANR	2147303	IfStatement	if ( ReadUserLogMatch :: MATCH == result )		2147079	0					
ANR	2147304	Condition	ReadUserLogMatch :: MATCH == result	818:12:21396:21428	2147079	0	True				
ANR	2147305	EqualityExpression	ReadUserLogMatch :: MATCH == result		2147079	0		==			
ANR	2147306	Identifier	ReadUserLogMatch :: MATCH		2147079	0					
ANR	2147307	Identifier	result		2147079	1					
ANR	2147308	CompoundStatement		47:48:1346:1346	2147079	1					
ANR	2147309	ExpressionStatement	new_rot = rot	819:3:21437:21450	2147079	0	True				
ANR	2147310	AssignmentExpression	new_rot = rot		2147079	0		=			
ANR	2147311	Identifier	new_rot		2147079	0					
ANR	2147312	Identifier	rot		2147079	1					
ANR	2147313	ElseStatement	else		2147079	0					
ANR	2147314	IfStatement	if ( ReadUserLogMatch :: UNKNOWN == result )		2147079	0					
ANR	2147315	Condition	ReadUserLogMatch :: UNKNOWN == result	821:12:21468:21502	2147079	0	True				
ANR	2147316	EqualityExpression	ReadUserLogMatch :: UNKNOWN == result		2147079	0		==			
ANR	2147317	Identifier	ReadUserLogMatch :: UNKNOWN		2147079	0					
ANR	2147318	Identifier	result		2147079	1					
ANR	2147319	CompoundStatement		50:50:1420:1420	2147079	1					
ANR	2147320	ExpressionStatement	scores [ rot ] = score	822:3:21511:21530	2147079	0	True				
ANR	2147321	AssignmentExpression	scores [ rot ] = score		2147079	0		=			
ANR	2147322	ArrayIndexing	scores [ rot ]		2147079	0					
ANR	2147323	Identifier	scores		2147079	0					
ANR	2147324	Identifier	rot		2147079	1					
ANR	2147325	Identifier	score		2147079	1					
ANR	2147326	IfStatement	if ( score > max_score )		2147079	1					
ANR	2147327	Condition	score > max_score	823:8:21540:21556	2147079	0	True				
ANR	2147328	RelationalExpression	score > max_score		2147079	0		>			
ANR	2147329	Identifier	score		2147079	0					
ANR	2147330	Identifier	max_score		2147079	1					
ANR	2147331	CompoundStatement		52:28:1474:1474	2147079	1					
ANR	2147332	ExpressionStatement	max_score_rot = rot	824:4:21566:21585	2147079	0	True				
ANR	2147333	AssignmentExpression	max_score_rot = rot		2147079	0		=			
ANR	2147334	Identifier	max_score_rot		2147079	0					
ANR	2147335	Identifier	rot		2147079	1					
ANR	2147336	ExpressionStatement	max_score = score	825:4:21591:21608	2147079	1	True				
ANR	2147337	AssignmentExpression	max_score = score		2147079	0		=			
ANR	2147338	Identifier	max_score		2147079	0					
ANR	2147339	Identifier	score		2147079	1					
ANR	2147340	Statement	delete	829:1:21623:21628	2147079	10	True				
ANR	2147341	Statement	[	829:8:21630:21630	2147079	11	True				
ANR	2147342	Statement	]	829:9:21631:21631	2147079	12	True				
ANR	2147343	ExpressionStatement	scores	829:11:21633:21639	2147079	13	True				
ANR	2147344	Identifier	scores		2147079	0					
ANR	2147345	IfStatement	if ( ( new_rot < 0 ) && ( max_score > 0 ) )		2147079	14					
ANR	2147346	Condition	( new_rot < 0 ) && ( max_score > 0 )	832:6:21700:21737	2147079	0	True				
ANR	2147347	AndExpression	( new_rot < 0 ) && ( max_score > 0 )		2147079	0		&&			
ANR	2147348	RelationalExpression	new_rot < 0		2147079	0		<			
ANR	2147349	Identifier	new_rot		2147079	0					
ANR	2147350	PrimaryExpression	0		2147079	1					
ANR	2147351	RelationalExpression	max_score > 0		2147079	1		>			
ANR	2147352	Identifier	max_score		2147079	0					
ANR	2147353	PrimaryExpression	0		2147079	1					
ANR	2147354	CompoundStatement		61:48:1656:1656	2147079	1					
ANR	2147355	IfStatement	if ( restore )		2147079	0					
ANR	2147356	Condition	restore	833:7:21751:21757	2147079	0	True				
ANR	2147357	Identifier	restore		2147079	0					
ANR	2147358	CompoundStatement		62:17:1675:1675	2147079	1					
ANR	2147359	ReturnStatement	return ULOG_MISSED_EVENT ;	834:3:21766:21790	2147079	0	True				
ANR	2147360	Identifier	ULOG_MISSED_EVENT		2147079	0					
ANR	2147361	ExpressionStatement	new_rot = max_score_rot	836:2:21798:21821	2147079	1	True				
ANR	2147362	AssignmentExpression	new_rot = max_score_rot		2147079	0		=			
ANR	2147363	Identifier	new_rot		2147079	0					
ANR	2147364	Identifier	max_score_rot		2147079	1					
ANR	2147365	IfStatement	if ( new_rot >= 0 )		2147079	15					
ANR	2147366	Condition	new_rot >= 0	840:6:21889:21900	2147079	0	True				
ANR	2147367	RelationalExpression	new_rot >= 0		2147079	0		>=			
ANR	2147368	Identifier	new_rot		2147079	0					
ANR	2147369	PrimaryExpression	0		2147079	1					
ANR	2147370	CompoundStatement		69:21:1818:1818	2147079	1					
ANR	2147371	IfStatement	if ( m_state -> Rotation ( new_rot ) )		2147079	0					
ANR	2147372	Condition	m_state -> Rotation ( new_rot )	841:7:21913:21940	2147079	0	True				
ANR	2147373	CallExpression	m_state -> Rotation ( new_rot )		2147079	0					
ANR	2147374	Callee	m_state -> Rotation		2147079	0					
ANR	2147375	PtrMemberAccess	m_state -> Rotation		2147079	0					
ANR	2147376	Identifier	m_state		2147079	0					
ANR	2147377	Identifier	Rotation		2147079	1					
ANR	2147378	ArgumentList	new_rot		2147079	1					
ANR	2147379	Argument	new_rot		2147079	0					
ANR	2147380	Identifier	new_rot		2147079	0					
ANR	2147381	CompoundStatement		70:38:1858:1858	2147079	1					
ANR	2147382	ExpressionStatement	"Error ( LOG_ERROR_FILE_NOT_FOUND , __LINE__ )"	842:3:21949:21992	2147079	0	True				
ANR	2147383	CallExpression	"Error ( LOG_ERROR_FILE_NOT_FOUND , __LINE__ )"		2147079	0					
ANR	2147384	Callee	Error		2147079	0					
ANR	2147385	Identifier	Error		2147079	0					
ANR	2147386	ArgumentList	LOG_ERROR_FILE_NOT_FOUND		2147079	1					
ANR	2147387	Argument	LOG_ERROR_FILE_NOT_FOUND		2147079	0					
ANR	2147388	Identifier	LOG_ERROR_FILE_NOT_FOUND		2147079	0					
ANR	2147389	Argument	__LINE__		2147079	1					
ANR	2147390	Identifier	__LINE__		2147079	0					
ANR	2147391	ReturnStatement	return ULOG_RD_ERROR ;	843:3:21997:22017	2147079	1	True				
ANR	2147392	Identifier	ULOG_RD_ERROR		2147079	0					
ANR	2147393	ReturnStatement	return OpenLogFile ( true ) ;	845:2:22025:22051	2147079	1	True				
ANR	2147394	CallExpression	OpenLogFile ( true )		2147079	0					
ANR	2147395	Callee	OpenLogFile		2147079	0					
ANR	2147396	Identifier	OpenLogFile		2147079	0					
ANR	2147397	ArgumentList	true		2147079	1					
ANR	2147398	Argument	true		2147079	0					
ANR	2147399	Identifier	true		2147079	0					
ANR	2147400	ExpressionStatement	m_state -> Reset ( )	849:1:22098:22115	2147079	16	True				
ANR	2147401	CallExpression	m_state -> Reset ( )		2147079	0					
ANR	2147402	Callee	m_state -> Reset		2147079	0					
ANR	2147403	PtrMemberAccess	m_state -> Reset		2147079	0					
ANR	2147404	Identifier	m_state		2147079	0					
ANR	2147405	Identifier	Reset		2147079	1					
ANR	2147406	ArgumentList			2147079	1					
ANR	2147407	ReturnStatement	return ULOG_MISSED_EVENT ;	850:1:22160:22184	2147079	17	True				
ANR	2147408	Identifier	ULOG_MISSED_EVENT		2147079	0					
ANR	2147409	ReturnType	ULogEventOutcome		2147079	1					
ANR	2147410	Identifier	ReadUserLog :: ReopenLogFile		2147079	2					
ANR	2147411	ParameterList	bool restore		2147079	3					
ANR	2147412	Parameter	bool restore	771:28:20070:20081	2147079	0	True				
ANR	2147413	ParameterType	bool		2147079	0					
ANR	2147414	Identifier	restore		2147079	1					
ANR	2147415	CFGEntryNode	ENTRY		2147079		True				
ANR	2147416	CFGExitNode	EXIT		2147079		True				
ANR	2147417	Symbol	FindPrevFile		2147079						
ANR	2147418	Symbol	ULOG_NO_EVENT		2147079						
ANR	2147419	Symbol	* rot		2147079						
ANR	2147420	Symbol	ReadUserLogMatch :: UNKNOWN		2147079						
ANR	2147421	Symbol	scores		2147079						
ANR	2147422	Symbol	* m_state		2147079						
ANR	2147423	Symbol	ULOG_RD_ERROR		2147079						
ANR	2147424	Symbol	ReadUserLogMatch :: MATCH_ERROR		2147079						
ANR	2147425	Symbol	* scores		2147079						
ANR	2147426	Symbol	* m_match		2147079						
ANR	2147427	Symbol	m_match -> Match		2147079						
ANR	2147428	Symbol	OpenLogFile		2147079						
ANR	2147429	Symbol	m_state -> Rotation		2147079						
ANR	2147430	Symbol	result		2147079						
ANR	2147431	Symbol	m_state		2147079						
ANR	2147432	Symbol	score		2147079						
ANR	2147433	Symbol	ReadUserLogMatch :: MATCH		2147079						
ANR	2147434	Symbol	& score		2147079						
ANR	2147435	Symbol	rot		2147079						
ANR	2147436	Symbol	m_max_rotations		2147079						
ANR	2147437	Symbol	thresh		2147079						
ANR	2147438	Symbol	m_match		2147079						
ANR	2147439	Symbol	SCORE_THRESH_RESTORE		2147079						
ANR	2147440	Symbol	restore		2147079						
ANR	2147441	Symbol	false		2147079						
ANR	2147442	Symbol	start		2147079						
ANR	2147443	Symbol	D_FULLDEBUG		2147079						
ANR	2147444	Symbol	__LINE__		2147079						
ANR	2147445	Symbol	m_fp		2147079						
ANR	2147446	Symbol	m_handle_rot		2147079						
ANR	2147447	Symbol	ULOG_OK		2147079						
ANR	2147448	Symbol	max_score		2147079						
ANR	2147449	Symbol	max_score_rot		2147079						
ANR	2147450	Symbol	true		2147079						
ANR	2147451	Symbol	new_rot		2147079						
ANR	2147452	Symbol	m_state -> IsValid		2147079						
ANR	2147453	Symbol	SCORE_THRESH_FWSEARCH		2147079						
ANR	2147454	Symbol	LOG_ERROR_FILE_NOT_FOUND		2147079						
ANR	2147455	Symbol	ULOG_MISSED_EVENT		2147079						
ANR	2147456	Function	ReadUserLog :: readEvent	853:0:22189:22287							
ANR	2147457	FunctionDef	ReadUserLog :: readEvent (ULogEvent * & event)		2147456	0					
ANR	2147458	CompoundStatement		855:0:22251:22287	2147456	0					
ANR	2147459	ReturnStatement	"return readEvent ( event , true ) ;"	856:1:22254:22285	2147456	0	True				
ANR	2147460	CallExpression	"readEvent ( event , true )"		2147456	0					
ANR	2147461	Callee	readEvent		2147456	0					
ANR	2147462	Identifier	readEvent		2147456	0					
ANR	2147463	ArgumentList	event		2147456	1					
ANR	2147464	Argument	event		2147456	0					
ANR	2147465	Identifier	event		2147456	0					
ANR	2147466	Argument	true		2147456	1					
ANR	2147467	Identifier	true		2147456	0					
ANR	2147468	ReturnType	ULogEventOutcome		2147456	1					
ANR	2147469	Identifier	ReadUserLog :: readEvent		2147456	2					
ANR	2147470	ParameterList	ULogEvent * & event		2147456	3					
ANR	2147471	Parameter	ULogEvent * & event	854:24:22230:22247	2147456	0	True				
ANR	2147472	ParameterType	ULogEvent * &		2147456	0					
ANR	2147473	Identifier	event		2147456	1					
ANR	2147474	CFGEntryNode	ENTRY		2147456		True				
ANR	2147475	CFGExitNode	EXIT		2147456		True				
ANR	2147476	Symbol	readEvent		2147456						
ANR	2147477	Symbol	true		2147456						
ANR	2147478	Symbol	event		2147456						
ANR	2147479	Function	ReadUserLog :: readEvent	859:0:22290:25988							
ANR	2147480	FunctionDef	"ReadUserLog :: readEvent (ULogEvent * & event , bool store_state)"		2147479	0					
ANR	2147481	CompoundStatement		861:0:22370:25988	2147479	0					
ANR	2147482	IfStatement	if ( ! m_initialized )		2147479	0					
ANR	2147483	Condition	! m_initialized	862:6:22378:22391	2147479	0	True				
ANR	2147484	UnaryOperationExpression	! m_initialized		2147479	0					
ANR	2147485	UnaryOperator	!		2147479	0					
ANR	2147486	Identifier	m_initialized		2147479	1					
ANR	2147487	CompoundStatement		2:23:24:24	2147479	1					
ANR	2147488	ExpressionStatement	"Error ( LOG_ERROR_NOT_INITIALIZED , __LINE__ )"	863:2:22399:22443	2147479	0	True				
ANR	2147489	CallExpression	"Error ( LOG_ERROR_NOT_INITIALIZED , __LINE__ )"		2147479	0					
ANR	2147490	Callee	Error		2147479	0					
ANR	2147491	Identifier	Error		2147479	0					
ANR	2147492	ArgumentList	LOG_ERROR_NOT_INITIALIZED		2147479	1					
ANR	2147493	Argument	LOG_ERROR_NOT_INITIALIZED		2147479	0					
ANR	2147494	Identifier	LOG_ERROR_NOT_INITIALIZED		2147479	0					
ANR	2147495	Argument	__LINE__		2147479	1					
ANR	2147496	Identifier	__LINE__		2147479	0					
ANR	2147497	ReturnStatement	return ULOG_RD_ERROR ;	864:2:22447:22467	2147479	1	True				
ANR	2147498	Identifier	ULOG_RD_ERROR		2147479	0					
ANR	2147499	IfStatement	if ( m_missed_event )		2147479	1					
ANR	2147500	Condition	m_missed_event	870:6:22658:22671	2147479	0	True				
ANR	2147501	Identifier	m_missed_event		2147479	0					
ANR	2147502	CompoundStatement		10:23:304:304	2147479	1					
ANR	2147503	ExpressionStatement	m_missed_event = false	871:2:22679:22701	2147479	0	True				
ANR	2147504	AssignmentExpression	m_missed_event = false		2147479	0		=			
ANR	2147505	Identifier	m_missed_event		2147479	0					
ANR	2147506	Identifier	false		2147479	1					
ANR	2147507	ReturnStatement	return ULOG_MISSED_EVENT ;	872:2:22705:22729	2147479	1	True				
ANR	2147508	Identifier	ULOG_MISSED_EVENT		2147479	0					
ANR	2147509	IdentifierDeclStatement	int starting_seq = m_state -> Sequence ( ) ;	875:1:22736:22775	2147479	2	True				
ANR	2147510	IdentifierDecl	starting_seq = m_state -> Sequence ( )		2147479	0					
ANR	2147511	IdentifierDeclType	int		2147479	0					
ANR	2147512	Identifier	starting_seq		2147479	1					
ANR	2147513	AssignmentExpression	starting_seq = m_state -> Sequence ( )		2147479	2		=			
ANR	2147514	Identifier	starting_seq		2147479	0					
ANR	2147515	CallExpression	m_state -> Sequence ( )		2147479	1					
ANR	2147516	Callee	m_state -> Sequence		2147479	0					
ANR	2147517	PtrMemberAccess	m_state -> Sequence		2147479	0					
ANR	2147518	Identifier	m_state		2147479	0					
ANR	2147519	Identifier	Sequence		2147479	1					
ANR	2147520	ArgumentList			2147479	1					
ANR	2147521	IdentifierDeclStatement	int starting_event = ( int ) m_state -> EventNum ( ) ;	876:1:22778:22825	2147479	3	True				
ANR	2147522	IdentifierDecl	starting_event = ( int ) m_state -> EventNum ( )		2147479	0					
ANR	2147523	IdentifierDeclType	int		2147479	0					
ANR	2147524	Identifier	starting_event		2147479	1					
ANR	2147525	AssignmentExpression	starting_event = ( int ) m_state -> EventNum ( )		2147479	2		=			
ANR	2147526	Identifier	starting_event		2147479	0					
ANR	2147527	CastExpression	( int ) m_state -> EventNum ( )		2147479	1					
ANR	2147528	CastTarget	int		2147479	0					
ANR	2147529	CallExpression	m_state -> EventNum ( )		2147479	1					
ANR	2147530	Callee	m_state -> EventNum		2147479	0					
ANR	2147531	PtrMemberAccess	m_state -> EventNum		2147479	0					
ANR	2147532	Identifier	m_state		2147479	0					
ANR	2147533	Identifier	EventNum		2147479	1					
ANR	2147534	ArgumentList			2147479	1					
ANR	2147535	IdentifierDeclStatement	filesize_t starting_recno = m_state -> LogRecordNo ( ) ;	877:1:22828:22878	2147479	4	True				
ANR	2147536	IdentifierDecl	starting_recno = m_state -> LogRecordNo ( )		2147479	0					
ANR	2147537	IdentifierDeclType	filesize_t		2147479	0					
ANR	2147538	Identifier	starting_recno		2147479	1					
ANR	2147539	AssignmentExpression	starting_recno = m_state -> LogRecordNo ( )		2147479	2		=			
ANR	2147540	Identifier	starting_recno		2147479	0					
ANR	2147541	CallExpression	m_state -> LogRecordNo ( )		2147479	1					
ANR	2147542	Callee	m_state -> LogRecordNo		2147479	0					
ANR	2147543	PtrMemberAccess	m_state -> LogRecordNo		2147479	0					
ANR	2147544	Identifier	m_state		2147479	0					
ANR	2147545	Identifier	LogRecordNo		2147479	1					
ANR	2147546	ArgumentList			2147479	1					
ANR	2147547	IfStatement	if ( ! m_fp )		2147479	5					
ANR	2147548	Condition	! m_fp	881:6:22939:22943	2147479	0	True				
ANR	2147549	UnaryOperationExpression	! m_fp		2147479	0					
ANR	2147550	UnaryOperator	!		2147479	0					
ANR	2147551	Identifier	m_fp		2147479	1					
ANR	2147552	CompoundStatement		22:2:580:622	2147479	1					
ANR	2147553	IdentifierDeclStatement	ULogEventOutcome status = ReopenLogFile ( ) ;	882:2:22951:22993	2147479	0	True				
ANR	2147554	IdentifierDecl	status = ReopenLogFile ( )		2147479	0					
ANR	2147555	IdentifierDeclType	ULogEventOutcome		2147479	0					
ANR	2147556	Identifier	status		2147479	1					
ANR	2147557	AssignmentExpression	status = ReopenLogFile ( )		2147479	2		=			
ANR	2147558	Identifier	status		2147479	0					
ANR	2147559	CallExpression	ReopenLogFile ( )		2147479	1					
ANR	2147560	Callee	ReopenLogFile		2147479	0					
ANR	2147561	Identifier	ReopenLogFile		2147479	0					
ANR	2147562	ArgumentList			2147479	1					
ANR	2147563	IfStatement	if ( ULOG_OK != status )		2147479	1					
ANR	2147564	Condition	ULOG_OK != status	883:7:23002:23018	2147479	0	True				
ANR	2147565	EqualityExpression	ULOG_OK != status		2147479	0		!=			
ANR	2147566	Identifier	ULOG_OK		2147479	0					
ANR	2147567	Identifier	status		2147479	1					
ANR	2147568	CompoundStatement		23:27:651:651	2147479	1					
ANR	2147569	ReturnStatement	return status ;	884:3:23027:23040	2147479	0	True				
ANR	2147570	Identifier	status		2147479	0					
ANR	2147571	IfStatement	if ( ! m_fp )		2147479	6					
ANR	2147572	Condition	! m_fp	888:6:23056:23060	2147479	0	True				
ANR	2147573	UnaryOperationExpression	! m_fp		2147479	0					
ANR	2147574	UnaryOperator	!		2147479	0					
ANR	2147575	Identifier	m_fp		2147479	1					
ANR	2147576	CompoundStatement		28:14:693:693	2147479	1					
ANR	2147577	ReturnStatement	return ULOG_NO_EVENT ;	889:2:23068:23088	2147479	0	True				
ANR	2147578	Identifier	ULOG_NO_EVENT		2147479	0					
ANR	2147579	IfStatement	if ( feof ( m_fp ) )		2147479	7					
ANR	2147580	Condition	feof ( m_fp )	901:6:23606:23615	2147479	0	True				
ANR	2147581	CallExpression	feof ( m_fp )		2147479	0					
ANR	2147582	Callee	feof		2147479	0					
ANR	2147583	Identifier	feof		2147479	0					
ANR	2147584	ArgumentList	m_fp		2147479	1					
ANR	2147585	Argument	m_fp		2147479	0					
ANR	2147586	Identifier	m_fp		2147479	0					
ANR	2147587	CompoundStatement		41:19:1248:1248	2147479	1					
ANR	2147588	ExpressionStatement	clearerr ( m_fp )	902:2:23623:23637	2147479	0	True				
ANR	2147589	CallExpression	clearerr ( m_fp )		2147479	0					
ANR	2147590	Callee	clearerr		2147479	0					
ANR	2147591	Identifier	clearerr		2147479	0					
ANR	2147592	ArgumentList	m_fp		2147479	1					
ANR	2147593	Argument	m_fp		2147479	0					
ANR	2147594	Identifier	m_fp		2147479	0					
ANR	2147595	IdentifierDeclStatement	ULogEventOutcome outcome = ULOG_OK ;	905:1:23645:23679	2147479	8	True				
ANR	2147596	IdentifierDecl	outcome = ULOG_OK		2147479	0					
ANR	2147597	IdentifierDeclType	ULogEventOutcome		2147479	0					
ANR	2147598	Identifier	outcome		2147479	1					
ANR	2147599	AssignmentExpression	outcome = ULOG_OK		2147479	2		=			
ANR	2147600	Identifier	ULOG_OK		2147479	0					
ANR	2147601	Identifier	ULOG_OK		2147479	1					
ANR	2147602	IdentifierDeclStatement	bool try_again = false ;	906:1:23682:23704	2147479	9	True				
ANR	2147603	IdentifierDecl	try_again = false		2147479	0					
ANR	2147604	IdentifierDeclType	bool		2147479	0					
ANR	2147605	Identifier	try_again		2147479	1					
ANR	2147606	AssignmentExpression	try_again = false		2147479	2		=			
ANR	2147607	Identifier	false		2147479	0					
ANR	2147608	Identifier	false		2147479	1					
ANR	2147609	IfStatement	if ( m_state -> IsLogType ( ReadUserLogState :: LOG_TYPE_UNKNOWN ) )		2147479	10					
ANR	2147610	Condition	m_state -> IsLogType ( ReadUserLogState :: LOG_TYPE_UNKNOWN )	907:5:23711:23766	2147479	0	True				
ANR	2147611	CallExpression	m_state -> IsLogType ( ReadUserLogState :: LOG_TYPE_UNKNOWN )		2147479	0					
ANR	2147612	Callee	m_state -> IsLogType		2147479	0					
ANR	2147613	PtrMemberAccess	m_state -> IsLogType		2147479	0					
ANR	2147614	Identifier	m_state		2147479	0					
ANR	2147615	Identifier	IsLogType		2147479	1					
ANR	2147616	ArgumentList	ReadUserLogState :: LOG_TYPE_UNKNOWN		2147479	1					
ANR	2147617	Argument	ReadUserLogState :: LOG_TYPE_UNKNOWN		2147479	0					
ANR	2147618	Identifier	ReadUserLogState :: LOG_TYPE_UNKNOWN		2147479	0					
ANR	2147619	CompoundStatement		47:64:1399:1399	2147479	1					
ANR	2147620	IfStatement	if ( ! determineLogType ( ) )		2147479	0					
ANR	2147621	Condition	! determineLogType ( )	908:9:23781:23799	2147479	0	True				
ANR	2147622	UnaryOperationExpression	! determineLogType ( )		2147479	0					
ANR	2147623	UnaryOperator	!		2147479	0					
ANR	2147624	CallExpression	determineLogType ( )		2147479	1					
ANR	2147625	Callee	determineLogType		2147479	0					
ANR	2147626	Identifier	determineLogType		2147479	0					
ANR	2147627	ArgumentList			2147479	1					
ANR	2147628	CompoundStatement		48:31:1432:1432	2147479	1					
ANR	2147629	ExpressionStatement	outcome = ULOG_RD_ERROR	909:3:23808:23831	2147479	0	True				
ANR	2147630	AssignmentExpression	outcome = ULOG_RD_ERROR		2147479	0		=			
ANR	2147631	Identifier	outcome		2147479	0					
ANR	2147632	Identifier	ULOG_RD_ERROR		2147479	1					
ANR	2147633	ExpressionStatement	"Error ( LOG_ERROR_FILE_OTHER , __LINE__ )"	910:3:23836:23875	2147479	1	True				
ANR	2147634	CallExpression	"Error ( LOG_ERROR_FILE_OTHER , __LINE__ )"		2147479	0					
ANR	2147635	Callee	Error		2147479	0					
ANR	2147636	Identifier	Error		2147479	0					
ANR	2147637	ArgumentList	LOG_ERROR_FILE_OTHER		2147479	1					
ANR	2147638	Argument	LOG_ERROR_FILE_OTHER		2147479	0					
ANR	2147639	Identifier	LOG_ERROR_FILE_OTHER		2147479	0					
ANR	2147640	Argument	__LINE__		2147479	1					
ANR	2147641	Identifier	__LINE__		2147479	0					
ANR	2147642	GotoStatement	goto CLEANUP ;	911:3:23880:23892	2147479	2	True				
ANR	2147643	Identifier	CLEANUP		2147479	0					
ANR	2147644	ExpressionStatement	"outcome = readEvent ( event , & try_again )"	916:1:23963:24003	2147479	11	True				
ANR	2147645	AssignmentExpression	"outcome = readEvent ( event , & try_again )"		2147479	0		=			
ANR	2147646	Identifier	outcome		2147479	0					
ANR	2147647	CallExpression	"readEvent ( event , & try_again )"		2147479	1					
ANR	2147648	Callee	readEvent		2147479	0					
ANR	2147649	Identifier	readEvent		2147479	0					
ANR	2147650	ArgumentList	event		2147479	1					
ANR	2147651	Argument	event		2147479	0					
ANR	2147652	Identifier	event		2147479	0					
ANR	2147653	Argument	& try_again		2147479	1					
ANR	2147654	UnaryOperationExpression	& try_again		2147479	0					
ANR	2147655	UnaryOperator	&		2147479	0					
ANR	2147656	Identifier	try_again		2147479	1					
ANR	2147657	IfStatement	if ( ! m_handle_rot )		2147479	12					
ANR	2147658	Condition	! m_handle_rot	917:6:24011:24024	2147479	0	True				
ANR	2147659	UnaryOperationExpression	! m_handle_rot		2147479	0					
ANR	2147660	UnaryOperator	!		2147479	0					
ANR	2147661	Identifier	m_handle_rot		2147479	1					
ANR	2147662	CompoundStatement		57:23:1657:1657	2147479	1					
ANR	2147663	ExpressionStatement	try_again = false	918:2:24032:24049	2147479	0	True				
ANR	2147664	AssignmentExpression	try_again = false		2147479	0		=			
ANR	2147665	Identifier	try_again		2147479	0					
ANR	2147666	Identifier	false		2147479	1					
ANR	2147667	IfStatement	if ( try_again )		2147479	13					
ANR	2147668	Condition	try_again	922:6:24123:24131	2147479	0	True				
ANR	2147669	Identifier	try_again		2147479	0					
ANR	2147670	CompoundStatement		62:18:1764:1764	2147479	1					
ANR	2147671	IfStatement	if ( m_state -> Rotation ( ) < 0 )		2147479	0					
ANR	2147672	Condition	m_state -> Rotation ( ) < 0	926:7:24247:24269	2147479	0	True				
ANR	2147673	RelationalExpression	m_state -> Rotation ( ) < 0		2147479	0		<			
ANR	2147674	CallExpression	m_state -> Rotation ( )		2147479	0					
ANR	2147675	Callee	m_state -> Rotation		2147479	0					
ANR	2147676	PtrMemberAccess	m_state -> Rotation		2147479	0					
ANR	2147677	Identifier	m_state		2147479	0					
ANR	2147678	Identifier	Rotation		2147479	1					
ANR	2147679	ArgumentList			2147479	1					
ANR	2147680	PrimaryExpression	0		2147479	1					
ANR	2147681	CompoundStatement		66:33:1902:1902	2147479	1					
ANR	2147682	ReturnStatement	return ULOG_MISSED_EVENT ;	927:3:24278:24302	2147479	0	True				
ANR	2147683	Identifier	ULOG_MISSED_EVENT		2147479	0					
ANR	2147684	ElseStatement	else		2147479	0					
ANR	2147685	IfStatement	if ( m_state -> Rotation ( ) == 0 )		2147479	0					
ANR	2147686	Condition	m_state -> Rotation ( ) == 0	932:12:24414:24437	2147479	0	True				
ANR	2147687	EqualityExpression	m_state -> Rotation ( ) == 0		2147479	0		==			
ANR	2147688	CallExpression	m_state -> Rotation ( )		2147479	0					
ANR	2147689	Callee	m_state -> Rotation		2147479	0					
ANR	2147690	PtrMemberAccess	m_state -> Rotation		2147479	0					
ANR	2147691	Identifier	m_state		2147479	0					
ANR	2147692	Identifier	Rotation		2147479	1					
ANR	2147693	ArgumentList			2147479	1					
ANR	2147694	PrimaryExpression	0		2147479	1					
ANR	2147695	CompoundStatement		74:3:2092:2128	2147479	1					
ANR	2147696	IdentifierDeclStatement	ReadUserLogMatch :: MatchResult result ;	934:3:24463:24499	2147479	0	True				
ANR	2147697	IdentifierDecl	result		2147479	0					
ANR	2147698	IdentifierDeclType	ReadUserLogMatch :: MatchResult		2147479	0					
ANR	2147699	Identifier	result		2147479	1					
ANR	2147700	ExpressionStatement	"result = m_match -> Match ( m_state -> CurPath ( ) , m_state -> Rotation ( ) , SCORE_THRESH_NONROT )"	935:3:24504:24611	2147479	1	True				
ANR	2147701	AssignmentExpression	"result = m_match -> Match ( m_state -> CurPath ( ) , m_state -> Rotation ( ) , SCORE_THRESH_NONROT )"		2147479	0		=			
ANR	2147702	Identifier	result		2147479	0					
ANR	2147703	CallExpression	"m_match -> Match ( m_state -> CurPath ( ) , m_state -> Rotation ( ) , SCORE_THRESH_NONROT )"		2147479	1					
ANR	2147704	Callee	m_match -> Match		2147479	0					
ANR	2147705	PtrMemberAccess	m_match -> Match		2147479	0					
ANR	2147706	Identifier	m_match		2147479	0					
ANR	2147707	Identifier	Match		2147479	1					
ANR	2147708	ArgumentList	m_state -> CurPath ( )		2147479	1					
ANR	2147709	Argument	m_state -> CurPath ( )		2147479	0					
ANR	2147710	CallExpression	m_state -> CurPath ( )		2147479	0					
ANR	2147711	Callee	m_state -> CurPath		2147479	0					
ANR	2147712	PtrMemberAccess	m_state -> CurPath		2147479	0					
ANR	2147713	Identifier	m_state		2147479	0					
ANR	2147714	Identifier	CurPath		2147479	1					
ANR	2147715	ArgumentList			2147479	1					
ANR	2147716	Argument	m_state -> Rotation ( )		2147479	1					
ANR	2147717	CallExpression	m_state -> Rotation ( )		2147479	0					
ANR	2147718	Callee	m_state -> Rotation		2147479	0					
ANR	2147719	PtrMemberAccess	m_state -> Rotation		2147479	0					
ANR	2147720	Identifier	m_state		2147479	0					
ANR	2147721	Identifier	Rotation		2147479	1					
ANR	2147722	ArgumentList			2147479	1					
ANR	2147723	Argument	SCORE_THRESH_NONROT		2147479	2					
ANR	2147724	Identifier	SCORE_THRESH_NONROT		2147479	0					
ANR	2147725	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""readEvent: checking to see if file (%s) matches: %s\\n"" , m_state -> CurPath ( ) , m_match -> MatchStr ( result ) )"	938:3:24616:24754	2147479	2	True				
ANR	2147726	CallExpression	"dprintf ( D_FULLDEBUG , ""readEvent: checking to see if file (%s) matches: %s\\n"" , m_state -> CurPath ( ) , m_match -> MatchStr ( result ) )"		2147479	0					
ANR	2147727	Callee	dprintf		2147479	0					
ANR	2147728	Identifier	dprintf		2147479	0					
ANR	2147729	ArgumentList	D_FULLDEBUG		2147479	1					
ANR	2147730	Argument	D_FULLDEBUG		2147479	0					
ANR	2147731	Identifier	D_FULLDEBUG		2147479	0					
ANR	2147732	Argument	"""readEvent: checking to see if file (%s) matches: %s\\n"""		2147479	1					
ANR	2147733	PrimaryExpression	"""readEvent: checking to see if file (%s) matches: %s\\n"""		2147479	0					
ANR	2147734	Argument	m_state -> CurPath ( )		2147479	2					
ANR	2147735	CallExpression	m_state -> CurPath ( )		2147479	0					
ANR	2147736	Callee	m_state -> CurPath		2147479	0					
ANR	2147737	PtrMemberAccess	m_state -> CurPath		2147479	0					
ANR	2147738	Identifier	m_state		2147479	0					
ANR	2147739	Identifier	CurPath		2147479	1					
ANR	2147740	ArgumentList			2147479	1					
ANR	2147741	Argument	m_match -> MatchStr ( result )		2147479	3					
ANR	2147742	CallExpression	m_match -> MatchStr ( result )		2147479	0					
ANR	2147743	Callee	m_match -> MatchStr		2147479	0					
ANR	2147744	PtrMemberAccess	m_match -> MatchStr		2147479	0					
ANR	2147745	Identifier	m_match		2147479	0					
ANR	2147746	Identifier	MatchStr		2147479	1					
ANR	2147747	ArgumentList	result		2147479	1					
ANR	2147748	Argument	result		2147479	0					
ANR	2147749	Identifier	result		2147479	0					
ANR	2147750	IfStatement	if ( result == ReadUserLogMatch :: NOMATCH )		2147479	3					
ANR	2147751	Condition	result == ReadUserLogMatch :: NOMATCH	941:8:24764:24798	2147479	0	True				
ANR	2147752	EqualityExpression	result == ReadUserLogMatch :: NOMATCH		2147479	0		==			
ANR	2147753	Identifier	result		2147479	0					
ANR	2147754	Identifier	ReadUserLogMatch :: NOMATCH		2147479	1					
ANR	2147755	CompoundStatement		81:46:2431:2431	2147479	1					
ANR	2147756	ExpressionStatement	CloseLogFile ( true )	942:4:24808:24828	2147479	0	True				
ANR	2147757	CallExpression	CloseLogFile ( true )		2147479	0					
ANR	2147758	Callee	CloseLogFile		2147479	0					
ANR	2147759	Identifier	CloseLogFile		2147479	0					
ANR	2147760	ArgumentList	true		2147479	1					
ANR	2147761	Argument	true		2147479	0					
ANR	2147762	Identifier	true		2147479	0					
ANR	2147763	ElseStatement	else		2147479	0					
ANR	2147764	CompoundStatement		84:8:2472:2472	2147479	0					
ANR	2147765	ExpressionStatement	try_again = false	945:4:24849:24866	2147479	0	True				
ANR	2147766	AssignmentExpression	try_again = false		2147479	0		=			
ANR	2147767	Identifier	try_again		2147479	0					
ANR	2147768	Identifier	false		2147479	1					
ANR	2147769	ElseStatement	else		2147479	0					
ANR	2147770	CompoundStatement		93:3:2603:2664	2147479	0					
ANR	2147771	ExpressionStatement	CloseLogFile ( true )	951:3:24948:24968	2147479	0	True				
ANR	2147772	CallExpression	CloseLogFile ( true )		2147479	0					
ANR	2147773	Callee	CloseLogFile		2147479	0					
ANR	2147774	Identifier	CloseLogFile		2147479	0					
ANR	2147775	ArgumentList	true		2147479	1					
ANR	2147776	Argument	true		2147479	0					
ANR	2147777	Identifier	true		2147479	0					
ANR	2147778	IdentifierDeclStatement	"bool found = FindPrevFile ( m_state -> Rotation ( ) - 1 , 1 , true ) ;"	953:3:24974:25035	2147479	1	True				
ANR	2147779	IdentifierDecl	"found = FindPrevFile ( m_state -> Rotation ( ) - 1 , 1 , true )"		2147479	0					
ANR	2147780	IdentifierDeclType	bool		2147479	0					
ANR	2147781	Identifier	found		2147479	1					
ANR	2147782	AssignmentExpression	"found = FindPrevFile ( m_state -> Rotation ( ) - 1 , 1 , true )"		2147479	2		=			
ANR	2147783	Identifier	found		2147479	0					
ANR	2147784	CallExpression	"FindPrevFile ( m_state -> Rotation ( ) - 1 , 1 , true )"		2147479	1					
ANR	2147785	Callee	FindPrevFile		2147479	0					
ANR	2147786	Identifier	FindPrevFile		2147479	0					
ANR	2147787	ArgumentList	m_state -> Rotation ( ) - 1		2147479	1					
ANR	2147788	Argument	m_state -> Rotation ( ) - 1		2147479	0					
ANR	2147789	AdditiveExpression	m_state -> Rotation ( ) - 1		2147479	0		-			
ANR	2147790	CallExpression	m_state -> Rotation ( )		2147479	0					
ANR	2147791	Callee	m_state -> Rotation		2147479	0					
ANR	2147792	PtrMemberAccess	m_state -> Rotation		2147479	0					
ANR	2147793	Identifier	m_state		2147479	0					
ANR	2147794	Identifier	Rotation		2147479	1					
ANR	2147795	ArgumentList			2147479	1					
ANR	2147796	PrimaryExpression	1		2147479	1					
ANR	2147797	Argument	1		2147479	1					
ANR	2147798	PrimaryExpression	1		2147479	0					
ANR	2147799	Argument	true		2147479	2					
ANR	2147800	Identifier	true		2147479	0					
ANR	2147801	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""readEvent: checking for previous file (# %d): %s\\n"" , m_state -> Rotation ( ) , found ? ""Found"" : ""Not found"" )"	954:3:25040:25180	2147479	2	True				
ANR	2147802	CallExpression	"dprintf ( D_FULLDEBUG , ""readEvent: checking for previous file (# %d): %s\\n"" , m_state -> Rotation ( ) , found ? ""Found"" : ""Not found"" )"		2147479	0					
ANR	2147803	Callee	dprintf		2147479	0					
ANR	2147804	Identifier	dprintf		2147479	0					
ANR	2147805	ArgumentList	D_FULLDEBUG		2147479	1					
ANR	2147806	Argument	D_FULLDEBUG		2147479	0					
ANR	2147807	Identifier	D_FULLDEBUG		2147479	0					
ANR	2147808	Argument	"""readEvent: checking for previous file (# %d): %s\\n"""		2147479	1					
ANR	2147809	PrimaryExpression	"""readEvent: checking for previous file (# %d): %s\\n"""		2147479	0					
ANR	2147810	Argument	m_state -> Rotation ( )		2147479	2					
ANR	2147811	CallExpression	m_state -> Rotation ( )		2147479	0					
ANR	2147812	Callee	m_state -> Rotation		2147479	0					
ANR	2147813	PtrMemberAccess	m_state -> Rotation		2147479	0					
ANR	2147814	Identifier	m_state		2147479	0					
ANR	2147815	Identifier	Rotation		2147479	1					
ANR	2147816	ArgumentList			2147479	1					
ANR	2147817	Argument	"found ? ""Found"" : ""Not found"""		2147479	3					
ANR	2147818	ConditionalExpression	"found ? ""Found"" : ""Not found"""		2147479	0					
ANR	2147819	Condition	found		2147479	0					
ANR	2147820	Identifier	found		2147479	0					
ANR	2147821	PrimaryExpression	"""Found"""		2147479	1					
ANR	2147822	PrimaryExpression	"""Not found"""		2147479	2					
ANR	2147823	IfStatement	if ( found )		2147479	3					
ANR	2147824	Condition	found	957:8:25190:25194	2147479	0	True				
ANR	2147825	Identifier	found		2147479	0					
ANR	2147826	CompoundStatement		97:16:2827:2827	2147479	1					
ANR	2147827	ExpressionStatement	CloseLogFile ( true )	958:4:25204:25224	2147479	0	True				
ANR	2147828	CallExpression	CloseLogFile ( true )		2147479	0					
ANR	2147829	Callee	CloseLogFile		2147479	0					
ANR	2147830	Identifier	CloseLogFile		2147479	0					
ANR	2147831	ArgumentList	true		2147479	1					
ANR	2147832	Argument	true		2147479	0					
ANR	2147833	Identifier	true		2147479	0					
ANR	2147834	ElseStatement	else		2147479	0					
ANR	2147835	CompoundStatement		100:8:2868:2868	2147479	0					
ANR	2147836	ExpressionStatement	try_again = false	961:4:25245:25262	2147479	0	True				
ANR	2147837	AssignmentExpression	try_again = false		2147479	0		=			
ANR	2147838	Identifier	try_again		2147479	0					
ANR	2147839	Identifier	false		2147479	1					
ANR	2147840	IfStatement	if ( try_again )		2147479	14					
ANR	2147841	Condition	try_again	967:6:25330:25338	2147479	0	True				
ANR	2147842	Identifier	try_again		2147479	0					
ANR	2147843	CompoundStatement		107:18:2971:2971	2147479	1					
ANR	2147844	ExpressionStatement	outcome = ReopenLogFile ( )	968:2:25346:25371	2147479	0	True				
ANR	2147845	AssignmentExpression	outcome = ReopenLogFile ( )		2147479	0		=			
ANR	2147846	Identifier	outcome		2147479	0					
ANR	2147847	CallExpression	ReopenLogFile ( )		2147479	1					
ANR	2147848	Callee	ReopenLogFile		2147479	0					
ANR	2147849	Identifier	ReopenLogFile		2147479	0					
ANR	2147850	ArgumentList			2147479	1					
ANR	2147851	IfStatement	if ( ULOG_OK == outcome )		2147479	1					
ANR	2147852	Condition	ULOG_OK == outcome	969:7:25380:25397	2147479	0	True				
ANR	2147853	EqualityExpression	ULOG_OK == outcome		2147479	0		==			
ANR	2147854	Identifier	ULOG_OK		2147479	0					
ANR	2147855	Identifier	outcome		2147479	1					
ANR	2147856	CompoundStatement		109:28:3030:3030	2147479	1					
ANR	2147857	ExpressionStatement	"outcome = readEvent ( event , ( bool * ) NULL )"	970:3:25406:25447	2147479	0	True				
ANR	2147858	AssignmentExpression	"outcome = readEvent ( event , ( bool * ) NULL )"		2147479	0		=			
ANR	2147859	Identifier	outcome		2147479	0					
ANR	2147860	CallExpression	"readEvent ( event , ( bool * ) NULL )"		2147479	1					
ANR	2147861	Callee	readEvent		2147479	0					
ANR	2147862	Identifier	readEvent		2147479	0					
ANR	2147863	ArgumentList	event		2147479	1					
ANR	2147864	Argument	event		2147479	0					
ANR	2147865	Identifier	event		2147479	0					
ANR	2147866	Argument	( bool * ) NULL		2147479	1					
ANR	2147867	CastExpression	( bool * ) NULL		2147479	0					
ANR	2147868	CastTarget	bool *		2147479	0					
ANR	2147869	Identifier	NULL		2147479	1					
ANR	2147870	IfStatement	if ( ( ULOG_OK == outcome ) && ( store_state ) )		2147479	15					
ANR	2147871	Condition	( ULOG_OK == outcome ) && ( store_state )	975:7:25497:25537	2147479	0	True				
ANR	2147872	AndExpression	( ULOG_OK == outcome ) && ( store_state )		2147479	0		&&			
ANR	2147873	EqualityExpression	ULOG_OK == outcome		2147479	0		==			
ANR	2147874	Identifier	ULOG_OK		2147479	0					
ANR	2147875	Identifier	outcome		2147479	1					
ANR	2147876	Identifier	store_state		2147479	1					
ANR	2147877	CompoundStatement		116:2:3176:3200	2147479	1					
ANR	2147878	IdentifierDeclStatement	long pos = ftell ( m_fp ) ;	976:2:25547:25571	2147479	0	True				
ANR	2147879	IdentifierDecl	pos = ftell ( m_fp )		2147479	0					
ANR	2147880	IdentifierDeclType	long		2147479	0					
ANR	2147881	Identifier	pos		2147479	1					
ANR	2147882	AssignmentExpression	pos = ftell ( m_fp )		2147479	2		=			
ANR	2147883	Identifier	pos		2147479	0					
ANR	2147884	CallExpression	ftell ( m_fp )		2147479	1					
ANR	2147885	Callee	ftell		2147479	0					
ANR	2147886	Identifier	ftell		2147479	0					
ANR	2147887	ArgumentList	m_fp		2147479	1					
ANR	2147888	Argument	m_fp		2147479	0					
ANR	2147889	Identifier	m_fp		2147479	0					
ANR	2147890	IfStatement	if ( pos > 0 )		2147479	1					
ANR	2147891	Condition	pos > 0	977:7:25580:25586	2147479	0	True				
ANR	2147892	RelationalExpression	pos > 0		2147479	0		>			
ANR	2147893	Identifier	pos		2147479	0					
ANR	2147894	PrimaryExpression	0		2147479	1					
ANR	2147895	CompoundStatement		117:17:3219:3219	2147479	1					
ANR	2147896	ExpressionStatement	m_state -> Offset ( pos )	978:3:25595:25617	2147479	0	True				
ANR	2147897	CallExpression	m_state -> Offset ( pos )		2147479	0					
ANR	2147898	Callee	m_state -> Offset		2147479	0					
ANR	2147899	PtrMemberAccess	m_state -> Offset		2147479	0					
ANR	2147900	Identifier	m_state		2147479	0					
ANR	2147901	Identifier	Offset		2147479	1					
ANR	2147902	ArgumentList	pos		2147479	1					
ANR	2147903	Argument	pos		2147479	0					
ANR	2147904	Identifier	pos		2147479	0					
ANR	2147905	IfStatement	if ( ( m_state -> Sequence ( ) != starting_seq ) && ( 0 == m_state -> LogRecordNo ( ) ) )		2147479	2					
ANR	2147906	Condition	( m_state -> Sequence ( ) != starting_seq ) && ( 0 == m_state -> LogRecordNo ( ) )	981:7:25631:25708	2147479	0	True				
ANR	2147907	AndExpression	( m_state -> Sequence ( ) != starting_seq ) && ( 0 == m_state -> LogRecordNo ( ) )		2147479	0		&&			
ANR	2147908	EqualityExpression	m_state -> Sequence ( ) != starting_seq		2147479	0		!=			
ANR	2147909	CallExpression	m_state -> Sequence ( )		2147479	0					
ANR	2147910	Callee	m_state -> Sequence		2147479	0					
ANR	2147911	PtrMemberAccess	m_state -> Sequence		2147479	0					
ANR	2147912	Identifier	m_state		2147479	0					
ANR	2147913	Identifier	Sequence		2147479	1					
ANR	2147914	ArgumentList			2147479	1					
ANR	2147915	Identifier	starting_seq		2147479	1					
ANR	2147916	EqualityExpression	0 == m_state -> LogRecordNo ( )		2147479	1		==			
ANR	2147917	PrimaryExpression	0		2147479	0					
ANR	2147918	CallExpression	m_state -> LogRecordNo ( )		2147479	1					
ANR	2147919	Callee	m_state -> LogRecordNo		2147479	0					
ANR	2147920	PtrMemberAccess	m_state -> LogRecordNo		2147479	0					
ANR	2147921	Identifier	m_state		2147479	0					
ANR	2147922	Identifier	LogRecordNo		2147479	1					
ANR	2147923	ArgumentList			2147479	1					
ANR	2147924	CompoundStatement		122:38:3341:3341	2147479	1					
ANR	2147925	ExpressionStatement	m_state -> LogRecordNo ( starting_recno + starting_event - 1 )	984:3:25772:25831	2147479	0	True				
ANR	2147926	CallExpression	m_state -> LogRecordNo ( starting_recno + starting_event - 1 )		2147479	0					
ANR	2147927	Callee	m_state -> LogRecordNo		2147479	0					
ANR	2147928	PtrMemberAccess	m_state -> LogRecordNo		2147479	0					
ANR	2147929	Identifier	m_state		2147479	0					
ANR	2147930	Identifier	LogRecordNo		2147479	1					
ANR	2147931	ArgumentList	starting_recno + starting_event - 1		2147479	1					
ANR	2147932	Argument	starting_recno + starting_event - 1		2147479	0					
ANR	2147933	AdditiveExpression	starting_recno + starting_event - 1		2147479	0		+			
ANR	2147934	Identifier	starting_recno		2147479	0					
ANR	2147935	AdditiveExpression	starting_event - 1		2147479	1		-			
ANR	2147936	Identifier	starting_event		2147479	0					
ANR	2147937	PrimaryExpression	1		2147479	1					
ANR	2147938	ExpressionStatement	m_state -> EventNumInc ( )	986:2:25839:25861	2147479	3	True				
ANR	2147939	CallExpression	m_state -> EventNumInc ( )		2147479	0					
ANR	2147940	Callee	m_state -> EventNumInc		2147479	0					
ANR	2147941	PtrMemberAccess	m_state -> EventNumInc		2147479	0					
ANR	2147942	Identifier	m_state		2147479	0					
ANR	2147943	Identifier	EventNumInc		2147479	1					
ANR	2147944	ArgumentList			2147479	1					
ANR	2147945	ExpressionStatement	m_state -> StatFile ( m_fd )	987:2:25865:25890	2147479	4	True				
ANR	2147946	CallExpression	m_state -> StatFile ( m_fd )		2147479	0					
ANR	2147947	Callee	m_state -> StatFile		2147479	0					
ANR	2147948	PtrMemberAccess	m_state -> StatFile		2147479	0					
ANR	2147949	Identifier	m_state		2147479	0					
ANR	2147950	Identifier	StatFile		2147479	1					
ANR	2147951	ArgumentList	m_fd		2147479	1					
ANR	2147952	Argument	m_fd		2147479	0					
ANR	2147953	Identifier	m_fd		2147479	0					
ANR	2147954	Label	CLEANUP :	991:2:25936:25943	2147479	16	True				
ANR	2147955	Identifier	CLEANUP		2147479	0					
ANR	2147956	ExpressionStatement	CloseLogFile ( false )	992:1:25946:25967	2147479	17	True				
ANR	2147957	CallExpression	CloseLogFile ( false )		2147479	0					
ANR	2147958	Callee	CloseLogFile		2147479	0					
ANR	2147959	Identifier	CloseLogFile		2147479	0					
ANR	2147960	ArgumentList	false		2147479	1					
ANR	2147961	Argument	false		2147479	0					
ANR	2147962	Identifier	false		2147479	0					
ANR	2147963	ReturnStatement	return outcome ;	994:1:25971:25985	2147479	18	True				
ANR	2147964	Identifier	outcome		2147479	0					
ANR	2147965	ReturnType	ULogEventOutcome		2147479	1					
ANR	2147966	Identifier	ReadUserLog :: readEvent		2147479	2					
ANR	2147967	ParameterList	"ULogEvent * & event , bool store_state"		2147479	3					
ANR	2147968	Parameter	ULogEvent * & event	860:24:22331:22348	2147479	0	True				
ANR	2147969	ParameterType	ULogEvent * &		2147479	0					
ANR	2147970	Identifier	event		2147479	1					
ANR	2147971	Parameter	bool store_state	860:44:22351:22366	2147479	1	True				
ANR	2147972	ParameterType	bool		2147479	0					
ANR	2147973	Identifier	store_state		2147479	1					
ANR	2147974	CFGEntryNode	ENTRY		2147479		True				
ANR	2147975	CFGExitNode	EXIT		2147479		True				
ANR	2147976	Symbol	LOG_ERROR_NOT_INITIALIZED		2147479						
ANR	2147977	Symbol	readEvent		2147479						
ANR	2147978	Symbol	m_state		2147479						
ANR	2147979	Symbol	starting_event		2147479						
ANR	2147980	Symbol	m_match		2147479						
ANR	2147981	Symbol	NULL		2147479						
ANR	2147982	Symbol	ReopenLogFile		2147479						
ANR	2147983	Symbol	D_FULLDEBUG		2147479						
ANR	2147984	Symbol	ReadUserLogMatch :: NOMATCH		2147479						
ANR	2147985	Symbol	m_handle_rot		2147479						
ANR	2147986	Symbol	true		2147479						
ANR	2147987	Symbol	& try_again		2147479						
ANR	2147988	Symbol	status		2147479						
ANR	2147989	Symbol	FindPrevFile		2147479						
ANR	2147990	Symbol	store_state		2147479						
ANR	2147991	Symbol	m_initialized		2147479						
ANR	2147992	Symbol	ULOG_NO_EVENT		2147479						
ANR	2147993	Symbol	ftell		2147479						
ANR	2147994	Symbol	m_state -> IsLogType		2147479						
ANR	2147995	Symbol	ULOG_RD_ERROR		2147479						
ANR	2147996	Symbol	* m_state		2147479						
ANR	2147997	Symbol	LOG_ERROR_FILE_OTHER		2147479						
ANR	2147998	Symbol	* m_match		2147479						
ANR	2147999	Symbol	m_state -> EventNum		2147479						
ANR	2148000	Symbol	m_match -> Match		2147479						
ANR	2148001	Symbol	SCORE_THRESH_NONROT		2147479						
ANR	2148002	Symbol	m_state -> Rotation		2147479						
ANR	2148003	Symbol	result		2147479						
ANR	2148004	Symbol	m_match -> MatchStr		2147479						
ANR	2148005	Symbol	m_state -> CurPath		2147479						
ANR	2148006	Symbol	found		2147479						
ANR	2148007	Symbol	pos		2147479						
ANR	2148008	Symbol	event		2147479						
ANR	2148009	Symbol	outcome		2147479						
ANR	2148010	Symbol	starting_seq		2147479						
ANR	2148011	Symbol	try_again		2147479						
ANR	2148012	Symbol	m_fd		2147479						
ANR	2148013	Symbol	determineLogType		2147479						
ANR	2148014	Symbol	starting_recno		2147479						
ANR	2148015	Symbol	false		2147479						
ANR	2148016	Symbol	m_missed_event		2147479						
ANR	2148017	Symbol	__LINE__		2147479						
ANR	2148018	Symbol	m_fp		2147479						
ANR	2148019	Symbol	ULOG_OK		2147479						
ANR	2148020	Symbol	m_state -> LogRecordNo		2147479						
ANR	2148021	Symbol	feof		2147479						
ANR	2148022	Symbol	m_state -> Sequence		2147479						
ANR	2148023	Symbol	ReadUserLogState :: LOG_TYPE_UNKNOWN		2147479						
ANR	2148024	Symbol	ULOG_MISSED_EVENT		2147479						
ANR	2148025	Function	ReadUserLog :: readEvent	998:0:25991:26545							
ANR	2148026	FunctionDef	"ReadUserLog :: readEvent (ULogEvent * & event , bool * try_again)"		2148025	0					
ANR	2148027	CompoundStatement		1000:0:26070:26545	2148025	0					
ANR	2148028	IdentifierDeclStatement	ULogEventOutcome outcome ;	1001:1:26073:26097	2148025	0	True				
ANR	2148029	IdentifierDecl	outcome		2148025	0					
ANR	2148030	IdentifierDeclType	ULogEventOutcome		2148025	0					
ANR	2148031	Identifier	outcome		2148025	1					
ANR	2148032	IfStatement	if ( m_state -> IsLogType ( ReadUserLogState :: LOG_TYPE_XML ) )		2148025	1					
ANR	2148033	Condition	m_state -> IsLogType ( ReadUserLogState :: LOG_TYPE_XML )	1003:5:26105:26156	2148025	0	True				
ANR	2148034	CallExpression	m_state -> IsLogType ( ReadUserLogState :: LOG_TYPE_XML )		2148025	0					
ANR	2148035	Callee	m_state -> IsLogType		2148025	0					
ANR	2148036	PtrMemberAccess	m_state -> IsLogType		2148025	0					
ANR	2148037	Identifier	m_state		2148025	0					
ANR	2148038	Identifier	IsLogType		2148025	1					
ANR	2148039	ArgumentList	ReadUserLogState :: LOG_TYPE_XML		2148025	1					
ANR	2148040	Argument	ReadUserLogState :: LOG_TYPE_XML		2148025	0					
ANR	2148041	Identifier	ReadUserLogState :: LOG_TYPE_XML		2148025	0					
ANR	2148042	CompoundStatement		4:60:89:89	2148025	1					
ANR	2148043	ExpressionStatement	outcome = readEventXML ( event )	1004:2:26164:26195	2148025	0	True				
ANR	2148044	AssignmentExpression	outcome = readEventXML ( event )		2148025	0		=			
ANR	2148045	Identifier	outcome		2148025	0					
ANR	2148046	CallExpression	readEventXML ( event )		2148025	1					
ANR	2148047	Callee	readEventXML		2148025	0					
ANR	2148048	Identifier	readEventXML		2148025	0					
ANR	2148049	ArgumentList	event		2148025	1					
ANR	2148050	Argument	event		2148025	0					
ANR	2148051	Identifier	event		2148025	0					
ANR	2148052	IfStatement	if ( try_again )		2148025	1					
ANR	2148053	Condition	try_again	1005:7:26204:26212	2148025	0	True				
ANR	2148054	Identifier	try_again		2148025	0					
ANR	2148055	CompoundStatement		6:19:145:145	2148025	1					
ANR	2148056	ExpressionStatement	* try_again = ( outcome == ULOG_NO_EVENT )	1006:3:26221:26261	2148025	0	True				
ANR	2148057	AssignmentExpression	* try_again = ( outcome == ULOG_NO_EVENT )		2148025	0		=			
ANR	2148058	UnaryOperationExpression	* try_again		2148025	0					
ANR	2148059	UnaryOperator	*		2148025	0					
ANR	2148060	Identifier	try_again		2148025	1					
ANR	2148061	EqualityExpression	outcome == ULOG_NO_EVENT		2148025	1		==			
ANR	2148062	Identifier	outcome		2148025	0					
ANR	2148063	Identifier	ULOG_NO_EVENT		2148025	1					
ANR	2148064	ElseStatement	else		2148025	0					
ANR	2148065	IfStatement	if ( m_state -> IsLogType ( ReadUserLogState :: LOG_TYPE_OLD ) )		2148025	0					
ANR	2148066	Condition	m_state -> IsLogType ( ReadUserLogState :: LOG_TYPE_OLD )	1008:12:26279:26330	2148025	0	True				
ANR	2148067	CallExpression	m_state -> IsLogType ( ReadUserLogState :: LOG_TYPE_OLD )		2148025	0					
ANR	2148068	Callee	m_state -> IsLogType		2148025	0					
ANR	2148069	PtrMemberAccess	m_state -> IsLogType		2148025	0					
ANR	2148070	Identifier	m_state		2148025	0					
ANR	2148071	Identifier	IsLogType		2148025	1					
ANR	2148072	ArgumentList	ReadUserLogState :: LOG_TYPE_OLD		2148025	1					
ANR	2148073	Argument	ReadUserLogState :: LOG_TYPE_OLD		2148025	0					
ANR	2148074	Identifier	ReadUserLogState :: LOG_TYPE_OLD		2148025	0					
ANR	2148075	CompoundStatement		9:67:263:263	2148025	1					
ANR	2148076	ExpressionStatement	outcome = readEventOld ( event )	1009:2:26338:26369	2148025	0	True				
ANR	2148077	AssignmentExpression	outcome = readEventOld ( event )		2148025	0		=			
ANR	2148078	Identifier	outcome		2148025	0					
ANR	2148079	CallExpression	readEventOld ( event )		2148025	1					
ANR	2148080	Callee	readEventOld		2148025	0					
ANR	2148081	Identifier	readEventOld		2148025	0					
ANR	2148082	ArgumentList	event		2148025	1					
ANR	2148083	Argument	event		2148025	0					
ANR	2148084	Identifier	event		2148025	0					
ANR	2148085	IfStatement	if ( try_again )		2148025	1					
ANR	2148086	Condition	try_again	1010:7:26378:26386	2148025	0	True				
ANR	2148087	Identifier	try_again		2148025	0					
ANR	2148088	CompoundStatement		11:19:319:319	2148025	1					
ANR	2148089	ExpressionStatement	* try_again = ( outcome == ULOG_NO_EVENT )	1011:3:26395:26435	2148025	0	True				
ANR	2148090	AssignmentExpression	* try_again = ( outcome == ULOG_NO_EVENT )		2148025	0		=			
ANR	2148091	UnaryOperationExpression	* try_again		2148025	0					
ANR	2148092	UnaryOperator	*		2148025	0					
ANR	2148093	Identifier	try_again		2148025	1					
ANR	2148094	EqualityExpression	outcome == ULOG_NO_EVENT		2148025	1		==			
ANR	2148095	Identifier	outcome		2148025	0					
ANR	2148096	Identifier	ULOG_NO_EVENT		2148025	1					
ANR	2148097	ElseStatement	else		2148025	0					
ANR	2148098	CompoundStatement		14:8:378:378	2148025	0					
ANR	2148099	ExpressionStatement	outcome = ULOG_NO_EVENT	1014:2:26453:26476	2148025	0	True				
ANR	2148100	AssignmentExpression	outcome = ULOG_NO_EVENT		2148025	0		=			
ANR	2148101	Identifier	outcome		2148025	0					
ANR	2148102	Identifier	ULOG_NO_EVENT		2148025	1					
ANR	2148103	IfStatement	if ( try_again )		2148025	1					
ANR	2148104	Condition	try_again	1015:7:26485:26493	2148025	0	True				
ANR	2148105	Identifier	try_again		2148025	0					
ANR	2148106	CompoundStatement		16:19:426:426	2148025	1					
ANR	2148107	ExpressionStatement	try_again = false	1016:3:26502:26519	2148025	0	True				
ANR	2148108	AssignmentExpression	try_again = false		2148025	0		=			
ANR	2148109	Identifier	try_again		2148025	0					
ANR	2148110	Identifier	false		2148025	1					
ANR	2148111	ReturnStatement	return outcome ;	1019:1:26529:26543	2148025	2	True				
ANR	2148112	Identifier	outcome		2148025	0					
ANR	2148113	ReturnType	ULogEventOutcome		2148025	1					
ANR	2148114	Identifier	ReadUserLog :: readEvent		2148025	2					
ANR	2148115	ParameterList	"ULogEvent * & event , bool * try_again"		2148025	3					
ANR	2148116	Parameter	ULogEvent * & event	999:24:26032:26049	2148025	0	True				
ANR	2148117	ParameterType	ULogEvent * &		2148025	0					
ANR	2148118	Identifier	event		2148025	1					
ANR	2148119	Parameter	bool * try_again	999:44:26052:26066	2148025	1	True				
ANR	2148120	ParameterType	bool *		2148025	0					
ANR	2148121	Identifier	try_again		2148025	1					
ANR	2148122	CFGEntryNode	ENTRY		2148025		True				
ANR	2148123	CFGExitNode	EXIT		2148025		True				
ANR	2148124	Symbol	readEventXML		2148025						
ANR	2148125	Symbol	try_again		2148025						
ANR	2148126	Symbol	ULOG_NO_EVENT		2148025						
ANR	2148127	Symbol	m_state -> IsLogType		2148025						
ANR	2148128	Symbol	* m_state		2148025						
ANR	2148129	Symbol	false		2148025						
ANR	2148130	Symbol	ReadUserLogState :: LOG_TYPE_XML		2148025						
ANR	2148131	Symbol	readEventOld		2148025						
ANR	2148132	Symbol	m_state		2148025						
ANR	2148133	Symbol	* try_again		2148025						
ANR	2148134	Symbol	ReadUserLogState :: LOG_TYPE_OLD		2148025						
ANR	2148135	Symbol	event		2148025						
ANR	2148136	Symbol	outcome		2148025						
ANR	2148137	Function	ReadUserLog :: readEventXML	1022:0:26548:27773							
ANR	2148138	FunctionDef	ReadUserLog :: readEventXML (ULogEvent * & event)		2148137	0					
ANR	2148139	CompoundStatement		1024:0:26613:27773	2148137	0					
ANR	2148140	IdentifierDeclStatement	ClassAdXMLParser xmlp ;	1025:1:26616:26637	2148137	0	True				
ANR	2148141	IdentifierDecl	xmlp		2148137	0					
ANR	2148142	IdentifierDeclType	ClassAdXMLParser		2148137	0					
ANR	2148143	Identifier	xmlp		2148137	1					
ANR	2148144	ExpressionStatement	Lock ( true )	1030:1:26801:26813	2148137	1	True				
ANR	2148145	CallExpression	Lock ( true )		2148137	0					
ANR	2148146	Callee	Lock		2148137	0					
ANR	2148147	Identifier	Lock		2148137	0					
ANR	2148148	ArgumentList	true		2148137	1					
ANR	2148149	Argument	true		2148137	0					
ANR	2148150	Identifier	true		2148137	0					
ANR	2148151	IdentifierDeclStatement	long filepos ;	1034:3:26922:26938	2148137	2	True				
ANR	2148152	IdentifierDecl	filepos		2148137	0					
ANR	2148153	IdentifierDeclType	long		2148137	0					
ANR	2148154	Identifier	filepos		2148137	1					
ANR	2148155	IfStatement	if ( ! m_fp || ( ( filepos = ftell ( m_fp ) ) == - 1L ) )		2148137	3					
ANR	2148156	Condition	! m_fp || ( ( filepos = ftell ( m_fp ) ) == - 1L )	1035:7:26947:26987	2148137	0	True				
ANR	2148157	OrExpression	! m_fp || ( ( filepos = ftell ( m_fp ) ) == - 1L )		2148137	0		||			
ANR	2148158	UnaryOperationExpression	! m_fp		2148137	0					
ANR	2148159	UnaryOperator	!		2148137	0					
ANR	2148160	Identifier	m_fp		2148137	1					
ANR	2148161	EqualityExpression	( filepos = ftell ( m_fp ) ) == - 1L		2148137	1		==			
ANR	2148162	AssignmentExpression	filepos = ftell ( m_fp )		2148137	0		=			
ANR	2148163	Identifier	filepos		2148137	0					
ANR	2148164	CallExpression	ftell ( m_fp )		2148137	1					
ANR	2148165	Callee	ftell		2148137	0					
ANR	2148166	Identifier	ftell		2148137	0					
ANR	2148167	ArgumentList	m_fp		2148137	1					
ANR	2148168	Argument	m_fp		2148137	0					
ANR	2148169	Identifier	m_fp		2148137	0					
ANR	2148170	UnaryOperationExpression	- 1L		2148137	1					
ANR	2148171	UnaryOperator	-		2148137	0					
ANR	2148172	PrimaryExpression	1L		2148137	1					
ANR	2148173	CompoundStatement		13:3:379:379	2148137	1					
ANR	2148174	ExpressionStatement	Unlock ( true )	1037:4:26999:27013	2148137	0	True				
ANR	2148175	CallExpression	Unlock ( true )		2148137	0					
ANR	2148176	Callee	Unlock		2148137	0					
ANR	2148177	Identifier	Unlock		2148137	0					
ANR	2148178	ArgumentList	true		2148137	1					
ANR	2148179	Argument	true		2148137	0					
ANR	2148180	Identifier	true		2148137	0					
ANR	2148181	ExpressionStatement	event = NULL	1038:2:27017:27029	2148137	1	True				
ANR	2148182	AssignmentExpression	event = NULL		2148137	0		=			
ANR	2148183	Identifier	event		2148137	0					
ANR	2148184	Identifier	NULL		2148137	1					
ANR	2148185	ReturnStatement	return ULOG_UNK_ERROR ;	1039:4:27035:27056	2148137	2	True				
ANR	2148186	Identifier	ULOG_UNK_ERROR		2148137	0					
ANR	2148187	IdentifierDeclStatement	ClassAd * eventad ;	1042:1:27065:27081	2148137	4	True				
ANR	2148188	IdentifierDecl	* eventad		2148137	0					
ANR	2148189	IdentifierDeclType	ClassAd *		2148137	0					
ANR	2148190	Identifier	eventad		2148137	1					
ANR	2148191	ExpressionStatement	eventad = xmlp . ParseClassAd ( m_fp )	1043:1:27084:27117	2148137	5	True				
ANR	2148192	AssignmentExpression	eventad = xmlp . ParseClassAd ( m_fp )		2148137	0		=			
ANR	2148193	Identifier	eventad		2148137	0					
ANR	2148194	CallExpression	xmlp . ParseClassAd ( m_fp )		2148137	1					
ANR	2148195	Callee	xmlp . ParseClassAd		2148137	0					
ANR	2148196	MemberAccess	xmlp . ParseClassAd		2148137	0					
ANR	2148197	Identifier	xmlp		2148137	0					
ANR	2148198	Identifier	ParseClassAd		2148137	1					
ANR	2148199	ArgumentList	m_fp		2148137	1					
ANR	2148200	Argument	m_fp		2148137	0					
ANR	2148201	Identifier	m_fp		2148137	0					
ANR	2148202	ExpressionStatement	Unlock ( true )	1045:1:27121:27135	2148137	6	True				
ANR	2148203	CallExpression	Unlock ( true )		2148137	0					
ANR	2148204	Callee	Unlock		2148137	0					
ANR	2148205	Identifier	Unlock		2148137	0					
ANR	2148206	ArgumentList	true		2148137	1					
ANR	2148207	Argument	true		2148137	0					
ANR	2148208	Identifier	true		2148137	0					
ANR	2148209	IfStatement	if ( ! eventad )		2148137	7					
ANR	2148210	Condition	! eventad	1047:5:27143:27150	2148137	0	True				
ANR	2148211	UnaryOperationExpression	! eventad		2148137	0					
ANR	2148212	UnaryOperator	!		2148137	0					
ANR	2148213	Identifier	eventad		2148137	1					
ANR	2148214	CompoundStatement		24:16:540:540	2148137	1					
ANR	2148215	IfStatement	"if ( fseek ( m_fp , filepos , SEEK_SET ) )"		2148137	0					
ANR	2148216	Condition	"fseek ( m_fp , filepos , SEEK_SET )"	1050:6:27253:27282	2148137	0	True				
ANR	2148217	CallExpression	"fseek ( m_fp , filepos , SEEK_SET )"		2148137	0					
ANR	2148218	Callee	fseek		2148137	0					
ANR	2148219	Identifier	fseek		2148137	0					
ANR	2148220	ArgumentList	m_fp		2148137	1					
ANR	2148221	Argument	m_fp		2148137	0					
ANR	2148222	Identifier	m_fp		2148137	0					
ANR	2148223	Argument	filepos		2148137	1					
ANR	2148224	Identifier	filepos		2148137	0					
ANR	2148225	Argument	SEEK_SET		2148137	2					
ANR	2148226	Identifier	SEEK_SET		2148137	0					
ANR	2148227	CompoundStatement		27:39:672:672	2148137	1					
ANR	2148228	ExpressionStatement	"dprintf ( D_ALWAYS , ""fseek() failed in ReadUserLog::readEvent"" )"	1051:3:27291:27352	2148137	0	True				
ANR	2148229	CallExpression	"dprintf ( D_ALWAYS , ""fseek() failed in ReadUserLog::readEvent"" )"		2148137	0					
ANR	2148230	Callee	dprintf		2148137	0					
ANR	2148231	Identifier	dprintf		2148137	0					
ANR	2148232	ArgumentList	D_ALWAYS		2148137	1					
ANR	2148233	Argument	D_ALWAYS		2148137	0					
ANR	2148234	Identifier	D_ALWAYS		2148137	0					
ANR	2148235	Argument	"""fseek() failed in ReadUserLog::readEvent"""		2148137	1					
ANR	2148236	PrimaryExpression	"""fseek() failed in ReadUserLog::readEvent"""		2148137	0					
ANR	2148237	ReturnStatement	return ULOG_UNK_ERROR ;	1052:3:27357:27378	2148137	1	True				
ANR	2148238	Identifier	ULOG_UNK_ERROR		2148137	0					
ANR	2148239	ExpressionStatement	clearerr ( m_fp )	1054:2:27386:27400	2148137	1	True				
ANR	2148240	CallExpression	clearerr ( m_fp )		2148137	0					
ANR	2148241	Callee	clearerr		2148137	0					
ANR	2148242	Identifier	clearerr		2148137	0					
ANR	2148243	ArgumentList	m_fp		2148137	1					
ANR	2148244	Argument	m_fp		2148137	0					
ANR	2148245	Identifier	m_fp		2148137	0					
ANR	2148246	ExpressionStatement	event = NULL	1055:2:27404:27416	2148137	2	True				
ANR	2148247	AssignmentExpression	event = NULL		2148137	0		=			
ANR	2148248	Identifier	event		2148137	0					
ANR	2148249	Identifier	NULL		2148137	1					
ANR	2148250	ReturnStatement	return ULOG_NO_EVENT ;	1056:2:27420:27440	2148137	3	True				
ANR	2148251	Identifier	ULOG_NO_EVENT		2148137	0					
ANR	2148252	IdentifierDeclStatement	int enmbr ;	1059:1:27447:27456	2148137	8	True				
ANR	2148253	IdentifierDecl	enmbr		2148137	0					
ANR	2148254	IdentifierDeclType	int		2148137	0					
ANR	2148255	Identifier	enmbr		2148137	1					
ANR	2148256	IfStatement	"if ( ! eventad -> LookupInteger ( ""EventTypeNumber"" , enmbr ) )"		2148137	9					
ANR	2148257	Condition	"! eventad -> LookupInteger ( ""EventTypeNumber"" , enmbr )"	1060:5:27463:27511	2148137	0	True				
ANR	2148258	UnaryOperationExpression	"! eventad -> LookupInteger ( ""EventTypeNumber"" , enmbr )"		2148137	0					
ANR	2148259	UnaryOperator	!		2148137	0					
ANR	2148260	CallExpression	"eventad -> LookupInteger ( ""EventTypeNumber"" , enmbr )"		2148137	1					
ANR	2148261	Callee	eventad -> LookupInteger		2148137	0					
ANR	2148262	PtrMemberAccess	eventad -> LookupInteger		2148137	0					
ANR	2148263	Identifier	eventad		2148137	0					
ANR	2148264	Identifier	LookupInteger		2148137	1					
ANR	2148265	ArgumentList	"""EventTypeNumber"""		2148137	1					
ANR	2148266	Argument	"""EventTypeNumber"""		2148137	0					
ANR	2148267	PrimaryExpression	"""EventTypeNumber"""		2148137	0					
ANR	2148268	Argument	enmbr		2148137	1					
ANR	2148269	Identifier	enmbr		2148137	0					
ANR	2148270	CompoundStatement		37:57:901:901	2148137	1					
ANR	2148271	ExpressionStatement	event = NULL	1061:2:27519:27531	2148137	0	True				
ANR	2148272	AssignmentExpression	event = NULL		2148137	0		=			
ANR	2148273	Identifier	event		2148137	0					
ANR	2148274	Identifier	NULL		2148137	1					
ANR	2148275	Statement	delete	1062:2:27535:27540	2148137	1	True				
ANR	2148276	ExpressionStatement	eventad	1062:9:27542:27549	2148137	2	True				
ANR	2148277	Identifier	eventad		2148137	0					
ANR	2148278	ReturnStatement	return ULOG_NO_EVENT ;	1063:2:27553:27573	2148137	3	True				
ANR	2148279	Identifier	ULOG_NO_EVENT		2148137	0					
ANR	2148280	IfStatement	if ( ! ( event = instantiateEvent ( ( ULogEventNumber ) enmbr ) ) )		2148137	10					
ANR	2148281	Condition	! ( event = instantiateEvent ( ( ULogEventNumber ) enmbr ) )	1066:5:27584:27635	2148137	0	True				
ANR	2148282	UnaryOperationExpression	! ( event = instantiateEvent ( ( ULogEventNumber ) enmbr ) )		2148137	0					
ANR	2148283	UnaryOperator	!		2148137	0					
ANR	2148284	AssignmentExpression	event = instantiateEvent ( ( ULogEventNumber ) enmbr )		2148137	1		=			
ANR	2148285	Identifier	event		2148137	0					
ANR	2148286	CallExpression	instantiateEvent ( ( ULogEventNumber ) enmbr )		2148137	1					
ANR	2148287	Callee	instantiateEvent		2148137	0					
ANR	2148288	Identifier	instantiateEvent		2148137	0					
ANR	2148289	ArgumentList	( ULogEventNumber ) enmbr		2148137	1					
ANR	2148290	Argument	( ULogEventNumber ) enmbr		2148137	0					
ANR	2148291	CastExpression	( ULogEventNumber ) enmbr		2148137	0					
ANR	2148292	CastTarget	ULogEventNumber		2148137	0					
ANR	2148293	Identifier	enmbr		2148137	1					
ANR	2148294	CompoundStatement		43:60:1025:1025	2148137	1					
ANR	2148295	ExpressionStatement	event = NULL	1067:2:27643:27655	2148137	0	True				
ANR	2148296	AssignmentExpression	event = NULL		2148137	0		=			
ANR	2148297	Identifier	event		2148137	0					
ANR	2148298	Identifier	NULL		2148137	1					
ANR	2148299	Statement	delete	1068:2:27659:27664	2148137	1	True				
ANR	2148300	ExpressionStatement	eventad	1068:9:27666:27673	2148137	2	True				
ANR	2148301	Identifier	eventad		2148137	0					
ANR	2148302	ReturnStatement	return ULOG_UNK_ERROR ;	1069:2:27677:27698	2148137	3	True				
ANR	2148303	Identifier	ULOG_UNK_ERROR		2148137	0					
ANR	2148304	ExpressionStatement	event -> initFromClassAd ( eventad )	1072:1:27705:27736	2148137	11	True				
ANR	2148305	CallExpression	event -> initFromClassAd ( eventad )		2148137	0					
ANR	2148306	Callee	event -> initFromClassAd		2148137	0					
ANR	2148307	PtrMemberAccess	event -> initFromClassAd		2148137	0					
ANR	2148308	Identifier	event		2148137	0					
ANR	2148309	Identifier	initFromClassAd		2148137	1					
ANR	2148310	ArgumentList	eventad		2148137	1					
ANR	2148311	Argument	eventad		2148137	0					
ANR	2148312	Identifier	eventad		2148137	0					
ANR	2148313	Statement	delete	1074:1:27740:27745	2148137	12	True				
ANR	2148314	ExpressionStatement	eventad	1074:8:27747:27754	2148137	13	True				
ANR	2148315	Identifier	eventad		2148137	0					
ANR	2148316	ReturnStatement	return ULOG_OK ;	1075:1:27757:27771	2148137	14	True				
ANR	2148317	Identifier	ULOG_OK		2148137	0					
ANR	2148318	ReturnType	ULogEventOutcome		2148137	1					
ANR	2148319	Identifier	ReadUserLog :: readEventXML		2148137	2					
ANR	2148320	ParameterList	ULogEvent * & event		2148137	3					
ANR	2148321	Parameter	ULogEvent * & event	1023:27:26592:26609	2148137	0	True				
ANR	2148322	ParameterType	ULogEvent * &		2148137	0					
ANR	2148323	Identifier	event		2148137	1					
ANR	2148324	CFGEntryNode	ENTRY		2148137		True				
ANR	2148325	CFGExitNode	EXIT		2148137		True				
ANR	2148326	Symbol	SEEK_SET		2148137						
ANR	2148327	Symbol	xmlp		2148137						
ANR	2148328	Symbol	ULOG_NO_EVENT		2148137						
ANR	2148329	Symbol	NULL		2148137						
ANR	2148330	Symbol	ftell		2148137						
ANR	2148331	Symbol	D_ALWAYS		2148137						
ANR	2148332	Symbol	eventad		2148137						
ANR	2148333	Symbol	ULOG_UNK_ERROR		2148137						
ANR	2148334	Symbol	eventad -> LookupInteger		2148137						
ANR	2148335	Symbol	xmlp . ParseClassAd		2148137						
ANR	2148336	Symbol	fseek		2148137						
ANR	2148337	Symbol	m_fp		2148137						
ANR	2148338	Symbol	ULOG_OK		2148137						
ANR	2148339	Symbol	filepos		2148137						
ANR	2148340	Symbol	* eventad		2148137						
ANR	2148341	Symbol	enmbr		2148137						
ANR	2148342	Symbol	true		2148137						
ANR	2148343	Symbol	instantiateEvent		2148137						
ANR	2148344	Symbol	event		2148137						
ANR	2148345	Function	ReadUserLog :: readEventOld	1078:0:27776:34101							
ANR	2148346	FunctionDef	ReadUserLog :: readEventOld (ULogEvent * & event)		2148345	0					
ANR	2148347	CompoundStatement		1080:0:27841:34101	2148345	0					
ANR	2148348	IdentifierDeclStatement	long filepos ;	1081:1:27844:27858	2148345	0	True				
ANR	2148349	IdentifierDecl	filepos		2148345	0					
ANR	2148350	IdentifierDeclType	long		2148345	0					
ANR	2148351	Identifier	filepos		2148345	1					
ANR	2148352	IdentifierDeclStatement	int eventnumber ;	1082:1:27861:27879	2148345	1	True				
ANR	2148353	IdentifierDecl	eventnumber		2148345	0					
ANR	2148354	IdentifierDeclType	int		2148345	0					
ANR	2148355	Identifier	eventnumber		2148345	1					
ANR	2148356	IdentifierDeclStatement	"int retval1 , retval2 ;"	1083:1:27882:27905	2148345	2	True				
ANR	2148357	IdentifierDecl	retval1		2148345	0					
ANR	2148358	IdentifierDeclType	int		2148345	0					
ANR	2148359	Identifier	retval1		2148345	1					
ANR	2148360	IdentifierDecl	retval2		2148345	1					
ANR	2148361	IdentifierDeclType	int		2148345	0					
ANR	2148362	Identifier	retval2		2148345	1					
ANR	2148363	IfStatement	if ( m_lock -> isUnlocked ( ) )		2148345	3					
ANR	2148364	Condition	m_lock -> isUnlocked ( )	1088:6:28074:28093	2148345	0	True				
ANR	2148365	CallExpression	m_lock -> isUnlocked ( )		2148345	0					
ANR	2148366	Callee	m_lock -> isUnlocked		2148345	0					
ANR	2148367	PtrMemberAccess	m_lock -> isUnlocked		2148345	0					
ANR	2148368	Identifier	m_lock		2148345	0					
ANR	2148369	Identifier	isUnlocked		2148345	1					
ANR	2148370	ArgumentList			2148345	1					
ANR	2148371	CompoundStatement		9:29:255:255	2148345	1					
ANR	2148372	ExpressionStatement	m_lock -> obtain ( WRITE_LOCK )	1089:2:28101:28129	2148345	0	True				
ANR	2148373	CallExpression	m_lock -> obtain ( WRITE_LOCK )		2148345	0					
ANR	2148374	Callee	m_lock -> obtain		2148345	0					
ANR	2148375	PtrMemberAccess	m_lock -> obtain		2148345	0					
ANR	2148376	Identifier	m_lock		2148345	0					
ANR	2148377	Identifier	obtain		2148345	1					
ANR	2148378	ArgumentList	WRITE_LOCK		2148345	1					
ANR	2148379	Argument	WRITE_LOCK		2148345	0					
ANR	2148380	Identifier	WRITE_LOCK		2148345	0					
ANR	2148381	IfStatement	if ( ! m_fp || ( ( filepos = ftell ( m_fp ) ) == - 1L ) )		2148345	4					
ANR	2148382	Condition	! m_fp || ( ( filepos = ftell ( m_fp ) ) == - 1L )	1094:5:28243:28283	2148345	0	True				
ANR	2148383	OrExpression	! m_fp || ( ( filepos = ftell ( m_fp ) ) == - 1L )		2148345	0		||			
ANR	2148384	UnaryOperationExpression	! m_fp		2148345	0					
ANR	2148385	UnaryOperator	!		2148345	0					
ANR	2148386	Identifier	m_fp		2148345	1					
ANR	2148387	EqualityExpression	( filepos = ftell ( m_fp ) ) == - 1L		2148345	1		==			
ANR	2148388	AssignmentExpression	filepos = ftell ( m_fp )		2148345	0		=			
ANR	2148389	Identifier	filepos		2148345	0					
ANR	2148390	CallExpression	ftell ( m_fp )		2148345	1					
ANR	2148391	Callee	ftell		2148345	0					
ANR	2148392	Identifier	ftell		2148345	0					
ANR	2148393	ArgumentList	m_fp		2148345	1					
ANR	2148394	Argument	m_fp		2148345	0					
ANR	2148395	Identifier	m_fp		2148345	0					
ANR	2148396	UnaryOperationExpression	- 1L		2148345	1					
ANR	2148397	UnaryOperator	-		2148345	0					
ANR	2148398	PrimaryExpression	1L		2148345	1					
ANR	2148399	CompoundStatement		16:1:445:445	2148345	1					
ANR	2148400	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""ReadUserLog: invalid m_fp, or ftell() failed\\n"" )"	1096:2:28291:28368	2148345	0	True				
ANR	2148401	CallExpression	"dprintf ( D_FULLDEBUG , ""ReadUserLog: invalid m_fp, or ftell() failed\\n"" )"		2148345	0					
ANR	2148402	Callee	dprintf		2148345	0					
ANR	2148403	Identifier	dprintf		2148345	0					
ANR	2148404	ArgumentList	D_FULLDEBUG		2148345	1					
ANR	2148405	Argument	D_FULLDEBUG		2148345	0					
ANR	2148406	Identifier	D_FULLDEBUG		2148345	0					
ANR	2148407	Argument	"""ReadUserLog: invalid m_fp, or ftell() failed\\n"""		2148345	1					
ANR	2148408	PrimaryExpression	"""ReadUserLog: invalid m_fp, or ftell() failed\\n"""		2148345	0					
ANR	2148409	IfStatement	if ( m_lock -> isLocked ( ) )		2148345	1					
ANR	2148410	Condition	m_lock -> isLocked ( )	1098:7:28377:28394	2148345	0	True				
ANR	2148411	CallExpression	m_lock -> isLocked ( )		2148345	0					
ANR	2148412	Callee	m_lock -> isLocked		2148345	0					
ANR	2148413	PtrMemberAccess	m_lock -> isLocked		2148345	0					
ANR	2148414	Identifier	m_lock		2148345	0					
ANR	2148415	Identifier	isLocked		2148345	1					
ANR	2148416	ArgumentList			2148345	1					
ANR	2148417	CompoundStatement		19:28:556:556	2148345	1					
ANR	2148418	ExpressionStatement	m_lock -> release ( )	1099:3:28403:28420	2148345	0	True				
ANR	2148419	CallExpression	m_lock -> release ( )		2148345	0					
ANR	2148420	Callee	m_lock -> release		2148345	0					
ANR	2148421	PtrMemberAccess	m_lock -> release		2148345	0					
ANR	2148422	Identifier	m_lock		2148345	0					
ANR	2148423	Identifier	release		2148345	1					
ANR	2148424	ArgumentList			2148345	1					
ANR	2148425	ReturnStatement	return ULOG_UNK_ERROR ;	1101:2:28428:28449	2148345	2	True				
ANR	2148426	Identifier	ULOG_UNK_ERROR		2148345	0					
ANR	2148427	ExpressionStatement	"retval1 = fscanf ( m_fp , ""%d"" , & eventnumber )"	1104:1:28456:28499	2148345	5	True				
ANR	2148428	AssignmentExpression	"retval1 = fscanf ( m_fp , ""%d"" , & eventnumber )"		2148345	0		=			
ANR	2148429	Identifier	retval1		2148345	0					
ANR	2148430	CallExpression	"fscanf ( m_fp , ""%d"" , & eventnumber )"		2148345	1					
ANR	2148431	Callee	fscanf		2148345	0					
ANR	2148432	Identifier	fscanf		2148345	0					
ANR	2148433	ArgumentList	m_fp		2148345	1					
ANR	2148434	Argument	m_fp		2148345	0					
ANR	2148435	Identifier	m_fp		2148345	0					
ANR	2148436	Argument	"""%d"""		2148345	1					
ANR	2148437	PrimaryExpression	"""%d"""		2148345	0					
ANR	2148438	Argument	& eventnumber		2148345	2					
ANR	2148439	UnaryOperationExpression	& eventnumber		2148345	0					
ANR	2148440	UnaryOperator	&		2148345	0					
ANR	2148441	Identifier	eventnumber		2148345	1					
ANR	2148442	IfStatement	if ( retval1 != 1 )		2148345	6					
ANR	2148443	Condition	retval1 != 1	1107:5:28560:28571	2148345	0	True				
ANR	2148444	EqualityExpression	retval1 != 1		2148345	0		!=			
ANR	2148445	Identifier	retval1		2148345	0					
ANR	2148446	PrimaryExpression	1		2148345	1					
ANR	2148447	CompoundStatement		28:19:732:732	2148345	1					
ANR	2148448	ExpressionStatement	eventnumber = 1	1108:2:28578:28593	2148345	0	True				
ANR	2148449	AssignmentExpression	eventnumber = 1		2148345	0		=			
ANR	2148450	Identifier	eventnumber		2148345	0					
ANR	2148451	PrimaryExpression	1		2148345	1					
ANR	2148452	IfStatement	if ( feof ( m_fp ) )		2148345	1					
ANR	2148453	Condition	feof ( m_fp )	1119:6:29154:29165	2148345	0	True				
ANR	2148454	CallExpression	feof ( m_fp )		2148345	0					
ANR	2148455	Callee	feof		2148345	0					
ANR	2148456	Identifier	feof		2148345	0					
ANR	2148457	ArgumentList	m_fp		2148345	1					
ANR	2148458	Argument	m_fp		2148345	0					
ANR	2148459	Identifier	m_fp		2148345	0					
ANR	2148460	CompoundStatement		40:21:1327:1327	2148345	1					
ANR	2148461	ExpressionStatement	event = NULL	1120:3:29174:29186	2148345	0	True				
ANR	2148462	AssignmentExpression	event = NULL		2148345	0		=			
ANR	2148463	Identifier	event		2148345	0					
ANR	2148464	Identifier	NULL		2148345	1					
ANR	2148465	ExpressionStatement	clearerr ( m_fp )	1121:3:29228:29244	2148345	1	True				
ANR	2148466	CallExpression	clearerr ( m_fp )		2148345	0					
ANR	2148467	Callee	clearerr		2148345	0					
ANR	2148468	Identifier	clearerr		2148345	0					
ANR	2148469	ArgumentList	m_fp		2148345	1					
ANR	2148470	Argument	m_fp		2148345	0					
ANR	2148471	Identifier	m_fp		2148345	0					
ANR	2148472	IfStatement	if ( m_lock -> isLocked ( ) )		2148345	2					
ANR	2148473	Condition	m_lock -> isLocked ( )	1122:7:29253:29270	2148345	0	True				
ANR	2148474	CallExpression	m_lock -> isLocked ( )		2148345	0					
ANR	2148475	Callee	m_lock -> isLocked		2148345	0					
ANR	2148476	PtrMemberAccess	m_lock -> isLocked		2148345	0					
ANR	2148477	Identifier	m_lock		2148345	0					
ANR	2148478	Identifier	isLocked		2148345	1					
ANR	2148479	ArgumentList			2148345	1					
ANR	2148480	CompoundStatement		43:28:1432:1432	2148345	1					
ANR	2148481	ExpressionStatement	m_lock -> release ( )	1123:4:29280:29297	2148345	0	True				
ANR	2148482	CallExpression	m_lock -> release ( )		2148345	0					
ANR	2148483	Callee	m_lock -> release		2148345	0					
ANR	2148484	PtrMemberAccess	m_lock -> release		2148345	0					
ANR	2148485	Identifier	m_lock		2148345	0					
ANR	2148486	Identifier	release		2148345	1					
ANR	2148487	ArgumentList			2148345	1					
ANR	2148488	ReturnStatement	return ULOG_NO_EVENT ;	1125:3:29307:29327	2148345	3	True				
ANR	2148489	Identifier	ULOG_NO_EVENT		2148345	0					
ANR	2148490	Statement	dprintf	1127:2:29335:29341	2148345	2	True				
ANR	2148491	Statement	(	1127:9:29342:29342	2148345	3	True				
ANR	2148492	Statement	D_FULLDEBUG	1127:11:29344:29354	2148345	4	True				
ANR	2148493	Statement	","	1127:22:29355:29355	2148345	5	True				
ANR	2148494	Statement	"""ReadUserLog: error (not EOF) reading """	1127:24:29357:29395	2148345	6	True				
ANR	2148495	Statement	"""event number\\n"""	1128:5:29402:29417	2148345	7	True				
ANR	2148496	Statement	)	1128:22:29419:29419	2148345	8	True				
ANR	2148497	ExpressionStatement		1128:23:29420:29420	2148345	9	True				
ANR	2148498	ExpressionStatement	event = instantiateEvent ( ( ULogEventNumber ) eventnumber )	1132:1:29486:29542	2148345	7	True				
ANR	2148499	AssignmentExpression	event = instantiateEvent ( ( ULogEventNumber ) eventnumber )		2148345	0		=			
ANR	2148500	Identifier	event		2148345	0					
ANR	2148501	CallExpression	instantiateEvent ( ( ULogEventNumber ) eventnumber )		2148345	1					
ANR	2148502	Callee	instantiateEvent		2148345	0					
ANR	2148503	Identifier	instantiateEvent		2148345	0					
ANR	2148504	ArgumentList	( ULogEventNumber ) eventnumber		2148345	1					
ANR	2148505	Argument	( ULogEventNumber ) eventnumber		2148345	0					
ANR	2148506	CastExpression	( ULogEventNumber ) eventnumber		2148345	0					
ANR	2148507	CastTarget	ULogEventNumber		2148345	0					
ANR	2148508	Identifier	eventnumber		2148345	1					
ANR	2148509	IfStatement	if ( ! event )		2148345	8					
ANR	2148510	Condition	! event	1133:5:29549:29554	2148345	0	True				
ANR	2148511	UnaryOperationExpression	! event		2148345	0					
ANR	2148512	UnaryOperator	!		2148345	0					
ANR	2148513	Identifier	event		2148345	1					
ANR	2148514	CompoundStatement		54:13:1715:1715	2148345	1					
ANR	2148515	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""ReadUserLog: unable to instantiate event\\n"" )"	1134:2:29561:29629	2148345	0	True				
ANR	2148516	CallExpression	"dprintf ( D_FULLDEBUG , ""ReadUserLog: unable to instantiate event\\n"" )"		2148345	0					
ANR	2148517	Callee	dprintf		2148345	0					
ANR	2148518	Identifier	dprintf		2148345	0					
ANR	2148519	ArgumentList	D_FULLDEBUG		2148345	1					
ANR	2148520	Argument	D_FULLDEBUG		2148345	0					
ANR	2148521	Identifier	D_FULLDEBUG		2148345	0					
ANR	2148522	Argument	"""ReadUserLog: unable to instantiate event\\n"""		2148345	1					
ANR	2148523	PrimaryExpression	"""ReadUserLog: unable to instantiate event\\n"""		2148345	0					
ANR	2148524	IfStatement	if ( m_lock -> isLocked ( ) )		2148345	1					
ANR	2148525	Condition	m_lock -> isLocked ( )	1135:7:29638:29655	2148345	0	True				
ANR	2148526	CallExpression	m_lock -> isLocked ( )		2148345	0					
ANR	2148527	Callee	m_lock -> isLocked		2148345	0					
ANR	2148528	PtrMemberAccess	m_lock -> isLocked		2148345	0					
ANR	2148529	Identifier	m_lock		2148345	0					
ANR	2148530	Identifier	isLocked		2148345	1					
ANR	2148531	ArgumentList			2148345	1					
ANR	2148532	CompoundStatement		56:27:1816:1816	2148345	1					
ANR	2148533	ExpressionStatement	m_lock -> release ( )	1136:3:29663:29680	2148345	0	True				
ANR	2148534	CallExpression	m_lock -> release ( )		2148345	0					
ANR	2148535	Callee	m_lock -> release		2148345	0					
ANR	2148536	PtrMemberAccess	m_lock -> release		2148345	0					
ANR	2148537	Identifier	m_lock		2148345	0					
ANR	2148538	Identifier	release		2148345	1					
ANR	2148539	ArgumentList			2148345	1					
ANR	2148540	ReturnStatement	return ULOG_UNK_ERROR ;	1138:2:29688:29709	2148345	2	True				
ANR	2148541	Identifier	ULOG_UNK_ERROR		2148345	0					
ANR	2148542	ExpressionStatement	retval2 = event -> getEvent ( m_fp )	1142:1:29759:29791	2148345	9	True				
ANR	2148543	AssignmentExpression	retval2 = event -> getEvent ( m_fp )		2148345	0		=			
ANR	2148544	Identifier	retval2		2148345	0					
ANR	2148545	CallExpression	event -> getEvent ( m_fp )		2148345	1					
ANR	2148546	Callee	event -> getEvent		2148345	0					
ANR	2148547	PtrMemberAccess	event -> getEvent		2148345	0					
ANR	2148548	Identifier	event		2148345	0					
ANR	2148549	Identifier	getEvent		2148345	1					
ANR	2148550	ArgumentList	m_fp		2148345	1					
ANR	2148551	Argument	m_fp		2148345	0					
ANR	2148552	Identifier	m_fp		2148345	0					
ANR	2148553	IfStatement	if ( ! retval1 || ! retval2 )		2148345	10					
ANR	2148554	Condition	! retval1 || ! retval2	1145:5:29835:29854	2148345	0	True				
ANR	2148555	OrExpression	! retval1 || ! retval2		2148345	0		||			
ANR	2148556	UnaryOperationExpression	! retval1		2148345	0					
ANR	2148557	UnaryOperator	!		2148345	0					
ANR	2148558	Identifier	retval1		2148345	1					
ANR	2148559	UnaryOperationExpression	! retval2		2148345	1					
ANR	2148560	UnaryOperator	!		2148345	0					
ANR	2148561	Identifier	retval2		2148345	1					
ANR	2148562	CompoundStatement		67:1:2016:2016	2148345	1					
ANR	2148563	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""ReadUserLog: error reading event; re-trying\\n"" )"	1147:2:29862:29938	2148345	0	True				
ANR	2148564	CallExpression	"dprintf ( D_FULLDEBUG , ""ReadUserLog: error reading event; re-trying\\n"" )"		2148345	0					
ANR	2148565	Callee	dprintf		2148345	0					
ANR	2148566	Identifier	dprintf		2148345	0					
ANR	2148567	ArgumentList	D_FULLDEBUG		2148345	1					
ANR	2148568	Argument	D_FULLDEBUG		2148345	0					
ANR	2148569	Identifier	D_FULLDEBUG		2148345	0					
ANR	2148570	Argument	"""ReadUserLog: error reading event; re-trying\\n"""		2148345	1					
ANR	2148571	PrimaryExpression	"""ReadUserLog: error reading event; re-trying\\n"""		2148345	0					
ANR	2148572	IfStatement	if ( m_lock -> isLocked ( ) )		2148345	1					
ANR	2148573	Condition	m_lock -> isLocked ( )	1161:6:30492:30509	2148345	0	True				
ANR	2148574	CallExpression	m_lock -> isLocked ( )		2148345	0					
ANR	2148575	Callee	m_lock -> isLocked		2148345	0					
ANR	2148576	PtrMemberAccess	m_lock -> isLocked		2148345	0					
ANR	2148577	Identifier	m_lock		2148345	0					
ANR	2148578	Identifier	isLocked		2148345	1					
ANR	2148579	ArgumentList			2148345	1					
ANR	2148580	CompoundStatement		82:27:2671:2671	2148345	1					
ANR	2148581	ExpressionStatement	m_lock -> release ( )	1162:3:30518:30535	2148345	0	True				
ANR	2148582	CallExpression	m_lock -> release ( )		2148345	0					
ANR	2148583	Callee	m_lock -> release		2148345	0					
ANR	2148584	PtrMemberAccess	m_lock -> release		2148345	0					
ANR	2148585	Identifier	m_lock		2148345	0					
ANR	2148586	Identifier	release		2148345	1					
ANR	2148587	ArgumentList			2148345	1					
ANR	2148588	ExpressionStatement	sleep ( 1 )	1164:2:30543:30553	2148345	2	True				
ANR	2148589	CallExpression	sleep ( 1 )		2148345	0					
ANR	2148590	Callee	sleep		2148345	0					
ANR	2148591	Identifier	sleep		2148345	0					
ANR	2148592	ArgumentList	1		2148345	1					
ANR	2148593	Argument	1		2148345	0					
ANR	2148594	PrimaryExpression	1		2148345	0					
ANR	2148595	IfStatement	if ( m_lock -> isUnlocked ( ) )		2148345	3					
ANR	2148596	Condition	m_lock -> isUnlocked ( )	1165:6:30561:30580	2148345	0	True				
ANR	2148597	CallExpression	m_lock -> isUnlocked ( )		2148345	0					
ANR	2148598	Callee	m_lock -> isUnlocked		2148345	0					
ANR	2148599	PtrMemberAccess	m_lock -> isUnlocked		2148345	0					
ANR	2148600	Identifier	m_lock		2148345	0					
ANR	2148601	Identifier	isUnlocked		2148345	1					
ANR	2148602	ArgumentList			2148345	1					
ANR	2148603	CompoundStatement		86:29:2742:2742	2148345	1					
ANR	2148604	ExpressionStatement	m_lock -> obtain ( WRITE_LOCK )	1166:3:30589:30617	2148345	0	True				
ANR	2148605	CallExpression	m_lock -> obtain ( WRITE_LOCK )		2148345	0					
ANR	2148606	Callee	m_lock -> obtain		2148345	0					
ANR	2148607	PtrMemberAccess	m_lock -> obtain		2148345	0					
ANR	2148608	Identifier	m_lock		2148345	0					
ANR	2148609	Identifier	obtain		2148345	1					
ANR	2148610	ArgumentList	WRITE_LOCK		2148345	1					
ANR	2148611	Argument	WRITE_LOCK		2148345	0					
ANR	2148612	Identifier	WRITE_LOCK		2148345	0					
ANR	2148613	IfStatement	"if ( fseek ( m_fp , filepos , SEEK_SET ) )"		2148345	4					
ANR	2148614	Condition	"fseek ( m_fp , filepos , SEEK_SET )"	1168:6:30629:30659	2148345	0	True				
ANR	2148615	CallExpression	"fseek ( m_fp , filepos , SEEK_SET )"		2148345	0					
ANR	2148616	Callee	fseek		2148345	0					
ANR	2148617	Identifier	fseek		2148345	0					
ANR	2148618	ArgumentList	m_fp		2148345	1					
ANR	2148619	Argument	m_fp		2148345	0					
ANR	2148620	Identifier	m_fp		2148345	0					
ANR	2148621	Argument	filepos		2148345	1					
ANR	2148622	Identifier	filepos		2148345	0					
ANR	2148623	Argument	SEEK_SET		2148345	2					
ANR	2148624	Identifier	SEEK_SET		2148345	0					
ANR	2148625	CompoundStatement		89:39:2820:2820	2148345	1					
ANR	2148626	ExpressionStatement	"dprintf ( D_ALWAYS , ""fseek() failed in %s:%d"" , __FILE__ , __LINE__ )"	1169:3:30667:30733	2148345	0	True				
ANR	2148627	CallExpression	"dprintf ( D_ALWAYS , ""fseek() failed in %s:%d"" , __FILE__ , __LINE__ )"		2148345	0					
ANR	2148628	Callee	dprintf		2148345	0					
ANR	2148629	Identifier	dprintf		2148345	0					
ANR	2148630	ArgumentList	D_ALWAYS		2148345	1					
ANR	2148631	Argument	D_ALWAYS		2148345	0					
ANR	2148632	Identifier	D_ALWAYS		2148345	0					
ANR	2148633	Argument	"""fseek() failed in %s:%d"""		2148345	1					
ANR	2148634	PrimaryExpression	"""fseek() failed in %s:%d"""		2148345	0					
ANR	2148635	Argument	__FILE__		2148345	2					
ANR	2148636	Identifier	__FILE__		2148345	0					
ANR	2148637	Argument	__LINE__		2148345	3					
ANR	2148638	Identifier	__LINE__		2148345	0					
ANR	2148639	IfStatement	if ( m_lock -> isLocked ( ) )		2148345	1					
ANR	2148640	Condition	m_lock -> isLocked ( )	1170:8:30743:30760	2148345	0	True				
ANR	2148641	CallExpression	m_lock -> isLocked ( )		2148345	0					
ANR	2148642	Callee	m_lock -> isLocked		2148345	0					
ANR	2148643	PtrMemberAccess	m_lock -> isLocked		2148345	0					
ANR	2148644	Identifier	m_lock		2148345	0					
ANR	2148645	Identifier	isLocked		2148345	1					
ANR	2148646	ArgumentList			2148345	1					
ANR	2148647	CompoundStatement		91:29:2922:2922	2148345	1					
ANR	2148648	ExpressionStatement	m_lock -> release ( )	1171:4:30770:30787	2148345	0	True				
ANR	2148649	CallExpression	m_lock -> release ( )		2148345	0					
ANR	2148650	Callee	m_lock -> release		2148345	0					
ANR	2148651	PtrMemberAccess	m_lock -> release		2148345	0					
ANR	2148652	Identifier	m_lock		2148345	0					
ANR	2148653	Identifier	release		2148345	1					
ANR	2148654	ArgumentList			2148345	1					
ANR	2148655	ReturnStatement	return ULOG_UNK_ERROR ;	1173:3:30797:30818	2148345	2	True				
ANR	2148656	Identifier	ULOG_UNK_ERROR		2148345	0					
ANR	2148657	IfStatement	if ( synchronize ( ) )		2148345	5					
ANR	2148658	Condition	synchronize ( )	1175:6:30830:30842	2148345	0	True				
ANR	2148659	CallExpression	synchronize ( )		2148345	0					
ANR	2148660	Callee	synchronize		2148345	0					
ANR	2148661	Identifier	synchronize		2148345	0					
ANR	2148662	ArgumentList			2148345	1					
ANR	2148663	CompoundStatement		110:3:3349:3381	2148345	1					
ANR	2148664	IfStatement	"if ( fseek ( m_fp , filepos , SEEK_SET ) )"		2148345	0					
ANR	2148665	Condition	"fseek ( m_fp , filepos , SEEK_SET )"	1178:7:30926:30956	2148345	0	True				
ANR	2148666	CallExpression	"fseek ( m_fp , filepos , SEEK_SET )"		2148345	0					
ANR	2148667	Callee	fseek		2148345	0					
ANR	2148668	Identifier	fseek		2148345	0					
ANR	2148669	ArgumentList	m_fp		2148345	1					
ANR	2148670	Argument	m_fp		2148345	0					
ANR	2148671	Identifier	m_fp		2148345	0					
ANR	2148672	Argument	filepos		2148345	1					
ANR	2148673	Identifier	filepos		2148345	0					
ANR	2148674	Argument	SEEK_SET		2148345	2					
ANR	2148675	Identifier	SEEK_SET		2148345	0					
ANR	2148676	CompoundStatement		100:3:3120:3120	2148345	1					
ANR	2148677	ExpressionStatement	"dprintf ( D_ALWAYS , ""fseek() failed in ReadUserLog::readEvent"" )"	1180:4:30968:31029	2148345	0	True				
ANR	2148678	CallExpression	"dprintf ( D_ALWAYS , ""fseek() failed in ReadUserLog::readEvent"" )"		2148345	0					
ANR	2148679	Callee	dprintf		2148345	0					
ANR	2148680	Identifier	dprintf		2148345	0					
ANR	2148681	ArgumentList	D_ALWAYS		2148345	1					
ANR	2148682	Argument	D_ALWAYS		2148345	0					
ANR	2148683	Identifier	D_ALWAYS		2148345	0					
ANR	2148684	Argument	"""fseek() failed in ReadUserLog::readEvent"""		2148345	1					
ANR	2148685	PrimaryExpression	"""fseek() failed in ReadUserLog::readEvent"""		2148345	0					
ANR	2148686	IfStatement	if ( m_lock -> isLocked ( ) )		2148345	1					
ANR	2148687	Condition	m_lock -> isLocked ( )	1181:9:31040:31057	2148345	0	True				
ANR	2148688	CallExpression	m_lock -> isLocked ( )		2148345	0					
ANR	2148689	Callee	m_lock -> isLocked		2148345	0					
ANR	2148690	PtrMemberAccess	m_lock -> isLocked		2148345	0					
ANR	2148691	Identifier	m_lock		2148345	0					
ANR	2148692	Identifier	isLocked		2148345	1					
ANR	2148693	ArgumentList			2148345	1					
ANR	2148694	CompoundStatement		102:30:3219:3219	2148345	1					
ANR	2148695	ExpressionStatement	m_lock -> release ( )	1182:5:31068:31085	2148345	0	True				
ANR	2148696	CallExpression	m_lock -> release ( )		2148345	0					
ANR	2148697	Callee	m_lock -> release		2148345	0					
ANR	2148698	PtrMemberAccess	m_lock -> release		2148345	0					
ANR	2148699	Identifier	m_lock		2148345	0					
ANR	2148700	Identifier	release		2148345	1					
ANR	2148701	ArgumentList			2148345	1					
ANR	2148702	ReturnStatement	return ULOG_UNK_ERROR ;	1184:4:31097:31118	2148345	2	True				
ANR	2148703	Identifier	ULOG_UNK_ERROR		2148345	0					
ANR	2148704	ExpressionStatement	clearerr ( m_fp )	1188:3:31171:31186	2148345	1	True				
ANR	2148705	CallExpression	clearerr ( m_fp )		2148345	0					
ANR	2148706	Callee	clearerr		2148345	0					
ANR	2148707	Identifier	clearerr		2148345	0					
ANR	2148708	ArgumentList	m_fp		2148345	1					
ANR	2148709	Argument	m_fp		2148345	0					
ANR	2148710	Identifier	m_fp		2148345	0					
ANR	2148711	IdentifierDeclStatement	int oldeventnumber = eventnumber ;	1189:3:31191:31223	2148345	2	True				
ANR	2148712	IdentifierDecl	oldeventnumber = eventnumber		2148345	0					
ANR	2148713	IdentifierDeclType	int		2148345	0					
ANR	2148714	Identifier	oldeventnumber		2148345	1					
ANR	2148715	AssignmentExpression	oldeventnumber = eventnumber		2148345	2		=			
ANR	2148716	Identifier	eventnumber		2148345	0					
ANR	2148717	Identifier	eventnumber		2148345	1					
ANR	2148718	ExpressionStatement	eventnumber = - 1	1190:3:31228:31244	2148345	3	True				
ANR	2148719	AssignmentExpression	eventnumber = - 1		2148345	0		=			
ANR	2148720	Identifier	eventnumber		2148345	0					
ANR	2148721	UnaryOperationExpression	- 1		2148345	1					
ANR	2148722	UnaryOperator	-		2148345	0					
ANR	2148723	PrimaryExpression	1		2148345	1					
ANR	2148724	ExpressionStatement	"retval1 = fscanf ( m_fp , ""%d"" , & eventnumber )"	1191:3:31249:31292	2148345	4	True				
ANR	2148725	AssignmentExpression	"retval1 = fscanf ( m_fp , ""%d"" , & eventnumber )"		2148345	0		=			
ANR	2148726	Identifier	retval1		2148345	0					
ANR	2148727	CallExpression	"fscanf ( m_fp , ""%d"" , & eventnumber )"		2148345	1					
ANR	2148728	Callee	fscanf		2148345	0					
ANR	2148729	Identifier	fscanf		2148345	0					
ANR	2148730	ArgumentList	m_fp		2148345	1					
ANR	2148731	Argument	m_fp		2148345	0					
ANR	2148732	Identifier	m_fp		2148345	0					
ANR	2148733	Argument	"""%d"""		2148345	1					
ANR	2148734	PrimaryExpression	"""%d"""		2148345	0					
ANR	2148735	Argument	& eventnumber		2148345	2					
ANR	2148736	UnaryOperationExpression	& eventnumber		2148345	0					
ANR	2148737	UnaryOperator	&		2148345	0					
ANR	2148738	Identifier	eventnumber		2148345	1					
ANR	2148739	IfStatement	if ( retval1 == 1 )		2148345	5					
ANR	2148740	Condition	retval1 == 1	1192:7:31301:31312	2148345	0	True				
ANR	2148741	EqualityExpression	retval1 == 1		2148345	0		==			
ANR	2148742	Identifier	retval1		2148345	0					
ANR	2148743	PrimaryExpression	1		2148345	1					
ANR	2148744	CompoundStatement		113:22:3474:3474	2148345	1					
ANR	2148745	IfStatement	if ( eventnumber != oldeventnumber )		2148345	0					
ANR	2148746	Condition	eventnumber != oldeventnumber	1193:8:31326:31354	2148345	0	True				
ANR	2148747	EqualityExpression	eventnumber != oldeventnumber		2148345	0		!=			
ANR	2148748	Identifier	eventnumber		2148345	0					
ANR	2148749	Identifier	oldeventnumber		2148345	1					
ANR	2148750	CompoundStatement		114:40:3516:3516	2148345	1					
ANR	2148751	IfStatement	if ( event )		2148345	0					
ANR	2148752	Condition	event	1194:9:31369:31373	2148345	0	True				
ANR	2148753	Identifier	event		2148345	0					
ANR	2148754	CompoundStatement		115:17:3535:3535	2148345	1					
ANR	2148755	Statement	delete	1195:6:31385:31390	2148345	0	True				
ANR	2148756	ExpressionStatement	event	1195:13:31392:31397	2148345	1	True				
ANR	2148757	Identifier	event		2148345	0					
ANR	2148758	ExpressionStatement	event = instantiateEvent ( ( ULogEventNumber ) eventnumber )	1200:5:31483:31539	2148345	1	True				
ANR	2148759	AssignmentExpression	event = instantiateEvent ( ( ULogEventNumber ) eventnumber )		2148345	0		=			
ANR	2148760	Identifier	event		2148345	0					
ANR	2148761	CallExpression	instantiateEvent ( ( ULogEventNumber ) eventnumber )		2148345	1					
ANR	2148762	Callee	instantiateEvent		2148345	0					
ANR	2148763	Identifier	instantiateEvent		2148345	0					
ANR	2148764	ArgumentList	( ULogEventNumber ) eventnumber		2148345	1					
ANR	2148765	Argument	( ULogEventNumber ) eventnumber		2148345	0					
ANR	2148766	CastExpression	( ULogEventNumber ) eventnumber		2148345	0					
ANR	2148767	CastTarget	ULogEventNumber		2148345	0					
ANR	2148768	Identifier	eventnumber		2148345	1					
ANR	2148769	IfStatement	if ( ! event )		2148345	2					
ANR	2148770	Condition	! event	1201:9:31550:31555	2148345	0	True				
ANR	2148771	UnaryOperationExpression	! event		2148345	0					
ANR	2148772	UnaryOperator	!		2148345	0					
ANR	2148773	Identifier	event		2148345	1					
ANR	2148774	CompoundStatement		122:18:3717:3717	2148345	1					
ANR	2148775	Statement	dprintf	1202:6:31567:31573	2148345	0	True				
ANR	2148776	Statement	(	1202:13:31574:31574	2148345	1	True				
ANR	2148777	Statement	D_FULLDEBUG	1202:15:31576:31586	2148345	2	True				
ANR	2148778	Statement	","	1202:26:31587:31587	2148345	3	True				
ANR	2148779	Statement	"""ReadUserLog: unable to """	1202:28:31589:31613	2148345	4	True				
ANR	2148780	Statement	"""instantiate event\\n"""	1203:9:31624:31644	2148345	5	True				
ANR	2148781	Statement	)	1203:31:31646:31646	2148345	6	True				
ANR	2148782	ExpressionStatement		1203:32:31647:31647	2148345	7	True				
ANR	2148783	IfStatement	if ( m_lock -> isLocked ( ) )		2148345	8					
ANR	2148784	Condition	m_lock -> isLocked ( )	1204:10:31659:31676	2148345	0	True				
ANR	2148785	CallExpression	m_lock -> isLocked ( )		2148345	0					
ANR	2148786	Callee	m_lock -> isLocked		2148345	0					
ANR	2148787	PtrMemberAccess	m_lock -> isLocked		2148345	0					
ANR	2148788	Identifier	m_lock		2148345	0					
ANR	2148789	Identifier	isLocked		2148345	1					
ANR	2148790	ArgumentList			2148345	1					
ANR	2148791	CompoundStatement		125:31:3838:3838	2148345	1					
ANR	2148792	ExpressionStatement	m_lock -> release ( )	1205:7:31689:31706	2148345	0	True				
ANR	2148793	CallExpression	m_lock -> release ( )		2148345	0					
ANR	2148794	Callee	m_lock -> release		2148345	0					
ANR	2148795	PtrMemberAccess	m_lock -> release		2148345	0					
ANR	2148796	Identifier	m_lock		2148345	0					
ANR	2148797	Identifier	release		2148345	1					
ANR	2148798	ArgumentList			2148345	1					
ANR	2148799	ReturnStatement	return ULOG_UNK_ERROR ;	1207:6:31722:31743	2148345	9	True				
ANR	2148800	Identifier	ULOG_UNK_ERROR		2148345	0					
ANR	2148801	ExpressionStatement	retval2 = event -> getEvent ( m_fp )	1210:4:31762:31795	2148345	1	True				
ANR	2148802	AssignmentExpression	retval2 = event -> getEvent ( m_fp )		2148345	0		=			
ANR	2148803	Identifier	retval2		2148345	0					
ANR	2148804	CallExpression	event -> getEvent ( m_fp )		2148345	1					
ANR	2148805	Callee	event -> getEvent		2148345	0					
ANR	2148806	PtrMemberAccess	event -> getEvent		2148345	0					
ANR	2148807	Identifier	event		2148345	0					
ANR	2148808	Identifier	getEvent		2148345	1					
ANR	2148809	ArgumentList	m_fp		2148345	1					
ANR	2148810	Argument	m_fp		2148345	0					
ANR	2148811	Identifier	m_fp		2148345	0					
ANR	2148812	IfStatement	if ( ! retval1 != 1 || ! retval2 )		2148345	6					
ANR	2148813	Condition	! retval1 != 1 || ! retval2	1214:7:31855:31879	2148345	0	True				
ANR	2148814	OrExpression	! retval1 != 1 || ! retval2		2148345	0		||			
ANR	2148815	EqualityExpression	! retval1 != 1		2148345	0		!=			
ANR	2148816	UnaryOperationExpression	! retval1		2148345	0					
ANR	2148817	UnaryOperator	!		2148345	0					
ANR	2148818	Identifier	retval1		2148345	1					
ANR	2148819	PrimaryExpression	1		2148345	1					
ANR	2148820	UnaryOperationExpression	! retval2		2148345	1					
ANR	2148821	UnaryOperator	!		2148345	0					
ANR	2148822	Identifier	retval2		2148345	1					
ANR	2148823	CompoundStatement		136:3:4043:4043	2148345	1					
ANR	2148824	Statement	dprintf	1216:4:31891:31897	2148345	0	True				
ANR	2148825	Statement	(	1216:11:31898:31898	2148345	1	True				
ANR	2148826	Statement	D_FULLDEBUG	1216:13:31900:31910	2148345	2	True				
ANR	2148827	Statement	","	1216:24:31911:31911	2148345	3	True				
ANR	2148828	Statement	"""ReadUserLog: error reading event """	1216:26:31913:31947	2148345	4	True				
ANR	2148829	Statement	"""on second try\\n"""	1217:7:31956:31972	2148345	5	True				
ANR	2148830	Statement	)	1217:24:31973:31973	2148345	6	True				
ANR	2148831	ExpressionStatement		1217:25:31974:31974	2148345	7	True				
ANR	2148832	Statement	delete	1218:4:31980:31985	2148345	8	True				
ANR	2148833	ExpressionStatement	event	1218:11:31987:31992	2148345	9	True				
ANR	2148834	Identifier	event		2148345	0					
ANR	2148835	ExpressionStatement	event = NULL	1219:4:31998:32010	2148345	10	True				
ANR	2148836	AssignmentExpression	event = NULL		2148345	0		=			
ANR	2148837	Identifier	event		2148345	0					
ANR	2148838	Identifier	NULL		2148345	1					
ANR	2148839	ExpressionStatement	synchronize ( )	1220:4:32053:32067	2148345	11	True				
ANR	2148840	CallExpression	synchronize ( )		2148345	0					
ANR	2148841	Callee	synchronize		2148345	0					
ANR	2148842	Identifier	synchronize		2148345	0					
ANR	2148843	ArgumentList			2148345	1					
ANR	2148844	IfStatement	if ( m_lock -> isLocked ( ) )		2148345	12					
ANR	2148845	Condition	m_lock -> isLocked ( )	1221:8:32077:32094	2148345	0	True				
ANR	2148846	CallExpression	m_lock -> isLocked ( )		2148345	0					
ANR	2148847	Callee	m_lock -> isLocked		2148345	0					
ANR	2148848	PtrMemberAccess	m_lock -> isLocked		2148345	0					
ANR	2148849	Identifier	m_lock		2148345	0					
ANR	2148850	Identifier	isLocked		2148345	1					
ANR	2148851	ArgumentList			2148345	1					
ANR	2148852	CompoundStatement		142:28:4255:4255	2148345	1					
ANR	2148853	ExpressionStatement	m_lock -> release ( )	1222:5:32104:32121	2148345	0	True				
ANR	2148854	CallExpression	m_lock -> release ( )		2148345	0					
ANR	2148855	Callee	m_lock -> release		2148345	0					
ANR	2148856	PtrMemberAccess	m_lock -> release		2148345	0					
ANR	2148857	Identifier	m_lock		2148345	0					
ANR	2148858	Identifier	release		2148345	1					
ANR	2148859	ArgumentList			2148345	1					
ANR	2148860	ReturnStatement	return ULOG_RD_ERROR ;	1224:4:32133:32153	2148345	13	True				
ANR	2148861	Identifier	ULOG_RD_ERROR		2148345	0					
ANR	2148862	ElseStatement	else		2148345	0					
ANR	2148863	CompoundStatement		148:3:4329:4329	2148345	0					
ANR	2148864	IfStatement	if ( synchronize ( ) )		2148345	0					
ANR	2148865	Condition	synchronize ( )	1230:8:32253:32265	2148345	0	True				
ANR	2148866	CallExpression	synchronize ( )		2148345	0					
ANR	2148867	Callee	synchronize		2148345	0					
ANR	2148868	Identifier	synchronize		2148345	0					
ANR	2148869	ArgumentList			2148345	1					
ANR	2148870	CompoundStatement		151:24:4427:4427	2148345	1					
ANR	2148871	IfStatement	if ( m_lock -> isLocked ( ) )		2148345	0					
ANR	2148872	Condition	m_lock -> isLocked ( )	1231:9:32280:32297	2148345	0	True				
ANR	2148873	CallExpression	m_lock -> isLocked ( )		2148345	0					
ANR	2148874	Callee	m_lock -> isLocked		2148345	0					
ANR	2148875	PtrMemberAccess	m_lock -> isLocked		2148345	0					
ANR	2148876	Identifier	m_lock		2148345	0					
ANR	2148877	Identifier	isLocked		2148345	1					
ANR	2148878	ArgumentList			2148345	1					
ANR	2148879	CompoundStatement		152:30:4459:4459	2148345	1					
ANR	2148880	ExpressionStatement	m_lock -> release ( )	1232:6:32309:32326	2148345	0	True				
ANR	2148881	CallExpression	m_lock -> release ( )		2148345	0					
ANR	2148882	Callee	m_lock -> release		2148345	0					
ANR	2148883	PtrMemberAccess	m_lock -> release		2148345	0					
ANR	2148884	Identifier	m_lock		2148345	0					
ANR	2148885	Identifier	release		2148345	1					
ANR	2148886	ArgumentList			2148345	1					
ANR	2148887	ReturnStatement	return ULOG_OK ;	1234:5:32340:32354	2148345	1	True				
ANR	2148888	Identifier	ULOG_OK		2148345	0					
ANR	2148889	ElseStatement	else		2148345	0					
ANR	2148890	CompoundStatement		158:4:4533:4533	2148345	0					
ANR	2148891	Statement	dprintf	1240:5:32467:32473	2148345	0	True				
ANR	2148892	Statement	(	1240:12:32474:32474	2148345	1	True				
ANR	2148893	Statement	D_FULLDEBUG	1240:14:32476:32486	2148345	2	True				
ANR	2148894	Statement	","	1240:25:32487:32487	2148345	3	True				
ANR	2148895	Statement	"""ReadUserLog: got event on second try """	1241:8:32497:32535	2148345	4	True				
ANR	2148896	Statement	"""but synchronize() failed\\n"""	1242:8:32545:32572	2148345	5	True				
ANR	2148897	Statement	)	1242:36:32573:32573	2148345	6	True				
ANR	2148898	ExpressionStatement		1242:37:32574:32574	2148345	7	True				
ANR	2148899	Statement	delete	1243:5:32581:32586	2148345	8	True				
ANR	2148900	ExpressionStatement	event	1243:12:32588:32593	2148345	9	True				
ANR	2148901	Identifier	event		2148345	0					
ANR	2148902	ExpressionStatement	event = NULL	1244:5:32600:32612	2148345	10	True				
ANR	2148903	AssignmentExpression	event = NULL		2148345	0		=			
ANR	2148904	Identifier	event		2148345	0					
ANR	2148905	Identifier	NULL		2148345	1					
ANR	2148906	ExpressionStatement	clearerr ( m_fp )	1245:5:32656:32672	2148345	11	True				
ANR	2148907	CallExpression	clearerr ( m_fp )		2148345	0					
ANR	2148908	Callee	clearerr		2148345	0					
ANR	2148909	Identifier	clearerr		2148345	0					
ANR	2148910	ArgumentList	m_fp		2148345	1					
ANR	2148911	Argument	m_fp		2148345	0					
ANR	2148912	Identifier	m_fp		2148345	0					
ANR	2148913	IfStatement	if ( m_lock -> isLocked ( ) )		2148345	12					
ANR	2148914	Condition	m_lock -> isLocked ( )	1246:9:32683:32700	2148345	0	True				
ANR	2148915	CallExpression	m_lock -> isLocked ( )		2148345	0					
ANR	2148916	Callee	m_lock -> isLocked		2148345	0					
ANR	2148917	PtrMemberAccess	m_lock -> isLocked		2148345	0					
ANR	2148918	Identifier	m_lock		2148345	0					
ANR	2148919	Identifier	isLocked		2148345	1					
ANR	2148920	ArgumentList			2148345	1					
ANR	2148921	CompoundStatement		167:30:4862:4862	2148345	1					
ANR	2148922	ExpressionStatement	m_lock -> release ( )	1247:6:32712:32729	2148345	0	True				
ANR	2148923	CallExpression	m_lock -> release ( )		2148345	0					
ANR	2148924	Callee	m_lock -> release		2148345	0					
ANR	2148925	PtrMemberAccess	m_lock -> release		2148345	0					
ANR	2148926	Identifier	m_lock		2148345	0					
ANR	2148927	Identifier	release		2148345	1					
ANR	2148928	ArgumentList			2148345	1					
ANR	2148929	ReturnStatement	return ULOG_NO_EVENT ;	1249:5:32743:32763	2148345	13	True				
ANR	2148930	Identifier	ULOG_NO_EVENT		2148345	0					
ANR	2148931	ElseStatement	else		2148345	0					
ANR	2148932	CompoundStatement		175:2:4947:4947	2148345	0					
ANR	2148933	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""ReadUserLog: syncronize() failed\\n"" )"	1257:3:32924:32983	2148345	0	True				
ANR	2148934	CallExpression	"dprintf ( D_FULLDEBUG , ""ReadUserLog: syncronize() failed\\n"" )"		2148345	0					
ANR	2148935	Callee	dprintf		2148345	0					
ANR	2148936	Identifier	dprintf		2148345	0					
ANR	2148937	ArgumentList	D_FULLDEBUG		2148345	1					
ANR	2148938	Argument	D_FULLDEBUG		2148345	0					
ANR	2148939	Identifier	D_FULLDEBUG		2148345	0					
ANR	2148940	Argument	"""ReadUserLog: syncronize() failed\\n"""		2148345	1					
ANR	2148941	PrimaryExpression	"""ReadUserLog: syncronize() failed\\n"""		2148345	0					
ANR	2148942	IfStatement	"if ( fseek ( m_fp , filepos , SEEK_SET ) )"		2148345	1					
ANR	2148943	Condition	"fseek ( m_fp , filepos , SEEK_SET )"	1258:7:32992:33022	2148345	0	True				
ANR	2148944	CallExpression	"fseek ( m_fp , filepos , SEEK_SET )"		2148345	0					
ANR	2148945	Callee	fseek		2148345	0					
ANR	2148946	Identifier	fseek		2148345	0					
ANR	2148947	ArgumentList	m_fp		2148345	1					
ANR	2148948	Argument	m_fp		2148345	0					
ANR	2148949	Identifier	m_fp		2148345	0					
ANR	2148950	Argument	filepos		2148345	1					
ANR	2148951	Identifier	filepos		2148345	0					
ANR	2148952	Argument	SEEK_SET		2148345	2					
ANR	2148953	Identifier	SEEK_SET		2148345	0					
ANR	2148954	CompoundStatement		180:3:5186:5186	2148345	1					
ANR	2148955	ExpressionStatement	"dprintf ( D_ALWAYS , ""fseek() failed in ReadUserLog::readEvent"" )"	1260:4:33034:33095	2148345	0	True				
ANR	2148956	CallExpression	"dprintf ( D_ALWAYS , ""fseek() failed in ReadUserLog::readEvent"" )"		2148345	0					
ANR	2148957	Callee	dprintf		2148345	0					
ANR	2148958	Identifier	dprintf		2148345	0					
ANR	2148959	ArgumentList	D_ALWAYS		2148345	1					
ANR	2148960	Argument	D_ALWAYS		2148345	0					
ANR	2148961	Identifier	D_ALWAYS		2148345	0					
ANR	2148962	Argument	"""fseek() failed in ReadUserLog::readEvent"""		2148345	1					
ANR	2148963	PrimaryExpression	"""fseek() failed in ReadUserLog::readEvent"""		2148345	0					
ANR	2148964	IfStatement	if ( m_lock -> isLocked ( ) )		2148345	1					
ANR	2148965	Condition	m_lock -> isLocked ( )	1261:8:33105:33122	2148345	0	True				
ANR	2148966	CallExpression	m_lock -> isLocked ( )		2148345	0					
ANR	2148967	Callee	m_lock -> isLocked		2148345	0					
ANR	2148968	PtrMemberAccess	m_lock -> isLocked		2148345	0					
ANR	2148969	Identifier	m_lock		2148345	0					
ANR	2148970	Identifier	isLocked		2148345	1					
ANR	2148971	ArgumentList			2148345	1					
ANR	2148972	CompoundStatement		182:28:5283:5283	2148345	1					
ANR	2148973	ExpressionStatement	m_lock -> release ( )	1262:5:33132:33149	2148345	0	True				
ANR	2148974	CallExpression	m_lock -> release ( )		2148345	0					
ANR	2148975	Callee	m_lock -> release		2148345	0					
ANR	2148976	PtrMemberAccess	m_lock -> release		2148345	0					
ANR	2148977	Identifier	m_lock		2148345	0					
ANR	2148978	Identifier	release		2148345	1					
ANR	2148979	ArgumentList			2148345	1					
ANR	2148980	ReturnStatement	return ULOG_UNK_ERROR ;	1264:4:33161:33182	2148345	2	True				
ANR	2148981	Identifier	ULOG_UNK_ERROR		2148345	0					
ANR	2148982	ExpressionStatement	clearerr ( m_fp )	1266:3:33192:33207	2148345	2	True				
ANR	2148983	CallExpression	clearerr ( m_fp )		2148345	0					
ANR	2148984	Callee	clearerr		2148345	0					
ANR	2148985	Identifier	clearerr		2148345	0					
ANR	2148986	ArgumentList	m_fp		2148345	1					
ANR	2148987	Argument	m_fp		2148345	0					
ANR	2148988	Identifier	m_fp		2148345	0					
ANR	2148989	Statement	delete	1267:3:33212:33217	2148345	3	True				
ANR	2148990	ExpressionStatement	event	1267:10:33219:33224	2148345	4	True				
ANR	2148991	Identifier	event		2148345	0					
ANR	2148992	ExpressionStatement	event = NULL	1268:3:33229:33241	2148345	5	True				
ANR	2148993	AssignmentExpression	event = NULL		2148345	0		=			
ANR	2148994	Identifier	event		2148345	0					
ANR	2148995	Identifier	NULL		2148345	1					
ANR	2148996	IfStatement	if ( m_lock -> isLocked ( ) )		2148345	6					
ANR	2148997	Condition	m_lock -> isLocked ( )	1269:7:33287:33304	2148345	0	True				
ANR	2148998	CallExpression	m_lock -> isLocked ( )		2148345	0					
ANR	2148999	Callee	m_lock -> isLocked		2148345	0					
ANR	2149000	PtrMemberAccess	m_lock -> isLocked		2148345	0					
ANR	2149001	Identifier	m_lock		2148345	0					
ANR	2149002	Identifier	isLocked		2148345	1					
ANR	2149003	ArgumentList			2148345	1					
ANR	2149004	CompoundStatement		190:27:5465:5465	2148345	1					
ANR	2149005	ExpressionStatement	m_lock -> release ( )	1270:4:33313:33330	2148345	0	True				
ANR	2149006	CallExpression	m_lock -> release ( )		2148345	0					
ANR	2149007	Callee	m_lock -> release		2148345	0					
ANR	2149008	PtrMemberAccess	m_lock -> release		2148345	0					
ANR	2149009	Identifier	m_lock		2148345	0					
ANR	2149010	Identifier	release		2148345	1					
ANR	2149011	ArgumentList			2148345	1					
ANR	2149012	ReturnStatement	return ULOG_NO_EVENT ;	1272:3:33340:33360	2148345	7	True				
ANR	2149013	Identifier	ULOG_NO_EVENT		2148345	0					
ANR	2149014	ElseStatement	else		2148345	0					
ANR	2149015	CompoundStatement		197:1:5534:5534	2148345	0					
ANR	2149016	IfStatement	if ( synchronize ( ) )		2148345	0					
ANR	2149017	Condition	synchronize ( )	1278:6:33439:33452	2148345	0	True				
ANR	2149018	CallExpression	synchronize ( )		2148345	0					
ANR	2149019	Callee	synchronize		2148345	0					
ANR	2149020	Identifier	synchronize		2148345	0					
ANR	2149021	ArgumentList			2148345	1					
ANR	2149022	CompoundStatement		200:2:5615:5615	2148345	1					
ANR	2149023	IfStatement	if ( m_lock -> isLocked ( ) )		2148345	0					
ANR	2149024	Condition	m_lock -> isLocked ( )	1280:7:33466:33483	2148345	0	True				
ANR	2149025	CallExpression	m_lock -> isLocked ( )		2148345	0					
ANR	2149026	Callee	m_lock -> isLocked		2148345	0					
ANR	2149027	PtrMemberAccess	m_lock -> isLocked		2148345	0					
ANR	2149028	Identifier	m_lock		2148345	0					
ANR	2149029	Identifier	isLocked		2148345	1					
ANR	2149030	ArgumentList			2148345	1					
ANR	2149031	CompoundStatement		201:27:5644:5644	2148345	1					
ANR	2149032	ExpressionStatement	m_lock -> release ( )	1281:4:33492:33509	2148345	0	True				
ANR	2149033	CallExpression	m_lock -> release ( )		2148345	0					
ANR	2149034	Callee	m_lock -> release		2148345	0					
ANR	2149035	PtrMemberAccess	m_lock -> release		2148345	0					
ANR	2149036	Identifier	m_lock		2148345	0					
ANR	2149037	Identifier	release		2148345	1					
ANR	2149038	ArgumentList			2148345	1					
ANR	2149039	ReturnStatement	return ULOG_OK ;	1283:3:33519:33533	2148345	1	True				
ANR	2149040	Identifier	ULOG_OK		2148345	0					
ANR	2149041	ElseStatement	else		2148345	0					
ANR	2149042	CompoundStatement		207:2:5706:5706	2148345	0					
ANR	2149043	Statement	dprintf	1289:3:33635:33641	2148345	0	True				
ANR	2149044	Statement	(	1289:10:33642:33642	2148345	1	True				
ANR	2149045	Statement	D_FULLDEBUG	1289:12:33644:33654	2148345	2	True				
ANR	2149046	Statement	","	1289:23:33655:33655	2148345	3	True				
ANR	2149047	Statement	"""ReadUserLog: got event on first try """	1289:25:33657:33694	2148345	4	True				
ANR	2149048	Statement	"""but synchronize() failed\\n"""	1290:5:33701:33728	2148345	5	True				
ANR	2149049	Statement	)	1290:33:33729:33729	2148345	6	True				
ANR	2149050	ExpressionStatement		1290:34:33730:33730	2148345	7	True				
ANR	2149051	Statement	delete	1292:3:33736:33741	2148345	8	True				
ANR	2149052	ExpressionStatement	event	1292:10:33743:33748	2148345	9	True				
ANR	2149053	Identifier	event		2148345	0					
ANR	2149054	ExpressionStatement	event = NULL	1293:3:33753:33765	2148345	10	True				
ANR	2149055	AssignmentExpression	event = NULL		2148345	0		=			
ANR	2149056	Identifier	event		2148345	0					
ANR	2149057	Identifier	NULL		2148345	1					
ANR	2149058	ExpressionStatement	clearerr ( m_fp )	1294:3:33807:33822	2148345	11	True				
ANR	2149059	CallExpression	clearerr ( m_fp )		2148345	0					
ANR	2149060	Callee	clearerr		2148345	0					
ANR	2149061	Identifier	clearerr		2148345	0					
ANR	2149062	ArgumentList	m_fp		2148345	1					
ANR	2149063	Argument	m_fp		2148345	0					
ANR	2149064	Identifier	m_fp		2148345	0					
ANR	2149065	IfStatement	if ( m_lock -> isLocked ( ) )		2148345	12					
ANR	2149066	Condition	m_lock -> isLocked ( )	1295:7:33831:33848	2148345	0	True				
ANR	2149067	CallExpression	m_lock -> isLocked ( )		2148345	0					
ANR	2149068	Callee	m_lock -> isLocked		2148345	0					
ANR	2149069	PtrMemberAccess	m_lock -> isLocked		2148345	0					
ANR	2149070	Identifier	m_lock		2148345	0					
ANR	2149071	Identifier	isLocked		2148345	1					
ANR	2149072	ArgumentList			2148345	1					
ANR	2149073	CompoundStatement		216:28:6010:6010	2148345	1					
ANR	2149074	ExpressionStatement	m_lock -> release ( )	1296:4:33858:33875	2148345	0	True				
ANR	2149075	CallExpression	m_lock -> release ( )		2148345	0					
ANR	2149076	Callee	m_lock -> release		2148345	0					
ANR	2149077	PtrMemberAccess	m_lock -> release		2148345	0					
ANR	2149078	Identifier	m_lock		2148345	0					
ANR	2149079	Identifier	release		2148345	1					
ANR	2149080	ArgumentList			2148345	1					
ANR	2149081	ReturnStatement	return ULOG_NO_EVENT ;	1298:3:33885:33905	2148345	13	True				
ANR	2149082	Identifier	ULOG_NO_EVENT		2148345	0					
ANR	2149083	IfStatement	if ( m_lock -> isLocked ( ) )		2148345	11					
ANR	2149084	Condition	m_lock -> isLocked ( )	1303:5:33944:33961	2148345	0	True				
ANR	2149085	CallExpression	m_lock -> isLocked ( )		2148345	0					
ANR	2149086	Callee	m_lock -> isLocked		2148345	0					
ANR	2149087	PtrMemberAccess	m_lock -> isLocked		2148345	0					
ANR	2149088	Identifier	m_lock		2148345	0					
ANR	2149089	Identifier	isLocked		2148345	1					
ANR	2149090	ArgumentList			2148345	1					
ANR	2149091	CompoundStatement		224:25:6122:6122	2148345	1					
ANR	2149092	ExpressionStatement	m_lock -> release ( )	1304:2:33968:33985	2148345	0	True				
ANR	2149093	CallExpression	m_lock -> release ( )		2148345	0					
ANR	2149094	Callee	m_lock -> release		2148345	0					
ANR	2149095	PtrMemberAccess	m_lock -> release		2148345	0					
ANR	2149096	Identifier	m_lock		2148345	0					
ANR	2149097	Identifier	release		2148345	1					
ANR	2149098	ArgumentList			2148345	1					
ANR	2149099	Statement	dprintf	1307:1:33992:33998	2148345	12	True				
ANR	2149100	Statement	(	1307:8:33999:33999	2148345	13	True				
ANR	2149101	Statement	D_ALWAYS	1307:10:34001:34008	2148345	14	True				
ANR	2149102	Statement	","	1307:18:34009:34009	2148345	15	True				
ANR	2149103	Statement	"""Error: got to the end of """	1307:20:34011:34037	2148345	16	True				
ANR	2149104	Statement	"""ReadUserLog::readEventOld()\\n"""	1308:3:34042:34072	2148345	17	True				
ANR	2149105	Statement	)	1308:34:34073:34073	2148345	18	True				
ANR	2149106	ExpressionStatement		1308:35:34074:34074	2148345	19	True				
ANR	2149107	ReturnStatement	return ULOG_UNK_ERROR ;	1310:1:34078:34099	2148345	20	True				
ANR	2149108	Identifier	ULOG_UNK_ERROR		2148345	0					
ANR	2149109	ReturnType	ULogEventOutcome		2148345	1					
ANR	2149110	Identifier	ReadUserLog :: readEventOld		2148345	2					
ANR	2149111	ParameterList	ULogEvent * & event		2148345	3					
ANR	2149112	Parameter	ULogEvent * & event	1079:27:27820:27837	2148345	0	True				
ANR	2149113	ParameterType	ULogEvent * &		2148345	0					
ANR	2149114	Identifier	event		2148345	1					
ANR	2149115	CFGEntryNode	ENTRY		2148345		True				
ANR	2149116	CFGExitNode	EXIT		2148345		True				
ANR	2149117	Symbol	& eventnumber		2148345						
ANR	2149118	Symbol	ULOG_NO_EVENT		2148345						
ANR	2149119	Symbol	* event		2148345						
ANR	2149120	Symbol	ftell		2148345						
ANR	2149121	Symbol	ULOG_RD_ERROR		2148345						
ANR	2149122	Symbol	ULOG_UNK_ERROR		2148345						
ANR	2149123	Symbol	oldeventnumber		2148345						
ANR	2149124	Symbol	event -> getEvent		2148345						
ANR	2149125	Symbol	fseek		2148345						
ANR	2149126	Symbol	m_lock		2148345						
ANR	2149127	Symbol	filepos		2148345						
ANR	2149128	Symbol	WRITE_LOCK		2148345						
ANR	2149129	Symbol	* m_lock		2148345						
ANR	2149130	Symbol	instantiateEvent		2148345						
ANR	2149131	Symbol	event		2148345						
ANR	2149132	Symbol	m_lock -> isLocked		2148345						
ANR	2149133	Symbol	synchronize		2148345						
ANR	2149134	Symbol	SEEK_SET		2148345						
ANR	2149135	Symbol	eventnumber		2148345						
ANR	2149136	Symbol	NULL		2148345						
ANR	2149137	Symbol	__FILE__		2148345						
ANR	2149138	Symbol	retval1		2148345						
ANR	2149139	Symbol	D_ALWAYS		2148345						
ANR	2149140	Symbol	D_FULLDEBUG		2148345						
ANR	2149141	Symbol	retval2		2148345						
ANR	2149142	Symbol	m_lock -> isUnlocked		2148345						
ANR	2149143	Symbol	__LINE__		2148345						
ANR	2149144	Symbol	m_fp		2148345						
ANR	2149145	Symbol	ULOG_OK		2148345						
ANR	2149146	Symbol	fscanf		2148345						
ANR	2149147	Symbol	feof		2148345						
ANR	2149148	Function	ReadUserLog :: InitFileState	1314:0:34151:34264							
ANR	2149149	FunctionDef	ReadUserLog :: InitFileState (ReadUserLog :: FileState & state)		2149148	0					
ANR	2149150	CompoundStatement		1316:0:34216:34264	2149148	0					
ANR	2149151	ReturnStatement	return ReadUserLogState :: InitState ( state ) ;	1317:1:34219:34262	2149148	0	True				
ANR	2149152	CallExpression	ReadUserLogState :: InitState ( state )		2149148	0					
ANR	2149153	Callee	ReadUserLogState :: InitState		2149148	0					
ANR	2149154	Identifier	ReadUserLogState :: InitState		2149148	0					
ANR	2149155	ArgumentList	state		2149148	1					
ANR	2149156	Argument	state		2149148	0					
ANR	2149157	Identifier	state		2149148	0					
ANR	2149158	ReturnType	bool		2149148	1					
ANR	2149159	Identifier	ReadUserLog :: InitFileState		2149148	2					
ANR	2149160	ParameterList	ReadUserLog :: FileState & state		2149148	3					
ANR	2149161	Parameter	ReadUserLog :: FileState & state	1315:28:34184:34212	2149148	0	True				
ANR	2149162	ParameterType	ReadUserLog :: FileState &		2149148	0					
ANR	2149163	Identifier	state		2149148	1					
ANR	2149164	CFGEntryNode	ENTRY		2149148		True				
ANR	2149165	CFGExitNode	EXIT		2149148		True				
ANR	2149166	Symbol	ReadUserLogState :: InitState		2149148						
ANR	2149167	Symbol	state		2149148						
ANR	2149168	Function	ReadUserLog :: UninitFileState	1321:0:34317:34434							
ANR	2149169	FunctionDef	ReadUserLog :: UninitFileState (ReadUserLog :: FileState & state)		2149168	0					
ANR	2149170	CompoundStatement		1323:0:34384:34434	2149168	0					
ANR	2149171	ReturnStatement	return ReadUserLogState :: UninitState ( state ) ;	1324:1:34387:34432	2149168	0	True				
ANR	2149172	CallExpression	ReadUserLogState :: UninitState ( state )		2149168	0					
ANR	2149173	Callee	ReadUserLogState :: UninitState		2149168	0					
ANR	2149174	Identifier	ReadUserLogState :: UninitState		2149168	0					
ANR	2149175	ArgumentList	state		2149168	1					
ANR	2149176	Argument	state		2149168	0					
ANR	2149177	Identifier	state		2149168	0					
ANR	2149178	ReturnType	bool		2149168	1					
ANR	2149179	Identifier	ReadUserLog :: UninitFileState		2149168	2					
ANR	2149180	ParameterList	ReadUserLog :: FileState & state		2149168	3					
ANR	2149181	Parameter	ReadUserLog :: FileState & state	1322:30:34352:34380	2149168	0	True				
ANR	2149182	ParameterType	ReadUserLog :: FileState &		2149168	0					
ANR	2149183	Identifier	state		2149168	1					
ANR	2149184	CFGEntryNode	ENTRY		2149168		True				
ANR	2149185	CFGExitNode	EXIT		2149168		True				
ANR	2149186	Symbol	ReadUserLogState :: UninitState		2149168						
ANR	2149187	Symbol	state		2149168						
ANR	2149188	Function	ReadUserLog :: GetFileState	1327:0:34437:34637							
ANR	2149189	FunctionDef	ReadUserLog :: GetFileState (ReadUserLog :: FileState & state)		2149188	0					
ANR	2149190	CompoundStatement		1329:0:34507:34637	2149188	0					
ANR	2149191	IfStatement	if ( ! m_initialized )		2149188	0					
ANR	2149192	Condition	! m_initialized	1330:6:34515:34528	2149188	0	True				
ANR	2149193	UnaryOperationExpression	! m_initialized		2149188	0					
ANR	2149194	UnaryOperator	!		2149188	0					
ANR	2149195	Identifier	m_initialized		2149188	1					
ANR	2149196	CompoundStatement		2:23:24:24	2149188	1					
ANR	2149197	ExpressionStatement	"Error ( LOG_ERROR_NOT_INITIALIZED , __LINE__ )"	1331:2:34536:34580	2149188	0	True				
ANR	2149198	CallExpression	"Error ( LOG_ERROR_NOT_INITIALIZED , __LINE__ )"		2149188	0					
ANR	2149199	Callee	Error		2149188	0					
ANR	2149200	Identifier	Error		2149188	0					
ANR	2149201	ArgumentList	LOG_ERROR_NOT_INITIALIZED		2149188	1					
ANR	2149202	Argument	LOG_ERROR_NOT_INITIALIZED		2149188	0					
ANR	2149203	Identifier	LOG_ERROR_NOT_INITIALIZED		2149188	0					
ANR	2149204	Argument	__LINE__		2149188	1					
ANR	2149205	Identifier	__LINE__		2149188	0					
ANR	2149206	ReturnStatement	return false ;	1332:2:34584:34596	2149188	1	True				
ANR	2149207	Identifier	false		2149188	0					
ANR	2149208	ReturnStatement	return m_state -> GetState ( state ) ;	1334:1:34602:34635	2149188	1	True				
ANR	2149209	CallExpression	m_state -> GetState ( state )		2149188	0					
ANR	2149210	Callee	m_state -> GetState		2149188	0					
ANR	2149211	PtrMemberAccess	m_state -> GetState		2149188	0					
ANR	2149212	Identifier	m_state		2149188	0					
ANR	2149213	Identifier	GetState		2149188	1					
ANR	2149214	ArgumentList	state		2149188	1					
ANR	2149215	Argument	state		2149188	0					
ANR	2149216	Identifier	state		2149188	0					
ANR	2149217	ReturnType	bool		2149188	1					
ANR	2149218	Identifier	ReadUserLog :: GetFileState		2149188	2					
ANR	2149219	ParameterList	ReadUserLog :: FileState & state		2149188	3					
ANR	2149220	Parameter	ReadUserLog :: FileState & state	1328:27:34469:34497	2149188	0	True				
ANR	2149221	ParameterType	ReadUserLog :: FileState &		2149188	0					
ANR	2149222	Identifier	state		2149188	1					
ANR	2149223	CFGEntryNode	ENTRY		2149188		True				
ANR	2149224	CFGExitNode	EXIT		2149188		True				
ANR	2149225	Symbol	m_initialized		2149188						
ANR	2149226	Symbol	m_state		2149188						
ANR	2149227	Symbol	m_state -> GetState		2149188						
ANR	2149228	Symbol	* m_state		2149188						
ANR	2149229	Symbol	LOG_ERROR_NOT_INITIALIZED		2149188						
ANR	2149230	Symbol	false		2149188						
ANR	2149231	Symbol	state		2149188						
ANR	2149232	Symbol	__LINE__		2149188						
ANR	2149233	Function	ReadUserLog :: SetFileState	1337:0:34640:34840							
ANR	2149234	FunctionDef	ReadUserLog :: SetFileState (const ReadUserLog :: FileState & state)		2149233	0					
ANR	2149235	CompoundStatement		1339:0:34710:34840	2149233	0					
ANR	2149236	IfStatement	if ( ! m_initialized )		2149233	0					
ANR	2149237	Condition	! m_initialized	1340:6:34718:34731	2149233	0	True				
ANR	2149238	UnaryOperationExpression	! m_initialized		2149233	0					
ANR	2149239	UnaryOperator	!		2149233	0					
ANR	2149240	Identifier	m_initialized		2149233	1					
ANR	2149241	CompoundStatement		2:23:24:24	2149233	1					
ANR	2149242	ExpressionStatement	"Error ( LOG_ERROR_NOT_INITIALIZED , __LINE__ )"	1341:2:34739:34783	2149233	0	True				
ANR	2149243	CallExpression	"Error ( LOG_ERROR_NOT_INITIALIZED , __LINE__ )"		2149233	0					
ANR	2149244	Callee	Error		2149233	0					
ANR	2149245	Identifier	Error		2149233	0					
ANR	2149246	ArgumentList	LOG_ERROR_NOT_INITIALIZED		2149233	1					
ANR	2149247	Argument	LOG_ERROR_NOT_INITIALIZED		2149233	0					
ANR	2149248	Identifier	LOG_ERROR_NOT_INITIALIZED		2149233	0					
ANR	2149249	Argument	__LINE__		2149233	1					
ANR	2149250	Identifier	__LINE__		2149233	0					
ANR	2149251	ReturnStatement	return false ;	1342:2:34787:34799	2149233	1	True				
ANR	2149252	Identifier	false		2149233	0					
ANR	2149253	ReturnStatement	return m_state -> SetState ( state ) ;	1344:1:34805:34838	2149233	1	True				
ANR	2149254	CallExpression	m_state -> SetState ( state )		2149233	0					
ANR	2149255	Callee	m_state -> SetState		2149233	0					
ANR	2149256	PtrMemberAccess	m_state -> SetState		2149233	0					
ANR	2149257	Identifier	m_state		2149233	0					
ANR	2149258	Identifier	SetState		2149233	1					
ANR	2149259	ArgumentList	state		2149233	1					
ANR	2149260	Argument	state		2149233	0					
ANR	2149261	Identifier	state		2149233	0					
ANR	2149262	ReturnType	bool		2149233	1					
ANR	2149263	Identifier	ReadUserLog :: SetFileState		2149233	2					
ANR	2149264	ParameterList	const ReadUserLog :: FileState & state		2149233	3					
ANR	2149265	Parameter	const ReadUserLog :: FileState & state	1338:27:34672:34706	2149233	0	True				
ANR	2149266	ParameterType	const ReadUserLog :: FileState &		2149233	0					
ANR	2149267	Identifier	state		2149233	1					
ANR	2149268	CFGEntryNode	ENTRY		2149233		True				
ANR	2149269	CFGExitNode	EXIT		2149233		True				
ANR	2149270	Symbol	m_initialized		2149233						
ANR	2149271	Symbol	m_state		2149233						
ANR	2149272	Symbol	m_state -> SetState		2149233						
ANR	2149273	Symbol	* m_state		2149233						
ANR	2149274	Symbol	LOG_ERROR_NOT_INITIALIZED		2149233						
ANR	2149275	Symbol	false		2149233						
ANR	2149276	Symbol	state		2149233						
ANR	2149277	Symbol	__LINE__		2149233						
ANR	2149278	Function	ReadUserLog :: Lock	1348:0:34844:35038							
ANR	2149279	FunctionDef	ReadUserLog :: Lock (bool verify_init)		2149278	0					
ANR	2149280	CompoundStatement		1350:0:34887:35038	2149278	0					
ANR	2149281	IfStatement	if ( verify_init )		2149278	0					
ANR	2149282	Condition	verify_init	1351:5:34894:34904	2149278	0	True				
ANR	2149283	Identifier	verify_init		2149278	0					
ANR	2149284	CompoundStatement		2:19:20:20	2149278	1					
ANR	2149285	ExpressionStatement	ASSERT ( m_initialized )	1352:2:34912:34936	2149278	0	True				
ANR	2149286	CallExpression	ASSERT ( m_initialized )		2149278	0					
ANR	2149287	Callee	ASSERT		2149278	0					
ANR	2149288	Identifier	ASSERT		2149278	0					
ANR	2149289	ArgumentList	m_initialized		2149278	1					
ANR	2149290	Argument	m_initialized		2149278	0					
ANR	2149291	Identifier	m_initialized		2149278	0					
ANR	2149292	IfStatement	if ( m_lock -> isUnlocked ( ) )		2149278	1					
ANR	2149293	Condition	m_lock -> isUnlocked ( )	1354:6:34947:34966	2149278	0	True				
ANR	2149294	CallExpression	m_lock -> isUnlocked ( )		2149278	0					
ANR	2149295	Callee	m_lock -> isUnlocked		2149278	0					
ANR	2149296	PtrMemberAccess	m_lock -> isUnlocked		2149278	0					
ANR	2149297	Identifier	m_lock		2149278	0					
ANR	2149298	Identifier	isUnlocked		2149278	1					
ANR	2149299	ArgumentList			2149278	1					
ANR	2149300	CompoundStatement		5:29:82:82	2149278	1					
ANR	2149301	ExpressionStatement	m_lock -> obtain ( WRITE_LOCK )	1355:2:34974:35002	2149278	0	True				
ANR	2149302	CallExpression	m_lock -> obtain ( WRITE_LOCK )		2149278	0					
ANR	2149303	Callee	m_lock -> obtain		2149278	0					
ANR	2149304	PtrMemberAccess	m_lock -> obtain		2149278	0					
ANR	2149305	Identifier	m_lock		2149278	0					
ANR	2149306	Identifier	obtain		2149278	1					
ANR	2149307	ArgumentList	WRITE_LOCK		2149278	1					
ANR	2149308	Argument	WRITE_LOCK		2149278	0					
ANR	2149309	Identifier	WRITE_LOCK		2149278	0					
ANR	2149310	ExpressionStatement	ASSERT ( m_lock -> isLocked ( ) )	1357:1:35008:35036	2149278	2	True				
ANR	2149311	CallExpression	ASSERT ( m_lock -> isLocked ( ) )		2149278	0					
ANR	2149312	Callee	ASSERT		2149278	0					
ANR	2149313	Identifier	ASSERT		2149278	0					
ANR	2149314	ArgumentList	m_lock -> isLocked ( )		2149278	1					
ANR	2149315	Argument	m_lock -> isLocked ( )		2149278	0					
ANR	2149316	CallExpression	m_lock -> isLocked ( )		2149278	0					
ANR	2149317	Callee	m_lock -> isLocked		2149278	0					
ANR	2149318	PtrMemberAccess	m_lock -> isLocked		2149278	0					
ANR	2149319	Identifier	m_lock		2149278	0					
ANR	2149320	Identifier	isLocked		2149278	1					
ANR	2149321	ArgumentList			2149278	1					
ANR	2149322	ReturnType	void		2149278	1					
ANR	2149323	Identifier	ReadUserLog :: Lock		2149278	2					
ANR	2149324	ParameterList	bool verify_init		2149278	3					
ANR	2149325	Parameter	bool verify_init	1349:19:34868:34883	2149278	0	True				
ANR	2149326	ParameterType	bool		2149278	0					
ANR	2149327	Identifier	verify_init		2149278	1					
ANR	2149328	CFGEntryNode	ENTRY		2149278		True				
ANR	2149329	CFGExitNode	EXIT		2149278		True				
ANR	2149330	Symbol	m_lock		2149278						
ANR	2149331	Symbol	m_initialized		2149278						
ANR	2149332	Symbol	WRITE_LOCK		2149278						
ANR	2149333	Symbol	* m_lock		2149278						
ANR	2149334	Symbol	verify_init		2149278						
ANR	2149335	Symbol	m_lock -> isUnlocked		2149278						
ANR	2149336	Symbol	m_lock -> isLocked		2149278						
ANR	2149337	Function	ReadUserLog :: Unlock	1360:0:35041:35228							
ANR	2149338	FunctionDef	ReadUserLog :: Unlock (bool verify_init)		2149337	0					
ANR	2149339	CompoundStatement		1362:0:35086:35228	2149337	0					
ANR	2149340	IfStatement	if ( verify_init )		2149337	0					
ANR	2149341	Condition	verify_init	1363:5:35093:35103	2149337	0	True				
ANR	2149342	Identifier	verify_init		2149337	0					
ANR	2149343	CompoundStatement		2:19:20:20	2149337	1					
ANR	2149344	ExpressionStatement	ASSERT ( m_initialized )	1364:2:35111:35135	2149337	0	True				
ANR	2149345	CallExpression	ASSERT ( m_initialized )		2149337	0					
ANR	2149346	Callee	ASSERT		2149337	0					
ANR	2149347	Identifier	ASSERT		2149337	0					
ANR	2149348	ArgumentList	m_initialized		2149337	1					
ANR	2149349	Argument	m_initialized		2149337	0					
ANR	2149350	Identifier	m_initialized		2149337	0					
ANR	2149351	IfStatement	if ( m_lock -> isLocked ( ) )		2149337	1					
ANR	2149352	Condition	m_lock -> isLocked ( )	1366:6:35146:35164	2149337	0	True				
ANR	2149353	CallExpression	m_lock -> isLocked ( )		2149337	0					
ANR	2149354	Callee	m_lock -> isLocked		2149337	0					
ANR	2149355	PtrMemberAccess	m_lock -> isLocked		2149337	0					
ANR	2149356	Identifier	m_lock		2149337	0					
ANR	2149357	Identifier	isLocked		2149337	1					
ANR	2149358	ArgumentList			2149337	1					
ANR	2149359	CompoundStatement		5:28:81:81	2149337	1					
ANR	2149360	ExpressionStatement	m_lock -> release ( )	1367:2:35172:35190	2149337	0	True				
ANR	2149361	CallExpression	m_lock -> release ( )		2149337	0					
ANR	2149362	Callee	m_lock -> release		2149337	0					
ANR	2149363	PtrMemberAccess	m_lock -> release		2149337	0					
ANR	2149364	Identifier	m_lock		2149337	0					
ANR	2149365	Identifier	release		2149337	1					
ANR	2149366	ArgumentList			2149337	1					
ANR	2149367	ExpressionStatement	ASSERT ( m_lock -> isUnlocked ( ) )	1369:1:35196:35226	2149337	2	True				
ANR	2149368	CallExpression	ASSERT ( m_lock -> isUnlocked ( ) )		2149337	0					
ANR	2149369	Callee	ASSERT		2149337	0					
ANR	2149370	Identifier	ASSERT		2149337	0					
ANR	2149371	ArgumentList	m_lock -> isUnlocked ( )		2149337	1					
ANR	2149372	Argument	m_lock -> isUnlocked ( )		2149337	0					
ANR	2149373	CallExpression	m_lock -> isUnlocked ( )		2149337	0					
ANR	2149374	Callee	m_lock -> isUnlocked		2149337	0					
ANR	2149375	PtrMemberAccess	m_lock -> isUnlocked		2149337	0					
ANR	2149376	Identifier	m_lock		2149337	0					
ANR	2149377	Identifier	isUnlocked		2149337	1					
ANR	2149378	ArgumentList			2149337	1					
ANR	2149379	ReturnType	void		2149337	1					
ANR	2149380	Identifier	ReadUserLog :: Unlock		2149337	2					
ANR	2149381	ParameterList	bool verify_init		2149337	3					
ANR	2149382	Parameter	bool verify_init	1361:21:35067:35082	2149337	0	True				
ANR	2149383	ParameterType	bool		2149337	0					
ANR	2149384	Identifier	verify_init		2149337	1					
ANR	2149385	CFGEntryNode	ENTRY		2149337		True				
ANR	2149386	CFGExitNode	EXIT		2149337		True				
ANR	2149387	Symbol	m_lock		2149337						
ANR	2149388	Symbol	m_initialized		2149337						
ANR	2149389	Symbol	* m_lock		2149337						
ANR	2149390	Symbol	verify_init		2149337						
ANR	2149391	Symbol	m_lock -> isUnlocked		2149337						
ANR	2149392	Symbol	m_lock -> isLocked		2149337						
ANR	2149393	Function	ReadUserLog :: synchronize	1372:0:35231:35577							
ANR	2149394	FunctionDef	ReadUserLog :: synchronize ()		2149393	0					
ANR	2149395	CompoundStatement		1374:0:35270:35577	2149393	0					
ANR	2149396	IfStatement	if ( ! m_initialized )		2149393	0					
ANR	2149397	Condition	! m_initialized	1375:6:35278:35291	2149393	0	True				
ANR	2149398	UnaryOperationExpression	! m_initialized		2149393	0					
ANR	2149399	UnaryOperator	!		2149393	0					
ANR	2149400	Identifier	m_initialized		2149393	1					
ANR	2149401	CompoundStatement		2:23:24:24	2149393	1					
ANR	2149402	ExpressionStatement	"Error ( LOG_ERROR_NOT_INITIALIZED , __LINE__ )"	1376:2:35299:35343	2149393	0	True				
ANR	2149403	CallExpression	"Error ( LOG_ERROR_NOT_INITIALIZED , __LINE__ )"		2149393	0					
ANR	2149404	Callee	Error		2149393	0					
ANR	2149405	Identifier	Error		2149393	0					
ANR	2149406	ArgumentList	LOG_ERROR_NOT_INITIALIZED		2149393	1					
ANR	2149407	Argument	LOG_ERROR_NOT_INITIALIZED		2149393	0					
ANR	2149408	Identifier	LOG_ERROR_NOT_INITIALIZED		2149393	0					
ANR	2149409	Argument	__LINE__		2149393	1					
ANR	2149410	Identifier	__LINE__		2149393	0					
ANR	2149411	ReturnStatement	return false ;	1377:2:35347:35359	2149393	1	True				
ANR	2149412	Identifier	false		2149393	0					
ANR	2149413	IdentifierDeclStatement	const int bufSize = 512 ;	1380:1:35366:35389	2149393	1	True				
ANR	2149414	IdentifierDecl	bufSize = 512		2149393	0					
ANR	2149415	IdentifierDeclType	const int		2149393	0					
ANR	2149416	Identifier	bufSize		2149393	1					
ANR	2149417	AssignmentExpression	bufSize = 512		2149393	2		=			
ANR	2149418	Identifier	bufSize		2149393	0					
ANR	2149419	PrimaryExpression	512		2149393	1					
ANR	2149420	IdentifierDeclStatement	char buffer [ bufSize ] ;	1381:4:35395:35415	2149393	2	True				
ANR	2149421	IdentifierDecl	buffer [ bufSize ]		2149393	0					
ANR	2149422	IdentifierDeclType	char [ bufSize ]		2149393	0					
ANR	2149423	Identifier	buffer		2149393	1					
ANR	2149424	Identifier	bufSize		2149393	2					
ANR	2149425	WhileStatement	"while ( fgets ( buffer , bufSize , m_fp ) != NULL )"		2149393	3					
ANR	2149426	Condition	"fgets ( buffer , bufSize , m_fp ) != NULL"	1382:11:35428:35465	2149393	0	True				
ANR	2149427	EqualityExpression	"fgets ( buffer , bufSize , m_fp ) != NULL"		2149393	0		!=			
ANR	2149428	CallExpression	"fgets ( buffer , bufSize , m_fp )"		2149393	0					
ANR	2149429	Callee	fgets		2149393	0					
ANR	2149430	Identifier	fgets		2149393	0					
ANR	2149431	ArgumentList	buffer		2149393	1					
ANR	2149432	Argument	buffer		2149393	0					
ANR	2149433	Identifier	buffer		2149393	0					
ANR	2149434	Argument	bufSize		2149393	1					
ANR	2149435	Identifier	bufSize		2149393	0					
ANR	2149436	Argument	m_fp		2149393	2					
ANR	2149437	Identifier	m_fp		2149393	0					
ANR	2149438	Identifier	NULL		2149393	1					
ANR	2149439	CompoundStatement		9:52:198:198	2149393	1					
ANR	2149440	IfStatement	"if ( strcmp ( buffer , SynchDelimiter ) == 0 )"		2149393	0					
ANR	2149441	Condition	"strcmp ( buffer , SynchDelimiter ) == 0"	1383:6:35477:35512	2149393	0	True				
ANR	2149442	EqualityExpression	"strcmp ( buffer , SynchDelimiter ) == 0"		2149393	0		==			
ANR	2149443	CallExpression	"strcmp ( buffer , SynchDelimiter )"		2149393	0					
ANR	2149444	Callee	strcmp		2149393	0					
ANR	2149445	Identifier	strcmp		2149393	0					
ANR	2149446	ArgumentList	buffer		2149393	1					
ANR	2149447	Argument	buffer		2149393	0					
ANR	2149448	Identifier	buffer		2149393	0					
ANR	2149449	Argument	SynchDelimiter		2149393	1					
ANR	2149450	Identifier	SynchDelimiter		2149393	0					
ANR	2149451	PrimaryExpression	0		2149393	1					
ANR	2149452	CompoundStatement		10:45:245:245	2149393	1					
ANR	2149453	ReturnStatement	return true ;	1384:12:35530:35541	2149393	0	True				
ANR	2149454	Identifier	true		2149393	0					
ANR	2149455	ReturnStatement	return false ;	1387:4:35563:35575	2149393	4	True				
ANR	2149456	Identifier	false		2149393	0					
ANR	2149457	ReturnType	bool		2149393	1					
ANR	2149458	Identifier	ReadUserLog :: synchronize		2149393	2					
ANR	2149459	ParameterList			2149393	3					
ANR	2149460	CFGEntryNode	ENTRY		2149393		True				
ANR	2149461	CFGExitNode	EXIT		2149393		True				
ANR	2149462	Symbol	strcmp		2149393						
ANR	2149463	Symbol	m_initialized		2149393						
ANR	2149464	Symbol	NULL		2149393						
ANR	2149465	Symbol	LOG_ERROR_NOT_INITIALIZED		2149393						
ANR	2149466	Symbol	false		2149393						
ANR	2149467	Symbol	true		2149393						
ANR	2149468	Symbol	bufSize		2149393						
ANR	2149469	Symbol	buffer		2149393						
ANR	2149470	Symbol	SynchDelimiter		2149393						
ANR	2149471	Symbol	__LINE__		2149393						
ANR	2149472	Symbol	m_fp		2149393						
ANR	2149473	Symbol	fgets		2149393						
ANR	2149474	Function	ReadUserLog :: outputFilePos	1390:0:35580:35745							
ANR	2149475	FunctionDef	ReadUserLog :: outputFilePos (const char * pszWhereAmI)		2149474	0					
ANR	2149476	CompoundStatement		1392:0:35639:35745	2149474	0					
ANR	2149477	ExpressionStatement	ASSERT ( m_initialized )	1393:1:35642:35666	2149474	0	True				
ANR	2149478	CallExpression	ASSERT ( m_initialized )		2149474	0					
ANR	2149479	Callee	ASSERT		2149474	0					
ANR	2149480	Identifier	ASSERT		2149474	0					
ANR	2149481	ArgumentList	m_initialized		2149474	1					
ANR	2149482	Argument	m_initialized		2149474	0					
ANR	2149483	Identifier	m_initialized		2149474	0					
ANR	2149484	ExpressionStatement	"dprintf ( D_ALWAYS , ""Filepos: %ld, context: %s\\n"" , ftell ( m_fp ) , pszWhereAmI )"	1394:1:35669:35743	2149474	1	True				
ANR	2149485	CallExpression	"dprintf ( D_ALWAYS , ""Filepos: %ld, context: %s\\n"" , ftell ( m_fp ) , pszWhereAmI )"		2149474	0					
ANR	2149486	Callee	dprintf		2149474	0					
ANR	2149487	Identifier	dprintf		2149474	0					
ANR	2149488	ArgumentList	D_ALWAYS		2149474	1					
ANR	2149489	Argument	D_ALWAYS		2149474	0					
ANR	2149490	Identifier	D_ALWAYS		2149474	0					
ANR	2149491	Argument	"""Filepos: %ld, context: %s\\n"""		2149474	1					
ANR	2149492	PrimaryExpression	"""Filepos: %ld, context: %s\\n"""		2149474	0					
ANR	2149493	Argument	ftell ( m_fp )		2149474	2					
ANR	2149494	CallExpression	ftell ( m_fp )		2149474	0					
ANR	2149495	Callee	ftell		2149474	0					
ANR	2149496	Identifier	ftell		2149474	0					
ANR	2149497	ArgumentList	m_fp		2149474	1					
ANR	2149498	Argument	m_fp		2149474	0					
ANR	2149499	Identifier	m_fp		2149474	0					
ANR	2149500	Argument	pszWhereAmI		2149474	3					
ANR	2149501	Identifier	pszWhereAmI		2149474	0					
ANR	2149502	ReturnType	void		2149474	1					
ANR	2149503	Identifier	ReadUserLog :: outputFilePos		2149474	2					
ANR	2149504	ParameterList	const char * pszWhereAmI		2149474	3					
ANR	2149505	Parameter	const char * pszWhereAmI	1391:28:35613:35635	2149474	0	True				
ANR	2149506	ParameterType	const char *		2149474	0					
ANR	2149507	Identifier	pszWhereAmI		2149474	1					
ANR	2149508	CFGEntryNode	ENTRY		2149474		True				
ANR	2149509	CFGExitNode	EXIT		2149474		True				
ANR	2149510	Symbol	m_initialized		2149474						
ANR	2149511	Symbol	ftell		2149474						
ANR	2149512	Symbol	D_ALWAYS		2149474						
ANR	2149513	Symbol	pszWhereAmI		2149474						
ANR	2149514	Symbol	m_fp		2149474						
ANR	2149515	Function	ReadUserLog :: setIsXMLLog	1397:0:35748:35938							
ANR	2149516	FunctionDef	ReadUserLog :: setIsXMLLog (bool is_xml)		2149515	0					
ANR	2149517	CompoundStatement		1399:0:35793:35938	2149515	0					
ANR	2149518	IfStatement	if ( is_xml )		2149515	0					
ANR	2149519	Condition	is_xml	1400:5:35800:35805	2149515	0	True				
ANR	2149520	Identifier	is_xml		2149515	0					
ANR	2149521	CompoundStatement		2:14:15:15	2149515	1					
ANR	2149522	ExpressionStatement	m_state -> LogType ( ReadUserLogState :: LOG_TYPE_XML )	1401:5:35816:35866	2149515	0	True				
ANR	2149523	CallExpression	m_state -> LogType ( ReadUserLogState :: LOG_TYPE_XML )		2149515	0					
ANR	2149524	Callee	m_state -> LogType		2149515	0					
ANR	2149525	PtrMemberAccess	m_state -> LogType		2149515	0					
ANR	2149526	Identifier	m_state		2149515	0					
ANR	2149527	Identifier	LogType		2149515	1					
ANR	2149528	ArgumentList	ReadUserLogState :: LOG_TYPE_XML		2149515	1					
ANR	2149529	Argument	ReadUserLogState :: LOG_TYPE_XML		2149515	0					
ANR	2149530	Identifier	ReadUserLogState :: LOG_TYPE_XML		2149515	0					
ANR	2149531	ElseStatement	else		2149515	0					
ANR	2149532	CompoundStatement		4:8:82:82	2149515	0					
ANR	2149533	ExpressionStatement	m_state -> LogType ( ReadUserLogState :: LOG_TYPE_OLD )	1403:5:35883:35933	2149515	0	True				
ANR	2149534	CallExpression	m_state -> LogType ( ReadUserLogState :: LOG_TYPE_OLD )		2149515	0					
ANR	2149535	Callee	m_state -> LogType		2149515	0					
ANR	2149536	PtrMemberAccess	m_state -> LogType		2149515	0					
ANR	2149537	Identifier	m_state		2149515	0					
ANR	2149538	Identifier	LogType		2149515	1					
ANR	2149539	ArgumentList	ReadUserLogState :: LOG_TYPE_OLD		2149515	1					
ANR	2149540	Argument	ReadUserLogState :: LOG_TYPE_OLD		2149515	0					
ANR	2149541	Identifier	ReadUserLogState :: LOG_TYPE_OLD		2149515	0					
ANR	2149542	ReturnType	void		2149515	1					
ANR	2149543	Identifier	ReadUserLog :: setIsXMLLog		2149515	2					
ANR	2149544	ParameterList	bool is_xml		2149515	3					
ANR	2149545	Parameter	bool is_xml	1398:26:35779:35789	2149515	0	True				
ANR	2149546	ParameterType	bool		2149515	0					
ANR	2149547	Identifier	is_xml		2149515	1					
ANR	2149548	CFGEntryNode	ENTRY		2149515		True				
ANR	2149549	CFGExitNode	EXIT		2149515		True				
ANR	2149550	Symbol	m_state		2149515						
ANR	2149551	Symbol	ReadUserLogState :: LOG_TYPE_XML		2149515						
ANR	2149552	Symbol	ReadUserLogState :: LOG_TYPE_OLD		2149515						
ANR	2149553	Symbol	is_xml		2149515						
ANR	2149554	Function	ReadUserLog :: getIsXMLLog	1407:0:35941:36053							
ANR	2149555	FunctionDef	ReadUserLog :: getIsXMLLog ()		2149554	0					
ANR	2149556	CompoundStatement		1409:0:35985:36053	2149554	0					
ANR	2149557	ReturnStatement	return ( m_state -> IsLogType ( ReadUserLogState :: LOG_TYPE_XML ) ) ;	1410:1:35988:36051	2149554	0	True				
ANR	2149558	CallExpression	m_state -> IsLogType ( ReadUserLogState :: LOG_TYPE_XML )		2149554	0					
ANR	2149559	Callee	m_state -> IsLogType		2149554	0					
ANR	2149560	PtrMemberAccess	m_state -> IsLogType		2149554	0					
ANR	2149561	Identifier	m_state		2149554	0					
ANR	2149562	Identifier	IsLogType		2149554	1					
ANR	2149563	ArgumentList	ReadUserLogState :: LOG_TYPE_XML		2149554	1					
ANR	2149564	Argument	ReadUserLogState :: LOG_TYPE_XML		2149554	0					
ANR	2149565	Identifier	ReadUserLogState :: LOG_TYPE_XML		2149554	0					
ANR	2149566	ReturnType	bool		2149554	1					
ANR	2149567	Identifier	ReadUserLog :: getIsXMLLog		2149554	2					
ANR	2149568	ParameterList			2149554	3					
ANR	2149569	CFGEntryNode	ENTRY		2149554		True				
ANR	2149570	CFGExitNode	EXIT		2149554		True				
ANR	2149571	Symbol	m_state		2149554						
ANR	2149572	Symbol	m_state -> IsLogType		2149554						
ANR	2149573	Symbol	* m_state		2149554						
ANR	2149574	Symbol	ReadUserLogState :: LOG_TYPE_XML		2149554						
ANR	2149575	Function	ReadUserLog :: setIsOldLog	1413:0:36056:36250							
ANR	2149576	FunctionDef	ReadUserLog :: setIsOldLog (bool is_old)		2149575	0					
ANR	2149577	CompoundStatement		1415:0:36101:36250	2149575	0					
ANR	2149578	IfStatement	if ( is_old )		2149575	0					
ANR	2149579	Condition	is_old	1416:5:36108:36113	2149575	0	True				
ANR	2149580	Identifier	is_old		2149575	0					
ANR	2149581	CompoundStatement		2:14:15:15	2149575	1					
ANR	2149582	ExpressionStatement	m_state -> LogType ( ReadUserLogState :: LOG_TYPE_OLD )	1417:5:36124:36174	2149575	0	True				
ANR	2149583	CallExpression	m_state -> LogType ( ReadUserLogState :: LOG_TYPE_OLD )		2149575	0					
ANR	2149584	Callee	m_state -> LogType		2149575	0					
ANR	2149585	PtrMemberAccess	m_state -> LogType		2149575	0					
ANR	2149586	Identifier	m_state		2149575	0					
ANR	2149587	Identifier	LogType		2149575	1					
ANR	2149588	ArgumentList	ReadUserLogState :: LOG_TYPE_OLD		2149575	1					
ANR	2149589	Argument	ReadUserLogState :: LOG_TYPE_OLD		2149575	0					
ANR	2149590	Identifier	ReadUserLogState :: LOG_TYPE_OLD		2149575	0					
ANR	2149591	ElseStatement	else		2149575	0					
ANR	2149592	CompoundStatement		4:8:82:82	2149575	0					
ANR	2149593	ExpressionStatement	m_state -> LogType ( ReadUserLogState :: LOG_TYPE_UNKNOWN )	1419:5:36191:36245	2149575	0	True				
ANR	2149594	CallExpression	m_state -> LogType ( ReadUserLogState :: LOG_TYPE_UNKNOWN )		2149575	0					
ANR	2149595	Callee	m_state -> LogType		2149575	0					
ANR	2149596	PtrMemberAccess	m_state -> LogType		2149575	0					
ANR	2149597	Identifier	m_state		2149575	0					
ANR	2149598	Identifier	LogType		2149575	1					
ANR	2149599	ArgumentList	ReadUserLogState :: LOG_TYPE_UNKNOWN		2149575	1					
ANR	2149600	Argument	ReadUserLogState :: LOG_TYPE_UNKNOWN		2149575	0					
ANR	2149601	Identifier	ReadUserLogState :: LOG_TYPE_UNKNOWN		2149575	0					
ANR	2149602	ReturnType	void		2149575	1					
ANR	2149603	Identifier	ReadUserLog :: setIsOldLog		2149575	2					
ANR	2149604	ParameterList	bool is_old		2149575	3					
ANR	2149605	Parameter	bool is_old	1414:26:36087:36097	2149575	0	True				
ANR	2149606	ParameterType	bool		2149575	0					
ANR	2149607	Identifier	is_old		2149575	1					
ANR	2149608	CFGEntryNode	ENTRY		2149575		True				
ANR	2149609	CFGExitNode	EXIT		2149575		True				
ANR	2149610	Symbol	m_state		2149575						
ANR	2149611	Symbol	ReadUserLogState :: LOG_TYPE_OLD		2149575						
ANR	2149612	Symbol	is_old		2149575						
ANR	2149613	Symbol	ReadUserLogState :: LOG_TYPE_UNKNOWN		2149575						
ANR	2149614	Function	ReadUserLog :: getIsOldLog	1423:0:36253:36365							
ANR	2149615	FunctionDef	ReadUserLog :: getIsOldLog ()		2149614	0					
ANR	2149616	CompoundStatement		1425:0:36297:36365	2149614	0					
ANR	2149617	ReturnStatement	return ( m_state -> IsLogType ( ReadUserLogState :: LOG_TYPE_OLD ) ) ;	1426:1:36300:36363	2149614	0	True				
ANR	2149618	CallExpression	m_state -> IsLogType ( ReadUserLogState :: LOG_TYPE_OLD )		2149614	0					
ANR	2149619	Callee	m_state -> IsLogType		2149614	0					
ANR	2149620	PtrMemberAccess	m_state -> IsLogType		2149614	0					
ANR	2149621	Identifier	m_state		2149614	0					
ANR	2149622	Identifier	IsLogType		2149614	1					
ANR	2149623	ArgumentList	ReadUserLogState :: LOG_TYPE_OLD		2149614	1					
ANR	2149624	Argument	ReadUserLogState :: LOG_TYPE_OLD		2149614	0					
ANR	2149625	Identifier	ReadUserLogState :: LOG_TYPE_OLD		2149614	0					
ANR	2149626	ReturnType	bool		2149614	1					
ANR	2149627	Identifier	ReadUserLog :: getIsOldLog		2149614	2					
ANR	2149628	ParameterList			2149614	3					
ANR	2149629	CFGEntryNode	ENTRY		2149614		True				
ANR	2149630	CFGExitNode	EXIT		2149614		True				
ANR	2149631	Symbol	m_state		2149614						
ANR	2149632	Symbol	m_state -> IsLogType		2149614						
ANR	2149633	Symbol	* m_state		2149614						
ANR	2149634	Symbol	ReadUserLogState :: LOG_TYPE_OLD		2149614						
ANR	2149635	Function	ReadUserLog :: clear	1429:0:36368:36756							
ANR	2149636	FunctionDef	ReadUserLog :: clear ()		2149635	0					
ANR	2149637	CompoundStatement		1431:0:36400:36756	2149635	0					
ANR	2149638	ExpressionStatement	m_initialized = false	1432:1:36403:36424	2149635	0	True				
ANR	2149639	AssignmentExpression	m_initialized = false		2149635	0		=			
ANR	2149640	Identifier	m_initialized		2149635	0					
ANR	2149641	Identifier	false		2149635	1					
ANR	2149642	ExpressionStatement	m_missed_event = false	1433:1:36427:36449	2149635	1	True				
ANR	2149643	AssignmentExpression	m_missed_event = false		2149635	0		=			
ANR	2149644	Identifier	m_missed_event		2149635	0					
ANR	2149645	Identifier	false		2149635	1					
ANR	2149646	ExpressionStatement	m_state = NULL	1434:1:36452:36466	2149635	2	True				
ANR	2149647	AssignmentExpression	m_state = NULL		2149635	0		=			
ANR	2149648	Identifier	m_state		2149635	0					
ANR	2149649	Identifier	NULL		2149635	1					
ANR	2149650	ExpressionStatement	m_match = NULL	1435:1:36469:36483	2149635	3	True				
ANR	2149651	AssignmentExpression	m_match = NULL		2149635	0		=			
ANR	2149652	Identifier	m_match		2149635	0					
ANR	2149653	Identifier	NULL		2149635	1					
ANR	2149654	ExpressionStatement	m_fd = - 1	1436:4:36489:36498	2149635	4	True				
ANR	2149655	AssignmentExpression	m_fd = - 1		2149635	0		=			
ANR	2149656	Identifier	m_fd		2149635	0					
ANR	2149657	UnaryOperationExpression	- 1		2149635	1					
ANR	2149658	UnaryOperator	-		2149635	0					
ANR	2149659	PrimaryExpression	1		2149635	1					
ANR	2149660	ExpressionStatement	m_fp = NULL	1437:1:36501:36512	2149635	5	True				
ANR	2149661	AssignmentExpression	m_fp = NULL		2149635	0		=			
ANR	2149662	Identifier	m_fp		2149635	0					
ANR	2149663	Identifier	NULL		2149635	1					
ANR	2149664	ExpressionStatement	m_lock = NULL	1438:1:36515:36528	2149635	6	True				
ANR	2149665	AssignmentExpression	m_lock = NULL		2149635	0		=			
ANR	2149666	Identifier	m_lock		2149635	0					
ANR	2149667	Identifier	NULL		2149635	1					
ANR	2149668	ExpressionStatement	m_lock_rot = - 1	1439:1:36531:36546	2149635	7	True				
ANR	2149669	AssignmentExpression	m_lock_rot = - 1		2149635	0		=			
ANR	2149670	Identifier	m_lock_rot		2149635	0					
ANR	2149671	UnaryOperationExpression	- 1		2149635	1					
ANR	2149672	UnaryOperator	-		2149635	0					
ANR	2149673	PrimaryExpression	1		2149635	1					
ANR	2149674	ExpressionStatement	m_close_file = false	1441:1:36550:36570	2149635	8	True				
ANR	2149675	AssignmentExpression	m_close_file = false		2149635	0		=			
ANR	2149676	Identifier	m_close_file		2149635	0					
ANR	2149677	Identifier	false		2149635	1					
ANR	2149678	ExpressionStatement	m_read_only = false	1442:1:36573:36592	2149635	9	True				
ANR	2149679	AssignmentExpression	m_read_only = false		2149635	0		=			
ANR	2149680	Identifier	m_read_only		2149635	0					
ANR	2149681	Identifier	false		2149635	1					
ANR	2149682	ExpressionStatement	m_enable_close = true	1443:1:36595:36616	2149635	10	True				
ANR	2149683	AssignmentExpression	m_enable_close = true		2149635	0		=			
ANR	2149684	Identifier	m_enable_close		2149635	0					
ANR	2149685	Identifier	true		2149635	1					
ANR	2149686	ExpressionStatement	m_handle_rot = false	1444:1:36619:36639	2149635	11	True				
ANR	2149687	AssignmentExpression	m_handle_rot = false		2149635	0		=			
ANR	2149688	Identifier	m_handle_rot		2149635	0					
ANR	2149689	Identifier	false		2149635	1					
ANR	2149690	ExpressionStatement	m_lock_enable = false	1445:1:36642:36663	2149635	12	True				
ANR	2149691	AssignmentExpression	m_lock_enable = false		2149635	0		=			
ANR	2149692	Identifier	m_lock_enable		2149635	0					
ANR	2149693	Identifier	false		2149635	1					
ANR	2149694	ExpressionStatement	m_max_rotations = 0	1446:1:36666:36685	2149635	13	True				
ANR	2149695	AssignmentExpression	m_max_rotations = 0		2149635	0		=			
ANR	2149696	Identifier	m_max_rotations		2149635	0					
ANR	2149697	PrimaryExpression	0		2149635	1					
ANR	2149698	ExpressionStatement	m_read_header = false	1447:1:36688:36709	2149635	14	True				
ANR	2149699	AssignmentExpression	m_read_header = false		2149635	0		=			
ANR	2149700	Identifier	m_read_header		2149635	0					
ANR	2149701	Identifier	false		2149635	1					
ANR	2149702	ExpressionStatement	m_error = LOG_ERROR_NONE	1449:1:36713:36737	2149635	15	True				
ANR	2149703	AssignmentExpression	m_error = LOG_ERROR_NONE		2149635	0		=			
ANR	2149704	Identifier	m_error		2149635	0					
ANR	2149705	Identifier	LOG_ERROR_NONE		2149635	1					
ANR	2149706	ExpressionStatement	m_line_num = 0	1450:1:36740:36754	2149635	16	True				
ANR	2149707	AssignmentExpression	m_line_num = 0		2149635	0		=			
ANR	2149708	Identifier	m_line_num		2149635	0					
ANR	2149709	PrimaryExpression	0		2149635	1					
ANR	2149710	ReturnType	void		2149635	1					
ANR	2149711	Identifier	ReadUserLog :: clear		2149635	2					
ANR	2149712	ParameterList			2149635	3					
ANR	2149713	CFGEntryNode	ENTRY		2149635		True				
ANR	2149714	CFGExitNode	EXIT		2149635		True				
ANR	2149715	Symbol	m_initialized		2149635						
ANR	2149716	Symbol	m_match		2149635						
ANR	2149717	Symbol	m_fd		2149635						
ANR	2149718	Symbol	m_read_only		2149635						
ANR	2149719	Symbol	NULL		2149635						
ANR	2149720	Symbol	m_line_num		2149635						
ANR	2149721	Symbol	m_lock_enable		2149635						
ANR	2149722	Symbol	false		2149635						
ANR	2149723	Symbol	m_lock_rot		2149635						
ANR	2149724	Symbol	m_enable_close		2149635						
ANR	2149725	Symbol	m_missed_event		2149635						
ANR	2149726	Symbol	m_read_header		2149635						
ANR	2149727	Symbol	m_fp		2149635						
ANR	2149728	Symbol	m_close_file		2149635						
ANR	2149729	Symbol	m_handle_rot		2149635						
ANR	2149730	Symbol	m_lock		2149635						
ANR	2149731	Symbol	LOG_ERROR_NONE		2149635						
ANR	2149732	Symbol	m_state		2149635						
ANR	2149733	Symbol	true		2149635						
ANR	2149734	Symbol	m_max_rotations		2149635						
ANR	2149735	Symbol	m_error		2149635						
ANR	2149736	Function	ReadUserLog :: releaseResources	1453:0:36759:36976							
ANR	2149737	FunctionDef	ReadUserLog :: releaseResources ()		2149736	0					
ANR	2149738	CompoundStatement		1455:0:36802:36976	2149736	0					
ANR	2149739	IfStatement	if ( m_match )		2149736	0					
ANR	2149740	Condition	m_match	1456:6:36810:36816	2149736	0	True				
ANR	2149741	Identifier	m_match		2149736	0					
ANR	2149742	CompoundStatement		2:16:17:17	2149736	1					
ANR	2149743	Statement	delete	1457:2:36824:36829	2149736	0	True				
ANR	2149744	ExpressionStatement	m_match	1457:9:36831:36838	2149736	1	True				
ANR	2149745	Identifier	m_match		2149736	0					
ANR	2149746	ExpressionStatement	m_match = NULL	1458:2:36842:36856	2149736	2	True				
ANR	2149747	AssignmentExpression	m_match = NULL		2149736	0		=			
ANR	2149748	Identifier	m_match		2149736	0					
ANR	2149749	Identifier	NULL		2149736	1					
ANR	2149750	IfStatement	if ( m_state )		2149736	1					
ANR	2149751	Condition	m_state	1461:6:36868:36874	2149736	0	True				
ANR	2149752	Identifier	m_state		2149736	0					
ANR	2149753	CompoundStatement		7:16:75:75	2149736	1					
ANR	2149754	Statement	delete	1462:2:36882:36887	2149736	0	True				
ANR	2149755	ExpressionStatement	m_state	1462:9:36889:36896	2149736	1	True				
ANR	2149756	Identifier	m_state		2149736	0					
ANR	2149757	ExpressionStatement	m_state = NULL	1463:2:36900:36914	2149736	2	True				
ANR	2149758	AssignmentExpression	m_state = NULL		2149736	0		=			
ANR	2149759	Identifier	m_state		2149736	0					
ANR	2149760	Identifier	NULL		2149736	1					
ANR	2149761	ExpressionStatement	CloseLogFile ( true )	1466:1:36921:36941	2149736	2	True				
ANR	2149762	CallExpression	CloseLogFile ( true )		2149736	0					
ANR	2149763	Callee	CloseLogFile		2149736	0					
ANR	2149764	Identifier	CloseLogFile		2149736	0					
ANR	2149765	ArgumentList	true		2149736	1					
ANR	2149766	Argument	true		2149736	0					
ANR	2149767	Identifier	true		2149736	0					
ANR	2149768	Statement	delete	1468:1:36945:36950	2149736	3	True				
ANR	2149769	ExpressionStatement	m_lock	1468:8:36952:36958	2149736	4	True				
ANR	2149770	Identifier	m_lock		2149736	0					
ANR	2149771	ExpressionStatement	m_lock = NULL	1469:1:36961:36974	2149736	5	True				
ANR	2149772	AssignmentExpression	m_lock = NULL		2149736	0		=			
ANR	2149773	Identifier	m_lock		2149736	0					
ANR	2149774	Identifier	NULL		2149736	1					
ANR	2149775	ReturnType	void		2149736	1					
ANR	2149776	Identifier	ReadUserLog :: releaseResources		2149736	2					
ANR	2149777	ParameterList			2149736	3					
ANR	2149778	CFGEntryNode	ENTRY		2149736		True				
ANR	2149779	CFGExitNode	EXIT		2149736		True				
ANR	2149780	Symbol	m_lock		2149736						
ANR	2149781	Symbol	m_state		2149736						
ANR	2149782	Symbol	m_match		2149736						
ANR	2149783	Symbol	NULL		2149736						
ANR	2149784	Symbol	true		2149736						
ANR	2149785	Function	ReadUserLog :: getErrorInfo	1472:0:36979:37503							
ANR	2149786	FunctionDef	"ReadUserLog :: getErrorInfo (ErrorType & error , const char * & error_str , unsigned & line_num)"		2149785	0					
ANR	2149787	CompoundStatement		1476:0:37096:37503	2149785	0					
ANR	2149788	Statement	const	1477:1:37099:37103	2149785	0	True				
ANR	2149789	Statement	char	1477:7:37105:37108	2149785	1	True				
ANR	2149790	Statement	*	1477:12:37110:37110	2149785	2	True				
ANR	2149791	Statement	strings	1477:13:37111:37117	2149785	3	True				
ANR	2149792	Statement	[	1477:20:37118:37118	2149785	4	True				
ANR	2149793	Statement	]	1477:21:37119:37119	2149785	5	True				
ANR	2149794	Statement	=	1477:23:37121:37121	2149785	6	True				
ANR	2149795	CompoundStatement		2:25:26:26	2149785	7					
ANR	2149796	Statement	"""None"""	1478:2:37127:37132	2149785	0	True				
ANR	2149797	Statement	","	1478:8:37133:37133	2149785	1	True				
ANR	2149798	Statement	"""Reader not initialized"""	1479:2:37137:37160	2149785	2	True				
ANR	2149799	Statement	","	1479:26:37161:37161	2149785	3	True				
ANR	2149800	Statement	"""Attempt to re-initialize reader"""	1480:2:37165:37197	2149785	4	True				
ANR	2149801	Statement	","	1480:35:37198:37198	2149785	5	True				
ANR	2149802	Statement	"""File not found"""	1481:2:37202:37217	2149785	6	True				
ANR	2149803	Statement	","	1481:18:37218:37218	2149785	7	True				
ANR	2149804	Statement	"""Other file error"""	1482:2:37222:37239	2149785	8	True				
ANR	2149805	Statement	","	1482:20:37240:37240	2149785	9	True				
ANR	2149806	Statement	"""Invalid state buffer"""	1483:2:37244:37265	2149785	10	True				
ANR	2149807	Statement	","	1483:24:37266:37266	2149785	11	True				
ANR	2149808	ExpressionStatement		1484:2:37270:37270	2149785	8	True				
ANR	2149809	ExpressionStatement	error = m_error	1485:1:37273:37288	2149785	9	True				
ANR	2149810	AssignmentExpression	error = m_error		2149785	0		=			
ANR	2149811	Identifier	error		2149785	0					
ANR	2149812	Identifier	m_error		2149785	1					
ANR	2149813	ExpressionStatement	line_num = m_line_num	1486:1:37291:37312	2149785	10	True				
ANR	2149814	AssignmentExpression	line_num = m_line_num		2149785	0		=			
ANR	2149815	Identifier	line_num		2149785	0					
ANR	2149816	Identifier	m_line_num		2149785	1					
ANR	2149817	IdentifierDeclStatement	unsigned eint = ( unsigned ) m_error ;	1488:1:37316:37350	2149785	11	True				
ANR	2149818	IdentifierDecl	eint = ( unsigned ) m_error		2149785	0					
ANR	2149819	IdentifierDeclType	unsigned		2149785	0					
ANR	2149820	Identifier	eint		2149785	1					
ANR	2149821	AssignmentExpression	eint = ( unsigned ) m_error		2149785	2		=			
ANR	2149822	Identifier	eint		2149785	0					
ANR	2149823	CastExpression	( unsigned ) m_error		2149785	1					
ANR	2149824	CastTarget	unsigned		2149785	0					
ANR	2149825	Identifier	m_error		2149785	1					
ANR	2149826	IdentifierDeclStatement	unsigned num = ( sizeof ( strings ) / sizeof ( const char * ) ) ;	1489:1:37353:37410	2149785	12	True				
ANR	2149827	IdentifierDecl	num = ( sizeof ( strings ) / sizeof ( const char * ) )		2149785	0					
ANR	2149828	IdentifierDeclType	unsigned		2149785	0					
ANR	2149829	Identifier	num		2149785	1					
ANR	2149830	AssignmentExpression	num = ( sizeof ( strings ) / sizeof ( const char * ) )		2149785	2		=			
ANR	2149831	Identifier	num		2149785	0					
ANR	2149832	MultiplicativeExpression	sizeof ( strings ) / sizeof ( const char * )		2149785	1		/			
ANR	2149833	SizeofExpression	sizeof ( strings )		2149785	0					
ANR	2149834	Sizeof	sizeof		2149785	0					
ANR	2149835	SizeofOperand	strings		2149785	1					
ANR	2149836	SizeofExpression	sizeof ( const char * )		2149785	1					
ANR	2149837	Sizeof	sizeof		2149785	0					
ANR	2149838	SizeofOperand	const char *		2149785	1					
ANR	2149839	IfStatement	if ( eint >= num )		2149785	13					
ANR	2149840	Condition	eint >= num	1490:6:37418:37428	2149785	0	True				
ANR	2149841	RelationalExpression	eint >= num		2149785	0		>=			
ANR	2149842	Identifier	eint		2149785	0					
ANR	2149843	Identifier	num		2149785	1					
ANR	2149844	CompoundStatement		15:20:335:335	2149785	1					
ANR	2149845	ExpressionStatement	"error_str = ""Unknown"""	1491:2:37436:37457	2149785	0	True				
ANR	2149846	AssignmentExpression	"error_str = ""Unknown"""		2149785	0		=			
ANR	2149847	Identifier	error_str		2149785	0					
ANR	2149848	PrimaryExpression	"""Unknown"""		2149785	1					
ANR	2149849	ElseStatement	else		2149785	0					
ANR	2149850	CompoundStatement		18:6:371:371	2149785	0					
ANR	2149851	ExpressionStatement	error_str = strings [ eint ]	1494:2:37472:37497	2149785	0	True				
ANR	2149852	AssignmentExpression	error_str = strings [ eint ]		2149785	0		=			
ANR	2149853	Identifier	error_str		2149785	0					
ANR	2149854	ArrayIndexing	strings [ eint ]		2149785	1					
ANR	2149855	Identifier	strings		2149785	0					
ANR	2149856	Identifier	eint		2149785	1					
ANR	2149857	ReturnType	void		2149785	1					
ANR	2149858	Identifier	ReadUserLog :: getErrorInfo		2149785	2					
ANR	2149859	ParameterList	"ErrorType & error , const char * & error_str , unsigned & line_num"		2149785	3					
ANR	2149860	Parameter	ErrorType & error	1473:28:37012:37027	2149785	0	True				
ANR	2149861	ParameterType	ErrorType &		2149785	0					
ANR	2149862	Identifier	error		2149785	1					
ANR	2149863	Parameter	const char * & error_str	1474:7:37037:37059	2149785	1	True				
ANR	2149864	ParameterType	const char * &		2149785	0					
ANR	2149865	Identifier	error_str		2149785	1					
ANR	2149866	Parameter	unsigned & line_num	1475:7:37069:37086	2149785	2	True				
ANR	2149867	ParameterType	unsigned &		2149785	0					
ANR	2149868	Identifier	line_num		2149785	1					
ANR	2149869	CFGEntryNode	ENTRY		2149785		True				
ANR	2149870	CFGExitNode	EXIT		2149785		True				
ANR	2149871	Symbol	error_str		2149785						
ANR	2149872	Symbol	strings		2149785						
ANR	2149873	Symbol	line_num		2149785						
ANR	2149874	Symbol	m_line_num		2149785						
ANR	2149875	Symbol	eint		2149785						
ANR	2149876	Symbol	num		2149785						
ANR	2149877	Symbol	* strings		2149785						
ANR	2149878	Symbol	error		2149785						
ANR	2149879	Symbol	* eint		2149785						
ANR	2149880	Symbol	m_error		2149785						
ANR	2149881	Function	ReadUserLogMatch :: Match	1505:0:37664:38060							
ANR	2149882	FunctionDef	"ReadUserLogMatch :: Match (int rot , int match_thresh , int * score_ptr)"		2149881	0					
ANR	2149883	CompoundStatement		1510:0:37783:38060	2149881	0					
ANR	2149884	IdentifierDeclStatement	int local_score ;	1512:1:37827:37842	2149881	0	True				
ANR	2149885	IdentifierDecl	local_score		2149881	0					
ANR	2149886	IdentifierDeclType	int		2149881	0					
ANR	2149887	Identifier	local_score		2149881	1					
ANR	2149888	IfStatement	if ( NULL == score_ptr )		2149881	1					
ANR	2149889	Condition	NULL == score_ptr	1513:6:37850:37866	2149881	0	True				
ANR	2149890	EqualityExpression	NULL == score_ptr		2149881	0		==			
ANR	2149891	Identifier	NULL		2149881	0					
ANR	2149892	Identifier	score_ptr		2149881	1					
ANR	2149893	CompoundStatement		4:26:86:86	2149881	1					
ANR	2149894	ExpressionStatement	score_ptr = & local_score	1514:2:37874:37898	2149881	0	True				
ANR	2149895	AssignmentExpression	score_ptr = & local_score		2149881	0		=			
ANR	2149896	Identifier	score_ptr		2149881	0					
ANR	2149897	UnaryOperationExpression	& local_score		2149881	1					
ANR	2149898	UnaryOperator	&		2149881	0					
ANR	2149899	Identifier	local_score		2149881	1					
ANR	2149900	ExpressionStatement	* score_ptr = m_state -> ScoreFile ( rot )	1516:1:37904:37942	2149881	2	True				
ANR	2149901	AssignmentExpression	* score_ptr = m_state -> ScoreFile ( rot )		2149881	0		=			
ANR	2149902	UnaryOperationExpression	* score_ptr		2149881	0					
ANR	2149903	UnaryOperator	*		2149881	0					
ANR	2149904	Identifier	score_ptr		2149881	1					
ANR	2149905	CallExpression	m_state -> ScoreFile ( rot )		2149881	1					
ANR	2149906	Callee	m_state -> ScoreFile		2149881	0					
ANR	2149907	PtrMemberAccess	m_state -> ScoreFile		2149881	0					
ANR	2149908	Identifier	m_state		2149881	0					
ANR	2149909	Identifier	ScoreFile		2149881	1					
ANR	2149910	ArgumentList	rot		2149881	1					
ANR	2149911	Argument	rot		2149881	0					
ANR	2149912	Identifier	rot		2149881	0					
ANR	2149913	ReturnStatement	"return MatchInternal ( rot , NULL , match_thresh , score_ptr ) ;"	1519:1:38000:38058	2149881	3	True				
ANR	2149914	CallExpression	"MatchInternal ( rot , NULL , match_thresh , score_ptr )"		2149881	0					
ANR	2149915	Callee	MatchInternal		2149881	0					
ANR	2149916	Identifier	MatchInternal		2149881	0					
ANR	2149917	ArgumentList	rot		2149881	1					
ANR	2149918	Argument	rot		2149881	0					
ANR	2149919	Identifier	rot		2149881	0					
ANR	2149920	Argument	NULL		2149881	1					
ANR	2149921	Identifier	NULL		2149881	0					
ANR	2149922	Argument	match_thresh		2149881	2					
ANR	2149923	Identifier	match_thresh		2149881	0					
ANR	2149924	Argument	score_ptr		2149881	3					
ANR	2149925	Identifier	score_ptr		2149881	0					
ANR	2149926	ReturnType	ReadUserLogMatch :: MatchResult		2149881	1					
ANR	2149927	Identifier	ReadUserLogMatch :: Match		2149881	2					
ANR	2149928	ParameterList	"int rot , int match_thresh , int * score_ptr"		2149881	3					
ANR	2149929	Parameter	int rot	1507:1:37720:37730	2149881	0	True				
ANR	2149930	ParameterType	int		2149881	0					
ANR	2149931	Identifier	rot		2149881	1					
ANR	2149932	Parameter	int match_thresh	1508:1:37734:37753	2149881	1	True				
ANR	2149933	ParameterType	int		2149881	0					
ANR	2149934	Identifier	match_thresh		2149881	1					
ANR	2149935	Parameter	int * score_ptr	1509:1:37757:37773	2149881	2	True				
ANR	2149936	ParameterType	int *		2149881	0					
ANR	2149937	Identifier	score_ptr		2149881	1					
ANR	2149938	CFGEntryNode	ENTRY		2149881		True				
ANR	2149939	CFGExitNode	EXIT		2149881		True				
ANR	2149940	Symbol	& local_score		2149881						
ANR	2149941	Symbol	m_state		2149881						
ANR	2149942	Symbol	match_thresh		2149881						
ANR	2149943	Symbol	m_state -> ScoreFile		2149881						
ANR	2149944	Symbol	local_score		2149881						
ANR	2149945	Symbol	NULL		2149881						
ANR	2149946	Symbol	MatchInternal		2149881						
ANR	2149947	Symbol	rot		2149881						
ANR	2149948	Symbol	* score_ptr		2149881						
ANR	2149949	Symbol	* m_state		2149881						
ANR	2149950	Symbol	score_ptr		2149881						
ANR	2149951	Function	ReadUserLogMatch :: Match	1523:0:38112:38534							
ANR	2149952	FunctionDef	"ReadUserLogMatch :: Match (const char * path , int rot , int match_thresh , int * score_ptr)"		2149951	0					
ANR	2149953	CompoundStatement		1529:0:38251:38534	2149951	0					
ANR	2149954	IdentifierDeclStatement	int local_score ;	1531:1:38295:38310	2149951	0	True				
ANR	2149955	IdentifierDecl	local_score		2149951	0					
ANR	2149956	IdentifierDeclType	int		2149951	0					
ANR	2149957	Identifier	local_score		2149951	1					
ANR	2149958	IfStatement	if ( NULL == score_ptr )		2149951	1					
ANR	2149959	Condition	NULL == score_ptr	1532:6:38318:38334	2149951	0	True				
ANR	2149960	EqualityExpression	NULL == score_ptr		2149951	0		==			
ANR	2149961	Identifier	NULL		2149951	0					
ANR	2149962	Identifier	score_ptr		2149951	1					
ANR	2149963	CompoundStatement		4:26:86:86	2149951	1					
ANR	2149964	ExpressionStatement	score_ptr = & local_score	1533:2:38342:38366	2149951	0	True				
ANR	2149965	AssignmentExpression	score_ptr = & local_score		2149951	0		=			
ANR	2149966	Identifier	score_ptr		2149951	0					
ANR	2149967	UnaryOperationExpression	& local_score		2149951	1					
ANR	2149968	UnaryOperator	&		2149951	0					
ANR	2149969	Identifier	local_score		2149951	1					
ANR	2149970	ExpressionStatement	"* score_ptr = m_state -> ScoreFile ( path , rot )"	1535:1:38372:38416	2149951	2	True				
ANR	2149971	AssignmentExpression	"* score_ptr = m_state -> ScoreFile ( path , rot )"		2149951	0		=			
ANR	2149972	UnaryOperationExpression	* score_ptr		2149951	0					
ANR	2149973	UnaryOperator	*		2149951	0					
ANR	2149974	Identifier	score_ptr		2149951	1					
ANR	2149975	CallExpression	"m_state -> ScoreFile ( path , rot )"		2149951	1					
ANR	2149976	Callee	m_state -> ScoreFile		2149951	0					
ANR	2149977	PtrMemberAccess	m_state -> ScoreFile		2149951	0					
ANR	2149978	Identifier	m_state		2149951	0					
ANR	2149979	Identifier	ScoreFile		2149951	1					
ANR	2149980	ArgumentList	path		2149951	1					
ANR	2149981	Argument	path		2149951	0					
ANR	2149982	Identifier	path		2149951	0					
ANR	2149983	Argument	rot		2149951	1					
ANR	2149984	Identifier	rot		2149951	0					
ANR	2149985	ReturnStatement	"return MatchInternal ( rot , path , match_thresh , score_ptr ) ;"	1538:1:38474:38532	2149951	3	True				
ANR	2149986	CallExpression	"MatchInternal ( rot , path , match_thresh , score_ptr )"		2149951	0					
ANR	2149987	Callee	MatchInternal		2149951	0					
ANR	2149988	Identifier	MatchInternal		2149951	0					
ANR	2149989	ArgumentList	rot		2149951	1					
ANR	2149990	Argument	rot		2149951	0					
ANR	2149991	Identifier	rot		2149951	0					
ANR	2149992	Argument	path		2149951	1					
ANR	2149993	Identifier	path		2149951	0					
ANR	2149994	Argument	match_thresh		2149951	2					
ANR	2149995	Identifier	match_thresh		2149951	0					
ANR	2149996	Argument	score_ptr		2149951	3					
ANR	2149997	Identifier	score_ptr		2149951	0					
ANR	2149998	ReturnType	ReadUserLogMatch :: MatchResult		2149951	1					
ANR	2149999	Identifier	ReadUserLogMatch :: Match		2149951	2					
ANR	2150000	ParameterList	"const char * path , int rot , int match_thresh , int * score_ptr"		2149951	3					
ANR	2150001	Parameter	const char * path	1525:1:38168:38184	2149951	0	True				
ANR	2150002	ParameterType	const char *		2149951	0					
ANR	2150003	Identifier	path		2149951	1					
ANR	2150004	Parameter	int rot	1526:1:38188:38198	2149951	1	True				
ANR	2150005	ParameterType	int		2149951	0					
ANR	2150006	Identifier	rot		2149951	1					
ANR	2150007	Parameter	int match_thresh	1527:1:38202:38221	2149951	2	True				
ANR	2150008	ParameterType	int		2149951	0					
ANR	2150009	Identifier	match_thresh		2149951	1					
ANR	2150010	Parameter	int * score_ptr	1528:1:38225:38241	2149951	3	True				
ANR	2150011	ParameterType	int *		2149951	0					
ANR	2150012	Identifier	score_ptr		2149951	1					
ANR	2150013	CFGEntryNode	ENTRY		2149951		True				
ANR	2150014	CFGExitNode	EXIT		2149951		True				
ANR	2150015	Symbol	& local_score		2149951						
ANR	2150016	Symbol	path		2149951						
ANR	2150017	Symbol	m_state		2149951						
ANR	2150018	Symbol	match_thresh		2149951						
ANR	2150019	Symbol	m_state -> ScoreFile		2149951						
ANR	2150020	Symbol	local_score		2149951						
ANR	2150021	Symbol	NULL		2149951						
ANR	2150022	Symbol	MatchInternal		2149951						
ANR	2150023	Symbol	rot		2149951						
ANR	2150024	Symbol	* score_ptr		2149951						
ANR	2150025	Symbol	* m_state		2149951						
ANR	2150026	Symbol	score_ptr		2149951						
ANR	2150027	Function	ReadUserLogMatch :: Match	1542:0:38591:39023							
ANR	2150028	FunctionDef	"ReadUserLogMatch :: Match (StatStructType & statbuf , int rot , int match_thresh , int * score_ptr)"		2150027	0					
ANR	2150029	CompoundStatement		1548:0:38737:39023	2150027	0					
ANR	2150030	IdentifierDeclStatement	int local_score ;	1550:1:38781:38796	2150027	0	True				
ANR	2150031	IdentifierDecl	local_score		2150027	0					
ANR	2150032	IdentifierDeclType	int		2150027	0					
ANR	2150033	Identifier	local_score		2150027	1					
ANR	2150034	IfStatement	if ( NULL == score_ptr )		2150027	1					
ANR	2150035	Condition	NULL == score_ptr	1551:6:38804:38820	2150027	0	True				
ANR	2150036	EqualityExpression	NULL == score_ptr		2150027	0		==			
ANR	2150037	Identifier	NULL		2150027	0					
ANR	2150038	Identifier	score_ptr		2150027	1					
ANR	2150039	CompoundStatement		4:26:86:86	2150027	1					
ANR	2150040	ExpressionStatement	score_ptr = & local_score	1552:2:38828:38852	2150027	0	True				
ANR	2150041	AssignmentExpression	score_ptr = & local_score		2150027	0		=			
ANR	2150042	Identifier	score_ptr		2150027	0					
ANR	2150043	UnaryOperationExpression	& local_score		2150027	1					
ANR	2150044	UnaryOperator	&		2150027	0					
ANR	2150045	Identifier	local_score		2150027	1					
ANR	2150046	ExpressionStatement	"* score_ptr = m_state -> ScoreFile ( statbuf , rot )"	1554:1:38858:38905	2150027	2	True				
ANR	2150047	AssignmentExpression	"* score_ptr = m_state -> ScoreFile ( statbuf , rot )"		2150027	0		=			
ANR	2150048	UnaryOperationExpression	* score_ptr		2150027	0					
ANR	2150049	UnaryOperator	*		2150027	0					
ANR	2150050	Identifier	score_ptr		2150027	1					
ANR	2150051	CallExpression	"m_state -> ScoreFile ( statbuf , rot )"		2150027	1					
ANR	2150052	Callee	m_state -> ScoreFile		2150027	0					
ANR	2150053	PtrMemberAccess	m_state -> ScoreFile		2150027	0					
ANR	2150054	Identifier	m_state		2150027	0					
ANR	2150055	Identifier	ScoreFile		2150027	1					
ANR	2150056	ArgumentList	statbuf		2150027	1					
ANR	2150057	Argument	statbuf		2150027	0					
ANR	2150058	Identifier	statbuf		2150027	0					
ANR	2150059	Argument	rot		2150027	1					
ANR	2150060	Identifier	rot		2150027	0					
ANR	2150061	ReturnStatement	"return MatchInternal ( rot , NULL , match_thresh , score_ptr ) ;"	1557:1:38963:39021	2150027	3	True				
ANR	2150062	CallExpression	"MatchInternal ( rot , NULL , match_thresh , score_ptr )"		2150027	0					
ANR	2150063	Callee	MatchInternal		2150027	0					
ANR	2150064	Identifier	MatchInternal		2150027	0					
ANR	2150065	ArgumentList	rot		2150027	1					
ANR	2150066	Argument	rot		2150027	0					
ANR	2150067	Identifier	rot		2150027	0					
ANR	2150068	Argument	NULL		2150027	1					
ANR	2150069	Identifier	NULL		2150027	0					
ANR	2150070	Argument	match_thresh		2150027	2					
ANR	2150071	Identifier	match_thresh		2150027	0					
ANR	2150072	Argument	score_ptr		2150027	3					
ANR	2150073	Identifier	score_ptr		2150027	0					
ANR	2150074	ReturnType	ReadUserLogMatch :: MatchResult		2150027	1					
ANR	2150075	Identifier	ReadUserLogMatch :: Match		2150027	2					
ANR	2150076	ParameterList	"StatStructType & statbuf , int rot , int match_thresh , int * score_ptr"		2150027	3					
ANR	2150077	Parameter	StatStructType & statbuf	1544:1:38647:38670	2150027	0	True				
ANR	2150078	ParameterType	StatStructType &		2150027	0					
ANR	2150079	Identifier	statbuf		2150027	1					
ANR	2150080	Parameter	int rot	1545:1:38674:38684	2150027	1	True				
ANR	2150081	ParameterType	int		2150027	0					
ANR	2150082	Identifier	rot		2150027	1					
ANR	2150083	Parameter	int match_thresh	1546:1:38688:38707	2150027	2	True				
ANR	2150084	ParameterType	int		2150027	0					
ANR	2150085	Identifier	match_thresh		2150027	1					
ANR	2150086	Parameter	int * score_ptr	1547:1:38711:38727	2150027	3	True				
ANR	2150087	ParameterType	int *		2150027	0					
ANR	2150088	Identifier	score_ptr		2150027	1					
ANR	2150089	CFGEntryNode	ENTRY		2150027		True				
ANR	2150090	CFGExitNode	EXIT		2150027		True				
ANR	2150091	Symbol	& local_score		2150027						
ANR	2150092	Symbol	m_state		2150027						
ANR	2150093	Symbol	match_thresh		2150027						
ANR	2150094	Symbol	m_state -> ScoreFile		2150027						
ANR	2150095	Symbol	local_score		2150027						
ANR	2150096	Symbol	NULL		2150027						
ANR	2150097	Symbol	statbuf		2150027						
ANR	2150098	Symbol	MatchInternal		2150027						
ANR	2150099	Symbol	rot		2150027						
ANR	2150100	Symbol	* score_ptr		2150027						
ANR	2150101	Symbol	* m_state		2150027						
ANR	2150102	Symbol	score_ptr		2150027						
ANR	2150103	Function	ReadUserLogMatch :: MatchInternal	1561:0:39044:40984							
ANR	2150104	FunctionDef	"ReadUserLogMatch :: MatchInternal (int rot , const char * path , int match_thresh , int * score_ptr)"		2150103	0					
ANR	2150105	CompoundStatement		1567:0:39191:40984	2150103	0					
ANR	2150106	IdentifierDeclStatement	int score = * score_ptr ;	1568:1:39194:39217	2150103	0	True				
ANR	2150107	IdentifierDecl	score = * score_ptr		2150103	0					
ANR	2150108	IdentifierDeclType	int		2150103	0					
ANR	2150109	Identifier	score		2150103	1					
ANR	2150110	AssignmentExpression	score = * score_ptr		2150103	2		=			
ANR	2150111	Identifier	score		2150103	0					
ANR	2150112	UnaryOperationExpression	* score_ptr		2150103	1					
ANR	2150113	UnaryOperator	*		2150103	0					
ANR	2150114	Identifier	score_ptr		2150103	1					
ANR	2150115	IdentifierDeclStatement	MyString path_str ;	1571:1:39259:39276	2150103	1	True				
ANR	2150116	IdentifierDecl	path_str		2150103	0					
ANR	2150117	IdentifierDeclType	MyString		2150103	0					
ANR	2150118	Identifier	path_str		2150103	1					
ANR	2150119	IfStatement	if ( NULL == path )		2150103	2					
ANR	2150120	Condition	NULL == path	1572:6:39284:39295	2150103	0	True				
ANR	2150121	EqualityExpression	NULL == path		2150103	0		==			
ANR	2150122	Identifier	NULL		2150103	0					
ANR	2150123	Identifier	path		2150103	1					
ANR	2150124	CompoundStatement		6:21:107:107	2150103	1					
ANR	2150125	ExpressionStatement	"m_state -> GeneratePath ( rot , path_str )"	1573:2:39303:39341	2150103	0	True				
ANR	2150126	CallExpression	"m_state -> GeneratePath ( rot , path_str )"		2150103	0					
ANR	2150127	Callee	m_state -> GeneratePath		2150103	0					
ANR	2150128	PtrMemberAccess	m_state -> GeneratePath		2150103	0					
ANR	2150129	Identifier	m_state		2150103	0					
ANR	2150130	Identifier	GeneratePath		2150103	1					
ANR	2150131	ArgumentList	rot		2150103	1					
ANR	2150132	Argument	rot		2150103	0					
ANR	2150133	Identifier	rot		2150103	0					
ANR	2150134	Argument	path_str		2150103	1					
ANR	2150135	Identifier	path_str		2150103	0					
ANR	2150136	ElseStatement	else		2150103	0					
ANR	2150137	CompoundStatement		8:8:159:159	2150103	0					
ANR	2150138	ExpressionStatement	path_str = path	1575:2:39355:39370	2150103	0	True				
ANR	2150139	AssignmentExpression	path_str = path		2150103	0		=			
ANR	2150140	Identifier	path_str		2150103	0					
ANR	2150141	Identifier	path		2150103	1					
ANR	2150142	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Match: score of '%s' = %d\\n"" , path_str . Value ( ) , score )"	1577:1:39376:39458	2150103	3	True				
ANR	2150143	CallExpression	"dprintf ( D_FULLDEBUG , ""Match: score of '%s' = %d\\n"" , path_str . Value ( ) , score )"		2150103	0					
ANR	2150144	Callee	dprintf		2150103	0					
ANR	2150145	Identifier	dprintf		2150103	0					
ANR	2150146	ArgumentList	D_FULLDEBUG		2150103	1					
ANR	2150147	Argument	D_FULLDEBUG		2150103	0					
ANR	2150148	Identifier	D_FULLDEBUG		2150103	0					
ANR	2150149	Argument	"""Match: score of '%s' = %d\\n"""		2150103	1					
ANR	2150150	PrimaryExpression	"""Match: score of '%s' = %d\\n"""		2150103	0					
ANR	2150151	Argument	path_str . Value ( )		2150103	2					
ANR	2150152	CallExpression	path_str . Value ( )		2150103	0					
ANR	2150153	Callee	path_str . Value		2150103	0					
ANR	2150154	MemberAccess	path_str . Value		2150103	0					
ANR	2150155	Identifier	path_str		2150103	0					
ANR	2150156	Identifier	Value		2150103	1					
ANR	2150157	ArgumentList			2150103	1					
ANR	2150158	Argument	score		2150103	3					
ANR	2150159	Identifier	score		2150103	0					
ANR	2150160	IdentifierDeclStatement	"MatchResult result = EvalScore ( match_thresh , score ) ;"	1583:1:39571:39624	2150103	4	True				
ANR	2150161	IdentifierDecl	"result = EvalScore ( match_thresh , score )"		2150103	0					
ANR	2150162	IdentifierDeclType	MatchResult		2150103	0					
ANR	2150163	Identifier	result		2150103	1					
ANR	2150164	AssignmentExpression	"result = EvalScore ( match_thresh , score )"		2150103	2		=			
ANR	2150165	Identifier	result		2150103	0					
ANR	2150166	CallExpression	"EvalScore ( match_thresh , score )"		2150103	1					
ANR	2150167	Callee	EvalScore		2150103	0					
ANR	2150168	Identifier	EvalScore		2150103	0					
ANR	2150169	ArgumentList	match_thresh		2150103	1					
ANR	2150170	Argument	match_thresh		2150103	0					
ANR	2150171	Identifier	match_thresh		2150103	0					
ANR	2150172	Argument	score		2150103	1					
ANR	2150173	Identifier	score		2150103	0					
ANR	2150174	IfStatement	if ( UNKNOWN != result )		2150103	5					
ANR	2150175	Condition	UNKNOWN != result	1584:6:39632:39648	2150103	0	True				
ANR	2150176	EqualityExpression	UNKNOWN != result		2150103	0		!=			
ANR	2150177	Identifier	UNKNOWN		2150103	0					
ANR	2150178	Identifier	result		2150103	1					
ANR	2150179	CompoundStatement		18:26:460:460	2150103	1					
ANR	2150180	ReturnStatement	return result ;	1585:2:39656:39669	2150103	0	True				
ANR	2150181	Identifier	result		2150103	0					
ANR	2150182	IdentifierDeclStatement	ReadUserLog log_reader ;	1594:1:39884:39909	2150103	6	True				
ANR	2150183	IdentifierDecl	log_reader		2150103	0					
ANR	2150184	IdentifierDeclType	ReadUserLog		2150103	0					
ANR	2150185	Identifier	log_reader		2150103	1					
ANR	2150186	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Match: reading file %s\\n"" , path_str . Value ( ) )"	1595:1:39912:39980	2150103	7	True				
ANR	2150187	CallExpression	"dprintf ( D_FULLDEBUG , ""Match: reading file %s\\n"" , path_str . Value ( ) )"		2150103	0					
ANR	2150188	Callee	dprintf		2150103	0					
ANR	2150189	Identifier	dprintf		2150103	0					
ANR	2150190	ArgumentList	D_FULLDEBUG		2150103	1					
ANR	2150191	Argument	D_FULLDEBUG		2150103	0					
ANR	2150192	Identifier	D_FULLDEBUG		2150103	0					
ANR	2150193	Argument	"""Match: reading file %s\\n"""		2150103	1					
ANR	2150194	PrimaryExpression	"""Match: reading file %s\\n"""		2150103	0					
ANR	2150195	Argument	path_str . Value ( )		2150103	2					
ANR	2150196	CallExpression	path_str . Value ( )		2150103	0					
ANR	2150197	Callee	path_str . Value		2150103	0					
ANR	2150198	MemberAccess	path_str . Value		2150103	0					
ANR	2150199	Identifier	path_str		2150103	0					
ANR	2150200	Identifier	Value		2150103	1					
ANR	2150201	ArgumentList			2150103	1					
ANR	2150202	IfStatement	"if ( ! log_reader . initialize ( path_str . Value ( ) , false , false ) )"		2150103	8					
ANR	2150203	Condition	"! log_reader . initialize ( path_str . Value ( ) , false , false )"	1598:6:40015:40070	2150103	0	True				
ANR	2150204	UnaryOperationExpression	"! log_reader . initialize ( path_str . Value ( ) , false , false )"		2150103	0					
ANR	2150205	UnaryOperator	!		2150103	0					
ANR	2150206	CallExpression	"log_reader . initialize ( path_str . Value ( ) , false , false )"		2150103	1					
ANR	2150207	Callee	log_reader . initialize		2150103	0					
ANR	2150208	MemberAccess	log_reader . initialize		2150103	0					
ANR	2150209	Identifier	log_reader		2150103	0					
ANR	2150210	Identifier	initialize		2150103	1					
ANR	2150211	ArgumentList	path_str . Value ( )		2150103	1					
ANR	2150212	Argument	path_str . Value ( )		2150103	0					
ANR	2150213	CallExpression	path_str . Value ( )		2150103	0					
ANR	2150214	Callee	path_str . Value		2150103	0					
ANR	2150215	MemberAccess	path_str . Value		2150103	0					
ANR	2150216	Identifier	path_str		2150103	0					
ANR	2150217	Identifier	Value		2150103	1					
ANR	2150218	ArgumentList			2150103	1					
ANR	2150219	Argument	false		2150103	1					
ANR	2150220	Identifier	false		2150103	0					
ANR	2150221	Argument	false		2150103	2					
ANR	2150222	Identifier	false		2150103	0					
ANR	2150223	CompoundStatement		32:65:882:882	2150103	1					
ANR	2150224	ReturnStatement	return MATCH_ERROR ;	1599:2:40078:40096	2150103	0	True				
ANR	2150225	Identifier	MATCH_ERROR		2150103	0					
ANR	2150226	IdentifierDeclStatement	ReadUserLogHeader header_reader ;	1603:1:40135:40166	2150103	9	True				
ANR	2150227	IdentifierDecl	header_reader		2150103	0					
ANR	2150228	IdentifierDeclType	ReadUserLogHeader		2150103	0					
ANR	2150229	Identifier	header_reader		2150103	1					
ANR	2150230	IdentifierDeclStatement	int status = header_reader . Read ( log_reader ) ;	1604:1:40169:40214	2150103	10	True				
ANR	2150231	IdentifierDecl	status = header_reader . Read ( log_reader )		2150103	0					
ANR	2150232	IdentifierDeclType	int		2150103	0					
ANR	2150233	Identifier	status		2150103	1					
ANR	2150234	AssignmentExpression	status = header_reader . Read ( log_reader )		2150103	2		=			
ANR	2150235	Identifier	status		2150103	0					
ANR	2150236	CallExpression	header_reader . Read ( log_reader )		2150103	1					
ANR	2150237	Callee	header_reader . Read		2150103	0					
ANR	2150238	MemberAccess	header_reader . Read		2150103	0					
ANR	2150239	Identifier	header_reader		2150103	0					
ANR	2150240	Identifier	Read		2150103	1					
ANR	2150241	ArgumentList	log_reader		2150103	1					
ANR	2150242	Argument	log_reader		2150103	0					
ANR	2150243	Identifier	log_reader		2150103	0					
ANR	2150244	IfStatement	if ( ULOG_OK == status )		2150103	11					
ANR	2150245	Condition	ULOG_OK == status	1605:6:40222:40238	2150103	0	True				
ANR	2150246	EqualityExpression	ULOG_OK == status		2150103	0		==			
ANR	2150247	Identifier	ULOG_OK		2150103	0					
ANR	2150248	Identifier	status		2150103	1					
ANR	2150249	CompoundStatement		39:26:1050:1050	2150103	1					
ANR	2150250	ElseStatement	else		2150103	0					
ANR	2150251	IfStatement	if ( ULOG_NO_EVENT == status )		2150103	0					
ANR	2150252	Condition	ULOG_NO_EVENT == status	1608:11:40274:40296	2150103	0	True				
ANR	2150253	EqualityExpression	ULOG_NO_EVENT == status		2150103	0		==			
ANR	2150254	Identifier	ULOG_NO_EVENT		2150103	0					
ANR	2150255	Identifier	status		2150103	1					
ANR	2150256	CompoundStatement		42:37:1108:1108	2150103	1					
ANR	2150257	ReturnStatement	"return EvalScore ( match_thresh , score ) ;"	1609:2:40304:40343	2150103	0	True				
ANR	2150258	CallExpression	"EvalScore ( match_thresh , score )"		2150103	0					
ANR	2150259	Callee	EvalScore		2150103	0					
ANR	2150260	Identifier	EvalScore		2150103	0					
ANR	2150261	ArgumentList	match_thresh		2150103	1					
ANR	2150262	Argument	match_thresh		2150103	0					
ANR	2150263	Identifier	match_thresh		2150103	0					
ANR	2150264	Argument	score		2150103	1					
ANR	2150265	Identifier	score		2150103	0					
ANR	2150266	ElseStatement	else		2150103	0					
ANR	2150267	CompoundStatement		45:6:1162:1162	2150103	0					
ANR	2150268	ReturnStatement	return MATCH_ERROR ;	1612:2:40358:40376	2150103	0	True				
ANR	2150269	Identifier	MATCH_ERROR		2150103	0					
ANR	2150270	IdentifierDeclStatement	int id_result = m_state -> CompareUniqId ( header_reader . getId ( ) ) ;	1616:1:40422:40485	2150103	12	True				
ANR	2150271	IdentifierDecl	id_result = m_state -> CompareUniqId ( header_reader . getId ( ) )		2150103	0					
ANR	2150272	IdentifierDeclType	int		2150103	0					
ANR	2150273	Identifier	id_result		2150103	1					
ANR	2150274	AssignmentExpression	id_result = m_state -> CompareUniqId ( header_reader . getId ( ) )		2150103	2		=			
ANR	2150275	Identifier	id_result		2150103	0					
ANR	2150276	CallExpression	m_state -> CompareUniqId ( header_reader . getId ( ) )		2150103	1					
ANR	2150277	Callee	m_state -> CompareUniqId		2150103	0					
ANR	2150278	PtrMemberAccess	m_state -> CompareUniqId		2150103	0					
ANR	2150279	Identifier	m_state		2150103	0					
ANR	2150280	Identifier	CompareUniqId		2150103	1					
ANR	2150281	ArgumentList	header_reader . getId ( )		2150103	1					
ANR	2150282	Argument	header_reader . getId ( )		2150103	0					
ANR	2150283	CallExpression	header_reader . getId ( )		2150103	0					
ANR	2150284	Callee	header_reader . getId		2150103	0					
ANR	2150285	MemberAccess	header_reader . getId		2150103	0					
ANR	2150286	Identifier	header_reader		2150103	0					
ANR	2150287	Identifier	getId		2150103	1					
ANR	2150288	ArgumentList			2150103	1					
ANR	2150289	IdentifierDeclStatement	"const char * result_str = ""unknown"" ;"	1617:1:40488:40522	2150103	13	True				
ANR	2150290	IdentifierDecl	"* result_str = ""unknown"""		2150103	0					
ANR	2150291	IdentifierDeclType	const char *		2150103	0					
ANR	2150292	Identifier	result_str		2150103	1					
ANR	2150293	AssignmentExpression	"* result_str = ""unknown"""		2150103	2		=			
ANR	2150294	Identifier	result_str		2150103	0					
ANR	2150295	PrimaryExpression	"""unknown"""		2150103	1					
ANR	2150296	IfStatement	if ( id_result > 0 )		2150103	14					
ANR	2150297	Condition	id_result > 0	1618:6:40530:40542	2150103	0	True				
ANR	2150298	RelationalExpression	id_result > 0		2150103	0		>			
ANR	2150299	Identifier	id_result		2150103	0					
ANR	2150300	PrimaryExpression	0		2150103	1					
ANR	2150301	CompoundStatement		52:22:1354:1354	2150103	1					
ANR	2150302	ExpressionStatement	score += SCORE_FACTOR_UNIQ_MATCH	1619:2:40550:40582	2150103	0	True				
ANR	2150303	AssignmentExpression	score += SCORE_FACTOR_UNIQ_MATCH		2150103	0		+=			
ANR	2150304	Identifier	score		2150103	0					
ANR	2150305	Identifier	SCORE_FACTOR_UNIQ_MATCH		2150103	1					
ANR	2150306	ExpressionStatement	"result_str = ""match"""	1620:2:40586:40606	2150103	1	True				
ANR	2150307	AssignmentExpression	"result_str = ""match"""		2150103	0		=			
ANR	2150308	Identifier	result_str		2150103	0					
ANR	2150309	PrimaryExpression	"""match"""		2150103	1					
ANR	2150310	ElseStatement	else		2150103	0					
ANR	2150311	IfStatement	if ( id_result < 0 )		2150103	0					
ANR	2150312	Condition	id_result < 0	1622:11:40622:40634	2150103	0	True				
ANR	2150313	RelationalExpression	id_result < 0		2150103	0		<			
ANR	2150314	Identifier	id_result		2150103	0					
ANR	2150315	PrimaryExpression	0		2150103	1					
ANR	2150316	CompoundStatement		56:27:1446:1446	2150103	1					
ANR	2150317	ExpressionStatement	score = 0	1623:2:40642:40651	2150103	0	True				
ANR	2150318	AssignmentExpression	score = 0		2150103	0		=			
ANR	2150319	Identifier	score		2150103	0					
ANR	2150320	PrimaryExpression	0		2150103	1					
ANR	2150321	ExpressionStatement	"result_str = ""no match"""	1624:2:40655:40678	2150103	1	True				
ANR	2150322	AssignmentExpression	"result_str = ""no match"""		2150103	0		=			
ANR	2150323	Identifier	result_str		2150103	0					
ANR	2150324	PrimaryExpression	"""no match"""		2150103	1					
ANR	2150325	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Read ID from '%s' as '%s': %d (%s)\\n"" , path_str . Value ( ) , header_reader . getId ( ) . Value ( ) , id_result , result_str )"	1626:1:40684:40826	2150103	15	True				
ANR	2150326	CallExpression	"dprintf ( D_FULLDEBUG , ""Read ID from '%s' as '%s': %d (%s)\\n"" , path_str . Value ( ) , header_reader . getId ( ) . Value ( ) , id_result , result_str )"		2150103	0					
ANR	2150327	Callee	dprintf		2150103	0					
ANR	2150328	Identifier	dprintf		2150103	0					
ANR	2150329	ArgumentList	D_FULLDEBUG		2150103	1					
ANR	2150330	Argument	D_FULLDEBUG		2150103	0					
ANR	2150331	Identifier	D_FULLDEBUG		2150103	0					
ANR	2150332	Argument	"""Read ID from '%s' as '%s': %d (%s)\\n"""		2150103	1					
ANR	2150333	PrimaryExpression	"""Read ID from '%s' as '%s': %d (%s)\\n"""		2150103	0					
ANR	2150334	Argument	path_str . Value ( )		2150103	2					
ANR	2150335	CallExpression	path_str . Value ( )		2150103	0					
ANR	2150336	Callee	path_str . Value		2150103	0					
ANR	2150337	MemberAccess	path_str . Value		2150103	0					
ANR	2150338	Identifier	path_str		2150103	0					
ANR	2150339	Identifier	Value		2150103	1					
ANR	2150340	ArgumentList			2150103	1					
ANR	2150341	Argument	header_reader . getId ( ) . Value ( )		2150103	3					
ANR	2150342	CallExpression	header_reader . getId ( ) . Value ( )		2150103	0					
ANR	2150343	Callee	header_reader . getId ( ) . Value		2150103	0					
ANR	2150344	MemberAccess	header_reader . getId ( ) . Value		2150103	0					
ANR	2150345	CallExpression	header_reader . getId ( )		2150103	0					
ANR	2150346	Callee	header_reader . getId		2150103	0					
ANR	2150347	MemberAccess	header_reader . getId		2150103	0					
ANR	2150348	Identifier	header_reader		2150103	0					
ANR	2150349	Identifier	getId		2150103	1					
ANR	2150350	ArgumentList			2150103	1					
ANR	2150351	Identifier	Value		2150103	1					
ANR	2150352	ArgumentList			2150103	1					
ANR	2150353	Argument	id_result		2150103	4					
ANR	2150354	Identifier	id_result		2150103	0					
ANR	2150355	Argument	result_str		2150103	5					
ANR	2150356	Identifier	result_str		2150103	0					
ANR	2150357	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Match: Final score is %d\\n"" , score )"	1631:1:40881:40940	2150103	16	True				
ANR	2150358	CallExpression	"dprintf ( D_FULLDEBUG , ""Match: Final score is %d\\n"" , score )"		2150103	0					
ANR	2150359	Callee	dprintf		2150103	0					
ANR	2150360	Identifier	dprintf		2150103	0					
ANR	2150361	ArgumentList	D_FULLDEBUG		2150103	1					
ANR	2150362	Argument	D_FULLDEBUG		2150103	0					
ANR	2150363	Identifier	D_FULLDEBUG		2150103	0					
ANR	2150364	Argument	"""Match: Final score is %d\\n"""		2150103	1					
ANR	2150365	PrimaryExpression	"""Match: Final score is %d\\n"""		2150103	0					
ANR	2150366	Argument	score		2150103	2					
ANR	2150367	Identifier	score		2150103	0					
ANR	2150368	ReturnStatement	"return EvalScore ( match_thresh , score ) ;"	1632:1:40943:40982	2150103	17	True				
ANR	2150369	CallExpression	"EvalScore ( match_thresh , score )"		2150103	0					
ANR	2150370	Callee	EvalScore		2150103	0					
ANR	2150371	Identifier	EvalScore		2150103	0					
ANR	2150372	ArgumentList	match_thresh		2150103	1					
ANR	2150373	Argument	match_thresh		2150103	0					
ANR	2150374	Identifier	match_thresh		2150103	0					
ANR	2150375	Argument	score		2150103	1					
ANR	2150376	Identifier	score		2150103	0					
ANR	2150377	ReturnType	ReadUserLogMatch :: MatchResult		2150103	1					
ANR	2150378	Identifier	ReadUserLogMatch :: MatchInternal		2150103	2					
ANR	2150379	ParameterList	"int rot , const char * path , int match_thresh , int * score_ptr"		2150103	3					
ANR	2150380	Parameter	int rot	1563:1:39108:39118	2150103	0	True				
ANR	2150381	ParameterType	int		2150103	0					
ANR	2150382	Identifier	rot		2150103	1					
ANR	2150383	Parameter	const char * path	1564:1:39122:39138	2150103	1	True				
ANR	2150384	ParameterType	const char *		2150103	0					
ANR	2150385	Identifier	path		2150103	1					
ANR	2150386	Parameter	int match_thresh	1565:1:39142:39161	2150103	2	True				
ANR	2150387	ParameterType	int		2150103	0					
ANR	2150388	Identifier	match_thresh		2150103	1					
ANR	2150389	Parameter	int * score_ptr	1566:1:39165:39181	2150103	3	True				
ANR	2150390	ParameterType	int *		2150103	0					
ANR	2150391	Identifier	score_ptr		2150103	1					
ANR	2150392	CFGEntryNode	ENTRY		2150103		True				
ANR	2150393	CFGExitNode	EXIT		2150103		True				
ANR	2150394	Symbol	ULOG_NO_EVENT		2150103						
ANR	2150395	Symbol	header_reader . getId		2150103						
ANR	2150396	Symbol	id_result		2150103						
ANR	2150397	Symbol	* m_state		2150103						
ANR	2150398	Symbol	path_str		2150103						
ANR	2150399	Symbol	result		2150103						
ANR	2150400	Symbol	path		2150103						
ANR	2150401	Symbol	score		2150103						
ANR	2150402	Symbol	m_state		2150103						
ANR	2150403	Symbol	rot		2150103						
ANR	2150404	Symbol	* score_ptr		2150103						
ANR	2150405	Symbol	header_reader		2150103						
ANR	2150406	Symbol	header_reader . Read		2150103						
ANR	2150407	Symbol	m_state -> CompareUniqId		2150103						
ANR	2150408	Symbol	SCORE_FACTOR_UNIQ_MATCH		2150103						
ANR	2150409	Symbol	result_str		2150103						
ANR	2150410	Symbol	match_thresh		2150103						
ANR	2150411	Symbol	NULL		2150103						
ANR	2150412	Symbol	header_reader . getId ( ) . Value		2150103						
ANR	2150413	Symbol	log_reader		2150103						
ANR	2150414	Symbol	false		2150103						
ANR	2150415	Symbol	D_FULLDEBUG		2150103						
ANR	2150416	Symbol	score_ptr		2150103						
ANR	2150417	Symbol	MATCH_ERROR		2150103						
ANR	2150418	Symbol	log_reader . initialize		2150103						
ANR	2150419	Symbol	ULOG_OK		2150103						
ANR	2150420	Symbol	EvalScore		2150103						
ANR	2150421	Symbol	path_str . Value		2150103						
ANR	2150422	Symbol	UNKNOWN		2150103						
ANR	2150423	Symbol	status		2150103						
ANR	2150424	Function	ReadUserLogMatch :: EvalScore	1635:0:40987:41412							
ANR	2150425	FunctionDef	"ReadUserLogMatch :: EvalScore (int match_thresh , int score)"		2150424	0					
ANR	2150426	CompoundStatement		1639:0:41090:41412	2150424	0					
ANR	2150427	IfStatement	if ( score < 0 )		2150424	0					
ANR	2150428	Condition	score < 0	1642:6:41119:41127	2150424	0	True				
ANR	2150429	RelationalExpression	score < 0		2150424	0		<			
ANR	2150430	Identifier	score		2150424	0					
ANR	2150431	PrimaryExpression	0		2150424	1					
ANR	2150432	CompoundStatement		4:18:40:40	2150424	1					
ANR	2150433	ReturnStatement	return MATCH_ERROR ;	1643:2:41135:41153	2150424	0	True				
ANR	2150434	Identifier	MATCH_ERROR		2150424	0					
ANR	2150435	ElseStatement	else		2150424	0					
ANR	2150436	IfStatement	if ( score < SCORE_MIN_MATCH )		2150424	0					
ANR	2150437	Condition	score < SCORE_MIN_MATCH	1646:11:41231:41253	2150424	0	True				
ANR	2150438	RelationalExpression	score < SCORE_MIN_MATCH		2150424	0		<			
ANR	2150439	Identifier	score		2150424	0					
ANR	2150440	Identifier	SCORE_MIN_MATCH		2150424	1					
ANR	2150441	CompoundStatement		8:37:166:166	2150424	1					
ANR	2150442	ReturnStatement	return NOMATCH ;	1647:2:41261:41275	2150424	0	True				
ANR	2150443	Identifier	NOMATCH		2150424	0					
ANR	2150444	ElseStatement	else		2150424	0					
ANR	2150445	IfStatement	if ( score >= match_thresh )		2150424	0					
ANR	2150446	Condition	score >= match_thresh	1650:11:41338:41358	2150424	0	True				
ANR	2150447	RelationalExpression	score >= match_thresh		2150424	0		>=			
ANR	2150448	Identifier	score		2150424	0					
ANR	2150449	Identifier	match_thresh		2150424	1					
ANR	2150450	CompoundStatement		12:35:271:271	2150424	1					
ANR	2150451	ReturnStatement	return MATCH ;	1651:2:41366:41378	2150424	0	True				
ANR	2150452	Identifier	MATCH		2150424	0					
ANR	2150453	ElseStatement	else		2150424	0					
ANR	2150454	CompoundStatement		15:6:298:298	2150424	0					
ANR	2150455	ReturnStatement	return UNKNOWN ;	1654:2:41393:41407	2150424	0	True				
ANR	2150456	Identifier	UNKNOWN		2150424	0					
ANR	2150457	ReturnType	ReadUserLogMatch :: MatchResult		2150424	1					
ANR	2150458	Identifier	ReadUserLogMatch :: EvalScore		2150424	2					
ANR	2150459	ParameterList	"int match_thresh , int score"		2150424	3					
ANR	2150460	Parameter	int match_thresh	1637:1:41047:41065	2150424	0	True				
ANR	2150461	ParameterType	int		2150424	0					
ANR	2150462	Identifier	match_thresh		2150424	1					
ANR	2150463	Parameter	int score	1638:1:41069:41080	2150424	1	True				
ANR	2150464	ParameterType	int		2150424	0					
ANR	2150465	Identifier	score		2150424	1					
ANR	2150466	CFGEntryNode	ENTRY		2150424		True				
ANR	2150467	CFGExitNode	EXIT		2150424		True				
ANR	2150468	Symbol	score		2150424						
ANR	2150469	Symbol	match_thresh		2150424						
ANR	2150470	Symbol	NOMATCH		2150424						
ANR	2150471	Symbol	SCORE_MIN_MATCH		2150424						
ANR	2150472	Symbol	UNKNOWN		2150424						
ANR	2150473	Symbol	MATCH_ERROR		2150424						
ANR	2150474	Symbol	MATCH		2150424						
ANR	2150475	Function	ReadUserLogMatch :: MatchStr	1658:0:41415:41696							
ANR	2150476	FunctionDef	ReadUserLogMatch :: MatchStr (ReadUserLogMatch :: MatchResult value)		2150475	0					
ANR	2150477	CompoundStatement		1660:0:41500:41696	2150475	0					
ANR	2150478	SwitchStatement	switch ( value )		2150475	0					
ANR	2150479	Condition	value	1661:9:41511:41515	2150475	0	True				
ANR	2150480	Identifier	value		2150475	0					
ANR	2150481	CompoundStatement		2:17:18:18	2150475	1					
ANR	2150482	Label	case MATCH_ERROR :	1662:1:41522:41538	2150475	0	True				
ANR	2150483	Identifier	MATCH_ERROR		2150475	0					
ANR	2150484	ReturnStatement	"return ""ERROR"" ;"	1663:2:41542:41556	2150475	1	True				
ANR	2150485	PrimaryExpression	"""ERROR"""		2150475	0					
ANR	2150486	Label	case MATCH :	1664:1:41559:41569	2150475	2	True				
ANR	2150487	Identifier	MATCH		2150475	0					
ANR	2150488	ReturnStatement	"return ""MATCH"" ;"	1665:2:41573:41587	2150475	3	True				
ANR	2150489	PrimaryExpression	"""MATCH"""		2150475	0					
ANR	2150490	Label	case UNKNOWN :	1666:1:41590:41602	2150475	4	True				
ANR	2150491	Identifier	UNKNOWN		2150475	0					
ANR	2150492	ReturnStatement	"return ""UNKNOWN"" ;"	1667:2:41606:41622	2150475	5	True				
ANR	2150493	PrimaryExpression	"""UNKNOWN"""		2150475	0					
ANR	2150494	Label	case NOMATCH :	1668:1:41625:41637	2150475	6	True				
ANR	2150495	Identifier	NOMATCH		2150475	0					
ANR	2150496	ReturnStatement	"return ""NOMATCH"" ;"	1669:2:41641:41657	2150475	7	True				
ANR	2150497	PrimaryExpression	"""NOMATCH"""		2150475	0					
ANR	2150498	Label	default :	1670:1:41660:41667	2150475	8	True				
ANR	2150499	Identifier	default		2150475	0					
ANR	2150500	ReturnStatement	"return ""<invalid>"" ;"	1671:2:41671:41689	2150475	9	True				
ANR	2150501	PrimaryExpression	"""<invalid>"""		2150475	0					
ANR	2150502	ExpressionStatement		1672:2:41693:41693	2150475	1	True				
ANR	2150503	ReturnType	const char *		2150475	1					
ANR	2150504	Identifier	ReadUserLogMatch :: MatchStr		2150475	2					
ANR	2150505	ParameterList	ReadUserLogMatch :: MatchResult value		2150475	3					
ANR	2150506	Parameter	ReadUserLogMatch :: MatchResult value	1659:28:41456:41490	2150475	0	True				
ANR	2150507	ParameterType	ReadUserLogMatch :: MatchResult		2150475	0					
ANR	2150508	Identifier	value		2150475	1					
ANR	2150509	CFGEntryNode	ENTRY		2150475		True				
ANR	2150510	CFGExitNode	EXIT		2150475		True				
ANR	2150511	Symbol	value		2150475						
