command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1562028	File	data/converged/CVE-2011-4930_htcondor/gmr.cpp								
ANR	1562029	Function	GMR :: GMR	24:0:856:905							
ANR	1562030	FunctionDef	GMR :: GMR ()		1562029	0					
ANR	1562031	CompoundStatement		25:0:868:905	1562029	0					
ANR	1562032	ExpressionStatement	parentAd = NULL	26:4:874:889	1562029	0	True				
ANR	1562033	AssignmentExpression	parentAd = NULL		1562029	0		=			
ANR	1562034	Identifier	parentAd		1562029	0					
ANR	1562035	Identifier	NULL		1562029	1					
ANR	1562036	ExpressionStatement	key = - 1	27:4:895:903	1562029	1	True				
ANR	1562037	AssignmentExpression	key = - 1		1562029	0		=			
ANR	1562038	Identifier	key		1562029	0					
ANR	1562039	UnaryOperationExpression	- 1		1562029	1					
ANR	1562040	UnaryOperator	-		1562029	0					
ANR	1562041	PrimaryExpression	1		1562029	1					
ANR	1562042	Identifier	GMR :: GMR		1562029	1					
ANR	1562043	ParameterList			1562029	2					
ANR	1562044	CFGEntryNode	ENTRY		1562029		True				
ANR	1562045	CFGExitNode	EXIT		1562029		True				
ANR	1562046	Symbol	NULL		1562029						
ANR	1562047	Symbol	parentAd		1562029						
ANR	1562048	Symbol	key		1562029						
ANR	1562049	Function	GMR :: ~GMR	31:0:909:1051							
ANR	1562050	FunctionDef	GMR :: ~GMR ()		1562049	0					
ANR	1562051	CompoundStatement		32:0:922:1051	1562049	0					
ANR	1562052	IfStatement	if ( parentAd )		1562049	0					
ANR	1562053	Condition	parentAd	33:8:932:939	1562049	0	True				
ANR	1562054	Identifier	parentAd		1562049	0					
ANR	1562055	CompoundStatement		2:19:20:20	1562049	1					
ANR	1562056	Statement	delete	34:8:953:958	1562049	0	True				
ANR	1562057	ExpressionStatement	parentAd	34:15:960:968	1562049	1	True				
ANR	1562058	Identifier	parentAd		1562049	0					
ANR	1562059	ExpressionStatement	"printf ( ""Deleted GMR %d (in dtor)\\n"" , key )"	37:4:999:1042	1562049	1	True				
ANR	1562060	CallExpression	"printf ( ""Deleted GMR %d (in dtor)\\n"" , key )"		1562049	0					
ANR	1562061	Callee	printf		1562049	0					
ANR	1562062	Identifier	printf		1562049	0					
ANR	1562063	ArgumentList	"""Deleted GMR %d (in dtor)\\n"""		1562049	1					
ANR	1562064	Argument	"""Deleted GMR %d (in dtor)\\n"""		1562049	0					
ANR	1562065	PrimaryExpression	"""Deleted GMR %d (in dtor)\\n"""		1562049	0					
ANR	1562066	Argument	key		1562049	1					
ANR	1562067	Identifier	key		1562049	0					
ANR	1562068	Identifier	GMR :: ~GMR		1562049	1					
ANR	1562069	ParameterList			1562049	2					
ANR	1562070	CFGEntryNode	ENTRY		1562049		True				
ANR	1562071	CFGExitNode	EXIT		1562049		True				
ANR	1562072	Symbol	parentAd		1562049						
ANR	1562073	Symbol	key		1562049						
ANR	1562074	Function	GMR :: MakeGMR	42:0:1055:4419							
ANR	1562075	FunctionDef	"GMR :: MakeGMR (int key , classad :: ClassAd * ad)"		1562074	0					
ANR	1562076	CompoundStatement		44:0:1107:4419	1562074	0					
ANR	1562077	IdentifierDeclStatement	const classad :: ExprTree * expr ;	45:4:1113:1151	1562074	0	True				
ANR	1562078	IdentifierDecl	* expr		1562074	0					
ANR	1562079	IdentifierDeclType	const classad :: ExprTree *		1562074	0					
ANR	1562080	Identifier	expr		1562074	1					
ANR	1562081	IdentifierDeclStatement	classad :: ClassAd * portAd ;	46:4:1157:1197	1562074	1	True				
ANR	1562082	IdentifierDecl	* portAd		1562074	0					
ANR	1562083	IdentifierDeclType	classad :: ClassAd *		1562074	0					
ANR	1562084	Identifier	portAd		1562074	1					
ANR	1562085	IdentifierDeclStatement	const classad :: ExprList * el ;	47:4:1203:1236	1562074	2	True				
ANR	1562086	IdentifierDecl	* el		1562074	0					
ANR	1562087	IdentifierDeclType	const classad :: ExprList *		1562074	0					
ANR	1562088	Identifier	el		1562074	1					
ANR	1562089	IdentifierDeclStatement	classad :: ExprListIterator eli ;	48:4:1242:1278	1562074	3	True				
ANR	1562090	IdentifierDecl	eli		1562074	0					
ANR	1562091	IdentifierDeclType	classad :: ExprListIterator		1562074	0					
ANR	1562092	Identifier	eli		1562074	1					
ANR	1562093	IdentifierDeclStatement	Dependencies :: iterator dit ;	49:4:1284:1311	1562074	4	True				
ANR	1562094	IdentifierDecl	dit		1562074	0					
ANR	1562095	IdentifierDeclType	Dependencies :: iterator		1562074	0					
ANR	1562096	Identifier	dit		1562074	1					
ANR	1562097	IdentifierDeclStatement	classad :: Value val ;	50:4:1317:1353	1562074	5	True				
ANR	1562098	IdentifierDecl	val		1562074	0					
ANR	1562099	IdentifierDeclType	classad :: Value		1562074	0					
ANR	1562100	Identifier	val		1562074	1					
ANR	1562101	IdentifierDeclStatement	GMR :: Port port ;	51:4:1359:1387	1562074	6	True				
ANR	1562102	IdentifierDecl	port		1562074	0					
ANR	1562103	IdentifierDeclType	GMR :: Port		1562074	0					
ANR	1562104	Identifier	port		1562074	1					
ANR	1562105	IdentifierDeclStatement	classad :: ClassAdIterator citr ;	52:4:1393:1430	1562074	7	True				
ANR	1562106	IdentifierDecl	citr		1562074	0					
ANR	1562107	IdentifierDeclType	classad :: ClassAdIterator		1562074	0					
ANR	1562108	Identifier	citr		1562074	1					
ANR	1562109	IdentifierDeclStatement	std :: string attr ;	53:4:1436:1469	1562074	8	True				
ANR	1562110	IdentifierDecl	attr		1562074	0					
ANR	1562111	IdentifierDeclType	std :: string		1562074	0					
ANR	1562112	Identifier	attr		1562074	1					
ANR	1562113	IdentifierDeclStatement	Ports :: iterator portItr ;	54:4:1475:1506	1562074	9	True				
ANR	1562114	IdentifierDecl	portItr		1562074	0					
ANR	1562115	IdentifierDeclType	Ports :: iterator		1562074	0					
ANR	1562116	Identifier	portItr		1562074	1					
ANR	1562117	IdentifierDeclStatement	GMR * gmr = new GMR ( ) ;	55:4:1512:1553	1562074	10	True				
ANR	1562118	IdentifierDecl	* gmr = new GMR ( )		1562074	0					
ANR	1562119	IdentifierDeclType	GMR *		1562074	0					
ANR	1562120	Identifier	gmr		1562074	1					
ANR	1562121	AssignmentExpression	* gmr = new GMR ( )		1562074	2		=			
ANR	1562122	Identifier	gmr		1562074	0					
ANR	1562123	UnaryExpression	new GMR ( )		1562074	1					
ANR	1562124	IfStatement	if ( ! gmr )		1562074	11					
ANR	1562125	Condition	! gmr	57:8:1564:1567	1562074	0	True				
ANR	1562126	UnaryOperationExpression	! gmr		1562074	0					
ANR	1562127	UnaryOperator	!		1562074	0					
ANR	1562128	Identifier	gmr		1562074	1					
ANR	1562129	ReturnStatement	return ( NULL ) ;	57:15:1571:1585	1562074	1	True				
ANR	1562130	Identifier	NULL		1562074	0					
ANR	1562131	ExpressionStatement	gmr -> parentAd = ad	58:4:1591:1609	1562074	12	True				
ANR	1562132	AssignmentExpression	gmr -> parentAd = ad		1562074	0		=			
ANR	1562133	PtrMemberAccess	gmr -> parentAd		1562074	0					
ANR	1562134	Identifier	gmr		1562074	0					
ANR	1562135	Identifier	parentAd		1562074	1					
ANR	1562136	Identifier	ad		1562074	1					
ANR	1562137	IfStatement	"if ( ! ad -> EvaluateAttr ( ""Ports"" , val ) )"		1562074	13					
ANR	1562138	Condition	"! ad -> EvaluateAttr ( ""Ports"" , val )"	61:8:1649:1681	1562074	0	True				
ANR	1562139	UnaryOperationExpression	"! ad -> EvaluateAttr ( ""Ports"" , val )"		1562074	0					
ANR	1562140	UnaryOperator	!		1562074	0					
ANR	1562141	CallExpression	"ad -> EvaluateAttr ( ""Ports"" , val )"		1562074	1					
ANR	1562142	Callee	ad -> EvaluateAttr		1562074	0					
ANR	1562143	PtrMemberAccess	ad -> EvaluateAttr		1562074	0					
ANR	1562144	Identifier	ad		1562074	0					
ANR	1562145	Identifier	EvaluateAttr		1562074	1					
ANR	1562146	ArgumentList	"""Ports"""		1562074	1					
ANR	1562147	Argument	"""Ports"""		1562074	0					
ANR	1562148	PrimaryExpression	"""Ports"""		1562074	0					
ANR	1562149	Argument	val		1562074	1					
ANR	1562150	Identifier	val		1562074	0					
ANR	1562151	CompoundStatement		18:44:577:577	1562074	1					
ANR	1562152	ExpressionStatement	"printf ( ""Failed to get 'Ports' attribute\\n"" )"	62:8:1695:1739	1562074	0	True				
ANR	1562153	CallExpression	"printf ( ""Failed to get 'Ports' attribute\\n"" )"		1562074	0					
ANR	1562154	Callee	printf		1562074	0					
ANR	1562155	Identifier	printf		1562074	0					
ANR	1562156	ArgumentList	"""Failed to get 'Ports' attribute\\n"""		1562074	1					
ANR	1562157	Argument	"""Failed to get 'Ports' attribute\\n"""		1562074	0					
ANR	1562158	PrimaryExpression	"""Failed to get 'Ports' attribute\\n"""		1562074	0					
ANR	1562159	Statement	delete	63:8:1749:1754	1562074	1	True				
ANR	1562160	ExpressionStatement	gmr	63:15:1756:1759	1562074	2	True				
ANR	1562161	Identifier	gmr		1562074	0					
ANR	1562162	ReturnStatement	return ( NULL ) ;	64:8:1769:1783	1562074	3	True				
ANR	1562163	Identifier	NULL		1562074	0					
ANR	1562164	IfStatement	if ( ! val . IsListValue ( el ) )		1562074	14					
ANR	1562165	Condition	! val . IsListValue ( el )	66:8:1799:1820	1562074	0	True				
ANR	1562166	UnaryOperationExpression	! val . IsListValue ( el )		1562074	0					
ANR	1562167	UnaryOperator	!		1562074	0					
ANR	1562168	CallExpression	val . IsListValue ( el )		1562074	1					
ANR	1562169	Callee	val . IsListValue		1562074	0					
ANR	1562170	MemberAccess	val . IsListValue		1562074	0					
ANR	1562171	Identifier	val		1562074	0					
ANR	1562172	Identifier	IsListValue		1562074	1					
ANR	1562173	ArgumentList	el		1562074	1					
ANR	1562174	Argument	el		1562074	0					
ANR	1562175	Identifier	el		1562074	0					
ANR	1562176	CompoundStatement		23:33:716:716	1562074	1					
ANR	1562177	ExpressionStatement	"printf ( ""'Ports' attribute not a list\\n"" )"	67:8:1834:1876	1562074	0	True				
ANR	1562178	CallExpression	"printf ( ""'Ports' attribute not a list\\n"" )"		1562074	0					
ANR	1562179	Callee	printf		1562074	0					
ANR	1562180	Identifier	printf		1562074	0					
ANR	1562181	ArgumentList	"""'Ports' attribute not a list\\n"""		1562074	1					
ANR	1562182	Argument	"""'Ports' attribute not a list\\n"""		1562074	0					
ANR	1562183	PrimaryExpression	"""'Ports' attribute not a list\\n"""		1562074	0					
ANR	1562184	Statement	delete	68:8:1886:1891	1562074	1	True				
ANR	1562185	ExpressionStatement	gmr	68:15:1893:1896	1562074	2	True				
ANR	1562186	Identifier	gmr		1562074	0					
ANR	1562187	ReturnStatement	return ( NULL ) ;	69:8:1906:1920	1562074	3	True				
ANR	1562188	Identifier	NULL		1562074	0					
ANR	1562189	ForStatement	for ( eli . Initialize ( el ) ; ! eli . IsAfterLast ( ) ; eli . NextExpr ( ) )		1562074	15					
ANR	1562190	ForInit	eli . Initialize ( el ) ;	73:9:1973:1994	1562074	0	True				
ANR	1562191	CallExpression	eli . Initialize ( el )		1562074	0					
ANR	1562192	Callee	eli . Initialize		1562074	0					
ANR	1562193	MemberAccess	eli . Initialize		1562074	0					
ANR	1562194	Identifier	eli		1562074	0					
ANR	1562195	Identifier	Initialize		1562074	1					
ANR	1562196	ArgumentList	el		1562074	1					
ANR	1562197	Argument	el		1562074	0					
ANR	1562198	Identifier	el		1562074	0					
ANR	1562199	Condition	! eli . IsAfterLast ( )	73:32:1996:2014	1562074	1	True				
ANR	1562200	UnaryOperationExpression	! eli . IsAfterLast ( )		1562074	0					
ANR	1562201	UnaryOperator	!		1562074	0					
ANR	1562202	CallExpression	eli . IsAfterLast ( )		1562074	1					
ANR	1562203	Callee	eli . IsAfterLast		1562074	0					
ANR	1562204	MemberAccess	eli . IsAfterLast		1562074	0					
ANR	1562205	Identifier	eli		1562074	0					
ANR	1562206	Identifier	IsAfterLast		1562074	1					
ANR	1562207	ArgumentList			1562074	1					
ANR	1562208	CallExpression	eli . NextExpr ( )	73:53:2017:2031	1562074	2	True				
ANR	1562209	Callee	eli . NextExpr		1562074	0					
ANR	1562210	MemberAccess	eli . NextExpr		1562074	0					
ANR	1562211	Identifier	eli		1562074	0					
ANR	1562212	Identifier	NextExpr		1562074	1					
ANR	1562213	ArgumentList			1562074	1					
ANR	1562214	CompoundStatement		30:71:927:927	1562074	3					
ANR	1562215	IfStatement	if ( ! ( expr = eli . CurrentExpr ( ) ) || expr -> GetKind ( ) != classad :: ExprTree :: CLASSAD_NODE )		1562074	0					
ANR	1562216	Condition	! ( expr = eli . CurrentExpr ( ) ) || expr -> GetKind ( ) != classad :: ExprTree :: CLASSAD_NODE	74:11:2048:2122	1562074	0	True				
ANR	1562217	OrExpression	! ( expr = eli . CurrentExpr ( ) ) || expr -> GetKind ( ) != classad :: ExprTree :: CLASSAD_NODE		1562074	0		||			
ANR	1562218	UnaryOperationExpression	! ( expr = eli . CurrentExpr ( ) )		1562074	0					
ANR	1562219	UnaryOperator	!		1562074	0					
ANR	1562220	AssignmentExpression	expr = eli . CurrentExpr ( )		1562074	1		=			
ANR	1562221	Identifier	expr		1562074	0					
ANR	1562222	CallExpression	eli . CurrentExpr ( )		1562074	1					
ANR	1562223	Callee	eli . CurrentExpr		1562074	0					
ANR	1562224	MemberAccess	eli . CurrentExpr		1562074	0					
ANR	1562225	Identifier	eli		1562074	0					
ANR	1562226	Identifier	CurrentExpr		1562074	1					
ANR	1562227	ArgumentList			1562074	1					
ANR	1562228	EqualityExpression	expr -> GetKind ( ) != classad :: ExprTree :: CLASSAD_NODE		1562074	1		!=			
ANR	1562229	CallExpression	expr -> GetKind ( )		1562074	0					
ANR	1562230	Callee	expr -> GetKind		1562074	0					
ANR	1562231	PtrMemberAccess	expr -> GetKind		1562074	0					
ANR	1562232	Identifier	expr		1562074	0					
ANR	1562233	Identifier	GetKind		1562074	1					
ANR	1562234	ArgumentList			1562074	1					
ANR	1562235	Identifier	classad :: ExprTree :: CLASSAD_NODE		1562074	1					
ANR	1562236	CompoundStatement		31:87:1016:1016	1562074	1					
ANR	1562237	ExpressionStatement	"printf ( ""Port is not a classad\\n"" )"	75:12:2138:2173	1562074	0	True				
ANR	1562238	CallExpression	"printf ( ""Port is not a classad\\n"" )"		1562074	0					
ANR	1562239	Callee	printf		1562074	0					
ANR	1562240	Identifier	printf		1562074	0					
ANR	1562241	ArgumentList	"""Port is not a classad\\n"""		1562074	1					
ANR	1562242	Argument	"""Port is not a classad\\n"""		1562074	0					
ANR	1562243	PrimaryExpression	"""Port is not a classad\\n"""		1562074	0					
ANR	1562244	Statement	delete	76:12:2187:2192	1562074	1	True				
ANR	1562245	ExpressionStatement	gmr	76:19:2194:2197	1562074	2	True				
ANR	1562246	Identifier	gmr		1562074	0					
ANR	1562247	ReturnStatement	return ( NULL ) ;	77:12:2211:2225	1562074	3	True				
ANR	1562248	Identifier	NULL		1562074	0					
ANR	1562249	ExpressionStatement	portAd = ( classad :: ClassAd * ) expr	79:8:2245:2277	1562074	1	True				
ANR	1562250	AssignmentExpression	portAd = ( classad :: ClassAd * ) expr		1562074	0		=			
ANR	1562251	Identifier	portAd		1562074	0					
ANR	1562252	CastExpression	( classad :: ClassAd * ) expr		1562074	1					
ANR	1562253	CastTarget	classad :: ClassAd *		1562074	0					
ANR	1562254	Identifier	expr		1562074	1					
ANR	1562255	ExpressionStatement	port . portAd = portAd	81:8:2288:2308	1562074	2	True				
ANR	1562256	AssignmentExpression	port . portAd = portAd		1562074	0		=			
ANR	1562257	MemberAccess	port . portAd		1562074	0					
ANR	1562258	Identifier	port		1562074	0					
ANR	1562259	Identifier	portAd		1562074	1					
ANR	1562260	Identifier	portAd		1562074	1					
ANR	1562261	IfStatement	"if ( ! portAd -> EvaluateAttrString ( ""label"" , port . label ) )"		1562074	3					
ANR	1562262	Condition	"! portAd -> EvaluateAttrString ( ""label"" , port . label )"	82:12:2322:2371	1562074	0	True				
ANR	1562263	UnaryOperationExpression	"! portAd -> EvaluateAttrString ( ""label"" , port . label )"		1562074	0					
ANR	1562264	UnaryOperator	!		1562074	0					
ANR	1562265	CallExpression	"portAd -> EvaluateAttrString ( ""label"" , port . label )"		1562074	1					
ANR	1562266	Callee	portAd -> EvaluateAttrString		1562074	0					
ANR	1562267	PtrMemberAccess	portAd -> EvaluateAttrString		1562074	0					
ANR	1562268	Identifier	portAd		1562074	0					
ANR	1562269	Identifier	EvaluateAttrString		1562074	1					
ANR	1562270	ArgumentList	"""label"""		1562074	1					
ANR	1562271	Argument	"""label"""		1562074	0					
ANR	1562272	PrimaryExpression	"""label"""		1562074	0					
ANR	1562273	Argument	port . label		1562074	1					
ANR	1562274	MemberAccess	port . label		1562074	0					
ANR	1562275	Identifier	port		1562074	0					
ANR	1562276	Identifier	label		1562074	1					
ANR	1562277	CompoundStatement		39:65:1267:1267	1562074	1					
ANR	1562278	ExpressionStatement	"printf ( ""Bad or missing port label\\n"" )"	83:12:2389:2428	1562074	0	True				
ANR	1562279	CallExpression	"printf ( ""Bad or missing port label\\n"" )"		1562074	0					
ANR	1562280	Callee	printf		1562074	0					
ANR	1562281	Identifier	printf		1562074	0					
ANR	1562282	ArgumentList	"""Bad or missing port label\\n"""		1562074	1					
ANR	1562283	Argument	"""Bad or missing port label\\n"""		1562074	0					
ANR	1562284	PrimaryExpression	"""Bad or missing port label\\n"""		1562074	0					
ANR	1562285	Statement	delete	84:12:2442:2447	1562074	1	True				
ANR	1562286	ExpressionStatement	gmr	84:19:2449:2452	1562074	2	True				
ANR	1562287	Identifier	gmr		1562074	0					
ANR	1562288	ReturnStatement	return ( NULL ) ;	85:12:2466:2480	1562074	3	True				
ANR	1562289	Identifier	NULL		1562074	0					
ANR	1562290	ForStatement	for ( portItr = gmr -> ports . begin ( ) ; portItr != gmr -> ports . end ( ) ; portItr ++ )		1562074	4					
ANR	1562291	ForInit	portItr = gmr -> ports . begin ( ) ;	89:13:2566:2592	1562074	0	True				
ANR	1562292	AssignmentExpression	portItr = gmr -> ports . begin ( )		1562074	0		=			
ANR	1562293	Identifier	portItr		1562074	0					
ANR	1562294	CallExpression	gmr -> ports . begin ( )		1562074	1					
ANR	1562295	Callee	gmr -> ports . begin		1562074	0					
ANR	1562296	MemberAccess	gmr -> ports . begin		1562074	0					
ANR	1562297	PtrMemberAccess	gmr -> ports		1562074	0					
ANR	1562298	Identifier	gmr		1562074	0					
ANR	1562299	Identifier	ports		1562074	1					
ANR	1562300	Identifier	begin		1562074	1					
ANR	1562301	ArgumentList			1562074	1					
ANR	1562302	Condition	portItr != gmr -> ports . end ( )	89:41:2594:2618	1562074	1	True				
ANR	1562303	EqualityExpression	portItr != gmr -> ports . end ( )		1562074	0		!=			
ANR	1562304	Identifier	portItr		1562074	0					
ANR	1562305	CallExpression	gmr -> ports . end ( )		1562074	1					
ANR	1562306	Callee	gmr -> ports . end		1562074	0					
ANR	1562307	MemberAccess	gmr -> ports . end		1562074	0					
ANR	1562308	PtrMemberAccess	gmr -> ports		1562074	0					
ANR	1562309	Identifier	gmr		1562074	0					
ANR	1562310	Identifier	ports		1562074	1					
ANR	1562311	Identifier	end		1562074	1					
ANR	1562312	ArgumentList			1562074	1					
ANR	1562313	PostIncDecOperationExpression	portItr ++	89:68:2621:2629	1562074	2	True				
ANR	1562314	Identifier	portItr		1562074	0					
ANR	1562315	IncDec	++		1562074	1					
ANR	1562316	CompoundStatement		46:79:1524:1524	1562074	3					
ANR	1562317	IfStatement	"if ( strcasecmp ( portItr -> label . c_str ( ) , port . label . c_str ( ) ) == 0 )"		1562074	0					
ANR	1562318	Condition	"strcasecmp ( portItr -> label . c_str ( ) , port . label . c_str ( ) ) == 0"	90:16:2650:2710	1562074	0	True				
ANR	1562319	EqualityExpression	"strcasecmp ( portItr -> label . c_str ( ) , port . label . c_str ( ) ) == 0"		1562074	0		==			
ANR	1562320	CallExpression	"strcasecmp ( portItr -> label . c_str ( ) , port . label . c_str ( ) )"		1562074	0					
ANR	1562321	Callee	strcasecmp		1562074	0					
ANR	1562322	Identifier	strcasecmp		1562074	0					
ANR	1562323	ArgumentList	portItr -> label . c_str ( )		1562074	1					
ANR	1562324	Argument	portItr -> label . c_str ( )		1562074	0					
ANR	1562325	CallExpression	portItr -> label . c_str ( )		1562074	0					
ANR	1562326	Callee	portItr -> label . c_str		1562074	0					
ANR	1562327	MemberAccess	portItr -> label . c_str		1562074	0					
ANR	1562328	PtrMemberAccess	portItr -> label		1562074	0					
ANR	1562329	Identifier	portItr		1562074	0					
ANR	1562330	Identifier	label		1562074	1					
ANR	1562331	Identifier	c_str		1562074	1					
ANR	1562332	ArgumentList			1562074	1					
ANR	1562333	Argument	port . label . c_str ( )		1562074	1					
ANR	1562334	CallExpression	port . label . c_str ( )		1562074	0					
ANR	1562335	Callee	port . label . c_str		1562074	0					
ANR	1562336	MemberAccess	port . label . c_str		1562074	0					
ANR	1562337	MemberAccess	port . label		1562074	0					
ANR	1562338	Identifier	port		1562074	0					
ANR	1562339	Identifier	label		1562074	1					
ANR	1562340	Identifier	c_str		1562074	1					
ANR	1562341	ArgumentList			1562074	1					
ANR	1562342	PrimaryExpression	0		1562074	1					
ANR	1562343	CompoundStatement		47:79:1605:1605	1562074	1					
ANR	1562344	ExpressionStatement	"printf ( ""Port %s already declared\\n"" , port . label . c_str ( ) )"	91:16:2731:2790	1562074	0	True				
ANR	1562345	CallExpression	"printf ( ""Port %s already declared\\n"" , port . label . c_str ( ) )"		1562074	0					
ANR	1562346	Callee	printf		1562074	0					
ANR	1562347	Identifier	printf		1562074	0					
ANR	1562348	ArgumentList	"""Port %s already declared\\n"""		1562074	1					
ANR	1562349	Argument	"""Port %s already declared\\n"""		1562074	0					
ANR	1562350	PrimaryExpression	"""Port %s already declared\\n"""		1562074	0					
ANR	1562351	Argument	port . label . c_str ( )		1562074	1					
ANR	1562352	CallExpression	port . label . c_str ( )		1562074	0					
ANR	1562353	Callee	port . label . c_str		1562074	0					
ANR	1562354	MemberAccess	port . label . c_str		1562074	0					
ANR	1562355	MemberAccess	port . label		1562074	0					
ANR	1562356	Identifier	port		1562074	0					
ANR	1562357	Identifier	label		1562074	1					
ANR	1562358	Identifier	c_str		1562074	1					
ANR	1562359	ArgumentList			1562074	1					
ANR	1562360	Statement	delete	92:16:2808:2813	1562074	1	True				
ANR	1562361	ExpressionStatement	gmr	92:23:2815:2818	1562074	2	True				
ANR	1562362	Identifier	gmr		1562074	0					
ANR	1562363	ReturnStatement	return ( NULL ) ;	93:16:2836:2850	1562074	3	True				
ANR	1562364	Identifier	NULL		1562074	0					
ANR	1562365	ExpressionStatement	citr . Initialize ( * portAd )	99:8:2954:2980	1562074	5	True				
ANR	1562366	CallExpression	citr . Initialize ( * portAd )		1562074	0					
ANR	1562367	Callee	citr . Initialize		1562074	0					
ANR	1562368	MemberAccess	citr . Initialize		1562074	0					
ANR	1562369	Identifier	citr		1562074	0					
ANR	1562370	Identifier	Initialize		1562074	1					
ANR	1562371	ArgumentList	* portAd		1562074	1					
ANR	1562372	Argument	* portAd		1562074	0					
ANR	1562373	UnaryOperationExpression	* portAd		1562074	0					
ANR	1562374	UnaryOperator	*		1562074	0					
ANR	1562375	Identifier	portAd		1562074	1					
ANR	1562376	ForStatement	"for ( ; ! citr . IsAfterLast ( ) ; citr . NextAttribute ( attr , expr ) )"		1562074	6					
ANR	1562377	Condition	! citr . IsAfterLast ( )	100:15:2997:3016	1562074	0	True				
ANR	1562378	UnaryOperationExpression	! citr . IsAfterLast ( )		1562074	0					
ANR	1562379	UnaryOperator	!		1562074	0					
ANR	1562380	CallExpression	citr . IsAfterLast ( )		1562074	1					
ANR	1562381	Callee	citr . IsAfterLast		1562074	0					
ANR	1562382	MemberAccess	citr . IsAfterLast		1562074	0					
ANR	1562383	Identifier	citr		1562074	0					
ANR	1562384	Identifier	IsAfterLast		1562074	1					
ANR	1562385	ArgumentList			1562074	1					
ANR	1562386	CallExpression	"citr . NextAttribute ( attr , expr )"	100:38:3020:3051	1562074	1	True				
ANR	1562387	Callee	citr . NextAttribute		1562074	0					
ANR	1562388	MemberAccess	citr . NextAttribute		1562074	0					
ANR	1562389	Identifier	citr		1562074	0					
ANR	1562390	Identifier	NextAttribute		1562074	1					
ANR	1562391	ArgumentList	attr		1562074	1					
ANR	1562392	Argument	attr		1562074	0					
ANR	1562393	Identifier	attr		1562074	0					
ANR	1562394	Argument	expr		1562074	1					
ANR	1562395	Identifier	expr		1562074	0					
ANR	1562396	CompoundStatement		57:73:1947:1947	1562074	2					
ANR	1562397	ExpressionStatement	"citr . CurrentAttribute ( attr , expr )"	101:12:3069:3104	1562074	0	True				
ANR	1562398	CallExpression	"citr . CurrentAttribute ( attr , expr )"		1562074	0					
ANR	1562399	Callee	citr . CurrentAttribute		1562074	0					
ANR	1562400	MemberAccess	citr . CurrentAttribute		1562074	0					
ANR	1562401	Identifier	citr		1562074	0					
ANR	1562402	Identifier	CurrentAttribute		1562074	1					
ANR	1562403	ArgumentList	attr		1562074	1					
ANR	1562404	Argument	attr		1562074	0					
ANR	1562405	Identifier	attr		1562074	0					
ANR	1562406	Argument	expr		1562074	1					
ANR	1562407	Identifier	expr		1562074	0					
ANR	1562408	IfStatement	"if ( ! ad -> GetExternalReferences ( expr , port . dependencies , false ) )"		1562074	1					
ANR	1562409	Condition	"! ad -> GetExternalReferences ( expr , port . dependencies , false )"	102:16:3122:3181	1562074	0	True				
ANR	1562410	UnaryOperationExpression	"! ad -> GetExternalReferences ( expr , port . dependencies , false )"		1562074	0					
ANR	1562411	UnaryOperator	!		1562074	0					
ANR	1562412	CallExpression	"ad -> GetExternalReferences ( expr , port . dependencies , false )"		1562074	1					
ANR	1562413	Callee	ad -> GetExternalReferences		1562074	0					
ANR	1562414	PtrMemberAccess	ad -> GetExternalReferences		1562074	0					
ANR	1562415	Identifier	ad		1562074	0					
ANR	1562416	Identifier	GetExternalReferences		1562074	1					
ANR	1562417	ArgumentList	expr		1562074	1					
ANR	1562418	Argument	expr		1562074	0					
ANR	1562419	Identifier	expr		1562074	0					
ANR	1562420	Argument	port . dependencies		1562074	1					
ANR	1562421	MemberAccess	port . dependencies		1562074	0					
ANR	1562422	Identifier	port		1562074	0					
ANR	1562423	Identifier	dependencies		1562074	1					
ANR	1562424	Argument	false		1562074	2					
ANR	1562425	Identifier	false		1562074	0					
ANR	1562426	CompoundStatement		59:78:2076:2076	1562074	1					
ANR	1562427	ExpressionStatement	"printf ( ""Failed to get external refs for %s in port %s\\n"" , attr . c_str ( ) , port . label . c_str ( ) )"	103:16:3202:3317	1562074	0	True				
ANR	1562428	CallExpression	"printf ( ""Failed to get external refs for %s in port %s\\n"" , attr . c_str ( ) , port . label . c_str ( ) )"		1562074	0					
ANR	1562429	Callee	printf		1562074	0					
ANR	1562430	Identifier	printf		1562074	0					
ANR	1562431	ArgumentList	"""Failed to get external refs for %s in port %s\\n"""		1562074	1					
ANR	1562432	Argument	"""Failed to get external refs for %s in port %s\\n"""		1562074	0					
ANR	1562433	PrimaryExpression	"""Failed to get external refs for %s in port %s\\n"""		1562074	0					
ANR	1562434	Argument	attr . c_str ( )		1562074	1					
ANR	1562435	CallExpression	attr . c_str ( )		1562074	0					
ANR	1562436	Callee	attr . c_str		1562074	0					
ANR	1562437	MemberAccess	attr . c_str		1562074	0					
ANR	1562438	Identifier	attr		1562074	0					
ANR	1562439	Identifier	c_str		1562074	1					
ANR	1562440	ArgumentList			1562074	1					
ANR	1562441	Argument	port . label . c_str ( )		1562074	2					
ANR	1562442	CallExpression	port . label . c_str ( )		1562074	0					
ANR	1562443	Callee	port . label . c_str		1562074	0					
ANR	1562444	MemberAccess	port . label . c_str		1562074	0					
ANR	1562445	MemberAccess	port . label		1562074	0					
ANR	1562446	Identifier	port		1562074	0					
ANR	1562447	Identifier	label		1562074	1					
ANR	1562448	Identifier	c_str		1562074	1					
ANR	1562449	ArgumentList			1562074	1					
ANR	1562450	Statement	delete	105:16:3335:3340	1562074	1	True				
ANR	1562451	ExpressionStatement	gmr	105:23:3342:3345	1562074	2	True				
ANR	1562452	Identifier	gmr		1562074	0					
ANR	1562453	ReturnStatement	return ( NULL ) ;	106:16:3363:3377	1562074	3	True				
ANR	1562454	Identifier	NULL		1562074	0					
ANR	1562455	ForStatement	for ( dit = port . dependencies . begin ( ) ; dit != port . dependencies . end ( ) ; dit ++ )		1562074	7					
ANR	1562456	ForInit	dit = port . dependencies . begin ( ) ;	111:12:3480:3509	1562074	0	True				
ANR	1562457	AssignmentExpression	dit = port . dependencies . begin ( )		1562074	0		=			
ANR	1562458	Identifier	dit		1562074	0					
ANR	1562459	CallExpression	port . dependencies . begin ( )		1562074	1					
ANR	1562460	Callee	port . dependencies . begin		1562074	0					
ANR	1562461	MemberAccess	port . dependencies . begin		1562074	0					
ANR	1562462	MemberAccess	port . dependencies		1562074	0					
ANR	1562463	Identifier	port		1562074	0					
ANR	1562464	Identifier	dependencies		1562074	1					
ANR	1562465	Identifier	begin		1562074	1					
ANR	1562466	ArgumentList			1562074	1					
ANR	1562467	Condition	dit != port . dependencies . end ( )	111:42:3510:3537	1562074	1	True				
ANR	1562468	EqualityExpression	dit != port . dependencies . end ( )		1562074	0		!=			
ANR	1562469	Identifier	dit		1562074	0					
ANR	1562470	CallExpression	port . dependencies . end ( )		1562074	1					
ANR	1562471	Callee	port . dependencies . end		1562074	0					
ANR	1562472	MemberAccess	port . dependencies . end		1562074	0					
ANR	1562473	MemberAccess	port . dependencies		1562074	0					
ANR	1562474	Identifier	port		1562074	0					
ANR	1562475	Identifier	dependencies		1562074	1					
ANR	1562476	Identifier	end		1562074	1					
ANR	1562477	ArgumentList			1562074	1					
ANR	1562478	PostIncDecOperationExpression	dit ++	111:71:3539:3543	1562074	2	True				
ANR	1562479	Identifier	dit		1562074	0					
ANR	1562480	IncDec	++		1562074	1					
ANR	1562481	CompoundStatement		68:78:2438:2438	1562074	3					
ANR	1562482	IfStatement	"if ( strcasecmp ( dit -> c_str ( ) , port . label . c_str ( ) ) == 0 )"		1562074	0					
ANR	1562483	Condition	"strcasecmp ( dit -> c_str ( ) , port . label . c_str ( ) ) == 0"	113:16:3603:3655	1562074	0	True				
ANR	1562484	EqualityExpression	"strcasecmp ( dit -> c_str ( ) , port . label . c_str ( ) ) == 0"		1562074	0		==			
ANR	1562485	CallExpression	"strcasecmp ( dit -> c_str ( ) , port . label . c_str ( ) )"		1562074	0					
ANR	1562486	Callee	strcasecmp		1562074	0					
ANR	1562487	Identifier	strcasecmp		1562074	0					
ANR	1562488	ArgumentList	dit -> c_str ( )		1562074	1					
ANR	1562489	Argument	dit -> c_str ( )		1562074	0					
ANR	1562490	CallExpression	dit -> c_str ( )		1562074	0					
ANR	1562491	Callee	dit -> c_str		1562074	0					
ANR	1562492	PtrMemberAccess	dit -> c_str		1562074	0					
ANR	1562493	Identifier	dit		1562074	0					
ANR	1562494	Identifier	c_str		1562074	1					
ANR	1562495	ArgumentList			1562074	1					
ANR	1562496	Argument	port . label . c_str ( )		1562074	1					
ANR	1562497	CallExpression	port . label . c_str ( )		1562074	0					
ANR	1562498	Callee	port . label . c_str		1562074	0					
ANR	1562499	MemberAccess	port . label . c_str		1562074	0					
ANR	1562500	MemberAccess	port . label		1562074	0					
ANR	1562501	Identifier	port		1562074	0					
ANR	1562502	Identifier	label		1562074	1					
ANR	1562503	Identifier	c_str		1562074	1					
ANR	1562504	ArgumentList			1562074	1					
ANR	1562505	PrimaryExpression	0		1562074	1					
ANR	1562506	CompoundStatement		70:72:2551:2551	1562074	1					
ANR	1562507	ContinueStatement	continue ;	114:16:3677:3685	1562074	0	True				
ANR	1562508	ForStatement	for ( portItr = gmr -> ports . begin ( ) ; portItr != gmr -> ports . end ( ) ; portItr ++ )		1562074	1					
ANR	1562509	ForInit	portItr = gmr -> ports . begin ( ) ;	117:16:3776:3802	1562074	0	True				
ANR	1562510	AssignmentExpression	portItr = gmr -> ports . begin ( )		1562074	0		=			
ANR	1562511	Identifier	portItr		1562074	0					
ANR	1562512	CallExpression	gmr -> ports . begin ( )		1562074	1					
ANR	1562513	Callee	gmr -> ports . begin		1562074	0					
ANR	1562514	MemberAccess	gmr -> ports . begin		1562074	0					
ANR	1562515	PtrMemberAccess	gmr -> ports		1562074	0					
ANR	1562516	Identifier	gmr		1562074	0					
ANR	1562517	Identifier	ports		1562074	1					
ANR	1562518	Identifier	begin		1562074	1					
ANR	1562519	ArgumentList			1562074	1					
ANR	1562520	Condition	portItr != gmr -> ports . end ( )	117:43:3803:3827	1562074	1	True				
ANR	1562521	EqualityExpression	portItr != gmr -> ports . end ( )		1562074	0		!=			
ANR	1562522	Identifier	portItr		1562074	0					
ANR	1562523	CallExpression	gmr -> ports . end ( )		1562074	1					
ANR	1562524	Callee	gmr -> ports . end		1562074	0					
ANR	1562525	MemberAccess	gmr -> ports . end		1562074	0					
ANR	1562526	PtrMemberAccess	gmr -> ports		1562074	0					
ANR	1562527	Identifier	gmr		1562074	0					
ANR	1562528	Identifier	ports		1562074	1					
ANR	1562529	Identifier	end		1562074	1					
ANR	1562530	ArgumentList			1562074	1					
ANR	1562531	PostIncDecOperationExpression	portItr ++	117:69:3829:3837	1562074	2	True				
ANR	1562532	Identifier	portItr		1562074	0					
ANR	1562533	IncDec	++		1562074	1					
ANR	1562534	CompoundStatement		74:79:2731:2731	1562074	3					
ANR	1562535	IfStatement	"if ( strcasecmp ( dit -> c_str ( ) , portItr -> label . c_str ( ) ) == 0 )"		1562074	0					
ANR	1562536	Condition	"strcasecmp ( dit -> c_str ( ) , portItr -> label . c_str ( ) ) == 0"	118:20:3861:3915	1562074	0	True				
ANR	1562537	EqualityExpression	"strcasecmp ( dit -> c_str ( ) , portItr -> label . c_str ( ) ) == 0"		1562074	0		==			
ANR	1562538	CallExpression	"strcasecmp ( dit -> c_str ( ) , portItr -> label . c_str ( ) )"		1562074	0					
ANR	1562539	Callee	strcasecmp		1562074	0					
ANR	1562540	Identifier	strcasecmp		1562074	0					
ANR	1562541	ArgumentList	dit -> c_str ( )		1562074	1					
ANR	1562542	Argument	dit -> c_str ( )		1562074	0					
ANR	1562543	CallExpression	dit -> c_str ( )		1562074	0					
ANR	1562544	Callee	dit -> c_str		1562074	0					
ANR	1562545	PtrMemberAccess	dit -> c_str		1562074	0					
ANR	1562546	Identifier	dit		1562074	0					
ANR	1562547	Identifier	c_str		1562074	1					
ANR	1562548	ArgumentList			1562074	1					
ANR	1562549	Argument	portItr -> label . c_str ( )		1562074	1					
ANR	1562550	CallExpression	portItr -> label . c_str ( )		1562074	0					
ANR	1562551	Callee	portItr -> label . c_str		1562074	0					
ANR	1562552	MemberAccess	portItr -> label . c_str		1562074	0					
ANR	1562553	PtrMemberAccess	portItr -> label		1562074	0					
ANR	1562554	Identifier	portItr		1562074	0					
ANR	1562555	Identifier	label		1562074	1					
ANR	1562556	Identifier	c_str		1562074	1					
ANR	1562557	ArgumentList			1562074	1					
ANR	1562558	PrimaryExpression	0		1562074	1					
ANR	1562559	CompoundStatement		75:78:2811:2811	1562074	1					
ANR	1562560	BreakStatement	break ;	119:20:3941:3946	1562074	0	True				
ANR	1562561	IfStatement	if ( portItr == gmr -> ports . end ( ) )		1562074	2					
ANR	1562562	Condition	portItr == gmr -> ports . end ( )	122:16:3996:4023	1562074	0	True				
ANR	1562563	EqualityExpression	portItr == gmr -> ports . end ( )		1562074	0		==			
ANR	1562564	Identifier	portItr		1562074	0					
ANR	1562565	CallExpression	gmr -> ports . end ( )		1562074	1					
ANR	1562566	Callee	gmr -> ports . end		1562074	0					
ANR	1562567	MemberAccess	gmr -> ports . end		1562074	0					
ANR	1562568	PtrMemberAccess	gmr -> ports		1562074	0					
ANR	1562569	Identifier	gmr		1562074	0					
ANR	1562570	Identifier	ports		1562074	1					
ANR	1562571	Identifier	end		1562074	1					
ANR	1562572	ArgumentList			1562074	1					
ANR	1562573	CompoundStatement		79:47:2919:2919	1562074	1					
ANR	1562574	ExpressionStatement	"printf ( ""Illegal reference/dependency %s in port %s\\n"" , dit -> c_str ( ) , port . label . c_str ( ) )"	123:16:4045:4157	1562074	0	True				
ANR	1562575	CallExpression	"printf ( ""Illegal reference/dependency %s in port %s\\n"" , dit -> c_str ( ) , port . label . c_str ( ) )"		1562074	0					
ANR	1562576	Callee	printf		1562074	0					
ANR	1562577	Identifier	printf		1562074	0					
ANR	1562578	ArgumentList	"""Illegal reference/dependency %s in port %s\\n"""		1562074	1					
ANR	1562579	Argument	"""Illegal reference/dependency %s in port %s\\n"""		1562074	0					
ANR	1562580	PrimaryExpression	"""Illegal reference/dependency %s in port %s\\n"""		1562074	0					
ANR	1562581	Argument	dit -> c_str ( )		1562074	1					
ANR	1562582	CallExpression	dit -> c_str ( )		1562074	0					
ANR	1562583	Callee	dit -> c_str		1562074	0					
ANR	1562584	PtrMemberAccess	dit -> c_str		1562074	0					
ANR	1562585	Identifier	dit		1562074	0					
ANR	1562586	Identifier	c_str		1562074	1					
ANR	1562587	ArgumentList			1562074	1					
ANR	1562588	Argument	port . label . c_str ( )		1562074	2					
ANR	1562589	CallExpression	port . label . c_str ( )		1562074	0					
ANR	1562590	Callee	port . label . c_str		1562074	0					
ANR	1562591	MemberAccess	port . label . c_str		1562074	0					
ANR	1562592	MemberAccess	port . label		1562074	0					
ANR	1562593	Identifier	port		1562074	0					
ANR	1562594	Identifier	label		1562074	1					
ANR	1562595	Identifier	c_str		1562074	1					
ANR	1562596	ArgumentList			1562074	1					
ANR	1562597	Statement	delete	125:16:4175:4180	1562074	1	True				
ANR	1562598	ExpressionStatement	gmr	125:23:4182:4185	1562074	2	True				
ANR	1562599	Identifier	gmr		1562074	0					
ANR	1562600	ReturnStatement	return ( NULL ) ;	126:16:4203:4217	1562074	3	True				
ANR	1562601	Identifier	NULL		1562074	0					
ANR	1562602	ExpressionStatement	gmr -> ports . push_back ( port )	131:8:4293:4321	1562074	8	True				
ANR	1562603	CallExpression	gmr -> ports . push_back ( port )		1562074	0					
ANR	1562604	Callee	gmr -> ports . push_back		1562074	0					
ANR	1562605	MemberAccess	gmr -> ports . push_back		1562074	0					
ANR	1562606	PtrMemberAccess	gmr -> ports		1562074	0					
ANR	1562607	Identifier	gmr		1562074	0					
ANR	1562608	Identifier	ports		1562074	1					
ANR	1562609	Identifier	push_back		1562074	1					
ANR	1562610	ArgumentList	port		1562074	1					
ANR	1562611	Argument	port		1562074	0					
ANR	1562612	Identifier	port		1562074	0					
ANR	1562613	ExpressionStatement	gmr -> key = key	134:4:4334:4348	1562074	16	True				
ANR	1562614	AssignmentExpression	gmr -> key = key		1562074	0		=			
ANR	1562615	PtrMemberAccess	gmr -> key		1562074	0					
ANR	1562616	Identifier	gmr		1562074	0					
ANR	1562617	Identifier	key		1562074	1					
ANR	1562618	Identifier	key		1562074	1					
ANR	1562619	ReturnStatement	return ( gmr ) ;	136:4:4404:4417	1562074	17	True				
ANR	1562620	Identifier	gmr		1562074	0					
ANR	1562621	ReturnType	GMR *		1562074	1					
ANR	1562622	Identifier	GMR :: MakeGMR		1562074	2					
ANR	1562623	ParameterList	"int key , classad :: ClassAd * ad"		1562074	3					
ANR	1562624	Parameter	int key	43:14:1075:1081	1562074	0	True				
ANR	1562625	ParameterType	int		1562074	0					
ANR	1562626	Identifier	key		1562074	1					
ANR	1562627	Parameter	classad :: ClassAd * ad	43:23:1084:1103	1562074	1	True				
ANR	1562628	ParameterType	classad :: ClassAd *		1562074	0					
ANR	1562629	Identifier	ad		1562074	1					
ANR	1562630	CFGEntryNode	ENTRY		1562074		True				
ANR	1562631	CFGExitNode	EXIT		1562074		True				
ANR	1562632	Symbol	eli . CurrentExpr		1562074						
ANR	1562633	Symbol	port . portAd		1562074						
ANR	1562634	Symbol	ad -> GetExternalReferences		1562074						
ANR	1562635	Symbol	attr . c_str		1562074						
ANR	1562636	Symbol	gmr -> key		1562074						
ANR	1562637	Symbol	portItr		1562074						
ANR	1562638	Symbol	* dit		1562074						
ANR	1562639	Symbol	port . dependencies . end		1562074						
ANR	1562640	Symbol	gmr -> ports . begin		1562074						
ANR	1562641	Symbol	* gmr		1562074						
ANR	1562642	Symbol	citr		1562074						
ANR	1562643	Symbol	* ad		1562074						
ANR	1562644	Symbol	portItr -> label		1562074						
ANR	1562645	Symbol	gmr		1562074						
ANR	1562646	Symbol	dit		1562074						
ANR	1562647	Symbol	dit -> c_str		1562074						
ANR	1562648	Symbol	* portItr		1562074						
ANR	1562649	Symbol	eli . IsAfterLast		1562074						
ANR	1562650	Symbol	* portAd		1562074						
ANR	1562651	Symbol	portItr -> label . c_str		1562074						
ANR	1562652	Symbol	ad -> EvaluateAttr		1562074						
ANR	1562653	Symbol	port . dependencies . begin		1562074						
ANR	1562654	Symbol	expr		1562074						
ANR	1562655	Symbol	gmr -> ports		1562074						
ANR	1562656	Symbol	attr		1562074						
ANR	1562657	Symbol	val . IsListValue		1562074						
ANR	1562658	Symbol	gmr -> ports . end		1562074						
ANR	1562659	Symbol	strcasecmp		1562074						
ANR	1562660	Symbol	port . label . c_str		1562074						
ANR	1562661	Symbol	key		1562074						
ANR	1562662	Symbol	val		1562074						
ANR	1562663	Symbol	expr -> GetKind		1562074						
ANR	1562664	Symbol	port . dependencies		1562074						
ANR	1562665	Symbol	ad		1562074						
ANR	1562666	Symbol	eli		1562074						
ANR	1562667	Symbol	NULL		1562074						
ANR	1562668	Symbol	el		1562074						
ANR	1562669	Symbol	false		1562074						
ANR	1562670	Symbol	classad :: ExprTree :: CLASSAD_NODE		1562074						
ANR	1562671	Symbol	portAd -> EvaluateAttrString		1562074						
ANR	1562672	Symbol	gmr -> parentAd		1562074						
ANR	1562673	Symbol	portAd		1562074						
ANR	1562674	Symbol	port . label		1562074						
ANR	1562675	Symbol	port		1562074						
ANR	1562676	Symbol	* expr		1562074						
ANR	1562677	Symbol	citr . IsAfterLast		1562074						
ANR	1562678	Function	GMR :: GetExternalReferences	140:0:4423:5602							
ANR	1562679	FunctionDef	GMR :: GetExternalReferences (classad :: References & refs)		1562678	0					
ANR	1562680	CompoundStatement		142:0:4484:5602	1562678	0					
ANR	1562681	IdentifierDeclStatement	"classad :: ClassAd ctx , * pctx ;"	143:4:4490:4525	1562678	0	True				
ANR	1562682	IdentifierDecl	ctx		1562678	0					
ANR	1562683	IdentifierDeclType	classad :: ClassAd		1562678	0					
ANR	1562684	Identifier	ctx		1562678	1					
ANR	1562685	IdentifierDecl	* pctx		1562678	1					
ANR	1562686	IdentifierDeclType	classad :: ClassAd *		1562678	0					
ANR	1562687	Identifier	pctx		1562678	1					
ANR	1562688	IdentifierDeclStatement	classad :: PortReferences prefs ;	144:4:4531:4561	1562678	1	True				
ANR	1562689	IdentifierDecl	prefs		1562678	0					
ANR	1562690	IdentifierDeclType	classad :: PortReferences		1562678	0					
ANR	1562691	Identifier	prefs		1562678	1					
ANR	1562692	IdentifierDeclStatement	classad :: References tmp ;	145:4:4567:4595	1562678	2	True				
ANR	1562693	IdentifierDecl	tmp		1562678	0					
ANR	1562694	IdentifierDeclType	classad :: References		1562678	0					
ANR	1562695	Identifier	tmp		1562678	1					
ANR	1562696	IdentifierDeclStatement	Ports :: iterator itr ;	146:4:4601:4620	1562678	3	True				
ANR	1562697	IdentifierDecl	itr		1562678	0					
ANR	1562698	IdentifierDeclType	Ports :: iterator		1562678	0					
ANR	1562699	Identifier	itr		1562678	1					
ANR	1562700	IdentifierDeclStatement	classad :: ExprTree * tree ;	147:4:4626:4656	1562678	4	True				
ANR	1562701	IdentifierDecl	* tree		1562678	0					
ANR	1562702	IdentifierDeclType	classad :: ExprTree *		1562678	0					
ANR	1562703	Identifier	tree		1562678	1					
ANR	1562704	ExpressionStatement	"ctx . Insert ( ""_ad"" , parentAd )"	149:4:4663:4692	1562678	5	True				
ANR	1562705	CallExpression	"ctx . Insert ( ""_ad"" , parentAd )"		1562678	0					
ANR	1562706	Callee	ctx . Insert		1562678	0					
ANR	1562707	MemberAccess	ctx . Insert		1562678	0					
ANR	1562708	Identifier	ctx		1562678	0					
ANR	1562709	Identifier	Insert		1562678	1					
ANR	1562710	ArgumentList	"""_ad"""		1562678	1					
ANR	1562711	Argument	"""_ad"""		1562678	0					
ANR	1562712	PrimaryExpression	"""_ad"""		1562678	0					
ANR	1562713	Argument	parentAd		1562678	1					
ANR	1562714	Identifier	parentAd		1562678	0					
ANR	1562715	ForStatement	for ( itr = ports . begin ( ) ; itr != ports . end ( ) ; itr ++ )		1562678	6					
ANR	1562716	ForInit	itr = ports . begin ( ) ;	150:9:4703:4723	1562678	0	True				
ANR	1562717	AssignmentExpression	itr = ports . begin ( )		1562678	0		=			
ANR	1562718	Identifier	itr		1562678	0					
ANR	1562719	CallExpression	ports . begin ( )		1562678	1					
ANR	1562720	Callee	ports . begin		1562678	0					
ANR	1562721	MemberAccess	ports . begin		1562678	0					
ANR	1562722	Identifier	ports		1562678	0					
ANR	1562723	Identifier	begin		1562678	1					
ANR	1562724	ArgumentList			1562678	1					
ANR	1562725	Condition	itr != ports . end ( )	150:31:4725:4743	1562678	1	True				
ANR	1562726	EqualityExpression	itr != ports . end ( )		1562678	0		!=			
ANR	1562727	Identifier	itr		1562678	0					
ANR	1562728	CallExpression	ports . end ( )		1562678	1					
ANR	1562729	Callee	ports . end		1562678	0					
ANR	1562730	MemberAccess	ports . end		1562678	0					
ANR	1562731	Identifier	ports		1562678	0					
ANR	1562732	Identifier	end		1562678	1					
ANR	1562733	ArgumentList			1562678	1					
ANR	1562734	PostIncDecOperationExpression	itr ++	150:52:4746:4750	1562678	2	True				
ANR	1562735	Identifier	itr		1562678	0					
ANR	1562736	IncDec	++		1562678	1					
ANR	1562737	CompoundStatement		9:60:269:269	1562678	3					
ANR	1562738	ExpressionStatement	pctx = new classad :: ClassAd ( )	152:8:4837:4867	1562678	0	True				
ANR	1562739	AssignmentExpression	pctx = new classad :: ClassAd ( )		1562678	0		=			
ANR	1562740	Identifier	pctx		1562678	0					
ANR	1562741	UnaryExpression	new classad :: ClassAd ( )		1562678	1					
ANR	1562742	ExpressionStatement	"ctx . Insert ( itr -> label , pctx )"	153:8:4877:4907	1562678	1	True				
ANR	1562743	CallExpression	"ctx . Insert ( itr -> label , pctx )"		1562678	0					
ANR	1562744	Callee	ctx . Insert		1562678	0					
ANR	1562745	MemberAccess	ctx . Insert		1562678	0					
ANR	1562746	Identifier	ctx		1562678	0					
ANR	1562747	Identifier	Insert		1562678	1					
ANR	1562748	ArgumentList	itr -> label		1562678	1					
ANR	1562749	Argument	itr -> label		1562678	0					
ANR	1562750	PtrMemberAccess	itr -> label		1562678	0					
ANR	1562751	Identifier	itr		1562678	0					
ANR	1562752	Identifier	label		1562678	1					
ANR	1562753	Argument	pctx		1562678	1					
ANR	1562754	Identifier	pctx		1562678	0					
ANR	1562755	ExpressionStatement	prefs [ pctx ] = tmp	154:8:4917:4934	1562678	2	True				
ANR	1562756	AssignmentExpression	prefs [ pctx ] = tmp		1562678	0		=			
ANR	1562757	ArrayIndexing	prefs [ pctx ]		1562678	0					
ANR	1562758	Identifier	prefs		1562678	0					
ANR	1562759	Identifier	pctx		1562678	1					
ANR	1562760	Identifier	tmp		1562678	1					
ANR	1562761	IfStatement	"if ( ! ( tree = itr -> portAd -> Lookup ( ""Requirements"" ) ) )"		1562678	3					
ANR	1562762	Condition	"! ( tree = itr -> portAd -> Lookup ( ""Requirements"" ) )"	157:12:4997:5045	1562678	0	True				
ANR	1562763	UnaryOperationExpression	"! ( tree = itr -> portAd -> Lookup ( ""Requirements"" ) )"		1562678	0					
ANR	1562764	UnaryOperator	!		1562678	0					
ANR	1562765	AssignmentExpression	"tree = itr -> portAd -> Lookup ( ""Requirements"" )"		1562678	1		=			
ANR	1562766	Identifier	tree		1562678	0					
ANR	1562767	CallExpression	"itr -> portAd -> Lookup ( ""Requirements"" )"		1562678	1					
ANR	1562768	Callee	itr -> portAd -> Lookup		1562678	0					
ANR	1562769	PtrMemberAccess	itr -> portAd -> Lookup		1562678	0					
ANR	1562770	PtrMemberAccess	itr -> portAd		1562678	0					
ANR	1562771	Identifier	itr		1562678	0					
ANR	1562772	Identifier	portAd		1562678	1					
ANR	1562773	Identifier	Lookup		1562678	1					
ANR	1562774	ArgumentList	"""Requirements"""		1562678	1					
ANR	1562775	Argument	"""Requirements"""		1562678	0					
ANR	1562776	PrimaryExpression	"""Requirements"""		1562678	0					
ANR	1562777	ContinueStatement	continue ;	157:64:5049:5057	1562678	1	True				
ANR	1562778	IfStatement	"if ( ! ( itr -> portAd -> GetExternalReferences ( tree , prefs ) ) )"		1562678	4					
ANR	1562779	Condition	"! ( itr -> portAd -> GetExternalReferences ( tree , prefs ) )"	158:12:5071:5124	1562678	0	True				
ANR	1562780	UnaryOperationExpression	"! ( itr -> portAd -> GetExternalReferences ( tree , prefs ) )"		1562678	0					
ANR	1562781	UnaryOperator	!		1562678	0					
ANR	1562782	CallExpression	"itr -> portAd -> GetExternalReferences ( tree , prefs )"		1562678	1					
ANR	1562783	Callee	itr -> portAd -> GetExternalReferences		1562678	0					
ANR	1562784	PtrMemberAccess	itr -> portAd -> GetExternalReferences		1562678	0					
ANR	1562785	PtrMemberAccess	itr -> portAd		1562678	0					
ANR	1562786	Identifier	itr		1562678	0					
ANR	1562787	Identifier	portAd		1562678	1					
ANR	1562788	Identifier	GetExternalReferences		1562678	1					
ANR	1562789	ArgumentList	tree		1562678	1					
ANR	1562790	Argument	tree		1562678	0					
ANR	1562791	Identifier	tree		1562678	0					
ANR	1562792	Argument	prefs		1562678	1					
ANR	1562793	Identifier	prefs		1562678	0					
ANR	1562794	CompoundStatement		17:69:643:643	1562678	1					
ANR	1562795	ExpressionStatement	"ctx . Remove ( ""_ad"" )"	159:12:5142:5161	1562678	0	True				
ANR	1562796	CallExpression	"ctx . Remove ( ""_ad"" )"		1562678	0					
ANR	1562797	Callee	ctx . Remove		1562678	0					
ANR	1562798	MemberAccess	ctx . Remove		1562678	0					
ANR	1562799	Identifier	ctx		1562678	0					
ANR	1562800	Identifier	Remove		1562678	1					
ANR	1562801	ArgumentList	"""_ad"""		1562678	1					
ANR	1562802	Argument	"""_ad"""		1562678	0					
ANR	1562803	PrimaryExpression	"""_ad"""		1562678	0					
ANR	1562804	ReturnStatement	return ( false ) ;	160:12:5175:5190	1562678	1	True				
ANR	1562805	Identifier	false		1562678	0					
ANR	1562806	IdentifierDeclStatement	classad :: PortReferences :: iterator prItr ;	165:4:5267:5309	1562678	7	True				
ANR	1562807	IdentifierDecl	prItr		1562678	0					
ANR	1562808	IdentifierDeclType	classad :: PortReferences :: iterator		1562678	0					
ANR	1562809	Identifier	prItr		1562678	1					
ANR	1562810	IdentifierDeclStatement	classad :: References :: iterator rItr ;	166:4:5315:5356	1562678	8	True				
ANR	1562811	IdentifierDecl	rItr		1562678	0					
ANR	1562812	IdentifierDeclType	classad :: References :: iterator		1562678	0					
ANR	1562813	Identifier	rItr		1562678	1					
ANR	1562814	ForStatement	for ( prItr = prefs . begin ( ) ; prItr != prefs . end ( ) ; prItr ++ )		1562678	9					
ANR	1562815	ForInit	prItr = prefs . begin ( ) ;	167:9:5367:5389	1562678	0	True				
ANR	1562816	AssignmentExpression	prItr = prefs . begin ( )		1562678	0		=			
ANR	1562817	Identifier	prItr		1562678	0					
ANR	1562818	CallExpression	prefs . begin ( )		1562678	1					
ANR	1562819	Callee	prefs . begin		1562678	0					
ANR	1562820	MemberAccess	prefs . begin		1562678	0					
ANR	1562821	Identifier	prefs		1562678	0					
ANR	1562822	Identifier	begin		1562678	1					
ANR	1562823	ArgumentList			1562678	1					
ANR	1562824	Condition	prItr != prefs . end ( )	167:33:5391:5411	1562678	1	True				
ANR	1562825	EqualityExpression	prItr != prefs . end ( )		1562678	0		!=			
ANR	1562826	Identifier	prItr		1562678	0					
ANR	1562827	CallExpression	prefs . end ( )		1562678	1					
ANR	1562828	Callee	prefs . end		1562678	0					
ANR	1562829	MemberAccess	prefs . end		1562678	0					
ANR	1562830	Identifier	prefs		1562678	0					
ANR	1562831	Identifier	end		1562678	1					
ANR	1562832	ArgumentList			1562678	1					
ANR	1562833	PostIncDecOperationExpression	prItr ++	167:56:5414:5420	1562678	2	True				
ANR	1562834	Identifier	prItr		1562678	0					
ANR	1562835	IncDec	++		1562678	1					
ANR	1562836	CompoundStatement		26:66:939:939	1562678	3					
ANR	1562837	ForStatement	for ( rItr = prItr -> second . begin ( ) ; rItr != prItr -> second . end ( ) ; rItr ++ )		1562678	0					
ANR	1562838	ForInit	rItr = prItr -> second . begin ( ) ;	168:13:5439:5466	1562678	0	True				
ANR	1562839	AssignmentExpression	rItr = prItr -> second . begin ( )		1562678	0		=			
ANR	1562840	Identifier	rItr		1562678	0					
ANR	1562841	CallExpression	prItr -> second . begin ( )		1562678	1					
ANR	1562842	Callee	prItr -> second . begin		1562678	0					
ANR	1562843	MemberAccess	prItr -> second . begin		1562678	0					
ANR	1562844	PtrMemberAccess	prItr -> second		1562678	0					
ANR	1562845	Identifier	prItr		1562678	0					
ANR	1562846	Identifier	second		1562678	1					
ANR	1562847	Identifier	begin		1562678	1					
ANR	1562848	ArgumentList			1562678	1					
ANR	1562849	Condition	rItr != prItr -> second . end ( )	168:42:5468:5493	1562678	1	True				
ANR	1562850	EqualityExpression	rItr != prItr -> second . end ( )		1562678	0		!=			
ANR	1562851	Identifier	rItr		1562678	0					
ANR	1562852	CallExpression	prItr -> second . end ( )		1562678	1					
ANR	1562853	Callee	prItr -> second . end		1562678	0					
ANR	1562854	MemberAccess	prItr -> second . end		1562678	0					
ANR	1562855	PtrMemberAccess	prItr -> second		1562678	0					
ANR	1562856	Identifier	prItr		1562678	0					
ANR	1562857	Identifier	second		1562678	1					
ANR	1562858	Identifier	end		1562678	1					
ANR	1562859	ArgumentList			1562678	1					
ANR	1562860	PostIncDecOperationExpression	rItr ++	168:70:5496:5501	1562678	2	True				
ANR	1562861	Identifier	rItr		1562678	0					
ANR	1562862	IncDec	++		1562678	1					
ANR	1562863	CompoundStatement		27:78:1019:1019	1562678	3					
ANR	1562864	ExpressionStatement	refs . insert ( * rItr )	169:12:5518:5538	1562678	0	True				
ANR	1562865	CallExpression	refs . insert ( * rItr )		1562678	0					
ANR	1562866	Callee	refs . insert		1562678	0					
ANR	1562867	MemberAccess	refs . insert		1562678	0					
ANR	1562868	Identifier	refs		1562678	0					
ANR	1562869	Identifier	insert		1562678	1					
ANR	1562870	ArgumentList	* rItr		1562678	1					
ANR	1562871	Argument	* rItr		1562678	0					
ANR	1562872	UnaryOperationExpression	* rItr		1562678	0					
ANR	1562873	UnaryOperator	*		1562678	0					
ANR	1562874	Identifier	rItr		1562678	1					
ANR	1562875	ExpressionStatement	"ctx . Remove ( ""_ad"" )"	173:4:5561:5580	1562678	10	True				
ANR	1562876	CallExpression	"ctx . Remove ( ""_ad"" )"		1562678	0					
ANR	1562877	Callee	ctx . Remove		1562678	0					
ANR	1562878	MemberAccess	ctx . Remove		1562678	0					
ANR	1562879	Identifier	ctx		1562678	0					
ANR	1562880	Identifier	Remove		1562678	1					
ANR	1562881	ArgumentList	"""_ad"""		1562678	1					
ANR	1562882	Argument	"""_ad"""		1562678	0					
ANR	1562883	PrimaryExpression	"""_ad"""		1562678	0					
ANR	1562884	ReturnStatement	return ( true ) ;	174:4:5586:5600	1562678	11	True				
ANR	1562885	Identifier	true		1562678	0					
ANR	1562886	ReturnType	bool		1562678	1					
ANR	1562887	Identifier	GMR :: GetExternalReferences		1562678	2					
ANR	1562888	ParameterList	classad :: References & refs		1562678	3					
ANR	1562889	Parameter	classad :: References & refs	141:28:4456:4480	1562678	0	True				
ANR	1562890	ParameterType	classad :: References &		1562678	0					
ANR	1562891	Identifier	refs		1562678	1					
ANR	1562892	CFGEntryNode	ENTRY		1562678		True				
ANR	1562893	CFGExitNode	EXIT		1562678		True				
ANR	1562894	Symbol	pctx		1562678						
ANR	1562895	Symbol	ports . begin		1562678						
ANR	1562896	Symbol	prItr -> second . end		1562678						
ANR	1562897	Symbol	ports		1562678						
ANR	1562898	Symbol	itr -> label		1562678						
ANR	1562899	Symbol	* pctx		1562678						
ANR	1562900	Symbol	* prItr		1562678						
ANR	1562901	Symbol	itr -> portAd		1562678						
ANR	1562902	Symbol	ports . end		1562678						
ANR	1562903	Symbol	tmp		1562678						
ANR	1562904	Symbol	prItr		1562678						
ANR	1562905	Symbol	prefs . begin		1562678						
ANR	1562906	Symbol	prItr -> second		1562678						
ANR	1562907	Symbol	rItr		1562678						
ANR	1562908	Symbol	prefs . end		1562678						
ANR	1562909	Symbol	ctx		1562678						
ANR	1562910	Symbol	itr		1562678						
ANR	1562911	Symbol	parentAd		1562678						
ANR	1562912	Symbol	prItr -> second . begin		1562678						
ANR	1562913	Symbol	* itr -> portAd		1562678						
ANR	1562914	Symbol	tree		1562678						
ANR	1562915	Symbol	false		1562678						
ANR	1562916	Symbol	* rItr		1562678						
ANR	1562917	Symbol	* itr		1562678						
ANR	1562918	Symbol	prefs		1562678						
ANR	1562919	Symbol	refs		1562678						
ANR	1562920	Symbol	true		1562678						
ANR	1562921	Symbol	itr -> portAd -> Lookup		1562678						
ANR	1562922	Symbol	* prefs		1562678						
ANR	1562923	Symbol	* * itr		1562678						
ANR	1562924	Symbol	itr -> portAd -> GetExternalReferences		1562678						
ANR	1562925	Function	GMR :: Display	230:0:6816:7215							
ANR	1562926	FunctionDef	GMR :: Display (FILE * fp)		1562925	0					
ANR	1562927	CompoundStatement		232:0:6846:7215	1562925	0					
ANR	1562928	IdentifierDeclStatement	Ports :: iterator itr ;	233:4:6852:6879	1562925	0	True				
ANR	1562929	IdentifierDecl	itr		1562925	0					
ANR	1562930	IdentifierDeclType	Ports :: iterator		1562925	0					
ANR	1562931	Identifier	itr		1562925	1					
ANR	1562932	IdentifierDeclStatement	Dependencies :: iterator dit ;	234:4:6885:6912	1562925	1	True				
ANR	1562933	IdentifierDecl	dit		1562925	0					
ANR	1562934	IdentifierDeclType	Dependencies :: iterator		1562925	0					
ANR	1562935	Identifier	dit		1562925	1					
ANR	1562936	ForStatement	for ( itr = ports . begin ( ) ; itr != ports . end ( ) ; itr ++ )		1562925	2					
ANR	1562937	ForInit	itr = ports . begin ( ) ;	236:9:6924:6944	1562925	0	True				
ANR	1562938	AssignmentExpression	itr = ports . begin ( )		1562925	0		=			
ANR	1562939	Identifier	itr		1562925	0					
ANR	1562940	CallExpression	ports . begin ( )		1562925	1					
ANR	1562941	Callee	ports . begin		1562925	0					
ANR	1562942	MemberAccess	ports . begin		1562925	0					
ANR	1562943	Identifier	ports		1562925	0					
ANR	1562944	Identifier	begin		1562925	1					
ANR	1562945	ArgumentList			1562925	1					
ANR	1562946	Condition	itr != ports . end ( )	236:31:6946:6964	1562925	1	True				
ANR	1562947	EqualityExpression	itr != ports . end ( )		1562925	0		!=			
ANR	1562948	Identifier	itr		1562925	0					
ANR	1562949	CallExpression	ports . end ( )		1562925	1					
ANR	1562950	Callee	ports . end		1562925	0					
ANR	1562951	MemberAccess	ports . end		1562925	0					
ANR	1562952	Identifier	ports		1562925	0					
ANR	1562953	Identifier	end		1562925	1					
ANR	1562954	ArgumentList			1562925	1					
ANR	1562955	PostIncDecOperationExpression	itr ++	236:52:6967:6971	1562925	2	True				
ANR	1562956	Identifier	itr		1562925	0					
ANR	1562957	IncDec	++		1562925	1					
ANR	1562958	CompoundStatement		5:60:128:128	1562925	3					
ANR	1562959	ExpressionStatement	"fprintf ( fp , ""Port %s: Depends on "" , itr -> label . c_str ( ) )"	237:8:6985:7043	1562925	0	True				
ANR	1562960	CallExpression	"fprintf ( fp , ""Port %s: Depends on "" , itr -> label . c_str ( ) )"		1562925	0					
ANR	1562961	Callee	fprintf		1562925	0					
ANR	1562962	Identifier	fprintf		1562925	0					
ANR	1562963	ArgumentList	fp		1562925	1					
ANR	1562964	Argument	fp		1562925	0					
ANR	1562965	Identifier	fp		1562925	0					
ANR	1562966	Argument	"""Port %s: Depends on """		1562925	1					
ANR	1562967	PrimaryExpression	"""Port %s: Depends on """		1562925	0					
ANR	1562968	Argument	itr -> label . c_str ( )		1562925	2					
ANR	1562969	CallExpression	itr -> label . c_str ( )		1562925	0					
ANR	1562970	Callee	itr -> label . c_str		1562925	0					
ANR	1562971	MemberAccess	itr -> label . c_str		1562925	0					
ANR	1562972	PtrMemberAccess	itr -> label		1562925	0					
ANR	1562973	Identifier	itr		1562925	0					
ANR	1562974	Identifier	label		1562925	1					
ANR	1562975	Identifier	c_str		1562925	1					
ANR	1562976	ArgumentList			1562925	1					
ANR	1562977	ForStatement	for ( dit = itr -> dependencies . begin ( ) ; dit != itr -> dependencies . end ( ) ; dit ++ )		1562925	1					
ANR	1562978	ForInit	dit = itr -> dependencies . begin ( ) ;	238:12:7057:7086	1562925	0	True				
ANR	1562979	AssignmentExpression	dit = itr -> dependencies . begin ( )		1562925	0		=			
ANR	1562980	Identifier	dit		1562925	0					
ANR	1562981	CallExpression	itr -> dependencies . begin ( )		1562925	1					
ANR	1562982	Callee	itr -> dependencies . begin		1562925	0					
ANR	1562983	MemberAccess	itr -> dependencies . begin		1562925	0					
ANR	1562984	PtrMemberAccess	itr -> dependencies		1562925	0					
ANR	1562985	Identifier	itr		1562925	0					
ANR	1562986	Identifier	dependencies		1562925	1					
ANR	1562987	Identifier	begin		1562925	1					
ANR	1562988	ArgumentList			1562925	1					
ANR	1562989	Condition	dit != itr -> dependencies . end ( )	238:42:7087:7114	1562925	1	True				
ANR	1562990	EqualityExpression	dit != itr -> dependencies . end ( )		1562925	0		!=			
ANR	1562991	Identifier	dit		1562925	0					
ANR	1562992	CallExpression	itr -> dependencies . end ( )		1562925	1					
ANR	1562993	Callee	itr -> dependencies . end		1562925	0					
ANR	1562994	MemberAccess	itr -> dependencies . end		1562925	0					
ANR	1562995	PtrMemberAccess	itr -> dependencies		1562925	0					
ANR	1562996	Identifier	itr		1562925	0					
ANR	1562997	Identifier	dependencies		1562925	1					
ANR	1562998	Identifier	end		1562925	1					
ANR	1562999	ArgumentList			1562925	1					
ANR	1563000	PostIncDecOperationExpression	dit ++	238:71:7116:7120	1562925	2	True				
ANR	1563001	Identifier	dit		1562925	0					
ANR	1563002	IncDec	++		1562925	1					
ANR	1563003	CompoundStatement		7:77:275:275	1562925	3					
ANR	1563004	ExpressionStatement	"fprintf ( fp , "" %s"" , dit -> c_str ( ) )"	239:12:7136:7171	1562925	0	True				
ANR	1563005	CallExpression	"fprintf ( fp , "" %s"" , dit -> c_str ( ) )"		1562925	0					
ANR	1563006	Callee	fprintf		1562925	0					
ANR	1563007	Identifier	fprintf		1562925	0					
ANR	1563008	ArgumentList	fp		1562925	1					
ANR	1563009	Argument	fp		1562925	0					
ANR	1563010	Identifier	fp		1562925	0					
ANR	1563011	Argument	""" %s"""		1562925	1					
ANR	1563012	PrimaryExpression	""" %s"""		1562925	0					
ANR	1563013	Argument	dit -> c_str ( )		1562925	2					
ANR	1563014	CallExpression	dit -> c_str ( )		1562925	0					
ANR	1563015	Callee	dit -> c_str		1562925	0					
ANR	1563016	PtrMemberAccess	dit -> c_str		1562925	0					
ANR	1563017	Identifier	dit		1562925	0					
ANR	1563018	Identifier	c_str		1562925	1					
ANR	1563019	ArgumentList			1562925	1					
ANR	1563020	ExpressionStatement	"putc ( '\\n' , fp )"	241:8:7191:7207	1562925	2	True				
ANR	1563021	CallExpression	"putc ( '\\n' , fp )"		1562925	0					
ANR	1563022	Callee	putc		1562925	0					
ANR	1563023	Identifier	putc		1562925	0					
ANR	1563024	ArgumentList	'\\n'		1562925	1					
ANR	1563025	Argument	'\\n'		1562925	0					
ANR	1563026	PrimaryExpression	'\\n'		1562925	0					
ANR	1563027	Argument	fp		1562925	1					
ANR	1563028	Identifier	fp		1562925	0					
ANR	1563029	ReturnType	void		1562925	1					
ANR	1563030	Identifier	GMR :: Display		1562925	2					
ANR	1563031	ParameterList	FILE * fp		1562925	3					
ANR	1563032	Parameter	FILE * fp	231:14:6835:6842	1562925	0	True				
ANR	1563033	ParameterType	FILE *		1562925	0					
ANR	1563034	Identifier	fp		1562925	1					
ANR	1563035	CFGEntryNode	ENTRY		1562925		True				
ANR	1563036	CFGExitNode	EXIT		1562925		True				
ANR	1563037	Symbol	itr -> label . c_str		1562925						
ANR	1563038	Symbol	ports . begin		1562925						
ANR	1563039	Symbol	itr		1562925						
ANR	1563040	Symbol	* dit		1562925						
ANR	1563041	Symbol	fp		1562925						
ANR	1563042	Symbol	ports		1562925						
ANR	1563043	Symbol	dit		1562925						
ANR	1563044	Symbol	* itr		1562925						
ANR	1563045	Symbol	dit -> c_str		1562925						
ANR	1563046	Symbol	itr -> label		1562925						
ANR	1563047	Symbol	itr -> dependencies		1562925						
ANR	1563048	Symbol	ports . end		1562925						
ANR	1563049	Symbol	itr -> dependencies . end		1562925						
ANR	1563050	Symbol	itr -> dependencies . begin		1562925						
