command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2632129	File	data/converged/CVE-2011-4930_htcondor/src_condor_c-gahp_gahp.cpp								
ANR	2632130	Function	main	26:0:894:1587							
ANR	2632131	FunctionDef	main ()		2632130	0					
ANR	2632132	CompoundStatement		26:11:905:1587	2632130	0					
ANR	2632133	IdentifierDeclStatement	char buff [ 500 ] ;	27:1:908:922	2632130	0	True				
ANR	2632134	IdentifierDecl	buff [ 500 ]		2632130	0					
ANR	2632135	IdentifierDeclType	char [ 500 ]		2632130	0					
ANR	2632136	Identifier	buff		2632130	1					
ANR	2632137	PrimaryExpression	500		2632130	2					
ANR	2632138	IdentifierDeclStatement	char buff2 [ 2 ] ;	28:1:925:938	2632130	1	True				
ANR	2632139	IdentifierDecl	buff2 [ 2 ]		2632130	0					
ANR	2632140	IdentifierDeclType	char [ 2 ]		2632130	0					
ANR	2632141	Identifier	buff2		2632130	1					
ANR	2632142	PrimaryExpression	2		2632130	2					
ANR	2632143	IdentifierDeclStatement	int count = 0 ;	29:1:941:952	2632130	2	True				
ANR	2632144	IdentifierDecl	count = 0		2632130	0					
ANR	2632145	IdentifierDeclType	int		2632130	0					
ANR	2632146	Identifier	count		2632130	1					
ANR	2632147	AssignmentExpression	count = 0		2632130	2		=			
ANR	2632148	Identifier	count		2632130	0					
ANR	2632149	PrimaryExpression	0		2632130	1					
ANR	2632150	IdentifierDeclStatement	int p = 0 ;	31:1:956:965	2632130	3	True				
ANR	2632151	IdentifierDecl	p = 0		2632130	0					
ANR	2632152	IdentifierDeclType	int		2632130	0					
ANR	2632153	Identifier	p		2632130	1					
ANR	2632154	AssignmentExpression	p = 0		2632130	2		=			
ANR	2632155	Identifier	p		2632130	0					
ANR	2632156	PrimaryExpression	0		2632130	1					
ANR	2632157	IdentifierDeclStatement	int io [ 2 ] ;	33:1:969:978	2632130	4	True				
ANR	2632158	IdentifierDecl	io [ 2 ]		2632130	0					
ANR	2632159	IdentifierDeclType	int [ 2 ]		2632130	0					
ANR	2632160	Identifier	io		2632130	1					
ANR	2632161	PrimaryExpression	2		2632130	2					
ANR	2632162	IfStatement	if ( pipe ( io ) != 0 )		2632130	5					
ANR	2632163	Condition	pipe ( io ) != 0	35:5:986:999	2632130	0	True				
ANR	2632164	EqualityExpression	pipe ( io ) != 0		2632130	0		!=			
ANR	2632165	CallExpression	pipe ( io )		2632130	0					
ANR	2632166	Callee	pipe		2632130	0					
ANR	2632167	Identifier	pipe		2632130	0					
ANR	2632168	ArgumentList	io		2632130	1					
ANR	2632169	Argument	io		2632130	0					
ANR	2632170	Identifier	io		2632130	0					
ANR	2632171	PrimaryExpression	0		2632130	1					
ANR	2632172	CompoundStatement		10:21:96:96	2632130	1					
ANR	2632173	ReturnStatement	return 1 ;	36:2:1006:1014	2632130	0	True				
ANR	2632174	PrimaryExpression	1		2632130	0					
ANR	2632175	IdentifierDeclStatement	pid_t child_pid = 0 ;	43:1:1026:1045	2632130	6	True				
ANR	2632176	IdentifierDecl	child_pid = 0		2632130	0					
ANR	2632177	IdentifierDeclType	pid_t		2632130	0					
ANR	2632178	Identifier	child_pid		2632130	1					
ANR	2632179	AssignmentExpression	child_pid = 0		2632130	2		=			
ANR	2632180	Identifier	child_pid		2632130	0					
ANR	2632181	PrimaryExpression	0		2632130	1					
ANR	2632182	IfStatement	if ( ( child_pid = fork ( ) ) == 0 )		2632130	7					
ANR	2632183	Condition	( child_pid = fork ( ) ) == 0	45:5:1053:1077	2632130	0	True				
ANR	2632184	EqualityExpression	( child_pid = fork ( ) ) == 0		2632130	0		==			
ANR	2632185	AssignmentExpression	child_pid = fork ( )		2632130	0		=			
ANR	2632186	Identifier	child_pid		2632130	0					
ANR	2632187	CallExpression	fork ( )		2632130	1					
ANR	2632188	Callee	fork		2632130	0					
ANR	2632189	Identifier	fork		2632130	0					
ANR	2632190	ArgumentList			2632130	1					
ANR	2632191	PrimaryExpression	0		2632130	1					
ANR	2632192	CompoundStatement		20:32:174:174	2632130	1					
ANR	2632193	ExpressionStatement	"printf ( ""Child\\n"" )"	46:2:1084:1102	2632130	0	True				
ANR	2632194	CallExpression	"printf ( ""Child\\n"" )"		2632130	0					
ANR	2632195	Callee	printf		2632130	0					
ANR	2632196	Identifier	printf		2632130	0					
ANR	2632197	ArgumentList	"""Child\\n"""		2632130	1					
ANR	2632198	Argument	"""Child\\n"""		2632130	0					
ANR	2632199	PrimaryExpression	"""Child\\n"""		2632130	0					
ANR	2632200	WhileStatement	while ( 1 )		2632130	1					
ANR	2632201	Condition	1	49:9:1115:1115	2632130	0	True				
ANR	2632202	PrimaryExpression	1		2632130	0					
ANR	2632203	CompoundStatement		24:12:212:212	2632130	1					
ANR	2632204	ExpressionStatement	sleep ( 1 )	50:3:1123:1132	2632130	0	True				
ANR	2632205	CallExpression	sleep ( 1 )		2632130	0					
ANR	2632206	Callee	sleep		2632130	0					
ANR	2632207	Identifier	sleep		2632130	0					
ANR	2632208	ArgumentList	1		2632130	1					
ANR	2632209	Argument	1		2632130	0					
ANR	2632210	PrimaryExpression	1		2632130	0					
ANR	2632211	ExpressionStatement	"write ( io [ 1 ] , ""<child>"" , 7 )"	51:6:1140:1167	2632130	1	True				
ANR	2632212	CallExpression	"write ( io [ 1 ] , ""<child>"" , 7 )"		2632130	0					
ANR	2632213	Callee	write		2632130	0					
ANR	2632214	Identifier	write		2632130	0					
ANR	2632215	ArgumentList	io [ 1 ]		2632130	1					
ANR	2632216	Argument	io [ 1 ]		2632130	0					
ANR	2632217	ArrayIndexing	io [ 1 ]		2632130	0					
ANR	2632218	Identifier	io		2632130	0					
ANR	2632219	PrimaryExpression	1		2632130	1					
ANR	2632220	Argument	"""<child>"""		2632130	1					
ANR	2632221	PrimaryExpression	"""<child>"""		2632130	0					
ANR	2632222	Argument	7		2632130	2					
ANR	2632223	PrimaryExpression	7		2632130	0					
ANR	2632224	ExpressionStatement	"printf ( ""Child PID %d\\n"" , child_pid )"	57:1:1180:1216	2632130	8	True				
ANR	2632225	CallExpression	"printf ( ""Child PID %d\\n"" , child_pid )"		2632130	0					
ANR	2632226	Callee	printf		2632130	0					
ANR	2632227	Identifier	printf		2632130	0					
ANR	2632228	ArgumentList	"""Child PID %d\\n"""		2632130	1					
ANR	2632229	Argument	"""Child PID %d\\n"""		2632130	0					
ANR	2632230	PrimaryExpression	"""Child PID %d\\n"""		2632130	0					
ANR	2632231	Argument	child_pid		2632130	1					
ANR	2632232	Identifier	child_pid		2632130	0					
ANR	2632233	ExpressionStatement	buff2 [ 1 ] = '\\n'	59:1:1220:1235	2632130	9	True				
ANR	2632234	AssignmentExpression	buff2 [ 1 ] = '\\n'		2632130	0		=			
ANR	2632235	ArrayIndexing	buff2 [ 1 ]		2632130	0					
ANR	2632236	Identifier	buff2		2632130	0					
ANR	2632237	PrimaryExpression	1		2632130	1					
ANR	2632238	PrimaryExpression	'\\n'		2632130	1					
ANR	2632239	DoStatement	do		2632130	10					
ANR	2632240	CompoundStatement		37:4:337:337	2632130	0					
ANR	2632241	ExpressionStatement	count = 0	63:2:1247:1256	2632130	0	True				
ANR	2632242	AssignmentExpression	count = 0		2632130	0		=			
ANR	2632243	Identifier	count		2632130	0					
ANR	2632244	PrimaryExpression	0		2632130	1					
ANR	2632245	DoStatement	do		2632130	1					
ANR	2632246	CompoundStatement		40:3:362:379	2632130	0					
ANR	2632247	IdentifierDeclStatement	int c = getchar ( ) ;	65:3:1268:1285	2632130	0	True				
ANR	2632248	IdentifierDecl	c = getchar ( )		2632130	0					
ANR	2632249	IdentifierDeclType	int		2632130	0					
ANR	2632250	Identifier	c		2632130	1					
ANR	2632251	AssignmentExpression	c = getchar ( )		2632130	2		=			
ANR	2632252	Identifier	c		2632130	0					
ANR	2632253	CallExpression	getchar ( )		2632130	1					
ANR	2632254	Callee	getchar		2632130	0					
ANR	2632255	Identifier	getchar		2632130	0					
ANR	2632256	ArgumentList			2632130	1					
ANR	2632257	ExpressionStatement	"sprintf ( buff2 , ""%c"" , c )"	66:3:1290:1314	2632130	1	True				
ANR	2632258	CallExpression	"sprintf ( buff2 , ""%c"" , c )"		2632130	0					
ANR	2632259	Callee	sprintf		2632130	0					
ANR	2632260	Identifier	sprintf		2632130	0					
ANR	2632261	ArgumentList	buff2		2632130	1					
ANR	2632262	Argument	buff2		2632130	0					
ANR	2632263	Identifier	buff2		2632130	0					
ANR	2632264	Argument	"""%c"""		2632130	1					
ANR	2632265	PrimaryExpression	"""%c"""		2632130	0					
ANR	2632266	Argument	c		2632130	2					
ANR	2632267	Identifier	c		2632130	0					
ANR	2632268	IfStatement	if ( buff2 [ 0 ] != '\\n' )		2632130	2					
ANR	2632269	Condition	buff2 [ 0 ] != '\\n'	67:7:1323:1338	2632130	0	True				
ANR	2632270	EqualityExpression	buff2 [ 0 ] != '\\n'		2632130	0		!=			
ANR	2632271	ArrayIndexing	buff2 [ 0 ]		2632130	0					
ANR	2632272	Identifier	buff2		2632130	0					
ANR	2632273	PrimaryExpression	0		2632130	1					
ANR	2632274	PrimaryExpression	'\\n'		2632130	1					
ANR	2632275	CompoundStatement		42:25:435:435	2632130	1					
ANR	2632276	ExpressionStatement	buff [ count ++ ] = buff2 [ 0 ]	68:4:1347:1369	2632130	0	True				
ANR	2632277	AssignmentExpression	buff [ count ++ ] = buff2 [ 0 ]		2632130	0		=			
ANR	2632278	ArrayIndexing	buff [ count ++ ]		2632130	0					
ANR	2632279	Identifier	buff		2632130	0					
ANR	2632280	PostIncDecOperationExpression	count ++		2632130	1					
ANR	2632281	Identifier	count		2632130	0					
ANR	2632282	IncDec	++		2632130	1					
ANR	2632283	ArrayIndexing	buff2 [ 0 ]		2632130	1					
ANR	2632284	Identifier	buff2		2632130	0					
ANR	2632285	PrimaryExpression	0		2632130	1					
ANR	2632286	Condition	buff2 [ 0 ] != '\\n'	70:11:1387:1402	2632130	1	True				
ANR	2632287	EqualityExpression	buff2 [ 0 ] != '\\n'		2632130	0		!=			
ANR	2632288	ArrayIndexing	buff2 [ 0 ]		2632130	0					
ANR	2632289	Identifier	buff2		2632130	0					
ANR	2632290	PrimaryExpression	0		2632130	1					
ANR	2632291	PrimaryExpression	'\\n'		2632130	1					
ANR	2632292	ExpressionStatement	buff [ count ++ ] = '\\0'	72:2:1409:1430	2632130	2	True				
ANR	2632293	AssignmentExpression	buff [ count ++ ] = '\\0'		2632130	0		=			
ANR	2632294	ArrayIndexing	buff [ count ++ ]		2632130	0					
ANR	2632295	Identifier	buff		2632130	0					
ANR	2632296	PostIncDecOperationExpression	count ++		2632130	1					
ANR	2632297	Identifier	count		2632130	0					
ANR	2632298	IncDec	++		2632130	1					
ANR	2632299	PrimaryExpression	'\\0'		2632130	1					
ANR	2632300	ExpressionStatement	"printf ( ""\\nHello, (%d) %s\\n"" , p , buff )"	74:2:1435:1473	2632130	3	True				
ANR	2632301	CallExpression	"printf ( ""\\nHello, (%d) %s\\n"" , p , buff )"		2632130	0					
ANR	2632302	Callee	printf		2632130	0					
ANR	2632303	Identifier	printf		2632130	0					
ANR	2632304	ArgumentList	"""\\nHello, (%d) %s\\n"""		2632130	1					
ANR	2632305	Argument	"""\\nHello, (%d) %s\\n"""		2632130	0					
ANR	2632306	PrimaryExpression	"""\\nHello, (%d) %s\\n"""		2632130	0					
ANR	2632307	Argument	p		2632130	1					
ANR	2632308	Identifier	p		2632130	0					
ANR	2632309	Argument	buff		2632130	2					
ANR	2632310	Identifier	buff		2632130	0					
ANR	2632311	ExpressionStatement	"read ( io [ 0 ] , buff , 7 )"	76:2:1480:1501	2632130	4	True				
ANR	2632312	CallExpression	"read ( io [ 0 ] , buff , 7 )"		2632130	0					
ANR	2632313	Callee	read		2632130	0					
ANR	2632314	Identifier	read		2632130	0					
ANR	2632315	ArgumentList	io [ 0 ]		2632130	1					
ANR	2632316	Argument	io [ 0 ]		2632130	0					
ANR	2632317	ArrayIndexing	io [ 0 ]		2632130	0					
ANR	2632318	Identifier	io		2632130	0					
ANR	2632319	PrimaryExpression	0		2632130	1					
ANR	2632320	Argument	buff		2632130	1					
ANR	2632321	Identifier	buff		2632130	0					
ANR	2632322	Argument	7		2632130	2					
ANR	2632323	PrimaryExpression	7		2632130	0					
ANR	2632324	ExpressionStatement	buff [ 7 ] = '\\0'	77:2:1505:1517	2632130	5	True				
ANR	2632325	AssignmentExpression	buff [ 7 ] = '\\0'		2632130	0		=			
ANR	2632326	ArrayIndexing	buff [ 7 ]		2632130	0					
ANR	2632327	Identifier	buff		2632130	0					
ANR	2632328	PrimaryExpression	7		2632130	1					
ANR	2632329	PrimaryExpression	'\\0'		2632130	1					
ANR	2632330	ExpressionStatement	"printf ( ""From child: %s\\n"" , buff )"	78:2:1521:1554	2632130	6	True				
ANR	2632331	CallExpression	"printf ( ""From child: %s\\n"" , buff )"		2632130	0					
ANR	2632332	Callee	printf		2632130	0					
ANR	2632333	Identifier	printf		2632130	0					
ANR	2632334	ArgumentList	"""From child: %s\\n"""		2632130	1					
ANR	2632335	Argument	"""From child: %s\\n"""		2632130	0					
ANR	2632336	PrimaryExpression	"""From child: %s\\n"""		2632130	0					
ANR	2632337	Argument	buff		2632130	1					
ANR	2632338	Identifier	buff		2632130	0					
ANR	2632339	Condition	1	82:10:1571:1571	2632130	1	True				
ANR	2632340	PrimaryExpression	1		2632130	0					
ANR	2632341	ReturnStatement	return 0 ;	84:1:1577:1585	2632130	11	True				
ANR	2632342	PrimaryExpression	0		2632130	0					
ANR	2632343	ReturnType	int		2632130	1					
ANR	2632344	Identifier	main		2632130	2					
ANR	2632345	ParameterList			2632130	3					
ANR	2632346	CFGEntryNode	ENTRY		2632130		True				
ANR	2632347	CFGExitNode	EXIT		2632130		True				
ANR	2632348	Symbol	getchar		2632130						
ANR	2632349	Symbol	c		2632130						
ANR	2632350	Symbol	buff2		2632130						
ANR	2632351	Symbol	io		2632130						
ANR	2632352	Symbol	count		2632130						
ANR	2632353	Symbol	* io		2632130						
ANR	2632354	Symbol	p		2632130						
ANR	2632355	Symbol	child_pid		2632130						
ANR	2632356	Symbol	fork		2632130						
ANR	2632357	Symbol	* buff2		2632130						
ANR	2632358	Symbol	* buff		2632130						
ANR	2632359	Symbol	pipe		2632130						
ANR	2632360	Symbol	buff		2632130						
