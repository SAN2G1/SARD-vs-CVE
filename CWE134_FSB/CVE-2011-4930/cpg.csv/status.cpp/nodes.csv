command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5245452	File	data/converged/CVE-2011-4930_htcondor/status.cpp								
ANR	5245453	DeclStmt									
ANR	5245454	Decl							AttrListPrintMask	AttrListPrintMask	pm
ANR	5245455	DeclStmt									
ANR	5245456	Decl							const char	const char *	DEFAULT
ANR	5245457	DeclStmt									
ANR	5245458	Decl							DCCollector	DCCollector *	pool
ANR	5245459	DeclStmt									
ANR	5245460	Decl							AdTypes	AdTypes	type
ANR	5245461	DeclStmt									
ANR	5245462	Decl							ppOption	ppOption	ppStyle
ANR	5245463	DeclStmt									
ANR	5245464	Decl							int	int	wantOnlyTotals
ANR	5245465	DeclStmt									
ANR	5245466	Decl							int	int	summarySize
ANR	5245467	DeclStmt									
ANR	5245468	Decl							bool	bool	expert
ANR	5245469	DeclStmt									
ANR	5245470	Decl							Mode	Mode	mode
ANR	5245471	DeclStmt									
ANR	5245472	Decl							int	int	diagnose
ANR	5245473	DeclStmt									
ANR	5245474	Decl							char	char *	direct
ANR	5245475	DeclStmt									
ANR	5245476	Decl							char	char *	statistics
ANR	5245477	DeclStmt									
ANR	5245478	Decl							char	char *	genericType
ANR	5245479	DeclStmt									
ANR	5245480	Decl							CondorQuery	CondorQuery *	query
ANR	5245481	DeclStmt									
ANR	5245482	Decl							char	char [ 1024 ]	buffer
ANR	5245483	DeclStmt									
ANR	5245484	Decl							ClassAdList	ClassAdList	result
ANR	5245485	DeclStmt									
ANR	5245486	Decl							char	char *	myName
ANR	5245487	DeclStmt									
ANR	5245488	Decl							StringList	StringList *	sortConstraints
ANR	5245489	DeclStmt									
ANR	5245490	Decl							ExtArray < ExprTree * >	ExtArray < ExprTree * >	sortLessThanExprs
ANR	5245491	DeclStmt									
ANR	5245492	Decl							ExtArray < ExprTree * >	ExtArray < ExprTree * >	sortEqualExprs
ANR	5245493	DeclStmt									
ANR	5245494	Decl							bool	bool	javaMode
ANR	5245495	DeclStmt									
ANR	5245496	Decl							bool	bool	vmMode
ANR	5245497	DeclStmt									
ANR	5245498	Decl							char	char *	target
ANR	5245499	DeclStmt									
ANR	5245500	Decl							ClassAd	ClassAd *	targetAd
ANR	5245501	DeclStmt									
ANR	5245502	Decl							ArgList	ArgList	projList
ANR	5245503	DeclStmt									
ANR	5245504	Decl							void	void ( )	usage
ANR	5245505	DeclStmt									
ANR	5245506	Decl							void	"void ( int , char * [ ] )"	firstPass
ANR	5245507	DeclStmt									
ANR	5245508	Decl							void	"void ( int , char * [ ] )"	secondPass
ANR	5245509	DeclStmt									
ANR	5245510	Decl							void	"void ( ClassAdList & , TrackTotals * )"	prettyPrint
ANR	5245511	DeclStmt									
ANR	5245512	Decl							int	"int ( const char * , const char * , int min_len )"	matchPrefix
ANR	5245513	DeclStmt									
ANR	5245514	Decl							int	"int ( AttrList * , AttrList * , void * )"	lessThanFunc
ANR	5245515	DeclStmt									
ANR	5245516	Decl							int	"int ( AttrList * , AttrList * , void * )"	customLessThanFunc
ANR	5245517	DeclStmt									
ANR	5245518	Decl							extern void	"extern void ( ppOption , int , const char * )"	setPPstyle
ANR	5245519	DeclStmt									
ANR	5245520	Decl							extern void	"extern void ( const char * , int , const char * )"	setType
ANR	5245521	DeclStmt									
ANR	5245522	Decl							extern void	"extern void ( Mode , int , const char * )"	setMode
ANR	5245523	Function	main	81:0:2556:12982							
ANR	5245524	FunctionDef	"main (int argc , char * argv [ ])"		5245523	0					
ANR	5245525	CompoundStatement		83:0:2590:12982	5245523	0					
ANR	5245526	ExpressionStatement	"install_sig_handler ( SIGPIPE , ( SIG_HANDLER ) SIG_IGN )"	85:1:2613:2664	5245523	0	True				
ANR	5245527	CallExpression	"install_sig_handler ( SIGPIPE , ( SIG_HANDLER ) SIG_IGN )"		5245523	0					
ANR	5245528	Callee	install_sig_handler		5245523	0					
ANR	5245529	Identifier	install_sig_handler		5245523	0					
ANR	5245530	ArgumentList	SIGPIPE		5245523	1					
ANR	5245531	Argument	SIGPIPE		5245523	0					
ANR	5245532	Identifier	SIGPIPE		5245523	0					
ANR	5245533	Argument	( SIG_HANDLER ) SIG_IGN		5245523	1					
ANR	5245534	CastExpression	( SIG_HANDLER ) SIG_IGN		5245523	0					
ANR	5245535	CastTarget	SIG_HANDLER		5245523	0					
ANR	5245536	Identifier	SIG_IGN		5245523	1					
ANR	5245537	ExpressionStatement	"myDistro -> Init ( argc , argv )"	89:1:2715:2743	5245523	1	True				
ANR	5245538	CallExpression	"myDistro -> Init ( argc , argv )"		5245523	0					
ANR	5245539	Callee	myDistro -> Init		5245523	0					
ANR	5245540	PtrMemberAccess	myDistro -> Init		5245523	0					
ANR	5245541	Identifier	myDistro		5245523	0					
ANR	5245542	Identifier	Init		5245523	1					
ANR	5245543	ArgumentList	argc		5245523	1					
ANR	5245544	Argument	argc		5245523	0					
ANR	5245545	Identifier	argc		5245523	0					
ANR	5245546	Argument	argv		5245523	1					
ANR	5245547	Identifier	argv		5245523	0					
ANR	5245548	ExpressionStatement	myName = argv [ 0 ]	90:1:2746:2762	5245523	2	True				
ANR	5245549	AssignmentExpression	myName = argv [ 0 ]		5245523	0		=			
ANR	5245550	Identifier	myName		5245523	0					
ANR	5245551	ArrayIndexing	argv [ 0 ]		5245523	1					
ANR	5245552	Identifier	argv		5245523	0					
ANR	5245553	PrimaryExpression	0		5245523	1					
ANR	5245554	ExpressionStatement	config ( )	91:1:2765:2773	5245523	3	True				
ANR	5245555	CallExpression	config ( )		5245523	0					
ANR	5245556	Callee	config		5245523	0					
ANR	5245557	Identifier	config		5245523	0					
ANR	5245558	ArgumentList			5245523	1					
ANR	5245559	ExpressionStatement	"firstPass ( argc , argv )"	97:1:3003:3025	5245523	4	True				
ANR	5245560	CallExpression	"firstPass ( argc , argv )"		5245523	0					
ANR	5245561	Callee	firstPass		5245523	0					
ANR	5245562	Identifier	firstPass		5245523	0					
ANR	5245563	ArgumentList	argc		5245523	1					
ANR	5245564	Argument	argc		5245523	0					
ANR	5245565	Identifier	argc		5245523	0					
ANR	5245566	Argument	argv		5245523	1					
ANR	5245567	Identifier	argv		5245523	0					
ANR	5245568	IfStatement	if ( mode == MODE_NOTSET )		5245523	5					
ANR	5245569	Condition	mode == MODE_NOTSET	100:5:3088:3106	5245523	0	True				
ANR	5245570	EqualityExpression	mode == MODE_NOTSET		5245523	0		==			
ANR	5245571	Identifier	mode		5245523	0					
ANR	5245572	Identifier	MODE_NOTSET		5245523	1					
ANR	5245573	CompoundStatement		18:26:518:518	5245523	1					
ANR	5245574	ExpressionStatement	"setMode ( MODE_STARTD_NORMAL , 0 , DEFAULT )"	101:2:3113:3153	5245523	0	True				
ANR	5245575	CallExpression	"setMode ( MODE_STARTD_NORMAL , 0 , DEFAULT )"		5245523	0					
ANR	5245576	Callee	setMode		5245523	0					
ANR	5245577	Identifier	setMode		5245523	0					
ANR	5245578	ArgumentList	MODE_STARTD_NORMAL		5245523	1					
ANR	5245579	Argument	MODE_STARTD_NORMAL		5245523	0					
ANR	5245580	Identifier	MODE_STARTD_NORMAL		5245523	0					
ANR	5245581	Argument	0		5245523	1					
ANR	5245582	PrimaryExpression	0		5245523	0					
ANR	5245583	Argument	DEFAULT		5245523	2					
ANR	5245584	Identifier	DEFAULT		5245523	0					
ANR	5245585	IfStatement	if ( ! ( query = new CondorQuery ( type ) ) )		5245523	6					
ANR	5245586	Condition	! ( query = new CondorQuery ( type ) )	105:5:3193:3225	5245523	0	True				
ANR	5245587	UnaryOperationExpression	! ( query = new CondorQuery ( type ) )		5245523	0					
ANR	5245588	UnaryOperator	!		5245523	0					
ANR	5245589	AssignmentExpression	query = new CondorQuery ( type )		5245523	1		=			
ANR	5245590	Identifier	query		5245523	0					
ANR	5245591	Identifier	type		5245523	1					
ANR	5245592	CompoundStatement		23:40:637:637	5245523	1					
ANR	5245593	ExpressionStatement	"fprintf ( stderr , ""Error:  Out of memory\\n"" )"	106:2:3232:3275	5245523	0	True				
ANR	5245594	CallExpression	"fprintf ( stderr , ""Error:  Out of memory\\n"" )"		5245523	0					
ANR	5245595	Callee	fprintf		5245523	0					
ANR	5245596	Identifier	fprintf		5245523	0					
ANR	5245597	ArgumentList	stderr		5245523	1					
ANR	5245598	Argument	stderr		5245523	0					
ANR	5245599	Identifier	stderr		5245523	0					
ANR	5245600	Argument	"""Error:  Out of memory\\n"""		5245523	1					
ANR	5245601	PrimaryExpression	"""Error:  Out of memory\\n"""		5245523	0					
ANR	5245602	ExpressionStatement	exit ( 1 )	107:2:3279:3287	5245523	1	True				
ANR	5245603	CallExpression	exit ( 1 )		5245523	0					
ANR	5245604	Callee	exit		5245523	0					
ANR	5245605	Identifier	exit		5245523	0					
ANR	5245606	ArgumentList	1		5245523	1					
ANR	5245607	Argument	1		5245523	0					
ANR	5245608	PrimaryExpression	1		5245523	0					
ANR	5245609	SwitchStatement	switch ( type )		5245523	7					
ANR	5245610	Condition	type	113:9:3467:3470	5245523	0	True				
ANR	5245611	Identifier	type		5245523	0					
ANR	5245612	CompoundStatement		32:1:883:883	5245523	1					
ANR	5245613	Label	case QUILL_AD :	116:3:3506:3519	5245523	0	True				
ANR	5245614	Identifier	QUILL_AD		5245523	0					
ANR	5245615	ExpressionStatement	"setPPstyle ( PP_QUILL_NORMAL , 0 , DEFAULT )"	117:2:3523:3562	5245523	1	True				
ANR	5245616	CallExpression	"setPPstyle ( PP_QUILL_NORMAL , 0 , DEFAULT )"		5245523	0					
ANR	5245617	Callee	setPPstyle		5245523	0					
ANR	5245618	Identifier	setPPstyle		5245523	0					
ANR	5245619	ArgumentList	PP_QUILL_NORMAL		5245523	1					
ANR	5245620	Argument	PP_QUILL_NORMAL		5245523	0					
ANR	5245621	Identifier	PP_QUILL_NORMAL		5245523	0					
ANR	5245622	Argument	0		5245523	1					
ANR	5245623	PrimaryExpression	0		5245523	0					
ANR	5245624	Argument	DEFAULT		5245523	2					
ANR	5245625	Identifier	DEFAULT		5245523	0					
ANR	5245626	BreakStatement	break ;	118:2:3566:3571	5245523	2	True				
ANR	5245627	Label	case STARTD_AD :	121:3:3610:3624	5245523	3	True				
ANR	5245628	Identifier	STARTD_AD		5245523	0					
ANR	5245629	ExpressionStatement	"setPPstyle ( PP_STARTD_NORMAL , 0 , DEFAULT )"	122:2:3628:3668	5245523	4	True				
ANR	5245630	CallExpression	"setPPstyle ( PP_STARTD_NORMAL , 0 , DEFAULT )"		5245523	0					
ANR	5245631	Callee	setPPstyle		5245523	0					
ANR	5245632	Identifier	setPPstyle		5245523	0					
ANR	5245633	ArgumentList	PP_STARTD_NORMAL		5245523	1					
ANR	5245634	Argument	PP_STARTD_NORMAL		5245523	0					
ANR	5245635	Identifier	PP_STARTD_NORMAL		5245523	0					
ANR	5245636	Argument	0		5245523	1					
ANR	5245637	PrimaryExpression	0		5245523	0					
ANR	5245638	Argument	DEFAULT		5245523	2					
ANR	5245639	Identifier	DEFAULT		5245523	0					
ANR	5245640	BreakStatement	break ;	123:2:3672:3677	5245523	5	True				
ANR	5245641	Label	case SCHEDD_AD :	125:3:3683:3697	5245523	6	True				
ANR	5245642	Identifier	SCHEDD_AD		5245523	0					
ANR	5245643	ExpressionStatement	"setPPstyle ( PP_SCHEDD_NORMAL , 0 , DEFAULT )"	126:2:3701:3741	5245523	7	True				
ANR	5245644	CallExpression	"setPPstyle ( PP_SCHEDD_NORMAL , 0 , DEFAULT )"		5245523	0					
ANR	5245645	Callee	setPPstyle		5245523	0					
ANR	5245646	Identifier	setPPstyle		5245523	0					
ANR	5245647	ArgumentList	PP_SCHEDD_NORMAL		5245523	1					
ANR	5245648	Argument	PP_SCHEDD_NORMAL		5245523	0					
ANR	5245649	Identifier	PP_SCHEDD_NORMAL		5245523	0					
ANR	5245650	Argument	0		5245523	1					
ANR	5245651	PrimaryExpression	0		5245523	0					
ANR	5245652	Argument	DEFAULT		5245523	2					
ANR	5245653	Identifier	DEFAULT		5245523	0					
ANR	5245654	BreakStatement	break ;	127:2:3745:3750	5245523	8	True				
ANR	5245655	Label	case MASTER_AD :	129:3:3756:3770	5245523	9	True				
ANR	5245656	Identifier	MASTER_AD		5245523	0					
ANR	5245657	ExpressionStatement	"setPPstyle ( PP_MASTER_NORMAL , 0 , DEFAULT )"	130:2:3774:3814	5245523	10	True				
ANR	5245658	CallExpression	"setPPstyle ( PP_MASTER_NORMAL , 0 , DEFAULT )"		5245523	0					
ANR	5245659	Callee	setPPstyle		5245523	0					
ANR	5245660	Identifier	setPPstyle		5245523	0					
ANR	5245661	ArgumentList	PP_MASTER_NORMAL		5245523	1					
ANR	5245662	Argument	PP_MASTER_NORMAL		5245523	0					
ANR	5245663	Identifier	PP_MASTER_NORMAL		5245523	0					
ANR	5245664	Argument	0		5245523	1					
ANR	5245665	PrimaryExpression	0		5245523	0					
ANR	5245666	Argument	DEFAULT		5245523	2					
ANR	5245667	Identifier	DEFAULT		5245523	0					
ANR	5245668	BreakStatement	break ;	131:2:3818:3823	5245523	11	True				
ANR	5245669	Label	case CKPT_SRVR_AD :	133:3:3829:3846	5245523	12	True				
ANR	5245670	Identifier	CKPT_SRVR_AD		5245523	0					
ANR	5245671	ExpressionStatement	"setPPstyle ( PP_CKPT_SRVR_NORMAL , 0 , DEFAULT )"	134:2:3850:3893	5245523	13	True				
ANR	5245672	CallExpression	"setPPstyle ( PP_CKPT_SRVR_NORMAL , 0 , DEFAULT )"		5245523	0					
ANR	5245673	Callee	setPPstyle		5245523	0					
ANR	5245674	Identifier	setPPstyle		5245523	0					
ANR	5245675	ArgumentList	PP_CKPT_SRVR_NORMAL		5245523	1					
ANR	5245676	Argument	PP_CKPT_SRVR_NORMAL		5245523	0					
ANR	5245677	Identifier	PP_CKPT_SRVR_NORMAL		5245523	0					
ANR	5245678	Argument	0		5245523	1					
ANR	5245679	PrimaryExpression	0		5245523	0					
ANR	5245680	Argument	DEFAULT		5245523	2					
ANR	5245681	Identifier	DEFAULT		5245523	0					
ANR	5245682	BreakStatement	break ;	135:2:3897:3902	5245523	14	True				
ANR	5245683	Label	case COLLECTOR_AD :	137:3:3908:3925	5245523	15	True				
ANR	5245684	Identifier	COLLECTOR_AD		5245523	0					
ANR	5245685	ExpressionStatement	"setPPstyle ( PP_COLLECTOR_NORMAL , 0 , DEFAULT )"	138:2:3929:3972	5245523	16	True				
ANR	5245686	CallExpression	"setPPstyle ( PP_COLLECTOR_NORMAL , 0 , DEFAULT )"		5245523	0					
ANR	5245687	Callee	setPPstyle		5245523	0					
ANR	5245688	Identifier	setPPstyle		5245523	0					
ANR	5245689	ArgumentList	PP_COLLECTOR_NORMAL		5245523	1					
ANR	5245690	Argument	PP_COLLECTOR_NORMAL		5245523	0					
ANR	5245691	Identifier	PP_COLLECTOR_NORMAL		5245523	0					
ANR	5245692	Argument	0		5245523	1					
ANR	5245693	PrimaryExpression	0		5245523	0					
ANR	5245694	Argument	DEFAULT		5245523	2					
ANR	5245695	Identifier	DEFAULT		5245523	0					
ANR	5245696	BreakStatement	break ;	139:2:3976:3981	5245523	17	True				
ANR	5245697	Label	case STORAGE_AD :	141:3:3987:4002	5245523	18	True				
ANR	5245698	Identifier	STORAGE_AD		5245523	0					
ANR	5245699	ExpressionStatement	"setPPstyle ( PP_STORAGE_NORMAL , 0 , DEFAULT )"	142:2:4006:4047	5245523	19	True				
ANR	5245700	CallExpression	"setPPstyle ( PP_STORAGE_NORMAL , 0 , DEFAULT )"		5245523	0					
ANR	5245701	Callee	setPPstyle		5245523	0					
ANR	5245702	Identifier	setPPstyle		5245523	0					
ANR	5245703	ArgumentList	PP_STORAGE_NORMAL		5245523	1					
ANR	5245704	Argument	PP_STORAGE_NORMAL		5245523	0					
ANR	5245705	Identifier	PP_STORAGE_NORMAL		5245523	0					
ANR	5245706	Argument	0		5245523	1					
ANR	5245707	PrimaryExpression	0		5245523	0					
ANR	5245708	Argument	DEFAULT		5245523	2					
ANR	5245709	Identifier	DEFAULT		5245523	0					
ANR	5245710	BreakStatement	break ;	143:2:4051:4056	5245523	20	True				
ANR	5245711	Label	case NEGOTIATOR_AD :	145:3:4062:4080	5245523	21	True				
ANR	5245712	Identifier	NEGOTIATOR_AD		5245523	0					
ANR	5245713	ExpressionStatement	"setPPstyle ( PP_NEGOTIATOR_NORMAL , 0 , DEFAULT )"	146:2:4084:4128	5245523	22	True				
ANR	5245714	CallExpression	"setPPstyle ( PP_NEGOTIATOR_NORMAL , 0 , DEFAULT )"		5245523	0					
ANR	5245715	Callee	setPPstyle		5245523	0					
ANR	5245716	Identifier	setPPstyle		5245523	0					
ANR	5245717	ArgumentList	PP_NEGOTIATOR_NORMAL		5245523	1					
ANR	5245718	Argument	PP_NEGOTIATOR_NORMAL		5245523	0					
ANR	5245719	Identifier	PP_NEGOTIATOR_NORMAL		5245523	0					
ANR	5245720	Argument	0		5245523	1					
ANR	5245721	PrimaryExpression	0		5245523	0					
ANR	5245722	Argument	DEFAULT		5245523	2					
ANR	5245723	Identifier	DEFAULT		5245523	0					
ANR	5245724	BreakStatement	break ;	147:2:4132:4137	5245523	23	True				
ANR	5245725	Label	case GRID_AD :	149:6:4146:4158	5245523	24	True				
ANR	5245726	Identifier	GRID_AD		5245523	0					
ANR	5245727	ExpressionStatement	"setPPstyle ( PP_GRID_NORMAL , 0 , DEFAULT )"	150:8:4168:4206	5245523	25	True				
ANR	5245728	CallExpression	"setPPstyle ( PP_GRID_NORMAL , 0 , DEFAULT )"		5245523	0					
ANR	5245729	Callee	setPPstyle		5245523	0					
ANR	5245730	Identifier	setPPstyle		5245523	0					
ANR	5245731	ArgumentList	PP_GRID_NORMAL		5245523	1					
ANR	5245732	Argument	PP_GRID_NORMAL		5245523	0					
ANR	5245733	Identifier	PP_GRID_NORMAL		5245523	0					
ANR	5245734	Argument	0		5245523	1					
ANR	5245735	PrimaryExpression	0		5245523	0					
ANR	5245736	Argument	DEFAULT		5245523	2					
ANR	5245737	Identifier	DEFAULT		5245523	0					
ANR	5245738	BreakStatement	break ;	151:2:4210:4215	5245523	26	True				
ANR	5245739	Label	case GENERIC_AD :	153:3:4221:4236	5245523	27	True				
ANR	5245740	Identifier	GENERIC_AD		5245523	0					
ANR	5245741	ExpressionStatement	"setPPstyle ( PP_GENERIC , 0 , DEFAULT )"	154:2:4240:4274	5245523	28	True				
ANR	5245742	CallExpression	"setPPstyle ( PP_GENERIC , 0 , DEFAULT )"		5245523	0					
ANR	5245743	Callee	setPPstyle		5245523	0					
ANR	5245744	Identifier	setPPstyle		5245523	0					
ANR	5245745	ArgumentList	PP_GENERIC		5245523	1					
ANR	5245746	Argument	PP_GENERIC		5245523	0					
ANR	5245747	Identifier	PP_GENERIC		5245523	0					
ANR	5245748	Argument	0		5245523	1					
ANR	5245749	PrimaryExpression	0		5245523	0					
ANR	5245750	Argument	DEFAULT		5245523	2					
ANR	5245751	Identifier	DEFAULT		5245523	0					
ANR	5245752	BreakStatement	break ;	155:2:4278:4283	5245523	29	True				
ANR	5245753	Label	case ANY_AD :	157:3:4289:4300	5245523	30	True				
ANR	5245754	Identifier	ANY_AD		5245523	0					
ANR	5245755	ExpressionStatement	"setPPstyle ( PP_ANY_NORMAL , 0 , DEFAULT )"	158:2:4304:4341	5245523	31	True				
ANR	5245756	CallExpression	"setPPstyle ( PP_ANY_NORMAL , 0 , DEFAULT )"		5245523	0					
ANR	5245757	Callee	setPPstyle		5245523	0					
ANR	5245758	Identifier	setPPstyle		5245523	0					
ANR	5245759	ArgumentList	PP_ANY_NORMAL		5245523	1					
ANR	5245760	Argument	PP_ANY_NORMAL		5245523	0					
ANR	5245761	Identifier	PP_ANY_NORMAL		5245523	0					
ANR	5245762	Argument	0		5245523	1					
ANR	5245763	PrimaryExpression	0		5245523	0					
ANR	5245764	Argument	DEFAULT		5245523	2					
ANR	5245765	Identifier	DEFAULT		5245523	0					
ANR	5245766	BreakStatement	break ;	159:2:4345:4350	5245523	32	True				
ANR	5245767	Label	default :	161:3:4356:4363	5245523	33	True				
ANR	5245768	Identifier	default		5245523	0					
ANR	5245769	ExpressionStatement	"setPPstyle ( PP_VERBOSE , 0 , DEFAULT )"	162:2:4367:4401	5245523	34	True				
ANR	5245770	CallExpression	"setPPstyle ( PP_VERBOSE , 0 , DEFAULT )"		5245523	0					
ANR	5245771	Callee	setPPstyle		5245523	0					
ANR	5245772	Identifier	setPPstyle		5245523	0					
ANR	5245773	ArgumentList	PP_VERBOSE		5245523	1					
ANR	5245774	Argument	PP_VERBOSE		5245523	0					
ANR	5245775	Identifier	PP_VERBOSE		5245523	0					
ANR	5245776	Argument	0		5245523	1					
ANR	5245777	PrimaryExpression	0		5245523	0					
ANR	5245778	Argument	DEFAULT		5245523	2					
ANR	5245779	Identifier	DEFAULT		5245523	0					
ANR	5245780	SwitchStatement	switch ( mode )		5245523	8					
ANR	5245781	Condition	mode	166:9:4460:4463	5245523	0	True				
ANR	5245782	Identifier	mode		5245523	0					
ANR	5245783	CompoundStatement		84:15:1875:1875	5245523	1					
ANR	5245784	Label	case MODE_QUILL_NORMAL :	168:3:4498:4520	5245523	0	True				
ANR	5245785	Identifier	MODE_QUILL_NORMAL		5245523	0					
ANR	5245786	Label	case MODE_STARTD_NORMAL :	171:3:4559:4582	5245523	1	True				
ANR	5245787	Identifier	MODE_STARTD_NORMAL		5245523	0					
ANR	5245788	Label	case MODE_MASTER_NORMAL :	172:3:4587:4610	5245523	2	True				
ANR	5245789	Identifier	MODE_MASTER_NORMAL		5245523	0					
ANR	5245790	Label	case MODE_CKPT_SRVR_NORMAL :	173:3:4615:4641	5245523	3	True				
ANR	5245791	Identifier	MODE_CKPT_SRVR_NORMAL		5245523	0					
ANR	5245792	Label	case MODE_SCHEDD_NORMAL :	174:3:4646:4669	5245523	4	True				
ANR	5245793	Identifier	MODE_SCHEDD_NORMAL		5245523	0					
ANR	5245794	Label	case MODE_SCHEDD_SUBMITTORS :	175:3:4674:4701	5245523	5	True				
ANR	5245795	Identifier	MODE_SCHEDD_SUBMITTORS		5245523	0					
ANR	5245796	Label	case MODE_COLLECTOR_NORMAL :	176:3:4706:4732	5245523	6	True				
ANR	5245797	Identifier	MODE_COLLECTOR_NORMAL		5245523	0					
ANR	5245798	Label	case MODE_NEGOTIATOR_NORMAL :	177:3:4737:4764	5245523	7	True				
ANR	5245799	Identifier	MODE_NEGOTIATOR_NORMAL		5245523	0					
ANR	5245800	Label	case MODE_STORAGE_NORMAL :	178:3:4769:4793	5245523	8	True				
ANR	5245801	Identifier	MODE_STORAGE_NORMAL		5245523	0					
ANR	5245802	Label	case MODE_GENERIC_NORMAL :	179:3:4798:4822	5245523	9	True				
ANR	5245803	Identifier	MODE_GENERIC_NORMAL		5245523	0					
ANR	5245804	Label	case MODE_ANY_NORMAL :	180:3:4827:4847	5245523	10	True				
ANR	5245805	Identifier	MODE_ANY_NORMAL		5245523	0					
ANR	5245806	Label	case MODE_GRID_NORMAL :	181:3:4852:4873	5245523	11	True				
ANR	5245807	Identifier	MODE_GRID_NORMAL		5245523	0					
ANR	5245808	Label	case MODE_HAD_NORMAL :	182:3:4878:4898	5245523	12	True				
ANR	5245809	Identifier	MODE_HAD_NORMAL		5245523	0					
ANR	5245810	BreakStatement	break ;	183:2:4902:4907	5245523	13	True				
ANR	5245811	Label	case MODE_OTHER :	185:3:4913:4928	5245523	14	True				
ANR	5245812	Identifier	MODE_OTHER		5245523	0					
ANR	5245813	ExpressionStatement	query -> setGenericQueryType ( genericType )	187:2:4992:5031	5245523	15	True				
ANR	5245814	CallExpression	query -> setGenericQueryType ( genericType )		5245523	0					
ANR	5245815	Callee	query -> setGenericQueryType		5245523	0					
ANR	5245816	PtrMemberAccess	query -> setGenericQueryType		5245523	0					
ANR	5245817	Identifier	query		5245523	0					
ANR	5245818	Identifier	setGenericQueryType		5245523	1					
ANR	5245819	ArgumentList	genericType		5245523	1					
ANR	5245820	Argument	genericType		5245523	0					
ANR	5245821	Identifier	genericType		5245523	0					
ANR	5245822	ExpressionStatement	free ( genericType )	188:2:5035:5052	5245523	16	True				
ANR	5245823	CallExpression	free ( genericType )		5245523	0					
ANR	5245824	Callee	free		5245523	0					
ANR	5245825	Identifier	free		5245523	0					
ANR	5245826	ArgumentList	genericType		5245523	1					
ANR	5245827	Argument	genericType		5245523	0					
ANR	5245828	Identifier	genericType		5245523	0					
ANR	5245829	ExpressionStatement	genericType = NULL	189:2:5056:5074	5245523	17	True				
ANR	5245830	AssignmentExpression	genericType = NULL		5245523	0		=			
ANR	5245831	Identifier	genericType		5245523	0					
ANR	5245832	Identifier	NULL		5245523	1					
ANR	5245833	BreakStatement	break ;	190:2:5078:5083	5245523	18	True				
ANR	5245834	Label	case MODE_STARTD_AVAIL :	192:3:5089:5111	5245523	19	True				
ANR	5245835	Identifier	MODE_STARTD_AVAIL		5245523	0					
ANR	5245836	ExpressionStatement	"sprintf ( buffer , ""%s == \\""%s\\"""" , ATTR_STATE , state_to_string ( unclaimed_state ) )"	194:2:5175:5258	5245523	20	True				
ANR	5245837	CallExpression	"sprintf ( buffer , ""%s == \\""%s\\"""" , ATTR_STATE , state_to_string ( unclaimed_state ) )"		5245523	0					
ANR	5245838	Callee	sprintf		5245523	0					
ANR	5245839	Identifier	sprintf		5245523	0					
ANR	5245840	ArgumentList	buffer		5245523	1					
ANR	5245841	Argument	buffer		5245523	0					
ANR	5245842	Identifier	buffer		5245523	0					
ANR	5245843	Argument	"""%s == \\""%s\\"""""		5245523	1					
ANR	5245844	PrimaryExpression	"""%s == \\""%s\\"""""		5245523	0					
ANR	5245845	Argument	ATTR_STATE		5245523	2					
ANR	5245846	Identifier	ATTR_STATE		5245523	0					
ANR	5245847	Argument	state_to_string ( unclaimed_state )		5245523	3					
ANR	5245848	CallExpression	state_to_string ( unclaimed_state )		5245523	0					
ANR	5245849	Callee	state_to_string		5245523	0					
ANR	5245850	Identifier	state_to_string		5245523	0					
ANR	5245851	ArgumentList	unclaimed_state		5245523	1					
ANR	5245852	Argument	unclaimed_state		5245523	0					
ANR	5245853	Identifier	unclaimed_state		5245523	0					
ANR	5245854	IfStatement	if ( diagnose )		5245523	21					
ANR	5245855	Condition	diagnose	196:6:5266:5273	5245523	0	True				
ANR	5245856	Identifier	diagnose		5245523	0					
ANR	5245857	CompoundStatement		114:16:2685:2685	5245523	1					
ANR	5245858	ExpressionStatement	"printf ( ""Adding constraint [%s]\\n"" , buffer )"	197:3:5281:5324	5245523	0	True				
ANR	5245859	CallExpression	"printf ( ""Adding constraint [%s]\\n"" , buffer )"		5245523	0					
ANR	5245860	Callee	printf		5245523	0					
ANR	5245861	Identifier	printf		5245523	0					
ANR	5245862	ArgumentList	"""Adding constraint [%s]\\n"""		5245523	1					
ANR	5245863	Argument	"""Adding constraint [%s]\\n"""		5245523	0					
ANR	5245864	PrimaryExpression	"""Adding constraint [%s]\\n"""		5245523	0					
ANR	5245865	Argument	buffer		5245523	1					
ANR	5245866	Identifier	buffer		5245523	0					
ANR	5245867	ExpressionStatement	query -> addORConstraint ( buffer )	199:2:5332:5363	5245523	22	True				
ANR	5245868	CallExpression	query -> addORConstraint ( buffer )		5245523	0					
ANR	5245869	Callee	query -> addORConstraint		5245523	0					
ANR	5245870	PtrMemberAccess	query -> addORConstraint		5245523	0					
ANR	5245871	Identifier	query		5245523	0					
ANR	5245872	Identifier	addORConstraint		5245523	1					
ANR	5245873	ArgumentList	buffer		5245523	1					
ANR	5245874	Argument	buffer		5245523	0					
ANR	5245875	Identifier	buffer		5245523	0					
ANR	5245876	BreakStatement	break ;	200:2:5367:5372	5245523	23	True				
ANR	5245877	Label	case MODE_STARTD_RUN :	203:3:5379:5399	5245523	24	True				
ANR	5245878	Identifier	MODE_STARTD_RUN		5245523	0					
ANR	5245879	ExpressionStatement	"sprintf ( buffer , ""%s == \\""%s\\"""" , ATTR_STATE , state_to_string ( claimed_state ) )"	204:2:5403:5484	5245523	25	True				
ANR	5245880	CallExpression	"sprintf ( buffer , ""%s == \\""%s\\"""" , ATTR_STATE , state_to_string ( claimed_state ) )"		5245523	0					
ANR	5245881	Callee	sprintf		5245523	0					
ANR	5245882	Identifier	sprintf		5245523	0					
ANR	5245883	ArgumentList	buffer		5245523	1					
ANR	5245884	Argument	buffer		5245523	0					
ANR	5245885	Identifier	buffer		5245523	0					
ANR	5245886	Argument	"""%s == \\""%s\\"""""		5245523	1					
ANR	5245887	PrimaryExpression	"""%s == \\""%s\\"""""		5245523	0					
ANR	5245888	Argument	ATTR_STATE		5245523	2					
ANR	5245889	Identifier	ATTR_STATE		5245523	0					
ANR	5245890	Argument	state_to_string ( claimed_state )		5245523	3					
ANR	5245891	CallExpression	state_to_string ( claimed_state )		5245523	0					
ANR	5245892	Callee	state_to_string		5245523	0					
ANR	5245893	Identifier	state_to_string		5245523	0					
ANR	5245894	ArgumentList	claimed_state		5245523	1					
ANR	5245895	Argument	claimed_state		5245523	0					
ANR	5245896	Identifier	claimed_state		5245523	0					
ANR	5245897	IfStatement	if ( diagnose )		5245523	26					
ANR	5245898	Condition	diagnose	206:6:5492:5499	5245523	0	True				
ANR	5245899	Identifier	diagnose		5245523	0					
ANR	5245900	CompoundStatement		124:16:2911:2911	5245523	1					
ANR	5245901	ExpressionStatement	"printf ( ""Adding constraint [%s]\\n"" , buffer )"	207:3:5507:5550	5245523	0	True				
ANR	5245902	CallExpression	"printf ( ""Adding constraint [%s]\\n"" , buffer )"		5245523	0					
ANR	5245903	Callee	printf		5245523	0					
ANR	5245904	Identifier	printf		5245523	0					
ANR	5245905	ArgumentList	"""Adding constraint [%s]\\n"""		5245523	1					
ANR	5245906	Argument	"""Adding constraint [%s]\\n"""		5245523	0					
ANR	5245907	PrimaryExpression	"""Adding constraint [%s]\\n"""		5245523	0					
ANR	5245908	Argument	buffer		5245523	1					
ANR	5245909	Identifier	buffer		5245523	0					
ANR	5245910	ExpressionStatement	query -> addORConstraint ( buffer )	209:2:5558:5589	5245523	27	True				
ANR	5245911	CallExpression	query -> addORConstraint ( buffer )		5245523	0					
ANR	5245912	Callee	query -> addORConstraint		5245523	0					
ANR	5245913	PtrMemberAccess	query -> addORConstraint		5245523	0					
ANR	5245914	Identifier	query		5245523	0					
ANR	5245915	Identifier	addORConstraint		5245523	1					
ANR	5245916	ArgumentList	buffer		5245523	1					
ANR	5245917	Argument	buffer		5245523	0					
ANR	5245918	Identifier	buffer		5245523	0					
ANR	5245919	BreakStatement	break ;	210:2:5593:5598	5245523	28	True				
ANR	5245920	Label	case MODE_STARTD_COD :	212:3:5604:5624	5245523	29	True				
ANR	5245921	Identifier	MODE_STARTD_COD		5245523	0					
ANR	5245922	ExpressionStatement	"sprintf ( buffer , ""%s > 0"" , ATTR_NUM_COD_CLAIMS )"	213:5:5631:5679	5245523	30	True				
ANR	5245923	CallExpression	"sprintf ( buffer , ""%s > 0"" , ATTR_NUM_COD_CLAIMS )"		5245523	0					
ANR	5245924	Callee	sprintf		5245523	0					
ANR	5245925	Identifier	sprintf		5245523	0					
ANR	5245926	ArgumentList	buffer		5245523	1					
ANR	5245927	Argument	buffer		5245523	0					
ANR	5245928	Identifier	buffer		5245523	0					
ANR	5245929	Argument	"""%s > 0"""		5245523	1					
ANR	5245930	PrimaryExpression	"""%s > 0"""		5245523	0					
ANR	5245931	Argument	ATTR_NUM_COD_CLAIMS		5245523	2					
ANR	5245932	Identifier	ATTR_NUM_COD_CLAIMS		5245523	0					
ANR	5245933	IfStatement	if ( diagnose )		5245523	31					
ANR	5245934	Condition	diagnose	214:6:5687:5694	5245523	0	True				
ANR	5245935	Identifier	diagnose		5245523	0					
ANR	5245936	CompoundStatement		132:16:3106:3106	5245523	1					
ANR	5245937	ExpressionStatement	"printf ( ""Adding constraint [%s]\\n"" , buffer )"	215:3:5702:5745	5245523	0	True				
ANR	5245938	CallExpression	"printf ( ""Adding constraint [%s]\\n"" , buffer )"		5245523	0					
ANR	5245939	Callee	printf		5245523	0					
ANR	5245940	Identifier	printf		5245523	0					
ANR	5245941	ArgumentList	"""Adding constraint [%s]\\n"""		5245523	1					
ANR	5245942	Argument	"""Adding constraint [%s]\\n"""		5245523	0					
ANR	5245943	PrimaryExpression	"""Adding constraint [%s]\\n"""		5245523	0					
ANR	5245944	Argument	buffer		5245523	1					
ANR	5245945	Identifier	buffer		5245523	0					
ANR	5245946	ExpressionStatement	query -> addORConstraint ( buffer )	217:2:5753:5784	5245523	32	True				
ANR	5245947	CallExpression	query -> addORConstraint ( buffer )		5245523	0					
ANR	5245948	Callee	query -> addORConstraint		5245523	0					
ANR	5245949	PtrMemberAccess	query -> addORConstraint		5245523	0					
ANR	5245950	Identifier	query		5245523	0					
ANR	5245951	Identifier	addORConstraint		5245523	1					
ANR	5245952	ArgumentList	buffer		5245523	1					
ANR	5245953	Argument	buffer		5245523	0					
ANR	5245954	Identifier	buffer		5245523	0					
ANR	5245955	BreakStatement	break ;	218:2:5788:5793	5245523	33	True				
ANR	5245956	Label	default :	220:3:5799:5806	5245523	34	True				
ANR	5245957	Identifier	default		5245523	0					
ANR	5245958	BreakStatement	break ;	221:2:5810:5815	5245523	35	True				
ANR	5245959	IfStatement	if ( javaMode )		5245523	9					
ANR	5245960	Condition	javaMode	224:4:5826:5833	5245523	0	True				
ANR	5245961	Identifier	javaMode		5245523	0					
ANR	5245962	CompoundStatement		142:14:3245:3245	5245523	1					
ANR	5245963	ExpressionStatement	"sprintf ( buffer , ""%s == TRUE"" , ATTR_HAS_JAVA )"	225:2:5840:5886	5245523	0	True				
ANR	5245964	CallExpression	"sprintf ( buffer , ""%s == TRUE"" , ATTR_HAS_JAVA )"		5245523	0					
ANR	5245965	Callee	sprintf		5245523	0					
ANR	5245966	Identifier	sprintf		5245523	0					
ANR	5245967	ArgumentList	buffer		5245523	1					
ANR	5245968	Argument	buffer		5245523	0					
ANR	5245969	Identifier	buffer		5245523	0					
ANR	5245970	Argument	"""%s == TRUE"""		5245523	1					
ANR	5245971	PrimaryExpression	"""%s == TRUE"""		5245523	0					
ANR	5245972	Argument	ATTR_HAS_JAVA		5245523	2					
ANR	5245973	Identifier	ATTR_HAS_JAVA		5245523	0					
ANR	5245974	IfStatement	if ( diagnose )		5245523	1					
ANR	5245975	Condition	diagnose	226:6:5894:5901	5245523	0	True				
ANR	5245976	Identifier	diagnose		5245523	0					
ANR	5245977	CompoundStatement		144:16:3313:3313	5245523	1					
ANR	5245978	ExpressionStatement	"printf ( ""Adding constraint [%s]\\n"" , buffer )"	227:3:5909:5952	5245523	0	True				
ANR	5245979	CallExpression	"printf ( ""Adding constraint [%s]\\n"" , buffer )"		5245523	0					
ANR	5245980	Callee	printf		5245523	0					
ANR	5245981	Identifier	printf		5245523	0					
ANR	5245982	ArgumentList	"""Adding constraint [%s]\\n"""		5245523	1					
ANR	5245983	Argument	"""Adding constraint [%s]\\n"""		5245523	0					
ANR	5245984	PrimaryExpression	"""Adding constraint [%s]\\n"""		5245523	0					
ANR	5245985	Argument	buffer		5245523	1					
ANR	5245986	Identifier	buffer		5245523	0					
ANR	5245987	ExpressionStatement	query -> addANDConstraint ( buffer )	229:2:5960:5992	5245523	2	True				
ANR	5245988	CallExpression	query -> addANDConstraint ( buffer )		5245523	0					
ANR	5245989	Callee	query -> addANDConstraint		5245523	0					
ANR	5245990	PtrMemberAccess	query -> addANDConstraint		5245523	0					
ANR	5245991	Identifier	query		5245523	0					
ANR	5245992	Identifier	addANDConstraint		5245523	1					
ANR	5245993	ArgumentList	buffer		5245523	1					
ANR	5245994	Argument	buffer		5245523	0					
ANR	5245995	Identifier	buffer		5245523	0					
ANR	5245996	ExpressionStatement	projList . AppendArg ( ATTR_HAS_JAVA )	231:2:5999:6032	5245523	3	True				
ANR	5245997	CallExpression	projList . AppendArg ( ATTR_HAS_JAVA )		5245523	0					
ANR	5245998	Callee	projList . AppendArg		5245523	0					
ANR	5245999	MemberAccess	projList . AppendArg		5245523	0					
ANR	5246000	Identifier	projList		5245523	0					
ANR	5246001	Identifier	AppendArg		5245523	1					
ANR	5246002	ArgumentList	ATTR_HAS_JAVA		5245523	1					
ANR	5246003	Argument	ATTR_HAS_JAVA		5245523	0					
ANR	5246004	Identifier	ATTR_HAS_JAVA		5245523	0					
ANR	5246005	ExpressionStatement	projList . AppendArg ( ATTR_JAVA_MFLOPS )	232:2:6036:6072	5245523	4	True				
ANR	5246006	CallExpression	projList . AppendArg ( ATTR_JAVA_MFLOPS )		5245523	0					
ANR	5246007	Callee	projList . AppendArg		5245523	0					
ANR	5246008	MemberAccess	projList . AppendArg		5245523	0					
ANR	5246009	Identifier	projList		5245523	0					
ANR	5246010	Identifier	AppendArg		5245523	1					
ANR	5246011	ArgumentList	ATTR_JAVA_MFLOPS		5245523	1					
ANR	5246012	Argument	ATTR_JAVA_MFLOPS		5245523	0					
ANR	5246013	Identifier	ATTR_JAVA_MFLOPS		5245523	0					
ANR	5246014	ExpressionStatement	projList . AppendArg ( ATTR_JAVA_VENDOR )	233:2:6076:6112	5245523	5	True				
ANR	5246015	CallExpression	projList . AppendArg ( ATTR_JAVA_VENDOR )		5245523	0					
ANR	5246016	Callee	projList . AppendArg		5245523	0					
ANR	5246017	MemberAccess	projList . AppendArg		5245523	0					
ANR	5246018	Identifier	projList		5245523	0					
ANR	5246019	Identifier	AppendArg		5245523	1					
ANR	5246020	ArgumentList	ATTR_JAVA_VENDOR		5245523	1					
ANR	5246021	Argument	ATTR_JAVA_VENDOR		5245523	0					
ANR	5246022	Identifier	ATTR_JAVA_VENDOR		5245523	0					
ANR	5246023	ExpressionStatement	projList . AppendArg ( ATTR_JAVA_VERSION )	234:2:6116:6153	5245523	6	True				
ANR	5246024	CallExpression	projList . AppendArg ( ATTR_JAVA_VERSION )		5245523	0					
ANR	5246025	Callee	projList . AppendArg		5245523	0					
ANR	5246026	MemberAccess	projList . AppendArg		5245523	0					
ANR	5246027	Identifier	projList		5245523	0					
ANR	5246028	Identifier	AppendArg		5245523	1					
ANR	5246029	ArgumentList	ATTR_JAVA_VERSION		5245523	1					
ANR	5246030	Argument	ATTR_JAVA_VERSION		5245523	0					
ANR	5246031	Identifier	ATTR_JAVA_VERSION		5245523	0					
ANR	5246032	IfStatement	if ( vmMode )		5245523	10					
ANR	5246033	Condition	vmMode	238:4:6164:6169	5245523	0	True				
ANR	5246034	Identifier	vmMode		5245523	0					
ANR	5246035	CompoundStatement		156:12:3581:3581	5245523	1					
ANR	5246036	ExpressionStatement	"sprintf ( buffer , ""%s == TRUE"" , ATTR_HAS_VM )"	239:2:6176:6219	5245523	0	True				
ANR	5246037	CallExpression	"sprintf ( buffer , ""%s == TRUE"" , ATTR_HAS_VM )"		5245523	0					
ANR	5246038	Callee	sprintf		5245523	0					
ANR	5246039	Identifier	sprintf		5245523	0					
ANR	5246040	ArgumentList	buffer		5245523	1					
ANR	5246041	Argument	buffer		5245523	0					
ANR	5246042	Identifier	buffer		5245523	0					
ANR	5246043	Argument	"""%s == TRUE"""		5245523	1					
ANR	5246044	PrimaryExpression	"""%s == TRUE"""		5245523	0					
ANR	5246045	Argument	ATTR_HAS_VM		5245523	2					
ANR	5246046	Identifier	ATTR_HAS_VM		5245523	0					
ANR	5246047	IfStatement	if ( diagnose )		5245523	1					
ANR	5246048	Condition	diagnose	240:6:6227:6234	5245523	0	True				
ANR	5246049	Identifier	diagnose		5245523	0					
ANR	5246050	CompoundStatement		158:16:3646:3646	5245523	1					
ANR	5246051	ExpressionStatement	"printf ( ""Adding constraint [%s]\\n"" , buffer )"	241:3:6242:6285	5245523	0	True				
ANR	5246052	CallExpression	"printf ( ""Adding constraint [%s]\\n"" , buffer )"		5245523	0					
ANR	5246053	Callee	printf		5245523	0					
ANR	5246054	Identifier	printf		5245523	0					
ANR	5246055	ArgumentList	"""Adding constraint [%s]\\n"""		5245523	1					
ANR	5246056	Argument	"""Adding constraint [%s]\\n"""		5245523	0					
ANR	5246057	PrimaryExpression	"""Adding constraint [%s]\\n"""		5245523	0					
ANR	5246058	Argument	buffer		5245523	1					
ANR	5246059	Identifier	buffer		5245523	0					
ANR	5246060	ExpressionStatement	query -> addANDConstraint ( buffer )	243:2:6293:6325	5245523	2	True				
ANR	5246061	CallExpression	query -> addANDConstraint ( buffer )		5245523	0					
ANR	5246062	Callee	query -> addANDConstraint		5245523	0					
ANR	5246063	PtrMemberAccess	query -> addANDConstraint		5245523	0					
ANR	5246064	Identifier	query		5245523	0					
ANR	5246065	Identifier	addANDConstraint		5245523	1					
ANR	5246066	ArgumentList	buffer		5245523	1					
ANR	5246067	Argument	buffer		5245523	0					
ANR	5246068	Identifier	buffer		5245523	0					
ANR	5246069	ExpressionStatement	projList . AppendArg ( ATTR_VM_TYPE )	245:2:6330:6362	5245523	3	True				
ANR	5246070	CallExpression	projList . AppendArg ( ATTR_VM_TYPE )		5245523	0					
ANR	5246071	Callee	projList . AppendArg		5245523	0					
ANR	5246072	MemberAccess	projList . AppendArg		5245523	0					
ANR	5246073	Identifier	projList		5245523	0					
ANR	5246074	Identifier	AppendArg		5245523	1					
ANR	5246075	ArgumentList	ATTR_VM_TYPE		5245523	1					
ANR	5246076	Argument	ATTR_VM_TYPE		5245523	0					
ANR	5246077	Identifier	ATTR_VM_TYPE		5245523	0					
ANR	5246078	ExpressionStatement	projList . AppendArg ( ATTR_VM_MEMORY )	246:2:6366:6400	5245523	4	True				
ANR	5246079	CallExpression	projList . AppendArg ( ATTR_VM_MEMORY )		5245523	0					
ANR	5246080	Callee	projList . AppendArg		5245523	0					
ANR	5246081	MemberAccess	projList . AppendArg		5245523	0					
ANR	5246082	Identifier	projList		5245523	0					
ANR	5246083	Identifier	AppendArg		5245523	1					
ANR	5246084	ArgumentList	ATTR_VM_MEMORY		5245523	1					
ANR	5246085	Argument	ATTR_VM_MEMORY		5245523	0					
ANR	5246086	Identifier	ATTR_VM_MEMORY		5245523	0					
ANR	5246087	ExpressionStatement	projList . AppendArg ( ATTR_VM_NETWORKING )	247:2:6404:6442	5245523	5	True				
ANR	5246088	CallExpression	projList . AppendArg ( ATTR_VM_NETWORKING )		5245523	0					
ANR	5246089	Callee	projList . AppendArg		5245523	0					
ANR	5246090	MemberAccess	projList . AppendArg		5245523	0					
ANR	5246091	Identifier	projList		5245523	0					
ANR	5246092	Identifier	AppendArg		5245523	1					
ANR	5246093	ArgumentList	ATTR_VM_NETWORKING		5245523	1					
ANR	5246094	Argument	ATTR_VM_NETWORKING		5245523	0					
ANR	5246095	Identifier	ATTR_VM_NETWORKING		5245523	0					
ANR	5246096	ExpressionStatement	projList . AppendArg ( ATTR_VM_NETWORKING_TYPES )	248:2:6446:6490	5245523	6	True				
ANR	5246097	CallExpression	projList . AppendArg ( ATTR_VM_NETWORKING_TYPES )		5245523	0					
ANR	5246098	Callee	projList . AppendArg		5245523	0					
ANR	5246099	MemberAccess	projList . AppendArg		5245523	0					
ANR	5246100	Identifier	projList		5245523	0					
ANR	5246101	Identifier	AppendArg		5245523	1					
ANR	5246102	ArgumentList	ATTR_VM_NETWORKING_TYPES		5245523	1					
ANR	5246103	Argument	ATTR_VM_NETWORKING_TYPES		5245523	0					
ANR	5246104	Identifier	ATTR_VM_NETWORKING_TYPES		5245523	0					
ANR	5246105	ExpressionStatement	projList . AppendArg ( ATTR_VM_HARDWARE_VT )	249:2:6494:6533	5245523	7	True				
ANR	5246106	CallExpression	projList . AppendArg ( ATTR_VM_HARDWARE_VT )		5245523	0					
ANR	5246107	Callee	projList . AppendArg		5245523	0					
ANR	5246108	MemberAccess	projList . AppendArg		5245523	0					
ANR	5246109	Identifier	projList		5245523	0					
ANR	5246110	Identifier	AppendArg		5245523	1					
ANR	5246111	ArgumentList	ATTR_VM_HARDWARE_VT		5245523	1					
ANR	5246112	Argument	ATTR_VM_HARDWARE_VT		5245523	0					
ANR	5246113	Identifier	ATTR_VM_HARDWARE_VT		5245523	0					
ANR	5246114	ExpressionStatement	projList . AppendArg ( ATTR_VM_AVAIL_NUM )	250:2:6537:6574	5245523	8	True				
ANR	5246115	CallExpression	projList . AppendArg ( ATTR_VM_AVAIL_NUM )		5245523	0					
ANR	5246116	Callee	projList . AppendArg		5245523	0					
ANR	5246117	MemberAccess	projList . AppendArg		5245523	0					
ANR	5246118	Identifier	projList		5245523	0					
ANR	5246119	Identifier	AppendArg		5245523	1					
ANR	5246120	ArgumentList	ATTR_VM_AVAIL_NUM		5245523	1					
ANR	5246121	Argument	ATTR_VM_AVAIL_NUM		5245523	0					
ANR	5246122	Identifier	ATTR_VM_AVAIL_NUM		5245523	0					
ANR	5246123	ExpressionStatement	projList . AppendArg ( ATTR_VM_ALL_GUEST_MACS )	251:2:6578:6620	5245523	9	True				
ANR	5246124	CallExpression	projList . AppendArg ( ATTR_VM_ALL_GUEST_MACS )		5245523	0					
ANR	5246125	Callee	projList . AppendArg		5245523	0					
ANR	5246126	MemberAccess	projList . AppendArg		5245523	0					
ANR	5246127	Identifier	projList		5245523	0					
ANR	5246128	Identifier	AppendArg		5245523	1					
ANR	5246129	ArgumentList	ATTR_VM_ALL_GUEST_MACS		5245523	1					
ANR	5246130	Argument	ATTR_VM_ALL_GUEST_MACS		5245523	0					
ANR	5246131	Identifier	ATTR_VM_ALL_GUEST_MACS		5245523	0					
ANR	5246132	ExpressionStatement	projList . AppendArg ( ATTR_VM_ALL_GUEST_IPS )	252:2:6624:6665	5245523	10	True				
ANR	5246133	CallExpression	projList . AppendArg ( ATTR_VM_ALL_GUEST_IPS )		5245523	0					
ANR	5246134	Callee	projList . AppendArg		5245523	0					
ANR	5246135	MemberAccess	projList . AppendArg		5245523	0					
ANR	5246136	Identifier	projList		5245523	0					
ANR	5246137	Identifier	AppendArg		5245523	1					
ANR	5246138	ArgumentList	ATTR_VM_ALL_GUEST_IPS		5245523	1					
ANR	5246139	Argument	ATTR_VM_ALL_GUEST_IPS		5245523	0					
ANR	5246140	Identifier	ATTR_VM_ALL_GUEST_IPS		5245523	0					
ANR	5246141	ExpressionStatement	projList . AppendArg ( ATTR_VM_GUEST_MAC )	253:2:6669:6706	5245523	11	True				
ANR	5246142	CallExpression	projList . AppendArg ( ATTR_VM_GUEST_MAC )		5245523	0					
ANR	5246143	Callee	projList . AppendArg		5245523	0					
ANR	5246144	MemberAccess	projList . AppendArg		5245523	0					
ANR	5246145	Identifier	projList		5245523	0					
ANR	5246146	Identifier	AppendArg		5245523	1					
ANR	5246147	ArgumentList	ATTR_VM_GUEST_MAC		5245523	1					
ANR	5246148	Argument	ATTR_VM_GUEST_MAC		5245523	0					
ANR	5246149	Identifier	ATTR_VM_GUEST_MAC		5245523	0					
ANR	5246150	ExpressionStatement	projList . AppendArg ( ATTR_VM_GUEST_IP )	254:2:6710:6746	5245523	12	True				
ANR	5246151	CallExpression	projList . AppendArg ( ATTR_VM_GUEST_IP )		5245523	0					
ANR	5246152	Callee	projList . AppendArg		5245523	0					
ANR	5246153	MemberAccess	projList . AppendArg		5245523	0					
ANR	5246154	Identifier	projList		5245523	0					
ANR	5246155	Identifier	AppendArg		5245523	1					
ANR	5246156	ArgumentList	ATTR_VM_GUEST_IP		5245523	1					
ANR	5246157	Argument	ATTR_VM_GUEST_IP		5245523	0					
ANR	5246158	Identifier	ATTR_VM_GUEST_IP		5245523	0					
ANR	5246159	IfStatement	if ( diagnose )		5245523	11					
ANR	5246160	Condition	diagnose	259:5:6815:6822	5245523	0	True				
ANR	5246161	Identifier	diagnose		5245523	0					
ANR	5246162	CompoundStatement		177:15:4234:4234	5245523	1					
ANR	5246163	ExpressionStatement	"printf ( ""----------\\n"" )"	260:2:6829:6852	5245523	0	True				
ANR	5246164	CallExpression	"printf ( ""----------\\n"" )"		5245523	0					
ANR	5246165	Callee	printf		5245523	0					
ANR	5246166	Identifier	printf		5245523	0					
ANR	5246167	ArgumentList	"""----------\\n"""		5245523	1					
ANR	5246168	Argument	"""----------\\n"""		5245523	0					
ANR	5246169	PrimaryExpression	"""----------\\n"""		5245523	0					
ANR	5246170	ExpressionStatement	"secondPass ( argc , argv )"	263:1:6859:6882	5245523	12	True				
ANR	5246171	CallExpression	"secondPass ( argc , argv )"		5245523	0					
ANR	5246172	Callee	secondPass		5245523	0					
ANR	5246173	Identifier	secondPass		5245523	0					
ANR	5246174	ArgumentList	argc		5245523	1					
ANR	5246175	Argument	argc		5245523	0					
ANR	5246176	Identifier	argc		5245523	0					
ANR	5246177	Argument	argv		5245523	1					
ANR	5246178	Identifier	argv		5245523	0					
ANR	5246179	IdentifierDeclStatement	TrackTotals totals ( ppStyle ) ;	266:1:6919:6946	5245523	13	True				
ANR	5246180	IdentifierDecl	totals ( ppStyle )		5245523	0					
ANR	5246181	IdentifierDeclType	TrackTotals		5245523	0					
ANR	5246182	Identifier	totals		5245523	1					
ANR	5246183	Identifier	ppStyle		5245523	2					
ANR	5246184	IdentifierDeclStatement	QueryResult q ;	269:1:6970:6983	5245523	14	True				
ANR	5246185	IdentifierDecl	q		5245523	0					
ANR	5246186	IdentifierDeclType	QueryResult		5245523	0					
ANR	5246187	Identifier	q		5245523	1					
ANR	5246188	IfStatement	if ( ( mode == MODE_STARTD_NORMAL ) && ( ppStyle == PP_STARTD_NORMAL ) )		5245523	15					
ANR	5246189	Condition	( mode == MODE_STARTD_NORMAL ) && ( ppStyle == PP_STARTD_NORMAL )	271:5:6991:7051	5245523	0	True				
ANR	5246190	AndExpression	( mode == MODE_STARTD_NORMAL ) && ( ppStyle == PP_STARTD_NORMAL )		5245523	0		&&			
ANR	5246191	EqualityExpression	mode == MODE_STARTD_NORMAL		5245523	0		==			
ANR	5246192	Identifier	mode		5245523	0					
ANR	5246193	Identifier	MODE_STARTD_NORMAL		5245523	1					
ANR	5246194	EqualityExpression	ppStyle == PP_STARTD_NORMAL		5245523	1		==			
ANR	5246195	Identifier	ppStyle		5245523	0					
ANR	5246196	Identifier	PP_STARTD_NORMAL		5245523	1					
ANR	5246197	CompoundStatement		189:68:4463:4463	5245523	1					
ANR	5246198	ExpressionStatement	"projList . AppendArg ( ""Name"" )"	272:2:7058:7084	5245523	0	True				
ANR	5246199	CallExpression	"projList . AppendArg ( ""Name"" )"		5245523	0					
ANR	5246200	Callee	projList . AppendArg		5245523	0					
ANR	5246201	MemberAccess	projList . AppendArg		5245523	0					
ANR	5246202	Identifier	projList		5245523	0					
ANR	5246203	Identifier	AppendArg		5245523	1					
ANR	5246204	ArgumentList	"""Name"""		5245523	1					
ANR	5246205	Argument	"""Name"""		5245523	0					
ANR	5246206	PrimaryExpression	"""Name"""		5245523	0					
ANR	5246207	ExpressionStatement	"projList . AppendArg ( ""Machine"" )"	273:2:7088:7117	5245523	1	True				
ANR	5246208	CallExpression	"projList . AppendArg ( ""Machine"" )"		5245523	0					
ANR	5246209	Callee	projList . AppendArg		5245523	0					
ANR	5246210	MemberAccess	projList . AppendArg		5245523	0					
ANR	5246211	Identifier	projList		5245523	0					
ANR	5246212	Identifier	AppendArg		5245523	1					
ANR	5246213	ArgumentList	"""Machine"""		5245523	1					
ANR	5246214	Argument	"""Machine"""		5245523	0					
ANR	5246215	PrimaryExpression	"""Machine"""		5245523	0					
ANR	5246216	ExpressionStatement	"projList . AppendArg ( ""Opsys"" )"	274:2:7121:7148	5245523	2	True				
ANR	5246217	CallExpression	"projList . AppendArg ( ""Opsys"" )"		5245523	0					
ANR	5246218	Callee	projList . AppendArg		5245523	0					
ANR	5246219	MemberAccess	projList . AppendArg		5245523	0					
ANR	5246220	Identifier	projList		5245523	0					
ANR	5246221	Identifier	AppendArg		5245523	1					
ANR	5246222	ArgumentList	"""Opsys"""		5245523	1					
ANR	5246223	Argument	"""Opsys"""		5245523	0					
ANR	5246224	PrimaryExpression	"""Opsys"""		5245523	0					
ANR	5246225	ExpressionStatement	"projList . AppendArg ( ""Arch"" )"	275:2:7152:7178	5245523	3	True				
ANR	5246226	CallExpression	"projList . AppendArg ( ""Arch"" )"		5245523	0					
ANR	5246227	Callee	projList . AppendArg		5245523	0					
ANR	5246228	MemberAccess	projList . AppendArg		5245523	0					
ANR	5246229	Identifier	projList		5245523	0					
ANR	5246230	Identifier	AppendArg		5245523	1					
ANR	5246231	ArgumentList	"""Arch"""		5245523	1					
ANR	5246232	Argument	"""Arch"""		5245523	0					
ANR	5246233	PrimaryExpression	"""Arch"""		5245523	0					
ANR	5246234	ExpressionStatement	"projList . AppendArg ( ""State"" )"	276:2:7182:7209	5245523	4	True				
ANR	5246235	CallExpression	"projList . AppendArg ( ""State"" )"		5245523	0					
ANR	5246236	Callee	projList . AppendArg		5245523	0					
ANR	5246237	MemberAccess	projList . AppendArg		5245523	0					
ANR	5246238	Identifier	projList		5245523	0					
ANR	5246239	Identifier	AppendArg		5245523	1					
ANR	5246240	ArgumentList	"""State"""		5245523	1					
ANR	5246241	Argument	"""State"""		5245523	0					
ANR	5246242	PrimaryExpression	"""State"""		5245523	0					
ANR	5246243	ExpressionStatement	"projList . AppendArg ( ""Activity"" )"	277:2:7213:7243	5245523	5	True				
ANR	5246244	CallExpression	"projList . AppendArg ( ""Activity"" )"		5245523	0					
ANR	5246245	Callee	projList . AppendArg		5245523	0					
ANR	5246246	MemberAccess	projList . AppendArg		5245523	0					
ANR	5246247	Identifier	projList		5245523	0					
ANR	5246248	Identifier	AppendArg		5245523	1					
ANR	5246249	ArgumentList	"""Activity"""		5245523	1					
ANR	5246250	Argument	"""Activity"""		5245523	0					
ANR	5246251	PrimaryExpression	"""Activity"""		5245523	0					
ANR	5246252	ExpressionStatement	"projList . AppendArg ( ""LoadAvg"" )"	278:2:7247:7276	5245523	6	True				
ANR	5246253	CallExpression	"projList . AppendArg ( ""LoadAvg"" )"		5245523	0					
ANR	5246254	Callee	projList . AppendArg		5245523	0					
ANR	5246255	MemberAccess	projList . AppendArg		5245523	0					
ANR	5246256	Identifier	projList		5245523	0					
ANR	5246257	Identifier	AppendArg		5245523	1					
ANR	5246258	ArgumentList	"""LoadAvg"""		5245523	1					
ANR	5246259	Argument	"""LoadAvg"""		5245523	0					
ANR	5246260	PrimaryExpression	"""LoadAvg"""		5245523	0					
ANR	5246261	ExpressionStatement	"projList . AppendArg ( ""Memory"" )"	279:2:7280:7308	5245523	7	True				
ANR	5246262	CallExpression	"projList . AppendArg ( ""Memory"" )"		5245523	0					
ANR	5246263	Callee	projList . AppendArg		5245523	0					
ANR	5246264	MemberAccess	projList . AppendArg		5245523	0					
ANR	5246265	Identifier	projList		5245523	0					
ANR	5246266	Identifier	AppendArg		5245523	1					
ANR	5246267	ArgumentList	"""Memory"""		5245523	1					
ANR	5246268	Argument	"""Memory"""		5245523	0					
ANR	5246269	PrimaryExpression	"""Memory"""		5245523	0					
ANR	5246270	ExpressionStatement	"projList . AppendArg ( ""ActvtyTime"" )"	280:2:7312:7344	5245523	8	True				
ANR	5246271	CallExpression	"projList . AppendArg ( ""ActvtyTime"" )"		5245523	0					
ANR	5246272	Callee	projList . AppendArg		5245523	0					
ANR	5246273	MemberAccess	projList . AppendArg		5245523	0					
ANR	5246274	Identifier	projList		5245523	0					
ANR	5246275	Identifier	AppendArg		5245523	1					
ANR	5246276	ArgumentList	"""ActvtyTime"""		5245523	1					
ANR	5246277	Argument	"""ActvtyTime"""		5245523	0					
ANR	5246278	PrimaryExpression	"""ActvtyTime"""		5245523	0					
ANR	5246279	ExpressionStatement	"projList . AppendArg ( ""MyCurrentTime"" )"	281:2:7348:7383	5245523	9	True				
ANR	5246280	CallExpression	"projList . AppendArg ( ""MyCurrentTime"" )"		5245523	0					
ANR	5246281	Callee	projList . AppendArg		5245523	0					
ANR	5246282	MemberAccess	projList . AppendArg		5245523	0					
ANR	5246283	Identifier	projList		5245523	0					
ANR	5246284	Identifier	AppendArg		5245523	1					
ANR	5246285	ArgumentList	"""MyCurrentTime"""		5245523	1					
ANR	5246286	Argument	"""MyCurrentTime"""		5245523	0					
ANR	5246287	PrimaryExpression	"""MyCurrentTime"""		5245523	0					
ANR	5246288	ExpressionStatement	"projList . AppendArg ( ""EnteredCurrentActivity"" )"	282:2:7387:7431	5245523	10	True				
ANR	5246289	CallExpression	"projList . AppendArg ( ""EnteredCurrentActivity"" )"		5245523	0					
ANR	5246290	Callee	projList . AppendArg		5245523	0					
ANR	5246291	MemberAccess	projList . AppendArg		5245523	0					
ANR	5246292	Identifier	projList		5245523	0					
ANR	5246293	Identifier	AppendArg		5245523	1					
ANR	5246294	ArgumentList	"""EnteredCurrentActivity"""		5245523	1					
ANR	5246295	Argument	"""EnteredCurrentActivity"""		5245523	0					
ANR	5246296	PrimaryExpression	"""EnteredCurrentActivity"""		5245523	0					
ANR	5246297	IfStatement	if ( projList . Count ( ) > 0 )		5245523	16					
ANR	5246298	Condition	projList . Count ( ) > 0	285:5:7442:7461	5245523	0	True				
ANR	5246299	RelationalExpression	projList . Count ( ) > 0		5245523	0		>			
ANR	5246300	CallExpression	projList . Count ( )		5245523	0					
ANR	5246301	Callee	projList . Count		5245523	0					
ANR	5246302	MemberAccess	projList . Count		5245523	0					
ANR	5246303	Identifier	projList		5245523	0					
ANR	5246304	Identifier	Count		5245523	1					
ANR	5246305	ArgumentList			5245523	1					
ANR	5246306	PrimaryExpression	0		5245523	1					
ANR	5246307	CompoundStatement		204:2:4878:4922	5245523	1					
ANR	5246308	IdentifierDeclStatement	char * * attr_list = projList . GetStringArray ( ) ;	286:2:7469:7513	5245523	0	True				
ANR	5246309	IdentifierDecl	* * attr_list = projList . GetStringArray ( )		5245523	0					
ANR	5246310	IdentifierDeclType	char * *		5245523	0					
ANR	5246311	Identifier	attr_list		5245523	1					
ANR	5246312	AssignmentExpression	* * attr_list = projList . GetStringArray ( )		5245523	2		=			
ANR	5246313	Identifier	attr_list		5245523	0					
ANR	5246314	CallExpression	projList . GetStringArray ( )		5245523	1					
ANR	5246315	Callee	projList . GetStringArray		5245523	0					
ANR	5246316	MemberAccess	projList . GetStringArray		5245523	0					
ANR	5246317	Identifier	projList		5245523	0					
ANR	5246318	Identifier	GetStringArray		5245523	1					
ANR	5246319	ArgumentList			5245523	1					
ANR	5246320	ExpressionStatement	query -> setDesiredAttrs ( attr_list )	287:2:7517:7550	5245523	1	True				
ANR	5246321	CallExpression	query -> setDesiredAttrs ( attr_list )		5245523	0					
ANR	5246322	Callee	query -> setDesiredAttrs		5245523	0					
ANR	5246323	PtrMemberAccess	query -> setDesiredAttrs		5245523	0					
ANR	5246324	Identifier	query		5245523	0					
ANR	5246325	Identifier	setDesiredAttrs		5245523	1					
ANR	5246326	ArgumentList	attr_list		5245523	1					
ANR	5246327	Argument	attr_list		5245523	0					
ANR	5246328	Identifier	attr_list		5245523	0					
ANR	5246329	ExpressionStatement	deleteStringArray ( attr_list )	288:2:7554:7582	5245523	2	True				
ANR	5246330	CallExpression	deleteStringArray ( attr_list )		5245523	0					
ANR	5246331	Callee	deleteStringArray		5245523	0					
ANR	5246332	Identifier	deleteStringArray		5245523	0					
ANR	5246333	ArgumentList	attr_list		5245523	1					
ANR	5246334	Argument	attr_list		5245523	0					
ANR	5246335	Identifier	attr_list		5245523	0					
ANR	5246336	IfStatement	if ( diagnose )		5245523	17					
ANR	5246337	Condition	diagnose	292:5:7648:7655	5245523	0	True				
ANR	5246338	Identifier	diagnose		5245523	0					
ANR	5246339	CompoundStatement		211:2:5071:5087	5245523	1					
ANR	5246340	IdentifierDeclStatement	ClassAd queryAd ;	293:2:7662:7678	5245523	0	True				
ANR	5246341	IdentifierDecl	queryAd		5245523	0					
ANR	5246342	IdentifierDeclType	ClassAd		5245523	0					
ANR	5246343	Identifier	queryAd		5245523	1					
ANR	5246344	ExpressionStatement	"setMode ( ( Mode ) 0 , 0 , NULL )"	296:2:7747:7774	5245523	1	True				
ANR	5246345	CallExpression	"setMode ( ( Mode ) 0 , 0 , NULL )"		5245523	0					
ANR	5246346	Callee	setMode		5245523	0					
ANR	5246347	Identifier	setMode		5245523	0					
ANR	5246348	ArgumentList	( Mode ) 0		5245523	1					
ANR	5246349	Argument	( Mode ) 0		5245523	0					
ANR	5246350	CastExpression	( Mode ) 0		5245523	0					
ANR	5246351	CastTarget	Mode		5245523	0					
ANR	5246352	PrimaryExpression	0		5245523	1					
ANR	5246353	Argument	0		5245523	1					
ANR	5246354	PrimaryExpression	0		5245523	0					
ANR	5246355	Argument	NULL		5245523	2					
ANR	5246356	Identifier	NULL		5245523	0					
ANR	5246357	ExpressionStatement	"setType ( NULL , 0 , NULL )"	297:2:7778:7801	5245523	2	True				
ANR	5246358	CallExpression	"setType ( NULL , 0 , NULL )"		5245523	0					
ANR	5246359	Callee	setType		5245523	0					
ANR	5246360	Identifier	setType		5245523	0					
ANR	5246361	ArgumentList	NULL		5245523	1					
ANR	5246362	Argument	NULL		5245523	0					
ANR	5246363	Identifier	NULL		5245523	0					
ANR	5246364	Argument	0		5245523	1					
ANR	5246365	PrimaryExpression	0		5245523	0					
ANR	5246366	Argument	NULL		5245523	2					
ANR	5246367	Identifier	NULL		5245523	0					
ANR	5246368	ExpressionStatement	"setPPstyle ( ( ppOption ) 0 , 0 , DEFAULT )"	298:2:7805:7842	5245523	3	True				
ANR	5246369	CallExpression	"setPPstyle ( ( ppOption ) 0 , 0 , DEFAULT )"		5245523	0					
ANR	5246370	Callee	setPPstyle		5245523	0					
ANR	5246371	Identifier	setPPstyle		5245523	0					
ANR	5246372	ArgumentList	( ppOption ) 0		5245523	1					
ANR	5246373	Argument	( ppOption ) 0		5245523	0					
ANR	5246374	CastExpression	( ppOption ) 0		5245523	0					
ANR	5246375	CastTarget	ppOption		5245523	0					
ANR	5246376	PrimaryExpression	0		5245523	1					
ANR	5246377	Argument	0		5245523	1					
ANR	5246378	PrimaryExpression	0		5245523	0					
ANR	5246379	Argument	DEFAULT		5245523	2					
ANR	5246380	Identifier	DEFAULT		5245523	0					
ANR	5246381	ExpressionStatement	"printf ( ""----------\\n"" )"	299:2:7846:7869	5245523	4	True				
ANR	5246382	CallExpression	"printf ( ""----------\\n"" )"		5245523	0					
ANR	5246383	Callee	printf		5245523	0					
ANR	5246384	Identifier	printf		5245523	0					
ANR	5246385	ArgumentList	"""----------\\n"""		5245523	1					
ANR	5246386	Argument	"""----------\\n"""		5245523	0					
ANR	5246387	PrimaryExpression	"""----------\\n"""		5245523	0					
ANR	5246388	ExpressionStatement	q = query -> getQueryAd ( queryAd )	301:2:7874:7905	5245523	5	True				
ANR	5246389	AssignmentExpression	q = query -> getQueryAd ( queryAd )		5245523	0		=			
ANR	5246390	Identifier	q		5245523	0					
ANR	5246391	CallExpression	query -> getQueryAd ( queryAd )		5245523	1					
ANR	5246392	Callee	query -> getQueryAd		5245523	0					
ANR	5246393	PtrMemberAccess	query -> getQueryAd		5245523	0					
ANR	5246394	Identifier	query		5245523	0					
ANR	5246395	Identifier	getQueryAd		5245523	1					
ANR	5246396	ArgumentList	queryAd		5245523	1					
ANR	5246397	Argument	queryAd		5245523	0					
ANR	5246398	Identifier	queryAd		5245523	0					
ANR	5246399	ExpressionStatement	queryAd . fPrint ( stdout )	302:2:7909:7932	5245523	6	True				
ANR	5246400	CallExpression	queryAd . fPrint ( stdout )		5245523	0					
ANR	5246401	Callee	queryAd . fPrint		5245523	0					
ANR	5246402	MemberAccess	queryAd . fPrint		5245523	0					
ANR	5246403	Identifier	queryAd		5245523	0					
ANR	5246404	Identifier	fPrint		5245523	1					
ANR	5246405	ArgumentList	stdout		5245523	1					
ANR	5246406	Argument	stdout		5245523	0					
ANR	5246407	Identifier	stdout		5245523	0					
ANR	5246408	ExpressionStatement	"printf ( ""----------\\n"" )"	304:2:7937:7960	5245523	7	True				
ANR	5246409	CallExpression	"printf ( ""----------\\n"" )"		5245523	0					
ANR	5246410	Callee	printf		5245523	0					
ANR	5246411	Identifier	printf		5245523	0					
ANR	5246412	ArgumentList	"""----------\\n"""		5245523	1					
ANR	5246413	Argument	"""----------\\n"""		5245523	0					
ANR	5246414	PrimaryExpression	"""----------\\n"""		5245523	0					
ANR	5246415	ExpressionStatement	"fprintf ( stderr , ""Result of making query ad was:  %d\\n"" , q )"	305:2:7964:8023	5245523	8	True				
ANR	5246416	CallExpression	"fprintf ( stderr , ""Result of making query ad was:  %d\\n"" , q )"		5245523	0					
ANR	5246417	Callee	fprintf		5245523	0					
ANR	5246418	Identifier	fprintf		5245523	0					
ANR	5246419	ArgumentList	stderr		5245523	1					
ANR	5246420	Argument	stderr		5245523	0					
ANR	5246421	Identifier	stderr		5245523	0					
ANR	5246422	Argument	"""Result of making query ad was:  %d\\n"""		5245523	1					
ANR	5246423	PrimaryExpression	"""Result of making query ad was:  %d\\n"""		5245523	0					
ANR	5246424	Argument	q		5245523	2					
ANR	5246425	Identifier	q		5245523	0					
ANR	5246426	ExpressionStatement	exit ( 1 )	306:2:8027:8035	5245523	9	True				
ANR	5246427	CallExpression	exit ( 1 )		5245523	0					
ANR	5246428	Callee	exit		5245523	0					
ANR	5246429	Identifier	exit		5245523	0					
ANR	5246430	ArgumentList	1		5245523	1					
ANR	5246431	Argument	1		5245523	0					
ANR	5246432	PrimaryExpression	1		5245523	0					
ANR	5246433	IdentifierDeclStatement	char * addr = ( NULL != pool ) ? pool -> addr ( ) : NULL ;	310:1:8113:8162	5245523	18	True				
ANR	5246434	IdentifierDecl	* addr = ( NULL != pool ) ? pool -> addr ( ) : NULL		5245523	0					
ANR	5246435	IdentifierDeclType	char *		5245523	0					
ANR	5246436	Identifier	addr		5245523	1					
ANR	5246437	AssignmentExpression	* addr = ( NULL != pool ) ? pool -> addr ( ) : NULL		5245523	2		=			
ANR	5246438	Identifier	addr		5245523	0					
ANR	5246439	ConditionalExpression	( NULL != pool ) ? pool -> addr ( ) : NULL		5245523	1					
ANR	5246440	Condition	NULL != pool		5245523	0					
ANR	5246441	EqualityExpression	NULL != pool		5245523	0		!=			
ANR	5246442	Identifier	NULL		5245523	0					
ANR	5246443	Identifier	pool		5245523	1					
ANR	5246444	CallExpression	pool -> addr ( )		5245523	1					
ANR	5246445	Callee	pool -> addr		5245523	0					
ANR	5246446	PtrMemberAccess	pool -> addr		5245523	0					
ANR	5246447	Identifier	pool		5245523	0					
ANR	5246448	Identifier	addr		5245523	1					
ANR	5246449	ArgumentList			5245523	1					
ANR	5246450	Identifier	NULL		5245523	2					
ANR	5246451	IdentifierDeclStatement	Daemon * requested_daemon = pool ;	311:8:8172:8203	5245523	19	True				
ANR	5246452	IdentifierDecl	* requested_daemon = pool		5245523	0					
ANR	5246453	IdentifierDeclType	Daemon *		5245523	0					
ANR	5246454	Identifier	requested_daemon		5245523	1					
ANR	5246455	AssignmentExpression	* requested_daemon = pool		5245523	2		=			
ANR	5246456	Identifier	pool		5245523	0					
ANR	5246457	Identifier	pool		5245523	1					
ANR	5246458	IfStatement	if ( direct )		5245523	20					
ANR	5246459	Condition	direct	317:5:8468:8473	5245523	0	True				
ANR	5246460	Identifier	direct		5245523	0					
ANR	5246461	CompoundStatement		236:2:5890:5906	5245523	1					
ANR	5246462	IdentifierDeclStatement	Daemon * d = NULL ;	318:2:8481:8497	5245523	0	True				
ANR	5246463	IdentifierDecl	* d = NULL		5245523	0					
ANR	5246464	IdentifierDeclType	Daemon *		5245523	0					
ANR	5246465	Identifier	d		5245523	1					
ANR	5246466	AssignmentExpression	* d = NULL		5245523	2		=			
ANR	5246467	Identifier	NULL		5245523	0					
ANR	5246468	Identifier	NULL		5245523	1					
ANR	5246469	SwitchStatement	switch ( mode )		5245523	1					
ANR	5246470	Condition	mode	319:10:8509:8512	5245523	0	True				
ANR	5246471	Identifier	mode		5245523	0					
ANR	5246472	CompoundStatement		237:17:5925:5925	5245523	1					
ANR	5246473	Label	case MODE_MASTER_NORMAL :	320:2:8520:8543	5245523	0	True				
ANR	5246474	Identifier	MODE_MASTER_NORMAL		5245523	0					
ANR	5246475	ExpressionStatement	"d = new Daemon ( DT_MASTER , direct , addr )"	321:3:8548:8589	5245523	1	True				
ANR	5246476	AssignmentExpression	"d = new Daemon ( DT_MASTER , direct , addr )"		5245523	0		=			
ANR	5246477	Identifier	d		5245523	0					
ANR	5246478	Expression	"DT_MASTER , direct , addr"		5245523	1					
ANR	5246479	Identifier	DT_MASTER		5245523	0					
ANR	5246480	Expression	"direct , addr"		5245523	1					
ANR	5246481	Identifier	direct		5245523	0					
ANR	5246482	Identifier	addr		5245523	1					
ANR	5246483	BreakStatement	break ;	322:3:8594:8599	5245523	2	True				
ANR	5246484	Label	case MODE_STARTD_NORMAL :	323:2:8603:8626	5245523	3	True				
ANR	5246485	Identifier	MODE_STARTD_NORMAL		5245523	0					
ANR	5246486	Label	case MODE_STARTD_AVAIL :	324:2:8630:8652	5245523	4	True				
ANR	5246487	Identifier	MODE_STARTD_AVAIL		5245523	0					
ANR	5246488	Label	case MODE_STARTD_RUN :	325:2:8656:8676	5245523	5	True				
ANR	5246489	Identifier	MODE_STARTD_RUN		5245523	0					
ANR	5246490	Label	case MODE_STARTD_COD :	326:2:8680:8700	5245523	6	True				
ANR	5246491	Identifier	MODE_STARTD_COD		5245523	0					
ANR	5246492	ExpressionStatement	"d = new Daemon ( DT_STARTD , direct , addr )"	327:3:8705:8746	5245523	7	True				
ANR	5246493	AssignmentExpression	"d = new Daemon ( DT_STARTD , direct , addr )"		5245523	0		=			
ANR	5246494	Identifier	d		5245523	0					
ANR	5246495	Expression	"DT_STARTD , direct , addr"		5245523	1					
ANR	5246496	Identifier	DT_STARTD		5245523	0					
ANR	5246497	Expression	"direct , addr"		5245523	1					
ANR	5246498	Identifier	direct		5245523	0					
ANR	5246499	Identifier	addr		5245523	1					
ANR	5246500	BreakStatement	break ;	328:3:8751:8756	5245523	8	True				
ANR	5246501	Label	case MODE_QUILL_NORMAL :	331:2:8788:8810	5245523	9	True				
ANR	5246502	Identifier	MODE_QUILL_NORMAL		5245523	0					
ANR	5246503	ExpressionStatement	"d = new Daemon ( DT_QUILL , direct , addr )"	332:3:8815:8855	5245523	10	True				
ANR	5246504	AssignmentExpression	"d = new Daemon ( DT_QUILL , direct , addr )"		5245523	0		=			
ANR	5246505	Identifier	d		5245523	0					
ANR	5246506	Expression	"DT_QUILL , direct , addr"		5245523	1					
ANR	5246507	Identifier	DT_QUILL		5245523	0					
ANR	5246508	Expression	"direct , addr"		5245523	1					
ANR	5246509	Identifier	direct		5245523	0					
ANR	5246510	Identifier	addr		5245523	1					
ANR	5246511	BreakStatement	break ;	333:3:8860:8865	5245523	11	True				
ANR	5246512	Label	case MODE_SCHEDD_NORMAL :	336:2:8903:8926	5245523	12	True				
ANR	5246513	Identifier	MODE_SCHEDD_NORMAL		5245523	0					
ANR	5246514	Label	case MODE_SCHEDD_SUBMITTORS :	337:2:8930:8957	5245523	13	True				
ANR	5246515	Identifier	MODE_SCHEDD_SUBMITTORS		5245523	0					
ANR	5246516	ExpressionStatement	"d = new Daemon ( DT_SCHEDD , direct , addr )"	338:3:8962:9003	5245523	14	True				
ANR	5246517	AssignmentExpression	"d = new Daemon ( DT_SCHEDD , direct , addr )"		5245523	0		=			
ANR	5246518	Identifier	d		5245523	0					
ANR	5246519	Expression	"DT_SCHEDD , direct , addr"		5245523	1					
ANR	5246520	Identifier	DT_SCHEDD		5245523	0					
ANR	5246521	Expression	"direct , addr"		5245523	1					
ANR	5246522	Identifier	direct		5245523	0					
ANR	5246523	Identifier	addr		5245523	1					
ANR	5246524	BreakStatement	break ;	339:3:9008:9013	5245523	15	True				
ANR	5246525	Label	case MODE_NEGOTIATOR_NORMAL :	340:2:9017:9044	5245523	16	True				
ANR	5246526	Identifier	MODE_NEGOTIATOR_NORMAL		5245523	0					
ANR	5246527	ExpressionStatement	"d = new Daemon ( DT_NEGOTIATOR , direct , addr )"	341:3:9049:9094	5245523	17	True				
ANR	5246528	AssignmentExpression	"d = new Daemon ( DT_NEGOTIATOR , direct , addr )"		5245523	0		=			
ANR	5246529	Identifier	d		5245523	0					
ANR	5246530	Expression	"DT_NEGOTIATOR , direct , addr"		5245523	1					
ANR	5246531	Identifier	DT_NEGOTIATOR		5245523	0					
ANR	5246532	Expression	"direct , addr"		5245523	1					
ANR	5246533	Identifier	direct		5245523	0					
ANR	5246534	Identifier	addr		5245523	1					
ANR	5246535	BreakStatement	break ;	342:3:9099:9104	5245523	18	True				
ANR	5246536	Label	case MODE_CKPT_SRVR_NORMAL :	343:2:9108:9134	5245523	19	True				
ANR	5246537	Identifier	MODE_CKPT_SRVR_NORMAL		5245523	0					
ANR	5246538	Label	case MODE_COLLECTOR_NORMAL :	344:2:9138:9164	5245523	20	True				
ANR	5246539	Identifier	MODE_COLLECTOR_NORMAL		5245523	0					
ANR	5246540	Label	case MODE_LICENSE_NORMAL :	345:2:9168:9192	5245523	21	True				
ANR	5246541	Identifier	MODE_LICENSE_NORMAL		5245523	0					
ANR	5246542	Label	case MODE_STORAGE_NORMAL :	346:2:9196:9220	5245523	22	True				
ANR	5246543	Identifier	MODE_STORAGE_NORMAL		5245523	0					
ANR	5246544	Label	case MODE_GENERIC_NORMAL :	347:2:9224:9248	5245523	23	True				
ANR	5246545	Identifier	MODE_GENERIC_NORMAL		5245523	0					
ANR	5246546	Label	case MODE_ANY_NORMAL :	348:2:9252:9272	5245523	24	True				
ANR	5246547	Identifier	MODE_ANY_NORMAL		5245523	0					
ANR	5246548	Label	case MODE_OTHER :	349:2:9276:9291	5245523	25	True				
ANR	5246549	Identifier	MODE_OTHER		5245523	0					
ANR	5246550	Label	case MODE_GRID_NORMAL :	350:2:9295:9316	5245523	26	True				
ANR	5246551	Identifier	MODE_GRID_NORMAL		5245523	0					
ANR	5246552	Label	case MODE_HAD_NORMAL :	351:2:9320:9340	5245523	27	True				
ANR	5246553	Identifier	MODE_HAD_NORMAL		5245523	0					
ANR	5246554	BreakStatement	break ;	353:3:9395:9400	5245523	28	True				
ANR	5246555	Label	default :	354:2:9404:9411	5245523	29	True				
ANR	5246556	Identifier	default		5245523	0					
ANR	5246557	ExpressionStatement	"fprintf ( stderr , ""Error:  Illegal mode %d\\n"" , mode )"	355:12:9425:9477	5245523	30	True				
ANR	5246558	CallExpression	"fprintf ( stderr , ""Error:  Illegal mode %d\\n"" , mode )"		5245523	0					
ANR	5246559	Callee	fprintf		5245523	0					
ANR	5246560	Identifier	fprintf		5245523	0					
ANR	5246561	ArgumentList	stderr		5245523	1					
ANR	5246562	Argument	stderr		5245523	0					
ANR	5246563	Identifier	stderr		5245523	0					
ANR	5246564	Argument	"""Error:  Illegal mode %d\\n"""		5245523	1					
ANR	5246565	PrimaryExpression	"""Error:  Illegal mode %d\\n"""		5245523	0					
ANR	5246566	Argument	mode		5245523	2					
ANR	5246567	Identifier	mode		5245523	0					
ANR	5246568	ExpressionStatement	exit ( 1 )	356:3:9482:9491	5245523	31	True				
ANR	5246569	CallExpression	exit ( 1 )		5245523	0					
ANR	5246570	Callee	exit		5245523	0					
ANR	5246571	Identifier	exit		5245523	0					
ANR	5246572	ArgumentList	1		5245523	1					
ANR	5246573	Argument	1		5245523	0					
ANR	5246574	PrimaryExpression	1		5245523	0					
ANR	5246575	BreakStatement	break ;	357:3:9496:9501	5245523	32	True				
ANR	5246576	IfStatement	if ( NULL != d )		5245523	2					
ANR	5246577	Condition	NULL != d	365:6:9881:9889	5245523	0	True				
ANR	5246578	EqualityExpression	NULL != d		5245523	0		!=			
ANR	5246579	Identifier	NULL		5245523	0					
ANR	5246580	Identifier	d		5245523	1					
ANR	5246581	CompoundStatement		283:17:7301:7301	5245523	1					
ANR	5246582	IfStatement	if ( d -> locate ( ) )		5245523	0					
ANR	5246583	Condition	d -> locate ( )	366:7:9901:9911	5245523	0	True				
ANR	5246584	CallExpression	d -> locate ( )		5245523	0					
ANR	5246585	Callee	d -> locate		5245523	0					
ANR	5246586	PtrMemberAccess	d -> locate		5245523	0					
ANR	5246587	Identifier	d		5245523	0					
ANR	5246588	Identifier	locate		5245523	1					
ANR	5246589	ArgumentList			5245523	1					
ANR	5246590	CompoundStatement		284:21:7324:7324	5245523	1					
ANR	5246591	ExpressionStatement	addr = d -> addr ( )	367:4:9921:9937	5245523	0	True				
ANR	5246592	AssignmentExpression	addr = d -> addr ( )		5245523	0		=			
ANR	5246593	Identifier	addr		5245523	0					
ANR	5246594	CallExpression	d -> addr ( )		5245523	1					
ANR	5246595	Callee	d -> addr		5245523	0					
ANR	5246596	PtrMemberAccess	d -> addr		5245523	0					
ANR	5246597	Identifier	d		5245523	0					
ANR	5246598	Identifier	addr		5245523	1					
ANR	5246599	ArgumentList			5245523	1					
ANR	5246600	ExpressionStatement	requested_daemon = d	368:4:9943:9963	5245523	1	True				
ANR	5246601	AssignmentExpression	requested_daemon = d		5245523	0		=			
ANR	5246602	Identifier	requested_daemon		5245523	0					
ANR	5246603	Identifier	d		5245523	1					
ANR	5246604	ElseStatement	else		5245523	0					
ANR	5246605	CompoundStatement		288:11:7397:7424	5245523	0					
ANR	5246606	IdentifierDeclStatement	const char * id = d -> idStr ( ) ;	370:11:9988:10015	5245523	0	True				
ANR	5246607	IdentifierDecl	* id = d -> idStr ( )		5245523	0					
ANR	5246608	IdentifierDeclType	const char *		5245523	0					
ANR	5246609	Identifier	id		5245523	1					
ANR	5246610	AssignmentExpression	* id = d -> idStr ( )		5245523	2		=			
ANR	5246611	Identifier	id		5245523	0					
ANR	5246612	CallExpression	d -> idStr ( )		5245523	1					
ANR	5246613	Callee	d -> idStr		5245523	0					
ANR	5246614	PtrMemberAccess	d -> idStr		5245523	0					
ANR	5246615	Identifier	d		5245523	0					
ANR	5246616	Identifier	idStr		5245523	1					
ANR	5246617	ArgumentList			5245523	1					
ANR	5246618	IfStatement	if ( NULL == id )		5245523	1					
ANR	5246619	Condition	NULL == id	371:36:10053:10062	5245523	0	True				
ANR	5246620	EqualityExpression	NULL == id		5245523	0		==			
ANR	5246621	Identifier	NULL		5245523	0					
ANR	5246622	Identifier	id		5245523	1					
ANR	5246623	ExpressionStatement	id = d -> name ( )	371:48:10065:10079	5245523	1	True				
ANR	5246624	AssignmentExpression	id = d -> name ( )		5245523	0		=			
ANR	5246625	Identifier	id		5245523	0					
ANR	5246626	CallExpression	d -> name ( )		5245523	1					
ANR	5246627	Callee	d -> name		5245523	0					
ANR	5246628	PtrMemberAccess	d -> name		5245523	0					
ANR	5246629	Identifier	d		5245523	0					
ANR	5246630	Identifier	name		5245523	1					
ANR	5246631	ArgumentList			5245523	1					
ANR	5246632	IfStatement	if ( NULL == id )		5245523	2					
ANR	5246633	Condition	NULL == id	372:8:10089:10098	5245523	0	True				
ANR	5246634	EqualityExpression	NULL == id		5245523	0		==			
ANR	5246635	Identifier	NULL		5245523	0					
ANR	5246636	Identifier	id		5245523	1					
ANR	5246637	ExpressionStatement	"id = ""daemon"""	372:20:10101:10114	5245523	1	True				
ANR	5246638	AssignmentExpression	"id = ""daemon"""		5245523	0		=			
ANR	5246639	Identifier	id		5245523	0					
ANR	5246640	PrimaryExpression	"""daemon"""		5245523	1					
ANR	5246641	ExpressionStatement	"fprintf ( stderr , ""Error: Failed to locate %s\\n"" , id )"	373:28:10144:10195	5245523	3	True				
ANR	5246642	CallExpression	"fprintf ( stderr , ""Error: Failed to locate %s\\n"" , id )"		5245523	0					
ANR	5246643	Callee	fprintf		5245523	0					
ANR	5246644	Identifier	fprintf		5245523	0					
ANR	5246645	ArgumentList	stderr		5245523	1					
ANR	5246646	Argument	stderr		5245523	0					
ANR	5246647	Identifier	stderr		5245523	0					
ANR	5246648	Argument	"""Error: Failed to locate %s\\n"""		5245523	1					
ANR	5246649	PrimaryExpression	"""Error: Failed to locate %s\\n"""		5245523	0					
ANR	5246650	Argument	id		5245523	2					
ANR	5246651	Identifier	id		5245523	0					
ANR	5246652	ExpressionStatement	"fprintf ( stderr , ""%s\\n"" , d -> error ( ) )"	374:32:10229:10264	5245523	4	True				
ANR	5246653	CallExpression	"fprintf ( stderr , ""%s\\n"" , d -> error ( ) )"		5245523	0					
ANR	5246654	Callee	fprintf		5245523	0					
ANR	5246655	Identifier	fprintf		5245523	0					
ANR	5246656	ArgumentList	stderr		5245523	1					
ANR	5246657	Argument	stderr		5245523	0					
ANR	5246658	Identifier	stderr		5245523	0					
ANR	5246659	Argument	"""%s\\n"""		5245523	1					
ANR	5246660	PrimaryExpression	"""%s\\n"""		5245523	0					
ANR	5246661	Argument	d -> error ( )		5245523	2					
ANR	5246662	CallExpression	d -> error ( )		5245523	0					
ANR	5246663	Callee	d -> error		5245523	0					
ANR	5246664	PtrMemberAccess	d -> error		5245523	0					
ANR	5246665	Identifier	d		5245523	0					
ANR	5246666	Identifier	error		5245523	1					
ANR	5246667	ArgumentList			5245523	1					
ANR	5246668	ExpressionStatement	exit ( 1 )	375:4:10270:10279	5245523	5	True				
ANR	5246669	CallExpression	exit ( 1 )		5245523	0					
ANR	5246670	Callee	exit		5245523	0					
ANR	5246671	Identifier	exit		5245523	0					
ANR	5246672	ArgumentList	1		5245523	1					
ANR	5246673	Argument	1		5245523	0					
ANR	5246674	PrimaryExpression	1		5245523	0					
ANR	5246675	IdentifierDeclStatement	CondorError errstack ;	380:1:10295:10315	5245523	21	True				
ANR	5246676	IdentifierDecl	errstack		5245523	0					
ANR	5246677	IdentifierDeclType	CondorError		5245523	0					
ANR	5246678	Identifier	errstack		5245523	1					
ANR	5246679	IfStatement	if ( NULL != addr )		5245523	22					
ANR	5246680	Condition	NULL != addr	381:5:10322:10333	5245523	0	True				
ANR	5246681	EqualityExpression	NULL != addr		5245523	0		!=			
ANR	5246682	Identifier	NULL		5245523	0					
ANR	5246683	Identifier	addr		5245523	1					
ANR	5246684	CompoundStatement		299:19:7745:7745	5245523	1					
ANR	5246685	ExpressionStatement	"q = query -> fetchAds ( result , addr , & errstack )"	386:2:10673:10718	5245523	0	True				
ANR	5246686	AssignmentExpression	"q = query -> fetchAds ( result , addr , & errstack )"		5245523	0		=			
ANR	5246687	Identifier	q		5245523	0					
ANR	5246688	CallExpression	"query -> fetchAds ( result , addr , & errstack )"		5245523	1					
ANR	5246689	Callee	query -> fetchAds		5245523	0					
ANR	5246690	PtrMemberAccess	query -> fetchAds		5245523	0					
ANR	5246691	Identifier	query		5245523	0					
ANR	5246692	Identifier	fetchAds		5245523	1					
ANR	5246693	ArgumentList	result		5245523	1					
ANR	5246694	Argument	result		5245523	0					
ANR	5246695	Identifier	result		5245523	0					
ANR	5246696	Argument	addr		5245523	1					
ANR	5246697	Identifier	addr		5245523	0					
ANR	5246698	Argument	& errstack		5245523	2					
ANR	5246699	UnaryOperationExpression	& errstack		5245523	0					
ANR	5246700	UnaryOperator	&		5245523	0					
ANR	5246701	Identifier	errstack		5245523	1					
ANR	5246702	ElseStatement	else		5245523	0					
ANR	5246703	CompoundStatement		307:2:8222:8274	5245523	0					
ANR	5246704	IdentifierDeclStatement	CollectorList * collectors = CollectorList :: create ( ) ;	389:2:10813:10865	5245523	0	True				
ANR	5246705	IdentifierDecl	* collectors = CollectorList :: create ( )		5245523	0					
ANR	5246706	IdentifierDeclType	CollectorList *		5245523	0					
ANR	5246707	Identifier	collectors		5245523	1					
ANR	5246708	AssignmentExpression	* collectors = CollectorList :: create ( )		5245523	2		=			
ANR	5246709	Identifier	collectors		5245523	0					
ANR	5246710	CallExpression	CollectorList :: create ( )		5245523	1					
ANR	5246711	Callee	CollectorList :: create		5245523	0					
ANR	5246712	Identifier	CollectorList :: create		5245523	0					
ANR	5246713	ArgumentList			5245523	1					
ANR	5246714	ExpressionStatement	"q = collectors -> query ( * query , result , & errstack )"	390:2:10869:10918	5245523	1	True				
ANR	5246715	AssignmentExpression	"q = collectors -> query ( * query , result , & errstack )"		5245523	0		=			
ANR	5246716	Identifier	q		5245523	0					
ANR	5246717	CallExpression	"collectors -> query ( * query , result , & errstack )"		5245523	1					
ANR	5246718	Callee	collectors -> query		5245523	0					
ANR	5246719	PtrMemberAccess	collectors -> query		5245523	0					
ANR	5246720	Identifier	collectors		5245523	0					
ANR	5246721	Identifier	query		5245523	1					
ANR	5246722	ArgumentList	* query		5245523	1					
ANR	5246723	Argument	* query		5245523	0					
ANR	5246724	UnaryOperationExpression	* query		5245523	0					
ANR	5246725	UnaryOperator	*		5245523	0					
ANR	5246726	Identifier	query		5245523	1					
ANR	5246727	Argument	result		5245523	1					
ANR	5246728	Identifier	result		5245523	0					
ANR	5246729	Argument	& errstack		5245523	2					
ANR	5246730	UnaryOperationExpression	& errstack		5245523	0					
ANR	5246731	UnaryOperator	&		5245523	0					
ANR	5246732	Identifier	errstack		5245523	1					
ANR	5246733	Statement	delete	391:2:10922:10927	5245523	2	True				
ANR	5246734	ExpressionStatement	collectors	391:9:10929:10939	5245523	3	True				
ANR	5246735	Identifier	collectors		5245523	0					
ANR	5246736	IfStatement	if ( Q_OK != q )		5245523	23					
ANR	5246737	Condition	Q_OK != q	396:12:11031:11039	5245523	0	True				
ANR	5246738	EqualityExpression	Q_OK != q		5245523	0		!=			
ANR	5246739	Identifier	Q_OK		5245523	0					
ANR	5246740	Identifier	q		5245523	1					
ANR	5246741	CompoundStatement		314:23:8451:8451	5245523	1					
ANR	5246742	ExpressionStatement	"fprintf ( stderr , ""Error: %s\\n"" , getStrQueryResult ( q ) )"	398:9:11110:11164	5245523	0	True				
ANR	5246743	CallExpression	"fprintf ( stderr , ""Error: %s\\n"" , getStrQueryResult ( q ) )"		5245523	0					
ANR	5246744	Callee	fprintf		5245523	0					
ANR	5246745	Identifier	fprintf		5245523	0					
ANR	5246746	ArgumentList	stderr		5245523	1					
ANR	5246747	Argument	stderr		5245523	0					
ANR	5246748	Identifier	stderr		5245523	0					
ANR	5246749	Argument	"""Error: %s\\n"""		5245523	1					
ANR	5246750	PrimaryExpression	"""Error: %s\\n"""		5245523	0					
ANR	5246751	Argument	getStrQueryResult ( q )		5245523	2					
ANR	5246752	CallExpression	getStrQueryResult ( q )		5245523	0					
ANR	5246753	Callee	getStrQueryResult		5245523	0					
ANR	5246754	Identifier	getStrQueryResult		5245523	0					
ANR	5246755	ArgumentList	q		5245523	1					
ANR	5246756	Argument	q		5245523	0					
ANR	5246757	Identifier	q		5245523	0					
ANR	5246758	ExpressionStatement	"fprintf ( stderr , ""%s\\n"" , errstack . getFullText ( true ) )"	399:2:11168:11221	5245523	1	True				
ANR	5246759	CallExpression	"fprintf ( stderr , ""%s\\n"" , errstack . getFullText ( true ) )"		5245523	0					
ANR	5246760	Callee	fprintf		5245523	0					
ANR	5246761	Identifier	fprintf		5245523	0					
ANR	5246762	ArgumentList	stderr		5245523	1					
ANR	5246763	Argument	stderr		5245523	0					
ANR	5246764	Identifier	stderr		5245523	0					
ANR	5246765	Argument	"""%s\\n"""		5245523	1					
ANR	5246766	PrimaryExpression	"""%s\\n"""		5245523	0					
ANR	5246767	Argument	errstack . getFullText ( true )		5245523	2					
ANR	5246768	CallExpression	errstack . getFullText ( true )		5245523	0					
ANR	5246769	Callee	errstack . getFullText		5245523	0					
ANR	5246770	MemberAccess	errstack . getFullText		5245523	0					
ANR	5246771	Identifier	errstack		5245523	0					
ANR	5246772	Identifier	getFullText		5245523	1					
ANR	5246773	ArgumentList	true		5245523	1					
ANR	5246774	Argument	true		5245523	0					
ANR	5246775	Identifier	true		5245523	0					
ANR	5246776	IfStatement	if ( ( NULL != requested_daemon ) && ( ( Q_NO_COLLECTOR_HOST == q ) || ( requested_daemon -> type ( ) == DT_COLLECTOR ) ) )		5245523	2					
ANR	5246777	Condition	( NULL != requested_daemon ) && ( ( Q_NO_COLLECTOR_HOST == q ) || ( requested_daemon -> type ( ) == DT_COLLECTOR ) )	401:13:11237:11340	5245523	0	True				
ANR	5246778	AndExpression	( NULL != requested_daemon ) && ( ( Q_NO_COLLECTOR_HOST == q ) || ( requested_daemon -> type ( ) == DT_COLLECTOR ) )		5245523	0		&&			
ANR	5246779	EqualityExpression	NULL != requested_daemon		5245523	0		!=			
ANR	5246780	Identifier	NULL		5245523	0					
ANR	5246781	Identifier	requested_daemon		5245523	1					
ANR	5246782	OrExpression	( Q_NO_COLLECTOR_HOST == q ) || ( requested_daemon -> type ( ) == DT_COLLECTOR )		5245523	1		||			
ANR	5246783	EqualityExpression	Q_NO_COLLECTOR_HOST == q		5245523	0		==			
ANR	5246784	Identifier	Q_NO_COLLECTOR_HOST		5245523	0					
ANR	5246785	Identifier	q		5245523	1					
ANR	5246786	EqualityExpression	requested_daemon -> type ( ) == DT_COLLECTOR		5245523	1		==			
ANR	5246787	CallExpression	requested_daemon -> type ( )		5245523	0					
ANR	5246788	Callee	requested_daemon -> type		5245523	0					
ANR	5246789	PtrMemberAccess	requested_daemon -> type		5245523	0					
ANR	5246790	Identifier	requested_daemon		5245523	0					
ANR	5246791	Identifier	type		5245523	1					
ANR	5246792	ArgumentList			5245523	1					
ANR	5246793	Identifier	DT_COLLECTOR		5245523	1					
ANR	5246794	CompoundStatement		325:24:9138:9153	5245523	1					
ANR	5246795	IdentifierDeclStatement	const char * fullhost = requested_daemon -> fullHostname ( ) ;	403:10:11439:11494	5245523	0	True				
ANR	5246796	IdentifierDecl	* fullhost = requested_daemon -> fullHostname ( )		5245523	0					
ANR	5246797	IdentifierDeclType	const char *		5245523	0					
ANR	5246798	Identifier	fullhost		5245523	1					
ANR	5246799	AssignmentExpression	* fullhost = requested_daemon -> fullHostname ( )		5245523	2		=			
ANR	5246800	Identifier	fullhost		5245523	0					
ANR	5246801	CallExpression	requested_daemon -> fullHostname ( )		5245523	1					
ANR	5246802	Callee	requested_daemon -> fullHostname		5245523	0					
ANR	5246803	PtrMemberAccess	requested_daemon -> fullHostname		5245523	0					
ANR	5246804	Identifier	requested_daemon		5245523	0					
ANR	5246805	Identifier	fullHostname		5245523	1					
ANR	5246806	ArgumentList			5245523	1					
ANR	5246807	IfStatement	if ( NULL == fullhost )		5245523	1					
ANR	5246808	Condition	NULL == fullhost	404:28:11524:11539	5245523	0	True				
ANR	5246809	EqualityExpression	NULL == fullhost		5245523	0		==			
ANR	5246810	Identifier	NULL		5245523	0					
ANR	5246811	Identifier	fullhost		5245523	1					
ANR	5246812	ExpressionStatement	"fullhost = ""<unknown_host>"""	404:46:11542:11569	5245523	1	True				
ANR	5246813	AssignmentExpression	"fullhost = ""<unknown_host>"""		5245523	0		=			
ANR	5246814	Identifier	fullhost		5245523	0					
ANR	5246815	PrimaryExpression	"""<unknown_host>"""		5245523	1					
ANR	5246816	IdentifierDeclStatement	const char * daddr = requested_daemon -> addr ( ) ;	405:24:11595:11639	5245523	2	True				
ANR	5246817	IdentifierDecl	* daddr = requested_daemon -> addr ( )		5245523	0					
ANR	5246818	IdentifierDeclType	const char *		5245523	0					
ANR	5246819	Identifier	daddr		5245523	1					
ANR	5246820	AssignmentExpression	* daddr = requested_daemon -> addr ( )		5245523	2		=			
ANR	5246821	Identifier	daddr		5245523	0					
ANR	5246822	CallExpression	requested_daemon -> addr ( )		5245523	1					
ANR	5246823	Callee	requested_daemon -> addr		5245523	0					
ANR	5246824	PtrMemberAccess	requested_daemon -> addr		5245523	0					
ANR	5246825	Identifier	requested_daemon		5245523	0					
ANR	5246826	Identifier	addr		5245523	1					
ANR	5246827	ArgumentList			5245523	1					
ANR	5246828	IfStatement	if ( NULL == daddr )		5245523	3					
ANR	5246829	Condition	NULL == daddr	406:28:11669:11681	5245523	0	True				
ANR	5246830	EqualityExpression	NULL == daddr		5245523	0		==			
ANR	5246831	Identifier	NULL		5245523	0					
ANR	5246832	Identifier	daddr		5245523	1					
ANR	5246833	ExpressionStatement	"daddr = ""<unknown>"""	406:43:11684:11703	5245523	1	True				
ANR	5246834	AssignmentExpression	"daddr = ""<unknown>"""		5245523	0		=			
ANR	5246835	Identifier	daddr		5245523	0					
ANR	5246836	PrimaryExpression	"""<unknown>"""		5245523	1					
ANR	5246837	IdentifierDeclStatement	char info [ 1000 ] ;	407:24:11729:11744	5245523	4	True				
ANR	5246838	IdentifierDecl	info [ 1000 ]		5245523	0					
ANR	5246839	IdentifierDeclType	char [ 1000 ]		5245523	0					
ANR	5246840	Identifier	info		5245523	1					
ANR	5246841	PrimaryExpression	1000		5245523	2					
ANR	5246842	ExpressionStatement	"sprintf ( info , ""%s (%s)"" , fullhost , daddr )"	408:24:11770:11811	5245523	5	True				
ANR	5246843	CallExpression	"sprintf ( info , ""%s (%s)"" , fullhost , daddr )"		5245523	0					
ANR	5246844	Callee	sprintf		5245523	0					
ANR	5246845	Identifier	sprintf		5245523	0					
ANR	5246846	ArgumentList	info		5245523	1					
ANR	5246847	Argument	info		5245523	0					
ANR	5246848	Identifier	info		5245523	0					
ANR	5246849	Argument	"""%s (%s)"""		5245523	1					
ANR	5246850	PrimaryExpression	"""%s (%s)"""		5245523	0					
ANR	5246851	Argument	fullhost		5245523	2					
ANR	5246852	Identifier	fullhost		5245523	0					
ANR	5246853	Argument	daddr		5245523	3					
ANR	5246854	Identifier	daddr		5245523	0					
ANR	5246855	ExpressionStatement	"printNoCollectorContact ( stderr , info , ! expert )"	409:10:11823:11871	5245523	6	True				
ANR	5246856	CallExpression	"printNoCollectorContact ( stderr , info , ! expert )"		5245523	0					
ANR	5246857	Callee	printNoCollectorContact		5245523	0					
ANR	5246858	Identifier	printNoCollectorContact		5245523	0					
ANR	5246859	ArgumentList	stderr		5245523	1					
ANR	5246860	Argument	stderr		5245523	0					
ANR	5246861	Identifier	stderr		5245523	0					
ANR	5246862	Argument	info		5245523	1					
ANR	5246863	Identifier	info		5245523	0					
ANR	5246864	Argument	! expert		5245523	2					
ANR	5246865	UnaryOperationExpression	! expert		5245523	0					
ANR	5246866	UnaryOperator	!		5245523	0					
ANR	5246867	Identifier	expert		5245523	1					
ANR	5246868	ElseStatement	else		5245523	0					
ANR	5246869	IfStatement	if ( ( NULL != requested_daemon ) && ( Q_COMMUNICATION_ERROR == q ) )		5245523	0					
ANR	5246870	Condition	( NULL != requested_daemon ) && ( Q_COMMUNICATION_ERROR == q )	410:20:11917:11974	5245523	0	True				
ANR	5246871	AndExpression	( NULL != requested_daemon ) && ( Q_COMMUNICATION_ERROR == q )		5245523	0		&&			
ANR	5246872	EqualityExpression	NULL != requested_daemon		5245523	0		!=			
ANR	5246873	Identifier	NULL		5245523	0					
ANR	5246874	Identifier	requested_daemon		5245523	1					
ANR	5246875	EqualityExpression	Q_COMMUNICATION_ERROR == q		5245523	1		==			
ANR	5246876	Identifier	Q_COMMUNICATION_ERROR		5245523	0					
ANR	5246877	Identifier	q		5245523	1					
ANR	5246878	CompoundStatement		333:24:9657:9701	5245523	1					
ANR	5246879	IdentifierDeclStatement	const char * id = requested_daemon -> idStr ( ) ;	412:3:12075:12117	5245523	0	True				
ANR	5246880	IdentifierDecl	* id = requested_daemon -> idStr ( )		5245523	0					
ANR	5246881	IdentifierDeclType	const char *		5245523	0					
ANR	5246882	Identifier	id		5245523	1					
ANR	5246883	AssignmentExpression	* id = requested_daemon -> idStr ( )		5245523	2		=			
ANR	5246884	Identifier	id		5245523	0					
ANR	5246885	CallExpression	requested_daemon -> idStr ( )		5245523	1					
ANR	5246886	Callee	requested_daemon -> idStr		5245523	0					
ANR	5246887	PtrMemberAccess	requested_daemon -> idStr		5245523	0					
ANR	5246888	Identifier	requested_daemon		5245523	0					
ANR	5246889	Identifier	idStr		5245523	1					
ANR	5246890	ArgumentList			5245523	1					
ANR	5246891	IfStatement	if ( NULL == id )		5245523	1					
ANR	5246892	Condition	NULL == id	413:28:12147:12156	5245523	0	True				
ANR	5246893	EqualityExpression	NULL == id		5245523	0		==			
ANR	5246894	Identifier	NULL		5245523	0					
ANR	5246895	Identifier	id		5245523	1					
ANR	5246896	ExpressionStatement	id = requested_daemon -> name ( )	413:40:12159:12188	5245523	1	True				
ANR	5246897	AssignmentExpression	id = requested_daemon -> name ( )		5245523	0		=			
ANR	5246898	Identifier	id		5245523	0					
ANR	5246899	CallExpression	requested_daemon -> name ( )		5245523	1					
ANR	5246900	Callee	requested_daemon -> name		5245523	0					
ANR	5246901	PtrMemberAccess	requested_daemon -> name		5245523	0					
ANR	5246902	Identifier	requested_daemon		5245523	0					
ANR	5246903	Identifier	name		5245523	1					
ANR	5246904	ArgumentList			5245523	1					
ANR	5246905	IfStatement	if ( NULL == id )		5245523	2					
ANR	5246906	Condition	NULL == id	414:7:12197:12206	5245523	0	True				
ANR	5246907	EqualityExpression	NULL == id		5245523	0		==			
ANR	5246908	Identifier	NULL		5245523	0					
ANR	5246909	Identifier	id		5245523	1					
ANR	5246910	ExpressionStatement	"id = ""daemon"""	414:19:12209:12222	5245523	1	True				
ANR	5246911	AssignmentExpression	"id = ""daemon"""		5245523	0		=			
ANR	5246912	Identifier	id		5245523	0					
ANR	5246913	PrimaryExpression	"""daemon"""		5245523	1					
ANR	5246914	IdentifierDeclStatement	const char * daddr = requested_daemon -> addr ( ) ;	415:24:12248:12292	5245523	3	True				
ANR	5246915	IdentifierDecl	* daddr = requested_daemon -> addr ( )		5245523	0					
ANR	5246916	IdentifierDeclType	const char *		5245523	0					
ANR	5246917	Identifier	daddr		5245523	1					
ANR	5246918	AssignmentExpression	* daddr = requested_daemon -> addr ( )		5245523	2		=			
ANR	5246919	Identifier	daddr		5245523	0					
ANR	5246920	CallExpression	requested_daemon -> addr ( )		5245523	1					
ANR	5246921	Callee	requested_daemon -> addr		5245523	0					
ANR	5246922	PtrMemberAccess	requested_daemon -> addr		5245523	0					
ANR	5246923	Identifier	requested_daemon		5245523	0					
ANR	5246924	Identifier	addr		5245523	1					
ANR	5246925	ArgumentList			5245523	1					
ANR	5246926	IfStatement	if ( NULL == daddr )		5245523	4					
ANR	5246927	Condition	NULL == daddr	416:28:12322:12334	5245523	0	True				
ANR	5246928	EqualityExpression	NULL == daddr		5245523	0		==			
ANR	5246929	Identifier	NULL		5245523	0					
ANR	5246930	Identifier	daddr		5245523	1					
ANR	5246931	ExpressionStatement	"daddr = ""<unknown>"""	416:43:12337:12356	5245523	1	True				
ANR	5246932	AssignmentExpression	"daddr = ""<unknown>"""		5245523	0		=			
ANR	5246933	Identifier	daddr		5245523	0					
ANR	5246934	PrimaryExpression	"""<unknown>"""		5245523	1					
ANR	5246935	ExpressionStatement	"fprintf ( stderr , ""Error: Failed to contact %s at %s\\n"" , id , daddr )"	417:20:12378:12443	5245523	5	True				
ANR	5246936	CallExpression	"fprintf ( stderr , ""Error: Failed to contact %s at %s\\n"" , id , daddr )"		5245523	0					
ANR	5246937	Callee	fprintf		5245523	0					
ANR	5246938	Identifier	fprintf		5245523	0					
ANR	5246939	ArgumentList	stderr		5245523	1					
ANR	5246940	Argument	stderr		5245523	0					
ANR	5246941	Identifier	stderr		5245523	0					
ANR	5246942	Argument	"""Error: Failed to contact %s at %s\\n"""		5245523	1					
ANR	5246943	PrimaryExpression	"""Error: Failed to contact %s at %s\\n"""		5245523	0					
ANR	5246944	Argument	id		5245523	2					
ANR	5246945	Identifier	id		5245523	0					
ANR	5246946	Argument	daddr		5245523	3					
ANR	5246947	Identifier	daddr		5245523	0					
ANR	5246948	ExpressionStatement	exit ( 1 )	421:16:12490:12498	5245523	3	True				
ANR	5246949	CallExpression	exit ( 1 )		5245523	0					
ANR	5246950	Callee	exit		5245523	0					
ANR	5246951	Identifier	exit		5245523	0					
ANR	5246952	ArgumentList	1		5245523	1					
ANR	5246953	Argument	1		5245523	0					
ANR	5246954	PrimaryExpression	1		5245523	0					
ANR	5246955	IfStatement	if ( sortLessThanExprs . getlast ( ) > - 1 )		5245523	24					
ANR	5246956	Condition	sortLessThanExprs . getlast ( ) > - 1	426:5:12526:12557	5245523	0	True				
ANR	5246957	RelationalExpression	sortLessThanExprs . getlast ( ) > - 1		5245523	0		>			
ANR	5246958	CallExpression	sortLessThanExprs . getlast ( )		5245523	0					
ANR	5246959	Callee	sortLessThanExprs . getlast		5245523	0					
ANR	5246960	MemberAccess	sortLessThanExprs . getlast		5245523	0					
ANR	5246961	Identifier	sortLessThanExprs		5245523	0					
ANR	5246962	Identifier	getlast		5245523	1					
ANR	5246963	ArgumentList			5245523	1					
ANR	5246964	UnaryOperationExpression	- 1		5245523	1					
ANR	5246965	UnaryOperator	-		5245523	0					
ANR	5246966	PrimaryExpression	1		5245523	1					
ANR	5246967	CompoundStatement		344:40:9970:9970	5245523	1					
ANR	5246968	ExpressionStatement	result . Sort ( ( SortFunctionType ) customLessThanFunc )	427:2:12565:12616	5245523	0	True				
ANR	5246969	CallExpression	result . Sort ( ( SortFunctionType ) customLessThanFunc )		5245523	0					
ANR	5246970	Callee	result . Sort		5245523	0					
ANR	5246971	MemberAccess	result . Sort		5245523	0					
ANR	5246972	Identifier	result		5245523	0					
ANR	5246973	Identifier	Sort		5245523	1					
ANR	5246974	ArgumentList	( SortFunctionType ) customLessThanFunc		5245523	1					
ANR	5246975	Argument	( SortFunctionType ) customLessThanFunc		5245523	0					
ANR	5246976	CastExpression	( SortFunctionType ) customLessThanFunc		5245523	0					
ANR	5246977	CastTarget	SortFunctionType		5245523	0					
ANR	5246978	Identifier	customLessThanFunc		5245523	1					
ANR	5246979	ElseStatement	else		5245523	0					
ANR	5246980	CompoundStatement		346:8:10035:10035	5245523	0					
ANR	5246981	ExpressionStatement	result . Sort ( ( SortFunctionType ) lessThanFunc )	429:2:12630:12674	5245523	0	True				
ANR	5246982	CallExpression	result . Sort ( ( SortFunctionType ) lessThanFunc )		5245523	0					
ANR	5246983	Callee	result . Sort		5245523	0					
ANR	5246984	MemberAccess	result . Sort		5245523	0					
ANR	5246985	Identifier	result		5245523	0					
ANR	5246986	Identifier	Sort		5245523	1					
ANR	5246987	ArgumentList	( SortFunctionType ) lessThanFunc		5245523	1					
ANR	5246988	Argument	( SortFunctionType ) lessThanFunc		5245523	0					
ANR	5246989	CastExpression	( SortFunctionType ) lessThanFunc		5245523	0					
ANR	5246990	CastTarget	SortFunctionType		5245523	0					
ANR	5246991	Identifier	lessThanFunc		5245523	1					
ANR	5246992	ExpressionStatement	"prettyPrint ( result , & totals )"	434:1:12701:12730	5245523	25	True				
ANR	5246993	CallExpression	"prettyPrint ( result , & totals )"		5245523	0					
ANR	5246994	Callee	prettyPrint		5245523	0					
ANR	5246995	Identifier	prettyPrint		5245523	0					
ANR	5246996	ArgumentList	result		5245523	1					
ANR	5246997	Argument	result		5245523	0					
ANR	5246998	Identifier	result		5245523	0					
ANR	5246999	Argument	& totals		5245523	1					
ANR	5247000	UnaryOperationExpression	& totals		5245523	0					
ANR	5247001	UnaryOperator	&		5245523	0					
ANR	5247002	Identifier	totals		5245523	1					
ANR	5247003	CompoundStatement		357:2:10165:10203	5245523	26					
ANR	5247004	IdentifierDeclStatement	int last = sortLessThanExprs . getlast ( ) ;	439:2:12756:12794	5245523	0	True				
ANR	5247005	IdentifierDecl	last = sortLessThanExprs . getlast ( )		5245523	0					
ANR	5247006	IdentifierDeclType	int		5245523	0					
ANR	5247007	Identifier	last		5245523	1					
ANR	5247008	AssignmentExpression	last = sortLessThanExprs . getlast ( )		5245523	2		=			
ANR	5247009	Identifier	last		5245523	0					
ANR	5247010	CallExpression	sortLessThanExprs . getlast ( )		5245523	1					
ANR	5247011	Callee	sortLessThanExprs . getlast		5245523	0					
ANR	5247012	MemberAccess	sortLessThanExprs . getlast		5245523	0					
ANR	5247013	Identifier	sortLessThanExprs		5245523	0					
ANR	5247014	Identifier	getlast		5245523	1					
ANR	5247015	ArgumentList			5245523	1					
ANR	5247016	Statement	delete	440:2:12798:12803	5245523	1	True				
ANR	5247017	ExpressionStatement	query	440:9:12805:12810	5245523	2	True				
ANR	5247018	Identifier	query		5245523	0					
ANR	5247019	ForStatement	for ( int i = 0 ; i <= last ; i ++ )		5245523	3					
ANR	5247020	ForInit	int i = 0 ;	441:7:12819:12829	5245523	0	True				
ANR	5247021	IdentifierDeclStatement	int i = 0 ;		5245523	0					
ANR	5247022	IdentifierDecl	i = 0		5245523	0					
ANR	5247023	IdentifierDeclType	int		5245523	0					
ANR	5247024	Identifier	i		5245523	1					
ANR	5247025	AssignmentExpression	i = 0		5245523	2		=			
ANR	5247026	Identifier	i		5245523	0					
ANR	5247027	PrimaryExpression	0		5245523	1					
ANR	5247028	Condition	i <= last	441:19:12831:12839	5245523	1	True				
ANR	5247029	RelationalExpression	i <= last		5245523	0		<=			
ANR	5247030	Identifier	i		5245523	0					
ANR	5247031	Identifier	last		5245523	1					
ANR	5247032	PostIncDecOperationExpression	i ++	441:31:12843:12845	5245523	2	True				
ANR	5247033	Identifier	i		5245523	0					
ANR	5247034	IncDec	++		5245523	1					
ANR	5247035	CompoundStatement		359:37:10258:10258	5245523	3					
ANR	5247036	IfStatement	if ( sortLessThanExprs [ i ] )		5245523	0					
ANR	5247037	Condition	sortLessThanExprs [ i ]	442:7:12858:12877	5245523	0	True				
ANR	5247038	ArrayIndexing	sortLessThanExprs [ i ]		5245523	0					
ANR	5247039	Identifier	sortLessThanExprs		5245523	0					
ANR	5247040	Identifier	i		5245523	1					
ANR	5247041	Statement	delete	442:30:12881:12886	5245523	1	True				
ANR	5247042	ExpressionStatement	sortLessThanExprs [ i ]	442:37:12888:12908	5245523	1	True				
ANR	5247043	ArrayIndexing	sortLessThanExprs [ i ]		5245523	0					
ANR	5247044	Identifier	sortLessThanExprs		5245523	0					
ANR	5247045	Identifier	i		5245523	1					
ANR	5247046	IfStatement	if ( sortEqualExprs [ i ] )		5245523	2					
ANR	5247047	Condition	sortEqualExprs [ i ]	443:7:12917:12933	5245523	0	True				
ANR	5247048	ArrayIndexing	sortEqualExprs [ i ]		5245523	0					
ANR	5247049	Identifier	sortEqualExprs		5245523	0					
ANR	5247050	Identifier	i		5245523	1					
ANR	5247051	Statement	delete	443:27:12937:12942	5245523	1	True				
ANR	5247052	ExpressionStatement	sortEqualExprs [ i ]	443:34:12944:12961	5245523	3	True				
ANR	5247053	ArrayIndexing	sortEqualExprs [ i ]		5245523	0					
ANR	5247054	Identifier	sortEqualExprs		5245523	0					
ANR	5247055	Identifier	i		5245523	1					
ANR	5247056	ReturnStatement	return 0 ;	447:1:12972:12980	5245523	27	True				
ANR	5247057	PrimaryExpression	0		5245523	0					
ANR	5247058	ReturnType	int		5245523	1					
ANR	5247059	Identifier	main		5245523	2					
ANR	5247060	ParameterList	"int argc , char * argv [ ]"		5245523	3					
ANR	5247061	Parameter	int argc	82:6:2566:2573	5245523	0	True				
ANR	5247062	ParameterType	int		5245523	0					
ANR	5247063	Identifier	argc		5245523	1					
ANR	5247064	Parameter	char * argv [ ]	82:16:2576:2587	5245523	1	True				
ANR	5247065	ParameterType	char * [ ]		5245523	0					
ANR	5247066	Identifier	argv		5245523	1					
ANR	5247067	CFGEntryNode	ENTRY		5245523		True				
ANR	5247068	CFGExitNode	EXIT		5245523		True				
ANR	5247069	Symbol	expert		5245523						
ANR	5247070	Symbol	d -> idStr		5245523						
ANR	5247071	Symbol	PP_STORAGE_NORMAL		5245523						
ANR	5247072	Symbol	queryAd		5245523						
ANR	5247073	Symbol	query -> fetchAds		5245523						
ANR	5247074	Symbol	ATTR_JAVA_VENDOR		5245523						
ANR	5247075	Symbol	customLessThanFunc		5245523						
ANR	5247076	Symbol	type		5245523						
ANR	5247077	Symbol	pool -> addr		5245523						
ANR	5247078	Symbol	attr_list		5245523						
ANR	5247079	Symbol	ATTR_VM_GUEST_IP		5245523						
ANR	5247080	Symbol	& errstack		5245523						
ANR	5247081	Symbol	ATTR_HAS_JAVA		5245523						
ANR	5247082	Symbol	id		5245523						
ANR	5247083	Symbol	requested_daemon -> fullHostname		5245523						
ANR	5247084	Symbol	requested_daemon -> addr		5245523						
ANR	5247085	Symbol	ATTR_VM_MEMORY		5245523						
ANR	5247086	Symbol	ATTR_VM_ALL_GUEST_MACS		5245523						
ANR	5247087	Symbol	pool		5245523						
ANR	5247088	Symbol	SIG_IGN		5245523						
ANR	5247089	Symbol	collectors -> query		5245523						
ANR	5247090	Symbol	sortEqualExprs		5245523						
ANR	5247091	Symbol	ppStyle		5245523						
ANR	5247092	Symbol	DT_STARTD		5245523						
ANR	5247093	Symbol	ATTR_STATE		5245523						
ANR	5247094	Symbol	errstack		5245523						
ANR	5247095	Symbol	PP_NEGOTIATOR_NORMAL		5245523						
ANR	5247096	Symbol	PP_CKPT_SRVR_NORMAL		5245523						
ANR	5247097	Symbol	ATTR_VM_AVAIL_NUM		5245523						
ANR	5247098	Symbol	DT_NEGOTIATOR		5245523						
ANR	5247099	Symbol	genericType		5245523						
ANR	5247100	Symbol	sortLessThanExprs		5245523						
ANR	5247101	Symbol	* sortEqualExprs		5245523						
ANR	5247102	Symbol	PP_GRID_NORMAL		5245523						
ANR	5247103	Symbol	ATTR_JAVA_MFLOPS		5245523						
ANR	5247104	Symbol	ATTR_JAVA_VERSION		5245523						
ANR	5247105	Symbol	PP_SCHEDD_NORMAL		5245523						
ANR	5247106	Symbol	direct		5245523						
ANR	5247107	Symbol	Q_NO_COLLECTOR_HOST		5245523						
ANR	5247108	Symbol	result		5245523						
ANR	5247109	Symbol	DT_MASTER		5245523						
ANR	5247110	Symbol	d -> addr		5245523						
ANR	5247111	Symbol	ATTR_VM_NETWORKING		5245523						
ANR	5247112	Symbol	getStrQueryResult		5245523						
ANR	5247113	Symbol	DT_QUILL		5245523						
ANR	5247114	Symbol	d		5245523						
ANR	5247115	Symbol	i		5245523						
ANR	5247116	Symbol	ATTR_HAS_VM		5245523						
ANR	5247117	Symbol	q		5245523						
ANR	5247118	Symbol	diagnose		5245523						
ANR	5247119	Symbol	errstack . getFullText		5245523						
ANR	5247120	Symbol	vmMode		5245523						
ANR	5247121	Symbol	PP_ANY_NORMAL		5245523						
ANR	5247122	Symbol	* sortLessThanExprs		5245523						
ANR	5247123	Symbol	Q_COMMUNICATION_ERROR		5245523						
ANR	5247124	Symbol	ATTR_VM_ALL_GUEST_IPS		5245523						
ANR	5247125	Symbol	requested_daemon		5245523						
ANR	5247126	Symbol	stdout		5245523						
ANR	5247127	Symbol	projList . Count		5245523						
ANR	5247128	Symbol	* requested_daemon		5245523						
ANR	5247129	Symbol	* argv		5245523						
ANR	5247130	Symbol	query -> getQueryAd		5245523						
ANR	5247131	Symbol	mode		5245523						
ANR	5247132	Symbol	& totals		5245523						
ANR	5247133	Symbol	PP_GENERIC		5245523						
ANR	5247134	Symbol	ATTR_VM_NETWORKING_TYPES		5245523						
ANR	5247135	Symbol	d -> locate		5245523						
ANR	5247136	Symbol	requested_daemon -> name		5245523						
ANR	5247137	Symbol	myDistro		5245523						
ANR	5247138	Symbol	MODE_NOTSET		5245523						
ANR	5247139	Symbol	myName		5245523						
ANR	5247140	Symbol	PP_STARTD_NORMAL		5245523						
ANR	5247141	Symbol	SIGPIPE		5245523						
ANR	5247142	Symbol	buffer		5245523						
ANR	5247143	Symbol	ATTR_NUM_COD_CLAIMS		5245523						
ANR	5247144	Symbol	* query		5245523						
ANR	5247145	Symbol	requested_daemon -> idStr		5245523						
ANR	5247146	Symbol	CollectorList :: create		5245523						
ANR	5247147	Symbol	info		5245523						
ANR	5247148	Symbol	ATTR_VM_HARDWARE_VT		5245523						
ANR	5247149	Symbol	NULL		5245523						
ANR	5247150	Symbol	last		5245523						
ANR	5247151	Symbol	query		5245523						
ANR	5247152	Symbol	PP_QUILL_NORMAL		5245523						
ANR	5247153	Symbol	DT_COLLECTOR		5245523						
ANR	5247154	Symbol	stderr		5245523						
ANR	5247155	Symbol	Q_OK		5245523						
ANR	5247156	Symbol	ATTR_VM_TYPE		5245523						
ANR	5247157	Symbol	sortLessThanExprs . getlast		5245523						
ANR	5247158	Symbol	collectors		5245523						
ANR	5247159	Symbol	ATTR_VM_GUEST_MAC		5245523						
ANR	5247160	Symbol	javaMode		5245523						
ANR	5247161	Symbol	PP_MASTER_NORMAL		5245523						
ANR	5247162	Symbol	lessThanFunc		5245523						
ANR	5247163	Symbol	true		5245523						
ANR	5247164	Symbol	projList . GetStringArray		5245523						
ANR	5247165	Symbol	unclaimed_state		5245523						
ANR	5247166	Symbol	PP_VERBOSE		5245523						
ANR	5247167	Symbol	state_to_string		5245523						
ANR	5247168	Symbol	d -> name		5245523						
ANR	5247169	Symbol	PP_COLLECTOR_NORMAL		5245523						
ANR	5247170	Symbol	argv		5245523						
ANR	5247171	Symbol	* collectors		5245523						
ANR	5247172	Symbol	MODE_STARTD_NORMAL		5245523						
ANR	5247173	Symbol	claimed_state		5245523						
ANR	5247174	Symbol	addr		5245523						
ANR	5247175	Symbol	argc		5245523						
ANR	5247176	Symbol	d -> error		5245523						
ANR	5247177	Symbol	requested_daemon -> type		5245523						
ANR	5247178	Symbol	DT_SCHEDD		5245523						
ANR	5247179	Symbol	fullhost		5245523						
ANR	5247180	Symbol	totals		5245523						
ANR	5247181	Symbol	* d		5245523						
ANR	5247182	Symbol	* pool		5245523						
ANR	5247183	Symbol	* i		5245523						
ANR	5247184	Symbol	projList		5245523						
ANR	5247185	Symbol	daddr		5245523						
ANR	5247186	Symbol	DEFAULT		5245523						
ANR	5247187	Function	usage	451:0:12986:15567							
ANR	5247188	FunctionDef	usage ()		5247187	0					
ANR	5247189	CompoundStatement		453:0:13000:15567	5247187	0					
ANR	5247190	Statement	fprintf	454:1:13003:13009	5247187	0	True				
ANR	5247191	Statement	(	454:9:13011:13011	5247187	1	True				
ANR	5247192	Statement	stderr	454:10:13012:13017	5247187	2	True				
ANR	5247193	Statement	","	454:16:13018:13018	5247187	3	True				
ANR	5247194	Statement	"""Usage: %s [help-opt] [query-opt] [display-opt] """	454:17:13019:13067	5247187	4	True				
ANR	5247195	Statement	"""[custom-opts ...] [name ...]\\n"""	455:2:13071:13102	5247187	5	True				
ANR	5247196	Statement	"""    where [help-opt] is one of\\n"""	456:2:13106:13139	5247187	6	True				
ANR	5247197	Statement	"""\\t-help\\t\\t\\tThis screen\\n"""	457:2:13143:13170	5247187	7	True				
ANR	5247198	Statement	"""\\t-diagnose\\t\\tPrint out query ad without performing query\\n"""	458:2:13174:13235	5247187	8	True				
ANR	5247199	Statement	"""    and [query-opt] is one of\\n"""	459:2:13239:13271	5247187	9	True				
ANR	5247200	Statement	"""\\t-avail\\t\\t\\tPrint information about available resources\\n"""	460:2:13275:13335	5247187	10	True				
ANR	5247201	Statement	"""\\t-ckptsrvr\\t\\tDisplay checkpoint server attributes\\n"""	461:2:13339:13393	5247187	11	True				
ANR	5247202	Statement	"""\\t-claimed\\t\\tPrint information about claimed resources\\n"""	462:2:13397:13455	5247187	12	True				
ANR	5247203	Statement	"""\\t-cod\\t\\t\\tDisplay Computing On Demand (COD) jobs\\n"""	463:2:13459:13512	5247187	13	True				
ANR	5247204	Statement	"""\\t-collector\\t\\tDisplay collector daemon attributes\\n"""	464:2:13516:13570	5247187	14	True				
ANR	5247205	Statement	"""\\t-debug\\t\\t\\tDisplay debugging info to console\\n"""	465:2:13574:13624	5247187	15	True				
ANR	5247206	Statement	"""\\t-direct <host>\\t\\tGet attributes directly from the given daemon\\n"""	466:2:13628:13696	5247187	16	True				
ANR	5247207	Statement	"""\\t-java\\t\\t\\tDisplay Java-capable hosts\\n"""	467:2:13700:13742	5247187	17	True				
ANR	5247208	Statement	"""\\t-vm\\t\\t\\tDisplay VM-capable hosts\\n"""	468:2:13746:13784	5247187	18	True				
ANR	5247209	Statement	"""\\t-license\\t\\tDisplay attributes of licenses\\n"""	469:2:13788:13835	5247187	19	True				
ANR	5247210	Statement	"""\\t-master\\t\\t\\tDisplay daemon master attributes\\n"""	470:2:13839:13889	5247187	20	True				
ANR	5247211	Statement	"""\\t-pool <name>\\t\\tGet information from collector <name>\\n"""	471:2:13893:13951	5247187	21	True				
ANR	5247212	Statement	"""\\t-grid\\t\\t\\tDisplay grid resources\\n"""	472:8:13961:13999	5247187	22	True				
ANR	5247213	Statement	"""\\t-run\\t\\t\\tSame as -claimed [deprecated]\\n"""	473:2:14003:14047	5247187	23	True				
ANR	5247214	Statement	"""\\t-quill\\t\\t\\tDisplay attributes of quills\\n"""	475:2:14078:14123	5247187	24	True				
ANR	5247215	Statement	"""\\t-schedd\\t\\t\\tDisplay attributes of schedds\\n"""	477:2:14160:14207	5247187	25	True				
ANR	5247216	Statement	"""\\t-server\\t\\t\\tDisplay important attributes of resources\\n"""	478:2:14211:14270	5247187	26	True				
ANR	5247217	Statement	"""\\t-startd\\t\\t\\tDisplay resource attributes\\n"""	479:2:14274:14319	5247187	27	True				
ANR	5247218	Statement	"""\\t-generic\\t\\tDisplay attributes of 'generic' ads\\n"""	480:2:14323:14375	5247187	28	True				
ANR	5247219	Statement	"""\\t-subsystem <type>\\tDisplay classads of the given type\\n"""	481:2:14379:14437	5247187	29	True				
ANR	5247220	Statement	"""\\t-negotiator\\t\\tDisplay negotiator attributes\\n"""	482:2:14441:14490	5247187	30	True				
ANR	5247221	Statement	"""\\t-storage\\t\\tDisplay network storage resources\\n"""	483:2:14494:14544	5247187	31	True				
ANR	5247222	Statement	"""\\t-any\\t\\t\\tDisplay any resources\\n"""	484:2:14548:14584	5247187	32	True				
ANR	5247223	Statement	"""\\t-state\\t\\t\\tDisplay state of resources\\n"""	485:2:14588:14631	5247187	33	True				
ANR	5247224	Statement	"""\\t-submitters\\t\\tDisplay information about request submitters\\n"""	486:2:14635:14699	5247187	34	True				
ANR	5247225	Statement	"""    and [display-opt] is one of\\n"""	490:2:14927:14961	5247187	35	True				
ANR	5247226	Statement	"""\\t-long\\t\\t\\tDisplay entire classads\\n"""	491:2:14965:15004	5247187	36	True				
ANR	5247227	Statement	"""\\t-sort <attr>\\t\\tSort entries by named attribute\\n"""	492:2:15008:15060	5247187	37	True				
ANR	5247228	Statement	"""\\t-total\\t\\t\\tDisplay totals only\\n"""	493:2:15064:15100	5247187	38	True				
ANR	5247229	Statement	"""\\t-verbose\\t\\tSame as -long\\n"""	494:2:15104:15134	5247187	39	True				
ANR	5247230	Statement	"""\\t-xml\\t\\t\\tDisplay entire classads, but in XML\\n"""	495:2:15138:15188	5247187	40	True				
ANR	5247231	Statement	"""\\t-attributes X,Y,...\\tAttributes to show in -xml or -long \\n"""	496:2:15192:15254	5247187	41	True				
ANR	5247232	Statement	"""\\t-expert\\t\\t\\tDisplay shorter error messages\\n"""	497:2:15258:15306	5247187	42	True				
ANR	5247233	Statement	"""    and [custom-opts ...] are one or more of\\n"""	498:2:15310:15357	5247187	43	True				
ANR	5247234	Statement	"""\\t-constraint <const>\\tAdd constraint on classads\\n"""	499:2:15361:15413	5247187	44	True				
ANR	5247235	Statement	"""\\t-format <fmt> <attr>\\tRegister display format and attribute\\n"""	500:2:15417:15481	5247187	45	True				
ANR	5247236	Statement	"""\\t-target filename\\tIf -format is used, the option target classad\\n"""	501:2:15485:15553	5247187	46	True				
ANR	5247237	Statement	","	501:71:15554:15554	5247187	47	True				
ANR	5247238	Statement	myName	502:2:15558:15563	5247187	48	True				
ANR	5247239	Statement	)	502:8:15564:15564	5247187	49	True				
ANR	5247240	ExpressionStatement		502:9:15565:15565	5247187	50	True				
ANR	5247241	ReturnType	void		5247187	1					
ANR	5247242	Identifier	usage		5247187	2					
ANR	5247243	ParameterList			5247187	3					
ANR	5247244	CFGEntryNode	ENTRY		5247187		True				
ANR	5247245	CFGExitNode	EXIT		5247187		True				
ANR	5247246	Function	firstPass	505:0:15570:24840							
ANR	5247247	FunctionDef	"firstPass (int argc , char * argv [ ])"		5247246	0					
ANR	5247248	CompoundStatement		507:0:15610:24840	5247246	0					
ANR	5247249	IdentifierDeclStatement	param_functions * p_funcs ;	508:1:15613:15637	5247246	0	True				
ANR	5247250	IdentifierDecl	* p_funcs		5247246	0					
ANR	5247251	IdentifierDeclType	param_functions *		5247246	0					
ANR	5247252	Identifier	p_funcs		5247246	1					
ANR	5247253	IdentifierDeclStatement	int had_pool_error = 0 ;	509:1:15640:15662	5247246	1	True				
ANR	5247254	IdentifierDecl	had_pool_error = 0		5247246	0					
ANR	5247255	IdentifierDeclType	int		5247246	0					
ANR	5247256	Identifier	had_pool_error		5247246	1					
ANR	5247257	AssignmentExpression	had_pool_error = 0		5247246	2		=			
ANR	5247258	Identifier	had_pool_error		5247246	0					
ANR	5247259	PrimaryExpression	0		5247246	1					
ANR	5247260	IdentifierDeclStatement	int had_direct_error = 0 ;	510:1:15665:15689	5247246	2	True				
ANR	5247261	IdentifierDecl	had_direct_error = 0		5247246	0					
ANR	5247262	IdentifierDeclType	int		5247246	0					
ANR	5247263	Identifier	had_direct_error		5247246	1					
ANR	5247264	AssignmentExpression	had_direct_error = 0		5247246	2		=			
ANR	5247265	Identifier	had_direct_error		5247246	0					
ANR	5247266	PrimaryExpression	0		5247246	1					
ANR	5247267	IdentifierDeclStatement	int had_statistics_error = 0 ;	511:4:15695:15723	5247246	3	True				
ANR	5247268	IdentifierDecl	had_statistics_error = 0		5247246	0					
ANR	5247269	IdentifierDeclType	int		5247246	0					
ANR	5247270	Identifier	had_statistics_error		5247246	1					
ANR	5247271	AssignmentExpression	had_statistics_error = 0		5247246	2		=			
ANR	5247272	Identifier	had_statistics_error		5247246	0					
ANR	5247273	PrimaryExpression	0		5247246	1					
ANR	5247274	ForStatement	for ( int i = 1 ; i < argc ; i ++ )		5247246	4					
ANR	5247275	ForInit	int i = 1 ;	518:6:16058:16067	5247246	0	True				
ANR	5247276	IdentifierDeclStatement	int i = 1 ;		5247246	0					
ANR	5247277	IdentifierDecl	i = 1		5247246	0					
ANR	5247278	IdentifierDeclType	int		5247246	0					
ANR	5247279	Identifier	i		5247246	1					
ANR	5247280	AssignmentExpression	i = 1		5247246	2		=			
ANR	5247281	Identifier	i		5247246	0					
ANR	5247282	PrimaryExpression	1		5247246	1					
ANR	5247283	Condition	i < argc	518:17:16069:16076	5247246	1	True				
ANR	5247284	RelationalExpression	i < argc		5247246	0		<			
ANR	5247285	Identifier	i		5247246	0					
ANR	5247286	Identifier	argc		5247246	1					
ANR	5247287	PostIncDecOperationExpression	i ++	518:27:16079:16081	5247246	2	True				
ANR	5247288	Identifier	i		5247246	0					
ANR	5247289	IncDec	++		5247246	1					
ANR	5247290	CompoundStatement		12:32:473:473	5247246	3					
ANR	5247291	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-avail"" , 3 ) )"		5247246	0					
ANR	5247292	Condition	"matchPrefix ( argv [ i ] , ""-avail"" , 3 )"	519:6:16092:16125	5247246	0	True				
ANR	5247293	CallExpression	"matchPrefix ( argv [ i ] , ""-avail"" , 3 )"		5247246	0					
ANR	5247294	Callee	matchPrefix		5247246	0					
ANR	5247295	Identifier	matchPrefix		5247246	0					
ANR	5247296	ArgumentList	argv [ i ]		5247246	1					
ANR	5247297	Argument	argv [ i ]		5247246	0					
ANR	5247298	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5247299	Identifier	argv		5247246	0					
ANR	5247300	Identifier	i		5247246	1					
ANR	5247301	Argument	"""-avail"""		5247246	1					
ANR	5247302	PrimaryExpression	"""-avail"""		5247246	0					
ANR	5247303	Argument	3		5247246	2					
ANR	5247304	PrimaryExpression	3		5247246	0					
ANR	5247305	CompoundStatement		13:42:517:517	5247246	1					
ANR	5247306	ExpressionStatement	"setMode ( MODE_STARTD_AVAIL , i , argv [ i ] )"	520:3:16133:16172	5247246	0	True				
ANR	5247307	CallExpression	"setMode ( MODE_STARTD_AVAIL , i , argv [ i ] )"		5247246	0					
ANR	5247308	Callee	setMode		5247246	0					
ANR	5247309	Identifier	setMode		5247246	0					
ANR	5247310	ArgumentList	MODE_STARTD_AVAIL		5247246	1					
ANR	5247311	Argument	MODE_STARTD_AVAIL		5247246	0					
ANR	5247312	Identifier	MODE_STARTD_AVAIL		5247246	0					
ANR	5247313	Argument	i		5247246	1					
ANR	5247314	Identifier	i		5247246	0					
ANR	5247315	Argument	argv [ i ]		5247246	2					
ANR	5247316	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5247317	Identifier	argv		5247246	0					
ANR	5247318	Identifier	i		5247246	1					
ANR	5247319	ElseStatement	else		5247246	0					
ANR	5247320	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-pool"" , 2 ) )"		5247246	0					
ANR	5247321	Condition	"matchPrefix ( argv [ i ] , ""-pool"" , 2 )"	522:6:16189:16221	5247246	0	True				
ANR	5247322	CallExpression	"matchPrefix ( argv [ i ] , ""-pool"" , 2 )"		5247246	0					
ANR	5247323	Callee	matchPrefix		5247246	0					
ANR	5247324	Identifier	matchPrefix		5247246	0					
ANR	5247325	ArgumentList	argv [ i ]		5247246	1					
ANR	5247326	Argument	argv [ i ]		5247246	0					
ANR	5247327	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5247328	Identifier	argv		5247246	0					
ANR	5247329	Identifier	i		5247246	1					
ANR	5247330	Argument	"""-pool"""		5247246	1					
ANR	5247331	PrimaryExpression	"""-pool"""		5247246	0					
ANR	5247332	Argument	2		5247246	2					
ANR	5247333	PrimaryExpression	2		5247246	0					
ANR	5247334	CompoundStatement		16:41:613:613	5247246	1					
ANR	5247335	IfStatement	if ( pool )		5247246	0					
ANR	5247336	Condition	pool	523:7:16233:16236	5247246	0	True				
ANR	5247337	Identifier	pool		5247246	0					
ANR	5247338	CompoundStatement		17:14:629:629	5247246	1					
ANR	5247339	Statement	delete	524:4:16246:16251	5247246	0	True				
ANR	5247340	ExpressionStatement	pool	524:11:16253:16257	5247246	1	True				
ANR	5247341	Identifier	pool		5247246	0					
ANR	5247342	ExpressionStatement	had_pool_error = 1	525:4:16263:16281	5247246	2	True				
ANR	5247343	AssignmentExpression	had_pool_error = 1		5247246	0		=			
ANR	5247344	Identifier	had_pool_error		5247246	0					
ANR	5247345	PrimaryExpression	1		5247246	1					
ANR	5247346	ExpressionStatement	i ++	527:3:16291:16294	5247246	1	True				
ANR	5247347	PostIncDecOperationExpression	i ++		5247246	0					
ANR	5247348	Identifier	i		5247246	0					
ANR	5247349	IncDec	++		5247246	1					
ANR	5247350	IfStatement	if ( ! argv [ i ] )		5247246	2					
ANR	5247351	Condition	! argv [ i ]	528:7:16303:16311	5247246	0	True				
ANR	5247352	UnaryOperationExpression	! argv [ i ]		5247246	0					
ANR	5247353	UnaryOperator	!		5247246	0					
ANR	5247354	ArrayIndexing	argv [ i ]		5247246	1					
ANR	5247355	Identifier	argv		5247246	0					
ANR	5247356	Identifier	i		5247246	1					
ANR	5247357	CompoundStatement		22:19:704:704	5247246	1					
ANR	5247358	ExpressionStatement	"fprintf ( stderr , ""%s: -pool requires a hostname as an argument.\\n"" , myName )"	529:4:16321:16404	5247246	0	True				
ANR	5247359	CallExpression	"fprintf ( stderr , ""%s: -pool requires a hostname as an argument.\\n"" , myName )"		5247246	0					
ANR	5247360	Callee	fprintf		5247246	0					
ANR	5247361	Identifier	fprintf		5247246	0					
ANR	5247362	ArgumentList	stderr		5247246	1					
ANR	5247363	Argument	stderr		5247246	0					
ANR	5247364	Identifier	stderr		5247246	0					
ANR	5247365	Argument	"""%s: -pool requires a hostname as an argument.\\n"""		5247246	1					
ANR	5247366	PrimaryExpression	"""%s: -pool requires a hostname as an argument.\\n"""		5247246	0					
ANR	5247367	Argument	myName		5247246	2					
ANR	5247368	Identifier	myName		5247246	0					
ANR	5247369	IfStatement	if ( ! expert )		5247246	1					
ANR	5247370	Condition	! expert	531:8:16414:16420	5247246	0	True				
ANR	5247371	UnaryOperationExpression	! expert		5247246	0					
ANR	5247372	UnaryOperator	!		5247246	0					
ANR	5247373	Identifier	expert		5247246	1					
ANR	5247374	CompoundStatement		25:17:812:812	5247246	1					
ANR	5247375	ExpressionStatement	"printf ( ""\\n"" )"	532:5:16430:16442	5247246	0	True				
ANR	5247376	CallExpression	"printf ( ""\\n"" )"		5247246	0					
ANR	5247377	Callee	printf		5247246	0					
ANR	5247378	Identifier	printf		5247246	0					
ANR	5247379	ArgumentList	"""\\n"""		5247246	1					
ANR	5247380	Argument	"""\\n"""		5247246	0					
ANR	5247381	PrimaryExpression	"""\\n"""		5247246	0					
ANR	5247382	Statement	print_wrapped_text	533:5:16449:16466	5247246	1	True				
ANR	5247383	Statement	(	533:23:16467:16467	5247246	2	True				
ANR	5247384	Statement	"""Extra Info: The hostname should be the central """	533:24:16468:16516	5247246	3	True				
ANR	5247385	Statement	"""manager of the Condor pool you wish to work with."""	534:12:16530:16580	5247246	4	True				
ANR	5247386	Statement	","	534:63:16581:16581	5247246	5	True				
ANR	5247387	Statement	stderr	535:12:16595:16600	5247246	6	True				
ANR	5247388	Statement	)	535:18:16601:16601	5247246	7	True				
ANR	5247389	ExpressionStatement		535:19:16602:16602	5247246	8	True				
ANR	5247390	ExpressionStatement	"printf ( ""\\n"" )"	536:5:16609:16621	5247246	9	True				
ANR	5247391	CallExpression	"printf ( ""\\n"" )"		5247246	0					
ANR	5247392	Callee	printf		5247246	0					
ANR	5247393	Identifier	printf		5247246	0					
ANR	5247394	ArgumentList	"""\\n"""		5247246	1					
ANR	5247395	Argument	"""\\n"""		5247246	0					
ANR	5247396	PrimaryExpression	"""\\n"""		5247246	0					
ANR	5247397	ExpressionStatement	"fprintf ( stderr , ""Use \\""%s -help\\"" for details\\n"" , myName )"	538:4:16633:16692	5247246	2	True				
ANR	5247398	CallExpression	"fprintf ( stderr , ""Use \\""%s -help\\"" for details\\n"" , myName )"		5247246	0					
ANR	5247399	Callee	fprintf		5247246	0					
ANR	5247400	Identifier	fprintf		5247246	0					
ANR	5247401	ArgumentList	stderr		5247246	1					
ANR	5247402	Argument	stderr		5247246	0					
ANR	5247403	Identifier	stderr		5247246	0					
ANR	5247404	Argument	"""Use \\""%s -help\\"" for details\\n"""		5247246	1					
ANR	5247405	PrimaryExpression	"""Use \\""%s -help\\"" for details\\n"""		5247246	0					
ANR	5247406	Argument	myName		5247246	2					
ANR	5247407	Identifier	myName		5247246	0					
ANR	5247408	ExpressionStatement	exit ( 1 )	539:4:16698:16707	5247246	3	True				
ANR	5247409	CallExpression	exit ( 1 )		5247246	0					
ANR	5247410	Callee	exit		5247246	0					
ANR	5247411	Identifier	exit		5247246	0					
ANR	5247412	ArgumentList	1		5247246	1					
ANR	5247413	Argument	1		5247246	0					
ANR	5247414	PrimaryExpression	1		5247246	0					
ANR	5247415	ExpressionStatement	pool = new DCCollector ( argv [ i ] )	541:3:16717:16750	5247246	3	True				
ANR	5247416	AssignmentExpression	pool = new DCCollector ( argv [ i ] )		5247246	0		=			
ANR	5247417	Identifier	pool		5247246	0					
ANR	5247418	ArrayIndexing	argv [ i ]		5247246	1					
ANR	5247419	Identifier	argv		5247246	0					
ANR	5247420	Identifier	i		5247246	1					
ANR	5247421	IfStatement	if ( ! pool -> addr ( ) )		5247246	4					
ANR	5247422	Condition	! pool -> addr ( )	542:7:16759:16771	5247246	0	True				
ANR	5247423	UnaryOperationExpression	! pool -> addr ( )		5247246	0					
ANR	5247424	UnaryOperator	!		5247246	0					
ANR	5247425	CallExpression	pool -> addr ( )		5247246	1					
ANR	5247426	Callee	pool -> addr		5247246	0					
ANR	5247427	PtrMemberAccess	pool -> addr		5247246	0					
ANR	5247428	Identifier	pool		5247246	0					
ANR	5247429	Identifier	addr		5247246	1					
ANR	5247430	ArgumentList			5247246	1					
ANR	5247431	CompoundStatement		36:23:1164:1164	5247246	1					
ANR	5247432	ExpressionStatement	"fprintf ( stderr , ""Error: %s\\n"" , pool -> error ( ) )"	543:4:16781:16828	5247246	0	True				
ANR	5247433	CallExpression	"fprintf ( stderr , ""Error: %s\\n"" , pool -> error ( ) )"		5247246	0					
ANR	5247434	Callee	fprintf		5247246	0					
ANR	5247435	Identifier	fprintf		5247246	0					
ANR	5247436	ArgumentList	stderr		5247246	1					
ANR	5247437	Argument	stderr		5247246	0					
ANR	5247438	Identifier	stderr		5247246	0					
ANR	5247439	Argument	"""Error: %s\\n"""		5247246	1					
ANR	5247440	PrimaryExpression	"""Error: %s\\n"""		5247246	0					
ANR	5247441	Argument	pool -> error ( )		5247246	2					
ANR	5247442	CallExpression	pool -> error ( )		5247246	0					
ANR	5247443	Callee	pool -> error		5247246	0					
ANR	5247444	PtrMemberAccess	pool -> error		5247246	0					
ANR	5247445	Identifier	pool		5247246	0					
ANR	5247446	Identifier	error		5247246	1					
ANR	5247447	ArgumentList			5247246	1					
ANR	5247448	IfStatement	if ( ! expert )		5247246	1					
ANR	5247449	Condition	! expert	544:8:16838:16844	5247246	0	True				
ANR	5247450	UnaryOperationExpression	! expert		5247246	0					
ANR	5247451	UnaryOperator	!		5247246	0					
ANR	5247452	Identifier	expert		5247246	1					
ANR	5247453	CompoundStatement		38:17:1236:1236	5247246	1					
ANR	5247454	ExpressionStatement	"printf ( ""\\n"" )"	545:5:16854:16866	5247246	0	True				
ANR	5247455	CallExpression	"printf ( ""\\n"" )"		5247246	0					
ANR	5247456	Callee	printf		5247246	0					
ANR	5247457	Identifier	printf		5247246	0					
ANR	5247458	ArgumentList	"""\\n"""		5247246	1					
ANR	5247459	Argument	"""\\n"""		5247246	0					
ANR	5247460	PrimaryExpression	"""\\n"""		5247246	0					
ANR	5247461	Statement	print_wrapped_text	546:5:16873:16890	5247246	1	True				
ANR	5247462	Statement	(	546:23:16891:16891	5247246	2	True				
ANR	5247463	Statement	"""Extra Info: You specified a hostname for a pool """	546:24:16892:16941	5247246	3	True				
ANR	5247464	Statement	"""(the -pool argument). That should be the Internet """	547:12:16955:17006	5247246	4	True				
ANR	5247465	Statement	"""host name for the central manager of the pool, """	548:12:17020:17068	5247246	5	True				
ANR	5247466	Statement	"""but it does not seem to """	549:12:17082:17107	5247246	6	True				
ANR	5247467	Statement	"""be a valid hostname. (The DNS lookup failed.)"""	550:12:17121:17167	5247246	7	True				
ANR	5247468	Statement	","	550:59:17168:17168	5247246	8	True				
ANR	5247469	Statement	stderr	551:12:17182:17187	5247246	9	True				
ANR	5247470	Statement	)	551:18:17188:17188	5247246	10	True				
ANR	5247471	ExpressionStatement		551:19:17189:17189	5247246	11	True				
ANR	5247472	ExpressionStatement	exit ( 1 )	553:4:17201:17210	5247246	2	True				
ANR	5247473	CallExpression	exit ( 1 )		5247246	0					
ANR	5247474	Callee	exit		5247246	0					
ANR	5247475	Identifier	exit		5247246	0					
ANR	5247476	ArgumentList	1		5247246	1					
ANR	5247477	Argument	1		5247246	0					
ANR	5247478	PrimaryExpression	1		5247246	0					
ANR	5247479	ElseStatement	else		5247246	0					
ANR	5247480	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-format"" , 2 ) )"		5247246	0					
ANR	5247481	Condition	"matchPrefix ( argv [ i ] , ""-format"" , 2 )"	556:6:17232:17266	5247246	0	True				
ANR	5247482	CallExpression	"matchPrefix ( argv [ i ] , ""-format"" , 2 )"		5247246	0					
ANR	5247483	Callee	matchPrefix		5247246	0					
ANR	5247484	Identifier	matchPrefix		5247246	0					
ANR	5247485	ArgumentList	argv [ i ]		5247246	1					
ANR	5247486	Argument	argv [ i ]		5247246	0					
ANR	5247487	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5247488	Identifier	argv		5247246	0					
ANR	5247489	Identifier	i		5247246	1					
ANR	5247490	Argument	"""-format"""		5247246	1					
ANR	5247491	PrimaryExpression	"""-format"""		5247246	0					
ANR	5247492	Argument	2		5247246	2					
ANR	5247493	PrimaryExpression	2		5247246	0					
ANR	5247494	CompoundStatement		50:43:1658:1658	5247246	1					
ANR	5247495	ExpressionStatement	"setPPstyle ( PP_CUSTOM , i , argv [ i ] )"	557:3:17274:17308	5247246	0	True				
ANR	5247496	CallExpression	"setPPstyle ( PP_CUSTOM , i , argv [ i ] )"		5247246	0					
ANR	5247497	Callee	setPPstyle		5247246	0					
ANR	5247498	Identifier	setPPstyle		5247246	0					
ANR	5247499	ArgumentList	PP_CUSTOM		5247246	1					
ANR	5247500	Argument	PP_CUSTOM		5247246	0					
ANR	5247501	Identifier	PP_CUSTOM		5247246	0					
ANR	5247502	Argument	i		5247246	1					
ANR	5247503	Identifier	i		5247246	0					
ANR	5247504	Argument	argv [ i ]		5247246	2					
ANR	5247505	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5247506	Identifier	argv		5247246	0					
ANR	5247507	Identifier	i		5247246	1					
ANR	5247508	IfStatement	if ( ! argv [ i + 1 ] || ! argv [ i + 2 ] )		5247246	1					
ANR	5247509	Condition	! argv [ i + 1 ] || ! argv [ i + 2 ]	558:7:17317:17340	5247246	0	True				
ANR	5247510	OrExpression	! argv [ i + 1 ] || ! argv [ i + 2 ]		5247246	0		||			
ANR	5247511	UnaryOperationExpression	! argv [ i + 1 ]		5247246	0					
ANR	5247512	UnaryOperator	!		5247246	0					
ANR	5247513	ArrayIndexing	argv [ i + 1 ]		5247246	1					
ANR	5247514	Identifier	argv		5247246	0					
ANR	5247515	AdditiveExpression	i + 1		5247246	1		+			
ANR	5247516	Identifier	i		5247246	0					
ANR	5247517	PrimaryExpression	1		5247246	1					
ANR	5247518	UnaryOperationExpression	! argv [ i + 2 ]		5247246	1					
ANR	5247519	UnaryOperator	!		5247246	0					
ANR	5247520	ArrayIndexing	argv [ i + 2 ]		5247246	1					
ANR	5247521	Identifier	argv		5247246	0					
ANR	5247522	AdditiveExpression	i + 2		5247246	1		+			
ANR	5247523	Identifier	i		5247246	0					
ANR	5247524	PrimaryExpression	2		5247246	1					
ANR	5247525	CompoundStatement		52:34:1733:1733	5247246	1					
ANR	5247526	ExpressionStatement	"fprintf ( stderr , ""%s: -format requires two other arguments\\n"" , myName )"	559:4:17350:17428	5247246	0	True				
ANR	5247527	CallExpression	"fprintf ( stderr , ""%s: -format requires two other arguments\\n"" , myName )"		5247246	0					
ANR	5247528	Callee	fprintf		5247246	0					
ANR	5247529	Identifier	fprintf		5247246	0					
ANR	5247530	ArgumentList	stderr		5247246	1					
ANR	5247531	Argument	stderr		5247246	0					
ANR	5247532	Identifier	stderr		5247246	0					
ANR	5247533	Argument	"""%s: -format requires two other arguments\\n"""		5247246	1					
ANR	5247534	PrimaryExpression	"""%s: -format requires two other arguments\\n"""		5247246	0					
ANR	5247535	Argument	myName		5247246	2					
ANR	5247536	Identifier	myName		5247246	0					
ANR	5247537	ExpressionStatement	"fprintf ( stderr , ""Use \\""%s -help\\"" for details\\n"" , myName )"	561:4:17434:17493	5247246	1	True				
ANR	5247538	CallExpression	"fprintf ( stderr , ""Use \\""%s -help\\"" for details\\n"" , myName )"		5247246	0					
ANR	5247539	Callee	fprintf		5247246	0					
ANR	5247540	Identifier	fprintf		5247246	0					
ANR	5247541	ArgumentList	stderr		5247246	1					
ANR	5247542	Argument	stderr		5247246	0					
ANR	5247543	Identifier	stderr		5247246	0					
ANR	5247544	Argument	"""Use \\""%s -help\\"" for details\\n"""		5247246	1					
ANR	5247545	PrimaryExpression	"""Use \\""%s -help\\"" for details\\n"""		5247246	0					
ANR	5247546	Argument	myName		5247246	2					
ANR	5247547	Identifier	myName		5247246	0					
ANR	5247548	ExpressionStatement	exit ( 1 )	562:4:17499:17508	5247246	2	True				
ANR	5247549	CallExpression	exit ( 1 )		5247246	0					
ANR	5247550	Callee	exit		5247246	0					
ANR	5247551	Identifier	exit		5247246	0					
ANR	5247552	ArgumentList	1		5247246	1					
ANR	5247553	Argument	1		5247246	0					
ANR	5247554	PrimaryExpression	1		5247246	0					
ANR	5247555	ExpressionStatement	i += 2	564:3:17518:17524	5247246	2	True				
ANR	5247556	AssignmentExpression	i += 2		5247246	0		+=			
ANR	5247557	Identifier	i		5247246	0					
ANR	5247558	PrimaryExpression	2		5247246	1					
ANR	5247559	ElseStatement	else		5247246	0					
ANR	5247560	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-target"" , 5 ) )"		5247246	0					
ANR	5247561	Condition	"matchPrefix ( argv [ i ] , ""-target"" , 5 )"	566:6:17544:17578	5247246	0	True				
ANR	5247562	CallExpression	"matchPrefix ( argv [ i ] , ""-target"" , 5 )"		5247246	0					
ANR	5247563	Callee	matchPrefix		5247246	0					
ANR	5247564	Identifier	matchPrefix		5247246	0					
ANR	5247565	ArgumentList	argv [ i ]		5247246	1					
ANR	5247566	Argument	argv [ i ]		5247246	0					
ANR	5247567	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5247568	Identifier	argv		5247246	0					
ANR	5247569	Identifier	i		5247246	1					
ANR	5247570	Argument	"""-target"""		5247246	1					
ANR	5247571	PrimaryExpression	"""-target"""		5247246	0					
ANR	5247572	Argument	5		5247246	2					
ANR	5247573	PrimaryExpression	5		5247246	0					
ANR	5247574	CompoundStatement		70:3:2264:2289	5247246	1					
ANR	5247575	IfStatement	if ( ! argv [ i + 1 ] )		5247246	0					
ANR	5247576	Condition	! argv [ i + 1 ]	567:7:17590:17599	5247246	0	True				
ANR	5247577	UnaryOperationExpression	! argv [ i + 1 ]		5247246	0					
ANR	5247578	UnaryOperator	!		5247246	0					
ANR	5247579	ArrayIndexing	argv [ i + 1 ]		5247246	1					
ANR	5247580	Identifier	argv		5247246	0					
ANR	5247581	AdditiveExpression	i + 1		5247246	1		+			
ANR	5247582	Identifier	i		5247246	0					
ANR	5247583	PrimaryExpression	1		5247246	1					
ANR	5247584	CompoundStatement		61:20:1992:1992	5247246	1					
ANR	5247585	ExpressionStatement	"fprintf ( stderr , ""%s: -target requires one additional argument\\n"" , myName )"	568:4:17609:17691	5247246	0	True				
ANR	5247586	CallExpression	"fprintf ( stderr , ""%s: -target requires one additional argument\\n"" , myName )"		5247246	0					
ANR	5247587	Callee	fprintf		5247246	0					
ANR	5247588	Identifier	fprintf		5247246	0					
ANR	5247589	ArgumentList	stderr		5247246	1					
ANR	5247590	Argument	stderr		5247246	0					
ANR	5247591	Identifier	stderr		5247246	0					
ANR	5247592	Argument	"""%s: -target requires one additional argument\\n"""		5247246	1					
ANR	5247593	PrimaryExpression	"""%s: -target requires one additional argument\\n"""		5247246	0					
ANR	5247594	Argument	myName		5247246	2					
ANR	5247595	Identifier	myName		5247246	0					
ANR	5247596	ExpressionStatement	"fprintf ( stderr , ""Use \\""%s -help\\"" for details\\n"" , myName )"	570:4:17697:17756	5247246	1	True				
ANR	5247597	CallExpression	"fprintf ( stderr , ""Use \\""%s -help\\"" for details\\n"" , myName )"		5247246	0					
ANR	5247598	Callee	fprintf		5247246	0					
ANR	5247599	Identifier	fprintf		5247246	0					
ANR	5247600	ArgumentList	stderr		5247246	1					
ANR	5247601	Argument	stderr		5247246	0					
ANR	5247602	Identifier	stderr		5247246	0					
ANR	5247603	Argument	"""Use \\""%s -help\\"" for details\\n"""		5247246	1					
ANR	5247604	PrimaryExpression	"""Use \\""%s -help\\"" for details\\n"""		5247246	0					
ANR	5247605	Argument	myName		5247246	2					
ANR	5247606	Identifier	myName		5247246	0					
ANR	5247607	ExpressionStatement	exit ( 1 )	571:4:17762:17771	5247246	2	True				
ANR	5247608	CallExpression	exit ( 1 )		5247246	0					
ANR	5247609	Callee	exit		5247246	0					
ANR	5247610	Identifier	exit		5247246	0					
ANR	5247611	ArgumentList	1		5247246	1					
ANR	5247612	Argument	1		5247246	0					
ANR	5247613	PrimaryExpression	1		5247246	0					
ANR	5247614	ExpressionStatement	i += 1	573:3:17781:17787	5247246	1	True				
ANR	5247615	AssignmentExpression	i += 1		5247246	0		+=			
ANR	5247616	Identifier	i		5247246	0					
ANR	5247617	PrimaryExpression	1		5247246	1					
ANR	5247618	ExpressionStatement	target = argv [ i ]	574:3:17792:17808	5247246	2	True				
ANR	5247619	AssignmentExpression	target = argv [ i ]		5247246	0		=			
ANR	5247620	Identifier	target		5247246	0					
ANR	5247621	ArrayIndexing	argv [ i ]		5247246	1					
ANR	5247622	Identifier	argv		5247246	0					
ANR	5247623	Identifier	i		5247246	1					
ANR	5247624	IdentifierDeclStatement	"FILE * targetFile = safe_fopen_wrapper_follow ( target , ""r"" ) ;"	575:3:17813:17870	5247246	3	True				
ANR	5247625	IdentifierDecl	"* targetFile = safe_fopen_wrapper_follow ( target , ""r"" )"		5247246	0					
ANR	5247626	IdentifierDeclType	FILE *		5247246	0					
ANR	5247627	Identifier	targetFile		5247246	1					
ANR	5247628	AssignmentExpression	"* targetFile = safe_fopen_wrapper_follow ( target , ""r"" )"		5247246	2		=			
ANR	5247629	Identifier	targetFile		5247246	0					
ANR	5247630	CallExpression	"safe_fopen_wrapper_follow ( target , ""r"" )"		5247246	1					
ANR	5247631	Callee	safe_fopen_wrapper_follow		5247246	0					
ANR	5247632	Identifier	safe_fopen_wrapper_follow		5247246	0					
ANR	5247633	ArgumentList	target		5247246	1					
ANR	5247634	Argument	target		5247246	0					
ANR	5247635	Identifier	target		5247246	0					
ANR	5247636	Argument	"""r"""		5247246	1					
ANR	5247637	PrimaryExpression	"""r"""		5247246	0					
ANR	5247638	IdentifierDeclStatement	"int iseof , iserror , empty ;"	576:3:17875:17900	5247246	4	True				
ANR	5247639	IdentifierDecl	iseof		5247246	0					
ANR	5247640	IdentifierDeclType	int		5247246	0					
ANR	5247641	Identifier	iseof		5247246	1					
ANR	5247642	IdentifierDecl	iserror		5247246	1					
ANR	5247643	IdentifierDeclType	int		5247246	0					
ANR	5247644	Identifier	iserror		5247246	1					
ANR	5247645	IdentifierDecl	empty		5247246	2					
ANR	5247646	IdentifierDeclType	int		5247246	0					
ANR	5247647	Identifier	empty		5247246	1					
ANR	5247648	ExpressionStatement	"targetAd = new ClassAd ( targetFile , ""\\n\\n"" , iseof , iserror , empty )"	577:3:17905:17970	5247246	5	True				
ANR	5247649	AssignmentExpression	"targetAd = new ClassAd ( targetFile , ""\\n\\n"" , iseof , iserror , empty )"		5247246	0		=			
ANR	5247650	Identifier	targetAd		5247246	0					
ANR	5247651	Expression	"targetFile , ""\\n\\n"" , iseof , iserror , empty"		5247246	1					
ANR	5247652	Identifier	targetFile		5247246	0					
ANR	5247653	Expression	"""\\n\\n"" , iseof , iserror , empty"		5247246	1					
ANR	5247654	PrimaryExpression	"""\\n\\n"""		5247246	0					
ANR	5247655	Expression	"iseof , iserror , empty"		5247246	1					
ANR	5247656	Identifier	iseof		5247246	0					
ANR	5247657	Expression	"iserror , empty"		5247246	1					
ANR	5247658	Identifier	iserror		5247246	0					
ANR	5247659	Identifier	empty		5247246	1					
ANR	5247660	ExpressionStatement	fclose ( targetFile )	578:3:17975:17993	5247246	6	True				
ANR	5247661	CallExpression	fclose ( targetFile )		5247246	0					
ANR	5247662	Callee	fclose		5247246	0					
ANR	5247663	Identifier	fclose		5247246	0					
ANR	5247664	ArgumentList	targetFile		5247246	1					
ANR	5247665	Argument	targetFile		5247246	0					
ANR	5247666	Identifier	targetFile		5247246	0					
ANR	5247667	ElseStatement	else		5247246	0					
ANR	5247668	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-constraint"" , 4 ) )"		5247246	0					
ANR	5247669	Condition	"matchPrefix ( argv [ i ] , ""-constraint"" , 4 )"	580:6:18010:18048	5247246	0	True				
ANR	5247670	CallExpression	"matchPrefix ( argv [ i ] , ""-constraint"" , 4 )"		5247246	0					
ANR	5247671	Callee	matchPrefix		5247246	0					
ANR	5247672	Identifier	matchPrefix		5247246	0					
ANR	5247673	ArgumentList	argv [ i ]		5247246	1					
ANR	5247674	Argument	argv [ i ]		5247246	0					
ANR	5247675	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5247676	Identifier	argv		5247246	0					
ANR	5247677	Identifier	i		5247246	1					
ANR	5247678	Argument	"""-constraint"""		5247246	1					
ANR	5247679	PrimaryExpression	"""-constraint"""		5247246	0					
ANR	5247680	Argument	4		5247246	2					
ANR	5247681	PrimaryExpression	4		5247246	0					
ANR	5247682	CompoundStatement		74:47:2440:2440	5247246	1					
ANR	5247683	ExpressionStatement	i ++	582:3:18102:18105	5247246	0	True				
ANR	5247684	PostIncDecOperationExpression	i ++		5247246	0					
ANR	5247685	Identifier	i		5247246	0					
ANR	5247686	IncDec	++		5247246	1					
ANR	5247687	IfStatement	if ( ! argv [ i ] )		5247246	1					
ANR	5247688	Condition	! argv [ i ]	583:7:18114:18122	5247246	0	True				
ANR	5247689	UnaryOperationExpression	! argv [ i ]		5247246	0					
ANR	5247690	UnaryOperator	!		5247246	0					
ANR	5247691	ArrayIndexing	argv [ i ]		5247246	1					
ANR	5247692	Identifier	argv		5247246	0					
ANR	5247693	Identifier	i		5247246	1					
ANR	5247694	CompoundStatement		77:19:2515:2515	5247246	1					
ANR	5247695	ExpressionStatement	"fprintf ( stderr , ""%s: -constraint requires another argument\\n"" , myName )"	584:4:18132:18211	5247246	0	True				
ANR	5247696	CallExpression	"fprintf ( stderr , ""%s: -constraint requires another argument\\n"" , myName )"		5247246	0					
ANR	5247697	Callee	fprintf		5247246	0					
ANR	5247698	Identifier	fprintf		5247246	0					
ANR	5247699	ArgumentList	stderr		5247246	1					
ANR	5247700	Argument	stderr		5247246	0					
ANR	5247701	Identifier	stderr		5247246	0					
ANR	5247702	Argument	"""%s: -constraint requires another argument\\n"""		5247246	1					
ANR	5247703	PrimaryExpression	"""%s: -constraint requires another argument\\n"""		5247246	0					
ANR	5247704	Argument	myName		5247246	2					
ANR	5247705	Identifier	myName		5247246	0					
ANR	5247706	ExpressionStatement	"fprintf ( stderr , ""Use \\""%s -help\\"" for details\\n"" , myName )"	586:4:18217:18276	5247246	1	True				
ANR	5247707	CallExpression	"fprintf ( stderr , ""Use \\""%s -help\\"" for details\\n"" , myName )"		5247246	0					
ANR	5247708	Callee	fprintf		5247246	0					
ANR	5247709	Identifier	fprintf		5247246	0					
ANR	5247710	ArgumentList	stderr		5247246	1					
ANR	5247711	Argument	stderr		5247246	0					
ANR	5247712	Identifier	stderr		5247246	0					
ANR	5247713	Argument	"""Use \\""%s -help\\"" for details\\n"""		5247246	1					
ANR	5247714	PrimaryExpression	"""Use \\""%s -help\\"" for details\\n"""		5247246	0					
ANR	5247715	Argument	myName		5247246	2					
ANR	5247716	Identifier	myName		5247246	0					
ANR	5247717	ExpressionStatement	exit ( 1 )	587:4:18282:18291	5247246	2	True				
ANR	5247718	CallExpression	exit ( 1 )		5247246	0					
ANR	5247719	Callee	exit		5247246	0					
ANR	5247720	Identifier	exit		5247246	0					
ANR	5247721	ArgumentList	1		5247246	1					
ANR	5247722	Argument	1		5247246	0					
ANR	5247723	PrimaryExpression	1		5247246	0					
ANR	5247724	ElseStatement	else		5247246	0					
ANR	5247725	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-direct"" , 4 ) )"		5247246	0					
ANR	5247726	Condition	"matchPrefix ( argv [ i ] , ""-direct"" , 4 )"	590:6:18313:18347	5247246	0	True				
ANR	5247727	CallExpression	"matchPrefix ( argv [ i ] , ""-direct"" , 4 )"		5247246	0					
ANR	5247728	Callee	matchPrefix		5247246	0					
ANR	5247729	Identifier	matchPrefix		5247246	0					
ANR	5247730	ArgumentList	argv [ i ]		5247246	1					
ANR	5247731	Argument	argv [ i ]		5247246	0					
ANR	5247732	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5247733	Identifier	argv		5247246	0					
ANR	5247734	Identifier	i		5247246	1					
ANR	5247735	Argument	"""-direct"""		5247246	1					
ANR	5247736	PrimaryExpression	"""-direct"""		5247246	0					
ANR	5247737	Argument	4		5247246	2					
ANR	5247738	PrimaryExpression	4		5247246	0					
ANR	5247739	CompoundStatement		84:43:2739:2739	5247246	1					
ANR	5247740	IfStatement	if ( direct )		5247246	0					
ANR	5247741	Condition	direct	591:7:18359:18364	5247246	0	True				
ANR	5247742	Identifier	direct		5247246	0					
ANR	5247743	CompoundStatement		85:16:2757:2757	5247246	1					
ANR	5247744	ExpressionStatement	free ( direct )	592:4:18374:18388	5247246	0	True				
ANR	5247745	CallExpression	free ( direct )		5247246	0					
ANR	5247746	Callee	free		5247246	0					
ANR	5247747	Identifier	free		5247246	0					
ANR	5247748	ArgumentList	direct		5247246	1					
ANR	5247749	Argument	direct		5247246	0					
ANR	5247750	Identifier	direct		5247246	0					
ANR	5247751	ExpressionStatement	had_direct_error = 1	593:4:18394:18414	5247246	1	True				
ANR	5247752	AssignmentExpression	had_direct_error = 1		5247246	0		=			
ANR	5247753	Identifier	had_direct_error		5247246	0					
ANR	5247754	PrimaryExpression	1		5247246	1					
ANR	5247755	ExpressionStatement	i ++	595:3:18424:18427	5247246	1	True				
ANR	5247756	PostIncDecOperationExpression	i ++		5247246	0					
ANR	5247757	Identifier	i		5247246	0					
ANR	5247758	IncDec	++		5247246	1					
ANR	5247759	IfStatement	if ( ! argv [ i ] )		5247246	2					
ANR	5247760	Condition	! argv [ i ]	596:7:18436:18444	5247246	0	True				
ANR	5247761	UnaryOperationExpression	! argv [ i ]		5247246	0					
ANR	5247762	UnaryOperator	!		5247246	0					
ANR	5247763	ArrayIndexing	argv [ i ]		5247246	1					
ANR	5247764	Identifier	argv		5247246	0					
ANR	5247765	Identifier	i		5247246	1					
ANR	5247766	CompoundStatement		90:19:2837:2837	5247246	1					
ANR	5247767	ExpressionStatement	"fprintf ( stderr , ""%s: -direct requires another argument\\n"" , myName )"	597:4:18454:18529	5247246	0	True				
ANR	5247768	CallExpression	"fprintf ( stderr , ""%s: -direct requires another argument\\n"" , myName )"		5247246	0					
ANR	5247769	Callee	fprintf		5247246	0					
ANR	5247770	Identifier	fprintf		5247246	0					
ANR	5247771	ArgumentList	stderr		5247246	1					
ANR	5247772	Argument	stderr		5247246	0					
ANR	5247773	Identifier	stderr		5247246	0					
ANR	5247774	Argument	"""%s: -direct requires another argument\\n"""		5247246	1					
ANR	5247775	PrimaryExpression	"""%s: -direct requires another argument\\n"""		5247246	0					
ANR	5247776	Argument	myName		5247246	2					
ANR	5247777	Identifier	myName		5247246	0					
ANR	5247778	ExpressionStatement	"fprintf ( stderr , ""Use \\""%s -help\\"" for details\\n"" , myName )"	599:4:18535:18594	5247246	1	True				
ANR	5247779	CallExpression	"fprintf ( stderr , ""Use \\""%s -help\\"" for details\\n"" , myName )"		5247246	0					
ANR	5247780	Callee	fprintf		5247246	0					
ANR	5247781	Identifier	fprintf		5247246	0					
ANR	5247782	ArgumentList	stderr		5247246	1					
ANR	5247783	Argument	stderr		5247246	0					
ANR	5247784	Identifier	stderr		5247246	0					
ANR	5247785	Argument	"""Use \\""%s -help\\"" for details\\n"""		5247246	1					
ANR	5247786	PrimaryExpression	"""Use \\""%s -help\\"" for details\\n"""		5247246	0					
ANR	5247787	Argument	myName		5247246	2					
ANR	5247788	Identifier	myName		5247246	0					
ANR	5247789	ExpressionStatement	exit ( 1 )	600:4:18600:18609	5247246	2	True				
ANR	5247790	CallExpression	exit ( 1 )		5247246	0					
ANR	5247791	Callee	exit		5247246	0					
ANR	5247792	Identifier	exit		5247246	0					
ANR	5247793	ArgumentList	1		5247246	1					
ANR	5247794	Argument	1		5247246	0					
ANR	5247795	PrimaryExpression	1		5247246	0					
ANR	5247796	ExpressionStatement	direct = strdup ( argv [ i ] )	602:3:18619:18645	5247246	3	True				
ANR	5247797	AssignmentExpression	direct = strdup ( argv [ i ] )		5247246	0		=			
ANR	5247798	Identifier	direct		5247246	0					
ANR	5247799	CallExpression	strdup ( argv [ i ] )		5247246	1					
ANR	5247800	Callee	strdup		5247246	0					
ANR	5247801	Identifier	strdup		5247246	0					
ANR	5247802	ArgumentList	argv [ i ]		5247246	1					
ANR	5247803	Argument	argv [ i ]		5247246	0					
ANR	5247804	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5247805	Identifier	argv		5247246	0					
ANR	5247806	Identifier	i		5247246	1					
ANR	5247807	ElseStatement	else		5247246	0					
ANR	5247808	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-diagnose"" , 4 ) )"		5247246	0					
ANR	5247809	Condition	"matchPrefix ( argv [ i ] , ""-diagnose"" , 4 )"	604:6:18662:18698	5247246	0	True				
ANR	5247810	CallExpression	"matchPrefix ( argv [ i ] , ""-diagnose"" , 4 )"		5247246	0					
ANR	5247811	Callee	matchPrefix		5247246	0					
ANR	5247812	Identifier	matchPrefix		5247246	0					
ANR	5247813	ArgumentList	argv [ i ]		5247246	1					
ANR	5247814	Argument	argv [ i ]		5247246	0					
ANR	5247815	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5247816	Identifier	argv		5247246	0					
ANR	5247817	Identifier	i		5247246	1					
ANR	5247818	Argument	"""-diagnose"""		5247246	1					
ANR	5247819	PrimaryExpression	"""-diagnose"""		5247246	0					
ANR	5247820	Argument	4		5247246	2					
ANR	5247821	PrimaryExpression	4		5247246	0					
ANR	5247822	CompoundStatement		98:45:3090:3090	5247246	1					
ANR	5247823	ExpressionStatement	diagnose = 1	605:3:18706:18718	5247246	0	True				
ANR	5247824	AssignmentExpression	diagnose = 1		5247246	0		=			
ANR	5247825	Identifier	diagnose		5247246	0					
ANR	5247826	PrimaryExpression	1		5247246	1					
ANR	5247827	ElseStatement	else		5247246	0					
ANR	5247828	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-debug"" , 3 ) )"		5247246	0					
ANR	5247829	Condition	"matchPrefix ( argv [ i ] , ""-debug"" , 3 )"	607:6:18735:18768	5247246	0	True				
ANR	5247830	CallExpression	"matchPrefix ( argv [ i ] , ""-debug"" , 3 )"		5247246	0					
ANR	5247831	Callee	matchPrefix		5247246	0					
ANR	5247832	Identifier	matchPrefix		5247246	0					
ANR	5247833	ArgumentList	argv [ i ]		5247246	1					
ANR	5247834	Argument	argv [ i ]		5247246	0					
ANR	5247835	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5247836	Identifier	argv		5247246	0					
ANR	5247837	Identifier	i		5247246	1					
ANR	5247838	Argument	"""-debug"""		5247246	1					
ANR	5247839	PrimaryExpression	"""-debug"""		5247246	0					
ANR	5247840	Argument	3		5247246	2					
ANR	5247841	PrimaryExpression	3		5247246	0					
ANR	5247842	CompoundStatement		101:42:3160:3160	5247246	1					
ANR	5247843	ExpressionStatement	Termlog = 1	609:3:18801:18812	5247246	0	True				
ANR	5247844	AssignmentExpression	Termlog = 1		5247246	0		=			
ANR	5247845	Identifier	Termlog		5247246	0					
ANR	5247846	PrimaryExpression	1		5247246	1					
ANR	5247847	ExpressionStatement	p_funcs = get_param_functions ( )	610:3:18817:18848	5247246	1	True				
ANR	5247848	AssignmentExpression	p_funcs = get_param_functions ( )		5247246	0		=			
ANR	5247849	Identifier	p_funcs		5247246	0					
ANR	5247850	CallExpression	get_param_functions ( )		5247246	1					
ANR	5247851	Callee	get_param_functions		5247246	0					
ANR	5247852	Identifier	get_param_functions		5247246	0					
ANR	5247853	ArgumentList			5247246	1					
ANR	5247854	ExpressionStatement	"dprintf_config ( ""TOOL"" , p_funcs )"	611:3:18853:18885	5247246	2	True				
ANR	5247855	CallExpression	"dprintf_config ( ""TOOL"" , p_funcs )"		5247246	0					
ANR	5247856	Callee	dprintf_config		5247246	0					
ANR	5247857	Identifier	dprintf_config		5247246	0					
ANR	5247858	ArgumentList	"""TOOL"""		5247246	1					
ANR	5247859	Argument	"""TOOL"""		5247246	0					
ANR	5247860	PrimaryExpression	"""TOOL"""		5247246	0					
ANR	5247861	Argument	p_funcs		5247246	1					
ANR	5247862	Identifier	p_funcs		5247246	0					
ANR	5247863	ElseStatement	else		5247246	0					
ANR	5247864	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-help"" , 2 ) )"		5247246	0					
ANR	5247865	Condition	"matchPrefix ( argv [ i ] , ""-help"" , 2 )"	613:6:18902:18934	5247246	0	True				
ANR	5247866	CallExpression	"matchPrefix ( argv [ i ] , ""-help"" , 2 )"		5247246	0					
ANR	5247867	Callee	matchPrefix		5247246	0					
ANR	5247868	Identifier	matchPrefix		5247246	0					
ANR	5247869	ArgumentList	argv [ i ]		5247246	1					
ANR	5247870	Argument	argv [ i ]		5247246	0					
ANR	5247871	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5247872	Identifier	argv		5247246	0					
ANR	5247873	Identifier	i		5247246	1					
ANR	5247874	Argument	"""-help"""		5247246	1					
ANR	5247875	PrimaryExpression	"""-help"""		5247246	0					
ANR	5247876	Argument	2		5247246	2					
ANR	5247877	PrimaryExpression	2		5247246	0					
ANR	5247878	CompoundStatement		107:41:3326:3326	5247246	1					
ANR	5247879	ExpressionStatement	usage ( )	614:3:18942:18950	5247246	0	True				
ANR	5247880	CallExpression	usage ( )		5247246	0					
ANR	5247881	Callee	usage		5247246	0					
ANR	5247882	Identifier	usage		5247246	0					
ANR	5247883	ArgumentList			5247246	1					
ANR	5247884	ExpressionStatement	exit ( 0 )	615:3:18955:18963	5247246	1	True				
ANR	5247885	CallExpression	exit ( 0 )		5247246	0					
ANR	5247886	Callee	exit		5247246	0					
ANR	5247887	Identifier	exit		5247246	0					
ANR	5247888	ArgumentList	0		5247246	1					
ANR	5247889	Argument	0		5247246	0					
ANR	5247890	PrimaryExpression	0		5247246	0					
ANR	5247891	ElseStatement	else		5247246	0					
ANR	5247892	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-long"" , 2 ) || matchPrefix ( argv [ i ] , ""-verbose"" , 3 ) )"		5247246	0					
ANR	5247893	Condition	"matchPrefix ( argv [ i ] , ""-long"" , 2 ) || matchPrefix ( argv [ i ] , ""-verbose"" , 3 )"	617:6:18980:19051	5247246	0	True				
ANR	5247894	OrExpression	"matchPrefix ( argv [ i ] , ""-long"" , 2 ) || matchPrefix ( argv [ i ] , ""-verbose"" , 3 )"		5247246	0		||			
ANR	5247895	CallExpression	"matchPrefix ( argv [ i ] , ""-long"" , 2 )"		5247246	0					
ANR	5247896	Callee	matchPrefix		5247246	0					
ANR	5247897	Identifier	matchPrefix		5247246	0					
ANR	5247898	ArgumentList	argv [ i ]		5247246	1					
ANR	5247899	Argument	argv [ i ]		5247246	0					
ANR	5247900	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5247901	Identifier	argv		5247246	0					
ANR	5247902	Identifier	i		5247246	1					
ANR	5247903	Argument	"""-long"""		5247246	1					
ANR	5247904	PrimaryExpression	"""-long"""		5247246	0					
ANR	5247905	Argument	2		5247246	2					
ANR	5247906	PrimaryExpression	2		5247246	0					
ANR	5247907	CallExpression	"matchPrefix ( argv [ i ] , ""-verbose"" , 3 )"		5247246	1					
ANR	5247908	Callee	matchPrefix		5247246	0					
ANR	5247909	Identifier	matchPrefix		5247246	0					
ANR	5247910	ArgumentList	argv [ i ]		5247246	1					
ANR	5247911	Argument	argv [ i ]		5247246	0					
ANR	5247912	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5247913	Identifier	argv		5247246	0					
ANR	5247914	Identifier	i		5247246	1					
ANR	5247915	Argument	"""-verbose"""		5247246	1					
ANR	5247916	PrimaryExpression	"""-verbose"""		5247246	0					
ANR	5247917	Argument	3		5247246	2					
ANR	5247918	PrimaryExpression	3		5247246	0					
ANR	5247919	CompoundStatement		111:80:3443:3443	5247246	1					
ANR	5247920	ExpressionStatement	"setPPstyle ( PP_VERBOSE , i , argv [ i ] )"	618:3:19059:19094	5247246	0	True				
ANR	5247921	CallExpression	"setPPstyle ( PP_VERBOSE , i , argv [ i ] )"		5247246	0					
ANR	5247922	Callee	setPPstyle		5247246	0					
ANR	5247923	Identifier	setPPstyle		5247246	0					
ANR	5247924	ArgumentList	PP_VERBOSE		5247246	1					
ANR	5247925	Argument	PP_VERBOSE		5247246	0					
ANR	5247926	Identifier	PP_VERBOSE		5247246	0					
ANR	5247927	Argument	i		5247246	1					
ANR	5247928	Identifier	i		5247246	0					
ANR	5247929	Argument	argv [ i ]		5247246	2					
ANR	5247930	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5247931	Identifier	argv		5247246	0					
ANR	5247932	Identifier	i		5247246	1					
ANR	5247933	ElseStatement	else		5247246	0					
ANR	5247934	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-xml"" , 2 ) )"		5247246	0					
ANR	5247935	Condition	"matchPrefix ( argv [ i ] , ""-xml"" , 2 )"	620:6:19111:19141	5247246	0	True				
ANR	5247936	CallExpression	"matchPrefix ( argv [ i ] , ""-xml"" , 2 )"		5247246	0					
ANR	5247937	Callee	matchPrefix		5247246	0					
ANR	5247938	Identifier	matchPrefix		5247246	0					
ANR	5247939	ArgumentList	argv [ i ]		5247246	1					
ANR	5247940	Argument	argv [ i ]		5247246	0					
ANR	5247941	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5247942	Identifier	argv		5247246	0					
ANR	5247943	Identifier	i		5247246	1					
ANR	5247944	Argument	"""-xml"""		5247246	1					
ANR	5247945	PrimaryExpression	"""-xml"""		5247246	0					
ANR	5247946	Argument	2		5247246	2					
ANR	5247947	PrimaryExpression	2		5247246	0					
ANR	5247948	CompoundStatement		114:38:3532:3532	5247246	1					
ANR	5247949	ExpressionStatement	"setPPstyle ( PP_XML , i , argv [ i ] )"	621:3:19148:19179	5247246	0	True				
ANR	5247950	CallExpression	"setPPstyle ( PP_XML , i , argv [ i ] )"		5247246	0					
ANR	5247951	Callee	setPPstyle		5247246	0					
ANR	5247952	Identifier	setPPstyle		5247246	0					
ANR	5247953	ArgumentList	PP_XML		5247246	1					
ANR	5247954	Argument	PP_XML		5247246	0					
ANR	5247955	Identifier	PP_XML		5247246	0					
ANR	5247956	Argument	i		5247246	1					
ANR	5247957	Identifier	i		5247246	0					
ANR	5247958	Argument	argv [ i ]		5247246	2					
ANR	5247959	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5247960	Identifier	argv		5247246	0					
ANR	5247961	Identifier	i		5247246	1					
ANR	5247962	ElseStatement	else		5247246	0					
ANR	5247963	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-attributes"" , 3 ) )"		5247246	0					
ANR	5247964	Condition	"matchPrefix ( argv [ i ] , ""-attributes"" , 3 )"	623:6:19196:19233	5247246	0	True				
ANR	5247965	CallExpression	"matchPrefix ( argv [ i ] , ""-attributes"" , 3 )"		5247246	0					
ANR	5247966	Callee	matchPrefix		5247246	0					
ANR	5247967	Identifier	matchPrefix		5247246	0					
ANR	5247968	ArgumentList	argv [ i ]		5247246	1					
ANR	5247969	Argument	argv [ i ]		5247246	0					
ANR	5247970	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5247971	Identifier	argv		5247246	0					
ANR	5247972	Identifier	i		5247246	1					
ANR	5247973	Argument	"""-attributes"""		5247246	1					
ANR	5247974	PrimaryExpression	"""-attributes"""		5247246	0					
ANR	5247975	Argument	3		5247246	2					
ANR	5247976	PrimaryExpression	3		5247246	0					
ANR	5247977	CompoundStatement		117:45:3624:3624	5247246	1					
ANR	5247978	ElseStatement	else		5247246	0					
ANR	5247979	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-run"" , 2 ) || matchPrefix ( argv [ i ] , ""-claimed"" , 3 ) )"		5247246	0					
ANR	5247980	Condition	"matchPrefix ( argv [ i ] , ""-run"" , 2 ) || matchPrefix ( argv [ i ] , ""-claimed"" , 3 )"	626:6:19326:19396	5247246	0	True				
ANR	5247981	OrExpression	"matchPrefix ( argv [ i ] , ""-run"" , 2 ) || matchPrefix ( argv [ i ] , ""-claimed"" , 3 )"		5247246	0		||			
ANR	5247982	CallExpression	"matchPrefix ( argv [ i ] , ""-run"" , 2 )"		5247246	0					
ANR	5247983	Callee	matchPrefix		5247246	0					
ANR	5247984	Identifier	matchPrefix		5247246	0					
ANR	5247985	ArgumentList	argv [ i ]		5247246	1					
ANR	5247986	Argument	argv [ i ]		5247246	0					
ANR	5247987	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5247988	Identifier	argv		5247246	0					
ANR	5247989	Identifier	i		5247246	1					
ANR	5247990	Argument	"""-run"""		5247246	1					
ANR	5247991	PrimaryExpression	"""-run"""		5247246	0					
ANR	5247992	Argument	2		5247246	2					
ANR	5247993	PrimaryExpression	2		5247246	0					
ANR	5247994	CallExpression	"matchPrefix ( argv [ i ] , ""-claimed"" , 3 )"		5247246	1					
ANR	5247995	Callee	matchPrefix		5247246	0					
ANR	5247996	Identifier	matchPrefix		5247246	0					
ANR	5247997	ArgumentList	argv [ i ]		5247246	1					
ANR	5247998	Argument	argv [ i ]		5247246	0					
ANR	5247999	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248000	Identifier	argv		5247246	0					
ANR	5248001	Identifier	i		5247246	1					
ANR	5248002	Argument	"""-claimed"""		5247246	1					
ANR	5248003	PrimaryExpression	"""-claimed"""		5247246	0					
ANR	5248004	Argument	3		5247246	2					
ANR	5248005	PrimaryExpression	3		5247246	0					
ANR	5248006	CompoundStatement		120:79:3788:3788	5247246	1					
ANR	5248007	ExpressionStatement	"setMode ( MODE_STARTD_RUN , i , argv [ i ] )"	627:3:19404:19441	5247246	0	True				
ANR	5248008	CallExpression	"setMode ( MODE_STARTD_RUN , i , argv [ i ] )"		5247246	0					
ANR	5248009	Callee	setMode		5247246	0					
ANR	5248010	Identifier	setMode		5247246	0					
ANR	5248011	ArgumentList	MODE_STARTD_RUN		5247246	1					
ANR	5248012	Argument	MODE_STARTD_RUN		5247246	0					
ANR	5248013	Identifier	MODE_STARTD_RUN		5247246	0					
ANR	5248014	Argument	i		5247246	1					
ANR	5248015	Identifier	i		5247246	0					
ANR	5248016	Argument	argv [ i ]		5247246	2					
ANR	5248017	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248018	Identifier	argv		5247246	0					
ANR	5248019	Identifier	i		5247246	1					
ANR	5248020	ElseStatement	else		5247246	0					
ANR	5248021	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-cod"" , 4 ) )"		5247246	0					
ANR	5248022	Condition	"matchPrefix ( argv [ i ] , ""-cod"" , 4 )"	629:6:19458:19489	5247246	0	True				
ANR	5248023	CallExpression	"matchPrefix ( argv [ i ] , ""-cod"" , 4 )"		5247246	0					
ANR	5248024	Callee	matchPrefix		5247246	0					
ANR	5248025	Identifier	matchPrefix		5247246	0					
ANR	5248026	ArgumentList	argv [ i ]		5247246	1					
ANR	5248027	Argument	argv [ i ]		5247246	0					
ANR	5248028	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248029	Identifier	argv		5247246	0					
ANR	5248030	Identifier	i		5247246	1					
ANR	5248031	Argument	"""-cod"""		5247246	1					
ANR	5248032	PrimaryExpression	"""-cod"""		5247246	0					
ANR	5248033	Argument	4		5247246	2					
ANR	5248034	PrimaryExpression	4		5247246	0					
ANR	5248035	CompoundStatement		123:41:3882:3882	5247246	1					
ANR	5248036	ExpressionStatement	"setMode ( MODE_STARTD_COD , i , argv [ i ] )"	630:3:19498:19535	5247246	0	True				
ANR	5248037	CallExpression	"setMode ( MODE_STARTD_COD , i , argv [ i ] )"		5247246	0					
ANR	5248038	Callee	setMode		5247246	0					
ANR	5248039	Identifier	setMode		5247246	0					
ANR	5248040	ArgumentList	MODE_STARTD_COD		5247246	1					
ANR	5248041	Argument	MODE_STARTD_COD		5247246	0					
ANR	5248042	Identifier	MODE_STARTD_COD		5247246	0					
ANR	5248043	Argument	i		5247246	1					
ANR	5248044	Identifier	i		5247246	0					
ANR	5248045	Argument	argv [ i ]		5247246	2					
ANR	5248046	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248047	Identifier	argv		5247246	0					
ANR	5248048	Identifier	i		5247246	1					
ANR	5248049	ElseStatement	else		5247246	0					
ANR	5248050	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-java"" , 2 ) )"		5247246	0					
ANR	5248051	Condition	"matchPrefix ( argv [ i ] , ""-java"" , 2 )"	632:6:19552:19584	5247246	0	True				
ANR	5248052	CallExpression	"matchPrefix ( argv [ i ] , ""-java"" , 2 )"		5247246	0					
ANR	5248053	Callee	matchPrefix		5247246	0					
ANR	5248054	Identifier	matchPrefix		5247246	0					
ANR	5248055	ArgumentList	argv [ i ]		5247246	1					
ANR	5248056	Argument	argv [ i ]		5247246	0					
ANR	5248057	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248058	Identifier	argv		5247246	0					
ANR	5248059	Identifier	i		5247246	1					
ANR	5248060	Argument	"""-java"""		5247246	1					
ANR	5248061	PrimaryExpression	"""-java"""		5247246	0					
ANR	5248062	Argument	2		5247246	2					
ANR	5248063	PrimaryExpression	2		5247246	0					
ANR	5248064	CompoundStatement		126:41:3976:3976	5247246	1					
ANR	5248065	ExpressionStatement	javaMode = true	633:3:19592:19607	5247246	0	True				
ANR	5248066	AssignmentExpression	javaMode = true		5247246	0		=			
ANR	5248067	Identifier	javaMode		5247246	0					
ANR	5248068	Identifier	true		5247246	1					
ANR	5248069	ElseStatement	else		5247246	0					
ANR	5248070	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-vm"" , 3 ) )"		5247246	0					
ANR	5248071	Condition	"matchPrefix ( argv [ i ] , ""-vm"" , 3 )"	635:6:19624:19654	5247246	0	True				
ANR	5248072	CallExpression	"matchPrefix ( argv [ i ] , ""-vm"" , 3 )"		5247246	0					
ANR	5248073	Callee	matchPrefix		5247246	0					
ANR	5248074	Identifier	matchPrefix		5247246	0					
ANR	5248075	ArgumentList	argv [ i ]		5247246	1					
ANR	5248076	Argument	argv [ i ]		5247246	0					
ANR	5248077	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248078	Identifier	argv		5247246	0					
ANR	5248079	Identifier	i		5247246	1					
ANR	5248080	Argument	"""-vm"""		5247246	1					
ANR	5248081	PrimaryExpression	"""-vm"""		5247246	0					
ANR	5248082	Argument	3		5247246	2					
ANR	5248083	PrimaryExpression	3		5247246	0					
ANR	5248084	CompoundStatement		129:39:4046:4046	5247246	1					
ANR	5248085	ExpressionStatement	vmMode = true	636:3:19662:19675	5247246	0	True				
ANR	5248086	AssignmentExpression	vmMode = true		5247246	0		=			
ANR	5248087	Identifier	vmMode		5247246	0					
ANR	5248088	Identifier	true		5247246	1					
ANR	5248089	ElseStatement	else		5247246	0					
ANR	5248090	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-server"" , 3 ) )"		5247246	0					
ANR	5248091	Condition	"matchPrefix ( argv [ i ] , ""-server"" , 3 )"	638:6:19692:19726	5247246	0	True				
ANR	5248092	CallExpression	"matchPrefix ( argv [ i ] , ""-server"" , 3 )"		5247246	0					
ANR	5248093	Callee	matchPrefix		5247246	0					
ANR	5248094	Identifier	matchPrefix		5247246	0					
ANR	5248095	ArgumentList	argv [ i ]		5247246	1					
ANR	5248096	Argument	argv [ i ]		5247246	0					
ANR	5248097	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248098	Identifier	argv		5247246	0					
ANR	5248099	Identifier	i		5247246	1					
ANR	5248100	Argument	"""-server"""		5247246	1					
ANR	5248101	PrimaryExpression	"""-server"""		5247246	0					
ANR	5248102	Argument	3		5247246	2					
ANR	5248103	PrimaryExpression	3		5247246	0					
ANR	5248104	CompoundStatement		132:43:4118:4118	5247246	1					
ANR	5248105	ExpressionStatement	"setPPstyle ( PP_STARTD_SERVER , i , argv [ i ] )"	639:3:19734:19775	5247246	0	True				
ANR	5248106	CallExpression	"setPPstyle ( PP_STARTD_SERVER , i , argv [ i ] )"		5247246	0					
ANR	5248107	Callee	setPPstyle		5247246	0					
ANR	5248108	Identifier	setPPstyle		5247246	0					
ANR	5248109	ArgumentList	PP_STARTD_SERVER		5247246	1					
ANR	5248110	Argument	PP_STARTD_SERVER		5247246	0					
ANR	5248111	Identifier	PP_STARTD_SERVER		5247246	0					
ANR	5248112	Argument	i		5247246	1					
ANR	5248113	Identifier	i		5247246	0					
ANR	5248114	Argument	argv [ i ]		5247246	2					
ANR	5248115	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248116	Identifier	argv		5247246	0					
ANR	5248117	Identifier	i		5247246	1					
ANR	5248118	ElseStatement	else		5247246	0					
ANR	5248119	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-state"" , 5 ) )"		5247246	0					
ANR	5248120	Condition	"matchPrefix ( argv [ i ] , ""-state"" , 5 )"	641:6:19792:19825	5247246	0	True				
ANR	5248121	CallExpression	"matchPrefix ( argv [ i ] , ""-state"" , 5 )"		5247246	0					
ANR	5248122	Callee	matchPrefix		5247246	0					
ANR	5248123	Identifier	matchPrefix		5247246	0					
ANR	5248124	ArgumentList	argv [ i ]		5247246	1					
ANR	5248125	Argument	argv [ i ]		5247246	0					
ANR	5248126	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248127	Identifier	argv		5247246	0					
ANR	5248128	Identifier	i		5247246	1					
ANR	5248129	Argument	"""-state"""		5247246	1					
ANR	5248130	PrimaryExpression	"""-state"""		5247246	0					
ANR	5248131	Argument	5		5247246	2					
ANR	5248132	PrimaryExpression	5		5247246	0					
ANR	5248133	CompoundStatement		135:42:4217:4217	5247246	1					
ANR	5248134	ExpressionStatement	"setPPstyle ( PP_STARTD_STATE , i , argv [ i ] )"	642:3:19833:19873	5247246	0	True				
ANR	5248135	CallExpression	"setPPstyle ( PP_STARTD_STATE , i , argv [ i ] )"		5247246	0					
ANR	5248136	Callee	setPPstyle		5247246	0					
ANR	5248137	Identifier	setPPstyle		5247246	0					
ANR	5248138	ArgumentList	PP_STARTD_STATE		5247246	1					
ANR	5248139	Argument	PP_STARTD_STATE		5247246	0					
ANR	5248140	Identifier	PP_STARTD_STATE		5247246	0					
ANR	5248141	Argument	i		5247246	1					
ANR	5248142	Identifier	i		5247246	0					
ANR	5248143	Argument	argv [ i ]		5247246	2					
ANR	5248144	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248145	Identifier	argv		5247246	0					
ANR	5248146	Identifier	i		5247246	1					
ANR	5248147	ElseStatement	else		5247246	0					
ANR	5248148	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-statistics"" , 6 ) )"		5247246	0					
ANR	5248149	Condition	"matchPrefix ( argv [ i ] , ""-statistics"" , 6 )"	644:6:19890:19928	5247246	0	True				
ANR	5248150	CallExpression	"matchPrefix ( argv [ i ] , ""-statistics"" , 6 )"		5247246	0					
ANR	5248151	Callee	matchPrefix		5247246	0					
ANR	5248152	Identifier	matchPrefix		5247246	0					
ANR	5248153	ArgumentList	argv [ i ]		5247246	1					
ANR	5248154	Argument	argv [ i ]		5247246	0					
ANR	5248155	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248156	Identifier	argv		5247246	0					
ANR	5248157	Identifier	i		5247246	1					
ANR	5248158	Argument	"""-statistics"""		5247246	1					
ANR	5248159	PrimaryExpression	"""-statistics"""		5247246	0					
ANR	5248160	Argument	6		5247246	2					
ANR	5248161	PrimaryExpression	6		5247246	0					
ANR	5248162	CompoundStatement		138:47:4320:4320	5247246	1					
ANR	5248163	IfStatement	if ( statistics )		5247246	0					
ANR	5248164	Condition	statistics	645:7:19940:19949	5247246	0	True				
ANR	5248165	Identifier	statistics		5247246	0					
ANR	5248166	CompoundStatement		139:20:4342:4342	5247246	1					
ANR	5248167	ExpressionStatement	free ( statistics )	646:4:19959:19977	5247246	0	True				
ANR	5248168	CallExpression	free ( statistics )		5247246	0					
ANR	5248169	Callee	free		5247246	0					
ANR	5248170	Identifier	free		5247246	0					
ANR	5248171	ArgumentList	statistics		5247246	1					
ANR	5248172	Argument	statistics		5247246	0					
ANR	5248173	Identifier	statistics		5247246	0					
ANR	5248174	ExpressionStatement	had_statistics_error = 1	647:4:19983:20007	5247246	1	True				
ANR	5248175	AssignmentExpression	had_statistics_error = 1		5247246	0		=			
ANR	5248176	Identifier	had_statistics_error		5247246	0					
ANR	5248177	PrimaryExpression	1		5247246	1					
ANR	5248178	ExpressionStatement	i ++	649:3:20017:20020	5247246	1	True				
ANR	5248179	PostIncDecOperationExpression	i ++		5247246	0					
ANR	5248180	Identifier	i		5247246	0					
ANR	5248181	IncDec	++		5247246	1					
ANR	5248182	IfStatement	if ( ! argv [ i ] )		5247246	2					
ANR	5248183	Condition	! argv [ i ]	650:7:20029:20037	5247246	0	True				
ANR	5248184	UnaryOperationExpression	! argv [ i ]		5247246	0					
ANR	5248185	UnaryOperator	!		5247246	0					
ANR	5248186	ArrayIndexing	argv [ i ]		5247246	1					
ANR	5248187	Identifier	argv		5247246	0					
ANR	5248188	Identifier	i		5247246	1					
ANR	5248189	CompoundStatement		144:19:4430:4430	5247246	1					
ANR	5248190	ExpressionStatement	"fprintf ( stderr , ""%s: -statistics requires another argument\\n"" , myName )"	651:4:20047:20126	5247246	0	True				
ANR	5248191	CallExpression	"fprintf ( stderr , ""%s: -statistics requires another argument\\n"" , myName )"		5247246	0					
ANR	5248192	Callee	fprintf		5247246	0					
ANR	5248193	Identifier	fprintf		5247246	0					
ANR	5248194	ArgumentList	stderr		5247246	1					
ANR	5248195	Argument	stderr		5247246	0					
ANR	5248196	Identifier	stderr		5247246	0					
ANR	5248197	Argument	"""%s: -statistics requires another argument\\n"""		5247246	1					
ANR	5248198	PrimaryExpression	"""%s: -statistics requires another argument\\n"""		5247246	0					
ANR	5248199	Argument	myName		5247246	2					
ANR	5248200	Identifier	myName		5247246	0					
ANR	5248201	ExpressionStatement	"fprintf ( stderr , ""Use \\""%s -help\\"" for details\\n"" , myName )"	653:4:20132:20191	5247246	1	True				
ANR	5248202	CallExpression	"fprintf ( stderr , ""Use \\""%s -help\\"" for details\\n"" , myName )"		5247246	0					
ANR	5248203	Callee	fprintf		5247246	0					
ANR	5248204	Identifier	fprintf		5247246	0					
ANR	5248205	ArgumentList	stderr		5247246	1					
ANR	5248206	Argument	stderr		5247246	0					
ANR	5248207	Identifier	stderr		5247246	0					
ANR	5248208	Argument	"""Use \\""%s -help\\"" for details\\n"""		5247246	1					
ANR	5248209	PrimaryExpression	"""Use \\""%s -help\\"" for details\\n"""		5247246	0					
ANR	5248210	Argument	myName		5247246	2					
ANR	5248211	Identifier	myName		5247246	0					
ANR	5248212	ExpressionStatement	exit ( 1 )	654:4:20197:20206	5247246	2	True				
ANR	5248213	CallExpression	exit ( 1 )		5247246	0					
ANR	5248214	Callee	exit		5247246	0					
ANR	5248215	Identifier	exit		5247246	0					
ANR	5248216	ArgumentList	1		5247246	1					
ANR	5248217	Argument	1		5247246	0					
ANR	5248218	PrimaryExpression	1		5247246	0					
ANR	5248219	ExpressionStatement	statistics = strdup ( argv [ i ] )	656:3:20216:20246	5247246	3	True				
ANR	5248220	AssignmentExpression	statistics = strdup ( argv [ i ] )		5247246	0		=			
ANR	5248221	Identifier	statistics		5247246	0					
ANR	5248222	CallExpression	strdup ( argv [ i ] )		5247246	1					
ANR	5248223	Callee	strdup		5247246	0					
ANR	5248224	Identifier	strdup		5247246	0					
ANR	5248225	ArgumentList	argv [ i ]		5247246	1					
ANR	5248226	Argument	argv [ i ]		5247246	0					
ANR	5248227	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248228	Identifier	argv		5247246	0					
ANR	5248229	Identifier	i		5247246	1					
ANR	5248230	ElseStatement	else		5247246	0					
ANR	5248231	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-startd"" , 5 ) )"		5247246	0					
ANR	5248232	Condition	"matchPrefix ( argv [ i ] , ""-startd"" , 5 )"	658:6:20263:20297	5247246	0	True				
ANR	5248233	CallExpression	"matchPrefix ( argv [ i ] , ""-startd"" , 5 )"		5247246	0					
ANR	5248234	Callee	matchPrefix		5247246	0					
ANR	5248235	Identifier	matchPrefix		5247246	0					
ANR	5248236	ArgumentList	argv [ i ]		5247246	1					
ANR	5248237	Argument	argv [ i ]		5247246	0					
ANR	5248238	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248239	Identifier	argv		5247246	0					
ANR	5248240	Identifier	i		5247246	1					
ANR	5248241	Argument	"""-startd"""		5247246	1					
ANR	5248242	PrimaryExpression	"""-startd"""		5247246	0					
ANR	5248243	Argument	5		5247246	2					
ANR	5248244	PrimaryExpression	5		5247246	0					
ANR	5248245	CompoundStatement		152:43:4689:4689	5247246	1					
ANR	5248246	ExpressionStatement	"setMode ( MODE_STARTD_NORMAL , i , argv [ i ] )"	659:3:20305:20344	5247246	0	True				
ANR	5248247	CallExpression	"setMode ( MODE_STARTD_NORMAL , i , argv [ i ] )"		5247246	0					
ANR	5248248	Callee	setMode		5247246	0					
ANR	5248249	Identifier	setMode		5247246	0					
ANR	5248250	ArgumentList	MODE_STARTD_NORMAL		5247246	1					
ANR	5248251	Argument	MODE_STARTD_NORMAL		5247246	0					
ANR	5248252	Identifier	MODE_STARTD_NORMAL		5247246	0					
ANR	5248253	Argument	i		5247246	1					
ANR	5248254	Identifier	i		5247246	0					
ANR	5248255	Argument	argv [ i ]		5247246	2					
ANR	5248256	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248257	Identifier	argv		5247246	0					
ANR	5248258	Identifier	i		5247246	1					
ANR	5248259	ElseStatement	else		5247246	0					
ANR	5248260	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-schedd"" , 3 ) )"		5247246	0					
ANR	5248261	Condition	"matchPrefix ( argv [ i ] , ""-schedd"" , 3 )"	661:6:20361:20395	5247246	0	True				
ANR	5248262	CallExpression	"matchPrefix ( argv [ i ] , ""-schedd"" , 3 )"		5247246	0					
ANR	5248263	Callee	matchPrefix		5247246	0					
ANR	5248264	Identifier	matchPrefix		5247246	0					
ANR	5248265	ArgumentList	argv [ i ]		5247246	1					
ANR	5248266	Argument	argv [ i ]		5247246	0					
ANR	5248267	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248268	Identifier	argv		5247246	0					
ANR	5248269	Identifier	i		5247246	1					
ANR	5248270	Argument	"""-schedd"""		5247246	1					
ANR	5248271	PrimaryExpression	"""-schedd"""		5247246	0					
ANR	5248272	Argument	3		5247246	2					
ANR	5248273	PrimaryExpression	3		5247246	0					
ANR	5248274	CompoundStatement		155:43:4787:4787	5247246	1					
ANR	5248275	ExpressionStatement	"setMode ( MODE_SCHEDD_NORMAL , i , argv [ i ] )"	662:3:20403:20443	5247246	0	True				
ANR	5248276	CallExpression	"setMode ( MODE_SCHEDD_NORMAL , i , argv [ i ] )"		5247246	0					
ANR	5248277	Callee	setMode		5247246	0					
ANR	5248278	Identifier	setMode		5247246	0					
ANR	5248279	ArgumentList	MODE_SCHEDD_NORMAL		5247246	1					
ANR	5248280	Argument	MODE_SCHEDD_NORMAL		5247246	0					
ANR	5248281	Identifier	MODE_SCHEDD_NORMAL		5247246	0					
ANR	5248282	Argument	i		5247246	1					
ANR	5248283	Identifier	i		5247246	0					
ANR	5248284	Argument	argv [ i ]		5247246	2					
ANR	5248285	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248286	Identifier	argv		5247246	0					
ANR	5248287	Identifier	i		5247246	1					
ANR	5248288	ElseStatement	else		5247246	0					
ANR	5248289	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-grid"" , 2 ) )"		5247246	0					
ANR	5248290	Condition	"matchPrefix ( argv [ i ] , ""-grid"" , 2 )"	664:6:20460:20492	5247246	0	True				
ANR	5248291	CallExpression	"matchPrefix ( argv [ i ] , ""-grid"" , 2 )"		5247246	0					
ANR	5248292	Callee	matchPrefix		5247246	0					
ANR	5248293	Identifier	matchPrefix		5247246	0					
ANR	5248294	ArgumentList	argv [ i ]		5247246	1					
ANR	5248295	Argument	argv [ i ]		5247246	0					
ANR	5248296	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248297	Identifier	argv		5247246	0					
ANR	5248298	Identifier	i		5247246	1					
ANR	5248299	Argument	"""-grid"""		5247246	1					
ANR	5248300	PrimaryExpression	"""-grid"""		5247246	0					
ANR	5248301	Argument	2		5247246	2					
ANR	5248302	PrimaryExpression	2		5247246	0					
ANR	5248303	CompoundStatement		158:41:4884:4884	5247246	1					
ANR	5248304	ExpressionStatement	"setMode ( MODE_GRID_NORMAL , i , argv [ i ] )"	665:3:20500:20538	5247246	0	True				
ANR	5248305	CallExpression	"setMode ( MODE_GRID_NORMAL , i , argv [ i ] )"		5247246	0					
ANR	5248306	Callee	setMode		5247246	0					
ANR	5248307	Identifier	setMode		5247246	0					
ANR	5248308	ArgumentList	MODE_GRID_NORMAL		5247246	1					
ANR	5248309	Argument	MODE_GRID_NORMAL		5247246	0					
ANR	5248310	Identifier	MODE_GRID_NORMAL		5247246	0					
ANR	5248311	Argument	i		5247246	1					
ANR	5248312	Identifier	i		5247246	0					
ANR	5248313	Argument	argv [ i ]		5247246	2					
ANR	5248314	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248315	Identifier	argv		5247246	0					
ANR	5248316	Identifier	i		5247246	1					
ANR	5248317	ElseStatement	else		5247246	0					
ANR	5248318	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-subsystem"" , 5 ) )"		5247246	0					
ANR	5248319	Condition	"matchPrefix ( argv [ i ] , ""-subsystem"" , 5 )"	667:6:20555:20592	5247246	0	True				
ANR	5248320	CallExpression	"matchPrefix ( argv [ i ] , ""-subsystem"" , 5 )"		5247246	0					
ANR	5248321	Callee	matchPrefix		5247246	0					
ANR	5248322	Identifier	matchPrefix		5247246	0					
ANR	5248323	ArgumentList	argv [ i ]		5247246	1					
ANR	5248324	Argument	argv [ i ]		5247246	0					
ANR	5248325	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248326	Identifier	argv		5247246	0					
ANR	5248327	Identifier	i		5247246	1					
ANR	5248328	Argument	"""-subsystem"""		5247246	1					
ANR	5248329	PrimaryExpression	"""-subsystem"""		5247246	0					
ANR	5248330	Argument	5		5247246	2					
ANR	5248331	PrimaryExpression	5		5247246	0					
ANR	5248332	CompoundStatement		161:46:4984:4984	5247246	1					
ANR	5248333	ExpressionStatement	i ++	668:3:20600:20603	5247246	0	True				
ANR	5248334	PostIncDecOperationExpression	i ++		5247246	0					
ANR	5248335	Identifier	i		5247246	0					
ANR	5248336	IncDec	++		5247246	1					
ANR	5248337	IfStatement	if ( ! argv [ i ] )		5247246	1					
ANR	5248338	Condition	! argv [ i ]	669:7:20612:20619	5247246	0	True				
ANR	5248339	UnaryOperationExpression	! argv [ i ]		5247246	0					
ANR	5248340	UnaryOperator	!		5247246	0					
ANR	5248341	ArrayIndexing	argv [ i ]		5247246	1					
ANR	5248342	Identifier	argv		5247246	0					
ANR	5248343	Identifier	i		5247246	1					
ANR	5248344	CompoundStatement		163:18:5012:5012	5247246	1					
ANR	5248345	ExpressionStatement	"fprintf ( stderr , ""%s: -subsystem requires another argument\\n"" , myName )"	670:4:20629:20707	5247246	0	True				
ANR	5248346	CallExpression	"fprintf ( stderr , ""%s: -subsystem requires another argument\\n"" , myName )"		5247246	0					
ANR	5248347	Callee	fprintf		5247246	0					
ANR	5248348	Identifier	fprintf		5247246	0					
ANR	5248349	ArgumentList	stderr		5247246	1					
ANR	5248350	Argument	stderr		5247246	0					
ANR	5248351	Identifier	stderr		5247246	0					
ANR	5248352	Argument	"""%s: -subsystem requires another argument\\n"""		5247246	1					
ANR	5248353	PrimaryExpression	"""%s: -subsystem requires another argument\\n"""		5247246	0					
ANR	5248354	Argument	myName		5247246	2					
ANR	5248355	Identifier	myName		5247246	0					
ANR	5248356	ExpressionStatement	"fprintf ( stderr , ""Use \\""%s -help\\"" for details\\n"" , myName )"	672:4:20713:20772	5247246	1	True				
ANR	5248357	CallExpression	"fprintf ( stderr , ""Use \\""%s -help\\"" for details\\n"" , myName )"		5247246	0					
ANR	5248358	Callee	fprintf		5247246	0					
ANR	5248359	Identifier	fprintf		5247246	0					
ANR	5248360	ArgumentList	stderr		5247246	1					
ANR	5248361	Argument	stderr		5247246	0					
ANR	5248362	Identifier	stderr		5247246	0					
ANR	5248363	Argument	"""Use \\""%s -help\\"" for details\\n"""		5247246	1					
ANR	5248364	PrimaryExpression	"""Use \\""%s -help\\"" for details\\n"""		5247246	0					
ANR	5248365	Argument	myName		5247246	2					
ANR	5248366	Identifier	myName		5247246	0					
ANR	5248367	ExpressionStatement	exit ( 1 )	673:4:20778:20787	5247246	2	True				
ANR	5248368	CallExpression	exit ( 1 )		5247246	0					
ANR	5248369	Callee	exit		5247246	0					
ANR	5248370	Identifier	exit		5247246	0					
ANR	5248371	ArgumentList	1		5247246	1					
ANR	5248372	Argument	1		5247246	0					
ANR	5248373	PrimaryExpression	1		5247246	0					
ANR	5248374	IfStatement	"if ( matchPrefix ( argv [ i ] , ""schedd"" , 6 ) )"		5247246	2					
ANR	5248375	Condition	"matchPrefix ( argv [ i ] , ""schedd"" , 6 )"	675:7:20801:20834	5247246	0	True				
ANR	5248376	CallExpression	"matchPrefix ( argv [ i ] , ""schedd"" , 6 )"		5247246	0					
ANR	5248377	Callee	matchPrefix		5247246	0					
ANR	5248378	Identifier	matchPrefix		5247246	0					
ANR	5248379	ArgumentList	argv [ i ]		5247246	1					
ANR	5248380	Argument	argv [ i ]		5247246	0					
ANR	5248381	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248382	Identifier	argv		5247246	0					
ANR	5248383	Identifier	i		5247246	1					
ANR	5248384	Argument	"""schedd"""		5247246	1					
ANR	5248385	PrimaryExpression	"""schedd"""		5247246	0					
ANR	5248386	Argument	6		5247246	2					
ANR	5248387	PrimaryExpression	6		5247246	0					
ANR	5248388	CompoundStatement		169:43:5226:5226	5247246	1					
ANR	5248389	ExpressionStatement	"setMode ( MODE_SCHEDD_NORMAL , i , argv [ i ] )"	676:4:20843:20883	5247246	0	True				
ANR	5248390	CallExpression	"setMode ( MODE_SCHEDD_NORMAL , i , argv [ i ] )"		5247246	0					
ANR	5248391	Callee	setMode		5247246	0					
ANR	5248392	Identifier	setMode		5247246	0					
ANR	5248393	ArgumentList	MODE_SCHEDD_NORMAL		5247246	1					
ANR	5248394	Argument	MODE_SCHEDD_NORMAL		5247246	0					
ANR	5248395	Identifier	MODE_SCHEDD_NORMAL		5247246	0					
ANR	5248396	Argument	i		5247246	1					
ANR	5248397	Identifier	i		5247246	0					
ANR	5248398	Argument	argv [ i ]		5247246	2					
ANR	5248399	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248400	Identifier	argv		5247246	0					
ANR	5248401	Identifier	i		5247246	1					
ANR	5248402	ElseStatement	else		5247246	0					
ANR	5248403	IfStatement	"if ( matchPrefix ( argv [ i ] , ""startd"" , 6 ) )"		5247246	0					
ANR	5248404	Condition	"matchPrefix ( argv [ i ] , ""startd"" , 6 )"	678:7:20902:20935	5247246	0	True				
ANR	5248405	CallExpression	"matchPrefix ( argv [ i ] , ""startd"" , 6 )"		5247246	0					
ANR	5248406	Callee	matchPrefix		5247246	0					
ANR	5248407	Identifier	matchPrefix		5247246	0					
ANR	5248408	ArgumentList	argv [ i ]		5247246	1					
ANR	5248409	Argument	argv [ i ]		5247246	0					
ANR	5248410	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248411	Identifier	argv		5247246	0					
ANR	5248412	Identifier	i		5247246	1					
ANR	5248413	Argument	"""startd"""		5247246	1					
ANR	5248414	PrimaryExpression	"""startd"""		5247246	0					
ANR	5248415	Argument	6		5247246	2					
ANR	5248416	PrimaryExpression	6		5247246	0					
ANR	5248417	CompoundStatement		172:43:5327:5327	5247246	1					
ANR	5248418	ExpressionStatement	"setMode ( MODE_STARTD_NORMAL , i , argv [ i ] )"	679:4:20944:20984	5247246	0	True				
ANR	5248419	CallExpression	"setMode ( MODE_STARTD_NORMAL , i , argv [ i ] )"		5247246	0					
ANR	5248420	Callee	setMode		5247246	0					
ANR	5248421	Identifier	setMode		5247246	0					
ANR	5248422	ArgumentList	MODE_STARTD_NORMAL		5247246	1					
ANR	5248423	Argument	MODE_STARTD_NORMAL		5247246	0					
ANR	5248424	Identifier	MODE_STARTD_NORMAL		5247246	0					
ANR	5248425	Argument	i		5247246	1					
ANR	5248426	Identifier	i		5247246	0					
ANR	5248427	Argument	argv [ i ]		5247246	2					
ANR	5248428	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248429	Identifier	argv		5247246	0					
ANR	5248430	Identifier	i		5247246	1					
ANR	5248431	ElseStatement	else		5247246	0					
ANR	5248432	IfStatement	"if ( matchPrefix ( argv [ i ] , ""quill"" , 5 ) )"		5247246	0					
ANR	5248433	Condition	"matchPrefix ( argv [ i ] , ""quill"" , 5 )"	681:7:21003:21035	5247246	0	True				
ANR	5248434	CallExpression	"matchPrefix ( argv [ i ] , ""quill"" , 5 )"		5247246	0					
ANR	5248435	Callee	matchPrefix		5247246	0					
ANR	5248436	Identifier	matchPrefix		5247246	0					
ANR	5248437	ArgumentList	argv [ i ]		5247246	1					
ANR	5248438	Argument	argv [ i ]		5247246	0					
ANR	5248439	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248440	Identifier	argv		5247246	0					
ANR	5248441	Identifier	i		5247246	1					
ANR	5248442	Argument	"""quill"""		5247246	1					
ANR	5248443	PrimaryExpression	"""quill"""		5247246	0					
ANR	5248444	Argument	5		5247246	2					
ANR	5248445	PrimaryExpression	5		5247246	0					
ANR	5248446	CompoundStatement		175:42:5427:5427	5247246	1					
ANR	5248447	ExpressionStatement	"setMode ( MODE_QUILL_NORMAL , i , argv [ i ] )"	682:4:21044:21083	5247246	0	True				
ANR	5248448	CallExpression	"setMode ( MODE_QUILL_NORMAL , i , argv [ i ] )"		5247246	0					
ANR	5248449	Callee	setMode		5247246	0					
ANR	5248450	Identifier	setMode		5247246	0					
ANR	5248451	ArgumentList	MODE_QUILL_NORMAL		5247246	1					
ANR	5248452	Argument	MODE_QUILL_NORMAL		5247246	0					
ANR	5248453	Identifier	MODE_QUILL_NORMAL		5247246	0					
ANR	5248454	Argument	i		5247246	1					
ANR	5248455	Identifier	i		5247246	0					
ANR	5248456	Argument	argv [ i ]		5247246	2					
ANR	5248457	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248458	Identifier	argv		5247246	0					
ANR	5248459	Identifier	i		5247246	1					
ANR	5248460	ElseStatement	else		5247246	0					
ANR	5248461	IfStatement	"if ( matchPrefix ( argv [ i ] , ""negotiator"" , 10 ) )"		5247246	0					
ANR	5248462	Condition	"matchPrefix ( argv [ i ] , ""negotiator"" , 10 )"	684:7:21102:21140	5247246	0	True				
ANR	5248463	CallExpression	"matchPrefix ( argv [ i ] , ""negotiator"" , 10 )"		5247246	0					
ANR	5248464	Callee	matchPrefix		5247246	0					
ANR	5248465	Identifier	matchPrefix		5247246	0					
ANR	5248466	ArgumentList	argv [ i ]		5247246	1					
ANR	5248467	Argument	argv [ i ]		5247246	0					
ANR	5248468	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248469	Identifier	argv		5247246	0					
ANR	5248470	Identifier	i		5247246	1					
ANR	5248471	Argument	"""negotiator"""		5247246	1					
ANR	5248472	PrimaryExpression	"""negotiator"""		5247246	0					
ANR	5248473	Argument	10		5247246	2					
ANR	5248474	PrimaryExpression	10		5247246	0					
ANR	5248475	CompoundStatement		178:48:5532:5532	5247246	1					
ANR	5248476	ExpressionStatement	"setMode ( MODE_NEGOTIATOR_NORMAL , i , argv [ i ] )"	685:4:21149:21193	5247246	0	True				
ANR	5248477	CallExpression	"setMode ( MODE_NEGOTIATOR_NORMAL , i , argv [ i ] )"		5247246	0					
ANR	5248478	Callee	setMode		5247246	0					
ANR	5248479	Identifier	setMode		5247246	0					
ANR	5248480	ArgumentList	MODE_NEGOTIATOR_NORMAL		5247246	1					
ANR	5248481	Argument	MODE_NEGOTIATOR_NORMAL		5247246	0					
ANR	5248482	Identifier	MODE_NEGOTIATOR_NORMAL		5247246	0					
ANR	5248483	Argument	i		5247246	1					
ANR	5248484	Identifier	i		5247246	0					
ANR	5248485	Argument	argv [ i ]		5247246	2					
ANR	5248486	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248487	Identifier	argv		5247246	0					
ANR	5248488	Identifier	i		5247246	1					
ANR	5248489	ElseStatement	else		5247246	0					
ANR	5248490	IfStatement	"if ( matchPrefix ( argv [ i ] , ""master"" , 6 ) )"		5247246	0					
ANR	5248491	Condition	"matchPrefix ( argv [ i ] , ""master"" , 6 )"	687:7:21212:21245	5247246	0	True				
ANR	5248492	CallExpression	"matchPrefix ( argv [ i ] , ""master"" , 6 )"		5247246	0					
ANR	5248493	Callee	matchPrefix		5247246	0					
ANR	5248494	Identifier	matchPrefix		5247246	0					
ANR	5248495	ArgumentList	argv [ i ]		5247246	1					
ANR	5248496	Argument	argv [ i ]		5247246	0					
ANR	5248497	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248498	Identifier	argv		5247246	0					
ANR	5248499	Identifier	i		5247246	1					
ANR	5248500	Argument	"""master"""		5247246	1					
ANR	5248501	PrimaryExpression	"""master"""		5247246	0					
ANR	5248502	Argument	6		5247246	2					
ANR	5248503	PrimaryExpression	6		5247246	0					
ANR	5248504	CompoundStatement		181:43:5637:5637	5247246	1					
ANR	5248505	ExpressionStatement	"setMode ( MODE_MASTER_NORMAL , i , argv [ i ] )"	688:4:21254:21294	5247246	0	True				
ANR	5248506	CallExpression	"setMode ( MODE_MASTER_NORMAL , i , argv [ i ] )"		5247246	0					
ANR	5248507	Callee	setMode		5247246	0					
ANR	5248508	Identifier	setMode		5247246	0					
ANR	5248509	ArgumentList	MODE_MASTER_NORMAL		5247246	1					
ANR	5248510	Argument	MODE_MASTER_NORMAL		5247246	0					
ANR	5248511	Identifier	MODE_MASTER_NORMAL		5247246	0					
ANR	5248512	Argument	i		5247246	1					
ANR	5248513	Identifier	i		5247246	0					
ANR	5248514	Argument	argv [ i ]		5247246	2					
ANR	5248515	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248516	Identifier	argv		5247246	0					
ANR	5248517	Identifier	i		5247246	1					
ANR	5248518	ElseStatement	else		5247246	0					
ANR	5248519	IfStatement	"if ( matchPrefix ( argv [ i ] , ""collector"" , 9 ) )"		5247246	0					
ANR	5248520	Condition	"matchPrefix ( argv [ i ] , ""collector"" , 9 )"	690:7:21313:21349	5247246	0	True				
ANR	5248521	CallExpression	"matchPrefix ( argv [ i ] , ""collector"" , 9 )"		5247246	0					
ANR	5248522	Callee	matchPrefix		5247246	0					
ANR	5248523	Identifier	matchPrefix		5247246	0					
ANR	5248524	ArgumentList	argv [ i ]		5247246	1					
ANR	5248525	Argument	argv [ i ]		5247246	0					
ANR	5248526	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248527	Identifier	argv		5247246	0					
ANR	5248528	Identifier	i		5247246	1					
ANR	5248529	Argument	"""collector"""		5247246	1					
ANR	5248530	PrimaryExpression	"""collector"""		5247246	0					
ANR	5248531	Argument	9		5247246	2					
ANR	5248532	PrimaryExpression	9		5247246	0					
ANR	5248533	CompoundStatement		184:46:5741:5741	5247246	1					
ANR	5248534	ExpressionStatement	"setMode ( MODE_COLLECTOR_NORMAL , i , argv [ i ] )"	691:4:21358:21401	5247246	0	True				
ANR	5248535	CallExpression	"setMode ( MODE_COLLECTOR_NORMAL , i , argv [ i ] )"		5247246	0					
ANR	5248536	Callee	setMode		5247246	0					
ANR	5248537	Identifier	setMode		5247246	0					
ANR	5248538	ArgumentList	MODE_COLLECTOR_NORMAL		5247246	1					
ANR	5248539	Argument	MODE_COLLECTOR_NORMAL		5247246	0					
ANR	5248540	Identifier	MODE_COLLECTOR_NORMAL		5247246	0					
ANR	5248541	Argument	i		5247246	1					
ANR	5248542	Identifier	i		5247246	0					
ANR	5248543	Argument	argv [ i ]		5247246	2					
ANR	5248544	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248545	Identifier	argv		5247246	0					
ANR	5248546	Identifier	i		5247246	1					
ANR	5248547	ElseStatement	else		5247246	0					
ANR	5248548	IfStatement	"if ( matchPrefix ( argv [ i ] , ""generic"" , 7 ) )"		5247246	0					
ANR	5248549	Condition	"matchPrefix ( argv [ i ] , ""generic"" , 7 )"	693:7:21420:21454	5247246	0	True				
ANR	5248550	CallExpression	"matchPrefix ( argv [ i ] , ""generic"" , 7 )"		5247246	0					
ANR	5248551	Callee	matchPrefix		5247246	0					
ANR	5248552	Identifier	matchPrefix		5247246	0					
ANR	5248553	ArgumentList	argv [ i ]		5247246	1					
ANR	5248554	Argument	argv [ i ]		5247246	0					
ANR	5248555	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248556	Identifier	argv		5247246	0					
ANR	5248557	Identifier	i		5247246	1					
ANR	5248558	Argument	"""generic"""		5247246	1					
ANR	5248559	PrimaryExpression	"""generic"""		5247246	0					
ANR	5248560	Argument	7		5247246	2					
ANR	5248561	PrimaryExpression	7		5247246	0					
ANR	5248562	CompoundStatement		187:44:5846:5846	5247246	1					
ANR	5248563	ExpressionStatement	"setMode ( MODE_GENERIC_NORMAL , i , argv [ i ] )"	694:4:21463:21504	5247246	0	True				
ANR	5248564	CallExpression	"setMode ( MODE_GENERIC_NORMAL , i , argv [ i ] )"		5247246	0					
ANR	5248565	Callee	setMode		5247246	0					
ANR	5248566	Identifier	setMode		5247246	0					
ANR	5248567	ArgumentList	MODE_GENERIC_NORMAL		5247246	1					
ANR	5248568	Argument	MODE_GENERIC_NORMAL		5247246	0					
ANR	5248569	Identifier	MODE_GENERIC_NORMAL		5247246	0					
ANR	5248570	Argument	i		5247246	1					
ANR	5248571	Identifier	i		5247246	0					
ANR	5248572	Argument	argv [ i ]		5247246	2					
ANR	5248573	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248574	Identifier	argv		5247246	0					
ANR	5248575	Identifier	i		5247246	1					
ANR	5248576	ElseStatement	else		5247246	0					
ANR	5248577	IfStatement	"if ( matchPrefix ( argv [ i ] , ""had"" , 3 ) )"		5247246	0					
ANR	5248578	Condition	"matchPrefix ( argv [ i ] , ""had"" , 3 )"	696:7:21523:21553	5247246	0	True				
ANR	5248579	CallExpression	"matchPrefix ( argv [ i ] , ""had"" , 3 )"		5247246	0					
ANR	5248580	Callee	matchPrefix		5247246	0					
ANR	5248581	Identifier	matchPrefix		5247246	0					
ANR	5248582	ArgumentList	argv [ i ]		5247246	1					
ANR	5248583	Argument	argv [ i ]		5247246	0					
ANR	5248584	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248585	Identifier	argv		5247246	0					
ANR	5248586	Identifier	i		5247246	1					
ANR	5248587	Argument	"""had"""		5247246	1					
ANR	5248588	PrimaryExpression	"""had"""		5247246	0					
ANR	5248589	Argument	3		5247246	2					
ANR	5248590	PrimaryExpression	3		5247246	0					
ANR	5248591	CompoundStatement		190:40:5945:5945	5247246	1					
ANR	5248592	ExpressionStatement	"setMode ( MODE_HAD_NORMAL , i , argv [ i ] )"	697:4:21562:21599	5247246	0	True				
ANR	5248593	CallExpression	"setMode ( MODE_HAD_NORMAL , i , argv [ i ] )"		5247246	0					
ANR	5248594	Callee	setMode		5247246	0					
ANR	5248595	Identifier	setMode		5247246	0					
ANR	5248596	ArgumentList	MODE_HAD_NORMAL		5247246	1					
ANR	5248597	Argument	MODE_HAD_NORMAL		5247246	0					
ANR	5248598	Identifier	MODE_HAD_NORMAL		5247246	0					
ANR	5248599	Argument	i		5247246	1					
ANR	5248600	Identifier	i		5247246	0					
ANR	5248601	Argument	argv [ i ]		5247246	2					
ANR	5248602	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248603	Identifier	argv		5247246	0					
ANR	5248604	Identifier	i		5247246	1					
ANR	5248605	ElseStatement	else		5247246	0					
ANR	5248606	IfStatement	if ( * argv [ i ] == '-' )		5247246	0					
ANR	5248607	Condition	* argv [ i ] == '-'	699:7:21618:21632	5247246	0	True				
ANR	5248608	EqualityExpression	* argv [ i ] == '-'		5247246	0		==			
ANR	5248609	UnaryOperationExpression	* argv [ i ]		5247246	0					
ANR	5248610	UnaryOperator	*		5247246	0					
ANR	5248611	ArrayIndexing	argv [ i ]		5247246	1					
ANR	5248612	Identifier	argv		5247246	0					
ANR	5248613	Identifier	i		5247246	1					
ANR	5248614	PrimaryExpression	'-'		5247246	1					
ANR	5248615	CompoundStatement		193:24:6024:6024	5247246	1					
ANR	5248616	ExpressionStatement	"fprintf ( stderr , ""%s: -subsystem requires another argument\\n"" , myName )"	700:4:21641:21716	5247246	0	True				
ANR	5248617	CallExpression	"fprintf ( stderr , ""%s: -subsystem requires another argument\\n"" , myName )"		5247246	0					
ANR	5248618	Callee	fprintf		5247246	0					
ANR	5248619	Identifier	fprintf		5247246	0					
ANR	5248620	ArgumentList	stderr		5247246	1					
ANR	5248621	Argument	stderr		5247246	0					
ANR	5248622	Identifier	stderr		5247246	0					
ANR	5248623	Argument	"""%s: -subsystem requires another argument\\n"""		5247246	1					
ANR	5248624	PrimaryExpression	"""%s: -subsystem requires another argument\\n"""		5247246	0					
ANR	5248625	Argument	myName		5247246	2					
ANR	5248626	Identifier	myName		5247246	0					
ANR	5248627	ExpressionStatement	"fprintf ( stderr , ""Use \\""%s -help\\"" for details\\n"" , myName )"	702:4:21722:21781	5247246	1	True				
ANR	5248628	CallExpression	"fprintf ( stderr , ""Use \\""%s -help\\"" for details\\n"" , myName )"		5247246	0					
ANR	5248629	Callee	fprintf		5247246	0					
ANR	5248630	Identifier	fprintf		5247246	0					
ANR	5248631	ArgumentList	stderr		5247246	1					
ANR	5248632	Argument	stderr		5247246	0					
ANR	5248633	Identifier	stderr		5247246	0					
ANR	5248634	Argument	"""Use \\""%s -help\\"" for details\\n"""		5247246	1					
ANR	5248635	PrimaryExpression	"""Use \\""%s -help\\"" for details\\n"""		5247246	0					
ANR	5248636	Argument	myName		5247246	2					
ANR	5248637	Identifier	myName		5247246	0					
ANR	5248638	ExpressionStatement	exit ( 1 )	703:4:21787:21794	5247246	2	True				
ANR	5248639	CallExpression	exit ( 1 )		5247246	0					
ANR	5248640	Callee	exit		5247246	0					
ANR	5248641	Identifier	exit		5247246	0					
ANR	5248642	ArgumentList	1		5247246	1					
ANR	5248643	Argument	1		5247246	0					
ANR	5248644	PrimaryExpression	1		5247246	0					
ANR	5248645	ElseStatement	else		5247246	0					
ANR	5248646	CompoundStatement		198:10:6195:6195	5247246	0					
ANR	5248647	ExpressionStatement	genericType = strdup ( argv [ i ] )	705:4:21812:21841	5247246	0	True				
ANR	5248648	AssignmentExpression	genericType = strdup ( argv [ i ] )		5247246	0		=			
ANR	5248649	Identifier	genericType		5247246	0					
ANR	5248650	CallExpression	strdup ( argv [ i ] )		5247246	1					
ANR	5248651	Callee	strdup		5247246	0					
ANR	5248652	Identifier	strdup		5247246	0					
ANR	5248653	ArgumentList	argv [ i ]		5247246	1					
ANR	5248654	Argument	argv [ i ]		5247246	0					
ANR	5248655	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248656	Identifier	argv		5247246	0					
ANR	5248657	Identifier	i		5247246	1					
ANR	5248658	ExpressionStatement	"setMode ( MODE_OTHER , i , argv [ i ] )"	706:4:21847:21879	5247246	1	True				
ANR	5248659	CallExpression	"setMode ( MODE_OTHER , i , argv [ i ] )"		5247246	0					
ANR	5248660	Callee	setMode		5247246	0					
ANR	5248661	Identifier	setMode		5247246	0					
ANR	5248662	ArgumentList	MODE_OTHER		5247246	1					
ANR	5248663	Argument	MODE_OTHER		5247246	0					
ANR	5248664	Identifier	MODE_OTHER		5247246	0					
ANR	5248665	Argument	i		5247246	1					
ANR	5248666	Identifier	i		5247246	0					
ANR	5248667	Argument	argv [ i ]		5247246	2					
ANR	5248668	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248669	Identifier	argv		5247246	0					
ANR	5248670	Identifier	i		5247246	1					
ANR	5248671	ElseStatement	else		5247246	0					
ANR	5248672	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-quill"" , 2 ) )"		5247246	0					
ANR	5248673	Condition	"matchPrefix ( argv [ i ] , ""-quill"" , 2 )"	710:6:21928:21961	5247246	0	True				
ANR	5248674	CallExpression	"matchPrefix ( argv [ i ] , ""-quill"" , 2 )"		5247246	0					
ANR	5248675	Callee	matchPrefix		5247246	0					
ANR	5248676	Identifier	matchPrefix		5247246	0					
ANR	5248677	ArgumentList	argv [ i ]		5247246	1					
ANR	5248678	Argument	argv [ i ]		5247246	0					
ANR	5248679	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248680	Identifier	argv		5247246	0					
ANR	5248681	Identifier	i		5247246	1					
ANR	5248682	Argument	"""-quill"""		5247246	1					
ANR	5248683	PrimaryExpression	"""-quill"""		5247246	0					
ANR	5248684	Argument	2		5247246	2					
ANR	5248685	PrimaryExpression	2		5247246	0					
ANR	5248686	CompoundStatement		204:42:6353:6353	5247246	1					
ANR	5248687	ExpressionStatement	"setMode ( MODE_QUILL_NORMAL , i , argv [ i ] )"	711:3:21969:22008	5247246	0	True				
ANR	5248688	CallExpression	"setMode ( MODE_QUILL_NORMAL , i , argv [ i ] )"		5247246	0					
ANR	5248689	Callee	setMode		5247246	0					
ANR	5248690	Identifier	setMode		5247246	0					
ANR	5248691	ArgumentList	MODE_QUILL_NORMAL		5247246	1					
ANR	5248692	Argument	MODE_QUILL_NORMAL		5247246	0					
ANR	5248693	Identifier	MODE_QUILL_NORMAL		5247246	0					
ANR	5248694	Argument	i		5247246	1					
ANR	5248695	Identifier	i		5247246	0					
ANR	5248696	Argument	argv [ i ]		5247246	2					
ANR	5248697	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248698	Identifier	argv		5247246	0					
ANR	5248699	Identifier	i		5247246	1					
ANR	5248700	ElseStatement	else		5247246	0					
ANR	5248701	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-license"" , 3 ) )"		5247246	0					
ANR	5248702	Condition	"matchPrefix ( argv [ i ] , ""-license"" , 3 )"	714:6:22058:22093	5247246	0	True				
ANR	5248703	CallExpression	"matchPrefix ( argv [ i ] , ""-license"" , 3 )"		5247246	0					
ANR	5248704	Callee	matchPrefix		5247246	0					
ANR	5248705	Identifier	matchPrefix		5247246	0					
ANR	5248706	ArgumentList	argv [ i ]		5247246	1					
ANR	5248707	Argument	argv [ i ]		5247246	0					
ANR	5248708	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248709	Identifier	argv		5247246	0					
ANR	5248710	Identifier	i		5247246	1					
ANR	5248711	Argument	"""-license"""		5247246	1					
ANR	5248712	PrimaryExpression	"""-license"""		5247246	0					
ANR	5248713	Argument	3		5247246	2					
ANR	5248714	PrimaryExpression	3		5247246	0					
ANR	5248715	CompoundStatement		208:44:6485:6485	5247246	1					
ANR	5248716	ExpressionStatement	"setMode ( MODE_LICENSE_NORMAL , i , argv [ i ] )"	715:3:22101:22142	5247246	0	True				
ANR	5248717	CallExpression	"setMode ( MODE_LICENSE_NORMAL , i , argv [ i ] )"		5247246	0					
ANR	5248718	Callee	setMode		5247246	0					
ANR	5248719	Identifier	setMode		5247246	0					
ANR	5248720	ArgumentList	MODE_LICENSE_NORMAL		5247246	1					
ANR	5248721	Argument	MODE_LICENSE_NORMAL		5247246	0					
ANR	5248722	Identifier	MODE_LICENSE_NORMAL		5247246	0					
ANR	5248723	Argument	i		5247246	1					
ANR	5248724	Identifier	i		5247246	0					
ANR	5248725	Argument	argv [ i ]		5247246	2					
ANR	5248726	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248727	Identifier	argv		5247246	0					
ANR	5248728	Identifier	i		5247246	1					
ANR	5248729	ElseStatement	else		5247246	0					
ANR	5248730	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-storage"" , 4 ) )"		5247246	0					
ANR	5248731	Condition	"matchPrefix ( argv [ i ] , ""-storage"" , 4 )"	717:6:22159:22194	5247246	0	True				
ANR	5248732	CallExpression	"matchPrefix ( argv [ i ] , ""-storage"" , 4 )"		5247246	0					
ANR	5248733	Callee	matchPrefix		5247246	0					
ANR	5248734	Identifier	matchPrefix		5247246	0					
ANR	5248735	ArgumentList	argv [ i ]		5247246	1					
ANR	5248736	Argument	argv [ i ]		5247246	0					
ANR	5248737	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248738	Identifier	argv		5247246	0					
ANR	5248739	Identifier	i		5247246	1					
ANR	5248740	Argument	"""-storage"""		5247246	1					
ANR	5248741	PrimaryExpression	"""-storage"""		5247246	0					
ANR	5248742	Argument	4		5247246	2					
ANR	5248743	PrimaryExpression	4		5247246	0					
ANR	5248744	CompoundStatement		211:44:6586:6586	5247246	1					
ANR	5248745	ExpressionStatement	"setMode ( MODE_STORAGE_NORMAL , i , argv [ i ] )"	718:3:22202:22243	5247246	0	True				
ANR	5248746	CallExpression	"setMode ( MODE_STORAGE_NORMAL , i , argv [ i ] )"		5247246	0					
ANR	5248747	Callee	setMode		5247246	0					
ANR	5248748	Identifier	setMode		5247246	0					
ANR	5248749	ArgumentList	MODE_STORAGE_NORMAL		5247246	1					
ANR	5248750	Argument	MODE_STORAGE_NORMAL		5247246	0					
ANR	5248751	Identifier	MODE_STORAGE_NORMAL		5247246	0					
ANR	5248752	Argument	i		5247246	1					
ANR	5248753	Identifier	i		5247246	0					
ANR	5248754	Argument	argv [ i ]		5247246	2					
ANR	5248755	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248756	Identifier	argv		5247246	0					
ANR	5248757	Identifier	i		5247246	1					
ANR	5248758	ElseStatement	else		5247246	0					
ANR	5248759	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-negotiator"" , 2 ) )"		5247246	0					
ANR	5248760	Condition	"matchPrefix ( argv [ i ] , ""-negotiator"" , 2 )"	720:6:22260:22298	5247246	0	True				
ANR	5248761	CallExpression	"matchPrefix ( argv [ i ] , ""-negotiator"" , 2 )"		5247246	0					
ANR	5248762	Callee	matchPrefix		5247246	0					
ANR	5248763	Identifier	matchPrefix		5247246	0					
ANR	5248764	ArgumentList	argv [ i ]		5247246	1					
ANR	5248765	Argument	argv [ i ]		5247246	0					
ANR	5248766	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248767	Identifier	argv		5247246	0					
ANR	5248768	Identifier	i		5247246	1					
ANR	5248769	Argument	"""-negotiator"""		5247246	1					
ANR	5248770	PrimaryExpression	"""-negotiator"""		5247246	0					
ANR	5248771	Argument	2		5247246	2					
ANR	5248772	PrimaryExpression	2		5247246	0					
ANR	5248773	CompoundStatement		214:47:6690:6690	5247246	1					
ANR	5248774	ExpressionStatement	"setMode ( MODE_NEGOTIATOR_NORMAL , i , argv [ i ] )"	721:3:22306:22350	5247246	0	True				
ANR	5248775	CallExpression	"setMode ( MODE_NEGOTIATOR_NORMAL , i , argv [ i ] )"		5247246	0					
ANR	5248776	Callee	setMode		5247246	0					
ANR	5248777	Identifier	setMode		5247246	0					
ANR	5248778	ArgumentList	MODE_NEGOTIATOR_NORMAL		5247246	1					
ANR	5248779	Argument	MODE_NEGOTIATOR_NORMAL		5247246	0					
ANR	5248780	Identifier	MODE_NEGOTIATOR_NORMAL		5247246	0					
ANR	5248781	Argument	i		5247246	1					
ANR	5248782	Identifier	i		5247246	0					
ANR	5248783	Argument	argv [ i ]		5247246	2					
ANR	5248784	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248785	Identifier	argv		5247246	0					
ANR	5248786	Identifier	i		5247246	1					
ANR	5248787	ElseStatement	else		5247246	0					
ANR	5248788	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-generic"" , 3 ) )"		5247246	0					
ANR	5248789	Condition	"matchPrefix ( argv [ i ] , ""-generic"" , 3 )"	723:6:22367:22402	5247246	0	True				
ANR	5248790	CallExpression	"matchPrefix ( argv [ i ] , ""-generic"" , 3 )"		5247246	0					
ANR	5248791	Callee	matchPrefix		5247246	0					
ANR	5248792	Identifier	matchPrefix		5247246	0					
ANR	5248793	ArgumentList	argv [ i ]		5247246	1					
ANR	5248794	Argument	argv [ i ]		5247246	0					
ANR	5248795	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248796	Identifier	argv		5247246	0					
ANR	5248797	Identifier	i		5247246	1					
ANR	5248798	Argument	"""-generic"""		5247246	1					
ANR	5248799	PrimaryExpression	"""-generic"""		5247246	0					
ANR	5248800	Argument	3		5247246	2					
ANR	5248801	PrimaryExpression	3		5247246	0					
ANR	5248802	CompoundStatement		217:44:6794:6794	5247246	1					
ANR	5248803	ExpressionStatement	"setMode ( MODE_GENERIC_NORMAL , i , argv [ i ] )"	724:3:22410:22451	5247246	0	True				
ANR	5248804	CallExpression	"setMode ( MODE_GENERIC_NORMAL , i , argv [ i ] )"		5247246	0					
ANR	5248805	Callee	setMode		5247246	0					
ANR	5248806	Identifier	setMode		5247246	0					
ANR	5248807	ArgumentList	MODE_GENERIC_NORMAL		5247246	1					
ANR	5248808	Argument	MODE_GENERIC_NORMAL		5247246	0					
ANR	5248809	Identifier	MODE_GENERIC_NORMAL		5247246	0					
ANR	5248810	Argument	i		5247246	1					
ANR	5248811	Identifier	i		5247246	0					
ANR	5248812	Argument	argv [ i ]		5247246	2					
ANR	5248813	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248814	Identifier	argv		5247246	0					
ANR	5248815	Identifier	i		5247246	1					
ANR	5248816	ElseStatement	else		5247246	0					
ANR	5248817	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-any"" , 3 ) )"		5247246	0					
ANR	5248818	Condition	"matchPrefix ( argv [ i ] , ""-any"" , 3 )"	726:6:22468:22499	5247246	0	True				
ANR	5248819	CallExpression	"matchPrefix ( argv [ i ] , ""-any"" , 3 )"		5247246	0					
ANR	5248820	Callee	matchPrefix		5247246	0					
ANR	5248821	Identifier	matchPrefix		5247246	0					
ANR	5248822	ArgumentList	argv [ i ]		5247246	1					
ANR	5248823	Argument	argv [ i ]		5247246	0					
ANR	5248824	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248825	Identifier	argv		5247246	0					
ANR	5248826	Identifier	i		5247246	1					
ANR	5248827	Argument	"""-any"""		5247246	1					
ANR	5248828	PrimaryExpression	"""-any"""		5247246	0					
ANR	5248829	Argument	3		5247246	2					
ANR	5248830	PrimaryExpression	3		5247246	0					
ANR	5248831	CompoundStatement		220:40:6891:6891	5247246	1					
ANR	5248832	ExpressionStatement	"setMode ( MODE_ANY_NORMAL , i , argv [ i ] )"	727:3:22507:22544	5247246	0	True				
ANR	5248833	CallExpression	"setMode ( MODE_ANY_NORMAL , i , argv [ i ] )"		5247246	0					
ANR	5248834	Callee	setMode		5247246	0					
ANR	5248835	Identifier	setMode		5247246	0					
ANR	5248836	ArgumentList	MODE_ANY_NORMAL		5247246	1					
ANR	5248837	Argument	MODE_ANY_NORMAL		5247246	0					
ANR	5248838	Identifier	MODE_ANY_NORMAL		5247246	0					
ANR	5248839	Argument	i		5247246	1					
ANR	5248840	Identifier	i		5247246	0					
ANR	5248841	Argument	argv [ i ]		5247246	2					
ANR	5248842	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248843	Identifier	argv		5247246	0					
ANR	5248844	Identifier	i		5247246	1					
ANR	5248845	ElseStatement	else		5247246	0					
ANR	5248846	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-sort"" , 3 ) )"		5247246	0					
ANR	5248847	Condition	"matchPrefix ( argv [ i ] , ""-sort"" , 3 )"	729:6:22561:22593	5247246	0	True				
ANR	5248848	CallExpression	"matchPrefix ( argv [ i ] , ""-sort"" , 3 )"		5247246	0					
ANR	5248849	Callee	matchPrefix		5247246	0					
ANR	5248850	Identifier	matchPrefix		5247246	0					
ANR	5248851	ArgumentList	argv [ i ]		5247246	1					
ANR	5248852	Argument	argv [ i ]		5247246	0					
ANR	5248853	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248854	Identifier	argv		5247246	0					
ANR	5248855	Identifier	i		5247246	1					
ANR	5248856	Argument	"""-sort"""		5247246	1					
ANR	5248857	PrimaryExpression	"""-sort"""		5247246	0					
ANR	5248858	Argument	3		5247246	2					
ANR	5248859	PrimaryExpression	3		5247246	0					
ANR	5248860	CompoundStatement		232:3:7209:7227	5247246	1					
ANR	5248861	ExpressionStatement	i ++	730:3:22601:22604	5247246	0	True				
ANR	5248862	PostIncDecOperationExpression	i ++		5247246	0					
ANR	5248863	Identifier	i		5247246	0					
ANR	5248864	IncDec	++		5247246	1					
ANR	5248865	IfStatement	if ( ! argv [ i ] )		5247246	1					
ANR	5248866	Condition	! argv [ i ]	731:7:22613:22621	5247246	0	True				
ANR	5248867	UnaryOperationExpression	! argv [ i ]		5247246	0					
ANR	5248868	UnaryOperator	!		5247246	0					
ANR	5248869	ArrayIndexing	argv [ i ]		5247246	1					
ANR	5248870	Identifier	argv		5247246	0					
ANR	5248871	Identifier	i		5247246	1					
ANR	5248872	CompoundStatement		225:19:7014:7014	5247246	1					
ANR	5248873	ExpressionStatement	"fprintf ( stderr , ""%s: -sort requires another argument\\n"" , myName )"	732:4:22631:22704	5247246	0	True				
ANR	5248874	CallExpression	"fprintf ( stderr , ""%s: -sort requires another argument\\n"" , myName )"		5247246	0					
ANR	5248875	Callee	fprintf		5247246	0					
ANR	5248876	Identifier	fprintf		5247246	0					
ANR	5248877	ArgumentList	stderr		5247246	1					
ANR	5248878	Argument	stderr		5247246	0					
ANR	5248879	Identifier	stderr		5247246	0					
ANR	5248880	Argument	"""%s: -sort requires another argument\\n"""		5247246	1					
ANR	5248881	PrimaryExpression	"""%s: -sort requires another argument\\n"""		5247246	0					
ANR	5248882	Argument	myName		5247246	2					
ANR	5248883	Identifier	myName		5247246	0					
ANR	5248884	ExpressionStatement	"fprintf ( stderr , ""Use \\""%s -help\\"" for details\\n"" , myName )"	734:4:22710:22769	5247246	1	True				
ANR	5248885	CallExpression	"fprintf ( stderr , ""Use \\""%s -help\\"" for details\\n"" , myName )"		5247246	0					
ANR	5248886	Callee	fprintf		5247246	0					
ANR	5248887	Identifier	fprintf		5247246	0					
ANR	5248888	ArgumentList	stderr		5247246	1					
ANR	5248889	Argument	stderr		5247246	0					
ANR	5248890	Identifier	stderr		5247246	0					
ANR	5248891	Argument	"""Use \\""%s -help\\"" for details\\n"""		5247246	1					
ANR	5248892	PrimaryExpression	"""Use \\""%s -help\\"" for details\\n"""		5247246	0					
ANR	5248893	Argument	myName		5247246	2					
ANR	5248894	Identifier	myName		5247246	0					
ANR	5248895	ExpressionStatement	exit ( 1 )	735:4:22775:22784	5247246	2	True				
ANR	5248896	CallExpression	exit ( 1 )		5247246	0					
ANR	5248897	Callee	exit		5247246	0					
ANR	5248898	Identifier	exit		5247246	0					
ANR	5248899	ArgumentList	1		5247246	1					
ANR	5248900	Argument	1		5247246	0					
ANR	5248901	PrimaryExpression	1		5247246	0					
ANR	5248902	IdentifierDeclStatement	char exprString [ 1024 ] ;	737:3:22794:22815	5247246	2	True				
ANR	5248903	IdentifierDecl	exprString [ 1024 ]		5247246	0					
ANR	5248904	IdentifierDeclType	char [ 1024 ]		5247246	0					
ANR	5248905	Identifier	exprString		5247246	1					
ANR	5248906	PrimaryExpression	1024		5247246	2					
ANR	5248907	IdentifierDeclStatement	ExprTree * sortExpr ;	738:3:22820:22838	5247246	3	True				
ANR	5248908	IdentifierDecl	* sortExpr		5247246	0					
ANR	5248909	IdentifierDeclType	ExprTree *		5247246	0					
ANR	5248910	Identifier	sortExpr		5247246	1					
ANR	5248911	ExpressionStatement	exprString [ 0 ] = '\\0'	739:3:22843:22863	5247246	4	True				
ANR	5248912	AssignmentExpression	exprString [ 0 ] = '\\0'		5247246	0		=			
ANR	5248913	ArrayIndexing	exprString [ 0 ]		5247246	0					
ANR	5248914	Identifier	exprString		5247246	0					
ANR	5248915	PrimaryExpression	0		5247246	1					
ANR	5248916	PrimaryExpression	'\\0'		5247246	1					
ANR	5248917	ExpressionStatement	"sprintf ( exprString , ""MY.%s < TARGET.%s"" , argv [ i ] , argv [ i ] )"	740:3:22868:22928	5247246	5	True				
ANR	5248918	CallExpression	"sprintf ( exprString , ""MY.%s < TARGET.%s"" , argv [ i ] , argv [ i ] )"		5247246	0					
ANR	5248919	Callee	sprintf		5247246	0					
ANR	5248920	Identifier	sprintf		5247246	0					
ANR	5248921	ArgumentList	exprString		5247246	1					
ANR	5248922	Argument	exprString		5247246	0					
ANR	5248923	Identifier	exprString		5247246	0					
ANR	5248924	Argument	"""MY.%s < TARGET.%s"""		5247246	1					
ANR	5248925	PrimaryExpression	"""MY.%s < TARGET.%s"""		5247246	0					
ANR	5248926	Argument	argv [ i ]		5247246	2					
ANR	5248927	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248928	Identifier	argv		5247246	0					
ANR	5248929	Identifier	i		5247246	1					
ANR	5248930	Argument	argv [ i ]		5247246	3					
ANR	5248931	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248932	Identifier	argv		5247246	0					
ANR	5248933	Identifier	i		5247246	1					
ANR	5248934	IfStatement	"if ( ParseClassAdRvalExpr ( exprString , sortExpr ) )"		5247246	6					
ANR	5248935	Condition	"ParseClassAdRvalExpr ( exprString , sortExpr )"	741:7:22937:22980	5247246	0	True				
ANR	5248936	CallExpression	"ParseClassAdRvalExpr ( exprString , sortExpr )"		5247246	0					
ANR	5248937	Callee	ParseClassAdRvalExpr		5247246	0					
ANR	5248938	Identifier	ParseClassAdRvalExpr		5247246	0					
ANR	5248939	ArgumentList	exprString		5247246	1					
ANR	5248940	Argument	exprString		5247246	0					
ANR	5248941	Identifier	exprString		5247246	0					
ANR	5248942	Argument	sortExpr		5247246	1					
ANR	5248943	Identifier	sortExpr		5247246	0					
ANR	5248944	CompoundStatement		235:54:7373:7373	5247246	1					
ANR	5248945	ExpressionStatement	"fprintf ( stderr , ""Error:  Parse error of: %s\\n"" , exprString )"	742:4:22990:23051	5247246	0	True				
ANR	5248946	CallExpression	"fprintf ( stderr , ""Error:  Parse error of: %s\\n"" , exprString )"		5247246	0					
ANR	5248947	Callee	fprintf		5247246	0					
ANR	5248948	Identifier	fprintf		5247246	0					
ANR	5248949	ArgumentList	stderr		5247246	1					
ANR	5248950	Argument	stderr		5247246	0					
ANR	5248951	Identifier	stderr		5247246	0					
ANR	5248952	Argument	"""Error:  Parse error of: %s\\n"""		5247246	1					
ANR	5248953	PrimaryExpression	"""Error:  Parse error of: %s\\n"""		5247246	0					
ANR	5248954	Argument	exprString		5247246	2					
ANR	5248955	Identifier	exprString		5247246	0					
ANR	5248956	ExpressionStatement	exit ( 1 )	743:4:23057:23066	5247246	1	True				
ANR	5248957	CallExpression	exit ( 1 )		5247246	0					
ANR	5248958	Callee	exit		5247246	0					
ANR	5248959	Identifier	exit		5247246	0					
ANR	5248960	ArgumentList	1		5247246	1					
ANR	5248961	Argument	1		5247246	0					
ANR	5248962	PrimaryExpression	1		5247246	0					
ANR	5248963	ExpressionStatement	sortLessThanExprs [ sortLessThanExprs . getlast ( ) + 1 ] = sortExpr	745:3:23076:23135	5247246	7	True				
ANR	5248964	AssignmentExpression	sortLessThanExprs [ sortLessThanExprs . getlast ( ) + 1 ] = sortExpr		5247246	0		=			
ANR	5248965	ArrayIndexing	sortLessThanExprs [ sortLessThanExprs . getlast ( ) + 1 ]		5247246	0					
ANR	5248966	Identifier	sortLessThanExprs		5247246	0					
ANR	5248967	AdditiveExpression	sortLessThanExprs . getlast ( ) + 1		5247246	1		+			
ANR	5248968	CallExpression	sortLessThanExprs . getlast ( )		5247246	0					
ANR	5248969	Callee	sortLessThanExprs . getlast		5247246	0					
ANR	5248970	MemberAccess	sortLessThanExprs . getlast		5247246	0					
ANR	5248971	Identifier	sortLessThanExprs		5247246	0					
ANR	5248972	Identifier	getlast		5247246	1					
ANR	5248973	ArgumentList			5247246	1					
ANR	5248974	PrimaryExpression	1		5247246	1					
ANR	5248975	Identifier	sortExpr		5247246	1					
ANR	5248976	ExpressionStatement	"sprintf ( exprString , ""MY.%s == TARGET.%s"" , argv [ i ] , argv [ i ] )"	746:3:23140:23201	5247246	8	True				
ANR	5248977	CallExpression	"sprintf ( exprString , ""MY.%s == TARGET.%s"" , argv [ i ] , argv [ i ] )"		5247246	0					
ANR	5248978	Callee	sprintf		5247246	0					
ANR	5248979	Identifier	sprintf		5247246	0					
ANR	5248980	ArgumentList	exprString		5247246	1					
ANR	5248981	Argument	exprString		5247246	0					
ANR	5248982	Identifier	exprString		5247246	0					
ANR	5248983	Argument	"""MY.%s == TARGET.%s"""		5247246	1					
ANR	5248984	PrimaryExpression	"""MY.%s == TARGET.%s"""		5247246	0					
ANR	5248985	Argument	argv [ i ]		5247246	2					
ANR	5248986	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248987	Identifier	argv		5247246	0					
ANR	5248988	Identifier	i		5247246	1					
ANR	5248989	Argument	argv [ i ]		5247246	3					
ANR	5248990	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5248991	Identifier	argv		5247246	0					
ANR	5248992	Identifier	i		5247246	1					
ANR	5248993	IfStatement	"if ( ParseClassAdRvalExpr ( exprString , sortExpr ) )"		5247246	9					
ANR	5248994	Condition	"ParseClassAdRvalExpr ( exprString , sortExpr )"	747:7:23210:23253	5247246	0	True				
ANR	5248995	CallExpression	"ParseClassAdRvalExpr ( exprString , sortExpr )"		5247246	0					
ANR	5248996	Callee	ParseClassAdRvalExpr		5247246	0					
ANR	5248997	Identifier	ParseClassAdRvalExpr		5247246	0					
ANR	5248998	ArgumentList	exprString		5247246	1					
ANR	5248999	Argument	exprString		5247246	0					
ANR	5249000	Identifier	exprString		5247246	0					
ANR	5249001	Argument	sortExpr		5247246	1					
ANR	5249002	Identifier	sortExpr		5247246	0					
ANR	5249003	CompoundStatement		241:54:7646:7646	5247246	1					
ANR	5249004	ExpressionStatement	"fprintf ( stderr , ""Error:  Parse error of: %s\\n"" , exprString )"	748:4:23263:23324	5247246	0	True				
ANR	5249005	CallExpression	"fprintf ( stderr , ""Error:  Parse error of: %s\\n"" , exprString )"		5247246	0					
ANR	5249006	Callee	fprintf		5247246	0					
ANR	5249007	Identifier	fprintf		5247246	0					
ANR	5249008	ArgumentList	stderr		5247246	1					
ANR	5249009	Argument	stderr		5247246	0					
ANR	5249010	Identifier	stderr		5247246	0					
ANR	5249011	Argument	"""Error:  Parse error of: %s\\n"""		5247246	1					
ANR	5249012	PrimaryExpression	"""Error:  Parse error of: %s\\n"""		5247246	0					
ANR	5249013	Argument	exprString		5247246	2					
ANR	5249014	Identifier	exprString		5247246	0					
ANR	5249015	ExpressionStatement	exit ( 1 )	749:4:23330:23339	5247246	1	True				
ANR	5249016	CallExpression	exit ( 1 )		5247246	0					
ANR	5249017	Callee	exit		5247246	0					
ANR	5249018	Identifier	exit		5247246	0					
ANR	5249019	ArgumentList	1		5247246	1					
ANR	5249020	Argument	1		5247246	0					
ANR	5249021	PrimaryExpression	1		5247246	0					
ANR	5249022	ExpressionStatement	sortEqualExprs [ sortEqualExprs . getlast ( ) + 1 ] = sortExpr	751:3:23349:23402	5247246	10	True				
ANR	5249023	AssignmentExpression	sortEqualExprs [ sortEqualExprs . getlast ( ) + 1 ] = sortExpr		5247246	0		=			
ANR	5249024	ArrayIndexing	sortEqualExprs [ sortEqualExprs . getlast ( ) + 1 ]		5247246	0					
ANR	5249025	Identifier	sortEqualExprs		5247246	0					
ANR	5249026	AdditiveExpression	sortEqualExprs . getlast ( ) + 1		5247246	1		+			
ANR	5249027	CallExpression	sortEqualExprs . getlast ( )		5247246	0					
ANR	5249028	Callee	sortEqualExprs . getlast		5247246	0					
ANR	5249029	MemberAccess	sortEqualExprs . getlast		5247246	0					
ANR	5249030	Identifier	sortEqualExprs		5247246	0					
ANR	5249031	Identifier	getlast		5247246	1					
ANR	5249032	ArgumentList			5247246	1					
ANR	5249033	PrimaryExpression	1		5247246	1					
ANR	5249034	Identifier	sortExpr		5247246	1					
ANR	5249035	ElseStatement	else		5247246	0					
ANR	5249036	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-submitters"" , 5 ) )"		5247246	0					
ANR	5249037	Condition	"matchPrefix ( argv [ i ] , ""-submitters"" , 5 )"	756:6:23534:23572	5247246	0	True				
ANR	5249038	CallExpression	"matchPrefix ( argv [ i ] , ""-submitters"" , 5 )"		5247246	0					
ANR	5249039	Callee	matchPrefix		5247246	0					
ANR	5249040	Identifier	matchPrefix		5247246	0					
ANR	5249041	ArgumentList	argv [ i ]		5247246	1					
ANR	5249042	Argument	argv [ i ]		5247246	0					
ANR	5249043	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5249044	Identifier	argv		5247246	0					
ANR	5249045	Identifier	i		5247246	1					
ANR	5249046	Argument	"""-submitters"""		5247246	1					
ANR	5249047	PrimaryExpression	"""-submitters"""		5247246	0					
ANR	5249048	Argument	5		5247246	2					
ANR	5249049	PrimaryExpression	5		5247246	0					
ANR	5249050	CompoundStatement		250:47:7964:7964	5247246	1					
ANR	5249051	ExpressionStatement	"setMode ( MODE_SCHEDD_SUBMITTORS , i , argv [ i ] )"	757:3:23580:23624	5247246	0	True				
ANR	5249052	CallExpression	"setMode ( MODE_SCHEDD_SUBMITTORS , i , argv [ i ] )"		5247246	0					
ANR	5249053	Callee	setMode		5247246	0					
ANR	5249054	Identifier	setMode		5247246	0					
ANR	5249055	ArgumentList	MODE_SCHEDD_SUBMITTORS		5247246	1					
ANR	5249056	Argument	MODE_SCHEDD_SUBMITTORS		5247246	0					
ANR	5249057	Identifier	MODE_SCHEDD_SUBMITTORS		5247246	0					
ANR	5249058	Argument	i		5247246	1					
ANR	5249059	Identifier	i		5247246	0					
ANR	5249060	Argument	argv [ i ]		5247246	2					
ANR	5249061	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5249062	Identifier	argv		5247246	0					
ANR	5249063	Identifier	i		5247246	1					
ANR	5249064	ElseStatement	else		5247246	0					
ANR	5249065	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-master"" , 2 ) )"		5247246	0					
ANR	5249066	Condition	"matchPrefix ( argv [ i ] , ""-master"" , 2 )"	759:6:23641:23675	5247246	0	True				
ANR	5249067	CallExpression	"matchPrefix ( argv [ i ] , ""-master"" , 2 )"		5247246	0					
ANR	5249068	Callee	matchPrefix		5247246	0					
ANR	5249069	Identifier	matchPrefix		5247246	0					
ANR	5249070	ArgumentList	argv [ i ]		5247246	1					
ANR	5249071	Argument	argv [ i ]		5247246	0					
ANR	5249072	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5249073	Identifier	argv		5247246	0					
ANR	5249074	Identifier	i		5247246	1					
ANR	5249075	Argument	"""-master"""		5247246	1					
ANR	5249076	PrimaryExpression	"""-master"""		5247246	0					
ANR	5249077	Argument	2		5247246	2					
ANR	5249078	PrimaryExpression	2		5247246	0					
ANR	5249079	CompoundStatement		253:43:8067:8067	5247246	1					
ANR	5249080	ExpressionStatement	"setMode ( MODE_MASTER_NORMAL , i , argv [ i ] )"	760:3:23683:23723	5247246	0	True				
ANR	5249081	CallExpression	"setMode ( MODE_MASTER_NORMAL , i , argv [ i ] )"		5247246	0					
ANR	5249082	Callee	setMode		5247246	0					
ANR	5249083	Identifier	setMode		5247246	0					
ANR	5249084	ArgumentList	MODE_MASTER_NORMAL		5247246	1					
ANR	5249085	Argument	MODE_MASTER_NORMAL		5247246	0					
ANR	5249086	Identifier	MODE_MASTER_NORMAL		5247246	0					
ANR	5249087	Argument	i		5247246	1					
ANR	5249088	Identifier	i		5247246	0					
ANR	5249089	Argument	argv [ i ]		5247246	2					
ANR	5249090	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5249091	Identifier	argv		5247246	0					
ANR	5249092	Identifier	i		5247246	1					
ANR	5249093	ElseStatement	else		5247246	0					
ANR	5249094	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-collector"" , 4 ) )"		5247246	0					
ANR	5249095	Condition	"matchPrefix ( argv [ i ] , ""-collector"" , 4 )"	762:6:23740:23777	5247246	0	True				
ANR	5249096	CallExpression	"matchPrefix ( argv [ i ] , ""-collector"" , 4 )"		5247246	0					
ANR	5249097	Callee	matchPrefix		5247246	0					
ANR	5249098	Identifier	matchPrefix		5247246	0					
ANR	5249099	ArgumentList	argv [ i ]		5247246	1					
ANR	5249100	Argument	argv [ i ]		5247246	0					
ANR	5249101	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5249102	Identifier	argv		5247246	0					
ANR	5249103	Identifier	i		5247246	1					
ANR	5249104	Argument	"""-collector"""		5247246	1					
ANR	5249105	PrimaryExpression	"""-collector"""		5247246	0					
ANR	5249106	Argument	4		5247246	2					
ANR	5249107	PrimaryExpression	4		5247246	0					
ANR	5249108	CompoundStatement		256:46:8169:8169	5247246	1					
ANR	5249109	ExpressionStatement	"setMode ( MODE_COLLECTOR_NORMAL , i , argv [ i ] )"	763:3:23785:23828	5247246	0	True				
ANR	5249110	CallExpression	"setMode ( MODE_COLLECTOR_NORMAL , i , argv [ i ] )"		5247246	0					
ANR	5249111	Callee	setMode		5247246	0					
ANR	5249112	Identifier	setMode		5247246	0					
ANR	5249113	ArgumentList	MODE_COLLECTOR_NORMAL		5247246	1					
ANR	5249114	Argument	MODE_COLLECTOR_NORMAL		5247246	0					
ANR	5249115	Identifier	MODE_COLLECTOR_NORMAL		5247246	0					
ANR	5249116	Argument	i		5247246	1					
ANR	5249117	Identifier	i		5247246	0					
ANR	5249118	Argument	argv [ i ]		5247246	2					
ANR	5249119	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5249120	Identifier	argv		5247246	0					
ANR	5249121	Identifier	i		5247246	1					
ANR	5249122	ElseStatement	else		5247246	0					
ANR	5249123	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-world"" , 2 ) )"		5247246	0					
ANR	5249124	Condition	"matchPrefix ( argv [ i ] , ""-world"" , 2 )"	765:6:23845:23878	5247246	0	True				
ANR	5249125	CallExpression	"matchPrefix ( argv [ i ] , ""-world"" , 2 )"		5247246	0					
ANR	5249126	Callee	matchPrefix		5247246	0					
ANR	5249127	Identifier	matchPrefix		5247246	0					
ANR	5249128	ArgumentList	argv [ i ]		5247246	1					
ANR	5249129	Argument	argv [ i ]		5247246	0					
ANR	5249130	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5249131	Identifier	argv		5247246	0					
ANR	5249132	Identifier	i		5247246	1					
ANR	5249133	Argument	"""-world"""		5247246	1					
ANR	5249134	PrimaryExpression	"""-world"""		5247246	0					
ANR	5249135	Argument	2		5247246	2					
ANR	5249136	PrimaryExpression	2		5247246	0					
ANR	5249137	CompoundStatement		259:42:8270:8270	5247246	1					
ANR	5249138	ExpressionStatement	"setMode ( MODE_COLLECTOR_NORMAL , i , argv [ i ] )"	766:3:23886:23929	5247246	0	True				
ANR	5249139	CallExpression	"setMode ( MODE_COLLECTOR_NORMAL , i , argv [ i ] )"		5247246	0					
ANR	5249140	Callee	setMode		5247246	0					
ANR	5249141	Identifier	setMode		5247246	0					
ANR	5249142	ArgumentList	MODE_COLLECTOR_NORMAL		5247246	1					
ANR	5249143	Argument	MODE_COLLECTOR_NORMAL		5247246	0					
ANR	5249144	Identifier	MODE_COLLECTOR_NORMAL		5247246	0					
ANR	5249145	Argument	i		5247246	1					
ANR	5249146	Identifier	i		5247246	0					
ANR	5249147	Argument	argv [ i ]		5247246	2					
ANR	5249148	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5249149	Identifier	argv		5247246	0					
ANR	5249150	Identifier	i		5247246	1					
ANR	5249151	ElseStatement	else		5247246	0					
ANR	5249152	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-ckptsrvr"" , 3 ) )"		5247246	0					
ANR	5249153	Condition	"matchPrefix ( argv [ i ] , ""-ckptsrvr"" , 3 )"	768:6:23946:23982	5247246	0	True				
ANR	5249154	CallExpression	"matchPrefix ( argv [ i ] , ""-ckptsrvr"" , 3 )"		5247246	0					
ANR	5249155	Callee	matchPrefix		5247246	0					
ANR	5249156	Identifier	matchPrefix		5247246	0					
ANR	5249157	ArgumentList	argv [ i ]		5247246	1					
ANR	5249158	Argument	argv [ i ]		5247246	0					
ANR	5249159	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5249160	Identifier	argv		5247246	0					
ANR	5249161	Identifier	i		5247246	1					
ANR	5249162	Argument	"""-ckptsrvr"""		5247246	1					
ANR	5249163	PrimaryExpression	"""-ckptsrvr"""		5247246	0					
ANR	5249164	Argument	3		5247246	2					
ANR	5249165	PrimaryExpression	3		5247246	0					
ANR	5249166	CompoundStatement		262:45:8374:8374	5247246	1					
ANR	5249167	ExpressionStatement	"setMode ( MODE_CKPT_SRVR_NORMAL , i , argv [ i ] )"	769:3:23990:24033	5247246	0	True				
ANR	5249168	CallExpression	"setMode ( MODE_CKPT_SRVR_NORMAL , i , argv [ i ] )"		5247246	0					
ANR	5249169	Callee	setMode		5247246	0					
ANR	5249170	Identifier	setMode		5247246	0					
ANR	5249171	ArgumentList	MODE_CKPT_SRVR_NORMAL		5247246	1					
ANR	5249172	Argument	MODE_CKPT_SRVR_NORMAL		5247246	0					
ANR	5249173	Identifier	MODE_CKPT_SRVR_NORMAL		5247246	0					
ANR	5249174	Argument	i		5247246	1					
ANR	5249175	Identifier	i		5247246	0					
ANR	5249176	Argument	argv [ i ]		5247246	2					
ANR	5249177	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5249178	Identifier	argv		5247246	0					
ANR	5249179	Identifier	i		5247246	1					
ANR	5249180	ElseStatement	else		5247246	0					
ANR	5249181	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-total"" , 2 ) )"		5247246	0					
ANR	5249182	Condition	"matchPrefix ( argv [ i ] , ""-total"" , 2 )"	771:6:24050:24083	5247246	0	True				
ANR	5249183	CallExpression	"matchPrefix ( argv [ i ] , ""-total"" , 2 )"		5247246	0					
ANR	5249184	Callee	matchPrefix		5247246	0					
ANR	5249185	Identifier	matchPrefix		5247246	0					
ANR	5249186	ArgumentList	argv [ i ]		5247246	1					
ANR	5249187	Argument	argv [ i ]		5247246	0					
ANR	5249188	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5249189	Identifier	argv		5247246	0					
ANR	5249190	Identifier	i		5247246	1					
ANR	5249191	Argument	"""-total"""		5247246	1					
ANR	5249192	PrimaryExpression	"""-total"""		5247246	0					
ANR	5249193	Argument	2		5247246	2					
ANR	5249194	PrimaryExpression	2		5247246	0					
ANR	5249195	CompoundStatement		265:42:8475:8475	5247246	1					
ANR	5249196	ExpressionStatement	wantOnlyTotals = 1	772:3:24091:24109	5247246	0	True				
ANR	5249197	AssignmentExpression	wantOnlyTotals = 1		5247246	0		=			
ANR	5249198	Identifier	wantOnlyTotals		5247246	0					
ANR	5249199	PrimaryExpression	1		5247246	1					
ANR	5249200	ElseStatement	else		5247246	0					
ANR	5249201	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-expert"" , 2 ) )"		5247246	0					
ANR	5249202	Condition	"matchPrefix ( argv [ i ] , ""-expert"" , 2 )"	774:6:24126:24159	5247246	0	True				
ANR	5249203	CallExpression	"matchPrefix ( argv [ i ] , ""-expert"" , 2 )"		5247246	0					
ANR	5249204	Callee	matchPrefix		5247246	0					
ANR	5249205	Identifier	matchPrefix		5247246	0					
ANR	5249206	ArgumentList	argv [ i ]		5247246	1					
ANR	5249207	Argument	argv [ i ]		5247246	0					
ANR	5249208	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5249209	Identifier	argv		5247246	0					
ANR	5249210	Identifier	i		5247246	1					
ANR	5249211	Argument	"""-expert"""		5247246	1					
ANR	5249212	PrimaryExpression	"""-expert"""		5247246	0					
ANR	5249213	Argument	2		5247246	2					
ANR	5249214	PrimaryExpression	2		5247246	0					
ANR	5249215	CompoundStatement		268:42:8551:8551	5247246	1					
ANR	5249216	ExpressionStatement	expert = true	775:3:24167:24180	5247246	0	True				
ANR	5249217	AssignmentExpression	expert = true		5247246	0		=			
ANR	5249218	Identifier	expert		5247246	0					
ANR	5249219	Identifier	true		5247246	1					
ANR	5249220	ElseStatement	else		5247246	0					
ANR	5249221	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-version"" , 4 ) )"		5247246	0					
ANR	5249222	Condition	"matchPrefix ( argv [ i ] , ""-version"" , 4 )"	777:6:24197:24231	5247246	0	True				
ANR	5249223	CallExpression	"matchPrefix ( argv [ i ] , ""-version"" , 4 )"		5247246	0					
ANR	5249224	Callee	matchPrefix		5247246	0					
ANR	5249225	Identifier	matchPrefix		5247246	0					
ANR	5249226	ArgumentList	argv [ i ]		5247246	1					
ANR	5249227	Argument	argv [ i ]		5247246	0					
ANR	5249228	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5249229	Identifier	argv		5247246	0					
ANR	5249230	Identifier	i		5247246	1					
ANR	5249231	Argument	"""-version"""		5247246	1					
ANR	5249232	PrimaryExpression	"""-version"""		5247246	0					
ANR	5249233	Argument	4		5247246	2					
ANR	5249234	PrimaryExpression	4		5247246	0					
ANR	5249235	CompoundStatement		271:43:8623:8623	5247246	1					
ANR	5249236	ExpressionStatement	"printf ( ""%s\\n%s\\n"" , CondorVersion ( ) , CondorPlatform ( ) )"	778:3:24239:24294	5247246	0	True				
ANR	5249237	CallExpression	"printf ( ""%s\\n%s\\n"" , CondorVersion ( ) , CondorPlatform ( ) )"		5247246	0					
ANR	5249238	Callee	printf		5247246	0					
ANR	5249239	Identifier	printf		5247246	0					
ANR	5249240	ArgumentList	"""%s\\n%s\\n"""		5247246	1					
ANR	5249241	Argument	"""%s\\n%s\\n"""		5247246	0					
ANR	5249242	PrimaryExpression	"""%s\\n%s\\n"""		5247246	0					
ANR	5249243	Argument	CondorVersion ( )		5247246	1					
ANR	5249244	CallExpression	CondorVersion ( )		5247246	0					
ANR	5249245	Callee	CondorVersion		5247246	0					
ANR	5249246	Identifier	CondorVersion		5247246	0					
ANR	5249247	ArgumentList			5247246	1					
ANR	5249248	Argument	CondorPlatform ( )		5247246	2					
ANR	5249249	CallExpression	CondorPlatform ( )		5247246	0					
ANR	5249250	Callee	CondorPlatform		5247246	0					
ANR	5249251	Identifier	CondorPlatform		5247246	0					
ANR	5249252	ArgumentList			5247246	1					
ANR	5249253	ExpressionStatement	exit ( 0 )	779:3:24299:24306	5247246	1	True				
ANR	5249254	CallExpression	exit ( 0 )		5247246	0					
ANR	5249255	Callee	exit		5247246	0					
ANR	5249256	Identifier	exit		5247246	0					
ANR	5249257	ArgumentList	0		5247246	1					
ANR	5249258	Argument	0		5247246	0					
ANR	5249259	PrimaryExpression	0		5247246	0					
ANR	5249260	ElseStatement	else		5247246	0					
ANR	5249261	IfStatement	if ( * argv [ i ] == '-' )		5247246	0					
ANR	5249262	Condition	* argv [ i ] == '-'	781:6:24323:24337	5247246	0	True				
ANR	5249263	EqualityExpression	* argv [ i ] == '-'		5247246	0		==			
ANR	5249264	UnaryOperationExpression	* argv [ i ]		5247246	0					
ANR	5249265	UnaryOperator	*		5247246	0					
ANR	5249266	ArrayIndexing	argv [ i ]		5247246	1					
ANR	5249267	Identifier	argv		5247246	0					
ANR	5249268	Identifier	i		5247246	1					
ANR	5249269	PrimaryExpression	'-'		5247246	1					
ANR	5249270	CompoundStatement		275:23:8729:8729	5247246	1					
ANR	5249271	ExpressionStatement	"fprintf ( stderr , ""Error:  Unknown option %s\\n"" , argv [ i ] )"	782:3:24345:24401	5247246	0	True				
ANR	5249272	CallExpression	"fprintf ( stderr , ""Error:  Unknown option %s\\n"" , argv [ i ] )"		5247246	0					
ANR	5249273	Callee	fprintf		5247246	0					
ANR	5249274	Identifier	fprintf		5247246	0					
ANR	5249275	ArgumentList	stderr		5247246	1					
ANR	5249276	Argument	stderr		5247246	0					
ANR	5249277	Identifier	stderr		5247246	0					
ANR	5249278	Argument	"""Error:  Unknown option %s\\n"""		5247246	1					
ANR	5249279	PrimaryExpression	"""Error:  Unknown option %s\\n"""		5247246	0					
ANR	5249280	Argument	argv [ i ]		5247246	2					
ANR	5249281	ArrayIndexing	argv [ i ]		5247246	0					
ANR	5249282	Identifier	argv		5247246	0					
ANR	5249283	Identifier	i		5247246	1					
ANR	5249284	ExpressionStatement	usage ( )	783:3:24406:24414	5247246	1	True				
ANR	5249285	CallExpression	usage ( )		5247246	0					
ANR	5249286	Callee	usage		5247246	0					
ANR	5249287	Identifier	usage		5247246	0					
ANR	5249288	ArgumentList			5247246	1					
ANR	5249289	ExpressionStatement	exit ( 1 )	784:3:24419:24427	5247246	2	True				
ANR	5249290	CallExpression	exit ( 1 )		5247246	0					
ANR	5249291	Callee	exit		5247246	0					
ANR	5249292	Identifier	exit		5247246	0					
ANR	5249293	ArgumentList	1		5247246	1					
ANR	5249294	Argument	1		5247246	0					
ANR	5249295	PrimaryExpression	1		5247246	0					
ANR	5249296	IfStatement	if ( had_pool_error )		5247246	5					
ANR	5249297	Condition	had_pool_error	787:5:24441:24454	5247246	0	True				
ANR	5249298	Identifier	had_pool_error		5247246	0					
ANR	5249299	CompoundStatement		281:22:8847:8847	5247246	1					
ANR	5249300	ExpressionStatement	"fprintf ( stderr , ""Warning:  Multiple -pool arguments given, using \\""%s\\""\\n"" , pool -> name ( ) )"	788:2:24462:24563	5247246	0	True				
ANR	5249301	CallExpression	"fprintf ( stderr , ""Warning:  Multiple -pool arguments given, using \\""%s\\""\\n"" , pool -> name ( ) )"		5247246	0					
ANR	5249302	Callee	fprintf		5247246	0					
ANR	5249303	Identifier	fprintf		5247246	0					
ANR	5249304	ArgumentList	stderr		5247246	1					
ANR	5249305	Argument	stderr		5247246	0					
ANR	5249306	Identifier	stderr		5247246	0					
ANR	5249307	Argument	"""Warning:  Multiple -pool arguments given, using \\""%s\\""\\n"""		5247246	1					
ANR	5249308	PrimaryExpression	"""Warning:  Multiple -pool arguments given, using \\""%s\\""\\n"""		5247246	0					
ANR	5249309	Argument	pool -> name ( )		5247246	2					
ANR	5249310	CallExpression	pool -> name ( )		5247246	0					
ANR	5249311	Callee	pool -> name		5247246	0					
ANR	5249312	PtrMemberAccess	pool -> name		5247246	0					
ANR	5249313	Identifier	pool		5247246	0					
ANR	5249314	Identifier	name		5247246	1					
ANR	5249315	ArgumentList			5247246	1					
ANR	5249316	IfStatement	if ( had_direct_error )		5247246	6					
ANR	5249317	Condition	had_direct_error	792:5:24573:24588	5247246	0	True				
ANR	5249318	Identifier	had_direct_error		5247246	0					
ANR	5249319	CompoundStatement		286:24:8981:8981	5247246	1					
ANR	5249320	ExpressionStatement	"fprintf ( stderr , ""Warning:  Multiple -direct arguments given, using \\""%s\\""\\n"" , direct )"	793:2:24596:24693	5247246	0	True				
ANR	5249321	CallExpression	"fprintf ( stderr , ""Warning:  Multiple -direct arguments given, using \\""%s\\""\\n"" , direct )"		5247246	0					
ANR	5249322	Callee	fprintf		5247246	0					
ANR	5249323	Identifier	fprintf		5247246	0					
ANR	5249324	ArgumentList	stderr		5247246	1					
ANR	5249325	Argument	stderr		5247246	0					
ANR	5249326	Identifier	stderr		5247246	0					
ANR	5249327	Argument	"""Warning:  Multiple -direct arguments given, using \\""%s\\""\\n"""		5247246	1					
ANR	5249328	PrimaryExpression	"""Warning:  Multiple -direct arguments given, using \\""%s\\""\\n"""		5247246	0					
ANR	5249329	Argument	direct		5247246	2					
ANR	5249330	Identifier	direct		5247246	0					
ANR	5249331	IfStatement	if ( had_statistics_error )		5247246	7					
ANR	5249332	Condition	had_statistics_error	797:5:24703:24722	5247246	0	True				
ANR	5249333	Identifier	had_statistics_error		5247246	0					
ANR	5249334	CompoundStatement		291:28:9115:9115	5247246	1					
ANR	5249335	ExpressionStatement	"fprintf ( stderr , ""Warning:  Multiple -statistics arguments given, using \\""%s\\""\\n"" , statistics )"	798:2:24730:24835	5247246	0	True				
ANR	5249336	CallExpression	"fprintf ( stderr , ""Warning:  Multiple -statistics arguments given, using \\""%s\\""\\n"" , statistics )"		5247246	0					
ANR	5249337	Callee	fprintf		5247246	0					
ANR	5249338	Identifier	fprintf		5247246	0					
ANR	5249339	ArgumentList	stderr		5247246	1					
ANR	5249340	Argument	stderr		5247246	0					
ANR	5249341	Identifier	stderr		5247246	0					
ANR	5249342	Argument	"""Warning:  Multiple -statistics arguments given, using \\""%s\\""\\n"""		5247246	1					
ANR	5249343	PrimaryExpression	"""Warning:  Multiple -statistics arguments given, using \\""%s\\""\\n"""		5247246	0					
ANR	5249344	Argument	statistics		5247246	2					
ANR	5249345	Identifier	statistics		5247246	0					
ANR	5249346	ReturnType	void		5247246	1					
ANR	5249347	Identifier	firstPass		5247246	2					
ANR	5249348	ParameterList	"int argc , char * argv [ ]"		5247246	3					
ANR	5249349	Parameter	int argc	506:11:15586:15593	5247246	0	True				
ANR	5249350	ParameterType	int		5247246	0					
ANR	5249351	Identifier	argc		5247246	1					
ANR	5249352	Parameter	char * argv [ ]	506:21:15596:15607	5247246	1	True				
ANR	5249353	ParameterType	char * [ ]		5247246	0					
ANR	5249354	Identifier	argv		5247246	1					
ANR	5249355	CFGEntryNode	ENTRY		5247246		True				
ANR	5249356	CFGExitNode	EXIT		5247246		True				
ANR	5249357	Symbol	PP_STARTD_STATE		5247246						
ANR	5249358	Symbol	expert		5247246						
ANR	5249359	Symbol	* sortEqualExprs . getlast		5247246						
ANR	5249360	Symbol	MODE_CKPT_SRVR_NORMAL		5247246						
ANR	5249361	Symbol	MODE_HAD_NORMAL		5247246						
ANR	5249362	Symbol	MODE_QUILL_NORMAL		5247246						
ANR	5249363	Symbol	p_funcs		5247246						
ANR	5249364	Symbol	* argv		5247246						
ANR	5249365	Symbol	pool -> addr		5247246						
ANR	5249366	Symbol	empty		5247246						
ANR	5249367	Symbol	sortEqualExprs . getlast		5247246						
ANR	5249368	Symbol	* exprString		5247246						
ANR	5249369	Symbol	MODE_STORAGE_NORMAL		5247246						
ANR	5249370	Symbol	MODE_MASTER_NORMAL		5247246						
ANR	5249371	Symbol	CondorVersion		5247246						
ANR	5249372	Symbol	ParseClassAdRvalExpr		5247246						
ANR	5249373	Symbol	myName		5247246						
ANR	5249374	Symbol	MODE_STARTD_COD		5247246						
ANR	5249375	Symbol	* * argv		5247246						
ANR	5249376	Symbol	MODE_ANY_NORMAL		5247246						
ANR	5249377	Symbol	pool -> error		5247246						
ANR	5249378	Symbol	* * i		5247246						
ANR	5249379	Symbol	had_statistics_error		5247246						
ANR	5249380	Symbol	MODE_LICENSE_NORMAL		5247246						
ANR	5249381	Symbol	get_param_functions		5247246						
ANR	5249382	Symbol	MODE_SCHEDD_NORMAL		5247246						
ANR	5249383	Symbol	pool		5247246						
ANR	5249384	Symbol	MODE_SCHEDD_SUBMITTORS		5247246						
ANR	5249385	Symbol	stderr		5247246						
ANR	5249386	Symbol	sortEqualExprs		5247246						
ANR	5249387	Symbol	had_pool_error		5247246						
ANR	5249388	Symbol	sortLessThanExprs . getlast		5247246						
ANR	5249389	Symbol	PP_XML		5247246						
ANR	5249390	Symbol	had_direct_error		5247246						
ANR	5249391	Symbol	MODE_NEGOTIATOR_NORMAL		5247246						
ANR	5249392	Symbol	MODE_GENERIC_NORMAL		5247246						
ANR	5249393	Symbol	sortExpr		5247246						
ANR	5249394	Symbol	javaMode		5247246						
ANR	5249395	Symbol	exprString		5247246						
ANR	5249396	Symbol	true		5247246						
ANR	5249397	Symbol	genericType		5247246						
ANR	5249398	Symbol	sortLessThanExprs		5247246						
ANR	5249399	Symbol	targetAd		5247246						
ANR	5249400	Symbol	PP_VERBOSE		5247246						
ANR	5249401	Symbol	* sortEqualExprs		5247246						
ANR	5249402	Symbol	direct		5247246						
ANR	5249403	Symbol	PP_CUSTOM		5247246						
ANR	5249404	Symbol	argv		5247246						
ANR	5249405	Symbol	MODE_STARTD_AVAIL		5247246						
ANR	5249406	Symbol	MODE_STARTD_NORMAL		5247246						
ANR	5249407	Symbol	targetFile		5247246						
ANR	5249408	Symbol	CondorPlatform		5247246						
ANR	5249409	Symbol	MODE_COLLECTOR_NORMAL		5247246						
ANR	5249410	Symbol	safe_fopen_wrapper_follow		5247246						
ANR	5249411	Symbol	argc		5247246						
ANR	5249412	Symbol	* sortLessThanExprs . getlast		5247246						
ANR	5249413	Symbol	MODE_OTHER		5247246						
ANR	5249414	Symbol	MODE_STARTD_RUN		5247246						
ANR	5249415	Symbol	Termlog		5247246						
ANR	5249416	Symbol	i		5247246						
ANR	5249417	Symbol	MODE_GRID_NORMAL		5247246						
ANR	5249418	Symbol	wantOnlyTotals		5247246						
ANR	5249419	Symbol	iserror		5247246						
ANR	5249420	Symbol	target		5247246						
ANR	5249421	Symbol	iseof		5247246						
ANR	5249422	Symbol	pool -> name		5247246						
ANR	5249423	Symbol	* pool		5247246						
ANR	5249424	Symbol	* i		5247246						
ANR	5249425	Symbol	diagnose		5247246						
ANR	5249426	Symbol	* argv [ i ]		5247246						
ANR	5249427	Symbol	vmMode		5247246						
ANR	5249428	Symbol	matchPrefix		5247246						
ANR	5249429	Symbol	strdup		5247246						
ANR	5249430	Symbol	PP_STARTD_SERVER		5247246						
ANR	5249431	Symbol	* sortLessThanExprs		5247246						
ANR	5249432	Symbol	statistics		5247246						
ANR	5249433	Function	secondPass	805:0:24844:28364							
ANR	5249434	FunctionDef	"secondPass (int argc , char * argv [ ])"		5249433	0					
ANR	5249435	CompoundStatement		807:0:24885:28364	5249433	0					
ANR	5249436	IdentifierDeclStatement	char * daemonname ;	808:1:24888:24904	5249433	0	True				
ANR	5249437	IdentifierDecl	* daemonname		5249433	0					
ANR	5249438	IdentifierDeclType	char *		5249433	0					
ANR	5249439	Identifier	daemonname		5249433	1					
ANR	5249440	ForStatement	for ( int i = 1 ; i < argc ; i ++ )		5249433	1					
ANR	5249441	ForInit	int i = 1 ;	809:6:24912:24921	5249433	0	True				
ANR	5249442	IdentifierDeclStatement	int i = 1 ;		5249433	0					
ANR	5249443	IdentifierDecl	i = 1		5249433	0					
ANR	5249444	IdentifierDeclType	int		5249433	0					
ANR	5249445	Identifier	i		5249433	1					
ANR	5249446	AssignmentExpression	i = 1		5249433	2		=			
ANR	5249447	Identifier	i		5249433	0					
ANR	5249448	PrimaryExpression	1		5249433	1					
ANR	5249449	Condition	i < argc	809:17:24923:24930	5249433	1	True				
ANR	5249450	RelationalExpression	i < argc		5249433	0		<			
ANR	5249451	Identifier	i		5249433	0					
ANR	5249452	Identifier	argc		5249433	1					
ANR	5249453	PostIncDecOperationExpression	i ++	809:27:24933:24935	5249433	2	True				
ANR	5249454	Identifier	i		5249433	0					
ANR	5249455	IncDec	++		5249433	1					
ANR	5249456	CompoundStatement		3:32:52:52	5249433	3					
ANR	5249457	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-pool"" , 2 ) || matchPrefix ( argv [ i ] , ""-direct"" , 4 ) )"		5249433	0					
ANR	5249458	Condition	"matchPrefix ( argv [ i ] , ""-pool"" , 2 ) || matchPrefix ( argv [ i ] , ""-direct"" , 4 )"	811:6:24990:25057	5249433	0	True				
ANR	5249459	OrExpression	"matchPrefix ( argv [ i ] , ""-pool"" , 2 ) || matchPrefix ( argv [ i ] , ""-direct"" , 4 )"		5249433	0		||			
ANR	5249460	CallExpression	"matchPrefix ( argv [ i ] , ""-pool"" , 2 )"		5249433	0					
ANR	5249461	Callee	matchPrefix		5249433	0					
ANR	5249462	Identifier	matchPrefix		5249433	0					
ANR	5249463	ArgumentList	argv [ i ]		5249433	1					
ANR	5249464	Argument	argv [ i ]		5249433	0					
ANR	5249465	ArrayIndexing	argv [ i ]		5249433	0					
ANR	5249466	Identifier	argv		5249433	0					
ANR	5249467	Identifier	i		5249433	1					
ANR	5249468	Argument	"""-pool"""		5249433	1					
ANR	5249469	PrimaryExpression	"""-pool"""		5249433	0					
ANR	5249470	Argument	2		5249433	2					
ANR	5249471	PrimaryExpression	2		5249433	0					
ANR	5249472	CallExpression	"matchPrefix ( argv [ i ] , ""-direct"" , 4 )"		5249433	1					
ANR	5249473	Callee	matchPrefix		5249433	0					
ANR	5249474	Identifier	matchPrefix		5249433	0					
ANR	5249475	ArgumentList	argv [ i ]		5249433	1					
ANR	5249476	Argument	argv [ i ]		5249433	0					
ANR	5249477	ArrayIndexing	argv [ i ]		5249433	0					
ANR	5249478	Identifier	argv		5249433	0					
ANR	5249479	Identifier	i		5249433	1					
ANR	5249480	Argument	"""-direct"""		5249433	1					
ANR	5249481	PrimaryExpression	"""-direct"""		5249433	0					
ANR	5249482	Argument	4		5249433	2					
ANR	5249483	PrimaryExpression	4		5249433	0					
ANR	5249484	CompoundStatement		5:77:175:175	5249433	1					
ANR	5249485	ExpressionStatement	i ++	812:3:25066:25069	5249433	0	True				
ANR	5249486	PostIncDecOperationExpression	i ++		5249433	0					
ANR	5249487	Identifier	i		5249433	0					
ANR	5249488	IncDec	++		5249433	1					
ANR	5249489	ContinueStatement	continue ;	813:3:25074:25082	5249433	1	True				
ANR	5249490	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-subsystem"" , 5 ) )"		5249433	1					
ANR	5249491	Condition	"matchPrefix ( argv [ i ] , ""-subsystem"" , 5 )"	815:6:25094:25129	5249433	0	True				
ANR	5249492	CallExpression	"matchPrefix ( argv [ i ] , ""-subsystem"" , 5 )"		5249433	0					
ANR	5249493	Callee	matchPrefix		5249433	0					
ANR	5249494	Identifier	matchPrefix		5249433	0					
ANR	5249495	ArgumentList	argv [ i ]		5249433	1					
ANR	5249496	Argument	argv [ i ]		5249433	0					
ANR	5249497	ArrayIndexing	argv [ i ]		5249433	0					
ANR	5249498	Identifier	argv		5249433	0					
ANR	5249499	Identifier	i		5249433	1					
ANR	5249500	Argument	"""-subsystem"""		5249433	1					
ANR	5249501	PrimaryExpression	"""-subsystem"""		5249433	0					
ANR	5249502	Argument	5		5249433	2					
ANR	5249503	PrimaryExpression	5		5249433	0					
ANR	5249504	CompoundStatement		9:45:247:247	5249433	1					
ANR	5249505	ExpressionStatement	i ++	816:3:25138:25141	5249433	0	True				
ANR	5249506	PostIncDecOperationExpression	i ++		5249433	0					
ANR	5249507	Identifier	i		5249433	0					
ANR	5249508	IncDec	++		5249433	1					
ANR	5249509	ContinueStatement	continue ;	817:3:25146:25154	5249433	1	True				
ANR	5249510	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-format"" , 2 ) )"		5249433	2					
ANR	5249511	Condition	"matchPrefix ( argv [ i ] , ""-format"" , 2 )"	819:6:25166:25200	5249433	0	True				
ANR	5249512	CallExpression	"matchPrefix ( argv [ i ] , ""-format"" , 2 )"		5249433	0					
ANR	5249513	Callee	matchPrefix		5249433	0					
ANR	5249514	Identifier	matchPrefix		5249433	0					
ANR	5249515	ArgumentList	argv [ i ]		5249433	1					
ANR	5249516	Argument	argv [ i ]		5249433	0					
ANR	5249517	ArrayIndexing	argv [ i ]		5249433	0					
ANR	5249518	Identifier	argv		5249433	0					
ANR	5249519	Identifier	i		5249433	1					
ANR	5249520	Argument	"""-format"""		5249433	1					
ANR	5249521	PrimaryExpression	"""-format"""		5249433	0					
ANR	5249522	Argument	2		5249433	2					
ANR	5249523	PrimaryExpression	2		5249433	0					
ANR	5249524	CompoundStatement		13:43:317:317	5249433	1					
ANR	5249525	ExpressionStatement	"pm . registerFormat ( argv [ i + 1 ] , argv [ i + 2 ] )"	820:3:25208:25248	5249433	0	True				
ANR	5249526	CallExpression	"pm . registerFormat ( argv [ i + 1 ] , argv [ i + 2 ] )"		5249433	0					
ANR	5249527	Callee	pm . registerFormat		5249433	0					
ANR	5249528	MemberAccess	pm . registerFormat		5249433	0					
ANR	5249529	Identifier	pm		5249433	0					
ANR	5249530	Identifier	registerFormat		5249433	1					
ANR	5249531	ArgumentList	argv [ i + 1 ]		5249433	1					
ANR	5249532	Argument	argv [ i + 1 ]		5249433	0					
ANR	5249533	ArrayIndexing	argv [ i + 1 ]		5249433	0					
ANR	5249534	Identifier	argv		5249433	0					
ANR	5249535	AdditiveExpression	i + 1		5249433	1		+			
ANR	5249536	Identifier	i		5249433	0					
ANR	5249537	PrimaryExpression	1		5249433	1					
ANR	5249538	Argument	argv [ i + 2 ]		5249433	1					
ANR	5249539	ArrayIndexing	argv [ i + 2 ]		5249433	0					
ANR	5249540	Identifier	argv		5249433	0					
ANR	5249541	AdditiveExpression	i + 2		5249433	1		+			
ANR	5249542	Identifier	i		5249433	0					
ANR	5249543	PrimaryExpression	2		5249433	1					
ANR	5249544	ExpressionStatement	projList . AppendArg ( argv [ i + 2 ] )	821:3:25253:25282	5249433	1	True				
ANR	5249545	CallExpression	projList . AppendArg ( argv [ i + 2 ] )		5249433	0					
ANR	5249546	Callee	projList . AppendArg		5249433	0					
ANR	5249547	MemberAccess	projList . AppendArg		5249433	0					
ANR	5249548	Identifier	projList		5249433	0					
ANR	5249549	Identifier	AppendArg		5249433	1					
ANR	5249550	ArgumentList	argv [ i + 2 ]		5249433	1					
ANR	5249551	Argument	argv [ i + 2 ]		5249433	0					
ANR	5249552	ArrayIndexing	argv [ i + 2 ]		5249433	0					
ANR	5249553	Identifier	argv		5249433	0					
ANR	5249554	AdditiveExpression	i + 2		5249433	1		+			
ANR	5249555	Identifier	i		5249433	0					
ANR	5249556	PrimaryExpression	2		5249433	1					
ANR	5249557	IfStatement	if ( diagnose )		5249433	2					
ANR	5249558	Condition	diagnose	822:7:25291:25298	5249433	0	True				
ANR	5249559	Identifier	diagnose		5249433	0					
ANR	5249560	CompoundStatement		16:17:415:415	5249433	1					
ANR	5249561	ExpressionStatement	"printf ( ""Arg %d --- register format [%s] for [%s]\\n"" , i , argv [ i + 1 ] , argv [ i + 2 ] )"	823:4:25307:25391	5249433	0	True				
ANR	5249562	CallExpression	"printf ( ""Arg %d --- register format [%s] for [%s]\\n"" , i , argv [ i + 1 ] , argv [ i + 2 ] )"		5249433	0					
ANR	5249563	Callee	printf		5249433	0					
ANR	5249564	Identifier	printf		5249433	0					
ANR	5249565	ArgumentList	"""Arg %d --- register format [%s] for [%s]\\n"""		5249433	1					
ANR	5249566	Argument	"""Arg %d --- register format [%s] for [%s]\\n"""		5249433	0					
ANR	5249567	PrimaryExpression	"""Arg %d --- register format [%s] for [%s]\\n"""		5249433	0					
ANR	5249568	Argument	i		5249433	1					
ANR	5249569	Identifier	i		5249433	0					
ANR	5249570	Argument	argv [ i + 1 ]		5249433	2					
ANR	5249571	ArrayIndexing	argv [ i + 1 ]		5249433	0					
ANR	5249572	Identifier	argv		5249433	0					
ANR	5249573	AdditiveExpression	i + 1		5249433	1		+			
ANR	5249574	Identifier	i		5249433	0					
ANR	5249575	PrimaryExpression	1		5249433	1					
ANR	5249576	Argument	argv [ i + 2 ]		5249433	3					
ANR	5249577	ArrayIndexing	argv [ i + 2 ]		5249433	0					
ANR	5249578	Identifier	argv		5249433	0					
ANR	5249579	AdditiveExpression	i + 2		5249433	1		+			
ANR	5249580	Identifier	i		5249433	0					
ANR	5249581	PrimaryExpression	2		5249433	1					
ANR	5249582	ExpressionStatement	i += 2	826:3:25401:25407	5249433	3	True				
ANR	5249583	AssignmentExpression	i += 2		5249433	0		+=			
ANR	5249584	Identifier	i		5249433	0					
ANR	5249585	PrimaryExpression	2		5249433	1					
ANR	5249586	ContinueStatement	continue ;	827:3:25412:25420	5249433	4	True				
ANR	5249587	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-target"" , 2 ) )"		5249433	3					
ANR	5249588	Condition	"matchPrefix ( argv [ i ] , ""-target"" , 2 )"	829:6:25432:25466	5249433	0	True				
ANR	5249589	CallExpression	"matchPrefix ( argv [ i ] , ""-target"" , 2 )"		5249433	0					
ANR	5249590	Callee	matchPrefix		5249433	0					
ANR	5249591	Identifier	matchPrefix		5249433	0					
ANR	5249592	ArgumentList	argv [ i ]		5249433	1					
ANR	5249593	Argument	argv [ i ]		5249433	0					
ANR	5249594	ArrayIndexing	argv [ i ]		5249433	0					
ANR	5249595	Identifier	argv		5249433	0					
ANR	5249596	Identifier	i		5249433	1					
ANR	5249597	Argument	"""-target"""		5249433	1					
ANR	5249598	PrimaryExpression	"""-target"""		5249433	0					
ANR	5249599	Argument	2		5249433	2					
ANR	5249600	PrimaryExpression	2		5249433	0					
ANR	5249601	CompoundStatement		23:43:583:583	5249433	1					
ANR	5249602	ExpressionStatement	i += 2	830:3:25474:25480	5249433	0	True				
ANR	5249603	AssignmentExpression	i += 2		5249433	0		+=			
ANR	5249604	Identifier	i		5249433	0					
ANR	5249605	PrimaryExpression	2		5249433	1					
ANR	5249606	ContinueStatement	continue ;	831:3:25485:25493	5249433	1	True				
ANR	5249607	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-sort"" , 3 ) )"		5249433	4					
ANR	5249608	Condition	"matchPrefix ( argv [ i ] , ""-sort"" , 3 )"	833:6:25505:25536	5249433	0	True				
ANR	5249609	CallExpression	"matchPrefix ( argv [ i ] , ""-sort"" , 3 )"		5249433	0					
ANR	5249610	Callee	matchPrefix		5249433	0					
ANR	5249611	Identifier	matchPrefix		5249433	0					
ANR	5249612	ArgumentList	argv [ i ]		5249433	1					
ANR	5249613	Argument	argv [ i ]		5249433	0					
ANR	5249614	ArrayIndexing	argv [ i ]		5249433	0					
ANR	5249615	Identifier	argv		5249433	0					
ANR	5249616	Identifier	i		5249433	1					
ANR	5249617	Argument	"""-sort"""		5249433	1					
ANR	5249618	PrimaryExpression	"""-sort"""		5249433	0					
ANR	5249619	Argument	3		5249433	2					
ANR	5249620	PrimaryExpression	3		5249433	0					
ANR	5249621	CompoundStatement		27:41:654:654	5249433	1					
ANR	5249622	ExpressionStatement	i ++	834:3:25545:25548	5249433	0	True				
ANR	5249623	PostIncDecOperationExpression	i ++		5249433	0					
ANR	5249624	Identifier	i		5249433	0					
ANR	5249625	IncDec	++		5249433	1					
ANR	5249626	ExpressionStatement	"sprintf ( buffer , ""%s =!= UNDEFINED"" , argv [ i ] )"	835:3:25553:25599	5249433	1	True				
ANR	5249627	CallExpression	"sprintf ( buffer , ""%s =!= UNDEFINED"" , argv [ i ] )"		5249433	0					
ANR	5249628	Callee	sprintf		5249433	0					
ANR	5249629	Identifier	sprintf		5249433	0					
ANR	5249630	ArgumentList	buffer		5249433	1					
ANR	5249631	Argument	buffer		5249433	0					
ANR	5249632	Identifier	buffer		5249433	0					
ANR	5249633	Argument	"""%s =!= UNDEFINED"""		5249433	1					
ANR	5249634	PrimaryExpression	"""%s =!= UNDEFINED"""		5249433	0					
ANR	5249635	Argument	argv [ i ]		5249433	2					
ANR	5249636	ArrayIndexing	argv [ i ]		5249433	0					
ANR	5249637	Identifier	argv		5249433	0					
ANR	5249638	Identifier	i		5249433	1					
ANR	5249639	ExpressionStatement	query -> addANDConstraint ( buffer )	836:3:25604:25637	5249433	2	True				
ANR	5249640	CallExpression	query -> addANDConstraint ( buffer )		5249433	0					
ANR	5249641	Callee	query -> addANDConstraint		5249433	0					
ANR	5249642	PtrMemberAccess	query -> addANDConstraint		5249433	0					
ANR	5249643	Identifier	query		5249433	0					
ANR	5249644	Identifier	addANDConstraint		5249433	1					
ANR	5249645	ArgumentList	buffer		5249433	1					
ANR	5249646	Argument	buffer		5249433	0					
ANR	5249647	Identifier	buffer		5249433	0					
ANR	5249648	ContinueStatement	continue ;	837:3:25642:25650	5249433	3	True				
ANR	5249649	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-statistics"" , 6 ) )"		5249433	5					
ANR	5249650	Condition	"matchPrefix ( argv [ i ] , ""-statistics"" , 6 )"	840:6:25665:25703	5249433	0	True				
ANR	5249651	CallExpression	"matchPrefix ( argv [ i ] , ""-statistics"" , 6 )"		5249433	0					
ANR	5249652	Callee	matchPrefix		5249433	0					
ANR	5249653	Identifier	matchPrefix		5249433	0					
ANR	5249654	ArgumentList	argv [ i ]		5249433	1					
ANR	5249655	Argument	argv [ i ]		5249433	0					
ANR	5249656	ArrayIndexing	argv [ i ]		5249433	0					
ANR	5249657	Identifier	argv		5249433	0					
ANR	5249658	Identifier	i		5249433	1					
ANR	5249659	Argument	"""-statistics"""		5249433	1					
ANR	5249660	PrimaryExpression	"""-statistics"""		5249433	0					
ANR	5249661	Argument	6		5249433	2					
ANR	5249662	PrimaryExpression	6		5249433	0					
ANR	5249663	CompoundStatement		34:47:820:820	5249433	1					
ANR	5249664	ExpressionStatement	i += 2	841:3:25711:25717	5249433	0	True				
ANR	5249665	AssignmentExpression	i += 2		5249433	0		+=			
ANR	5249666	Identifier	i		5249433	0					
ANR	5249667	PrimaryExpression	2		5249433	1					
ANR	5249668	ExpressionStatement	"sprintf ( buffer , ""STATISTICS_TO_PUBLISH = \\""%s\\"""" , statistics )"	842:12:25731:25791	5249433	1	True				
ANR	5249669	CallExpression	"sprintf ( buffer , ""STATISTICS_TO_PUBLISH = \\""%s\\"""" , statistics )"		5249433	0					
ANR	5249670	Callee	sprintf		5249433	0					
ANR	5249671	Identifier	sprintf		5249433	0					
ANR	5249672	ArgumentList	buffer		5249433	1					
ANR	5249673	Argument	buffer		5249433	0					
ANR	5249674	Identifier	buffer		5249433	0					
ANR	5249675	Argument	"""STATISTICS_TO_PUBLISH = \\""%s\\"""""		5249433	1					
ANR	5249676	PrimaryExpression	"""STATISTICS_TO_PUBLISH = \\""%s\\"""""		5249433	0					
ANR	5249677	Argument	statistics		5249433	2					
ANR	5249678	Identifier	statistics		5249433	0					
ANR	5249679	IfStatement	if ( diagnose )		5249433	2					
ANR	5249680	Condition	diagnose	843:16:25809:25816	5249433	0	True				
ANR	5249681	Identifier	diagnose		5249433	0					
ANR	5249682	CompoundStatement		37:26:933:933	5249433	1					
ANR	5249683	ExpressionStatement	"printf ( ""[%s]\\n"" , buffer )"	844:15:25836:25861	5249433	0	True				
ANR	5249684	CallExpression	"printf ( ""[%s]\\n"" , buffer )"		5249433	0					
ANR	5249685	Callee	printf		5249433	0					
ANR	5249686	Identifier	printf		5249433	0					
ANR	5249687	ArgumentList	"""[%s]\\n"""		5249433	1					
ANR	5249688	Argument	"""[%s]\\n"""		5249433	0					
ANR	5249689	PrimaryExpression	"""[%s]\\n"""		5249433	0					
ANR	5249690	Argument	buffer		5249433	1					
ANR	5249691	Identifier	buffer		5249433	0					
ANR	5249692	ExpressionStatement	query -> addExtraAttribute ( buffer )	846:12:25892:25924	5249433	3	True				
ANR	5249693	CallExpression	query -> addExtraAttribute ( buffer )		5249433	0					
ANR	5249694	Callee	query -> addExtraAttribute		5249433	0					
ANR	5249695	PtrMemberAccess	query -> addExtraAttribute		5249433	0					
ANR	5249696	Identifier	query		5249433	0					
ANR	5249697	Identifier	addExtraAttribute		5249433	1					
ANR	5249698	ArgumentList	buffer		5249433	1					
ANR	5249699	Argument	buffer		5249433	0					
ANR	5249700	Identifier	buffer		5249433	0					
ANR	5249701	ContinueStatement	continue ;	847:12:25938:25946	5249433	4	True				
ANR	5249702	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-attributes"" , 3 ) )"		5249433	6					
ANR	5249703	Condition	"matchPrefix ( argv [ i ] , ""-attributes"" , 3 )"	850:6:25965:26003	5249433	0	True				
ANR	5249704	CallExpression	"matchPrefix ( argv [ i ] , ""-attributes"" , 3 )"		5249433	0					
ANR	5249705	Callee	matchPrefix		5249433	0					
ANR	5249706	Identifier	matchPrefix		5249433	0					
ANR	5249707	ArgumentList	argv [ i ]		5249433	1					
ANR	5249708	Argument	argv [ i ]		5249433	0					
ANR	5249709	ArrayIndexing	argv [ i ]		5249433	0					
ANR	5249710	Identifier	argv		5249433	0					
ANR	5249711	Identifier	i		5249433	1					
ANR	5249712	Argument	"""-attributes"""		5249433	1					
ANR	5249713	PrimaryExpression	"""-attributes"""		5249433	0					
ANR	5249714	Argument	3		5249433	2					
ANR	5249715	PrimaryExpression	3		5249433	0					
ANR	5249716	CompoundStatement		47:3:1230:1243	5249433	1					
ANR	5249717	IdentifierDeclStatement	"StringList more_attrs ( argv [ i + 1 ] , "","" ) ;"	852:3:26075:26111	5249433	0	True				
ANR	5249718	IdentifierDecl	"more_attrs ( argv [ i + 1 ] , "","" )"		5249433	0					
ANR	5249719	IdentifierDeclType	StringList		5249433	0					
ANR	5249720	Identifier	more_attrs		5249433	1					
ANR	5249721	Expression	"argv [ i + 1 ] , "","""		5249433	2					
ANR	5249722	ArrayIndexing	argv [ i + 1 ]		5249433	0					
ANR	5249723	Identifier	argv		5249433	0					
ANR	5249724	AdditiveExpression	i + 1		5249433	1		+			
ANR	5249725	Identifier	i		5249433	0					
ANR	5249726	PrimaryExpression	1		5249433	1					
ANR	5249727	PrimaryExpression	""","""		5249433	1					
ANR	5249728	IdentifierDeclStatement	char const * s ;	853:3:26116:26129	5249433	1	True				
ANR	5249729	IdentifierDecl	* s		5249433	0					
ANR	5249730	IdentifierDeclType	char const *		5249433	0					
ANR	5249731	Identifier	s		5249433	1					
ANR	5249732	ExpressionStatement	more_attrs . rewind ( )	854:3:26134:26153	5249433	2	True				
ANR	5249733	CallExpression	more_attrs . rewind ( )		5249433	0					
ANR	5249734	Callee	more_attrs . rewind		5249433	0					
ANR	5249735	MemberAccess	more_attrs . rewind		5249433	0					
ANR	5249736	Identifier	more_attrs		5249433	0					
ANR	5249737	Identifier	rewind		5249433	1					
ANR	5249738	ArgumentList			5249433	1					
ANR	5249739	WhileStatement	while ( ( s = more_attrs . next ( ) ) )		5249433	3					
ANR	5249740	Condition	s = more_attrs . next ( )	855:10:26165:26185	5249433	0	True				
ANR	5249741	AssignmentExpression	s = more_attrs . next ( )		5249433	0		=			
ANR	5249742	Identifier	s		5249433	0					
ANR	5249743	CallExpression	more_attrs . next ( )		5249433	1					
ANR	5249744	Callee	more_attrs . next		5249433	0					
ANR	5249745	MemberAccess	more_attrs . next		5249433	0					
ANR	5249746	Identifier	more_attrs		5249433	0					
ANR	5249747	Identifier	next		5249433	1					
ANR	5249748	ArgumentList			5249433	1					
ANR	5249749	CompoundStatement		49:34:1303:1303	5249433	1					
ANR	5249750	ExpressionStatement	projList . AppendArg ( s )	856:4:26195:26216	5249433	0	True				
ANR	5249751	CallExpression	projList . AppendArg ( s )		5249433	0					
ANR	5249752	Callee	projList . AppendArg		5249433	0					
ANR	5249753	MemberAccess	projList . AppendArg		5249433	0					
ANR	5249754	Identifier	projList		5249433	0					
ANR	5249755	Identifier	AppendArg		5249433	1					
ANR	5249756	ArgumentList	s		5249433	1					
ANR	5249757	Argument	s		5249433	0					
ANR	5249758	Identifier	s		5249433	0					
ANR	5249759	ExpressionStatement	i += 2	858:3:26226:26232	5249433	4	True				
ANR	5249760	AssignmentExpression	i += 2		5249433	0		+=			
ANR	5249761	Identifier	i		5249433	0					
ANR	5249762	PrimaryExpression	2		5249433	1					
ANR	5249763	ContinueStatement	continue ;	859:3:26237:26245	5249433	5	True				
ANR	5249764	IfStatement	if ( * argv [ i ] != '-' )		5249433	7					
ANR	5249765	Condition	* argv [ i ] != '-'	865:6:26314:26328	5249433	0	True				
ANR	5249766	EqualityExpression	* argv [ i ] != '-'		5249433	0		!=			
ANR	5249767	UnaryOperationExpression	* argv [ i ]		5249433	0					
ANR	5249768	UnaryOperator	*		5249433	0					
ANR	5249769	ArrayIndexing	argv [ i ]		5249433	1					
ANR	5249770	Identifier	argv		5249433	0					
ANR	5249771	Identifier	i		5249433	1					
ANR	5249772	PrimaryExpression	'-'		5249433	1					
ANR	5249773	CompoundStatement		59:23:1445:1445	5249433	1					
ANR	5249774	IfStatement	if ( diagnose )		5249433	0					
ANR	5249775	Condition	diagnose	867:7:26386:26393	5249433	0	True				
ANR	5249776	Identifier	diagnose		5249433	0					
ANR	5249777	CompoundStatement		61:17:1510:1510	5249433	1					
ANR	5249778	ExpressionStatement	"printf ( ""Arg %d (%s) --- adding constraint"" , i , argv [ i ] )"	868:4:26402:26458	5249433	0	True				
ANR	5249779	CallExpression	"printf ( ""Arg %d (%s) --- adding constraint"" , i , argv [ i ] )"		5249433	0					
ANR	5249780	Callee	printf		5249433	0					
ANR	5249781	Identifier	printf		5249433	0					
ANR	5249782	ArgumentList	"""Arg %d (%s) --- adding constraint"""		5249433	1					
ANR	5249783	Argument	"""Arg %d (%s) --- adding constraint"""		5249433	0					
ANR	5249784	PrimaryExpression	"""Arg %d (%s) --- adding constraint"""		5249433	0					
ANR	5249785	Argument	i		5249433	1					
ANR	5249786	Identifier	i		5249433	0					
ANR	5249787	Argument	argv [ i ]		5249433	2					
ANR	5249788	ArrayIndexing	argv [ i ]		5249433	0					
ANR	5249789	Identifier	argv		5249433	0					
ANR	5249790	Identifier	i		5249433	1					
ANR	5249791	IfStatement	if ( ! ( daemonname = get_daemon_name ( argv [ i ] ) ) )		5249433	1					
ANR	5249792	Condition	! ( daemonname = get_daemon_name ( argv [ i ] ) )	871:7:26473:26512	5249433	0	True				
ANR	5249793	UnaryOperationExpression	! ( daemonname = get_daemon_name ( argv [ i ] ) )		5249433	0					
ANR	5249794	UnaryOperator	!		5249433	0					
ANR	5249795	AssignmentExpression	daemonname = get_daemon_name ( argv [ i ] )		5249433	1		=			
ANR	5249796	Identifier	daemonname		5249433	0					
ANR	5249797	CallExpression	get_daemon_name ( argv [ i ] )		5249433	1					
ANR	5249798	Callee	get_daemon_name		5249433	0					
ANR	5249799	Identifier	get_daemon_name		5249433	0					
ANR	5249800	ArgumentList	argv [ i ]		5249433	1					
ANR	5249801	Argument	argv [ i ]		5249433	0					
ANR	5249802	ArrayIndexing	argv [ i ]		5249433	0					
ANR	5249803	Identifier	argv		5249433	0					
ANR	5249804	Identifier	i		5249433	1					
ANR	5249805	CompoundStatement		65:50:1630:1630	5249433	1					
ANR	5249806	IfStatement	"if ( ( mode == MODE_SCHEDD_SUBMITTORS ) && strchr ( argv [ i ] , '@' ) )"		5249433	0					
ANR	5249807	Condition	"( mode == MODE_SCHEDD_SUBMITTORS ) && strchr ( argv [ i ] , '@' )"	872:9:26527:26579	5249433	0	True				
ANR	5249808	AndExpression	"( mode == MODE_SCHEDD_SUBMITTORS ) && strchr ( argv [ i ] , '@' )"		5249433	0		&&			
ANR	5249809	EqualityExpression	mode == MODE_SCHEDD_SUBMITTORS		5249433	0		==			
ANR	5249810	Identifier	mode		5249433	0					
ANR	5249811	Identifier	MODE_SCHEDD_SUBMITTORS		5249433	1					
ANR	5249812	CallExpression	"strchr ( argv [ i ] , '@' )"		5249433	1					
ANR	5249813	Callee	strchr		5249433	0					
ANR	5249814	Identifier	strchr		5249433	0					
ANR	5249815	ArgumentList	argv [ i ]		5249433	1					
ANR	5249816	Argument	argv [ i ]		5249433	0					
ANR	5249817	ArrayIndexing	argv [ i ]		5249433	0					
ANR	5249818	Identifier	argv		5249433	0					
ANR	5249819	Identifier	i		5249433	1					
ANR	5249820	Argument	'@'		5249433	1					
ANR	5249821	PrimaryExpression	'@'		5249433	0					
ANR	5249822	CompoundStatement		66:65:1697:1697	5249433	1					
ANR	5249823	ExpressionStatement	daemonname = strnewp ( argv [ i ] )	879:5:26930:26959	5249433	0	True				
ANR	5249824	AssignmentExpression	daemonname = strnewp ( argv [ i ] )		5249433	0		=			
ANR	5249825	Identifier	daemonname		5249433	0					
ANR	5249826	CallExpression	strnewp ( argv [ i ] )		5249433	1					
ANR	5249827	Callee	strnewp		5249433	0					
ANR	5249828	Identifier	strnewp		5249433	0					
ANR	5249829	ArgumentList	argv [ i ]		5249433	1					
ANR	5249830	Argument	argv [ i ]		5249433	0					
ANR	5249831	ArrayIndexing	argv [ i ]		5249433	0					
ANR	5249832	Identifier	argv		5249433	0					
ANR	5249833	Identifier	i		5249433	1					
ANR	5249834	ElseStatement	else		5249433	0					
ANR	5249835	CompoundStatement		74:11:2086:2086	5249433	0					
ANR	5249836	ExpressionStatement	"fprintf ( stderr , ""%s: unknown host %s\\n"" , argv [ 0 ] , get_host_part ( argv [ i ] ) )"	881:5:26979:27063	5249433	0	True				
ANR	5249837	CallExpression	"fprintf ( stderr , ""%s: unknown host %s\\n"" , argv [ 0 ] , get_host_part ( argv [ i ] ) )"		5249433	0					
ANR	5249838	Callee	fprintf		5249433	0					
ANR	5249839	Identifier	fprintf		5249433	0					
ANR	5249840	ArgumentList	stderr		5249433	1					
ANR	5249841	Argument	stderr		5249433	0					
ANR	5249842	Identifier	stderr		5249433	0					
ANR	5249843	Argument	"""%s: unknown host %s\\n"""		5249433	1					
ANR	5249844	PrimaryExpression	"""%s: unknown host %s\\n"""		5249433	0					
ANR	5249845	Argument	argv [ 0 ]		5249433	2					
ANR	5249846	ArrayIndexing	argv [ 0 ]		5249433	0					
ANR	5249847	Identifier	argv		5249433	0					
ANR	5249848	PrimaryExpression	0		5249433	1					
ANR	5249849	Argument	get_host_part ( argv [ i ] )		5249433	3					
ANR	5249850	CallExpression	get_host_part ( argv [ i ] )		5249433	0					
ANR	5249851	Callee	get_host_part		5249433	0					
ANR	5249852	Identifier	get_host_part		5249433	0					
ANR	5249853	ArgumentList	argv [ i ]		5249433	1					
ANR	5249854	Argument	argv [ i ]		5249433	0					
ANR	5249855	ArrayIndexing	argv [ i ]		5249433	0					
ANR	5249856	Identifier	argv		5249433	0					
ANR	5249857	Identifier	i		5249433	1					
ANR	5249858	ExpressionStatement	exit ( 1 )	883:5:27070:27077	5249433	1	True				
ANR	5249859	CallExpression	exit ( 1 )		5249433	0					
ANR	5249860	Callee	exit		5249433	0					
ANR	5249861	Identifier	exit		5249433	0					
ANR	5249862	ArgumentList	1		5249433	1					
ANR	5249863	Argument	1		5249433	0					
ANR	5249864	PrimaryExpression	1		5249433	0					
ANR	5249865	SwitchStatement	switch ( mode )		5249433	2					
ANR	5249866	Condition	mode	887:11:27102:27105	5249433	0	True				
ANR	5249867	Identifier	mode		5249433	0					
ANR	5249868	CompoundStatement		81:17:2222:2222	5249433	1					
ANR	5249869	Label	case MODE_STARTD_NORMAL :	888:5:27115:27138	5249433	0	True				
ANR	5249870	Identifier	MODE_STARTD_NORMAL		5249433	0					
ANR	5249871	Label	case MODE_STARTD_COD :	889:5:27145:27165	5249433	1	True				
ANR	5249872	Identifier	MODE_STARTD_COD		5249433	0					
ANR	5249873	Label	case MODE_QUILL_NORMAL :	891:5:27199:27221	5249433	2	True				
ANR	5249874	Identifier	MODE_QUILL_NORMAL		5249433	0					
ANR	5249875	Label	case MODE_SCHEDD_NORMAL :	893:5:27261:27284	5249433	3	True				
ANR	5249876	Identifier	MODE_SCHEDD_NORMAL		5249433	0					
ANR	5249877	Label	case MODE_SCHEDD_SUBMITTORS :	894:5:27291:27318	5249433	4	True				
ANR	5249878	Identifier	MODE_SCHEDD_SUBMITTORS		5249433	0					
ANR	5249879	Label	case MODE_MASTER_NORMAL :	895:5:27325:27348	5249433	5	True				
ANR	5249880	Identifier	MODE_MASTER_NORMAL		5249433	0					
ANR	5249881	Label	case MODE_COLLECTOR_NORMAL :	896:5:27355:27381	5249433	6	True				
ANR	5249882	Identifier	MODE_COLLECTOR_NORMAL		5249433	0					
ANR	5249883	Label	case MODE_CKPT_SRVR_NORMAL :	897:5:27388:27414	5249433	7	True				
ANR	5249884	Identifier	MODE_CKPT_SRVR_NORMAL		5249433	0					
ANR	5249885	Label	case MODE_NEGOTIATOR_NORMAL :	898:5:27421:27448	5249433	8	True				
ANR	5249886	Identifier	MODE_NEGOTIATOR_NORMAL		5249433	0					
ANR	5249887	Label	case MODE_STORAGE_NORMAL :	899:5:27455:27479	5249433	9	True				
ANR	5249888	Identifier	MODE_STORAGE_NORMAL		5249433	0					
ANR	5249889	Label	case MODE_ANY_NORMAL :	900:5:27486:27506	5249433	10	True				
ANR	5249890	Identifier	MODE_ANY_NORMAL		5249433	0					
ANR	5249891	Label	case MODE_GENERIC_NORMAL :	901:5:27513:27537	5249433	11	True				
ANR	5249892	Identifier	MODE_GENERIC_NORMAL		5249433	0					
ANR	5249893	Label	case MODE_STARTD_AVAIL :	902:5:27544:27566	5249433	12	True				
ANR	5249894	Identifier	MODE_STARTD_AVAIL		5249433	0					
ANR	5249895	Label	case MODE_OTHER :	903:5:27573:27588	5249433	13	True				
ANR	5249896	Identifier	MODE_OTHER		5249433	0					
ANR	5249897	Label	case MODE_GRID_NORMAL :	904:5:27595:27616	5249433	14	True				
ANR	5249898	Identifier	MODE_GRID_NORMAL		5249433	0					
ANR	5249899	Label	case MODE_HAD_NORMAL :	905:5:27623:27643	5249433	15	True				
ANR	5249900	Identifier	MODE_HAD_NORMAL		5249433	0					
ANR	5249901	ExpressionStatement	"sprintf ( buffer , ""(%s==\\""%s\\"") || (%s==\\""%s\\"")"" , ATTR_NAME , daemonname , ATTR_MACHINE , daemonname )"	906:6:27651:27753	5249433	16	True				
ANR	5249902	CallExpression	"sprintf ( buffer , ""(%s==\\""%s\\"") || (%s==\\""%s\\"")"" , ATTR_NAME , daemonname , ATTR_MACHINE , daemonname )"		5249433	0					
ANR	5249903	Callee	sprintf		5249433	0					
ANR	5249904	Identifier	sprintf		5249433	0					
ANR	5249905	ArgumentList	buffer		5249433	1					
ANR	5249906	Argument	buffer		5249433	0					
ANR	5249907	Identifier	buffer		5249433	0					
ANR	5249908	Argument	"""(%s==\\""%s\\"") || (%s==\\""%s\\"")"""		5249433	1					
ANR	5249909	PrimaryExpression	"""(%s==\\""%s\\"") || (%s==\\""%s\\"")"""		5249433	0					
ANR	5249910	Argument	ATTR_NAME		5249433	2					
ANR	5249911	Identifier	ATTR_NAME		5249433	0					
ANR	5249912	Argument	daemonname		5249433	3					
ANR	5249913	Identifier	daemonname		5249433	0					
ANR	5249914	Argument	ATTR_MACHINE		5249433	4					
ANR	5249915	Identifier	ATTR_MACHINE		5249433	0					
ANR	5249916	Argument	daemonname		5249433	5					
ANR	5249917	Identifier	daemonname		5249433	0					
ANR	5249918	IfStatement	if ( diagnose )		5249433	17					
ANR	5249919	Condition	diagnose	908:8:27763:27770	5249433	0	True				
ANR	5249920	Identifier	diagnose		5249433	0					
ANR	5249921	CompoundStatement		102:18:2887:2887	5249433	1					
ANR	5249922	ExpressionStatement	"printf ( ""[%s]\\n"" , buffer )"	909:5:27780:27805	5249433	0	True				
ANR	5249923	CallExpression	"printf ( ""[%s]\\n"" , buffer )"		5249433	0					
ANR	5249924	Callee	printf		5249433	0					
ANR	5249925	Identifier	printf		5249433	0					
ANR	5249926	ArgumentList	"""[%s]\\n"""		5249433	1					
ANR	5249927	Argument	"""[%s]\\n"""		5249433	0					
ANR	5249928	PrimaryExpression	"""[%s]\\n"""		5249433	0					
ANR	5249929	Argument	buffer		5249433	1					
ANR	5249930	Identifier	buffer		5249433	0					
ANR	5249931	ExpressionStatement	query -> addORConstraint ( buffer )	911:4:27817:27848	5249433	18	True				
ANR	5249932	CallExpression	query -> addORConstraint ( buffer )		5249433	0					
ANR	5249933	Callee	query -> addORConstraint		5249433	0					
ANR	5249934	PtrMemberAccess	query -> addORConstraint		5249433	0					
ANR	5249935	Identifier	query		5249433	0					
ANR	5249936	Identifier	addORConstraint		5249433	1					
ANR	5249937	ArgumentList	buffer		5249433	1					
ANR	5249938	Argument	buffer		5249433	0					
ANR	5249939	Identifier	buffer		5249433	0					
ANR	5249940	BreakStatement	break ;	912:4:27854:27859	5249433	19	True				
ANR	5249941	Label	case MODE_STARTD_RUN :	914:5:27867:27887	5249433	20	True				
ANR	5249942	Identifier	MODE_STARTD_RUN		5249433	0					
ANR	5249943	ExpressionStatement	"sprintf ( buffer , ""%s == \\""%s\\"""" , ATTR_REMOTE_USER , argv [ i ] )"	915:4:27893:27949	5249433	21	True				
ANR	5249944	CallExpression	"sprintf ( buffer , ""%s == \\""%s\\"""" , ATTR_REMOTE_USER , argv [ i ] )"		5249433	0					
ANR	5249945	Callee	sprintf		5249433	0					
ANR	5249946	Identifier	sprintf		5249433	0					
ANR	5249947	ArgumentList	buffer		5249433	1					
ANR	5249948	Argument	buffer		5249433	0					
ANR	5249949	Identifier	buffer		5249433	0					
ANR	5249950	Argument	"""%s == \\""%s\\"""""		5249433	1					
ANR	5249951	PrimaryExpression	"""%s == \\""%s\\"""""		5249433	0					
ANR	5249952	Argument	ATTR_REMOTE_USER		5249433	2					
ANR	5249953	Identifier	ATTR_REMOTE_USER		5249433	0					
ANR	5249954	Argument	argv [ i ]		5249433	3					
ANR	5249955	ArrayIndexing	argv [ i ]		5249433	0					
ANR	5249956	Identifier	argv		5249433	0					
ANR	5249957	Identifier	i		5249433	1					
ANR	5249958	IfStatement	if ( diagnose )		5249433	22					
ANR	5249959	Condition	diagnose	916:8:27959:27966	5249433	0	True				
ANR	5249960	Identifier	diagnose		5249433	0					
ANR	5249961	CompoundStatement		110:18:3083:3083	5249433	1					
ANR	5249962	ExpressionStatement	"printf ( ""[%s]\\n"" , buffer )"	917:5:27976:28001	5249433	0	True				
ANR	5249963	CallExpression	"printf ( ""[%s]\\n"" , buffer )"		5249433	0					
ANR	5249964	Callee	printf		5249433	0					
ANR	5249965	Identifier	printf		5249433	0					
ANR	5249966	ArgumentList	"""[%s]\\n"""		5249433	1					
ANR	5249967	Argument	"""[%s]\\n"""		5249433	0					
ANR	5249968	PrimaryExpression	"""[%s]\\n"""		5249433	0					
ANR	5249969	Argument	buffer		5249433	1					
ANR	5249970	Identifier	buffer		5249433	0					
ANR	5249971	ExpressionStatement	query -> addORConstraint ( buffer )	919:4:28013:28044	5249433	23	True				
ANR	5249972	CallExpression	query -> addORConstraint ( buffer )		5249433	0					
ANR	5249973	Callee	query -> addORConstraint		5249433	0					
ANR	5249974	PtrMemberAccess	query -> addORConstraint		5249433	0					
ANR	5249975	Identifier	query		5249433	0					
ANR	5249976	Identifier	addORConstraint		5249433	1					
ANR	5249977	ArgumentList	buffer		5249433	1					
ANR	5249978	Argument	buffer		5249433	0					
ANR	5249979	Identifier	buffer		5249433	0					
ANR	5249980	BreakStatement	break ;	920:4:28050:28055	5249433	24	True				
ANR	5249981	Label	default :	922:5:28063:28070	5249433	25	True				
ANR	5249982	Identifier	default		5249433	0					
ANR	5249983	ExpressionStatement	"fprintf ( stderr , ""Error: Don't know how to process %s\\n"" , argv [ i ] )"	923:4:28076:28139	5249433	26	True				
ANR	5249984	CallExpression	"fprintf ( stderr , ""Error: Don't know how to process %s\\n"" , argv [ i ] )"		5249433	0					
ANR	5249985	Callee	fprintf		5249433	0					
ANR	5249986	Identifier	fprintf		5249433	0					
ANR	5249987	ArgumentList	stderr		5249433	1					
ANR	5249988	Argument	stderr		5249433	0					
ANR	5249989	Identifier	stderr		5249433	0					
ANR	5249990	Argument	"""Error: Don't know how to process %s\\n"""		5249433	1					
ANR	5249991	PrimaryExpression	"""Error: Don't know how to process %s\\n"""		5249433	0					
ANR	5249992	Argument	argv [ i ]		5249433	2					
ANR	5249993	ArrayIndexing	argv [ i ]		5249433	0					
ANR	5249994	Identifier	argv		5249433	0					
ANR	5249995	Identifier	i		5249433	1					
ANR	5249996	Statement	delete	925:3:28149:28154	5249433	3	True				
ANR	5249997	Statement	[	925:10:28156:28156	5249433	4	True				
ANR	5249998	Statement	]	925:11:28157:28157	5249433	5	True				
ANR	5249999	ExpressionStatement	daemonname	925:13:28159:28169	5249433	6	True				
ANR	5250000	Identifier	daemonname		5249433	0					
ANR	5250001	ExpressionStatement	daemonname = NULL	926:3:28174:28191	5249433	7	True				
ANR	5250002	AssignmentExpression	daemonname = NULL		5249433	0		=			
ANR	5250003	Identifier	daemonname		5249433	0					
ANR	5250004	Identifier	NULL		5249433	1					
ANR	5250005	ElseStatement	else		5249433	0					
ANR	5250006	IfStatement	"if ( matchPrefix ( argv [ i ] , ""-constraint"" , 4 ) )"		5249433	0					
ANR	5250007	Condition	"matchPrefix ( argv [ i ] , ""-constraint"" , 4 )"	928:6:28208:28246	5249433	0	True				
ANR	5250008	CallExpression	"matchPrefix ( argv [ i ] , ""-constraint"" , 4 )"		5249433	0					
ANR	5250009	Callee	matchPrefix		5249433	0					
ANR	5250010	Identifier	matchPrefix		5249433	0					
ANR	5250011	ArgumentList	argv [ i ]		5249433	1					
ANR	5250012	Argument	argv [ i ]		5249433	0					
ANR	5250013	ArrayIndexing	argv [ i ]		5249433	0					
ANR	5250014	Identifier	argv		5249433	0					
ANR	5250015	Identifier	i		5249433	1					
ANR	5250016	Argument	"""-constraint"""		5249433	1					
ANR	5250017	PrimaryExpression	"""-constraint"""		5249433	0					
ANR	5250018	Argument	4		5249433	2					
ANR	5250019	PrimaryExpression	4		5249433	0					
ANR	5250020	CompoundStatement		122:47:3363:3363	5249433	1					
ANR	5250021	IfStatement	if ( diagnose )		5249433	0					
ANR	5250022	Condition	diagnose	929:7:28258:28265	5249433	0	True				
ANR	5250023	Identifier	diagnose		5249433	0					
ANR	5250024	CompoundStatement		123:17:3382:3382	5249433	1					
ANR	5250025	ExpressionStatement	"printf ( ""[%s]\\n"" , argv [ i + 1 ] )"	930:4:28274:28302	5249433	0	True				
ANR	5250026	CallExpression	"printf ( ""[%s]\\n"" , argv [ i + 1 ] )"		5249433	0					
ANR	5250027	Callee	printf		5249433	0					
ANR	5250028	Identifier	printf		5249433	0					
ANR	5250029	ArgumentList	"""[%s]\\n"""		5249433	1					
ANR	5250030	Argument	"""[%s]\\n"""		5249433	0					
ANR	5250031	PrimaryExpression	"""[%s]\\n"""		5249433	0					
ANR	5250032	Argument	argv [ i + 1 ]		5249433	1					
ANR	5250033	ArrayIndexing	argv [ i + 1 ]		5249433	0					
ANR	5250034	Identifier	argv		5249433	0					
ANR	5250035	AdditiveExpression	i + 1		5249433	1		+			
ANR	5250036	Identifier	i		5249433	0					
ANR	5250037	PrimaryExpression	1		5249433	1					
ANR	5250038	ExpressionStatement	query -> addANDConstraint ( argv [ i + 1 ] )	932:3:28312:28347	5249433	1	True				
ANR	5250039	CallExpression	query -> addANDConstraint ( argv [ i + 1 ] )		5249433	0					
ANR	5250040	Callee	query -> addANDConstraint		5249433	0					
ANR	5250041	PtrMemberAccess	query -> addANDConstraint		5249433	0					
ANR	5250042	Identifier	query		5249433	0					
ANR	5250043	Identifier	addANDConstraint		5249433	1					
ANR	5250044	ArgumentList	argv [ i + 1 ]		5249433	1					
ANR	5250045	Argument	argv [ i + 1 ]		5249433	0					
ANR	5250046	ArrayIndexing	argv [ i + 1 ]		5249433	0					
ANR	5250047	Identifier	argv		5249433	0					
ANR	5250048	AdditiveExpression	i + 1		5249433	1		+			
ANR	5250049	Identifier	i		5249433	0					
ANR	5250050	PrimaryExpression	1		5249433	1					
ANR	5250051	ExpressionStatement	i ++	933:3:28352:28355	5249433	2	True				
ANR	5250052	PostIncDecOperationExpression	i ++		5249433	0					
ANR	5250053	Identifier	i		5249433	0					
ANR	5250054	IncDec	++		5249433	1					
ANR	5250055	ReturnType	void		5249433	1					
ANR	5250056	Identifier	secondPass		5249433	2					
ANR	5250057	ParameterList	"int argc , char * argv [ ]"		5249433	3					
ANR	5250058	Parameter	int argc	806:12:24861:24868	5249433	0	True				
ANR	5250059	ParameterType	int		5249433	0					
ANR	5250060	Identifier	argc		5249433	1					
ANR	5250061	Parameter	char * argv [ ]	806:22:24871:24882	5249433	1	True				
ANR	5250062	ParameterType	char * [ ]		5249433	0					
ANR	5250063	Identifier	argv		5249433	1					
ANR	5250064	CFGEntryNode	ENTRY		5249433		True				
ANR	5250065	CFGExitNode	EXIT		5249433		True				
ANR	5250066	Symbol	ATTR_NAME		5249433						
ANR	5250067	Symbol	strchr		5249433						
ANR	5250068	Symbol	* argv		5249433						
ANR	5250069	Symbol	argv		5249433						
ANR	5250070	Symbol	more_attrs		5249433						
ANR	5250071	Symbol	mode		5249433						
ANR	5250072	Symbol	* * argv		5249433						
ANR	5250073	Symbol	strnewp		5249433						
ANR	5250074	Symbol	buffer		5249433						
ANR	5250075	Symbol	argc		5249433						
ANR	5250076	Symbol	* * i		5249433						
ANR	5250077	Symbol	NULL		5249433						
ANR	5250078	Symbol	query		5249433						
ANR	5250079	Symbol	daemonname		5249433						
ANR	5250080	Symbol	ATTR_REMOTE_USER		5249433						
ANR	5250081	Symbol	i		5249433						
ANR	5250082	Symbol	get_daemon_name		5249433						
ANR	5250083	Symbol	MODE_SCHEDD_SUBMITTORS		5249433						
ANR	5250084	Symbol	stderr		5249433						
ANR	5250085	Symbol	get_host_part		5249433						
ANR	5250086	Symbol	ATTR_MACHINE		5249433						
ANR	5250087	Symbol	more_attrs . next		5249433						
ANR	5250088	Symbol	* i		5249433						
ANR	5250089	Symbol	s		5249433						
ANR	5250090	Symbol	projList		5249433						
ANR	5250091	Symbol	diagnose		5249433						
ANR	5250092	Symbol	* argv [ i ]		5249433						
ANR	5250093	Symbol	matchPrefix		5249433						
ANR	5250094	Symbol	pm		5249433						
ANR	5250095	Symbol	statistics		5249433						
ANR	5250096	Function	matchPrefix	939:0:28368:28603							
ANR	5250097	FunctionDef	"matchPrefix (const char * s1 , const char * s2 , int min_len)"		5250096	0					
ANR	5250098	CompoundStatement		941:0:28430:28603	5250096	0					
ANR	5250099	IdentifierDeclStatement	int lenS1 = strlen ( s1 ) ;	942:1:28433:28456	5250096	0	True				
ANR	5250100	IdentifierDecl	lenS1 = strlen ( s1 )		5250096	0					
ANR	5250101	IdentifierDeclType	int		5250096	0					
ANR	5250102	Identifier	lenS1		5250096	1					
ANR	5250103	AssignmentExpression	lenS1 = strlen ( s1 )		5250096	2		=			
ANR	5250104	Identifier	lenS1		5250096	0					
ANR	5250105	CallExpression	strlen ( s1 )		5250096	1					
ANR	5250106	Callee	strlen		5250096	0					
ANR	5250107	Identifier	strlen		5250096	0					
ANR	5250108	ArgumentList	s1		5250096	1					
ANR	5250109	Argument	s1		5250096	0					
ANR	5250110	Identifier	s1		5250096	0					
ANR	5250111	IdentifierDeclStatement	int lenS2 = strlen ( s2 ) ;	943:1:28459:28482	5250096	1	True				
ANR	5250112	IdentifierDecl	lenS2 = strlen ( s2 )		5250096	0					
ANR	5250113	IdentifierDeclType	int		5250096	0					
ANR	5250114	Identifier	lenS2		5250096	1					
ANR	5250115	AssignmentExpression	lenS2 = strlen ( s2 )		5250096	2		=			
ANR	5250116	Identifier	lenS2		5250096	0					
ANR	5250117	CallExpression	strlen ( s2 )		5250096	1					
ANR	5250118	Callee	strlen		5250096	0					
ANR	5250119	Identifier	strlen		5250096	0					
ANR	5250120	ArgumentList	s2		5250096	1					
ANR	5250121	Argument	s2		5250096	0					
ANR	5250122	Identifier	s2		5250096	0					
ANR	5250123	IdentifierDeclStatement	int len = ( lenS1 < lenS2 ) ? lenS1 : lenS2 ;	944:1:28485:28526	5250096	2	True				
ANR	5250124	IdentifierDecl	len = ( lenS1 < lenS2 ) ? lenS1 : lenS2		5250096	0					
ANR	5250125	IdentifierDeclType	int		5250096	0					
ANR	5250126	Identifier	len		5250096	1					
ANR	5250127	AssignmentExpression	len = ( lenS1 < lenS2 ) ? lenS1 : lenS2		5250096	2		=			
ANR	5250128	Identifier	len		5250096	0					
ANR	5250129	ConditionalExpression	( lenS1 < lenS2 ) ? lenS1 : lenS2		5250096	1					
ANR	5250130	Condition	lenS1 < lenS2		5250096	0					
ANR	5250131	RelationalExpression	lenS1 < lenS2		5250096	0		<			
ANR	5250132	Identifier	lenS1		5250096	0					
ANR	5250133	Identifier	lenS2		5250096	1					
ANR	5250134	Identifier	lenS1		5250096	1					
ANR	5250135	Identifier	lenS2		5250096	2					
ANR	5250136	IfStatement	if ( len < min_len )		5250096	3					
ANR	5250137	Condition	len < min_len	945:4:28532:28544	5250096	0	True				
ANR	5250138	RelationalExpression	len < min_len		5250096	0		<			
ANR	5250139	Identifier	len		5250096	0					
ANR	5250140	Identifier	min_len		5250096	1					
ANR	5250141	CompoundStatement		5:19:116:116	5250096	1					
ANR	5250142	ReturnStatement	return 0 ;	946:2:28551:28559	5250096	0	True				
ANR	5250143	PrimaryExpression	0		5250096	0					
ANR	5250144	ReturnStatement	"return ( strncmp ( s1 , s2 , len ) == 0 ) ;"	949:1:28566:28601	5250096	4	True				
ANR	5250145	EqualityExpression	"strncmp ( s1 , s2 , len ) == 0"		5250096	0		==			
ANR	5250146	CallExpression	"strncmp ( s1 , s2 , len )"		5250096	0					
ANR	5250147	Callee	strncmp		5250096	0					
ANR	5250148	Identifier	strncmp		5250096	0					
ANR	5250149	ArgumentList	s1		5250096	1					
ANR	5250150	Argument	s1		5250096	0					
ANR	5250151	Identifier	s1		5250096	0					
ANR	5250152	Argument	s2		5250096	1					
ANR	5250153	Identifier	s2		5250096	0					
ANR	5250154	Argument	len		5250096	2					
ANR	5250155	Identifier	len		5250096	0					
ANR	5250156	PrimaryExpression	0		5250096	1					
ANR	5250157	ReturnType	int		5250096	1					
ANR	5250158	Identifier	matchPrefix		5250096	2					
ANR	5250159	ParameterList	"const char * s1 , const char * s2 , int min_len"		5250096	3					
ANR	5250160	Parameter	const char * s1	940:13:28385:28398	5250096	0	True				
ANR	5250161	ParameterType	const char *		5250096	0					
ANR	5250162	Identifier	s1		5250096	1					
ANR	5250163	Parameter	const char * s2	940:29:28401:28414	5250096	1	True				
ANR	5250164	ParameterType	const char *		5250096	0					
ANR	5250165	Identifier	s2		5250096	1					
ANR	5250166	Parameter	int min_len	940:45:28417:28427	5250096	2	True				
ANR	5250167	ParameterType	int		5250096	0					
ANR	5250168	Identifier	min_len		5250096	1					
ANR	5250169	CFGEntryNode	ENTRY		5250096		True				
ANR	5250170	CFGExitNode	EXIT		5250096		True				
ANR	5250171	Symbol	strlen		5250096						
ANR	5250172	Symbol	strncmp		5250096						
ANR	5250173	Symbol	lenS1		5250096						
ANR	5250174	Symbol	len		5250096						
ANR	5250175	Symbol	lenS2		5250096						
ANR	5250176	Symbol	min_len		5250096						
ANR	5250177	Symbol	s1		5250096						
ANR	5250178	Symbol	s2		5250096						
ANR	5250179	DeclStmt									
ANR	5250180	Decl							MyString	MyString	buf1
ANR	5250181	DeclStmt									
ANR	5250182	Decl							MyString	MyString	buf2
ANR	5250183	DeclStmt									
ANR	5250184	Decl							int	int	val
ANR	5250185	DeclStmt									
ANR	5250186	Decl							EvalResult	EvalResult	lt_result
ANR	5250187	DeclStmt									
ANR	5250188	Decl							int	int	last
ANR	5250189	DeclStmt									
ANR	5250190	Decl							int	int	i
