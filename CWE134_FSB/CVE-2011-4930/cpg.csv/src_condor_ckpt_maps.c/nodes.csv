command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2684708	File	data/converged/CVE-2011-4930_htcondor/src_condor_ckpt_maps.c								
ANR	2684709	Function	segment_parse	28:0:934:2036							
ANR	2684710	FunctionDef	"segment_parse (Segment * seg , char * line)"		2684709	0					
ANR	2684711	CompoundStatement		29:0:979:2036	2684709	0					
ANR	2684712	IdentifierDeclStatement	char tmp [ 8192 ] ;	30:1:982:996	2684709	0	True				
ANR	2684713	IdentifierDecl	tmp [ 8192 ]		2684709	0					
ANR	2684714	IdentifierDeclType	char [ 8192 ]		2684709	0					
ANR	2684715	Identifier	tmp		2684709	1					
ANR	2684716	PrimaryExpression	8192		2684709	2					
ANR	2684717	IdentifierDeclStatement	char * wspc = NULL ;	31:1:1059:1076	2684709	1	True				
ANR	2684718	IdentifierDecl	* wspc = NULL		2684709	0					
ANR	2684719	IdentifierDeclType	char *		2684709	0					
ANR	2684720	Identifier	wspc		2684709	1					
ANR	2684721	AssignmentExpression	* wspc = NULL		2684709	2		=			
ANR	2684722	Identifier	NULL		2684709	0					
ANR	2684723	Identifier	NULL		2684709	1					
ANR	2684724	ExpressionStatement	"memset ( tmp , '\\0' , 8192 )"	33:1:1080:1103	2684709	2	True				
ANR	2684725	CallExpression	"memset ( tmp , '\\0' , 8192 )"		2684709	0					
ANR	2684726	Callee	memset		2684709	0					
ANR	2684727	Identifier	memset		2684709	0					
ANR	2684728	ArgumentList	tmp		2684709	1					
ANR	2684729	Argument	tmp		2684709	0					
ANR	2684730	Identifier	tmp		2684709	0					
ANR	2684731	Argument	'\\0'		2684709	1					
ANR	2684732	PrimaryExpression	'\\0'		2684709	0					
ANR	2684733	Argument	8192		2684709	2					
ANR	2684734	PrimaryExpression	8192		2684709	0					
ANR	2684735	ExpressionStatement	seg -> path [ 0 ] = '\\0'	41:1:1360:1379	2684709	3	True				
ANR	2684736	AssignmentExpression	seg -> path [ 0 ] = '\\0'		2684709	0		=			
ANR	2684737	ArrayIndexing	seg -> path [ 0 ]		2684709	0					
ANR	2684738	PtrMemberAccess	seg -> path		2684709	0					
ANR	2684739	Identifier	seg		2684709	0					
ANR	2684740	Identifier	path		2684709	1					
ANR	2684741	PrimaryExpression	0		2684709	1					
ANR	2684742	PrimaryExpression	'\\0'		2684709	1					
ANR	2684743	ExpressionStatement	"sscanf ( line , ""%llx-%llx %c%c%c%c %llx %lx:%lx %llu%8192[^\\n]"" , & seg -> mem_start , & seg -> mem_end , & seg -> r , & seg -> w , & seg -> x , & seg -> t , & seg -> offset , & seg -> major , & seg -> minor , & seg -> inode , tmp )"	43:1:1383:1584	2684709	4	True				
ANR	2684744	CallExpression	"sscanf ( line , ""%llx-%llx %c%c%c%c %llx %lx:%lx %llu%8192[^\\n]"" , & seg -> mem_start , & seg -> mem_end , & seg -> r , & seg -> w , & seg -> x , & seg -> t , & seg -> offset , & seg -> major , & seg -> minor , & seg -> inode , tmp )"		2684709	0					
ANR	2684745	Callee	sscanf		2684709	0					
ANR	2684746	Identifier	sscanf		2684709	0					
ANR	2684747	ArgumentList	line		2684709	1					
ANR	2684748	Argument	line		2684709	0					
ANR	2684749	Identifier	line		2684709	0					
ANR	2684750	Argument	"""%llx-%llx %c%c%c%c %llx %lx:%lx %llu%8192[^\\n]"""		2684709	1					
ANR	2684751	PrimaryExpression	"""%llx-%llx %c%c%c%c %llx %lx:%lx %llu%8192[^\\n]"""		2684709	0					
ANR	2684752	Argument	& seg -> mem_start		2684709	2					
ANR	2684753	UnaryOperationExpression	& seg -> mem_start		2684709	0					
ANR	2684754	UnaryOperator	&		2684709	0					
ANR	2684755	PtrMemberAccess	seg -> mem_start		2684709	1					
ANR	2684756	Identifier	seg		2684709	0					
ANR	2684757	Identifier	mem_start		2684709	1					
ANR	2684758	Argument	& seg -> mem_end		2684709	3					
ANR	2684759	UnaryOperationExpression	& seg -> mem_end		2684709	0					
ANR	2684760	UnaryOperator	&		2684709	0					
ANR	2684761	PtrMemberAccess	seg -> mem_end		2684709	1					
ANR	2684762	Identifier	seg		2684709	0					
ANR	2684763	Identifier	mem_end		2684709	1					
ANR	2684764	Argument	& seg -> r		2684709	4					
ANR	2684765	UnaryOperationExpression	& seg -> r		2684709	0					
ANR	2684766	UnaryOperator	&		2684709	0					
ANR	2684767	PtrMemberAccess	seg -> r		2684709	1					
ANR	2684768	Identifier	seg		2684709	0					
ANR	2684769	Identifier	r		2684709	1					
ANR	2684770	Argument	& seg -> w		2684709	5					
ANR	2684771	UnaryOperationExpression	& seg -> w		2684709	0					
ANR	2684772	UnaryOperator	&		2684709	0					
ANR	2684773	PtrMemberAccess	seg -> w		2684709	1					
ANR	2684774	Identifier	seg		2684709	0					
ANR	2684775	Identifier	w		2684709	1					
ANR	2684776	Argument	& seg -> x		2684709	6					
ANR	2684777	UnaryOperationExpression	& seg -> x		2684709	0					
ANR	2684778	UnaryOperator	&		2684709	0					
ANR	2684779	PtrMemberAccess	seg -> x		2684709	1					
ANR	2684780	Identifier	seg		2684709	0					
ANR	2684781	Identifier	x		2684709	1					
ANR	2684782	Argument	& seg -> t		2684709	7					
ANR	2684783	UnaryOperationExpression	& seg -> t		2684709	0					
ANR	2684784	UnaryOperator	&		2684709	0					
ANR	2684785	PtrMemberAccess	seg -> t		2684709	1					
ANR	2684786	Identifier	seg		2684709	0					
ANR	2684787	Identifier	t		2684709	1					
ANR	2684788	Argument	& seg -> offset		2684709	8					
ANR	2684789	UnaryOperationExpression	& seg -> offset		2684709	0					
ANR	2684790	UnaryOperator	&		2684709	0					
ANR	2684791	PtrMemberAccess	seg -> offset		2684709	1					
ANR	2684792	Identifier	seg		2684709	0					
ANR	2684793	Identifier	offset		2684709	1					
ANR	2684794	Argument	& seg -> major		2684709	9					
ANR	2684795	UnaryOperationExpression	& seg -> major		2684709	0					
ANR	2684796	UnaryOperator	&		2684709	0					
ANR	2684797	PtrMemberAccess	seg -> major		2684709	1					
ANR	2684798	Identifier	seg		2684709	0					
ANR	2684799	Identifier	major		2684709	1					
ANR	2684800	Argument	& seg -> minor		2684709	10					
ANR	2684801	UnaryOperationExpression	& seg -> minor		2684709	0					
ANR	2684802	UnaryOperator	&		2684709	0					
ANR	2684803	PtrMemberAccess	seg -> minor		2684709	1					
ANR	2684804	Identifier	seg		2684709	0					
ANR	2684805	Identifier	minor		2684709	1					
ANR	2684806	Argument	& seg -> inode		2684709	11					
ANR	2684807	UnaryOperationExpression	& seg -> inode		2684709	0					
ANR	2684808	UnaryOperator	&		2684709	0					
ANR	2684809	PtrMemberAccess	seg -> inode		2684709	1					
ANR	2684810	Identifier	seg		2684709	0					
ANR	2684811	Identifier	inode		2684709	1					
ANR	2684812	Argument	tmp		2684709	12					
ANR	2684813	Identifier	tmp		2684709	0					
ANR	2684814	ExpressionStatement	tmp [ 8191 ] = '\\0'	52:1:1648:1664	2684709	5	True				
ANR	2684815	AssignmentExpression	tmp [ 8191 ] = '\\0'		2684709	0		=			
ANR	2684816	ArrayIndexing	tmp [ 8191 ]		2684709	0					
ANR	2684817	Identifier	tmp		2684709	0					
ANR	2684818	PrimaryExpression	8191		2684709	1					
ANR	2684819	PrimaryExpression	'\\0'		2684709	1					
ANR	2684820	ExpressionStatement	seg -> flags = ( seg -> r == 'r' ? PROT_READ : 0 ) | ( seg -> w == 'w' ? PROT_WRITE : 0 ) | ( seg -> x == 'x' ? PROT_EXEC : 0 )	54:1:1669:1771	2684709	6	True				
ANR	2684821	AssignmentExpression	seg -> flags = ( seg -> r == 'r' ? PROT_READ : 0 ) | ( seg -> w == 'w' ? PROT_WRITE : 0 ) | ( seg -> x == 'x' ? PROT_EXEC : 0 )		2684709	0		=			
ANR	2684822	PtrMemberAccess	seg -> flags		2684709	0					
ANR	2684823	Identifier	seg		2684709	0					
ANR	2684824	Identifier	flags		2684709	1					
ANR	2684825	InclusiveOrExpression	( seg -> r == 'r' ? PROT_READ : 0 ) | ( seg -> w == 'w' ? PROT_WRITE : 0 ) | ( seg -> x == 'x' ? PROT_EXEC : 0 )		2684709	1		|			
ANR	2684826	ConditionalExpression	seg -> r == 'r' ? PROT_READ : 0		2684709	0					
ANR	2684827	Condition	seg -> r == 'r'		2684709	0					
ANR	2684828	EqualityExpression	seg -> r == 'r'		2684709	0		==			
ANR	2684829	PtrMemberAccess	seg -> r		2684709	0					
ANR	2684830	Identifier	seg		2684709	0					
ANR	2684831	Identifier	r		2684709	1					
ANR	2684832	PrimaryExpression	'r'		2684709	1					
ANR	2684833	Identifier	PROT_READ		2684709	1					
ANR	2684834	PrimaryExpression	0		2684709	2					
ANR	2684835	InclusiveOrExpression	( seg -> w == 'w' ? PROT_WRITE : 0 ) | ( seg -> x == 'x' ? PROT_EXEC : 0 )		2684709	1		|			
ANR	2684836	ConditionalExpression	seg -> w == 'w' ? PROT_WRITE : 0		2684709	0					
ANR	2684837	Condition	seg -> w == 'w'		2684709	0					
ANR	2684838	EqualityExpression	seg -> w == 'w'		2684709	0		==			
ANR	2684839	PtrMemberAccess	seg -> w		2684709	0					
ANR	2684840	Identifier	seg		2684709	0					
ANR	2684841	Identifier	w		2684709	1					
ANR	2684842	PrimaryExpression	'w'		2684709	1					
ANR	2684843	Identifier	PROT_WRITE		2684709	1					
ANR	2684844	PrimaryExpression	0		2684709	2					
ANR	2684845	ConditionalExpression	seg -> x == 'x' ? PROT_EXEC : 0		2684709	1					
ANR	2684846	Condition	seg -> x == 'x'		2684709	0					
ANR	2684847	EqualityExpression	seg -> x == 'x'		2684709	0		==			
ANR	2684848	PtrMemberAccess	seg -> x		2684709	0					
ANR	2684849	Identifier	seg		2684709	0					
ANR	2684850	Identifier	x		2684709	1					
ANR	2684851	PrimaryExpression	'x'		2684709	1					
ANR	2684852	Identifier	PROT_EXEC		2684709	1					
ANR	2684853	PrimaryExpression	0		2684709	2					
ANR	2684854	ExpressionStatement	wspc = tmp	60:1:1825:1835	2684709	7	True				
ANR	2684855	AssignmentExpression	wspc = tmp		2684709	0		=			
ANR	2684856	Identifier	wspc		2684709	0					
ANR	2684857	Identifier	tmp		2684709	1					
ANR	2684858	WhileStatement	while ( * wspc != '\\0' && isspace ( * wspc ) )		2684709	8					
ANR	2684859	Condition	* wspc != '\\0' && isspace ( * wspc )	61:7:1844:1874	2684709	0	True				
ANR	2684860	AndExpression	* wspc != '\\0' && isspace ( * wspc )		2684709	0		&&			
ANR	2684861	EqualityExpression	* wspc != '\\0'		2684709	0		!=			
ANR	2684862	UnaryOperationExpression	* wspc		2684709	0					
ANR	2684863	UnaryOperator	*		2684709	0					
ANR	2684864	Identifier	wspc		2684709	1					
ANR	2684865	PrimaryExpression	'\\0'		2684709	1					
ANR	2684866	CallExpression	isspace ( * wspc )		2684709	1					
ANR	2684867	Callee	isspace		2684709	0					
ANR	2684868	Identifier	isspace		2684709	0					
ANR	2684869	ArgumentList	* wspc		2684709	1					
ANR	2684870	Argument	* wspc		2684709	0					
ANR	2684871	UnaryOperationExpression	* wspc		2684709	0					
ANR	2684872	UnaryOperator	*		2684709	0					
ANR	2684873	Identifier	wspc		2684709	1					
ANR	2684874	CompoundStatement		33:40:897:897	2684709	1					
ANR	2684875	ExpressionStatement	wspc ++	62:2:1881:1887	2684709	0	True				
ANR	2684876	PostIncDecOperationExpression	wspc ++		2684709	0					
ANR	2684877	Identifier	wspc		2684709	0					
ANR	2684878	IncDec	++		2684709	1					
ANR	2684879	IfStatement	if ( strlen ( wspc ) >= PATH_MAX )		2684709	9					
ANR	2684880	Condition	strlen ( wspc ) >= PATH_MAX	66:5:1918:1941	2684709	0	True				
ANR	2684881	RelationalExpression	strlen ( wspc ) >= PATH_MAX		2684709	0		>=			
ANR	2684882	CallExpression	strlen ( wspc )		2684709	0					
ANR	2684883	Callee	strlen		2684709	0					
ANR	2684884	Identifier	strlen		2684709	0					
ANR	2684885	ArgumentList	wspc		2684709	1					
ANR	2684886	Argument	wspc		2684709	0					
ANR	2684887	Identifier	wspc		2684709	0					
ANR	2684888	Identifier	PATH_MAX		2684709	1					
ANR	2684889	CompoundStatement		38:31:964:964	2684709	1					
ANR	2684890	ExpressionStatement	"EXCEPT ( ""segment_parse(): path is too large!\\n"" )"	67:2:1948:1995	2684709	0	True				
ANR	2684891	CallExpression	"EXCEPT ( ""segment_parse(): path is too large!\\n"" )"		2684709	0					
ANR	2684892	Callee	EXCEPT		2684709	0					
ANR	2684893	Identifier	EXCEPT		2684709	0					
ANR	2684894	ArgumentList	"""segment_parse(): path is too large!\\n"""		2684709	1					
ANR	2684895	Argument	"""segment_parse(): path is too large!\\n"""		2684709	0					
ANR	2684896	PrimaryExpression	"""segment_parse(): path is too large!\\n"""		2684709	0					
ANR	2684897	ExpressionStatement	"strcpy ( seg -> path , wspc )"	70:1:2002:2025	2684709	10	True				
ANR	2684898	CallExpression	"strcpy ( seg -> path , wspc )"		2684709	0					
ANR	2684899	Callee	strcpy		2684709	0					
ANR	2684900	Identifier	strcpy		2684709	0					
ANR	2684901	ArgumentList	seg -> path		2684709	1					
ANR	2684902	Argument	seg -> path		2684709	0					
ANR	2684903	PtrMemberAccess	seg -> path		2684709	0					
ANR	2684904	Identifier	seg		2684709	0					
ANR	2684905	Identifier	path		2684709	1					
ANR	2684906	Argument	wspc		2684709	1					
ANR	2684907	Identifier	wspc		2684709	0					
ANR	2684908	ReturnType	void		2684709	1					
ANR	2684909	Identifier	segment_parse		2684709	2					
ANR	2684910	ParameterList	"Segment * seg , char * line"		2684709	3					
ANR	2684911	Parameter	Segment * seg	28:19:953:964	2684709	0	True				
ANR	2684912	ParameterType	Segment *		2684709	0					
ANR	2684913	Identifier	seg		2684709	1					
ANR	2684914	Parameter	char * line	28:33:967:976	2684709	1	True				
ANR	2684915	ParameterType	char *		2684709	0					
ANR	2684916	Identifier	line		2684709	1					
ANR	2684917	CFGEntryNode	ENTRY		2684709		True				
ANR	2684918	CFGExitNode	EXIT		2684709		True				
ANR	2684919	Symbol	& seg -> mem_end		2684709						
ANR	2684920	Symbol	* tmp		2684709						
ANR	2684921	Symbol	line		2684709						
ANR	2684922	Symbol	seg -> path		2684709						
ANR	2684923	Symbol	strlen		2684709						
ANR	2684924	Symbol	seg		2684709						
ANR	2684925	Symbol	PROT_WRITE		2684709						
ANR	2684926	Symbol	tmp		2684709						
ANR	2684927	Symbol	& seg -> major		2684709						
ANR	2684928	Symbol	& seg -> w		2684709						
ANR	2684929	Symbol	& seg -> x		2684709						
ANR	2684930	Symbol	NULL		2684709						
ANR	2684931	Symbol	& seg -> offset		2684709						
ANR	2684932	Symbol	* wspc		2684709						
ANR	2684933	Symbol	& seg -> r		2684709						
ANR	2684934	Symbol	& seg -> mem_start		2684709						
ANR	2684935	Symbol	& seg -> t		2684709						
ANR	2684936	Symbol	* seg -> path		2684709						
ANR	2684937	Symbol	seg -> flags		2684709						
ANR	2684938	Symbol	PATH_MAX		2684709						
ANR	2684939	Symbol	PROT_EXEC		2684709						
ANR	2684940	Symbol	isspace		2684709						
ANR	2684941	Symbol	* * seg		2684709						
ANR	2684942	Symbol	PROT_READ		2684709						
ANR	2684943	Symbol	seg -> w		2684709						
ANR	2684944	Symbol	seg -> x		2684709						
ANR	2684945	Symbol	seg -> r		2684709						
ANR	2684946	Symbol	wspc		2684709						
ANR	2684947	Symbol	& seg -> minor		2684709						
ANR	2684948	Symbol	& seg -> inode		2684709						
ANR	2684949	Symbol	* seg		2684709						
ANR	2684950	Function	segment_table_init	76:0:2039:3805							
ANR	2684951	FunctionDef	"segment_table_init (SegmentTable * st , pid_t pid)"		2684950	0					
ANR	2684952	CompoundStatement		77:0:2091:3805	2684950	0					
ANR	2684953	IdentifierDeclStatement	char buf [ 128 ] ;	78:1:2094:2107	2684950	0	True				
ANR	2684954	IdentifierDecl	buf [ 128 ]		2684950	0					
ANR	2684955	IdentifierDeclType	char [ 128 ]		2684950	0					
ANR	2684956	Identifier	buf		2684950	1					
ANR	2684957	PrimaryExpression	128		2684950	2					
ANR	2684958	IdentifierDeclStatement	int fd ;	79:1:2110:2116	2684950	1	True				
ANR	2684959	IdentifierDecl	fd		2684950	0					
ANR	2684960	IdentifierDeclType	int		2684950	0					
ANR	2684961	Identifier	fd		2684950	1					
ANR	2684962	IdentifierDeclStatement	char table [ MAX_TAB_SIZE ] ;	80:1:2119:2143	2684950	2	True				
ANR	2684963	IdentifierDecl	table [ MAX_TAB_SIZE ]		2684950	0					
ANR	2684964	IdentifierDeclType	char [ MAX_TAB_SIZE ]		2684950	0					
ANR	2684965	Identifier	table		2684950	1					
ANR	2684966	Identifier	MAX_TAB_SIZE		2684950	2					
ANR	2684967	IdentifierDeclStatement	"int num_read , total_read ;"	81:1:2146:2170	2684950	3	True				
ANR	2684968	IdentifierDecl	num_read		2684950	0					
ANR	2684969	IdentifierDeclType	int		2684950	0					
ANR	2684970	Identifier	num_read		2684950	1					
ANR	2684971	IdentifierDecl	total_read		2684950	1					
ANR	2684972	IdentifierDeclType	int		2684950	0					
ANR	2684973	Identifier	total_read		2684950	1					
ANR	2684974	IdentifierDeclStatement	int i ;	82:1:2173:2178	2684950	4	True				
ANR	2684975	IdentifierDecl	i		2684950	0					
ANR	2684976	IdentifierDeclType	int		2684950	0					
ANR	2684977	Identifier	i		2684950	1					
ANR	2684978	IdentifierDeclStatement	char * ptr ;	83:1:2181:2190	2684950	5	True				
ANR	2684979	IdentifierDecl	* ptr		2684950	0					
ANR	2684980	IdentifierDeclType	char *		2684950	0					
ANR	2684981	Identifier	ptr		2684950	1					
ANR	2684982	ExpressionStatement	st -> num_avail_segs = 0	85:1:2194:2216	2684950	6	True				
ANR	2684983	AssignmentExpression	st -> num_avail_segs = 0		2684950	0		=			
ANR	2684984	PtrMemberAccess	st -> num_avail_segs		2684950	0					
ANR	2684985	Identifier	st		2684950	0					
ANR	2684986	Identifier	num_avail_segs		2684950	1					
ANR	2684987	PrimaryExpression	0		2684950	1					
ANR	2684988	ExpressionStatement	"sprintf ( buf , ""/proc/%u/maps"" , pid )"	90:1:2277:2311	2684950	7	True				
ANR	2684989	CallExpression	"sprintf ( buf , ""/proc/%u/maps"" , pid )"		2684950	0					
ANR	2684990	Callee	sprintf		2684950	0					
ANR	2684991	Identifier	sprintf		2684950	0					
ANR	2684992	ArgumentList	buf		2684950	1					
ANR	2684993	Argument	buf		2684950	0					
ANR	2684994	Identifier	buf		2684950	0					
ANR	2684995	Argument	"""/proc/%u/maps"""		2684950	1					
ANR	2684996	PrimaryExpression	"""/proc/%u/maps"""		2684950	0					
ANR	2684997	Argument	pid		2684950	2					
ANR	2684998	Identifier	pid		2684950	0					
ANR	2684999	ExpressionStatement	"fd = safe_open_wrapper ( buf , O_RDONLY , 0600 )"	91:1:2314:2357	2684950	8	True				
ANR	2685000	AssignmentExpression	"fd = safe_open_wrapper ( buf , O_RDONLY , 0600 )"		2684950	0		=			
ANR	2685001	Identifier	fd		2684950	0					
ANR	2685002	CallExpression	"safe_open_wrapper ( buf , O_RDONLY , 0600 )"		2684950	1					
ANR	2685003	Callee	safe_open_wrapper		2684950	0					
ANR	2685004	Identifier	safe_open_wrapper		2684950	0					
ANR	2685005	ArgumentList	buf		2684950	1					
ANR	2685006	Argument	buf		2684950	0					
ANR	2685007	Identifier	buf		2684950	0					
ANR	2685008	Argument	O_RDONLY		2684950	1					
ANR	2685009	Identifier	O_RDONLY		2684950	0					
ANR	2685010	Argument	0600		2684950	2					
ANR	2685011	PrimaryExpression	0600		2684950	0					
ANR	2685012	IfStatement	if ( fd == - 1 )		2684950	9					
ANR	2685013	Condition	fd == - 1	92:5:2364:2371	2684950	0	True				
ANR	2685014	EqualityExpression	fd == - 1		2684950	0		==			
ANR	2685015	Identifier	fd		2684950	0					
ANR	2685016	UnaryOperationExpression	- 1		2684950	1					
ANR	2685017	UnaryOperator	-		2684950	0					
ANR	2685018	PrimaryExpression	1		2684950	1					
ANR	2685019	CompoundStatement		17:1:283:283	2684950	1					
ANR	2685020	ExpressionStatement	"dprintf ( D_ALWAYS , ""Could not open maps file! %d(%s)\\n"" , errno , strerror ( errno ) )"	94:2:2379:2461	2684950	0	True				
ANR	2685021	CallExpression	"dprintf ( D_ALWAYS , ""Could not open maps file! %d(%s)\\n"" , errno , strerror ( errno ) )"		2684950	0					
ANR	2685022	Callee	dprintf		2684950	0					
ANR	2685023	Identifier	dprintf		2684950	0					
ANR	2685024	ArgumentList	D_ALWAYS		2684950	1					
ANR	2685025	Argument	D_ALWAYS		2684950	0					
ANR	2685026	Identifier	D_ALWAYS		2684950	0					
ANR	2685027	Argument	"""Could not open maps file! %d(%s)\\n"""		2684950	1					
ANR	2685028	PrimaryExpression	"""Could not open maps file! %d(%s)\\n"""		2684950	0					
ANR	2685029	Argument	errno		2684950	2					
ANR	2685030	Identifier	errno		2684950	0					
ANR	2685031	Argument	strerror ( errno )		2684950	3					
ANR	2685032	CallExpression	strerror ( errno )		2684950	0					
ANR	2685033	Callee	strerror		2684950	0					
ANR	2685034	Identifier	strerror		2684950	0					
ANR	2685035	ArgumentList	errno		2684950	1					
ANR	2685036	Argument	errno		2684950	0					
ANR	2685037	Identifier	errno		2684950	0					
ANR	2685038	ReturnStatement	return - 1 ;	96:2:2465:2474	2684950	1	True				
ANR	2685039	UnaryOperationExpression	- 1		2684950	0					
ANR	2685040	UnaryOperator	-		2684950	0					
ANR	2685041	PrimaryExpression	1		2684950	1					
ANR	2685042	ExpressionStatement	"memset ( table , '\\0' , MAX_TAB_SIZE )"	102:1:2635:2668	2684950	10	True				
ANR	2685043	CallExpression	"memset ( table , '\\0' , MAX_TAB_SIZE )"		2684950	0					
ANR	2685044	Callee	memset		2684950	0					
ANR	2685045	Identifier	memset		2684950	0					
ANR	2685046	ArgumentList	table		2684950	1					
ANR	2685047	Argument	table		2684950	0					
ANR	2685048	Identifier	table		2684950	0					
ANR	2685049	Argument	'\\0'		2684950	1					
ANR	2685050	PrimaryExpression	'\\0'		2684950	0					
ANR	2685051	Argument	MAX_TAB_SIZE		2684950	2					
ANR	2685052	Identifier	MAX_TAB_SIZE		2684950	0					
ANR	2685053	ExpressionStatement	num_read = 0	103:1:2671:2683	2684950	11	True				
ANR	2685054	AssignmentExpression	num_read = 0		2684950	0		=			
ANR	2685055	Identifier	num_read		2684950	0					
ANR	2685056	PrimaryExpression	0		2684950	1					
ANR	2685057	ExpressionStatement	ptr = table	104:1:2686:2697	2684950	12	True				
ANR	2685058	AssignmentExpression	ptr = table		2684950	0		=			
ANR	2685059	Identifier	ptr		2684950	0					
ANR	2685060	Identifier	table		2684950	1					
ANR	2685061	ExpressionStatement	total_read = 0	105:1:2700:2714	2684950	13	True				
ANR	2685062	AssignmentExpression	total_read = 0		2684950	0		=			
ANR	2685063	Identifier	total_read		2684950	0					
ANR	2685064	PrimaryExpression	0		2684950	1					
ANR	2685065	ExpressionStatement	"num_read = read ( fd , ptr , MAX_TAB_SIZE )"	107:1:2718:2756	2684950	14	True				
ANR	2685066	AssignmentExpression	"num_read = read ( fd , ptr , MAX_TAB_SIZE )"		2684950	0		=			
ANR	2685067	Identifier	num_read		2684950	0					
ANR	2685068	CallExpression	"read ( fd , ptr , MAX_TAB_SIZE )"		2684950	1					
ANR	2685069	Callee	read		2684950	0					
ANR	2685070	Identifier	read		2684950	0					
ANR	2685071	ArgumentList	fd		2684950	1					
ANR	2685072	Argument	fd		2684950	0					
ANR	2685073	Identifier	fd		2684950	0					
ANR	2685074	Argument	ptr		2684950	1					
ANR	2685075	Identifier	ptr		2684950	0					
ANR	2685076	Argument	MAX_TAB_SIZE		2684950	2					
ANR	2685077	Identifier	MAX_TAB_SIZE		2684950	0					
ANR	2685078	ExpressionStatement	total_read = num_read	108:1:2759:2780	2684950	15	True				
ANR	2685079	AssignmentExpression	total_read = num_read		2684950	0		=			
ANR	2685080	Identifier	total_read		2684950	0					
ANR	2685081	Identifier	num_read		2684950	1					
ANR	2685082	WhileStatement	while ( num_read != 0 && num_read != - 1 )		2684950	16					
ANR	2685083	Condition	num_read != 0 && num_read != - 1	109:7:2789:2819	2684950	0	True				
ANR	2685084	AndExpression	num_read != 0 && num_read != - 1		2684950	0		&&			
ANR	2685085	EqualityExpression	num_read != 0		2684950	0		!=			
ANR	2685086	Identifier	num_read		2684950	0					
ANR	2685087	PrimaryExpression	0		2684950	1					
ANR	2685088	EqualityExpression	num_read != - 1		2684950	1		!=			
ANR	2685089	Identifier	num_read		2684950	0					
ANR	2685090	UnaryOperationExpression	- 1		2684950	1					
ANR	2685091	UnaryOperator	-		2684950	0					
ANR	2685092	PrimaryExpression	1		2684950	1					
ANR	2685093	CompoundStatement		34:1:731:731	2684950	1					
ANR	2685094	ExpressionStatement	"num_read = read ( fd , ptr += num_read , MAX_TAB_SIZE - total_read )"	111:2:2827:2890	2684950	0	True				
ANR	2685095	AssignmentExpression	"num_read = read ( fd , ptr += num_read , MAX_TAB_SIZE - total_read )"		2684950	0		=			
ANR	2685096	Identifier	num_read		2684950	0					
ANR	2685097	CallExpression	"read ( fd , ptr += num_read , MAX_TAB_SIZE - total_read )"		2684950	1					
ANR	2685098	Callee	read		2684950	0					
ANR	2685099	Identifier	read		2684950	0					
ANR	2685100	ArgumentList	fd		2684950	1					
ANR	2685101	Argument	fd		2684950	0					
ANR	2685102	Identifier	fd		2684950	0					
ANR	2685103	Argument	ptr += num_read		2684950	1					
ANR	2685104	AssignmentExpression	ptr += num_read		2684950	0		+=			
ANR	2685105	Identifier	ptr		2684950	0					
ANR	2685106	Identifier	num_read		2684950	1					
ANR	2685107	Argument	MAX_TAB_SIZE - total_read		2684950	2					
ANR	2685108	AdditiveExpression	MAX_TAB_SIZE - total_read		2684950	0		-			
ANR	2685109	Identifier	MAX_TAB_SIZE		2684950	0					
ANR	2685110	Identifier	total_read		2684950	1					
ANR	2685111	ExpressionStatement	total_read += num_read	112:2:2894:2916	2684950	1	True				
ANR	2685112	AssignmentExpression	total_read += num_read		2684950	0		+=			
ANR	2685113	Identifier	total_read		2684950	0					
ANR	2685114	Identifier	num_read		2684950	1					
ANR	2685115	ExpressionStatement	close ( fd )	115:1:2923:2932	2684950	17	True				
ANR	2685116	CallExpression	close ( fd )		2684950	0					
ANR	2685117	Callee	close		2684950	0					
ANR	2685118	Identifier	close		2684950	0					
ANR	2685119	ArgumentList	fd		2684950	1					
ANR	2685120	Argument	fd		2684950	0					
ANR	2685121	Identifier	fd		2684950	0					
ANR	2685122	IfStatement	if ( num_read == - 1 )		2684950	18					
ANR	2685123	Condition	num_read == - 1	116:5:2939:2952	2684950	0	True				
ANR	2685124	EqualityExpression	num_read == - 1		2684950	0		==			
ANR	2685125	Identifier	num_read		2684950	0					
ANR	2685126	UnaryOperationExpression	- 1		2684950	1					
ANR	2685127	UnaryOperator	-		2684950	0					
ANR	2685128	PrimaryExpression	1		2684950	1					
ANR	2685129	CompoundStatement		41:1:864:864	2684950	1					
ANR	2685130	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error while reading: %d(%s)\\n"" , errno , strerror ( errno ) )"	118:2:2960:3038	2684950	0	True				
ANR	2685131	CallExpression	"dprintf ( D_ALWAYS , ""Error while reading: %d(%s)\\n"" , errno , strerror ( errno ) )"		2684950	0					
ANR	2685132	Callee	dprintf		2684950	0					
ANR	2685133	Identifier	dprintf		2684950	0					
ANR	2685134	ArgumentList	D_ALWAYS		2684950	1					
ANR	2685135	Argument	D_ALWAYS		2684950	0					
ANR	2685136	Identifier	D_ALWAYS		2684950	0					
ANR	2685137	Argument	"""Error while reading: %d(%s)\\n"""		2684950	1					
ANR	2685138	PrimaryExpression	"""Error while reading: %d(%s)\\n"""		2684950	0					
ANR	2685139	Argument	errno		2684950	2					
ANR	2685140	Identifier	errno		2684950	0					
ANR	2685141	Argument	strerror ( errno )		2684950	3					
ANR	2685142	CallExpression	strerror ( errno )		2684950	0					
ANR	2685143	Callee	strerror		2684950	0					
ANR	2685144	Identifier	strerror		2684950	0					
ANR	2685145	ArgumentList	errno		2684950	1					
ANR	2685146	Argument	errno		2684950	0					
ANR	2685147	Identifier	errno		2684950	0					
ANR	2685148	ReturnStatement	return - 1 ;	120:2:3042:3051	2684950	1	True				
ANR	2685149	UnaryOperationExpression	- 1		2684950	0					
ANR	2685150	UnaryOperator	-		2684950	0					
ANR	2685151	PrimaryExpression	1		2684950	1					
ANR	2685152	ForStatement	for ( i = 0 ; i < total_read ; i ++ )		2684950	19					
ANR	2685153	ForInit	i = 0 ;	128:6:3320:3325	2684950	0	True				
ANR	2685154	AssignmentExpression	i = 0		2684950	0		=			
ANR	2685155	Identifier	i		2684950	0					
ANR	2685156	PrimaryExpression	0		2684950	1					
ANR	2685157	Condition	i < total_read	128:13:3327:3340	2684950	1	True				
ANR	2685158	RelationalExpression	i < total_read		2684950	0		<			
ANR	2685159	Identifier	i		2684950	0					
ANR	2685160	Identifier	total_read		2684950	1					
ANR	2685161	PostIncDecOperationExpression	i ++	128:29:3343:3345	2684950	2	True				
ANR	2685162	Identifier	i		2684950	0					
ANR	2685163	IncDec	++		2684950	1					
ANR	2685164	CompoundStatement		52:34:1256:1256	2684950	3					
ANR	2685165	IfStatement	if ( table [ i ] == '\\n' )		2684950	0					
ANR	2685166	Condition	table [ i ] == '\\n'	129:6:3356:3371	2684950	0	True				
ANR	2685167	EqualityExpression	table [ i ] == '\\n'		2684950	0		==			
ANR	2685168	ArrayIndexing	table [ i ]		2684950	0					
ANR	2685169	Identifier	table		2684950	0					
ANR	2685170	Identifier	i		2684950	1					
ANR	2685171	PrimaryExpression	'\\n'		2684950	1					
ANR	2685172	CompoundStatement		53:24:1282:1282	2684950	1					
ANR	2685173	ExpressionStatement	st -> num_avail_segs ++	130:3:3379:3399	2684950	0	True				
ANR	2685174	PostIncDecOperationExpression	st -> num_avail_segs ++		2684950	0					
ANR	2685175	PtrMemberAccess	st -> num_avail_segs		2684950	0					
ANR	2685176	Identifier	st		2684950	0					
ANR	2685177	Identifier	num_avail_segs		2684950	1					
ANR	2685178	IncDec	++		2684950	1					
ANR	2685179	IfStatement	if ( st -> num_avail_segs > MAX_SEGS )		2684950	20					
ANR	2685180	Condition	st -> num_avail_segs > MAX_SEGS	137:5:3501:3529	2684950	0	True				
ANR	2685181	RelationalExpression	st -> num_avail_segs > MAX_SEGS		2684950	0		>			
ANR	2685182	PtrMemberAccess	st -> num_avail_segs		2684950	0					
ANR	2685183	Identifier	st		2684950	0					
ANR	2685184	Identifier	num_avail_segs		2684950	1					
ANR	2685185	Identifier	MAX_SEGS		2684950	1					
ANR	2685186	CompoundStatement		61:36:1440:1440	2684950	1					
ANR	2685187	ReturnStatement	return - 1 ;	138:2:3536:3545	2684950	0	True				
ANR	2685188	UnaryOperationExpression	- 1		2684950	0					
ANR	2685189	UnaryOperator	-		2684950	0					
ANR	2685190	PrimaryExpression	1		2684950	1					
ANR	2685191	ExpressionStatement	ptr = table	142:1:3627:3638	2684950	21	True				
ANR	2685192	AssignmentExpression	ptr = table		2684950	0		=			
ANR	2685193	Identifier	ptr		2684950	0					
ANR	2685194	Identifier	table		2684950	1					
ANR	2685195	ForStatement	for ( i = 0 ; i < st -> num_avail_segs ; i ++ )		2684950	22					
ANR	2685196	ForInit	i = 0 ;	143:6:3646:3651	2684950	0	True				
ANR	2685197	AssignmentExpression	i = 0		2684950	0		=			
ANR	2685198	Identifier	i		2684950	0					
ANR	2685199	PrimaryExpression	0		2684950	1					
ANR	2685200	Condition	i < st -> num_avail_segs	143:13:3653:3674	2684950	1	True				
ANR	2685201	RelationalExpression	i < st -> num_avail_segs		2684950	0		<			
ANR	2685202	Identifier	i		2684950	0					
ANR	2685203	PtrMemberAccess	st -> num_avail_segs		2684950	1					
ANR	2685204	Identifier	st		2684950	0					
ANR	2685205	Identifier	num_avail_segs		2684950	1					
ANR	2685206	PostIncDecOperationExpression	i ++	143:37:3677:3679	2684950	2	True				
ANR	2685207	Identifier	i		2684950	0					
ANR	2685208	IncDec	++		2684950	1					
ANR	2685209	CompoundStatement		68:1:1591:1591	2684950	3					
ANR	2685210	ExpressionStatement	"segment_parse ( & st -> segs [ i ] , ptr )"	145:2:3687:3719	2684950	0	True				
ANR	2685211	CallExpression	"segment_parse ( & st -> segs [ i ] , ptr )"		2684950	0					
ANR	2685212	Callee	segment_parse		2684950	0					
ANR	2685213	Identifier	segment_parse		2684950	0					
ANR	2685214	ArgumentList	& st -> segs [ i ]		2684950	1					
ANR	2685215	Argument	& st -> segs [ i ]		2684950	0					
ANR	2685216	UnaryOperationExpression	& st -> segs [ i ]		2684950	0					
ANR	2685217	UnaryOperator	&		2684950	0					
ANR	2685218	ArrayIndexing	st -> segs [ i ]		2684950	1					
ANR	2685219	PtrMemberAccess	st -> segs		2684950	0					
ANR	2685220	Identifier	st		2684950	0					
ANR	2685221	Identifier	segs		2684950	1					
ANR	2685222	Identifier	i		2684950	1					
ANR	2685223	Argument	ptr		2684950	1					
ANR	2685224	Identifier	ptr		2684950	0					
ANR	2685225	WhileStatement	while ( * ptr ++ != '\\n' )		2684950	1					
ANR	2685226	Condition	* ptr ++ != '\\n'	148:9:3765:3778	2684950	0	True				
ANR	2685227	EqualityExpression	* ptr ++ != '\\n'		2684950	0		!=			
ANR	2685228	UnaryOperationExpression	* ptr ++		2684950	0					
ANR	2685229	UnaryOperator	*		2684950	0					
ANR	2685230	PostIncDecOperationExpression	ptr ++		2684950	1					
ANR	2685231	Identifier	ptr		2684950	0					
ANR	2685232	IncDec	++		2684950	1					
ANR	2685233	PrimaryExpression	'\\n'		2684950	1					
ANR	2685234	ExpressionStatement		148:24:3780:3780	2684950	1	True				
ANR	2685235	ReturnStatement	return 0 ;	153:1:3795:3803	2684950	23	True				
ANR	2685236	PrimaryExpression	0		2684950	0					
ANR	2685237	ReturnType	int		2684950	1					
ANR	2685238	Identifier	segment_table_init		2684950	2					
ANR	2685239	ParameterList	"SegmentTable * st , pid_t pid"		2684950	3					
ANR	2685240	Parameter	SegmentTable * st	76:23:2062:2077	2684950	0	True				
ANR	2685241	ParameterType	SegmentTable *		2684950	0					
ANR	2685242	Identifier	st		2684950	1					
ANR	2685243	Parameter	pid_t pid	76:41:2080:2088	2684950	1	True				
ANR	2685244	ParameterType	pid_t		2684950	0					
ANR	2685245	Identifier	pid		2684950	1					
ANR	2685246	CFGEntryNode	ENTRY		2684950		True				
ANR	2685247	CFGExitNode	EXIT		2684950		True				
ANR	2685248	Symbol	st		2684950						
ANR	2685249	Symbol	total_read		2684950						
ANR	2685250	Symbol	errno		2684950						
ANR	2685251	Symbol	MAX_SEGS		2684950						
ANR	2685252	Symbol	read		2684950						
ANR	2685253	Symbol	* st		2684950						
ANR	2685254	Symbol	num_read		2684950						
ANR	2685255	Symbol	* ptr ++		2684950						
ANR	2685256	Symbol	D_ALWAYS		2684950						
ANR	2685257	Symbol	i		2684950						
ANR	2685258	Symbol	* table		2684950						
ANR	2685259	Symbol	pid		2684950						
ANR	2685260	Symbol	st -> segs		2684950						
ANR	2685261	Symbol	ptr		2684950						
ANR	2685262	Symbol	safe_open_wrapper		2684950						
ANR	2685263	Symbol	strerror		2684950						
ANR	2685264	Symbol	buf		2684950						
ANR	2685265	Symbol	O_RDONLY		2684950						
ANR	2685266	Symbol	* i		2684950						
ANR	2685267	Symbol	st -> num_avail_segs		2684950						
ANR	2685268	Symbol	MAX_TAB_SIZE		2684950						
ANR	2685269	Symbol	fd		2684950						
ANR	2685270	Symbol	table		2684950						
ANR	2685271	Function	segment_table_stdout	156:0:3808:4745							
ANR	2685272	FunctionDef	segment_table_stdout (SegmentTable * st)		2685271	0					
ANR	2685273	CompoundStatement		157:0:3852:4745	2685271	0					
ANR	2685274	IdentifierDeclStatement	int i ;	158:1:3855:3860	2685271	0	True				
ANR	2685275	IdentifierDecl	i		2685271	0					
ANR	2685276	IdentifierDeclType	int		2685271	0					
ANR	2685277	Identifier	i		2685271	1					
ANR	2685278	ExpressionStatement	"dprintf ( D_ALWAYS , ""Printing out the segment table:\\n"" )"	160:1:3864:3918	2685271	1	True				
ANR	2685279	CallExpression	"dprintf ( D_ALWAYS , ""Printing out the segment table:\\n"" )"		2685271	0					
ANR	2685280	Callee	dprintf		2685271	0					
ANR	2685281	Identifier	dprintf		2685271	0					
ANR	2685282	ArgumentList	D_ALWAYS		2685271	1					
ANR	2685283	Argument	D_ALWAYS		2685271	0					
ANR	2685284	Identifier	D_ALWAYS		2685271	0					
ANR	2685285	Argument	"""Printing out the segment table:\\n"""		2685271	1					
ANR	2685286	PrimaryExpression	"""Printing out the segment table:\\n"""		2685271	0					
ANR	2685287	IfStatement	if ( st == NULL )		2685271	2					
ANR	2685288	Condition	st == NULL	161:5:3925:3934	2685271	0	True				
ANR	2685289	EqualityExpression	st == NULL		2685271	0		==			
ANR	2685290	Identifier	st		2685271	0					
ANR	2685291	Identifier	NULL		2685271	1					
ANR	2685292	CompoundStatement		5:17:84:84	2685271	1					
ANR	2685293	ExpressionStatement	"dprintf ( D_ALWAYS , ""NULL Table\\n"" )"	162:2:3941:3974	2685271	0	True				
ANR	2685294	CallExpression	"dprintf ( D_ALWAYS , ""NULL Table\\n"" )"		2685271	0					
ANR	2685295	Callee	dprintf		2685271	0					
ANR	2685296	Identifier	dprintf		2685271	0					
ANR	2685297	ArgumentList	D_ALWAYS		2685271	1					
ANR	2685298	Argument	D_ALWAYS		2685271	0					
ANR	2685299	Identifier	D_ALWAYS		2685271	0					
ANR	2685300	Argument	"""NULL Table\\n"""		2685271	1					
ANR	2685301	PrimaryExpression	"""NULL Table\\n"""		2685271	0					
ANR	2685302	ReturnStatement	return ;	163:2:3978:3984	2685271	1	True				
ANR	2685303	ForStatement	for ( i = 0 ; i < st -> num_avail_segs ; i ++ )		2685271	3					
ANR	2685304	ForInit	i = 0 ;	166:6:3996:4001	2685271	0	True				
ANR	2685305	AssignmentExpression	i = 0		2685271	0		=			
ANR	2685306	Identifier	i		2685271	0					
ANR	2685307	PrimaryExpression	0		2685271	1					
ANR	2685308	Condition	i < st -> num_avail_segs	166:13:4003:4024	2685271	1	True				
ANR	2685309	RelationalExpression	i < st -> num_avail_segs		2685271	0		<			
ANR	2685310	Identifier	i		2685271	0					
ANR	2685311	PtrMemberAccess	st -> num_avail_segs		2685271	1					
ANR	2685312	Identifier	st		2685271	0					
ANR	2685313	Identifier	num_avail_segs		2685271	1					
ANR	2685314	PostIncDecOperationExpression	i ++	166:37:4027:4029	2685271	2	True				
ANR	2685315	Identifier	i		2685271	0					
ANR	2685316	IncDec	++		2685271	1					
ANR	2685317	CompoundStatement		11:1:180:180	2685271	3					
ANR	2685318	ExpressionStatement	"dprintf ( D_ALWAYS , ""Segment: %d\\n"" , i )"	168:2:4037:4078	2685271	0	True				
ANR	2685319	CallExpression	"dprintf ( D_ALWAYS , ""Segment: %d\\n"" , i )"		2685271	0					
ANR	2685320	Callee	dprintf		2685271	0					
ANR	2685321	Identifier	dprintf		2685271	0					
ANR	2685322	ArgumentList	D_ALWAYS		2685271	1					
ANR	2685323	Argument	D_ALWAYS		2685271	0					
ANR	2685324	Identifier	D_ALWAYS		2685271	0					
ANR	2685325	Argument	"""Segment: %d\\n"""		2685271	1					
ANR	2685326	PrimaryExpression	"""Segment: %d\\n"""		2685271	0					
ANR	2685327	Argument	i		2685271	2					
ANR	2685328	Identifier	i		2685271	0					
ANR	2685329	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\tStart:   0x%08llx\\n"" , st -> segs [ i ] . mem_start )"	170:2:4082:4150	2685271	1	True				
ANR	2685330	CallExpression	"dprintf ( D_ALWAYS , ""\\tStart:   0x%08llx\\n"" , st -> segs [ i ] . mem_start )"		2685271	0					
ANR	2685331	Callee	dprintf		2685271	0					
ANR	2685332	Identifier	dprintf		2685271	0					
ANR	2685333	ArgumentList	D_ALWAYS		2685271	1					
ANR	2685334	Argument	D_ALWAYS		2685271	0					
ANR	2685335	Identifier	D_ALWAYS		2685271	0					
ANR	2685336	Argument	"""\\tStart:   0x%08llx\\n"""		2685271	1					
ANR	2685337	PrimaryExpression	"""\\tStart:   0x%08llx\\n"""		2685271	0					
ANR	2685338	Argument	st -> segs [ i ] . mem_start		2685271	2					
ANR	2685339	MemberAccess	st -> segs [ i ] . mem_start		2685271	0					
ANR	2685340	ArrayIndexing	st -> segs [ i ]		2685271	0					
ANR	2685341	PtrMemberAccess	st -> segs		2685271	0					
ANR	2685342	Identifier	st		2685271	0					
ANR	2685343	Identifier	segs		2685271	1					
ANR	2685344	Identifier	i		2685271	1					
ANR	2685345	Identifier	mem_start		2685271	1					
ANR	2685346	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\tEnd:     0x%08llx\\n"" , st -> segs [ i ] . mem_end )"	172:2:4154:4220	2685271	2	True				
ANR	2685347	CallExpression	"dprintf ( D_ALWAYS , ""\\tEnd:     0x%08llx\\n"" , st -> segs [ i ] . mem_end )"		2685271	0					
ANR	2685348	Callee	dprintf		2685271	0					
ANR	2685349	Identifier	dprintf		2685271	0					
ANR	2685350	ArgumentList	D_ALWAYS		2685271	1					
ANR	2685351	Argument	D_ALWAYS		2685271	0					
ANR	2685352	Identifier	D_ALWAYS		2685271	0					
ANR	2685353	Argument	"""\\tEnd:     0x%08llx\\n"""		2685271	1					
ANR	2685354	PrimaryExpression	"""\\tEnd:     0x%08llx\\n"""		2685271	0					
ANR	2685355	Argument	st -> segs [ i ] . mem_end		2685271	2					
ANR	2685356	MemberAccess	st -> segs [ i ] . mem_end		2685271	0					
ANR	2685357	ArrayIndexing	st -> segs [ i ]		2685271	0					
ANR	2685358	PtrMemberAccess	st -> segs		2685271	0					
ANR	2685359	Identifier	st		2685271	0					
ANR	2685360	Identifier	segs		2685271	1					
ANR	2685361	Identifier	i		2685271	1					
ANR	2685362	Identifier	mem_end		2685271	1					
ANR	2685363	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\tSize:    %llu\\n"" , st -> segs [ i ] . mem_end - st -> segs [ i ] . mem_start )"	174:2:4224:4310	2685271	3	True				
ANR	2685364	CallExpression	"dprintf ( D_ALWAYS , ""\\tSize:    %llu\\n"" , st -> segs [ i ] . mem_end - st -> segs [ i ] . mem_start )"		2685271	0					
ANR	2685365	Callee	dprintf		2685271	0					
ANR	2685366	Identifier	dprintf		2685271	0					
ANR	2685367	ArgumentList	D_ALWAYS		2685271	1					
ANR	2685368	Argument	D_ALWAYS		2685271	0					
ANR	2685369	Identifier	D_ALWAYS		2685271	0					
ANR	2685370	Argument	"""\\tSize:    %llu\\n"""		2685271	1					
ANR	2685371	PrimaryExpression	"""\\tSize:    %llu\\n"""		2685271	0					
ANR	2685372	Argument	st -> segs [ i ] . mem_end - st -> segs [ i ] . mem_start		2685271	2					
ANR	2685373	AdditiveExpression	st -> segs [ i ] . mem_end - st -> segs [ i ] . mem_start		2685271	0		-			
ANR	2685374	MemberAccess	st -> segs [ i ] . mem_end		2685271	0					
ANR	2685375	ArrayIndexing	st -> segs [ i ]		2685271	0					
ANR	2685376	PtrMemberAccess	st -> segs		2685271	0					
ANR	2685377	Identifier	st		2685271	0					
ANR	2685378	Identifier	segs		2685271	1					
ANR	2685379	Identifier	i		2685271	1					
ANR	2685380	Identifier	mem_end		2685271	1					
ANR	2685381	MemberAccess	st -> segs [ i ] . mem_start		2685271	1					
ANR	2685382	ArrayIndexing	st -> segs [ i ]		2685271	0					
ANR	2685383	PtrMemberAccess	st -> segs		2685271	0					
ANR	2685384	Identifier	st		2685271	0					
ANR	2685385	Identifier	segs		2685271	1					
ANR	2685386	Identifier	i		2685271	1					
ANR	2685387	Identifier	mem_start		2685271	1					
ANR	2685388	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\tPerms:   %c%c%c%c\\n"" , st -> segs [ i ] . r , st -> segs [ i ] . w , st -> segs [ i ] . x , st -> segs [ i ] . t )"	176:2:4314:4420	2685271	4	True				
ANR	2685389	CallExpression	"dprintf ( D_ALWAYS , ""\\tPerms:   %c%c%c%c\\n"" , st -> segs [ i ] . r , st -> segs [ i ] . w , st -> segs [ i ] . x , st -> segs [ i ] . t )"		2685271	0					
ANR	2685390	Callee	dprintf		2685271	0					
ANR	2685391	Identifier	dprintf		2685271	0					
ANR	2685392	ArgumentList	D_ALWAYS		2685271	1					
ANR	2685393	Argument	D_ALWAYS		2685271	0					
ANR	2685394	Identifier	D_ALWAYS		2685271	0					
ANR	2685395	Argument	"""\\tPerms:   %c%c%c%c\\n"""		2685271	1					
ANR	2685396	PrimaryExpression	"""\\tPerms:   %c%c%c%c\\n"""		2685271	0					
ANR	2685397	Argument	st -> segs [ i ] . r		2685271	2					
ANR	2685398	MemberAccess	st -> segs [ i ] . r		2685271	0					
ANR	2685399	ArrayIndexing	st -> segs [ i ]		2685271	0					
ANR	2685400	PtrMemberAccess	st -> segs		2685271	0					
ANR	2685401	Identifier	st		2685271	0					
ANR	2685402	Identifier	segs		2685271	1					
ANR	2685403	Identifier	i		2685271	1					
ANR	2685404	Identifier	r		2685271	1					
ANR	2685405	Argument	st -> segs [ i ] . w		2685271	3					
ANR	2685406	MemberAccess	st -> segs [ i ] . w		2685271	0					
ANR	2685407	ArrayIndexing	st -> segs [ i ]		2685271	0					
ANR	2685408	PtrMemberAccess	st -> segs		2685271	0					
ANR	2685409	Identifier	st		2685271	0					
ANR	2685410	Identifier	segs		2685271	1					
ANR	2685411	Identifier	i		2685271	1					
ANR	2685412	Identifier	w		2685271	1					
ANR	2685413	Argument	st -> segs [ i ] . x		2685271	4					
ANR	2685414	MemberAccess	st -> segs [ i ] . x		2685271	0					
ANR	2685415	ArrayIndexing	st -> segs [ i ]		2685271	0					
ANR	2685416	PtrMemberAccess	st -> segs		2685271	0					
ANR	2685417	Identifier	st		2685271	0					
ANR	2685418	Identifier	segs		2685271	1					
ANR	2685419	Identifier	i		2685271	1					
ANR	2685420	Identifier	x		2685271	1					
ANR	2685421	Argument	st -> segs [ i ] . t		2685271	5					
ANR	2685422	MemberAccess	st -> segs [ i ] . t		2685271	0					
ANR	2685423	ArrayIndexing	st -> segs [ i ]		2685271	0					
ANR	2685424	PtrMemberAccess	st -> segs		2685271	0					
ANR	2685425	Identifier	st		2685271	0					
ANR	2685426	Identifier	segs		2685271	1					
ANR	2685427	Identifier	i		2685271	1					
ANR	2685428	Identifier	t		2685271	1					
ANR	2685429	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\tOffset:  0x%08llx\\n"" , st -> segs [ i ] . offset )"	178:2:4424:4489	2685271	5	True				
ANR	2685430	CallExpression	"dprintf ( D_ALWAYS , ""\\tOffset:  0x%08llx\\n"" , st -> segs [ i ] . offset )"		2685271	0					
ANR	2685431	Callee	dprintf		2685271	0					
ANR	2685432	Identifier	dprintf		2685271	0					
ANR	2685433	ArgumentList	D_ALWAYS		2685271	1					
ANR	2685434	Argument	D_ALWAYS		2685271	0					
ANR	2685435	Identifier	D_ALWAYS		2685271	0					
ANR	2685436	Argument	"""\\tOffset:  0x%08llx\\n"""		2685271	1					
ANR	2685437	PrimaryExpression	"""\\tOffset:  0x%08llx\\n"""		2685271	0					
ANR	2685438	Argument	st -> segs [ i ] . offset		2685271	2					
ANR	2685439	MemberAccess	st -> segs [ i ] . offset		2685271	0					
ANR	2685440	ArrayIndexing	st -> segs [ i ]		2685271	0					
ANR	2685441	PtrMemberAccess	st -> segs		2685271	0					
ANR	2685442	Identifier	st		2685271	0					
ANR	2685443	Identifier	segs		2685271	1					
ANR	2685444	Identifier	i		2685271	1					
ANR	2685445	Identifier	offset		2685271	1					
ANR	2685446	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\tMaj/Min: %02lx:%02lx\\n"" , st -> segs [ i ] . major , st -> segs [ i ] . minor )"	180:2:4493:4580	2685271	6	True				
ANR	2685447	CallExpression	"dprintf ( D_ALWAYS , ""\\tMaj/Min: %02lx:%02lx\\n"" , st -> segs [ i ] . major , st -> segs [ i ] . minor )"		2685271	0					
ANR	2685448	Callee	dprintf		2685271	0					
ANR	2685449	Identifier	dprintf		2685271	0					
ANR	2685450	ArgumentList	D_ALWAYS		2685271	1					
ANR	2685451	Argument	D_ALWAYS		2685271	0					
ANR	2685452	Identifier	D_ALWAYS		2685271	0					
ANR	2685453	Argument	"""\\tMaj/Min: %02lx:%02lx\\n"""		2685271	1					
ANR	2685454	PrimaryExpression	"""\\tMaj/Min: %02lx:%02lx\\n"""		2685271	0					
ANR	2685455	Argument	st -> segs [ i ] . major		2685271	2					
ANR	2685456	MemberAccess	st -> segs [ i ] . major		2685271	0					
ANR	2685457	ArrayIndexing	st -> segs [ i ]		2685271	0					
ANR	2685458	PtrMemberAccess	st -> segs		2685271	0					
ANR	2685459	Identifier	st		2685271	0					
ANR	2685460	Identifier	segs		2685271	1					
ANR	2685461	Identifier	i		2685271	1					
ANR	2685462	Identifier	major		2685271	1					
ANR	2685463	Argument	st -> segs [ i ] . minor		2685271	3					
ANR	2685464	MemberAccess	st -> segs [ i ] . minor		2685271	0					
ANR	2685465	ArrayIndexing	st -> segs [ i ]		2685271	0					
ANR	2685466	PtrMemberAccess	st -> segs		2685271	0					
ANR	2685467	Identifier	st		2685271	0					
ANR	2685468	Identifier	segs		2685271	1					
ANR	2685469	Identifier	i		2685271	1					
ANR	2685470	Identifier	minor		2685271	1					
ANR	2685471	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\tInode:   %llu\\n"" , st -> segs [ i ] . inode )"	182:2:4584:4644	2685271	7	True				
ANR	2685472	CallExpression	"dprintf ( D_ALWAYS , ""\\tInode:   %llu\\n"" , st -> segs [ i ] . inode )"		2685271	0					
ANR	2685473	Callee	dprintf		2685271	0					
ANR	2685474	Identifier	dprintf		2685271	0					
ANR	2685475	ArgumentList	D_ALWAYS		2685271	1					
ANR	2685476	Argument	D_ALWAYS		2685271	0					
ANR	2685477	Identifier	D_ALWAYS		2685271	0					
ANR	2685478	Argument	"""\\tInode:   %llu\\n"""		2685271	1					
ANR	2685479	PrimaryExpression	"""\\tInode:   %llu\\n"""		2685271	0					
ANR	2685480	Argument	st -> segs [ i ] . inode		2685271	2					
ANR	2685481	MemberAccess	st -> segs [ i ] . inode		2685271	0					
ANR	2685482	ArrayIndexing	st -> segs [ i ]		2685271	0					
ANR	2685483	PtrMemberAccess	st -> segs		2685271	0					
ANR	2685484	Identifier	st		2685271	0					
ANR	2685485	Identifier	segs		2685271	1					
ANR	2685486	Identifier	i		2685271	1					
ANR	2685487	Identifier	inode		2685271	1					
ANR	2685488	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\tPath:    %s\\n"" , st -> segs [ i ] . path [ 0 ] == '\\0' ? ""<none>"" : st -> segs [ i ] . path )"	184:2:4648:4740	2685271	8	True				
ANR	2685489	CallExpression	"dprintf ( D_ALWAYS , ""\\tPath:    %s\\n"" , st -> segs [ i ] . path [ 0 ] == '\\0' ? ""<none>"" : st -> segs [ i ] . path )"		2685271	0					
ANR	2685490	Callee	dprintf		2685271	0					
ANR	2685491	Identifier	dprintf		2685271	0					
ANR	2685492	ArgumentList	D_ALWAYS		2685271	1					
ANR	2685493	Argument	D_ALWAYS		2685271	0					
ANR	2685494	Identifier	D_ALWAYS		2685271	0					
ANR	2685495	Argument	"""\\tPath:    %s\\n"""		2685271	1					
ANR	2685496	PrimaryExpression	"""\\tPath:    %s\\n"""		2685271	0					
ANR	2685497	Argument	"st -> segs [ i ] . path [ 0 ] == '\\0' ? ""<none>"" : st -> segs [ i ] . path"		2685271	2					
ANR	2685498	ConditionalExpression	"st -> segs [ i ] . path [ 0 ] == '\\0' ? ""<none>"" : st -> segs [ i ] . path"		2685271	0					
ANR	2685499	Condition	st -> segs [ i ] . path [ 0 ] == '\\0'		2685271	0					
ANR	2685500	EqualityExpression	st -> segs [ i ] . path [ 0 ] == '\\0'		2685271	0		==			
ANR	2685501	ArrayIndexing	st -> segs [ i ] . path [ 0 ]		2685271	0					
ANR	2685502	MemberAccess	st -> segs [ i ] . path		2685271	0					
ANR	2685503	ArrayIndexing	st -> segs [ i ]		2685271	0					
ANR	2685504	PtrMemberAccess	st -> segs		2685271	0					
ANR	2685505	Identifier	st		2685271	0					
ANR	2685506	Identifier	segs		2685271	1					
ANR	2685507	Identifier	i		2685271	1					
ANR	2685508	Identifier	path		2685271	1					
ANR	2685509	PrimaryExpression	0		2685271	1					
ANR	2685510	PrimaryExpression	'\\0'		2685271	1					
ANR	2685511	PrimaryExpression	"""<none>"""		2685271	1					
ANR	2685512	MemberAccess	st -> segs [ i ] . path		2685271	2					
ANR	2685513	ArrayIndexing	st -> segs [ i ]		2685271	0					
ANR	2685514	PtrMemberAccess	st -> segs		2685271	0					
ANR	2685515	Identifier	st		2685271	0					
ANR	2685516	Identifier	segs		2685271	1					
ANR	2685517	Identifier	i		2685271	1					
ANR	2685518	Identifier	path		2685271	1					
ANR	2685519	ReturnType	void		2685271	1					
ANR	2685520	Identifier	segment_table_stdout		2685271	2					
ANR	2685521	ParameterList	SegmentTable * st		2685271	3					
ANR	2685522	Parameter	SegmentTable * st	156:26:3834:3849	2685271	0	True				
ANR	2685523	ParameterType	SegmentTable *		2685271	0					
ANR	2685524	Identifier	st		2685271	1					
ANR	2685525	CFGEntryNode	ENTRY		2685271		True				
ANR	2685526	CFGExitNode	EXIT		2685271		True				
ANR	2685527	Symbol	st -> segs [ i ] . path		2685271						
ANR	2685528	Symbol	* st		2685271						
ANR	2685529	Symbol	st -> segs [ i ] . r		2685271						
ANR	2685530	Symbol	st -> segs [ i ] . mem_start		2685271						
ANR	2685531	Symbol	* * st		2685271						
ANR	2685532	Symbol	st -> segs [ i ] . minor		2685271						
ANR	2685533	Symbol	st -> segs [ i ] . major		2685271						
ANR	2685534	Symbol	st -> segs [ i ] . offset		2685271						
ANR	2685535	Symbol	* * st -> segs		2685271						
ANR	2685536	Symbol	st -> segs [ i ] . t		2685271						
ANR	2685537	Symbol	* st -> segs		2685271						
ANR	2685538	Symbol	st -> segs [ i ] . w		2685271						
ANR	2685539	Symbol	st -> segs [ i ] . x		2685271						
ANR	2685540	Symbol	st		2685271						
ANR	2685541	Symbol	* * i		2685271						
ANR	2685542	Symbol	NULL		2685271						
ANR	2685543	Symbol	D_ALWAYS		2685271						
ANR	2685544	Symbol	i		2685271						
ANR	2685545	Symbol	st -> segs		2685271						
ANR	2685546	Symbol	st -> segs [ i ] . mem_end		2685271						
ANR	2685547	Symbol	st -> segs [ i ] . inode		2685271						
ANR	2685548	Symbol	* i		2685271						
ANR	2685549	Symbol	* * * st		2685271						
ANR	2685550	Symbol	st -> num_avail_segs		2685271						
ANR	2685551	Symbol	* st -> segs [ i ] . path		2685271						
ANR	2685552	Function	segment_table_find_vdso	189:0:4748:5217							
ANR	2685553	FunctionDef	segment_table_find_vdso (SegmentTable * st)		2685552	0					
ANR	2685554	CompoundStatement		190:0:4794:5217	2685552	0					
ANR	2685555	IdentifierDeclStatement	int i ;	191:1:4797:4802	2685552	0	True				
ANR	2685556	IdentifierDecl	i		2685552	0					
ANR	2685557	IdentifierDeclType	int		2685552	0					
ANR	2685558	Identifier	i		2685552	1					
ANR	2685559	ForStatement	for ( i = 0 ; i < st -> num_avail_segs ; i ++ )		2685552	1					
ANR	2685560	ForInit	i = 0 ;	194:6:4830:4835	2685552	0	True				
ANR	2685561	AssignmentExpression	i = 0		2685552	0		=			
ANR	2685562	Identifier	i		2685552	0					
ANR	2685563	PrimaryExpression	0		2685552	1					
ANR	2685564	Condition	i < st -> num_avail_segs	194:13:4837:4858	2685552	1	True				
ANR	2685565	RelationalExpression	i < st -> num_avail_segs		2685552	0		<			
ANR	2685566	Identifier	i		2685552	0					
ANR	2685567	PtrMemberAccess	st -> num_avail_segs		2685552	1					
ANR	2685568	Identifier	st		2685552	0					
ANR	2685569	Identifier	num_avail_segs		2685552	1					
ANR	2685570	PostIncDecOperationExpression	i ++	194:37:4861:4863	2685552	2	True				
ANR	2685571	Identifier	i		2685552	0					
ANR	2685572	IncDec	++		2685552	1					
ANR	2685573	CompoundStatement		5:42:71:71	2685552	3					
ANR	2685574	IfStatement	"if ( strncmp ( st -> segs [ i ] . path , ""[vdso]"" , 6 ) == 0 && strlen ( st -> segs [ i ] . path ) == 6 )"		2685552	0					
ANR	2685575	Condition	"strncmp ( st -> segs [ i ] . path , ""[vdso]"" , 6 ) == 0 && strlen ( st -> segs [ i ] . path ) == 6"	196:6:4928:5007	2685552	0	True				
ANR	2685576	AndExpression	"strncmp ( st -> segs [ i ] . path , ""[vdso]"" , 6 ) == 0 && strlen ( st -> segs [ i ] . path ) == 6"		2685552	0		&&			
ANR	2685577	EqualityExpression	"strncmp ( st -> segs [ i ] . path , ""[vdso]"" , 6 ) == 0"		2685552	0		==			
ANR	2685578	CallExpression	"strncmp ( st -> segs [ i ] . path , ""[vdso]"" , 6 )"		2685552	0					
ANR	2685579	Callee	strncmp		2685552	0					
ANR	2685580	Identifier	strncmp		2685552	0					
ANR	2685581	ArgumentList	st -> segs [ i ] . path		2685552	1					
ANR	2685582	Argument	st -> segs [ i ] . path		2685552	0					
ANR	2685583	MemberAccess	st -> segs [ i ] . path		2685552	0					
ANR	2685584	ArrayIndexing	st -> segs [ i ]		2685552	0					
ANR	2685585	PtrMemberAccess	st -> segs		2685552	0					
ANR	2685586	Identifier	st		2685552	0					
ANR	2685587	Identifier	segs		2685552	1					
ANR	2685588	Identifier	i		2685552	1					
ANR	2685589	Identifier	path		2685552	1					
ANR	2685590	Argument	"""[vdso]"""		2685552	1					
ANR	2685591	PrimaryExpression	"""[vdso]"""		2685552	0					
ANR	2685592	Argument	6		2685552	2					
ANR	2685593	PrimaryExpression	6		2685552	0					
ANR	2685594	PrimaryExpression	0		2685552	1					
ANR	2685595	EqualityExpression	strlen ( st -> segs [ i ] . path ) == 6		2685552	1		==			
ANR	2685596	CallExpression	strlen ( st -> segs [ i ] . path )		2685552	0					
ANR	2685597	Callee	strlen		2685552	0					
ANR	2685598	Identifier	strlen		2685552	0					
ANR	2685599	ArgumentList	st -> segs [ i ] . path		2685552	1					
ANR	2685600	Argument	st -> segs [ i ] . path		2685552	0					
ANR	2685601	MemberAccess	st -> segs [ i ] . path		2685552	0					
ANR	2685602	ArrayIndexing	st -> segs [ i ]		2685552	0					
ANR	2685603	PtrMemberAccess	st -> segs		2685552	0					
ANR	2685604	Identifier	st		2685552	0					
ANR	2685605	Identifier	segs		2685552	1					
ANR	2685606	Identifier	i		2685552	1					
ANR	2685607	Identifier	path		2685552	1					
ANR	2685608	PrimaryExpression	6		2685552	1					
ANR	2685609	CompoundStatement		9:2:218:218	2685552	1					
ANR	2685610	ReturnStatement	return i ;	199:3:5018:5026	2685552	0	True				
ANR	2685611	Identifier	i		2685552	0					
ANR	2685612	Statement	if	204:2:5104:5105	2685552	1	True				
ANR	2685613	Statement	(	204:5:5107:5107	2685552	2	True				
ANR	2685614	Statement	st	204:6:5108:5109	2685552	3	True				
ANR	2685615	Statement	->	204:8:5110:5111	2685552	4	True				
ANR	2685616	Statement	segs	204:10:5112:5115	2685552	5	True				
ANR	2685617	Statement	[	204:14:5116:5116	2685552	6	True				
ANR	2685618	Statement	i	204:15:5117:5117	2685552	7	True				
ANR	2685619	Statement	]	204:16:5118:5118	2685552	8	True				
ANR	2685620	Statement	.	204:17:5119:5119	2685552	9	True				
ANR	2685621	Statement	mem_start	204:18:5120:5128	2685552	10	True				
ANR	2685622	Statement	==	204:28:5130:5131	2685552	11	True				
ANR	2685623	Statement	0x00000000ffffe000UL	204:31:5133:5152	2685552	12	True				
ANR	2685624	Statement	L	204:51:5153:5153	2685552	13	True				
ANR	2685625	Statement	)	204:52:5154:5154	2685552	14	True				
ANR	2685626	CompoundStatement		16:2:364:364	2685552	15					
ANR	2685627	ReturnStatement	return i ;	206:3:5164:5172	2685552	0	True				
ANR	2685628	Identifier	i		2685552	0					
ANR	2685629	ReturnStatement	return NOT_FOUND ;	214:1:5199:5215	2685552	2	True				
ANR	2685630	Identifier	NOT_FOUND		2685552	0					
ANR	2685631	ReturnType	int		2685552	1					
ANR	2685632	Identifier	segment_table_find_vdso		2685552	2					
ANR	2685633	ParameterList	SegmentTable * st		2685552	3					
ANR	2685634	Parameter	SegmentTable * st	189:28:4776:4791	2685552	0	True				
ANR	2685635	ParameterType	SegmentTable *		2685552	0					
ANR	2685636	Identifier	st		2685552	1					
ANR	2685637	CFGEntryNode	ENTRY		2685552		True				
ANR	2685638	CFGExitNode	EXIT		2685552		True				
ANR	2685639	Symbol	st		2685552						
ANR	2685640	Symbol	strlen		2685552						
ANR	2685641	Symbol	strncmp		2685552						
ANR	2685642	Symbol	* i		2685552						
ANR	2685643	Symbol	st -> segs [ i ] . path		2685552						
ANR	2685644	Symbol	* st		2685552						
ANR	2685645	Symbol	NOT_FOUND		2685552						
ANR	2685646	Symbol	i		2685552						
ANR	2685647	Symbol	* st -> segs		2685552						
ANR	2685648	Symbol	st -> num_avail_segs		2685552						
ANR	2685649	Symbol	st -> segs		2685552						
ANR	2685650	Symbol	* * st		2685552						
ANR	2685651	Function	segment_table_fix_vsyscall_page_perms	217:0:5220:5795							
ANR	2685652	FunctionDef	segment_table_fix_vsyscall_page_perms (SegmentTable * st)		2685651	0					
ANR	2685653	CompoundStatement		218:0:5280:5795	2685651	0					
ANR	2685654	IdentifierDeclStatement	int vdso_idx ;	219:1:5283:5295	2685651	0	True				
ANR	2685655	IdentifierDecl	vdso_idx		2685651	0					
ANR	2685656	IdentifierDeclType	int		2685651	0					
ANR	2685657	Identifier	vdso_idx		2685651	1					
ANR	2685658	ExpressionStatement	vdso_idx = segment_table_find_vdso ( st )	221:1:5299:5337	2685651	1	True				
ANR	2685659	AssignmentExpression	vdso_idx = segment_table_find_vdso ( st )		2685651	0		=			
ANR	2685660	Identifier	vdso_idx		2685651	0					
ANR	2685661	CallExpression	segment_table_find_vdso ( st )		2685651	1					
ANR	2685662	Callee	segment_table_find_vdso		2685651	0					
ANR	2685663	Identifier	segment_table_find_vdso		2685651	0					
ANR	2685664	ArgumentList	st		2685651	1					
ANR	2685665	Argument	st		2685651	0					
ANR	2685666	Identifier	st		2685651	0					
ANR	2685667	IfStatement	if ( vdso_idx == NOT_FOUND )		2685651	2					
ANR	2685668	Condition	vdso_idx == NOT_FOUND	222:5:5344:5364	2685651	0	True				
ANR	2685669	EqualityExpression	vdso_idx == NOT_FOUND		2685651	0		==			
ANR	2685670	Identifier	vdso_idx		2685651	0					
ANR	2685671	Identifier	NOT_FOUND		2685651	1					
ANR	2685672	CompoundStatement		5:28:86:86	2685651	1					
ANR	2685673	ReturnStatement	return NO_VDSO_SEGMENT ;	223:2:5371:5393	2685651	0	True				
ANR	2685674	Identifier	NO_VDSO_SEGMENT		2685651	0					
ANR	2685675	IfStatement	"if ( mprotect ( ( char * ) st -> segs [ vdso_idx ] . mem_start , st -> segs [ vdso_idx ] . mem_end - st -> segs [ vdso_idx ] . mem_start , PROT_EXEC | PROT_READ | PROT_WRITE ) < 0 )"		2685651	3					
ANR	2685676	Condition	"mprotect ( ( char * ) st -> segs [ vdso_idx ] . mem_start , st -> segs [ vdso_idx ] . mem_end - st -> segs [ vdso_idx ] . mem_start , PROT_EXEC | PROT_READ | PROT_WRITE ) < 0"	226:5:5404:5549	2685651	0	True				
ANR	2685677	RelationalExpression	"mprotect ( ( char * ) st -> segs [ vdso_idx ] . mem_start , st -> segs [ vdso_idx ] . mem_end - st -> segs [ vdso_idx ] . mem_start , PROT_EXEC | PROT_READ | PROT_WRITE ) < 0"		2685651	0		<			
ANR	2685678	CallExpression	"mprotect ( ( char * ) st -> segs [ vdso_idx ] . mem_start , st -> segs [ vdso_idx ] . mem_end - st -> segs [ vdso_idx ] . mem_start , PROT_EXEC | PROT_READ | PROT_WRITE )"		2685651	0					
ANR	2685679	Callee	mprotect		2685651	0					
ANR	2685680	Identifier	mprotect		2685651	0					
ANR	2685681	ArgumentList	( char * ) st -> segs [ vdso_idx ] . mem_start		2685651	1					
ANR	2685682	Argument	( char * ) st -> segs [ vdso_idx ] . mem_start		2685651	0					
ANR	2685683	CastExpression	( char * ) st -> segs [ vdso_idx ] . mem_start		2685651	0					
ANR	2685684	CastTarget	char *		2685651	0					
ANR	2685685	MemberAccess	st -> segs [ vdso_idx ] . mem_start		2685651	1					
ANR	2685686	ArrayIndexing	st -> segs [ vdso_idx ]		2685651	0					
ANR	2685687	PtrMemberAccess	st -> segs		2685651	0					
ANR	2685688	Identifier	st		2685651	0					
ANR	2685689	Identifier	segs		2685651	1					
ANR	2685690	Identifier	vdso_idx		2685651	1					
ANR	2685691	Identifier	mem_start		2685651	1					
ANR	2685692	Argument	st -> segs [ vdso_idx ] . mem_end - st -> segs [ vdso_idx ] . mem_start		2685651	1					
ANR	2685693	AdditiveExpression	st -> segs [ vdso_idx ] . mem_end - st -> segs [ vdso_idx ] . mem_start		2685651	0		-			
ANR	2685694	MemberAccess	st -> segs [ vdso_idx ] . mem_end		2685651	0					
ANR	2685695	ArrayIndexing	st -> segs [ vdso_idx ]		2685651	0					
ANR	2685696	PtrMemberAccess	st -> segs		2685651	0					
ANR	2685697	Identifier	st		2685651	0					
ANR	2685698	Identifier	segs		2685651	1					
ANR	2685699	Identifier	vdso_idx		2685651	1					
ANR	2685700	Identifier	mem_end		2685651	1					
ANR	2685701	MemberAccess	st -> segs [ vdso_idx ] . mem_start		2685651	1					
ANR	2685702	ArrayIndexing	st -> segs [ vdso_idx ]		2685651	0					
ANR	2685703	PtrMemberAccess	st -> segs		2685651	0					
ANR	2685704	Identifier	st		2685651	0					
ANR	2685705	Identifier	segs		2685651	1					
ANR	2685706	Identifier	vdso_idx		2685651	1					
ANR	2685707	Identifier	mem_start		2685651	1					
ANR	2685708	Argument	PROT_EXEC | PROT_READ | PROT_WRITE		2685651	2					
ANR	2685709	InclusiveOrExpression	PROT_EXEC | PROT_READ | PROT_WRITE		2685651	0		|			
ANR	2685710	Identifier	PROT_EXEC		2685651	0					
ANR	2685711	InclusiveOrExpression	PROT_READ | PROT_WRITE		2685651	1		|			
ANR	2685712	Identifier	PROT_READ		2685651	0					
ANR	2685713	Identifier	PROT_WRITE		2685651	1					
ANR	2685714	PrimaryExpression	0		2685651	1					
ANR	2685715	CompoundStatement		12:1:273:273	2685651	1					
ANR	2685716	ReturnStatement	return CANT_MPROTECT ;	230:2:5558:5578	2685651	0	True				
ANR	2685717	Identifier	CANT_MPROTECT		2685651	0					
ANR	2685718	ExpressionStatement	st -> segs [ vdso_idx ] . r = 'r'	235:1:5626:5652	2685651	4	True				
ANR	2685719	AssignmentExpression	st -> segs [ vdso_idx ] . r = 'r'		2685651	0		=			
ANR	2685720	MemberAccess	st -> segs [ vdso_idx ] . r		2685651	0					
ANR	2685721	ArrayIndexing	st -> segs [ vdso_idx ]		2685651	0					
ANR	2685722	PtrMemberAccess	st -> segs		2685651	0					
ANR	2685723	Identifier	st		2685651	0					
ANR	2685724	Identifier	segs		2685651	1					
ANR	2685725	Identifier	vdso_idx		2685651	1					
ANR	2685726	Identifier	r		2685651	1					
ANR	2685727	PrimaryExpression	'r'		2685651	1					
ANR	2685728	ExpressionStatement	st -> segs [ vdso_idx ] . w = 'w'	236:1:5655:5681	2685651	5	True				
ANR	2685729	AssignmentExpression	st -> segs [ vdso_idx ] . w = 'w'		2685651	0		=			
ANR	2685730	MemberAccess	st -> segs [ vdso_idx ] . w		2685651	0					
ANR	2685731	ArrayIndexing	st -> segs [ vdso_idx ]		2685651	0					
ANR	2685732	PtrMemberAccess	st -> segs		2685651	0					
ANR	2685733	Identifier	st		2685651	0					
ANR	2685734	Identifier	segs		2685651	1					
ANR	2685735	Identifier	vdso_idx		2685651	1					
ANR	2685736	Identifier	w		2685651	1					
ANR	2685737	PrimaryExpression	'w'		2685651	1					
ANR	2685738	ExpressionStatement	st -> segs [ vdso_idx ] . x = 'x'	237:1:5684:5710	2685651	6	True				
ANR	2685739	AssignmentExpression	st -> segs [ vdso_idx ] . x = 'x'		2685651	0		=			
ANR	2685740	MemberAccess	st -> segs [ vdso_idx ] . x		2685651	0					
ANR	2685741	ArrayIndexing	st -> segs [ vdso_idx ]		2685651	0					
ANR	2685742	PtrMemberAccess	st -> segs		2685651	0					
ANR	2685743	Identifier	st		2685651	0					
ANR	2685744	Identifier	segs		2685651	1					
ANR	2685745	Identifier	vdso_idx		2685651	1					
ANR	2685746	Identifier	x		2685651	1					
ANR	2685747	PrimaryExpression	'x'		2685651	1					
ANR	2685748	ExpressionStatement	st -> segs [ vdso_idx ] . flags = PROT_READ | PROT_WRITE | PROT_EXEC	239:1:5714:5775	2685651	7	True				
ANR	2685749	AssignmentExpression	st -> segs [ vdso_idx ] . flags = PROT_READ | PROT_WRITE | PROT_EXEC		2685651	0		=			
ANR	2685750	MemberAccess	st -> segs [ vdso_idx ] . flags		2685651	0					
ANR	2685751	ArrayIndexing	st -> segs [ vdso_idx ]		2685651	0					
ANR	2685752	PtrMemberAccess	st -> segs		2685651	0					
ANR	2685753	Identifier	st		2685651	0					
ANR	2685754	Identifier	segs		2685651	1					
ANR	2685755	Identifier	vdso_idx		2685651	1					
ANR	2685756	Identifier	flags		2685651	1					
ANR	2685757	InclusiveOrExpression	PROT_READ | PROT_WRITE | PROT_EXEC		2685651	1		|			
ANR	2685758	Identifier	PROT_READ		2685651	0					
ANR	2685759	InclusiveOrExpression	PROT_WRITE | PROT_EXEC		2685651	1		|			
ANR	2685760	Identifier	PROT_WRITE		2685651	0					
ANR	2685761	Identifier	PROT_EXEC		2685651	1					
ANR	2685762	ReturnStatement	return SUCCESS ;	241:1:5779:5793	2685651	8	True				
ANR	2685763	Identifier	SUCCESS		2685651	0					
ANR	2685764	ReturnType	int		2685651	1					
ANR	2685765	Identifier	segment_table_fix_vsyscall_page_perms		2685651	2					
ANR	2685766	ParameterList	SegmentTable * st		2685651	3					
ANR	2685767	Parameter	SegmentTable * st	217:42:5262:5277	2685651	0	True				
ANR	2685768	ParameterType	SegmentTable *		2685651	0					
ANR	2685769	Identifier	st		2685651	1					
ANR	2685770	CFGEntryNode	ENTRY		2685651		True				
ANR	2685771	CFGExitNode	EXIT		2685651		True				
ANR	2685772	Symbol	st		2685651						
ANR	2685773	Symbol	st -> segs [ vdso_idx ] . mem_start		2685651						
ANR	2685774	Symbol	SUCCESS		2685651						
ANR	2685775	Symbol	* st		2685651						
ANR	2685776	Symbol	* vdso_idx		2685651						
ANR	2685777	Symbol	vdso_idx		2685651						
ANR	2685778	Symbol	NOT_FOUND		2685651						
ANR	2685779	Symbol	PROT_EXEC		2685651						
ANR	2685780	Symbol	PROT_READ		2685651						
ANR	2685781	Symbol	st -> segs		2685651						
ANR	2685782	Symbol	* * st		2685651						
ANR	2685783	Symbol	st -> segs [ vdso_idx ] . mem_end		2685651						
ANR	2685784	Symbol	st -> segs [ vdso_idx ] . r		2685651						
ANR	2685785	Symbol	CANT_MPROTECT		2685651						
ANR	2685786	Symbol	st -> segs [ vdso_idx ] . x		2685651						
ANR	2685787	Symbol	st -> segs [ vdso_idx ] . flags		2685651						
ANR	2685788	Symbol	st -> segs [ vdso_idx ] . w		2685651						
ANR	2685789	Symbol	PROT_WRITE		2685651						
ANR	2685790	Symbol	mprotect		2685651						
ANR	2685791	Symbol	NO_VDSO_SEGMENT		2685651						
ANR	2685792	Symbol	* st -> segs		2685651						
ANR	2685793	Symbol	segment_table_find_vdso		2685651						
