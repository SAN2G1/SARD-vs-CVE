command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4689473	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_cron_job_list.cpp								
ANR	4689474	Function	CondorCronJobList :: CondorCronJobList	33:0:1099:1174							
ANR	4689475	FunctionDef	CondorCronJobList :: CondorCronJobList (CronJobMgr & mgr)		4689474	0					
ANR	4689476	CompoundStatement		35:0:1172:1174	4689474	0					
ANR	4689477	Identifier	CondorCronJobList :: CondorCronJobList		4689474	1					
ANR	4689478	ParameterList	CronJobMgr & mgr		4689474	2					
ANR	4689479	Parameter	CronJobMgr & mgr	33:38:1137:1151	4689474	0	True				
ANR	4689480	ParameterType	CronJobMgr &		4689474	0					
ANR	4689481	Identifier	mgr		4689474	1					
ANR	4689482	CFGEntryNode	ENTRY		4689474		True				
ANR	4689483	CFGExitNode	EXIT		4689474		True				
ANR	4689484	Symbol	mgr		4689474						
ANR	4689485	Function	CondorCronJobList :: ~CondorCronJobList	39:0:1197:1286							
ANR	4689486	FunctionDef	CondorCronJobList :: ~CondorCronJobList ()		4689485	0					
ANR	4689487	CompoundStatement		40:0:1243:1286	4689485	0					
ANR	4689488	ExpressionStatement	DeleteAll ( )	42:1:1272:1284	4689485	0	True				
ANR	4689489	CallExpression	DeleteAll ( )		4689485	0					
ANR	4689490	Callee	DeleteAll		4689485	0					
ANR	4689491	Identifier	DeleteAll		4689485	0					
ANR	4689492	ArgumentList			4689485	1					
ANR	4689493	Identifier	CondorCronJobList :: ~CondorCronJobList		4689485	1					
ANR	4689494	ParameterList			4689485	2					
ANR	4689495	CFGEntryNode	ENTRY		4689485		True				
ANR	4689496	CFGExitNode	EXIT		4689485		True				
ANR	4689497	Function	CondorCronJobList :: DeleteAll	46:0:1323:1722							
ANR	4689498	FunctionDef	CondorCronJobList :: DeleteAll ()		4689497	0					
ANR	4689499	CompoundStatement		48:0:1364:1722	4689497	0					
ANR	4689500	ExpressionStatement	KillAll ( true )	50:1:1384:1399	4689497	0	True				
ANR	4689501	CallExpression	KillAll ( true )		4689497	0					
ANR	4689502	Callee	KillAll		4689497	0					
ANR	4689503	Identifier	KillAll		4689497	0					
ANR	4689504	ArgumentList	true		4689497	1					
ANR	4689505	Argument	true		4689497	0					
ANR	4689506	Identifier	true		4689497	0					
ANR	4689507	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJobList: Deleting all jobs\\n"" )"	52:1:1403:1458	4689497	1	True				
ANR	4689508	CallExpression	"dprintf ( D_ALWAYS , ""CronJobList: Deleting all jobs\\n"" )"		4689497	0					
ANR	4689509	Callee	dprintf		4689497	0					
ANR	4689510	Identifier	dprintf		4689497	0					
ANR	4689511	ArgumentList	D_ALWAYS		4689497	1					
ANR	4689512	Argument	D_ALWAYS		4689497	0					
ANR	4689513	Identifier	D_ALWAYS		4689497	0					
ANR	4689514	Argument	"""CronJobList: Deleting all jobs\\n"""		4689497	1					
ANR	4689515	PrimaryExpression	"""CronJobList: Deleting all jobs\\n"""		4689497	0					
ANR	4689516	IdentifierDeclStatement	list < CronJob * > :: iterator iter ;	53:1:1461:1491	4689497	2	True				
ANR	4689517	IdentifierDecl	iter		4689497	0					
ANR	4689518	IdentifierDeclType	list < CronJob * > :: iterator		4689497	0					
ANR	4689519	Identifier	iter		4689497	1					
ANR	4689520	ForStatement	for ( iter = m_job_list . begin ( ) ; iter != m_job_list . end ( ) ; iter ++ )		4689497	3					
ANR	4689521	ForInit	iter = m_job_list . begin ( ) ;	54:6:1499:1524	4689497	0	True				
ANR	4689522	AssignmentExpression	iter = m_job_list . begin ( )		4689497	0		=			
ANR	4689523	Identifier	iter		4689497	0					
ANR	4689524	CallExpression	m_job_list . begin ( )		4689497	1					
ANR	4689525	Callee	m_job_list . begin		4689497	0					
ANR	4689526	MemberAccess	m_job_list . begin		4689497	0					
ANR	4689527	Identifier	m_job_list		4689497	0					
ANR	4689528	Identifier	begin		4689497	1					
ANR	4689529	ArgumentList			4689497	1					
ANR	4689530	Condition	iter != m_job_list . end ( )	54:33:1526:1549	4689497	1	True				
ANR	4689531	EqualityExpression	iter != m_job_list . end ( )		4689497	0		!=			
ANR	4689532	Identifier	iter		4689497	0					
ANR	4689533	CallExpression	m_job_list . end ( )		4689497	1					
ANR	4689534	Callee	m_job_list . end		4689497	0					
ANR	4689535	MemberAccess	m_job_list . end		4689497	0					
ANR	4689536	Identifier	m_job_list		4689497	0					
ANR	4689537	Identifier	end		4689497	1					
ANR	4689538	ArgumentList			4689497	1					
ANR	4689539	PostIncDecOperationExpression	iter ++	54:59:1552:1557	4689497	2	True				
ANR	4689540	Identifier	iter		4689497	0					
ANR	4689541	IncDec	++		4689497	1					
ANR	4689542	CompoundStatement		8:2:200:220	4689497	3					
ANR	4689543	IdentifierDeclStatement	CronJob * job = * iter ;	55:2:1565:1585	4689497	0	True				
ANR	4689544	IdentifierDecl	* job = * iter		4689497	0					
ANR	4689545	IdentifierDeclType	CronJob *		4689497	0					
ANR	4689546	Identifier	job		4689497	1					
ANR	4689547	AssignmentExpression	* job = * iter		4689497	2		=			
ANR	4689548	Identifier	job		4689497	0					
ANR	4689549	UnaryOperationExpression	* iter		4689497	1					
ANR	4689550	UnaryOperator	*		4689497	0					
ANR	4689551	Identifier	iter		4689497	1					
ANR	4689552	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJobList: Deleting job '%s'\\n"" , job -> GetName ( ) )"	56:2:1589:1670	4689497	1	True				
ANR	4689553	CallExpression	"dprintf ( D_ALWAYS , ""CronJobList: Deleting job '%s'\\n"" , job -> GetName ( ) )"		4689497	0					
ANR	4689554	Callee	dprintf		4689497	0					
ANR	4689555	Identifier	dprintf		4689497	0					
ANR	4689556	ArgumentList	D_ALWAYS		4689497	1					
ANR	4689557	Argument	D_ALWAYS		4689497	0					
ANR	4689558	Identifier	D_ALWAYS		4689497	0					
ANR	4689559	Argument	"""CronJobList: Deleting job '%s'\\n"""		4689497	1					
ANR	4689560	PrimaryExpression	"""CronJobList: Deleting job '%s'\\n"""		4689497	0					
ANR	4689561	Argument	job -> GetName ( )		4689497	2					
ANR	4689562	CallExpression	job -> GetName ( )		4689497	0					
ANR	4689563	Callee	job -> GetName		4689497	0					
ANR	4689564	PtrMemberAccess	job -> GetName		4689497	0					
ANR	4689565	Identifier	job		4689497	0					
ANR	4689566	Identifier	GetName		4689497	1					
ANR	4689567	ArgumentList			4689497	1					
ANR	4689568	Statement	delete	59:2:1674:1679	4689497	2	True				
ANR	4689569	ExpressionStatement	job	59:9:1681:1684	4689497	3	True				
ANR	4689570	Identifier	job		4689497	0					
ANR	4689571	ExpressionStatement	m_job_list . clear ( )	61:1:1690:1708	4689497	4	True				
ANR	4689572	CallExpression	m_job_list . clear ( )		4689497	0					
ANR	4689573	Callee	m_job_list . clear		4689497	0					
ANR	4689574	MemberAccess	m_job_list . clear		4689497	0					
ANR	4689575	Identifier	m_job_list		4689497	0					
ANR	4689576	Identifier	clear		4689497	1					
ANR	4689577	ArgumentList			4689497	1					
ANR	4689578	ReturnStatement	return 0 ;	63:1:1712:1720	4689497	5	True				
ANR	4689579	PrimaryExpression	0		4689497	0					
ANR	4689580	ReturnType	int		4689497	1					
ANR	4689581	Identifier	CondorCronJobList :: DeleteAll		4689497	2					
ANR	4689582	ParameterList			4689497	3					
ANR	4689583	CFGEntryNode	ENTRY		4689497		True				
ANR	4689584	CFGExitNode	EXIT		4689497		True				
ANR	4689585	Symbol	m_job_list		4689497						
ANR	4689586	Symbol	m_job_list . begin		4689497						
ANR	4689587	Symbol	* iter		4689497						
ANR	4689588	Symbol	* job		4689497						
ANR	4689589	Symbol	true		4689497						
ANR	4689590	Symbol	D_ALWAYS		4689497						
ANR	4689591	Symbol	iter		4689497						
ANR	4689592	Symbol	m_job_list . end		4689497						
ANR	4689593	Symbol	job		4689497						
ANR	4689594	Symbol	job -> GetName		4689497						
ANR	4689595	Function	CondorCronJobList :: KillAll	67:0:1750:2098							
ANR	4689596	FunctionDef	CondorCronJobList :: KillAll (bool force)		4689595	0					
ANR	4689597	CompoundStatement		69:0:1795:2098	4689595	0					
ANR	4689598	ExpressionStatement	"dprintf ( D_ALWAYS , ""Cron: Killing all jobs\\n"" )"	71:1:1824:1871	4689595	0	True				
ANR	4689599	CallExpression	"dprintf ( D_ALWAYS , ""Cron: Killing all jobs\\n"" )"		4689595	0					
ANR	4689600	Callee	dprintf		4689595	0					
ANR	4689601	Identifier	dprintf		4689595	0					
ANR	4689602	ArgumentList	D_ALWAYS		4689595	1					
ANR	4689603	Argument	D_ALWAYS		4689595	0					
ANR	4689604	Identifier	D_ALWAYS		4689595	0					
ANR	4689605	Argument	"""Cron: Killing all jobs\\n"""		4689595	1					
ANR	4689606	PrimaryExpression	"""Cron: Killing all jobs\\n"""		4689595	0					
ANR	4689607	IdentifierDeclStatement	list < CronJob * > :: iterator iter ;	72:1:1874:1904	4689595	1	True				
ANR	4689608	IdentifierDecl	iter		4689595	0					
ANR	4689609	IdentifierDeclType	list < CronJob * > :: iterator		4689595	0					
ANR	4689610	Identifier	iter		4689595	1					
ANR	4689611	ForStatement	for ( iter = m_job_list . begin ( ) ; iter != m_job_list . end ( ) ; iter ++ )		4689595	2					
ANR	4689612	ForInit	iter = m_job_list . begin ( ) ;	73:6:1912:1937	4689595	0	True				
ANR	4689613	AssignmentExpression	iter = m_job_list . begin ( )		4689595	0		=			
ANR	4689614	Identifier	iter		4689595	0					
ANR	4689615	CallExpression	m_job_list . begin ( )		4689595	1					
ANR	4689616	Callee	m_job_list . begin		4689595	0					
ANR	4689617	MemberAccess	m_job_list . begin		4689595	0					
ANR	4689618	Identifier	m_job_list		4689595	0					
ANR	4689619	Identifier	begin		4689595	1					
ANR	4689620	ArgumentList			4689595	1					
ANR	4689621	Condition	iter != m_job_list . end ( )	73:33:1939:1962	4689595	1	True				
ANR	4689622	EqualityExpression	iter != m_job_list . end ( )		4689595	0		!=			
ANR	4689623	Identifier	iter		4689595	0					
ANR	4689624	CallExpression	m_job_list . end ( )		4689595	1					
ANR	4689625	Callee	m_job_list . end		4689595	0					
ANR	4689626	MemberAccess	m_job_list . end		4689595	0					
ANR	4689627	Identifier	m_job_list		4689595	0					
ANR	4689628	Identifier	end		4689595	1					
ANR	4689629	ArgumentList			4689595	1					
ANR	4689630	PostIncDecOperationExpression	iter ++	73:59:1965:1970	4689595	2	True				
ANR	4689631	Identifier	iter		4689595	0					
ANR	4689632	IncDec	++		4689595	1					
ANR	4689633	CompoundStatement		6:2:182:202	4689595	3					
ANR	4689634	IdentifierDeclStatement	CronJob * job = * iter ;	74:2:1978:1998	4689595	0	True				
ANR	4689635	IdentifierDecl	* job = * iter		4689595	0					
ANR	4689636	IdentifierDeclType	CronJob *		4689595	0					
ANR	4689637	Identifier	job		4689595	1					
ANR	4689638	AssignmentExpression	* job = * iter		4689595	2		=			
ANR	4689639	Identifier	job		4689595	0					
ANR	4689640	UnaryOperationExpression	* iter		4689595	1					
ANR	4689641	UnaryOperator	*		4689595	0					
ANR	4689642	Identifier	iter		4689595	1					
ANR	4689643	ExpressionStatement	"dprintf ( D_ALWAYS , ""Killing job %s\\n"" , job -> GetName ( ) )"	75:2:2002:2057	4689595	1	True				
ANR	4689644	CallExpression	"dprintf ( D_ALWAYS , ""Killing job %s\\n"" , job -> GetName ( ) )"		4689595	0					
ANR	4689645	Callee	dprintf		4689595	0					
ANR	4689646	Identifier	dprintf		4689595	0					
ANR	4689647	ArgumentList	D_ALWAYS		4689595	1					
ANR	4689648	Argument	D_ALWAYS		4689595	0					
ANR	4689649	Identifier	D_ALWAYS		4689595	0					
ANR	4689650	Argument	"""Killing job %s\\n"""		4689595	1					
ANR	4689651	PrimaryExpression	"""Killing job %s\\n"""		4689595	0					
ANR	4689652	Argument	job -> GetName ( )		4689595	2					
ANR	4689653	CallExpression	job -> GetName ( )		4689595	0					
ANR	4689654	Callee	job -> GetName		4689595	0					
ANR	4689655	PtrMemberAccess	job -> GetName		4689595	0					
ANR	4689656	Identifier	job		4689595	0					
ANR	4689657	Identifier	GetName		4689595	1					
ANR	4689658	ArgumentList			4689595	1					
ANR	4689659	ExpressionStatement	job -> KillJob ( force )	76:2:2061:2082	4689595	2	True				
ANR	4689660	CallExpression	job -> KillJob ( force )		4689595	0					
ANR	4689661	Callee	job -> KillJob		4689595	0					
ANR	4689662	PtrMemberAccess	job -> KillJob		4689595	0					
ANR	4689663	Identifier	job		4689595	0					
ANR	4689664	Identifier	KillJob		4689595	1					
ANR	4689665	ArgumentList	force		4689595	1					
ANR	4689666	Argument	force		4689595	0					
ANR	4689667	Identifier	force		4689595	0					
ANR	4689668	ReturnStatement	return 0 ;	78:1:2088:2096	4689595	3	True				
ANR	4689669	PrimaryExpression	0		4689595	0					
ANR	4689670	ReturnType	int		4689595	1					
ANR	4689671	Identifier	CondorCronJobList :: KillAll		4689595	2					
ANR	4689672	ParameterList	bool force		4689595	3					
ANR	4689673	Parameter	bool force	68:28:1782:1791	4689595	0	True				
ANR	4689674	ParameterType	bool		4689595	0					
ANR	4689675	Identifier	force		4689595	1					
ANR	4689676	CFGEntryNode	ENTRY		4689595		True				
ANR	4689677	CFGExitNode	EXIT		4689595		True				
ANR	4689678	Symbol	m_job_list		4689595						
ANR	4689679	Symbol	m_job_list . begin		4689595						
ANR	4689680	Symbol	* iter		4689595						
ANR	4689681	Symbol	* job		4689595						
ANR	4689682	Symbol	D_ALWAYS		4689595						
ANR	4689683	Symbol	iter		4689595						
ANR	4689684	Symbol	force		4689595						
ANR	4689685	Symbol	m_job_list . end		4689595						
ANR	4689686	Symbol	job		4689595						
ANR	4689687	Symbol	job -> GetName		4689595						
ANR	4689688	Function	CondorCronJobList :: NumAliveJobs	82:0:2149:2459							
ANR	4689689	FunctionDef	CondorCronJobList :: NumAliveJobs ()		4689688	0					
ANR	4689690	CompoundStatement		84:0:2199:2459	4689688	0					
ANR	4689691	IdentifierDeclStatement	int num_alive = 0 ;	85:1:2202:2222	4689688	0	True				
ANR	4689692	IdentifierDecl	num_alive = 0		4689688	0					
ANR	4689693	IdentifierDeclType	int		4689688	0					
ANR	4689694	Identifier	num_alive		4689688	1					
ANR	4689695	AssignmentExpression	num_alive = 0		4689688	2		=			
ANR	4689696	Identifier	num_alive		4689688	0					
ANR	4689697	PrimaryExpression	0		4689688	1					
ANR	4689698	IdentifierDeclStatement	list < CronJob * > :: const_iterator iter ;	88:1:2252:2288	4689688	1	True				
ANR	4689699	IdentifierDecl	iter		4689688	0					
ANR	4689700	IdentifierDeclType	list < CronJob * > :: const_iterator		4689688	0					
ANR	4689701	Identifier	iter		4689688	1					
ANR	4689702	ForStatement	for ( iter = m_job_list . begin ( ) ; iter != m_job_list . end ( ) ; iter ++ )		4689688	2					
ANR	4689703	ForInit	iter = m_job_list . begin ( ) ;	89:6:2296:2321	4689688	0	True				
ANR	4689704	AssignmentExpression	iter = m_job_list . begin ( )		4689688	0		=			
ANR	4689705	Identifier	iter		4689688	0					
ANR	4689706	CallExpression	m_job_list . begin ( )		4689688	1					
ANR	4689707	Callee	m_job_list . begin		4689688	0					
ANR	4689708	MemberAccess	m_job_list . begin		4689688	0					
ANR	4689709	Identifier	m_job_list		4689688	0					
ANR	4689710	Identifier	begin		4689688	1					
ANR	4689711	ArgumentList			4689688	1					
ANR	4689712	Condition	iter != m_job_list . end ( )	89:33:2323:2346	4689688	1	True				
ANR	4689713	EqualityExpression	iter != m_job_list . end ( )		4689688	0		!=			
ANR	4689714	Identifier	iter		4689688	0					
ANR	4689715	CallExpression	m_job_list . end ( )		4689688	1					
ANR	4689716	Callee	m_job_list . end		4689688	0					
ANR	4689717	MemberAccess	m_job_list . end		4689688	0					
ANR	4689718	Identifier	m_job_list		4689688	0					
ANR	4689719	Identifier	end		4689688	1					
ANR	4689720	ArgumentList			4689688	1					
ANR	4689721	PostIncDecOperationExpression	iter ++	89:59:2349:2354	4689688	2	True				
ANR	4689722	Identifier	iter		4689688	0					
ANR	4689723	IncDec	++		4689688	1					
ANR	4689724	CompoundStatement		7:2:162:188	4689688	3					
ANR	4689725	IdentifierDeclStatement	const CronJob * job = * iter ;	90:2:2362:2388	4689688	0	True				
ANR	4689726	IdentifierDecl	* job = * iter		4689688	0					
ANR	4689727	IdentifierDeclType	const CronJob *		4689688	0					
ANR	4689728	Identifier	job		4689688	1					
ANR	4689729	AssignmentExpression	* job = * iter		4689688	2		=			
ANR	4689730	Identifier	job		4689688	0					
ANR	4689731	UnaryOperationExpression	* iter		4689688	1					
ANR	4689732	UnaryOperator	*		4689688	0					
ANR	4689733	Identifier	iter		4689688	1					
ANR	4689734	IfStatement	if ( job -> IsAlive ( ) )		4689688	1					
ANR	4689735	Condition	job -> IsAlive ( )	91:7:2397:2411	4689688	0	True				
ANR	4689736	CallExpression	job -> IsAlive ( )		4689688	0					
ANR	4689737	Callee	job -> IsAlive		4689688	0					
ANR	4689738	PtrMemberAccess	job -> IsAlive		4689688	0					
ANR	4689739	Identifier	job		4689688	0					
ANR	4689740	Identifier	IsAlive		4689688	1					
ANR	4689741	ArgumentList			4689688	1					
ANR	4689742	CompoundStatement		8:25:215:215	4689688	1					
ANR	4689743	ExpressionStatement	num_alive ++	92:3:2420:2431	4689688	0	True				
ANR	4689744	PostIncDecOperationExpression	num_alive ++		4689688	0					
ANR	4689745	Identifier	num_alive		4689688	0					
ANR	4689746	IncDec	++		4689688	1					
ANR	4689747	ReturnStatement	return num_alive ;	95:1:2441:2457	4689688	3	True				
ANR	4689748	Identifier	num_alive		4689688	0					
ANR	4689749	ReturnType	int		4689688	1					
ANR	4689750	Identifier	CondorCronJobList :: NumAliveJobs		4689688	2					
ANR	4689751	ParameterList			4689688	3					
ANR	4689752	CFGEntryNode	ENTRY		4689688		True				
ANR	4689753	CFGExitNode	EXIT		4689688		True				
ANR	4689754	Symbol	m_job_list		4689688						
ANR	4689755	Symbol	m_job_list . begin		4689688						
ANR	4689756	Symbol	* iter		4689688						
ANR	4689757	Symbol	* job		4689688						
ANR	4689758	Symbol	iter		4689688						
ANR	4689759	Symbol	num_alive		4689688						
ANR	4689760	Symbol	m_job_list . end		4689688						
ANR	4689761	Symbol	job		4689688						
ANR	4689762	Symbol	job -> IsAlive		4689688						
ANR	4689763	Function	CondorCronJobList :: RunningJobLoad	99:0:2510:2801							
ANR	4689764	FunctionDef	CondorCronJobList :: RunningJobLoad ()		4689763	0					
ANR	4689765	CompoundStatement		101:0:2565:2801	4689763	0					
ANR	4689766	IdentifierDeclStatement	double load = 0.0 ;	102:1:2568:2587	4689763	0	True				
ANR	4689767	IdentifierDecl	load = 0.0		4689763	0					
ANR	4689768	IdentifierDeclType	double		4689763	0					
ANR	4689769	Identifier	load		4689763	1					
ANR	4689770	AssignmentExpression	load = 0.0		4689763	2		=			
ANR	4689771	Identifier	load		4689763	0					
ANR	4689772	PrimaryExpression	0.0		4689763	1					
ANR	4689773	IdentifierDeclStatement	list < CronJob * > :: const_iterator iter ;	105:1:2617:2653	4689763	1	True				
ANR	4689774	IdentifierDecl	iter		4689763	0					
ANR	4689775	IdentifierDeclType	list < CronJob * > :: const_iterator		4689763	0					
ANR	4689776	Identifier	iter		4689763	1					
ANR	4689777	ForStatement	for ( iter = m_job_list . begin ( ) ; iter != m_job_list . end ( ) ; iter ++ )		4689763	2					
ANR	4689778	ForInit	iter = m_job_list . begin ( ) ;	106:6:2661:2686	4689763	0	True				
ANR	4689779	AssignmentExpression	iter = m_job_list . begin ( )		4689763	0		=			
ANR	4689780	Identifier	iter		4689763	0					
ANR	4689781	CallExpression	m_job_list . begin ( )		4689763	1					
ANR	4689782	Callee	m_job_list . begin		4689763	0					
ANR	4689783	MemberAccess	m_job_list . begin		4689763	0					
ANR	4689784	Identifier	m_job_list		4689763	0					
ANR	4689785	Identifier	begin		4689763	1					
ANR	4689786	ArgumentList			4689763	1					
ANR	4689787	Condition	iter != m_job_list . end ( )	106:33:2688:2711	4689763	1	True				
ANR	4689788	EqualityExpression	iter != m_job_list . end ( )		4689763	0		!=			
ANR	4689789	Identifier	iter		4689763	0					
ANR	4689790	CallExpression	m_job_list . end ( )		4689763	1					
ANR	4689791	Callee	m_job_list . end		4689763	0					
ANR	4689792	MemberAccess	m_job_list . end		4689763	0					
ANR	4689793	Identifier	m_job_list		4689763	0					
ANR	4689794	Identifier	end		4689763	1					
ANR	4689795	ArgumentList			4689763	1					
ANR	4689796	PostIncDecOperationExpression	iter ++	106:59:2714:2719	4689763	2	True				
ANR	4689797	Identifier	iter		4689763	0					
ANR	4689798	IncDec	++		4689763	1					
ANR	4689799	CompoundStatement		7:2:161:187	4689763	3					
ANR	4689800	IdentifierDeclStatement	const CronJob * job = * iter ;	107:2:2727:2753	4689763	0	True				
ANR	4689801	IdentifierDecl	* job = * iter		4689763	0					
ANR	4689802	IdentifierDeclType	const CronJob *		4689763	0					
ANR	4689803	Identifier	job		4689763	1					
ANR	4689804	AssignmentExpression	* job = * iter		4689763	2		=			
ANR	4689805	Identifier	job		4689763	0					
ANR	4689806	UnaryOperationExpression	* iter		4689763	1					
ANR	4689807	UnaryOperator	*		4689763	0					
ANR	4689808	Identifier	iter		4689763	1					
ANR	4689809	ExpressionStatement	load += job -> GetRunLoad ( )	108:2:2757:2782	4689763	1	True				
ANR	4689810	AssignmentExpression	load += job -> GetRunLoad ( )		4689763	0		+=			
ANR	4689811	Identifier	load		4689763	0					
ANR	4689812	CallExpression	job -> GetRunLoad ( )		4689763	1					
ANR	4689813	Callee	job -> GetRunLoad		4689763	0					
ANR	4689814	PtrMemberAccess	job -> GetRunLoad		4689763	0					
ANR	4689815	Identifier	job		4689763	0					
ANR	4689816	Identifier	GetRunLoad		4689763	1					
ANR	4689817	ArgumentList			4689763	1					
ANR	4689818	ReturnStatement	return load ;	110:1:2788:2799	4689763	3	True				
ANR	4689819	Identifier	load		4689763	0					
ANR	4689820	ReturnType	double		4689763	1					
ANR	4689821	Identifier	CondorCronJobList :: RunningJobLoad		4689763	2					
ANR	4689822	ParameterList			4689763	3					
ANR	4689823	CFGEntryNode	ENTRY		4689763		True				
ANR	4689824	CFGExitNode	EXIT		4689763		True				
ANR	4689825	Symbol	m_job_list		4689763						
ANR	4689826	Symbol	m_job_list . begin		4689763						
ANR	4689827	Symbol	* iter		4689763						
ANR	4689828	Symbol	load		4689763						
ANR	4689829	Symbol	* job		4689763						
ANR	4689830	Symbol	job -> GetRunLoad		4689763						
ANR	4689831	Symbol	iter		4689763						
ANR	4689832	Symbol	m_job_list . end		4689763						
ANR	4689833	Symbol	job		4689763						
ANR	4689834	Function	CondorCronJobList :: NumActiveJobs	114:0:2846:3161							
ANR	4689835	FunctionDef	CondorCronJobList :: NumActiveJobs ()		4689834	0					
ANR	4689836	CompoundStatement		116:0:2897:3161	4689834	0					
ANR	4689837	IdentifierDeclStatement	int num_active = 0 ;	117:1:2900:2921	4689834	0	True				
ANR	4689838	IdentifierDecl	num_active = 0		4689834	0					
ANR	4689839	IdentifierDeclType	int		4689834	0					
ANR	4689840	Identifier	num_active		4689834	1					
ANR	4689841	AssignmentExpression	num_active = 0		4689834	2		=			
ANR	4689842	Identifier	num_active		4689834	0					
ANR	4689843	PrimaryExpression	0		4689834	1					
ANR	4689844	IdentifierDeclStatement	list < CronJob * > :: const_iterator iter ;	120:1:2951:2987	4689834	1	True				
ANR	4689845	IdentifierDecl	iter		4689834	0					
ANR	4689846	IdentifierDeclType	list < CronJob * > :: const_iterator		4689834	0					
ANR	4689847	Identifier	iter		4689834	1					
ANR	4689848	ForStatement	for ( iter = m_job_list . begin ( ) ; iter != m_job_list . end ( ) ; iter ++ )		4689834	2					
ANR	4689849	ForInit	iter = m_job_list . begin ( ) ;	121:6:2995:3020	4689834	0	True				
ANR	4689850	AssignmentExpression	iter = m_job_list . begin ( )		4689834	0		=			
ANR	4689851	Identifier	iter		4689834	0					
ANR	4689852	CallExpression	m_job_list . begin ( )		4689834	1					
ANR	4689853	Callee	m_job_list . begin		4689834	0					
ANR	4689854	MemberAccess	m_job_list . begin		4689834	0					
ANR	4689855	Identifier	m_job_list		4689834	0					
ANR	4689856	Identifier	begin		4689834	1					
ANR	4689857	ArgumentList			4689834	1					
ANR	4689858	Condition	iter != m_job_list . end ( )	121:33:3022:3045	4689834	1	True				
ANR	4689859	EqualityExpression	iter != m_job_list . end ( )		4689834	0		!=			
ANR	4689860	Identifier	iter		4689834	0					
ANR	4689861	CallExpression	m_job_list . end ( )		4689834	1					
ANR	4689862	Callee	m_job_list . end		4689834	0					
ANR	4689863	MemberAccess	m_job_list . end		4689834	0					
ANR	4689864	Identifier	m_job_list		4689834	0					
ANR	4689865	Identifier	end		4689834	1					
ANR	4689866	ArgumentList			4689834	1					
ANR	4689867	PostIncDecOperationExpression	iter ++	121:59:3048:3053	4689834	2	True				
ANR	4689868	Identifier	iter		4689834	0					
ANR	4689869	IncDec	++		4689834	1					
ANR	4689870	CompoundStatement		7:2:163:189	4689834	3					
ANR	4689871	IdentifierDeclStatement	const CronJob * job = * iter ;	122:2:3061:3087	4689834	0	True				
ANR	4689872	IdentifierDecl	* job = * iter		4689834	0					
ANR	4689873	IdentifierDeclType	const CronJob *		4689834	0					
ANR	4689874	Identifier	job		4689834	1					
ANR	4689875	AssignmentExpression	* job = * iter		4689834	2		=			
ANR	4689876	Identifier	job		4689834	0					
ANR	4689877	UnaryOperationExpression	* iter		4689834	1					
ANR	4689878	UnaryOperator	*		4689834	0					
ANR	4689879	Identifier	iter		4689834	1					
ANR	4689880	IfStatement	if ( job -> IsActive ( ) )		4689834	1					
ANR	4689881	Condition	job -> IsActive ( )	123:7:3096:3111	4689834	0	True				
ANR	4689882	CallExpression	job -> IsActive ( )		4689834	0					
ANR	4689883	Callee	job -> IsActive		4689834	0					
ANR	4689884	PtrMemberAccess	job -> IsActive		4689834	0					
ANR	4689885	Identifier	job		4689834	0					
ANR	4689886	Identifier	IsActive		4689834	1					
ANR	4689887	ArgumentList			4689834	1					
ANR	4689888	CompoundStatement		8:26:217:217	4689834	1					
ANR	4689889	ExpressionStatement	num_active ++	124:3:3120:3132	4689834	0	True				
ANR	4689890	PostIncDecOperationExpression	num_active ++		4689834	0					
ANR	4689891	Identifier	num_active		4689834	0					
ANR	4689892	IncDec	++		4689834	1					
ANR	4689893	ReturnStatement	return num_active ;	127:1:3142:3159	4689834	3	True				
ANR	4689894	Identifier	num_active		4689834	0					
ANR	4689895	ReturnType	int		4689834	1					
ANR	4689896	Identifier	CondorCronJobList :: NumActiveJobs		4689834	2					
ANR	4689897	ParameterList			4689834	3					
ANR	4689898	CFGEntryNode	ENTRY		4689834		True				
ANR	4689899	CFGExitNode	EXIT		4689834		True				
ANR	4689900	Symbol	m_job_list		4689834						
ANR	4689901	Symbol	m_job_list . begin		4689834						
ANR	4689902	Symbol	* iter		4689834						
ANR	4689903	Symbol	* job		4689834						
ANR	4689904	Symbol	iter		4689834						
ANR	4689905	Symbol	num_active		4689834						
ANR	4689906	Symbol	m_job_list . end		4689834						
ANR	4689907	Symbol	job		4689834						
ANR	4689908	Symbol	job -> IsActive		4689834						
ANR	4689909	Function	CondorCronJobList :: GetStringList	131:0:3224:3519							
ANR	4689910	FunctionDef	CondorCronJobList :: GetStringList (StringList & sl)		4689909	0					
ANR	4689911	CompoundStatement		133:0:3286:3519	4689909	0					
ANR	4689912	ExpressionStatement	sl . clearAll ( )	134:1:3289:3303	4689909	0	True				
ANR	4689913	CallExpression	sl . clearAll ( )		4689909	0					
ANR	4689914	Callee	sl . clearAll		4689909	0					
ANR	4689915	MemberAccess	sl . clearAll		4689909	0					
ANR	4689916	Identifier	sl		4689909	0					
ANR	4689917	Identifier	clearAll		4689909	1					
ANR	4689918	ArgumentList			4689909	1					
ANR	4689919	IdentifierDeclStatement	list < CronJob * > :: const_iterator iter ;	137:1:3333:3369	4689909	1	True				
ANR	4689920	IdentifierDecl	iter		4689909	0					
ANR	4689921	IdentifierDeclType	list < CronJob * > :: const_iterator		4689909	0					
ANR	4689922	Identifier	iter		4689909	1					
ANR	4689923	ForStatement	for ( iter = m_job_list . begin ( ) ; iter != m_job_list . end ( ) ; iter ++ )		4689909	2					
ANR	4689924	ForInit	iter = m_job_list . begin ( ) ;	138:6:3377:3402	4689909	0	True				
ANR	4689925	AssignmentExpression	iter = m_job_list . begin ( )		4689909	0		=			
ANR	4689926	Identifier	iter		4689909	0					
ANR	4689927	CallExpression	m_job_list . begin ( )		4689909	1					
ANR	4689928	Callee	m_job_list . begin		4689909	0					
ANR	4689929	MemberAccess	m_job_list . begin		4689909	0					
ANR	4689930	Identifier	m_job_list		4689909	0					
ANR	4689931	Identifier	begin		4689909	1					
ANR	4689932	ArgumentList			4689909	1					
ANR	4689933	Condition	iter != m_job_list . end ( )	138:33:3404:3427	4689909	1	True				
ANR	4689934	EqualityExpression	iter != m_job_list . end ( )		4689909	0		!=			
ANR	4689935	Identifier	iter		4689909	0					
ANR	4689936	CallExpression	m_job_list . end ( )		4689909	1					
ANR	4689937	Callee	m_job_list . end		4689909	0					
ANR	4689938	MemberAccess	m_job_list . end		4689909	0					
ANR	4689939	Identifier	m_job_list		4689909	0					
ANR	4689940	Identifier	end		4689909	1					
ANR	4689941	ArgumentList			4689909	1					
ANR	4689942	PostIncDecOperationExpression	iter ++	138:59:3430:3435	4689909	2	True				
ANR	4689943	Identifier	iter		4689909	0					
ANR	4689944	IncDec	++		4689909	1					
ANR	4689945	CompoundStatement		7:2:156:182	4689909	3					
ANR	4689946	IdentifierDeclStatement	const CronJob * job = * iter ;	139:2:3443:3469	4689909	0	True				
ANR	4689947	IdentifierDecl	* job = * iter		4689909	0					
ANR	4689948	IdentifierDeclType	const CronJob *		4689909	0					
ANR	4689949	Identifier	job		4689909	1					
ANR	4689950	AssignmentExpression	* job = * iter		4689909	2		=			
ANR	4689951	Identifier	job		4689909	0					
ANR	4689952	UnaryOperationExpression	* iter		4689909	1					
ANR	4689953	UnaryOperator	*		4689909	0					
ANR	4689954	Identifier	iter		4689909	1					
ANR	4689955	ExpressionStatement	sl . append ( job -> GetName ( ) )	140:2:3473:3500	4689909	1	True				
ANR	4689956	CallExpression	sl . append ( job -> GetName ( ) )		4689909	0					
ANR	4689957	Callee	sl . append		4689909	0					
ANR	4689958	MemberAccess	sl . append		4689909	0					
ANR	4689959	Identifier	sl		4689909	0					
ANR	4689960	Identifier	append		4689909	1					
ANR	4689961	ArgumentList	job -> GetName ( )		4689909	1					
ANR	4689962	Argument	job -> GetName ( )		4689909	0					
ANR	4689963	CallExpression	job -> GetName ( )		4689909	0					
ANR	4689964	Callee	job -> GetName		4689909	0					
ANR	4689965	PtrMemberAccess	job -> GetName		4689909	0					
ANR	4689966	Identifier	job		4689909	0					
ANR	4689967	Identifier	GetName		4689909	1					
ANR	4689968	ArgumentList			4689909	1					
ANR	4689969	ReturnStatement	return true ;	142:1:3506:3517	4689909	3	True				
ANR	4689970	Identifier	true		4689909	0					
ANR	4689971	ReturnType	bool		4689909	1					
ANR	4689972	Identifier	CondorCronJobList :: GetStringList		4689909	2					
ANR	4689973	ParameterList	StringList & sl		4689909	3					
ANR	4689974	Parameter	StringList & sl	132:34:3263:3276	4689909	0	True				
ANR	4689975	ParameterType	StringList &		4689909	0					
ANR	4689976	Identifier	sl		4689909	1					
ANR	4689977	CFGEntryNode	ENTRY		4689909		True				
ANR	4689978	CFGExitNode	EXIT		4689909		True				
ANR	4689979	Symbol	m_job_list		4689909						
ANR	4689980	Symbol	m_job_list . begin		4689909						
ANR	4689981	Symbol	* iter		4689909						
ANR	4689982	Symbol	* job		4689909						
ANR	4689983	Symbol	true		4689909						
ANR	4689984	Symbol	sl		4689909						
ANR	4689985	Symbol	iter		4689909						
ANR	4689986	Symbol	m_job_list . end		4689909						
ANR	4689987	Symbol	job		4689909						
ANR	4689988	Symbol	job -> GetName		4689909						
ANR	4689989	Function	CondorCronJobList :: HandleReconfig	146:0:3546:3787							
ANR	4689990	FunctionDef	CondorCronJobList :: HandleReconfig ()		4689989	0					
ANR	4689991	CompoundStatement		148:0:3592:3787	4689989	0					
ANR	4689992	IdentifierDeclStatement	list < CronJob * > :: iterator iter ;	150:1:3621:3651	4689989	0	True				
ANR	4689993	IdentifierDecl	iter		4689989	0					
ANR	4689994	IdentifierDeclType	list < CronJob * > :: iterator		4689989	0					
ANR	4689995	Identifier	iter		4689989	1					
ANR	4689996	ForStatement	for ( iter = m_job_list . begin ( ) ; iter != m_job_list . end ( ) ; iter ++ )		4689989	1					
ANR	4689997	ForInit	iter = m_job_list . begin ( ) ;	151:6:3659:3684	4689989	0	True				
ANR	4689998	AssignmentExpression	iter = m_job_list . begin ( )		4689989	0		=			
ANR	4689999	Identifier	iter		4689989	0					
ANR	4690000	CallExpression	m_job_list . begin ( )		4689989	1					
ANR	4690001	Callee	m_job_list . begin		4689989	0					
ANR	4690002	MemberAccess	m_job_list . begin		4689989	0					
ANR	4690003	Identifier	m_job_list		4689989	0					
ANR	4690004	Identifier	begin		4689989	1					
ANR	4690005	ArgumentList			4689989	1					
ANR	4690006	Condition	iter != m_job_list . end ( )	151:33:3686:3709	4689989	1	True				
ANR	4690007	EqualityExpression	iter != m_job_list . end ( )		4689989	0		!=			
ANR	4690008	Identifier	iter		4689989	0					
ANR	4690009	CallExpression	m_job_list . end ( )		4689989	1					
ANR	4690010	Callee	m_job_list . end		4689989	0					
ANR	4690011	MemberAccess	m_job_list . end		4689989	0					
ANR	4690012	Identifier	m_job_list		4689989	0					
ANR	4690013	Identifier	end		4689989	1					
ANR	4690014	ArgumentList			4689989	1					
ANR	4690015	PostIncDecOperationExpression	iter ++	151:59:3712:3717	4689989	2	True				
ANR	4690016	Identifier	iter		4689989	0					
ANR	4690017	IncDec	++		4689989	1					
ANR	4690018	CompoundStatement		5:2:132:152	4689989	3					
ANR	4690019	IdentifierDeclStatement	CronJob * job = * iter ;	152:2:3725:3745	4689989	0	True				
ANR	4690020	IdentifierDecl	* job = * iter		4689989	0					
ANR	4690021	IdentifierDeclType	CronJob *		4689989	0					
ANR	4690022	Identifier	job		4689989	1					
ANR	4690023	AssignmentExpression	* job = * iter		4689989	2		=			
ANR	4690024	Identifier	job		4689989	0					
ANR	4690025	UnaryOperationExpression	* iter		4689989	1					
ANR	4690026	UnaryOperator	*		4689989	0					
ANR	4690027	Identifier	iter		4689989	1					
ANR	4690028	ExpressionStatement	job -> HandleReconfig ( )	153:2:3749:3771	4689989	1	True				
ANR	4690029	CallExpression	job -> HandleReconfig ( )		4689989	0					
ANR	4690030	Callee	job -> HandleReconfig		4689989	0					
ANR	4690031	PtrMemberAccess	job -> HandleReconfig		4689989	0					
ANR	4690032	Identifier	job		4689989	0					
ANR	4690033	Identifier	HandleReconfig		4689989	1					
ANR	4690034	ArgumentList			4689989	1					
ANR	4690035	ReturnStatement	return 0 ;	155:1:3777:3785	4689989	2	True				
ANR	4690036	PrimaryExpression	0		4689989	0					
ANR	4690037	ReturnType	int		4689989	1					
ANR	4690038	Identifier	CondorCronJobList :: HandleReconfig		4689989	2					
ANR	4690039	ParameterList			4689989	3					
ANR	4690040	CFGEntryNode	ENTRY		4689989		True				
ANR	4690041	CFGExitNode	EXIT		4689989		True				
ANR	4690042	Symbol	m_job_list		4689989						
ANR	4690043	Symbol	m_job_list . begin		4689989						
ANR	4690044	Symbol	* iter		4689989						
ANR	4690045	Symbol	iter		4689989						
ANR	4690046	Symbol	m_job_list . end		4689989						
ANR	4690047	Symbol	job		4689989						
ANR	4690048	Function	CondorCronJobList :: InitializeAll	159:0:3813:4049							
ANR	4690049	FunctionDef	CondorCronJobList :: InitializeAll ()		4690048	0					
ANR	4690050	CompoundStatement		161:0:3858:4049	4690048	0					
ANR	4690051	IdentifierDeclStatement	list < CronJob * > :: iterator iter ;	163:1:3887:3917	4690048	0	True				
ANR	4690052	IdentifierDecl	iter		4690048	0					
ANR	4690053	IdentifierDeclType	list < CronJob * > :: iterator		4690048	0					
ANR	4690054	Identifier	iter		4690048	1					
ANR	4690055	ForStatement	for ( iter = m_job_list . begin ( ) ; iter != m_job_list . end ( ) ; iter ++ )		4690048	1					
ANR	4690056	ForInit	iter = m_job_list . begin ( ) ;	164:6:3925:3950	4690048	0	True				
ANR	4690057	AssignmentExpression	iter = m_job_list . begin ( )		4690048	0		=			
ANR	4690058	Identifier	iter		4690048	0					
ANR	4690059	CallExpression	m_job_list . begin ( )		4690048	1					
ANR	4690060	Callee	m_job_list . begin		4690048	0					
ANR	4690061	MemberAccess	m_job_list . begin		4690048	0					
ANR	4690062	Identifier	m_job_list		4690048	0					
ANR	4690063	Identifier	begin		4690048	1					
ANR	4690064	ArgumentList			4690048	1					
ANR	4690065	Condition	iter != m_job_list . end ( )	164:33:3952:3975	4690048	1	True				
ANR	4690066	EqualityExpression	iter != m_job_list . end ( )		4690048	0		!=			
ANR	4690067	Identifier	iter		4690048	0					
ANR	4690068	CallExpression	m_job_list . end ( )		4690048	1					
ANR	4690069	Callee	m_job_list . end		4690048	0					
ANR	4690070	MemberAccess	m_job_list . end		4690048	0					
ANR	4690071	Identifier	m_job_list		4690048	0					
ANR	4690072	Identifier	end		4690048	1					
ANR	4690073	ArgumentList			4690048	1					
ANR	4690074	PostIncDecOperationExpression	iter ++	164:59:3978:3983	4690048	2	True				
ANR	4690075	Identifier	iter		4690048	0					
ANR	4690076	IncDec	++		4690048	1					
ANR	4690077	CompoundStatement		5:2:132:152	4690048	3					
ANR	4690078	IdentifierDeclStatement	CronJob * job = * iter ;	165:2:3991:4011	4690048	0	True				
ANR	4690079	IdentifierDecl	* job = * iter		4690048	0					
ANR	4690080	IdentifierDeclType	CronJob *		4690048	0					
ANR	4690081	Identifier	job		4690048	1					
ANR	4690082	AssignmentExpression	* job = * iter		4690048	2		=			
ANR	4690083	Identifier	job		4690048	0					
ANR	4690084	UnaryOperationExpression	* iter		4690048	1					
ANR	4690085	UnaryOperator	*		4690048	0					
ANR	4690086	Identifier	iter		4690048	1					
ANR	4690087	ExpressionStatement	job -> Initialize ( )	166:2:4015:4033	4690048	1	True				
ANR	4690088	CallExpression	job -> Initialize ( )		4690048	0					
ANR	4690089	Callee	job -> Initialize		4690048	0					
ANR	4690090	PtrMemberAccess	job -> Initialize		4690048	0					
ANR	4690091	Identifier	job		4690048	0					
ANR	4690092	Identifier	Initialize		4690048	1					
ANR	4690093	ArgumentList			4690048	1					
ANR	4690094	ReturnStatement	return 0 ;	168:1:4039:4047	4690048	2	True				
ANR	4690095	PrimaryExpression	0		4690048	0					
ANR	4690096	ReturnType	int		4690048	1					
ANR	4690097	Identifier	CondorCronJobList :: InitializeAll		4690048	2					
ANR	4690098	ParameterList			4690048	3					
ANR	4690099	CFGEntryNode	ENTRY		4690048		True				
ANR	4690100	CFGExitNode	EXIT		4690048		True				
ANR	4690101	Symbol	m_job_list		4690048						
ANR	4690102	Symbol	m_job_list . begin		4690048						
ANR	4690103	Symbol	* iter		4690048						
ANR	4690104	Symbol	iter		4690048						
ANR	4690105	Symbol	m_job_list . end		4690048						
ANR	4690106	Symbol	job		4690048						
ANR	4690107	Function	CondorCronJobList :: ScheduleAll	172:0:4073:4305							
ANR	4690108	FunctionDef	CondorCronJobList :: ScheduleAll ()		4690107	0					
ANR	4690109	CompoundStatement		174:0:4116:4305	4690107	0					
ANR	4690110	IdentifierDeclStatement	list < CronJob * > :: iterator iter ;	176:1:4145:4175	4690107	0	True				
ANR	4690111	IdentifierDecl	iter		4690107	0					
ANR	4690112	IdentifierDeclType	list < CronJob * > :: iterator		4690107	0					
ANR	4690113	Identifier	iter		4690107	1					
ANR	4690114	ForStatement	for ( iter = m_job_list . begin ( ) ; iter != m_job_list . end ( ) ; iter ++ )		4690107	1					
ANR	4690115	ForInit	iter = m_job_list . begin ( ) ;	177:6:4183:4208	4690107	0	True				
ANR	4690116	AssignmentExpression	iter = m_job_list . begin ( )		4690107	0		=			
ANR	4690117	Identifier	iter		4690107	0					
ANR	4690118	CallExpression	m_job_list . begin ( )		4690107	1					
ANR	4690119	Callee	m_job_list . begin		4690107	0					
ANR	4690120	MemberAccess	m_job_list . begin		4690107	0					
ANR	4690121	Identifier	m_job_list		4690107	0					
ANR	4690122	Identifier	begin		4690107	1					
ANR	4690123	ArgumentList			4690107	1					
ANR	4690124	Condition	iter != m_job_list . end ( )	177:33:4210:4233	4690107	1	True				
ANR	4690125	EqualityExpression	iter != m_job_list . end ( )		4690107	0		!=			
ANR	4690126	Identifier	iter		4690107	0					
ANR	4690127	CallExpression	m_job_list . end ( )		4690107	1					
ANR	4690128	Callee	m_job_list . end		4690107	0					
ANR	4690129	MemberAccess	m_job_list . end		4690107	0					
ANR	4690130	Identifier	m_job_list		4690107	0					
ANR	4690131	Identifier	end		4690107	1					
ANR	4690132	ArgumentList			4690107	1					
ANR	4690133	PostIncDecOperationExpression	iter ++	177:59:4236:4241	4690107	2	True				
ANR	4690134	Identifier	iter		4690107	0					
ANR	4690135	IncDec	++		4690107	1					
ANR	4690136	CompoundStatement		5:2:132:152	4690107	3					
ANR	4690137	IdentifierDeclStatement	CronJob * job = * iter ;	178:2:4249:4269	4690107	0	True				
ANR	4690138	IdentifierDecl	* job = * iter		4690107	0					
ANR	4690139	IdentifierDeclType	CronJob *		4690107	0					
ANR	4690140	Identifier	job		4690107	1					
ANR	4690141	AssignmentExpression	* job = * iter		4690107	2		=			
ANR	4690142	Identifier	job		4690107	0					
ANR	4690143	UnaryOperationExpression	* iter		4690107	1					
ANR	4690144	UnaryOperator	*		4690107	0					
ANR	4690145	Identifier	iter		4690107	1					
ANR	4690146	ExpressionStatement	job -> Schedule ( )	179:2:4273:4289	4690107	1	True				
ANR	4690147	CallExpression	job -> Schedule ( )		4690107	0					
ANR	4690148	Callee	job -> Schedule		4690107	0					
ANR	4690149	PtrMemberAccess	job -> Schedule		4690107	0					
ANR	4690150	Identifier	job		4690107	0					
ANR	4690151	Identifier	Schedule		4690107	1					
ANR	4690152	ArgumentList			4690107	1					
ANR	4690153	ReturnStatement	return 0 ;	181:1:4295:4303	4690107	2	True				
ANR	4690154	PrimaryExpression	0		4690107	0					
ANR	4690155	ReturnType	int		4690107	1					
ANR	4690156	Identifier	CondorCronJobList :: ScheduleAll		4690107	2					
ANR	4690157	ParameterList			4690107	3					
ANR	4690158	CFGEntryNode	ENTRY		4690107		True				
ANR	4690159	CFGExitNode	EXIT		4690107		True				
ANR	4690160	Symbol	m_job_list		4690107						
ANR	4690161	Symbol	m_job_list . begin		4690107						
ANR	4690162	Symbol	* iter		4690107						
ANR	4690163	Symbol	iter		4690107						
ANR	4690164	Symbol	m_job_list . end		4690107						
ANR	4690165	Symbol	job		4690107						
ANR	4690166	Function	CondorCronJobList :: StartOnDemandJobs	185:0:4329:4645							
ANR	4690167	FunctionDef	CondorCronJobList :: StartOnDemandJobs ()		4690166	0					
ANR	4690168	CompoundStatement		187:0:4378:4645	4690166	0					
ANR	4690169	IdentifierDeclStatement	int num = 0 ;	188:1:4381:4395	4690166	0	True				
ANR	4690170	IdentifierDecl	num = 0		4690166	0					
ANR	4690171	IdentifierDeclType	int		4690166	0					
ANR	4690172	Identifier	num		4690166	1					
ANR	4690173	AssignmentExpression	num = 0		4690166	2		=			
ANR	4690174	Identifier	num		4690166	0					
ANR	4690175	PrimaryExpression	0		4690166	1					
ANR	4690176	IdentifierDeclStatement	list < CronJob * > :: iterator iter ;	191:1:4425:4455	4690166	1	True				
ANR	4690177	IdentifierDecl	iter		4690166	0					
ANR	4690178	IdentifierDeclType	list < CronJob * > :: iterator		4690166	0					
ANR	4690179	Identifier	iter		4690166	1					
ANR	4690180	ForStatement	for ( iter = m_job_list . begin ( ) ; iter != m_job_list . end ( ) ; iter ++ )		4690166	2					
ANR	4690181	ForInit	iter = m_job_list . begin ( ) ;	192:6:4463:4488	4690166	0	True				
ANR	4690182	AssignmentExpression	iter = m_job_list . begin ( )		4690166	0		=			
ANR	4690183	Identifier	iter		4690166	0					
ANR	4690184	CallExpression	m_job_list . begin ( )		4690166	1					
ANR	4690185	Callee	m_job_list . begin		4690166	0					
ANR	4690186	MemberAccess	m_job_list . begin		4690166	0					
ANR	4690187	Identifier	m_job_list		4690166	0					
ANR	4690188	Identifier	begin		4690166	1					
ANR	4690189	ArgumentList			4690166	1					
ANR	4690190	Condition	iter != m_job_list . end ( )	192:33:4490:4513	4690166	1	True				
ANR	4690191	EqualityExpression	iter != m_job_list . end ( )		4690166	0		!=			
ANR	4690192	Identifier	iter		4690166	0					
ANR	4690193	CallExpression	m_job_list . end ( )		4690166	1					
ANR	4690194	Callee	m_job_list . end		4690166	0					
ANR	4690195	MemberAccess	m_job_list . end		4690166	0					
ANR	4690196	Identifier	m_job_list		4690166	0					
ANR	4690197	Identifier	end		4690166	1					
ANR	4690198	ArgumentList			4690166	1					
ANR	4690199	PostIncDecOperationExpression	iter ++	192:59:4516:4521	4690166	2	True				
ANR	4690200	Identifier	iter		4690166	0					
ANR	4690201	IncDec	++		4690166	1					
ANR	4690202	CompoundStatement		7:2:150:170	4690166	3					
ANR	4690203	IdentifierDeclStatement	CronJob * job = * iter ;	193:2:4529:4549	4690166	0	True				
ANR	4690204	IdentifierDecl	* job = * iter		4690166	0					
ANR	4690205	IdentifierDeclType	CronJob *		4690166	0					
ANR	4690206	Identifier	job		4690166	1					
ANR	4690207	AssignmentExpression	* job = * iter		4690166	2		=			
ANR	4690208	Identifier	job		4690166	0					
ANR	4690209	UnaryOperationExpression	* iter		4690166	1					
ANR	4690210	UnaryOperator	*		4690166	0					
ANR	4690211	Identifier	iter		4690166	1					
ANR	4690212	IfStatement	if ( job -> Params ( ) . IsOnDemand ( ) )		4690166	1					
ANR	4690213	Condition	job -> Params ( ) . IsOnDemand ( )	194:7:4558:4583	4690166	0	True				
ANR	4690214	CallExpression	job -> Params ( ) . IsOnDemand ( )		4690166	0					
ANR	4690215	Callee	job -> Params ( ) . IsOnDemand		4690166	0					
ANR	4690216	MemberAccess	job -> Params ( ) . IsOnDemand		4690166	0					
ANR	4690217	CallExpression	job -> Params ( )		4690166	0					
ANR	4690218	Callee	job -> Params		4690166	0					
ANR	4690219	PtrMemberAccess	job -> Params		4690166	0					
ANR	4690220	Identifier	job		4690166	0					
ANR	4690221	Identifier	Params		4690166	1					
ANR	4690222	ArgumentList			4690166	1					
ANR	4690223	Identifier	IsOnDemand		4690166	1					
ANR	4690224	ArgumentList			4690166	1					
ANR	4690225	CompoundStatement		8:36:208:208	4690166	1					
ANR	4690226	ExpressionStatement	job -> StartOnDemand ( )	195:3:4592:4613	4690166	0	True				
ANR	4690227	CallExpression	job -> StartOnDemand ( )		4690166	0					
ANR	4690228	Callee	job -> StartOnDemand		4690166	0					
ANR	4690229	PtrMemberAccess	job -> StartOnDemand		4690166	0					
ANR	4690230	Identifier	job		4690166	0					
ANR	4690231	Identifier	StartOnDemand		4690166	1					
ANR	4690232	ArgumentList			4690166	1					
ANR	4690233	ExpressionStatement	num ++	196:3:4618:4623	4690166	1	True				
ANR	4690234	PostIncDecOperationExpression	num ++		4690166	0					
ANR	4690235	Identifier	num		4690166	0					
ANR	4690236	IncDec	++		4690166	1					
ANR	4690237	ReturnStatement	return num ;	199:1:4633:4643	4690166	3	True				
ANR	4690238	Identifier	num		4690166	0					
ANR	4690239	ReturnType	int		4690166	1					
ANR	4690240	Identifier	CondorCronJobList :: StartOnDemandJobs		4690166	2					
ANR	4690241	ParameterList			4690166	3					
ANR	4690242	CFGEntryNode	ENTRY		4690166		True				
ANR	4690243	CFGExitNode	EXIT		4690166		True				
ANR	4690244	Symbol	m_job_list		4690166						
ANR	4690245	Symbol	m_job_list . begin		4690166						
ANR	4690246	Symbol	* iter		4690166						
ANR	4690247	Symbol	job -> Params ( ) . IsOnDemand		4690166						
ANR	4690248	Symbol	num		4690166						
ANR	4690249	Symbol	* job		4690166						
ANR	4690250	Symbol	iter		4690166						
ANR	4690251	Symbol	job -> Params		4690166						
ANR	4690252	Symbol	m_job_list . end		4690166						
ANR	4690253	Symbol	job		4690166						
ANR	4690254	Function	CondorCronJobList :: ClearAllMarks	203:0:4671:4896							
ANR	4690255	FunctionDef	CondorCronJobList :: ClearAllMarks ()		4690254	0					
ANR	4690256	CompoundStatement		205:0:4717:4896	4690254	0					
ANR	4690257	IdentifierDeclStatement	list < CronJob * > :: iterator iter ;	207:1:4746:4776	4690254	0	True				
ANR	4690258	IdentifierDecl	iter		4690254	0					
ANR	4690259	IdentifierDeclType	list < CronJob * > :: iterator		4690254	0					
ANR	4690260	Identifier	iter		4690254	1					
ANR	4690261	ForStatement	for ( iter = m_job_list . begin ( ) ; iter != m_job_list . end ( ) ; iter ++ )		4690254	1					
ANR	4690262	ForInit	iter = m_job_list . begin ( ) ;	208:6:4784:4809	4690254	0	True				
ANR	4690263	AssignmentExpression	iter = m_job_list . begin ( )		4690254	0		=			
ANR	4690264	Identifier	iter		4690254	0					
ANR	4690265	CallExpression	m_job_list . begin ( )		4690254	1					
ANR	4690266	Callee	m_job_list . begin		4690254	0					
ANR	4690267	MemberAccess	m_job_list . begin		4690254	0					
ANR	4690268	Identifier	m_job_list		4690254	0					
ANR	4690269	Identifier	begin		4690254	1					
ANR	4690270	ArgumentList			4690254	1					
ANR	4690271	Condition	iter != m_job_list . end ( )	208:33:4811:4834	4690254	1	True				
ANR	4690272	EqualityExpression	iter != m_job_list . end ( )		4690254	0		!=			
ANR	4690273	Identifier	iter		4690254	0					
ANR	4690274	CallExpression	m_job_list . end ( )		4690254	1					
ANR	4690275	Callee	m_job_list . end		4690254	0					
ANR	4690276	MemberAccess	m_job_list . end		4690254	0					
ANR	4690277	Identifier	m_job_list		4690254	0					
ANR	4690278	Identifier	end		4690254	1					
ANR	4690279	ArgumentList			4690254	1					
ANR	4690280	PostIncDecOperationExpression	iter ++	208:59:4837:4842	4690254	2	True				
ANR	4690281	Identifier	iter		4690254	0					
ANR	4690282	IncDec	++		4690254	1					
ANR	4690283	CompoundStatement		5:2:132:152	4690254	3					
ANR	4690284	IdentifierDeclStatement	CronJob * job = * iter ;	209:2:4850:4870	4690254	0	True				
ANR	4690285	IdentifierDecl	* job = * iter		4690254	0					
ANR	4690286	IdentifierDeclType	CronJob *		4690254	0					
ANR	4690287	Identifier	job		4690254	1					
ANR	4690288	AssignmentExpression	* job = * iter		4690254	2		=			
ANR	4690289	Identifier	job		4690254	0					
ANR	4690290	UnaryOperationExpression	* iter		4690254	1					
ANR	4690291	UnaryOperator	*		4690254	0					
ANR	4690292	Identifier	iter		4690254	1					
ANR	4690293	ExpressionStatement	job -> ClearMark ( )	210:2:4874:4891	4690254	1	True				
ANR	4690294	CallExpression	job -> ClearMark ( )		4690254	0					
ANR	4690295	Callee	job -> ClearMark		4690254	0					
ANR	4690296	PtrMemberAccess	job -> ClearMark		4690254	0					
ANR	4690297	Identifier	job		4690254	0					
ANR	4690298	Identifier	ClearMark		4690254	1					
ANR	4690299	ArgumentList			4690254	1					
ANR	4690300	ReturnType	void		4690254	1					
ANR	4690301	Identifier	CondorCronJobList :: ClearAllMarks		4690254	2					
ANR	4690302	ParameterList			4690254	3					
ANR	4690303	CFGEntryNode	ENTRY		4690254		True				
ANR	4690304	CFGExitNode	EXIT		4690254		True				
ANR	4690305	Symbol	m_job_list		4690254						
ANR	4690306	Symbol	m_job_list . begin		4690254						
ANR	4690307	Symbol	* iter		4690254						
ANR	4690308	Symbol	iter		4690254						
ANR	4690309	Symbol	m_job_list . end		4690254						
ANR	4690310	Symbol	job		4690254						
ANR	4690311	Function	CondorCronJobList :: DeleteUnmarked	215:0:4927:5588							
ANR	4690312	FunctionDef	CondorCronJobList :: DeleteUnmarked ()		4690311	0					
ANR	4690313	CompoundStatement		217:0:4974:5588	4690311	0					
ANR	4690314	IdentifierDeclStatement	list < CronJob * > kill_list ;	218:1:4977:5004	4690311	0	True				
ANR	4690315	IdentifierDecl	kill_list		4690311	0					
ANR	4690316	IdentifierDeclType	list < CronJob * >		4690311	0					
ANR	4690317	Identifier	kill_list		4690311	1					
ANR	4690318	IdentifierDeclStatement	list < CronJob * > :: iterator iter ;	221:1:5069:5099	4690311	1	True				
ANR	4690319	IdentifierDecl	iter		4690311	0					
ANR	4690320	IdentifierDeclType	list < CronJob * > :: iterator		4690311	0					
ANR	4690321	Identifier	iter		4690311	1					
ANR	4690322	ForStatement	for ( iter = m_job_list . begin ( ) ; iter != m_job_list . end ( ) ; iter ++ )		4690311	2					
ANR	4690323	ForInit	iter = m_job_list . begin ( ) ;	222:6:5107:5132	4690311	0	True				
ANR	4690324	AssignmentExpression	iter = m_job_list . begin ( )		4690311	0		=			
ANR	4690325	Identifier	iter		4690311	0					
ANR	4690326	CallExpression	m_job_list . begin ( )		4690311	1					
ANR	4690327	Callee	m_job_list . begin		4690311	0					
ANR	4690328	MemberAccess	m_job_list . begin		4690311	0					
ANR	4690329	Identifier	m_job_list		4690311	0					
ANR	4690330	Identifier	begin		4690311	1					
ANR	4690331	ArgumentList			4690311	1					
ANR	4690332	Condition	iter != m_job_list . end ( )	222:33:5134:5157	4690311	1	True				
ANR	4690333	EqualityExpression	iter != m_job_list . end ( )		4690311	0		!=			
ANR	4690334	Identifier	iter		4690311	0					
ANR	4690335	CallExpression	m_job_list . end ( )		4690311	1					
ANR	4690336	Callee	m_job_list . end		4690311	0					
ANR	4690337	MemberAccess	m_job_list . end		4690311	0					
ANR	4690338	Identifier	m_job_list		4690311	0					
ANR	4690339	Identifier	end		4690311	1					
ANR	4690340	ArgumentList			4690311	1					
ANR	4690341	PostIncDecOperationExpression	iter ++	222:59:5160:5165	4690311	2	True				
ANR	4690342	Identifier	iter		4690311	0					
ANR	4690343	IncDec	++		4690311	1					
ANR	4690344	CompoundStatement		7:2:198:218	4690311	3					
ANR	4690345	IdentifierDeclStatement	CronJob * job = * iter ;	223:2:5173:5193	4690311	0	True				
ANR	4690346	IdentifierDecl	* job = * iter		4690311	0					
ANR	4690347	IdentifierDeclType	CronJob *		4690311	0					
ANR	4690348	Identifier	job		4690311	1					
ANR	4690349	AssignmentExpression	* job = * iter		4690311	2		=			
ANR	4690350	Identifier	job		4690311	0					
ANR	4690351	UnaryOperationExpression	* iter		4690311	1					
ANR	4690352	UnaryOperator	*		4690311	0					
ANR	4690353	Identifier	iter		4690311	1					
ANR	4690354	IfStatement	if ( ! job -> IsMarked ( ) )		4690311	1					
ANR	4690355	Condition	! job -> IsMarked ( )	224:7:5202:5219	4690311	0	True				
ANR	4690356	UnaryOperationExpression	! job -> IsMarked ( )		4690311	0					
ANR	4690357	UnaryOperator	!		4690311	0					
ANR	4690358	CallExpression	job -> IsMarked ( )		4690311	1					
ANR	4690359	Callee	job -> IsMarked		4690311	0					
ANR	4690360	PtrMemberAccess	job -> IsMarked		4690311	0					
ANR	4690361	Identifier	job		4690311	0					
ANR	4690362	Identifier	IsMarked		4690311	1					
ANR	4690363	ArgumentList			4690311	1					
ANR	4690364	CompoundStatement		8:28:248:248	4690311	1					
ANR	4690365	ExpressionStatement	kill_list . push_back ( job )	225:3:5228:5254	4690311	0	True				
ANR	4690366	CallExpression	kill_list . push_back ( job )		4690311	0					
ANR	4690367	Callee	kill_list . push_back		4690311	0					
ANR	4690368	MemberAccess	kill_list . push_back		4690311	0					
ANR	4690369	Identifier	kill_list		4690311	0					
ANR	4690370	Identifier	push_back		4690311	1					
ANR	4690371	ArgumentList	job		4690311	1					
ANR	4690372	Argument	job		4690311	0					
ANR	4690373	Identifier	job		4690311	0					
ANR	4690374	ForStatement	for ( iter = kill_list . begin ( ) ; iter != kill_list . end ( ) ; iter ++ )		4690311	3					
ANR	4690375	ForInit	iter = kill_list . begin ( ) ;	229:6:5270:5294	4690311	0	True				
ANR	4690376	AssignmentExpression	iter = kill_list . begin ( )		4690311	0		=			
ANR	4690377	Identifier	iter		4690311	0					
ANR	4690378	CallExpression	kill_list . begin ( )		4690311	1					
ANR	4690379	Callee	kill_list . begin		4690311	0					
ANR	4690380	MemberAccess	kill_list . begin		4690311	0					
ANR	4690381	Identifier	kill_list		4690311	0					
ANR	4690382	Identifier	begin		4690311	1					
ANR	4690383	ArgumentList			4690311	1					
ANR	4690384	Condition	iter != kill_list . end ( )	229:32:5296:5318	4690311	1	True				
ANR	4690385	EqualityExpression	iter != kill_list . end ( )		4690311	0		!=			
ANR	4690386	Identifier	iter		4690311	0					
ANR	4690387	CallExpression	kill_list . end ( )		4690311	1					
ANR	4690388	Callee	kill_list . end		4690311	0					
ANR	4690389	MemberAccess	kill_list . end		4690311	0					
ANR	4690390	Identifier	kill_list		4690311	0					
ANR	4690391	Identifier	end		4690311	1					
ANR	4690392	ArgumentList			4690311	1					
ANR	4690393	PostIncDecOperationExpression	iter ++	229:57:5321:5326	4690311	2	True				
ANR	4690394	Identifier	iter		4690311	0					
ANR	4690395	IncDec	++		4690311	1					
ANR	4690396	CompoundStatement		14:2:359:379	4690311	3					
ANR	4690397	IdentifierDeclStatement	CronJob * job = * iter ;	230:2:5334:5354	4690311	0	True				
ANR	4690398	IdentifierDecl	* job = * iter		4690311	0					
ANR	4690399	IdentifierDeclType	CronJob *		4690311	0					
ANR	4690400	Identifier	job		4690311	1					
ANR	4690401	AssignmentExpression	* job = * iter		4690311	2		=			
ANR	4690402	Identifier	job		4690311	0					
ANR	4690403	UnaryOperationExpression	* iter		4690311	1					
ANR	4690404	UnaryOperator	*		4690311	0					
ANR	4690405	Identifier	iter		4690311	1					
ANR	4690406	ExpressionStatement	"dprintf ( D_ALWAYS , ""Killing job %p '%s'\\n"" , job , job -> GetName ( ) )"	231:2:5358:5423	4690311	1	True				
ANR	4690407	CallExpression	"dprintf ( D_ALWAYS , ""Killing job %p '%s'\\n"" , job , job -> GetName ( ) )"		4690311	0					
ANR	4690408	Callee	dprintf		4690311	0					
ANR	4690409	Identifier	dprintf		4690311	0					
ANR	4690410	ArgumentList	D_ALWAYS		4690311	1					
ANR	4690411	Argument	D_ALWAYS		4690311	0					
ANR	4690412	Identifier	D_ALWAYS		4690311	0					
ANR	4690413	Argument	"""Killing job %p '%s'\\n"""		4690311	1					
ANR	4690414	PrimaryExpression	"""Killing job %p '%s'\\n"""		4690311	0					
ANR	4690415	Argument	job		4690311	2					
ANR	4690416	Identifier	job		4690311	0					
ANR	4690417	Argument	job -> GetName ( )		4690311	3					
ANR	4690418	CallExpression	job -> GetName ( )		4690311	0					
ANR	4690419	Callee	job -> GetName		4690311	0					
ANR	4690420	PtrMemberAccess	job -> GetName		4690311	0					
ANR	4690421	Identifier	job		4690311	0					
ANR	4690422	Identifier	GetName		4690311	1					
ANR	4690423	ArgumentList			4690311	1					
ANR	4690424	ExpressionStatement	job -> KillJob ( true )	232:2:5427:5447	4690311	2	True				
ANR	4690425	CallExpression	job -> KillJob ( true )		4690311	0					
ANR	4690426	Callee	job -> KillJob		4690311	0					
ANR	4690427	PtrMemberAccess	job -> KillJob		4690311	0					
ANR	4690428	Identifier	job		4690311	0					
ANR	4690429	Identifier	KillJob		4690311	1					
ANR	4690430	ArgumentList	true		4690311	1					
ANR	4690431	Argument	true		4690311	0					
ANR	4690432	Identifier	true		4690311	0					
ANR	4690433	ExpressionStatement	"dprintf ( D_ALWAYS , ""Erasing iterator\\n"" )"	233:2:5451:5492	4690311	3	True				
ANR	4690434	CallExpression	"dprintf ( D_ALWAYS , ""Erasing iterator\\n"" )"		4690311	0					
ANR	4690435	Callee	dprintf		4690311	0					
ANR	4690436	Identifier	dprintf		4690311	0					
ANR	4690437	ArgumentList	D_ALWAYS		4690311	1					
ANR	4690438	Argument	D_ALWAYS		4690311	0					
ANR	4690439	Identifier	D_ALWAYS		4690311	0					
ANR	4690440	Argument	"""Erasing iterator\\n"""		4690311	1					
ANR	4690441	PrimaryExpression	"""Erasing iterator\\n"""		4690311	0					
ANR	4690442	ExpressionStatement	m_job_list . remove ( job )	234:2:5496:5520	4690311	4	True				
ANR	4690443	CallExpression	m_job_list . remove ( job )		4690311	0					
ANR	4690444	Callee	m_job_list . remove		4690311	0					
ANR	4690445	MemberAccess	m_job_list . remove		4690311	0					
ANR	4690446	Identifier	m_job_list		4690311	0					
ANR	4690447	Identifier	remove		4690311	1					
ANR	4690448	ArgumentList	job		4690311	1					
ANR	4690449	Argument	job		4690311	0					
ANR	4690450	Identifier	job		4690311	0					
ANR	4690451	ExpressionStatement	"dprintf ( D_ALWAYS , ""Deleting job %p\\n"" , job )"	235:2:5524:5569	4690311	5	True				
ANR	4690452	CallExpression	"dprintf ( D_ALWAYS , ""Deleting job %p\\n"" , job )"		4690311	0					
ANR	4690453	Callee	dprintf		4690311	0					
ANR	4690454	Identifier	dprintf		4690311	0					
ANR	4690455	ArgumentList	D_ALWAYS		4690311	1					
ANR	4690456	Argument	D_ALWAYS		4690311	0					
ANR	4690457	Identifier	D_ALWAYS		4690311	0					
ANR	4690458	Argument	"""Deleting job %p\\n"""		4690311	1					
ANR	4690459	PrimaryExpression	"""Deleting job %p\\n"""		4690311	0					
ANR	4690460	Argument	job		4690311	2					
ANR	4690461	Identifier	job		4690311	0					
ANR	4690462	Statement	delete	236:2:5573:5578	4690311	6	True				
ANR	4690463	ExpressionStatement	job	236:9:5580:5583	4690311	7	True				
ANR	4690464	Identifier	job		4690311	0					
ANR	4690465	ReturnType	void		4690311	1					
ANR	4690466	Identifier	CondorCronJobList :: DeleteUnmarked		4690311	2					
ANR	4690467	ParameterList			4690311	3					
ANR	4690468	CFGEntryNode	ENTRY		4690311		True				
ANR	4690469	CFGExitNode	EXIT		4690311		True				
ANR	4690470	Symbol	m_job_list . begin		4690311						
ANR	4690471	Symbol	job -> IsMarked		4690311						
ANR	4690472	Symbol	* job		4690311						
ANR	4690473	Symbol	D_ALWAYS		4690311						
ANR	4690474	Symbol	iter		4690311						
ANR	4690475	Symbol	job -> GetName		4690311						
ANR	4690476	Symbol	kill_list		4690311						
ANR	4690477	Symbol	m_job_list		4690311						
ANR	4690478	Symbol	* iter		4690311						
ANR	4690479	Symbol	kill_list . end		4690311						
ANR	4690480	Symbol	true		4690311						
ANR	4690481	Symbol	m_job_list . end		4690311						
ANR	4690482	Symbol	job		4690311						
ANR	4690483	Symbol	kill_list . begin		4690311						
ANR	4690484	Function	CondorCronJobList :: AddJob	240:0:5591:5995							
ANR	4690485	FunctionDef	"CondorCronJobList :: AddJob (const char * name , CronJob * job)"		4690484	0					
ANR	4690486	CompoundStatement		242:0:5656:5995	4690484	0					
ANR	4690487	IfStatement	if ( NULL != FindJob ( name ) )		4690484	0					
ANR	4690488	Condition	NULL != FindJob ( name )	244:6:5707:5729	4690484	0	True				
ANR	4690489	EqualityExpression	NULL != FindJob ( name )		4690484	0		!=			
ANR	4690490	Identifier	NULL		4690484	0					
ANR	4690491	CallExpression	FindJob ( name )		4690484	1					
ANR	4690492	Callee	FindJob		4690484	0					
ANR	4690493	Identifier	FindJob		4690484	0					
ANR	4690494	ArgumentList	name		4690484	1					
ANR	4690495	Argument	name		4690484	0					
ANR	4690496	Identifier	name		4690484	0					
ANR	4690497	CompoundStatement		3:32:76:76	4690484	1					
ANR	4690498	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJobList: Not creating duplicate job '%s'\\n"" , name )"	245:2:5737:5817	4690484	0	True				
ANR	4690499	CallExpression	"dprintf ( D_ALWAYS , ""CronJobList: Not creating duplicate job '%s'\\n"" , name )"		4690484	0					
ANR	4690500	Callee	dprintf		4690484	0					
ANR	4690501	Identifier	dprintf		4690484	0					
ANR	4690502	ArgumentList	D_ALWAYS		4690484	1					
ANR	4690503	Argument	D_ALWAYS		4690484	0					
ANR	4690504	Identifier	D_ALWAYS		4690484	0					
ANR	4690505	Argument	"""CronJobList: Not creating duplicate job '%s'\\n"""		4690484	1					
ANR	4690506	PrimaryExpression	"""CronJobList: Not creating duplicate job '%s'\\n"""		4690484	0					
ANR	4690507	Argument	name		4690484	2					
ANR	4690508	Identifier	name		4690484	0					
ANR	4690509	ReturnStatement	return false ;	247:2:5821:5833	4690484	1	True				
ANR	4690510	Identifier	false		4690484	0					
ANR	4690511	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJobList: Adding job '%s'\\n"" , name )"	251:1:5880:5939	4690484	1	True				
ANR	4690512	CallExpression	"dprintf ( D_ALWAYS , ""CronJobList: Adding job '%s'\\n"" , name )"		4690484	0					
ANR	4690513	Callee	dprintf		4690484	0					
ANR	4690514	Identifier	dprintf		4690484	0					
ANR	4690515	ArgumentList	D_ALWAYS		4690484	1					
ANR	4690516	Argument	D_ALWAYS		4690484	0					
ANR	4690517	Identifier	D_ALWAYS		4690484	0					
ANR	4690518	Argument	"""CronJobList: Adding job '%s'\\n"""		4690484	1					
ANR	4690519	PrimaryExpression	"""CronJobList: Adding job '%s'\\n"""		4690484	0					
ANR	4690520	Argument	name		4690484	2					
ANR	4690521	Identifier	name		4690484	0					
ANR	4690522	ExpressionStatement	m_job_list . push_back ( job )	252:1:5942:5969	4690484	2	True				
ANR	4690523	CallExpression	m_job_list . push_back ( job )		4690484	0					
ANR	4690524	Callee	m_job_list . push_back		4690484	0					
ANR	4690525	MemberAccess	m_job_list . push_back		4690484	0					
ANR	4690526	Identifier	m_job_list		4690484	0					
ANR	4690527	Identifier	push_back		4690484	1					
ANR	4690528	ArgumentList	job		4690484	1					
ANR	4690529	Argument	job		4690484	0					
ANR	4690530	Identifier	job		4690484	0					
ANR	4690531	ReturnStatement	return true ;	255:1:5982:5993	4690484	3	True				
ANR	4690532	Identifier	true		4690484	0					
ANR	4690533	ReturnType	bool		4690484	1					
ANR	4690534	Identifier	CondorCronJobList :: AddJob		4690484	2					
ANR	4690535	ParameterList	"const char * name , CronJob * job"		4690484	3					
ANR	4690536	Parameter	const char * name	241:27:5623:5638	4690484	0	True				
ANR	4690537	ParameterType	const char *		4690484	0					
ANR	4690538	Identifier	name		4690484	1					
ANR	4690539	Parameter	CronJob * job	241:45:5641:5652	4690484	1	True				
ANR	4690540	ParameterType	CronJob *		4690484	0					
ANR	4690541	Identifier	job		4690484	1					
ANR	4690542	CFGEntryNode	ENTRY		4690484		True				
ANR	4690543	CFGExitNode	EXIT		4690484		True				
ANR	4690544	Symbol	m_job_list		4690484						
ANR	4690545	Symbol	NULL		4690484						
ANR	4690546	Symbol	name		4690484						
ANR	4690547	Symbol	D_ALWAYS		4690484						
ANR	4690548	Symbol	false		4690484						
ANR	4690549	Symbol	true		4690484						
ANR	4690550	Symbol	FindJob		4690484						
ANR	4690551	Symbol	job		4690484						
ANR	4690552	Function	CondorCronJobList :: DeleteJob	259:0:6014:6484							
ANR	4690553	FunctionDef	CondorCronJobList :: DeleteJob (const char * job_name)		4690552	0					
ANR	4690554	CompoundStatement		261:0:6071:6484	4690552	0					
ANR	4690555	IdentifierDeclStatement	list < CronJob * > :: iterator iter ;	263:1:6135:6165	4690552	0	True				
ANR	4690556	IdentifierDecl	iter		4690552	0					
ANR	4690557	IdentifierDeclType	list < CronJob * > :: iterator		4690552	0					
ANR	4690558	Identifier	iter		4690552	1					
ANR	4690559	ForStatement	for ( iter = m_job_list . begin ( ) ; iter != m_job_list . end ( ) ; iter ++ )		4690552	1					
ANR	4690560	ForInit	iter = m_job_list . begin ( ) ;	264:6:6173:6198	4690552	0	True				
ANR	4690561	AssignmentExpression	iter = m_job_list . begin ( )		4690552	0		=			
ANR	4690562	Identifier	iter		4690552	0					
ANR	4690563	CallExpression	m_job_list . begin ( )		4690552	1					
ANR	4690564	Callee	m_job_list . begin		4690552	0					
ANR	4690565	MemberAccess	m_job_list . begin		4690552	0					
ANR	4690566	Identifier	m_job_list		4690552	0					
ANR	4690567	Identifier	begin		4690552	1					
ANR	4690568	ArgumentList			4690552	1					
ANR	4690569	Condition	iter != m_job_list . end ( )	264:33:6200:6223	4690552	1	True				
ANR	4690570	EqualityExpression	iter != m_job_list . end ( )		4690552	0		!=			
ANR	4690571	Identifier	iter		4690552	0					
ANR	4690572	CallExpression	m_job_list . end ( )		4690552	1					
ANR	4690573	Callee	m_job_list . end		4690552	0					
ANR	4690574	MemberAccess	m_job_list . end		4690552	0					
ANR	4690575	Identifier	m_job_list		4690552	0					
ANR	4690576	Identifier	end		4690552	1					
ANR	4690577	ArgumentList			4690552	1					
ANR	4690578	PostIncDecOperationExpression	iter ++	264:59:6226:6231	4690552	2	True				
ANR	4690579	Identifier	iter		4690552	0					
ANR	4690580	IncDec	++		4690552	1					
ANR	4690581	CompoundStatement		5:2:167:187	4690552	3					
ANR	4690582	IdentifierDeclStatement	CronJob * job = * iter ;	265:2:6239:6259	4690552	0	True				
ANR	4690583	IdentifierDecl	* job = * iter		4690552	0					
ANR	4690584	IdentifierDeclType	CronJob *		4690552	0					
ANR	4690585	Identifier	job		4690552	1					
ANR	4690586	AssignmentExpression	* job = * iter		4690552	2		=			
ANR	4690587	Identifier	job		4690552	0					
ANR	4690588	UnaryOperationExpression	* iter		4690552	1					
ANR	4690589	UnaryOperator	*		4690552	0					
ANR	4690590	Identifier	iter		4690552	1					
ANR	4690591	IfStatement	"if ( ! strcmp ( job_name , job -> GetName ( ) ) )"		4690552	1					
ANR	4690592	Condition	"! strcmp ( job_name , job -> GetName ( ) )"	266:7:6268:6304	4690552	0	True				
ANR	4690593	UnaryOperationExpression	"! strcmp ( job_name , job -> GetName ( ) )"		4690552	0					
ANR	4690594	UnaryOperator	!		4690552	0					
ANR	4690595	CallExpression	"strcmp ( job_name , job -> GetName ( ) )"		4690552	1					
ANR	4690596	Callee	strcmp		4690552	0					
ANR	4690597	Identifier	strcmp		4690552	0					
ANR	4690598	ArgumentList	job_name		4690552	1					
ANR	4690599	Argument	job_name		4690552	0					
ANR	4690600	Identifier	job_name		4690552	0					
ANR	4690601	Argument	job -> GetName ( )		4690552	1					
ANR	4690602	CallExpression	job -> GetName ( )		4690552	0					
ANR	4690603	Callee	job -> GetName		4690552	0					
ANR	4690604	PtrMemberAccess	job -> GetName		4690552	0					
ANR	4690605	Identifier	job		4690552	0					
ANR	4690606	Identifier	GetName		4690552	1					
ANR	4690607	ArgumentList			4690552	1					
ANR	4690608	CompoundStatement		6:47:236:236	4690552	1					
ANR	4690609	ExpressionStatement	m_job_list . erase ( iter )	267:3:6313:6337	4690552	0	True				
ANR	4690610	CallExpression	m_job_list . erase ( iter )		4690552	0					
ANR	4690611	Callee	m_job_list . erase		4690552	0					
ANR	4690612	MemberAccess	m_job_list . erase		4690552	0					
ANR	4690613	Identifier	m_job_list		4690552	0					
ANR	4690614	Identifier	erase		4690552	1					
ANR	4690615	ArgumentList	iter		4690552	1					
ANR	4690616	Argument	iter		4690552	0					
ANR	4690617	Identifier	iter		4690552	0					
ANR	4690618	Statement	delete	268:3:6342:6347	4690552	1	True				
ANR	4690619	ExpressionStatement	job	268:10:6349:6352	4690552	2	True				
ANR	4690620	Identifier	job		4690552	0					
ANR	4690621	ReturnStatement	return 0 ;	269:3:6357:6365	4690552	3	True				
ANR	4690622	PrimaryExpression	0		4690552	0					
ANR	4690623	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJobList: Attempt to delete non-existent job '%s'\\n"" , job_name )"	273:1:6376:6471	4690552	2	True				
ANR	4690624	CallExpression	"dprintf ( D_ALWAYS , ""CronJobList: Attempt to delete non-existent job '%s'\\n"" , job_name )"		4690552	0					
ANR	4690625	Callee	dprintf		4690552	0					
ANR	4690626	Identifier	dprintf		4690552	0					
ANR	4690627	ArgumentList	D_ALWAYS		4690552	1					
ANR	4690628	Argument	D_ALWAYS		4690552	0					
ANR	4690629	Identifier	D_ALWAYS		4690552	0					
ANR	4690630	Argument	"""CronJobList: Attempt to delete non-existent job '%s'\\n"""		4690552	1					
ANR	4690631	PrimaryExpression	"""CronJobList: Attempt to delete non-existent job '%s'\\n"""		4690552	0					
ANR	4690632	Argument	job_name		4690552	2					
ANR	4690633	Identifier	job_name		4690552	0					
ANR	4690634	ReturnStatement	return 1 ;	276:1:6474:6482	4690552	3	True				
ANR	4690635	PrimaryExpression	1		4690552	0					
ANR	4690636	ReturnType	int		4690552	1					
ANR	4690637	Identifier	CondorCronJobList :: DeleteJob		4690552	2					
ANR	4690638	ParameterList	const char * job_name		4690552	3					
ANR	4690639	Parameter	const char * job_name	260:30:6048:6067	4690552	0	True				
ANR	4690640	ParameterType	const char *		4690552	0					
ANR	4690641	Identifier	job_name		4690552	1					
ANR	4690642	CFGEntryNode	ENTRY		4690552		True				
ANR	4690643	CFGExitNode	EXIT		4690552		True				
ANR	4690644	Symbol	m_job_list		4690552						
ANR	4690645	Symbol	m_job_list . begin		4690552						
ANR	4690646	Symbol	strcmp		4690552						
ANR	4690647	Symbol	* iter		4690552						
ANR	4690648	Symbol	job_name		4690552						
ANR	4690649	Symbol	* job		4690552						
ANR	4690650	Symbol	D_ALWAYS		4690552						
ANR	4690651	Symbol	iter		4690552						
ANR	4690652	Symbol	m_job_list . end		4690552						
ANR	4690653	Symbol	job		4690552						
ANR	4690654	Symbol	job -> GetName		4690552						
ANR	4690655	Function	CondorCronJobList :: FindJob	280:0:6515:6838							
ANR	4690656	FunctionDef	CondorCronJobList :: FindJob (const char * job_name)		4690655	0					
ANR	4690657	CompoundStatement		282:0:6576:6838	4690655	0					
ANR	4690658	IdentifierDeclStatement	list < CronJob * > :: iterator iter ;	284:1:6605:6635	4690655	0	True				
ANR	4690659	IdentifierDecl	iter		4690655	0					
ANR	4690660	IdentifierDeclType	list < CronJob * > :: iterator		4690655	0					
ANR	4690661	Identifier	iter		4690655	1					
ANR	4690662	ForStatement	for ( iter = m_job_list . begin ( ) ; iter != m_job_list . end ( ) ; iter ++ )		4690655	1					
ANR	4690663	ForInit	iter = m_job_list . begin ( ) ;	285:6:6643:6668	4690655	0	True				
ANR	4690664	AssignmentExpression	iter = m_job_list . begin ( )		4690655	0		=			
ANR	4690665	Identifier	iter		4690655	0					
ANR	4690666	CallExpression	m_job_list . begin ( )		4690655	1					
ANR	4690667	Callee	m_job_list . begin		4690655	0					
ANR	4690668	MemberAccess	m_job_list . begin		4690655	0					
ANR	4690669	Identifier	m_job_list		4690655	0					
ANR	4690670	Identifier	begin		4690655	1					
ANR	4690671	ArgumentList			4690655	1					
ANR	4690672	Condition	iter != m_job_list . end ( )	285:33:6670:6693	4690655	1	True				
ANR	4690673	EqualityExpression	iter != m_job_list . end ( )		4690655	0		!=			
ANR	4690674	Identifier	iter		4690655	0					
ANR	4690675	CallExpression	m_job_list . end ( )		4690655	1					
ANR	4690676	Callee	m_job_list . end		4690655	0					
ANR	4690677	MemberAccess	m_job_list . end		4690655	0					
ANR	4690678	Identifier	m_job_list		4690655	0					
ANR	4690679	Identifier	end		4690655	1					
ANR	4690680	ArgumentList			4690655	1					
ANR	4690681	PostIncDecOperationExpression	iter ++	285:59:6696:6701	4690655	2	True				
ANR	4690682	Identifier	iter		4690655	0					
ANR	4690683	IncDec	++		4690655	1					
ANR	4690684	CompoundStatement		5:2:132:152	4690655	3					
ANR	4690685	IdentifierDeclStatement	CronJob * job = * iter ;	286:2:6709:6729	4690655	0	True				
ANR	4690686	IdentifierDecl	* job = * iter		4690655	0					
ANR	4690687	IdentifierDeclType	CronJob *		4690655	0					
ANR	4690688	Identifier	job		4690655	1					
ANR	4690689	AssignmentExpression	* job = * iter		4690655	2		=			
ANR	4690690	Identifier	job		4690655	0					
ANR	4690691	UnaryOperationExpression	* iter		4690655	1					
ANR	4690692	UnaryOperator	*		4690655	0					
ANR	4690693	Identifier	iter		4690655	1					
ANR	4690694	IfStatement	"if ( ! strcmp ( job_name , job -> GetName ( ) ) )"		4690655	1					
ANR	4690695	Condition	"! strcmp ( job_name , job -> GetName ( ) )"	287:7:6738:6774	4690655	0	True				
ANR	4690696	UnaryOperationExpression	"! strcmp ( job_name , job -> GetName ( ) )"		4690655	0					
ANR	4690697	UnaryOperator	!		4690655	0					
ANR	4690698	CallExpression	"strcmp ( job_name , job -> GetName ( ) )"		4690655	1					
ANR	4690699	Callee	strcmp		4690655	0					
ANR	4690700	Identifier	strcmp		4690655	0					
ANR	4690701	ArgumentList	job_name		4690655	1					
ANR	4690702	Argument	job_name		4690655	0					
ANR	4690703	Identifier	job_name		4690655	0					
ANR	4690704	Argument	job -> GetName ( )		4690655	1					
ANR	4690705	CallExpression	job -> GetName ( )		4690655	0					
ANR	4690706	Callee	job -> GetName		4690655	0					
ANR	4690707	PtrMemberAccess	job -> GetName		4690655	0					
ANR	4690708	Identifier	job		4690655	0					
ANR	4690709	Identifier	GetName		4690655	1					
ANR	4690710	ArgumentList			4690655	1					
ANR	4690711	CompoundStatement		6:47:201:201	4690655	1					
ANR	4690712	ReturnStatement	return job ;	288:3:6783:6793	4690655	0	True				
ANR	4690713	Identifier	job		4690655	0					
ANR	4690714	ReturnStatement	return NULL ;	293:1:6825:6836	4690655	2	True				
ANR	4690715	Identifier	NULL		4690655	0					
ANR	4690716	ReturnType	CronJob *		4690655	1					
ANR	4690717	Identifier	CondorCronJobList :: FindJob		4690655	2					
ANR	4690718	ParameterList	const char * job_name		4690655	3					
ANR	4690719	Parameter	const char * job_name	281:28:6553:6572	4690655	0	True				
ANR	4690720	ParameterType	const char *		4690655	0					
ANR	4690721	Identifier	job_name		4690655	1					
ANR	4690722	CFGEntryNode	ENTRY		4690655		True				
ANR	4690723	CFGExitNode	EXIT		4690655		True				
ANR	4690724	Symbol	m_job_list		4690655						
ANR	4690725	Symbol	m_job_list . begin		4690655						
ANR	4690726	Symbol	strcmp		4690655						
ANR	4690727	Symbol	* iter		4690655						
ANR	4690728	Symbol	NULL		4690655						
ANR	4690729	Symbol	job_name		4690655						
ANR	4690730	Symbol	* job		4690655						
ANR	4690731	Symbol	iter		4690655						
ANR	4690732	Symbol	m_job_list . end		4690655						
ANR	4690733	Symbol	job		4690655						
ANR	4690734	Symbol	job -> GetName		4690655						
