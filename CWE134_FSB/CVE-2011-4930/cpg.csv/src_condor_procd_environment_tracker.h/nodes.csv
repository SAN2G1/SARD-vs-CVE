command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3612219	File	data/converged/CVE-2011-4930_htcondor/src_condor_procd_environment_tracker.h								
ANR	3612220	ClassDef	EnvironmentTracker	30:0:1028:2032							
ANR	3612221	Function	EnvironmentTracker	34:1:1093:1163							
ANR	3612222	FunctionDef	EnvironmentTracker (ProcFamilyMonitor * pfm)		3612221	0					
ANR	3612223	CompoundStatement		34:69:1161:1163	3612221	0					
ANR	3612224	Identifier	EnvironmentTracker		3612221	1					
ANR	3612225	ParameterList	ProcFamilyMonitor * pfm		3612221	2					
ANR	3612226	Parameter	ProcFamilyMonitor * pfm	34:20:1112:1133	3612221	0	True				
ANR	3612227	ParameterType	ProcFamilyMonitor *		3612221	0					
ANR	3612228	Identifier	pfm		3612221	1					
ANR	3612229	CFGEntryNode	ENTRY		3612221		True				
ANR	3612230	CFGExitNode	EXIT		3612221		True				
ANR	3612231	Symbol	pfm		3612221						
ANR	3612232	Function	add_mapping	36:1:1167:1280							
ANR	3612233	FunctionDef	"add_mapping (ProcFamily * family , PidEnvID * penvid)"		3612232	1					
ANR	3612234	CompoundStatement		37:1:1223:1280	3612232	0					
ANR	3612235	ExpressionStatement	"m_list . add_mapping ( EnvironmentTag ( penvid ) , family )"	38:2:1227:1277	3612232	0	True				
ANR	3612236	CallExpression	"m_list . add_mapping ( EnvironmentTag ( penvid ) , family )"		3612232	0					
ANR	3612237	Callee	m_list . add_mapping		3612232	0					
ANR	3612238	MemberAccess	m_list . add_mapping		3612232	0					
ANR	3612239	Identifier	m_list		3612232	0					
ANR	3612240	Identifier	add_mapping		3612232	1					
ANR	3612241	ArgumentList	EnvironmentTag ( penvid )		3612232	1					
ANR	3612242	Argument	EnvironmentTag ( penvid )		3612232	0					
ANR	3612243	CallExpression	EnvironmentTag ( penvid )		3612232	0					
ANR	3612244	Callee	EnvironmentTag		3612232	0					
ANR	3612245	Identifier	EnvironmentTag		3612232	0					
ANR	3612246	ArgumentList	penvid		3612232	1					
ANR	3612247	Argument	penvid		3612232	0					
ANR	3612248	Identifier	penvid		3612232	0					
ANR	3612249	Argument	family		3612232	1					
ANR	3612250	Identifier	family		3612232	0					
ANR	3612251	ReturnType	void		3612232	1					
ANR	3612252	Identifier	add_mapping		3612232	2					
ANR	3612253	ParameterList	"ProcFamily * family , PidEnvID * penvid"		3612232	3					
ANR	3612254	Parameter	ProcFamily * family	36:18:1184:1201	3612232	0	True				
ANR	3612255	ParameterType	ProcFamily *		3612232	0					
ANR	3612256	Identifier	family		3612232	1					
ANR	3612257	Parameter	PidEnvID * penvid	36:38:1204:1219	3612232	1	True				
ANR	3612258	ParameterType	PidEnvID *		3612232	0					
ANR	3612259	Identifier	penvid		3612232	1					
ANR	3612260	CFGEntryNode	ENTRY		3612232		True				
ANR	3612261	CFGExitNode	EXIT		3612232		True				
ANR	3612262	Symbol	penvid		3612232						
ANR	3612263	Symbol	family		3612232						
ANR	3612264	Symbol	EnvironmentTag		3612232						
ANR	3612265	Symbol	m_list		3612232						
ANR	3612266	Function	remove_mapping	41:1:1284:1427							
ANR	3612267	FunctionDef	remove_mapping (ProcFamily * family)		3612266	2					
ANR	3612268	CompoundStatement		42:1:1325:1427	3612266	0					
ANR	3612269	IdentifierDeclStatement	EnvironmentTag tmp ;	43:2:1329:1347	3612266	0	True				
ANR	3612270	IdentifierDecl	tmp		3612266	0					
ANR	3612271	IdentifierDeclType	EnvironmentTag		3612266	0					
ANR	3612272	Identifier	tmp		3612266	1					
ANR	3612273	IfStatement	"if ( m_list . remove_mapping ( family , & tmp ) )"		3612266	1					
ANR	3612274	Condition	"m_list . remove_mapping ( family , & tmp )"	44:6:1355:1389	3612266	0	True				
ANR	3612275	CallExpression	"m_list . remove_mapping ( family , & tmp )"		3612266	0					
ANR	3612276	Callee	m_list . remove_mapping		3612266	0					
ANR	3612277	MemberAccess	m_list . remove_mapping		3612266	0					
ANR	3612278	Identifier	m_list		3612266	0					
ANR	3612279	Identifier	remove_mapping		3612266	1					
ANR	3612280	ArgumentList	family		3612266	1					
ANR	3612281	Argument	family		3612266	0					
ANR	3612282	Identifier	family		3612266	0					
ANR	3612283	Argument	& tmp		3612266	1					
ANR	3612284	UnaryOperationExpression	& tmp		3612266	0					
ANR	3612285	UnaryOperator	&		3612266	0					
ANR	3612286	Identifier	tmp		3612266	1					
ANR	3612287	CompoundStatement		3:43:66:66	3612266	1					
ANR	3612288	Statement	delete	45:3:1397:1402	3612266	0	True				
ANR	3612289	ExpressionStatement	tmp . get_penvid ( )	45:10:1404:1420	3612266	1	True				
ANR	3612290	CallExpression	tmp . get_penvid ( )		3612266	0					
ANR	3612291	Callee	tmp . get_penvid		3612266	0					
ANR	3612292	MemberAccess	tmp . get_penvid		3612266	0					
ANR	3612293	Identifier	tmp		3612266	0					
ANR	3612294	Identifier	get_penvid		3612266	1					
ANR	3612295	ArgumentList			3612266	1					
ANR	3612296	ReturnType	void		3612266	1					
ANR	3612297	Identifier	remove_mapping		3612266	2					
ANR	3612298	ParameterList	ProcFamily * family		3612266	3					
ANR	3612299	Parameter	ProcFamily * family	41:21:1304:1321	3612266	0	True				
ANR	3612300	ParameterType	ProcFamily *		3612266	0					
ANR	3612301	Identifier	family		3612266	1					
ANR	3612302	CFGEntryNode	ENTRY		3612266		True				
ANR	3612303	CFGExitNode	EXIT		3612266		True				
ANR	3612304	Symbol	tmp		3612266						
ANR	3612305	Symbol	m_list . remove_mapping		3612266						
ANR	3612306	Symbol	& tmp		3612266						
ANR	3612307	Symbol	family		3612266						
ANR	3612308	Symbol	m_list		3612266						
ANR	3612309	Function	check_process	49:1:1431:1630							
ANR	3612310	FunctionDef	check_process (procInfo * pi)		3612309	3					
ANR	3612311	CompoundStatement		50:1:1465:1630	3612309	0					
ANR	3612312	IdentifierDeclStatement	ProcFamily * family = m_list . find_family ( pi ) ;	51:2:1469:1512	3612309	0	True				
ANR	3612313	IdentifierDecl	* family = m_list . find_family ( pi )		3612309	0					
ANR	3612314	IdentifierDeclType	ProcFamily *		3612309	0					
ANR	3612315	Identifier	family		3612309	1					
ANR	3612316	AssignmentExpression	* family = m_list . find_family ( pi )		3612309	2		=			
ANR	3612317	Identifier	family		3612309	0					
ANR	3612318	CallExpression	m_list . find_family ( pi )		3612309	1					
ANR	3612319	Callee	m_list . find_family		3612309	0					
ANR	3612320	MemberAccess	m_list . find_family		3612309	0					
ANR	3612321	Identifier	m_list		3612309	0					
ANR	3612322	Identifier	find_family		3612309	1					
ANR	3612323	ArgumentList	pi		3612309	1					
ANR	3612324	Argument	pi		3612309	0					
ANR	3612325	Identifier	pi		3612309	0					
ANR	3612326	IfStatement	if ( family != NULL )		3612309	1					
ANR	3612327	Condition	family != NULL	52:6:1520:1533	3612309	0	True				
ANR	3612328	EqualityExpression	family != NULL		3612309	0		!=			
ANR	3612329	Identifier	family		3612309	0					
ANR	3612330	Identifier	NULL		3612309	1					
ANR	3612331	CompoundStatement		3:22:70:70	3612309	1					
ANR	3612332	ExpressionStatement	"m_monitor -> add_member_to_family ( family , pi , ""ENV"" )"	53:3:1541:1591	3612309	0	True				
ANR	3612333	CallExpression	"m_monitor -> add_member_to_family ( family , pi , ""ENV"" )"		3612309	0					
ANR	3612334	Callee	m_monitor -> add_member_to_family		3612309	0					
ANR	3612335	PtrMemberAccess	m_monitor -> add_member_to_family		3612309	0					
ANR	3612336	Identifier	m_monitor		3612309	0					
ANR	3612337	Identifier	add_member_to_family		3612309	1					
ANR	3612338	ArgumentList	family		3612309	1					
ANR	3612339	Argument	family		3612309	0					
ANR	3612340	Identifier	family		3612309	0					
ANR	3612341	Argument	pi		3612309	1					
ANR	3612342	Identifier	pi		3612309	0					
ANR	3612343	Argument	"""ENV"""		3612309	2					
ANR	3612344	PrimaryExpression	"""ENV"""		3612309	0					
ANR	3612345	ReturnStatement	return true ;	54:3:1596:1607	3612309	1	True				
ANR	3612346	Identifier	true		3612309	0					
ANR	3612347	ReturnStatement	return false ;	56:2:1615:1627	3612309	2	True				
ANR	3612348	Identifier	false		3612309	0					
ANR	3612349	ReturnType	bool		3612309	1					
ANR	3612350	Identifier	check_process		3612309	2					
ANR	3612351	ParameterList	procInfo * pi		3612309	3					
ANR	3612352	Parameter	procInfo * pi	49:20:1450:1461	3612309	0	True				
ANR	3612353	ParameterType	procInfo *		3612309	0					
ANR	3612354	Identifier	pi		3612309	1					
ANR	3612355	CFGEntryNode	ENTRY		3612309		True				
ANR	3612356	CFGExitNode	EXIT		3612309		True				
ANR	3612357	Symbol	m_list . find_family		3612309						
ANR	3612358	Symbol	NULL		3612309						
ANR	3612359	Symbol	true		3612309						
ANR	3612360	Symbol	false		3612309						
ANR	3612361	Symbol	pi		3612309						
ANR	3612362	Symbol	m_monitor		3612309						
ANR	3612363	Symbol	family		3612309						
ANR	3612364	Symbol	m_list		3612309						
ANR	3612365	ClassDef	EnvironmentTag	61:1:1645:1985							
ANR	3612366	Function	EnvironmentTag	64:2:1705:1741							
ANR	3612367	FunctionDef	EnvironmentTag ()		3612366	0					
ANR	3612368	CompoundStatement		64:36:1739:1741	3612366	0					
ANR	3612369	Identifier	EnvironmentTag		3612366	1					
ANR	3612370	ParameterList			3612366	2					
ANR	3612371	CFGEntryNode	ENTRY		3612366		True				
ANR	3612372	CFGExitNode	EXIT		3612366		True				
ANR	3612373	Function	EnvironmentTag	65:2:1745:1799							
ANR	3612374	FunctionDef	EnvironmentTag (PidEnvID * penvid)		3612373	1					
ANR	3612375	CompoundStatement		65:54:1797:1799	3612373	0					
ANR	3612376	Identifier	EnvironmentTag		3612373	1					
ANR	3612377	ParameterList	PidEnvID * penvid		3612373	2					
ANR	3612378	Parameter	PidEnvID * penvid	65:17:1760:1775	3612373	0	True				
ANR	3612379	ParameterType	PidEnvID *		3612373	0					
ANR	3612380	Identifier	penvid		3612373	1					
ANR	3612381	CFGEntryNode	ENTRY		3612373		True				
ANR	3612382	CFGExitNode	EXIT		3612373		True				
ANR	3612383	Symbol	penvid		3612373						
ANR	3612384	Function	get_penvid	66:2:1803:1845							
ANR	3612385	FunctionDef	get_penvid ()		3612384	2					
ANR	3612386	CompoundStatement		66:25:1826:1845	3612384	0					
ANR	3612387	ReturnStatement	return m_penvid ;	66:1:1828:1843	3612384	0	True				
ANR	3612388	Identifier	m_penvid		3612384	0					
ANR	3612389	ReturnType	PidEnvID *		3612384	1					
ANR	3612390	Identifier	get_penvid		3612384	2					
ANR	3612391	ParameterList			3612384	3					
ANR	3612392	CFGEntryNode	ENTRY		3612384		True				
ANR	3612393	CFGExitNode	EXIT		3612384		True				
ANR	3612394	Symbol	m_penvid		3612384						
ANR	3612395	Function	test	68:2:1850:1949							
ANR	3612396	FunctionDef	test (procInfo * pi)		3612395	3					
ANR	3612397	CompoundStatement		69:2:1876:1949	3612395	0					
ANR	3612398	ReturnStatement	"return ( pidenvid_match ( m_penvid , & pi -> penvid ) == PIDENVID_MATCH ) ;"	70:3:1881:1945	3612395	0	True				
ANR	3612399	EqualityExpression	"pidenvid_match ( m_penvid , & pi -> penvid ) == PIDENVID_MATCH"		3612395	0		==			
ANR	3612400	CallExpression	"pidenvid_match ( m_penvid , & pi -> penvid )"		3612395	0					
ANR	3612401	Callee	pidenvid_match		3612395	0					
ANR	3612402	Identifier	pidenvid_match		3612395	0					
ANR	3612403	ArgumentList	m_penvid		3612395	1					
ANR	3612404	Argument	m_penvid		3612395	0					
ANR	3612405	Identifier	m_penvid		3612395	0					
ANR	3612406	Argument	& pi -> penvid		3612395	1					
ANR	3612407	UnaryOperationExpression	& pi -> penvid		3612395	0					
ANR	3612408	UnaryOperator	&		3612395	0					
ANR	3612409	PtrMemberAccess	pi -> penvid		3612395	1					
ANR	3612410	Identifier	pi		3612395	0					
ANR	3612411	Identifier	penvid		3612395	1					
ANR	3612412	Identifier	PIDENVID_MATCH		3612395	1					
ANR	3612413	ReturnType	bool		3612395	1					
ANR	3612414	Identifier	test		3612395	2					
ANR	3612415	ParameterList	procInfo * pi		3612395	3					
ANR	3612416	Parameter	procInfo * pi	68:12:1860:1871	3612395	0	True				
ANR	3612417	ParameterType	procInfo *		3612395	0					
ANR	3612418	Identifier	pi		3612395	1					
ANR	3612419	CFGEntryNode	ENTRY		3612395		True				
ANR	3612420	CFGExitNode	EXIT		3612395		True				
ANR	3612421	Symbol	pidenvid_match		3612395						
ANR	3612422	Symbol	PIDENVID_MATCH		3612395						
ANR	3612423	Symbol	& pi -> penvid		3612395						
ANR	3612424	Symbol	pi		3612395						
ANR	3612425	Symbol	m_penvid		3612395						
ANR	3612426	DeclStmt									
ANR	3612427	Decl							PidEnvID	PidEnvID *	m_penvid
ANR	3612428	DeclStmt									
ANR	3612429	Decl							TrackerHelperList < EnvironmentTag >	TrackerHelperList < EnvironmentTag >	m_list
