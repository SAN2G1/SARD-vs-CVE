command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	163054	File	data/converged/CVE-2011-4930_htcondor/CondorError.cpp								
ANR	163055	Function	CondorError :: CondorError	25:0:892:930							
ANR	163056	FunctionDef	CondorError :: CondorError ()		163055	0					
ANR	163057	CompoundStatement		25:27:919:930	163055	0					
ANR	163058	ExpressionStatement	init ( )	26:1:922:928	163055	0	True				
ANR	163059	CallExpression	init ( )		163055	0					
ANR	163060	Callee	init		163055	0					
ANR	163061	Identifier	init		163055	0					
ANR	163062	ArgumentList			163055	1					
ANR	163063	Identifier	CondorError :: CondorError		163055	1					
ANR	163064	ParameterList			163055	2					
ANR	163065	CFGEntryNode	ENTRY		163055		True				
ANR	163066	CFGExitNode	EXIT		163055		True				
ANR	163067	Function	CondorError :: ~CondorError	29:0:935:975							
ANR	163068	FunctionDef	CondorError :: ~CondorError ()		163067	0					
ANR	163069	CompoundStatement		29:28:963:975	163067	0					
ANR	163070	ExpressionStatement	clear ( )	30:1:966:973	163067	0	True				
ANR	163071	CallExpression	clear ( )		163067	0					
ANR	163072	Callee	clear		163067	0					
ANR	163073	Identifier	clear		163067	0					
ANR	163074	ArgumentList			163067	1					
ANR	163075	Identifier	CondorError :: ~CondorError		163067	1					
ANR	163076	ParameterList			163067	2					
ANR	163077	CFGEntryNode	ENTRY		163067		True				
ANR	163078	CFGExitNode	EXIT		163067		True				
ANR	163079	Function	CondorError :: CondorError	33:0:978:1051							
ANR	163080	FunctionDef	CondorError :: CondorError (CondorError & copy)		163079	0					
ANR	163081	CompoundStatement		33:44:1022:1051	163079	0					
ANR	163082	ExpressionStatement	init ( )	34:1:1025:1031	163079	0	True				
ANR	163083	CallExpression	init ( )		163079	0					
ANR	163084	Callee	init		163079	0					
ANR	163085	Identifier	init		163079	0					
ANR	163086	ArgumentList			163079	1					
ANR	163087	ExpressionStatement	deep_copy ( copy )	35:1:1034:1049	163079	1	True				
ANR	163088	CallExpression	deep_copy ( copy )		163079	0					
ANR	163089	Callee	deep_copy		163079	0					
ANR	163090	Identifier	deep_copy		163079	0					
ANR	163091	ArgumentList	copy		163079	1					
ANR	163092	Argument	copy		163079	0					
ANR	163093	Identifier	copy		163079	0					
ANR	163094	Identifier	CondorError :: CondorError		163079	1					
ANR	163095	ParameterList	CondorError & copy		163079	2					
ANR	163096	Parameter	CondorError & copy	33:25:1003:1019	163079	0	True				
ANR	163097	ParameterType	CondorError &		163079	0					
ANR	163098	Identifier	copy		163079	1					
ANR	163099	CFGEntryNode	ENTRY		163079		True				
ANR	163100	CFGExitNode	EXIT		163079		True				
ANR	163101	Symbol	copy		163079						
ANR	163102	Function	operator =	38:26:1080:1181							
ANR	163103	FunctionDef	operator = (CondorError & copy)		163102	0					
ANR	163104	CompoundStatement		38:55:1109:1181	163102	0					
ANR	163105	IfStatement	if ( & copy != this )		163102	0					
ANR	163106	Condition	& copy != this	39:5:1116:1128	163102	0	True				
ANR	163107	EqualityExpression	& copy != this		163102	0		!=			
ANR	163108	UnaryOperationExpression	& copy		163102	0					
ANR	163109	UnaryOperator	&		163102	0					
ANR	163110	Identifier	copy		163102	1					
ANR	163111	Identifier	this		163102	1					
ANR	163112	CompoundStatement		2:20:21:21	163102	1					
ANR	163113	ExpressionStatement	clear ( )	40:2:1135:1142	163102	0	True				
ANR	163114	CallExpression	clear ( )		163102	0					
ANR	163115	Callee	clear		163102	0					
ANR	163116	Identifier	clear		163102	0					
ANR	163117	ArgumentList			163102	1					
ANR	163118	ExpressionStatement	deep_copy ( copy )	41:2:1146:1161	163102	1	True				
ANR	163119	CallExpression	deep_copy ( copy )		163102	0					
ANR	163120	Callee	deep_copy		163102	0					
ANR	163121	Identifier	deep_copy		163102	0					
ANR	163122	ArgumentList	copy		163102	1					
ANR	163123	Argument	copy		163102	0					
ANR	163124	Identifier	copy		163102	0					
ANR	163125	ReturnStatement	return * this ;	43:1:1167:1179	163102	1	True				
ANR	163126	UnaryOperationExpression	* this		163102	0					
ANR	163127	UnaryOperator	*		163102	0					
ANR	163128	Identifier	this		163102	1					
ANR	163129	Identifier	operator =		163102	1					
ANR	163130	ParameterList	CondorError & copy		163102	2					
ANR	163131	Parameter	CondorError & copy	38:36:1090:1106	163102	0	True				
ANR	163132	ParameterType	CondorError &		163102	0					
ANR	163133	Identifier	copy		163102	1					
ANR	163134	CFGEntryNode	ENTRY		163102		True				
ANR	163135	CFGExitNode	EXIT		163102		True				
ANR	163136	Symbol	* this		163102						
ANR	163137	Symbol	& copy		163102						
ANR	163138	Symbol	this		163102						
ANR	163139	Symbol	copy		163102						
ANR	163140	Function	CondorError :: init	46:0:1184:1264							
ANR	163141	FunctionDef	CondorError :: init ()		163140	0					
ANR	163142	CompoundStatement		46:25:1209:1264	163140	0					
ANR	163143	ExpressionStatement	_subsys = 0	47:1:1212:1223	163140	0	True				
ANR	163144	AssignmentExpression	_subsys = 0		163140	0		=			
ANR	163145	Identifier	_subsys		163140	0					
ANR	163146	PrimaryExpression	0		163140	1					
ANR	163147	ExpressionStatement	_code = 0	48:1:1226:1235	163140	1	True				
ANR	163148	AssignmentExpression	_code = 0		163140	0		=			
ANR	163149	Identifier	_code		163140	0					
ANR	163150	PrimaryExpression	0		163140	1					
ANR	163151	ExpressionStatement	_message = 0	49:1:1238:1250	163140	2	True				
ANR	163152	AssignmentExpression	_message = 0		163140	0		=			
ANR	163153	Identifier	_message		163140	0					
ANR	163154	PrimaryExpression	0		163140	1					
ANR	163155	ExpressionStatement	_next = 0	50:1:1253:1262	163140	3	True				
ANR	163156	AssignmentExpression	_next = 0		163140	0		=			
ANR	163157	Identifier	_next		163140	0					
ANR	163158	PrimaryExpression	0		163140	1					
ANR	163159	ReturnType	void		163140	1					
ANR	163160	Identifier	CondorError :: init		163140	2					
ANR	163161	ParameterList			163140	3					
ANR	163162	CFGEntryNode	ENTRY		163140		True				
ANR	163163	CFGExitNode	EXIT		163140		True				
ANR	163164	Symbol	_subsys		163140						
ANR	163165	Symbol	_message		163140						
ANR	163166	Symbol	_code		163140						
ANR	163167	Symbol	_next		163140						
ANR	163168	Function	CondorError :: clear	53:0:1267:1450							
ANR	163169	FunctionDef	CondorError :: clear ()		163168	0					
ANR	163170	CompoundStatement		53:26:1293:1450	163168	0					
ANR	163171	IfStatement	if ( _subsys )		163168	0					
ANR	163172	Condition	_subsys	54:5:1300:1306	163168	0	True				
ANR	163173	Identifier	_subsys		163168	0					
ANR	163174	CompoundStatement		2:14:15:15	163168	1					
ANR	163175	ExpressionStatement	free ( _subsys )	55:2:1313:1328	163168	0	True				
ANR	163176	CallExpression	free ( _subsys )		163168	0					
ANR	163177	Callee	free		163168	0					
ANR	163178	Identifier	free		163168	0					
ANR	163179	ArgumentList	_subsys		163168	1					
ANR	163180	Argument	_subsys		163168	0					
ANR	163181	Identifier	_subsys		163168	0					
ANR	163182	ExpressionStatement	_subsys = 0	56:2:1332:1343	163168	1	True				
ANR	163183	AssignmentExpression	_subsys = 0		163168	0		=			
ANR	163184	Identifier	_subsys		163168	0					
ANR	163185	PrimaryExpression	0		163168	1					
ANR	163186	IfStatement	if ( _message )		163168	1					
ANR	163187	Condition	_message	58:5:1353:1360	163168	0	True				
ANR	163188	Identifier	_message		163168	0					
ANR	163189	CompoundStatement		6:15:69:69	163168	1					
ANR	163190	ExpressionStatement	free ( _message )	59:2:1367:1383	163168	0	True				
ANR	163191	CallExpression	free ( _message )		163168	0					
ANR	163192	Callee	free		163168	0					
ANR	163193	Identifier	free		163168	0					
ANR	163194	ArgumentList	_message		163168	1					
ANR	163195	Argument	_message		163168	0					
ANR	163196	Identifier	_message		163168	0					
ANR	163197	ExpressionStatement	_message = 0	60:2:1387:1399	163168	1	True				
ANR	163198	AssignmentExpression	_message = 0		163168	0		=			
ANR	163199	Identifier	_message		163168	0					
ANR	163200	PrimaryExpression	0		163168	1					
ANR	163201	IfStatement	if ( _next )		163168	2					
ANR	163202	Condition	_next	62:5:1409:1413	163168	0	True				
ANR	163203	Identifier	_next		163168	0					
ANR	163204	CompoundStatement		10:12:122:122	163168	1					
ANR	163205	Statement	delete	63:2:1420:1425	163168	0	True				
ANR	163206	ExpressionStatement	_next	63:9:1427:1432	163168	1	True				
ANR	163207	Identifier	_next		163168	0					
ANR	163208	ExpressionStatement	_next = 0	64:2:1436:1445	163168	2	True				
ANR	163209	AssignmentExpression	_next = 0		163168	0		=			
ANR	163210	Identifier	_next		163168	0					
ANR	163211	PrimaryExpression	0		163168	1					
ANR	163212	ReturnType	void		163168	1					
ANR	163213	Identifier	CondorError :: clear		163168	2					
ANR	163214	ParameterList			163168	3					
ANR	163215	CFGEntryNode	ENTRY		163168		True				
ANR	163216	CFGExitNode	EXIT		163168		True				
ANR	163217	Symbol	_subsys		163168						
ANR	163218	Symbol	_message		163168						
ANR	163219	Symbol	_next		163168						
ANR	163220	Function	CondorError :: pop	68:0:1453:1624							
ANR	163221	FunctionDef	CondorError :: pop ()		163220	0					
ANR	163222	CompoundStatement		68:24:1477:1624	163220	0					
ANR	163223	IfStatement	if ( _next )		163220	0					
ANR	163224	Condition	_next	69:5:1484:1488	163220	0	True				
ANR	163225	Identifier	_next		163220	0					
ANR	163226	CompoundStatement		3:2:17:48	163220	1					
ANR	163227	IdentifierDeclStatement	CondorError * tmp = _next -> _next ;	70:2:1495:1526	163220	0	True				
ANR	163228	IdentifierDecl	* tmp = _next -> _next		163220	0					
ANR	163229	IdentifierDeclType	CondorError *		163220	0					
ANR	163230	Identifier	tmp		163220	1					
ANR	163231	AssignmentExpression	* tmp = _next -> _next		163220	2		=			
ANR	163232	Identifier	tmp		163220	0					
ANR	163233	PtrMemberAccess	_next -> _next		163220	1					
ANR	163234	Identifier	_next		163220	0					
ANR	163235	Identifier	_next		163220	1					
ANR	163236	ExpressionStatement	_next -> _next = 0	71:2:1530:1546	163220	1	True				
ANR	163237	AssignmentExpression	_next -> _next = 0		163220	0		=			
ANR	163238	PtrMemberAccess	_next -> _next		163220	0					
ANR	163239	Identifier	_next		163220	0					
ANR	163240	Identifier	_next		163220	1					
ANR	163241	PrimaryExpression	0		163220	1					
ANR	163242	Statement	delete	72:2:1550:1555	163220	2	True				
ANR	163243	ExpressionStatement	_next	72:9:1557:1562	163220	3	True				
ANR	163244	Identifier	_next		163220	0					
ANR	163245	ExpressionStatement	_next = tmp	73:2:1566:1577	163220	4	True				
ANR	163246	AssignmentExpression	_next = tmp		163220	0		=			
ANR	163247	Identifier	_next		163220	0					
ANR	163248	Identifier	tmp		163220	1					
ANR	163249	ReturnStatement	return true ;	74:2:1581:1592	163220	5	True				
ANR	163250	Identifier	true		163220	0					
ANR	163251	ElseStatement	else		163220	0					
ANR	163252	CompoundStatement		8:8:124:124	163220	0					
ANR	163253	ReturnStatement	return false ;	76:2:1606:1618	163220	0	True				
ANR	163254	Identifier	false		163220	0					
ANR	163255	ReturnType	bool		163220	1					
ANR	163256	Identifier	CondorError :: pop		163220	2					
ANR	163257	ParameterList			163220	3					
ANR	163258	CFGEntryNode	ENTRY		163220		True				
ANR	163259	CFGExitNode	EXIT		163220		True				
ANR	163260	Symbol	* _next		163220						
ANR	163261	Symbol	tmp		163220						
ANR	163262	Symbol	true		163220						
ANR	163263	Symbol	false		163220						
ANR	163264	Symbol	_next -> _next		163220						
ANR	163265	Symbol	_next		163220						
ANR	163266	Function	CondorError :: deep_copy	81:0:1627:1873							
ANR	163267	FunctionDef	CondorError :: deep_copy (CondorError & copy)		163266	0					
ANR	163268	CompoundStatement		81:47:1674:1873	163266	0					
ANR	163269	ExpressionStatement	_subsys = strdup ( copy . _subsys )	82:1:1677:1707	163266	0	True				
ANR	163270	AssignmentExpression	_subsys = strdup ( copy . _subsys )		163266	0		=			
ANR	163271	Identifier	_subsys		163266	0					
ANR	163272	CallExpression	strdup ( copy . _subsys )		163266	1					
ANR	163273	Callee	strdup		163266	0					
ANR	163274	Identifier	strdup		163266	0					
ANR	163275	ArgumentList	copy . _subsys		163266	1					
ANR	163276	Argument	copy . _subsys		163266	0					
ANR	163277	MemberAccess	copy . _subsys		163266	0					
ANR	163278	Identifier	copy		163266	0					
ANR	163279	Identifier	_subsys		163266	1					
ANR	163280	ExpressionStatement	_code = copy . _code	83:1:1710:1728	163266	1	True				
ANR	163281	AssignmentExpression	_code = copy . _code		163266	0		=			
ANR	163282	Identifier	_code		163266	0					
ANR	163283	MemberAccess	copy . _code		163266	1					
ANR	163284	Identifier	copy		163266	0					
ANR	163285	Identifier	_code		163266	1					
ANR	163286	ExpressionStatement	_message = strdup ( copy . _message )	84:1:1731:1763	163266	2	True				
ANR	163287	AssignmentExpression	_message = strdup ( copy . _message )		163266	0		=			
ANR	163288	Identifier	_message		163266	0					
ANR	163289	CallExpression	strdup ( copy . _message )		163266	1					
ANR	163290	Callee	strdup		163266	0					
ANR	163291	Identifier	strdup		163266	0					
ANR	163292	ArgumentList	copy . _message		163266	1					
ANR	163293	Argument	copy . _message		163266	0					
ANR	163294	MemberAccess	copy . _message		163266	0					
ANR	163295	Identifier	copy		163266	0					
ANR	163296	Identifier	_message		163266	1					
ANR	163297	IfStatement	if ( copy . _next )		163266	3					
ANR	163298	Condition	copy . _next	85:4:1769:1778	163266	0	True				
ANR	163299	MemberAccess	copy . _next		163266	0					
ANR	163300	Identifier	copy		163266	0					
ANR	163301	Identifier	_next		163266	1					
ANR	163302	CompoundStatement		5:16:106:106	163266	1					
ANR	163303	ExpressionStatement	_next = new CondorError ( )	86:2:1785:1810	163266	0	True				
ANR	163304	AssignmentExpression	_next = new CondorError ( )		163266	0		=			
ANR	163305	Identifier	_next		163266	0					
ANR	163306	UnaryExpression	new CondorError ( )		163266	1					
ANR	163307	ExpressionStatement	_next -> deep_copy ( * ( copy . _next ) )	87:2:1814:1845	163266	1	True				
ANR	163308	CallExpression	_next -> deep_copy ( * ( copy . _next ) )		163266	0					
ANR	163309	Callee	_next -> deep_copy		163266	0					
ANR	163310	PtrMemberAccess	_next -> deep_copy		163266	0					
ANR	163311	Identifier	_next		163266	0					
ANR	163312	Identifier	deep_copy		163266	1					
ANR	163313	ArgumentList	* ( copy . _next )		163266	1					
ANR	163314	Argument	* ( copy . _next )		163266	0					
ANR	163315	UnaryOperationExpression	* ( copy . _next )		163266	0					
ANR	163316	UnaryOperator	*		163266	0					
ANR	163317	MemberAccess	copy . _next		163266	1					
ANR	163318	Identifier	copy		163266	0					
ANR	163319	Identifier	_next		163266	1					
ANR	163320	ElseStatement	else		163266	0					
ANR	163321	CompoundStatement		8:8:180:180	163266	0					
ANR	163322	ExpressionStatement	_next = 0	89:2:1859:1868	163266	0	True				
ANR	163323	AssignmentExpression	_next = 0		163266	0		=			
ANR	163324	Identifier	_next		163266	0					
ANR	163325	PrimaryExpression	0		163266	1					
ANR	163326	ReturnType	void		163266	1					
ANR	163327	Identifier	CondorError :: deep_copy		163266	2					
ANR	163328	ParameterList	CondorError & copy		163266	3					
ANR	163329	Parameter	CondorError & copy	81:28:1655:1671	163266	0	True				
ANR	163330	ParameterType	CondorError &		163266	0					
ANR	163331	Identifier	copy		163266	1					
ANR	163332	CFGEntryNode	ENTRY		163266		True				
ANR	163333	CFGExitNode	EXIT		163266		True				
ANR	163334	Symbol	_subsys		163266						
ANR	163335	Symbol	_code		163266						
ANR	163336	Symbol	* copy . _next		163266						
ANR	163337	Symbol	copy . _code		163266						
ANR	163338	Symbol	copy . _next		163266						
ANR	163339	Symbol	_message		163266						
ANR	163340	Symbol	* copy		163266						
ANR	163341	Symbol	* ( copy . _next )		163266						
ANR	163342	Symbol	copy . _message		163266						
ANR	163343	Symbol	copy		163266						
ANR	163344	Symbol	strdup		163266						
ANR	163345	Symbol	_next		163266						
ANR	163346	Symbol	copy . _subsys		163266						
ANR	163347	Function	CondorError :: push	93:0:1876:2138							
ANR	163348	FunctionDef	"CondorError :: push (const char * the_subsys , int the_code , const char * the_message)"		163347	0					
ANR	163349	CompoundStatement		93:88:1964:2138	163347	0					
ANR	163350	IdentifierDeclStatement	CondorError * tmp = new CondorError ( ) ;	94:1:1967:2003	163347	0	True				
ANR	163351	IdentifierDecl	* tmp = new CondorError ( )		163347	0					
ANR	163352	IdentifierDeclType	CondorError *		163347	0					
ANR	163353	Identifier	tmp		163347	1					
ANR	163354	AssignmentExpression	* tmp = new CondorError ( )		163347	2		=			
ANR	163355	Identifier	tmp		163347	0					
ANR	163356	UnaryExpression	new CondorError ( )		163347	1					
ANR	163357	ExpressionStatement	tmp -> _subsys = strdup ( the_subsys )	95:1:2006:2039	163347	1	True				
ANR	163358	AssignmentExpression	tmp -> _subsys = strdup ( the_subsys )		163347	0		=			
ANR	163359	PtrMemberAccess	tmp -> _subsys		163347	0					
ANR	163360	Identifier	tmp		163347	0					
ANR	163361	Identifier	_subsys		163347	1					
ANR	163362	CallExpression	strdup ( the_subsys )		163347	1					
ANR	163363	Callee	strdup		163347	0					
ANR	163364	Identifier	strdup		163347	0					
ANR	163365	ArgumentList	the_subsys		163347	1					
ANR	163366	Argument	the_subsys		163347	0					
ANR	163367	Identifier	the_subsys		163347	0					
ANR	163368	ExpressionStatement	tmp -> _code = the_code	96:1:2042:2063	163347	2	True				
ANR	163369	AssignmentExpression	tmp -> _code = the_code		163347	0		=			
ANR	163370	PtrMemberAccess	tmp -> _code		163347	0					
ANR	163371	Identifier	tmp		163347	0					
ANR	163372	Identifier	_code		163347	1					
ANR	163373	Identifier	the_code		163347	1					
ANR	163374	ExpressionStatement	tmp -> _message = strdup ( the_message )	97:1:2066:2101	163347	3	True				
ANR	163375	AssignmentExpression	tmp -> _message = strdup ( the_message )		163347	0		=			
ANR	163376	PtrMemberAccess	tmp -> _message		163347	0					
ANR	163377	Identifier	tmp		163347	0					
ANR	163378	Identifier	_message		163347	1					
ANR	163379	CallExpression	strdup ( the_message )		163347	1					
ANR	163380	Callee	strdup		163347	0					
ANR	163381	Identifier	strdup		163347	0					
ANR	163382	ArgumentList	the_message		163347	1					
ANR	163383	Argument	the_message		163347	0					
ANR	163384	Identifier	the_message		163347	0					
ANR	163385	ExpressionStatement	tmp -> _next = _next	98:1:2104:2122	163347	4	True				
ANR	163386	AssignmentExpression	tmp -> _next = _next		163347	0		=			
ANR	163387	PtrMemberAccess	tmp -> _next		163347	0					
ANR	163388	Identifier	tmp		163347	0					
ANR	163389	Identifier	_next		163347	1					
ANR	163390	Identifier	_next		163347	1					
ANR	163391	ExpressionStatement	_next = tmp	99:1:2125:2136	163347	5	True				
ANR	163392	AssignmentExpression	_next = tmp		163347	0		=			
ANR	163393	Identifier	_next		163347	0					
ANR	163394	Identifier	tmp		163347	1					
ANR	163395	ReturnType	void		163347	1					
ANR	163396	Identifier	CondorError :: push		163347	2					
ANR	163397	ParameterList	"const char * the_subsys , int the_code , const char * the_message"		163347	3					
ANR	163398	Parameter	const char * the_subsys	93:24:1900:1921	163347	0	True				
ANR	163399	ParameterType	const char *		163347	0					
ANR	163400	Identifier	the_subsys		163347	1					
ANR	163401	Parameter	int the_code	93:48:1924:1935	163347	1	True				
ANR	163402	ParameterType	int		163347	0					
ANR	163403	Identifier	the_code		163347	1					
ANR	163404	Parameter	const char * the_message	93:62:1938:1960	163347	2	True				
ANR	163405	ParameterType	const char *		163347	0					
ANR	163406	Identifier	the_message		163347	1					
ANR	163407	CFGEntryNode	ENTRY		163347		True				
ANR	163408	CFGExitNode	EXIT		163347		True				
ANR	163409	Symbol	* tmp		163347						
ANR	163410	Symbol	tmp -> _next		163347						
ANR	163411	Symbol	tmp -> _subsys		163347						
ANR	163412	Symbol	tmp		163347						
ANR	163413	Symbol	the_code		163347						
ANR	163414	Symbol	the_message		163347						
ANR	163415	Symbol	tmp -> _message		163347						
ANR	163416	Symbol	strdup		163347						
ANR	163417	Symbol	the_subsys		163347						
ANR	163418	Symbol	tmp -> _code		163347						
ANR	163419	Symbol	_next		163347						
ANR	163420	Function	CondorError :: pushf	102:0:2141:2550							
ANR	163421	FunctionDef	"CondorError :: pushf (const char * the_subsys , int the_code , const char * the_format)"		163420	0					
ANR	163422	CompoundStatement		102:93:2234:2550	163420	0					
ANR	163423	IdentifierDeclStatement	CondorError * tmp = new CondorError ( ) ;	103:1:2237:2273	163420	0	True				
ANR	163424	IdentifierDecl	* tmp = new CondorError ( )		163420	0					
ANR	163425	IdentifierDeclType	CondorError *		163420	0					
ANR	163426	Identifier	tmp		163420	1					
ANR	163427	AssignmentExpression	* tmp = new CondorError ( )		163420	2		=			
ANR	163428	Identifier	tmp		163420	0					
ANR	163429	UnaryExpression	new CondorError ( )		163420	1					
ANR	163430	ExpressionStatement	tmp -> _subsys = strdup ( the_subsys )	104:1:2276:2309	163420	1	True				
ANR	163431	AssignmentExpression	tmp -> _subsys = strdup ( the_subsys )		163420	0		=			
ANR	163432	PtrMemberAccess	tmp -> _subsys		163420	0					
ANR	163433	Identifier	tmp		163420	0					
ANR	163434	Identifier	_subsys		163420	1					
ANR	163435	CallExpression	strdup ( the_subsys )		163420	1					
ANR	163436	Callee	strdup		163420	0					
ANR	163437	Identifier	strdup		163420	0					
ANR	163438	ArgumentList	the_subsys		163420	1					
ANR	163439	Argument	the_subsys		163420	0					
ANR	163440	Identifier	the_subsys		163420	0					
ANR	163441	ExpressionStatement	tmp -> _code = the_code	105:1:2312:2333	163420	2	True				
ANR	163442	AssignmentExpression	tmp -> _code = the_code		163420	0		=			
ANR	163443	PtrMemberAccess	tmp -> _code		163420	0					
ANR	163444	Identifier	tmp		163420	0					
ANR	163445	Identifier	_code		163420	1					
ANR	163446	Identifier	the_code		163420	1					
ANR	163447	IdentifierDeclStatement	va_list ap ;	106:1:2336:2346	163420	3	True				
ANR	163448	IdentifierDecl	ap		163420	0					
ANR	163449	IdentifierDeclType	va_list		163420	0					
ANR	163450	Identifier	ap		163420	1					
ANR	163451	ExpressionStatement	"va_start ( ap , the_format )"	107:1:2349:2373	163420	4	True				
ANR	163452	CallExpression	"va_start ( ap , the_format )"		163420	0					
ANR	163453	Callee	va_start		163420	0					
ANR	163454	Identifier	va_start		163420	0					
ANR	163455	ArgumentList	ap		163420	1					
ANR	163456	Argument	ap		163420	0					
ANR	163457	Identifier	ap		163420	0					
ANR	163458	Argument	the_format		163420	1					
ANR	163459	Identifier	the_format		163420	0					
ANR	163460	IdentifierDeclStatement	"int l = vprintf_length ( the_format , ap ) ;"	108:1:2376:2416	163420	5	True				
ANR	163461	IdentifierDecl	"l = vprintf_length ( the_format , ap )"		163420	0					
ANR	163462	IdentifierDeclType	int		163420	0					
ANR	163463	Identifier	l		163420	1					
ANR	163464	AssignmentExpression	"l = vprintf_length ( the_format , ap )"		163420	2		=			
ANR	163465	Identifier	l		163420	0					
ANR	163466	CallExpression	"vprintf_length ( the_format , ap )"		163420	1					
ANR	163467	Callee	vprintf_length		163420	0					
ANR	163468	Identifier	vprintf_length		163420	0					
ANR	163469	ArgumentList	the_format		163420	1					
ANR	163470	Argument	the_format		163420	0					
ANR	163471	Identifier	the_format		163420	0					
ANR	163472	Argument	ap		163420	1					
ANR	163473	Identifier	ap		163420	0					
ANR	163474	ExpressionStatement	tmp -> _message = ( char * ) malloc ( l + 1 )	109:1:2419:2455	163420	6	True				
ANR	163475	AssignmentExpression	tmp -> _message = ( char * ) malloc ( l + 1 )		163420	0		=			
ANR	163476	PtrMemberAccess	tmp -> _message		163420	0					
ANR	163477	Identifier	tmp		163420	0					
ANR	163478	Identifier	_message		163420	1					
ANR	163479	CastExpression	( char * ) malloc ( l + 1 )		163420	1					
ANR	163480	CastTarget	char *		163420	0					
ANR	163481	CallExpression	malloc ( l + 1 )		163420	1					
ANR	163482	Callee	malloc		163420	0					
ANR	163483	Identifier	malloc		163420	0					
ANR	163484	ArgumentList	l + 1		163420	1					
ANR	163485	Argument	l + 1		163420	0					
ANR	163486	AdditiveExpression	l + 1		163420	0		+			
ANR	163487	Identifier	l		163420	0					
ANR	163488	PrimaryExpression	1		163420	1					
ANR	163489	ExpressionStatement	"vsprintf ( tmp -> _message , the_format , ap )"	110:1:2458:2500	163420	7	True				
ANR	163490	CallExpression	"vsprintf ( tmp -> _message , the_format , ap )"		163420	0					
ANR	163491	Callee	vsprintf		163420	0					
ANR	163492	Identifier	vsprintf		163420	0					
ANR	163493	ArgumentList	tmp -> _message		163420	1					
ANR	163494	Argument	tmp -> _message		163420	0					
ANR	163495	PtrMemberAccess	tmp -> _message		163420	0					
ANR	163496	Identifier	tmp		163420	0					
ANR	163497	Identifier	_message		163420	1					
ANR	163498	Argument	the_format		163420	1					
ANR	163499	Identifier	the_format		163420	0					
ANR	163500	Argument	ap		163420	2					
ANR	163501	Identifier	ap		163420	0					
ANR	163502	ExpressionStatement	tmp -> _next = _next	111:1:2503:2521	163420	8	True				
ANR	163503	AssignmentExpression	tmp -> _next = _next		163420	0		=			
ANR	163504	PtrMemberAccess	tmp -> _next		163420	0					
ANR	163505	Identifier	tmp		163420	0					
ANR	163506	Identifier	_next		163420	1					
ANR	163507	Identifier	_next		163420	1					
ANR	163508	ExpressionStatement	_next = tmp	112:1:2524:2535	163420	9	True				
ANR	163509	AssignmentExpression	_next = tmp		163420	0		=			
ANR	163510	Identifier	_next		163420	0					
ANR	163511	Identifier	tmp		163420	1					
ANR	163512	ExpressionStatement	va_end ( ap )	113:1:2538:2548	163420	10	True				
ANR	163513	CallExpression	va_end ( ap )		163420	0					
ANR	163514	Callee	va_end		163420	0					
ANR	163515	Identifier	va_end		163420	0					
ANR	163516	ArgumentList	ap		163420	1					
ANR	163517	Argument	ap		163420	0					
ANR	163518	Identifier	ap		163420	0					
ANR	163519	ReturnType	void		163420	1					
ANR	163520	Identifier	CondorError :: pushf		163420	2					
ANR	163521	ParameterList	"const char * the_subsys , int the_code , const char * the_format"		163420	3					
ANR	163522	Parameter	const char * the_subsys	102:25:2166:2187	163420	0	True				
ANR	163523	ParameterType	const char *		163420	0					
ANR	163524	Identifier	the_subsys		163420	1					
ANR	163525	Parameter	int the_code	102:49:2190:2201	163420	1	True				
ANR	163526	ParameterType	int		163420	0					
ANR	163527	Identifier	the_code		163420	1					
ANR	163528	Parameter	const char * the_format	102:63:2204:2225	163420	2	True				
ANR	163529	ParameterType	const char *		163420	0					
ANR	163530	Identifier	the_format		163420	1					
ANR	163531	CFGEntryNode	ENTRY		163420		True				
ANR	163532	CFGExitNode	EXIT		163420		True				
ANR	163533	Symbol	* tmp		163420						
ANR	163534	Symbol	malloc		163420						
ANR	163535	Symbol	tmp -> _next		163420						
ANR	163536	Symbol	tmp -> _subsys		163420						
ANR	163537	Symbol	the_code		163420						
ANR	163538	Symbol	tmp -> _message		163420						
ANR	163539	Symbol	vprintf_length		163420						
ANR	163540	Symbol	the_subsys		163420						
ANR	163541	Symbol	tmp -> _code		163420						
ANR	163542	Symbol	l		163420						
ANR	163543	Symbol	ap		163420						
ANR	163544	Symbol	tmp		163420						
ANR	163545	Symbol	strdup		163420						
ANR	163546	Symbol	_next		163420						
ANR	163547	Symbol	the_format		163420						
ANR	163548	Function	CondorError :: getFullText	116:0:2553:3027							
ANR	163549	FunctionDef	CondorError :: getFullText (bool want_newline)		163548	0					
ANR	163550	CompoundStatement		118:0:2611:3027	163548	0					
ANR	163551	Statement	static	119:1:2614:2619	163548	0	True				
ANR	163552	IdentifierDeclStatement	MyString errbuf ;	119:8:2621:2636	163548	1	True				
ANR	163553	IdentifierDecl	errbuf		163548	0					
ANR	163554	IdentifierDeclType	MyString		163548	0					
ANR	163555	Identifier	errbuf		163548	1					
ANR	163556	IdentifierDeclStatement	bool printed_one = false ;	120:1:2639:2663	163548	2	True				
ANR	163557	IdentifierDecl	printed_one = false		163548	0					
ANR	163558	IdentifierDeclType	bool		163548	0					
ANR	163559	Identifier	printed_one		163548	1					
ANR	163560	AssignmentExpression	printed_one = false		163548	2		=			
ANR	163561	Identifier	false		163548	0					
ANR	163562	Identifier	false		163548	1					
ANR	163563	ExpressionStatement	"errbuf = """""	122:1:2667:2678	163548	3	True				
ANR	163564	AssignmentExpression	"errbuf = """""		163548	0		=			
ANR	163565	Identifier	errbuf		163548	0					
ANR	163566	PrimaryExpression	""""""		163548	1					
ANR	163567	IdentifierDeclStatement	CondorError * walk = _next ;	123:1:2681:2706	163548	4	True				
ANR	163568	IdentifierDecl	* walk = _next		163548	0					
ANR	163569	IdentifierDeclType	CondorError *		163548	0					
ANR	163570	Identifier	walk		163548	1					
ANR	163571	AssignmentExpression	* walk = _next		163548	2		=			
ANR	163572	Identifier	_next		163548	0					
ANR	163573	Identifier	_next		163548	1					
ANR	163574	WhileStatement	while ( walk )		163548	5					
ANR	163575	Condition	walk	124:8:2716:2719	163548	0	True				
ANR	163576	Identifier	walk		163548	0					
ANR	163577	CompoundStatement		7:14:110:110	163548	1					
ANR	163578	IfStatement	if ( printed_one )		163548	0					
ANR	163579	Condition	printed_one	125:6:2730:2740	163548	0	True				
ANR	163580	Identifier	printed_one		163548	0					
ANR	163581	CompoundStatement		8:20:132:132	163548	1					
ANR	163582	IfStatement	if ( want_newline )		163548	0					
ANR	163583	Condition	want_newline	126:7:2753:2764	163548	0	True				
ANR	163584	Identifier	want_newline		163548	0					
ANR	163585	CompoundStatement		9:22:156:156	163548	1					
ANR	163586	ExpressionStatement	errbuf += '\\n'	127:4:2774:2788	163548	0	True				
ANR	163587	AssignmentExpression	errbuf += '\\n'		163548	0		+=			
ANR	163588	Identifier	errbuf		163548	0					
ANR	163589	PrimaryExpression	'\\n'		163548	1					
ANR	163590	ElseStatement	else		163548	0					
ANR	163591	CompoundStatement		11:10:188:188	163548	0					
ANR	163592	ExpressionStatement	errbuf += '|'	129:4:2806:2819	163548	0	True				
ANR	163593	AssignmentExpression	errbuf += '|'		163548	0		+=			
ANR	163594	Identifier	errbuf		163548	0					
ANR	163595	PrimaryExpression	'|'		163548	1					
ANR	163596	ElseStatement	else		163548	0					
ANR	163597	CompoundStatement		14:9:223:223	163548	0					
ANR	163598	ExpressionStatement	printed_one = true	132:3:2840:2858	163548	0	True				
ANR	163599	AssignmentExpression	printed_one = true		163548	0		=			
ANR	163600	Identifier	printed_one		163548	0					
ANR	163601	Identifier	true		163548	1					
ANR	163602	ExpressionStatement	errbuf += walk -> _subsys	134:2:2866:2889	163548	1	True				
ANR	163603	AssignmentExpression	errbuf += walk -> _subsys		163548	0		+=			
ANR	163604	Identifier	errbuf		163548	0					
ANR	163605	PtrMemberAccess	walk -> _subsys		163548	1					
ANR	163606	Identifier	walk		163548	0					
ANR	163607	Identifier	_subsys		163548	1					
ANR	163608	ExpressionStatement	errbuf += ':'	135:2:2893:2906	163548	2	True				
ANR	163609	AssignmentExpression	errbuf += ':'		163548	0		+=			
ANR	163610	Identifier	errbuf		163548	0					
ANR	163611	PrimaryExpression	':'		163548	1					
ANR	163612	ExpressionStatement	errbuf += walk -> _code	136:2:2910:2931	163548	3	True				
ANR	163613	AssignmentExpression	errbuf += walk -> _code		163548	0		+=			
ANR	163614	Identifier	errbuf		163548	0					
ANR	163615	PtrMemberAccess	walk -> _code		163548	1					
ANR	163616	Identifier	walk		163548	0					
ANR	163617	Identifier	_code		163548	1					
ANR	163618	ExpressionStatement	errbuf += ':'	137:2:2935:2948	163548	4	True				
ANR	163619	AssignmentExpression	errbuf += ':'		163548	0		+=			
ANR	163620	Identifier	errbuf		163548	0					
ANR	163621	PrimaryExpression	':'		163548	1					
ANR	163622	ExpressionStatement	errbuf += walk -> _message	138:2:2952:2976	163548	5	True				
ANR	163623	AssignmentExpression	errbuf += walk -> _message		163548	0		+=			
ANR	163624	Identifier	errbuf		163548	0					
ANR	163625	PtrMemberAccess	walk -> _message		163548	1					
ANR	163626	Identifier	walk		163548	0					
ANR	163627	Identifier	_message		163548	1					
ANR	163628	ExpressionStatement	walk = walk -> _next	139:2:2980:2998	163548	6	True				
ANR	163629	AssignmentExpression	walk = walk -> _next		163548	0		=			
ANR	163630	Identifier	walk		163548	0					
ANR	163631	PtrMemberAccess	walk -> _next		163548	1					
ANR	163632	Identifier	walk		163548	0					
ANR	163633	Identifier	_next		163548	1					
ANR	163634	ReturnStatement	return errbuf . Value ( ) ;	141:1:3004:3025	163548	6	True				
ANR	163635	CallExpression	errbuf . Value ( )		163548	0					
ANR	163636	Callee	errbuf . Value		163548	0					
ANR	163637	MemberAccess	errbuf . Value		163548	0					
ANR	163638	Identifier	errbuf		163548	0					
ANR	163639	Identifier	Value		163548	1					
ANR	163640	ArgumentList			163548	1					
ANR	163641	ReturnType	const char *		163548	1					
ANR	163642	Identifier	CondorError :: getFullText		163548	2					
ANR	163643	ParameterList	bool want_newline		163548	3					
ANR	163644	Parameter	bool want_newline	117:26:2591:2607	163548	0	True				
ANR	163645	ParameterType	bool		163548	0					
ANR	163646	Identifier	want_newline		163548	1					
ANR	163647	CFGEntryNode	ENTRY		163548		True				
ANR	163648	CFGExitNode	EXIT		163548		True				
ANR	163649	Symbol	walk -> _message		163548						
ANR	163650	Symbol	walk -> _subsys		163548						
ANR	163651	Symbol	want_newline		163548						
ANR	163652	Symbol	false		163548						
ANR	163653	Symbol	walk -> _next		163548						
ANR	163654	Symbol	errbuf . Value		163548						
ANR	163655	Symbol	true		163548						
ANR	163656	Symbol	* walk		163548						
ANR	163657	Symbol	walk -> _code		163548						
ANR	163658	Symbol	errbuf		163548						
ANR	163659	Symbol	printed_one		163548						
ANR	163660	Symbol	_next		163548						
ANR	163661	Symbol	walk		163548						
ANR	163662	Function	CondorError :: subsys	144:0:3030:3267							
ANR	163663	FunctionDef	CondorError :: subsys (int level)		163662	0					
ANR	163664	CompoundStatement		146:0:3073:3267	163662	0					
ANR	163665	IdentifierDeclStatement	int n = 0 ;	147:1:3076:3085	163662	0	True				
ANR	163666	IdentifierDecl	n = 0		163662	0					
ANR	163667	IdentifierDeclType	int		163662	0					
ANR	163668	Identifier	n		163662	1					
ANR	163669	AssignmentExpression	n = 0		163662	2		=			
ANR	163670	Identifier	n		163662	0					
ANR	163671	PrimaryExpression	0		163662	1					
ANR	163672	IdentifierDeclStatement	CondorError * walk = _next ;	148:1:3088:3113	163662	1	True				
ANR	163673	IdentifierDecl	* walk = _next		163662	0					
ANR	163674	IdentifierDeclType	CondorError *		163662	0					
ANR	163675	Identifier	walk		163662	1					
ANR	163676	AssignmentExpression	* walk = _next		163662	2		=			
ANR	163677	Identifier	_next		163662	0					
ANR	163678	Identifier	_next		163662	1					
ANR	163679	WhileStatement	while ( walk && n < level )		163662	2					
ANR	163680	Condition	walk && n < level	149:8:3123:3139	163662	0	True				
ANR	163681	AndExpression	walk && n < level		163662	0		&&			
ANR	163682	Identifier	walk		163662	0					
ANR	163683	RelationalExpression	n < level		163662	1		<			
ANR	163684	Identifier	n		163662	0					
ANR	163685	Identifier	level		163662	1					
ANR	163686	CompoundStatement		4:27:68:68	163662	1					
ANR	163687	ExpressionStatement	walk = walk -> _next	150:2:3146:3164	163662	0	True				
ANR	163688	AssignmentExpression	walk = walk -> _next		163662	0		=			
ANR	163689	Identifier	walk		163662	0					
ANR	163690	PtrMemberAccess	walk -> _next		163662	1					
ANR	163691	Identifier	walk		163662	0					
ANR	163692	Identifier	_next		163662	1					
ANR	163693	ExpressionStatement	n ++	151:2:3168:3171	163662	1	True				
ANR	163694	PostIncDecOperationExpression	n ++		163662	0					
ANR	163695	Identifier	n		163662	0					
ANR	163696	IncDec	++		163662	1					
ANR	163697	IfStatement	if ( walk && walk -> _subsys )		163662	3					
ANR	163698	Condition	walk && walk -> _subsys	153:5:3181:3201	163662	0	True				
ANR	163699	AndExpression	walk && walk -> _subsys		163662	0		&&			
ANR	163700	Identifier	walk		163662	0					
ANR	163701	PtrMemberAccess	walk -> _subsys		163662	1					
ANR	163702	Identifier	walk		163662	0					
ANR	163703	Identifier	_subsys		163662	1					
ANR	163704	CompoundStatement		8:28:130:130	163662	1					
ANR	163705	ReturnStatement	return walk -> _subsys ;	154:2:3208:3228	163662	0	True				
ANR	163706	PtrMemberAccess	walk -> _subsys		163662	0					
ANR	163707	Identifier	walk		163662	0					
ANR	163708	Identifier	_subsys		163662	1					
ANR	163709	ElseStatement	else		163662	0					
ANR	163710	CompoundStatement		10:8:164:164	163662	0					
ANR	163711	ReturnStatement	"return ""SUBSYS-NULL"" ;"	156:2:3242:3262	163662	0	True				
ANR	163712	PrimaryExpression	"""SUBSYS-NULL"""		163662	0					
ANR	163713	ReturnType	const char *		163662	1					
ANR	163714	Identifier	CondorError :: subsys		163662	2					
ANR	163715	ParameterList	int level		163662	3					
ANR	163716	Parameter	int level	145:20:3062:3070	163662	0	True				
ANR	163717	ParameterType	int		163662	0					
ANR	163718	Identifier	level		163662	1					
ANR	163719	CFGEntryNode	ENTRY		163662		True				
ANR	163720	CFGExitNode	EXIT		163662		True				
ANR	163721	Symbol	level		163662						
ANR	163722	Symbol	walk -> _subsys		163662						
ANR	163723	Symbol	* walk		163662						
ANR	163724	Symbol	walk -> _next		163662						
ANR	163725	Symbol	_next		163662						
ANR	163726	Symbol	n		163662						
ANR	163727	Symbol	walk		163662						
ANR	163728	Function	CondorError :: code	160:0:3270:3466							
ANR	163729	FunctionDef	CondorError :: code (int level)		163728	0					
ANR	163730	CompoundStatement		162:0:3303:3466	163728	0					
ANR	163731	IdentifierDeclStatement	int n = 0 ;	163:1:3306:3315	163728	0	True				
ANR	163732	IdentifierDecl	n = 0		163728	0					
ANR	163733	IdentifierDeclType	int		163728	0					
ANR	163734	Identifier	n		163728	1					
ANR	163735	AssignmentExpression	n = 0		163728	2		=			
ANR	163736	Identifier	n		163728	0					
ANR	163737	PrimaryExpression	0		163728	1					
ANR	163738	IdentifierDeclStatement	CondorError * walk = _next ;	164:1:3318:3343	163728	1	True				
ANR	163739	IdentifierDecl	* walk = _next		163728	0					
ANR	163740	IdentifierDeclType	CondorError *		163728	0					
ANR	163741	Identifier	walk		163728	1					
ANR	163742	AssignmentExpression	* walk = _next		163728	2		=			
ANR	163743	Identifier	_next		163728	0					
ANR	163744	Identifier	_next		163728	1					
ANR	163745	WhileStatement	while ( walk && n < level )		163728	2					
ANR	163746	Condition	walk && n < level	165:8:3353:3369	163728	0	True				
ANR	163747	AndExpression	walk && n < level		163728	0		&&			
ANR	163748	Identifier	walk		163728	0					
ANR	163749	RelationalExpression	n < level		163728	1		<			
ANR	163750	Identifier	n		163728	0					
ANR	163751	Identifier	level		163728	1					
ANR	163752	CompoundStatement		4:27:68:68	163728	1					
ANR	163753	ExpressionStatement	walk = walk -> _next	166:2:3376:3394	163728	0	True				
ANR	163754	AssignmentExpression	walk = walk -> _next		163728	0		=			
ANR	163755	Identifier	walk		163728	0					
ANR	163756	PtrMemberAccess	walk -> _next		163728	1					
ANR	163757	Identifier	walk		163728	0					
ANR	163758	Identifier	_next		163728	1					
ANR	163759	ExpressionStatement	n ++	167:2:3398:3401	163728	1	True				
ANR	163760	PostIncDecOperationExpression	n ++		163728	0					
ANR	163761	Identifier	n		163728	0					
ANR	163762	IncDec	++		163728	1					
ANR	163763	IfStatement	if ( walk )		163728	3					
ANR	163764	Condition	walk	169:5:3411:3414	163728	0	True				
ANR	163765	Identifier	walk		163728	0					
ANR	163766	CompoundStatement		8:11:113:113	163728	1					
ANR	163767	ReturnStatement	return walk -> _code ;	170:2:3421:3439	163728	0	True				
ANR	163768	PtrMemberAccess	walk -> _code		163728	0					
ANR	163769	Identifier	walk		163728	0					
ANR	163770	Identifier	_code		163728	1					
ANR	163771	ElseStatement	else		163728	0					
ANR	163772	CompoundStatement		10:8:145:145	163728	0					
ANR	163773	ReturnStatement	return 0 ;	172:2:3453:3461	163728	0	True				
ANR	163774	PrimaryExpression	0		163728	0					
ANR	163775	ReturnType	int		163728	1					
ANR	163776	Identifier	CondorError :: code		163728	2					
ANR	163777	ParameterList	int level		163728	3					
ANR	163778	Parameter	int level	161:18:3292:3300	163728	0	True				
ANR	163779	ParameterType	int		163728	0					
ANR	163780	Identifier	level		163728	1					
ANR	163781	CFGEntryNode	ENTRY		163728		True				
ANR	163782	CFGExitNode	EXIT		163728		True				
ANR	163783	Symbol	level		163728						
ANR	163784	Symbol	walk -> _next		163728						
ANR	163785	Symbol	* walk		163728						
ANR	163786	Symbol	walk -> _code		163728						
ANR	163787	Symbol	_next		163728						
ANR	163788	Symbol	n		163728						
ANR	163789	Symbol	walk		163728						
ANR	163790	Function	CondorError :: message	176:0:3469:3709							
ANR	163791	FunctionDef	CondorError :: message (int level)		163790	0					
ANR	163792	CompoundStatement		178:0:3513:3709	163790	0					
ANR	163793	IdentifierDeclStatement	int n = 0 ;	179:1:3516:3525	163790	0	True				
ANR	163794	IdentifierDecl	n = 0		163790	0					
ANR	163795	IdentifierDeclType	int		163790	0					
ANR	163796	Identifier	n		163790	1					
ANR	163797	AssignmentExpression	n = 0		163790	2		=			
ANR	163798	Identifier	n		163790	0					
ANR	163799	PrimaryExpression	0		163790	1					
ANR	163800	IdentifierDeclStatement	CondorError * walk = _next ;	180:1:3528:3553	163790	1	True				
ANR	163801	IdentifierDecl	* walk = _next		163790	0					
ANR	163802	IdentifierDeclType	CondorError *		163790	0					
ANR	163803	Identifier	walk		163790	1					
ANR	163804	AssignmentExpression	* walk = _next		163790	2		=			
ANR	163805	Identifier	_next		163790	0					
ANR	163806	Identifier	_next		163790	1					
ANR	163807	WhileStatement	while ( walk && n < level )		163790	2					
ANR	163808	Condition	walk && n < level	181:8:3563:3579	163790	0	True				
ANR	163809	AndExpression	walk && n < level		163790	0		&&			
ANR	163810	Identifier	walk		163790	0					
ANR	163811	RelationalExpression	n < level		163790	1		<			
ANR	163812	Identifier	n		163790	0					
ANR	163813	Identifier	level		163790	1					
ANR	163814	CompoundStatement		4:27:68:68	163790	1					
ANR	163815	ExpressionStatement	walk = walk -> _next	182:2:3586:3604	163790	0	True				
ANR	163816	AssignmentExpression	walk = walk -> _next		163790	0		=			
ANR	163817	Identifier	walk		163790	0					
ANR	163818	PtrMemberAccess	walk -> _next		163790	1					
ANR	163819	Identifier	walk		163790	0					
ANR	163820	Identifier	_next		163790	1					
ANR	163821	ExpressionStatement	n ++	183:2:3608:3611	163790	1	True				
ANR	163822	PostIncDecOperationExpression	n ++		163790	0					
ANR	163823	Identifier	n		163790	0					
ANR	163824	IncDec	++		163790	1					
ANR	163825	IfStatement	if ( walk && walk -> _subsys )		163790	3					
ANR	163826	Condition	walk && walk -> _subsys	185:5:3621:3641	163790	0	True				
ANR	163827	AndExpression	walk && walk -> _subsys		163790	0		&&			
ANR	163828	Identifier	walk		163790	0					
ANR	163829	PtrMemberAccess	walk -> _subsys		163790	1					
ANR	163830	Identifier	walk		163790	0					
ANR	163831	Identifier	_subsys		163790	1					
ANR	163832	CompoundStatement		8:28:130:130	163790	1					
ANR	163833	ReturnStatement	return walk -> _message ;	186:2:3648:3669	163790	0	True				
ANR	163834	PtrMemberAccess	walk -> _message		163790	0					
ANR	163835	Identifier	walk		163790	0					
ANR	163836	Identifier	_message		163790	1					
ANR	163837	ElseStatement	else		163790	0					
ANR	163838	CompoundStatement		10:8:165:165	163790	0					
ANR	163839	ReturnStatement	"return ""MESSAGE-NULL"" ;"	188:2:3683:3704	163790	0	True				
ANR	163840	PrimaryExpression	"""MESSAGE-NULL"""		163790	0					
ANR	163841	ReturnType	const char *		163790	1					
ANR	163842	Identifier	CondorError :: message		163790	2					
ANR	163843	ParameterList	int level		163790	3					
ANR	163844	Parameter	int level	177:21:3502:3510	163790	0	True				
ANR	163845	ParameterType	int		163790	0					
ANR	163846	Identifier	level		163790	1					
ANR	163847	CFGEntryNode	ENTRY		163790		True				
ANR	163848	CFGExitNode	EXIT		163790		True				
ANR	163849	Symbol	walk -> _message		163790						
ANR	163850	Symbol	level		163790						
ANR	163851	Symbol	walk -> _subsys		163790						
ANR	163852	Symbol	* walk		163790						
ANR	163853	Symbol	walk -> _next		163790						
ANR	163854	Symbol	_next		163790						
ANR	163855	Symbol	n		163790						
ANR	163856	Symbol	walk		163790						
