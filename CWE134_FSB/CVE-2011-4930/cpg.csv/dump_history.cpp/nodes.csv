command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1276976	File	data/converged/CVE-2011-4930_htcondor/dump_history.cpp								
ANR	1276977	Function	Usage	46:0:1405:1513							
ANR	1276978	FunctionDef	"Usage (char * name , int iExitCode)"		1276977	0					
ANR	1276979	CompoundStatement		47:0:1445:1513	1276977	0					
ANR	1276980	ExpressionStatement	"printf ( ""Usage: %s -name quill-name\\n"" , name )"	48:2:1449:1492	1276977	0	True				
ANR	1276981	CallExpression	"printf ( ""Usage: %s -name quill-name\\n"" , name )"		1276977	0					
ANR	1276982	Callee	printf		1276977	0					
ANR	1276983	Identifier	printf		1276977	0					
ANR	1276984	ArgumentList	"""Usage: %s -name quill-name\\n"""		1276977	1					
ANR	1276985	Argument	"""Usage: %s -name quill-name\\n"""		1276977	0					
ANR	1276986	PrimaryExpression	"""Usage: %s -name quill-name\\n"""		1276977	0					
ANR	1276987	Argument	name		1276977	1					
ANR	1276988	Identifier	name		1276977	0					
ANR	1276989	ExpressionStatement	exit ( iExitCode )	49:2:1496:1511	1276977	1	True				
ANR	1276990	CallExpression	exit ( iExitCode )		1276977	0					
ANR	1276991	Callee	exit		1276977	0					
ANR	1276992	Identifier	exit		1276977	0					
ANR	1276993	ArgumentList	iExitCode		1276977	1					
ANR	1276994	Argument	iExitCode		1276977	0					
ANR	1276995	Identifier	iExitCode		1276977	0					
ANR	1276996	ReturnType	void		1276977	1					
ANR	1276997	Identifier	Usage		1276977	2					
ANR	1276998	ParameterList	"char * name , int iExitCode"		1276977	3					
ANR	1276999	Parameter	char * name	46:11:1416:1425	1276977	0	True				
ANR	1277000	ParameterType	char *		1276977	0					
ANR	1277001	Identifier	name		1276977	1					
ANR	1277002	Parameter	int iExitCode	46:23:1428:1440	1276977	1	True				
ANR	1277003	ParameterType	int		1276977	0					
ANR	1277004	Identifier	iExitCode		1276977	1					
ANR	1277005	CFGEntryNode	ENTRY		1276977		True				
ANR	1277006	CFGExitNode	EXIT		1276977		True				
ANR	1277007	Symbol	name		1276977						
ANR	1277008	Symbol	iExitCode		1276977						
ANR	1277009	DeclStmt									
ANR	1277010	Decl							char	"char * ( char * & quillName , char * & databaseIp , char * & databaseName , char * & queryPassword )"	getDBConnStr
ANR	1277011	DeclStmt									
ANR	1277012	Decl							bool	bool ( )	checkDBconfig
ANR	1277013	DeclStmt									
ANR	1277014	Decl							void	"void ( char * JobHistoryFileName , char * constraint , ExprTree * constraintExpr )"	readHistoryFromFiles
ANR	1277015	DeclStmt									
ANR	1277016	Decl							char	char * * ( int * numHistoryFiles )	findHistoryFiles
ANR	1277017	DeclStmt									
ANR	1277018	Decl							bool	"bool ( const char * fullFilename , time_t * backup_time )"	isHistoryBackup
ANR	1277019	DeclStmt									
ANR	1277020	Decl							int	"int ( const void * item1 , const void * item2 )"	compareHistoryFilenames
ANR	1277021	DeclStmt									
ANR	1277022	Decl							void	"void ( char * JobHistoryFileName , char * constraint , ExprTree * constraintExpr )"	readHistoryFromFile
ANR	1277023	DeclStmt									
ANR	1277024	Decl							CollectorList	CollectorList *	Collectors
ANR	1277025	DeclStmt									
ANR	1277026	Decl							QueryResult	QueryResult	result
ANR	1277027	DeclStmt									
ANR	1277028	Decl							CondorQuery	CondorQuery ( QUILL_AD )	quillQuery
ANR	1277029	DeclStmt									
ANR	1277030	Decl							ClassAdList	ClassAdList	quillList
ANR	1277031	DeclStmt									
ANR	1277032	Decl							bool	bool	longformat
ANR	1277033	DeclStmt									
ANR	1277034	Decl							bool	bool	customFormat
ANR	1277035	DeclStmt									
ANR	1277036	Decl							bool	bool	backwards
ANR	1277037	DeclStmt									
ANR	1277038	Decl							AttrListPrintMask	AttrListPrintMask	mask
ANR	1277039	DeclStmt									
ANR	1277040	Decl							char	char *	BaseJobHistoryFileName
ANR	1277041	DeclStmt									
ANR	1277042	Decl							int	int	cluster
ANR	1277043	Decl							int	int	proc
ANR	1277044	DeclStmt									
ANR	1277045	Decl							int	int	specifiedMatch
ANR	1277046	Decl							int	int	matchCount
ANR	1277047	Function	main	75:0:2533:6538							
ANR	1277048	FunctionDef	"main (int argc , char * argv [ ])"		1277047	0					
ANR	1277049	CompoundStatement		77:0:2566:6538	1277047	0					
ANR	1277050	ExpressionStatement	Collectors = NULL	78:2:2570:2587	1277047	0	True				
ANR	1277051	AssignmentExpression	Collectors = NULL		1277047	0		=			
ANR	1277052	Identifier	Collectors		1277047	0					
ANR	1277053	Identifier	NULL		1277047	1					
ANR	1277054	IdentifierDeclStatement	HistorySnapshot * historySnapshot ;	80:2:2592:2624	1277047	1	True				
ANR	1277055	IdentifierDecl	* historySnapshot		1277047	0					
ANR	1277056	IdentifierDeclType	HistorySnapshot *		1277047	0					
ANR	1277057	Identifier	historySnapshot		1277047	1					
ANR	1277058	IdentifierDeclStatement	SQLQuery queryhor ;	81:2:2628:2645	1277047	2	True				
ANR	1277059	IdentifierDecl	queryhor		1277047	0					
ANR	1277060	IdentifierDeclType	SQLQuery		1277047	0					
ANR	1277061	Identifier	queryhor		1277047	1					
ANR	1277062	IdentifierDeclStatement	SQLQuery queryver ;	82:2:2649:2666	1277047	3	True				
ANR	1277063	IdentifierDecl	queryver		1277047	0					
ANR	1277064	IdentifierDeclType	SQLQuery		1277047	0					
ANR	1277065	Identifier	queryver		1277047	1					
ANR	1277066	IdentifierDeclStatement	QuillErrCode st ;	83:2:2670:2685	1277047	4	True				
ANR	1277067	IdentifierDecl	st		1277047	0					
ANR	1277068	IdentifierDeclType	QuillErrCode		1277047	0					
ANR	1277069	Identifier	st		1277047	1					
ANR	1277070	IdentifierDeclStatement	void * * parameters ;	85:2:2690:2707	1277047	5	True				
ANR	1277071	IdentifierDecl	* * parameters		1277047	0					
ANR	1277072	IdentifierDeclType	void * *		1277047	0					
ANR	1277073	Identifier	parameters		1277047	1					
ANR	1277074	IdentifierDeclStatement	char * dbconn = NULL ;	86:2:2711:2728	1277047	6	True				
ANR	1277075	IdentifierDecl	* dbconn = NULL		1277047	0					
ANR	1277076	IdentifierDeclType	char *		1277047	0					
ANR	1277077	Identifier	dbconn		1277047	1					
ANR	1277078	AssignmentExpression	* dbconn = NULL		1277047	2		=			
ANR	1277079	Identifier	NULL		1277047	0					
ANR	1277080	Identifier	NULL		1277047	1					
ANR	1277081	IdentifierDeclStatement	"bool readfromfile = false , remotequill = false ;"	87:2:2732:2775	1277047	7	True				
ANR	1277082	IdentifierDecl	readfromfile = false		1277047	0					
ANR	1277083	IdentifierDeclType	bool		1277047	0					
ANR	1277084	Identifier	readfromfile		1277047	1					
ANR	1277085	AssignmentExpression	readfromfile = false		1277047	2		=			
ANR	1277086	Identifier	false		1277047	0					
ANR	1277087	Identifier	false		1277047	1					
ANR	1277088	IdentifierDecl	remotequill = false		1277047	1					
ANR	1277089	IdentifierDeclType	bool		1277047	0					
ANR	1277090	Identifier	remotequill		1277047	1					
ANR	1277091	AssignmentExpression	remotequill = false		1277047	2		=			
ANR	1277092	Identifier	false		1277047	0					
ANR	1277093	Identifier	false		1277047	1					
ANR	1277094	IdentifierDeclStatement	"char * dbIpAddr = NULL , * dbName = NULL , * queryPassword = NULL , * quillName = NULL ;"	89:2:2780:2849	1277047	8	True				
ANR	1277095	IdentifierDecl	* dbIpAddr = NULL		1277047	0					
ANR	1277096	IdentifierDeclType	char *		1277047	0					
ANR	1277097	Identifier	dbIpAddr		1277047	1					
ANR	1277098	AssignmentExpression	* dbIpAddr = NULL		1277047	2		=			
ANR	1277099	Identifier	NULL		1277047	0					
ANR	1277100	Identifier	NULL		1277047	1					
ANR	1277101	IdentifierDecl	* dbName = NULL		1277047	1					
ANR	1277102	IdentifierDeclType	char *		1277047	0					
ANR	1277103	Identifier	dbName		1277047	1					
ANR	1277104	AssignmentExpression	* dbName = NULL		1277047	2		=			
ANR	1277105	Identifier	NULL		1277047	0					
ANR	1277106	Identifier	NULL		1277047	1					
ANR	1277107	IdentifierDecl	* queryPassword = NULL		1277047	2					
ANR	1277108	IdentifierDeclType	char *		1277047	0					
ANR	1277109	Identifier	queryPassword		1277047	1					
ANR	1277110	AssignmentExpression	* queryPassword = NULL		1277047	2		=			
ANR	1277111	Identifier	NULL		1277047	0					
ANR	1277112	Identifier	NULL		1277047	1					
ANR	1277113	IdentifierDecl	* quillName = NULL		1277047	3					
ANR	1277114	IdentifierDeclType	char *		1277047	0					
ANR	1277115	Identifier	quillName		1277047	1					
ANR	1277116	AssignmentExpression	* quillName = NULL		1277047	2		=			
ANR	1277117	Identifier	NULL		1277047	0					
ANR	1277118	Identifier	NULL		1277047	1					
ANR	1277119	IdentifierDeclStatement	AttrList * ad = 0 ;	91:2:2854:2868	1277047	9	True				
ANR	1277120	IdentifierDecl	* ad = 0		1277047	0					
ANR	1277121	IdentifierDeclType	AttrList *		1277047	0					
ANR	1277122	Identifier	ad		1277047	1					
ANR	1277123	AssignmentExpression	* ad = 0		1277047	2		=			
ANR	1277124	Identifier	ad		1277047	0					
ANR	1277125	PrimaryExpression	0		1277047	1					
ANR	1277126	IdentifierDeclStatement	int flag = 1 ;	93:2:2873:2885	1277047	10	True				
ANR	1277127	IdentifierDecl	flag = 1		1277047	0					
ANR	1277128	IdentifierDeclType	int		1277047	0					
ANR	1277129	Identifier	flag		1277047	1					
ANR	1277130	AssignmentExpression	flag = 1		1277047	2		=			
ANR	1277131	Identifier	flag		1277047	0					
ANR	1277132	PrimaryExpression	1		1277047	1					
ANR	1277133	IdentifierDeclStatement	MyString tmp ;	95:2:2890:2902	1277047	11	True				
ANR	1277134	IdentifierDecl	tmp		1277047	0					
ANR	1277135	IdentifierDeclType	MyString		1277047	0					
ANR	1277136	Identifier	tmp		1277047	1					
ANR	1277137	IdentifierDeclStatement	int i ;	97:2:2907:2912	1277047	12	True				
ANR	1277138	IdentifierDecl	i		1277047	0					
ANR	1277139	IdentifierDeclType	int		1277047	0					
ANR	1277140	Identifier	i		1277047	1					
ANR	1277141	ExpressionStatement	parameters = ( void * * ) malloc ( NUM_PARAMETERS * sizeof ( void * ) )	98:2:2916:2978	1277047	13	True				
ANR	1277142	AssignmentExpression	parameters = ( void * * ) malloc ( NUM_PARAMETERS * sizeof ( void * ) )		1277047	0		=			
ANR	1277143	Identifier	parameters		1277047	0					
ANR	1277144	CastExpression	( void * * ) malloc ( NUM_PARAMETERS * sizeof ( void * ) )		1277047	1					
ANR	1277145	CastTarget	void * *		1277047	0					
ANR	1277146	CallExpression	malloc ( NUM_PARAMETERS * sizeof ( void * ) )		1277047	1					
ANR	1277147	Callee	malloc		1277047	0					
ANR	1277148	Identifier	malloc		1277047	0					
ANR	1277149	ArgumentList	NUM_PARAMETERS * sizeof ( void * )		1277047	1					
ANR	1277150	Argument	NUM_PARAMETERS * sizeof ( void * )		1277047	0					
ANR	1277151	MultiplicativeExpression	NUM_PARAMETERS * sizeof ( void * )		1277047	0		*			
ANR	1277152	Identifier	NUM_PARAMETERS		1277047	0					
ANR	1277153	SizeofExpression	sizeof ( void * )		1277047	1					
ANR	1277154	Sizeof	sizeof		1277047	0					
ANR	1277155	SizeofOperand	void *		1277047	1					
ANR	1277156	ExpressionStatement	"myDistro -> Init ( argc , argv )"	99:2:2982:3010	1277047	14	True				
ANR	1277157	CallExpression	"myDistro -> Init ( argc , argv )"		1277047	0					
ANR	1277158	Callee	myDistro -> Init		1277047	0					
ANR	1277159	PtrMemberAccess	myDistro -> Init		1277047	0					
ANR	1277160	Identifier	myDistro		1277047	0					
ANR	1277161	Identifier	Init		1277047	1					
ANR	1277162	ArgumentList	argc		1277047	1					
ANR	1277163	Argument	argc		1277047	0					
ANR	1277164	Identifier	argc		1277047	0					
ANR	1277165	Argument	argv		1277047	1					
ANR	1277166	Identifier	argv		1277047	0					
ANR	1277167	ExpressionStatement	"queryhor . setQuery ( HISTORY_ALL_HOR , NULL )"	101:2:3015:3055	1277047	15	True				
ANR	1277168	CallExpression	"queryhor . setQuery ( HISTORY_ALL_HOR , NULL )"		1277047	0					
ANR	1277169	Callee	queryhor . setQuery		1277047	0					
ANR	1277170	MemberAccess	queryhor . setQuery		1277047	0					
ANR	1277171	Identifier	queryhor		1277047	0					
ANR	1277172	Identifier	setQuery		1277047	1					
ANR	1277173	ArgumentList	HISTORY_ALL_HOR		1277047	1					
ANR	1277174	Argument	HISTORY_ALL_HOR		1277047	0					
ANR	1277175	Identifier	HISTORY_ALL_HOR		1277047	0					
ANR	1277176	Argument	NULL		1277047	1					
ANR	1277177	Identifier	NULL		1277047	0					
ANR	1277178	ExpressionStatement	"queryver . setQuery ( HISTORY_ALL_VER , NULL )"	102:2:3059:3099	1277047	16	True				
ANR	1277179	CallExpression	"queryver . setQuery ( HISTORY_ALL_VER , NULL )"		1277047	0					
ANR	1277180	Callee	queryver . setQuery		1277047	0					
ANR	1277181	MemberAccess	queryver . setQuery		1277047	0					
ANR	1277182	Identifier	queryver		1277047	0					
ANR	1277183	Identifier	setQuery		1277047	1					
ANR	1277184	ArgumentList	HISTORY_ALL_VER		1277047	1					
ANR	1277185	Argument	HISTORY_ALL_VER		1277047	0					
ANR	1277186	Identifier	HISTORY_ALL_VER		1277047	0					
ANR	1277187	Argument	NULL		1277047	1					
ANR	1277188	Identifier	NULL		1277047	0					
ANR	1277189	ExpressionStatement	longformat = TRUE	104:2:3104:3119	1277047	17	True				
ANR	1277190	AssignmentExpression	longformat = TRUE		1277047	0		=			
ANR	1277191	Identifier	longformat		1277047	0					
ANR	1277192	Identifier	TRUE		1277047	1					
ANR	1277193	ForStatement	for ( i = 1 ; i < argc ; i ++ )		1277047	18					
ANR	1277194	ForInit	i = 1 ;	105:6:3130:3133	1277047	0	True				
ANR	1277195	AssignmentExpression	i = 1		1277047	0		=			
ANR	1277196	Identifier	i		1277047	0					
ANR	1277197	PrimaryExpression	1		1277047	1					
ANR	1277198	Condition	i < argc	105:11:3135:3140	1277047	1	True				
ANR	1277199	RelationalExpression	i < argc		1277047	0		<			
ANR	1277200	Identifier	i		1277047	0					
ANR	1277201	Identifier	argc		1277047	1					
ANR	1277202	PostIncDecOperationExpression	i ++	105:19:3143:3145	1277047	2	True				
ANR	1277203	Identifier	i		1277047	0					
ANR	1277204	IncDec	++		1277047	1					
ANR	1277205	CompoundStatement		29:24:581:581	1277047	3					
ANR	1277206	IfStatement	"if ( strcmp ( argv [ i ] , ""-name"" ) == 0 )"		1277047	0					
ANR	1277207	Condition	"strcmp ( argv [ i ] , ""-name"" ) == 0"	106:7:3157:3183	1277047	0	True				
ANR	1277208	EqualityExpression	"strcmp ( argv [ i ] , ""-name"" ) == 0"		1277047	0		==			
ANR	1277209	CallExpression	"strcmp ( argv [ i ] , ""-name"" )"		1277047	0					
ANR	1277210	Callee	strcmp		1277047	0					
ANR	1277211	Identifier	strcmp		1277047	0					
ANR	1277212	ArgumentList	argv [ i ]		1277047	1					
ANR	1277213	Argument	argv [ i ]		1277047	0					
ANR	1277214	ArrayIndexing	argv [ i ]		1277047	0					
ANR	1277215	Identifier	argv		1277047	0					
ANR	1277216	Identifier	i		1277047	1					
ANR	1277217	Argument	"""-name"""		1277047	1					
ANR	1277218	PrimaryExpression	"""-name"""		1277047	0					
ANR	1277219	PrimaryExpression	0		1277047	1					
ANR	1277220	CompoundStatement		30:36:619:619	1277047	1					
ANR	1277221	ExpressionStatement	i ++	107:2:3190:3193	1277047	0	True				
ANR	1277222	PostIncDecOperationExpression	i ++		1277047	0					
ANR	1277223	Identifier	i		1277047	0					
ANR	1277224	IncDec	++		1277047	1					
ANR	1277225	IfStatement	if ( argc <= i )		1277047	1					
ANR	1277226	Condition	argc <= i	108:6:3201:3209	1277047	0	True				
ANR	1277227	RelationalExpression	argc <= i		1277047	0		<=			
ANR	1277228	Identifier	argc		1277047	0					
ANR	1277229	Identifier	i		1277047	1					
ANR	1277230	CompoundStatement		32:17:645:645	1277047	1					
ANR	1277231	ExpressionStatement	"fprintf ( stderr , ""Error: Argument -name requires the name of a quilld as a parameter\\n"" )"	109:3:3217:3312	1277047	0	True				
ANR	1277232	CallExpression	"fprintf ( stderr , ""Error: Argument -name requires the name of a quilld as a parameter\\n"" )"		1277047	0					
ANR	1277233	Callee	fprintf		1277047	0					
ANR	1277234	Identifier	fprintf		1277047	0					
ANR	1277235	ArgumentList	stderr		1277047	1					
ANR	1277236	Argument	stderr		1277047	0					
ANR	1277237	Identifier	stderr		1277047	0					
ANR	1277238	Argument	"""Error: Argument -name requires the name of a quilld as a parameter\\n"""		1277047	1					
ANR	1277239	PrimaryExpression	"""Error: Argument -name requires the name of a quilld as a parameter\\n"""		1277047	0					
ANR	1277240	ExpressionStatement	exit ( 1 )	111:3:3317:3324	1277047	1	True				
ANR	1277241	CallExpression	exit ( 1 )		1277047	0					
ANR	1277242	Callee	exit		1277047	0					
ANR	1277243	Identifier	exit		1277047	0					
ANR	1277244	ArgumentList	1		1277047	1					
ANR	1277245	Argument	1		1277047	0					
ANR	1277246	PrimaryExpression	1		1277047	0					
ANR	1277247	IfStatement	if ( ! ( quillName = get_daemon_name ( argv [ i ] ) ) )		1277047	2					
ANR	1277248	Condition	! ( quillName = get_daemon_name ( argv [ i ] ) )	114:6:3339:3377	1277047	0	True				
ANR	1277249	UnaryOperationExpression	! ( quillName = get_daemon_name ( argv [ i ] ) )		1277047	0					
ANR	1277250	UnaryOperator	!		1277047	0					
ANR	1277251	AssignmentExpression	quillName = get_daemon_name ( argv [ i ] )		1277047	1		=			
ANR	1277252	Identifier	quillName		1277047	0					
ANR	1277253	CallExpression	get_daemon_name ( argv [ i ] )		1277047	1					
ANR	1277254	Callee	get_daemon_name		1277047	0					
ANR	1277255	Identifier	get_daemon_name		1277047	0					
ANR	1277256	ArgumentList	argv [ i ]		1277047	1					
ANR	1277257	Argument	argv [ i ]		1277047	0					
ANR	1277258	ArrayIndexing	argv [ i ]		1277047	0					
ANR	1277259	Identifier	argv		1277047	0					
ANR	1277260	Identifier	i		1277047	1					
ANR	1277261	CompoundStatement		38:48:814:814	1277047	1					
ANR	1277262	ExpressionStatement	"fprintf ( stderr , ""Error: unknown host %s\\n"" , get_host_part ( argv [ i ] ) )"	115:3:3386:3461	1277047	0	True				
ANR	1277263	CallExpression	"fprintf ( stderr , ""Error: unknown host %s\\n"" , get_host_part ( argv [ i ] ) )"		1277047	0					
ANR	1277264	Callee	fprintf		1277047	0					
ANR	1277265	Identifier	fprintf		1277047	0					
ANR	1277266	ArgumentList	stderr		1277047	1					
ANR	1277267	Argument	stderr		1277047	0					
ANR	1277268	Identifier	stderr		1277047	0					
ANR	1277269	Argument	"""Error: unknown host %s\\n"""		1277047	1					
ANR	1277270	PrimaryExpression	"""Error: unknown host %s\\n"""		1277047	0					
ANR	1277271	Argument	get_host_part ( argv [ i ] )		1277047	2					
ANR	1277272	CallExpression	get_host_part ( argv [ i ] )		1277047	0					
ANR	1277273	Callee	get_host_part		1277047	0					
ANR	1277274	Identifier	get_host_part		1277047	0					
ANR	1277275	ArgumentList	argv [ i ]		1277047	1					
ANR	1277276	Argument	argv [ i ]		1277047	0					
ANR	1277277	ArrayIndexing	argv [ i ]		1277047	0					
ANR	1277278	Identifier	argv		1277047	0					
ANR	1277279	Identifier	i		1277047	1					
ANR	1277280	ExpressionStatement	"printf ( ""\\n"" )"	117:3:3466:3478	1277047	1	True				
ANR	1277281	CallExpression	"printf ( ""\\n"" )"		1277047	0					
ANR	1277282	Callee	printf		1277047	0					
ANR	1277283	Identifier	printf		1277047	0					
ANR	1277284	ArgumentList	"""\\n"""		1277047	1					
ANR	1277285	Argument	"""\\n"""		1277047	0					
ANR	1277286	PrimaryExpression	"""\\n"""		1277047	0					
ANR	1277287	Statement	print_wrapped_text	118:3:3483:3500	1277047	2	True				
ANR	1277288	Statement	(	118:21:3501:3501	1277047	3	True				
ANR	1277289	Statement	"""Extra Info: The name given with the -name """	118:22:3502:3545	1277047	4	True				
ANR	1277290	Statement	"""should be the name of a condor_quilld process. """	119:10:3557:3605	1277047	5	True				
ANR	1277291	Statement	"""Normally it is either a hostname, or """	120:10:3617:3655	1277047	6	True				
ANR	1277292	Statement	"""\\""name@hostname\\"". """	121:10:3667:3687	1277047	7	True				
ANR	1277293	Statement	"""In either case, the hostname should be the """	122:10:3699:3743	1277047	8	True				
ANR	1277294	Statement	"""Internet host name, but it appears that it """	123:10:3755:3799	1277047	9	True				
ANR	1277295	Statement	"""wasn't."""	124:10:3811:3819	1277047	10	True				
ANR	1277296	Statement	","	124:19:3820:3820	1277047	11	True				
ANR	1277297	Statement	stderr	125:10:3832:3837	1277047	12	True				
ANR	1277298	Statement	)	125:16:3838:3838	1277047	13	True				
ANR	1277299	ExpressionStatement		125:17:3839:3839	1277047	14	True				
ANR	1277300	ExpressionStatement	exit ( 1 )	126:3:3844:3851	1277047	15	True				
ANR	1277301	CallExpression	exit ( 1 )		1277047	0					
ANR	1277302	Callee	exit		1277047	0					
ANR	1277303	Identifier	exit		1277047	0					
ANR	1277304	ArgumentList	1		1277047	1					
ANR	1277305	Argument	1		1277047	0					
ANR	1277306	PrimaryExpression	1		1277047	0					
ANR	1277307	ExpressionStatement	"tmp . sprintf ( ""%s == \\""%s\\"""" , ATTR_NAME , quillName )"	128:2:3859:3909	1277047	3	True				
ANR	1277308	CallExpression	"tmp . sprintf ( ""%s == \\""%s\\"""" , ATTR_NAME , quillName )"		1277047	0					
ANR	1277309	Callee	tmp . sprintf		1277047	0					
ANR	1277310	MemberAccess	tmp . sprintf		1277047	0					
ANR	1277311	Identifier	tmp		1277047	0					
ANR	1277312	Identifier	sprintf		1277047	1					
ANR	1277313	ArgumentList	"""%s == \\""%s\\"""""		1277047	1					
ANR	1277314	Argument	"""%s == \\""%s\\"""""		1277047	0					
ANR	1277315	PrimaryExpression	"""%s == \\""%s\\"""""		1277047	0					
ANR	1277316	Argument	ATTR_NAME		1277047	1					
ANR	1277317	Identifier	ATTR_NAME		1277047	0					
ANR	1277318	Argument	quillName		1277047	2					
ANR	1277319	Identifier	quillName		1277047	0					
ANR	1277320	ExpressionStatement	quillQuery . addORConstraint ( tmp . Value ( ) )	129:2:3921:3961	1277047	4	True				
ANR	1277321	CallExpression	quillQuery . addORConstraint ( tmp . Value ( ) )		1277047	0					
ANR	1277322	Callee	quillQuery . addORConstraint		1277047	0					
ANR	1277323	MemberAccess	quillQuery . addORConstraint		1277047	0					
ANR	1277324	Identifier	quillQuery		1277047	0					
ANR	1277325	Identifier	addORConstraint		1277047	1					
ANR	1277326	ArgumentList	tmp . Value ( )		1277047	1					
ANR	1277327	Argument	tmp . Value ( )		1277047	0					
ANR	1277328	CallExpression	tmp . Value ( )		1277047	0					
ANR	1277329	Callee	tmp . Value		1277047	0					
ANR	1277330	MemberAccess	tmp . Value		1277047	0					
ANR	1277331	Identifier	tmp		1277047	0					
ANR	1277332	Identifier	Value		1277047	1					
ANR	1277333	ArgumentList			1277047	1					
ANR	1277334	ExpressionStatement	"tmp . sprintf ( ""%s == \\""%s\\"""" , ATTR_SCHEDD_NAME , quillName )"	131:16:3980:4037	1277047	5	True				
ANR	1277335	CallExpression	"tmp . sprintf ( ""%s == \\""%s\\"""" , ATTR_SCHEDD_NAME , quillName )"		1277047	0					
ANR	1277336	Callee	tmp . sprintf		1277047	0					
ANR	1277337	MemberAccess	tmp . sprintf		1277047	0					
ANR	1277338	Identifier	tmp		1277047	0					
ANR	1277339	Identifier	sprintf		1277047	1					
ANR	1277340	ArgumentList	"""%s == \\""%s\\"""""		1277047	1					
ANR	1277341	Argument	"""%s == \\""%s\\"""""		1277047	0					
ANR	1277342	PrimaryExpression	"""%s == \\""%s\\"""""		1277047	0					
ANR	1277343	Argument	ATTR_SCHEDD_NAME		1277047	1					
ANR	1277344	Identifier	ATTR_SCHEDD_NAME		1277047	0					
ANR	1277345	Argument	quillName		1277047	2					
ANR	1277346	Identifier	quillName		1277047	0					
ANR	1277347	ExpressionStatement	quillQuery . addORConstraint ( tmp . Value ( ) )	132:16:4055:4095	1277047	6	True				
ANR	1277348	CallExpression	quillQuery . addORConstraint ( tmp . Value ( ) )		1277047	0					
ANR	1277349	Callee	quillQuery . addORConstraint		1277047	0					
ANR	1277350	MemberAccess	quillQuery . addORConstraint		1277047	0					
ANR	1277351	Identifier	quillQuery		1277047	0					
ANR	1277352	Identifier	addORConstraint		1277047	1					
ANR	1277353	ArgumentList	tmp . Value ( )		1277047	1					
ANR	1277354	Argument	tmp . Value ( )		1277047	0					
ANR	1277355	CallExpression	tmp . Value ( )		1277047	0					
ANR	1277356	Callee	tmp . Value		1277047	0					
ANR	1277357	MemberAccess	tmp . Value		1277047	0					
ANR	1277358	Identifier	tmp		1277047	0					
ANR	1277359	Identifier	Value		1277047	1					
ANR	1277360	ArgumentList			1277047	1					
ANR	1277361	ExpressionStatement	remotequill = true	134:2:4100:4118	1277047	7	True				
ANR	1277362	AssignmentExpression	remotequill = true		1277047	0		=			
ANR	1277363	Identifier	remotequill		1277047	0					
ANR	1277364	Identifier	true		1277047	1					
ANR	1277365	ExpressionStatement	readfromfile = false	135:2:4122:4142	1277047	8	True				
ANR	1277366	AssignmentExpression	readfromfile = false		1277047	0		=			
ANR	1277367	Identifier	readfromfile		1277047	0					
ANR	1277368	Identifier	false		1277047	1					
ANR	1277369	ElseStatement	else		1277047	0					
ANR	1277370	IfStatement	"if ( strcmp ( argv [ i ] , ""-help"" ) == 0 )"		1277047	0					
ANR	1277371	Condition	"strcmp ( argv [ i ] , ""-help"" ) == 0"	137:13:4163:4188	1277047	0	True				
ANR	1277372	EqualityExpression	"strcmp ( argv [ i ] , ""-help"" ) == 0"		1277047	0		==			
ANR	1277373	CallExpression	"strcmp ( argv [ i ] , ""-help"" )"		1277047	0					
ANR	1277374	Callee	strcmp		1277047	0					
ANR	1277375	Identifier	strcmp		1277047	0					
ANR	1277376	ArgumentList	argv [ i ]		1277047	1					
ANR	1277377	Argument	argv [ i ]		1277047	0					
ANR	1277378	ArrayIndexing	argv [ i ]		1277047	0					
ANR	1277379	Identifier	argv		1277047	0					
ANR	1277380	Identifier	i		1277047	1					
ANR	1277381	Argument	"""-help"""		1277047	1					
ANR	1277382	PrimaryExpression	"""-help"""		1277047	0					
ANR	1277383	PrimaryExpression	0		1277047	1					
ANR	1277384	CompoundStatement		61:41:1624:1624	1277047	1					
ANR	1277385	ExpressionStatement	"Usage ( argv [ 0 ] , 0 )"	138:2:4195:4211	1277047	0	True				
ANR	1277386	CallExpression	"Usage ( argv [ 0 ] , 0 )"		1277047	0					
ANR	1277387	Callee	Usage		1277047	0					
ANR	1277388	Identifier	Usage		1277047	0					
ANR	1277389	ArgumentList	argv [ 0 ]		1277047	1					
ANR	1277390	Argument	argv [ 0 ]		1277047	0					
ANR	1277391	ArrayIndexing	argv [ 0 ]		1277047	0					
ANR	1277392	Identifier	argv		1277047	0					
ANR	1277393	PrimaryExpression	0		1277047	1					
ANR	1277394	Argument	0		1277047	1					
ANR	1277395	PrimaryExpression	0		1277047	0					
ANR	1277396	IfStatement	if ( i < argc )		1277047	19					
ANR	1277397	Condition	i < argc	141:6:4229:4234	1277047	0	True				
ANR	1277398	RelationalExpression	i < argc		1277047	0		<			
ANR	1277399	Identifier	i		1277047	0					
ANR	1277400	Identifier	argc		1277047	1					
ANR	1277401	ExpressionStatement	Usage ( argv [ 0 ] )	141:14:4237:4251	1277047	1	True				
ANR	1277402	CallExpression	Usage ( argv [ 0 ] )		1277047	0					
ANR	1277403	Callee	Usage		1277047	0					
ANR	1277404	Identifier	Usage		1277047	0					
ANR	1277405	ArgumentList	argv [ 0 ]		1277047	1					
ANR	1277406	Argument	argv [ 0 ]		1277047	0					
ANR	1277407	ArrayIndexing	argv [ 0 ]		1277047	0					
ANR	1277408	Identifier	argv		1277047	0					
ANR	1277409	PrimaryExpression	0		1277047	1					
ANR	1277410	ExpressionStatement	config ( )	143:2:4258:4266	1277047	20	True				
ANR	1277411	CallExpression	config ( )		1277047	0					
ANR	1277412	Callee	config		1277047	0					
ANR	1277413	Identifier	config		1277047	0					
ANR	1277414	ArgumentList			1277047	1					
ANR	1277415	IfStatement	if ( checkDBconfig ( ) == true && ! readfromfile )		1277047	21					
ANR	1277416	Condition	checkDBconfig ( ) == true && ! readfromfile	146:6:4331:4370	1277047	0	True				
ANR	1277417	AndExpression	checkDBconfig ( ) == true && ! readfromfile		1277047	0		&&			
ANR	1277418	EqualityExpression	checkDBconfig ( ) == true		1277047	0		==			
ANR	1277419	CallExpression	checkDBconfig ( )		1277047	0					
ANR	1277420	Callee	checkDBconfig		1277047	0					
ANR	1277421	Identifier	checkDBconfig		1277047	0					
ANR	1277422	ArgumentList			1277047	1					
ANR	1277423	Identifier	true		1277047	1					
ANR	1277424	UnaryOperationExpression	! readfromfile		1277047	1					
ANR	1277425	UnaryOperator	!		1277047	0					
ANR	1277426	Identifier	readfromfile		1277047	1					
ANR	1277427	CompoundStatement		70:48:1806:1806	1277047	1					
ANR	1277428	ExpressionStatement	readfromfile = false	147:3:4378:4398	1277047	0	True				
ANR	1277429	AssignmentExpression	readfromfile = false		1277047	0		=			
ANR	1277430	Identifier	readfromfile		1277047	0					
ANR	1277431	Identifier	false		1277047	1					
ANR	1277432	ElseStatement	else		1277047	0					
ANR	1277433	CompoundStatement		72:9:1842:1842	1277047	0					
ANR	1277434	ExpressionStatement	"printf ( ""Error: Cannot use DB to get history information\\n"" )"	150:4:4468:4527	1277047	0	True				
ANR	1277435	CallExpression	"printf ( ""Error: Cannot use DB to get history information\\n"" )"		1277047	0					
ANR	1277436	Callee	printf		1277047	0					
ANR	1277437	Identifier	printf		1277047	0					
ANR	1277438	ArgumentList	"""Error: Cannot use DB to get history information\\n"""		1277047	1					
ANR	1277439	Argument	"""Error: Cannot use DB to get history information\\n"""		1277047	0					
ANR	1277440	PrimaryExpression	"""Error: Cannot use DB to get history information\\n"""		1277047	0					
ANR	1277441	ExpressionStatement	exit ( 1 )	151:3:4532:4539	1277047	1	True				
ANR	1277442	CallExpression	exit ( 1 )		1277047	0					
ANR	1277443	Callee	exit		1277047	0					
ANR	1277444	Identifier	exit		1277047	0					
ANR	1277445	ArgumentList	1		1277047	1					
ANR	1277446	Argument	1		1277047	0					
ANR	1277447	PrimaryExpression	1		1277047	0					
ANR	1277448	IfStatement	if ( readfromfile == false )		1277047	22					
ANR	1277449	Condition	readfromfile == false	154:5:4551:4571	1277047	0	True				
ANR	1277450	EqualityExpression	readfromfile == false		1277047	0		==			
ANR	1277451	Identifier	readfromfile		1277047	0					
ANR	1277452	Identifier	false		1277047	1					
ANR	1277453	CompoundStatement		78:28:2007:2007	1277047	1					
ANR	1277454	IfStatement	if ( remotequill )		1277047	0					
ANR	1277455	Condition	remotequill	155:6:4582:4592	1277047	0	True				
ANR	1277456	Identifier	remotequill		1277047	0					
ANR	1277457	CompoundStatement		79:19:2028:2028	1277047	1					
ANR	1277458	IfStatement	if ( Collectors == NULL )		1277047	0					
ANR	1277459	Condition	Collectors == NULL	156:8:4605:4622	1277047	0	True				
ANR	1277460	EqualityExpression	Collectors == NULL		1277047	0		==			
ANR	1277461	Identifier	Collectors		1277047	0					
ANR	1277462	Identifier	NULL		1277047	1					
ANR	1277463	CompoundStatement		80:28:2058:2058	1277047	1					
ANR	1277464	ExpressionStatement	Collectors = CollectorList :: create ( )	157:5:4632:4668	1277047	0	True				
ANR	1277465	AssignmentExpression	Collectors = CollectorList :: create ( )		1277047	0		=			
ANR	1277466	Identifier	Collectors		1277047	0					
ANR	1277467	CallExpression	CollectorList :: create ( )		1277047	1					
ANR	1277468	Callee	CollectorList :: create		1277047	0					
ANR	1277469	Identifier	CollectorList :: create		1277047	0					
ANR	1277470	ArgumentList			1277047	1					
ANR	1277471	IfStatement	if ( Collectors == NULL )		1277047	1					
ANR	1277472	Condition	Collectors == NULL	158:8:4678:4695	1277047	0	True				
ANR	1277473	EqualityExpression	Collectors == NULL		1277047	0		==			
ANR	1277474	Identifier	Collectors		1277047	0					
ANR	1277475	Identifier	NULL		1277047	1					
ANR	1277476	CompoundStatement		82:29:2132:2132	1277047	1					
ANR	1277477	ExpressionStatement	"printf ( ""Error: Unable to get list of known collectors\\n"" )"	159:6:4707:4764	1277047	0	True				
ANR	1277478	CallExpression	"printf ( ""Error: Unable to get list of known collectors\\n"" )"		1277047	0					
ANR	1277479	Callee	printf		1277047	0					
ANR	1277480	Identifier	printf		1277047	0					
ANR	1277481	ArgumentList	"""Error: Unable to get list of known collectors\\n"""		1277047	1					
ANR	1277482	Argument	"""Error: Unable to get list of known collectors\\n"""		1277047	0					
ANR	1277483	PrimaryExpression	"""Error: Unable to get list of known collectors\\n"""		1277047	0					
ANR	1277484	ExpressionStatement	exit ( 1 )	160:6:4772:4779	1277047	1	True				
ANR	1277485	CallExpression	exit ( 1 )		1277047	0					
ANR	1277486	Callee	exit		1277047	0					
ANR	1277487	Identifier	exit		1277047	0					
ANR	1277488	ArgumentList	1		1277047	1					
ANR	1277489	Argument	1		1277047	0					
ANR	1277490	PrimaryExpression	1		1277047	0					
ANR	1277491	ExpressionStatement	"result = Collectors -> query ( quillQuery , quillList )"	163:4:4798:4850	1277047	1	True				
ANR	1277492	AssignmentExpression	"result = Collectors -> query ( quillQuery , quillList )"		1277047	0		=			
ANR	1277493	Identifier	result		1277047	0					
ANR	1277494	CallExpression	"Collectors -> query ( quillQuery , quillList )"		1277047	1					
ANR	1277495	Callee	Collectors -> query		1277047	0					
ANR	1277496	PtrMemberAccess	Collectors -> query		1277047	0					
ANR	1277497	Identifier	Collectors		1277047	0					
ANR	1277498	Identifier	query		1277047	1					
ANR	1277499	ArgumentList	quillQuery		1277047	1					
ANR	1277500	Argument	quillQuery		1277047	0					
ANR	1277501	Identifier	quillQuery		1277047	0					
ANR	1277502	Argument	quillList		1277047	1					
ANR	1277503	Identifier	quillList		1277047	0					
ANR	1277504	IfStatement	if ( result != Q_OK )		1277047	2					
ANR	1277505	Condition	result != Q_OK	164:7:4859:4872	1277047	0	True				
ANR	1277506	EqualityExpression	result != Q_OK		1277047	0		!=			
ANR	1277507	Identifier	result		1277047	0					
ANR	1277508	Identifier	Q_OK		1277047	1					
ANR	1277509	CompoundStatement		88:23:2308:2308	1277047	1					
ANR	1277510	ExpressionStatement	"printf ( ""Fatal Error querying collectors\\n"" )"	165:5:4882:4925	1277047	0	True				
ANR	1277511	CallExpression	"printf ( ""Fatal Error querying collectors\\n"" )"		1277047	0					
ANR	1277512	Callee	printf		1277047	0					
ANR	1277513	Identifier	printf		1277047	0					
ANR	1277514	ArgumentList	"""Fatal Error querying collectors\\n"""		1277047	1					
ANR	1277515	Argument	"""Fatal Error querying collectors\\n"""		1277047	0					
ANR	1277516	PrimaryExpression	"""Fatal Error querying collectors\\n"""		1277047	0					
ANR	1277517	ExpressionStatement	exit ( 1 )	166:5:4932:4939	1277047	1	True				
ANR	1277518	CallExpression	exit ( 1 )		1277047	0					
ANR	1277519	Callee	exit		1277047	0					
ANR	1277520	Identifier	exit		1277047	0					
ANR	1277521	ArgumentList	1		1277047	1					
ANR	1277522	Argument	1		1277047	0					
ANR	1277523	PrimaryExpression	1		1277047	0					
ANR	1277524	IfStatement	if ( quillList . MyLength ( ) == 0 )		1277047	3					
ANR	1277525	Condition	quillList . MyLength ( ) == 0	169:7:4955:4979	1277047	0	True				
ANR	1277526	EqualityExpression	quillList . MyLength ( ) == 0		1277047	0		==			
ANR	1277527	CallExpression	quillList . MyLength ( )		1277047	0					
ANR	1277528	Callee	quillList . MyLength		1277047	0					
ANR	1277529	MemberAccess	quillList . MyLength		1277047	0					
ANR	1277530	Identifier	quillList		1277047	0					
ANR	1277531	Identifier	MyLength		1277047	1					
ANR	1277532	ArgumentList			1277047	1					
ANR	1277533	PrimaryExpression	0		1277047	1					
ANR	1277534	CompoundStatement		93:34:2415:2415	1277047	1					
ANR	1277535	ExpressionStatement	"printf ( ""Error: Unknown quill server %s\\n"" , quillName )"	170:5:4989:5042	1277047	0	True				
ANR	1277536	CallExpression	"printf ( ""Error: Unknown quill server %s\\n"" , quillName )"		1277047	0					
ANR	1277537	Callee	printf		1277047	0					
ANR	1277538	Identifier	printf		1277047	0					
ANR	1277539	ArgumentList	"""Error: Unknown quill server %s\\n"""		1277047	1					
ANR	1277540	Argument	"""Error: Unknown quill server %s\\n"""		1277047	0					
ANR	1277541	PrimaryExpression	"""Error: Unknown quill server %s\\n"""		1277047	0					
ANR	1277542	Argument	quillName		1277047	1					
ANR	1277543	Identifier	quillName		1277047	0					
ANR	1277544	ExpressionStatement	exit ( 1 )	171:5:5049:5056	1277047	1	True				
ANR	1277545	CallExpression	exit ( 1 )		1277047	0					
ANR	1277546	Callee	exit		1277047	0					
ANR	1277547	Identifier	exit		1277047	0					
ANR	1277548	ArgumentList	1		1277047	1					
ANR	1277549	Argument	1		1277047	0					
ANR	1277550	PrimaryExpression	1		1277047	0					
ANR	1277551	ExpressionStatement	quillList . Open ( )	174:4:5073:5089	1277047	4	True				
ANR	1277552	CallExpression	quillList . Open ( )		1277047	0					
ANR	1277553	Callee	quillList . Open		1277047	0					
ANR	1277554	MemberAccess	quillList . Open		1277047	0					
ANR	1277555	Identifier	quillList		1277047	0					
ANR	1277556	Identifier	Open		1277047	1					
ANR	1277557	ArgumentList			1277047	1					
ANR	1277558	WhileStatement	while ( ( ad = quillList . Next ( ) ) )		1277047	5					
ANR	1277559	Condition	ad = quillList . Next ( )	175:11:5102:5124	1277047	0	True				
ANR	1277560	AssignmentExpression	ad = quillList . Next ( )		1277047	0		=			
ANR	1277561	Identifier	ad		1277047	0					
ANR	1277562	CallExpression	quillList . Next ( )		1277047	1					
ANR	1277563	Callee	quillList . Next		1277047	0					
ANR	1277564	MemberAccess	quillList . Next		1277047	0					
ANR	1277565	Identifier	quillList		1277047	0					
ANR	1277566	Identifier	Next		1277047	1					
ANR	1277567	ArgumentList			1277047	1					
ANR	1277568	CompoundStatement		99:36:2560:2560	1277047	1					
ANR	1277569	ExpressionStatement	dbIpAddr = dbName = queryPassword = NULL	177:5:5175:5215	1277047	0	True				
ANR	1277570	AssignmentExpression	dbIpAddr = dbName = queryPassword = NULL		1277047	0		=			
ANR	1277571	Identifier	dbIpAddr		1277047	0					
ANR	1277572	AssignmentExpression	dbName = queryPassword = NULL		1277047	1		=			
ANR	1277573	Identifier	dbName		1277047	0					
ANR	1277574	AssignmentExpression	queryPassword = NULL		1277047	1		=			
ANR	1277575	Identifier	queryPassword		1277047	0					
ANR	1277576	Identifier	NULL		1277047	1					
ANR	1277577	IfStatement	"if ( ! ad -> LookupString ( ATTR_QUILL_DB_IP_ADDR , & dbIpAddr ) || ! ad -> LookupString ( ATTR_QUILL_DB_NAME , & dbName ) || ! ad -> LookupString ( ATTR_QUILL_DB_QUERY_PASSWORD , & queryPassword ) || ( ad -> LookupBool ( ATTR_QUILL_IS_REMOTELY_QUERYABLE , flag ) && ! flag ) )"		1277047	1					
ANR	1277578	Condition	"! ad -> LookupString ( ATTR_QUILL_DB_IP_ADDR , & dbIpAddr ) || ! ad -> LookupString ( ATTR_QUILL_DB_NAME , & dbName ) || ! ad -> LookupString ( ATTR_QUILL_DB_QUERY_PASSWORD , & queryPassword ) || ( ad -> LookupBool ( ATTR_QUILL_IS_REMOTELY_QUERYABLE , flag ) && ! flag )"	178:9:5226:5480	1277047	0	True				
ANR	1277579	OrExpression	"! ad -> LookupString ( ATTR_QUILL_DB_IP_ADDR , & dbIpAddr ) || ! ad -> LookupString ( ATTR_QUILL_DB_NAME , & dbName ) || ! ad -> LookupString ( ATTR_QUILL_DB_QUERY_PASSWORD , & queryPassword ) || ( ad -> LookupBool ( ATTR_QUILL_IS_REMOTELY_QUERYABLE , flag ) && ! flag )"		1277047	0		||			
ANR	1277580	UnaryOperationExpression	"! ad -> LookupString ( ATTR_QUILL_DB_IP_ADDR , & dbIpAddr )"		1277047	0					
ANR	1277581	UnaryOperator	!		1277047	0					
ANR	1277582	CallExpression	"ad -> LookupString ( ATTR_QUILL_DB_IP_ADDR , & dbIpAddr )"		1277047	1					
ANR	1277583	Callee	ad -> LookupString		1277047	0					
ANR	1277584	PtrMemberAccess	ad -> LookupString		1277047	0					
ANR	1277585	Identifier	ad		1277047	0					
ANR	1277586	Identifier	LookupString		1277047	1					
ANR	1277587	ArgumentList	ATTR_QUILL_DB_IP_ADDR		1277047	1					
ANR	1277588	Argument	ATTR_QUILL_DB_IP_ADDR		1277047	0					
ANR	1277589	Identifier	ATTR_QUILL_DB_IP_ADDR		1277047	0					
ANR	1277590	Argument	& dbIpAddr		1277047	1					
ANR	1277591	UnaryOperationExpression	& dbIpAddr		1277047	0					
ANR	1277592	UnaryOperator	&		1277047	0					
ANR	1277593	Identifier	dbIpAddr		1277047	1					
ANR	1277594	OrExpression	"! ad -> LookupString ( ATTR_QUILL_DB_NAME , & dbName ) || ! ad -> LookupString ( ATTR_QUILL_DB_QUERY_PASSWORD , & queryPassword ) || ( ad -> LookupBool ( ATTR_QUILL_IS_REMOTELY_QUERYABLE , flag ) && ! flag )"		1277047	1		||			
ANR	1277595	UnaryOperationExpression	"! ad -> LookupString ( ATTR_QUILL_DB_NAME , & dbName )"		1277047	0					
ANR	1277596	UnaryOperator	!		1277047	0					
ANR	1277597	CallExpression	"ad -> LookupString ( ATTR_QUILL_DB_NAME , & dbName )"		1277047	1					
ANR	1277598	Callee	ad -> LookupString		1277047	0					
ANR	1277599	PtrMemberAccess	ad -> LookupString		1277047	0					
ANR	1277600	Identifier	ad		1277047	0					
ANR	1277601	Identifier	LookupString		1277047	1					
ANR	1277602	ArgumentList	ATTR_QUILL_DB_NAME		1277047	1					
ANR	1277603	Argument	ATTR_QUILL_DB_NAME		1277047	0					
ANR	1277604	Identifier	ATTR_QUILL_DB_NAME		1277047	0					
ANR	1277605	Argument	& dbName		1277047	1					
ANR	1277606	UnaryOperationExpression	& dbName		1277047	0					
ANR	1277607	UnaryOperator	&		1277047	0					
ANR	1277608	Identifier	dbName		1277047	1					
ANR	1277609	OrExpression	"! ad -> LookupString ( ATTR_QUILL_DB_QUERY_PASSWORD , & queryPassword ) || ( ad -> LookupBool ( ATTR_QUILL_IS_REMOTELY_QUERYABLE , flag ) && ! flag )"		1277047	1		||			
ANR	1277610	UnaryOperationExpression	"! ad -> LookupString ( ATTR_QUILL_DB_QUERY_PASSWORD , & queryPassword )"		1277047	0					
ANR	1277611	UnaryOperator	!		1277047	0					
ANR	1277612	CallExpression	"ad -> LookupString ( ATTR_QUILL_DB_QUERY_PASSWORD , & queryPassword )"		1277047	1					
ANR	1277613	Callee	ad -> LookupString		1277047	0					
ANR	1277614	PtrMemberAccess	ad -> LookupString		1277047	0					
ANR	1277615	Identifier	ad		1277047	0					
ANR	1277616	Identifier	LookupString		1277047	1					
ANR	1277617	ArgumentList	ATTR_QUILL_DB_QUERY_PASSWORD		1277047	1					
ANR	1277618	Argument	ATTR_QUILL_DB_QUERY_PASSWORD		1277047	0					
ANR	1277619	Identifier	ATTR_QUILL_DB_QUERY_PASSWORD		1277047	0					
ANR	1277620	Argument	& queryPassword		1277047	1					
ANR	1277621	UnaryOperationExpression	& queryPassword		1277047	0					
ANR	1277622	UnaryOperator	&		1277047	0					
ANR	1277623	Identifier	queryPassword		1277047	1					
ANR	1277624	AndExpression	"ad -> LookupBool ( ATTR_QUILL_IS_REMOTELY_QUERYABLE , flag ) && ! flag"		1277047	1		&&			
ANR	1277625	CallExpression	"ad -> LookupBool ( ATTR_QUILL_IS_REMOTELY_QUERYABLE , flag )"		1277047	0					
ANR	1277626	Callee	ad -> LookupBool		1277047	0					
ANR	1277627	PtrMemberAccess	ad -> LookupBool		1277047	0					
ANR	1277628	Identifier	ad		1277047	0					
ANR	1277629	Identifier	LookupBool		1277047	1					
ANR	1277630	ArgumentList	ATTR_QUILL_IS_REMOTELY_QUERYABLE		1277047	1					
ANR	1277631	Argument	ATTR_QUILL_IS_REMOTELY_QUERYABLE		1277047	0					
ANR	1277632	Identifier	ATTR_QUILL_IS_REMOTELY_QUERYABLE		1277047	0					
ANR	1277633	Argument	flag		1277047	1					
ANR	1277634	Identifier	flag		1277047	0					
ANR	1277635	UnaryOperationExpression	! flag		1277047	1					
ANR	1277636	UnaryOperator	!		1277047	0					
ANR	1277637	Identifier	flag		1277047	1					
ANR	1277638	CompoundStatement		105:72:2916:2916	1277047	1					
ANR	1277639	Statement	printf	182:6:5491:5496	1277047	0	True				
ANR	1277640	Statement	(	182:12:5497:5497	1277047	1	True				
ANR	1277641	Statement	"""Error: The quill daemon \\""%s\\"" is not set up """	182:13:5498:5544	1277047	2	True				
ANR	1277642	Statement	"""for database queries\\n"""	183:7:5553:5576	1277047	3	True				
ANR	1277643	Statement	","	183:31:5577:5577	1277047	4	True				
ANR	1277644	Statement	quillName	184:7:5587:5595	1277047	5	True				
ANR	1277645	Statement	)	184:16:5596:5596	1277047	6	True				
ANR	1277646	ExpressionStatement		184:17:5597:5597	1277047	7	True				
ANR	1277647	ExpressionStatement	exit ( 1 )	185:6:5605:5612	1277047	8	True				
ANR	1277648	CallExpression	exit ( 1 )		1277047	0					
ANR	1277649	Callee	exit		1277047	0					
ANR	1277650	Identifier	exit		1277047	0					
ANR	1277651	ArgumentList	1		1277047	1					
ANR	1277652	Argument	1		1277047	0					
ANR	1277653	PrimaryExpression	1		1277047	0					
ANR	1277654	ExpressionStatement	"dbconn = getDBConnStr ( quillName , dbIpAddr , dbName , queryPassword )"	189:3:5635:5697	1277047	1	True				
ANR	1277655	AssignmentExpression	"dbconn = getDBConnStr ( quillName , dbIpAddr , dbName , queryPassword )"		1277047	0		=			
ANR	1277656	Identifier	dbconn		1277047	0					
ANR	1277657	CallExpression	"getDBConnStr ( quillName , dbIpAddr , dbName , queryPassword )"		1277047	1					
ANR	1277658	Callee	getDBConnStr		1277047	0					
ANR	1277659	Identifier	getDBConnStr		1277047	0					
ANR	1277660	ArgumentList	quillName		1277047	1					
ANR	1277661	Argument	quillName		1277047	0					
ANR	1277662	Identifier	quillName		1277047	0					
ANR	1277663	Argument	dbIpAddr		1277047	1					
ANR	1277664	Identifier	dbIpAddr		1277047	0					
ANR	1277665	Argument	dbName		1277047	2					
ANR	1277666	Identifier	dbName		1277047	0					
ANR	1277667	Argument	queryPassword		1277047	3					
ANR	1277668	Identifier	queryPassword		1277047	0					
ANR	1277669	ExpressionStatement	historySnapshot = new HistorySnapshot ( dbconn )	190:3:5702:5747	1277047	2	True				
ANR	1277670	AssignmentExpression	historySnapshot = new HistorySnapshot ( dbconn )		1277047	0		=			
ANR	1277671	Identifier	historySnapshot		1277047	0					
ANR	1277672	Identifier	dbconn		1277047	1					
ANR	1277673	ExpressionStatement	"st = historySnapshot -> sendQuery ( & queryhor , & queryver , longformat , true )"	193:3:5832:5903	1277047	3	True				
ANR	1277674	AssignmentExpression	"st = historySnapshot -> sendQuery ( & queryhor , & queryver , longformat , true )"		1277047	0		=			
ANR	1277675	Identifier	st		1277047	0					
ANR	1277676	CallExpression	"historySnapshot -> sendQuery ( & queryhor , & queryver , longformat , true )"		1277047	1					
ANR	1277677	Callee	historySnapshot -> sendQuery		1277047	0					
ANR	1277678	PtrMemberAccess	historySnapshot -> sendQuery		1277047	0					
ANR	1277679	Identifier	historySnapshot		1277047	0					
ANR	1277680	Identifier	sendQuery		1277047	1					
ANR	1277681	ArgumentList	& queryhor		1277047	1					
ANR	1277682	Argument	& queryhor		1277047	0					
ANR	1277683	UnaryOperationExpression	& queryhor		1277047	0					
ANR	1277684	UnaryOperator	&		1277047	0					
ANR	1277685	Identifier	queryhor		1277047	1					
ANR	1277686	Argument	& queryver		1277047	1					
ANR	1277687	UnaryOperationExpression	& queryver		1277047	0					
ANR	1277688	UnaryOperator	&		1277047	0					
ANR	1277689	Identifier	queryver		1277047	1					
ANR	1277690	Argument	longformat		1277047	2					
ANR	1277691	Identifier	longformat		1277047	0					
ANR	1277692	Argument	true		1277047	3					
ANR	1277693	Identifier	true		1277047	0					
ANR	1277694	IfStatement	if ( st == QUILL_FAILURE )		1277047	4					
ANR	1277695	Condition	st == QUILL_FAILURE	196:6:6047:6065	1277047	0	True				
ANR	1277696	EqualityExpression	st == QUILL_FAILURE		1277047	0		==			
ANR	1277697	Identifier	st		1277047	0					
ANR	1277698	Identifier	QUILL_FAILURE		1277047	1					
ANR	1277699	CompoundStatement		120:27:3501:3501	1277047	1					
ANR	1277700	ExpressionStatement	"printf ( ""-- Database at %s not reachable\\n"" , dbIpAddr )"	197:4:6074:6128	1277047	0	True				
ANR	1277701	CallExpression	"printf ( ""-- Database at %s not reachable\\n"" , dbIpAddr )"		1277047	0					
ANR	1277702	Callee	printf		1277047	0					
ANR	1277703	Identifier	printf		1277047	0					
ANR	1277704	ArgumentList	"""-- Database at %s not reachable\\n"""		1277047	1					
ANR	1277705	Argument	"""-- Database at %s not reachable\\n"""		1277047	0					
ANR	1277706	PrimaryExpression	"""-- Database at %s not reachable\\n"""		1277047	0					
ANR	1277707	Argument	dbIpAddr		1277047	1					
ANR	1277708	Identifier	dbIpAddr		1277047	0					
ANR	1277709	IfStatement	if ( historySnapshot -> isHistoryEmpty ( ) )		1277047	5					
ANR	1277710	Condition	historySnapshot -> isHistoryEmpty ( )	200:7:6169:6201	1277047	0	True				
ANR	1277711	CallExpression	historySnapshot -> isHistoryEmpty ( )		1277047	0					
ANR	1277712	Callee	historySnapshot -> isHistoryEmpty		1277047	0					
ANR	1277713	PtrMemberAccess	historySnapshot -> isHistoryEmpty		1277047	0					
ANR	1277714	Identifier	historySnapshot		1277047	0					
ANR	1277715	Identifier	isHistoryEmpty		1277047	1					
ANR	1277716	ArgumentList			1277047	1					
ANR	1277717	CompoundStatement		124:42:3637:3637	1277047	1					
ANR	1277718	ExpressionStatement	"printf ( ""No historical jobs in the database\\n"" )"	201:4:6210:6256	1277047	0	True				
ANR	1277719	CallExpression	"printf ( ""No historical jobs in the database\\n"" )"		1277047	0					
ANR	1277720	Callee	printf		1277047	0					
ANR	1277721	Identifier	printf		1277047	0					
ANR	1277722	ArgumentList	"""No historical jobs in the database\\n"""		1277047	1					
ANR	1277723	Argument	"""No historical jobs in the database\\n"""		1277047	0					
ANR	1277724	PrimaryExpression	"""No historical jobs in the database\\n"""		1277047	0					
ANR	1277725	ExpressionStatement	historySnapshot -> release ( )	203:3:6266:6292	1277047	6	True				
ANR	1277726	CallExpression	historySnapshot -> release ( )		1277047	0					
ANR	1277727	Callee	historySnapshot -> release		1277047	0					
ANR	1277728	PtrMemberAccess	historySnapshot -> release		1277047	0					
ANR	1277729	Identifier	historySnapshot		1277047	0					
ANR	1277730	Identifier	release		1277047	1					
ANR	1277731	ArgumentList			1277047	1					
ANR	1277732	Statement	delete	204:3:6297:6302	1277047	7	True				
ANR	1277733	ExpressionStatement	historySnapshot	204:9:6303:6320	1277047	8	True				
ANR	1277734	Identifier	historySnapshot		1277047	0					
ANR	1277735	IfStatement	if ( parameters )		1277047	23					
ANR	1277736	Condition	parameters	208:5:6337:6346	1277047	0	True				
ANR	1277737	Identifier	parameters		1277047	0					
ANR	1277738	ExpressionStatement	free ( parameters )	208:17:6349:6365	1277047	1	True				
ANR	1277739	CallExpression	free ( parameters )		1277047	0					
ANR	1277740	Callee	free		1277047	0					
ANR	1277741	Identifier	free		1277047	0					
ANR	1277742	ArgumentList	parameters		1277047	1					
ANR	1277743	Argument	parameters		1277047	0					
ANR	1277744	Identifier	parameters		1277047	0					
ANR	1277745	IfStatement	if ( dbIpAddr )		1277047	24					
ANR	1277746	Condition	dbIpAddr	209:5:6372:6379	1277047	0	True				
ANR	1277747	Identifier	dbIpAddr		1277047	0					
ANR	1277748	ExpressionStatement	free ( dbIpAddr )	209:15:6382:6396	1277047	1	True				
ANR	1277749	CallExpression	free ( dbIpAddr )		1277047	0					
ANR	1277750	Callee	free		1277047	0					
ANR	1277751	Identifier	free		1277047	0					
ANR	1277752	ArgumentList	dbIpAddr		1277047	1					
ANR	1277753	Argument	dbIpAddr		1277047	0					
ANR	1277754	Identifier	dbIpAddr		1277047	0					
ANR	1277755	IfStatement	if ( dbName )		1277047	25					
ANR	1277756	Condition	dbName	210:5:6403:6408	1277047	0	True				
ANR	1277757	Identifier	dbName		1277047	0					
ANR	1277758	ExpressionStatement	free ( dbName )	210:13:6411:6423	1277047	1	True				
ANR	1277759	CallExpression	free ( dbName )		1277047	0					
ANR	1277760	Callee	free		1277047	0					
ANR	1277761	Identifier	free		1277047	0					
ANR	1277762	ArgumentList	dbName		1277047	1					
ANR	1277763	Argument	dbName		1277047	0					
ANR	1277764	Identifier	dbName		1277047	0					
ANR	1277765	IfStatement	if ( queryPassword )		1277047	26					
ANR	1277766	Condition	queryPassword	211:5:6430:6442	1277047	0	True				
ANR	1277767	Identifier	queryPassword		1277047	0					
ANR	1277768	ExpressionStatement	free ( queryPassword )	211:20:6445:6464	1277047	1	True				
ANR	1277769	CallExpression	free ( queryPassword )		1277047	0					
ANR	1277770	Callee	free		1277047	0					
ANR	1277771	Identifier	free		1277047	0					
ANR	1277772	ArgumentList	queryPassword		1277047	1					
ANR	1277773	Argument	queryPassword		1277047	0					
ANR	1277774	Identifier	queryPassword		1277047	0					
ANR	1277775	IfStatement	if ( quillName )		1277047	27					
ANR	1277776	Condition	quillName	212:5:6471:6479	1277047	0	True				
ANR	1277777	Identifier	quillName		1277047	0					
ANR	1277778	ExpressionStatement	free ( quillName )	212:16:6482:6497	1277047	1	True				
ANR	1277779	CallExpression	free ( quillName )		1277047	0					
ANR	1277780	Callee	free		1277047	0					
ANR	1277781	Identifier	free		1277047	0					
ANR	1277782	ArgumentList	quillName		1277047	1					
ANR	1277783	Argument	quillName		1277047	0					
ANR	1277784	Identifier	quillName		1277047	0					
ANR	1277785	IfStatement	if ( dbconn )		1277047	28					
ANR	1277786	Condition	dbconn	213:5:6504:6509	1277047	0	True				
ANR	1277787	Identifier	dbconn		1277047	0					
ANR	1277788	ExpressionStatement	free ( dbconn )	213:13:6512:6524	1277047	1	True				
ANR	1277789	CallExpression	free ( dbconn )		1277047	0					
ANR	1277790	Callee	free		1277047	0					
ANR	1277791	Identifier	free		1277047	0					
ANR	1277792	ArgumentList	dbconn		1277047	1					
ANR	1277793	Argument	dbconn		1277047	0					
ANR	1277794	Identifier	dbconn		1277047	0					
ANR	1277795	ReturnStatement	return 0 ;	214:2:6528:6536	1277047	29	True				
ANR	1277796	PrimaryExpression	0		1277047	0					
ANR	1277797	ReturnType	int		1277047	1					
ANR	1277798	Identifier	main		1277047	2					
ANR	1277799	ParameterList	"int argc , char * argv [ ]"		1277047	3					
ANR	1277800	Parameter	int argc	76:5:2542:2549	1277047	0	True				
ANR	1277801	ParameterType	int		1277047	0					
ANR	1277802	Identifier	argc		1277047	1					
ANR	1277803	Parameter	char * argv [ ]	76:15:2552:2563	1277047	1	True				
ANR	1277804	ParameterType	char * [ ]		1277047	0					
ANR	1277805	Identifier	argv		1277047	1					
ANR	1277806	CFGEntryNode	ENTRY		1277047		True				
ANR	1277807	CFGExitNode	EXIT		1277047		True				
ANR	1277808	Symbol	readfromfile		1277047						
ANR	1277809	Symbol	& dbName		1277047						
ANR	1277810	Symbol	ATTR_NAME		1277047						
ANR	1277811	Symbol	dbName		1277047						
ANR	1277812	Symbol	tmp . Value		1277047						
ANR	1277813	Symbol	* argv		1277047						
ANR	1277814	Symbol	HISTORY_ALL_HOR		1277047						
ANR	1277815	Symbol	quillList . Next		1277047						
ANR	1277816	Symbol	dbconn		1277047						
ANR	1277817	Symbol	tmp		1277047						
ANR	1277818	Symbol	myDistro		1277047						
ANR	1277819	Symbol	ad -> LookupBool		1277047						
ANR	1277820	Symbol	longformat		1277047						
ANR	1277821	Symbol	* historySnapshot		1277047						
ANR	1277822	Symbol	ATTR_QUILL_DB_QUERY_PASSWORD		1277047						
ANR	1277823	Symbol	CollectorList :: create		1277047						
ANR	1277824	Symbol	* Collectors		1277047						
ANR	1277825	Symbol	strcmp		1277047						
ANR	1277826	Symbol	Collectors		1277047						
ANR	1277827	Symbol	quillList . MyLength		1277047						
ANR	1277828	Symbol	NULL		1277047						
ANR	1277829	Symbol	ad		1277047						
ANR	1277830	Symbol	dbIpAddr		1277047						
ANR	1277831	Symbol	TRUE		1277047						
ANR	1277832	Symbol	stderr		1277047						
ANR	1277833	Symbol	Q_OK		1277047						
ANR	1277834	Symbol	queryver		1277047						
ANR	1277835	Symbol	quillList		1277047						
ANR	1277836	Symbol	queryPassword		1277047						
ANR	1277837	Symbol	ATTR_QUILL_DB_NAME		1277047						
ANR	1277838	Symbol	checkDBconfig		1277047						
ANR	1277839	Symbol	true		1277047						
ANR	1277840	Symbol	parameters		1277047						
ANR	1277841	Symbol	ATTR_SCHEDD_NAME		1277047						
ANR	1277842	Symbol	NUM_PARAMETERS		1277047						
ANR	1277843	Symbol	flag		1277047						
ANR	1277844	Symbol	historySnapshot -> sendQuery		1277047						
ANR	1277845	Symbol	* ad		1277047						
ANR	1277846	Symbol	argv		1277047						
ANR	1277847	Symbol	remotequill		1277047						
ANR	1277848	Symbol	QUILL_FAILURE		1277047						
ANR	1277849	Symbol	result		1277047						
ANR	1277850	Symbol	getDBConnStr		1277047						
ANR	1277851	Symbol	HISTORY_ALL_VER		1277047						
ANR	1277852	Symbol	& queryhor		1277047						
ANR	1277853	Symbol	quillName		1277047						
ANR	1277854	Symbol	Collectors -> query		1277047						
ANR	1277855	Symbol	argc		1277047						
ANR	1277856	Symbol	ATTR_QUILL_IS_REMOTELY_QUERYABLE		1277047						
ANR	1277857	Symbol	ad -> LookupString		1277047						
ANR	1277858	Symbol	st		1277047						
ANR	1277859	Symbol	malloc		1277047						
ANR	1277860	Symbol	quillQuery		1277047						
ANR	1277861	Symbol	false		1277047						
ANR	1277862	Symbol	ATTR_QUILL_DB_IP_ADDR		1277047						
ANR	1277863	Symbol	i		1277047						
ANR	1277864	Symbol	get_daemon_name		1277047						
ANR	1277865	Symbol	get_host_part		1277047						
ANR	1277866	Symbol	* i		1277047						
ANR	1277867	Symbol	queryhor		1277047						
ANR	1277868	Symbol	& queryPassword		1277047						
ANR	1277869	Symbol	& dbIpAddr		1277047						
ANR	1277870	Symbol	historySnapshot		1277047						
ANR	1277871	Symbol	& queryver		1277047						
ANR	1277872	Symbol	historySnapshot -> isHistoryEmpty		1277047						
ANR	1277873	Function	checkDBconfig	222:0:6714:7161							
ANR	1277874	FunctionDef	checkDBconfig ()		1277873	0					
ANR	1277875	CompoundStatement		222:28:6742:7161	1277873	0					
ANR	1277876	IdentifierDeclStatement	char * tmp ;	223:1:6745:6754	1277873	0	True				
ANR	1277877	IdentifierDecl	* tmp		1277873	0					
ANR	1277878	IdentifierDeclType	char *		1277873	0					
ANR	1277879	Identifier	tmp		1277873	1					
ANR	1277880	IfStatement	"if ( param_boolean ( ""QUILL_ENABLED"" , false ) == false )"		1277873	1					
ANR	1277881	Condition	"param_boolean ( ""QUILL_ENABLED"" , false ) == false"	225:5:6762:6807	1277873	0	True				
ANR	1277882	EqualityExpression	"param_boolean ( ""QUILL_ENABLED"" , false ) == false"		1277873	0		==			
ANR	1277883	CallExpression	"param_boolean ( ""QUILL_ENABLED"" , false )"		1277873	0					
ANR	1277884	Callee	param_boolean		1277873	0					
ANR	1277885	Identifier	param_boolean		1277873	0					
ANR	1277886	ArgumentList	"""QUILL_ENABLED"""		1277873	1					
ANR	1277887	Argument	"""QUILL_ENABLED"""		1277873	0					
ANR	1277888	PrimaryExpression	"""QUILL_ENABLED"""		1277873	0					
ANR	1277889	Argument	false		1277873	1					
ANR	1277890	Identifier	false		1277873	0					
ANR	1277891	Identifier	false		1277873	1					
ANR	1277892	CompoundStatement		4:53:67:67	1277873	1					
ANR	1277893	ReturnStatement	return false ;	226:2:6814:6826	1277873	0	True				
ANR	1277894	Identifier	false		1277873	0					
ANR	1277895	ExpressionStatement		227:2:6830:6830	1277873	2	True				
ANR	1277896	ExpressionStatement	"tmp = param ( ""QUILL_NAME"" )"	229:1:6834:6859	1277873	3	True				
ANR	1277897	AssignmentExpression	"tmp = param ( ""QUILL_NAME"" )"		1277873	0		=			
ANR	1277898	Identifier	tmp		1277873	0					
ANR	1277899	CallExpression	"param ( ""QUILL_NAME"" )"		1277873	1					
ANR	1277900	Callee	param		1277873	0					
ANR	1277901	Identifier	param		1277873	0					
ANR	1277902	ArgumentList	"""QUILL_NAME"""		1277873	1					
ANR	1277903	Argument	"""QUILL_NAME"""		1277873	0					
ANR	1277904	PrimaryExpression	"""QUILL_NAME"""		1277873	0					
ANR	1277905	IfStatement	if ( ! tmp )		1277873	4					
ANR	1277906	Condition	! tmp	230:5:6866:6869	1277873	0	True				
ANR	1277907	UnaryOperationExpression	! tmp		1277873	0					
ANR	1277908	UnaryOperator	!		1277873	0					
ANR	1277909	Identifier	tmp		1277873	1					
ANR	1277910	CompoundStatement		9:11:129:129	1277873	1					
ANR	1277911	ReturnStatement	return false ;	231:2:6876:6888	1277873	0	True				
ANR	1277912	Identifier	false		1277873	0					
ANR	1277913	ExpressionStatement	free ( tmp )	233:1:6894:6903	1277873	5	True				
ANR	1277914	CallExpression	free ( tmp )		1277873	0					
ANR	1277915	Callee	free		1277873	0					
ANR	1277916	Identifier	free		1277873	0					
ANR	1277917	ArgumentList	tmp		1277873	1					
ANR	1277918	Argument	tmp		1277873	0					
ANR	1277919	Identifier	tmp		1277873	0					
ANR	1277920	ExpressionStatement	"tmp = param ( ""QUILL_DB_IP_ADDR"" )"	235:1:6907:6938	1277873	6	True				
ANR	1277921	AssignmentExpression	"tmp = param ( ""QUILL_DB_IP_ADDR"" )"		1277873	0		=			
ANR	1277922	Identifier	tmp		1277873	0					
ANR	1277923	CallExpression	"param ( ""QUILL_DB_IP_ADDR"" )"		1277873	1					
ANR	1277924	Callee	param		1277873	0					
ANR	1277925	Identifier	param		1277873	0					
ANR	1277926	ArgumentList	"""QUILL_DB_IP_ADDR"""		1277873	1					
ANR	1277927	Argument	"""QUILL_DB_IP_ADDR"""		1277873	0					
ANR	1277928	PrimaryExpression	"""QUILL_DB_IP_ADDR"""		1277873	0					
ANR	1277929	IfStatement	if ( ! tmp )		1277873	7					
ANR	1277930	Condition	! tmp	236:5:6945:6948	1277873	0	True				
ANR	1277931	UnaryOperationExpression	! tmp		1277873	0					
ANR	1277932	UnaryOperator	!		1277873	0					
ANR	1277933	Identifier	tmp		1277873	1					
ANR	1277934	CompoundStatement		15:11:208:208	1277873	1					
ANR	1277935	ReturnStatement	return false ;	237:2:6955:6967	1277873	0	True				
ANR	1277936	Identifier	false		1277873	0					
ANR	1277937	ExpressionStatement	free ( tmp )	239:1:6973:6982	1277873	8	True				
ANR	1277938	CallExpression	free ( tmp )		1277873	0					
ANR	1277939	Callee	free		1277873	0					
ANR	1277940	Identifier	free		1277873	0					
ANR	1277941	ArgumentList	tmp		1277873	1					
ANR	1277942	Argument	tmp		1277873	0					
ANR	1277943	Identifier	tmp		1277873	0					
ANR	1277944	ExpressionStatement	"tmp = param ( ""QUILL_DB_NAME"" )"	241:1:6986:7014	1277873	9	True				
ANR	1277945	AssignmentExpression	"tmp = param ( ""QUILL_DB_NAME"" )"		1277873	0		=			
ANR	1277946	Identifier	tmp		1277873	0					
ANR	1277947	CallExpression	"param ( ""QUILL_DB_NAME"" )"		1277873	1					
ANR	1277948	Callee	param		1277873	0					
ANR	1277949	Identifier	param		1277873	0					
ANR	1277950	ArgumentList	"""QUILL_DB_NAME"""		1277873	1					
ANR	1277951	Argument	"""QUILL_DB_NAME"""		1277873	0					
ANR	1277952	PrimaryExpression	"""QUILL_DB_NAME"""		1277873	0					
ANR	1277953	IfStatement	if ( ! tmp )		1277873	10					
ANR	1277954	Condition	! tmp	242:5:7021:7024	1277873	0	True				
ANR	1277955	UnaryOperationExpression	! tmp		1277873	0					
ANR	1277956	UnaryOperator	!		1277873	0					
ANR	1277957	Identifier	tmp		1277873	1					
ANR	1277958	CompoundStatement		21:11:284:284	1277873	1					
ANR	1277959	ReturnStatement	return false ;	243:2:7031:7043	1277873	0	True				
ANR	1277960	Identifier	false		1277873	0					
ANR	1277961	ExpressionStatement	free ( tmp )	245:1:7049:7058	1277873	11	True				
ANR	1277962	CallExpression	free ( tmp )		1277873	0					
ANR	1277963	Callee	free		1277873	0					
ANR	1277964	Identifier	free		1277873	0					
ANR	1277965	ArgumentList	tmp		1277873	1					
ANR	1277966	Argument	tmp		1277873	0					
ANR	1277967	Identifier	tmp		1277873	0					
ANR	1277968	ExpressionStatement	"tmp = param ( ""QUILL_DB_QUERY_PASSWORD"" )"	247:1:7062:7100	1277873	12	True				
ANR	1277969	AssignmentExpression	"tmp = param ( ""QUILL_DB_QUERY_PASSWORD"" )"		1277873	0		=			
ANR	1277970	Identifier	tmp		1277873	0					
ANR	1277971	CallExpression	"param ( ""QUILL_DB_QUERY_PASSWORD"" )"		1277873	1					
ANR	1277972	Callee	param		1277873	0					
ANR	1277973	Identifier	param		1277873	0					
ANR	1277974	ArgumentList	"""QUILL_DB_QUERY_PASSWORD"""		1277873	1					
ANR	1277975	Argument	"""QUILL_DB_QUERY_PASSWORD"""		1277873	0					
ANR	1277976	PrimaryExpression	"""QUILL_DB_QUERY_PASSWORD"""		1277873	0					
ANR	1277977	IfStatement	if ( ! tmp )		1277873	13					
ANR	1277978	Condition	! tmp	248:5:7107:7110	1277873	0	True				
ANR	1277979	UnaryOperationExpression	! tmp		1277873	0					
ANR	1277980	UnaryOperator	!		1277873	0					
ANR	1277981	Identifier	tmp		1277873	1					
ANR	1277982	CompoundStatement		27:11:370:370	1277873	1					
ANR	1277983	ReturnStatement	return false ;	249:2:7117:7129	1277873	0	True				
ANR	1277984	Identifier	false		1277873	0					
ANR	1277985	ExpressionStatement	free ( tmp )	251:1:7135:7144	1277873	14	True				
ANR	1277986	CallExpression	free ( tmp )		1277873	0					
ANR	1277987	Callee	free		1277873	0					
ANR	1277988	Identifier	free		1277873	0					
ANR	1277989	ArgumentList	tmp		1277873	1					
ANR	1277990	Argument	tmp		1277873	0					
ANR	1277991	Identifier	tmp		1277873	0					
ANR	1277992	ReturnStatement	return true ;	253:1:7148:7159	1277873	15	True				
ANR	1277993	Identifier	true		1277873	0					
ANR	1277994	ReturnType	static bool		1277873	1					
ANR	1277995	Identifier	checkDBconfig		1277873	2					
ANR	1277996	ParameterList			1277873	3					
ANR	1277997	CFGEntryNode	ENTRY		1277873		True				
ANR	1277998	CFGExitNode	EXIT		1277873		True				
ANR	1277999	Symbol	param		1277873						
ANR	1278000	Symbol	tmp		1277873						
ANR	1278001	Symbol	false		1277873						
ANR	1278002	Symbol	true		1277873						
ANR	1278003	Symbol	param_boolean		1277873						
ANR	1278004	Function	getDBConnStr	257:0:7165:9921							
ANR	1278005	FunctionDef	"getDBConnStr (char * & quillName , char * & databaseIp , char * & databaseName , char * & queryPassword)"		1278004	0					
ANR	1278006	CompoundStatement		260:31:7302:9921	1278004	0					
ANR	1278007	IdentifierDeclStatement	"char * host , * port , * dbconn , * ptr_colon ;"	261:2:7306:7355	1278004	0	True				
ANR	1278008	IdentifierDecl	* host		1278004	0					
ANR	1278009	IdentifierDeclType	char *		1278004	0					
ANR	1278010	Identifier	host		1278004	1					
ANR	1278011	IdentifierDecl	* port		1278004	1					
ANR	1278012	IdentifierDeclType	char *		1278004	0					
ANR	1278013	Identifier	port		1278004	1					
ANR	1278014	IdentifierDecl	* dbconn		1278004	2					
ANR	1278015	IdentifierDeclType	char *		1278004	0					
ANR	1278016	Identifier	dbconn		1278004	1					
ANR	1278017	IdentifierDecl	* ptr_colon		1278004	3					
ANR	1278018	IdentifierDeclType	char *		1278004	0					
ANR	1278019	Identifier	ptr_colon		1278004	1					
ANR	1278020	IdentifierDeclStatement	"char * tmpquillname , * tmpdatabaseip , * tmpdatabasename , * tmpquerypassword ;"	262:2:7359:7441	1278004	1	True				
ANR	1278021	IdentifierDecl	* tmpquillname		1278004	0					
ANR	1278022	IdentifierDeclType	char *		1278004	0					
ANR	1278023	Identifier	tmpquillname		1278004	1					
ANR	1278024	IdentifierDecl	* tmpdatabaseip		1278004	1					
ANR	1278025	IdentifierDeclType	char *		1278004	0					
ANR	1278026	Identifier	tmpdatabaseip		1278004	1					
ANR	1278027	IdentifierDecl	* tmpdatabasename		1278004	2					
ANR	1278028	IdentifierDeclType	char *		1278004	0					
ANR	1278029	Identifier	tmpdatabasename		1278004	1					
ANR	1278030	IdentifierDecl	* tmpquerypassword		1278004	3					
ANR	1278031	IdentifierDeclType	char *		1278004	0					
ANR	1278032	Identifier	tmpquerypassword		1278004	1					
ANR	1278033	IdentifierDeclStatement	"int len , tmp1 , tmp2 , tmp3 ;"	263:2:7445:7482	1278004	2	True				
ANR	1278034	IdentifierDecl	len		1278004	0					
ANR	1278035	IdentifierDeclType	int		1278004	0					
ANR	1278036	Identifier	len		1278004	1					
ANR	1278037	IdentifierDecl	tmp1		1278004	1					
ANR	1278038	IdentifierDeclType	int		1278004	0					
ANR	1278039	Identifier	tmp1		1278004	1					
ANR	1278040	IdentifierDecl	tmp2		1278004	2					
ANR	1278041	IdentifierDeclType	int		1278004	0					
ANR	1278042	Identifier	tmp2		1278004	1					
ANR	1278043	IdentifierDecl	tmp3		1278004	3					
ANR	1278044	IdentifierDeclType	int		1278004	0					
ANR	1278045	Identifier	tmp3		1278004	1					
ANR	1278046	IfStatement	"if ( ( ! quillName && ! ( tmpquillname = param ( ""QUILL_NAME"" ) ) ) || ( ! databaseIp && ! ( tmpdatabaseip = param ( ""QUILL_DB_IP_ADDR"" ) ) ) || ( ! databaseName && ! ( tmpdatabasename = param ( ""QUILL_DB_NAME"" ) ) ) || ( ! queryPassword && ! ( tmpquerypassword = param ( ""QUILL_DB_QUERY_PASSWORD"" ) ) ) )"		1278004	3					
ANR	1278047	Condition	"( ! quillName && ! ( tmpquillname = param ( ""QUILL_NAME"" ) ) ) || ( ! databaseIp && ! ( tmpdatabaseip = param ( ""QUILL_DB_IP_ADDR"" ) ) ) || ( ! databaseName && ! ( tmpdatabasename = param ( ""QUILL_DB_NAME"" ) ) ) || ( ! queryPassword && ! ( tmpquerypassword = param ( ""QUILL_DB_QUERY_PASSWORD"" ) ) )"	265:5:7490:7766	1278004	0	True				
ANR	1278048	OrExpression	"( ! quillName && ! ( tmpquillname = param ( ""QUILL_NAME"" ) ) ) || ( ! databaseIp && ! ( tmpdatabaseip = param ( ""QUILL_DB_IP_ADDR"" ) ) ) || ( ! databaseName && ! ( tmpdatabasename = param ( ""QUILL_DB_NAME"" ) ) ) || ( ! queryPassword && ! ( tmpquerypassword = param ( ""QUILL_DB_QUERY_PASSWORD"" ) ) )"		1278004	0		||			
ANR	1278049	AndExpression	"! quillName && ! ( tmpquillname = param ( ""QUILL_NAME"" ) )"		1278004	0		&&			
ANR	1278050	UnaryOperationExpression	! quillName		1278004	0					
ANR	1278051	UnaryOperator	!		1278004	0					
ANR	1278052	Identifier	quillName		1278004	1					
ANR	1278053	UnaryOperationExpression	"! ( tmpquillname = param ( ""QUILL_NAME"" ) )"		1278004	1					
ANR	1278054	UnaryOperator	!		1278004	0					
ANR	1278055	AssignmentExpression	"tmpquillname = param ( ""QUILL_NAME"" )"		1278004	1		=			
ANR	1278056	Identifier	tmpquillname		1278004	0					
ANR	1278057	CallExpression	"param ( ""QUILL_NAME"" )"		1278004	1					
ANR	1278058	Callee	param		1278004	0					
ANR	1278059	Identifier	param		1278004	0					
ANR	1278060	ArgumentList	"""QUILL_NAME"""		1278004	1					
ANR	1278061	Argument	"""QUILL_NAME"""		1278004	0					
ANR	1278062	PrimaryExpression	"""QUILL_NAME"""		1278004	0					
ANR	1278063	OrExpression	"( ! databaseIp && ! ( tmpdatabaseip = param ( ""QUILL_DB_IP_ADDR"" ) ) ) || ( ! databaseName && ! ( tmpdatabasename = param ( ""QUILL_DB_NAME"" ) ) ) || ( ! queryPassword && ! ( tmpquerypassword = param ( ""QUILL_DB_QUERY_PASSWORD"" ) ) )"		1278004	1		||			
ANR	1278064	AndExpression	"! databaseIp && ! ( tmpdatabaseip = param ( ""QUILL_DB_IP_ADDR"" ) )"		1278004	0		&&			
ANR	1278065	UnaryOperationExpression	! databaseIp		1278004	0					
ANR	1278066	UnaryOperator	!		1278004	0					
ANR	1278067	Identifier	databaseIp		1278004	1					
ANR	1278068	UnaryOperationExpression	"! ( tmpdatabaseip = param ( ""QUILL_DB_IP_ADDR"" ) )"		1278004	1					
ANR	1278069	UnaryOperator	!		1278004	0					
ANR	1278070	AssignmentExpression	"tmpdatabaseip = param ( ""QUILL_DB_IP_ADDR"" )"		1278004	1		=			
ANR	1278071	Identifier	tmpdatabaseip		1278004	0					
ANR	1278072	CallExpression	"param ( ""QUILL_DB_IP_ADDR"" )"		1278004	1					
ANR	1278073	Callee	param		1278004	0					
ANR	1278074	Identifier	param		1278004	0					
ANR	1278075	ArgumentList	"""QUILL_DB_IP_ADDR"""		1278004	1					
ANR	1278076	Argument	"""QUILL_DB_IP_ADDR"""		1278004	0					
ANR	1278077	PrimaryExpression	"""QUILL_DB_IP_ADDR"""		1278004	0					
ANR	1278078	OrExpression	"( ! databaseName && ! ( tmpdatabasename = param ( ""QUILL_DB_NAME"" ) ) ) || ( ! queryPassword && ! ( tmpquerypassword = param ( ""QUILL_DB_QUERY_PASSWORD"" ) ) )"		1278004	1		||			
ANR	1278079	AndExpression	"! databaseName && ! ( tmpdatabasename = param ( ""QUILL_DB_NAME"" ) )"		1278004	0		&&			
ANR	1278080	UnaryOperationExpression	! databaseName		1278004	0					
ANR	1278081	UnaryOperator	!		1278004	0					
ANR	1278082	Identifier	databaseName		1278004	1					
ANR	1278083	UnaryOperationExpression	"! ( tmpdatabasename = param ( ""QUILL_DB_NAME"" ) )"		1278004	1					
ANR	1278084	UnaryOperator	!		1278004	0					
ANR	1278085	AssignmentExpression	"tmpdatabasename = param ( ""QUILL_DB_NAME"" )"		1278004	1		=			
ANR	1278086	Identifier	tmpdatabasename		1278004	0					
ANR	1278087	CallExpression	"param ( ""QUILL_DB_NAME"" )"		1278004	1					
ANR	1278088	Callee	param		1278004	0					
ANR	1278089	Identifier	param		1278004	0					
ANR	1278090	ArgumentList	"""QUILL_DB_NAME"""		1278004	1					
ANR	1278091	Argument	"""QUILL_DB_NAME"""		1278004	0					
ANR	1278092	PrimaryExpression	"""QUILL_DB_NAME"""		1278004	0					
ANR	1278093	AndExpression	"! queryPassword && ! ( tmpquerypassword = param ( ""QUILL_DB_QUERY_PASSWORD"" ) )"		1278004	1		&&			
ANR	1278094	UnaryOperationExpression	! queryPassword		1278004	0					
ANR	1278095	UnaryOperator	!		1278004	0					
ANR	1278096	Identifier	queryPassword		1278004	1					
ANR	1278097	UnaryOperationExpression	"! ( tmpquerypassword = param ( ""QUILL_DB_QUERY_PASSWORD"" ) )"		1278004	1					
ANR	1278098	UnaryOperator	!		1278004	0					
ANR	1278099	AssignmentExpression	"tmpquerypassword = param ( ""QUILL_DB_QUERY_PASSWORD"" )"		1278004	1		=			
ANR	1278100	Identifier	tmpquerypassword		1278004	0					
ANR	1278101	CallExpression	"param ( ""QUILL_DB_QUERY_PASSWORD"" )"		1278004	1					
ANR	1278102	Callee	param		1278004	0					
ANR	1278103	Identifier	param		1278004	0					
ANR	1278104	ArgumentList	"""QUILL_DB_QUERY_PASSWORD"""		1278004	1					
ANR	1278105	Argument	"""QUILL_DB_QUERY_PASSWORD"""		1278004	0					
ANR	1278106	PrimaryExpression	"""QUILL_DB_QUERY_PASSWORD"""		1278004	0					
ANR	1278107	CompoundStatement		9:81:466:466	1278004	1					
ANR	1278108	ExpressionStatement	"fprintf ( stderr , ""Error: Could not find database related parameter\\n"" )"	269:4:7775:7845	1278004	0	True				
ANR	1278109	CallExpression	"fprintf ( stderr , ""Error: Could not find database related parameter\\n"" )"		1278004	0					
ANR	1278110	Callee	fprintf		1278004	0					
ANR	1278111	Identifier	fprintf		1278004	0					
ANR	1278112	ArgumentList	stderr		1278004	1					
ANR	1278113	Argument	stderr		1278004	0					
ANR	1278114	Identifier	stderr		1278004	0					
ANR	1278115	Argument	"""Error: Could not find database related parameter\\n"""		1278004	1					
ANR	1278116	PrimaryExpression	"""Error: Could not find database related parameter\\n"""		1278004	0					
ANR	1278117	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	270:4:7851:7872	1278004	1	True				
ANR	1278118	CallExpression	"fprintf ( stderr , ""\\n"" )"		1278004	0					
ANR	1278119	Callee	fprintf		1278004	0					
ANR	1278120	Identifier	fprintf		1278004	0					
ANR	1278121	ArgumentList	stderr		1278004	1					
ANR	1278122	Argument	stderr		1278004	0					
ANR	1278123	Identifier	stderr		1278004	0					
ANR	1278124	Argument	"""\\n"""		1278004	1					
ANR	1278125	PrimaryExpression	"""\\n"""		1278004	0					
ANR	1278126	Statement	print_wrapped_text	271:4:7878:7895	1278004	2	True				
ANR	1278127	Statement	(	271:22:7896:7896	1278004	3	True				
ANR	1278128	Statement	"""Extra Info: """	271:23:7897:7910	1278004	4	True				
ANR	1278129	Statement	"""The most likely cause for this error """	272:23:7936:7974	1278004	5	True				
ANR	1278130	Statement	"""is that you have not defined """	273:23:7999:8029	1278004	6	True				
ANR	1278131	Statement	"""QUILL_NAME/QUILL_DB_IP_ADDR/"""	274:8:8039:8068	1278004	7	True				
ANR	1278132	Statement	"""QUILL_DB_NAME/QUILL_DB_QUERY_PASSWORD """	275:8:8078:8117	1278004	8	True				
ANR	1278133	Statement	"""in the condor_config file.  You must """	276:23:8142:8180	1278004	9	True				
ANR	1278134	Statement	"""define this variable in the config file"""	277:23:8205:8245	1278004	10	True				
ANR	1278135	Statement	","	277:64:8246:8246	1278004	11	True				
ANR	1278136	Statement	stderr	277:66:8248:8253	1278004	12	True				
ANR	1278137	Statement	)	277:72:8254:8254	1278004	13	True				
ANR	1278138	ExpressionStatement		277:73:8255:8255	1278004	14	True				
ANR	1278139	ExpressionStatement	exit ( 1 )	279:4:8263:8272	1278004	15	True				
ANR	1278140	CallExpression	exit ( 1 )		1278004	0					
ANR	1278141	Callee	exit		1278004	0					
ANR	1278142	Identifier	exit		1278004	0					
ANR	1278143	ArgumentList	1		1278004	1					
ANR	1278144	Argument	1		1278004	0					
ANR	1278145	PrimaryExpression	1		1278004	0					
ANR	1278146	IfStatement	if ( ! quillName )		1278004	4					
ANR	1278147	Condition	! quillName	282:5:8290:8299	1278004	0	True				
ANR	1278148	UnaryOperationExpression	! quillName		1278004	0					
ANR	1278149	UnaryOperator	!		1278004	0					
ANR	1278150	Identifier	quillName		1278004	1					
ANR	1278151	CompoundStatement		23:17:999:999	1278004	1					
ANR	1278152	ExpressionStatement	quillName = tmpquillname	283:3:8307:8331	1278004	0	True				
ANR	1278153	AssignmentExpression	quillName = tmpquillname		1278004	0		=			
ANR	1278154	Identifier	quillName		1278004	0					
ANR	1278155	Identifier	tmpquillname		1278004	1					
ANR	1278156	IfStatement	if ( ! databaseIp )		1278004	5					
ANR	1278157	Condition	! databaseIp	285:5:8342:8352	1278004	0	True				
ANR	1278158	UnaryOperationExpression	! databaseIp		1278004	0					
ANR	1278159	UnaryOperator	!		1278004	0					
ANR	1278160	Identifier	databaseIp		1278004	1					
ANR	1278161	CompoundStatement		26:18:1052:1052	1278004	1					
ANR	1278162	IfStatement	if ( tmpdatabaseip [ 0 ] != '<' )		1278004	0					
ANR	1278163	Condition	tmpdatabaseip [ 0 ] != '<'	286:6:8363:8385	1278004	0	True				
ANR	1278164	EqualityExpression	tmpdatabaseip [ 0 ] != '<'		1278004	0		!=			
ANR	1278165	ArrayIndexing	tmpdatabaseip [ 0 ]		1278004	0					
ANR	1278166	Identifier	tmpdatabaseip		1278004	0					
ANR	1278167	PrimaryExpression	0		1278004	1					
ANR	1278168	PrimaryExpression	'<'		1278004	1					
ANR	1278169	CompoundStatement		27:31:1085:1085	1278004	1					
ANR	1278170	ExpressionStatement	databaseIp = ( char * ) malloc ( strlen ( tmpdatabaseip ) + 3 )	288:4:8454:8507	1278004	0	True				
ANR	1278171	AssignmentExpression	databaseIp = ( char * ) malloc ( strlen ( tmpdatabaseip ) + 3 )		1278004	0		=			
ANR	1278172	Identifier	databaseIp		1278004	0					
ANR	1278173	CastExpression	( char * ) malloc ( strlen ( tmpdatabaseip ) + 3 )		1278004	1					
ANR	1278174	CastTarget	char *		1278004	0					
ANR	1278175	CallExpression	malloc ( strlen ( tmpdatabaseip ) + 3 )		1278004	1					
ANR	1278176	Callee	malloc		1278004	0					
ANR	1278177	Identifier	malloc		1278004	0					
ANR	1278178	ArgumentList	strlen ( tmpdatabaseip ) + 3		1278004	1					
ANR	1278179	Argument	strlen ( tmpdatabaseip ) + 3		1278004	0					
ANR	1278180	AdditiveExpression	strlen ( tmpdatabaseip ) + 3		1278004	0		+			
ANR	1278181	CallExpression	strlen ( tmpdatabaseip )		1278004	0					
ANR	1278182	Callee	strlen		1278004	0					
ANR	1278183	Identifier	strlen		1278004	0					
ANR	1278184	ArgumentList	tmpdatabaseip		1278004	1					
ANR	1278185	Argument	tmpdatabaseip		1278004	0					
ANR	1278186	Identifier	tmpdatabaseip		1278004	0					
ANR	1278187	PrimaryExpression	3		1278004	1					
ANR	1278188	ExpressionStatement	"sprintf ( databaseIp , ""<%s>"" , tmpdatabaseip )"	289:4:8513:8555	1278004	1	True				
ANR	1278189	CallExpression	"sprintf ( databaseIp , ""<%s>"" , tmpdatabaseip )"		1278004	0					
ANR	1278190	Callee	sprintf		1278004	0					
ANR	1278191	Identifier	sprintf		1278004	0					
ANR	1278192	ArgumentList	databaseIp		1278004	1					
ANR	1278193	Argument	databaseIp		1278004	0					
ANR	1278194	Identifier	databaseIp		1278004	0					
ANR	1278195	Argument	"""<%s>"""		1278004	1					
ANR	1278196	PrimaryExpression	"""<%s>"""		1278004	0					
ANR	1278197	Argument	tmpdatabaseip		1278004	2					
ANR	1278198	Identifier	tmpdatabaseip		1278004	0					
ANR	1278199	ExpressionStatement	free ( tmpdatabaseip )	290:4:8561:8580	1278004	2	True				
ANR	1278200	CallExpression	free ( tmpdatabaseip )		1278004	0					
ANR	1278201	Callee	free		1278004	0					
ANR	1278202	Identifier	free		1278004	0					
ANR	1278203	ArgumentList	tmpdatabaseip		1278004	1					
ANR	1278204	Argument	tmpdatabaseip		1278004	0					
ANR	1278205	Identifier	tmpdatabaseip		1278004	0					
ANR	1278206	ElseStatement	else		1278004	0					
ANR	1278207	CompoundStatement		33:8:1292:1292	1278004	0					
ANR	1278208	ExpressionStatement	databaseIp = tmpdatabaseip	293:4:8601:8627	1278004	0	True				
ANR	1278209	AssignmentExpression	databaseIp = tmpdatabaseip		1278004	0		=			
ANR	1278210	Identifier	databaseIp		1278004	0					
ANR	1278211	Identifier	tmpdatabaseip		1278004	1					
ANR	1278212	IfStatement	if ( ! databaseName )		1278004	6					
ANR	1278213	Condition	! databaseName	296:5:8643:8655	1278004	0	True				
ANR	1278214	UnaryOperationExpression	! databaseName		1278004	0					
ANR	1278215	UnaryOperator	!		1278004	0					
ANR	1278216	Identifier	databaseName		1278004	1					
ANR	1278217	CompoundStatement		37:20:1355:1355	1278004	1					
ANR	1278218	ExpressionStatement	databaseName = tmpdatabasename	297:3:8663:8693	1278004	0	True				
ANR	1278219	AssignmentExpression	databaseName = tmpdatabasename		1278004	0		=			
ANR	1278220	Identifier	databaseName		1278004	0					
ANR	1278221	Identifier	tmpdatabasename		1278004	1					
ANR	1278222	IfStatement	if ( ! queryPassword )		1278004	7					
ANR	1278223	Condition	! queryPassword	299:5:8704:8717	1278004	0	True				
ANR	1278224	UnaryOperationExpression	! queryPassword		1278004	0					
ANR	1278225	UnaryOperator	!		1278004	0					
ANR	1278226	Identifier	queryPassword		1278004	1					
ANR	1278227	CompoundStatement		40:21:1417:1417	1278004	1					
ANR	1278228	ExpressionStatement	queryPassword = tmpquerypassword	300:3:8725:8757	1278004	0	True				
ANR	1278229	AssignmentExpression	queryPassword = tmpquerypassword		1278004	0		=			
ANR	1278230	Identifier	queryPassword		1278004	0					
ANR	1278231	Identifier	tmpquerypassword		1278004	1					
ANR	1278232	ExpressionStatement	tmp1 = strlen ( databaseName )	303:2:8768:8795	1278004	8	True				
ANR	1278233	AssignmentExpression	tmp1 = strlen ( databaseName )		1278004	0		=			
ANR	1278234	Identifier	tmp1		1278004	0					
ANR	1278235	CallExpression	strlen ( databaseName )		1278004	1					
ANR	1278236	Callee	strlen		1278004	0					
ANR	1278237	Identifier	strlen		1278004	0					
ANR	1278238	ArgumentList	databaseName		1278004	1					
ANR	1278239	Argument	databaseName		1278004	0					
ANR	1278240	Identifier	databaseName		1278004	0					
ANR	1278241	ExpressionStatement	tmp2 = strlen ( queryPassword )	304:2:8799:8827	1278004	9	True				
ANR	1278242	AssignmentExpression	tmp2 = strlen ( queryPassword )		1278004	0		=			
ANR	1278243	Identifier	tmp2		1278004	0					
ANR	1278244	CallExpression	strlen ( queryPassword )		1278004	1					
ANR	1278245	Callee	strlen		1278004	0					
ANR	1278246	Identifier	strlen		1278004	0					
ANR	1278247	ArgumentList	queryPassword		1278004	1					
ANR	1278248	Argument	queryPassword		1278004	0					
ANR	1278249	Identifier	queryPassword		1278004	0					
ANR	1278250	ExpressionStatement	len = strlen ( databaseIp )	305:2:8831:8855	1278004	10	True				
ANR	1278251	AssignmentExpression	len = strlen ( databaseIp )		1278004	0		=			
ANR	1278252	Identifier	len		1278004	0					
ANR	1278253	CallExpression	strlen ( databaseIp )		1278004	1					
ANR	1278254	Callee	strlen		1278004	0					
ANR	1278255	Identifier	strlen		1278004	0					
ANR	1278256	ArgumentList	databaseIp		1278004	1					
ANR	1278257	Argument	databaseIp		1278004	0					
ANR	1278258	Identifier	databaseIp		1278004	0					
ANR	1278259	ExpressionStatement	host = ( char * ) malloc ( ( len + 6 ) * sizeof ( char ) )	310:2:9000:9046	1278004	11	True				
ANR	1278260	AssignmentExpression	host = ( char * ) malloc ( ( len + 6 ) * sizeof ( char ) )		1278004	0		=			
ANR	1278261	Identifier	host		1278004	0					
ANR	1278262	CastExpression	( char * ) malloc ( ( len + 6 ) * sizeof ( char ) )		1278004	1					
ANR	1278263	CastTarget	char *		1278004	0					
ANR	1278264	CallExpression	malloc ( ( len + 6 ) * sizeof ( char ) )		1278004	1					
ANR	1278265	Callee	malloc		1278004	0					
ANR	1278266	Identifier	malloc		1278004	0					
ANR	1278267	ArgumentList	( len + 6 ) * sizeof ( char )		1278004	1					
ANR	1278268	Argument	( len + 6 ) * sizeof ( char )		1278004	0					
ANR	1278269	MultiplicativeExpression	( len + 6 ) * sizeof ( char )		1278004	0		*			
ANR	1278270	AdditiveExpression	len + 6		1278004	0		+			
ANR	1278271	Identifier	len		1278004	0					
ANR	1278272	PrimaryExpression	6		1278004	1					
ANR	1278273	SizeofExpression	sizeof ( char )		1278004	1					
ANR	1278274	Sizeof	sizeof		1278004	0					
ANR	1278275	SizeofOperand	char		1278004	1					
ANR	1278276	ExpressionStatement	port = ( char * ) malloc ( ( len + 6 ) * sizeof ( char ) )	311:2:9050:9096	1278004	12	True				
ANR	1278277	AssignmentExpression	port = ( char * ) malloc ( ( len + 6 ) * sizeof ( char ) )		1278004	0		=			
ANR	1278278	Identifier	port		1278004	0					
ANR	1278279	CastExpression	( char * ) malloc ( ( len + 6 ) * sizeof ( char ) )		1278004	1					
ANR	1278280	CastTarget	char *		1278004	0					
ANR	1278281	CallExpression	malloc ( ( len + 6 ) * sizeof ( char ) )		1278004	1					
ANR	1278282	Callee	malloc		1278004	0					
ANR	1278283	Identifier	malloc		1278004	0					
ANR	1278284	ArgumentList	( len + 6 ) * sizeof ( char )		1278004	1					
ANR	1278285	Argument	( len + 6 ) * sizeof ( char )		1278004	0					
ANR	1278286	MultiplicativeExpression	( len + 6 ) * sizeof ( char )		1278004	0		*			
ANR	1278287	AdditiveExpression	len + 6		1278004	0		+			
ANR	1278288	Identifier	len		1278004	0					
ANR	1278289	PrimaryExpression	6		1278004	1					
ANR	1278290	SizeofExpression	sizeof ( char )		1278004	1					
ANR	1278291	Sizeof	sizeof		1278004	0					
ANR	1278292	SizeofOperand	char		1278004	1					
ANR	1278293	ExpressionStatement	"ptr_colon = strchr ( databaseIp , ':' )"	315:2:9233:9268	1278004	13	True				
ANR	1278294	AssignmentExpression	"ptr_colon = strchr ( databaseIp , ':' )"		1278004	0		=			
ANR	1278295	Identifier	ptr_colon		1278004	0					
ANR	1278296	CallExpression	"strchr ( databaseIp , ':' )"		1278004	1					
ANR	1278297	Callee	strchr		1278004	0					
ANR	1278298	Identifier	strchr		1278004	0					
ANR	1278299	ArgumentList	databaseIp		1278004	1					
ANR	1278300	Argument	databaseIp		1278004	0					
ANR	1278301	Identifier	databaseIp		1278004	0					
ANR	1278302	Argument	':'		1278004	1					
ANR	1278303	PrimaryExpression	':'		1278004	0					
ANR	1278304	ExpressionStatement	"strcpy ( host , ""host= "" )"	316:2:9272:9294	1278004	14	True				
ANR	1278305	CallExpression	"strcpy ( host , ""host= "" )"		1278004	0					
ANR	1278306	Callee	strcpy		1278004	0					
ANR	1278307	Identifier	strcpy		1278004	0					
ANR	1278308	ArgumentList	host		1278004	1					
ANR	1278309	Argument	host		1278004	0					
ANR	1278310	Identifier	host		1278004	0					
ANR	1278311	Argument	"""host= """		1278004	1					
ANR	1278312	PrimaryExpression	"""host= """		1278004	0					
ANR	1278313	ExpressionStatement	"strncat ( host , databaseIp + 1 , ptr_colon - databaseIp - 1 )"	317:2:9298:9371	1278004	15	True				
ANR	1278314	CallExpression	"strncat ( host , databaseIp + 1 , ptr_colon - databaseIp - 1 )"		1278004	0					
ANR	1278315	Callee	strncat		1278004	0					
ANR	1278316	Identifier	strncat		1278004	0					
ANR	1278317	ArgumentList	host		1278004	1					
ANR	1278318	Argument	host		1278004	0					
ANR	1278319	Identifier	host		1278004	0					
ANR	1278320	Argument	databaseIp + 1		1278004	1					
ANR	1278321	AdditiveExpression	databaseIp + 1		1278004	0		+			
ANR	1278322	Identifier	databaseIp		1278004	0					
ANR	1278323	PrimaryExpression	1		1278004	1					
ANR	1278324	Argument	ptr_colon - databaseIp - 1		1278004	2					
ANR	1278325	AdditiveExpression	ptr_colon - databaseIp - 1		1278004	0		-			
ANR	1278326	Identifier	ptr_colon		1278004	0					
ANR	1278327	AdditiveExpression	databaseIp - 1		1278004	1		-			
ANR	1278328	Identifier	databaseIp		1278004	0					
ANR	1278329	PrimaryExpression	1		1278004	1					
ANR	1278330	ExpressionStatement	"strcpy ( port , ""port= "" )"	320:2:9375:9397	1278004	16	True				
ANR	1278331	CallExpression	"strcpy ( port , ""port= "" )"		1278004	0					
ANR	1278332	Callee	strcpy		1278004	0					
ANR	1278333	Identifier	strcpy		1278004	0					
ANR	1278334	ArgumentList	port		1278004	1					
ANR	1278335	Argument	port		1278004	0					
ANR	1278336	Identifier	port		1278004	0					
ANR	1278337	Argument	"""port= """		1278004	1					
ANR	1278338	PrimaryExpression	"""port= """		1278004	0					
ANR	1278339	ExpressionStatement	"strcat ( port , ptr_colon + 1 )"	321:2:9401:9426	1278004	17	True				
ANR	1278340	CallExpression	"strcat ( port , ptr_colon + 1 )"		1278004	0					
ANR	1278341	Callee	strcat		1278004	0					
ANR	1278342	Identifier	strcat		1278004	0					
ANR	1278343	ArgumentList	port		1278004	1					
ANR	1278344	Argument	port		1278004	0					
ANR	1278345	Identifier	port		1278004	0					
ANR	1278346	Argument	ptr_colon + 1		1278004	1					
ANR	1278347	AdditiveExpression	ptr_colon + 1		1278004	0		+			
ANR	1278348	Identifier	ptr_colon		1278004	0					
ANR	1278349	PrimaryExpression	1		1278004	1					
ANR	1278350	ExpressionStatement	port [ strlen ( port ) - 1 ] = '\\0'	322:2:9430:9457	1278004	18	True				
ANR	1278351	AssignmentExpression	port [ strlen ( port ) - 1 ] = '\\0'		1278004	0		=			
ANR	1278352	ArrayIndexing	port [ strlen ( port ) - 1 ]		1278004	0					
ANR	1278353	Identifier	port		1278004	0					
ANR	1278354	AdditiveExpression	strlen ( port ) - 1		1278004	1		-			
ANR	1278355	CallExpression	strlen ( port )		1278004	0					
ANR	1278356	Callee	strlen		1278004	0					
ANR	1278357	Identifier	strlen		1278004	0					
ANR	1278358	ArgumentList	port		1278004	1					
ANR	1278359	Argument	port		1278004	0					
ANR	1278360	Identifier	port		1278004	0					
ANR	1278361	PrimaryExpression	1		1278004	1					
ANR	1278362	PrimaryExpression	'\\0'		1278004	1					
ANR	1278363	ExpressionStatement	tmp3 = ( 2 * len ) + tmp1 + tmp2 + 1024	328:2:9674:9711	1278004	19	True				
ANR	1278364	AssignmentExpression	tmp3 = ( 2 * len ) + tmp1 + tmp2 + 1024		1278004	0		=			
ANR	1278365	Identifier	tmp3		1278004	0					
ANR	1278366	AdditiveExpression	( 2 * len ) + tmp1 + tmp2 + 1024		1278004	1		+			
ANR	1278367	MultiplicativeExpression	2 * len		1278004	0		*			
ANR	1278368	PrimaryExpression	2		1278004	0					
ANR	1278369	Identifier	len		1278004	1					
ANR	1278370	AdditiveExpression	tmp1 + tmp2 + 1024		1278004	1		+			
ANR	1278371	Identifier	tmp1		1278004	0					
ANR	1278372	AdditiveExpression	tmp2 + 1024		1278004	1		+			
ANR	1278373	Identifier	tmp2		1278004	0					
ANR	1278374	PrimaryExpression	1024		1278004	1					
ANR	1278375	ExpressionStatement	dbconn = ( char * ) malloc ( tmp3 * sizeof ( char ) )	329:2:9715:9760	1278004	20	True				
ANR	1278376	AssignmentExpression	dbconn = ( char * ) malloc ( tmp3 * sizeof ( char ) )		1278004	0		=			
ANR	1278377	Identifier	dbconn		1278004	0					
ANR	1278378	CastExpression	( char * ) malloc ( tmp3 * sizeof ( char ) )		1278004	1					
ANR	1278379	CastTarget	char *		1278004	0					
ANR	1278380	CallExpression	malloc ( tmp3 * sizeof ( char ) )		1278004	1					
ANR	1278381	Callee	malloc		1278004	0					
ANR	1278382	Identifier	malloc		1278004	0					
ANR	1278383	ArgumentList	tmp3 * sizeof ( char )		1278004	1					
ANR	1278384	Argument	tmp3 * sizeof ( char )		1278004	0					
ANR	1278385	MultiplicativeExpression	tmp3 * sizeof ( char )		1278004	0		*			
ANR	1278386	Identifier	tmp3		1278004	0					
ANR	1278387	SizeofExpression	sizeof ( char )		1278004	1					
ANR	1278388	Sizeof	sizeof		1278004	0					
ANR	1278389	SizeofOperand	char		1278004	1					
ANR	1278390	ExpressionStatement	"sprintf ( dbconn , ""%s %s user=quillreader password=%s dbname=%s"" , host , port , queryPassword , databaseName )"	330:2:9764:9873	1278004	21	True				
ANR	1278391	CallExpression	"sprintf ( dbconn , ""%s %s user=quillreader password=%s dbname=%s"" , host , port , queryPassword , databaseName )"		1278004	0					
ANR	1278392	Callee	sprintf		1278004	0					
ANR	1278393	Identifier	sprintf		1278004	0					
ANR	1278394	ArgumentList	dbconn		1278004	1					
ANR	1278395	Argument	dbconn		1278004	0					
ANR	1278396	Identifier	dbconn		1278004	0					
ANR	1278397	Argument	"""%s %s user=quillreader password=%s dbname=%s"""		1278004	1					
ANR	1278398	PrimaryExpression	"""%s %s user=quillreader password=%s dbname=%s"""		1278004	0					
ANR	1278399	Argument	host		1278004	2					
ANR	1278400	Identifier	host		1278004	0					
ANR	1278401	Argument	port		1278004	3					
ANR	1278402	Identifier	port		1278004	0					
ANR	1278403	Argument	queryPassword		1278004	4					
ANR	1278404	Identifier	queryPassword		1278004	0					
ANR	1278405	Argument	databaseName		1278004	5					
ANR	1278406	Identifier	databaseName		1278004	0					
ANR	1278407	ExpressionStatement	free ( host )	333:2:9878:9888	1278004	22	True				
ANR	1278408	CallExpression	free ( host )		1278004	0					
ANR	1278409	Callee	free		1278004	0					
ANR	1278410	Identifier	free		1278004	0					
ANR	1278411	ArgumentList	host		1278004	1					
ANR	1278412	Argument	host		1278004	0					
ANR	1278413	Identifier	host		1278004	0					
ANR	1278414	ExpressionStatement	free ( port )	334:2:9892:9902	1278004	23	True				
ANR	1278415	CallExpression	free ( port )		1278004	0					
ANR	1278416	Callee	free		1278004	0					
ANR	1278417	Identifier	free		1278004	0					
ANR	1278418	ArgumentList	port		1278004	1					
ANR	1278419	Argument	port		1278004	0					
ANR	1278420	Identifier	port		1278004	0					
ANR	1278421	ReturnStatement	return dbconn ;	335:2:9906:9919	1278004	24	True				
ANR	1278422	Identifier	dbconn		1278004	0					
ANR	1278423	ReturnType	static char *		1278004	1					
ANR	1278424	Identifier	getDBConnStr		1278004	2					
ANR	1278425	ParameterList	"char * & quillName , char * & databaseIp , char * & databaseName , char * & queryPassword"		1278004	3					
ANR	1278426	Parameter	char * & quillName	257:27:7192:7207	1278004	0	True				
ANR	1278427	ParameterType	char * &		1278004	0					
ANR	1278428	Identifier	quillName		1278004	1					
ANR	1278429	Parameter	char * & databaseIp	258:9:7220:7236	1278004	1	True				
ANR	1278430	ParameterType	char * &		1278004	0					
ANR	1278431	Identifier	databaseIp		1278004	1					
ANR	1278432	Parameter	char * & databaseName	259:9:7249:7267	1278004	2	True				
ANR	1278433	ParameterType	char * &		1278004	0					
ANR	1278434	Identifier	databaseName		1278004	1					
ANR	1278435	Parameter	char * & queryPassword	260:9:7280:7299	1278004	3	True				
ANR	1278436	ParameterType	char * &		1278004	0					
ANR	1278437	Identifier	queryPassword		1278004	1					
ANR	1278438	CFGEntryNode	ENTRY		1278004		True				
ANR	1278439	CFGExitNode	EXIT		1278004		True				
ANR	1278440	Symbol	malloc		1278004						
ANR	1278441	Symbol	tmpdatabasename		1278004						
ANR	1278442	Symbol	tmpdatabaseip		1278004						
ANR	1278443	Symbol	databaseName		1278004						
ANR	1278444	Symbol	tmpquillname		1278004						
ANR	1278445	Symbol	databaseIp		1278004						
ANR	1278446	Symbol	tmpquerypassword		1278004						
ANR	1278447	Symbol	strchr		1278004						
ANR	1278448	Symbol	tmp3		1278004						
ANR	1278449	Symbol	ptr_colon		1278004						
ANR	1278450	Symbol	tmp1		1278004						
ANR	1278451	Symbol	stderr		1278004						
ANR	1278452	Symbol	tmp2		1278004						
ANR	1278453	Symbol	* tmpdatabaseip		1278004						
ANR	1278454	Symbol	strlen		1278004						
ANR	1278455	Symbol	queryPassword		1278004						
ANR	1278456	Symbol	dbconn		1278004						
ANR	1278457	Symbol	len		1278004						
ANR	1278458	Symbol	* port		1278004						
ANR	1278459	Symbol	* strlen		1278004						
ANR	1278460	Symbol	port		1278004						
ANR	1278461	Symbol	param		1278004						
ANR	1278462	Symbol	host		1278004						
ANR	1278463	Symbol	quillName		1278004						
ANR	1278464	Function	readHistoryFromFiles	341:0:10070:11473							
ANR	1278465	FunctionDef	"readHistoryFromFiles (char * JobHistoryFileName , char * constraint , ExprTree * constraintExpr)"		1278464	0					
ANR	1278466	CompoundStatement		342:0:10173:11473	1278464	0					
ANR	1278467	IfStatement	if ( ( ! longformat ) && ( ! customFormat ) )		1278464	0					
ANR	1278468	Condition	( ! longformat ) && ( ! customFormat )	344:8:10203:10234	1278464	0	True				
ANR	1278469	AndExpression	( ! longformat ) && ( ! customFormat )		1278464	0		&&			
ANR	1278470	UnaryOperationExpression	! longformat		1278464	0					
ANR	1278471	UnaryOperator	!		1278464	0					
ANR	1278472	Identifier	longformat		1278464	1					
ANR	1278473	UnaryOperationExpression	! customFormat		1278464	1					
ANR	1278474	UnaryOperator	!		1278464	0					
ANR	1278475	Identifier	customFormat		1278464	1					
ANR	1278476	CompoundStatement		3:42:63:63	1278464	1					
ANR	1278477	ExpressionStatement	short_header ( )	345:8:10247:10261	1278464	0	True				
ANR	1278478	CallExpression	short_header ( )		1278464	0					
ANR	1278479	Callee	short_header		1278464	0					
ANR	1278480	Identifier	short_header		1278464	0					
ANR	1278481	ArgumentList			1278464	1					
ANR	1278482	IfStatement	if ( JobHistoryFileName )		1278464	1					
ANR	1278483	Condition	JobHistoryFileName	348:8:10278:10295	1278464	0	True				
ANR	1278484	Identifier	JobHistoryFileName		1278464	0					
ANR	1278485	CompoundStatement		7:28:124:124	1278464	1					
ANR	1278486	ExpressionStatement	"readHistoryFromFile ( JobHistoryFileName , constraint , constraintExpr )"	350:8:10395:10462	1278464	0	True				
ANR	1278487	CallExpression	"readHistoryFromFile ( JobHistoryFileName , constraint , constraintExpr )"		1278464	0					
ANR	1278488	Callee	readHistoryFromFile		1278464	0					
ANR	1278489	Identifier	readHistoryFromFile		1278464	0					
ANR	1278490	ArgumentList	JobHistoryFileName		1278464	1					
ANR	1278491	Argument	JobHistoryFileName		1278464	0					
ANR	1278492	Identifier	JobHistoryFileName		1278464	0					
ANR	1278493	Argument	constraint		1278464	1					
ANR	1278494	Identifier	constraint		1278464	0					
ANR	1278495	Argument	constraintExpr		1278464	2					
ANR	1278496	Identifier	constraintExpr		1278464	0					
ANR	1278497	ElseStatement	else		1278464	0					
ANR	1278498	CompoundStatement		14:8:482:501	1278464	0					
ANR	1278499	IdentifierDeclStatement	int numHistoryFiles ;	354:8:10627:10646	1278464	0	True				
ANR	1278500	IdentifierDecl	numHistoryFiles		1278464	0					
ANR	1278501	IdentifierDeclType	int		1278464	0					
ANR	1278502	Identifier	numHistoryFiles		1278464	1					
ANR	1278503	IdentifierDeclStatement	char * * historyFiles ;	355:8:10656:10675	1278464	1	True				
ANR	1278504	IdentifierDecl	* * historyFiles		1278464	0					
ANR	1278505	IdentifierDeclType	char * *		1278464	0					
ANR	1278506	Identifier	historyFiles		1278464	1					
ANR	1278507	ExpressionStatement	historyFiles = findHistoryFiles ( & numHistoryFiles )	357:8:10686:10735	1278464	2	True				
ANR	1278508	AssignmentExpression	historyFiles = findHistoryFiles ( & numHistoryFiles )		1278464	0		=			
ANR	1278509	Identifier	historyFiles		1278464	0					
ANR	1278510	CallExpression	findHistoryFiles ( & numHistoryFiles )		1278464	1					
ANR	1278511	Callee	findHistoryFiles		1278464	0					
ANR	1278512	Identifier	findHistoryFiles		1278464	0					
ANR	1278513	ArgumentList	& numHistoryFiles		1278464	1					
ANR	1278514	Argument	& numHistoryFiles		1278464	0					
ANR	1278515	UnaryOperationExpression	& numHistoryFiles		1278464	0					
ANR	1278516	UnaryOperator	&		1278464	0					
ANR	1278517	Identifier	numHistoryFiles		1278464	1					
ANR	1278518	IfStatement	if ( historyFiles && numHistoryFiles > 0 )		1278464	3					
ANR	1278519	Condition	historyFiles && numHistoryFiles > 0	358:12:10749:10783	1278464	0	True				
ANR	1278520	AndExpression	historyFiles && numHistoryFiles > 0		1278464	0		&&			
ANR	1278521	Identifier	historyFiles		1278464	0					
ANR	1278522	RelationalExpression	numHistoryFiles > 0		1278464	1		>			
ANR	1278523	Identifier	numHistoryFiles		1278464	0					
ANR	1278524	PrimaryExpression	0		1278464	1					
ANR	1278525	CompoundStatement		18:12:626:639	1278464	1					
ANR	1278526	IdentifierDeclStatement	int fileIndex ;	359:12:10800:10813	1278464	0	True				
ANR	1278527	IdentifierDecl	fileIndex		1278464	0					
ANR	1278528	IdentifierDeclType	int		1278464	0					
ANR	1278529	Identifier	fileIndex		1278464	1					
ANR	1278530	IfStatement	if ( backwards )		1278464	1					
ANR	1278531	Condition	backwards	360:16:10831:10839	1278464	0	True				
ANR	1278532	Identifier	backwards		1278464	0					
ANR	1278533	CompoundStatement		19:27:668:668	1278464	1					
ANR	1278534	ForStatement	for ( fileIndex = numHistoryFiles - 1 ; fileIndex >= 0 ; fileIndex -- )		1278464	0					
ANR	1278535	ForInit	fileIndex = numHistoryFiles - 1 ;	361:20:10906:10937	1278464	0	True				
ANR	1278536	AssignmentExpression	fileIndex = numHistoryFiles - 1		1278464	0		=			
ANR	1278537	Identifier	fileIndex		1278464	0					
ANR	1278538	AdditiveExpression	numHistoryFiles - 1		1278464	1		-			
ANR	1278539	Identifier	numHistoryFiles		1278464	0					
ANR	1278540	PrimaryExpression	1		1278464	1					
ANR	1278541	Condition	fileIndex >= 0	361:53:10939:10952	1278464	1	True				
ANR	1278542	RelationalExpression	fileIndex >= 0		1278464	0		>=			
ANR	1278543	Identifier	fileIndex		1278464	0					
ANR	1278544	PrimaryExpression	0		1278464	1					
ANR	1278545	PostIncDecOperationExpression	fileIndex --	361:69:10955:10965	1278464	2	True				
ANR	1278546	Identifier	fileIndex		1278464	0					
ANR	1278547	IncDec	--		1278464	1					
ANR	1278548	CompoundStatement		20:82:794:794	1278464	3					
ANR	1278549	ExpressionStatement	"readHistoryFromFile ( historyFiles [ fileIndex ] , constraint , constraintExpr )"	362:20:10990:11062	1278464	0	True				
ANR	1278550	CallExpression	"readHistoryFromFile ( historyFiles [ fileIndex ] , constraint , constraintExpr )"		1278464	0					
ANR	1278551	Callee	readHistoryFromFile		1278464	0					
ANR	1278552	Identifier	readHistoryFromFile		1278464	0					
ANR	1278553	ArgumentList	historyFiles [ fileIndex ]		1278464	1					
ANR	1278554	Argument	historyFiles [ fileIndex ]		1278464	0					
ANR	1278555	ArrayIndexing	historyFiles [ fileIndex ]		1278464	0					
ANR	1278556	Identifier	historyFiles		1278464	0					
ANR	1278557	Identifier	fileIndex		1278464	1					
ANR	1278558	Argument	constraint		1278464	1					
ANR	1278559	Identifier	constraint		1278464	0					
ANR	1278560	Argument	constraintExpr		1278464	2					
ANR	1278561	Identifier	constraintExpr		1278464	0					
ANR	1278562	ExpressionStatement	free ( historyFiles [ fileIndex ] )	363:20:11084:11113	1278464	1	True				
ANR	1278563	CallExpression	free ( historyFiles [ fileIndex ] )		1278464	0					
ANR	1278564	Callee	free		1278464	0					
ANR	1278565	Identifier	free		1278464	0					
ANR	1278566	ArgumentList	historyFiles [ fileIndex ]		1278464	1					
ANR	1278567	Argument	historyFiles [ fileIndex ]		1278464	0					
ANR	1278568	ArrayIndexing	historyFiles [ fileIndex ]		1278464	0					
ANR	1278569	Identifier	historyFiles		1278464	0					
ANR	1278570	Identifier	fileIndex		1278464	1					
ANR	1278571	ElseStatement	else		1278464	0					
ANR	1278572	CompoundStatement		25:17:990:990	1278464	0					
ANR	1278573	ForStatement	for ( fileIndex = 0 ; fileIndex < numHistoryFiles ; fileIndex ++ )		1278464	0					
ANR	1278574	ForInit	fileIndex = 0 ;	367:21:11187:11200	1278464	0	True				
ANR	1278575	AssignmentExpression	fileIndex = 0		1278464	0		=			
ANR	1278576	Identifier	fileIndex		1278464	0					
ANR	1278577	PrimaryExpression	0		1278464	1					
ANR	1278578	Condition	fileIndex < numHistoryFiles	367:36:11202:11228	1278464	1	True				
ANR	1278579	RelationalExpression	fileIndex < numHistoryFiles		1278464	0		<			
ANR	1278580	Identifier	fileIndex		1278464	0					
ANR	1278581	Identifier	numHistoryFiles		1278464	1					
ANR	1278582	PostIncDecOperationExpression	fileIndex ++	367:65:11231:11241	1278464	2	True				
ANR	1278583	Identifier	fileIndex		1278464	0					
ANR	1278584	IncDec	++		1278464	1					
ANR	1278585	CompoundStatement		26:78:1070:1070	1278464	3					
ANR	1278586	ExpressionStatement	"readHistoryFromFile ( historyFiles [ fileIndex ] , constraint , constraintExpr )"	368:20:11266:11338	1278464	0	True				
ANR	1278587	CallExpression	"readHistoryFromFile ( historyFiles [ fileIndex ] , constraint , constraintExpr )"		1278464	0					
ANR	1278588	Callee	readHistoryFromFile		1278464	0					
ANR	1278589	Identifier	readHistoryFromFile		1278464	0					
ANR	1278590	ArgumentList	historyFiles [ fileIndex ]		1278464	1					
ANR	1278591	Argument	historyFiles [ fileIndex ]		1278464	0					
ANR	1278592	ArrayIndexing	historyFiles [ fileIndex ]		1278464	0					
ANR	1278593	Identifier	historyFiles		1278464	0					
ANR	1278594	Identifier	fileIndex		1278464	1					
ANR	1278595	Argument	constraint		1278464	1					
ANR	1278596	Identifier	constraint		1278464	0					
ANR	1278597	Argument	constraintExpr		1278464	2					
ANR	1278598	Identifier	constraintExpr		1278464	0					
ANR	1278599	ExpressionStatement	free ( historyFiles [ fileIndex ] )	369:20:11360:11389	1278464	1	True				
ANR	1278600	CallExpression	free ( historyFiles [ fileIndex ] )		1278464	0					
ANR	1278601	Callee	free		1278464	0					
ANR	1278602	Identifier	free		1278464	0					
ANR	1278603	ArgumentList	historyFiles [ fileIndex ]		1278464	1					
ANR	1278604	Argument	historyFiles [ fileIndex ]		1278464	0					
ANR	1278605	ArrayIndexing	historyFiles [ fileIndex ]		1278464	0					
ANR	1278606	Identifier	historyFiles		1278464	0					
ANR	1278607	Identifier	fileIndex		1278464	1					
ANR	1278608	ExpressionStatement	free ( historyFiles )	373:2:11435:11453	1278464	4	True				
ANR	1278609	CallExpression	free ( historyFiles )		1278464	0					
ANR	1278610	Callee	free		1278464	0					
ANR	1278611	Identifier	free		1278464	0					
ANR	1278612	ArgumentList	historyFiles		1278464	1					
ANR	1278613	Argument	historyFiles		1278464	0					
ANR	1278614	Identifier	historyFiles		1278464	0					
ANR	1278615	ReturnStatement	return ;	375:4:11465:11471	1278464	2	True				
ANR	1278616	ReturnType	static void		1278464	1					
ANR	1278617	Identifier	readHistoryFromFiles		1278464	2					
ANR	1278618	ParameterList	"char * JobHistoryFileName , char * constraint , ExprTree * constraintExpr"		1278464	3					
ANR	1278619	Parameter	char * JobHistoryFileName	341:33:10103:10126	1278464	0	True				
ANR	1278620	ParameterType	char *		1278464	0					
ANR	1278621	Identifier	JobHistoryFileName		1278464	1					
ANR	1278622	Parameter	char * constraint	341:59:10129:10144	1278464	1	True				
ANR	1278623	ParameterType	char *		1278464	0					
ANR	1278624	Identifier	constraint		1278464	1					
ANR	1278625	Parameter	ExprTree * constraintExpr	341:77:10147:10170	1278464	2	True				
ANR	1278626	ParameterType	ExprTree *		1278464	0					
ANR	1278627	Identifier	constraintExpr		1278464	1					
ANR	1278628	CFGEntryNode	ENTRY		1278464		True				
ANR	1278629	CFGExitNode	EXIT		1278464		True				
ANR	1278630	Symbol	historyFiles		1278464						
ANR	1278631	Symbol	fileIndex		1278464						
ANR	1278632	Symbol	* fileIndex		1278464						
ANR	1278633	Symbol	numHistoryFiles		1278464						
ANR	1278634	Symbol	backwards		1278464						
ANR	1278635	Symbol	customFormat		1278464						
ANR	1278636	Symbol	constraintExpr		1278464						
ANR	1278637	Symbol	* historyFiles		1278464						
ANR	1278638	Symbol	JobHistoryFileName		1278464						
ANR	1278639	Symbol	findHistoryFiles		1278464						
ANR	1278640	Symbol	longformat		1278464						
ANR	1278641	Symbol	constraint		1278464						
ANR	1278642	Symbol	& numHistoryFiles		1278464						
ANR	1278643	Function	findHistoryFiles	381:0:11644:13811							
ANR	1278644	FunctionDef	findHistoryFiles (int * numHistoryFiles)		1278643	0					
ANR	1278645	CompoundStatement		382:0:11697:13811	1278643	0					
ANR	1278646	IdentifierDeclStatement	int fileIndex ;	383:4:11703:11717	1278643	0	True				
ANR	1278647	IdentifierDecl	fileIndex		1278643	0					
ANR	1278648	IdentifierDeclType	int		1278643	0					
ANR	1278649	Identifier	fileIndex		1278643	1					
ANR	1278650	IdentifierDeclStatement	char * * historyFiles = NULL ;	384:4:11723:11749	1278643	1	True				
ANR	1278651	IdentifierDecl	* * historyFiles = NULL		1278643	0					
ANR	1278652	IdentifierDeclType	char * *		1278643	0					
ANR	1278653	Identifier	historyFiles		1278643	1					
ANR	1278654	AssignmentExpression	* * historyFiles = NULL		1278643	2		=			
ANR	1278655	Identifier	NULL		1278643	0					
ANR	1278656	Identifier	NULL		1278643	1					
ANR	1278657	IdentifierDeclStatement	char * historyDir ;	385:4:11755:11771	1278643	2	True				
ANR	1278658	IdentifierDecl	* historyDir		1278643	0					
ANR	1278659	IdentifierDeclType	char *		1278643	0					
ANR	1278660	Identifier	historyDir		1278643	1					
ANR	1278661	ExpressionStatement	"BaseJobHistoryFileName = param ( ""HISTORY"" )"	387:4:11778:11819	1278643	3	True				
ANR	1278662	AssignmentExpression	"BaseJobHistoryFileName = param ( ""HISTORY"" )"		1278643	0		=			
ANR	1278663	Identifier	BaseJobHistoryFileName		1278643	0					
ANR	1278664	CallExpression	"param ( ""HISTORY"" )"		1278643	1					
ANR	1278665	Callee	param		1278643	0					
ANR	1278666	Identifier	param		1278643	0					
ANR	1278667	ArgumentList	"""HISTORY"""		1278643	1					
ANR	1278668	Argument	"""HISTORY"""		1278643	0					
ANR	1278669	PrimaryExpression	"""HISTORY"""		1278643	0					
ANR	1278670	IfStatement	if ( BaseJobHistoryFileName == NULL )		1278643	4					
ANR	1278671	Condition	BaseJobHistoryFileName == NULL	388:6:11827:11856	1278643	0	True				
ANR	1278672	EqualityExpression	BaseJobHistoryFileName == NULL		1278643	0		==			
ANR	1278673	Identifier	BaseJobHistoryFileName		1278643	0					
ANR	1278674	Identifier	NULL		1278643	1					
ANR	1278675	CompoundStatement		7:39:162:162	1278643	1					
ANR	1278676	ExpressionStatement	"fprintf ( stderr , ""Error: No history file is defined\\n"" )"	389:2:11864:11919	1278643	0	True				
ANR	1278677	CallExpression	"fprintf ( stderr , ""Error: No history file is defined\\n"" )"		1278643	0					
ANR	1278678	Callee	fprintf		1278643	0					
ANR	1278679	Identifier	fprintf		1278643	0					
ANR	1278680	ArgumentList	stderr		1278643	1					
ANR	1278681	Argument	stderr		1278643	0					
ANR	1278682	Identifier	stderr		1278643	0					
ANR	1278683	Argument	"""Error: No history file is defined\\n"""		1278643	1					
ANR	1278684	PrimaryExpression	"""Error: No history file is defined\\n"""		1278643	0					
ANR	1278685	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	390:2:11923:11944	1278643	1	True				
ANR	1278686	CallExpression	"fprintf ( stderr , ""\\n"" )"		1278643	0					
ANR	1278687	Callee	fprintf		1278643	0					
ANR	1278688	Identifier	fprintf		1278643	0					
ANR	1278689	ArgumentList	stderr		1278643	1					
ANR	1278690	Argument	stderr		1278643	0					
ANR	1278691	Identifier	stderr		1278643	0					
ANR	1278692	Argument	"""\\n"""		1278643	1					
ANR	1278693	PrimaryExpression	"""\\n"""		1278643	0					
ANR	1278694	Statement	print_wrapped_text	391:2:11948:11965	1278643	2	True				
ANR	1278695	Statement	(	391:20:11966:11966	1278643	3	True				
ANR	1278696	Statement	"""Extra Info: """	391:21:11967:11980	1278643	4	True				
ANR	1278697	Statement	"""The variable HISTORY is not defined in """	392:9:11992:12032	1278643	5	True				
ANR	1278698	Statement	"""your config file. If you want Condor to """	393:9:12043:12084	1278643	6	True				
ANR	1278699	Statement	"""keep a history of past jobs, you must """	394:9:12095:12134	1278643	7	True				
ANR	1278700	Statement	"""define HISTORY in your config file"""	395:9:12145:12180	1278643	8	True				
ANR	1278701	Statement	","	395:45:12181:12181	1278643	9	True				
ANR	1278702	Statement	stderr	395:47:12183:12188	1278643	10	True				
ANR	1278703	Statement	)	395:54:12190:12190	1278643	11	True				
ANR	1278704	ExpressionStatement		395:55:12191:12191	1278643	12	True				
ANR	1278705	ExpressionStatement	exit ( 1 )	397:2:12196:12205	1278643	13	True				
ANR	1278706	CallExpression	exit ( 1 )		1278643	0					
ANR	1278707	Callee	exit		1278643	0					
ANR	1278708	Identifier	exit		1278643	0					
ANR	1278709	ArgumentList	1		1278643	1					
ANR	1278710	Argument	1		1278643	0					
ANR	1278711	PrimaryExpression	1		1278643	0					
ANR	1278712	ExpressionStatement	historyDir = condor_dirname ( BaseJobHistoryFileName )	399:4:12218:12269	1278643	5	True				
ANR	1278713	AssignmentExpression	historyDir = condor_dirname ( BaseJobHistoryFileName )		1278643	0		=			
ANR	1278714	Identifier	historyDir		1278643	0					
ANR	1278715	CallExpression	condor_dirname ( BaseJobHistoryFileName )		1278643	1					
ANR	1278716	Callee	condor_dirname		1278643	0					
ANR	1278717	Identifier	condor_dirname		1278643	0					
ANR	1278718	ArgumentList	BaseJobHistoryFileName		1278643	1					
ANR	1278719	Argument	BaseJobHistoryFileName		1278643	0					
ANR	1278720	Identifier	BaseJobHistoryFileName		1278643	0					
ANR	1278721	ExpressionStatement	* numHistoryFiles = 0	401:4:12276:12296	1278643	6	True				
ANR	1278722	AssignmentExpression	* numHistoryFiles = 0		1278643	0		=			
ANR	1278723	UnaryOperationExpression	* numHistoryFiles		1278643	0					
ANR	1278724	UnaryOperator	*		1278643	0					
ANR	1278725	Identifier	numHistoryFiles		1278643	1					
ANR	1278726	PrimaryExpression	0		1278643	1					
ANR	1278727	IfStatement	if ( historyDir != NULL )		1278643	7					
ANR	1278728	Condition	historyDir != NULL	402:8:12306:12323	1278643	0	True				
ANR	1278729	EqualityExpression	historyDir != NULL		1278643	0		!=			
ANR	1278730	Identifier	historyDir		1278643	0					
ANR	1278731	Identifier	NULL		1278643	1					
ANR	1278732	CompoundStatement		23:8:673:701	1278643	1					
ANR	1278733	IdentifierDeclStatement	Directory dir ( historyDir ) ;	403:8:12336:12361	1278643	0	True				
ANR	1278734	IdentifierDecl	dir ( historyDir )		1278643	0					
ANR	1278735	IdentifierDeclType	Directory		1278643	0					
ANR	1278736	Identifier	dir		1278643	1					
ANR	1278737	Identifier	historyDir		1278643	2					
ANR	1278738	IdentifierDeclStatement	const char * current_filename ;	404:8:12371:12399	1278643	1	True				
ANR	1278739	IdentifierDecl	* current_filename		1278643	0					
ANR	1278740	IdentifierDeclType	const char *		1278643	0					
ANR	1278741	Identifier	current_filename		1278643	1					
ANR	1278742	ForStatement	for ( current_filename = dir . Next ( ) ; current_filename != NULL ; current_filename = dir . Next ( ) )		1278643	2					
ANR	1278743	ForInit	current_filename = dir . Next ( ) ;	407:14:12493:12522	1278643	0	True				
ANR	1278744	AssignmentExpression	current_filename = dir . Next ( )		1278643	0		=			
ANR	1278745	Identifier	current_filename		1278643	0					
ANR	1278746	CallExpression	dir . Next ( )		1278643	1					
ANR	1278747	Callee	dir . Next		1278643	0					
ANR	1278748	MemberAccess	dir . Next		1278643	0					
ANR	1278749	Identifier	dir		1278643	0					
ANR	1278750	Identifier	Next		1278643	1					
ANR	1278751	ArgumentList			1278643	1					
ANR	1278752	Condition	current_filename != NULL	408:13:12538:12561	1278643	1	True				
ANR	1278753	EqualityExpression	current_filename != NULL		1278643	0		!=			
ANR	1278754	Identifier	current_filename		1278643	0					
ANR	1278755	Identifier	NULL		1278643	1					
ANR	1278756	AssignmentExpression	current_filename = dir . Next ( )	409:13:12578:12606	1278643	2	True	=			
ANR	1278757	Identifier	current_filename		1278643	0					
ANR	1278758	CallExpression	dir . Next ( )		1278643	1					
ANR	1278759	Callee	dir . Next		1278643	0					
ANR	1278760	MemberAccess	dir . Next		1278643	0					
ANR	1278761	Identifier	dir		1278643	0					
ANR	1278762	Identifier	Next		1278643	1					
ANR	1278763	ArgumentList			1278643	1					
ANR	1278764	CompoundStatement		28:44:911:911	1278643	3					
ANR	1278765	IfStatement	"if ( isHistoryBackup ( current_filename , NULL ) )"		1278643	0					
ANR	1278766	Condition	"isHistoryBackup ( current_filename , NULL )"	411:16:12640:12678	1278643	0	True				
ANR	1278767	CallExpression	"isHistoryBackup ( current_filename , NULL )"		1278643	0					
ANR	1278768	Callee	isHistoryBackup		1278643	0					
ANR	1278769	Identifier	isHistoryBackup		1278643	0					
ANR	1278770	ArgumentList	current_filename		1278643	1					
ANR	1278771	Argument	current_filename		1278643	0					
ANR	1278772	Identifier	current_filename		1278643	0					
ANR	1278773	Argument	NULL		1278643	1					
ANR	1278774	Identifier	NULL		1278643	0					
ANR	1278775	CompoundStatement		30:57:983:983	1278643	1					
ANR	1278776	ExpressionStatement	( * numHistoryFiles ) ++	412:16:12699:12719	1278643	0	True				
ANR	1278777	PostIncDecOperationExpression	( * numHistoryFiles ) ++		1278643	0					
ANR	1278778	UnaryOperationExpression	* numHistoryFiles		1278643	0					
ANR	1278779	UnaryOperator	*		1278643	0					
ANR	1278780	Identifier	numHistoryFiles		1278643	1					
ANR	1278781	IncDec	++		1278643	1					
ANR	1278782	ExpressionStatement	( * numHistoryFiles ) ++	417:8:12802:12822	1278643	3	True				
ANR	1278783	PostIncDecOperationExpression	( * numHistoryFiles ) ++		1278643	0					
ANR	1278784	UnaryOperationExpression	* numHistoryFiles		1278643	0					
ANR	1278785	UnaryOperator	*		1278643	0					
ANR	1278786	Identifier	numHistoryFiles		1278643	1					
ANR	1278787	IncDec	++		1278643	1					
ANR	1278788	ExpressionStatement	historyFiles = ( char * * ) malloc ( sizeof ( char * ) * ( * numHistoryFiles ) )	420:8:12873:12940	1278643	4	True				
ANR	1278789	AssignmentExpression	historyFiles = ( char * * ) malloc ( sizeof ( char * ) * ( * numHistoryFiles ) )		1278643	0		=			
ANR	1278790	Identifier	historyFiles		1278643	0					
ANR	1278791	CastExpression	( char * * ) malloc ( sizeof ( char * ) * ( * numHistoryFiles ) )		1278643	1					
ANR	1278792	CastTarget	char * *		1278643	0					
ANR	1278793	CallExpression	malloc ( sizeof ( char * ) * ( * numHistoryFiles ) )		1278643	1					
ANR	1278794	Callee	malloc		1278643	0					
ANR	1278795	Identifier	malloc		1278643	0					
ANR	1278796	ArgumentList	sizeof ( char * ) * ( * numHistoryFiles )		1278643	1					
ANR	1278797	Argument	sizeof ( char * ) * ( * numHistoryFiles )		1278643	0					
ANR	1278798	MultiplicativeExpression	sizeof ( char * ) * ( * numHistoryFiles )		1278643	0		*			
ANR	1278799	SizeofExpression	sizeof ( char * )		1278643	0					
ANR	1278800	Sizeof	sizeof		1278643	0					
ANR	1278801	SizeofOperand	char *		1278643	1					
ANR	1278802	UnaryOperationExpression	* numHistoryFiles		1278643	1					
ANR	1278803	UnaryOperator	*		1278643	0					
ANR	1278804	Identifier	numHistoryFiles		1278643	1					
ANR	1278805	ExpressionStatement	dir . Rewind ( )	424:8:13061:13073	1278643	5	True				
ANR	1278806	CallExpression	dir . Rewind ( )		1278643	0					
ANR	1278807	Callee	dir . Rewind		1278643	0					
ANR	1278808	MemberAccess	dir . Rewind		1278643	0					
ANR	1278809	Identifier	dir		1278643	0					
ANR	1278810	Identifier	Rewind		1278643	1					
ANR	1278811	ArgumentList			1278643	1					
ANR	1278812	ForStatement	"for ( fileIndex = 0 , current_filename = dir . Next ( ) ; current_filename != NULL ; current_filename = dir . Next ( ) )"		1278643	6					
ANR	1278813	ForInit	"fileIndex = 0 , current_filename = dir . Next ( ) ;"	425:13:13088:13132	1278643	0	True				
ANR	1278814	Expression	"fileIndex = 0 , current_filename = dir . Next ( )"		1278643	0					
ANR	1278815	AssignmentExpression	fileIndex = 0		1278643	0		=			
ANR	1278816	Identifier	fileIndex		1278643	0					
ANR	1278817	PrimaryExpression	0		1278643	1					
ANR	1278818	AssignmentExpression	current_filename = dir . Next ( )		1278643	1		=			
ANR	1278819	Identifier	current_filename		1278643	0					
ANR	1278820	CallExpression	dir . Next ( )		1278643	1					
ANR	1278821	Callee	dir . Next		1278643	0					
ANR	1278822	MemberAccess	dir . Next		1278643	0					
ANR	1278823	Identifier	dir		1278643	0					
ANR	1278824	Identifier	Next		1278643	1					
ANR	1278825	ArgumentList			1278643	1					
ANR	1278826	Condition	current_filename != NULL	426:13:13148:13171	1278643	1	True				
ANR	1278827	EqualityExpression	current_filename != NULL		1278643	0		!=			
ANR	1278828	Identifier	current_filename		1278643	0					
ANR	1278829	Identifier	NULL		1278643	1					
ANR	1278830	AssignmentExpression	current_filename = dir . Next ( )	427:13:13188:13216	1278643	2	True	=			
ANR	1278831	Identifier	current_filename		1278643	0					
ANR	1278832	CallExpression	dir . Next ( )		1278643	1					
ANR	1278833	Callee	dir . Next		1278643	0					
ANR	1278834	MemberAccess	dir . Next		1278643	0					
ANR	1278835	Identifier	dir		1278643	0					
ANR	1278836	Identifier	Next		1278643	1					
ANR	1278837	ArgumentList			1278643	1					
ANR	1278838	CompoundStatement		46:44:1521:1521	1278643	3					
ANR	1278839	IfStatement	"if ( isHistoryBackup ( current_filename , NULL ) )"		1278643	0					
ANR	1278840	Condition	"isHistoryBackup ( current_filename , NULL )"	429:16:13250:13288	1278643	0	True				
ANR	1278841	CallExpression	"isHistoryBackup ( current_filename , NULL )"		1278643	0					
ANR	1278842	Callee	isHistoryBackup		1278643	0					
ANR	1278843	Identifier	isHistoryBackup		1278643	0					
ANR	1278844	ArgumentList	current_filename		1278643	1					
ANR	1278845	Argument	current_filename		1278643	0					
ANR	1278846	Identifier	current_filename		1278643	0					
ANR	1278847	Argument	NULL		1278643	1					
ANR	1278848	Identifier	NULL		1278643	0					
ANR	1278849	CompoundStatement		48:57:1593:1593	1278643	1					
ANR	1278850	ExpressionStatement	historyFiles [ fileIndex ++ ] = strdup ( dir . GetFullPath ( ) )	430:16:13309:13362	1278643	0	True				
ANR	1278851	AssignmentExpression	historyFiles [ fileIndex ++ ] = strdup ( dir . GetFullPath ( ) )		1278643	0		=			
ANR	1278852	ArrayIndexing	historyFiles [ fileIndex ++ ]		1278643	0					
ANR	1278853	Identifier	historyFiles		1278643	0					
ANR	1278854	PostIncDecOperationExpression	fileIndex ++		1278643	1					
ANR	1278855	Identifier	fileIndex		1278643	0					
ANR	1278856	IncDec	++		1278643	1					
ANR	1278857	CallExpression	strdup ( dir . GetFullPath ( ) )		1278643	1					
ANR	1278858	Callee	strdup		1278643	0					
ANR	1278859	Identifier	strdup		1278643	0					
ANR	1278860	ArgumentList	dir . GetFullPath ( )		1278643	1					
ANR	1278861	Argument	dir . GetFullPath ( )		1278643	0					
ANR	1278862	CallExpression	dir . GetFullPath ( )		1278643	0					
ANR	1278863	Callee	dir . GetFullPath		1278643	0					
ANR	1278864	MemberAccess	dir . GetFullPath		1278643	0					
ANR	1278865	Identifier	dir		1278643	0					
ANR	1278866	Identifier	GetFullPath		1278643	1					
ANR	1278867	ArgumentList			1278643	1					
ANR	1278868	ExpressionStatement	historyFiles [ fileIndex ] = strdup ( BaseJobHistoryFileName )	433:8:13396:13452	1278643	7	True				
ANR	1278869	AssignmentExpression	historyFiles [ fileIndex ] = strdup ( BaseJobHistoryFileName )		1278643	0		=			
ANR	1278870	ArrayIndexing	historyFiles [ fileIndex ]		1278643	0					
ANR	1278871	Identifier	historyFiles		1278643	0					
ANR	1278872	Identifier	fileIndex		1278643	1					
ANR	1278873	CallExpression	strdup ( BaseJobHistoryFileName )		1278643	1					
ANR	1278874	Callee	strdup		1278643	0					
ANR	1278875	Identifier	strdup		1278643	0					
ANR	1278876	ArgumentList	BaseJobHistoryFileName		1278643	1					
ANR	1278877	Argument	BaseJobHistoryFileName		1278643	0					
ANR	1278878	Identifier	BaseJobHistoryFileName		1278643	0					
ANR	1278879	IfStatement	if ( ( * numHistoryFiles ) > 2 )		1278643	8					
ANR	1278880	Condition	( * numHistoryFiles ) > 2	435:12:13467:13488	1278643	0	True				
ANR	1278881	RelationalExpression	( * numHistoryFiles ) > 2		1278643	0		>			
ANR	1278882	UnaryOperationExpression	* numHistoryFiles		1278643	0					
ANR	1278883	UnaryOperator	*		1278643	0					
ANR	1278884	Identifier	numHistoryFiles		1278643	1					
ANR	1278885	PrimaryExpression	2		1278643	1					
ANR	1278886	CompoundStatement		54:36:1793:1793	1278643	1					
ANR	1278887	ExpressionStatement	"qsort ( historyFiles , ( * numHistoryFiles ) - 1 , sizeof ( char * ) , compareHistoryFilenames )"	438:12:13652:13733	1278643	0	True				
ANR	1278888	CallExpression	"qsort ( historyFiles , ( * numHistoryFiles ) - 1 , sizeof ( char * ) , compareHistoryFilenames )"		1278643	0					
ANR	1278889	Callee	qsort		1278643	0					
ANR	1278890	Identifier	qsort		1278643	0					
ANR	1278891	ArgumentList	historyFiles		1278643	1					
ANR	1278892	Argument	historyFiles		1278643	0					
ANR	1278893	Identifier	historyFiles		1278643	0					
ANR	1278894	Argument	( * numHistoryFiles ) - 1		1278643	1					
ANR	1278895	AdditiveExpression	( * numHistoryFiles ) - 1		1278643	0		-			
ANR	1278896	UnaryOperationExpression	* numHistoryFiles		1278643	0					
ANR	1278897	UnaryOperator	*		1278643	0					
ANR	1278898	Identifier	numHistoryFiles		1278643	1					
ANR	1278899	PrimaryExpression	1		1278643	1					
ANR	1278900	Argument	sizeof ( char * )		1278643	2					
ANR	1278901	SizeofExpression	sizeof ( char * )		1278643	0					
ANR	1278902	Sizeof	sizeof		1278643	0					
ANR	1278903	SizeofOperand	char *		1278643	1					
ANR	1278904	Argument	compareHistoryFilenames		1278643	3					
ANR	1278905	Identifier	compareHistoryFilenames		1278643	0					
ANR	1278906	ExpressionStatement	free ( historyDir )	441:8:13762:13778	1278643	9	True				
ANR	1278907	CallExpression	free ( historyDir )		1278643	0					
ANR	1278908	Callee	free		1278643	0					
ANR	1278909	Identifier	free		1278643	0					
ANR	1278910	ArgumentList	historyDir		1278643	1					
ANR	1278911	Argument	historyDir		1278643	0					
ANR	1278912	Identifier	historyDir		1278643	0					
ANR	1278913	ReturnStatement	return historyFiles ;	443:4:13790:13809	1278643	8	True				
ANR	1278914	Identifier	historyFiles		1278643	0					
ANR	1278915	ReturnType	static char * *		1278643	1					
ANR	1278916	Identifier	findHistoryFiles		1278643	2					
ANR	1278917	ParameterList	int * numHistoryFiles		1278643	3					
ANR	1278918	Parameter	int * numHistoryFiles	381:31:11675:11694	1278643	0	True				
ANR	1278919	ParameterType	int *		1278643	0					
ANR	1278920	Identifier	numHistoryFiles		1278643	1					
ANR	1278921	CFGEntryNode	ENTRY		1278643		True				
ANR	1278922	CFGExitNode	EXIT		1278643		True				
ANR	1278923	Symbol	malloc		1278643						
ANR	1278924	Symbol	NULL		1278643						
ANR	1278925	Symbol	fileIndex		1278643						
ANR	1278926	Symbol	historyFiles		1278643						
ANR	1278927	Symbol	current_filename		1278643						
ANR	1278928	Symbol	* fileIndex		1278643						
ANR	1278929	Symbol	numHistoryFiles		1278643						
ANR	1278930	Symbol	condor_dirname		1278643						
ANR	1278931	Symbol	* numHistoryFiles		1278643						
ANR	1278932	Symbol	BaseJobHistoryFileName		1278643						
ANR	1278933	Symbol	stderr		1278643						
ANR	1278934	Symbol	dir		1278643						
ANR	1278935	Symbol	dir . Next		1278643						
ANR	1278936	Symbol	isHistoryBackup		1278643						
ANR	1278937	Symbol	historyDir		1278643						
ANR	1278938	Symbol	dir . GetFullPath		1278643						
ANR	1278939	Symbol	* historyFiles		1278643						
ANR	1278940	Symbol	param		1278643						
ANR	1278941	Symbol	compareHistoryFilenames		1278643						
ANR	1278942	Symbol	strdup		1278643						
ANR	1278943	Function	isHistoryBackup	449:0:13965:15263							
ANR	1278944	FunctionDef	"isHistoryBackup (const char * fullFilename , time_t * backup_time)"		1278943	0					
ANR	1278945	CompoundStatement		450:0:14040:15263	1278943	0					
ANR	1278946	IdentifierDeclStatement	bool is_history_filename ;	451:4:14046:14076	1278943	0	True				
ANR	1278947	IdentifierDecl	is_history_filename		1278943	0					
ANR	1278948	IdentifierDeclType	bool		1278943	0					
ANR	1278949	Identifier	is_history_filename		1278943	1					
ANR	1278950	IdentifierDeclStatement	const char * filename ;	452:4:14082:14102	1278943	1	True				
ANR	1278951	IdentifierDecl	* filename		1278943	0					
ANR	1278952	IdentifierDeclType	const char *		1278943	0					
ANR	1278953	Identifier	filename		1278943	1					
ANR	1278954	IdentifierDeclStatement	const char * history_base ;	453:4:14108:14132	1278943	2	True				
ANR	1278955	IdentifierDecl	* history_base		1278943	0					
ANR	1278956	IdentifierDeclType	const char *		1278943	0					
ANR	1278957	Identifier	history_base		1278943	1					
ANR	1278958	IdentifierDeclStatement	int history_base_length ;	454:4:14138:14168	1278943	3	True				
ANR	1278959	IdentifierDecl	history_base_length		1278943	0					
ANR	1278960	IdentifierDeclType	int		1278943	0					
ANR	1278961	Identifier	history_base_length		1278943	1					
ANR	1278962	IfStatement	if ( backup_time != NULL )		1278943	4					
ANR	1278963	Condition	backup_time != NULL	456:8:14179:14197	1278943	0	True				
ANR	1278964	EqualityExpression	backup_time != NULL		1278943	0		!=			
ANR	1278965	Identifier	backup_time		1278943	0					
ANR	1278966	Identifier	NULL		1278943	1					
ANR	1278967	CompoundStatement		7:29:159:159	1278943	1					
ANR	1278968	ExpressionStatement	* backup_time = - 1	457:8:14210:14227	1278943	0	True				
ANR	1278969	AssignmentExpression	* backup_time = - 1		1278943	0		=			
ANR	1278970	UnaryOperationExpression	* backup_time		1278943	0					
ANR	1278971	UnaryOperator	*		1278943	0					
ANR	1278972	Identifier	backup_time		1278943	1					
ANR	1278973	UnaryOperationExpression	- 1		1278943	1					
ANR	1278974	UnaryOperator	-		1278943	0					
ANR	1278975	PrimaryExpression	1		1278943	1					
ANR	1278976	ExpressionStatement	is_history_filename = false	460:4:14244:14271	1278943	5	True				
ANR	1278977	AssignmentExpression	is_history_filename = false		1278943	0		=			
ANR	1278978	Identifier	is_history_filename		1278943	0					
ANR	1278979	Identifier	false		1278943	1					
ANR	1278980	ExpressionStatement	history_base = condor_basename ( BaseJobHistoryFileName )	461:4:14277:14338	1278943	6	True				
ANR	1278981	AssignmentExpression	history_base = condor_basename ( BaseJobHistoryFileName )		1278943	0		=			
ANR	1278982	Identifier	history_base		1278943	0					
ANR	1278983	CallExpression	condor_basename ( BaseJobHistoryFileName )		1278943	1					
ANR	1278984	Callee	condor_basename		1278943	0					
ANR	1278985	Identifier	condor_basename		1278943	0					
ANR	1278986	ArgumentList	BaseJobHistoryFileName		1278943	1					
ANR	1278987	Argument	BaseJobHistoryFileName		1278943	0					
ANR	1278988	Identifier	BaseJobHistoryFileName		1278943	0					
ANR	1278989	ExpressionStatement	history_base_length = strlen ( history_base )	462:4:14344:14386	1278943	7	True				
ANR	1278990	AssignmentExpression	history_base_length = strlen ( history_base )		1278943	0		=			
ANR	1278991	Identifier	history_base_length		1278943	0					
ANR	1278992	CallExpression	strlen ( history_base )		1278943	1					
ANR	1278993	Callee	strlen		1278943	0					
ANR	1278994	Identifier	strlen		1278943	0					
ANR	1278995	ArgumentList	history_base		1278943	1					
ANR	1278996	Argument	history_base		1278943	0					
ANR	1278997	Identifier	history_base		1278943	0					
ANR	1278998	ExpressionStatement	filename = condor_basename ( fullFilename )	463:4:14392:14443	1278943	8	True				
ANR	1278999	AssignmentExpression	filename = condor_basename ( fullFilename )		1278943	0		=			
ANR	1279000	Identifier	filename		1278943	0					
ANR	1279001	CallExpression	condor_basename ( fullFilename )		1278943	1					
ANR	1279002	Callee	condor_basename		1278943	0					
ANR	1279003	Identifier	condor_basename		1278943	0					
ANR	1279004	ArgumentList	fullFilename		1278943	1					
ANR	1279005	Argument	fullFilename		1278943	0					
ANR	1279006	Identifier	fullFilename		1278943	0					
ANR	1279007	IfStatement	"if ( ! strncmp ( filename , history_base , history_base_length ) && filename [ history_base_length ] == '.' )"		1278943	9					
ANR	1279008	Condition	"! strncmp ( filename , history_base , history_base_length ) && filename [ history_base_length ] == '.'"	465:11:14457:14557	1278943	0	True				
ANR	1279009	AndExpression	"! strncmp ( filename , history_base , history_base_length ) && filename [ history_base_length ] == '.'"		1278943	0		&&			
ANR	1279010	UnaryOperationExpression	"! strncmp ( filename , history_base , history_base_length )"		1278943	0					
ANR	1279011	UnaryOperator	!		1278943	0					
ANR	1279012	CallExpression	"strncmp ( filename , history_base , history_base_length )"		1278943	1					
ANR	1279013	Callee	strncmp		1278943	0					
ANR	1279014	Identifier	strncmp		1278943	0					
ANR	1279015	ArgumentList	filename		1278943	1					
ANR	1279016	Argument	filename		1278943	0					
ANR	1279017	Identifier	filename		1278943	0					
ANR	1279018	Argument	history_base		1278943	1					
ANR	1279019	Identifier	history_base		1278943	0					
ANR	1279020	Argument	history_base_length		1278943	2					
ANR	1279021	Identifier	history_base_length		1278943	0					
ANR	1279022	EqualityExpression	filename [ history_base_length ] == '.'		1278943	1		==			
ANR	1279023	ArrayIndexing	filename [ history_base_length ]		1278943	0					
ANR	1279024	Identifier	filename		1278943	0					
ANR	1279025	Identifier	history_base_length		1278943	1					
ANR	1279026	PrimaryExpression	'.'		1278943	1					
ANR	1279027	CompoundStatement		21:8:646:657	1278943	1					
ANR	1279028	IdentifierDeclStatement	struct tm file_time ;	469:8:14658:14677	1278943	0	True				
ANR	1279029	IdentifierDecl	file_time		1278943	0					
ANR	1279030	IdentifierDeclType	struct tm		1278943	0					
ANR	1279031	Identifier	file_time		1278943	1					
ANR	1279032	IdentifierDeclStatement	bool is_utc ;	470:8:14687:14698	1278943	1	True				
ANR	1279033	IdentifierDecl	is_utc		1278943	0					
ANR	1279034	IdentifierDeclType	bool		1278943	0					
ANR	1279035	Identifier	is_utc		1278943	1					
ANR	1279036	ExpressionStatement	"iso8601_to_time ( filename + history_base_length + 1 , & file_time , & is_utc )"	472:8:14709:14781	1278943	2	True				
ANR	1279037	CallExpression	"iso8601_to_time ( filename + history_base_length + 1 , & file_time , & is_utc )"		1278943	0					
ANR	1279038	Callee	iso8601_to_time		1278943	0					
ANR	1279039	Identifier	iso8601_to_time		1278943	0					
ANR	1279040	ArgumentList	filename + history_base_length + 1		1278943	1					
ANR	1279041	Argument	filename + history_base_length + 1		1278943	0					
ANR	1279042	AdditiveExpression	filename + history_base_length + 1		1278943	0		+			
ANR	1279043	Identifier	filename		1278943	0					
ANR	1279044	AdditiveExpression	history_base_length + 1		1278943	1		+			
ANR	1279045	Identifier	history_base_length		1278943	0					
ANR	1279046	PrimaryExpression	1		1278943	1					
ANR	1279047	Argument	& file_time		1278943	1					
ANR	1279048	UnaryOperationExpression	& file_time		1278943	0					
ANR	1279049	UnaryOperator	&		1278943	0					
ANR	1279050	Identifier	file_time		1278943	1					
ANR	1279051	Argument	& is_utc		1278943	2					
ANR	1279052	UnaryOperationExpression	& is_utc		1278943	0					
ANR	1279053	UnaryOperator	&		1278943	0					
ANR	1279054	Identifier	is_utc		1278943	1					
ANR	1279055	IfStatement	if ( file_time . tm_year != - 1 && file_time . tm_mon != - 1 && file_time . tm_mday != - 1 && file_time . tm_hour != - 1 && file_time . tm_min != - 1 && file_time . tm_sec != - 1 && ! is_utc )		1278943	3					
ANR	1279056	Condition	file_time . tm_year != - 1 && file_time . tm_mon != - 1 && file_time . tm_mday != - 1 && file_time . tm_hour != - 1 && file_time . tm_min != - 1 && file_time . tm_sec != - 1 && ! is_utc	473:15:14798:15001	1278943	0	True				
ANR	1279057	AndExpression	file_time . tm_year != - 1 && file_time . tm_mon != - 1 && file_time . tm_mday != - 1 && file_time . tm_hour != - 1 && file_time . tm_min != - 1 && file_time . tm_sec != - 1 && ! is_utc		1278943	0		&&			
ANR	1279058	EqualityExpression	file_time . tm_year != - 1		1278943	0		!=			
ANR	1279059	MemberAccess	file_time . tm_year		1278943	0					
ANR	1279060	Identifier	file_time		1278943	0					
ANR	1279061	Identifier	tm_year		1278943	1					
ANR	1279062	UnaryOperationExpression	- 1		1278943	1					
ANR	1279063	UnaryOperator	-		1278943	0					
ANR	1279064	PrimaryExpression	1		1278943	1					
ANR	1279065	AndExpression	file_time . tm_mon != - 1 && file_time . tm_mday != - 1 && file_time . tm_hour != - 1 && file_time . tm_min != - 1 && file_time . tm_sec != - 1 && ! is_utc		1278943	1		&&			
ANR	1279066	EqualityExpression	file_time . tm_mon != - 1		1278943	0		!=			
ANR	1279067	MemberAccess	file_time . tm_mon		1278943	0					
ANR	1279068	Identifier	file_time		1278943	0					
ANR	1279069	Identifier	tm_mon		1278943	1					
ANR	1279070	UnaryOperationExpression	- 1		1278943	1					
ANR	1279071	UnaryOperator	-		1278943	0					
ANR	1279072	PrimaryExpression	1		1278943	1					
ANR	1279073	AndExpression	file_time . tm_mday != - 1 && file_time . tm_hour != - 1 && file_time . tm_min != - 1 && file_time . tm_sec != - 1 && ! is_utc		1278943	1		&&			
ANR	1279074	EqualityExpression	file_time . tm_mday != - 1		1278943	0		!=			
ANR	1279075	MemberAccess	file_time . tm_mday		1278943	0					
ANR	1279076	Identifier	file_time		1278943	0					
ANR	1279077	Identifier	tm_mday		1278943	1					
ANR	1279078	UnaryOperationExpression	- 1		1278943	1					
ANR	1279079	UnaryOperator	-		1278943	0					
ANR	1279080	PrimaryExpression	1		1278943	1					
ANR	1279081	AndExpression	file_time . tm_hour != - 1 && file_time . tm_min != - 1 && file_time . tm_sec != - 1 && ! is_utc		1278943	1		&&			
ANR	1279082	EqualityExpression	file_time . tm_hour != - 1		1278943	0		!=			
ANR	1279083	MemberAccess	file_time . tm_hour		1278943	0					
ANR	1279084	Identifier	file_time		1278943	0					
ANR	1279085	Identifier	tm_hour		1278943	1					
ANR	1279086	UnaryOperationExpression	- 1		1278943	1					
ANR	1279087	UnaryOperator	-		1278943	0					
ANR	1279088	PrimaryExpression	1		1278943	1					
ANR	1279089	AndExpression	file_time . tm_min != - 1 && file_time . tm_sec != - 1 && ! is_utc		1278943	1		&&			
ANR	1279090	EqualityExpression	file_time . tm_min != - 1		1278943	0		!=			
ANR	1279091	MemberAccess	file_time . tm_min		1278943	0					
ANR	1279092	Identifier	file_time		1278943	0					
ANR	1279093	Identifier	tm_min		1278943	1					
ANR	1279094	UnaryOperationExpression	- 1		1278943	1					
ANR	1279095	UnaryOperator	-		1278943	0					
ANR	1279096	PrimaryExpression	1		1278943	1					
ANR	1279097	AndExpression	file_time . tm_sec != - 1 && ! is_utc		1278943	1		&&			
ANR	1279098	EqualityExpression	file_time . tm_sec != - 1		1278943	0		!=			
ANR	1279099	MemberAccess	file_time . tm_sec		1278943	0					
ANR	1279100	Identifier	file_time		1278943	0					
ANR	1279101	Identifier	tm_sec		1278943	1					
ANR	1279102	UnaryOperationExpression	- 1		1278943	1					
ANR	1279103	UnaryOperator	-		1278943	0					
ANR	1279104	PrimaryExpression	1		1278943	1					
ANR	1279105	UnaryOperationExpression	! is_utc		1278943	1					
ANR	1279106	UnaryOperator	!		1278943	0					
ANR	1279107	Identifier	is_utc		1278943	1					
ANR	1279108	CompoundStatement		27:24:963:963	1278943	1					
ANR	1279109	ExpressionStatement	is_history_filename = true	478:12:15082:15108	1278943	0	True				
ANR	1279110	AssignmentExpression	is_history_filename = true		1278943	0		=			
ANR	1279111	Identifier	is_history_filename		1278943	0					
ANR	1279112	Identifier	true		1278943	1					
ANR	1279113	IfStatement	if ( backup_time != NULL )		1278943	1					
ANR	1279114	Condition	backup_time != NULL	479:16:15126:15144	1278943	0	True				
ANR	1279115	EqualityExpression	backup_time != NULL		1278943	0		!=			
ANR	1279116	Identifier	backup_time		1278943	0					
ANR	1279117	Identifier	NULL		1278943	1					
ANR	1279118	CompoundStatement		30:37:1106:1106	1278943	1					
ANR	1279119	ExpressionStatement	* backup_time = mktime ( & file_time )	480:16:15165:15198	1278943	0	True				
ANR	1279120	AssignmentExpression	* backup_time = mktime ( & file_time )		1278943	0		=			
ANR	1279121	UnaryOperationExpression	* backup_time		1278943	0					
ANR	1279122	UnaryOperator	*		1278943	0					
ANR	1279123	Identifier	backup_time		1278943	1					
ANR	1279124	CallExpression	mktime ( & file_time )		1278943	1					
ANR	1279125	Callee	mktime		1278943	0					
ANR	1279126	Identifier	mktime		1278943	0					
ANR	1279127	ArgumentList	& file_time		1278943	1					
ANR	1279128	Argument	& file_time		1278943	0					
ANR	1279129	UnaryOperationExpression	& file_time		1278943	0					
ANR	1279130	UnaryOperator	&		1278943	0					
ANR	1279131	Identifier	file_time		1278943	1					
ANR	1279132	ReturnStatement	return is_history_filename ;	485:4:15235:15261	1278943	10	True				
ANR	1279133	Identifier	is_history_filename		1278943	0					
ANR	1279134	ReturnType	static bool		1278943	1					
ANR	1279135	Identifier	isHistoryBackup		1278943	2					
ANR	1279136	ParameterList	"const char * fullFilename , time_t * backup_time"		1278943	3					
ANR	1279137	Parameter	const char * fullFilename	449:28:13993:14016	1278943	0	True				
ANR	1279138	ParameterType	const char *		1278943	0					
ANR	1279139	Identifier	fullFilename		1278943	1					
ANR	1279140	Parameter	time_t * backup_time	449:54:14019:14037	1278943	1	True				
ANR	1279141	ParameterType	time_t *		1278943	0					
ANR	1279142	Identifier	backup_time		1278943	1					
ANR	1279143	CFGEntryNode	ENTRY		1278943		True				
ANR	1279144	CFGExitNode	EXIT		1278943		True				
ANR	1279145	Symbol	fullFilename		1278943						
ANR	1279146	Symbol	history_base_length		1278943						
ANR	1279147	Symbol	* backup_time		1278943						
ANR	1279148	Symbol	* history_base_length		1278943						
ANR	1279149	Symbol	strlen		1278943						
ANR	1279150	Symbol	strncmp		1278943						
ANR	1279151	Symbol	backup_time		1278943						
ANR	1279152	Symbol	history_base		1278943						
ANR	1279153	Symbol	file_time . tm_sec		1278943						
ANR	1279154	Symbol	file_time . tm_min		1278943						
ANR	1279155	Symbol	file_time . tm_mon		1278943						
ANR	1279156	Symbol	file_time . tm_hour		1278943						
ANR	1279157	Symbol	& file_time		1278943						
ANR	1279158	Symbol	is_utc		1278943						
ANR	1279159	Symbol	NULL		1278943						
ANR	1279160	Symbol	is_history_filename		1278943						
ANR	1279161	Symbol	file_time . tm_mday		1278943						
ANR	1279162	Symbol	false		1278943						
ANR	1279163	Symbol	& is_utc		1278943						
ANR	1279164	Symbol	BaseJobHistoryFileName		1278943						
ANR	1279165	Symbol	mktime		1278943						
ANR	1279166	Symbol	filename		1278943						
ANR	1279167	Symbol	* filename		1278943						
ANR	1279168	Symbol	true		1278943						
ANR	1279169	Symbol	file_time		1278943						
ANR	1279170	Symbol	file_time . tm_year		1278943						
ANR	1279171	Symbol	condor_basename		1278943						
ANR	1279172	Function	compareHistoryFilenames	489:0:15329:15558							
ANR	1279173	FunctionDef	"compareHistoryFilenames (const void * item1 , const void * item2)"		1279172	0					
ANR	1279174	CompoundStatement		490:0:15402:15558	1279172	0					
ANR	1279175	IdentifierDeclStatement	"time_t time1 , time2 ;"	491:4:15408:15427	1279172	0	True				
ANR	1279176	IdentifierDecl	time1		1279172	0					
ANR	1279177	IdentifierDeclType	time_t		1279172	0					
ANR	1279178	Identifier	time1		1279172	1					
ANR	1279179	IdentifierDecl	time2		1279172	1					
ANR	1279180	IdentifierDeclType	time_t		1279172	0					
ANR	1279181	Identifier	time2		1279172	1					
ANR	1279182	ExpressionStatement	"isHistoryBackup ( ( const char * ) item1 , & time1 )"	493:4:15434:15479	1279172	1	True				
ANR	1279183	CallExpression	"isHistoryBackup ( ( const char * ) item1 , & time1 )"		1279172	0					
ANR	1279184	Callee	isHistoryBackup		1279172	0					
ANR	1279185	Identifier	isHistoryBackup		1279172	0					
ANR	1279186	ArgumentList	( const char * ) item1		1279172	1					
ANR	1279187	Argument	( const char * ) item1		1279172	0					
ANR	1279188	CastExpression	( const char * ) item1		1279172	0					
ANR	1279189	CastTarget	const char *		1279172	0					
ANR	1279190	Identifier	item1		1279172	1					
ANR	1279191	Argument	& time1		1279172	1					
ANR	1279192	UnaryOperationExpression	& time1		1279172	0					
ANR	1279193	UnaryOperator	&		1279172	0					
ANR	1279194	Identifier	time1		1279172	1					
ANR	1279195	ExpressionStatement	"isHistoryBackup ( ( const char * ) item2 , & time2 )"	494:4:15485:15530	1279172	2	True				
ANR	1279196	CallExpression	"isHistoryBackup ( ( const char * ) item2 , & time2 )"		1279172	0					
ANR	1279197	Callee	isHistoryBackup		1279172	0					
ANR	1279198	Identifier	isHistoryBackup		1279172	0					
ANR	1279199	ArgumentList	( const char * ) item2		1279172	1					
ANR	1279200	Argument	( const char * ) item2		1279172	0					
ANR	1279201	CastExpression	( const char * ) item2		1279172	0					
ANR	1279202	CastTarget	const char *		1279172	0					
ANR	1279203	Identifier	item2		1279172	1					
ANR	1279204	Argument	& time2		1279172	1					
ANR	1279205	UnaryOperationExpression	& time2		1279172	0					
ANR	1279206	UnaryOperator	&		1279172	0					
ANR	1279207	Identifier	time2		1279172	1					
ANR	1279208	ReturnStatement	return time1 - time2 ;	495:4:15536:15556	1279172	3	True				
ANR	1279209	AdditiveExpression	time1 - time2		1279172	0		-			
ANR	1279210	Identifier	time1		1279172	0					
ANR	1279211	Identifier	time2		1279172	1					
ANR	1279212	ReturnType	static int		1279172	1					
ANR	1279213	Identifier	compareHistoryFilenames		1279172	2					
ANR	1279214	ParameterList	"const void * item1 , const void * item2"		1279172	3					
ANR	1279215	Parameter	const void * item1	489:35:15364:15380	1279172	0	True				
ANR	1279216	ParameterType	const void *		1279172	0					
ANR	1279217	Identifier	item1		1279172	1					
ANR	1279218	Parameter	const void * item2	489:54:15383:15399	1279172	1	True				
ANR	1279219	ParameterType	const void *		1279172	0					
ANR	1279220	Identifier	item2		1279172	1					
ANR	1279221	CFGEntryNode	ENTRY		1279172		True				
ANR	1279222	CFGExitNode	EXIT		1279172		True				
ANR	1279223	Symbol	time1		1279172						
ANR	1279224	Symbol	& time2		1279172						
ANR	1279225	Symbol	time2		1279172						
ANR	1279226	Symbol	& time1		1279172						
ANR	1279227	Symbol	item2		1279172						
ANR	1279228	Symbol	item1		1279172						
ANR	1279229	Function	findLastDelimiter	501:0:15750:16794							
ANR	1279230	FunctionDef	"findLastDelimiter (FILE * fd , char * filename)"		1279229	0					
ANR	1279231	CompoundStatement		502:0:15806:16794	1279229	0					
ANR	1279232	IdentifierDeclStatement	int i ;	503:4:15812:15825	1279229	0	True				
ANR	1279233	IdentifierDecl	i		1279229	0					
ANR	1279234	IdentifierDeclType	int		1279229	0					
ANR	1279235	Identifier	i		1279229	1					
ANR	1279236	IdentifierDeclStatement	bool found ;	504:4:15831:15848	1279229	1	True				
ANR	1279237	IdentifierDecl	found		1279229	0					
ANR	1279238	IdentifierDeclType	bool		1279229	0					
ANR	1279239	Identifier	found		1279229	1					
ANR	1279240	IdentifierDeclStatement	"long seekOffset , lastOffset ;"	505:4:15854:15888	1279229	2	True				
ANR	1279241	IdentifierDecl	seekOffset		1279229	0					
ANR	1279242	IdentifierDeclType	long		1279229	0					
ANR	1279243	Identifier	seekOffset		1279229	1					
ANR	1279244	IdentifierDecl	lastOffset		1279229	1					
ANR	1279245	IdentifierDeclType	long		1279229	0					
ANR	1279246	Identifier	lastOffset		1279229	1					
ANR	1279247	IdentifierDeclStatement	MyString buf ;	506:4:15894:15909	1279229	3	True				
ANR	1279248	IdentifierDecl	buf		1279229	0					
ANR	1279249	IdentifierDeclType	MyString		1279229	0					
ANR	1279250	Identifier	buf		1279229	1					
ANR	1279251	IdentifierDeclStatement	struct stat st ;	507:4:15915:15929	1279229	4	True				
ANR	1279252	IdentifierDecl	st		1279229	0					
ANR	1279253	IdentifierDeclType	struct stat		1279229	0					
ANR	1279254	Identifier	st		1279229	1					
ANR	1279255	ExpressionStatement	"stat ( filename , & st )"	510:4:15959:15978	1279229	5	True				
ANR	1279256	CallExpression	"stat ( filename , & st )"		1279229	0					
ANR	1279257	Callee	stat		1279229	0					
ANR	1279258	Identifier	stat		1279229	0					
ANR	1279259	ArgumentList	filename		1279229	1					
ANR	1279260	Argument	filename		1279229	0					
ANR	1279261	Identifier	filename		1279229	0					
ANR	1279262	Argument	& st		1279229	1					
ANR	1279263	UnaryOperationExpression	& st		1279229	0					
ANR	1279264	UnaryOperator	&		1279229	0					
ANR	1279265	Identifier	st		1279229	1					
ANR	1279266	ExpressionStatement	found = false	512:4:15987:16000	1279229	6	True				
ANR	1279267	AssignmentExpression	found = false		1279229	0		=			
ANR	1279268	Identifier	found		1279229	0					
ANR	1279269	Identifier	false		1279229	1					
ANR	1279270	ExpressionStatement	i = 0	513:4:16006:16011	1279229	7	True				
ANR	1279271	AssignmentExpression	i = 0		1279229	0		=			
ANR	1279272	Identifier	i		1279229	0					
ANR	1279273	PrimaryExpression	0		1279229	1					
ANR	1279274	WhileStatement	while ( ! found )		1279229	8					
ANR	1279275	Condition	! found	514:11:16024:16029	1279229	0	True				
ANR	1279276	UnaryOperationExpression	! found		1279229	0					
ANR	1279277	UnaryOperator	!		1279229	0					
ANR	1279278	Identifier	found		1279229	1					
ANR	1279279	CompoundStatement		13:19:225:225	1279229	1					
ANR	1279280	ExpressionStatement	seekOffset = st . st_size - ( ++ i * 200 )	516:8:16101:16138	1279229	0	True				
ANR	1279281	AssignmentExpression	seekOffset = st . st_size - ( ++ i * 200 )		1279229	0		=			
ANR	1279282	Identifier	seekOffset		1279229	0					
ANR	1279283	AdditiveExpression	st . st_size - ( ++ i * 200 )		1279229	1		-			
ANR	1279284	MemberAccess	st . st_size		1279229	0					
ANR	1279285	Identifier	st		1279229	0					
ANR	1279286	Identifier	st_size		1279229	1					
ANR	1279287	MultiplicativeExpression	++ i * 200		1279229	1		*			
ANR	1279288	UnaryExpression	++ i		1279229	0					
ANR	1279289	IncDec	++		1279229	0					
ANR	1279290	Identifier	i		1279229	1					
ANR	1279291	PrimaryExpression	200		1279229	1					
ANR	1279292	ExpressionStatement	"fseek ( fd , seekOffset , SEEK_SET )"	518:8:16151:16182	1279229	1	True				
ANR	1279293	CallExpression	"fseek ( fd , seekOffset , SEEK_SET )"		1279229	0					
ANR	1279294	Callee	fseek		1279229	0					
ANR	1279295	Identifier	fseek		1279229	0					
ANR	1279296	ArgumentList	fd		1279229	1					
ANR	1279297	Argument	fd		1279229	0					
ANR	1279298	Identifier	fd		1279229	0					
ANR	1279299	Argument	seekOffset		1279229	1					
ANR	1279300	Identifier	seekOffset		1279229	0					
ANR	1279301	Argument	SEEK_SET		1279229	2					
ANR	1279302	Identifier	SEEK_SET		1279229	0					
ANR	1279303	WhileStatement	while ( 1 )		1279229	2					
ANR	1279304	Condition	1	520:15:16208:16208	1279229	0	True				
ANR	1279305	PrimaryExpression	1		1279229	0					
ANR	1279306	CompoundStatement		19:18:404:404	1279229	1					
ANR	1279307	IfStatement	if ( buf . readLine ( fd ) == false )		1279229	0					
ANR	1279308	Condition	buf . readLine ( fd ) == false	521:16:16229:16253	1279229	0	True				
ANR	1279309	EqualityExpression	buf . readLine ( fd ) == false		1279229	0		==			
ANR	1279310	CallExpression	buf . readLine ( fd )		1279229	0					
ANR	1279311	Callee	buf . readLine		1279229	0					
ANR	1279312	MemberAccess	buf . readLine		1279229	0					
ANR	1279313	Identifier	buf		1279229	0					
ANR	1279314	Identifier	readLine		1279229	1					
ANR	1279315	ArgumentList	fd		1279229	1					
ANR	1279316	Argument	fd		1279229	0					
ANR	1279317	Identifier	fd		1279229	0					
ANR	1279318	Identifier	false		1279229	1					
ANR	1279319	BreakStatement	break ;	522:16:16273:16278	1279229	1	True				
ANR	1279320	IfStatement	"if ( strncmp ( buf . Value ( ) , ""***"" , 3 ) == 0 && buf . readLine ( fd ) == false )"		1279229	1					
ANR	1279321	Condition	"strncmp ( buf . Value ( ) , ""***"" , 3 ) == 0 && buf . readLine ( fd ) == false"	525:16:16365:16428	1279229	0	True				
ANR	1279322	AndExpression	"strncmp ( buf . Value ( ) , ""***"" , 3 ) == 0 && buf . readLine ( fd ) == false"		1279229	0		&&			
ANR	1279323	EqualityExpression	"strncmp ( buf . Value ( ) , ""***"" , 3 ) == 0"		1279229	0		==			
ANR	1279324	CallExpression	"strncmp ( buf . Value ( ) , ""***"" , 3 )"		1279229	0					
ANR	1279325	Callee	strncmp		1279229	0					
ANR	1279326	Identifier	strncmp		1279229	0					
ANR	1279327	ArgumentList	buf . Value ( )		1279229	1					
ANR	1279328	Argument	buf . Value ( )		1279229	0					
ANR	1279329	CallExpression	buf . Value ( )		1279229	0					
ANR	1279330	Callee	buf . Value		1279229	0					
ANR	1279331	MemberAccess	buf . Value		1279229	0					
ANR	1279332	Identifier	buf		1279229	0					
ANR	1279333	Identifier	Value		1279229	1					
ANR	1279334	ArgumentList			1279229	1					
ANR	1279335	Argument	"""***"""		1279229	1					
ANR	1279336	PrimaryExpression	"""***"""		1279229	0					
ANR	1279337	Argument	3		1279229	2					
ANR	1279338	PrimaryExpression	3		1279229	0					
ANR	1279339	PrimaryExpression	0		1279229	1					
ANR	1279340	EqualityExpression	buf . readLine ( fd ) == false		1279229	1		==			
ANR	1279341	CallExpression	buf . readLine ( fd )		1279229	0					
ANR	1279342	Callee	buf . readLine		1279229	0					
ANR	1279343	MemberAccess	buf . readLine		1279229	0					
ANR	1279344	Identifier	buf		1279229	0					
ANR	1279345	Identifier	readLine		1279229	1					
ANR	1279346	ArgumentList	fd		1279229	1					
ANR	1279347	Argument	fd		1279229	0					
ANR	1279348	Identifier	fd		1279229	0					
ANR	1279349	Identifier	false		1279229	1					
ANR	1279350	CompoundStatement		24:82:624:624	1279229	1					
ANR	1279351	ExpressionStatement	found = true	526:16:16449:16461	1279229	0	True				
ANR	1279352	AssignmentExpression	found = true		1279229	0		=			
ANR	1279353	Identifier	found		1279229	0					
ANR	1279354	Identifier	true		1279229	1					
ANR	1279355	BreakStatement	break ;	527:16:16479:16484	1279229	1	True				
ANR	1279356	IfStatement	if ( seekOffset <= 0 )		1279229	3					
ANR	1279357	Condition	seekOffset <= 0	531:12:16525:16539	1279229	0	True				
ANR	1279358	RelationalExpression	seekOffset <= 0		1279229	0		<=			
ANR	1279359	Identifier	seekOffset		1279229	0					
ANR	1279360	PrimaryExpression	0		1279229	1					
ANR	1279361	CompoundStatement		30:29:735:735	1279229	1					
ANR	1279362	ExpressionStatement	"fprintf ( stderr , ""Error: Unable to find last delimiter in file: (%s)\\n"" , filename )"	532:12:16556:16637	1279229	0	True				
ANR	1279363	CallExpression	"fprintf ( stderr , ""Error: Unable to find last delimiter in file: (%s)\\n"" , filename )"		1279229	0					
ANR	1279364	Callee	fprintf		1279229	0					
ANR	1279365	Identifier	fprintf		1279229	0					
ANR	1279366	ArgumentList	stderr		1279229	1					
ANR	1279367	Argument	stderr		1279229	0					
ANR	1279368	Identifier	stderr		1279229	0					
ANR	1279369	Argument	"""Error: Unable to find last delimiter in file: (%s)\\n"""		1279229	1					
ANR	1279370	PrimaryExpression	"""Error: Unable to find last delimiter in file: (%s)\\n"""		1279229	0					
ANR	1279371	Argument	filename		1279229	2					
ANR	1279372	Identifier	filename		1279229	0					
ANR	1279373	ExpressionStatement	exit ( 1 )	533:12:16651:16658	1279229	1	True				
ANR	1279374	CallExpression	exit ( 1 )		1279229	0					
ANR	1279375	Callee	exit		1279229	0					
ANR	1279376	Identifier	exit		1279229	0					
ANR	1279377	ArgumentList	1		1279229	1					
ANR	1279378	Argument	1		1279229	0					
ANR	1279379	PrimaryExpression	1		1279229	0					
ANR	1279380	ExpressionStatement	lastOffset = ftell ( fd ) - buf . Length ( )	538:4:16727:16764	1279229	9	True				
ANR	1279381	AssignmentExpression	lastOffset = ftell ( fd ) - buf . Length ( )		1279229	0		=			
ANR	1279382	Identifier	lastOffset		1279229	0					
ANR	1279383	AdditiveExpression	ftell ( fd ) - buf . Length ( )		1279229	1		-			
ANR	1279384	CallExpression	ftell ( fd )		1279229	0					
ANR	1279385	Callee	ftell		1279229	0					
ANR	1279386	Identifier	ftell		1279229	0					
ANR	1279387	ArgumentList	fd		1279229	1					
ANR	1279388	Argument	fd		1279229	0					
ANR	1279389	Identifier	fd		1279229	0					
ANR	1279390	CallExpression	buf . Length ( )		1279229	1					
ANR	1279391	Callee	buf . Length		1279229	0					
ANR	1279392	MemberAccess	buf . Length		1279229	0					
ANR	1279393	Identifier	buf		1279229	0					
ANR	1279394	Identifier	Length		1279229	1					
ANR	1279395	ArgumentList			1279229	1					
ANR	1279396	ReturnStatement	return lastOffset ;	540:4:16775:16792	1279229	10	True				
ANR	1279397	Identifier	lastOffset		1279229	0					
ANR	1279398	ReturnType	static long		1279229	1					
ANR	1279399	Identifier	findLastDelimiter		1279229	2					
ANR	1279400	ParameterList	"FILE * fd , char * filename"		1279229	3					
ANR	1279401	Parameter	FILE * fd	501:30:15780:15787	1279229	0	True				
ANR	1279402	ParameterType	FILE *		1279229	0					
ANR	1279403	Identifier	fd		1279229	1					
ANR	1279404	Parameter	char * filename	501:40:15790:15803	1279229	1	True				
ANR	1279405	ParameterType	char *		1279229	0					
ANR	1279406	Identifier	filename		1279229	1					
ANR	1279407	CFGEntryNode	ENTRY		1279229		True				
ANR	1279408	CFGExitNode	EXIT		1279229		True				
ANR	1279409	Symbol	seekOffset		1279229						
ANR	1279410	Symbol	SEEK_SET		1279229						
ANR	1279411	Symbol	st		1279229						
ANR	1279412	Symbol	ftell		1279229						
ANR	1279413	Symbol	buf . readLine		1279229						
ANR	1279414	Symbol	false		1279229						
ANR	1279415	Symbol	i		1279229						
ANR	1279416	Symbol	lastOffset		1279229						
ANR	1279417	Symbol	& st		1279229						
ANR	1279418	Symbol	stderr		1279229						
ANR	1279419	Symbol	buf . Length		1279229						
ANR	1279420	Symbol	strncmp		1279229						
ANR	1279421	Symbol	buf		1279229						
ANR	1279422	Symbol	filename		1279229						
ANR	1279423	Symbol	found		1279229						
ANR	1279424	Symbol	st . st_size		1279229						
ANR	1279425	Symbol	buf . Value		1279229						
ANR	1279426	Symbol	true		1279229						
ANR	1279427	Symbol	fd		1279229						
ANR	1279428	Function	findPrevDelimiter	547:0:17063:18792							
ANR	1279429	FunctionDef	"findPrevDelimiter (FILE * fd , char * filename , long currOffset)"		1279428	0					
ANR	1279430	CompoundStatement		548:0:17136:18792	1279428	0					
ANR	1279431	IdentifierDeclStatement	MyString buf ;	549:4:17142:17154	1279428	0	True				
ANR	1279432	IdentifierDecl	buf		1279428	0					
ANR	1279433	IdentifierDeclType	MyString		1279428	0					
ANR	1279434	Identifier	buf		1279428	1					
ANR	1279435	IdentifierDeclStatement	char * owner ;	550:4:17160:17171	1279428	1	True				
ANR	1279436	IdentifierDecl	* owner		1279428	0					
ANR	1279437	IdentifierDeclType	char *		1279428	0					
ANR	1279438	Identifier	owner		1279428	1					
ANR	1279439	IdentifierDeclStatement	"long prevOffset = - 1 , completionDate = - 1 ;"	551:4:17177:17218	1279428	2	True				
ANR	1279440	IdentifierDecl	prevOffset = - 1		1279428	0					
ANR	1279441	IdentifierDeclType	long		1279428	0					
ANR	1279442	Identifier	prevOffset		1279428	1					
ANR	1279443	AssignmentExpression	prevOffset = - 1		1279428	2		=			
ANR	1279444	Identifier	prevOffset		1279428	0					
ANR	1279445	UnaryOperationExpression	- 1		1279428	1					
ANR	1279446	UnaryOperator	-		1279428	0					
ANR	1279447	PrimaryExpression	1		1279428	1					
ANR	1279448	IdentifierDecl	completionDate = - 1		1279428	1					
ANR	1279449	IdentifierDeclType	long		1279428	0					
ANR	1279450	Identifier	completionDate		1279428	1					
ANR	1279451	AssignmentExpression	completionDate = - 1		1279428	2		=			
ANR	1279452	Identifier	completionDate		1279428	0					
ANR	1279453	UnaryOperationExpression	- 1		1279428	1					
ANR	1279454	UnaryOperator	-		1279428	0					
ANR	1279455	PrimaryExpression	1		1279428	1					
ANR	1279456	IdentifierDeclStatement	"int clusterId = - 1 , procId = - 1 ;"	552:4:17224:17255	1279428	3	True				
ANR	1279457	IdentifierDecl	clusterId = - 1		1279428	0					
ANR	1279458	IdentifierDeclType	int		1279428	0					
ANR	1279459	Identifier	clusterId		1279428	1					
ANR	1279460	AssignmentExpression	clusterId = - 1		1279428	2		=			
ANR	1279461	Identifier	clusterId		1279428	0					
ANR	1279462	UnaryOperationExpression	- 1		1279428	1					
ANR	1279463	UnaryOperator	-		1279428	0					
ANR	1279464	PrimaryExpression	1		1279428	1					
ANR	1279465	IdentifierDecl	procId = - 1		1279428	1					
ANR	1279466	IdentifierDeclType	int		1279428	0					
ANR	1279467	Identifier	procId		1279428	1					
ANR	1279468	AssignmentExpression	procId = - 1		1279428	2		=			
ANR	1279469	Identifier	procId		1279428	0					
ANR	1279470	UnaryOperationExpression	- 1		1279428	1					
ANR	1279471	UnaryOperator	-		1279428	0					
ANR	1279472	PrimaryExpression	1		1279428	1					
ANR	1279473	ExpressionStatement	"fseek ( fd , currOffset , SEEK_SET )"	554:4:17264:17295	1279428	4	True				
ANR	1279474	CallExpression	"fseek ( fd , currOffset , SEEK_SET )"		1279428	0					
ANR	1279475	Callee	fseek		1279428	0					
ANR	1279476	Identifier	fseek		1279428	0					
ANR	1279477	ArgumentList	fd		1279428	1					
ANR	1279478	Argument	fd		1279428	0					
ANR	1279479	Identifier	fd		1279428	0					
ANR	1279480	Argument	currOffset		1279428	1					
ANR	1279481	Identifier	currOffset		1279428	0					
ANR	1279482	Argument	SEEK_SET		1279428	2					
ANR	1279483	Identifier	SEEK_SET		1279428	0					
ANR	1279484	ExpressionStatement	buf . readLine ( fd )	555:4:17301:17317	1279428	5	True				
ANR	1279485	CallExpression	buf . readLine ( fd )		1279428	0					
ANR	1279486	Callee	buf . readLine		1279428	0					
ANR	1279487	MemberAccess	buf . readLine		1279428	0					
ANR	1279488	Identifier	buf		1279428	0					
ANR	1279489	Identifier	readLine		1279428	1					
ANR	1279490	ArgumentList	fd		1279428	1					
ANR	1279491	Argument	fd		1279428	0					
ANR	1279492	Identifier	fd		1279428	0					
ANR	1279493	ExpressionStatement	owner = ( char * ) malloc ( buf . Length ( ) * sizeof ( char ) )	557:4:17326:17378	1279428	6	True				
ANR	1279494	AssignmentExpression	owner = ( char * ) malloc ( buf . Length ( ) * sizeof ( char ) )		1279428	0		=			
ANR	1279495	Identifier	owner		1279428	0					
ANR	1279496	CastExpression	( char * ) malloc ( buf . Length ( ) * sizeof ( char ) )		1279428	1					
ANR	1279497	CastTarget	char *		1279428	0					
ANR	1279498	CallExpression	malloc ( buf . Length ( ) * sizeof ( char ) )		1279428	1					
ANR	1279499	Callee	malloc		1279428	0					
ANR	1279500	Identifier	malloc		1279428	0					
ANR	1279501	ArgumentList	buf . Length ( ) * sizeof ( char )		1279428	1					
ANR	1279502	Argument	buf . Length ( ) * sizeof ( char )		1279428	0					
ANR	1279503	MultiplicativeExpression	buf . Length ( ) * sizeof ( char )		1279428	0		*			
ANR	1279504	CallExpression	buf . Length ( )		1279428	0					
ANR	1279505	Callee	buf . Length		1279428	0					
ANR	1279506	MemberAccess	buf . Length		1279428	0					
ANR	1279507	Identifier	buf		1279428	0					
ANR	1279508	Identifier	Length		1279428	1					
ANR	1279509	ArgumentList			1279428	1					
ANR	1279510	SizeofExpression	sizeof ( char )		1279428	1					
ANR	1279511	Sizeof	sizeof		1279428	0					
ANR	1279512	SizeofOperand	char		1279428	1					
ANR	1279513	ExpressionStatement	"sscanf ( buf . Value ( ) , ""%*s %*s %*s %ld %*s %*s %d %*s %*s %d %*s %*s %s %*s %*s %ld"" , & prevOffset , & clusterId , & procId , owner , & completionDate )"	563:4:17602:17755	1279428	7	True				
ANR	1279514	CallExpression	"sscanf ( buf . Value ( ) , ""%*s %*s %*s %ld %*s %*s %d %*s %*s %d %*s %*s %s %*s %*s %ld"" , & prevOffset , & clusterId , & procId , owner , & completionDate )"		1279428	0					
ANR	1279515	Callee	sscanf		1279428	0					
ANR	1279516	Identifier	sscanf		1279428	0					
ANR	1279517	ArgumentList	buf . Value ( )		1279428	1					
ANR	1279518	Argument	buf . Value ( )		1279428	0					
ANR	1279519	CallExpression	buf . Value ( )		1279428	0					
ANR	1279520	Callee	buf . Value		1279428	0					
ANR	1279521	MemberAccess	buf . Value		1279428	0					
ANR	1279522	Identifier	buf		1279428	0					
ANR	1279523	Identifier	Value		1279428	1					
ANR	1279524	ArgumentList			1279428	1					
ANR	1279525	Argument	"""%*s %*s %*s %ld %*s %*s %d %*s %*s %d %*s %*s %s %*s %*s %ld"""		1279428	1					
ANR	1279526	PrimaryExpression	"""%*s %*s %*s %ld %*s %*s %d %*s %*s %d %*s %*s %s %*s %*s %ld"""		1279428	0					
ANR	1279527	Argument	& prevOffset		1279428	2					
ANR	1279528	UnaryOperationExpression	& prevOffset		1279428	0					
ANR	1279529	UnaryOperator	&		1279428	0					
ANR	1279530	Identifier	prevOffset		1279428	1					
ANR	1279531	Argument	& clusterId		1279428	3					
ANR	1279532	UnaryOperationExpression	& clusterId		1279428	0					
ANR	1279533	UnaryOperator	&		1279428	0					
ANR	1279534	Identifier	clusterId		1279428	1					
ANR	1279535	Argument	& procId		1279428	4					
ANR	1279536	UnaryOperationExpression	& procId		1279428	0					
ANR	1279537	UnaryOperator	&		1279428	0					
ANR	1279538	Identifier	procId		1279428	1					
ANR	1279539	Argument	owner		1279428	5					
ANR	1279540	Identifier	owner		1279428	0					
ANR	1279541	Argument	& completionDate		1279428	6					
ANR	1279542	UnaryOperationExpression	& completionDate		1279428	0					
ANR	1279543	UnaryOperator	&		1279428	0					
ANR	1279544	Identifier	completionDate		1279428	1					
ANR	1279545	IfStatement	if ( prevOffset == - 1 && clusterId == - 1 && procId == - 1 )		1279428	8					
ANR	1279546	Condition	prevOffset == - 1 && clusterId == - 1 && procId == - 1	566:8:17766:17816	1279428	0	True				
ANR	1279547	AndExpression	prevOffset == - 1 && clusterId == - 1 && procId == - 1		1279428	0		&&			
ANR	1279548	EqualityExpression	prevOffset == - 1		1279428	0		==			
ANR	1279549	Identifier	prevOffset		1279428	0					
ANR	1279550	UnaryOperationExpression	- 1		1279428	1					
ANR	1279551	UnaryOperator	-		1279428	0					
ANR	1279552	PrimaryExpression	1		1279428	1					
ANR	1279553	AndExpression	clusterId == - 1 && procId == - 1		1279428	1		&&			
ANR	1279554	EqualityExpression	clusterId == - 1		1279428	0		==			
ANR	1279555	Identifier	clusterId		1279428	0					
ANR	1279556	UnaryOperationExpression	- 1		1279428	1					
ANR	1279557	UnaryOperator	-		1279428	0					
ANR	1279558	PrimaryExpression	1		1279428	1					
ANR	1279559	EqualityExpression	procId == - 1		1279428	1		==			
ANR	1279560	Identifier	procId		1279428	0					
ANR	1279561	UnaryOperationExpression	- 1		1279428	1					
ANR	1279562	UnaryOperator	-		1279428	0					
ANR	1279563	PrimaryExpression	1		1279428	1					
ANR	1279564	CompoundStatement		19:61:682:682	1279428	1					
ANR	1279565	ExpressionStatement	"fprintf ( stderr , ""Error: (%s) is an incompatible history file, please run condor_convert_history.\\n"" , filename )"	567:8:17829:17972	1279428	0	True				
ANR	1279566	CallExpression	"fprintf ( stderr , ""Error: (%s) is an incompatible history file, please run condor_convert_history.\\n"" , filename )"		1279428	0					
ANR	1279567	Callee	fprintf		1279428	0					
ANR	1279568	Identifier	fprintf		1279428	0					
ANR	1279569	ArgumentList	stderr		1279428	1					
ANR	1279570	Argument	stderr		1279428	0					
ANR	1279571	Identifier	stderr		1279428	0					
ANR	1279572	Argument	"""Error: (%s) is an incompatible history file, please run condor_convert_history.\\n"""		1279428	1					
ANR	1279573	PrimaryExpression	"""Error: (%s) is an incompatible history file, please run condor_convert_history.\\n"""		1279428	0					
ANR	1279574	Argument	filename		1279428	2					
ANR	1279575	Identifier	filename		1279428	0					
ANR	1279576	ExpressionStatement	free ( owner )	570:8:17982:17993	1279428	1	True				
ANR	1279577	CallExpression	free ( owner )		1279428	0					
ANR	1279578	Callee	free		1279428	0					
ANR	1279579	Identifier	free		1279428	0					
ANR	1279580	ArgumentList	owner		1279428	1					
ANR	1279581	Argument	owner		1279428	0					
ANR	1279582	Identifier	owner		1279428	0					
ANR	1279583	ExpressionStatement	exit ( 1 )	571:8:18003:18010	1279428	2	True				
ANR	1279584	CallExpression	exit ( 1 )		1279428	0					
ANR	1279585	Callee	exit		1279428	0					
ANR	1279586	Identifier	exit		1279428	0					
ANR	1279587	ArgumentList	1		1279428	1					
ANR	1279588	Argument	1		1279428	0					
ANR	1279589	PrimaryExpression	1		1279428	0					
ANR	1279590	IfStatement	if ( cluster != - 1 || proc != - 1 )		1279428	9					
ANR	1279591	Condition	cluster != - 1 || proc != - 1	575:8:18067:18093	1279428	0	True				
ANR	1279592	OrExpression	cluster != - 1 || proc != - 1		1279428	0		||			
ANR	1279593	EqualityExpression	cluster != - 1		1279428	0		!=			
ANR	1279594	Identifier	cluster		1279428	0					
ANR	1279595	UnaryOperationExpression	- 1		1279428	1					
ANR	1279596	UnaryOperator	-		1279428	0					
ANR	1279597	PrimaryExpression	1		1279428	1					
ANR	1279598	EqualityExpression	proc != - 1		1279428	1		!=			
ANR	1279599	Identifier	proc		1279428	0					
ANR	1279600	UnaryOperationExpression	- 1		1279428	1					
ANR	1279601	UnaryOperator	-		1279428	0					
ANR	1279602	PrimaryExpression	1		1279428	1					
ANR	1279603	CompoundStatement		28:37:959:959	1279428	1					
ANR	1279604	WhileStatement	while ( clusterId != cluster || ( proc != - 1 && procId != proc ) )		1279428	0					
ANR	1279605	Condition	clusterId != cluster || ( proc != - 1 && procId != proc )	578:15:18156:18209	1279428	0	True				
ANR	1279606	OrExpression	clusterId != cluster || ( proc != - 1 && procId != proc )		1279428	0		||			
ANR	1279607	EqualityExpression	clusterId != cluster		1279428	0		!=			
ANR	1279608	Identifier	clusterId		1279428	0					
ANR	1279609	Identifier	cluster		1279428	1					
ANR	1279610	AndExpression	proc != - 1 && procId != proc		1279428	1		&&			
ANR	1279611	EqualityExpression	proc != - 1		1279428	0		!=			
ANR	1279612	Identifier	proc		1279428	0					
ANR	1279613	UnaryOperationExpression	- 1		1279428	1					
ANR	1279614	UnaryOperator	-		1279428	0					
ANR	1279615	PrimaryExpression	1		1279428	1					
ANR	1279616	EqualityExpression	procId != proc		1279428	1		!=			
ANR	1279617	Identifier	procId		1279428	0					
ANR	1279618	Identifier	proc		1279428	1					
ANR	1279619	CompoundStatement		31:71:1075:1075	1279428	1					
ANR	1279620	IfStatement	if ( prevOffset == 0 )		1279428	0					
ANR	1279621	Condition	prevOffset == 0	580:16:18234:18248	1279428	0	True				
ANR	1279622	EqualityExpression	prevOffset == 0		1279428	0		==			
ANR	1279623	Identifier	prevOffset		1279428	0					
ANR	1279624	PrimaryExpression	0		1279428	1					
ANR	1279625	CompoundStatement		33:33:1114:1114	1279428	1					
ANR	1279626	ExpressionStatement	free ( owner )	581:16:18281:18292	1279428	0	True				
ANR	1279627	CallExpression	free ( owner )		1279428	0					
ANR	1279628	Callee	free		1279428	0					
ANR	1279629	Identifier	free		1279428	0					
ANR	1279630	ArgumentList	owner		1279428	1					
ANR	1279631	Argument	owner		1279428	0					
ANR	1279632	Identifier	owner		1279428	0					
ANR	1279633	ReturnStatement	return - 1 ;	582:16:18310:18319	1279428	1	True				
ANR	1279634	UnaryOperationExpression	- 1		1279428	0					
ANR	1279635	UnaryOperator	-		1279428	0					
ANR	1279636	PrimaryExpression	1		1279428	1					
ANR	1279637	ExpressionStatement	"fseek ( fd , prevOffset , SEEK_SET )"	586:12:18397:18428	1279428	1	True				
ANR	1279638	CallExpression	"fseek ( fd , prevOffset , SEEK_SET )"		1279428	0					
ANR	1279639	Callee	fseek		1279428	0					
ANR	1279640	Identifier	fseek		1279428	0					
ANR	1279641	ArgumentList	fd		1279428	1					
ANR	1279642	Argument	fd		1279428	0					
ANR	1279643	Identifier	fd		1279428	0					
ANR	1279644	Argument	prevOffset		1279428	1					
ANR	1279645	Identifier	prevOffset		1279428	0					
ANR	1279646	Argument	SEEK_SET		1279428	2					
ANR	1279647	Identifier	SEEK_SET		1279428	0					
ANR	1279648	ExpressionStatement	buf . readLine ( fd )	587:12:18442:18458	1279428	2	True				
ANR	1279649	CallExpression	buf . readLine ( fd )		1279428	0					
ANR	1279650	Callee	buf . readLine		1279428	0					
ANR	1279651	MemberAccess	buf . readLine		1279428	0					
ANR	1279652	Identifier	buf		1279428	0					
ANR	1279653	Identifier	readLine		1279428	1					
ANR	1279654	ArgumentList	fd		1279428	1					
ANR	1279655	Argument	fd		1279428	0					
ANR	1279656	Identifier	fd		1279428	0					
ANR	1279657	ExpressionStatement	"owner = ( char * ) realloc ( owner , buf . Length ( ) * sizeof ( char ) )"	589:12:18485:18546	1279428	3	True				
ANR	1279658	AssignmentExpression	"owner = ( char * ) realloc ( owner , buf . Length ( ) * sizeof ( char ) )"		1279428	0		=			
ANR	1279659	Identifier	owner		1279428	0					
ANR	1279660	CastExpression	"( char * ) realloc ( owner , buf . Length ( ) * sizeof ( char ) )"		1279428	1					
ANR	1279661	CastTarget	char *		1279428	0					
ANR	1279662	CallExpression	"realloc ( owner , buf . Length ( ) * sizeof ( char ) )"		1279428	1					
ANR	1279663	Callee	realloc		1279428	0					
ANR	1279664	Identifier	realloc		1279428	0					
ANR	1279665	ArgumentList	owner		1279428	1					
ANR	1279666	Argument	owner		1279428	0					
ANR	1279667	Identifier	owner		1279428	0					
ANR	1279668	Argument	buf . Length ( ) * sizeof ( char )		1279428	1					
ANR	1279669	MultiplicativeExpression	buf . Length ( ) * sizeof ( char )		1279428	0		*			
ANR	1279670	CallExpression	buf . Length ( )		1279428	0					
ANR	1279671	Callee	buf . Length		1279428	0					
ANR	1279672	MemberAccess	buf . Length		1279428	0					
ANR	1279673	Identifier	buf		1279428	0					
ANR	1279674	Identifier	Length		1279428	1					
ANR	1279675	ArgumentList			1279428	1					
ANR	1279676	SizeofExpression	sizeof ( char )		1279428	1					
ANR	1279677	Sizeof	sizeof		1279428	0					
ANR	1279678	SizeofOperand	char		1279428	1					
ANR	1279679	ExpressionStatement	"sscanf ( buf . Value ( ) , ""%*s %*s %*s %ld %*s %*s %d %*s %*s %d %*s %*s %s %*s %*s %ld"" , & prevOffset , & clusterId , & procId , owner , & completionDate )"	591:12:18567:18728	1279428	4	True				
ANR	1279680	CallExpression	"sscanf ( buf . Value ( ) , ""%*s %*s %*s %ld %*s %*s %d %*s %*s %d %*s %*s %s %*s %*s %ld"" , & prevOffset , & clusterId , & procId , owner , & completionDate )"		1279428	0					
ANR	1279681	Callee	sscanf		1279428	0					
ANR	1279682	Identifier	sscanf		1279428	0					
ANR	1279683	ArgumentList	buf . Value ( )		1279428	1					
ANR	1279684	Argument	buf . Value ( )		1279428	0					
ANR	1279685	CallExpression	buf . Value ( )		1279428	0					
ANR	1279686	Callee	buf . Value		1279428	0					
ANR	1279687	MemberAccess	buf . Value		1279428	0					
ANR	1279688	Identifier	buf		1279428	0					
ANR	1279689	Identifier	Value		1279428	1					
ANR	1279690	ArgumentList			1279428	1					
ANR	1279691	Argument	"""%*s %*s %*s %ld %*s %*s %d %*s %*s %d %*s %*s %s %*s %*s %ld"""		1279428	1					
ANR	1279692	PrimaryExpression	"""%*s %*s %*s %ld %*s %*s %d %*s %*s %d %*s %*s %s %*s %*s %ld"""		1279428	0					
ANR	1279693	Argument	& prevOffset		1279428	2					
ANR	1279694	UnaryOperationExpression	& prevOffset		1279428	0					
ANR	1279695	UnaryOperator	&		1279428	0					
ANR	1279696	Identifier	prevOffset		1279428	1					
ANR	1279697	Argument	& clusterId		1279428	3					
ANR	1279698	UnaryOperationExpression	& clusterId		1279428	0					
ANR	1279699	UnaryOperator	&		1279428	0					
ANR	1279700	Identifier	clusterId		1279428	1					
ANR	1279701	Argument	& procId		1279428	4					
ANR	1279702	UnaryOperationExpression	& procId		1279428	0					
ANR	1279703	UnaryOperator	&		1279428	0					
ANR	1279704	Identifier	procId		1279428	1					
ANR	1279705	Argument	owner		1279428	5					
ANR	1279706	Identifier	owner		1279428	0					
ANR	1279707	Argument	& completionDate		1279428	6					
ANR	1279708	UnaryOperationExpression	& completionDate		1279428	0					
ANR	1279709	UnaryOperator	&		1279428	0					
ANR	1279710	Identifier	completionDate		1279428	1					
ANR	1279711	ExpressionStatement	free ( owner )	596:4:18752:18763	1279428	10	True				
ANR	1279712	CallExpression	free ( owner )		1279428	0					
ANR	1279713	Callee	free		1279428	0					
ANR	1279714	Identifier	free		1279428	0					
ANR	1279715	ArgumentList	owner		1279428	1					
ANR	1279716	Argument	owner		1279428	0					
ANR	1279717	Identifier	owner		1279428	0					
ANR	1279718	ReturnStatement	return prevOffset ;	598:4:18773:18790	1279428	11	True				
ANR	1279719	Identifier	prevOffset		1279428	0					
ANR	1279720	ReturnType	static long		1279428	1					
ANR	1279721	Identifier	findPrevDelimiter		1279428	2					
ANR	1279722	ParameterList	"FILE * fd , char * filename , long currOffset"		1279428	3					
ANR	1279723	Parameter	FILE * fd	547:30:17093:17100	1279428	0	True				
ANR	1279724	ParameterType	FILE *		1279428	0					
ANR	1279725	Identifier	fd		1279428	1					
ANR	1279726	Parameter	char * filename	547:40:17103:17116	1279428	1	True				
ANR	1279727	ParameterType	char *		1279428	0					
ANR	1279728	Identifier	filename		1279428	1					
ANR	1279729	Parameter	long currOffset	547:56:17119:17133	1279428	2	True				
ANR	1279730	ParameterType	long		1279428	0					
ANR	1279731	Identifier	currOffset		1279428	1					
ANR	1279732	CFGEntryNode	ENTRY		1279428		True				
ANR	1279733	CFGExitNode	EXIT		1279428		True				
ANR	1279734	Symbol	owner		1279428						
ANR	1279735	Symbol	SEEK_SET		1279428						
ANR	1279736	Symbol	malloc		1279428						
ANR	1279737	Symbol	& completionDate		1279428						
ANR	1279738	Symbol	cluster		1279428						
ANR	1279739	Symbol	& prevOffset		1279428						
ANR	1279740	Symbol	proc		1279428						
ANR	1279741	Symbol	& clusterId		1279428						
ANR	1279742	Symbol	& procId		1279428						
ANR	1279743	Symbol	procId		1279428						
ANR	1279744	Symbol	prevOffset		1279428						
ANR	1279745	Symbol	clusterId		1279428						
ANR	1279746	Symbol	realloc		1279428						
ANR	1279747	Symbol	stderr		1279428						
ANR	1279748	Symbol	buf . Length		1279428						
ANR	1279749	Symbol	buf		1279428						
ANR	1279750	Symbol	filename		1279428						
ANR	1279751	Symbol	currOffset		1279428						
ANR	1279752	Symbol	buf . Value		1279428						
ANR	1279753	Symbol	completionDate		1279428						
ANR	1279754	Symbol	fd		1279428						
ANR	1279755	Function	readHistoryFromFile	602:0:18854:21993							
ANR	1279756	FunctionDef	"readHistoryFromFile (char * JobHistoryFileName , char * constraint , ExprTree * constraintExpr)"		1279755	0					
ANR	1279757	CompoundStatement		603:0:18956:21993	1279755	0					
ANR	1279758	IdentifierDeclStatement	int EndFlag = 0 ;	604:4:18962:18979	1279755	0	True				
ANR	1279759	IdentifierDecl	EndFlag = 0		1279755	0					
ANR	1279760	IdentifierDeclType	int		1279755	0					
ANR	1279761	Identifier	EndFlag		1279755	1					
ANR	1279762	AssignmentExpression	EndFlag = 0		1279755	2		=			
ANR	1279763	Identifier	EndFlag		1279755	0					
ANR	1279764	PrimaryExpression	0		1279755	1					
ANR	1279765	IdentifierDeclStatement	int ErrorFlag = 0 ;	605:4:18985:19002	1279755	1	True				
ANR	1279766	IdentifierDecl	ErrorFlag = 0		1279755	0					
ANR	1279767	IdentifierDeclType	int		1279755	0					
ANR	1279768	Identifier	ErrorFlag		1279755	1					
ANR	1279769	AssignmentExpression	ErrorFlag = 0		1279755	2		=			
ANR	1279770	Identifier	ErrorFlag		1279755	0					
ANR	1279771	PrimaryExpression	0		1279755	1					
ANR	1279772	IdentifierDeclStatement	int EmptyFlag = 0 ;	606:4:19008:19025	1279755	2	True				
ANR	1279773	IdentifierDecl	EmptyFlag = 0		1279755	0					
ANR	1279774	IdentifierDeclType	int		1279755	0					
ANR	1279775	Identifier	EmptyFlag		1279755	1					
ANR	1279776	AssignmentExpression	EmptyFlag = 0		1279755	2		=			
ANR	1279777	Identifier	EmptyFlag		1279755	0					
ANR	1279778	PrimaryExpression	0		1279755	1					
ANR	1279779	IdentifierDeclStatement	AttrList * ad = NULL ;	607:4:19031:19050	1279755	3	True				
ANR	1279780	IdentifierDecl	* ad = NULL		1279755	0					
ANR	1279781	IdentifierDeclType	AttrList *		1279755	0					
ANR	1279782	Identifier	ad		1279755	1					
ANR	1279783	AssignmentExpression	* ad = NULL		1279755	2		=			
ANR	1279784	Identifier	NULL		1279755	0					
ANR	1279785	Identifier	NULL		1279755	1					
ANR	1279786	IdentifierDeclStatement	long offset = 0 ;	609:4:19057:19072	1279755	4	True				
ANR	1279787	IdentifierDecl	offset = 0		1279755	0					
ANR	1279788	IdentifierDeclType	long		1279755	0					
ANR	1279789	Identifier	offset		1279755	1					
ANR	1279790	AssignmentExpression	offset = 0		1279755	2		=			
ANR	1279791	Identifier	offset		1279755	0					
ANR	1279792	PrimaryExpression	0		1279755	1					
ANR	1279793	IdentifierDeclStatement	bool BOF = false ;	610:4:19078:19094	1279755	5	True				
ANR	1279794	IdentifierDecl	BOF = false		1279755	0					
ANR	1279795	IdentifierDeclType	bool		1279755	0					
ANR	1279796	Identifier	BOF		1279755	1					
ANR	1279797	AssignmentExpression	BOF = false		1279755	2		=			
ANR	1279798	Identifier	false		1279755	0					
ANR	1279799	Identifier	false		1279755	1					
ANR	1279800	IdentifierDeclStatement	MyString buf ;	611:4:19121:19133	1279755	6	True				
ANR	1279801	IdentifierDecl	buf		1279755	0					
ANR	1279802	IdentifierDeclType	MyString		1279755	0					
ANR	1279803	Identifier	buf		1279755	1					
ANR	1279804	IdentifierDeclStatement	"FILE * LogFile = safe_fopen_wrapper ( JobHistoryFileName , ""r"" ) ;"	613:4:19144:19200	1279755	7	True				
ANR	1279805	IdentifierDecl	"* LogFile = safe_fopen_wrapper ( JobHistoryFileName , ""r"" )"		1279755	0					
ANR	1279806	IdentifierDeclType	FILE *		1279755	0					
ANR	1279807	Identifier	LogFile		1279755	1					
ANR	1279808	AssignmentExpression	"* LogFile = safe_fopen_wrapper ( JobHistoryFileName , ""r"" )"		1279755	2		=			
ANR	1279809	Identifier	LogFile		1279755	0					
ANR	1279810	CallExpression	"safe_fopen_wrapper ( JobHistoryFileName , ""r"" )"		1279755	1					
ANR	1279811	Callee	safe_fopen_wrapper		1279755	0					
ANR	1279812	Identifier	safe_fopen_wrapper		1279755	0					
ANR	1279813	ArgumentList	JobHistoryFileName		1279755	1					
ANR	1279814	Argument	JobHistoryFileName		1279755	0					
ANR	1279815	Identifier	JobHistoryFileName		1279755	0					
ANR	1279816	Argument	"""r"""		1279755	1					
ANR	1279817	PrimaryExpression	"""r"""		1279755	0					
ANR	1279818	IfStatement	if ( ! LogFile )		1279755	8					
ANR	1279819	Condition	! LogFile	615:5:19212:19219	1279755	0	True				
ANR	1279820	UnaryOperationExpression	! LogFile		1279755	0					
ANR	1279821	UnaryOperator	!		1279755	0					
ANR	1279822	Identifier	LogFile		1279755	1					
ANR	1279823	CompoundStatement		13:15:265:265	1279755	1					
ANR	1279824	ExpressionStatement	"fprintf ( stderr , ""History file (%s) not found or empty.\\n"" , JobHistoryFileName )"	616:8:19232:19309	1279755	0	True				
ANR	1279825	CallExpression	"fprintf ( stderr , ""History file (%s) not found or empty.\\n"" , JobHistoryFileName )"		1279755	0					
ANR	1279826	Callee	fprintf		1279755	0					
ANR	1279827	Identifier	fprintf		1279755	0					
ANR	1279828	ArgumentList	stderr		1279755	1					
ANR	1279829	Argument	stderr		1279755	0					
ANR	1279830	Identifier	stderr		1279755	0					
ANR	1279831	Argument	"""History file (%s) not found or empty.\\n"""		1279755	1					
ANR	1279832	PrimaryExpression	"""History file (%s) not found or empty.\\n"""		1279755	0					
ANR	1279833	Argument	JobHistoryFileName		1279755	2					
ANR	1279834	Identifier	JobHistoryFileName		1279755	0					
ANR	1279835	ExpressionStatement	exit ( 1 )	617:8:19319:19326	1279755	1	True				
ANR	1279836	CallExpression	exit ( 1 )		1279755	0					
ANR	1279837	Callee	exit		1279755	0					
ANR	1279838	Identifier	exit		1279755	0					
ANR	1279839	ArgumentList	1		1279755	1					
ANR	1279840	Argument	1		1279755	0					
ANR	1279841	PrimaryExpression	1		1279755	0					
ANR	1279842	IfStatement	if ( specifiedMatch != 0 )		1279755	9					
ANR	1279843	Condition	specifiedMatch != 0	622:5:19489:19507	1279755	0	True				
ANR	1279844	EqualityExpression	specifiedMatch != 0		1279755	0		!=			
ANR	1279845	Identifier	specifiedMatch		1279755	0					
ANR	1279846	PrimaryExpression	0		1279755	1					
ANR	1279847	CompoundStatement		20:26:553:553	1279755	1					
ANR	1279848	IfStatement	if ( matchCount == specifiedMatch )		1279755	0					
ANR	1279849	Condition	matchCount == specifiedMatch	623:12:19525:19552	1279755	0	True				
ANR	1279850	EqualityExpression	matchCount == specifiedMatch		1279755	0		==			
ANR	1279851	Identifier	matchCount		1279755	0					
ANR	1279852	Identifier	specifiedMatch		1279755	1					
ANR	1279853	CompoundStatement		21:42:598:598	1279755	1					
ANR	1279854	ExpressionStatement	fclose ( LogFile )	624:12:19617:19632	1279755	0	True				
ANR	1279855	CallExpression	fclose ( LogFile )		1279755	0					
ANR	1279856	Callee	fclose		1279755	0					
ANR	1279857	Identifier	fclose		1279755	0					
ANR	1279858	ArgumentList	LogFile		1279755	1					
ANR	1279859	Argument	LogFile		1279755	0					
ANR	1279860	Identifier	LogFile		1279755	0					
ANR	1279861	ReturnStatement	return ;	625:12:19646:19652	1279755	1	True				
ANR	1279862	IfStatement	if ( backwards )		1279755	10					
ANR	1279863	Condition	backwards	629:5:19673:19681	1279755	0	True				
ANR	1279864	Identifier	backwards		1279755	0					
ANR	1279865	CompoundStatement		27:16:727:727	1279755	1					
ANR	1279866	ExpressionStatement	"offset = findLastDelimiter ( LogFile , JobHistoryFileName )"	630:8:19694:19749	1279755	0	True				
ANR	1279867	AssignmentExpression	"offset = findLastDelimiter ( LogFile , JobHistoryFileName )"		1279755	0		=			
ANR	1279868	Identifier	offset		1279755	0					
ANR	1279869	CallExpression	"findLastDelimiter ( LogFile , JobHistoryFileName )"		1279755	1					
ANR	1279870	Callee	findLastDelimiter		1279755	0					
ANR	1279871	Identifier	findLastDelimiter		1279755	0					
ANR	1279872	ArgumentList	LogFile		1279755	1					
ANR	1279873	Argument	LogFile		1279755	0					
ANR	1279874	Identifier	LogFile		1279755	0					
ANR	1279875	Argument	JobHistoryFileName		1279755	1					
ANR	1279876	Identifier	JobHistoryFileName		1279755	0					
ANR	1279877	WhileStatement	while ( ! EndFlag )		1279755	11					
ANR	1279878	Condition	! EndFlag	633:10:19769:19776	1279755	0	True				
ANR	1279879	UnaryOperationExpression	! EndFlag		1279755	0					
ANR	1279880	UnaryOperator	!		1279755	0					
ANR	1279881	Identifier	EndFlag		1279755	1					
ANR	1279882	CompoundStatement		31:20:822:822	1279755	1					
ANR	1279883	IfStatement	if ( backwards )		1279755	0					
ANR	1279884	Condition	backwards	635:12:19794:19802	1279755	0	True				
ANR	1279885	Identifier	backwards		1279755	0					
ANR	1279886	CompoundStatement		33:23:848:848	1279755	1					
ANR	1279887	IfStatement	if ( BOF )		1279755	0					
ANR	1279888	Condition	BOF	636:16:19854:19856	1279755	0	True				
ANR	1279889	Identifier	BOF		1279755	0					
ANR	1279890	CompoundStatement		34:21:902:902	1279755	1					
ANR	1279891	BreakStatement	break ;	637:16:19909:19914	1279755	0	True				
ANR	1279892	ExpressionStatement	"offset = findPrevDelimiter ( LogFile , JobHistoryFileName , offset )"	640:12:19955:20018	1279755	1	True				
ANR	1279893	AssignmentExpression	"offset = findPrevDelimiter ( LogFile , JobHistoryFileName , offset )"		1279755	0		=			
ANR	1279894	Identifier	offset		1279755	0					
ANR	1279895	CallExpression	"findPrevDelimiter ( LogFile , JobHistoryFileName , offset )"		1279755	1					
ANR	1279896	Callee	findPrevDelimiter		1279755	0					
ANR	1279897	Identifier	findPrevDelimiter		1279755	0					
ANR	1279898	ArgumentList	LogFile		1279755	1					
ANR	1279899	Argument	LogFile		1279755	0					
ANR	1279900	Identifier	LogFile		1279755	0					
ANR	1279901	Argument	JobHistoryFileName		1279755	1					
ANR	1279902	Identifier	JobHistoryFileName		1279755	0					
ANR	1279903	Argument	offset		1279755	2					
ANR	1279904	Identifier	offset		1279755	0					
ANR	1279905	IfStatement	if ( offset == - 1 )		1279755	2					
ANR	1279906	Condition	offset == - 1	641:16:20036:20047	1279755	0	True				
ANR	1279907	EqualityExpression	offset == - 1		1279755	0		==			
ANR	1279908	Identifier	offset		1279755	0					
ANR	1279909	UnaryOperationExpression	- 1		1279755	1					
ANR	1279910	UnaryOperator	-		1279755	0					
ANR	1279911	PrimaryExpression	1		1279755	1					
ANR	1279912	CompoundStatement		39:30:1093:1093	1279755	1					
ANR	1279913	BreakStatement	break ;	642:16:20098:20103	1279755	0	True				
ANR	1279914	ElseStatement	else		1279755	0					
ANR	1279915	IfStatement	if ( offset != 0 )		1279755	0					
ANR	1279916	Condition	offset != 0	643:23:20128:20138	1279755	0	True				
ANR	1279917	EqualityExpression	offset != 0		1279755	0		!=			
ANR	1279918	Identifier	offset		1279755	0					
ANR	1279919	PrimaryExpression	0		1279755	1					
ANR	1279920	CompoundStatement		41:36:1184:1184	1279755	1					
ANR	1279921	ExpressionStatement	"fseek ( LogFile , offset , SEEK_SET )"	644:16:20159:20191	1279755	0	True				
ANR	1279922	CallExpression	"fseek ( LogFile , offset , SEEK_SET )"		1279755	0					
ANR	1279923	Callee	fseek		1279755	0					
ANR	1279924	Identifier	fseek		1279755	0					
ANR	1279925	ArgumentList	LogFile		1279755	1					
ANR	1279926	Argument	LogFile		1279755	0					
ANR	1279927	Identifier	LogFile		1279755	0					
ANR	1279928	Argument	offset		1279755	1					
ANR	1279929	Identifier	offset		1279755	0					
ANR	1279930	Argument	SEEK_SET		1279755	2					
ANR	1279931	Identifier	SEEK_SET		1279755	0					
ANR	1279932	ExpressionStatement	buf . readLine ( LogFile )	645:16:20209:20230	1279755	1	True				
ANR	1279933	CallExpression	buf . readLine ( LogFile )		1279755	0					
ANR	1279934	Callee	buf . readLine		1279755	0					
ANR	1279935	MemberAccess	buf . readLine		1279755	0					
ANR	1279936	Identifier	buf		1279755	0					
ANR	1279937	Identifier	readLine		1279755	1					
ANR	1279938	ArgumentList	LogFile		1279755	1					
ANR	1279939	Argument	LogFile		1279755	0					
ANR	1279940	Identifier	LogFile		1279755	0					
ANR	1279941	ElseStatement	else		1279755	0					
ANR	1279942	CompoundStatement		44:19:1363:1363	1279755	0					
ANR	1279943	ExpressionStatement	BOF = true	647:16:20357:20367	1279755	0	True				
ANR	1279944	AssignmentExpression	BOF = true		1279755	0		=			
ANR	1279945	Identifier	BOF		1279755	0					
ANR	1279946	Identifier	true		1279755	1					
ANR	1279947	ExpressionStatement	"fseek ( LogFile , offset , SEEK_SET )"	648:16:20385:20417	1279755	1	True				
ANR	1279948	CallExpression	"fseek ( LogFile , offset , SEEK_SET )"		1279755	0					
ANR	1279949	Callee	fseek		1279755	0					
ANR	1279950	Identifier	fseek		1279755	0					
ANR	1279951	ArgumentList	LogFile		1279755	1					
ANR	1279952	Argument	LogFile		1279755	0					
ANR	1279953	Identifier	LogFile		1279755	0					
ANR	1279954	Argument	offset		1279755	1					
ANR	1279955	Identifier	offset		1279755	0					
ANR	1279956	Argument	SEEK_SET		1279755	2					
ANR	1279957	Identifier	SEEK_SET		1279755	0					
ANR	1279958	IfStatement	"if ( ! ( ad = new AttrList ( LogFile , ""***"" , EndFlag , ErrorFlag , EmptyFlag ) ) )"		1279755	1					
ANR	1279959	Condition	"! ( ad = new AttrList ( LogFile , ""***"" , EndFlag , ErrorFlag , EmptyFlag ) )"	652:12:20462:20527	1279755	0	True				
ANR	1279960	UnaryOperationExpression	"! ( ad = new AttrList ( LogFile , ""***"" , EndFlag , ErrorFlag , EmptyFlag ) )"		1279755	0					
ANR	1279961	UnaryOperator	!		1279755	0					
ANR	1279962	AssignmentExpression	"ad = new AttrList ( LogFile , ""***"" , EndFlag , ErrorFlag , EmptyFlag )"		1279755	1		=			
ANR	1279963	Identifier	ad		1279755	0					
ANR	1279964	Expression	"LogFile , ""***"" , EndFlag , ErrorFlag , EmptyFlag"		1279755	1					
ANR	1279965	Identifier	LogFile		1279755	0					
ANR	1279966	Expression	"""***"" , EndFlag , ErrorFlag , EmptyFlag"		1279755	1					
ANR	1279967	PrimaryExpression	"""***"""		1279755	0					
ANR	1279968	Expression	"EndFlag , ErrorFlag , EmptyFlag"		1279755	1					
ANR	1279969	Identifier	EndFlag		1279755	0					
ANR	1279970	Expression	"ErrorFlag , EmptyFlag"		1279755	1					
ANR	1279971	Identifier	ErrorFlag		1279755	0					
ANR	1279972	Identifier	EmptyFlag		1279755	1					
ANR	1279973	CompoundStatement		50:80:1573:1573	1279755	1					
ANR	1279974	ExpressionStatement	"fprintf ( stderr , ""Error:  Out of memory\\n"" )"	653:12:20544:20588	1279755	0	True				
ANR	1279975	CallExpression	"fprintf ( stderr , ""Error:  Out of memory\\n"" )"		1279755	0					
ANR	1279976	Callee	fprintf		1279755	0					
ANR	1279977	Identifier	fprintf		1279755	0					
ANR	1279978	ArgumentList	stderr		1279755	1					
ANR	1279979	Argument	stderr		1279755	0					
ANR	1279980	Identifier	stderr		1279755	0					
ANR	1279981	Argument	"""Error:  Out of memory\\n"""		1279755	1					
ANR	1279982	PrimaryExpression	"""Error:  Out of memory\\n"""		1279755	0					
ANR	1279983	ExpressionStatement	exit ( 1 )	654:12:20602:20611	1279755	1	True				
ANR	1279984	CallExpression	exit ( 1 )		1279755	0					
ANR	1279985	Callee	exit		1279755	0					
ANR	1279986	Identifier	exit		1279755	0					
ANR	1279987	ArgumentList	1		1279755	1					
ANR	1279988	Argument	1		1279755	0					
ANR	1279989	PrimaryExpression	1		1279755	0					
ANR	1279990	IfStatement	if ( ErrorFlag )		1279755	2					
ANR	1279991	Condition	ErrorFlag	656:12:20636:20644	1279755	0	True				
ANR	1279992	Identifier	ErrorFlag		1279755	0					
ANR	1279993	CompoundStatement		54:24:1691:1691	1279755	1					
ANR	1279994	ExpressionStatement	"printf ( ""\\t*** Warning: Bad history file; skipping malformed ad(s)\\n"" )"	657:12:20662:20733	1279755	0	True				
ANR	1279995	CallExpression	"printf ( ""\\t*** Warning: Bad history file; skipping malformed ad(s)\\n"" )"		1279755	0					
ANR	1279996	Callee	printf		1279755	0					
ANR	1279997	Identifier	printf		1279755	0					
ANR	1279998	ArgumentList	"""\\t*** Warning: Bad history file; skipping malformed ad(s)\\n"""		1279755	1					
ANR	1279999	Argument	"""\\t*** Warning: Bad history file; skipping malformed ad(s)\\n"""		1279755	0					
ANR	1280000	PrimaryExpression	"""\\t*** Warning: Bad history file; skipping malformed ad(s)\\n"""		1279755	0					
ANR	1280001	ExpressionStatement	ErrorFlag = 0	658:12:20747:20758	1279755	1	True				
ANR	1280002	AssignmentExpression	ErrorFlag = 0		1279755	0		=			
ANR	1280003	Identifier	ErrorFlag		1279755	0					
ANR	1280004	PrimaryExpression	0		1279755	1					
ANR	1280005	IfStatement	if ( ad )		1279755	2					
ANR	1280006	Condition	ad	659:15:20775:20776	1279755	0	True				
ANR	1280007	Identifier	ad		1279755	0					
ANR	1280008	CompoundStatement		57:19:1822:1822	1279755	1					
ANR	1280009	Statement	delete	660:16:20797:20802	1279755	0	True				
ANR	1280010	ExpressionStatement	ad	660:23:20804:20806	1279755	1	True				
ANR	1280011	Identifier	ad		1279755	0					
ANR	1280012	ExpressionStatement	ad = NULL	661:16:20824:20833	1279755	2	True				
ANR	1280013	AssignmentExpression	ad = NULL		1279755	0		=			
ANR	1280014	Identifier	ad		1279755	0					
ANR	1280015	Identifier	NULL		1279755	1					
ANR	1280016	ContinueStatement	continue ;	663:12:20861:20869	1279755	3	True				
ANR	1280017	IfStatement	if ( EmptyFlag )		1279755	3					
ANR	1280018	Condition	EmptyFlag	665:12:20894:20902	1279755	0	True				
ANR	1280019	Identifier	EmptyFlag		1279755	0					
ANR	1280020	CompoundStatement		63:24:1949:1949	1279755	1					
ANR	1280021	ExpressionStatement	EmptyFlag = 0	666:12:20920:20931	1279755	0	True				
ANR	1280022	AssignmentExpression	EmptyFlag = 0		1279755	0		=			
ANR	1280023	Identifier	EmptyFlag		1279755	0					
ANR	1280024	PrimaryExpression	0		1279755	1					
ANR	1280025	IfStatement	if ( ad )		1279755	1					
ANR	1280026	Condition	ad	667:15:20948:20949	1279755	0	True				
ANR	1280027	Identifier	ad		1279755	0					
ANR	1280028	CompoundStatement		65:19:1995:1995	1279755	1					
ANR	1280029	Statement	delete	668:16:20970:20975	1279755	0	True				
ANR	1280030	ExpressionStatement	ad	668:23:20977:20979	1279755	1	True				
ANR	1280031	Identifier	ad		1279755	0					
ANR	1280032	ExpressionStatement	ad = NULL	669:16:20997:21006	1279755	2	True				
ANR	1280033	AssignmentExpression	ad = NULL		1279755	0		=			
ANR	1280034	Identifier	ad		1279755	0					
ANR	1280035	Identifier	NULL		1279755	1					
ANR	1280036	ContinueStatement	continue ;	671:12:21034:21042	1279755	2	True				
ANR	1280037	IfStatement	"if ( ! constraint || EvalBool ( ad , constraintExpr ) )"		1279755	4					
ANR	1280038	Condition	"! constraint || EvalBool ( ad , constraintExpr )"	673:12:21066:21108	1279755	0	True				
ANR	1280039	OrExpression	"! constraint || EvalBool ( ad , constraintExpr )"		1279755	0		||			
ANR	1280040	UnaryOperationExpression	! constraint		1279755	0					
ANR	1280041	UnaryOperator	!		1279755	0					
ANR	1280042	Identifier	constraint		1279755	1					
ANR	1280043	CallExpression	"EvalBool ( ad , constraintExpr )"		1279755	1					
ANR	1280044	Callee	EvalBool		1279755	0					
ANR	1280045	Identifier	EvalBool		1279755	0					
ANR	1280046	ArgumentList	ad		1279755	1					
ANR	1280047	Argument	ad		1279755	0					
ANR	1280048	Identifier	ad		1279755	0					
ANR	1280049	Argument	constraintExpr		1279755	1					
ANR	1280050	Identifier	constraintExpr		1279755	0					
ANR	1280051	CompoundStatement		71:57:2154:2154	1279755	1					
ANR	1280052	IfStatement	if ( longformat )		1279755	0					
ANR	1280053	Condition	longformat	674:16:21129:21138	1279755	0	True				
ANR	1280054	Identifier	longformat		1279755	0					
ANR	1280055	CompoundStatement		72:28:2184:2184	1279755	1					
ANR	1280056	ExpressionStatement	ad -> fPrint ( stdout )	675:16:21160:21178	1279755	0	True				
ANR	1280057	CallExpression	ad -> fPrint ( stdout )		1279755	0					
ANR	1280058	Callee	ad -> fPrint		1279755	0					
ANR	1280059	PtrMemberAccess	ad -> fPrint		1279755	0					
ANR	1280060	Identifier	ad		1279755	0					
ANR	1280061	Identifier	fPrint		1279755	1					
ANR	1280062	ArgumentList	stdout		1279755	1					
ANR	1280063	Argument	stdout		1279755	0					
ANR	1280064	Identifier	stdout		1279755	0					
ANR	1280065	ExpressionStatement	"printf ( ""\\n"" )"	675:36:21180:21192	1279755	1	True				
ANR	1280066	CallExpression	"printf ( ""\\n"" )"		1279755	0					
ANR	1280067	Callee	printf		1279755	0					
ANR	1280068	Identifier	printf		1279755	0					
ANR	1280069	ArgumentList	"""\\n"""		1279755	1					
ANR	1280070	Argument	"""\\n"""		1279755	0					
ANR	1280071	PrimaryExpression	"""\\n"""		1279755	0					
ANR	1280072	ElseStatement	else		1279755	0					
ANR	1280073	CompoundStatement		74:19:2257:2257	1279755	0					
ANR	1280074	IfStatement	if ( customFormat )		1279755	0					
ANR	1280075	Condition	customFormat	677:20:21236:21247	1279755	0	True				
ANR	1280076	Identifier	customFormat		1279755	0					
ANR	1280077	CompoundStatement		75:34:2293:2293	1279755	1					
ANR	1280078	ExpressionStatement	"mask . display ( stdout , ad )"	678:20:21272:21296	1279755	0	True				
ANR	1280079	CallExpression	"mask . display ( stdout , ad )"		1279755	0					
ANR	1280080	Callee	mask . display		1279755	0					
ANR	1280081	MemberAccess	mask . display		1279755	0					
ANR	1280082	Identifier	mask		1279755	0					
ANR	1280083	Identifier	display		1279755	1					
ANR	1280084	ArgumentList	stdout		1279755	1					
ANR	1280085	Argument	stdout		1279755	0					
ANR	1280086	Identifier	stdout		1279755	0					
ANR	1280087	Argument	ad		1279755	1					
ANR	1280088	Identifier	ad		1279755	0					
ANR	1280089	ElseStatement	else		1279755	0					
ANR	1280090	CompoundStatement		77:23:2364:2364	1279755	0					
ANR	1280091	ExpressionStatement	displayJobShort ( ad )	680:20:21343:21362	1279755	0	True				
ANR	1280092	CallExpression	displayJobShort ( ad )		1279755	0					
ANR	1280093	Callee	displayJobShort		1279755	0					
ANR	1280094	Identifier	displayJobShort		1279755	0					
ANR	1280095	ArgumentList	ad		1279755	1					
ANR	1280096	Argument	ad		1279755	0					
ANR	1280097	Identifier	ad		1279755	0					
ANR	1280098	ExpressionStatement	matchCount ++	684:12:21409:21421	1279755	1	True				
ANR	1280099	PostIncDecOperationExpression	matchCount ++		1279755	0					
ANR	1280100	Identifier	matchCount		1279755	0					
ANR	1280101	IncDec	++		1279755	1					
ANR	1280102	IfStatement	if ( specifiedMatch != 0 )		1279755	2					
ANR	1280103	Condition	specifiedMatch != 0	686:16:21486:21504	1279755	0	True				
ANR	1280104	EqualityExpression	specifiedMatch != 0		1279755	0		!=			
ANR	1280105	Identifier	specifiedMatch		1279755	0					
ANR	1280106	PrimaryExpression	0		1279755	1					
ANR	1280107	CompoundStatement		84:37:2550:2550	1279755	1					
ANR	1280108	IfStatement	if ( matchCount == specifiedMatch )		1279755	0					
ANR	1280109	Condition	matchCount == specifiedMatch	687:20:21562:21589	1279755	0	True				
ANR	1280110	EqualityExpression	matchCount == specifiedMatch		1279755	0		==			
ANR	1280111	Identifier	matchCount		1279755	0					
ANR	1280112	Identifier	specifiedMatch		1279755	1					
ANR	1280113	CompoundStatement		85:50:2635:2635	1279755	1					
ANR	1280114	IfStatement	if ( ad )		1279755	0					
ANR	1280115	Condition	ad	688:24:21658:21659	1279755	0	True				
ANR	1280116	Identifier	ad		1279755	0					
ANR	1280117	CompoundStatement		86:28:2705:2705	1279755	1					
ANR	1280118	Statement	delete	689:24:21688:21693	1279755	0	True				
ANR	1280119	ExpressionStatement	ad	689:31:21695:21697	1279755	1	True				
ANR	1280120	Identifier	ad		1279755	0					
ANR	1280121	ExpressionStatement	ad = NULL	690:24:21723:21732	1279755	2	True				
ANR	1280122	AssignmentExpression	ad = NULL		1279755	0		=			
ANR	1280123	Identifier	ad		1279755	0					
ANR	1280124	Identifier	NULL		1279755	1					
ANR	1280125	ExpressionStatement	fclose ( LogFile )	693:20:21797:21812	1279755	1	True				
ANR	1280126	CallExpression	fclose ( LogFile )		1279755	0					
ANR	1280127	Callee	fclose		1279755	0					
ANR	1280128	Identifier	fclose		1279755	0					
ANR	1280129	ArgumentList	LogFile		1279755	1					
ANR	1280130	Argument	LogFile		1279755	0					
ANR	1280131	Identifier	LogFile		1279755	0					
ANR	1280132	ReturnStatement	return ;	694:20:21834:21840	1279755	2	True				
ANR	1280133	IfStatement	if ( ad )		1279755	5					
ANR	1280134	Condition	ad	699:11:21892:21893	1279755	0	True				
ANR	1280135	Identifier	ad		1279755	0					
ANR	1280136	CompoundStatement		97:15:2939:2939	1279755	1					
ANR	1280137	Statement	delete	700:12:21910:21915	1279755	0	True				
ANR	1280138	ExpressionStatement	ad	700:19:21917:21919	1279755	1	True				
ANR	1280139	Identifier	ad		1279755	0					
ANR	1280140	ExpressionStatement	ad = NULL	701:12:21933:21942	1279755	2	True				
ANR	1280141	AssignmentExpression	ad = NULL		1279755	0		=			
ANR	1280142	Identifier	ad		1279755	0					
ANR	1280143	Identifier	NULL		1279755	1					
ANR	1280144	ExpressionStatement	fclose ( LogFile )	704:4:21964:21979	1279755	12	True				
ANR	1280145	CallExpression	fclose ( LogFile )		1279755	0					
ANR	1280146	Callee	fclose		1279755	0					
ANR	1280147	Identifier	fclose		1279755	0					
ANR	1280148	ArgumentList	LogFile		1279755	1					
ANR	1280149	Argument	LogFile		1279755	0					
ANR	1280150	Identifier	LogFile		1279755	0					
ANR	1280151	ReturnStatement	return ;	705:4:21985:21991	1279755	13	True				
ANR	1280152	ReturnType	static void		1279755	1					
ANR	1280153	Identifier	readHistoryFromFile		1279755	2					
ANR	1280154	ParameterList	"char * JobHistoryFileName , char * constraint , ExprTree * constraintExpr"		1279755	3					
ANR	1280155	Parameter	char * JobHistoryFileName	602:32:18886:18909	1279755	0	True				
ANR	1280156	ParameterType	char *		1279755	0					
ANR	1280157	Identifier	JobHistoryFileName		1279755	1					
ANR	1280158	Parameter	char * constraint	602:58:18912:18927	1279755	1	True				
ANR	1280159	ParameterType	char *		1279755	0					
ANR	1280160	Identifier	constraint		1279755	1					
ANR	1280161	Parameter	ExprTree * constraintExpr	602:76:18930:18953	1279755	2	True				
ANR	1280162	ParameterType	ExprTree *		1279755	0					
ANR	1280163	Identifier	constraintExpr		1279755	1					
ANR	1280164	CFGEntryNode	ENTRY		1279755		True				
ANR	1280165	CFGExitNode	EXIT		1279755		True				
ANR	1280166	Symbol	stdout		1279755						
ANR	1280167	Symbol	findPrevDelimiter		1279755						
ANR	1280168	Symbol	LogFile		1279755						
ANR	1280169	Symbol	constraintExpr		1279755						
ANR	1280170	Symbol	JobHistoryFileName		1279755						
ANR	1280171	Symbol	BOF		1279755						
ANR	1280172	Symbol	longformat		1279755						
ANR	1280173	Symbol	mask		1279755						
ANR	1280174	Symbol	SEEK_SET		1279755						
ANR	1280175	Symbol	EndFlag		1279755						
ANR	1280176	Symbol	NULL		1279755						
ANR	1280177	Symbol	ad		1279755						
ANR	1280178	Symbol	ErrorFlag		1279755						
ANR	1280179	Symbol	offset		1279755						
ANR	1280180	Symbol	safe_fopen_wrapper		1279755						
ANR	1280181	Symbol	false		1279755						
ANR	1280182	Symbol	specifiedMatch		1279755						
ANR	1280183	Symbol	matchCount		1279755						
ANR	1280184	Symbol	stderr		1279755						
ANR	1280185	Symbol	backwards		1279755						
ANR	1280186	Symbol	EvalBool		1279755						
ANR	1280187	Symbol	customFormat		1279755						
ANR	1280188	Symbol	EmptyFlag		1279755						
ANR	1280189	Symbol	findLastDelimiter		1279755						
ANR	1280190	Symbol	buf		1279755						
ANR	1280191	Symbol	true		1279755						
ANR	1280192	Symbol	constraint		1279755						
