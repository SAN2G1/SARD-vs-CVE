command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1136023	File	data/converged/CVE-2011-4930_htcondor/dap_classad_reader.cpp								
ANR	1136024	Function	getValue	26:0:989:2708							
ANR	1136025	FunctionDef	"getValue (classad :: ClassAd * currentAd , char * attr , char * attrval)"		1136024	0					
ANR	1136026	CompoundStatement		27:0:1058:2708	1136024	0					
ANR	1136027	IdentifierDeclStatement	char tempattrval [ MAXSTR ] ;	28:2:1062:1086	1136024	0	True				
ANR	1136028	IdentifierDecl	tempattrval [ MAXSTR ]		1136024	0					
ANR	1136029	IdentifierDeclType	char [ MAXSTR ]		1136024	0					
ANR	1136030	Identifier	tempattrval		1136024	1					
ANR	1136031	Identifier	MAXSTR		1136024	2					
ANR	1136032	IdentifierDeclStatement	"std :: string adbuffer = """" ;"	29:2:1090:1115	1136024	1	True				
ANR	1136033	IdentifierDecl	"adbuffer = """""		1136024	0					
ANR	1136034	IdentifierDeclType	std :: string		1136024	0					
ANR	1136035	Identifier	adbuffer		1136024	1					
ANR	1136036	AssignmentExpression	"adbuffer = """""		1136024	2		=			
ANR	1136037	Identifier	adbuffer		1136024	0					
ANR	1136038	PrimaryExpression	""""""		1136024	1					
ANR	1136039	IdentifierDeclStatement	classad :: ClassAdUnParser unparser ;	30:2:1119:1152	1136024	2	True				
ANR	1136040	IdentifierDecl	unparser		1136024	0					
ANR	1136041	IdentifierDeclType	classad :: ClassAdUnParser		1136024	0					
ANR	1136042	Identifier	unparser		1136024	1					
ANR	1136043	IdentifierDeclStatement	classad :: ExprTree * attrexpr = NULL ;	31:2:1156:1190	1136024	3	True				
ANR	1136044	IdentifierDecl	* attrexpr = NULL		1136024	0					
ANR	1136045	IdentifierDeclType	classad :: ExprTree *		1136024	0					
ANR	1136046	Identifier	attrexpr		1136024	1					
ANR	1136047	AssignmentExpression	* attrexpr = NULL		1136024	2		=			
ANR	1136048	Identifier	NULL		1136024	0					
ANR	1136049	Identifier	NULL		1136024	1					
ANR	1136050	IdentifierDeclStatement	char unstripped [ MAXSTR ] ;	32:2:1194:1217	1136024	4	True				
ANR	1136051	IdentifierDecl	unstripped [ MAXSTR ]		1136024	0					
ANR	1136052	IdentifierDeclType	char [ MAXSTR ]		1136024	0					
ANR	1136053	Identifier	unstripped		1136024	1					
ANR	1136054	Identifier	MAXSTR		1136024	2					
ANR	1136055	IfStatement	if ( ! ( attrexpr = currentAd -> Lookup ( attr ) ) )		1136024	5					
ANR	1136056	Condition	! ( attrexpr = currentAd -> Lookup ( attr ) )	34:6:1226:1262	1136024	0	True				
ANR	1136057	UnaryOperationExpression	! ( attrexpr = currentAd -> Lookup ( attr ) )		1136024	0					
ANR	1136058	UnaryOperator	!		1136024	0					
ANR	1136059	AssignmentExpression	attrexpr = currentAd -> Lookup ( attr )		1136024	1		=			
ANR	1136060	Identifier	attrexpr		1136024	0					
ANR	1136061	CallExpression	currentAd -> Lookup ( attr )		1136024	1					
ANR	1136062	Callee	currentAd -> Lookup		1136024	0					
ANR	1136063	PtrMemberAccess	currentAd -> Lookup		1136024	0					
ANR	1136064	Identifier	currentAd		1136024	0					
ANR	1136065	Identifier	Lookup		1136024	1					
ANR	1136066	ArgumentList	attr		1136024	1					
ANR	1136067	Argument	attr		1136024	0					
ANR	1136068	Identifier	attr		1136024	0					
ANR	1136069	CompoundStatement		8:45:206:206	1136024	1					
ANR	1136070	ExpressionStatement	"strncpy ( attrval , """" , MAXSTR )"	36:4:1314:1342	1136024	0	True				
ANR	1136071	CallExpression	"strncpy ( attrval , """" , MAXSTR )"		1136024	0					
ANR	1136072	Callee	strncpy		1136024	0					
ANR	1136073	Identifier	strncpy		1136024	0					
ANR	1136074	ArgumentList	attrval		1136024	1					
ANR	1136075	Argument	attrval		1136024	0					
ANR	1136076	Identifier	attrval		1136024	0					
ANR	1136077	Argument	""""""		1136024	1					
ANR	1136078	PrimaryExpression	""""""		1136024	0					
ANR	1136079	Argument	MAXSTR		1136024	2					
ANR	1136080	Identifier	MAXSTR		1136024	0					
ANR	1136081	ReturnStatement	return DAP_ERROR ;	37:4:1348:1364	1136024	1	True				
ANR	1136082	Identifier	DAP_ERROR		1136024	0					
ANR	1136083	ExpressionStatement	"unparser . Unparse ( adbuffer , attrexpr )"	40:2:1373:1408	1136024	6	True				
ANR	1136084	CallExpression	"unparser . Unparse ( adbuffer , attrexpr )"		1136024	0					
ANR	1136085	Callee	unparser . Unparse		1136024	0					
ANR	1136086	MemberAccess	unparser . Unparse		1136024	0					
ANR	1136087	Identifier	unparser		1136024	0					
ANR	1136088	Identifier	Unparse		1136024	1					
ANR	1136089	ArgumentList	adbuffer		1136024	1					
ANR	1136090	Argument	adbuffer		1136024	0					
ANR	1136091	Identifier	adbuffer		1136024	0					
ANR	1136092	Argument	attrexpr		1136024	1					
ANR	1136093	Identifier	attrexpr		1136024	0					
ANR	1136094	ExpressionStatement	"strncpy ( attrval , adbuffer . c_str ( ) , MAXSTR )"	41:2:1412:1454	1136024	7	True				
ANR	1136095	CallExpression	"strncpy ( attrval , adbuffer . c_str ( ) , MAXSTR )"		1136024	0					
ANR	1136096	Callee	strncpy		1136024	0					
ANR	1136097	Identifier	strncpy		1136024	0					
ANR	1136098	ArgumentList	attrval		1136024	1					
ANR	1136099	Argument	attrval		1136024	0					
ANR	1136100	Identifier	attrval		1136024	0					
ANR	1136101	Argument	adbuffer . c_str ( )		1136024	1					
ANR	1136102	CallExpression	adbuffer . c_str ( )		1136024	0					
ANR	1136103	Callee	adbuffer . c_str		1136024	0					
ANR	1136104	MemberAccess	adbuffer . c_str		1136024	0					
ANR	1136105	Identifier	adbuffer		1136024	0					
ANR	1136106	Identifier	c_str		1136024	1					
ANR	1136107	ArgumentList			1136024	1					
ANR	1136108	Argument	MAXSTR		1136024	2					
ANR	1136109	Identifier	MAXSTR		1136024	0					
ANR	1136110	ExpressionStatement	"strncpy ( unstripped , attrval , MAXSTR )"	43:2:1459:1495	1136024	8	True				
ANR	1136111	CallExpression	"strncpy ( unstripped , attrval , MAXSTR )"		1136024	0					
ANR	1136112	Callee	strncpy		1136024	0					
ANR	1136113	Identifier	strncpy		1136024	0					
ANR	1136114	ArgumentList	unstripped		1136024	1					
ANR	1136115	Argument	unstripped		1136024	0					
ANR	1136116	Identifier	unstripped		1136024	0					
ANR	1136117	Argument	attrval		1136024	1					
ANR	1136118	Identifier	attrval		1136024	0					
ANR	1136119	Argument	MAXSTR		1136024	2					
ANR	1136120	Identifier	MAXSTR		1136024	0					
ANR	1136121	ExpressionStatement	"strncpy ( tempattrval , strip_str ( unstripped ) , MAXSTR )"	46:2:1531:1582	1136024	9	True				
ANR	1136122	CallExpression	"strncpy ( tempattrval , strip_str ( unstripped ) , MAXSTR )"		1136024	0					
ANR	1136123	Callee	strncpy		1136024	0					
ANR	1136124	Identifier	strncpy		1136024	0					
ANR	1136125	ArgumentList	tempattrval		1136024	1					
ANR	1136126	Argument	tempattrval		1136024	0					
ANR	1136127	Identifier	tempattrval		1136024	0					
ANR	1136128	Argument	strip_str ( unstripped )		1136024	1					
ANR	1136129	CallExpression	strip_str ( unstripped )		1136024	0					
ANR	1136130	Callee	strip_str		1136024	0					
ANR	1136131	Identifier	strip_str		1136024	0					
ANR	1136132	ArgumentList	unstripped		1136024	1					
ANR	1136133	Argument	unstripped		1136024	0					
ANR	1136134	Identifier	unstripped		1136024	0					
ANR	1136135	Argument	MAXSTR		1136024	2					
ANR	1136136	Identifier	MAXSTR		1136024	0					
ANR	1136137	IfStatement	if ( tempattrval [ 0 ] == '$' )		1136024	10					
ANR	1136138	Condition	tempattrval [ 0 ] == '$'	47:6:1592:1612	1136024	0	True				
ANR	1136139	EqualityExpression	tempattrval [ 0 ] == '$'		1136024	0		==			
ANR	1136140	ArrayIndexing	tempattrval [ 0 ]		1136024	0					
ANR	1136141	Identifier	tempattrval		1136024	0					
ANR	1136142	PrimaryExpression	0		1136024	1					
ANR	1136143	PrimaryExpression	'$'		1136024	1					
ANR	1136144	CompoundStatement		22:4:561:586	1136024	1					
ANR	1136145	IdentifierDeclStatement	char functionname [ MAXSTR ] ;	48:4:1620:1645	1136024	0	True				
ANR	1136146	IdentifierDecl	functionname [ MAXSTR ]		1136024	0					
ANR	1136147	IdentifierDeclType	char [ MAXSTR ]		1136024	0					
ANR	1136148	Identifier	functionname		1136024	1					
ANR	1136149	Identifier	MAXSTR		1136024	2					
ANR	1136150	ExpressionStatement	"strcpy ( functionname , strtok ( tempattrval , ""("" ) )"	50:4:1656:1703	1136024	1	True				
ANR	1136151	CallExpression	"strcpy ( functionname , strtok ( tempattrval , ""("" ) )"		1136024	0					
ANR	1136152	Callee	strcpy		1136024	0					
ANR	1136153	Identifier	strcpy		1136024	0					
ANR	1136154	ArgumentList	functionname		1136024	1					
ANR	1136155	Argument	functionname		1136024	0					
ANR	1136156	Identifier	functionname		1136024	0					
ANR	1136157	Argument	"strtok ( tempattrval , ""("" )"		1136024	1					
ANR	1136158	CallExpression	"strtok ( tempattrval , ""("" )"		1136024	0					
ANR	1136159	Callee	strtok		1136024	0					
ANR	1136160	Identifier	strtok		1136024	0					
ANR	1136161	ArgumentList	tempattrval		1136024	1					
ANR	1136162	Argument	tempattrval		1136024	0					
ANR	1136163	Identifier	tempattrval		1136024	0					
ANR	1136164	Argument	"""("""		1136024	1					
ANR	1136165	PrimaryExpression	"""("""		1136024	0					
ANR	1136166	IfStatement	"if ( ! strcmp ( functionname , ""$read_from_file"" ) )"		1136024	2					
ANR	1136167	Condition	"! strcmp ( functionname , ""$read_from_file"" )"	53:8:1776:1815	1136024	0	True				
ANR	1136168	UnaryOperationExpression	"! strcmp ( functionname , ""$read_from_file"" )"		1136024	0					
ANR	1136169	UnaryOperator	!		1136024	0					
ANR	1136170	CallExpression	"strcmp ( functionname , ""$read_from_file"" )"		1136024	1					
ANR	1136171	Callee	strcmp		1136024	0					
ANR	1136172	Identifier	strcmp		1136024	0					
ANR	1136173	ArgumentList	functionname		1136024	1					
ANR	1136174	Argument	functionname		1136024	0					
ANR	1136175	Identifier	functionname		1136024	0					
ANR	1136176	Argument	"""$read_from_file"""		1136024	1					
ANR	1136177	PrimaryExpression	"""$read_from_file"""		1136024	0					
ANR	1136178	CompoundStatement		51:6:1251:1258	1136024	1					
ANR	1136179	IdentifierDeclStatement	"char filename [ MAXSTR ] , attrname [ MAXSTR ] ;"	54:6:1825:1864	1136024	0	True				
ANR	1136180	IdentifierDecl	filename [ MAXSTR ]		1136024	0					
ANR	1136181	IdentifierDeclType	char [ MAXSTR ]		1136024	0					
ANR	1136182	Identifier	filename		1136024	1					
ANR	1136183	Identifier	MAXSTR		1136024	2					
ANR	1136184	IdentifierDecl	attrname [ MAXSTR ]		1136024	1					
ANR	1136185	IdentifierDeclType	char [ MAXSTR ]		1136024	0					
ANR	1136186	Identifier	attrname		1136024	1					
ANR	1136187	Identifier	MAXSTR		1136024	2					
ANR	1136188	IdentifierDeclStatement	char * p ;	55:6:1872:1879	1136024	1	True				
ANR	1136189	IdentifierDecl	* p		1136024	0					
ANR	1136190	IdentifierDeclType	char *		1136024	0					
ANR	1136191	Identifier	p		1136024	1					
ANR	1136192	ExpressionStatement	"p = strtok ( NULL , "","" )"	57:6:1894:1914	1136024	2	True				
ANR	1136193	AssignmentExpression	"p = strtok ( NULL , "","" )"		1136024	0		=			
ANR	1136194	Identifier	p		1136024	0					
ANR	1136195	CallExpression	"strtok ( NULL , "","" )"		1136024	1					
ANR	1136196	Callee	strtok		1136024	0					
ANR	1136197	Identifier	strtok		1136024	0					
ANR	1136198	ArgumentList	NULL		1136024	1					
ANR	1136199	Argument	NULL		1136024	0					
ANR	1136200	Identifier	NULL		1136024	0					
ANR	1136201	Argument	""","""		1136024	1					
ANR	1136202	PrimaryExpression	""","""		1136024	0					
ANR	1136203	IfStatement	if ( p != NULL )		1136024	3					
ANR	1136204	Condition	p != NULL	58:10:1926:1934	1136024	0	True				
ANR	1136205	EqualityExpression	p != NULL		1136024	0		!=			
ANR	1136206	Identifier	p		1136024	0					
ANR	1136207	Identifier	NULL		1136024	1					
ANR	1136208	CompoundStatement		32:20:877:877	1136024	1					
ANR	1136209	ExpressionStatement	"strcpy ( filename , strip_str ( p ) )"	59:1:1939:1969	1136024	0	True				
ANR	1136210	CallExpression	"strcpy ( filename , strip_str ( p ) )"		1136024	0					
ANR	1136211	Callee	strcpy		1136024	0					
ANR	1136212	Identifier	strcpy		1136024	0					
ANR	1136213	ArgumentList	filename		1136024	1					
ANR	1136214	Argument	filename		1136024	0					
ANR	1136215	Identifier	filename		1136024	0					
ANR	1136216	Argument	strip_str ( p )		1136024	1					
ANR	1136217	CallExpression	strip_str ( p )		1136024	0					
ANR	1136218	Callee	strip_str		1136024	0					
ANR	1136219	Identifier	strip_str		1136024	0					
ANR	1136220	ArgumentList	p		1136024	1					
ANR	1136221	Argument	p		1136024	0					
ANR	1136222	Identifier	p		1136024	0					
ANR	1136223	ElseStatement	else		1136024	0					
ANR	1136224	CompoundStatement		35:10:947:947	1136024	0					
ANR	1136225	ExpressionStatement	"strcpy ( filename , """" )"	62:1:2009:2029	1136024	0	True				
ANR	1136226	CallExpression	"strcpy ( filename , """" )"		1136024	0					
ANR	1136227	Callee	strcpy		1136024	0					
ANR	1136228	Identifier	strcpy		1136024	0					
ANR	1136229	ArgumentList	filename		1136024	1					
ANR	1136230	Argument	filename		1136024	0					
ANR	1136231	Identifier	filename		1136024	0					
ANR	1136232	Argument	""""""		1136024	1					
ANR	1136233	PrimaryExpression	""""""		1136024	0					
ANR	1136234	ExpressionStatement	"p = strtok ( NULL , "")"" )"	66:6:2053:2073	1136024	4	True				
ANR	1136235	AssignmentExpression	"p = strtok ( NULL , "")"" )"		1136024	0		=			
ANR	1136236	Identifier	p		1136024	0					
ANR	1136237	CallExpression	"strtok ( NULL , "")"" )"		1136024	1					
ANR	1136238	Callee	strtok		1136024	0					
ANR	1136239	Identifier	strtok		1136024	0					
ANR	1136240	ArgumentList	NULL		1136024	1					
ANR	1136241	Argument	NULL		1136024	0					
ANR	1136242	Identifier	NULL		1136024	0					
ANR	1136243	Argument	""")"""		1136024	1					
ANR	1136244	PrimaryExpression	""")"""		1136024	0					
ANR	1136245	IfStatement	if ( p != NULL )		1136024	5					
ANR	1136246	Condition	p != NULL	67:10:2085:2093	1136024	0	True				
ANR	1136247	EqualityExpression	p != NULL		1136024	0		!=			
ANR	1136248	Identifier	p		1136024	0					
ANR	1136249	Identifier	NULL		1136024	1					
ANR	1136250	CompoundStatement		41:20:1036:1036	1136024	1					
ANR	1136251	ExpressionStatement	"strcpy ( attrname , strip_str ( p ) )"	68:1:2098:2128	1136024	0	True				
ANR	1136252	CallExpression	"strcpy ( attrname , strip_str ( p ) )"		1136024	0					
ANR	1136253	Callee	strcpy		1136024	0					
ANR	1136254	Identifier	strcpy		1136024	0					
ANR	1136255	ArgumentList	attrname		1136024	1					
ANR	1136256	Argument	attrname		1136024	0					
ANR	1136257	Identifier	attrname		1136024	0					
ANR	1136258	Argument	strip_str ( p )		1136024	1					
ANR	1136259	CallExpression	strip_str ( p )		1136024	0					
ANR	1136260	Callee	strip_str		1136024	0					
ANR	1136261	Identifier	strip_str		1136024	0					
ANR	1136262	ArgumentList	p		1136024	1					
ANR	1136263	Argument	p		1136024	0					
ANR	1136264	Identifier	p		1136024	0					
ANR	1136265	ElseStatement	else		1136024	0					
ANR	1136266	CompoundStatement		44:10:1103:1103	1136024	0					
ANR	1136267	ExpressionStatement	"strcpy ( attrname , """" )"	71:1:2165:2185	1136024	0	True				
ANR	1136268	CallExpression	"strcpy ( attrname , """" )"		1136024	0					
ANR	1136269	Callee	strcpy		1136024	0					
ANR	1136270	Identifier	strcpy		1136024	0					
ANR	1136271	ArgumentList	attrname		1136024	1					
ANR	1136272	Argument	attrname		1136024	0					
ANR	1136273	Identifier	attrname		1136024	0					
ANR	1136274	Argument	""""""		1136024	1					
ANR	1136275	PrimaryExpression	""""""		1136024	0					
ANR	1136276	IdentifierDeclStatement	classad :: ClassAd * newAd = 0 ;	75:6:2238:2265	1136024	6	True				
ANR	1136277	IdentifierDecl	* newAd = 0		1136024	0					
ANR	1136278	IdentifierDeclType	classad :: ClassAd *		1136024	0					
ANR	1136279	Identifier	newAd		1136024	1					
ANR	1136280	AssignmentExpression	* newAd = 0		1136024	2		=			
ANR	1136281	Identifier	newAd		1136024	0					
ANR	1136282	PrimaryExpression	0		1136024	1					
ANR	1136283	IdentifierDeclStatement	classad :: ClassAdParser parser ;	76:6:2273:2302	1136024	7	True				
ANR	1136284	IdentifierDecl	parser		1136024	0					
ANR	1136285	IdentifierDeclType	classad :: ClassAdParser		1136024	0					
ANR	1136286	Identifier	parser		1136024	1					
ANR	1136287	IdentifierDeclStatement	FILE * f ;	77:6:2310:2317	1136024	8	True				
ANR	1136288	IdentifierDecl	* f		1136024	0					
ANR	1136289	IdentifierDeclType	FILE *		1136024	0					
ANR	1136290	Identifier	f		1136024	1					
ANR	1136291	ExpressionStatement	"f = safe_fopen_wrapper ( filename , ""r"" )"	79:6:2332:2369	1136024	9	True				
ANR	1136292	AssignmentExpression	"f = safe_fopen_wrapper ( filename , ""r"" )"		1136024	0		=			
ANR	1136293	Identifier	f		1136024	0					
ANR	1136294	CallExpression	"safe_fopen_wrapper ( filename , ""r"" )"		1136024	1					
ANR	1136295	Callee	safe_fopen_wrapper		1136024	0					
ANR	1136296	Identifier	safe_fopen_wrapper		1136024	0					
ANR	1136297	ArgumentList	filename		1136024	1					
ANR	1136298	Argument	filename		1136024	0					
ANR	1136299	Identifier	filename		1136024	0					
ANR	1136300	Argument	"""r"""		1136024	1					
ANR	1136301	PrimaryExpression	"""r"""		1136024	0					
ANR	1136302	IfStatement	if ( f == NULL )		1136024	10					
ANR	1136303	Condition	f == NULL	80:10:2381:2389	1136024	0	True				
ANR	1136304	EqualityExpression	f == NULL		1136024	0		==			
ANR	1136305	Identifier	f		1136024	0					
ANR	1136306	Identifier	NULL		1136024	1					
ANR	1136307	CompoundStatement		54:20:1332:1332	1136024	1					
ANR	1136308	ExpressionStatement	"dprintf ( D_ALWAYS , ""error in opening file: %s\\n"" , filename )"	81:1:2394:2452	1136024	0	True				
ANR	1136309	CallExpression	"dprintf ( D_ALWAYS , ""error in opening file: %s\\n"" , filename )"		1136024	0					
ANR	1136310	Callee	dprintf		1136024	0					
ANR	1136311	Identifier	dprintf		1136024	0					
ANR	1136312	ArgumentList	D_ALWAYS		1136024	1					
ANR	1136313	Argument	D_ALWAYS		1136024	0					
ANR	1136314	Identifier	D_ALWAYS		1136024	0					
ANR	1136315	Argument	"""error in opening file: %s\\n"""		1136024	1					
ANR	1136316	PrimaryExpression	"""error in opening file: %s\\n"""		1136024	0					
ANR	1136317	Argument	filename		1136024	2					
ANR	1136318	Identifier	filename		1136024	0					
ANR	1136319	ReturnStatement	return DAP_ERROR ;	82:1:2455:2471	1136024	1	True				
ANR	1136320	Identifier	DAP_ERROR		1136024	0					
ANR	1136321	ExpressionStatement	newAd = parser . ParseClassAd ( f )	85:6:2494:2524	1136024	11	True				
ANR	1136322	AssignmentExpression	newAd = parser . ParseClassAd ( f )		1136024	0		=			
ANR	1136323	Identifier	newAd		1136024	0					
ANR	1136324	CallExpression	parser . ParseClassAd ( f )		1136024	1					
ANR	1136325	Callee	parser . ParseClassAd		1136024	0					
ANR	1136326	MemberAccess	parser . ParseClassAd		1136024	0					
ANR	1136327	Identifier	parser		1136024	0					
ANR	1136328	Identifier	ParseClassAd		1136024	1					
ANR	1136329	ArgumentList	f		1136024	1					
ANR	1136330	Argument	f		1136024	0					
ANR	1136331	Identifier	f		1136024	0					
ANR	1136332	ExpressionStatement	"getValue ( newAd , attrname , attrval )"	87:6:2533:2567	1136024	12	True				
ANR	1136333	CallExpression	"getValue ( newAd , attrname , attrval )"		1136024	0					
ANR	1136334	Callee	getValue		1136024	0					
ANR	1136335	Identifier	getValue		1136024	0					
ANR	1136336	ArgumentList	newAd		1136024	1					
ANR	1136337	Argument	newAd		1136024	0					
ANR	1136338	Identifier	newAd		1136024	0					
ANR	1136339	Argument	attrname		1136024	1					
ANR	1136340	Identifier	attrname		1136024	0					
ANR	1136341	Argument	attrval		1136024	2					
ANR	1136342	Identifier	attrval		1136024	0					
ANR	1136343	ExpressionStatement	"strcpy ( attrval , strip_str ( attrval ) )"	88:6:2575:2610	1136024	13	True				
ANR	1136344	CallExpression	"strcpy ( attrval , strip_str ( attrval ) )"		1136024	0					
ANR	1136345	Callee	strcpy		1136024	0					
ANR	1136346	Identifier	strcpy		1136024	0					
ANR	1136347	ArgumentList	attrval		1136024	1					
ANR	1136348	Argument	attrval		1136024	0					
ANR	1136349	Identifier	attrval		1136024	0					
ANR	1136350	Argument	strip_str ( attrval )		1136024	1					
ANR	1136351	CallExpression	strip_str ( attrval )		1136024	0					
ANR	1136352	Callee	strip_str		1136024	0					
ANR	1136353	Identifier	strip_str		1136024	0					
ANR	1136354	ArgumentList	attrval		1136024	1					
ANR	1136355	Argument	attrval		1136024	0					
ANR	1136356	Identifier	attrval		1136024	0					
ANR	1136357	ReturnStatement	return DAP_SUCCESS ;	93:2:2687:2705	1136024	11	True				
ANR	1136358	Identifier	DAP_SUCCESS		1136024	0					
ANR	1136359	ReturnType	int		1136024	1					
ANR	1136360	Identifier	getValue		1136024	2					
ANR	1136361	ParameterList	"classad :: ClassAd * currentAd , char * attr , char * attrval"		1136024	3					
ANR	1136362	Parameter	classad :: ClassAd * currentAd	26:13:1002:1028	1136024	0	True				
ANR	1136363	ParameterType	classad :: ClassAd *		1136024	0					
ANR	1136364	Identifier	currentAd		1136024	1					
ANR	1136365	Parameter	char * attr	26:42:1031:1040	1136024	1	True				
ANR	1136366	ParameterType	char *		1136024	0					
ANR	1136367	Identifier	attr		1136024	1					
ANR	1136368	Parameter	char * attrval	26:54:1043:1055	1136024	2	True				
ANR	1136369	ParameterType	char *		1136024	0					
ANR	1136370	Identifier	attrval		1136024	1					
ANR	1136371	CFGEntryNode	ENTRY		1136024		True				
ANR	1136372	CFGExitNode	EXIT		1136024		True				
ANR	1136373	Symbol	DAP_ERROR		1136024						
ANR	1136374	Symbol	currentAd		1136024						
ANR	1136375	Symbol	DAP_SUCCESS		1136024						
ANR	1136376	Symbol	attrval		1136024						
ANR	1136377	Symbol	functionname		1136024						
ANR	1136378	Symbol	currentAd -> Lookup		1136024						
ANR	1136379	Symbol	strip_str		1136024						
ANR	1136380	Symbol	attr		1136024						
ANR	1136381	Symbol	newAd		1136024						
ANR	1136382	Symbol	strcmp		1136024						
ANR	1136383	Symbol	NULL		1136024						
ANR	1136384	Symbol	* currentAd		1136024						
ANR	1136385	Symbol	safe_fopen_wrapper		1136024						
ANR	1136386	Symbol	f		1136024						
ANR	1136387	Symbol	unstripped		1136024						
ANR	1136388	Symbol	D_ALWAYS		1136024						
ANR	1136389	Symbol	strtok		1136024						
ANR	1136390	Symbol	attrexpr		1136024						
ANR	1136391	Symbol	attrname		1136024						
ANR	1136392	Symbol	parser . ParseClassAd		1136024						
ANR	1136393	Symbol	MAXSTR		1136024						
ANR	1136394	Symbol	p		1136024						
ANR	1136395	Symbol	filename		1136024						
ANR	1136396	Symbol	tempattrval		1136024						
ANR	1136397	Symbol	parser		1136024						
ANR	1136398	Symbol	unparser		1136024						
ANR	1136399	Symbol	* tempattrval		1136024						
ANR	1136400	Symbol	adbuffer . c_str		1136024						
ANR	1136401	Symbol	adbuffer		1136024						
ANR	1136402	Function	ClassAd_Reader :: ClassAd_Reader	101:0:2836:3153							
ANR	1136403	FunctionDef	ClassAd_Reader :: ClassAd_Reader (const char * fname)		1136402	0					
ANR	1136404	CompoundStatement		102:0:2886:3153	1136402	0					
ANR	1136405	ExpressionStatement	currentAd = NULL	104:2:2891:2907	1136402	0	True				
ANR	1136406	AssignmentExpression	currentAd = NULL		1136402	0		=			
ANR	1136407	Identifier	currentAd		1136402	0					
ANR	1136408	Identifier	NULL		1136402	1					
ANR	1136409	ExpressionStatement	"adfile = safe_fopen_wrapper ( fname , ""r"" )"	106:2:2914:2952	1136402	1	True				
ANR	1136410	AssignmentExpression	"adfile = safe_fopen_wrapper ( fname , ""r"" )"		1136402	0		=			
ANR	1136411	Identifier	adfile		1136402	0					
ANR	1136412	CallExpression	"safe_fopen_wrapper ( fname , ""r"" )"		1136402	1					
ANR	1136413	Callee	safe_fopen_wrapper		1136402	0					
ANR	1136414	Identifier	safe_fopen_wrapper		1136402	0					
ANR	1136415	ArgumentList	fname		1136402	1					
ANR	1136416	Argument	fname		1136402	0					
ANR	1136417	Identifier	fname		1136402	0					
ANR	1136418	Argument	"""r"""		1136402	1					
ANR	1136419	PrimaryExpression	"""r"""		1136402	0					
ANR	1136420	IfStatement	if ( adfile == NULL )		1136402	2					
ANR	1136421	Condition	adfile == NULL	108:6:3005:3018	1136402	0	True				
ANR	1136422	EqualityExpression	adfile == NULL		1136402	0		==			
ANR	1136423	Identifier	adfile		1136402	0					
ANR	1136424	Identifier	NULL		1136402	1					
ANR	1136425	ExpressionStatement	"adfile = safe_fopen_wrapper ( fname , ""w"" )"	108:22:3021:3059	1136402	1	True				
ANR	1136426	AssignmentExpression	"adfile = safe_fopen_wrapper ( fname , ""w"" )"		1136402	0		=			
ANR	1136427	Identifier	adfile		1136402	0					
ANR	1136428	CallExpression	"safe_fopen_wrapper ( fname , ""w"" )"		1136402	1					
ANR	1136429	Callee	safe_fopen_wrapper		1136402	0					
ANR	1136430	Identifier	safe_fopen_wrapper		1136402	0					
ANR	1136431	ArgumentList	fname		1136402	1					
ANR	1136432	Argument	fname		1136402	0					
ANR	1136433	Identifier	fname		1136402	0					
ANR	1136434	Argument	"""w"""		1136402	1					
ANR	1136435	PrimaryExpression	"""w"""		1136402	0					
ANR	1136436	IfStatement	if ( adfile == NULL )		1136402	3					
ANR	1136437	Condition	adfile == NULL	109:6:3067:3080	1136402	0	True				
ANR	1136438	EqualityExpression	adfile == NULL		1136402	0		==			
ANR	1136439	Identifier	adfile		1136402	0					
ANR	1136440	Identifier	NULL		1136402	1					
ANR	1136441	CompoundStatement		8:22:196:196	1136402	1					
ANR	1136442	ExpressionStatement	"dprintf ( D_ALWAYS , ""cannot open file:%s\\n"" , fname )"	110:4:3089:3136	1136402	0	True				
ANR	1136443	CallExpression	"dprintf ( D_ALWAYS , ""cannot open file:%s\\n"" , fname )"		1136402	0					
ANR	1136444	Callee	dprintf		1136402	0					
ANR	1136445	Identifier	dprintf		1136402	0					
ANR	1136446	ArgumentList	D_ALWAYS		1136402	1					
ANR	1136447	Argument	D_ALWAYS		1136402	0					
ANR	1136448	Identifier	D_ALWAYS		1136402	0					
ANR	1136449	Argument	"""cannot open file:%s\\n"""		1136402	1					
ANR	1136450	PrimaryExpression	"""cannot open file:%s\\n"""		1136402	0					
ANR	1136451	Argument	fname		1136402	2					
ANR	1136452	Identifier	fname		1136402	0					
ANR	1136453	ExpressionStatement	exit ( 1 )	111:2:3140:3147	1136402	1	True				
ANR	1136454	CallExpression	exit ( 1 )		1136402	0					
ANR	1136455	Callee	exit		1136402	0					
ANR	1136456	Identifier	exit		1136402	0					
ANR	1136457	ArgumentList	1		1136402	1					
ANR	1136458	Argument	1		1136402	0					
ANR	1136459	PrimaryExpression	1		1136402	0					
ANR	1136460	Identifier	ClassAd_Reader :: ClassAd_Reader		1136402	1					
ANR	1136461	ParameterList	const char * fname		1136402	2					
ANR	1136462	Parameter	const char * fname	101:31:2867:2883	1136402	0	True				
ANR	1136463	ParameterType	const char *		1136402	0					
ANR	1136464	Identifier	fname		1136402	1					
ANR	1136465	CFGEntryNode	ENTRY		1136402		True				
ANR	1136466	CFGExitNode	EXIT		1136402		True				
ANR	1136467	Symbol	fname		1136402						
ANR	1136468	Symbol	NULL		1136402						
ANR	1136469	Symbol	safe_fopen_wrapper		1136402						
ANR	1136470	Symbol	adfile		1136402						
ANR	1136471	Symbol	D_ALWAYS		1136402						
ANR	1136472	Symbol	currentAd		1136402						
ANR	1136473	Function	ClassAd_Reader :: ~ClassAd_Reader	115:0:3200:3300							
ANR	1136474	FunctionDef	ClassAd_Reader :: ~ClassAd_Reader ()		1136473	0					
ANR	1136475	CompoundStatement		116:0:3234:3300	1136473	0					
ANR	1136476	IfStatement	if ( currentAd != NULL )		1136473	0					
ANR	1136477	Condition	currentAd != NULL	117:6:3242:3258	1136473	0	True				
ANR	1136478	EqualityExpression	currentAd != NULL		1136473	0		!=			
ANR	1136479	Identifier	currentAd		1136473	0					
ANR	1136480	Identifier	NULL		1136473	1					
ANR	1136481	CompoundStatement		2:24:25:25	1136473	1					
ANR	1136482	Statement	delete	117:26:3262:3267	1136473	0	True				
ANR	1136483	ExpressionStatement	currentAd	117:33:3269:3278	1136473	1	True				
ANR	1136484	Identifier	currentAd		1136473	0					
ANR	1136485	ExpressionStatement	fclose ( adfile )	119:2:3284:3298	1136473	1	True				
ANR	1136486	CallExpression	fclose ( adfile )		1136473	0					
ANR	1136487	Callee	fclose		1136473	0					
ANR	1136488	Identifier	fclose		1136473	0					
ANR	1136489	ArgumentList	adfile		1136473	1					
ANR	1136490	Argument	adfile		1136473	0					
ANR	1136491	Identifier	adfile		1136473	0					
ANR	1136492	Identifier	ClassAd_Reader :: ~ClassAd_Reader		1136473	1					
ANR	1136493	ParameterList			1136473	2					
ANR	1136494	CFGEntryNode	ENTRY		1136473		True				
ANR	1136495	CFGExitNode	EXIT		1136473		True				
ANR	1136496	Symbol	NULL		1136473						
ANR	1136497	Symbol	adfile		1136473						
ANR	1136498	Symbol	currentAd		1136473						
ANR	1136499	Function	ClassAd_Reader :: reset	122:0:3347:3406							
ANR	1136500	FunctionDef	ClassAd_Reader :: reset ()		1136499	0					
ANR	1136501	CompoundStatement		124:0:3376:3406	1136499	0					
ANR	1136502	ExpressionStatement	"fseek ( adfile , 0 , SEEK_SET )"	125:2:3380:3404	1136499	0	True				
ANR	1136503	CallExpression	"fseek ( adfile , 0 , SEEK_SET )"		1136499	0					
ANR	1136504	Callee	fseek		1136499	0					
ANR	1136505	Identifier	fseek		1136499	0					
ANR	1136506	ArgumentList	adfile		1136499	1					
ANR	1136507	Argument	adfile		1136499	0					
ANR	1136508	Identifier	adfile		1136499	0					
ANR	1136509	Argument	0		1136499	1					
ANR	1136510	PrimaryExpression	0		1136499	0					
ANR	1136511	Argument	SEEK_SET		1136499	2					
ANR	1136512	Identifier	SEEK_SET		1136499	0					
ANR	1136513	ReturnType	void		1136499	1					
ANR	1136514	Identifier	ClassAd_Reader :: reset		1136499	2					
ANR	1136515	ParameterList			1136499	3					
ANR	1136516	CFGEntryNode	ENTRY		1136499		True				
ANR	1136517	CFGExitNode	EXIT		1136499		True				
ANR	1136518	Symbol	SEEK_SET		1136499						
ANR	1136519	Symbol	adfile		1136499						
ANR	1136520	Function	ClassAd_Reader :: readAd	129:0:3452:4134							
ANR	1136521	FunctionDef	ClassAd_Reader :: readAd ()		1136520	0					
ANR	1136522	CompoundStatement		131:0:3481:4134	1136520	0					
ANR	1136523	IdentifierDeclStatement	int i ;	132:2:3485:3490	1136520	0	True				
ANR	1136524	IdentifierDecl	i		1136520	0					
ANR	1136525	IdentifierDeclType	int		1136520	0					
ANR	1136526	Identifier	i		1136520	1					
ANR	1136527	IdentifierDeclStatement	char c ;	133:2:3494:3500	1136520	1	True				
ANR	1136528	IdentifierDecl	c		1136520	0					
ANR	1136529	IdentifierDeclType	char		1136520	0					
ANR	1136530	Identifier	c		1136520	1					
ANR	1136531	IdentifierDeclStatement	"std :: string adstr = """" ;"	134:2:3504:3524	1136520	2	True				
ANR	1136532	IdentifierDecl	"adstr = """""		1136520	0					
ANR	1136533	IdentifierDeclType	std :: string		1136520	0					
ANR	1136534	Identifier	adstr		1136520	1					
ANR	1136535	AssignmentExpression	"adstr = """""		1136520	2		=			
ANR	1136536	Identifier	adstr		1136520	0					
ANR	1136537	PrimaryExpression	""""""		1136520	1					
ANR	1136538	IdentifierDeclStatement	classad :: ClassAdParser parser ;	135:2:3528:3557	1136520	3	True				
ANR	1136539	IdentifierDecl	parser		1136520	0					
ANR	1136540	IdentifierDeclType	classad :: ClassAdParser		1136520	0					
ANR	1136541	Identifier	parser		1136520	1					
ANR	1136542	IdentifierDeclStatement	int leftparan = 0 ;	136:2:3561:3578	1136520	4	True				
ANR	1136543	IdentifierDecl	leftparan = 0		1136520	0					
ANR	1136544	IdentifierDeclType	int		1136520	0					
ANR	1136545	Identifier	leftparan		1136520	1					
ANR	1136546	AssignmentExpression	leftparan = 0		1136520	2		=			
ANR	1136547	Identifier	leftparan		1136520	0					
ANR	1136548	PrimaryExpression	0		1136520	1					
ANR	1136549	ExpressionStatement	i = 0	138:2:3583:3587	1136520	5	True				
ANR	1136550	AssignmentExpression	i = 0		1136520	0		=			
ANR	1136551	Identifier	i		1136520	0					
ANR	1136552	PrimaryExpression	0		1136520	1					
ANR	1136553	WhileStatement	while ( 1 )		1136520	6					
ANR	1136554	Condition	1	139:9:3598:3598	1136520	0	True				
ANR	1136555	PrimaryExpression	1		1136520	0					
ANR	1136556	CompoundStatement		9:11:118:118	1136520	1					
ANR	1136557	ExpressionStatement	c = fgetc ( adfile )	140:4:3606:3623	1136520	0	True				
ANR	1136558	AssignmentExpression	c = fgetc ( adfile )		1136520	0		=			
ANR	1136559	Identifier	c		1136520	0					
ANR	1136560	CallExpression	fgetc ( adfile )		1136520	1					
ANR	1136561	Callee	fgetc		1136520	0					
ANR	1136562	Identifier	fgetc		1136520	0					
ANR	1136563	ArgumentList	adfile		1136520	1					
ANR	1136564	Argument	adfile		1136520	0					
ANR	1136565	Identifier	adfile		1136520	0					
ANR	1136566	IfStatement	if ( c == ']' )		1136520	1					
ANR	1136567	Condition	c == ']'	141:8:3633:3640	1136520	0	True				
ANR	1136568	EqualityExpression	c == ']'		1136520	0		==			
ANR	1136569	Identifier	c		1136520	0					
ANR	1136570	PrimaryExpression	']'		1136520	1					
ANR	1136571	CompoundStatement		11:17:160:160	1136520	1					
ANR	1136572	ExpressionStatement	leftparan --	142:6:3651:3663	1136520	0	True				
ANR	1136573	PostIncDecOperationExpression	leftparan --		1136520	0					
ANR	1136574	Identifier	leftparan		1136520	0					
ANR	1136575	IncDec	--		1136520	1					
ANR	1136576	IfStatement	if ( leftparan == 0 )		1136520	1					
ANR	1136577	Condition	leftparan == 0	143:10:3676:3689	1136520	0	True				
ANR	1136578	EqualityExpression	leftparan == 0		1136520	0		==			
ANR	1136579	Identifier	leftparan		1136520	0					
ANR	1136580	PrimaryExpression	0		1136520	1					
ANR	1136581	BreakStatement	break ;	143:26:3692:3697	1136520	1	True				
ANR	1136582	IfStatement	if ( c == '[' )		1136520	2					
ANR	1136583	Condition	c == '['	145:8:3713:3720	1136520	0	True				
ANR	1136584	EqualityExpression	c == '['		1136520	0		==			
ANR	1136585	Identifier	c		1136520	0					
ANR	1136586	PrimaryExpression	'['		1136520	1					
ANR	1136587	ExpressionStatement	leftparan ++	145:18:3723:3735	1136520	1	True				
ANR	1136588	PostIncDecOperationExpression	leftparan ++		1136520	0					
ANR	1136589	Identifier	leftparan		1136520	0					
ANR	1136590	IncDec	++		1136520	1					
ANR	1136591	IfStatement	if ( c == EOF )		1136520	3					
ANR	1136592	Condition	c == EOF	147:8:3747:3754	1136520	0	True				
ANR	1136593	EqualityExpression	c == EOF		1136520	0		==			
ANR	1136594	Identifier	c		1136520	0					
ANR	1136595	Identifier	EOF		1136520	1					
ANR	1136596	ReturnStatement	return 0 ;	147:18:3757:3765	1136520	1	True				
ANR	1136597	PrimaryExpression	0		1136520	0					
ANR	1136598	ExpressionStatement	adstr += c	148:4:3771:3781	1136520	4	True				
ANR	1136599	AssignmentExpression	adstr += c		1136520	0		+=			
ANR	1136600	Identifier	adstr		1136520	0					
ANR	1136601	Identifier	c		1136520	1					
ANR	1136602	ExpressionStatement	i ++	149:4:3787:3790	1136520	5	True				
ANR	1136603	PostIncDecOperationExpression	i ++		1136520	0					
ANR	1136604	Identifier	i		1136520	0					
ANR	1136605	IncDec	++		1136520	1					
ANR	1136606	ExpressionStatement	adstr += c	151:2:3798:3808	1136520	7	True				
ANR	1136607	AssignmentExpression	adstr += c		1136520	0		+=			
ANR	1136608	Identifier	adstr		1136520	0					
ANR	1136609	Identifier	c		1136520	1					
ANR	1136610	IfStatement	if ( currentAd != NULL )		1136520	8					
ANR	1136611	Condition	currentAd != NULL	155:6:3872:3888	1136520	0	True				
ANR	1136612	EqualityExpression	currentAd != NULL		1136520	0		!=			
ANR	1136613	Identifier	currentAd		1136520	0					
ANR	1136614	Identifier	NULL		1136520	1					
ANR	1136615	CompoundStatement		25:24:408:408	1136520	1					
ANR	1136616	Statement	delete	155:26:3892:3897	1136520	0	True				
ANR	1136617	ExpressionStatement	currentAd	155:33:3899:3908	1136520	1	True				
ANR	1136618	Identifier	currentAd		1136520	0					
ANR	1136619	ExpressionStatement	currentAd = NULL	155:44:3910:3926	1136520	2	True				
ANR	1136620	AssignmentExpression	currentAd = NULL		1136520	0		=			
ANR	1136621	Identifier	currentAd		1136520	0					
ANR	1136622	Identifier	NULL		1136520	1					
ANR	1136623	ExpressionStatement	currentAd = parser . ParseClassAd ( adstr )	158:2:3934:3972	1136520	9	True				
ANR	1136624	AssignmentExpression	currentAd = parser . ParseClassAd ( adstr )		1136520	0		=			
ANR	1136625	Identifier	currentAd		1136520	0					
ANR	1136626	CallExpression	parser . ParseClassAd ( adstr )		1136520	1					
ANR	1136627	Callee	parser . ParseClassAd		1136520	0					
ANR	1136628	MemberAccess	parser . ParseClassAd		1136520	0					
ANR	1136629	Identifier	parser		1136520	0					
ANR	1136630	Identifier	ParseClassAd		1136520	1					
ANR	1136631	ArgumentList	adstr		1136520	1					
ANR	1136632	Argument	adstr		1136520	0					
ANR	1136633	Identifier	adstr		1136520	0					
ANR	1136634	IfStatement	if ( currentAd == NULL )		1136520	10					
ANR	1136635	Condition	currentAd == NULL	160:6:3981:3997	1136520	0	True				
ANR	1136636	EqualityExpression	currentAd == NULL		1136520	0		==			
ANR	1136637	Identifier	currentAd		1136520	0					
ANR	1136638	Identifier	NULL		1136520	1					
ANR	1136639	CompoundStatement		30:25:518:518	1136520	1					
ANR	1136640	ExpressionStatement	"dprintf ( D_ALWAYS , ""Invalid classAd!\\n"" )"	161:4:4006:4044	1136520	0	True				
ANR	1136641	CallExpression	"dprintf ( D_ALWAYS , ""Invalid classAd!\\n"" )"		1136520	0					
ANR	1136642	Callee	dprintf		1136520	0					
ANR	1136643	Identifier	dprintf		1136520	0					
ANR	1136644	ArgumentList	D_ALWAYS		1136520	1					
ANR	1136645	Argument	D_ALWAYS		1136520	0					
ANR	1136646	Identifier	D_ALWAYS		1136520	0					
ANR	1136647	Argument	"""Invalid classAd!\\n"""		1136520	1					
ANR	1136648	PrimaryExpression	"""Invalid classAd!\\n"""		1136520	0					
ANR	1136649	ExpressionStatement	"dprintf ( D_ALWAYS , ""ClassAd:%s\\n"" , adstr . c_str ( ) )"	162:4:4050:4096	1136520	1	True				
ANR	1136650	CallExpression	"dprintf ( D_ALWAYS , ""ClassAd:%s\\n"" , adstr . c_str ( ) )"		1136520	0					
ANR	1136651	Callee	dprintf		1136520	0					
ANR	1136652	Identifier	dprintf		1136520	0					
ANR	1136653	ArgumentList	D_ALWAYS		1136520	1					
ANR	1136654	Argument	D_ALWAYS		1136520	0					
ANR	1136655	Identifier	D_ALWAYS		1136520	0					
ANR	1136656	Argument	"""ClassAd:%s\\n"""		1136520	1					
ANR	1136657	PrimaryExpression	"""ClassAd:%s\\n"""		1136520	0					
ANR	1136658	Argument	adstr . c_str ( )		1136520	2					
ANR	1136659	CallExpression	adstr . c_str ( )		1136520	0					
ANR	1136660	Callee	adstr . c_str		1136520	0					
ANR	1136661	MemberAccess	adstr . c_str		1136520	0					
ANR	1136662	Identifier	adstr		1136520	0					
ANR	1136663	Identifier	c_str		1136520	1					
ANR	1136664	ArgumentList			1136520	1					
ANR	1136665	ReturnStatement	return 0 ;	163:4:4102:4110	1136520	2	True				
ANR	1136666	PrimaryExpression	0		1136520	0					
ANR	1136667	ElseStatement	else		1136520	0					
ANR	1136668	ReturnStatement	return 1 ;	165:7:4123:4131	1136520	0	True				
ANR	1136669	PrimaryExpression	1		1136520	0					
ANR	1136670	ReturnType	int		1136520	1					
ANR	1136671	Identifier	ClassAd_Reader :: readAd		1136520	2					
ANR	1136672	ParameterList			1136520	3					
ANR	1136673	CFGEntryNode	ENTRY		1136520		True				
ANR	1136674	CFGExitNode	EXIT		1136520		True				
ANR	1136675	Symbol	c		1136520						
ANR	1136676	Symbol	NULL		1136520						
ANR	1136677	Symbol	adstr		1136520						
ANR	1136678	Symbol	adfile		1136520						
ANR	1136679	Symbol	D_ALWAYS		1136520						
ANR	1136680	Symbol	i		1136520						
ANR	1136681	Symbol	currentAd		1136520						
ANR	1136682	Symbol	parser . ParseClassAd		1136520						
ANR	1136683	Symbol	parser		1136520						
ANR	1136684	Symbol	adstr . c_str		1136520						
ANR	1136685	Symbol	leftparan		1136520						
ANR	1136686	Symbol	EOF		1136520						
ANR	1136687	Symbol	fgetc		1136520						
ANR	1136688	Function	ClassAd_Reader :: getValue	169:0:4179:4712							
ANR	1136689	FunctionDef	"ClassAd_Reader :: getValue (char * attr , char * attrval)"		1136688	0					
ANR	1136690	CompoundStatement		171:0:4235:4712	1136688	0					
ANR	1136691	IdentifierDeclStatement	"std :: string adbuffer = """" ;"	172:2:4239:4264	1136688	0	True				
ANR	1136692	IdentifierDecl	"adbuffer = """""		1136688	0					
ANR	1136693	IdentifierDeclType	std :: string		1136688	0					
ANR	1136694	Identifier	adbuffer		1136688	1					
ANR	1136695	AssignmentExpression	"adbuffer = """""		1136688	2		=			
ANR	1136696	Identifier	adbuffer		1136688	0					
ANR	1136697	PrimaryExpression	""""""		1136688	1					
ANR	1136698	IdentifierDeclStatement	classad :: ClassAdUnParser unparser ;	173:2:4268:4301	1136688	1	True				
ANR	1136699	IdentifierDecl	unparser		1136688	0					
ANR	1136700	IdentifierDeclType	classad :: ClassAdUnParser		1136688	0					
ANR	1136701	Identifier	unparser		1136688	1					
ANR	1136702	IdentifierDeclStatement	classad :: ExprTree * attrexpr = NULL ;	174:2:4305:4339	1136688	2	True				
ANR	1136703	IdentifierDecl	* attrexpr = NULL		1136688	0					
ANR	1136704	IdentifierDeclType	classad :: ExprTree *		1136688	0					
ANR	1136705	Identifier	attrexpr		1136688	1					
ANR	1136706	AssignmentExpression	* attrexpr = NULL		1136688	2		=			
ANR	1136707	Identifier	NULL		1136688	0					
ANR	1136708	Identifier	NULL		1136688	1					
ANR	1136709	IfStatement	if ( ! ( attrexpr = currentAd -> Lookup ( attr ) ) )		1136688	3					
ANR	1136710	Condition	! ( attrexpr = currentAd -> Lookup ( attr ) )	176:6:4348:4384	1136688	0	True				
ANR	1136711	UnaryOperationExpression	! ( attrexpr = currentAd -> Lookup ( attr ) )		1136688	0					
ANR	1136712	UnaryOperator	!		1136688	0					
ANR	1136713	AssignmentExpression	attrexpr = currentAd -> Lookup ( attr )		1136688	1		=			
ANR	1136714	Identifier	attrexpr		1136688	0					
ANR	1136715	CallExpression	currentAd -> Lookup ( attr )		1136688	1					
ANR	1136716	Callee	currentAd -> Lookup		1136688	0					
ANR	1136717	PtrMemberAccess	currentAd -> Lookup		1136688	0					
ANR	1136718	Identifier	currentAd		1136688	0					
ANR	1136719	Identifier	Lookup		1136688	1					
ANR	1136720	ArgumentList	attr		1136688	1					
ANR	1136721	Argument	attr		1136688	0					
ANR	1136722	Identifier	attr		1136688	0					
ANR	1136723	CompoundStatement		6:45:151:151	1136688	1					
ANR	1136724	ReturnStatement	return DAP_ERROR ;	178:4:4436:4452	1136688	0	True				
ANR	1136725	Identifier	DAP_ERROR		1136688	0					
ANR	1136726	ExpressionStatement	"unparser . Unparse ( adbuffer , attrexpr )"	181:2:4461:4496	1136688	4	True				
ANR	1136727	CallExpression	"unparser . Unparse ( adbuffer , attrexpr )"		1136688	0					
ANR	1136728	Callee	unparser . Unparse		1136688	0					
ANR	1136729	MemberAccess	unparser . Unparse		1136688	0					
ANR	1136730	Identifier	unparser		1136688	0					
ANR	1136731	Identifier	Unparse		1136688	1					
ANR	1136732	ArgumentList	adbuffer		1136688	1					
ANR	1136733	Argument	adbuffer		1136688	0					
ANR	1136734	Identifier	adbuffer		1136688	0					
ANR	1136735	Argument	attrexpr		1136688	1					
ANR	1136736	Identifier	attrexpr		1136688	0					
ANR	1136737	ExpressionStatement	"strncpy ( attrval , adbuffer . c_str ( ) , MAXSTR )"	183:2:4551:4593	1136688	5	True				
ANR	1136738	CallExpression	"strncpy ( attrval , adbuffer . c_str ( ) , MAXSTR )"		1136688	0					
ANR	1136739	Callee	strncpy		1136688	0					
ANR	1136740	Identifier	strncpy		1136688	0					
ANR	1136741	ArgumentList	attrval		1136688	1					
ANR	1136742	Argument	attrval		1136688	0					
ANR	1136743	Identifier	attrval		1136688	0					
ANR	1136744	Argument	adbuffer . c_str ( )		1136688	1					
ANR	1136745	CallExpression	adbuffer . c_str ( )		1136688	0					
ANR	1136746	Callee	adbuffer . c_str		1136688	0					
ANR	1136747	MemberAccess	adbuffer . c_str		1136688	0					
ANR	1136748	Identifier	adbuffer		1136688	0					
ANR	1136749	Identifier	c_str		1136688	1					
ANR	1136750	ArgumentList			1136688	1					
ANR	1136751	Argument	MAXSTR		1136688	2					
ANR	1136752	Identifier	MAXSTR		1136688	0					
ANR	1136753	ReturnStatement	return DAP_SUCCESS ;	188:2:4692:4710	1136688	6	True				
ANR	1136754	Identifier	DAP_SUCCESS		1136688	0					
ANR	1136755	ReturnType	int		1136688	1					
ANR	1136756	Identifier	ClassAd_Reader :: getValue		1136688	2					
ANR	1136757	ParameterList	"char * attr , char * attrval"		1136688	3					
ANR	1136758	Parameter	char * attr	170:25:4208:4217	1136688	0	True				
ANR	1136759	ParameterType	char *		1136688	0					
ANR	1136760	Identifier	attr		1136688	1					
ANR	1136761	Parameter	char * attrval	170:37:4220:4232	1136688	1	True				
ANR	1136762	ParameterType	char *		1136688	0					
ANR	1136763	Identifier	attrval		1136688	1					
ANR	1136764	CFGEntryNode	ENTRY		1136688		True				
ANR	1136765	CFGExitNode	EXIT		1136688		True				
ANR	1136766	Symbol	NULL		1136688						
ANR	1136767	Symbol	* currentAd		1136688						
ANR	1136768	Symbol	DAP_ERROR		1136688						
ANR	1136769	Symbol	attrexpr		1136688						
ANR	1136770	Symbol	currentAd		1136688						
ANR	1136771	Symbol	MAXSTR		1136688						
ANR	1136772	Symbol	DAP_SUCCESS		1136688						
ANR	1136773	Symbol	attrval		1136688						
ANR	1136774	Symbol	currentAd -> Lookup		1136688						
ANR	1136775	Symbol	unparser		1136688						
ANR	1136776	Symbol	adbuffer . c_str		1136688						
ANR	1136777	Symbol	attr		1136688						
ANR	1136778	Symbol	adbuffer		1136688						
ANR	1136779	Function	ClassAd_Reader :: queryAttr	195:0:4845:5463							
ANR	1136780	FunctionDef	"ClassAd_Reader :: queryAttr (char * attr1 , char * attrval1 , char * attr2 , char * attrval2)"		1136779	0					
ANR	1136781	CompoundStatement		197:0:4934:5463	1136779	0					
ANR	1136782	IdentifierDeclStatement	char tempval [ MAXSTR ] ;	198:2:4938:4958	1136779	0	True				
ANR	1136783	IdentifierDecl	tempval [ MAXSTR ]		1136779	0					
ANR	1136784	IdentifierDeclType	char [ MAXSTR ]		1136779	0					
ANR	1136785	Identifier	tempval		1136779	1					
ANR	1136786	Identifier	MAXSTR		1136779	2					
ANR	1136787	IdentifierDeclStatement	"std :: string adbuffer = """" ;"	199:2:4962:4987	1136779	1	True				
ANR	1136788	IdentifierDecl	"adbuffer = """""		1136779	0					
ANR	1136789	IdentifierDeclType	std :: string		1136779	0					
ANR	1136790	Identifier	adbuffer		1136779	1					
ANR	1136791	AssignmentExpression	"adbuffer = """""		1136779	2		=			
ANR	1136792	Identifier	adbuffer		1136779	0					
ANR	1136793	PrimaryExpression	""""""		1136779	1					
ANR	1136794	IdentifierDeclStatement	classad :: ExprTree * attrexpr = NULL ;	200:2:4993:5027	1136779	2	True				
ANR	1136795	IdentifierDecl	* attrexpr = NULL		1136779	0					
ANR	1136796	IdentifierDeclType	classad :: ExprTree *		1136779	0					
ANR	1136797	Identifier	attrexpr		1136779	1					
ANR	1136798	AssignmentExpression	* attrexpr = NULL		1136779	2		=			
ANR	1136799	Identifier	NULL		1136779	0					
ANR	1136800	Identifier	NULL		1136779	1					
ANR	1136801	IdentifierDeclStatement	classad :: ClassAdUnParser unparser ;	201:2:5031:5064	1136779	3	True				
ANR	1136802	IdentifierDecl	unparser		1136779	0					
ANR	1136803	IdentifierDeclType	classad :: ClassAdUnParser		1136779	0					
ANR	1136804	Identifier	unparser		1136779	1					
ANR	1136805	WhileStatement	while ( 1 )		1136779	4					
ANR	1136806	Condition	1	203:9:5076:5076	1136779	0	True				
ANR	1136807	PrimaryExpression	1		1136779	0					
ANR	1136808	CompoundStatement		7:11:143:143	1136779	1					
ANR	1136809	IfStatement	if ( ! readAd ( ) )		1136779	0					
ANR	1136810	Condition	! readAd ( )	204:8:5088:5096	1136779	0	True				
ANR	1136811	UnaryOperationExpression	! readAd ( )		1136779	0					
ANR	1136812	UnaryOperator	!		1136779	0					
ANR	1136813	CallExpression	readAd ( )		1136779	1					
ANR	1136814	Callee	readAd		1136779	0					
ANR	1136815	Identifier	readAd		1136779	0					
ANR	1136816	ArgumentList			1136779	1					
ANR	1136817	CompoundStatement		8:18:163:163	1136779	1					
ANR	1136818	ReturnStatement	return 0 ;	206:6:5153:5161	1136779	0	True				
ANR	1136819	PrimaryExpression	0		1136779	0					
ANR	1136820	ExpressionStatement	"getValue ( attr2 , tempval )"	208:4:5173:5196	1136779	1	True				
ANR	1136821	CallExpression	"getValue ( attr2 , tempval )"		1136779	0					
ANR	1136822	Callee	getValue		1136779	0					
ANR	1136823	Identifier	getValue		1136779	0					
ANR	1136824	ArgumentList	attr2		1136779	1					
ANR	1136825	Argument	attr2		1136779	0					
ANR	1136826	Identifier	attr2		1136779	0					
ANR	1136827	Argument	tempval		1136779	1					
ANR	1136828	Identifier	tempval		1136779	0					
ANR	1136829	IfStatement	"if ( ! strcmp ( attrval2 , tempval ) )"		1136779	2					
ANR	1136830	Condition	"! strcmp ( attrval2 , tempval )"	210:8:5207:5232	1136779	0	True				
ANR	1136831	UnaryOperationExpression	"! strcmp ( attrval2 , tempval )"		1136779	0					
ANR	1136832	UnaryOperator	!		1136779	0					
ANR	1136833	CallExpression	"strcmp ( attrval2 , tempval )"		1136779	1					
ANR	1136834	Callee	strcmp		1136779	0					
ANR	1136835	Identifier	strcmp		1136779	0					
ANR	1136836	ArgumentList	attrval2		1136779	1					
ANR	1136837	Argument	attrval2		1136779	0					
ANR	1136838	Identifier	attrval2		1136779	0					
ANR	1136839	Argument	tempval		1136779	1					
ANR	1136840	Identifier	tempval		1136779	0					
ANR	1136841	CompoundStatement		14:35:299:299	1136779	1					
ANR	1136842	ExpressionStatement	attrexpr = currentAd -> Lookup ( attr1 )	211:6:5242:5278	1136779	0	True				
ANR	1136843	AssignmentExpression	attrexpr = currentAd -> Lookup ( attr1 )		1136779	0		=			
ANR	1136844	Identifier	attrexpr		1136779	0					
ANR	1136845	CallExpression	currentAd -> Lookup ( attr1 )		1136779	1					
ANR	1136846	Callee	currentAd -> Lookup		1136779	0					
ANR	1136847	PtrMemberAccess	currentAd -> Lookup		1136779	0					
ANR	1136848	Identifier	currentAd		1136779	0					
ANR	1136849	Identifier	Lookup		1136779	1					
ANR	1136850	ArgumentList	attr1		1136779	1					
ANR	1136851	Argument	attr1		1136779	0					
ANR	1136852	Identifier	attr1		1136779	0					
ANR	1136853	ExpressionStatement	"unparser . Unparse ( adbuffer , attrexpr )"	212:6:5286:5321	1136779	1	True				
ANR	1136854	CallExpression	"unparser . Unparse ( adbuffer , attrexpr )"		1136779	0					
ANR	1136855	Callee	unparser . Unparse		1136779	0					
ANR	1136856	MemberAccess	unparser . Unparse		1136779	0					
ANR	1136857	Identifier	unparser		1136779	0					
ANR	1136858	Identifier	Unparse		1136779	1					
ANR	1136859	ArgumentList	adbuffer		1136779	1					
ANR	1136860	Argument	adbuffer		1136779	0					
ANR	1136861	Identifier	adbuffer		1136779	0					
ANR	1136862	Argument	attrexpr		1136779	1					
ANR	1136863	Identifier	attrexpr		1136779	0					
ANR	1136864	ExpressionStatement	"strncpy ( attrval1 , adbuffer . c_str ( ) , MAXSTR )"	213:6:5329:5371	1136779	2	True				
ANR	1136865	CallExpression	"strncpy ( attrval1 , adbuffer . c_str ( ) , MAXSTR )"		1136779	0					
ANR	1136866	Callee	strncpy		1136779	0					
ANR	1136867	Identifier	strncpy		1136779	0					
ANR	1136868	ArgumentList	attrval1		1136779	1					
ANR	1136869	Argument	attrval1		1136779	0					
ANR	1136870	Identifier	attrval1		1136779	0					
ANR	1136871	Argument	adbuffer . c_str ( )		1136779	1					
ANR	1136872	CallExpression	adbuffer . c_str ( )		1136779	0					
ANR	1136873	Callee	adbuffer . c_str		1136779	0					
ANR	1136874	MemberAccess	adbuffer . c_str		1136779	0					
ANR	1136875	Identifier	adbuffer		1136779	0					
ANR	1136876	Identifier	c_str		1136779	1					
ANR	1136877	ArgumentList			1136779	1					
ANR	1136878	Argument	MAXSTR		1136779	2					
ANR	1136879	Identifier	MAXSTR		1136779	0					
ANR	1136880	ReturnStatement	return 1 ;	216:6:5433:5441	1136779	3	True				
ANR	1136881	PrimaryExpression	1		1136779	0					
ANR	1136882	ReturnType	int		1136779	1					
ANR	1136883	Identifier	ClassAd_Reader :: queryAttr		1136779	2					
ANR	1136884	ParameterList	"char * attr1 , char * attrval1 , char * attr2 , char * attrval2"		1136779	3					
ANR	1136885	Parameter	char * attr1	196:26:4876:4886	1136779	0	True				
ANR	1136886	ParameterType	char *		1136779	0					
ANR	1136887	Identifier	attr1		1136779	1					
ANR	1136888	Parameter	char * attrval1	196:39:4889:4902	1136779	1	True				
ANR	1136889	ParameterType	char *		1136779	0					
ANR	1136890	Identifier	attrval1		1136779	1					
ANR	1136891	Parameter	char * attr2	196:55:4905:4915	1136779	2	True				
ANR	1136892	ParameterType	char *		1136779	0					
ANR	1136893	Identifier	attr2		1136779	1					
ANR	1136894	Parameter	char * attrval2	196:67:4917:4930	1136779	3	True				
ANR	1136895	ParameterType	char *		1136779	0					
ANR	1136896	Identifier	attrval2		1136779	1					
ANR	1136897	CFGEntryNode	ENTRY		1136779		True				
ANR	1136898	CFGExitNode	EXIT		1136779		True				
ANR	1136899	Symbol	strcmp		1136779						
ANR	1136900	Symbol	NULL		1136779						
ANR	1136901	Symbol	* currentAd		1136779						
ANR	1136902	Symbol	attrexpr		1136779						
ANR	1136903	Symbol	attr2		1136779						
ANR	1136904	Symbol	tempval		1136779						
ANR	1136905	Symbol	attr1		1136779						
ANR	1136906	Symbol	currentAd		1136779						
ANR	1136907	Symbol	MAXSTR		1136779						
ANR	1136908	Symbol	attrval1		1136779						
ANR	1136909	Symbol	attrval2		1136779						
ANR	1136910	Symbol	currentAd -> Lookup		1136779						
ANR	1136911	Symbol	unparser		1136779						
ANR	1136912	Symbol	adbuffer . c_str		1136779						
ANR	1136913	Symbol	readAd		1136779						
ANR	1136914	Symbol	adbuffer		1136779						
ANR	1136915	Function	ClassAd_Reader :: returncurrentAd	224:0:5583:5657							
ANR	1136916	FunctionDef	ClassAd_Reader :: returncurrentAd ()		1136915	0					
ANR	1136917	CompoundStatement		226:0:5635:5657	1136915	0					
ANR	1136918	ReturnStatement	return currentAd ;	227:2:5639:5655	1136915	0	True				
ANR	1136919	Identifier	currentAd		1136915	0					
ANR	1136920	ReturnType	classad :: ClassAd *		1136915	1					
ANR	1136921	Identifier	ClassAd_Reader :: returncurrentAd		1136915	2					
ANR	1136922	ParameterList			1136915	3					
ANR	1136923	CFGEntryNode	ENTRY		1136915		True				
ANR	1136924	CFGExitNode	EXIT		1136915		True				
ANR	1136925	Symbol	currentAd		1136915						
ANR	1136926	Function	ClassAd_Reader :: lookFor	234:0:5815:6625							
ANR	1136927	FunctionDef	"ClassAd_Reader :: lookFor (char * keyattr , const std :: string keyval , char * attr , char * attrval)"		1136926	0					
ANR	1136928	CompoundStatement		236:0:5912:6625	1136926	0					
ANR	1136929	IdentifierDeclStatement	char tempval [ MAXSTR ] ;	237:2:5916:5936	1136926	0	True				
ANR	1136930	IdentifierDecl	tempval [ MAXSTR ]		1136926	0					
ANR	1136931	IdentifierDeclType	char [ MAXSTR ]		1136926	0					
ANR	1136932	Identifier	tempval		1136926	1					
ANR	1136933	Identifier	MAXSTR		1136926	2					
ANR	1136934	IdentifierDeclStatement	"std :: string adbuffer = """" ;"	238:2:5940:5965	1136926	1	True				
ANR	1136935	IdentifierDecl	"adbuffer = """""		1136926	0					
ANR	1136936	IdentifierDeclType	std :: string		1136926	0					
ANR	1136937	Identifier	adbuffer		1136926	1					
ANR	1136938	AssignmentExpression	"adbuffer = """""		1136926	2		=			
ANR	1136939	Identifier	adbuffer		1136926	0					
ANR	1136940	PrimaryExpression	""""""		1136926	1					
ANR	1136941	IdentifierDeclStatement	classad :: ExprTree * attrexpr = NULL ;	239:2:5971:6005	1136926	2	True				
ANR	1136942	IdentifierDecl	* attrexpr = NULL		1136926	0					
ANR	1136943	IdentifierDeclType	classad :: ExprTree *		1136926	0					
ANR	1136944	Identifier	attrexpr		1136926	1					
ANR	1136945	AssignmentExpression	* attrexpr = NULL		1136926	2		=			
ANR	1136946	Identifier	NULL		1136926	0					
ANR	1136947	Identifier	NULL		1136926	1					
ANR	1136948	IdentifierDeclStatement	classad :: ClassAdUnParser unparser ;	240:2:6009:6042	1136926	3	True				
ANR	1136949	IdentifierDecl	unparser		1136926	0					
ANR	1136950	IdentifierDeclType	classad :: ClassAdUnParser		1136926	0					
ANR	1136951	Identifier	unparser		1136926	1					
ANR	1136952	ExpressionStatement	reset ( )	242:2:6049:6056	1136926	4	True				
ANR	1136953	CallExpression	reset ( )		1136926	0					
ANR	1136954	Callee	reset		1136926	0					
ANR	1136955	Identifier	reset		1136926	0					
ANR	1136956	ArgumentList			1136926	1					
ANR	1136957	WhileStatement	while ( 1 )		1136926	5					
ANR	1136958	Condition	1	245:9:6115:6115	1136926	0	True				
ANR	1136959	PrimaryExpression	1		1136926	0					
ANR	1136960	CompoundStatement		10:11:204:204	1136926	1					
ANR	1136961	IfStatement	if ( ! readAd ( ) )		1136926	0					
ANR	1136962	Condition	! readAd ( )	246:8:6127:6135	1136926	0	True				
ANR	1136963	UnaryOperationExpression	! readAd ( )		1136926	0					
ANR	1136964	UnaryOperator	!		1136926	0					
ANR	1136965	CallExpression	readAd ( )		1136926	1					
ANR	1136966	Callee	readAd		1136926	0					
ANR	1136967	Identifier	readAd		1136926	0					
ANR	1136968	ArgumentList			1136926	1					
ANR	1136969	CompoundStatement		11:19:225:225	1136926	1					
ANR	1136970	ReturnStatement	return 0 ;	248:6:6200:6208	1136926	0	True				
ANR	1136971	PrimaryExpression	0		1136926	0					
ANR	1136972	ExpressionStatement	"getValue ( attr , tempval )"	251:4:6221:6243	1136926	1	True				
ANR	1136973	CallExpression	"getValue ( attr , tempval )"		1136926	0					
ANR	1136974	Callee	getValue		1136926	0					
ANR	1136975	Identifier	getValue		1136926	0					
ANR	1136976	ArgumentList	attr		1136926	1					
ANR	1136977	Argument	attr		1136926	0					
ANR	1136978	Identifier	attr		1136926	0					
ANR	1136979	Argument	tempval		1136926	1					
ANR	1136980	Identifier	tempval		1136926	0					
ANR	1136981	IfStatement	"if ( ! strcmp ( attrval , tempval ) )"		1136926	2					
ANR	1136982	Condition	"! strcmp ( attrval , tempval )"	253:8:6254:6278	1136926	0	True				
ANR	1136983	UnaryOperationExpression	"! strcmp ( attrval , tempval )"		1136926	0					
ANR	1136984	UnaryOperator	!		1136926	0					
ANR	1136985	CallExpression	"strcmp ( attrval , tempval )"		1136926	1					
ANR	1136986	Callee	strcmp		1136926	0					
ANR	1136987	Identifier	strcmp		1136926	0					
ANR	1136988	ArgumentList	attrval		1136926	1					
ANR	1136989	Argument	attrval		1136926	0					
ANR	1136990	Identifier	attrval		1136926	0					
ANR	1136991	Argument	tempval		1136926	1					
ANR	1136992	Identifier	tempval		1136926	0					
ANR	1136993	CompoundStatement		18:34:367:367	1136926	1					
ANR	1136994	ExpressionStatement	attrexpr = currentAd -> Lookup ( keyattr )	254:6:6288:6326	1136926	0	True				
ANR	1136995	AssignmentExpression	attrexpr = currentAd -> Lookup ( keyattr )		1136926	0		=			
ANR	1136996	Identifier	attrexpr		1136926	0					
ANR	1136997	CallExpression	currentAd -> Lookup ( keyattr )		1136926	1					
ANR	1136998	Callee	currentAd -> Lookup		1136926	0					
ANR	1136999	PtrMemberAccess	currentAd -> Lookup		1136926	0					
ANR	1137000	Identifier	currentAd		1136926	0					
ANR	1137001	Identifier	Lookup		1136926	1					
ANR	1137002	ArgumentList	keyattr		1136926	1					
ANR	1137003	Argument	keyattr		1136926	0					
ANR	1137004	Identifier	keyattr		1136926	0					
ANR	1137005	ExpressionStatement	"unparser . Unparse ( adbuffer , attrexpr )"	255:6:6334:6369	1136926	1	True				
ANR	1137006	CallExpression	"unparser . Unparse ( adbuffer , attrexpr )"		1136926	0					
ANR	1137007	Callee	unparser . Unparse		1136926	0					
ANR	1137008	MemberAccess	unparser . Unparse		1136926	0					
ANR	1137009	Identifier	unparser		1136926	0					
ANR	1137010	Identifier	Unparse		1136926	1					
ANR	1137011	ArgumentList	adbuffer		1136926	1					
ANR	1137012	Argument	adbuffer		1136926	0					
ANR	1137013	Identifier	adbuffer		1136926	0					
ANR	1137014	Argument	attrexpr		1136926	1					
ANR	1137015	Identifier	attrexpr		1136926	0					
ANR	1137016	IfStatement	if ( keyval == adbuffer )		1136926	2					
ANR	1137017	Condition	keyval == adbuffer	258:10:6439:6456	1136926	0	True				
ANR	1137018	EqualityExpression	keyval == adbuffer		1136926	0		==			
ANR	1137019	Identifier	keyval		1136926	0					
ANR	1137020	Identifier	adbuffer		1136926	1					
ANR	1137021	CompoundStatement		23:29:545:545	1136926	1					
ANR	1137022	ReturnStatement	return 1 ;	260:1:6511:6519	1136926	0	True				
ANR	1137023	PrimaryExpression	1		1136926	0					
ANR	1137024	ExpressionStatement	"adbuffer = """""	262:6:6535:6546	1136926	3	True				
ANR	1137025	AssignmentExpression	"adbuffer = """""		1136926	0		=			
ANR	1137026	Identifier	adbuffer		1136926	0					
ANR	1137027	PrimaryExpression	""""""		1136926	1					
ANR	1137028	ReturnStatement	return 0 ;	267:2:6615:6623	1136926	6	True				
ANR	1137029	PrimaryExpression	0		1136926	0					
ANR	1137030	ReturnType	int		1136926	1					
ANR	1137031	Identifier	ClassAd_Reader :: lookFor		1136926	2					
ANR	1137032	ParameterList	"char * keyattr , const std :: string keyval , char * attr , char * attrval"		1136926	3					
ANR	1137033	Parameter	char * keyattr	235:24:5844:5856	1136926	0	True				
ANR	1137034	ParameterType	char *		1136926	0					
ANR	1137035	Identifier	keyattr		1136926	1					
ANR	1137036	Parameter	const std :: string keyval	235:39:5859:5882	1136926	1	True				
ANR	1137037	ParameterType	const std :: string		1136926	0					
ANR	1137038	Identifier	keyval		1136926	1					
ANR	1137039	Parameter	char * attr	235:65:5885:5894	1136926	2	True				
ANR	1137040	ParameterType	char *		1136926	0					
ANR	1137041	Identifier	attr		1136926	1					
ANR	1137042	Parameter	char * attrval	235:76:5896:5908	1136926	3	True				
ANR	1137043	ParameterType	char *		1136926	0					
ANR	1137044	Identifier	attrval		1136926	1					
ANR	1137045	CFGEntryNode	ENTRY		1136926		True				
ANR	1137046	CFGExitNode	EXIT		1136926		True				
ANR	1137047	Symbol	strcmp		1136926						
ANR	1137048	Symbol	NULL		1136926						
ANR	1137049	Symbol	* currentAd		1136926						
ANR	1137050	Symbol	attrexpr		1136926						
ANR	1137051	Symbol	tempval		1136926						
ANR	1137052	Symbol	currentAd		1136926						
ANR	1137053	Symbol	attrval		1136926						
ANR	1137054	Symbol	currentAd -> Lookup		1136926						
ANR	1137055	Symbol	unparser		1136926						
ANR	1137056	Symbol	keyattr		1136926						
ANR	1137057	Symbol	keyval		1136926						
ANR	1137058	Symbol	attr		1136926						
ANR	1137059	Symbol	readAd		1136926						
ANR	1137060	Symbol	adbuffer		1136926						
ANR	1137061	Function	ClassAd_Reader :: returnFirst	274:0:6803:7448							
ANR	1137062	FunctionDef	"ClassAd_Reader :: returnFirst (const std :: string qattr , char * qval , char * attr , char * attrval)"		1137061	0					
ANR	1137063	CompoundStatement		276:0:6899:7448	1137061	0					
ANR	1137064	IdentifierDeclStatement	char tempval [ MAXSTR ] ;	277:2:6903:6923	1137061	0	True				
ANR	1137065	IdentifierDecl	tempval [ MAXSTR ]		1137061	0					
ANR	1137066	IdentifierDeclType	char [ MAXSTR ]		1137061	0					
ANR	1137067	Identifier	tempval		1137061	1					
ANR	1137068	Identifier	MAXSTR		1137061	2					
ANR	1137069	IdentifierDeclStatement	"std :: string adbuffer = """" ;"	278:2:6927:6952	1137061	1	True				
ANR	1137070	IdentifierDecl	"adbuffer = """""		1137061	0					
ANR	1137071	IdentifierDeclType	std :: string		1137061	0					
ANR	1137072	Identifier	adbuffer		1137061	1					
ANR	1137073	AssignmentExpression	"adbuffer = """""		1137061	2		=			
ANR	1137074	Identifier	adbuffer		1137061	0					
ANR	1137075	PrimaryExpression	""""""		1137061	1					
ANR	1137076	IdentifierDeclStatement	classad :: ExprTree * attrexpr = NULL ;	279:2:6958:6992	1137061	2	True				
ANR	1137077	IdentifierDecl	* attrexpr = NULL		1137061	0					
ANR	1137078	IdentifierDeclType	classad :: ExprTree *		1137061	0					
ANR	1137079	Identifier	attrexpr		1137061	1					
ANR	1137080	AssignmentExpression	* attrexpr = NULL		1137061	2		=			
ANR	1137081	Identifier	NULL		1137061	0					
ANR	1137082	Identifier	NULL		1137061	1					
ANR	1137083	IdentifierDeclStatement	classad :: ClassAdUnParser unparser ;	280:2:6996:7029	1137061	3	True				
ANR	1137084	IdentifierDecl	unparser		1137061	0					
ANR	1137085	IdentifierDeclType	classad :: ClassAdUnParser		1137061	0					
ANR	1137086	Identifier	unparser		1137061	1					
ANR	1137087	ExpressionStatement	reset ( )	282:2:7036:7043	1137061	4	True				
ANR	1137088	CallExpression	reset ( )		1137061	0					
ANR	1137089	Callee	reset		1137061	0					
ANR	1137090	Identifier	reset		1137061	0					
ANR	1137091	ArgumentList			1137061	1					
ANR	1137092	WhileStatement	while ( 1 )		1137061	5					
ANR	1137093	Condition	1	284:9:7055:7055	1137061	0	True				
ANR	1137094	PrimaryExpression	1		1137061	0					
ANR	1137095	CompoundStatement		9:11:157:157	1137061	1					
ANR	1137096	IfStatement	if ( ! readAd ( ) )		1137061	0					
ANR	1137097	Condition	! readAd ( )	285:8:7067:7075	1137061	0	True				
ANR	1137098	UnaryOperationExpression	! readAd ( )		1137061	0					
ANR	1137099	UnaryOperator	!		1137061	0					
ANR	1137100	CallExpression	readAd ( )		1137061	1					
ANR	1137101	Callee	readAd		1137061	0					
ANR	1137102	Identifier	readAd		1137061	0					
ANR	1137103	ArgumentList			1137061	1					
ANR	1137104	CompoundStatement		10:19:178:178	1137061	1					
ANR	1137105	ReturnStatement	return 0 ;	287:6:7139:7147	1137061	0	True				
ANR	1137106	PrimaryExpression	0		1137061	0					
ANR	1137107	ExpressionStatement	"getValue ( attr , tempval )"	290:4:7160:7182	1137061	1	True				
ANR	1137108	CallExpression	"getValue ( attr , tempval )"		1137061	0					
ANR	1137109	Callee	getValue		1137061	0					
ANR	1137110	Identifier	getValue		1137061	0					
ANR	1137111	ArgumentList	attr		1137061	1					
ANR	1137112	Argument	attr		1137061	0					
ANR	1137113	Identifier	attr		1137061	0					
ANR	1137114	Argument	tempval		1137061	1					
ANR	1137115	Identifier	tempval		1137061	0					
ANR	1137116	IfStatement	"if ( ! strcmp ( attrval , tempval ) )"		1137061	2					
ANR	1137117	Condition	"! strcmp ( attrval , tempval )"	292:8:7197:7221	1137061	0	True				
ANR	1137118	UnaryOperationExpression	"! strcmp ( attrval , tempval )"		1137061	0					
ANR	1137119	UnaryOperator	!		1137061	0					
ANR	1137120	CallExpression	"strcmp ( attrval , tempval )"		1137061	1					
ANR	1137121	Callee	strcmp		1137061	0					
ANR	1137122	Identifier	strcmp		1137061	0					
ANR	1137123	ArgumentList	attrval		1137061	1					
ANR	1137124	Argument	attrval		1137061	0					
ANR	1137125	Identifier	attrval		1137061	0					
ANR	1137126	Argument	tempval		1137061	1					
ANR	1137127	Identifier	tempval		1137061	0					
ANR	1137128	CompoundStatement		17:34:323:323	1137061	1					
ANR	1137129	ExpressionStatement	attrexpr = currentAd -> Lookup ( qattr )	293:6:7231:7267	1137061	0	True				
ANR	1137130	AssignmentExpression	attrexpr = currentAd -> Lookup ( qattr )		1137061	0		=			
ANR	1137131	Identifier	attrexpr		1137061	0					
ANR	1137132	CallExpression	currentAd -> Lookup ( qattr )		1137061	1					
ANR	1137133	Callee	currentAd -> Lookup		1137061	0					
ANR	1137134	PtrMemberAccess	currentAd -> Lookup		1137061	0					
ANR	1137135	Identifier	currentAd		1137061	0					
ANR	1137136	Identifier	Lookup		1137061	1					
ANR	1137137	ArgumentList	qattr		1137061	1					
ANR	1137138	Argument	qattr		1137061	0					
ANR	1137139	Identifier	qattr		1137061	0					
ANR	1137140	ExpressionStatement	"unparser . Unparse ( adbuffer , attrexpr )"	294:6:7275:7310	1137061	1	True				
ANR	1137141	CallExpression	"unparser . Unparse ( adbuffer , attrexpr )"		1137061	0					
ANR	1137142	Callee	unparser . Unparse		1137061	0					
ANR	1137143	MemberAccess	unparser . Unparse		1137061	0					
ANR	1137144	Identifier	unparser		1137061	0					
ANR	1137145	Identifier	Unparse		1137061	1					
ANR	1137146	ArgumentList	adbuffer		1137061	1					
ANR	1137147	Argument	adbuffer		1137061	0					
ANR	1137148	Identifier	adbuffer		1137061	0					
ANR	1137149	Argument	attrexpr		1137061	1					
ANR	1137150	Identifier	attrexpr		1137061	0					
ANR	1137151	ExpressionStatement	"strncpy ( qval , adbuffer . c_str ( ) , MAXSTR )"	295:6:7318:7356	1137061	2	True				
ANR	1137152	CallExpression	"strncpy ( qval , adbuffer . c_str ( ) , MAXSTR )"		1137061	0					
ANR	1137153	Callee	strncpy		1137061	0					
ANR	1137154	Identifier	strncpy		1137061	0					
ANR	1137155	ArgumentList	qval		1137061	1					
ANR	1137156	Argument	qval		1137061	0					
ANR	1137157	Identifier	qval		1137061	0					
ANR	1137158	Argument	adbuffer . c_str ( )		1137061	1					
ANR	1137159	CallExpression	adbuffer . c_str ( )		1137061	0					
ANR	1137160	Callee	adbuffer . c_str		1137061	0					
ANR	1137161	MemberAccess	adbuffer . c_str		1137061	0					
ANR	1137162	Identifier	adbuffer		1137061	0					
ANR	1137163	Identifier	c_str		1137061	1					
ANR	1137164	ArgumentList			1137061	1					
ANR	1137165	Argument	MAXSTR		1137061	2					
ANR	1137166	Identifier	MAXSTR		1137061	0					
ANR	1137167	ReturnStatement	return 1 ;	298:6:7418:7426	1137061	3	True				
ANR	1137168	PrimaryExpression	1		1137061	0					
ANR	1137169	ReturnType	int		1137061	1					
ANR	1137170	Identifier	ClassAd_Reader :: returnFirst		1137061	2					
ANR	1137171	ParameterList	"const std :: string qattr , char * qval , char * attr , char * attrval"		1137061	3					
ANR	1137172	Parameter	const std :: string qattr	275:28:6836:6858	1137061	0	True				
ANR	1137173	ParameterType	const std :: string		1137061	0					
ANR	1137174	Identifier	qattr		1137061	1					
ANR	1137175	Parameter	char * qval	275:52:6860:6869	1137061	1	True				
ANR	1137176	ParameterType	char *		1137061	0					
ANR	1137177	Identifier	qval		1137061	1					
ANR	1137178	Parameter	char * attr	275:64:6872:6881	1137061	2	True				
ANR	1137179	ParameterType	char *		1137061	0					
ANR	1137180	Identifier	attr		1137061	1					
ANR	1137181	Parameter	char * attrval	275:75:6883:6895	1137061	3	True				
ANR	1137182	ParameterType	char *		1137061	0					
ANR	1137183	Identifier	attrval		1137061	1					
ANR	1137184	CFGEntryNode	ENTRY		1137061		True				
ANR	1137185	CFGExitNode	EXIT		1137061		True				
ANR	1137186	Symbol	strcmp		1137061						
ANR	1137187	Symbol	NULL		1137061						
ANR	1137188	Symbol	* currentAd		1137061						
ANR	1137189	Symbol	qattr		1137061						
ANR	1137190	Symbol	qval		1137061						
ANR	1137191	Symbol	attrexpr		1137061						
ANR	1137192	Symbol	tempval		1137061						
ANR	1137193	Symbol	currentAd		1137061						
ANR	1137194	Symbol	MAXSTR		1137061						
ANR	1137195	Symbol	attrval		1137061						
ANR	1137196	Symbol	currentAd -> Lookup		1137061						
ANR	1137197	Symbol	unparser		1137061						
ANR	1137198	Symbol	adbuffer . c_str		1137061						
ANR	1137199	Symbol	attr		1137061						
ANR	1137200	Symbol	readAd		1137061						
ANR	1137201	Symbol	adbuffer		1137061						
ANR	1137202	Function	get_subAdval	304:0:7451:8693							
ANR	1137203	FunctionDef	"get_subAdval (classad :: ClassAd * parentAd , char * subAdname , char * attr , char * attrval)"		1137202	0					
ANR	1137204	CompoundStatement		305:0:7540:8693	1137202	0					
ANR	1137205	IdentifierDeclStatement	"std :: string adbuffer = """" ;"	306:2:7544:7569	1137202	0	True				
ANR	1137206	IdentifierDecl	"adbuffer = """""		1137202	0					
ANR	1137207	IdentifierDeclType	std :: string		1137202	0					
ANR	1137208	Identifier	adbuffer		1137202	1					
ANR	1137209	AssignmentExpression	"adbuffer = """""		1137202	2		=			
ANR	1137210	Identifier	adbuffer		1137202	0					
ANR	1137211	PrimaryExpression	""""""		1137202	1					
ANR	1137212	IdentifierDeclStatement	classad :: ClassAdUnParser unparser ;	307:2:7573:7606	1137202	1	True				
ANR	1137213	IdentifierDecl	unparser		1137202	0					
ANR	1137214	IdentifierDeclType	classad :: ClassAdUnParser		1137202	0					
ANR	1137215	Identifier	unparser		1137202	1					
ANR	1137216	IdentifierDeclStatement	classad :: ClassAdParser parser ;	308:2:7610:7639	1137202	2	True				
ANR	1137217	IdentifierDecl	parser		1137202	0					
ANR	1137218	IdentifierDeclType	classad :: ClassAdParser		1137202	0					
ANR	1137219	Identifier	parser		1137202	1					
ANR	1137220	IdentifierDeclStatement	classad :: ExprTree * attrexpr = NULL ;	309:2:7643:7677	1137202	3	True				
ANR	1137221	IdentifierDecl	* attrexpr = NULL		1137202	0					
ANR	1137222	IdentifierDeclType	classad :: ExprTree *		1137202	0					
ANR	1137223	Identifier	attrexpr		1137202	1					
ANR	1137224	AssignmentExpression	* attrexpr = NULL		1137202	2		=			
ANR	1137225	Identifier	NULL		1137202	0					
ANR	1137226	Identifier	NULL		1137202	1					
ANR	1137227	IdentifierDeclStatement	char temp [ MAXSTR ] ;	310:2:7681:7698	1137202	4	True				
ANR	1137228	IdentifierDecl	temp [ MAXSTR ]		1137202	0					
ANR	1137229	IdentifierDeclType	char [ MAXSTR ]		1137202	0					
ANR	1137230	Identifier	temp		1137202	1					
ANR	1137231	Identifier	MAXSTR		1137202	2					
ANR	1137232	IdentifierDeclStatement	int len ;	311:2:7702:7709	1137202	5	True				
ANR	1137233	IdentifierDecl	len		1137202	0					
ANR	1137234	IdentifierDeclType	int		1137202	0					
ANR	1137235	Identifier	len		1137202	1					
ANR	1137236	IfStatement	if ( ! ( attrexpr = parentAd -> Lookup ( subAdname ) ) )		1137202	6					
ANR	1137237	Condition	! ( attrexpr = parentAd -> Lookup ( subAdname ) )	314:6:7757:7797	1137202	0	True				
ANR	1137238	UnaryOperationExpression	! ( attrexpr = parentAd -> Lookup ( subAdname ) )		1137202	0					
ANR	1137239	UnaryOperator	!		1137202	0					
ANR	1137240	AssignmentExpression	attrexpr = parentAd -> Lookup ( subAdname )		1137202	1		=			
ANR	1137241	Identifier	attrexpr		1137202	0					
ANR	1137242	CallExpression	parentAd -> Lookup ( subAdname )		1137202	1					
ANR	1137243	Callee	parentAd -> Lookup		1137202	0					
ANR	1137244	PtrMemberAccess	parentAd -> Lookup		1137202	0					
ANR	1137245	Identifier	parentAd		1137202	0					
ANR	1137246	Identifier	Lookup		1137202	1					
ANR	1137247	ArgumentList	subAdname		1137202	1					
ANR	1137248	Argument	subAdname		1137202	0					
ANR	1137249	Identifier	subAdname		1137202	0					
ANR	1137250	CompoundStatement		10:49:259:259	1137202	1					
ANR	1137251	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s not found!\\n"" , subAdname )"	315:4:7806:7853	1137202	0	True				
ANR	1137252	CallExpression	"dprintf ( D_ALWAYS , ""%s not found!\\n"" , subAdname )"		1137202	0					
ANR	1137253	Callee	dprintf		1137202	0					
ANR	1137254	Identifier	dprintf		1137202	0					
ANR	1137255	ArgumentList	D_ALWAYS		1137202	1					
ANR	1137256	Argument	D_ALWAYS		1137202	0					
ANR	1137257	Identifier	D_ALWAYS		1137202	0					
ANR	1137258	Argument	"""%s not found!\\n"""		1137202	1					
ANR	1137259	PrimaryExpression	"""%s not found!\\n"""		1137202	0					
ANR	1137260	Argument	subAdname		1137202	2					
ANR	1137261	Identifier	subAdname		1137202	0					
ANR	1137262	ReturnStatement	return 0 ;	316:4:7859:7867	1137202	1	True				
ANR	1137263	PrimaryExpression	0		1137202	0					
ANR	1137264	ExpressionStatement	"unparser . Unparse ( adbuffer , attrexpr )"	319:2:7876:7911	1137202	7	True				
ANR	1137265	CallExpression	"unparser . Unparse ( adbuffer , attrexpr )"		1137202	0					
ANR	1137266	Callee	unparser . Unparse		1137202	0					
ANR	1137267	MemberAccess	unparser . Unparse		1137202	0					
ANR	1137268	Identifier	unparser		1137202	0					
ANR	1137269	Identifier	Unparse		1137202	1					
ANR	1137270	ArgumentList	adbuffer		1137202	1					
ANR	1137271	Argument	adbuffer		1137202	0					
ANR	1137272	Identifier	adbuffer		1137202	0					
ANR	1137273	Argument	attrexpr		1137202	1					
ANR	1137274	Identifier	attrexpr		1137202	0					
ANR	1137275	IdentifierDeclStatement	classad :: ClassAd * subAd = NULL ;	325:2:8051:8081	1137202	8	True				
ANR	1137276	IdentifierDecl	* subAd = NULL		1137202	0					
ANR	1137277	IdentifierDeclType	classad :: ClassAd *		1137202	0					
ANR	1137278	Identifier	subAd		1137202	1					
ANR	1137279	AssignmentExpression	* subAd = NULL		1137202	2		=			
ANR	1137280	Identifier	NULL		1137202	0					
ANR	1137281	Identifier	NULL		1137202	1					
ANR	1137282	ExpressionStatement	subAd = parser . ParseClassAd ( adbuffer )	327:2:8086:8123	1137202	9	True				
ANR	1137283	AssignmentExpression	subAd = parser . ParseClassAd ( adbuffer )		1137202	0		=			
ANR	1137284	Identifier	subAd		1137202	0					
ANR	1137285	CallExpression	parser . ParseClassAd ( adbuffer )		1137202	1					
ANR	1137286	Callee	parser . ParseClassAd		1137202	0					
ANR	1137287	MemberAccess	parser . ParseClassAd		1137202	0					
ANR	1137288	Identifier	parser		1137202	0					
ANR	1137289	Identifier	ParseClassAd		1137202	1					
ANR	1137290	ArgumentList	adbuffer		1137202	1					
ANR	1137291	Argument	adbuffer		1137202	0					
ANR	1137292	Identifier	adbuffer		1137202	0					
ANR	1137293	ExpressionStatement	"adbuffer = """""	328:2:8127:8140	1137202	10	True				
ANR	1137294	AssignmentExpression	"adbuffer = """""		1137202	0		=			
ANR	1137295	Identifier	adbuffer		1137202	0					
ANR	1137296	PrimaryExpression	""""""		1137202	1					
ANR	1137297	IfStatement	if ( ! ( attrexpr = subAd -> Lookup ( attr ) ) )		1137202	11					
ANR	1137298	Condition	! ( attrexpr = subAd -> Lookup ( attr ) )	329:6:8148:8180	1137202	0	True				
ANR	1137299	UnaryOperationExpression	! ( attrexpr = subAd -> Lookup ( attr ) )		1137202	0					
ANR	1137300	UnaryOperator	!		1137202	0					
ANR	1137301	AssignmentExpression	attrexpr = subAd -> Lookup ( attr )		1137202	1		=			
ANR	1137302	Identifier	attrexpr		1137202	0					
ANR	1137303	CallExpression	subAd -> Lookup ( attr )		1137202	1					
ANR	1137304	Callee	subAd -> Lookup		1137202	0					
ANR	1137305	PtrMemberAccess	subAd -> Lookup		1137202	0					
ANR	1137306	Identifier	subAd		1137202	0					
ANR	1137307	Identifier	Lookup		1137202	1					
ANR	1137308	ArgumentList	attr		1137202	1					
ANR	1137309	Argument	attr		1137202	0					
ANR	1137310	Identifier	attr		1137202	0					
ANR	1137311	CompoundStatement		25:41:642:642	1137202	1					
ANR	1137312	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s not found!\\n"" , attr )"	330:4:8189:8231	1137202	0	True				
ANR	1137313	CallExpression	"dprintf ( D_ALWAYS , ""%s not found!\\n"" , attr )"		1137202	0					
ANR	1137314	Callee	dprintf		1137202	0					
ANR	1137315	Identifier	dprintf		1137202	0					
ANR	1137316	ArgumentList	D_ALWAYS		1137202	1					
ANR	1137317	Argument	D_ALWAYS		1137202	0					
ANR	1137318	Identifier	D_ALWAYS		1137202	0					
ANR	1137319	Argument	"""%s not found!\\n"""		1137202	1					
ANR	1137320	PrimaryExpression	"""%s not found!\\n"""		1137202	0					
ANR	1137321	Argument	attr		1137202	2					
ANR	1137322	Identifier	attr		1137202	0					
ANR	1137323	ReturnStatement	return 0 ;	331:4:8237:8245	1137202	1	True				
ANR	1137324	PrimaryExpression	0		1137202	0					
ANR	1137325	ExpressionStatement	"unparser . Unparse ( adbuffer , attrexpr )"	334:2:8254:8289	1137202	12	True				
ANR	1137326	CallExpression	"unparser . Unparse ( adbuffer , attrexpr )"		1137202	0					
ANR	1137327	Callee	unparser . Unparse		1137202	0					
ANR	1137328	MemberAccess	unparser . Unparse		1137202	0					
ANR	1137329	Identifier	unparser		1137202	0					
ANR	1137330	Identifier	Unparse		1137202	1					
ANR	1137331	ArgumentList	adbuffer		1137202	1					
ANR	1137332	Argument	adbuffer		1137202	0					
ANR	1137333	Identifier	adbuffer		1137202	0					
ANR	1137334	Argument	attrexpr		1137202	1					
ANR	1137335	Identifier	attrexpr		1137202	0					
ANR	1137336	ExpressionStatement	"strncpy ( temp , adbuffer . c_str ( ) , MAXSTR )"	337:2:8347:8385	1137202	13	True				
ANR	1137337	CallExpression	"strncpy ( temp , adbuffer . c_str ( ) , MAXSTR )"		1137202	0					
ANR	1137338	Callee	strncpy		1137202	0					
ANR	1137339	Identifier	strncpy		1137202	0					
ANR	1137340	ArgumentList	temp		1137202	1					
ANR	1137341	Argument	temp		1137202	0					
ANR	1137342	Identifier	temp		1137202	0					
ANR	1137343	Argument	adbuffer . c_str ( )		1137202	1					
ANR	1137344	CallExpression	adbuffer . c_str ( )		1137202	0					
ANR	1137345	Callee	adbuffer . c_str		1137202	0					
ANR	1137346	MemberAccess	adbuffer . c_str		1137202	0					
ANR	1137347	Identifier	adbuffer		1137202	0					
ANR	1137348	Identifier	c_str		1137202	1					
ANR	1137349	ArgumentList			1137202	1					
ANR	1137350	Argument	MAXSTR		1137202	2					
ANR	1137351	Identifier	MAXSTR		1137202	0					
ANR	1137352	IfStatement	"if ( temp [ 0 ] == '""' )"		1137202	14					
ANR	1137353	Condition	"temp [ 0 ] == '""'"	339:6:8394:8407	1137202	0	True				
ANR	1137354	EqualityExpression	"temp [ 0 ] == '""'"		1137202	0		==			
ANR	1137355	ArrayIndexing	temp [ 0 ]		1137202	0					
ANR	1137356	Identifier	temp		1137202	0					
ANR	1137357	PrimaryExpression	0		1137202	1					
ANR	1137358	PrimaryExpression	"'""'"		1137202	1					
ANR	1137359	CompoundStatement		35:21:868:868	1137202	1					
ANR	1137360	ExpressionStatement	len = strlen ( temp )	340:4:8450:8468	1137202	0	True				
ANR	1137361	AssignmentExpression	len = strlen ( temp )		1137202	0		=			
ANR	1137362	Identifier	len		1137202	0					
ANR	1137363	CallExpression	strlen ( temp )		1137202	1					
ANR	1137364	Callee	strlen		1137202	0					
ANR	1137365	Identifier	strlen		1137202	0					
ANR	1137366	ArgumentList	temp		1137202	1					
ANR	1137367	Argument	temp		1137202	0					
ANR	1137368	Identifier	temp		1137202	0					
ANR	1137369	ForStatement	for ( int i = 1 ; i < len ; i ++ )		1137202	1					
ANR	1137370	ForInit	int i = 1 ;	341:9:8479:8486	1137202	0	True				
ANR	1137371	IdentifierDeclStatement	int i = 1 ;		1137202	0					
ANR	1137372	IdentifierDecl	i = 1		1137202	0					
ANR	1137373	IdentifierDeclType	int		1137202	0					
ANR	1137374	Identifier	i		1137202	1					
ANR	1137375	AssignmentExpression	i = 1		1137202	2		=			
ANR	1137376	Identifier	i		1137202	0					
ANR	1137377	PrimaryExpression	1		1137202	1					
ANR	1137378	Condition	i < len	341:17:8487:8491	1137202	1	True				
ANR	1137379	RelationalExpression	i < len		1137202	0		<			
ANR	1137380	Identifier	i		1137202	0					
ANR	1137381	Identifier	len		1137202	1					
ANR	1137382	PostIncDecOperationExpression	i ++	341:23:8493:8495	1137202	2	True				
ANR	1137383	Identifier	i		1137202	0					
ANR	1137384	IncDec	++		1137202	1					
ANR	1137385	ExpressionStatement	attrval [ i - 1 ] = temp [ i ]	342:6:8504:8526	1137202	3	True				
ANR	1137386	AssignmentExpression	attrval [ i - 1 ] = temp [ i ]		1137202	0		=			
ANR	1137387	ArrayIndexing	attrval [ i - 1 ]		1137202	0					
ANR	1137388	Identifier	attrval		1137202	0					
ANR	1137389	AdditiveExpression	i - 1		1137202	1		-			
ANR	1137390	Identifier	i		1137202	0					
ANR	1137391	PrimaryExpression	1		1137202	1					
ANR	1137392	ArrayIndexing	temp [ i ]		1137202	1					
ANR	1137393	Identifier	temp		1137202	0					
ANR	1137394	Identifier	i		1137202	1					
ANR	1137395	ExpressionStatement	attrval [ len - 2 ] = '\\0'	343:4:8532:8553	1137202	2	True				
ANR	1137396	AssignmentExpression	attrval [ len - 2 ] = '\\0'		1137202	0		=			
ANR	1137397	ArrayIndexing	attrval [ len - 2 ]		1137202	0					
ANR	1137398	Identifier	attrval		1137202	0					
ANR	1137399	AdditiveExpression	len - 2		1137202	1		-			
ANR	1137400	Identifier	len		1137202	0					
ANR	1137401	PrimaryExpression	2		1137202	1					
ANR	1137402	PrimaryExpression	'\\0'		1137202	1					
ANR	1137403	ElseStatement	else		1137202	0					
ANR	1137404	ExpressionStatement	"strncpy ( attrval , temp , MAXSTR )"	346:4:8570:8599	1137202	0	True				
ANR	1137405	CallExpression	"strncpy ( attrval , temp , MAXSTR )"		1137202	0					
ANR	1137406	Callee	strncpy		1137202	0					
ANR	1137407	Identifier	strncpy		1137202	0					
ANR	1137408	ArgumentList	attrval		1137202	1					
ANR	1137409	Argument	attrval		1137202	0					
ANR	1137410	Identifier	attrval		1137202	0					
ANR	1137411	Argument	temp		1137202	1					
ANR	1137412	Identifier	temp		1137202	0					
ANR	1137413	Argument	MAXSTR		1137202	2					
ANR	1137414	Identifier	MAXSTR		1137202	0					
ANR	1137415	IfStatement	if ( subAd != NULL )		1137202	15					
ANR	1137416	Condition	subAd != NULL	349:6:8651:8663	1137202	0	True				
ANR	1137417	EqualityExpression	subAd != NULL		1137202	0		!=			
ANR	1137418	Identifier	subAd		1137202	0					
ANR	1137419	Identifier	NULL		1137202	1					
ANR	1137420	Statement	delete	349:21:8666:8671	1137202	1	True				
ANR	1137421	ExpressionStatement	subAd	349:28:8673:8678	1137202	16	True				
ANR	1137422	Identifier	subAd		1137202	0					
ANR	1137423	ReturnStatement	return 1 ;	351:2:8683:8691	1137202	17	True				
ANR	1137424	PrimaryExpression	1		1137202	0					
ANR	1137425	ReturnType	int		1137202	1					
ANR	1137426	Identifier	get_subAdval		1137202	2					
ANR	1137427	ParameterList	"classad :: ClassAd * parentAd , char * subAdname , char * attr , char * attrval"		1137202	3					
ANR	1137428	Parameter	classad :: ClassAd * parentAd	304:17:7468:7493	1137202	0	True				
ANR	1137429	ParameterType	classad :: ClassAd *		1137202	0					
ANR	1137430	Identifier	parentAd		1137202	1					
ANR	1137431	Parameter	char * subAdname	304:45:7496:7510	1137202	1	True				
ANR	1137432	ParameterType	char *		1137202	0					
ANR	1137433	Identifier	subAdname		1137202	1					
ANR	1137434	Parameter	char * attr	304:62:7513:7522	1137202	2	True				
ANR	1137435	ParameterType	char *		1137202	0					
ANR	1137436	Identifier	attr		1137202	1					
ANR	1137437	Parameter	char * attrval	304:74:7525:7537	1137202	3	True				
ANR	1137438	ParameterType	char *		1137202	0					
ANR	1137439	Identifier	attrval		1137202	1					
ANR	1137440	CFGEntryNode	ENTRY		1137202		True				
ANR	1137441	CFGExitNode	EXIT		1137202		True				
ANR	1137442	Symbol	subAd -> Lookup		1137202						
ANR	1137443	Symbol	* parentAd		1137202						
ANR	1137444	Symbol	subAd		1137202						
ANR	1137445	Symbol	strlen		1137202						
ANR	1137446	Symbol	len		1137202						
ANR	1137447	Symbol	attrval		1137202						
ANR	1137448	Symbol	attr		1137202						
ANR	1137449	Symbol	* subAd		1137202						
ANR	1137450	Symbol	temp		1137202						
ANR	1137451	Symbol	NULL		1137202						
ANR	1137452	Symbol	parentAd		1137202						
ANR	1137453	Symbol	subAdname		1137202						
ANR	1137454	Symbol	D_ALWAYS		1137202						
ANR	1137455	Symbol	i		1137202						
ANR	1137456	Symbol	attrexpr		1137202						
ANR	1137457	Symbol	parentAd -> Lookup		1137202						
ANR	1137458	Symbol	parser . ParseClassAd		1137202						
ANR	1137459	Symbol	* temp		1137202						
ANR	1137460	Symbol	MAXSTR		1137202						
ANR	1137461	Symbol	* i		1137202						
ANR	1137462	Symbol	parser		1137202						
ANR	1137463	Symbol	unparser		1137202						
ANR	1137464	Symbol	adbuffer . c_str		1137202						
ANR	1137465	Symbol	* attrval		1137202						
ANR	1137466	Symbol	adbuffer		1137202						
ANR	1137467	Symbol	* len		1137202						
