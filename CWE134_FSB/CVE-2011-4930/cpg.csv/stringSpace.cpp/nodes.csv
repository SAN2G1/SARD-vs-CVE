command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5276681	File	data/converged/CVE-2011-4930_htcondor/stringSpace.cpp								
ANR	5276682	Function	StringSpace :: StringSpace	28:0:965:1437							
ANR	5276683	FunctionDef	StringSpace :: StringSpace (int initial_size)		5276682	0					
ANR	5276684	CompoundStatement		30:0:1010:1437	5276682	0					
ANR	5276685	IdentifierDeclStatement	SSStringEnt filler ;	31:1:1013:1031	5276682	0	True				
ANR	5276686	IdentifierDecl	filler		5276682	0					
ANR	5276687	IdentifierDeclType	SSStringEnt		5276682	0					
ANR	5276688	Identifier	filler		5276682	1					
ANR	5276689	ExpressionStatement	"stringSpace = new HashTable < YourSensitiveString , int > ( ( int ) ( 1.25 * initial_size ) , & YourSensitiveString :: hashFunction )"	32:1:1034:1157	5276682	1	True				
ANR	5276690	AssignmentExpression	"stringSpace = new HashTable < YourSensitiveString , int > ( ( int ) ( 1.25 * initial_size ) , & YourSensitiveString :: hashFunction )"		5276682	0		=			
ANR	5276691	Identifier	stringSpace		5276682	0					
ANR	5276692	Expression	"( int ) ( 1.25 * initial_size ) , & YourSensitiveString :: hashFunction"		5276682	1					
ANR	5276693	CastExpression	( int ) ( 1.25 * initial_size )		5276682	0					
ANR	5276694	CastTarget	int		5276682	0					
ANR	5276695	MultiplicativeExpression	1.25 * initial_size		5276682	1		*			
ANR	5276696	PrimaryExpression	1.25		5276682	0					
ANR	5276697	Identifier	initial_size		5276682	1					
ANR	5276698	UnaryOperationExpression	& YourSensitiveString :: hashFunction		5276682	1					
ANR	5276699	UnaryOperator	&		5276682	0					
ANR	5276700	Identifier	YourSensitiveString :: hashFunction		5276682	1					
ANR	5276701	ExpressionStatement	filler . inUse = false	37:1:1193:1217	5276682	2	True				
ANR	5276702	AssignmentExpression	filler . inUse = false		5276682	0		=			
ANR	5276703	MemberAccess	filler . inUse		5276682	0					
ANR	5276704	Identifier	filler		5276682	0					
ANR	5276705	Identifier	inUse		5276682	1					
ANR	5276706	Identifier	false		5276682	1					
ANR	5276707	ExpressionStatement	filler . string = NULL	38:1:1220:1243	5276682	3	True				
ANR	5276708	AssignmentExpression	filler . string = NULL		5276682	0		=			
ANR	5276709	MemberAccess	filler . string		5276682	0					
ANR	5276710	Identifier	filler		5276682	0					
ANR	5276711	Identifier	string		5276682	1					
ANR	5276712	Identifier	NULL		5276682	1					
ANR	5276713	ExpressionStatement	filler . refCount = 0	39:1:1246:1266	5276682	4	True				
ANR	5276714	AssignmentExpression	filler . refCount = 0		5276682	0		=			
ANR	5276715	MemberAccess	filler . refCount		5276682	0					
ANR	5276716	Identifier	filler		5276682	0					
ANR	5276717	Identifier	refCount		5276682	1					
ANR	5276718	PrimaryExpression	0		5276682	1					
ANR	5276719	ExpressionStatement	strTable . fill ( filler )	40:1:1269:1291	5276682	5	True				
ANR	5276720	CallExpression	strTable . fill ( filler )		5276682	0					
ANR	5276721	Callee	strTable . fill		5276682	0					
ANR	5276722	MemberAccess	strTable . fill		5276682	0					
ANR	5276723	Identifier	strTable		5276682	0					
ANR	5276724	Identifier	fill		5276682	1					
ANR	5276725	ArgumentList	filler		5276682	1					
ANR	5276726	Argument	filler		5276682	0					
ANR	5276727	Identifier	filler		5276682	0					
ANR	5276728	ExpressionStatement	first_free_slot = 0	43:1:1335:1354	5276682	6	True				
ANR	5276729	AssignmentExpression	first_free_slot = 0		5276682	0		=			
ANR	5276730	Identifier	first_free_slot		5276682	0					
ANR	5276731	PrimaryExpression	0		5276682	1					
ANR	5276732	ExpressionStatement	highest_used_slot = - 1	44:1:1357:1379	5276682	7	True				
ANR	5276733	AssignmentExpression	highest_used_slot = - 1		5276682	0		=			
ANR	5276734	Identifier	highest_used_slot		5276682	0					
ANR	5276735	UnaryOperationExpression	- 1		5276682	1					
ANR	5276736	UnaryOperator	-		5276682	0					
ANR	5276737	PrimaryExpression	1		5276682	1					
ANR	5276738	ExpressionStatement	number_of_slots_filled = 0	45:1:1382:1408	5276682	8	True				
ANR	5276739	AssignmentExpression	number_of_slots_filled = 0		5276682	0		=			
ANR	5276740	Identifier	number_of_slots_filled		5276682	0					
ANR	5276741	PrimaryExpression	0		5276682	1					
ANR	5276742	ReturnStatement	return ;	47:1:1429:1435	5276682	9	True				
ANR	5276743	Identifier	StringSpace :: StringSpace		5276682	1					
ANR	5276744	ParameterList	int initial_size		5276682	2					
ANR	5276745	Parameter	int initial_size	29:13:992:1007	5276682	0	True				
ANR	5276746	ParameterType	int		5276682	0					
ANR	5276747	Identifier	initial_size		5276682	1					
ANR	5276748	CFGEntryNode	ENTRY		5276682		True				
ANR	5276749	CFGExitNode	EXIT		5276682		True				
ANR	5276750	Symbol	NULL		5276682						
ANR	5276751	Symbol	number_of_slots_filled		5276682						
ANR	5276752	Symbol	false		5276682						
ANR	5276753	Symbol	filler . refCount		5276682						
ANR	5276754	Symbol	initial_size		5276682						
ANR	5276755	Symbol	& YourSensitiveString :: hashFunction		5276682						
ANR	5276756	Symbol	strTable		5276682						
ANR	5276757	Symbol	highest_used_slot		5276682						
ANR	5276758	Symbol	filler . inUse		5276682						
ANR	5276759	Symbol	first_free_slot		5276682						
ANR	5276760	Symbol	filler		5276682						
ANR	5276761	Symbol	stringSpace		5276682						
ANR	5276762	Symbol	filler . string		5276682						
ANR	5276763	Function	StringSpace :: ~StringSpace	51:0:1441:1514							
ANR	5276764	FunctionDef	StringSpace :: ~StringSpace ()		5276763	0					
ANR	5276765	CompoundStatement		53:0:1471:1514	5276763	0					
ANR	5276766	ExpressionStatement	purge ( )	54:1:1474:1482	5276763	0	True				
ANR	5276767	CallExpression	purge ( )		5276763	0					
ANR	5276768	Callee	purge		5276763	0					
ANR	5276769	Identifier	purge		5276763	0					
ANR	5276770	ArgumentList			5276763	1					
ANR	5276771	Statement	delete	55:1:1485:1490	5276763	1	True				
ANR	5276772	ExpressionStatement	stringSpace	55:8:1492:1503	5276763	2	True				
ANR	5276773	Identifier	stringSpace		5276763	0					
ANR	5276774	ReturnStatement	return ;	56:1:1506:1512	5276763	3	True				
ANR	5276775	Identifier	StringSpace :: ~StringSpace		5276763	1					
ANR	5276776	ParameterList			5276763	2					
ANR	5276777	CFGEntryNode	ENTRY		5276763		True				
ANR	5276778	CFGExitNode	EXIT		5276763		True				
ANR	5276779	Function	StringSpace :: purge	60:0:1518:1958							
ANR	5276780	FunctionDef	StringSpace :: purge ()		5276779	0					
ANR	5276781	CompoundStatement		62:0:1546:1958	5276779	0					
ANR	5276782	IdentifierDeclStatement	int i ;	64:1:1590:1595	5276779	0	True				
ANR	5276783	IdentifierDecl	i		5276779	0					
ANR	5276784	IdentifierDeclType	int		5276779	0					
ANR	5276785	Identifier	i		5276779	1					
ANR	5276786	ForStatement	for ( i = 0 ; i <= highest_used_slot ; i ++ )		5276779	1					
ANR	5276787	ForInit	i = 0 ;	65:6:1603:1608	5276779	0	True				
ANR	5276788	AssignmentExpression	i = 0		5276779	0		=			
ANR	5276789	Identifier	i		5276779	0					
ANR	5276790	PrimaryExpression	0		5276779	1					
ANR	5276791	Condition	i <= highest_used_slot	65:13:1610:1631	5276779	1	True				
ANR	5276792	RelationalExpression	i <= highest_used_slot		5276779	0		<=			
ANR	5276793	Identifier	i		5276779	0					
ANR	5276794	Identifier	highest_used_slot		5276779	1					
ANR	5276795	PostIncDecOperationExpression	i ++	65:37:1634:1636	5276779	2	True				
ANR	5276796	Identifier	i		5276779	0					
ANR	5276797	IncDec	++		5276779	1					
ANR	5276798	CompoundStatement		5:1:94:94	5276779	3					
ANR	5276799	IfStatement	if ( strTable [ i ] . inUse && strTable [ i ] . string )		5276779	0					
ANR	5276800	Condition	strTable [ i ] . inUse && strTable [ i ] . string	67:6:1649:1687	5276779	0	True				
ANR	5276801	AndExpression	strTable [ i ] . inUse && strTable [ i ] . string		5276779	0		&&			
ANR	5276802	MemberAccess	strTable [ i ] . inUse		5276779	0					
ANR	5276803	ArrayIndexing	strTable [ i ]		5276779	0					
ANR	5276804	Identifier	strTable		5276779	0					
ANR	5276805	Identifier	i		5276779	1					
ANR	5276806	Identifier	inUse		5276779	1					
ANR	5276807	MemberAccess	strTable [ i ] . string		5276779	1					
ANR	5276808	ArrayIndexing	strTable [ i ]		5276779	0					
ANR	5276809	Identifier	strTable		5276779	0					
ANR	5276810	Identifier	i		5276779	1					
ANR	5276811	Identifier	string		5276779	1					
ANR	5276812	CompoundStatement		7:2:145:145	5276779	1					
ANR	5276813	ExpressionStatement	free ( strTable [ i ] . string )	69:3:1697:1722	5276779	0	True				
ANR	5276814	CallExpression	free ( strTable [ i ] . string )		5276779	0					
ANR	5276815	Callee	free		5276779	0					
ANR	5276816	Identifier	free		5276779	0					
ANR	5276817	ArgumentList	strTable [ i ] . string		5276779	1					
ANR	5276818	Argument	strTable [ i ] . string		5276779	0					
ANR	5276819	MemberAccess	strTable [ i ] . string		5276779	0					
ANR	5276820	ArrayIndexing	strTable [ i ]		5276779	0					
ANR	5276821	Identifier	strTable		5276779	0					
ANR	5276822	Identifier	i		5276779	1					
ANR	5276823	Identifier	string		5276779	1					
ANR	5276824	ExpressionStatement	strTable [ i ] . string = NULL	70:3:1727:1752	5276779	1	True				
ANR	5276825	AssignmentExpression	strTable [ i ] . string = NULL		5276779	0		=			
ANR	5276826	MemberAccess	strTable [ i ] . string		5276779	0					
ANR	5276827	ArrayIndexing	strTable [ i ]		5276779	0					
ANR	5276828	Identifier	strTable		5276779	0					
ANR	5276829	Identifier	i		5276779	1					
ANR	5276830	Identifier	string		5276779	1					
ANR	5276831	Identifier	NULL		5276779	1					
ANR	5276832	ExpressionStatement	strTable [ i ] . inUse = false	71:3:1757:1782	5276779	2	True				
ANR	5276833	AssignmentExpression	strTable [ i ] . inUse = false		5276779	0		=			
ANR	5276834	MemberAccess	strTable [ i ] . inUse		5276779	0					
ANR	5276835	ArrayIndexing	strTable [ i ]		5276779	0					
ANR	5276836	Identifier	strTable		5276779	0					
ANR	5276837	Identifier	i		5276779	1					
ANR	5276838	Identifier	inUse		5276779	1					
ANR	5276839	Identifier	false		5276779	1					
ANR	5276840	ExpressionStatement	strTable [ i ] . refCount = 0	72:3:1787:1811	5276779	3	True				
ANR	5276841	AssignmentExpression	strTable [ i ] . refCount = 0		5276779	0		=			
ANR	5276842	MemberAccess	strTable [ i ] . refCount		5276779	0					
ANR	5276843	ArrayIndexing	strTable [ i ]		5276779	0					
ANR	5276844	Identifier	strTable		5276779	0					
ANR	5276845	Identifier	i		5276779	1					
ANR	5276846	Identifier	refCount		5276779	1					
ANR	5276847	PrimaryExpression	0		5276779	1					
ANR	5276848	ExpressionStatement	first_free_slot = 0	76:1:1822:1841	5276779	2	True				
ANR	5276849	AssignmentExpression	first_free_slot = 0		5276779	0		=			
ANR	5276850	Identifier	first_free_slot		5276779	0					
ANR	5276851	PrimaryExpression	0		5276779	1					
ANR	5276852	ExpressionStatement	highest_used_slot = - 1	77:1:1844:1866	5276779	3	True				
ANR	5276853	AssignmentExpression	highest_used_slot = - 1		5276779	0		=			
ANR	5276854	Identifier	highest_used_slot		5276779	0					
ANR	5276855	UnaryOperationExpression	- 1		5276779	1					
ANR	5276856	UnaryOperator	-		5276779	0					
ANR	5276857	PrimaryExpression	1		5276779	1					
ANR	5276858	ExpressionStatement	number_of_slots_filled = 0	78:1:1869:1895	5276779	4	True				
ANR	5276859	AssignmentExpression	number_of_slots_filled = 0		5276779	0		=			
ANR	5276860	Identifier	number_of_slots_filled		5276779	0					
ANR	5276861	PrimaryExpression	0		5276779	1					
ANR	5276862	ExpressionStatement	stringSpace -> clear ( )	81:1:1927:1947	5276779	5	True				
ANR	5276863	CallExpression	stringSpace -> clear ( )		5276779	0					
ANR	5276864	Callee	stringSpace -> clear		5276779	0					
ANR	5276865	PtrMemberAccess	stringSpace -> clear		5276779	0					
ANR	5276866	Identifier	stringSpace		5276779	0					
ANR	5276867	Identifier	clear		5276779	1					
ANR	5276868	ArgumentList			5276779	1					
ANR	5276869	ReturnStatement	return ;	82:1:1950:1956	5276779	6	True				
ANR	5276870	ReturnType	void		5276779	1					
ANR	5276871	Identifier	StringSpace :: purge		5276779	2					
ANR	5276872	ParameterList			5276779	3					
ANR	5276873	CFGEntryNode	ENTRY		5276779		True				
ANR	5276874	CFGExitNode	EXIT		5276779		True				
ANR	5276875	Symbol	NULL		5276779						
ANR	5276876	Symbol	number_of_slots_filled		5276779						
ANR	5276877	Symbol	false		5276779						
ANR	5276878	Symbol	i		5276779						
ANR	5276879	Symbol	strTable [ i ] . refCount		5276779						
ANR	5276880	Symbol	strTable		5276779						
ANR	5276881	Symbol	* i		5276779						
ANR	5276882	Symbol	highest_used_slot		5276779						
ANR	5276883	Symbol	first_free_slot		5276779						
ANR	5276884	Symbol	* strTable		5276779						
ANR	5276885	Symbol	strTable [ i ] . string		5276779						
ANR	5276886	Symbol	strTable [ i ] . inUse		5276779						
ANR	5276887	Symbol	stringSpace		5276779						
ANR	5276888	Function	StringSpace :: getCanonical	85:0:1961:3158							
ANR	5276889	FunctionDef	StringSpace :: getCanonical (const char * & str)		5276888	0					
ANR	5276890	CompoundStatement		87:0:2011:3158	5276888	0					
ANR	5276891	IfStatement	if ( ! str )		5276888	0					
ANR	5276892	Condition	! str	89:5:2035:2038	5276888	0	True				
ANR	5276893	UnaryOperationExpression	! str		5276888	0					
ANR	5276894	UnaryOperator	!		5276888	0					
ANR	5276895	Identifier	str		5276888	1					
ANR	5276896	ReturnStatement	return - 1 ;	89:11:2041:2050	5276888	1	True				
ANR	5276897	UnaryOperationExpression	- 1		5276888	0					
ANR	5276898	UnaryOperator	-		5276888	0					
ANR	5276899	PrimaryExpression	1		5276888	1					
ANR	5276900	IdentifierDeclStatement	YourSensitiveString yourStr ( str ) ;	91:1:2054:2086	5276888	1	True				
ANR	5276901	IdentifierDecl	yourStr ( str )		5276888	0					
ANR	5276902	IdentifierDeclType	YourSensitiveString		5276888	0					
ANR	5276903	Identifier	yourStr		5276888	1					
ANR	5276904	Identifier	str		5276888	2					
ANR	5276905	IdentifierDeclStatement	int index ;	92:1:2089:2098	5276888	2	True				
ANR	5276906	IdentifierDecl	index		5276888	0					
ANR	5276907	IdentifierDeclType	int		5276888	0					
ANR	5276908	Identifier	index		5276888	1					
ANR	5276909	IfStatement	"if ( stringSpace -> lookup ( yourStr , index ) == 0 )"		5276888	3					
ANR	5276910	Condition	"stringSpace -> lookup ( yourStr , index ) == 0"	95:5:2143:2183	5276888	0	True				
ANR	5276911	EqualityExpression	"stringSpace -> lookup ( yourStr , index ) == 0"		5276888	0		==			
ANR	5276912	CallExpression	"stringSpace -> lookup ( yourStr , index )"		5276888	0					
ANR	5276913	Callee	stringSpace -> lookup		5276888	0					
ANR	5276914	PtrMemberAccess	stringSpace -> lookup		5276888	0					
ANR	5276915	Identifier	stringSpace		5276888	0					
ANR	5276916	Identifier	lookup		5276888	1					
ANR	5276917	ArgumentList	yourStr		5276888	1					
ANR	5276918	Argument	yourStr		5276888	0					
ANR	5276919	Identifier	yourStr		5276888	0					
ANR	5276920	Argument	index		5276888	1					
ANR	5276921	Identifier	index		5276888	0					
ANR	5276922	PrimaryExpression	0		5276888	1					
ANR	5276923	CompoundStatement		10:1:176:176	5276888	1					
ANR	5276924	ExpressionStatement	strTable [ index ] . refCount ++	98:2:2223:2249	5276888	0	True				
ANR	5276925	PostIncDecOperationExpression	strTable [ index ] . refCount ++		5276888	0					
ANR	5276926	MemberAccess	strTable [ index ] . refCount		5276888	0					
ANR	5276927	ArrayIndexing	strTable [ index ]		5276888	0					
ANR	5276928	Identifier	strTable		5276888	0					
ANR	5276929	Identifier	index		5276888	1					
ANR	5276930	Identifier	refCount		5276888	1					
ANR	5276931	IncDec	++		5276888	1					
ANR	5276932	ReturnStatement	return index ;	99:2:2253:2265	5276888	1	True				
ANR	5276933	Identifier	index		5276888	0					
ANR	5276934	ExpressionStatement	index = first_free_slot	103:4:2316:2339	5276888	4	True				
ANR	5276935	AssignmentExpression	index = first_free_slot		5276888	0		=			
ANR	5276936	Identifier	index		5276888	0					
ANR	5276937	Identifier	first_free_slot		5276888	1					
ANR	5276938	ExpressionStatement	strTable [ index ] . string = strdup ( str )	104:1:2342:2379	5276888	5	True				
ANR	5276939	AssignmentExpression	strTable [ index ] . string = strdup ( str )		5276888	0		=			
ANR	5276940	MemberAccess	strTable [ index ] . string		5276888	0					
ANR	5276941	ArrayIndexing	strTable [ index ]		5276888	0					
ANR	5276942	Identifier	strTable		5276888	0					
ANR	5276943	Identifier	index		5276888	1					
ANR	5276944	Identifier	string		5276888	1					
ANR	5276945	CallExpression	strdup ( str )		5276888	1					
ANR	5276946	Callee	strdup		5276888	0					
ANR	5276947	Identifier	strdup		5276888	0					
ANR	5276948	ArgumentList	str		5276888	1					
ANR	5276949	Argument	str		5276888	0					
ANR	5276950	Identifier	str		5276888	0					
ANR	5276951	ExpressionStatement	strTable [ index ] . inUse = true	105:1:2382:2416	5276888	6	True				
ANR	5276952	AssignmentExpression	strTable [ index ] . inUse = true		5276888	0		=			
ANR	5276953	MemberAccess	strTable [ index ] . inUse		5276888	0					
ANR	5276954	ArrayIndexing	strTable [ index ]		5276888	0					
ANR	5276955	Identifier	strTable		5276888	0					
ANR	5276956	Identifier	index		5276888	1					
ANR	5276957	Identifier	inUse		5276888	1					
ANR	5276958	Identifier	true		5276888	1					
ANR	5276959	ExpressionStatement	strTable [ index ] . refCount = 1	106:4:2422:2453	5276888	7	True				
ANR	5276960	AssignmentExpression	strTable [ index ] . refCount = 1		5276888	0		=			
ANR	5276961	MemberAccess	strTable [ index ] . refCount		5276888	0					
ANR	5276962	ArrayIndexing	strTable [ index ]		5276888	0					
ANR	5276963	Identifier	strTable		5276888	0					
ANR	5276964	Identifier	index		5276888	1					
ANR	5276965	Identifier	refCount		5276888	1					
ANR	5276966	PrimaryExpression	1		5276888	1					
ANR	5276967	ExpressionStatement	number_of_slots_filled ++	107:1:2456:2480	5276888	8	True				
ANR	5276968	PostIncDecOperationExpression	number_of_slots_filled ++		5276888	0					
ANR	5276969	Identifier	number_of_slots_filled		5276888	0					
ANR	5276970	IncDec	++		5276888	1					
ANR	5276971	WhileStatement	while ( strTable [ first_free_slot ] . inUse )		5276888	9					
ANR	5276972	Condition	strTable [ first_free_slot ] . inUse	112:8:2648:2678	5276888	0	True				
ANR	5276973	MemberAccess	strTable [ first_free_slot ] . inUse		5276888	0					
ANR	5276974	ArrayIndexing	strTable [ first_free_slot ]		5276888	0					
ANR	5276975	Identifier	strTable		5276888	0					
ANR	5276976	Identifier	first_free_slot		5276888	1					
ANR	5276977	Identifier	inUse		5276888	1					
ANR	5276978	CompoundStatement		26:41:669:669	5276888	1					
ANR	5276979	ExpressionStatement	first_free_slot ++	113:2:2685:2702	5276888	0	True				
ANR	5276980	PostIncDecOperationExpression	first_free_slot ++		5276888	0					
ANR	5276981	Identifier	first_free_slot		5276888	0					
ANR	5276982	IncDec	++		5276888	1					
ANR	5276983	IfStatement	if ( first_free_slot >= highest_used_slot )		5276888	10					
ANR	5276984	Condition	first_free_slot >= highest_used_slot	117:5:2827:2862	5276888	0	True				
ANR	5276985	RelationalExpression	first_free_slot >= highest_used_slot		5276888	0		>=			
ANR	5276986	Identifier	first_free_slot		5276888	0					
ANR	5276987	Identifier	highest_used_slot		5276888	1					
ANR	5276988	CompoundStatement		31:43:853:853	5276888	1					
ANR	5276989	ExpressionStatement	highest_used_slot = first_free_slot - 1	120:2:2950:2989	5276888	0	True				
ANR	5276990	AssignmentExpression	highest_used_slot = first_free_slot - 1		5276888	0		=			
ANR	5276991	Identifier	highest_used_slot		5276888	0					
ANR	5276992	AdditiveExpression	first_free_slot - 1		5276888	1		-			
ANR	5276993	Identifier	first_free_slot		5276888	0					
ANR	5276994	PrimaryExpression	1		5276888	1					
ANR	5276995	ExpressionStatement	yourStr = strTable [ index ] . string	124:1:3026:3058	5276888	11	True				
ANR	5276996	AssignmentExpression	yourStr = strTable [ index ] . string		5276888	0		=			
ANR	5276997	Identifier	yourStr		5276888	0					
ANR	5276998	MemberAccess	strTable [ index ] . string		5276888	1					
ANR	5276999	ArrayIndexing	strTable [ index ]		5276888	0					
ANR	5277000	Identifier	strTable		5276888	0					
ANR	5277001	Identifier	index		5276888	1					
ANR	5277002	Identifier	string		5276888	1					
ANR	5277003	IfStatement	"if ( stringSpace -> insert ( yourStr , index ) == 0 )"		5276888	12					
ANR	5277004	Condition	"stringSpace -> insert ( yourStr , index ) == 0"	125:8:3068:3108	5276888	0	True				
ANR	5277005	EqualityExpression	"stringSpace -> insert ( yourStr , index ) == 0"		5276888	0		==			
ANR	5277006	CallExpression	"stringSpace -> insert ( yourStr , index )"		5276888	0					
ANR	5277007	Callee	stringSpace -> insert		5276888	0					
ANR	5277008	PtrMemberAccess	stringSpace -> insert		5276888	0					
ANR	5277009	Identifier	stringSpace		5276888	0					
ANR	5277010	Identifier	insert		5276888	1					
ANR	5277011	ArgumentList	yourStr		5276888	1					
ANR	5277012	Argument	yourStr		5276888	0					
ANR	5277013	Identifier	yourStr		5276888	0					
ANR	5277014	Argument	index		5276888	1					
ANR	5277015	Identifier	index		5276888	0					
ANR	5277016	PrimaryExpression	0		5276888	1					
ANR	5277017	ReturnStatement	return index ;	125:51:3111:3123	5276888	1	True				
ANR	5277018	Identifier	index		5276888	0					
ANR	5277019	ReturnStatement	return - 1 ;	128:1:3147:3156	5276888	13	True				
ANR	5277020	UnaryOperationExpression	- 1		5276888	0					
ANR	5277021	UnaryOperator	-		5276888	0					
ANR	5277022	PrimaryExpression	1		5276888	1					
ANR	5277023	ReturnType	int		5276888	1					
ANR	5277024	Identifier	StringSpace :: getCanonical		5276888	2					
ANR	5277025	ParameterList	const char * & str		5276888	3					
ANR	5277026	Parameter	const char * & str	86:14:1993:2008	5276888	0	True				
ANR	5277027	ParameterType	const char * &		5276888	0					
ANR	5277028	Identifier	str		5276888	1					
ANR	5277029	CFGEntryNode	ENTRY		5276888		True				
ANR	5277030	CFGExitNode	EXIT		5276888		True				
ANR	5277031	Symbol	strTable [ index ] . inUse		5276888						
ANR	5277032	Symbol	number_of_slots_filled		5276888						
ANR	5277033	Symbol	* index		5276888						
ANR	5277034	Symbol	strTable [ first_free_slot ] . inUse		5276888						
ANR	5277035	Symbol	index		5276888						
ANR	5277036	Symbol	strTable [ index ] . refCount		5276888						
ANR	5277037	Symbol	str		5276888						
ANR	5277038	Symbol	stringSpace -> lookup		5276888						
ANR	5277039	Symbol	strTable		5276888						
ANR	5277040	Symbol	highest_used_slot		5276888						
ANR	5277041	Symbol	first_free_slot		5276888						
ANR	5277042	Symbol	true		5276888						
ANR	5277043	Symbol	* strTable		5276888						
ANR	5277044	Symbol	strTable [ index ] . string		5276888						
ANR	5277045	Symbol	stringSpace		5276888						
ANR	5277046	Symbol	strdup		5276888						
ANR	5277047	Symbol	* first_free_slot		5276888						
ANR	5277048	Symbol	* stringSpace		5276888						
ANR	5277049	Symbol	stringSpace -> insert		5276888						
ANR	5277050	Symbol	yourStr		5276888						
ANR	5277051	Function	StringSpace :: getCanonical	132:0:3162:3344							
ANR	5277052	FunctionDef	"StringSpace :: getCanonical (const char * & str , SSString & canonical)"		5277051	0					
ANR	5277053	CompoundStatement		134:0:3233:3344	5277051	0					
ANR	5277054	ExpressionStatement	canonical . context = ( ( canonical . index = getCanonical ( str ) ) != - 1 ) ? this : 0	135:1:3236:3317	5277051	0	True				
ANR	5277055	AssignmentExpression	canonical . context = ( ( canonical . index = getCanonical ( str ) ) != - 1 ) ? this : 0		5277051	0		=			
ANR	5277056	MemberAccess	canonical . context		5277051	0					
ANR	5277057	Identifier	canonical		5277051	0					
ANR	5277058	Identifier	context		5277051	1					
ANR	5277059	ConditionalExpression	( ( canonical . index = getCanonical ( str ) ) != - 1 ) ? this : 0		5277051	1					
ANR	5277060	Condition	( canonical . index = getCanonical ( str ) ) != - 1		5277051	0					
ANR	5277061	EqualityExpression	( canonical . index = getCanonical ( str ) ) != - 1		5277051	0		!=			
ANR	5277062	AssignmentExpression	canonical . index = getCanonical ( str )		5277051	0		=			
ANR	5277063	MemberAccess	canonical . index		5277051	0					
ANR	5277064	Identifier	canonical		5277051	0					
ANR	5277065	Identifier	index		5277051	1					
ANR	5277066	CallExpression	getCanonical ( str )		5277051	1					
ANR	5277067	Callee	getCanonical		5277051	0					
ANR	5277068	Identifier	getCanonical		5277051	0					
ANR	5277069	ArgumentList	str		5277051	1					
ANR	5277070	Argument	str		5277051	0					
ANR	5277071	Identifier	str		5277051	0					
ANR	5277072	UnaryOperationExpression	- 1		5277051	1					
ANR	5277073	UnaryOperator	-		5277051	0					
ANR	5277074	PrimaryExpression	1		5277051	1					
ANR	5277075	Identifier	this		5277051	1					
ANR	5277076	PrimaryExpression	0		5277051	2					
ANR	5277077	ReturnStatement	return canonical . index ;	137:1:3320:3342	5277051	1	True				
ANR	5277078	MemberAccess	canonical . index		5277051	0					
ANR	5277079	Identifier	canonical		5277051	0					
ANR	5277080	Identifier	index		5277051	1					
ANR	5277081	ReturnType	int		5277051	1					
ANR	5277082	Identifier	StringSpace :: getCanonical		5277051	2					
ANR	5277083	ParameterList	"const char * & str , SSString & canonical"		5277051	3					
ANR	5277084	Parameter	const char * & str	133:14:3194:3209	5277051	0	True				
ANR	5277085	ParameterType	const char * &		5277051	0					
ANR	5277086	Identifier	str		5277051	1					
ANR	5277087	Parameter	SSString & canonical	133:32:3212:3230	5277051	1	True				
ANR	5277088	ParameterType	SSString &		5277051	0					
ANR	5277089	Identifier	canonical		5277051	1					
ANR	5277090	CFGEntryNode	ENTRY		5277051		True				
ANR	5277091	CFGExitNode	EXIT		5277051		True				
ANR	5277092	Symbol	str		5277051						
ANR	5277093	Symbol	canonical . context		5277051						
ANR	5277094	Symbol	getCanonical		5277051						
ANR	5277095	Symbol	this		5277051						
ANR	5277096	Symbol	canonical		5277051						
ANR	5277097	Symbol	canonical . index		5277051						
ANR	5277098	Function	StringSpace :: getCanonical	141:0:3348:3507							
ANR	5277099	FunctionDef	"StringSpace :: getCanonical (const char * & str , SSString * & canonical)"		5277098	0					
ANR	5277100	CompoundStatement		143:0:3420:3507	5277098	0					
ANR	5277101	Statement	if	144:1:3423:3424	5277098	0	True				
ANR	5277102	Statement	(	144:4:3426:3426	5277098	1	True				
ANR	5277103	Statement	!	144:5:3427:3427	5277098	2	True				
ANR	5277104	Statement	(	144:6:3428:3428	5277098	3	True				
ANR	5277105	Statement	canonical	144:7:3429:3437	5277098	4	True				
ANR	5277106	Statement	=	144:17:3439:3439	5277098	5	True				
ANR	5277107	Statement	new	144:19:3441:3443	5277098	6	True				
ANR	5277108	Statement	SSString	144:23:3445:3452	5277098	7	True				
ANR	5277109	Statement	)	144:31:3453:3453	5277098	8	True				
ANR	5277110	Statement	)	144:32:3454:3454	5277098	9	True				
ANR	5277111	ReturnStatement	return - 1 ;	144:34:3456:3465	5277098	10	True				
ANR	5277112	UnaryOperationExpression	- 1		5277098	0					
ANR	5277113	UnaryOperator	-		5277098	0					
ANR	5277114	PrimaryExpression	1		5277098	1					
ANR	5277115	ReturnStatement	"return getCanonical ( str , * canonical ) ;"	145:1:3468:3505	5277098	11	True				
ANR	5277116	CallExpression	"getCanonical ( str , * canonical )"		5277098	0					
ANR	5277117	Callee	getCanonical		5277098	0					
ANR	5277118	Identifier	getCanonical		5277098	0					
ANR	5277119	ArgumentList	str		5277098	1					
ANR	5277120	Argument	str		5277098	0					
ANR	5277121	Identifier	str		5277098	0					
ANR	5277122	Argument	* canonical		5277098	1					
ANR	5277123	UnaryOperationExpression	* canonical		5277098	0					
ANR	5277124	UnaryOperator	*		5277098	0					
ANR	5277125	Identifier	canonical		5277098	1					
ANR	5277126	ReturnType	int		5277098	1					
ANR	5277127	Identifier	StringSpace :: getCanonical		5277098	2					
ANR	5277128	ParameterList	"const char * & str , SSString * & canonical"		5277098	3					
ANR	5277129	Parameter	const char * & str	142:14:3380:3395	5277098	0	True				
ANR	5277130	ParameterType	const char * &		5277098	0					
ANR	5277131	Identifier	str		5277098	1					
ANR	5277132	Parameter	SSString * & canonical	142:32:3398:3417	5277098	1	True				
ANR	5277133	ParameterType	SSString * &		5277098	0					
ANR	5277134	Identifier	canonical		5277098	1					
ANR	5277135	CFGEntryNode	ENTRY		5277098		True				
ANR	5277136	CFGExitNode	EXIT		5277098		True				
ANR	5277137	Symbol	str		5277098						
ANR	5277138	Symbol	getCanonical		5277098						
ANR	5277139	Symbol	canonical		5277098						
ANR	5277140	Symbol	* canonical		5277098						
ANR	5277141	Function	StringSpace :: disposeByIndex	149:0:3511:3837							
ANR	5277142	FunctionDef	StringSpace :: disposeByIndex (int index)		5277141	0					
ANR	5277143	CompoundStatement		151:0:3556:3837	5277141	0					
ANR	5277144	IdentifierDeclStatement	SSString * str ;	155:1:3735:3748	5277141	0	True				
ANR	5277145	IdentifierDecl	* str		5277141	0					
ANR	5277146	IdentifierDeclType	SSString *		5277141	0					
ANR	5277147	Identifier	str		5277141	1					
ANR	5277148	Statement	str	157:1:3752:3754	5277141	1	True				
ANR	5277149	Statement	=	157:5:3756:3756	5277141	2	True				
ANR	5277150	Statement	new	157:7:3758:3760	5277141	3	True				
ANR	5277151	ExpressionStatement	SSString	157:11:3762:3770	5277141	4	True				
ANR	5277152	Identifier	SSString		5277141	0					
ANR	5277153	ExpressionStatement	str -> context = this	158:1:3773:3792	5277141	5	True				
ANR	5277154	AssignmentExpression	str -> context = this		5277141	0		=			
ANR	5277155	PtrMemberAccess	str -> context		5277141	0					
ANR	5277156	Identifier	str		5277141	0					
ANR	5277157	Identifier	context		5277141	1					
ANR	5277158	Identifier	this		5277141	1					
ANR	5277159	ExpressionStatement	str -> index = index	159:1:3795:3813	5277141	6	True				
ANR	5277160	AssignmentExpression	str -> index = index		5277141	0		=			
ANR	5277161	PtrMemberAccess	str -> index		5277141	0					
ANR	5277162	Identifier	str		5277141	0					
ANR	5277163	Identifier	index		5277141	1					
ANR	5277164	Identifier	index		5277141	1					
ANR	5277165	Statement	delete	160:1:3816:3821	5277141	7	True				
ANR	5277166	ExpressionStatement	str	160:8:3823:3826	5277141	8	True				
ANR	5277167	Identifier	str		5277141	0					
ANR	5277168	ReturnStatement	return ;	161:1:3829:3835	5277141	9	True				
ANR	5277169	ReturnType	void		5277141	1					
ANR	5277170	Identifier	StringSpace :: disposeByIndex		5277141	2					
ANR	5277171	ParameterList	int index		5277141	3					
ANR	5277172	Parameter	int index	150:15:3545:3553	5277141	0	True				
ANR	5277173	ParameterType	int		5277141	0					
ANR	5277174	Identifier	index		5277141	1					
ANR	5277175	CFGEntryNode	ENTRY		5277141		True				
ANR	5277176	CFGExitNode	EXIT		5277141		True				
ANR	5277177	Symbol	str		5277141						
ANR	5277178	Symbol	str -> context		5277141						
ANR	5277179	Symbol	this		5277141						
ANR	5277180	Symbol	index		5277141						
ANR	5277181	Symbol	* str		5277141						
ANR	5277182	Symbol	str -> index		5277141						
ANR	5277183	Function	StringSpace :: dispose	165:0:3841:3955							
ANR	5277184	FunctionDef	StringSpace :: dispose (const char * str)		5277183	0					
ANR	5277185	CompoundStatement		167:0:3885:3955	5277183	0					
ANR	5277186	IdentifierDeclStatement	int i = getCanonical ( str ) ;	168:1:3888:3913	5277183	0	True				
ANR	5277187	IdentifierDecl	i = getCanonical ( str )		5277183	0					
ANR	5277188	IdentifierDeclType	int		5277183	0					
ANR	5277189	Identifier	i		5277183	1					
ANR	5277190	AssignmentExpression	i = getCanonical ( str )		5277183	2		=			
ANR	5277191	Identifier	i		5277183	0					
ANR	5277192	CallExpression	getCanonical ( str )		5277183	1					
ANR	5277193	Callee	getCanonical		5277183	0					
ANR	5277194	Identifier	getCanonical		5277183	0					
ANR	5277195	ArgumentList	str		5277183	1					
ANR	5277196	Argument	str		5277183	0					
ANR	5277197	Identifier	str		5277183	0					
ANR	5277198	ExpressionStatement	disposeByIndex ( i )	169:1:3916:3933	5277183	1	True				
ANR	5277199	CallExpression	disposeByIndex ( i )		5277183	0					
ANR	5277200	Callee	disposeByIndex		5277183	0					
ANR	5277201	Identifier	disposeByIndex		5277183	0					
ANR	5277202	ArgumentList	i		5277183	1					
ANR	5277203	Argument	i		5277183	0					
ANR	5277204	Identifier	i		5277183	0					
ANR	5277205	ExpressionStatement	disposeByIndex ( i )	170:1:3936:3953	5277183	2	True				
ANR	5277206	CallExpression	disposeByIndex ( i )		5277183	0					
ANR	5277207	Callee	disposeByIndex		5277183	0					
ANR	5277208	Identifier	disposeByIndex		5277183	0					
ANR	5277209	ArgumentList	i		5277183	1					
ANR	5277210	Argument	i		5277183	0					
ANR	5277211	Identifier	i		5277183	0					
ANR	5277212	ReturnType	void		5277183	1					
ANR	5277213	Identifier	StringSpace :: dispose		5277183	2					
ANR	5277214	ParameterList	const char * str		5277183	3					
ANR	5277215	Parameter	const char * str	166:8:3868:3882	5277183	0	True				
ANR	5277216	ParameterType	const char *		5277183	0					
ANR	5277217	Identifier	str		5277183	1					
ANR	5277218	CFGEntryNode	ENTRY		5277183		True				
ANR	5277219	CFGExitNode	EXIT		5277183		True				
ANR	5277220	Symbol	str		5277183						
ANR	5277221	Symbol	getCanonical		5277183						
ANR	5277222	Symbol	i		5277183						
ANR	5277223	Function	SSString :: SSString	174:0:3959:4022							
ANR	5277224	FunctionDef	SSString :: SSString ()		5277223	0					
ANR	5277225	CompoundStatement		176:0:3982:4022	5277223	0					
ANR	5277226	ExpressionStatement	context = NULL	177:1:3985:3999	5277223	0	True				
ANR	5277227	AssignmentExpression	context = NULL		5277223	0		=			
ANR	5277228	Identifier	context		5277223	0					
ANR	5277229	Identifier	NULL		5277223	1					
ANR	5277230	ExpressionStatement	index = 0	178:1:4002:4011	5277223	1	True				
ANR	5277231	AssignmentExpression	index = 0		5277223	0		=			
ANR	5277232	Identifier	index		5277223	0					
ANR	5277233	PrimaryExpression	0		5277223	1					
ANR	5277234	ReturnStatement	return ;	179:1:4014:4020	5277223	2	True				
ANR	5277235	Identifier	SSString :: SSString		5277223	1					
ANR	5277236	ParameterList			5277223	2					
ANR	5277237	CFGEntryNode	ENTRY		5277223		True				
ANR	5277238	CFGExitNode	EXIT		5277223		True				
ANR	5277239	Symbol	NULL		5277223						
ANR	5277240	Symbol	context		5277223						
ANR	5277241	Symbol	index		5277223						
ANR	5277242	Function	SSString :: SSString	183:0:4026:4111							
ANR	5277243	FunctionDef	SSString :: SSString (const SSString & sstr)		5277242	0					
ANR	5277244	CompoundStatement		185:0:4069:4111	5277242	0					
ANR	5277245	ExpressionStatement	context = NULL	186:1:4072:4086	5277242	0	True				
ANR	5277246	AssignmentExpression	context = NULL		5277242	0		=			
ANR	5277247	Identifier	context		5277242	0					
ANR	5277248	Identifier	NULL		5277242	1					
ANR	5277249	ExpressionStatement	copy ( sstr )	187:1:4089:4100	5277242	1	True				
ANR	5277250	CallExpression	copy ( sstr )		5277242	0					
ANR	5277251	Callee	copy		5277242	0					
ANR	5277252	Identifier	copy		5277242	0					
ANR	5277253	ArgumentList	sstr		5277242	1					
ANR	5277254	Argument	sstr		5277242	0					
ANR	5277255	Identifier	sstr		5277242	0					
ANR	5277256	ReturnStatement	return ;	188:1:4103:4109	5277242	2	True				
ANR	5277257	Identifier	SSString :: SSString		5277242	1					
ANR	5277258	ParameterList	const SSString & sstr		5277242	2					
ANR	5277259	Parameter	const SSString & sstr	184:10:4047:4066	5277242	0	True				
ANR	5277260	ParameterType	const SSString &		5277242	0					
ANR	5277261	Identifier	sstr		5277242	1					
ANR	5277262	CFGEntryNode	ENTRY		5277242		True				
ANR	5277263	CFGExitNode	EXIT		5277242		True				
ANR	5277264	Symbol	NULL		5277242						
ANR	5277265	Symbol	sstr		5277242						
ANR	5277266	Symbol	context		5277242						
ANR	5277267	Function	SSString :: ~SSString	192:0:4115:4161							
ANR	5277268	FunctionDef	SSString :: ~SSString ()		5277267	0					
ANR	5277269	CompoundStatement		194:0:4138:4161	5277267	0					
ANR	5277270	ExpressionStatement	dispose ( )	195:1:4141:4150	5277267	0	True				
ANR	5277271	CallExpression	dispose ( )		5277267	0					
ANR	5277272	Callee	dispose		5277267	0					
ANR	5277273	Identifier	dispose		5277267	0					
ANR	5277274	ArgumentList			5277267	1					
ANR	5277275	ReturnStatement	return ;	196:1:4153:4159	5277267	1	True				
ANR	5277276	Identifier	SSString :: ~SSString		5277267	1					
ANR	5277277	ParameterList			5277267	2					
ANR	5277278	CFGEntryNode	ENTRY		5277267		True				
ANR	5277279	CFGExitNode	EXIT		5277267		True				
ANR	5277280	Function	SSString :: copy	200:0:4165:4410							
ANR	5277281	FunctionDef	SSString :: copy (const SSString & sstr)		5277280	0					
ANR	5277282	CompoundStatement		202:0:4208:4410	5277280	0					
ANR	5277283	ExpressionStatement	dispose ( )	204:1:4244:4254	5277280	0	True				
ANR	5277284	CallExpression	dispose ( )		5277280	0					
ANR	5277285	Callee	dispose		5277280	0					
ANR	5277286	Identifier	dispose		5277280	0					
ANR	5277287	ArgumentList			5277280	1					
ANR	5277288	ExpressionStatement	index = sstr . index	206:4:4261:4279	5277280	1	True				
ANR	5277289	AssignmentExpression	index = sstr . index		5277280	0		=			
ANR	5277290	Identifier	index		5277280	0					
ANR	5277291	MemberAccess	sstr . index		5277280	1					
ANR	5277292	Identifier	sstr		5277280	0					
ANR	5277293	Identifier	index		5277280	1					
ANR	5277294	ExpressionStatement	context = sstr . context	207:4:4285:4307	5277280	2	True				
ANR	5277295	AssignmentExpression	context = sstr . context		5277280	0		=			
ANR	5277296	Identifier	context		5277280	0					
ANR	5277297	MemberAccess	sstr . context		5277280	1					
ANR	5277298	Identifier	sstr		5277280	0					
ANR	5277299	Identifier	context		5277280	1					
ANR	5277300	IfStatement	if ( context )		5277280	3					
ANR	5277301	Condition	context	210:8:4348:4354	5277280	0	True				
ANR	5277302	Identifier	context		5277280	0					
ANR	5277303	CompoundStatement		9:17:148:148	5277280	1					
ANR	5277304	ExpressionStatement	context -> strTable [ index ] . refCount ++	211:2:4361:4396	5277280	0	True				
ANR	5277305	PostIncDecOperationExpression	context -> strTable [ index ] . refCount ++		5277280	0					
ANR	5277306	MemberAccess	context -> strTable [ index ] . refCount		5277280	0					
ANR	5277307	ArrayIndexing	context -> strTable [ index ]		5277280	0					
ANR	5277308	PtrMemberAccess	context -> strTable		5277280	0					
ANR	5277309	Identifier	context		5277280	0					
ANR	5277310	Identifier	strTable		5277280	1					
ANR	5277311	Identifier	index		5277280	1					
ANR	5277312	Identifier	refCount		5277280	1					
ANR	5277313	IncDec	++		5277280	1					
ANR	5277314	ReturnStatement	return ;	213:1:4402:4408	5277280	4	True				
ANR	5277315	ReturnType	void		5277280	1					
ANR	5277316	Identifier	SSString :: copy		5277280	2					
ANR	5277317	ParameterList	const SSString & sstr		5277280	3					
ANR	5277318	Parameter	const SSString & sstr	201:16:4186:4205	5277280	0	True				
ANR	5277319	ParameterType	const SSString &		5277280	0					
ANR	5277320	Identifier	sstr		5277280	1					
ANR	5277321	CFGEntryNode	ENTRY		5277280		True				
ANR	5277322	CFGExitNode	EXIT		5277280		True				
ANR	5277323	Symbol	sstr . context		5277280						
ANR	5277324	Symbol	* context -> strTable		5277280						
ANR	5277325	Symbol	* index		5277280						
ANR	5277326	Symbol	sstr		5277280						
ANR	5277327	Symbol	context		5277280						
ANR	5277328	Symbol	context -> strTable [ index ] . refCount		5277280						
ANR	5277329	Symbol	index		5277280						
ANR	5277330	Symbol	* * context		5277280						
ANR	5277331	Symbol	sstr . index		5277280						
ANR	5277332	Symbol	context -> strTable		5277280						
ANR	5277333	Symbol	* context		5277280						
ANR	5277334	Function	operator =	217:10:4440:4507							
ANR	5277335	FunctionDef	operator = (const SSString & str)		5277334	0					
ANR	5277336	CompoundStatement		218:0:4473:4507	5277334	0					
ANR	5277337	ExpressionStatement	copy ( str )	219:1:4476:4487	5277334	0	True				
ANR	5277338	CallExpression	copy ( str )		5277334	0					
ANR	5277339	Callee	copy		5277334	0					
ANR	5277340	Identifier	copy		5277334	0					
ANR	5277341	ArgumentList	str		5277334	1					
ANR	5277342	Argument	str		5277334	0					
ANR	5277343	Identifier	str		5277334	0					
ANR	5277344	ReturnStatement	return ( * this ) ;	220:1:4490:4505	5277334	1	True				
ANR	5277345	UnaryOperationExpression	* this		5277334	0					
ANR	5277346	UnaryOperator	*		5277334	0					
ANR	5277347	Identifier	this		5277334	1					
ANR	5277348	Identifier	operator =		5277334	1					
ANR	5277349	ParameterList	const SSString & str		5277334	2					
ANR	5277350	Parameter	const SSString & str	217:21:4451:4469	5277334	0	True				
ANR	5277351	ParameterType	const SSString &		5277334	0					
ANR	5277352	Identifier	str		5277334	1					
ANR	5277353	CFGEntryNode	ENTRY		5277334		True				
ANR	5277354	CFGExitNode	EXIT		5277334		True				
ANR	5277355	Symbol	str		5277334						
ANR	5277356	Symbol	* this		5277334						
ANR	5277357	Symbol	this		5277334						
ANR	5277358	Function	operator ==	223:0:4510:4727							
ANR	5277359	FunctionDef	"operator == (const SSString & s1 , const SSString & s2)"		5277358	0					
ANR	5277360	CompoundStatement		224:0:4567:4727	5277358	0					
ANR	5277361	IdentifierDeclStatement	bool are_equal ;	225:1:4570:4584	5277358	0	True				
ANR	5277362	IdentifierDecl	are_equal		5277358	0					
ANR	5277363	IdentifierDeclType	bool		5277358	0					
ANR	5277364	Identifier	are_equal		5277358	1					
ANR	5277365	IfStatement	if ( s1 . context == s2 . context && s1 . index == s2 . index )		5277358	1					
ANR	5277366	Condition	s1 . context == s2 . context && s1 . index == s2 . index	227:8:4595:4649	5277358	0	True				
ANR	5277367	AndExpression	s1 . context == s2 . context && s1 . index == s2 . index		5277358	0		&&			
ANR	5277368	EqualityExpression	s1 . context == s2 . context		5277358	0		==			
ANR	5277369	MemberAccess	s1 . context		5277358	0					
ANR	5277370	Identifier	s1		5277358	0					
ANR	5277371	Identifier	context		5277358	1					
ANR	5277372	MemberAccess	s2 . context		5277358	1					
ANR	5277373	Identifier	s2		5277358	0					
ANR	5277374	Identifier	context		5277358	1					
ANR	5277375	EqualityExpression	s1 . index == s2 . index		5277358	1		==			
ANR	5277376	MemberAccess	s1 . index		5277358	0					
ANR	5277377	Identifier	s1		5277358	0					
ANR	5277378	Identifier	index		5277358	1					
ANR	5277379	MemberAccess	s2 . index		5277358	1					
ANR	5277380	Identifier	s2		5277358	0					
ANR	5277381	Identifier	index		5277358	1					
ANR	5277382	CompoundStatement		5:32:84:84	5277358	1					
ANR	5277383	ExpressionStatement	are_equal = true	229:2:4656:4672	5277358	0	True				
ANR	5277384	AssignmentExpression	are_equal = true		5277358	0		=			
ANR	5277385	Identifier	are_equal		5277358	0					
ANR	5277386	Identifier	true		5277358	1					
ANR	5277387	ElseStatement	else		5277358	0					
ANR	5277388	CompoundStatement		7:8:114:114	5277358	0					
ANR	5277389	ExpressionStatement	are_equal = false	231:2:4686:4703	5277358	0	True				
ANR	5277390	AssignmentExpression	are_equal = false		5277358	0		=			
ANR	5277391	Identifier	are_equal		5277358	0					
ANR	5277392	Identifier	false		5277358	1					
ANR	5277393	ReturnStatement	return are_equal ;	233:1:4709:4725	5277358	2	True				
ANR	5277394	Identifier	are_equal		5277358	0					
ANR	5277395	ReturnType	bool		5277358	1					
ANR	5277396	Identifier	operator ==		5277358	2					
ANR	5277397	ParameterList	"const SSString & s1 , const SSString & s2"		5277358	3					
ANR	5277398	Parameter	const SSString & s1	223:17:4527:4544	5277358	0	True				
ANR	5277399	ParameterType	const SSString &		5277358	0					
ANR	5277400	Identifier	s1		5277358	1					
ANR	5277401	Parameter	const SSString & s2	223:37:4547:4564	5277358	1	True				
ANR	5277402	ParameterType	const SSString &		5277358	0					
ANR	5277403	Identifier	s2		5277358	1					
ANR	5277404	CFGEntryNode	ENTRY		5277358		True				
ANR	5277405	CFGExitNode	EXIT		5277358		True				
ANR	5277406	Symbol	s1 . context		5277358						
ANR	5277407	Symbol	are_equal		5277358						
ANR	5277408	Symbol	s2 . context		5277358						
ANR	5277409	Symbol	true		5277358						
ANR	5277410	Symbol	false		5277358						
ANR	5277411	Symbol	s2 . index		5277358						
ANR	5277412	Symbol	s1		5277358						
ANR	5277413	Symbol	s2		5277358						
ANR	5277414	Symbol	s1 . index		5277358						
ANR	5277415	Function	operator !=	237:0:4731:4964							
ANR	5277416	FunctionDef	"operator != (const SSString & s1 , const SSString & s2)"		5277415	0					
ANR	5277417	CompoundStatement		238:0:4788:4964	5277415	0					
ANR	5277418	IdentifierDeclStatement	bool are_not_equal ;	239:1:4791:4809	5277415	0	True				
ANR	5277419	IdentifierDecl	are_not_equal		5277415	0					
ANR	5277420	IdentifierDeclType	bool		5277415	0					
ANR	5277421	Identifier	are_not_equal		5277415	1					
ANR	5277422	IfStatement	if ( s1 . context != s2 . context || s1 . index != s2 . index )		5277415	1					
ANR	5277423	Condition	s1 . context != s2 . context || s1 . index != s2 . index	241:8:4820:4874	5277415	0	True				
ANR	5277424	OrExpression	s1 . context != s2 . context || s1 . index != s2 . index		5277415	0		||			
ANR	5277425	EqualityExpression	s1 . context != s2 . context		5277415	0		!=			
ANR	5277426	MemberAccess	s1 . context		5277415	0					
ANR	5277427	Identifier	s1		5277415	0					
ANR	5277428	Identifier	context		5277415	1					
ANR	5277429	MemberAccess	s2 . context		5277415	1					
ANR	5277430	Identifier	s2		5277415	0					
ANR	5277431	Identifier	context		5277415	1					
ANR	5277432	EqualityExpression	s1 . index != s2 . index		5277415	1		!=			
ANR	5277433	MemberAccess	s1 . index		5277415	0					
ANR	5277434	Identifier	s1		5277415	0					
ANR	5277435	Identifier	index		5277415	1					
ANR	5277436	MemberAccess	s2 . index		5277415	1					
ANR	5277437	Identifier	s2		5277415	0					
ANR	5277438	Identifier	index		5277415	1					
ANR	5277439	CompoundStatement		5:32:88:88	5277415	1					
ANR	5277440	ExpressionStatement	are_not_equal = true	243:2:4881:4901	5277415	0	True				
ANR	5277441	AssignmentExpression	are_not_equal = true		5277415	0		=			
ANR	5277442	Identifier	are_not_equal		5277415	0					
ANR	5277443	Identifier	true		5277415	1					
ANR	5277444	ElseStatement	else		5277415	0					
ANR	5277445	CompoundStatement		7:8:122:122	5277415	0					
ANR	5277446	ExpressionStatement	are_not_equal = false	245:2:4915:4936	5277415	0	True				
ANR	5277447	AssignmentExpression	are_not_equal = false		5277415	0		=			
ANR	5277448	Identifier	are_not_equal		5277415	0					
ANR	5277449	Identifier	false		5277415	1					
ANR	5277450	ReturnStatement	return are_not_equal ;	247:1:4942:4962	5277415	2	True				
ANR	5277451	Identifier	are_not_equal		5277415	0					
ANR	5277452	ReturnType	bool		5277415	1					
ANR	5277453	Identifier	operator !=		5277415	2					
ANR	5277454	ParameterList	"const SSString & s1 , const SSString & s2"		5277415	3					
ANR	5277455	Parameter	const SSString & s1	237:17:4748:4765	5277415	0	True				
ANR	5277456	ParameterType	const SSString &		5277415	0					
ANR	5277457	Identifier	s1		5277415	1					
ANR	5277458	Parameter	const SSString & s2	237:37:4768:4785	5277415	1	True				
ANR	5277459	ParameterType	const SSString &		5277415	0					
ANR	5277460	Identifier	s2		5277415	1					
ANR	5277461	CFGEntryNode	ENTRY		5277415		True				
ANR	5277462	CFGExitNode	EXIT		5277415		True				
ANR	5277463	Symbol	s1 . context		5277415						
ANR	5277464	Symbol	s2 . context		5277415						
ANR	5277465	Symbol	are_not_equal		5277415						
ANR	5277466	Symbol	true		5277415						
ANR	5277467	Symbol	false		5277415						
ANR	5277468	Symbol	s2 . index		5277415						
ANR	5277469	Symbol	s1		5277415						
ANR	5277470	Symbol	s2		5277415						
ANR	5277471	Symbol	s1 . index		5277415						
ANR	5277472	Function	SSString :: dispose	250:0:4967:6121							
ANR	5277473	FunctionDef	SSString :: dispose ()		5277472	0					
ANR	5277474	CompoundStatement		252:0:4994:6121	5277472	0					
ANR	5277475	IfStatement	if ( context && ( -- context -> strTable [ index ] . refCount ) == 0 )		5277472	0					
ANR	5277476	Condition	context && ( -- context -> strTable [ index ] . refCount ) == 0	254:8:5079:5131	5277472	0	True				
ANR	5277477	AndExpression	context && ( -- context -> strTable [ index ] . refCount ) == 0		5277472	0		&&			
ANR	5277478	Identifier	context		5277472	0					
ANR	5277479	EqualityExpression	( -- context -> strTable [ index ] . refCount ) == 0		5277472	1		==			
ANR	5277480	UnaryExpression	-- context -> strTable [ index ] . refCount		5277472	0					
ANR	5277481	IncDec	--		5277472	0					
ANR	5277482	MemberAccess	context -> strTable [ index ] . refCount		5277472	1					
ANR	5277483	ArrayIndexing	context -> strTable [ index ]		5277472	0					
ANR	5277484	PtrMemberAccess	context -> strTable		5277472	0					
ANR	5277485	Identifier	context		5277472	0					
ANR	5277486	Identifier	strTable		5277472	1					
ANR	5277487	Identifier	index		5277472	1					
ANR	5277488	Identifier	refCount		5277472	1					
ANR	5277489	PrimaryExpression	0		5277472	1					
ANR	5277490	CompoundStatement		5:2:147:205	5277472	1					
ANR	5277491	IdentifierDeclStatement	YourSensitiveString str ( context -> strTable [ index ] . string ) ;	256:2:5142:5200	5277472	0	True				
ANR	5277492	IdentifierDecl	str ( context -> strTable [ index ] . string )		5277472	0					
ANR	5277493	IdentifierDeclType	YourSensitiveString		5277472	0					
ANR	5277494	Identifier	str		5277472	1					
ANR	5277495	MemberAccess	context -> strTable [ index ] . string		5277472	2					
ANR	5277496	ArrayIndexing	context -> strTable [ index ]		5277472	0					
ANR	5277497	PtrMemberAccess	context -> strTable		5277472	0					
ANR	5277498	Identifier	context		5277472	0					
ANR	5277499	Identifier	strTable		5277472	1					
ANR	5277500	Identifier	index		5277472	1					
ANR	5277501	Identifier	string		5277472	1					
ANR	5277502	ExpressionStatement	context -> stringSpace -> remove ( str )	257:2:5204:5239	5277472	1	True				
ANR	5277503	CallExpression	context -> stringSpace -> remove ( str )		5277472	0					
ANR	5277504	Callee	context -> stringSpace -> remove		5277472	0					
ANR	5277505	PtrMemberAccess	context -> stringSpace -> remove		5277472	0					
ANR	5277506	PtrMemberAccess	context -> stringSpace		5277472	0					
ANR	5277507	Identifier	context		5277472	0					
ANR	5277508	Identifier	stringSpace		5277472	1					
ANR	5277509	Identifier	remove		5277472	1					
ANR	5277510	ArgumentList	str		5277472	1					
ANR	5277511	Argument	str		5277472	0					
ANR	5277512	Identifier	str		5277472	0					
ANR	5277513	ExpressionStatement	free ( context -> strTable [ index ] . string )	259:2:5244:5282	5277472	2	True				
ANR	5277514	CallExpression	free ( context -> strTable [ index ] . string )		5277472	0					
ANR	5277515	Callee	free		5277472	0					
ANR	5277516	Identifier	free		5277472	0					
ANR	5277517	ArgumentList	context -> strTable [ index ] . string		5277472	1					
ANR	5277518	Argument	context -> strTable [ index ] . string		5277472	0					
ANR	5277519	MemberAccess	context -> strTable [ index ] . string		5277472	0					
ANR	5277520	ArrayIndexing	context -> strTable [ index ]		5277472	0					
ANR	5277521	PtrMemberAccess	context -> strTable		5277472	0					
ANR	5277522	Identifier	context		5277472	0					
ANR	5277523	Identifier	strTable		5277472	1					
ANR	5277524	Identifier	index		5277472	1					
ANR	5277525	Identifier	string		5277472	1					
ANR	5277526	ExpressionStatement	context -> strTable [ index ] . string = NULL	260:2:5286:5324	5277472	3	True				
ANR	5277527	AssignmentExpression	context -> strTable [ index ] . string = NULL		5277472	0		=			
ANR	5277528	MemberAccess	context -> strTable [ index ] . string		5277472	0					
ANR	5277529	ArrayIndexing	context -> strTable [ index ]		5277472	0					
ANR	5277530	PtrMemberAccess	context -> strTable		5277472	0					
ANR	5277531	Identifier	context		5277472	0					
ANR	5277532	Identifier	strTable		5277472	1					
ANR	5277533	Identifier	index		5277472	1					
ANR	5277534	Identifier	string		5277472	1					
ANR	5277535	Identifier	NULL		5277472	1					
ANR	5277536	ExpressionStatement	context -> strTable [ index ] . inUse = false	261:2:5328:5366	5277472	4	True				
ANR	5277537	AssignmentExpression	context -> strTable [ index ] . inUse = false		5277472	0		=			
ANR	5277538	MemberAccess	context -> strTable [ index ] . inUse		5277472	0					
ANR	5277539	ArrayIndexing	context -> strTable [ index ]		5277472	0					
ANR	5277540	PtrMemberAccess	context -> strTable		5277472	0					
ANR	5277541	Identifier	context		5277472	0					
ANR	5277542	Identifier	strTable		5277472	1					
ANR	5277543	Identifier	index		5277472	1					
ANR	5277544	Identifier	inUse		5277472	1					
ANR	5277545	Identifier	false		5277472	1					
ANR	5277546	ExpressionStatement	context -> number_of_slots_filled --	264:2:5429:5462	5277472	5	True				
ANR	5277547	PostIncDecOperationExpression	context -> number_of_slots_filled --		5277472	0					
ANR	5277548	PtrMemberAccess	context -> number_of_slots_filled		5277472	0					
ANR	5277549	Identifier	context		5277472	0					
ANR	5277550	Identifier	number_of_slots_filled		5277472	1					
ANR	5277551	IncDec	--		5277472	1					
ANR	5277552	IfStatement	if ( context -> number_of_slots_filled < 0 )		5277472	6					
ANR	5277553	Condition	context -> number_of_slots_filled < 0	265:6:5470:5504	5277472	0	True				
ANR	5277554	RelationalExpression	context -> number_of_slots_filled < 0		5277472	0		<			
ANR	5277555	PtrMemberAccess	context -> number_of_slots_filled		5277472	0					
ANR	5277556	Identifier	context		5277472	0					
ANR	5277557	Identifier	number_of_slots_filled		5277472	1					
ANR	5277558	PrimaryExpression	0		5277472	1					
ANR	5277559	CompoundStatement		14:43:512:512	5277472	1					
ANR	5277560	ExpressionStatement	"EXCEPT ( ""StringSpace is algorithmically bad: number_of_slots_filled = %d!\\n"" , context -> number_of_slots_filled )"	266:3:5512:5628	5277472	0	True				
ANR	5277561	CallExpression	"EXCEPT ( ""StringSpace is algorithmically bad: number_of_slots_filled = %d!\\n"" , context -> number_of_slots_filled )"		5277472	0					
ANR	5277562	Callee	EXCEPT		5277472	0					
ANR	5277563	Identifier	EXCEPT		5277472	0					
ANR	5277564	ArgumentList	"""StringSpace is algorithmically bad: number_of_slots_filled = %d!\\n"""		5277472	1					
ANR	5277565	Argument	"""StringSpace is algorithmically bad: number_of_slots_filled = %d!\\n"""		5277472	0					
ANR	5277566	PrimaryExpression	"""StringSpace is algorithmically bad: number_of_slots_filled = %d!\\n"""		5277472	0					
ANR	5277567	Argument	context -> number_of_slots_filled		5277472	1					
ANR	5277568	PtrMemberAccess	context -> number_of_slots_filled		5277472	0					
ANR	5277569	Identifier	context		5277472	0					
ANR	5277570	Identifier	number_of_slots_filled		5277472	1					
ANR	5277571	IfStatement	if ( context -> first_free_slot >= index )		5277472	7					
ANR	5277572	Condition	context -> first_free_slot >= index	269:6:5640:5672	5277472	0	True				
ANR	5277573	RelationalExpression	context -> first_free_slot >= index		5277472	0		>=			
ANR	5277574	PtrMemberAccess	context -> first_free_slot		5277472	0					
ANR	5277575	Identifier	context		5277472	0					
ANR	5277576	Identifier	first_free_slot		5277472	1					
ANR	5277577	Identifier	index		5277472	1					
ANR	5277578	CompoundStatement		18:41:680:680	5277472	1					
ANR	5277579	ExpressionStatement	context -> first_free_slot = index	270:3:5680:5712	5277472	0	True				
ANR	5277580	AssignmentExpression	context -> first_free_slot = index		5277472	0		=			
ANR	5277581	PtrMemberAccess	context -> first_free_slot		5277472	0					
ANR	5277582	Identifier	context		5277472	0					
ANR	5277583	Identifier	first_free_slot		5277472	1					
ANR	5277584	Identifier	index		5277472	1					
ANR	5277585	IfStatement	if ( context -> highest_used_slot == index )		5277472	8					
ANR	5277586	Condition	context -> highest_used_slot == index	274:6:5814:5848	5277472	0	True				
ANR	5277587	EqualityExpression	context -> highest_used_slot == index		5277472	0		==			
ANR	5277588	PtrMemberAccess	context -> highest_used_slot		5277472	0					
ANR	5277589	Identifier	context		5277472	0					
ANR	5277590	Identifier	highest_used_slot		5277472	1					
ANR	5277591	Identifier	index		5277472	1					
ANR	5277592	CompoundStatement		23:43:856:856	5277472	1					
ANR	5277593	DoStatement	do		5277472	0					
ANR	5277594	CompoundStatement		24:6:864:864	5277472	0					
ANR	5277595	ExpressionStatement	context -> highest_used_slot --	276:4:5865:5893	5277472	0	True				
ANR	5277596	PostIncDecOperationExpression	context -> highest_used_slot --		5277472	0					
ANR	5277597	PtrMemberAccess	context -> highest_used_slot		5277472	0					
ANR	5277598	Identifier	context		5277472	0					
ANR	5277599	Identifier	highest_used_slot		5277472	1					
ANR	5277600	IncDec	--		5277472	1					
ANR	5277601	IfStatement	if ( context -> highest_used_slot >= 0 && context -> strTable [ context -> highest_used_slot ] . inUse )		5277472	1					
ANR	5277602	Condition	context -> highest_used_slot >= 0 && context -> strTable [ context -> highest_used_slot ] . inUse	277:14:5909:6016	5277472	0	True				
ANR	5277603	AndExpression	context -> highest_used_slot >= 0 && context -> strTable [ context -> highest_used_slot ] . inUse		5277472	0		&&			
ANR	5277604	RelationalExpression	context -> highest_used_slot >= 0		5277472	0		>=			
ANR	5277605	PtrMemberAccess	context -> highest_used_slot		5277472	0					
ANR	5277606	Identifier	context		5277472	0					
ANR	5277607	Identifier	highest_used_slot		5277472	1					
ANR	5277608	PrimaryExpression	0		5277472	1					
ANR	5277609	MemberAccess	context -> strTable [ context -> highest_used_slot ] . inUse		5277472	1					
ANR	5277610	ArrayIndexing	context -> strTable [ context -> highest_used_slot ]		5277472	0					
ANR	5277611	PtrMemberAccess	context -> strTable		5277472	0					
ANR	5277612	Identifier	context		5277472	0					
ANR	5277613	Identifier	strTable		5277472	1					
ANR	5277614	PtrMemberAccess	context -> highest_used_slot		5277472	1					
ANR	5277615	Identifier	context		5277472	0					
ANR	5277616	Identifier	highest_used_slot		5277472	1					
ANR	5277617	Identifier	inUse		5277472	1					
ANR	5277618	CompoundStatement		27:64:1024:1024	5277472	1					
ANR	5277619	BreakStatement	break ;	279:5:6026:6031	5277472	0	True				
ANR	5277620	Condition	context -> highest_used_slot >= - 1	281:12:6052:6083	5277472	1	True				
ANR	5277621	RelationalExpression	context -> highest_used_slot >= - 1		5277472	0		>=			
ANR	5277622	PtrMemberAccess	context -> highest_used_slot		5277472	0					
ANR	5277623	Identifier	context		5277472	0					
ANR	5277624	Identifier	highest_used_slot		5277472	1					
ANR	5277625	UnaryOperationExpression	- 1		5277472	1					
ANR	5277626	UnaryOperator	-		5277472	0					
ANR	5277627	PrimaryExpression	1		5277472	1					
ANR	5277628	ExpressionStatement	context = NULL	285:1:6096:6110	5277472	1	True				
ANR	5277629	AssignmentExpression	context = NULL		5277472	0		=			
ANR	5277630	Identifier	context		5277472	0					
ANR	5277631	Identifier	NULL		5277472	1					
ANR	5277632	ReturnStatement	return ;	286:1:6113:6119	5277472	2	True				
ANR	5277633	ReturnType	void		5277472	1					
ANR	5277634	Identifier	SSString :: dispose		5277472	2					
ANR	5277635	ParameterList			5277472	3					
ANR	5277636	CFGEntryNode	ENTRY		5277472		True				
ANR	5277637	CFGExitNode	EXIT		5277472		True				
ANR	5277638	Symbol	context -> stringSpace		5277472						
ANR	5277639	Symbol	NULL		5277472						
ANR	5277640	Symbol	* context -> strTable		5277472						
ANR	5277641	Symbol	* index		5277472						
ANR	5277642	Symbol	false		5277472						
ANR	5277643	Symbol	* * context		5277472						
ANR	5277644	Symbol	index		5277472						
ANR	5277645	Symbol	context -> strTable		5277472						
ANR	5277646	Symbol	* context		5277472						
ANR	5277647	Symbol	context -> strTable [ index ] . string		5277472						
ANR	5277648	Symbol	str		5277472						
ANR	5277649	Symbol	context -> number_of_slots_filled		5277472						
ANR	5277650	Symbol	context -> strTable [ context -> highest_used_slot ] . inUse		5277472						
ANR	5277651	Symbol	context -> strTable [ index ] . inUse		5277472						
ANR	5277652	Symbol	* context -> highest_used_slot		5277472						
ANR	5277653	Symbol	context -> first_free_slot		5277472						
ANR	5277654	Symbol	context		5277472						
ANR	5277655	Symbol	context -> strTable [ index ] . refCount		5277472						
ANR	5277656	Symbol	context -> highest_used_slot		5277472						
ANR	5277657	Function	StringSpace :: dump	289:0:6135:6792							
ANR	5277658	FunctionDef	StringSpace :: dump ()		5277657	0					
ANR	5277659	CompoundStatement		291:0:6166:6792	5277657	0					
ANR	5277660	IdentifierDeclStatement	int number_printed ;	292:1:6169:6187	5277657	0	True				
ANR	5277661	IdentifierDecl	number_printed		5277657	0					
ANR	5277662	IdentifierDeclType	int		5277657	0					
ANR	5277663	Identifier	number_printed		5277657	1					
ANR	5277664	ExpressionStatement	number_printed = 0	294:1:6191:6209	5277657	1	True				
ANR	5277665	AssignmentExpression	number_printed = 0		5277657	0		=			
ANR	5277666	Identifier	number_printed		5277657	0					
ANR	5277667	PrimaryExpression	0		5277657	1					
ANR	5277668	ExpressionStatement	"printf ( ""String space dump:  %d strings\\n"" , number_of_slots_filled )"	295:1:6212:6279	5277657	2	True				
ANR	5277669	CallExpression	"printf ( ""String space dump:  %d strings\\n"" , number_of_slots_filled )"		5277657	0					
ANR	5277670	Callee	printf		5277657	0					
ANR	5277671	Identifier	printf		5277657	0					
ANR	5277672	ArgumentList	"""String space dump:  %d strings\\n"""		5277657	1					
ANR	5277673	Argument	"""String space dump:  %d strings\\n"""		5277657	0					
ANR	5277674	PrimaryExpression	"""String space dump:  %d strings\\n"""		5277657	0					
ANR	5277675	Argument	number_of_slots_filled		5277657	1					
ANR	5277676	Identifier	number_of_slots_filled		5277657	0					
ANR	5277677	ForStatement	for ( int i = 0 ; i <= highest_used_slot ; i ++ )		5277657	3					
ANR	5277678	ForInit	int i = 0 ;	296:6:6287:6296	5277657	0	True				
ANR	5277679	IdentifierDeclStatement	int i = 0 ;		5277657	0					
ANR	5277680	IdentifierDecl	i = 0		5277657	0					
ANR	5277681	IdentifierDeclType	int		5277657	0					
ANR	5277682	Identifier	i		5277657	1					
ANR	5277683	AssignmentExpression	i = 0		5277657	2		=			
ANR	5277684	Identifier	i		5277657	0					
ANR	5277685	PrimaryExpression	0		5277657	1					
ANR	5277686	Condition	i <= highest_used_slot	296:17:6298:6319	5277657	1	True				
ANR	5277687	RelationalExpression	i <= highest_used_slot		5277657	0		<=			
ANR	5277688	Identifier	i		5277657	0					
ANR	5277689	Identifier	highest_used_slot		5277657	1					
ANR	5277690	PostIncDecOperationExpression	i ++	296:41:6322:6324	5277657	2	True				
ANR	5277691	Identifier	i		5277657	0					
ANR	5277692	IncDec	++		5277657	1					
ANR	5277693	CompoundStatement		7:1:161:161	5277657	3					
ANR	5277694	IfStatement	if ( strTable [ i ] . inUse )		5277657	0					
ANR	5277695	Condition	strTable [ i ] . inUse	298:6:6336:6352	5277657	0	True				
ANR	5277696	MemberAccess	strTable [ i ] . inUse		5277657	0					
ANR	5277697	ArrayIndexing	strTable [ i ]		5277657	0					
ANR	5277698	Identifier	strTable		5277657	0					
ANR	5277699	Identifier	i		5277657	1					
ANR	5277700	Identifier	inUse		5277657	1					
ANR	5277701	CompoundStatement		8:25:188:188	5277657	1					
ANR	5277702	ExpressionStatement	number_printed ++	299:3:6360:6376	5277657	0	True				
ANR	5277703	PostIncDecOperationExpression	number_printed ++		5277657	0					
ANR	5277704	Identifier	number_printed		5277657	0					
ANR	5277705	IncDec	++		5277657	1					
ANR	5277706	ExpressionStatement	"printf ( ""#%03d "" , i )"	300:3:6381:6400	5277657	1	True				
ANR	5277707	CallExpression	"printf ( ""#%03d "" , i )"		5277657	0					
ANR	5277708	Callee	printf		5277657	0					
ANR	5277709	Identifier	printf		5277657	0					
ANR	5277710	ArgumentList	"""#%03d """		5277657	1					
ANR	5277711	Argument	"""#%03d """		5277657	0					
ANR	5277712	PrimaryExpression	"""#%03d """		5277657	0					
ANR	5277713	Argument	i		5277657	1					
ANR	5277714	Identifier	i		5277657	0					
ANR	5277715	IfStatement	if ( strTable [ i ] . string == NULL )		5277657	2					
ANR	5277716	Condition	strTable [ i ] . string == NULL	301:7:6409:6434	5277657	0	True				
ANR	5277717	EqualityExpression	strTable [ i ] . string == NULL		5277657	0		==			
ANR	5277718	MemberAccess	strTable [ i ] . string		5277657	0					
ANR	5277719	ArrayIndexing	strTable [ i ]		5277657	0					
ANR	5277720	Identifier	strTable		5277657	0					
ANR	5277721	Identifier	i		5277657	1					
ANR	5277722	Identifier	string		5277657	1					
ANR	5277723	Identifier	NULL		5277657	1					
ANR	5277724	CompoundStatement		11:35:270:270	5277657	1					
ANR	5277725	ExpressionStatement	"printf ( ""(disposed) (%d)\\n"" , strTable [ i ] . refCount )"	302:4:6443:6493	5277657	0	True				
ANR	5277726	CallExpression	"printf ( ""(disposed) (%d)\\n"" , strTable [ i ] . refCount )"		5277657	0					
ANR	5277727	Callee	printf		5277657	0					
ANR	5277728	Identifier	printf		5277657	0					
ANR	5277729	ArgumentList	"""(disposed) (%d)\\n"""		5277657	1					
ANR	5277730	Argument	"""(disposed) (%d)\\n"""		5277657	0					
ANR	5277731	PrimaryExpression	"""(disposed) (%d)\\n"""		5277657	0					
ANR	5277732	Argument	strTable [ i ] . refCount		5277657	1					
ANR	5277733	MemberAccess	strTable [ i ] . refCount		5277657	0					
ANR	5277734	ArrayIndexing	strTable [ i ]		5277657	0					
ANR	5277735	Identifier	strTable		5277657	0					
ANR	5277736	Identifier	i		5277657	1					
ANR	5277737	Identifier	refCount		5277657	1					
ANR	5277738	ElseStatement	else		5277657	0					
ANR	5277739	CompoundStatement		13:10:338:338	5277657	0					
ANR	5277740	ExpressionStatement	"printf ( ""%s (%d)\\n"" , strTable [ i ] . string , strTable [ i ] . refCount )"	304:4:6511:6573	5277657	0	True				
ANR	5277741	CallExpression	"printf ( ""%s (%d)\\n"" , strTable [ i ] . string , strTable [ i ] . refCount )"		5277657	0					
ANR	5277742	Callee	printf		5277657	0					
ANR	5277743	Identifier	printf		5277657	0					
ANR	5277744	ArgumentList	"""%s (%d)\\n"""		5277657	1					
ANR	5277745	Argument	"""%s (%d)\\n"""		5277657	0					
ANR	5277746	PrimaryExpression	"""%s (%d)\\n"""		5277657	0					
ANR	5277747	Argument	strTable [ i ] . string		5277657	1					
ANR	5277748	MemberAccess	strTable [ i ] . string		5277657	0					
ANR	5277749	ArrayIndexing	strTable [ i ]		5277657	0					
ANR	5277750	Identifier	strTable		5277657	0					
ANR	5277751	Identifier	i		5277657	1					
ANR	5277752	Identifier	string		5277657	1					
ANR	5277753	Argument	strTable [ i ] . refCount		5277657	2					
ANR	5277754	MemberAccess	strTable [ i ] . refCount		5277657	0					
ANR	5277755	ArrayIndexing	strTable [ i ]		5277657	0					
ANR	5277756	Identifier	strTable		5277657	0					
ANR	5277757	Identifier	i		5277657	1					
ANR	5277758	Identifier	refCount		5277657	1					
ANR	5277759	IfStatement	if ( number_printed != number_of_slots_filled )		5277657	4					
ANR	5277760	Condition	number_printed != number_of_slots_filled	308:5:6592:6631	5277657	0	True				
ANR	5277761	EqualityExpression	number_printed != number_of_slots_filled		5277657	0		!=			
ANR	5277762	Identifier	number_printed		5277657	0					
ANR	5277763	Identifier	number_of_slots_filled		5277657	1					
ANR	5277764	CompoundStatement		18:47:467:467	5277657	1					
ANR	5277765	ExpressionStatement	"printf ( ""Number of slots expected (%d) is not accurate--should be %d.\\n"" , number_of_slots_filled , number_printed )"	309:2:6638:6756	5277657	0	True				
ANR	5277766	CallExpression	"printf ( ""Number of slots expected (%d) is not accurate--should be %d.\\n"" , number_of_slots_filled , number_printed )"		5277657	0					
ANR	5277767	Callee	printf		5277657	0					
ANR	5277768	Identifier	printf		5277657	0					
ANR	5277769	ArgumentList	"""Number of slots expected (%d) is not accurate--should be %d.\\n"""		5277657	1					
ANR	5277770	Argument	"""Number of slots expected (%d) is not accurate--should be %d.\\n"""		5277657	0					
ANR	5277771	PrimaryExpression	"""Number of slots expected (%d) is not accurate--should be %d.\\n"""		5277657	0					
ANR	5277772	Argument	number_of_slots_filled		5277657	1					
ANR	5277773	Identifier	number_of_slots_filled		5277657	0					
ANR	5277774	Argument	number_printed		5277657	2					
ANR	5277775	Identifier	number_printed		5277657	0					
ANR	5277776	ExpressionStatement	"printf ( ""\\nDone\\n"" )"	312:1:6762:6781	5277657	5	True				
ANR	5277777	CallExpression	"printf ( ""\\nDone\\n"" )"		5277657	0					
ANR	5277778	Callee	printf		5277657	0					
ANR	5277779	Identifier	printf		5277657	0					
ANR	5277780	ArgumentList	"""\\nDone\\n"""		5277657	1					
ANR	5277781	Argument	"""\\nDone\\n"""		5277657	0					
ANR	5277782	PrimaryExpression	"""\\nDone\\n"""		5277657	0					
ANR	5277783	ReturnStatement	return ;	313:1:6784:6790	5277657	6	True				
ANR	5277784	ReturnType	void		5277657	1					
ANR	5277785	Identifier	StringSpace :: dump		5277657	2					
ANR	5277786	ParameterList			5277657	3					
ANR	5277787	CFGEntryNode	ENTRY		5277657		True				
ANR	5277788	CFGExitNode	EXIT		5277657		True				
ANR	5277789	Symbol	strTable [ i ] . refCount		5277657						
ANR	5277790	Symbol	strTable		5277657						
ANR	5277791	Symbol	* i		5277657						
ANR	5277792	Symbol	NULL		5277657						
ANR	5277793	Symbol	highest_used_slot		5277657						
ANR	5277794	Symbol	number_of_slots_filled		5277657						
ANR	5277795	Symbol	number_printed		5277657						
ANR	5277796	Symbol	i		5277657						
ANR	5277797	Symbol	* strTable		5277657						
ANR	5277798	Symbol	strTable [ i ] . inUse		5277657						
ANR	5277799	Symbol	strTable [ i ] . string		5277657						
ANR	5277800	Function	StringSpace :: checkFor	316:0:6795:7041							
ANR	5277801	FunctionDef	StringSpace :: checkFor (char * str)		5277800	0					
ANR	5277802	CompoundStatement		318:0:6870:7041	5277800	0					
ANR	5277803	IdentifierDeclStatement	int canonical_index ;	319:1:6873:6892	5277800	0	True				
ANR	5277804	IdentifierDecl	canonical_index		5277800	0					
ANR	5277805	IdentifierDeclType	int		5277800	0					
ANR	5277806	Identifier	canonical_index		5277800	1					
ANR	5277807	IdentifierDeclStatement	YourSensitiveString yourStr ( str ) ;	320:1:6895:6927	5277800	1	True				
ANR	5277808	IdentifierDecl	yourStr ( str )		5277800	0					
ANR	5277809	IdentifierDeclType	YourSensitiveString		5277800	0					
ANR	5277810	Identifier	yourStr		5277800	1					
ANR	5277811	Identifier	str		5277800	2					
ANR	5277812	IfStatement	"if ( stringSpace -> lookup ( yourStr , canonical_index ) != 0 )"		5277800	2					
ANR	5277813	Condition	"stringSpace -> lookup ( yourStr , canonical_index ) != 0"	321:5:6934:6984	5277800	0	True				
ANR	5277814	EqualityExpression	"stringSpace -> lookup ( yourStr , canonical_index ) != 0"		5277800	0		!=			
ANR	5277815	CallExpression	"stringSpace -> lookup ( yourStr , canonical_index )"		5277800	0					
ANR	5277816	Callee	stringSpace -> lookup		5277800	0					
ANR	5277817	PtrMemberAccess	stringSpace -> lookup		5277800	0					
ANR	5277818	Identifier	stringSpace		5277800	0					
ANR	5277819	Identifier	lookup		5277800	1					
ANR	5277820	ArgumentList	yourStr		5277800	1					
ANR	5277821	Argument	yourStr		5277800	0					
ANR	5277822	Identifier	yourStr		5277800	0					
ANR	5277823	Argument	canonical_index		5277800	1					
ANR	5277824	Identifier	canonical_index		5277800	0					
ANR	5277825	PrimaryExpression	0		5277800	1					
ANR	5277826	CompoundStatement		4:58:116:116	5277800	1					
ANR	5277827	ExpressionStatement	canonical_index = - 1	322:2:6991:7011	5277800	0	True				
ANR	5277828	AssignmentExpression	canonical_index = - 1		5277800	0		=			
ANR	5277829	Identifier	canonical_index		5277800	0					
ANR	5277830	UnaryOperationExpression	- 1		5277800	1					
ANR	5277831	UnaryOperator	-		5277800	0					
ANR	5277832	PrimaryExpression	1		5277800	1					
ANR	5277833	ReturnStatement	return canonical_index ;	324:1:7017:7039	5277800	3	True				
ANR	5277834	Identifier	canonical_index		5277800	0					
ANR	5277835	ReturnType	int		5277800	1					
ANR	5277836	Identifier	StringSpace :: checkFor		5277800	2					
ANR	5277837	ParameterList	char * str		5277800	3					
ANR	5277838	Parameter	char * str	317:23:6823:6831	5277800	0	True				
ANR	5277839	ParameterType	char *		5277800	0					
ANR	5277840	Identifier	str		5277800	1					
ANR	5277841	CFGEntryNode	ENTRY		5277800		True				
ANR	5277842	CFGExitNode	EXIT		5277800		True				
ANR	5277843	Symbol	str		5277800						
ANR	5277844	Symbol	stringSpace -> lookup		5277800						
ANR	5277845	Symbol	stringSpace		5277800						
ANR	5277846	Symbol	canonical_index		5277800						
ANR	5277847	Symbol	* stringSpace		5277800						
ANR	5277848	Symbol	yourStr		5277800						
