command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1141753	File	data/converged/CVE-2011-4930_htcondor/dap_logger.cpp								
ANR	1141754	DeclStmt									
ANR	1141755	Decl							extern char	extern char *	clientagenthost
ANR	1141756	Function	write_dap_log	37:0:1330:3635							
ANR	1141757	FunctionDef	"write_dap_log (const char * logfilename , const char * status , const char * param1 , const char * value1 , const char * param2 , const char * value2 , const char * param3 , const char * value3 , const char * param4 , const char * value4 , const char * param5 , const char * value5 , const char * param6 , const char * value6)"		1141756	0					
ANR	1141758	CompoundStatement		38:0:1634:3635	1141756	0					
ANR	1141759	IfStatement	"if ( ! param_boolean ( ""STORK_HISTORY_LOGGING"" , true ) )"		1141756	0					
ANR	1141760	Condition	"! param_boolean ( ""STORK_HISTORY_LOGGING"" , true )"	40:5:1644:1689	1141756	0	True				
ANR	1141761	UnaryOperationExpression	"! param_boolean ( ""STORK_HISTORY_LOGGING"" , true )"		1141756	0					
ANR	1141762	UnaryOperator	!		1141756	0					
ANR	1141763	CallExpression	"param_boolean ( ""STORK_HISTORY_LOGGING"" , true )"		1141756	1					
ANR	1141764	Callee	param_boolean		1141756	0					
ANR	1141765	Identifier	param_boolean		1141756	0					
ANR	1141766	ArgumentList	"""STORK_HISTORY_LOGGING"""		1141756	1					
ANR	1141767	Argument	"""STORK_HISTORY_LOGGING"""		1141756	0					
ANR	1141768	PrimaryExpression	"""STORK_HISTORY_LOGGING"""		1141756	0					
ANR	1141769	Argument	true		1141756	1					
ANR	1141770	Identifier	true		1141756	0					
ANR	1141771	ReturnStatement	return ;	40:54:1693:1699	1141756	1	True				
ANR	1141772	Statement	classad	45:2:1785:1791	1141756	1	True				
ANR	1141773	Statement	::	45:9:1792:1793	1141756	2	True				
ANR	1141774	Statement	ClassAd	45:11:1794:1800	1141756	3	True				
ANR	1141775	Statement	*	45:19:1802:1802	1141756	4	True				
ANR	1141776	Statement	classad	45:20:1803:1809	1141756	5	True				
ANR	1141777	Statement	=	45:28:1811:1811	1141756	6	True				
ANR	1141778	Statement	new	45:30:1813:1815	1141756	7	True				
ANR	1141779	ExpressionStatement	classad :: ClassAd	45:34:1817:1833	1141756	8	True				
ANR	1141780	Identifier	classad :: ClassAd		1141756	0					
ANR	1141781	IdentifierDeclStatement	classad :: ClassAdParser parser ;	46:2:1837:1866	1141756	9	True				
ANR	1141782	IdentifierDecl	parser		1141756	0					
ANR	1141783	IdentifierDeclType	classad :: ClassAdParser		1141756	0					
ANR	1141784	Identifier	parser		1141756	1					
ANR	1141785	IdentifierDeclStatement	classad :: ExprTree * expr = NULL ;	47:2:1870:1900	1141756	10	True				
ANR	1141786	IdentifierDecl	* expr = NULL		1141756	0					
ANR	1141787	IdentifierDeclType	classad :: ExprTree *		1141756	0					
ANR	1141788	Identifier	expr		1141756	1					
ANR	1141789	AssignmentExpression	* expr = NULL		1141756	2		=			
ANR	1141790	Identifier	NULL		1141756	0					
ANR	1141791	Identifier	NULL		1141756	1					
ANR	1141792	ExpressionStatement	"classad -> Insert ( ""timestamp"" , classad :: Literal :: MakeAbsTime ( ) )"	50:2:1938:1998	1141756	11	True				
ANR	1141793	CallExpression	"classad -> Insert ( ""timestamp"" , classad :: Literal :: MakeAbsTime ( ) )"		1141756	0					
ANR	1141794	Callee	classad -> Insert		1141756	0					
ANR	1141795	PtrMemberAccess	classad -> Insert		1141756	0					
ANR	1141796	Identifier	classad		1141756	0					
ANR	1141797	Identifier	Insert		1141756	1					
ANR	1141798	ArgumentList	"""timestamp"""		1141756	1					
ANR	1141799	Argument	"""timestamp"""		1141756	0					
ANR	1141800	PrimaryExpression	"""timestamp"""		1141756	0					
ANR	1141801	Argument	classad :: Literal :: MakeAbsTime ( )		1141756	1					
ANR	1141802	CallExpression	classad :: Literal :: MakeAbsTime ( )		1141756	0					
ANR	1141803	Callee	classad :: Literal :: MakeAbsTime		1141756	0					
ANR	1141804	Identifier	classad :: Literal :: MakeAbsTime		1141756	0					
ANR	1141805	ArgumentList			1141756	1					
ANR	1141806	IfStatement	"if ( ! parser . ParseExpression ( value1 , expr ) )"		1141756	12					
ANR	1141807	Condition	"! parser . ParseExpression ( value1 , expr )"	52:7:2008:2044	1141756	0	True				
ANR	1141808	UnaryOperationExpression	"! parser . ParseExpression ( value1 , expr )"		1141756	0					
ANR	1141809	UnaryOperator	!		1141756	0					
ANR	1141810	CallExpression	"parser . ParseExpression ( value1 , expr )"		1141756	1					
ANR	1141811	Callee	parser . ParseExpression		1141756	0					
ANR	1141812	MemberAccess	parser . ParseExpression		1141756	0					
ANR	1141813	Identifier	parser		1141756	0					
ANR	1141814	Identifier	ParseExpression		1141756	1					
ANR	1141815	ArgumentList	value1		1141756	1					
ANR	1141816	Argument	value1		1141756	0					
ANR	1141817	Identifier	value1		1141756	0					
ANR	1141818	Argument	expr		1141756	1					
ANR	1141819	Identifier	expr		1141756	0					
ANR	1141820	ExpressionStatement	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"	53:4:2052:2085	1141756	1	True				
ANR	1141821	CallExpression	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"		1141756	0					
ANR	1141822	Callee	dprintf		1141756	0					
ANR	1141823	Identifier	dprintf		1141756	0					
ANR	1141824	ArgumentList	D_ALWAYS		1141756	1					
ANR	1141825	Argument	D_ALWAYS		1141756	0					
ANR	1141826	Identifier	D_ALWAYS		1141756	0					
ANR	1141827	Argument	"""Parse error\\n"""		1141756	1					
ANR	1141828	PrimaryExpression	"""Parse error\\n"""		1141756	0					
ANR	1141829	ExpressionStatement	"classad -> Insert ( param1 , expr )"	54:2:2089:2118	1141756	13	True				
ANR	1141830	CallExpression	"classad -> Insert ( param1 , expr )"		1141756	0					
ANR	1141831	Callee	classad -> Insert		1141756	0					
ANR	1141832	PtrMemberAccess	classad -> Insert		1141756	0					
ANR	1141833	Identifier	classad		1141756	0					
ANR	1141834	Identifier	Insert		1141756	1					
ANR	1141835	ArgumentList	param1		1141756	1					
ANR	1141836	Argument	param1		1141756	0					
ANR	1141837	Identifier	param1		1141756	0					
ANR	1141838	Argument	expr		1141756	1					
ANR	1141839	Identifier	expr		1141756	0					
ANR	1141840	IfStatement	if ( ( param2 != NULL ) && ( value2 != NULL ) )		1141756	14					
ANR	1141841	Condition	( param2 != NULL ) && ( value2 != NULL )	56:6:2129:2164	1141756	0	True				
ANR	1141842	AndExpression	( param2 != NULL ) && ( value2 != NULL )		1141756	0		&&			
ANR	1141843	EqualityExpression	param2 != NULL		1141756	0		!=			
ANR	1141844	Identifier	param2		1141756	0					
ANR	1141845	Identifier	NULL		1141756	1					
ANR	1141846	EqualityExpression	value2 != NULL		1141756	1		!=			
ANR	1141847	Identifier	value2		1141756	0					
ANR	1141848	Identifier	NULL		1141756	1					
ANR	1141849	CompoundStatement		19:43:531:531	1141756	1					
ANR	1141850	IfStatement	"if ( ! parser . ParseExpression ( value2 , expr ) )"		1141756	0					
ANR	1141851	Condition	"! parser . ParseExpression ( value2 , expr )"	57:9:2177:2213	1141756	0	True				
ANR	1141852	UnaryOperationExpression	"! parser . ParseExpression ( value2 , expr )"		1141756	0					
ANR	1141853	UnaryOperator	!		1141756	0					
ANR	1141854	CallExpression	"parser . ParseExpression ( value2 , expr )"		1141756	1					
ANR	1141855	Callee	parser . ParseExpression		1141756	0					
ANR	1141856	MemberAccess	parser . ParseExpression		1141756	0					
ANR	1141857	Identifier	parser		1141756	0					
ANR	1141858	Identifier	ParseExpression		1141756	1					
ANR	1141859	ArgumentList	value2		1141756	1					
ANR	1141860	Argument	value2		1141756	0					
ANR	1141861	Identifier	value2		1141756	0					
ANR	1141862	Argument	expr		1141756	1					
ANR	1141863	Identifier	expr		1141756	0					
ANR	1141864	ExpressionStatement	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"	58:6:2223:2256	1141756	1	True				
ANR	1141865	CallExpression	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"		1141756	0					
ANR	1141866	Callee	dprintf		1141756	0					
ANR	1141867	Identifier	dprintf		1141756	0					
ANR	1141868	ArgumentList	D_ALWAYS		1141756	1					
ANR	1141869	Argument	D_ALWAYS		1141756	0					
ANR	1141870	Identifier	D_ALWAYS		1141756	0					
ANR	1141871	Argument	"""Parse error\\n"""		1141756	1					
ANR	1141872	PrimaryExpression	"""Parse error\\n"""		1141756	0					
ANR	1141873	ExpressionStatement	"classad -> Insert ( param2 , expr )"	59:4:2262:2291	1141756	1	True				
ANR	1141874	CallExpression	"classad -> Insert ( param2 , expr )"		1141756	0					
ANR	1141875	Callee	classad -> Insert		1141756	0					
ANR	1141876	PtrMemberAccess	classad -> Insert		1141756	0					
ANR	1141877	Identifier	classad		1141756	0					
ANR	1141878	Identifier	Insert		1141756	1					
ANR	1141879	ArgumentList	param2		1141756	1					
ANR	1141880	Argument	param2		1141756	0					
ANR	1141881	Identifier	param2		1141756	0					
ANR	1141882	Argument	expr		1141756	1					
ANR	1141883	Identifier	expr		1141756	0					
ANR	1141884	IfStatement	if ( ( param3 != NULL ) && ( value3 != NULL ) )		1141756	15					
ANR	1141885	Condition	( param3 != NULL ) && ( value3 != NULL )	62:6:2304:2339	1141756	0	True				
ANR	1141886	AndExpression	( param3 != NULL ) && ( value3 != NULL )		1141756	0		&&			
ANR	1141887	EqualityExpression	param3 != NULL		1141756	0		!=			
ANR	1141888	Identifier	param3		1141756	0					
ANR	1141889	Identifier	NULL		1141756	1					
ANR	1141890	EqualityExpression	value3 != NULL		1141756	1		!=			
ANR	1141891	Identifier	value3		1141756	0					
ANR	1141892	Identifier	NULL		1141756	1					
ANR	1141893	CompoundStatement		25:43:706:706	1141756	1					
ANR	1141894	IfStatement	"if ( ! parser . ParseExpression ( value3 , expr ) )"		1141756	0					
ANR	1141895	Condition	"! parser . ParseExpression ( value3 , expr )"	63:9:2352:2388	1141756	0	True				
ANR	1141896	UnaryOperationExpression	"! parser . ParseExpression ( value3 , expr )"		1141756	0					
ANR	1141897	UnaryOperator	!		1141756	0					
ANR	1141898	CallExpression	"parser . ParseExpression ( value3 , expr )"		1141756	1					
ANR	1141899	Callee	parser . ParseExpression		1141756	0					
ANR	1141900	MemberAccess	parser . ParseExpression		1141756	0					
ANR	1141901	Identifier	parser		1141756	0					
ANR	1141902	Identifier	ParseExpression		1141756	1					
ANR	1141903	ArgumentList	value3		1141756	1					
ANR	1141904	Argument	value3		1141756	0					
ANR	1141905	Identifier	value3		1141756	0					
ANR	1141906	Argument	expr		1141756	1					
ANR	1141907	Identifier	expr		1141756	0					
ANR	1141908	ExpressionStatement	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"	64:6:2398:2431	1141756	1	True				
ANR	1141909	CallExpression	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"		1141756	0					
ANR	1141910	Callee	dprintf		1141756	0					
ANR	1141911	Identifier	dprintf		1141756	0					
ANR	1141912	ArgumentList	D_ALWAYS		1141756	1					
ANR	1141913	Argument	D_ALWAYS		1141756	0					
ANR	1141914	Identifier	D_ALWAYS		1141756	0					
ANR	1141915	Argument	"""Parse error\\n"""		1141756	1					
ANR	1141916	PrimaryExpression	"""Parse error\\n"""		1141756	0					
ANR	1141917	ExpressionStatement	"classad -> Insert ( param3 , expr )"	65:4:2437:2466	1141756	1	True				
ANR	1141918	CallExpression	"classad -> Insert ( param3 , expr )"		1141756	0					
ANR	1141919	Callee	classad -> Insert		1141756	0					
ANR	1141920	PtrMemberAccess	classad -> Insert		1141756	0					
ANR	1141921	Identifier	classad		1141756	0					
ANR	1141922	Identifier	Insert		1141756	1					
ANR	1141923	ArgumentList	param3		1141756	1					
ANR	1141924	Argument	param3		1141756	0					
ANR	1141925	Identifier	param3		1141756	0					
ANR	1141926	Argument	expr		1141756	1					
ANR	1141927	Identifier	expr		1141756	0					
ANR	1141928	IfStatement	if ( ( param4 != NULL ) && ( value4 != NULL ) )		1141756	16					
ANR	1141929	Condition	( param4 != NULL ) && ( value4 != NULL )	68:6:2479:2514	1141756	0	True				
ANR	1141930	AndExpression	( param4 != NULL ) && ( value4 != NULL )		1141756	0		&&			
ANR	1141931	EqualityExpression	param4 != NULL		1141756	0		!=			
ANR	1141932	Identifier	param4		1141756	0					
ANR	1141933	Identifier	NULL		1141756	1					
ANR	1141934	EqualityExpression	value4 != NULL		1141756	1		!=			
ANR	1141935	Identifier	value4		1141756	0					
ANR	1141936	Identifier	NULL		1141756	1					
ANR	1141937	CompoundStatement		31:43:881:881	1141756	1					
ANR	1141938	IfStatement	"if ( ! parser . ParseExpression ( value4 , expr ) )"		1141756	0					
ANR	1141939	Condition	"! parser . ParseExpression ( value4 , expr )"	69:9:2527:2563	1141756	0	True				
ANR	1141940	UnaryOperationExpression	"! parser . ParseExpression ( value4 , expr )"		1141756	0					
ANR	1141941	UnaryOperator	!		1141756	0					
ANR	1141942	CallExpression	"parser . ParseExpression ( value4 , expr )"		1141756	1					
ANR	1141943	Callee	parser . ParseExpression		1141756	0					
ANR	1141944	MemberAccess	parser . ParseExpression		1141756	0					
ANR	1141945	Identifier	parser		1141756	0					
ANR	1141946	Identifier	ParseExpression		1141756	1					
ANR	1141947	ArgumentList	value4		1141756	1					
ANR	1141948	Argument	value4		1141756	0					
ANR	1141949	Identifier	value4		1141756	0					
ANR	1141950	Argument	expr		1141756	1					
ANR	1141951	Identifier	expr		1141756	0					
ANR	1141952	ExpressionStatement	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"	70:6:2573:2606	1141756	1	True				
ANR	1141953	CallExpression	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"		1141756	0					
ANR	1141954	Callee	dprintf		1141756	0					
ANR	1141955	Identifier	dprintf		1141756	0					
ANR	1141956	ArgumentList	D_ALWAYS		1141756	1					
ANR	1141957	Argument	D_ALWAYS		1141756	0					
ANR	1141958	Identifier	D_ALWAYS		1141756	0					
ANR	1141959	Argument	"""Parse error\\n"""		1141756	1					
ANR	1141960	PrimaryExpression	"""Parse error\\n"""		1141756	0					
ANR	1141961	ExpressionStatement	"classad -> Insert ( param4 , expr )"	71:4:2612:2641	1141756	1	True				
ANR	1141962	CallExpression	"classad -> Insert ( param4 , expr )"		1141756	0					
ANR	1141963	Callee	classad -> Insert		1141756	0					
ANR	1141964	PtrMemberAccess	classad -> Insert		1141756	0					
ANR	1141965	Identifier	classad		1141756	0					
ANR	1141966	Identifier	Insert		1141756	1					
ANR	1141967	ArgumentList	param4		1141756	1					
ANR	1141968	Argument	param4		1141756	0					
ANR	1141969	Identifier	param4		1141756	0					
ANR	1141970	Argument	expr		1141756	1					
ANR	1141971	Identifier	expr		1141756	0					
ANR	1141972	IfStatement	if ( ( param5 != NULL ) && ( value5 != NULL ) )		1141756	17					
ANR	1141973	Condition	( param5 != NULL ) && ( value5 != NULL )	74:6:2654:2689	1141756	0	True				
ANR	1141974	AndExpression	( param5 != NULL ) && ( value5 != NULL )		1141756	0		&&			
ANR	1141975	EqualityExpression	param5 != NULL		1141756	0		!=			
ANR	1141976	Identifier	param5		1141756	0					
ANR	1141977	Identifier	NULL		1141756	1					
ANR	1141978	EqualityExpression	value5 != NULL		1141756	1		!=			
ANR	1141979	Identifier	value5		1141756	0					
ANR	1141980	Identifier	NULL		1141756	1					
ANR	1141981	CompoundStatement		37:43:1056:1056	1141756	1					
ANR	1141982	IfStatement	"if ( ! parser . ParseExpression ( value5 , expr ) )"		1141756	0					
ANR	1141983	Condition	"! parser . ParseExpression ( value5 , expr )"	75:9:2702:2738	1141756	0	True				
ANR	1141984	UnaryOperationExpression	"! parser . ParseExpression ( value5 , expr )"		1141756	0					
ANR	1141985	UnaryOperator	!		1141756	0					
ANR	1141986	CallExpression	"parser . ParseExpression ( value5 , expr )"		1141756	1					
ANR	1141987	Callee	parser . ParseExpression		1141756	0					
ANR	1141988	MemberAccess	parser . ParseExpression		1141756	0					
ANR	1141989	Identifier	parser		1141756	0					
ANR	1141990	Identifier	ParseExpression		1141756	1					
ANR	1141991	ArgumentList	value5		1141756	1					
ANR	1141992	Argument	value5		1141756	0					
ANR	1141993	Identifier	value5		1141756	0					
ANR	1141994	Argument	expr		1141756	1					
ANR	1141995	Identifier	expr		1141756	0					
ANR	1141996	ExpressionStatement	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"	76:6:2748:2781	1141756	1	True				
ANR	1141997	CallExpression	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"		1141756	0					
ANR	1141998	Callee	dprintf		1141756	0					
ANR	1141999	Identifier	dprintf		1141756	0					
ANR	1142000	ArgumentList	D_ALWAYS		1141756	1					
ANR	1142001	Argument	D_ALWAYS		1141756	0					
ANR	1142002	Identifier	D_ALWAYS		1141756	0					
ANR	1142003	Argument	"""Parse error\\n"""		1141756	1					
ANR	1142004	PrimaryExpression	"""Parse error\\n"""		1141756	0					
ANR	1142005	ExpressionStatement	"classad -> Insert ( param5 , expr )"	77:4:2787:2816	1141756	1	True				
ANR	1142006	CallExpression	"classad -> Insert ( param5 , expr )"		1141756	0					
ANR	1142007	Callee	classad -> Insert		1141756	0					
ANR	1142008	PtrMemberAccess	classad -> Insert		1141756	0					
ANR	1142009	Identifier	classad		1141756	0					
ANR	1142010	Identifier	Insert		1141756	1					
ANR	1142011	ArgumentList	param5		1141756	1					
ANR	1142012	Argument	param5		1141756	0					
ANR	1142013	Identifier	param5		1141756	0					
ANR	1142014	Argument	expr		1141756	1					
ANR	1142015	Identifier	expr		1141756	0					
ANR	1142016	IfStatement	if ( ( param6 != NULL ) && ( value6 != NULL ) )		1141756	18					
ANR	1142017	Condition	( param6 != NULL ) && ( value6 != NULL )	80:6:2829:2864	1141756	0	True				
ANR	1142018	AndExpression	( param6 != NULL ) && ( value6 != NULL )		1141756	0		&&			
ANR	1142019	EqualityExpression	param6 != NULL		1141756	0		!=			
ANR	1142020	Identifier	param6		1141756	0					
ANR	1142021	Identifier	NULL		1141756	1					
ANR	1142022	EqualityExpression	value6 != NULL		1141756	1		!=			
ANR	1142023	Identifier	value6		1141756	0					
ANR	1142024	Identifier	NULL		1141756	1					
ANR	1142025	CompoundStatement		43:43:1231:1231	1141756	1					
ANR	1142026	IfStatement	"if ( ! parser . ParseExpression ( value6 , expr ) )"		1141756	0					
ANR	1142027	Condition	"! parser . ParseExpression ( value6 , expr )"	81:9:2877:2913	1141756	0	True				
ANR	1142028	UnaryOperationExpression	"! parser . ParseExpression ( value6 , expr )"		1141756	0					
ANR	1142029	UnaryOperator	!		1141756	0					
ANR	1142030	CallExpression	"parser . ParseExpression ( value6 , expr )"		1141756	1					
ANR	1142031	Callee	parser . ParseExpression		1141756	0					
ANR	1142032	MemberAccess	parser . ParseExpression		1141756	0					
ANR	1142033	Identifier	parser		1141756	0					
ANR	1142034	Identifier	ParseExpression		1141756	1					
ANR	1142035	ArgumentList	value6		1141756	1					
ANR	1142036	Argument	value6		1141756	0					
ANR	1142037	Identifier	value6		1141756	0					
ANR	1142038	Argument	expr		1141756	1					
ANR	1142039	Identifier	expr		1141756	0					
ANR	1142040	ExpressionStatement	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"	82:6:2923:2956	1141756	1	True				
ANR	1142041	CallExpression	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"		1141756	0					
ANR	1142042	Callee	dprintf		1141756	0					
ANR	1142043	Identifier	dprintf		1141756	0					
ANR	1142044	ArgumentList	D_ALWAYS		1141756	1					
ANR	1142045	Argument	D_ALWAYS		1141756	0					
ANR	1142046	Identifier	D_ALWAYS		1141756	0					
ANR	1142047	Argument	"""Parse error\\n"""		1141756	1					
ANR	1142048	PrimaryExpression	"""Parse error\\n"""		1141756	0					
ANR	1142049	ExpressionStatement	"classad -> Insert ( param6 , expr )"	83:4:2962:2991	1141756	1	True				
ANR	1142050	CallExpression	"classad -> Insert ( param6 , expr )"		1141756	0					
ANR	1142051	Callee	classad -> Insert		1141756	0					
ANR	1142052	PtrMemberAccess	classad -> Insert		1141756	0					
ANR	1142053	Identifier	classad		1141756	0					
ANR	1142054	Identifier	Insert		1141756	1					
ANR	1142055	ArgumentList	param6		1141756	1					
ANR	1142056	Argument	param6		1141756	0					
ANR	1142057	Identifier	param6		1141756	0					
ANR	1142058	Argument	expr		1141756	1					
ANR	1142059	Identifier	expr		1141756	0					
ANR	1142060	IfStatement	"if ( ! parser . ParseExpression ( status , expr ) )"		1141756	19					
ANR	1142061	Condition	"! parser . ParseExpression ( status , expr )"	86:7:3005:3041	1141756	0	True				
ANR	1142062	UnaryOperationExpression	"! parser . ParseExpression ( status , expr )"		1141756	0					
ANR	1142063	UnaryOperator	!		1141756	0					
ANR	1142064	CallExpression	"parser . ParseExpression ( status , expr )"		1141756	1					
ANR	1142065	Callee	parser . ParseExpression		1141756	0					
ANR	1142066	MemberAccess	parser . ParseExpression		1141756	0					
ANR	1142067	Identifier	parser		1141756	0					
ANR	1142068	Identifier	ParseExpression		1141756	1					
ANR	1142069	ArgumentList	status		1141756	1					
ANR	1142070	Argument	status		1141756	0					
ANR	1142071	Identifier	status		1141756	0					
ANR	1142072	Argument	expr		1141756	1					
ANR	1142073	Identifier	expr		1141756	0					
ANR	1142074	ExpressionStatement	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"	87:4:3049:3082	1141756	1	True				
ANR	1142075	CallExpression	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"		1141756	0					
ANR	1142076	Callee	dprintf		1141756	0					
ANR	1142077	Identifier	dprintf		1141756	0					
ANR	1142078	ArgumentList	D_ALWAYS		1141756	1					
ANR	1142079	Argument	D_ALWAYS		1141756	0					
ANR	1142080	Identifier	D_ALWAYS		1141756	0					
ANR	1142081	Argument	"""Parse error\\n"""		1141756	1					
ANR	1142082	PrimaryExpression	"""Parse error\\n"""		1141756	0					
ANR	1142083	ExpressionStatement	"classad -> Insert ( ""status"" , expr )"	88:2:3086:3117	1141756	20	True				
ANR	1142084	CallExpression	"classad -> Insert ( ""status"" , expr )"		1141756	0					
ANR	1142085	Callee	classad -> Insert		1141756	0					
ANR	1142086	PtrMemberAccess	classad -> Insert		1141756	0					
ANR	1142087	Identifier	classad		1141756	0					
ANR	1142088	Identifier	Insert		1141756	1					
ANR	1142089	ArgumentList	"""status"""		1141756	1					
ANR	1142090	Argument	"""status"""		1141756	0					
ANR	1142091	PrimaryExpression	"""status"""		1141756	0					
ANR	1142092	Argument	expr		1141756	1					
ANR	1142093	Identifier	expr		1141756	0					
ANR	1142094	IdentifierDeclStatement	classad :: PrettyPrint unparser ;	92:2:3145:3174	1141756	21	True				
ANR	1142095	IdentifierDecl	unparser		1141756	0					
ANR	1142096	IdentifierDeclType	classad :: PrettyPrint		1141756	0					
ANR	1142097	Identifier	unparser		1141756	1					
ANR	1142098	IdentifierDeclStatement	"std :: string adbuffer = """" ;"	93:2:3178:3203	1141756	22	True				
ANR	1142099	IdentifierDecl	"adbuffer = """""		1141756	0					
ANR	1142100	IdentifierDeclType	std :: string		1141756	0					
ANR	1142101	Identifier	adbuffer		1141756	1					
ANR	1142102	AssignmentExpression	"adbuffer = """""		1141756	2		=			
ANR	1142103	Identifier	adbuffer		1141756	0					
ANR	1142104	PrimaryExpression	""""""		1141756	1					
ANR	1142105	ExpressionStatement	"unparser . Unparse ( adbuffer , classad )"	94:2:3207:3242	1141756	23	True				
ANR	1142106	CallExpression	"unparser . Unparse ( adbuffer , classad )"		1141756	0					
ANR	1142107	Callee	unparser . Unparse		1141756	0					
ANR	1142108	MemberAccess	unparser . Unparse		1141756	0					
ANR	1142109	Identifier	unparser		1141756	0					
ANR	1142110	Identifier	Unparse		1141756	1					
ANR	1142111	ArgumentList	adbuffer		1141756	1					
ANR	1142112	Argument	adbuffer		1141756	0					
ANR	1142113	Identifier	adbuffer		1141756	0					
ANR	1142114	Argument	classad		1141756	1					
ANR	1142115	Identifier	classad		1141756	0					
ANR	1142116	Statement	delete	98:2:3290:3295	1141756	24	True				
ANR	1142117	ExpressionStatement	classad	98:9:3297:3304	1141756	25	True				
ANR	1142118	Identifier	classad		1141756	0					
ANR	1142119	IdentifierDeclStatement	FILE * flog ;	102:2:3376:3386	1141756	26	True				
ANR	1142120	IdentifierDecl	* flog		1141756	0					
ANR	1142121	IdentifierDeclType	FILE *		1141756	0					
ANR	1142122	Identifier	flog		1141756	1					
ANR	1142123	IfStatement	"if ( ( flog = safe_fopen_wrapper ( logfilename , ""a+"" ) ) == NULL )"		1141756	27					
ANR	1142124	Condition	"( flog = safe_fopen_wrapper ( logfilename , ""a+"" ) ) == NULL"	105:6:3433:3485	1141756	0	True				
ANR	1142125	EqualityExpression	"( flog = safe_fopen_wrapper ( logfilename , ""a+"" ) ) == NULL"		1141756	0		==			
ANR	1142126	AssignmentExpression	"flog = safe_fopen_wrapper ( logfilename , ""a+"" )"		1141756	0		=			
ANR	1142127	Identifier	flog		1141756	0					
ANR	1142128	CallExpression	"safe_fopen_wrapper ( logfilename , ""a+"" )"		1141756	1					
ANR	1142129	Callee	safe_fopen_wrapper		1141756	0					
ANR	1142130	Identifier	safe_fopen_wrapper		1141756	0					
ANR	1142131	ArgumentList	logfilename		1141756	1					
ANR	1142132	Argument	logfilename		1141756	0					
ANR	1142133	Identifier	logfilename		1141756	0					
ANR	1142134	Argument	"""a+"""		1141756	1					
ANR	1142135	PrimaryExpression	"""a+"""		1141756	0					
ANR	1142136	Identifier	NULL		1141756	1					
ANR	1142137	CompoundStatement		68:60:1852:1852	1141756	1					
ANR	1142138	ExpressionStatement	"dprintf ( D_ALWAYS , ""cannot open logfile :%s...\\n"" , logfilename )"	106:4:3493:3559	1141756	0	True				
ANR	1142139	CallExpression	"dprintf ( D_ALWAYS , ""cannot open logfile :%s...\\n"" , logfilename )"		1141756	0					
ANR	1142140	Callee	dprintf		1141756	0					
ANR	1142141	Identifier	dprintf		1141756	0					
ANR	1142142	ArgumentList	D_ALWAYS		1141756	1					
ANR	1142143	Argument	D_ALWAYS		1141756	0					
ANR	1142144	Identifier	D_ALWAYS		1141756	0					
ANR	1142145	Argument	"""cannot open logfile :%s...\\n"""		1141756	1					
ANR	1142146	PrimaryExpression	"""cannot open logfile :%s...\\n"""		1141756	0					
ANR	1142147	Argument	logfilename		1141756	2					
ANR	1142148	Identifier	logfilename		1141756	0					
ANR	1142149	ExpressionStatement	exit ( 1 )	108:4:3565:3572	1141756	1	True				
ANR	1142150	CallExpression	exit ( 1 )		1141756	0					
ANR	1142151	Callee	exit		1141756	0					
ANR	1142152	Identifier	exit		1141756	0					
ANR	1142153	ArgumentList	1		1141756	1					
ANR	1142154	Argument	1		1141756	0					
ANR	1142155	PrimaryExpression	1		1141756	0					
ANR	1142156	ExpressionStatement	"fprintf ( flog , ""%s"" , adbuffer . c_str ( ) )"	110:2:3580:3616	1141756	28	True				
ANR	1142157	CallExpression	"fprintf ( flog , ""%s"" , adbuffer . c_str ( ) )"		1141756	0					
ANR	1142158	Callee	fprintf		1141756	0					
ANR	1142159	Identifier	fprintf		1141756	0					
ANR	1142160	ArgumentList	flog		1141756	1					
ANR	1142161	Argument	flog		1141756	0					
ANR	1142162	Identifier	flog		1141756	0					
ANR	1142163	Argument	"""%s"""		1141756	1					
ANR	1142164	PrimaryExpression	"""%s"""		1141756	0					
ANR	1142165	Argument	adbuffer . c_str ( )		1141756	2					
ANR	1142166	CallExpression	adbuffer . c_str ( )		1141756	0					
ANR	1142167	Callee	adbuffer . c_str		1141756	0					
ANR	1142168	MemberAccess	adbuffer . c_str		1141756	0					
ANR	1142169	Identifier	adbuffer		1141756	0					
ANR	1142170	Identifier	c_str		1141756	1					
ANR	1142171	ArgumentList			1141756	1					
ANR	1142172	ExpressionStatement	fclose ( flog )	111:2:3620:3632	1141756	29	True				
ANR	1142173	CallExpression	fclose ( flog )		1141756	0					
ANR	1142174	Callee	fclose		1141756	0					
ANR	1142175	Identifier	fclose		1141756	0					
ANR	1142176	ArgumentList	flog		1141756	1					
ANR	1142177	Argument	flog		1141756	0					
ANR	1142178	Identifier	flog		1141756	0					
ANR	1142179	ReturnType	void		1141756	1					
ANR	1142180	Identifier	write_dap_log		1141756	2					
ANR	1142181	ParameterList	"const char * logfilename , const char * status , const char * param1 , const char * value1 , const char * param2 , const char * value2 , const char * param3 , const char * value3 , const char * param4 , const char * value4 , const char * param5 , const char * value5 , const char * param6 , const char * value6"		1141756	3					
ANR	1142182	Parameter	const char * logfilename	37:19:1349:1371	1141756	0	True				
ANR	1142183	ParameterType	const char *		1141756	0					
ANR	1142184	Identifier	logfilename		1141756	1					
ANR	1142185	Parameter	const char * status	37:44:1374:1391	1141756	1	True				
ANR	1142186	ParameterType	const char *		1141756	0					
ANR	1142187	Identifier	status		1141756	1					
ANR	1142188	Parameter	const char * param1	37:64:1394:1411	1141756	2	True				
ANR	1142189	ParameterType	const char *		1141756	0					
ANR	1142190	Identifier	param1		1141756	1					
ANR	1142191	Parameter	const char * value1	37:84:1414:1431	1141756	3	True				
ANR	1142192	ParameterType	const char *		1141756	0					
ANR	1142193	Identifier	value1		1141756	1					
ANR	1142194	Parameter	const char * param2	37:104:1434:1451	1141756	4	True				
ANR	1142195	ParameterType	const char *		1141756	0					
ANR	1142196	Identifier	param2		1141756	1					
ANR	1142197	Parameter	const char * value2	37:124:1454:1471	1141756	5	True				
ANR	1142198	ParameterType	const char *		1141756	0					
ANR	1142199	Identifier	value2		1141756	1					
ANR	1142200	Parameter	const char * param3	37:144:1474:1491	1141756	6	True				
ANR	1142201	ParameterType	const char *		1141756	0					
ANR	1142202	Identifier	param3		1141756	1					
ANR	1142203	Parameter	const char * value3	37:164:1494:1511	1141756	7	True				
ANR	1142204	ParameterType	const char *		1141756	0					
ANR	1142205	Identifier	value3		1141756	1					
ANR	1142206	Parameter	const char * param4	37:184:1514:1531	1141756	8	True				
ANR	1142207	ParameterType	const char *		1141756	0					
ANR	1142208	Identifier	param4		1141756	1					
ANR	1142209	Parameter	const char * value4	37:204:1534:1551	1141756	9	True				
ANR	1142210	ParameterType	const char *		1141756	0					
ANR	1142211	Identifier	value4		1141756	1					
ANR	1142212	Parameter	const char * param5	37:224:1554:1571	1141756	10	True				
ANR	1142213	ParameterType	const char *		1141756	0					
ANR	1142214	Identifier	param5		1141756	1					
ANR	1142215	Parameter	const char * value5	37:244:1574:1591	1141756	11	True				
ANR	1142216	ParameterType	const char *		1141756	0					
ANR	1142217	Identifier	value5		1141756	1					
ANR	1142218	Parameter	const char * param6	37:264:1594:1611	1141756	12	True				
ANR	1142219	ParameterType	const char *		1141756	0					
ANR	1142220	Identifier	param6		1141756	1					
ANR	1142221	Parameter	const char * value6	37:284:1614:1631	1141756	13	True				
ANR	1142222	ParameterType	const char *		1141756	0					
ANR	1142223	Identifier	value6		1141756	1					
ANR	1142224	CFGEntryNode	ENTRY		1141756		True				
ANR	1142225	CFGExitNode	EXIT		1141756		True				
ANR	1142226	Symbol	value6		1141756						
ANR	1142227	Symbol	value5		1141756						
ANR	1142228	Symbol	value2		1141756						
ANR	1142229	Symbol	value1		1141756						
ANR	1142230	Symbol	value4		1141756						
ANR	1142231	Symbol	value3		1141756						
ANR	1142232	Symbol	expr		1141756						
ANR	1142233	Symbol	logfilename		1141756						
ANR	1142234	Symbol	param5		1141756						
ANR	1142235	Symbol	param6		1141756						
ANR	1142236	Symbol	NULL		1141756						
ANR	1142237	Symbol	parser . ParseExpression		1141756						
ANR	1142238	Symbol	safe_fopen_wrapper		1141756						
ANR	1142239	Symbol	D_ALWAYS		1141756						
ANR	1142240	Symbol	param_boolean		1141756						
ANR	1142241	Symbol	param3		1141756						
ANR	1142242	Symbol	param4		1141756						
ANR	1142243	Symbol	param1		1141756						
ANR	1142244	Symbol	flog		1141756						
ANR	1142245	Symbol	param2		1141756						
ANR	1142246	Symbol	parser		1141756						
ANR	1142247	Symbol	true		1141756						
ANR	1142248	Symbol	classad		1141756						
ANR	1142249	Symbol	unparser		1141756						
ANR	1142250	Symbol	adbuffer . c_str		1141756						
ANR	1142251	Symbol	classad :: Literal :: MakeAbsTime		1141756						
ANR	1142252	Symbol	status		1141756						
ANR	1142253	Symbol	adbuffer		1141756						
ANR	1142254	Function	write_classad_log	116:0:3715:4819							
ANR	1142255	FunctionDef	"write_classad_log (const char * logfilename , const char * status , classad :: ClassAd * classad)"		1142254	0					
ANR	1142256	CompoundStatement		117:0:3810:4819	1142254	0					
ANR	1142257	IdentifierDeclStatement	classad :: ClassAdParser parser ;	119:2:3815:3844	1142254	0	True				
ANR	1142258	IdentifierDecl	parser		1142254	0					
ANR	1142259	IdentifierDeclType	classad :: ClassAdParser		1142254	0					
ANR	1142260	Identifier	parser		1142254	1					
ANR	1142261	IdentifierDeclStatement	classad :: ExprTree * expr = NULL ;	120:2:3848:3878	1142254	1	True				
ANR	1142262	IdentifierDecl	* expr = NULL		1142254	0					
ANR	1142263	IdentifierDeclType	classad :: ExprTree *		1142254	0					
ANR	1142264	Identifier	expr		1142254	1					
ANR	1142265	AssignmentExpression	* expr = NULL		1142254	2		=			
ANR	1142266	Identifier	NULL		1142254	0					
ANR	1142267	Identifier	NULL		1142254	1					
ANR	1142268	IdentifierDeclStatement	classad :: PrettyPrint unparser ;	121:2:3882:3911	1142254	2	True				
ANR	1142269	IdentifierDecl	unparser		1142254	0					
ANR	1142270	IdentifierDeclType	classad :: PrettyPrint		1142254	0					
ANR	1142271	Identifier	unparser		1142254	1					
ANR	1142272	IdentifierDeclStatement	"std :: string adbuffer = """" ;"	122:2:3915:3940	1142254	3	True				
ANR	1142273	IdentifierDecl	"adbuffer = """""		1142254	0					
ANR	1142274	IdentifierDeclType	std :: string		1142254	0					
ANR	1142275	Identifier	adbuffer		1142254	1					
ANR	1142276	AssignmentExpression	"adbuffer = """""		1142254	2		=			
ANR	1142277	Identifier	adbuffer		1142254	0					
ANR	1142278	PrimaryExpression	""""""		1142254	1					
ANR	1142279	IdentifierDeclStatement	FILE * flog ;	123:2:3944:3954	1142254	4	True				
ANR	1142280	IdentifierDecl	* flog		1142254	0					
ANR	1142281	IdentifierDeclType	FILE *		1142254	0					
ANR	1142282	Identifier	flog		1142254	1					
ANR	1142283	ExpressionStatement	"printf ( ""Logging the classad..\\n"" )"	125:2:3959:3992	1142254	5	True				
ANR	1142284	CallExpression	"printf ( ""Logging the classad..\\n"" )"		1142254	0					
ANR	1142285	Callee	printf		1142254	0					
ANR	1142286	Identifier	printf		1142254	0					
ANR	1142287	ArgumentList	"""Logging the classad..\\n"""		1142254	1					
ANR	1142288	Argument	"""Logging the classad..\\n"""		1142254	0					
ANR	1142289	PrimaryExpression	"""Logging the classad..\\n"""		1142254	0					
ANR	1142290	ExpressionStatement	"classad -> Insert ( ""timestamp"" , classad :: Literal :: MakeAbsTime ( ) )"	128:2:4030:4090	1142254	6	True				
ANR	1142291	CallExpression	"classad -> Insert ( ""timestamp"" , classad :: Literal :: MakeAbsTime ( ) )"		1142254	0					
ANR	1142292	Callee	classad -> Insert		1142254	0					
ANR	1142293	PtrMemberAccess	classad -> Insert		1142254	0					
ANR	1142294	Identifier	classad		1142254	0					
ANR	1142295	Identifier	Insert		1142254	1					
ANR	1142296	ArgumentList	"""timestamp"""		1142254	1					
ANR	1142297	Argument	"""timestamp"""		1142254	0					
ANR	1142298	PrimaryExpression	"""timestamp"""		1142254	0					
ANR	1142299	Argument	classad :: Literal :: MakeAbsTime ( )		1142254	1					
ANR	1142300	CallExpression	classad :: Literal :: MakeAbsTime ( )		1142254	0					
ANR	1142301	Callee	classad :: Literal :: MakeAbsTime		1142254	0					
ANR	1142302	Identifier	classad :: Literal :: MakeAbsTime		1142254	0					
ANR	1142303	ArgumentList			1142254	1					
ANR	1142304	ExpressionStatement	"printf ( ""*1*\\n"" )"	130:2:4095:4110	1142254	7	True				
ANR	1142305	CallExpression	"printf ( ""*1*\\n"" )"		1142254	0					
ANR	1142306	Callee	printf		1142254	0					
ANR	1142307	Identifier	printf		1142254	0					
ANR	1142308	ArgumentList	"""*1*\\n"""		1142254	1					
ANR	1142309	Argument	"""*1*\\n"""		1142254	0					
ANR	1142310	PrimaryExpression	"""*1*\\n"""		1142254	0					
ANR	1142311	IfStatement	"if ( ! parser . ParseExpression ( status , expr ) )"		1142254	8					
ANR	1142312	Condition	"! parser . ParseExpression ( status , expr )"	132:7:4120:4156	1142254	0	True				
ANR	1142313	UnaryOperationExpression	"! parser . ParseExpression ( status , expr )"		1142254	0					
ANR	1142314	UnaryOperator	!		1142254	0					
ANR	1142315	CallExpression	"parser . ParseExpression ( status , expr )"		1142254	1					
ANR	1142316	Callee	parser . ParseExpression		1142254	0					
ANR	1142317	MemberAccess	parser . ParseExpression		1142254	0					
ANR	1142318	Identifier	parser		1142254	0					
ANR	1142319	Identifier	ParseExpression		1142254	1					
ANR	1142320	ArgumentList	status		1142254	1					
ANR	1142321	Argument	status		1142254	0					
ANR	1142322	Identifier	status		1142254	0					
ANR	1142323	Argument	expr		1142254	1					
ANR	1142324	Identifier	expr		1142254	0					
ANR	1142325	ExpressionStatement	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"	133:4:4164:4197	1142254	1	True				
ANR	1142326	CallExpression	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"		1142254	0					
ANR	1142327	Callee	dprintf		1142254	0					
ANR	1142328	Identifier	dprintf		1142254	0					
ANR	1142329	ArgumentList	D_ALWAYS		1142254	1					
ANR	1142330	Argument	D_ALWAYS		1142254	0					
ANR	1142331	Identifier	D_ALWAYS		1142254	0					
ANR	1142332	Argument	"""Parse error\\n"""		1142254	1					
ANR	1142333	PrimaryExpression	"""Parse error\\n"""		1142254	0					
ANR	1142334	ExpressionStatement	"classad -> Insert ( ""status"" , expr )"	134:2:4201:4232	1142254	9	True				
ANR	1142335	CallExpression	"classad -> Insert ( ""status"" , expr )"		1142254	0					
ANR	1142336	Callee	classad -> Insert		1142254	0					
ANR	1142337	PtrMemberAccess	classad -> Insert		1142254	0					
ANR	1142338	Identifier	classad		1142254	0					
ANR	1142339	Identifier	Insert		1142254	1					
ANR	1142340	ArgumentList	"""status"""		1142254	1					
ANR	1142341	Argument	"""status"""		1142254	0					
ANR	1142342	PrimaryExpression	"""status"""		1142254	0					
ANR	1142343	Argument	expr		1142254	1					
ANR	1142344	Identifier	expr		1142254	0					
ANR	1142345	ExpressionStatement	"printf ( ""*2*\\n"" )"	136:2:4237:4252	1142254	10	True				
ANR	1142346	CallExpression	"printf ( ""*2*\\n"" )"		1142254	0					
ANR	1142347	Callee	printf		1142254	0					
ANR	1142348	Identifier	printf		1142254	0					
ANR	1142349	ArgumentList	"""*2*\\n"""		1142254	1					
ANR	1142350	Argument	"""*2*\\n"""		1142254	0					
ANR	1142351	PrimaryExpression	"""*2*\\n"""		1142254	0					
ANR	1142352	ExpressionStatement	"unparser . Unparse ( adbuffer , classad )"	147:2:4472:4507	1142254	11	True				
ANR	1142353	CallExpression	"unparser . Unparse ( adbuffer , classad )"		1142254	0					
ANR	1142354	Callee	unparser . Unparse		1142254	0					
ANR	1142355	MemberAccess	unparser . Unparse		1142254	0					
ANR	1142356	Identifier	unparser		1142254	0					
ANR	1142357	Identifier	Unparse		1142254	1					
ANR	1142358	ArgumentList	adbuffer		1142254	1					
ANR	1142359	Argument	adbuffer		1142254	0					
ANR	1142360	Identifier	adbuffer		1142254	0					
ANR	1142361	Argument	classad		1142254	1					
ANR	1142362	Identifier	classad		1142254	0					
ANR	1142363	ExpressionStatement	"printf ( ""*3*\\n"" )"	149:2:4514:4529	1142254	12	True				
ANR	1142364	CallExpression	"printf ( ""*3*\\n"" )"		1142254	0					
ANR	1142365	Callee	printf		1142254	0					
ANR	1142366	Identifier	printf		1142254	0					
ANR	1142367	ArgumentList	"""*3*\\n"""		1142254	1					
ANR	1142368	Argument	"""*3*\\n"""		1142254	0					
ANR	1142369	PrimaryExpression	"""*3*\\n"""		1142254	0					
ANR	1142370	IfStatement	"if ( ( flog = safe_fopen_wrapper ( logfilename , ""a+"" ) ) == NULL )"		1142254	13					
ANR	1142371	Condition	"( flog = safe_fopen_wrapper ( logfilename , ""a+"" ) ) == NULL"	152:6:4576:4628	1142254	0	True				
ANR	1142372	EqualityExpression	"( flog = safe_fopen_wrapper ( logfilename , ""a+"" ) ) == NULL"		1142254	0		==			
ANR	1142373	AssignmentExpression	"flog = safe_fopen_wrapper ( logfilename , ""a+"" )"		1142254	0		=			
ANR	1142374	Identifier	flog		1142254	0					
ANR	1142375	CallExpression	"safe_fopen_wrapper ( logfilename , ""a+"" )"		1142254	1					
ANR	1142376	Callee	safe_fopen_wrapper		1142254	0					
ANR	1142377	Identifier	safe_fopen_wrapper		1142254	0					
ANR	1142378	ArgumentList	logfilename		1142254	1					
ANR	1142379	Argument	logfilename		1142254	0					
ANR	1142380	Identifier	logfilename		1142254	0					
ANR	1142381	Argument	"""a+"""		1142254	1					
ANR	1142382	PrimaryExpression	"""a+"""		1142254	0					
ANR	1142383	Identifier	NULL		1142254	1					
ANR	1142384	CompoundStatement		36:60:819:819	1142254	1					
ANR	1142385	ExpressionStatement	"dprintf ( D_ALWAYS , ""cannot open logfile :%s...\\n"" , logfilename )"	153:4:4636:4702	1142254	0	True				
ANR	1142386	CallExpression	"dprintf ( D_ALWAYS , ""cannot open logfile :%s...\\n"" , logfilename )"		1142254	0					
ANR	1142387	Callee	dprintf		1142254	0					
ANR	1142388	Identifier	dprintf		1142254	0					
ANR	1142389	ArgumentList	D_ALWAYS		1142254	1					
ANR	1142390	Argument	D_ALWAYS		1142254	0					
ANR	1142391	Identifier	D_ALWAYS		1142254	0					
ANR	1142392	Argument	"""cannot open logfile :%s...\\n"""		1142254	1					
ANR	1142393	PrimaryExpression	"""cannot open logfile :%s...\\n"""		1142254	0					
ANR	1142394	Argument	logfilename		1142254	2					
ANR	1142395	Identifier	logfilename		1142254	0					
ANR	1142396	ExpressionStatement	exit ( 1 )	155:4:4708:4715	1142254	1	True				
ANR	1142397	CallExpression	exit ( 1 )		1142254	0					
ANR	1142398	Callee	exit		1142254	0					
ANR	1142399	Identifier	exit		1142254	0					
ANR	1142400	ArgumentList	1		1142254	1					
ANR	1142401	Argument	1		1142254	0					
ANR	1142402	PrimaryExpression	1		1142254	0					
ANR	1142403	ExpressionStatement	"printf ( ""*4*\\n"" )"	158:2:4724:4739	1142254	14	True				
ANR	1142404	CallExpression	"printf ( ""*4*\\n"" )"		1142254	0					
ANR	1142405	Callee	printf		1142254	0					
ANR	1142406	Identifier	printf		1142254	0					
ANR	1142407	ArgumentList	"""*4*\\n"""		1142254	1					
ANR	1142408	Argument	"""*4*\\n"""		1142254	0					
ANR	1142409	PrimaryExpression	"""*4*\\n"""		1142254	0					
ANR	1142410	ExpressionStatement	"fprintf ( flog , ""%s"" , adbuffer . c_str ( ) )"	160:2:4744:4780	1142254	15	True				
ANR	1142411	CallExpression	"fprintf ( flog , ""%s"" , adbuffer . c_str ( ) )"		1142254	0					
ANR	1142412	Callee	fprintf		1142254	0					
ANR	1142413	Identifier	fprintf		1142254	0					
ANR	1142414	ArgumentList	flog		1142254	1					
ANR	1142415	Argument	flog		1142254	0					
ANR	1142416	Identifier	flog		1142254	0					
ANR	1142417	Argument	"""%s"""		1142254	1					
ANR	1142418	PrimaryExpression	"""%s"""		1142254	0					
ANR	1142419	Argument	adbuffer . c_str ( )		1142254	2					
ANR	1142420	CallExpression	adbuffer . c_str ( )		1142254	0					
ANR	1142421	Callee	adbuffer . c_str		1142254	0					
ANR	1142422	MemberAccess	adbuffer . c_str		1142254	0					
ANR	1142423	Identifier	adbuffer		1142254	0					
ANR	1142424	Identifier	c_str		1142254	1					
ANR	1142425	ArgumentList			1142254	1					
ANR	1142426	ExpressionStatement	"printf ( ""*5*\\n"" )"	162:2:4785:4800	1142254	16	True				
ANR	1142427	CallExpression	"printf ( ""*5*\\n"" )"		1142254	0					
ANR	1142428	Callee	printf		1142254	0					
ANR	1142429	Identifier	printf		1142254	0					
ANR	1142430	ArgumentList	"""*5*\\n"""		1142254	1					
ANR	1142431	Argument	"""*5*\\n"""		1142254	0					
ANR	1142432	PrimaryExpression	"""*5*\\n"""		1142254	0					
ANR	1142433	ExpressionStatement	fclose ( flog )	164:2:4805:4817	1142254	17	True				
ANR	1142434	CallExpression	fclose ( flog )		1142254	0					
ANR	1142435	Callee	fclose		1142254	0					
ANR	1142436	Identifier	fclose		1142254	0					
ANR	1142437	ArgumentList	flog		1142254	1					
ANR	1142438	Argument	flog		1142254	0					
ANR	1142439	Identifier	flog		1142254	0					
ANR	1142440	ReturnType	void		1142254	1					
ANR	1142441	Identifier	write_classad_log		1142254	2					
ANR	1142442	ParameterList	"const char * logfilename , const char * status , classad :: ClassAd * classad"		1142254	3					
ANR	1142443	Parameter	const char * logfilename	116:23:3738:3760	1142254	0	True				
ANR	1142444	ParameterType	const char *		1142254	0					
ANR	1142445	Identifier	logfilename		1142254	1					
ANR	1142446	Parameter	const char * status	116:48:3763:3780	1142254	1	True				
ANR	1142447	ParameterType	const char *		1142254	0					
ANR	1142448	Identifier	status		1142254	1					
ANR	1142449	Parameter	classad :: ClassAd * classad	116:68:3783:3807	1142254	2	True				
ANR	1142450	ParameterType	classad :: ClassAd *		1142254	0					
ANR	1142451	Identifier	classad		1142254	1					
ANR	1142452	CFGEntryNode	ENTRY		1142254		True				
ANR	1142453	CFGExitNode	EXIT		1142254		True				
ANR	1142454	Symbol	NULL		1142254						
ANR	1142455	Symbol	parser . ParseExpression		1142254						
ANR	1142456	Symbol	safe_fopen_wrapper		1142254						
ANR	1142457	Symbol	D_ALWAYS		1142254						
ANR	1142458	Symbol	flog		1142254						
ANR	1142459	Symbol	parser		1142254						
ANR	1142460	Symbol	classad		1142254						
ANR	1142461	Symbol	expr		1142254						
ANR	1142462	Symbol	unparser		1142254						
ANR	1142463	Symbol	logfilename		1142254						
ANR	1142464	Symbol	adbuffer . c_str		1142254						
ANR	1142465	Symbol	classad :: Literal :: MakeAbsTime		1142254						
ANR	1142466	Symbol	status		1142254						
ANR	1142467	Symbol	adbuffer		1142254						
ANR	1142468	Function	write_collection_log	168:0:4899:6392							
ANR	1142469	FunctionDef	"write_collection_log (classad :: ClassAdCollection * dapcollection , const char * dap_id , const char * update)"		1142468	0					
ANR	1142470	CompoundStatement		170:0:5014:6392	1142468	0					
ANR	1142471	IdentifierDeclStatement	classad :: ClassAdParser parser ;	172:2:5056:5085	1142468	0	True				
ANR	1142472	IdentifierDecl	parser		1142468	0					
ANR	1142473	IdentifierDeclType	classad :: ClassAdParser		1142468	0					
ANR	1142474	Identifier	parser		1142468	1					
ANR	1142475	IdentifierDeclStatement	bool status ;	173:2:5089:5100	1142468	1	True				
ANR	1142476	IdentifierDecl	status		1142468	0					
ANR	1142477	IdentifierDeclType	bool		1142468	0					
ANR	1142478	Identifier	status		1142468	1					
ANR	1142479	IdentifierDeclStatement	std :: string key ;	174:2:5104:5119	1142468	2	True				
ANR	1142480	IdentifierDecl	key		1142468	0					
ANR	1142481	IdentifierDeclType	std :: string		1142468	0					
ANR	1142482	Identifier	key		1142468	1					
ANR	1142483	ExpressionStatement	"key = ""key = """	175:2:5123:5137	1142468	3	True				
ANR	1142484	AssignmentExpression	"key = ""key = """		1142468	0		=			
ANR	1142485	Identifier	key		1142468	0					
ANR	1142486	PrimaryExpression	"""key = """		1142468	1					
ANR	1142487	ExpressionStatement	key += dap_id	176:2:5141:5154	1142468	4	True				
ANR	1142488	AssignmentExpression	key += dap_id		1142468	0		+=			
ANR	1142489	Identifier	key		1142468	0					
ANR	1142490	Identifier	dap_id		1142468	1					
ANR	1142491	IdentifierDeclStatement	"std :: string partial_s = ""[ "" ;"	178:2:5161:5189	1142468	5	True				
ANR	1142492	IdentifierDecl	"partial_s = ""[ """		1142468	0					
ANR	1142493	IdentifierDeclType	std :: string		1142468	0					
ANR	1142494	Identifier	partial_s		1142468	1					
ANR	1142495	AssignmentExpression	"partial_s = ""[ """		1142468	2		=			
ANR	1142496	Identifier	partial_s		1142468	0					
ANR	1142497	PrimaryExpression	"""[ """		1142468	1					
ANR	1142498	ExpressionStatement	partial_s += update	179:2:5193:5212	1142468	6	True				
ANR	1142499	AssignmentExpression	partial_s += update		1142468	0		+=			
ANR	1142500	Identifier	partial_s		1142468	0					
ANR	1142501	Identifier	update		1142468	1					
ANR	1142502	ExpressionStatement	"partial_s += "" ]"""	180:2:5216:5233	1142468	7	True				
ANR	1142503	AssignmentExpression	"partial_s += "" ]"""		1142468	0		+=			
ANR	1142504	Identifier	partial_s		1142468	0					
ANR	1142505	PrimaryExpression	""" ]"""		1142468	1					
ANR	1142506	IdentifierDeclStatement	"classad :: ClassAd * partialAd = parser . ParseClassAd ( partial_s , true ) ;"	182:2:5240:5306	1142468	8	True				
ANR	1142507	IdentifierDecl	"* partialAd = parser . ParseClassAd ( partial_s , true )"		1142468	0					
ANR	1142508	IdentifierDeclType	classad :: ClassAd *		1142468	0					
ANR	1142509	Identifier	partialAd		1142468	1					
ANR	1142510	AssignmentExpression	"* partialAd = parser . ParseClassAd ( partial_s , true )"		1142468	2		=			
ANR	1142511	Identifier	partialAd		1142468	0					
ANR	1142512	CallExpression	"parser . ParseClassAd ( partial_s , true )"		1142468	1					
ANR	1142513	Callee	parser . ParseClassAd		1142468	0					
ANR	1142514	MemberAccess	parser . ParseClassAd		1142468	0					
ANR	1142515	Identifier	parser		1142468	0					
ANR	1142516	Identifier	ParseClassAd		1142468	1					
ANR	1142517	ArgumentList	partial_s		1142468	1					
ANR	1142518	Argument	partial_s		1142468	0					
ANR	1142519	Identifier	partial_s		1142468	0					
ANR	1142520	Argument	true		1142468	1					
ANR	1142521	Identifier	true		1142468	0					
ANR	1142522	IfStatement	if ( partialAd == NULL )		1142468	9					
ANR	1142523	Condition	partialAd == NULL	183:6:5314:5330	1142468	0	True				
ANR	1142524	EqualityExpression	partialAd == NULL		1142468	0		==			
ANR	1142525	Identifier	partialAd		1142468	0					
ANR	1142526	Identifier	NULL		1142468	1					
ANR	1142527	CompoundStatement		14:25:318:318	1142468	1					
ANR	1142528	ExpressionStatement	"dprintf ( D_ALWAYS , ""ParseClassAd partial %s failed! dap_id:%s\\n"" , partial_s . c_str ( ) , dap_id )"	184:1:5336:5429	1142468	0	True				
ANR	1142529	CallExpression	"dprintf ( D_ALWAYS , ""ParseClassAd partial %s failed! dap_id:%s\\n"" , partial_s . c_str ( ) , dap_id )"		1142468	0					
ANR	1142530	Callee	dprintf		1142468	0					
ANR	1142531	Identifier	dprintf		1142468	0					
ANR	1142532	ArgumentList	D_ALWAYS		1142468	1					
ANR	1142533	Argument	D_ALWAYS		1142468	0					
ANR	1142534	Identifier	D_ALWAYS		1142468	0					
ANR	1142535	Argument	"""ParseClassAd partial %s failed! dap_id:%s\\n"""		1142468	1					
ANR	1142536	PrimaryExpression	"""ParseClassAd partial %s failed! dap_id:%s\\n"""		1142468	0					
ANR	1142537	Argument	partial_s . c_str ( )		1142468	2					
ANR	1142538	CallExpression	partial_s . c_str ( )		1142468	0					
ANR	1142539	Callee	partial_s . c_str		1142468	0					
ANR	1142540	MemberAccess	partial_s . c_str		1142468	0					
ANR	1142541	Identifier	partial_s		1142468	0					
ANR	1142542	Identifier	c_str		1142468	1					
ANR	1142543	ArgumentList			1142468	1					
ANR	1142544	Argument	dap_id		1142468	3					
ANR	1142545	Identifier	dap_id		1142468	0					
ANR	1142546	ReturnStatement	return ;	186:1:5432:5438	1142468	1	True				
ANR	1142547	ExpressionStatement	"status = partialAd -> Insert ( ""timestamp"" , classad :: Literal :: MakeAbsTime ( ) )"	188:2:5446:5517	1142468	10	True				
ANR	1142548	AssignmentExpression	"status = partialAd -> Insert ( ""timestamp"" , classad :: Literal :: MakeAbsTime ( ) )"		1142468	0		=			
ANR	1142549	Identifier	status		1142468	0					
ANR	1142550	CallExpression	"partialAd -> Insert ( ""timestamp"" , classad :: Literal :: MakeAbsTime ( ) )"		1142468	1					
ANR	1142551	Callee	partialAd -> Insert		1142468	0					
ANR	1142552	PtrMemberAccess	partialAd -> Insert		1142468	0					
ANR	1142553	Identifier	partialAd		1142468	0					
ANR	1142554	Identifier	Insert		1142468	1					
ANR	1142555	ArgumentList	"""timestamp"""		1142468	1					
ANR	1142556	Argument	"""timestamp"""		1142468	0					
ANR	1142557	PrimaryExpression	"""timestamp"""		1142468	0					
ANR	1142558	Argument	classad :: Literal :: MakeAbsTime ( )		1142468	1					
ANR	1142559	CallExpression	classad :: Literal :: MakeAbsTime ( )		1142468	0					
ANR	1142560	Callee	classad :: Literal :: MakeAbsTime		1142468	0					
ANR	1142561	Identifier	classad :: Literal :: MakeAbsTime		1142468	0					
ANR	1142562	ArgumentList			1142468	1					
ANR	1142563	IfStatement	if ( status == false )		1142468	11					
ANR	1142564	Condition	status == false	189:6:5525:5539	1142468	0	True				
ANR	1142565	EqualityExpression	status == false		1142468	0		==			
ANR	1142566	Identifier	status		1142468	0					
ANR	1142567	Identifier	false		1142468	1					
ANR	1142568	CompoundStatement		20:23:527:527	1142468	1					
ANR	1142569	Statement	delete	190:4:5548:5553	1142468	0	True				
ANR	1142570	ExpressionStatement	partialAd	190:11:5555:5564	1142468	1	True				
ANR	1142571	Identifier	partialAd		1142468	0					
ANR	1142572	ExpressionStatement	"dprintf ( D_ALWAYS , ""ParseClassAd partial %s insert timestamp failed! dap_id:%s\\n"" , partial_s . c_str ( ) , dap_id )"	191:2:5568:5682	1142468	2	True				
ANR	1142573	CallExpression	"dprintf ( D_ALWAYS , ""ParseClassAd partial %s insert timestamp failed! dap_id:%s\\n"" , partial_s . c_str ( ) , dap_id )"		1142468	0					
ANR	1142574	Callee	dprintf		1142468	0					
ANR	1142575	Identifier	dprintf		1142468	0					
ANR	1142576	ArgumentList	D_ALWAYS		1142468	1					
ANR	1142577	Argument	D_ALWAYS		1142468	0					
ANR	1142578	Identifier	D_ALWAYS		1142468	0					
ANR	1142579	Argument	"""ParseClassAd partial %s insert timestamp failed! dap_id:%s\\n"""		1142468	1					
ANR	1142580	PrimaryExpression	"""ParseClassAd partial %s insert timestamp failed! dap_id:%s\\n"""		1142468	0					
ANR	1142581	Argument	partial_s . c_str ( )		1142468	2					
ANR	1142582	CallExpression	partial_s . c_str ( )		1142468	0					
ANR	1142583	Callee	partial_s . c_str		1142468	0					
ANR	1142584	MemberAccess	partial_s . c_str		1142468	0					
ANR	1142585	Identifier	partial_s		1142468	0					
ANR	1142586	Identifier	c_str		1142468	1					
ANR	1142587	ArgumentList			1142468	1					
ANR	1142588	Argument	dap_id		1142468	3					
ANR	1142589	Identifier	dap_id		1142468	0					
ANR	1142590	ReturnStatement	return ;	194:3:5687:5693	1142468	3	True				
ANR	1142591	IdentifierDeclStatement	classad :: PrettyPrint unparser ;	197:2:5706:5735	1142468	12	True				
ANR	1142592	IdentifierDecl	unparser		1142468	0					
ANR	1142593	IdentifierDeclType	classad :: PrettyPrint		1142468	0					
ANR	1142594	Identifier	unparser		1142468	1					
ANR	1142595	IdentifierDeclStatement	"std :: string adbuffer = """" ;"	198:2:5739:5764	1142468	13	True				
ANR	1142596	IdentifierDecl	"adbuffer = """""		1142468	0					
ANR	1142597	IdentifierDeclType	std :: string		1142468	0					
ANR	1142598	Identifier	adbuffer		1142468	1					
ANR	1142599	AssignmentExpression	"adbuffer = """""		1142468	2		=			
ANR	1142600	Identifier	adbuffer		1142468	0					
ANR	1142601	PrimaryExpression	""""""		1142468	1					
ANR	1142602	ExpressionStatement	"unparser . Unparse ( adbuffer , partialAd )"	199:2:5768:5805	1142468	14	True				
ANR	1142603	CallExpression	"unparser . Unparse ( adbuffer , partialAd )"		1142468	0					
ANR	1142604	Callee	unparser . Unparse		1142468	0					
ANR	1142605	MemberAccess	unparser . Unparse		1142468	0					
ANR	1142606	Identifier	unparser		1142468	0					
ANR	1142607	Identifier	Unparse		1142468	1					
ANR	1142608	ArgumentList	adbuffer		1142468	1					
ANR	1142609	Argument	adbuffer		1142468	0					
ANR	1142610	Identifier	adbuffer		1142468	0					
ANR	1142611	Argument	partialAd		1142468	1					
ANR	1142612	Identifier	partialAd		1142468	0					
ANR	1142613	IdentifierDeclStatement	"std :: string modify_s = ""[ Updates  = "" ;"	201:2:5810:5847	1142468	15	True				
ANR	1142614	IdentifierDecl	"modify_s = ""[ Updates  = """		1142468	0					
ANR	1142615	IdentifierDeclType	std :: string		1142468	0					
ANR	1142616	Identifier	modify_s		1142468	1					
ANR	1142617	AssignmentExpression	"modify_s = ""[ Updates  = """		1142468	2		=			
ANR	1142618	Identifier	modify_s		1142468	0					
ANR	1142619	PrimaryExpression	"""[ Updates  = """		1142468	1					
ANR	1142620	ExpressionStatement	modify_s += adbuffer	202:2:5851:5871	1142468	16	True				
ANR	1142621	AssignmentExpression	modify_s += adbuffer		1142468	0		+=			
ANR	1142622	Identifier	modify_s		1142468	0					
ANR	1142623	Identifier	adbuffer		1142468	1					
ANR	1142624	ExpressionStatement	"modify_s += "" ]"""	203:2:5875:5891	1142468	17	True				
ANR	1142625	AssignmentExpression	"modify_s += "" ]"""		1142468	0		+=			
ANR	1142626	Identifier	modify_s		1142468	0					
ANR	1142627	PrimaryExpression	""" ]"""		1142468	1					
ANR	1142628	IdentifierDeclStatement	"classad :: ClassAd * tmpad = parser . ParseClassAd ( modify_s , true ) ;"	205:2:5898:5959	1142468	18	True				
ANR	1142629	IdentifierDecl	"* tmpad = parser . ParseClassAd ( modify_s , true )"		1142468	0					
ANR	1142630	IdentifierDeclType	classad :: ClassAd *		1142468	0					
ANR	1142631	Identifier	tmpad		1142468	1					
ANR	1142632	AssignmentExpression	"* tmpad = parser . ParseClassAd ( modify_s , true )"		1142468	2		=			
ANR	1142633	Identifier	tmpad		1142468	0					
ANR	1142634	CallExpression	"parser . ParseClassAd ( modify_s , true )"		1142468	1					
ANR	1142635	Callee	parser . ParseClassAd		1142468	0					
ANR	1142636	MemberAccess	parser . ParseClassAd		1142468	0					
ANR	1142637	Identifier	parser		1142468	0					
ANR	1142638	Identifier	ParseClassAd		1142468	1					
ANR	1142639	ArgumentList	modify_s		1142468	1					
ANR	1142640	Argument	modify_s		1142468	0					
ANR	1142641	Identifier	modify_s		1142468	0					
ANR	1142642	Argument	true		1142468	1					
ANR	1142643	Identifier	true		1142468	0					
ANR	1142644	IfStatement	if ( tmpad == NULL )		1142468	19					
ANR	1142645	Condition	tmpad == NULL	206:6:5967:5979	1142468	0	True				
ANR	1142646	EqualityExpression	tmpad == NULL		1142468	0		==			
ANR	1142647	Identifier	tmpad		1142468	0					
ANR	1142648	Identifier	NULL		1142468	1					
ANR	1142649	CompoundStatement		37:21:967:967	1142468	1					
ANR	1142650	Statement	delete	207:3:5987:5992	1142468	0	True				
ANR	1142651	ExpressionStatement	partialAd	207:10:5994:6003	1142468	1	True				
ANR	1142652	Identifier	partialAd		1142468	0					
ANR	1142653	ExpressionStatement	"dprintf ( D_ALWAYS , ""ParseClassAd modify %s failed! dap_id:%s\\n"" , partial_s . c_str ( ) , dap_id )"	208:3:6008:6101	1142468	2	True				
ANR	1142654	CallExpression	"dprintf ( D_ALWAYS , ""ParseClassAd modify %s failed! dap_id:%s\\n"" , partial_s . c_str ( ) , dap_id )"		1142468	0					
ANR	1142655	Callee	dprintf		1142468	0					
ANR	1142656	Identifier	dprintf		1142468	0					
ANR	1142657	ArgumentList	D_ALWAYS		1142468	1					
ANR	1142658	Argument	D_ALWAYS		1142468	0					
ANR	1142659	Identifier	D_ALWAYS		1142468	0					
ANR	1142660	Argument	"""ParseClassAd modify %s failed! dap_id:%s\\n"""		1142468	1					
ANR	1142661	PrimaryExpression	"""ParseClassAd modify %s failed! dap_id:%s\\n"""		1142468	0					
ANR	1142662	Argument	partial_s . c_str ( )		1142468	2					
ANR	1142663	CallExpression	partial_s . c_str ( )		1142468	0					
ANR	1142664	Callee	partial_s . c_str		1142468	0					
ANR	1142665	MemberAccess	partial_s . c_str		1142468	0					
ANR	1142666	Identifier	partial_s		1142468	0					
ANR	1142667	Identifier	c_str		1142468	1					
ANR	1142668	ArgumentList			1142468	1					
ANR	1142669	Argument	dap_id		1142468	3					
ANR	1142670	Identifier	dap_id		1142468	0					
ANR	1142671	ReturnStatement	return ;	210:3:6106:6112	1142468	3	True				
ANR	1142672	ExpressionStatement	"unparser . Unparse ( adbuffer , tmpad )"	213:2:6121:6154	1142468	20	True				
ANR	1142673	CallExpression	"unparser . Unparse ( adbuffer , tmpad )"		1142468	0					
ANR	1142674	Callee	unparser . Unparse		1142468	0					
ANR	1142675	MemberAccess	unparser . Unparse		1142468	0					
ANR	1142676	Identifier	unparser		1142468	0					
ANR	1142677	Identifier	Unparse		1142468	1					
ANR	1142678	ArgumentList	adbuffer		1142468	1					
ANR	1142679	Argument	adbuffer		1142468	0					
ANR	1142680	Identifier	adbuffer		1142468	0					
ANR	1142681	Argument	tmpad		1142468	1					
ANR	1142682	Identifier	tmpad		1142468	0					
ANR	1142683	IfStatement	"if ( ! dapcollection -> ModifyClassAd ( key , tmpad ) )"		1142468	21					
ANR	1142684	Condition	"! dapcollection -> ModifyClassAd ( key , tmpad )"	216:6:6168:6208	1142468	0	True				
ANR	1142685	UnaryOperationExpression	"! dapcollection -> ModifyClassAd ( key , tmpad )"		1142468	0					
ANR	1142686	UnaryOperator	!		1142468	0					
ANR	1142687	CallExpression	"dapcollection -> ModifyClassAd ( key , tmpad )"		1142468	1					
ANR	1142688	Callee	dapcollection -> ModifyClassAd		1142468	0					
ANR	1142689	PtrMemberAccess	dapcollection -> ModifyClassAd		1142468	0					
ANR	1142690	Identifier	dapcollection		1142468	0					
ANR	1142691	Identifier	ModifyClassAd		1142468	1					
ANR	1142692	ArgumentList	key		1142468	1					
ANR	1142693	Argument	key		1142468	0					
ANR	1142694	Identifier	key		1142468	0					
ANR	1142695	Argument	tmpad		1142468	1					
ANR	1142696	Identifier	tmpad		1142468	0					
ANR	1142697	CompoundStatement		47:48:1195:1195	1142468	1					
ANR	1142698	ExpressionStatement	"dprintf ( D_ALWAYS , ""ModifyClassAd failed! dap_id:%s\\n"" , dap_id )"	217:4:6243:6305	1142468	0	True				
ANR	1142699	CallExpression	"dprintf ( D_ALWAYS , ""ModifyClassAd failed! dap_id:%s\\n"" , dap_id )"		1142468	0					
ANR	1142700	Callee	dprintf		1142468	0					
ANR	1142701	Identifier	dprintf		1142468	0					
ANR	1142702	ArgumentList	D_ALWAYS		1142468	1					
ANR	1142703	Argument	D_ALWAYS		1142468	0					
ANR	1142704	Identifier	D_ALWAYS		1142468	0					
ANR	1142705	Argument	"""ModifyClassAd failed! dap_id:%s\\n"""		1142468	1					
ANR	1142706	PrimaryExpression	"""ModifyClassAd failed! dap_id:%s\\n"""		1142468	0					
ANR	1142707	Argument	dap_id		1142468	2					
ANR	1142708	Identifier	dap_id		1142468	0					
ANR	1142709	Statement	delete	220:2:6314:6319	1142468	22	True				
ANR	1142710	ExpressionStatement	partialAd	220:9:6321:6330	1142468	23	True				
ANR	1142711	Identifier	partialAd		1142468	0					
ANR	1142712	ReturnStatement	return ;	222:2:6384:6390	1142468	24	True				
ANR	1142713	ReturnType	void		1142468	1					
ANR	1142714	Identifier	write_collection_log		1142468	2					
ANR	1142715	ParameterList	"classad :: ClassAdCollection * dapcollection , const char * dap_id , const char * update"		1142468	3					
ANR	1142716	Parameter	classad :: ClassAdCollection * dapcollection	168:26:4925:4965	1142468	0	True				
ANR	1142717	ParameterType	classad :: ClassAdCollection *		1142468	0					
ANR	1142718	Identifier	dapcollection		1142468	1					
ANR	1142719	Parameter	const char * dap_id	168:69:4968:4985	1142468	1	True				
ANR	1142720	ParameterType	const char *		1142468	0					
ANR	1142721	Identifier	dap_id		1142468	1					
ANR	1142722	Parameter	const char * update	169:5:4994:5011	1142468	2	True				
ANR	1142723	ParameterType	const char *		1142468	0					
ANR	1142724	Identifier	update		1142468	1					
ANR	1142725	CFGEntryNode	ENTRY		1142468		True				
ANR	1142726	CFGExitNode	EXIT		1142468		True				
ANR	1142727	Symbol	* dapcollection		1142468						
ANR	1142728	Symbol	NULL		1142468						
ANR	1142729	Symbol	partial_s		1142468						
ANR	1142730	Symbol	partialAd -> Insert		1142468						
ANR	1142731	Symbol	dap_id		1142468						
ANR	1142732	Symbol	D_ALWAYS		1142468						
ANR	1142733	Symbol	false		1142468						
ANR	1142734	Symbol	update		1142468						
ANR	1142735	Symbol	partial_s . c_str		1142468						
ANR	1142736	Symbol	* partialAd		1142468						
ANR	1142737	Symbol	parser . ParseClassAd		1142468						
ANR	1142738	Symbol	tmpad		1142468						
ANR	1142739	Symbol	dapcollection		1142468						
ANR	1142740	Symbol	parser		1142468						
ANR	1142741	Symbol	partialAd		1142468						
ANR	1142742	Symbol	true		1142468						
ANR	1142743	Symbol	unparser		1142468						
ANR	1142744	Symbol	classad :: Literal :: MakeAbsTime		1142468						
ANR	1142745	Symbol	key		1142468						
ANR	1142746	Symbol	modify_s		1142468						
ANR	1142747	Symbol	dapcollection -> ModifyClassAd		1142468						
ANR	1142748	Symbol	status		1142468						
ANR	1142749	Symbol	adbuffer		1142468						
ANR	1142750	Function	write_xml_log	227:0:6549:7567							
ANR	1142751	FunctionDef	"write_xml_log (const char * logfilename , classad :: ClassAd * classad , const char * status)"		1142750	0					
ANR	1142752	CompoundStatement		228:0:6640:7567	1142750	0					
ANR	1142753	IdentifierDeclStatement	classad :: ClassAdParser parser ;	230:2:6645:6674	1142750	0	True				
ANR	1142754	IdentifierDecl	parser		1142750	0					
ANR	1142755	IdentifierDeclType	classad :: ClassAdParser		1142750	0					
ANR	1142756	Identifier	parser		1142750	1					
ANR	1142757	IdentifierDeclStatement	classad :: ExprTree * expr = NULL ;	231:2:6678:6708	1142750	1	True				
ANR	1142758	IdentifierDecl	* expr = NULL		1142750	0					
ANR	1142759	IdentifierDeclType	classad :: ExprTree *		1142750	0					
ANR	1142760	Identifier	expr		1142750	1					
ANR	1142761	AssignmentExpression	* expr = NULL		1142750	2		=			
ANR	1142762	Identifier	NULL		1142750	0					
ANR	1142763	Identifier	NULL		1142750	1					
ANR	1142764	IdentifierDeclStatement	classad :: ClassAdXMLUnParser xmlunparser ;	232:2:6712:6752	1142750	2	True				
ANR	1142765	IdentifierDecl	xmlunparser		1142750	0					
ANR	1142766	IdentifierDeclType	classad :: ClassAdXMLUnParser		1142750	0					
ANR	1142767	Identifier	xmlunparser		1142750	1					
ANR	1142768	IdentifierDeclStatement	"std :: string adbuffer = """" ;"	233:2:6756:6781	1142750	3	True				
ANR	1142769	IdentifierDecl	"adbuffer = """""		1142750	0					
ANR	1142770	IdentifierDeclType	std :: string		1142750	0					
ANR	1142771	Identifier	adbuffer		1142750	1					
ANR	1142772	AssignmentExpression	"adbuffer = """""		1142750	2		=			
ANR	1142773	Identifier	adbuffer		1142750	0					
ANR	1142774	PrimaryExpression	""""""		1142750	1					
ANR	1142775	IdentifierDeclStatement	FILE * flog ;	234:2:6785:6795	1142750	4	True				
ANR	1142776	IdentifierDecl	* flog		1142750	0					
ANR	1142777	IdentifierDeclType	FILE *		1142750	0					
ANR	1142778	Identifier	flog		1142750	1					
ANR	1142779	ExpressionStatement	"classad -> Insert ( ""timestamp"" , classad :: Literal :: MakeAbsTime ( ) )"	237:2:6833:6893	1142750	5	True				
ANR	1142780	CallExpression	"classad -> Insert ( ""timestamp"" , classad :: Literal :: MakeAbsTime ( ) )"		1142750	0					
ANR	1142781	Callee	classad -> Insert		1142750	0					
ANR	1142782	PtrMemberAccess	classad -> Insert		1142750	0					
ANR	1142783	Identifier	classad		1142750	0					
ANR	1142784	Identifier	Insert		1142750	1					
ANR	1142785	ArgumentList	"""timestamp"""		1142750	1					
ANR	1142786	Argument	"""timestamp"""		1142750	0					
ANR	1142787	PrimaryExpression	"""timestamp"""		1142750	0					
ANR	1142788	Argument	classad :: Literal :: MakeAbsTime ( )		1142750	1					
ANR	1142789	CallExpression	classad :: Literal :: MakeAbsTime ( )		1142750	0					
ANR	1142790	Callee	classad :: Literal :: MakeAbsTime		1142750	0					
ANR	1142791	Identifier	classad :: Literal :: MakeAbsTime		1142750	0					
ANR	1142792	ArgumentList			1142750	1					
ANR	1142793	ExpressionStatement	"classad -> Delete ( ""status"" )"	240:2:6916:6941	1142750	6	True				
ANR	1142794	CallExpression	"classad -> Delete ( ""status"" )"		1142750	0					
ANR	1142795	Callee	classad -> Delete		1142750	0					
ANR	1142796	PtrMemberAccess	classad -> Delete		1142750	0					
ANR	1142797	Identifier	classad		1142750	0					
ANR	1142798	Identifier	Delete		1142750	1					
ANR	1142799	ArgumentList	"""status"""		1142750	1					
ANR	1142800	Argument	"""status"""		1142750	0					
ANR	1142801	PrimaryExpression	"""status"""		1142750	0					
ANR	1142802	IfStatement	"if ( ! parser . ParseExpression ( status , expr ) )"		1142750	7					
ANR	1142803	Condition	"! parser . ParseExpression ( status , expr )"	241:7:6950:6986	1142750	0	True				
ANR	1142804	UnaryOperationExpression	"! parser . ParseExpression ( status , expr )"		1142750	0					
ANR	1142805	UnaryOperator	!		1142750	0					
ANR	1142806	CallExpression	"parser . ParseExpression ( status , expr )"		1142750	1					
ANR	1142807	Callee	parser . ParseExpression		1142750	0					
ANR	1142808	MemberAccess	parser . ParseExpression		1142750	0					
ANR	1142809	Identifier	parser		1142750	0					
ANR	1142810	Identifier	ParseExpression		1142750	1					
ANR	1142811	ArgumentList	status		1142750	1					
ANR	1142812	Argument	status		1142750	0					
ANR	1142813	Identifier	status		1142750	0					
ANR	1142814	Argument	expr		1142750	1					
ANR	1142815	Identifier	expr		1142750	0					
ANR	1142816	ExpressionStatement	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"	242:4:6994:7027	1142750	1	True				
ANR	1142817	CallExpression	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"		1142750	0					
ANR	1142818	Callee	dprintf		1142750	0					
ANR	1142819	Identifier	dprintf		1142750	0					
ANR	1142820	ArgumentList	D_ALWAYS		1142750	1					
ANR	1142821	Argument	D_ALWAYS		1142750	0					
ANR	1142822	Identifier	D_ALWAYS		1142750	0					
ANR	1142823	Argument	"""Parse error\\n"""		1142750	1					
ANR	1142824	PrimaryExpression	"""Parse error\\n"""		1142750	0					
ANR	1142825	ExpressionStatement	"classad -> Insert ( ""status"" , expr )"	243:2:7031:7062	1142750	8	True				
ANR	1142826	CallExpression	"classad -> Insert ( ""status"" , expr )"		1142750	0					
ANR	1142827	Callee	classad -> Insert		1142750	0					
ANR	1142828	PtrMemberAccess	classad -> Insert		1142750	0					
ANR	1142829	Identifier	classad		1142750	0					
ANR	1142830	Identifier	Insert		1142750	1					
ANR	1142831	ArgumentList	"""status"""		1142750	1					
ANR	1142832	Argument	"""status"""		1142750	0					
ANR	1142833	PrimaryExpression	"""status"""		1142750	0					
ANR	1142834	Argument	expr		1142750	1					
ANR	1142835	Identifier	expr		1142750	0					
ANR	1142836	IfStatement	"if ( ! strcmp ( status , ""\\""processing_request\\"""" ) || ! strcmp ( status , ""\\""request_rescheduled\\"""" ) )"		1142750	9					
ANR	1142837	Condition	"! strcmp ( status , ""\\""processing_request\\"""" ) || ! strcmp ( status , ""\\""request_rescheduled\\"""" )"	245:6:7071:7164	1142750	0	True				
ANR	1142838	OrExpression	"! strcmp ( status , ""\\""processing_request\\"""" ) || ! strcmp ( status , ""\\""request_rescheduled\\"""" )"		1142750	0		||			
ANR	1142839	UnaryOperationExpression	"! strcmp ( status , ""\\""processing_request\\"""" )"		1142750	0					
ANR	1142840	UnaryOperator	!		1142750	0					
ANR	1142841	CallExpression	"strcmp ( status , ""\\""processing_request\\"""" )"		1142750	1					
ANR	1142842	Callee	strcmp		1142750	0					
ANR	1142843	Identifier	strcmp		1142750	0					
ANR	1142844	ArgumentList	status		1142750	1					
ANR	1142845	Argument	status		1142750	0					
ANR	1142846	Identifier	status		1142750	0					
ANR	1142847	Argument	"""\\""processing_request\\"""""		1142750	1					
ANR	1142848	PrimaryExpression	"""\\""processing_request\\"""""		1142750	0					
ANR	1142849	UnaryOperationExpression	"! strcmp ( status , ""\\""request_rescheduled\\"""" )"		1142750	1					
ANR	1142850	UnaryOperator	!		1142750	0					
ANR	1142851	CallExpression	"strcmp ( status , ""\\""request_rescheduled\\"""" )"		1142750	1					
ANR	1142852	Callee	strcmp		1142750	0					
ANR	1142853	Identifier	strcmp		1142750	0					
ANR	1142854	ArgumentList	status		1142750	1					
ANR	1142855	Argument	status		1142750	0					
ANR	1142856	Identifier	status		1142750	0					
ANR	1142857	Argument	"""\\""request_rescheduled\\"""""		1142750	1					
ANR	1142858	PrimaryExpression	"""\\""request_rescheduled\\"""""		1142750	0					
ANR	1142859	CompoundStatement		19:49:525:525	1142750	1					
ANR	1142860	ExpressionStatement	"classad -> Delete ( ""error_code"" )"	247:4:7172:7201	1142750	0	True				
ANR	1142861	CallExpression	"classad -> Delete ( ""error_code"" )"		1142750	0					
ANR	1142862	Callee	classad -> Delete		1142750	0					
ANR	1142863	PtrMemberAccess	classad -> Delete		1142750	0					
ANR	1142864	Identifier	classad		1142750	0					
ANR	1142865	Identifier	Delete		1142750	1					
ANR	1142866	ArgumentList	"""error_code"""		1142750	1					
ANR	1142867	Argument	"""error_code"""		1142750	0					
ANR	1142868	PrimaryExpression	"""error_code"""		1142750	0					
ANR	1142869	ExpressionStatement	xmlunparser . SetCompactSpacing ( false )	251:2:7239:7275	1142750	10	True				
ANR	1142870	CallExpression	xmlunparser . SetCompactSpacing ( false )		1142750	0					
ANR	1142871	Callee	xmlunparser . SetCompactSpacing		1142750	0					
ANR	1142872	MemberAccess	xmlunparser . SetCompactSpacing		1142750	0					
ANR	1142873	Identifier	xmlunparser		1142750	0					
ANR	1142874	Identifier	SetCompactSpacing		1142750	1					
ANR	1142875	ArgumentList	false		1142750	1					
ANR	1142876	Argument	false		1142750	0					
ANR	1142877	Identifier	false		1142750	0					
ANR	1142878	ExpressionStatement	"xmlunparser . Unparse ( adbuffer , classad )"	252:2:7279:7317	1142750	11	True				
ANR	1142879	CallExpression	"xmlunparser . Unparse ( adbuffer , classad )"		1142750	0					
ANR	1142880	Callee	xmlunparser . Unparse		1142750	0					
ANR	1142881	MemberAccess	xmlunparser . Unparse		1142750	0					
ANR	1142882	Identifier	xmlunparser		1142750	0					
ANR	1142883	Identifier	Unparse		1142750	1					
ANR	1142884	ArgumentList	adbuffer		1142750	1					
ANR	1142885	Argument	adbuffer		1142750	0					
ANR	1142886	Identifier	adbuffer		1142750	0					
ANR	1142887	Argument	classad		1142750	1					
ANR	1142888	Identifier	classad		1142750	0					
ANR	1142889	IfStatement	"if ( ( flog = safe_fopen_wrapper ( logfilename , ""a+"" ) ) == NULL )"		1142750	12					
ANR	1142890	Condition	"( flog = safe_fopen_wrapper ( logfilename , ""a+"" ) ) == NULL"	255:6:7366:7418	1142750	0	True				
ANR	1142891	EqualityExpression	"( flog = safe_fopen_wrapper ( logfilename , ""a+"" ) ) == NULL"		1142750	0		==			
ANR	1142892	AssignmentExpression	"flog = safe_fopen_wrapper ( logfilename , ""a+"" )"		1142750	0		=			
ANR	1142893	Identifier	flog		1142750	0					
ANR	1142894	CallExpression	"safe_fopen_wrapper ( logfilename , ""a+"" )"		1142750	1					
ANR	1142895	Callee	safe_fopen_wrapper		1142750	0					
ANR	1142896	Identifier	safe_fopen_wrapper		1142750	0					
ANR	1142897	ArgumentList	logfilename		1142750	1					
ANR	1142898	Argument	logfilename		1142750	0					
ANR	1142899	Identifier	logfilename		1142750	0					
ANR	1142900	Argument	"""a+"""		1142750	1					
ANR	1142901	PrimaryExpression	"""a+"""		1142750	0					
ANR	1142902	Identifier	NULL		1142750	1					
ANR	1142903	CompoundStatement		28:60:779:779	1142750	1					
ANR	1142904	ExpressionStatement	"dprintf ( D_ALWAYS , ""cannot open logfile :%s...\\n"" , logfilename )"	256:4:7426:7492	1142750	0	True				
ANR	1142905	CallExpression	"dprintf ( D_ALWAYS , ""cannot open logfile :%s...\\n"" , logfilename )"		1142750	0					
ANR	1142906	Callee	dprintf		1142750	0					
ANR	1142907	Identifier	dprintf		1142750	0					
ANR	1142908	ArgumentList	D_ALWAYS		1142750	1					
ANR	1142909	Argument	D_ALWAYS		1142750	0					
ANR	1142910	Identifier	D_ALWAYS		1142750	0					
ANR	1142911	Argument	"""cannot open logfile :%s...\\n"""		1142750	1					
ANR	1142912	PrimaryExpression	"""cannot open logfile :%s...\\n"""		1142750	0					
ANR	1142913	Argument	logfilename		1142750	2					
ANR	1142914	Identifier	logfilename		1142750	0					
ANR	1142915	ExpressionStatement	exit ( 1 )	258:4:7498:7505	1142750	1	True				
ANR	1142916	CallExpression	exit ( 1 )		1142750	0					
ANR	1142917	Callee	exit		1142750	0					
ANR	1142918	Identifier	exit		1142750	0					
ANR	1142919	ArgumentList	1		1142750	1					
ANR	1142920	Argument	1		1142750	0					
ANR	1142921	PrimaryExpression	1		1142750	0					
ANR	1142922	ExpressionStatement	"fprintf ( flog , ""%s"" , adbuffer . c_str ( ) )"	260:2:7513:7549	1142750	13	True				
ANR	1142923	CallExpression	"fprintf ( flog , ""%s"" , adbuffer . c_str ( ) )"		1142750	0					
ANR	1142924	Callee	fprintf		1142750	0					
ANR	1142925	Identifier	fprintf		1142750	0					
ANR	1142926	ArgumentList	flog		1142750	1					
ANR	1142927	Argument	flog		1142750	0					
ANR	1142928	Identifier	flog		1142750	0					
ANR	1142929	Argument	"""%s"""		1142750	1					
ANR	1142930	PrimaryExpression	"""%s"""		1142750	0					
ANR	1142931	Argument	adbuffer . c_str ( )		1142750	2					
ANR	1142932	CallExpression	adbuffer . c_str ( )		1142750	0					
ANR	1142933	Callee	adbuffer . c_str		1142750	0					
ANR	1142934	MemberAccess	adbuffer . c_str		1142750	0					
ANR	1142935	Identifier	adbuffer		1142750	0					
ANR	1142936	Identifier	c_str		1142750	1					
ANR	1142937	ArgumentList			1142750	1					
ANR	1142938	ExpressionStatement	fclose ( flog )	261:2:7553:7565	1142750	14	True				
ANR	1142939	CallExpression	fclose ( flog )		1142750	0					
ANR	1142940	Callee	fclose		1142750	0					
ANR	1142941	Identifier	fclose		1142750	0					
ANR	1142942	ArgumentList	flog		1142750	1					
ANR	1142943	Argument	flog		1142750	0					
ANR	1142944	Identifier	flog		1142750	0					
ANR	1142945	ReturnType	void		1142750	1					
ANR	1142946	Identifier	write_xml_log		1142750	2					
ANR	1142947	ParameterList	"const char * logfilename , classad :: ClassAd * classad , const char * status"		1142750	3					
ANR	1142948	Parameter	const char * logfilename	227:19:6568:6590	1142750	0	True				
ANR	1142949	ParameterType	const char *		1142750	0					
ANR	1142950	Identifier	logfilename		1142750	1					
ANR	1142951	Parameter	classad :: ClassAd * classad	227:44:6593:6617	1142750	1	True				
ANR	1142952	ParameterType	classad :: ClassAd *		1142750	0					
ANR	1142953	Identifier	classad		1142750	1					
ANR	1142954	Parameter	const char * status	227:71:6620:6637	1142750	2	True				
ANR	1142955	ParameterType	const char *		1142750	0					
ANR	1142956	Identifier	status		1142750	1					
ANR	1142957	CFGEntryNode	ENTRY		1142750		True				
ANR	1142958	CFGExitNode	EXIT		1142750		True				
ANR	1142959	Symbol	strcmp		1142750						
ANR	1142960	Symbol	NULL		1142750						
ANR	1142961	Symbol	parser . ParseExpression		1142750						
ANR	1142962	Symbol	safe_fopen_wrapper		1142750						
ANR	1142963	Symbol	D_ALWAYS		1142750						
ANR	1142964	Symbol	false		1142750						
ANR	1142965	Symbol	flog		1142750						
ANR	1142966	Symbol	parser		1142750						
ANR	1142967	Symbol	xmlunparser		1142750						
ANR	1142968	Symbol	classad		1142750						
ANR	1142969	Symbol	expr		1142750						
ANR	1142970	Symbol	logfilename		1142750						
ANR	1142971	Symbol	adbuffer . c_str		1142750						
ANR	1142972	Symbol	classad :: Literal :: MakeAbsTime		1142750						
ANR	1142973	Symbol	status		1142750						
ANR	1142974	Symbol	adbuffer		1142750						
ANR	1142975	Function	send_log_to_client_agent	265:0:7647:9226							
ANR	1142976	FunctionDef	send_log_to_client_agent (const char * log)		1142975	0					
ANR	1142977	CompoundStatement		266:0:7693:9226	1142975	0					
ANR	1142978	IdentifierDeclStatement	struct sockaddr_in cli_addr ;	267:2:7697:7724	1142975	0	True				
ANR	1142979	IdentifierDecl	cli_addr		1142975	0					
ANR	1142980	IdentifierDeclType	struct sockaddr_in		1142975	0					
ANR	1142981	Identifier	cli_addr		1142975	1					
ANR	1142982	IdentifierDeclStatement	struct hostent * client ;	268:2:7729:7751	1142975	1	True				
ANR	1142983	IdentifierDecl	* client		1142975	0					
ANR	1142984	IdentifierDeclType	struct hostent *		1142975	0					
ANR	1142985	Identifier	client		1142975	1					
ANR	1142986	IdentifierDeclStatement	int dap_conn ;	269:2:7755:7767	1142975	2	True				
ANR	1142987	IdentifierDecl	dap_conn		1142975	0					
ANR	1142988	IdentifierDeclType	int		1142975	0					
ANR	1142989	Identifier	dap_conn		1142975	1					
ANR	1142990	IfStatement	if ( ( client = condor_gethostbyname ( clientagenthost ) ) == NULL )		1142975	3					
ANR	1142991	Condition	( client = condor_gethostbyname ( clientagenthost ) ) == NULL	271:7:7777:7832	1142975	0	True				
ANR	1142992	EqualityExpression	( client = condor_gethostbyname ( clientagenthost ) ) == NULL		1142975	0		==			
ANR	1142993	AssignmentExpression	client = condor_gethostbyname ( clientagenthost )		1142975	0		=			
ANR	1142994	Identifier	client		1142975	0					
ANR	1142995	CallExpression	condor_gethostbyname ( clientagenthost )		1142975	1					
ANR	1142996	Callee	condor_gethostbyname		1142975	0					
ANR	1142997	Identifier	condor_gethostbyname		1142975	0					
ANR	1142998	ArgumentList	clientagenthost		1142975	1					
ANR	1142999	Argument	clientagenthost		1142975	0					
ANR	1143000	Identifier	clientagenthost		1142975	0					
ANR	1143001	Identifier	NULL		1142975	1					
ANR	1143002	CompoundStatement		6:65:141:141	1142975	1					
ANR	1143003	ExpressionStatement	"fprintf ( stderr , ""Cannot get address for host %s\\n"" , clientagenthost )"	272:4:7841:7908	1142975	0	True				
ANR	1143004	CallExpression	"fprintf ( stderr , ""Cannot get address for host %s\\n"" , clientagenthost )"		1142975	0					
ANR	1143005	Callee	fprintf		1142975	0					
ANR	1143006	Identifier	fprintf		1142975	0					
ANR	1143007	ArgumentList	stderr		1142975	1					
ANR	1143008	Argument	stderr		1142975	0					
ANR	1143009	Identifier	stderr		1142975	0					
ANR	1143010	Argument	"""Cannot get address for host %s\\n"""		1142975	1					
ANR	1143011	PrimaryExpression	"""Cannot get address for host %s\\n"""		1142975	0					
ANR	1143012	Argument	clientagenthost		1142975	2					
ANR	1143013	Identifier	clientagenthost		1142975	0					
ANR	1143014	ReturnStatement	return DAP_ERROR ;	273:4:7914:7930	1142975	1	True				
ANR	1143015	Identifier	DAP_ERROR		1142975	0					
ANR	1143016	IfStatement	"if ( ( dap_conn = socket ( AF_INET , SOCK_STREAM , 0 ) ) < 0 )"		1142975	4					
ANR	1143017	Condition	"( dap_conn = socket ( AF_INET , SOCK_STREAM , 0 ) ) < 0"	277:7:7962:8007	1142975	0	True				
ANR	1143018	RelationalExpression	"( dap_conn = socket ( AF_INET , SOCK_STREAM , 0 ) ) < 0"		1142975	0		<			
ANR	1143019	AssignmentExpression	"dap_conn = socket ( AF_INET , SOCK_STREAM , 0 )"		1142975	0		=			
ANR	1143020	Identifier	dap_conn		1142975	0					
ANR	1143021	CallExpression	"socket ( AF_INET , SOCK_STREAM , 0 )"		1142975	1					
ANR	1143022	Callee	socket		1142975	0					
ANR	1143023	Identifier	socket		1142975	0					
ANR	1143024	ArgumentList	AF_INET		1142975	1					
ANR	1143025	Argument	AF_INET		1142975	0					
ANR	1143026	Identifier	AF_INET		1142975	0					
ANR	1143027	Argument	SOCK_STREAM		1142975	1					
ANR	1143028	Identifier	SOCK_STREAM		1142975	0					
ANR	1143029	Argument	0		1142975	2					
ANR	1143030	PrimaryExpression	0		1142975	0					
ANR	1143031	PrimaryExpression	0		1142975	1					
ANR	1143032	CompoundStatement		12:55:316:316	1142975	1					
ANR	1143033	ExpressionStatement	"fprintf ( stderr , ""Stork server: cannot open socket to client agent!\\n"" )"	278:4:8016:8086	1142975	0	True				
ANR	1143034	CallExpression	"fprintf ( stderr , ""Stork server: cannot open socket to client agent!\\n"" )"		1142975	0					
ANR	1143035	Callee	fprintf		1142975	0					
ANR	1143036	Identifier	fprintf		1142975	0					
ANR	1143037	ArgumentList	stderr		1142975	1					
ANR	1143038	Argument	stderr		1142975	0					
ANR	1143039	Identifier	stderr		1142975	0					
ANR	1143040	Argument	"""Stork server: cannot open socket to client agent!\\n"""		1142975	1					
ANR	1143041	PrimaryExpression	"""Stork server: cannot open socket to client agent!\\n"""		1142975	0					
ANR	1143042	ReturnStatement	return DAP_ERROR ;	279:4:8092:8108	1142975	1	True				
ANR	1143043	Identifier	DAP_ERROR		1142975	0					
ANR	1143044	ExpressionStatement	"bzero ( & cli_addr , sizeof ( cli_addr ) )"	283:2:8132:8166	1142975	5	True				
ANR	1143045	CallExpression	"bzero ( & cli_addr , sizeof ( cli_addr ) )"		1142975	0					
ANR	1143046	Callee	bzero		1142975	0					
ANR	1143047	Identifier	bzero		1142975	0					
ANR	1143048	ArgumentList	& cli_addr		1142975	1					
ANR	1143049	Argument	& cli_addr		1142975	0					
ANR	1143050	UnaryOperationExpression	& cli_addr		1142975	0					
ANR	1143051	UnaryOperator	&		1142975	0					
ANR	1143052	Identifier	cli_addr		1142975	1					
ANR	1143053	Argument	sizeof ( cli_addr )		1142975	1					
ANR	1143054	SizeofExpression	sizeof ( cli_addr )		1142975	0					
ANR	1143055	Sizeof	sizeof		1142975	0					
ANR	1143056	SizeofOperand	cli_addr		1142975	1					
ANR	1143057	ExpressionStatement	cli_addr . sin_family = AF_INET	284:2:8171:8205	1142975	6	True				
ANR	1143058	AssignmentExpression	cli_addr . sin_family = AF_INET		1142975	0		=			
ANR	1143059	MemberAccess	cli_addr . sin_family		1142975	0					
ANR	1143060	Identifier	cli_addr		1142975	0					
ANR	1143061	Identifier	sin_family		1142975	1					
ANR	1143062	Identifier	AF_INET		1142975	1					
ANR	1143063	ExpressionStatement	"memcpy ( & ( cli_addr . sin_addr . s_addr ) , client -> h_addr , client -> h_length )"	285:2:8211:8280	1142975	7	True				
ANR	1143064	CallExpression	"memcpy ( & ( cli_addr . sin_addr . s_addr ) , client -> h_addr , client -> h_length )"		1142975	0					
ANR	1143065	Callee	memcpy		1142975	0					
ANR	1143066	Identifier	memcpy		1142975	0					
ANR	1143067	ArgumentList	& ( cli_addr . sin_addr . s_addr )		1142975	1					
ANR	1143068	Argument	& ( cli_addr . sin_addr . s_addr )		1142975	0					
ANR	1143069	UnaryOperationExpression	& ( cli_addr . sin_addr . s_addr )		1142975	0					
ANR	1143070	UnaryOperator	&		1142975	0					
ANR	1143071	MemberAccess	cli_addr . sin_addr . s_addr		1142975	1					
ANR	1143072	MemberAccess	cli_addr . sin_addr		1142975	0					
ANR	1143073	Identifier	cli_addr		1142975	0					
ANR	1143074	Identifier	sin_addr		1142975	1					
ANR	1143075	Identifier	s_addr		1142975	1					
ANR	1143076	Argument	client -> h_addr		1142975	1					
ANR	1143077	PtrMemberAccess	client -> h_addr		1142975	0					
ANR	1143078	Identifier	client		1142975	0					
ANR	1143079	Identifier	h_addr		1142975	1					
ANR	1143080	Argument	client -> h_length		1142975	2					
ANR	1143081	PtrMemberAccess	client -> h_length		1142975	0					
ANR	1143082	Identifier	client		1142975	0					
ANR	1143083	Identifier	h_length		1142975	1					
ANR	1143084	ExpressionStatement	cli_addr . sin_port = htons ( CLI_AGENT_LOG_TCP_PORT )	286:2:8286:8342	1142975	8	True				
ANR	1143085	AssignmentExpression	cli_addr . sin_port = htons ( CLI_AGENT_LOG_TCP_PORT )		1142975	0		=			
ANR	1143086	MemberAccess	cli_addr . sin_port		1142975	0					
ANR	1143087	Identifier	cli_addr		1142975	0					
ANR	1143088	Identifier	sin_port		1142975	1					
ANR	1143089	CallExpression	htons ( CLI_AGENT_LOG_TCP_PORT )		1142975	1					
ANR	1143090	Callee	htons		1142975	0					
ANR	1143091	Identifier	htons		1142975	0					
ANR	1143092	ArgumentList	CLI_AGENT_LOG_TCP_PORT		1142975	1					
ANR	1143093	Argument	CLI_AGENT_LOG_TCP_PORT		1142975	0					
ANR	1143094	Identifier	CLI_AGENT_LOG_TCP_PORT		1142975	0					
ANR	1143095	IfStatement	"if ( connect ( dap_conn , ( struct sockaddr * ) & cli_addr , sizeof ( cli_addr ) ) != 0 )"		1142975	9					
ANR	1143096	Condition	"connect ( dap_conn , ( struct sockaddr * ) & cli_addr , sizeof ( cli_addr ) ) != 0"	295:7:8515:8584	1142975	0	True				
ANR	1143097	EqualityExpression	"connect ( dap_conn , ( struct sockaddr * ) & cli_addr , sizeof ( cli_addr ) ) != 0"		1142975	0		!=			
ANR	1143098	CallExpression	"connect ( dap_conn , ( struct sockaddr * ) & cli_addr , sizeof ( cli_addr ) )"		1142975	0					
ANR	1143099	Callee	connect		1142975	0					
ANR	1143100	Identifier	connect		1142975	0					
ANR	1143101	ArgumentList	dap_conn		1142975	1					
ANR	1143102	Argument	dap_conn		1142975	0					
ANR	1143103	Identifier	dap_conn		1142975	0					
ANR	1143104	Argument	( struct sockaddr * ) & cli_addr		1142975	1					
ANR	1143105	CastExpression	( struct sockaddr * ) & cli_addr		1142975	0					
ANR	1143106	CastTarget	struct sockaddr *		1142975	0					
ANR	1143107	UnaryOperationExpression	& cli_addr		1142975	1					
ANR	1143108	UnaryOperator	&		1142975	0					
ANR	1143109	Identifier	cli_addr		1142975	1					
ANR	1143110	Argument	sizeof ( cli_addr )		1142975	2					
ANR	1143111	SizeofExpression	sizeof ( cli_addr )		1142975	0					
ANR	1143112	Sizeof	sizeof		1142975	0					
ANR	1143113	SizeofOperand	cli_addr		1142975	1					
ANR	1143114	PrimaryExpression	0		1142975	1					
ANR	1143115	CompoundStatement		30:78:892:892	1142975	1					
ANR	1143116	ExpressionStatement	"fprintf ( stderr , ""Stork server:cannot connect to client agent @%s!\\n"" , clientagenthost )"	296:4:8592:8678	1142975	0	True				
ANR	1143117	CallExpression	"fprintf ( stderr , ""Stork server:cannot connect to client agent @%s!\\n"" , clientagenthost )"		1142975	0					
ANR	1143118	Callee	fprintf		1142975	0					
ANR	1143119	Identifier	fprintf		1142975	0					
ANR	1143120	ArgumentList	stderr		1142975	1					
ANR	1143121	Argument	stderr		1142975	0					
ANR	1143122	Identifier	stderr		1142975	0					
ANR	1143123	Argument	"""Stork server:cannot connect to client agent @%s!\\n"""		1142975	1					
ANR	1143124	PrimaryExpression	"""Stork server:cannot connect to client agent @%s!\\n"""		1142975	0					
ANR	1143125	Argument	clientagenthost		1142975	2					
ANR	1143126	Identifier	clientagenthost		1142975	0					
ANR	1143127	ReturnStatement	return DAP_ERROR ;	297:4:8684:8700	1142975	1	True				
ANR	1143128	Identifier	DAP_ERROR		1142975	0					
ANR	1143129	IfStatement	"if ( send ( dap_conn , log , strlen ( log ) , 0 ) == - 1 )"		1142975	10					
ANR	1143130	Condition	"send ( dap_conn , log , strlen ( log ) , 0 ) == - 1"	307:7:8879:8920	1142975	0	True				
ANR	1143131	EqualityExpression	"send ( dap_conn , log , strlen ( log ) , 0 ) == - 1"		1142975	0		==			
ANR	1143132	CallExpression	"send ( dap_conn , log , strlen ( log ) , 0 )"		1142975	0					
ANR	1143133	Callee	send		1142975	0					
ANR	1143134	Identifier	send		1142975	0					
ANR	1143135	ArgumentList	dap_conn		1142975	1					
ANR	1143136	Argument	dap_conn		1142975	0					
ANR	1143137	Identifier	dap_conn		1142975	0					
ANR	1143138	Argument	log		1142975	1					
ANR	1143139	Identifier	log		1142975	0					
ANR	1143140	Argument	strlen ( log )		1142975	2					
ANR	1143141	CallExpression	strlen ( log )		1142975	0					
ANR	1143142	Callee	strlen		1142975	0					
ANR	1143143	Identifier	strlen		1142975	0					
ANR	1143144	ArgumentList	log		1142975	1					
ANR	1143145	Argument	log		1142975	0					
ANR	1143146	Identifier	log		1142975	0					
ANR	1143147	Argument	0		1142975	3					
ANR	1143148	PrimaryExpression	0		1142975	0					
ANR	1143149	UnaryOperationExpression	- 1		1142975	1					
ANR	1143150	UnaryOperator	-		1142975	0					
ANR	1143151	PrimaryExpression	1		1142975	1					
ANR	1143152	CompoundStatement		42:50:1228:1228	1142975	1					
ANR	1143153	ExpressionStatement	"fprintf ( stderr , ""Stork server: send error!\\n"" )"	308:4:8928:8974	1142975	0	True				
ANR	1143154	CallExpression	"fprintf ( stderr , ""Stork server: send error!\\n"" )"		1142975	0					
ANR	1143155	Callee	fprintf		1142975	0					
ANR	1143156	Identifier	fprintf		1142975	0					
ANR	1143157	ArgumentList	stderr		1142975	1					
ANR	1143158	Argument	stderr		1142975	0					
ANR	1143159	Identifier	stderr		1142975	0					
ANR	1143160	Argument	"""Stork server: send error!\\n"""		1142975	1					
ANR	1143161	PrimaryExpression	"""Stork server: send error!\\n"""		1142975	0					
ANR	1143162	ReturnStatement	return DAP_ERROR ;	309:4:8980:8996	1142975	1	True				
ANR	1143163	Identifier	DAP_ERROR		1142975	0					
ANR	1143164	IfStatement	if ( close ( dap_conn ) != 0 )		1142975	11					
ANR	1143165	Condition	close ( dap_conn ) != 0	313:7:9029:9048	1142975	0	True				
ANR	1143166	EqualityExpression	close ( dap_conn ) != 0		1142975	0		!=			
ANR	1143167	CallExpression	close ( dap_conn )		1142975	0					
ANR	1143168	Callee	close		1142975	0					
ANR	1143169	Identifier	close		1142975	0					
ANR	1143170	ArgumentList	dap_conn		1142975	1					
ANR	1143171	Argument	dap_conn		1142975	0					
ANR	1143172	Identifier	dap_conn		1142975	0					
ANR	1143173	PrimaryExpression	0		1142975	1					
ANR	1143174	CompoundStatement		48:28:1356:1356	1142975	1					
ANR	1143175	ExpressionStatement	"fprintf ( stderr , ""Error in closing the connection!\\n"" )"	314:4:9056:9109	1142975	0	True				
ANR	1143176	CallExpression	"fprintf ( stderr , ""Error in closing the connection!\\n"" )"		1142975	0					
ANR	1143177	Callee	fprintf		1142975	0					
ANR	1143178	Identifier	fprintf		1142975	0					
ANR	1143179	ArgumentList	stderr		1142975	1					
ANR	1143180	Argument	stderr		1142975	0					
ANR	1143181	Identifier	stderr		1142975	0					
ANR	1143182	Argument	"""Error in closing the connection!\\n"""		1142975	1					
ANR	1143183	PrimaryExpression	"""Error in closing the connection!\\n"""		1142975	0					
ANR	1143184	ReturnStatement	return DAP_ERROR ;	315:4:9115:9131	1142975	1	True				
ANR	1143185	Identifier	DAP_ERROR		1142975	0					
ANR	1143186	ReturnStatement	return DAP_SUCCESS ;	320:2:9205:9223	1142975	12	True				
ANR	1143187	Identifier	DAP_SUCCESS		1142975	0					
ANR	1143188	ReturnType	int		1142975	1					
ANR	1143189	Identifier	send_log_to_client_agent		1142975	2					
ANR	1143190	ParameterList	const char * log		1142975	3					
ANR	1143191	Parameter	const char * log	265:29:7676:7690	1142975	0	True				
ANR	1143192	ParameterType	const char *		1142975	0					
ANR	1143193	Identifier	log		1142975	1					
ANR	1143194	CFGEntryNode	ENTRY		1142975		True				
ANR	1143195	CFGExitNode	EXIT		1142975		True				
ANR	1143196	Symbol	log		1142975						
ANR	1143197	Symbol	DAP_ERROR		1142975						
ANR	1143198	Symbol	htons		1142975						
ANR	1143199	Symbol	* client		1142975						
ANR	1143200	Symbol	client -> h_length		1142975						
ANR	1143201	Symbol	cli_addr . sin_addr		1142975						
ANR	1143202	Symbol	DAP_SUCCESS		1142975						
ANR	1143203	Symbol	strlen		1142975						
ANR	1143204	Symbol	SOCK_STREAM		1142975						
ANR	1143205	Symbol	& cli_addr		1142975						
ANR	1143206	Symbol	client		1142975						
ANR	1143207	Symbol	client -> h_addr		1142975						
ANR	1143208	Symbol	close		1142975						
ANR	1143209	Symbol	connect		1142975						
ANR	1143210	Symbol	dap_conn		1142975						
ANR	1143211	Symbol	condor_gethostbyname		1142975						
ANR	1143212	Symbol	NULL		1142975						
ANR	1143213	Symbol	& cli_addr . sin_addr		1142975						
ANR	1143214	Symbol	AF_INET		1142975						
ANR	1143215	Symbol	stderr		1142975						
ANR	1143216	Symbol	CLI_AGENT_LOG_TCP_PORT		1142975						
ANR	1143217	Symbol	clientagenthost		1142975						
ANR	1143218	Symbol	cli_addr . sin_family		1142975						
ANR	1143219	Symbol	& cli_addr . sin_addr . s_addr		1142975						
ANR	1143220	Symbol	cli_addr . sin_port		1142975						
ANR	1143221	Symbol	cli_addr		1142975						
ANR	1143222	Symbol	socket		1142975						
ANR	1143223	Symbol	send		1142975						
ANR	1143224	Function	write_xml_user_log	325:0:9306:12246							
ANR	1143225	FunctionDef	"write_xml_user_log (const char * logfilename , const char * param1 , const char * value1 , const char * param2 , const char * value2 , const char * param3 , const char * value3 , const char * param4 , const char * value4 , const char * param5 , const char * value5 , const char * param6 , const char * value6 , const char * param7 , const char * value7 , const char * param8 , const char * value8 , const char * param9 , const char * value9 , const char * param10 , const char * value10)"		1143224	0					
ANR	1143226	CompoundStatement		339:0:9781:12246	1143224	0					
ANR	1143227	IfStatement	if ( ! logfilename )		1143224	0					
ANR	1143228	Condition	! logfilename	340:6:9789:9801	1143224	0	True				
ANR	1143229	UnaryOperationExpression	! logfilename		1143224	0					
ANR	1143230	UnaryOperator	!		1143224	0					
ANR	1143231	Identifier	logfilename		1143224	1					
ANR	1143232	ReturnStatement	return ;	340:22:9805:9811	1143224	1	True				
ANR	1143233	IfStatement	"if ( ! param_boolean ( ""STORK_ENABLE_DEPRECATED_USERLOG"" , false ) )"		1143224	1					
ANR	1143234	Condition	"! param_boolean ( ""STORK_ENABLE_DEPRECATED_USERLOG"" , false )"	345:6:9994:10050	1143224	0	True				
ANR	1143235	UnaryOperationExpression	"! param_boolean ( ""STORK_ENABLE_DEPRECATED_USERLOG"" , false )"		1143224	0					
ANR	1143236	UnaryOperator	!		1143224	0					
ANR	1143237	CallExpression	"param_boolean ( ""STORK_ENABLE_DEPRECATED_USERLOG"" , false )"		1143224	1					
ANR	1143238	Callee	param_boolean		1143224	0					
ANR	1143239	Identifier	param_boolean		1143224	0					
ANR	1143240	ArgumentList	"""STORK_ENABLE_DEPRECATED_USERLOG"""		1143224	1					
ANR	1143241	Argument	"""STORK_ENABLE_DEPRECATED_USERLOG"""		1143224	0					
ANR	1143242	PrimaryExpression	"""STORK_ENABLE_DEPRECATED_USERLOG"""		1143224	0					
ANR	1143243	Argument	false		1143224	1					
ANR	1143244	Identifier	false		1143224	0					
ANR	1143245	CompoundStatement		7:66:272:272	1143224	1					
ANR	1143246	ReturnStatement	return ;	346:2:10058:10064	1143224	0	True				
ANR	1143247	IdentifierDeclStatement	classad :: ClassAdParser parser ;	349:2:10072:10101	1143224	2	True				
ANR	1143248	IdentifierDecl	parser		1143224	0					
ANR	1143249	IdentifierDeclType	classad :: ClassAdParser		1143224	0					
ANR	1143250	Identifier	parser		1143224	1					
ANR	1143251	IdentifierDeclStatement	classad :: ExprTree * expr = NULL ;	350:2:10105:10135	1143224	3	True				
ANR	1143252	IdentifierDecl	* expr = NULL		1143224	0					
ANR	1143253	IdentifierDeclType	classad :: ExprTree *		1143224	0					
ANR	1143254	Identifier	expr		1143224	1					
ANR	1143255	AssignmentExpression	* expr = NULL		1143224	2		=			
ANR	1143256	Identifier	NULL		1143224	0					
ANR	1143257	Identifier	NULL		1143224	1					
ANR	1143258	IdentifierDeclStatement	classad :: ClassAdXMLUnParser xmlunparser ;	351:2:10139:10179	1143224	4	True				
ANR	1143259	IdentifierDecl	xmlunparser		1143224	0					
ANR	1143260	IdentifierDeclType	classad :: ClassAdXMLUnParser		1143224	0					
ANR	1143261	Identifier	xmlunparser		1143224	1					
ANR	1143262	IdentifierDeclStatement	"std :: string adbuffer = """" ;"	352:2:10183:10208	1143224	5	True				
ANR	1143263	IdentifierDecl	"adbuffer = """""		1143224	0					
ANR	1143264	IdentifierDeclType	std :: string		1143224	0					
ANR	1143265	Identifier	adbuffer		1143224	1					
ANR	1143266	AssignmentExpression	"adbuffer = """""		1143224	2		=			
ANR	1143267	Identifier	adbuffer		1143224	0					
ANR	1143268	PrimaryExpression	""""""		1143224	1					
ANR	1143269	IdentifierDeclStatement	FILE * flog ;	353:2:10212:10222	1143224	6	True				
ANR	1143270	IdentifierDecl	* flog		1143224	0					
ANR	1143271	IdentifierDeclType	FILE *		1143224	0					
ANR	1143272	Identifier	flog		1143224	1					
ANR	1143273	Statement	classad	357:2:10247:10253	1143224	7	True				
ANR	1143274	Statement	::	357:9:10254:10255	1143224	8	True				
ANR	1143275	Statement	ClassAd	357:11:10256:10262	1143224	9	True				
ANR	1143276	Statement	*	357:19:10264:10264	1143224	10	True				
ANR	1143277	Statement	classad	357:20:10265:10271	1143224	11	True				
ANR	1143278	Statement	=	357:28:10273:10273	1143224	12	True				
ANR	1143279	Statement	new	357:30:10275:10277	1143224	13	True				
ANR	1143280	ExpressionStatement	classad :: ClassAd	357:34:10279:10295	1143224	14	True				
ANR	1143281	Identifier	classad :: ClassAd		1143224	0					
ANR	1143282	ExpressionStatement	ASSERT ( classad )	358:2:10299:10314	1143224	15	True				
ANR	1143283	CallExpression	ASSERT ( classad )		1143224	0					
ANR	1143284	Callee	ASSERT		1143224	0					
ANR	1143285	Identifier	ASSERT		1143224	0					
ANR	1143286	ArgumentList	classad		1143224	1					
ANR	1143287	Argument	classad		1143224	0					
ANR	1143288	Identifier	classad		1143224	0					
ANR	1143289	ExpressionStatement	"classad -> Insert ( ""EventTime"" , classad :: Literal :: MakeAbsTime ( ) )"	361:2:10352:10412	1143224	16	True				
ANR	1143290	CallExpression	"classad -> Insert ( ""EventTime"" , classad :: Literal :: MakeAbsTime ( ) )"		1143224	0					
ANR	1143291	Callee	classad -> Insert		1143224	0					
ANR	1143292	PtrMemberAccess	classad -> Insert		1143224	0					
ANR	1143293	Identifier	classad		1143224	0					
ANR	1143294	Identifier	Insert		1143224	1					
ANR	1143295	ArgumentList	"""EventTime"""		1143224	1					
ANR	1143296	Argument	"""EventTime"""		1143224	0					
ANR	1143297	PrimaryExpression	"""EventTime"""		1143224	0					
ANR	1143298	Argument	classad :: Literal :: MakeAbsTime ( )		1143224	1					
ANR	1143299	CallExpression	classad :: Literal :: MakeAbsTime ( )		1143224	0					
ANR	1143300	Callee	classad :: Literal :: MakeAbsTime		1143224	0					
ANR	1143301	Identifier	classad :: Literal :: MakeAbsTime		1143224	0					
ANR	1143302	ArgumentList			1143224	1					
ANR	1143303	IfStatement	"if ( parser . ParseExpression ( value1 , expr ) )"		1143224	17					
ANR	1143304	Condition	"parser . ParseExpression ( value1 , expr )"	363:7:10422:10457	1143224	0	True				
ANR	1143305	CallExpression	"parser . ParseExpression ( value1 , expr )"		1143224	0					
ANR	1143306	Callee	parser . ParseExpression		1143224	0					
ANR	1143307	MemberAccess	parser . ParseExpression		1143224	0					
ANR	1143308	Identifier	parser		1143224	0					
ANR	1143309	Identifier	ParseExpression		1143224	1					
ANR	1143310	ArgumentList	value1		1143224	1					
ANR	1143311	Argument	value1		1143224	0					
ANR	1143312	Identifier	value1		1143224	0					
ANR	1143313	Argument	expr		1143224	1					
ANR	1143314	Identifier	expr		1143224	0					
ANR	1143315	ExpressionStatement	"classad -> Insert ( param1 , expr )"	364:4:10465:10494	1143224	1	True				
ANR	1143316	CallExpression	"classad -> Insert ( param1 , expr )"		1143224	0					
ANR	1143317	Callee	classad -> Insert		1143224	0					
ANR	1143318	PtrMemberAccess	classad -> Insert		1143224	0					
ANR	1143319	Identifier	classad		1143224	0					
ANR	1143320	Identifier	Insert		1143224	1					
ANR	1143321	ArgumentList	param1		1143224	1					
ANR	1143322	Argument	param1		1143224	0					
ANR	1143323	Identifier	param1		1143224	0					
ANR	1143324	Argument	expr		1143224	1					
ANR	1143325	Identifier	expr		1143224	0					
ANR	1143326	IfStatement	if ( ( param2 != NULL ) && ( value2 != NULL ) )		1143224	18					
ANR	1143327	Condition	( param2 != NULL ) && ( value2 != NULL )	366:7:10504:10539	1143224	0	True				
ANR	1143328	AndExpression	( param2 != NULL ) && ( value2 != NULL )		1143224	0		&&			
ANR	1143329	EqualityExpression	param2 != NULL		1143224	0		!=			
ANR	1143330	Identifier	param2		1143224	0					
ANR	1143331	Identifier	NULL		1143224	1					
ANR	1143332	EqualityExpression	value2 != NULL		1143224	1		!=			
ANR	1143333	Identifier	value2		1143224	0					
ANR	1143334	Identifier	NULL		1143224	1					
ANR	1143335	CompoundStatement		28:44:759:759	1143224	1					
ANR	1143336	IfStatement	"if ( parser . ParseExpression ( value2 , expr ) )"		1143224	0					
ANR	1143337	Condition	"parser . ParseExpression ( value2 , expr )"	367:9:10552:10587	1143224	0	True				
ANR	1143338	CallExpression	"parser . ParseExpression ( value2 , expr )"		1143224	0					
ANR	1143339	Callee	parser . ParseExpression		1143224	0					
ANR	1143340	MemberAccess	parser . ParseExpression		1143224	0					
ANR	1143341	Identifier	parser		1143224	0					
ANR	1143342	Identifier	ParseExpression		1143224	1					
ANR	1143343	ArgumentList	value2		1143224	1					
ANR	1143344	Argument	value2		1143224	0					
ANR	1143345	Identifier	value2		1143224	0					
ANR	1143346	Argument	expr		1143224	1					
ANR	1143347	Identifier	expr		1143224	0					
ANR	1143348	ExpressionStatement	"classad -> Insert ( param2 , expr )"	368:6:10597:10626	1143224	1	True				
ANR	1143349	CallExpression	"classad -> Insert ( param2 , expr )"		1143224	0					
ANR	1143350	Callee	classad -> Insert		1143224	0					
ANR	1143351	PtrMemberAccess	classad -> Insert		1143224	0					
ANR	1143352	Identifier	classad		1143224	0					
ANR	1143353	Identifier	Insert		1143224	1					
ANR	1143354	ArgumentList	param2		1143224	1					
ANR	1143355	Argument	param2		1143224	0					
ANR	1143356	Identifier	param2		1143224	0					
ANR	1143357	Argument	expr		1143224	1					
ANR	1143358	Identifier	expr		1143224	0					
ANR	1143359	IfStatement	if ( ( param3 != NULL ) && ( value3 != NULL ) )		1143224	19					
ANR	1143360	Condition	( param3 != NULL ) && ( value3 != NULL )	371:6:10639:10674	1143224	0	True				
ANR	1143361	AndExpression	( param3 != NULL ) && ( value3 != NULL )		1143224	0		&&			
ANR	1143362	EqualityExpression	param3 != NULL		1143224	0		!=			
ANR	1143363	Identifier	param3		1143224	0					
ANR	1143364	Identifier	NULL		1143224	1					
ANR	1143365	EqualityExpression	value3 != NULL		1143224	1		!=			
ANR	1143366	Identifier	value3		1143224	0					
ANR	1143367	Identifier	NULL		1143224	1					
ANR	1143368	CompoundStatement		33:43:894:894	1143224	1					
ANR	1143369	IfStatement	"if ( parser . ParseExpression ( value3 , expr ) )"		1143224	0					
ANR	1143370	Condition	"parser . ParseExpression ( value3 , expr )"	372:9:10687:10722	1143224	0	True				
ANR	1143371	CallExpression	"parser . ParseExpression ( value3 , expr )"		1143224	0					
ANR	1143372	Callee	parser . ParseExpression		1143224	0					
ANR	1143373	MemberAccess	parser . ParseExpression		1143224	0					
ANR	1143374	Identifier	parser		1143224	0					
ANR	1143375	Identifier	ParseExpression		1143224	1					
ANR	1143376	ArgumentList	value3		1143224	1					
ANR	1143377	Argument	value3		1143224	0					
ANR	1143378	Identifier	value3		1143224	0					
ANR	1143379	Argument	expr		1143224	1					
ANR	1143380	Identifier	expr		1143224	0					
ANR	1143381	ExpressionStatement	"classad -> Insert ( param3 , expr )"	373:6:10732:10761	1143224	1	True				
ANR	1143382	CallExpression	"classad -> Insert ( param3 , expr )"		1143224	0					
ANR	1143383	Callee	classad -> Insert		1143224	0					
ANR	1143384	PtrMemberAccess	classad -> Insert		1143224	0					
ANR	1143385	Identifier	classad		1143224	0					
ANR	1143386	Identifier	Insert		1143224	1					
ANR	1143387	ArgumentList	param3		1143224	1					
ANR	1143388	Argument	param3		1143224	0					
ANR	1143389	Identifier	param3		1143224	0					
ANR	1143390	Argument	expr		1143224	1					
ANR	1143391	Identifier	expr		1143224	0					
ANR	1143392	IfStatement	if ( ( param4 != NULL ) && ( value4 != NULL ) )		1143224	20					
ANR	1143393	Condition	( param4 != NULL ) && ( value4 != NULL )	376:6:10774:10809	1143224	0	True				
ANR	1143394	AndExpression	( param4 != NULL ) && ( value4 != NULL )		1143224	0		&&			
ANR	1143395	EqualityExpression	param4 != NULL		1143224	0		!=			
ANR	1143396	Identifier	param4		1143224	0					
ANR	1143397	Identifier	NULL		1143224	1					
ANR	1143398	EqualityExpression	value4 != NULL		1143224	1		!=			
ANR	1143399	Identifier	value4		1143224	0					
ANR	1143400	Identifier	NULL		1143224	1					
ANR	1143401	CompoundStatement		38:43:1029:1029	1143224	1					
ANR	1143402	IfStatement	"if ( parser . ParseExpression ( value4 , expr ) )"		1143224	0					
ANR	1143403	Condition	"parser . ParseExpression ( value4 , expr )"	377:9:10822:10857	1143224	0	True				
ANR	1143404	CallExpression	"parser . ParseExpression ( value4 , expr )"		1143224	0					
ANR	1143405	Callee	parser . ParseExpression		1143224	0					
ANR	1143406	MemberAccess	parser . ParseExpression		1143224	0					
ANR	1143407	Identifier	parser		1143224	0					
ANR	1143408	Identifier	ParseExpression		1143224	1					
ANR	1143409	ArgumentList	value4		1143224	1					
ANR	1143410	Argument	value4		1143224	0					
ANR	1143411	Identifier	value4		1143224	0					
ANR	1143412	Argument	expr		1143224	1					
ANR	1143413	Identifier	expr		1143224	0					
ANR	1143414	ExpressionStatement	"classad -> Insert ( param4 , expr )"	378:6:10867:10896	1143224	1	True				
ANR	1143415	CallExpression	"classad -> Insert ( param4 , expr )"		1143224	0					
ANR	1143416	Callee	classad -> Insert		1143224	0					
ANR	1143417	PtrMemberAccess	classad -> Insert		1143224	0					
ANR	1143418	Identifier	classad		1143224	0					
ANR	1143419	Identifier	Insert		1143224	1					
ANR	1143420	ArgumentList	param4		1143224	1					
ANR	1143421	Argument	param4		1143224	0					
ANR	1143422	Identifier	param4		1143224	0					
ANR	1143423	Argument	expr		1143224	1					
ANR	1143424	Identifier	expr		1143224	0					
ANR	1143425	IfStatement	if ( ( param5 != NULL ) && ( value5 != NULL ) )		1143224	21					
ANR	1143426	Condition	( param5 != NULL ) && ( value5 != NULL )	381:6:10909:10944	1143224	0	True				
ANR	1143427	AndExpression	( param5 != NULL ) && ( value5 != NULL )		1143224	0		&&			
ANR	1143428	EqualityExpression	param5 != NULL		1143224	0		!=			
ANR	1143429	Identifier	param5		1143224	0					
ANR	1143430	Identifier	NULL		1143224	1					
ANR	1143431	EqualityExpression	value5 != NULL		1143224	1		!=			
ANR	1143432	Identifier	value5		1143224	0					
ANR	1143433	Identifier	NULL		1143224	1					
ANR	1143434	CompoundStatement		43:43:1164:1164	1143224	1					
ANR	1143435	IfStatement	"if ( parser . ParseExpression ( value5 , expr ) )"		1143224	0					
ANR	1143436	Condition	"parser . ParseExpression ( value5 , expr )"	382:9:10957:10992	1143224	0	True				
ANR	1143437	CallExpression	"parser . ParseExpression ( value5 , expr )"		1143224	0					
ANR	1143438	Callee	parser . ParseExpression		1143224	0					
ANR	1143439	MemberAccess	parser . ParseExpression		1143224	0					
ANR	1143440	Identifier	parser		1143224	0					
ANR	1143441	Identifier	ParseExpression		1143224	1					
ANR	1143442	ArgumentList	value5		1143224	1					
ANR	1143443	Argument	value5		1143224	0					
ANR	1143444	Identifier	value5		1143224	0					
ANR	1143445	Argument	expr		1143224	1					
ANR	1143446	Identifier	expr		1143224	0					
ANR	1143447	ExpressionStatement	"classad -> Insert ( param5 , expr )"	383:6:11002:11031	1143224	1	True				
ANR	1143448	CallExpression	"classad -> Insert ( param5 , expr )"		1143224	0					
ANR	1143449	Callee	classad -> Insert		1143224	0					
ANR	1143450	PtrMemberAccess	classad -> Insert		1143224	0					
ANR	1143451	Identifier	classad		1143224	0					
ANR	1143452	Identifier	Insert		1143224	1					
ANR	1143453	ArgumentList	param5		1143224	1					
ANR	1143454	Argument	param5		1143224	0					
ANR	1143455	Identifier	param5		1143224	0					
ANR	1143456	Argument	expr		1143224	1					
ANR	1143457	Identifier	expr		1143224	0					
ANR	1143458	IfStatement	if ( ( param6 != NULL ) && ( value6 != NULL ) )		1143224	22					
ANR	1143459	Condition	( param6 != NULL ) && ( value6 != NULL )	386:6:11044:11079	1143224	0	True				
ANR	1143460	AndExpression	( param6 != NULL ) && ( value6 != NULL )		1143224	0		&&			
ANR	1143461	EqualityExpression	param6 != NULL		1143224	0		!=			
ANR	1143462	Identifier	param6		1143224	0					
ANR	1143463	Identifier	NULL		1143224	1					
ANR	1143464	EqualityExpression	value6 != NULL		1143224	1		!=			
ANR	1143465	Identifier	value6		1143224	0					
ANR	1143466	Identifier	NULL		1143224	1					
ANR	1143467	CompoundStatement		48:43:1299:1299	1143224	1					
ANR	1143468	IfStatement	"if ( parser . ParseExpression ( value6 , expr ) )"		1143224	0					
ANR	1143469	Condition	"parser . ParseExpression ( value6 , expr )"	387:9:11092:11127	1143224	0	True				
ANR	1143470	CallExpression	"parser . ParseExpression ( value6 , expr )"		1143224	0					
ANR	1143471	Callee	parser . ParseExpression		1143224	0					
ANR	1143472	MemberAccess	parser . ParseExpression		1143224	0					
ANR	1143473	Identifier	parser		1143224	0					
ANR	1143474	Identifier	ParseExpression		1143224	1					
ANR	1143475	ArgumentList	value6		1143224	1					
ANR	1143476	Argument	value6		1143224	0					
ANR	1143477	Identifier	value6		1143224	0					
ANR	1143478	Argument	expr		1143224	1					
ANR	1143479	Identifier	expr		1143224	0					
ANR	1143480	ExpressionStatement	"classad -> Insert ( param6 , expr )"	388:6:11137:11166	1143224	1	True				
ANR	1143481	CallExpression	"classad -> Insert ( param6 , expr )"		1143224	0					
ANR	1143482	Callee	classad -> Insert		1143224	0					
ANR	1143483	PtrMemberAccess	classad -> Insert		1143224	0					
ANR	1143484	Identifier	classad		1143224	0					
ANR	1143485	Identifier	Insert		1143224	1					
ANR	1143486	ArgumentList	param6		1143224	1					
ANR	1143487	Argument	param6		1143224	0					
ANR	1143488	Identifier	param6		1143224	0					
ANR	1143489	Argument	expr		1143224	1					
ANR	1143490	Identifier	expr		1143224	0					
ANR	1143491	IfStatement	if ( ( param7 != NULL ) && ( value7 != NULL ) )		1143224	23					
ANR	1143492	Condition	( param7 != NULL ) && ( value7 != NULL )	391:6:11179:11214	1143224	0	True				
ANR	1143493	AndExpression	( param7 != NULL ) && ( value7 != NULL )		1143224	0		&&			
ANR	1143494	EqualityExpression	param7 != NULL		1143224	0		!=			
ANR	1143495	Identifier	param7		1143224	0					
ANR	1143496	Identifier	NULL		1143224	1					
ANR	1143497	EqualityExpression	value7 != NULL		1143224	1		!=			
ANR	1143498	Identifier	value7		1143224	0					
ANR	1143499	Identifier	NULL		1143224	1					
ANR	1143500	CompoundStatement		53:43:1434:1434	1143224	1					
ANR	1143501	IfStatement	"if ( parser . ParseExpression ( value7 , expr ) )"		1143224	0					
ANR	1143502	Condition	"parser . ParseExpression ( value7 , expr )"	392:9:11227:11262	1143224	0	True				
ANR	1143503	CallExpression	"parser . ParseExpression ( value7 , expr )"		1143224	0					
ANR	1143504	Callee	parser . ParseExpression		1143224	0					
ANR	1143505	MemberAccess	parser . ParseExpression		1143224	0					
ANR	1143506	Identifier	parser		1143224	0					
ANR	1143507	Identifier	ParseExpression		1143224	1					
ANR	1143508	ArgumentList	value7		1143224	1					
ANR	1143509	Argument	value7		1143224	0					
ANR	1143510	Identifier	value7		1143224	0					
ANR	1143511	Argument	expr		1143224	1					
ANR	1143512	Identifier	expr		1143224	0					
ANR	1143513	ExpressionStatement	"classad -> Insert ( param7 , expr )"	393:6:11272:11301	1143224	1	True				
ANR	1143514	CallExpression	"classad -> Insert ( param7 , expr )"		1143224	0					
ANR	1143515	Callee	classad -> Insert		1143224	0					
ANR	1143516	PtrMemberAccess	classad -> Insert		1143224	0					
ANR	1143517	Identifier	classad		1143224	0					
ANR	1143518	Identifier	Insert		1143224	1					
ANR	1143519	ArgumentList	param7		1143224	1					
ANR	1143520	Argument	param7		1143224	0					
ANR	1143521	Identifier	param7		1143224	0					
ANR	1143522	Argument	expr		1143224	1					
ANR	1143523	Identifier	expr		1143224	0					
ANR	1143524	IfStatement	if ( ( param8 != NULL ) && ( value8 != NULL ) )		1143224	24					
ANR	1143525	Condition	( param8 != NULL ) && ( value8 != NULL )	396:6:11316:11351	1143224	0	True				
ANR	1143526	AndExpression	( param8 != NULL ) && ( value8 != NULL )		1143224	0		&&			
ANR	1143527	EqualityExpression	param8 != NULL		1143224	0		!=			
ANR	1143528	Identifier	param8		1143224	0					
ANR	1143529	Identifier	NULL		1143224	1					
ANR	1143530	EqualityExpression	value8 != NULL		1143224	1		!=			
ANR	1143531	Identifier	value8		1143224	0					
ANR	1143532	Identifier	NULL		1143224	1					
ANR	1143533	CompoundStatement		58:43:1571:1571	1143224	1					
ANR	1143534	IfStatement	"if ( parser . ParseExpression ( value8 , expr ) )"		1143224	0					
ANR	1143535	Condition	"parser . ParseExpression ( value8 , expr )"	397:9:11364:11399	1143224	0	True				
ANR	1143536	CallExpression	"parser . ParseExpression ( value8 , expr )"		1143224	0					
ANR	1143537	Callee	parser . ParseExpression		1143224	0					
ANR	1143538	MemberAccess	parser . ParseExpression		1143224	0					
ANR	1143539	Identifier	parser		1143224	0					
ANR	1143540	Identifier	ParseExpression		1143224	1					
ANR	1143541	ArgumentList	value8		1143224	1					
ANR	1143542	Argument	value8		1143224	0					
ANR	1143543	Identifier	value8		1143224	0					
ANR	1143544	Argument	expr		1143224	1					
ANR	1143545	Identifier	expr		1143224	0					
ANR	1143546	ExpressionStatement	"classad -> Insert ( param8 , expr )"	398:6:11409:11438	1143224	1	True				
ANR	1143547	CallExpression	"classad -> Insert ( param8 , expr )"		1143224	0					
ANR	1143548	Callee	classad -> Insert		1143224	0					
ANR	1143549	PtrMemberAccess	classad -> Insert		1143224	0					
ANR	1143550	Identifier	classad		1143224	0					
ANR	1143551	Identifier	Insert		1143224	1					
ANR	1143552	ArgumentList	param8		1143224	1					
ANR	1143553	Argument	param8		1143224	0					
ANR	1143554	Identifier	param8		1143224	0					
ANR	1143555	Argument	expr		1143224	1					
ANR	1143556	Identifier	expr		1143224	0					
ANR	1143557	IfStatement	if ( ( param9 != NULL ) && ( value9 != NULL ) )		1143224	25					
ANR	1143558	Condition	( param9 != NULL ) && ( value9 != NULL )	401:6:11451:11486	1143224	0	True				
ANR	1143559	AndExpression	( param9 != NULL ) && ( value9 != NULL )		1143224	0		&&			
ANR	1143560	EqualityExpression	param9 != NULL		1143224	0		!=			
ANR	1143561	Identifier	param9		1143224	0					
ANR	1143562	Identifier	NULL		1143224	1					
ANR	1143563	EqualityExpression	value9 != NULL		1143224	1		!=			
ANR	1143564	Identifier	value9		1143224	0					
ANR	1143565	Identifier	NULL		1143224	1					
ANR	1143566	CompoundStatement		63:43:1706:1706	1143224	1					
ANR	1143567	IfStatement	"if ( parser . ParseExpression ( value9 , expr ) )"		1143224	0					
ANR	1143568	Condition	"parser . ParseExpression ( value9 , expr )"	402:9:11499:11534	1143224	0	True				
ANR	1143569	CallExpression	"parser . ParseExpression ( value9 , expr )"		1143224	0					
ANR	1143570	Callee	parser . ParseExpression		1143224	0					
ANR	1143571	MemberAccess	parser . ParseExpression		1143224	0					
ANR	1143572	Identifier	parser		1143224	0					
ANR	1143573	Identifier	ParseExpression		1143224	1					
ANR	1143574	ArgumentList	value9		1143224	1					
ANR	1143575	Argument	value9		1143224	0					
ANR	1143576	Identifier	value9		1143224	0					
ANR	1143577	Argument	expr		1143224	1					
ANR	1143578	Identifier	expr		1143224	0					
ANR	1143579	ExpressionStatement	"classad -> Insert ( param9 , expr )"	403:6:11544:11573	1143224	1	True				
ANR	1143580	CallExpression	"classad -> Insert ( param9 , expr )"		1143224	0					
ANR	1143581	Callee	classad -> Insert		1143224	0					
ANR	1143582	PtrMemberAccess	classad -> Insert		1143224	0					
ANR	1143583	Identifier	classad		1143224	0					
ANR	1143584	Identifier	Insert		1143224	1					
ANR	1143585	ArgumentList	param9		1143224	1					
ANR	1143586	Argument	param9		1143224	0					
ANR	1143587	Identifier	param9		1143224	0					
ANR	1143588	Argument	expr		1143224	1					
ANR	1143589	Identifier	expr		1143224	0					
ANR	1143590	IfStatement	if ( ( param10 != NULL ) && ( value10 != NULL ) )		1143224	26					
ANR	1143591	Condition	( param10 != NULL ) && ( value10 != NULL )	406:6:11586:11623	1143224	0	True				
ANR	1143592	AndExpression	( param10 != NULL ) && ( value10 != NULL )		1143224	0		&&			
ANR	1143593	EqualityExpression	param10 != NULL		1143224	0		!=			
ANR	1143594	Identifier	param10		1143224	0					
ANR	1143595	Identifier	NULL		1143224	1					
ANR	1143596	EqualityExpression	value10 != NULL		1143224	1		!=			
ANR	1143597	Identifier	value10		1143224	0					
ANR	1143598	Identifier	NULL		1143224	1					
ANR	1143599	CompoundStatement		68:45:1843:1843	1143224	1					
ANR	1143600	IfStatement	"if ( parser . ParseExpression ( value10 , expr ) )"		1143224	0					
ANR	1143601	Condition	"parser . ParseExpression ( value10 , expr )"	407:9:11636:11672	1143224	0	True				
ANR	1143602	CallExpression	"parser . ParseExpression ( value10 , expr )"		1143224	0					
ANR	1143603	Callee	parser . ParseExpression		1143224	0					
ANR	1143604	MemberAccess	parser . ParseExpression		1143224	0					
ANR	1143605	Identifier	parser		1143224	0					
ANR	1143606	Identifier	ParseExpression		1143224	1					
ANR	1143607	ArgumentList	value10		1143224	1					
ANR	1143608	Argument	value10		1143224	0					
ANR	1143609	Identifier	value10		1143224	0					
ANR	1143610	Argument	expr		1143224	1					
ANR	1143611	Identifier	expr		1143224	0					
ANR	1143612	ExpressionStatement	"classad -> Insert ( param10 , expr )"	408:6:11682:11712	1143224	1	True				
ANR	1143613	CallExpression	"classad -> Insert ( param10 , expr )"		1143224	0					
ANR	1143614	Callee	classad -> Insert		1143224	0					
ANR	1143615	PtrMemberAccess	classad -> Insert		1143224	0					
ANR	1143616	Identifier	classad		1143224	0					
ANR	1143617	Identifier	Insert		1143224	1					
ANR	1143618	ArgumentList	param10		1143224	1					
ANR	1143619	Argument	param10		1143224	0					
ANR	1143620	Identifier	param10		1143224	0					
ANR	1143621	Argument	expr		1143224	1					
ANR	1143622	Identifier	expr		1143224	0					
ANR	1143623	ExpressionStatement	xmlunparser . SetCompactSpacing ( false )	412:2:11748:11784	1143224	27	True				
ANR	1143624	CallExpression	xmlunparser . SetCompactSpacing ( false )		1143224	0					
ANR	1143625	Callee	xmlunparser . SetCompactSpacing		1143224	0					
ANR	1143626	MemberAccess	xmlunparser . SetCompactSpacing		1143224	0					
ANR	1143627	Identifier	xmlunparser		1143224	0					
ANR	1143628	Identifier	SetCompactSpacing		1143224	1					
ANR	1143629	ArgumentList	false		1143224	1					
ANR	1143630	Argument	false		1143224	0					
ANR	1143631	Identifier	false		1143224	0					
ANR	1143632	ExpressionStatement	"xmlunparser . Unparse ( adbuffer , classad )"	413:2:11788:11826	1143224	28	True				
ANR	1143633	CallExpression	"xmlunparser . Unparse ( adbuffer , classad )"		1143224	0					
ANR	1143634	Callee	xmlunparser . Unparse		1143224	0					
ANR	1143635	MemberAccess	xmlunparser . Unparse		1143224	0					
ANR	1143636	Identifier	xmlunparser		1143224	0					
ANR	1143637	Identifier	Unparse		1143224	1					
ANR	1143638	ArgumentList	adbuffer		1143224	1					
ANR	1143639	Argument	adbuffer		1143224	0					
ANR	1143640	Identifier	adbuffer		1143224	0					
ANR	1143641	Argument	classad		1143224	1					
ANR	1143642	Identifier	classad		1143224	0					
ANR	1143643	Statement	delete	417:2:11874:11879	1143224	29	True				
ANR	1143644	ExpressionStatement	classad	417:9:11881:11888	1143224	30	True				
ANR	1143645	Identifier	classad		1143224	0					
ANR	1143646	IfStatement	"if ( ( flog = safe_fopen_wrapper ( logfilename , ""a+"" ) ) == NULL )"		1143224	31					
ANR	1143647	Condition	"( flog = safe_fopen_wrapper ( logfilename , ""a+"" ) ) == NULL"	420:6:11942:11994	1143224	0	True				
ANR	1143648	EqualityExpression	"( flog = safe_fopen_wrapper ( logfilename , ""a+"" ) ) == NULL"		1143224	0		==			
ANR	1143649	AssignmentExpression	"flog = safe_fopen_wrapper ( logfilename , ""a+"" )"		1143224	0		=			
ANR	1143650	Identifier	flog		1143224	0					
ANR	1143651	CallExpression	"safe_fopen_wrapper ( logfilename , ""a+"" )"		1143224	1					
ANR	1143652	Callee	safe_fopen_wrapper		1143224	0					
ANR	1143653	Identifier	safe_fopen_wrapper		1143224	0					
ANR	1143654	ArgumentList	logfilename		1143224	1					
ANR	1143655	Argument	logfilename		1143224	0					
ANR	1143656	Identifier	logfilename		1143224	0					
ANR	1143657	Argument	"""a+"""		1143224	1					
ANR	1143658	PrimaryExpression	"""a+"""		1143224	0					
ANR	1143659	Identifier	NULL		1143224	1					
ANR	1143660	CompoundStatement		82:60:2214:2214	1143224	1					
ANR	1143661	ExpressionStatement	"dprintf ( D_ALWAYS , ""cannot open user logfile :%s...\\n"" , logfilename )"	421:4:12002:12073	1143224	0	True				
ANR	1143662	CallExpression	"dprintf ( D_ALWAYS , ""cannot open user logfile :%s...\\n"" , logfilename )"		1143224	0					
ANR	1143663	Callee	dprintf		1143224	0					
ANR	1143664	Identifier	dprintf		1143224	0					
ANR	1143665	ArgumentList	D_ALWAYS		1143224	1					
ANR	1143666	Argument	D_ALWAYS		1143224	0					
ANR	1143667	Identifier	D_ALWAYS		1143224	0					
ANR	1143668	Argument	"""cannot open user logfile :%s...\\n"""		1143224	1					
ANR	1143669	PrimaryExpression	"""cannot open user logfile :%s...\\n"""		1143224	0					
ANR	1143670	Argument	logfilename		1143224	2					
ANR	1143671	Identifier	logfilename		1143224	0					
ANR	1143672	ReturnStatement	return ;	423:1:12076:12082	1143224	1	True				
ANR	1143673	ExpressionStatement	"fprintf ( flog , ""%s"" , adbuffer . c_str ( ) )"	425:2:12090:12126	1143224	32	True				
ANR	1143674	CallExpression	"fprintf ( flog , ""%s"" , adbuffer . c_str ( ) )"		1143224	0					
ANR	1143675	Callee	fprintf		1143224	0					
ANR	1143676	Identifier	fprintf		1143224	0					
ANR	1143677	ArgumentList	flog		1143224	1					
ANR	1143678	Argument	flog		1143224	0					
ANR	1143679	Identifier	flog		1143224	0					
ANR	1143680	Argument	"""%s"""		1143224	1					
ANR	1143681	PrimaryExpression	"""%s"""		1143224	0					
ANR	1143682	Argument	adbuffer . c_str ( )		1143224	2					
ANR	1143683	CallExpression	adbuffer . c_str ( )		1143224	0					
ANR	1143684	Callee	adbuffer . c_str		1143224	0					
ANR	1143685	MemberAccess	adbuffer . c_str		1143224	0					
ANR	1143686	Identifier	adbuffer		1143224	0					
ANR	1143687	Identifier	c_str		1143224	1					
ANR	1143688	ArgumentList			1143224	1					
ANR	1143689	IfStatement	if ( clientagenthost != NULL )		1143224	33					
ANR	1143690	Condition	clientagenthost != NULL	427:6:12135:12157	1143224	0	True				
ANR	1143691	EqualityExpression	clientagenthost != NULL		1143224	0		!=			
ANR	1143692	Identifier	clientagenthost		1143224	0					
ANR	1143693	Identifier	NULL		1143224	1					
ANR	1143694	CompoundStatement		89:30:2377:2377	1143224	1					
ANR	1143695	ExpressionStatement	send_log_to_client_agent ( adbuffer . c_str ( ) )	428:4:12165:12207	1143224	0	True				
ANR	1143696	CallExpression	send_log_to_client_agent ( adbuffer . c_str ( ) )		1143224	0					
ANR	1143697	Callee	send_log_to_client_agent		1143224	0					
ANR	1143698	Identifier	send_log_to_client_agent		1143224	0					
ANR	1143699	ArgumentList	adbuffer . c_str ( )		1143224	1					
ANR	1143700	Argument	adbuffer . c_str ( )		1143224	0					
ANR	1143701	CallExpression	adbuffer . c_str ( )		1143224	0					
ANR	1143702	Callee	adbuffer . c_str		1143224	0					
ANR	1143703	MemberAccess	adbuffer . c_str		1143224	0					
ANR	1143704	Identifier	adbuffer		1143224	0					
ANR	1143705	Identifier	c_str		1143224	1					
ANR	1143706	ArgumentList			1143224	1					
ANR	1143707	ExpressionStatement	fclose ( flog )	431:2:12222:12234	1143224	34	True				
ANR	1143708	CallExpression	fclose ( flog )		1143224	0					
ANR	1143709	Callee	fclose		1143224	0					
ANR	1143710	Identifier	fclose		1143224	0					
ANR	1143711	ArgumentList	flog		1143224	1					
ANR	1143712	Argument	flog		1143224	0					
ANR	1143713	Identifier	flog		1143224	0					
ANR	1143714	ReturnStatement	return ;	432:2:12238:12244	1143224	35	True				
ANR	1143715	ReturnType	void		1143224	1					
ANR	1143716	Identifier	write_xml_user_log		1143224	2					
ANR	1143717	ParameterList	"const char * logfilename , const char * param1 , const char * value1 , const char * param2 , const char * value2 , const char * param3 , const char * value3 , const char * param4 , const char * value4 , const char * param5 , const char * value5 , const char * param6 , const char * value6 , const char * param7 , const char * value7 , const char * param8 , const char * value8 , const char * param9 , const char * value9 , const char * param10 , const char * value10"		1143224	3					
ANR	1143718	Parameter	const char * logfilename	327:2:9333:9355	1143224	0	True				
ANR	1143719	ParameterType	const char *		1143224	0					
ANR	1143720	Identifier	logfilename		1143224	1					
ANR	1143721	Parameter	const char * param1	328:2:9360:9377	1143224	1	True				
ANR	1143722	ParameterType	const char *		1143224	0					
ANR	1143723	Identifier	param1		1143224	1					
ANR	1143724	Parameter	const char * value1	328:22:9380:9397	1143224	2	True				
ANR	1143725	ParameterType	const char *		1143224	0					
ANR	1143726	Identifier	value1		1143224	1					
ANR	1143727	Parameter	const char * param2	329:2:9402:9419	1143224	3	True				
ANR	1143728	ParameterType	const char *		1143224	0					
ANR	1143729	Identifier	param2		1143224	1					
ANR	1143730	Parameter	const char * value2	329:22:9422:9439	1143224	4	True				
ANR	1143731	ParameterType	const char *		1143224	0					
ANR	1143732	Identifier	value2		1143224	1					
ANR	1143733	Parameter	const char * param3	330:2:9444:9461	1143224	5	True				
ANR	1143734	ParameterType	const char *		1143224	0					
ANR	1143735	Identifier	param3		1143224	1					
ANR	1143736	Parameter	const char * value3	330:22:9464:9481	1143224	6	True				
ANR	1143737	ParameterType	const char *		1143224	0					
ANR	1143738	Identifier	value3		1143224	1					
ANR	1143739	Parameter	const char * param4	331:2:9486:9503	1143224	7	True				
ANR	1143740	ParameterType	const char *		1143224	0					
ANR	1143741	Identifier	param4		1143224	1					
ANR	1143742	Parameter	const char * value4	331:22:9506:9523	1143224	8	True				
ANR	1143743	ParameterType	const char *		1143224	0					
ANR	1143744	Identifier	value4		1143224	1					
ANR	1143745	Parameter	const char * param5	332:2:9528:9545	1143224	9	True				
ANR	1143746	ParameterType	const char *		1143224	0					
ANR	1143747	Identifier	param5		1143224	1					
ANR	1143748	Parameter	const char * value5	332:22:9548:9565	1143224	10	True				
ANR	1143749	ParameterType	const char *		1143224	0					
ANR	1143750	Identifier	value5		1143224	1					
ANR	1143751	Parameter	const char * param6	333:2:9570:9587	1143224	11	True				
ANR	1143752	ParameterType	const char *		1143224	0					
ANR	1143753	Identifier	param6		1143224	1					
ANR	1143754	Parameter	const char * value6	333:22:9590:9607	1143224	12	True				
ANR	1143755	ParameterType	const char *		1143224	0					
ANR	1143756	Identifier	value6		1143224	1					
ANR	1143757	Parameter	const char * param7	334:2:9612:9629	1143224	13	True				
ANR	1143758	ParameterType	const char *		1143224	0					
ANR	1143759	Identifier	param7		1143224	1					
ANR	1143760	Parameter	const char * value7	334:22:9632:9649	1143224	14	True				
ANR	1143761	ParameterType	const char *		1143224	0					
ANR	1143762	Identifier	value7		1143224	1					
ANR	1143763	Parameter	const char * param8	335:2:9654:9671	1143224	15	True				
ANR	1143764	ParameterType	const char *		1143224	0					
ANR	1143765	Identifier	param8		1143224	1					
ANR	1143766	Parameter	const char * value8	335:22:9674:9691	1143224	16	True				
ANR	1143767	ParameterType	const char *		1143224	0					
ANR	1143768	Identifier	value8		1143224	1					
ANR	1143769	Parameter	const char * param9	336:2:9696:9713	1143224	17	True				
ANR	1143770	ParameterType	const char *		1143224	0					
ANR	1143771	Identifier	param9		1143224	1					
ANR	1143772	Parameter	const char * value9	336:22:9716:9733	1143224	18	True				
ANR	1143773	ParameterType	const char *		1143224	0					
ANR	1143774	Identifier	value9		1143224	1					
ANR	1143775	Parameter	const char * param10	337:2:9738:9756	1143224	19	True				
ANR	1143776	ParameterType	const char *		1143224	0					
ANR	1143777	Identifier	param10		1143224	1					
ANR	1143778	Parameter	const char * value10	337:23:9759:9777	1143224	20	True				
ANR	1143779	ParameterType	const char *		1143224	0					
ANR	1143780	Identifier	value10		1143224	1					
ANR	1143781	CFGEntryNode	ENTRY		1143224		True				
ANR	1143782	CFGExitNode	EXIT		1143224		True				
ANR	1143783	Symbol	value6		1143224						
ANR	1143784	Symbol	value5		1143224						
ANR	1143785	Symbol	value8		1143224						
ANR	1143786	Symbol	value7		1143224						
ANR	1143787	Symbol	value2		1143224						
ANR	1143788	Symbol	value1		1143224						
ANR	1143789	Symbol	value4		1143224						
ANR	1143790	Symbol	value3		1143224						
ANR	1143791	Symbol	value9		1143224						
ANR	1143792	Symbol	xmlunparser		1143224						
ANR	1143793	Symbol	param10		1143224						
ANR	1143794	Symbol	expr		1143224						
ANR	1143795	Symbol	logfilename		1143224						
ANR	1143796	Symbol	value10		1143224						
ANR	1143797	Symbol	param7		1143224						
ANR	1143798	Symbol	param8		1143224						
ANR	1143799	Symbol	param5		1143224						
ANR	1143800	Symbol	param6		1143224						
ANR	1143801	Symbol	NULL		1143224						
ANR	1143802	Symbol	parser . ParseExpression		1143224						
ANR	1143803	Symbol	safe_fopen_wrapper		1143224						
ANR	1143804	Symbol	param9		1143224						
ANR	1143805	Symbol	false		1143224						
ANR	1143806	Symbol	D_ALWAYS		1143224						
ANR	1143807	Symbol	param_boolean		1143224						
ANR	1143808	Symbol	param3		1143224						
ANR	1143809	Symbol	param4		1143224						
ANR	1143810	Symbol	param1		1143224						
ANR	1143811	Symbol	flog		1143224						
ANR	1143812	Symbol	param2		1143224						
ANR	1143813	Symbol	clientagenthost		1143224						
ANR	1143814	Symbol	parser		1143224						
ANR	1143815	Symbol	classad		1143224						
ANR	1143816	Symbol	adbuffer . c_str		1143224						
ANR	1143817	Symbol	classad :: Literal :: MakeAbsTime		1143224						
ANR	1143818	Symbol	adbuffer		1143224						
ANR	1143819	Function	user_log_submit	435:0:12249:13096							
ANR	1143820	FunctionDef	"user_log_submit (const classad :: ClassAd * ad , WriteUserLog & user_log)"		1143819	0					
ANR	1143821	CompoundStatement		438:0:12328:13096	1143819	0					
ANR	1143822	IdentifierDeclStatement	SubmitEvent jobSubmit ;	439:1:12331:12352	1143819	0	True				
ANR	1143823	IdentifierDecl	jobSubmit		1143819	0					
ANR	1143824	IdentifierDeclType	SubmitEvent		1143819	0					
ANR	1143825	Identifier	jobSubmit		1143819	1					
ANR	1143826	IdentifierDeclStatement	std :: string logNotes ;	440:1:12355:12375	1143819	1	True				
ANR	1143827	IdentifierDecl	logNotes		1143819	0					
ANR	1143828	IdentifierDeclType	std :: string		1143819	0					
ANR	1143829	Identifier	logNotes		1143819	1					
ANR	1143830	IdentifierDeclStatement	std :: string dap_id ;	442:1:12379:12397	1143819	2	True				
ANR	1143831	IdentifierDecl	dap_id		1143819	0					
ANR	1143832	IdentifierDeclType	std :: string		1143819	0					
ANR	1143833	Identifier	dap_id		1143819	1					
ANR	1143834	ExpressionStatement	"ad -> EvaluateAttrString ( ""dap_id"" , dap_id )"	443:1:12400:12440	1143819	3	True				
ANR	1143835	CallExpression	"ad -> EvaluateAttrString ( ""dap_id"" , dap_id )"		1143819	0					
ANR	1143836	Callee	ad -> EvaluateAttrString		1143819	0					
ANR	1143837	PtrMemberAccess	ad -> EvaluateAttrString		1143819	0					
ANR	1143838	Identifier	ad		1143819	0					
ANR	1143839	Identifier	EvaluateAttrString		1143819	1					
ANR	1143840	ArgumentList	"""dap_id"""		1143819	1					
ANR	1143841	Argument	"""dap_id"""		1143819	0					
ANR	1143842	PrimaryExpression	"""dap_id"""		1143819	0					
ANR	1143843	Argument	dap_id		1143819	1					
ANR	1143844	Identifier	dap_id		1143819	0					
ANR	1143845	IfStatement	"if ( ad -> EvaluateAttrString ( ""LogNotes"" , logNotes ) && ! logNotes . empty ( ) )"		1143819	4					
ANR	1143846	Condition	"ad -> EvaluateAttrString ( ""LogNotes"" , logNotes ) && ! logNotes . empty ( )"	445:6:12449:12516	1143819	0	True				
ANR	1143847	AndExpression	"ad -> EvaluateAttrString ( ""LogNotes"" , logNotes ) && ! logNotes . empty ( )"		1143819	0		&&			
ANR	1143848	CallExpression	"ad -> EvaluateAttrString ( ""LogNotes"" , logNotes )"		1143819	0					
ANR	1143849	Callee	ad -> EvaluateAttrString		1143819	0					
ANR	1143850	PtrMemberAccess	ad -> EvaluateAttrString		1143819	0					
ANR	1143851	Identifier	ad		1143819	0					
ANR	1143852	Identifier	EvaluateAttrString		1143819	1					
ANR	1143853	ArgumentList	"""LogNotes"""		1143819	1					
ANR	1143854	Argument	"""LogNotes"""		1143819	0					
ANR	1143855	PrimaryExpression	"""LogNotes"""		1143819	0					
ANR	1143856	Argument	logNotes		1143819	1					
ANR	1143857	Identifier	logNotes		1143819	0					
ANR	1143858	UnaryOperationExpression	! logNotes . empty ( )		1143819	1					
ANR	1143859	UnaryOperator	!		1143819	0					
ANR	1143860	CallExpression	logNotes . empty ( )		1143819	1					
ANR	1143861	Callee	logNotes . empty		1143819	0					
ANR	1143862	MemberAccess	logNotes . empty		1143819	0					
ANR	1143863	Identifier	logNotes		1143819	0					
ANR	1143864	Identifier	empty		1143819	1					
ANR	1143865	ArgumentList			1143819	1					
ANR	1143866	CompoundStatement		11:1:194:194	1143819	1					
ANR	1143867	ExpressionStatement	jobSubmit . submitEventLogNotes = strnewp ( logNotes . c_str ( ) )	451:2:12627:12686	1143819	0	True				
ANR	1143868	AssignmentExpression	jobSubmit . submitEventLogNotes = strnewp ( logNotes . c_str ( ) )		1143819	0		=			
ANR	1143869	MemberAccess	jobSubmit . submitEventLogNotes		1143819	0					
ANR	1143870	Identifier	jobSubmit		1143819	0					
ANR	1143871	Identifier	submitEventLogNotes		1143819	1					
ANR	1143872	CallExpression	strnewp ( logNotes . c_str ( ) )		1143819	1					
ANR	1143873	Callee	strnewp		1143819	0					
ANR	1143874	Identifier	strnewp		1143819	0					
ANR	1143875	ArgumentList	logNotes . c_str ( )		1143819	1					
ANR	1143876	Argument	logNotes . c_str ( )		1143819	0					
ANR	1143877	CallExpression	logNotes . c_str ( )		1143819	0					
ANR	1143878	Callee	logNotes . c_str		1143819	0					
ANR	1143879	MemberAccess	logNotes . c_str		1143819	0					
ANR	1143880	Identifier	logNotes		1143819	0					
ANR	1143881	Identifier	c_str		1143819	1					
ANR	1143882	ArgumentList			1143819	1					
ANR	1143883	IdentifierDeclStatement	std :: string submit_host ;	454:1:12693:12716	1143819	5	True				
ANR	1143884	IdentifierDecl	submit_host		1143819	0					
ANR	1143885	IdentifierDeclType	std :: string		1143819	0					
ANR	1143886	Identifier	submit_host		1143819	1					
ANR	1143887	ExpressionStatement	"ad -> EvaluateAttrString ( ""submit_host"" , submit_host )"	455:1:12719:12769	1143819	6	True				
ANR	1143888	CallExpression	"ad -> EvaluateAttrString ( ""submit_host"" , submit_host )"		1143819	0					
ANR	1143889	Callee	ad -> EvaluateAttrString		1143819	0					
ANR	1143890	PtrMemberAccess	ad -> EvaluateAttrString		1143819	0					
ANR	1143891	Identifier	ad		1143819	0					
ANR	1143892	Identifier	EvaluateAttrString		1143819	1					
ANR	1143893	ArgumentList	"""submit_host"""		1143819	1					
ANR	1143894	Argument	"""submit_host"""		1143819	0					
ANR	1143895	PrimaryExpression	"""submit_host"""		1143819	0					
ANR	1143896	Argument	submit_host		1143819	1					
ANR	1143897	Identifier	submit_host		1143819	0					
ANR	1143898	ExpressionStatement	"strncpy ( jobSubmit . submitHost , submit_host . c_str ( ) , sizeof ( jobSubmit . submitHost ) - 1 )"	456:1:12772:12860	1143819	7	True				
ANR	1143899	CallExpression	"strncpy ( jobSubmit . submitHost , submit_host . c_str ( ) , sizeof ( jobSubmit . submitHost ) - 1 )"		1143819	0					
ANR	1143900	Callee	strncpy		1143819	0					
ANR	1143901	Identifier	strncpy		1143819	0					
ANR	1143902	ArgumentList	jobSubmit . submitHost		1143819	1					
ANR	1143903	Argument	jobSubmit . submitHost		1143819	0					
ANR	1143904	MemberAccess	jobSubmit . submitHost		1143819	0					
ANR	1143905	Identifier	jobSubmit		1143819	0					
ANR	1143906	Identifier	submitHost		1143819	1					
ANR	1143907	Argument	submit_host . c_str ( )		1143819	1					
ANR	1143908	CallExpression	submit_host . c_str ( )		1143819	0					
ANR	1143909	Callee	submit_host . c_str		1143819	0					
ANR	1143910	MemberAccess	submit_host . c_str		1143819	0					
ANR	1143911	Identifier	submit_host		1143819	0					
ANR	1143912	Identifier	c_str		1143819	1					
ANR	1143913	ArgumentList			1143819	1					
ANR	1143914	Argument	sizeof ( jobSubmit . submitHost ) - 1		1143819	2					
ANR	1143915	AdditiveExpression	sizeof ( jobSubmit . submitHost ) - 1		1143819	0		-			
ANR	1143916	SizeofExpression	sizeof ( jobSubmit . submitHost )		1143819	0					
ANR	1143917	Sizeof	sizeof		1143819	0					
ANR	1143918	MemberAccess	jobSubmit . submitHost		1143819	1					
ANR	1143919	Identifier	jobSubmit		1143819	0					
ANR	1143920	Identifier	submitHost		1143819	1					
ANR	1143921	PrimaryExpression	1		1143819	1					
ANR	1143922	ExpressionStatement	jobSubmit . submitHost [ sizeof ( jobSubmit . submitHost ) - 1 ] = '\\0'	458:1:12863:12926	1143819	8	True				
ANR	1143923	AssignmentExpression	jobSubmit . submitHost [ sizeof ( jobSubmit . submitHost ) - 1 ] = '\\0'		1143819	0		=			
ANR	1143924	ArrayIndexing	jobSubmit . submitHost [ sizeof ( jobSubmit . submitHost ) - 1 ]		1143819	0					
ANR	1143925	MemberAccess	jobSubmit . submitHost		1143819	0					
ANR	1143926	Identifier	jobSubmit		1143819	0					
ANR	1143927	Identifier	submitHost		1143819	1					
ANR	1143928	AdditiveExpression	sizeof ( jobSubmit . submitHost ) - 1		1143819	1		-			
ANR	1143929	SizeofExpression	sizeof ( jobSubmit . submitHost )		1143819	0					
ANR	1143930	Sizeof	sizeof		1143819	0					
ANR	1143931	MemberAccess	jobSubmit . submitHost		1143819	1					
ANR	1143932	Identifier	jobSubmit		1143819	0					
ANR	1143933	Identifier	submitHost		1143819	1					
ANR	1143934	PrimaryExpression	1		1143819	1					
ANR	1143935	PrimaryExpression	'\\0'		1143819	1					
ANR	1143936	IfStatement	if ( ! user_log . writeEvent ( & jobSubmit ) )		1143819	9					
ANR	1143937	Condition	! user_log . writeEvent ( & jobSubmit )	460:6:12935:12967	1143819	0	True				
ANR	1143938	UnaryOperationExpression	! user_log . writeEvent ( & jobSubmit )		1143819	0					
ANR	1143939	UnaryOperator	!		1143819	0					
ANR	1143940	CallExpression	user_log . writeEvent ( & jobSubmit )		1143819	1					
ANR	1143941	Callee	user_log . writeEvent		1143819	0					
ANR	1143942	MemberAccess	user_log . writeEvent		1143819	0					
ANR	1143943	Identifier	user_log		1143819	0					
ANR	1143944	Identifier	writeEvent		1143819	1					
ANR	1143945	ArgumentList	& jobSubmit		1143819	1					
ANR	1143946	Argument	& jobSubmit		1143819	0					
ANR	1143947	UnaryOperationExpression	& jobSubmit		1143819	0					
ANR	1143948	UnaryOperator	&		1143819	0					
ANR	1143949	Identifier	jobSubmit		1143819	1					
ANR	1143950	CompoundStatement		23:42:642:642	1143819	1					
ANR	1143951	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: Failed to log job %s submit event.\\n"" , dap_id . c_str ( ) )"	461:2:12975:13060	1143819	0	True				
ANR	1143952	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: Failed to log job %s submit event.\\n"" , dap_id . c_str ( ) )"		1143819	0					
ANR	1143953	Callee	dprintf		1143819	0					
ANR	1143954	Identifier	dprintf		1143819	0					
ANR	1143955	ArgumentList	D_ALWAYS		1143819	1					
ANR	1143956	Argument	D_ALWAYS		1143819	0					
ANR	1143957	Identifier	D_ALWAYS		1143819	0					
ANR	1143958	Argument	"""ERROR: Failed to log job %s submit event.\\n"""		1143819	1					
ANR	1143959	PrimaryExpression	"""ERROR: Failed to log job %s submit event.\\n"""		1143819	0					
ANR	1143960	Argument	dap_id . c_str ( )		1143819	2					
ANR	1143961	CallExpression	dap_id . c_str ( )		1143819	0					
ANR	1143962	Callee	dap_id . c_str		1143819	0					
ANR	1143963	MemberAccess	dap_id . c_str		1143819	0					
ANR	1143964	Identifier	dap_id		1143819	0					
ANR	1143965	Identifier	c_str		1143819	1					
ANR	1143966	ArgumentList			1143819	1					
ANR	1143967	ReturnStatement	return false ;	463:2:13064:13076	1143819	1	True				
ANR	1143968	Identifier	false		1143819	0					
ANR	1143969	ReturnStatement	return true ;	466:1:13083:13094	1143819	10	True				
ANR	1143970	Identifier	true		1143819	0					
ANR	1143971	ReturnType	bool		1143819	1					
ANR	1143972	Identifier	user_log_submit		1143819	2					
ANR	1143973	ParameterList	"const classad :: ClassAd * ad , WriteUserLog & user_log"		1143819	3					
ANR	1143974	Parameter	const classad :: ClassAd * ad	436:17:12271:12296	1143819	0	True				
ANR	1143975	ParameterType	const classad :: ClassAd *		1143819	0					
ANR	1143976	Identifier	ad		1143819	1					
ANR	1143977	Parameter	WriteUserLog & user_log	437:5:12304:12325	1143819	1	True				
ANR	1143978	ParameterType	WriteUserLog &		1143819	0					
ANR	1143979	Identifier	user_log		1143819	1					
ANR	1143980	CFGEntryNode	ENTRY		1143819		True				
ANR	1143981	CFGExitNode	EXIT		1143819		True				
ANR	1143982	Symbol	ad		1143819						
ANR	1143983	Symbol	submit_host		1143819						
ANR	1143984	Symbol	& jobSubmit		1143819						
ANR	1143985	Symbol	logNotes		1143819						
ANR	1143986	Symbol	dap_id		1143819						
ANR	1143987	Symbol	D_ALWAYS		1143819						
ANR	1143988	Symbol	false		1143819						
ANR	1143989	Symbol	jobSubmit		1143819						
ANR	1143990	Symbol	* ad		1143819						
ANR	1143991	Symbol	* jobSubmit . submitHost		1143819						
ANR	1143992	Symbol	logNotes . empty		1143819						
ANR	1143993	Symbol	* jobSubmit		1143819						
ANR	1143994	Symbol	user_log		1143819						
ANR	1143995	Symbol	logNotes . c_str		1143819						
ANR	1143996	Symbol	dap_id . c_str		1143819						
ANR	1143997	Symbol	user_log . writeEvent		1143819						
ANR	1143998	Symbol	submit_host . c_str		1143819						
ANR	1143999	Symbol	true		1143819						
ANR	1144000	Symbol	strnewp		1143819						
ANR	1144001	Symbol	jobSubmit . submitEventLogNotes		1143819						
ANR	1144002	Symbol	ad -> EvaluateAttrString		1143819						
ANR	1144003	Symbol	jobSubmit . submitHost		1143819						
ANR	1144004	Function	user_log_execute	469:0:13099:13661							
ANR	1144005	FunctionDef	"user_log_execute (const classad :: ClassAd * ad , WriteUserLog & user_log)"		1144004	0					
ANR	1144006	CompoundStatement		472:0:13179:13661	1144004	0					
ANR	1144007	IdentifierDeclStatement	ExecuteEvent event ;	473:1:13182:13200	1144004	0	True				
ANR	1144008	IdentifierDecl	event		1144004	0					
ANR	1144009	IdentifierDeclType	ExecuteEvent		1144004	0					
ANR	1144010	Identifier	event		1144004	1					
ANR	1144011	IdentifierDeclStatement	std :: string dap_id ;	475:1:13204:13222	1144004	1	True				
ANR	1144012	IdentifierDecl	dap_id		1144004	0					
ANR	1144013	IdentifierDeclType	std :: string		1144004	0					
ANR	1144014	Identifier	dap_id		1144004	1					
ANR	1144015	ExpressionStatement	"ad -> EvaluateAttrString ( ""dap_id"" , dap_id )"	476:1:13225:13265	1144004	2	True				
ANR	1144016	CallExpression	"ad -> EvaluateAttrString ( ""dap_id"" , dap_id )"		1144004	0					
ANR	1144017	Callee	ad -> EvaluateAttrString		1144004	0					
ANR	1144018	PtrMemberAccess	ad -> EvaluateAttrString		1144004	0					
ANR	1144019	Identifier	ad		1144004	0					
ANR	1144020	Identifier	EvaluateAttrString		1144004	1					
ANR	1144021	ArgumentList	"""dap_id"""		1144004	1					
ANR	1144022	Argument	"""dap_id"""		1144004	0					
ANR	1144023	PrimaryExpression	"""dap_id"""		1144004	0					
ANR	1144024	Argument	dap_id		1144004	1					
ANR	1144025	Identifier	dap_id		1144004	0					
ANR	1144026	IdentifierDeclStatement	std :: string execute_host ;	478:1:13269:13293	1144004	3	True				
ANR	1144027	IdentifierDecl	execute_host		1144004	0					
ANR	1144028	IdentifierDeclType	std :: string		1144004	0					
ANR	1144029	Identifier	execute_host		1144004	1					
ANR	1144030	ExpressionStatement	"ad -> EvaluateAttrString ( ""execute_host"" , execute_host )"	479:1:13296:13348	1144004	4	True				
ANR	1144031	CallExpression	"ad -> EvaluateAttrString ( ""execute_host"" , execute_host )"		1144004	0					
ANR	1144032	Callee	ad -> EvaluateAttrString		1144004	0					
ANR	1144033	PtrMemberAccess	ad -> EvaluateAttrString		1144004	0					
ANR	1144034	Identifier	ad		1144004	0					
ANR	1144035	Identifier	EvaluateAttrString		1144004	1					
ANR	1144036	ArgumentList	"""execute_host"""		1144004	1					
ANR	1144037	Argument	"""execute_host"""		1144004	0					
ANR	1144038	PrimaryExpression	"""execute_host"""		1144004	0					
ANR	1144039	Argument	execute_host		1144004	1					
ANR	1144040	Identifier	execute_host		1144004	0					
ANR	1144041	ExpressionStatement	"strncpy ( event . executeHost , execute_host . c_str ( ) , sizeof ( event . executeHost ) - 1 )"	480:1:13351:13434	1144004	5	True				
ANR	1144042	CallExpression	"strncpy ( event . executeHost , execute_host . c_str ( ) , sizeof ( event . executeHost ) - 1 )"		1144004	0					
ANR	1144043	Callee	strncpy		1144004	0					
ANR	1144044	Identifier	strncpy		1144004	0					
ANR	1144045	ArgumentList	event . executeHost		1144004	1					
ANR	1144046	Argument	event . executeHost		1144004	0					
ANR	1144047	MemberAccess	event . executeHost		1144004	0					
ANR	1144048	Identifier	event		1144004	0					
ANR	1144049	Identifier	executeHost		1144004	1					
ANR	1144050	Argument	execute_host . c_str ( )		1144004	1					
ANR	1144051	CallExpression	execute_host . c_str ( )		1144004	0					
ANR	1144052	Callee	execute_host . c_str		1144004	0					
ANR	1144053	MemberAccess	execute_host . c_str		1144004	0					
ANR	1144054	Identifier	execute_host		1144004	0					
ANR	1144055	Identifier	c_str		1144004	1					
ANR	1144056	ArgumentList			1144004	1					
ANR	1144057	Argument	sizeof ( event . executeHost ) - 1		1144004	2					
ANR	1144058	AdditiveExpression	sizeof ( event . executeHost ) - 1		1144004	0		-			
ANR	1144059	SizeofExpression	sizeof ( event . executeHost )		1144004	0					
ANR	1144060	Sizeof	sizeof		1144004	0					
ANR	1144061	MemberAccess	event . executeHost		1144004	1					
ANR	1144062	Identifier	event		1144004	0					
ANR	1144063	Identifier	executeHost		1144004	1					
ANR	1144064	PrimaryExpression	1		1144004	1					
ANR	1144065	ExpressionStatement	event . executeHost [ sizeof ( event . executeHost ) - 1 ] = '\\0'	482:1:13437:13494	1144004	6	True				
ANR	1144066	AssignmentExpression	event . executeHost [ sizeof ( event . executeHost ) - 1 ] = '\\0'		1144004	0		=			
ANR	1144067	ArrayIndexing	event . executeHost [ sizeof ( event . executeHost ) - 1 ]		1144004	0					
ANR	1144068	MemberAccess	event . executeHost		1144004	0					
ANR	1144069	Identifier	event		1144004	0					
ANR	1144070	Identifier	executeHost		1144004	1					
ANR	1144071	AdditiveExpression	sizeof ( event . executeHost ) - 1		1144004	1		-			
ANR	1144072	SizeofExpression	sizeof ( event . executeHost )		1144004	0					
ANR	1144073	Sizeof	sizeof		1144004	0					
ANR	1144074	MemberAccess	event . executeHost		1144004	1					
ANR	1144075	Identifier	event		1144004	0					
ANR	1144076	Identifier	executeHost		1144004	1					
ANR	1144077	PrimaryExpression	1		1144004	1					
ANR	1144078	PrimaryExpression	'\\0'		1144004	1					
ANR	1144079	IfStatement	if ( ! user_log . writeEvent ( & event ) )		1144004	7					
ANR	1144080	Condition	! user_log . writeEvent ( & event )	484:6:13503:13531	1144004	0	True				
ANR	1144081	UnaryOperationExpression	! user_log . writeEvent ( & event )		1144004	0					
ANR	1144082	UnaryOperator	!		1144004	0					
ANR	1144083	CallExpression	user_log . writeEvent ( & event )		1144004	1					
ANR	1144084	Callee	user_log . writeEvent		1144004	0					
ANR	1144085	MemberAccess	user_log . writeEvent		1144004	0					
ANR	1144086	Identifier	user_log		1144004	0					
ANR	1144087	Identifier	writeEvent		1144004	1					
ANR	1144088	ArgumentList	& event		1144004	1					
ANR	1144089	Argument	& event		1144004	0					
ANR	1144090	UnaryOperationExpression	& event		1144004	0					
ANR	1144091	UnaryOperator	&		1144004	0					
ANR	1144092	Identifier	event		1144004	1					
ANR	1144093	CompoundStatement		13:38:355:355	1144004	1					
ANR	1144094	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: Failed to log job %s execute event.\\n"" , dap_id . c_str ( ) )"	485:2:13539:13625	1144004	0	True				
ANR	1144095	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: Failed to log job %s execute event.\\n"" , dap_id . c_str ( ) )"		1144004	0					
ANR	1144096	Callee	dprintf		1144004	0					
ANR	1144097	Identifier	dprintf		1144004	0					
ANR	1144098	ArgumentList	D_ALWAYS		1144004	1					
ANR	1144099	Argument	D_ALWAYS		1144004	0					
ANR	1144100	Identifier	D_ALWAYS		1144004	0					
ANR	1144101	Argument	"""ERROR: Failed to log job %s execute event.\\n"""		1144004	1					
ANR	1144102	PrimaryExpression	"""ERROR: Failed to log job %s execute event.\\n"""		1144004	0					
ANR	1144103	Argument	dap_id . c_str ( )		1144004	2					
ANR	1144104	CallExpression	dap_id . c_str ( )		1144004	0					
ANR	1144105	Callee	dap_id . c_str		1144004	0					
ANR	1144106	MemberAccess	dap_id . c_str		1144004	0					
ANR	1144107	Identifier	dap_id		1144004	0					
ANR	1144108	Identifier	c_str		1144004	1					
ANR	1144109	ArgumentList			1144004	1					
ANR	1144110	ReturnStatement	return false ;	487:2:13629:13641	1144004	1	True				
ANR	1144111	Identifier	false		1144004	0					
ANR	1144112	ReturnStatement	return true ;	490:1:13648:13659	1144004	8	True				
ANR	1144113	Identifier	true		1144004	0					
ANR	1144114	ReturnType	bool		1144004	1					
ANR	1144115	Identifier	user_log_execute		1144004	2					
ANR	1144116	ParameterList	"const classad :: ClassAd * ad , WriteUserLog & user_log"		1144004	3					
ANR	1144117	Parameter	const classad :: ClassAd * ad	470:18:13122:13147	1144004	0	True				
ANR	1144118	ParameterType	const classad :: ClassAd *		1144004	0					
ANR	1144119	Identifier	ad		1144004	1					
ANR	1144120	Parameter	WriteUserLog & user_log	471:5:13155:13176	1144004	1	True				
ANR	1144121	ParameterType	WriteUserLog &		1144004	0					
ANR	1144122	Identifier	user_log		1144004	1					
ANR	1144123	CFGEntryNode	ENTRY		1144004		True				
ANR	1144124	CFGExitNode	EXIT		1144004		True				
ANR	1144125	Symbol	ad		1144004						
ANR	1144126	Symbol	event . executeHost		1144004						
ANR	1144127	Symbol	* event		1144004						
ANR	1144128	Symbol	dap_id		1144004						
ANR	1144129	Symbol	D_ALWAYS		1144004						
ANR	1144130	Symbol	false		1144004						
ANR	1144131	Symbol	execute_host		1144004						
ANR	1144132	Symbol	& event		1144004						
ANR	1144133	Symbol	user_log		1144004						
ANR	1144134	Symbol	dap_id . c_str		1144004						
ANR	1144135	Symbol	execute_host . c_str		1144004						
ANR	1144136	Symbol	user_log . writeEvent		1144004						
ANR	1144137	Symbol	* event . executeHost		1144004						
ANR	1144138	Symbol	true		1144004						
ANR	1144139	Symbol	event		1144004						
ANR	1144140	Function	user_log_generic	493:0:13664:14128							
ANR	1144141	FunctionDef	"user_log_generic (const classad :: ClassAd * ad , WriteUserLog & user_log)"		1144140	0					
ANR	1144142	CompoundStatement		496:0:13744:14128	1144140	0					
ANR	1144143	IdentifierDeclStatement	GenericEvent event ;	497:1:13747:13765	1144140	0	True				
ANR	1144144	IdentifierDecl	event		1144140	0					
ANR	1144145	IdentifierDeclType	GenericEvent		1144140	0					
ANR	1144146	Identifier	event		1144140	1					
ANR	1144147	IdentifierDeclStatement	std :: string dap_id ;	499:1:13769:13787	1144140	1	True				
ANR	1144148	IdentifierDecl	dap_id		1144140	0					
ANR	1144149	IdentifierDeclType	std :: string		1144140	0					
ANR	1144150	Identifier	dap_id		1144140	1					
ANR	1144151	ExpressionStatement	"ad -> EvaluateAttrString ( ""dap_id"" , dap_id )"	500:1:13790:13830	1144140	2	True				
ANR	1144152	CallExpression	"ad -> EvaluateAttrString ( ""dap_id"" , dap_id )"		1144140	0					
ANR	1144153	Callee	ad -> EvaluateAttrString		1144140	0					
ANR	1144154	PtrMemberAccess	ad -> EvaluateAttrString		1144140	0					
ANR	1144155	Identifier	ad		1144140	0					
ANR	1144156	Identifier	EvaluateAttrString		1144140	1					
ANR	1144157	ArgumentList	"""dap_id"""		1144140	1					
ANR	1144158	Argument	"""dap_id"""		1144140	0					
ANR	1144159	PrimaryExpression	"""dap_id"""		1144140	0					
ANR	1144160	Argument	dap_id		1144140	1					
ANR	1144161	Identifier	dap_id		1144140	0					
ANR	1144162	IdentifierDeclStatement	std :: string generic_event ;	502:1:13834:13859	1144140	3	True				
ANR	1144163	IdentifierDecl	generic_event		1144140	0					
ANR	1144164	IdentifierDeclType	std :: string		1144140	0					
ANR	1144165	Identifier	generic_event		1144140	1					
ANR	1144166	ExpressionStatement	"ad -> EvaluateAttrString ( ""generic_event"" , generic_event )"	503:1:13862:13916	1144140	4	True				
ANR	1144167	CallExpression	"ad -> EvaluateAttrString ( ""generic_event"" , generic_event )"		1144140	0					
ANR	1144168	Callee	ad -> EvaluateAttrString		1144140	0					
ANR	1144169	PtrMemberAccess	ad -> EvaluateAttrString		1144140	0					
ANR	1144170	Identifier	ad		1144140	0					
ANR	1144171	Identifier	EvaluateAttrString		1144140	1					
ANR	1144172	ArgumentList	"""generic_event"""		1144140	1					
ANR	1144173	Argument	"""generic_event"""		1144140	0					
ANR	1144174	PrimaryExpression	"""generic_event"""		1144140	0					
ANR	1144175	Argument	generic_event		1144140	1					
ANR	1144176	Identifier	generic_event		1144140	0					
ANR	1144177	ExpressionStatement	event . setInfoText ( generic_event . c_str ( ) )	504:1:13919:13961	1144140	5	True				
ANR	1144178	CallExpression	event . setInfoText ( generic_event . c_str ( ) )		1144140	0					
ANR	1144179	Callee	event . setInfoText		1144140	0					
ANR	1144180	MemberAccess	event . setInfoText		1144140	0					
ANR	1144181	Identifier	event		1144140	0					
ANR	1144182	Identifier	setInfoText		1144140	1					
ANR	1144183	ArgumentList	generic_event . c_str ( )		1144140	1					
ANR	1144184	Argument	generic_event . c_str ( )		1144140	0					
ANR	1144185	CallExpression	generic_event . c_str ( )		1144140	0					
ANR	1144186	Callee	generic_event . c_str		1144140	0					
ANR	1144187	MemberAccess	generic_event . c_str		1144140	0					
ANR	1144188	Identifier	generic_event		1144140	0					
ANR	1144189	Identifier	c_str		1144140	1					
ANR	1144190	ArgumentList			1144140	1					
ANR	1144191	IfStatement	if ( ! user_log . writeEvent ( & event ) )		1144140	6					
ANR	1144192	Condition	! user_log . writeEvent ( & event )	506:6:13970:13998	1144140	0	True				
ANR	1144193	UnaryOperationExpression	! user_log . writeEvent ( & event )		1144140	0					
ANR	1144194	UnaryOperator	!		1144140	0					
ANR	1144195	CallExpression	user_log . writeEvent ( & event )		1144140	1					
ANR	1144196	Callee	user_log . writeEvent		1144140	0					
ANR	1144197	MemberAccess	user_log . writeEvent		1144140	0					
ANR	1144198	Identifier	user_log		1144140	0					
ANR	1144199	Identifier	writeEvent		1144140	1					
ANR	1144200	ArgumentList	& event		1144140	1					
ANR	1144201	Argument	& event		1144140	0					
ANR	1144202	UnaryOperationExpression	& event		1144140	0					
ANR	1144203	UnaryOperator	&		1144140	0					
ANR	1144204	Identifier	event		1144140	1					
ANR	1144205	CompoundStatement		11:38:257:257	1144140	1					
ANR	1144206	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: Failed to log job %s generic event.\\n"" , dap_id . c_str ( ) )"	507:2:14006:14092	1144140	0	True				
ANR	1144207	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: Failed to log job %s generic event.\\n"" , dap_id . c_str ( ) )"		1144140	0					
ANR	1144208	Callee	dprintf		1144140	0					
ANR	1144209	Identifier	dprintf		1144140	0					
ANR	1144210	ArgumentList	D_ALWAYS		1144140	1					
ANR	1144211	Argument	D_ALWAYS		1144140	0					
ANR	1144212	Identifier	D_ALWAYS		1144140	0					
ANR	1144213	Argument	"""ERROR: Failed to log job %s generic event.\\n"""		1144140	1					
ANR	1144214	PrimaryExpression	"""ERROR: Failed to log job %s generic event.\\n"""		1144140	0					
ANR	1144215	Argument	dap_id . c_str ( )		1144140	2					
ANR	1144216	CallExpression	dap_id . c_str ( )		1144140	0					
ANR	1144217	Callee	dap_id . c_str		1144140	0					
ANR	1144218	MemberAccess	dap_id . c_str		1144140	0					
ANR	1144219	Identifier	dap_id		1144140	0					
ANR	1144220	Identifier	c_str		1144140	1					
ANR	1144221	ArgumentList			1144140	1					
ANR	1144222	ReturnStatement	return false ;	509:2:14096:14108	1144140	1	True				
ANR	1144223	Identifier	false		1144140	0					
ANR	1144224	ReturnStatement	return true ;	512:1:14115:14126	1144140	7	True				
ANR	1144225	Identifier	true		1144140	0					
ANR	1144226	ReturnType	bool		1144140	1					
ANR	1144227	Identifier	user_log_generic		1144140	2					
ANR	1144228	ParameterList	"const classad :: ClassAd * ad , WriteUserLog & user_log"		1144140	3					
ANR	1144229	Parameter	const classad :: ClassAd * ad	494:18:13687:13712	1144140	0	True				
ANR	1144230	ParameterType	const classad :: ClassAd *		1144140	0					
ANR	1144231	Identifier	ad		1144140	1					
ANR	1144232	Parameter	WriteUserLog & user_log	495:5:13720:13741	1144140	1	True				
ANR	1144233	ParameterType	WriteUserLog &		1144140	0					
ANR	1144234	Identifier	user_log		1144140	1					
ANR	1144235	CFGEntryNode	ENTRY		1144140		True				
ANR	1144236	CFGExitNode	EXIT		1144140		True				
ANR	1144237	Symbol	user_log		1144140						
ANR	1144238	Symbol	generic_event . c_str		1144140						
ANR	1144239	Symbol	ad		1144140						
ANR	1144240	Symbol	dap_id . c_str		1144140						
ANR	1144241	Symbol	user_log . writeEvent		1144140						
ANR	1144242	Symbol	dap_id		1144140						
ANR	1144243	Symbol	D_ALWAYS		1144140						
ANR	1144244	Symbol	false		1144140						
ANR	1144245	Symbol	true		1144140						
ANR	1144246	Symbol	event		1144140						
ANR	1144247	Symbol	generic_event		1144140						
ANR	1144248	Symbol	& event		1144140						
ANR	1144249	Function	user_log_terminated	515:0:14131:15764							
ANR	1144250	FunctionDef	"user_log_terminated (const classad :: ClassAd * ad , WriteUserLog & user_log)"		1144249	0					
ANR	1144251	CompoundStatement		518:0:14215:15764	1144249	0					
ANR	1144252	IdentifierDeclStatement	JobTerminatedEvent event ;	519:1:14218:14242	1144249	0	True				
ANR	1144253	IdentifierDecl	event		1144249	0					
ANR	1144254	IdentifierDeclType	JobTerminatedEvent		1144249	0					
ANR	1144255	Identifier	event		1144249	1					
ANR	1144256	IdentifierDeclStatement	std :: string termination_type ;	520:1:14245:14273	1144249	1	True				
ANR	1144257	IdentifierDecl	termination_type		1144249	0					
ANR	1144258	IdentifierDeclType	std :: string		1144249	0					
ANR	1144259	Identifier	termination_type		1144249	1					
ANR	1144260	IdentifierDeclStatement	std :: string dap_id ;	522:1:14277:14295	1144249	2	True				
ANR	1144261	IdentifierDecl	dap_id		1144249	0					
ANR	1144262	IdentifierDeclType	std :: string		1144249	0					
ANR	1144263	Identifier	dap_id		1144249	1					
ANR	1144264	ExpressionStatement	"ad -> EvaluateAttrString ( ""dap_id"" , dap_id )"	523:1:14298:14338	1144249	3	True				
ANR	1144265	CallExpression	"ad -> EvaluateAttrString ( ""dap_id"" , dap_id )"		1144249	0					
ANR	1144266	Callee	ad -> EvaluateAttrString		1144249	0					
ANR	1144267	PtrMemberAccess	ad -> EvaluateAttrString		1144249	0					
ANR	1144268	Identifier	ad		1144249	0					
ANR	1144269	Identifier	EvaluateAttrString		1144249	1					
ANR	1144270	ArgumentList	"""dap_id"""		1144249	1					
ANR	1144271	Argument	"""dap_id"""		1144249	0					
ANR	1144272	PrimaryExpression	"""dap_id"""		1144249	0					
ANR	1144273	Argument	dap_id		1144249	1					
ANR	1144274	Identifier	dap_id		1144249	0					
ANR	1144275	IfStatement	"if ( ! ad -> EvaluateAttrString ( ""termination_type"" , termination_type ) || termination_type . empty ( ) )"		1144249	4					
ANR	1144276	Condition	"! ad -> EvaluateAttrString ( ""termination_type"" , termination_type ) || termination_type . empty ( )"	525:6:14347:14439	1144249	0	True				
ANR	1144277	OrExpression	"! ad -> EvaluateAttrString ( ""termination_type"" , termination_type ) || termination_type . empty ( )"		1144249	0		||			
ANR	1144278	UnaryOperationExpression	"! ad -> EvaluateAttrString ( ""termination_type"" , termination_type )"		1144249	0					
ANR	1144279	UnaryOperator	!		1144249	0					
ANR	1144280	CallExpression	"ad -> EvaluateAttrString ( ""termination_type"" , termination_type )"		1144249	1					
ANR	1144281	Callee	ad -> EvaluateAttrString		1144249	0					
ANR	1144282	PtrMemberAccess	ad -> EvaluateAttrString		1144249	0					
ANR	1144283	Identifier	ad		1144249	0					
ANR	1144284	Identifier	EvaluateAttrString		1144249	1					
ANR	1144285	ArgumentList	"""termination_type"""		1144249	1					
ANR	1144286	Argument	"""termination_type"""		1144249	0					
ANR	1144287	PrimaryExpression	"""termination_type"""		1144249	0					
ANR	1144288	Argument	termination_type		1144249	1					
ANR	1144289	Identifier	termination_type		1144249	0					
ANR	1144290	CallExpression	termination_type . empty ( )		1144249	1					
ANR	1144291	Callee	termination_type . empty		1144249	0					
ANR	1144292	MemberAccess	termination_type . empty		1144249	0					
ANR	1144293	Identifier	termination_type		1144249	0					
ANR	1144294	Identifier	empty		1144249	1					
ANR	1144295	ArgumentList			1144249	1					
ANR	1144296	CompoundStatement		10:1:228:228	1144249	1					
ANR	1144297	ExpressionStatement	"dprintf ( D_ALWAYS , ""job %s has no termination type\\n"" , dap_id . c_str ( ) )"	528:2:14448:14518	1144249	0	True				
ANR	1144298	CallExpression	"dprintf ( D_ALWAYS , ""job %s has no termination type\\n"" , dap_id . c_str ( ) )"		1144249	0					
ANR	1144299	Callee	dprintf		1144249	0					
ANR	1144300	Identifier	dprintf		1144249	0					
ANR	1144301	ArgumentList	D_ALWAYS		1144249	1					
ANR	1144302	Argument	D_ALWAYS		1144249	0					
ANR	1144303	Identifier	D_ALWAYS		1144249	0					
ANR	1144304	Argument	"""job %s has no termination type\\n"""		1144249	1					
ANR	1144305	PrimaryExpression	"""job %s has no termination type\\n"""		1144249	0					
ANR	1144306	Argument	dap_id . c_str ( )		1144249	2					
ANR	1144307	CallExpression	dap_id . c_str ( )		1144249	0					
ANR	1144308	Callee	dap_id . c_str		1144249	0					
ANR	1144309	MemberAccess	dap_id . c_str		1144249	0					
ANR	1144310	Identifier	dap_id		1144249	0					
ANR	1144311	Identifier	c_str		1144249	1					
ANR	1144312	ArgumentList			1144249	1					
ANR	1144313	ReturnStatement	return false ;	529:2:14522:14534	1144249	1	True				
ANR	1144314	Identifier	false		1144249	0					
ANR	1144315	IfStatement	"if ( termination_type == ""job_retry_limit"" || termination_type == ""server_error"" )"		1144249	5					
ANR	1144316	Condition	"termination_type == ""job_retry_limit"" || termination_type == ""server_error"""	532:5:14545:14621	1144249	0	True				
ANR	1144317	OrExpression	"termination_type == ""job_retry_limit"" || termination_type == ""server_error"""		1144249	0		||			
ANR	1144318	EqualityExpression	"termination_type == ""job_retry_limit"""		1144249	0		==			
ANR	1144319	Identifier	termination_type		1144249	0					
ANR	1144320	PrimaryExpression	"""job_retry_limit"""		1144249	1					
ANR	1144321	EqualityExpression	"termination_type == ""server_error"""		1144249	1		==			
ANR	1144322	Identifier	termination_type		1144249	0					
ANR	1144323	PrimaryExpression	"""server_error"""		1144249	1					
ANR	1144324	CompoundStatement		16:38:408:408	1144249	1					
ANR	1144325	ExpressionStatement	event . normal = false	536:2:14722:14742	1144249	0	True				
ANR	1144326	AssignmentExpression	event . normal = false		1144249	0		=			
ANR	1144327	MemberAccess	event . normal		1144249	0					
ANR	1144328	Identifier	event		1144249	0					
ANR	1144329	Identifier	normal		1144249	1					
ANR	1144330	Identifier	false		1144249	1					
ANR	1144331	ElseStatement	else		1144249	0					
ANR	1144332	IfStatement	"if ( termination_type == ""exited"" )"		1144249	0					
ANR	1144333	Condition	"termination_type == ""exited"""	537:12:14756:14783	1144249	0	True				
ANR	1144334	EqualityExpression	"termination_type == ""exited"""		1144249	0		==			
ANR	1144335	Identifier	termination_type		1144249	0					
ANR	1144336	PrimaryExpression	"""exited"""		1144249	1					
ANR	1144337	CompoundStatement		22:2:619:634	1144249	1					
ANR	1144338	IdentifierDeclStatement	int exit_status ;	539:2:14835:14850	1144249	0	True				
ANR	1144339	IdentifierDecl	exit_status		1144249	0					
ANR	1144340	IdentifierDeclType	int		1144249	0					
ANR	1144341	Identifier	exit_status		1144249	1					
ANR	1144342	IfStatement	"if ( ! ad -> EvaluateAttrInt ( ""exit_status"" , exit_status ) )"		1144249	1					
ANR	1144343	Condition	"! ad -> EvaluateAttrInt ( ""exit_status"" , exit_status )"	540:6:14858:14906	1144249	0	True				
ANR	1144344	UnaryOperationExpression	"! ad -> EvaluateAttrInt ( ""exit_status"" , exit_status )"		1144249	0					
ANR	1144345	UnaryOperator	!		1144249	0					
ANR	1144346	CallExpression	"ad -> EvaluateAttrInt ( ""exit_status"" , exit_status )"		1144249	1					
ANR	1144347	Callee	ad -> EvaluateAttrInt		1144249	0					
ANR	1144348	PtrMemberAccess	ad -> EvaluateAttrInt		1144249	0					
ANR	1144349	Identifier	ad		1144249	0					
ANR	1144350	Identifier	EvaluateAttrInt		1144249	1					
ANR	1144351	ArgumentList	"""exit_status"""		1144249	1					
ANR	1144352	Argument	"""exit_status"""		1144249	0					
ANR	1144353	PrimaryExpression	"""exit_status"""		1144249	0					
ANR	1144354	Argument	exit_status		1144249	1					
ANR	1144355	Identifier	exit_status		1144249	0					
ANR	1144356	CompoundStatement		23:58:694:694	1144249	1					
ANR	1144357	ExpressionStatement	"dprintf ( D_ALWAYS , ""job %s exit_status not found\\n"" , dap_id . c_str ( ) )"	541:3:14915:14988	1144249	0	True				
ANR	1144358	CallExpression	"dprintf ( D_ALWAYS , ""job %s exit_status not found\\n"" , dap_id . c_str ( ) )"		1144249	0					
ANR	1144359	Callee	dprintf		1144249	0					
ANR	1144360	Identifier	dprintf		1144249	0					
ANR	1144361	ArgumentList	D_ALWAYS		1144249	1					
ANR	1144362	Argument	D_ALWAYS		1144249	0					
ANR	1144363	Identifier	D_ALWAYS		1144249	0					
ANR	1144364	Argument	"""job %s exit_status not found\\n"""		1144249	1					
ANR	1144365	PrimaryExpression	"""job %s exit_status not found\\n"""		1144249	0					
ANR	1144366	Argument	dap_id . c_str ( )		1144249	2					
ANR	1144367	CallExpression	dap_id . c_str ( )		1144249	0					
ANR	1144368	Callee	dap_id . c_str		1144249	0					
ANR	1144369	MemberAccess	dap_id . c_str		1144249	0					
ANR	1144370	Identifier	dap_id		1144249	0					
ANR	1144371	Identifier	c_str		1144249	1					
ANR	1144372	ArgumentList			1144249	1					
ANR	1144373	ReturnStatement	return false ;	543:3:14993:15005	1144249	1	True				
ANR	1144374	Identifier	false		1144249	0					
ANR	1144375	ElseStatement	else		1144249	0					
ANR	1144376	IfStatement	if ( WIFEXITED ( exit_status ) )		1144249	0					
ANR	1144377	Condition	WIFEXITED ( exit_status )	544:14:15021:15043	1144249	0	True				
ANR	1144378	CallExpression	WIFEXITED ( exit_status )		1144249	0					
ANR	1144379	Callee	WIFEXITED		1144249	0					
ANR	1144380	Identifier	WIFEXITED		1144249	0					
ANR	1144381	ArgumentList	exit_status		1144249	1					
ANR	1144382	Argument	exit_status		1144249	0					
ANR	1144383	Identifier	exit_status		1144249	0					
ANR	1144384	CompoundStatement		27:40:831:831	1144249	1					
ANR	1144385	ExpressionStatement	event . normal = ( exit_status == 0 ) ? true : false	546:3:15115:15163	1144249	0	True				
ANR	1144386	AssignmentExpression	event . normal = ( exit_status == 0 ) ? true : false		1144249	0		=			
ANR	1144387	MemberAccess	event . normal		1144249	0					
ANR	1144388	Identifier	event		1144249	0					
ANR	1144389	Identifier	normal		1144249	1					
ANR	1144390	ConditionalExpression	( exit_status == 0 ) ? true : false		1144249	1					
ANR	1144391	Condition	exit_status == 0		1144249	0					
ANR	1144392	EqualityExpression	exit_status == 0		1144249	0		==			
ANR	1144393	Identifier	exit_status		1144249	0					
ANR	1144394	PrimaryExpression	0		1144249	1					
ANR	1144395	Identifier	true		1144249	1					
ANR	1144396	Identifier	false		1144249	2					
ANR	1144397	ExpressionStatement	event . returnValue = WEXITSTATUS ( exit_status )	547:3:15168:15214	1144249	1	True				
ANR	1144398	AssignmentExpression	event . returnValue = WEXITSTATUS ( exit_status )		1144249	0		=			
ANR	1144399	MemberAccess	event . returnValue		1144249	0					
ANR	1144400	Identifier	event		1144249	0					
ANR	1144401	Identifier	returnValue		1144249	1					
ANR	1144402	CallExpression	WEXITSTATUS ( exit_status )		1144249	1					
ANR	1144403	Callee	WEXITSTATUS		1144249	0					
ANR	1144404	Identifier	WEXITSTATUS		1144249	0					
ANR	1144405	ArgumentList	exit_status		1144249	1					
ANR	1144406	Argument	exit_status		1144249	0					
ANR	1144407	Identifier	exit_status		1144249	0					
ANR	1144408	ElseStatement	else		1144249	0					
ANR	1144409	IfStatement	if ( WIFSIGNALED ( exit_status ) )		1144249	0					
ANR	1144410	Condition	WIFSIGNALED ( exit_status )	548:14:15230:15254	1144249	0	True				
ANR	1144411	CallExpression	WIFSIGNALED ( exit_status )		1144249	0					
ANR	1144412	Callee	WIFSIGNALED		1144249	0					
ANR	1144413	Identifier	WIFSIGNALED		1144249	0					
ANR	1144414	ArgumentList	exit_status		1144249	1					
ANR	1144415	Argument	exit_status		1144249	0					
ANR	1144416	Identifier	exit_status		1144249	0					
ANR	1144417	CompoundStatement		31:42:1042:1042	1144249	1					
ANR	1144418	ExpressionStatement	event . normal = false	549:3:15263:15283	1144249	0	True				
ANR	1144419	AssignmentExpression	event . normal = false		1144249	0		=			
ANR	1144420	MemberAccess	event . normal		1144249	0					
ANR	1144421	Identifier	event		1144249	0					
ANR	1144422	Identifier	normal		1144249	1					
ANR	1144423	Identifier	false		1144249	1					
ANR	1144424	ExpressionStatement	event . signalNumber = WTERMSIG ( exit_status )	550:3:15288:15332	1144249	1	True				
ANR	1144425	AssignmentExpression	event . signalNumber = WTERMSIG ( exit_status )		1144249	0		=			
ANR	1144426	MemberAccess	event . signalNumber		1144249	0					
ANR	1144427	Identifier	event		1144249	0					
ANR	1144428	Identifier	signalNumber		1144249	1					
ANR	1144429	CallExpression	WTERMSIG ( exit_status )		1144249	1					
ANR	1144430	Callee	WTERMSIG		1144249	0					
ANR	1144431	Identifier	WTERMSIG		1144249	0					
ANR	1144432	ArgumentList	exit_status		1144249	1					
ANR	1144433	Argument	exit_status		1144249	0					
ANR	1144434	Identifier	exit_status		1144249	0					
ANR	1144435	ElseStatement	else		1144249	0					
ANR	1144436	CompoundStatement		34:9:1127:1127	1144249	0					
ANR	1144437	ExpressionStatement	"dprintf ( D_ALWAYS , ""job %s exit_status %d unknown\\n"" , dap_id . c_str ( ) , exit_status )"	552:3:15348:15435	1144249	0	True				
ANR	1144438	CallExpression	"dprintf ( D_ALWAYS , ""job %s exit_status %d unknown\\n"" , dap_id . c_str ( ) , exit_status )"		1144249	0					
ANR	1144439	Callee	dprintf		1144249	0					
ANR	1144440	Identifier	dprintf		1144249	0					
ANR	1144441	ArgumentList	D_ALWAYS		1144249	1					
ANR	1144442	Argument	D_ALWAYS		1144249	0					
ANR	1144443	Identifier	D_ALWAYS		1144249	0					
ANR	1144444	Argument	"""job %s exit_status %d unknown\\n"""		1144249	1					
ANR	1144445	PrimaryExpression	"""job %s exit_status %d unknown\\n"""		1144249	0					
ANR	1144446	Argument	dap_id . c_str ( )		1144249	2					
ANR	1144447	CallExpression	dap_id . c_str ( )		1144249	0					
ANR	1144448	Callee	dap_id . c_str		1144249	0					
ANR	1144449	MemberAccess	dap_id . c_str		1144249	0					
ANR	1144450	Identifier	dap_id		1144249	0					
ANR	1144451	Identifier	c_str		1144249	1					
ANR	1144452	ArgumentList			1144249	1					
ANR	1144453	Argument	exit_status		1144249	3					
ANR	1144454	Identifier	exit_status		1144249	0					
ANR	1144455	ReturnStatement	return false ;	554:3:15440:15452	1144249	1	True				
ANR	1144456	Identifier	false		1144249	0					
ANR	1144457	ElseStatement	else		1144249	0					
ANR	1144458	CompoundStatement		39:8:1250:1250	1144249	0					
ANR	1144459	ExpressionStatement	"dprintf ( D_ALWAYS , ""job %s unknown termination type: %s\\n"" , dap_id . c_str ( ) , termination_type . c_str ( ) )"	557:2:15470:15575	1144249	0	True				
ANR	1144460	CallExpression	"dprintf ( D_ALWAYS , ""job %s unknown termination type: %s\\n"" , dap_id . c_str ( ) , termination_type . c_str ( ) )"		1144249	0					
ANR	1144461	Callee	dprintf		1144249	0					
ANR	1144462	Identifier	dprintf		1144249	0					
ANR	1144463	ArgumentList	D_ALWAYS		1144249	1					
ANR	1144464	Argument	D_ALWAYS		1144249	0					
ANR	1144465	Identifier	D_ALWAYS		1144249	0					
ANR	1144466	Argument	"""job %s unknown termination type: %s\\n"""		1144249	1					
ANR	1144467	PrimaryExpression	"""job %s unknown termination type: %s\\n"""		1144249	0					
ANR	1144468	Argument	dap_id . c_str ( )		1144249	2					
ANR	1144469	CallExpression	dap_id . c_str ( )		1144249	0					
ANR	1144470	Callee	dap_id . c_str		1144249	0					
ANR	1144471	MemberAccess	dap_id . c_str		1144249	0					
ANR	1144472	Identifier	dap_id		1144249	0					
ANR	1144473	Identifier	c_str		1144249	1					
ANR	1144474	ArgumentList			1144249	1					
ANR	1144475	Argument	termination_type . c_str ( )		1144249	3					
ANR	1144476	CallExpression	termination_type . c_str ( )		1144249	0					
ANR	1144477	Callee	termination_type . c_str		1144249	0					
ANR	1144478	MemberAccess	termination_type . c_str		1144249	0					
ANR	1144479	Identifier	termination_type		1144249	0					
ANR	1144480	Identifier	c_str		1144249	1					
ANR	1144481	ArgumentList			1144249	1					
ANR	1144482	ReturnStatement	return false ;	559:2:15579:15591	1144249	1	True				
ANR	1144483	Identifier	false		1144249	0					
ANR	1144484	IfStatement	if ( ! user_log . writeEvent ( & event ) )		1144249	6					
ANR	1144485	Condition	! user_log . writeEvent ( & event )	562:6:15603:15631	1144249	0	True				
ANR	1144486	UnaryOperationExpression	! user_log . writeEvent ( & event )		1144249	0					
ANR	1144487	UnaryOperator	!		1144249	0					
ANR	1144488	CallExpression	user_log . writeEvent ( & event )		1144249	1					
ANR	1144489	Callee	user_log . writeEvent		1144249	0					
ANR	1144490	MemberAccess	user_log . writeEvent		1144249	0					
ANR	1144491	Identifier	user_log		1144249	0					
ANR	1144492	Identifier	writeEvent		1144249	1					
ANR	1144493	ArgumentList	& event		1144249	1					
ANR	1144494	Argument	& event		1144249	0					
ANR	1144495	UnaryOperationExpression	& event		1144249	0					
ANR	1144496	UnaryOperator	&		1144249	0					
ANR	1144497	Identifier	event		1144249	1					
ANR	1144498	CompoundStatement		45:38:1419:1419	1144249	1					
ANR	1144499	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: Failed to log job %s terminated event.\\n"" , dap_id . c_str ( ) )"	563:2:15639:15728	1144249	0	True				
ANR	1144500	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: Failed to log job %s terminated event.\\n"" , dap_id . c_str ( ) )"		1144249	0					
ANR	1144501	Callee	dprintf		1144249	0					
ANR	1144502	Identifier	dprintf		1144249	0					
ANR	1144503	ArgumentList	D_ALWAYS		1144249	1					
ANR	1144504	Argument	D_ALWAYS		1144249	0					
ANR	1144505	Identifier	D_ALWAYS		1144249	0					
ANR	1144506	Argument	"""ERROR: Failed to log job %s terminated event.\\n"""		1144249	1					
ANR	1144507	PrimaryExpression	"""ERROR: Failed to log job %s terminated event.\\n"""		1144249	0					
ANR	1144508	Argument	dap_id . c_str ( )		1144249	2					
ANR	1144509	CallExpression	dap_id . c_str ( )		1144249	0					
ANR	1144510	Callee	dap_id . c_str		1144249	0					
ANR	1144511	MemberAccess	dap_id . c_str		1144249	0					
ANR	1144512	Identifier	dap_id		1144249	0					
ANR	1144513	Identifier	c_str		1144249	1					
ANR	1144514	ArgumentList			1144249	1					
ANR	1144515	ReturnStatement	return false ;	565:2:15732:15744	1144249	1	True				
ANR	1144516	Identifier	false		1144249	0					
ANR	1144517	ReturnStatement	return true ;	568:1:15751:15762	1144249	7	True				
ANR	1144518	Identifier	true		1144249	0					
ANR	1144519	ReturnType	bool		1144249	1					
ANR	1144520	Identifier	user_log_terminated		1144249	2					
ANR	1144521	ParameterList	"const classad :: ClassAd * ad , WriteUserLog & user_log"		1144249	3					
ANR	1144522	Parameter	const classad :: ClassAd * ad	516:21:14157:14182	1144249	0	True				
ANR	1144523	ParameterType	const classad :: ClassAd *		1144249	0					
ANR	1144524	Identifier	ad		1144249	1					
ANR	1144525	Parameter	WriteUserLog & user_log	517:6:14191:14212	1144249	1	True				
ANR	1144526	ParameterType	WriteUserLog &		1144249	0					
ANR	1144527	Identifier	user_log		1144249	1					
ANR	1144528	CFGEntryNode	ENTRY		1144249		True				
ANR	1144529	CFGExitNode	EXIT		1144249		True				
ANR	1144530	Symbol	WIFSIGNALED		1144249						
ANR	1144531	Symbol	ad		1144249						
ANR	1144532	Symbol	event . normal		1144249						
ANR	1144533	Symbol	event . signalNumber		1144249						
ANR	1144534	Symbol	dap_id		1144249						
ANR	1144535	Symbol	D_ALWAYS		1144249						
ANR	1144536	Symbol	false		1144249						
ANR	1144537	Symbol	* ad		1144249						
ANR	1144538	Symbol	WEXITSTATUS		1144249						
ANR	1144539	Symbol	exit_status		1144249						
ANR	1144540	Symbol	& event		1144249						
ANR	1144541	Symbol	termination_type		1144249						
ANR	1144542	Symbol	user_log		1144249						
ANR	1144543	Symbol	dap_id . c_str		1144249						
ANR	1144544	Symbol	WIFEXITED		1144249						
ANR	1144545	Symbol	user_log . writeEvent		1144249						
ANR	1144546	Symbol	termination_type . empty		1144249						
ANR	1144547	Symbol	ad -> EvaluateAttrInt		1144249						
ANR	1144548	Symbol	true		1144249						
ANR	1144549	Symbol	event . returnValue		1144249						
ANR	1144550	Symbol	WTERMSIG		1144249						
ANR	1144551	Symbol	event		1144249						
ANR	1144552	Symbol	ad -> EvaluateAttrString		1144249						
ANR	1144553	Symbol	termination_type . c_str		1144249						
ANR	1144554	Function	user_log_aborted	571:0:15767:16104							
ANR	1144555	FunctionDef	"user_log_aborted (const classad :: ClassAd * ad , WriteUserLog & user_log)"		1144554	0					
ANR	1144556	CompoundStatement		574:0:15848:16104	1144554	0					
ANR	1144557	IdentifierDeclStatement	JobAbortedEvent event ;	575:1:15851:15872	1144554	0	True				
ANR	1144558	IdentifierDecl	event		1144554	0					
ANR	1144559	IdentifierDeclType	JobAbortedEvent		1144554	0					
ANR	1144560	Identifier	event		1144554	1					
ANR	1144561	IdentifierDeclStatement	std :: string dap_id ;	577:1:15876:15894	1144554	1	True				
ANR	1144562	IdentifierDecl	dap_id		1144554	0					
ANR	1144563	IdentifierDeclType	std :: string		1144554	0					
ANR	1144564	Identifier	dap_id		1144554	1					
ANR	1144565	ExpressionStatement	"ad -> EvaluateAttrString ( ""dap_id"" , dap_id )"	578:1:15897:15937	1144554	2	True				
ANR	1144566	CallExpression	"ad -> EvaluateAttrString ( ""dap_id"" , dap_id )"		1144554	0					
ANR	1144567	Callee	ad -> EvaluateAttrString		1144554	0					
ANR	1144568	PtrMemberAccess	ad -> EvaluateAttrString		1144554	0					
ANR	1144569	Identifier	ad		1144554	0					
ANR	1144570	Identifier	EvaluateAttrString		1144554	1					
ANR	1144571	ArgumentList	"""dap_id"""		1144554	1					
ANR	1144572	Argument	"""dap_id"""		1144554	0					
ANR	1144573	PrimaryExpression	"""dap_id"""		1144554	0					
ANR	1144574	Argument	dap_id		1144554	1					
ANR	1144575	Identifier	dap_id		1144554	0					
ANR	1144576	IfStatement	if ( ! user_log . writeEvent ( & event ) )		1144554	3					
ANR	1144577	Condition	! user_log . writeEvent ( & event )	580:6:15946:15974	1144554	0	True				
ANR	1144578	UnaryOperationExpression	! user_log . writeEvent ( & event )		1144554	0					
ANR	1144579	UnaryOperator	!		1144554	0					
ANR	1144580	CallExpression	user_log . writeEvent ( & event )		1144554	1					
ANR	1144581	Callee	user_log . writeEvent		1144554	0					
ANR	1144582	MemberAccess	user_log . writeEvent		1144554	0					
ANR	1144583	Identifier	user_log		1144554	0					
ANR	1144584	Identifier	writeEvent		1144554	1					
ANR	1144585	ArgumentList	& event		1144554	1					
ANR	1144586	Argument	& event		1144554	0					
ANR	1144587	UnaryOperationExpression	& event		1144554	0					
ANR	1144588	UnaryOperator	&		1144554	0					
ANR	1144589	Identifier	event		1144554	1					
ANR	1144590	CompoundStatement		7:38:129:129	1144554	1					
ANR	1144591	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: Failed to log job %s aborted event.\\n"" , dap_id . c_str ( ) )"	581:2:15982:16068	1144554	0	True				
ANR	1144592	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: Failed to log job %s aborted event.\\n"" , dap_id . c_str ( ) )"		1144554	0					
ANR	1144593	Callee	dprintf		1144554	0					
ANR	1144594	Identifier	dprintf		1144554	0					
ANR	1144595	ArgumentList	D_ALWAYS		1144554	1					
ANR	1144596	Argument	D_ALWAYS		1144554	0					
ANR	1144597	Identifier	D_ALWAYS		1144554	0					
ANR	1144598	Argument	"""ERROR: Failed to log job %s aborted event.\\n"""		1144554	1					
ANR	1144599	PrimaryExpression	"""ERROR: Failed to log job %s aborted event.\\n"""		1144554	0					
ANR	1144600	Argument	dap_id . c_str ( )		1144554	2					
ANR	1144601	CallExpression	dap_id . c_str ( )		1144554	0					
ANR	1144602	Callee	dap_id . c_str		1144554	0					
ANR	1144603	MemberAccess	dap_id . c_str		1144554	0					
ANR	1144604	Identifier	dap_id		1144554	0					
ANR	1144605	Identifier	c_str		1144554	1					
ANR	1144606	ArgumentList			1144554	1					
ANR	1144607	ReturnStatement	return false ;	583:2:16072:16084	1144554	1	True				
ANR	1144608	Identifier	false		1144554	0					
ANR	1144609	ReturnStatement	return true ;	586:1:16091:16102	1144554	4	True				
ANR	1144610	Identifier	true		1144554	0					
ANR	1144611	ReturnType	bool		1144554	1					
ANR	1144612	Identifier	user_log_aborted		1144554	2					
ANR	1144613	ParameterList	"const classad :: ClassAd * ad , WriteUserLog & user_log"		1144554	3					
ANR	1144614	Parameter	const classad :: ClassAd * ad	572:18:15790:15815	1144554	0	True				
ANR	1144615	ParameterType	const classad :: ClassAd *		1144554	0					
ANR	1144616	Identifier	ad		1144554	1					
ANR	1144617	Parameter	WriteUserLog & user_log	573:6:15824:15845	1144554	1	True				
ANR	1144618	ParameterType	WriteUserLog &		1144554	0					
ANR	1144619	Identifier	user_log		1144554	1					
ANR	1144620	CFGEntryNode	ENTRY		1144554		True				
ANR	1144621	CFGExitNode	EXIT		1144554		True				
ANR	1144622	Symbol	user_log		1144554						
ANR	1144623	Symbol	ad		1144554						
ANR	1144624	Symbol	dap_id . c_str		1144554						
ANR	1144625	Symbol	user_log . writeEvent		1144554						
ANR	1144626	Symbol	dap_id		1144554						
ANR	1144627	Symbol	D_ALWAYS		1144554						
ANR	1144628	Symbol	false		1144554						
ANR	1144629	Symbol	true		1144554						
ANR	1144630	Symbol	event		1144554						
ANR	1144631	Symbol	& event		1144554						
ANR	1144632	Function	user_log	589:0:16107:17737							
ANR	1144633	FunctionDef	"user_log (const classad :: ClassAd * ad , const enum ULogEventNumber eventNum)"		1144632	0					
ANR	1144634	CompoundStatement		592:0:16194:17737	1144632	0					
ANR	1144635	IdentifierDeclStatement	std :: string userLogFile ;	593:1:16197:16220	1144632	0	True				
ANR	1144636	IdentifierDecl	userLogFile		1144632	0					
ANR	1144637	IdentifierDeclType	std :: string		1144632	0					
ANR	1144638	Identifier	userLogFile		1144632	1					
ANR	1144639	IdentifierDeclStatement	"int cluster_id , proc_id ;"	594:1:16223:16246	1144632	1	True				
ANR	1144640	IdentifierDecl	cluster_id		1144632	0					
ANR	1144641	IdentifierDeclType	int		1144632	0					
ANR	1144642	Identifier	cluster_id		1144632	1					
ANR	1144643	IdentifierDecl	proc_id		1144632	1					
ANR	1144644	IdentifierDeclType	int		1144632	0					
ANR	1144645	Identifier	proc_id		1144632	1					
ANR	1144646	IdentifierDeclStatement	bool log_xml ;	595:1:16249:16261	1144632	2	True				
ANR	1144647	IdentifierDecl	log_xml		1144632	0					
ANR	1144648	IdentifierDeclType	bool		1144632	0					
ANR	1144649	Identifier	log_xml		1144632	1					
ANR	1144650	IdentifierDeclStatement	WriteUserLog usr_log ;	596:1:16264:16284	1144632	3	True				
ANR	1144651	IdentifierDecl	usr_log		1144632	0					
ANR	1144652	IdentifierDeclType	WriteUserLog		1144632	0					
ANR	1144653	Identifier	usr_log		1144632	1					
ANR	1144654	IfStatement	"if ( ! ad -> EvaluateAttrString ( ""log"" , userLogFile ) || userLogFile . empty ( ) )"		1144632	4					
ANR	1144655	Condition	"! ad -> EvaluateAttrString ( ""log"" , userLogFile ) || userLogFile . empty ( )"	598:6:16293:16361	1144632	0	True				
ANR	1144656	OrExpression	"! ad -> EvaluateAttrString ( ""log"" , userLogFile ) || userLogFile . empty ( )"		1144632	0		||			
ANR	1144657	UnaryOperationExpression	"! ad -> EvaluateAttrString ( ""log"" , userLogFile )"		1144632	0					
ANR	1144658	UnaryOperator	!		1144632	0					
ANR	1144659	CallExpression	"ad -> EvaluateAttrString ( ""log"" , userLogFile )"		1144632	1					
ANR	1144660	Callee	ad -> EvaluateAttrString		1144632	0					
ANR	1144661	PtrMemberAccess	ad -> EvaluateAttrString		1144632	0					
ANR	1144662	Identifier	ad		1144632	0					
ANR	1144663	Identifier	EvaluateAttrString		1144632	1					
ANR	1144664	ArgumentList	"""log"""		1144632	1					
ANR	1144665	Argument	"""log"""		1144632	0					
ANR	1144666	PrimaryExpression	"""log"""		1144632	0					
ANR	1144667	Argument	userLogFile		1144632	1					
ANR	1144668	Identifier	userLogFile		1144632	0					
ANR	1144669	CallExpression	userLogFile . empty ( )		1144632	1					
ANR	1144670	Callee	userLogFile . empty		1144632	0					
ANR	1144671	MemberAccess	userLogFile . empty		1144632	0					
ANR	1144672	Identifier	userLogFile		1144632	0					
ANR	1144673	Identifier	empty		1144632	1					
ANR	1144674	ArgumentList			1144632	1					
ANR	1144675	CompoundStatement		10:1:173:173	1144632	1					
ANR	1144676	ReturnStatement	return true ;	603:2:16411:16422	1144632	0	True				
ANR	1144677	Identifier	true		1144632	0					
ANR	1144678	ExpressionStatement	"ad -> EvaluateAttrInt ( ""cluster_id"" , cluster_id )"	607:1:16453:16498	1144632	5	True				
ANR	1144679	CallExpression	"ad -> EvaluateAttrInt ( ""cluster_id"" , cluster_id )"		1144632	0					
ANR	1144680	Callee	ad -> EvaluateAttrInt		1144632	0					
ANR	1144681	PtrMemberAccess	ad -> EvaluateAttrInt		1144632	0					
ANR	1144682	Identifier	ad		1144632	0					
ANR	1144683	Identifier	EvaluateAttrInt		1144632	1					
ANR	1144684	ArgumentList	"""cluster_id"""		1144632	1					
ANR	1144685	Argument	"""cluster_id"""		1144632	0					
ANR	1144686	PrimaryExpression	"""cluster_id"""		1144632	0					
ANR	1144687	Argument	cluster_id		1144632	1					
ANR	1144688	Identifier	cluster_id		1144632	0					
ANR	1144689	ExpressionStatement	"ad -> EvaluateAttrInt ( ""proc_id"" , proc_id )"	608:1:16501:16541	1144632	6	True				
ANR	1144690	CallExpression	"ad -> EvaluateAttrInt ( ""proc_id"" , proc_id )"		1144632	0					
ANR	1144691	Callee	ad -> EvaluateAttrInt		1144632	0					
ANR	1144692	PtrMemberAccess	ad -> EvaluateAttrInt		1144632	0					
ANR	1144693	Identifier	ad		1144632	0					
ANR	1144694	Identifier	EvaluateAttrInt		1144632	1					
ANR	1144695	ArgumentList	"""proc_id"""		1144632	1					
ANR	1144696	Argument	"""proc_id"""		1144632	0					
ANR	1144697	PrimaryExpression	"""proc_id"""		1144632	0					
ANR	1144698	Argument	proc_id		1144632	1					
ANR	1144699	Identifier	proc_id		1144632	0					
ANR	1144700	IfStatement	"if ( ! ad -> EvaluateAttrBool ( ""log_xml"" , log_xml ) )"		1144632	7					
ANR	1144701	Condition	"! ad -> EvaluateAttrBool ( ""log_xml"" , log_xml )"	610:6:16550:16590	1144632	0	True				
ANR	1144702	UnaryOperationExpression	"! ad -> EvaluateAttrBool ( ""log_xml"" , log_xml )"		1144632	0					
ANR	1144703	UnaryOperator	!		1144632	0					
ANR	1144704	CallExpression	"ad -> EvaluateAttrBool ( ""log_xml"" , log_xml )"		1144632	1					
ANR	1144705	Callee	ad -> EvaluateAttrBool		1144632	0					
ANR	1144706	PtrMemberAccess	ad -> EvaluateAttrBool		1144632	0					
ANR	1144707	Identifier	ad		1144632	0					
ANR	1144708	Identifier	EvaluateAttrBool		1144632	1					
ANR	1144709	ArgumentList	"""log_xml"""		1144632	1					
ANR	1144710	Argument	"""log_xml"""		1144632	0					
ANR	1144711	PrimaryExpression	"""log_xml"""		1144632	0					
ANR	1144712	Argument	log_xml		1144632	1					
ANR	1144713	Identifier	log_xml		1144632	0					
ANR	1144714	CompoundStatement		19:50:399:399	1144632	1					
ANR	1144715	ExpressionStatement	log_xml = false	611:2:16598:16613	1144632	0	True				
ANR	1144716	AssignmentExpression	log_xml = false		1144632	0		=			
ANR	1144717	Identifier	log_xml		1144632	0					
ANR	1144718	Identifier	false		1144632	1					
ANR	1144719	ExpressionStatement	usr_log . setUseXML ( log_xml )	613:1:16656:16682	1144632	8	True				
ANR	1144720	CallExpression	usr_log . setUseXML ( log_xml )		1144632	0					
ANR	1144721	Callee	usr_log . setUseXML		1144632	0					
ANR	1144722	MemberAccess	usr_log . setUseXML		1144632	0					
ANR	1144723	Identifier	usr_log		1144632	0					
ANR	1144724	Identifier	setUseXML		1144632	1					
ANR	1144725	ArgumentList	log_xml		1144632	1					
ANR	1144726	Argument	log_xml		1144632	0					
ANR	1144727	Identifier	log_xml		1144632	0					
ANR	1144728	IdentifierDeclStatement	std :: string owner ;	615:1:16686:16703	1144632	9	True				
ANR	1144729	IdentifierDecl	owner		1144632	0					
ANR	1144730	IdentifierDeclType	std :: string		1144632	0					
ANR	1144731	Identifier	owner		1144632	1					
ANR	1144732	IfStatement	"if ( ! ad -> EvaluateAttrString ( ""owner"" , owner ) || owner . empty ( ) )"		1144632	10					
ANR	1144733	Condition	"! ad -> EvaluateAttrString ( ""owner"" , owner ) || owner . empty ( )"	616:6:16711:16767	1144632	0	True				
ANR	1144734	OrExpression	"! ad -> EvaluateAttrString ( ""owner"" , owner ) || owner . empty ( )"		1144632	0		||			
ANR	1144735	UnaryOperationExpression	"! ad -> EvaluateAttrString ( ""owner"" , owner )"		1144632	0					
ANR	1144736	UnaryOperator	!		1144632	0					
ANR	1144737	CallExpression	"ad -> EvaluateAttrString ( ""owner"" , owner )"		1144632	1					
ANR	1144738	Callee	ad -> EvaluateAttrString		1144632	0					
ANR	1144739	PtrMemberAccess	ad -> EvaluateAttrString		1144632	0					
ANR	1144740	Identifier	ad		1144632	0					
ANR	1144741	Identifier	EvaluateAttrString		1144632	1					
ANR	1144742	ArgumentList	"""owner"""		1144632	1					
ANR	1144743	Argument	"""owner"""		1144632	0					
ANR	1144744	PrimaryExpression	"""owner"""		1144632	0					
ANR	1144745	Argument	owner		1144632	1					
ANR	1144746	Identifier	owner		1144632	0					
ANR	1144747	CallExpression	owner . empty ( )		1144632	1					
ANR	1144748	Callee	owner . empty		1144632	0					
ANR	1144749	MemberAccess	owner . empty		1144632	0					
ANR	1144750	Identifier	owner		1144632	0					
ANR	1144751	Identifier	empty		1144632	1					
ANR	1144752	ArgumentList			1144632	1					
ANR	1144753	CompoundStatement		25:66:576:576	1144632	1					
ANR	1144754	ExpressionStatement	"dprintf ( D_ALWAYS , ""unable to extract owner to log job %d user log event %d\\n"" , cluster_id , eventNum )"	617:2:16775:16883	1144632	0	True				
ANR	1144755	CallExpression	"dprintf ( D_ALWAYS , ""unable to extract owner to log job %d user log event %d\\n"" , cluster_id , eventNum )"		1144632	0					
ANR	1144756	Callee	dprintf		1144632	0					
ANR	1144757	Identifier	dprintf		1144632	0					
ANR	1144758	ArgumentList	D_ALWAYS		1144632	1					
ANR	1144759	Argument	D_ALWAYS		1144632	0					
ANR	1144760	Identifier	D_ALWAYS		1144632	0					
ANR	1144761	Argument	"""unable to extract owner to log job %d user log event %d\\n"""		1144632	1					
ANR	1144762	PrimaryExpression	"""unable to extract owner to log job %d user log event %d\\n"""		1144632	0					
ANR	1144763	Argument	cluster_id		1144632	2					
ANR	1144764	Identifier	cluster_id		1144632	0					
ANR	1144765	Argument	eventNum		1144632	3					
ANR	1144766	Identifier	eventNum		1144632	0					
ANR	1144767	ReturnStatement	return false ;	620:2:16887:16899	1144632	1	True				
ANR	1144768	Identifier	false		1144632	0					
ANR	1144769	IfStatement	"if ( ! usr_log . initialize ( owner . c_str ( ) , NULL , userLogFile . c_str ( ) , cluster_id , proc_id , - 1 , NULL ) )"		1144632	11					
ANR	1144770	Condition	"! usr_log . initialize ( owner . c_str ( ) , NULL , userLogFile . c_str ( ) , cluster_id , proc_id , - 1 , NULL )"	622:5:16909:17064	1144632	0	True				
ANR	1144771	UnaryOperationExpression	"! usr_log . initialize ( owner . c_str ( ) , NULL , userLogFile . c_str ( ) , cluster_id , proc_id , - 1 , NULL )"		1144632	0					
ANR	1144772	UnaryOperator	!		1144632	0					
ANR	1144773	CallExpression	"usr_log . initialize ( owner . c_str ( ) , NULL , userLogFile . c_str ( ) , cluster_id , proc_id , - 1 , NULL )"		1144632	1					
ANR	1144774	Callee	usr_log . initialize		1144632	0					
ANR	1144775	MemberAccess	usr_log . initialize		1144632	0					
ANR	1144776	Identifier	usr_log		1144632	0					
ANR	1144777	Identifier	initialize		1144632	1					
ANR	1144778	ArgumentList	owner . c_str ( )		1144632	1					
ANR	1144779	Argument	owner . c_str ( )		1144632	0					
ANR	1144780	CallExpression	owner . c_str ( )		1144632	0					
ANR	1144781	Callee	owner . c_str		1144632	0					
ANR	1144782	MemberAccess	owner . c_str		1144632	0					
ANR	1144783	Identifier	owner		1144632	0					
ANR	1144784	Identifier	c_str		1144632	1					
ANR	1144785	ArgumentList			1144632	1					
ANR	1144786	Argument	NULL		1144632	1					
ANR	1144787	Identifier	NULL		1144632	0					
ANR	1144788	Argument	userLogFile . c_str ( )		1144632	2					
ANR	1144789	CallExpression	userLogFile . c_str ( )		1144632	0					
ANR	1144790	Callee	userLogFile . c_str		1144632	0					
ANR	1144791	MemberAccess	userLogFile . c_str		1144632	0					
ANR	1144792	Identifier	userLogFile		1144632	0					
ANR	1144793	Identifier	c_str		1144632	1					
ANR	1144794	ArgumentList			1144632	1					
ANR	1144795	Argument	cluster_id		1144632	3					
ANR	1144796	Identifier	cluster_id		1144632	0					
ANR	1144797	Argument	proc_id		1144632	4					
ANR	1144798	Identifier	proc_id		1144632	0					
ANR	1144799	Argument	- 1		1144632	5					
ANR	1144800	UnaryOperationExpression	- 1		1144632	0					
ANR	1144801	UnaryOperator	-		1144632	0					
ANR	1144802	PrimaryExpression	1		1144632	1					
ANR	1144803	Argument	NULL		1144632	6					
ANR	1144804	Identifier	NULL		1144632	0					
ANR	1144805	CompoundStatement		40:1:876:876	1144632	1					
ANR	1144806	ExpressionStatement	"dprintf ( D_ALWAYS , ""error initializing user log event %d for job %d\\n"" , eventNum , cluster_id )"	632:2:17075:17175	1144632	0	True				
ANR	1144807	CallExpression	"dprintf ( D_ALWAYS , ""error initializing user log event %d for job %d\\n"" , eventNum , cluster_id )"		1144632	0					
ANR	1144808	Callee	dprintf		1144632	0					
ANR	1144809	Identifier	dprintf		1144632	0					
ANR	1144810	ArgumentList	D_ALWAYS		1144632	1					
ANR	1144811	Argument	D_ALWAYS		1144632	0					
ANR	1144812	Identifier	D_ALWAYS		1144632	0					
ANR	1144813	Argument	"""error initializing user log event %d for job %d\\n"""		1144632	1					
ANR	1144814	PrimaryExpression	"""error initializing user log event %d for job %d\\n"""		1144632	0					
ANR	1144815	Argument	eventNum		1144632	2					
ANR	1144816	Identifier	eventNum		1144632	0					
ANR	1144817	Argument	cluster_id		1144632	3					
ANR	1144818	Identifier	cluster_id		1144632	0					
ANR	1144819	ReturnStatement	return false ;	635:2:17179:17191	1144632	1	True				
ANR	1144820	Identifier	false		1144632	0					
ANR	1144821	SwitchStatement	switch ( eventNum )		1144632	12					
ANR	1144822	Condition	eventNum	638:8:17205:17212	1144632	0	True				
ANR	1144823	Identifier	eventNum		1144632	0					
ANR	1144824	CompoundStatement		47:18:1020:1020	1144632	1					
ANR	1144825	Label	case ULOG_SUBMIT :	639:2:17219:17235	1144632	0	True				
ANR	1144826	Identifier	ULOG_SUBMIT		1144632	0					
ANR	1144827	ReturnStatement	"return user_log_submit ( ad , usr_log ) ;"	640:3:17240:17275	1144632	1	True				
ANR	1144828	CallExpression	"user_log_submit ( ad , usr_log )"		1144632	0					
ANR	1144829	Callee	user_log_submit		1144632	0					
ANR	1144830	Identifier	user_log_submit		1144632	0					
ANR	1144831	ArgumentList	ad		1144632	1					
ANR	1144832	Argument	ad		1144632	0					
ANR	1144833	Identifier	ad		1144632	0					
ANR	1144834	Argument	usr_log		1144632	1					
ANR	1144835	Identifier	usr_log		1144632	0					
ANR	1144836	BreakStatement	break ;	641:3:17280:17285	1144632	2	True				
ANR	1144837	Label	case ULOG_EXECUTE :	643:2:17290:17307	1144632	3	True				
ANR	1144838	Identifier	ULOG_EXECUTE		1144632	0					
ANR	1144839	ReturnStatement	"return user_log_execute ( ad , usr_log ) ;"	644:3:17312:17348	1144632	4	True				
ANR	1144840	CallExpression	"user_log_execute ( ad , usr_log )"		1144632	0					
ANR	1144841	Callee	user_log_execute		1144632	0					
ANR	1144842	Identifier	user_log_execute		1144632	0					
ANR	1144843	ArgumentList	ad		1144632	1					
ANR	1144844	Argument	ad		1144632	0					
ANR	1144845	Identifier	ad		1144632	0					
ANR	1144846	Argument	usr_log		1144632	1					
ANR	1144847	Identifier	usr_log		1144632	0					
ANR	1144848	BreakStatement	break ;	645:3:17353:17358	1144632	5	True				
ANR	1144849	Label	case ULOG_JOB_TERMINATED :	647:2:17363:17387	1144632	6	True				
ANR	1144850	Identifier	ULOG_JOB_TERMINATED		1144632	0					
ANR	1144851	ReturnStatement	"return user_log_terminated ( ad , usr_log ) ;"	648:3:17392:17431	1144632	7	True				
ANR	1144852	CallExpression	"user_log_terminated ( ad , usr_log )"		1144632	0					
ANR	1144853	Callee	user_log_terminated		1144632	0					
ANR	1144854	Identifier	user_log_terminated		1144632	0					
ANR	1144855	ArgumentList	ad		1144632	1					
ANR	1144856	Argument	ad		1144632	0					
ANR	1144857	Identifier	ad		1144632	0					
ANR	1144858	Argument	usr_log		1144632	1					
ANR	1144859	Identifier	usr_log		1144632	0					
ANR	1144860	BreakStatement	break ;	649:3:17436:17441	1144632	8	True				
ANR	1144861	Label	case ULOG_JOB_ABORTED :	651:2:17446:17467	1144632	9	True				
ANR	1144862	Identifier	ULOG_JOB_ABORTED		1144632	0					
ANR	1144863	ReturnStatement	"return user_log_aborted ( ad , usr_log ) ;"	652:3:17472:17508	1144632	10	True				
ANR	1144864	CallExpression	"user_log_aborted ( ad , usr_log )"		1144632	0					
ANR	1144865	Callee	user_log_aborted		1144632	0					
ANR	1144866	Identifier	user_log_aborted		1144632	0					
ANR	1144867	ArgumentList	ad		1144632	1					
ANR	1144868	Argument	ad		1144632	0					
ANR	1144869	Identifier	ad		1144632	0					
ANR	1144870	Argument	usr_log		1144632	1					
ANR	1144871	Identifier	usr_log		1144632	0					
ANR	1144872	BreakStatement	break ;	653:3:17513:17518	1144632	11	True				
ANR	1144873	Label	case ULOG_GENERIC :	655:2:17523:17540	1144632	12	True				
ANR	1144874	Identifier	ULOG_GENERIC		1144632	0					
ANR	1144875	ReturnStatement	"return user_log_generic ( ad , usr_log ) ;"	656:3:17545:17581	1144632	13	True				
ANR	1144876	CallExpression	"user_log_generic ( ad , usr_log )"		1144632	0					
ANR	1144877	Callee	user_log_generic		1144632	0					
ANR	1144878	Identifier	user_log_generic		1144632	0					
ANR	1144879	ArgumentList	ad		1144632	1					
ANR	1144880	Argument	ad		1144632	0					
ANR	1144881	Identifier	ad		1144632	0					
ANR	1144882	Argument	usr_log		1144632	1					
ANR	1144883	Identifier	usr_log		1144632	0					
ANR	1144884	BreakStatement	break ;	657:3:17586:17591	1144632	14	True				
ANR	1144885	Label	default :	659:2:17596:17603	1144632	15	True				
ANR	1144886	Identifier	default		1144632	0					
ANR	1144887	ExpressionStatement	"dprintf ( D_ALWAYS , ""job %d write user log for unknown event %d\\n"" , cluster_id , eventNum )"	660:3:17608:17700	1144632	16	True				
ANR	1144888	CallExpression	"dprintf ( D_ALWAYS , ""job %d write user log for unknown event %d\\n"" , cluster_id , eventNum )"		1144632	0					
ANR	1144889	Callee	dprintf		1144632	0					
ANR	1144890	Identifier	dprintf		1144632	0					
ANR	1144891	ArgumentList	D_ALWAYS		1144632	1					
ANR	1144892	Argument	D_ALWAYS		1144632	0					
ANR	1144893	Identifier	D_ALWAYS		1144632	0					
ANR	1144894	Argument	"""job %d write user log for unknown event %d\\n"""		1144632	1					
ANR	1144895	PrimaryExpression	"""job %d write user log for unknown event %d\\n"""		1144632	0					
ANR	1144896	Argument	cluster_id		1144632	2					
ANR	1144897	Identifier	cluster_id		1144632	0					
ANR	1144898	Argument	eventNum		1144632	3					
ANR	1144899	Identifier	eventNum		1144632	0					
ANR	1144900	ReturnStatement	return false ;	662:3:17705:17717	1144632	17	True				
ANR	1144901	Identifier	false		1144632	0					
ANR	1144902	ReturnStatement	return true ;	665:1:17724:17735	1144632	13	True				
ANR	1144903	Identifier	true		1144632	0					
ANR	1144904	ReturnType	bool		1144632	1					
ANR	1144905	Identifier	user_log		1144632	2					
ANR	1144906	ParameterList	"const classad :: ClassAd * ad , const enum ULogEventNumber eventNum"		1144632	3					
ANR	1144907	Parameter	const classad :: ClassAd * ad	590:12:16124:16149	1144632	0	True				
ANR	1144908	ParameterType	const classad :: ClassAd *		1144632	0					
ANR	1144909	Identifier	ad		1144632	1					
ANR	1144910	Parameter	const enum ULogEventNumber eventNum	591:5:16157:16191	1144632	1	True				
ANR	1144911	ParameterType	const enum ULogEventNumber		1144632	0					
ANR	1144912	Identifier	eventNum		1144632	1					
ANR	1144913	CFGEntryNode	ENTRY		1144632		True				
ANR	1144914	CFGExitNode	EXIT		1144632		True				
ANR	1144915	Symbol	ad -> EvaluateAttrBool		1144632						
ANR	1144916	Symbol	user_log_execute		1144632						
ANR	1144917	Symbol	user_log_submit		1144632						
ANR	1144918	Symbol	* ad		1144632						
ANR	1144919	Symbol	userLogFile		1144632						
ANR	1144920	Symbol	user_log_generic		1144632						
ANR	1144921	Symbol	usr_log . initialize		1144632						
ANR	1144922	Symbol	cluster_id		1144632						
ANR	1144923	Symbol	owner . empty		1144632						
ANR	1144924	Symbol	user_log_aborted		1144632						
ANR	1144925	Symbol	userLogFile . c_str		1144632						
ANR	1144926	Symbol	eventNum		1144632						
ANR	1144927	Symbol	owner		1144632						
ANR	1144928	Symbol	ad		1144632						
ANR	1144929	Symbol	NULL		1144632						
ANR	1144930	Symbol	false		1144632						
ANR	1144931	Symbol	D_ALWAYS		1144632						
ANR	1144932	Symbol	proc_id		1144632						
ANR	1144933	Symbol	owner . c_str		1144632						
ANR	1144934	Symbol	usr_log		1144632						
ANR	1144935	Symbol	user_log_terminated		1144632						
ANR	1144936	Symbol	userLogFile . empty		1144632						
ANR	1144937	Symbol	true		1144632						
ANR	1144938	Symbol	ad -> EvaluateAttrString		1144632						
ANR	1144939	Symbol	log_xml		1144632						
