command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4166403	File	data/converged/CVE-2011-4930_htcondor/src_condor_tests_job_ckpt_signals_std.c								
ANR	4166404	DeclStmt									
ANR	4166405	Decl							extern int	extern int ( int )	SetSyscalls
ANR	4166406	DeclStmt									
ANR	4166407	Decl							int	int [ NSIG + 1 ]	sig_array
ANR	4166408	DeclStmt									
ANR	4166409	Decl							void	"void ( int sig , int val )"	mark
ANR	4166410	DeclStmt									
ANR	4166411	Decl							void	"void ( int sig , void ( * handler ) ( int ) )"	catch_sig
ANR	4166412	DeclStmt									
ANR	4166413	Decl							int	int ( )	check_sigs_received
ANR	4166414	DeclStmt									
ANR	4166415	Decl							void	void ( )	display_state
ANR	4166416	Function	handler	44:0:1214:1359							
ANR	4166417	FunctionDef	handler (int sig)		4166416	0					
ANR	4166418	CompoundStatement		45:0:1236:1359	4166416	0					
ANR	4166419	ExpressionStatement	"printf ( ""User signal handler: got signal %d\\n"" , sig )"	46:1:1239:1291	4166416	0	True				
ANR	4166420	CallExpression	"printf ( ""User signal handler: got signal %d\\n"" , sig )"		4166416	0					
ANR	4166421	Callee	printf		4166416	0					
ANR	4166422	Identifier	printf		4166416	0					
ANR	4166423	ArgumentList	"""User signal handler: got signal %d\\n"""		4166416	1					
ANR	4166424	Argument	"""User signal handler: got signal %d\\n"""		4166416	0					
ANR	4166425	PrimaryExpression	"""User signal handler: got signal %d\\n"""		4166416	0					
ANR	4166426	Argument	sig		4166416	1					
ANR	4166427	Identifier	sig		4166416	0					
ANR	4166428	ExpressionStatement	"mark ( sig , RECEIVED )"	47:1:1294:1315	4166416	1	True				
ANR	4166429	CallExpression	"mark ( sig , RECEIVED )"		4166416	0					
ANR	4166430	Callee	mark		4166416	0					
ANR	4166431	Identifier	mark		4166416	0					
ANR	4166432	ArgumentList	sig		4166416	1					
ANR	4166433	Argument	sig		4166416	0					
ANR	4166434	Identifier	sig		4166416	0					
ANR	4166435	Argument	RECEIVED		4166416	1					
ANR	4166436	Identifier	RECEIVED		4166416	0					
ANR	4166437	ExpressionStatement	"printf ( ""Leaving user signal handler\\n"" )"	48:1:1318:1357	4166416	2	True				
ANR	4166438	CallExpression	"printf ( ""Leaving user signal handler\\n"" )"		4166416	0					
ANR	4166439	Callee	printf		4166416	0					
ANR	4166440	Identifier	printf		4166416	0					
ANR	4166441	ArgumentList	"""Leaving user signal handler\\n"""		4166416	1					
ANR	4166442	Argument	"""Leaving user signal handler\\n"""		4166416	0					
ANR	4166443	PrimaryExpression	"""Leaving user signal handler\\n"""		4166416	0					
ANR	4166444	ReturnType	void		4166416	1					
ANR	4166445	Identifier	handler		4166416	2					
ANR	4166446	ParameterList	int sig		4166416	3					
ANR	4166447	Parameter	int sig	44:13:1227:1233	4166416	0	True				
ANR	4166448	ParameterType	int		4166416	0					
ANR	4166449	Identifier	sig		4166416	1					
ANR	4166450	CFGEntryNode	ENTRY		4166416		True				
ANR	4166451	CFGExitNode	EXIT		4166416		True				
ANR	4166452	Symbol	sig		4166416						
ANR	4166453	Symbol	RECEIVED		4166416						
ANR	4166454	Function	block_sig	51:0:1362:1503							
ANR	4166455	FunctionDef	block_sig (int sig)		4166454	0					
ANR	4166456	CompoundStatement		52:0:1388:1503	4166454	0					
ANR	4166457	IdentifierDeclStatement	"sigset_t mask , omask ;"	53:1:1391:1410	4166454	0	True				
ANR	4166458	IdentifierDecl	mask		4166454	0					
ANR	4166459	IdentifierDeclType	sigset_t		4166454	0					
ANR	4166460	Identifier	mask		4166454	1					
ANR	4166461	IdentifierDecl	omask		4166454	1					
ANR	4166462	IdentifierDeclType	sigset_t		4166454	0					
ANR	4166463	Identifier	omask		4166454	1					
ANR	4166464	ExpressionStatement	sigemptyset ( & mask )	54:1:1413:1433	4166454	1	True				
ANR	4166465	CallExpression	sigemptyset ( & mask )		4166454	0					
ANR	4166466	Callee	sigemptyset		4166454	0					
ANR	4166467	Identifier	sigemptyset		4166454	0					
ANR	4166468	ArgumentList	& mask		4166454	1					
ANR	4166469	Argument	& mask		4166454	0					
ANR	4166470	UnaryOperationExpression	& mask		4166454	0					
ANR	4166471	UnaryOperator	&		4166454	0					
ANR	4166472	Identifier	mask		4166454	1					
ANR	4166473	ExpressionStatement	"sigaddset ( & mask , sig )"	55:1:1436:1459	4166454	2	True				
ANR	4166474	CallExpression	"sigaddset ( & mask , sig )"		4166454	0					
ANR	4166475	Callee	sigaddset		4166454	0					
ANR	4166476	Identifier	sigaddset		4166454	0					
ANR	4166477	ArgumentList	& mask		4166454	1					
ANR	4166478	Argument	& mask		4166454	0					
ANR	4166479	UnaryOperationExpression	& mask		4166454	0					
ANR	4166480	UnaryOperator	&		4166454	0					
ANR	4166481	Identifier	mask		4166454	1					
ANR	4166482	Argument	sig		4166454	1					
ANR	4166483	Identifier	sig		4166454	0					
ANR	4166484	ExpressionStatement	"sigprocmask ( SIG_BLOCK , & mask , & omask )"	56:1:1462:1501	4166454	3	True				
ANR	4166485	CallExpression	"sigprocmask ( SIG_BLOCK , & mask , & omask )"		4166454	0					
ANR	4166486	Callee	sigprocmask		4166454	0					
ANR	4166487	Identifier	sigprocmask		4166454	0					
ANR	4166488	ArgumentList	SIG_BLOCK		4166454	1					
ANR	4166489	Argument	SIG_BLOCK		4166454	0					
ANR	4166490	Identifier	SIG_BLOCK		4166454	0					
ANR	4166491	Argument	& mask		4166454	1					
ANR	4166492	UnaryOperationExpression	& mask		4166454	0					
ANR	4166493	UnaryOperator	&		4166454	0					
ANR	4166494	Identifier	mask		4166454	1					
ANR	4166495	Argument	& omask		4166454	2					
ANR	4166496	UnaryOperationExpression	& omask		4166454	0					
ANR	4166497	UnaryOperator	&		4166454	0					
ANR	4166498	Identifier	omask		4166454	1					
ANR	4166499	ReturnType	void		4166454	1					
ANR	4166500	Identifier	block_sig		4166454	2					
ANR	4166501	ParameterList	int sig		4166454	3					
ANR	4166502	Parameter	int sig	51:16:1378:1384	4166454	0	True				
ANR	4166503	ParameterType	int		4166454	0					
ANR	4166504	Identifier	sig		4166454	1					
ANR	4166505	CFGEntryNode	ENTRY		4166454		True				
ANR	4166506	CFGExitNode	EXIT		4166454		True				
ANR	4166507	Symbol	sig		4166454						
ANR	4166508	Symbol	omask		4166454						
ANR	4166509	Symbol	& omask		4166454						
ANR	4166510	Symbol	& mask		4166454						
ANR	4166511	Symbol	SIG_BLOCK		4166454						
ANR	4166512	Symbol	mask		4166454						
ANR	4166513	Function	unblock_sig	59:0:1506:1651							
ANR	4166514	FunctionDef	unblock_sig (int sig)		4166513	0					
ANR	4166515	CompoundStatement		60:0:1534:1651	4166513	0					
ANR	4166516	IdentifierDeclStatement	"sigset_t mask , omask ;"	61:1:1537:1556	4166513	0	True				
ANR	4166517	IdentifierDecl	mask		4166513	0					
ANR	4166518	IdentifierDeclType	sigset_t		4166513	0					
ANR	4166519	Identifier	mask		4166513	1					
ANR	4166520	IdentifierDecl	omask		4166513	1					
ANR	4166521	IdentifierDeclType	sigset_t		4166513	0					
ANR	4166522	Identifier	omask		4166513	1					
ANR	4166523	ExpressionStatement	sigemptyset ( & mask )	62:1:1559:1579	4166513	1	True				
ANR	4166524	CallExpression	sigemptyset ( & mask )		4166513	0					
ANR	4166525	Callee	sigemptyset		4166513	0					
ANR	4166526	Identifier	sigemptyset		4166513	0					
ANR	4166527	ArgumentList	& mask		4166513	1					
ANR	4166528	Argument	& mask		4166513	0					
ANR	4166529	UnaryOperationExpression	& mask		4166513	0					
ANR	4166530	UnaryOperator	&		4166513	0					
ANR	4166531	Identifier	mask		4166513	1					
ANR	4166532	ExpressionStatement	"sigaddset ( & mask , sig )"	63:1:1582:1605	4166513	2	True				
ANR	4166533	CallExpression	"sigaddset ( & mask , sig )"		4166513	0					
ANR	4166534	Callee	sigaddset		4166513	0					
ANR	4166535	Identifier	sigaddset		4166513	0					
ANR	4166536	ArgumentList	& mask		4166513	1					
ANR	4166537	Argument	& mask		4166513	0					
ANR	4166538	UnaryOperationExpression	& mask		4166513	0					
ANR	4166539	UnaryOperator	&		4166513	0					
ANR	4166540	Identifier	mask		4166513	1					
ANR	4166541	Argument	sig		4166513	1					
ANR	4166542	Identifier	sig		4166513	0					
ANR	4166543	ExpressionStatement	"sigprocmask ( SIG_UNBLOCK , & mask , & omask )"	64:1:1608:1649	4166513	3	True				
ANR	4166544	CallExpression	"sigprocmask ( SIG_UNBLOCK , & mask , & omask )"		4166513	0					
ANR	4166545	Callee	sigprocmask		4166513	0					
ANR	4166546	Identifier	sigprocmask		4166513	0					
ANR	4166547	ArgumentList	SIG_UNBLOCK		4166513	1					
ANR	4166548	Argument	SIG_UNBLOCK		4166513	0					
ANR	4166549	Identifier	SIG_UNBLOCK		4166513	0					
ANR	4166550	Argument	& mask		4166513	1					
ANR	4166551	UnaryOperationExpression	& mask		4166513	0					
ANR	4166552	UnaryOperator	&		4166513	0					
ANR	4166553	Identifier	mask		4166513	1					
ANR	4166554	Argument	& omask		4166513	2					
ANR	4166555	UnaryOperationExpression	& omask		4166513	0					
ANR	4166556	UnaryOperator	&		4166513	0					
ANR	4166557	Identifier	omask		4166513	1					
ANR	4166558	ReturnType	void		4166513	1					
ANR	4166559	Identifier	unblock_sig		4166513	2					
ANR	4166560	ParameterList	int sig		4166513	3					
ANR	4166561	Parameter	int sig	59:18:1524:1530	4166513	0	True				
ANR	4166562	ParameterType	int		4166513	0					
ANR	4166563	Identifier	sig		4166513	1					
ANR	4166564	CFGEntryNode	ENTRY		4166513		True				
ANR	4166565	CFGExitNode	EXIT		4166513		True				
ANR	4166566	Symbol	sig		4166513						
ANR	4166567	Symbol	omask		4166513						
ANR	4166568	Symbol	SIG_UNBLOCK		4166513						
ANR	4166569	Symbol	& omask		4166513						
ANR	4166570	Symbol	& mask		4166513						
ANR	4166571	Symbol	mask		4166513						
ANR	4166572	Function	main	67:0:1654:2889							
ANR	4166573	FunctionDef	main ()		4166572	0					
ANR	4166574	CompoundStatement		69:0:1665:2889	4166572	0					
ANR	4166575	IdentifierDeclStatement	int sig ;	70:1:1668:1675	4166572	0	True				
ANR	4166576	IdentifierDecl	sig		4166572	0					
ANR	4166577	IdentifierDeclType	int		4166572	0					
ANR	4166578	Identifier	sig		4166572	1					
ANR	4166579	IdentifierDeclStatement	pid_t pid ;	71:1:1678:1687	4166572	1	True				
ANR	4166580	IdentifierDecl	pid		4166572	0					
ANR	4166581	IdentifierDeclType	pid_t		4166572	0					
ANR	4166582	Identifier	pid		4166572	1					
ANR	4166583	ExpressionStatement	pid = getpid ( )	73:1:1691:1705	4166572	2	True				
ANR	4166584	AssignmentExpression	pid = getpid ( )		4166572	0		=			
ANR	4166585	Identifier	pid		4166572	0					
ANR	4166586	CallExpression	getpid ( )		4166572	1					
ANR	4166587	Callee	getpid		4166572	0					
ANR	4166588	Identifier	getpid		4166572	0					
ANR	4166589	ArgumentList			4166572	1					
ANR	4166590	ForStatement	for ( sig = 1 ; sig < NSIG ; sig ++ )		4166572	3					
ANR	4166591	ForInit	sig = 1 ;	77:6:1806:1811	4166572	0	True				
ANR	4166592	AssignmentExpression	sig = 1		4166572	0		=			
ANR	4166593	Identifier	sig		4166572	0					
ANR	4166594	PrimaryExpression	1		4166572	1					
ANR	4166595	Condition	sig < NSIG	77:13:1813:1822	4166572	1	True				
ANR	4166596	RelationalExpression	sig < NSIG		4166572	0		<			
ANR	4166597	Identifier	sig		4166572	0					
ANR	4166598	Identifier	NSIG		4166572	1					
ANR	4166599	PostIncDecOperationExpression	sig ++	77:25:1825:1829	4166572	2	True				
ANR	4166600	Identifier	sig		4166572	0					
ANR	4166601	IncDec	++		4166572	1					
ANR	4166602	CompoundStatement		9:33:167:167	4166572	3					
ANR	4166603	SwitchStatement	switch ( sig )		4166572	0					
ANR	4166604	Condition	sig	78:10:1845:1847	4166572	0	True				
ANR	4166605	Identifier	sig		4166572	0					
ANR	4166606	CompoundStatement		10:16:185:185	4166572	1					
ANR	4166607	Label	case SIGQUIT :	81:3:1894:1906	4166572	0	True				
ANR	4166608	Identifier	SIGQUIT		4166572	0					
ANR	4166609	Label	case SIGUSR1 :	82:3:1911:1923	4166572	1	True				
ANR	4166610	Identifier	SIGUSR1		4166572	0					
ANR	4166611	Label	case SIGUSR2 :	83:3:1928:1940	4166572	2	True				
ANR	4166612	Identifier	SIGUSR2		4166572	0					
ANR	4166613	Label	case SIGTSTP :	84:3:1945:1957	4166572	3	True				
ANR	4166614	Identifier	SIGTSTP		4166572	0					
ANR	4166615	ContinueStatement	continue ;	85:4:1964:1972	4166572	4	True				
ANR	4166616	Label	case SIGKILL :	88:3:2015:2027	4166572	5	True				
ANR	4166617	Identifier	SIGKILL		4166572	0					
ANR	4166618	Label	case SIGSTOP :	89:3:2032:2044	4166572	6	True				
ANR	4166619	Identifier	SIGSTOP		4166572	0					
ANR	4166620	ContinueStatement	continue ;	90:4:2050:2058	4166572	7	True				
ANR	4166621	Label	case SIGCONT :	93:3:2089:2101	4166572	8	True				
ANR	4166622	Identifier	SIGCONT		4166572	0					
ANR	4166623	Label	case SIGTRAP :	94:3:2106:2118	4166572	9	True				
ANR	4166624	Identifier	SIGTRAP		4166572	0					
ANR	4166625	ContinueStatement	continue ;	95:4:2124:2132	4166572	10	True				
ANR	4166626	Label	case _SIGRESERVE :	97:3:2149:2165	4166572	11	True				
ANR	4166627	Identifier	_SIGRESERVE		4166572	0					
ANR	4166628	Label	case _SIGDIL :	98:3:2170:2182	4166572	12	True				
ANR	4166629	Identifier	_SIGDIL		4166572	0					
ANR	4166630	Label	case _SIGXCPU :	99:3:2187:2200	4166572	13	True				
ANR	4166631	Identifier	_SIGXCPU		4166572	0					
ANR	4166632	Label	case _SIGXFSZ :	100:3:2205:2218	4166572	14	True				
ANR	4166633	Identifier	_SIGXFSZ		4166572	0					
ANR	4166634	ContinueStatement	continue ;	101:4:2224:2232	4166572	15	True				
ANR	4166635	IfStatement	if ( sig >= 32 )		4166572	1					
ANR	4166636	Condition	sig >= 32	108:7:2433:2439	4166572	0	True				
ANR	4166637	RelationalExpression	sig >= 32		4166572	0		>=			
ANR	4166638	Identifier	sig		4166572	0					
ANR	4166639	PrimaryExpression	32		4166572	1					
ANR	4166640	ContinueStatement	continue ;	108:17:2443:2451	4166572	1	True				
ANR	4166641	ExpressionStatement	"catch_sig ( sig , handler )"	111:2:2465:2490	4166572	2	True				
ANR	4166642	CallExpression	"catch_sig ( sig , handler )"		4166572	0					
ANR	4166643	Callee	catch_sig		4166572	0					
ANR	4166644	Identifier	catch_sig		4166572	0					
ANR	4166645	ArgumentList	sig		4166572	1					
ANR	4166646	Argument	sig		4166572	0					
ANR	4166647	Identifier	sig		4166572	0					
ANR	4166648	Argument	handler		4166572	1					
ANR	4166649	Identifier	handler		4166572	0					
ANR	4166650	ExpressionStatement	block_sig ( sig )	112:2:2494:2510	4166572	3	True				
ANR	4166651	CallExpression	block_sig ( sig )		4166572	0					
ANR	4166652	Callee	block_sig		4166572	0					
ANR	4166653	Identifier	block_sig		4166572	0					
ANR	4166654	ArgumentList	sig		4166572	1					
ANR	4166655	Argument	sig		4166572	0					
ANR	4166656	Identifier	sig		4166572	0					
ANR	4166657	ExpressionStatement	"kill ( pid , sig )"	113:2:2514:2530	4166572	4	True				
ANR	4166658	CallExpression	"kill ( pid , sig )"		4166572	0					
ANR	4166659	Callee	kill		4166572	0					
ANR	4166660	Identifier	kill		4166572	0					
ANR	4166661	ArgumentList	pid		4166572	1					
ANR	4166662	Argument	pid		4166572	0					
ANR	4166663	Identifier	pid		4166572	0					
ANR	4166664	Argument	sig		4166572	1					
ANR	4166665	Identifier	sig		4166572	0					
ANR	4166666	ExpressionStatement	"mark ( sig , SENT )"	114:2:2535:2552	4166572	5	True				
ANR	4166667	CallExpression	"mark ( sig , SENT )"		4166572	0					
ANR	4166668	Callee	mark		4166572	0					
ANR	4166669	Identifier	mark		4166572	0					
ANR	4166670	ArgumentList	sig		4166572	1					
ANR	4166671	Argument	sig		4166572	0					
ANR	4166672	Identifier	sig		4166572	0					
ANR	4166673	Argument	SENT		4166572	1					
ANR	4166674	Identifier	SENT		4166572	0					
ANR	4166675	ExpressionStatement	ckpt_and_exit ( )	118:1:2590:2605	4166572	4	True				
ANR	4166676	CallExpression	ckpt_and_exit ( )		4166572	0					
ANR	4166677	Callee	ckpt_and_exit		4166572	0					
ANR	4166678	Identifier	ckpt_and_exit		4166572	0					
ANR	4166679	ArgumentList			4166572	1					
ANR	4166680	ExpressionStatement	display_state ( )	120:1:2609:2624	4166572	5	True				
ANR	4166681	CallExpression	display_state ( )		4166572	0					
ANR	4166682	Callee	display_state		4166572	0					
ANR	4166683	Identifier	display_state		4166572	0					
ANR	4166684	ArgumentList			4166572	1					
ANR	4166685	ExpressionStatement	"printf ( ""About to unblock all signals\\n"" )"	123:1:2661:2703	4166572	6	True				
ANR	4166686	CallExpression	"printf ( ""About to unblock all signals\\n"" )"		4166572	0					
ANR	4166687	Callee	printf		4166572	0					
ANR	4166688	Identifier	printf		4166572	0					
ANR	4166689	ArgumentList	"""About to unblock all signals\\n"""		4166572	1					
ANR	4166690	Argument	"""About to unblock all signals\\n"""		4166572	0					
ANR	4166691	PrimaryExpression	"""About to unblock all signals\\n"""		4166572	0					
ANR	4166692	ExpressionStatement	fflush ( stdout )	124:1:2706:2722	4166572	7	True				
ANR	4166693	CallExpression	fflush ( stdout )		4166572	0					
ANR	4166694	Callee	fflush		4166572	0					
ANR	4166695	Identifier	fflush		4166572	0					
ANR	4166696	ArgumentList	stdout		4166572	1					
ANR	4166697	Argument	stdout		4166572	0					
ANR	4166698	Identifier	stdout		4166572	0					
ANR	4166699	ForStatement	for ( sig = 1 ; sig < NSIG ; sig ++ )		4166572	8					
ANR	4166700	ForInit	sig = 1 ;	126:6:2731:2736	4166572	0	True				
ANR	4166701	AssignmentExpression	sig = 1		4166572	0		=			
ANR	4166702	Identifier	sig		4166572	0					
ANR	4166703	PrimaryExpression	1		4166572	1					
ANR	4166704	Condition	sig < NSIG	126:13:2738:2747	4166572	1	True				
ANR	4166705	RelationalExpression	sig < NSIG		4166572	0		<			
ANR	4166706	Identifier	sig		4166572	0					
ANR	4166707	Identifier	NSIG		4166572	1					
ANR	4166708	PostIncDecOperationExpression	sig ++	126:25:2750:2754	4166572	2	True				
ANR	4166709	Identifier	sig		4166572	0					
ANR	4166710	IncDec	++		4166572	1					
ANR	4166711	CompoundStatement		58:32:1091:1091	4166572	3					
ANR	4166712	ExpressionStatement	unblock_sig ( sig )	127:2:2761:2779	4166572	0	True				
ANR	4166713	CallExpression	unblock_sig ( sig )		4166572	0					
ANR	4166714	Callee	unblock_sig		4166572	0					
ANR	4166715	Identifier	unblock_sig		4166572	0					
ANR	4166716	ArgumentList	sig		4166572	1					
ANR	4166717	Argument	sig		4166572	0					
ANR	4166718	Identifier	sig		4166572	0					
ANR	4166719	IfStatement	if ( check_sigs_received ( ) )		4166572	9					
ANR	4166720	Condition	check_sigs_received ( )	131:5:2824:2844	4166572	0	True				
ANR	4166721	CallExpression	check_sigs_received ( )		4166572	0					
ANR	4166722	Callee	check_sigs_received		4166572	0					
ANR	4166723	Identifier	check_sigs_received		4166572	0					
ANR	4166724	ArgumentList			4166572	1					
ANR	4166725	CompoundStatement		63:29:1182:1182	4166572	1					
ANR	4166726	ExpressionStatement	exit ( 0 )	132:2:2852:2861	4166572	0	True				
ANR	4166727	CallExpression	exit ( 0 )		4166572	0					
ANR	4166728	Callee	exit		4166572	0					
ANR	4166729	Identifier	exit		4166572	0					
ANR	4166730	ArgumentList	0		4166572	1					
ANR	4166731	Argument	0		4166572	0					
ANR	4166732	PrimaryExpression	0		4166572	0					
ANR	4166733	ElseStatement	else		4166572	0					
ANR	4166734	CompoundStatement		65:8:1205:1205	4166572	0					
ANR	4166735	ExpressionStatement	exit ( 1 )	134:2:2875:2884	4166572	0	True				
ANR	4166736	CallExpression	exit ( 1 )		4166572	0					
ANR	4166737	Callee	exit		4166572	0					
ANR	4166738	Identifier	exit		4166572	0					
ANR	4166739	ArgumentList	1		4166572	1					
ANR	4166740	Argument	1		4166572	0					
ANR	4166741	PrimaryExpression	1		4166572	0					
ANR	4166742	ReturnType	int		4166572	1					
ANR	4166743	Identifier	main		4166572	2					
ANR	4166744	ParameterList			4166572	3					
ANR	4166745	CFGEntryNode	ENTRY		4166572		True				
ANR	4166746	CFGExitNode	EXIT		4166572		True				
ANR	4166747	Symbol	sig		4166572						
ANR	4166748	Symbol	handler		4166572						
ANR	4166749	Symbol	stdout		4166572						
ANR	4166750	Symbol	check_sigs_received		4166572						
ANR	4166751	Symbol	NSIG		4166572						
ANR	4166752	Symbol	pid		4166572						
ANR	4166753	Symbol	getpid		4166572						
ANR	4166754	Symbol	SENT		4166572						
ANR	4166755	Function	mark	139:0:2893:3406							
ANR	4166756	FunctionDef	"mark (int sig , int val)"		4166755	0					
ANR	4166757	CompoundStatement		140:0:2923:3406	4166755	0					
ANR	4166758	SwitchStatement	switch ( val )		4166755	0					
ANR	4166759	Condition	val	144:9:2980:2982	4166755	0	True				
ANR	4166760	Identifier	val		4166755	0					
ANR	4166761	CompoundStatement		5:15:62:62	4166755	1					
ANR	4166762	Label	case SENT :	145:2:2990:2999	4166755	0	True				
ANR	4166763	Identifier	SENT		4166755	0					
ANR	4166764	IfStatement	if ( sig_array [ sig ] != 0 )		4166755	1					
ANR	4166765	Condition	sig_array [ sig ] != 0	146:7:3008:3028	4166755	0	True				
ANR	4166766	EqualityExpression	sig_array [ sig ] != 0		4166755	0		!=			
ANR	4166767	ArrayIndexing	sig_array [ sig ]		4166755	0					
ANR	4166768	Identifier	sig_array		4166755	0					
ANR	4166769	Identifier	sig		4166755	1					
ANR	4166770	PrimaryExpression	0		4166755	1					
ANR	4166771	CompoundStatement		7:31:108:108	4166755	1					
ANR	4166772	ExpressionStatement	"fprintf ( stderr , ""Signal %d sent twice\\n"" , sig )"	147:4:3038:3086	4166755	0	True				
ANR	4166773	CallExpression	"fprintf ( stderr , ""Signal %d sent twice\\n"" , sig )"		4166755	0					
ANR	4166774	Callee	fprintf		4166755	0					
ANR	4166775	Identifier	fprintf		4166755	0					
ANR	4166776	ArgumentList	stderr		4166755	1					
ANR	4166777	Argument	stderr		4166755	0					
ANR	4166778	Identifier	stderr		4166755	0					
ANR	4166779	Argument	"""Signal %d sent twice\\n"""		4166755	1					
ANR	4166780	PrimaryExpression	"""Signal %d sent twice\\n"""		4166755	0					
ANR	4166781	Argument	sig		4166755	2					
ANR	4166782	Identifier	sig		4166755	0					
ANR	4166783	ExpressionStatement	abort ( )	148:4:3092:3099	4166755	1	True				
ANR	4166784	CallExpression	abort ( )		4166755	0					
ANR	4166785	Callee	abort		4166755	0					
ANR	4166786	Identifier	abort		4166755	0					
ANR	4166787	ArgumentList			4166755	1					
ANR	4166788	BreakStatement	break ;	150:3:3109:3114	4166755	2	True				
ANR	4166789	Label	case RECEIVED :	151:2:3118:3131	4166755	3	True				
ANR	4166790	Identifier	RECEIVED		4166755	0					
ANR	4166791	IfStatement	if ( sig_array [ sig ] == 0 )		4166755	4					
ANR	4166792	Condition	sig_array [ sig ] == 0	152:7:3140:3160	4166755	0	True				
ANR	4166793	EqualityExpression	sig_array [ sig ] == 0		4166755	0		==			
ANR	4166794	ArrayIndexing	sig_array [ sig ]		4166755	0					
ANR	4166795	Identifier	sig_array		4166755	0					
ANR	4166796	Identifier	sig		4166755	1					
ANR	4166797	PrimaryExpression	0		4166755	1					
ANR	4166798	CompoundStatement		13:31:240:240	4166755	1					
ANR	4166799	ExpressionStatement	"fprintf ( stderr , ""Signal %d received, but never sent\\n"" , sig )"	153:4:3170:3232	4166755	0	True				
ANR	4166800	CallExpression	"fprintf ( stderr , ""Signal %d received, but never sent\\n"" , sig )"		4166755	0					
ANR	4166801	Callee	fprintf		4166755	0					
ANR	4166802	Identifier	fprintf		4166755	0					
ANR	4166803	ArgumentList	stderr		4166755	1					
ANR	4166804	Argument	stderr		4166755	0					
ANR	4166805	Identifier	stderr		4166755	0					
ANR	4166806	Argument	"""Signal %d received, but never sent\\n"""		4166755	1					
ANR	4166807	PrimaryExpression	"""Signal %d received, but never sent\\n"""		4166755	0					
ANR	4166808	Argument	sig		4166755	2					
ANR	4166809	Identifier	sig		4166755	0					
ANR	4166810	ExpressionStatement	abort ( )	154:4:3238:3245	4166755	1	True				
ANR	4166811	CallExpression	abort ( )		4166755	0					
ANR	4166812	Callee	abort		4166755	0					
ANR	4166813	Identifier	abort		4166755	0					
ANR	4166814	ArgumentList			4166755	1					
ANR	4166815	IfStatement	if ( sig_array [ sig ] == RECEIVED )		4166755	5					
ANR	4166816	Condition	sig_array [ sig ] == RECEIVED	156:7:3259:3286	4166755	0	True				
ANR	4166817	EqualityExpression	sig_array [ sig ] == RECEIVED		4166755	0		==			
ANR	4166818	ArrayIndexing	sig_array [ sig ]		4166755	0					
ANR	4166819	Identifier	sig_array		4166755	0					
ANR	4166820	Identifier	sig		4166755	1					
ANR	4166821	Identifier	RECEIVED		4166755	1					
ANR	4166822	CompoundStatement		17:38:366:366	4166755	1					
ANR	4166823	ExpressionStatement	"fprintf ( stderr , ""Signal %d received twice\\n"" , sig )"	157:4:3296:3348	4166755	0	True				
ANR	4166824	CallExpression	"fprintf ( stderr , ""Signal %d received twice\\n"" , sig )"		4166755	0					
ANR	4166825	Callee	fprintf		4166755	0					
ANR	4166826	Identifier	fprintf		4166755	0					
ANR	4166827	ArgumentList	stderr		4166755	1					
ANR	4166828	Argument	stderr		4166755	0					
ANR	4166829	Identifier	stderr		4166755	0					
ANR	4166830	Argument	"""Signal %d received twice\\n"""		4166755	1					
ANR	4166831	PrimaryExpression	"""Signal %d received twice\\n"""		4166755	0					
ANR	4166832	Argument	sig		4166755	2					
ANR	4166833	Identifier	sig		4166755	0					
ANR	4166834	ExpressionStatement	abort ( )	158:4:3354:3361	4166755	1	True				
ANR	4166835	CallExpression	abort ( )		4166755	0					
ANR	4166836	Callee	abort		4166755	0					
ANR	4166837	Identifier	abort		4166755	0					
ANR	4166838	ArgumentList			4166755	1					
ANR	4166839	BreakStatement	break ;	160:3:3371:3376	4166755	6	True				
ANR	4166840	ExpressionStatement	sig_array [ sig ] = val	162:1:3382:3404	4166755	1	True				
ANR	4166841	AssignmentExpression	sig_array [ sig ] = val		4166755	0		=			
ANR	4166842	ArrayIndexing	sig_array [ sig ]		4166755	0					
ANR	4166843	Identifier	sig_array		4166755	0					
ANR	4166844	Identifier	sig		4166755	1					
ANR	4166845	Identifier	val		4166755	1					
ANR	4166846	ReturnType	void		4166755	1					
ANR	4166847	Identifier	mark		4166755	2					
ANR	4166848	ParameterList	"int sig , int val"		4166755	3					
ANR	4166849	Parameter	int sig	139:11:2904:2910	4166755	0	True				
ANR	4166850	ParameterType	int		4166755	0					
ANR	4166851	Identifier	sig		4166755	1					
ANR	4166852	Parameter	int val	139:20:2913:2919	4166755	1	True				
ANR	4166853	ParameterType	int		4166755	0					
ANR	4166854	Identifier	val		4166755	1					
ANR	4166855	CFGEntryNode	ENTRY		4166755		True				
ANR	4166856	CFGExitNode	EXIT		4166755		True				
ANR	4166857	Symbol	sig		4166755						
ANR	4166858	Symbol	val		4166755						
ANR	4166859	Symbol	RECEIVED		4166755						
ANR	4166860	Symbol	* sig_array		4166755						
ANR	4166861	Symbol	sig_array		4166755						
ANR	4166862	Symbol	* sig		4166755						
ANR	4166863	Symbol	stderr		4166755						
ANR	4166864	Function	check_sigs_received	165:0:3409:3811							
ANR	4166865	FunctionDef	check_sigs_received ()		4166864	0					
ANR	4166866	CompoundStatement		166:0:3435:3811	4166864	0					
ANR	4166867	IdentifierDeclStatement	int i ;	167:1:3438:3444	4166864	0	True				
ANR	4166868	IdentifierDecl	i		4166864	0					
ANR	4166869	IdentifierDeclType	int		4166864	0					
ANR	4166870	Identifier	i		4166864	1					
ANR	4166871	IdentifierDeclStatement	int ok = 1 ;	168:1:3447:3458	4166864	1	True				
ANR	4166872	IdentifierDecl	ok = 1		4166864	0					
ANR	4166873	IdentifierDeclType	int		4166864	0					
ANR	4166874	Identifier	ok		4166864	1					
ANR	4166875	AssignmentExpression	ok = 1		4166864	2		=			
ANR	4166876	Identifier	ok		4166864	0					
ANR	4166877	PrimaryExpression	1		4166864	1					
ANR	4166878	ExpressionStatement	"printf ( ""About to check to see if all signals < 33 received.\\n"" )"	170:1:3462:3525	4166864	2	True				
ANR	4166879	CallExpression	"printf ( ""About to check to see if all signals < 33 received.\\n"" )"		4166864	0					
ANR	4166880	Callee	printf		4166864	0					
ANR	4166881	Identifier	printf		4166864	0					
ANR	4166882	ArgumentList	"""About to check to see if all signals < 33 received.\\n"""		4166864	1					
ANR	4166883	Argument	"""About to check to see if all signals < 33 received.\\n"""		4166864	0					
ANR	4166884	PrimaryExpression	"""About to check to see if all signals < 33 received.\\n"""		4166864	0					
ANR	4166885	ExpressionStatement	"printf ( ""Any signal > 32 is usually not important...\\n"" )"	171:1:3528:3583	4166864	3	True				
ANR	4166886	CallExpression	"printf ( ""Any signal > 32 is usually not important...\\n"" )"		4166864	0					
ANR	4166887	Callee	printf		4166864	0					
ANR	4166888	Identifier	printf		4166864	0					
ANR	4166889	ArgumentList	"""Any signal > 32 is usually not important...\\n"""		4166864	1					
ANR	4166890	Argument	"""Any signal > 32 is usually not important...\\n"""		4166864	0					
ANR	4166891	PrimaryExpression	"""Any signal > 32 is usually not important...\\n"""		4166864	0					
ANR	4166892	ForStatement	for ( i = 1 ; i < NSIG ; i ++ )		4166864	4					
ANR	4166893	ForInit	i = 1 ;	172:6:3591:3594	4166864	0	True				
ANR	4166894	AssignmentExpression	i = 1		4166864	0		=			
ANR	4166895	Identifier	i		4166864	0					
ANR	4166896	PrimaryExpression	1		4166864	1					
ANR	4166897	Condition	i < NSIG	172:11:3596:3601	4166864	1	True				
ANR	4166898	RelationalExpression	i < NSIG		4166864	0		<			
ANR	4166899	Identifier	i		4166864	0					
ANR	4166900	Identifier	NSIG		4166864	1					
ANR	4166901	PostIncDecOperationExpression	i ++	172:19:3604:3606	4166864	2	True				
ANR	4166902	Identifier	i		4166864	0					
ANR	4166903	IncDec	++		4166864	1					
ANR	4166904	CompoundStatement		7:25:174:174	4166864	3					
ANR	4166905	IfStatement	if ( sig_array [ i ] == SENT )		4166864	0					
ANR	4166906	Condition	sig_array [ i ] == SENT	173:6:3618:3637	4166864	0	True				
ANR	4166907	EqualityExpression	sig_array [ i ] == SENT		4166864	0		==			
ANR	4166908	ArrayIndexing	sig_array [ i ]		4166864	0					
ANR	4166909	Identifier	sig_array		4166864	0					
ANR	4166910	Identifier	i		4166864	1					
ANR	4166911	Identifier	SENT		4166864	1					
ANR	4166912	CompoundStatement		8:29:205:205	4166864	1					
ANR	4166913	ExpressionStatement	"printf ( ""Signal %d sent, but never received\\n"" , i )"	174:4:3647:3698	4166864	0	True				
ANR	4166914	CallExpression	"printf ( ""Signal %d sent, but never received\\n"" , i )"		4166864	0					
ANR	4166915	Callee	printf		4166864	0					
ANR	4166916	Identifier	printf		4166864	0					
ANR	4166917	ArgumentList	"""Signal %d sent, but never received\\n"""		4166864	1					
ANR	4166918	Argument	"""Signal %d sent, but never received\\n"""		4166864	0					
ANR	4166919	PrimaryExpression	"""Signal %d sent, but never received\\n"""		4166864	0					
ANR	4166920	Argument	i		4166864	1					
ANR	4166921	Identifier	i		4166864	0					
ANR	4166922	IfStatement	if ( i < 33 )		4166864	1					
ANR	4166923	Condition	i < 33	175:7:3707:3712	4166864	0	True				
ANR	4166924	RelationalExpression	i < 33		4166864	0		<			
ANR	4166925	Identifier	i		4166864	0					
ANR	4166926	PrimaryExpression	33		4166864	1					
ANR	4166927	CompoundStatement		10:15:279:279	4166864	1					
ANR	4166928	ExpressionStatement	ok = 0	176:4:3721:3727	4166864	0	True				
ANR	4166929	AssignmentExpression	ok = 0		4166864	0		=			
ANR	4166930	Identifier	ok		4166864	0					
ANR	4166931	PrimaryExpression	0		4166864	1					
ANR	4166932	IfStatement	if ( ok )		4166864	5					
ANR	4166933	Condition	ok	180:5:3746:3747	4166864	0	True				
ANR	4166934	Identifier	ok		4166864	0					
ANR	4166935	CompoundStatement		15:10:315:315	4166864	1					
ANR	4166936	ExpressionStatement	"printf ( ""All signals < 32 received\\n"" )"	181:2:3755:3794	4166864	0	True				
ANR	4166937	CallExpression	"printf ( ""All signals < 32 received\\n"" )"		4166864	0					
ANR	4166938	Callee	printf		4166864	0					
ANR	4166939	Identifier	printf		4166864	0					
ANR	4166940	ArgumentList	"""All signals < 32 received\\n"""		4166864	1					
ANR	4166941	Argument	"""All signals < 32 received\\n"""		4166864	0					
ANR	4166942	PrimaryExpression	"""All signals < 32 received\\n"""		4166864	0					
ANR	4166943	ReturnStatement	return ok ;	183:1:3800:3809	4166864	6	True				
ANR	4166944	Identifier	ok		4166864	0					
ANR	4166945	ReturnType	int		4166864	1					
ANR	4166946	Identifier	check_sigs_received		4166864	2					
ANR	4166947	ParameterList			4166864	3					
ANR	4166948	CFGEntryNode	ENTRY		4166864		True				
ANR	4166949	CFGExitNode	EXIT		4166864		True				
ANR	4166950	Symbol	* sig_array		4166864						
ANR	4166951	Symbol	* i		4166864						
ANR	4166952	Symbol	NSIG		4166864						
ANR	4166953	Symbol	sig_array		4166864						
ANR	4166954	Symbol	i		4166864						
ANR	4166955	Symbol	ok		4166864						
ANR	4166956	Symbol	SENT		4166864						
ANR	4166957	Function	catch_sig	186:0:3814:4100							
ANR	4166958	FunctionDef	"catch_sig (int sig , void ( * handler ) ( int ))"		4166957	0					
ANR	4166959	CompoundStatement		187:0:3862:4100	4166957	0					
ANR	4166960	IdentifierDeclStatement	struct sigaction vec ;	188:1:3865:3885	4166957	0	True				
ANR	4166961	IdentifierDecl	vec		4166957	0					
ANR	4166962	IdentifierDeclType	struct sigaction		4166957	0					
ANR	4166963	Identifier	vec		4166957	1					
ANR	4166964	ExpressionStatement	"memset ( & vec , 0 , sizeof ( struct sigaction ) )"	189:1:3888:3929	4166957	1	True				
ANR	4166965	CallExpression	"memset ( & vec , 0 , sizeof ( struct sigaction ) )"		4166957	0					
ANR	4166966	Callee	memset		4166957	0					
ANR	4166967	Identifier	memset		4166957	0					
ANR	4166968	ArgumentList	& vec		4166957	1					
ANR	4166969	Argument	& vec		4166957	0					
ANR	4166970	UnaryOperationExpression	& vec		4166957	0					
ANR	4166971	UnaryOperator	&		4166957	0					
ANR	4166972	Identifier	vec		4166957	1					
ANR	4166973	Argument	0		4166957	1					
ANR	4166974	PrimaryExpression	0		4166957	0					
ANR	4166975	Argument	sizeof ( struct sigaction )		4166957	2					
ANR	4166976	SizeofExpression	sizeof ( struct sigaction )		4166957	0					
ANR	4166977	Sizeof	sizeof		4166957	0					
ANR	4166978	SizeofOperand	struct sigaction		4166957	1					
ANR	4166979	ExpressionStatement	vec . sa_handler = handler	191:1:3933:3957	4166957	2	True				
ANR	4166980	AssignmentExpression	vec . sa_handler = handler		4166957	0		=			
ANR	4166981	MemberAccess	vec . sa_handler		4166957	0					
ANR	4166982	Identifier	vec		4166957	0					
ANR	4166983	Identifier	sa_handler		4166957	1					
ANR	4166984	Identifier	handler		4166957	1					
ANR	4166985	ExpressionStatement	sigfillset ( & vec . sa_mask )	193:1:3961:3985	4166957	3	True				
ANR	4166986	CallExpression	sigfillset ( & vec . sa_mask )		4166957	0					
ANR	4166987	Callee	sigfillset		4166957	0					
ANR	4166988	Identifier	sigfillset		4166957	0					
ANR	4166989	ArgumentList	& vec . sa_mask		4166957	1					
ANR	4166990	Argument	& vec . sa_mask		4166957	0					
ANR	4166991	UnaryOperationExpression	& vec . sa_mask		4166957	0					
ANR	4166992	UnaryOperator	&		4166957	0					
ANR	4166993	MemberAccess	vec . sa_mask		4166957	1					
ANR	4166994	Identifier	vec		4166957	0					
ANR	4166995	Identifier	sa_mask		4166957	1					
ANR	4166996	IfStatement	"if ( sigaction ( sig , & vec , NULL ) < 0 )"		4166957	4					
ANR	4166997	Condition	"sigaction ( sig , & vec , NULL ) < 0"	194:6:3994:4021	4166957	0	True				
ANR	4166998	RelationalExpression	"sigaction ( sig , & vec , NULL ) < 0"		4166957	0		<			
ANR	4166999	CallExpression	"sigaction ( sig , & vec , NULL )"		4166957	0					
ANR	4167000	Callee	sigaction		4166957	0					
ANR	4167001	Identifier	sigaction		4166957	0					
ANR	4167002	ArgumentList	sig		4166957	1					
ANR	4167003	Argument	sig		4166957	0					
ANR	4167004	Identifier	sig		4166957	0					
ANR	4167005	Argument	& vec		4166957	1					
ANR	4167006	UnaryOperationExpression	& vec		4166957	0					
ANR	4167007	UnaryOperator	&		4166957	0					
ANR	4167008	Identifier	vec		4166957	1					
ANR	4167009	Argument	NULL		4166957	2					
ANR	4167010	Identifier	NULL		4166957	0					
ANR	4167011	PrimaryExpression	0		4166957	1					
ANR	4167012	CompoundStatement		8:37:162:162	4166957	1					
ANR	4167013	ExpressionStatement	"perror ( ""sigaction"" )"	195:2:4029:4048	4166957	0	True				
ANR	4167014	CallExpression	"perror ( ""sigaction"" )"		4166957	0					
ANR	4167015	Callee	perror		4166957	0					
ANR	4167016	Identifier	perror		4166957	0					
ANR	4167017	ArgumentList	"""sigaction"""		4166957	1					
ANR	4167018	Argument	"""sigaction"""		4166957	0					
ANR	4167019	PrimaryExpression	"""sigaction"""		4166957	0					
ANR	4167020	ExpressionStatement	"fprintf ( stderr , ""sig=%d\\n"" , sig )"	196:2:4052:4084	4166957	1	True				
ANR	4167021	CallExpression	"fprintf ( stderr , ""sig=%d\\n"" , sig )"		4166957	0					
ANR	4167022	Callee	fprintf		4166957	0					
ANR	4167023	Identifier	fprintf		4166957	0					
ANR	4167024	ArgumentList	stderr		4166957	1					
ANR	4167025	Argument	stderr		4166957	0					
ANR	4167026	Identifier	stderr		4166957	0					
ANR	4167027	Argument	"""sig=%d\\n"""		4166957	1					
ANR	4167028	PrimaryExpression	"""sig=%d\\n"""		4166957	0					
ANR	4167029	Argument	sig		4166957	2					
ANR	4167030	Identifier	sig		4166957	0					
ANR	4167031	ExpressionStatement	exit ( 1 )	197:2:4088:4095	4166957	2	True				
ANR	4167032	CallExpression	exit ( 1 )		4166957	0					
ANR	4167033	Callee	exit		4166957	0					
ANR	4167034	Identifier	exit		4166957	0					
ANR	4167035	ArgumentList	1		4166957	1					
ANR	4167036	Argument	1		4166957	0					
ANR	4167037	PrimaryExpression	1		4166957	0					
ANR	4167038	ReturnType	void		4166957	1					
ANR	4167039	Identifier	catch_sig		4166957	2					
ANR	4167040	ParameterList	"int sig , void ( * handler ) ( int )"		4166957	3					
ANR	4167041	Parameter	int sig	186:16:3830:3836	4166957	0	True				
ANR	4167042	ParameterType	int		4166957	0					
ANR	4167043	Identifier	sig		4166957	1					
ANR	4167044	Parameter	void ( * handler ) ( int )	186:25:3839:3858	4166957	1	True				
ANR	4167045	ParameterType	(( int ) void) *		4166957	0					
ANR	4167046	Identifier	handler		4166957	1					
ANR	4167047	CFGEntryNode	ENTRY		4166957		True				
ANR	4167048	CFGExitNode	EXIT		4166957		True				
ANR	4167049	Symbol	sig		4166957						
ANR	4167050	Symbol	handler		4166957						
ANR	4167051	Symbol	& vec . sa_mask		4166957						
ANR	4167052	Symbol	NULL		4166957						
ANR	4167053	Symbol	vec		4166957						
ANR	4167054	Symbol	vec . sa_handler		4166957						
ANR	4167055	Symbol	stderr		4166957						
ANR	4167056	Symbol	& vec		4166957						
ANR	4167057	Symbol	sigaction		4166957						
ANR	4167058	Function	catch_sig	202:0:4109:4371							
ANR	4167059	FunctionDef	"catch_sig (int sig , void ( * handler ) ( int ))"		4167058	0					
ANR	4167060	CompoundStatement		203:0:4152:4371	4167058	0					
ANR	4167061	IdentifierDeclStatement	struct sigvec vec ;	204:1:4155:4172	4167058	0	True				
ANR	4167062	IdentifierDecl	vec		4167058	0					
ANR	4167063	IdentifierDeclType	struct sigvec		4167058	0					
ANR	4167064	Identifier	vec		4167058	1					
ANR	4167065	ExpressionStatement	vec . sv_handler = handler	206:1:4176:4200	4167058	1	True				
ANR	4167066	AssignmentExpression	vec . sv_handler = handler		4167058	0		=			
ANR	4167067	MemberAccess	vec . sv_handler		4167058	0					
ANR	4167068	Identifier	vec		4167058	0					
ANR	4167069	Identifier	sv_handler		4167058	1					
ANR	4167070	Identifier	handler		4167058	1					
ANR	4167071	ExpressionStatement	vec . sv_mask = - 1	207:1:4203:4219	4167058	2	True				
ANR	4167072	AssignmentExpression	vec . sv_mask = - 1		4167058	0		=			
ANR	4167073	MemberAccess	vec . sv_mask		4167058	0					
ANR	4167074	Identifier	vec		4167058	0					
ANR	4167075	Identifier	sv_mask		4167058	1					
ANR	4167076	UnaryOperationExpression	- 1		4167058	1					
ANR	4167077	UnaryOperator	-		4167058	0					
ANR	4167078	PrimaryExpression	1		4167058	1					
ANR	4167079	ExpressionStatement	vec . sv_flags = 0	208:1:4223:4239	4167058	3	True				
ANR	4167080	AssignmentExpression	vec . sv_flags = 0		4167058	0		=			
ANR	4167081	MemberAccess	vec . sv_flags		4167058	0					
ANR	4167082	Identifier	vec		4167058	0					
ANR	4167083	Identifier	sv_flags		4167058	1					
ANR	4167084	PrimaryExpression	0		4167058	1					
ANR	4167085	IfStatement	"if ( sigvector ( sig , & vec , 0 ) < 0 )"		4167058	4					
ANR	4167086	Condition	"sigvector ( sig , & vec , 0 ) < 0"	210:5:4258:4282	4167058	0	True				
ANR	4167087	RelationalExpression	"sigvector ( sig , & vec , 0 ) < 0"		4167058	0		<			
ANR	4167088	CallExpression	"sigvector ( sig , & vec , 0 )"		4167058	0					
ANR	4167089	Callee	sigvector		4167058	0					
ANR	4167090	Identifier	sigvector		4167058	0					
ANR	4167091	ArgumentList	sig		4167058	1					
ANR	4167092	Argument	sig		4167058	0					
ANR	4167093	Identifier	sig		4167058	0					
ANR	4167094	Argument	& vec		4167058	1					
ANR	4167095	UnaryOperationExpression	& vec		4167058	0					
ANR	4167096	UnaryOperator	&		4167058	0					
ANR	4167097	Identifier	vec		4167058	1					
ANR	4167098	Argument	0		4167058	2					
ANR	4167099	PrimaryExpression	0		4167058	0					
ANR	4167100	PrimaryExpression	0		4167058	1					
ANR	4167101	CompoundStatement		8:33:133:133	4167058	1					
ANR	4167102	ExpressionStatement	"perror ( ""sigvec"" )"	214:2:4335:4353	4167058	0	True				
ANR	4167103	CallExpression	"perror ( ""sigvec"" )"		4167058	0					
ANR	4167104	Callee	perror		4167058	0					
ANR	4167105	Identifier	perror		4167058	0					
ANR	4167106	ArgumentList	"""sigvec"""		4167058	1					
ANR	4167107	Argument	"""sigvec"""		4167058	0					
ANR	4167108	PrimaryExpression	"""sigvec"""		4167058	0					
ANR	4167109	ExpressionStatement	exit ( 1 )	215:2:4357:4366	4167058	1	True				
ANR	4167110	CallExpression	exit ( 1 )		4167058	0					
ANR	4167111	Callee	exit		4167058	0					
ANR	4167112	Identifier	exit		4167058	0					
ANR	4167113	ArgumentList	1		4167058	1					
ANR	4167114	Argument	1		4167058	0					
ANR	4167115	PrimaryExpression	1		4167058	0					
ANR	4167116	Identifier	catch_sig		4167058	1					
ANR	4167117	ParameterList	"int sig , void ( * handler ) ( int )"		4167058	2					
ANR	4167118	Parameter	int sig	202:11:4120:4126	4167058	0	True				
ANR	4167119	ParameterType	int		4167058	0					
ANR	4167120	Identifier	sig		4167058	1					
ANR	4167121	Parameter	void ( * handler ) ( int )	202:20:4129:4148	4167058	1	True				
ANR	4167122	ParameterType	(( int ) void) *		4167058	0					
ANR	4167123	Identifier	handler		4167058	1					
ANR	4167124	CFGEntryNode	ENTRY		4167058		True				
ANR	4167125	CFGExitNode	EXIT		4167058		True				
ANR	4167126	Symbol	sig		4167058						
ANR	4167127	Symbol	sigvector		4167058						
ANR	4167128	Symbol	handler		4167058						
ANR	4167129	Symbol	vec . sv_flags		4167058						
ANR	4167130	Symbol	vec		4167058						
ANR	4167131	Symbol	vec . sv_handler		4167058						
ANR	4167132	Symbol	vec . sv_mask		4167058						
ANR	4167133	Symbol	& vec		4167058						
ANR	4167134	Function	display_state	220:0:4381:4876							
ANR	4167135	FunctionDef	display_state ()		4167134	0					
ANR	4167136	CompoundStatement		221:0:4402:4876	4167134	0					
ANR	4167137	IdentifierDeclStatement	sigset_t pending ;	222:1:4405:4421	4167134	0	True				
ANR	4167138	IdentifierDecl	pending		4167134	0					
ANR	4167139	IdentifierDeclType	sigset_t		4167134	0					
ANR	4167140	Identifier	pending		4167134	1					
ANR	4167141	IdentifierDeclStatement	sigset_t mask ;	223:1:4424:4437	4167134	1	True				
ANR	4167142	IdentifierDecl	mask		4167134	0					
ANR	4167143	IdentifierDeclType	sigset_t		4167134	0					
ANR	4167144	Identifier	mask		4167134	1					
ANR	4167145	IdentifierDeclStatement	struct sigaction oact ;	224:1:4440:4461	4167134	2	True				
ANR	4167146	IdentifierDecl	oact		4167134	0					
ANR	4167147	IdentifierDeclType	struct sigaction		4167134	0					
ANR	4167148	Identifier	oact		4167134	1					
ANR	4167149	IdentifierDeclStatement	int i ;	225:2:4465:4471	4167134	3	True				
ANR	4167150	IdentifierDecl	i		4167134	0					
ANR	4167151	IdentifierDeclType	int		4167134	0					
ANR	4167152	Identifier	i		4167134	1					
ANR	4167153	ExpressionStatement	"printf ( ""signal\\tpending\\tblocked\\thandler\\n"" )"	227:1:4475:4520	4167134	4	True				
ANR	4167154	CallExpression	"printf ( ""signal\\tpending\\tblocked\\thandler\\n"" )"		4167134	0					
ANR	4167155	Callee	printf		4167134	0					
ANR	4167156	Identifier	printf		4167134	0					
ANR	4167157	ArgumentList	"""signal\\tpending\\tblocked\\thandler\\n"""		4167134	1					
ANR	4167158	Argument	"""signal\\tpending\\tblocked\\thandler\\n"""		4167134	0					
ANR	4167159	PrimaryExpression	"""signal\\tpending\\tblocked\\thandler\\n"""		4167134	0					
ANR	4167160	ExpressionStatement	sigpending ( & pending )	229:1:4524:4546	4167134	5	True				
ANR	4167161	CallExpression	sigpending ( & pending )		4167134	0					
ANR	4167162	Callee	sigpending		4167134	0					
ANR	4167163	Identifier	sigpending		4167134	0					
ANR	4167164	ArgumentList	& pending		4167134	1					
ANR	4167165	Argument	& pending		4167134	0					
ANR	4167166	UnaryOperationExpression	& pending		4167134	0					
ANR	4167167	UnaryOperator	&		4167134	0					
ANR	4167168	Identifier	pending		4167134	1					
ANR	4167169	ExpressionStatement	"sigprocmask ( SIG_BLOCK , NULL , & mask )"	230:1:4549:4586	4167134	6	True				
ANR	4167170	CallExpression	"sigprocmask ( SIG_BLOCK , NULL , & mask )"		4167134	0					
ANR	4167171	Callee	sigprocmask		4167134	0					
ANR	4167172	Identifier	sigprocmask		4167134	0					
ANR	4167173	ArgumentList	SIG_BLOCK		4167134	1					
ANR	4167174	Argument	SIG_BLOCK		4167134	0					
ANR	4167175	Identifier	SIG_BLOCK		4167134	0					
ANR	4167176	Argument	NULL		4167134	1					
ANR	4167177	Identifier	NULL		4167134	0					
ANR	4167178	Argument	& mask		4167134	2					
ANR	4167179	UnaryOperationExpression	& mask		4167134	0					
ANR	4167180	UnaryOperator	&		4167134	0					
ANR	4167181	Identifier	mask		4167134	1					
ANR	4167182	ForStatement	for ( i = 1 ; i < NSIG ; i ++ )		4167134	7					
ANR	4167183	ForInit	i = 1 ;	232:13:4602:4605	4167134	0	True				
ANR	4167184	AssignmentExpression	i = 1		4167134	0		=			
ANR	4167185	Identifier	i		4167134	0					
ANR	4167186	PrimaryExpression	1		4167134	1					
ANR	4167187	Condition	i < NSIG	232:18:4607:4612	4167134	1	True				
ANR	4167188	RelationalExpression	i < NSIG		4167134	0		<			
ANR	4167189	Identifier	i		4167134	0					
ANR	4167190	Identifier	NSIG		4167134	1					
ANR	4167191	PostIncDecOperationExpression	i ++	232:26:4615:4617	4167134	2	True				
ANR	4167192	Identifier	i		4167134	0					
ANR	4167193	IncDec	++		4167134	1					
ANR	4167194	CompoundStatement		12:32:218:218	4167134	3					
ANR	4167195	ExpressionStatement	"printf ( ""%d\\t"" , i )"	233:2:4625:4641	4167134	0	True				
ANR	4167196	CallExpression	"printf ( ""%d\\t"" , i )"		4167134	0					
ANR	4167197	Callee	printf		4167134	0					
ANR	4167198	Identifier	printf		4167134	0					
ANR	4167199	ArgumentList	"""%d\\t"""		4167134	1					
ANR	4167200	Argument	"""%d\\t"""		4167134	0					
ANR	4167201	PrimaryExpression	"""%d\\t"""		4167134	0					
ANR	4167202	Argument	i		4167134	1					
ANR	4167203	Identifier	i		4167134	0					
ANR	4167204	IfStatement	"if ( sigismember ( & pending , i ) )"		4167134	1					
ANR	4167205	Condition	"sigismember ( & pending , i )"	234:6:4649:4671	4167134	0	True				
ANR	4167206	CallExpression	"sigismember ( & pending , i )"		4167134	0					
ANR	4167207	Callee	sigismember		4167134	0					
ANR	4167208	Identifier	sigismember		4167134	0					
ANR	4167209	ArgumentList	& pending		4167134	1					
ANR	4167210	Argument	& pending		4167134	0					
ANR	4167211	UnaryOperationExpression	& pending		4167134	0					
ANR	4167212	UnaryOperator	&		4167134	0					
ANR	4167213	Identifier	pending		4167134	1					
ANR	4167214	Argument	i		4167134	1					
ANR	4167215	Identifier	i		4167134	0					
ANR	4167216	CompoundStatement		14:32:272:272	4167134	1					
ANR	4167217	ExpressionStatement	"printf ( ""P\\t"" )"	235:3:4680:4693	4167134	0	True				
ANR	4167218	CallExpression	"printf ( ""P\\t"" )"		4167134	0					
ANR	4167219	Callee	printf		4167134	0					
ANR	4167220	Identifier	printf		4167134	0					
ANR	4167221	ArgumentList	"""P\\t"""		4167134	1					
ANR	4167222	Argument	"""P\\t"""		4167134	0					
ANR	4167223	PrimaryExpression	"""P\\t"""		4167134	0					
ANR	4167224	ElseStatement	else		4167134	0					
ANR	4167225	CompoundStatement		16:9:301:301	4167134	0					
ANR	4167226	ExpressionStatement	"printf ( ""\\t"" )"	237:3:4709:4721	4167134	0	True				
ANR	4167227	CallExpression	"printf ( ""\\t"" )"		4167134	0					
ANR	4167228	Callee	printf		4167134	0					
ANR	4167229	Identifier	printf		4167134	0					
ANR	4167230	ArgumentList	"""\\t"""		4167134	1					
ANR	4167231	Argument	"""\\t"""		4167134	0					
ANR	4167232	PrimaryExpression	"""\\t"""		4167134	0					
ANR	4167233	IfStatement	"if ( sigismember ( & mask , i ) )"		4167134	2					
ANR	4167234	Condition	"sigismember ( & mask , i )"	239:6:4733:4752	4167134	0	True				
ANR	4167235	CallExpression	"sigismember ( & mask , i )"		4167134	0					
ANR	4167236	Callee	sigismember		4167134	0					
ANR	4167237	Identifier	sigismember		4167134	0					
ANR	4167238	ArgumentList	& mask		4167134	1					
ANR	4167239	Argument	& mask		4167134	0					
ANR	4167240	UnaryOperationExpression	& mask		4167134	0					
ANR	4167241	UnaryOperator	&		4167134	0					
ANR	4167242	Identifier	mask		4167134	1					
ANR	4167243	Argument	i		4167134	1					
ANR	4167244	Identifier	i		4167134	0					
ANR	4167245	CompoundStatement		19:29:353:353	4167134	1					
ANR	4167246	ExpressionStatement	"printf ( ""B\\t"" )"	240:3:4761:4774	4167134	0	True				
ANR	4167247	CallExpression	"printf ( ""B\\t"" )"		4167134	0					
ANR	4167248	Callee	printf		4167134	0					
ANR	4167249	Identifier	printf		4167134	0					
ANR	4167250	ArgumentList	"""B\\t"""		4167134	1					
ANR	4167251	Argument	"""B\\t"""		4167134	0					
ANR	4167252	PrimaryExpression	"""B\\t"""		4167134	0					
ANR	4167253	ElseStatement	else		4167134	0					
ANR	4167254	CompoundStatement		21:9:382:382	4167134	0					
ANR	4167255	ExpressionStatement	"printf ( ""\\t"" )"	242:3:4790:4802	4167134	0	True				
ANR	4167256	CallExpression	"printf ( ""\\t"" )"		4167134	0					
ANR	4167257	Callee	printf		4167134	0					
ANR	4167258	Identifier	printf		4167134	0					
ANR	4167259	ArgumentList	"""\\t"""		4167134	1					
ANR	4167260	Argument	"""\\t"""		4167134	0					
ANR	4167261	PrimaryExpression	"""\\t"""		4167134	0					
ANR	4167262	ExpressionStatement	"sigaction ( i , NULL , & oact )"	244:2:4810:4837	4167134	3	True				
ANR	4167263	CallExpression	"sigaction ( i , NULL , & oact )"		4167134	0					
ANR	4167264	Callee	sigaction		4167134	0					
ANR	4167265	Identifier	sigaction		4167134	0					
ANR	4167266	ArgumentList	i		4167134	1					
ANR	4167267	Argument	i		4167134	0					
ANR	4167268	Identifier	i		4167134	0					
ANR	4167269	Argument	NULL		4167134	1					
ANR	4167270	Identifier	NULL		4167134	0					
ANR	4167271	Argument	& oact		4167134	2					
ANR	4167272	UnaryOperationExpression	& oact		4167134	0					
ANR	4167273	UnaryOperator	&		4167134	0					
ANR	4167274	Identifier	oact		4167134	1					
ANR	4167275	ExpressionStatement	"printf ( ""%p\\n"" , oact . sa_handler )"	245:2:4841:4871	4167134	4	True				
ANR	4167276	CallExpression	"printf ( ""%p\\n"" , oact . sa_handler )"		4167134	0					
ANR	4167277	Callee	printf		4167134	0					
ANR	4167278	Identifier	printf		4167134	0					
ANR	4167279	ArgumentList	"""%p\\n"""		4167134	1					
ANR	4167280	Argument	"""%p\\n"""		4167134	0					
ANR	4167281	PrimaryExpression	"""%p\\n"""		4167134	0					
ANR	4167282	Argument	oact . sa_handler		4167134	1					
ANR	4167283	MemberAccess	oact . sa_handler		4167134	0					
ANR	4167284	Identifier	oact		4167134	0					
ANR	4167285	Identifier	sa_handler		4167134	1					
ANR	4167286	ReturnType	void		4167134	1					
ANR	4167287	Identifier	display_state		4167134	2					
ANR	4167288	ParameterList			4167134	3					
ANR	4167289	CFGEntryNode	ENTRY		4167134		True				
ANR	4167290	CFGExitNode	EXIT		4167134		True				
ANR	4167291	Symbol	oact		4167134						
ANR	4167292	Symbol	& oact		4167134						
ANR	4167293	Symbol	& pending		4167134						
ANR	4167294	Symbol	NULL		4167134						
ANR	4167295	Symbol	pending		4167134						
ANR	4167296	Symbol	NSIG		4167134						
ANR	4167297	Symbol	oact . sa_handler		4167134						
ANR	4167298	Symbol	& mask		4167134						
ANR	4167299	Symbol	i		4167134						
ANR	4167300	Symbol	sigismember		4167134						
ANR	4167301	Symbol	SIG_BLOCK		4167134						
ANR	4167302	Symbol	mask		4167134						
