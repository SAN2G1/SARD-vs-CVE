command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	508067	File	data/converged/CVE-2011-4930_htcondor/PipeBuffer.cpp								
ANR	508068	Function	PipeBuffer :: PipeBuffer	26:0:925:971							
ANR	508069	FunctionDef	PipeBuffer :: PipeBuffer ()		508068	0					
ANR	508070	CompoundStatement		27:0:950:971	508068	0					
ANR	508071	ExpressionStatement	pipe_end = - 1	28:4:956:969	508068	0	True				
ANR	508072	AssignmentExpression	pipe_end = - 1		508068	0		=			
ANR	508073	Identifier	pipe_end		508068	0					
ANR	508074	UnaryOperationExpression	- 1		508068	1					
ANR	508075	UnaryOperator	-		508068	0					
ANR	508076	PrimaryExpression	1		508068	1					
ANR	508077	Identifier	PipeBuffer :: PipeBuffer		508068	1					
ANR	508078	ParameterList			508068	2					
ANR	508079	CFGEntryNode	ENTRY		508068		True				
ANR	508080	CFGExitNode	EXIT		508068		True				
ANR	508081	Symbol	pipe_end		508068						
ANR	508082	Function	PipeBuffer :: GetNextLine	31:0:974:2321							
ANR	508083	FunctionDef	PipeBuffer :: GetNextLine ()		508082	0					
ANR	508084	CompoundStatement		33:0:1015:2321	508082	0					
ANR	508085	IdentifierDeclStatement	bool full_line ;	34:4:1021:1035	508082	0	True				
ANR	508086	IdentifierDecl	full_line		508082	0					
ANR	508087	IdentifierDeclType	bool		508082	0					
ANR	508088	Identifier	full_line		508082	1					
ANR	508089	IdentifierDeclStatement	int i ;	35:4:1041:1046	508082	1	True				
ANR	508090	IdentifierDecl	i		508082	0					
ANR	508091	IdentifierDeclType	int		508082	0					
ANR	508092	Identifier	i		508082	1					
ANR	508093	IdentifierDeclStatement	char ra_buffer [ PIPE_BUFFER_READAHEAD_SIZE ] ;	36:4:1052:1094	508082	2	True				
ANR	508094	IdentifierDecl	ra_buffer [ PIPE_BUFFER_READAHEAD_SIZE ]		508082	0					
ANR	508095	IdentifierDeclType	char [ PIPE_BUFFER_READAHEAD_SIZE ]		508082	0					
ANR	508096	Identifier	ra_buffer		508082	1					
ANR	508097	Identifier	PIPE_BUFFER_READAHEAD_SIZE		508082	2					
ANR	508098	IdentifierDeclStatement	char c ;	37:4:1100:1106	508082	3	True				
ANR	508099	IdentifierDecl	c		508082	0					
ANR	508100	IdentifierDeclType	char		508082	0					
ANR	508101	Identifier	c		508082	1					
ANR	508102	IdentifierDeclStatement	ssize_t bytes ;	38:4:1112:1125	508082	4	True				
ANR	508103	IdentifierDecl	bytes		508082	0					
ANR	508104	IdentifierDeclType	ssize_t		508082	0					
ANR	508105	Identifier	bytes		508082	1					
ANR	508106	IdentifierDeclStatement	std :: string buffer ;	39:4:1131:1149	508082	5	True				
ANR	508107	IdentifierDecl	buffer		508082	0					
ANR	508108	IdentifierDeclType	std :: string		508082	0					
ANR	508109	Identifier	buffer		508082	1					
ANR	508110	IdentifierDeclStatement	std :: string * result ;	40:4:1155:1174	508082	6	True				
ANR	508111	IdentifierDecl	* result		508082	0					
ANR	508112	IdentifierDeclType	std :: string *		508082	0					
ANR	508113	Identifier	result		508082	1					
ANR	508114	IdentifierDeclStatement	bool last_char_was_escape ;	41:4:1180:1205	508082	7	True				
ANR	508115	IdentifierDecl	last_char_was_escape		508082	0					
ANR	508116	IdentifierDeclType	bool		508082	0					
ANR	508117	Identifier	last_char_was_escape		508082	1					
ANR	508118	ExpressionStatement	full_line = false	43:4:1212:1229	508082	8	True				
ANR	508119	AssignmentExpression	full_line = false		508082	0		=			
ANR	508120	Identifier	full_line		508082	0					
ANR	508121	Identifier	false		508082	1					
ANR	508122	ExpressionStatement	result = NULL	44:4:1235:1248	508082	9	True				
ANR	508123	AssignmentExpression	result = NULL		508082	0		=			
ANR	508124	Identifier	result		508082	0					
ANR	508125	Identifier	NULL		508082	1					
ANR	508126	ExpressionStatement	last_char_was_escape = false	45:4:1254:1282	508082	10	True				
ANR	508127	AssignmentExpression	last_char_was_escape = false		508082	0		=			
ANR	508128	Identifier	last_char_was_escape		508082	0					
ANR	508129	Identifier	false		508082	1					
ANR	508130	WhileStatement	while ( ! full_line )		508082	11					
ANR	508131	Condition	! full_line	47:11:1296:1305	508082	0	True				
ANR	508132	UnaryOperationExpression	! full_line		508082	0					
ANR	508133	UnaryOperator	!		508082	0					
ANR	508134	Identifier	full_line		508082	1					
ANR	508135	CompoundStatement		15:23:292:292	508082	1					
ANR	508136	ExpressionStatement	"memset ( ra_buffer , 0 , sizeof ( ra_buffer ) )"	48:8:1318:1357	508082	0	True				
ANR	508137	CallExpression	"memset ( ra_buffer , 0 , sizeof ( ra_buffer ) )"		508082	0					
ANR	508138	Callee	memset		508082	0					
ANR	508139	Identifier	memset		508082	0					
ANR	508140	ArgumentList	ra_buffer		508082	1					
ANR	508141	Argument	ra_buffer		508082	0					
ANR	508142	Identifier	ra_buffer		508082	0					
ANR	508143	Argument	0		508082	1					
ANR	508144	PrimaryExpression	0		508082	0					
ANR	508145	Argument	sizeof ( ra_buffer )		508082	2					
ANR	508146	SizeofExpression	sizeof ( ra_buffer )		508082	0					
ANR	508147	Sizeof	sizeof		508082	0					
ANR	508148	SizeofOperand	ra_buffer		508082	1					
ANR	508149	ExpressionStatement	"bytes = read ( pipe_end , ra_buffer , sizeof ( ra_buffer ) )"	49:8:1367:1419	508082	1	True				
ANR	508150	AssignmentExpression	"bytes = read ( pipe_end , ra_buffer , sizeof ( ra_buffer ) )"		508082	0		=			
ANR	508151	Identifier	bytes		508082	0					
ANR	508152	CallExpression	"read ( pipe_end , ra_buffer , sizeof ( ra_buffer ) )"		508082	1					
ANR	508153	Callee	read		508082	0					
ANR	508154	Identifier	read		508082	0					
ANR	508155	ArgumentList	pipe_end		508082	1					
ANR	508156	Argument	pipe_end		508082	0					
ANR	508157	Identifier	pipe_end		508082	0					
ANR	508158	Argument	ra_buffer		508082	1					
ANR	508159	Identifier	ra_buffer		508082	0					
ANR	508160	Argument	sizeof ( ra_buffer )		508082	2					
ANR	508161	SizeofExpression	sizeof ( ra_buffer )		508082	0					
ANR	508162	Sizeof	sizeof		508082	0					
ANR	508163	SizeofOperand	ra_buffer		508082	1					
ANR	508164	IfStatement	if ( bytes < 0 )		508082	2					
ANR	508165	Condition	bytes < 0	50:12:1433:1441	508082	0	True				
ANR	508166	RelationalExpression	bytes < 0		508082	0		<			
ANR	508167	Identifier	bytes		508082	0					
ANR	508168	PrimaryExpression	0		508082	1					
ANR	508169	CompoundStatement		18:23:428:428	508082	1					
ANR	508170	ExpressionStatement	"dcloudprintf ( ""error reading from pipe %d\\n"" , pipe_end )"	51:12:1458:1513	508082	0	True				
ANR	508171	CallExpression	"dcloudprintf ( ""error reading from pipe %d\\n"" , pipe_end )"		508082	0					
ANR	508172	Callee	dcloudprintf		508082	0					
ANR	508173	Identifier	dcloudprintf		508082	0					
ANR	508174	ArgumentList	"""error reading from pipe %d\\n"""		508082	1					
ANR	508175	Argument	"""error reading from pipe %d\\n"""		508082	0					
ANR	508176	PrimaryExpression	"""error reading from pipe %d\\n"""		508082	0					
ANR	508177	Argument	pipe_end		508082	1					
ANR	508178	Identifier	pipe_end		508082	0					
ANR	508179	BreakStatement	break ;	52:12:1527:1532	508082	1	True				
ANR	508180	IfStatement	if ( bytes == 0 )		508082	3					
ANR	508181	Condition	bytes == 0	54:12:1556:1565	508082	0	True				
ANR	508182	EqualityExpression	bytes == 0		508082	0		==			
ANR	508183	Identifier	bytes		508082	0					
ANR	508184	PrimaryExpression	0		508082	1					
ANR	508185	CompoundStatement		22:24:552:552	508082	1					
ANR	508186	ExpressionStatement	"dcloudprintf ( ""EOF reached on pipe %d\\n"" , pipe_end )"	55:12:1582:1632	508082	0	True				
ANR	508187	CallExpression	"dcloudprintf ( ""EOF reached on pipe %d\\n"" , pipe_end )"		508082	0					
ANR	508188	Callee	dcloudprintf		508082	0					
ANR	508189	Identifier	dcloudprintf		508082	0					
ANR	508190	ArgumentList	"""EOF reached on pipe %d\\n"""		508082	1					
ANR	508191	Argument	"""EOF reached on pipe %d\\n"""		508082	0					
ANR	508192	PrimaryExpression	"""EOF reached on pipe %d\\n"""		508082	0					
ANR	508193	Argument	pipe_end		508082	1					
ANR	508194	Identifier	pipe_end		508082	0					
ANR	508195	BreakStatement	break ;	56:12:1646:1651	508082	1	True				
ANR	508196	ForStatement	for ( i = 0 ; i < bytes ; i ++ )		508082	4					
ANR	508197	ForInit	i = 0 ;	59:13:1677:1682	508082	0	True				
ANR	508198	AssignmentExpression	i = 0		508082	0		=			
ANR	508199	Identifier	i		508082	0					
ANR	508200	PrimaryExpression	0		508082	1					
ANR	508201	Condition	i < bytes	59:20:1684:1692	508082	1	True				
ANR	508202	RelationalExpression	i < bytes		508082	0		<			
ANR	508203	Identifier	i		508082	0					
ANR	508204	Identifier	bytes		508082	1					
ANR	508205	PostIncDecOperationExpression	i ++	59:31:1695:1697	508082	2	True				
ANR	508206	Identifier	i		508082	0					
ANR	508207	IncDec	++		508082	1					
ANR	508208	CompoundStatement		27:36:684:684	508082	3					
ANR	508209	ExpressionStatement	c = ra_buffer [ i ]	60:12:1714:1730	508082	0	True				
ANR	508210	AssignmentExpression	c = ra_buffer [ i ]		508082	0		=			
ANR	508211	Identifier	c		508082	0					
ANR	508212	ArrayIndexing	ra_buffer [ i ]		508082	1					
ANR	508213	Identifier	ra_buffer		508082	0					
ANR	508214	Identifier	i		508082	1					
ANR	508215	IfStatement	if ( c == '\\n' && ! last_char_was_escape )		508082	1					
ANR	508216	Condition	c == '\\n' && ! last_char_was_escape	62:16:1749:1782	508082	0	True				
ANR	508217	AndExpression	c == '\\n' && ! last_char_was_escape		508082	0		&&			
ANR	508218	EqualityExpression	c == '\\n'		508082	0		==			
ANR	508219	Identifier	c		508082	0					
ANR	508220	PrimaryExpression	'\\n'		508082	1					
ANR	508221	UnaryOperationExpression	! last_char_was_escape		508082	1					
ANR	508222	UnaryOperator	!		508082	0					
ANR	508223	Identifier	last_char_was_escape		508082	1					
ANR	508224	CompoundStatement		30:52:769:769	508082	1					
ANR	508225	ExpressionStatement	result = new std :: string ( buffer )	64:16:1847:1879	508082	0	True				
ANR	508226	AssignmentExpression	result = new std :: string ( buffer )		508082	0		=			
ANR	508227	Identifier	result		508082	0					
ANR	508228	Identifier	buffer		508082	1					
ANR	508229	ExpressionStatement	full_line = true	65:16:1897:1913	508082	1	True				
ANR	508230	AssignmentExpression	full_line = true		508082	0		=			
ANR	508231	Identifier	full_line		508082	0					
ANR	508232	Identifier	true		508082	1					
ANR	508233	BreakStatement	break ;	66:16:1931:1936	508082	2	True				
ANR	508234	ElseStatement	else		508082	0					
ANR	508235	IfStatement	if ( c == '\\r' && ! last_char_was_escape )		508082	0					
ANR	508236	Condition	c == '\\r' && ! last_char_was_escape	68:21:1973:2006	508082	0	True				
ANR	508237	AndExpression	c == '\\r' && ! last_char_was_escape		508082	0		&&			
ANR	508238	EqualityExpression	c == '\\r'		508082	0		==			
ANR	508239	Identifier	c		508082	0					
ANR	508240	PrimaryExpression	'\\r'		508082	1					
ANR	508241	UnaryOperationExpression	! last_char_was_escape		508082	1					
ANR	508242	UnaryOperator	!		508082	0					
ANR	508243	Identifier	last_char_was_escape		508082	1					
ANR	508244	CompoundStatement		36:57:993:993	508082	1					
ANR	508245	ElseStatement	else		508082	0					
ANR	508246	CompoundStatement		39:17:1055:1055	508082	0					
ANR	508247	ExpressionStatement	buffer += c	72:16:2089:2100	508082	0	True				
ANR	508248	AssignmentExpression	buffer += c		508082	0		+=			
ANR	508249	Identifier	buffer		508082	0					
ANR	508250	Identifier	c		508082	1					
ANR	508251	IfStatement	if ( c == '\\\\' )		508082	1					
ANR	508252	Condition	c == '\\\\'	74:20:2123:2131	508082	0	True				
ANR	508253	EqualityExpression	c == '\\\\'		508082	0		==			
ANR	508254	Identifier	c		508082	0					
ANR	508255	PrimaryExpression	'\\\\'		508082	1					
ANR	508256	ExpressionStatement	last_char_was_escape = ! last_char_was_escape	75:20:2154:2198	508082	1	True				
ANR	508257	AssignmentExpression	last_char_was_escape = ! last_char_was_escape		508082	0		=			
ANR	508258	Identifier	last_char_was_escape		508082	0					
ANR	508259	UnaryOperationExpression	! last_char_was_escape		508082	1					
ANR	508260	UnaryOperator	!		508082	0					
ANR	508261	Identifier	last_char_was_escape		508082	1					
ANR	508262	ElseStatement	else		508082	0					
ANR	508263	ExpressionStatement	last_char_was_escape = false	77:20:2241:2269	508082	0	True				
ANR	508264	AssignmentExpression	last_char_was_escape = false		508082	0		=			
ANR	508265	Identifier	last_char_was_escape		508082	0					
ANR	508266	Identifier	false		508082	1					
ANR	508267	ReturnStatement	return result ;	82:4:2306:2319	508082	12	True				
ANR	508268	Identifier	result		508082	0					
ANR	508269	ReturnType	std :: string *		508082	1					
ANR	508270	Identifier	PipeBuffer :: GetNextLine		508082	2					
ANR	508271	ParameterList			508082	3					
ANR	508272	CFGEntryNode	ENTRY		508082		True				
ANR	508273	CFGExitNode	EXIT		508082		True				
ANR	508274	Symbol	full_line		508082						
ANR	508275	Symbol	c		508082						
ANR	508276	Symbol	NULL		508082						
ANR	508277	Symbol	read		508082						
ANR	508278	Symbol	pipe_end		508082						
ANR	508279	Symbol	ra_buffer		508082						
ANR	508280	Symbol	last_char_was_escape		508082						
ANR	508281	Symbol	false		508082						
ANR	508282	Symbol	i		508082						
ANR	508283	Symbol	result		508082						
ANR	508284	Symbol	* ra_buffer		508082						
ANR	508285	Symbol	* i		508082						
ANR	508286	Symbol	bytes		508082						
ANR	508287	Symbol	true		508082						
ANR	508288	Symbol	buffer		508082						
