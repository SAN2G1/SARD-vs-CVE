command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3656168	File	data/converged/CVE-2011-4930_htcondor/src_condor_release_examples_dagman_sum.c								
ANR	3656169	Function	main	30:1:1108:1527							
ANR	3656170	FunctionDef	"main (int argc , char * argv [ ])"		3656169	0					
ANR	3656171	CompoundStatement		33:0:1158:1527	3656169	0					
ANR	3656172	IdentifierDeclStatement	int i ;	34:2:1162:1167	3656169	0	True				
ANR	3656173	IdentifierDecl	i		3656169	0					
ANR	3656174	IdentifierDeclType	int		3656169	0					
ANR	3656175	Identifier	i		3656169	1					
ANR	3656176	IdentifierDeclStatement	char * filename ;	35:2:1171:1185	3656169	1	True				
ANR	3656177	IdentifierDecl	* filename		3656169	0					
ANR	3656178	IdentifierDeclType	char *		3656169	0					
ANR	3656179	Identifier	filename		3656169	1					
ANR	3656180	IdentifierDeclStatement	FILE * fp ;	36:2:1189:1197	3656169	2	True				
ANR	3656181	IdentifierDecl	* fp		3656169	0					
ANR	3656182	IdentifierDeclType	FILE *		3656169	0					
ANR	3656183	Identifier	fp		3656169	1					
ANR	3656184	IdentifierDeclStatement	int total = 0 ;	37:2:1201:1214	3656169	3	True				
ANR	3656185	IdentifierDecl	total = 0		3656169	0					
ANR	3656186	IdentifierDeclType	int		3656169	0					
ANR	3656187	Identifier	total		3656169	1					
ANR	3656188	AssignmentExpression	total = 0		3656169	2		=			
ANR	3656189	Identifier	total		3656169	0					
ANR	3656190	PrimaryExpression	0		3656169	1					
ANR	3656191	IdentifierDeclStatement	int val ;	38:2:1218:1225	3656169	4	True				
ANR	3656192	IdentifierDecl	val		3656169	0					
ANR	3656193	IdentifierDeclType	int		3656169	0					
ANR	3656194	Identifier	val		3656169	1					
ANR	3656195	ForStatement	for ( i = 1 ; i < argc ; i ++ )		3656169	5					
ANR	3656196	ForInit	i = 1 ;	40:7:1235:1238	3656169	0	True				
ANR	3656197	AssignmentExpression	i = 1		3656169	0		=			
ANR	3656198	Identifier	i		3656169	0					
ANR	3656199	PrimaryExpression	1		3656169	1					
ANR	3656200	Condition	i < argc	40:12:1240:1245	3656169	1	True				
ANR	3656201	RelationalExpression	i < argc		3656169	0		<			
ANR	3656202	Identifier	i		3656169	0					
ANR	3656203	Identifier	argc		3656169	1					
ANR	3656204	PostIncDecOperationExpression	i ++	40:20:1248:1250	3656169	2	True				
ANR	3656205	Identifier	i		3656169	0					
ANR	3656206	IncDec	++		3656169	1					
ANR	3656207	CompoundStatement		8:26:95:95	3656169	3					
ANR	3656208	ExpressionStatement	filename = argv [ i ]	41:4:1260:1278	3656169	0	True				
ANR	3656209	AssignmentExpression	filename = argv [ i ]		3656169	0		=			
ANR	3656210	Identifier	filename		3656169	0					
ANR	3656211	ArrayIndexing	argv [ i ]		3656169	1					
ANR	3656212	Identifier	argv		3656169	0					
ANR	3656213	Identifier	i		3656169	1					
ANR	3656214	ExpressionStatement	"fp = fopen ( filename , ""r"" )"	42:4:1284:1311	3656169	1	True				
ANR	3656215	AssignmentExpression	"fp = fopen ( filename , ""r"" )"		3656169	0		=			
ANR	3656216	Identifier	fp		3656169	0					
ANR	3656217	CallExpression	"fopen ( filename , ""r"" )"		3656169	1					
ANR	3656218	Callee	fopen		3656169	0					
ANR	3656219	Identifier	fopen		3656169	0					
ANR	3656220	ArgumentList	filename		3656169	1					
ANR	3656221	Argument	filename		3656169	0					
ANR	3656222	Identifier	filename		3656169	0					
ANR	3656223	Argument	"""r"""		3656169	1					
ANR	3656224	PrimaryExpression	"""r"""		3656169	0					
ANR	3656225	IfStatement	if ( ! fp )		3656169	2					
ANR	3656226	Condition	! fp	43:8:1321:1323	3656169	0	True				
ANR	3656227	UnaryOperationExpression	! fp		3656169	0					
ANR	3656228	UnaryOperator	!		3656169	0					
ANR	3656229	Identifier	fp		3656169	1					
ANR	3656230	CompoundStatement		11:14:168:168	3656169	1					
ANR	3656231	ExpressionStatement	"fprintf ( stderr , ""Error: can't open file: %s\\n"" , filename )"	44:6:1335:1394	3656169	0	True				
ANR	3656232	CallExpression	"fprintf ( stderr , ""Error: can't open file: %s\\n"" , filename )"		3656169	0					
ANR	3656233	Callee	fprintf		3656169	0					
ANR	3656234	Identifier	fprintf		3656169	0					
ANR	3656235	ArgumentList	stderr		3656169	1					
ANR	3656236	Argument	stderr		3656169	0					
ANR	3656237	Identifier	stderr		3656169	0					
ANR	3656238	Argument	"""Error: can't open file: %s\\n"""		3656169	1					
ANR	3656239	PrimaryExpression	"""Error: can't open file: %s\\n"""		3656169	0					
ANR	3656240	Argument	filename		3656169	2					
ANR	3656241	Identifier	filename		3656169	0					
ANR	3656242	ExpressionStatement	exit ( 1 )	45:6:1402:1411	3656169	1	True				
ANR	3656243	CallExpression	exit ( 1 )		3656169	0					
ANR	3656244	Callee	exit		3656169	0					
ANR	3656245	Identifier	exit		3656169	0					
ANR	3656246	ArgumentList	1		3656169	1					
ANR	3656247	Argument	1		3656169	0					
ANR	3656248	PrimaryExpression	1		3656169	0					
ANR	3656249	ExpressionStatement	"fscanf ( fp , ""%d"" , & val )"	47:4:1423:1447	3656169	3	True				
ANR	3656250	CallExpression	"fscanf ( fp , ""%d"" , & val )"		3656169	0					
ANR	3656251	Callee	fscanf		3656169	0					
ANR	3656252	Identifier	fscanf		3656169	0					
ANR	3656253	ArgumentList	fp		3656169	1					
ANR	3656254	Argument	fp		3656169	0					
ANR	3656255	Identifier	fp		3656169	0					
ANR	3656256	Argument	"""%d"""		3656169	1					
ANR	3656257	PrimaryExpression	"""%d"""		3656169	0					
ANR	3656258	Argument	& val		3656169	2					
ANR	3656259	UnaryOperationExpression	& val		3656169	0					
ANR	3656260	UnaryOperator	&		3656169	0					
ANR	3656261	Identifier	val		3656169	1					
ANR	3656262	ExpressionStatement	total += val	48:4:1453:1465	3656169	4	True				
ANR	3656263	AssignmentExpression	total += val		3656169	0		+=			
ANR	3656264	Identifier	total		3656169	0					
ANR	3656265	Identifier	val		3656169	1					
ANR	3656266	ExpressionStatement	fclose ( fp )	49:4:1471:1483	3656169	5	True				
ANR	3656267	CallExpression	fclose ( fp )		3656169	0					
ANR	3656268	Callee	fclose		3656169	0					
ANR	3656269	Identifier	fclose		3656169	0					
ANR	3656270	ArgumentList	fp		3656169	1					
ANR	3656271	Argument	fp		3656169	0					
ANR	3656272	Identifier	fp		3656169	0					
ANR	3656273	ExpressionStatement	"printf ( ""%d\\n"" , total )"	51:2:1491:1514	3656169	6	True				
ANR	3656274	CallExpression	"printf ( ""%d\\n"" , total )"		3656169	0					
ANR	3656275	Callee	printf		3656169	0					
ANR	3656276	Identifier	printf		3656169	0					
ANR	3656277	ArgumentList	"""%d\\n"""		3656169	1					
ANR	3656278	Argument	"""%d\\n"""		3656169	0					
ANR	3656279	PrimaryExpression	"""%d\\n"""		3656169	0					
ANR	3656280	Argument	total		3656169	1					
ANR	3656281	Identifier	total		3656169	0					
ANR	3656282	ExpressionStatement	exit ( 0 )	52:2:1518:1525	3656169	7	True				
ANR	3656283	CallExpression	exit ( 0 )		3656169	0					
ANR	3656284	Callee	exit		3656169	0					
ANR	3656285	Identifier	exit		3656169	0					
ANR	3656286	ArgumentList	0		3656169	1					
ANR	3656287	Argument	0		3656169	0					
ANR	3656288	PrimaryExpression	0		3656169	0					
ANR	3656289	ReturnType	include < stdio . h >		3656169	1					
ANR	3656290	Identifier	main		3656169	2					
ANR	3656291	ParameterList	"int argc , char * argv [ ]"		3656169	3					
ANR	3656292	Parameter	int argc	32:6:1133:1140	3656169	0	True				
ANR	3656293	ParameterType	int		3656169	0					
ANR	3656294	Identifier	argc		3656169	1					
ANR	3656295	Parameter	char * argv [ ]	32:16:1143:1154	3656169	1	True				
ANR	3656296	ParameterType	char * [ ]		3656169	0					
ANR	3656297	Identifier	argv		3656169	1					
ANR	3656298	CFGEntryNode	ENTRY		3656169		True				
ANR	3656299	CFGExitNode	EXIT		3656169		True				
ANR	3656300	Symbol	argc		3656169						
ANR	3656301	Symbol	val		3656169						
ANR	3656302	Symbol	& val		3656169						
ANR	3656303	Symbol	fopen		3656169						
ANR	3656304	Symbol	total		3656169						
ANR	3656305	Symbol	filename		3656169						
ANR	3656306	Symbol	* i		3656169						
ANR	3656307	Symbol	i		3656169						
ANR	3656308	Symbol	fp		3656169						
ANR	3656309	Symbol	* argv		3656169						
ANR	3656310	Symbol	stderr		3656169						
ANR	3656311	Symbol	argv		3656169						
