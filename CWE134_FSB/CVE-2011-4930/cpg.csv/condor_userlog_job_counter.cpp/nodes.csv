command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	981678	File	data/converged/CVE-2011-4930_htcondor/condor_userlog_job_counter.cpp								
ANR	981679	Function	main	32:0:1242:2385							
ANR	981680	FunctionDef	"main (int argc , char * * argv)"		981679	0					
ANR	981681	CompoundStatement		33:0:1276:2385	981679	0					
ANR	981682	IfStatement	if ( argc != 2 )		981679	0					
ANR	981683	Condition	argc != 2	34:5:1283:1291	981679	0	True				
ANR	981684	EqualityExpression	argc != 2		981679	0		!=			
ANR	981685	Identifier	argc		981679	0					
ANR	981686	PrimaryExpression	2		981679	1					
ANR	981687	CompoundStatement		2:17:18:18	981679	1					
ANR	981688	ExpressionStatement	"fprintf ( stderr , ""usage: %s file\\n"" , argv [ 0 ] )"	35:2:1299:1345	981679	0	True				
ANR	981689	CallExpression	"fprintf ( stderr , ""usage: %s file\\n"" , argv [ 0 ] )"		981679	0					
ANR	981690	Callee	fprintf		981679	0					
ANR	981691	Identifier	fprintf		981679	0					
ANR	981692	ArgumentList	stderr		981679	1					
ANR	981693	Argument	stderr		981679	0					
ANR	981694	Identifier	stderr		981679	0					
ANR	981695	Argument	"""usage: %s file\\n"""		981679	1					
ANR	981696	PrimaryExpression	"""usage: %s file\\n"""		981679	0					
ANR	981697	Argument	argv [ 0 ]		981679	2					
ANR	981698	ArrayIndexing	argv [ 0 ]		981679	0					
ANR	981699	Identifier	argv		981679	0					
ANR	981700	PrimaryExpression	0		981679	1					
ANR	981701	ReturnStatement	return 255 ;	36:2:1349:1359	981679	1	True				
ANR	981702	PrimaryExpression	255		981679	0					
ANR	981703	IdentifierDeclStatement	bool done = false ;	39:1:1366:1383	981679	1	True				
ANR	981704	IdentifierDecl	done = false		981679	0					
ANR	981705	IdentifierDeclType	bool		981679	0					
ANR	981706	Identifier	done		981679	1					
ANR	981707	AssignmentExpression	done = false		981679	2		=			
ANR	981708	Identifier	false		981679	0					
ANR	981709	Identifier	false		981679	1					
ANR	981710	IdentifierDeclStatement	bool seenJob = false ;	40:1:1386:1406	981679	2	True				
ANR	981711	IdentifierDecl	seenJob = false		981679	0					
ANR	981712	IdentifierDeclType	bool		981679	0					
ANR	981713	Identifier	seenJob		981679	1					
ANR	981714	AssignmentExpression	seenJob = false		981679	2		=			
ANR	981715	Identifier	false		981679	0					
ANR	981716	Identifier	false		981679	1					
ANR	981717	IdentifierDeclStatement	int numJobs = 0 ;	41:1:1409:1424	981679	3	True				
ANR	981718	IdentifierDecl	numJobs = 0		981679	0					
ANR	981719	IdentifierDeclType	int		981679	0					
ANR	981720	Identifier	numJobs		981679	1					
ANR	981721	AssignmentExpression	numJobs = 0		981679	2		=			
ANR	981722	Identifier	numJobs		981679	0					
ANR	981723	PrimaryExpression	0		981679	1					
ANR	981724	IdentifierDeclStatement	ReadUserLog ru ( argv [ 1 ] ) ;	42:1:1427:1452	981679	4	True				
ANR	981725	IdentifierDecl	ru ( argv [ 1 ] )		981679	0					
ANR	981726	IdentifierDeclType	ReadUserLog		981679	0					
ANR	981727	Identifier	ru		981679	1					
ANR	981728	ArrayIndexing	argv [ 1 ]		981679	2					
ANR	981729	Identifier	argv		981679	0					
ANR	981730	PrimaryExpression	1		981679	1					
ANR	981731	IdentifierDeclStatement	ULogEvent * e = NULL ;	43:4:1458:1477	981679	5	True				
ANR	981732	IdentifierDecl	* e = NULL		981679	0					
ANR	981733	IdentifierDeclType	ULogEvent *		981679	0					
ANR	981734	Identifier	e		981679	1					
ANR	981735	AssignmentExpression	* e = NULL		981679	2		=			
ANR	981736	Identifier	NULL		981679	0					
ANR	981737	Identifier	NULL		981679	1					
ANR	981738	WhileStatement	while ( ! done )		981679	6					
ANR	981739	Condition	! done	45:8:1488:1492	981679	0	True				
ANR	981740	UnaryOperationExpression	! done		981679	0					
ANR	981741	UnaryOperator	!		981679	0					
ANR	981742	Identifier	done		981679	1					
ANR	981743	CompoundStatement		16:2:278:306	981679	1					
ANR	981744	IdentifierDeclStatement	ULogEventOutcome outcome = ru . readEvent ( e ) ;	47:8:1507:1551	981679	0	True				
ANR	981745	IdentifierDecl	outcome = ru . readEvent ( e )		981679	0					
ANR	981746	IdentifierDeclType	ULogEventOutcome		981679	0					
ANR	981747	Identifier	outcome		981679	1					
ANR	981748	AssignmentExpression	outcome = ru . readEvent ( e )		981679	2		=			
ANR	981749	Identifier	outcome		981679	0					
ANR	981750	CallExpression	ru . readEvent ( e )		981679	1					
ANR	981751	Callee	ru . readEvent		981679	0					
ANR	981752	MemberAccess	ru . readEvent		981679	0					
ANR	981753	Identifier	ru		981679	0					
ANR	981754	Identifier	readEvent		981679	1					
ANR	981755	ArgumentList	e		981679	1					
ANR	981756	Argument	e		981679	0					
ANR	981757	Identifier	e		981679	0					
ANR	981758	IdentifierDeclStatement	const char * eventName = NULL ;	48:2:1555:1583	981679	1	True				
ANR	981759	IdentifierDecl	* eventName = NULL		981679	0					
ANR	981760	IdentifierDeclType	const char *		981679	0					
ANR	981761	Identifier	eventName		981679	1					
ANR	981762	AssignmentExpression	* eventName = NULL		981679	2		=			
ANR	981763	Identifier	NULL		981679	0					
ANR	981764	Identifier	NULL		981679	1					
ANR	981765	SwitchStatement	switch ( outcome )		981679	2					
ANR	981766	Condition	outcome	50:16:1602:1608	981679	0	True				
ANR	981767	Identifier	outcome		981679	0					
ANR	981768	CompoundStatement		18:25:334:334	981679	1					
ANR	981769	Label	case ULOG_NO_EVENT :	52:8:1622:1640	981679	0	True				
ANR	981770	Identifier	ULOG_NO_EVENT		981679	0					
ANR	981771	Label	case ULOG_RD_ERROR :	53:8:1650:1668	981679	1	True				
ANR	981772	Identifier	ULOG_RD_ERROR		981679	0					
ANR	981773	Label	case ULOG_UNK_ERROR :	54:8:1678:1697	981679	2	True				
ANR	981774	Identifier	ULOG_UNK_ERROR		981679	0					
ANR	981775	ExpressionStatement	"printf ( ""Log outcome: %s\\n"" , ULogEventOutcomeNames [ outcome ] )"	56:3:1703:1764	981679	3	True				
ANR	981776	CallExpression	"printf ( ""Log outcome: %s\\n"" , ULogEventOutcomeNames [ outcome ] )"		981679	0					
ANR	981777	Callee	printf		981679	0					
ANR	981778	Identifier	printf		981679	0					
ANR	981779	ArgumentList	"""Log outcome: %s\\n"""		981679	1					
ANR	981780	Argument	"""Log outcome: %s\\n"""		981679	0					
ANR	981781	PrimaryExpression	"""Log outcome: %s\\n"""		981679	0					
ANR	981782	Argument	ULogEventOutcomeNames [ outcome ]		981679	1					
ANR	981783	ArrayIndexing	ULogEventOutcomeNames [ outcome ]		981679	0					
ANR	981784	Identifier	ULogEventOutcomeNames		981679	0					
ANR	981785	Identifier	outcome		981679	1					
ANR	981786	ExpressionStatement	done = true	57:3:1769:1780	981679	4	True				
ANR	981787	AssignmentExpression	done = true		981679	0		=			
ANR	981788	Identifier	done		981679	0					
ANR	981789	Identifier	true		981679	1					
ANR	981790	BreakStatement	break ;	58:3:1785:1790	981679	5	True				
ANR	981791	Label	case ULOG_OK :	60:8:1802:1814	981679	6	True				
ANR	981792	Identifier	ULOG_OK		981679	0					
ANR	981793	ExpressionStatement	eventName = ULogEventNumberNames [ e -> eventNumber ]	62:12:1829:1877	981679	7	True				
ANR	981794	AssignmentExpression	eventName = ULogEventNumberNames [ e -> eventNumber ]		981679	0		=			
ANR	981795	Identifier	eventName		981679	0					
ANR	981796	ArrayIndexing	ULogEventNumberNames [ e -> eventNumber ]		981679	1					
ANR	981797	Identifier	ULogEventNumberNames		981679	0					
ANR	981798	PtrMemberAccess	e -> eventNumber		981679	1					
ANR	981799	Identifier	e		981679	0					
ANR	981800	Identifier	eventNumber		981679	1					
ANR	981801	SwitchStatement	switch ( e -> eventNumber )		981679	8					
ANR	981802	Condition	e -> eventNumber	64:11:1891:1904	981679	0	True				
ANR	981803	PtrMemberAccess	e -> eventNumber		981679	0					
ANR	981804	Identifier	e		981679	0					
ANR	981805	Identifier	eventNumber		981679	1					
ANR	981806	CompoundStatement		32:28:631:631	981679	1					
ANR	981807	Label	case ULOG_SUBMIT :	66:3:1914:1930	981679	0	True				
ANR	981808	Identifier	ULOG_SUBMIT		981679	0					
ANR	981809	ExpressionStatement	seenJob = true	67:4:1936:1950	981679	1	True				
ANR	981810	AssignmentExpression	seenJob = true		981679	0		=			
ANR	981811	Identifier	seenJob		981679	0					
ANR	981812	Identifier	true		981679	1					
ANR	981813	ExpressionStatement	"printf ( ""Log event: %s\\n"" , eventName )"	68:4:1956:1994	981679	2	True				
ANR	981814	CallExpression	"printf ( ""Log event: %s\\n"" , eventName )"		981679	0					
ANR	981815	Callee	printf		981679	0					
ANR	981816	Identifier	printf		981679	0					
ANR	981817	ArgumentList	"""Log event: %s\\n"""		981679	1					
ANR	981818	Argument	"""Log event: %s\\n"""		981679	0					
ANR	981819	PrimaryExpression	"""Log event: %s\\n"""		981679	0					
ANR	981820	Argument	eventName		981679	1					
ANR	981821	Identifier	eventName		981679	0					
ANR	981822	ExpressionStatement	numJobs ++	69:4:2000:2009	981679	3	True				
ANR	981823	PostIncDecOperationExpression	numJobs ++		981679	0					
ANR	981824	Identifier	numJobs		981679	0					
ANR	981825	IncDec	++		981679	1					
ANR	981826	ExpressionStatement	"printf ( ""Queued Jobs: %d\\n"" , numJobs )"	70:4:2015:2053	981679	4	True				
ANR	981827	CallExpression	"printf ( ""Queued Jobs: %d\\n"" , numJobs )"		981679	0					
ANR	981828	Callee	printf		981679	0					
ANR	981829	Identifier	printf		981679	0					
ANR	981830	ArgumentList	"""Queued Jobs: %d\\n"""		981679	1					
ANR	981831	Argument	"""Queued Jobs: %d\\n"""		981679	0					
ANR	981832	PrimaryExpression	"""Queued Jobs: %d\\n"""		981679	0					
ANR	981833	Argument	numJobs		981679	1					
ANR	981834	Identifier	numJobs		981679	0					
ANR	981835	BreakStatement	break ;	71:4:2059:2064	981679	5	True				
ANR	981836	Label	case ULOG_JOB_TERMINATED :	73:3:2070:2094	981679	6	True				
ANR	981837	Identifier	ULOG_JOB_TERMINATED		981679	0					
ANR	981838	Label	case ULOG_JOB_ABORTED :	74:3:2099:2120	981679	7	True				
ANR	981839	Identifier	ULOG_JOB_ABORTED		981679	0					
ANR	981840	ExpressionStatement	"printf ( ""Log event: %s\\n"" , eventName )"	75:4:2126:2164	981679	8	True				
ANR	981841	CallExpression	"printf ( ""Log event: %s\\n"" , eventName )"		981679	0					
ANR	981842	Callee	printf		981679	0					
ANR	981843	Identifier	printf		981679	0					
ANR	981844	ArgumentList	"""Log event: %s\\n"""		981679	1					
ANR	981845	Argument	"""Log event: %s\\n"""		981679	0					
ANR	981846	PrimaryExpression	"""Log event: %s\\n"""		981679	0					
ANR	981847	Argument	eventName		981679	1					
ANR	981848	Identifier	eventName		981679	0					
ANR	981849	ExpressionStatement	numJobs --	76:4:2170:2179	981679	9	True				
ANR	981850	PostIncDecOperationExpression	numJobs --		981679	0					
ANR	981851	Identifier	numJobs		981679	0					
ANR	981852	IncDec	--		981679	1					
ANR	981853	ExpressionStatement	"printf ( ""Queued Jobs: %d\\n"" , numJobs )"	77:4:2185:2223	981679	10	True				
ANR	981854	CallExpression	"printf ( ""Queued Jobs: %d\\n"" , numJobs )"		981679	0					
ANR	981855	Callee	printf		981679	0					
ANR	981856	Identifier	printf		981679	0					
ANR	981857	ArgumentList	"""Queued Jobs: %d\\n"""		981679	1					
ANR	981858	Argument	"""Queued Jobs: %d\\n"""		981679	0					
ANR	981859	PrimaryExpression	"""Queued Jobs: %d\\n"""		981679	0					
ANR	981860	Argument	numJobs		981679	1					
ANR	981861	Identifier	numJobs		981679	0					
ANR	981862	BreakStatement	break ;	78:4:2229:2234	981679	11	True				
ANR	981863	Label	default :	80:3:2240:2247	981679	12	True				
ANR	981864	Identifier	default		981679	0					
ANR	981865	BreakStatement	break ;	81:4:2253:2258	981679	13	True				
ANR	981866	BreakStatement	break ;	84:3:2269:2274	981679	9	True				
ANR	981867	Label	default :	86:2:2279:2286	981679	10	True				
ANR	981868	Identifier	default		981679	0					
ANR	981869	ReturnStatement	return 255 ;	88:3:2292:2302	981679	11	True				
ANR	981870	PrimaryExpression	255		981679	0					
ANR	981871	ReturnStatement	return ( seenJob && numJobs >= 0 && numJobs < 255 ) ? numJobs : 255 ;	91:1:2318:2383	981679	7	True				
ANR	981872	ConditionalExpression	( seenJob && numJobs >= 0 && numJobs < 255 ) ? numJobs : 255		981679	0					
ANR	981873	Condition	seenJob && numJobs >= 0 && numJobs < 255		981679	0					
ANR	981874	AndExpression	seenJob && numJobs >= 0 && numJobs < 255		981679	0		&&			
ANR	981875	Identifier	seenJob		981679	0					
ANR	981876	AndExpression	numJobs >= 0 && numJobs < 255		981679	1		&&			
ANR	981877	RelationalExpression	numJobs >= 0		981679	0		>=			
ANR	981878	Identifier	numJobs		981679	0					
ANR	981879	PrimaryExpression	0		981679	1					
ANR	981880	RelationalExpression	numJobs < 255		981679	1		<			
ANR	981881	Identifier	numJobs		981679	0					
ANR	981882	PrimaryExpression	255		981679	1					
ANR	981883	Identifier	numJobs		981679	1					
ANR	981884	PrimaryExpression	255		981679	2					
ANR	981885	ReturnType	int		981679	1					
ANR	981886	Identifier	main		981679	2					
ANR	981887	ParameterList	"int argc , char * * argv"		981679	3					
ANR	981888	Parameter	int argc	32:10:1252:1259	981679	0	True				
ANR	981889	ParameterType	int		981679	0					
ANR	981890	Identifier	argc		981679	1					
ANR	981891	Parameter	char * * argv	32:20:1262:1272	981679	1	True				
ANR	981892	ParameterType	char * *		981679	0					
ANR	981893	Identifier	argv		981679	1					
ANR	981894	CFGEntryNode	ENTRY		981679		True				
ANR	981895	CFGExitNode	EXIT		981679		True				
ANR	981896	Symbol	argc		981679						
ANR	981897	Symbol	ru . readEvent		981679						
ANR	981898	Symbol	ULogEventNumberNames		981679						
ANR	981899	Symbol	ru		981679						
ANR	981900	Symbol	NULL		981679						
ANR	981901	Symbol	e -> eventNumber		981679						
ANR	981902	Symbol	e		981679						
ANR	981903	Symbol	* * e		981679						
ANR	981904	Symbol	false		981679						
ANR	981905	Symbol	* argv		981679						
ANR	981906	Symbol	seenJob		981679						
ANR	981907	Symbol	numJobs		981679						
ANR	981908	Symbol	stderr		981679						
ANR	981909	Symbol	* ULogEventNumberNames		981679						
ANR	981910	Symbol	argv		981679						
ANR	981911	Symbol	done		981679						
ANR	981912	Symbol	* e		981679						
ANR	981913	Symbol	* e -> eventNumber		981679						
ANR	981914	Symbol	* outcome		981679						
ANR	981915	Symbol	true		981679						
ANR	981916	Symbol	eventName		981679						
ANR	981917	Symbol	ULogEventOutcomeNames		981679						
ANR	981918	Symbol	outcome		981679						
ANR	981919	Symbol	* ULogEventOutcomeNames		981679						
