command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	747417	File	data/converged/CVE-2011-4930_htcondor/classad_hashtable.cpp								
ANR	747418	Function	HashKey :: sprint	25:0:871:920							
ANR	747419	FunctionDef	HashKey :: sprint (char * s)		747418	0					
ANR	747420	CompoundStatement		26:0:901:920	747418	0					
ANR	747421	ExpressionStatement	"strcpy ( s , key )"	27:1:904:918	747418	0	True				
ANR	747422	CallExpression	"strcpy ( s , key )"		747418	0					
ANR	747423	Callee	strcpy		747418	0					
ANR	747424	Identifier	strcpy		747418	0					
ANR	747425	ArgumentList	s		747418	1					
ANR	747426	Argument	s		747418	0					
ANR	747427	Identifier	s		747418	0					
ANR	747428	Argument	key		747418	1					
ANR	747429	Identifier	key		747418	0					
ANR	747430	ReturnType	void		747418	1					
ANR	747431	Identifier	HashKey :: sprint		747418	2					
ANR	747432	ParameterList	char * s		747418	3					
ANR	747433	Parameter	char * s	25:21:892:898	747418	0	True				
ANR	747434	ParameterType	char *		747418	0					
ANR	747435	Identifier	s		747418	1					
ANR	747436	CFGEntryNode	ENTRY		747418		True				
ANR	747437	CFGExitNode	EXIT		747418		True				
ANR	747438	Symbol	s		747418						
ANR	747439	Symbol	key		747418						
ANR	747440	Function	HashKey :: sprint	30:0:923:982							
ANR	747441	FunctionDef	HashKey :: sprint (MyString & s)		747440	0					
ANR	747442	CompoundStatement		31:0:957:982	747440	0					
ANR	747443	ExpressionStatement	"s . sprintf ( ""%s"" , key )"	32:1:960:980	747440	0	True				
ANR	747444	CallExpression	"s . sprintf ( ""%s"" , key )"		747440	0					
ANR	747445	Callee	s . sprintf		747440	0					
ANR	747446	MemberAccess	s . sprintf		747440	0					
ANR	747447	Identifier	s		747440	0					
ANR	747448	Identifier	sprintf		747440	1					
ANR	747449	ArgumentList	"""%s"""		747440	1					
ANR	747450	Argument	"""%s"""		747440	0					
ANR	747451	PrimaryExpression	"""%s"""		747440	0					
ANR	747452	Argument	key		747440	1					
ANR	747453	Identifier	key		747440	0					
ANR	747454	ReturnType	void		747440	1					
ANR	747455	Identifier	HashKey :: sprint		747440	2					
ANR	747456	ParameterList	MyString & s		747440	3					
ANR	747457	Parameter	MyString & s	30:21:944:954	747440	0	True				
ANR	747458	ParameterType	MyString &		747440	0					
ANR	747459	Identifier	s		747440	1					
ANR	747460	CFGEntryNode	ENTRY		747440		True				
ANR	747461	CFGExitNode	EXIT		747440		True				
ANR	747462	Symbol	s		747440						
ANR	747463	Symbol	key		747440						
ANR	747464	Function	operator =	35:18:1003:1118							
ANR	747465	FunctionDef	operator = (const HashKey & from)		747464	0					
ANR	747466	CompoundStatement		36:0:1035:1118	747464	0					
ANR	747467	IfStatement	if ( this -> key )		747464	0					
ANR	747468	Condition	this -> key	37:5:1042:1050	747464	0	True				
ANR	747469	PtrMemberAccess	this -> key		747464	0					
ANR	747470	Identifier	this		747464	0					
ANR	747471	Identifier	key		747464	1					
ANR	747472	ExpressionStatement	free ( this -> key )	38:2:1055:1070	747464	1	True				
ANR	747473	CallExpression	free ( this -> key )		747464	0					
ANR	747474	Callee	free		747464	0					
ANR	747475	Identifier	free		747464	0					
ANR	747476	ArgumentList	this -> key		747464	1					
ANR	747477	Argument	this -> key		747464	0					
ANR	747478	PtrMemberAccess	this -> key		747464	0					
ANR	747479	Identifier	this		747464	0					
ANR	747480	Identifier	key		747464	1					
ANR	747481	ExpressionStatement	this -> key = strdup ( from . key )	39:1:1073:1101	747464	1	True				
ANR	747482	AssignmentExpression	this -> key = strdup ( from . key )		747464	0		=			
ANR	747483	PtrMemberAccess	this -> key		747464	0					
ANR	747484	Identifier	this		747464	0					
ANR	747485	Identifier	key		747464	1					
ANR	747486	CallExpression	strdup ( from . key )		747464	1					
ANR	747487	Callee	strdup		747464	0					
ANR	747488	Identifier	strdup		747464	0					
ANR	747489	ArgumentList	from . key		747464	1					
ANR	747490	Argument	from . key		747464	0					
ANR	747491	MemberAccess	from . key		747464	0					
ANR	747492	Identifier	from		747464	0					
ANR	747493	Identifier	key		747464	1					
ANR	747494	ReturnStatement	return * this ;	40:1:1104:1116	747464	2	True				
ANR	747495	UnaryOperationExpression	* this		747464	0					
ANR	747496	UnaryOperator	*		747464	0					
ANR	747497	Identifier	this		747464	1					
ANR	747498	Identifier	operator =		747464	1					
ANR	747499	ParameterList	const HashKey & from		747464	2					
ANR	747500	Parameter	const HashKey & from	35:29:1014:1032	747464	0	True				
ANR	747501	ParameterType	const HashKey &		747464	0					
ANR	747502	Identifier	from		747464	1					
ANR	747503	CFGEntryNode	ENTRY		747464		True				
ANR	747504	CFGExitNode	EXIT		747464		True				
ANR	747505	Symbol	* this		747464						
ANR	747506	Symbol	this		747464						
ANR	747507	Symbol	this -> key		747464						
ANR	747508	Symbol	from		747464						
ANR	747509	Symbol	strdup		747464						
ANR	747510	Symbol	from . key		747464						
ANR	747511	Function	operator ==	43:0:1121:1220							
ANR	747512	FunctionDef	"operator == (const HashKey & lhs , const HashKey & rhs)"		747511	0					
ANR	747513	CompoundStatement		44:0:1177:1220	747511	0					
ANR	747514	ReturnStatement	"return ( strcmp ( lhs . key , rhs . key ) == 0 ) ;"	45:1:1180:1218	747511	0	True				
ANR	747515	EqualityExpression	"strcmp ( lhs . key , rhs . key ) == 0"		747511	0		==			
ANR	747516	CallExpression	"strcmp ( lhs . key , rhs . key )"		747511	0					
ANR	747517	Callee	strcmp		747511	0					
ANR	747518	Identifier	strcmp		747511	0					
ANR	747519	ArgumentList	lhs . key		747511	1					
ANR	747520	Argument	lhs . key		747511	0					
ANR	747521	MemberAccess	lhs . key		747511	0					
ANR	747522	Identifier	lhs		747511	0					
ANR	747523	Identifier	key		747511	1					
ANR	747524	Argument	rhs . key		747511	1					
ANR	747525	MemberAccess	rhs . key		747511	0					
ANR	747526	Identifier	rhs		747511	0					
ANR	747527	Identifier	key		747511	1					
ANR	747528	PrimaryExpression	0		747511	1					
ANR	747529	ReturnType	bool		747511	1					
ANR	747530	Identifier	operator ==		747511	2					
ANR	747531	ParameterList	"const HashKey & lhs , const HashKey & rhs"		747511	3					
ANR	747532	Parameter	const HashKey & lhs	43:16:1137:1154	747511	0	True				
ANR	747533	ParameterType	const HashKey &		747511	0					
ANR	747534	Identifier	lhs		747511	1					
ANR	747535	Parameter	const HashKey & rhs	43:36:1157:1174	747511	1	True				
ANR	747536	ParameterType	const HashKey &		747511	0					
ANR	747537	Identifier	rhs		747511	1					
ANR	747538	CFGEntryNode	ENTRY		747511		True				
ANR	747539	CFGExitNode	EXIT		747511		True				
ANR	747540	Symbol	strcmp		747511						
ANR	747541	Symbol	lhs		747511						
ANR	747542	Symbol	rhs . key		747511						
ANR	747543	Symbol	rhs		747511						
ANR	747544	Symbol	lhs . key		747511						
ANR	747545	Function	hashFunction	49:0:1224:1407							
ANR	747546	FunctionDef	hashFunction (const HashKey & key)		747545	0					
ANR	747547	CompoundStatement		50:0:1270:1407	747545	0					
ANR	747548	IdentifierDeclStatement	unsigned int hash = 0 ;	51:1:1273:1294	747545	0	True				
ANR	747549	IdentifierDecl	hash = 0		747545	0					
ANR	747550	IdentifierDeclType	unsigned int		747545	0					
ANR	747551	Identifier	hash		747545	1					
ANR	747552	AssignmentExpression	hash = 0		747545	2		=			
ANR	747553	Identifier	hash		747545	0					
ANR	747554	PrimaryExpression	0		747545	1					
ANR	747555	IdentifierDeclStatement	const char * p = key . key ;	53:1:1298:1321	747545	1	True				
ANR	747556	IdentifierDecl	* p = key . key		747545	0					
ANR	747557	IdentifierDeclType	const char *		747545	0					
ANR	747558	Identifier	p		747545	1					
ANR	747559	AssignmentExpression	* p = key . key		747545	2		=			
ANR	747560	Identifier	p		747545	0					
ANR	747561	MemberAccess	key . key		747545	1					
ANR	747562	Identifier	key		747545	0					
ANR	747563	Identifier	key		747545	1					
ANR	747564	WhileStatement	while ( * p )		747545	2					
ANR	747565	Condition	* p	54:8:1331:1332	747545	0	True				
ANR	747566	UnaryOperationExpression	* p		747545	0					
ANR	747567	UnaryOperator	*		747545	0					
ANR	747568	Identifier	p		747545	1					
ANR	747569	CompoundStatement		5:12:64:64	747545	1					
ANR	747570	ExpressionStatement	hash = ( hash << 5 ) + hash + ( unsigned char ) * p	55:2:1339:1380	747545	0	True				
ANR	747571	AssignmentExpression	hash = ( hash << 5 ) + hash + ( unsigned char ) * p		747545	0		=			
ANR	747572	Identifier	hash		747545	0					
ANR	747573	AdditiveExpression	( hash << 5 ) + hash + ( unsigned char ) * p		747545	1		+			
ANR	747574	ShiftExpression	hash << 5		747545	0		<<			
ANR	747575	Identifier	hash		747545	0					
ANR	747576	PrimaryExpression	5		747545	1					
ANR	747577	AdditiveExpression	hash + ( unsigned char ) * p		747545	1		+			
ANR	747578	Identifier	hash		747545	0					
ANR	747579	CastExpression	( unsigned char ) * p		747545	1					
ANR	747580	CastTarget	unsigned char		747545	0					
ANR	747581	UnaryOperationExpression	* p		747545	1					
ANR	747582	UnaryOperator	*		747545	0					
ANR	747583	Identifier	p		747545	1					
ANR	747584	ExpressionStatement	p ++	56:2:1384:1387	747545	1	True				
ANR	747585	PostIncDecOperationExpression	p ++		747545	0					
ANR	747586	Identifier	p		747545	0					
ANR	747587	IncDec	++		747545	1					
ANR	747588	ReturnStatement	return hash ;	59:1:1394:1405	747545	3	True				
ANR	747589	Identifier	hash		747545	0					
ANR	747590	ReturnType	unsigned int		747545	1					
ANR	747591	Identifier	hashFunction		747545	2					
ANR	747592	ParameterList	const HashKey & key		747545	3					
ANR	747593	Parameter	const HashKey & key	49:26:1250:1267	747545	0	True				
ANR	747594	ParameterType	const HashKey &		747545	0					
ANR	747595	Identifier	key		747545	1					
ANR	747596	CFGEntryNode	ENTRY		747545		True				
ANR	747597	CFGExitNode	EXIT		747545		True				
ANR	747598	Symbol	p		747545						
ANR	747599	Symbol	key . key		747545						
ANR	747600	Symbol	* p		747545						
ANR	747601	Symbol	key		747545						
ANR	747602	Symbol	hash		747545						
ANR	747603	Function	operator =	62:18:1428:1543							
ANR	747604	FunctionDef	operator = (const AttrKey & from)		747603	0					
ANR	747605	CompoundStatement		63:0:1460:1543	747603	0					
ANR	747606	IfStatement	if ( this -> key )		747603	0					
ANR	747607	Condition	this -> key	64:5:1467:1475	747603	0	True				
ANR	747608	PtrMemberAccess	this -> key		747603	0					
ANR	747609	Identifier	this		747603	0					
ANR	747610	Identifier	key		747603	1					
ANR	747611	ExpressionStatement	free ( this -> key )	65:2:1480:1495	747603	1	True				
ANR	747612	CallExpression	free ( this -> key )		747603	0					
ANR	747613	Callee	free		747603	0					
ANR	747614	Identifier	free		747603	0					
ANR	747615	ArgumentList	this -> key		747603	1					
ANR	747616	Argument	this -> key		747603	0					
ANR	747617	PtrMemberAccess	this -> key		747603	0					
ANR	747618	Identifier	this		747603	0					
ANR	747619	Identifier	key		747603	1					
ANR	747620	ExpressionStatement	this -> key = strdup ( from . key )	66:1:1498:1526	747603	1	True				
ANR	747621	AssignmentExpression	this -> key = strdup ( from . key )		747603	0		=			
ANR	747622	PtrMemberAccess	this -> key		747603	0					
ANR	747623	Identifier	this		747603	0					
ANR	747624	Identifier	key		747603	1					
ANR	747625	CallExpression	strdup ( from . key )		747603	1					
ANR	747626	Callee	strdup		747603	0					
ANR	747627	Identifier	strdup		747603	0					
ANR	747628	ArgumentList	from . key		747603	1					
ANR	747629	Argument	from . key		747603	0					
ANR	747630	MemberAccess	from . key		747603	0					
ANR	747631	Identifier	from		747603	0					
ANR	747632	Identifier	key		747603	1					
ANR	747633	ReturnStatement	return * this ;	67:1:1529:1541	747603	2	True				
ANR	747634	UnaryOperationExpression	* this		747603	0					
ANR	747635	UnaryOperator	*		747603	0					
ANR	747636	Identifier	this		747603	1					
ANR	747637	Identifier	operator =		747603	1					
ANR	747638	ParameterList	const AttrKey & from		747603	2					
ANR	747639	Parameter	const AttrKey & from	62:29:1439:1457	747603	0	True				
ANR	747640	ParameterType	const AttrKey &		747603	0					
ANR	747641	Identifier	from		747603	1					
ANR	747642	CFGEntryNode	ENTRY		747603		True				
ANR	747643	CFGExitNode	EXIT		747603		True				
ANR	747644	Symbol	* this		747603						
ANR	747645	Symbol	this		747603						
ANR	747646	Symbol	this -> key		747603						
ANR	747647	Symbol	from		747603						
ANR	747648	Symbol	strdup		747603						
ANR	747649	Symbol	from . key		747603						
ANR	747650	Function	operator ==	70:0:1546:1649							
ANR	747651	FunctionDef	"operator == (const AttrKey & lhs , const AttrKey & rhs)"		747650	0					
ANR	747652	CompoundStatement		71:0:1602:1649	747650	0					
ANR	747653	ReturnStatement	"return ( strcasecmp ( lhs . key , rhs . key ) == 0 ) ;"	72:1:1605:1647	747650	0	True				
ANR	747654	EqualityExpression	"strcasecmp ( lhs . key , rhs . key ) == 0"		747650	0		==			
ANR	747655	CallExpression	"strcasecmp ( lhs . key , rhs . key )"		747650	0					
ANR	747656	Callee	strcasecmp		747650	0					
ANR	747657	Identifier	strcasecmp		747650	0					
ANR	747658	ArgumentList	lhs . key		747650	1					
ANR	747659	Argument	lhs . key		747650	0					
ANR	747660	MemberAccess	lhs . key		747650	0					
ANR	747661	Identifier	lhs		747650	0					
ANR	747662	Identifier	key		747650	1					
ANR	747663	Argument	rhs . key		747650	1					
ANR	747664	MemberAccess	rhs . key		747650	0					
ANR	747665	Identifier	rhs		747650	0					
ANR	747666	Identifier	key		747650	1					
ANR	747667	PrimaryExpression	0		747650	1					
ANR	747668	ReturnType	bool		747650	1					
ANR	747669	Identifier	operator ==		747650	2					
ANR	747670	ParameterList	"const AttrKey & lhs , const AttrKey & rhs"		747650	3					
ANR	747671	Parameter	const AttrKey & lhs	70:16:1562:1579	747650	0	True				
ANR	747672	ParameterType	const AttrKey &		747650	0					
ANR	747673	Identifier	lhs		747650	1					
ANR	747674	Parameter	const AttrKey & rhs	70:36:1582:1599	747650	1	True				
ANR	747675	ParameterType	const AttrKey &		747650	0					
ANR	747676	Identifier	rhs		747650	1					
ANR	747677	CFGEntryNode	ENTRY		747650		True				
ANR	747678	CFGExitNode	EXIT		747650		True				
ANR	747679	Symbol	lhs		747650						
ANR	747680	Symbol	rhs . key		747650						
ANR	747681	Symbol	rhs		747650						
ANR	747682	Symbol	strcasecmp		747650						
ANR	747683	Symbol	lhs . key		747650						
ANR	747684	Function	AttrKeyHashFunction	75:0:1652:1885							
ANR	747685	FunctionDef	AttrKeyHashFunction (const AttrKey & key)		747684	0					
ANR	747686	CompoundStatement		77:0:1707:1885	747684	0					
ANR	747687	IdentifierDeclStatement	const char * str = key . value ( ) ;	78:1:1710:1739	747684	0	True				
ANR	747688	IdentifierDecl	* str = key . value ( )		747684	0					
ANR	747689	IdentifierDeclType	const char *		747684	0					
ANR	747690	Identifier	str		747684	1					
ANR	747691	AssignmentExpression	* str = key . value ( )		747684	2		=			
ANR	747692	Identifier	str		747684	0					
ANR	747693	CallExpression	key . value ( )		747684	1					
ANR	747694	Callee	key . value		747684	0					
ANR	747695	MemberAccess	key . value		747684	0					
ANR	747696	Identifier	key		747684	0					
ANR	747697	Identifier	value		747684	1					
ANR	747698	ArgumentList			747684	1					
ANR	747699	IdentifierDeclStatement	int i = strlen ( str ) - 1 ;	79:1:1742:1767	747684	1	True				
ANR	747700	IdentifierDecl	i = strlen ( str ) - 1		747684	0					
ANR	747701	IdentifierDeclType	int		747684	0					
ANR	747702	Identifier	i		747684	1					
ANR	747703	AssignmentExpression	i = strlen ( str ) - 1		747684	2		=			
ANR	747704	Identifier	i		747684	0					
ANR	747705	AdditiveExpression	strlen ( str ) - 1		747684	1		-			
ANR	747706	CallExpression	strlen ( str )		747684	0					
ANR	747707	Callee	strlen		747684	0					
ANR	747708	Identifier	strlen		747684	0					
ANR	747709	ArgumentList	str		747684	1					
ANR	747710	Argument	str		747684	0					
ANR	747711	Identifier	str		747684	0					
ANR	747712	PrimaryExpression	1		747684	1					
ANR	747713	IdentifierDeclStatement	unsigned int hashVal = 0 ;	80:1:1770:1794	747684	2	True				
ANR	747714	IdentifierDecl	hashVal = 0		747684	0					
ANR	747715	IdentifierDeclType	unsigned int		747684	0					
ANR	747716	Identifier	hashVal		747684	1					
ANR	747717	AssignmentExpression	hashVal = 0		747684	2		=			
ANR	747718	Identifier	hashVal		747684	0					
ANR	747719	PrimaryExpression	0		747684	1					
ANR	747720	WhileStatement	while ( i >= 0 )		747684	3					
ANR	747721	Condition	i >= 0	81:8:1804:1809	747684	0	True				
ANR	747722	RelationalExpression	i >= 0		747684	0		>=			
ANR	747723	Identifier	i		747684	0					
ANR	747724	PrimaryExpression	0		747684	1					
ANR	747725	CompoundStatement		5:16:104:104	747684	1					
ANR	747726	ExpressionStatement	hashVal += ( unsigned int ) tolower ( str [ i ] )	82:2:1816:1856	747684	0	True				
ANR	747727	AssignmentExpression	hashVal += ( unsigned int ) tolower ( str [ i ] )		747684	0		+=			
ANR	747728	Identifier	hashVal		747684	0					
ANR	747729	CastExpression	( unsigned int ) tolower ( str [ i ] )		747684	1					
ANR	747730	CastTarget	unsigned int		747684	0					
ANR	747731	CallExpression	tolower ( str [ i ] )		747684	1					
ANR	747732	Callee	tolower		747684	0					
ANR	747733	Identifier	tolower		747684	0					
ANR	747734	ArgumentList	str [ i ]		747684	1					
ANR	747735	Argument	str [ i ]		747684	0					
ANR	747736	ArrayIndexing	str [ i ]		747684	0					
ANR	747737	Identifier	str		747684	0					
ANR	747738	Identifier	i		747684	1					
ANR	747739	ExpressionStatement	i --	83:2:1860:1863	747684	1	True				
ANR	747740	PostIncDecOperationExpression	i --		747684	0					
ANR	747741	Identifier	i		747684	0					
ANR	747742	IncDec	--		747684	1					
ANR	747743	ReturnStatement	return hashVal ;	85:1:1869:1883	747684	4	True				
ANR	747744	Identifier	hashVal		747684	0					
ANR	747745	ReturnType	unsigned int		747684	1					
ANR	747746	Identifier	AttrKeyHashFunction		747684	2					
ANR	747747	ParameterList	const AttrKey & key		747684	3					
ANR	747748	Parameter	const AttrKey & key	76:21:1687:1704	747684	0	True				
ANR	747749	ParameterType	const AttrKey &		747684	0					
ANR	747750	Identifier	key		747684	1					
ANR	747751	CFGEntryNode	ENTRY		747684		True				
ANR	747752	CFGExitNode	EXIT		747684		True				
ANR	747753	Symbol	str		747684						
ANR	747754	Symbol	hashVal		747684						
ANR	747755	Symbol	strlen		747684						
ANR	747756	Symbol	* i		747684						
ANR	747757	Symbol	tolower		747684						
ANR	747758	Symbol	i		747684						
ANR	747759	Symbol	key . value		747684						
ANR	747760	Symbol	* str		747684						
ANR	747761	Symbol	key		747684						
