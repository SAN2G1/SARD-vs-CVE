command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1647997	File	data/converged/CVE-2011-4930_htcondor/internet.cpp								
ANR	1647998	DeclStmt									
ANR	1647999	Decl							int	"int ( const int fd , const int low_port , const int high_port )"	bindWithin
ANR	1648000	Function	split_sin	58:0:1769:3063							
ANR	1648001	FunctionDef	"split_sin (const char * addr , char * * host , char * * port , char * * params)"		1648000	0					
ANR	1648002	CompoundStatement		60:0:1844:3063	1648000	0					
ANR	1648003	IdentifierDeclStatement	int len ;	61:1:1847:1854	1648000	0	True				
ANR	1648004	IdentifierDecl	len		1648000	0					
ANR	1648005	IdentifierDeclType	int		1648000	0					
ANR	1648006	Identifier	len		1648000	1					
ANR	1648007	IfStatement	if ( host )		1648000	1					
ANR	1648008	Condition	host	63:5:1862:1865	1648000	0	True				
ANR	1648009	Identifier	host		1648000	0					
ANR	1648010	ExpressionStatement	* host = NULL	63:12:1869:1881	1648000	1	True				
ANR	1648011	AssignmentExpression	* host = NULL		1648000	0		=			
ANR	1648012	UnaryOperationExpression	* host		1648000	0					
ANR	1648013	UnaryOperator	*		1648000	0					
ANR	1648014	Identifier	host		1648000	1					
ANR	1648015	Identifier	NULL		1648000	1					
ANR	1648016	IfStatement	if ( port )		1648000	2					
ANR	1648017	Condition	port	64:5:1888:1891	1648000	0	True				
ANR	1648018	Identifier	port		1648000	0					
ANR	1648019	ExpressionStatement	* port = NULL	64:12:1895:1907	1648000	1	True				
ANR	1648020	AssignmentExpression	* port = NULL		1648000	0		=			
ANR	1648021	UnaryOperationExpression	* port		1648000	0					
ANR	1648022	UnaryOperator	*		1648000	0					
ANR	1648023	Identifier	port		1648000	1					
ANR	1648024	Identifier	NULL		1648000	1					
ANR	1648025	IfStatement	if ( params )		1648000	3					
ANR	1648026	Condition	params	65:5:1914:1919	1648000	0	True				
ANR	1648027	Identifier	params		1648000	0					
ANR	1648028	ExpressionStatement	* params = NULL	65:14:1923:1937	1648000	1	True				
ANR	1648029	AssignmentExpression	* params = NULL		1648000	0		=			
ANR	1648030	UnaryOperationExpression	* params		1648000	0					
ANR	1648031	UnaryOperator	*		1648000	0					
ANR	1648032	Identifier	params		1648000	1					
ANR	1648033	Identifier	NULL		1648000	1					
ANR	1648034	IfStatement	if ( ! addr || * addr != '<' )		1648000	4					
ANR	1648035	Condition	! addr || * addr != '<'	67:5:1945:1965	1648000	0	True				
ANR	1648036	OrExpression	! addr || * addr != '<'		1648000	0		||			
ANR	1648037	UnaryOperationExpression	! addr		1648000	0					
ANR	1648038	UnaryOperator	!		1648000	0					
ANR	1648039	Identifier	addr		1648000	1					
ANR	1648040	EqualityExpression	* addr != '<'		1648000	1		!=			
ANR	1648041	UnaryOperationExpression	* addr		1648000	0					
ANR	1648042	UnaryOperator	*		1648000	0					
ANR	1648043	Identifier	addr		1648000	1					
ANR	1648044	PrimaryExpression	'<'		1648000	1					
ANR	1648045	CompoundStatement		8:29:124:124	1648000	1					
ANR	1648046	ReturnStatement	return 0 ;	68:2:1973:1981	1648000	0	True				
ANR	1648047	PrimaryExpression	0		1648000	0					
ANR	1648048	ExpressionStatement	addr ++	70:1:1987:1993	1648000	5	True				
ANR	1648049	PostIncDecOperationExpression	addr ++		1648000	0					
ANR	1648050	Identifier	addr		1648000	0					
ANR	1648051	IncDec	++		1648000	1					
ANR	1648052	IfStatement	if ( * addr == '[' )		1648000	6					
ANR	1648053	Condition	* addr == '['	72:5:2001:2012	1648000	0	True				
ANR	1648054	EqualityExpression	* addr == '['		1648000	0		==			
ANR	1648055	UnaryOperationExpression	* addr		1648000	0					
ANR	1648056	UnaryOperator	*		1648000	0					
ANR	1648057	Identifier	addr		1648000	1					
ANR	1648058	PrimaryExpression	'['		1648000	1					
ANR	1648059	CompoundStatement		16:2:202:237	1648000	1					
ANR	1648060	ExpressionStatement	addr ++	73:2:2019:2025	1648000	0	True				
ANR	1648061	PostIncDecOperationExpression	addr ++		1648000	0					
ANR	1648062	Identifier	addr		1648000	0					
ANR	1648063	IncDec	++		1648000	1					
ANR	1648064	IdentifierDeclStatement	"const char * pos = strchr ( addr , ']' ) ;"	75:2:2047:2082	1648000	1	True				
ANR	1648065	IdentifierDecl	"* pos = strchr ( addr , ']' )"		1648000	0					
ANR	1648066	IdentifierDeclType	const char *		1648000	0					
ANR	1648067	Identifier	pos		1648000	1					
ANR	1648068	AssignmentExpression	"* pos = strchr ( addr , ']' )"		1648000	2		=			
ANR	1648069	Identifier	pos		1648000	0					
ANR	1648070	CallExpression	"strchr ( addr , ']' )"		1648000	1					
ANR	1648071	Callee	strchr		1648000	0					
ANR	1648072	Identifier	strchr		1648000	0					
ANR	1648073	ArgumentList	addr		1648000	1					
ANR	1648074	Argument	addr		1648000	0					
ANR	1648075	Identifier	addr		1648000	0					
ANR	1648076	Argument	']'		1648000	1					
ANR	1648077	PrimaryExpression	']'		1648000	0					
ANR	1648078	IfStatement	if ( ! pos )		1648000	2					
ANR	1648079	Condition	! pos	76:6:2090:2093	1648000	0	True				
ANR	1648080	UnaryOperationExpression	! pos		1648000	0					
ANR	1648081	UnaryOperator	!		1648000	0					
ANR	1648082	Identifier	pos		1648000	1					
ANR	1648083	CompoundStatement		17:12:251:251	1648000	1					
ANR	1648084	ReturnStatement	return 0 ;	78:3:2125:2133	1648000	0	True				
ANR	1648085	PrimaryExpression	0		1648000	0					
ANR	1648086	ExpressionStatement	* host = ( char * ) malloc ( pos - addr + 1 )	80:2:2141:2178	1648000	3	True				
ANR	1648087	AssignmentExpression	* host = ( char * ) malloc ( pos - addr + 1 )		1648000	0		=			
ANR	1648088	UnaryOperationExpression	* host		1648000	0					
ANR	1648089	UnaryOperator	*		1648000	0					
ANR	1648090	Identifier	host		1648000	1					
ANR	1648091	CastExpression	( char * ) malloc ( pos - addr + 1 )		1648000	1					
ANR	1648092	CastTarget	char *		1648000	0					
ANR	1648093	CallExpression	malloc ( pos - addr + 1 )		1648000	1					
ANR	1648094	Callee	malloc		1648000	0					
ANR	1648095	Identifier	malloc		1648000	0					
ANR	1648096	ArgumentList	pos - addr + 1		1648000	1					
ANR	1648097	Argument	pos - addr + 1		1648000	0					
ANR	1648098	AdditiveExpression	pos - addr + 1		1648000	0		-			
ANR	1648099	Identifier	pos		1648000	0					
ANR	1648100	AdditiveExpression	addr + 1		1648000	1		+			
ANR	1648101	Identifier	addr		1648000	0					
ANR	1648102	PrimaryExpression	1		1648000	1					
ANR	1648103	ExpressionStatement	( * host ) [ pos - addr ] = '\\0'	81:2:2182:2208	1648000	4	True				
ANR	1648104	AssignmentExpression	( * host ) [ pos - addr ] = '\\0'		1648000	0		=			
ANR	1648105	ArrayIndexing	( * host ) [ pos - addr ]		1648000	0					
ANR	1648106	UnaryOperationExpression	* host		1648000	0					
ANR	1648107	UnaryOperator	*		1648000	0					
ANR	1648108	Identifier	host		1648000	1					
ANR	1648109	AdditiveExpression	pos - addr		1648000	1		-			
ANR	1648110	Identifier	pos		1648000	0					
ANR	1648111	Identifier	addr		1648000	1					
ANR	1648112	PrimaryExpression	'\\0'		1648000	1					
ANR	1648113	ExpressionStatement	"memcpy ( * host , addr , pos - addr )"	82:2:2212:2243	1648000	5	True				
ANR	1648114	CallExpression	"memcpy ( * host , addr , pos - addr )"		1648000	0					
ANR	1648115	Callee	memcpy		1648000	0					
ANR	1648116	Identifier	memcpy		1648000	0					
ANR	1648117	ArgumentList	* host		1648000	1					
ANR	1648118	Argument	* host		1648000	0					
ANR	1648119	UnaryOperationExpression	* host		1648000	0					
ANR	1648120	UnaryOperator	*		1648000	0					
ANR	1648121	Identifier	host		1648000	1					
ANR	1648122	Argument	addr		1648000	1					
ANR	1648123	Identifier	addr		1648000	0					
ANR	1648124	Argument	pos - addr		1648000	2					
ANR	1648125	AdditiveExpression	pos - addr		1648000	0		-			
ANR	1648126	Identifier	pos		1648000	0					
ANR	1648127	Identifier	addr		1648000	1					
ANR	1648128	ExpressionStatement	addr = pos + 1	83:2:2247:2261	1648000	6	True				
ANR	1648129	AssignmentExpression	addr = pos + 1		1648000	0		=			
ANR	1648130	Identifier	addr		1648000	0					
ANR	1648131	AdditiveExpression	pos + 1		1648000	1		+			
ANR	1648132	Identifier	pos		1648000	0					
ANR	1648133	PrimaryExpression	1		1648000	1					
ANR	1648134	ElseStatement	else		1648000	0					
ANR	1648135	CompoundStatement		25:8:426:426	1648000	0					
ANR	1648136	ExpressionStatement	"len = strcspn ( addr , "":?>"" )"	86:2:2296:2321	1648000	0	True				
ANR	1648137	AssignmentExpression	"len = strcspn ( addr , "":?>"" )"		1648000	0		=			
ANR	1648138	Identifier	len		1648000	0					
ANR	1648139	CallExpression	"strcspn ( addr , "":?>"" )"		1648000	1					
ANR	1648140	Callee	strcspn		1648000	0					
ANR	1648141	Identifier	strcspn		1648000	0					
ANR	1648142	ArgumentList	addr		1648000	1					
ANR	1648143	Argument	addr		1648000	0					
ANR	1648144	Identifier	addr		1648000	0					
ANR	1648145	Argument	""":?>"""		1648000	1					
ANR	1648146	PrimaryExpression	""":?>"""		1648000	0					
ANR	1648147	IfStatement	if ( host )		1648000	1					
ANR	1648148	Condition	host	87:6:2329:2332	1648000	0	True				
ANR	1648149	Identifier	host		1648000	0					
ANR	1648150	CompoundStatement		28:13:491:491	1648000	1					
ANR	1648151	ExpressionStatement	* host = ( char * ) malloc ( len + 1 )	88:3:2341:2370	1648000	0	True				
ANR	1648152	AssignmentExpression	* host = ( char * ) malloc ( len + 1 )		1648000	0		=			
ANR	1648153	UnaryOperationExpression	* host		1648000	0					
ANR	1648154	UnaryOperator	*		1648000	0					
ANR	1648155	Identifier	host		1648000	1					
ANR	1648156	CastExpression	( char * ) malloc ( len + 1 )		1648000	1					
ANR	1648157	CastTarget	char *		1648000	0					
ANR	1648158	CallExpression	malloc ( len + 1 )		1648000	1					
ANR	1648159	Callee	malloc		1648000	0					
ANR	1648160	Identifier	malloc		1648000	0					
ANR	1648161	ArgumentList	len + 1		1648000	1					
ANR	1648162	Argument	len + 1		1648000	0					
ANR	1648163	AdditiveExpression	len + 1		1648000	0		+			
ANR	1648164	Identifier	len		1648000	0					
ANR	1648165	PrimaryExpression	1		1648000	1					
ANR	1648166	ExpressionStatement	"memcpy ( * host , addr , len )"	89:3:2375:2397	1648000	1	True				
ANR	1648167	CallExpression	"memcpy ( * host , addr , len )"		1648000	0					
ANR	1648168	Callee	memcpy		1648000	0					
ANR	1648169	Identifier	memcpy		1648000	0					
ANR	1648170	ArgumentList	* host		1648000	1					
ANR	1648171	Argument	* host		1648000	0					
ANR	1648172	UnaryOperationExpression	* host		1648000	0					
ANR	1648173	UnaryOperator	*		1648000	0					
ANR	1648174	Identifier	host		1648000	1					
ANR	1648175	Argument	addr		1648000	1					
ANR	1648176	Identifier	addr		1648000	0					
ANR	1648177	Argument	len		1648000	2					
ANR	1648178	Identifier	len		1648000	0					
ANR	1648179	ExpressionStatement	( * host ) [ len ] = '\\0'	90:3:2402:2421	1648000	2	True				
ANR	1648180	AssignmentExpression	( * host ) [ len ] = '\\0'		1648000	0		=			
ANR	1648181	ArrayIndexing	( * host ) [ len ]		1648000	0					
ANR	1648182	UnaryOperationExpression	* host		1648000	0					
ANR	1648183	UnaryOperator	*		1648000	0					
ANR	1648184	Identifier	host		1648000	1					
ANR	1648185	Identifier	len		1648000	1					
ANR	1648186	PrimaryExpression	'\\0'		1648000	1					
ANR	1648187	ExpressionStatement	addr += len	92:2:2429:2440	1648000	2	True				
ANR	1648188	AssignmentExpression	addr += len		1648000	0		+=			
ANR	1648189	Identifier	addr		1648000	0					
ANR	1648190	Identifier	len		1648000	1					
ANR	1648191	IfStatement	if ( * addr == ':' )		1648000	7					
ANR	1648192	Condition	* addr == ':'	95:5:2451:2462	1648000	0	True				
ANR	1648193	EqualityExpression	* addr == ':'		1648000	0		==			
ANR	1648194	UnaryOperationExpression	* addr		1648000	0					
ANR	1648195	UnaryOperator	*		1648000	0					
ANR	1648196	Identifier	addr		1648000	1					
ANR	1648197	PrimaryExpression	':'		1648000	1					
ANR	1648198	CompoundStatement		36:20:621:621	1648000	1					
ANR	1648199	ExpressionStatement	addr ++	96:2:2470:2476	1648000	0	True				
ANR	1648200	PostIncDecOperationExpression	addr ++		1648000	0					
ANR	1648201	Identifier	addr		1648000	0					
ANR	1648202	IncDec	++		1648000	1					
ANR	1648203	ExpressionStatement	"len = strspn ( addr , ""0123456789"" )"	97:2:2480:2511	1648000	1	True				
ANR	1648204	AssignmentExpression	"len = strspn ( addr , ""0123456789"" )"		1648000	0		=			
ANR	1648205	Identifier	len		1648000	0					
ANR	1648206	CallExpression	"strspn ( addr , ""0123456789"" )"		1648000	1					
ANR	1648207	Callee	strspn		1648000	0					
ANR	1648208	Identifier	strspn		1648000	0					
ANR	1648209	ArgumentList	addr		1648000	1					
ANR	1648210	Argument	addr		1648000	0					
ANR	1648211	Identifier	addr		1648000	0					
ANR	1648212	Argument	"""0123456789"""		1648000	1					
ANR	1648213	PrimaryExpression	"""0123456789"""		1648000	0					
ANR	1648214	IfStatement	if ( port )		1648000	2					
ANR	1648215	Condition	port	98:6:2519:2522	1648000	0	True				
ANR	1648216	Identifier	port		1648000	0					
ANR	1648217	CompoundStatement		39:13:681:681	1648000	1					
ANR	1648218	ExpressionStatement	* port = ( char * ) malloc ( len + 1 )	99:3:2531:2560	1648000	0	True				
ANR	1648219	AssignmentExpression	* port = ( char * ) malloc ( len + 1 )		1648000	0		=			
ANR	1648220	UnaryOperationExpression	* port		1648000	0					
ANR	1648221	UnaryOperator	*		1648000	0					
ANR	1648222	Identifier	port		1648000	1					
ANR	1648223	CastExpression	( char * ) malloc ( len + 1 )		1648000	1					
ANR	1648224	CastTarget	char *		1648000	0					
ANR	1648225	CallExpression	malloc ( len + 1 )		1648000	1					
ANR	1648226	Callee	malloc		1648000	0					
ANR	1648227	Identifier	malloc		1648000	0					
ANR	1648228	ArgumentList	len + 1		1648000	1					
ANR	1648229	Argument	len + 1		1648000	0					
ANR	1648230	AdditiveExpression	len + 1		1648000	0		+			
ANR	1648231	Identifier	len		1648000	0					
ANR	1648232	PrimaryExpression	1		1648000	1					
ANR	1648233	ExpressionStatement	"memcpy ( * port , addr , len )"	100:3:2565:2587	1648000	1	True				
ANR	1648234	CallExpression	"memcpy ( * port , addr , len )"		1648000	0					
ANR	1648235	Callee	memcpy		1648000	0					
ANR	1648236	Identifier	memcpy		1648000	0					
ANR	1648237	ArgumentList	* port		1648000	1					
ANR	1648238	Argument	* port		1648000	0					
ANR	1648239	UnaryOperationExpression	* port		1648000	0					
ANR	1648240	UnaryOperator	*		1648000	0					
ANR	1648241	Identifier	port		1648000	1					
ANR	1648242	Argument	addr		1648000	1					
ANR	1648243	Identifier	addr		1648000	0					
ANR	1648244	Argument	len		1648000	2					
ANR	1648245	Identifier	len		1648000	0					
ANR	1648246	ExpressionStatement	( * port ) [ len ] = '\\0'	101:3:2592:2611	1648000	2	True				
ANR	1648247	AssignmentExpression	( * port ) [ len ] = '\\0'		1648000	0		=			
ANR	1648248	ArrayIndexing	( * port ) [ len ]		1648000	0					
ANR	1648249	UnaryOperationExpression	* port		1648000	0					
ANR	1648250	UnaryOperator	*		1648000	0					
ANR	1648251	Identifier	port		1648000	1					
ANR	1648252	Identifier	len		1648000	1					
ANR	1648253	PrimaryExpression	'\\0'		1648000	1					
ANR	1648254	ExpressionStatement	addr += len	103:2:2619:2630	1648000	3	True				
ANR	1648255	AssignmentExpression	addr += len		1648000	0		+=			
ANR	1648256	Identifier	addr		1648000	0					
ANR	1648257	Identifier	len		1648000	1					
ANR	1648258	IfStatement	if ( * addr == '?' )		1648000	8					
ANR	1648259	Condition	* addr == '?'	106:5:2641:2652	1648000	0	True				
ANR	1648260	EqualityExpression	* addr == '?'		1648000	0		==			
ANR	1648261	UnaryOperationExpression	* addr		1648000	0					
ANR	1648262	UnaryOperator	*		1648000	0					
ANR	1648263	Identifier	addr		1648000	1					
ANR	1648264	PrimaryExpression	'?'		1648000	1					
ANR	1648265	CompoundStatement		47:20:811:811	1648000	1					
ANR	1648266	ExpressionStatement	addr ++	107:2:2660:2666	1648000	0	True				
ANR	1648267	PostIncDecOperationExpression	addr ++		1648000	0					
ANR	1648268	Identifier	addr		1648000	0					
ANR	1648269	IncDec	++		1648000	1					
ANR	1648270	ExpressionStatement	"len = strcspn ( addr , "">"" )"	108:2:2670:2693	1648000	1	True				
ANR	1648271	AssignmentExpression	"len = strcspn ( addr , "">"" )"		1648000	0		=			
ANR	1648272	Identifier	len		1648000	0					
ANR	1648273	CallExpression	"strcspn ( addr , "">"" )"		1648000	1					
ANR	1648274	Callee	strcspn		1648000	0					
ANR	1648275	Identifier	strcspn		1648000	0					
ANR	1648276	ArgumentList	addr		1648000	1					
ANR	1648277	Argument	addr		1648000	0					
ANR	1648278	Identifier	addr		1648000	0					
ANR	1648279	Argument	""">"""		1648000	1					
ANR	1648280	PrimaryExpression	""">"""		1648000	0					
ANR	1648281	IfStatement	if ( params )		1648000	2					
ANR	1648282	Condition	params	109:6:2701:2706	1648000	0	True				
ANR	1648283	Identifier	params		1648000	0					
ANR	1648284	CompoundStatement		50:15:865:865	1648000	1					
ANR	1648285	ExpressionStatement	* params = ( char * ) malloc ( len + 1 )	110:3:2715:2746	1648000	0	True				
ANR	1648286	AssignmentExpression	* params = ( char * ) malloc ( len + 1 )		1648000	0		=			
ANR	1648287	UnaryOperationExpression	* params		1648000	0					
ANR	1648288	UnaryOperator	*		1648000	0					
ANR	1648289	Identifier	params		1648000	1					
ANR	1648290	CastExpression	( char * ) malloc ( len + 1 )		1648000	1					
ANR	1648291	CastTarget	char *		1648000	0					
ANR	1648292	CallExpression	malloc ( len + 1 )		1648000	1					
ANR	1648293	Callee	malloc		1648000	0					
ANR	1648294	Identifier	malloc		1648000	0					
ANR	1648295	ArgumentList	len + 1		1648000	1					
ANR	1648296	Argument	len + 1		1648000	0					
ANR	1648297	AdditiveExpression	len + 1		1648000	0		+			
ANR	1648298	Identifier	len		1648000	0					
ANR	1648299	PrimaryExpression	1		1648000	1					
ANR	1648300	ExpressionStatement	"memcpy ( * params , addr , len )"	111:3:2751:2775	1648000	1	True				
ANR	1648301	CallExpression	"memcpy ( * params , addr , len )"		1648000	0					
ANR	1648302	Callee	memcpy		1648000	0					
ANR	1648303	Identifier	memcpy		1648000	0					
ANR	1648304	ArgumentList	* params		1648000	1					
ANR	1648305	Argument	* params		1648000	0					
ANR	1648306	UnaryOperationExpression	* params		1648000	0					
ANR	1648307	UnaryOperator	*		1648000	0					
ANR	1648308	Identifier	params		1648000	1					
ANR	1648309	Argument	addr		1648000	1					
ANR	1648310	Identifier	addr		1648000	0					
ANR	1648311	Argument	len		1648000	2					
ANR	1648312	Identifier	len		1648000	0					
ANR	1648313	ExpressionStatement	( * params ) [ len ] = '\\0'	112:3:2780:2801	1648000	2	True				
ANR	1648314	AssignmentExpression	( * params ) [ len ] = '\\0'		1648000	0		=			
ANR	1648315	ArrayIndexing	( * params ) [ len ]		1648000	0					
ANR	1648316	UnaryOperationExpression	* params		1648000	0					
ANR	1648317	UnaryOperator	*		1648000	0					
ANR	1648318	Identifier	params		1648000	1					
ANR	1648319	Identifier	len		1648000	1					
ANR	1648320	PrimaryExpression	'\\0'		1648000	1					
ANR	1648321	ExpressionStatement	addr += len	114:2:2809:2820	1648000	3	True				
ANR	1648322	AssignmentExpression	addr += len		1648000	0		+=			
ANR	1648323	Identifier	addr		1648000	0					
ANR	1648324	Identifier	len		1648000	1					
ANR	1648325	IfStatement	if ( addr [ 0 ] != '>' || addr [ 1 ] != '\\0' )		1648000	9					
ANR	1648326	Condition	addr [ 0 ] != '>' || addr [ 1 ] != '\\0'	117:5:2831:2863	1648000	0	True				
ANR	1648327	OrExpression	addr [ 0 ] != '>' || addr [ 1 ] != '\\0'		1648000	0		||			
ANR	1648328	EqualityExpression	addr [ 0 ] != '>'		1648000	0		!=			
ANR	1648329	ArrayIndexing	addr [ 0 ]		1648000	0					
ANR	1648330	Identifier	addr		1648000	0					
ANR	1648331	PrimaryExpression	0		1648000	1					
ANR	1648332	PrimaryExpression	'>'		1648000	1					
ANR	1648333	EqualityExpression	addr [ 1 ] != '\\0'		1648000	1		!=			
ANR	1648334	ArrayIndexing	addr [ 1 ]		1648000	0					
ANR	1648335	Identifier	addr		1648000	0					
ANR	1648336	PrimaryExpression	1		1648000	1					
ANR	1648337	PrimaryExpression	'\\0'		1648000	1					
ANR	1648338	CompoundStatement		58:41:1022:1022	1648000	1					
ANR	1648339	IfStatement	if ( host )		1648000	0					
ANR	1648340	Condition	host	118:6:2875:2878	1648000	0	True				
ANR	1648341	Identifier	host		1648000	0					
ANR	1648342	CompoundStatement		59:13:1037:1037	1648000	1					
ANR	1648343	ExpressionStatement	free ( * host )	119:3:2887:2900	1648000	0	True				
ANR	1648344	CallExpression	free ( * host )		1648000	0					
ANR	1648345	Callee	free		1648000	0					
ANR	1648346	Identifier	free		1648000	0					
ANR	1648347	ArgumentList	* host		1648000	1					
ANR	1648348	Argument	* host		1648000	0					
ANR	1648349	UnaryOperationExpression	* host		1648000	0					
ANR	1648350	UnaryOperator	*		1648000	0					
ANR	1648351	Identifier	host		1648000	1					
ANR	1648352	ExpressionStatement	* host = NULL	120:3:2905:2917	1648000	1	True				
ANR	1648353	AssignmentExpression	* host = NULL		1648000	0		=			
ANR	1648354	UnaryOperationExpression	* host		1648000	0					
ANR	1648355	UnaryOperator	*		1648000	0					
ANR	1648356	Identifier	host		1648000	1					
ANR	1648357	Identifier	NULL		1648000	1					
ANR	1648358	IfStatement	if ( port )		1648000	1					
ANR	1648359	Condition	port	122:6:2929:2932	1648000	0	True				
ANR	1648360	Identifier	port		1648000	0					
ANR	1648361	CompoundStatement		63:13:1091:1091	1648000	1					
ANR	1648362	ExpressionStatement	free ( * port )	123:3:2941:2954	1648000	0	True				
ANR	1648363	CallExpression	free ( * port )		1648000	0					
ANR	1648364	Callee	free		1648000	0					
ANR	1648365	Identifier	free		1648000	0					
ANR	1648366	ArgumentList	* port		1648000	1					
ANR	1648367	Argument	* port		1648000	0					
ANR	1648368	UnaryOperationExpression	* port		1648000	0					
ANR	1648369	UnaryOperator	*		1648000	0					
ANR	1648370	Identifier	port		1648000	1					
ANR	1648371	ExpressionStatement	* port = NULL	124:3:2959:2971	1648000	1	True				
ANR	1648372	AssignmentExpression	* port = NULL		1648000	0		=			
ANR	1648373	UnaryOperationExpression	* port		1648000	0					
ANR	1648374	UnaryOperator	*		1648000	0					
ANR	1648375	Identifier	port		1648000	1					
ANR	1648376	Identifier	NULL		1648000	1					
ANR	1648377	IfStatement	if ( params )		1648000	2					
ANR	1648378	Condition	params	126:6:2983:2988	1648000	0	True				
ANR	1648379	Identifier	params		1648000	0					
ANR	1648380	CompoundStatement		67:15:1147:1147	1648000	1					
ANR	1648381	ExpressionStatement	free ( * params )	127:3:2997:3012	1648000	0	True				
ANR	1648382	CallExpression	free ( * params )		1648000	0					
ANR	1648383	Callee	free		1648000	0					
ANR	1648384	Identifier	free		1648000	0					
ANR	1648385	ArgumentList	* params		1648000	1					
ANR	1648386	Argument	* params		1648000	0					
ANR	1648387	UnaryOperationExpression	* params		1648000	0					
ANR	1648388	UnaryOperator	*		1648000	0					
ANR	1648389	Identifier	params		1648000	1					
ANR	1648390	ExpressionStatement	* params = NULL	128:3:3017:3031	1648000	1	True				
ANR	1648391	AssignmentExpression	* params = NULL		1648000	0		=			
ANR	1648392	UnaryOperationExpression	* params		1648000	0					
ANR	1648393	UnaryOperator	*		1648000	0					
ANR	1648394	Identifier	params		1648000	1					
ANR	1648395	Identifier	NULL		1648000	1					
ANR	1648396	ReturnStatement	return 0 ;	130:2:3039:3047	1648000	3	True				
ANR	1648397	PrimaryExpression	0		1648000	0					
ANR	1648398	ReturnStatement	return 1 ;	132:1:3053:3061	1648000	10	True				
ANR	1648399	PrimaryExpression	1		1648000	0					
ANR	1648400	ReturnType	int		1648000	1					
ANR	1648401	Identifier	split_sin		1648000	2					
ANR	1648402	ParameterList	"const char * addr , char * * host , char * * port , char * * params"		1648000	3					
ANR	1648403	Parameter	const char * addr	59:11:1784:1799	1648000	0	True				
ANR	1648404	ParameterType	const char *		1648000	0					
ANR	1648405	Identifier	addr		1648000	1					
ANR	1648406	Parameter	char * * host	59:29:1802:1812	1648000	1	True				
ANR	1648407	ParameterType	char * *		1648000	0					
ANR	1648408	Identifier	host		1648000	1					
ANR	1648409	Parameter	char * * port	59:42:1815:1825	1648000	2	True				
ANR	1648410	ParameterType	char * *		1648000	0					
ANR	1648411	Identifier	port		1648000	1					
ANR	1648412	Parameter	char * * params	59:55:1828:1840	1648000	3	True				
ANR	1648413	ParameterType	char * *		1648000	0					
ANR	1648414	Identifier	params		1648000	1					
ANR	1648415	CFGEntryNode	ENTRY		1648000		True				
ANR	1648416	CFGExitNode	EXIT		1648000		True				
ANR	1648417	Symbol	* host		1648000						
ANR	1648418	Symbol	malloc		1648000						
ANR	1648419	Symbol	NULL		1648000						
ANR	1648420	Symbol	strchr		1648000						
ANR	1648421	Symbol	params		1648000						
ANR	1648422	Symbol	* * host		1648000						
ANR	1648423	Symbol	strcspn		1648000						
ANR	1648424	Symbol	* * params		1648000						
ANR	1648425	Symbol	len		1648000						
ANR	1648426	Symbol	* port		1648000						
ANR	1648427	Symbol	port		1648000						
ANR	1648428	Symbol	pos		1648000						
ANR	1648429	Symbol	strspn		1648000						
ANR	1648430	Symbol	* * port		1648000						
ANR	1648431	Symbol	host		1648000						
ANR	1648432	Symbol	* addr		1648000						
ANR	1648433	Symbol	addr		1648000						
ANR	1648434	Symbol	* pos		1648000						
ANR	1648435	Symbol	* params		1648000						
ANR	1648436	Symbol	* len		1648000						
ANR	1648437	Function	sock_to_string	219:0:4971:5218							
ANR	1648438	FunctionDef	sock_to_string (SOCKET sockd)		1648437	0					
ANR	1648439	CompoundStatement		221:0:5013:5218	1648437	0					
ANR	1648440	Statement	static	222:1:5016:5021	1648437	0	True				
ANR	1648441	IdentifierDeclStatement	char sinful [ SINFUL_STRING_BUF_SIZE ] ;	222:8:5023:5058	1648437	1	True				
ANR	1648442	IdentifierDecl	sinful [ SINFUL_STRING_BUF_SIZE ]		1648437	0					
ANR	1648443	IdentifierDeclType	char [ SINFUL_STRING_BUF_SIZE ]		1648437	0					
ANR	1648444	Identifier	sinful		1648437	1					
ANR	1648445	Identifier	SINFUL_STRING_BUF_SIZE		1648437	2					
ANR	1648446	ExpressionStatement	sinful [ 0 ] = '\\0'	223:1:5061:5077	1648437	2	True				
ANR	1648447	AssignmentExpression	sinful [ 0 ] = '\\0'		1648437	0		=			
ANR	1648448	ArrayIndexing	sinful [ 0 ]		1648437	0					
ANR	1648449	Identifier	sinful		1648437	0					
ANR	1648450	PrimaryExpression	0		1648437	1					
ANR	1648451	PrimaryExpression	'\\0'		1648437	1					
ANR	1648452	IdentifierDeclStatement	condor_sockaddr addr ;	224:1:5080:5100	1648437	3	True				
ANR	1648453	IdentifierDecl	addr		1648437	0					
ANR	1648454	IdentifierDeclType	condor_sockaddr		1648437	0					
ANR	1648455	Identifier	addr		1648437	1					
ANR	1648456	IfStatement	"if ( condor_getsockname ( sockd , addr ) < 0 )"		1648437	4					
ANR	1648457	Condition	"condor_getsockname ( sockd , addr ) < 0"	225:5:5107:5140	1648437	0	True				
ANR	1648458	RelationalExpression	"condor_getsockname ( sockd , addr ) < 0"		1648437	0		<			
ANR	1648459	CallExpression	"condor_getsockname ( sockd , addr )"		1648437	0					
ANR	1648460	Callee	condor_getsockname		1648437	0					
ANR	1648461	Identifier	condor_getsockname		1648437	0					
ANR	1648462	ArgumentList	sockd		1648437	1					
ANR	1648463	Argument	sockd		1648437	0					
ANR	1648464	Identifier	sockd		1648437	0					
ANR	1648465	Argument	addr		1648437	1					
ANR	1648466	Identifier	addr		1648437	0					
ANR	1648467	PrimaryExpression	0		1648437	1					
ANR	1648468	ReturnStatement	return sinful ;	226:2:5145:5158	1648437	1	True				
ANR	1648469	Identifier	sinful		1648437	0					
ANR	1648470	ExpressionStatement	"addr . to_sinful ( sinful , sizeof ( sinful ) )"	228:1:5162:5200	1648437	5	True				
ANR	1648471	CallExpression	"addr . to_sinful ( sinful , sizeof ( sinful ) )"		1648437	0					
ANR	1648472	Callee	addr . to_sinful		1648437	0					
ANR	1648473	MemberAccess	addr . to_sinful		1648437	0					
ANR	1648474	Identifier	addr		1648437	0					
ANR	1648475	Identifier	to_sinful		1648437	1					
ANR	1648476	ArgumentList	sinful		1648437	1					
ANR	1648477	Argument	sinful		1648437	0					
ANR	1648478	Identifier	sinful		1648437	0					
ANR	1648479	Argument	sizeof ( sinful )		1648437	1					
ANR	1648480	SizeofExpression	sizeof ( sinful )		1648437	0					
ANR	1648481	Sizeof	sizeof		1648437	0					
ANR	1648482	SizeofOperand	sinful		1648437	1					
ANR	1648483	ReturnStatement	return sinful ;	229:1:5203:5216	1648437	6	True				
ANR	1648484	Identifier	sinful		1648437	0					
ANR	1648485	ReturnType	const char *		1648437	1					
ANR	1648486	Identifier	sock_to_string		1648437	2					
ANR	1648487	ParameterList	SOCKET sockd		1648437	3					
ANR	1648488	Parameter	SOCKET sockd	220:15:4999:5010	1648437	0	True				
ANR	1648489	ParameterType	SOCKET		1648437	0					
ANR	1648490	Identifier	sockd		1648437	1					
ANR	1648491	CFGEntryNode	ENTRY		1648437		True				
ANR	1648492	CFGExitNode	EXIT		1648437		True				
ANR	1648493	Symbol	sockd		1648437						
ANR	1648494	Symbol	* sinful		1648437						
ANR	1648495	Symbol	addr		1648437						
ANR	1648496	Symbol	sinful		1648437						
ANR	1648497	Symbol	condor_getsockname		1648437						
ANR	1648498	Function	sock_peer_to_string	232:0:5221:6001							
ANR	1648499	FunctionDef	"sock_peer_to_string (SOCKET fd , char * buf , size_t buflen , char const * unknown)"		1648498	0					
ANR	1648500	CompoundStatement		234:0:5314:6001	1648498	0					
ANR	1648501	IdentifierDeclStatement	condor_sockaddr addr ;	235:1:5317:5337	1648498	0	True				
ANR	1648502	IdentifierDecl	addr		1648498	0					
ANR	1648503	IdentifierDeclType	condor_sockaddr		1648498	0					
ANR	1648504	Identifier	addr		1648498	1					
ANR	1648505	IfStatement	"if ( condor_getpeername ( fd , addr ) < 0 )"		1648498	1					
ANR	1648506	Condition	"condor_getpeername ( fd , addr ) < 0"	236:5:5344:5374	1648498	0	True				
ANR	1648507	RelationalExpression	"condor_getpeername ( fd , addr ) < 0"		1648498	0		<			
ANR	1648508	CallExpression	"condor_getpeername ( fd , addr )"		1648498	0					
ANR	1648509	Callee	condor_getpeername		1648498	0					
ANR	1648510	Identifier	condor_getpeername		1648498	0					
ANR	1648511	ArgumentList	fd		1648498	1					
ANR	1648512	Argument	fd		1648498	0					
ANR	1648513	Identifier	fd		1648498	0					
ANR	1648514	Argument	addr		1648498	1					
ANR	1648515	Identifier	addr		1648498	0					
ANR	1648516	PrimaryExpression	0		1648498	1					
ANR	1648517	ReturnStatement	return unknown ;	237:2:5379:5393	1648498	1	True				
ANR	1648518	Identifier	unknown		1648498	0					
ANR	1648519	ExpressionStatement	"addr . to_sinful ( buf , buflen )"	239:1:5397:5424	1648498	2	True				
ANR	1648520	CallExpression	"addr . to_sinful ( buf , buflen )"		1648498	0					
ANR	1648521	Callee	addr . to_sinful		1648498	0					
ANR	1648522	MemberAccess	addr . to_sinful		1648498	0					
ANR	1648523	Identifier	addr		1648498	0					
ANR	1648524	Identifier	to_sinful		1648498	1					
ANR	1648525	ArgumentList	buf		1648498	1					
ANR	1648526	Argument	buf		1648498	0					
ANR	1648527	Identifier	buf		1648498	0					
ANR	1648528	Argument	buflen		1648498	1					
ANR	1648529	Identifier	buflen		1648498	0					
ANR	1648530	ReturnStatement	return unknown ;	240:1:5427:5441	1648498	3	True				
ANR	1648531	Identifier	unknown		1648498	0					
ANR	1648532	ReturnType	char const *		1648498	1					
ANR	1648533	Identifier	sock_peer_to_string		1648498	2					
ANR	1648534	ParameterList	"SOCKET fd , char * buf , size_t buflen , char const * unknown"		1648498	3					
ANR	1648535	Parameter	SOCKET fd	233:21:5255:5263	1648498	0	True				
ANR	1648536	ParameterType	SOCKET		1648498	0					
ANR	1648537	Identifier	fd		1648498	1					
ANR	1648538	Parameter	char * buf	233:32:5266:5274	1648498	1	True				
ANR	1648539	ParameterType	char *		1648498	0					
ANR	1648540	Identifier	buf		1648498	1					
ANR	1648541	Parameter	size_t buflen	233:43:5277:5289	1648498	2	True				
ANR	1648542	ParameterType	size_t		1648498	0					
ANR	1648543	Identifier	buflen		1648498	1					
ANR	1648544	Parameter	char const * unknown	233:58:5292:5310	1648498	3	True				
ANR	1648545	ParameterType	char const *		1648498	0					
ANR	1648546	Identifier	unknown		1648498	1					
ANR	1648547	CFGEntryNode	ENTRY		1648498		True				
ANR	1648548	CFGExitNode	EXIT		1648498		True				
ANR	1648549	Symbol	buf		1648498						
ANR	1648550	Symbol	buflen		1648498						
ANR	1648551	Symbol	condor_getpeername		1648498						
ANR	1648552	Symbol	addr		1648498						
ANR	1648553	Symbol	fd		1648498						
ANR	1648554	Symbol	unknown		1648498						
ANR	1648555	Function	calc_subnet_name	329:0:7907:8747							
ANR	1648556	FunctionDef	calc_subnet_name ()		1648555	0					
ANR	1648557	CompoundStatement		331:0:7937:8747	1648555	0					
ANR	1648558	ReturnType	char *		1648555	1					
ANR	1648559	Identifier	calc_subnet_name		1648555	2					
ANR	1648560	ParameterList			1648555	3					
ANR	1648561	CFGEntryNode	ENTRY		1648555		True				
ANR	1648562	CFGExitNode	EXIT		1648555		True				
ANR	1648563	Function	same_host	361:0:8757:9482							
ANR	1648564	FunctionDef	"same_host (const char * h1 , const char * h2)"		1648563	0					
ANR	1648565	CompoundStatement		363:0:8803:9482	1648563	0					
ANR	1648566	IdentifierDeclStatement	"struct hostent * he1 , * he2 ;"	364:1:8806:8831	1648563	0	True				
ANR	1648567	IdentifierDecl	* he1		1648563	0					
ANR	1648568	IdentifierDeclType	struct hostent *		1648563	0					
ANR	1648569	Identifier	he1		1648563	1					
ANR	1648570	IdentifierDecl	* he2		1648563	1					
ANR	1648571	IdentifierDeclType	struct hostent *		1648563	0					
ANR	1648572	Identifier	he2		1648563	1					
ANR	1648573	IdentifierDeclStatement	char cn1 [ MAXHOSTNAMELEN ] ;	365:1:8834:8858	1648563	1	True				
ANR	1648574	IdentifierDecl	cn1 [ MAXHOSTNAMELEN ]		1648563	0					
ANR	1648575	IdentifierDeclType	char [ MAXHOSTNAMELEN ]		1648563	0					
ANR	1648576	Identifier	cn1		1648563	1					
ANR	1648577	Identifier	MAXHOSTNAMELEN		1648563	2					
ANR	1648578	IfStatement	if ( h1 == NULL || h2 == NULL )		1648563	2					
ANR	1648579	Condition	h1 == NULL || h2 == NULL	367:5:8866:8889	1648563	0	True				
ANR	1648580	OrExpression	h1 == NULL || h2 == NULL		1648563	0		||			
ANR	1648581	EqualityExpression	h1 == NULL		1648563	0		==			
ANR	1648582	Identifier	h1		1648563	0					
ANR	1648583	Identifier	NULL		1648563	1					
ANR	1648584	EqualityExpression	h2 == NULL		1648563	1		==			
ANR	1648585	Identifier	h2		1648563	0					
ANR	1648586	Identifier	NULL		1648563	1					
ANR	1648587	CompoundStatement		5:31:88:88	1648563	1					
ANR	1648588	ExpressionStatement	"dprintf ( D_ALWAYS , ""Warning: attempting to compare null hostnames in same_host.\\n"" )"	368:2:8896:8979	1648563	0	True				
ANR	1648589	CallExpression	"dprintf ( D_ALWAYS , ""Warning: attempting to compare null hostnames in same_host.\\n"" )"		1648563	0					
ANR	1648590	Callee	dprintf		1648563	0					
ANR	1648591	Identifier	dprintf		1648563	0					
ANR	1648592	ArgumentList	D_ALWAYS		1648563	1					
ANR	1648593	Argument	D_ALWAYS		1648563	0					
ANR	1648594	Identifier	D_ALWAYS		1648563	0					
ANR	1648595	Argument	"""Warning: attempting to compare null hostnames in same_host.\\n"""		1648563	1					
ANR	1648596	PrimaryExpression	"""Warning: attempting to compare null hostnames in same_host.\\n"""		1648563	0					
ANR	1648597	ReturnStatement	return FALSE ;	369:2:8983:8995	1648563	1	True				
ANR	1648598	Identifier	FALSE		1648563	0					
ANR	1648599	IfStatement	"if ( strcmp ( h1 , h2 ) == MATCH )"		1648563	3					
ANR	1648600	Condition	"strcmp ( h1 , h2 ) == MATCH"	373:5:9079:9101	1648563	0	True				
ANR	1648601	EqualityExpression	"strcmp ( h1 , h2 ) == MATCH"		1648563	0		==			
ANR	1648602	CallExpression	"strcmp ( h1 , h2 )"		1648563	0					
ANR	1648603	Callee	strcmp		1648563	0					
ANR	1648604	Identifier	strcmp		1648563	0					
ANR	1648605	ArgumentList	h1		1648563	1					
ANR	1648606	Argument	h1		1648563	0					
ANR	1648607	Identifier	h1		1648563	0					
ANR	1648608	Argument	h2		1648563	1					
ANR	1648609	Identifier	h2		1648563	0					
ANR	1648610	Identifier	MATCH		1648563	1					
ANR	1648611	CompoundStatement		11:30:300:300	1648563	1					
ANR	1648612	ReturnStatement	return TRUE ;	374:2:9108:9119	1648563	0	True				
ANR	1648613	Identifier	TRUE		1648563	0					
ANR	1648614	IfStatement	if ( ( he1 = gethostbyname ( h1 ) ) == NULL )		1648563	4					
ANR	1648615	Condition	( he1 = gethostbyname ( h1 ) ) == NULL	378:5:9193:9225	1648563	0	True				
ANR	1648616	EqualityExpression	( he1 = gethostbyname ( h1 ) ) == NULL		1648563	0		==			
ANR	1648617	AssignmentExpression	he1 = gethostbyname ( h1 )		1648563	0		=			
ANR	1648618	Identifier	he1		1648563	0					
ANR	1648619	CallExpression	gethostbyname ( h1 )		1648563	1					
ANR	1648620	Callee	gethostbyname		1648563	0					
ANR	1648621	Identifier	gethostbyname		1648563	0					
ANR	1648622	ArgumentList	h1		1648563	1					
ANR	1648623	Argument	h1		1648563	0					
ANR	1648624	Identifier	h1		1648563	0					
ANR	1648625	Identifier	NULL		1648563	1					
ANR	1648626	CompoundStatement		16:40:424:424	1648563	1					
ANR	1648627	ReturnStatement	return - 1 ;	379:2:9232:9241	1648563	0	True				
ANR	1648628	UnaryOperationExpression	- 1		1648563	0					
ANR	1648629	UnaryOperator	-		1648563	0					
ANR	1648630	PrimaryExpression	1		1648563	1					
ANR	1648631	ExpressionStatement	"strncpy ( cn1 , he1 -> h_name , MAXHOSTNAMELEN )"	383:1:9303:9344	1648563	5	True				
ANR	1648632	CallExpression	"strncpy ( cn1 , he1 -> h_name , MAXHOSTNAMELEN )"		1648563	0					
ANR	1648633	Callee	strncpy		1648563	0					
ANR	1648634	Identifier	strncpy		1648563	0					
ANR	1648635	ArgumentList	cn1		1648563	1					
ANR	1648636	Argument	cn1		1648563	0					
ANR	1648637	Identifier	cn1		1648563	0					
ANR	1648638	Argument	he1 -> h_name		1648563	1					
ANR	1648639	PtrMemberAccess	he1 -> h_name		1648563	0					
ANR	1648640	Identifier	he1		1648563	0					
ANR	1648641	Identifier	h_name		1648563	1					
ANR	1648642	Argument	MAXHOSTNAMELEN		1648563	2					
ANR	1648643	Identifier	MAXHOSTNAMELEN		1648563	0					
ANR	1648644	ExpressionStatement	cn1 [ MAXHOSTNAMELEN - 1 ] = '\\0'	384:1:9347:9375	1648563	6	True				
ANR	1648645	AssignmentExpression	cn1 [ MAXHOSTNAMELEN - 1 ] = '\\0'		1648563	0		=			
ANR	1648646	ArrayIndexing	cn1 [ MAXHOSTNAMELEN - 1 ]		1648563	0					
ANR	1648647	Identifier	cn1		1648563	0					
ANR	1648648	AdditiveExpression	MAXHOSTNAMELEN - 1		1648563	1		-			
ANR	1648649	Identifier	MAXHOSTNAMELEN		1648563	0					
ANR	1648650	PrimaryExpression	1		1648563	1					
ANR	1648651	PrimaryExpression	'\\0'		1648563	1					
ANR	1648652	IfStatement	if ( ( he2 = gethostbyname ( h2 ) ) == NULL )		1648563	7					
ANR	1648653	Condition	( he2 = gethostbyname ( h2 ) ) == NULL	386:5:9383:9415	1648563	0	True				
ANR	1648654	EqualityExpression	( he2 = gethostbyname ( h2 ) ) == NULL		1648563	0		==			
ANR	1648655	AssignmentExpression	he2 = gethostbyname ( h2 )		1648563	0		=			
ANR	1648656	Identifier	he2		1648563	0					
ANR	1648657	CallExpression	gethostbyname ( h2 )		1648563	1					
ANR	1648658	Callee	gethostbyname		1648563	0					
ANR	1648659	Identifier	gethostbyname		1648563	0					
ANR	1648660	ArgumentList	h2		1648563	1					
ANR	1648661	Argument	h2		1648563	0					
ANR	1648662	Identifier	h2		1648563	0					
ANR	1648663	Identifier	NULL		1648563	1					
ANR	1648664	CompoundStatement		24:40:614:614	1648563	1					
ANR	1648665	ReturnStatement	return - 1 ;	387:2:9422:9431	1648563	0	True				
ANR	1648666	UnaryOperationExpression	- 1		1648563	0					
ANR	1648667	UnaryOperator	-		1648563	0					
ANR	1648668	PrimaryExpression	1		1648563	1					
ANR	1648669	ReturnStatement	"return ( strcmp ( cn1 , he2 -> h_name ) == MATCH ) ;"	390:1:9438:9480	1648563	8	True				
ANR	1648670	EqualityExpression	"strcmp ( cn1 , he2 -> h_name ) == MATCH"		1648563	0		==			
ANR	1648671	CallExpression	"strcmp ( cn1 , he2 -> h_name )"		1648563	0					
ANR	1648672	Callee	strcmp		1648563	0					
ANR	1648673	Identifier	strcmp		1648563	0					
ANR	1648674	ArgumentList	cn1		1648563	1					
ANR	1648675	Argument	cn1		1648563	0					
ANR	1648676	Identifier	cn1		1648563	0					
ANR	1648677	Argument	he2 -> h_name		1648563	1					
ANR	1648678	PtrMemberAccess	he2 -> h_name		1648563	0					
ANR	1648679	Identifier	he2		1648563	0					
ANR	1648680	Identifier	h_name		1648563	1					
ANR	1648681	Identifier	MATCH		1648563	1					
ANR	1648682	ReturnType	int		1648563	1					
ANR	1648683	Identifier	same_host		1648563	2					
ANR	1648684	ParameterList	"const char * h1 , const char * h2"		1648563	3					
ANR	1648685	Parameter	const char * h1	362:10:8771:8784	1648563	0	True				
ANR	1648686	ParameterType	const char *		1648563	0					
ANR	1648687	Identifier	h1		1648563	1					
ANR	1648688	Parameter	const char * h2	362:26:8787:8800	1648563	1	True				
ANR	1648689	ParameterType	const char *		1648563	0					
ANR	1648690	Identifier	h2		1648563	1					
ANR	1648691	CFGEntryNode	ENTRY		1648563		True				
ANR	1648692	CFGExitNode	EXIT		1648563		True				
ANR	1648693	Symbol	strcmp		1648563						
ANR	1648694	Symbol	* he2		1648563						
ANR	1648695	Symbol	* he1		1648563						
ANR	1648696	Symbol	he2 -> h_name		1648563						
ANR	1648697	Symbol	gethostbyname		1648563						
ANR	1648698	Symbol	NULL		1648563						
ANR	1648699	Symbol	he1 -> h_name		1648563						
ANR	1648700	Symbol	cn1		1648563						
ANR	1648701	Symbol	D_ALWAYS		1648563						
ANR	1648702	Symbol	h1		1648563						
ANR	1648703	Symbol	TRUE		1648563						
ANR	1648704	Symbol	h2		1648563						
ANR	1648705	Symbol	* cn1		1648563						
ANR	1648706	Symbol	* MAXHOSTNAMELEN		1648563						
ANR	1648707	Symbol	he2		1648563						
ANR	1648708	Symbol	he1		1648563						
ANR	1648709	Symbol	MAXHOSTNAMELEN		1648563						
ANR	1648710	Symbol	FALSE		1648563						
ANR	1648711	Symbol	MATCH		1648563						
ANR	1648712	Function	host_in_domain	399:0:9672:10015							
ANR	1648713	FunctionDef	"host_in_domain (const char * host , const char * domain)"		1648712	0					
ANR	1648714	CompoundStatement		401:0:9731:10015	1648712	0					
ANR	1648715	IdentifierDeclStatement	int skip ;	402:4:9737:9745	1648712	0	True				
ANR	1648716	IdentifierDecl	skip		1648712	0					
ANR	1648717	IdentifierDeclType	int		1648712	0					
ANR	1648718	Identifier	skip		1648712	1					
ANR	1648719	ExpressionStatement	skip = strlen ( host ) - strlen ( domain )	404:4:9752:9788	1648712	1	True				
ANR	1648720	AssignmentExpression	skip = strlen ( host ) - strlen ( domain )		1648712	0		=			
ANR	1648721	Identifier	skip		1648712	0					
ANR	1648722	AdditiveExpression	strlen ( host ) - strlen ( domain )		1648712	1		-			
ANR	1648723	CallExpression	strlen ( host )		1648712	0					
ANR	1648724	Callee	strlen		1648712	0					
ANR	1648725	Identifier	strlen		1648712	0					
ANR	1648726	ArgumentList	host		1648712	1					
ANR	1648727	Argument	host		1648712	0					
ANR	1648728	Identifier	host		1648712	0					
ANR	1648729	CallExpression	strlen ( domain )		1648712	1					
ANR	1648730	Callee	strlen		1648712	0					
ANR	1648731	Identifier	strlen		1648712	0					
ANR	1648732	ArgumentList	domain		1648712	1					
ANR	1648733	Argument	domain		1648712	0					
ANR	1648734	Identifier	domain		1648712	0					
ANR	1648735	IfStatement	if ( skip < 0 )		1648712	2					
ANR	1648736	Condition	skip < 0	405:8:9798:9805	1648712	0	True				
ANR	1648737	RelationalExpression	skip < 0		1648712	0		<			
ANR	1648738	Identifier	skip		1648712	0					
ANR	1648739	PrimaryExpression	0		1648712	1					
ANR	1648740	CompoundStatement		5:19:77:77	1648712	1					
ANR	1648741	ReturnStatement	return FALSE ;	406:8:9819:9831	1648712	0	True				
ANR	1648742	Identifier	FALSE		1648712	0					
ANR	1648743	IfStatement	"if ( strcasecmp ( host + skip , domain ) == MATCH )"		1648712	3					
ANR	1648744	Condition	"strcasecmp ( host + skip , domain ) == MATCH"	409:8:9848:9884	1648712	0	True				
ANR	1648745	EqualityExpression	"strcasecmp ( host + skip , domain ) == MATCH"		1648712	0		==			
ANR	1648746	CallExpression	"strcasecmp ( host + skip , domain )"		1648712	0					
ANR	1648747	Callee	strcasecmp		1648712	0					
ANR	1648748	Identifier	strcasecmp		1648712	0					
ANR	1648749	ArgumentList	host + skip		1648712	1					
ANR	1648750	Argument	host + skip		1648712	0					
ANR	1648751	AdditiveExpression	host + skip		1648712	0		+			
ANR	1648752	Identifier	host		1648712	0					
ANR	1648753	Identifier	skip		1648712	1					
ANR	1648754	Argument	domain		1648712	1					
ANR	1648755	Identifier	domain		1648712	0					
ANR	1648756	Identifier	MATCH		1648712	1					
ANR	1648757	CompoundStatement		9:48:156:156	1648712	1					
ANR	1648758	IfStatement	if ( skip == 0 || host [ skip - 1 ] == '.' || domain [ 0 ] == '.' )		1648712	0					
ANR	1648759	Condition	skip == 0 || host [ skip - 1 ] == '.' || domain [ 0 ] == '.'	410:11:9901:9950	1648712	0	True				
ANR	1648760	OrExpression	skip == 0 || host [ skip - 1 ] == '.' || domain [ 0 ] == '.'		1648712	0		||			
ANR	1648761	EqualityExpression	skip == 0		1648712	0		==			
ANR	1648762	Identifier	skip		1648712	0					
ANR	1648763	PrimaryExpression	0		1648712	1					
ANR	1648764	OrExpression	host [ skip - 1 ] == '.' || domain [ 0 ] == '.'		1648712	1		||			
ANR	1648765	EqualityExpression	host [ skip - 1 ] == '.'		1648712	0		==			
ANR	1648766	ArrayIndexing	host [ skip - 1 ]		1648712	0					
ANR	1648767	Identifier	host		1648712	0					
ANR	1648768	AdditiveExpression	skip - 1		1648712	1		-			
ANR	1648769	Identifier	skip		1648712	0					
ANR	1648770	PrimaryExpression	1		1648712	1					
ANR	1648771	PrimaryExpression	'.'		1648712	1					
ANR	1648772	EqualityExpression	domain [ 0 ] == '.'		1648712	1		==			
ANR	1648773	ArrayIndexing	domain [ 0 ]		1648712	0					
ANR	1648774	Identifier	domain		1648712	0					
ANR	1648775	PrimaryExpression	0		1648712	1					
ANR	1648776	PrimaryExpression	'.'		1648712	1					
ANR	1648777	CompoundStatement		10:64:222:222	1648712	1					
ANR	1648778	ReturnStatement	return TRUE ;	411:12:9968:9979	1648712	0	True				
ANR	1648779	Identifier	TRUE		1648712	0					
ANR	1648780	ReturnStatement	return FALSE ;	414:4:10001:10013	1648712	4	True				
ANR	1648781	Identifier	FALSE		1648712	0					
ANR	1648782	ReturnType	int		1648712	1					
ANR	1648783	Identifier	host_in_domain		1648712	2					
ANR	1648784	ParameterList	"const char * host , const char * domain"		1648712	3					
ANR	1648785	Parameter	const char * host	400:16:9692:9707	1648712	0	True				
ANR	1648786	ParameterType	const char *		1648712	0					
ANR	1648787	Identifier	host		1648712	1					
ANR	1648788	Parameter	const char * domain	400:34:9710:9727	1648712	1	True				
ANR	1648789	ParameterType	const char *		1648712	0					
ANR	1648790	Identifier	domain		1648712	1					
ANR	1648791	CFGEntryNode	ENTRY		1648712		True				
ANR	1648792	CFGExitNode	EXIT		1648712		True				
ANR	1648793	Symbol	strlen		1648712						
ANR	1648794	Symbol	* skip		1648712						
ANR	1648795	Symbol	* host		1648712						
ANR	1648796	Symbol	* domain		1648712						
ANR	1648797	Symbol	domain		1648712						
ANR	1648798	Symbol	host		1648712						
ANR	1648799	Symbol	TRUE		1648712						
ANR	1648800	Symbol	skip		1648712						
ANR	1648801	Symbol	FALSE		1648712						
ANR	1648802	Symbol	strcasecmp		1648712						
ANR	1648803	Symbol	MATCH		1648712						
ANR	1648804	Function	is_ipv4_addr_implementation	419:0:10112:11923							
ANR	1648805	FunctionDef	"is_ipv4_addr_implementation (const char * inbuf , struct in_addr * sin_addr , struct in_addr * mask_addr , int allow_wildcard)"		1648804	0					
ANR	1648806	CompoundStatement		422:0:10237:11923	1648804	0					
ANR	1648807	IdentifierDeclStatement	int len ;	423:1:10240:10247	1648804	0	True				
ANR	1648808	IdentifierDecl	len		1648804	0					
ANR	1648809	IdentifierDeclType	int		1648804	0					
ANR	1648810	Identifier	len		1648804	1					
ANR	1648811	IdentifierDeclStatement	char buf [ 17 ] ;	424:1:10250:10262	1648804	1	True				
ANR	1648812	IdentifierDecl	buf [ 17 ]		1648804	0					
ANR	1648813	IdentifierDeclType	char [ 17 ]		1648804	0					
ANR	1648814	Identifier	buf		1648804	1					
ANR	1648815	PrimaryExpression	17		1648804	2					
ANR	1648816	IdentifierDeclStatement	int part = 0 ;	425:1:10265:10277	1648804	2	True				
ANR	1648817	IdentifierDecl	part = 0		1648804	0					
ANR	1648818	IdentifierDeclType	int		1648804	0					
ANR	1648819	Identifier	part		1648804	1					
ANR	1648820	AssignmentExpression	part = 0		1648804	2		=			
ANR	1648821	Identifier	part		1648804	0					
ANR	1648822	PrimaryExpression	0		1648804	1					
ANR	1648823	IdentifierDeclStatement	"int i , j , x ;"	426:1:10280:10289	1648804	3	True				
ANR	1648824	IdentifierDecl	i		1648804	0					
ANR	1648825	IdentifierDeclType	int		1648804	0					
ANR	1648826	Identifier	i		1648804	1					
ANR	1648827	IdentifierDecl	j		1648804	1					
ANR	1648828	IdentifierDeclType	int		1648804	0					
ANR	1648829	Identifier	j		1648804	1					
ANR	1648830	IdentifierDecl	x		1648804	2					
ANR	1648831	IdentifierDeclType	int		1648804	0					
ANR	1648832	Identifier	x		1648804	1					
ANR	1648833	IdentifierDeclStatement	char save_char ;	427:1:10292:10306	1648804	4	True				
ANR	1648834	IdentifierDecl	save_char		1648804	0					
ANR	1648835	IdentifierDeclType	char		1648804	0					
ANR	1648836	Identifier	save_char		1648804	1					
ANR	1648837	IdentifierDeclStatement	unsigned char * cur_byte = NULL ;	428:1:10309:10339	1648804	5	True				
ANR	1648838	IdentifierDecl	* cur_byte = NULL		1648804	0					
ANR	1648839	IdentifierDeclType	unsigned char *		1648804	0					
ANR	1648840	Identifier	cur_byte		1648804	1					
ANR	1648841	AssignmentExpression	* cur_byte = NULL		1648804	2		=			
ANR	1648842	Identifier	NULL		1648804	0					
ANR	1648843	Identifier	NULL		1648804	1					
ANR	1648844	IdentifierDeclStatement	unsigned char * cur_mask_byte = NULL ;	429:1:10342:10377	1648804	6	True				
ANR	1648845	IdentifierDecl	* cur_mask_byte = NULL		1648804	0					
ANR	1648846	IdentifierDeclType	unsigned char *		1648804	0					
ANR	1648847	Identifier	cur_mask_byte		1648804	1					
ANR	1648848	AssignmentExpression	* cur_mask_byte = NULL		1648804	2		=			
ANR	1648849	Identifier	NULL		1648804	0					
ANR	1648850	Identifier	NULL		1648804	1					
ANR	1648851	IfStatement	if ( sin_addr )		1648804	7					
ANR	1648852	Condition	sin_addr	430:5:10384:10391	1648804	0	True				
ANR	1648853	Identifier	sin_addr		1648804	0					
ANR	1648854	CompoundStatement		9:16:157:157	1648804	1					
ANR	1648855	ExpressionStatement	cur_byte = ( unsigned char * ) sin_addr	431:2:10399:10436	1648804	0	True				
ANR	1648856	AssignmentExpression	cur_byte = ( unsigned char * ) sin_addr		1648804	0		=			
ANR	1648857	Identifier	cur_byte		1648804	0					
ANR	1648858	CastExpression	( unsigned char * ) sin_addr		1648804	1					
ANR	1648859	CastTarget	unsigned char *		1648804	0					
ANR	1648860	Identifier	sin_addr		1648804	1					
ANR	1648861	IfStatement	if ( mask_addr )		1648804	8					
ANR	1648862	Condition	mask_addr	433:5:10446:10454	1648804	0	True				
ANR	1648863	Identifier	mask_addr		1648804	0					
ANR	1648864	CompoundStatement		12:17:220:220	1648804	1					
ANR	1648865	ExpressionStatement	cur_mask_byte = ( unsigned char * ) mask_addr	434:2:10462:10505	1648804	0	True				
ANR	1648866	AssignmentExpression	cur_mask_byte = ( unsigned char * ) mask_addr		1648804	0		=			
ANR	1648867	Identifier	cur_mask_byte		1648804	0					
ANR	1648868	CastExpression	( unsigned char * ) mask_addr		1648804	1					
ANR	1648869	CastTarget	unsigned char *		1648804	0					
ANR	1648870	Identifier	mask_addr		1648804	1					
ANR	1648871	ExpressionStatement	len = strlen ( inbuf )	437:1:10512:10531	1648804	9	True				
ANR	1648872	AssignmentExpression	len = strlen ( inbuf )		1648804	0		=			
ANR	1648873	Identifier	len		1648804	0					
ANR	1648874	CallExpression	strlen ( inbuf )		1648804	1					
ANR	1648875	Callee	strlen		1648804	0					
ANR	1648876	Identifier	strlen		1648804	0					
ANR	1648877	ArgumentList	inbuf		1648804	1					
ANR	1648878	Argument	inbuf		1648804	0					
ANR	1648879	Identifier	inbuf		1648804	0					
ANR	1648880	IfStatement	if ( len < 1 || len > 15 )		1648804	10					
ANR	1648881	Condition	len < 1 || len > 15	438:6:10539:10557	1648804	0	True				
ANR	1648882	OrExpression	len < 1 || len > 15		1648804	0		||			
ANR	1648883	RelationalExpression	len < 1		1648804	0		<			
ANR	1648884	Identifier	len		1648804	0					
ANR	1648885	PrimaryExpression	1		1648804	1					
ANR	1648886	RelationalExpression	len > 15		1648804	1		>			
ANR	1648887	Identifier	len		1648804	0					
ANR	1648888	PrimaryExpression	15		1648804	1					
ANR	1648889	ReturnStatement	return FALSE ;	439:2:10563:10575	1648804	1	True				
ANR	1648890	Identifier	FALSE		1648804	0					
ANR	1648891	ExpressionStatement	"strncpy ( buf , inbuf , 16 )"	444:1:10714:10739	1648804	11	True				
ANR	1648892	CallExpression	"strncpy ( buf , inbuf , 16 )"		1648804	0					
ANR	1648893	Callee	strncpy		1648804	0					
ANR	1648894	Identifier	strncpy		1648804	0					
ANR	1648895	ArgumentList	buf		1648804	1					
ANR	1648896	Argument	buf		1648804	0					
ANR	1648897	Identifier	buf		1648804	0					
ANR	1648898	Argument	inbuf		1648804	1					
ANR	1648899	Identifier	inbuf		1648804	0					
ANR	1648900	Argument	16		1648804	2					
ANR	1648901	PrimaryExpression	16		1648804	0					
ANR	1648902	IfStatement	if ( buf [ len - 1 ] == '*' || buf [ len - 1 ] == '.' )		1648804	12					
ANR	1648903	Condition	buf [ len - 1 ] == '*' || buf [ len - 1 ] == '.'	447:6:10792:10829	1648804	0	True				
ANR	1648904	OrExpression	buf [ len - 1 ] == '*' || buf [ len - 1 ] == '.'		1648804	0		||			
ANR	1648905	EqualityExpression	buf [ len - 1 ] == '*'		1648804	0		==			
ANR	1648906	ArrayIndexing	buf [ len - 1 ]		1648804	0					
ANR	1648907	Identifier	buf		1648804	0					
ANR	1648908	AdditiveExpression	len - 1		1648804	1		-			
ANR	1648909	Identifier	len		1648804	0					
ANR	1648910	PrimaryExpression	1		1648804	1					
ANR	1648911	PrimaryExpression	'*'		1648804	1					
ANR	1648912	EqualityExpression	buf [ len - 1 ] == '.'		1648804	1		==			
ANR	1648913	ArrayIndexing	buf [ len - 1 ]		1648804	0					
ANR	1648914	Identifier	buf		1648804	0					
ANR	1648915	AdditiveExpression	len - 1		1648804	1		-			
ANR	1648916	Identifier	len		1648804	0					
ANR	1648917	PrimaryExpression	1		1648804	1					
ANR	1648918	PrimaryExpression	'.'		1648804	1					
ANR	1648919	CompoundStatement		26:47:595:595	1648804	1					
ANR	1648920	IfStatement	if ( len > 1 && buf [ len - 2 ] == '.' )		1648804	0					
ANR	1648921	Condition	len > 1 && buf [ len - 2 ] == '.'	448:7:10842:10867	1648804	0	True				
ANR	1648922	AndExpression	len > 1 && buf [ len - 2 ] == '.'		1648804	0		&&			
ANR	1648923	RelationalExpression	len > 1		1648804	0		>			
ANR	1648924	Identifier	len		1648804	0					
ANR	1648925	PrimaryExpression	1		1648804	1					
ANR	1648926	EqualityExpression	buf [ len - 2 ] == '.'		1648804	1		==			
ANR	1648927	ArrayIndexing	buf [ len - 2 ]		1648804	0					
ANR	1648928	Identifier	buf		1648804	0					
ANR	1648929	AdditiveExpression	len - 2		1648804	1		-			
ANR	1648930	Identifier	len		1648804	0					
ANR	1648931	PrimaryExpression	2		1648804	1					
ANR	1648932	PrimaryExpression	'.'		1648804	1					
ANR	1648933	ExpressionStatement	buf [ len - 2 ] = '\\0'	449:3:10874:10891	1648804	1	True				
ANR	1648934	AssignmentExpression	buf [ len - 2 ] = '\\0'		1648804	0		=			
ANR	1648935	ArrayIndexing	buf [ len - 2 ]		1648804	0					
ANR	1648936	Identifier	buf		1648804	0					
ANR	1648937	AdditiveExpression	len - 2		1648804	1		-			
ANR	1648938	Identifier	len		1648804	0					
ANR	1648939	PrimaryExpression	2		1648804	1					
ANR	1648940	PrimaryExpression	'\\0'		1648804	1					
ANR	1648941	ElseStatement	else		1648804	0					
ANR	1648942	ExpressionStatement	buf [ len - 1 ] = '\\0'	451:3:10903:10920	1648804	0	True				
ANR	1648943	AssignmentExpression	buf [ len - 1 ] = '\\0'		1648804	0		=			
ANR	1648944	ArrayIndexing	buf [ len - 1 ]		1648804	0					
ANR	1648945	Identifier	buf		1648804	0					
ANR	1648946	AdditiveExpression	len - 1		1648804	1		-			
ANR	1648947	Identifier	len		1648804	0					
ANR	1648948	PrimaryExpression	1		1648804	1					
ANR	1648949	PrimaryExpression	'\\0'		1648804	1					
ANR	1648950	ExpressionStatement	i = 0	456:1:11018:11023	1648804	13	True				
ANR	1648951	AssignmentExpression	i = 0		1648804	0		=			
ANR	1648952	Identifier	i		1648804	0					
ANR	1648953	PrimaryExpression	0		1648804	1					
ANR	1648954	ForStatement	for ( ; buf [ i ] ; )		1648804	14					
ANR	1648955	Condition	buf [ i ]	457:6:11031:11036	1648804	0	True				
ANR	1648956	ArrayIndexing	buf [ i ]		1648804	0					
ANR	1648957	Identifier	buf		1648804	0					
ANR	1648958	Identifier	i		1648804	1					
ANR	1648959	CompoundStatement		36:15:802:802	1648804	1					
ANR	1648960	ExpressionStatement	j = i	459:2:11045:11050	1648804	0	True				
ANR	1648961	AssignmentExpression	j = i		1648804	0		=			
ANR	1648962	Identifier	j		1648804	0					
ANR	1648963	Identifier	i		1648804	1					
ANR	1648964	WhileStatement	while ( buf [ i ] >= '0' && buf [ i ] <= '9' )		1648804	1					
ANR	1648965	Condition	buf [ i ] >= '0' && buf [ i ] <= '9'	460:9:11061:11090	1648804	0	True				
ANR	1648966	AndExpression	buf [ i ] >= '0' && buf [ i ] <= '9'		1648804	0		&&			
ANR	1648967	RelationalExpression	buf [ i ] >= '0'		1648804	0		>=			
ANR	1648968	ArrayIndexing	buf [ i ]		1648804	0					
ANR	1648969	Identifier	buf		1648804	0					
ANR	1648970	Identifier	i		1648804	1					
ANR	1648971	PrimaryExpression	'0'		1648804	1					
ANR	1648972	RelationalExpression	buf [ i ] <= '9'		1648804	1		<=			
ANR	1648973	ArrayIndexing	buf [ i ]		1648804	0					
ANR	1648974	Identifier	buf		1648804	0					
ANR	1648975	Identifier	i		1648804	1					
ANR	1648976	PrimaryExpression	'9'		1648804	1					
ANR	1648977	ExpressionStatement	i ++	460:41:11093:11096	1648804	1	True				
ANR	1648978	PostIncDecOperationExpression	i ++		1648804	0					
ANR	1648979	Identifier	i		1648804	0					
ANR	1648980	IncDec	++		1648804	1					
ANR	1648981	IfStatement	if ( i == j )		1648804	2					
ANR	1648982	Condition	i == j	462:7:11141:11146	1648804	0	True				
ANR	1648983	EqualityExpression	i == j		1648804	0		==			
ANR	1648984	Identifier	i		1648804	0					
ANR	1648985	Identifier	j		1648804	1					
ANR	1648986	ReturnStatement	return FALSE ;	463:3:11153:11165	1648804	1	True				
ANR	1648987	Identifier	FALSE		1648804	0					
ANR	1648988	ExpressionStatement	save_char = buf [ i ]	465:2:11239:11257	1648804	3	True				
ANR	1648989	AssignmentExpression	save_char = buf [ i ]		1648804	0		=			
ANR	1648990	Identifier	save_char		1648804	0					
ANR	1648991	ArrayIndexing	buf [ i ]		1648804	1					
ANR	1648992	Identifier	buf		1648804	0					
ANR	1648993	Identifier	i		1648804	1					
ANR	1648994	ExpressionStatement	buf [ i ] = '\\0'	466:2:11261:11274	1648804	4	True				
ANR	1648995	AssignmentExpression	buf [ i ] = '\\0'		1648804	0		=			
ANR	1648996	ArrayIndexing	buf [ i ]		1648804	0					
ANR	1648997	Identifier	buf		1648804	0					
ANR	1648998	Identifier	i		1648804	1					
ANR	1648999	PrimaryExpression	'\\0'		1648804	1					
ANR	1649000	ExpressionStatement	x = atoi ( & ( buf [ j ] ) )	467:2:11278:11299	1648804	5	True				
ANR	1649001	AssignmentExpression	x = atoi ( & ( buf [ j ] ) )		1648804	0		=			
ANR	1649002	Identifier	x		1648804	0					
ANR	1649003	CallExpression	atoi ( & ( buf [ j ] ) )		1648804	1					
ANR	1649004	Callee	atoi		1648804	0					
ANR	1649005	Identifier	atoi		1648804	0					
ANR	1649006	ArgumentList	& ( buf [ j ] )		1648804	1					
ANR	1649007	Argument	& ( buf [ j ] )		1648804	0					
ANR	1649008	UnaryOperationExpression	& ( buf [ j ] )		1648804	0					
ANR	1649009	UnaryOperator	&		1648804	0					
ANR	1649010	ArrayIndexing	buf [ j ]		1648804	1					
ANR	1649011	Identifier	buf		1648804	0					
ANR	1649012	Identifier	j		1648804	1					
ANR	1649013	IfStatement	if ( x < 0 || x > 255 )		1648804	6					
ANR	1649014	Condition	x < 0 || x > 255	468:6:11307:11322	1648804	0	True				
ANR	1649015	OrExpression	x < 0 || x > 255		1648804	0		||			
ANR	1649016	RelationalExpression	x < 0		1648804	0		<			
ANR	1649017	Identifier	x		1648804	0					
ANR	1649018	PrimaryExpression	0		1648804	1					
ANR	1649019	RelationalExpression	x > 255		1648804	1		>			
ANR	1649020	Identifier	x		1648804	0					
ANR	1649021	PrimaryExpression	255		1648804	1					
ANR	1649022	CompoundStatement		47:25:1088:1088	1648804	1					
ANR	1649023	ReturnStatement	return FALSE ;	469:3:11331:11343	1648804	0	True				
ANR	1649024	Identifier	FALSE		1648804	0					
ANR	1649025	IfStatement	if ( cur_byte )		1648804	7					
ANR	1649026	Condition	cur_byte	471:6:11355:11362	1648804	0	True				
ANR	1649027	Identifier	cur_byte		1648804	0					
ANR	1649028	CompoundStatement		50:17:1128:1128	1648804	1					
ANR	1649029	ExpressionStatement	* cur_byte = x	472:3:11371:11384	1648804	0	True				
ANR	1649030	AssignmentExpression	* cur_byte = x		1648804	0		=			
ANR	1649031	UnaryOperationExpression	* cur_byte		1648804	0					
ANR	1649032	UnaryOperator	*		1648804	0					
ANR	1649033	Identifier	cur_byte		1648804	1					
ANR	1649034	Identifier	x		1648804	1					
ANR	1649035	ExpressionStatement	cur_byte ++	473:3:11414:11424	1648804	1	True				
ANR	1649036	PostIncDecOperationExpression	cur_byte ++		1648804	0					
ANR	1649037	Identifier	cur_byte		1648804	0					
ANR	1649038	IncDec	++		1648804	1					
ANR	1649039	IfStatement	if ( cur_mask_byte )		1648804	8					
ANR	1649040	Condition	cur_mask_byte	475:6:11436:11448	1648804	0	True				
ANR	1649041	Identifier	cur_mask_byte		1648804	0					
ANR	1649042	CompoundStatement		54:22:1214:1214	1648804	1					
ANR	1649043	ExpressionStatement	* ( cur_mask_byte ++ ) = 255	476:3:11457:11481	1648804	0	True				
ANR	1649044	AssignmentExpression	* ( cur_mask_byte ++ ) = 255		1648804	0		=			
ANR	1649045	UnaryOperationExpression	* ( cur_mask_byte ++ )		1648804	0					
ANR	1649046	UnaryOperator	*		1648804	0					
ANR	1649047	PostIncDecOperationExpression	cur_mask_byte ++		1648804	1					
ANR	1649048	Identifier	cur_mask_byte		1648804	0					
ANR	1649049	IncDec	++		1648804	1					
ANR	1649050	PrimaryExpression	255		1648804	1					
ANR	1649051	ExpressionStatement	buf [ i ] = save_char	478:2:11489:11507	1648804	9	True				
ANR	1649052	AssignmentExpression	buf [ i ] = save_char		1648804	0		=			
ANR	1649053	ArrayIndexing	buf [ i ]		1648804	0					
ANR	1649054	Identifier	buf		1648804	0					
ANR	1649055	Identifier	i		1648804	1					
ANR	1649056	Identifier	save_char		1648804	1					
ANR	1649057	ExpressionStatement	part ++	480:2:11512:11518	1648804	10	True				
ANR	1649058	PostIncDecOperationExpression	part ++		1648804	0					
ANR	1649059	Identifier	part		1648804	0					
ANR	1649060	IncDec	++		1648804	1					
ANR	1649061	IfStatement	if ( buf [ i ] == '\\0' )		1648804	11					
ANR	1649062	Condition	buf [ i ] == '\\0'	482:7:11528:11541	1648804	0	True				
ANR	1649063	EqualityExpression	buf [ i ] == '\\0'		1648804	0		==			
ANR	1649064	ArrayIndexing	buf [ i ]		1648804	0					
ANR	1649065	Identifier	buf		1648804	0					
ANR	1649066	Identifier	i		1648804	1					
ANR	1649067	PrimaryExpression	'\\0'		1648804	1					
ANR	1649068	BreakStatement	break ;	483:3:11548:11553	1648804	1	True				
ANR	1649069	IfStatement	if ( buf [ i ] == '.' )		1648804	12					
ANR	1649070	Condition	buf [ i ] == '.'	485:7:11563:11575	1648804	0	True				
ANR	1649071	EqualityExpression	buf [ i ] == '.'		1648804	0		==			
ANR	1649072	ArrayIndexing	buf [ i ]		1648804	0					
ANR	1649073	Identifier	buf		1648804	0					
ANR	1649074	Identifier	i		1648804	1					
ANR	1649075	PrimaryExpression	'.'		1648804	1					
ANR	1649076	ExpressionStatement	i ++	486:3:11582:11585	1648804	1	True				
ANR	1649077	PostIncDecOperationExpression	i ++		1648804	0					
ANR	1649078	Identifier	i		1648804	0					
ANR	1649079	IncDec	++		1648804	1					
ANR	1649080	ElseStatement	else		1648804	0					
ANR	1649081	ReturnStatement	return FALSE ;	488:3:11597:11609	1648804	0	True				
ANR	1649082	Identifier	FALSE		1648804	0					
ANR	1649083	IfStatement	if ( part >= 4 )		1648804	13					
ANR	1649084	Condition	part >= 4	490:7:11619:11627	1648804	0	True				
ANR	1649085	RelationalExpression	part >= 4		1648804	0		>=			
ANR	1649086	Identifier	part		1648804	0					
ANR	1649087	PrimaryExpression	4		1648804	1					
ANR	1649088	ReturnStatement	return FALSE ;	491:3:11634:11646	1648804	1	True				
ANR	1649089	Identifier	FALSE		1648804	0					
ANR	1649090	IfStatement	if ( ! allow_wildcard && part != 4 )		1648804	15					
ANR	1649091	Condition	! allow_wildcard && part != 4	494:5:11657:11684	1648804	0	True				
ANR	1649092	AndExpression	! allow_wildcard && part != 4		1648804	0		&&			
ANR	1649093	UnaryOperationExpression	! allow_wildcard		1648804	0					
ANR	1649094	UnaryOperator	!		1648804	0					
ANR	1649095	Identifier	allow_wildcard		1648804	1					
ANR	1649096	EqualityExpression	part != 4		1648804	1		!=			
ANR	1649097	Identifier	part		1648804	0					
ANR	1649098	PrimaryExpression	4		1648804	1					
ANR	1649099	CompoundStatement		73:36:1450:1450	1648804	1					
ANR	1649100	ReturnStatement	return FALSE ;	495:2:11692:11704	1648804	0	True				
ANR	1649101	Identifier	FALSE		1648804	0					
ANR	1649102	IfStatement	if ( cur_byte )		1648804	16					
ANR	1649103	Condition	cur_byte	498:5:11715:11722	1648804	0	True				
ANR	1649104	Identifier	cur_byte		1648804	0					
ANR	1649105	CompoundStatement		77:16:1488:1488	1648804	1					
ANR	1649106	ForStatement	for ( i = 0 ; i < 4 - part ; i ++ )		1648804	0					
ANR	1649107	ForInit	i = 0 ;	499:7:11735:11738	1648804	0	True				
ANR	1649108	AssignmentExpression	i = 0		1648804	0		=			
ANR	1649109	Identifier	i		1648804	0					
ANR	1649110	PrimaryExpression	0		1648804	1					
ANR	1649111	Condition	i < 4 - part	499:12:11740:11751	1648804	1	True				
ANR	1649112	RelationalExpression	i < 4 - part		1648804	0		<			
ANR	1649113	Identifier	i		1648804	0					
ANR	1649114	AdditiveExpression	4 - part		1648804	1		-			
ANR	1649115	PrimaryExpression	4		1648804	0					
ANR	1649116	Identifier	part		1648804	1					
ANR	1649117	PostIncDecOperationExpression	i ++	499:26:11754:11756	1648804	2	True				
ANR	1649118	Identifier	i		1648804	0					
ANR	1649119	IncDec	++		1648804	1					
ANR	1649120	CompoundStatement		78:31:1521:1521	1648804	3					
ANR	1649121	ExpressionStatement	* cur_byte = ( unsigned char ) 255	500:3:11764:11795	1648804	0	True				
ANR	1649122	AssignmentExpression	* cur_byte = ( unsigned char ) 255		1648804	0		=			
ANR	1649123	UnaryOperationExpression	* cur_byte		1648804	0					
ANR	1649124	UnaryOperator	*		1648804	0					
ANR	1649125	Identifier	cur_byte		1648804	1					
ANR	1649126	CastExpression	( unsigned char ) 255		1648804	1					
ANR	1649127	CastTarget	unsigned char		1648804	0					
ANR	1649128	PrimaryExpression	255		1648804	1					
ANR	1649129	ExpressionStatement	cur_byte ++	501:3:11800:11810	1648804	1	True				
ANR	1649130	PostIncDecOperationExpression	cur_byte ++		1648804	0					
ANR	1649131	Identifier	cur_byte		1648804	0					
ANR	1649132	IncDec	++		1648804	1					
ANR	1649133	IfStatement	if ( cur_mask_byte )		1648804	17					
ANR	1649134	Condition	cur_mask_byte	504:5:11824:11836	1648804	0	True				
ANR	1649135	Identifier	cur_mask_byte		1648804	0					
ANR	1649136	CompoundStatement		83:21:1602:1602	1648804	1					
ANR	1649137	ForStatement	for ( i = 0 ; i < 4 - part ; i ++ )		1648804	0					
ANR	1649138	ForInit	i = 0 ;	505:7:11849:11852	1648804	0	True				
ANR	1649139	AssignmentExpression	i = 0		1648804	0		=			
ANR	1649140	Identifier	i		1648804	0					
ANR	1649141	PrimaryExpression	0		1648804	1					
ANR	1649142	Condition	i < 4 - part	505:12:11854:11865	1648804	1	True				
ANR	1649143	RelationalExpression	i < 4 - part		1648804	0		<			
ANR	1649144	Identifier	i		1648804	0					
ANR	1649145	AdditiveExpression	4 - part		1648804	1		-			
ANR	1649146	PrimaryExpression	4		1648804	0					
ANR	1649147	Identifier	part		1648804	1					
ANR	1649148	PostIncDecOperationExpression	i ++	505:26:11868:11870	1648804	2	True				
ANR	1649149	Identifier	i		1648804	0					
ANR	1649150	IncDec	++		1648804	1					
ANR	1649151	CompoundStatement		84:31:1635:1635	1648804	3					
ANR	1649152	ExpressionStatement	* ( cur_mask_byte ++ ) = 0	506:3:11878:11900	1648804	0	True				
ANR	1649153	AssignmentExpression	* ( cur_mask_byte ++ ) = 0		1648804	0		=			
ANR	1649154	UnaryOperationExpression	* ( cur_mask_byte ++ )		1648804	0					
ANR	1649155	UnaryOperator	*		1648804	0					
ANR	1649156	PostIncDecOperationExpression	cur_mask_byte ++		1648804	1					
ANR	1649157	Identifier	cur_mask_byte		1648804	0					
ANR	1649158	IncDec	++		1648804	1					
ANR	1649159	PrimaryExpression	0		1648804	1					
ANR	1649160	ReturnStatement	return TRUE ;	509:1:11910:11921	1648804	18	True				
ANR	1649161	Identifier	TRUE		1648804	0					
ANR	1649162	ReturnType	int		1648804	1					
ANR	1649163	Identifier	is_ipv4_addr_implementation		1648804	2					
ANR	1649164	ParameterList	"const char * inbuf , struct in_addr * sin_addr , struct in_addr * mask_addr , int allow_wildcard"		1648804	3					
ANR	1649165	Parameter	const char * inbuf	420:28:10144:10160	1648804	0	True				
ANR	1649166	ParameterType	const char *		1648804	0					
ANR	1649167	Identifier	inbuf		1648804	1					
ANR	1649168	Parameter	struct in_addr * sin_addr	420:47:10163:10186	1648804	1	True				
ANR	1649169	ParameterType	struct in_addr *		1648804	0					
ANR	1649170	Identifier	sin_addr		1648804	1					
ANR	1649171	Parameter	struct in_addr * mask_addr	421:2:10191:10215	1648804	2	True				
ANR	1649172	ParameterType	struct in_addr *		1648804	0					
ANR	1649173	Identifier	mask_addr		1648804	1					
ANR	1649174	Parameter	int allow_wildcard	421:28:10217:10234	1648804	3	True				
ANR	1649175	ParameterType	int		1648804	0					
ANR	1649176	Identifier	allow_wildcard		1648804	1					
ANR	1649177	CFGEntryNode	ENTRY		1648804		True				
ANR	1649178	CFGExitNode	EXIT		1648804		True				
ANR	1649179	Symbol	atoi		1648804						
ANR	1649180	Symbol	* buf		1648804						
ANR	1649181	Symbol	NULL		1648804						
ANR	1649182	Symbol	mask_addr		1648804						
ANR	1649183	Symbol	* cur_byte		1648804						
ANR	1649184	Symbol	part		1648804						
ANR	1649185	Symbol	i		1648804						
ANR	1649186	Symbol	save_char		1648804						
ANR	1649187	Symbol	TRUE		1648804						
ANR	1649188	Symbol	sin_addr		1648804						
ANR	1649189	Symbol	j		1648804						
ANR	1649190	Symbol	cur_mask_byte		1648804						
ANR	1649191	Symbol	* ( cur_mask_byte ++ )		1648804						
ANR	1649192	Symbol	strlen		1648804						
ANR	1649193	Symbol	buf		1648804						
ANR	1649194	Symbol	* i		1648804						
ANR	1649195	Symbol	len		1648804						
ANR	1649196	Symbol	inbuf		1648804						
ANR	1649197	Symbol	x		1648804						
ANR	1649198	Symbol	allow_wildcard		1648804						
ANR	1649199	Symbol	cur_byte		1648804						
ANR	1649200	Symbol	FALSE		1648804						
ANR	1649201	Symbol	* len		1648804						
ANR	1649202	Function	is_valid_sinful	621:0:15556:17091							
ANR	1649203	FunctionDef	is_valid_sinful (const char * sinful)		1649202	0					
ANR	1649204	CompoundStatement		623:0:15598:17091	1649202	0					
ANR	1649205	ExpressionStatement	"dprintf ( D_HOSTNAME , ""validate %s\\n"" , sinful )"	624:1:15601:15645	1649202	0	True				
ANR	1649206	CallExpression	"dprintf ( D_HOSTNAME , ""validate %s\\n"" , sinful )"		1649202	0					
ANR	1649207	Callee	dprintf		1649202	0					
ANR	1649208	Identifier	dprintf		1649202	0					
ANR	1649209	ArgumentList	D_HOSTNAME		1649202	1					
ANR	1649210	Argument	D_HOSTNAME		1649202	0					
ANR	1649211	Identifier	D_HOSTNAME		1649202	0					
ANR	1649212	Argument	"""validate %s\\n"""		1649202	1					
ANR	1649213	PrimaryExpression	"""validate %s\\n"""		1649202	0					
ANR	1649214	Argument	sinful		1649202	2					
ANR	1649215	Identifier	sinful		1649202	0					
ANR	1649216	IdentifierDeclStatement	char addrbuf [ INET6_ADDRSTRLEN ] ;	625:1:15648:15678	1649202	1	True				
ANR	1649217	IdentifierDecl	addrbuf [ INET6_ADDRSTRLEN ]		1649202	0					
ANR	1649218	IdentifierDeclType	char [ INET6_ADDRSTRLEN ]		1649202	0					
ANR	1649219	Identifier	addrbuf		1649202	1					
ANR	1649220	Identifier	INET6_ADDRSTRLEN		1649202	2					
ANR	1649221	IdentifierDeclStatement	const char * acc = sinful ;	626:1:15681:15705	1649202	2	True				
ANR	1649222	IdentifierDecl	* acc = sinful		1649202	0					
ANR	1649223	IdentifierDeclType	const char *		1649202	0					
ANR	1649224	Identifier	acc		1649202	1					
ANR	1649225	AssignmentExpression	* acc = sinful		1649202	2		=			
ANR	1649226	Identifier	sinful		1649202	0					
ANR	1649227	Identifier	sinful		1649202	1					
ANR	1649228	IdentifierDeclStatement	const char * tmp ;	627:1:15708:15723	1649202	3	True				
ANR	1649229	IdentifierDecl	* tmp		1649202	0					
ANR	1649230	IdentifierDeclType	const char *		1649202	0					
ANR	1649231	Identifier	tmp		1649202	1					
ANR	1649232	IdentifierDeclStatement	const char * addr_begin ;	628:1:15726:15748	1649202	4	True				
ANR	1649233	IdentifierDecl	* addr_begin		1649202	0					
ANR	1649234	IdentifierDeclType	const char *		1649202	0					
ANR	1649235	Identifier	addr_begin		1649202	1					
ANR	1649236	IdentifierDeclStatement	const char * addr_end ;	629:1:15751:15771	1649202	5	True				
ANR	1649237	IdentifierDecl	* addr_end		1649202	0					
ANR	1649238	IdentifierDeclType	const char *		1649202	0					
ANR	1649239	Identifier	addr_end		1649202	1					
ANR	1649240	IfStatement	if ( ! acc )		1649202	6					
ANR	1649241	Condition	! acc	630:5:15778:15781	1649202	0	True				
ANR	1649242	UnaryOperationExpression	! acc		1649202	0					
ANR	1649243	UnaryOperator	!		1649202	0					
ANR	1649244	Identifier	acc		1649202	1					
ANR	1649245	ReturnStatement	return FALSE ;	631:2:15786:15798	1649202	1	True				
ANR	1649246	Identifier	FALSE		1649202	0					
ANR	1649247	IfStatement	if ( * acc != '<' )		1649202	7					
ANR	1649248	Condition	* acc != '<'	633:5:15806:15816	1649202	0	True				
ANR	1649249	EqualityExpression	* acc != '<'		1649202	0		!=			
ANR	1649250	UnaryOperationExpression	* acc		1649202	0					
ANR	1649251	UnaryOperator	*		1649202	0					
ANR	1649252	Identifier	acc		1649202	1					
ANR	1649253	PrimaryExpression	'<'		1649202	1					
ANR	1649254	CompoundStatement		11:18:220:220	1649202	1					
ANR	1649255	ExpressionStatement	"dprintf ( D_HOSTNAME , ""is not begin with <\\n"" )"	634:2:15823:15867	1649202	0	True				
ANR	1649256	CallExpression	"dprintf ( D_HOSTNAME , ""is not begin with <\\n"" )"		1649202	0					
ANR	1649257	Callee	dprintf		1649202	0					
ANR	1649258	Identifier	dprintf		1649202	0					
ANR	1649259	ArgumentList	D_HOSTNAME		1649202	1					
ANR	1649260	Argument	D_HOSTNAME		1649202	0					
ANR	1649261	Identifier	D_HOSTNAME		1649202	0					
ANR	1649262	Argument	"""is not begin with <\\n"""		1649202	1					
ANR	1649263	PrimaryExpression	"""is not begin with <\\n"""		1649202	0					
ANR	1649264	ReturnStatement	return FALSE ;	635:2:15871:15883	1649202	1	True				
ANR	1649265	Identifier	FALSE		1649202	0					
ANR	1649266	ExpressionStatement	acc ++	637:1:15889:15894	1649202	8	True				
ANR	1649267	PostIncDecOperationExpression	acc ++		1649202	0					
ANR	1649268	Identifier	acc		1649202	0					
ANR	1649269	IncDec	++		1649202	1					
ANR	1649270	IfStatement	if ( * acc == '[' )		1649202	9					
ANR	1649271	Condition	* acc == '['	638:5:15901:15911	1649202	0	True				
ANR	1649272	EqualityExpression	* acc == '['		1649202	0		==			
ANR	1649273	UnaryOperationExpression	* acc		1649202	0					
ANR	1649274	UnaryOperator	*		1649202	0					
ANR	1649275	Identifier	acc		1649202	1					
ANR	1649276	PrimaryExpression	'['		1649202	1					
ANR	1649277	CompoundStatement		34:2:839:856	1649202	1					
ANR	1649278	ExpressionStatement	"dprintf ( D_HOSTNAME , ""ipv6 address\\n"" )"	639:2:15918:15955	1649202	0	True				
ANR	1649279	CallExpression	"dprintf ( D_HOSTNAME , ""ipv6 address\\n"" )"		1649202	0					
ANR	1649280	Callee	dprintf		1649202	0					
ANR	1649281	Identifier	dprintf		1649202	0					
ANR	1649282	ArgumentList	D_HOSTNAME		1649202	1					
ANR	1649283	Argument	D_HOSTNAME		1649202	0					
ANR	1649284	Identifier	D_HOSTNAME		1649202	0					
ANR	1649285	Argument	"""ipv6 address\\n"""		1649202	1					
ANR	1649286	PrimaryExpression	"""ipv6 address\\n"""		1649202	0					
ANR	1649287	ExpressionStatement	"tmp = strchr ( acc , ']' )"	640:2:15959:15981	1649202	1	True				
ANR	1649288	AssignmentExpression	"tmp = strchr ( acc , ']' )"		1649202	0		=			
ANR	1649289	Identifier	tmp		1649202	0					
ANR	1649290	CallExpression	"strchr ( acc , ']' )"		1649202	1					
ANR	1649291	Callee	strchr		1649202	0					
ANR	1649292	Identifier	strchr		1649202	0					
ANR	1649293	ArgumentList	acc		1649202	1					
ANR	1649294	Argument	acc		1649202	0					
ANR	1649295	Identifier	acc		1649202	0					
ANR	1649296	Argument	']'		1649202	1					
ANR	1649297	PrimaryExpression	']'		1649202	0					
ANR	1649298	IfStatement	if ( ! tmp )		1649202	2					
ANR	1649299	Condition	! tmp	641:6:15989:15992	1649202	0	True				
ANR	1649300	UnaryOperationExpression	! tmp		1649202	0					
ANR	1649301	UnaryOperator	!		1649202	0					
ANR	1649302	Identifier	tmp		1649202	1					
ANR	1649303	CompoundStatement		19:12:396:396	1649202	1					
ANR	1649304	ExpressionStatement	"dprintf ( D_HOSTNAME , ""could not find ]\\n"" )"	642:3:16000:16041	1649202	0	True				
ANR	1649305	CallExpression	"dprintf ( D_HOSTNAME , ""could not find ]\\n"" )"		1649202	0					
ANR	1649306	Callee	dprintf		1649202	0					
ANR	1649307	Identifier	dprintf		1649202	0					
ANR	1649308	ArgumentList	D_HOSTNAME		1649202	1					
ANR	1649309	Argument	D_HOSTNAME		1649202	0					
ANR	1649310	Identifier	D_HOSTNAME		1649202	0					
ANR	1649311	Argument	"""could not find ]\\n"""		1649202	1					
ANR	1649312	PrimaryExpression	"""could not find ]\\n"""		1649202	0					
ANR	1649313	ReturnStatement	return FALSE ;	643:3:16046:16058	1649202	1	True				
ANR	1649314	Identifier	FALSE		1649202	0					
ANR	1649315	ExpressionStatement	addr_begin = acc + 1	645:2:16066:16086	1649202	3	True				
ANR	1649316	AssignmentExpression	addr_begin = acc + 1		1649202	0		=			
ANR	1649317	Identifier	addr_begin		1649202	0					
ANR	1649318	AdditiveExpression	acc + 1		1649202	1		+			
ANR	1649319	Identifier	acc		1649202	0					
ANR	1649320	PrimaryExpression	1		1649202	1					
ANR	1649321	ExpressionStatement	addr_end = tmp	646:2:16090:16104	1649202	4	True				
ANR	1649322	AssignmentExpression	addr_end = tmp		1649202	0		=			
ANR	1649323	Identifier	addr_end		1649202	0					
ANR	1649324	Identifier	tmp		1649202	1					
ANR	1649325	IfStatement	if ( addr_end - addr_begin > INET6_ADDRSTRLEN )		1649202	5					
ANR	1649326	Condition	addr_end - addr_begin > INET6_ADDRSTRLEN	648:6:16126:16165	1649202	0	True				
ANR	1649327	RelationalExpression	addr_end - addr_begin > INET6_ADDRSTRLEN		1649202	0		>			
ANR	1649328	AdditiveExpression	addr_end - addr_begin		1649202	0		-			
ANR	1649329	Identifier	addr_end		1649202	0					
ANR	1649330	Identifier	addr_begin		1649202	1					
ANR	1649331	Identifier	INET6_ADDRSTRLEN		1649202	1					
ANR	1649332	CompoundStatement		26:48:569:569	1649202	1					
ANR	1649333	ExpressionStatement	"dprintf ( D_HOSTNAME , ""addr too long %d\\n"" , ( int ) ( addr_end - addr_begin ) )"	649:3:16173:16244	1649202	0	True				
ANR	1649334	CallExpression	"dprintf ( D_HOSTNAME , ""addr too long %d\\n"" , ( int ) ( addr_end - addr_begin ) )"		1649202	0					
ANR	1649335	Callee	dprintf		1649202	0					
ANR	1649336	Identifier	dprintf		1649202	0					
ANR	1649337	ArgumentList	D_HOSTNAME		1649202	1					
ANR	1649338	Argument	D_HOSTNAME		1649202	0					
ANR	1649339	Identifier	D_HOSTNAME		1649202	0					
ANR	1649340	Argument	"""addr too long %d\\n"""		1649202	1					
ANR	1649341	PrimaryExpression	"""addr too long %d\\n"""		1649202	0					
ANR	1649342	Argument	( int ) ( addr_end - addr_begin )		1649202	2					
ANR	1649343	CastExpression	( int ) ( addr_end - addr_begin )		1649202	0					
ANR	1649344	CastTarget	int		1649202	0					
ANR	1649345	AdditiveExpression	addr_end - addr_begin		1649202	1		-			
ANR	1649346	Identifier	addr_end		1649202	0					
ANR	1649347	Identifier	addr_begin		1649202	1					
ANR	1649348	ReturnStatement	return FALSE ;	650:3:16249:16261	1649202	1	True				
ANR	1649349	Identifier	FALSE		1649202	0					
ANR	1649350	ExpressionStatement	"strncpy ( addrbuf , addr_begin , addr_end - addr_begin )"	653:2:16270:16321	1649202	6	True				
ANR	1649351	CallExpression	"strncpy ( addrbuf , addr_begin , addr_end - addr_begin )"		1649202	0					
ANR	1649352	Callee	strncpy		1649202	0					
ANR	1649353	Identifier	strncpy		1649202	0					
ANR	1649354	ArgumentList	addrbuf		1649202	1					
ANR	1649355	Argument	addrbuf		1649202	0					
ANR	1649356	Identifier	addrbuf		1649202	0					
ANR	1649357	Argument	addr_begin		1649202	1					
ANR	1649358	Identifier	addr_begin		1649202	0					
ANR	1649359	Argument	addr_end - addr_begin		1649202	2					
ANR	1649360	AdditiveExpression	addr_end - addr_begin		1649202	0		-			
ANR	1649361	Identifier	addr_end		1649202	0					
ANR	1649362	Identifier	addr_begin		1649202	1					
ANR	1649363	ExpressionStatement	addrbuf [ addr_end - addr_begin ] = '\\0'	654:2:16325:16362	1649202	7	True				
ANR	1649364	AssignmentExpression	addrbuf [ addr_end - addr_begin ] = '\\0'		1649202	0		=			
ANR	1649365	ArrayIndexing	addrbuf [ addr_end - addr_begin ]		1649202	0					
ANR	1649366	Identifier	addrbuf		1649202	0					
ANR	1649367	AdditiveExpression	addr_end - addr_begin		1649202	1		-			
ANR	1649368	Identifier	addr_end		1649202	0					
ANR	1649369	Identifier	addr_begin		1649202	1					
ANR	1649370	PrimaryExpression	'\\0'		1649202	1					
ANR	1649371	ExpressionStatement	"dprintf ( D_HOSTNAME , ""try to convert using inet_pton, %s\\n"" , addrbuf )"	655:2:16366:16434	1649202	8	True				
ANR	1649372	CallExpression	"dprintf ( D_HOSTNAME , ""try to convert using inet_pton, %s\\n"" , addrbuf )"		1649202	0					
ANR	1649373	Callee	dprintf		1649202	0					
ANR	1649374	Identifier	dprintf		1649202	0					
ANR	1649375	ArgumentList	D_HOSTNAME		1649202	1					
ANR	1649376	Argument	D_HOSTNAME		1649202	0					
ANR	1649377	Identifier	D_HOSTNAME		1649202	0					
ANR	1649378	Argument	"""try to convert using inet_pton, %s\\n"""		1649202	1					
ANR	1649379	PrimaryExpression	"""try to convert using inet_pton, %s\\n"""		1649202	0					
ANR	1649380	Argument	addrbuf		1649202	2					
ANR	1649381	Identifier	addrbuf		1649202	0					
ANR	1649382	IdentifierDeclStatement	in6_addr tmp_addr ;	656:2:16438:16455	1649202	9	True				
ANR	1649383	IdentifierDecl	tmp_addr		1649202	0					
ANR	1649384	IdentifierDeclType	in6_addr		1649202	0					
ANR	1649385	Identifier	tmp_addr		1649202	1					
ANR	1649386	IfStatement	"if ( inet_pton ( AF_INET6 , addrbuf , & tmp_addr ) <= 0 )"		1649202	10					
ANR	1649387	Condition	"inet_pton ( AF_INET6 , addrbuf , & tmp_addr ) <= 0"	657:6:16463:16506	1649202	0	True				
ANR	1649388	RelationalExpression	"inet_pton ( AF_INET6 , addrbuf , & tmp_addr ) <= 0"		1649202	0		<=			
ANR	1649389	CallExpression	"inet_pton ( AF_INET6 , addrbuf , & tmp_addr )"		1649202	0					
ANR	1649390	Callee	inet_pton		1649202	0					
ANR	1649391	Identifier	inet_pton		1649202	0					
ANR	1649392	ArgumentList	AF_INET6		1649202	1					
ANR	1649393	Argument	AF_INET6		1649202	0					
ANR	1649394	Identifier	AF_INET6		1649202	0					
ANR	1649395	Argument	addrbuf		1649202	1					
ANR	1649396	Identifier	addrbuf		1649202	0					
ANR	1649397	Argument	& tmp_addr		1649202	2					
ANR	1649398	UnaryOperationExpression	& tmp_addr		1649202	0					
ANR	1649399	UnaryOperator	&		1649202	0					
ANR	1649400	Identifier	tmp_addr		1649202	1					
ANR	1649401	PrimaryExpression	0		1649202	1					
ANR	1649402	CompoundStatement		35:52:910:910	1649202	1					
ANR	1649403	ExpressionStatement	"dprintf ( D_HOSTNAME , ""inet_pton failed\\n"" )"	658:3:16514:16555	1649202	0	True				
ANR	1649404	CallExpression	"dprintf ( D_HOSTNAME , ""inet_pton failed\\n"" )"		1649202	0					
ANR	1649405	Callee	dprintf		1649202	0					
ANR	1649406	Identifier	dprintf		1649202	0					
ANR	1649407	ArgumentList	D_HOSTNAME		1649202	1					
ANR	1649408	Argument	D_HOSTNAME		1649202	0					
ANR	1649409	Identifier	D_HOSTNAME		1649202	0					
ANR	1649410	Argument	"""inet_pton failed\\n"""		1649202	1					
ANR	1649411	PrimaryExpression	"""inet_pton failed\\n"""		1649202	0					
ANR	1649412	ReturnStatement	return FALSE ;	659:3:16560:16572	1649202	1	True				
ANR	1649413	Identifier	FALSE		1649202	0					
ANR	1649414	ExpressionStatement	acc = tmp + 1	661:2:16580:16593	1649202	11	True				
ANR	1649415	AssignmentExpression	acc = tmp + 1		1649202	0		=			
ANR	1649416	Identifier	acc		1649202	0					
ANR	1649417	AdditiveExpression	tmp + 1		1649202	1		+			
ANR	1649418	Identifier	tmp		1649202	0					
ANR	1649419	PrimaryExpression	1		1649202	1					
ANR	1649420	ElseStatement	else		1649202	0					
ANR	1649421	CompoundStatement		42:2:1033:1069	1649202	0					
ANR	1649422	IdentifierDeclStatement	MyString ipaddr = acc ;	663:2:16607:16628	1649202	0	True				
ANR	1649423	IdentifierDecl	ipaddr = acc		1649202	0					
ANR	1649424	IdentifierDeclType	MyString		1649202	0					
ANR	1649425	Identifier	ipaddr		1649202	1					
ANR	1649426	AssignmentExpression	ipaddr = acc		1649202	2		=			
ANR	1649427	Identifier	acc		1649202	0					
ANR	1649428	Identifier	acc		1649202	1					
ANR	1649429	IdentifierDeclStatement	int colon_pos = ipaddr . FindChar ( ':' ) ;	664:2:16632:16668	1649202	1	True				
ANR	1649430	IdentifierDecl	colon_pos = ipaddr . FindChar ( ':' )		1649202	0					
ANR	1649431	IdentifierDeclType	int		1649202	0					
ANR	1649432	Identifier	colon_pos		1649202	1					
ANR	1649433	AssignmentExpression	colon_pos = ipaddr . FindChar ( ':' )		1649202	2		=			
ANR	1649434	Identifier	colon_pos		1649202	0					
ANR	1649435	CallExpression	ipaddr . FindChar ( ':' )		1649202	1					
ANR	1649436	Callee	ipaddr . FindChar		1649202	0					
ANR	1649437	MemberAccess	ipaddr . FindChar		1649202	0					
ANR	1649438	Identifier	ipaddr		1649202	0					
ANR	1649439	Identifier	FindChar		1649202	1					
ANR	1649440	ArgumentList	':'		1649202	1					
ANR	1649441	Argument	':'		1649202	0					
ANR	1649442	PrimaryExpression	':'		1649202	0					
ANR	1649443	IfStatement	if ( colon_pos == - 1 )		1649202	2					
ANR	1649444	Condition	colon_pos == - 1	665:5:16675:16689	1649202	0	True				
ANR	1649445	EqualityExpression	colon_pos == - 1		1649202	0		==			
ANR	1649446	Identifier	colon_pos		1649202	0					
ANR	1649447	UnaryOperationExpression	- 1		1649202	1					
ANR	1649448	UnaryOperator	-		1649202	0					
ANR	1649449	PrimaryExpression	1		1649202	1					
ANR	1649450	CompoundStatement		43:22:1093:1093	1649202	1					
ANR	1649451	ReturnStatement	return false ;	665:24:16694:16706	1649202	0	True				
ANR	1649452	Identifier	false		1649202	0					
ANR	1649453	ExpressionStatement	"ipaddr . setChar ( colon_pos , 0 )"	666:2:16712:16740	1649202	3	True				
ANR	1649454	CallExpression	"ipaddr . setChar ( colon_pos , 0 )"		1649202	0					
ANR	1649455	Callee	ipaddr . setChar		1649202	0					
ANR	1649456	MemberAccess	ipaddr . setChar		1649202	0					
ANR	1649457	Identifier	ipaddr		1649202	0					
ANR	1649458	Identifier	setChar		1649202	1					
ANR	1649459	ArgumentList	colon_pos		1649202	1					
ANR	1649460	Argument	colon_pos		1649202	0					
ANR	1649461	Identifier	colon_pos		1649202	0					
ANR	1649462	Argument	0		1649202	1					
ANR	1649463	PrimaryExpression	0		1649202	0					
ANR	1649464	IfStatement	"if ( ! is_ipv4_addr_implementation ( ipaddr . Value ( ) , NULL , NULL , false ) )"		1649202	4					
ANR	1649465	Condition	"! is_ipv4_addr_implementation ( ipaddr . Value ( ) , NULL , NULL , false )"	667:6:16748:16808	1649202	0	True				
ANR	1649466	UnaryOperationExpression	"! is_ipv4_addr_implementation ( ipaddr . Value ( ) , NULL , NULL , false )"		1649202	0					
ANR	1649467	UnaryOperator	!		1649202	0					
ANR	1649468	CallExpression	"is_ipv4_addr_implementation ( ipaddr . Value ( ) , NULL , NULL , false )"		1649202	1					
ANR	1649469	Callee	is_ipv4_addr_implementation		1649202	0					
ANR	1649470	Identifier	is_ipv4_addr_implementation		1649202	0					
ANR	1649471	ArgumentList	ipaddr . Value ( )		1649202	1					
ANR	1649472	Argument	ipaddr . Value ( )		1649202	0					
ANR	1649473	CallExpression	ipaddr . Value ( )		1649202	0					
ANR	1649474	Callee	ipaddr . Value		1649202	0					
ANR	1649475	MemberAccess	ipaddr . Value		1649202	0					
ANR	1649476	Identifier	ipaddr		1649202	0					
ANR	1649477	Identifier	Value		1649202	1					
ANR	1649478	ArgumentList			1649202	1					
ANR	1649479	Argument	NULL		1649202	1					
ANR	1649480	Identifier	NULL		1649202	0					
ANR	1649481	Argument	NULL		1649202	2					
ANR	1649482	Identifier	NULL		1649202	0					
ANR	1649483	Argument	false		1649202	3					
ANR	1649484	Identifier	false		1649202	0					
ANR	1649485	CompoundStatement		45:70:1213:1213	1649202	1					
ANR	1649486	ReturnStatement	return FALSE ;	668:3:16817:16829	1649202	0	True				
ANR	1649487	Identifier	FALSE		1649202	0					
ANR	1649488	ExpressionStatement	acc = acc + colon_pos	670:2:16837:16858	1649202	5	True				
ANR	1649489	AssignmentExpression	acc = acc + colon_pos		1649202	0		=			
ANR	1649490	Identifier	acc		1649202	0					
ANR	1649491	AdditiveExpression	acc + colon_pos		1649202	1		+			
ANR	1649492	Identifier	acc		1649202	0					
ANR	1649493	Identifier	colon_pos		1649202	1					
ANR	1649494	IfStatement	if ( * acc != ':' )		1649202	10					
ANR	1649495	Condition	* acc != ':'	672:5:16868:16878	1649202	0	True				
ANR	1649496	EqualityExpression	* acc != ':'		1649202	0		!=			
ANR	1649497	UnaryOperationExpression	* acc		1649202	0					
ANR	1649498	UnaryOperator	*		1649202	0					
ANR	1649499	Identifier	acc		1649202	1					
ANR	1649500	PrimaryExpression	':'		1649202	1					
ANR	1649501	CompoundStatement		50:18:1282:1282	1649202	1					
ANR	1649502	ExpressionStatement	"dprintf ( D_HOSTNAME , ""no colon found\\n"" )"	673:2:16885:16924	1649202	0	True				
ANR	1649503	CallExpression	"dprintf ( D_HOSTNAME , ""no colon found\\n"" )"		1649202	0					
ANR	1649504	Callee	dprintf		1649202	0					
ANR	1649505	Identifier	dprintf		1649202	0					
ANR	1649506	ArgumentList	D_HOSTNAME		1649202	1					
ANR	1649507	Argument	D_HOSTNAME		1649202	0					
ANR	1649508	Identifier	D_HOSTNAME		1649202	0					
ANR	1649509	Argument	"""no colon found\\n"""		1649202	1					
ANR	1649510	PrimaryExpression	"""no colon found\\n"""		1649202	0					
ANR	1649511	ReturnStatement	return FALSE ;	674:2:16928:16940	1649202	1	True				
ANR	1649512	Identifier	FALSE		1649202	0					
ANR	1649513	ExpressionStatement	"tmp = strchr ( acc , '>' )"	677:1:16947:16969	1649202	11	True				
ANR	1649514	AssignmentExpression	"tmp = strchr ( acc , '>' )"		1649202	0		=			
ANR	1649515	Identifier	tmp		1649202	0					
ANR	1649516	CallExpression	"strchr ( acc , '>' )"		1649202	1					
ANR	1649517	Callee	strchr		1649202	0					
ANR	1649518	Identifier	strchr		1649202	0					
ANR	1649519	ArgumentList	acc		1649202	1					
ANR	1649520	Argument	acc		1649202	0					
ANR	1649521	Identifier	acc		1649202	0					
ANR	1649522	Argument	'>'		1649202	1					
ANR	1649523	PrimaryExpression	'>'		1649202	0					
ANR	1649524	IfStatement	if ( ! tmp )		1649202	12					
ANR	1649525	Condition	! tmp	678:5:16976:16979	1649202	0	True				
ANR	1649526	UnaryOperationExpression	! tmp		1649202	0					
ANR	1649527	UnaryOperator	!		1649202	0					
ANR	1649528	Identifier	tmp		1649202	1					
ANR	1649529	CompoundStatement		56:11:1383:1383	1649202	1					
ANR	1649530	ExpressionStatement	"dprintf ( D_HOSTNAME , ""no > found\\n"" )"	679:2:16986:17021	1649202	0	True				
ANR	1649531	CallExpression	"dprintf ( D_HOSTNAME , ""no > found\\n"" )"		1649202	0					
ANR	1649532	Callee	dprintf		1649202	0					
ANR	1649533	Identifier	dprintf		1649202	0					
ANR	1649534	ArgumentList	D_HOSTNAME		1649202	1					
ANR	1649535	Argument	D_HOSTNAME		1649202	0					
ANR	1649536	Identifier	D_HOSTNAME		1649202	0					
ANR	1649537	Argument	"""no > found\\n"""		1649202	1					
ANR	1649538	PrimaryExpression	"""no > found\\n"""		1649202	0					
ANR	1649539	ReturnStatement	return FALSE ;	680:2:17025:17037	1649202	1	True				
ANR	1649540	Identifier	FALSE		1649202	0					
ANR	1649541	ExpressionStatement	"dprintf ( D_HOSTNAME , ""success\\n"" )"	682:1:17043:17075	1649202	13	True				
ANR	1649542	CallExpression	"dprintf ( D_HOSTNAME , ""success\\n"" )"		1649202	0					
ANR	1649543	Callee	dprintf		1649202	0					
ANR	1649544	Identifier	dprintf		1649202	0					
ANR	1649545	ArgumentList	D_HOSTNAME		1649202	1					
ANR	1649546	Argument	D_HOSTNAME		1649202	0					
ANR	1649547	Identifier	D_HOSTNAME		1649202	0					
ANR	1649548	Argument	"""success\\n"""		1649202	1					
ANR	1649549	PrimaryExpression	"""success\\n"""		1649202	0					
ANR	1649550	ReturnStatement	return TRUE ;	683:1:17078:17089	1649202	14	True				
ANR	1649551	Identifier	TRUE		1649202	0					
ANR	1649552	ReturnType	int		1649202	1					
ANR	1649553	Identifier	is_valid_sinful		1649202	2					
ANR	1649554	ParameterList	const char * sinful		1649202	3					
ANR	1649555	Parameter	const char * sinful	622:17:15577:15594	1649202	0	True				
ANR	1649556	ParameterType	const char *		1649202	0					
ANR	1649557	Identifier	sinful		1649202	1					
ANR	1649558	CFGEntryNode	ENTRY		1649202		True				
ANR	1649559	CFGExitNode	EXIT		1649202		True				
ANR	1649560	Symbol	acc		1649202						
ANR	1649561	Symbol	strchr		1649202						
ANR	1649562	Symbol	tmp_addr		1649202						
ANR	1649563	Symbol	* acc		1649202						
ANR	1649564	Symbol	addr_end		1649202						
ANR	1649565	Symbol	tmp		1649202						
ANR	1649566	Symbol	& tmp_addr		1649202						
ANR	1649567	Symbol	* addrbuf		1649202						
ANR	1649568	Symbol	ipaddr		1649202						
ANR	1649569	Symbol	sinful		1649202						
ANR	1649570	Symbol	is_ipv4_addr_implementation		1649202						
ANR	1649571	Symbol	D_HOSTNAME		1649202						
ANR	1649572	Symbol	addr_begin		1649202						
ANR	1649573	Symbol	NULL		1649202						
ANR	1649574	Symbol	* addr_begin		1649202						
ANR	1649575	Symbol	inet_pton		1649202						
ANR	1649576	Symbol	false		1649202						
ANR	1649577	Symbol	TRUE		1649202						
ANR	1649578	Symbol	INET6_ADDRSTRLEN		1649202						
ANR	1649579	Symbol	colon_pos		1649202						
ANR	1649580	Symbol	AF_INET6		1649202						
ANR	1649581	Symbol	* addr_end		1649202						
ANR	1649582	Symbol	ipaddr . FindChar		1649202						
ANR	1649583	Symbol	addrbuf		1649202						
ANR	1649584	Symbol	ipaddr . Value		1649202						
ANR	1649585	Symbol	FALSE		1649202						
ANR	1649586	Function	string_to_port	694:0:17421:17801							
ANR	1649587	FunctionDef	string_to_port (const char * addr)		1649586	0					
ANR	1649588	CompoundStatement		696:0:17460:17801	1649586	0					
ANR	1649589	IdentifierDeclStatement	const char * acc = addr ;	697:1:17463:17485	1649586	0	True				
ANR	1649590	IdentifierDecl	* acc = addr		1649586	0					
ANR	1649591	IdentifierDeclType	const char *		1649586	0					
ANR	1649592	Identifier	acc		1649586	1					
ANR	1649593	AssignmentExpression	* acc = addr		1649586	2		=			
ANR	1649594	Identifier	addr		1649586	0					
ANR	1649595	Identifier	addr		1649586	1					
ANR	1649596	IdentifierDeclStatement	const char * tmp ;	698:1:17488:17503	1649586	1	True				
ANR	1649597	IdentifierDecl	* tmp		1649586	0					
ANR	1649598	IdentifierDeclType	const char *		1649586	0					
ANR	1649599	Identifier	tmp		1649586	1					
ANR	1649600	IdentifierDeclStatement	int port = 0 ;	699:1:17506:17518	1649586	2	True				
ANR	1649601	IdentifierDecl	port = 0		1649586	0					
ANR	1649602	IdentifierDeclType	int		1649586	0					
ANR	1649603	Identifier	port		1649586	1					
ANR	1649604	AssignmentExpression	port = 0		1649586	2		=			
ANR	1649605	Identifier	port		1649586	0					
ANR	1649606	PrimaryExpression	0		1649586	1					
ANR	1649607	IfStatement	if ( ! ( addr && is_valid_sinful ( addr ) ) )		1649586	3					
ANR	1649608	Condition	! ( addr && is_valid_sinful ( addr ) )	701:5:17526:17558	1649586	0	True				
ANR	1649609	UnaryOperationExpression	! ( addr && is_valid_sinful ( addr ) )		1649586	0					
ANR	1649610	UnaryOperator	!		1649586	0					
ANR	1649611	AndExpression	addr && is_valid_sinful ( addr )		1649586	1		&&			
ANR	1649612	Identifier	addr		1649586	0					
ANR	1649613	CallExpression	is_valid_sinful ( addr )		1649586	1					
ANR	1649614	Callee	is_valid_sinful		1649586	0					
ANR	1649615	Identifier	is_valid_sinful		1649586	0					
ANR	1649616	ArgumentList	addr		1649586	1					
ANR	1649617	Argument	addr		1649586	0					
ANR	1649618	Identifier	addr		1649586	0					
ANR	1649619	CompoundStatement		6:41:101:101	1649586	1					
ANR	1649620	ReturnStatement	return 0 ;	702:2:17566:17574	1649586	0	True				
ANR	1649621	PrimaryExpression	0		1649586	0					
ANR	1649622	IfStatement	if ( * acc != '<' )		1649586	4					
ANR	1649623	Condition	* acc != '<'	705:5:17585:17595	1649586	0	True				
ANR	1649624	EqualityExpression	* acc != '<'		1649586	0		!=			
ANR	1649625	UnaryOperationExpression	* acc		1649586	0					
ANR	1649626	UnaryOperator	*		1649586	0					
ANR	1649627	Identifier	acc		1649586	1					
ANR	1649628	PrimaryExpression	'<'		1649586	1					
ANR	1649629	ReturnStatement	return 0 ;	706:2:17600:17608	1649586	1	True				
ANR	1649630	PrimaryExpression	0		1649586	0					
ANR	1649631	ExpressionStatement	acc ++	708:1:17612:17617	1649586	5	True				
ANR	1649632	PostIncDecOperationExpression	acc ++		1649586	0					
ANR	1649633	Identifier	acc		1649586	0					
ANR	1649634	IncDec	++		1649586	1					
ANR	1649635	IfStatement	if ( * acc == '[' )		1649586	6					
ANR	1649636	Condition	* acc == '['	709:5:17624:17634	1649586	0	True				
ANR	1649637	EqualityExpression	* acc == '['		1649586	0		==			
ANR	1649638	UnaryOperationExpression	* acc		1649586	0					
ANR	1649639	UnaryOperator	*		1649586	0					
ANR	1649640	Identifier	acc		1649586	1					
ANR	1649641	PrimaryExpression	'['		1649586	1					
ANR	1649642	CompoundStatement		14:18:176:176	1649586	1					
ANR	1649643	ExpressionStatement	"tmp = strchr ( acc , ']' )"	710:2:17641:17663	1649586	0	True				
ANR	1649644	AssignmentExpression	"tmp = strchr ( acc , ']' )"		1649586	0		=			
ANR	1649645	Identifier	tmp		1649586	0					
ANR	1649646	CallExpression	"strchr ( acc , ']' )"		1649586	1					
ANR	1649647	Callee	strchr		1649586	0					
ANR	1649648	Identifier	strchr		1649586	0					
ANR	1649649	ArgumentList	acc		1649586	1					
ANR	1649650	Argument	acc		1649586	0					
ANR	1649651	Identifier	acc		1649586	0					
ANR	1649652	Argument	']'		1649586	1					
ANR	1649653	PrimaryExpression	']'		1649586	0					
ANR	1649654	IfStatement	if ( ! tmp )		1649586	1					
ANR	1649655	Condition	! tmp	711:6:17671:17674	1649586	0	True				
ANR	1649656	UnaryOperationExpression	! tmp		1649586	0					
ANR	1649657	UnaryOperator	!		1649586	0					
ANR	1649658	Identifier	tmp		1649586	1					
ANR	1649659	ReturnStatement	return 0 ;	712:3:17680:17688	1649586	1	True				
ANR	1649660	PrimaryExpression	0		1649586	0					
ANR	1649661	ExpressionStatement	acc = tmp + 1	713:2:17692:17705	1649586	2	True				
ANR	1649662	AssignmentExpression	acc = tmp + 1		1649586	0		=			
ANR	1649663	Identifier	acc		1649586	0					
ANR	1649664	AdditiveExpression	tmp + 1		1649586	1		+			
ANR	1649665	Identifier	tmp		1649586	0					
ANR	1649666	PrimaryExpression	1		1649586	1					
ANR	1649667	ExpressionStatement	"tmp = strchr ( acc , ':' )"	716:1:17712:17734	1649586	7	True				
ANR	1649668	AssignmentExpression	"tmp = strchr ( acc , ':' )"		1649586	0		=			
ANR	1649669	Identifier	tmp		1649586	0					
ANR	1649670	CallExpression	"strchr ( acc , ':' )"		1649586	1					
ANR	1649671	Callee	strchr		1649586	0					
ANR	1649672	Identifier	strchr		1649586	0					
ANR	1649673	ArgumentList	acc		1649586	1					
ANR	1649674	Argument	acc		1649586	0					
ANR	1649675	Identifier	acc		1649586	0					
ANR	1649676	Argument	':'		1649586	1					
ANR	1649677	PrimaryExpression	':'		1649586	0					
ANR	1649678	IfStatement	if ( ! tmp )		1649586	8					
ANR	1649679	Condition	! tmp	717:5:17741:17744	1649586	0	True				
ANR	1649680	UnaryOperationExpression	! tmp		1649586	0					
ANR	1649681	UnaryOperator	!		1649586	0					
ANR	1649682	Identifier	tmp		1649586	1					
ANR	1649683	ReturnStatement	return 0 ;	718:2:17749:17757	1649586	1	True				
ANR	1649684	PrimaryExpression	0		1649586	0					
ANR	1649685	ExpressionStatement	tmp ++	720:1:17761:17766	1649586	9	True				
ANR	1649686	PostIncDecOperationExpression	tmp ++		1649586	0					
ANR	1649687	Identifier	tmp		1649586	0					
ANR	1649688	IncDec	++		1649586	1					
ANR	1649689	ExpressionStatement	port = atoi ( tmp )	721:1:17769:17785	1649586	10	True				
ANR	1649690	AssignmentExpression	port = atoi ( tmp )		1649586	0		=			
ANR	1649691	Identifier	port		1649586	0					
ANR	1649692	CallExpression	atoi ( tmp )		1649586	1					
ANR	1649693	Callee	atoi		1649586	0					
ANR	1649694	Identifier	atoi		1649586	0					
ANR	1649695	ArgumentList	tmp		1649586	1					
ANR	1649696	Argument	tmp		1649586	0					
ANR	1649697	Identifier	tmp		1649586	0					
ANR	1649698	ReturnStatement	return port ;	722:1:17788:17799	1649586	11	True				
ANR	1649699	Identifier	port		1649586	0					
ANR	1649700	ReturnType	int		1649586	1					
ANR	1649701	Identifier	string_to_port		1649586	2					
ANR	1649702	ParameterList	const char * addr		1649586	3					
ANR	1649703	Parameter	const char * addr	695:16:17441:17456	1649586	0	True				
ANR	1649704	ParameterType	const char *		1649586	0					
ANR	1649705	Identifier	addr		1649586	1					
ANR	1649706	CFGEntryNode	ENTRY		1649586		True				
ANR	1649707	CFGExitNode	EXIT		1649586		True				
ANR	1649708	Symbol	acc		1649586						
ANR	1649709	Symbol	atoi		1649586						
ANR	1649710	Symbol	* acc		1649586						
ANR	1649711	Symbol	port		1649586						
ANR	1649712	Symbol	tmp		1649586						
ANR	1649713	Symbol	is_valid_sinful		1649586						
ANR	1649714	Symbol	strchr		1649586						
ANR	1649715	Symbol	addr		1649586						
ANR	1649716	Function	string_to_ipstr	755:0:18559:19037							
ANR	1649717	FunctionDef	string_to_ipstr (const char * addr)		1649716	0					
ANR	1649718	CompoundStatement		757:0:18601:19037	1649716	0					
ANR	1649719	ReturnType	char *		1649716	1					
ANR	1649720	Identifier	string_to_ipstr		1649716	2					
ANR	1649721	ParameterList	const char * addr		1649716	3					
ANR	1649722	Parameter	const char * addr	756:17:18582:18597	1649716	0	True				
ANR	1649723	ParameterType	const char *		1649716	0					
ANR	1649724	Identifier	addr		1649716	1					
ANR	1649725	CFGEntryNode	ENTRY		1649716		True				
ANR	1649726	CFGExitNode	EXIT		1649716		True				
ANR	1649727	Symbol	addr		1649716						
ANR	1649728	Function	_condor_local_bind	789:0:19281:21362							
ANR	1649729	FunctionDef	"_condor_local_bind (int is_outgoing , int fd)"		1649728	0					
ANR	1649730	CompoundStatement		791:0:19331:21362	1649728	0					
ANR	1649731	IdentifierDeclStatement	"int lowPort , highPort ;"	801:1:19716:19737	1649728	0	True				
ANR	1649732	IdentifierDecl	lowPort		1649728	0					
ANR	1649733	IdentifierDeclType	int		1649728	0					
ANR	1649734	Identifier	lowPort		1649728	1					
ANR	1649735	IdentifierDecl	highPort		1649728	1					
ANR	1649736	IdentifierDeclType	int		1649728	0					
ANR	1649737	Identifier	highPort		1649728	1					
ANR	1649738	IfStatement	"if ( get_port_range ( is_outgoing , & lowPort , & highPort ) == TRUE )"		1649728	1					
ANR	1649739	Condition	"get_port_range ( is_outgoing , & lowPort , & highPort ) == TRUE"	802:6:19745:19800	1649728	0	True				
ANR	1649740	EqualityExpression	"get_port_range ( is_outgoing , & lowPort , & highPort ) == TRUE"		1649728	0		==			
ANR	1649741	CallExpression	"get_port_range ( is_outgoing , & lowPort , & highPort )"		1649728	0					
ANR	1649742	Callee	get_port_range		1649728	0					
ANR	1649743	Identifier	get_port_range		1649728	0					
ANR	1649744	ArgumentList	is_outgoing		1649728	1					
ANR	1649745	Argument	is_outgoing		1649728	0					
ANR	1649746	Identifier	is_outgoing		1649728	0					
ANR	1649747	Argument	& lowPort		1649728	1					
ANR	1649748	UnaryOperationExpression	& lowPort		1649728	0					
ANR	1649749	UnaryOperator	&		1649728	0					
ANR	1649750	Identifier	lowPort		1649728	1					
ANR	1649751	Argument	& highPort		1649728	2					
ANR	1649752	UnaryOperationExpression	& highPort		1649728	0					
ANR	1649753	UnaryOperator	&		1649728	0					
ANR	1649754	Identifier	highPort		1649728	1					
ANR	1649755	Identifier	TRUE		1649728	1					
ANR	1649756	CompoundStatement		12:65:472:472	1649728	1					
ANR	1649757	IfStatement	"if ( bindWithin ( fd , lowPort , highPort ) == TRUE )"		1649728	0					
ANR	1649758	Condition	"bindWithin ( fd , lowPort , highPort ) == TRUE"	803:7:19813:19853	1649728	0	True				
ANR	1649759	EqualityExpression	"bindWithin ( fd , lowPort , highPort ) == TRUE"		1649728	0		==			
ANR	1649760	CallExpression	"bindWithin ( fd , lowPort , highPort )"		1649728	0					
ANR	1649761	Callee	bindWithin		1649728	0					
ANR	1649762	Identifier	bindWithin		1649728	0					
ANR	1649763	ArgumentList	fd		1649728	1					
ANR	1649764	Argument	fd		1649728	0					
ANR	1649765	Identifier	fd		1649728	0					
ANR	1649766	Argument	lowPort		1649728	1					
ANR	1649767	Identifier	lowPort		1649728	0					
ANR	1649768	Argument	highPort		1649728	2					
ANR	1649769	Identifier	highPort		1649728	0					
ANR	1649770	Identifier	TRUE		1649728	1					
ANR	1649771	ReturnStatement	return TRUE ;	804:12:19869:19880	1649728	1	True				
ANR	1649772	Identifier	TRUE		1649728	0					
ANR	1649773	ElseStatement	else		1649728	0					
ANR	1649774	ReturnStatement	return FALSE ;	806:3:19898:19910	1649728	0	True				
ANR	1649775	Identifier	FALSE		1649728	0					
ANR	1649776	ElseStatement	else		1649728	0					
ANR	1649777	CompoundStatement		20:2:652:704	1649728	0					
ANR	1649778	IdentifierDeclStatement	struct sockaddr_storage ss ;	808:2:19924:19950	1649728	0	True				
ANR	1649779	IdentifierDecl	ss		1649728	0					
ANR	1649780	IdentifierDeclType	struct sockaddr_storage		1649728	0					
ANR	1649781	Identifier	ss		1649728	1					
ANR	1649782	IdentifierDeclStatement	socklen_t len = sizeof ( ss ) ;	809:2:19954:19980	1649728	1	True				
ANR	1649783	IdentifierDecl	len = sizeof ( ss )		1649728	0					
ANR	1649784	IdentifierDeclType	socklen_t		1649728	0					
ANR	1649785	Identifier	len		1649728	1					
ANR	1649786	AssignmentExpression	len = sizeof ( ss )		1649728	2		=			
ANR	1649787	Identifier	len		1649728	0					
ANR	1649788	SizeofExpression	sizeof ( ss )		1649728	1					
ANR	1649789	Sizeof	sizeof		1649728	0					
ANR	1649790	SizeofOperand	ss		1649728	1					
ANR	1649791	IdentifierDeclStatement	"int r = getsockname ( fd , ( struct sockaddr * ) & ss , & len ) ;"	810:2:19984:20036	1649728	2	True				
ANR	1649792	IdentifierDecl	"r = getsockname ( fd , ( struct sockaddr * ) & ss , & len )"		1649728	0					
ANR	1649793	IdentifierDeclType	int		1649728	0					
ANR	1649794	Identifier	r		1649728	1					
ANR	1649795	AssignmentExpression	"r = getsockname ( fd , ( struct sockaddr * ) & ss , & len )"		1649728	2		=			
ANR	1649796	Identifier	r		1649728	0					
ANR	1649797	CallExpression	"getsockname ( fd , ( struct sockaddr * ) & ss , & len )"		1649728	1					
ANR	1649798	Callee	getsockname		1649728	0					
ANR	1649799	Identifier	getsockname		1649728	0					
ANR	1649800	ArgumentList	fd		1649728	1					
ANR	1649801	Argument	fd		1649728	0					
ANR	1649802	Identifier	fd		1649728	0					
ANR	1649803	Argument	( struct sockaddr * ) & ss		1649728	1					
ANR	1649804	CastExpression	( struct sockaddr * ) & ss		1649728	0					
ANR	1649805	CastTarget	struct sockaddr *		1649728	0					
ANR	1649806	UnaryOperationExpression	& ss		1649728	1					
ANR	1649807	UnaryOperator	&		1649728	0					
ANR	1649808	Identifier	ss		1649728	1					
ANR	1649809	Argument	& len		1649728	2					
ANR	1649810	UnaryOperationExpression	& len		1649728	0					
ANR	1649811	UnaryOperator	&		1649728	0					
ANR	1649812	Identifier	len		1649728	1					
ANR	1649813	IfStatement	if ( r != 0 )		1649728	3					
ANR	1649814	Condition	r != 0	811:6:20044:20049	1649728	0	True				
ANR	1649815	EqualityExpression	r != 0		1649728	0		!=			
ANR	1649816	Identifier	r		1649728	0					
ANR	1649817	PrimaryExpression	0		1649728	1					
ANR	1649818	CompoundStatement		21:14:720:720	1649728	1					
ANR	1649819	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: getsockname fialed, errno: %d\\n"" , errno )"	812:3:20057:20128	1649728	0	True				
ANR	1649820	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: getsockname fialed, errno: %d\\n"" , errno )"		1649728	0					
ANR	1649821	Callee	dprintf		1649728	0					
ANR	1649822	Identifier	dprintf		1649728	0					
ANR	1649823	ArgumentList	D_ALWAYS		1649728	1					
ANR	1649824	Argument	D_ALWAYS		1649728	0					
ANR	1649825	Identifier	D_ALWAYS		1649728	0					
ANR	1649826	Argument	"""ERROR: getsockname fialed, errno: %d\\n"""		1649728	1					
ANR	1649827	PrimaryExpression	"""ERROR: getsockname fialed, errno: %d\\n"""		1649728	0					
ANR	1649828	Argument	errno		1649728	2					
ANR	1649829	Identifier	errno		1649728	0					
ANR	1649830	ReturnStatement	return FALSE ;	814:3:20133:20145	1649728	1	True				
ANR	1649831	Identifier	FALSE		1649728	0					
ANR	1649832	IfStatement	if ( ss . ss_family == AF_INET )		1649728	4					
ANR	1649833	Condition	ss . ss_family == AF_INET	819:6:20247:20269	1649728	0	True				
ANR	1649834	EqualityExpression	ss . ss_family == AF_INET		1649728	0		==			
ANR	1649835	MemberAccess	ss . ss_family		1649728	0					
ANR	1649836	Identifier	ss		1649728	0					
ANR	1649837	Identifier	ss_family		1649728	1					
ANR	1649838	Identifier	AF_INET		1649728	1					
ANR	1649839	CompoundStatement		30:3:945:997	1649728	1					
ANR	1649840	IdentifierDeclStatement	struct sockaddr_in * sa_in = ( struct sockaddr_in * ) & ss ;	820:3:20277:20329	1649728	0	True				
ANR	1649841	IdentifierDecl	* sa_in = ( struct sockaddr_in * ) & ss		1649728	0					
ANR	1649842	IdentifierDeclType	struct sockaddr_in *		1649728	0					
ANR	1649843	Identifier	sa_in		1649728	1					
ANR	1649844	AssignmentExpression	* sa_in = ( struct sockaddr_in * ) & ss		1649728	2		=			
ANR	1649845	Identifier	sa_in		1649728	0					
ANR	1649846	CastExpression	( struct sockaddr_in * ) & ss		1649728	1					
ANR	1649847	CastTarget	struct sockaddr_in *		1649728	0					
ANR	1649848	UnaryOperationExpression	& ss		1649728	1					
ANR	1649849	UnaryOperator	&		1649728	0					
ANR	1649850	Identifier	ss		1649728	1					
ANR	1649851	ExpressionStatement	"memset ( ( char * ) sa_in , 0 , sizeof ( struct sockaddr_in ) )"	821:3:20334:20388	1649728	1	True				
ANR	1649852	CallExpression	"memset ( ( char * ) sa_in , 0 , sizeof ( struct sockaddr_in ) )"		1649728	0					
ANR	1649853	Callee	memset		1649728	0					
ANR	1649854	Identifier	memset		1649728	0					
ANR	1649855	ArgumentList	( char * ) sa_in		1649728	1					
ANR	1649856	Argument	( char * ) sa_in		1649728	0					
ANR	1649857	CastExpression	( char * ) sa_in		1649728	0					
ANR	1649858	CastTarget	char *		1649728	0					
ANR	1649859	Identifier	sa_in		1649728	1					
ANR	1649860	Argument	0		1649728	1					
ANR	1649861	PrimaryExpression	0		1649728	0					
ANR	1649862	Argument	sizeof ( struct sockaddr_in )		1649728	2					
ANR	1649863	SizeofExpression	sizeof ( struct sockaddr_in )		1649728	0					
ANR	1649864	Sizeof	sizeof		1649728	0					
ANR	1649865	SizeofOperand	struct sockaddr_in		1649728	1					
ANR	1649866	ExpressionStatement	sa_in -> sin_family = AF_INET	822:3:20393:20420	1649728	2	True				
ANR	1649867	AssignmentExpression	sa_in -> sin_family = AF_INET		1649728	0		=			
ANR	1649868	PtrMemberAccess	sa_in -> sin_family		1649728	0					
ANR	1649869	Identifier	sa_in		1649728	0					
ANR	1649870	Identifier	sin_family		1649728	1					
ANR	1649871	Identifier	AF_INET		1649728	1					
ANR	1649872	ExpressionStatement	sa_in -> sin_port = 0	823:3:20425:20444	1649728	3	True				
ANR	1649873	AssignmentExpression	sa_in -> sin_port = 0		1649728	0		=			
ANR	1649874	PtrMemberAccess	sa_in -> sin_port		1649728	0					
ANR	1649875	Identifier	sa_in		1649728	0					
ANR	1649876	Identifier	sin_port		1649728	1					
ANR	1649877	PrimaryExpression	0		1649728	1					
ANR	1649878	ExpressionStatement	sa_in -> sin_addr . s_addr = INADDR_ANY	833:3:20839:20874	1649728	4	True				
ANR	1649879	AssignmentExpression	sa_in -> sin_addr . s_addr = INADDR_ANY		1649728	0		=			
ANR	1649880	MemberAccess	sa_in -> sin_addr . s_addr		1649728	0					
ANR	1649881	PtrMemberAccess	sa_in -> sin_addr		1649728	0					
ANR	1649882	Identifier	sa_in		1649728	0					
ANR	1649883	Identifier	sin_addr		1649728	1					
ANR	1649884	Identifier	s_addr		1649728	1					
ANR	1649885	Identifier	INADDR_ANY		1649728	1					
ANR	1649886	ElseStatement	else		1649728	0					
ANR	1649887	IfStatement	if ( ss . ss_family == AF_INET6 )		1649728	0					
ANR	1649888	Condition	ss . ss_family == AF_INET6	834:13:20889:20912	1649728	0	True				
ANR	1649889	EqualityExpression	ss . ss_family == AF_INET6		1649728	0		==			
ANR	1649890	MemberAccess	ss . ss_family		1649728	0					
ANR	1649891	Identifier	ss		1649728	0					
ANR	1649892	Identifier	ss_family		1649728	1					
ANR	1649893	Identifier	AF_INET6		1649728	1					
ANR	1649894	CompoundStatement		45:3:1588:1641	1649728	1					
ANR	1649895	IdentifierDeclStatement	struct sockaddr_in6 * sin6 = ( struct sockaddr_in6 * ) & ss ;	835:3:20920:20973	1649728	0	True				
ANR	1649896	IdentifierDecl	* sin6 = ( struct sockaddr_in6 * ) & ss		1649728	0					
ANR	1649897	IdentifierDeclType	struct sockaddr_in6 *		1649728	0					
ANR	1649898	Identifier	sin6		1649728	1					
ANR	1649899	AssignmentExpression	* sin6 = ( struct sockaddr_in6 * ) & ss		1649728	2		=			
ANR	1649900	Identifier	sin6		1649728	0					
ANR	1649901	CastExpression	( struct sockaddr_in6 * ) & ss		1649728	1					
ANR	1649902	CastTarget	struct sockaddr_in6 *		1649728	0					
ANR	1649903	UnaryOperationExpression	& ss		1649728	1					
ANR	1649904	UnaryOperator	&		1649728	0					
ANR	1649905	Identifier	ss		1649728	1					
ANR	1649906	ExpressionStatement	sin6 -> sin6_addr = in6addr_any	836:3:20978:21007	1649728	1	True				
ANR	1649907	AssignmentExpression	sin6 -> sin6_addr = in6addr_any		1649728	0		=			
ANR	1649908	PtrMemberAccess	sin6 -> sin6_addr		1649728	0					
ANR	1649909	Identifier	sin6		1649728	0					
ANR	1649910	Identifier	sin6_addr		1649728	1					
ANR	1649911	Identifier	in6addr_any		1649728	1					
ANR	1649912	ExpressionStatement	sin6 -> sin6_port = 0	837:3:21012:21031	1649728	2	True				
ANR	1649913	AssignmentExpression	sin6 -> sin6_port = 0		1649728	0		=			
ANR	1649914	PtrMemberAccess	sin6 -> sin6_port		1649728	0					
ANR	1649915	Identifier	sin6		1649728	0					
ANR	1649916	Identifier	sin6_port		1649728	1					
ANR	1649917	PrimaryExpression	0		1649728	1					
ANR	1649918	ElseStatement	else		1649728	0					
ANR	1649919	CompoundStatement		48:9:1710:1710	1649728	0					
ANR	1649920	Statement	dprintf	839:3:21047:21053	1649728	0	True				
ANR	1649921	Statement	(	839:10:21054:21054	1649728	1	True				
ANR	1649922	Statement	D_ALWAYS	839:11:21055:21062	1649728	2	True				
ANR	1649923	Statement	","	839:19:21063:21063	1649728	3	True				
ANR	1649924	Statement	"""ERROR: getsockname returned with unknown """	839:21:21065:21107	1649728	4	True				
ANR	1649925	Statement	"""socket type %d\\n"""	840:5:21114:21131	1649728	5	True				
ANR	1649926	Statement	","	840:23:21132:21132	1649728	6	True				
ANR	1649927	Statement	ss	840:25:21134:21135	1649728	7	True				
ANR	1649928	Statement	.	840:27:21136:21136	1649728	8	True				
ANR	1649929	Statement	ss_family	840:28:21137:21145	1649728	9	True				
ANR	1649930	Statement	)	840:37:21146:21146	1649728	10	True				
ANR	1649931	ExpressionStatement		840:38:21147:21147	1649728	11	True				
ANR	1649932	ReturnStatement	return FALSE ;	841:3:21152:21164	1649728	12	True				
ANR	1649933	Identifier	FALSE		1649728	0					
ANR	1649934	IfStatement	"if ( bind ( fd , ( struct sockaddr * ) & ss , len ) < 0 )"		1649728	5					
ANR	1649935	Condition	"bind ( fd , ( struct sockaddr * ) & ss , len ) < 0"	844:6:21177:21216	1649728	0	True				
ANR	1649936	RelationalExpression	"bind ( fd , ( struct sockaddr * ) & ss , len ) < 0"		1649728	0		<			
ANR	1649937	CallExpression	"bind ( fd , ( struct sockaddr * ) & ss , len )"		1649728	0					
ANR	1649938	Callee	bind		1649728	0					
ANR	1649939	Identifier	bind		1649728	0					
ANR	1649940	ArgumentList	fd		1649728	1					
ANR	1649941	Argument	fd		1649728	0					
ANR	1649942	Identifier	fd		1649728	0					
ANR	1649943	Argument	( struct sockaddr * ) & ss		1649728	1					
ANR	1649944	CastExpression	( struct sockaddr * ) & ss		1649728	0					
ANR	1649945	CastTarget	struct sockaddr *		1649728	0					
ANR	1649946	UnaryOperationExpression	& ss		1649728	1					
ANR	1649947	UnaryOperator	&		1649728	0					
ANR	1649948	Identifier	ss		1649728	1					
ANR	1649949	Argument	len		1649728	2					
ANR	1649950	Identifier	len		1649728	0					
ANR	1649951	PrimaryExpression	0		1649728	1					
ANR	1649952	CompoundStatement		54:49:1888:1888	1649728	1					
ANR	1649953	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: bind failed, errno: %d\\n"" , errno )"	845:3:21225:21292	1649728	0	True				
ANR	1649954	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: bind failed, errno: %d\\n"" , errno )"		1649728	0					
ANR	1649955	Callee	dprintf		1649728	0					
ANR	1649956	Identifier	dprintf		1649728	0					
ANR	1649957	ArgumentList	D_ALWAYS		1649728	1					
ANR	1649958	Argument	D_ALWAYS		1649728	0					
ANR	1649959	Identifier	D_ALWAYS		1649728	0					
ANR	1649960	Argument	"""ERROR: bind failed, errno: %d\\n"""		1649728	1					
ANR	1649961	PrimaryExpression	"""ERROR: bind failed, errno: %d\\n"""		1649728	0					
ANR	1649962	Argument	errno		1649728	2					
ANR	1649963	Identifier	errno		1649728	0					
ANR	1649964	ReturnStatement	return FALSE ;	847:3:21297:21309	1649728	1	True				
ANR	1649965	Identifier	FALSE		1649728	0					
ANR	1649966	ReturnStatement	return TRUE ;	851:1:21349:21360	1649728	2	True				
ANR	1649967	Identifier	TRUE		1649728	0					
ANR	1649968	ReturnType	int		1649728	1					
ANR	1649969	Identifier	_condor_local_bind		1649728	2					
ANR	1649970	ParameterList	"int is_outgoing , int fd"		1649728	3					
ANR	1649971	Parameter	int is_outgoing	790:20:19305:19319	1649728	0	True				
ANR	1649972	ParameterType	int		1649728	0					
ANR	1649973	Identifier	is_outgoing		1649728	1					
ANR	1649974	Parameter	int fd	790:37:19322:19327	1649728	1	True				
ANR	1649975	ParameterType	int		1649728	0					
ANR	1649976	Identifier	fd		1649728	1					
ANR	1649977	CFGEntryNode	ENTRY		1649728		True				
ANR	1649978	CFGExitNode	EXIT		1649728		True				
ANR	1649979	Symbol	& highPort		1649728						
ANR	1649980	Symbol	lowPort		1649728						
ANR	1649981	Symbol	highPort		1649728						
ANR	1649982	Symbol	get_port_range		1649728						
ANR	1649983	Symbol	& ss		1649728						
ANR	1649984	Symbol	sa_in -> sin_addr . s_addr		1649728						
ANR	1649985	Symbol	sa_in -> sin_port		1649728						
ANR	1649986	Symbol	bind		1649728						
ANR	1649987	Symbol	len		1649728						
ANR	1649988	Symbol	ss . ss_family		1649728						
ANR	1649989	Symbol	bindWithin		1649728						
ANR	1649990	Symbol	ss		1649728						
ANR	1649991	Symbol	errno		1649728						
ANR	1649992	Symbol	* sa_in		1649728						
ANR	1649993	Symbol	getsockname		1649728						
ANR	1649994	Symbol	D_ALWAYS		1649728						
ANR	1649995	Symbol	TRUE		1649728						
ANR	1649996	Symbol	AF_INET		1649728						
ANR	1649997	Symbol	sa_in -> sin_addr		1649728						
ANR	1649998	Symbol	sin6		1649728						
ANR	1649999	Symbol	in6addr_any		1649728						
ANR	1650000	Symbol	AF_INET6		1649728						
ANR	1650001	Symbol	sin6 -> sin6_port		1649728						
ANR	1650002	Symbol	& lowPort		1649728						
ANR	1650003	Symbol	* sin6		1649728						
ANR	1650004	Symbol	r		1649728						
ANR	1650005	Symbol	sa_in		1649728						
ANR	1650006	Symbol	sin6 -> sin6_addr		1649728						
ANR	1650007	Symbol	FALSE		1649728						
ANR	1650008	Symbol	INADDR_ANY		1649728						
ANR	1650009	Symbol	is_outgoing		1649728						
ANR	1650010	Symbol	& len		1649728						
ANR	1650011	Symbol	sa_in -> sin_family		1649728						
ANR	1650012	Symbol	fd		1649728						
ANR	1650013	Function	bindWithin	855:0:21366:22889							
ANR	1650014	FunctionDef	"bindWithin (const int fd , const int low_port , const int high_port)"		1650013	0					
ANR	1650015	CompoundStatement		856:0:21436:22889	1650013	0					
ANR	1650016	IdentifierDeclStatement	"int start_trial , this_trial ;"	857:1:21439:21466	1650013	0	True				
ANR	1650017	IdentifierDecl	start_trial		1650013	0					
ANR	1650018	IdentifierDeclType	int		1650013	0					
ANR	1650019	Identifier	start_trial		1650013	1					
ANR	1650020	IdentifierDecl	this_trial		1650013	1					
ANR	1650021	IdentifierDeclType	int		1650013	0					
ANR	1650022	Identifier	this_trial		1650013	1					
ANR	1650023	IdentifierDeclStatement	"int pid , range ;"	858:1:21469:21483	1650013	1	True				
ANR	1650024	IdentifierDecl	pid		1650013	0					
ANR	1650025	IdentifierDeclType	int		1650013	0					
ANR	1650026	Identifier	pid		1650013	1					
ANR	1650027	IdentifierDecl	range		1650013	1					
ANR	1650028	IdentifierDeclType	int		1650013	0					
ANR	1650029	Identifier	range		1650013	1					
ANR	1650030	ExpressionStatement	pid = ( int ) getpid ( )	861:4:21547:21567	1650013	2	True				
ANR	1650031	AssignmentExpression	pid = ( int ) getpid ( )		1650013	0		=			
ANR	1650032	Identifier	pid		1650013	0					
ANR	1650033	CastExpression	( int ) getpid ( )		1650013	1					
ANR	1650034	CastTarget	int		1650013	0					
ANR	1650035	CallExpression	getpid ( )		1650013	1					
ANR	1650036	Callee	getpid		1650013	0					
ANR	1650037	Identifier	getpid		1650013	0					
ANR	1650038	ArgumentList			1650013	1					
ANR	1650039	ExpressionStatement	range = high_port - low_port + 1	862:4:21573:21605	1650013	3	True				
ANR	1650040	AssignmentExpression	range = high_port - low_port + 1		1650013	0		=			
ANR	1650041	Identifier	range		1650013	0					
ANR	1650042	AdditiveExpression	high_port - low_port + 1		1650013	1		-			
ANR	1650043	Identifier	high_port		1650013	0					
ANR	1650044	AdditiveExpression	low_port + 1		1650013	1		+			
ANR	1650045	Identifier	low_port		1650013	0					
ANR	1650046	PrimaryExpression	1		1650013	1					
ANR	1650047	ExpressionStatement	start_trial = low_port + ( pid * 173 % range )	864:4:21679:21744	1650013	4	True				
ANR	1650048	AssignmentExpression	start_trial = low_port + ( pid * 173 % range )		1650013	0		=			
ANR	1650049	Identifier	start_trial		1650013	0					
ANR	1650050	AdditiveExpression	low_port + ( pid * 173 % range )		1650013	1		+			
ANR	1650051	Identifier	low_port		1650013	0					
ANR	1650052	MultiplicativeExpression	pid * 173 % range		1650013	1		*			
ANR	1650053	Identifier	pid		1650013	0					
ANR	1650054	MultiplicativeExpression	173 % range		1650013	1		%			
ANR	1650055	PrimaryExpression	173		1650013	0					
ANR	1650056	Identifier	range		1650013	1					
ANR	1650057	ExpressionStatement	this_trial = start_trial	866:4:21751:21775	1650013	5	True				
ANR	1650058	AssignmentExpression	this_trial = start_trial		1650013	0		=			
ANR	1650059	Identifier	this_trial		1650013	0					
ANR	1650060	Identifier	start_trial		1650013	1					
ANR	1650061	DoStatement	do		1650013	6					
ANR	1650062	CompoundStatement		15:2:399:420	1650013	0					
ANR	1650063	IdentifierDeclStatement	struct sockaddr_in sa_in ;	868:2:21785:21809	1650013	0	True				
ANR	1650064	IdentifierDecl	sa_in		1650013	0					
ANR	1650065	IdentifierDeclType	struct sockaddr_in		1650013	0					
ANR	1650066	Identifier	sa_in		1650013	1					
ANR	1650067	IdentifierDeclStatement	priv_state old_priv ;	869:2:21813:21832	1650013	1	True				
ANR	1650068	IdentifierDecl	old_priv		1650013	0					
ANR	1650069	IdentifierDeclType	priv_state		1650013	0					
ANR	1650070	Identifier	old_priv		1650013	1					
ANR	1650071	IdentifierDeclStatement	int bind_return_value ;	870:2:21836:21857	1650013	2	True				
ANR	1650072	IdentifierDecl	bind_return_value		1650013	0					
ANR	1650073	IdentifierDeclType	int		1650013	0					
ANR	1650074	Identifier	bind_return_value		1650013	1					
ANR	1650075	ExpressionStatement	"memset ( & sa_in , 0 , sizeof ( sa_in ) )"	872:2:21862:21894	1650013	3	True				
ANR	1650076	CallExpression	"memset ( & sa_in , 0 , sizeof ( sa_in ) )"		1650013	0					
ANR	1650077	Callee	memset		1650013	0					
ANR	1650078	Identifier	memset		1650013	0					
ANR	1650079	ArgumentList	& sa_in		1650013	1					
ANR	1650080	Argument	& sa_in		1650013	0					
ANR	1650081	UnaryOperationExpression	& sa_in		1650013	0					
ANR	1650082	UnaryOperator	&		1650013	0					
ANR	1650083	Identifier	sa_in		1650013	1					
ANR	1650084	Argument	0		1650013	1					
ANR	1650085	PrimaryExpression	0		1650013	0					
ANR	1650086	Argument	sizeof ( sa_in )		1650013	2					
ANR	1650087	SizeofExpression	sizeof ( sa_in )		1650013	0					
ANR	1650088	Sizeof	sizeof		1650013	0					
ANR	1650089	SizeofOperand	sa_in		1650013	1					
ANR	1650090	ExpressionStatement	sa_in . sin_family = AF_INET	873:2:21898:21924	1650013	4	True				
ANR	1650091	AssignmentExpression	sa_in . sin_family = AF_INET		1650013	0		=			
ANR	1650092	MemberAccess	sa_in . sin_family		1650013	0					
ANR	1650093	Identifier	sa_in		1650013	0					
ANR	1650094	Identifier	sin_family		1650013	1					
ANR	1650095	Identifier	AF_INET		1650013	1					
ANR	1650096	ExpressionStatement	sa_in . sin_addr . s_addr = htonl ( INADDR_ANY )	874:2:21928:21969	1650013	5	True				
ANR	1650097	AssignmentExpression	sa_in . sin_addr . s_addr = htonl ( INADDR_ANY )		1650013	0		=			
ANR	1650098	MemberAccess	sa_in . sin_addr . s_addr		1650013	0					
ANR	1650099	MemberAccess	sa_in . sin_addr		1650013	0					
ANR	1650100	Identifier	sa_in		1650013	0					
ANR	1650101	Identifier	sin_addr		1650013	1					
ANR	1650102	Identifier	s_addr		1650013	1					
ANR	1650103	CallExpression	htonl ( INADDR_ANY )		1650013	1					
ANR	1650104	Callee	htonl		1650013	0					
ANR	1650105	Identifier	htonl		1650013	0					
ANR	1650106	ArgumentList	INADDR_ANY		1650013	1					
ANR	1650107	Argument	INADDR_ANY		1650013	0					
ANR	1650108	Identifier	INADDR_ANY		1650013	0					
ANR	1650109	ExpressionStatement	sa_in . sin_port = htons ( ( u_short ) this_trial ++ )	875:2:21973:22018	1650013	6	True				
ANR	1650110	AssignmentExpression	sa_in . sin_port = htons ( ( u_short ) this_trial ++ )		1650013	0		=			
ANR	1650111	MemberAccess	sa_in . sin_port		1650013	0					
ANR	1650112	Identifier	sa_in		1650013	0					
ANR	1650113	Identifier	sin_port		1650013	1					
ANR	1650114	CallExpression	htons ( ( u_short ) this_trial ++ )		1650013	1					
ANR	1650115	Callee	htons		1650013	0					
ANR	1650116	Identifier	htons		1650013	0					
ANR	1650117	ArgumentList	( u_short ) this_trial ++		1650013	1					
ANR	1650118	Argument	( u_short ) this_trial ++		1650013	0					
ANR	1650119	CastExpression	( u_short ) this_trial ++		1650013	0					
ANR	1650120	CastTarget	u_short		1650013	0					
ANR	1650121	PostIncDecOperationExpression	this_trial ++		1650013	1					
ANR	1650122	Identifier	this_trial		1650013	0					
ANR	1650123	IncDec	++		1650013	1					
ANR	1650124	IfStatement	if ( this_trial <= 1024 )		1650013	7					
ANR	1650125	Condition	this_trial <= 1024	879:6:22083:22100	1650013	0	True				
ANR	1650126	RelationalExpression	this_trial <= 1024		1650013	0		<=			
ANR	1650127	Identifier	this_trial		1650013	0					
ANR	1650128	PrimaryExpression	1024		1650013	1					
ANR	1650129	CompoundStatement		24:26:666:666	1650013	1					
ANR	1650130	ExpressionStatement	old_priv = PRIV_UNKNOWN	881:3:22175:22198	1650013	0	True				
ANR	1650131	AssignmentExpression	old_priv = PRIV_UNKNOWN		1650013	0		=			
ANR	1650132	Identifier	old_priv		1650013	0					
ANR	1650133	Identifier	PRIV_UNKNOWN		1650013	1					
ANR	1650134	ExpressionStatement	old_priv = set_root_priv ( )	882:3:22203:22229	1650013	1	True				
ANR	1650135	AssignmentExpression	old_priv = set_root_priv ( )		1650013	0		=			
ANR	1650136	Identifier	old_priv		1650013	0					
ANR	1650137	CallExpression	set_root_priv ( )		1650013	1					
ANR	1650138	Callee	set_root_priv		1650013	0					
ANR	1650139	Identifier	set_root_priv		1650013	0					
ANR	1650140	ArgumentList			1650013	1					
ANR	1650141	ExpressionStatement	"bind_return_value = bind ( fd , ( struct sockaddr * ) & sa_in , sizeof ( sa_in ) )"	885:2:22244:22314	1650013	8	True				
ANR	1650142	AssignmentExpression	"bind_return_value = bind ( fd , ( struct sockaddr * ) & sa_in , sizeof ( sa_in ) )"		1650013	0		=			
ANR	1650143	Identifier	bind_return_value		1650013	0					
ANR	1650144	CallExpression	"bind ( fd , ( struct sockaddr * ) & sa_in , sizeof ( sa_in ) )"		1650013	1					
ANR	1650145	Callee	bind		1650013	0					
ANR	1650146	Identifier	bind		1650013	0					
ANR	1650147	ArgumentList	fd		1650013	1					
ANR	1650148	Argument	fd		1650013	0					
ANR	1650149	Identifier	fd		1650013	0					
ANR	1650150	Argument	( struct sockaddr * ) & sa_in		1650013	1					
ANR	1650151	CastExpression	( struct sockaddr * ) & sa_in		1650013	0					
ANR	1650152	CastTarget	struct sockaddr *		1650013	0					
ANR	1650153	UnaryOperationExpression	& sa_in		1650013	1					
ANR	1650154	UnaryOperator	&		1650013	0					
ANR	1650155	Identifier	sa_in		1650013	1					
ANR	1650156	Argument	sizeof ( sa_in )		1650013	2					
ANR	1650157	SizeofExpression	sizeof ( sa_in )		1650013	0					
ANR	1650158	Sizeof	sizeof		1650013	0					
ANR	1650159	SizeofOperand	sa_in		1650013	1					
ANR	1650160	IfStatement	if ( this_trial <= 1024 )		1650013	9					
ANR	1650161	Condition	this_trial <= 1024	887:6:22336:22353	1650013	0	True				
ANR	1650162	RelationalExpression	this_trial <= 1024		1650013	0		<=			
ANR	1650163	Identifier	this_trial		1650013	0					
ANR	1650164	PrimaryExpression	1024		1650013	1					
ANR	1650165	CompoundStatement		32:26:919:919	1650013	1					
ANR	1650166	ExpressionStatement	set_priv ( old_priv )	888:3:22361:22380	1650013	0	True				
ANR	1650167	CallExpression	set_priv ( old_priv )		1650013	0					
ANR	1650168	Callee	set_priv		1650013	0					
ANR	1650169	Identifier	set_priv		1650013	0					
ANR	1650170	ArgumentList	old_priv		1650013	1					
ANR	1650171	Argument	old_priv		1650013	0					
ANR	1650172	Identifier	old_priv		1650013	0					
ANR	1650173	IfStatement	if ( bind_return_value == 0 )		1650013	10					
ANR	1650174	Condition	bind_return_value == 0	891:6:22399:22420	1650013	0	True				
ANR	1650175	EqualityExpression	bind_return_value == 0		1650013	0		==			
ANR	1650176	Identifier	bind_return_value		1650013	0					
ANR	1650177	PrimaryExpression	0		1650013	1					
ANR	1650178	CompoundStatement		36:30:986:986	1650013	1					
ANR	1650179	ExpressionStatement	"dprintf ( D_NETWORK , ""_condor_local_bind - bound to %d...\\n"" , this_trial - 1 )"	892:3:22439:22512	1650013	0	True				
ANR	1650180	CallExpression	"dprintf ( D_NETWORK , ""_condor_local_bind - bound to %d...\\n"" , this_trial - 1 )"		1650013	0					
ANR	1650181	Callee	dprintf		1650013	0					
ANR	1650182	Identifier	dprintf		1650013	0					
ANR	1650183	ArgumentList	D_NETWORK		1650013	1					
ANR	1650184	Argument	D_NETWORK		1650013	0					
ANR	1650185	Identifier	D_NETWORK		1650013	0					
ANR	1650186	Argument	"""_condor_local_bind - bound to %d...\\n"""		1650013	1					
ANR	1650187	PrimaryExpression	"""_condor_local_bind - bound to %d...\\n"""		1650013	0					
ANR	1650188	Argument	this_trial - 1		1650013	2					
ANR	1650189	AdditiveExpression	this_trial - 1		1650013	0		-			
ANR	1650190	Identifier	this_trial		1650013	0					
ANR	1650191	PrimaryExpression	1		1650013	1					
ANR	1650192	ReturnStatement	return TRUE ;	893:3:22517:22528	1650013	1	True				
ANR	1650193	Identifier	TRUE		1650013	0					
ANR	1650194	ElseStatement	else		1650013	0					
ANR	1650195	CompoundStatement		39:9:1102:1102	1650013	0					
ANR	1650196	ExpressionStatement	"dprintf ( D_NETWORK , ""_condor_local_bind - failed to bind: %s\\n"" , strerror ( errno ) )"	895:12:22553:22633	1650013	0	True				
ANR	1650197	CallExpression	"dprintf ( D_NETWORK , ""_condor_local_bind - failed to bind: %s\\n"" , strerror ( errno ) )"		1650013	0					
ANR	1650198	Callee	dprintf		1650013	0					
ANR	1650199	Identifier	dprintf		1650013	0					
ANR	1650200	ArgumentList	D_NETWORK		1650013	1					
ANR	1650201	Argument	D_NETWORK		1650013	0					
ANR	1650202	Identifier	D_NETWORK		1650013	0					
ANR	1650203	Argument	"""_condor_local_bind - failed to bind: %s\\n"""		1650013	1					
ANR	1650204	PrimaryExpression	"""_condor_local_bind - failed to bind: %s\\n"""		1650013	0					
ANR	1650205	Argument	strerror ( errno )		1650013	2					
ANR	1650206	CallExpression	strerror ( errno )		1650013	0					
ANR	1650207	Callee	strerror		1650013	0					
ANR	1650208	Identifier	strerror		1650013	0					
ANR	1650209	ArgumentList	errno		1650013	1					
ANR	1650210	Argument	errno		1650013	0					
ANR	1650211	Identifier	errno		1650013	0					
ANR	1650212	IfStatement	if ( this_trial > high_port )		1650013	11					
ANR	1650213	Condition	this_trial > high_port	897:7:22652:22673	1650013	0	True				
ANR	1650214	RelationalExpression	this_trial > high_port		1650013	0		>			
ANR	1650215	Identifier	this_trial		1650013	0					
ANR	1650216	Identifier	high_port		1650013	1					
ANR	1650217	ExpressionStatement	this_trial = low_port	898:3:22680:22701	1650013	1	True				
ANR	1650218	AssignmentExpression	this_trial = low_port		1650013	0		=			
ANR	1650219	Identifier	this_trial		1650013	0					
ANR	1650220	Identifier	low_port		1650013	1					
ANR	1650221	Condition	this_trial != start_trial	899:12:22715:22739	1650013	1	True				
ANR	1650222	EqualityExpression	this_trial != start_trial		1650013	0		!=			
ANR	1650223	Identifier	this_trial		1650013	0					
ANR	1650224	Identifier	start_trial		1650013	1					
ANR	1650225	ExpressionStatement	"dprintf ( D_ALWAYS , ""_condor_local_bind::bindWithin - failed to bind any port within (%d ~ %d)\\n"" , low_port , high_port )"	901:1:22745:22871	1650013	7	True				
ANR	1650226	CallExpression	"dprintf ( D_ALWAYS , ""_condor_local_bind::bindWithin - failed to bind any port within (%d ~ %d)\\n"" , low_port , high_port )"		1650013	0					
ANR	1650227	Callee	dprintf		1650013	0					
ANR	1650228	Identifier	dprintf		1650013	0					
ANR	1650229	ArgumentList	D_ALWAYS		1650013	1					
ANR	1650230	Argument	D_ALWAYS		1650013	0					
ANR	1650231	Identifier	D_ALWAYS		1650013	0					
ANR	1650232	Argument	"""_condor_local_bind::bindWithin - failed to bind any port within (%d ~ %d)\\n"""		1650013	1					
ANR	1650233	PrimaryExpression	"""_condor_local_bind::bindWithin - failed to bind any port within (%d ~ %d)\\n"""		1650013	0					
ANR	1650234	Argument	low_port		1650013	2					
ANR	1650235	Identifier	low_port		1650013	0					
ANR	1650236	Argument	high_port		1650013	3					
ANR	1650237	Identifier	high_port		1650013	0					
ANR	1650238	ReturnStatement	return FALSE ;	904:1:22875:22887	1650013	8	True				
ANR	1650239	Identifier	FALSE		1650013	0					
ANR	1650240	ReturnType	int		1650013	1					
ANR	1650241	Identifier	bindWithin		1650013	2					
ANR	1650242	ParameterList	"const int fd , const int low_port , const int high_port"		1650013	3					
ANR	1650243	Parameter	const int fd	855:15:21381:21392	1650013	0	True				
ANR	1650244	ParameterType	const int		1650013	0					
ANR	1650245	Identifier	fd		1650013	1					
ANR	1650246	Parameter	const int low_port	855:29:21395:21412	1650013	1	True				
ANR	1650247	ParameterType	const int		1650013	0					
ANR	1650248	Identifier	low_port		1650013	1					
ANR	1650249	Parameter	const int high_port	855:49:21415:21433	1650013	2	True				
ANR	1650250	ParameterType	const int		1650013	0					
ANR	1650251	Identifier	high_port		1650013	1					
ANR	1650252	CFGEntryNode	ENTRY		1650013		True				
ANR	1650253	CFGExitNode	EXIT		1650013		True				
ANR	1650254	Symbol	start_trial		1650013						
ANR	1650255	Symbol	sa_in . sin_addr		1650013						
ANR	1650256	Symbol	htons		1650013						
ANR	1650257	Symbol	range		1650013						
ANR	1650258	Symbol	sa_in . sin_family		1650013						
ANR	1650259	Symbol	pid		1650013						
ANR	1650260	Symbol	htonl		1650013						
ANR	1650261	Symbol	PRIV_UNKNOWN		1650013						
ANR	1650262	Symbol	high_port		1650013						
ANR	1650263	Symbol	old_priv		1650013						
ANR	1650264	Symbol	bind		1650013						
ANR	1650265	Symbol	low_port		1650013						
ANR	1650266	Symbol	bind_return_value		1650013						
ANR	1650267	Symbol	errno		1650013						
ANR	1650268	Symbol	this_trial		1650013						
ANR	1650269	Symbol	D_ALWAYS		1650013						
ANR	1650270	Symbol	TRUE		1650013						
ANR	1650271	Symbol	set_root_priv		1650013						
ANR	1650272	Symbol	AF_INET		1650013						
ANR	1650273	Symbol	sa_in . sin_addr . s_addr		1650013						
ANR	1650274	Symbol	strerror		1650013						
ANR	1650275	Symbol	sa_in		1650013						
ANR	1650276	Symbol	& sa_in		1650013						
ANR	1650277	Symbol	D_NETWORK		1650013						
ANR	1650278	Symbol	FALSE		1650013						
ANR	1650279	Symbol	INADDR_ANY		1650013						
ANR	1650280	Symbol	getpid		1650013						
ANR	1650281	Symbol	fd		1650013						
ANR	1650282	Symbol	sa_in . sin_port		1650013						
ANR	1650283	Function	is_priv_net	910:0:23011:23233							
ANR	1650284	FunctionDef	is_priv_net (uint32_t ip)		1650283	0					
ANR	1650285	CompoundStatement		912:0:23040:23233	1650283	0					
ANR	1650286	ReturnStatement	return ( ( ip & 0xFF000000 ) == 0x0A000000 || ( ip & 0xFFF00000 ) == 0xAC100000 || ( ip & 0xFFFF0000 ) == 0xC0A80000 ) ;	913:4:23046:23211	1650283	0	True				
ANR	1650287	OrExpression	( ip & 0xFF000000 ) == 0x0A000000 || ( ip & 0xFFF00000 ) == 0xAC100000 || ( ip & 0xFFFF0000 ) == 0xC0A80000		1650283	0		||			
ANR	1650288	EqualityExpression	( ip & 0xFF000000 ) == 0x0A000000		1650283	0		==			
ANR	1650289	BitAndExpression	ip & 0xFF000000		1650283	0		&			
ANR	1650290	Identifier	ip		1650283	0					
ANR	1650291	PrimaryExpression	0xFF000000		1650283	1					
ANR	1650292	PrimaryExpression	0x0A000000		1650283	1					
ANR	1650293	OrExpression	( ip & 0xFFF00000 ) == 0xAC100000 || ( ip & 0xFFFF0000 ) == 0xC0A80000		1650283	1		||			
ANR	1650294	EqualityExpression	( ip & 0xFFF00000 ) == 0xAC100000		1650283	0		==			
ANR	1650295	BitAndExpression	ip & 0xFFF00000		1650283	0		&			
ANR	1650296	Identifier	ip		1650283	0					
ANR	1650297	PrimaryExpression	0xFFF00000		1650283	1					
ANR	1650298	PrimaryExpression	0xAC100000		1650283	1					
ANR	1650299	EqualityExpression	( ip & 0xFFFF0000 ) == 0xC0A80000		1650283	1		==			
ANR	1650300	BitAndExpression	ip & 0xFFFF0000		1650283	0		&			
ANR	1650301	Identifier	ip		1650283	0					
ANR	1650302	PrimaryExpression	0xFFFF0000		1650283	1					
ANR	1650303	PrimaryExpression	0xC0A80000		1650283	1					
ANR	1650304	ReturnType	int		1650283	1					
ANR	1650305	Identifier	is_priv_net		1650283	2					
ANR	1650306	ParameterList	uint32_t ip		1650283	3					
ANR	1650307	Parameter	uint32_t ip	911:12:23027:23037	1650283	0	True				
ANR	1650308	ParameterType	uint32_t		1650283	0					
ANR	1650309	Identifier	ip		1650283	1					
ANR	1650310	CFGEntryNode	ENTRY		1650283		True				
ANR	1650311	CFGExitNode	EXIT		1650283		True				
ANR	1650312	Symbol	ip		1650283						
ANR	1650313	Function	is_loopback_net	918:0:23236:23326							
ANR	1650314	FunctionDef	is_loopback_net (uint32_t ip)		1650313	0					
ANR	1650315	CompoundStatement		920:0:23269:23326	1650313	0					
ANR	1650316	ReturnStatement	return ( ( ip & 0xFF000000 ) == 0x7F000000 ) ;	921:4:23275:23315	1650313	0	True				
ANR	1650317	EqualityExpression	( ip & 0xFF000000 ) == 0x7F000000		1650313	0		==			
ANR	1650318	BitAndExpression	ip & 0xFF000000		1650313	0		&			
ANR	1650319	Identifier	ip		1650313	0					
ANR	1650320	PrimaryExpression	0xFF000000		1650313	1					
ANR	1650321	PrimaryExpression	0x7F000000		1650313	1					
ANR	1650322	ReturnType	int		1650313	1					
ANR	1650323	Identifier	is_loopback_net		1650313	2					
ANR	1650324	ParameterList	uint32_t ip		1650313	3					
ANR	1650325	Parameter	uint32_t ip	919:16:23256:23266	1650313	0	True				
ANR	1650326	ParameterType	uint32_t		1650313	0					
ANR	1650327	Identifier	ip		1650313	1					
ANR	1650328	CFGEntryNode	ENTRY		1650313		True				
ANR	1650329	CFGExitNode	EXIT		1650313		True				
ANR	1650330	Symbol	ip		1650313						
ANR	1650331	Function	is_loopback_net_str	924:0:23329:23496							
ANR	1650332	FunctionDef	is_loopback_net_str (char const * ip)		1650331	0					
ANR	1650333	CompoundStatement		925:0:23369:23496	1650331	0					
ANR	1650334	ReturnStatement	return 0 ;	930:1:23486:23494	1650331	0	True				
ANR	1650335	PrimaryExpression	0		1650331	0					
ANR	1650336	ReturnType	int		1650331	1					
ANR	1650337	Identifier	is_loopback_net_str		1650331	2					
ANR	1650338	ParameterList	char const * ip		1650331	3					
ANR	1650339	Parameter	char const * ip	924:24:23353:23366	1650331	0	True				
ANR	1650340	ParameterType	char const *		1650331	0					
ANR	1650341	Identifier	ip		1650331	1					
ANR	1650342	CFGEntryNode	ENTRY		1650331		True				
ANR	1650343	CFGExitNode	EXIT		1650331		True				
ANR	1650344	Symbol	ip		1650331						
ANR	1650345	Function	in_same_net	934:0:23579:24088							
ANR	1650346	FunctionDef	"in_same_net (uint32_t ipA , uint32_t ipB)"		1650345	0					
ANR	1650347	CompoundStatement		936:0:23623:24088	1650345	0					
ANR	1650348	IdentifierDeclStatement	"unsigned char * byteA , * fA , * byteB ;"	937:4:23629:23662	1650345	0	True				
ANR	1650349	IdentifierDecl	* byteA		1650345	0					
ANR	1650350	IdentifierDeclType	unsigned char *		1650345	0					
ANR	1650351	Identifier	byteA		1650345	1					
ANR	1650352	IdentifierDecl	* fA		1650345	1					
ANR	1650353	IdentifierDeclType	unsigned char *		1650345	0					
ANR	1650354	Identifier	fA		1650345	1					
ANR	1650355	IdentifierDecl	* byteB		1650345	2					
ANR	1650356	IdentifierDeclType	unsigned char *		1650345	0					
ANR	1650357	Identifier	byteB		1650345	1					
ANR	1650358	IdentifierDeclStatement	"int i , index_to ;"	938:4:23668:23683	1650345	1	True				
ANR	1650359	IdentifierDecl	i		1650345	0					
ANR	1650360	IdentifierDeclType	int		1650345	0					
ANR	1650361	Identifier	i		1650345	1					
ANR	1650362	IdentifierDecl	index_to		1650345	1					
ANR	1650363	IdentifierDeclType	int		1650345	0					
ANR	1650364	Identifier	index_to		1650345	1					
ANR	1650365	ExpressionStatement	fA = byteA = ( unsigned char * ) & ipA	940:4:23690:23724	1650345	2	True				
ANR	1650366	AssignmentExpression	fA = byteA = ( unsigned char * ) & ipA		1650345	0		=			
ANR	1650367	Identifier	fA		1650345	0					
ANR	1650368	AssignmentExpression	byteA = ( unsigned char * ) & ipA		1650345	1		=			
ANR	1650369	Identifier	byteA		1650345	0					
ANR	1650370	CastExpression	( unsigned char * ) & ipA		1650345	1					
ANR	1650371	CastTarget	unsigned char *		1650345	0					
ANR	1650372	UnaryOperationExpression	& ipA		1650345	1					
ANR	1650373	UnaryOperator	&		1650345	0					
ANR	1650374	Identifier	ipA		1650345	1					
ANR	1650375	ExpressionStatement	byteB = ( unsigned char * ) & ipB	941:4:23730:23759	1650345	3	True				
ANR	1650376	AssignmentExpression	byteB = ( unsigned char * ) & ipB		1650345	0		=			
ANR	1650377	Identifier	byteB		1650345	0					
ANR	1650378	CastExpression	( unsigned char * ) & ipB		1650345	1					
ANR	1650379	CastTarget	unsigned char *		1650345	0					
ANR	1650380	UnaryOperationExpression	& ipB		1650345	1					
ANR	1650381	UnaryOperator	&		1650345	0					
ANR	1650382	Identifier	ipB		1650345	1					
ANR	1650383	IfStatement	if ( * fA < 128 )		1650345	4					
ANR	1650384	Condition	* fA < 128	943:8:23770:23778	1650345	0	True				
ANR	1650385	RelationalExpression	* fA < 128		1650345	0		<			
ANR	1650386	UnaryOperationExpression	* fA		1650345	0					
ANR	1650387	UnaryOperator	*		1650345	0					
ANR	1650388	Identifier	fA		1650345	1					
ANR	1650389	PrimaryExpression	128		1650345	1					
ANR	1650390	CompoundStatement		8:19:157:157	1650345	1					
ANR	1650391	ExpressionStatement	index_to = 1	944:8:23802:23814	1650345	0	True				
ANR	1650392	AssignmentExpression	index_to = 1		1650345	0		=			
ANR	1650393	Identifier	index_to		1650345	0					
ANR	1650394	PrimaryExpression	1		1650345	1					
ANR	1650395	ElseStatement	else		1650345	0					
ANR	1650396	IfStatement	if ( * fA < 192 )		1650345	0					
ANR	1650397	Condition	* fA < 192	945:14:23830:23838	1650345	0	True				
ANR	1650398	RelationalExpression	* fA < 192		1650345	0		<			
ANR	1650399	UnaryOperationExpression	* fA		1650345	0					
ANR	1650400	UnaryOperator	*		1650345	0					
ANR	1650401	Identifier	fA		1650345	1					
ANR	1650402	PrimaryExpression	192		1650345	1					
ANR	1650403	CompoundStatement		10:25:217:217	1650345	1					
ANR	1650404	ExpressionStatement	index_to = 2	946:8:23862:23874	1650345	0	True				
ANR	1650405	AssignmentExpression	index_to = 2		1650345	0		=			
ANR	1650406	Identifier	index_to		1650345	0					
ANR	1650407	PrimaryExpression	2		1650345	1					
ANR	1650408	ElseStatement	else		1650345	0					
ANR	1650409	CompoundStatement		12:11:263:263	1650345	0					
ANR	1650410	ExpressionStatement	index_to = 3	948:8:23911:23923	1650345	0	True				
ANR	1650411	AssignmentExpression	index_to = 3		1650345	0		=			
ANR	1650412	Identifier	index_to		1650345	0					
ANR	1650413	PrimaryExpression	3		1650345	1					
ANR	1650414	ForStatement	for ( i = 0 ; i < index_to ; i ++ )		1650345	5					
ANR	1650415	ForInit	i = 0 ;	951:9:23941:23946	1650345	0	True				
ANR	1650416	AssignmentExpression	i = 0		1650345	0		=			
ANR	1650417	Identifier	i		1650345	0					
ANR	1650418	PrimaryExpression	0		1650345	1					
ANR	1650419	Condition	i < index_to	951:16:23948:23959	1650345	1	True				
ANR	1650420	RelationalExpression	i < index_to		1650345	0		<			
ANR	1650421	Identifier	i		1650345	0					
ANR	1650422	Identifier	index_to		1650345	1					
ANR	1650423	PostIncDecOperationExpression	i ++	951:30:23962:23964	1650345	2	True				
ANR	1650424	Identifier	i		1650345	0					
ANR	1650425	IncDec	++		1650345	1					
ANR	1650426	CompoundStatement		16:35:343:343	1650345	3					
ANR	1650427	IfStatement	if ( * byteA != * byteB )		1650345	0					
ANR	1650428	Condition	* byteA != * byteB	952:12:23981:23996	1650345	0	True				
ANR	1650429	EqualityExpression	* byteA != * byteB		1650345	0		!=			
ANR	1650430	UnaryOperationExpression	* byteA		1650345	0					
ANR	1650431	UnaryOperator	*		1650345	0					
ANR	1650432	Identifier	byteA		1650345	1					
ANR	1650433	UnaryOperationExpression	* byteB		1650345	1					
ANR	1650434	UnaryOperator	*		1650345	0					
ANR	1650435	Identifier	byteB		1650345	1					
ANR	1650436	CompoundStatement		17:30:375:375	1650345	1					
ANR	1650437	ReturnStatement	return 0 ;	953:12:24013:24021	1650345	0	True				
ANR	1650438	PrimaryExpression	0		1650345	0					
ANR	1650439	ExpressionStatement	byteA ++	955:8:24041:24048	1650345	1	True				
ANR	1650440	PostIncDecOperationExpression	byteA ++		1650345	0					
ANR	1650441	Identifier	byteA		1650345	0					
ANR	1650442	IncDec	++		1650345	1					
ANR	1650443	ExpressionStatement	byteB ++	956:8:24058:24065	1650345	2	True				
ANR	1650444	PostIncDecOperationExpression	byteB ++		1650345	0					
ANR	1650445	Identifier	byteB		1650345	0					
ANR	1650446	IncDec	++		1650345	1					
ANR	1650447	ReturnStatement	return 1 ;	959:4:24078:24086	1650345	6	True				
ANR	1650448	PrimaryExpression	1		1650345	0					
ANR	1650449	ReturnType	int		1650345	1					
ANR	1650450	Identifier	in_same_net		1650345	2					
ANR	1650451	ParameterList	"uint32_t ipA , uint32_t ipB"		1650345	3					
ANR	1650452	Parameter	uint32_t ipA	935:12:23595:23606	1650345	0	True				
ANR	1650453	ParameterType	uint32_t		1650345	0					
ANR	1650454	Identifier	ipA		1650345	1					
ANR	1650455	Parameter	uint32_t ipB	935:26:23609:23620	1650345	1	True				
ANR	1650456	ParameterType	uint32_t		1650345	0					
ANR	1650457	Identifier	ipB		1650345	1					
ANR	1650458	CFGEntryNode	ENTRY		1650345		True				
ANR	1650459	CFGExitNode	EXIT		1650345		True				
ANR	1650460	Symbol	* fA		1650345						
ANR	1650461	Symbol	byteA		1650345						
ANR	1650462	Symbol	& ipB		1650345						
ANR	1650463	Symbol	byteB		1650345						
ANR	1650464	Symbol	& ipA		1650345						
ANR	1650465	Symbol	i		1650345						
ANR	1650466	Symbol	ipB		1650345						
ANR	1650467	Symbol	* byteB		1650345						
ANR	1650468	Symbol	ipA		1650345						
ANR	1650469	Symbol	fA		1650345						
ANR	1650470	Symbol	index_to		1650345						
ANR	1650471	Symbol	* byteA		1650345						
ANR	1650472	Function	ipport_to_string	964:0:24145:24536							
ANR	1650473	FunctionDef	"ipport_to_string (const unsigned int ip , const unsigned short port)"		1650472	0					
ANR	1650474	CompoundStatement		965:0:24219:24536	1650472	0					
ANR	1650475	Statement	static	966:4:24225:24230	1650472	0	True				
ANR	1650476	IdentifierDeclStatement	char buf [ 24 ] ;	966:12:24233:24248	1650472	1	True				
ANR	1650477	IdentifierDecl	buf [ 24 ]		1650472	0					
ANR	1650478	IdentifierDeclType	char [ 24 ]		1650472	0					
ANR	1650479	Identifier	buf		1650472	1					
ANR	1650480	PrimaryExpression	24		1650472	2					
ANR	1650481	IdentifierDeclStatement	struct in_addr inaddr ;	967:4:24254:24275	1650472	2	True				
ANR	1650482	IdentifierDecl	inaddr		1650472	0					
ANR	1650483	IdentifierDeclType	struct in_addr		1650472	0					
ANR	1650484	Identifier	inaddr		1650472	1					
ANR	1650485	ExpressionStatement	buf [ 0 ] = '<'	969:4:24282:24294	1650472	3	True				
ANR	1650486	AssignmentExpression	buf [ 0 ] = '<'		1650472	0		=			
ANR	1650487	ArrayIndexing	buf [ 0 ]		1650472	0					
ANR	1650488	Identifier	buf		1650472	0					
ANR	1650489	PrimaryExpression	0		1650472	1					
ANR	1650490	PrimaryExpression	'<'		1650472	1					
ANR	1650491	ExpressionStatement	buf [ 1 ] = '\\0'	970:4:24300:24313	1650472	4	True				
ANR	1650492	AssignmentExpression	buf [ 1 ] = '\\0'		1650472	0		=			
ANR	1650493	ArrayIndexing	buf [ 1 ]		1650472	0					
ANR	1650494	Identifier	buf		1650472	0					
ANR	1650495	PrimaryExpression	1		1650472	1					
ANR	1650496	PrimaryExpression	'\\0'		1650472	1					
ANR	1650497	IfStatement	if ( ip == INADDR_ANY )		1650472	5					
ANR	1650498	Condition	ip == INADDR_ANY	971:8:24323:24338	1650472	0	True				
ANR	1650499	EqualityExpression	ip == INADDR_ANY		1650472	0		==			
ANR	1650500	Identifier	ip		1650472	0					
ANR	1650501	Identifier	INADDR_ANY		1650472	1					
ANR	1650502	CompoundStatement		7:26:121:121	1650472	1					
ANR	1650503	ExpressionStatement	"strcat ( buf , my_ip_string ( ) )"	972:8:24351:24378	1650472	0	True				
ANR	1650504	CallExpression	"strcat ( buf , my_ip_string ( ) )"		1650472	0					
ANR	1650505	Callee	strcat		1650472	0					
ANR	1650506	Identifier	strcat		1650472	0					
ANR	1650507	ArgumentList	buf		1650472	1					
ANR	1650508	Argument	buf		1650472	0					
ANR	1650509	Identifier	buf		1650472	0					
ANR	1650510	Argument	my_ip_string ( )		1650472	1					
ANR	1650511	CallExpression	my_ip_string ( )		1650472	0					
ANR	1650512	Callee	my_ip_string		1650472	0					
ANR	1650513	Identifier	my_ip_string		1650472	0					
ANR	1650514	ArgumentList			1650472	1					
ANR	1650515	ElseStatement	else		1650472	0					
ANR	1650516	CompoundStatement		9:11:171:171	1650472	0					
ANR	1650517	ExpressionStatement	inaddr . s_addr = ip	974:8:24401:24419	1650472	0	True				
ANR	1650518	AssignmentExpression	inaddr . s_addr = ip		1650472	0		=			
ANR	1650519	MemberAccess	inaddr . s_addr		1650472	0					
ANR	1650520	Identifier	inaddr		1650472	0					
ANR	1650521	Identifier	s_addr		1650472	1					
ANR	1650522	Identifier	ip		1650472	1					
ANR	1650523	ExpressionStatement	"strcat ( buf , inet_ntoa ( inaddr ) )"	975:8:24429:24459	1650472	1	True				
ANR	1650524	CallExpression	"strcat ( buf , inet_ntoa ( inaddr ) )"		1650472	0					
ANR	1650525	Callee	strcat		1650472	0					
ANR	1650526	Identifier	strcat		1650472	0					
ANR	1650527	ArgumentList	buf		1650472	1					
ANR	1650528	Argument	buf		1650472	0					
ANR	1650529	Identifier	buf		1650472	0					
ANR	1650530	Argument	inet_ntoa ( inaddr )		1650472	1					
ANR	1650531	CallExpression	inet_ntoa ( inaddr )		1650472	0					
ANR	1650532	Callee	inet_ntoa		1650472	0					
ANR	1650533	Identifier	inet_ntoa		1650472	0					
ANR	1650534	ArgumentList	inaddr		1650472	1					
ANR	1650535	Argument	inaddr		1650472	0					
ANR	1650536	Identifier	inaddr		1650472	0					
ANR	1650537	ExpressionStatement	"sprintf ( & buf [ strlen ( buf ) ] , "":%d>"" , ntohs ( port ) )"	977:4:24471:24518	1650472	6	True				
ANR	1650538	CallExpression	"sprintf ( & buf [ strlen ( buf ) ] , "":%d>"" , ntohs ( port ) )"		1650472	0					
ANR	1650539	Callee	sprintf		1650472	0					
ANR	1650540	Identifier	sprintf		1650472	0					
ANR	1650541	ArgumentList	& buf [ strlen ( buf ) ]		1650472	1					
ANR	1650542	Argument	& buf [ strlen ( buf ) ]		1650472	0					
ANR	1650543	UnaryOperationExpression	& buf [ strlen ( buf ) ]		1650472	0					
ANR	1650544	UnaryOperator	&		1650472	0					
ANR	1650545	ArrayIndexing	buf [ strlen ( buf ) ]		1650472	1					
ANR	1650546	Identifier	buf		1650472	0					
ANR	1650547	CallExpression	strlen ( buf )		1650472	1					
ANR	1650548	Callee	strlen		1650472	0					
ANR	1650549	Identifier	strlen		1650472	0					
ANR	1650550	ArgumentList	buf		1650472	1					
ANR	1650551	Argument	buf		1650472	0					
ANR	1650552	Identifier	buf		1650472	0					
ANR	1650553	Argument	""":%d>"""		1650472	1					
ANR	1650554	PrimaryExpression	""":%d>"""		1650472	0					
ANR	1650555	Argument	ntohs ( port )		1650472	2					
ANR	1650556	CallExpression	ntohs ( port )		1650472	0					
ANR	1650557	Callee	ntohs		1650472	0					
ANR	1650558	Identifier	ntohs		1650472	0					
ANR	1650559	ArgumentList	port		1650472	1					
ANR	1650560	Argument	port		1650472	0					
ANR	1650561	Identifier	port		1650472	0					
ANR	1650562	ReturnStatement	return buf ;	978:4:24524:24534	1650472	7	True				
ANR	1650563	Identifier	buf		1650472	0					
ANR	1650564	ReturnType	char *		1650472	1					
ANR	1650565	Identifier	ipport_to_string		1650472	2					
ANR	1650566	ParameterList	"const unsigned int ip , const unsigned short port"		1650472	3					
ANR	1650567	Parameter	const unsigned int ip	964:24:24169:24189	1650472	0	True				
ANR	1650568	ParameterType	const unsigned int		1650472	0					
ANR	1650569	Identifier	ip		1650472	1					
ANR	1650570	Parameter	const unsigned short port	964:47:24192:24216	1650472	1	True				
ANR	1650571	ParameterType	const unsigned short		1650472	0					
ANR	1650572	Identifier	port		1650472	1					
ANR	1650573	CFGEntryNode	ENTRY		1650472		True				
ANR	1650574	CFGExitNode	EXIT		1650472		True				
ANR	1650575	Symbol	ntohs		1650472						
ANR	1650576	Symbol	my_ip_string		1650472						
ANR	1650577	Symbol	strlen		1650472						
ANR	1650578	Symbol	buf		1650472						
ANR	1650579	Symbol	* buf		1650472						
ANR	1650580	Symbol	port		1650472						
ANR	1650581	Symbol	ip		1650472						
ANR	1650582	Symbol	inaddr . s_addr		1650472						
ANR	1650583	Symbol	INADDR_ANY		1650472						
ANR	1650584	Symbol	inet_ntoa		1650472						
ANR	1650585	Symbol	inaddr		1650472						
ANR	1650586	Function	prt_fds	981:0:24539:24938							
ANR	1650587	FunctionDef	"prt_fds (int maxfd , fd_set * fds)"		1650586	0					
ANR	1650588	CompoundStatement		983:0:24578:24938	1650586	0					
ANR	1650589	Statement	static	984:4:24584:24589	1650586	0	True				
ANR	1650590	IdentifierDeclStatement	char buf [ 50 ] ;	984:11:24591:24603	1650586	1	True				
ANR	1650591	IdentifierDecl	buf [ 50 ]		1650586	0					
ANR	1650592	IdentifierDeclType	char [ 50 ]		1650586	0					
ANR	1650593	Identifier	buf		1650586	1					
ANR	1650594	PrimaryExpression	50		1650586	2					
ANR	1650595	IdentifierDeclStatement	"int i , size ;"	985:4:24609:24620	1650586	2	True				
ANR	1650596	IdentifierDecl	i		1650586	0					
ANR	1650597	IdentifierDeclType	int		1650586	0					
ANR	1650598	Identifier	i		1650586	1					
ANR	1650599	IdentifierDecl	size		1650586	1					
ANR	1650600	IdentifierDeclType	int		1650586	0					
ANR	1650601	Identifier	size		1650586	1					
ANR	1650602	ExpressionStatement	"sprintf ( buf , ""<"" )"	987:4:24627:24644	1650586	3	True				
ANR	1650603	CallExpression	"sprintf ( buf , ""<"" )"		1650586	0					
ANR	1650604	Callee	sprintf		1650586	0					
ANR	1650605	Identifier	sprintf		1650586	0					
ANR	1650606	ArgumentList	buf		1650586	1					
ANR	1650607	Argument	buf		1650586	0					
ANR	1650608	Identifier	buf		1650586	0					
ANR	1650609	Argument	"""<"""		1650586	1					
ANR	1650610	PrimaryExpression	"""<"""		1650586	0					
ANR	1650611	ForStatement	for ( i = 0 ; i < maxfd ; i ++ )		1650586	4					
ANR	1650612	ForInit	i = 0 ;	988:8:24654:24657	1650586	0	True				
ANR	1650613	AssignmentExpression	i = 0		1650586	0		=			
ANR	1650614	Identifier	i		1650586	0					
ANR	1650615	PrimaryExpression	0		1650586	1					
ANR	1650616	Condition	i < maxfd	988:13:24659:24665	1650586	1	True				
ANR	1650617	RelationalExpression	i < maxfd		1650586	0		<			
ANR	1650618	Identifier	i		1650586	0					
ANR	1650619	Identifier	maxfd		1650586	1					
ANR	1650620	PostIncDecOperationExpression	i ++	988:22:24668:24670	1650586	2	True				
ANR	1650621	Identifier	i		1650586	0					
ANR	1650622	IncDec	++		1650586	1					
ANR	1650623	CompoundStatement		6:27:94:94	1650586	3					
ANR	1650624	IfStatement	"if ( fds && FD_ISSET ( i , fds ) )"		1650586	0					
ANR	1650625	Condition	"fds && FD_ISSET ( i , fds )"	989:12:24687:24709	1650586	0	True				
ANR	1650626	AndExpression	"fds && FD_ISSET ( i , fds )"		1650586	0		&&			
ANR	1650627	Identifier	fds		1650586	0					
ANR	1650628	CallExpression	"FD_ISSET ( i , fds )"		1650586	1					
ANR	1650629	Callee	FD_ISSET		1650586	0					
ANR	1650630	Identifier	FD_ISSET		1650586	0					
ANR	1650631	ArgumentList	i		1650586	1					
ANR	1650632	Argument	i		1650586	0					
ANR	1650633	Identifier	i		1650586	0					
ANR	1650634	Argument	fds		1650586	1					
ANR	1650635	Identifier	fds		1650586	0					
ANR	1650636	CompoundStatement		7:37:133:133	1650586	1					
ANR	1650637	IfStatement	if ( ( size = strlen ( buf ) ) > 40 )		1650586	0					
ANR	1650638	Condition	( size = strlen ( buf ) ) > 40	990:16:24730:24754	1650586	0	True				
ANR	1650639	RelationalExpression	( size = strlen ( buf ) ) > 40		1650586	0		>			
ANR	1650640	AssignmentExpression	size = strlen ( buf )		1650586	0		=			
ANR	1650641	Identifier	size		1650586	0					
ANR	1650642	CallExpression	strlen ( buf )		1650586	1					
ANR	1650643	Callee	strlen		1650586	0					
ANR	1650644	Identifier	strlen		1650586	0					
ANR	1650645	ArgumentList	buf		1650586	1					
ANR	1650646	Argument	buf		1650586	0					
ANR	1650647	Identifier	buf		1650586	0					
ANR	1650648	PrimaryExpression	40		1650586	1					
ANR	1650649	CompoundStatement		8:43:178:178	1650586	1					
ANR	1650650	ExpressionStatement	"strcat ( buf , ""...>"" )"	991:16:24775:24794	1650586	0	True				
ANR	1650651	CallExpression	"strcat ( buf , ""...>"" )"		1650586	0					
ANR	1650652	Callee	strcat		1650586	0					
ANR	1650653	Identifier	strcat		1650586	0					
ANR	1650654	ArgumentList	buf		1650586	1					
ANR	1650655	Argument	buf		1650586	0					
ANR	1650656	Identifier	buf		1650586	0					
ANR	1650657	Argument	"""...>"""		1650586	1					
ANR	1650658	PrimaryExpression	"""...>"""		1650586	0					
ANR	1650659	ReturnStatement	return buf ;	992:16:24812:24822	1650586	1	True				
ANR	1650660	Identifier	buf		1650586	0					
ANR	1650661	ExpressionStatement	"sprintf ( & buf [ strlen ( buf ) ] , ""%d "" , i )"	994:8:24846:24882	1650586	1	True				
ANR	1650662	CallExpression	"sprintf ( & buf [ strlen ( buf ) ] , ""%d "" , i )"		1650586	0					
ANR	1650663	Callee	sprintf		1650586	0					
ANR	1650664	Identifier	sprintf		1650586	0					
ANR	1650665	ArgumentList	& buf [ strlen ( buf ) ]		1650586	1					
ANR	1650666	Argument	& buf [ strlen ( buf ) ]		1650586	0					
ANR	1650667	UnaryOperationExpression	& buf [ strlen ( buf ) ]		1650586	0					
ANR	1650668	UnaryOperator	&		1650586	0					
ANR	1650669	ArrayIndexing	buf [ strlen ( buf ) ]		1650586	1					
ANR	1650670	Identifier	buf		1650586	0					
ANR	1650671	CallExpression	strlen ( buf )		1650586	1					
ANR	1650672	Callee	strlen		1650586	0					
ANR	1650673	Identifier	strlen		1650586	0					
ANR	1650674	ArgumentList	buf		1650586	1					
ANR	1650675	Argument	buf		1650586	0					
ANR	1650676	Identifier	buf		1650586	0					
ANR	1650677	Argument	"""%d """		1650586	1					
ANR	1650678	PrimaryExpression	"""%d """		1650586	0					
ANR	1650679	Argument	i		1650586	2					
ANR	1650680	Identifier	i		1650586	0					
ANR	1650681	ExpressionStatement	"strcat ( buf , "">"" )"	997:4:24904:24920	1650586	5	True				
ANR	1650682	CallExpression	"strcat ( buf , "">"" )"		1650586	0					
ANR	1650683	Callee	strcat		1650586	0					
ANR	1650684	Identifier	strcat		1650586	0					
ANR	1650685	ArgumentList	buf		1650586	1					
ANR	1650686	Argument	buf		1650586	0					
ANR	1650687	Identifier	buf		1650586	0					
ANR	1650688	Argument	""">"""		1650586	1					
ANR	1650689	PrimaryExpression	""">"""		1650586	0					
ANR	1650690	ReturnStatement	return buf ;	998:4:24926:24936	1650586	6	True				
ANR	1650691	Identifier	buf		1650586	0					
ANR	1650692	ReturnType	char *		1650586	1					
ANR	1650693	Identifier	prt_fds		1650586	2					
ANR	1650694	ParameterList	"int maxfd , fd_set * fds"		1650586	3					
ANR	1650695	Parameter	int maxfd	982:8:24554:24562	1650586	0	True				
ANR	1650696	ParameterType	int		1650586	0					
ANR	1650697	Identifier	maxfd		1650586	1					
ANR	1650698	Parameter	fd_set * fds	982:19:24565:24575	1650586	1	True				
ANR	1650699	ParameterType	fd_set *		1650586	0					
ANR	1650700	Identifier	fds		1650586	1					
ANR	1650701	CFGEntryNode	ENTRY		1650586		True				
ANR	1650702	CFGExitNode	EXIT		1650586		True				
ANR	1650703	Symbol	strlen		1650586						
ANR	1650704	Symbol	buf		1650586						
ANR	1650705	Symbol	fds		1650586						
ANR	1650706	Symbol	size		1650586						
ANR	1650707	Symbol	FD_ISSET		1650586						
ANR	1650708	Symbol	i		1650586						
ANR	1650709	Symbol	maxfd		1650586						
ANR	1650710	Function	getPortFromAddr	1002:0:24978:25865							
ANR	1650711	FunctionDef	getPortFromAddr (const char * addr)		1650710	0					
ANR	1650712	CompoundStatement		1004:0:25018:25865	1650710	0					
ANR	1650713	IdentifierDeclStatement	const char * tmp ;	1005:1:25021:25036	1650710	0	True				
ANR	1650714	IdentifierDecl	* tmp		1650710	0					
ANR	1650715	IdentifierDeclType	const char *		1650710	0					
ANR	1650716	Identifier	tmp		1650710	1					
ANR	1650717	IdentifierDeclStatement	char * end ;	1006:1:25039:25048	1650710	1	True				
ANR	1650718	IdentifierDecl	* end		1650710	0					
ANR	1650719	IdentifierDeclType	char *		1650710	0					
ANR	1650720	Identifier	end		1650710	1					
ANR	1650721	IdentifierDeclStatement	long port = - 1 ;	1007:1:25051:25065	1650710	2	True				
ANR	1650722	IdentifierDecl	port = - 1		1650710	0					
ANR	1650723	IdentifierDeclType	long		1650710	0					
ANR	1650724	Identifier	port		1650710	1					
ANR	1650725	AssignmentExpression	port = - 1		1650710	2		=			
ANR	1650726	Identifier	port		1650710	0					
ANR	1650727	UnaryOperationExpression	- 1		1650710	1					
ANR	1650728	UnaryOperator	-		1650710	0					
ANR	1650729	PrimaryExpression	1		1650710	1					
ANR	1650730	IfStatement	if ( ! addr )		1650710	3					
ANR	1650731	Condition	! addr	1009:5:25073:25078	1650710	0	True				
ANR	1650732	UnaryOperationExpression	! addr		1650710	0					
ANR	1650733	UnaryOperator	!		1650710	0					
ANR	1650734	Identifier	addr		1650710	1					
ANR	1650735	CompoundStatement		6:14:63:63	1650710	1					
ANR	1650736	ReturnStatement	return - 1 ;	1010:2:25086:25095	1650710	0	True				
ANR	1650737	UnaryOperationExpression	- 1		1650710	0					
ANR	1650738	UnaryOperator	-		1650710	0					
ANR	1650739	PrimaryExpression	1		1650710	1					
ANR	1650740	IfStatement	if ( * addr == '<' )		1650710	4					
ANR	1650741	Condition	* addr == '<'	1014:5:25133:25144	1650710	0	True				
ANR	1650742	EqualityExpression	* addr == '<'		1650710	0		==			
ANR	1650743	UnaryOperationExpression	* addr		1650710	0					
ANR	1650744	UnaryOperator	*		1650710	0					
ANR	1650745	Identifier	addr		1650710	1					
ANR	1650746	PrimaryExpression	'<'		1650710	1					
ANR	1650747	ExpressionStatement	addr ++	1015:2:25149:25155	1650710	1	True				
ANR	1650748	PostIncDecOperationExpression	addr ++		1650710	0					
ANR	1650749	Identifier	addr		1650710	0					
ANR	1650750	IncDec	++		1650710	1					
ANR	1650751	IfStatement	if ( * addr == '[' )		1650710	5					
ANR	1650752	Condition	* addr == '['	1016:5:25162:25173	1650710	0	True				
ANR	1650753	EqualityExpression	* addr == '['		1650710	0		==			
ANR	1650754	UnaryOperationExpression	* addr		1650710	0					
ANR	1650755	UnaryOperator	*		1650710	0					
ANR	1650756	Identifier	addr		1650710	1					
ANR	1650757	PrimaryExpression	'['		1650710	1					
ANR	1650758	CompoundStatement		13:19:157:157	1650710	1					
ANR	1650759	ExpressionStatement	"addr = strchr ( addr , ']' )"	1017:2:25180:25204	1650710	0	True				
ANR	1650760	AssignmentExpression	"addr = strchr ( addr , ']' )"		1650710	0		=			
ANR	1650761	Identifier	addr		1650710	0					
ANR	1650762	CallExpression	"strchr ( addr , ']' )"		1650710	1					
ANR	1650763	Callee	strchr		1650710	0					
ANR	1650764	Identifier	strchr		1650710	0					
ANR	1650765	ArgumentList	addr		1650710	1					
ANR	1650766	Argument	addr		1650710	0					
ANR	1650767	Identifier	addr		1650710	0					
ANR	1650768	Argument	']'		1650710	1					
ANR	1650769	PrimaryExpression	']'		1650710	0					
ANR	1650770	IfStatement	if ( ! addr )		1650710	1					
ANR	1650771	Condition	! addr	1018:6:25212:25216	1650710	0	True				
ANR	1650772	UnaryOperationExpression	! addr		1650710	0					
ANR	1650773	UnaryOperator	!		1650710	0					
ANR	1650774	Identifier	addr		1650710	1					
ANR	1650775	ReturnStatement	return - 1 ;	1019:3:25222:25231	1650710	1	True				
ANR	1650776	UnaryOperationExpression	- 1		1650710	0					
ANR	1650777	UnaryOperator	-		1650710	0					
ANR	1650778	PrimaryExpression	1		1650710	1					
ANR	1650779	ExpressionStatement	addr ++	1020:2:25235:25241	1650710	2	True				
ANR	1650780	PostIncDecOperationExpression	addr ++		1650710	0					
ANR	1650781	Identifier	addr		1650710	0					
ANR	1650782	IncDec	++		1650710	1					
ANR	1650783	ExpressionStatement	"tmp = strchr ( addr , ':' )"	1023:1:25248:25273	1650710	6	True				
ANR	1650784	AssignmentExpression	"tmp = strchr ( addr , ':' )"		1650710	0		=			
ANR	1650785	Identifier	tmp		1650710	0					
ANR	1650786	CallExpression	"strchr ( addr , ':' )"		1650710	1					
ANR	1650787	Callee	strchr		1650710	0					
ANR	1650788	Identifier	strchr		1650710	0					
ANR	1650789	ArgumentList	addr		1650710	1					
ANR	1650790	Argument	addr		1650710	0					
ANR	1650791	Identifier	addr		1650710	0					
ANR	1650792	Argument	':'		1650710	1					
ANR	1650793	PrimaryExpression	':'		1650710	0					
ANR	1650794	IfStatement	if ( ! tmp || ! * ( tmp + 1 ) )		1650710	7					
ANR	1650795	Condition	! tmp || ! * ( tmp + 1 )	1024:5:25280:25297	1650710	0	True				
ANR	1650796	OrExpression	! tmp || ! * ( tmp + 1 )		1650710	0		||			
ANR	1650797	UnaryOperationExpression	! tmp		1650710	0					
ANR	1650798	UnaryOperator	!		1650710	0					
ANR	1650799	Identifier	tmp		1650710	1					
ANR	1650800	UnaryOperationExpression	! * ( tmp + 1 )		1650710	1					
ANR	1650801	UnaryOperator	!		1650710	0					
ANR	1650802	UnaryOperationExpression	* ( tmp + 1 )		1650710	1					
ANR	1650803	UnaryOperator	*		1650710	0					
ANR	1650804	AdditiveExpression	tmp + 1		1650710	1		+			
ANR	1650805	Identifier	tmp		1650710	0					
ANR	1650806	PrimaryExpression	1		1650710	1					
ANR	1650807	CompoundStatement		21:26:282:282	1650710	1					
ANR	1650808	ReturnStatement	return - 1 ;	1026:2:25352:25361	1650710	0	True				
ANR	1650809	UnaryOperationExpression	- 1		1650710	0					
ANR	1650810	UnaryOperator	-		1650710	0					
ANR	1650811	PrimaryExpression	1		1650710	1					
ANR	1650812	ExpressionStatement	errno = 0	1031:1:25471:25480	1650710	8	True				
ANR	1650813	AssignmentExpression	errno = 0		1650710	0		=			
ANR	1650814	Identifier	errno		1650710	0					
ANR	1650815	PrimaryExpression	0		1650710	1					
ANR	1650816	ExpressionStatement	"port = strtol ( tmp + 1 , & end , 10 )"	1032:1:25483:25515	1650710	9	True				
ANR	1650817	AssignmentExpression	"port = strtol ( tmp + 1 , & end , 10 )"		1650710	0		=			
ANR	1650818	Identifier	port		1650710	0					
ANR	1650819	CallExpression	"strtol ( tmp + 1 , & end , 10 )"		1650710	1					
ANR	1650820	Callee	strtol		1650710	0					
ANR	1650821	Identifier	strtol		1650710	0					
ANR	1650822	ArgumentList	tmp + 1		1650710	1					
ANR	1650823	Argument	tmp + 1		1650710	0					
ANR	1650824	AdditiveExpression	tmp + 1		1650710	0		+			
ANR	1650825	Identifier	tmp		1650710	0					
ANR	1650826	PrimaryExpression	1		1650710	1					
ANR	1650827	Argument	& end		1650710	1					
ANR	1650828	UnaryOperationExpression	& end		1650710	0					
ANR	1650829	UnaryOperator	&		1650710	0					
ANR	1650830	Identifier	end		1650710	1					
ANR	1650831	Argument	10		1650710	2					
ANR	1650832	PrimaryExpression	10		1650710	0					
ANR	1650833	IfStatement	if ( errno == ERANGE )		1650710	10					
ANR	1650834	Condition	errno == ERANGE	1033:5:25522:25536	1650710	0	True				
ANR	1650835	EqualityExpression	errno == ERANGE		1650710	0		==			
ANR	1650836	Identifier	errno		1650710	0					
ANR	1650837	Identifier	ERANGE		1650710	1					
ANR	1650838	CompoundStatement		30:23:521:521	1650710	1					
ANR	1650839	ReturnStatement	return - 1 ;	1035:2:25577:25586	1650710	0	True				
ANR	1650840	UnaryOperationExpression	- 1		1650710	0					
ANR	1650841	UnaryOperator	-		1650710	0					
ANR	1650842	PrimaryExpression	1		1650710	1					
ANR	1650843	IfStatement	if ( end == tmp + 1 )		1650710	11					
ANR	1650844	Condition	end == tmp + 1	1037:5:25596:25607	1650710	0	True				
ANR	1650845	EqualityExpression	end == tmp + 1		1650710	0		==			
ANR	1650846	Identifier	end		1650710	0					
ANR	1650847	AdditiveExpression	tmp + 1		1650710	1		+			
ANR	1650848	Identifier	tmp		1650710	0					
ANR	1650849	PrimaryExpression	1		1650710	1					
ANR	1650850	CompoundStatement		34:20:592:592	1650710	1					
ANR	1650851	ReturnStatement	return - 1 ;	1039:2:25668:25677	1650710	0	True				
ANR	1650852	UnaryOperationExpression	- 1		1650710	0					
ANR	1650853	UnaryOperator	-		1650710	0					
ANR	1650854	PrimaryExpression	1		1650710	1					
ANR	1650855	IfStatement	if ( port < 0 )		1650710	12					
ANR	1650856	Condition	port < 0	1041:5:25687:25694	1650710	0	True				
ANR	1650857	RelationalExpression	port < 0		1650710	0		<			
ANR	1650858	Identifier	port		1650710	0					
ANR	1650859	PrimaryExpression	0		1650710	1					
ANR	1650860	CompoundStatement		38:16:679:679	1650710	1					
ANR	1650861	ReturnStatement	return - 1 ;	1043:2:25742:25751	1650710	0	True				
ANR	1650862	UnaryOperationExpression	- 1		1650710	0					
ANR	1650863	UnaryOperator	-		1650710	0					
ANR	1650864	PrimaryExpression	1		1650710	1					
ANR	1650865	IfStatement	if ( port > INT_MAX )		1650710	13					
ANR	1650866	Condition	port > INT_MAX	1045:5:25761:25774	1650710	0	True				
ANR	1650867	RelationalExpression	port > INT_MAX		1650710	0		>			
ANR	1650868	Identifier	port		1650710	0					
ANR	1650869	Identifier	INT_MAX		1650710	1					
ANR	1650870	CompoundStatement		42:22:759:759	1650710	1					
ANR	1650871	ReturnStatement	return - 1 ;	1047:2:25832:25841	1650710	0	True				
ANR	1650872	UnaryOperationExpression	- 1		1650710	0					
ANR	1650873	UnaryOperator	-		1650710	0					
ANR	1650874	PrimaryExpression	1		1650710	1					
ANR	1650875	ReturnStatement	return ( int ) port ;	1049:1:25847:25863	1650710	14	True				
ANR	1650876	CastExpression	( int ) port		1650710	0					
ANR	1650877	CastTarget	int		1650710	0					
ANR	1650878	Identifier	port		1650710	1					
ANR	1650879	ReturnType	int		1650710	1					
ANR	1650880	Identifier	getPortFromAddr		1650710	2					
ANR	1650881	ParameterList	const char * addr		1650710	3					
ANR	1650882	Parameter	const char * addr	1003:17:24999:25014	1650710	0	True				
ANR	1650883	ParameterType	const char *		1650710	0					
ANR	1650884	Identifier	addr		1650710	1					
ANR	1650885	CFGEntryNode	ENTRY		1650710		True				
ANR	1650886	CFGExitNode	EXIT		1650710		True				
ANR	1650887	Symbol	* tmp		1650710						
ANR	1650888	Symbol	errno		1650710						
ANR	1650889	Symbol	& end		1650710						
ANR	1650890	Symbol	strchr		1650710						
ANR	1650891	Symbol	* ( tmp + 1 )		1650710						
ANR	1650892	Symbol	port		1650710						
ANR	1650893	Symbol	strtol		1650710						
ANR	1650894	Symbol	tmp		1650710						
ANR	1650895	Symbol	ERANGE		1650710						
ANR	1650896	Symbol	INT_MAX		1650710						
ANR	1650897	Symbol	end		1650710						
ANR	1650898	Symbol	* addr		1650710						
ANR	1650899	Symbol	addr		1650710						
ANR	1650900	Function	getHostFromAddr	1054:0:25906:27029							
ANR	1650901	FunctionDef	getHostFromAddr (const char * addr)		1650900	0					
ANR	1650902	CompoundStatement		1056:0:25948:27029	1650900	0					
ANR	1650903	IdentifierDeclStatement	"char * copy , * host = NULL , * tmp ;"	1057:1:25951:25981	1650900	0	True				
ANR	1650904	IdentifierDecl	* copy		1650900	0					
ANR	1650905	IdentifierDeclType	char *		1650900	0					
ANR	1650906	Identifier	copy		1650900	1					
ANR	1650907	IdentifierDecl	* host = NULL		1650900	1					
ANR	1650908	IdentifierDeclType	char *		1650900	0					
ANR	1650909	Identifier	host		1650900	1					
ANR	1650910	AssignmentExpression	* host = NULL		1650900	2		=			
ANR	1650911	Identifier	NULL		1650900	0					
ANR	1650912	Identifier	NULL		1650900	1					
ANR	1650913	IdentifierDecl	* tmp		1650900	2					
ANR	1650914	IdentifierDeclType	char *		1650900	0					
ANR	1650915	Identifier	tmp		1650900	1					
ANR	1650916	IfStatement	if ( ! ( addr && addr [ 0 ] ) )		1650900	1					
ANR	1650917	Condition	! ( addr && addr [ 0 ] )	1059:5:25989:26007	1650900	0	True				
ANR	1650918	UnaryOperationExpression	! ( addr && addr [ 0 ] )		1650900	0					
ANR	1650919	UnaryOperator	!		1650900	0					
ANR	1650920	AndExpression	addr && addr [ 0 ]		1650900	1		&&			
ANR	1650921	Identifier	addr		1650900	0					
ANR	1650922	ArrayIndexing	addr [ 0 ]		1650900	1					
ANR	1650923	Identifier	addr		1650900	0					
ANR	1650924	PrimaryExpression	0		1650900	1					
ANR	1650925	CompoundStatement		4:27:62:62	1650900	1					
ANR	1650926	ReturnStatement	return 0 ;	1060:2:26015:26023	1650900	0	True				
ANR	1650927	PrimaryExpression	0		1650900	0					
ANR	1650928	ExpressionStatement	copy = strdup ( addr )	1063:1:26030:26051	1650900	2	True				
ANR	1650929	AssignmentExpression	copy = strdup ( addr )		1650900	0		=			
ANR	1650930	Identifier	copy		1650900	0					
ANR	1650931	CallExpression	strdup ( addr )		1650900	1					
ANR	1650932	Callee	strdup		1650900	0					
ANR	1650933	Identifier	strdup		1650900	0					
ANR	1650934	ArgumentList	addr		1650900	1					
ANR	1650935	Argument	addr		1650900	0					
ANR	1650936	Identifier	addr		1650900	0					
ANR	1650937	IfStatement	"if ( ( tmp = strchr ( copy , ']' ) ) )"		1650900	3					
ANR	1650938	Condition	"tmp = strchr ( copy , ']' )"	1065:5:26059:26083	1650900	0	True				
ANR	1650939	AssignmentExpression	"tmp = strchr ( copy , ']' )"		1650900	0		=			
ANR	1650940	Identifier	tmp		1650900	0					
ANR	1650941	CallExpression	"strchr ( copy , ']' )"		1650900	1					
ANR	1650942	Callee	strchr		1650900	0					
ANR	1650943	Identifier	strchr		1650900	0					
ANR	1650944	ArgumentList	copy		1650900	1					
ANR	1650945	Argument	copy		1650900	0					
ANR	1650946	Identifier	copy		1650900	0					
ANR	1650947	Argument	']'		1650900	1					
ANR	1650948	PrimaryExpression	']'		1650900	0					
ANR	1650949	CompoundStatement		10:33:138:138	1650900	1					
ANR	1650950	ExpressionStatement	* tmp = '\\0'	1067:2:26158:26169	1650900	0	True				
ANR	1650951	AssignmentExpression	* tmp = '\\0'		1650900	0		=			
ANR	1650952	UnaryOperationExpression	* tmp		1650900	0					
ANR	1650953	UnaryOperator	*		1650900	0					
ANR	1650954	Identifier	tmp		1650900	1					
ANR	1650955	PrimaryExpression	'\\0'		1650900	1					
ANR	1650956	ElseStatement	else		1650900	0					
ANR	1650957	IfStatement	"if ( ( tmp = strchr ( copy , ':' ) ) )"		1650900	0					
ANR	1650958	Condition	"tmp = strchr ( copy , ':' )"	1069:12:26184:26208	1650900	0	True				
ANR	1650959	AssignmentExpression	"tmp = strchr ( copy , ':' )"		1650900	0		=			
ANR	1650960	Identifier	tmp		1650900	0					
ANR	1650961	CallExpression	"strchr ( copy , ':' )"		1650900	1					
ANR	1650962	Callee	strchr		1650900	0					
ANR	1650963	Identifier	strchr		1650900	0					
ANR	1650964	ArgumentList	copy		1650900	1					
ANR	1650965	Argument	copy		1650900	0					
ANR	1650966	Identifier	copy		1650900	0					
ANR	1650967	Argument	':'		1650900	1					
ANR	1650968	PrimaryExpression	':'		1650900	0					
ANR	1650969	CompoundStatement		14:40:263:263	1650900	1					
ANR	1650970	ExpressionStatement	* tmp = '\\0'	1071:2:26280:26291	1650900	0	True				
ANR	1650971	AssignmentExpression	* tmp = '\\0'		1650900	0		=			
ANR	1650972	UnaryOperationExpression	* tmp		1650900	0					
ANR	1650973	UnaryOperator	*		1650900	0					
ANR	1650974	Identifier	tmp		1650900	1					
ANR	1650975	PrimaryExpression	'\\0'		1650900	1					
ANR	1650976	IfStatement	"if ( ( tmp = strrchr ( copy , '>' ) ) )"		1650900	4					
ANR	1650977	Condition	"tmp = strrchr ( copy , '>' )"	1076:5:26380:26405	1650900	0	True				
ANR	1650978	AssignmentExpression	"tmp = strrchr ( copy , '>' )"		1650900	0		=			
ANR	1650979	Identifier	tmp		1650900	0					
ANR	1650980	CallExpression	"strrchr ( copy , '>' )"		1650900	1					
ANR	1650981	Callee	strrchr		1650900	0					
ANR	1650982	Identifier	strrchr		1650900	0					
ANR	1650983	ArgumentList	copy		1650900	1					
ANR	1650984	Argument	copy		1650900	0					
ANR	1650985	Identifier	copy		1650900	0					
ANR	1650986	Argument	'>'		1650900	1					
ANR	1650987	PrimaryExpression	'>'		1650900	0					
ANR	1650988	CompoundStatement		21:34:460:460	1650900	1					
ANR	1650989	ExpressionStatement	* tmp = '\\0'	1077:2:26413:26424	1650900	0	True				
ANR	1650990	AssignmentExpression	* tmp = '\\0'		1650900	0		=			
ANR	1650991	UnaryOperationExpression	* tmp		1650900	0					
ANR	1650992	UnaryOperator	*		1650900	0					
ANR	1650993	Identifier	tmp		1650900	1					
ANR	1650994	PrimaryExpression	'\\0'		1650900	1					
ANR	1650995	IfStatement	"if ( ( tmp = strchr ( copy , '@' ) ) )"		1650900	5					
ANR	1650996	Condition	"tmp = strchr ( copy , '@' )"	1081:5:26500:26524	1650900	0	True				
ANR	1650997	AssignmentExpression	"tmp = strchr ( copy , '@' )"		1650900	0		=			
ANR	1650998	Identifier	tmp		1650900	0					
ANR	1650999	CallExpression	"strchr ( copy , '@' )"		1650900	1					
ANR	1651000	Callee	strchr		1650900	0					
ANR	1651001	Identifier	strchr		1650900	0					
ANR	1651002	ArgumentList	copy		1650900	1					
ANR	1651003	Argument	copy		1650900	0					
ANR	1651004	Identifier	copy		1650900	0					
ANR	1651005	Argument	'@'		1650900	1					
ANR	1651006	PrimaryExpression	'@'		1650900	0					
ANR	1651007	CompoundStatement		26:33:579:579	1650900	1					
ANR	1651008	IfStatement	if ( tmp [ 1 ] )		1650900	0					
ANR	1651009	Condition	tmp [ 1 ]	1082:6:26536:26541	1650900	0	True				
ANR	1651010	ArrayIndexing	tmp [ 1 ]		1650900	0					
ANR	1651011	Identifier	tmp		1650900	0					
ANR	1651012	PrimaryExpression	1		1650900	1					
ANR	1651013	CompoundStatement		27:15:596:596	1650900	1					
ANR	1651014	ExpressionStatement	host = strdup ( & tmp [ 1 ] )	1083:3:26550:26574	1650900	0	True				
ANR	1651015	AssignmentExpression	host = strdup ( & tmp [ 1 ] )		1650900	0		=			
ANR	1651016	Identifier	host		1650900	0					
ANR	1651017	CallExpression	strdup ( & tmp [ 1 ] )		1650900	1					
ANR	1651018	Callee	strdup		1650900	0					
ANR	1651019	Identifier	strdup		1650900	0					
ANR	1651020	ArgumentList	& tmp [ 1 ]		1650900	1					
ANR	1651021	Argument	& tmp [ 1 ]		1650900	0					
ANR	1651022	UnaryOperationExpression	& tmp [ 1 ]		1650900	0					
ANR	1651023	UnaryOperator	&		1650900	0					
ANR	1651024	ArrayIndexing	tmp [ 1 ]		1650900	1					
ANR	1651025	Identifier	tmp		1650900	0					
ANR	1651026	PrimaryExpression	1		1650900	1					
ANR	1651027	ExpressionStatement	free ( copy )	1085:2:26582:26594	1650900	1	True				
ANR	1651028	CallExpression	free ( copy )		1650900	0					
ANR	1651029	Callee	free		1650900	0					
ANR	1651030	Identifier	free		1650900	0					
ANR	1651031	ArgumentList	copy		1650900	1					
ANR	1651032	Argument	copy		1650900	0					
ANR	1651033	Identifier	copy		1650900	0					
ANR	1651034	ReturnStatement	return host ;	1086:2:26598:26609	1650900	2	True				
ANR	1651035	Identifier	host		1650900	0					
ANR	1651036	IfStatement	if ( copy [ 0 ] == '<' )		1650900	6					
ANR	1651037	Condition	copy [ 0 ] == '<'	1093:5:26790:26803	1650900	0	True				
ANR	1651038	EqualityExpression	copy [ 0 ] == '<'		1650900	0		==			
ANR	1651039	ArrayIndexing	copy [ 0 ]		1650900	0					
ANR	1651040	Identifier	copy		1650900	0					
ANR	1651041	PrimaryExpression	0		1650900	1					
ANR	1651042	PrimaryExpression	'<'		1650900	1					
ANR	1651043	CompoundStatement		38:22:858:858	1650900	1					
ANR	1651044	IfStatement	if ( copy [ 1 ] )		1650900	0					
ANR	1651045	Condition	copy [ 1 ]	1094:6:26815:26821	1650900	0	True				
ANR	1651046	ArrayIndexing	copy [ 1 ]		1650900	0					
ANR	1651047	Identifier	copy		1650900	0					
ANR	1651048	PrimaryExpression	1		1650900	1					
ANR	1651049	CompoundStatement		39:16:876:876	1650900	1					
ANR	1651050	IfStatement	if ( copy [ 1 ] == '[' )		1650900	0					
ANR	1651051	Condition	copy [ 1 ] == '['	1095:7:26834:26847	1650900	0	True				
ANR	1651052	EqualityExpression	copy [ 1 ] == '['		1650900	0		==			
ANR	1651053	ArrayIndexing	copy [ 1 ]		1650900	0					
ANR	1651054	Identifier	copy		1650900	0					
ANR	1651055	PrimaryExpression	1		1650900	1					
ANR	1651056	PrimaryExpression	'['		1650900	1					
ANR	1651057	CompoundStatement		40:23:901:901	1650900	1					
ANR	1651058	IfStatement	if ( copy [ 2 ] )		1650900	0					
ANR	1651059	Condition	copy [ 2 ]	1096:9:26861:26867	1650900	0	True				
ANR	1651060	ArrayIndexing	copy [ 2 ]		1650900	0					
ANR	1651061	Identifier	copy		1650900	0					
ANR	1651062	PrimaryExpression	2		1650900	1					
ANR	1651063	ExpressionStatement	host = strdup ( & copy [ 2 ] )	1097:5:26876:26901	1650900	1	True				
ANR	1651064	AssignmentExpression	host = strdup ( & copy [ 2 ] )		1650900	0		=			
ANR	1651065	Identifier	host		1650900	0					
ANR	1651066	CallExpression	strdup ( & copy [ 2 ] )		1650900	1					
ANR	1651067	Callee	strdup		1650900	0					
ANR	1651068	Identifier	strdup		1650900	0					
ANR	1651069	ArgumentList	& copy [ 2 ]		1650900	1					
ANR	1651070	Argument	& copy [ 2 ]		1650900	0					
ANR	1651071	UnaryOperationExpression	& copy [ 2 ]		1650900	0					
ANR	1651072	UnaryOperator	&		1650900	0					
ANR	1651073	ArrayIndexing	copy [ 2 ]		1650900	1					
ANR	1651074	Identifier	copy		1650900	0					
ANR	1651075	PrimaryExpression	2		1650900	1					
ANR	1651076	ElseStatement	else		1650900	0					
ANR	1651077	ExpressionStatement	host = strdup ( & copy [ 1 ] )	1099:4:26917:26942	1650900	0	True				
ANR	1651078	AssignmentExpression	host = strdup ( & copy [ 1 ] )		1650900	0		=			
ANR	1651079	Identifier	host		1650900	0					
ANR	1651080	CallExpression	strdup ( & copy [ 1 ] )		1650900	1					
ANR	1651081	Callee	strdup		1650900	0					
ANR	1651082	Identifier	strdup		1650900	0					
ANR	1651083	ArgumentList	& copy [ 1 ]		1650900	1					
ANR	1651084	Argument	& copy [ 1 ]		1650900	0					
ANR	1651085	UnaryOperationExpression	& copy [ 1 ]		1650900	0					
ANR	1651086	UnaryOperator	&		1650900	0					
ANR	1651087	ArrayIndexing	copy [ 1 ]		1650900	1					
ANR	1651088	Identifier	copy		1650900	0					
ANR	1651089	PrimaryExpression	1		1650900	1					
ANR	1651090	ElseStatement	else		1650900	0					
ANR	1651091	IfStatement	if ( copy [ 0 ] )		1650900	0					
ANR	1651092	Condition	copy [ 0 ]	1101:12:26960:26966	1650900	0	True				
ANR	1651093	ArrayIndexing	copy [ 0 ]		1650900	0					
ANR	1651094	Identifier	copy		1650900	0					
ANR	1651095	PrimaryExpression	0		1650900	1					
ANR	1651096	CompoundStatement		46:22:1021:1021	1650900	1					
ANR	1651097	ExpressionStatement	host = strdup ( copy )	1102:2:26974:26995	1650900	0	True				
ANR	1651098	AssignmentExpression	host = strdup ( copy )		1650900	0		=			
ANR	1651099	Identifier	host		1650900	0					
ANR	1651100	CallExpression	strdup ( copy )		1650900	1					
ANR	1651101	Callee	strdup		1650900	0					
ANR	1651102	Identifier	strdup		1650900	0					
ANR	1651103	ArgumentList	copy		1650900	1					
ANR	1651104	Argument	copy		1650900	0					
ANR	1651105	Identifier	copy		1650900	0					
ANR	1651106	ExpressionStatement	free ( copy )	1104:1:27001:27013	1650900	7	True				
ANR	1651107	CallExpression	free ( copy )		1650900	0					
ANR	1651108	Callee	free		1650900	0					
ANR	1651109	Identifier	free		1650900	0					
ANR	1651110	ArgumentList	copy		1650900	1					
ANR	1651111	Argument	copy		1650900	0					
ANR	1651112	Identifier	copy		1650900	0					
ANR	1651113	ReturnStatement	return host ;	1105:1:27016:27027	1650900	8	True				
ANR	1651114	Identifier	host		1650900	0					
ANR	1651115	ReturnType	char *		1650900	1					
ANR	1651116	Identifier	getHostFromAddr		1650900	2					
ANR	1651117	ParameterList	const char * addr		1650900	3					
ANR	1651118	Parameter	const char * addr	1055:17:25929:25944	1650900	0	True				
ANR	1651119	ParameterType	const char *		1650900	0					
ANR	1651120	Identifier	addr		1650900	1					
ANR	1651121	CFGEntryNode	ENTRY		1650900		True				
ANR	1651122	CFGExitNode	EXIT		1650900		True				
ANR	1651123	Symbol	* tmp		1650900						
ANR	1651124	Symbol	NULL		1650900						
ANR	1651125	Symbol	tmp		1650900						
ANR	1651126	Symbol	strrchr		1650900						
ANR	1651127	Symbol	* copy		1650900						
ANR	1651128	Symbol	host		1650900						
ANR	1651129	Symbol	strchr		1650900						
ANR	1651130	Symbol	copy		1650900						
ANR	1651131	Symbol	* addr		1650900						
ANR	1651132	Symbol	strdup		1650900						
ANR	1651133	Symbol	addr		1650900						
ANR	1651134	Function	getAddrFromClaimId	1109:0:27033:27314							
ANR	1651135	FunctionDef	getAddrFromClaimId (const char * id)		1651134	0					
ANR	1651136	CompoundStatement		1111:0:27076:27314	1651134	0					
ANR	1651137	IdentifierDeclStatement	char * tmp ;	1112:1:27079:27088	1651134	0	True				
ANR	1651138	IdentifierDecl	* tmp		1651134	0					
ANR	1651139	IdentifierDeclType	char *		1651134	0					
ANR	1651140	Identifier	tmp		1651134	1					
ANR	1651141	IdentifierDeclStatement	char * addr ;	1113:1:27091:27101	1651134	1	True				
ANR	1651142	IdentifierDecl	* addr		1651134	0					
ANR	1651143	IdentifierDeclType	char *		1651134	0					
ANR	1651144	Identifier	addr		1651134	1					
ANR	1651145	IdentifierDeclStatement	char * copy = strdup ( id ) ;	1114:1:27104:27129	1651134	2	True				
ANR	1651146	IdentifierDecl	* copy = strdup ( id )		1651134	0					
ANR	1651147	IdentifierDeclType	char *		1651134	0					
ANR	1651148	Identifier	copy		1651134	1					
ANR	1651149	AssignmentExpression	* copy = strdup ( id )		1651134	2		=			
ANR	1651150	Identifier	copy		1651134	0					
ANR	1651151	CallExpression	strdup ( id )		1651134	1					
ANR	1651152	Callee	strdup		1651134	0					
ANR	1651153	Identifier	strdup		1651134	0					
ANR	1651154	ArgumentList	id		1651134	1					
ANR	1651155	Argument	id		1651134	0					
ANR	1651156	Identifier	id		1651134	0					
ANR	1651157	ExpressionStatement	"tmp = strchr ( copy , '#' )"	1115:1:27132:27157	1651134	3	True				
ANR	1651158	AssignmentExpression	"tmp = strchr ( copy , '#' )"		1651134	0		=			
ANR	1651159	Identifier	tmp		1651134	0					
ANR	1651160	CallExpression	"strchr ( copy , '#' )"		1651134	1					
ANR	1651161	Callee	strchr		1651134	0					
ANR	1651162	Identifier	strchr		1651134	0					
ANR	1651163	ArgumentList	copy		1651134	1					
ANR	1651164	Argument	copy		1651134	0					
ANR	1651165	Identifier	copy		1651134	0					
ANR	1651166	Argument	'#'		1651134	1					
ANR	1651167	PrimaryExpression	'#'		1651134	0					
ANR	1651168	IfStatement	if ( tmp )		1651134	4					
ANR	1651169	Condition	tmp	1116:5:27164:27166	1651134	0	True				
ANR	1651170	Identifier	tmp		1651134	0					
ANR	1651171	CompoundStatement		6:11:93:93	1651134	1					
ANR	1651172	ExpressionStatement	* tmp = '\\0'	1117:2:27174:27185	1651134	0	True				
ANR	1651173	AssignmentExpression	* tmp = '\\0'		1651134	0		=			
ANR	1651174	UnaryOperationExpression	* tmp		1651134	0					
ANR	1651175	UnaryOperator	*		1651134	0					
ANR	1651176	Identifier	tmp		1651134	1					
ANR	1651177	PrimaryExpression	'\\0'		1651134	1					
ANR	1651178	IfStatement	if ( is_valid_sinful ( copy ) )		1651134	1					
ANR	1651179	Condition	is_valid_sinful ( copy )	1118:6:27193:27213	1651134	0	True				
ANR	1651180	CallExpression	is_valid_sinful ( copy )		1651134	0					
ANR	1651181	Callee	is_valid_sinful		1651134	0					
ANR	1651182	Identifier	is_valid_sinful		1651134	0					
ANR	1651183	ArgumentList	copy		1651134	1					
ANR	1651184	Argument	copy		1651134	0					
ANR	1651185	Identifier	copy		1651134	0					
ANR	1651186	CompoundStatement		8:30:140:140	1651134	1					
ANR	1651187	ExpressionStatement	addr = strdup ( copy )	1119:3:27222:27243	1651134	0	True				
ANR	1651188	AssignmentExpression	addr = strdup ( copy )		1651134	0		=			
ANR	1651189	Identifier	addr		1651134	0					
ANR	1651190	CallExpression	strdup ( copy )		1651134	1					
ANR	1651191	Callee	strdup		1651134	0					
ANR	1651192	Identifier	strdup		1651134	0					
ANR	1651193	ArgumentList	copy		1651134	1					
ANR	1651194	Argument	copy		1651134	0					
ANR	1651195	Identifier	copy		1651134	0					
ANR	1651196	ExpressionStatement	free ( copy )	1120:3:27248:27260	1651134	1	True				
ANR	1651197	CallExpression	free ( copy )		1651134	0					
ANR	1651198	Callee	free		1651134	0					
ANR	1651199	Identifier	free		1651134	0					
ANR	1651200	ArgumentList	copy		1651134	1					
ANR	1651201	Argument	copy		1651134	0					
ANR	1651202	Identifier	copy		1651134	0					
ANR	1651203	ReturnStatement	return addr ;	1121:3:27265:27276	1651134	2	True				
ANR	1651204	Identifier	addr		1651134	0					
ANR	1651205	ExpressionStatement	free ( copy )	1124:1:27286:27298	1651134	5	True				
ANR	1651206	CallExpression	free ( copy )		1651134	0					
ANR	1651207	Callee	free		1651134	0					
ANR	1651208	Identifier	free		1651134	0					
ANR	1651209	ArgumentList	copy		1651134	1					
ANR	1651210	Argument	copy		1651134	0					
ANR	1651211	Identifier	copy		1651134	0					
ANR	1651212	ReturnStatement	return NULL ;	1125:1:27301:27312	1651134	6	True				
ANR	1651213	Identifier	NULL		1651134	0					
ANR	1651214	ReturnType	char *		1651134	1					
ANR	1651215	Identifier	getAddrFromClaimId		1651134	2					
ANR	1651216	ParameterList	const char * id		1651134	3					
ANR	1651217	Parameter	const char * id	1110:20:27059:27072	1651134	0	True				
ANR	1651218	ParameterType	const char *		1651134	0					
ANR	1651219	Identifier	id		1651134	1					
ANR	1651220	CFGEntryNode	ENTRY		1651134		True				
ANR	1651221	CFGExitNode	EXIT		1651134		True				
ANR	1651222	Symbol	* tmp		1651134						
ANR	1651223	Symbol	NULL		1651134						
ANR	1651224	Symbol	tmp		1651134						
ANR	1651225	Symbol	strchr		1651134						
ANR	1651226	Symbol	is_valid_sinful		1651134						
ANR	1651227	Symbol	id		1651134						
ANR	1651228	Symbol	copy		1651134						
ANR	1651229	Symbol	strdup		1651134						
ANR	1651230	Symbol	addr		1651134						
ANR	1651231	Function	getSockAddr	1129:0:27318:28018							
ANR	1651232	FunctionDef	getSockAddr (int sockfd)		1651231	0					
ANR	1651233	CompoundStatement		1131:0:27363:28018	1651231	0					
ANR	1651234	Statement	static	1133:4:27391:27396	1651231	0	True				
ANR	1651235	IdentifierDeclStatement	struct sockaddr_in sa_in ;	1133:11:27398:27422	1651231	1	True				
ANR	1651236	IdentifierDecl	sa_in		1651231	0					
ANR	1651237	IdentifierDeclType	struct sockaddr_in		1651231	0					
ANR	1651238	Identifier	sa_in		1651231	1					
ANR	1651239	IdentifierDeclStatement	SOCKET_LENGTH_TYPE namelen = sizeof ( sa_in ) ;	1134:4:27428:27470	1651231	2	True				
ANR	1651240	IdentifierDecl	namelen = sizeof ( sa_in )		1651231	0					
ANR	1651241	IdentifierDeclType	SOCKET_LENGTH_TYPE		1651231	0					
ANR	1651242	Identifier	namelen		1651231	1					
ANR	1651243	AssignmentExpression	namelen = sizeof ( sa_in )		1651231	2		=			
ANR	1651244	Identifier	namelen		1651231	0					
ANR	1651245	SizeofExpression	sizeof ( sa_in )		1651231	1					
ANR	1651246	Sizeof	sizeof		1651231	0					
ANR	1651247	SizeofOperand	sa_in		1651231	1					
ANR	1651248	IfStatement	"if ( getsockname ( sockfd , ( struct sockaddr * ) & sa_in , ( socklen_t * ) & namelen ) < 0 )"		1651231	3					
ANR	1651249	Condition	"getsockname ( sockfd , ( struct sockaddr * ) & sa_in , ( socklen_t * ) & namelen ) < 0"	1135:8:27480:27551	1651231	0	True				
ANR	1651250	RelationalExpression	"getsockname ( sockfd , ( struct sockaddr * ) & sa_in , ( socklen_t * ) & namelen ) < 0"		1651231	0		<			
ANR	1651251	CallExpression	"getsockname ( sockfd , ( struct sockaddr * ) & sa_in , ( socklen_t * ) & namelen )"		1651231	0					
ANR	1651252	Callee	getsockname		1651231	0					
ANR	1651253	Identifier	getsockname		1651231	0					
ANR	1651254	ArgumentList	sockfd		1651231	1					
ANR	1651255	Argument	sockfd		1651231	0					
ANR	1651256	Identifier	sockfd		1651231	0					
ANR	1651257	Argument	( struct sockaddr * ) & sa_in		1651231	1					
ANR	1651258	CastExpression	( struct sockaddr * ) & sa_in		1651231	0					
ANR	1651259	CastTarget	struct sockaddr *		1651231	0					
ANR	1651260	UnaryOperationExpression	& sa_in		1651231	1					
ANR	1651261	UnaryOperator	&		1651231	0					
ANR	1651262	Identifier	sa_in		1651231	1					
ANR	1651263	Argument	( socklen_t * ) & namelen		1651231	2					
ANR	1651264	CastExpression	( socklen_t * ) & namelen		1651231	0					
ANR	1651265	CastTarget	socklen_t *		1651231	0					
ANR	1651266	UnaryOperationExpression	& namelen		1651231	1					
ANR	1651267	UnaryOperator	&		1651231	0					
ANR	1651268	Identifier	namelen		1651231	1					
ANR	1651269	PrimaryExpression	0		1651231	1					
ANR	1651270	CompoundStatement		5:82:190:190	1651231	1					
ANR	1651271	ExpressionStatement	"dprintf ( D_ALWAYS , ""failed getsockname(%d): %s\\n"" , sockfd , strerror ( errno ) )"	1136:8:27564:27638	1651231	0	True				
ANR	1651272	CallExpression	"dprintf ( D_ALWAYS , ""failed getsockname(%d): %s\\n"" , sockfd , strerror ( errno ) )"		1651231	0					
ANR	1651273	Callee	dprintf		1651231	0					
ANR	1651274	Identifier	dprintf		1651231	0					
ANR	1651275	ArgumentList	D_ALWAYS		1651231	1					
ANR	1651276	Argument	D_ALWAYS		1651231	0					
ANR	1651277	Identifier	D_ALWAYS		1651231	0					
ANR	1651278	Argument	"""failed getsockname(%d): %s\\n"""		1651231	1					
ANR	1651279	PrimaryExpression	"""failed getsockname(%d): %s\\n"""		1651231	0					
ANR	1651280	Argument	sockfd		1651231	2					
ANR	1651281	Identifier	sockfd		1651231	0					
ANR	1651282	Argument	strerror ( errno )		1651231	3					
ANR	1651283	CallExpression	strerror ( errno )		1651231	0					
ANR	1651284	Callee	strerror		1651231	0					
ANR	1651285	Identifier	strerror		1651231	0					
ANR	1651286	ArgumentList	errno		1651231	1					
ANR	1651287	Argument	errno		1651231	0					
ANR	1651288	Identifier	errno		1651231	0					
ANR	1651289	ReturnStatement	return NULL ;	1137:8:27648:27659	1651231	1	True				
ANR	1651290	Identifier	NULL		1651231	0					
ANR	1651291	IfStatement	if ( sa_in . sin_addr . s_addr == ntohl ( INADDR_ANY ) )		1651231	4					
ANR	1651292	Condition	sa_in . sin_addr . s_addr == ntohl ( INADDR_ANY )	1141:8:27794:27835	1651231	0	True				
ANR	1651293	EqualityExpression	sa_in . sin_addr . s_addr == ntohl ( INADDR_ANY )		1651231	0		==			
ANR	1651294	MemberAccess	sa_in . sin_addr . s_addr		1651231	0					
ANR	1651295	MemberAccess	sa_in . sin_addr		1651231	0					
ANR	1651296	Identifier	sa_in		1651231	0					
ANR	1651297	Identifier	sin_addr		1651231	1					
ANR	1651298	Identifier	s_addr		1651231	1					
ANR	1651299	CallExpression	ntohl ( INADDR_ANY )		1651231	1					
ANR	1651300	Callee	ntohl		1651231	0					
ANR	1651301	Identifier	ntohl		1651231	0					
ANR	1651302	ArgumentList	INADDR_ANY		1651231	1					
ANR	1651303	Argument	INADDR_ANY		1651231	0					
ANR	1651304	Identifier	INADDR_ANY		1651231	0					
ANR	1651305	CompoundStatement		12:5:481:524	1651231	1					
ANR	1651306	IdentifierDeclStatement	condor_sockaddr myaddr = get_local_ipaddr ( ) ;	1142:5:27845:27888	1651231	0	True				
ANR	1651307	IdentifierDecl	myaddr = get_local_ipaddr ( )		1651231	0					
ANR	1651308	IdentifierDeclType	condor_sockaddr		1651231	0					
ANR	1651309	Identifier	myaddr		1651231	1					
ANR	1651310	AssignmentExpression	myaddr = get_local_ipaddr ( )		1651231	2		=			
ANR	1651311	Identifier	myaddr		1651231	0					
ANR	1651312	CallExpression	get_local_ipaddr ( )		1651231	1					
ANR	1651313	Callee	get_local_ipaddr		1651231	0					
ANR	1651314	Identifier	get_local_ipaddr		1651231	0					
ANR	1651315	ArgumentList			1651231	1					
ANR	1651316	ExpressionStatement	sa_in . sin_addr = myaddr . to_sin ( ) . sin_addr	1143:5:27895:27936	1651231	1	True				
ANR	1651317	AssignmentExpression	sa_in . sin_addr = myaddr . to_sin ( ) . sin_addr		1651231	0		=			
ANR	1651318	MemberAccess	sa_in . sin_addr		1651231	0					
ANR	1651319	Identifier	sa_in		1651231	0					
ANR	1651320	Identifier	sin_addr		1651231	1					
ANR	1651321	MemberAccess	myaddr . to_sin ( ) . sin_addr		1651231	1					
ANR	1651322	CallExpression	myaddr . to_sin ( )		1651231	0					
ANR	1651323	Callee	myaddr . to_sin		1651231	0					
ANR	1651324	MemberAccess	myaddr . to_sin		1651231	0					
ANR	1651325	Identifier	myaddr		1651231	0					
ANR	1651326	Identifier	to_sin		1651231	1					
ANR	1651327	ArgumentList			1651231	1					
ANR	1651328	Identifier	sin_addr		1651231	1					
ANR	1651329	ReturnStatement	return & sa_in ;	1146:4:28003:28016	1651231	5	True				
ANR	1651330	UnaryOperationExpression	& sa_in		1651231	0					
ANR	1651331	UnaryOperator	&		1651231	0					
ANR	1651332	Identifier	sa_in		1651231	1					
ANR	1651333	ReturnType	struct sockaddr_in *		1651231	1					
ANR	1651334	Identifier	getSockAddr		1651231	2					
ANR	1651335	ParameterList	int sockfd		1651231	3					
ANR	1651336	Parameter	int sockfd	1130:12:27351:27360	1651231	0	True				
ANR	1651337	ParameterType	int		1651231	0					
ANR	1651338	Identifier	sockfd		1651231	1					
ANR	1651339	CFGEntryNode	ENTRY		1651231		True				
ANR	1651340	CFGExitNode	EXIT		1651231		True				
ANR	1651341	Symbol	& namelen		1651231						
ANR	1651342	Symbol	errno		1651231						
ANR	1651343	Symbol	NULL		1651231						
ANR	1651344	Symbol	getsockname		1651231						
ANR	1651345	Symbol	sa_in . sin_addr		1651231						
ANR	1651346	Symbol	D_ALWAYS		1651231						
ANR	1651347	Symbol	namelen		1651231						
ANR	1651348	Symbol	ntohl		1651231						
ANR	1651349	Symbol	sockfd		1651231						
ANR	1651350	Symbol	myaddr		1651231						
ANR	1651351	Symbol	sa_in . sin_addr . s_addr		1651231						
ANR	1651352	Symbol	strerror		1651231						
ANR	1651353	Symbol	myaddr . to_sin		1651231						
ANR	1651354	Symbol	sa_in		1651231						
ANR	1651355	Symbol	& sa_in		1651231						
ANR	1651356	Symbol	get_local_ipaddr		1651231						
ANR	1651357	Symbol	myaddr . to_sin ( ) . sin_addr		1651231						
ANR	1651358	Symbol	INADDR_ANY		1651231						
ANR	1651359	Function	generate_sinful	1158:0:28166:28373							
ANR	1651360	FunctionDef	"generate_sinful (char * buf , int len , const char * ip , int port)"		1651359	0					
ANR	1651361	CompoundStatement		1158:66:28232:28373	1651359	0					
ANR	1651362	IfStatement	"if ( strchr ( ip , ':' ) )"		1651359	0					
ANR	1651363	Condition	"strchr ( ip , ':' )"	1159:5:28239:28253	1651359	0	True				
ANR	1651364	CallExpression	"strchr ( ip , ':' )"		1651359	0					
ANR	1651365	Callee	strchr		1651359	0					
ANR	1651366	Identifier	strchr		1651359	0					
ANR	1651367	ArgumentList	ip		1651359	1					
ANR	1651368	Argument	ip		1651359	0					
ANR	1651369	Identifier	ip		1651359	0					
ANR	1651370	Argument	':'		1651359	1					
ANR	1651371	PrimaryExpression	':'		1651359	0					
ANR	1651372	CompoundStatement		2:22:23:23	1651359	1					
ANR	1651373	ReturnStatement	"return snprintf ( buf , len , ""<[%s]:%d>"" , ip , port ) ;"	1160:2:28260:28308	1651359	0	True				
ANR	1651374	CallExpression	"snprintf ( buf , len , ""<[%s]:%d>"" , ip , port )"		1651359	0					
ANR	1651375	Callee	snprintf		1651359	0					
ANR	1651376	Identifier	snprintf		1651359	0					
ANR	1651377	ArgumentList	buf		1651359	1					
ANR	1651378	Argument	buf		1651359	0					
ANR	1651379	Identifier	buf		1651359	0					
ANR	1651380	Argument	len		1651359	1					
ANR	1651381	Identifier	len		1651359	0					
ANR	1651382	Argument	"""<[%s]:%d>"""		1651359	2					
ANR	1651383	PrimaryExpression	"""<[%s]:%d>"""		1651359	0					
ANR	1651384	Argument	ip		1651359	3					
ANR	1651385	Identifier	ip		1651359	0					
ANR	1651386	Argument	port		1651359	4					
ANR	1651387	Identifier	port		1651359	0					
ANR	1651388	ElseStatement	else		1651359	0					
ANR	1651389	CompoundStatement		4:8:85:85	1651359	0					
ANR	1651390	ReturnStatement	"return snprintf ( buf , len , ""<%s:%d>"" , ip , port ) ;"	1162:2:28322:28368	1651359	0	True				
ANR	1651391	CallExpression	"snprintf ( buf , len , ""<%s:%d>"" , ip , port )"		1651359	0					
ANR	1651392	Callee	snprintf		1651359	0					
ANR	1651393	Identifier	snprintf		1651359	0					
ANR	1651394	ArgumentList	buf		1651359	1					
ANR	1651395	Argument	buf		1651359	0					
ANR	1651396	Identifier	buf		1651359	0					
ANR	1651397	Argument	len		1651359	1					
ANR	1651398	Identifier	len		1651359	0					
ANR	1651399	Argument	"""<%s:%d>"""		1651359	2					
ANR	1651400	PrimaryExpression	"""<%s:%d>"""		1651359	0					
ANR	1651401	Argument	ip		1651359	3					
ANR	1651402	Identifier	ip		1651359	0					
ANR	1651403	Argument	port		1651359	4					
ANR	1651404	Identifier	port		1651359	0					
ANR	1651405	ReturnType	int		1651359	1					
ANR	1651406	Identifier	generate_sinful		1651359	2					
ANR	1651407	ParameterList	"char * buf , int len , const char * ip , int port"		1651359	3					
ANR	1651408	Parameter	char * buf	1158:20:28186:28194	1651359	0	True				
ANR	1651409	ParameterType	char *		1651359	0					
ANR	1651410	Identifier	buf		1651359	1					
ANR	1651411	Parameter	int len	1158:31:28197:28203	1651359	1	True				
ANR	1651412	ParameterType	int		1651359	0					
ANR	1651413	Identifier	len		1651359	1					
ANR	1651414	Parameter	const char * ip	1158:40:28206:28219	1651359	2	True				
ANR	1651415	ParameterType	const char *		1651359	0					
ANR	1651416	Identifier	ip		1651359	1					
ANR	1651417	Parameter	int port	1158:56:28222:28229	1651359	3	True				
ANR	1651418	ParameterType	int		1651359	0					
ANR	1651419	Identifier	port		1651359	1					
ANR	1651420	CFGEntryNode	ENTRY		1651359		True				
ANR	1651421	CFGExitNode	EXIT		1651359		True				
ANR	1651422	Symbol	buf		1651359						
ANR	1651423	Symbol	len		1651359						
ANR	1651424	Symbol	port		1651359						
ANR	1651425	Symbol	ip		1651359						
ANR	1651426	Symbol	strchr		1651359						
ANR	1651427	Symbol	snprintf		1651359						
ANR	1651428	Function	generate_sinful	1169:0:28404:28596							
ANR	1651429	FunctionDef	"generate_sinful (const char * ip , int port)"		1651428	0					
ANR	1651430	CompoundStatement		1169:51:28455:28596	1651428	0					
ANR	1651431	IdentifierDeclStatement	MyString buf ;	1170:1:28458:28470	1651428	0	True				
ANR	1651432	IdentifierDecl	buf		1651428	0					
ANR	1651433	IdentifierDeclType	MyString		1651428	0					
ANR	1651434	Identifier	buf		1651428	1					
ANR	1651435	IfStatement	"if ( strchr ( ip , ':' ) )"		1651428	1					
ANR	1651436	Condition	"strchr ( ip , ':' )"	1171:5:28477:28491	1651428	0	True				
ANR	1651437	CallExpression	"strchr ( ip , ':' )"		1651428	0					
ANR	1651438	Callee	strchr		1651428	0					
ANR	1651439	Identifier	strchr		1651428	0					
ANR	1651440	ArgumentList	ip		1651428	1					
ANR	1651441	Argument	ip		1651428	0					
ANR	1651442	Identifier	ip		1651428	0					
ANR	1651443	Argument	':'		1651428	1					
ANR	1651444	PrimaryExpression	':'		1651428	0					
ANR	1651445	CompoundStatement		3:22:38:38	1651428	1					
ANR	1651446	ExpressionStatement	"buf . sprintf ( ""<[%s]:%d>"" , ip , port )"	1172:2:28498:28532	1651428	0	True				
ANR	1651447	CallExpression	"buf . sprintf ( ""<[%s]:%d>"" , ip , port )"		1651428	0					
ANR	1651448	Callee	buf . sprintf		1651428	0					
ANR	1651449	MemberAccess	buf . sprintf		1651428	0					
ANR	1651450	Identifier	buf		1651428	0					
ANR	1651451	Identifier	sprintf		1651428	1					
ANR	1651452	ArgumentList	"""<[%s]:%d>"""		1651428	1					
ANR	1651453	Argument	"""<[%s]:%d>"""		1651428	0					
ANR	1651454	PrimaryExpression	"""<[%s]:%d>"""		1651428	0					
ANR	1651455	Argument	ip		1651428	1					
ANR	1651456	Identifier	ip		1651428	0					
ANR	1651457	Argument	port		1651428	2					
ANR	1651458	Identifier	port		1651428	0					
ANR	1651459	ElseStatement	else		1651428	0					
ANR	1651460	CompoundStatement		5:8:86:86	1651428	0					
ANR	1651461	ExpressionStatement	"buf . sprintf ( ""<%s:%d>"" , ip , port )"	1174:2:28546:28578	1651428	0	True				
ANR	1651462	CallExpression	"buf . sprintf ( ""<%s:%d>"" , ip , port )"		1651428	0					
ANR	1651463	Callee	buf . sprintf		1651428	0					
ANR	1651464	MemberAccess	buf . sprintf		1651428	0					
ANR	1651465	Identifier	buf		1651428	0					
ANR	1651466	Identifier	sprintf		1651428	1					
ANR	1651467	ArgumentList	"""<%s:%d>"""		1651428	1					
ANR	1651468	Argument	"""<%s:%d>"""		1651428	0					
ANR	1651469	PrimaryExpression	"""<%s:%d>"""		1651428	0					
ANR	1651470	Argument	ip		1651428	1					
ANR	1651471	Identifier	ip		1651428	0					
ANR	1651472	Argument	port		1651428	2					
ANR	1651473	Identifier	port		1651428	0					
ANR	1651474	ReturnStatement	return buf ;	1176:1:28584:28594	1651428	2	True				
ANR	1651475	Identifier	buf		1651428	0					
ANR	1651476	ReturnType	MyString		1651428	1					
ANR	1651477	Identifier	generate_sinful		1651428	2					
ANR	1651478	ParameterList	"const char * ip , int port"		1651428	3					
ANR	1651479	Parameter	const char * ip	1169:25:28429:28442	1651428	0	True				
ANR	1651480	ParameterType	const char *		1651428	0					
ANR	1651481	Identifier	ip		1651428	1					
ANR	1651482	Parameter	int port	1169:41:28445:28452	1651428	1	True				
ANR	1651483	ParameterType	int		1651428	0					
ANR	1651484	Identifier	port		1651428	1					
ANR	1651485	CFGEntryNode	ENTRY		1651428		True				
ANR	1651486	CFGExitNode	EXIT		1651428		True				
ANR	1651487	Symbol	buf		1651428						
ANR	1651488	Symbol	port		1651428						
ANR	1651489	Symbol	ip		1651428						
ANR	1651490	Symbol	strchr		1651428						
ANR	1651491	Function	sinful_to_ipstr	1180:0:28600:28768							
ANR	1651492	FunctionDef	"sinful_to_ipstr (const char * addr , MyString & ipout)"		1651491	0					
ANR	1651493	CompoundStatement		1181:0:28658:28768	1651491	0					
ANR	1651494	IdentifierDeclStatement	condor_sockaddr sa ;	1182:1:28661:28679	1651491	0	True				
ANR	1651495	IdentifierDecl	sa		1651491	0					
ANR	1651496	IdentifierDeclType	condor_sockaddr		1651491	0					
ANR	1651497	Identifier	sa		1651491	1					
ANR	1651498	IfStatement	if ( ! sa . from_sinful ( addr ) )		1651491	1					
ANR	1651499	Condition	! sa . from_sinful ( addr )	1183:4:28685:28705	1651491	0	True				
ANR	1651500	UnaryOperationExpression	! sa . from_sinful ( addr )		1651491	0					
ANR	1651501	UnaryOperator	!		1651491	0					
ANR	1651502	CallExpression	sa . from_sinful ( addr )		1651491	1					
ANR	1651503	Callee	sa . from_sinful		1651491	0					
ANR	1651504	MemberAccess	sa . from_sinful		1651491	0					
ANR	1651505	Identifier	sa		1651491	0					
ANR	1651506	Identifier	from_sinful		1651491	1					
ANR	1651507	ArgumentList	addr		1651491	1					
ANR	1651508	Argument	addr		1651491	0					
ANR	1651509	Identifier	addr		1651491	0					
ANR	1651510	CompoundStatement		3:27:49:49	1651491	1					
ANR	1651511	ReturnStatement	return false ;	1183:29:28710:28722	1651491	0	True				
ANR	1651512	Identifier	false		1651491	0					
ANR	1651513	ExpressionStatement	ipout = sa . to_ip_string ( )	1184:1:28727:28752	1651491	2	True				
ANR	1651514	AssignmentExpression	ipout = sa . to_ip_string ( )		1651491	0		=			
ANR	1651515	Identifier	ipout		1651491	0					
ANR	1651516	CallExpression	sa . to_ip_string ( )		1651491	1					
ANR	1651517	Callee	sa . to_ip_string		1651491	0					
ANR	1651518	MemberAccess	sa . to_ip_string		1651491	0					
ANR	1651519	Identifier	sa		1651491	0					
ANR	1651520	Identifier	to_ip_string		1651491	1					
ANR	1651521	ArgumentList			1651491	1					
ANR	1651522	ReturnStatement	return true ;	1185:1:28755:28766	1651491	3	True				
ANR	1651523	Identifier	true		1651491	0					
ANR	1651524	ReturnType	bool		1651491	1					
ANR	1651525	Identifier	sinful_to_ipstr		1651491	2					
ANR	1651526	ParameterList	"const char * addr , MyString & ipout"		1651491	3					
ANR	1651527	Parameter	const char * addr	1180:21:28621:28637	1651491	0	True				
ANR	1651528	ParameterType	const char *		1651491	0					
ANR	1651529	Identifier	addr		1651491	1					
ANR	1651530	Parameter	MyString & ipout	1180:40:28640:28655	1651491	1	True				
ANR	1651531	ParameterType	MyString &		1651491	0					
ANR	1651532	Identifier	ipout		1651491	1					
ANR	1651533	CFGEntryNode	ENTRY		1651491		True				
ANR	1651534	CFGExitNode	EXIT		1651491		True				
ANR	1651535	Symbol	false		1651491						
ANR	1651536	Symbol	true		1651491						
ANR	1651537	Symbol	sa . to_ip_string		1651491						
ANR	1651538	Symbol	ipout		1651491						
ANR	1651539	Symbol	addr		1651491						
ANR	1651540	Symbol	sa . from_sinful		1651491						
ANR	1651541	Symbol	sa		1651491						
