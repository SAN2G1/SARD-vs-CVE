command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	743585	File	data/converged/CVE-2015-8617_php-src/ext_fileinfo_libmagic_apprentice.c								
ANR	743586	ClassDef	magic_entry	98:0:2877:2961							
ANR	743587	DeclStmt									
ANR	743588	Decl							struct magic	struct magic *	mp
ANR	743589	DeclStmt									
ANR	743590	Decl							uint32_t	uint32_t	cont_count
ANR	743591	DeclStmt									
ANR	743592	Decl							uint32_t	uint32_t	max_count
ANR	743593	ClassDef	magic_entry_set	104:0:2965:3047							
ANR	743594	DeclStmt									
ANR	743595	Decl							struct magic_entry	struct magic_entry *	me
ANR	743596	DeclStmt									
ANR	743597	Decl							uint32_t	uint32_t	count
ANR	743598	DeclStmt									
ANR	743599	Decl							uint32_t	uint32_t	max
ANR	743600	ClassDef	magic_map	110:0:3051:3168							
ANR	743601	DeclStmt									
ANR	743602	Decl							void	void *	p
ANR	743603	DeclStmt									
ANR	743604	Decl							size_t	size_t	len
ANR	743605	DeclStmt									
ANR	743606	Decl							int	int	type
ANR	743607	DeclStmt									
ANR	743608	Decl							struct magic	struct magic * [ MAGIC_SETS ]	magic
ANR	743609	DeclStmt									
ANR	743610	Decl							uint32_t	uint32_t [ MAGIC_SETS ]	nmagic
ANR	743611	DeclStmt									
ANR	743612	Decl							int	int [ FILE_NAMES_SIZE ]	file_formats
ANR	743613	DeclStmt									
ANR	743614	Decl							const size_t	const size_t	file_nformats
ANR	743615	DeclStmt									
ANR	743616	Decl							const char	const char * [ FILE_NAMES_SIZE ]	file_names
ANR	743617	DeclStmt									
ANR	743618	Decl							const size_t	const size_t	file_nnames
ANR	743619	DeclStmt									
ANR	743620	Decl							int	"int ( struct magic_set * ms , struct magic * , const char * * , int )"	getvalue
ANR	743621	DeclStmt									
ANR	743622	Decl							int	int ( int )	hextoint
ANR	743623	DeclStmt									
ANR	743624	Decl							const char	"const char * ( struct magic_set * , struct magic * , const char * , int )"	getstr
ANR	743625	DeclStmt									
ANR	743626	Decl							int	"int ( struct magic_set * , struct magic_entry * , const char * , size_t , int )"	parse
ANR	743627	DeclStmt									
ANR	743628	Decl							void	void ( const char * * )	eatsize
ANR	743629	DeclStmt									
ANR	743630	Decl							int	"int ( struct magic_set * , const char * , int )"	apprentice_1
ANR	743631	DeclStmt									
ANR	743632	Decl							size_t	size_t ( const struct magic * )	apprentice_magic_strength
ANR	743633	DeclStmt									
ANR	743634	Decl							int	"int ( const void * , const void * )"	apprentice_sort
ANR	743635	DeclStmt									
ANR	743636	Decl							void	"void ( struct mlist * , int )"	apprentice_list
ANR	743637	DeclStmt									
ANR	743638	Decl							struct magic_map	"struct magic_map * ( struct magic_set * , const char * , int )"	apprentice_load
ANR	743639	DeclStmt									
ANR	743640	Decl							struct mlist	struct mlist * ( void )	mlist_alloc
ANR	743641	DeclStmt									
ANR	743642	Decl							void	void ( struct mlist * )	mlist_free
ANR	743643	DeclStmt									
ANR	743644	Decl							void	"void ( struct magic * , uint32_t )"	byteswap
ANR	743645	DeclStmt									
ANR	743646	Decl							void	void ( struct magic * )	bs1
ANR	743647	DeclStmt									
ANR	743648	Decl							uint16_t	uint16_t ( uint16_t )	swap2
ANR	743649	DeclStmt									
ANR	743650	Decl							uint32_t	uint32_t ( uint32_t )	swap4
ANR	743651	DeclStmt									
ANR	743652	Decl							uint64_t	uint64_t ( uint64_t )	swap8
ANR	743653	DeclStmt									
ANR	743654	Decl							char	"char * ( struct magic_set * , const char * , int )"	mkdbname
ANR	743655	DeclStmt									
ANR	743656	Decl							struct magic_map	"struct magic_map * ( struct magic_set * , struct magic * , size_t )"	apprentice_buf
ANR	743657	DeclStmt									
ANR	743658	Decl							struct magic_map	"struct magic_map * ( struct magic_set * , const char * )"	apprentice_map
ANR	743659	DeclStmt									
ANR	743660	Decl							int	"int ( struct magic_set * , struct magic_map * , const char * )"	check_buffer
ANR	743661	DeclStmt									
ANR	743662	Decl							void	void ( struct magic_map * )	apprentice_unmap
ANR	743663	DeclStmt									
ANR	743664	Decl							int	"int ( struct magic_set * , struct magic_map * , const char * )"	apprentice_compile
ANR	743665	DeclStmt									
ANR	743666	Decl							int	"int ( const char * , int )"	check_format_type
ANR	743667	DeclStmt									
ANR	743668	Decl							int	"int ( struct magic_set * , struct magic * )"	check_format
ANR	743669	DeclStmt									
ANR	743670	Decl							int	int ( char )	get_op
ANR	743671	DeclStmt									
ANR	743672	Decl							int	"int ( struct magic_set * , struct magic_entry * , const char * )"	parse_mime
ANR	743673	DeclStmt									
ANR	743674	Decl							int	"int ( struct magic_set * , struct magic_entry * , const char * )"	parse_strength
ANR	743675	DeclStmt									
ANR	743676	Decl							int	"int ( struct magic_set * , struct magic_entry * , const char * )"	parse_apple
ANR	743677	DeclStmt									
ANR	743678	Decl							size_t	size_t	magicsize
ANR	743679	DeclStmt									
ANR	743680	Decl							const char	const char [ ]	usg_hdr
ANR	743681	ClassDef	<unnamed>	163:8:5228:5538							
ANR	743682	DeclStmt									
ANR	743683	Decl							const char	const char *	name
ANR	743684	DeclStmt									
ANR	743685	Decl							size_t	size_t	len
ANR	743686	DeclStmt									
ANR	743687	Decl							"int ( * ) ( struct magic_set * , struct magic_entry * , const char * )"	"int ( * ) ( struct magic_set * , struct magic_entry * , const char * )"	fun
ANR	743688	DeclStmt									
ANR	743689	Decl								 [ ]	bang
ANR	743690	ClassDef	type_tbl_s	178:0:5568:5665							
ANR	743691	DeclStmt									
ANR	743692	Decl							const char	const char [ 16 ]	name
ANR	743693	DeclStmt									
ANR	743694	Decl							const size_t	const size_t	len
ANR	743695	DeclStmt									
ANR	743696	Decl							const int	const int	type
ANR	743697	DeclStmt									
ANR	743698	Decl							const int	const int	format
ANR	743699	DeclStmt									
ANR	743700	Decl							const struct type_tbl_s	const struct type_tbl_s [ ]	type_tbl
ANR	743701	DeclStmt									
ANR	743702	Decl							const struct type_tbl_s	const struct type_tbl_s [ ]	special_tbl
ANR	743703	Function	get_type	262:8:8870:9113							
ANR	743704	FunctionDef	"get_type (const struct type_tbl_s * tbl , const char * l , const char * * t)"		743703	0					
ANR	743705	CompoundStatement		264:0:8944:9113	743703	0					
ANR	743706	IdentifierDeclStatement	const struct type_tbl_s * p ;	265:1:8947:8973	743703	0	True				
ANR	743707	IdentifierDecl	* p		743703	0					
ANR	743708	IdentifierDeclType	const struct type_tbl_s *		743703	0					
ANR	743709	Identifier	p		743703	1					
ANR	743710	ForStatement	for ( p = tbl ; p -> len ; p ++ )		743703	1					
ANR	743711	ForInit	p = tbl ;	267:6:8982:8989	743703	0	True				
ANR	743712	AssignmentExpression	p = tbl		743703	0		=			
ANR	743713	Identifier	p		743703	0					
ANR	743714	Identifier	tbl		743703	1					
ANR	743715	Condition	p -> len	267:15:8991:8996	743703	1	True				
ANR	743716	PtrMemberAccess	p -> len		743703	0					
ANR	743717	Identifier	p		743703	0					
ANR	743718	Identifier	len		743703	1					
ANR	743719	PostIncDecOperationExpression	p ++	267:23:8999:9001	743703	2	True				
ANR	743720	Identifier	p		743703	0					
ANR	743721	IncDec	++		743703	1					
ANR	743722	CompoundStatement		4:28:59:59	743703	3					
ANR	743723	IfStatement	"if ( strncmp ( l , p -> name , p -> len ) == 0 )"		743703	0					
ANR	743724	Condition	"strncmp ( l , p -> name , p -> len ) == 0"	268:6:9012:9043	743703	0	True				
ANR	743725	EqualityExpression	"strncmp ( l , p -> name , p -> len ) == 0"		743703	0		==			
ANR	743726	CallExpression	"strncmp ( l , p -> name , p -> len )"		743703	0					
ANR	743727	Callee	strncmp		743703	0					
ANR	743728	Identifier	strncmp		743703	0					
ANR	743729	ArgumentList	l		743703	1					
ANR	743730	Argument	l		743703	0					
ANR	743731	Identifier	l		743703	0					
ANR	743732	Argument	p -> name		743703	1					
ANR	743733	PtrMemberAccess	p -> name		743703	0					
ANR	743734	Identifier	p		743703	0					
ANR	743735	Identifier	name		743703	1					
ANR	743736	Argument	p -> len		743703	2					
ANR	743737	PtrMemberAccess	p -> len		743703	0					
ANR	743738	Identifier	p		743703	0					
ANR	743739	Identifier	len		743703	1					
ANR	743740	PrimaryExpression	0		743703	1					
ANR	743741	CompoundStatement		5:40:101:101	743703	1					
ANR	743742	IfStatement	if ( t )		743703	0					
ANR	743743	Condition	t	269:7:9055:9055	743703	0	True				
ANR	743744	Identifier	t		743703	0					
ANR	743745	ExpressionStatement	* t = l + p -> len	270:4:9062:9077	743703	1	True				
ANR	743746	AssignmentExpression	* t = l + p -> len		743703	0		=			
ANR	743747	UnaryOperationExpression	* t		743703	0					
ANR	743748	UnaryOperator	*		743703	0					
ANR	743749	Identifier	t		743703	1					
ANR	743750	AdditiveExpression	l + p -> len		743703	1		+			
ANR	743751	Identifier	l		743703	0					
ANR	743752	PtrMemberAccess	p -> len		743703	1					
ANR	743753	Identifier	p		743703	0					
ANR	743754	Identifier	len		743703	1					
ANR	743755	BreakStatement	break ;	271:3:9082:9087	743703	1	True				
ANR	743756	ReturnStatement	return p -> type ;	274:1:9097:9111	743703	2	True				
ANR	743757	PtrMemberAccess	p -> type		743703	0					
ANR	743758	Identifier	p		743703	0					
ANR	743759	Identifier	type		743703	1					
ANR	743760	ReturnType	int		743703	1					
ANR	743761	Identifier	get_type		743703	2					
ANR	743762	ParameterList	"const struct type_tbl_s * tbl , const char * l , const char * * t"		743703	3					
ANR	743763	Parameter	const struct type_tbl_s * tbl	263:9:8883:8910	743703	0	True				
ANR	743764	ParameterType	const struct type_tbl_s *		743703	0					
ANR	743765	Identifier	tbl		743703	1					
ANR	743766	Parameter	const char * l	263:39:8913:8925	743703	1	True				
ANR	743767	ParameterType	const char *		743703	0					
ANR	743768	Identifier	l		743703	1					
ANR	743769	Parameter	const char * * t	263:54:8928:8941	743703	2	True				
ANR	743770	ParameterType	const char * *		743703	0					
ANR	743771	Identifier	t		743703	1					
ANR	743772	CFGEntryNode	ENTRY		743703		True				
ANR	743773	CFGExitNode	EXIT		743703		True				
ANR	743774	Symbol	p		743703						
ANR	743775	Symbol	strncmp		743703						
ANR	743776	Symbol	t		743703						
ANR	743777	Symbol	p -> len		743703						
ANR	743778	Symbol	* p		743703						
ANR	743779	Symbol	p -> name		743703						
ANR	743780	Symbol	l		743703						
ANR	743781	Symbol	p -> type		743703						
ANR	743782	Symbol	* t		743703						
ANR	743783	Symbol	tbl		743703						
ANR	743784	Function	get_standard_integer_type	277:8:9124:10991							
ANR	743785	FunctionDef	"get_standard_integer_type (const char * l , const char * * t)"		743784	0					
ANR	743786	CompoundStatement		279:0:9185:10991	743784	0					
ANR	743787	IdentifierDeclStatement	int type ;	280:1:9188:9196	743784	0	True				
ANR	743788	IdentifierDecl	type		743784	0					
ANR	743789	IdentifierDeclType	int		743784	0					
ANR	743790	Identifier	type		743784	1					
ANR	743791	IfStatement	if ( isalpha ( ( unsigned char ) l [ 1 ] ) )		743784	1					
ANR	743792	Condition	isalpha ( ( unsigned char ) l [ 1 ] )	282:5:9204:9231	743784	0	True				
ANR	743793	CallExpression	isalpha ( ( unsigned char ) l [ 1 ] )		743784	0					
ANR	743794	Callee	isalpha		743784	0					
ANR	743795	Identifier	isalpha		743784	0					
ANR	743796	ArgumentList	( unsigned char ) l [ 1 ]		743784	1					
ANR	743797	Argument	( unsigned char ) l [ 1 ]		743784	0					
ANR	743798	CastExpression	( unsigned char ) l [ 1 ]		743784	0					
ANR	743799	CastTarget	unsigned char		743784	0					
ANR	743800	ArrayIndexing	l [ 1 ]		743784	1					
ANR	743801	Identifier	l		743784	0					
ANR	743802	PrimaryExpression	1		743784	1					
ANR	743803	CompoundStatement		4:35:48:48	743784	1					
ANR	743804	SwitchStatement	switch ( l [ 1 ] )		743784	0					
ANR	743805	Condition	l [ 1 ]	283:10:9246:9249	743784	0	True				
ANR	743806	ArrayIndexing	l [ 1 ]		743784	0					
ANR	743807	Identifier	l		743784	0					
ANR	743808	PrimaryExpression	1		743784	1					
ANR	743809	CompoundStatement		5:16:66:66	743784	1					
ANR	743810	Label	case 'C' :	284:2:9256:9264	743784	0	True				
ANR	743811	ExpressionStatement	type = FILE_BYTE	286:3:9292:9308	743784	1	True				
ANR	743812	AssignmentExpression	type = FILE_BYTE		743784	0		=			
ANR	743813	Identifier	type		743784	0					
ANR	743814	Identifier	FILE_BYTE		743784	1					
ANR	743815	BreakStatement	break ;	287:3:9313:9318	743784	2	True				
ANR	743816	Label	case 'S' :	288:2:9322:9330	743784	3	True				
ANR	743817	ExpressionStatement	type = FILE_SHORT	290:3:9358:9375	743784	4	True				
ANR	743818	AssignmentExpression	type = FILE_SHORT		743784	0		=			
ANR	743819	Identifier	type		743784	0					
ANR	743820	Identifier	FILE_SHORT		743784	1					
ANR	743821	BreakStatement	break ;	291:3:9380:9385	743784	5	True				
ANR	743822	Label	case 'I' :	292:2:9389:9397	743784	6	True				
ANR	743823	Label	case 'L' :	293:2:9401:9409	743784	7	True				
ANR	743824	ExpressionStatement	type = FILE_LONG	306:3:9850:9866	743784	8	True				
ANR	743825	AssignmentExpression	type = FILE_LONG		743784	0		=			
ANR	743826	Identifier	type		743784	0					
ANR	743827	Identifier	FILE_LONG		743784	1					
ANR	743828	BreakStatement	break ;	307:3:9871:9876	743784	9	True				
ANR	743829	Label	case 'Q' :	308:2:9880:9888	743784	10	True				
ANR	743830	ExpressionStatement	type = FILE_QUAD	310:3:9916:9932	743784	11	True				
ANR	743831	AssignmentExpression	type = FILE_QUAD		743784	0		=			
ANR	743832	Identifier	type		743784	0					
ANR	743833	Identifier	FILE_QUAD		743784	1					
ANR	743834	BreakStatement	break ;	311:3:9937:9942	743784	12	True				
ANR	743835	Label	default :	312:2:9946:9953	743784	13	True				
ANR	743836	Identifier	default		743784	0					
ANR	743837	ReturnStatement	return FILE_INVALID ;	314:3:10006:10025	743784	14	True				
ANR	743838	Identifier	FILE_INVALID		743784	0					
ANR	743839	ExpressionStatement	l += 2	316:2:10033:10039	743784	1	True				
ANR	743840	AssignmentExpression	l += 2		743784	0		+=			
ANR	743841	Identifier	l		743784	0					
ANR	743842	PrimaryExpression	2		743784	1					
ANR	743843	ElseStatement	else		743784	0					
ANR	743844	IfStatement	if ( isdigit ( ( unsigned char ) l [ 1 ] ) )		743784	0					
ANR	743845	Condition	isdigit ( ( unsigned char ) l [ 1 ] )	317:12:10053:10080	743784	0	True				
ANR	743846	CallExpression	isdigit ( ( unsigned char ) l [ 1 ] )		743784	0					
ANR	743847	Callee	isdigit		743784	0					
ANR	743848	Identifier	isdigit		743784	0					
ANR	743849	ArgumentList	( unsigned char ) l [ 1 ]		743784	1					
ANR	743850	Argument	( unsigned char ) l [ 1 ]		743784	0					
ANR	743851	CastExpression	( unsigned char ) l [ 1 ]		743784	0					
ANR	743852	CastTarget	unsigned char		743784	0					
ANR	743853	ArrayIndexing	l [ 1 ]		743784	1					
ANR	743854	Identifier	l		743784	0					
ANR	743855	PrimaryExpression	1		743784	1					
ANR	743856	CompoundStatement		39:42:897:897	743784	1					
ANR	743857	IfStatement	if ( isdigit ( ( unsigned char ) l [ 2 ] ) )		743784	0					
ANR	743858	Condition	isdigit ( ( unsigned char ) l [ 2 ] )	328:6:10511:10538	743784	0	True				
ANR	743859	CallExpression	isdigit ( ( unsigned char ) l [ 2 ] )		743784	0					
ANR	743860	Callee	isdigit		743784	0					
ANR	743861	Identifier	isdigit		743784	0					
ANR	743862	ArgumentList	( unsigned char ) l [ 2 ]		743784	1					
ANR	743863	Argument	( unsigned char ) l [ 2 ]		743784	0					
ANR	743864	CastExpression	( unsigned char ) l [ 2 ]		743784	0					
ANR	743865	CastTarget	unsigned char		743784	0					
ANR	743866	ArrayIndexing	l [ 2 ]		743784	1					
ANR	743867	Identifier	l		743784	0					
ANR	743868	PrimaryExpression	2		743784	1					
ANR	743869	CompoundStatement		50:36:1355:1355	743784	1					
ANR	743870	ReturnStatement	return FILE_INVALID ;	330:3:10575:10594	743784	0	True				
ANR	743871	Identifier	FILE_INVALID		743784	0					
ANR	743872	SwitchStatement	switch ( l [ 1 ] )		743784	1					
ANR	743873	Condition	l [ 1 ]	332:10:10610:10613	743784	0	True				
ANR	743874	ArrayIndexing	l [ 1 ]		743784	0					
ANR	743875	Identifier	l		743784	0					
ANR	743876	PrimaryExpression	1		743784	1					
ANR	743877	CompoundStatement		54:16:1430:1430	743784	1					
ANR	743878	Label	case '1' :	333:2:10620:10628	743784	0	True				
ANR	743879	ExpressionStatement	type = FILE_BYTE	334:3:10633:10649	743784	1	True				
ANR	743880	AssignmentExpression	type = FILE_BYTE		743784	0		=			
ANR	743881	Identifier	type		743784	0					
ANR	743882	Identifier	FILE_BYTE		743784	1					
ANR	743883	BreakStatement	break ;	335:3:10654:10659	743784	2	True				
ANR	743884	Label	case '2' :	336:2:10663:10671	743784	3	True				
ANR	743885	ExpressionStatement	type = FILE_SHORT	337:3:10676:10693	743784	4	True				
ANR	743886	AssignmentExpression	type = FILE_SHORT		743784	0		=			
ANR	743887	Identifier	type		743784	0					
ANR	743888	Identifier	FILE_SHORT		743784	1					
ANR	743889	BreakStatement	break ;	338:3:10698:10703	743784	5	True				
ANR	743890	Label	case '4' :	339:2:10707:10715	743784	6	True				
ANR	743891	ExpressionStatement	type = FILE_LONG	340:3:10720:10736	743784	7	True				
ANR	743892	AssignmentExpression	type = FILE_LONG		743784	0		=			
ANR	743893	Identifier	type		743784	0					
ANR	743894	Identifier	FILE_LONG		743784	1					
ANR	743895	BreakStatement	break ;	341:3:10741:10746	743784	8	True				
ANR	743896	Label	case '8' :	342:2:10750:10758	743784	9	True				
ANR	743897	ExpressionStatement	type = FILE_QUAD	343:3:10763:10779	743784	10	True				
ANR	743898	AssignmentExpression	type = FILE_QUAD		743784	0		=			
ANR	743899	Identifier	type		743784	0					
ANR	743900	Identifier	FILE_QUAD		743784	1					
ANR	743901	BreakStatement	break ;	344:3:10784:10789	743784	11	True				
ANR	743902	Label	default :	345:2:10793:10800	743784	12	True				
ANR	743903	Identifier	default		743784	0					
ANR	743904	ReturnStatement	return FILE_INVALID ;	347:3:10846:10865	743784	13	True				
ANR	743905	Identifier	FILE_INVALID		743784	0					
ANR	743906	ExpressionStatement	l += 2	349:2:10873:10879	743784	2	True				
ANR	743907	AssignmentExpression	l += 2		743784	0		+=			
ANR	743908	Identifier	l		743784	0					
ANR	743909	PrimaryExpression	2		743784	1					
ANR	743910	ElseStatement	else		743784	0					
ANR	743911	CompoundStatement		72:8:1703:1703	743784	0					
ANR	743912	ExpressionStatement	type = FILE_LONG	354:2:10931:10947	743784	0	True				
ANR	743913	AssignmentExpression	type = FILE_LONG		743784	0		=			
ANR	743914	Identifier	type		743784	0					
ANR	743915	Identifier	FILE_LONG		743784	1					
ANR	743916	ExpressionStatement	++ l	355:2:10951:10954	743784	1	True				
ANR	743917	UnaryExpression	++ l		743784	0					
ANR	743918	IncDec	++		743784	0					
ANR	743919	Identifier	l		743784	1					
ANR	743920	IfStatement	if ( t )		743784	2					
ANR	743921	Condition	t	357:5:10964:10964	743784	0	True				
ANR	743922	Identifier	t		743784	0					
ANR	743923	ExpressionStatement	* t = l	358:2:10969:10975	743784	1	True				
ANR	743924	AssignmentExpression	* t = l		743784	0		=			
ANR	743925	UnaryOperationExpression	* t		743784	0					
ANR	743926	UnaryOperator	*		743784	0					
ANR	743927	Identifier	t		743784	1					
ANR	743928	Identifier	l		743784	1					
ANR	743929	ReturnStatement	return type ;	359:1:10978:10989	743784	3	True				
ANR	743930	Identifier	type		743784	0					
ANR	743931	ReturnType	int		743784	1					
ANR	743932	Identifier	get_standard_integer_type		743784	2					
ANR	743933	ParameterList	"const char * l , const char * * t"		743784	3					
ANR	743934	Parameter	const char * l	278:26:9154:9166	743784	0	True				
ANR	743935	ParameterType	const char *		743784	0					
ANR	743936	Identifier	l		743784	1					
ANR	743937	Parameter	const char * * t	278:41:9169:9182	743784	1	True				
ANR	743938	ParameterType	const char * *		743784	0					
ANR	743939	Identifier	t		743784	1					
ANR	743940	CFGEntryNode	ENTRY		743784		True				
ANR	743941	CFGExitNode	EXIT		743784		True				
ANR	743942	Symbol	FILE_INVALID		743784						
ANR	743943	Symbol	isalpha		743784						
ANR	743944	Symbol	t		743784						
ANR	743945	Symbol	FILE_BYTE		743784						
ANR	743946	Symbol	* l		743784						
ANR	743947	Symbol	FILE_SHORT		743784						
ANR	743948	Symbol	l		743784						
ANR	743949	Symbol	type		743784						
ANR	743950	Symbol	FILE_LONG		743784						
ANR	743951	Symbol	isdigit		743784						
ANR	743952	Symbol	FILE_QUAD		743784						
ANR	743953	Symbol	* t		743784						
ANR	743954	Function	init_file_tables	362:8:11002:11302							
ANR	743955	FunctionDef	init_file_tables ()		743954	0					
ANR	743956	CompoundStatement		364:0:11030:11302	743954	0					
ANR	743957	Statement	static	365:1:11033:11038	743954	0	True				
ANR	743958	IdentifierDeclStatement	int done = 0 ;	365:8:11040:11052	743954	1	True				
ANR	743959	IdentifierDecl	done = 0		743954	0					
ANR	743960	IdentifierDeclType	int		743954	0					
ANR	743961	Identifier	done		743954	1					
ANR	743962	AssignmentExpression	done = 0		743954	2		=			
ANR	743963	Identifier	done		743954	0					
ANR	743964	PrimaryExpression	0		743954	1					
ANR	743965	IdentifierDeclStatement	const struct type_tbl_s * p ;	366:1:11055:11081	743954	2	True				
ANR	743966	IdentifierDecl	* p		743954	0					
ANR	743967	IdentifierDeclType	const struct type_tbl_s *		743954	0					
ANR	743968	Identifier	p		743954	1					
ANR	743969	IfStatement	if ( done )		743954	3					
ANR	743970	Condition	done	368:5:11089:11092	743954	0	True				
ANR	743971	Identifier	done		743954	0					
ANR	743972	ReturnStatement	return ;	369:2:11097:11103	743954	1	True				
ANR	743973	ExpressionStatement	done ++	370:1:11106:11112	743954	4	True				
ANR	743974	PostIncDecOperationExpression	done ++		743954	0					
ANR	743975	Identifier	done		743954	0					
ANR	743976	IncDec	++		743954	1					
ANR	743977	ForStatement	for ( p = type_tbl ; p -> len ; p ++ )		743954	5					
ANR	743978	ForInit	p = type_tbl ;	372:6:11121:11133	743954	0	True				
ANR	743979	AssignmentExpression	p = type_tbl		743954	0		=			
ANR	743980	Identifier	p		743954	0					
ANR	743981	Identifier	type_tbl		743954	1					
ANR	743982	Condition	p -> len	372:20:11135:11140	743954	1	True				
ANR	743983	PtrMemberAccess	p -> len		743954	0					
ANR	743984	Identifier	p		743954	0					
ANR	743985	Identifier	len		743954	1					
ANR	743986	PostIncDecOperationExpression	p ++	372:28:11143:11145	743954	2	True				
ANR	743987	Identifier	p		743954	0					
ANR	743988	IncDec	++		743954	1					
ANR	743989	CompoundStatement		9:33:117:117	743954	3					
ANR	743990	ExpressionStatement	assert ( p -> type < FILE_NAMES_SIZE )	373:2:11152:11185	743954	0	True				
ANR	743991	CallExpression	assert ( p -> type < FILE_NAMES_SIZE )		743954	0					
ANR	743992	Callee	assert		743954	0					
ANR	743993	Identifier	assert		743954	0					
ANR	743994	ArgumentList	p -> type < FILE_NAMES_SIZE		743954	1					
ANR	743995	Argument	p -> type < FILE_NAMES_SIZE		743954	0					
ANR	743996	RelationalExpression	p -> type < FILE_NAMES_SIZE		743954	0		<			
ANR	743997	PtrMemberAccess	p -> type		743954	0					
ANR	743998	Identifier	p		743954	0					
ANR	743999	Identifier	type		743954	1					
ANR	744000	Identifier	FILE_NAMES_SIZE		743954	1					
ANR	744001	ExpressionStatement	file_names [ p -> type ] = p -> name	374:2:11189:11218	743954	1	True				
ANR	744002	AssignmentExpression	file_names [ p -> type ] = p -> name		743954	0		=			
ANR	744003	ArrayIndexing	file_names [ p -> type ]		743954	0					
ANR	744004	Identifier	file_names		743954	0					
ANR	744005	PtrMemberAccess	p -> type		743954	1					
ANR	744006	Identifier	p		743954	0					
ANR	744007	Identifier	type		743954	1					
ANR	744008	PtrMemberAccess	p -> name		743954	1					
ANR	744009	Identifier	p		743954	0					
ANR	744010	Identifier	name		743954	1					
ANR	744011	ExpressionStatement	file_formats [ p -> type ] = p -> format	375:2:11222:11255	743954	2	True				
ANR	744012	AssignmentExpression	file_formats [ p -> type ] = p -> format		743954	0		=			
ANR	744013	ArrayIndexing	file_formats [ p -> type ]		743954	0					
ANR	744014	Identifier	file_formats		743954	0					
ANR	744015	PtrMemberAccess	p -> type		743954	1					
ANR	744016	Identifier	p		743954	0					
ANR	744017	Identifier	type		743954	1					
ANR	744018	PtrMemberAccess	p -> format		743954	1					
ANR	744019	Identifier	p		743954	0					
ANR	744020	Identifier	format		743954	1					
ANR	744021	ExpressionStatement	assert ( p - type_tbl == FILE_NAMES_SIZE )	377:1:11261:11300	743954	6	True				
ANR	744022	CallExpression	assert ( p - type_tbl == FILE_NAMES_SIZE )		743954	0					
ANR	744023	Callee	assert		743954	0					
ANR	744024	Identifier	assert		743954	0					
ANR	744025	ArgumentList	p - type_tbl == FILE_NAMES_SIZE		743954	1					
ANR	744026	Argument	p - type_tbl == FILE_NAMES_SIZE		743954	0					
ANR	744027	EqualityExpression	p - type_tbl == FILE_NAMES_SIZE		743954	0		==			
ANR	744028	AdditiveExpression	p - type_tbl		743954	0		-			
ANR	744029	Identifier	p		743954	0					
ANR	744030	Identifier	type_tbl		743954	1					
ANR	744031	Identifier	FILE_NAMES_SIZE		743954	1					
ANR	744032	ReturnType	void		743954	1					
ANR	744033	Identifier	init_file_tables		743954	2					
ANR	744034	ParameterList			743954	3					
ANR	744035	CFGEntryNode	ENTRY		743954		True				
ANR	744036	CFGExitNode	EXIT		743954		True				
ANR	744037	Symbol	p -> format		743954						
ANR	744038	Symbol	file_names		743954						
ANR	744039	Symbol	file_formats		743954						
ANR	744040	Symbol	* file_names		743954						
ANR	744041	Symbol	FILE_NAMES_SIZE		743954						
ANR	744042	Symbol	* p -> type		743954						
ANR	744043	Symbol	type_tbl		743954						
ANR	744044	Symbol	* file_formats		743954						
ANR	744045	Symbol	done		743954						
ANR	744046	Symbol	p -> type		743954						
ANR	744047	Symbol	p		743954						
ANR	744048	Symbol	p -> len		743954						
ANR	744049	Symbol	* p		743954						
ANR	744050	Symbol	p -> name		743954						
ANR	744051	Symbol	* * p		743954						
ANR	744052	Function	add_mlist	380:8:11313:11687							
ANR	744053	FunctionDef	"add_mlist (struct mlist * mlp , struct magic_map * map , size_t idx)"		744052	0					
ANR	744054	CompoundStatement		382:0:11381:11687	744052	0					
ANR	744055	IdentifierDeclStatement	struct mlist * ml ;	383:1:11384:11400	744052	0	True				
ANR	744056	IdentifierDecl	* ml		744052	0					
ANR	744057	IdentifierDeclType	struct mlist *		744052	0					
ANR	744058	Identifier	ml		744052	1					
ANR	744059	ExpressionStatement	mlp -> map = idx == 0 ? map : NULL	385:1:11404:11436	744052	1	True				
ANR	744060	AssignmentExpression	mlp -> map = idx == 0 ? map : NULL		744052	0		=			
ANR	744061	PtrMemberAccess	mlp -> map		744052	0					
ANR	744062	Identifier	mlp		744052	0					
ANR	744063	Identifier	map		744052	1					
ANR	744064	ConditionalExpression	idx == 0 ? map : NULL		744052	1					
ANR	744065	Condition	idx == 0		744052	0					
ANR	744066	EqualityExpression	idx == 0		744052	0		==			
ANR	744067	Identifier	idx		744052	0					
ANR	744068	PrimaryExpression	0		744052	1					
ANR	744069	Identifier	map		744052	1					
ANR	744070	Identifier	NULL		744052	2					
ANR	744071	Statement	if	386:1:11439:11440	744052	2	True				
ANR	744072	Statement	(	386:4:11442:11442	744052	3	True				
ANR	744073	Statement	(	386:5:11443:11443	744052	4	True				
ANR	744074	Statement	ml	386:6:11444:11445	744052	5	True				
ANR	744075	Statement	=	386:9:11447:11447	744052	6	True				
ANR	744076	Statement	CAST	386:11:11449:11452	744052	7	True				
ANR	744077	Statement	(	386:15:11453:11453	744052	8	True				
ANR	744078	Statement	struct	386:16:11454:11459	744052	9	True				
ANR	744079	Statement	mlist	386:23:11461:11465	744052	10	True				
ANR	744080	Statement	*	386:29:11467:11467	744052	11	True				
ANR	744081	Statement	","	386:30:11468:11468	744052	12	True				
ANR	744082	Statement	emalloc	386:32:11470:11476	744052	13	True				
ANR	744083	Statement	(	386:39:11477:11477	744052	14	True				
ANR	744084	Statement	sizeof	386:40:11478:11483	744052	15	True				
ANR	744085	Statement	(	386:46:11484:11484	744052	16	True				
ANR	744086	Statement	*	386:47:11485:11485	744052	17	True				
ANR	744087	Statement	ml	386:48:11486:11487	744052	18	True				
ANR	744088	Statement	)	386:50:11488:11488	744052	19	True				
ANR	744089	Statement	)	386:51:11489:11489	744052	20	True				
ANR	744090	Statement	)	386:52:11490:11490	744052	21	True				
ANR	744091	Statement	)	386:53:11491:11491	744052	22	True				
ANR	744092	Statement	==	386:55:11493:11494	744052	23	True				
ANR	744093	Statement	NULL	386:58:11496:11499	744052	24	True				
ANR	744094	Statement	)	386:62:11500:11500	744052	25	True				
ANR	744095	ReturnStatement	return - 1 ;	387:2:11504:11513	744052	26	True				
ANR	744096	UnaryOperationExpression	- 1		744052	0					
ANR	744097	UnaryOperator	-		744052	0					
ANR	744098	PrimaryExpression	1		744052	1					
ANR	744099	ExpressionStatement	ml -> map = NULL	389:1:11517:11531	744052	27	True				
ANR	744100	AssignmentExpression	ml -> map = NULL		744052	0		=			
ANR	744101	PtrMemberAccess	ml -> map		744052	0					
ANR	744102	Identifier	ml		744052	0					
ANR	744103	Identifier	map		744052	1					
ANR	744104	Identifier	NULL		744052	1					
ANR	744105	ExpressionStatement	ml -> magic = map -> magic [ idx ]	390:1:11534:11561	744052	28	True				
ANR	744106	AssignmentExpression	ml -> magic = map -> magic [ idx ]		744052	0		=			
ANR	744107	PtrMemberAccess	ml -> magic		744052	0					
ANR	744108	Identifier	ml		744052	0					
ANR	744109	Identifier	magic		744052	1					
ANR	744110	ArrayIndexing	map -> magic [ idx ]		744052	1					
ANR	744111	PtrMemberAccess	map -> magic		744052	0					
ANR	744112	Identifier	map		744052	0					
ANR	744113	Identifier	magic		744052	1					
ANR	744114	Identifier	idx		744052	1					
ANR	744115	ExpressionStatement	ml -> nmagic = map -> nmagic [ idx ]	391:1:11564:11593	744052	29	True				
ANR	744116	AssignmentExpression	ml -> nmagic = map -> nmagic [ idx ]		744052	0		=			
ANR	744117	PtrMemberAccess	ml -> nmagic		744052	0					
ANR	744118	Identifier	ml		744052	0					
ANR	744119	Identifier	nmagic		744052	1					
ANR	744120	ArrayIndexing	map -> nmagic [ idx ]		744052	1					
ANR	744121	PtrMemberAccess	map -> nmagic		744052	0					
ANR	744122	Identifier	map		744052	0					
ANR	744123	Identifier	nmagic		744052	1					
ANR	744124	Identifier	idx		744052	1					
ANR	744125	ExpressionStatement	mlp -> prev -> next = ml	393:1:11597:11617	744052	30	True				
ANR	744126	AssignmentExpression	mlp -> prev -> next = ml		744052	0		=			
ANR	744127	PtrMemberAccess	mlp -> prev -> next		744052	0					
ANR	744128	PtrMemberAccess	mlp -> prev		744052	0					
ANR	744129	Identifier	mlp		744052	0					
ANR	744130	Identifier	prev		744052	1					
ANR	744131	Identifier	next		744052	1					
ANR	744132	Identifier	ml		744052	1					
ANR	744133	ExpressionStatement	ml -> prev = mlp -> prev	394:1:11620:11640	744052	31	True				
ANR	744134	AssignmentExpression	ml -> prev = mlp -> prev		744052	0		=			
ANR	744135	PtrMemberAccess	ml -> prev		744052	0					
ANR	744136	Identifier	ml		744052	0					
ANR	744137	Identifier	prev		744052	1					
ANR	744138	PtrMemberAccess	mlp -> prev		744052	1					
ANR	744139	Identifier	mlp		744052	0					
ANR	744140	Identifier	prev		744052	1					
ANR	744141	ExpressionStatement	ml -> next = mlp	395:1:11643:11657	744052	32	True				
ANR	744142	AssignmentExpression	ml -> next = mlp		744052	0		=			
ANR	744143	PtrMemberAccess	ml -> next		744052	0					
ANR	744144	Identifier	ml		744052	0					
ANR	744145	Identifier	next		744052	1					
ANR	744146	Identifier	mlp		744052	1					
ANR	744147	ExpressionStatement	mlp -> prev = ml	396:1:11660:11674	744052	33	True				
ANR	744148	AssignmentExpression	mlp -> prev = ml		744052	0		=			
ANR	744149	PtrMemberAccess	mlp -> prev		744052	0					
ANR	744150	Identifier	mlp		744052	0					
ANR	744151	Identifier	prev		744052	1					
ANR	744152	Identifier	ml		744052	1					
ANR	744153	ReturnStatement	return 0 ;	397:1:11677:11685	744052	34	True				
ANR	744154	PrimaryExpression	0		744052	0					
ANR	744155	ReturnType	int		744052	1					
ANR	744156	Identifier	add_mlist		744052	2					
ANR	744157	ParameterList	"struct mlist * mlp , struct magic_map * map , size_t idx"		744052	3					
ANR	744158	Parameter	struct mlist * mlp	381:10:11327:11343	744052	0	True				
ANR	744159	ParameterType	struct mlist *		744052	0					
ANR	744160	Identifier	mlp		744052	1					
ANR	744161	Parameter	struct magic_map * map	381:29:11346:11366	744052	1	True				
ANR	744162	ParameterType	struct magic_map *		744052	0					
ANR	744163	Identifier	map		744052	1					
ANR	744164	Parameter	size_t idx	381:52:11369:11378	744052	2	True				
ANR	744165	ParameterType	size_t		744052	0					
ANR	744166	Identifier	idx		744052	1					
ANR	744167	CFGEntryNode	ENTRY		744052		True				
ANR	744168	CFGExitNode	EXIT		744052		True				
ANR	744169	Symbol	NULL		744052						
ANR	744170	Symbol	ml -> map		744052						
ANR	744171	Symbol	* * mlp		744052						
ANR	744172	Symbol	ml -> next		744052						
ANR	744173	Symbol	* ml		744052						
ANR	744174	Symbol	* map -> magic		744052						
ANR	744175	Symbol	* map		744052						
ANR	744176	Symbol	ml -> prev		744052						
ANR	744177	Symbol	ml -> nmagic		744052						
ANR	744178	Symbol	mlp -> map		744052						
ANR	744179	Symbol	mlp		744052						
ANR	744180	Symbol	* * map		744052						
ANR	744181	Symbol	ml -> magic		744052						
ANR	744182	Symbol	mlp -> prev -> next		744052						
ANR	744183	Symbol	* idx		744052						
ANR	744184	Symbol	map -> magic		744052						
ANR	744185	Symbol	map -> nmagic		744052						
ANR	744186	Symbol	* mlp		744052						
ANR	744187	Symbol	idx		744052						
ANR	744188	Symbol	* map -> nmagic		744052						
ANR	744189	Symbol	map		744052						
ANR	744190	Symbol	mlp -> prev		744052						
ANR	744191	Symbol	ml		744052						
ANR	744192	Symbol	* mlp -> prev		744052						
ANR	744193	Function	apprentice_1	403:8:11738:12872							
ANR	744194	FunctionDef	"apprentice_1 (struct magic_set * ms , const char * fn , int action)"		744193	0					
ANR	744195	CompoundStatement		405:0:11805:12872	744193	0					
ANR	744196	IdentifierDeclStatement	struct magic_map * map ;	406:1:11808:11829	744193	0	True				
ANR	744197	IdentifierDecl	* map		744193	0					
ANR	744198	IdentifierDeclType	struct magic_map *		744193	0					
ANR	744199	Identifier	map		744193	1					
ANR	744200	IdentifierDeclStatement	struct mlist * ml ;	407:1:11832:11848	744193	1	True				
ANR	744201	IdentifierDecl	* ml		744193	0					
ANR	744202	IdentifierDeclType	struct mlist *		744193	0					
ANR	744203	Identifier	ml		744193	1					
ANR	744204	IdentifierDeclStatement	size_t i ;	408:1:11851:11859	744193	2	True				
ANR	744205	IdentifierDecl	i		744193	0					
ANR	744206	IdentifierDeclType	size_t		744193	0					
ANR	744207	Identifier	i		744193	1					
ANR	744208	IfStatement	if ( magicsize != FILE_MAGICSIZE )		744193	3					
ANR	744209	Condition	magicsize != FILE_MAGICSIZE	410:5:11867:11893	744193	0	True				
ANR	744210	EqualityExpression	magicsize != FILE_MAGICSIZE		744193	0		!=			
ANR	744211	Identifier	magicsize		744193	0					
ANR	744212	Identifier	FILE_MAGICSIZE		744193	1					
ANR	744213	CompoundStatement		6:34:90:90	744193	1					
ANR	744214	ExpressionStatement	"file_error ( ms , 0 , ""magic element size %lu != %lu"" , ( unsigned long ) sizeof ( * map -> magic [ 0 ] ) , ( unsigned long ) FILE_MAGICSIZE )"	411:2:11900:12032	744193	0	True				
ANR	744215	CallExpression	"file_error ( ms , 0 , ""magic element size %lu != %lu"" , ( unsigned long ) sizeof ( * map -> magic [ 0 ] ) , ( unsigned long ) FILE_MAGICSIZE )"		744193	0					
ANR	744216	Callee	file_error		744193	0					
ANR	744217	Identifier	file_error		744193	0					
ANR	744218	ArgumentList	ms		744193	1					
ANR	744219	Argument	ms		744193	0					
ANR	744220	Identifier	ms		744193	0					
ANR	744221	Argument	0		744193	1					
ANR	744222	PrimaryExpression	0		744193	0					
ANR	744223	Argument	"""magic element size %lu != %lu"""		744193	2					
ANR	744224	PrimaryExpression	"""magic element size %lu != %lu"""		744193	0					
ANR	744225	Argument	( unsigned long ) sizeof ( * map -> magic [ 0 ] )		744193	3					
ANR	744226	CastExpression	( unsigned long ) sizeof ( * map -> magic [ 0 ] )		744193	0					
ANR	744227	CastTarget	unsigned long		744193	0					
ANR	744228	SizeofExpression	sizeof ( * map -> magic [ 0 ] )		744193	1					
ANR	744229	Sizeof	sizeof		744193	0					
ANR	744230	UnaryOperationExpression	* map -> magic [ 0 ]		744193	1					
ANR	744231	UnaryOperator	*		744193	0					
ANR	744232	ArrayIndexing	map -> magic [ 0 ]		744193	1					
ANR	744233	PtrMemberAccess	map -> magic		744193	0					
ANR	744234	Identifier	map		744193	0					
ANR	744235	Identifier	magic		744193	1					
ANR	744236	PrimaryExpression	0		744193	1					
ANR	744237	Argument	( unsigned long ) FILE_MAGICSIZE		744193	4					
ANR	744238	CastExpression	( unsigned long ) FILE_MAGICSIZE		744193	0					
ANR	744239	CastTarget	unsigned long		744193	0					
ANR	744240	Identifier	FILE_MAGICSIZE		744193	1					
ANR	744241	ReturnStatement	return - 1 ;	414:2:12036:12045	744193	1	True				
ANR	744242	UnaryOperationExpression	- 1		744193	0					
ANR	744243	UnaryOperator	-		744193	0					
ANR	744244	PrimaryExpression	1		744193	1					
ANR	744245	IfStatement	if ( action == FILE_COMPILE )		744193	4					
ANR	744246	Condition	action == FILE_COMPILE	417:5:12056:12077	744193	0	True				
ANR	744247	EqualityExpression	action == FILE_COMPILE		744193	0		==			
ANR	744248	Identifier	action		744193	0					
ANR	744249	Identifier	FILE_COMPILE		744193	1					
ANR	744250	CompoundStatement		13:29:274:274	744193	1					
ANR	744251	ExpressionStatement	"map = apprentice_load ( ms , fn , action )"	418:2:12084:12121	744193	0	True				
ANR	744252	AssignmentExpression	"map = apprentice_load ( ms , fn , action )"		744193	0		=			
ANR	744253	Identifier	map		744193	0					
ANR	744254	CallExpression	"apprentice_load ( ms , fn , action )"		744193	1					
ANR	744255	Callee	apprentice_load		744193	0					
ANR	744256	Identifier	apprentice_load		744193	0					
ANR	744257	ArgumentList	ms		744193	1					
ANR	744258	Argument	ms		744193	0					
ANR	744259	Identifier	ms		744193	0					
ANR	744260	Argument	fn		744193	1					
ANR	744261	Identifier	fn		744193	0					
ANR	744262	Argument	action		744193	2					
ANR	744263	Identifier	action		744193	0					
ANR	744264	IfStatement	if ( map == NULL )		744193	1					
ANR	744265	Condition	map == NULL	419:6:12129:12139	744193	0	True				
ANR	744266	EqualityExpression	map == NULL		744193	0		==			
ANR	744267	Identifier	map		744193	0					
ANR	744268	Identifier	NULL		744193	1					
ANR	744269	ReturnStatement	return - 1 ;	420:3:12145:12154	744193	1	True				
ANR	744270	UnaryOperationExpression	- 1		744193	0					
ANR	744271	UnaryOperator	-		744193	0					
ANR	744272	PrimaryExpression	1		744193	1					
ANR	744273	ReturnStatement	"return apprentice_compile ( ms , map , fn ) ;"	421:2:12158:12196	744193	2	True				
ANR	744274	CallExpression	"apprentice_compile ( ms , map , fn )"		744193	0					
ANR	744275	Callee	apprentice_compile		744193	0					
ANR	744276	Identifier	apprentice_compile		744193	0					
ANR	744277	ArgumentList	ms		744193	1					
ANR	744278	Argument	ms		744193	0					
ANR	744279	Identifier	ms		744193	0					
ANR	744280	Argument	map		744193	1					
ANR	744281	Identifier	map		744193	0					
ANR	744282	Argument	fn		744193	2					
ANR	744283	Identifier	fn		744193	0					
ANR	744284	ExpressionStatement	"map = apprentice_map ( ms , fn )"	424:1:12203:12231	744193	5	True				
ANR	744285	AssignmentExpression	"map = apprentice_map ( ms , fn )"		744193	0		=			
ANR	744286	Identifier	map		744193	0					
ANR	744287	CallExpression	"apprentice_map ( ms , fn )"		744193	1					
ANR	744288	Callee	apprentice_map		744193	0					
ANR	744289	Identifier	apprentice_map		744193	0					
ANR	744290	ArgumentList	ms		744193	1					
ANR	744291	Argument	ms		744193	0					
ANR	744292	Identifier	ms		744193	0					
ANR	744293	Argument	fn		744193	1					
ANR	744294	Identifier	fn		744193	0					
ANR	744295	IfStatement	if ( map == NULL )		744193	6					
ANR	744296	Condition	map == NULL	425:5:12238:12248	744193	0	True				
ANR	744297	EqualityExpression	map == NULL		744193	0		==			
ANR	744298	Identifier	map		744193	0					
ANR	744299	Identifier	NULL		744193	1					
ANR	744300	CompoundStatement		21:18:445:445	744193	1					
ANR	744301	IfStatement	if ( fn )		744193	0					
ANR	744302	Condition	fn	426:6:12259:12260	744193	0	True				
ANR	744303	Identifier	fn		744193	0					
ANR	744304	CompoundStatement		22:10:457:457	744193	1					
ANR	744305	IfStatement	if ( ms -> flags & MAGIC_CHECK )		744193	0					
ANR	744306	Condition	ms -> flags & MAGIC_CHECK	427:7:12272:12294	744193	0	True				
ANR	744307	BitAndExpression	ms -> flags & MAGIC_CHECK		744193	0		&			
ANR	744308	PtrMemberAccess	ms -> flags		744193	0					
ANR	744309	Identifier	ms		744193	0					
ANR	744310	Identifier	flags		744193	1					
ANR	744311	Identifier	MAGIC_CHECK		744193	1					
ANR	744312	ExpressionStatement	"file_magwarn ( ms , ""using regular magic file `%s'"" , fn )"	428:4:12301:12354	744193	1	True				
ANR	744313	CallExpression	"file_magwarn ( ms , ""using regular magic file `%s'"" , fn )"		744193	0					
ANR	744314	Callee	file_magwarn		744193	0					
ANR	744315	Identifier	file_magwarn		744193	0					
ANR	744316	ArgumentList	ms		744193	1					
ANR	744317	Argument	ms		744193	0					
ANR	744318	Identifier	ms		744193	0					
ANR	744319	Argument	"""using regular magic file `%s'"""		744193	1					
ANR	744320	PrimaryExpression	"""using regular magic file `%s'"""		744193	0					
ANR	744321	Argument	fn		744193	2					
ANR	744322	Identifier	fn		744193	0					
ANR	744323	ExpressionStatement	"map = apprentice_load ( ms , fn , action )"	429:3:12359:12396	744193	1	True				
ANR	744324	AssignmentExpression	"map = apprentice_load ( ms , fn , action )"		744193	0		=			
ANR	744325	Identifier	map		744193	0					
ANR	744326	CallExpression	"apprentice_load ( ms , fn , action )"		744193	1					
ANR	744327	Callee	apprentice_load		744193	0					
ANR	744328	Identifier	apprentice_load		744193	0					
ANR	744329	ArgumentList	ms		744193	1					
ANR	744330	Argument	ms		744193	0					
ANR	744331	Identifier	ms		744193	0					
ANR	744332	Argument	fn		744193	1					
ANR	744333	Identifier	fn		744193	0					
ANR	744334	Argument	action		744193	2					
ANR	744335	Identifier	action		744193	0					
ANR	744336	IfStatement	if ( map == NULL )		744193	1					
ANR	744337	Condition	map == NULL	431:6:12408:12418	744193	0	True				
ANR	744338	EqualityExpression	map == NULL		744193	0		==			
ANR	744339	Identifier	map		744193	0					
ANR	744340	Identifier	NULL		744193	1					
ANR	744341	ReturnStatement	return - 1 ;	432:3:12424:12433	744193	1	True				
ANR	744342	UnaryOperationExpression	- 1		744193	0					
ANR	744343	UnaryOperator	-		744193	0					
ANR	744344	PrimaryExpression	1		744193	1					
ANR	744345	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		744193	7					
ANR	744346	ForInit	i = 0 ;	435:6:12445:12450	744193	0	True				
ANR	744347	AssignmentExpression	i = 0		744193	0		=			
ANR	744348	Identifier	i		744193	0					
ANR	744349	PrimaryExpression	0		744193	1					
ANR	744350	Condition	i < MAGIC_SETS	435:13:12452:12465	744193	1	True				
ANR	744351	RelationalExpression	i < MAGIC_SETS		744193	0		<			
ANR	744352	Identifier	i		744193	0					
ANR	744353	Identifier	MAGIC_SETS		744193	1					
ANR	744354	PostIncDecOperationExpression	i ++	435:29:12468:12470	744193	2	True				
ANR	744355	Identifier	i		744193	0					
ANR	744356	IncDec	++		744193	1					
ANR	744357	CompoundStatement		31:34:667:667	744193	3					
ANR	744358	IfStatement	"if ( add_mlist ( ms -> mlist [ i ] , map , i ) == - 1 )"		744193	0					
ANR	744359	Condition	"add_mlist ( ms -> mlist [ i ] , map , i ) == - 1"	436:6:12481:12517	744193	0	True				
ANR	744360	EqualityExpression	"add_mlist ( ms -> mlist [ i ] , map , i ) == - 1"		744193	0		==			
ANR	744361	CallExpression	"add_mlist ( ms -> mlist [ i ] , map , i )"		744193	0					
ANR	744362	Callee	add_mlist		744193	0					
ANR	744363	Identifier	add_mlist		744193	0					
ANR	744364	ArgumentList	ms -> mlist [ i ]		744193	1					
ANR	744365	Argument	ms -> mlist [ i ]		744193	0					
ANR	744366	ArrayIndexing	ms -> mlist [ i ]		744193	0					
ANR	744367	PtrMemberAccess	ms -> mlist		744193	0					
ANR	744368	Identifier	ms		744193	0					
ANR	744369	Identifier	mlist		744193	1					
ANR	744370	Identifier	i		744193	1					
ANR	744371	Argument	map		744193	1					
ANR	744372	Identifier	map		744193	0					
ANR	744373	Argument	i		744193	2					
ANR	744374	Identifier	i		744193	0					
ANR	744375	UnaryOperationExpression	- 1		744193	1					
ANR	744376	UnaryOperator	-		744193	0					
ANR	744377	PrimaryExpression	1		744193	1					
ANR	744378	CompoundStatement		32:45:714:714	744193	1					
ANR	744379	ExpressionStatement	"file_oomem ( ms , sizeof ( * ml ) )"	437:3:12525:12552	744193	0	True				
ANR	744380	CallExpression	"file_oomem ( ms , sizeof ( * ml ) )"		744193	0					
ANR	744381	Callee	file_oomem		744193	0					
ANR	744382	Identifier	file_oomem		744193	0					
ANR	744383	ArgumentList	ms		744193	1					
ANR	744384	Argument	ms		744193	0					
ANR	744385	Identifier	ms		744193	0					
ANR	744386	Argument	sizeof ( * ml )		744193	1					
ANR	744387	SizeofExpression	sizeof ( * ml )		744193	0					
ANR	744388	Sizeof	sizeof		744193	0					
ANR	744389	UnaryOperationExpression	* ml		744193	1					
ANR	744390	UnaryOperator	*		744193	0					
ANR	744391	Identifier	ml		744193	1					
ANR	744392	ExpressionStatement	apprentice_unmap ( map )	438:3:12557:12578	744193	1	True				
ANR	744393	CallExpression	apprentice_unmap ( map )		744193	0					
ANR	744394	Callee	apprentice_unmap		744193	0					
ANR	744395	Identifier	apprentice_unmap		744193	0					
ANR	744396	ArgumentList	map		744193	1					
ANR	744397	Argument	map		744193	0					
ANR	744398	Identifier	map		744193	0					
ANR	744399	ReturnStatement	return - 1 ;	439:3:12583:12592	744193	2	True				
ANR	744400	UnaryOperationExpression	- 1		744193	0					
ANR	744401	UnaryOperator	-		744193	0					
ANR	744402	PrimaryExpression	1		744193	1					
ANR	744403	IfStatement	if ( action == FILE_LIST )		744193	8					
ANR	744404	Condition	action == FILE_LIST	443:5:12607:12625	744193	0	True				
ANR	744405	EqualityExpression	action == FILE_LIST		744193	0		==			
ANR	744406	Identifier	action		744193	0					
ANR	744407	Identifier	FILE_LIST		744193	1					
ANR	744408	CompoundStatement		39:26:822:822	744193	1					
ANR	744409	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		744193	0					
ANR	744410	ForInit	i = 0 ;	444:7:12637:12642	744193	0	True				
ANR	744411	AssignmentExpression	i = 0		744193	0		=			
ANR	744412	Identifier	i		744193	0					
ANR	744413	PrimaryExpression	0		744193	1					
ANR	744414	Condition	i < MAGIC_SETS	444:14:12644:12657	744193	1	True				
ANR	744415	RelationalExpression	i < MAGIC_SETS		744193	0		<			
ANR	744416	Identifier	i		744193	0					
ANR	744417	Identifier	MAGIC_SETS		744193	1					
ANR	744418	PostIncDecOperationExpression	i ++	444:30:12660:12662	744193	2	True				
ANR	744419	Identifier	i		744193	0					
ANR	744420	IncDec	++		744193	1					
ANR	744421	CompoundStatement		40:35:859:859	744193	3					
ANR	744422	Statement	printf	445:3:12670:12675	744193	0	True				
ANR	744423	Statement	(	445:9:12676:12676	744193	1	True				
ANR	744424	Statement	"""Set %"""	445:10:12677:12683	744193	2	True				
ANR	744425	Statement	SIZE_T_FORMAT	445:18:12685:12697	744193	3	True				
ANR	744426	Statement	"""u:\\nBinary patterns:\\n"""	445:32:12699:12722	744193	4	True				
ANR	744427	Statement	","	445:56:12723:12723	744193	5	True				
ANR	744428	Statement	i	446:7:12732:12732	744193	6	True				
ANR	744429	Statement	)	446:8:12733:12733	744193	7	True				
ANR	744430	ExpressionStatement		446:9:12734:12734	744193	8	True				
ANR	744431	ExpressionStatement	"apprentice_list ( ms -> mlist [ i ] , BINTEST )"	447:3:12739:12777	744193	9	True				
ANR	744432	CallExpression	"apprentice_list ( ms -> mlist [ i ] , BINTEST )"		744193	0					
ANR	744433	Callee	apprentice_list		744193	0					
ANR	744434	Identifier	apprentice_list		744193	0					
ANR	744435	ArgumentList	ms -> mlist [ i ]		744193	1					
ANR	744436	Argument	ms -> mlist [ i ]		744193	0					
ANR	744437	ArrayIndexing	ms -> mlist [ i ]		744193	0					
ANR	744438	PtrMemberAccess	ms -> mlist		744193	0					
ANR	744439	Identifier	ms		744193	0					
ANR	744440	Identifier	mlist		744193	1					
ANR	744441	Identifier	i		744193	1					
ANR	744442	Argument	BINTEST		744193	1					
ANR	744443	Identifier	BINTEST		744193	0					
ANR	744444	ExpressionStatement	"printf ( ""Text patterns:\\n"" )"	448:3:12782:12808	744193	10	True				
ANR	744445	CallExpression	"printf ( ""Text patterns:\\n"" )"		744193	0					
ANR	744446	Callee	printf		744193	0					
ANR	744447	Identifier	printf		744193	0					
ANR	744448	ArgumentList	"""Text patterns:\\n"""		744193	1					
ANR	744449	Argument	"""Text patterns:\\n"""		744193	0					
ANR	744450	PrimaryExpression	"""Text patterns:\\n"""		744193	0					
ANR	744451	ExpressionStatement	"apprentice_list ( ms -> mlist [ i ] , TEXTTEST )"	449:3:12813:12852	744193	11	True				
ANR	744452	CallExpression	"apprentice_list ( ms -> mlist [ i ] , TEXTTEST )"		744193	0					
ANR	744453	Callee	apprentice_list		744193	0					
ANR	744454	Identifier	apprentice_list		744193	0					
ANR	744455	ArgumentList	ms -> mlist [ i ]		744193	1					
ANR	744456	Argument	ms -> mlist [ i ]		744193	0					
ANR	744457	ArrayIndexing	ms -> mlist [ i ]		744193	0					
ANR	744458	PtrMemberAccess	ms -> mlist		744193	0					
ANR	744459	Identifier	ms		744193	0					
ANR	744460	Identifier	mlist		744193	1					
ANR	744461	Identifier	i		744193	1					
ANR	744462	Argument	TEXTTEST		744193	1					
ANR	744463	Identifier	TEXTTEST		744193	0					
ANR	744464	ReturnStatement	return 0 ;	452:1:12862:12870	744193	9	True				
ANR	744465	PrimaryExpression	0		744193	0					
ANR	744466	ReturnType	int		744193	1					
ANR	744467	Identifier	apprentice_1		744193	2					
ANR	744468	ParameterList	"struct magic_set * ms , const char * fn , int action"		744193	3					
ANR	744469	Parameter	struct magic_set * ms	404:13:11755:11774	744193	0	True				
ANR	744470	ParameterType	struct magic_set *		744193	0					
ANR	744471	Identifier	ms		744193	1					
ANR	744472	Parameter	const char * fn	404:35:11777:11790	744193	1	True				
ANR	744473	ParameterType	const char *		744193	0					
ANR	744474	Identifier	fn		744193	1					
ANR	744475	Parameter	int action	404:51:11793:11802	744193	2	True				
ANR	744476	ParameterType	int		744193	0					
ANR	744477	Identifier	action		744193	1					
ANR	744478	CFGEntryNode	ENTRY		744193		True				
ANR	744479	CFGExitNode	EXIT		744193		True				
ANR	744480	Symbol	magicsize		744193						
ANR	744481	Symbol	MAGIC_SETS		744193						
ANR	744482	Symbol	* map		744193						
ANR	744483	Symbol	ms -> mlist		744193						
ANR	744484	Symbol	* ml		744193						
ANR	744485	Symbol	fn		744193						
ANR	744486	Symbol	* map -> magic [ 0 ]		744193						
ANR	744487	Symbol	add_mlist		744193						
ANR	744488	Symbol	* ms		744193						
ANR	744489	Symbol	* * ms		744193						
ANR	744490	Symbol	* * map -> magic		744193						
ANR	744491	Symbol	map -> magic		744193						
ANR	744492	Symbol	action		744193						
ANR	744493	Symbol	* * * map		744193						
ANR	744494	Symbol	FILE_COMPILE		744193						
ANR	744495	Symbol	map		744193						
ANR	744496	Symbol	TEXTTEST		744193						
ANR	744497	Symbol	ml		744193						
ANR	744498	Symbol	FILE_MAGICSIZE		744193						
ANR	744499	Symbol	NULL		744193						
ANR	744500	Symbol	FILE_LIST		744193						
ANR	744501	Symbol	apprentice_load		744193						
ANR	744502	Symbol	* ms -> mlist		744193						
ANR	744503	Symbol	ms		744193						
ANR	744504	Symbol	* map -> magic		744193						
ANR	744505	Symbol	BINTEST		744193						
ANR	744506	Symbol	i		744193						
ANR	744507	Symbol	* * map		744193						
ANR	744508	Symbol	apprentice_compile		744193						
ANR	744509	Symbol	* i		744193						
ANR	744510	Symbol	MAGIC_CHECK		744193						
ANR	744511	Symbol	ms -> flags		744193						
ANR	744512	Symbol	apprentice_map		744193						
ANR	744513	Function	file_ms_free	455:10:12885:13162							
ANR	744514	FunctionDef	file_ms_free (struct magic_set * ms)		744513	0					
ANR	744515	CompoundStatement		457:0:12925:13162	744513	0					
ANR	744516	IdentifierDeclStatement	size_t i ;	458:1:12928:12936	744513	0	True				
ANR	744517	IdentifierDecl	i		744513	0					
ANR	744518	IdentifierDeclType	size_t		744513	0					
ANR	744519	Identifier	i		744513	1					
ANR	744520	IfStatement	if ( ms == NULL )		744513	1					
ANR	744521	Condition	ms == NULL	459:5:12943:12952	744513	0	True				
ANR	744522	EqualityExpression	ms == NULL		744513	0		==			
ANR	744523	Identifier	ms		744513	0					
ANR	744524	Identifier	NULL		744513	1					
ANR	744525	ReturnStatement	return ;	460:2:12957:12963	744513	1	True				
ANR	744526	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		744513	2					
ANR	744527	ForInit	i = 0 ;	461:6:12971:12976	744513	0	True				
ANR	744528	AssignmentExpression	i = 0		744513	0		=			
ANR	744529	Identifier	i		744513	0					
ANR	744530	PrimaryExpression	0		744513	1					
ANR	744531	Condition	i < MAGIC_SETS	461:13:12978:12991	744513	1	True				
ANR	744532	RelationalExpression	i < MAGIC_SETS		744513	0		<			
ANR	744533	Identifier	i		744513	0					
ANR	744534	Identifier	MAGIC_SETS		744513	1					
ANR	744535	PostIncDecOperationExpression	i ++	461:29:12994:12996	744513	2	True				
ANR	744536	Identifier	i		744513	0					
ANR	744537	IncDec	++		744513	1					
ANR	744538	ExpressionStatement	mlist_free ( ms -> mlist [ i ] )	462:2:13001:13025	744513	3	True				
ANR	744539	CallExpression	mlist_free ( ms -> mlist [ i ] )		744513	0					
ANR	744540	Callee	mlist_free		744513	0					
ANR	744541	Identifier	mlist_free		744513	0					
ANR	744542	ArgumentList	ms -> mlist [ i ]		744513	1					
ANR	744543	Argument	ms -> mlist [ i ]		744513	0					
ANR	744544	ArrayIndexing	ms -> mlist [ i ]		744513	0					
ANR	744545	PtrMemberAccess	ms -> mlist		744513	0					
ANR	744546	Identifier	ms		744513	0					
ANR	744547	Identifier	mlist		744513	1					
ANR	744548	Identifier	i		744513	1					
ANR	744549	IfStatement	if ( ms -> o . pbuf )		744513	3					
ANR	744550	Condition	ms -> o . pbuf	463:5:13032:13041	744513	0	True				
ANR	744551	MemberAccess	ms -> o . pbuf		744513	0					
ANR	744552	PtrMemberAccess	ms -> o		744513	0					
ANR	744553	Identifier	ms		744513	0					
ANR	744554	Identifier	o		744513	1					
ANR	744555	Identifier	pbuf		744513	1					
ANR	744556	CompoundStatement		7:17:118:118	744513	1					
ANR	744557	ExpressionStatement	efree ( ms -> o . pbuf )	464:2:13048:13065	744513	0	True				
ANR	744558	CallExpression	efree ( ms -> o . pbuf )		744513	0					
ANR	744559	Callee	efree		744513	0					
ANR	744560	Identifier	efree		744513	0					
ANR	744561	ArgumentList	ms -> o . pbuf		744513	1					
ANR	744562	Argument	ms -> o . pbuf		744513	0					
ANR	744563	MemberAccess	ms -> o . pbuf		744513	0					
ANR	744564	PtrMemberAccess	ms -> o		744513	0					
ANR	744565	Identifier	ms		744513	0					
ANR	744566	Identifier	o		744513	1					
ANR	744567	Identifier	pbuf		744513	1					
ANR	744568	IfStatement	if ( ms -> o . buf )		744513	4					
ANR	744569	Condition	ms -> o . buf	466:5:13075:13083	744513	0	True				
ANR	744570	MemberAccess	ms -> o . buf		744513	0					
ANR	744571	PtrMemberAccess	ms -> o		744513	0					
ANR	744572	Identifier	ms		744513	0					
ANR	744573	Identifier	o		744513	1					
ANR	744574	Identifier	buf		744513	1					
ANR	744575	CompoundStatement		10:16:160:160	744513	1					
ANR	744576	ExpressionStatement	efree ( ms -> o . buf )	467:2:13090:13106	744513	0	True				
ANR	744577	CallExpression	efree ( ms -> o . buf )		744513	0					
ANR	744578	Callee	efree		744513	0					
ANR	744579	Identifier	efree		744513	0					
ANR	744580	ArgumentList	ms -> o . buf		744513	1					
ANR	744581	Argument	ms -> o . buf		744513	0					
ANR	744582	MemberAccess	ms -> o . buf		744513	0					
ANR	744583	PtrMemberAccess	ms -> o		744513	0					
ANR	744584	Identifier	ms		744513	0					
ANR	744585	Identifier	o		744513	1					
ANR	744586	Identifier	buf		744513	1					
ANR	744587	IfStatement	if ( ms -> c . li )		744513	5					
ANR	744588	Condition	ms -> c . li	469:5:13116:13123	744513	0	True				
ANR	744589	MemberAccess	ms -> c . li		744513	0					
ANR	744590	PtrMemberAccess	ms -> c		744513	0					
ANR	744591	Identifier	ms		744513	0					
ANR	744592	Identifier	c		744513	1					
ANR	744593	Identifier	li		744513	1					
ANR	744594	CompoundStatement		13:15:200:200	744513	1					
ANR	744595	ExpressionStatement	efree ( ms -> c . li )	470:2:13130:13145	744513	0	True				
ANR	744596	CallExpression	efree ( ms -> c . li )		744513	0					
ANR	744597	Callee	efree		744513	0					
ANR	744598	Identifier	efree		744513	0					
ANR	744599	ArgumentList	ms -> c . li		744513	1					
ANR	744600	Argument	ms -> c . li		744513	0					
ANR	744601	MemberAccess	ms -> c . li		744513	0					
ANR	744602	PtrMemberAccess	ms -> c		744513	0					
ANR	744603	Identifier	ms		744513	0					
ANR	744604	Identifier	c		744513	1					
ANR	744605	Identifier	li		744513	1					
ANR	744606	ExpressionStatement	efree ( ms )	472:1:13151:13160	744513	6	True				
ANR	744607	CallExpression	efree ( ms )		744513	0					
ANR	744608	Callee	efree		744513	0					
ANR	744609	Identifier	efree		744513	0					
ANR	744610	ArgumentList	ms		744513	1					
ANR	744611	Argument	ms		744513	0					
ANR	744612	Identifier	ms		744513	0					
ANR	744613	ReturnType	void		744513	1					
ANR	744614	Identifier	file_ms_free		744513	2					
ANR	744615	ParameterList	struct magic_set * ms		744513	3					
ANR	744616	Parameter	struct magic_set * ms	456:13:12903:12922	744513	0	True				
ANR	744617	ParameterType	struct magic_set *		744513	0					
ANR	744618	Identifier	ms		744513	1					
ANR	744619	CFGEntryNode	ENTRY		744513		True				
ANR	744620	CFGExitNode	EXIT		744513		True				
ANR	744621	Symbol	NULL		744513						
ANR	744622	Symbol	MAGIC_SETS		744513						
ANR	744623	Symbol	* ms -> mlist		744513						
ANR	744624	Symbol	ms		744513						
ANR	744625	Symbol	ms -> mlist		744513						
ANR	744626	Symbol	ms -> o		744513						
ANR	744627	Symbol	i		744513						
ANR	744628	Symbol	ms -> c . li		744513						
ANR	744629	Symbol	ms -> o . buf		744513						
ANR	744630	Symbol	* ms		744513						
ANR	744631	Symbol	* * ms		744513						
ANR	744632	Symbol	ms -> o . pbuf		744513						
ANR	744633	Symbol	ms -> c		744513						
ANR	744634	Symbol	* i		744513						
ANR	744635	Function	file_ms_alloc	475:10:13175:13973							
ANR	744636	FunctionDef	file_ms_alloc (int flags)		744635	0					
ANR	744637	CompoundStatement		477:0:13219:13973	744635	0					
ANR	744638	IdentifierDeclStatement	struct magic_set * ms ;	478:1:13222:13242	744635	0	True				
ANR	744639	IdentifierDecl	* ms		744635	0					
ANR	744640	IdentifierDeclType	struct magic_set *		744635	0					
ANR	744641	Identifier	ms		744635	1					
ANR	744642	IdentifierDeclStatement	"size_t i , len ;"	479:1:13245:13258	744635	1	True				
ANR	744643	IdentifierDecl	i		744635	0					
ANR	744644	IdentifierDeclType	size_t		744635	0					
ANR	744645	Identifier	i		744635	1					
ANR	744646	IdentifierDecl	len		744635	1					
ANR	744647	IdentifierDeclType	size_t		744635	0					
ANR	744648	Identifier	len		744635	1					
ANR	744649	Statement	if	481:1:13262:13263	744635	2	True				
ANR	744650	Statement	(	481:4:13265:13265	744635	3	True				
ANR	744651	Statement	(	481:5:13266:13266	744635	4	True				
ANR	744652	Statement	ms	481:6:13267:13268	744635	5	True				
ANR	744653	Statement	=	481:9:13270:13270	744635	6	True				
ANR	744654	Statement	CAST	481:11:13272:13275	744635	7	True				
ANR	744655	Statement	(	481:15:13276:13276	744635	8	True				
ANR	744656	Statement	struct	481:16:13277:13282	744635	9	True				
ANR	744657	Statement	magic_set	481:23:13284:13292	744635	10	True				
ANR	744658	Statement	*	481:33:13294:13294	744635	11	True				
ANR	744659	Statement	","	481:34:13295:13295	744635	12	True				
ANR	744660	Statement	ecalloc	481:36:13297:13303	744635	13	True				
ANR	744661	Statement	(	481:43:13304:13304	744635	14	True				
ANR	744662	Statement	(	481:44:13305:13305	744635	15	True				
ANR	744663	Statement	size_t	481:45:13306:13311	744635	16	True				
ANR	744664	Statement	)	481:51:13312:13312	744635	17	True				
ANR	744665	Statement	1	481:52:13313:13313	744635	18	True				
ANR	744666	Statement	","	481:53:13314:13314	744635	19	True				
ANR	744667	Statement	sizeof	482:5:13321:13326	744635	20	True				
ANR	744668	Statement	(	482:11:13327:13327	744635	21	True				
ANR	744669	Statement	struct	482:12:13328:13333	744635	22	True				
ANR	744670	Statement	magic_set	482:19:13335:13343	744635	23	True				
ANR	744671	Statement	)	482:28:13344:13344	744635	24	True				
ANR	744672	Statement	)	482:29:13345:13345	744635	25	True				
ANR	744673	Statement	)	482:30:13346:13346	744635	26	True				
ANR	744674	Statement	)	482:31:13347:13347	744635	27	True				
ANR	744675	Statement	==	482:33:13349:13350	744635	28	True				
ANR	744676	Statement	NULL	482:36:13352:13355	744635	29	True				
ANR	744677	Statement	)	482:40:13356:13356	744635	30	True				
ANR	744678	ReturnStatement	return NULL ;	483:2:13360:13371	744635	31	True				
ANR	744679	Identifier	NULL		744635	0					
ANR	744680	IfStatement	"if ( magic_setflags ( ms , flags ) == - 1 )"		744635	32					
ANR	744681	Condition	"magic_setflags ( ms , flags ) == - 1"	485:5:13379:13409	744635	0	True				
ANR	744682	EqualityExpression	"magic_setflags ( ms , flags ) == - 1"		744635	0		==			
ANR	744683	CallExpression	"magic_setflags ( ms , flags )"		744635	0					
ANR	744684	Callee	magic_setflags		744635	0					
ANR	744685	Identifier	magic_setflags		744635	0					
ANR	744686	ArgumentList	ms		744635	1					
ANR	744687	Argument	ms		744635	0					
ANR	744688	Identifier	ms		744635	0					
ANR	744689	Argument	flags		744635	1					
ANR	744690	Identifier	flags		744635	0					
ANR	744691	UnaryOperationExpression	- 1		744635	1					
ANR	744692	UnaryOperator	-		744635	0					
ANR	744693	PrimaryExpression	1		744635	1					
ANR	744694	CompoundStatement		9:38:192:192	744635	1					
ANR	744695	ExpressionStatement	errno = EINVAL	486:2:13416:13430	744635	0	True				
ANR	744696	AssignmentExpression	errno = EINVAL		744635	0		=			
ANR	744697	Identifier	errno		744635	0					
ANR	744698	Identifier	EINVAL		744635	1					
ANR	744699	GotoStatement	goto free ;	487:2:13434:13443	744635	1	True				
ANR	744700	Identifier	free		744635	0					
ANR	744701	ExpressionStatement	ms -> o . buf = ms -> o . pbuf = NULL	490:1:13450:13479	744635	33	True				
ANR	744702	AssignmentExpression	ms -> o . buf = ms -> o . pbuf = NULL		744635	0		=			
ANR	744703	MemberAccess	ms -> o . buf		744635	0					
ANR	744704	PtrMemberAccess	ms -> o		744635	0					
ANR	744705	Identifier	ms		744635	0					
ANR	744706	Identifier	o		744635	1					
ANR	744707	Identifier	buf		744635	1					
ANR	744708	AssignmentExpression	ms -> o . pbuf = NULL		744635	1		=			
ANR	744709	MemberAccess	ms -> o . pbuf		744635	0					
ANR	744710	PtrMemberAccess	ms -> o		744635	0					
ANR	744711	Identifier	ms		744635	0					
ANR	744712	Identifier	o		744635	1					
ANR	744713	Identifier	pbuf		744635	1					
ANR	744714	Identifier	NULL		744635	1					
ANR	744715	ExpressionStatement	len = ( ms -> c . len = 10 ) * sizeof ( * ms -> c . li )	491:1:13482:13524	744635	34	True				
ANR	744716	AssignmentExpression	len = ( ms -> c . len = 10 ) * sizeof ( * ms -> c . li )		744635	0		=			
ANR	744717	Identifier	len		744635	0					
ANR	744718	MultiplicativeExpression	( ms -> c . len = 10 ) * sizeof ( * ms -> c . li )		744635	1		*			
ANR	744719	AssignmentExpression	ms -> c . len = 10		744635	0		=			
ANR	744720	MemberAccess	ms -> c . len		744635	0					
ANR	744721	PtrMemberAccess	ms -> c		744635	0					
ANR	744722	Identifier	ms		744635	0					
ANR	744723	Identifier	c		744635	1					
ANR	744724	Identifier	len		744635	1					
ANR	744725	PrimaryExpression	10		744635	1					
ANR	744726	SizeofExpression	sizeof ( * ms -> c . li )		744635	1					
ANR	744727	Sizeof	sizeof		744635	0					
ANR	744728	UnaryOperationExpression	* ms -> c . li		744635	1					
ANR	744729	UnaryOperator	*		744635	0					
ANR	744730	MemberAccess	ms -> c . li		744635	1					
ANR	744731	PtrMemberAccess	ms -> c		744635	0					
ANR	744732	Identifier	ms		744635	0					
ANR	744733	Identifier	c		744635	1					
ANR	744734	Identifier	li		744635	1					
ANR	744735	Statement	if	493:1:13528:13529	744635	35	True				
ANR	744736	Statement	(	493:4:13531:13531	744635	36	True				
ANR	744737	Statement	(	493:5:13532:13532	744635	37	True				
ANR	744738	Statement	ms	493:6:13533:13534	744635	38	True				
ANR	744739	Statement	->	493:8:13535:13536	744635	39	True				
ANR	744740	Statement	c	493:10:13537:13537	744635	40	True				
ANR	744741	Statement	.	493:11:13538:13538	744635	41	True				
ANR	744742	Statement	li	493:12:13539:13540	744635	42	True				
ANR	744743	Statement	=	493:15:13542:13542	744635	43	True				
ANR	744744	Statement	CAST	493:17:13544:13547	744635	44	True				
ANR	744745	Statement	(	493:21:13548:13548	744635	45	True				
ANR	744746	Statement	struct	493:22:13549:13554	744635	46	True				
ANR	744747	Statement	level_info	493:29:13556:13565	744635	47	True				
ANR	744748	Statement	*	493:40:13567:13567	744635	48	True				
ANR	744749	Statement	","	493:41:13568:13568	744635	49	True				
ANR	744750	Statement	emalloc	493:43:13570:13576	744635	50	True				
ANR	744751	Statement	(	493:50:13577:13577	744635	51	True				
ANR	744752	Statement	len	493:51:13578:13580	744635	52	True				
ANR	744753	Statement	)	493:54:13581:13581	744635	53	True				
ANR	744754	Statement	)	493:55:13582:13582	744635	54	True				
ANR	744755	Statement	)	493:56:13583:13583	744635	55	True				
ANR	744756	Statement	==	493:58:13585:13586	744635	56	True				
ANR	744757	Statement	NULL	493:61:13588:13591	744635	57	True				
ANR	744758	Statement	)	493:65:13592:13592	744635	58	True				
ANR	744759	GotoStatement	goto free ;	494:2:13596:13605	744635	59	True				
ANR	744760	Identifier	free		744635	0					
ANR	744761	ExpressionStatement	ms -> event_flags = 0	496:1:13609:13628	744635	60	True				
ANR	744762	AssignmentExpression	ms -> event_flags = 0		744635	0		=			
ANR	744763	PtrMemberAccess	ms -> event_flags		744635	0					
ANR	744764	Identifier	ms		744635	0					
ANR	744765	Identifier	event_flags		744635	1					
ANR	744766	PrimaryExpression	0		744635	1					
ANR	744767	ExpressionStatement	ms -> error = - 1	497:1:13631:13645	744635	61	True				
ANR	744768	AssignmentExpression	ms -> error = - 1		744635	0		=			
ANR	744769	PtrMemberAccess	ms -> error		744635	0					
ANR	744770	Identifier	ms		744635	0					
ANR	744771	Identifier	error		744635	1					
ANR	744772	UnaryOperationExpression	- 1		744635	1					
ANR	744773	UnaryOperator	-		744635	0					
ANR	744774	PrimaryExpression	1		744635	1					
ANR	744775	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		744635	62					
ANR	744776	ForInit	i = 0 ;	498:6:13653:13658	744635	0	True				
ANR	744777	AssignmentExpression	i = 0		744635	0		=			
ANR	744778	Identifier	i		744635	0					
ANR	744779	PrimaryExpression	0		744635	1					
ANR	744780	Condition	i < MAGIC_SETS	498:13:13660:13673	744635	1	True				
ANR	744781	RelationalExpression	i < MAGIC_SETS		744635	0		<			
ANR	744782	Identifier	i		744635	0					
ANR	744783	Identifier	MAGIC_SETS		744635	1					
ANR	744784	PostIncDecOperationExpression	i ++	498:29:13676:13678	744635	2	True				
ANR	744785	Identifier	i		744635	0					
ANR	744786	IncDec	++		744635	1					
ANR	744787	ExpressionStatement	ms -> mlist [ i ] = NULL	499:2:13683:13702	744635	3	True				
ANR	744788	AssignmentExpression	ms -> mlist [ i ] = NULL		744635	0		=			
ANR	744789	ArrayIndexing	ms -> mlist [ i ]		744635	0					
ANR	744790	PtrMemberAccess	ms -> mlist		744635	0					
ANR	744791	Identifier	ms		744635	0					
ANR	744792	Identifier	mlist		744635	1					
ANR	744793	Identifier	i		744635	1					
ANR	744794	Identifier	NULL		744635	1					
ANR	744795	ExpressionStatement	"ms -> file = ""unknown"""	500:1:13705:13725	744635	63	True				
ANR	744796	AssignmentExpression	"ms -> file = ""unknown"""		744635	0		=			
ANR	744797	PtrMemberAccess	ms -> file		744635	0					
ANR	744798	Identifier	ms		744635	0					
ANR	744799	Identifier	file		744635	1					
ANR	744800	PrimaryExpression	"""unknown"""		744635	1					
ANR	744801	ExpressionStatement	ms -> line = 0	501:1:13728:13740	744635	64	True				
ANR	744802	AssignmentExpression	ms -> line = 0		744635	0		=			
ANR	744803	PtrMemberAccess	ms -> line		744635	0					
ANR	744804	Identifier	ms		744635	0					
ANR	744805	Identifier	line		744635	1					
ANR	744806	PrimaryExpression	0		744635	1					
ANR	744807	ExpressionStatement	ms -> indir_max = FILE_INDIR_MAX	502:1:13743:13773	744635	65	True				
ANR	744808	AssignmentExpression	ms -> indir_max = FILE_INDIR_MAX		744635	0		=			
ANR	744809	PtrMemberAccess	ms -> indir_max		744635	0					
ANR	744810	Identifier	ms		744635	0					
ANR	744811	Identifier	indir_max		744635	1					
ANR	744812	Identifier	FILE_INDIR_MAX		744635	1					
ANR	744813	ExpressionStatement	ms -> name_max = FILE_NAME_MAX	503:1:13776:13804	744635	66	True				
ANR	744814	AssignmentExpression	ms -> name_max = FILE_NAME_MAX		744635	0		=			
ANR	744815	PtrMemberAccess	ms -> name_max		744635	0					
ANR	744816	Identifier	ms		744635	0					
ANR	744817	Identifier	name_max		744635	1					
ANR	744818	Identifier	FILE_NAME_MAX		744635	1					
ANR	744819	ExpressionStatement	ms -> elf_shnum_max = FILE_ELF_SHNUM_MAX	504:1:13807:13845	744635	67	True				
ANR	744820	AssignmentExpression	ms -> elf_shnum_max = FILE_ELF_SHNUM_MAX		744635	0		=			
ANR	744821	PtrMemberAccess	ms -> elf_shnum_max		744635	0					
ANR	744822	Identifier	ms		744635	0					
ANR	744823	Identifier	elf_shnum_max		744635	1					
ANR	744824	Identifier	FILE_ELF_SHNUM_MAX		744635	1					
ANR	744825	ExpressionStatement	ms -> elf_phnum_max = FILE_ELF_PHNUM_MAX	505:1:13848:13886	744635	68	True				
ANR	744826	AssignmentExpression	ms -> elf_phnum_max = FILE_ELF_PHNUM_MAX		744635	0		=			
ANR	744827	PtrMemberAccess	ms -> elf_phnum_max		744635	0					
ANR	744828	Identifier	ms		744635	0					
ANR	744829	Identifier	elf_phnum_max		744635	1					
ANR	744830	Identifier	FILE_ELF_PHNUM_MAX		744635	1					
ANR	744831	ExpressionStatement	ms -> elf_notes_max = FILE_ELF_NOTES_MAX	506:1:13889:13927	744635	69	True				
ANR	744832	AssignmentExpression	ms -> elf_notes_max = FILE_ELF_NOTES_MAX		744635	0		=			
ANR	744833	PtrMemberAccess	ms -> elf_notes_max		744635	0					
ANR	744834	Identifier	ms		744635	0					
ANR	744835	Identifier	elf_notes_max		744635	1					
ANR	744836	Identifier	FILE_ELF_NOTES_MAX		744635	1					
ANR	744837	ReturnStatement	return ms ;	507:1:13930:13939	744635	70	True				
ANR	744838	Identifier	ms		744635	0					
ANR	744839	Label	free :	508:0:13941:13945	744635	71	True				
ANR	744840	Identifier	free		744635	0					
ANR	744841	ExpressionStatement	efree ( ms )	509:1:13948:13957	744635	72	True				
ANR	744842	CallExpression	efree ( ms )		744635	0					
ANR	744843	Callee	efree		744635	0					
ANR	744844	Identifier	efree		744635	0					
ANR	744845	ArgumentList	ms		744635	1					
ANR	744846	Argument	ms		744635	0					
ANR	744847	Identifier	ms		744635	0					
ANR	744848	ReturnStatement	return NULL ;	510:1:13960:13971	744635	73	True				
ANR	744849	Identifier	NULL		744635	0					
ANR	744850	ReturnType	struct magic_set *		744635	1					
ANR	744851	Identifier	file_ms_alloc		744635	2					
ANR	744852	ParameterList	int flags		744635	3					
ANR	744853	Parameter	int flags	476:14:13208:13216	744635	0	True				
ANR	744854	ParameterType	int		744635	0					
ANR	744855	Identifier	flags		744635	1					
ANR	744856	CFGEntryNode	ENTRY		744635		True				
ANR	744857	CFGExitNode	EXIT		744635		True				
ANR	744858	Symbol	ms -> name_max		744635						
ANR	744859	Symbol	* ms -> c		744635						
ANR	744860	Symbol	MAGIC_SETS		744635						
ANR	744861	Symbol	ms -> mlist		744635						
ANR	744862	Symbol	FILE_INDIR_MAX		744635						
ANR	744863	Symbol	flags		744635						
ANR	744864	Symbol	ms -> c . li		744635						
ANR	744865	Symbol	FILE_ELF_PHNUM_MAX		744635						
ANR	744866	Symbol	ms -> o . buf		744635						
ANR	744867	Symbol	* ms		744635						
ANR	744868	Symbol	* * ms		744635						
ANR	744869	Symbol	magic_setflags		744635						
ANR	744870	Symbol	len		744635						
ANR	744871	Symbol	ms -> elf_notes_max		744635						
ANR	744872	Symbol	ms -> elf_phnum_max		744635						
ANR	744873	Symbol	errno		744635						
ANR	744874	Symbol	NULL		744635						
ANR	744875	Symbol	ms -> event_flags		744635						
ANR	744876	Symbol	* ms -> mlist		744635						
ANR	744877	Symbol	ms -> indir_max		744635						
ANR	744878	Symbol	ms		744635						
ANR	744879	Symbol	ms -> o		744635						
ANR	744880	Symbol	* ms -> c . li		744635						
ANR	744881	Symbol	i		744635						
ANR	744882	Symbol	ms -> line		744635						
ANR	744883	Symbol	FILE_ELF_NOTES_MAX		744635						
ANR	744884	Symbol	ms -> elf_shnum_max		744635						
ANR	744885	Symbol	EINVAL		744635						
ANR	744886	Symbol	ms -> o . pbuf		744635						
ANR	744887	Symbol	ms -> error		744635						
ANR	744888	Symbol	ms -> file		744635						
ANR	744889	Symbol	ms -> c		744635						
ANR	744890	Symbol	* i		744635						
ANR	744891	Symbol	FILE_NAME_MAX		744635						
ANR	744892	Symbol	FILE_ELF_SHNUM_MAX		744635						
ANR	744893	Symbol	ms -> c . len		744635						
ANR	744894	Function	apprentice_unmap	513:8:13984:14280							
ANR	744895	FunctionDef	apprentice_unmap (struct magic_map * map)		744894	0					
ANR	744896	CompoundStatement		515:0:14029:14280	744894	0					
ANR	744897	IfStatement	if ( map == NULL )		744894	0					
ANR	744898	Condition	map == NULL	516:5:14036:14046	744894	0	True				
ANR	744899	EqualityExpression	map == NULL		744894	0		==			
ANR	744900	Identifier	map		744894	0					
ANR	744901	Identifier	NULL		744894	1					
ANR	744902	ReturnStatement	return ;	517:2:14051:14057	744894	1	True				
ANR	744903	IfStatement	if ( map -> p != php_magic_database )		744894	1					
ANR	744904	Condition	map -> p != php_magic_database	518:5:14064:14091	744894	0	True				
ANR	744905	EqualityExpression	map -> p != php_magic_database		744894	0		!=			
ANR	744906	PtrMemberAccess	map -> p		744894	0					
ANR	744907	Identifier	map		744894	0					
ANR	744908	Identifier	p		744894	1					
ANR	744909	Identifier	php_magic_database		744894	1					
ANR	744910	CompoundStatement		4:35:64:64	744894	1					
ANR	744911	IfStatement	if ( map -> p == NULL )		744894	0					
ANR	744912	Condition	map -> p == NULL	519:6:14102:14115	744894	0	True				
ANR	744913	EqualityExpression	map -> p == NULL		744894	0		==			
ANR	744914	PtrMemberAccess	map -> p		744894	0					
ANR	744915	Identifier	map		744894	0					
ANR	744916	Identifier	p		744894	1					
ANR	744917	Identifier	NULL		744894	1					
ANR	744918	CompoundStatement		6:3:93:98	744894	1					
ANR	744919	IdentifierDeclStatement	int j ;	520:3:14123:14128	744894	0	True				
ANR	744920	IdentifierDecl	j		744894	0					
ANR	744921	IdentifierDeclType	int		744894	0					
ANR	744922	Identifier	j		744894	1					
ANR	744923	ForStatement	for ( j = 0 ; j < MAGIC_SETS ; j ++ )		744894	1					
ANR	744924	ForInit	j = 0 ;	521:8:14138:14143	744894	0	True				
ANR	744925	AssignmentExpression	j = 0		744894	0		=			
ANR	744926	Identifier	j		744894	0					
ANR	744927	PrimaryExpression	0		744894	1					
ANR	744928	Condition	j < MAGIC_SETS	521:15:14145:14158	744894	1	True				
ANR	744929	RelationalExpression	j < MAGIC_SETS		744894	0		<			
ANR	744930	Identifier	j		744894	0					
ANR	744931	Identifier	MAGIC_SETS		744894	1					
ANR	744932	PostIncDecOperationExpression	j ++	521:31:14161:14163	744894	2	True				
ANR	744933	Identifier	j		744894	0					
ANR	744934	IncDec	++		744894	1					
ANR	744935	CompoundStatement		7:36:136:136	744894	3					
ANR	744936	IfStatement	if ( map -> magic [ j ] )		744894	0					
ANR	744937	Condition	map -> magic [ j ]	522:8:14176:14188	744894	0	True				
ANR	744938	ArrayIndexing	map -> magic [ j ]		744894	0					
ANR	744939	PtrMemberAccess	map -> magic		744894	0					
ANR	744940	Identifier	map		744894	0					
ANR	744941	Identifier	magic		744894	1					
ANR	744942	Identifier	j		744894	1					
ANR	744943	CompoundStatement		8:23:161:161	744894	1					
ANR	744944	ExpressionStatement	efree ( map -> magic [ j ] )	523:5:14198:14218	744894	0	True				
ANR	744945	CallExpression	efree ( map -> magic [ j ] )		744894	0					
ANR	744946	Callee	efree		744894	0					
ANR	744947	Identifier	efree		744894	0					
ANR	744948	ArgumentList	map -> magic [ j ]		744894	1					
ANR	744949	Argument	map -> magic [ j ]		744894	0					
ANR	744950	ArrayIndexing	map -> magic [ j ]		744894	0					
ANR	744951	PtrMemberAccess	map -> magic		744894	0					
ANR	744952	Identifier	map		744894	0					
ANR	744953	Identifier	magic		744894	1					
ANR	744954	Identifier	j		744894	1					
ANR	744955	ElseStatement	else		744894	0					
ANR	744956	CompoundStatement		12:9:210:210	744894	0					
ANR	744957	ExpressionStatement	efree ( map -> p )	527:3:14245:14258	744894	0	True				
ANR	744958	CallExpression	efree ( map -> p )		744894	0					
ANR	744959	Callee	efree		744894	0					
ANR	744960	Identifier	efree		744894	0					
ANR	744961	ArgumentList	map -> p		744894	1					
ANR	744962	Argument	map -> p		744894	0					
ANR	744963	PtrMemberAccess	map -> p		744894	0					
ANR	744964	Identifier	map		744894	0					
ANR	744965	Identifier	p		744894	1					
ANR	744966	ExpressionStatement	efree ( map )	530:1:14268:14278	744894	2	True				
ANR	744967	CallExpression	efree ( map )		744894	0					
ANR	744968	Callee	efree		744894	0					
ANR	744969	Identifier	efree		744894	0					
ANR	744970	ArgumentList	map		744894	1					
ANR	744971	Argument	map		744894	0					
ANR	744972	Identifier	map		744894	0					
ANR	744973	ReturnType	void		744894	1					
ANR	744974	Identifier	apprentice_unmap		744894	2					
ANR	744975	ParameterList	struct magic_map * map		744894	3					
ANR	744976	Parameter	struct magic_map * map	514:17:14006:14026	744894	0	True				
ANR	744977	ParameterType	struct magic_map *		744894	0					
ANR	744978	Identifier	map		744894	1					
ANR	744979	CFGEntryNode	ENTRY		744894		True				
ANR	744980	CFGExitNode	EXIT		744894		True				
ANR	744981	Symbol	* * map		744894						
ANR	744982	Symbol	NULL		744894						
ANR	744983	Symbol	MAGIC_SETS		744894						
ANR	744984	Symbol	* j		744894						
ANR	744985	Symbol	php_magic_database		744894						
ANR	744986	Symbol	* map		744894						
ANR	744987	Symbol	map -> p		744894						
ANR	744988	Symbol	* map -> magic		744894						
ANR	744989	Symbol	map -> magic		744894						
ANR	744990	Symbol	j		744894						
ANR	744991	Symbol	map		744894						
ANR	744992	Function	mlist_alloc	533:8:14291:14492							
ANR	744993	FunctionDef	mlist_alloc ()		744992	0					
ANR	744994	CompoundStatement		535:0:14324:14492	744992	0					
ANR	744995	IdentifierDeclStatement	struct mlist * mlist ;	536:1:14327:14346	744992	0	True				
ANR	744996	IdentifierDecl	* mlist		744992	0					
ANR	744997	IdentifierDeclType	struct mlist *		744992	0					
ANR	744998	Identifier	mlist		744992	1					
ANR	744999	Statement	if	537:1:14349:14350	744992	1	True				
ANR	745000	Statement	(	537:4:14352:14352	744992	2	True				
ANR	745001	Statement	(	537:5:14353:14353	744992	3	True				
ANR	745002	Statement	mlist	537:6:14354:14358	744992	4	True				
ANR	745003	Statement	=	537:12:14360:14360	744992	5	True				
ANR	745004	Statement	CAST	537:14:14362:14365	744992	6	True				
ANR	745005	Statement	(	537:18:14366:14366	744992	7	True				
ANR	745006	Statement	struct	537:19:14367:14372	744992	8	True				
ANR	745007	Statement	mlist	537:26:14374:14378	744992	9	True				
ANR	745008	Statement	*	537:32:14380:14380	744992	10	True				
ANR	745009	Statement	","	537:33:14381:14381	744992	11	True				
ANR	745010	Statement	ecalloc	537:35:14383:14389	744992	12	True				
ANR	745011	Statement	(	537:42:14390:14390	744992	13	True				
ANR	745012	Statement	1	537:43:14391:14391	744992	14	True				
ANR	745013	Statement	","	537:44:14392:14392	744992	15	True				
ANR	745014	Statement	sizeof	537:46:14394:14399	744992	16	True				
ANR	745015	Statement	(	537:52:14400:14400	744992	17	True				
ANR	745016	Statement	*	537:53:14401:14401	744992	18	True				
ANR	745017	Statement	mlist	537:54:14402:14406	744992	19	True				
ANR	745018	Statement	)	537:59:14407:14407	744992	20	True				
ANR	745019	Statement	)	537:60:14408:14408	744992	21	True				
ANR	745020	Statement	)	537:61:14409:14409	744992	22	True				
ANR	745021	Statement	)	537:62:14410:14410	744992	23	True				
ANR	745022	Statement	==	537:64:14412:14413	744992	24	True				
ANR	745023	Statement	NULL	537:67:14415:14418	744992	25	True				
ANR	745024	Statement	)	537:71:14419:14419	744992	26	True				
ANR	745025	CompoundStatement		3:73:96:96	744992	27					
ANR	745026	ReturnStatement	return NULL ;	538:2:14425:14436	744992	0	True				
ANR	745027	Identifier	NULL		744992	0					
ANR	745028	ExpressionStatement	mlist -> next = mlist -> prev = mlist	540:1:14442:14475	744992	28	True				
ANR	745029	AssignmentExpression	mlist -> next = mlist -> prev = mlist		744992	0		=			
ANR	745030	PtrMemberAccess	mlist -> next		744992	0					
ANR	745031	Identifier	mlist		744992	0					
ANR	745032	Identifier	next		744992	1					
ANR	745033	AssignmentExpression	mlist -> prev = mlist		744992	1		=			
ANR	745034	PtrMemberAccess	mlist -> prev		744992	0					
ANR	745035	Identifier	mlist		744992	0					
ANR	745036	Identifier	prev		744992	1					
ANR	745037	Identifier	mlist		744992	1					
ANR	745038	ReturnStatement	return mlist ;	541:1:14478:14490	744992	29	True				
ANR	745039	Identifier	mlist		744992	0					
ANR	745040	ReturnType	struct mlist *		744992	1					
ANR	745041	Identifier	mlist_alloc		744992	2					
ANR	745042	ParameterList			744992	3					
ANR	745043	CFGEntryNode	ENTRY		744992		True				
ANR	745044	CFGExitNode	EXIT		744992		True				
ANR	745045	Symbol	NULL		744992						
ANR	745046	Symbol	mlist -> next		744992						
ANR	745047	Symbol	mlist -> prev		744992						
ANR	745048	Symbol	* mlist		744992						
ANR	745049	Symbol	mlist		744992						
ANR	745050	Function	mlist_free	544:8:14503:14773							
ANR	745051	FunctionDef	mlist_free (struct mlist * mlist)		745050	0					
ANR	745052	CompoundStatement		546:0:14540:14773	745050	0					
ANR	745053	IdentifierDeclStatement	"struct mlist * ml , * next ;"	547:1:14543:14566	745050	0	True				
ANR	745054	IdentifierDecl	* ml		745050	0					
ANR	745055	IdentifierDeclType	struct mlist *		745050	0					
ANR	745056	Identifier	ml		745050	1					
ANR	745057	IdentifierDecl	* next		745050	1					
ANR	745058	IdentifierDeclType	struct mlist *		745050	0					
ANR	745059	Identifier	next		745050	1					
ANR	745060	IfStatement	if ( mlist == NULL )		745050	1					
ANR	745061	Condition	mlist == NULL	549:5:14574:14586	745050	0	True				
ANR	745062	EqualityExpression	mlist == NULL		745050	0		==			
ANR	745063	Identifier	mlist		745050	0					
ANR	745064	Identifier	NULL		745050	1					
ANR	745065	ReturnStatement	return ;	550:2:14591:14597	745050	1	True				
ANR	745066	ExpressionStatement	ml = mlist -> next	552:1:14601:14617	745050	2	True				
ANR	745067	AssignmentExpression	ml = mlist -> next		745050	0		=			
ANR	745068	Identifier	ml		745050	0					
ANR	745069	PtrMemberAccess	mlist -> next		745050	1					
ANR	745070	Identifier	mlist		745050	0					
ANR	745071	Identifier	next		745050	1					
ANR	745072	ForStatement	for ( ml = mlist -> next ; ( next = ml -> next ) != NULL ; ml = next )		745050	3					
ANR	745073	ForInit	ml = mlist -> next ;	553:6:14625:14641	745050	0	True				
ANR	745074	AssignmentExpression	ml = mlist -> next		745050	0		=			
ANR	745075	Identifier	ml		745050	0					
ANR	745076	PtrMemberAccess	mlist -> next		745050	1					
ANR	745077	Identifier	mlist		745050	0					
ANR	745078	Identifier	next		745050	1					
ANR	745079	Condition	( next = ml -> next ) != NULL	553:24:14643:14667	745050	1	True				
ANR	745080	EqualityExpression	( next = ml -> next ) != NULL		745050	0		!=			
ANR	745081	AssignmentExpression	next = ml -> next		745050	0		=			
ANR	745082	Identifier	next		745050	0					
ANR	745083	PtrMemberAccess	ml -> next		745050	1					
ANR	745084	Identifier	ml		745050	0					
ANR	745085	Identifier	next		745050	1					
ANR	745086	Identifier	NULL		745050	1					
ANR	745087	AssignmentExpression	ml = next	553:51:14670:14678	745050	2	True	=			
ANR	745088	Identifier	ml		745050	0					
ANR	745089	Identifier	next		745050	1					
ANR	745090	CompoundStatement		8:62:140:140	745050	3					
ANR	745091	IfStatement	if ( ml -> map )		745050	0					
ANR	745092	Condition	ml -> map	554:6:14689:14695	745050	0	True				
ANR	745093	PtrMemberAccess	ml -> map		745050	0					
ANR	745094	Identifier	ml		745050	0					
ANR	745095	Identifier	map		745050	1					
ANR	745096	ExpressionStatement	apprentice_unmap ( ml -> map )	555:3:14701:14726	745050	1	True				
ANR	745097	CallExpression	apprentice_unmap ( ml -> map )		745050	0					
ANR	745098	Callee	apprentice_unmap		745050	0					
ANR	745099	Identifier	apprentice_unmap		745050	0					
ANR	745100	ArgumentList	ml -> map		745050	1					
ANR	745101	Argument	ml -> map		745050	0					
ANR	745102	PtrMemberAccess	ml -> map		745050	0					
ANR	745103	Identifier	ml		745050	0					
ANR	745104	Identifier	map		745050	1					
ANR	745105	ExpressionStatement	efree ( ml )	556:2:14730:14739	745050	1	True				
ANR	745106	CallExpression	efree ( ml )		745050	0					
ANR	745107	Callee	efree		745050	0					
ANR	745108	Identifier	efree		745050	0					
ANR	745109	ArgumentList	ml		745050	1					
ANR	745110	Argument	ml		745050	0					
ANR	745111	Identifier	ml		745050	0					
ANR	745112	IfStatement	if ( ml == mlist )		745050	2					
ANR	745113	Condition	ml == mlist	557:6:14747:14757	745050	0	True				
ANR	745114	EqualityExpression	ml == mlist		745050	0		==			
ANR	745115	Identifier	ml		745050	0					
ANR	745116	Identifier	mlist		745050	1					
ANR	745117	BreakStatement	break ;	558:3:14763:14768	745050	1	True				
ANR	745118	ReturnType	void		745050	1					
ANR	745119	Identifier	mlist_free		745050	2					
ANR	745120	ParameterList	struct mlist * mlist		745050	3					
ANR	745121	Parameter	struct mlist * mlist	545:11:14519:14537	745050	0	True				
ANR	745122	ParameterType	struct mlist *		745050	0					
ANR	745123	Identifier	mlist		745050	1					
ANR	745124	CFGEntryNode	ENTRY		745050		True				
ANR	745125	CFGExitNode	EXIT		745050		True				
ANR	745126	Symbol	next		745050						
ANR	745127	Symbol	NULL		745050						
ANR	745128	Symbol	ml -> map		745050						
ANR	745129	Symbol	mlist -> next		745050						
ANR	745130	Symbol	ml -> next		745050						
ANR	745131	Symbol	* mlist		745050						
ANR	745132	Symbol	* ml		745050						
ANR	745133	Symbol	mlist		745050						
ANR	745134	Symbol	ml		745050						
ANR	745135	Function	file_apprentice	563:10:14844:16593							
ANR	745136	FunctionDef	"file_apprentice (struct magic_set * ms , const char * fn , int action)"		745135	0					
ANR	745137	CompoundStatement		565:0:14914:16593	745135	0					
ANR	745138	IdentifierDeclStatement	"char * p , * mfn ;"	566:1:14917:14930	745135	0	True				
ANR	745139	IdentifierDecl	* p		745135	0					
ANR	745140	IdentifierDeclType	char *		745135	0					
ANR	745141	Identifier	p		745135	1					
ANR	745142	IdentifierDecl	* mfn		745135	1					
ANR	745143	IdentifierDeclType	char *		745135	0					
ANR	745144	Identifier	mfn		745135	1					
ANR	745145	IdentifierDeclStatement	"int file_err , errs = - 1 ;"	567:1:14933:14956	745135	1	True				
ANR	745146	IdentifierDecl	file_err		745135	0					
ANR	745147	IdentifierDeclType	int		745135	0					
ANR	745148	Identifier	file_err		745135	1					
ANR	745149	IdentifierDecl	errs = - 1		745135	1					
ANR	745150	IdentifierDeclType	int		745135	0					
ANR	745151	Identifier	errs		745135	1					
ANR	745152	AssignmentExpression	errs = - 1		745135	2		=			
ANR	745153	Identifier	errs		745135	0					
ANR	745154	UnaryOperationExpression	- 1		745135	1					
ANR	745155	UnaryOperator	-		745135	0					
ANR	745156	PrimaryExpression	1		745135	1					
ANR	745157	IdentifierDeclStatement	size_t i ;	568:1:14959:14967	745135	2	True				
ANR	745158	IdentifierDecl	i		745135	0					
ANR	745159	IdentifierDeclType	size_t		745135	0					
ANR	745160	Identifier	i		745135	1					
ANR	745161	IfStatement	if ( ms -> mlist [ 0 ] != NULL )		745135	3					
ANR	745162	Condition	ms -> mlist [ 0 ] != NULL	570:5:14975:14994	745135	0	True				
ANR	745163	EqualityExpression	ms -> mlist [ 0 ] != NULL		745135	0		!=			
ANR	745164	ArrayIndexing	ms -> mlist [ 0 ]		745135	0					
ANR	745165	PtrMemberAccess	ms -> mlist		745135	0					
ANR	745166	Identifier	ms		745135	0					
ANR	745167	Identifier	mlist		745135	1					
ANR	745168	PrimaryExpression	0		745135	1					
ANR	745169	Identifier	NULL		745135	1					
ANR	745170	ExpressionStatement	file_reset ( ms )	571:2:14999:15013	745135	1	True				
ANR	745171	CallExpression	file_reset ( ms )		745135	0					
ANR	745172	Callee	file_reset		745135	0					
ANR	745173	Identifier	file_reset		745135	0					
ANR	745174	ArgumentList	ms		745135	1					
ANR	745175	Argument	ms		745135	0					
ANR	745176	Identifier	ms		745135	0					
ANR	745177	IfStatement	"if ( ( fn = magic_getpath ( fn , action ) ) == NULL )"		745135	4					
ANR	745178	Condition	"( fn = magic_getpath ( fn , action ) ) == NULL"	575:5:15101:15140	745135	0	True				
ANR	745179	EqualityExpression	"( fn = magic_getpath ( fn , action ) ) == NULL"		745135	0		==			
ANR	745180	AssignmentExpression	"fn = magic_getpath ( fn , action )"		745135	0		=			
ANR	745181	Identifier	fn		745135	0					
ANR	745182	CallExpression	"magic_getpath ( fn , action )"		745135	1					
ANR	745183	Callee	magic_getpath		745135	0					
ANR	745184	Identifier	magic_getpath		745135	0					
ANR	745185	ArgumentList	fn		745135	1					
ANR	745186	Argument	fn		745135	0					
ANR	745187	Identifier	fn		745135	0					
ANR	745188	Argument	action		745135	1					
ANR	745189	Identifier	action		745135	0					
ANR	745190	Identifier	NULL		745135	1					
ANR	745191	ReturnStatement	return - 1 ;	576:2:15145:15154	745135	1	True				
ANR	745192	UnaryOperationExpression	- 1		745135	0					
ANR	745193	UnaryOperator	-		745135	0					
ANR	745194	PrimaryExpression	1		745135	1					
ANR	745195	ExpressionStatement	init_file_tables ( )	579:1:15165:15183	745135	5	True				
ANR	745196	CallExpression	init_file_tables ( )		745135	0					
ANR	745197	Callee	init_file_tables		745135	0					
ANR	745198	Identifier	init_file_tables		745135	0					
ANR	745199	ArgumentList			745135	1					
ANR	745200	IfStatement	if ( fn == NULL )		745135	6					
ANR	745201	Condition	fn == NULL	581:5:15191:15200	745135	0	True				
ANR	745202	EqualityExpression	fn == NULL		745135	0		==			
ANR	745203	Identifier	fn		745135	0					
ANR	745204	Identifier	NULL		745135	1					
ANR	745205	ExpressionStatement	"fn = getenv ( ""MAGIC"" )"	582:2:15205:15225	745135	1	True				
ANR	745206	AssignmentExpression	"fn = getenv ( ""MAGIC"" )"		745135	0		=			
ANR	745207	Identifier	fn		745135	0					
ANR	745208	CallExpression	"getenv ( ""MAGIC"" )"		745135	1					
ANR	745209	Callee	getenv		745135	0					
ANR	745210	Identifier	getenv		745135	0					
ANR	745211	ArgumentList	"""MAGIC"""		745135	1					
ANR	745212	Argument	"""MAGIC"""		745135	0					
ANR	745213	PrimaryExpression	"""MAGIC"""		745135	0					
ANR	745214	IfStatement	if ( fn == NULL )		745135	7					
ANR	745215	Condition	fn == NULL	583:5:15232:15241	745135	0	True				
ANR	745216	EqualityExpression	fn == NULL		745135	0		==			
ANR	745217	Identifier	fn		745135	0					
ANR	745218	Identifier	NULL		745135	1					
ANR	745219	CompoundStatement		19:17:329:329	745135	1					
ANR	745220	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		745135	0					
ANR	745221	ForInit	i = 0 ;	584:7:15253:15258	745135	0	True				
ANR	745222	AssignmentExpression	i = 0		745135	0		=			
ANR	745223	Identifier	i		745135	0					
ANR	745224	PrimaryExpression	0		745135	1					
ANR	745225	Condition	i < MAGIC_SETS	584:14:15260:15273	745135	1	True				
ANR	745226	RelationalExpression	i < MAGIC_SETS		745135	0		<			
ANR	745227	Identifier	i		745135	0					
ANR	745228	Identifier	MAGIC_SETS		745135	1					
ANR	745229	PostIncDecOperationExpression	i ++	584:30:15276:15278	745135	2	True				
ANR	745230	Identifier	i		745135	0					
ANR	745231	IncDec	++		745135	1					
ANR	745232	CompoundStatement		20:35:366:366	745135	3					
ANR	745233	ExpressionStatement	mlist_free ( ms -> mlist [ i ] )	585:3:15286:15310	745135	0	True				
ANR	745234	CallExpression	mlist_free ( ms -> mlist [ i ] )		745135	0					
ANR	745235	Callee	mlist_free		745135	0					
ANR	745236	Identifier	mlist_free		745135	0					
ANR	745237	ArgumentList	ms -> mlist [ i ]		745135	1					
ANR	745238	Argument	ms -> mlist [ i ]		745135	0					
ANR	745239	ArrayIndexing	ms -> mlist [ i ]		745135	0					
ANR	745240	PtrMemberAccess	ms -> mlist		745135	0					
ANR	745241	Identifier	ms		745135	0					
ANR	745242	Identifier	mlist		745135	1					
ANR	745243	Identifier	i		745135	1					
ANR	745244	IfStatement	if ( ( ms -> mlist [ i ] = mlist_alloc ( ) ) == NULL )		745135	1					
ANR	745245	Condition	( ms -> mlist [ i ] = mlist_alloc ( ) ) == NULL	586:7:15319:15356	745135	0	True				
ANR	745246	EqualityExpression	( ms -> mlist [ i ] = mlist_alloc ( ) ) == NULL		745135	0		==			
ANR	745247	AssignmentExpression	ms -> mlist [ i ] = mlist_alloc ( )		745135	0		=			
ANR	745248	ArrayIndexing	ms -> mlist [ i ]		745135	0					
ANR	745249	PtrMemberAccess	ms -> mlist		745135	0					
ANR	745250	Identifier	ms		745135	0					
ANR	745251	Identifier	mlist		745135	1					
ANR	745252	Identifier	i		745135	1					
ANR	745253	CallExpression	mlist_alloc ( )		745135	1					
ANR	745254	Callee	mlist_alloc		745135	0					
ANR	745255	Identifier	mlist_alloc		745135	0					
ANR	745256	ArgumentList			745135	1					
ANR	745257	Identifier	NULL		745135	1					
ANR	745258	CompoundStatement		22:47:444:444	745135	1					
ANR	745259	ExpressionStatement	"file_oomem ( ms , sizeof ( * ms -> mlist [ i ] ) )"	587:4:15365:15402	745135	0	True				
ANR	745260	CallExpression	"file_oomem ( ms , sizeof ( * ms -> mlist [ i ] ) )"		745135	0					
ANR	745261	Callee	file_oomem		745135	0					
ANR	745262	Identifier	file_oomem		745135	0					
ANR	745263	ArgumentList	ms		745135	1					
ANR	745264	Argument	ms		745135	0					
ANR	745265	Identifier	ms		745135	0					
ANR	745266	Argument	sizeof ( * ms -> mlist [ i ] )		745135	1					
ANR	745267	SizeofExpression	sizeof ( * ms -> mlist [ i ] )		745135	0					
ANR	745268	Sizeof	sizeof		745135	0					
ANR	745269	UnaryOperationExpression	* ms -> mlist [ i ]		745135	1					
ANR	745270	UnaryOperator	*		745135	0					
ANR	745271	ArrayIndexing	ms -> mlist [ i ]		745135	1					
ANR	745272	PtrMemberAccess	ms -> mlist		745135	0					
ANR	745273	Identifier	ms		745135	0					
ANR	745274	Identifier	mlist		745135	1					
ANR	745275	Identifier	i		745135	1					
ANR	745276	ReturnStatement	return - 1 ;	588:4:15408:15417	745135	1	True				
ANR	745277	UnaryOperationExpression	- 1		745135	0					
ANR	745278	UnaryOperator	-		745135	0					
ANR	745279	PrimaryExpression	1		745135	1					
ANR	745280	ReturnStatement	"return apprentice_1 ( ms , fn , action ) ;"	591:2:15430:15465	745135	1	True				
ANR	745281	CallExpression	"apprentice_1 ( ms , fn , action )"		745135	0					
ANR	745282	Callee	apprentice_1		745135	0					
ANR	745283	Identifier	apprentice_1		745135	0					
ANR	745284	ArgumentList	ms		745135	1					
ANR	745285	Argument	ms		745135	0					
ANR	745286	Identifier	ms		745135	0					
ANR	745287	Argument	fn		745135	1					
ANR	745288	Identifier	fn		745135	0					
ANR	745289	Argument	action		745135	2					
ANR	745290	Identifier	action		745135	0					
ANR	745291	IfStatement	if ( ( mfn = estrdup ( fn ) ) == NULL )		745135	8					
ANR	745292	Condition	( mfn = estrdup ( fn ) ) == NULL	594:5:15476:15502	745135	0	True				
ANR	745293	EqualityExpression	( mfn = estrdup ( fn ) ) == NULL		745135	0		==			
ANR	745294	AssignmentExpression	mfn = estrdup ( fn )		745135	0		=			
ANR	745295	Identifier	mfn		745135	0					
ANR	745296	CallExpression	estrdup ( fn )		745135	1					
ANR	745297	Callee	estrdup		745135	0					
ANR	745298	Identifier	estrdup		745135	0					
ANR	745299	ArgumentList	fn		745135	1					
ANR	745300	Argument	fn		745135	0					
ANR	745301	Identifier	fn		745135	0					
ANR	745302	Identifier	NULL		745135	1					
ANR	745303	CompoundStatement		30:34:590:590	745135	1					
ANR	745304	ExpressionStatement	"file_oomem ( ms , strlen ( fn ) )"	595:2:15509:15535	745135	0	True				
ANR	745305	CallExpression	"file_oomem ( ms , strlen ( fn ) )"		745135	0					
ANR	745306	Callee	file_oomem		745135	0					
ANR	745307	Identifier	file_oomem		745135	0					
ANR	745308	ArgumentList	ms		745135	1					
ANR	745309	Argument	ms		745135	0					
ANR	745310	Identifier	ms		745135	0					
ANR	745311	Argument	strlen ( fn )		745135	1					
ANR	745312	CallExpression	strlen ( fn )		745135	0					
ANR	745313	Callee	strlen		745135	0					
ANR	745314	Identifier	strlen		745135	0					
ANR	745315	ArgumentList	fn		745135	1					
ANR	745316	Argument	fn		745135	0					
ANR	745317	Identifier	fn		745135	0					
ANR	745318	ReturnStatement	return - 1 ;	596:2:15539:15548	745135	1	True				
ANR	745319	UnaryOperationExpression	- 1		745135	0					
ANR	745320	UnaryOperator	-		745135	0					
ANR	745321	PrimaryExpression	1		745135	1					
ANR	745322	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		745135	9					
ANR	745323	ForInit	i = 0 ;	599:6:15560:15565	745135	0	True				
ANR	745324	AssignmentExpression	i = 0		745135	0		=			
ANR	745325	Identifier	i		745135	0					
ANR	745326	PrimaryExpression	0		745135	1					
ANR	745327	Condition	i < MAGIC_SETS	599:13:15567:15580	745135	1	True				
ANR	745328	RelationalExpression	i < MAGIC_SETS		745135	0		<			
ANR	745329	Identifier	i		745135	0					
ANR	745330	Identifier	MAGIC_SETS		745135	1					
ANR	745331	PostIncDecOperationExpression	i ++	599:29:15583:15585	745135	2	True				
ANR	745332	Identifier	i		745135	0					
ANR	745333	IncDec	++		745135	1					
ANR	745334	CompoundStatement		35:34:673:673	745135	3					
ANR	745335	ExpressionStatement	mlist_free ( ms -> mlist [ i ] )	600:2:15592:15616	745135	0	True				
ANR	745336	CallExpression	mlist_free ( ms -> mlist [ i ] )		745135	0					
ANR	745337	Callee	mlist_free		745135	0					
ANR	745338	Identifier	mlist_free		745135	0					
ANR	745339	ArgumentList	ms -> mlist [ i ]		745135	1					
ANR	745340	Argument	ms -> mlist [ i ]		745135	0					
ANR	745341	ArrayIndexing	ms -> mlist [ i ]		745135	0					
ANR	745342	PtrMemberAccess	ms -> mlist		745135	0					
ANR	745343	Identifier	ms		745135	0					
ANR	745344	Identifier	mlist		745135	1					
ANR	745345	Identifier	i		745135	1					
ANR	745346	IfStatement	if ( ( ms -> mlist [ i ] = mlist_alloc ( ) ) == NULL )		745135	1					
ANR	745347	Condition	( ms -> mlist [ i ] = mlist_alloc ( ) ) == NULL	601:6:15624:15661	745135	0	True				
ANR	745348	EqualityExpression	( ms -> mlist [ i ] = mlist_alloc ( ) ) == NULL		745135	0		==			
ANR	745349	AssignmentExpression	ms -> mlist [ i ] = mlist_alloc ( )		745135	0		=			
ANR	745350	ArrayIndexing	ms -> mlist [ i ]		745135	0					
ANR	745351	PtrMemberAccess	ms -> mlist		745135	0					
ANR	745352	Identifier	ms		745135	0					
ANR	745353	Identifier	mlist		745135	1					
ANR	745354	Identifier	i		745135	1					
ANR	745355	CallExpression	mlist_alloc ( )		745135	1					
ANR	745356	Callee	mlist_alloc		745135	0					
ANR	745357	Identifier	mlist_alloc		745135	0					
ANR	745358	ArgumentList			745135	1					
ANR	745359	Identifier	NULL		745135	1					
ANR	745360	CompoundStatement		37:46:749:749	745135	1					
ANR	745361	ExpressionStatement	"file_oomem ( ms , sizeof ( * ms -> mlist [ i ] ) )"	602:3:15669:15706	745135	0	True				
ANR	745362	CallExpression	"file_oomem ( ms , sizeof ( * ms -> mlist [ i ] ) )"		745135	0					
ANR	745363	Callee	file_oomem		745135	0					
ANR	745364	Identifier	file_oomem		745135	0					
ANR	745365	ArgumentList	ms		745135	1					
ANR	745366	Argument	ms		745135	0					
ANR	745367	Identifier	ms		745135	0					
ANR	745368	Argument	sizeof ( * ms -> mlist [ i ] )		745135	1					
ANR	745369	SizeofExpression	sizeof ( * ms -> mlist [ i ] )		745135	0					
ANR	745370	Sizeof	sizeof		745135	0					
ANR	745371	UnaryOperationExpression	* ms -> mlist [ i ]		745135	1					
ANR	745372	UnaryOperator	*		745135	0					
ANR	745373	ArrayIndexing	ms -> mlist [ i ]		745135	1					
ANR	745374	PtrMemberAccess	ms -> mlist		745135	0					
ANR	745375	Identifier	ms		745135	0					
ANR	745376	Identifier	mlist		745135	1					
ANR	745377	Identifier	i		745135	1					
ANR	745378	WhileStatement	while ( i -- > 0 )		745135	1					
ANR	745379	Condition	i -- > 0	603:10:15718:15724	745135	0	True				
ANR	745380	RelationalExpression	i -- > 0		745135	0		>			
ANR	745381	PostIncDecOperationExpression	i --		745135	0					
ANR	745382	Identifier	i		745135	0					
ANR	745383	IncDec	--		745135	1					
ANR	745384	PrimaryExpression	0		745135	1					
ANR	745385	CompoundStatement		39:19:812:812	745135	1					
ANR	745386	ExpressionStatement	mlist_free ( ms -> mlist [ i ] )	604:4:15733:15757	745135	0	True				
ANR	745387	CallExpression	mlist_free ( ms -> mlist [ i ] )		745135	0					
ANR	745388	Callee	mlist_free		745135	0					
ANR	745389	Identifier	mlist_free		745135	0					
ANR	745390	ArgumentList	ms -> mlist [ i ]		745135	1					
ANR	745391	Argument	ms -> mlist [ i ]		745135	0					
ANR	745392	ArrayIndexing	ms -> mlist [ i ]		745135	0					
ANR	745393	PtrMemberAccess	ms -> mlist		745135	0					
ANR	745394	Identifier	ms		745135	0					
ANR	745395	Identifier	mlist		745135	1					
ANR	745396	Identifier	i		745135	1					
ANR	745397	ExpressionStatement	ms -> mlist [ i ] = NULL	605:4:15763:15782	745135	1	True				
ANR	745398	AssignmentExpression	ms -> mlist [ i ] = NULL		745135	0		=			
ANR	745399	ArrayIndexing	ms -> mlist [ i ]		745135	0					
ANR	745400	PtrMemberAccess	ms -> mlist		745135	0					
ANR	745401	Identifier	ms		745135	0					
ANR	745402	Identifier	mlist		745135	1					
ANR	745403	Identifier	i		745135	1					
ANR	745404	Identifier	NULL		745135	1					
ANR	745405	ExpressionStatement	efree ( mfn )	607:3:15792:15802	745135	2	True				
ANR	745406	CallExpression	efree ( mfn )		745135	0					
ANR	745407	Callee	efree		745135	0					
ANR	745408	Identifier	efree		745135	0					
ANR	745409	ArgumentList	mfn		745135	1					
ANR	745410	Argument	mfn		745135	0					
ANR	745411	Identifier	mfn		745135	0					
ANR	745412	ReturnStatement	return - 1 ;	608:3:15807:15816	745135	3	True				
ANR	745413	UnaryOperationExpression	- 1		745135	0					
ANR	745414	UnaryOperator	-		745135	0					
ANR	745415	PrimaryExpression	1		745135	1					
ANR	745416	ExpressionStatement	fn = mfn	611:1:15826:15834	745135	10	True				
ANR	745417	AssignmentExpression	fn = mfn		745135	0		=			
ANR	745418	Identifier	fn		745135	0					
ANR	745419	Identifier	mfn		745135	1					
ANR	745420	WhileStatement	while ( fn )		745135	11					
ANR	745421	Condition	fn	613:8:15845:15846	745135	0	True				
ANR	745422	Identifier	fn		745135	0					
ANR	745423	CompoundStatement		49:12:934:934	745135	1					
ANR	745424	ExpressionStatement	"p = strchr ( fn , PATHSEP )"	614:2:15853:15876	745135	0	True				
ANR	745425	AssignmentExpression	"p = strchr ( fn , PATHSEP )"		745135	0		=			
ANR	745426	Identifier	p		745135	0					
ANR	745427	CallExpression	"strchr ( fn , PATHSEP )"		745135	1					
ANR	745428	Callee	strchr		745135	0					
ANR	745429	Identifier	strchr		745135	0					
ANR	745430	ArgumentList	fn		745135	1					
ANR	745431	Argument	fn		745135	0					
ANR	745432	Identifier	fn		745135	0					
ANR	745433	Argument	PATHSEP		745135	1					
ANR	745434	Identifier	PATHSEP		745135	0					
ANR	745435	IfStatement	if ( p )		745135	1					
ANR	745436	Condition	p	615:6:15884:15884	745135	0	True				
ANR	745437	Identifier	p		745135	0					
ANR	745438	ExpressionStatement	* p ++ = '\\0'	616:3:15890:15901	745135	1	True				
ANR	745439	AssignmentExpression	* p ++ = '\\0'		745135	0		=			
ANR	745440	UnaryOperationExpression	* p ++		745135	0					
ANR	745441	UnaryOperator	*		745135	0					
ANR	745442	PostIncDecOperationExpression	p ++		745135	1					
ANR	745443	Identifier	p		745135	0					
ANR	745444	IncDec	++		745135	1					
ANR	745445	PrimaryExpression	'\\0'		745135	1					
ANR	745446	IfStatement	if ( * fn == '\\0' )		745135	2					
ANR	745447	Condition	* fn == '\\0'	617:6:15909:15919	745135	0	True				
ANR	745448	EqualityExpression	* fn == '\\0'		745135	0		==			
ANR	745449	UnaryOperationExpression	* fn		745135	0					
ANR	745450	UnaryOperator	*		745135	0					
ANR	745451	Identifier	fn		745135	1					
ANR	745452	PrimaryExpression	'\\0'		745135	1					
ANR	745453	BreakStatement	break ;	618:3:15925:15930	745135	1	True				
ANR	745454	ExpressionStatement	"file_err = apprentice_1 ( ms , fn , action )"	619:2:15934:15973	745135	3	True				
ANR	745455	AssignmentExpression	"file_err = apprentice_1 ( ms , fn , action )"		745135	0		=			
ANR	745456	Identifier	file_err		745135	0					
ANR	745457	CallExpression	"apprentice_1 ( ms , fn , action )"		745135	1					
ANR	745458	Callee	apprentice_1		745135	0					
ANR	745459	Identifier	apprentice_1		745135	0					
ANR	745460	ArgumentList	ms		745135	1					
ANR	745461	Argument	ms		745135	0					
ANR	745462	Identifier	ms		745135	0					
ANR	745463	Argument	fn		745135	1					
ANR	745464	Identifier	fn		745135	0					
ANR	745465	Argument	action		745135	2					
ANR	745466	Identifier	action		745135	0					
ANR	745467	ExpressionStatement	"errs = MAX ( errs , file_err )"	620:2:15977:16003	745135	4	True				
ANR	745468	AssignmentExpression	"errs = MAX ( errs , file_err )"		745135	0		=			
ANR	745469	Identifier	errs		745135	0					
ANR	745470	CallExpression	"MAX ( errs , file_err )"		745135	1					
ANR	745471	Callee	MAX		745135	0					
ANR	745472	Identifier	MAX		745135	0					
ANR	745473	ArgumentList	errs		745135	1					
ANR	745474	Argument	errs		745135	0					
ANR	745475	Identifier	errs		745135	0					
ANR	745476	Argument	file_err		745135	1					
ANR	745477	Identifier	file_err		745135	0					
ANR	745478	ExpressionStatement	fn = p	621:2:16007:16013	745135	5	True				
ANR	745479	AssignmentExpression	fn = p		745135	0		=			
ANR	745480	Identifier	fn		745135	0					
ANR	745481	Identifier	p		745135	1					
ANR	745482	ExpressionStatement	efree ( mfn )	624:1:16020:16030	745135	12	True				
ANR	745483	CallExpression	efree ( mfn )		745135	0					
ANR	745484	Callee	efree		745135	0					
ANR	745485	Identifier	efree		745135	0					
ANR	745486	ArgumentList	mfn		745135	1					
ANR	745487	Argument	mfn		745135	0					
ANR	745488	Identifier	mfn		745135	0					
ANR	745489	IfStatement	if ( errs == - 1 )		745135	13					
ANR	745490	Condition	errs == - 1	626:5:16038:16047	745135	0	True				
ANR	745491	EqualityExpression	errs == - 1		745135	0		==			
ANR	745492	Identifier	errs		745135	0					
ANR	745493	UnaryOperationExpression	- 1		745135	1					
ANR	745494	UnaryOperator	-		745135	0					
ANR	745495	PrimaryExpression	1		745135	1					
ANR	745496	CompoundStatement		62:17:1135:1135	745135	1					
ANR	745497	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		745135	0					
ANR	745498	ForInit	i = 0 ;	627:7:16059:16064	745135	0	True				
ANR	745499	AssignmentExpression	i = 0		745135	0		=			
ANR	745500	Identifier	i		745135	0					
ANR	745501	PrimaryExpression	0		745135	1					
ANR	745502	Condition	i < MAGIC_SETS	627:14:16066:16079	745135	1	True				
ANR	745503	RelationalExpression	i < MAGIC_SETS		745135	0		<			
ANR	745504	Identifier	i		745135	0					
ANR	745505	Identifier	MAGIC_SETS		745135	1					
ANR	745506	PostIncDecOperationExpression	i ++	627:30:16082:16084	745135	2	True				
ANR	745507	Identifier	i		745135	0					
ANR	745508	IncDec	++		745135	1					
ANR	745509	CompoundStatement		63:35:1172:1172	745135	3					
ANR	745510	ExpressionStatement	mlist_free ( ms -> mlist [ i ] )	628:3:16092:16116	745135	0	True				
ANR	745511	CallExpression	mlist_free ( ms -> mlist [ i ] )		745135	0					
ANR	745512	Callee	mlist_free		745135	0					
ANR	745513	Identifier	mlist_free		745135	0					
ANR	745514	ArgumentList	ms -> mlist [ i ]		745135	1					
ANR	745515	Argument	ms -> mlist [ i ]		745135	0					
ANR	745516	ArrayIndexing	ms -> mlist [ i ]		745135	0					
ANR	745517	PtrMemberAccess	ms -> mlist		745135	0					
ANR	745518	Identifier	ms		745135	0					
ANR	745519	Identifier	mlist		745135	1					
ANR	745520	Identifier	i		745135	1					
ANR	745521	ExpressionStatement	ms -> mlist [ i ] = NULL	629:3:16121:16140	745135	1	True				
ANR	745522	AssignmentExpression	ms -> mlist [ i ] = NULL		745135	0		=			
ANR	745523	ArrayIndexing	ms -> mlist [ i ]		745135	0					
ANR	745524	PtrMemberAccess	ms -> mlist		745135	0					
ANR	745525	Identifier	ms		745135	0					
ANR	745526	Identifier	mlist		745135	1					
ANR	745527	Identifier	i		745135	1					
ANR	745528	Identifier	NULL		745135	1					
ANR	745529	ExpressionStatement	"file_error ( ms , 0 , ""could not find any valid magic files!"" )"	631:2:16148:16206	745135	1	True				
ANR	745530	CallExpression	"file_error ( ms , 0 , ""could not find any valid magic files!"" )"		745135	0					
ANR	745531	Callee	file_error		745135	0					
ANR	745532	Identifier	file_error		745135	0					
ANR	745533	ArgumentList	ms		745135	1					
ANR	745534	Argument	ms		745135	0					
ANR	745535	Identifier	ms		745135	0					
ANR	745536	Argument	0		745135	1					
ANR	745537	PrimaryExpression	0		745135	0					
ANR	745538	Argument	"""could not find any valid magic files!"""		745135	2					
ANR	745539	PrimaryExpression	"""could not find any valid magic files!"""		745135	0					
ANR	745540	ReturnStatement	return - 1 ;	632:2:16210:16219	745135	2	True				
ANR	745541	UnaryOperationExpression	- 1		745135	0					
ANR	745542	UnaryOperator	-		745135	0					
ANR	745543	PrimaryExpression	1		745135	1					
ANR	745544	IfStatement	if ( action == FILE_LOAD )		745135	14					
ANR	745545	Condition	action == FILE_LOAD	639:5:16282:16300	745135	0	True				
ANR	745546	EqualityExpression	action == FILE_LOAD		745135	0		==			
ANR	745547	Identifier	action		745135	0					
ANR	745548	Identifier	FILE_LOAD		745135	1					
ANR	745549	ReturnStatement	return 0 ;	640:2:16305:16313	745135	1	True				
ANR	745550	PrimaryExpression	0		745135	0					
ANR	745551	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		745135	15					
ANR	745552	ForInit	i = 0 ;	642:6:16322:16327	745135	0	True				
ANR	745553	AssignmentExpression	i = 0		745135	0		=			
ANR	745554	Identifier	i		745135	0					
ANR	745555	PrimaryExpression	0		745135	1					
ANR	745556	Condition	i < MAGIC_SETS	642:13:16329:16342	745135	1	True				
ANR	745557	RelationalExpression	i < MAGIC_SETS		745135	0		<			
ANR	745558	Identifier	i		745135	0					
ANR	745559	Identifier	MAGIC_SETS		745135	1					
ANR	745560	PostIncDecOperationExpression	i ++	642:29:16345:16347	745135	2	True				
ANR	745561	Identifier	i		745135	0					
ANR	745562	IncDec	++		745135	1					
ANR	745563	CompoundStatement		78:34:1435:1435	745135	3					
ANR	745564	ExpressionStatement	mlist_free ( ms -> mlist [ i ] )	643:2:16354:16378	745135	0	True				
ANR	745565	CallExpression	mlist_free ( ms -> mlist [ i ] )		745135	0					
ANR	745566	Callee	mlist_free		745135	0					
ANR	745567	Identifier	mlist_free		745135	0					
ANR	745568	ArgumentList	ms -> mlist [ i ]		745135	1					
ANR	745569	Argument	ms -> mlist [ i ]		745135	0					
ANR	745570	ArrayIndexing	ms -> mlist [ i ]		745135	0					
ANR	745571	PtrMemberAccess	ms -> mlist		745135	0					
ANR	745572	Identifier	ms		745135	0					
ANR	745573	Identifier	mlist		745135	1					
ANR	745574	Identifier	i		745135	1					
ANR	745575	ExpressionStatement	ms -> mlist [ i ] = NULL	644:2:16382:16401	745135	1	True				
ANR	745576	AssignmentExpression	ms -> mlist [ i ] = NULL		745135	0		=			
ANR	745577	ArrayIndexing	ms -> mlist [ i ]		745135	0					
ANR	745578	PtrMemberAccess	ms -> mlist		745135	0					
ANR	745579	Identifier	ms		745135	0					
ANR	745580	Identifier	mlist		745135	1					
ANR	745581	Identifier	i		745135	1					
ANR	745582	Identifier	NULL		745135	1					
ANR	745583	SwitchStatement	switch ( action )		745135	16					
ANR	745584	Condition	action	648:9:16423:16428	745135	0	True				
ANR	745585	Identifier	action		745135	0					
ANR	745586	CompoundStatement		84:17:1516:1516	745135	1					
ANR	745587	Label	case FILE_LOAD :	649:1:16434:16448	745135	0	True				
ANR	745588	Identifier	FILE_LOAD		745135	0					
ANR	745589	Label	case FILE_COMPILE :	650:1:16451:16468	745135	1	True				
ANR	745590	Identifier	FILE_COMPILE		745135	0					
ANR	745591	Label	case FILE_CHECK :	651:1:16471:16486	745135	2	True				
ANR	745592	Identifier	FILE_CHECK		745135	0					
ANR	745593	Label	case FILE_LIST :	652:1:16489:16503	745135	3	True				
ANR	745594	Identifier	FILE_LIST		745135	0					
ANR	745595	ReturnStatement	return 0 ;	653:2:16507:16515	745135	4	True				
ANR	745596	PrimaryExpression	0		745135	0					
ANR	745597	Label	default :	654:1:16518:16525	745135	5	True				
ANR	745598	Identifier	default		745135	0					
ANR	745599	ExpressionStatement	"file_error ( ms , 0 , ""Invalid action %d"" , action )"	655:2:16529:16575	745135	6	True				
ANR	745600	CallExpression	"file_error ( ms , 0 , ""Invalid action %d"" , action )"		745135	0					
ANR	745601	Callee	file_error		745135	0					
ANR	745602	Identifier	file_error		745135	0					
ANR	745603	ArgumentList	ms		745135	1					
ANR	745604	Argument	ms		745135	0					
ANR	745605	Identifier	ms		745135	0					
ANR	745606	Argument	0		745135	1					
ANR	745607	PrimaryExpression	0		745135	0					
ANR	745608	Argument	"""Invalid action %d"""		745135	2					
ANR	745609	PrimaryExpression	"""Invalid action %d"""		745135	0					
ANR	745610	Argument	action		745135	3					
ANR	745611	Identifier	action		745135	0					
ANR	745612	ReturnStatement	return - 1 ;	656:2:16579:16588	745135	7	True				
ANR	745613	UnaryOperationExpression	- 1		745135	0					
ANR	745614	UnaryOperator	-		745135	0					
ANR	745615	PrimaryExpression	1		745135	1					
ANR	745616	ReturnType	int		745135	1					
ANR	745617	Identifier	file_apprentice		745135	2					
ANR	745618	ParameterList	"struct magic_set * ms , const char * fn , int action"		745135	3					
ANR	745619	Parameter	struct magic_set * ms	564:16:14864:14883	745135	0	True				
ANR	745620	ParameterType	struct magic_set *		745135	0					
ANR	745621	Identifier	ms		745135	1					
ANR	745622	Parameter	const char * fn	564:38:14886:14899	745135	1	True				
ANR	745623	ParameterType	const char *		745135	0					
ANR	745624	Identifier	fn		745135	1					
ANR	745625	Parameter	int action	564:54:14902:14911	745135	2	True				
ANR	745626	ParameterType	int		745135	0					
ANR	745627	Identifier	action		745135	1					
ANR	745628	CFGEntryNode	ENTRY		745135		True				
ANR	745629	CFGExitNode	EXIT		745135		True				
ANR	745630	Symbol	errs		745135						
ANR	745631	Symbol	MAGIC_SETS		745135						
ANR	745632	Symbol	MAX		745135						
ANR	745633	Symbol	ms -> mlist		745135						
ANR	745634	Symbol	apprentice_1		745135						
ANR	745635	Symbol	fn		745135						
ANR	745636	Symbol	strchr		745135						
ANR	745637	Symbol	mlist_alloc		745135						
ANR	745638	Symbol	file_err		745135						
ANR	745639	Symbol	* ms		745135						
ANR	745640	Symbol	* * ms		745135						
ANR	745641	Symbol	strlen		745135						
ANR	745642	Symbol	* * ms -> mlist		745135						
ANR	745643	Symbol	* ms -> mlist [ i ]		745135						
ANR	745644	Symbol	action		745135						
ANR	745645	Symbol	getenv		745135						
ANR	745646	Symbol	* * i		745135						
ANR	745647	Symbol	NULL		745135						
ANR	745648	Symbol	* ms -> mlist		745135						
ANR	745649	Symbol	ms		745135						
ANR	745650	Symbol	PATHSEP		745135						
ANR	745651	Symbol	* p ++		745135						
ANR	745652	Symbol	i		745135						
ANR	745653	Symbol	FILE_LOAD		745135						
ANR	745654	Symbol	* fn		745135						
ANR	745655	Symbol	p		745135						
ANR	745656	Symbol	* * * ms		745135						
ANR	745657	Symbol	* i		745135						
ANR	745658	Symbol	mfn		745135						
ANR	745659	Symbol	estrdup		745135						
ANR	745660	Symbol	magic_getpath		745135						
ANR	745661	Function	nonmagic	670:8:16981:17640							
ANR	745662	FunctionDef	nonmagic (const char * str)		745661	0					
ANR	745663	CompoundStatement		672:0:17014:17640	745661	0					
ANR	745664	IdentifierDeclStatement	const char * p ;	673:1:17017:17030	745661	0	True				
ANR	745665	IdentifierDecl	* p		745661	0					
ANR	745666	IdentifierDeclType	const char *		745661	0					
ANR	745667	Identifier	p		745661	1					
ANR	745668	IdentifierDeclStatement	size_t rv = 0 ;	674:1:17033:17046	745661	1	True				
ANR	745669	IdentifierDecl	rv = 0		745661	0					
ANR	745670	IdentifierDeclType	size_t		745661	0					
ANR	745671	Identifier	rv		745661	1					
ANR	745672	AssignmentExpression	rv = 0		745661	2		=			
ANR	745673	Identifier	rv		745661	0					
ANR	745674	PrimaryExpression	0		745661	1					
ANR	745675	ForStatement	for ( p = str ; * p ; p ++ )		745661	2					
ANR	745676	ForInit	p = str ;	676:6:17055:17062	745661	0	True				
ANR	745677	AssignmentExpression	p = str		745661	0		=			
ANR	745678	Identifier	p		745661	0					
ANR	745679	Identifier	str		745661	1					
ANR	745680	Condition	* p	676:15:17064:17065	745661	1	True				
ANR	745681	UnaryOperationExpression	* p		745661	0					
ANR	745682	UnaryOperator	*		745661	0					
ANR	745683	Identifier	p		745661	1					
ANR	745684	PostIncDecOperationExpression	p ++	676:19:17068:17070	745661	2	True				
ANR	745685	Identifier	p		745661	0					
ANR	745686	IncDec	++		745661	1					
ANR	745687	SwitchStatement	switch ( * p )		745661	3					
ANR	745688	Condition	* p	677:10:17083:17084	745661	0	True				
ANR	745689	UnaryOperationExpression	* p		745661	0					
ANR	745690	UnaryOperator	*		745661	0					
ANR	745691	Identifier	p		745661	1					
ANR	745692	CompoundStatement		6:14:72:72	745661	1					
ANR	745693	Label	case '\\\\' :	678:2:17091:17100	745661	0	True				
ANR	745694	IfStatement	if ( ! * ++ p )		745661	1					
ANR	745695	Condition	! * ++ p	679:7:17141:17145	745661	0	True				
ANR	745696	UnaryOperationExpression	! * ++ p		745661	0					
ANR	745697	UnaryOperator	!		745661	0					
ANR	745698	UnaryOperationExpression	* ++ p		745661	1					
ANR	745699	UnaryOperator	*		745661	0					
ANR	745700	UnaryExpression	++ p		745661	1					
ANR	745701	IncDec	++		745661	0					
ANR	745702	Identifier	p		745661	1					
ANR	745703	ExpressionStatement	p --	680:4:17152:17155	745661	1	True				
ANR	745704	PostIncDecOperationExpression	p --		745661	0					
ANR	745705	Identifier	p		745661	0					
ANR	745706	IncDec	--		745661	1					
ANR	745707	ExpressionStatement	rv ++	681:3:17160:17164	745661	2	True				
ANR	745708	PostIncDecOperationExpression	rv ++		745661	0					
ANR	745709	Identifier	rv		745661	0					
ANR	745710	IncDec	++		745661	1					
ANR	745711	ContinueStatement	continue ;	682:3:17169:17177	745661	3	True				
ANR	745712	Label	case '?' :	683:2:17181:17189	745661	4	True				
ANR	745713	Label	case '*' :	684:2:17224:17232	745661	5	True				
ANR	745714	Label	case '.' :	685:2:17236:17244	745661	6	True				
ANR	745715	Label	case '+' :	686:2:17248:17256	745661	7	True				
ANR	745716	Label	case '^' :	687:2:17260:17268	745661	8	True				
ANR	745717	Label	case '$' :	688:2:17272:17280	745661	9	True				
ANR	745718	ContinueStatement	continue ;	689:3:17285:17293	745661	10	True				
ANR	745719	Label	case '[' :	690:2:17297:17305	745661	11	True				
ANR	745720	WhileStatement	while ( * p && * p != ']' )		745661	12					
ANR	745721	Condition	* p && * p != ']'	691:10:17361:17375	745661	0	True				
ANR	745722	AndExpression	* p && * p != ']'		745661	0		&&			
ANR	745723	UnaryOperationExpression	* p		745661	0					
ANR	745724	UnaryOperator	*		745661	0					
ANR	745725	Identifier	p		745661	1					
ANR	745726	EqualityExpression	* p != ']'		745661	1		!=			
ANR	745727	UnaryOperationExpression	* p		745661	0					
ANR	745728	UnaryOperator	*		745661	0					
ANR	745729	Identifier	p		745661	1					
ANR	745730	PrimaryExpression	']'		745661	1					
ANR	745731	ExpressionStatement	p ++	692:4:17382:17385	745661	1	True				
ANR	745732	PostIncDecOperationExpression	p ++		745661	0					
ANR	745733	Identifier	p		745661	0					
ANR	745734	IncDec	++		745661	1					
ANR	745735	ExpressionStatement	p --	693:3:17390:17393	745661	13	True				
ANR	745736	PostIncDecOperationExpression	p --		745661	0					
ANR	745737	Identifier	p		745661	0					
ANR	745738	IncDec	--		745661	1					
ANR	745739	ContinueStatement	continue ;	694:3:17398:17406	745661	14	True				
ANR	745740	Label	case '{' :	695:2:17410:17418	745661	15	True				
ANR	745741	WhileStatement	while ( * p && * p != '}' )		745661	16					
ANR	745742	Condition	* p && * p != '}'	696:10:17463:17477	745661	0	True				
ANR	745743	AndExpression	* p && * p != '}'		745661	0		&&			
ANR	745744	UnaryOperationExpression	* p		745661	0					
ANR	745745	UnaryOperator	*		745661	0					
ANR	745746	Identifier	p		745661	1					
ANR	745747	EqualityExpression	* p != '}'		745661	1		!=			
ANR	745748	UnaryOperationExpression	* p		745661	0					
ANR	745749	UnaryOperator	*		745661	0					
ANR	745750	Identifier	p		745661	1					
ANR	745751	PrimaryExpression	'}'		745661	1					
ANR	745752	ExpressionStatement	p ++	697:4:17484:17487	745661	1	True				
ANR	745753	PostIncDecOperationExpression	p ++		745661	0					
ANR	745754	Identifier	p		745661	0					
ANR	745755	IncDec	++		745661	1					
ANR	745756	IfStatement	if ( ! * p )		745661	17					
ANR	745757	Condition	! * p	698:7:17496:17498	745661	0	True				
ANR	745758	UnaryOperationExpression	! * p		745661	0					
ANR	745759	UnaryOperator	!		745661	0					
ANR	745760	UnaryOperationExpression	* p		745661	1					
ANR	745761	UnaryOperator	*		745661	0					
ANR	745762	Identifier	p		745661	1					
ANR	745763	ExpressionStatement	p --	699:4:17505:17508	745661	1	True				
ANR	745764	PostIncDecOperationExpression	p --		745661	0					
ANR	745765	Identifier	p		745661	0					
ANR	745766	IncDec	--		745661	1					
ANR	745767	ContinueStatement	continue ;	700:3:17513:17521	745661	18	True				
ANR	745768	Label	default :	701:2:17525:17532	745661	19	True				
ANR	745769	Identifier	default		745661	0					
ANR	745770	ExpressionStatement	rv ++	702:3:17566:17570	745661	20	True				
ANR	745771	PostIncDecOperationExpression	rv ++		745661	0					
ANR	745772	Identifier	rv		745661	0					
ANR	745773	IncDec	++		745661	1					
ANR	745774	ContinueStatement	continue ;	703:3:17575:17583	745661	21	True				
ANR	745775	ReturnStatement	return rv == 0 ? 1 : rv ;	706:1:17591:17614	745661	3	True				
ANR	745776	ConditionalExpression	rv == 0 ? 1 : rv		745661	0					
ANR	745777	Condition	rv == 0		745661	0					
ANR	745778	EqualityExpression	rv == 0		745661	0		==			
ANR	745779	Identifier	rv		745661	0					
ANR	745780	PrimaryExpression	0		745661	1					
ANR	745781	PrimaryExpression	1		745661	1					
ANR	745782	Identifier	rv		745661	2					
ANR	745783	ReturnType	size_t		745661	1					
ANR	745784	Identifier	nonmagic		745661	2					
ANR	745785	ParameterList	const char * str		745661	3					
ANR	745786	Parameter	const char * str	671:9:16997:17011	745661	0	True				
ANR	745787	ParameterType	const char *		745661	0					
ANR	745788	Identifier	str		745661	1					
ANR	745789	CFGEntryNode	ENTRY		745661		True				
ANR	745790	CFGExitNode	EXIT		745661		True				
ANR	745791	Symbol	str		745661						
ANR	745792	Symbol	p		745661						
ANR	745793	Symbol	rv		745661						
ANR	745794	Symbol	* ++ p		745661						
ANR	745795	Symbol	* p		745661						
ANR	745796	Function	apprentice_magic_strength	712:8:17715:20273							
ANR	745797	FunctionDef	apprentice_magic_strength (const struct magic * m)		745796	0					
ANR	745798	CompoundStatement		714:0:17771:20273	745796	0					
ANR	745799	Statement	define	715:1:17774:17779	745796	0	True				
ANR	745800	Statement	MULT	715:8:17781:17784	745796	1	True				
ANR	745801	Statement	10	715:13:17786:17787	745796	2	True				
ANR	745802	IdentifierDeclStatement	"size_t v , val = 2 * MULT ;"	716:1:17790:17814	745796	3	True				
ANR	745803	IdentifierDecl	v		745796	0					
ANR	745804	IdentifierDeclType	size_t		745796	0					
ANR	745805	Identifier	v		745796	1					
ANR	745806	IdentifierDecl	val = 2 * MULT		745796	1					
ANR	745807	IdentifierDeclType	size_t		745796	0					
ANR	745808	Identifier	val		745796	1					
ANR	745809	AssignmentExpression	val = 2 * MULT		745796	2		=			
ANR	745810	Identifier	val		745796	0					
ANR	745811	MultiplicativeExpression	2 * MULT		745796	1		*			
ANR	745812	PrimaryExpression	2		745796	0					
ANR	745813	Identifier	MULT		745796	1					
ANR	745814	SwitchStatement	switch ( m -> type )		745796	4					
ANR	745815	Condition	m -> type	718:9:17850:17856	745796	0	True				
ANR	745816	PtrMemberAccess	m -> type		745796	0					
ANR	745817	Identifier	m		745796	0					
ANR	745818	Identifier	type		745796	1					
ANR	745819	CompoundStatement		5:18:87:87	745796	1					
ANR	745820	Label	case FILE_DEFAULT :	719:1:17862:17879	745796	0	True				
ANR	745821	Identifier	FILE_DEFAULT		745796	0					
ANR	745822	IfStatement	if ( m -> factor_op != FILE_FACTOR_OP_NONE )		745796	1					
ANR	745823	Condition	m -> factor_op != FILE_FACTOR_OP_NONE	720:6:17919:17953	745796	0	True				
ANR	745824	EqualityExpression	m -> factor_op != FILE_FACTOR_OP_NONE		745796	0		!=			
ANR	745825	PtrMemberAccess	m -> factor_op		745796	0					
ANR	745826	Identifier	m		745796	0					
ANR	745827	Identifier	factor_op		745796	1					
ANR	745828	Identifier	FILE_FACTOR_OP_NONE		745796	1					
ANR	745829	ExpressionStatement	abort ( )	721:3:17959:17966	745796	1	True				
ANR	745830	CallExpression	abort ( )		745796	0					
ANR	745831	Callee	abort		745796	0					
ANR	745832	Identifier	abort		745796	0					
ANR	745833	ArgumentList			745796	1					
ANR	745834	ReturnStatement	return 0 ;	722:2:17970:17978	745796	2	True				
ANR	745835	PrimaryExpression	0		745796	0					
ANR	745836	Label	case FILE_BYTE :	724:1:17982:17996	745796	3	True				
ANR	745837	Identifier	FILE_BYTE		745796	0					
ANR	745838	ExpressionStatement	val += 1 * MULT	725:2:18000:18015	745796	4	True				
ANR	745839	AssignmentExpression	val += 1 * MULT		745796	0		+=			
ANR	745840	Identifier	val		745796	0					
ANR	745841	MultiplicativeExpression	1 * MULT		745796	1		*			
ANR	745842	PrimaryExpression	1		745796	0					
ANR	745843	Identifier	MULT		745796	1					
ANR	745844	BreakStatement	break ;	726:2:18019:18024	745796	5	True				
ANR	745845	Label	case FILE_SHORT :	728:1:18028:18043	745796	6	True				
ANR	745846	Identifier	FILE_SHORT		745796	0					
ANR	745847	Label	case FILE_LESHORT :	729:1:18046:18063	745796	7	True				
ANR	745848	Identifier	FILE_LESHORT		745796	0					
ANR	745849	Label	case FILE_BESHORT :	730:1:18066:18083	745796	8	True				
ANR	745850	Identifier	FILE_BESHORT		745796	0					
ANR	745851	ExpressionStatement	val += 2 * MULT	731:2:18087:18102	745796	9	True				
ANR	745852	AssignmentExpression	val += 2 * MULT		745796	0		+=			
ANR	745853	Identifier	val		745796	0					
ANR	745854	MultiplicativeExpression	2 * MULT		745796	1		*			
ANR	745855	PrimaryExpression	2		745796	0					
ANR	745856	Identifier	MULT		745796	1					
ANR	745857	BreakStatement	break ;	732:2:18106:18111	745796	10	True				
ANR	745858	Label	case FILE_LONG :	734:1:18115:18129	745796	11	True				
ANR	745859	Identifier	FILE_LONG		745796	0					
ANR	745860	Label	case FILE_LELONG :	735:1:18132:18148	745796	12	True				
ANR	745861	Identifier	FILE_LELONG		745796	0					
ANR	745862	Label	case FILE_BELONG :	736:1:18151:18167	745796	13	True				
ANR	745863	Identifier	FILE_BELONG		745796	0					
ANR	745864	Label	case FILE_MELONG :	737:1:18170:18186	745796	14	True				
ANR	745865	Identifier	FILE_MELONG		745796	0					
ANR	745866	ExpressionStatement	val += 4 * MULT	738:2:18190:18205	745796	15	True				
ANR	745867	AssignmentExpression	val += 4 * MULT		745796	0		+=			
ANR	745868	Identifier	val		745796	0					
ANR	745869	MultiplicativeExpression	4 * MULT		745796	1		*			
ANR	745870	PrimaryExpression	4		745796	0					
ANR	745871	Identifier	MULT		745796	1					
ANR	745872	BreakStatement	break ;	739:2:18209:18214	745796	16	True				
ANR	745873	Label	case FILE_PSTRING :	741:1:18218:18235	745796	17	True				
ANR	745874	Identifier	FILE_PSTRING		745796	0					
ANR	745875	Label	case FILE_STRING :	742:1:18238:18254	745796	18	True				
ANR	745876	Identifier	FILE_STRING		745796	0					
ANR	745877	ExpressionStatement	val += m -> vallen * MULT	743:2:18258:18281	745796	19	True				
ANR	745878	AssignmentExpression	val += m -> vallen * MULT		745796	0		+=			
ANR	745879	Identifier	val		745796	0					
ANR	745880	MultiplicativeExpression	m -> vallen * MULT		745796	1		*			
ANR	745881	PtrMemberAccess	m -> vallen		745796	0					
ANR	745882	Identifier	m		745796	0					
ANR	745883	Identifier	vallen		745796	1					
ANR	745884	Identifier	MULT		745796	1					
ANR	745885	BreakStatement	break ;	744:2:18285:18290	745796	20	True				
ANR	745886	Label	case FILE_BESTRING16 :	746:1:18294:18314	745796	21	True				
ANR	745887	Identifier	FILE_BESTRING16		745796	0					
ANR	745888	Label	case FILE_LESTRING16 :	747:1:18317:18337	745796	22	True				
ANR	745889	Identifier	FILE_LESTRING16		745796	0					
ANR	745890	ExpressionStatement	val += m -> vallen * MULT / 2	748:2:18341:18368	745796	23	True				
ANR	745891	AssignmentExpression	val += m -> vallen * MULT / 2		745796	0		+=			
ANR	745892	Identifier	val		745796	0					
ANR	745893	MultiplicativeExpression	m -> vallen * MULT / 2		745796	1		*			
ANR	745894	PtrMemberAccess	m -> vallen		745796	0					
ANR	745895	Identifier	m		745796	0					
ANR	745896	Identifier	vallen		745796	1					
ANR	745897	MultiplicativeExpression	MULT / 2		745796	1		/			
ANR	745898	Identifier	MULT		745796	0					
ANR	745899	PrimaryExpression	2		745796	1					
ANR	745900	BreakStatement	break ;	749:2:18372:18377	745796	24	True				
ANR	745901	Label	case FILE_SEARCH :	751:1:18381:18397	745796	25	True				
ANR	745902	Identifier	FILE_SEARCH		745796	0					
ANR	745903	ExpressionStatement	"val += m -> vallen * MAX ( MULT / m -> vallen , 1 )"	752:2:18401:18444	745796	26	True				
ANR	745904	AssignmentExpression	"val += m -> vallen * MAX ( MULT / m -> vallen , 1 )"		745796	0		+=			
ANR	745905	Identifier	val		745796	0					
ANR	745906	MultiplicativeExpression	"m -> vallen * MAX ( MULT / m -> vallen , 1 )"		745796	1		*			
ANR	745907	PtrMemberAccess	m -> vallen		745796	0					
ANR	745908	Identifier	m		745796	0					
ANR	745909	Identifier	vallen		745796	1					
ANR	745910	CallExpression	"MAX ( MULT / m -> vallen , 1 )"		745796	1					
ANR	745911	Callee	MAX		745796	0					
ANR	745912	Identifier	MAX		745796	0					
ANR	745913	ArgumentList	MULT / m -> vallen		745796	1					
ANR	745914	Argument	MULT / m -> vallen		745796	0					
ANR	745915	MultiplicativeExpression	MULT / m -> vallen		745796	0		/			
ANR	745916	Identifier	MULT		745796	0					
ANR	745917	PtrMemberAccess	m -> vallen		745796	1					
ANR	745918	Identifier	m		745796	0					
ANR	745919	Identifier	vallen		745796	1					
ANR	745920	Argument	1		745796	1					
ANR	745921	PrimaryExpression	1		745796	0					
ANR	745922	BreakStatement	break ;	753:2:18448:18453	745796	27	True				
ANR	745923	Label	case FILE_REGEX :	755:1:18457:18472	745796	28	True				
ANR	745924	Identifier	FILE_REGEX		745796	0					
ANR	745925	ExpressionStatement	v = nonmagic ( m -> value . s )	756:2:18476:18500	745796	29	True				
ANR	745926	AssignmentExpression	v = nonmagic ( m -> value . s )		745796	0		=			
ANR	745927	Identifier	v		745796	0					
ANR	745928	CallExpression	nonmagic ( m -> value . s )		745796	1					
ANR	745929	Callee	nonmagic		745796	0					
ANR	745930	Identifier	nonmagic		745796	0					
ANR	745931	ArgumentList	m -> value . s		745796	1					
ANR	745932	Argument	m -> value . s		745796	0					
ANR	745933	MemberAccess	m -> value . s		745796	0					
ANR	745934	PtrMemberAccess	m -> value		745796	0					
ANR	745935	Identifier	m		745796	0					
ANR	745936	Identifier	value		745796	1					
ANR	745937	Identifier	s		745796	1					
ANR	745938	ExpressionStatement	"val += v * MAX ( MULT / v , 1 )"	757:2:18504:18531	745796	30	True				
ANR	745939	AssignmentExpression	"val += v * MAX ( MULT / v , 1 )"		745796	0		+=			
ANR	745940	Identifier	val		745796	0					
ANR	745941	MultiplicativeExpression	"v * MAX ( MULT / v , 1 )"		745796	1		*			
ANR	745942	Identifier	v		745796	0					
ANR	745943	CallExpression	"MAX ( MULT / v , 1 )"		745796	1					
ANR	745944	Callee	MAX		745796	0					
ANR	745945	Identifier	MAX		745796	0					
ANR	745946	ArgumentList	MULT / v		745796	1					
ANR	745947	Argument	MULT / v		745796	0					
ANR	745948	MultiplicativeExpression	MULT / v		745796	0		/			
ANR	745949	Identifier	MULT		745796	0					
ANR	745950	Identifier	v		745796	1					
ANR	745951	Argument	1		745796	1					
ANR	745952	PrimaryExpression	1		745796	0					
ANR	745953	BreakStatement	break ;	758:2:18535:18540	745796	31	True				
ANR	745954	Label	case FILE_DATE :	760:1:18544:18558	745796	32	True				
ANR	745955	Identifier	FILE_DATE		745796	0					
ANR	745956	Label	case FILE_LEDATE :	761:1:18561:18577	745796	33	True				
ANR	745957	Identifier	FILE_LEDATE		745796	0					
ANR	745958	Label	case FILE_BEDATE :	762:1:18580:18596	745796	34	True				
ANR	745959	Identifier	FILE_BEDATE		745796	0					
ANR	745960	Label	case FILE_MEDATE :	763:1:18599:18615	745796	35	True				
ANR	745961	Identifier	FILE_MEDATE		745796	0					
ANR	745962	Label	case FILE_LDATE :	764:1:18618:18633	745796	36	True				
ANR	745963	Identifier	FILE_LDATE		745796	0					
ANR	745964	Label	case FILE_LELDATE :	765:1:18636:18653	745796	37	True				
ANR	745965	Identifier	FILE_LELDATE		745796	0					
ANR	745966	Label	case FILE_BELDATE :	766:1:18656:18673	745796	38	True				
ANR	745967	Identifier	FILE_BELDATE		745796	0					
ANR	745968	Label	case FILE_MELDATE :	767:1:18676:18693	745796	39	True				
ANR	745969	Identifier	FILE_MELDATE		745796	0					
ANR	745970	Label	case FILE_FLOAT :	768:1:18696:18711	745796	40	True				
ANR	745971	Identifier	FILE_FLOAT		745796	0					
ANR	745972	Label	case FILE_BEFLOAT :	769:1:18714:18731	745796	41	True				
ANR	745973	Identifier	FILE_BEFLOAT		745796	0					
ANR	745974	Label	case FILE_LEFLOAT :	770:1:18734:18751	745796	42	True				
ANR	745975	Identifier	FILE_LEFLOAT		745796	0					
ANR	745976	ExpressionStatement	val += 4 * MULT	771:2:18755:18770	745796	43	True				
ANR	745977	AssignmentExpression	val += 4 * MULT		745796	0		+=			
ANR	745978	Identifier	val		745796	0					
ANR	745979	MultiplicativeExpression	4 * MULT		745796	1		*			
ANR	745980	PrimaryExpression	4		745796	0					
ANR	745981	Identifier	MULT		745796	1					
ANR	745982	BreakStatement	break ;	772:2:18774:18779	745796	44	True				
ANR	745983	Label	case FILE_QUAD :	774:1:18783:18797	745796	45	True				
ANR	745984	Identifier	FILE_QUAD		745796	0					
ANR	745985	Label	case FILE_BEQUAD :	775:1:18800:18816	745796	46	True				
ANR	745986	Identifier	FILE_BEQUAD		745796	0					
ANR	745987	Label	case FILE_LEQUAD :	776:1:18819:18835	745796	47	True				
ANR	745988	Identifier	FILE_LEQUAD		745796	0					
ANR	745989	Label	case FILE_QDATE :	777:1:18838:18853	745796	48	True				
ANR	745990	Identifier	FILE_QDATE		745796	0					
ANR	745991	Label	case FILE_LEQDATE :	778:1:18856:18873	745796	49	True				
ANR	745992	Identifier	FILE_LEQDATE		745796	0					
ANR	745993	Label	case FILE_BEQDATE :	779:1:18876:18893	745796	50	True				
ANR	745994	Identifier	FILE_BEQDATE		745796	0					
ANR	745995	Label	case FILE_QLDATE :	780:1:18896:18912	745796	51	True				
ANR	745996	Identifier	FILE_QLDATE		745796	0					
ANR	745997	Label	case FILE_LEQLDATE :	781:1:18915:18933	745796	52	True				
ANR	745998	Identifier	FILE_LEQLDATE		745796	0					
ANR	745999	Label	case FILE_BEQLDATE :	782:1:18936:18954	745796	53	True				
ANR	746000	Identifier	FILE_BEQLDATE		745796	0					
ANR	746001	Label	case FILE_QWDATE :	783:1:18957:18973	745796	54	True				
ANR	746002	Identifier	FILE_QWDATE		745796	0					
ANR	746003	Label	case FILE_LEQWDATE :	784:1:18976:18994	745796	55	True				
ANR	746004	Identifier	FILE_LEQWDATE		745796	0					
ANR	746005	Label	case FILE_BEQWDATE :	785:1:18997:19015	745796	56	True				
ANR	746006	Identifier	FILE_BEQWDATE		745796	0					
ANR	746007	Label	case FILE_DOUBLE :	786:1:19018:19034	745796	57	True				
ANR	746008	Identifier	FILE_DOUBLE		745796	0					
ANR	746009	Label	case FILE_BEDOUBLE :	787:1:19037:19055	745796	58	True				
ANR	746010	Identifier	FILE_BEDOUBLE		745796	0					
ANR	746011	Label	case FILE_LEDOUBLE :	788:1:19058:19076	745796	59	True				
ANR	746012	Identifier	FILE_LEDOUBLE		745796	0					
ANR	746013	ExpressionStatement	val += 8 * MULT	789:2:19080:19095	745796	60	True				
ANR	746014	AssignmentExpression	val += 8 * MULT		745796	0		+=			
ANR	746015	Identifier	val		745796	0					
ANR	746016	MultiplicativeExpression	8 * MULT		745796	1		*			
ANR	746017	PrimaryExpression	8		745796	0					
ANR	746018	Identifier	MULT		745796	1					
ANR	746019	BreakStatement	break ;	790:2:19099:19104	745796	61	True				
ANR	746020	Label	case FILE_INDIRECT :	792:1:19108:19126	745796	62	True				
ANR	746021	Identifier	FILE_INDIRECT		745796	0					
ANR	746022	Label	case FILE_NAME :	793:1:19129:19143	745796	63	True				
ANR	746023	Identifier	FILE_NAME		745796	0					
ANR	746024	Label	case FILE_USE :	794:1:19146:19159	745796	64	True				
ANR	746025	Identifier	FILE_USE		745796	0					
ANR	746026	BreakStatement	break ;	795:2:19163:19168	745796	65	True				
ANR	746027	Label	default :	797:1:19172:19179	745796	66	True				
ANR	746028	Identifier	default		745796	0					
ANR	746029	ExpressionStatement	"( void ) fprintf ( stderr , ""Bad type %d\\n"" , m -> type )"	798:2:19183:19230	745796	67	True				
ANR	746030	CastExpression	"( void ) fprintf ( stderr , ""Bad type %d\\n"" , m -> type )"		745796	0					
ANR	746031	CastTarget	void		745796	0					
ANR	746032	CallExpression	"fprintf ( stderr , ""Bad type %d\\n"" , m -> type )"		745796	1					
ANR	746033	Callee	fprintf		745796	0					
ANR	746034	Identifier	fprintf		745796	0					
ANR	746035	ArgumentList	stderr		745796	1					
ANR	746036	Argument	stderr		745796	0					
ANR	746037	Identifier	stderr		745796	0					
ANR	746038	Argument	"""Bad type %d\\n"""		745796	1					
ANR	746039	PrimaryExpression	"""Bad type %d\\n"""		745796	0					
ANR	746040	Argument	m -> type		745796	2					
ANR	746041	PtrMemberAccess	m -> type		745796	0					
ANR	746042	Identifier	m		745796	0					
ANR	746043	Identifier	type		745796	1					
ANR	746044	ExpressionStatement	abort ( )	799:2:19234:19241	745796	68	True				
ANR	746045	CallExpression	abort ( )		745796	0					
ANR	746046	Callee	abort		745796	0					
ANR	746047	Identifier	abort		745796	0					
ANR	746048	ArgumentList			745796	1					
ANR	746049	SwitchStatement	switch ( m -> reln )		745796	5					
ANR	746050	Condition	m -> reln	802:9:19256:19262	745796	0	True				
ANR	746051	PtrMemberAccess	m -> reln		745796	0					
ANR	746052	Identifier	m		745796	0					
ANR	746053	Identifier	reln		745796	1					
ANR	746054	CompoundStatement		89:18:1493:1493	745796	1					
ANR	746055	Label	case 'x' :	803:1:19268:19276	745796	0	True				
ANR	746056	Label	case '!' :	804:1:19311:19319	745796	1	True				
ANR	746057	ExpressionStatement	val = 0	805:2:19368:19375	745796	2	True				
ANR	746058	AssignmentExpression	val = 0		745796	0		=			
ANR	746059	Identifier	val		745796	0					
ANR	746060	PrimaryExpression	0		745796	1					
ANR	746061	BreakStatement	break ;	806:2:19379:19384	745796	3	True				
ANR	746062	Label	case '=' :	808:1:19388:19396	745796	4	True				
ANR	746063	ExpressionStatement	val += MULT	809:2:19426:19437	745796	5	True				
ANR	746064	AssignmentExpression	val += MULT		745796	0		+=			
ANR	746065	Identifier	val		745796	0					
ANR	746066	Identifier	MULT		745796	1					
ANR	746067	BreakStatement	break ;	810:2:19441:19446	745796	6	True				
ANR	746068	Label	case '>' :	812:1:19450:19458	745796	7	True				
ANR	746069	Label	case '<' :	813:1:19461:19469	745796	8	True				
ANR	746070	ExpressionStatement	val -= 2 * MULT	814:2:19512:19527	745796	9	True				
ANR	746071	AssignmentExpression	val -= 2 * MULT		745796	0		-=			
ANR	746072	Identifier	val		745796	0					
ANR	746073	MultiplicativeExpression	2 * MULT		745796	1		*			
ANR	746074	PrimaryExpression	2		745796	0					
ANR	746075	Identifier	MULT		745796	1					
ANR	746076	BreakStatement	break ;	815:2:19531:19536	745796	10	True				
ANR	746077	Label	case '^' :	817:1:19540:19548	745796	11	True				
ANR	746078	Label	case '&' :	818:1:19551:19559	745796	12	True				
ANR	746079	ExpressionStatement	val -= MULT	819:2:19607:19618	745796	13	True				
ANR	746080	AssignmentExpression	val -= MULT		745796	0		-=			
ANR	746081	Identifier	val		745796	0					
ANR	746082	Identifier	MULT		745796	1					
ANR	746083	BreakStatement	break ;	820:2:19622:19627	745796	14	True				
ANR	746084	Label	default :	822:1:19631:19638	745796	15	True				
ANR	746085	Identifier	default		745796	0					
ANR	746086	ExpressionStatement	"( void ) fprintf ( stderr , ""Bad relation %c\\n"" , m -> reln )"	823:2:19642:19693	745796	16	True				
ANR	746087	CastExpression	"( void ) fprintf ( stderr , ""Bad relation %c\\n"" , m -> reln )"		745796	0					
ANR	746088	CastTarget	void		745796	0					
ANR	746089	CallExpression	"fprintf ( stderr , ""Bad relation %c\\n"" , m -> reln )"		745796	1					
ANR	746090	Callee	fprintf		745796	0					
ANR	746091	Identifier	fprintf		745796	0					
ANR	746092	ArgumentList	stderr		745796	1					
ANR	746093	Argument	stderr		745796	0					
ANR	746094	Identifier	stderr		745796	0					
ANR	746095	Argument	"""Bad relation %c\\n"""		745796	1					
ANR	746096	PrimaryExpression	"""Bad relation %c\\n"""		745796	0					
ANR	746097	Argument	m -> reln		745796	2					
ANR	746098	PtrMemberAccess	m -> reln		745796	0					
ANR	746099	Identifier	m		745796	0					
ANR	746100	Identifier	reln		745796	1					
ANR	746101	ExpressionStatement	abort ( )	824:2:19697:19704	745796	17	True				
ANR	746102	CallExpression	abort ( )		745796	0					
ANR	746103	Callee	abort		745796	0					
ANR	746104	Identifier	abort		745796	0					
ANR	746105	ArgumentList			745796	1					
ANR	746106	IfStatement	if ( val == 0 )		745796	6					
ANR	746107	Condition	val == 0	827:5:19715:19722	745796	0	True				
ANR	746108	EqualityExpression	val == 0		745796	0		==			
ANR	746109	Identifier	val		745796	0					
ANR	746110	PrimaryExpression	0		745796	1					
ANR	746111	ExpressionStatement	val = 1	828:2:19774:19781	745796	1	True				
ANR	746112	AssignmentExpression	val = 1		745796	0		=			
ANR	746113	Identifier	val		745796	0					
ANR	746114	PrimaryExpression	1		745796	1					
ANR	746115	SwitchStatement	switch ( m -> factor_op )		745796	7					
ANR	746116	Condition	m -> factor_op	830:9:19793:19804	745796	0	True				
ANR	746117	PtrMemberAccess	m -> factor_op		745796	0					
ANR	746118	Identifier	m		745796	0					
ANR	746119	Identifier	factor_op		745796	1					
ANR	746120	CompoundStatement		117:23:2035:2035	745796	1					
ANR	746121	Label	case FILE_FACTOR_OP_NONE :	831:1:19810:19834	745796	0	True				
ANR	746122	Identifier	FILE_FACTOR_OP_NONE		745796	0					
ANR	746123	BreakStatement	break ;	832:2:19838:19843	745796	1	True				
ANR	746124	Label	case FILE_FACTOR_OP_PLUS :	833:1:19846:19870	745796	2	True				
ANR	746125	Identifier	FILE_FACTOR_OP_PLUS		745796	0					
ANR	746126	ExpressionStatement	val += m -> factor	834:2:19874:19890	745796	3	True				
ANR	746127	AssignmentExpression	val += m -> factor		745796	0		+=			
ANR	746128	Identifier	val		745796	0					
ANR	746129	PtrMemberAccess	m -> factor		745796	1					
ANR	746130	Identifier	m		745796	0					
ANR	746131	Identifier	factor		745796	1					
ANR	746132	BreakStatement	break ;	835:2:19894:19899	745796	4	True				
ANR	746133	Label	case FILE_FACTOR_OP_MINUS :	836:1:19902:19927	745796	5	True				
ANR	746134	Identifier	FILE_FACTOR_OP_MINUS		745796	0					
ANR	746135	ExpressionStatement	val -= m -> factor	837:2:19931:19947	745796	6	True				
ANR	746136	AssignmentExpression	val -= m -> factor		745796	0		-=			
ANR	746137	Identifier	val		745796	0					
ANR	746138	PtrMemberAccess	m -> factor		745796	1					
ANR	746139	Identifier	m		745796	0					
ANR	746140	Identifier	factor		745796	1					
ANR	746141	BreakStatement	break ;	838:2:19951:19956	745796	7	True				
ANR	746142	Label	case FILE_FACTOR_OP_TIMES :	839:1:19959:19984	745796	8	True				
ANR	746143	Identifier	FILE_FACTOR_OP_TIMES		745796	0					
ANR	746144	ExpressionStatement	val *= m -> factor	840:2:19988:20004	745796	9	True				
ANR	746145	AssignmentExpression	val *= m -> factor		745796	0		*=			
ANR	746146	Identifier	val		745796	0					
ANR	746147	PtrMemberAccess	m -> factor		745796	1					
ANR	746148	Identifier	m		745796	0					
ANR	746149	Identifier	factor		745796	1					
ANR	746150	BreakStatement	break ;	841:2:20008:20013	745796	10	True				
ANR	746151	Label	case FILE_FACTOR_OP_DIV :	842:1:20016:20039	745796	11	True				
ANR	746152	Identifier	FILE_FACTOR_OP_DIV		745796	0					
ANR	746153	ExpressionStatement	val /= m -> factor	843:2:20043:20059	745796	12	True				
ANR	746154	AssignmentExpression	val /= m -> factor		745796	0		/=			
ANR	746155	Identifier	val		745796	0					
ANR	746156	PtrMemberAccess	m -> factor		745796	1					
ANR	746157	Identifier	m		745796	0					
ANR	746158	Identifier	factor		745796	1					
ANR	746159	BreakStatement	break ;	844:2:20063:20068	745796	13	True				
ANR	746160	Label	default :	845:1:20071:20078	745796	14	True				
ANR	746161	Identifier	default		745796	0					
ANR	746162	ExpressionStatement	abort ( )	846:2:20082:20089	745796	15	True				
ANR	746163	CallExpression	abort ( )		745796	0					
ANR	746164	Callee	abort		745796	0					
ANR	746165	Identifier	abort		745796	0					
ANR	746166	ArgumentList			745796	1					
ANR	746167	IfStatement	if ( m -> desc [ 0 ] == '\\0' )		745796	8					
ANR	746168	Condition	m -> desc [ 0 ] == '\\0'	853:5:20231:20248	745796	0	True				
ANR	746169	EqualityExpression	m -> desc [ 0 ] == '\\0'		745796	0		==			
ANR	746170	ArrayIndexing	m -> desc [ 0 ]		745796	0					
ANR	746171	PtrMemberAccess	m -> desc		745796	0					
ANR	746172	Identifier	m		745796	0					
ANR	746173	Identifier	desc		745796	1					
ANR	746174	PrimaryExpression	0		745796	1					
ANR	746175	PrimaryExpression	'\\0'		745796	1					
ANR	746176	ExpressionStatement	val ++	854:2:20253:20258	745796	1	True				
ANR	746177	PostIncDecOperationExpression	val ++		745796	0					
ANR	746178	Identifier	val		745796	0					
ANR	746179	IncDec	++		745796	1					
ANR	746180	ReturnStatement	return val ;	855:1:20261:20271	745796	9	True				
ANR	746181	Identifier	val		745796	0					
ANR	746182	ReturnType	size_t		745796	1					
ANR	746183	Identifier	apprentice_magic_strength		745796	2					
ANR	746184	ParameterList	const struct magic * m		745796	3					
ANR	746185	Parameter	const struct magic * m	713:26:17748:17768	745796	0	True				
ANR	746186	ParameterType	const struct magic *		745796	0					
ANR	746187	Identifier	m		745796	1					
ANR	746188	CFGEntryNode	ENTRY		745796		True				
ANR	746189	CFGExitNode	EXIT		745796		True				
ANR	746190	Symbol	val		745796						
ANR	746191	Symbol	m -> value		745796						
ANR	746192	Symbol	* m -> desc		745796						
ANR	746193	Symbol	MAX		745796						
ANR	746194	Symbol	m -> factor_op		745796						
ANR	746195	Symbol	m -> value . s		745796						
ANR	746196	Symbol	FILE_FACTOR_OP_NONE		745796						
ANR	746197	Symbol	stderr		745796						
ANR	746198	Symbol	m		745796						
ANR	746199	Symbol	m -> type		745796						
ANR	746200	Symbol	m -> factor		745796						
ANR	746201	Symbol	m -> desc		745796						
ANR	746202	Symbol	MULT		745796						
ANR	746203	Symbol	v		745796						
ANR	746204	Symbol	* m		745796						
ANR	746205	Symbol	nonmagic		745796						
ANR	746206	Symbol	m -> reln		745796						
ANR	746207	Symbol	m -> vallen		745796						
ANR	746208	Symbol	* * m		745796						
ANR	746209	Function	apprentice_sort	861:8:20363:20726							
ANR	746210	FunctionDef	"apprentice_sort (const void * a , const void * b)"		746209	0					
ANR	746211	CompoundStatement		863:0:20413:20726	746209	0					
ANR	746212	Statement	const	864:1:20416:20420	746209	0	True				
ANR	746213	Statement	struct	864:7:20422:20427	746209	1	True				
ANR	746214	Statement	magic_entry	864:14:20429:20439	746209	2	True				
ANR	746215	Statement	*	864:26:20441:20441	746209	3	True				
ANR	746216	Statement	ma	864:27:20442:20443	746209	4	True				
ANR	746217	Statement	=	864:30:20445:20445	746209	5	True				
ANR	746218	Statement	CAST	864:32:20447:20450	746209	6	True				
ANR	746219	Statement	(	864:36:20451:20451	746209	7	True				
ANR	746220	Statement	const	864:37:20452:20456	746209	8	True				
ANR	746221	Statement	struct	864:43:20458:20463	746209	9	True				
ANR	746222	Statement	magic_entry	864:50:20465:20475	746209	10	True				
ANR	746223	Statement	*	864:62:20477:20477	746209	11	True				
ANR	746224	Statement	","	864:63:20478:20478	746209	12	True				
ANR	746225	Statement	a	864:65:20480:20480	746209	13	True				
ANR	746226	Statement	)	864:66:20481:20481	746209	14	True				
ANR	746227	ExpressionStatement		864:67:20482:20482	746209	15	True				
ANR	746228	Statement	const	865:1:20485:20489	746209	16	True				
ANR	746229	Statement	struct	865:7:20491:20496	746209	17	True				
ANR	746230	Statement	magic_entry	865:14:20498:20508	746209	18	True				
ANR	746231	Statement	*	865:26:20510:20510	746209	19	True				
ANR	746232	Statement	mb	865:27:20511:20512	746209	20	True				
ANR	746233	Statement	=	865:30:20514:20514	746209	21	True				
ANR	746234	Statement	CAST	865:32:20516:20519	746209	22	True				
ANR	746235	Statement	(	865:36:20520:20520	746209	23	True				
ANR	746236	Statement	const	865:37:20521:20525	746209	24	True				
ANR	746237	Statement	struct	865:43:20527:20532	746209	25	True				
ANR	746238	Statement	magic_entry	865:50:20534:20544	746209	26	True				
ANR	746239	Statement	*	865:62:20546:20546	746209	27	True				
ANR	746240	Statement	","	865:63:20547:20547	746209	28	True				
ANR	746241	Statement	b	865:65:20549:20549	746209	29	True				
ANR	746242	Statement	)	865:66:20550:20550	746209	30	True				
ANR	746243	ExpressionStatement		865:67:20551:20551	746209	31	True				
ANR	746244	IdentifierDeclStatement	size_t sa = apprentice_magic_strength ( ma -> mp ) ;	866:1:20554:20599	746209	32	True				
ANR	746245	IdentifierDecl	sa = apprentice_magic_strength ( ma -> mp )		746209	0					
ANR	746246	IdentifierDeclType	size_t		746209	0					
ANR	746247	Identifier	sa		746209	1					
ANR	746248	AssignmentExpression	sa = apprentice_magic_strength ( ma -> mp )		746209	2		=			
ANR	746249	Identifier	sa		746209	0					
ANR	746250	CallExpression	apprentice_magic_strength ( ma -> mp )		746209	1					
ANR	746251	Callee	apprentice_magic_strength		746209	0					
ANR	746252	Identifier	apprentice_magic_strength		746209	0					
ANR	746253	ArgumentList	ma -> mp		746209	1					
ANR	746254	Argument	ma -> mp		746209	0					
ANR	746255	PtrMemberAccess	ma -> mp		746209	0					
ANR	746256	Identifier	ma		746209	0					
ANR	746257	Identifier	mp		746209	1					
ANR	746258	IdentifierDeclStatement	size_t sb = apprentice_magic_strength ( mb -> mp ) ;	867:1:20602:20647	746209	33	True				
ANR	746259	IdentifierDecl	sb = apprentice_magic_strength ( mb -> mp )		746209	0					
ANR	746260	IdentifierDeclType	size_t		746209	0					
ANR	746261	Identifier	sb		746209	1					
ANR	746262	AssignmentExpression	sb = apprentice_magic_strength ( mb -> mp )		746209	2		=			
ANR	746263	Identifier	sb		746209	0					
ANR	746264	CallExpression	apprentice_magic_strength ( mb -> mp )		746209	1					
ANR	746265	Callee	apprentice_magic_strength		746209	0					
ANR	746266	Identifier	apprentice_magic_strength		746209	0					
ANR	746267	ArgumentList	mb -> mp		746209	1					
ANR	746268	Argument	mb -> mp		746209	0					
ANR	746269	PtrMemberAccess	mb -> mp		746209	0					
ANR	746270	Identifier	mb		746209	0					
ANR	746271	Identifier	mp		746209	1					
ANR	746272	IfStatement	if ( sa == sb )		746209	34					
ANR	746273	Condition	sa == sb	868:5:20654:20661	746209	0	True				
ANR	746274	EqualityExpression	sa == sb		746209	0		==			
ANR	746275	Identifier	sa		746209	0					
ANR	746276	Identifier	sb		746209	1					
ANR	746277	ReturnStatement	return 0 ;	869:2:20666:20674	746209	1	True				
ANR	746278	PrimaryExpression	0		746209	0					
ANR	746279	ElseStatement	else		746209	0					
ANR	746280	IfStatement	if ( sa > sb )		746209	0					
ANR	746281	Condition	sa > sb	870:10:20686:20692	746209	0	True				
ANR	746282	RelationalExpression	sa > sb		746209	0		>			
ANR	746283	Identifier	sa		746209	0					
ANR	746284	Identifier	sb		746209	1					
ANR	746285	ReturnStatement	return - 1 ;	871:2:20697:20706	746209	1	True				
ANR	746286	UnaryOperationExpression	- 1		746209	0					
ANR	746287	UnaryOperator	-		746209	0					
ANR	746288	PrimaryExpression	1		746209	1					
ANR	746289	ElseStatement	else		746209	0					
ANR	746290	ReturnStatement	return 1 ;	873:2:20716:20724	746209	0	True				
ANR	746291	PrimaryExpression	1		746209	0					
ANR	746292	ReturnType	int		746209	1					
ANR	746293	Identifier	apprentice_sort		746209	2					
ANR	746294	ParameterList	"const void * a , const void * b"		746209	3					
ANR	746295	Parameter	const void * a	862:16:20383:20395	746209	0	True				
ANR	746296	ParameterType	const void *		746209	0					
ANR	746297	Identifier	a		746209	1					
ANR	746298	Parameter	const void * b	862:31:20398:20410	746209	1	True				
ANR	746299	ParameterType	const void *		746209	0					
ANR	746300	Identifier	b		746209	1					
ANR	746301	CFGEntryNode	ENTRY		746209		True				
ANR	746302	CFGExitNode	EXIT		746209		True				
ANR	746303	Symbol	a		746209						
ANR	746304	Symbol	b		746209						
ANR	746305	Symbol	mb -> mp		746209						
ANR	746306	Symbol	ma		746209						
ANR	746307	Symbol	mb		746209						
ANR	746308	Symbol	ma -> mp		746209						
ANR	746309	Symbol	* mb		746209						
ANR	746310	Symbol	* ma		746209						
ANR	746311	Symbol	sa		746209						
ANR	746312	Symbol	apprentice_magic_strength		746209						
ANR	746313	Symbol	sb		746209						
ANR	746314	Function	apprentice_list	879:8:20820:21808							
ANR	746315	FunctionDef	"apprentice_list (struct mlist * mlist , int mode)"		746314	0					
ANR	746316	CompoundStatement		881:0:20872:21808	746314	0					
ANR	746317	IdentifierDeclStatement	uint32_t magindex = 0 ;	882:1:20875:20896	746314	0	True				
ANR	746318	IdentifierDecl	magindex = 0		746314	0					
ANR	746319	IdentifierDeclType	uint32_t		746314	0					
ANR	746320	Identifier	magindex		746314	1					
ANR	746321	AssignmentExpression	magindex = 0		746314	2		=			
ANR	746322	Identifier	magindex		746314	0					
ANR	746323	PrimaryExpression	0		746314	1					
ANR	746324	IdentifierDeclStatement	struct mlist * ml ;	883:1:20899:20915	746314	1	True				
ANR	746325	IdentifierDecl	* ml		746314	0					
ANR	746326	IdentifierDeclType	struct mlist *		746314	0					
ANR	746327	Identifier	ml		746314	1					
ANR	746328	ForStatement	for ( ml = mlist -> next ; ml != mlist ; ml = ml -> next )		746314	2					
ANR	746329	ForInit	ml = mlist -> next ;	884:6:20923:20939	746314	0	True				
ANR	746330	AssignmentExpression	ml = mlist -> next		746314	0		=			
ANR	746331	Identifier	ml		746314	0					
ANR	746332	PtrMemberAccess	mlist -> next		746314	1					
ANR	746333	Identifier	mlist		746314	0					
ANR	746334	Identifier	next		746314	1					
ANR	746335	Condition	ml != mlist	884:24:20941:20951	746314	1	True				
ANR	746336	EqualityExpression	ml != mlist		746314	0		!=			
ANR	746337	Identifier	ml		746314	0					
ANR	746338	Identifier	mlist		746314	1					
ANR	746339	AssignmentExpression	ml = ml -> next	884:37:20954:20966	746314	2	True	=			
ANR	746340	Identifier	ml		746314	0					
ANR	746341	PtrMemberAccess	ml -> next		746314	1					
ANR	746342	Identifier	ml		746314	0					
ANR	746343	Identifier	next		746314	1					
ANR	746344	CompoundStatement		4:52:96:96	746314	3					
ANR	746345	ForStatement	for ( magindex = 0 ; magindex < ml -> nmagic ; magindex ++ )		746314	0					
ANR	746346	ForInit	magindex = 0 ;	885:7:20978:20990	746314	0	True				
ANR	746347	AssignmentExpression	magindex = 0		746314	0		=			
ANR	746348	Identifier	magindex		746314	0					
ANR	746349	PrimaryExpression	0		746314	1					
ANR	746350	Condition	magindex < ml -> nmagic	885:21:20992:21012	746314	1	True				
ANR	746351	RelationalExpression	magindex < ml -> nmagic		746314	0		<			
ANR	746352	Identifier	magindex		746314	0					
ANR	746353	PtrMemberAccess	ml -> nmagic		746314	1					
ANR	746354	Identifier	ml		746314	0					
ANR	746355	Identifier	nmagic		746314	1					
ANR	746356	PostIncDecOperationExpression	magindex ++	885:44:21015:21024	746314	2	True				
ANR	746357	Identifier	magindex		746314	0					
ANR	746358	IncDec	++		746314	1					
ANR	746359	CompoundStatement		6:3:159:197	746314	3					
ANR	746360	IdentifierDeclStatement	struct magic * m = & ml -> magic [ magindex ] ;	886:3:21032:21070	746314	0	True				
ANR	746361	IdentifierDecl	* m = & ml -> magic [ magindex ]		746314	0					
ANR	746362	IdentifierDeclType	struct magic *		746314	0					
ANR	746363	Identifier	m		746314	1					
ANR	746364	AssignmentExpression	* m = & ml -> magic [ magindex ]		746314	2		=			
ANR	746365	Identifier	m		746314	0					
ANR	746366	UnaryOperationExpression	& ml -> magic [ magindex ]		746314	1					
ANR	746367	UnaryOperator	&		746314	0					
ANR	746368	ArrayIndexing	ml -> magic [ magindex ]		746314	1					
ANR	746369	PtrMemberAccess	ml -> magic		746314	0					
ANR	746370	Identifier	ml		746314	0					
ANR	746371	Identifier	magic		746314	1					
ANR	746372	Identifier	magindex		746314	1					
ANR	746373	IfStatement	if ( ( m -> flag & mode ) != mode )		746314	1					
ANR	746374	Condition	( m -> flag & mode ) != mode	887:7:21079:21102	746314	0	True				
ANR	746375	EqualityExpression	( m -> flag & mode ) != mode		746314	0		!=			
ANR	746376	BitAndExpression	m -> flag & mode		746314	0		&			
ANR	746377	PtrMemberAccess	m -> flag		746314	0					
ANR	746378	Identifier	m		746314	0					
ANR	746379	Identifier	flag		746314	1					
ANR	746380	Identifier	mode		746314	1					
ANR	746381	Identifier	mode		746314	1					
ANR	746382	CompoundStatement		7:33:232:232	746314	1					
ANR	746383	WhileStatement	while ( magindex + 1 < ml -> nmagic && ml -> magic [ magindex + 1 ] . cont_level != 0 )		746314	0					
ANR	746384	Condition	magindex + 1 < ml -> nmagic && ml -> magic [ magindex + 1 ] . cont_level != 0	889:11:21143:21221	746314	0	True				
ANR	746385	AndExpression	magindex + 1 < ml -> nmagic && ml -> magic [ magindex + 1 ] . cont_level != 0		746314	0		&&			
ANR	746386	RelationalExpression	magindex + 1 < ml -> nmagic		746314	0		<			
ANR	746387	AdditiveExpression	magindex + 1		746314	0		+			
ANR	746388	Identifier	magindex		746314	0					
ANR	746389	PrimaryExpression	1		746314	1					
ANR	746390	PtrMemberAccess	ml -> nmagic		746314	1					
ANR	746391	Identifier	ml		746314	0					
ANR	746392	Identifier	nmagic		746314	1					
ANR	746393	EqualityExpression	ml -> magic [ magindex + 1 ] . cont_level != 0		746314	1		!=			
ANR	746394	MemberAccess	ml -> magic [ magindex + 1 ] . cont_level		746314	0					
ANR	746395	ArrayIndexing	ml -> magic [ magindex + 1 ]		746314	0					
ANR	746396	PtrMemberAccess	ml -> magic		746314	0					
ANR	746397	Identifier	ml		746314	0					
ANR	746398	Identifier	magic		746314	1					
ANR	746399	AdditiveExpression	magindex + 1		746314	1		+			
ANR	746400	Identifier	magindex		746314	0					
ANR	746401	PrimaryExpression	1		746314	1					
ANR	746402	Identifier	cont_level		746314	1					
ANR	746403	PrimaryExpression	0		746314	1					
ANR	746404	ExpressionStatement	++ magindex	891:5:21229:21239	746314	1	True				
ANR	746405	UnaryExpression	++ magindex		746314	0					
ANR	746406	IncDec	++		746314	0					
ANR	746407	Identifier	magindex		746314	1					
ANR	746408	ContinueStatement	continue ;	892:4:21245:21253	746314	1	True				
ANR	746409	WhileStatement	while ( magindex + 1 < ml -> nmagic && ml -> magic [ magindex + 1 ] . cont_level != 0 && * ml -> magic [ magindex ] . desc == '\\0' && * ml -> magic [ magindex ] . mimetype == '\\0' )		746314	2					
ANR	746410	Condition	magindex + 1 < ml -> nmagic && ml -> magic [ magindex + 1 ] . cont_level != 0 && * ml -> magic [ magindex ] . desc == '\\0' && * ml -> magic [ magindex ] . mimetype == '\\0'	899:10:21404:21579	746314	0	True				
ANR	746411	AndExpression	magindex + 1 < ml -> nmagic && ml -> magic [ magindex + 1 ] . cont_level != 0 && * ml -> magic [ magindex ] . desc == '\\0' && * ml -> magic [ magindex ] . mimetype == '\\0'		746314	0		&&			
ANR	746412	RelationalExpression	magindex + 1 < ml -> nmagic		746314	0		<			
ANR	746413	AdditiveExpression	magindex + 1		746314	0		+			
ANR	746414	Identifier	magindex		746314	0					
ANR	746415	PrimaryExpression	1		746314	1					
ANR	746416	PtrMemberAccess	ml -> nmagic		746314	1					
ANR	746417	Identifier	ml		746314	0					
ANR	746418	Identifier	nmagic		746314	1					
ANR	746419	AndExpression	ml -> magic [ magindex + 1 ] . cont_level != 0 && * ml -> magic [ magindex ] . desc == '\\0' && * ml -> magic [ magindex ] . mimetype == '\\0'		746314	1		&&			
ANR	746420	EqualityExpression	ml -> magic [ magindex + 1 ] . cont_level != 0		746314	0		!=			
ANR	746421	MemberAccess	ml -> magic [ magindex + 1 ] . cont_level		746314	0					
ANR	746422	ArrayIndexing	ml -> magic [ magindex + 1 ]		746314	0					
ANR	746423	PtrMemberAccess	ml -> magic		746314	0					
ANR	746424	Identifier	ml		746314	0					
ANR	746425	Identifier	magic		746314	1					
ANR	746426	AdditiveExpression	magindex + 1		746314	1		+			
ANR	746427	Identifier	magindex		746314	0					
ANR	746428	PrimaryExpression	1		746314	1					
ANR	746429	Identifier	cont_level		746314	1					
ANR	746430	PrimaryExpression	0		746314	1					
ANR	746431	AndExpression	* ml -> magic [ magindex ] . desc == '\\0' && * ml -> magic [ magindex ] . mimetype == '\\0'		746314	1		&&			
ANR	746432	EqualityExpression	* ml -> magic [ magindex ] . desc == '\\0'		746314	0		==			
ANR	746433	UnaryOperationExpression	* ml -> magic [ magindex ] . desc		746314	0					
ANR	746434	UnaryOperator	*		746314	0					
ANR	746435	MemberAccess	ml -> magic [ magindex ] . desc		746314	1					
ANR	746436	ArrayIndexing	ml -> magic [ magindex ]		746314	0					
ANR	746437	PtrMemberAccess	ml -> magic		746314	0					
ANR	746438	Identifier	ml		746314	0					
ANR	746439	Identifier	magic		746314	1					
ANR	746440	Identifier	magindex		746314	1					
ANR	746441	Identifier	desc		746314	1					
ANR	746442	PrimaryExpression	'\\0'		746314	1					
ANR	746443	EqualityExpression	* ml -> magic [ magindex ] . mimetype == '\\0'		746314	1		==			
ANR	746444	UnaryOperationExpression	* ml -> magic [ magindex ] . mimetype		746314	0					
ANR	746445	UnaryOperator	*		746314	0					
ANR	746446	MemberAccess	ml -> magic [ magindex ] . mimetype		746314	1					
ANR	746447	ArrayIndexing	ml -> magic [ magindex ]		746314	0					
ANR	746448	PtrMemberAccess	ml -> magic		746314	0					
ANR	746449	Identifier	ml		746314	0					
ANR	746450	Identifier	magic		746314	1					
ANR	746451	Identifier	magindex		746314	1					
ANR	746452	Identifier	mimetype		746314	1					
ANR	746453	PrimaryExpression	'\\0'		746314	1					
ANR	746454	ExpressionStatement	magindex ++	903:4:21586:21596	746314	1	True				
ANR	746455	PostIncDecOperationExpression	magindex ++		746314	0					
ANR	746456	Identifier	magindex		746314	0					
ANR	746457	IncDec	++		746314	1					
ANR	746458	Statement	printf	905:3:21602:21607	746314	3	True				
ANR	746459	Statement	(	905:9:21608:21608	746314	4	True				
ANR	746460	Statement	"""Strength = %3"""	905:10:21609:21623	746314	5	True				
ANR	746461	Statement	SIZE_T_FORMAT	905:26:21625:21637	746314	6	True				
ANR	746462	Statement	"""u@%u: %s [%s]\\n"""	905:40:21639:21655	746314	7	True				
ANR	746463	Statement	","	905:57:21656:21656	746314	8	True				
ANR	746464	Statement	apprentice_magic_strength	906:7:21665:21689	746314	9	True				
ANR	746465	Statement	(	906:32:21690:21690	746314	10	True				
ANR	746466	Statement	m	906:33:21691:21691	746314	11	True				
ANR	746467	Statement	)	906:34:21692:21692	746314	12	True				
ANR	746468	Statement	","	906:35:21693:21693	746314	13	True				
ANR	746469	Statement	ml	907:7:21702:21703	746314	14	True				
ANR	746470	Statement	->	907:9:21704:21705	746314	15	True				
ANR	746471	Statement	magic	907:11:21706:21710	746314	16	True				
ANR	746472	Statement	[	907:16:21711:21711	746314	17	True				
ANR	746473	Statement	magindex	907:17:21712:21719	746314	18	True				
ANR	746474	Statement	]	907:25:21720:21720	746314	19	True				
ANR	746475	Statement	.	907:26:21721:21721	746314	20	True				
ANR	746476	Statement	lineno	907:27:21722:21727	746314	21	True				
ANR	746477	Statement	","	907:33:21728:21728	746314	22	True				
ANR	746478	Statement	ml	908:7:21737:21738	746314	23	True				
ANR	746479	Statement	->	908:9:21739:21740	746314	24	True				
ANR	746480	Statement	magic	908:11:21741:21745	746314	25	True				
ANR	746481	Statement	[	908:16:21746:21746	746314	26	True				
ANR	746482	Statement	magindex	908:17:21747:21754	746314	27	True				
ANR	746483	Statement	]	908:25:21755:21755	746314	28	True				
ANR	746484	Statement	.	908:26:21756:21756	746314	29	True				
ANR	746485	Statement	desc	908:27:21757:21760	746314	30	True				
ANR	746486	Statement	","	908:31:21761:21761	746314	31	True				
ANR	746487	Statement	ml	909:7:21770:21771	746314	32	True				
ANR	746488	Statement	->	909:9:21772:21773	746314	33	True				
ANR	746489	Statement	magic	909:11:21774:21778	746314	34	True				
ANR	746490	Statement	[	909:16:21779:21779	746314	35	True				
ANR	746491	Statement	magindex	909:17:21780:21787	746314	36	True				
ANR	746492	Statement	]	909:25:21788:21788	746314	37	True				
ANR	746493	Statement	.	909:26:21789:21789	746314	38	True				
ANR	746494	Statement	mimetype	909:27:21790:21797	746314	39	True				
ANR	746495	Statement	)	909:35:21798:21798	746314	40	True				
ANR	746496	ExpressionStatement		909:36:21799:21799	746314	41	True				
ANR	746497	ReturnType	void		746314	1					
ANR	746498	Identifier	apprentice_list		746314	2					
ANR	746499	ParameterList	"struct mlist * mlist , int mode"		746314	3					
ANR	746500	Parameter	struct mlist * mlist	880:16:20841:20859	746314	0	True				
ANR	746501	ParameterType	struct mlist *		746314	0					
ANR	746502	Identifier	mlist		746314	1					
ANR	746503	Parameter	int mode	880:37:20862:20869	746314	1	True				
ANR	746504	ParameterType	int		746314	0					
ANR	746505	Identifier	mode		746314	1					
ANR	746506	CFGEntryNode	ENTRY		746314		True				
ANR	746507	CFGExitNode	EXIT		746314		True				
ANR	746508	Symbol	* magindex		746314						
ANR	746509	Symbol	mlist -> next		746314						
ANR	746510	Symbol	magindex		746314						
ANR	746511	Symbol	ml -> next		746314						
ANR	746512	Symbol	* * ml -> magic		746314						
ANR	746513	Symbol	* mlist		746314						
ANR	746514	Symbol	* ml		746314						
ANR	746515	Symbol	ml -> magic [ magindex ] . desc		746314						
ANR	746516	Symbol	m -> flag		746314						
ANR	746517	Symbol	* * ml		746314						
ANR	746518	Symbol	ml -> nmagic		746314						
ANR	746519	Symbol	ml -> magic [ magindex ] . mimetype		746314						
ANR	746520	Symbol	* ml -> magic [ magindex ] . mimetype		746314						
ANR	746521	Symbol	m		746314						
ANR	746522	Symbol	mode		746314						
ANR	746523	Symbol	* ml -> magic		746314						
ANR	746524	Symbol	ml -> magic		746314						
ANR	746525	Symbol	ml -> magic [ magindex + 1 ] . cont_level		746314						
ANR	746526	Symbol	* m		746314						
ANR	746527	Symbol	* ml -> magic [ magindex ] . desc		746314						
ANR	746528	Symbol	mlist		746314						
ANR	746529	Symbol	* * * ml		746314						
ANR	746530	Symbol	* * magindex		746314						
ANR	746531	Symbol	ml		746314						
ANR	746532	Function	set_test_type	914:8:21819:23490							
ANR	746533	FunctionDef	"set_test_type (struct magic * mstart , struct magic * m)"		746532	0					
ANR	746534	CompoundStatement		916:0:21877:23490	746532	0					
ANR	746535	SwitchStatement	switch ( m -> type )		746532	0					
ANR	746536	Condition	m -> type	917:9:21888:21894	746532	0	True				
ANR	746537	PtrMemberAccess	m -> type		746532	0					
ANR	746538	Identifier	m		746532	0					
ANR	746539	Identifier	type		746532	1					
ANR	746540	CompoundStatement		2:18:19:19	746532	1					
ANR	746541	Label	case FILE_BYTE :	918:1:21900:21914	746532	0	True				
ANR	746542	Identifier	FILE_BYTE		746532	0					
ANR	746543	Label	case FILE_SHORT :	919:1:21917:21932	746532	1	True				
ANR	746544	Identifier	FILE_SHORT		746532	0					
ANR	746545	Label	case FILE_LONG :	920:1:21935:21949	746532	2	True				
ANR	746546	Identifier	FILE_LONG		746532	0					
ANR	746547	Label	case FILE_DATE :	921:1:21952:21966	746532	3	True				
ANR	746548	Identifier	FILE_DATE		746532	0					
ANR	746549	Label	case FILE_BESHORT :	922:1:21969:21986	746532	4	True				
ANR	746550	Identifier	FILE_BESHORT		746532	0					
ANR	746551	Label	case FILE_BELONG :	923:1:21989:22005	746532	5	True				
ANR	746552	Identifier	FILE_BELONG		746532	0					
ANR	746553	Label	case FILE_BEDATE :	924:1:22008:22024	746532	6	True				
ANR	746554	Identifier	FILE_BEDATE		746532	0					
ANR	746555	Label	case FILE_LESHORT :	925:1:22027:22044	746532	7	True				
ANR	746556	Identifier	FILE_LESHORT		746532	0					
ANR	746557	Label	case FILE_LELONG :	926:1:22047:22063	746532	8	True				
ANR	746558	Identifier	FILE_LELONG		746532	0					
ANR	746559	Label	case FILE_LEDATE :	927:1:22066:22082	746532	9	True				
ANR	746560	Identifier	FILE_LEDATE		746532	0					
ANR	746561	Label	case FILE_LDATE :	928:1:22085:22100	746532	10	True				
ANR	746562	Identifier	FILE_LDATE		746532	0					
ANR	746563	Label	case FILE_BELDATE :	929:1:22103:22120	746532	11	True				
ANR	746564	Identifier	FILE_BELDATE		746532	0					
ANR	746565	Label	case FILE_LELDATE :	930:1:22123:22140	746532	12	True				
ANR	746566	Identifier	FILE_LELDATE		746532	0					
ANR	746567	Label	case FILE_MEDATE :	931:1:22143:22159	746532	13	True				
ANR	746568	Identifier	FILE_MEDATE		746532	0					
ANR	746569	Label	case FILE_MELDATE :	932:1:22162:22179	746532	14	True				
ANR	746570	Identifier	FILE_MELDATE		746532	0					
ANR	746571	Label	case FILE_MELONG :	933:1:22182:22198	746532	15	True				
ANR	746572	Identifier	FILE_MELONG		746532	0					
ANR	746573	Label	case FILE_QUAD :	934:1:22201:22215	746532	16	True				
ANR	746574	Identifier	FILE_QUAD		746532	0					
ANR	746575	Label	case FILE_LEQUAD :	935:1:22218:22234	746532	17	True				
ANR	746576	Identifier	FILE_LEQUAD		746532	0					
ANR	746577	Label	case FILE_BEQUAD :	936:1:22237:22253	746532	18	True				
ANR	746578	Identifier	FILE_BEQUAD		746532	0					
ANR	746579	Label	case FILE_QDATE :	937:1:22256:22271	746532	19	True				
ANR	746580	Identifier	FILE_QDATE		746532	0					
ANR	746581	Label	case FILE_LEQDATE :	938:1:22274:22291	746532	20	True				
ANR	746582	Identifier	FILE_LEQDATE		746532	0					
ANR	746583	Label	case FILE_BEQDATE :	939:1:22294:22311	746532	21	True				
ANR	746584	Identifier	FILE_BEQDATE		746532	0					
ANR	746585	Label	case FILE_QLDATE :	940:1:22314:22330	746532	22	True				
ANR	746586	Identifier	FILE_QLDATE		746532	0					
ANR	746587	Label	case FILE_LEQLDATE :	941:1:22333:22351	746532	23	True				
ANR	746588	Identifier	FILE_LEQLDATE		746532	0					
ANR	746589	Label	case FILE_BEQLDATE :	942:1:22354:22372	746532	24	True				
ANR	746590	Identifier	FILE_BEQLDATE		746532	0					
ANR	746591	Label	case FILE_QWDATE :	943:1:22375:22391	746532	25	True				
ANR	746592	Identifier	FILE_QWDATE		746532	0					
ANR	746593	Label	case FILE_LEQWDATE :	944:1:22394:22412	746532	26	True				
ANR	746594	Identifier	FILE_LEQWDATE		746532	0					
ANR	746595	Label	case FILE_BEQWDATE :	945:1:22415:22433	746532	27	True				
ANR	746596	Identifier	FILE_BEQWDATE		746532	0					
ANR	746597	Label	case FILE_FLOAT :	946:1:22436:22451	746532	28	True				
ANR	746598	Identifier	FILE_FLOAT		746532	0					
ANR	746599	Label	case FILE_BEFLOAT :	947:1:22454:22471	746532	29	True				
ANR	746600	Identifier	FILE_BEFLOAT		746532	0					
ANR	746601	Label	case FILE_LEFLOAT :	948:1:22474:22491	746532	30	True				
ANR	746602	Identifier	FILE_LEFLOAT		746532	0					
ANR	746603	Label	case FILE_DOUBLE :	949:1:22494:22510	746532	31	True				
ANR	746604	Identifier	FILE_DOUBLE		746532	0					
ANR	746605	Label	case FILE_BEDOUBLE :	950:1:22513:22531	746532	32	True				
ANR	746606	Identifier	FILE_BEDOUBLE		746532	0					
ANR	746607	Label	case FILE_LEDOUBLE :	951:1:22534:22552	746532	33	True				
ANR	746608	Identifier	FILE_LEDOUBLE		746532	0					
ANR	746609	ExpressionStatement	mstart -> flag |= BINTEST	952:2:22556:22579	746532	34	True				
ANR	746610	AssignmentExpression	mstart -> flag |= BINTEST		746532	0		|=			
ANR	746611	PtrMemberAccess	mstart -> flag		746532	0					
ANR	746612	Identifier	mstart		746532	0					
ANR	746613	Identifier	flag		746532	1					
ANR	746614	Identifier	BINTEST		746532	1					
ANR	746615	BreakStatement	break ;	953:2:22583:22588	746532	35	True				
ANR	746616	Label	case FILE_STRING :	954:1:22591:22607	746532	36	True				
ANR	746617	Identifier	FILE_STRING		746532	0					
ANR	746618	Label	case FILE_PSTRING :	955:1:22610:22627	746532	37	True				
ANR	746619	Identifier	FILE_PSTRING		746532	0					
ANR	746620	Label	case FILE_BESTRING16 :	956:1:22630:22650	746532	38	True				
ANR	746621	Identifier	FILE_BESTRING16		746532	0					
ANR	746622	Label	case FILE_LESTRING16 :	957:1:22653:22673	746532	39	True				
ANR	746623	Identifier	FILE_LESTRING16		746532	0					
ANR	746624	IfStatement	if ( mstart -> str_flags & STRING_TEXTTEST )		746532	40					
ANR	746625	Condition	mstart -> str_flags & STRING_TEXTTEST	959:6:22710:22744	746532	0	True				
ANR	746626	BitAndExpression	mstart -> str_flags & STRING_TEXTTEST		746532	0		&			
ANR	746627	PtrMemberAccess	mstart -> str_flags		746532	0					
ANR	746628	Identifier	mstart		746532	0					
ANR	746629	Identifier	str_flags		746532	1					
ANR	746630	Identifier	STRING_TEXTTEST		746532	1					
ANR	746631	ExpressionStatement	mstart -> flag |= TEXTTEST	960:3:22750:22774	746532	1	True				
ANR	746632	AssignmentExpression	mstart -> flag |= TEXTTEST		746532	0		|=			
ANR	746633	PtrMemberAccess	mstart -> flag		746532	0					
ANR	746634	Identifier	mstart		746532	0					
ANR	746635	Identifier	flag		746532	1					
ANR	746636	Identifier	TEXTTEST		746532	1					
ANR	746637	ElseStatement	else		746532	0					
ANR	746638	ExpressionStatement	mstart -> flag |= BINTEST	962:3:22786:22809	746532	0	True				
ANR	746639	AssignmentExpression	mstart -> flag |= BINTEST		746532	0		|=			
ANR	746640	PtrMemberAccess	mstart -> flag		746532	0					
ANR	746641	Identifier	mstart		746532	0					
ANR	746642	Identifier	flag		746532	1					
ANR	746643	Identifier	BINTEST		746532	1					
ANR	746644	BreakStatement	break ;	963:2:22813:22818	746532	41	True				
ANR	746645	Label	case FILE_REGEX :	964:1:22821:22836	746532	42	True				
ANR	746646	Identifier	FILE_REGEX		746532	0					
ANR	746647	Label	case FILE_SEARCH :	965:1:22839:22855	746532	43	True				
ANR	746648	Identifier	FILE_SEARCH		746532	0					
ANR	746649	IfStatement	if ( mstart -> str_flags & STRING_BINTEST )		746532	44					
ANR	746650	Condition	mstart -> str_flags & STRING_BINTEST	967:6:22890:22923	746532	0	True				
ANR	746651	BitAndExpression	mstart -> str_flags & STRING_BINTEST		746532	0		&			
ANR	746652	PtrMemberAccess	mstart -> str_flags		746532	0					
ANR	746653	Identifier	mstart		746532	0					
ANR	746654	Identifier	str_flags		746532	1					
ANR	746655	Identifier	STRING_BINTEST		746532	1					
ANR	746656	ExpressionStatement	mstart -> flag |= BINTEST	968:3:22929:22952	746532	1	True				
ANR	746657	AssignmentExpression	mstart -> flag |= BINTEST		746532	0		|=			
ANR	746658	PtrMemberAccess	mstart -> flag		746532	0					
ANR	746659	Identifier	mstart		746532	0					
ANR	746660	Identifier	flag		746532	1					
ANR	746661	Identifier	BINTEST		746532	1					
ANR	746662	IfStatement	if ( mstart -> str_flags & STRING_TEXTTEST )		746532	45					
ANR	746663	Condition	mstart -> str_flags & STRING_TEXTTEST	969:6:22960:22994	746532	0	True				
ANR	746664	BitAndExpression	mstart -> str_flags & STRING_TEXTTEST		746532	0		&			
ANR	746665	PtrMemberAccess	mstart -> str_flags		746532	0					
ANR	746666	Identifier	mstart		746532	0					
ANR	746667	Identifier	str_flags		746532	1					
ANR	746668	Identifier	STRING_TEXTTEST		746532	1					
ANR	746669	ExpressionStatement	mstart -> flag |= TEXTTEST	970:3:23000:23024	746532	1	True				
ANR	746670	AssignmentExpression	mstart -> flag |= TEXTTEST		746532	0		|=			
ANR	746671	PtrMemberAccess	mstart -> flag		746532	0					
ANR	746672	Identifier	mstart		746532	0					
ANR	746673	Identifier	flag		746532	1					
ANR	746674	Identifier	TEXTTEST		746532	1					
ANR	746675	IfStatement	if ( mstart -> flag & ( TEXTTEST | BINTEST ) )		746532	46					
ANR	746676	Condition	mstart -> flag & ( TEXTTEST | BINTEST )	972:6:23039:23071	746532	0	True				
ANR	746677	BitAndExpression	mstart -> flag & ( TEXTTEST | BINTEST )		746532	0		&			
ANR	746678	PtrMemberAccess	mstart -> flag		746532	0					
ANR	746679	Identifier	mstart		746532	0					
ANR	746680	Identifier	flag		746532	1					
ANR	746681	InclusiveOrExpression	TEXTTEST | BINTEST		746532	1		|			
ANR	746682	Identifier	TEXTTEST		746532	0					
ANR	746683	Identifier	BINTEST		746532	1					
ANR	746684	BreakStatement	break ;	973:3:23077:23082	746532	1	True				
ANR	746685	IfStatement	"if ( file_looks_utf8 ( m -> value . us , ( size_t ) m -> vallen , NULL , NULL ) <= 0 )"		746532	47					
ANR	746686	Condition	"file_looks_utf8 ( m -> value . us , ( size_t ) m -> vallen , NULL , NULL ) <= 0"	976:6:23134:23203	746532	0	True				
ANR	746687	RelationalExpression	"file_looks_utf8 ( m -> value . us , ( size_t ) m -> vallen , NULL , NULL ) <= 0"		746532	0		<=			
ANR	746688	CallExpression	"file_looks_utf8 ( m -> value . us , ( size_t ) m -> vallen , NULL , NULL )"		746532	0					
ANR	746689	Callee	file_looks_utf8		746532	0					
ANR	746690	Identifier	file_looks_utf8		746532	0					
ANR	746691	ArgumentList	m -> value . us		746532	1					
ANR	746692	Argument	m -> value . us		746532	0					
ANR	746693	MemberAccess	m -> value . us		746532	0					
ANR	746694	PtrMemberAccess	m -> value		746532	0					
ANR	746695	Identifier	m		746532	0					
ANR	746696	Identifier	value		746532	1					
ANR	746697	Identifier	us		746532	1					
ANR	746698	Argument	( size_t ) m -> vallen		746532	1					
ANR	746699	CastExpression	( size_t ) m -> vallen		746532	0					
ANR	746700	CastTarget	size_t		746532	0					
ANR	746701	PtrMemberAccess	m -> vallen		746532	1					
ANR	746702	Identifier	m		746532	0					
ANR	746703	Identifier	vallen		746532	1					
ANR	746704	Argument	NULL		746532	2					
ANR	746705	Identifier	NULL		746532	0					
ANR	746706	Argument	NULL		746532	3					
ANR	746707	Identifier	NULL		746532	0					
ANR	746708	PrimaryExpression	0		746532	1					
ANR	746709	ExpressionStatement	mstart -> flag |= BINTEST	978:3:23209:23232	746532	1	True				
ANR	746710	AssignmentExpression	mstart -> flag |= BINTEST		746532	0		|=			
ANR	746711	PtrMemberAccess	mstart -> flag		746532	0					
ANR	746712	Identifier	mstart		746532	0					
ANR	746713	Identifier	flag		746532	1					
ANR	746714	Identifier	BINTEST		746532	1					
ANR	746715	ElseStatement	else		746532	0					
ANR	746716	ExpressionStatement	mstart -> flag |= TEXTTEST	980:3:23244:23268	746532	0	True				
ANR	746717	AssignmentExpression	mstart -> flag |= TEXTTEST		746532	0		|=			
ANR	746718	PtrMemberAccess	mstart -> flag		746532	0					
ANR	746719	Identifier	mstart		746532	0					
ANR	746720	Identifier	flag		746532	1					
ANR	746721	Identifier	TEXTTEST		746532	1					
ANR	746722	BreakStatement	break ;	981:2:23272:23277	746532	48	True				
ANR	746723	Label	case FILE_DEFAULT :	982:1:23280:23297	746532	49	True				
ANR	746724	Identifier	FILE_DEFAULT		746532	0					
ANR	746725	BreakStatement	break ;	985:2:23383:23388	746532	50	True				
ANR	746726	Label	case FILE_INVALID :	986:1:23391:23408	746532	51	True				
ANR	746727	Identifier	FILE_INVALID		746532	0					
ANR	746728	Label	default :	987:1:23411:23418	746532	52	True				
ANR	746729	Identifier	default		746532	0					
ANR	746730	BreakStatement	break ;	989:2:23480:23485	746532	53	True				
ANR	746731	ReturnType	void		746532	1					
ANR	746732	Identifier	set_test_type		746532	2					
ANR	746733	ParameterList	"struct magic * mstart , struct magic * m"		746532	3					
ANR	746734	Parameter	struct magic * mstart	915:14:21838:21857	746532	0	True				
ANR	746735	ParameterType	struct magic *		746532	0					
ANR	746736	Identifier	mstart		746532	1					
ANR	746737	Parameter	struct magic * m	915:36:21860:21874	746532	1	True				
ANR	746738	ParameterType	struct magic *		746532	0					
ANR	746739	Identifier	m		746532	1					
ANR	746740	CFGEntryNode	ENTRY		746532		True				
ANR	746741	CFGExitNode	EXIT		746532		True				
ANR	746742	Symbol	NULL		746532						
ANR	746743	Symbol	m -> value		746532						
ANR	746744	Symbol	STRING_BINTEST		746532						
ANR	746745	Symbol	BINTEST		746532						
ANR	746746	Symbol	m -> value . us		746532						
ANR	746747	Symbol	* mstart		746532						
ANR	746748	Symbol	file_looks_utf8		746532						
ANR	746749	Symbol	m		746532						
ANR	746750	Symbol	STRING_TEXTTEST		746532						
ANR	746751	Symbol	m -> type		746532						
ANR	746752	Symbol	mstart -> flag		746532						
ANR	746753	Symbol	* m		746532						
ANR	746754	Symbol	m -> vallen		746532						
ANR	746755	Symbol	TEXTTEST		746532						
ANR	746756	Symbol	mstart		746532						
ANR	746757	Symbol	mstart -> str_flags		746532						
ANR	746758	Function	addentry	993:8:23501:24080							
ANR	746759	FunctionDef	"addentry (struct magic_set * ms , struct magic_entry * me , struct magic_entry_set * mset)"		746758	0					
ANR	746760	CompoundStatement		996:0:23593:24080	746758	0					
ANR	746761	IdentifierDeclStatement	size_t i = me -> mp -> type == FILE_NAME ? 1 : 0 ;	997:1:23596:23640	746758	0	True				
ANR	746762	IdentifierDecl	i = me -> mp -> type == FILE_NAME ? 1 : 0		746758	0					
ANR	746763	IdentifierDeclType	size_t		746758	0					
ANR	746764	Identifier	i		746758	1					
ANR	746765	AssignmentExpression	i = me -> mp -> type == FILE_NAME ? 1 : 0		746758	2		=			
ANR	746766	Identifier	i		746758	0					
ANR	746767	ConditionalExpression	me -> mp -> type == FILE_NAME ? 1 : 0		746758	1					
ANR	746768	Condition	me -> mp -> type == FILE_NAME		746758	0					
ANR	746769	EqualityExpression	me -> mp -> type == FILE_NAME		746758	0		==			
ANR	746770	PtrMemberAccess	me -> mp -> type		746758	0					
ANR	746771	PtrMemberAccess	me -> mp		746758	0					
ANR	746772	Identifier	me		746758	0					
ANR	746773	Identifier	mp		746758	1					
ANR	746774	Identifier	type		746758	1					
ANR	746775	Identifier	FILE_NAME		746758	1					
ANR	746776	PrimaryExpression	1		746758	1					
ANR	746777	PrimaryExpression	0		746758	2					
ANR	746778	IfStatement	if ( mset [ i ] . count == mset [ i ] . max )		746758	1					
ANR	746779	Condition	mset [ i ] . count == mset [ i ] . max	998:5:23647:23674	746758	0	True				
ANR	746780	EqualityExpression	mset [ i ] . count == mset [ i ] . max		746758	0		==			
ANR	746781	MemberAccess	mset [ i ] . count		746758	0					
ANR	746782	ArrayIndexing	mset [ i ]		746758	0					
ANR	746783	Identifier	mset		746758	0					
ANR	746784	Identifier	i		746758	1					
ANR	746785	Identifier	count		746758	1					
ANR	746786	MemberAccess	mset [ i ] . max		746758	1					
ANR	746787	ArrayIndexing	mset [ i ]		746758	0					
ANR	746788	Identifier	mset		746758	0					
ANR	746789	Identifier	i		746758	1					
ANR	746790	Identifier	max		746758	1					
ANR	746791	CompoundStatement		4:2:87:109	746758	1					
ANR	746792	IdentifierDeclStatement	struct magic_entry * mp ;	999:2:23681:23703	746758	0	True				
ANR	746793	IdentifierDecl	* mp		746758	0					
ANR	746794	IdentifierDeclType	struct magic_entry *		746758	0					
ANR	746795	Identifier	mp		746758	1					
ANR	746796	ExpressionStatement	mset [ i ] . max += ALLOC_INCR	1001:2:23708:23733	746758	1	True				
ANR	746797	AssignmentExpression	mset [ i ] . max += ALLOC_INCR		746758	0		+=			
ANR	746798	MemberAccess	mset [ i ] . max		746758	0					
ANR	746799	ArrayIndexing	mset [ i ]		746758	0					
ANR	746800	Identifier	mset		746758	0					
ANR	746801	Identifier	i		746758	1					
ANR	746802	Identifier	max		746758	1					
ANR	746803	Identifier	ALLOC_INCR		746758	1					
ANR	746804	Statement	if	1002:2:23737:23738	746758	2	True				
ANR	746805	Statement	(	1002:5:23740:23740	746758	3	True				
ANR	746806	Statement	(	1002:6:23741:23741	746758	4	True				
ANR	746807	Statement	mp	1002:7:23742:23743	746758	5	True				
ANR	746808	Statement	=	1002:10:23745:23745	746758	6	True				
ANR	746809	Statement	CAST	1002:12:23747:23750	746758	7	True				
ANR	746810	Statement	(	1002:16:23751:23751	746758	8	True				
ANR	746811	Statement	struct	1002:17:23752:23757	746758	9	True				
ANR	746812	Statement	magic_entry	1002:24:23759:23769	746758	10	True				
ANR	746813	Statement	*	1002:36:23771:23771	746758	11	True				
ANR	746814	Statement	","	1002:37:23772:23772	746758	12	True				
ANR	746815	Statement	erealloc	1003:6:23780:23787	746758	13	True				
ANR	746816	Statement	(	1003:14:23788:23788	746758	14	True				
ANR	746817	Statement	mset	1003:15:23789:23792	746758	15	True				
ANR	746818	Statement	[	1003:19:23793:23793	746758	16	True				
ANR	746819	Statement	i	1003:20:23794:23794	746758	17	True				
ANR	746820	Statement	]	1003:21:23795:23795	746758	18	True				
ANR	746821	Statement	.	1003:22:23796:23796	746758	19	True				
ANR	746822	Statement	me	1003:23:23797:23798	746758	20	True				
ANR	746823	Statement	","	1003:25:23799:23799	746758	21	True				
ANR	746824	Statement	sizeof	1003:27:23801:23806	746758	22	True				
ANR	746825	Statement	(	1003:33:23807:23807	746758	23	True				
ANR	746826	Statement	*	1003:34:23808:23808	746758	24	True				
ANR	746827	Statement	mp	1003:35:23809:23810	746758	25	True				
ANR	746828	Statement	)	1003:37:23811:23811	746758	26	True				
ANR	746829	Statement	*	1003:39:23813:23813	746758	27	True				
ANR	746830	Statement	mset	1003:41:23815:23818	746758	28	True				
ANR	746831	Statement	[	1003:45:23819:23819	746758	29	True				
ANR	746832	Statement	i	1003:46:23820:23820	746758	30	True				
ANR	746833	Statement	]	1003:47:23821:23821	746758	31	True				
ANR	746834	Statement	.	1003:48:23822:23822	746758	32	True				
ANR	746835	Statement	max	1003:49:23823:23825	746758	33	True				
ANR	746836	Statement	)	1003:52:23826:23826	746758	34	True				
ANR	746837	Statement	)	1003:53:23827:23827	746758	35	True				
ANR	746838	Statement	)	1003:54:23828:23828	746758	36	True				
ANR	746839	Statement	==	1003:56:23830:23831	746758	37	True				
ANR	746840	Statement	NULL	1004:6:23839:23842	746758	38	True				
ANR	746841	Statement	)	1004:10:23843:23843	746758	39	True				
ANR	746842	CompoundStatement		9:12:251:251	746758	40					
ANR	746843	ExpressionStatement	"file_oomem ( ms , sizeof ( * mp ) * mset [ i ] . max )"	1005:3:23850:23891	746758	0	True				
ANR	746844	CallExpression	"file_oomem ( ms , sizeof ( * mp ) * mset [ i ] . max )"		746758	0					
ANR	746845	Callee	file_oomem		746758	0					
ANR	746846	Identifier	file_oomem		746758	0					
ANR	746847	ArgumentList	ms		746758	1					
ANR	746848	Argument	ms		746758	0					
ANR	746849	Identifier	ms		746758	0					
ANR	746850	Argument	sizeof ( * mp ) * mset [ i ] . max		746758	1					
ANR	746851	MultiplicativeExpression	sizeof ( * mp ) * mset [ i ] . max		746758	0		*			
ANR	746852	SizeofExpression	sizeof ( * mp )		746758	0					
ANR	746853	Sizeof	sizeof		746758	0					
ANR	746854	UnaryOperationExpression	* mp		746758	1					
ANR	746855	UnaryOperator	*		746758	0					
ANR	746856	Identifier	mp		746758	1					
ANR	746857	MemberAccess	mset [ i ] . max		746758	1					
ANR	746858	ArrayIndexing	mset [ i ]		746758	0					
ANR	746859	Identifier	mset		746758	0					
ANR	746860	Identifier	i		746758	1					
ANR	746861	Identifier	max		746758	1					
ANR	746862	ReturnStatement	return - 1 ;	1006:3:23896:23905	746758	1	True				
ANR	746863	UnaryOperationExpression	- 1		746758	0					
ANR	746864	UnaryOperator	-		746758	0					
ANR	746865	PrimaryExpression	1		746758	1					
ANR	746866	ExpressionStatement	"( void ) memset ( & mp [ mset [ i ] . count ] , 0 , sizeof ( * mp ) * ALLOC_INCR )"	1008:2:23913:23980	746758	41	True				
ANR	746867	CastExpression	"( void ) memset ( & mp [ mset [ i ] . count ] , 0 , sizeof ( * mp ) * ALLOC_INCR )"		746758	0					
ANR	746868	CastTarget	void		746758	0					
ANR	746869	CallExpression	"memset ( & mp [ mset [ i ] . count ] , 0 , sizeof ( * mp ) * ALLOC_INCR )"		746758	1					
ANR	746870	Callee	memset		746758	0					
ANR	746871	Identifier	memset		746758	0					
ANR	746872	ArgumentList	& mp [ mset [ i ] . count ]		746758	1					
ANR	746873	Argument	& mp [ mset [ i ] . count ]		746758	0					
ANR	746874	UnaryOperationExpression	& mp [ mset [ i ] . count ]		746758	0					
ANR	746875	UnaryOperator	&		746758	0					
ANR	746876	ArrayIndexing	mp [ mset [ i ] . count ]		746758	1					
ANR	746877	Identifier	mp		746758	0					
ANR	746878	MemberAccess	mset [ i ] . count		746758	1					
ANR	746879	ArrayIndexing	mset [ i ]		746758	0					
ANR	746880	Identifier	mset		746758	0					
ANR	746881	Identifier	i		746758	1					
ANR	746882	Identifier	count		746758	1					
ANR	746883	Argument	0		746758	1					
ANR	746884	PrimaryExpression	0		746758	0					
ANR	746885	Argument	sizeof ( * mp ) * ALLOC_INCR		746758	2					
ANR	746886	MultiplicativeExpression	sizeof ( * mp ) * ALLOC_INCR		746758	0		*			
ANR	746887	SizeofExpression	sizeof ( * mp )		746758	0					
ANR	746888	Sizeof	sizeof		746758	0					
ANR	746889	UnaryOperationExpression	* mp		746758	1					
ANR	746890	UnaryOperator	*		746758	0					
ANR	746891	Identifier	mp		746758	1					
ANR	746892	Identifier	ALLOC_INCR		746758	1					
ANR	746893	ExpressionStatement	mset [ i ] . me = mp	1010:2:23984:23999	746758	42	True				
ANR	746894	AssignmentExpression	mset [ i ] . me = mp		746758	0		=			
ANR	746895	MemberAccess	mset [ i ] . me		746758	0					
ANR	746896	ArrayIndexing	mset [ i ]		746758	0					
ANR	746897	Identifier	mset		746758	0					
ANR	746898	Identifier	i		746758	1					
ANR	746899	Identifier	me		746758	1					
ANR	746900	Identifier	mp		746758	1					
ANR	746901	ExpressionStatement	mset [ i ] . me [ mset [ i ] . count ++ ] = * me	1012:1:24005:24038	746758	2	True				
ANR	746902	AssignmentExpression	mset [ i ] . me [ mset [ i ] . count ++ ] = * me		746758	0		=			
ANR	746903	ArrayIndexing	mset [ i ] . me [ mset [ i ] . count ++ ]		746758	0					
ANR	746904	MemberAccess	mset [ i ] . me		746758	0					
ANR	746905	ArrayIndexing	mset [ i ]		746758	0					
ANR	746906	Identifier	mset		746758	0					
ANR	746907	Identifier	i		746758	1					
ANR	746908	Identifier	me		746758	1					
ANR	746909	PostIncDecOperationExpression	mset [ i ] . count ++		746758	1					
ANR	746910	MemberAccess	mset [ i ] . count		746758	0					
ANR	746911	ArrayIndexing	mset [ i ]		746758	0					
ANR	746912	Identifier	mset		746758	0					
ANR	746913	Identifier	i		746758	1					
ANR	746914	Identifier	count		746758	1					
ANR	746915	IncDec	++		746758	1					
ANR	746916	UnaryOperationExpression	* me		746758	1					
ANR	746917	UnaryOperator	*		746758	0					
ANR	746918	Identifier	me		746758	1					
ANR	746919	ExpressionStatement	"memset ( me , 0 , sizeof ( * me ) )"	1013:1:24041:24067	746758	3	True				
ANR	746920	CallExpression	"memset ( me , 0 , sizeof ( * me ) )"		746758	0					
ANR	746921	Callee	memset		746758	0					
ANR	746922	Identifier	memset		746758	0					
ANR	746923	ArgumentList	me		746758	1					
ANR	746924	Argument	me		746758	0					
ANR	746925	Identifier	me		746758	0					
ANR	746926	Argument	0		746758	1					
ANR	746927	PrimaryExpression	0		746758	0					
ANR	746928	Argument	sizeof ( * me )		746758	2					
ANR	746929	SizeofExpression	sizeof ( * me )		746758	0					
ANR	746930	Sizeof	sizeof		746758	0					
ANR	746931	UnaryOperationExpression	* me		746758	1					
ANR	746932	UnaryOperator	*		746758	0					
ANR	746933	Identifier	me		746758	1					
ANR	746934	ReturnStatement	return 0 ;	1014:1:24070:24078	746758	4	True				
ANR	746935	PrimaryExpression	0		746758	0					
ANR	746936	ReturnType	int		746758	1					
ANR	746937	Identifier	addentry		746758	2					
ANR	746938	ParameterList	"struct magic_set * ms , struct magic_entry * me , struct magic_entry_set * mset"		746758	3					
ANR	746939	Parameter	struct magic_set * ms	994:9:23514:23533	746758	0	True				
ANR	746940	ParameterType	struct magic_set *		746758	0					
ANR	746941	Identifier	ms		746758	1					
ANR	746942	Parameter	struct magic_entry * me	994:31:23536:23557	746758	1	True				
ANR	746943	ParameterType	struct magic_entry *		746758	0					
ANR	746944	Identifier	me		746758	1					
ANR	746945	Parameter	struct magic_entry_set * mset	995:3:23563:23590	746758	2	True				
ANR	746946	ParameterType	struct magic_entry_set *		746758	0					
ANR	746947	Identifier	mset		746758	1					
ANR	746948	CFGEntryNode	ENTRY		746758		True				
ANR	746949	CFGExitNode	EXIT		746758		True				
ANR	746950	Symbol	mset [ i ] . max		746758						
ANR	746951	Symbol	* me -> mp		746758						
ANR	746952	Symbol	* * i		746758						
ANR	746953	Symbol	mp		746758						
ANR	746954	Symbol	ms		746758						
ANR	746955	Symbol	mset		746758						
ANR	746956	Symbol	* * me		746758						
ANR	746957	Symbol	i		746758						
ANR	746958	Symbol	* mset		746758						
ANR	746959	Symbol	* mp		746758						
ANR	746960	Symbol	me -> mp		746758						
ANR	746961	Symbol	FILE_NAME		746758						
ANR	746962	Symbol	me -> mp -> type		746758						
ANR	746963	Symbol	ALLOC_INCR		746758						
ANR	746964	Symbol	* i		746758						
ANR	746965	Symbol	mset [ i ] . count		746758						
ANR	746966	Symbol	me		746758						
ANR	746967	Symbol	* * mset		746758						
ANR	746968	Symbol	* mset [ i ] . me		746758						
ANR	746969	Symbol	* me		746758						
ANR	746970	Symbol	mset [ i ] . me		746758						
ANR	746971	Function	load_1	1020:8:24126:25977							
ANR	746972	FunctionDef	"load_1 (struct magic_set * ms , int action , const char * fn , int * errs , struct magic_entry_set * mset)"		746971	0					
ANR	746973	CompoundStatement		1023:0:24232:25977	746971	0					
ANR	746974	IdentifierDeclStatement	char buffer [ BUFSIZ + 1 ] ;	1024:1:24235:24258	746971	0	True				
ANR	746975	IdentifierDecl	buffer [ BUFSIZ + 1 ]		746971	0					
ANR	746976	IdentifierDeclType	char [ BUFSIZ + 1 ]		746971	0					
ANR	746977	Identifier	buffer		746971	1					
ANR	746978	AdditiveExpression	BUFSIZ + 1		746971	2		+			
ANR	746979	Identifier	BUFSIZ		746971	0					
ANR	746980	PrimaryExpression	1		746971	1					
ANR	746981	IdentifierDeclStatement	char * line = NULL ;	1025:1:24261:24278	746971	1	True				
ANR	746982	IdentifierDecl	* line = NULL		746971	0					
ANR	746983	IdentifierDeclType	char *		746971	0					
ANR	746984	Identifier	line		746971	1					
ANR	746985	AssignmentExpression	* line = NULL		746971	2		=			
ANR	746986	Identifier	NULL		746971	0					
ANR	746987	Identifier	NULL		746971	1					
ANR	746988	IdentifierDeclStatement	size_t len ;	1026:1:24281:24291	746971	2	True				
ANR	746989	IdentifierDecl	len		746971	0					
ANR	746990	IdentifierDeclType	size_t		746971	0					
ANR	746991	Identifier	len		746971	1					
ANR	746992	IdentifierDeclStatement	size_t lineno = 0 ;	1027:1:24294:24311	746971	3	True				
ANR	746993	IdentifierDecl	lineno = 0		746971	0					
ANR	746994	IdentifierDeclType	size_t		746971	0					
ANR	746995	Identifier	lineno		746971	1					
ANR	746996	AssignmentExpression	lineno = 0		746971	2		=			
ANR	746997	Identifier	lineno		746971	0					
ANR	746998	PrimaryExpression	0		746971	1					
ANR	746999	IdentifierDeclStatement	struct magic_entry me ;	1028:1:24314:24335	746971	4	True				
ANR	747000	IdentifierDecl	me		746971	0					
ANR	747001	IdentifierDeclType	struct magic_entry		746971	0					
ANR	747002	Identifier	me		746971	1					
ANR	747003	IdentifierDeclStatement	php_stream * stream ;	1030:1:24339:24357	746971	5	True				
ANR	747004	IdentifierDecl	* stream		746971	0					
ANR	747005	IdentifierDeclType	php_stream *		746971	0					
ANR	747006	Identifier	stream		746971	1					
ANR	747007	ExpressionStatement	ms -> file = fn	1033:1:24362:24375	746971	6	True				
ANR	747008	AssignmentExpression	ms -> file = fn		746971	0		=			
ANR	747009	PtrMemberAccess	ms -> file		746971	0					
ANR	747010	Identifier	ms		746971	0					
ANR	747011	Identifier	file		746971	1					
ANR	747012	Identifier	fn		746971	1					
ANR	747013	ExpressionStatement	"stream = php_stream_open_wrapper ( ( char * ) fn , ""rb"" , REPORT_ERRORS , NULL )"	1034:1:24378:24449	746971	7	True				
ANR	747014	AssignmentExpression	"stream = php_stream_open_wrapper ( ( char * ) fn , ""rb"" , REPORT_ERRORS , NULL )"		746971	0		=			
ANR	747015	Identifier	stream		746971	0					
ANR	747016	CallExpression	"php_stream_open_wrapper ( ( char * ) fn , ""rb"" , REPORT_ERRORS , NULL )"		746971	1					
ANR	747017	Callee	php_stream_open_wrapper		746971	0					
ANR	747018	Identifier	php_stream_open_wrapper		746971	0					
ANR	747019	ArgumentList	( char * ) fn		746971	1					
ANR	747020	Argument	( char * ) fn		746971	0					
ANR	747021	CastExpression	( char * ) fn		746971	0					
ANR	747022	CastTarget	char *		746971	0					
ANR	747023	Identifier	fn		746971	1					
ANR	747024	Argument	"""rb"""		746971	1					
ANR	747025	PrimaryExpression	"""rb"""		746971	0					
ANR	747026	Argument	REPORT_ERRORS		746971	2					
ANR	747027	Identifier	REPORT_ERRORS		746971	0					
ANR	747028	Argument	NULL		746971	3					
ANR	747029	Identifier	NULL		746971	0					
ANR	747030	IfStatement	if ( stream == NULL )		746971	8					
ANR	747031	Condition	stream == NULL	1036:5:24457:24470	746971	0	True				
ANR	747032	EqualityExpression	stream == NULL		746971	0		==			
ANR	747033	Identifier	stream		746971	0					
ANR	747034	Identifier	NULL		746971	1					
ANR	747035	CompoundStatement		14:21:240:240	746971	1					
ANR	747036	IfStatement	if ( errno != ENOENT )		746971	0					
ANR	747037	Condition	errno != ENOENT	1037:6:24481:24495	746971	0	True				
ANR	747038	EqualityExpression	errno != ENOENT		746971	0		!=			
ANR	747039	Identifier	errno		746971	0					
ANR	747040	Identifier	ENOENT		746971	1					
ANR	747041	ExpressionStatement	"file_error ( ms , errno , ""cannot read magic file `%s'"" , fn )"	1038:3:24501:24564	746971	1	True				
ANR	747042	CallExpression	"file_error ( ms , errno , ""cannot read magic file `%s'"" , fn )"		746971	0					
ANR	747043	Callee	file_error		746971	0					
ANR	747044	Identifier	file_error		746971	0					
ANR	747045	ArgumentList	ms		746971	1					
ANR	747046	Argument	ms		746971	0					
ANR	747047	Identifier	ms		746971	0					
ANR	747048	Argument	errno		746971	1					
ANR	747049	Identifier	errno		746971	0					
ANR	747050	Argument	"""cannot read magic file `%s'"""		746971	2					
ANR	747051	PrimaryExpression	"""cannot read magic file `%s'"""		746971	0					
ANR	747052	Argument	fn		746971	3					
ANR	747053	Identifier	fn		746971	0					
ANR	747054	ExpressionStatement	( * errs ) ++	1040:2:24568:24577	746971	1	True				
ANR	747055	PostIncDecOperationExpression	( * errs ) ++		746971	0					
ANR	747056	UnaryOperationExpression	* errs		746971	0					
ANR	747057	UnaryOperator	*		746971	0					
ANR	747058	Identifier	errs		746971	1					
ANR	747059	IncDec	++		746971	1					
ANR	747060	ReturnStatement	return ;	1041:2:24581:24587	746971	2	True				
ANR	747061	ExpressionStatement	"memset ( & me , 0 , sizeof ( me ) )"	1044:1:24594:24620	746971	9	True				
ANR	747062	CallExpression	"memset ( & me , 0 , sizeof ( me ) )"		746971	0					
ANR	747063	Callee	memset		746971	0					
ANR	747064	Identifier	memset		746971	0					
ANR	747065	ArgumentList	& me		746971	1					
ANR	747066	Argument	& me		746971	0					
ANR	747067	UnaryOperationExpression	& me		746971	0					
ANR	747068	UnaryOperator	&		746971	0					
ANR	747069	Identifier	me		746971	1					
ANR	747070	Argument	0		746971	1					
ANR	747071	PrimaryExpression	0		746971	0					
ANR	747072	Argument	sizeof ( me )		746971	2					
ANR	747073	SizeofExpression	sizeof ( me )		746971	0					
ANR	747074	Sizeof	sizeof		746971	0					
ANR	747075	SizeofOperand	me		746971	1					
ANR	747076	ForStatement	"for ( ms -> line = 1 ; ( line = php_stream_get_line ( stream , buffer , BUFSIZ , & len ) ) != NULL ; ms -> line ++ )"		746971	10					
ANR	747077	ForInit	ms -> line = 1 ;	1046:6:24660:24672	746971	0	True				
ANR	747078	AssignmentExpression	ms -> line = 1		746971	0		=			
ANR	747079	PtrMemberAccess	ms -> line		746971	0					
ANR	747080	Identifier	ms		746971	0					
ANR	747081	Identifier	line		746971	1					
ANR	747082	PrimaryExpression	1		746971	1					
ANR	747083	Condition	"( line = php_stream_get_line ( stream , buffer , BUFSIZ , & len ) ) != NULL"	1046:20:24674:24740	746971	1	True				
ANR	747084	EqualityExpression	"( line = php_stream_get_line ( stream , buffer , BUFSIZ , & len ) ) != NULL"		746971	0		!=			
ANR	747085	AssignmentExpression	"line = php_stream_get_line ( stream , buffer , BUFSIZ , & len )"		746971	0		=			
ANR	747086	Identifier	line		746971	0					
ANR	747087	CallExpression	"php_stream_get_line ( stream , buffer , BUFSIZ , & len )"		746971	1					
ANR	747088	Callee	php_stream_get_line		746971	0					
ANR	747089	Identifier	php_stream_get_line		746971	0					
ANR	747090	ArgumentList	stream		746971	1					
ANR	747091	Argument	stream		746971	0					
ANR	747092	Identifier	stream		746971	0					
ANR	747093	Argument	buffer		746971	1					
ANR	747094	Identifier	buffer		746971	0					
ANR	747095	Argument	BUFSIZ		746971	2					
ANR	747096	Identifier	BUFSIZ		746971	0					
ANR	747097	Argument	& len		746971	3					
ANR	747098	UnaryOperationExpression	& len		746971	0					
ANR	747099	UnaryOperator	&		746971	0					
ANR	747100	Identifier	len		746971	1					
ANR	747101	Identifier	NULL		746971	1					
ANR	747102	PostIncDecOperationExpression	ms -> line ++	1046:89:24743:24752	746971	2	True				
ANR	747103	PtrMemberAccess	ms -> line		746971	0					
ANR	747104	Identifier	ms		746971	0					
ANR	747105	Identifier	line		746971	1					
ANR	747106	IncDec	++		746971	1					
ANR	747107	CompoundStatement		24:101:522:522	746971	3					
ANR	747108	IfStatement	if ( len == 0 )		746971	0					
ANR	747109	Condition	len == 0	1047:6:24763:24770	746971	0	True				
ANR	747110	EqualityExpression	len == 0		746971	0		==			
ANR	747111	Identifier	len		746971	0					
ANR	747112	PrimaryExpression	0		746971	1					
ANR	747113	ContinueStatement	continue ;	1048:3:24806:24814	746971	1	True				
ANR	747114	IfStatement	if ( line [ len - 1 ] == '\\n' )		746971	1					
ANR	747115	Condition	line [ len - 1 ] == '\\n'	1049:6:24822:24842	746971	0	True				
ANR	747116	EqualityExpression	line [ len - 1 ] == '\\n'		746971	0		==			
ANR	747117	ArrayIndexing	line [ len - 1 ]		746971	0					
ANR	747118	Identifier	line		746971	0					
ANR	747119	AdditiveExpression	len - 1		746971	1		-			
ANR	747120	Identifier	len		746971	0					
ANR	747121	PrimaryExpression	1		746971	1					
ANR	747122	PrimaryExpression	'\\n'		746971	1					
ANR	747123	CompoundStatement		27:29:612:612	746971	1					
ANR	747124	ExpressionStatement	lineno ++	1050:3:24850:24858	746971	0	True				
ANR	747125	PostIncDecOperationExpression	lineno ++		746971	0					
ANR	747126	Identifier	lineno		746971	0					
ANR	747127	IncDec	++		746971	1					
ANR	747128	ExpressionStatement	line [ len - 1 ] = '\\0'	1051:3:24863:24883	746971	1	True				
ANR	747129	AssignmentExpression	line [ len - 1 ] = '\\0'		746971	0		=			
ANR	747130	ArrayIndexing	line [ len - 1 ]		746971	0					
ANR	747131	Identifier	line		746971	0					
ANR	747132	AdditiveExpression	len - 1		746971	1		-			
ANR	747133	Identifier	len		746971	0					
ANR	747134	PrimaryExpression	1		746971	1					
ANR	747135	PrimaryExpression	'\\0'		746971	1					
ANR	747136	SwitchStatement	switch ( line [ 0 ] )		746971	2					
ANR	747137	Condition	line [ 0 ]	1053:10:24920:24926	746971	0	True				
ANR	747138	ArrayIndexing	line [ 0 ]		746971	0					
ANR	747139	Identifier	line		746971	0					
ANR	747140	PrimaryExpression	0		746971	1					
ANR	747141	CompoundStatement		31:19:696:696	746971	1					
ANR	747142	Label	case '\\0' :	1054:2:24933:24942	746971	0	True				
ANR	747143	Label	case '#' :	1055:2:24972:24980	746971	1	True				
ANR	747144	ContinueStatement	continue ;	1056:3:25013:25021	746971	2	True				
ANR	747145	Label	case '!' :	1057:2:25025:25033	746971	3	True				
ANR	747146	IfStatement	if ( line [ 1 ] == ':' )		746971	4					
ANR	747147	Condition	line [ 1 ] == ':'	1058:7:25042:25055	746971	0	True				
ANR	747148	EqualityExpression	line [ 1 ] == ':'		746971	0		==			
ANR	747149	ArrayIndexing	line [ 1 ]		746971	0					
ANR	747150	Identifier	line		746971	0					
ANR	747151	PrimaryExpression	1		746971	1					
ANR	747152	PrimaryExpression	':'		746971	1					
ANR	747153	CompoundStatement		37:4:831:839	746971	1					
ANR	747154	IdentifierDeclStatement	size_t i ;	1059:4:25064:25072	746971	0	True				
ANR	747155	IdentifierDecl	i		746971	0					
ANR	747156	IdentifierDeclType	size_t		746971	0					
ANR	747157	Identifier	i		746971	1					
ANR	747158	ForStatement	for ( i = 0 ; bang [ i ] . name != NULL ; i ++ )		746971	1					
ANR	747159	ForInit	i = 0 ;	1061:9:25084:25089	746971	0	True				
ANR	747160	AssignmentExpression	i = 0		746971	0		=			
ANR	747161	Identifier	i		746971	0					
ANR	747162	PrimaryExpression	0		746971	1					
ANR	747163	Condition	bang [ i ] . name != NULL	1061:16:25091:25110	746971	1	True				
ANR	747164	EqualityExpression	bang [ i ] . name != NULL		746971	0		!=			
ANR	747165	MemberAccess	bang [ i ] . name		746971	0					
ANR	747166	ArrayIndexing	bang [ i ]		746971	0					
ANR	747167	Identifier	bang		746971	0					
ANR	747168	Identifier	i		746971	1					
ANR	747169	Identifier	name		746971	1					
ANR	747170	Identifier	NULL		746971	1					
ANR	747171	PostIncDecOperationExpression	i ++	1061:38:25113:25115	746971	2	True				
ANR	747172	Identifier	i		746971	0					
ANR	747173	IncDec	++		746971	1					
ANR	747174	CompoundStatement		39:43:885:885	746971	3					
ANR	747175	IfStatement	"if ( ( size_t ) ( len - 2 ) > bang [ i ] . len && memcmp ( bang [ i ] . name , line + 2 , bang [ i ] . len ) == 0 )"		746971	0					
ANR	747176	Condition	"( size_t ) ( len - 2 ) > bang [ i ] . len && memcmp ( bang [ i ] . name , line + 2 , bang [ i ] . len ) == 0"	1062:9:25129:25229	746971	0	True				
ANR	747177	AndExpression	"( size_t ) ( len - 2 ) > bang [ i ] . len && memcmp ( bang [ i ] . name , line + 2 , bang [ i ] . len ) == 0"		746971	0		&&			
ANR	747178	RelationalExpression	( size_t ) ( len - 2 ) > bang [ i ] . len		746971	0		>			
ANR	747179	CastExpression	( size_t ) ( len - 2 )		746971	0					
ANR	747180	CastTarget	size_t		746971	0					
ANR	747181	AdditiveExpression	len - 2		746971	1		-			
ANR	747182	Identifier	len		746971	0					
ANR	747183	PrimaryExpression	2		746971	1					
ANR	747184	MemberAccess	bang [ i ] . len		746971	1					
ANR	747185	ArrayIndexing	bang [ i ]		746971	0					
ANR	747186	Identifier	bang		746971	0					
ANR	747187	Identifier	i		746971	1					
ANR	747188	Identifier	len		746971	1					
ANR	747189	EqualityExpression	"memcmp ( bang [ i ] . name , line + 2 , bang [ i ] . len ) == 0"		746971	1		==			
ANR	747190	CallExpression	"memcmp ( bang [ i ] . name , line + 2 , bang [ i ] . len )"		746971	0					
ANR	747191	Callee	memcmp		746971	0					
ANR	747192	Identifier	memcmp		746971	0					
ANR	747193	ArgumentList	bang [ i ] . name		746971	1					
ANR	747194	Argument	bang [ i ] . name		746971	0					
ANR	747195	MemberAccess	bang [ i ] . name		746971	0					
ANR	747196	ArrayIndexing	bang [ i ]		746971	0					
ANR	747197	Identifier	bang		746971	0					
ANR	747198	Identifier	i		746971	1					
ANR	747199	Identifier	name		746971	1					
ANR	747200	Argument	line + 2		746971	1					
ANR	747201	AdditiveExpression	line + 2		746971	0		+			
ANR	747202	Identifier	line		746971	0					
ANR	747203	PrimaryExpression	2		746971	1					
ANR	747204	Argument	bang [ i ] . len		746971	2					
ANR	747205	MemberAccess	bang [ i ] . len		746971	0					
ANR	747206	ArrayIndexing	bang [ i ]		746971	0					
ANR	747207	Identifier	bang		746971	0					
ANR	747208	Identifier	i		746971	1					
ANR	747209	Identifier	len		746971	1					
ANR	747210	PrimaryExpression	0		746971	1					
ANR	747211	BreakStatement	break ;	1065:6:25238:25243	746971	1	True				
ANR	747212	IfStatement	if ( bang [ i ] . name == NULL )		746971	2					
ANR	747213	Condition	bang [ i ] . name == NULL	1067:8:25259:25278	746971	0	True				
ANR	747214	EqualityExpression	bang [ i ] . name == NULL		746971	0		==			
ANR	747215	MemberAccess	bang [ i ] . name		746971	0					
ANR	747216	ArrayIndexing	bang [ i ]		746971	0					
ANR	747217	Identifier	bang		746971	0					
ANR	747218	Identifier	i		746971	1					
ANR	747219	Identifier	name		746971	1					
ANR	747220	Identifier	NULL		746971	1					
ANR	747221	CompoundStatement		45:30:1048:1048	746971	1					
ANR	747222	ExpressionStatement	"file_error ( ms , 0 , ""Unknown !: entry `%s'"" , line )"	1068:5:25288:25345	746971	0	True				
ANR	747223	CallExpression	"file_error ( ms , 0 , ""Unknown !: entry `%s'"" , line )"		746971	0					
ANR	747224	Callee	file_error		746971	0					
ANR	747225	Identifier	file_error		746971	0					
ANR	747226	ArgumentList	ms		746971	1					
ANR	747227	Argument	ms		746971	0					
ANR	747228	Identifier	ms		746971	0					
ANR	747229	Argument	0		746971	1					
ANR	747230	PrimaryExpression	0		746971	0					
ANR	747231	Argument	"""Unknown !: entry `%s'"""		746971	2					
ANR	747232	PrimaryExpression	"""Unknown !: entry `%s'"""		746971	0					
ANR	747233	Argument	line		746971	3					
ANR	747234	Identifier	line		746971	0					
ANR	747235	ExpressionStatement	( * errs ) ++	1070:5:25352:25361	746971	1	True				
ANR	747236	PostIncDecOperationExpression	( * errs ) ++		746971	0					
ANR	747237	UnaryOperationExpression	* errs		746971	0					
ANR	747238	UnaryOperator	*		746971	0					
ANR	747239	Identifier	errs		746971	1					
ANR	747240	IncDec	++		746971	1					
ANR	747241	ContinueStatement	continue ;	1071:5:25368:25376	746971	2	True				
ANR	747242	IfStatement	if ( me . mp == NULL )		746971	3					
ANR	747243	Condition	me . mp == NULL	1073:8:25392:25404	746971	0	True				
ANR	747244	EqualityExpression	me . mp == NULL		746971	0		==			
ANR	747245	MemberAccess	me . mp		746971	0					
ANR	747246	Identifier	me		746971	0					
ANR	747247	Identifier	mp		746971	1					
ANR	747248	Identifier	NULL		746971	1					
ANR	747249	CompoundStatement		51:23:1174:1174	746971	1					
ANR	747250	ExpressionStatement	"file_error ( ms , 0 , ""No current entry for :!%s type"" , bang [ i ] . name )"	1074:5:25414:25494	746971	0	True				
ANR	747251	CallExpression	"file_error ( ms , 0 , ""No current entry for :!%s type"" , bang [ i ] . name )"		746971	0					
ANR	747252	Callee	file_error		746971	0					
ANR	747253	Identifier	file_error		746971	0					
ANR	747254	ArgumentList	ms		746971	1					
ANR	747255	Argument	ms		746971	0					
ANR	747256	Identifier	ms		746971	0					
ANR	747257	Argument	0		746971	1					
ANR	747258	PrimaryExpression	0		746971	0					
ANR	747259	Argument	"""No current entry for :!%s type"""		746971	2					
ANR	747260	PrimaryExpression	"""No current entry for :!%s type"""		746971	0					
ANR	747261	Argument	bang [ i ] . name		746971	3					
ANR	747262	MemberAccess	bang [ i ] . name		746971	0					
ANR	747263	ArrayIndexing	bang [ i ]		746971	0					
ANR	747264	Identifier	bang		746971	0					
ANR	747265	Identifier	i		746971	1					
ANR	747266	Identifier	name		746971	1					
ANR	747267	ExpressionStatement	( * errs ) ++	1077:5:25501:25510	746971	1	True				
ANR	747268	PostIncDecOperationExpression	( * errs ) ++		746971	0					
ANR	747269	UnaryOperationExpression	* errs		746971	0					
ANR	747270	UnaryOperator	*		746971	0					
ANR	747271	Identifier	errs		746971	1					
ANR	747272	IncDec	++		746971	1					
ANR	747273	ContinueStatement	continue ;	1078:5:25517:25525	746971	2	True				
ANR	747274	IfStatement	"if ( ( * bang [ i ] . fun ) ( ms , & me , line + bang [ i ] . len + 2 ) != 0 )"		746971	4					
ANR	747275	Condition	"( * bang [ i ] . fun ) ( ms , & me , line + bang [ i ] . len + 2 ) != 0"	1080:8:25541:25600	746971	0	True				
ANR	747276	EqualityExpression	"( * bang [ i ] . fun ) ( ms , & me , line + bang [ i ] . len + 2 ) != 0"		746971	0		!=			
ANR	747277	CallExpression	"( * bang [ i ] . fun ) ( ms , & me , line + bang [ i ] . len + 2 )"		746971	0					
ANR	747278	Callee	* bang [ i ] . fun		746971	0					
ANR	747279	UnaryOperationExpression	* bang [ i ] . fun		746971	0					
ANR	747280	UnaryOperator	*		746971	0					
ANR	747281	MemberAccess	bang [ i ] . fun		746971	1					
ANR	747282	ArrayIndexing	bang [ i ]		746971	0					
ANR	747283	Identifier	bang		746971	0					
ANR	747284	Identifier	i		746971	1					
ANR	747285	Identifier	fun		746971	1					
ANR	747286	ArgumentList	ms		746971	1					
ANR	747287	Argument	ms		746971	0					
ANR	747288	Identifier	ms		746971	0					
ANR	747289	Argument	& me		746971	1					
ANR	747290	UnaryOperationExpression	& me		746971	0					
ANR	747291	UnaryOperator	&		746971	0					
ANR	747292	Identifier	me		746971	1					
ANR	747293	Argument	line + bang [ i ] . len + 2		746971	2					
ANR	747294	AdditiveExpression	line + bang [ i ] . len + 2		746971	0		+			
ANR	747295	Identifier	line		746971	0					
ANR	747296	AdditiveExpression	bang [ i ] . len + 2		746971	1		+			
ANR	747297	MemberAccess	bang [ i ] . len		746971	0					
ANR	747298	ArrayIndexing	bang [ i ]		746971	0					
ANR	747299	Identifier	bang		746971	0					
ANR	747300	Identifier	i		746971	1					
ANR	747301	Identifier	len		746971	1					
ANR	747302	PrimaryExpression	2		746971	1					
ANR	747303	PrimaryExpression	0		746971	1					
ANR	747304	CompoundStatement		59:38:1370:1370	746971	1					
ANR	747305	ExpressionStatement	( * errs ) ++	1082:5:25610:25619	746971	0	True				
ANR	747306	PostIncDecOperationExpression	( * errs ) ++		746971	0					
ANR	747307	UnaryOperationExpression	* errs		746971	0					
ANR	747308	UnaryOperator	*		746971	0					
ANR	747309	Identifier	errs		746971	1					
ANR	747310	IncDec	++		746971	1					
ANR	747311	ContinueStatement	continue ;	1083:5:25626:25634	746971	1	True				
ANR	747312	ContinueStatement	continue ;	1085:4:25646:25654	746971	5	True				
ANR	747313	Label	default :	1088:2:25682:25689	746971	5	True				
ANR	747314	Identifier	default		746971	0					
ANR	747315	Label	again :	1089:2:25693:25698	746971	6	True				
ANR	747316	Identifier	again		746971	0					
ANR	747317	SwitchStatement	"switch ( parse ( ms , & me , line , lineno , action ) )"		746971	7					
ANR	747318	Condition	"parse ( ms , & me , line , lineno , action )"	1090:11:25711:25746	746971	0	True				
ANR	747319	CallExpression	"parse ( ms , & me , line , lineno , action )"		746971	0					
ANR	747320	Callee	parse		746971	0					
ANR	747321	Identifier	parse		746971	0					
ANR	747322	ArgumentList	ms		746971	1					
ANR	747323	Argument	ms		746971	0					
ANR	747324	Identifier	ms		746971	0					
ANR	747325	Argument	& me		746971	1					
ANR	747326	UnaryOperationExpression	& me		746971	0					
ANR	747327	UnaryOperator	&		746971	0					
ANR	747328	Identifier	me		746971	1					
ANR	747329	Argument	line		746971	2					
ANR	747330	Identifier	line		746971	0					
ANR	747331	Argument	lineno		746971	3					
ANR	747332	Identifier	lineno		746971	0					
ANR	747333	Argument	action		746971	4					
ANR	747334	Identifier	action		746971	0					
ANR	747335	CompoundStatement		68:49:1516:1516	746971	1					
ANR	747336	Label	case 0 :	1091:3:25754:25760	746971	0	True				
ANR	747337	ContinueStatement	continue ;	1092:4:25766:25774	746971	1	True				
ANR	747338	Label	case 1 :	1093:3:25779:25785	746971	2	True				
ANR	747339	ExpressionStatement	"( void ) addentry ( ms , & me , mset )"	1094:4:25791:25820	746971	3	True				
ANR	747340	CastExpression	"( void ) addentry ( ms , & me , mset )"		746971	0					
ANR	747341	CastTarget	void		746971	0					
ANR	747342	CallExpression	"addentry ( ms , & me , mset )"		746971	1					
ANR	747343	Callee	addentry		746971	0					
ANR	747344	Identifier	addentry		746971	0					
ANR	747345	ArgumentList	ms		746971	1					
ANR	747346	Argument	ms		746971	0					
ANR	747347	Identifier	ms		746971	0					
ANR	747348	Argument	& me		746971	1					
ANR	747349	UnaryOperationExpression	& me		746971	0					
ANR	747350	UnaryOperator	&		746971	0					
ANR	747351	Identifier	me		746971	1					
ANR	747352	Argument	mset		746971	2					
ANR	747353	Identifier	mset		746971	0					
ANR	747354	GotoStatement	goto again ;	1095:4:25826:25836	746971	4	True				
ANR	747355	Identifier	again		746971	0					
ANR	747356	Label	default :	1096:3:25841:25848	746971	5	True				
ANR	747357	Identifier	default		746971	0					
ANR	747358	ExpressionStatement	( * errs ) ++	1097:4:25854:25863	746971	6	True				
ANR	747359	PostIncDecOperationExpression	( * errs ) ++		746971	0					
ANR	747360	UnaryOperationExpression	* errs		746971	0					
ANR	747361	UnaryOperator	*		746971	0					
ANR	747362	Identifier	errs		746971	1					
ANR	747363	IncDec	++		746971	1					
ANR	747364	BreakStatement	break ;	1098:4:25869:25874	746971	7	True				
ANR	747365	IfStatement	if ( me . mp )		746971	11					
ANR	747366	Condition	me . mp	1102:5:25893:25897	746971	0	True				
ANR	747367	MemberAccess	me . mp		746971	0					
ANR	747368	Identifier	me		746971	0					
ANR	747369	Identifier	mp		746971	1					
ANR	747370	ExpressionStatement	"( void ) addentry ( ms , & me , mset )"	1103:2:25902:25931	746971	1	True				
ANR	747371	CastExpression	"( void ) addentry ( ms , & me , mset )"		746971	0					
ANR	747372	CastTarget	void		746971	0					
ANR	747373	CallExpression	"addentry ( ms , & me , mset )"		746971	1					
ANR	747374	Callee	addentry		746971	0					
ANR	747375	Identifier	addentry		746971	0					
ANR	747376	ArgumentList	ms		746971	1					
ANR	747377	Argument	ms		746971	0					
ANR	747378	Identifier	ms		746971	0					
ANR	747379	Argument	& me		746971	1					
ANR	747380	UnaryOperationExpression	& me		746971	0					
ANR	747381	UnaryOperator	&		746971	0					
ANR	747382	Identifier	me		746971	1					
ANR	747383	Argument	mset		746971	2					
ANR	747384	Identifier	mset		746971	0					
ANR	747385	ExpressionStatement	efree ( line )	1104:4:25937:25948	746971	12	True				
ANR	747386	CallExpression	efree ( line )		746971	0					
ANR	747387	Callee	efree		746971	0					
ANR	747388	Identifier	efree		746971	0					
ANR	747389	ArgumentList	line		746971	1					
ANR	747390	Argument	line		746971	0					
ANR	747391	Identifier	line		746971	0					
ANR	747392	ExpressionStatement	php_stream_close ( stream )	1105:1:25951:25975	746971	13	True				
ANR	747393	CallExpression	php_stream_close ( stream )		746971	0					
ANR	747394	Callee	php_stream_close		746971	0					
ANR	747395	Identifier	php_stream_close		746971	0					
ANR	747396	ArgumentList	stream		746971	1					
ANR	747397	Argument	stream		746971	0					
ANR	747398	Identifier	stream		746971	0					
ANR	747399	ReturnType	void		746971	1					
ANR	747400	Identifier	load_1		746971	2					
ANR	747401	ParameterList	"struct magic_set * ms , int action , const char * fn , int * errs , struct magic_entry_set * mset"		746971	3					
ANR	747402	Parameter	struct magic_set * ms	1021:7:24138:24157	746971	0	True				
ANR	747403	ParameterType	struct magic_set *		746971	0					
ANR	747404	Identifier	ms		746971	1					
ANR	747405	Parameter	int action	1021:29:24160:24169	746971	1	True				
ANR	747406	ParameterType	int		746971	0					
ANR	747407	Identifier	action		746971	1					
ANR	747408	Parameter	const char * fn	1021:41:24172:24185	746971	2	True				
ANR	747409	ParameterType	const char *		746971	0					
ANR	747410	Identifier	fn		746971	1					
ANR	747411	Parameter	int * errs	1021:57:24188:24196	746971	3	True				
ANR	747412	ParameterType	int *		746971	0					
ANR	747413	Identifier	errs		746971	1					
ANR	747414	Parameter	struct magic_entry_set * mset	1022:3:24202:24229	746971	4	True				
ANR	747415	ParameterType	struct magic_entry_set *		746971	0					
ANR	747416	Identifier	mset		746971	1					
ANR	747417	CFGEntryNode	ENTRY		746971		True				
ANR	747418	CFGExitNode	EXIT		746971		True				
ANR	747419	Symbol	errs		746971						
ANR	747420	Symbol	& me		746971						
ANR	747421	Symbol	line		746971						
ANR	747422	Symbol	bang [ i ] . len		746971						
ANR	747423	Symbol	fn		746971						
ANR	747424	Symbol	* line		746971						
ANR	747425	Symbol	* ms		746971						
ANR	747426	Symbol	php_stream_open_wrapper		746971						
ANR	747427	Symbol	memcmp		746971						
ANR	747428	Symbol	len		746971						
ANR	747429	Symbol	stream		746971						
ANR	747430	Symbol	bang		746971						
ANR	747431	Symbol	me		746971						
ANR	747432	Symbol	action		746971						
ANR	747433	Symbol	buffer		746971						
ANR	747434	Symbol	bang [ i ] . fun		746971						
ANR	747435	Symbol	bang [ i ] . name		746971						
ANR	747436	Symbol	errno		746971						
ANR	747437	Symbol	* * i		746971						
ANR	747438	Symbol	NULL		746971						
ANR	747439	Symbol	me . mp		746971						
ANR	747440	Symbol	ms		746971						
ANR	747441	Symbol	mset		746971						
ANR	747442	Symbol	i		746971						
ANR	747443	Symbol	ms -> line		746971						
ANR	747444	Symbol	ENOENT		746971						
ANR	747445	Symbol	parse		746971						
ANR	747446	Symbol	ms -> file		746971						
ANR	747447	Symbol	* * bang		746971						
ANR	747448	Symbol	* bang		746971						
ANR	747449	Symbol	lineno		746971						
ANR	747450	Symbol	* i		746971						
ANR	747451	Symbol	REPORT_ERRORS		746971						
ANR	747452	Symbol	php_stream_get_line		746971						
ANR	747453	Symbol	* bang [ i ] . fun		746971						
ANR	747454	Symbol	* errs		746971						
ANR	747455	Symbol	& len		746971						
ANR	747456	Symbol	BUFSIZ		746971						
ANR	747457	Symbol	* len		746971						
ANR	747458	Function	cmpstrp	1112:8:26084:26193							
ANR	747459	FunctionDef	"cmpstrp (const void * p1 , const void * p2)"		747458	0					
ANR	747460	CompoundStatement		1114:0:26128:26193	747458	0					
ANR	747461	Statement	return	1115:8:26138:26143	747458	0	True				
ANR	747462	Statement	strcmp	1115:15:26145:26150	747458	1	True				
ANR	747463	Statement	(	1115:21:26151:26151	747458	2	True				
ANR	747464	Statement	*	1115:22:26152:26152	747458	3	True				
ANR	747465	Statement	(	1115:23:26153:26153	747458	4	True				
ANR	747466	Statement	char	1115:24:26154:26157	747458	5	True				
ANR	747467	Statement	*	1115:29:26159:26159	747458	6	True				
ANR	747468	Statement	const	1115:30:26160:26164	747458	7	True				
ANR	747469	Statement	*	1115:36:26166:26166	747458	8	True				
ANR	747470	Statement	)	1115:37:26167:26167	747458	9	True				
ANR	747471	Statement	p1	1115:38:26168:26169	747458	10	True				
ANR	747472	Statement	","	1115:40:26170:26170	747458	11	True				
ANR	747473	Statement	*	1115:42:26172:26172	747458	12	True				
ANR	747474	Statement	(	1115:43:26173:26173	747458	13	True				
ANR	747475	Statement	char	1115:44:26174:26177	747458	14	True				
ANR	747476	Statement	*	1115:49:26179:26179	747458	15	True				
ANR	747477	Statement	const	1115:50:26180:26184	747458	16	True				
ANR	747478	Statement	*	1115:56:26186:26186	747458	17	True				
ANR	747479	Statement	)	1115:57:26187:26187	747458	18	True				
ANR	747480	Statement	p2	1115:58:26188:26189	747458	19	True				
ANR	747481	Statement	)	1115:60:26190:26190	747458	20	True				
ANR	747482	ExpressionStatement		1115:61:26191:26191	747458	21	True				
ANR	747483	ReturnType	int		747458	1					
ANR	747484	Identifier	cmpstrp		747458	2					
ANR	747485	ParameterList	"const void * p1 , const void * p2"		747458	3					
ANR	747486	Parameter	const void * p1	1113:8:26096:26109	747458	0	True				
ANR	747487	ParameterType	const void *		747458	0					
ANR	747488	Identifier	p1		747458	1					
ANR	747489	Parameter	const void * p2	1113:24:26112:26125	747458	1	True				
ANR	747490	ParameterType	const void *		747458	0					
ANR	747491	Identifier	p2		747458	1					
ANR	747492	CFGEntryNode	ENTRY		747458		True				
ANR	747493	CFGExitNode	EXIT		747458		True				
ANR	747494	Symbol	p1		747458						
ANR	747495	Symbol	p2		747458						
ANR	747496	Function	set_text_binary	1119:8:26205:27207							
ANR	747497	FunctionDef	"set_text_binary (struct magic_set * ms , struct magic_entry * me , uint32_t nme , uint32_t starttest)"		747496	0					
ANR	747498	CompoundStatement		1122:0:26314:27207	747496	0					
ANR	747499	Statement	static	1123:1:26317:26322	747496	0	True				
ANR	747500	IdentifierDeclStatement	"const char text [ ] = ""text"" ;"	1123:8:26324:26350	747496	1	True				
ANR	747501	IdentifierDecl	"text [ ] = ""text"""		747496	0					
ANR	747502	IdentifierDeclType	const char [ ]		747496	0					
ANR	747503	Identifier	text		747496	1					
ANR	747504	AssignmentExpression	"text [ ] = ""text"""		747496	2		=			
ANR	747505	Identifier	text		747496	0					
ANR	747506	PrimaryExpression	"""text"""		747496	1					
ANR	747507	Statement	static	1124:1:26353:26358	747496	2	True				
ANR	747508	IdentifierDeclStatement	"const char binary [ ] = ""binary"" ;"	1124:8:26360:26390	747496	3	True				
ANR	747509	IdentifierDecl	"binary [ ] = ""binary"""		747496	0					
ANR	747510	IdentifierDeclType	const char [ ]		747496	0					
ANR	747511	Identifier	binary		747496	1					
ANR	747512	AssignmentExpression	"binary [ ] = ""binary"""		747496	2		=			
ANR	747513	Identifier	binary		747496	0					
ANR	747514	PrimaryExpression	"""binary"""		747496	1					
ANR	747515	Statement	static	1125:1:26393:26398	747496	4	True				
ANR	747516	IdentifierDeclStatement	const size_t len = sizeof ( text ) ;	1125:8:26400:26431	747496	5	True				
ANR	747517	IdentifierDecl	len = sizeof ( text )		747496	0					
ANR	747518	IdentifierDeclType	const size_t		747496	0					
ANR	747519	Identifier	len		747496	1					
ANR	747520	AssignmentExpression	len = sizeof ( text )		747496	2		=			
ANR	747521	Identifier	len		747496	0					
ANR	747522	SizeofExpression	sizeof ( text )		747496	1					
ANR	747523	Sizeof	sizeof		747496	0					
ANR	747524	SizeofOperand	text		747496	1					
ANR	747525	IdentifierDeclStatement	uint32_t i = starttest ;	1127:1:26435:26457	747496	6	True				
ANR	747526	IdentifierDecl	i = starttest		747496	0					
ANR	747527	IdentifierDeclType	uint32_t		747496	0					
ANR	747528	Identifier	i		747496	1					
ANR	747529	AssignmentExpression	i = starttest		747496	2		=			
ANR	747530	Identifier	starttest		747496	0					
ANR	747531	Identifier	starttest		747496	1					
ANR	747532	DoStatement	do		747496	7					
ANR	747533	CompoundStatement		8:4:149:149	747496	0					
ANR	747534	ExpressionStatement	"set_test_type ( me [ starttest ] . mp , me [ i ] . mp )"	1130:2:26468:26509	747496	0	True				
ANR	747535	CallExpression	"set_test_type ( me [ starttest ] . mp , me [ i ] . mp )"		747496	0					
ANR	747536	Callee	set_test_type		747496	0					
ANR	747537	Identifier	set_test_type		747496	0					
ANR	747538	ArgumentList	me [ starttest ] . mp		747496	1					
ANR	747539	Argument	me [ starttest ] . mp		747496	0					
ANR	747540	MemberAccess	me [ starttest ] . mp		747496	0					
ANR	747541	ArrayIndexing	me [ starttest ]		747496	0					
ANR	747542	Identifier	me		747496	0					
ANR	747543	Identifier	starttest		747496	1					
ANR	747544	Identifier	mp		747496	1					
ANR	747545	Argument	me [ i ] . mp		747496	1					
ANR	747546	MemberAccess	me [ i ] . mp		747496	0					
ANR	747547	ArrayIndexing	me [ i ]		747496	0					
ANR	747548	Identifier	me		747496	0					
ANR	747549	Identifier	i		747496	1					
ANR	747550	Identifier	mp		747496	1					
ANR	747551	IfStatement	if ( ( ms -> flags & MAGIC_DEBUG ) == 0 )		747496	1					
ANR	747552	Condition	( ms -> flags & MAGIC_DEBUG ) == 0	1131:6:26517:26546	747496	0	True				
ANR	747553	EqualityExpression	( ms -> flags & MAGIC_DEBUG ) == 0		747496	0		==			
ANR	747554	BitAndExpression	ms -> flags & MAGIC_DEBUG		747496	0		&			
ANR	747555	PtrMemberAccess	ms -> flags		747496	0					
ANR	747556	Identifier	ms		747496	0					
ANR	747557	Identifier	flags		747496	1					
ANR	747558	Identifier	MAGIC_DEBUG		747496	1					
ANR	747559	PrimaryExpression	0		747496	1					
ANR	747560	ContinueStatement	continue ;	1132:3:26552:26560	747496	1	True				
ANR	747561	ExpressionStatement	"( void ) fprintf ( stderr , ""%s%s%s: %s\\n"" , me [ i ] . mp -> mimetype , me [ i ] . mp -> mimetype [ 0 ] == '\\0' ? """" : ""; "" , me [ i ] . mp -> desc [ 0 ] ? me [ i ] . mp -> desc : ""(no description)"" , me [ i ] . mp -> flag & BINTEST ? binary : text )"	1133:2:26564:26787	747496	2	True				
ANR	747562	CastExpression	"( void ) fprintf ( stderr , ""%s%s%s: %s\\n"" , me [ i ] . mp -> mimetype , me [ i ] . mp -> mimetype [ 0 ] == '\\0' ? """" : ""; "" , me [ i ] . mp -> desc [ 0 ] ? me [ i ] . mp -> desc : ""(no description)"" , me [ i ] . mp -> flag & BINTEST ? binary : text )"		747496	0					
ANR	747563	CastTarget	void		747496	0					
ANR	747564	CallExpression	"fprintf ( stderr , ""%s%s%s: %s\\n"" , me [ i ] . mp -> mimetype , me [ i ] . mp -> mimetype [ 0 ] == '\\0' ? """" : ""; "" , me [ i ] . mp -> desc [ 0 ] ? me [ i ] . mp -> desc : ""(no description)"" , me [ i ] . mp -> flag & BINTEST ? binary : text )"		747496	1					
ANR	747565	Callee	fprintf		747496	0					
ANR	747566	Identifier	fprintf		747496	0					
ANR	747567	ArgumentList	stderr		747496	1					
ANR	747568	Argument	stderr		747496	0					
ANR	747569	Identifier	stderr		747496	0					
ANR	747570	Argument	"""%s%s%s: %s\\n"""		747496	1					
ANR	747571	PrimaryExpression	"""%s%s%s: %s\\n"""		747496	0					
ANR	747572	Argument	me [ i ] . mp -> mimetype		747496	2					
ANR	747573	PtrMemberAccess	me [ i ] . mp -> mimetype		747496	0					
ANR	747574	MemberAccess	me [ i ] . mp		747496	0					
ANR	747575	ArrayIndexing	me [ i ]		747496	0					
ANR	747576	Identifier	me		747496	0					
ANR	747577	Identifier	i		747496	1					
ANR	747578	Identifier	mp		747496	1					
ANR	747579	Identifier	mimetype		747496	1					
ANR	747580	Argument	"me [ i ] . mp -> mimetype [ 0 ] == '\\0' ? """" : ""; """		747496	3					
ANR	747581	ConditionalExpression	"me [ i ] . mp -> mimetype [ 0 ] == '\\0' ? """" : ""; """		747496	0					
ANR	747582	Condition	me [ i ] . mp -> mimetype [ 0 ] == '\\0'		747496	0					
ANR	747583	EqualityExpression	me [ i ] . mp -> mimetype [ 0 ] == '\\0'		747496	0		==			
ANR	747584	ArrayIndexing	me [ i ] . mp -> mimetype [ 0 ]		747496	0					
ANR	747585	PtrMemberAccess	me [ i ] . mp -> mimetype		747496	0					
ANR	747586	MemberAccess	me [ i ] . mp		747496	0					
ANR	747587	ArrayIndexing	me [ i ]		747496	0					
ANR	747588	Identifier	me		747496	0					
ANR	747589	Identifier	i		747496	1					
ANR	747590	Identifier	mp		747496	1					
ANR	747591	Identifier	mimetype		747496	1					
ANR	747592	PrimaryExpression	0		747496	1					
ANR	747593	PrimaryExpression	'\\0'		747496	1					
ANR	747594	PrimaryExpression	""""""		747496	1					
ANR	747595	PrimaryExpression	"""; """		747496	2					
ANR	747596	Argument	"me [ i ] . mp -> desc [ 0 ] ? me [ i ] . mp -> desc : ""(no description)"""		747496	4					
ANR	747597	ConditionalExpression	"me [ i ] . mp -> desc [ 0 ] ? me [ i ] . mp -> desc : ""(no description)"""		747496	0					
ANR	747598	Condition	me [ i ] . mp -> desc [ 0 ]		747496	0					
ANR	747599	ArrayIndexing	me [ i ] . mp -> desc [ 0 ]		747496	0					
ANR	747600	PtrMemberAccess	me [ i ] . mp -> desc		747496	0					
ANR	747601	MemberAccess	me [ i ] . mp		747496	0					
ANR	747602	ArrayIndexing	me [ i ]		747496	0					
ANR	747603	Identifier	me		747496	0					
ANR	747604	Identifier	i		747496	1					
ANR	747605	Identifier	mp		747496	1					
ANR	747606	Identifier	desc		747496	1					
ANR	747607	PrimaryExpression	0		747496	1					
ANR	747608	PtrMemberAccess	me [ i ] . mp -> desc		747496	1					
ANR	747609	MemberAccess	me [ i ] . mp		747496	0					
ANR	747610	ArrayIndexing	me [ i ]		747496	0					
ANR	747611	Identifier	me		747496	0					
ANR	747612	Identifier	i		747496	1					
ANR	747613	Identifier	mp		747496	1					
ANR	747614	Identifier	desc		747496	1					
ANR	747615	PrimaryExpression	"""(no description)"""		747496	2					
ANR	747616	Argument	me [ i ] . mp -> flag & BINTEST ? binary : text		747496	5					
ANR	747617	ConditionalExpression	me [ i ] . mp -> flag & BINTEST ? binary : text		747496	0					
ANR	747618	Condition	me [ i ] . mp -> flag & BINTEST		747496	0					
ANR	747619	BitAndExpression	me [ i ] . mp -> flag & BINTEST		747496	0		&			
ANR	747620	PtrMemberAccess	me [ i ] . mp -> flag		747496	0					
ANR	747621	MemberAccess	me [ i ] . mp		747496	0					
ANR	747622	ArrayIndexing	me [ i ]		747496	0					
ANR	747623	Identifier	me		747496	0					
ANR	747624	Identifier	i		747496	1					
ANR	747625	Identifier	mp		747496	1					
ANR	747626	Identifier	flag		747496	1					
ANR	747627	Identifier	BINTEST		747496	1					
ANR	747628	Identifier	binary		747496	1					
ANR	747629	Identifier	text		747496	2					
ANR	747630	IfStatement	if ( me [ i ] . mp -> flag & BINTEST )		747496	3					
ANR	747631	Condition	me [ i ] . mp -> flag & BINTEST	1138:6:26795:26818	747496	0	True				
ANR	747632	BitAndExpression	me [ i ] . mp -> flag & BINTEST		747496	0		&			
ANR	747633	PtrMemberAccess	me [ i ] . mp -> flag		747496	0					
ANR	747634	MemberAccess	me [ i ] . mp		747496	0					
ANR	747635	ArrayIndexing	me [ i ]		747496	0					
ANR	747636	Identifier	me		747496	0					
ANR	747637	Identifier	i		747496	1					
ANR	747638	Identifier	mp		747496	1					
ANR	747639	Identifier	flag		747496	1					
ANR	747640	Identifier	BINTEST		747496	1					
ANR	747641	CompoundStatement		18:3:511:549	747496	1					
ANR	747642	IdentifierDeclStatement	"char * p = strstr ( me [ i ] . mp -> desc , text ) ;"	1139:3:26826:26864	747496	0	True				
ANR	747643	IdentifierDecl	"* p = strstr ( me [ i ] . mp -> desc , text )"		747496	0					
ANR	747644	IdentifierDeclType	char *		747496	0					
ANR	747645	Identifier	p		747496	1					
ANR	747646	AssignmentExpression	"* p = strstr ( me [ i ] . mp -> desc , text )"		747496	2		=			
ANR	747647	Identifier	p		747496	0					
ANR	747648	CallExpression	"strstr ( me [ i ] . mp -> desc , text )"		747496	1					
ANR	747649	Callee	strstr		747496	0					
ANR	747650	Identifier	strstr		747496	0					
ANR	747651	ArgumentList	me [ i ] . mp -> desc		747496	1					
ANR	747652	Argument	me [ i ] . mp -> desc		747496	0					
ANR	747653	PtrMemberAccess	me [ i ] . mp -> desc		747496	0					
ANR	747654	MemberAccess	me [ i ] . mp		747496	0					
ANR	747655	ArrayIndexing	me [ i ]		747496	0					
ANR	747656	Identifier	me		747496	0					
ANR	747657	Identifier	i		747496	1					
ANR	747658	Identifier	mp		747496	1					
ANR	747659	Identifier	desc		747496	1					
ANR	747660	Argument	text		747496	1					
ANR	747661	Identifier	text		747496	0					
ANR	747662	IfStatement	if ( p && ( p == me [ i ] . mp -> desc || isspace ( ( unsigned char ) p [ - 1 ] ) ) && ( p + len - me [ i ] . mp -> desc == MAXstring || ( p [ len ] == '\\0' || isspace ( ( unsigned char ) p [ len ] ) ) ) )		747496	1					
ANR	747663	Condition	p && ( p == me [ i ] . mp -> desc || isspace ( ( unsigned char ) p [ - 1 ] ) ) && ( p + len - me [ i ] . mp -> desc == MAXstring || ( p [ len ] == '\\0' || isspace ( ( unsigned char ) p [ len ] ) ) )	1140:7:26873:27056	747496	0	True				
ANR	747664	AndExpression	p && ( p == me [ i ] . mp -> desc || isspace ( ( unsigned char ) p [ - 1 ] ) ) && ( p + len - me [ i ] . mp -> desc == MAXstring || ( p [ len ] == '\\0' || isspace ( ( unsigned char ) p [ len ] ) ) )		747496	0		&&			
ANR	747665	Identifier	p		747496	0					
ANR	747666	AndExpression	( p == me [ i ] . mp -> desc || isspace ( ( unsigned char ) p [ - 1 ] ) ) && ( p + len - me [ i ] . mp -> desc == MAXstring || ( p [ len ] == '\\0' || isspace ( ( unsigned char ) p [ len ] ) ) )		747496	1		&&			
ANR	747667	OrExpression	p == me [ i ] . mp -> desc || isspace ( ( unsigned char ) p [ - 1 ] )		747496	0		||			
ANR	747668	EqualityExpression	p == me [ i ] . mp -> desc		747496	0		==			
ANR	747669	Identifier	p		747496	0					
ANR	747670	PtrMemberAccess	me [ i ] . mp -> desc		747496	1					
ANR	747671	MemberAccess	me [ i ] . mp		747496	0					
ANR	747672	ArrayIndexing	me [ i ]		747496	0					
ANR	747673	Identifier	me		747496	0					
ANR	747674	Identifier	i		747496	1					
ANR	747675	Identifier	mp		747496	1					
ANR	747676	Identifier	desc		747496	1					
ANR	747677	CallExpression	isspace ( ( unsigned char ) p [ - 1 ] )		747496	1					
ANR	747678	Callee	isspace		747496	0					
ANR	747679	Identifier	isspace		747496	0					
ANR	747680	ArgumentList	( unsigned char ) p [ - 1 ]		747496	1					
ANR	747681	Argument	( unsigned char ) p [ - 1 ]		747496	0					
ANR	747682	CastExpression	( unsigned char ) p [ - 1 ]		747496	0					
ANR	747683	CastTarget	unsigned char		747496	0					
ANR	747684	ArrayIndexing	p [ - 1 ]		747496	1					
ANR	747685	Identifier	p		747496	0					
ANR	747686	UnaryOperationExpression	- 1		747496	1					
ANR	747687	UnaryOperator	-		747496	0					
ANR	747688	PrimaryExpression	1		747496	1					
ANR	747689	OrExpression	p + len - me [ i ] . mp -> desc == MAXstring || ( p [ len ] == '\\0' || isspace ( ( unsigned char ) p [ len ] ) )		747496	1		||			
ANR	747690	EqualityExpression	p + len - me [ i ] . mp -> desc == MAXstring		747496	0		==			
ANR	747691	AdditiveExpression	p + len - me [ i ] . mp -> desc		747496	0		+			
ANR	747692	Identifier	p		747496	0					
ANR	747693	AdditiveExpression	len - me [ i ] . mp -> desc		747496	1		-			
ANR	747694	Identifier	len		747496	0					
ANR	747695	PtrMemberAccess	me [ i ] . mp -> desc		747496	1					
ANR	747696	MemberAccess	me [ i ] . mp		747496	0					
ANR	747697	ArrayIndexing	me [ i ]		747496	0					
ANR	747698	Identifier	me		747496	0					
ANR	747699	Identifier	i		747496	1					
ANR	747700	Identifier	mp		747496	1					
ANR	747701	Identifier	desc		747496	1					
ANR	747702	Identifier	MAXstring		747496	1					
ANR	747703	OrExpression	p [ len ] == '\\0' || isspace ( ( unsigned char ) p [ len ] )		747496	1		||			
ANR	747704	EqualityExpression	p [ len ] == '\\0'		747496	0		==			
ANR	747705	ArrayIndexing	p [ len ]		747496	0					
ANR	747706	Identifier	p		747496	0					
ANR	747707	Identifier	len		747496	1					
ANR	747708	PrimaryExpression	'\\0'		747496	1					
ANR	747709	CallExpression	isspace ( ( unsigned char ) p [ len ] )		747496	1					
ANR	747710	Callee	isspace		747496	0					
ANR	747711	Identifier	isspace		747496	0					
ANR	747712	ArgumentList	( unsigned char ) p [ len ]		747496	1					
ANR	747713	Argument	( unsigned char ) p [ len ]		747496	0					
ANR	747714	CastExpression	( unsigned char ) p [ len ]		747496	0					
ANR	747715	CastTarget	unsigned char		747496	0					
ANR	747716	ArrayIndexing	p [ len ]		747496	1					
ANR	747717	Identifier	p		747496	0					
ANR	747718	Identifier	len		747496	1					
ANR	747719	Statement	(	1145:4:27063:27063	747496	1	True				
ANR	747720	Statement	void	1145:5:27064:27067	747496	2	True				
ANR	747721	Statement	)	1145:9:27068:27068	747496	3	True				
ANR	747722	Statement	fprintf	1145:10:27069:27075	747496	4	True				
ANR	747723	Statement	(	1145:17:27076:27076	747496	5	True				
ANR	747724	Statement	stderr	1145:18:27077:27082	747496	6	True				
ANR	747725	Statement	","	1145:24:27083:27083	747496	7	True				
ANR	747726	Statement	"""*** Possible """	1145:26:27085:27099	747496	8	True				
ANR	747727	Statement	"""binary test for text type\\n"""	1146:8:27109:27137	747496	9	True				
ANR	747728	Statement	)	1146:37:27138:27138	747496	10	True				
ANR	747729	ExpressionStatement		1146:38:27139:27139	747496	11	True				
ANR	747730	Condition	++ i < nme && me [ i ] . mp -> cont_level != 0	1148:10:27155:27192	747496	1	True				
ANR	747731	AndExpression	++ i < nme && me [ i ] . mp -> cont_level != 0		747496	0		&&			
ANR	747732	RelationalExpression	++ i < nme		747496	0		<			
ANR	747733	UnaryExpression	++ i		747496	0					
ANR	747734	IncDec	++		747496	0					
ANR	747735	Identifier	i		747496	1					
ANR	747736	Identifier	nme		747496	1					
ANR	747737	EqualityExpression	me [ i ] . mp -> cont_level != 0		747496	1		!=			
ANR	747738	PtrMemberAccess	me [ i ] . mp -> cont_level		747496	0					
ANR	747739	MemberAccess	me [ i ] . mp		747496	0					
ANR	747740	ArrayIndexing	me [ i ]		747496	0					
ANR	747741	Identifier	me		747496	0					
ANR	747742	Identifier	i		747496	1					
ANR	747743	Identifier	mp		747496	1					
ANR	747744	Identifier	cont_level		747496	1					
ANR	747745	PrimaryExpression	0		747496	1					
ANR	747746	ReturnStatement	return i ;	1149:1:27197:27205	747496	8	True				
ANR	747747	Identifier	i		747496	0					
ANR	747748	ReturnType	uint32_t		747496	1					
ANR	747749	Identifier	set_text_binary		747496	2					
ANR	747750	ParameterList	"struct magic_set * ms , struct magic_entry * me , uint32_t nme , uint32_t starttest"		747496	3					
ANR	747751	Parameter	struct magic_set * ms	1120:16:26230:26249	747496	0	True				
ANR	747752	ParameterType	struct magic_set *		747496	0					
ANR	747753	Identifier	ms		747496	1					
ANR	747754	Parameter	struct magic_entry * me	1120:38:26252:26273	747496	1	True				
ANR	747755	ParameterType	struct magic_entry *		747496	0					
ANR	747756	Identifier	me		747496	1					
ANR	747757	Parameter	uint32_t nme	1120:62:26276:26287	747496	2	True				
ANR	747758	ParameterType	uint32_t		747496	0					
ANR	747759	Identifier	nme		747496	1					
ANR	747760	Parameter	uint32_t starttest	1121:4:26294:26311	747496	3	True				
ANR	747761	ParameterType	uint32_t		747496	0					
ANR	747762	Identifier	starttest		747496	1					
ANR	747763	CFGEntryNode	ENTRY		747496		True				
ANR	747764	CFGExitNode	EXIT		747496		True				
ANR	747765	Symbol	* * * me		747496						
ANR	747766	Symbol	* me [ i ] . mp -> mimetype		747496						
ANR	747767	Symbol	* me [ i ] . mp		747496						
ANR	747768	Symbol	* * me		747496						
ANR	747769	Symbol	* me [ i ] . mp -> desc		747496						
ANR	747770	Symbol	nme		747496						
ANR	747771	Symbol	me [ i ] . mp -> cont_level		747496						
ANR	747772	Symbol	* ms		747496						
ANR	747773	Symbol	starttest		747496						
ANR	747774	Symbol	len		747496						
ANR	747775	Symbol	me		747496						
ANR	747776	Symbol	me [ i ] . mp -> desc		747496						
ANR	747777	Symbol	text		747496						
ANR	747778	Symbol	* me		747496						
ANR	747779	Symbol	MAGIC_DEBUG		747496						
ANR	747780	Symbol	* * i		747496						
ANR	747781	Symbol	ms		747496						
ANR	747782	Symbol	BINTEST		747496						
ANR	747783	Symbol	isspace		747496						
ANR	747784	Symbol	i		747496						
ANR	747785	Symbol	* starttest		747496						
ANR	747786	Symbol	stderr		747496						
ANR	747787	Symbol	MAXstring		747496						
ANR	747788	Symbol	* * me [ i ] . mp		747496						
ANR	747789	Symbol	me [ i ] . mp -> flag		747496						
ANR	747790	Symbol	p		747496						
ANR	747791	Symbol	me [ i ] . mp		747496						
ANR	747792	Symbol	* i		747496						
ANR	747793	Symbol	me [ i ] . mp -> mimetype		747496						
ANR	747794	Symbol	me [ starttest ] . mp		747496						
ANR	747795	Symbol	strstr		747496						
ANR	747796	Symbol	binary		747496						
ANR	747797	Symbol	* * * i		747496						
ANR	747798	Symbol	* p		747496						
ANR	747799	Symbol	ms -> flags		747496						
ANR	747800	Symbol	* len		747496						
ANR	747801	Function	set_last_default	1152:8:27218:27663							
ANR	747802	FunctionDef	"set_last_default (struct magic_set * ms , struct magic_entry * me , uint32_t nme)"		747801	0					
ANR	747803	CompoundStatement		1154:0:27300:27663	747801	0					
ANR	747804	IdentifierDeclStatement	uint32_t i ;	1155:1:27303:27313	747801	0	True				
ANR	747805	IdentifierDecl	i		747801	0					
ANR	747806	IdentifierDeclType	uint32_t		747801	0					
ANR	747807	Identifier	i		747801	1					
ANR	747808	ForStatement	for ( i = 0 ; i < nme ; i ++ )		747801	1					
ANR	747809	ForInit	i = 0 ;	1156:6:27321:27326	747801	0	True				
ANR	747810	AssignmentExpression	i = 0		747801	0		=			
ANR	747811	Identifier	i		747801	0					
ANR	747812	PrimaryExpression	0		747801	1					
ANR	747813	Condition	i < nme	1156:13:27328:27334	747801	1	True				
ANR	747814	RelationalExpression	i < nme		747801	0		<			
ANR	747815	Identifier	i		747801	0					
ANR	747816	Identifier	nme		747801	1					
ANR	747817	PostIncDecOperationExpression	i ++	1156:22:27337:27339	747801	2	True				
ANR	747818	Identifier	i		747801	0					
ANR	747819	IncDec	++		747801	1					
ANR	747820	CompoundStatement		3:27:41:41	747801	3					
ANR	747821	IfStatement	if ( me [ i ] . mp -> cont_level == 0 && me [ i ] . mp -> type == FILE_DEFAULT )		747801	0					
ANR	747822	Condition	me [ i ] . mp -> cont_level == 0 && me [ i ] . mp -> type == FILE_DEFAULT	1157:6:27350:27414	747801	0	True				
ANR	747823	AndExpression	me [ i ] . mp -> cont_level == 0 && me [ i ] . mp -> type == FILE_DEFAULT		747801	0		&&			
ANR	747824	EqualityExpression	me [ i ] . mp -> cont_level == 0		747801	0		==			
ANR	747825	PtrMemberAccess	me [ i ] . mp -> cont_level		747801	0					
ANR	747826	MemberAccess	me [ i ] . mp		747801	0					
ANR	747827	ArrayIndexing	me [ i ]		747801	0					
ANR	747828	Identifier	me		747801	0					
ANR	747829	Identifier	i		747801	1					
ANR	747830	Identifier	mp		747801	1					
ANR	747831	Identifier	cont_level		747801	1					
ANR	747832	PrimaryExpression	0		747801	1					
ANR	747833	EqualityExpression	me [ i ] . mp -> type == FILE_DEFAULT		747801	1		==			
ANR	747834	PtrMemberAccess	me [ i ] . mp -> type		747801	0					
ANR	747835	MemberAccess	me [ i ] . mp		747801	0					
ANR	747836	ArrayIndexing	me [ i ]		747801	0					
ANR	747837	Identifier	me		747801	0					
ANR	747838	Identifier	i		747801	1					
ANR	747839	Identifier	mp		747801	1					
ANR	747840	Identifier	type		747801	1					
ANR	747841	Identifier	FILE_DEFAULT		747801	1					
ANR	747842	CompoundStatement		5:38:116:116	747801	1					
ANR	747843	WhileStatement	while ( ++ i < nme )		747801	0					
ANR	747844	Condition	++ i < nme	1159:10:27429:27437	747801	0	True				
ANR	747845	RelationalExpression	++ i < nme		747801	0		<			
ANR	747846	UnaryExpression	++ i		747801	0					
ANR	747847	IncDec	++		747801	0					
ANR	747848	Identifier	i		747801	1					
ANR	747849	Identifier	nme		747801	1					
ANR	747850	IfStatement	if ( me [ i ] . mp -> cont_level == 0 )		747801	1					
ANR	747851	Condition	me [ i ] . mp -> cont_level == 0	1160:8:27448:27472	747801	0	True				
ANR	747852	EqualityExpression	me [ i ] . mp -> cont_level == 0		747801	0		==			
ANR	747853	PtrMemberAccess	me [ i ] . mp -> cont_level		747801	0					
ANR	747854	MemberAccess	me [ i ] . mp		747801	0					
ANR	747855	ArrayIndexing	me [ i ]		747801	0					
ANR	747856	Identifier	me		747801	0					
ANR	747857	Identifier	i		747801	1					
ANR	747858	Identifier	mp		747801	1					
ANR	747859	Identifier	cont_level		747801	1					
ANR	747860	PrimaryExpression	0		747801	1					
ANR	747861	BreakStatement	break ;	1161:5:27480:27485	747801	1	True				
ANR	747862	IfStatement	if ( i != nme )		747801	1					
ANR	747863	Condition	i != nme	1162:7:27494:27501	747801	0	True				
ANR	747864	EqualityExpression	i != nme		747801	0		!=			
ANR	747865	Identifier	i		747801	0					
ANR	747866	Identifier	nme		747801	1					
ANR	747867	CompoundStatement		9:17:203:203	747801	1					
ANR	747868	ExpressionStatement	ms -> line = me [ i ] . mp -> lineno	1164:4:27531:27558	747801	0	True				
ANR	747869	AssignmentExpression	ms -> line = me [ i ] . mp -> lineno		747801	0		=			
ANR	747870	PtrMemberAccess	ms -> line		747801	0					
ANR	747871	Identifier	ms		747801	0					
ANR	747872	Identifier	line		747801	1					
ANR	747873	PtrMemberAccess	me [ i ] . mp -> lineno		747801	1					
ANR	747874	MemberAccess	me [ i ] . mp		747801	0					
ANR	747875	ArrayIndexing	me [ i ]		747801	0					
ANR	747876	Identifier	me		747801	0					
ANR	747877	Identifier	i		747801	1					
ANR	747878	Identifier	mp		747801	1					
ANR	747879	Identifier	lineno		747801	1					
ANR	747880	ExpressionStatement	"file_magwarn ( ms , ""level 0 \\""default\\"" did not sort last"" )"	1165:4:27564:27629	747801	1	True				
ANR	747881	CallExpression	"file_magwarn ( ms , ""level 0 \\""default\\"" did not sort last"" )"		747801	0					
ANR	747882	Callee	file_magwarn		747801	0					
ANR	747883	Identifier	file_magwarn		747801	0					
ANR	747884	ArgumentList	ms		747801	1					
ANR	747885	Argument	ms		747801	0					
ANR	747886	Identifier	ms		747801	0					
ANR	747887	Argument	"""level 0 \\""default\\"" did not sort last"""		747801	1					
ANR	747888	PrimaryExpression	"""level 0 \\""default\\"" did not sort last"""		747801	0					
ANR	747889	ReturnStatement	return ;	1168:3:27639:27645	747801	2	True				
ANR	747890	ReturnType	void		747801	1					
ANR	747891	Identifier	set_last_default		747801	2					
ANR	747892	ParameterList	"struct magic_set * ms , struct magic_entry * me , uint32_t nme"		747801	3					
ANR	747893	Parameter	struct magic_set * ms	1153:17:27240:27259	747801	0	True				
ANR	747894	ParameterType	struct magic_set *		747801	0					
ANR	747895	Identifier	ms		747801	1					
ANR	747896	Parameter	struct magic_entry * me	1153:39:27262:27283	747801	1	True				
ANR	747897	ParameterType	struct magic_entry *		747801	0					
ANR	747898	Identifier	me		747801	1					
ANR	747899	Parameter	uint32_t nme	1153:63:27286:27297	747801	2	True				
ANR	747900	ParameterType	uint32_t		747801	0					
ANR	747901	Identifier	nme		747801	1					
ANR	747902	CFGEntryNode	ENTRY		747801		True				
ANR	747903	CFGExitNode	EXIT		747801		True				
ANR	747904	Symbol	* * i		747801						
ANR	747905	Symbol	* me [ i ] . mp		747801						
ANR	747906	Symbol	ms		747801						
ANR	747907	Symbol	FILE_DEFAULT		747801						
ANR	747908	Symbol	* * me		747801						
ANR	747909	Symbol	nme		747801						
ANR	747910	Symbol	me [ i ] . mp -> cont_level		747801						
ANR	747911	Symbol	me [ i ] . mp -> type		747801						
ANR	747912	Symbol	me [ i ] . mp -> lineno		747801						
ANR	747913	Symbol	i		747801						
ANR	747914	Symbol	ms -> line		747801						
ANR	747915	Symbol	* ms		747801						
ANR	747916	Symbol	me [ i ] . mp		747801						
ANR	747917	Symbol	* i		747801						
ANR	747918	Symbol	me		747801						
ANR	747919	Symbol	* me		747801						
ANR	747920	Function	coalesce_entries	1173:8:27674:28241							
ANR	747921	FunctionDef	"coalesce_entries (struct magic_set * ms , struct magic_entry * me , uint32_t nme , struct magic * * ma , uint32_t * nma)"		747920	0					
ANR	747922	CompoundStatement		1176:0:27793:28241	747920	0					
ANR	747923	IdentifierDeclStatement	"uint32_t i , mentrycount = 0 ;"	1177:1:27796:27823	747920	0	True				
ANR	747924	IdentifierDecl	i		747920	0					
ANR	747925	IdentifierDeclType	uint32_t		747920	0					
ANR	747926	Identifier	i		747920	1					
ANR	747927	IdentifierDecl	mentrycount = 0		747920	1					
ANR	747928	IdentifierDeclType	uint32_t		747920	0					
ANR	747929	Identifier	mentrycount		747920	1					
ANR	747930	AssignmentExpression	mentrycount = 0		747920	2		=			
ANR	747931	Identifier	mentrycount		747920	0					
ANR	747932	PrimaryExpression	0		747920	1					
ANR	747933	IdentifierDeclStatement	size_t slen ;	1178:1:27826:27837	747920	1	True				
ANR	747934	IdentifierDecl	slen		747920	0					
ANR	747935	IdentifierDeclType	size_t		747920	0					
ANR	747936	Identifier	slen		747920	1					
ANR	747937	ForStatement	for ( i = 0 ; i < nme ; i ++ )		747920	2					
ANR	747938	ForInit	i = 0 ;	1180:6:27846:27851	747920	0	True				
ANR	747939	AssignmentExpression	i = 0		747920	0		=			
ANR	747940	Identifier	i		747920	0					
ANR	747941	PrimaryExpression	0		747920	1					
ANR	747942	Condition	i < nme	1180:13:27853:27859	747920	1	True				
ANR	747943	RelationalExpression	i < nme		747920	0		<			
ANR	747944	Identifier	i		747920	0					
ANR	747945	Identifier	nme		747920	1					
ANR	747946	PostIncDecOperationExpression	i ++	1180:22:27862:27864	747920	2	True				
ANR	747947	Identifier	i		747920	0					
ANR	747948	IncDec	++		747920	1					
ANR	747949	ExpressionStatement	mentrycount += me [ i ] . cont_count	1181:2:27869:27900	747920	3	True				
ANR	747950	AssignmentExpression	mentrycount += me [ i ] . cont_count		747920	0		+=			
ANR	747951	Identifier	mentrycount		747920	0					
ANR	747952	MemberAccess	me [ i ] . cont_count		747920	1					
ANR	747953	ArrayIndexing	me [ i ]		747920	0					
ANR	747954	Identifier	me		747920	0					
ANR	747955	Identifier	i		747920	1					
ANR	747956	Identifier	cont_count		747920	1					
ANR	747957	ExpressionStatement	slen = sizeof ( * * ma ) * mentrycount	1183:1:27904:27937	747920	3	True				
ANR	747958	AssignmentExpression	slen = sizeof ( * * ma ) * mentrycount		747920	0		=			
ANR	747959	Identifier	slen		747920	0					
ANR	747960	MultiplicativeExpression	sizeof ( * * ma ) * mentrycount		747920	1		*			
ANR	747961	SizeofExpression	sizeof ( * * ma )		747920	0					
ANR	747962	Sizeof	sizeof		747920	0					
ANR	747963	UnaryOperationExpression	* * ma		747920	1					
ANR	747964	UnaryOperator	*		747920	0					
ANR	747965	UnaryOperationExpression	* ma		747920	1					
ANR	747966	UnaryOperator	*		747920	0					
ANR	747967	Identifier	ma		747920	1					
ANR	747968	Identifier	mentrycount		747920	1					
ANR	747969	Statement	if	1184:1:27940:27941	747920	4	True				
ANR	747970	Statement	(	1184:4:27943:27943	747920	5	True				
ANR	747971	Statement	(	1184:5:27944:27944	747920	6	True				
ANR	747972	Statement	*	1184:6:27945:27945	747920	7	True				
ANR	747973	Statement	ma	1184:7:27946:27947	747920	8	True				
ANR	747974	Statement	=	1184:10:27949:27949	747920	9	True				
ANR	747975	Statement	CAST	1184:12:27951:27954	747920	10	True				
ANR	747976	Statement	(	1184:16:27955:27955	747920	11	True				
ANR	747977	Statement	struct	1184:17:27956:27961	747920	12	True				
ANR	747978	Statement	magic	1184:24:27963:27967	747920	13	True				
ANR	747979	Statement	*	1184:30:27969:27969	747920	14	True				
ANR	747980	Statement	","	1184:31:27970:27970	747920	15	True				
ANR	747981	Statement	emalloc	1184:33:27972:27978	747920	16	True				
ANR	747982	Statement	(	1184:40:27979:27979	747920	17	True				
ANR	747983	Statement	slen	1184:41:27980:27983	747920	18	True				
ANR	747984	Statement	)	1184:45:27984:27984	747920	19	True				
ANR	747985	Statement	)	1184:46:27985:27985	747920	20	True				
ANR	747986	Statement	)	1184:47:27986:27986	747920	21	True				
ANR	747987	Statement	==	1184:49:27988:27989	747920	22	True				
ANR	747988	Statement	NULL	1184:52:27991:27994	747920	23	True				
ANR	747989	Statement	)	1184:56:27995:27995	747920	24	True				
ANR	747990	CompoundStatement		9:58:203:203	747920	25					
ANR	747991	ExpressionStatement	"file_oomem ( ms , slen )"	1185:2:28001:28021	747920	0	True				
ANR	747992	CallExpression	"file_oomem ( ms , slen )"		747920	0					
ANR	747993	Callee	file_oomem		747920	0					
ANR	747994	Identifier	file_oomem		747920	0					
ANR	747995	ArgumentList	ms		747920	1					
ANR	747996	Argument	ms		747920	0					
ANR	747997	Identifier	ms		747920	0					
ANR	747998	Argument	slen		747920	1					
ANR	747999	Identifier	slen		747920	0					
ANR	748000	ReturnStatement	return - 1 ;	1186:2:28025:28034	747920	1	True				
ANR	748001	UnaryOperationExpression	- 1		747920	0					
ANR	748002	UnaryOperator	-		747920	0					
ANR	748003	PrimaryExpression	1		747920	1					
ANR	748004	ExpressionStatement	mentrycount = 0	1189:1:28041:28056	747920	26	True				
ANR	748005	AssignmentExpression	mentrycount = 0		747920	0		=			
ANR	748006	Identifier	mentrycount		747920	0					
ANR	748007	PrimaryExpression	0		747920	1					
ANR	748008	ForStatement	for ( i = 0 ; i < nme ; i ++ )		747920	27					
ANR	748009	ForInit	i = 0 ;	1190:6:28064:28069	747920	0	True				
ANR	748010	AssignmentExpression	i = 0		747920	0		=			
ANR	748011	Identifier	i		747920	0					
ANR	748012	PrimaryExpression	0		747920	1					
ANR	748013	Condition	i < nme	1190:13:28071:28077	747920	1	True				
ANR	748014	RelationalExpression	i < nme		747920	0		<			
ANR	748015	Identifier	i		747920	0					
ANR	748016	Identifier	nme		747920	1					
ANR	748017	PostIncDecOperationExpression	i ++	1190:22:28080:28082	747920	2	True				
ANR	748018	Identifier	i		747920	0					
ANR	748019	IncDec	++		747920	1					
ANR	748020	CompoundStatement		15:27:291:291	747920	3					
ANR	748021	ExpressionStatement	"( void ) memcpy ( * ma + mentrycount , me [ i ] . mp , me [ i ] . cont_count * sizeof ( * * ma ) )"	1191:2:28089:28169	747920	0	True				
ANR	748022	CastExpression	"( void ) memcpy ( * ma + mentrycount , me [ i ] . mp , me [ i ] . cont_count * sizeof ( * * ma ) )"		747920	0					
ANR	748023	CastTarget	void		747920	0					
ANR	748024	CallExpression	"memcpy ( * ma + mentrycount , me [ i ] . mp , me [ i ] . cont_count * sizeof ( * * ma ) )"		747920	1					
ANR	748025	Callee	memcpy		747920	0					
ANR	748026	Identifier	memcpy		747920	0					
ANR	748027	ArgumentList	* ma + mentrycount		747920	1					
ANR	748028	Argument	* ma + mentrycount		747920	0					
ANR	748029	AdditiveExpression	* ma + mentrycount		747920	0		+			
ANR	748030	UnaryOperationExpression	* ma		747920	0					
ANR	748031	UnaryOperator	*		747920	0					
ANR	748032	Identifier	ma		747920	1					
ANR	748033	Identifier	mentrycount		747920	1					
ANR	748034	Argument	me [ i ] . mp		747920	1					
ANR	748035	MemberAccess	me [ i ] . mp		747920	0					
ANR	748036	ArrayIndexing	me [ i ]		747920	0					
ANR	748037	Identifier	me		747920	0					
ANR	748038	Identifier	i		747920	1					
ANR	748039	Identifier	mp		747920	1					
ANR	748040	Argument	me [ i ] . cont_count * sizeof ( * * ma )		747920	2					
ANR	748041	MultiplicativeExpression	me [ i ] . cont_count * sizeof ( * * ma )		747920	0		*			
ANR	748042	MemberAccess	me [ i ] . cont_count		747920	0					
ANR	748043	ArrayIndexing	me [ i ]		747920	0					
ANR	748044	Identifier	me		747920	0					
ANR	748045	Identifier	i		747920	1					
ANR	748046	Identifier	cont_count		747920	1					
ANR	748047	SizeofExpression	sizeof ( * * ma )		747920	1					
ANR	748048	Sizeof	sizeof		747920	0					
ANR	748049	UnaryOperationExpression	* * ma		747920	1					
ANR	748050	UnaryOperator	*		747920	0					
ANR	748051	UnaryOperationExpression	* ma		747920	1					
ANR	748052	UnaryOperator	*		747920	0					
ANR	748053	Identifier	ma		747920	1					
ANR	748054	ExpressionStatement	mentrycount += me [ i ] . cont_count	1193:2:28173:28204	747920	1	True				
ANR	748055	AssignmentExpression	mentrycount += me [ i ] . cont_count		747920	0		+=			
ANR	748056	Identifier	mentrycount		747920	0					
ANR	748057	MemberAccess	me [ i ] . cont_count		747920	1					
ANR	748058	ArrayIndexing	me [ i ]		747920	0					
ANR	748059	Identifier	me		747920	0					
ANR	748060	Identifier	i		747920	1					
ANR	748061	Identifier	cont_count		747920	1					
ANR	748062	ExpressionStatement	* nma = mentrycount	1195:1:28210:28228	747920	28	True				
ANR	748063	AssignmentExpression	* nma = mentrycount		747920	0		=			
ANR	748064	UnaryOperationExpression	* nma		747920	0					
ANR	748065	UnaryOperator	*		747920	0					
ANR	748066	Identifier	nma		747920	1					
ANR	748067	Identifier	mentrycount		747920	1					
ANR	748068	ReturnStatement	return 0 ;	1196:1:28231:28239	747920	29	True				
ANR	748069	PrimaryExpression	0		747920	0					
ANR	748070	ReturnType	int		747920	1					
ANR	748071	Identifier	coalesce_entries		747920	2					
ANR	748072	ParameterList	"struct magic_set * ms , struct magic_entry * me , uint32_t nme , struct magic * * ma , uint32_t * nma"		747920	3					
ANR	748073	Parameter	struct magic_set * ms	1174:17:27695:27714	747920	0	True				
ANR	748074	ParameterType	struct magic_set *		747920	0					
ANR	748075	Identifier	ms		747920	1					
ANR	748076	Parameter	struct magic_entry * me	1174:39:27717:27738	747920	1	True				
ANR	748077	ParameterType	struct magic_entry *		747920	0					
ANR	748078	Identifier	me		747920	1					
ANR	748079	Parameter	uint32_t nme	1174:63:27741:27752	747920	2	True				
ANR	748080	ParameterType	uint32_t		747920	0					
ANR	748081	Identifier	nme		747920	1					
ANR	748082	Parameter	struct magic * * ma	1175:4:27759:27775	747920	3	True				
ANR	748083	ParameterType	struct magic * *		747920	0					
ANR	748084	Identifier	ma		747920	1					
ANR	748085	Parameter	uint32_t * nma	1175:23:27778:27790	747920	4	True				
ANR	748086	ParameterType	uint32_t *		747920	0					
ANR	748087	Identifier	nma		747920	1					
ANR	748088	CFGEntryNode	ENTRY		747920		True				
ANR	748089	CFGExitNode	EXIT		747920		True				
ANR	748090	Symbol	* * ma		747920						
ANR	748091	Symbol	nma		747920						
ANR	748092	Symbol	me [ i ] . cont_count		747920						
ANR	748093	Symbol	ms		747920						
ANR	748094	Symbol	nme		747920						
ANR	748095	Symbol	i		747920						
ANR	748096	Symbol	* nma		747920						
ANR	748097	Symbol	me [ i ] . mp		747920						
ANR	748098	Symbol	* i		747920						
ANR	748099	Symbol	ma		747920						
ANR	748100	Symbol	slen		747920						
ANR	748101	Symbol	me		747920						
ANR	748102	Symbol	* ma		747920						
ANR	748103	Symbol	mentrycount		747920						
ANR	748104	Symbol	* me		747920						
ANR	748105	Function	magic_entry_free	1199:8:28252:28412							
ANR	748106	FunctionDef	"magic_entry_free (struct magic_entry * me , uint32_t nme)"		748105	0					
ANR	748107	CompoundStatement		1201:0:28312:28412	748105	0					
ANR	748108	IdentifierDeclStatement	uint32_t i ;	1202:1:28315:28325	748105	0	True				
ANR	748109	IdentifierDecl	i		748105	0					
ANR	748110	IdentifierDeclType	uint32_t		748105	0					
ANR	748111	Identifier	i		748105	1					
ANR	748112	IfStatement	if ( me == NULL )		748105	1					
ANR	748113	Condition	me == NULL	1203:5:28332:28341	748105	0	True				
ANR	748114	EqualityExpression	me == NULL		748105	0		==			
ANR	748115	Identifier	me		748105	0					
ANR	748116	Identifier	NULL		748105	1					
ANR	748117	ReturnStatement	return ;	1204:2:28346:28352	748105	1	True				
ANR	748118	ForStatement	for ( i = 0 ; i < nme ; i ++ )		748105	2					
ANR	748119	ForInit	i = 0 ;	1205:6:28360:28365	748105	0	True				
ANR	748120	AssignmentExpression	i = 0		748105	0		=			
ANR	748121	Identifier	i		748105	0					
ANR	748122	PrimaryExpression	0		748105	1					
ANR	748123	Condition	i < nme	1205:13:28367:28373	748105	1	True				
ANR	748124	RelationalExpression	i < nme		748105	0		<			
ANR	748125	Identifier	i		748105	0					
ANR	748126	Identifier	nme		748105	1					
ANR	748127	PostIncDecOperationExpression	i ++	1205:22:28376:28378	748105	2	True				
ANR	748128	Identifier	i		748105	0					
ANR	748129	IncDec	++		748105	1					
ANR	748130	ExpressionStatement	efree ( me [ i ] . mp )	1206:2:28383:28398	748105	3	True				
ANR	748131	CallExpression	efree ( me [ i ] . mp )		748105	0					
ANR	748132	Callee	efree		748105	0					
ANR	748133	Identifier	efree		748105	0					
ANR	748134	ArgumentList	me [ i ] . mp		748105	1					
ANR	748135	Argument	me [ i ] . mp		748105	0					
ANR	748136	MemberAccess	me [ i ] . mp		748105	0					
ANR	748137	ArrayIndexing	me [ i ]		748105	0					
ANR	748138	Identifier	me		748105	0					
ANR	748139	Identifier	i		748105	1					
ANR	748140	Identifier	mp		748105	1					
ANR	748141	ExpressionStatement	efree ( me )	1207:1:28401:28410	748105	3	True				
ANR	748142	CallExpression	efree ( me )		748105	0					
ANR	748143	Callee	efree		748105	0					
ANR	748144	Identifier	efree		748105	0					
ANR	748145	ArgumentList	me		748105	1					
ANR	748146	Argument	me		748105	0					
ANR	748147	Identifier	me		748105	0					
ANR	748148	ReturnType	void		748105	1					
ANR	748149	Identifier	magic_entry_free		748105	2					
ANR	748150	ParameterList	"struct magic_entry * me , uint32_t nme"		748105	3					
ANR	748151	Parameter	struct magic_entry * me	1200:17:28274:28295	748105	0	True				
ANR	748152	ParameterType	struct magic_entry *		748105	0					
ANR	748153	Identifier	me		748105	1					
ANR	748154	Parameter	uint32_t nme	1200:41:28298:28309	748105	1	True				
ANR	748155	ParameterType	uint32_t		748105	0					
ANR	748156	Identifier	nme		748105	1					
ANR	748157	CFGEntryNode	ENTRY		748105		True				
ANR	748158	CFGExitNode	EXIT		748105		True				
ANR	748159	Symbol	me [ i ] . mp		748105						
ANR	748160	Symbol	NULL		748105						
ANR	748161	Symbol	* i		748105						
ANR	748162	Symbol	nme		748105						
ANR	748163	Symbol	me		748105						
ANR	748164	Symbol	i		748105						
ANR	748165	Symbol	* me		748105						
ANR	748166	Function	apprentice_load	1210:8:28423:31169							
ANR	748167	FunctionDef	"apprentice_load (struct magic_set * ms , const char * fn , int action)"		748166	0					
ANR	748168	CompoundStatement		1212:0:28508:31169	748166	0					
ANR	748169	IdentifierDeclStatement	int errs = 0 ;	1213:1:28511:28523	748166	0	True				
ANR	748170	IdentifierDecl	errs = 0		748166	0					
ANR	748171	IdentifierDeclType	int		748166	0					
ANR	748172	Identifier	errs		748166	1					
ANR	748173	AssignmentExpression	errs = 0		748166	2		=			
ANR	748174	Identifier	errs		748166	0					
ANR	748175	PrimaryExpression	0		748166	1					
ANR	748176	IdentifierDeclStatement	"uint32_t i , j ;"	1214:1:28526:28539	748166	1	True				
ANR	748177	IdentifierDecl	i		748166	0					
ANR	748178	IdentifierDeclType	uint32_t		748166	0					
ANR	748179	Identifier	i		748166	1					
ANR	748180	IdentifierDecl	j		748166	1					
ANR	748181	IdentifierDeclType	uint32_t		748166	0					
ANR	748182	Identifier	j		748166	1					
ANR	748183	IdentifierDeclStatement	"size_t files = 0 , maxfiles = 0 ;"	1215:1:28542:28572	748166	2	True				
ANR	748184	IdentifierDecl	files = 0		748166	0					
ANR	748185	IdentifierDeclType	size_t		748166	0					
ANR	748186	Identifier	files		748166	1					
ANR	748187	AssignmentExpression	files = 0		748166	2		=			
ANR	748188	Identifier	files		748166	0					
ANR	748189	PrimaryExpression	0		748166	1					
ANR	748190	IdentifierDecl	maxfiles = 0		748166	1					
ANR	748191	IdentifierDeclType	size_t		748166	0					
ANR	748192	Identifier	maxfiles		748166	1					
ANR	748193	AssignmentExpression	maxfiles = 0		748166	2		=			
ANR	748194	Identifier	maxfiles		748166	0					
ANR	748195	PrimaryExpression	0		748166	1					
ANR	748196	IdentifierDeclStatement	char * * filearr = NULL ;	1216:1:28575:28596	748166	3	True				
ANR	748197	IdentifierDecl	* * filearr = NULL		748166	0					
ANR	748198	IdentifierDeclType	char * *		748166	0					
ANR	748199	Identifier	filearr		748166	1					
ANR	748200	AssignmentExpression	* * filearr = NULL		748166	2		=			
ANR	748201	Identifier	NULL		748166	0					
ANR	748202	Identifier	NULL		748166	1					
ANR	748203	IdentifierDeclStatement	zend_stat_t st ;	1217:1:28599:28613	748166	4	True				
ANR	748204	IdentifierDecl	st		748166	0					
ANR	748205	IdentifierDeclType	zend_stat_t		748166	0					
ANR	748206	Identifier	st		748166	1					
ANR	748207	IdentifierDeclStatement	struct magic_map * map ;	1218:1:28616:28637	748166	5	True				
ANR	748208	IdentifierDecl	* map		748166	0					
ANR	748209	IdentifierDeclType	struct magic_map *		748166	0					
ANR	748210	Identifier	map		748166	1					
ANR	748211	IdentifierDeclStatement	struct magic_entry_set mset [ MAGIC_SETS ] ;	1219:1:28640:28679	748166	6	True				
ANR	748212	IdentifierDecl	mset [ MAGIC_SETS ]		748166	0					
ANR	748213	IdentifierDeclType	struct magic_entry_set [ MAGIC_SETS ]		748166	0					
ANR	748214	Identifier	mset		748166	1					
ANR	748215	Identifier	MAGIC_SETS		748166	2					
ANR	748216	IdentifierDeclStatement	php_stream * dir ;	1220:1:28682:28697	748166	7	True				
ANR	748217	IdentifierDecl	* dir		748166	0					
ANR	748218	IdentifierDeclType	php_stream *		748166	0					
ANR	748219	Identifier	dir		748166	1					
ANR	748220	IdentifierDeclStatement	php_stream_dirent d ;	1221:1:28700:28719	748166	8	True				
ANR	748221	IdentifierDecl	d		748166	0					
ANR	748222	IdentifierDeclType	php_stream_dirent		748166	0					
ANR	748223	Identifier	d		748166	1					
ANR	748224	ExpressionStatement	"memset ( mset , 0 , sizeof ( mset ) )"	1224:1:28725:28754	748166	9	True				
ANR	748225	CallExpression	"memset ( mset , 0 , sizeof ( mset ) )"		748166	0					
ANR	748226	Callee	memset		748166	0					
ANR	748227	Identifier	memset		748166	0					
ANR	748228	ArgumentList	mset		748166	1					
ANR	748229	Argument	mset		748166	0					
ANR	748230	Identifier	mset		748166	0					
ANR	748231	Argument	0		748166	1					
ANR	748232	PrimaryExpression	0		748166	0					
ANR	748233	Argument	sizeof ( mset )		748166	2					
ANR	748234	SizeofExpression	sizeof ( mset )		748166	0					
ANR	748235	Sizeof	sizeof		748166	0					
ANR	748236	SizeofOperand	mset		748166	1					
ANR	748237	ExpressionStatement	ms -> flags |= MAGIC_CHECK	1225:1:28757:28781	748166	10	True				
ANR	748238	AssignmentExpression	ms -> flags |= MAGIC_CHECK		748166	0		|=			
ANR	748239	PtrMemberAccess	ms -> flags		748166	0					
ANR	748240	Identifier	ms		748166	0					
ANR	748241	Identifier	flags		748166	1					
ANR	748242	Identifier	MAGIC_CHECK		748166	1					
ANR	748243	Statement	if	1228:1:28823:28824	748166	11	True				
ANR	748244	Statement	(	1228:4:28826:28826	748166	12	True				
ANR	748245	Statement	(	1228:5:28827:28827	748166	13	True				
ANR	748246	Statement	map	1228:6:28828:28830	748166	14	True				
ANR	748247	Statement	=	1228:10:28832:28832	748166	15	True				
ANR	748248	Statement	CAST	1228:12:28834:28837	748166	16	True				
ANR	748249	Statement	(	1228:16:28838:28838	748166	17	True				
ANR	748250	Statement	struct	1228:17:28839:28844	748166	18	True				
ANR	748251	Statement	magic_map	1228:24:28846:28854	748166	19	True				
ANR	748252	Statement	*	1228:34:28856:28856	748166	20	True				
ANR	748253	Statement	","	1228:35:28857:28857	748166	21	True				
ANR	748254	Statement	ecalloc	1228:37:28859:28865	748166	22	True				
ANR	748255	Statement	(	1228:44:28866:28866	748166	23	True				
ANR	748256	Statement	1	1228:45:28867:28867	748166	24	True				
ANR	748257	Statement	","	1228:46:28868:28868	748166	25	True				
ANR	748258	Statement	sizeof	1228:48:28870:28875	748166	26	True				
ANR	748259	Statement	(	1228:54:28876:28876	748166	27	True				
ANR	748260	Statement	*	1228:55:28877:28877	748166	28	True				
ANR	748261	Statement	map	1228:56:28878:28880	748166	29	True				
ANR	748262	Statement	)	1228:59:28881:28881	748166	30	True				
ANR	748263	Statement	)	1228:60:28882:28882	748166	31	True				
ANR	748264	Statement	)	1228:61:28883:28883	748166	32	True				
ANR	748265	Statement	)	1228:62:28884:28884	748166	33	True				
ANR	748266	Statement	==	1228:64:28886:28887	748166	34	True				
ANR	748267	Statement	NULL	1228:67:28889:28892	748166	35	True				
ANR	748268	Statement	)	1228:71:28893:28893	748166	36	True				
ANR	748269	CompoundStatement		18:1:387:387	748166	37					
ANR	748270	ExpressionStatement	"file_oomem ( ms , sizeof ( * map ) )"	1230:2:28900:28928	748166	0	True				
ANR	748271	CallExpression	"file_oomem ( ms , sizeof ( * map ) )"		748166	0					
ANR	748272	Callee	file_oomem		748166	0					
ANR	748273	Identifier	file_oomem		748166	0					
ANR	748274	ArgumentList	ms		748166	1					
ANR	748275	Argument	ms		748166	0					
ANR	748276	Identifier	ms		748166	0					
ANR	748277	Argument	sizeof ( * map )		748166	1					
ANR	748278	SizeofExpression	sizeof ( * map )		748166	0					
ANR	748279	Sizeof	sizeof		748166	0					
ANR	748280	UnaryOperationExpression	* map		748166	1					
ANR	748281	UnaryOperator	*		748166	0					
ANR	748282	Identifier	map		748166	1					
ANR	748283	ReturnStatement	return NULL ;	1231:2:28932:28943	748166	1	True				
ANR	748284	Identifier	NULL		748166	0					
ANR	748285	IfStatement	if ( action == FILE_CHECK )		748166	38					
ANR	748286	Condition	action == FILE_CHECK	1235:5:29004:29023	748166	0	True				
ANR	748287	EqualityExpression	action == FILE_CHECK		748166	0		==			
ANR	748288	Identifier	action		748166	0					
ANR	748289	Identifier	FILE_CHECK		748166	1					
ANR	748290	ExpressionStatement	"( void ) fprintf ( stderr , ""%s\\n"" , usg_hdr )"	1236:2:29028:29066	748166	1	True				
ANR	748291	CastExpression	"( void ) fprintf ( stderr , ""%s\\n"" , usg_hdr )"		748166	0					
ANR	748292	CastTarget	void		748166	0					
ANR	748293	CallExpression	"fprintf ( stderr , ""%s\\n"" , usg_hdr )"		748166	1					
ANR	748294	Callee	fprintf		748166	0					
ANR	748295	Identifier	fprintf		748166	0					
ANR	748296	ArgumentList	stderr		748166	1					
ANR	748297	Argument	stderr		748166	0					
ANR	748298	Identifier	stderr		748166	0					
ANR	748299	Argument	"""%s\\n"""		748166	1					
ANR	748300	PrimaryExpression	"""%s\\n"""		748166	0					
ANR	748301	Argument	usg_hdr		748166	2					
ANR	748302	Identifier	usg_hdr		748166	0					
ANR	748303	IfStatement	"if ( php_sys_stat ( fn , & st ) == 0 && S_ISDIR ( st . st_mode ) )"		748166	39					
ANR	748304	Condition	"php_sys_stat ( fn , & st ) == 0 && S_ISDIR ( st . st_mode )"	1241:5:29204:29252	748166	0	True				
ANR	748305	AndExpression	"php_sys_stat ( fn , & st ) == 0 && S_ISDIR ( st . st_mode )"		748166	0		&&			
ANR	748306	EqualityExpression	"php_sys_stat ( fn , & st ) == 0"		748166	0		==			
ANR	748307	CallExpression	"php_sys_stat ( fn , & st )"		748166	0					
ANR	748308	Callee	php_sys_stat		748166	0					
ANR	748309	Identifier	php_sys_stat		748166	0					
ANR	748310	ArgumentList	fn		748166	1					
ANR	748311	Argument	fn		748166	0					
ANR	748312	Identifier	fn		748166	0					
ANR	748313	Argument	& st		748166	1					
ANR	748314	UnaryOperationExpression	& st		748166	0					
ANR	748315	UnaryOperator	&		748166	0					
ANR	748316	Identifier	st		748166	1					
ANR	748317	PrimaryExpression	0		748166	1					
ANR	748318	CallExpression	S_ISDIR ( st . st_mode )		748166	1					
ANR	748319	Callee	S_ISDIR		748166	0					
ANR	748320	Identifier	S_ISDIR		748166	0					
ANR	748321	ArgumentList	st . st_mode		748166	1					
ANR	748322	Argument	st . st_mode		748166	0					
ANR	748323	MemberAccess	st . st_mode		748166	0					
ANR	748324	Identifier	st		748166	0					
ANR	748325	Identifier	st_mode		748166	1					
ANR	748326	CompoundStatement		32:2:763:783	748166	1					
ANR	748327	IdentifierDeclStatement	int mflen ;	1242:2:29259:29268	748166	0	True				
ANR	748328	IdentifierDecl	mflen		748166	0					
ANR	748329	IdentifierDeclType	int		748166	0					
ANR	748330	Identifier	mflen		748166	1					
ANR	748331	IdentifierDeclStatement	char mfn [ MAXPATHLEN ] ;	1243:2:29272:29292	748166	1	True				
ANR	748332	IdentifierDecl	mfn [ MAXPATHLEN ]		748166	0					
ANR	748333	IdentifierDeclType	char [ MAXPATHLEN ]		748166	0					
ANR	748334	Identifier	mfn		748166	1					
ANR	748335	Identifier	MAXPATHLEN		748166	2					
ANR	748336	ExpressionStatement	"dir = php_stream_opendir ( ( char * ) fn , REPORT_ERRORS , NULL )"	1245:2:29297:29354	748166	2	True				
ANR	748337	AssignmentExpression	"dir = php_stream_opendir ( ( char * ) fn , REPORT_ERRORS , NULL )"		748166	0		=			
ANR	748338	Identifier	dir		748166	0					
ANR	748339	CallExpression	"php_stream_opendir ( ( char * ) fn , REPORT_ERRORS , NULL )"		748166	1					
ANR	748340	Callee	php_stream_opendir		748166	0					
ANR	748341	Identifier	php_stream_opendir		748166	0					
ANR	748342	ArgumentList	( char * ) fn		748166	1					
ANR	748343	Argument	( char * ) fn		748166	0					
ANR	748344	CastExpression	( char * ) fn		748166	0					
ANR	748345	CastTarget	char *		748166	0					
ANR	748346	Identifier	fn		748166	1					
ANR	748347	Argument	REPORT_ERRORS		748166	1					
ANR	748348	Identifier	REPORT_ERRORS		748166	0					
ANR	748349	Argument	NULL		748166	2					
ANR	748350	Identifier	NULL		748166	0					
ANR	748351	IfStatement	if ( ! dir )		748166	3					
ANR	748352	Condition	! dir	1246:6:29362:29365	748166	0	True				
ANR	748353	UnaryOperationExpression	! dir		748166	0					
ANR	748354	UnaryOperator	!		748166	0					
ANR	748355	Identifier	dir		748166	1					
ANR	748356	CompoundStatement		35:12:859:859	748166	1					
ANR	748357	ExpressionStatement	errs ++	1247:3:29373:29379	748166	0	True				
ANR	748358	PostIncDecOperationExpression	errs ++		748166	0					
ANR	748359	Identifier	errs		748166	0					
ANR	748360	IncDec	++		748166	1					
ANR	748361	GotoStatement	goto out ;	1248:3:29384:29392	748166	1	True				
ANR	748362	Identifier	out		748166	0					
ANR	748363	WhileStatement	"while ( php_stream_readdir ( dir , & d ) )"		748166	4					
ANR	748364	Condition	"php_stream_readdir ( dir , & d )"	1250:9:29407:29433	748166	0	True				
ANR	748365	CallExpression	"php_stream_readdir ( dir , & d )"		748166	0					
ANR	748366	Callee	php_stream_readdir		748166	0					
ANR	748367	Identifier	php_stream_readdir		748166	0					
ANR	748368	ArgumentList	dir		748166	1					
ANR	748369	Argument	dir		748166	0					
ANR	748370	Identifier	dir		748166	0					
ANR	748371	Argument	& d		748166	1					
ANR	748372	UnaryOperationExpression	& d		748166	0					
ANR	748373	UnaryOperator	&		748166	0					
ANR	748374	Identifier	d		748166	1					
ANR	748375	CompoundStatement		39:38:927:927	748166	1					
ANR	748376	IfStatement	"if ( ( mflen = snprintf ( mfn , sizeof ( mfn ) , ""%s/%s"" , fn , d . d_name ) ) < 0 )"		748166	0					
ANR	748377	Condition	"( mflen = snprintf ( mfn , sizeof ( mfn ) , ""%s/%s"" , fn , d . d_name ) ) < 0"	1251:7:29445:29507	748166	0	True				
ANR	748378	RelationalExpression	"( mflen = snprintf ( mfn , sizeof ( mfn ) , ""%s/%s"" , fn , d . d_name ) ) < 0"		748166	0		<			
ANR	748379	AssignmentExpression	"mflen = snprintf ( mfn , sizeof ( mfn ) , ""%s/%s"" , fn , d . d_name )"		748166	0		=			
ANR	748380	Identifier	mflen		748166	0					
ANR	748381	CallExpression	"snprintf ( mfn , sizeof ( mfn ) , ""%s/%s"" , fn , d . d_name )"		748166	1					
ANR	748382	Callee	snprintf		748166	0					
ANR	748383	Identifier	snprintf		748166	0					
ANR	748384	ArgumentList	mfn		748166	1					
ANR	748385	Argument	mfn		748166	0					
ANR	748386	Identifier	mfn		748166	0					
ANR	748387	Argument	sizeof ( mfn )		748166	1					
ANR	748388	SizeofExpression	sizeof ( mfn )		748166	0					
ANR	748389	Sizeof	sizeof		748166	0					
ANR	748390	SizeofOperand	mfn		748166	1					
ANR	748391	Argument	"""%s/%s"""		748166	2					
ANR	748392	PrimaryExpression	"""%s/%s"""		748166	0					
ANR	748393	Argument	fn		748166	3					
ANR	748394	Identifier	fn		748166	0					
ANR	748395	Argument	d . d_name		748166	4					
ANR	748396	MemberAccess	d . d_name		748166	0					
ANR	748397	Identifier	d		748166	0					
ANR	748398	Identifier	d_name		748166	1					
ANR	748399	PrimaryExpression	0		748166	1					
ANR	748400	CompoundStatement		40:72:1001:1001	748166	1					
ANR	748401	ExpressionStatement	"file_oomem ( ms , strlen ( fn ) + strlen ( d . d_name ) + 2 )"	1252:4:29516:29569	748166	0	True				
ANR	748402	CallExpression	"file_oomem ( ms , strlen ( fn ) + strlen ( d . d_name ) + 2 )"		748166	0					
ANR	748403	Callee	file_oomem		748166	0					
ANR	748404	Identifier	file_oomem		748166	0					
ANR	748405	ArgumentList	ms		748166	1					
ANR	748406	Argument	ms		748166	0					
ANR	748407	Identifier	ms		748166	0					
ANR	748408	Argument	strlen ( fn ) + strlen ( d . d_name ) + 2		748166	1					
ANR	748409	AdditiveExpression	strlen ( fn ) + strlen ( d . d_name ) + 2		748166	0		+			
ANR	748410	CallExpression	strlen ( fn )		748166	0					
ANR	748411	Callee	strlen		748166	0					
ANR	748412	Identifier	strlen		748166	0					
ANR	748413	ArgumentList	fn		748166	1					
ANR	748414	Argument	fn		748166	0					
ANR	748415	Identifier	fn		748166	0					
ANR	748416	AdditiveExpression	strlen ( d . d_name ) + 2		748166	1		+			
ANR	748417	CallExpression	strlen ( d . d_name )		748166	0					
ANR	748418	Callee	strlen		748166	0					
ANR	748419	Identifier	strlen		748166	0					
ANR	748420	ArgumentList	d . d_name		748166	1					
ANR	748421	Argument	d . d_name		748166	0					
ANR	748422	MemberAccess	d . d_name		748166	0					
ANR	748423	Identifier	d		748166	0					
ANR	748424	Identifier	d_name		748166	1					
ANR	748425	PrimaryExpression	2		748166	1					
ANR	748426	ExpressionStatement	errs ++	1254:4:29575:29581	748166	1	True				
ANR	748427	PostIncDecOperationExpression	errs ++		748166	0					
ANR	748428	Identifier	errs		748166	0					
ANR	748429	IncDec	++		748166	1					
ANR	748430	ExpressionStatement	php_stream_closedir ( dir )	1255:4:29587:29611	748166	2	True				
ANR	748431	CallExpression	php_stream_closedir ( dir )		748166	0					
ANR	748432	Callee	php_stream_closedir		748166	0					
ANR	748433	Identifier	php_stream_closedir		748166	0					
ANR	748434	ArgumentList	dir		748166	1					
ANR	748435	Argument	dir		748166	0					
ANR	748436	Identifier	dir		748166	0					
ANR	748437	GotoStatement	goto out ;	1256:4:29617:29625	748166	3	True				
ANR	748438	Identifier	out		748166	0					
ANR	748439	IfStatement	"if ( zend_stat ( mfn , & st ) == - 1 || ! S_ISREG ( st . st_mode ) )"		748166	1					
ANR	748440	Condition	"zend_stat ( mfn , & st ) == - 1 || ! S_ISREG ( st . st_mode )"	1258:7:29639:29687	748166	0	True				
ANR	748441	OrExpression	"zend_stat ( mfn , & st ) == - 1 || ! S_ISREG ( st . st_mode )"		748166	0		||			
ANR	748442	EqualityExpression	"zend_stat ( mfn , & st ) == - 1"		748166	0		==			
ANR	748443	CallExpression	"zend_stat ( mfn , & st )"		748166	0					
ANR	748444	Callee	zend_stat		748166	0					
ANR	748445	Identifier	zend_stat		748166	0					
ANR	748446	ArgumentList	mfn		748166	1					
ANR	748447	Argument	mfn		748166	0					
ANR	748448	Identifier	mfn		748166	0					
ANR	748449	Argument	& st		748166	1					
ANR	748450	UnaryOperationExpression	& st		748166	0					
ANR	748451	UnaryOperator	&		748166	0					
ANR	748452	Identifier	st		748166	1					
ANR	748453	UnaryOperationExpression	- 1		748166	1					
ANR	748454	UnaryOperator	-		748166	0					
ANR	748455	PrimaryExpression	1		748166	1					
ANR	748456	UnaryOperationExpression	! S_ISREG ( st . st_mode )		748166	1					
ANR	748457	UnaryOperator	!		748166	0					
ANR	748458	CallExpression	S_ISREG ( st . st_mode )		748166	1					
ANR	748459	Callee	S_ISREG		748166	0					
ANR	748460	Identifier	S_ISREG		748166	0					
ANR	748461	ArgumentList	st . st_mode		748166	1					
ANR	748462	Argument	st . st_mode		748166	0					
ANR	748463	MemberAccess	st . st_mode		748166	0					
ANR	748464	Identifier	st		748166	0					
ANR	748465	Identifier	st_mode		748166	1					
ANR	748466	CompoundStatement		47:58:1181:1181	748166	1					
ANR	748467	ContinueStatement	continue ;	1259:4:29696:29704	748166	0	True				
ANR	748468	IfStatement	if ( files >= maxfiles )		748166	2					
ANR	748469	Condition	files >= maxfiles	1261:7:29718:29734	748166	0	True				
ANR	748470	RelationalExpression	files >= maxfiles		748166	0		>=			
ANR	748471	Identifier	files		748166	0					
ANR	748472	Identifier	maxfiles		748166	1					
ANR	748473	CompoundStatement		51:4:1234:1245	748166	1					
ANR	748474	IdentifierDeclStatement	size_t mlen ;	1262:4:29743:29754	748166	0	True				
ANR	748475	IdentifierDecl	mlen		748166	0					
ANR	748476	IdentifierDeclType	size_t		748166	0					
ANR	748477	Identifier	mlen		748166	1					
ANR	748478	ExpressionStatement	maxfiles = ( maxfiles + 1 ) * 2	1263:4:29760:29789	748166	1	True				
ANR	748479	AssignmentExpression	maxfiles = ( maxfiles + 1 ) * 2		748166	0		=			
ANR	748480	Identifier	maxfiles		748166	0					
ANR	748481	MultiplicativeExpression	( maxfiles + 1 ) * 2		748166	1		*			
ANR	748482	AdditiveExpression	maxfiles + 1		748166	0		+			
ANR	748483	Identifier	maxfiles		748166	0					
ANR	748484	PrimaryExpression	1		748166	1					
ANR	748485	PrimaryExpression	2		748166	1					
ANR	748486	ExpressionStatement	mlen = maxfiles * sizeof ( * filearr )	1264:4:29795:29829	748166	2	True				
ANR	748487	AssignmentExpression	mlen = maxfiles * sizeof ( * filearr )		748166	0		=			
ANR	748488	Identifier	mlen		748166	0					
ANR	748489	MultiplicativeExpression	maxfiles * sizeof ( * filearr )		748166	1		*			
ANR	748490	Identifier	maxfiles		748166	0					
ANR	748491	SizeofExpression	sizeof ( * filearr )		748166	1					
ANR	748492	Sizeof	sizeof		748166	0					
ANR	748493	UnaryOperationExpression	* filearr		748166	1					
ANR	748494	UnaryOperator	*		748166	0					
ANR	748495	Identifier	filearr		748166	1					
ANR	748496	Statement	if	1265:4:29835:29836	748166	3	True				
ANR	748497	Statement	(	1265:7:29838:29838	748166	4	True				
ANR	748498	Statement	(	1265:8:29839:29839	748166	5	True				
ANR	748499	Statement	filearr	1265:9:29840:29846	748166	6	True				
ANR	748500	Statement	=	1265:17:29848:29848	748166	7	True				
ANR	748501	Statement	CAST	1265:19:29850:29853	748166	8	True				
ANR	748502	Statement	(	1265:23:29854:29854	748166	9	True				
ANR	748503	Statement	char	1265:24:29855:29858	748166	10	True				
ANR	748504	Statement	*	1265:29:29860:29860	748166	11	True				
ANR	748505	Statement	*	1265:30:29861:29861	748166	12	True				
ANR	748506	Statement	","	1265:31:29862:29862	748166	13	True				
ANR	748507	Statement	erealloc	1266:8:29872:29879	748166	14	True				
ANR	748508	Statement	(	1266:16:29880:29880	748166	15	True				
ANR	748509	Statement	filearr	1266:17:29881:29887	748166	16	True				
ANR	748510	Statement	","	1266:24:29888:29888	748166	17	True				
ANR	748511	Statement	mlen	1266:26:29890:29893	748166	18	True				
ANR	748512	Statement	)	1266:30:29894:29894	748166	19	True				
ANR	748513	Statement	)	1266:31:29895:29895	748166	20	True				
ANR	748514	Statement	)	1266:32:29896:29896	748166	21	True				
ANR	748515	Statement	==	1266:34:29898:29899	748166	22	True				
ANR	748516	Statement	NULL	1266:37:29901:29904	748166	23	True				
ANR	748517	Statement	)	1266:41:29905:29905	748166	24	True				
ANR	748518	CompoundStatement		55:43:1398:1398	748166	25					
ANR	748519	ExpressionStatement	"file_oomem ( ms , mlen )"	1267:5:29914:29934	748166	0	True				
ANR	748520	CallExpression	"file_oomem ( ms , mlen )"		748166	0					
ANR	748521	Callee	file_oomem		748166	0					
ANR	748522	Identifier	file_oomem		748166	0					
ANR	748523	ArgumentList	ms		748166	1					
ANR	748524	Argument	ms		748166	0					
ANR	748525	Identifier	ms		748166	0					
ANR	748526	Argument	mlen		748166	1					
ANR	748527	Identifier	mlen		748166	0					
ANR	748528	ExpressionStatement	php_stream_closedir ( dir )	1268:5:29941:29965	748166	1	True				
ANR	748529	CallExpression	php_stream_closedir ( dir )		748166	0					
ANR	748530	Callee	php_stream_closedir		748166	0					
ANR	748531	Identifier	php_stream_closedir		748166	0					
ANR	748532	ArgumentList	dir		748166	1					
ANR	748533	Argument	dir		748166	0					
ANR	748534	Identifier	dir		748166	0					
ANR	748535	ExpressionStatement	errs ++	1269:5:29972:29978	748166	2	True				
ANR	748536	PostIncDecOperationExpression	errs ++		748166	0					
ANR	748537	Identifier	errs		748166	0					
ANR	748538	IncDec	++		748166	1					
ANR	748539	GotoStatement	goto out ;	1270:5:29985:29993	748166	3	True				
ANR	748540	Identifier	out		748166	0					
ANR	748541	ExpressionStatement	"filearr [ files ++ ] = estrndup ( mfn , ( mflen > sizeof ( mfn ) - 1 ) ? sizeof ( mfn ) - 1 : mflen )"	1273:3:30009:30092	748166	3	True				
ANR	748542	AssignmentExpression	"filearr [ files ++ ] = estrndup ( mfn , ( mflen > sizeof ( mfn ) - 1 ) ? sizeof ( mfn ) - 1 : mflen )"		748166	0		=			
ANR	748543	ArrayIndexing	filearr [ files ++ ]		748166	0					
ANR	748544	Identifier	filearr		748166	0					
ANR	748545	PostIncDecOperationExpression	files ++		748166	1					
ANR	748546	Identifier	files		748166	0					
ANR	748547	IncDec	++		748166	1					
ANR	748548	CallExpression	"estrndup ( mfn , ( mflen > sizeof ( mfn ) - 1 ) ? sizeof ( mfn ) - 1 : mflen )"		748166	1					
ANR	748549	Callee	estrndup		748166	0					
ANR	748550	Identifier	estrndup		748166	0					
ANR	748551	ArgumentList	mfn		748166	1					
ANR	748552	Argument	mfn		748166	0					
ANR	748553	Identifier	mfn		748166	0					
ANR	748554	Argument	( mflen > sizeof ( mfn ) - 1 ) ? sizeof ( mfn ) - 1 : mflen		748166	1					
ANR	748555	ConditionalExpression	( mflen > sizeof ( mfn ) - 1 ) ? sizeof ( mfn ) - 1 : mflen		748166	0					
ANR	748556	Condition	mflen > sizeof ( mfn ) - 1		748166	0					
ANR	748557	RelationalExpression	mflen > sizeof ( mfn ) - 1		748166	0		>			
ANR	748558	Identifier	mflen		748166	0					
ANR	748559	AdditiveExpression	sizeof ( mfn ) - 1		748166	1		-			
ANR	748560	SizeofExpression	sizeof ( mfn )		748166	0					
ANR	748561	Sizeof	sizeof		748166	0					
ANR	748562	SizeofOperand	mfn		748166	1					
ANR	748563	PrimaryExpression	1		748166	1					
ANR	748564	AdditiveExpression	sizeof ( mfn ) - 1		748166	1		-			
ANR	748565	SizeofExpression	sizeof ( mfn )		748166	0					
ANR	748566	Sizeof	sizeof		748166	0					
ANR	748567	SizeofOperand	mfn		748166	1					
ANR	748568	PrimaryExpression	1		748166	1					
ANR	748569	Identifier	mflen		748166	2					
ANR	748570	ExpressionStatement	php_stream_closedir ( dir )	1275:2:30100:30124	748166	5	True				
ANR	748571	CallExpression	php_stream_closedir ( dir )		748166	0					
ANR	748572	Callee	php_stream_closedir		748166	0					
ANR	748573	Identifier	php_stream_closedir		748166	0					
ANR	748574	ArgumentList	dir		748166	1					
ANR	748575	Argument	dir		748166	0					
ANR	748576	Identifier	dir		748166	0					
ANR	748577	ExpressionStatement	"qsort ( filearr , files , sizeof ( * filearr ) , cmpstrp )"	1276:2:30128:30176	748166	6	True				
ANR	748578	CallExpression	"qsort ( filearr , files , sizeof ( * filearr ) , cmpstrp )"		748166	0					
ANR	748579	Callee	qsort		748166	0					
ANR	748580	Identifier	qsort		748166	0					
ANR	748581	ArgumentList	filearr		748166	1					
ANR	748582	Argument	filearr		748166	0					
ANR	748583	Identifier	filearr		748166	0					
ANR	748584	Argument	files		748166	1					
ANR	748585	Identifier	files		748166	0					
ANR	748586	Argument	sizeof ( * filearr )		748166	2					
ANR	748587	SizeofExpression	sizeof ( * filearr )		748166	0					
ANR	748588	Sizeof	sizeof		748166	0					
ANR	748589	UnaryOperationExpression	* filearr		748166	1					
ANR	748590	UnaryOperator	*		748166	0					
ANR	748591	Identifier	filearr		748166	1					
ANR	748592	Argument	cmpstrp		748166	3					
ANR	748593	Identifier	cmpstrp		748166	0					
ANR	748594	ForStatement	for ( i = 0 ; i < files ; i ++ )		748166	7					
ANR	748595	ForInit	i = 0 ;	1277:7:30185:30190	748166	0	True				
ANR	748596	AssignmentExpression	i = 0		748166	0		=			
ANR	748597	Identifier	i		748166	0					
ANR	748598	PrimaryExpression	0		748166	1					
ANR	748599	Condition	i < files	1277:14:30192:30200	748166	1	True				
ANR	748600	RelationalExpression	i < files		748166	0		<			
ANR	748601	Identifier	i		748166	0					
ANR	748602	Identifier	files		748166	1					
ANR	748603	PostIncDecOperationExpression	i ++	1277:25:30203:30205	748166	2	True				
ANR	748604	Identifier	i		748166	0					
ANR	748605	IncDec	++		748166	1					
ANR	748606	CompoundStatement		66:30:1699:1699	748166	3					
ANR	748607	ExpressionStatement	"load_1 ( ms , action , filearr [ i ] , & errs , mset )"	1278:3:30213:30256	748166	0	True				
ANR	748608	CallExpression	"load_1 ( ms , action , filearr [ i ] , & errs , mset )"		748166	0					
ANR	748609	Callee	load_1		748166	0					
ANR	748610	Identifier	load_1		748166	0					
ANR	748611	ArgumentList	ms		748166	1					
ANR	748612	Argument	ms		748166	0					
ANR	748613	Identifier	ms		748166	0					
ANR	748614	Argument	action		748166	1					
ANR	748615	Identifier	action		748166	0					
ANR	748616	Argument	filearr [ i ]		748166	2					
ANR	748617	ArrayIndexing	filearr [ i ]		748166	0					
ANR	748618	Identifier	filearr		748166	0					
ANR	748619	Identifier	i		748166	1					
ANR	748620	Argument	& errs		748166	3					
ANR	748621	UnaryOperationExpression	& errs		748166	0					
ANR	748622	UnaryOperator	&		748166	0					
ANR	748623	Identifier	errs		748166	1					
ANR	748624	Argument	mset		748166	4					
ANR	748625	Identifier	mset		748166	0					
ANR	748626	ExpressionStatement	efree ( filearr [ i ] )	1279:3:30261:30278	748166	1	True				
ANR	748627	CallExpression	efree ( filearr [ i ] )		748166	0					
ANR	748628	Callee	efree		748166	0					
ANR	748629	Identifier	efree		748166	0					
ANR	748630	ArgumentList	filearr [ i ]		748166	1					
ANR	748631	Argument	filearr [ i ]		748166	0					
ANR	748632	ArrayIndexing	filearr [ i ]		748166	0					
ANR	748633	Identifier	filearr		748166	0					
ANR	748634	Identifier	i		748166	1					
ANR	748635	ExpressionStatement	efree ( filearr )	1281:2:30286:30300	748166	8	True				
ANR	748636	CallExpression	efree ( filearr )		748166	0					
ANR	748637	Callee	efree		748166	0					
ANR	748638	Identifier	efree		748166	0					
ANR	748639	ArgumentList	filearr		748166	1					
ANR	748640	Argument	filearr		748166	0					
ANR	748641	Identifier	filearr		748166	0					
ANR	748642	ElseStatement	else		748166	0					
ANR	748643	ExpressionStatement	"load_1 ( ms , action , fn , & errs , mset )"	1283:2:30312:30347	748166	0	True				
ANR	748644	CallExpression	"load_1 ( ms , action , fn , & errs , mset )"		748166	0					
ANR	748645	Callee	load_1		748166	0					
ANR	748646	Identifier	load_1		748166	0					
ANR	748647	ArgumentList	ms		748166	1					
ANR	748648	Argument	ms		748166	0					
ANR	748649	Identifier	ms		748166	0					
ANR	748650	Argument	action		748166	1					
ANR	748651	Identifier	action		748166	0					
ANR	748652	Argument	fn		748166	2					
ANR	748653	Identifier	fn		748166	0					
ANR	748654	Argument	& errs		748166	3					
ANR	748655	UnaryOperationExpression	& errs		748166	0					
ANR	748656	UnaryOperator	&		748166	0					
ANR	748657	Identifier	errs		748166	1					
ANR	748658	Argument	mset		748166	4					
ANR	748659	Identifier	mset		748166	0					
ANR	748660	IfStatement	if ( errs )		748166	40					
ANR	748661	Condition	errs	1284:5:30354:30357	748166	0	True				
ANR	748662	Identifier	errs		748166	0					
ANR	748663	GotoStatement	goto out ;	1285:2:30362:30370	748166	1	True				
ANR	748664	Identifier	out		748166	0					
ANR	748665	ForStatement	for ( j = 0 ; j < MAGIC_SETS ; j ++ )		748166	41					
ANR	748666	ForInit	j = 0 ;	1287:6:30379:30384	748166	0	True				
ANR	748667	AssignmentExpression	j = 0		748166	0		=			
ANR	748668	Identifier	j		748166	0					
ANR	748669	PrimaryExpression	0		748166	1					
ANR	748670	Condition	j < MAGIC_SETS	1287:13:30386:30399	748166	1	True				
ANR	748671	RelationalExpression	j < MAGIC_SETS		748166	0		<			
ANR	748672	Identifier	j		748166	0					
ANR	748673	Identifier	MAGIC_SETS		748166	1					
ANR	748674	PostIncDecOperationExpression	j ++	1287:29:30402:30404	748166	2	True				
ANR	748675	Identifier	j		748166	0					
ANR	748676	IncDec	++		748166	1					
ANR	748677	CompoundStatement		76:34:1898:1898	748166	3					
ANR	748678	ForStatement	for ( i = 0 ; i < mset [ j ] . count ; )		748166	0					
ANR	748679	ForInit	i = 0 ;	1289:7:30443:30448	748166	0	True				
ANR	748680	AssignmentExpression	i = 0		748166	0		=			
ANR	748681	Identifier	i		748166	0					
ANR	748682	PrimaryExpression	0		748166	1					
ANR	748683	Condition	i < mset [ j ] . count	1289:14:30450:30466	748166	1	True				
ANR	748684	RelationalExpression	i < mset [ j ] . count		748166	0		<			
ANR	748685	Identifier	i		748166	0					
ANR	748686	MemberAccess	mset [ j ] . count		748166	1					
ANR	748687	ArrayIndexing	mset [ j ]		748166	0					
ANR	748688	Identifier	mset		748166	0					
ANR	748689	Identifier	j		748166	1					
ANR	748690	Identifier	count		748166	1					
ANR	748691	CompoundStatement		78:35:1962:1962	748166	2					
ANR	748692	IfStatement	if ( mset [ j ] . me [ i ] . mp -> cont_level != 0 )		748166	0					
ANR	748693	Condition	mset [ j ] . me [ i ] . mp -> cont_level != 0	1290:7:30480:30512	748166	0	True				
ANR	748694	EqualityExpression	mset [ j ] . me [ i ] . mp -> cont_level != 0		748166	0		!=			
ANR	748695	PtrMemberAccess	mset [ j ] . me [ i ] . mp -> cont_level		748166	0					
ANR	748696	MemberAccess	mset [ j ] . me [ i ] . mp		748166	0					
ANR	748697	ArrayIndexing	mset [ j ] . me [ i ]		748166	0					
ANR	748698	MemberAccess	mset [ j ] . me		748166	0					
ANR	748699	ArrayIndexing	mset [ j ]		748166	0					
ANR	748700	Identifier	mset		748166	0					
ANR	748701	Identifier	j		748166	1					
ANR	748702	Identifier	me		748166	1					
ANR	748703	Identifier	i		748166	1					
ANR	748704	Identifier	mp		748166	1					
ANR	748705	Identifier	cont_level		748166	1					
ANR	748706	PrimaryExpression	0		748166	1					
ANR	748707	CompoundStatement		79:42:2006:2006	748166	1					
ANR	748708	ExpressionStatement	i ++	1291:4:30521:30524	748166	0	True				
ANR	748709	PostIncDecOperationExpression	i ++		748166	0					
ANR	748710	Identifier	i		748166	0					
ANR	748711	IncDec	++		748166	1					
ANR	748712	ContinueStatement	continue ;	1292:4:30530:30538	748166	1	True				
ANR	748713	ExpressionStatement	"i = set_text_binary ( ms , mset [ j ] . me , mset [ j ] . count , i )"	1294:3:30548:30601	748166	1	True				
ANR	748714	AssignmentExpression	"i = set_text_binary ( ms , mset [ j ] . me , mset [ j ] . count , i )"		748166	0		=			
ANR	748715	Identifier	i		748166	0					
ANR	748716	CallExpression	"set_text_binary ( ms , mset [ j ] . me , mset [ j ] . count , i )"		748166	1					
ANR	748717	Callee	set_text_binary		748166	0					
ANR	748718	Identifier	set_text_binary		748166	0					
ANR	748719	ArgumentList	ms		748166	1					
ANR	748720	Argument	ms		748166	0					
ANR	748721	Identifier	ms		748166	0					
ANR	748722	Argument	mset [ j ] . me		748166	1					
ANR	748723	MemberAccess	mset [ j ] . me		748166	0					
ANR	748724	ArrayIndexing	mset [ j ]		748166	0					
ANR	748725	Identifier	mset		748166	0					
ANR	748726	Identifier	j		748166	1					
ANR	748727	Identifier	me		748166	1					
ANR	748728	Argument	mset [ j ] . count		748166	2					
ANR	748729	MemberAccess	mset [ j ] . count		748166	0					
ANR	748730	ArrayIndexing	mset [ j ]		748166	0					
ANR	748731	Identifier	mset		748166	0					
ANR	748732	Identifier	j		748166	1					
ANR	748733	Identifier	count		748166	1					
ANR	748734	Argument	i		748166	3					
ANR	748735	Identifier	i		748166	0					
ANR	748736	ExpressionStatement	"qsort ( mset [ j ] . me , mset [ j ] . count , sizeof ( * mset [ j ] . me ) , apprentice_sort )"	1296:2:30609:30685	748166	1	True				
ANR	748737	CallExpression	"qsort ( mset [ j ] . me , mset [ j ] . count , sizeof ( * mset [ j ] . me ) , apprentice_sort )"		748166	0					
ANR	748738	Callee	qsort		748166	0					
ANR	748739	Identifier	qsort		748166	0					
ANR	748740	ArgumentList	mset [ j ] . me		748166	1					
ANR	748741	Argument	mset [ j ] . me		748166	0					
ANR	748742	MemberAccess	mset [ j ] . me		748166	0					
ANR	748743	ArrayIndexing	mset [ j ]		748166	0					
ANR	748744	Identifier	mset		748166	0					
ANR	748745	Identifier	j		748166	1					
ANR	748746	Identifier	me		748166	1					
ANR	748747	Argument	mset [ j ] . count		748166	1					
ANR	748748	MemberAccess	mset [ j ] . count		748166	0					
ANR	748749	ArrayIndexing	mset [ j ]		748166	0					
ANR	748750	Identifier	mset		748166	0					
ANR	748751	Identifier	j		748166	1					
ANR	748752	Identifier	count		748166	1					
ANR	748753	Argument	sizeof ( * mset [ j ] . me )		748166	2					
ANR	748754	SizeofExpression	sizeof ( * mset [ j ] . me )		748166	0					
ANR	748755	Sizeof	sizeof		748166	0					
ANR	748756	UnaryOperationExpression	* mset [ j ] . me		748166	1					
ANR	748757	UnaryOperator	*		748166	0					
ANR	748758	MemberAccess	mset [ j ] . me		748166	1					
ANR	748759	ArrayIndexing	mset [ j ]		748166	0					
ANR	748760	Identifier	mset		748166	0					
ANR	748761	Identifier	j		748166	1					
ANR	748762	Identifier	me		748166	1					
ANR	748763	Argument	apprentice_sort		748166	3					
ANR	748764	Identifier	apprentice_sort		748166	0					
ANR	748765	ExpressionStatement	"set_last_default ( ms , mset [ j ] . me , mset [ j ] . count )"	1303:2:30778:30825	748166	2	True				
ANR	748766	CallExpression	"set_last_default ( ms , mset [ j ] . me , mset [ j ] . count )"		748166	0					
ANR	748767	Callee	set_last_default		748166	0					
ANR	748768	Identifier	set_last_default		748166	0					
ANR	748769	ArgumentList	ms		748166	1					
ANR	748770	Argument	ms		748166	0					
ANR	748771	Identifier	ms		748166	0					
ANR	748772	Argument	mset [ j ] . me		748166	1					
ANR	748773	MemberAccess	mset [ j ] . me		748166	0					
ANR	748774	ArrayIndexing	mset [ j ]		748166	0					
ANR	748775	Identifier	mset		748166	0					
ANR	748776	Identifier	j		748166	1					
ANR	748777	Identifier	me		748166	1					
ANR	748778	Argument	mset [ j ] . count		748166	2					
ANR	748779	MemberAccess	mset [ j ] . count		748166	0					
ANR	748780	ArrayIndexing	mset [ j ]		748166	0					
ANR	748781	Identifier	mset		748166	0					
ANR	748782	Identifier	j		748166	1					
ANR	748783	Identifier	count		748166	1					
ANR	748784	IfStatement	"if ( coalesce_entries ( ms , mset [ j ] . me , mset [ j ] . count , & map -> magic [ j ] , & map -> nmagic [ j ] ) == - 1 )"		748166	3					
ANR	748785	Condition	"coalesce_entries ( ms , mset [ j ] . me , mset [ j ] . count , & map -> magic [ j ] , & map -> nmagic [ j ] ) == - 1"	1306:6:30885:30976	748166	0	True				
ANR	748786	EqualityExpression	"coalesce_entries ( ms , mset [ j ] . me , mset [ j ] . count , & map -> magic [ j ] , & map -> nmagic [ j ] ) == - 1"		748166	0		==			
ANR	748787	CallExpression	"coalesce_entries ( ms , mset [ j ] . me , mset [ j ] . count , & map -> magic [ j ] , & map -> nmagic [ j ] )"		748166	0					
ANR	748788	Callee	coalesce_entries		748166	0					
ANR	748789	Identifier	coalesce_entries		748166	0					
ANR	748790	ArgumentList	ms		748166	1					
ANR	748791	Argument	ms		748166	0					
ANR	748792	Identifier	ms		748166	0					
ANR	748793	Argument	mset [ j ] . me		748166	1					
ANR	748794	MemberAccess	mset [ j ] . me		748166	0					
ANR	748795	ArrayIndexing	mset [ j ]		748166	0					
ANR	748796	Identifier	mset		748166	0					
ANR	748797	Identifier	j		748166	1					
ANR	748798	Identifier	me		748166	1					
ANR	748799	Argument	mset [ j ] . count		748166	2					
ANR	748800	MemberAccess	mset [ j ] . count		748166	0					
ANR	748801	ArrayIndexing	mset [ j ]		748166	0					
ANR	748802	Identifier	mset		748166	0					
ANR	748803	Identifier	j		748166	1					
ANR	748804	Identifier	count		748166	1					
ANR	748805	Argument	& map -> magic [ j ]		748166	3					
ANR	748806	UnaryOperationExpression	& map -> magic [ j ]		748166	0					
ANR	748807	UnaryOperator	&		748166	0					
ANR	748808	ArrayIndexing	map -> magic [ j ]		748166	1					
ANR	748809	PtrMemberAccess	map -> magic		748166	0					
ANR	748810	Identifier	map		748166	0					
ANR	748811	Identifier	magic		748166	1					
ANR	748812	Identifier	j		748166	1					
ANR	748813	Argument	& map -> nmagic [ j ]		748166	4					
ANR	748814	UnaryOperationExpression	& map -> nmagic [ j ]		748166	0					
ANR	748815	UnaryOperator	&		748166	0					
ANR	748816	ArrayIndexing	map -> nmagic [ j ]		748166	1					
ANR	748817	PtrMemberAccess	map -> nmagic		748166	0					
ANR	748818	Identifier	map		748166	0					
ANR	748819	Identifier	nmagic		748166	1					
ANR	748820	Identifier	j		748166	1					
ANR	748821	UnaryOperationExpression	- 1		748166	1					
ANR	748822	UnaryOperator	-		748166	0					
ANR	748823	PrimaryExpression	1		748166	1					
ANR	748824	CompoundStatement		96:46:2470:2470	748166	1					
ANR	748825	ExpressionStatement	errs ++	1308:3:30984:30990	748166	0	True				
ANR	748826	PostIncDecOperationExpression	errs ++		748166	0					
ANR	748827	Identifier	errs		748166	0					
ANR	748828	IncDec	++		748166	1					
ANR	748829	GotoStatement	goto out ;	1309:3:30995:31003	748166	1	True				
ANR	748830	Identifier	out		748166	0					
ANR	748831	Label	out :	1313:0:31013:31016	748166	42	True				
ANR	748832	Identifier	out		748166	0					
ANR	748833	ForStatement	for ( j = 0 ; j < MAGIC_SETS ; j ++ )		748166	43					
ANR	748834	ForInit	j = 0 ;	1314:6:31024:31029	748166	0	True				
ANR	748835	AssignmentExpression	j = 0		748166	0		=			
ANR	748836	Identifier	j		748166	0					
ANR	748837	PrimaryExpression	0		748166	1					
ANR	748838	Condition	j < MAGIC_SETS	1314:13:31031:31044	748166	1	True				
ANR	748839	RelationalExpression	j < MAGIC_SETS		748166	0		<			
ANR	748840	Identifier	j		748166	0					
ANR	748841	Identifier	MAGIC_SETS		748166	1					
ANR	748842	PostIncDecOperationExpression	j ++	1314:29:31047:31049	748166	2	True				
ANR	748843	Identifier	j		748166	0					
ANR	748844	IncDec	++		748166	1					
ANR	748845	ExpressionStatement	"magic_entry_free ( mset [ j ] . me , mset [ j ] . count )"	1315:2:31054:31097	748166	3	True				
ANR	748846	CallExpression	"magic_entry_free ( mset [ j ] . me , mset [ j ] . count )"		748166	0					
ANR	748847	Callee	magic_entry_free		748166	0					
ANR	748848	Identifier	magic_entry_free		748166	0					
ANR	748849	ArgumentList	mset [ j ] . me		748166	1					
ANR	748850	Argument	mset [ j ] . me		748166	0					
ANR	748851	MemberAccess	mset [ j ] . me		748166	0					
ANR	748852	ArrayIndexing	mset [ j ]		748166	0					
ANR	748853	Identifier	mset		748166	0					
ANR	748854	Identifier	j		748166	1					
ANR	748855	Identifier	me		748166	1					
ANR	748856	Argument	mset [ j ] . count		748166	1					
ANR	748857	MemberAccess	mset [ j ] . count		748166	0					
ANR	748858	ArrayIndexing	mset [ j ]		748166	0					
ANR	748859	Identifier	mset		748166	0					
ANR	748860	Identifier	j		748166	1					
ANR	748861	Identifier	count		748166	1					
ANR	748862	IfStatement	if ( errs )		748166	44					
ANR	748863	Condition	errs	1317:5:31105:31108	748166	0	True				
ANR	748864	Identifier	errs		748166	0					
ANR	748865	CompoundStatement		106:11:2602:2602	748166	1					
ANR	748866	ExpressionStatement	apprentice_unmap ( map )	1318:2:31115:31136	748166	0	True				
ANR	748867	CallExpression	apprentice_unmap ( map )		748166	0					
ANR	748868	Callee	apprentice_unmap		748166	0					
ANR	748869	Identifier	apprentice_unmap		748166	0					
ANR	748870	ArgumentList	map		748166	1					
ANR	748871	Argument	map		748166	0					
ANR	748872	Identifier	map		748166	0					
ANR	748873	ReturnStatement	return NULL ;	1319:2:31140:31151	748166	1	True				
ANR	748874	Identifier	NULL		748166	0					
ANR	748875	ReturnStatement	return map ;	1321:1:31157:31167	748166	45	True				
ANR	748876	Identifier	map		748166	0					
ANR	748877	ReturnType	struct magic_map *		748166	1					
ANR	748878	Identifier	apprentice_load		748166	2					
ANR	748879	ParameterList	"struct magic_set * ms , const char * fn , int action"		748166	3					
ANR	748880	Parameter	struct magic_set * ms	1211:16:28458:28477	748166	0	True				
ANR	748881	ParameterType	struct magic_set *		748166	0					
ANR	748882	Identifier	ms		748166	1					
ANR	748883	Parameter	const char * fn	1211:38:28480:28493	748166	1	True				
ANR	748884	ParameterType	const char *		748166	0					
ANR	748885	Identifier	fn		748166	1					
ANR	748886	Parameter	int action	1211:54:28496:28505	748166	2	True				
ANR	748887	ParameterType	int		748166	0					
ANR	748888	Identifier	action		748166	1					
ANR	748889	CFGEntryNode	ENTRY		748166		True				
ANR	748890	CFGExitNode	EXIT		748166		True				
ANR	748891	Symbol	errs		748166						
ANR	748892	Symbol	* * * mset		748166						
ANR	748893	Symbol	MAGIC_SETS		748166						
ANR	748894	Symbol	* map		748166						
ANR	748895	Symbol	* filearr		748166						
ANR	748896	Symbol	st . st_mode		748166						
ANR	748897	Symbol	& st		748166						
ANR	748898	Symbol	FILE_CHECK		748166						
ANR	748899	Symbol	dir		748166						
ANR	748900	Symbol	usg_hdr		748166						
ANR	748901	Symbol	strlen		748166						
ANR	748902	Symbol	mset [ j ] . me [ i ] . mp		748166						
ANR	748903	Symbol	action		748166						
ANR	748904	Symbol	map -> nmagic		748166						
ANR	748905	Symbol	* * mset		748166						
ANR	748906	Symbol	* * j		748166						
ANR	748907	Symbol	& errs		748166						
ANR	748908	Symbol	* * i		748166						
ANR	748909	Symbol	maxfiles		748166						
ANR	748910	Symbol	NULL		748166						
ANR	748911	Symbol	php_sys_stat		748166						
ANR	748912	Symbol	ms		748166						
ANR	748913	Symbol	* mset		748166						
ANR	748914	Symbol	stderr		748166						
ANR	748915	Symbol	* * * j		748166						
ANR	748916	Symbol	files		748166						
ANR	748917	Symbol	mlen		748166						
ANR	748918	Symbol	ms -> flags		748166						
ANR	748919	Symbol	mset [ j ] . count		748166						
ANR	748920	Symbol	apprentice_sort		748166						
ANR	748921	Symbol	coalesce_entries		748166						
ANR	748922	Symbol	mset [ j ] . me [ i ] . mp -> cont_level		748166						
ANR	748923	Symbol	zend_stat		748166						
ANR	748924	Symbol	fn		748166						
ANR	748925	Symbol	* mset [ j ] . me [ i ] . mp		748166						
ANR	748926	Symbol	php_stream_readdir		748166						
ANR	748927	Symbol	cmpstrp		748166						
ANR	748928	Symbol	php_stream_opendir		748166						
ANR	748929	Symbol	* ms		748166						
ANR	748930	Symbol	set_text_binary		748166						
ANR	748931	Symbol	* * mset [ j ] . me		748166						
ANR	748932	Symbol	estrndup		748166						
ANR	748933	Symbol	map -> magic		748166						
ANR	748934	Symbol	* mset [ j ] . me		748166						
ANR	748935	Symbol	map		748166						
ANR	748936	Symbol	snprintf		748166						
ANR	748937	Symbol	st		748166						
ANR	748938	Symbol	d		748166						
ANR	748939	Symbol	mset		748166						
ANR	748940	Symbol	i		748166						
ANR	748941	Symbol	j		748166						
ANR	748942	Symbol	& d		748166						
ANR	748943	Symbol	filearr		748166						
ANR	748944	Symbol	mflen		748166						
ANR	748945	Symbol	S_ISREG		748166						
ANR	748946	Symbol	* i		748166						
ANR	748947	Symbol	mfn		748166						
ANR	748948	Symbol	REPORT_ERRORS		748166						
ANR	748949	Symbol	* j		748166						
ANR	748950	Symbol	MAGIC_CHECK		748166						
ANR	748951	Symbol	S_ISDIR		748166						
ANR	748952	Symbol	d . d_name		748166						
ANR	748953	Symbol	mset [ j ] . me		748166						
ANR	748954	Function	file_signextend	1327:10:31246:32718							
ANR	748955	FunctionDef	"file_signextend (struct magic_set * ms , struct magic * m , uint64_t v)"		748954	0					
ANR	748956	CompoundStatement		1329:0:31322:32718	748954	0					
ANR	748957	IfStatement	if ( ! ( m -> flag & UNSIGNED ) )		748954	0					
ANR	748958	Condition	! ( m -> flag & UNSIGNED )	1330:5:31329:31349	748954	0	True				
ANR	748959	UnaryOperationExpression	! ( m -> flag & UNSIGNED )		748954	0					
ANR	748960	UnaryOperator	!		748954	0					
ANR	748961	BitAndExpression	m -> flag & UNSIGNED		748954	1		&			
ANR	748962	PtrMemberAccess	m -> flag		748954	0					
ANR	748963	Identifier	m		748954	0					
ANR	748964	Identifier	flag		748954	1					
ANR	748965	Identifier	UNSIGNED		748954	1					
ANR	748966	CompoundStatement		2:28:29:29	748954	1					
ANR	748967	SwitchStatement	switch ( m -> type )		748954	0					
ANR	748968	Condition	m -> type	1331:9:31363:31369	748954	0	True				
ANR	748969	PtrMemberAccess	m -> type		748954	0					
ANR	748970	Identifier	m		748954	0					
ANR	748971	Identifier	type		748954	1					
ANR	748972	CompoundStatement		3:18:49:49	748954	1					
ANR	748973	Label	case FILE_BYTE :	1337:2:31525:31539	748954	0	True				
ANR	748974	Identifier	FILE_BYTE		748954	0					
ANR	748975	ExpressionStatement	v = ( signed char ) v	1338:3:31544:31563	748954	1	True				
ANR	748976	AssignmentExpression	v = ( signed char ) v		748954	0		=			
ANR	748977	Identifier	v		748954	0					
ANR	748978	CastExpression	( signed char ) v		748954	1					
ANR	748979	CastTarget	signed char		748954	0					
ANR	748980	Identifier	v		748954	1					
ANR	748981	BreakStatement	break ;	1339:3:31568:31573	748954	2	True				
ANR	748982	Label	case FILE_SHORT :	1340:2:31577:31592	748954	3	True				
ANR	748983	Identifier	FILE_SHORT		748954	0					
ANR	748984	Label	case FILE_BESHORT :	1341:2:31596:31613	748954	4	True				
ANR	748985	Identifier	FILE_BESHORT		748954	0					
ANR	748986	Label	case FILE_LESHORT :	1342:2:31617:31634	748954	5	True				
ANR	748987	Identifier	FILE_LESHORT		748954	0					
ANR	748988	ExpressionStatement	v = ( short ) v	1343:3:31639:31652	748954	6	True				
ANR	748989	AssignmentExpression	v = ( short ) v		748954	0		=			
ANR	748990	Identifier	v		748954	0					
ANR	748991	CastExpression	( short ) v		748954	1					
ANR	748992	CastTarget	short		748954	0					
ANR	748993	Identifier	v		748954	1					
ANR	748994	BreakStatement	break ;	1344:3:31657:31662	748954	7	True				
ANR	748995	Label	case FILE_DATE :	1345:2:31666:31680	748954	8	True				
ANR	748996	Identifier	FILE_DATE		748954	0					
ANR	748997	Label	case FILE_BEDATE :	1346:2:31684:31700	748954	9	True				
ANR	748998	Identifier	FILE_BEDATE		748954	0					
ANR	748999	Label	case FILE_LEDATE :	1347:2:31704:31720	748954	10	True				
ANR	749000	Identifier	FILE_LEDATE		748954	0					
ANR	749001	Label	case FILE_MEDATE :	1348:2:31724:31740	748954	11	True				
ANR	749002	Identifier	FILE_MEDATE		748954	0					
ANR	749003	Label	case FILE_LDATE :	1349:2:31744:31759	748954	12	True				
ANR	749004	Identifier	FILE_LDATE		748954	0					
ANR	749005	Label	case FILE_BELDATE :	1350:2:31763:31780	748954	13	True				
ANR	749006	Identifier	FILE_BELDATE		748954	0					
ANR	749007	Label	case FILE_LELDATE :	1351:2:31784:31801	748954	14	True				
ANR	749008	Identifier	FILE_LELDATE		748954	0					
ANR	749009	Label	case FILE_MELDATE :	1352:2:31805:31822	748954	15	True				
ANR	749010	Identifier	FILE_MELDATE		748954	0					
ANR	749011	Label	case FILE_LONG :	1353:2:31826:31840	748954	16	True				
ANR	749012	Identifier	FILE_LONG		748954	0					
ANR	749013	Label	case FILE_BELONG :	1354:2:31844:31860	748954	17	True				
ANR	749014	Identifier	FILE_BELONG		748954	0					
ANR	749015	Label	case FILE_LELONG :	1355:2:31864:31880	748954	18	True				
ANR	749016	Identifier	FILE_LELONG		748954	0					
ANR	749017	Label	case FILE_MELONG :	1356:2:31884:31900	748954	19	True				
ANR	749018	Identifier	FILE_MELONG		748954	0					
ANR	749019	Label	case FILE_FLOAT :	1357:2:31904:31919	748954	20	True				
ANR	749020	Identifier	FILE_FLOAT		748954	0					
ANR	749021	Label	case FILE_BEFLOAT :	1358:2:31923:31940	748954	21	True				
ANR	749022	Identifier	FILE_BEFLOAT		748954	0					
ANR	749023	Label	case FILE_LEFLOAT :	1359:2:31944:31961	748954	22	True				
ANR	749024	Identifier	FILE_LEFLOAT		748954	0					
ANR	749025	ExpressionStatement	v = ( int32_t ) v	1360:3:31966:31981	748954	23	True				
ANR	749026	AssignmentExpression	v = ( int32_t ) v		748954	0		=			
ANR	749027	Identifier	v		748954	0					
ANR	749028	CastExpression	( int32_t ) v		748954	1					
ANR	749029	CastTarget	int32_t		748954	0					
ANR	749030	Identifier	v		748954	1					
ANR	749031	BreakStatement	break ;	1361:3:31986:31991	748954	24	True				
ANR	749032	Label	case FILE_QUAD :	1362:2:31995:32009	748954	25	True				
ANR	749033	Identifier	FILE_QUAD		748954	0					
ANR	749034	Label	case FILE_BEQUAD :	1363:2:32013:32029	748954	26	True				
ANR	749035	Identifier	FILE_BEQUAD		748954	0					
ANR	749036	Label	case FILE_LEQUAD :	1364:2:32033:32049	748954	27	True				
ANR	749037	Identifier	FILE_LEQUAD		748954	0					
ANR	749038	Label	case FILE_QDATE :	1365:2:32053:32068	748954	28	True				
ANR	749039	Identifier	FILE_QDATE		748954	0					
ANR	749040	Label	case FILE_QLDATE :	1366:2:32072:32088	748954	29	True				
ANR	749041	Identifier	FILE_QLDATE		748954	0					
ANR	749042	Label	case FILE_QWDATE :	1367:2:32092:32108	748954	30	True				
ANR	749043	Identifier	FILE_QWDATE		748954	0					
ANR	749044	Label	case FILE_BEQDATE :	1368:2:32112:32129	748954	31	True				
ANR	749045	Identifier	FILE_BEQDATE		748954	0					
ANR	749046	Label	case FILE_BEQLDATE :	1369:2:32133:32151	748954	32	True				
ANR	749047	Identifier	FILE_BEQLDATE		748954	0					
ANR	749048	Label	case FILE_BEQWDATE :	1370:2:32155:32173	748954	33	True				
ANR	749049	Identifier	FILE_BEQWDATE		748954	0					
ANR	749050	Label	case FILE_LEQDATE :	1371:2:32177:32194	748954	34	True				
ANR	749051	Identifier	FILE_LEQDATE		748954	0					
ANR	749052	Label	case FILE_LEQLDATE :	1372:2:32198:32216	748954	35	True				
ANR	749053	Identifier	FILE_LEQLDATE		748954	0					
ANR	749054	Label	case FILE_LEQWDATE :	1373:2:32220:32238	748954	36	True				
ANR	749055	Identifier	FILE_LEQWDATE		748954	0					
ANR	749056	Label	case FILE_DOUBLE :	1374:2:32242:32258	748954	37	True				
ANR	749057	Identifier	FILE_DOUBLE		748954	0					
ANR	749058	Label	case FILE_BEDOUBLE :	1375:2:32262:32280	748954	38	True				
ANR	749059	Identifier	FILE_BEDOUBLE		748954	0					
ANR	749060	Label	case FILE_LEDOUBLE :	1376:2:32284:32302	748954	39	True				
ANR	749061	Identifier	FILE_LEDOUBLE		748954	0					
ANR	749062	ExpressionStatement	v = ( int64_t ) v	1377:3:32307:32322	748954	40	True				
ANR	749063	AssignmentExpression	v = ( int64_t ) v		748954	0		=			
ANR	749064	Identifier	v		748954	0					
ANR	749065	CastExpression	( int64_t ) v		748954	1					
ANR	749066	CastTarget	int64_t		748954	0					
ANR	749067	Identifier	v		748954	1					
ANR	749068	BreakStatement	break ;	1378:3:32327:32332	748954	41	True				
ANR	749069	Label	case FILE_STRING :	1379:2:32336:32352	748954	42	True				
ANR	749070	Identifier	FILE_STRING		748954	0					
ANR	749071	Label	case FILE_PSTRING :	1380:2:32356:32373	748954	43	True				
ANR	749072	Identifier	FILE_PSTRING		748954	0					
ANR	749073	Label	case FILE_BESTRING16 :	1381:2:32377:32397	748954	44	True				
ANR	749074	Identifier	FILE_BESTRING16		748954	0					
ANR	749075	Label	case FILE_LESTRING16 :	1382:2:32401:32421	748954	45	True				
ANR	749076	Identifier	FILE_LESTRING16		748954	0					
ANR	749077	Label	case FILE_REGEX :	1383:2:32425:32440	748954	46	True				
ANR	749078	Identifier	FILE_REGEX		748954	0					
ANR	749079	Label	case FILE_SEARCH :	1384:2:32444:32460	748954	47	True				
ANR	749080	Identifier	FILE_SEARCH		748954	0					
ANR	749081	Label	case FILE_DEFAULT :	1385:2:32464:32481	748954	48	True				
ANR	749082	Identifier	FILE_DEFAULT		748954	0					
ANR	749083	Label	case FILE_INDIRECT :	1386:2:32485:32503	748954	49	True				
ANR	749084	Identifier	FILE_INDIRECT		748954	0					
ANR	749085	Label	case FILE_NAME :	1387:2:32507:32521	748954	50	True				
ANR	749086	Identifier	FILE_NAME		748954	0					
ANR	749087	Label	case FILE_USE :	1388:2:32525:32538	748954	51	True				
ANR	749088	Identifier	FILE_USE		748954	0					
ANR	749089	Label	case FILE_CLEAR :	1389:2:32542:32557	748954	52	True				
ANR	749090	Identifier	FILE_CLEAR		748954	0					
ANR	749091	BreakStatement	break ;	1390:3:32562:32567	748954	53	True				
ANR	749092	Label	default :	1391:2:32571:32578	748954	54	True				
ANR	749093	Identifier	default		748954	0					
ANR	749094	IfStatement	if ( ms -> flags & MAGIC_CHECK )		748954	55					
ANR	749095	Condition	ms -> flags & MAGIC_CHECK	1392:7:32587:32609	748954	0	True				
ANR	749096	BitAndExpression	ms -> flags & MAGIC_CHECK		748954	0		&			
ANR	749097	PtrMemberAccess	ms -> flags		748954	0					
ANR	749098	Identifier	ms		748954	0					
ANR	749099	Identifier	flags		748954	1					
ANR	749100	Identifier	MAGIC_CHECK		748954	1					
ANR	749101	ExpressionStatement	"file_magwarn ( ms , ""cannot happen: m->type=%d\\n"" , m -> type )"	1393:7:32619:32683	748954	1	True				
ANR	749102	CallExpression	"file_magwarn ( ms , ""cannot happen: m->type=%d\\n"" , m -> type )"		748954	0					
ANR	749103	Callee	file_magwarn		748954	0					
ANR	749104	Identifier	file_magwarn		748954	0					
ANR	749105	ArgumentList	ms		748954	1					
ANR	749106	Argument	ms		748954	0					
ANR	749107	Identifier	ms		748954	0					
ANR	749108	Argument	"""cannot happen: m->type=%d\\n"""		748954	1					
ANR	749109	PrimaryExpression	"""cannot happen: m->type=%d\\n"""		748954	0					
ANR	749110	Argument	m -> type		748954	2					
ANR	749111	PtrMemberAccess	m -> type		748954	0					
ANR	749112	Identifier	m		748954	0					
ANR	749113	Identifier	type		748954	1					
ANR	749114	ReturnStatement	return ~0U ;	1395:3:32688:32698	748954	56	True				
ANR	749115	Identifier	~0U		748954	0					
ANR	749116	ReturnStatement	return v ;	1398:1:32708:32716	748954	1	True				
ANR	749117	Identifier	v		748954	0					
ANR	749118	ReturnType	uint64_t		748954	1					
ANR	749119	Identifier	file_signextend		748954	2					
ANR	749120	ParameterList	"struct magic_set * ms , struct magic * m , uint64_t v"		748954	3					
ANR	749121	Parameter	struct magic_set * ms	1328:16:31271:31290	748954	0	True				
ANR	749122	ParameterType	struct magic_set *		748954	0					
ANR	749123	Identifier	ms		748954	1					
ANR	749124	Parameter	struct magic * m	1328:38:31293:31307	748954	1	True				
ANR	749125	ParameterType	struct magic *		748954	0					
ANR	749126	Identifier	m		748954	1					
ANR	749127	Parameter	uint64_t v	1328:55:31310:31319	748954	2	True				
ANR	749128	ParameterType	uint64_t		748954	0					
ANR	749129	Identifier	v		748954	1					
ANR	749130	CFGEntryNode	ENTRY		748954		True				
ANR	749131	CFGExitNode	EXIT		748954		True				
ANR	749132	Symbol	m -> type		748954						
ANR	749133	Symbol	~0U		748954						
ANR	749134	Symbol	ms		748954						
ANR	749135	Symbol	v		748954						
ANR	749136	Symbol	UNSIGNED		748954						
ANR	749137	Symbol	* m		748954						
ANR	749138	Symbol	m -> flag		748954						
ANR	749139	Symbol	MAGIC_CHECK		748954						
ANR	749140	Symbol	ms -> flags		748954						
ANR	749141	Symbol	m		748954						
ANR	749142	Symbol	* ms		748954						
ANR	749143	Function	string_modifier_check	1401:8:32729:34201							
ANR	749144	FunctionDef	"string_modifier_check (struct magic_set * ms , struct magic * m)"		749143	0					
ANR	749145	CompoundStatement		1403:0:32794:34201	749143	0					
ANR	749146	IfStatement	if ( ( ms -> flags & MAGIC_CHECK ) == 0 )		749143	0					
ANR	749147	Condition	( ms -> flags & MAGIC_CHECK ) == 0	1404:5:32801:32830	749143	0	True				
ANR	749148	EqualityExpression	( ms -> flags & MAGIC_CHECK ) == 0		749143	0		==			
ANR	749149	BitAndExpression	ms -> flags & MAGIC_CHECK		749143	0		&			
ANR	749150	PtrMemberAccess	ms -> flags		749143	0					
ANR	749151	Identifier	ms		749143	0					
ANR	749152	Identifier	flags		749143	1					
ANR	749153	Identifier	MAGIC_CHECK		749143	1					
ANR	749154	PrimaryExpression	0		749143	1					
ANR	749155	ReturnStatement	return 0 ;	1405:2:32835:32843	749143	1	True				
ANR	749156	PrimaryExpression	0		749143	0					
ANR	749157	IfStatement	if ( ( m -> type != FILE_REGEX || ( m -> str_flags & REGEX_LINE_COUNT ) == 0 ) && ( m -> type != FILE_PSTRING && ( m -> str_flags & PSTRING_LEN ) != 0 ) )		749143	1					
ANR	749158	Condition	( m -> type != FILE_REGEX || ( m -> str_flags & REGEX_LINE_COUNT ) == 0 ) && ( m -> type != FILE_PSTRING && ( m -> str_flags & PSTRING_LEN ) != 0 )	1407:5:32851:32986	749143	0	True				
ANR	749159	AndExpression	( m -> type != FILE_REGEX || ( m -> str_flags & REGEX_LINE_COUNT ) == 0 ) && ( m -> type != FILE_PSTRING && ( m -> str_flags & PSTRING_LEN ) != 0 )		749143	0		&&			
ANR	749160	OrExpression	m -> type != FILE_REGEX || ( m -> str_flags & REGEX_LINE_COUNT ) == 0		749143	0		||			
ANR	749161	EqualityExpression	m -> type != FILE_REGEX		749143	0		!=			
ANR	749162	PtrMemberAccess	m -> type		749143	0					
ANR	749163	Identifier	m		749143	0					
ANR	749164	Identifier	type		749143	1					
ANR	749165	Identifier	FILE_REGEX		749143	1					
ANR	749166	EqualityExpression	( m -> str_flags & REGEX_LINE_COUNT ) == 0		749143	1		==			
ANR	749167	BitAndExpression	m -> str_flags & REGEX_LINE_COUNT		749143	0		&			
ANR	749168	PtrMemberAccess	m -> str_flags		749143	0					
ANR	749169	Identifier	m		749143	0					
ANR	749170	Identifier	str_flags		749143	1					
ANR	749171	Identifier	REGEX_LINE_COUNT		749143	1					
ANR	749172	PrimaryExpression	0		749143	1					
ANR	749173	AndExpression	m -> type != FILE_PSTRING && ( m -> str_flags & PSTRING_LEN ) != 0		749143	1		&&			
ANR	749174	EqualityExpression	m -> type != FILE_PSTRING		749143	0		!=			
ANR	749175	PtrMemberAccess	m -> type		749143	0					
ANR	749176	Identifier	m		749143	0					
ANR	749177	Identifier	type		749143	1					
ANR	749178	Identifier	FILE_PSTRING		749143	1					
ANR	749179	EqualityExpression	( m -> str_flags & PSTRING_LEN ) != 0		749143	1		!=			
ANR	749180	BitAndExpression	m -> str_flags & PSTRING_LEN		749143	0		&			
ANR	749181	PtrMemberAccess	m -> str_flags		749143	0					
ANR	749182	Identifier	m		749143	0					
ANR	749183	Identifier	str_flags		749143	1					
ANR	749184	Identifier	PSTRING_LEN		749143	1					
ANR	749185	PrimaryExpression	0		749143	1					
ANR	749186	CompoundStatement		6:69:194:194	749143	1					
ANR	749187	ExpressionStatement	"file_magwarn ( ms , ""'/BHhLl' modifiers are only allowed for pascal strings\\n"" )"	1409:2:32993:33075	749143	0	True				
ANR	749188	CallExpression	"file_magwarn ( ms , ""'/BHhLl' modifiers are only allowed for pascal strings\\n"" )"		749143	0					
ANR	749189	Callee	file_magwarn		749143	0					
ANR	749190	Identifier	file_magwarn		749143	0					
ANR	749191	ArgumentList	ms		749143	1					
ANR	749192	Argument	ms		749143	0					
ANR	749193	Identifier	ms		749143	0					
ANR	749194	Argument	"""'/BHhLl' modifiers are only allowed for pascal strings\\n"""		749143	1					
ANR	749195	PrimaryExpression	"""'/BHhLl' modifiers are only allowed for pascal strings\\n"""		749143	0					
ANR	749196	ReturnStatement	return - 1 ;	1411:2:33079:33088	749143	1	True				
ANR	749197	UnaryOperationExpression	- 1		749143	0					
ANR	749198	UnaryOperator	-		749143	0					
ANR	749199	PrimaryExpression	1		749143	1					
ANR	749200	SwitchStatement	switch ( m -> type )		749143	2					
ANR	749201	Condition	m -> type	1413:9:33102:33108	749143	0	True				
ANR	749202	PtrMemberAccess	m -> type		749143	0					
ANR	749203	Identifier	m		749143	0					
ANR	749204	Identifier	type		749143	1					
ANR	749205	CompoundStatement		11:18:316:316	749143	1					
ANR	749206	Label	case FILE_BESTRING16 :	1414:1:33114:33134	749143	0	True				
ANR	749207	Identifier	FILE_BESTRING16		749143	0					
ANR	749208	Label	case FILE_LESTRING16 :	1415:1:33137:33157	749143	1	True				
ANR	749209	Identifier	FILE_LESTRING16		749143	0					
ANR	749210	IfStatement	if ( m -> str_flags != 0 )		749143	2					
ANR	749211	Condition	m -> str_flags != 0	1416:6:33165:33181	749143	0	True				
ANR	749212	EqualityExpression	m -> str_flags != 0		749143	0		!=			
ANR	749213	PtrMemberAccess	m -> str_flags		749143	0					
ANR	749214	Identifier	m		749143	0					
ANR	749215	Identifier	str_flags		749143	1					
ANR	749216	PrimaryExpression	0		749143	1					
ANR	749217	CompoundStatement		14:25:389:389	749143	1					
ANR	749218	ExpressionStatement	"file_magwarn ( ms , ""no modifiers allowed for 16-bit strings\\n"" )"	1417:3:33189:33257	749143	0	True				
ANR	749219	CallExpression	"file_magwarn ( ms , ""no modifiers allowed for 16-bit strings\\n"" )"		749143	0					
ANR	749220	Callee	file_magwarn		749143	0					
ANR	749221	Identifier	file_magwarn		749143	0					
ANR	749222	ArgumentList	ms		749143	1					
ANR	749223	Argument	ms		749143	0					
ANR	749224	Identifier	ms		749143	0					
ANR	749225	Argument	"""no modifiers allowed for 16-bit strings\\n"""		749143	1					
ANR	749226	PrimaryExpression	"""no modifiers allowed for 16-bit strings\\n"""		749143	0					
ANR	749227	ReturnStatement	return - 1 ;	1419:3:33262:33271	749143	1	True				
ANR	749228	UnaryOperationExpression	- 1		749143	0					
ANR	749229	UnaryOperator	-		749143	0					
ANR	749230	PrimaryExpression	1		749143	1					
ANR	749231	BreakStatement	break ;	1421:2:33279:33284	749143	3	True				
ANR	749232	Label	case FILE_STRING :	1422:1:33287:33303	749143	4	True				
ANR	749233	Identifier	FILE_STRING		749143	0					
ANR	749234	Label	case FILE_PSTRING :	1423:1:33306:33323	749143	5	True				
ANR	749235	Identifier	FILE_PSTRING		749143	0					
ANR	749236	IfStatement	if ( ( m -> str_flags & REGEX_OFFSET_START ) != 0 )		749143	6					
ANR	749237	Condition	( m -> str_flags & REGEX_OFFSET_START ) != 0	1424:6:33331:33370	749143	0	True				
ANR	749238	EqualityExpression	( m -> str_flags & REGEX_OFFSET_START ) != 0		749143	0		!=			
ANR	749239	BitAndExpression	m -> str_flags & REGEX_OFFSET_START		749143	0		&			
ANR	749240	PtrMemberAccess	m -> str_flags		749143	0					
ANR	749241	Identifier	m		749143	0					
ANR	749242	Identifier	str_flags		749143	1					
ANR	749243	Identifier	REGEX_OFFSET_START		749143	1					
ANR	749244	PrimaryExpression	0		749143	1					
ANR	749245	CompoundStatement		22:48:578:578	749143	1					
ANR	749246	ExpressionStatement	"file_magwarn ( ms , ""'/%c' only allowed on regex and search\\n"" , CHAR_REGEX_OFFSET_START )"	1425:3:33378:33477	749143	0	True				
ANR	749247	CallExpression	"file_magwarn ( ms , ""'/%c' only allowed on regex and search\\n"" , CHAR_REGEX_OFFSET_START )"		749143	0					
ANR	749248	Callee	file_magwarn		749143	0					
ANR	749249	Identifier	file_magwarn		749143	0					
ANR	749250	ArgumentList	ms		749143	1					
ANR	749251	Argument	ms		749143	0					
ANR	749252	Identifier	ms		749143	0					
ANR	749253	Argument	"""'/%c' only allowed on regex and search\\n"""		749143	1					
ANR	749254	PrimaryExpression	"""'/%c' only allowed on regex and search\\n"""		749143	0					
ANR	749255	Argument	CHAR_REGEX_OFFSET_START		749143	2					
ANR	749256	Identifier	CHAR_REGEX_OFFSET_START		749143	0					
ANR	749257	ReturnStatement	return - 1 ;	1428:3:33482:33491	749143	1	True				
ANR	749258	UnaryOperationExpression	- 1		749143	0					
ANR	749259	UnaryOperator	-		749143	0					
ANR	749260	PrimaryExpression	1		749143	1					
ANR	749261	BreakStatement	break ;	1430:2:33499:33504	749143	7	True				
ANR	749262	Label	case FILE_SEARCH :	1431:1:33507:33523	749143	8	True				
ANR	749263	Identifier	FILE_SEARCH		749143	0					
ANR	749264	IfStatement	if ( m -> str_range == 0 )		749143	9					
ANR	749265	Condition	m -> str_range == 0	1432:6:33531:33547	749143	0	True				
ANR	749266	EqualityExpression	m -> str_range == 0		749143	0		==			
ANR	749267	PtrMemberAccess	m -> str_range		749143	0					
ANR	749268	Identifier	m		749143	0					
ANR	749269	Identifier	str_range		749143	1					
ANR	749270	PrimaryExpression	0		749143	1					
ANR	749271	CompoundStatement		30:25:755:755	749143	1					
ANR	749272	ExpressionStatement	"file_magwarn ( ms , ""missing range; defaulting to %d\\n"" , STRING_DEFAULT_RANGE )"	1433:3:33555:33665	749143	0	True				
ANR	749273	CallExpression	"file_magwarn ( ms , ""missing range; defaulting to %d\\n"" , STRING_DEFAULT_RANGE )"		749143	0					
ANR	749274	Callee	file_magwarn		749143	0					
ANR	749275	Identifier	file_magwarn		749143	0					
ANR	749276	ArgumentList	ms		749143	1					
ANR	749277	Argument	ms		749143	0					
ANR	749278	Identifier	ms		749143	0					
ANR	749279	Argument	"""missing range; defaulting to %d\\n"""		749143	1					
ANR	749280	PrimaryExpression	"""missing range; defaulting to %d\\n"""		749143	0					
ANR	749281	Argument	STRING_DEFAULT_RANGE		749143	2					
ANR	749282	Identifier	STRING_DEFAULT_RANGE		749143	0					
ANR	749283	ExpressionStatement	m -> str_range = STRING_DEFAULT_RANGE	1436:3:33670:33705	749143	1	True				
ANR	749284	AssignmentExpression	m -> str_range = STRING_DEFAULT_RANGE		749143	0		=			
ANR	749285	PtrMemberAccess	m -> str_range		749143	0					
ANR	749286	Identifier	m		749143	0					
ANR	749287	Identifier	str_range		749143	1					
ANR	749288	Identifier	STRING_DEFAULT_RANGE		749143	1					
ANR	749289	ReturnStatement	return - 1 ;	1437:3:33710:33719	749143	2	True				
ANR	749290	UnaryOperationExpression	- 1		749143	0					
ANR	749291	UnaryOperator	-		749143	0					
ANR	749292	PrimaryExpression	1		749143	1					
ANR	749293	BreakStatement	break ;	1439:2:33727:33732	749143	10	True				
ANR	749294	Label	case FILE_REGEX :	1440:1:33735:33750	749143	11	True				
ANR	749295	Identifier	FILE_REGEX		749143	0					
ANR	749296	IfStatement	if ( ( m -> str_flags & STRING_COMPACT_WHITESPACE ) != 0 )		749143	12					
ANR	749297	Condition	( m -> str_flags & STRING_COMPACT_WHITESPACE ) != 0	1441:6:33758:33804	749143	0	True				
ANR	749298	EqualityExpression	( m -> str_flags & STRING_COMPACT_WHITESPACE ) != 0		749143	0		!=			
ANR	749299	BitAndExpression	m -> str_flags & STRING_COMPACT_WHITESPACE		749143	0		&			
ANR	749300	PtrMemberAccess	m -> str_flags		749143	0					
ANR	749301	Identifier	m		749143	0					
ANR	749302	Identifier	str_flags		749143	1					
ANR	749303	Identifier	STRING_COMPACT_WHITESPACE		749143	1					
ANR	749304	PrimaryExpression	0		749143	1					
ANR	749305	CompoundStatement		39:55:1012:1012	749143	1					
ANR	749306	ExpressionStatement	"file_magwarn ( ms , ""'/%c' not allowed on regex\\n"" , CHAR_COMPACT_WHITESPACE )"	1442:3:33812:33892	749143	0	True				
ANR	749307	CallExpression	"file_magwarn ( ms , ""'/%c' not allowed on regex\\n"" , CHAR_COMPACT_WHITESPACE )"		749143	0					
ANR	749308	Callee	file_magwarn		749143	0					
ANR	749309	Identifier	file_magwarn		749143	0					
ANR	749310	ArgumentList	ms		749143	1					
ANR	749311	Argument	ms		749143	0					
ANR	749312	Identifier	ms		749143	0					
ANR	749313	Argument	"""'/%c' not allowed on regex\\n"""		749143	1					
ANR	749314	PrimaryExpression	"""'/%c' not allowed on regex\\n"""		749143	0					
ANR	749315	Argument	CHAR_COMPACT_WHITESPACE		749143	2					
ANR	749316	Identifier	CHAR_COMPACT_WHITESPACE		749143	0					
ANR	749317	ReturnStatement	return - 1 ;	1444:3:33897:33906	749143	1	True				
ANR	749318	UnaryOperationExpression	- 1		749143	0					
ANR	749319	UnaryOperator	-		749143	0					
ANR	749320	PrimaryExpression	1		749143	1					
ANR	749321	IfStatement	if ( ( m -> str_flags & STRING_COMPACT_OPTIONAL_WHITESPACE ) != 0 )		749143	13					
ANR	749322	Condition	( m -> str_flags & STRING_COMPACT_OPTIONAL_WHITESPACE ) != 0	1446:6:33918:33973	749143	0	True				
ANR	749323	EqualityExpression	( m -> str_flags & STRING_COMPACT_OPTIONAL_WHITESPACE ) != 0		749143	0		!=			
ANR	749324	BitAndExpression	m -> str_flags & STRING_COMPACT_OPTIONAL_WHITESPACE		749143	0		&			
ANR	749325	PtrMemberAccess	m -> str_flags		749143	0					
ANR	749326	Identifier	m		749143	0					
ANR	749327	Identifier	str_flags		749143	1					
ANR	749328	Identifier	STRING_COMPACT_OPTIONAL_WHITESPACE		749143	1					
ANR	749329	PrimaryExpression	0		749143	1					
ANR	749330	CompoundStatement		44:64:1181:1181	749143	1					
ANR	749331	ExpressionStatement	"file_magwarn ( ms , ""'/%c' not allowed on regex\\n"" , CHAR_COMPACT_OPTIONAL_WHITESPACE )"	1447:3:33981:34070	749143	0	True				
ANR	749332	CallExpression	"file_magwarn ( ms , ""'/%c' not allowed on regex\\n"" , CHAR_COMPACT_OPTIONAL_WHITESPACE )"		749143	0					
ANR	749333	Callee	file_magwarn		749143	0					
ANR	749334	Identifier	file_magwarn		749143	0					
ANR	749335	ArgumentList	ms		749143	1					
ANR	749336	Argument	ms		749143	0					
ANR	749337	Identifier	ms		749143	0					
ANR	749338	Argument	"""'/%c' not allowed on regex\\n"""		749143	1					
ANR	749339	PrimaryExpression	"""'/%c' not allowed on regex\\n"""		749143	0					
ANR	749340	Argument	CHAR_COMPACT_OPTIONAL_WHITESPACE		749143	2					
ANR	749341	Identifier	CHAR_COMPACT_OPTIONAL_WHITESPACE		749143	0					
ANR	749342	ReturnStatement	return - 1 ;	1449:3:34075:34084	749143	1	True				
ANR	749343	UnaryOperationExpression	- 1		749143	0					
ANR	749344	UnaryOperator	-		749143	0					
ANR	749345	PrimaryExpression	1		749143	1					
ANR	749346	BreakStatement	break ;	1451:2:34092:34097	749143	14	True				
ANR	749347	Label	default :	1452:1:34100:34107	749143	15	True				
ANR	749348	Identifier	default		749143	0					
ANR	749349	ExpressionStatement	"file_magwarn ( ms , ""coding error: m->type=%d\\n"" , m -> type )"	1453:2:34111:34172	749143	16	True				
ANR	749350	CallExpression	"file_magwarn ( ms , ""coding error: m->type=%d\\n"" , m -> type )"		749143	0					
ANR	749351	Callee	file_magwarn		749143	0					
ANR	749352	Identifier	file_magwarn		749143	0					
ANR	749353	ArgumentList	ms		749143	1					
ANR	749354	Argument	ms		749143	0					
ANR	749355	Identifier	ms		749143	0					
ANR	749356	Argument	"""coding error: m->type=%d\\n"""		749143	1					
ANR	749357	PrimaryExpression	"""coding error: m->type=%d\\n"""		749143	0					
ANR	749358	Argument	m -> type		749143	2					
ANR	749359	PtrMemberAccess	m -> type		749143	0					
ANR	749360	Identifier	m		749143	0					
ANR	749361	Identifier	type		749143	1					
ANR	749362	ReturnStatement	return - 1 ;	1455:2:34176:34185	749143	17	True				
ANR	749363	UnaryOperationExpression	- 1		749143	0					
ANR	749364	UnaryOperator	-		749143	0					
ANR	749365	PrimaryExpression	1		749143	1					
ANR	749366	ReturnStatement	return 0 ;	1457:1:34191:34199	749143	3	True				
ANR	749367	PrimaryExpression	0		749143	0					
ANR	749368	ReturnType	int		749143	1					
ANR	749369	Identifier	string_modifier_check		749143	2					
ANR	749370	ParameterList	"struct magic_set * ms , struct magic * m"		749143	3					
ANR	749371	Parameter	struct magic_set * ms	1402:22:32755:32774	749143	0	True				
ANR	749372	ParameterType	struct magic_set *		749143	0					
ANR	749373	Identifier	ms		749143	1					
ANR	749374	Parameter	struct magic * m	1402:44:32777:32791	749143	1	True				
ANR	749375	ParameterType	struct magic *		749143	0					
ANR	749376	Identifier	m		749143	1					
ANR	749377	CFGEntryNode	ENTRY		749143		True				
ANR	749378	CFGExitNode	EXIT		749143		True				
ANR	749379	Symbol	FILE_REGEX		749143						
ANR	749380	Symbol	PSTRING_LEN		749143						
ANR	749381	Symbol	STRING_COMPACT_WHITESPACE		749143						
ANR	749382	Symbol	ms		749143						
ANR	749383	Symbol	REGEX_OFFSET_START		749143						
ANR	749384	Symbol	CHAR_COMPACT_OPTIONAL_WHITESPACE		749143						
ANR	749385	Symbol	m -> str_flags		749143						
ANR	749386	Symbol	FILE_PSTRING		749143						
ANR	749387	Symbol	m -> str_range		749143						
ANR	749388	Symbol	STRING_COMPACT_OPTIONAL_WHITESPACE		749143						
ANR	749389	Symbol	m		749143						
ANR	749390	Symbol	STRING_DEFAULT_RANGE		749143						
ANR	749391	Symbol	* ms		749143						
ANR	749392	Symbol	REGEX_LINE_COUNT		749143						
ANR	749393	Symbol	m -> type		749143						
ANR	749394	Symbol	* m		749143						
ANR	749395	Symbol	MAGIC_CHECK		749143						
ANR	749396	Symbol	CHAR_COMPACT_WHITESPACE		749143						
ANR	749397	Symbol	ms -> flags		749143						
ANR	749398	Symbol	CHAR_REGEX_OFFSET_START		749143						
ANR	749399	Function	get_op	1460:8:34212:34541							
ANR	749400	FunctionDef	get_op (char c)		749399	0					
ANR	749401	CompoundStatement		1462:0:34231:34541	749399	0					
ANR	749402	SwitchStatement	switch ( c )		749399	0					
ANR	749403	Condition	c	1463:9:34242:34242	749399	0	True				
ANR	749404	Identifier	c		749399	0					
ANR	749405	CompoundStatement		2:12:13:13	749399	1					
ANR	749406	Label	case '&' :	1464:1:34248:34256	749399	0	True				
ANR	749407	ReturnStatement	return FILE_OPAND ;	1465:2:34260:34277	749399	1	True				
ANR	749408	Identifier	FILE_OPAND		749399	0					
ANR	749409	Label	case '|' :	1466:1:34280:34288	749399	2	True				
ANR	749410	ReturnStatement	return FILE_OPOR ;	1467:2:34292:34308	749399	3	True				
ANR	749411	Identifier	FILE_OPOR		749399	0					
ANR	749412	Label	case '^' :	1468:1:34311:34319	749399	4	True				
ANR	749413	ReturnStatement	return FILE_OPXOR ;	1469:2:34323:34340	749399	5	True				
ANR	749414	Identifier	FILE_OPXOR		749399	0					
ANR	749415	Label	case '+' :	1470:1:34343:34351	749399	6	True				
ANR	749416	ReturnStatement	return FILE_OPADD ;	1471:2:34355:34372	749399	7	True				
ANR	749417	Identifier	FILE_OPADD		749399	0					
ANR	749418	Label	case '-' :	1472:1:34375:34383	749399	8	True				
ANR	749419	ReturnStatement	return FILE_OPMINUS ;	1473:2:34387:34406	749399	9	True				
ANR	749420	Identifier	FILE_OPMINUS		749399	0					
ANR	749421	Label	case '*' :	1474:1:34409:34417	749399	10	True				
ANR	749422	ReturnStatement	return FILE_OPMULTIPLY ;	1475:2:34421:34443	749399	11	True				
ANR	749423	Identifier	FILE_OPMULTIPLY		749399	0					
ANR	749424	Label	case '/' :	1476:1:34446:34454	749399	12	True				
ANR	749425	ReturnStatement	return FILE_OPDIVIDE ;	1477:2:34458:34478	749399	13	True				
ANR	749426	Identifier	FILE_OPDIVIDE		749399	0					
ANR	749427	Label	case '%' :	1478:1:34481:34489	749399	14	True				
ANR	749428	ReturnStatement	return FILE_OPMODULO ;	1479:2:34493:34513	749399	15	True				
ANR	749429	Identifier	FILE_OPMODULO		749399	0					
ANR	749430	Label	default :	1480:1:34516:34523	749399	16	True				
ANR	749431	Identifier	default		749399	0					
ANR	749432	ReturnStatement	return - 1 ;	1481:2:34527:34536	749399	17	True				
ANR	749433	UnaryOperationExpression	- 1		749399	0					
ANR	749434	UnaryOperator	-		749399	0					
ANR	749435	PrimaryExpression	1		749399	1					
ANR	749436	ReturnType	int		749399	1					
ANR	749437	Identifier	get_op		749399	2					
ANR	749438	ParameterList	char c		749399	3					
ANR	749439	Parameter	char c	1461:7:34223:34228	749399	0	True				
ANR	749440	ParameterType	char		749399	0					
ANR	749441	Identifier	c		749399	1					
ANR	749442	CFGEntryNode	ENTRY		749399		True				
ANR	749443	CFGExitNode	EXIT		749399		True				
ANR	749444	Symbol	c		749399						
ANR	749445	Symbol	FILE_OPOR		749399						
ANR	749446	Symbol	FILE_OPMINUS		749399						
ANR	749447	Symbol	FILE_OPMODULO		749399						
ANR	749448	Symbol	FILE_OPMULTIPLY		749399						
ANR	749449	Symbol	FILE_OPADD		749399						
ANR	749450	Symbol	FILE_OPAND		749399						
ANR	749451	Symbol	FILE_OPDIVIDE		749399						
ANR	749452	Symbol	FILE_OPXOR		749399						
ANR	749453	Function	get_cond	1486:8:34579:35044							
ANR	749454	FunctionDef	"get_cond (const char * l , const char * * t)"		749453	0					
ANR	749455	CompoundStatement		1488:0:34623:35044	749453	0					
ANR	749456	Statement	static	1489:1:34626:34631	749453	0	True				
ANR	749457	Statement	const	1489:8:34633:34637	749453	1	True				
ANR	749458	ClassDefStatement	struct cond_tbl_s { char name [ 8 ] ; size_t len ; int cond ; }	1489:14:34639:34702	749453	2	True				
ANR	749459	Identifier	cond_tbl_s		749453	0					
ANR	749460	Statement	cond_tbl	1493:3:34704:34711	749453	3	True				
ANR	749461	Statement	[	1493:11:34712:34712	749453	4	True				
ANR	749462	Statement	]	1493:12:34713:34713	749453	5	True				
ANR	749463	Statement	=	1493:14:34715:34715	749453	6	True				
ANR	749464	CompoundStatement		6:16:93:93	749453	7					
ANR	749465	CompoundStatement		7:2:97:97	749453	0					
ANR	749466	Statement	"""if"""	1494:4:34723:34726	749453	0	True				
ANR	749467	Statement	","	1494:8:34727:34727	749453	1	True				
ANR	749468	Statement	2	1494:11:34730:34730	749453	2	True				
ANR	749469	Statement	","	1494:12:34731:34731	749453	3	True				
ANR	749470	Statement	COND_IF	1494:14:34733:34739	749453	4	True				
ANR	749471	Statement	","	1494:23:34742:34742	749453	1	True				
ANR	749472	CompoundStatement		8:2:122:122	749453	2					
ANR	749473	Statement	"""elif"""	1495:4:34748:34753	749453	0	True				
ANR	749474	Statement	","	1495:10:34754:34754	749453	1	True				
ANR	749475	Statement	4	1495:12:34756:34756	749453	2	True				
ANR	749476	Statement	","	1495:13:34757:34757	749453	3	True				
ANR	749477	Statement	COND_ELIF	1495:15:34759:34767	749453	4	True				
ANR	749478	Statement	","	1495:26:34770:34770	749453	3	True				
ANR	749479	CompoundStatement		9:2:150:150	749453	4					
ANR	749480	Statement	"""else"""	1496:4:34776:34781	749453	0	True				
ANR	749481	Statement	","	1496:10:34782:34782	749453	1	True				
ANR	749482	Statement	4	1496:12:34784:34784	749453	2	True				
ANR	749483	Statement	","	1496:13:34785:34785	749453	3	True				
ANR	749484	Statement	COND_ELSE	1496:15:34787:34795	749453	4	True				
ANR	749485	Statement	","	1496:26:34798:34798	749453	5	True				
ANR	749486	CompoundStatement		10:2:178:178	749453	6					
ANR	749487	Statement	""""""	1497:4:34804:34805	749453	0	True				
ANR	749488	Statement	","	1497:6:34806:34806	749453	1	True				
ANR	749489	Statement	0	1497:9:34809:34809	749453	2	True				
ANR	749490	Statement	","	1497:10:34810:34810	749453	3	True				
ANR	749491	Statement	COND_NONE	1497:12:34812:34820	749453	4	True				
ANR	749492	Statement	","	1497:23:34823:34823	749453	7	True				
ANR	749493	ExpressionStatement		1498:2:34827:34827	749453	8	True				
ANR	749494	IdentifierDeclStatement	const struct cond_tbl_s * p ;	1499:1:34830:34856	749453	9	True				
ANR	749495	IdentifierDecl	* p		749453	0					
ANR	749496	IdentifierDeclType	const struct cond_tbl_s *		749453	0					
ANR	749497	Identifier	p		749453	1					
ANR	749498	ForStatement	for ( p = cond_tbl ; p -> len ; p ++ )		749453	10					
ANR	749499	ForInit	p = cond_tbl ;	1501:6:34865:34877	749453	0	True				
ANR	749500	AssignmentExpression	p = cond_tbl		749453	0		=			
ANR	749501	Identifier	p		749453	0					
ANR	749502	Identifier	cond_tbl		749453	1					
ANR	749503	Condition	p -> len	1501:20:34879:34884	749453	1	True				
ANR	749504	PtrMemberAccess	p -> len		749453	0					
ANR	749505	Identifier	p		749453	0					
ANR	749506	Identifier	len		749453	1					
ANR	749507	PostIncDecOperationExpression	p ++	1501:28:34887:34889	749453	2	True				
ANR	749508	Identifier	p		749453	0					
ANR	749509	IncDec	++		749453	1					
ANR	749510	CompoundStatement		14:33:268:268	749453	3					
ANR	749511	IfStatement	"if ( strncmp ( l , p -> name , p -> len ) == 0 && isspace ( ( unsigned char ) l [ p -> len ] ) )"		749453	0					
ANR	749512	Condition	"strncmp ( l , p -> name , p -> len ) == 0 && isspace ( ( unsigned char ) l [ p -> len ] )"	1502:6:34900:34974	749453	0	True				
ANR	749513	AndExpression	"strncmp ( l , p -> name , p -> len ) == 0 && isspace ( ( unsigned char ) l [ p -> len ] )"		749453	0		&&			
ANR	749514	EqualityExpression	"strncmp ( l , p -> name , p -> len ) == 0"		749453	0		==			
ANR	749515	CallExpression	"strncmp ( l , p -> name , p -> len )"		749453	0					
ANR	749516	Callee	strncmp		749453	0					
ANR	749517	Identifier	strncmp		749453	0					
ANR	749518	ArgumentList	l		749453	1					
ANR	749519	Argument	l		749453	0					
ANR	749520	Identifier	l		749453	0					
ANR	749521	Argument	p -> name		749453	1					
ANR	749522	PtrMemberAccess	p -> name		749453	0					
ANR	749523	Identifier	p		749453	0					
ANR	749524	Identifier	name		749453	1					
ANR	749525	Argument	p -> len		749453	2					
ANR	749526	PtrMemberAccess	p -> len		749453	0					
ANR	749527	Identifier	p		749453	0					
ANR	749528	Identifier	len		749453	1					
ANR	749529	PrimaryExpression	0		749453	1					
ANR	749530	CallExpression	isspace ( ( unsigned char ) l [ p -> len ] )		749453	1					
ANR	749531	Callee	isspace		749453	0					
ANR	749532	Identifier	isspace		749453	0					
ANR	749533	ArgumentList	( unsigned char ) l [ p -> len ]		749453	1					
ANR	749534	Argument	( unsigned char ) l [ p -> len ]		749453	0					
ANR	749535	CastExpression	( unsigned char ) l [ p -> len ]		749453	0					
ANR	749536	CastTarget	unsigned char		749453	0					
ANR	749537	ArrayIndexing	l [ p -> len ]		749453	1					
ANR	749538	Identifier	l		749453	0					
ANR	749539	PtrMemberAccess	p -> len		749453	1					
ANR	749540	Identifier	p		749453	0					
ANR	749541	Identifier	len		749453	1					
ANR	749542	CompoundStatement		16:41:353:353	749453	1					
ANR	749543	IfStatement	if ( t )		749453	0					
ANR	749544	Condition	t	1504:7:34986:34986	749453	0	True				
ANR	749545	Identifier	t		749453	0					
ANR	749546	ExpressionStatement	* t = l + p -> len	1505:4:34993:35008	749453	1	True				
ANR	749547	AssignmentExpression	* t = l + p -> len		749453	0		=			
ANR	749548	UnaryOperationExpression	* t		749453	0					
ANR	749549	UnaryOperator	*		749453	0					
ANR	749550	Identifier	t		749453	1					
ANR	749551	AdditiveExpression	l + p -> len		749453	1		+			
ANR	749552	Identifier	l		749453	0					
ANR	749553	PtrMemberAccess	p -> len		749453	1					
ANR	749554	Identifier	p		749453	0					
ANR	749555	Identifier	len		749453	1					
ANR	749556	BreakStatement	break ;	1506:3:35013:35018	749453	1	True				
ANR	749557	ReturnStatement	return p -> cond ;	1509:1:35028:35042	749453	11	True				
ANR	749558	PtrMemberAccess	p -> cond		749453	0					
ANR	749559	Identifier	p		749453	0					
ANR	749560	Identifier	cond		749453	1					
ANR	749561	ReturnType	int		749453	1					
ANR	749562	Identifier	get_cond		749453	2					
ANR	749563	ParameterList	"const char * l , const char * * t"		749453	3					
ANR	749564	Parameter	const char * l	1487:9:34592:34604	749453	0	True				
ANR	749565	ParameterType	const char *		749453	0					
ANR	749566	Identifier	l		749453	1					
ANR	749567	Parameter	const char * * t	1487:24:34607:34620	749453	1	True				
ANR	749568	ParameterType	const char * *		749453	0					
ANR	749569	Identifier	t		749453	1					
ANR	749570	CFGEntryNode	ENTRY		749453		True				
ANR	749571	CFGExitNode	EXIT		749453		True				
ANR	749572	Symbol	* p -> len		749453						
ANR	749573	Symbol	isspace		749453						
ANR	749574	Symbol	cond_tbl		749453						
ANR	749575	Symbol	l		749453						
ANR	749576	Symbol	p -> cond		749453						
ANR	749577	Symbol	p		749453						
ANR	749578	Symbol	strncmp		749453						
ANR	749579	Symbol	t		749453						
ANR	749580	Symbol	* l		749453						
ANR	749581	Symbol	p -> len		749453						
ANR	749582	Symbol	* p		749453						
ANR	749583	Symbol	p -> name		749453						
ANR	749584	Symbol	* * p		749453						
ANR	749585	Symbol	* t		749453						
ANR	749586	Function	check_cond	1512:8:35055:35923							
ANR	749587	FunctionDef	"check_cond (struct magic_set * ms , int cond , uint32_t cont_level)"		749586	0					
ANR	749588	CompoundStatement		1514:0:35123:35923	749586	0					
ANR	749589	IdentifierDeclStatement	int last_cond ;	1515:1:35126:35139	749586	0	True				
ANR	749590	IdentifierDecl	last_cond		749586	0					
ANR	749591	IdentifierDeclType	int		749586	0					
ANR	749592	Identifier	last_cond		749586	1					
ANR	749593	ExpressionStatement	last_cond = ms -> c . li [ cont_level ] . last_cond	1516:1:35142:35184	749586	1	True				
ANR	749594	AssignmentExpression	last_cond = ms -> c . li [ cont_level ] . last_cond		749586	0		=			
ANR	749595	Identifier	last_cond		749586	0					
ANR	749596	MemberAccess	ms -> c . li [ cont_level ] . last_cond		749586	1					
ANR	749597	ArrayIndexing	ms -> c . li [ cont_level ]		749586	0					
ANR	749598	MemberAccess	ms -> c . li		749586	0					
ANR	749599	PtrMemberAccess	ms -> c		749586	0					
ANR	749600	Identifier	ms		749586	0					
ANR	749601	Identifier	c		749586	1					
ANR	749602	Identifier	li		749586	1					
ANR	749603	Identifier	cont_level		749586	1					
ANR	749604	Identifier	last_cond		749586	1					
ANR	749605	SwitchStatement	switch ( cond )		749586	2					
ANR	749606	Condition	cond	1518:9:35196:35199	749586	0	True				
ANR	749607	Identifier	cond		749586	0					
ANR	749608	CompoundStatement		5:15:78:78	749586	1					
ANR	749609	Label	case COND_IF :	1519:1:35205:35217	749586	0	True				
ANR	749610	Identifier	COND_IF		749586	0					
ANR	749611	IfStatement	if ( last_cond != COND_NONE && last_cond != COND_ELIF )		749586	1					
ANR	749612	Condition	last_cond != COND_NONE && last_cond != COND_ELIF	1520:6:35225:35272	749586	0	True				
ANR	749613	AndExpression	last_cond != COND_NONE && last_cond != COND_ELIF		749586	0		&&			
ANR	749614	EqualityExpression	last_cond != COND_NONE		749586	0		!=			
ANR	749615	Identifier	last_cond		749586	0					
ANR	749616	Identifier	COND_NONE		749586	1					
ANR	749617	EqualityExpression	last_cond != COND_ELIF		749586	1		!=			
ANR	749618	Identifier	last_cond		749586	0					
ANR	749619	Identifier	COND_ELIF		749586	1					
ANR	749620	CompoundStatement		7:56:151:151	749586	1					
ANR	749621	IfStatement	if ( ms -> flags & MAGIC_CHECK )		749586	0					
ANR	749622	Condition	ms -> flags & MAGIC_CHECK	1521:7:35284:35306	749586	0	True				
ANR	749623	BitAndExpression	ms -> flags & MAGIC_CHECK		749586	0		&			
ANR	749624	PtrMemberAccess	ms -> flags		749586	0					
ANR	749625	Identifier	ms		749586	0					
ANR	749626	Identifier	flags		749586	1					
ANR	749627	Identifier	MAGIC_CHECK		749586	1					
ANR	749628	ExpressionStatement	"file_magwarn ( ms , ""syntax error: `if'"" )"	1522:4:35313:35351	749586	1	True				
ANR	749629	CallExpression	"file_magwarn ( ms , ""syntax error: `if'"" )"		749586	0					
ANR	749630	Callee	file_magwarn		749586	0					
ANR	749631	Identifier	file_magwarn		749586	0					
ANR	749632	ArgumentList	ms		749586	1					
ANR	749633	Argument	ms		749586	0					
ANR	749634	Identifier	ms		749586	0					
ANR	749635	Argument	"""syntax error: `if'"""		749586	1					
ANR	749636	PrimaryExpression	"""syntax error: `if'"""		749586	0					
ANR	749637	ReturnStatement	return - 1 ;	1523:3:35356:35365	749586	1	True				
ANR	749638	UnaryOperationExpression	- 1		749586	0					
ANR	749639	UnaryOperator	-		749586	0					
ANR	749640	PrimaryExpression	1		749586	1					
ANR	749641	ExpressionStatement	last_cond = COND_IF	1525:2:35373:35392	749586	2	True				
ANR	749642	AssignmentExpression	last_cond = COND_IF		749586	0		=			
ANR	749643	Identifier	last_cond		749586	0					
ANR	749644	Identifier	COND_IF		749586	1					
ANR	749645	BreakStatement	break ;	1526:2:35396:35401	749586	3	True				
ANR	749646	Label	case COND_ELIF :	1528:1:35405:35419	749586	4	True				
ANR	749647	Identifier	COND_ELIF		749586	0					
ANR	749648	IfStatement	if ( last_cond != COND_IF && last_cond != COND_ELIF )		749586	5					
ANR	749649	Condition	last_cond != COND_IF && last_cond != COND_ELIF	1529:6:35427:35472	749586	0	True				
ANR	749650	AndExpression	last_cond != COND_IF && last_cond != COND_ELIF		749586	0		&&			
ANR	749651	EqualityExpression	last_cond != COND_IF		749586	0		!=			
ANR	749652	Identifier	last_cond		749586	0					
ANR	749653	Identifier	COND_IF		749586	1					
ANR	749654	EqualityExpression	last_cond != COND_ELIF		749586	1		!=			
ANR	749655	Identifier	last_cond		749586	0					
ANR	749656	Identifier	COND_ELIF		749586	1					
ANR	749657	CompoundStatement		16:54:351:351	749586	1					
ANR	749658	IfStatement	if ( ms -> flags & MAGIC_CHECK )		749586	0					
ANR	749659	Condition	ms -> flags & MAGIC_CHECK	1530:7:35484:35506	749586	0	True				
ANR	749660	BitAndExpression	ms -> flags & MAGIC_CHECK		749586	0		&			
ANR	749661	PtrMemberAccess	ms -> flags		749586	0					
ANR	749662	Identifier	ms		749586	0					
ANR	749663	Identifier	flags		749586	1					
ANR	749664	Identifier	MAGIC_CHECK		749586	1					
ANR	749665	ExpressionStatement	"file_magwarn ( ms , ""syntax error: `elif'"" )"	1531:4:35513:35553	749586	1	True				
ANR	749666	CallExpression	"file_magwarn ( ms , ""syntax error: `elif'"" )"		749586	0					
ANR	749667	Callee	file_magwarn		749586	0					
ANR	749668	Identifier	file_magwarn		749586	0					
ANR	749669	ArgumentList	ms		749586	1					
ANR	749670	Argument	ms		749586	0					
ANR	749671	Identifier	ms		749586	0					
ANR	749672	Argument	"""syntax error: `elif'"""		749586	1					
ANR	749673	PrimaryExpression	"""syntax error: `elif'"""		749586	0					
ANR	749674	ReturnStatement	return - 1 ;	1532:3:35558:35567	749586	1	True				
ANR	749675	UnaryOperationExpression	- 1		749586	0					
ANR	749676	UnaryOperator	-		749586	0					
ANR	749677	PrimaryExpression	1		749586	1					
ANR	749678	ExpressionStatement	last_cond = COND_ELIF	1534:2:35575:35596	749586	6	True				
ANR	749679	AssignmentExpression	last_cond = COND_ELIF		749586	0		=			
ANR	749680	Identifier	last_cond		749586	0					
ANR	749681	Identifier	COND_ELIF		749586	1					
ANR	749682	BreakStatement	break ;	1535:2:35600:35605	749586	7	True				
ANR	749683	Label	case COND_ELSE :	1537:1:35609:35623	749586	8	True				
ANR	749684	Identifier	COND_ELSE		749586	0					
ANR	749685	IfStatement	if ( last_cond != COND_IF && last_cond != COND_ELIF )		749586	9					
ANR	749686	Condition	last_cond != COND_IF && last_cond != COND_ELIF	1538:6:35631:35676	749586	0	True				
ANR	749687	AndExpression	last_cond != COND_IF && last_cond != COND_ELIF		749586	0		&&			
ANR	749688	EqualityExpression	last_cond != COND_IF		749586	0		!=			
ANR	749689	Identifier	last_cond		749586	0					
ANR	749690	Identifier	COND_IF		749586	1					
ANR	749691	EqualityExpression	last_cond != COND_ELIF		749586	1		!=			
ANR	749692	Identifier	last_cond		749586	0					
ANR	749693	Identifier	COND_ELIF		749586	1					
ANR	749694	CompoundStatement		25:54:555:555	749586	1					
ANR	749695	IfStatement	if ( ms -> flags & MAGIC_CHECK )		749586	0					
ANR	749696	Condition	ms -> flags & MAGIC_CHECK	1539:7:35688:35710	749586	0	True				
ANR	749697	BitAndExpression	ms -> flags & MAGIC_CHECK		749586	0		&			
ANR	749698	PtrMemberAccess	ms -> flags		749586	0					
ANR	749699	Identifier	ms		749586	0					
ANR	749700	Identifier	flags		749586	1					
ANR	749701	Identifier	MAGIC_CHECK		749586	1					
ANR	749702	ExpressionStatement	"file_magwarn ( ms , ""syntax error: `else'"" )"	1540:4:35717:35757	749586	1	True				
ANR	749703	CallExpression	"file_magwarn ( ms , ""syntax error: `else'"" )"		749586	0					
ANR	749704	Callee	file_magwarn		749586	0					
ANR	749705	Identifier	file_magwarn		749586	0					
ANR	749706	ArgumentList	ms		749586	1					
ANR	749707	Argument	ms		749586	0					
ANR	749708	Identifier	ms		749586	0					
ANR	749709	Argument	"""syntax error: `else'"""		749586	1					
ANR	749710	PrimaryExpression	"""syntax error: `else'"""		749586	0					
ANR	749711	ReturnStatement	return - 1 ;	1541:3:35762:35771	749586	1	True				
ANR	749712	UnaryOperationExpression	- 1		749586	0					
ANR	749713	UnaryOperator	-		749586	0					
ANR	749714	PrimaryExpression	1		749586	1					
ANR	749715	ExpressionStatement	last_cond = COND_NONE	1543:2:35779:35800	749586	10	True				
ANR	749716	AssignmentExpression	last_cond = COND_NONE		749586	0		=			
ANR	749717	Identifier	last_cond		749586	0					
ANR	749718	Identifier	COND_NONE		749586	1					
ANR	749719	BreakStatement	break ;	1544:2:35804:35809	749586	11	True				
ANR	749720	Label	case COND_NONE :	1546:1:35813:35827	749586	12	True				
ANR	749721	Identifier	COND_NONE		749586	0					
ANR	749722	ExpressionStatement	last_cond = COND_NONE	1547:2:35831:35852	749586	13	True				
ANR	749723	AssignmentExpression	last_cond = COND_NONE		749586	0		=			
ANR	749724	Identifier	last_cond		749586	0					
ANR	749725	Identifier	COND_NONE		749586	1					
ANR	749726	BreakStatement	break ;	1548:2:35856:35861	749586	14	True				
ANR	749727	ExpressionStatement	ms -> c . li [ cont_level ] . last_cond = last_cond	1551:1:35868:35910	749586	3	True				
ANR	749728	AssignmentExpression	ms -> c . li [ cont_level ] . last_cond = last_cond		749586	0		=			
ANR	749729	MemberAccess	ms -> c . li [ cont_level ] . last_cond		749586	0					
ANR	749730	ArrayIndexing	ms -> c . li [ cont_level ]		749586	0					
ANR	749731	MemberAccess	ms -> c . li		749586	0					
ANR	749732	PtrMemberAccess	ms -> c		749586	0					
ANR	749733	Identifier	ms		749586	0					
ANR	749734	Identifier	c		749586	1					
ANR	749735	Identifier	li		749586	1					
ANR	749736	Identifier	cont_level		749586	1					
ANR	749737	Identifier	last_cond		749586	1					
ANR	749738	Identifier	last_cond		749586	1					
ANR	749739	ReturnStatement	return 0 ;	1552:1:35913:35921	749586	4	True				
ANR	749740	PrimaryExpression	0		749586	0					
ANR	749741	ReturnType	int		749586	1					
ANR	749742	Identifier	check_cond		749586	2					
ANR	749743	ParameterList	"struct magic_set * ms , int cond , uint32_t cont_level"		749586	3					
ANR	749744	Parameter	struct magic_set * ms	1513:11:35070:35089	749586	0	True				
ANR	749745	ParameterType	struct magic_set *		749586	0					
ANR	749746	Identifier	ms		749586	1					
ANR	749747	Parameter	int cond	1513:33:35092:35099	749586	1	True				
ANR	749748	ParameterType	int		749586	0					
ANR	749749	Identifier	cond		749586	1					
ANR	749750	Parameter	uint32_t cont_level	1513:43:35102:35120	749586	2	True				
ANR	749751	ParameterType	uint32_t		749586	0					
ANR	749752	Identifier	cont_level		749586	1					
ANR	749753	CFGEntryNode	ENTRY		749586		True				
ANR	749754	CFGExitNode	EXIT		749586		True				
ANR	749755	Symbol	COND_NONE		749586						
ANR	749756	Symbol	COND_IF		749586						
ANR	749757	Symbol	* ms -> c		749586						
ANR	749758	Symbol	ms		749586						
ANR	749759	Symbol	* ms -> c . li		749586						
ANR	749760	Symbol	cond		749586						
ANR	749761	Symbol	ms -> c . li		749586						
ANR	749762	Symbol	* cont_level		749586						
ANR	749763	Symbol	ms -> c . li [ cont_level ] . last_cond		749586						
ANR	749764	Symbol	* ms		749586						
ANR	749765	Symbol	* * ms		749586						
ANR	749766	Symbol	COND_ELIF		749586						
ANR	749767	Symbol	cont_level		749586						
ANR	749768	Symbol	last_cond		749586						
ANR	749769	Symbol	ms -> c		749586						
ANR	749770	Symbol	MAGIC_CHECK		749586						
ANR	749771	Symbol	ms -> flags		749586						
ANR	749772	Function	parse_indirect_modifier	1556:8:35967:36372							
ANR	749773	FunctionDef	"parse_indirect_modifier (struct magic_set * ms , struct magic * m , const char * * lp)"		749772	0					
ANR	749774	CompoundStatement		1558:0:36051:36372	749772	0					
ANR	749775	IdentifierDeclStatement	const char * l = * lp ;	1559:1:36054:36073	749772	0	True				
ANR	749776	IdentifierDecl	* l = * lp		749772	0					
ANR	749777	IdentifierDeclType	const char *		749772	0					
ANR	749778	Identifier	l		749772	1					
ANR	749779	AssignmentExpression	* l = * lp		749772	2		=			
ANR	749780	Identifier	l		749772	0					
ANR	749781	UnaryOperationExpression	* lp		749772	1					
ANR	749782	UnaryOperator	*		749772	0					
ANR	749783	Identifier	lp		749772	1					
ANR	749784	WhileStatement	while ( ! isspace ( ( unsigned char ) * ++ l ) )		749772	1					
ANR	749785	Condition	! isspace ( ( unsigned char ) * ++ l )	1561:8:36084:36112	749772	0	True				
ANR	749786	UnaryOperationExpression	! isspace ( ( unsigned char ) * ++ l )		749772	0					
ANR	749787	UnaryOperator	!		749772	0					
ANR	749788	CallExpression	isspace ( ( unsigned char ) * ++ l )		749772	1					
ANR	749789	Callee	isspace		749772	0					
ANR	749790	Identifier	isspace		749772	0					
ANR	749791	ArgumentList	( unsigned char ) * ++ l		749772	1					
ANR	749792	Argument	( unsigned char ) * ++ l		749772	0					
ANR	749793	CastExpression	( unsigned char ) * ++ l		749772	0					
ANR	749794	CastTarget	unsigned char		749772	0					
ANR	749795	UnaryOperationExpression	* ++ l		749772	1					
ANR	749796	UnaryOperator	*		749772	0					
ANR	749797	UnaryExpression	++ l		749772	1					
ANR	749798	IncDec	++		749772	0					
ANR	749799	Identifier	l		749772	1					
ANR	749800	SwitchStatement	switch ( * l )		749772	1					
ANR	749801	Condition	* l	1562:10:36125:36126	749772	0	True				
ANR	749802	UnaryOperationExpression	* l		749772	0					
ANR	749803	UnaryOperator	*		749772	0					
ANR	749804	Identifier	l		749772	1					
ANR	749805	CompoundStatement		5:14:77:77	749772	1					
ANR	749806	Label	case CHAR_INDIRECT_RELATIVE :	1563:2:36133:36160	749772	0	True				
ANR	749807	Identifier	CHAR_INDIRECT_RELATIVE		749772	0					
ANR	749808	ExpressionStatement	m -> str_flags |= INDIRECT_RELATIVE	1564:3:36165:36198	749772	1	True				
ANR	749809	AssignmentExpression	m -> str_flags |= INDIRECT_RELATIVE		749772	0		|=			
ANR	749810	PtrMemberAccess	m -> str_flags		749772	0					
ANR	749811	Identifier	m		749772	0					
ANR	749812	Identifier	str_flags		749772	1					
ANR	749813	Identifier	INDIRECT_RELATIVE		749772	1					
ANR	749814	BreakStatement	break ;	1565:3:36203:36208	749772	2	True				
ANR	749815	Label	default :	1566:2:36212:36219	749772	3	True				
ANR	749816	Identifier	default		749772	0					
ANR	749817	IfStatement	if ( ms -> flags & MAGIC_CHECK )		749772	4					
ANR	749818	Condition	ms -> flags & MAGIC_CHECK	1567:7:36228:36250	749772	0	True				
ANR	749819	BitAndExpression	ms -> flags & MAGIC_CHECK		749772	0		&			
ANR	749820	PtrMemberAccess	ms -> flags		749772	0					
ANR	749821	Identifier	ms		749772	0					
ANR	749822	Identifier	flags		749772	1					
ANR	749823	Identifier	MAGIC_CHECK		749772	1					
ANR	749824	Statement	file_magwarn	1568:4:36257:36268	749772	1	True				
ANR	749825	Statement	(	1568:16:36269:36269	749772	5	True				
ANR	749826	Statement	ms	1568:17:36270:36271	749772	6	True				
ANR	749827	Statement	","	1568:19:36272:36272	749772	7	True				
ANR	749828	Statement	"""indirect modifier `%c' """	1568:21:36274:36298	749772	8	True				
ANR	749829	Statement	"""invalid"""	1569:5:36305:36313	749772	9	True				
ANR	749830	Statement	","	1569:14:36314:36314	749772	10	True				
ANR	749831	Statement	*	1569:16:36316:36316	749772	11	True				
ANR	749832	Statement	l	1569:17:36317:36317	749772	12	True				
ANR	749833	Statement	)	1569:18:36318:36318	749772	13	True				
ANR	749834	ExpressionStatement		1569:19:36319:36319	749772	14	True				
ANR	749835	ExpressionStatement	* lp = l	1570:3:36324:36331	749772	15	True				
ANR	749836	AssignmentExpression	* lp = l		749772	0		=			
ANR	749837	UnaryOperationExpression	* lp		749772	0					
ANR	749838	UnaryOperator	*		749772	0					
ANR	749839	Identifier	lp		749772	1					
ANR	749840	Identifier	l		749772	1					
ANR	749841	ReturnStatement	return - 1 ;	1571:3:36336:36345	749772	16	True				
ANR	749842	UnaryOperationExpression	- 1		749772	0					
ANR	749843	UnaryOperator	-		749772	0					
ANR	749844	PrimaryExpression	1		749772	1					
ANR	749845	ExpressionStatement	* lp = l	1573:1:36352:36359	749772	2	True				
ANR	749846	AssignmentExpression	* lp = l		749772	0		=			
ANR	749847	UnaryOperationExpression	* lp		749772	0					
ANR	749848	UnaryOperator	*		749772	0					
ANR	749849	Identifier	lp		749772	1					
ANR	749850	Identifier	l		749772	1					
ANR	749851	ReturnStatement	return 0 ;	1574:1:36362:36370	749772	3	True				
ANR	749852	PrimaryExpression	0		749772	0					
ANR	749853	ReturnType	int		749772	1					
ANR	749854	Identifier	parse_indirect_modifier		749772	2					
ANR	749855	ParameterList	"struct magic_set * ms , struct magic * m , const char * * lp"		749772	3					
ANR	749856	Parameter	struct magic_set * ms	1557:24:35995:36014	749772	0	True				
ANR	749857	ParameterType	struct magic_set *		749772	0					
ANR	749858	Identifier	ms		749772	1					
ANR	749859	Parameter	struct magic * m	1557:46:36017:36031	749772	1	True				
ANR	749860	ParameterType	struct magic *		749772	0					
ANR	749861	Identifier	m		749772	1					
ANR	749862	Parameter	const char * * lp	1557:63:36034:36048	749772	2	True				
ANR	749863	ParameterType	const char * *		749772	0					
ANR	749864	Identifier	lp		749772	1					
ANR	749865	CFGEntryNode	ENTRY		749772		True				
ANR	749866	CFGExitNode	EXIT		749772		True				
ANR	749867	Symbol	* ++ l		749772						
ANR	749868	Symbol	lp		749772						
ANR	749869	Symbol	ms		749772						
ANR	749870	Symbol	isspace		749772						
ANR	749871	Symbol	INDIRECT_RELATIVE		749772						
ANR	749872	Symbol	* lp		749772						
ANR	749873	Symbol	m -> str_flags		749772						
ANR	749874	Symbol	l		749772						
ANR	749875	Symbol	m		749772						
ANR	749876	Symbol	* ms		749772						
ANR	749877	Symbol	* l		749772						
ANR	749878	Symbol	* m		749772						
ANR	749879	Symbol	MAGIC_CHECK		749772						
ANR	749880	Symbol	ms -> flags		749772						
ANR	749881	Function	parse_op_modifier	1577:8:36383:36662							
ANR	749882	FunctionDef	"parse_op_modifier (struct magic_set * ms , struct magic * m , const char * * lp , int op)"		749881	0					
ANR	749883	CompoundStatement		1580:0:36474:36662	749881	0					
ANR	749884	IdentifierDeclStatement	const char * l = * lp ;	1581:1:36477:36496	749881	0	True				
ANR	749885	IdentifierDecl	* l = * lp		749881	0					
ANR	749886	IdentifierDeclType	const char *		749881	0					
ANR	749887	Identifier	l		749881	1					
ANR	749888	AssignmentExpression	* l = * lp		749881	2		=			
ANR	749889	Identifier	l		749881	0					
ANR	749890	UnaryOperationExpression	* lp		749881	1					
ANR	749891	UnaryOperator	*		749881	0					
ANR	749892	Identifier	lp		749881	1					
ANR	749893	IdentifierDeclStatement	char * t ;	1582:1:36499:36506	749881	1	True				
ANR	749894	IdentifierDecl	* t		749881	0					
ANR	749895	IdentifierDeclType	char *		749881	0					
ANR	749896	Identifier	t		749881	1					
ANR	749897	IdentifierDeclStatement	uint64_t val ;	1583:1:36509:36521	749881	2	True				
ANR	749898	IdentifierDecl	val		749881	0					
ANR	749899	IdentifierDeclType	uint64_t		749881	0					
ANR	749900	Identifier	val		749881	1					
ANR	749901	ExpressionStatement	++ l	1585:1:36525:36528	749881	3	True				
ANR	749902	UnaryExpression	++ l		749881	0					
ANR	749903	IncDec	++		749881	0					
ANR	749904	Identifier	l		749881	1					
ANR	749905	ExpressionStatement	m -> mask_op |= op	1586:1:36531:36547	749881	4	True				
ANR	749906	AssignmentExpression	m -> mask_op |= op		749881	0		|=			
ANR	749907	PtrMemberAccess	m -> mask_op		749881	0					
ANR	749908	Identifier	m		749881	0					
ANR	749909	Identifier	mask_op		749881	1					
ANR	749910	Identifier	op		749881	1					
ANR	749911	ExpressionStatement	"val = ( uint64_t ) strtoull ( l , & t , 0 )"	1587:1:36550:36584	749881	5	True				
ANR	749912	AssignmentExpression	"val = ( uint64_t ) strtoull ( l , & t , 0 )"		749881	0		=			
ANR	749913	Identifier	val		749881	0					
ANR	749914	CastExpression	"( uint64_t ) strtoull ( l , & t , 0 )"		749881	1					
ANR	749915	CastTarget	uint64_t		749881	0					
ANR	749916	CallExpression	"strtoull ( l , & t , 0 )"		749881	1					
ANR	749917	Callee	strtoull		749881	0					
ANR	749918	Identifier	strtoull		749881	0					
ANR	749919	ArgumentList	l		749881	1					
ANR	749920	Argument	l		749881	0					
ANR	749921	Identifier	l		749881	0					
ANR	749922	Argument	& t		749881	1					
ANR	749923	UnaryOperationExpression	& t		749881	0					
ANR	749924	UnaryOperator	&		749881	0					
ANR	749925	Identifier	t		749881	1					
ANR	749926	Argument	0		749881	2					
ANR	749927	PrimaryExpression	0		749881	0					
ANR	749928	ExpressionStatement	l = t	1588:1:36587:36592	749881	6	True				
ANR	749929	AssignmentExpression	l = t		749881	0		=			
ANR	749930	Identifier	l		749881	0					
ANR	749931	Identifier	t		749881	1					
ANR	749932	ExpressionStatement	"m -> num_mask = file_signextend ( ms , m , val )"	1589:1:36595:36636	749881	7	True				
ANR	749933	AssignmentExpression	"m -> num_mask = file_signextend ( ms , m , val )"		749881	0		=			
ANR	749934	PtrMemberAccess	m -> num_mask		749881	0					
ANR	749935	Identifier	m		749881	0					
ANR	749936	Identifier	num_mask		749881	1					
ANR	749937	CallExpression	"file_signextend ( ms , m , val )"		749881	1					
ANR	749938	Callee	file_signextend		749881	0					
ANR	749939	Identifier	file_signextend		749881	0					
ANR	749940	ArgumentList	ms		749881	1					
ANR	749941	Argument	ms		749881	0					
ANR	749942	Identifier	ms		749881	0					
ANR	749943	Argument	m		749881	1					
ANR	749944	Identifier	m		749881	0					
ANR	749945	Argument	val		749881	2					
ANR	749946	Identifier	val		749881	0					
ANR	749947	ExpressionStatement	eatsize ( & l )	1590:1:36639:36650	749881	8	True				
ANR	749948	CallExpression	eatsize ( & l )		749881	0					
ANR	749949	Callee	eatsize		749881	0					
ANR	749950	Identifier	eatsize		749881	0					
ANR	749951	ArgumentList	& l		749881	1					
ANR	749952	Argument	& l		749881	0					
ANR	749953	UnaryOperationExpression	& l		749881	0					
ANR	749954	UnaryOperator	&		749881	0					
ANR	749955	Identifier	l		749881	1					
ANR	749956	ExpressionStatement	* lp = l	1591:1:36653:36660	749881	9	True				
ANR	749957	AssignmentExpression	* lp = l		749881	0		=			
ANR	749958	UnaryOperationExpression	* lp		749881	0					
ANR	749959	UnaryOperator	*		749881	0					
ANR	749960	Identifier	lp		749881	1					
ANR	749961	Identifier	l		749881	1					
ANR	749962	ReturnType	void		749881	1					
ANR	749963	Identifier	parse_op_modifier		749881	2					
ANR	749964	ParameterList	"struct magic_set * ms , struct magic * m , const char * * lp , int op"		749881	3					
ANR	749965	Parameter	struct magic_set * ms	1578:18:36406:36425	749881	0	True				
ANR	749966	ParameterType	struct magic_set *		749881	0					
ANR	749967	Identifier	ms		749881	1					
ANR	749968	Parameter	struct magic * m	1578:40:36428:36442	749881	1	True				
ANR	749969	ParameterType	struct magic *		749881	0					
ANR	749970	Identifier	m		749881	1					
ANR	749971	Parameter	const char * * lp	1578:57:36445:36459	749881	2	True				
ANR	749972	ParameterType	const char * *		749881	0					
ANR	749973	Identifier	lp		749881	1					
ANR	749974	Parameter	int op	1579:4:36466:36471	749881	3	True				
ANR	749975	ParameterType	int		749881	0					
ANR	749976	Identifier	op		749881	1					
ANR	749977	CFGEntryNode	ENTRY		749881		True				
ANR	749978	CFGExitNode	EXIT		749881		True				
ANR	749979	Symbol	val		749881						
ANR	749980	Symbol	op		749881						
ANR	749981	Symbol	lp		749881						
ANR	749982	Symbol	file_signextend		749881						
ANR	749983	Symbol	ms		749881						
ANR	749984	Symbol	* lp		749881						
ANR	749985	Symbol	l		749881						
ANR	749986	Symbol	m		749881						
ANR	749987	Symbol	strtoull		749881						
ANR	749988	Symbol	m -> num_mask		749881						
ANR	749989	Symbol	& l		749881						
ANR	749990	Symbol	t		749881						
ANR	749991	Symbol	m -> mask_op		749881						
ANR	749992	Symbol	* m		749881						
ANR	749993	Symbol	& t		749881						
ANR	749994	Function	parse_string_modifier	1594:8:36673:39045							
ANR	749995	FunctionDef	"parse_string_modifier (struct magic_set * ms , struct magic * m , const char * * lp)"		749994	0					
ANR	749996	CompoundStatement		1596:0:36755:39045	749994	0					
ANR	749997	IdentifierDeclStatement	const char * l = * lp ;	1597:1:36758:36777	749994	0	True				
ANR	749998	IdentifierDecl	* l = * lp		749994	0					
ANR	749999	IdentifierDeclType	const char *		749994	0					
ANR	750000	Identifier	l		749994	1					
ANR	750001	AssignmentExpression	* l = * lp		749994	2		=			
ANR	750002	Identifier	l		749994	0					
ANR	750003	UnaryOperationExpression	* lp		749994	1					
ANR	750004	UnaryOperator	*		749994	0					
ANR	750005	Identifier	lp		749994	1					
ANR	750006	IdentifierDeclStatement	char * t ;	1598:1:36780:36787	749994	1	True				
ANR	750007	IdentifierDecl	* t		749994	0					
ANR	750008	IdentifierDeclType	char *		749994	0					
ANR	750009	Identifier	t		749994	1					
ANR	750010	IdentifierDeclStatement	int have_range = 0 ;	1599:1:36790:36808	749994	2	True				
ANR	750011	IdentifierDecl	have_range = 0		749994	0					
ANR	750012	IdentifierDeclType	int		749994	0					
ANR	750013	Identifier	have_range		749994	1					
ANR	750014	AssignmentExpression	have_range = 0		749994	2		=			
ANR	750015	Identifier	have_range		749994	0					
ANR	750016	PrimaryExpression	0		749994	1					
ANR	750017	WhileStatement	while ( ! isspace ( ( unsigned char ) * ++ l ) )		749994	3					
ANR	750018	Condition	! isspace ( ( unsigned char ) * ++ l )	1601:8:36819:36847	749994	0	True				
ANR	750019	UnaryOperationExpression	! isspace ( ( unsigned char ) * ++ l )		749994	0					
ANR	750020	UnaryOperator	!		749994	0					
ANR	750021	CallExpression	isspace ( ( unsigned char ) * ++ l )		749994	1					
ANR	750022	Callee	isspace		749994	0					
ANR	750023	Identifier	isspace		749994	0					
ANR	750024	ArgumentList	( unsigned char ) * ++ l		749994	1					
ANR	750025	Argument	( unsigned char ) * ++ l		749994	0					
ANR	750026	CastExpression	( unsigned char ) * ++ l		749994	0					
ANR	750027	CastTarget	unsigned char		749994	0					
ANR	750028	UnaryOperationExpression	* ++ l		749994	1					
ANR	750029	UnaryOperator	*		749994	0					
ANR	750030	UnaryExpression	++ l		749994	1					
ANR	750031	IncDec	++		749994	0					
ANR	750032	Identifier	l		749994	1					
ANR	750033	CompoundStatement		6:39:94:94	749994	1					
ANR	750034	SwitchStatement	switch ( * l )		749994	0					
ANR	750035	Condition	* l	1602:10:36862:36863	749994	0	True				
ANR	750036	UnaryOperationExpression	* l		749994	0					
ANR	750037	UnaryOperator	*		749994	0					
ANR	750038	Identifier	l		749994	1					
ANR	750039	CompoundStatement		7:14:110:110	749994	1					
ANR	750040	Label	case '0' :	1603:2:36870:36878	749994	0	True				
ANR	750041	Label	case '1' :	1603:13:36881:36889	749994	1	True				
ANR	750042	Label	case '2' :	1603:24:36892:36900	749994	2	True				
ANR	750043	Label	case '3' :	1604:2:36904:36912	749994	3	True				
ANR	750044	Label	case '4' :	1604:13:36915:36923	749994	4	True				
ANR	750045	Label	case '5' :	1604:24:36926:36934	749994	5	True				
ANR	750046	Label	case '6' :	1605:2:36938:36946	749994	6	True				
ANR	750047	Label	case '7' :	1605:13:36949:36957	749994	7	True				
ANR	750048	Label	case '8' :	1605:24:36960:36968	749994	8	True				
ANR	750049	Label	case '9' :	1606:2:36972:36980	749994	9	True				
ANR	750050	IfStatement	if ( have_range && ( ms -> flags & MAGIC_CHECK ) )		749994	10					
ANR	750051	Condition	have_range && ( ms -> flags & MAGIC_CHECK )	1607:7:36989:37027	749994	0	True				
ANR	750052	AndExpression	have_range && ( ms -> flags & MAGIC_CHECK )		749994	0		&&			
ANR	750053	Identifier	have_range		749994	0					
ANR	750054	BitAndExpression	ms -> flags & MAGIC_CHECK		749994	1		&			
ANR	750055	PtrMemberAccess	ms -> flags		749994	0					
ANR	750056	Identifier	ms		749994	0					
ANR	750057	Identifier	flags		749994	1					
ANR	750058	Identifier	MAGIC_CHECK		749994	1					
ANR	750059	ExpressionStatement	"file_magwarn ( ms , ""multiple ranges"" )"	1608:4:37034:37069	749994	1	True				
ANR	750060	CallExpression	"file_magwarn ( ms , ""multiple ranges"" )"		749994	0					
ANR	750061	Callee	file_magwarn		749994	0					
ANR	750062	Identifier	file_magwarn		749994	0					
ANR	750063	ArgumentList	ms		749994	1					
ANR	750064	Argument	ms		749994	0					
ANR	750065	Identifier	ms		749994	0					
ANR	750066	Argument	"""multiple ranges"""		749994	1					
ANR	750067	PrimaryExpression	"""multiple ranges"""		749994	0					
ANR	750068	ExpressionStatement	have_range = 1	1609:3:37074:37088	749994	11	True				
ANR	750069	AssignmentExpression	have_range = 1		749994	0		=			
ANR	750070	Identifier	have_range		749994	0					
ANR	750071	PrimaryExpression	1		749994	1					
ANR	750072	ExpressionStatement	"m -> str_range = CAST ( uint32_t , strtoul ( l , & t , 0 ) )"	1610:3:37093:37141	749994	12	True				
ANR	750073	AssignmentExpression	"m -> str_range = CAST ( uint32_t , strtoul ( l , & t , 0 ) )"		749994	0		=			
ANR	750074	PtrMemberAccess	m -> str_range		749994	0					
ANR	750075	Identifier	m		749994	0					
ANR	750076	Identifier	str_range		749994	1					
ANR	750077	CallExpression	"CAST ( uint32_t , strtoul ( l , & t , 0 ) )"		749994	1					
ANR	750078	Callee	CAST		749994	0					
ANR	750079	Identifier	CAST		749994	0					
ANR	750080	ArgumentList	uint32_t		749994	1					
ANR	750081	Argument	uint32_t		749994	0					
ANR	750082	Identifier	uint32_t		749994	0					
ANR	750083	Argument	"strtoul ( l , & t , 0 )"		749994	1					
ANR	750084	CallExpression	"strtoul ( l , & t , 0 )"		749994	0					
ANR	750085	Callee	strtoul		749994	0					
ANR	750086	Identifier	strtoul		749994	0					
ANR	750087	ArgumentList	l		749994	1					
ANR	750088	Argument	l		749994	0					
ANR	750089	Identifier	l		749994	0					
ANR	750090	Argument	& t		749994	1					
ANR	750091	UnaryOperationExpression	& t		749994	0					
ANR	750092	UnaryOperator	&		749994	0					
ANR	750093	Identifier	t		749994	1					
ANR	750094	Argument	0		749994	2					
ANR	750095	PrimaryExpression	0		749994	0					
ANR	750096	IfStatement	if ( m -> str_range == 0 )		749994	13					
ANR	750097	Condition	m -> str_range == 0	1611:7:37150:37166	749994	0	True				
ANR	750098	EqualityExpression	m -> str_range == 0		749994	0		==			
ANR	750099	PtrMemberAccess	m -> str_range		749994	0					
ANR	750100	Identifier	m		749994	0					
ANR	750101	Identifier	str_range		749994	1					
ANR	750102	PrimaryExpression	0		749994	1					
ANR	750103	ExpressionStatement	"file_magwarn ( ms , ""zero range"" )"	1612:4:37173:37203	749994	1	True				
ANR	750104	CallExpression	"file_magwarn ( ms , ""zero range"" )"		749994	0					
ANR	750105	Callee	file_magwarn		749994	0					
ANR	750106	Identifier	file_magwarn		749994	0					
ANR	750107	ArgumentList	ms		749994	1					
ANR	750108	Argument	ms		749994	0					
ANR	750109	Identifier	ms		749994	0					
ANR	750110	Argument	"""zero range"""		749994	1					
ANR	750111	PrimaryExpression	"""zero range"""		749994	0					
ANR	750112	ExpressionStatement	l = t - 1	1613:3:37208:37217	749994	14	True				
ANR	750113	AssignmentExpression	l = t - 1		749994	0		=			
ANR	750114	Identifier	l		749994	0					
ANR	750115	AdditiveExpression	t - 1		749994	1		-			
ANR	750116	Identifier	t		749994	0					
ANR	750117	PrimaryExpression	1		749994	1					
ANR	750118	BreakStatement	break ;	1614:3:37222:37227	749994	15	True				
ANR	750119	Label	case CHAR_COMPACT_WHITESPACE :	1615:2:37231:37259	749994	16	True				
ANR	750120	Identifier	CHAR_COMPACT_WHITESPACE		749994	0					
ANR	750121	ExpressionStatement	m -> str_flags |= STRING_COMPACT_WHITESPACE	1616:3:37264:37305	749994	17	True				
ANR	750122	AssignmentExpression	m -> str_flags |= STRING_COMPACT_WHITESPACE		749994	0		|=			
ANR	750123	PtrMemberAccess	m -> str_flags		749994	0					
ANR	750124	Identifier	m		749994	0					
ANR	750125	Identifier	str_flags		749994	1					
ANR	750126	Identifier	STRING_COMPACT_WHITESPACE		749994	1					
ANR	750127	BreakStatement	break ;	1617:3:37310:37315	749994	18	True				
ANR	750128	Label	case CHAR_COMPACT_OPTIONAL_WHITESPACE :	1618:2:37319:37356	749994	19	True				
ANR	750129	Identifier	CHAR_COMPACT_OPTIONAL_WHITESPACE		749994	0					
ANR	750130	ExpressionStatement	m -> str_flags |= STRING_COMPACT_OPTIONAL_WHITESPACE	1619:3:37361:37411	749994	20	True				
ANR	750131	AssignmentExpression	m -> str_flags |= STRING_COMPACT_OPTIONAL_WHITESPACE		749994	0		|=			
ANR	750132	PtrMemberAccess	m -> str_flags		749994	0					
ANR	750133	Identifier	m		749994	0					
ANR	750134	Identifier	str_flags		749994	1					
ANR	750135	Identifier	STRING_COMPACT_OPTIONAL_WHITESPACE		749994	1					
ANR	750136	BreakStatement	break ;	1620:3:37416:37421	749994	21	True				
ANR	750137	Label	case CHAR_IGNORE_LOWERCASE :	1621:2:37425:37451	749994	22	True				
ANR	750138	Identifier	CHAR_IGNORE_LOWERCASE		749994	0					
ANR	750139	ExpressionStatement	m -> str_flags |= STRING_IGNORE_LOWERCASE	1622:3:37456:37495	749994	23	True				
ANR	750140	AssignmentExpression	m -> str_flags |= STRING_IGNORE_LOWERCASE		749994	0		|=			
ANR	750141	PtrMemberAccess	m -> str_flags		749994	0					
ANR	750142	Identifier	m		749994	0					
ANR	750143	Identifier	str_flags		749994	1					
ANR	750144	Identifier	STRING_IGNORE_LOWERCASE		749994	1					
ANR	750145	BreakStatement	break ;	1623:3:37500:37505	749994	24	True				
ANR	750146	Label	case CHAR_IGNORE_UPPERCASE :	1624:2:37509:37535	749994	25	True				
ANR	750147	Identifier	CHAR_IGNORE_UPPERCASE		749994	0					
ANR	750148	ExpressionStatement	m -> str_flags |= STRING_IGNORE_UPPERCASE	1625:3:37540:37579	749994	26	True				
ANR	750149	AssignmentExpression	m -> str_flags |= STRING_IGNORE_UPPERCASE		749994	0		|=			
ANR	750150	PtrMemberAccess	m -> str_flags		749994	0					
ANR	750151	Identifier	m		749994	0					
ANR	750152	Identifier	str_flags		749994	1					
ANR	750153	Identifier	STRING_IGNORE_UPPERCASE		749994	1					
ANR	750154	BreakStatement	break ;	1626:3:37584:37589	749994	27	True				
ANR	750155	Label	case CHAR_REGEX_OFFSET_START :	1627:2:37593:37621	749994	28	True				
ANR	750156	Identifier	CHAR_REGEX_OFFSET_START		749994	0					
ANR	750157	ExpressionStatement	m -> str_flags |= REGEX_OFFSET_START	1628:3:37626:37660	749994	29	True				
ANR	750158	AssignmentExpression	m -> str_flags |= REGEX_OFFSET_START		749994	0		|=			
ANR	750159	PtrMemberAccess	m -> str_flags		749994	0					
ANR	750160	Identifier	m		749994	0					
ANR	750161	Identifier	str_flags		749994	1					
ANR	750162	Identifier	REGEX_OFFSET_START		749994	1					
ANR	750163	BreakStatement	break ;	1629:3:37665:37670	749994	30	True				
ANR	750164	Label	case CHAR_BINTEST :	1630:2:37674:37691	749994	31	True				
ANR	750165	Identifier	CHAR_BINTEST		749994	0					
ANR	750166	ExpressionStatement	m -> str_flags |= STRING_BINTEST	1631:3:37696:37726	749994	32	True				
ANR	750167	AssignmentExpression	m -> str_flags |= STRING_BINTEST		749994	0		|=			
ANR	750168	PtrMemberAccess	m -> str_flags		749994	0					
ANR	750169	Identifier	m		749994	0					
ANR	750170	Identifier	str_flags		749994	1					
ANR	750171	Identifier	STRING_BINTEST		749994	1					
ANR	750172	BreakStatement	break ;	1632:3:37731:37736	749994	33	True				
ANR	750173	Label	case CHAR_TEXTTEST :	1633:2:37740:37758	749994	34	True				
ANR	750174	Identifier	CHAR_TEXTTEST		749994	0					
ANR	750175	ExpressionStatement	m -> str_flags |= STRING_TEXTTEST	1634:3:37763:37794	749994	35	True				
ANR	750176	AssignmentExpression	m -> str_flags |= STRING_TEXTTEST		749994	0		|=			
ANR	750177	PtrMemberAccess	m -> str_flags		749994	0					
ANR	750178	Identifier	m		749994	0					
ANR	750179	Identifier	str_flags		749994	1					
ANR	750180	Identifier	STRING_TEXTTEST		749994	1					
ANR	750181	BreakStatement	break ;	1635:3:37799:37804	749994	36	True				
ANR	750182	Label	case CHAR_TRIM :	1636:2:37808:37822	749994	37	True				
ANR	750183	Identifier	CHAR_TRIM		749994	0					
ANR	750184	ExpressionStatement	m -> str_flags |= STRING_TRIM	1637:3:37827:37854	749994	38	True				
ANR	750185	AssignmentExpression	m -> str_flags |= STRING_TRIM		749994	0		|=			
ANR	750186	PtrMemberAccess	m -> str_flags		749994	0					
ANR	750187	Identifier	m		749994	0					
ANR	750188	Identifier	str_flags		749994	1					
ANR	750189	Identifier	STRING_TRIM		749994	1					
ANR	750190	BreakStatement	break ;	1638:3:37859:37864	749994	39	True				
ANR	750191	Label	case CHAR_PSTRING_1_LE :	1639:2:37868:37890	749994	40	True				
ANR	750192	Identifier	CHAR_PSTRING_1_LE		749994	0					
ANR	750193	Statement	define	1640:1:37893:37898	749994	41	True				
ANR	750194	Statement	SET_LENGTH	1640:8:37900:37909	749994	42	True				
ANR	750195	Statement	(	1640:18:37910:37910	749994	43	True				
ANR	750196	Statement	a	1640:19:37911:37911	749994	44	True				
ANR	750197	Statement	)	1640:20:37912:37912	749994	45	True				
ANR	750198	Statement	m	1640:22:37914:37914	749994	46	True				
ANR	750199	Statement	->	1640:23:37915:37916	749994	47	True				
ANR	750200	Statement	str_flags	1640:25:37917:37925	749994	48	True				
ANR	750201	Statement	=	1640:35:37927:37927	749994	49	True				
ANR	750202	Statement	(	1640:37:37929:37929	749994	50	True				
ANR	750203	Statement	m	1640:38:37930:37930	749994	51	True				
ANR	750204	Statement	->	1640:39:37931:37932	749994	52	True				
ANR	750205	Statement	str_flags	1640:41:37933:37941	749994	53	True				
ANR	750206	Statement	&	1640:51:37943:37943	749994	54	True				
ANR	750207	Statement	~PSTRING_LEN	1640:53:37945:37956	749994	55	True				
ANR	750208	Statement	)	1640:65:37957:37957	749994	56	True				
ANR	750209	Statement	|	1640:67:37959:37959	749994	57	True				
ANR	750210	Statement	(	1640:69:37961:37961	749994	58	True				
ANR	750211	Statement	a	1640:70:37962:37962	749994	59	True				
ANR	750212	Statement	)	1640:71:37963:37963	749994	60	True				
ANR	750213	IfStatement	if ( m -> type != FILE_PSTRING )		749994	61					
ANR	750214	Condition	m -> type != FILE_PSTRING	1641:7:37972:37994	749994	0	True				
ANR	750215	EqualityExpression	m -> type != FILE_PSTRING		749994	0		!=			
ANR	750216	PtrMemberAccess	m -> type		749994	0					
ANR	750217	Identifier	m		749994	0					
ANR	750218	Identifier	type		749994	1					
ANR	750219	Identifier	FILE_PSTRING		749994	1					
ANR	750220	GotoStatement	goto bad ;	1642:4:38001:38009	749994	1	True				
ANR	750221	Identifier	bad		749994	0					
ANR	750222	ExpressionStatement	SET_LENGTH ( PSTRING_1_LE )	1643:3:38014:38038	749994	62	True				
ANR	750223	CallExpression	SET_LENGTH ( PSTRING_1_LE )		749994	0					
ANR	750224	Callee	SET_LENGTH		749994	0					
ANR	750225	Identifier	SET_LENGTH		749994	0					
ANR	750226	ArgumentList	PSTRING_1_LE		749994	1					
ANR	750227	Argument	PSTRING_1_LE		749994	0					
ANR	750228	Identifier	PSTRING_1_LE		749994	0					
ANR	750229	BreakStatement	break ;	1644:3:38043:38048	749994	63	True				
ANR	750230	Label	case CHAR_PSTRING_2_BE :	1645:2:38052:38074	749994	64	True				
ANR	750231	Identifier	CHAR_PSTRING_2_BE		749994	0					
ANR	750232	IfStatement	if ( m -> type != FILE_PSTRING )		749994	65					
ANR	750233	Condition	m -> type != FILE_PSTRING	1646:7:38083:38105	749994	0	True				
ANR	750234	EqualityExpression	m -> type != FILE_PSTRING		749994	0		!=			
ANR	750235	PtrMemberAccess	m -> type		749994	0					
ANR	750236	Identifier	m		749994	0					
ANR	750237	Identifier	type		749994	1					
ANR	750238	Identifier	FILE_PSTRING		749994	1					
ANR	750239	GotoStatement	goto bad ;	1647:4:38112:38120	749994	1	True				
ANR	750240	Identifier	bad		749994	0					
ANR	750241	ExpressionStatement	SET_LENGTH ( PSTRING_2_BE )	1648:3:38125:38149	749994	66	True				
ANR	750242	CallExpression	SET_LENGTH ( PSTRING_2_BE )		749994	0					
ANR	750243	Callee	SET_LENGTH		749994	0					
ANR	750244	Identifier	SET_LENGTH		749994	0					
ANR	750245	ArgumentList	PSTRING_2_BE		749994	1					
ANR	750246	Argument	PSTRING_2_BE		749994	0					
ANR	750247	Identifier	PSTRING_2_BE		749994	0					
ANR	750248	BreakStatement	break ;	1649:3:38154:38159	749994	67	True				
ANR	750249	Label	case CHAR_PSTRING_2_LE :	1650:2:38163:38185	749994	68	True				
ANR	750250	Identifier	CHAR_PSTRING_2_LE		749994	0					
ANR	750251	IfStatement	if ( m -> type != FILE_PSTRING )		749994	69					
ANR	750252	Condition	m -> type != FILE_PSTRING	1651:7:38194:38216	749994	0	True				
ANR	750253	EqualityExpression	m -> type != FILE_PSTRING		749994	0		!=			
ANR	750254	PtrMemberAccess	m -> type		749994	0					
ANR	750255	Identifier	m		749994	0					
ANR	750256	Identifier	type		749994	1					
ANR	750257	Identifier	FILE_PSTRING		749994	1					
ANR	750258	GotoStatement	goto bad ;	1652:4:38223:38231	749994	1	True				
ANR	750259	Identifier	bad		749994	0					
ANR	750260	ExpressionStatement	SET_LENGTH ( PSTRING_2_LE )	1653:3:38236:38260	749994	70	True				
ANR	750261	CallExpression	SET_LENGTH ( PSTRING_2_LE )		749994	0					
ANR	750262	Callee	SET_LENGTH		749994	0					
ANR	750263	Identifier	SET_LENGTH		749994	0					
ANR	750264	ArgumentList	PSTRING_2_LE		749994	1					
ANR	750265	Argument	PSTRING_2_LE		749994	0					
ANR	750266	Identifier	PSTRING_2_LE		749994	0					
ANR	750267	BreakStatement	break ;	1654:3:38265:38270	749994	71	True				
ANR	750268	Label	case CHAR_PSTRING_4_BE :	1655:2:38274:38296	749994	72	True				
ANR	750269	Identifier	CHAR_PSTRING_4_BE		749994	0					
ANR	750270	IfStatement	if ( m -> type != FILE_PSTRING )		749994	73					
ANR	750271	Condition	m -> type != FILE_PSTRING	1656:7:38305:38327	749994	0	True				
ANR	750272	EqualityExpression	m -> type != FILE_PSTRING		749994	0		!=			
ANR	750273	PtrMemberAccess	m -> type		749994	0					
ANR	750274	Identifier	m		749994	0					
ANR	750275	Identifier	type		749994	1					
ANR	750276	Identifier	FILE_PSTRING		749994	1					
ANR	750277	GotoStatement	goto bad ;	1657:4:38334:38342	749994	1	True				
ANR	750278	Identifier	bad		749994	0					
ANR	750279	ExpressionStatement	SET_LENGTH ( PSTRING_4_BE )	1658:3:38347:38371	749994	74	True				
ANR	750280	CallExpression	SET_LENGTH ( PSTRING_4_BE )		749994	0					
ANR	750281	Callee	SET_LENGTH		749994	0					
ANR	750282	Identifier	SET_LENGTH		749994	0					
ANR	750283	ArgumentList	PSTRING_4_BE		749994	1					
ANR	750284	Argument	PSTRING_4_BE		749994	0					
ANR	750285	Identifier	PSTRING_4_BE		749994	0					
ANR	750286	BreakStatement	break ;	1659:3:38376:38381	749994	75	True				
ANR	750287	Label	case CHAR_PSTRING_4_LE :	1660:2:38385:38407	749994	76	True				
ANR	750288	Identifier	CHAR_PSTRING_4_LE		749994	0					
ANR	750289	SwitchStatement	switch ( m -> type )		749994	77					
ANR	750290	Condition	m -> type	1661:11:38420:38426	749994	0	True				
ANR	750291	PtrMemberAccess	m -> type		749994	0					
ANR	750292	Identifier	m		749994	0					
ANR	750293	Identifier	type		749994	1					
ANR	750294	CompoundStatement		66:20:1673:1673	749994	1					
ANR	750295	Label	case FILE_PSTRING :	1662:3:38434:38451	749994	0	True				
ANR	750296	Identifier	FILE_PSTRING		749994	0					
ANR	750297	Label	case FILE_REGEX :	1663:3:38456:38471	749994	1	True				
ANR	750298	Identifier	FILE_REGEX		749994	0					
ANR	750299	BreakStatement	break ;	1664:4:38477:38482	749994	2	True				
ANR	750300	Label	default :	1665:3:38487:38494	749994	3	True				
ANR	750301	Identifier	default		749994	0					
ANR	750302	GotoStatement	goto bad ;	1666:4:38500:38508	749994	4	True				
ANR	750303	Identifier	bad		749994	0					
ANR	750304	ExpressionStatement	SET_LENGTH ( PSTRING_4_LE )	1668:3:38518:38542	749994	78	True				
ANR	750305	CallExpression	SET_LENGTH ( PSTRING_4_LE )		749994	0					
ANR	750306	Callee	SET_LENGTH		749994	0					
ANR	750307	Identifier	SET_LENGTH		749994	0					
ANR	750308	ArgumentList	PSTRING_4_LE		749994	1					
ANR	750309	Argument	PSTRING_4_LE		749994	0					
ANR	750310	Identifier	PSTRING_4_LE		749994	0					
ANR	750311	BreakStatement	break ;	1669:3:38547:38552	749994	79	True				
ANR	750312	Label	case CHAR_PSTRING_LENGTH_INCLUDES_ITSELF :	1670:2:38556:38596	749994	80	True				
ANR	750313	Identifier	CHAR_PSTRING_LENGTH_INCLUDES_ITSELF		749994	0					
ANR	750314	IfStatement	if ( m -> type != FILE_PSTRING )		749994	81					
ANR	750315	Condition	m -> type != FILE_PSTRING	1671:7:38605:38627	749994	0	True				
ANR	750316	EqualityExpression	m -> type != FILE_PSTRING		749994	0		!=			
ANR	750317	PtrMemberAccess	m -> type		749994	0					
ANR	750318	Identifier	m		749994	0					
ANR	750319	Identifier	type		749994	1					
ANR	750320	Identifier	FILE_PSTRING		749994	1					
ANR	750321	GotoStatement	goto bad ;	1672:4:38634:38642	749994	1	True				
ANR	750322	Identifier	bad		749994	0					
ANR	750323	ExpressionStatement	m -> str_flags |= PSTRING_LENGTH_INCLUDES_ITSELF	1673:3:38647:38693	749994	82	True				
ANR	750324	AssignmentExpression	m -> str_flags |= PSTRING_LENGTH_INCLUDES_ITSELF		749994	0		|=			
ANR	750325	PtrMemberAccess	m -> str_flags		749994	0					
ANR	750326	Identifier	m		749994	0					
ANR	750327	Identifier	str_flags		749994	1					
ANR	750328	Identifier	PSTRING_LENGTH_INCLUDES_ITSELF		749994	1					
ANR	750329	BreakStatement	break ;	1674:3:38698:38703	749994	83	True				
ANR	750330	Label	default :	1675:2:38707:38714	749994	84	True				
ANR	750331	Identifier	default		749994	0					
ANR	750332	Label	bad :	1676:2:38718:38721	749994	85	True				
ANR	750333	Identifier	bad		749994	0					
ANR	750334	IfStatement	if ( ms -> flags & MAGIC_CHECK )		749994	86					
ANR	750335	Condition	ms -> flags & MAGIC_CHECK	1677:7:38730:38752	749994	0	True				
ANR	750336	BitAndExpression	ms -> flags & MAGIC_CHECK		749994	0		&			
ANR	750337	PtrMemberAccess	ms -> flags		749994	0					
ANR	750338	Identifier	ms		749994	0					
ANR	750339	Identifier	flags		749994	1					
ANR	750340	Identifier	MAGIC_CHECK		749994	1					
ANR	750341	Statement	file_magwarn	1678:4:38759:38770	749994	1	True				
ANR	750342	Statement	(	1678:16:38771:38771	749994	87	True				
ANR	750343	Statement	ms	1678:17:38772:38773	749994	88	True				
ANR	750344	Statement	","	1678:19:38774:38774	749994	89	True				
ANR	750345	Statement	"""string modifier `%c' """	1678:21:38776:38798	749994	90	True				
ANR	750346	Statement	"""invalid"""	1679:5:38805:38813	749994	91	True				
ANR	750347	Statement	","	1679:14:38814:38814	749994	92	True				
ANR	750348	Statement	*	1679:16:38816:38816	749994	93	True				
ANR	750349	Statement	l	1679:17:38817:38817	749994	94	True				
ANR	750350	Statement	)	1679:18:38818:38818	749994	95	True				
ANR	750351	ExpressionStatement		1679:19:38819:38819	749994	96	True				
ANR	750352	GotoStatement	goto out ;	1680:3:38824:38832	749994	97	True				
ANR	750353	Identifier	out		749994	0					
ANR	750354	IfStatement	if ( l [ 1 ] == '/' && ! isspace ( ( unsigned char ) l [ 2 ] ) )		749994	1					
ANR	750355	Condition	l [ 1 ] == '/' && ! isspace ( ( unsigned char ) l [ 2 ] )	1683:6:38887:38930	749994	0	True				
ANR	750356	AndExpression	l [ 1 ] == '/' && ! isspace ( ( unsigned char ) l [ 2 ] )		749994	0		&&			
ANR	750357	EqualityExpression	l [ 1 ] == '/'		749994	0		==			
ANR	750358	ArrayIndexing	l [ 1 ]		749994	0					
ANR	750359	Identifier	l		749994	0					
ANR	750360	PrimaryExpression	1		749994	1					
ANR	750361	PrimaryExpression	'/'		749994	1					
ANR	750362	UnaryOperationExpression	! isspace ( ( unsigned char ) l [ 2 ] )		749994	1					
ANR	750363	UnaryOperator	!		749994	0					
ANR	750364	CallExpression	isspace ( ( unsigned char ) l [ 2 ] )		749994	1					
ANR	750365	Callee	isspace		749994	0					
ANR	750366	Identifier	isspace		749994	0					
ANR	750367	ArgumentList	( unsigned char ) l [ 2 ]		749994	1					
ANR	750368	Argument	( unsigned char ) l [ 2 ]		749994	0					
ANR	750369	CastExpression	( unsigned char ) l [ 2 ]		749994	0					
ANR	750370	CastTarget	unsigned char		749994	0					
ANR	750371	ArrayIndexing	l [ 2 ]		749994	1					
ANR	750372	Identifier	l		749994	0					
ANR	750373	PrimaryExpression	2		749994	1					
ANR	750374	ExpressionStatement	l ++	1684:3:38936:38939	749994	1	True				
ANR	750375	PostIncDecOperationExpression	l ++		749994	0					
ANR	750376	Identifier	l		749994	0					
ANR	750377	IncDec	++		749994	1					
ANR	750378	IfStatement	"if ( string_modifier_check ( ms , m ) == - 1 )"		749994	4					
ANR	750379	Condition	"string_modifier_check ( ms , m ) == - 1"	1686:5:38949:38982	749994	0	True				
ANR	750380	EqualityExpression	"string_modifier_check ( ms , m ) == - 1"		749994	0		==			
ANR	750381	CallExpression	"string_modifier_check ( ms , m )"		749994	0					
ANR	750382	Callee	string_modifier_check		749994	0					
ANR	750383	Identifier	string_modifier_check		749994	0					
ANR	750384	ArgumentList	ms		749994	1					
ANR	750385	Argument	ms		749994	0					
ANR	750386	Identifier	ms		749994	0					
ANR	750387	Argument	m		749994	1					
ANR	750388	Identifier	m		749994	0					
ANR	750389	UnaryOperationExpression	- 1		749994	1					
ANR	750390	UnaryOperator	-		749994	0					
ANR	750391	PrimaryExpression	1		749994	1					
ANR	750392	GotoStatement	goto out ;	1687:2:38987:38995	749994	1	True				
ANR	750393	Identifier	out		749994	0					
ANR	750394	ExpressionStatement	* lp = l	1688:1:38998:39005	749994	5	True				
ANR	750395	AssignmentExpression	* lp = l		749994	0		=			
ANR	750396	UnaryOperationExpression	* lp		749994	0					
ANR	750397	UnaryOperator	*		749994	0					
ANR	750398	Identifier	lp		749994	1					
ANR	750399	Identifier	l		749994	1					
ANR	750400	ReturnStatement	return 0 ;	1689:1:39008:39016	749994	6	True				
ANR	750401	PrimaryExpression	0		749994	0					
ANR	750402	Label	out :	1690:0:39018:39021	749994	7	True				
ANR	750403	Identifier	out		749994	0					
ANR	750404	ExpressionStatement	* lp = l	1691:1:39024:39031	749994	8	True				
ANR	750405	AssignmentExpression	* lp = l		749994	0		=			
ANR	750406	UnaryOperationExpression	* lp		749994	0					
ANR	750407	UnaryOperator	*		749994	0					
ANR	750408	Identifier	lp		749994	1					
ANR	750409	Identifier	l		749994	1					
ANR	750410	ReturnStatement	return - 1 ;	1692:1:39034:39043	749994	9	True				
ANR	750411	UnaryOperationExpression	- 1		749994	0					
ANR	750412	UnaryOperator	-		749994	0					
ANR	750413	PrimaryExpression	1		749994	1					
ANR	750414	ReturnType	int		749994	1					
ANR	750415	Identifier	parse_string_modifier		749994	2					
ANR	750416	ParameterList	"struct magic_set * ms , struct magic * m , const char * * lp"		749994	3					
ANR	750417	Parameter	struct magic_set * ms	1595:22:36699:36718	749994	0	True				
ANR	750418	ParameterType	struct magic_set *		749994	0					
ANR	750419	Identifier	ms		749994	1					
ANR	750420	Parameter	struct magic * m	1595:44:36721:36735	749994	1	True				
ANR	750421	ParameterType	struct magic *		749994	0					
ANR	750422	Identifier	m		749994	1					
ANR	750423	Parameter	const char * * lp	1595:61:36738:36752	749994	2	True				
ANR	750424	ParameterType	const char * *		749994	0					
ANR	750425	Identifier	lp		749994	1					
ANR	750426	CFGEntryNode	ENTRY		749994		True				
ANR	750427	CFGExitNode	EXIT		749994		True				
ANR	750428	Symbol	STRING_TRIM		749994						
ANR	750429	Symbol	PSTRING_2_LE		749994						
ANR	750430	Symbol	lp		749994						
ANR	750431	Symbol	PSTRING_4_LE		749994						
ANR	750432	Symbol	STRING_COMPACT_WHITESPACE		749994						
ANR	750433	Symbol	STRING_BINTEST		749994						
ANR	750434	Symbol	REGEX_OFFSET_START		749994						
ANR	750435	Symbol	m -> str_flags		749994						
ANR	750436	Symbol	PSTRING_4_BE		749994						
ANR	750437	Symbol	PSTRING_2_BE		749994						
ANR	750438	Symbol	* ms		749994						
ANR	750439	Symbol	m -> type		749994						
ANR	750440	Symbol	have_range		749994						
ANR	750441	Symbol	strtoul		749994						
ANR	750442	Symbol	STRING_IGNORE_UPPERCASE		749994						
ANR	750443	Symbol	* ++ l		749994						
ANR	750444	Symbol	CAST		749994						
ANR	750445	Symbol	STRING_IGNORE_LOWERCASE		749994						
ANR	750446	Symbol	PSTRING_1_LE		749994						
ANR	750447	Symbol	ms		749994						
ANR	750448	Symbol	isspace		749994						
ANR	750449	Symbol	* lp		749994						
ANR	750450	Symbol	uint32_t		749994						
ANR	750451	Symbol	FILE_PSTRING		749994						
ANR	750452	Symbol	m -> str_range		749994						
ANR	750453	Symbol	STRING_COMPACT_OPTIONAL_WHITESPACE		749994						
ANR	750454	Symbol	l		749994						
ANR	750455	Symbol	m		749994						
ANR	750456	Symbol	STRING_TEXTTEST		749994						
ANR	750457	Symbol	string_modifier_check		749994						
ANR	750458	Symbol	t		749994						
ANR	750459	Symbol	* l		749994						
ANR	750460	Symbol	* m		749994						
ANR	750461	Symbol	MAGIC_CHECK		749994						
ANR	750462	Symbol	& t		749994						
ANR	750463	Symbol	ms -> flags		749994						
ANR	750464	Symbol	PSTRING_LENGTH_INCLUDES_ITSELF		749994						
ANR	750465	Function	parse	1698:8:39131:47526							
ANR	750466	FunctionDef	"parse (struct magic_set * ms , struct magic_entry * me , const char * line , size_t lineno , int action)"		750465	0					
ANR	750467	CompoundStatement		1701:0:39236:47526	750465	0					
ANR	750468	Statement	static	1703:1:39266:39271	750465	0	True				
ANR	750469	IdentifierDeclStatement	uint32_t last_cont_level = 0 ;	1703:8:39273:39301	750465	1	True				
ANR	750470	IdentifierDecl	last_cont_level = 0		750465	0					
ANR	750471	IdentifierDeclType	uint32_t		750465	0					
ANR	750472	Identifier	last_cont_level		750465	1					
ANR	750473	AssignmentExpression	last_cont_level = 0		750465	2		=			
ANR	750474	Identifier	last_cont_level		750465	0					
ANR	750475	PrimaryExpression	0		750465	1					
ANR	750476	IdentifierDeclStatement	size_t i ;	1705:1:39311:39319	750465	2	True				
ANR	750477	IdentifierDecl	i		750465	0					
ANR	750478	IdentifierDeclType	size_t		750465	0					
ANR	750479	Identifier	i		750465	1					
ANR	750480	IdentifierDeclStatement	struct magic * m ;	1706:1:39322:39337	750465	3	True				
ANR	750481	IdentifierDecl	* m		750465	0					
ANR	750482	IdentifierDeclType	struct magic *		750465	0					
ANR	750483	Identifier	m		750465	1					
ANR	750484	IdentifierDeclStatement	const char * l = line ;	1707:1:39340:39360	750465	4	True				
ANR	750485	IdentifierDecl	* l = line		750465	0					
ANR	750486	IdentifierDeclType	const char *		750465	0					
ANR	750487	Identifier	l		750465	1					
ANR	750488	AssignmentExpression	* l = line		750465	2		=			
ANR	750489	Identifier	line		750465	0					
ANR	750490	Identifier	line		750465	1					
ANR	750491	IdentifierDeclStatement	char * t ;	1708:1:39363:39370	750465	5	True				
ANR	750492	IdentifierDecl	* t		750465	0					
ANR	750493	IdentifierDeclType	char *		750465	0					
ANR	750494	Identifier	t		750465	1					
ANR	750495	IdentifierDeclStatement	int op ;	1709:1:39373:39379	750465	6	True				
ANR	750496	IdentifierDecl	op		750465	0					
ANR	750497	IdentifierDeclType	int		750465	0					
ANR	750498	Identifier	op		750465	1					
ANR	750499	IdentifierDeclStatement	uint32_t cont_level ;	1710:1:39382:39401	750465	7	True				
ANR	750500	IdentifierDecl	cont_level		750465	0					
ANR	750501	IdentifierDeclType	uint32_t		750465	0					
ANR	750502	Identifier	cont_level		750465	1					
ANR	750503	IdentifierDeclStatement	int32_t diff ;	1711:1:39404:39416	750465	8	True				
ANR	750504	IdentifierDecl	diff		750465	0					
ANR	750505	IdentifierDeclType	int32_t		750465	0					
ANR	750506	Identifier	diff		750465	1					
ANR	750507	ExpressionStatement	cont_level = 0	1713:1:39420:39434	750465	9	True				
ANR	750508	AssignmentExpression	cont_level = 0		750465	0		=			
ANR	750509	Identifier	cont_level		750465	0					
ANR	750510	PrimaryExpression	0		750465	1					
ANR	750511	WhileStatement	while ( * l == '>' )		750465	10					
ANR	750512	Condition	* l == '>'	1718:8:39476:39484	750465	0	True				
ANR	750513	EqualityExpression	* l == '>'		750465	0		==			
ANR	750514	UnaryOperationExpression	* l		750465	0					
ANR	750515	UnaryOperator	*		750465	0					
ANR	750516	Identifier	l		750465	1					
ANR	750517	PrimaryExpression	'>'		750465	1					
ANR	750518	CompoundStatement		18:19:250:250	750465	1					
ANR	750519	ExpressionStatement	++ l	1719:2:39491:39494	750465	0	True				
ANR	750520	UnaryExpression	++ l		750465	0					
ANR	750521	IncDec	++		750465	0					
ANR	750522	Identifier	l		750465	1					
ANR	750523	ExpressionStatement	cont_level ++	1720:2:39515:39527	750465	1	True				
ANR	750524	PostIncDecOperationExpression	cont_level ++		750465	0					
ANR	750525	Identifier	cont_level		750465	0					
ANR	750526	IncDec	++		750465	1					
ANR	750527	IfStatement	if ( cont_level == 0 || cont_level > last_cont_level )		750465	11					
ANR	750528	Condition	cont_level == 0 || cont_level > last_cont_level	1723:5:39565:39611	750465	0	True				
ANR	750529	OrExpression	cont_level == 0 || cont_level > last_cont_level		750465	0		||			
ANR	750530	EqualityExpression	cont_level == 0		750465	0		==			
ANR	750531	Identifier	cont_level		750465	0					
ANR	750532	PrimaryExpression	0		750465	1					
ANR	750533	RelationalExpression	cont_level > last_cont_level		750465	1		>			
ANR	750534	Identifier	cont_level		750465	0					
ANR	750535	Identifier	last_cont_level		750465	1					
ANR	750536	IfStatement	"if ( file_check_mem ( ms , cont_level ) == - 1 )"		750465	1					
ANR	750537	Condition	"file_check_mem ( ms , cont_level ) == - 1"	1724:6:39620:39655	750465	0	True				
ANR	750538	EqualityExpression	"file_check_mem ( ms , cont_level ) == - 1"		750465	0		==			
ANR	750539	CallExpression	"file_check_mem ( ms , cont_level )"		750465	0					
ANR	750540	Callee	file_check_mem		750465	0					
ANR	750541	Identifier	file_check_mem		750465	0					
ANR	750542	ArgumentList	ms		750465	1					
ANR	750543	Argument	ms		750465	0					
ANR	750544	Identifier	ms		750465	0					
ANR	750545	Argument	cont_level		750465	1					
ANR	750546	Identifier	cont_level		750465	0					
ANR	750547	UnaryOperationExpression	- 1		750465	1					
ANR	750548	UnaryOperator	-		750465	0					
ANR	750549	PrimaryExpression	1		750465	1					
ANR	750550	ReturnStatement	return - 1 ;	1725:3:39661:39670	750465	1	True				
ANR	750551	UnaryOperationExpression	- 1		750465	0					
ANR	750552	UnaryOperator	-		750465	0					
ANR	750553	PrimaryExpression	1		750465	1					
ANR	750554	ExpressionStatement	last_cont_level = cont_level	1726:1:39673:39701	750465	12	True				
ANR	750555	AssignmentExpression	last_cont_level = cont_level		750465	0		=			
ANR	750556	Identifier	last_cont_level		750465	0					
ANR	750557	Identifier	cont_level		750465	1					
ANR	750558	IfStatement	if ( cont_level != 0 )		750465	13					
ANR	750559	Condition	cont_level != 0	1728:5:39715:39729	750465	0	True				
ANR	750560	EqualityExpression	cont_level != 0		750465	0		!=			
ANR	750561	Identifier	cont_level		750465	0					
ANR	750562	PrimaryExpression	0		750465	1					
ANR	750563	CompoundStatement		28:22:495:495	750465	1					
ANR	750564	IfStatement	if ( me -> mp == NULL )		750465	0					
ANR	750565	Condition	me -> mp == NULL	1729:6:39740:39753	750465	0	True				
ANR	750566	EqualityExpression	me -> mp == NULL		750465	0		==			
ANR	750567	PtrMemberAccess	me -> mp		750465	0					
ANR	750568	Identifier	me		750465	0					
ANR	750569	Identifier	mp		750465	1					
ANR	750570	Identifier	NULL		750465	1					
ANR	750571	CompoundStatement		29:22:519:519	750465	1					
ANR	750572	ExpressionStatement	"file_magerror ( ms , ""No current entry for continuation"" )"	1730:3:39761:39815	750465	0	True				
ANR	750573	CallExpression	"file_magerror ( ms , ""No current entry for continuation"" )"		750465	0					
ANR	750574	Callee	file_magerror		750465	0					
ANR	750575	Identifier	file_magerror		750465	0					
ANR	750576	ArgumentList	ms		750465	1					
ANR	750577	Argument	ms		750465	0					
ANR	750578	Identifier	ms		750465	0					
ANR	750579	Argument	"""No current entry for continuation"""		750465	1					
ANR	750580	PrimaryExpression	"""No current entry for continuation"""		750465	0					
ANR	750581	ReturnStatement	return - 1 ;	1731:3:39820:39829	750465	1	True				
ANR	750582	UnaryOperationExpression	- 1		750465	0					
ANR	750583	UnaryOperator	-		750465	0					
ANR	750584	PrimaryExpression	1		750465	1					
ANR	750585	IfStatement	if ( me -> cont_count == 0 )		750465	1					
ANR	750586	Condition	me -> cont_count == 0	1733:6:39841:39859	750465	0	True				
ANR	750587	EqualityExpression	me -> cont_count == 0		750465	0		==			
ANR	750588	PtrMemberAccess	me -> cont_count		750465	0					
ANR	750589	Identifier	me		750465	0					
ANR	750590	Identifier	cont_count		750465	1					
ANR	750591	PrimaryExpression	0		750465	1					
ANR	750592	CompoundStatement		33:27:625:625	750465	1					
ANR	750593	ExpressionStatement	"file_magerror ( ms , ""Continuations present with 0 count"" )"	1734:3:39867:39922	750465	0	True				
ANR	750594	CallExpression	"file_magerror ( ms , ""Continuations present with 0 count"" )"		750465	0					
ANR	750595	Callee	file_magerror		750465	0					
ANR	750596	Identifier	file_magerror		750465	0					
ANR	750597	ArgumentList	ms		750465	1					
ANR	750598	Argument	ms		750465	0					
ANR	750599	Identifier	ms		750465	0					
ANR	750600	Argument	"""Continuations present with 0 count"""		750465	1					
ANR	750601	PrimaryExpression	"""Continuations present with 0 count"""		750465	0					
ANR	750602	ReturnStatement	return - 1 ;	1735:3:39927:39936	750465	1	True				
ANR	750603	UnaryOperationExpression	- 1		750465	0					
ANR	750604	UnaryOperator	-		750465	0					
ANR	750605	PrimaryExpression	1		750465	1					
ANR	750606	ExpressionStatement	m = & me -> mp [ me -> cont_count - 1 ]	1737:2:39944:39975	750465	2	True				
ANR	750607	AssignmentExpression	m = & me -> mp [ me -> cont_count - 1 ]		750465	0		=			
ANR	750608	Identifier	m		750465	0					
ANR	750609	UnaryOperationExpression	& me -> mp [ me -> cont_count - 1 ]		750465	1					
ANR	750610	UnaryOperator	&		750465	0					
ANR	750611	ArrayIndexing	me -> mp [ me -> cont_count - 1 ]		750465	1					
ANR	750612	PtrMemberAccess	me -> mp		750465	0					
ANR	750613	Identifier	me		750465	0					
ANR	750614	Identifier	mp		750465	1					
ANR	750615	AdditiveExpression	me -> cont_count - 1		750465	1		-			
ANR	750616	PtrMemberAccess	me -> cont_count		750465	0					
ANR	750617	Identifier	me		750465	0					
ANR	750618	Identifier	cont_count		750465	1					
ANR	750619	PrimaryExpression	1		750465	1					
ANR	750620	ExpressionStatement	diff = ( int32_t ) cont_level - ( int32_t ) m -> cont_level	1738:2:39979:40030	750465	3	True				
ANR	750621	AssignmentExpression	diff = ( int32_t ) cont_level - ( int32_t ) m -> cont_level		750465	0		=			
ANR	750622	Identifier	diff		750465	0					
ANR	750623	AdditiveExpression	( int32_t ) cont_level - ( int32_t ) m -> cont_level		750465	1		-			
ANR	750624	CastExpression	( int32_t ) cont_level		750465	0					
ANR	750625	CastTarget	int32_t		750465	0					
ANR	750626	Identifier	cont_level		750465	1					
ANR	750627	CastExpression	( int32_t ) m -> cont_level		750465	1					
ANR	750628	CastTarget	int32_t		750465	0					
ANR	750629	PtrMemberAccess	m -> cont_level		750465	1					
ANR	750630	Identifier	m		750465	0					
ANR	750631	Identifier	cont_level		750465	1					
ANR	750632	IfStatement	if ( diff > 1 )		750465	4					
ANR	750633	Condition	diff > 1	1739:6:40038:40045	750465	0	True				
ANR	750634	RelationalExpression	diff > 1		750465	0		>			
ANR	750635	Identifier	diff		750465	0					
ANR	750636	PrimaryExpression	1		750465	1					
ANR	750637	Statement	file_magwarn	1740:3:40051:40062	750465	1	True				
ANR	750638	Statement	(	1740:15:40063:40063	750465	5	True				
ANR	750639	Statement	ms	1740:16:40064:40065	750465	6	True				
ANR	750640	Statement	","	1740:18:40066:40066	750465	7	True				
ANR	750641	Statement	"""New continuation level %u is more """	1740:20:40068:40103	750465	8	True				
ANR	750642	Statement	"""than one larger than current level %u"""	1741:7:40112:40150	750465	9	True				
ANR	750643	Statement	","	1741:46:40151:40151	750465	10	True				
ANR	750644	Statement	cont_level	1741:48:40153:40162	750465	11	True				
ANR	750645	Statement	","	1741:58:40163:40163	750465	12	True				
ANR	750646	Statement	m	1742:7:40172:40172	750465	13	True				
ANR	750647	Statement	->	1742:8:40173:40174	750465	14	True				
ANR	750648	Statement	cont_level	1742:10:40175:40184	750465	15	True				
ANR	750649	Statement	)	1742:20:40185:40185	750465	16	True				
ANR	750650	ExpressionStatement		1742:21:40186:40186	750465	17	True				
ANR	750651	IfStatement	if ( me -> cont_count == me -> max_count )		750465	18					
ANR	750652	Condition	me -> cont_count == me -> max_count	1743:6:40194:40224	750465	0	True				
ANR	750653	EqualityExpression	me -> cont_count == me -> max_count		750465	0		==			
ANR	750654	PtrMemberAccess	me -> cont_count		750465	0					
ANR	750655	Identifier	me		750465	0					
ANR	750656	Identifier	cont_count		750465	1					
ANR	750657	PtrMemberAccess	me -> max_count		750465	1					
ANR	750658	Identifier	me		750465	0					
ANR	750659	Identifier	max_count		750465	1					
ANR	750660	CompoundStatement		45:3:1016:1056	750465	1					
ANR	750661	IdentifierDeclStatement	struct magic * nm ;	1744:3:40232:40248	750465	0	True				
ANR	750662	IdentifierDecl	* nm		750465	0					
ANR	750663	IdentifierDeclType	struct magic *		750465	0					
ANR	750664	Identifier	nm		750465	1					
ANR	750665	IdentifierDeclStatement	size_t cnt = me -> max_count + ALLOC_CHUNK ;	1745:3:40253:40293	750465	1	True				
ANR	750666	IdentifierDecl	cnt = me -> max_count + ALLOC_CHUNK		750465	0					
ANR	750667	IdentifierDeclType	size_t		750465	0					
ANR	750668	Identifier	cnt		750465	1					
ANR	750669	AssignmentExpression	cnt = me -> max_count + ALLOC_CHUNK		750465	2		=			
ANR	750670	Identifier	cnt		750465	0					
ANR	750671	AdditiveExpression	me -> max_count + ALLOC_CHUNK		750465	1		+			
ANR	750672	PtrMemberAccess	me -> max_count		750465	0					
ANR	750673	Identifier	me		750465	0					
ANR	750674	Identifier	max_count		750465	1					
ANR	750675	Identifier	ALLOC_CHUNK		750465	1					
ANR	750676	Statement	if	1746:3:40298:40299	750465	2	True				
ANR	750677	Statement	(	1746:6:40301:40301	750465	3	True				
ANR	750678	Statement	(	1746:7:40302:40302	750465	4	True				
ANR	750679	Statement	nm	1746:8:40303:40304	750465	5	True				
ANR	750680	Statement	=	1746:11:40306:40306	750465	6	True				
ANR	750681	Statement	CAST	1746:13:40308:40311	750465	7	True				
ANR	750682	Statement	(	1746:17:40312:40312	750465	8	True				
ANR	750683	Statement	struct	1746:18:40313:40318	750465	9	True				
ANR	750684	Statement	magic	1746:25:40320:40324	750465	10	True				
ANR	750685	Statement	*	1746:31:40326:40326	750465	11	True				
ANR	750686	Statement	","	1746:32:40327:40327	750465	12	True				
ANR	750687	Statement	erealloc	1746:34:40329:40336	750465	13	True				
ANR	750688	Statement	(	1746:42:40337:40337	750465	14	True				
ANR	750689	Statement	me	1746:43:40338:40339	750465	15	True				
ANR	750690	Statement	->	1746:45:40340:40341	750465	16	True				
ANR	750691	Statement	mp	1746:47:40342:40343	750465	17	True				
ANR	750692	Statement	","	1746:49:40344:40344	750465	18	True				
ANR	750693	Statement	sizeof	1747:7:40353:40358	750465	19	True				
ANR	750694	Statement	(	1747:13:40359:40359	750465	20	True				
ANR	750695	Statement	*	1747:14:40360:40360	750465	21	True				
ANR	750696	Statement	nm	1747:15:40361:40362	750465	22	True				
ANR	750697	Statement	)	1747:17:40363:40363	750465	23	True				
ANR	750698	Statement	*	1747:19:40365:40365	750465	24	True				
ANR	750699	Statement	cnt	1747:21:40367:40369	750465	25	True				
ANR	750700	Statement	)	1747:24:40370:40370	750465	26	True				
ANR	750701	Statement	)	1747:25:40371:40371	750465	27	True				
ANR	750702	Statement	)	1747:26:40372:40372	750465	28	True				
ANR	750703	Statement	==	1747:28:40374:40375	750465	29	True				
ANR	750704	Statement	NULL	1747:31:40377:40380	750465	30	True				
ANR	750705	Statement	)	1747:35:40381:40381	750465	31	True				
ANR	750706	CompoundStatement		47:37:1146:1146	750465	32					
ANR	750707	ExpressionStatement	"file_oomem ( ms , sizeof ( * nm ) * cnt )"	1748:4:40389:40422	750465	0	True				
ANR	750708	CallExpression	"file_oomem ( ms , sizeof ( * nm ) * cnt )"		750465	0					
ANR	750709	Callee	file_oomem		750465	0					
ANR	750710	Identifier	file_oomem		750465	0					
ANR	750711	ArgumentList	ms		750465	1					
ANR	750712	Argument	ms		750465	0					
ANR	750713	Identifier	ms		750465	0					
ANR	750714	Argument	sizeof ( * nm ) * cnt		750465	1					
ANR	750715	MultiplicativeExpression	sizeof ( * nm ) * cnt		750465	0		*			
ANR	750716	SizeofExpression	sizeof ( * nm )		750465	0					
ANR	750717	Sizeof	sizeof		750465	0					
ANR	750718	UnaryOperationExpression	* nm		750465	1					
ANR	750719	UnaryOperator	*		750465	0					
ANR	750720	Identifier	nm		750465	1					
ANR	750721	Identifier	cnt		750465	1					
ANR	750722	ReturnStatement	return - 1 ;	1749:4:40428:40437	750465	1	True				
ANR	750723	UnaryOperationExpression	- 1		750465	0					
ANR	750724	UnaryOperator	-		750465	0					
ANR	750725	PrimaryExpression	1		750465	1					
ANR	750726	ExpressionStatement	me -> mp = m = nm	1751:3:40447:40462	750465	33	True				
ANR	750727	AssignmentExpression	me -> mp = m = nm		750465	0		=			
ANR	750728	PtrMemberAccess	me -> mp		750465	0					
ANR	750729	Identifier	me		750465	0					
ANR	750730	Identifier	mp		750465	1					
ANR	750731	AssignmentExpression	m = nm		750465	1		=			
ANR	750732	Identifier	m		750465	0					
ANR	750733	Identifier	nm		750465	1					
ANR	750734	ExpressionStatement	"me -> max_count = CAST ( uint32_t , cnt )"	1752:3:40467:40502	750465	34	True				
ANR	750735	AssignmentExpression	"me -> max_count = CAST ( uint32_t , cnt )"		750465	0		=			
ANR	750736	PtrMemberAccess	me -> max_count		750465	0					
ANR	750737	Identifier	me		750465	0					
ANR	750738	Identifier	max_count		750465	1					
ANR	750739	CallExpression	"CAST ( uint32_t , cnt )"		750465	1					
ANR	750740	Callee	CAST		750465	0					
ANR	750741	Identifier	CAST		750465	0					
ANR	750742	ArgumentList	uint32_t		750465	1					
ANR	750743	Argument	uint32_t		750465	0					
ANR	750744	Identifier	uint32_t		750465	0					
ANR	750745	Argument	cnt		750465	1					
ANR	750746	Identifier	cnt		750465	0					
ANR	750747	ExpressionStatement	m = & me -> mp [ me -> cont_count ++ ]	1754:2:40510:40539	750465	19	True				
ANR	750748	AssignmentExpression	m = & me -> mp [ me -> cont_count ++ ]		750465	0		=			
ANR	750749	Identifier	m		750465	0					
ANR	750750	UnaryOperationExpression	& me -> mp [ me -> cont_count ++ ]		750465	1					
ANR	750751	UnaryOperator	&		750465	0					
ANR	750752	ArrayIndexing	me -> mp [ me -> cont_count ++ ]		750465	1					
ANR	750753	PtrMemberAccess	me -> mp		750465	0					
ANR	750754	Identifier	me		750465	0					
ANR	750755	Identifier	mp		750465	1					
ANR	750756	PostIncDecOperationExpression	me -> cont_count ++		750465	1					
ANR	750757	PtrMemberAccess	me -> cont_count		750465	0					
ANR	750758	Identifier	me		750465	0					
ANR	750759	Identifier	cont_count		750465	1					
ANR	750760	IncDec	++		750465	1					
ANR	750761	ExpressionStatement	"( void ) memset ( m , 0 , sizeof ( * m ) )"	1755:2:40543:40573	750465	20	True				
ANR	750762	CastExpression	"( void ) memset ( m , 0 , sizeof ( * m ) )"		750465	0					
ANR	750763	CastTarget	void		750465	0					
ANR	750764	CallExpression	"memset ( m , 0 , sizeof ( * m ) )"		750465	1					
ANR	750765	Callee	memset		750465	0					
ANR	750766	Identifier	memset		750465	0					
ANR	750767	ArgumentList	m		750465	1					
ANR	750768	Argument	m		750465	0					
ANR	750769	Identifier	m		750465	0					
ANR	750770	Argument	0		750465	1					
ANR	750771	PrimaryExpression	0		750465	0					
ANR	750772	Argument	sizeof ( * m )		750465	2					
ANR	750773	SizeofExpression	sizeof ( * m )		750465	0					
ANR	750774	Sizeof	sizeof		750465	0					
ANR	750775	UnaryOperationExpression	* m		750465	1					
ANR	750776	UnaryOperator	*		750465	0					
ANR	750777	Identifier	m		750465	1					
ANR	750778	ExpressionStatement	m -> cont_level = cont_level	1756:2:40577:40603	750465	21	True				
ANR	750779	AssignmentExpression	m -> cont_level = cont_level		750465	0		=			
ANR	750780	PtrMemberAccess	m -> cont_level		750465	0					
ANR	750781	Identifier	m		750465	0					
ANR	750782	Identifier	cont_level		750465	1					
ANR	750783	Identifier	cont_level		750465	1					
ANR	750784	ElseStatement	else		750465	0					
ANR	750785	CompoundStatement		58:9:1387:1430	750465	0					
ANR	750786	Statement	static	1758:2:40617:40622	750465	0	True				
ANR	750787	IdentifierDeclStatement	const size_t len = sizeof ( * m ) * ALLOC_CHUNK ;	1758:9:40624:40667	750465	1	True				
ANR	750788	IdentifierDecl	len = sizeof ( * m ) * ALLOC_CHUNK		750465	0					
ANR	750789	IdentifierDeclType	const size_t		750465	0					
ANR	750790	Identifier	len		750465	1					
ANR	750791	AssignmentExpression	len = sizeof ( * m ) * ALLOC_CHUNK		750465	2		=			
ANR	750792	Identifier	len		750465	0					
ANR	750793	MultiplicativeExpression	sizeof ( * m ) * ALLOC_CHUNK		750465	1		*			
ANR	750794	SizeofExpression	sizeof ( * m )		750465	0					
ANR	750795	Sizeof	sizeof		750465	0					
ANR	750796	UnaryOperationExpression	* m		750465	1					
ANR	750797	UnaryOperator	*		750465	0					
ANR	750798	Identifier	m		750465	1					
ANR	750799	Identifier	ALLOC_CHUNK		750465	1					
ANR	750800	IfStatement	if ( me -> mp != NULL )		750465	2					
ANR	750801	Condition	me -> mp != NULL	1759:6:40675:40688	750465	0	True				
ANR	750802	EqualityExpression	me -> mp != NULL		750465	0		!=			
ANR	750803	PtrMemberAccess	me -> mp		750465	0					
ANR	750804	Identifier	me		750465	0					
ANR	750805	Identifier	mp		750465	1					
ANR	750806	Identifier	NULL		750465	1					
ANR	750807	ReturnStatement	return 1 ;	1760:3:40694:40702	750465	1	True				
ANR	750808	PrimaryExpression	1		750465	0					
ANR	750809	Statement	if	1761:2:40706:40707	750465	3	True				
ANR	750810	Statement	(	1761:5:40709:40709	750465	4	True				
ANR	750811	Statement	(	1761:6:40710:40710	750465	5	True				
ANR	750812	Statement	m	1761:7:40711:40711	750465	6	True				
ANR	750813	Statement	=	1761:9:40713:40713	750465	7	True				
ANR	750814	Statement	CAST	1761:11:40715:40718	750465	8	True				
ANR	750815	Statement	(	1761:15:40719:40719	750465	9	True				
ANR	750816	Statement	struct	1761:16:40720:40725	750465	10	True				
ANR	750817	Statement	magic	1761:23:40727:40731	750465	11	True				
ANR	750818	Statement	*	1761:29:40733:40733	750465	12	True				
ANR	750819	Statement	","	1761:30:40734:40734	750465	13	True				
ANR	750820	Statement	emalloc	1761:32:40736:40742	750465	14	True				
ANR	750821	Statement	(	1761:39:40743:40743	750465	15	True				
ANR	750822	Statement	len	1761:40:40744:40746	750465	16	True				
ANR	750823	Statement	)	1761:43:40747:40747	750465	17	True				
ANR	750824	Statement	)	1761:44:40748:40748	750465	18	True				
ANR	750825	Statement	)	1761:45:40749:40749	750465	19	True				
ANR	750826	Statement	==	1761:47:40751:40752	750465	20	True				
ANR	750827	Statement	NULL	1761:50:40754:40757	750465	21	True				
ANR	750828	Statement	)	1761:54:40758:40758	750465	22	True				
ANR	750829	CompoundStatement		61:56:1523:1523	750465	23					
ANR	750830	ExpressionStatement	"file_oomem ( ms , len )"	1762:3:40765:40784	750465	0	True				
ANR	750831	CallExpression	"file_oomem ( ms , len )"		750465	0					
ANR	750832	Callee	file_oomem		750465	0					
ANR	750833	Identifier	file_oomem		750465	0					
ANR	750834	ArgumentList	ms		750465	1					
ANR	750835	Argument	ms		750465	0					
ANR	750836	Identifier	ms		750465	0					
ANR	750837	Argument	len		750465	1					
ANR	750838	Identifier	len		750465	0					
ANR	750839	ReturnStatement	return - 1 ;	1763:3:40789:40798	750465	1	True				
ANR	750840	UnaryOperationExpression	- 1		750465	0					
ANR	750841	UnaryOperator	-		750465	0					
ANR	750842	PrimaryExpression	1		750465	1					
ANR	750843	ExpressionStatement	me -> mp = m	1765:2:40806:40816	750465	24	True				
ANR	750844	AssignmentExpression	me -> mp = m		750465	0		=			
ANR	750845	PtrMemberAccess	me -> mp		750465	0					
ANR	750846	Identifier	me		750465	0					
ANR	750847	Identifier	mp		750465	1					
ANR	750848	Identifier	m		750465	1					
ANR	750849	ExpressionStatement	me -> max_count = ALLOC_CHUNK	1766:2:40820:40847	750465	25	True				
ANR	750850	AssignmentExpression	me -> max_count = ALLOC_CHUNK		750465	0		=			
ANR	750851	PtrMemberAccess	me -> max_count		750465	0					
ANR	750852	Identifier	me		750465	0					
ANR	750853	Identifier	max_count		750465	1					
ANR	750854	Identifier	ALLOC_CHUNK		750465	1					
ANR	750855	ExpressionStatement	"( void ) memset ( m , 0 , sizeof ( * m ) )"	1767:2:40851:40881	750465	26	True				
ANR	750856	CastExpression	"( void ) memset ( m , 0 , sizeof ( * m ) )"		750465	0					
ANR	750857	CastTarget	void		750465	0					
ANR	750858	CallExpression	"memset ( m , 0 , sizeof ( * m ) )"		750465	1					
ANR	750859	Callee	memset		750465	0					
ANR	750860	Identifier	memset		750465	0					
ANR	750861	ArgumentList	m		750465	1					
ANR	750862	Argument	m		750465	0					
ANR	750863	Identifier	m		750465	0					
ANR	750864	Argument	0		750465	1					
ANR	750865	PrimaryExpression	0		750465	0					
ANR	750866	Argument	sizeof ( * m )		750465	2					
ANR	750867	SizeofExpression	sizeof ( * m )		750465	0					
ANR	750868	Sizeof	sizeof		750465	0					
ANR	750869	UnaryOperationExpression	* m		750465	1					
ANR	750870	UnaryOperator	*		750465	0					
ANR	750871	Identifier	m		750465	1					
ANR	750872	ExpressionStatement	m -> factor_op = FILE_FACTOR_OP_NONE	1768:2:40885:40919	750465	27	True				
ANR	750873	AssignmentExpression	m -> factor_op = FILE_FACTOR_OP_NONE		750465	0		=			
ANR	750874	PtrMemberAccess	m -> factor_op		750465	0					
ANR	750875	Identifier	m		750465	0					
ANR	750876	Identifier	factor_op		750465	1					
ANR	750877	Identifier	FILE_FACTOR_OP_NONE		750465	1					
ANR	750878	ExpressionStatement	m -> cont_level = 0	1769:2:40923:40940	750465	28	True				
ANR	750879	AssignmentExpression	m -> cont_level = 0		750465	0		=			
ANR	750880	PtrMemberAccess	m -> cont_level		750465	0					
ANR	750881	Identifier	m		750465	0					
ANR	750882	Identifier	cont_level		750465	1					
ANR	750883	PrimaryExpression	0		750465	1					
ANR	750884	ExpressionStatement	me -> cont_count = 1	1770:2:40944:40962	750465	29	True				
ANR	750885	AssignmentExpression	me -> cont_count = 1		750465	0		=			
ANR	750886	PtrMemberAccess	me -> cont_count		750465	0					
ANR	750887	Identifier	me		750465	0					
ANR	750888	Identifier	cont_count		750465	1					
ANR	750889	PrimaryExpression	1		750465	1					
ANR	750890	ExpressionStatement	"m -> lineno = CAST ( uint32_t , lineno )"	1772:1:40968:41002	750465	14	True				
ANR	750891	AssignmentExpression	"m -> lineno = CAST ( uint32_t , lineno )"		750465	0		=			
ANR	750892	PtrMemberAccess	m -> lineno		750465	0					
ANR	750893	Identifier	m		750465	0					
ANR	750894	Identifier	lineno		750465	1					
ANR	750895	CallExpression	"CAST ( uint32_t , lineno )"		750465	1					
ANR	750896	Callee	CAST		750465	0					
ANR	750897	Identifier	CAST		750465	0					
ANR	750898	ArgumentList	uint32_t		750465	1					
ANR	750899	Argument	uint32_t		750465	0					
ANR	750900	Identifier	uint32_t		750465	0					
ANR	750901	Argument	lineno		750465	1					
ANR	750902	Identifier	lineno		750465	0					
ANR	750903	IfStatement	if ( * l == '&' )		750465	15					
ANR	750904	Condition	* l == '&'	1774:5:41010:41018	750465	0	True				
ANR	750905	EqualityExpression	* l == '&'		750465	0		==			
ANR	750906	UnaryOperationExpression	* l		750465	0					
ANR	750907	UnaryOperator	*		750465	0					
ANR	750908	Identifier	l		750465	1					
ANR	750909	PrimaryExpression	'&'		750465	1					
ANR	750910	CompoundStatement		74:16:1784:1784	750465	1					
ANR	750911	ExpressionStatement	++ l	1775:16:41080:41083	750465	0	True				
ANR	750912	UnaryExpression	++ l		750465	0					
ANR	750913	IncDec	++		750465	0					
ANR	750914	Identifier	l		750465	1					
ANR	750915	ExpressionStatement	m -> flag |= OFFADD	1776:16:41128:41145	750465	1	True				
ANR	750916	AssignmentExpression	m -> flag |= OFFADD		750465	0		|=			
ANR	750917	PtrMemberAccess	m -> flag		750465	0					
ANR	750918	Identifier	m		750465	0					
ANR	750919	Identifier	flag		750465	1					
ANR	750920	Identifier	OFFADD		750465	1					
ANR	750921	IfStatement	if ( * l == '(' )		750465	16					
ANR	750922	Condition	* l == '('	1778:5:41162:41170	750465	0	True				
ANR	750923	EqualityExpression	* l == '('		750465	0		==			
ANR	750924	UnaryOperationExpression	* l		750465	0					
ANR	750925	UnaryOperator	*		750465	0					
ANR	750926	Identifier	l		750465	1					
ANR	750927	PrimaryExpression	'('		750465	1					
ANR	750928	CompoundStatement		78:16:1936:1936	750465	1					
ANR	750929	ExpressionStatement	++ l	1779:2:41177:41180	750465	0	True				
ANR	750930	UnaryExpression	++ l		750465	0					
ANR	750931	IncDec	++		750465	0					
ANR	750932	Identifier	l		750465	1					
ANR	750933	ExpressionStatement	m -> flag |= INDIR	1780:2:41201:41217	750465	1	True				
ANR	750934	AssignmentExpression	m -> flag |= INDIR		750465	0		|=			
ANR	750935	PtrMemberAccess	m -> flag		750465	0					
ANR	750936	Identifier	m		750465	0					
ANR	750937	Identifier	flag		750465	1					
ANR	750938	Identifier	INDIR		750465	1					
ANR	750939	IfStatement	if ( m -> flag & OFFADD )		750465	2					
ANR	750940	Condition	m -> flag & OFFADD	1781:6:41225:41240	750465	0	True				
ANR	750941	BitAndExpression	m -> flag & OFFADD		750465	0		&			
ANR	750942	PtrMemberAccess	m -> flag		750465	0					
ANR	750943	Identifier	m		750465	0					
ANR	750944	Identifier	flag		750465	1					
ANR	750945	Identifier	OFFADD		750465	1					
ANR	750946	ExpressionStatement	m -> flag = ( m -> flag & ~OFFADD ) | INDIROFFADD	1782:3:41246:41289	750465	1	True				
ANR	750947	AssignmentExpression	m -> flag = ( m -> flag & ~OFFADD ) | INDIROFFADD		750465	0		=			
ANR	750948	PtrMemberAccess	m -> flag		750465	0					
ANR	750949	Identifier	m		750465	0					
ANR	750950	Identifier	flag		750465	1					
ANR	750951	InclusiveOrExpression	( m -> flag & ~OFFADD ) | INDIROFFADD		750465	1		|			
ANR	750952	BitAndExpression	m -> flag & ~OFFADD		750465	0		&			
ANR	750953	PtrMemberAccess	m -> flag		750465	0					
ANR	750954	Identifier	m		750465	0					
ANR	750955	Identifier	flag		750465	1					
ANR	750956	Identifier	~OFFADD		750465	1					
ANR	750957	Identifier	INDIROFFADD		750465	1					
ANR	750958	IfStatement	if ( * l == '&' )		750465	3					
ANR	750959	Condition	* l == '&'	1784:6:41298:41306	750465	0	True				
ANR	750960	EqualityExpression	* l == '&'		750465	0		==			
ANR	750961	UnaryOperationExpression	* l		750465	0					
ANR	750962	UnaryOperator	*		750465	0					
ANR	750963	Identifier	l		750465	1					
ANR	750964	PrimaryExpression	'&'		750465	1					
ANR	750965	CompoundStatement		84:17:2072:2072	750465	1					
ANR	750966	ExpressionStatement	++ l	1785:3:41354:41357	750465	0	True				
ANR	750967	UnaryExpression	++ l		750465	0					
ANR	750968	IncDec	++		750465	0					
ANR	750969	Identifier	l		750465	1					
ANR	750970	ExpressionStatement	m -> flag |= OFFADD	1786:3:41389:41406	750465	1	True				
ANR	750971	AssignmentExpression	m -> flag |= OFFADD		750465	0		|=			
ANR	750972	PtrMemberAccess	m -> flag		750465	0					
ANR	750973	Identifier	m		750465	0					
ANR	750974	Identifier	flag		750465	1					
ANR	750975	Identifier	OFFADD		750465	1					
ANR	750976	IfStatement	if ( m -> cont_level == 0 && ( m -> flag & ( OFFADD | INDIROFFADD ) ) )		750465	17					
ANR	750977	Condition	m -> cont_level == 0 && ( m -> flag & ( OFFADD | INDIROFFADD ) )	1790:5:41470:41525	750465	0	True				
ANR	750978	AndExpression	m -> cont_level == 0 && ( m -> flag & ( OFFADD | INDIROFFADD ) )		750465	0		&&			
ANR	750979	EqualityExpression	m -> cont_level == 0		750465	0		==			
ANR	750980	PtrMemberAccess	m -> cont_level		750465	0					
ANR	750981	Identifier	m		750465	0					
ANR	750982	Identifier	cont_level		750465	1					
ANR	750983	PrimaryExpression	0		750465	1					
ANR	750984	BitAndExpression	m -> flag & ( OFFADD | INDIROFFADD )		750465	1		&			
ANR	750985	PtrMemberAccess	m -> flag		750465	0					
ANR	750986	Identifier	m		750465	0					
ANR	750987	Identifier	flag		750465	1					
ANR	750988	InclusiveOrExpression	OFFADD | INDIROFFADD		750465	1		|			
ANR	750989	Identifier	OFFADD		750465	0					
ANR	750990	Identifier	INDIROFFADD		750465	1					
ANR	750991	IfStatement	if ( ms -> flags & MAGIC_CHECK )		750465	1					
ANR	750992	Condition	ms -> flags & MAGIC_CHECK	1791:6:41534:41556	750465	0	True				
ANR	750993	BitAndExpression	ms -> flags & MAGIC_CHECK		750465	0		&			
ANR	750994	PtrMemberAccess	ms -> flags		750465	0					
ANR	750995	Identifier	ms		750465	0					
ANR	750996	Identifier	flags		750465	1					
ANR	750997	Identifier	MAGIC_CHECK		750465	1					
ANR	750998	ExpressionStatement	"file_magwarn ( ms , ""relative offset at level 0"" )"	1792:3:41562:41608	750465	1	True				
ANR	750999	CallExpression	"file_magwarn ( ms , ""relative offset at level 0"" )"		750465	0					
ANR	751000	Callee	file_magwarn		750465	0					
ANR	751001	Identifier	file_magwarn		750465	0					
ANR	751002	ArgumentList	ms		750465	1					
ANR	751003	Argument	ms		750465	0					
ANR	751004	Identifier	ms		750465	0					
ANR	751005	Argument	"""relative offset at level 0"""		750465	1					
ANR	751006	PrimaryExpression	"""relative offset at level 0"""		750465	0					
ANR	751007	ExpressionStatement	"m -> offset = ( uint32_t ) strtoul ( l , & t , 0 )"	1795:1:41649:41688	750465	18	True				
ANR	751008	AssignmentExpression	"m -> offset = ( uint32_t ) strtoul ( l , & t , 0 )"		750465	0		=			
ANR	751009	PtrMemberAccess	m -> offset		750465	0					
ANR	751010	Identifier	m		750465	0					
ANR	751011	Identifier	offset		750465	1					
ANR	751012	CastExpression	"( uint32_t ) strtoul ( l , & t , 0 )"		750465	1					
ANR	751013	CastTarget	uint32_t		750465	0					
ANR	751014	CallExpression	"strtoul ( l , & t , 0 )"		750465	1					
ANR	751015	Callee	strtoul		750465	0					
ANR	751016	Identifier	strtoul		750465	0					
ANR	751017	ArgumentList	l		750465	1					
ANR	751018	Argument	l		750465	0					
ANR	751019	Identifier	l		750465	0					
ANR	751020	Argument	& t		750465	1					
ANR	751021	UnaryOperationExpression	& t		750465	0					
ANR	751022	UnaryOperator	&		750465	0					
ANR	751023	Identifier	t		750465	1					
ANR	751024	Argument	0		750465	2					
ANR	751025	PrimaryExpression	0		750465	0					
ANR	751026	IfStatement	if ( l == t )		750465	19					
ANR	751027	Condition	l == t	1796:12:41702:41707	750465	0	True				
ANR	751028	EqualityExpression	l == t		750465	0		==			
ANR	751029	Identifier	l		750465	0					
ANR	751030	Identifier	t		750465	1					
ANR	751031	IfStatement	if ( ms -> flags & MAGIC_CHECK )		750465	1					
ANR	751032	Condition	ms -> flags & MAGIC_CHECK	1797:6:41716:41738	750465	0	True				
ANR	751033	BitAndExpression	ms -> flags & MAGIC_CHECK		750465	0		&			
ANR	751034	PtrMemberAccess	ms -> flags		750465	0					
ANR	751035	Identifier	ms		750465	0					
ANR	751036	Identifier	flags		750465	1					
ANR	751037	Identifier	MAGIC_CHECK		750465	1					
ANR	751038	ExpressionStatement	"file_magwarn ( ms , ""offset `%s' invalid"" , l )"	1798:3:41744:41786	750465	1	True				
ANR	751039	CallExpression	"file_magwarn ( ms , ""offset `%s' invalid"" , l )"		750465	0					
ANR	751040	Callee	file_magwarn		750465	0					
ANR	751041	Identifier	file_magwarn		750465	0					
ANR	751042	ArgumentList	ms		750465	1					
ANR	751043	Argument	ms		750465	0					
ANR	751044	Identifier	ms		750465	0					
ANR	751045	Argument	"""offset `%s' invalid"""		750465	1					
ANR	751046	PrimaryExpression	"""offset `%s' invalid"""		750465	0					
ANR	751047	Argument	l		750465	2					
ANR	751048	Identifier	l		750465	0					
ANR	751049	ExpressionStatement	l = t	1799:8:41796:41801	750465	20	True				
ANR	751050	AssignmentExpression	l = t		750465	0		=			
ANR	751051	Identifier	l		750465	0					
ANR	751052	Identifier	t		750465	1					
ANR	751053	IfStatement	if ( m -> flag & INDIR )		750465	21					
ANR	751054	Condition	m -> flag & INDIR	1801:5:41809:41823	750465	0	True				
ANR	751055	BitAndExpression	m -> flag & INDIR		750465	0		&			
ANR	751056	PtrMemberAccess	m -> flag		750465	0					
ANR	751057	Identifier	m		750465	0					
ANR	751058	Identifier	flag		750465	1					
ANR	751059	Identifier	INDIR		750465	1					
ANR	751060	CompoundStatement		101:22:2589:2589	750465	1					
ANR	751061	ExpressionStatement	m -> in_type = FILE_LONG	1802:2:41830:41852	750465	0	True				
ANR	751062	AssignmentExpression	m -> in_type = FILE_LONG		750465	0		=			
ANR	751063	PtrMemberAccess	m -> in_type		750465	0					
ANR	751064	Identifier	m		750465	0					
ANR	751065	Identifier	in_type		750465	1					
ANR	751066	Identifier	FILE_LONG		750465	1					
ANR	751067	ExpressionStatement	m -> in_offset = 0	1803:2:41856:41872	750465	1	True				
ANR	751068	AssignmentExpression	m -> in_offset = 0		750465	0		=			
ANR	751069	PtrMemberAccess	m -> in_offset		750465	0					
ANR	751070	Identifier	m		750465	0					
ANR	751071	Identifier	in_offset		750465	1					
ANR	751072	PrimaryExpression	0		750465	1					
ANR	751073	IfStatement	if ( * l == '.' )		750465	2					
ANR	751074	Condition	* l == '.'	1807:6:41918:41926	750465	0	True				
ANR	751075	EqualityExpression	* l == '.'		750465	0		==			
ANR	751076	UnaryOperationExpression	* l		750465	0					
ANR	751077	UnaryOperator	*		750465	0					
ANR	751078	Identifier	l		750465	1					
ANR	751079	PrimaryExpression	'.'		750465	1					
ANR	751080	CompoundStatement		107:17:2692:2692	750465	1					
ANR	751081	ExpressionStatement	l ++	1808:3:41934:41937	750465	0	True				
ANR	751082	PostIncDecOperationExpression	l ++		750465	0					
ANR	751083	Identifier	l		750465	0					
ANR	751084	IncDec	++		750465	1					
ANR	751085	SwitchStatement	switch ( * l )		750465	1					
ANR	751086	Condition	* l	1809:11:41950:41951	750465	0	True				
ANR	751087	UnaryOperationExpression	* l		750465	0					
ANR	751088	UnaryOperator	*		750465	0					
ANR	751089	Identifier	l		750465	1					
ANR	751090	CompoundStatement		109:15:2717:2717	750465	1					
ANR	751091	Label	case 'l' :	1810:3:41959:41967	750465	0	True				
ANR	751092	ExpressionStatement	m -> in_type = FILE_LELONG	1811:4:41973:41997	750465	1	True				
ANR	751093	AssignmentExpression	m -> in_type = FILE_LELONG		750465	0		=			
ANR	751094	PtrMemberAccess	m -> in_type		750465	0					
ANR	751095	Identifier	m		750465	0					
ANR	751096	Identifier	in_type		750465	1					
ANR	751097	Identifier	FILE_LELONG		750465	1					
ANR	751098	BreakStatement	break ;	1812:4:42003:42008	750465	2	True				
ANR	751099	Label	case 'L' :	1813:3:42013:42021	750465	3	True				
ANR	751100	ExpressionStatement	m -> in_type = FILE_BELONG	1814:4:42027:42051	750465	4	True				
ANR	751101	AssignmentExpression	m -> in_type = FILE_BELONG		750465	0		=			
ANR	751102	PtrMemberAccess	m -> in_type		750465	0					
ANR	751103	Identifier	m		750465	0					
ANR	751104	Identifier	in_type		750465	1					
ANR	751105	Identifier	FILE_BELONG		750465	1					
ANR	751106	BreakStatement	break ;	1815:4:42057:42062	750465	5	True				
ANR	751107	Label	case 'm' :	1816:3:42067:42075	750465	6	True				
ANR	751108	ExpressionStatement	m -> in_type = FILE_MELONG	1817:4:42081:42105	750465	7	True				
ANR	751109	AssignmentExpression	m -> in_type = FILE_MELONG		750465	0		=			
ANR	751110	PtrMemberAccess	m -> in_type		750465	0					
ANR	751111	Identifier	m		750465	0					
ANR	751112	Identifier	in_type		750465	1					
ANR	751113	Identifier	FILE_MELONG		750465	1					
ANR	751114	BreakStatement	break ;	1818:4:42111:42116	750465	8	True				
ANR	751115	Label	case 'h' :	1819:3:42121:42129	750465	9	True				
ANR	751116	Label	case 's' :	1820:3:42134:42142	750465	10	True				
ANR	751117	ExpressionStatement	m -> in_type = FILE_LESHORT	1821:4:42148:42173	750465	11	True				
ANR	751118	AssignmentExpression	m -> in_type = FILE_LESHORT		750465	0		=			
ANR	751119	PtrMemberAccess	m -> in_type		750465	0					
ANR	751120	Identifier	m		750465	0					
ANR	751121	Identifier	in_type		750465	1					
ANR	751122	Identifier	FILE_LESHORT		750465	1					
ANR	751123	BreakStatement	break ;	1822:4:42179:42184	750465	12	True				
ANR	751124	Label	case 'H' :	1823:3:42189:42197	750465	13	True				
ANR	751125	Label	case 'S' :	1824:3:42202:42210	750465	14	True				
ANR	751126	ExpressionStatement	m -> in_type = FILE_BESHORT	1825:4:42216:42241	750465	15	True				
ANR	751127	AssignmentExpression	m -> in_type = FILE_BESHORT		750465	0		=			
ANR	751128	PtrMemberAccess	m -> in_type		750465	0					
ANR	751129	Identifier	m		750465	0					
ANR	751130	Identifier	in_type		750465	1					
ANR	751131	Identifier	FILE_BESHORT		750465	1					
ANR	751132	BreakStatement	break ;	1826:4:42247:42252	750465	16	True				
ANR	751133	Label	case 'c' :	1827:3:42257:42265	750465	17	True				
ANR	751134	Label	case 'b' :	1828:3:42270:42278	750465	18	True				
ANR	751135	Label	case 'C' :	1829:3:42283:42291	750465	19	True				
ANR	751136	Label	case 'B' :	1830:3:42296:42304	750465	20	True				
ANR	751137	ExpressionStatement	m -> in_type = FILE_BYTE	1831:4:42310:42332	750465	21	True				
ANR	751138	AssignmentExpression	m -> in_type = FILE_BYTE		750465	0		=			
ANR	751139	PtrMemberAccess	m -> in_type		750465	0					
ANR	751140	Identifier	m		750465	0					
ANR	751141	Identifier	in_type		750465	1					
ANR	751142	Identifier	FILE_BYTE		750465	1					
ANR	751143	BreakStatement	break ;	1832:4:42338:42343	750465	22	True				
ANR	751144	Label	case 'e' :	1833:3:42348:42356	750465	23	True				
ANR	751145	Label	case 'f' :	1834:3:42361:42369	750465	24	True				
ANR	751146	Label	case 'g' :	1835:3:42374:42382	750465	25	True				
ANR	751147	ExpressionStatement	m -> in_type = FILE_LEDOUBLE	1836:4:42388:42414	750465	26	True				
ANR	751148	AssignmentExpression	m -> in_type = FILE_LEDOUBLE		750465	0		=			
ANR	751149	PtrMemberAccess	m -> in_type		750465	0					
ANR	751150	Identifier	m		750465	0					
ANR	751151	Identifier	in_type		750465	1					
ANR	751152	Identifier	FILE_LEDOUBLE		750465	1					
ANR	751153	BreakStatement	break ;	1837:4:42420:42425	750465	27	True				
ANR	751154	Label	case 'E' :	1838:3:42430:42438	750465	28	True				
ANR	751155	Label	case 'F' :	1839:3:42443:42451	750465	29	True				
ANR	751156	Label	case 'G' :	1840:3:42456:42464	750465	30	True				
ANR	751157	ExpressionStatement	m -> in_type = FILE_BEDOUBLE	1841:4:42470:42496	750465	31	True				
ANR	751158	AssignmentExpression	m -> in_type = FILE_BEDOUBLE		750465	0		=			
ANR	751159	PtrMemberAccess	m -> in_type		750465	0					
ANR	751160	Identifier	m		750465	0					
ANR	751161	Identifier	in_type		750465	1					
ANR	751162	Identifier	FILE_BEDOUBLE		750465	1					
ANR	751163	BreakStatement	break ;	1842:4:42502:42507	750465	32	True				
ANR	751164	Label	case 'i' :	1843:3:42512:42520	750465	33	True				
ANR	751165	ExpressionStatement	m -> in_type = FILE_LEID3	1844:4:42526:42549	750465	34	True				
ANR	751166	AssignmentExpression	m -> in_type = FILE_LEID3		750465	0		=			
ANR	751167	PtrMemberAccess	m -> in_type		750465	0					
ANR	751168	Identifier	m		750465	0					
ANR	751169	Identifier	in_type		750465	1					
ANR	751170	Identifier	FILE_LEID3		750465	1					
ANR	751171	BreakStatement	break ;	1845:4:42555:42560	750465	35	True				
ANR	751172	Label	case 'I' :	1846:3:42565:42573	750465	36	True				
ANR	751173	ExpressionStatement	m -> in_type = FILE_BEID3	1847:4:42579:42602	750465	37	True				
ANR	751174	AssignmentExpression	m -> in_type = FILE_BEID3		750465	0		=			
ANR	751175	PtrMemberAccess	m -> in_type		750465	0					
ANR	751176	Identifier	m		750465	0					
ANR	751177	Identifier	in_type		750465	1					
ANR	751178	Identifier	FILE_BEID3		750465	1					
ANR	751179	BreakStatement	break ;	1848:4:42608:42613	750465	38	True				
ANR	751180	Label	default :	1849:3:42618:42625	750465	39	True				
ANR	751181	Identifier	default		750465	0					
ANR	751182	IfStatement	if ( ms -> flags & MAGIC_CHECK )		750465	40					
ANR	751183	Condition	ms -> flags & MAGIC_CHECK	1850:8:42635:42657	750465	0	True				
ANR	751184	BitAndExpression	ms -> flags & MAGIC_CHECK		750465	0		&			
ANR	751185	PtrMemberAccess	ms -> flags		750465	0					
ANR	751186	Identifier	ms		750465	0					
ANR	751187	Identifier	flags		750465	1					
ANR	751188	Identifier	MAGIC_CHECK		750465	1					
ANR	751189	ExpressionStatement	"file_magwarn ( ms , ""indirect offset type `%c' invalid"" , * l )"	1851:5:42665:42740	750465	1	True				
ANR	751190	CallExpression	"file_magwarn ( ms , ""indirect offset type `%c' invalid"" , * l )"		750465	0					
ANR	751191	Callee	file_magwarn		750465	0					
ANR	751192	Identifier	file_magwarn		750465	0					
ANR	751193	ArgumentList	ms		750465	1					
ANR	751194	Argument	ms		750465	0					
ANR	751195	Identifier	ms		750465	0					
ANR	751196	Argument	"""indirect offset type `%c' invalid"""		750465	1					
ANR	751197	PrimaryExpression	"""indirect offset type `%c' invalid"""		750465	0					
ANR	751198	Argument	* l		750465	2					
ANR	751199	UnaryOperationExpression	* l		750465	0					
ANR	751200	UnaryOperator	*		750465	0					
ANR	751201	Identifier	l		750465	1					
ANR	751202	BreakStatement	break ;	1854:4:42746:42751	750465	41	True				
ANR	751203	ExpressionStatement	l ++	1856:3:42761:42764	750465	2	True				
ANR	751204	PostIncDecOperationExpression	l ++		750465	0					
ANR	751205	Identifier	l		750465	0					
ANR	751206	IncDec	++		750465	1					
ANR	751207	ExpressionStatement	m -> in_op = 0	1859:2:42773:42785	750465	3	True				
ANR	751208	AssignmentExpression	m -> in_op = 0		750465	0		=			
ANR	751209	PtrMemberAccess	m -> in_op		750465	0					
ANR	751210	Identifier	m		750465	0					
ANR	751211	Identifier	in_op		750465	1					
ANR	751212	PrimaryExpression	0		750465	1					
ANR	751213	IfStatement	if ( * l == '~' )		750465	4					
ANR	751214	Condition	* l == '~'	1860:6:42793:42801	750465	0	True				
ANR	751215	EqualityExpression	* l == '~'		750465	0		==			
ANR	751216	UnaryOperationExpression	* l		750465	0					
ANR	751217	UnaryOperator	*		750465	0					
ANR	751218	Identifier	l		750465	1					
ANR	751219	PrimaryExpression	'~'		750465	1					
ANR	751220	CompoundStatement		160:17:3567:3567	750465	1					
ANR	751221	ExpressionStatement	m -> in_op |= FILE_OPINVERSE	1861:3:42809:42835	750465	0	True				
ANR	751222	AssignmentExpression	m -> in_op |= FILE_OPINVERSE		750465	0		|=			
ANR	751223	PtrMemberAccess	m -> in_op		750465	0					
ANR	751224	Identifier	m		750465	0					
ANR	751225	Identifier	in_op		750465	1					
ANR	751226	Identifier	FILE_OPINVERSE		750465	1					
ANR	751227	ExpressionStatement	l ++	1862:3:42840:42843	750465	1	True				
ANR	751228	PostIncDecOperationExpression	l ++		750465	0					
ANR	751229	Identifier	l		750465	0					
ANR	751230	IncDec	++		750465	1					
ANR	751231	IfStatement	if ( ( op = get_op ( * l ) ) != - 1 )		750465	5					
ANR	751232	Condition	( op = get_op ( * l ) ) != - 1	1864:6:42855:42877	750465	0	True				
ANR	751233	EqualityExpression	( op = get_op ( * l ) ) != - 1		750465	0		!=			
ANR	751234	AssignmentExpression	op = get_op ( * l )		750465	0		=			
ANR	751235	Identifier	op		750465	0					
ANR	751236	CallExpression	get_op ( * l )		750465	1					
ANR	751237	Callee	get_op		750465	0					
ANR	751238	Identifier	get_op		750465	0					
ANR	751239	ArgumentList	* l		750465	1					
ANR	751240	Argument	* l		750465	0					
ANR	751241	UnaryOperationExpression	* l		750465	0					
ANR	751242	UnaryOperator	*		750465	0					
ANR	751243	Identifier	l		750465	1					
ANR	751244	UnaryOperationExpression	- 1		750465	1					
ANR	751245	UnaryOperator	-		750465	0					
ANR	751246	PrimaryExpression	1		750465	1					
ANR	751247	CompoundStatement		164:31:3643:3643	750465	1					
ANR	751248	ExpressionStatement	m -> in_op |= op	1865:3:42885:42899	750465	0	True				
ANR	751249	AssignmentExpression	m -> in_op |= op		750465	0		|=			
ANR	751250	PtrMemberAccess	m -> in_op		750465	0					
ANR	751251	Identifier	m		750465	0					
ANR	751252	Identifier	in_op		750465	1					
ANR	751253	Identifier	op		750465	1					
ANR	751254	ExpressionStatement	l ++	1866:3:42904:42907	750465	1	True				
ANR	751255	PostIncDecOperationExpression	l ++		750465	0					
ANR	751256	Identifier	l		750465	0					
ANR	751257	IncDec	++		750465	1					
ANR	751258	IfStatement	if ( * l == '(' )		750465	6					
ANR	751259	Condition	* l == '('	1868:6:42919:42927	750465	0	True				
ANR	751260	EqualityExpression	* l == '('		750465	0		==			
ANR	751261	UnaryOperationExpression	* l		750465	0					
ANR	751262	UnaryOperator	*		750465	0					
ANR	751263	Identifier	l		750465	1					
ANR	751264	PrimaryExpression	'('		750465	1					
ANR	751265	CompoundStatement		168:17:3693:3693	750465	1					
ANR	751266	ExpressionStatement	m -> in_op |= FILE_OPINDIRECT	1869:3:42935:42962	750465	0	True				
ANR	751267	AssignmentExpression	m -> in_op |= FILE_OPINDIRECT		750465	0		|=			
ANR	751268	PtrMemberAccess	m -> in_op		750465	0					
ANR	751269	Identifier	m		750465	0					
ANR	751270	Identifier	in_op		750465	1					
ANR	751271	Identifier	FILE_OPINDIRECT		750465	1					
ANR	751272	ExpressionStatement	l ++	1870:3:42967:42970	750465	1	True				
ANR	751273	PostIncDecOperationExpression	l ++		750465	0					
ANR	751274	Identifier	l		750465	0					
ANR	751275	IncDec	++		750465	1					
ANR	751276	IfStatement	if ( isdigit ( ( unsigned char ) * l ) || * l == '-' )		750465	7					
ANR	751277	Condition	isdigit ( ( unsigned char ) * l ) || * l == '-'	1872:6:42982:43020	750465	0	True				
ANR	751278	OrExpression	isdigit ( ( unsigned char ) * l ) || * l == '-'		750465	0		||			
ANR	751279	CallExpression	isdigit ( ( unsigned char ) * l )		750465	0					
ANR	751280	Callee	isdigit		750465	0					
ANR	751281	Identifier	isdigit		750465	0					
ANR	751282	ArgumentList	( unsigned char ) * l		750465	1					
ANR	751283	Argument	( unsigned char ) * l		750465	0					
ANR	751284	CastExpression	( unsigned char ) * l		750465	0					
ANR	751285	CastTarget	unsigned char		750465	0					
ANR	751286	UnaryOperationExpression	* l		750465	1					
ANR	751287	UnaryOperator	*		750465	0					
ANR	751288	Identifier	l		750465	1					
ANR	751289	EqualityExpression	* l == '-'		750465	1		==			
ANR	751290	UnaryOperationExpression	* l		750465	0					
ANR	751291	UnaryOperator	*		750465	0					
ANR	751292	Identifier	l		750465	1					
ANR	751293	PrimaryExpression	'-'		750465	1					
ANR	751294	CompoundStatement		172:47:3786:3786	750465	1					
ANR	751295	ExpressionStatement	"m -> in_offset = ( int32_t ) strtol ( l , & t , 0 )"	1873:3:43028:43068	750465	0	True				
ANR	751296	AssignmentExpression	"m -> in_offset = ( int32_t ) strtol ( l , & t , 0 )"		750465	0		=			
ANR	751297	PtrMemberAccess	m -> in_offset		750465	0					
ANR	751298	Identifier	m		750465	0					
ANR	751299	Identifier	in_offset		750465	1					
ANR	751300	CastExpression	"( int32_t ) strtol ( l , & t , 0 )"		750465	1					
ANR	751301	CastTarget	int32_t		750465	0					
ANR	751302	CallExpression	"strtol ( l , & t , 0 )"		750465	1					
ANR	751303	Callee	strtol		750465	0					
ANR	751304	Identifier	strtol		750465	0					
ANR	751305	ArgumentList	l		750465	1					
ANR	751306	Argument	l		750465	0					
ANR	751307	Identifier	l		750465	0					
ANR	751308	Argument	& t		750465	1					
ANR	751309	UnaryOperationExpression	& t		750465	0					
ANR	751310	UnaryOperator	&		750465	0					
ANR	751311	Identifier	t		750465	1					
ANR	751312	Argument	0		750465	2					
ANR	751313	PrimaryExpression	0		750465	0					
ANR	751314	IfStatement	if ( l == t )		750465	1					
ANR	751315	Condition	l == t	1874:7:43077:43082	750465	0	True				
ANR	751316	EqualityExpression	l == t		750465	0		==			
ANR	751317	Identifier	l		750465	0					
ANR	751318	Identifier	t		750465	1					
ANR	751319	IfStatement	if ( ms -> flags & MAGIC_CHECK )		750465	1					
ANR	751320	Condition	ms -> flags & MAGIC_CHECK	1875:8:43093:43115	750465	0	True				
ANR	751321	BitAndExpression	ms -> flags & MAGIC_CHECK		750465	0		&			
ANR	751322	PtrMemberAccess	ms -> flags		750465	0					
ANR	751323	Identifier	ms		750465	0					
ANR	751324	Identifier	flags		750465	1					
ANR	751325	Identifier	MAGIC_CHECK		750465	1					
ANR	751326	ExpressionStatement	"file_magwarn ( ms , ""in_offset `%s' invalid"" , l )"	1876:5:43123:43177	750465	1	True				
ANR	751327	CallExpression	"file_magwarn ( ms , ""in_offset `%s' invalid"" , l )"		750465	0					
ANR	751328	Callee	file_magwarn		750465	0					
ANR	751329	Identifier	file_magwarn		750465	0					
ANR	751330	ArgumentList	ms		750465	1					
ANR	751331	Argument	ms		750465	0					
ANR	751332	Identifier	ms		750465	0					
ANR	751333	Argument	"""in_offset `%s' invalid"""		750465	1					
ANR	751334	PrimaryExpression	"""in_offset `%s' invalid"""		750465	0					
ANR	751335	Argument	l		750465	2					
ANR	751336	Identifier	l		750465	0					
ANR	751337	ExpressionStatement	l = t	1878:3:43182:43187	750465	2	True				
ANR	751338	AssignmentExpression	l = t		750465	0		=			
ANR	751339	Identifier	l		750465	0					
ANR	751340	Identifier	t		750465	1					
ANR	751341	IfStatement	if ( * l ++ != ')' || ( ( m -> in_op & FILE_OPINDIRECT ) && * l ++ != ')' ) )		750465	8					
ANR	751342	Condition	* l ++ != ')' || ( ( m -> in_op & FILE_OPINDIRECT ) && * l ++ != ')' )	1880:6:43199:43265	750465	0	True				
ANR	751343	OrExpression	* l ++ != ')' || ( ( m -> in_op & FILE_OPINDIRECT ) && * l ++ != ')' )		750465	0		||			
ANR	751344	EqualityExpression	* l ++ != ')'		750465	0		!=			
ANR	751345	UnaryOperationExpression	* l ++		750465	0					
ANR	751346	UnaryOperator	*		750465	0					
ANR	751347	PostIncDecOperationExpression	l ++		750465	1					
ANR	751348	Identifier	l		750465	0					
ANR	751349	IncDec	++		750465	1					
ANR	751350	PrimaryExpression	')'		750465	1					
ANR	751351	AndExpression	( m -> in_op & FILE_OPINDIRECT ) && * l ++ != ')'		750465	1		&&			
ANR	751352	BitAndExpression	m -> in_op & FILE_OPINDIRECT		750465	0		&			
ANR	751353	PtrMemberAccess	m -> in_op		750465	0					
ANR	751354	Identifier	m		750465	0					
ANR	751355	Identifier	in_op		750465	1					
ANR	751356	Identifier	FILE_OPINDIRECT		750465	1					
ANR	751357	EqualityExpression	* l ++ != ')'		750465	1		!=			
ANR	751358	UnaryOperationExpression	* l ++		750465	0					
ANR	751359	UnaryOperator	*		750465	0					
ANR	751360	PostIncDecOperationExpression	l ++		750465	1					
ANR	751361	Identifier	l		750465	0					
ANR	751362	IncDec	++		750465	1					
ANR	751363	PrimaryExpression	')'		750465	1					
ANR	751364	IfStatement	if ( ms -> flags & MAGIC_CHECK )		750465	1					
ANR	751365	Condition	ms -> flags & MAGIC_CHECK	1882:7:43275:43297	750465	0	True				
ANR	751366	BitAndExpression	ms -> flags & MAGIC_CHECK		750465	0		&			
ANR	751367	PtrMemberAccess	ms -> flags		750465	0					
ANR	751368	Identifier	ms		750465	0					
ANR	751369	Identifier	flags		750465	1					
ANR	751370	Identifier	MAGIC_CHECK		750465	1					
ANR	751371	ExpressionStatement	"file_magwarn ( ms , ""missing ')' in indirect offset"" )"	1883:4:43304:43362	750465	1	True				
ANR	751372	CallExpression	"file_magwarn ( ms , ""missing ')' in indirect offset"" )"		750465	0					
ANR	751373	Callee	file_magwarn		750465	0					
ANR	751374	Identifier	file_magwarn		750465	0					
ANR	751375	ArgumentList	ms		750465	1					
ANR	751376	Argument	ms		750465	0					
ANR	751377	Identifier	ms		750465	0					
ANR	751378	Argument	"""missing ')' in indirect offset"""		750465	1					
ANR	751379	PrimaryExpression	"""missing ')' in indirect offset"""		750465	0					
ANR	751380	ExpressionStatement	EATAB	1886:1:43368:43373	750465	22	True				
ANR	751381	Identifier	EATAB		750465	0					
ANR	751382	ExpressionStatement	"m -> cond = get_cond ( l , & l )"	1889:1:43404:43429	750465	23	True				
ANR	751383	AssignmentExpression	"m -> cond = get_cond ( l , & l )"		750465	0		=			
ANR	751384	PtrMemberAccess	m -> cond		750465	0					
ANR	751385	Identifier	m		750465	0					
ANR	751386	Identifier	cond		750465	1					
ANR	751387	CallExpression	"get_cond ( l , & l )"		750465	1					
ANR	751388	Callee	get_cond		750465	0					
ANR	751389	Identifier	get_cond		750465	0					
ANR	751390	ArgumentList	l		750465	1					
ANR	751391	Argument	l		750465	0					
ANR	751392	Identifier	l		750465	0					
ANR	751393	Argument	& l		750465	1					
ANR	751394	UnaryOperationExpression	& l		750465	0					
ANR	751395	UnaryOperator	&		750465	0					
ANR	751396	Identifier	l		750465	1					
ANR	751397	IfStatement	"if ( check_cond ( ms , m -> cond , cont_level ) == - 1 )"		750465	24					
ANR	751398	Condition	"check_cond ( ms , m -> cond , cont_level ) == - 1"	1890:5:43436:43476	750465	0	True				
ANR	751399	EqualityExpression	"check_cond ( ms , m -> cond , cont_level ) == - 1"		750465	0		==			
ANR	751400	CallExpression	"check_cond ( ms , m -> cond , cont_level )"		750465	0					
ANR	751401	Callee	check_cond		750465	0					
ANR	751402	Identifier	check_cond		750465	0					
ANR	751403	ArgumentList	ms		750465	1					
ANR	751404	Argument	ms		750465	0					
ANR	751405	Identifier	ms		750465	0					
ANR	751406	Argument	m -> cond		750465	1					
ANR	751407	PtrMemberAccess	m -> cond		750465	0					
ANR	751408	Identifier	m		750465	0					
ANR	751409	Identifier	cond		750465	1					
ANR	751410	Argument	cont_level		750465	2					
ANR	751411	Identifier	cont_level		750465	0					
ANR	751412	UnaryOperationExpression	- 1		750465	1					
ANR	751413	UnaryOperator	-		750465	0					
ANR	751414	PrimaryExpression	1		750465	1					
ANR	751415	ReturnStatement	return - 1 ;	1891:2:43481:43490	750465	1	True				
ANR	751416	UnaryOperationExpression	- 1		750465	0					
ANR	751417	UnaryOperator	-		750465	0					
ANR	751418	PrimaryExpression	1		750465	1					
ANR	751419	ExpressionStatement	EATAB	1893:1:43494:43499	750465	25	True				
ANR	751420	Identifier	EATAB		750465	0					
ANR	751421	IfStatement	if ( * l == 'u' )		750465	26					
ANR	751422	Condition	* l == 'u'	1899:5:43543:43551	750465	0	True				
ANR	751423	EqualityExpression	* l == 'u'		750465	0		==			
ANR	751424	UnaryOperationExpression	* l		750465	0					
ANR	751425	UnaryOperator	*		750465	0					
ANR	751426	Identifier	l		750465	1					
ANR	751427	PrimaryExpression	'u'		750465	1					
ANR	751428	CompoundStatement		199:16:4317:4317	750465	1					
ANR	751429	ExpressionStatement	"m -> type = get_type ( type_tbl , l + 1 , & l )"	1905:2:43702:43741	750465	0	True				
ANR	751430	AssignmentExpression	"m -> type = get_type ( type_tbl , l + 1 , & l )"		750465	0		=			
ANR	751431	PtrMemberAccess	m -> type		750465	0					
ANR	751432	Identifier	m		750465	0					
ANR	751433	Identifier	type		750465	1					
ANR	751434	CallExpression	"get_type ( type_tbl , l + 1 , & l )"		750465	1					
ANR	751435	Callee	get_type		750465	0					
ANR	751436	Identifier	get_type		750465	0					
ANR	751437	ArgumentList	type_tbl		750465	1					
ANR	751438	Argument	type_tbl		750465	0					
ANR	751439	Identifier	type_tbl		750465	0					
ANR	751440	Argument	l + 1		750465	1					
ANR	751441	AdditiveExpression	l + 1		750465	0		+			
ANR	751442	Identifier	l		750465	0					
ANR	751443	PrimaryExpression	1		750465	1					
ANR	751444	Argument	& l		750465	2					
ANR	751445	UnaryOperationExpression	& l		750465	0					
ANR	751446	UnaryOperator	&		750465	0					
ANR	751447	Identifier	l		750465	1					
ANR	751448	IfStatement	if ( m -> type == FILE_INVALID )		750465	1					
ANR	751449	Condition	m -> type == FILE_INVALID	1906:6:43749:43771	750465	0	True				
ANR	751450	EqualityExpression	m -> type == FILE_INVALID		750465	0		==			
ANR	751451	PtrMemberAccess	m -> type		750465	0					
ANR	751452	Identifier	m		750465	0					
ANR	751453	Identifier	type		750465	1					
ANR	751454	Identifier	FILE_INVALID		750465	1					
ANR	751455	CompoundStatement		206:31:4537:4537	750465	1					
ANR	751456	ExpressionStatement	"m -> type = get_standard_integer_type ( l , & l )"	1911:3:43893:43935	750465	0	True				
ANR	751457	AssignmentExpression	"m -> type = get_standard_integer_type ( l , & l )"		750465	0		=			
ANR	751458	PtrMemberAccess	m -> type		750465	0					
ANR	751459	Identifier	m		750465	0					
ANR	751460	Identifier	type		750465	1					
ANR	751461	CallExpression	"get_standard_integer_type ( l , & l )"		750465	1					
ANR	751462	Callee	get_standard_integer_type		750465	0					
ANR	751463	Identifier	get_standard_integer_type		750465	0					
ANR	751464	ArgumentList	l		750465	1					
ANR	751465	Argument	l		750465	0					
ANR	751466	Identifier	l		750465	0					
ANR	751467	Argument	& l		750465	1					
ANR	751468	UnaryOperationExpression	& l		750465	0					
ANR	751469	UnaryOperator	&		750465	0					
ANR	751470	Identifier	l		750465	1					
ANR	751471	IfStatement	if ( m -> type != FILE_INVALID )		750465	2					
ANR	751472	Condition	m -> type != FILE_INVALID	1914:6:43970:43992	750465	0	True				
ANR	751473	EqualityExpression	m -> type != FILE_INVALID		750465	0		!=			
ANR	751474	PtrMemberAccess	m -> type		750465	0					
ANR	751475	Identifier	m		750465	0					
ANR	751476	Identifier	type		750465	1					
ANR	751477	Identifier	FILE_INVALID		750465	1					
ANR	751478	ExpressionStatement	m -> flag |= UNSIGNED	1915:3:43998:44017	750465	1	True				
ANR	751479	AssignmentExpression	m -> flag |= UNSIGNED		750465	0		|=			
ANR	751480	PtrMemberAccess	m -> flag		750465	0					
ANR	751481	Identifier	m		750465	0					
ANR	751482	Identifier	flag		750465	1					
ANR	751483	Identifier	UNSIGNED		750465	1					
ANR	751484	ElseStatement	else		750465	0					
ANR	751485	CompoundStatement		216:8:4790:4790	750465	0					
ANR	751486	ExpressionStatement	"m -> type = get_type ( type_tbl , l , & l )"	1923:2:44237:44272	750465	0	True				
ANR	751487	AssignmentExpression	"m -> type = get_type ( type_tbl , l , & l )"		750465	0		=			
ANR	751488	PtrMemberAccess	m -> type		750465	0					
ANR	751489	Identifier	m		750465	0					
ANR	751490	Identifier	type		750465	1					
ANR	751491	CallExpression	"get_type ( type_tbl , l , & l )"		750465	1					
ANR	751492	Callee	get_type		750465	0					
ANR	751493	Identifier	get_type		750465	0					
ANR	751494	ArgumentList	type_tbl		750465	1					
ANR	751495	Argument	type_tbl		750465	0					
ANR	751496	Identifier	type_tbl		750465	0					
ANR	751497	Argument	l		750465	1					
ANR	751498	Identifier	l		750465	0					
ANR	751499	Argument	& l		750465	2					
ANR	751500	UnaryOperationExpression	& l		750465	0					
ANR	751501	UnaryOperator	&		750465	0					
ANR	751502	Identifier	l		750465	1					
ANR	751503	IfStatement	if ( m -> type == FILE_INVALID )		750465	1					
ANR	751504	Condition	m -> type == FILE_INVALID	1924:6:44280:44302	750465	0	True				
ANR	751505	EqualityExpression	m -> type == FILE_INVALID		750465	0		==			
ANR	751506	PtrMemberAccess	m -> type		750465	0					
ANR	751507	Identifier	m		750465	0					
ANR	751508	Identifier	type		750465	1					
ANR	751509	Identifier	FILE_INVALID		750465	1					
ANR	751510	CompoundStatement		224:31:5068:5068	750465	1					
ANR	751511	IfStatement	if ( * l == 'd' )		750465	0					
ANR	751512	Condition	* l == 'd'	1930:7:44454:44462	750465	0	True				
ANR	751513	EqualityExpression	* l == 'd'		750465	0		==			
ANR	751514	UnaryOperationExpression	* l		750465	0					
ANR	751515	UnaryOperator	*		750465	0					
ANR	751516	Identifier	l		750465	1					
ANR	751517	PrimaryExpression	'd'		750465	1					
ANR	751518	ExpressionStatement	"m -> type = get_standard_integer_type ( l , & l )"	1931:4:44469:44511	750465	1	True				
ANR	751519	AssignmentExpression	"m -> type = get_standard_integer_type ( l , & l )"		750465	0		=			
ANR	751520	PtrMemberAccess	m -> type		750465	0					
ANR	751521	Identifier	m		750465	0					
ANR	751522	Identifier	type		750465	1					
ANR	751523	CallExpression	"get_standard_integer_type ( l , & l )"		750465	1					
ANR	751524	Callee	get_standard_integer_type		750465	0					
ANR	751525	Identifier	get_standard_integer_type		750465	0					
ANR	751526	ArgumentList	l		750465	1					
ANR	751527	Argument	l		750465	0					
ANR	751528	Identifier	l		750465	0					
ANR	751529	Argument	& l		750465	1					
ANR	751530	UnaryOperationExpression	& l		750465	0					
ANR	751531	UnaryOperator	&		750465	0					
ANR	751532	Identifier	l		750465	1					
ANR	751533	ElseStatement	else		750465	0					
ANR	751534	IfStatement	if ( * l == 's' && ! isalpha ( ( unsigned char ) l [ 1 ] ) )		750465	0					
ANR	751535	Condition	* l == 's' && ! isalpha ( ( unsigned char ) l [ 1 ] )	1932:12:44525:44566	750465	0	True				
ANR	751536	AndExpression	* l == 's' && ! isalpha ( ( unsigned char ) l [ 1 ] )		750465	0		&&			
ANR	751537	EqualityExpression	* l == 's'		750465	0		==			
ANR	751538	UnaryOperationExpression	* l		750465	0					
ANR	751539	UnaryOperator	*		750465	0					
ANR	751540	Identifier	l		750465	1					
ANR	751541	PrimaryExpression	's'		750465	1					
ANR	751542	UnaryOperationExpression	! isalpha ( ( unsigned char ) l [ 1 ] )		750465	1					
ANR	751543	UnaryOperator	!		750465	0					
ANR	751544	CallExpression	isalpha ( ( unsigned char ) l [ 1 ] )		750465	1					
ANR	751545	Callee	isalpha		750465	0					
ANR	751546	Identifier	isalpha		750465	0					
ANR	751547	ArgumentList	( unsigned char ) l [ 1 ]		750465	1					
ANR	751548	Argument	( unsigned char ) l [ 1 ]		750465	0					
ANR	751549	CastExpression	( unsigned char ) l [ 1 ]		750465	0					
ANR	751550	CastTarget	unsigned char		750465	0					
ANR	751551	ArrayIndexing	l [ 1 ]		750465	1					
ANR	751552	Identifier	l		750465	0					
ANR	751553	PrimaryExpression	1		750465	1					
ANR	751554	CompoundStatement		232:56:5332:5332	750465	1					
ANR	751555	ExpressionStatement	m -> type = FILE_STRING	1933:4:44575:44596	750465	0	True				
ANR	751556	AssignmentExpression	m -> type = FILE_STRING		750465	0		=			
ANR	751557	PtrMemberAccess	m -> type		750465	0					
ANR	751558	Identifier	m		750465	0					
ANR	751559	Identifier	type		750465	1					
ANR	751560	Identifier	FILE_STRING		750465	1					
ANR	751561	ExpressionStatement	++ l	1934:2:44600:44603	750465	1	True				
ANR	751562	UnaryExpression	++ l		750465	0					
ANR	751563	IncDec	++		750465	0					
ANR	751564	Identifier	l		750465	1					
ANR	751565	IfStatement	if ( m -> type == FILE_INVALID )		750465	27					
ANR	751566	Condition	m -> type == FILE_INVALID	1939:5:44623:44645	750465	0	True				
ANR	751567	EqualityExpression	m -> type == FILE_INVALID		750465	0		==			
ANR	751568	PtrMemberAccess	m -> type		750465	0					
ANR	751569	Identifier	m		750465	0					
ANR	751570	Identifier	type		750465	1					
ANR	751571	Identifier	FILE_INVALID		750465	1					
ANR	751572	CompoundStatement		239:30:5411:5411	750465	1					
ANR	751573	ExpressionStatement	"m -> type = get_type ( special_tbl , l , & l )"	1941:2:44701:44739	750465	0	True				
ANR	751574	AssignmentExpression	"m -> type = get_type ( special_tbl , l , & l )"		750465	0		=			
ANR	751575	PtrMemberAccess	m -> type		750465	0					
ANR	751576	Identifier	m		750465	0					
ANR	751577	Identifier	type		750465	1					
ANR	751578	CallExpression	"get_type ( special_tbl , l , & l )"		750465	1					
ANR	751579	Callee	get_type		750465	0					
ANR	751580	Identifier	get_type		750465	0					
ANR	751581	ArgumentList	special_tbl		750465	1					
ANR	751582	Argument	special_tbl		750465	0					
ANR	751583	Identifier	special_tbl		750465	0					
ANR	751584	Argument	l		750465	1					
ANR	751585	Identifier	l		750465	0					
ANR	751586	Argument	& l		750465	2					
ANR	751587	UnaryOperationExpression	& l		750465	0					
ANR	751588	UnaryOperator	&		750465	0					
ANR	751589	Identifier	l		750465	1					
ANR	751590	IfStatement	if ( m -> type == FILE_INVALID )		750465	28					
ANR	751591	Condition	m -> type == FILE_INVALID	1944:5:44753:44775	750465	0	True				
ANR	751592	EqualityExpression	m -> type == FILE_INVALID		750465	0		==			
ANR	751593	PtrMemberAccess	m -> type		750465	0					
ANR	751594	Identifier	m		750465	0					
ANR	751595	Identifier	type		750465	1					
ANR	751596	Identifier	FILE_INVALID		750465	1					
ANR	751597	CompoundStatement		244:30:5541:5541	750465	1					
ANR	751598	IfStatement	if ( ms -> flags & MAGIC_CHECK )		750465	0					
ANR	751599	Condition	ms -> flags & MAGIC_CHECK	1945:6:44786:44808	750465	0	True				
ANR	751600	BitAndExpression	ms -> flags & MAGIC_CHECK		750465	0		&			
ANR	751601	PtrMemberAccess	ms -> flags		750465	0					
ANR	751602	Identifier	ms		750465	0					
ANR	751603	Identifier	flags		750465	1					
ANR	751604	Identifier	MAGIC_CHECK		750465	1					
ANR	751605	ExpressionStatement	"file_magwarn ( ms , ""type `%s' invalid"" , l )"	1946:3:44814:44854	750465	1	True				
ANR	751606	CallExpression	"file_magwarn ( ms , ""type `%s' invalid"" , l )"		750465	0					
ANR	751607	Callee	file_magwarn		750465	0					
ANR	751608	Identifier	file_magwarn		750465	0					
ANR	751609	ArgumentList	ms		750465	1					
ANR	751610	Argument	ms		750465	0					
ANR	751611	Identifier	ms		750465	0					
ANR	751612	Argument	"""type `%s' invalid"""		750465	1					
ANR	751613	PrimaryExpression	"""type `%s' invalid"""		750465	0					
ANR	751614	Argument	l		750465	2					
ANR	751615	Identifier	l		750465	0					
ANR	751616	ReturnStatement	return - 1 ;	1947:2:44858:44867	750465	1	True				
ANR	751617	UnaryOperationExpression	- 1		750465	0					
ANR	751618	UnaryOperator	-		750465	0					
ANR	751619	PrimaryExpression	1		750465	1					
ANR	751620	ExpressionStatement	m -> mask_op = 0	1953:1:45005:45019	750465	29	True				
ANR	751621	AssignmentExpression	m -> mask_op = 0		750465	0		=			
ANR	751622	PtrMemberAccess	m -> mask_op		750465	0					
ANR	751623	Identifier	m		750465	0					
ANR	751624	Identifier	mask_op		750465	1					
ANR	751625	PrimaryExpression	0		750465	1					
ANR	751626	IfStatement	if ( * l == '~' )		750465	30					
ANR	751627	Condition	* l == '~'	1954:5:45026:45034	750465	0	True				
ANR	751628	EqualityExpression	* l == '~'		750465	0		==			
ANR	751629	UnaryOperationExpression	* l		750465	0					
ANR	751630	UnaryOperator	*		750465	0					
ANR	751631	Identifier	l		750465	1					
ANR	751632	PrimaryExpression	'~'		750465	1					
ANR	751633	CompoundStatement		254:16:5800:5800	750465	1					
ANR	751634	IfStatement	if ( ! IS_LIBMAGIC_STRING ( m -> type ) )		750465	0					
ANR	751635	Condition	! IS_LIBMAGIC_STRING ( m -> type )	1955:6:45045:45072	750465	0	True				
ANR	751636	UnaryOperationExpression	! IS_LIBMAGIC_STRING ( m -> type )		750465	0					
ANR	751637	UnaryOperator	!		750465	0					
ANR	751638	CallExpression	IS_LIBMAGIC_STRING ( m -> type )		750465	1					
ANR	751639	Callee	IS_LIBMAGIC_STRING		750465	0					
ANR	751640	Identifier	IS_LIBMAGIC_STRING		750465	0					
ANR	751641	ArgumentList	m -> type		750465	1					
ANR	751642	Argument	m -> type		750465	0					
ANR	751643	PtrMemberAccess	m -> type		750465	0					
ANR	751644	Identifier	m		750465	0					
ANR	751645	Identifier	type		750465	1					
ANR	751646	ExpressionStatement	m -> mask_op |= FILE_OPINVERSE	1956:3:45078:45106	750465	1	True				
ANR	751647	AssignmentExpression	m -> mask_op |= FILE_OPINVERSE		750465	0		|=			
ANR	751648	PtrMemberAccess	m -> mask_op		750465	0					
ANR	751649	Identifier	m		750465	0					
ANR	751650	Identifier	mask_op		750465	1					
ANR	751651	Identifier	FILE_OPINVERSE		750465	1					
ANR	751652	ElseStatement	else		750465	0					
ANR	751653	IfStatement	if ( ms -> flags & MAGIC_CHECK )		750465	0					
ANR	751654	Condition	ms -> flags & MAGIC_CHECK	1957:11:45119:45141	750465	0	True				
ANR	751655	BitAndExpression	ms -> flags & MAGIC_CHECK		750465	0		&			
ANR	751656	PtrMemberAccess	ms -> flags		750465	0					
ANR	751657	Identifier	ms		750465	0					
ANR	751658	Identifier	flags		750465	1					
ANR	751659	Identifier	MAGIC_CHECK		750465	1					
ANR	751660	ExpressionStatement	"file_magwarn ( ms , ""'~' invalid for string types"" )"	1958:3:45147:45195	750465	1	True				
ANR	751661	CallExpression	"file_magwarn ( ms , ""'~' invalid for string types"" )"		750465	0					
ANR	751662	Callee	file_magwarn		750465	0					
ANR	751663	Identifier	file_magwarn		750465	0					
ANR	751664	ArgumentList	ms		750465	1					
ANR	751665	Argument	ms		750465	0					
ANR	751666	Identifier	ms		750465	0					
ANR	751667	Argument	"""'~' invalid for string types"""		750465	1					
ANR	751668	PrimaryExpression	"""'~' invalid for string types"""		750465	0					
ANR	751669	ExpressionStatement	++ l	1959:2:45199:45202	750465	1	True				
ANR	751670	UnaryExpression	++ l		750465	0					
ANR	751671	IncDec	++		750465	0					
ANR	751672	Identifier	l		750465	1					
ANR	751673	ExpressionStatement	m -> str_range = 0	1961:1:45208:45224	750465	31	True				
ANR	751674	AssignmentExpression	m -> str_range = 0		750465	0		=			
ANR	751675	PtrMemberAccess	m -> str_range		750465	0					
ANR	751676	Identifier	m		750465	0					
ANR	751677	Identifier	str_range		750465	1					
ANR	751678	PrimaryExpression	0		750465	1					
ANR	751679	ExpressionStatement	m -> str_flags = m -> type == FILE_PSTRING ? PSTRING_1_LE : 0	1962:1:45227:45284	750465	32	True				
ANR	751680	AssignmentExpression	m -> str_flags = m -> type == FILE_PSTRING ? PSTRING_1_LE : 0		750465	0		=			
ANR	751681	PtrMemberAccess	m -> str_flags		750465	0					
ANR	751682	Identifier	m		750465	0					
ANR	751683	Identifier	str_flags		750465	1					
ANR	751684	ConditionalExpression	m -> type == FILE_PSTRING ? PSTRING_1_LE : 0		750465	1					
ANR	751685	Condition	m -> type == FILE_PSTRING		750465	0					
ANR	751686	EqualityExpression	m -> type == FILE_PSTRING		750465	0		==			
ANR	751687	PtrMemberAccess	m -> type		750465	0					
ANR	751688	Identifier	m		750465	0					
ANR	751689	Identifier	type		750465	1					
ANR	751690	Identifier	FILE_PSTRING		750465	1					
ANR	751691	Identifier	PSTRING_1_LE		750465	1					
ANR	751692	PrimaryExpression	0		750465	2					
ANR	751693	IfStatement	if ( ( op = get_op ( * l ) ) != - 1 )		750465	33					
ANR	751694	Condition	( op = get_op ( * l ) ) != - 1	1963:5:45291:45313	750465	0	True				
ANR	751695	EqualityExpression	( op = get_op ( * l ) ) != - 1		750465	0		!=			
ANR	751696	AssignmentExpression	op = get_op ( * l )		750465	0		=			
ANR	751697	Identifier	op		750465	0					
ANR	751698	CallExpression	get_op ( * l )		750465	1					
ANR	751699	Callee	get_op		750465	0					
ANR	751700	Identifier	get_op		750465	0					
ANR	751701	ArgumentList	* l		750465	1					
ANR	751702	Argument	* l		750465	0					
ANR	751703	UnaryOperationExpression	* l		750465	0					
ANR	751704	UnaryOperator	*		750465	0					
ANR	751705	Identifier	l		750465	1					
ANR	751706	UnaryOperationExpression	- 1		750465	1					
ANR	751707	UnaryOperator	-		750465	0					
ANR	751708	PrimaryExpression	1		750465	1					
ANR	751709	CompoundStatement		263:30:6079:6079	750465	1					
ANR	751710	IfStatement	if ( IS_LIBMAGIC_STRING ( m -> type ) )		750465	0					
ANR	751711	Condition	IS_LIBMAGIC_STRING ( m -> type )	1964:6:45324:45350	750465	0	True				
ANR	751712	CallExpression	IS_LIBMAGIC_STRING ( m -> type )		750465	0					
ANR	751713	Callee	IS_LIBMAGIC_STRING		750465	0					
ANR	751714	Identifier	IS_LIBMAGIC_STRING		750465	0					
ANR	751715	ArgumentList	m -> type		750465	1					
ANR	751716	Argument	m -> type		750465	0					
ANR	751717	PtrMemberAccess	m -> type		750465	0					
ANR	751718	Identifier	m		750465	0					
ANR	751719	Identifier	type		750465	1					
ANR	751720	CompoundStatement		265:3:6121:6126	750465	1					
ANR	751721	IdentifierDeclStatement	int r ;	1965:3:45358:45363	750465	0	True				
ANR	751722	IdentifierDecl	r		750465	0					
ANR	751723	IdentifierDeclType	int		750465	0					
ANR	751724	Identifier	r		750465	1					
ANR	751725	IfStatement	if ( op != FILE_OPDIVIDE )		750465	1					
ANR	751726	Condition	op != FILE_OPDIVIDE	1967:7:45373:45391	750465	0	True				
ANR	751727	EqualityExpression	op != FILE_OPDIVIDE		750465	0		!=			
ANR	751728	Identifier	op		750465	0					
ANR	751729	Identifier	FILE_OPDIVIDE		750465	1					
ANR	751730	CompoundStatement		267:28:6157:6157	750465	1					
ANR	751731	IfStatement	if ( ms -> flags & MAGIC_CHECK )		750465	0					
ANR	751732	Condition	ms -> flags & MAGIC_CHECK	1968:8:45404:45426	750465	0	True				
ANR	751733	BitAndExpression	ms -> flags & MAGIC_CHECK		750465	0		&			
ANR	751734	PtrMemberAccess	ms -> flags		750465	0					
ANR	751735	Identifier	ms		750465	0					
ANR	751736	Identifier	flags		750465	1					
ANR	751737	Identifier	MAGIC_CHECK		750465	1					
ANR	751738	Statement	file_magwarn	1969:5:45434:45445	750465	1	True				
ANR	751739	Statement	(	1969:17:45446:45446	750465	1	True				
ANR	751740	Statement	ms	1969:18:45447:45448	750465	2	True				
ANR	751741	Statement	","	1969:20:45449:45449	750465	3	True				
ANR	751742	Statement	"""invalid string/indirect op: """	1970:9:45460:45489	750465	4	True				
ANR	751743	Statement	"""`%c'"""	1971:9:45500:45505	750465	5	True				
ANR	751744	Statement	","	1971:15:45506:45506	750465	6	True				
ANR	751745	Statement	*	1971:17:45508:45508	750465	7	True				
ANR	751746	Statement	t	1971:18:45509:45509	750465	8	True				
ANR	751747	Statement	)	1971:19:45510:45510	750465	9	True				
ANR	751748	ExpressionStatement		1971:20:45511:45511	750465	10	True				
ANR	751749	ReturnStatement	return - 1 ;	1972:4:45517:45526	750465	11	True				
ANR	751750	UnaryOperationExpression	- 1		750465	0					
ANR	751751	UnaryOperator	-		750465	0					
ANR	751752	PrimaryExpression	1		750465	1					
ANR	751753	IfStatement	if ( m -> type == FILE_INDIRECT )		750465	2					
ANR	751754	Condition	m -> type == FILE_INDIRECT	1975:7:45541:45564	750465	0	True				
ANR	751755	EqualityExpression	m -> type == FILE_INDIRECT		750465	0		==			
ANR	751756	PtrMemberAccess	m -> type		750465	0					
ANR	751757	Identifier	m		750465	0					
ANR	751758	Identifier	type		750465	1					
ANR	751759	Identifier	FILE_INDIRECT		750465	1					
ANR	751760	ExpressionStatement	"r = parse_indirect_modifier ( ms , m , & l )"	1976:4:45571:45609	750465	1	True				
ANR	751761	AssignmentExpression	"r = parse_indirect_modifier ( ms , m , & l )"		750465	0		=			
ANR	751762	Identifier	r		750465	0					
ANR	751763	CallExpression	"parse_indirect_modifier ( ms , m , & l )"		750465	1					
ANR	751764	Callee	parse_indirect_modifier		750465	0					
ANR	751765	Identifier	parse_indirect_modifier		750465	0					
ANR	751766	ArgumentList	ms		750465	1					
ANR	751767	Argument	ms		750465	0					
ANR	751768	Identifier	ms		750465	0					
ANR	751769	Argument	m		750465	1					
ANR	751770	Identifier	m		750465	0					
ANR	751771	Argument	& l		750465	2					
ANR	751772	UnaryOperationExpression	& l		750465	0					
ANR	751773	UnaryOperator	&		750465	0					
ANR	751774	Identifier	l		750465	1					
ANR	751775	ElseStatement	else		750465	0					
ANR	751776	ExpressionStatement	"r = parse_string_modifier ( ms , m , & l )"	1978:4:45623:45659	750465	0	True				
ANR	751777	AssignmentExpression	"r = parse_string_modifier ( ms , m , & l )"		750465	0		=			
ANR	751778	Identifier	r		750465	0					
ANR	751779	CallExpression	"parse_string_modifier ( ms , m , & l )"		750465	1					
ANR	751780	Callee	parse_string_modifier		750465	0					
ANR	751781	Identifier	parse_string_modifier		750465	0					
ANR	751782	ArgumentList	ms		750465	1					
ANR	751783	Argument	ms		750465	0					
ANR	751784	Identifier	ms		750465	0					
ANR	751785	Argument	m		750465	1					
ANR	751786	Identifier	m		750465	0					
ANR	751787	Argument	& l		750465	2					
ANR	751788	UnaryOperationExpression	& l		750465	0					
ANR	751789	UnaryOperator	&		750465	0					
ANR	751790	Identifier	l		750465	1					
ANR	751791	IfStatement	if ( r == - 1 )		750465	3					
ANR	751792	Condition	r == - 1	1979:7:45668:45674	750465	0	True				
ANR	751793	EqualityExpression	r == - 1		750465	0		==			
ANR	751794	Identifier	r		750465	0					
ANR	751795	UnaryOperationExpression	- 1		750465	1					
ANR	751796	UnaryOperator	-		750465	0					
ANR	751797	PrimaryExpression	1		750465	1					
ANR	751798	ReturnStatement	return - 1 ;	1980:4:45681:45690	750465	1	True				
ANR	751799	UnaryOperationExpression	- 1		750465	0					
ANR	751800	UnaryOperator	-		750465	0					
ANR	751801	PrimaryExpression	1		750465	1					
ANR	751802	ElseStatement	else		750465	0					
ANR	751803	ExpressionStatement	"parse_op_modifier ( ms , m , & l , op )"	1982:3:45704:45736	750465	0	True				
ANR	751804	CallExpression	"parse_op_modifier ( ms , m , & l , op )"		750465	0					
ANR	751805	Callee	parse_op_modifier		750465	0					
ANR	751806	Identifier	parse_op_modifier		750465	0					
ANR	751807	ArgumentList	ms		750465	1					
ANR	751808	Argument	ms		750465	0					
ANR	751809	Identifier	ms		750465	0					
ANR	751810	Argument	m		750465	1					
ANR	751811	Identifier	m		750465	0					
ANR	751812	Argument	& l		750465	2					
ANR	751813	UnaryOperationExpression	& l		750465	0					
ANR	751814	UnaryOperator	&		750465	0					
ANR	751815	Identifier	l		750465	1					
ANR	751816	Argument	op		750465	3					
ANR	751817	Identifier	op		750465	0					
ANR	751818	ExpressionStatement	EATAB	1989:1:45876:45881	750465	34	True				
ANR	751819	Identifier	EATAB		750465	0					
ANR	751820	SwitchStatement	switch ( * l )		750465	35					
ANR	751821	Condition	* l	1991:9:45895:45896	750465	0	True				
ANR	751822	UnaryOperationExpression	* l		750465	0					
ANR	751823	UnaryOperator	*		750465	0					
ANR	751824	Identifier	l		750465	1					
ANR	751825	CompoundStatement		291:13:6662:6662	750465	1					
ANR	751826	Label	case '>' :	1992:1:45902:45910	750465	0	True				
ANR	751827	Label	case '<' :	1993:1:45913:45921	750465	1	True				
ANR	751828	ExpressionStatement	m -> reln = * l	1994:4:45927:45939	750465	2	True				
ANR	751829	AssignmentExpression	m -> reln = * l		750465	0		=			
ANR	751830	PtrMemberAccess	m -> reln		750465	0					
ANR	751831	Identifier	m		750465	0					
ANR	751832	Identifier	reln		750465	1					
ANR	751833	UnaryOperationExpression	* l		750465	1					
ANR	751834	UnaryOperator	*		750465	0					
ANR	751835	Identifier	l		750465	1					
ANR	751836	ExpressionStatement	++ l	1995:4:45945:45948	750465	3	True				
ANR	751837	UnaryExpression	++ l		750465	0					
ANR	751838	IncDec	++		750465	0					
ANR	751839	Identifier	l		750465	1					
ANR	751840	IfStatement	if ( * l == '=' )		750465	4					
ANR	751841	Condition	* l == '='	1996:6:45956:45964	750465	0	True				
ANR	751842	EqualityExpression	* l == '='		750465	0		==			
ANR	751843	UnaryOperationExpression	* l		750465	0					
ANR	751844	UnaryOperator	*		750465	0					
ANR	751845	Identifier	l		750465	1					
ANR	751846	PrimaryExpression	'='		750465	1					
ANR	751847	CompoundStatement		296:17:6730:6730	750465	1					
ANR	751848	IfStatement	if ( ms -> flags & MAGIC_CHECK )		750465	0					
ANR	751849	Condition	ms -> flags & MAGIC_CHECK	1997:7:45976:45998	750465	0	True				
ANR	751850	BitAndExpression	ms -> flags & MAGIC_CHECK		750465	0		&			
ANR	751851	PtrMemberAccess	ms -> flags		750465	0					
ANR	751852	Identifier	ms		750465	0					
ANR	751853	Identifier	flags		750465	1					
ANR	751854	Identifier	MAGIC_CHECK		750465	1					
ANR	751855	CompoundStatement		297:32:6764:6764	750465	1					
ANR	751856	ExpressionStatement	"file_magwarn ( ms , ""%c= not supported"" , m -> reln )"	1998:4:46007:46061	750465	0	True				
ANR	751857	CallExpression	"file_magwarn ( ms , ""%c= not supported"" , m -> reln )"		750465	0					
ANR	751858	Callee	file_magwarn		750465	0					
ANR	751859	Identifier	file_magwarn		750465	0					
ANR	751860	ArgumentList	ms		750465	1					
ANR	751861	Argument	ms		750465	0					
ANR	751862	Identifier	ms		750465	0					
ANR	751863	Argument	"""%c= not supported"""		750465	1					
ANR	751864	PrimaryExpression	"""%c= not supported"""		750465	0					
ANR	751865	Argument	m -> reln		750465	2					
ANR	751866	PtrMemberAccess	m -> reln		750465	0					
ANR	751867	Identifier	m		750465	0					
ANR	751868	Identifier	reln		750465	1					
ANR	751869	ReturnStatement	return - 1 ;	2000:4:46067:46076	750465	1	True				
ANR	751870	UnaryOperationExpression	- 1		750465	0					
ANR	751871	UnaryOperator	-		750465	0					
ANR	751872	PrimaryExpression	1		750465	1					
ANR	751873	ExpressionStatement	++ l	2002:5:46088:46091	750465	1	True				
ANR	751874	UnaryExpression	++ l		750465	0					
ANR	751875	IncDec	++		750465	0					
ANR	751876	Identifier	l		750465	1					
ANR	751877	BreakStatement	break ;	2004:2:46099:46104	750465	5	True				
ANR	751878	Label	case '&' :	2006:1:46166:46174	750465	6	True				
ANR	751879	Label	case '^' :	2007:1:46177:46185	750465	7	True				
ANR	751880	Label	case '=' :	2008:1:46188:46196	750465	8	True				
ANR	751881	ExpressionStatement	m -> reln = * l	2009:4:46202:46214	750465	9	True				
ANR	751882	AssignmentExpression	m -> reln = * l		750465	0		=			
ANR	751883	PtrMemberAccess	m -> reln		750465	0					
ANR	751884	Identifier	m		750465	0					
ANR	751885	Identifier	reln		750465	1					
ANR	751886	UnaryOperationExpression	* l		750465	1					
ANR	751887	UnaryOperator	*		750465	0					
ANR	751888	Identifier	l		750465	1					
ANR	751889	ExpressionStatement	++ l	2010:4:46220:46223	750465	10	True				
ANR	751890	UnaryExpression	++ l		750465	0					
ANR	751891	IncDec	++		750465	0					
ANR	751892	Identifier	l		750465	1					
ANR	751893	IfStatement	if ( * l == '=' )		750465	11					
ANR	751894	Condition	* l == '='	2011:6:46231:46239	750465	0	True				
ANR	751895	EqualityExpression	* l == '='		750465	0		==			
ANR	751896	UnaryOperationExpression	* l		750465	0					
ANR	751897	UnaryOperator	*		750465	0					
ANR	751898	Identifier	l		750465	1					
ANR	751899	PrimaryExpression	'='		750465	1					
ANR	751900	CompoundStatement		311:17:7005:7005	750465	1					
ANR	751901	ExpressionStatement	++ l	2013:5:46286:46289	750465	0	True				
ANR	751902	UnaryExpression	++ l		750465	0					
ANR	751903	IncDec	++		750465	0					
ANR	751904	Identifier	l		750465	1					
ANR	751905	BreakStatement	break ;	2015:2:46297:46302	750465	12	True				
ANR	751906	Label	case '!' :	2016:1:46305:46313	750465	13	True				
ANR	751907	ExpressionStatement	m -> reln = * l	2017:2:46317:46329	750465	14	True				
ANR	751908	AssignmentExpression	m -> reln = * l		750465	0		=			
ANR	751909	PtrMemberAccess	m -> reln		750465	0					
ANR	751910	Identifier	m		750465	0					
ANR	751911	Identifier	reln		750465	1					
ANR	751912	UnaryOperationExpression	* l		750465	1					
ANR	751913	UnaryOperator	*		750465	0					
ANR	751914	Identifier	l		750465	1					
ANR	751915	ExpressionStatement	++ l	2018:2:46333:46336	750465	15	True				
ANR	751916	UnaryExpression	++ l		750465	0					
ANR	751917	IncDec	++		750465	0					
ANR	751918	Identifier	l		750465	1					
ANR	751919	BreakStatement	break ;	2019:2:46340:46345	750465	16	True				
ANR	751920	Label	default :	2020:1:46348:46355	750465	17	True				
ANR	751921	Identifier	default		750465	0					
ANR	751922	ExpressionStatement	m -> reln = '='	2021:4:46361:46374	750465	18	True				
ANR	751923	AssignmentExpression	m -> reln = '='		750465	0		=			
ANR	751924	PtrMemberAccess	m -> reln		750465	0					
ANR	751925	Identifier	m		750465	0					
ANR	751926	Identifier	reln		750465	1					
ANR	751927	PrimaryExpression	'='		750465	1					
ANR	751928	IfStatement	if ( * l == 'x' && ( ( isascii ( ( unsigned char ) l [ 1 ] ) && isspace ( ( unsigned char ) l [ 1 ] ) ) || ! l [ 1 ] ) )		750465	19					
ANR	751929	Condition	* l == 'x' && ( ( isascii ( ( unsigned char ) l [ 1 ] ) && isspace ( ( unsigned char ) l [ 1 ] ) ) || ! l [ 1 ] )	2022:6:46409:46501	750465	0	True				
ANR	751930	AndExpression	* l == 'x' && ( ( isascii ( ( unsigned char ) l [ 1 ] ) && isspace ( ( unsigned char ) l [ 1 ] ) ) || ! l [ 1 ] )		750465	0		&&			
ANR	751931	EqualityExpression	* l == 'x'		750465	0		==			
ANR	751932	UnaryOperationExpression	* l		750465	0					
ANR	751933	UnaryOperator	*		750465	0					
ANR	751934	Identifier	l		750465	1					
ANR	751935	PrimaryExpression	'x'		750465	1					
ANR	751936	OrExpression	( isascii ( ( unsigned char ) l [ 1 ] ) && isspace ( ( unsigned char ) l [ 1 ] ) ) || ! l [ 1 ]		750465	1		||			
ANR	751937	AndExpression	isascii ( ( unsigned char ) l [ 1 ] ) && isspace ( ( unsigned char ) l [ 1 ] )		750465	0		&&			
ANR	751938	CallExpression	isascii ( ( unsigned char ) l [ 1 ] )		750465	0					
ANR	751939	Callee	isascii		750465	0					
ANR	751940	Identifier	isascii		750465	0					
ANR	751941	ArgumentList	( unsigned char ) l [ 1 ]		750465	1					
ANR	751942	Argument	( unsigned char ) l [ 1 ]		750465	0					
ANR	751943	CastExpression	( unsigned char ) l [ 1 ]		750465	0					
ANR	751944	CastTarget	unsigned char		750465	0					
ANR	751945	ArrayIndexing	l [ 1 ]		750465	1					
ANR	751946	Identifier	l		750465	0					
ANR	751947	PrimaryExpression	1		750465	1					
ANR	751948	CallExpression	isspace ( ( unsigned char ) l [ 1 ] )		750465	1					
ANR	751949	Callee	isspace		750465	0					
ANR	751950	Identifier	isspace		750465	0					
ANR	751951	ArgumentList	( unsigned char ) l [ 1 ]		750465	1					
ANR	751952	Argument	( unsigned char ) l [ 1 ]		750465	0					
ANR	751953	CastExpression	( unsigned char ) l [ 1 ]		750465	0					
ANR	751954	CastTarget	unsigned char		750465	0					
ANR	751955	ArrayIndexing	l [ 1 ]		750465	1					
ANR	751956	Identifier	l		750465	0					
ANR	751957	PrimaryExpression	1		750465	1					
ANR	751958	UnaryOperationExpression	! l [ 1 ]		750465	1					
ANR	751959	UnaryOperator	!		750465	0					
ANR	751960	ArrayIndexing	l [ 1 ]		750465	1					
ANR	751961	Identifier	l		750465	0					
ANR	751962	PrimaryExpression	1		750465	1					
ANR	751963	CompoundStatement		323:47:7267:7267	750465	1					
ANR	751964	ExpressionStatement	m -> reln = * l	2024:3:46509:46521	750465	0	True				
ANR	751965	AssignmentExpression	m -> reln = * l		750465	0		=			
ANR	751966	PtrMemberAccess	m -> reln		750465	0					
ANR	751967	Identifier	m		750465	0					
ANR	751968	Identifier	reln		750465	1					
ANR	751969	UnaryOperationExpression	* l		750465	1					
ANR	751970	UnaryOperator	*		750465	0					
ANR	751971	Identifier	l		750465	1					
ANR	751972	ExpressionStatement	++ l	2025:3:46526:46529	750465	1	True				
ANR	751973	UnaryExpression	++ l		750465	0					
ANR	751974	IncDec	++		750465	0					
ANR	751975	Identifier	l		750465	1					
ANR	751976	BreakStatement	break ;	2027:2:46537:46542	750465	20	True				
ANR	751977	IfStatement	"if ( m -> reln != 'x' && getvalue ( ms , m , & l , action ) )"		750465	36					
ANR	751978	Condition	"m -> reln != 'x' && getvalue ( ms , m , & l , action )"	2032:5:46610:46654	750465	0	True				
ANR	751979	AndExpression	"m -> reln != 'x' && getvalue ( ms , m , & l , action )"		750465	0		&&			
ANR	751980	EqualityExpression	m -> reln != 'x'		750465	0		!=			
ANR	751981	PtrMemberAccess	m -> reln		750465	0					
ANR	751982	Identifier	m		750465	0					
ANR	751983	Identifier	reln		750465	1					
ANR	751984	PrimaryExpression	'x'		750465	1					
ANR	751985	CallExpression	"getvalue ( ms , m , & l , action )"		750465	1					
ANR	751986	Callee	getvalue		750465	0					
ANR	751987	Identifier	getvalue		750465	0					
ANR	751988	ArgumentList	ms		750465	1					
ANR	751989	Argument	ms		750465	0					
ANR	751990	Identifier	ms		750465	0					
ANR	751991	Argument	m		750465	1					
ANR	751992	Identifier	m		750465	0					
ANR	751993	Argument	& l		750465	2					
ANR	751994	UnaryOperationExpression	& l		750465	0					
ANR	751995	UnaryOperator	&		750465	0					
ANR	751996	Identifier	l		750465	1					
ANR	751997	Argument	action		750465	3					
ANR	751998	Identifier	action		750465	0					
ANR	751999	ReturnStatement	return - 1 ;	2033:2:46659:46668	750465	1	True				
ANR	752000	UnaryOperationExpression	- 1		750465	0					
ANR	752001	UnaryOperator	-		750465	0					
ANR	752002	PrimaryExpression	1		750465	1					
ANR	752003	ExpressionStatement	EATAB	2044:1:46861:46866	750465	37	True				
ANR	752004	Identifier	EATAB		750465	0					
ANR	752005	IfStatement	if ( l [ 0 ] == '\\b' )		750465	38					
ANR	752006	Condition	l [ 0 ] == '\\b'	2045:5:46873:46884	750465	0	True				
ANR	752007	EqualityExpression	l [ 0 ] == '\\b'		750465	0		==			
ANR	752008	ArrayIndexing	l [ 0 ]		750465	0					
ANR	752009	Identifier	l		750465	0					
ANR	752010	PrimaryExpression	0		750465	1					
ANR	752011	PrimaryExpression	'\\b'		750465	1					
ANR	752012	CompoundStatement		345:19:7650:7650	750465	1					
ANR	752013	ExpressionStatement	++ l	2046:2:46891:46894	750465	0	True				
ANR	752014	UnaryExpression	++ l		750465	0					
ANR	752015	IncDec	++		750465	0					
ANR	752016	Identifier	l		750465	1					
ANR	752017	ExpressionStatement	m -> flag |= NOSPACE	2047:2:46898:46916	750465	1	True				
ANR	752018	AssignmentExpression	m -> flag |= NOSPACE		750465	0		|=			
ANR	752019	PtrMemberAccess	m -> flag		750465	0					
ANR	752020	Identifier	m		750465	0					
ANR	752021	Identifier	flag		750465	1					
ANR	752022	Identifier	NOSPACE		750465	1					
ANR	752023	ElseStatement	else		750465	0					
ANR	752024	IfStatement	if ( ( l [ 0 ] == '\\\\' ) && ( l [ 1 ] == 'b' ) )		750465	0					
ANR	752025	Condition	( l [ 0 ] == '\\\\' ) && ( l [ 1 ] == 'b' )	2048:12:46930:46960	750465	0	True				
ANR	752026	AndExpression	( l [ 0 ] == '\\\\' ) && ( l [ 1 ] == 'b' )		750465	0		&&			
ANR	752027	EqualityExpression	l [ 0 ] == '\\\\'		750465	0		==			
ANR	752028	ArrayIndexing	l [ 0 ]		750465	0					
ANR	752029	Identifier	l		750465	0					
ANR	752030	PrimaryExpression	0		750465	1					
ANR	752031	PrimaryExpression	'\\\\'		750465	1					
ANR	752032	EqualityExpression	l [ 1 ] == 'b'		750465	1		==			
ANR	752033	ArrayIndexing	l [ 1 ]		750465	0					
ANR	752034	Identifier	l		750465	0					
ANR	752035	PrimaryExpression	1		750465	1					
ANR	752036	PrimaryExpression	'b'		750465	1					
ANR	752037	CompoundStatement		348:45:7726:7726	750465	1					
ANR	752038	ExpressionStatement	++ l	2049:2:46967:46970	750465	0	True				
ANR	752039	UnaryExpression	++ l		750465	0					
ANR	752040	IncDec	++		750465	0					
ANR	752041	Identifier	l		750465	1					
ANR	752042	ExpressionStatement	++ l	2050:2:46974:46977	750465	1	True				
ANR	752043	UnaryExpression	++ l		750465	0					
ANR	752044	IncDec	++		750465	0					
ANR	752045	Identifier	l		750465	1					
ANR	752046	ExpressionStatement	m -> flag |= NOSPACE	2051:2:46981:46999	750465	2	True				
ANR	752047	AssignmentExpression	m -> flag |= NOSPACE		750465	0		|=			
ANR	752048	PtrMemberAccess	m -> flag		750465	0					
ANR	752049	Identifier	m		750465	0					
ANR	752050	Identifier	flag		750465	1					
ANR	752051	Identifier	NOSPACE		750465	1					
ANR	752052	ForStatement	for ( i = 0 ; ( m -> desc [ i ++ ] = * l ++ ) != '\\0' && i < sizeof ( m -> desc ) ; )		750465	39					
ANR	752053	ForInit	i = 0 ;	2053:6:47010:47015	750465	0	True				
ANR	752054	AssignmentExpression	i = 0		750465	0		=			
ANR	752055	Identifier	i		750465	0					
ANR	752056	PrimaryExpression	0		750465	1					
ANR	752057	Condition	( m -> desc [ i ++ ] = * l ++ ) != '\\0' && i < sizeof ( m -> desc )	2053:13:47017:47068	750465	1	True				
ANR	752058	AndExpression	( m -> desc [ i ++ ] = * l ++ ) != '\\0' && i < sizeof ( m -> desc )		750465	0		&&			
ANR	752059	EqualityExpression	( m -> desc [ i ++ ] = * l ++ ) != '\\0'		750465	0		!=			
ANR	752060	AssignmentExpression	m -> desc [ i ++ ] = * l ++		750465	0		=			
ANR	752061	ArrayIndexing	m -> desc [ i ++ ]		750465	0					
ANR	752062	PtrMemberAccess	m -> desc		750465	0					
ANR	752063	Identifier	m		750465	0					
ANR	752064	Identifier	desc		750465	1					
ANR	752065	PostIncDecOperationExpression	i ++		750465	1					
ANR	752066	Identifier	i		750465	0					
ANR	752067	IncDec	++		750465	1					
ANR	752068	UnaryOperationExpression	* l ++		750465	1					
ANR	752069	UnaryOperator	*		750465	0					
ANR	752070	PostIncDecOperationExpression	l ++		750465	1					
ANR	752071	Identifier	l		750465	0					
ANR	752072	IncDec	++		750465	1					
ANR	752073	PrimaryExpression	'\\0'		750465	1					
ANR	752074	RelationalExpression	i < sizeof ( m -> desc )		750465	1		<			
ANR	752075	Identifier	i		750465	0					
ANR	752076	SizeofExpression	sizeof ( m -> desc )		750465	1					
ANR	752077	Sizeof	sizeof		750465	0					
ANR	752078	PtrMemberAccess	m -> desc		750465	1					
ANR	752079	Identifier	m		750465	0					
ANR	752080	Identifier	desc		750465	1					
ANR	752081	ContinueStatement	continue ;	2054:2:47075:47083	750465	2	True				
ANR	752082	IfStatement	if ( i == sizeof ( m -> desc ) )		750465	40					
ANR	752083	Condition	i == sizeof ( m -> desc )	2055:5:47090:47109	750465	0	True				
ANR	752084	EqualityExpression	i == sizeof ( m -> desc )		750465	0		==			
ANR	752085	Identifier	i		750465	0					
ANR	752086	SizeofExpression	sizeof ( m -> desc )		750465	1					
ANR	752087	Sizeof	sizeof		750465	0					
ANR	752088	PtrMemberAccess	m -> desc		750465	1					
ANR	752089	Identifier	m		750465	0					
ANR	752090	Identifier	desc		750465	1					
ANR	752091	CompoundStatement		355:27:7875:7875	750465	1					
ANR	752092	ExpressionStatement	m -> desc [ sizeof ( m -> desc ) - 1 ] = '\\0'	2056:2:47116:47151	750465	0	True				
ANR	752093	AssignmentExpression	m -> desc [ sizeof ( m -> desc ) - 1 ] = '\\0'		750465	0		=			
ANR	752094	ArrayIndexing	m -> desc [ sizeof ( m -> desc ) - 1 ]		750465	0					
ANR	752095	PtrMemberAccess	m -> desc		750465	0					
ANR	752096	Identifier	m		750465	0					
ANR	752097	Identifier	desc		750465	1					
ANR	752098	AdditiveExpression	sizeof ( m -> desc ) - 1		750465	1		-			
ANR	752099	SizeofExpression	sizeof ( m -> desc )		750465	0					
ANR	752100	Sizeof	sizeof		750465	0					
ANR	752101	PtrMemberAccess	m -> desc		750465	1					
ANR	752102	Identifier	m		750465	0					
ANR	752103	Identifier	desc		750465	1					
ANR	752104	PrimaryExpression	1		750465	1					
ANR	752105	PrimaryExpression	'\\0'		750465	1					
ANR	752106	IfStatement	if ( ms -> flags & MAGIC_CHECK )		750465	1					
ANR	752107	Condition	ms -> flags & MAGIC_CHECK	2057:6:47159:47181	750465	0	True				
ANR	752108	BitAndExpression	ms -> flags & MAGIC_CHECK		750465	0		&			
ANR	752109	PtrMemberAccess	ms -> flags		750465	0					
ANR	752110	Identifier	ms		750465	0					
ANR	752111	Identifier	flags		750465	1					
ANR	752112	Identifier	MAGIC_CHECK		750465	1					
ANR	752113	ExpressionStatement	"file_magwarn ( ms , ""description `%s' truncated"" , m -> desc )"	2058:3:47187:47242	750465	1	True				
ANR	752114	CallExpression	"file_magwarn ( ms , ""description `%s' truncated"" , m -> desc )"		750465	0					
ANR	752115	Callee	file_magwarn		750465	0					
ANR	752116	Identifier	file_magwarn		750465	0					
ANR	752117	ArgumentList	ms		750465	1					
ANR	752118	Argument	ms		750465	0					
ANR	752119	Identifier	ms		750465	0					
ANR	752120	Argument	"""description `%s' truncated"""		750465	1					
ANR	752121	PrimaryExpression	"""description `%s' truncated"""		750465	0					
ANR	752122	Argument	m -> desc		750465	2					
ANR	752123	PtrMemberAccess	m -> desc		750465	0					
ANR	752124	Identifier	m		750465	0					
ANR	752125	Identifier	desc		750465	1					
ANR	752126	IfStatement	if ( ms -> flags & MAGIC_CHECK )		750465	41					
ANR	752127	Condition	ms -> flags & MAGIC_CHECK	2065:12:47378:47400	750465	0	True				
ANR	752128	BitAndExpression	ms -> flags & MAGIC_CHECK		750465	0		&			
ANR	752129	PtrMemberAccess	ms -> flags		750465	0					
ANR	752130	Identifier	ms		750465	0					
ANR	752131	Identifier	flags		750465	1					
ANR	752132	Identifier	MAGIC_CHECK		750465	1					
ANR	752133	CompoundStatement		365:37:8166:8166	750465	1					
ANR	752134	IfStatement	"if ( check_format ( ms , m ) == - 1 )"		750465	0					
ANR	752135	Condition	"check_format ( ms , m ) == - 1"	2066:6:47411:47435	750465	0	True				
ANR	752136	EqualityExpression	"check_format ( ms , m ) == - 1"		750465	0		==			
ANR	752137	CallExpression	"check_format ( ms , m )"		750465	0					
ANR	752138	Callee	check_format		750465	0					
ANR	752139	Identifier	check_format		750465	0					
ANR	752140	ArgumentList	ms		750465	1					
ANR	752141	Argument	ms		750465	0					
ANR	752142	Identifier	ms		750465	0					
ANR	752143	Argument	m		750465	1					
ANR	752144	Identifier	m		750465	0					
ANR	752145	UnaryOperationExpression	- 1		750465	1					
ANR	752146	UnaryOperator	-		750465	0					
ANR	752147	PrimaryExpression	1		750465	1					
ANR	752148	ReturnStatement	return - 1 ;	2067:3:47441:47450	750465	1	True				
ANR	752149	UnaryOperationExpression	- 1		750465	0					
ANR	752150	UnaryOperator	-		750465	0					
ANR	752151	PrimaryExpression	1		750465	1					
ANR	752152	ExpressionStatement	m -> mimetype [ 0 ] = '\\0'	2069:1:47456:47477	750465	42	True				
ANR	752153	AssignmentExpression	m -> mimetype [ 0 ] = '\\0'		750465	0		=			
ANR	752154	ArrayIndexing	m -> mimetype [ 0 ]		750465	0					
ANR	752155	PtrMemberAccess	m -> mimetype		750465	0					
ANR	752156	Identifier	m		750465	0					
ANR	752157	Identifier	mimetype		750465	1					
ANR	752158	PrimaryExpression	0		750465	1					
ANR	752159	PrimaryExpression	'\\0'		750465	1					
ANR	752160	ReturnStatement	return 0 ;	2070:1:47516:47524	750465	43	True				
ANR	752161	PrimaryExpression	0		750465	0					
ANR	752162	ReturnType	int		750465	1					
ANR	752163	Identifier	parse		750465	2					
ANR	752164	ParameterList	"struct magic_set * ms , struct magic_entry * me , const char * line , size_t lineno , int action"		750465	3					
ANR	752165	Parameter	struct magic_set * ms	1699:6:39141:39160	750465	0	True				
ANR	752166	ParameterType	struct magic_set *		750465	0					
ANR	752167	Identifier	ms		750465	1					
ANR	752168	Parameter	struct magic_entry * me	1699:28:39163:39184	750465	1	True				
ANR	752169	ParameterType	struct magic_entry *		750465	0					
ANR	752170	Identifier	me		750465	1					
ANR	752171	Parameter	const char * line	1699:52:39187:39202	750465	2	True				
ANR	752172	ParameterType	const char *		750465	0					
ANR	752173	Identifier	line		750465	1					
ANR	752174	Parameter	size_t lineno	1700:4:39209:39221	750465	3	True				
ANR	752175	ParameterType	size_t		750465	0					
ANR	752176	Identifier	lineno		750465	1					
ANR	752177	Parameter	int action	1700:19:39224:39233	750465	4	True				
ANR	752178	ParameterType	int		750465	0					
ANR	752179	Identifier	action		750465	1					
ANR	752180	CFGEntryNode	ENTRY		750465		True				
ANR	752181	CFGExitNode	EXIT		750465		True				
ANR	752182	Symbol	FILE_BEDOUBLE		750465						
ANR	752183	Symbol	INDIR		750465						
ANR	752184	Symbol	m -> cond		750465						
ANR	752185	Symbol	* m -> mimetype		750465						
ANR	752186	Symbol	m -> in_offset		750465						
ANR	752187	Symbol	me -> mp		750465						
ANR	752188	Symbol	m -> type		750465						
ANR	752189	Symbol	len		750465						
ANR	752190	Symbol	FILE_LELONG		750465						
ANR	752191	Symbol	OFFADD		750465						
ANR	752192	Symbol	action		750465						
ANR	752193	Symbol	isdigit		750465						
ANR	752194	Symbol	FILE_BELONG		750465						
ANR	752195	Symbol	CAST		750465						
ANR	752196	Symbol	FILE_INVALID		750465						
ANR	752197	Symbol	parse_string_modifier		750465						
ANR	752198	Symbol	isspace		750465						
ANR	752199	Symbol	diff		750465						
ANR	752200	Symbol	FILE_LEID3		750465						
ANR	752201	Symbol	ms -> flags		750465						
ANR	752202	Symbol	m -> lineno		750465						
ANR	752203	Symbol	FILE_LONG		750465						
ANR	752204	Symbol	special_tbl		750465						
ANR	752205	Symbol	isalpha		750465						
ANR	752206	Symbol	* m -> desc		750465						
ANR	752207	Symbol	UNSIGNED		750465						
ANR	752208	Symbol	m -> flag		750465						
ANR	752209	Symbol	file_check_mem		750465						
ANR	752210	Symbol	* ms		750465						
ANR	752211	Symbol	FILE_BESHORT		750465						
ANR	752212	Symbol	cont_level		750465						
ANR	752213	Symbol	FILE_OPINDIRECT		750465						
ANR	752214	Symbol	get_type		750465						
ANR	752215	Symbol	strtol		750465						
ANR	752216	Symbol	m -> in_type		750465						
ANR	752217	Symbol	m -> mimetype		750465						
ANR	752218	Symbol	* me		750465						
ANR	752219	Symbol	* * m		750465						
ANR	752220	Symbol	isascii		750465						
ANR	752221	Symbol	FILE_STRING		750465						
ANR	752222	Symbol	get_standard_integer_type		750465						
ANR	752223	Symbol	* nm		750465						
ANR	752224	Symbol	cnt		750465						
ANR	752225	Symbol	i		750465						
ANR	752226	Symbol	uint32_t		750465						
ANR	752227	Symbol	* l ++		750465						
ANR	752228	Symbol	FILE_PSTRING		750465						
ANR	752229	Symbol	l		750465						
ANR	752230	Symbol	m		750465						
ANR	752231	Symbol	NOSPACE		750465						
ANR	752232	Symbol	me -> max_count		750465						
ANR	752233	Symbol	r		750465						
ANR	752234	Symbol	parse_indirect_modifier		750465						
ANR	752235	Symbol	t		750465						
ANR	752236	Symbol	FILE_MELONG		750465						
ANR	752237	Symbol	INDIROFFADD		750465						
ANR	752238	Symbol	MAGIC_CHECK		750465						
ANR	752239	Symbol	ALLOC_CHUNK		750465						
ANR	752240	Symbol	m -> factor_op		750465						
ANR	752241	Symbol	FILE_BEID3		750465						
ANR	752242	Symbol	type_tbl		750465						
ANR	752243	Symbol	m -> desc		750465						
ANR	752244	Symbol	FILE_INDIRECT		750465						
ANR	752245	Symbol	me		750465						
ANR	752246	Symbol	m -> in_op		750465						
ANR	752247	Symbol	get_cond		750465						
ANR	752248	Symbol	NULL		750465						
ANR	752249	Symbol	FILE_LESHORT		750465						
ANR	752250	Symbol	ms		750465						
ANR	752251	Symbol	m -> str_range		750465						
ANR	752252	Symbol	FILE_OPINVERSE		750465						
ANR	752253	Symbol	FILE_BYTE		750465						
ANR	752254	Symbol	last_cont_level		750465						
ANR	752255	Symbol	m -> cont_level		750465						
ANR	752256	Symbol	nm		750465						
ANR	752257	Symbol	line		750465						
ANR	752258	Symbol	m -> str_flags		750465						
ANR	752259	Symbol	FILE_OPDIVIDE		750465						
ANR	752260	Symbol	~OFFADD		750465						
ANR	752261	Symbol	getvalue		750465						
ANR	752262	Symbol	m -> mask_op		750465						
ANR	752263	Symbol	m -> reln		750465						
ANR	752264	Symbol	strtoul		750465						
ANR	752265	Symbol	op		750465						
ANR	752266	Symbol	PSTRING_1_LE		750465						
ANR	752267	Symbol	get_op		750465						
ANR	752268	Symbol	check_cond		750465						
ANR	752269	Symbol	FILE_FACTOR_OP_NONE		750465						
ANR	752270	Symbol	FILE_LEDOUBLE		750465						
ANR	752271	Symbol	m -> offset		750465						
ANR	752272	Symbol	& l		750465						
ANR	752273	Symbol	lineno		750465						
ANR	752274	Symbol	IS_LIBMAGIC_STRING		750465						
ANR	752275	Symbol	* l		750465						
ANR	752276	Symbol	* m		750465						
ANR	752277	Symbol	check_format		750465						
ANR	752278	Symbol	& t		750465						
ANR	752279	Symbol	me -> cont_count		750465						
ANR	752280	Function	parse_strength	2077:8:47635:48909							
ANR	752281	FunctionDef	"parse_strength (struct magic_set * ms , struct magic_entry * me , const char * line)"		752280	0					
ANR	752282	CompoundStatement		2079:0:47718:48909	752280	0					
ANR	752283	IdentifierDeclStatement	const char * l = line ;	2080:1:47721:47741	752280	0	True				
ANR	752284	IdentifierDecl	* l = line		752280	0					
ANR	752285	IdentifierDeclType	const char *		752280	0					
ANR	752286	Identifier	l		752280	1					
ANR	752287	AssignmentExpression	* l = line		752280	2		=			
ANR	752288	Identifier	line		752280	0					
ANR	752289	Identifier	line		752280	1					
ANR	752290	IdentifierDeclStatement	char * el ;	2081:1:47744:47752	752280	1	True				
ANR	752291	IdentifierDecl	* el		752280	0					
ANR	752292	IdentifierDeclType	char *		752280	0					
ANR	752293	Identifier	el		752280	1					
ANR	752294	IdentifierDeclStatement	unsigned long factor ;	2082:1:47755:47775	752280	2	True				
ANR	752295	IdentifierDecl	factor		752280	0					
ANR	752296	IdentifierDeclType	unsigned long		752280	0					
ANR	752297	Identifier	factor		752280	1					
ANR	752298	IdentifierDeclStatement	struct magic * m = & me -> mp [ 0 ] ;	2083:1:47778:47806	752280	3	True				
ANR	752299	IdentifierDecl	* m = & me -> mp [ 0 ]		752280	0					
ANR	752300	IdentifierDeclType	struct magic *		752280	0					
ANR	752301	Identifier	m		752280	1					
ANR	752302	AssignmentExpression	* m = & me -> mp [ 0 ]		752280	2		=			
ANR	752303	Identifier	m		752280	0					
ANR	752304	UnaryOperationExpression	& me -> mp [ 0 ]		752280	1					
ANR	752305	UnaryOperator	&		752280	0					
ANR	752306	ArrayIndexing	me -> mp [ 0 ]		752280	1					
ANR	752307	PtrMemberAccess	me -> mp		752280	0					
ANR	752308	Identifier	me		752280	0					
ANR	752309	Identifier	mp		752280	1					
ANR	752310	PrimaryExpression	0		752280	1					
ANR	752311	IfStatement	if ( m -> factor_op != FILE_FACTOR_OP_NONE )		752280	4					
ANR	752312	Condition	m -> factor_op != FILE_FACTOR_OP_NONE	2085:5:47814:47848	752280	0	True				
ANR	752313	EqualityExpression	m -> factor_op != FILE_FACTOR_OP_NONE		752280	0		!=			
ANR	752314	PtrMemberAccess	m -> factor_op		752280	0					
ANR	752315	Identifier	m		752280	0					
ANR	752316	Identifier	factor_op		752280	1					
ANR	752317	Identifier	FILE_FACTOR_OP_NONE		752280	1					
ANR	752318	CompoundStatement		7:42:132:132	752280	1					
ANR	752319	ExpressionStatement	"file_magwarn ( ms , ""Current entry already has a strength type: %c %d"" , m -> factor_op , m -> factor )"	2086:2:47855:47960	752280	0	True				
ANR	752320	CallExpression	"file_magwarn ( ms , ""Current entry already has a strength type: %c %d"" , m -> factor_op , m -> factor )"		752280	0					
ANR	752321	Callee	file_magwarn		752280	0					
ANR	752322	Identifier	file_magwarn		752280	0					
ANR	752323	ArgumentList	ms		752280	1					
ANR	752324	Argument	ms		752280	0					
ANR	752325	Identifier	ms		752280	0					
ANR	752326	Argument	"""Current entry already has a strength type: %c %d"""		752280	1					
ANR	752327	PrimaryExpression	"""Current entry already has a strength type: %c %d"""		752280	0					
ANR	752328	Argument	m -> factor_op		752280	2					
ANR	752329	PtrMemberAccess	m -> factor_op		752280	0					
ANR	752330	Identifier	m		752280	0					
ANR	752331	Identifier	factor_op		752280	1					
ANR	752332	Argument	m -> factor		752280	3					
ANR	752333	PtrMemberAccess	m -> factor		752280	0					
ANR	752334	Identifier	m		752280	0					
ANR	752335	Identifier	factor		752280	1					
ANR	752336	ReturnStatement	return - 1 ;	2089:2:47964:47973	752280	1	True				
ANR	752337	UnaryOperationExpression	- 1		752280	0					
ANR	752338	UnaryOperator	-		752280	0					
ANR	752339	PrimaryExpression	1		752280	1					
ANR	752340	IfStatement	if ( m -> type == FILE_NAME )		752280	5					
ANR	752341	Condition	m -> type == FILE_NAME	2091:5:47983:48002	752280	0	True				
ANR	752342	EqualityExpression	m -> type == FILE_NAME		752280	0		==			
ANR	752343	PtrMemberAccess	m -> type		752280	0					
ANR	752344	Identifier	m		752280	0					
ANR	752345	Identifier	type		752280	1					
ANR	752346	Identifier	FILE_NAME		752280	1					
ANR	752347	CompoundStatement		13:27:286:286	752280	1					
ANR	752348	Statement	file_magwarn	2092:2:48009:48020	752280	0	True				
ANR	752349	Statement	(	2092:14:48021:48021	752280	1	True				
ANR	752350	Statement	ms	2092:15:48022:48023	752280	2	True				
ANR	752351	Statement	","	2092:17:48024:48024	752280	3	True				
ANR	752352	Statement	"""%s: Strength setting is not supported in """	2092:19:48026:48068	752280	4	True				
ANR	752353	Statement	"""\\""name\\"" magic entries"""	2093:6:48076:48099	752280	5	True				
ANR	752354	Statement	","	2093:30:48100:48100	752280	6	True				
ANR	752355	Statement	m	2093:32:48102:48102	752280	7	True				
ANR	752356	Statement	->	2093:33:48103:48104	752280	8	True				
ANR	752357	Statement	value	2093:35:48105:48109	752280	9	True				
ANR	752358	Statement	.	2093:40:48110:48110	752280	10	True				
ANR	752359	Statement	s	2093:41:48111:48111	752280	11	True				
ANR	752360	Statement	)	2093:42:48112:48112	752280	12	True				
ANR	752361	ExpressionStatement		2093:43:48113:48113	752280	13	True				
ANR	752362	ReturnStatement	return - 1 ;	2094:2:48117:48126	752280	14	True				
ANR	752363	UnaryOperationExpression	- 1		752280	0					
ANR	752364	UnaryOperator	-		752280	0					
ANR	752365	PrimaryExpression	1		752280	1					
ANR	752366	ExpressionStatement	EATAB	2096:1:48132:48137	752280	6	True				
ANR	752367	Identifier	EATAB		752280	0					
ANR	752368	SwitchStatement	switch ( * l )		752280	7					
ANR	752369	Condition	* l	2097:9:48148:48149	752280	0	True				
ANR	752370	UnaryOperationExpression	* l		752280	0					
ANR	752371	UnaryOperator	*		752280	0					
ANR	752372	Identifier	l		752280	1					
ANR	752373	CompoundStatement		19:13:433:433	752280	1					
ANR	752374	Label	case FILE_FACTOR_OP_NONE :	2098:1:48155:48179	752280	0	True				
ANR	752375	Identifier	FILE_FACTOR_OP_NONE		752280	0					
ANR	752376	Label	case FILE_FACTOR_OP_PLUS :	2099:1:48182:48206	752280	1	True				
ANR	752377	Identifier	FILE_FACTOR_OP_PLUS		752280	0					
ANR	752378	Label	case FILE_FACTOR_OP_MINUS :	2100:1:48209:48234	752280	2	True				
ANR	752379	Identifier	FILE_FACTOR_OP_MINUS		752280	0					
ANR	752380	Label	case FILE_FACTOR_OP_TIMES :	2101:1:48237:48262	752280	3	True				
ANR	752381	Identifier	FILE_FACTOR_OP_TIMES		752280	0					
ANR	752382	Label	case FILE_FACTOR_OP_DIV :	2102:1:48265:48288	752280	4	True				
ANR	752383	Identifier	FILE_FACTOR_OP_DIV		752280	0					
ANR	752384	ExpressionStatement	m -> factor_op = * l ++	2103:2:48292:48311	752280	5	True				
ANR	752385	AssignmentExpression	m -> factor_op = * l ++		752280	0		=			
ANR	752386	PtrMemberAccess	m -> factor_op		752280	0					
ANR	752387	Identifier	m		752280	0					
ANR	752388	Identifier	factor_op		752280	1					
ANR	752389	UnaryOperationExpression	* l ++		752280	1					
ANR	752390	UnaryOperator	*		752280	0					
ANR	752391	PostIncDecOperationExpression	l ++		752280	1					
ANR	752392	Identifier	l		752280	0					
ANR	752393	IncDec	++		752280	1					
ANR	752394	BreakStatement	break ;	2104:2:48315:48320	752280	6	True				
ANR	752395	Label	default :	2105:1:48323:48330	752280	7	True				
ANR	752396	Identifier	default		752280	0					
ANR	752397	ExpressionStatement	"file_magwarn ( ms , ""Unknown factor op `%c'"" , * l )"	2106:2:48334:48380	752280	8	True				
ANR	752398	CallExpression	"file_magwarn ( ms , ""Unknown factor op `%c'"" , * l )"		752280	0					
ANR	752399	Callee	file_magwarn		752280	0					
ANR	752400	Identifier	file_magwarn		752280	0					
ANR	752401	ArgumentList	ms		752280	1					
ANR	752402	Argument	ms		752280	0					
ANR	752403	Identifier	ms		752280	0					
ANR	752404	Argument	"""Unknown factor op `%c'"""		752280	1					
ANR	752405	PrimaryExpression	"""Unknown factor op `%c'"""		752280	0					
ANR	752406	Argument	* l		752280	2					
ANR	752407	UnaryOperationExpression	* l		752280	0					
ANR	752408	UnaryOperator	*		752280	0					
ANR	752409	Identifier	l		752280	1					
ANR	752410	ReturnStatement	return - 1 ;	2107:2:48384:48393	752280	9	True				
ANR	752411	UnaryOperationExpression	- 1		752280	0					
ANR	752412	UnaryOperator	-		752280	0					
ANR	752413	PrimaryExpression	1		752280	1					
ANR	752414	ExpressionStatement	EATAB	2109:1:48399:48404	752280	8	True				
ANR	752415	Identifier	EATAB		752280	0					
ANR	752416	ExpressionStatement	"factor = strtoul ( l , & el , 0 )"	2110:1:48407:48434	752280	9	True				
ANR	752417	AssignmentExpression	"factor = strtoul ( l , & el , 0 )"		752280	0		=			
ANR	752418	Identifier	factor		752280	0					
ANR	752419	CallExpression	"strtoul ( l , & el , 0 )"		752280	1					
ANR	752420	Callee	strtoul		752280	0					
ANR	752421	Identifier	strtoul		752280	0					
ANR	752422	ArgumentList	l		752280	1					
ANR	752423	Argument	l		752280	0					
ANR	752424	Identifier	l		752280	0					
ANR	752425	Argument	& el		752280	1					
ANR	752426	UnaryOperationExpression	& el		752280	0					
ANR	752427	UnaryOperator	&		752280	0					
ANR	752428	Identifier	el		752280	1					
ANR	752429	Argument	0		752280	2					
ANR	752430	PrimaryExpression	0		752280	0					
ANR	752431	IfStatement	if ( factor > 255 )		752280	10					
ANR	752432	Condition	factor > 255	2111:5:48441:48452	752280	0	True				
ANR	752433	RelationalExpression	factor > 255		752280	0		>			
ANR	752434	Identifier	factor		752280	0					
ANR	752435	PrimaryExpression	255		752280	1					
ANR	752436	CompoundStatement		33:19:736:736	752280	1					
ANR	752437	ExpressionStatement	"file_magwarn ( ms , ""Too large factor `%lu'"" , factor )"	2112:2:48459:48509	752280	0	True				
ANR	752438	CallExpression	"file_magwarn ( ms , ""Too large factor `%lu'"" , factor )"		752280	0					
ANR	752439	Callee	file_magwarn		752280	0					
ANR	752440	Identifier	file_magwarn		752280	0					
ANR	752441	ArgumentList	ms		752280	1					
ANR	752442	Argument	ms		752280	0					
ANR	752443	Identifier	ms		752280	0					
ANR	752444	Argument	"""Too large factor `%lu'"""		752280	1					
ANR	752445	PrimaryExpression	"""Too large factor `%lu'"""		752280	0					
ANR	752446	Argument	factor		752280	2					
ANR	752447	Identifier	factor		752280	0					
ANR	752448	GotoStatement	goto out ;	2113:2:48513:48521	752280	1	True				
ANR	752449	Identifier	out		752280	0					
ANR	752450	IfStatement	if ( * el && ! isspace ( ( unsigned char ) * el ) )		752280	11					
ANR	752451	Condition	* el && ! isspace ( ( unsigned char ) * el )	2115:5:48531:48565	752280	0	True				
ANR	752452	AndExpression	* el && ! isspace ( ( unsigned char ) * el )		752280	0		&&			
ANR	752453	UnaryOperationExpression	* el		752280	0					
ANR	752454	UnaryOperator	*		752280	0					
ANR	752455	Identifier	el		752280	1					
ANR	752456	UnaryOperationExpression	! isspace ( ( unsigned char ) * el )		752280	1					
ANR	752457	UnaryOperator	!		752280	0					
ANR	752458	CallExpression	isspace ( ( unsigned char ) * el )		752280	1					
ANR	752459	Callee	isspace		752280	0					
ANR	752460	Identifier	isspace		752280	0					
ANR	752461	ArgumentList	( unsigned char ) * el		752280	1					
ANR	752462	Argument	( unsigned char ) * el		752280	0					
ANR	752463	CastExpression	( unsigned char ) * el		752280	0					
ANR	752464	CastTarget	unsigned char		752280	0					
ANR	752465	UnaryOperationExpression	* el		752280	1					
ANR	752466	UnaryOperator	*		752280	0					
ANR	752467	Identifier	el		752280	1					
ANR	752468	CompoundStatement		37:42:849:849	752280	1					
ANR	752469	ExpressionStatement	"file_magwarn ( ms , ""Bad factor `%s'"" , l )"	2116:2:48572:48610	752280	0	True				
ANR	752470	CallExpression	"file_magwarn ( ms , ""Bad factor `%s'"" , l )"		752280	0					
ANR	752471	Callee	file_magwarn		752280	0					
ANR	752472	Identifier	file_magwarn		752280	0					
ANR	752473	ArgumentList	ms		752280	1					
ANR	752474	Argument	ms		752280	0					
ANR	752475	Identifier	ms		752280	0					
ANR	752476	Argument	"""Bad factor `%s'"""		752280	1					
ANR	752477	PrimaryExpression	"""Bad factor `%s'"""		752280	0					
ANR	752478	Argument	l		752280	2					
ANR	752479	Identifier	l		752280	0					
ANR	752480	GotoStatement	goto out ;	2117:2:48614:48622	752280	1	True				
ANR	752481	Identifier	out		752280	0					
ANR	752482	ExpressionStatement	m -> factor = ( uint8_t ) factor	2119:1:48628:48655	752280	12	True				
ANR	752483	AssignmentExpression	m -> factor = ( uint8_t ) factor		752280	0		=			
ANR	752484	PtrMemberAccess	m -> factor		752280	0					
ANR	752485	Identifier	m		752280	0					
ANR	752486	Identifier	factor		752280	1					
ANR	752487	CastExpression	( uint8_t ) factor		752280	1					
ANR	752488	CastTarget	uint8_t		752280	0					
ANR	752489	Identifier	factor		752280	1					
ANR	752490	IfStatement	if ( m -> factor == 0 && m -> factor_op == FILE_FACTOR_OP_DIV )		752280	13					
ANR	752491	Condition	m -> factor == 0 && m -> factor_op == FILE_FACTOR_OP_DIV	2120:5:48662:48713	752280	0	True				
ANR	752492	AndExpression	m -> factor == 0 && m -> factor_op == FILE_FACTOR_OP_DIV		752280	0		&&			
ANR	752493	EqualityExpression	m -> factor == 0		752280	0		==			
ANR	752494	PtrMemberAccess	m -> factor		752280	0					
ANR	752495	Identifier	m		752280	0					
ANR	752496	Identifier	factor		752280	1					
ANR	752497	PrimaryExpression	0		752280	1					
ANR	752498	EqualityExpression	m -> factor_op == FILE_FACTOR_OP_DIV		752280	1		==			
ANR	752499	PtrMemberAccess	m -> factor_op		752280	0					
ANR	752500	Identifier	m		752280	0					
ANR	752501	Identifier	factor_op		752280	1					
ANR	752502	Identifier	FILE_FACTOR_OP_DIV		752280	1					
ANR	752503	CompoundStatement		42:59:997:997	752280	1					
ANR	752504	ExpressionStatement	"file_magwarn ( ms , ""Cannot have factor op `%c' and factor %u"" , m -> factor_op , m -> factor )"	2121:2:48720:48811	752280	0	True				
ANR	752505	CallExpression	"file_magwarn ( ms , ""Cannot have factor op `%c' and factor %u"" , m -> factor_op , m -> factor )"		752280	0					
ANR	752506	Callee	file_magwarn		752280	0					
ANR	752507	Identifier	file_magwarn		752280	0					
ANR	752508	ArgumentList	ms		752280	1					
ANR	752509	Argument	ms		752280	0					
ANR	752510	Identifier	ms		752280	0					
ANR	752511	Argument	"""Cannot have factor op `%c' and factor %u"""		752280	1					
ANR	752512	PrimaryExpression	"""Cannot have factor op `%c' and factor %u"""		752280	0					
ANR	752513	Argument	m -> factor_op		752280	2					
ANR	752514	PtrMemberAccess	m -> factor_op		752280	0					
ANR	752515	Identifier	m		752280	0					
ANR	752516	Identifier	factor_op		752280	1					
ANR	752517	Argument	m -> factor		752280	3					
ANR	752518	PtrMemberAccess	m -> factor		752280	0					
ANR	752519	Identifier	m		752280	0					
ANR	752520	Identifier	factor		752280	1					
ANR	752521	GotoStatement	goto out ;	2123:2:48815:48823	752280	1	True				
ANR	752522	Identifier	out		752280	0					
ANR	752523	ReturnStatement	return 0 ;	2125:1:48829:48837	752280	14	True				
ANR	752524	PrimaryExpression	0		752280	0					
ANR	752525	Label	out :	2126:0:48839:48842	752280	15	True				
ANR	752526	Identifier	out		752280	0					
ANR	752527	ExpressionStatement	m -> factor_op = FILE_FACTOR_OP_NONE	2127:1:48845:48879	752280	16	True				
ANR	752528	AssignmentExpression	m -> factor_op = FILE_FACTOR_OP_NONE		752280	0		=			
ANR	752529	PtrMemberAccess	m -> factor_op		752280	0					
ANR	752530	Identifier	m		752280	0					
ANR	752531	Identifier	factor_op		752280	1					
ANR	752532	Identifier	FILE_FACTOR_OP_NONE		752280	1					
ANR	752533	ExpressionStatement	m -> factor = 0	2128:1:48882:48895	752280	17	True				
ANR	752534	AssignmentExpression	m -> factor = 0		752280	0		=			
ANR	752535	PtrMemberAccess	m -> factor		752280	0					
ANR	752536	Identifier	m		752280	0					
ANR	752537	Identifier	factor		752280	1					
ANR	752538	PrimaryExpression	0		752280	1					
ANR	752539	ReturnStatement	return - 1 ;	2129:1:48898:48907	752280	18	True				
ANR	752540	UnaryOperationExpression	- 1		752280	0					
ANR	752541	UnaryOperator	-		752280	0					
ANR	752542	PrimaryExpression	1		752280	1					
ANR	752543	ReturnType	int		752280	1					
ANR	752544	Identifier	parse_strength		752280	2					
ANR	752545	ParameterList	"struct magic_set * ms , struct magic_entry * me , const char * line"		752280	3					
ANR	752546	Parameter	struct magic_set * ms	2078:15:47654:47673	752280	0	True				
ANR	752547	ParameterType	struct magic_set *		752280	0					
ANR	752548	Identifier	ms		752280	1					
ANR	752549	Parameter	struct magic_entry * me	2078:37:47676:47697	752280	1	True				
ANR	752550	ParameterType	struct magic_entry *		752280	0					
ANR	752551	Identifier	me		752280	1					
ANR	752552	Parameter	const char * line	2078:61:47700:47715	752280	2	True				
ANR	752553	ParameterType	const char *		752280	0					
ANR	752554	Identifier	line		752280	1					
ANR	752555	CFGEntryNode	ENTRY		752280		True				
ANR	752556	CFGExitNode	EXIT		752280		True				
ANR	752557	Symbol	ms		752280						
ANR	752558	Symbol	line		752280						
ANR	752559	Symbol	el		752280						
ANR	752560	Symbol	FILE_FACTOR_OP_DIV		752280						
ANR	752561	Symbol	m -> factor_op		752280						
ANR	752562	Symbol	isspace		752280						
ANR	752563	Symbol	* l ++		752280						
ANR	752564	Symbol	FILE_FACTOR_OP_NONE		752280						
ANR	752565	Symbol	l		752280						
ANR	752566	Symbol	m		752280						
ANR	752567	Symbol	me -> mp		752280						
ANR	752568	Symbol	FILE_NAME		752280						
ANR	752569	Symbol	* el		752280						
ANR	752570	Symbol	& el		752280						
ANR	752571	Symbol	m -> factor		752280						
ANR	752572	Symbol	m -> type		752280						
ANR	752573	Symbol	* l		752280						
ANR	752574	Symbol	* m		752280						
ANR	752575	Symbol	me		752280						
ANR	752576	Symbol	strtoul		752280						
ANR	752577	Symbol	factor		752280						
ANR	752578	Symbol	* me		752280						
ANR	752579	Function	goodchar	2132:8:48920:49027							
ANR	752580	FunctionDef	"goodchar (unsigned char x , const char * extra)"		752579	0					
ANR	752581	CompoundStatement		2134:0:48969:49027	752579	0					
ANR	752582	ReturnStatement	"return ( isascii ( x ) && isalnum ( x ) ) || strchr ( extra , x ) ;"	2135:1:48972:49025	752579	0	True				
ANR	752583	OrExpression	"( isascii ( x ) && isalnum ( x ) ) || strchr ( extra , x )"		752579	0		||			
ANR	752584	AndExpression	isascii ( x ) && isalnum ( x )		752579	0		&&			
ANR	752585	CallExpression	isascii ( x )		752579	0					
ANR	752586	Callee	isascii		752579	0					
ANR	752587	Identifier	isascii		752579	0					
ANR	752588	ArgumentList	x		752579	1					
ANR	752589	Argument	x		752579	0					
ANR	752590	Identifier	x		752579	0					
ANR	752591	CallExpression	isalnum ( x )		752579	1					
ANR	752592	Callee	isalnum		752579	0					
ANR	752593	Identifier	isalnum		752579	0					
ANR	752594	ArgumentList	x		752579	1					
ANR	752595	Argument	x		752579	0					
ANR	752596	Identifier	x		752579	0					
ANR	752597	CallExpression	"strchr ( extra , x )"		752579	1					
ANR	752598	Callee	strchr		752579	0					
ANR	752599	Identifier	strchr		752579	0					
ANR	752600	ArgumentList	extra		752579	1					
ANR	752601	Argument	extra		752579	0					
ANR	752602	Identifier	extra		752579	0					
ANR	752603	Argument	x		752579	1					
ANR	752604	Identifier	x		752579	0					
ANR	752605	ReturnType	int		752579	1					
ANR	752606	Identifier	goodchar		752579	2					
ANR	752607	ParameterList	"unsigned char x , const char * extra"		752579	3					
ANR	752608	Parameter	unsigned char x	2133:9:48933:48947	752579	0	True				
ANR	752609	ParameterType	unsigned char		752579	0					
ANR	752610	Identifier	x		752579	1					
ANR	752611	Parameter	const char * extra	2133:26:48950:48966	752579	1	True				
ANR	752612	ParameterType	const char *		752579	0					
ANR	752613	Identifier	extra		752579	1					
ANR	752614	CFGEntryNode	ENTRY		752579		True				
ANR	752615	CFGExitNode	EXIT		752579		True				
ANR	752616	Symbol	isalnum		752579						
ANR	752617	Symbol	extra		752579						
ANR	752618	Symbol	x		752579						
ANR	752619	Symbol	strchr		752579						
ANR	752620	Symbol	isascii		752579						
ANR	752621	Function	parse_extra	2138:8:49038:50222							
ANR	752622	FunctionDef	"parse_extra (struct magic_set * ms , struct magic_entry * me , const char * line , zend_off_t off , size_t len , const char * name , const char * extra , int nt)"		752621	0					
ANR	752623	CompoundStatement		2141:0:49195:50222	752621	0					
ANR	752624	IdentifierDeclStatement	size_t i ;	2142:1:49198:49206	752621	0	True				
ANR	752625	IdentifierDecl	i		752621	0					
ANR	752626	IdentifierDeclType	size_t		752621	0					
ANR	752627	Identifier	i		752621	1					
ANR	752628	IdentifierDeclStatement	const char * l = line ;	2143:1:49209:49229	752621	1	True				
ANR	752629	IdentifierDecl	* l = line		752621	0					
ANR	752630	IdentifierDeclType	const char *		752621	0					
ANR	752631	Identifier	l		752621	1					
ANR	752632	AssignmentExpression	* l = line		752621	2		=			
ANR	752633	Identifier	line		752621	0					
ANR	752634	Identifier	line		752621	1					
ANR	752635	IdentifierDeclStatement	struct magic * m = & me -> mp [ me -> cont_count == 0 ? 0 : me -> cont_count - 1 ] ;	2144:1:49232:49303	752621	2	True				
ANR	752636	IdentifierDecl	* m = & me -> mp [ me -> cont_count == 0 ? 0 : me -> cont_count - 1 ]		752621	0					
ANR	752637	IdentifierDeclType	struct magic *		752621	0					
ANR	752638	Identifier	m		752621	1					
ANR	752639	AssignmentExpression	* m = & me -> mp [ me -> cont_count == 0 ? 0 : me -> cont_count - 1 ]		752621	2		=			
ANR	752640	Identifier	m		752621	0					
ANR	752641	UnaryOperationExpression	& me -> mp [ me -> cont_count == 0 ? 0 : me -> cont_count - 1 ]		752621	1					
ANR	752642	UnaryOperator	&		752621	0					
ANR	752643	ArrayIndexing	me -> mp [ me -> cont_count == 0 ? 0 : me -> cont_count - 1 ]		752621	1					
ANR	752644	PtrMemberAccess	me -> mp		752621	0					
ANR	752645	Identifier	me		752621	0					
ANR	752646	Identifier	mp		752621	1					
ANR	752647	ConditionalExpression	me -> cont_count == 0 ? 0 : me -> cont_count - 1		752621	1					
ANR	752648	Condition	me -> cont_count == 0		752621	0					
ANR	752649	EqualityExpression	me -> cont_count == 0		752621	0		==			
ANR	752650	PtrMemberAccess	me -> cont_count		752621	0					
ANR	752651	Identifier	me		752621	0					
ANR	752652	Identifier	cont_count		752621	1					
ANR	752653	PrimaryExpression	0		752621	1					
ANR	752654	PrimaryExpression	0		752621	1					
ANR	752655	AdditiveExpression	me -> cont_count - 1		752621	2		-			
ANR	752656	PtrMemberAccess	me -> cont_count		752621	0					
ANR	752657	Identifier	me		752621	0					
ANR	752658	Identifier	cont_count		752621	1					
ANR	752659	PrimaryExpression	1		752621	1					
ANR	752660	Statement	char	2145:1:49306:49309	752621	3	True				
ANR	752661	Statement	*	2145:6:49311:49311	752621	4	True				
ANR	752662	Statement	buf	2145:7:49312:49314	752621	5	True				
ANR	752663	Statement	=	2145:11:49316:49316	752621	6	True				
ANR	752664	Statement	CAST	2145:13:49318:49321	752621	7	True				
ANR	752665	Statement	(	2145:17:49322:49322	752621	8	True				
ANR	752666	Statement	char	2145:18:49323:49326	752621	9	True				
ANR	752667	Statement	*	2145:23:49328:49328	752621	10	True				
ANR	752668	Statement	","	2145:24:49329:49329	752621	11	True				
ANR	752669	Statement	CAST	2145:26:49331:49334	752621	12	True				
ANR	752670	Statement	(	2145:30:49335:49335	752621	13	True				
ANR	752671	Statement	void	2145:31:49336:49339	752621	14	True				
ANR	752672	Statement	*	2145:36:49341:49341	752621	15	True				
ANR	752673	Statement	","	2145:37:49342:49342	752621	16	True				
ANR	752674	Statement	m	2145:39:49344:49344	752621	17	True				
ANR	752675	Statement	)	2145:40:49345:49345	752621	18	True				
ANR	752676	Statement	)	2145:41:49346:49346	752621	19	True				
ANR	752677	ExpressionStatement	+ off	2145:43:49348:49353	752621	20	True				
ANR	752678	UnaryOperationExpression	+ off		752621	0					
ANR	752679	UnaryOperator	+		752621	0					
ANR	752680	Identifier	off		752621	1					
ANR	752681	IfStatement	if ( buf [ 0 ] != '\\0' )		752621	21					
ANR	752682	Condition	buf [ 0 ] != '\\0'	2147:5:49361:49374	752621	0	True				
ANR	752683	EqualityExpression	buf [ 0 ] != '\\0'		752621	0		!=			
ANR	752684	ArrayIndexing	buf [ 0 ]		752621	0					
ANR	752685	Identifier	buf		752621	0					
ANR	752686	PrimaryExpression	0		752621	1					
ANR	752687	PrimaryExpression	'\\0'		752621	1					
ANR	752688	CompoundStatement		7:21:181:181	752621	1					
ANR	752689	ExpressionStatement	len = nt ? strlen ( buf ) : len	2148:2:49381:49409	752621	0	True				
ANR	752690	AssignmentExpression	len = nt ? strlen ( buf ) : len		752621	0		=			
ANR	752691	Identifier	len		752621	0					
ANR	752692	ConditionalExpression	nt ? strlen ( buf ) : len		752621	1					
ANR	752693	Condition	nt		752621	0					
ANR	752694	Identifier	nt		752621	0					
ANR	752695	CallExpression	strlen ( buf )		752621	1					
ANR	752696	Callee	strlen		752621	0					
ANR	752697	Identifier	strlen		752621	0					
ANR	752698	ArgumentList	buf		752621	1					
ANR	752699	Argument	buf		752621	0					
ANR	752700	Identifier	buf		752621	0					
ANR	752701	Identifier	len		752621	2					
ANR	752702	Statement	file_magwarn	2149:2:49413:49424	752621	1	True				
ANR	752703	Statement	(	2149:14:49425:49425	752621	2	True				
ANR	752704	Statement	ms	2149:15:49426:49427	752621	3	True				
ANR	752705	Statement	","	2149:17:49428:49428	752621	4	True				
ANR	752706	Statement	"""Current entry already has a %s type """	2149:19:49430:49467	752621	5	True				
ANR	752707	Statement	"""`%.*s', new type `%s'"""	2150:6:49475:49497	752621	6	True				
ANR	752708	Statement	","	2150:29:49498:49498	752621	7	True				
ANR	752709	Statement	name	2150:31:49500:49503	752621	8	True				
ANR	752710	Statement	","	2150:35:49504:49504	752621	9	True				
ANR	752711	Statement	(	2150:37:49506:49506	752621	10	True				
ANR	752712	Statement	int	2150:38:49507:49509	752621	11	True				
ANR	752713	Statement	)	2150:41:49510:49510	752621	12	True				
ANR	752714	Statement	len	2150:42:49511:49513	752621	13	True				
ANR	752715	Statement	","	2150:45:49514:49514	752621	14	True				
ANR	752716	Statement	buf	2150:47:49516:49518	752621	15	True				
ANR	752717	Statement	","	2150:50:49519:49519	752621	16	True				
ANR	752718	Statement	l	2150:52:49521:49521	752621	17	True				
ANR	752719	Statement	)	2150:53:49522:49522	752621	18	True				
ANR	752720	ExpressionStatement		2150:54:49523:49523	752621	19	True				
ANR	752721	ReturnStatement	return - 1 ;	2151:2:49527:49536	752621	20	True				
ANR	752722	UnaryOperationExpression	- 1		752621	0					
ANR	752723	UnaryOperator	-		752621	0					
ANR	752724	PrimaryExpression	1		752621	1					
ANR	752725	IfStatement	if ( * m -> desc == '\\0' )		752621	22					
ANR	752726	Condition	* m -> desc == '\\0'	2154:5:49548:49563	752621	0	True				
ANR	752727	EqualityExpression	* m -> desc == '\\0'		752621	0		==			
ANR	752728	UnaryOperationExpression	* m -> desc		752621	0					
ANR	752729	UnaryOperator	*		752621	0					
ANR	752730	PtrMemberAccess	m -> desc		752621	1					
ANR	752731	Identifier	m		752621	0					
ANR	752732	Identifier	desc		752621	1					
ANR	752733	PrimaryExpression	'\\0'		752621	1					
ANR	752734	CompoundStatement		14:23:370:370	752621	1					
ANR	752735	Statement	file_magwarn	2155:2:49570:49581	752621	0	True				
ANR	752736	Statement	(	2155:14:49582:49582	752621	1	True				
ANR	752737	Statement	ms	2155:15:49583:49584	752621	2	True				
ANR	752738	Statement	","	2155:17:49585:49585	752621	3	True				
ANR	752739	Statement	"""Current entry does not yet have a """	2155:19:49587:49622	752621	4	True				
ANR	752740	Statement	"""description for adding a %s type"""	2156:6:49630:49663	752621	5	True				
ANR	752741	Statement	","	2156:40:49664:49664	752621	6	True				
ANR	752742	Statement	name	2156:42:49666:49669	752621	7	True				
ANR	752743	Statement	)	2156:46:49670:49670	752621	8	True				
ANR	752744	ExpressionStatement		2156:47:49671:49671	752621	9	True				
ANR	752745	ReturnStatement	return - 1 ;	2157:2:49675:49684	752621	10	True				
ANR	752746	UnaryOperationExpression	- 1		752621	0					
ANR	752747	UnaryOperator	-		752621	0					
ANR	752748	PrimaryExpression	1		752621	1					
ANR	752749	ExpressionStatement	EATAB	2160:1:49691:49696	752621	23	True				
ANR	752750	Identifier	EATAB		752621	0					
ANR	752751	ForStatement	"for ( i = 0 ; * l && i < len && goodchar ( * l , extra ) ; buf [ i ++ ] = * l ++ )"		752621	24					
ANR	752752	ForInit	i = 0 ;	2161:6:49704:49709	752621	0	True				
ANR	752753	AssignmentExpression	i = 0		752621	0		=			
ANR	752754	Identifier	i		752621	0					
ANR	752755	PrimaryExpression	0		752621	1					
ANR	752756	Condition	"* l && i < len && goodchar ( * l , extra )"	2161:13:49711:49746	752621	1	True				
ANR	752757	AndExpression	"* l && i < len && goodchar ( * l , extra )"		752621	0		&&			
ANR	752758	UnaryOperationExpression	* l		752621	0					
ANR	752759	UnaryOperator	*		752621	0					
ANR	752760	Identifier	l		752621	1					
ANR	752761	AndExpression	"i < len && goodchar ( * l , extra )"		752621	1		&&			
ANR	752762	RelationalExpression	i < len		752621	0		<			
ANR	752763	Identifier	i		752621	0					
ANR	752764	Identifier	len		752621	1					
ANR	752765	CallExpression	"goodchar ( * l , extra )"		752621	1					
ANR	752766	Callee	goodchar		752621	0					
ANR	752767	Identifier	goodchar		752621	0					
ANR	752768	ArgumentList	* l		752621	1					
ANR	752769	Argument	* l		752621	0					
ANR	752770	UnaryOperationExpression	* l		752621	0					
ANR	752771	UnaryOperator	*		752621	0					
ANR	752772	Identifier	l		752621	1					
ANR	752773	Argument	extra		752621	1					
ANR	752774	Identifier	extra		752621	0					
ANR	752775	AssignmentExpression	buf [ i ++ ] = * l ++	2161:51:49749:49763	752621	2	True	=			
ANR	752776	ArrayIndexing	buf [ i ++ ]		752621	0					
ANR	752777	Identifier	buf		752621	0					
ANR	752778	PostIncDecOperationExpression	i ++		752621	1					
ANR	752779	Identifier	i		752621	0					
ANR	752780	IncDec	++		752621	1					
ANR	752781	UnaryOperationExpression	* l ++		752621	1					
ANR	752782	UnaryOperator	*		752621	0					
ANR	752783	PostIncDecOperationExpression	l ++		752621	1					
ANR	752784	Identifier	l		752621	0					
ANR	752785	IncDec	++		752621	1					
ANR	752786	ContinueStatement	continue ;	2162:2:49768:49776	752621	3	True				
ANR	752787	IfStatement	if ( i == len && * l )		752621	25					
ANR	752788	Condition	i == len && * l	2164:5:49784:49797	752621	0	True				
ANR	752789	AndExpression	i == len && * l		752621	0		&&			
ANR	752790	EqualityExpression	i == len		752621	0		==			
ANR	752791	Identifier	i		752621	0					
ANR	752792	Identifier	len		752621	1					
ANR	752793	UnaryOperationExpression	* l		752621	1					
ANR	752794	UnaryOperator	*		752621	0					
ANR	752795	Identifier	l		752621	1					
ANR	752796	CompoundStatement		24:21:604:604	752621	1					
ANR	752797	IfStatement	if ( nt )		752621	0					
ANR	752798	Condition	nt	2165:6:49808:49809	752621	0	True				
ANR	752799	Identifier	nt		752621	0					
ANR	752800	ExpressionStatement	buf [ len - 1 ] = '\\0'	2166:3:49815:49834	752621	1	True				
ANR	752801	AssignmentExpression	buf [ len - 1 ] = '\\0'		752621	0		=			
ANR	752802	ArrayIndexing	buf [ len - 1 ]		752621	0					
ANR	752803	Identifier	buf		752621	0					
ANR	752804	AdditiveExpression	len - 1		752621	1		-			
ANR	752805	Identifier	len		752621	0					
ANR	752806	PrimaryExpression	1		752621	1					
ANR	752807	PrimaryExpression	'\\0'		752621	1					
ANR	752808	IfStatement	if ( ms -> flags & MAGIC_CHECK )		752621	1					
ANR	752809	Condition	ms -> flags & MAGIC_CHECK	2167:6:49842:49864	752621	0	True				
ANR	752810	BitAndExpression	ms -> flags & MAGIC_CHECK		752621	0		&			
ANR	752811	PtrMemberAccess	ms -> flags		752621	0					
ANR	752812	Identifier	ms		752621	0					
ANR	752813	Identifier	flags		752621	1					
ANR	752814	Identifier	MAGIC_CHECK		752621	1					
ANR	752815	Statement	file_magwarn	2168:3:49870:49881	752621	1	True				
ANR	752816	Statement	(	2168:15:49882:49882	752621	2	True				
ANR	752817	Statement	ms	2168:16:49883:49884	752621	3	True				
ANR	752818	Statement	","	2168:18:49885:49885	752621	4	True				
ANR	752819	Statement	"""%s type `%s' truncated %"""	2168:20:49887:49912	752621	5	True				
ANR	752820	Statement	SIZE_T_FORMAT	2169:7:49921:49933	752621	6	True				
ANR	752821	Statement	"""u"""	2169:21:49935:49937	752621	7	True				
ANR	752822	Statement	","	2169:24:49938:49938	752621	8	True				
ANR	752823	Statement	name	2169:26:49940:49943	752621	9	True				
ANR	752824	Statement	","	2169:30:49944:49944	752621	10	True				
ANR	752825	Statement	line	2169:32:49946:49949	752621	11	True				
ANR	752826	Statement	","	2169:36:49950:49950	752621	12	True				
ANR	752827	Statement	i	2169:38:49952:49952	752621	13	True				
ANR	752828	Statement	)	2169:39:49953:49953	752621	14	True				
ANR	752829	ExpressionStatement		2169:40:49954:49954	752621	15	True				
ANR	752830	ElseStatement	else		752621	0					
ANR	752831	CompoundStatement		30:8:768:768	752621	0					
ANR	752832	IfStatement	"if ( ! isspace ( ( unsigned char ) * l ) && ! goodchar ( * l , extra ) )"		752621	0					
ANR	752833	Condition	"! isspace ( ( unsigned char ) * l ) && ! goodchar ( * l , extra )"	2171:6:49972:50022	752621	0	True				
ANR	752834	AndExpression	"! isspace ( ( unsigned char ) * l ) && ! goodchar ( * l , extra )"		752621	0		&&			
ANR	752835	UnaryOperationExpression	! isspace ( ( unsigned char ) * l )		752621	0					
ANR	752836	UnaryOperator	!		752621	0					
ANR	752837	CallExpression	isspace ( ( unsigned char ) * l )		752621	1					
ANR	752838	Callee	isspace		752621	0					
ANR	752839	Identifier	isspace		752621	0					
ANR	752840	ArgumentList	( unsigned char ) * l		752621	1					
ANR	752841	Argument	( unsigned char ) * l		752621	0					
ANR	752842	CastExpression	( unsigned char ) * l		752621	0					
ANR	752843	CastTarget	unsigned char		752621	0					
ANR	752844	UnaryOperationExpression	* l		752621	1					
ANR	752845	UnaryOperator	*		752621	0					
ANR	752846	Identifier	l		752621	1					
ANR	752847	UnaryOperationExpression	"! goodchar ( * l , extra )"		752621	1					
ANR	752848	UnaryOperator	!		752621	0					
ANR	752849	CallExpression	"goodchar ( * l , extra )"		752621	1					
ANR	752850	Callee	goodchar		752621	0					
ANR	752851	Identifier	goodchar		752621	0					
ANR	752852	ArgumentList	* l		752621	1					
ANR	752853	Argument	* l		752621	0					
ANR	752854	UnaryOperationExpression	* l		752621	0					
ANR	752855	UnaryOperator	*		752621	0					
ANR	752856	Identifier	l		752621	1					
ANR	752857	Argument	extra		752621	1					
ANR	752858	Identifier	extra		752621	0					
ANR	752859	ExpressionStatement	"file_magwarn ( ms , ""%s type `%s' has bad char '%c'"" , name , line , * l )"	2172:3:50028:50101	752621	1	True				
ANR	752860	CallExpression	"file_magwarn ( ms , ""%s type `%s' has bad char '%c'"" , name , line , * l )"		752621	0					
ANR	752861	Callee	file_magwarn		752621	0					
ANR	752862	Identifier	file_magwarn		752621	0					
ANR	752863	ArgumentList	ms		752621	1					
ANR	752864	Argument	ms		752621	0					
ANR	752865	Identifier	ms		752621	0					
ANR	752866	Argument	"""%s type `%s' has bad char '%c'"""		752621	1					
ANR	752867	PrimaryExpression	"""%s type `%s' has bad char '%c'"""		752621	0					
ANR	752868	Argument	name		752621	2					
ANR	752869	Identifier	name		752621	0					
ANR	752870	Argument	line		752621	3					
ANR	752871	Identifier	line		752621	0					
ANR	752872	Argument	* l		752621	4					
ANR	752873	UnaryOperationExpression	* l		752621	0					
ANR	752874	UnaryOperator	*		752621	0					
ANR	752875	Identifier	l		752621	1					
ANR	752876	IfStatement	if ( nt )		752621	1					
ANR	752877	Condition	nt	2174:6:50109:50110	752621	0	True				
ANR	752878	Identifier	nt		752621	0					
ANR	752879	ExpressionStatement	buf [ i ] = '\\0'	2175:3:50116:50129	752621	1	True				
ANR	752880	AssignmentExpression	buf [ i ] = '\\0'		752621	0		=			
ANR	752881	ArrayIndexing	buf [ i ]		752621	0					
ANR	752882	Identifier	buf		752621	0					
ANR	752883	Identifier	i		752621	1					
ANR	752884	PrimaryExpression	'\\0'		752621	1					
ANR	752885	IfStatement	if ( i > 0 )		752621	26					
ANR	752886	Condition	i > 0	2178:5:50140:50144	752621	0	True				
ANR	752887	RelationalExpression	i > 0		752621	0		>			
ANR	752888	Identifier	i		752621	0					
ANR	752889	PrimaryExpression	0		752621	1					
ANR	752890	ReturnStatement	return 0 ;	2179:2:50149:50157	752621	1	True				
ANR	752891	PrimaryExpression	0		752621	0					
ANR	752892	ExpressionStatement	"file_magerror ( ms , ""Bad magic entry '%s'"" , line )"	2181:1:50161:50208	752621	27	True				
ANR	752893	CallExpression	"file_magerror ( ms , ""Bad magic entry '%s'"" , line )"		752621	0					
ANR	752894	Callee	file_magerror		752621	0					
ANR	752895	Identifier	file_magerror		752621	0					
ANR	752896	ArgumentList	ms		752621	1					
ANR	752897	Argument	ms		752621	0					
ANR	752898	Identifier	ms		752621	0					
ANR	752899	Argument	"""Bad magic entry '%s'"""		752621	1					
ANR	752900	PrimaryExpression	"""Bad magic entry '%s'"""		752621	0					
ANR	752901	Argument	line		752621	2					
ANR	752902	Identifier	line		752621	0					
ANR	752903	ReturnStatement	return - 1 ;	2182:1:50211:50220	752621	28	True				
ANR	752904	UnaryOperationExpression	- 1		752621	0					
ANR	752905	UnaryOperator	-		752621	0					
ANR	752906	PrimaryExpression	1		752621	1					
ANR	752907	ReturnType	int		752621	1					
ANR	752908	Identifier	parse_extra		752621	2					
ANR	752909	ParameterList	"struct magic_set * ms , struct magic_entry * me , const char * line , zend_off_t off , size_t len , const char * name , const char * extra , int nt"		752621	3					
ANR	752910	Parameter	struct magic_set * ms	2139:12:49054:49073	752621	0	True				
ANR	752911	ParameterType	struct magic_set *		752621	0					
ANR	752912	Identifier	ms		752621	1					
ANR	752913	Parameter	struct magic_entry * me	2139:34:49076:49097	752621	1	True				
ANR	752914	ParameterType	struct magic_entry *		752621	0					
ANR	752915	Identifier	me		752621	1					
ANR	752916	Parameter	const char * line	2139:58:49100:49115	752621	2	True				
ANR	752917	ParameterType	const char *		752621	0					
ANR	752918	Identifier	line		752621	1					
ANR	752919	Parameter	zend_off_t off	2140:4:49122:49135	752621	3	True				
ANR	752920	ParameterType	zend_off_t		752621	0					
ANR	752921	Identifier	off		752621	1					
ANR	752922	Parameter	size_t len	2140:20:49138:49147	752621	4	True				
ANR	752923	ParameterType	size_t		752621	0					
ANR	752924	Identifier	len		752621	1					
ANR	752925	Parameter	const char * name	2140:32:49150:49165	752621	5	True				
ANR	752926	ParameterType	const char *		752621	0					
ANR	752927	Identifier	name		752621	1					
ANR	752928	Parameter	const char * extra	2140:50:49168:49184	752621	6	True				
ANR	752929	ParameterType	const char *		752621	0					
ANR	752930	Identifier	extra		752621	1					
ANR	752931	Parameter	int nt	2140:69:49187:49192	752621	7	True				
ANR	752932	ParameterType	int		752621	0					
ANR	752933	Identifier	nt		752621	1					
ANR	752934	CFGEntryNode	ENTRY		752621		True				
ANR	752935	CFGExitNode	EXIT		752621		True				
ANR	752936	Symbol	* m -> desc		752621						
ANR	752937	Symbol	line		752621						
ANR	752938	Symbol	nt		752621						
ANR	752939	Symbol	me -> mp		752621						
ANR	752940	Symbol	* ms		752621						
ANR	752941	Symbol	strlen		752621						
ANR	752942	Symbol	m -> desc		752621						
ANR	752943	Symbol	len		752621						
ANR	752944	Symbol	goodchar		752621						
ANR	752945	Symbol	extra		752621						
ANR	752946	Symbol	me		752621						
ANR	752947	Symbol	* me		752621						
ANR	752948	Symbol	* * m		752621						
ANR	752949	Symbol	* buf		752621						
ANR	752950	Symbol	ms		752621						
ANR	752951	Symbol	isspace		752621						
ANR	752952	Symbol	i		752621						
ANR	752953	Symbol	* l ++		752621						
ANR	752954	Symbol	l		752621						
ANR	752955	Symbol	m		752621						
ANR	752956	Symbol	off		752621						
ANR	752957	Symbol	buf		752621						
ANR	752958	Symbol	* i		752621						
ANR	752959	Symbol	* l		752621						
ANR	752960	Symbol	* m		752621						
ANR	752961	Symbol	name		752621						
ANR	752962	Symbol	MAGIC_CHECK		752621						
ANR	752963	Symbol	ms -> flags		752621						
ANR	752964	Symbol	me -> cont_count		752621						
ANR	752965	Symbol	* len		752621						
ANR	752966	Function	parse_apple	2189:8:50334:50576							
ANR	752967	FunctionDef	"parse_apple (struct magic_set * ms , struct magic_entry * me , const char * line)"		752966	0					
ANR	752968	CompoundStatement		2191:0:50414:50576	752966	0					
ANR	752969	IdentifierDeclStatement	struct magic * m = & me -> mp [ 0 ] ;	2192:1:50417:50445	752966	0	True				
ANR	752970	IdentifierDecl	* m = & me -> mp [ 0 ]		752966	0					
ANR	752971	IdentifierDeclType	struct magic *		752966	0					
ANR	752972	Identifier	m		752966	1					
ANR	752973	AssignmentExpression	* m = & me -> mp [ 0 ]		752966	2		=			
ANR	752974	Identifier	m		752966	0					
ANR	752975	UnaryOperationExpression	& me -> mp [ 0 ]		752966	1					
ANR	752976	UnaryOperator	&		752966	0					
ANR	752977	ArrayIndexing	me -> mp [ 0 ]		752966	1					
ANR	752978	PtrMemberAccess	me -> mp		752966	0					
ANR	752979	Identifier	me		752966	0					
ANR	752980	Identifier	mp		752966	1					
ANR	752981	PrimaryExpression	0		752966	1					
ANR	752982	Statement	return	2194:1:50449:50454	752966	1	True				
ANR	752983	Statement	parse_extra	2194:8:50456:50466	752966	2	True				
ANR	752984	Statement	(	2194:19:50467:50467	752966	3	True				
ANR	752985	Statement	ms	2194:20:50468:50469	752966	4	True				
ANR	752986	Statement	","	2194:22:50470:50470	752966	5	True				
ANR	752987	Statement	me	2194:24:50472:50473	752966	6	True				
ANR	752988	Statement	","	2194:26:50474:50474	752966	7	True				
ANR	752989	Statement	line	2194:28:50476:50479	752966	8	True				
ANR	752990	Statement	","	2194:32:50480:50480	752966	9	True				
ANR	752991	Statement	CAST	2195:5:50487:50490	752966	10	True				
ANR	752992	Statement	(	2195:9:50491:50491	752966	11	True				
ANR	752993	Statement	off_t	2195:10:50492:50496	752966	12	True				
ANR	752994	Statement	","	2195:15:50497:50497	752966	13	True				
ANR	752995	Statement	offsetof	2195:17:50499:50506	752966	14	True				
ANR	752996	Statement	(	2195:25:50507:50507	752966	15	True				
ANR	752997	Statement	struct	2195:26:50508:50513	752966	16	True				
ANR	752998	Statement	magic	2195:33:50515:50519	752966	17	True				
ANR	752999	Statement	","	2195:38:50520:50520	752966	18	True				
ANR	753000	Statement	apple	2195:40:50522:50526	752966	19	True				
ANR	753001	Statement	)	2195:45:50527:50527	752966	20	True				
ANR	753002	Statement	)	2195:46:50528:50528	752966	21	True				
ANR	753003	Statement	","	2195:47:50529:50529	752966	22	True				
ANR	753004	Statement	sizeof	2196:5:50536:50541	752966	23	True				
ANR	753005	Statement	(	2196:11:50542:50542	752966	24	True				
ANR	753006	Statement	m	2196:12:50543:50543	752966	25	True				
ANR	753007	Statement	->	2196:13:50544:50545	752966	26	True				
ANR	753008	Statement	apple	2196:15:50546:50550	752966	27	True				
ANR	753009	Statement	)	2196:20:50551:50551	752966	28	True				
ANR	753010	Statement	","	2196:21:50552:50552	752966	29	True				
ANR	753011	Statement	"""APPLE"""	2196:23:50554:50560	752966	30	True				
ANR	753012	Statement	","	2196:30:50561:50561	752966	31	True				
ANR	753013	Statement	"""!+-./"""	2196:32:50563:50569	752966	32	True				
ANR	753014	Statement	","	2196:39:50570:50570	752966	33	True				
ANR	753015	Statement	0	2196:41:50572:50572	752966	34	True				
ANR	753016	Statement	)	2196:42:50573:50573	752966	35	True				
ANR	753017	ExpressionStatement		2196:43:50574:50574	752966	36	True				
ANR	753018	ReturnType	int		752966	1					
ANR	753019	Identifier	parse_apple		752966	2					
ANR	753020	ParameterList	"struct magic_set * ms , struct magic_entry * me , const char * line"		752966	3					
ANR	753021	Parameter	struct magic_set * ms	2190:12:50350:50369	752966	0	True				
ANR	753022	ParameterType	struct magic_set *		752966	0					
ANR	753023	Identifier	ms		752966	1					
ANR	753024	Parameter	struct magic_entry * me	2190:34:50372:50393	752966	1	True				
ANR	753025	ParameterType	struct magic_entry *		752966	0					
ANR	753026	Identifier	me		752966	1					
ANR	753027	Parameter	const char * line	2190:58:50396:50411	752966	2	True				
ANR	753028	ParameterType	const char *		752966	0					
ANR	753029	Identifier	line		752966	1					
ANR	753030	CFGEntryNode	ENTRY		752966		True				
ANR	753031	CFGExitNode	EXIT		752966		True				
ANR	753032	Symbol	ms		752966						
ANR	753033	Symbol	line		752966						
ANR	753034	Symbol	me		752966						
ANR	753035	Symbol	me -> mp		752966						
ANR	753036	Symbol	* me		752966						
ANR	753037	Symbol	m		752966						
ANR	753038	Function	parse_mime	2203:8:50681:50931							
ANR	753039	FunctionDef	"parse_mime (struct magic_set * ms , struct magic_entry * me , const char * line)"		753038	0					
ANR	753040	CompoundStatement		2205:0:50760:50931	753038	0					
ANR	753041	IdentifierDeclStatement	struct magic * m = & me -> mp [ 0 ] ;	2206:1:50763:50791	753038	0	True				
ANR	753042	IdentifierDecl	* m = & me -> mp [ 0 ]		753038	0					
ANR	753043	IdentifierDeclType	struct magic *		753038	0					
ANR	753044	Identifier	m		753038	1					
ANR	753045	AssignmentExpression	* m = & me -> mp [ 0 ]		753038	2		=			
ANR	753046	Identifier	m		753038	0					
ANR	753047	UnaryOperationExpression	& me -> mp [ 0 ]		753038	1					
ANR	753048	UnaryOperator	&		753038	0					
ANR	753049	ArrayIndexing	me -> mp [ 0 ]		753038	1					
ANR	753050	PtrMemberAccess	me -> mp		753038	0					
ANR	753051	Identifier	me		753038	0					
ANR	753052	Identifier	mp		753038	1					
ANR	753053	PrimaryExpression	0		753038	1					
ANR	753054	Statement	return	2208:1:50795:50800	753038	1	True				
ANR	753055	Statement	parse_extra	2208:8:50802:50812	753038	2	True				
ANR	753056	Statement	(	2208:19:50813:50813	753038	3	True				
ANR	753057	Statement	ms	2208:20:50814:50815	753038	4	True				
ANR	753058	Statement	","	2208:22:50816:50816	753038	5	True				
ANR	753059	Statement	me	2208:24:50818:50819	753038	6	True				
ANR	753060	Statement	","	2208:26:50820:50820	753038	7	True				
ANR	753061	Statement	line	2208:28:50822:50825	753038	8	True				
ANR	753062	Statement	","	2208:32:50826:50826	753038	9	True				
ANR	753063	Statement	CAST	2209:5:50833:50836	753038	10	True				
ANR	753064	Statement	(	2209:9:50837:50837	753038	11	True				
ANR	753065	Statement	zend_off_t	2209:10:50838:50847	753038	12	True				
ANR	753066	Statement	","	2209:20:50848:50848	753038	13	True				
ANR	753067	Statement	offsetof	2209:22:50850:50857	753038	14	True				
ANR	753068	Statement	(	2209:30:50858:50858	753038	15	True				
ANR	753069	Statement	struct	2209:31:50859:50864	753038	16	True				
ANR	753070	Statement	magic	2209:38:50866:50870	753038	17	True				
ANR	753071	Statement	","	2209:43:50871:50871	753038	18	True				
ANR	753072	Statement	mimetype	2209:45:50873:50880	753038	19	True				
ANR	753073	Statement	)	2209:53:50881:50881	753038	20	True				
ANR	753074	Statement	)	2209:54:50882:50882	753038	21	True				
ANR	753075	Statement	","	2209:55:50883:50883	753038	22	True				
ANR	753076	Statement	sizeof	2210:5:50890:50895	753038	23	True				
ANR	753077	Statement	(	2210:11:50896:50896	753038	24	True				
ANR	753078	Statement	m	2210:12:50897:50897	753038	25	True				
ANR	753079	Statement	->	2210:13:50898:50899	753038	26	True				
ANR	753080	Statement	mimetype	2210:15:50900:50907	753038	27	True				
ANR	753081	Statement	)	2210:23:50908:50908	753038	28	True				
ANR	753082	Statement	","	2210:24:50909:50909	753038	29	True				
ANR	753083	Statement	"""MIME"""	2210:26:50911:50916	753038	30	True				
ANR	753084	Statement	","	2210:32:50917:50917	753038	31	True				
ANR	753085	Statement	"""+-/."""	2210:34:50919:50924	753038	32	True				
ANR	753086	Statement	","	2210:40:50925:50925	753038	33	True				
ANR	753087	Statement	1	2210:42:50927:50927	753038	34	True				
ANR	753088	Statement	)	2210:43:50928:50928	753038	35	True				
ANR	753089	ExpressionStatement		2210:44:50929:50929	753038	36	True				
ANR	753090	ReturnType	int		753038	1					
ANR	753091	Identifier	parse_mime		753038	2					
ANR	753092	ParameterList	"struct magic_set * ms , struct magic_entry * me , const char * line"		753038	3					
ANR	753093	Parameter	struct magic_set * ms	2204:11:50696:50715	753038	0	True				
ANR	753094	ParameterType	struct magic_set *		753038	0					
ANR	753095	Identifier	ms		753038	1					
ANR	753096	Parameter	struct magic_entry * me	2204:33:50718:50739	753038	1	True				
ANR	753097	ParameterType	struct magic_entry *		753038	0					
ANR	753098	Identifier	me		753038	1					
ANR	753099	Parameter	const char * line	2204:57:50742:50757	753038	2	True				
ANR	753100	ParameterType	const char *		753038	0					
ANR	753101	Identifier	line		753038	1					
ANR	753102	CFGEntryNode	ENTRY		753038		True				
ANR	753103	CFGExitNode	EXIT		753038		True				
ANR	753104	Symbol	ms		753038						
ANR	753105	Symbol	line		753038						
ANR	753106	Symbol	me		753038						
ANR	753107	Symbol	* me		753038						
ANR	753108	Symbol	m		753038						
ANR	753109	Symbol	me -> mp		753038						
ANR	753110	Function	check_format_type	2213:8:50942:53608							
ANR	753111	FunctionDef	"check_format_type (const char * ptr , int type)"		753110	0					
ANR	753112	CompoundStatement		2215:0:50991:53608	753110	0					
ANR	753113	IdentifierDeclStatement	"int quad = 0 , h ;"	2216:1:50994:51009	753110	0	True				
ANR	753114	IdentifierDecl	quad = 0		753110	0					
ANR	753115	IdentifierDeclType	int		753110	0					
ANR	753116	Identifier	quad		753110	1					
ANR	753117	AssignmentExpression	quad = 0		753110	2		=			
ANR	753118	Identifier	quad		753110	0					
ANR	753119	PrimaryExpression	0		753110	1					
ANR	753120	IdentifierDecl	h		753110	1					
ANR	753121	IdentifierDeclType	int		753110	0					
ANR	753122	Identifier	h		753110	1					
ANR	753123	IfStatement	if ( * ptr == '\\0' )		753110	1					
ANR	753124	Condition	* ptr == '\\0'	2217:5:51016:51027	753110	0	True				
ANR	753125	EqualityExpression	* ptr == '\\0'		753110	0		==			
ANR	753126	UnaryOperationExpression	* ptr		753110	0					
ANR	753127	UnaryOperator	*		753110	0					
ANR	753128	Identifier	ptr		753110	1					
ANR	753129	PrimaryExpression	'\\0'		753110	1					
ANR	753130	CompoundStatement		3:19:38:38	753110	1					
ANR	753131	ReturnStatement	return - 1 ;	2219:2:51069:51078	753110	0	True				
ANR	753132	UnaryOperationExpression	- 1		753110	0					
ANR	753133	UnaryOperator	-		753110	0					
ANR	753134	PrimaryExpression	1		753110	1					
ANR	753135	SwitchStatement	switch ( file_formats [ type ] )		753110	2					
ANR	753136	Condition	file_formats [ type ]	2222:9:51093:51110	753110	0	True				
ANR	753137	ArrayIndexing	file_formats [ type ]		753110	0					
ANR	753138	Identifier	file_formats		753110	0					
ANR	753139	Identifier	type		753110	1					
ANR	753140	CompoundStatement		8:29:121:121	753110	1					
ANR	753141	Label	case FILE_FMT_QUAD :	2223:1:51116:51134	753110	0	True				
ANR	753142	Identifier	FILE_FMT_QUAD		753110	0					
ANR	753143	ExpressionStatement	quad = 1	2224:2:51138:51146	753110	1	True				
ANR	753144	AssignmentExpression	quad = 1		753110	0		=			
ANR	753145	Identifier	quad		753110	0					
ANR	753146	PrimaryExpression	1		753110	1					
ANR	753147	Label	case FILE_FMT_NUM :	2226:1:51167:51184	753110	2	True				
ANR	753148	Identifier	FILE_FMT_NUM		753110	0					
ANR	753149	IfStatement	if ( quad == 0 )		753110	3					
ANR	753150	Condition	quad == 0	2227:6:51192:51200	753110	0	True				
ANR	753151	EqualityExpression	quad == 0		753110	0		==			
ANR	753152	Identifier	quad		753110	0					
ANR	753153	PrimaryExpression	0		753110	1					
ANR	753154	CompoundStatement		13:17:211:211	753110	1					
ANR	753155	SwitchStatement	switch ( type )		753110	0					
ANR	753156	Condition	type	2228:11:51216:51219	753110	0	True				
ANR	753157	Identifier	type		753110	0					
ANR	753158	CompoundStatement		14:17:230:230	753110	1					
ANR	753159	Label	case FILE_BYTE :	2229:3:51227:51241	753110	0	True				
ANR	753160	Identifier	FILE_BYTE		753110	0					
ANR	753161	ExpressionStatement	h = 2	2230:4:51247:51252	753110	1	True				
ANR	753162	AssignmentExpression	h = 2		753110	0		=			
ANR	753163	Identifier	h		753110	0					
ANR	753164	PrimaryExpression	2		753110	1					
ANR	753165	BreakStatement	break ;	2231:4:51258:51263	753110	2	True				
ANR	753166	Label	case FILE_SHORT :	2232:3:51268:51283	753110	3	True				
ANR	753167	Identifier	FILE_SHORT		753110	0					
ANR	753168	Label	case FILE_BESHORT :	2233:3:51288:51305	753110	4	True				
ANR	753169	Identifier	FILE_BESHORT		753110	0					
ANR	753170	Label	case FILE_LESHORT :	2234:3:51310:51327	753110	5	True				
ANR	753171	Identifier	FILE_LESHORT		753110	0					
ANR	753172	ExpressionStatement	h = 1	2235:4:51333:51338	753110	6	True				
ANR	753173	AssignmentExpression	h = 1		753110	0		=			
ANR	753174	Identifier	h		753110	0					
ANR	753175	PrimaryExpression	1		753110	1					
ANR	753176	BreakStatement	break ;	2236:4:51344:51349	753110	7	True				
ANR	753177	Label	case FILE_LONG :	2237:3:51354:51368	753110	8	True				
ANR	753178	Identifier	FILE_LONG		753110	0					
ANR	753179	Label	case FILE_BELONG :	2238:3:51373:51389	753110	9	True				
ANR	753180	Identifier	FILE_BELONG		753110	0					
ANR	753181	Label	case FILE_LELONG :	2239:3:51394:51410	753110	10	True				
ANR	753182	Identifier	FILE_LELONG		753110	0					
ANR	753183	Label	case FILE_MELONG :	2240:3:51415:51431	753110	11	True				
ANR	753184	Identifier	FILE_MELONG		753110	0					
ANR	753185	Label	case FILE_LEID3 :	2241:3:51436:51451	753110	12	True				
ANR	753186	Identifier	FILE_LEID3		753110	0					
ANR	753187	Label	case FILE_BEID3 :	2242:3:51456:51471	753110	13	True				
ANR	753188	Identifier	FILE_BEID3		753110	0					
ANR	753189	Label	case FILE_INDIRECT :	2243:3:51476:51494	753110	14	True				
ANR	753190	Identifier	FILE_INDIRECT		753110	0					
ANR	753191	ExpressionStatement	h = 0	2244:4:51500:51505	753110	15	True				
ANR	753192	AssignmentExpression	h = 0		753110	0		=			
ANR	753193	Identifier	h		753110	0					
ANR	753194	PrimaryExpression	0		753110	1					
ANR	753195	BreakStatement	break ;	2245:4:51511:51516	753110	16	True				
ANR	753196	Label	default :	2246:3:51521:51528	753110	17	True				
ANR	753197	Identifier	default		753110	0					
ANR	753198	ExpressionStatement	abort ( )	2247:4:51534:51541	753110	18	True				
ANR	753199	CallExpression	abort ( )		753110	0					
ANR	753200	Callee	abort		753110	0					
ANR	753201	Identifier	abort		753110	0					
ANR	753202	ArgumentList			753110	1					
ANR	753203	ElseStatement	else		753110	0					
ANR	753204	ExpressionStatement	h = 0	2250:3:51560:51565	753110	0	True				
ANR	753205	AssignmentExpression	h = 0		753110	0		=			
ANR	753206	Identifier	h		753110	0					
ANR	753207	PrimaryExpression	0		753110	1					
ANR	753208	IfStatement	if ( * ptr == '-' )		753110	4					
ANR	753209	Condition	* ptr == '-'	2251:6:51573:51583	753110	0	True				
ANR	753210	EqualityExpression	* ptr == '-'		753110	0		==			
ANR	753211	UnaryOperationExpression	* ptr		753110	0					
ANR	753212	UnaryOperator	*		753110	0					
ANR	753213	Identifier	ptr		753110	1					
ANR	753214	PrimaryExpression	'-'		753110	1					
ANR	753215	ExpressionStatement	ptr ++	2252:3:51589:51594	753110	1	True				
ANR	753216	PostIncDecOperationExpression	ptr ++		753110	0					
ANR	753217	Identifier	ptr		753110	0					
ANR	753218	IncDec	++		753110	1					
ANR	753219	IfStatement	if ( * ptr == '.' )		753110	5					
ANR	753220	Condition	* ptr == '.'	2253:6:51602:51612	753110	0	True				
ANR	753221	EqualityExpression	* ptr == '.'		753110	0		==			
ANR	753222	UnaryOperationExpression	* ptr		753110	0					
ANR	753223	UnaryOperator	*		753110	0					
ANR	753224	Identifier	ptr		753110	1					
ANR	753225	PrimaryExpression	'.'		753110	1					
ANR	753226	ExpressionStatement	ptr ++	2254:3:51618:51623	753110	1	True				
ANR	753227	PostIncDecOperationExpression	ptr ++		753110	0					
ANR	753228	Identifier	ptr		753110	0					
ANR	753229	IncDec	++		753110	1					
ANR	753230	WhileStatement	while ( isdigit ( ( unsigned char ) * ptr ) )		753110	6					
ANR	753231	Condition	isdigit ( ( unsigned char ) * ptr )	2255:9:51634:51661	753110	0	True				
ANR	753232	CallExpression	isdigit ( ( unsigned char ) * ptr )		753110	0					
ANR	753233	Callee	isdigit		753110	0					
ANR	753234	Identifier	isdigit		753110	0					
ANR	753235	ArgumentList	( unsigned char ) * ptr		753110	1					
ANR	753236	Argument	( unsigned char ) * ptr		753110	0					
ANR	753237	CastExpression	( unsigned char ) * ptr		753110	0					
ANR	753238	CastTarget	unsigned char		753110	0					
ANR	753239	UnaryOperationExpression	* ptr		753110	1					
ANR	753240	UnaryOperator	*		753110	0					
ANR	753241	Identifier	ptr		753110	1					
ANR	753242	ExpressionStatement	ptr ++	2255:39:51664:51669	753110	1	True				
ANR	753243	PostIncDecOperationExpression	ptr ++		753110	0					
ANR	753244	Identifier	ptr		753110	0					
ANR	753245	IncDec	++		753110	1					
ANR	753246	IfStatement	if ( * ptr == '.' )		753110	7					
ANR	753247	Condition	* ptr == '.'	2256:6:51677:51687	753110	0	True				
ANR	753248	EqualityExpression	* ptr == '.'		753110	0		==			
ANR	753249	UnaryOperationExpression	* ptr		753110	0					
ANR	753250	UnaryOperator	*		753110	0					
ANR	753251	Identifier	ptr		753110	1					
ANR	753252	PrimaryExpression	'.'		753110	1					
ANR	753253	ExpressionStatement	ptr ++	2257:3:51693:51698	753110	1	True				
ANR	753254	PostIncDecOperationExpression	ptr ++		753110	0					
ANR	753255	Identifier	ptr		753110	0					
ANR	753256	IncDec	++		753110	1					
ANR	753257	WhileStatement	while ( isdigit ( ( unsigned char ) * ptr ) )		753110	8					
ANR	753258	Condition	isdigit ( ( unsigned char ) * ptr )	2258:9:51709:51736	753110	0	True				
ANR	753259	CallExpression	isdigit ( ( unsigned char ) * ptr )		753110	0					
ANR	753260	Callee	isdigit		753110	0					
ANR	753261	Identifier	isdigit		753110	0					
ANR	753262	ArgumentList	( unsigned char ) * ptr		753110	1					
ANR	753263	Argument	( unsigned char ) * ptr		753110	0					
ANR	753264	CastExpression	( unsigned char ) * ptr		753110	0					
ANR	753265	CastTarget	unsigned char		753110	0					
ANR	753266	UnaryOperationExpression	* ptr		753110	1					
ANR	753267	UnaryOperator	*		753110	0					
ANR	753268	Identifier	ptr		753110	1					
ANR	753269	ExpressionStatement	ptr ++	2258:39:51739:51744	753110	1	True				
ANR	753270	PostIncDecOperationExpression	ptr ++		753110	0					
ANR	753271	Identifier	ptr		753110	0					
ANR	753272	IncDec	++		753110	1					
ANR	753273	IfStatement	if ( quad )		753110	9					
ANR	753274	Condition	quad	2259:6:51752:51755	753110	0	True				
ANR	753275	Identifier	quad		753110	0					
ANR	753276	CompoundStatement		45:12:766:766	753110	1					
ANR	753277	IfStatement	if ( * ptr ++ != 'l' )		753110	0					
ANR	753278	Condition	* ptr ++ != 'l'	2260:7:51767:51779	753110	0	True				
ANR	753279	EqualityExpression	* ptr ++ != 'l'		753110	0		!=			
ANR	753280	UnaryOperationExpression	* ptr ++		753110	0					
ANR	753281	UnaryOperator	*		753110	0					
ANR	753282	PostIncDecOperationExpression	ptr ++		753110	1					
ANR	753283	Identifier	ptr		753110	0					
ANR	753284	IncDec	++		753110	1					
ANR	753285	PrimaryExpression	'l'		753110	1					
ANR	753286	ReturnStatement	return - 1 ;	2261:4:51786:51795	753110	1	True				
ANR	753287	UnaryOperationExpression	- 1		753110	0					
ANR	753288	UnaryOperator	-		753110	0					
ANR	753289	PrimaryExpression	1		753110	1					
ANR	753290	IfStatement	if ( * ptr ++ != 'l' )		753110	1					
ANR	753291	Condition	* ptr ++ != 'l'	2262:7:51804:51816	753110	0	True				
ANR	753292	EqualityExpression	* ptr ++ != 'l'		753110	0		!=			
ANR	753293	UnaryOperationExpression	* ptr ++		753110	0					
ANR	753294	UnaryOperator	*		753110	0					
ANR	753295	PostIncDecOperationExpression	ptr ++		753110	1					
ANR	753296	Identifier	ptr		753110	0					
ANR	753297	IncDec	++		753110	1					
ANR	753298	PrimaryExpression	'l'		753110	1					
ANR	753299	ReturnStatement	return - 1 ;	2263:4:51823:51832	753110	1	True				
ANR	753300	UnaryOperationExpression	- 1		753110	0					
ANR	753301	UnaryOperator	-		753110	0					
ANR	753302	PrimaryExpression	1		753110	1					
ANR	753303	SwitchStatement	switch ( * ptr ++ )		753110	10					
ANR	753304	Condition	* ptr ++	2266:10:51850:51855	753110	0	True				
ANR	753305	UnaryOperationExpression	* ptr ++		753110	0					
ANR	753306	UnaryOperator	*		753110	0					
ANR	753307	PostIncDecOperationExpression	ptr ++		753110	1					
ANR	753308	Identifier	ptr		753110	0					
ANR	753309	IncDec	++		753110	1					
ANR	753310	CompoundStatement		52:18:866:866	753110	1					
ANR	753311	Label	case 'l' :	2269:2:51969:51977	753110	0	True				
ANR	753312	SwitchStatement	switch ( * ptr ++ )		753110	1					
ANR	753313	Condition	* ptr ++	2270:11:51990:51995	753110	0	True				
ANR	753314	UnaryOperationExpression	* ptr ++		753110	0					
ANR	753315	UnaryOperator	*		753110	0					
ANR	753316	PostIncDecOperationExpression	ptr ++		753110	1					
ANR	753317	Identifier	ptr		753110	0					
ANR	753318	IncDec	++		753110	1					
ANR	753319	CompoundStatement		56:19:1006:1006	753110	1					
ANR	753320	Label	case 'i' :	2271:3:52003:52011	753110	0	True				
ANR	753321	Label	case 'd' :	2272:3:52016:52024	753110	1	True				
ANR	753322	Label	case 'u' :	2273:3:52029:52037	753110	2	True				
ANR	753323	Label	case 'o' :	2274:3:52042:52050	753110	3	True				
ANR	753324	Label	case 'x' :	2275:3:52055:52063	753110	4	True				
ANR	753325	Label	case 'X' :	2276:3:52068:52076	753110	5	True				
ANR	753326	ReturnStatement	return h != 0 ? - 1 : 0 ;	2277:4:52082:52104	753110	6	True				
ANR	753327	ConditionalExpression	h != 0 ? - 1 : 0		753110	0					
ANR	753328	Condition	h != 0		753110	0					
ANR	753329	EqualityExpression	h != 0		753110	0		!=			
ANR	753330	Identifier	h		753110	0					
ANR	753331	PrimaryExpression	0		753110	1					
ANR	753332	UnaryOperationExpression	- 1		753110	1					
ANR	753333	UnaryOperator	-		753110	0					
ANR	753334	PrimaryExpression	1		753110	1					
ANR	753335	PrimaryExpression	0		753110	2					
ANR	753336	Label	default :	2278:3:52109:52116	753110	7	True				
ANR	753337	Identifier	default		753110	0					
ANR	753338	ReturnStatement	return - 1 ;	2279:4:52122:52131	753110	8	True				
ANR	753339	UnaryOperationExpression	- 1		753110	0					
ANR	753340	UnaryOperator	-		753110	0					
ANR	753341	PrimaryExpression	1		753110	1					
ANR	753342	Label	case 'h' :	2286:2:52271:52279	753110	2	True				
ANR	753343	IfStatement	if ( h -- <= 0 )		753110	3					
ANR	753344	Condition	h -- <= 0	2287:7:52288:52295	753110	0	True				
ANR	753345	RelationalExpression	h -- <= 0		753110	0		<=			
ANR	753346	PostIncDecOperationExpression	h --		753110	0					
ANR	753347	Identifier	h		753110	0					
ANR	753348	IncDec	--		753110	1					
ANR	753349	PrimaryExpression	0		753110	1					
ANR	753350	ReturnStatement	return - 1 ;	2288:4:52302:52311	753110	1	True				
ANR	753351	UnaryOperationExpression	- 1		753110	0					
ANR	753352	UnaryOperator	-		753110	0					
ANR	753353	PrimaryExpression	1		753110	1					
ANR	753354	SwitchStatement	switch ( * ptr ++ )		753110	4					
ANR	753355	Condition	* ptr ++	2289:11:52324:52329	753110	0	True				
ANR	753356	UnaryOperationExpression	* ptr ++		753110	0					
ANR	753357	UnaryOperator	*		753110	0					
ANR	753358	PostIncDecOperationExpression	ptr ++		753110	1					
ANR	753359	Identifier	ptr		753110	0					
ANR	753360	IncDec	++		753110	1					
ANR	753361	CompoundStatement		75:19:1340:1340	753110	1					
ANR	753362	Label	case 'h' :	2290:3:52337:52345	753110	0	True				
ANR	753363	IfStatement	if ( h -- <= 0 )		753110	1					
ANR	753364	Condition	h -- <= 0	2291:8:52355:52362	753110	0	True				
ANR	753365	RelationalExpression	h -- <= 0		753110	0		<=			
ANR	753366	PostIncDecOperationExpression	h --		753110	0					
ANR	753367	Identifier	h		753110	0					
ANR	753368	IncDec	--		753110	1					
ANR	753369	PrimaryExpression	0		753110	1					
ANR	753370	ReturnStatement	return - 1 ;	2292:5:52370:52379	753110	1	True				
ANR	753371	UnaryOperationExpression	- 1		753110	0					
ANR	753372	UnaryOperator	-		753110	0					
ANR	753373	PrimaryExpression	1		753110	1					
ANR	753374	SwitchStatement	switch ( * ptr ++ )		753110	2					
ANR	753375	Condition	* ptr ++	2293:12:52393:52398	753110	0	True				
ANR	753376	UnaryOperationExpression	* ptr ++		753110	0					
ANR	753377	UnaryOperator	*		753110	0					
ANR	753378	PostIncDecOperationExpression	ptr ++		753110	1					
ANR	753379	Identifier	ptr		753110	0					
ANR	753380	IncDec	++		753110	1					
ANR	753381	CompoundStatement		79:20:1409:1409	753110	1					
ANR	753382	Label	case 'i' :	2294:4:52407:52415	753110	0	True				
ANR	753383	Label	case 'd' :	2295:4:52421:52429	753110	1	True				
ANR	753384	Label	case 'u' :	2296:4:52435:52443	753110	2	True				
ANR	753385	Label	case 'o' :	2297:4:52449:52457	753110	3	True				
ANR	753386	Label	case 'x' :	2298:4:52463:52471	753110	4	True				
ANR	753387	Label	case 'X' :	2299:4:52477:52485	753110	5	True				
ANR	753388	ReturnStatement	return 0 ;	2300:5:52492:52500	753110	6	True				
ANR	753389	PrimaryExpression	0		753110	0					
ANR	753390	Label	default :	2301:4:52506:52513	753110	7	True				
ANR	753391	Identifier	default		753110	0					
ANR	753392	ReturnStatement	return - 1 ;	2302:5:52520:52529	753110	8	True				
ANR	753393	UnaryOperationExpression	- 1		753110	0					
ANR	753394	UnaryOperator	-		753110	0					
ANR	753395	PrimaryExpression	1		753110	1					
ANR	753396	Label	case 'i' :	2304:3:52540:52548	753110	3	True				
ANR	753397	Label	case 'd' :	2305:3:52553:52561	753110	4	True				
ANR	753398	Label	case 'u' :	2306:3:52566:52574	753110	5	True				
ANR	753399	Label	case 'o' :	2307:3:52579:52587	753110	6	True				
ANR	753400	Label	case 'x' :	2308:3:52592:52600	753110	7	True				
ANR	753401	Label	case 'X' :	2309:3:52605:52613	753110	8	True				
ANR	753402	ReturnStatement	return h != 0 ? - 1 : 0 ;	2310:4:52619:52641	753110	9	True				
ANR	753403	ConditionalExpression	h != 0 ? - 1 : 0		753110	0					
ANR	753404	Condition	h != 0		753110	0					
ANR	753405	EqualityExpression	h != 0		753110	0		!=			
ANR	753406	Identifier	h		753110	0					
ANR	753407	PrimaryExpression	0		753110	1					
ANR	753408	UnaryOperationExpression	- 1		753110	1					
ANR	753409	UnaryOperator	-		753110	0					
ANR	753410	PrimaryExpression	1		753110	1					
ANR	753411	PrimaryExpression	0		753110	2					
ANR	753412	Label	default :	2311:3:52646:52653	753110	10	True				
ANR	753413	Identifier	default		753110	0					
ANR	753414	ReturnStatement	return - 1 ;	2312:4:52659:52668	753110	11	True				
ANR	753415	UnaryOperationExpression	- 1		753110	0					
ANR	753416	UnaryOperator	-		753110	0					
ANR	753417	PrimaryExpression	1		753110	1					
ANR	753418	Label	case 'c' :	2315:2:52684:52692	753110	5	True				
ANR	753419	ReturnStatement	return h != 2 ? - 1 : 0 ;	2316:3:52697:52719	753110	6	True				
ANR	753420	ConditionalExpression	h != 2 ? - 1 : 0		753110	0					
ANR	753421	Condition	h != 2		753110	0					
ANR	753422	EqualityExpression	h != 2		753110	0		!=			
ANR	753423	Identifier	h		753110	0					
ANR	753424	PrimaryExpression	2		753110	1					
ANR	753425	UnaryOperationExpression	- 1		753110	1					
ANR	753426	UnaryOperator	-		753110	0					
ANR	753427	PrimaryExpression	1		753110	1					
ANR	753428	PrimaryExpression	0		753110	2					
ANR	753429	Label	case 'i' :	2317:2:52723:52731	753110	7	True				
ANR	753430	Label	case 'd' :	2318:2:52735:52743	753110	8	True				
ANR	753431	Label	case 'u' :	2319:2:52747:52755	753110	9	True				
ANR	753432	Label	case 'o' :	2320:2:52759:52767	753110	10	True				
ANR	753433	Label	case 'x' :	2321:2:52771:52779	753110	11	True				
ANR	753434	Label	case 'X' :	2322:2:52783:52791	753110	12	True				
ANR	753435	ReturnStatement	return h != 0 ? - 1 : 0 ;	2324:3:52817:52839	753110	13	True				
ANR	753436	ConditionalExpression	h != 0 ? - 1 : 0		753110	0					
ANR	753437	Condition	h != 0		753110	0					
ANR	753438	EqualityExpression	h != 0		753110	0		!=			
ANR	753439	Identifier	h		753110	0					
ANR	753440	PrimaryExpression	0		753110	1					
ANR	753441	UnaryOperationExpression	- 1		753110	1					
ANR	753442	UnaryOperator	-		753110	0					
ANR	753443	PrimaryExpression	1		753110	1					
ANR	753444	PrimaryExpression	0		753110	2					
ANR	753445	Label	default :	2328:2:52869:52876	753110	14	True				
ANR	753446	Identifier	default		753110	0					
ANR	753447	ReturnStatement	return - 1 ;	2329:3:52881:52890	753110	15	True				
ANR	753448	UnaryOperationExpression	- 1		753110	0					
ANR	753449	UnaryOperator	-		753110	0					
ANR	753450	PrimaryExpression	1		753110	1					
ANR	753451	Label	case FILE_FMT_FLOAT :	2332:1:52900:52919	753110	11	True				
ANR	753452	Identifier	FILE_FMT_FLOAT		753110	0					
ANR	753453	Label	case FILE_FMT_DOUBLE :	2333:1:52922:52942	753110	12	True				
ANR	753454	Identifier	FILE_FMT_DOUBLE		753110	0					
ANR	753455	IfStatement	if ( * ptr == '-' )		753110	13					
ANR	753456	Condition	* ptr == '-'	2334:6:52950:52960	753110	0	True				
ANR	753457	EqualityExpression	* ptr == '-'		753110	0		==			
ANR	753458	UnaryOperationExpression	* ptr		753110	0					
ANR	753459	UnaryOperator	*		753110	0					
ANR	753460	Identifier	ptr		753110	1					
ANR	753461	PrimaryExpression	'-'		753110	1					
ANR	753462	ExpressionStatement	ptr ++	2335:3:52966:52971	753110	1	True				
ANR	753463	PostIncDecOperationExpression	ptr ++		753110	0					
ANR	753464	Identifier	ptr		753110	0					
ANR	753465	IncDec	++		753110	1					
ANR	753466	IfStatement	if ( * ptr == '.' )		753110	14					
ANR	753467	Condition	* ptr == '.'	2336:6:52979:52989	753110	0	True				
ANR	753468	EqualityExpression	* ptr == '.'		753110	0		==			
ANR	753469	UnaryOperationExpression	* ptr		753110	0					
ANR	753470	UnaryOperator	*		753110	0					
ANR	753471	Identifier	ptr		753110	1					
ANR	753472	PrimaryExpression	'.'		753110	1					
ANR	753473	ExpressionStatement	ptr ++	2337:3:52995:53000	753110	1	True				
ANR	753474	PostIncDecOperationExpression	ptr ++		753110	0					
ANR	753475	Identifier	ptr		753110	0					
ANR	753476	IncDec	++		753110	1					
ANR	753477	WhileStatement	while ( isdigit ( ( unsigned char ) * ptr ) )		753110	15					
ANR	753478	Condition	isdigit ( ( unsigned char ) * ptr )	2338:9:53011:53038	753110	0	True				
ANR	753479	CallExpression	isdigit ( ( unsigned char ) * ptr )		753110	0					
ANR	753480	Callee	isdigit		753110	0					
ANR	753481	Identifier	isdigit		753110	0					
ANR	753482	ArgumentList	( unsigned char ) * ptr		753110	1					
ANR	753483	Argument	( unsigned char ) * ptr		753110	0					
ANR	753484	CastExpression	( unsigned char ) * ptr		753110	0					
ANR	753485	CastTarget	unsigned char		753110	0					
ANR	753486	UnaryOperationExpression	* ptr		753110	1					
ANR	753487	UnaryOperator	*		753110	0					
ANR	753488	Identifier	ptr		753110	1					
ANR	753489	ExpressionStatement	ptr ++	2338:39:53041:53046	753110	1	True				
ANR	753490	PostIncDecOperationExpression	ptr ++		753110	0					
ANR	753491	Identifier	ptr		753110	0					
ANR	753492	IncDec	++		753110	1					
ANR	753493	IfStatement	if ( * ptr == '.' )		753110	16					
ANR	753494	Condition	* ptr == '.'	2339:6:53054:53064	753110	0	True				
ANR	753495	EqualityExpression	* ptr == '.'		753110	0		==			
ANR	753496	UnaryOperationExpression	* ptr		753110	0					
ANR	753497	UnaryOperator	*		753110	0					
ANR	753498	Identifier	ptr		753110	1					
ANR	753499	PrimaryExpression	'.'		753110	1					
ANR	753500	ExpressionStatement	ptr ++	2340:3:53070:53075	753110	1	True				
ANR	753501	PostIncDecOperationExpression	ptr ++		753110	0					
ANR	753502	Identifier	ptr		753110	0					
ANR	753503	IncDec	++		753110	1					
ANR	753504	WhileStatement	while ( isdigit ( ( unsigned char ) * ptr ) )		753110	17					
ANR	753505	Condition	isdigit ( ( unsigned char ) * ptr )	2341:9:53086:53113	753110	0	True				
ANR	753506	CallExpression	isdigit ( ( unsigned char ) * ptr )		753110	0					
ANR	753507	Callee	isdigit		753110	0					
ANR	753508	Identifier	isdigit		753110	0					
ANR	753509	ArgumentList	( unsigned char ) * ptr		753110	1					
ANR	753510	Argument	( unsigned char ) * ptr		753110	0					
ANR	753511	CastExpression	( unsigned char ) * ptr		753110	0					
ANR	753512	CastTarget	unsigned char		753110	0					
ANR	753513	UnaryOperationExpression	* ptr		753110	1					
ANR	753514	UnaryOperator	*		753110	0					
ANR	753515	Identifier	ptr		753110	1					
ANR	753516	ExpressionStatement	ptr ++	2341:39:53116:53121	753110	1	True				
ANR	753517	PostIncDecOperationExpression	ptr ++		753110	0					
ANR	753518	Identifier	ptr		753110	0					
ANR	753519	IncDec	++		753110	1					
ANR	753520	SwitchStatement	switch ( * ptr ++ )		753110	18					
ANR	753521	Condition	* ptr ++	2343:10:53135:53140	753110	0	True				
ANR	753522	UnaryOperationExpression	* ptr ++		753110	0					
ANR	753523	UnaryOperator	*		753110	0					
ANR	753524	PostIncDecOperationExpression	ptr ++		753110	1					
ANR	753525	Identifier	ptr		753110	0					
ANR	753526	IncDec	++		753110	1					
ANR	753527	CompoundStatement		129:18:2151:2151	753110	1					
ANR	753528	Label	case 'e' :	2344:2:53147:53155	753110	0	True				
ANR	753529	Label	case 'E' :	2345:2:53159:53167	753110	1	True				
ANR	753530	Label	case 'f' :	2346:2:53171:53179	753110	2	True				
ANR	753531	Label	case 'F' :	2347:2:53183:53191	753110	3	True				
ANR	753532	Label	case 'g' :	2348:2:53195:53203	753110	4	True				
ANR	753533	Label	case 'G' :	2349:2:53207:53215	753110	5	True				
ANR	753534	ReturnStatement	return 0 ;	2350:3:53220:53228	753110	6	True				
ANR	753535	PrimaryExpression	0		753110	0					
ANR	753536	Label	default :	2352:2:53236:53243	753110	7	True				
ANR	753537	Identifier	default		753110	0					
ANR	753538	ReturnStatement	return - 1 ;	2353:3:53248:53257	753110	8	True				
ANR	753539	UnaryOperationExpression	- 1		753110	0					
ANR	753540	UnaryOperator	-		753110	0					
ANR	753541	PrimaryExpression	1		753110	1					
ANR	753542	Label	case FILE_FMT_STR :	2357:1:53268:53285	753110	19	True				
ANR	753543	Identifier	FILE_FMT_STR		753110	0					
ANR	753544	IfStatement	if ( * ptr == '-' )		753110	20					
ANR	753545	Condition	* ptr == '-'	2358:6:53293:53303	753110	0	True				
ANR	753546	EqualityExpression	* ptr == '-'		753110	0		==			
ANR	753547	UnaryOperationExpression	* ptr		753110	0					
ANR	753548	UnaryOperator	*		753110	0					
ANR	753549	Identifier	ptr		753110	1					
ANR	753550	PrimaryExpression	'-'		753110	1					
ANR	753551	ExpressionStatement	ptr ++	2359:3:53309:53314	753110	1	True				
ANR	753552	PostIncDecOperationExpression	ptr ++		753110	0					
ANR	753553	Identifier	ptr		753110	0					
ANR	753554	IncDec	++		753110	1					
ANR	753555	WhileStatement	while ( isdigit ( ( unsigned char ) * ptr ) )		753110	21					
ANR	753556	Condition	isdigit ( ( unsigned char ) * ptr )	2360:9:53325:53353	753110	0	True				
ANR	753557	CallExpression	isdigit ( ( unsigned char ) * ptr )		753110	0					
ANR	753558	Callee	isdigit		753110	0					
ANR	753559	Identifier	isdigit		753110	0					
ANR	753560	ArgumentList	( unsigned char ) * ptr		753110	1					
ANR	753561	Argument	( unsigned char ) * ptr		753110	0					
ANR	753562	CastExpression	( unsigned char ) * ptr		753110	0					
ANR	753563	CastTarget	unsigned char		753110	0					
ANR	753564	UnaryOperationExpression	* ptr		753110	1					
ANR	753565	UnaryOperator	*		753110	0					
ANR	753566	Identifier	ptr		753110	1					
ANR	753567	ExpressionStatement	ptr ++	2361:3:53359:53364	753110	1	True				
ANR	753568	PostIncDecOperationExpression	ptr ++		753110	0					
ANR	753569	Identifier	ptr		753110	0					
ANR	753570	IncDec	++		753110	1					
ANR	753571	IfStatement	if ( * ptr == '.' )		753110	22					
ANR	753572	Condition	* ptr == '.'	2362:6:53372:53382	753110	0	True				
ANR	753573	EqualityExpression	* ptr == '.'		753110	0		==			
ANR	753574	UnaryOperationExpression	* ptr		753110	0					
ANR	753575	UnaryOperator	*		753110	0					
ANR	753576	Identifier	ptr		753110	1					
ANR	753577	PrimaryExpression	'.'		753110	1					
ANR	753578	CompoundStatement		148:19:2393:2393	753110	1					
ANR	753579	ExpressionStatement	ptr ++	2363:3:53390:53395	753110	0	True				
ANR	753580	PostIncDecOperationExpression	ptr ++		753110	0					
ANR	753581	Identifier	ptr		753110	0					
ANR	753582	IncDec	++		753110	1					
ANR	753583	WhileStatement	while ( isdigit ( ( unsigned char ) * ptr ) )		753110	1					
ANR	753584	Condition	isdigit ( ( unsigned char ) * ptr )	2364:10:53407:53435	753110	0	True				
ANR	753585	CallExpression	isdigit ( ( unsigned char ) * ptr )		753110	0					
ANR	753586	Callee	isdigit		753110	0					
ANR	753587	Identifier	isdigit		753110	0					
ANR	753588	ArgumentList	( unsigned char ) * ptr		753110	1					
ANR	753589	Argument	( unsigned char ) * ptr		753110	0					
ANR	753590	CastExpression	( unsigned char ) * ptr		753110	0					
ANR	753591	CastTarget	unsigned char		753110	0					
ANR	753592	UnaryOperationExpression	* ptr		753110	1					
ANR	753593	UnaryOperator	*		753110	0					
ANR	753594	Identifier	ptr		753110	1					
ANR	753595	ExpressionStatement	ptr ++	2365:4:53442:53447	753110	1	True				
ANR	753596	PostIncDecOperationExpression	ptr ++		753110	0					
ANR	753597	Identifier	ptr		753110	0					
ANR	753598	IncDec	++		753110	1					
ANR	753599	SwitchStatement	switch ( * ptr ++ )		753110	23					
ANR	753600	Condition	* ptr ++	2368:10:53466:53471	753110	0	True				
ANR	753601	UnaryOperationExpression	* ptr ++		753110	0					
ANR	753602	UnaryOperator	*		753110	0					
ANR	753603	PostIncDecOperationExpression	ptr ++		753110	1					
ANR	753604	Identifier	ptr		753110	0					
ANR	753605	IncDec	++		753110	1					
ANR	753606	CompoundStatement		154:18:2482:2482	753110	1					
ANR	753607	Label	case 's' :	2369:2:53478:53486	753110	0	True				
ANR	753608	ReturnStatement	return 0 ;	2370:3:53491:53499	753110	1	True				
ANR	753609	PrimaryExpression	0		753110	0					
ANR	753610	Label	default :	2371:2:53503:53510	753110	2	True				
ANR	753611	Identifier	default		753110	0					
ANR	753612	ReturnStatement	return - 1 ;	2372:3:53515:53524	753110	3	True				
ANR	753613	UnaryOperationExpression	- 1		753110	0					
ANR	753614	UnaryOperator	-		753110	0					
ANR	753615	PrimaryExpression	1		753110	1					
ANR	753616	Label	default :	2375:1:53534:53541	753110	24	True				
ANR	753617	Identifier	default		753110	0					
ANR	753618	ExpressionStatement	abort ( )	2377:2:53568:53575	753110	25	True				
ANR	753619	CallExpression	abort ( )		753110	0					
ANR	753620	Callee	abort		753110	0					
ANR	753621	Identifier	abort		753110	0					
ANR	753622	ArgumentList			753110	1					
ANR	753623	ReturnStatement	return - 1 ;	2380:1:53597:53606	753110	3	True				
ANR	753624	UnaryOperationExpression	- 1		753110	0					
ANR	753625	UnaryOperator	-		753110	0					
ANR	753626	PrimaryExpression	1		753110	1					
ANR	753627	ReturnType	int		753110	1					
ANR	753628	Identifier	check_format_type		753110	2					
ANR	753629	ParameterList	"const char * ptr , int type"		753110	3					
ANR	753630	Parameter	const char * ptr	2214:18:50964:50978	753110	0	True				
ANR	753631	ParameterType	const char *		753110	0					
ANR	753632	Identifier	ptr		753110	1					
ANR	753633	Parameter	int type	2214:35:50981:50988	753110	1	True				
ANR	753634	ParameterType	int		753110	0					
ANR	753635	Identifier	type		753110	1					
ANR	753636	CFGEntryNode	ENTRY		753110		True				
ANR	753637	CFGExitNode	EXIT		753110		True				
ANR	753638	Symbol	quad		753110						
ANR	753639	Symbol	* type		753110						
ANR	753640	Symbol	file_formats		753110						
ANR	753641	Symbol	* ptr ++		753110						
ANR	753642	Symbol	h		753110						
ANR	753643	Symbol	* ptr		753110						
ANR	753644	Symbol	type		753110						
ANR	753645	Symbol	* file_formats		753110						
ANR	753646	Symbol	isdigit		753110						
ANR	753647	Symbol	ptr		753110						
ANR	753648	Function	check_format	2387:8:53717:54844							
ANR	753649	FunctionDef	"check_format (struct magic_set * ms , struct magic * m)"		753648	0					
ANR	753650	CompoundStatement		2389:0:53773:54844	753648	0					
ANR	753651	IdentifierDeclStatement	char * ptr ;	2390:1:53776:53785	753648	0	True				
ANR	753652	IdentifierDecl	* ptr		753648	0					
ANR	753653	IdentifierDeclType	char *		753648	0					
ANR	753654	Identifier	ptr		753648	1					
ANR	753655	ForStatement	for ( ptr = m -> desc ; * ptr ; ptr ++ )		753648	1					
ANR	753656	ForInit	ptr = m -> desc ;	2392:6:53794:53807	753648	0	True				
ANR	753657	AssignmentExpression	ptr = m -> desc		753648	0		=			
ANR	753658	Identifier	ptr		753648	0					
ANR	753659	PtrMemberAccess	m -> desc		753648	1					
ANR	753660	Identifier	m		753648	0					
ANR	753661	Identifier	desc		753648	1					
ANR	753662	Condition	* ptr	2392:21:53809:53812	753648	1	True				
ANR	753663	UnaryOperationExpression	* ptr		753648	0					
ANR	753664	UnaryOperator	*		753648	0					
ANR	753665	Identifier	ptr		753648	1					
ANR	753666	PostIncDecOperationExpression	ptr ++	2392:27:53815:53819	753648	2	True				
ANR	753667	Identifier	ptr		753648	0					
ANR	753668	IncDec	++		753648	1					
ANR	753669	IfStatement	if ( * ptr == '%' )		753648	3					
ANR	753670	Condition	* ptr == '%'	2393:6:53828:53838	753648	0	True				
ANR	753671	EqualityExpression	* ptr == '%'		753648	0		==			
ANR	753672	UnaryOperationExpression	* ptr		753648	0					
ANR	753673	UnaryOperator	*		753648	0					
ANR	753674	Identifier	ptr		753648	1					
ANR	753675	PrimaryExpression	'%'		753648	1					
ANR	753676	BreakStatement	break ;	2394:3:53844:53849	753648	1	True				
ANR	753677	IfStatement	if ( * ptr == '\\0' )		753648	2					
ANR	753678	Condition	* ptr == '\\0'	2395:5:53856:53867	753648	0	True				
ANR	753679	EqualityExpression	* ptr == '\\0'		753648	0		==			
ANR	753680	UnaryOperationExpression	* ptr		753648	0					
ANR	753681	UnaryOperator	*		753648	0					
ANR	753682	Identifier	ptr		753648	1					
ANR	753683	PrimaryExpression	'\\0'		753648	1					
ANR	753684	CompoundStatement		7:19:96:96	753648	1					
ANR	753685	ReturnStatement	return 1 ;	2397:2:53903:53911	753648	0	True				
ANR	753686	PrimaryExpression	1		753648	0					
ANR	753687	ExpressionStatement	assert ( file_nformats == file_nnames )	2400:1:53918:53954	753648	3	True				
ANR	753688	CallExpression	assert ( file_nformats == file_nnames )		753648	0					
ANR	753689	Callee	assert		753648	0					
ANR	753690	Identifier	assert		753648	0					
ANR	753691	ArgumentList	file_nformats == file_nnames		753648	1					
ANR	753692	Argument	file_nformats == file_nnames		753648	0					
ANR	753693	EqualityExpression	file_nformats == file_nnames		753648	0		==			
ANR	753694	Identifier	file_nformats		753648	0					
ANR	753695	Identifier	file_nnames		753648	1					
ANR	753696	IfStatement	if ( m -> type >= file_nformats )		753648	4					
ANR	753697	Condition	m -> type >= file_nformats	2402:5:53962:53985	753648	0	True				
ANR	753698	RelationalExpression	m -> type >= file_nformats		753648	0		>=			
ANR	753699	PtrMemberAccess	m -> type		753648	0					
ANR	753700	Identifier	m		753648	0					
ANR	753701	Identifier	type		753648	1					
ANR	753702	Identifier	file_nformats		753648	1					
ANR	753703	CompoundStatement		14:31:214:214	753648	1					
ANR	753704	Statement	file_magwarn	2403:2:53992:54003	753648	0	True				
ANR	753705	Statement	(	2403:14:54004:54004	753648	1	True				
ANR	753706	Statement	ms	2403:15:54005:54006	753648	2	True				
ANR	753707	Statement	","	2403:17:54007:54007	753648	3	True				
ANR	753708	Statement	"""Internal error inconsistency between """	2403:19:54009:54047	753648	4	True				
ANR	753709	Statement	"""m->type and format strings"""	2404:6:54055:54082	753648	5	True				
ANR	753710	Statement	)	2404:34:54083:54083	753648	6	True				
ANR	753711	ExpressionStatement		2404:35:54084:54084	753648	7	True				
ANR	753712	ReturnStatement	return - 1 ;	2405:2:54090:54099	753648	8	True				
ANR	753713	UnaryOperationExpression	- 1		753648	0					
ANR	753714	UnaryOperator	-		753648	0					
ANR	753715	PrimaryExpression	1		753648	1					
ANR	753716	IfStatement	if ( file_formats [ m -> type ] == FILE_FMT_NONE )		753648	5					
ANR	753717	Condition	file_formats [ m -> type ] == FILE_FMT_NONE	2407:5:54109:54146	753648	0	True				
ANR	753718	EqualityExpression	file_formats [ m -> type ] == FILE_FMT_NONE		753648	0		==			
ANR	753719	ArrayIndexing	file_formats [ m -> type ]		753648	0					
ANR	753720	Identifier	file_formats		753648	0					
ANR	753721	PtrMemberAccess	m -> type		753648	1					
ANR	753722	Identifier	m		753648	0					
ANR	753723	Identifier	type		753648	1					
ANR	753724	Identifier	FILE_FMT_NONE		753648	1					
ANR	753725	CompoundStatement		19:45:375:375	753648	1					
ANR	753726	Statement	file_magwarn	2408:2:54153:54164	753648	0	True				
ANR	753727	Statement	(	2408:14:54165:54165	753648	1	True				
ANR	753728	Statement	ms	2408:15:54166:54167	753648	2	True				
ANR	753729	Statement	","	2408:17:54168:54168	753648	3	True				
ANR	753730	Statement	"""No format string for `%s' with description """	2408:19:54170:54214	753648	4	True				
ANR	753731	Statement	"""`%s'"""	2409:6:54222:54227	753648	5	True				
ANR	753732	Statement	","	2409:12:54228:54228	753648	6	True				
ANR	753733	Statement	m	2409:14:54230:54230	753648	7	True				
ANR	753734	Statement	->	2409:15:54231:54232	753648	8	True				
ANR	753735	Statement	desc	2409:17:54233:54236	753648	9	True				
ANR	753736	Statement	","	2409:21:54237:54237	753648	10	True				
ANR	753737	Statement	file_names	2409:23:54239:54248	753648	11	True				
ANR	753738	Statement	[	2409:33:54249:54249	753648	12	True				
ANR	753739	Statement	m	2409:34:54250:54250	753648	13	True				
ANR	753740	Statement	->	2409:35:54251:54252	753648	14	True				
ANR	753741	Statement	type	2409:37:54253:54256	753648	15	True				
ANR	753742	Statement	]	2409:41:54257:54257	753648	16	True				
ANR	753743	Statement	)	2409:42:54258:54258	753648	17	True				
ANR	753744	ExpressionStatement		2409:43:54259:54259	753648	18	True				
ANR	753745	ReturnStatement	return - 1 ;	2410:2:54263:54272	753648	19	True				
ANR	753746	UnaryOperationExpression	- 1		753648	0					
ANR	753747	UnaryOperator	-		753648	0					
ANR	753748	PrimaryExpression	1		753648	1					
ANR	753749	ExpressionStatement	ptr ++	2413:1:54279:54284	753648	6	True				
ANR	753750	PostIncDecOperationExpression	ptr ++		753648	0					
ANR	753751	Identifier	ptr		753648	0					
ANR	753752	IncDec	++		753648	1					
ANR	753753	IfStatement	"if ( check_format_type ( ptr , m -> type ) == - 1 )"		753648	7					
ANR	753754	Condition	"check_format_type ( ptr , m -> type ) == - 1"	2414:5:54291:54327	753648	0	True				
ANR	753755	EqualityExpression	"check_format_type ( ptr , m -> type ) == - 1"		753648	0		==			
ANR	753756	CallExpression	"check_format_type ( ptr , m -> type )"		753648	0					
ANR	753757	Callee	check_format_type		753648	0					
ANR	753758	Identifier	check_format_type		753648	0					
ANR	753759	ArgumentList	ptr		753648	1					
ANR	753760	Argument	ptr		753648	0					
ANR	753761	Identifier	ptr		753648	0					
ANR	753762	Argument	m -> type		753648	1					
ANR	753763	PtrMemberAccess	m -> type		753648	0					
ANR	753764	Identifier	m		753648	0					
ANR	753765	Identifier	type		753648	1					
ANR	753766	UnaryOperationExpression	- 1		753648	1					
ANR	753767	UnaryOperator	-		753648	0					
ANR	753768	PrimaryExpression	1		753648	1					
ANR	753769	CompoundStatement		26:44:556:556	753648	1					
ANR	753770	Statement	file_magwarn	2419:2:54440:54451	753648	0	True				
ANR	753771	Statement	(	2419:14:54452:54452	753648	1	True				
ANR	753772	Statement	ms	2419:15:54453:54454	753648	2	True				
ANR	753773	Statement	","	2419:17:54455:54455	753648	3	True				
ANR	753774	Statement	"""Printf format `%c' is not valid for type """	2419:19:54457:54499	753648	4	True				
ANR	753775	Statement	"""`%s' in description `%s'"""	2420:6:54507:54532	753648	5	True				
ANR	753776	Statement	","	2420:32:54533:54533	753648	6	True				
ANR	753777	Statement	*	2420:34:54535:54535	753648	7	True				
ANR	753778	Statement	ptr	2420:35:54536:54538	753648	8	True				
ANR	753779	Statement	?	2420:39:54540:54540	753648	9	True				
ANR	753780	Statement	*	2420:41:54542:54542	753648	10	True				
ANR	753781	Label	ptr :	2420:42:54543:54547	753648	11	True				
ANR	753782	Identifier	ptr		753648	0					
ANR	753783	Statement	'?'	2420:48:54549:54551	753648	12	True				
ANR	753784	Statement	","	2420:51:54552:54552	753648	13	True				
ANR	753785	Statement	file_names	2421:6:54560:54569	753648	14	True				
ANR	753786	Statement	[	2421:16:54570:54570	753648	15	True				
ANR	753787	Statement	m	2421:17:54571:54571	753648	16	True				
ANR	753788	Statement	->	2421:18:54572:54573	753648	17	True				
ANR	753789	Statement	type	2421:20:54574:54577	753648	18	True				
ANR	753790	Statement	]	2421:24:54578:54578	753648	19	True				
ANR	753791	Statement	","	2421:25:54579:54579	753648	20	True				
ANR	753792	Statement	m	2421:27:54581:54581	753648	21	True				
ANR	753793	Statement	->	2421:28:54582:54583	753648	22	True				
ANR	753794	Statement	desc	2421:30:54584:54587	753648	23	True				
ANR	753795	Statement	)	2421:34:54588:54588	753648	24	True				
ANR	753796	ExpressionStatement		2421:35:54589:54589	753648	25	True				
ANR	753797	ReturnStatement	return - 1 ;	2422:2:54593:54602	753648	26	True				
ANR	753798	UnaryOperationExpression	- 1		753648	0					
ANR	753799	UnaryOperator	-		753648	0					
ANR	753800	PrimaryExpression	1		753648	1					
ANR	753801	ForStatement	for ( ; * ptr ; ptr ++ )		753648	8					
ANR	753802	Condition	* ptr	2425:8:54617:54620	753648	0	True				
ANR	753803	UnaryOperationExpression	* ptr		753648	0					
ANR	753804	UnaryOperator	*		753648	0					
ANR	753805	Identifier	ptr		753648	1					
ANR	753806	PostIncDecOperationExpression	ptr ++	2425:14:54623:54627	753648	1	True				
ANR	753807	Identifier	ptr		753648	0					
ANR	753808	IncDec	++		753648	1					
ANR	753809	CompoundStatement		37:21:856:856	753648	2					
ANR	753810	IfStatement	if ( * ptr == '%' )		753648	0					
ANR	753811	Condition	* ptr == '%'	2426:6:54638:54648	753648	0	True				
ANR	753812	EqualityExpression	* ptr == '%'		753648	0		==			
ANR	753813	UnaryOperationExpression	* ptr		753648	0					
ANR	753814	UnaryOperator	*		753648	0					
ANR	753815	Identifier	ptr		753648	1					
ANR	753816	PrimaryExpression	'%'		753648	1					
ANR	753817	CompoundStatement		38:19:877:877	753648	1					
ANR	753818	Statement	file_magwarn	2427:3:54656:54667	753648	0	True				
ANR	753819	Statement	(	2427:15:54668:54668	753648	1	True				
ANR	753820	Statement	ms	2427:16:54669:54670	753648	2	True				
ANR	753821	Statement	","	2427:18:54671:54671	753648	3	True				
ANR	753822	Statement	"""Too many format strings (should have at most one) """	2428:7:54680:54731	753648	4	True				
ANR	753823	Statement	"""for `%s' with description `%s'"""	2429:7:54740:54771	753648	5	True				
ANR	753824	Statement	","	2429:39:54772:54772	753648	6	True				
ANR	753825	Statement	file_names	2430:7:54781:54790	753648	7	True				
ANR	753826	Statement	[	2430:17:54791:54791	753648	8	True				
ANR	753827	Statement	m	2430:18:54792:54792	753648	9	True				
ANR	753828	Statement	->	2430:19:54793:54794	753648	10	True				
ANR	753829	Statement	type	2430:21:54795:54798	753648	11	True				
ANR	753830	Statement	]	2430:25:54799:54799	753648	12	True				
ANR	753831	Statement	","	2430:26:54800:54800	753648	13	True				
ANR	753832	Statement	m	2430:28:54802:54802	753648	14	True				
ANR	753833	Statement	->	2430:29:54803:54804	753648	15	True				
ANR	753834	Statement	desc	2430:31:54805:54808	753648	16	True				
ANR	753835	Statement	)	2430:35:54809:54809	753648	17	True				
ANR	753836	ExpressionStatement		2430:36:54810:54810	753648	18	True				
ANR	753837	ReturnStatement	return - 1 ;	2431:3:54815:54824	753648	19	True				
ANR	753838	UnaryOperationExpression	- 1		753648	0					
ANR	753839	UnaryOperator	-		753648	0					
ANR	753840	PrimaryExpression	1		753648	1					
ANR	753841	ReturnStatement	return 0 ;	2434:1:54834:54842	753648	9	True				
ANR	753842	PrimaryExpression	0		753648	0					
ANR	753843	ReturnType	int		753648	1					
ANR	753844	Identifier	check_format		753648	2					
ANR	753845	ParameterList	"struct magic_set * ms , struct magic * m"		753648	3					
ANR	753846	Parameter	struct magic_set * ms	2388:13:53734:53753	753648	0	True				
ANR	753847	ParameterType	struct magic_set *		753648	0					
ANR	753848	Identifier	ms		753648	1					
ANR	753849	Parameter	struct magic * m	2388:35:53756:53770	753648	1	True				
ANR	753850	ParameterType	struct magic *		753648	0					
ANR	753851	Identifier	m		753648	1					
ANR	753852	CFGEntryNode	ENTRY		753648		True				
ANR	753853	CFGExitNode	EXIT		753648		True				
ANR	753854	Symbol	check_format_type		753648						
ANR	753855	Symbol	ms		753648						
ANR	753856	Symbol	file_formats		753648						
ANR	753857	Symbol	file_nnames		753648						
ANR	753858	Symbol	* file_formats		753648						
ANR	753859	Symbol	m		753648						
ANR	753860	Symbol	ptr		753648						
ANR	753861	Symbol	m -> type		753648						
ANR	753862	Symbol	m -> desc		753648						
ANR	753863	Symbol	* m		753648						
ANR	753864	Symbol	FILE_FMT_NONE		753648						
ANR	753865	Symbol	* ptr		753648						
ANR	753866	Symbol	file_nformats		753648						
ANR	753867	Symbol	* m -> type		753648						
ANR	753868	Symbol	* * m		753648						
ANR	753869	Function	getvalue	2442:8:55090:56433							
ANR	753870	FunctionDef	"getvalue (struct magic_set * ms , struct magic * m , const char * * p , int action)"		753869	0					
ANR	753871	CompoundStatement		2444:0:55170:56433	753869	0					
ANR	753872	SwitchStatement	switch ( m -> type )		753869	0					
ANR	753873	Condition	m -> type	2445:9:55181:55187	753869	0	True				
ANR	753874	PtrMemberAccess	m -> type		753869	0					
ANR	753875	Identifier	m		753869	0					
ANR	753876	Identifier	type		753869	1					
ANR	753877	CompoundStatement		2:18:19:19	753869	1					
ANR	753878	Label	case FILE_BESTRING16 :	2446:1:55193:55213	753869	0	True				
ANR	753879	Identifier	FILE_BESTRING16		753869	0					
ANR	753880	Label	case FILE_LESTRING16 :	2447:1:55216:55236	753869	1	True				
ANR	753881	Identifier	FILE_LESTRING16		753869	0					
ANR	753882	Label	case FILE_STRING :	2448:1:55239:55255	753869	2	True				
ANR	753883	Identifier	FILE_STRING		753869	0					
ANR	753884	Label	case FILE_PSTRING :	2449:1:55258:55275	753869	3	True				
ANR	753885	Identifier	FILE_PSTRING		753869	0					
ANR	753886	Label	case FILE_REGEX :	2450:1:55278:55293	753869	4	True				
ANR	753887	Identifier	FILE_REGEX		753869	0					
ANR	753888	Label	case FILE_SEARCH :	2451:1:55296:55312	753869	5	True				
ANR	753889	Identifier	FILE_SEARCH		753869	0					
ANR	753890	Label	case FILE_NAME :	2452:1:55315:55329	753869	6	True				
ANR	753891	Identifier	FILE_NAME		753869	0					
ANR	753892	Label	case FILE_USE :	2453:1:55332:55345	753869	7	True				
ANR	753893	Identifier	FILE_USE		753869	0					
ANR	753894	ExpressionStatement	"* p = getstr ( ms , m , * p , action == FILE_COMPILE )"	2454:2:55349:55395	753869	8	True				
ANR	753895	AssignmentExpression	"* p = getstr ( ms , m , * p , action == FILE_COMPILE )"		753869	0		=			
ANR	753896	UnaryOperationExpression	* p		753869	0					
ANR	753897	UnaryOperator	*		753869	0					
ANR	753898	Identifier	p		753869	1					
ANR	753899	CallExpression	"getstr ( ms , m , * p , action == FILE_COMPILE )"		753869	1					
ANR	753900	Callee	getstr		753869	0					
ANR	753901	Identifier	getstr		753869	0					
ANR	753902	ArgumentList	ms		753869	1					
ANR	753903	Argument	ms		753869	0					
ANR	753904	Identifier	ms		753869	0					
ANR	753905	Argument	m		753869	1					
ANR	753906	Identifier	m		753869	0					
ANR	753907	Argument	* p		753869	2					
ANR	753908	UnaryOperationExpression	* p		753869	0					
ANR	753909	UnaryOperator	*		753869	0					
ANR	753910	Identifier	p		753869	1					
ANR	753911	Argument	action == FILE_COMPILE		753869	3					
ANR	753912	EqualityExpression	action == FILE_COMPILE		753869	0		==			
ANR	753913	Identifier	action		753869	0					
ANR	753914	Identifier	FILE_COMPILE		753869	1					
ANR	753915	IfStatement	if ( * p == NULL )		753869	9					
ANR	753916	Condition	* p == NULL	2455:6:55403:55412	753869	0	True				
ANR	753917	EqualityExpression	* p == NULL		753869	0		==			
ANR	753918	UnaryOperationExpression	* p		753869	0					
ANR	753919	UnaryOperator	*		753869	0					
ANR	753920	Identifier	p		753869	1					
ANR	753921	Identifier	NULL		753869	1					
ANR	753922	CompoundStatement		12:18:244:244	753869	1					
ANR	753923	IfStatement	if ( ms -> flags & MAGIC_CHECK )		753869	0					
ANR	753924	Condition	ms -> flags & MAGIC_CHECK	2456:7:55424:55446	753869	0	True				
ANR	753925	BitAndExpression	ms -> flags & MAGIC_CHECK		753869	0		&			
ANR	753926	PtrMemberAccess	ms -> flags		753869	0					
ANR	753927	Identifier	ms		753869	0					
ANR	753928	Identifier	flags		753869	1					
ANR	753929	Identifier	MAGIC_CHECK		753869	1					
ANR	753930	ExpressionStatement	"file_magwarn ( ms , ""cannot get string from `%s'"" , m -> value . s )"	2457:4:55453:55520	753869	1	True				
ANR	753931	CallExpression	"file_magwarn ( ms , ""cannot get string from `%s'"" , m -> value . s )"		753869	0					
ANR	753932	Callee	file_magwarn		753869	0					
ANR	753933	Identifier	file_magwarn		753869	0					
ANR	753934	ArgumentList	ms		753869	1					
ANR	753935	Argument	ms		753869	0					
ANR	753936	Identifier	ms		753869	0					
ANR	753937	Argument	"""cannot get string from `%s'"""		753869	1					
ANR	753938	PrimaryExpression	"""cannot get string from `%s'"""		753869	0					
ANR	753939	Argument	m -> value . s		753869	2					
ANR	753940	MemberAccess	m -> value . s		753869	0					
ANR	753941	PtrMemberAccess	m -> value		753869	0					
ANR	753942	Identifier	m		753869	0					
ANR	753943	Identifier	value		753869	1					
ANR	753944	Identifier	s		753869	1					
ANR	753945	ReturnStatement	return - 1 ;	2459:3:55525:55534	753869	1	True				
ANR	753946	UnaryOperationExpression	- 1		753869	0					
ANR	753947	UnaryOperator	-		753869	0					
ANR	753948	PrimaryExpression	1		753869	1					
ANR	753949	IfStatement	if ( m -> type == FILE_REGEX )		753869	10					
ANR	753950	Condition	m -> type == FILE_REGEX	2461:6:55546:55566	753869	0	True				
ANR	753951	EqualityExpression	m -> type == FILE_REGEX		753869	0		==			
ANR	753952	PtrMemberAccess	m -> type		753869	0					
ANR	753953	Identifier	m		753869	0					
ANR	753954	Identifier	type		753869	1					
ANR	753955	Identifier	FILE_REGEX		753869	1					
ANR	753956	CompoundStatement		18:29:398:398	753869	1					
ANR	753957	ReturnStatement	return 0 ;	2475:2:55864:55872	753869	11	True				
ANR	753958	PrimaryExpression	0		753869	0					
ANR	753959	Label	case FILE_FLOAT :	2476:1:55875:55890	753869	12	True				
ANR	753960	Identifier	FILE_FLOAT		753869	0					
ANR	753961	Label	case FILE_BEFLOAT :	2477:1:55893:55910	753869	13	True				
ANR	753962	Identifier	FILE_BEFLOAT		753869	0					
ANR	753963	Label	case FILE_LEFLOAT :	2478:1:55913:55930	753869	14	True				
ANR	753964	Identifier	FILE_LEFLOAT		753869	0					
ANR	753965	IfStatement	if ( m -> reln != 'x' )		753869	15					
ANR	753966	Condition	m -> reln != 'x'	2479:6:55938:55951	753869	0	True				
ANR	753967	EqualityExpression	m -> reln != 'x'		753869	0		!=			
ANR	753968	PtrMemberAccess	m -> reln		753869	0					
ANR	753969	Identifier	m		753869	0					
ANR	753970	Identifier	reln		753869	1					
ANR	753971	PrimaryExpression	'x'		753869	1					
ANR	753972	CompoundStatement		37:3:788:796	753869	1					
ANR	753973	IdentifierDeclStatement	char * ep ;	2480:3:55959:55967	753869	0	True				
ANR	753974	IdentifierDecl	* ep		753869	0					
ANR	753975	IdentifierDeclType	char *		753869	0					
ANR	753976	Identifier	ep		753869	1					
ANR	753977	ExpressionStatement	"m -> value . f = strtof ( * p , & ep )"	2482:3:55991:56019	753869	1	True				
ANR	753978	AssignmentExpression	"m -> value . f = strtof ( * p , & ep )"		753869	0		=			
ANR	753979	MemberAccess	m -> value . f		753869	0					
ANR	753980	PtrMemberAccess	m -> value		753869	0					
ANR	753981	Identifier	m		753869	0					
ANR	753982	Identifier	value		753869	1					
ANR	753983	Identifier	f		753869	1					
ANR	753984	CallExpression	"strtof ( * p , & ep )"		753869	1					
ANR	753985	Callee	strtof		753869	0					
ANR	753986	Identifier	strtof		753869	0					
ANR	753987	ArgumentList	* p		753869	1					
ANR	753988	Argument	* p		753869	0					
ANR	753989	UnaryOperationExpression	* p		753869	0					
ANR	753990	UnaryOperator	*		753869	0					
ANR	753991	Identifier	p		753869	1					
ANR	753992	Argument	& ep		753869	1					
ANR	753993	UnaryOperationExpression	& ep		753869	0					
ANR	753994	UnaryOperator	&		753869	0					
ANR	753995	Identifier	ep		753869	1					
ANR	753996	ExpressionStatement	* p = ep	2486:3:56077:56084	753869	2	True				
ANR	753997	AssignmentExpression	* p = ep		753869	0		=			
ANR	753998	UnaryOperationExpression	* p		753869	0					
ANR	753999	UnaryOperator	*		753869	0					
ANR	754000	Identifier	p		753869	1					
ANR	754001	Identifier	ep		753869	1					
ANR	754002	ReturnStatement	return 0 ;	2488:2:56092:56100	753869	16	True				
ANR	754003	PrimaryExpression	0		753869	0					
ANR	754004	Label	case FILE_DOUBLE :	2489:1:56103:56119	753869	17	True				
ANR	754005	Identifier	FILE_DOUBLE		753869	0					
ANR	754006	Label	case FILE_BEDOUBLE :	2490:1:56122:56140	753869	18	True				
ANR	754007	Identifier	FILE_BEDOUBLE		753869	0					
ANR	754008	Label	case FILE_LEDOUBLE :	2491:1:56143:56161	753869	19	True				
ANR	754009	Identifier	FILE_LEDOUBLE		753869	0					
ANR	754010	IfStatement	if ( m -> reln != 'x' )		753869	20					
ANR	754011	Condition	m -> reln != 'x'	2492:6:56169:56182	753869	0	True				
ANR	754012	EqualityExpression	m -> reln != 'x'		753869	0		!=			
ANR	754013	PtrMemberAccess	m -> reln		753869	0					
ANR	754014	Identifier	m		753869	0					
ANR	754015	Identifier	reln		753869	1					
ANR	754016	PrimaryExpression	'x'		753869	1					
ANR	754017	CompoundStatement		50:3:1019:1027	753869	1					
ANR	754018	IdentifierDeclStatement	char * ep ;	2493:3:56190:56198	753869	0	True				
ANR	754019	IdentifierDecl	* ep		753869	0					
ANR	754020	IdentifierDeclType	char *		753869	0					
ANR	754021	Identifier	ep		753869	1					
ANR	754022	ExpressionStatement	"m -> value . d = strtod ( * p , & ep )"	2494:3:56203:56231	753869	1	True				
ANR	754023	AssignmentExpression	"m -> value . d = strtod ( * p , & ep )"		753869	0		=			
ANR	754024	MemberAccess	m -> value . d		753869	0					
ANR	754025	PtrMemberAccess	m -> value		753869	0					
ANR	754026	Identifier	m		753869	0					
ANR	754027	Identifier	value		753869	1					
ANR	754028	Identifier	d		753869	1					
ANR	754029	CallExpression	"strtod ( * p , & ep )"		753869	1					
ANR	754030	Callee	strtod		753869	0					
ANR	754031	Identifier	strtod		753869	0					
ANR	754032	ArgumentList	* p		753869	1					
ANR	754033	Argument	* p		753869	0					
ANR	754034	UnaryOperationExpression	* p		753869	0					
ANR	754035	UnaryOperator	*		753869	0					
ANR	754036	Identifier	p		753869	1					
ANR	754037	Argument	& ep		753869	1					
ANR	754038	UnaryOperationExpression	& ep		753869	0					
ANR	754039	UnaryOperator	&		753869	0					
ANR	754040	Identifier	ep		753869	1					
ANR	754041	ExpressionStatement	* p = ep	2495:3:56236:56243	753869	2	True				
ANR	754042	AssignmentExpression	* p = ep		753869	0		=			
ANR	754043	UnaryOperationExpression	* p		753869	0					
ANR	754044	UnaryOperator	*		753869	0					
ANR	754045	Identifier	p		753869	1					
ANR	754046	Identifier	ep		753869	1					
ANR	754047	ReturnStatement	return 0 ;	2497:2:56251:56259	753869	21	True				
ANR	754048	PrimaryExpression	0		753869	0					
ANR	754049	Label	default :	2498:1:56262:56269	753869	22	True				
ANR	754050	Identifier	default		753869	0					
ANR	754051	IfStatement	if ( m -> reln != 'x' )		753869	23					
ANR	754052	Condition	m -> reln != 'x'	2499:6:56277:56290	753869	0	True				
ANR	754053	EqualityExpression	m -> reln != 'x'		753869	0		!=			
ANR	754054	PtrMemberAccess	m -> reln		753869	0					
ANR	754055	Identifier	m		753869	0					
ANR	754056	Identifier	reln		753869	1					
ANR	754057	PrimaryExpression	'x'		753869	1					
ANR	754058	CompoundStatement		57:3:1127:1135	753869	1					
ANR	754059	IdentifierDeclStatement	char * ep ;	2500:3:56298:56306	753869	0	True				
ANR	754060	IdentifierDecl	* ep		753869	0					
ANR	754061	IdentifierDeclType	char *		753869	0					
ANR	754062	Identifier	ep		753869	1					
ANR	754063	ExpressionStatement	"m -> value . q = file_signextend ( ms , m , ( uint64_t ) strtoull ( * p , & ep , 0 ) )"	2501:3:56311:56385	753869	1	True				
ANR	754064	AssignmentExpression	"m -> value . q = file_signextend ( ms , m , ( uint64_t ) strtoull ( * p , & ep , 0 ) )"		753869	0		=			
ANR	754065	MemberAccess	m -> value . q		753869	0					
ANR	754066	PtrMemberAccess	m -> value		753869	0					
ANR	754067	Identifier	m		753869	0					
ANR	754068	Identifier	value		753869	1					
ANR	754069	Identifier	q		753869	1					
ANR	754070	CallExpression	"file_signextend ( ms , m , ( uint64_t ) strtoull ( * p , & ep , 0 ) )"		753869	1					
ANR	754071	Callee	file_signextend		753869	0					
ANR	754072	Identifier	file_signextend		753869	0					
ANR	754073	ArgumentList	ms		753869	1					
ANR	754074	Argument	ms		753869	0					
ANR	754075	Identifier	ms		753869	0					
ANR	754076	Argument	m		753869	1					
ANR	754077	Identifier	m		753869	0					
ANR	754078	Argument	"( uint64_t ) strtoull ( * p , & ep , 0 )"		753869	2					
ANR	754079	CastExpression	"( uint64_t ) strtoull ( * p , & ep , 0 )"		753869	0					
ANR	754080	CastTarget	uint64_t		753869	0					
ANR	754081	CallExpression	"strtoull ( * p , & ep , 0 )"		753869	1					
ANR	754082	Callee	strtoull		753869	0					
ANR	754083	Identifier	strtoull		753869	0					
ANR	754084	ArgumentList	* p		753869	1					
ANR	754085	Argument	* p		753869	0					
ANR	754086	UnaryOperationExpression	* p		753869	0					
ANR	754087	UnaryOperator	*		753869	0					
ANR	754088	Identifier	p		753869	1					
ANR	754089	Argument	& ep		753869	1					
ANR	754090	UnaryOperationExpression	& ep		753869	0					
ANR	754091	UnaryOperator	&		753869	0					
ANR	754092	Identifier	ep		753869	1					
ANR	754093	Argument	0		753869	2					
ANR	754094	PrimaryExpression	0		753869	0					
ANR	754095	ExpressionStatement	* p = ep	2503:3:56390:56397	753869	2	True				
ANR	754096	AssignmentExpression	* p = ep		753869	0		=			
ANR	754097	UnaryOperationExpression	* p		753869	0					
ANR	754098	UnaryOperator	*		753869	0					
ANR	754099	Identifier	p		753869	1					
ANR	754100	Identifier	ep		753869	1					
ANR	754101	ExpressionStatement	eatsize ( p )	2504:3:56402:56412	753869	3	True				
ANR	754102	CallExpression	eatsize ( p )		753869	0					
ANR	754103	Callee	eatsize		753869	0					
ANR	754104	Identifier	eatsize		753869	0					
ANR	754105	ArgumentList	p		753869	1					
ANR	754106	Argument	p		753869	0					
ANR	754107	Identifier	p		753869	0					
ANR	754108	ReturnStatement	return 0 ;	2506:2:56420:56428	753869	24	True				
ANR	754109	PrimaryExpression	0		753869	0					
ANR	754110	ReturnType	int		753869	1					
ANR	754111	Identifier	getvalue		753869	2					
ANR	754112	ParameterList	"struct magic_set * ms , struct magic * m , const char * * p , int action"		753869	3					
ANR	754113	Parameter	struct magic_set * ms	2443:9:55103:55122	753869	0	True				
ANR	754114	ParameterType	struct magic_set *		753869	0					
ANR	754115	Identifier	ms		753869	1					
ANR	754116	Parameter	struct magic * m	2443:31:55125:55139	753869	1	True				
ANR	754117	ParameterType	struct magic *		753869	0					
ANR	754118	Identifier	m		753869	1					
ANR	754119	Parameter	const char * * p	2443:48:55142:55155	753869	2	True				
ANR	754120	ParameterType	const char * *		753869	0					
ANR	754121	Identifier	p		753869	1					
ANR	754122	Parameter	int action	2443:64:55158:55167	753869	3	True				
ANR	754123	ParameterType	int		753869	0					
ANR	754124	Identifier	action		753869	1					
ANR	754125	CFGEntryNode	ENTRY		753869		True				
ANR	754126	CFGExitNode	EXIT		753869		True				
ANR	754127	Symbol	* ms		753869						
ANR	754128	Symbol	strtoull		753869						
ANR	754129	Symbol	m -> type		753869						
ANR	754130	Symbol	getstr		753869						
ANR	754131	Symbol	m -> reln		753869						
ANR	754132	Symbol	action		753869						
ANR	754133	Symbol	FILE_COMPILE		753869						
ANR	754134	Symbol	NULL		753869						
ANR	754135	Symbol	m -> value		753869						
ANR	754136	Symbol	FILE_REGEX		753869						
ANR	754137	Symbol	file_signextend		753869						
ANR	754138	Symbol	ms		753869						
ANR	754139	Symbol	m -> value . s		753869						
ANR	754140	Symbol	m -> value . q		753869						
ANR	754141	Symbol	ep		753869						
ANR	754142	Symbol	m		753869						
ANR	754143	Symbol	strtod		753869						
ANR	754144	Symbol	strtof		753869						
ANR	754145	Symbol	p		753869						
ANR	754146	Symbol	& ep		753869						
ANR	754147	Symbol	* m		753869						
ANR	754148	Symbol	m -> value . f		753869						
ANR	754149	Symbol	MAGIC_CHECK		753869						
ANR	754150	Symbol	m -> value . d		753869						
ANR	754151	Symbol	* p		753869						
ANR	754152	Symbol	ms -> flags		753869						
ANR	754153	Function	getstr	2516:8:56682:59474							
ANR	754154	FunctionDef	"getstr (struct magic_set * ms , struct magic * m , const char * s , int warn)"		754153	0					
ANR	754155	CompoundStatement		2518:0:56766:59474	754153	0					
ANR	754156	IdentifierDeclStatement	const char * origs = s ;	2519:1:56769:56790	754153	0	True				
ANR	754157	IdentifierDecl	* origs = s		754153	0					
ANR	754158	IdentifierDeclType	const char *		754153	0					
ANR	754159	Identifier	origs		754153	1					
ANR	754160	AssignmentExpression	* origs = s		754153	2		=			
ANR	754161	Identifier	s		754153	0					
ANR	754162	Identifier	s		754153	1					
ANR	754163	IdentifierDeclStatement	char * p = m -> value . s ;	2520:1:56793:56813	754153	1	True				
ANR	754164	IdentifierDecl	* p = m -> value . s		754153	0					
ANR	754165	IdentifierDeclType	char *		754153	0					
ANR	754166	Identifier	p		754153	1					
ANR	754167	AssignmentExpression	* p = m -> value . s		754153	2		=			
ANR	754168	Identifier	p		754153	0					
ANR	754169	MemberAccess	m -> value . s		754153	1					
ANR	754170	PtrMemberAccess	m -> value		754153	0					
ANR	754171	Identifier	m		754153	0					
ANR	754172	Identifier	value		754153	1					
ANR	754173	Identifier	s		754153	1					
ANR	754174	IdentifierDeclStatement	size_t plen = sizeof ( m -> value . s ) ;	2521:1:56816:56849	754153	2	True				
ANR	754175	IdentifierDecl	plen = sizeof ( m -> value . s )		754153	0					
ANR	754176	IdentifierDeclType	size_t		754153	0					
ANR	754177	Identifier	plen		754153	1					
ANR	754178	AssignmentExpression	plen = sizeof ( m -> value . s )		754153	2		=			
ANR	754179	Identifier	plen		754153	0					
ANR	754180	SizeofExpression	sizeof ( m -> value . s )		754153	1					
ANR	754181	Sizeof	sizeof		754153	0					
ANR	754182	MemberAccess	m -> value . s		754153	1					
ANR	754183	PtrMemberAccess	m -> value		754153	0					
ANR	754184	Identifier	m		754153	0					
ANR	754185	Identifier	value		754153	1					
ANR	754186	Identifier	s		754153	1					
ANR	754187	IdentifierDeclStatement	char * origp = p ;	2522:1:56852:56868	754153	3	True				
ANR	754188	IdentifierDecl	* origp = p		754153	0					
ANR	754189	IdentifierDeclType	char *		754153	0					
ANR	754190	Identifier	origp		754153	1					
ANR	754191	AssignmentExpression	* origp = p		754153	2		=			
ANR	754192	Identifier	p		754153	0					
ANR	754193	Identifier	p		754153	1					
ANR	754194	IdentifierDeclStatement	char * pmax = p + plen - 1 ;	2523:1:56871:56896	754153	4	True				
ANR	754195	IdentifierDecl	* pmax = p + plen - 1		754153	0					
ANR	754196	IdentifierDeclType	char *		754153	0					
ANR	754197	Identifier	pmax		754153	1					
ANR	754198	AssignmentExpression	* pmax = p + plen - 1		754153	2		=			
ANR	754199	Identifier	pmax		754153	0					
ANR	754200	AdditiveExpression	p + plen - 1		754153	1		+			
ANR	754201	Identifier	p		754153	0					
ANR	754202	AdditiveExpression	plen - 1		754153	1		-			
ANR	754203	Identifier	plen		754153	0					
ANR	754204	PrimaryExpression	1		754153	1					
ANR	754205	IdentifierDeclStatement	int c ;	2524:1:56899:56904	754153	5	True				
ANR	754206	IdentifierDecl	c		754153	0					
ANR	754207	IdentifierDeclType	int		754153	0					
ANR	754208	Identifier	c		754153	1					
ANR	754209	IdentifierDeclStatement	int val ;	2525:1:56907:56914	754153	6	True				
ANR	754210	IdentifierDecl	val		754153	0					
ANR	754211	IdentifierDeclType	int		754153	0					
ANR	754212	Identifier	val		754153	1					
ANR	754213	WhileStatement	while ( ( c = * s ++ ) != '\\0' )		754153	7					
ANR	754214	Condition	( c = * s ++ ) != '\\0'	2527:8:56925:56942	754153	0	True				
ANR	754215	EqualityExpression	( c = * s ++ ) != '\\0'		754153	0		!=			
ANR	754216	AssignmentExpression	c = * s ++		754153	0		=			
ANR	754217	Identifier	c		754153	0					
ANR	754218	UnaryOperationExpression	* s ++		754153	1					
ANR	754219	UnaryOperator	*		754153	0					
ANR	754220	PostIncDecOperationExpression	s ++		754153	1					
ANR	754221	Identifier	s		754153	0					
ANR	754222	IncDec	++		754153	1					
ANR	754223	PrimaryExpression	'\\0'		754153	1					
ANR	754224	CompoundStatement		10:28:178:178	754153	1					
ANR	754225	IfStatement	if ( isspace ( ( unsigned char ) c ) )		754153	0					
ANR	754226	Condition	isspace ( ( unsigned char ) c )	2528:6:56953:56978	754153	0	True				
ANR	754227	CallExpression	isspace ( ( unsigned char ) c )		754153	0					
ANR	754228	Callee	isspace		754153	0					
ANR	754229	Identifier	isspace		754153	0					
ANR	754230	ArgumentList	( unsigned char ) c		754153	1					
ANR	754231	Argument	( unsigned char ) c		754153	0					
ANR	754232	CastExpression	( unsigned char ) c		754153	0					
ANR	754233	CastTarget	unsigned char		754153	0					
ANR	754234	Identifier	c		754153	1					
ANR	754235	BreakStatement	break ;	2529:3:56984:56989	754153	1	True				
ANR	754236	IfStatement	if ( p >= pmax )		754153	1					
ANR	754237	Condition	p >= pmax	2530:6:56997:57005	754153	0	True				
ANR	754238	RelationalExpression	p >= pmax		754153	0		>=			
ANR	754239	Identifier	p		754153	0					
ANR	754240	Identifier	pmax		754153	1					
ANR	754241	CompoundStatement		13:17:241:241	754153	1					
ANR	754242	ExpressionStatement	"file_error ( ms , 0 , ""string too long: `%s'"" , origs )"	2531:3:57013:57062	754153	0	True				
ANR	754243	CallExpression	"file_error ( ms , 0 , ""string too long: `%s'"" , origs )"		754153	0					
ANR	754244	Callee	file_error		754153	0					
ANR	754245	Identifier	file_error		754153	0					
ANR	754246	ArgumentList	ms		754153	1					
ANR	754247	Argument	ms		754153	0					
ANR	754248	Identifier	ms		754153	0					
ANR	754249	Argument	0		754153	1					
ANR	754250	PrimaryExpression	0		754153	0					
ANR	754251	Argument	"""string too long: `%s'"""		754153	2					
ANR	754252	PrimaryExpression	"""string too long: `%s'"""		754153	0					
ANR	754253	Argument	origs		754153	3					
ANR	754254	Identifier	origs		754153	0					
ANR	754255	ReturnStatement	return NULL ;	2532:3:57067:57078	754153	1	True				
ANR	754256	Identifier	NULL		754153	0					
ANR	754257	IfStatement	if ( c == '\\\\' )		754153	2					
ANR	754258	Condition	c == '\\\\'	2534:6:57090:57098	754153	0	True				
ANR	754259	EqualityExpression	c == '\\\\'		754153	0		==			
ANR	754260	Identifier	c		754153	0					
ANR	754261	PrimaryExpression	'\\\\'		754153	1					
ANR	754262	CompoundStatement		17:17:334:334	754153	1					
ANR	754263	SwitchStatement	switch ( c = * s ++ )		754153	0					
ANR	754264	Condition	c = * s ++	2535:10:57113:57120	754153	0	True				
ANR	754265	AssignmentExpression	c = * s ++		754153	0		=			
ANR	754266	Identifier	c		754153	0					
ANR	754267	UnaryOperationExpression	* s ++		754153	1					
ANR	754268	UnaryOperator	*		754153	0					
ANR	754269	PostIncDecOperationExpression	s ++		754153	1					
ANR	754270	Identifier	s		754153	0					
ANR	754271	IncDec	++		754153	1					
ANR	754272	CompoundStatement		18:20:356:356	754153	1					
ANR	754273	Label	case '\\0' :	2537:3:57129:57138	754153	0	True				
ANR	754274	IfStatement	if ( warn )		754153	1					
ANR	754275	Condition	warn	2538:8:57148:57151	754153	0	True				
ANR	754276	Identifier	warn		754153	0					
ANR	754277	ExpressionStatement	"file_magwarn ( ms , ""incomplete escape"" )"	2539:5:57159:57196	754153	1	True				
ANR	754278	CallExpression	"file_magwarn ( ms , ""incomplete escape"" )"		754153	0					
ANR	754279	Callee	file_magwarn		754153	0					
ANR	754280	Identifier	file_magwarn		754153	0					
ANR	754281	ArgumentList	ms		754153	1					
ANR	754282	Argument	ms		754153	0					
ANR	754283	Identifier	ms		754153	0					
ANR	754284	Argument	"""incomplete escape"""		754153	1					
ANR	754285	PrimaryExpression	"""incomplete escape"""		754153	0					
ANR	754286	GotoStatement	goto out ;	2540:4:57202:57210	754153	2	True				
ANR	754287	Identifier	out		754153	0					
ANR	754288	Label	case '\\t' :	2542:3:57216:57225	754153	3	True				
ANR	754289	IfStatement	if ( warn )		754153	4					
ANR	754290	Condition	warn	2543:8:57235:57238	754153	0	True				
ANR	754291	Identifier	warn		754153	0					
ANR	754292	CompoundStatement		26:14:474:474	754153	1					
ANR	754293	ExpressionStatement	"file_magwarn ( ms , ""escaped tab found, use \\\\t instead"" )"	2544:5:57248:57311	754153	0	True				
ANR	754294	CallExpression	"file_magwarn ( ms , ""escaped tab found, use \\\\t instead"" )"		754153	0					
ANR	754295	Callee	file_magwarn		754153	0					
ANR	754296	Identifier	file_magwarn		754153	0					
ANR	754297	ArgumentList	ms		754153	1					
ANR	754298	Argument	ms		754153	0					
ANR	754299	Identifier	ms		754153	0					
ANR	754300	Argument	"""escaped tab found, use \\\\t instead"""		754153	1					
ANR	754301	PrimaryExpression	"""escaped tab found, use \\\\t instead"""		754153	0					
ANR	754302	ExpressionStatement	warn = 0	2546:5:57318:57326	754153	1	True				
ANR	754303	AssignmentExpression	warn = 0		754153	0		=			
ANR	754304	Identifier	warn		754153	0					
ANR	754305	PrimaryExpression	0		754153	1					
ANR	754306	Label	default :	2549:3:57375:57382	754153	5	True				
ANR	754307	Identifier	default		754153	0					
ANR	754308	IfStatement	if ( warn )		754153	6					
ANR	754309	Condition	warn	2550:8:57392:57395	754153	0	True				
ANR	754310	Identifier	warn		754153	0					
ANR	754311	CompoundStatement		33:14:631:631	754153	1					
ANR	754312	IfStatement	if ( isprint ( ( unsigned char ) c ) )		754153	0					
ANR	754313	Condition	isprint ( ( unsigned char ) c )	2551:9:57409:57433	754153	0	True				
ANR	754314	CallExpression	isprint ( ( unsigned char ) c )		754153	0					
ANR	754315	Callee	isprint		754153	0					
ANR	754316	Identifier	isprint		754153	0					
ANR	754317	ArgumentList	( unsigned char ) c		754153	1					
ANR	754318	Argument	( unsigned char ) c		754153	0					
ANR	754319	CastExpression	( unsigned char ) c		754153	0					
ANR	754320	CastTarget	unsigned char		754153	0					
ANR	754321	Identifier	c		754153	1					
ANR	754322	CompoundStatement		34:36:669:669	754153	1					
ANR	754323	IfStatement	"if ( strchr ( ""<>&^=!"" , c ) == NULL && ( m -> type != FILE_REGEX || strchr ( ""[]().*?^$|{}"" , c ) == NULL ) )"		754153	0					
ANR	754324	Condition	"strchr ( ""<>&^=!"" , c ) == NULL && ( m -> type != FILE_REGEX || strchr ( ""[]().*?^$|{}"" , c ) == NULL )"	2554:10:57502:57622	754153	0	True				
ANR	754325	AndExpression	"strchr ( ""<>&^=!"" , c ) == NULL && ( m -> type != FILE_REGEX || strchr ( ""[]().*?^$|{}"" , c ) == NULL )"		754153	0		&&			
ANR	754326	EqualityExpression	"strchr ( ""<>&^=!"" , c ) == NULL"		754153	0		==			
ANR	754327	CallExpression	"strchr ( ""<>&^=!"" , c )"		754153	0					
ANR	754328	Callee	strchr		754153	0					
ANR	754329	Identifier	strchr		754153	0					
ANR	754330	ArgumentList	"""<>&^=!"""		754153	1					
ANR	754331	Argument	"""<>&^=!"""		754153	0					
ANR	754332	PrimaryExpression	"""<>&^=!"""		754153	0					
ANR	754333	Argument	c		754153	1					
ANR	754334	Identifier	c		754153	0					
ANR	754335	Identifier	NULL		754153	1					
ANR	754336	OrExpression	"m -> type != FILE_REGEX || strchr ( ""[]().*?^$|{}"" , c ) == NULL"		754153	1		||			
ANR	754337	EqualityExpression	m -> type != FILE_REGEX		754153	0		!=			
ANR	754338	PtrMemberAccess	m -> type		754153	0					
ANR	754339	Identifier	m		754153	0					
ANR	754340	Identifier	type		754153	1					
ANR	754341	Identifier	FILE_REGEX		754153	1					
ANR	754342	EqualityExpression	"strchr ( ""[]().*?^$|{}"" , c ) == NULL"		754153	1		==			
ANR	754343	CallExpression	"strchr ( ""[]().*?^$|{}"" , c )"		754153	0					
ANR	754344	Callee	strchr		754153	0					
ANR	754345	Identifier	strchr		754153	0					
ANR	754346	ArgumentList	"""[]().*?^$|{}"""		754153	1					
ANR	754347	Argument	"""[]().*?^$|{}"""		754153	0					
ANR	754348	PrimaryExpression	"""[]().*?^$|{}"""		754153	0					
ANR	754349	Argument	c		754153	1					
ANR	754350	Identifier	c		754153	0					
ANR	754351	Identifier	NULL		754153	1					
ANR	754352	CompoundStatement		40:20:858:858	754153	1					
ANR	754353	Statement	file_magwarn	2558:7:57634:57645	754153	0	True				
ANR	754354	Statement	(	2558:19:57646:57646	754153	1	True				
ANR	754355	Statement	ms	2558:20:57647:57648	754153	2	True				
ANR	754356	Statement	","	2558:22:57649:57649	754153	3	True				
ANR	754357	Statement	"""no """	2558:24:57651:57655	754153	4	True				
ANR	754358	Statement	"""need to escape """	2559:11:57668:57684	754153	5	True				
ANR	754359	Statement	"""`%c'"""	2560:11:57697:57702	754153	6	True				
ANR	754360	Statement	","	2560:17:57703:57703	754153	7	True				
ANR	754361	Statement	c	2560:19:57705:57705	754153	8	True				
ANR	754362	Statement	)	2560:20:57706:57706	754153	9	True				
ANR	754363	ExpressionStatement		2560:21:57707:57707	754153	10	True				
ANR	754364	ElseStatement	else		754153	0					
ANR	754365	CompoundStatement		45:12:962:962	754153	0					
ANR	754366	Statement	file_magwarn	2563:6:57737:57748	754153	0	True				
ANR	754367	Statement	(	2563:18:57749:57749	754153	1	True				
ANR	754368	Statement	ms	2563:19:57750:57751	754153	2	True				
ANR	754369	Statement	","	2563:21:57752:57752	754153	3	True				
ANR	754370	Statement	"""unknown escape sequence: """	2564:10:57764:57790	754153	4	True				
ANR	754371	Statement	"""\\\\%03o"""	2565:10:57802:57809	754153	5	True				
ANR	754372	Statement	","	2565:18:57810:57810	754153	6	True				
ANR	754373	Statement	c	2565:20:57812:57812	754153	7	True				
ANR	754374	Statement	)	2565:21:57813:57813	754153	8	True				
ANR	754375	ExpressionStatement		2565:22:57814:57814	754153	9	True				
ANR	754376	Label	case ' ' :	2570:3:57902:57910	754153	7	True				
ANR	754377	Label	case '\\'' :	2576:3:58017:58026	754153	8	True				
ANR	754378	Label	"case '""' :"	2577:3:58031:58039	754153	9	True				
ANR	754379	Label	case '?' :	2578:3:58044:58052	754153	10	True				
ANR	754380	Label	case '>' :	2581:3:58083:58091	754153	11	True				
ANR	754381	Label	case '<' :	2582:3:58096:58104	754153	12	True				
ANR	754382	Label	case '&' :	2583:3:58109:58117	754153	13	True				
ANR	754383	Label	case '^' :	2584:3:58122:58130	754153	14	True				
ANR	754384	Label	case '=' :	2585:3:58135:58143	754153	15	True				
ANR	754385	Label	case '!' :	2586:3:58148:58156	754153	16	True				
ANR	754386	Label	case '\\\\' :	2588:3:58191:58200	754153	17	True				
ANR	754387	ExpressionStatement	* p ++ = ( char ) c	2589:4:58206:58221	754153	18	True				
ANR	754388	AssignmentExpression	* p ++ = ( char ) c		754153	0		=			
ANR	754389	UnaryOperationExpression	* p ++		754153	0					
ANR	754390	UnaryOperator	*		754153	0					
ANR	754391	PostIncDecOperationExpression	p ++		754153	1					
ANR	754392	Identifier	p		754153	0					
ANR	754393	IncDec	++		754153	1					
ANR	754394	CastExpression	( char ) c		754153	1					
ANR	754395	CastTarget	char		754153	0					
ANR	754396	Identifier	c		754153	1					
ANR	754397	BreakStatement	break ;	2590:4:58227:58232	754153	19	True				
ANR	754398	Label	case 'a' :	2592:3:58238:58246	754153	20	True				
ANR	754399	ExpressionStatement	* p ++ = '\\a'	2593:4:58252:58263	754153	21	True				
ANR	754400	AssignmentExpression	* p ++ = '\\a'		754153	0		=			
ANR	754401	UnaryOperationExpression	* p ++		754153	0					
ANR	754402	UnaryOperator	*		754153	0					
ANR	754403	PostIncDecOperationExpression	p ++		754153	1					
ANR	754404	Identifier	p		754153	0					
ANR	754405	IncDec	++		754153	1					
ANR	754406	PrimaryExpression	'\\a'		754153	1					
ANR	754407	BreakStatement	break ;	2594:4:58269:58274	754153	22	True				
ANR	754408	Label	case 'b' :	2596:3:58280:58288	754153	23	True				
ANR	754409	ExpressionStatement	* p ++ = '\\b'	2597:4:58294:58305	754153	24	True				
ANR	754410	AssignmentExpression	* p ++ = '\\b'		754153	0		=			
ANR	754411	UnaryOperationExpression	* p ++		754153	0					
ANR	754412	UnaryOperator	*		754153	0					
ANR	754413	PostIncDecOperationExpression	p ++		754153	1					
ANR	754414	Identifier	p		754153	0					
ANR	754415	IncDec	++		754153	1					
ANR	754416	PrimaryExpression	'\\b'		754153	1					
ANR	754417	BreakStatement	break ;	2598:4:58311:58316	754153	25	True				
ANR	754418	Label	case 'f' :	2600:3:58322:58330	754153	26	True				
ANR	754419	ExpressionStatement	* p ++ = '\\f'	2601:4:58336:58347	754153	27	True				
ANR	754420	AssignmentExpression	* p ++ = '\\f'		754153	0		=			
ANR	754421	UnaryOperationExpression	* p ++		754153	0					
ANR	754422	UnaryOperator	*		754153	0					
ANR	754423	PostIncDecOperationExpression	p ++		754153	1					
ANR	754424	Identifier	p		754153	0					
ANR	754425	IncDec	++		754153	1					
ANR	754426	PrimaryExpression	'\\f'		754153	1					
ANR	754427	BreakStatement	break ;	2602:4:58353:58358	754153	28	True				
ANR	754428	Label	case 'n' :	2604:3:58364:58372	754153	29	True				
ANR	754429	ExpressionStatement	* p ++ = '\\n'	2605:4:58378:58389	754153	30	True				
ANR	754430	AssignmentExpression	* p ++ = '\\n'		754153	0		=			
ANR	754431	UnaryOperationExpression	* p ++		754153	0					
ANR	754432	UnaryOperator	*		754153	0					
ANR	754433	PostIncDecOperationExpression	p ++		754153	1					
ANR	754434	Identifier	p		754153	0					
ANR	754435	IncDec	++		754153	1					
ANR	754436	PrimaryExpression	'\\n'		754153	1					
ANR	754437	BreakStatement	break ;	2606:4:58395:58400	754153	31	True				
ANR	754438	Label	case 'r' :	2608:3:58406:58414	754153	32	True				
ANR	754439	ExpressionStatement	* p ++ = '\\r'	2609:4:58420:58431	754153	33	True				
ANR	754440	AssignmentExpression	* p ++ = '\\r'		754153	0		=			
ANR	754441	UnaryOperationExpression	* p ++		754153	0					
ANR	754442	UnaryOperator	*		754153	0					
ANR	754443	PostIncDecOperationExpression	p ++		754153	1					
ANR	754444	Identifier	p		754153	0					
ANR	754445	IncDec	++		754153	1					
ANR	754446	PrimaryExpression	'\\r'		754153	1					
ANR	754447	BreakStatement	break ;	2610:4:58437:58442	754153	34	True				
ANR	754448	Label	case 't' :	2612:3:58448:58456	754153	35	True				
ANR	754449	ExpressionStatement	* p ++ = '\\t'	2613:4:58462:58473	754153	36	True				
ANR	754450	AssignmentExpression	* p ++ = '\\t'		754153	0		=			
ANR	754451	UnaryOperationExpression	* p ++		754153	0					
ANR	754452	UnaryOperator	*		754153	0					
ANR	754453	PostIncDecOperationExpression	p ++		754153	1					
ANR	754454	Identifier	p		754153	0					
ANR	754455	IncDec	++		754153	1					
ANR	754456	PrimaryExpression	'\\t'		754153	1					
ANR	754457	BreakStatement	break ;	2614:4:58479:58484	754153	37	True				
ANR	754458	Label	case 'v' :	2616:3:58490:58498	754153	38	True				
ANR	754459	ExpressionStatement	* p ++ = '\\v'	2617:4:58504:58515	754153	39	True				
ANR	754460	AssignmentExpression	* p ++ = '\\v'		754153	0		=			
ANR	754461	UnaryOperationExpression	* p ++		754153	0					
ANR	754462	UnaryOperator	*		754153	0					
ANR	754463	PostIncDecOperationExpression	p ++		754153	1					
ANR	754464	Identifier	p		754153	0					
ANR	754465	IncDec	++		754153	1					
ANR	754466	PrimaryExpression	'\\v'		754153	1					
ANR	754467	BreakStatement	break ;	2618:4:58521:58526	754153	40	True				
ANR	754468	Label	case '0' :	2621:3:58568:58576	754153	41	True				
ANR	754469	Label	case '1' :	2622:3:58581:58589	754153	42	True				
ANR	754470	Label	case '2' :	2623:3:58594:58602	754153	43	True				
ANR	754471	Label	case '3' :	2624:3:58607:58615	754153	44	True				
ANR	754472	Label	case '4' :	2625:3:58620:58628	754153	45	True				
ANR	754473	Label	case '5' :	2626:3:58633:58641	754153	46	True				
ANR	754474	Label	case '6' :	2627:3:58646:58654	754153	47	True				
ANR	754475	Label	case '7' :	2628:3:58659:58667	754153	48	True				
ANR	754476	ExpressionStatement	val = c - '0'	2629:4:58673:58686	754153	49	True				
ANR	754477	AssignmentExpression	val = c - '0'		754153	0		=			
ANR	754478	Identifier	val		754153	0					
ANR	754479	AdditiveExpression	c - '0'		754153	1		-			
ANR	754480	Identifier	c		754153	0					
ANR	754481	PrimaryExpression	'0'		754153	1					
ANR	754482	ExpressionStatement	c = * s ++	2630:4:58692:58700	754153	50	True				
ANR	754483	AssignmentExpression	c = * s ++		754153	0		=			
ANR	754484	Identifier	c		754153	0					
ANR	754485	UnaryOperationExpression	* s ++		754153	1					
ANR	754486	UnaryOperator	*		754153	0					
ANR	754487	PostIncDecOperationExpression	s ++		754153	1					
ANR	754488	Identifier	s		754153	0					
ANR	754489	IncDec	++		754153	1					
ANR	754490	IfStatement	if ( c >= '0' && c <= '7' )		754153	51					
ANR	754491	Condition	c >= '0' && c <= '7'	2631:8:58727:58746	754153	0	True				
ANR	754492	AndExpression	c >= '0' && c <= '7'		754153	0		&&			
ANR	754493	RelationalExpression	c >= '0'		754153	0		>=			
ANR	754494	Identifier	c		754153	0					
ANR	754495	PrimaryExpression	'0'		754153	1					
ANR	754496	RelationalExpression	c <= '7'		754153	1		<=			
ANR	754497	Identifier	c		754153	0					
ANR	754498	PrimaryExpression	'7'		754153	1					
ANR	754499	CompoundStatement		114:30:1982:1982	754153	1					
ANR	754500	ExpressionStatement	val = ( val << 3 ) | ( c - '0' )	2632:5:58756:58784	754153	0	True				
ANR	754501	AssignmentExpression	val = ( val << 3 ) | ( c - '0' )		754153	0		=			
ANR	754502	Identifier	val		754153	0					
ANR	754503	InclusiveOrExpression	( val << 3 ) | ( c - '0' )		754153	1		|			
ANR	754504	ShiftExpression	val << 3		754153	0		<<			
ANR	754505	Identifier	val		754153	0					
ANR	754506	PrimaryExpression	3		754153	1					
ANR	754507	AdditiveExpression	c - '0'		754153	1		-			
ANR	754508	Identifier	c		754153	0					
ANR	754509	PrimaryExpression	'0'		754153	1					
ANR	754510	ExpressionStatement	c = * s ++	2633:5:58791:58799	754153	1	True				
ANR	754511	AssignmentExpression	c = * s ++		754153	0		=			
ANR	754512	Identifier	c		754153	0					
ANR	754513	UnaryOperationExpression	* s ++		754153	1					
ANR	754514	UnaryOperator	*		754153	0					
ANR	754515	PostIncDecOperationExpression	s ++		754153	1					
ANR	754516	Identifier	s		754153	0					
ANR	754517	IncDec	++		754153	1					
ANR	754518	IfStatement	if ( c >= '0' && c <= '7' )		754153	2					
ANR	754519	Condition	c >= '0' && c <= '7'	2634:9:58827:58846	754153	0	True				
ANR	754520	AndExpression	c >= '0' && c <= '7'		754153	0		&&			
ANR	754521	RelationalExpression	c >= '0'		754153	0		>=			
ANR	754522	Identifier	c		754153	0					
ANR	754523	PrimaryExpression	'0'		754153	1					
ANR	754524	RelationalExpression	c <= '7'		754153	1		<=			
ANR	754525	Identifier	c		754153	0					
ANR	754526	PrimaryExpression	'7'		754153	1					
ANR	754527	ExpressionStatement	val = ( val << 3 ) | ( c - '0' )	2635:6:58855:58881	754153	1	True				
ANR	754528	AssignmentExpression	val = ( val << 3 ) | ( c - '0' )		754153	0		=			
ANR	754529	Identifier	val		754153	0					
ANR	754530	InclusiveOrExpression	( val << 3 ) | ( c - '0' )		754153	1		|			
ANR	754531	ShiftExpression	val << 3		754153	0		<<			
ANR	754532	Identifier	val		754153	0					
ANR	754533	PrimaryExpression	3		754153	1					
ANR	754534	AdditiveExpression	c - '0'		754153	1		-			
ANR	754535	Identifier	c		754153	0					
ANR	754536	PrimaryExpression	'0'		754153	1					
ANR	754537	ElseStatement	else		754153	0					
ANR	754538	ExpressionStatement	-- s	2637:6:58899:58902	754153	0	True				
ANR	754539	UnaryExpression	-- s		754153	0					
ANR	754540	IncDec	--		754153	0					
ANR	754541	Identifier	s		754153	1					
ANR	754542	ElseStatement	else		754153	0					
ANR	754543	ExpressionStatement	-- s	2640:5:58924:58927	754153	0	True				
ANR	754544	UnaryExpression	-- s		754153	0					
ANR	754545	IncDec	--		754153	0					
ANR	754546	Identifier	s		754153	1					
ANR	754547	ExpressionStatement	* p ++ = ( char ) val	2641:4:58933:58949	754153	52	True				
ANR	754548	AssignmentExpression	* p ++ = ( char ) val		754153	0		=			
ANR	754549	UnaryOperationExpression	* p ++		754153	0					
ANR	754550	UnaryOperator	*		754153	0					
ANR	754551	PostIncDecOperationExpression	p ++		754153	1					
ANR	754552	Identifier	p		754153	0					
ANR	754553	IncDec	++		754153	1					
ANR	754554	CastExpression	( char ) val		754153	1					
ANR	754555	CastTarget	char		754153	0					
ANR	754556	Identifier	val		754153	1					
ANR	754557	BreakStatement	break ;	2642:4:58955:58960	754153	53	True				
ANR	754558	Label	case 'x' :	2645:3:59001:59009	754153	54	True				
ANR	754559	ExpressionStatement	val = 'x'	2646:4:59015:59024	754153	55	True				
ANR	754560	AssignmentExpression	val = 'x'		754153	0		=			
ANR	754561	Identifier	val		754153	0					
ANR	754562	PrimaryExpression	'x'		754153	1					
ANR	754563	ExpressionStatement	c = hextoint ( * s ++ )	2647:4:59057:59075	754153	56	True				
ANR	754564	AssignmentExpression	c = hextoint ( * s ++ )		754153	0		=			
ANR	754565	Identifier	c		754153	0					
ANR	754566	CallExpression	hextoint ( * s ++ )		754153	1					
ANR	754567	Callee	hextoint		754153	0					
ANR	754568	Identifier	hextoint		754153	0					
ANR	754569	ArgumentList	* s ++		754153	1					
ANR	754570	Argument	* s ++		754153	0					
ANR	754571	UnaryOperationExpression	* s ++		754153	0					
ANR	754572	UnaryOperator	*		754153	0					
ANR	754573	PostIncDecOperationExpression	s ++		754153	1					
ANR	754574	Identifier	s		754153	0					
ANR	754575	IncDec	++		754153	1					
ANR	754576	IfStatement	if ( c >= 0 )		754153	57					
ANR	754577	Condition	c >= 0	2648:8:59105:59110	754153	0	True				
ANR	754578	RelationalExpression	c >= 0		754153	0		>=			
ANR	754579	Identifier	c		754153	0					
ANR	754580	PrimaryExpression	0		754153	1					
ANR	754581	CompoundStatement		131:16:2346:2346	754153	1					
ANR	754582	ExpressionStatement	val = c	2649:5:59120:59127	754153	0	True				
ANR	754583	AssignmentExpression	val = c		754153	0		=			
ANR	754584	Identifier	val		754153	0					
ANR	754585	Identifier	c		754153	1					
ANR	754586	ExpressionStatement	c = hextoint ( * s ++ )	2650:5:59134:59152	754153	1	True				
ANR	754587	AssignmentExpression	c = hextoint ( * s ++ )		754153	0		=			
ANR	754588	Identifier	c		754153	0					
ANR	754589	CallExpression	hextoint ( * s ++ )		754153	1					
ANR	754590	Callee	hextoint		754153	0					
ANR	754591	Identifier	hextoint		754153	0					
ANR	754592	ArgumentList	* s ++		754153	1					
ANR	754593	Argument	* s ++		754153	0					
ANR	754594	UnaryOperationExpression	* s ++		754153	0					
ANR	754595	UnaryOperator	*		754153	0					
ANR	754596	PostIncDecOperationExpression	s ++		754153	1					
ANR	754597	Identifier	s		754153	0					
ANR	754598	IncDec	++		754153	1					
ANR	754599	IfStatement	if ( c >= 0 )		754153	2					
ANR	754600	Condition	c >= 0	2651:9:59163:59168	754153	0	True				
ANR	754601	RelationalExpression	c >= 0		754153	0		>=			
ANR	754602	Identifier	c		754153	0					
ANR	754603	PrimaryExpression	0		754153	1					
ANR	754604	ExpressionStatement	val = ( val << 4 ) + c	2652:6:59177:59197	754153	1	True				
ANR	754605	AssignmentExpression	val = ( val << 4 ) + c		754153	0		=			
ANR	754606	Identifier	val		754153	0					
ANR	754607	AdditiveExpression	( val << 4 ) + c		754153	1		+			
ANR	754608	ShiftExpression	val << 4		754153	0		<<			
ANR	754609	Identifier	val		754153	0					
ANR	754610	PrimaryExpression	4		754153	1					
ANR	754611	Identifier	c		754153	1					
ANR	754612	ElseStatement	else		754153	0					
ANR	754613	ExpressionStatement	-- s	2654:6:59215:59218	754153	0	True				
ANR	754614	UnaryExpression	-- s		754153	0					
ANR	754615	IncDec	--		754153	0					
ANR	754616	Identifier	s		754153	1					
ANR	754617	ElseStatement	else		754153	0					
ANR	754618	ExpressionStatement	-- s	2656:5:59236:59239	754153	0	True				
ANR	754619	UnaryExpression	-- s		754153	0					
ANR	754620	IncDec	--		754153	0					
ANR	754621	Identifier	s		754153	1					
ANR	754622	ExpressionStatement	* p ++ = ( char ) val	2657:4:59245:59261	754153	58	True				
ANR	754623	AssignmentExpression	* p ++ = ( char ) val		754153	0		=			
ANR	754624	UnaryOperationExpression	* p ++		754153	0					
ANR	754625	UnaryOperator	*		754153	0					
ANR	754626	PostIncDecOperationExpression	p ++		754153	1					
ANR	754627	Identifier	p		754153	0					
ANR	754628	IncDec	++		754153	1					
ANR	754629	CastExpression	( char ) val		754153	1					
ANR	754630	CastTarget	char		754153	0					
ANR	754631	Identifier	val		754153	1					
ANR	754632	BreakStatement	break ;	2658:4:59267:59272	754153	59	True				
ANR	754633	ElseStatement	else		754153	0					
ANR	754634	ExpressionStatement	* p ++ = ( char ) c	2661:3:59291:59305	754153	0	True				
ANR	754635	AssignmentExpression	* p ++ = ( char ) c		754153	0		=			
ANR	754636	UnaryOperationExpression	* p ++		754153	0					
ANR	754637	UnaryOperator	*		754153	0					
ANR	754638	PostIncDecOperationExpression	p ++		754153	1					
ANR	754639	Identifier	p		754153	0					
ANR	754640	IncDec	++		754153	1					
ANR	754641	CastExpression	( char ) c		754153	1					
ANR	754642	CastTarget	char		754153	0					
ANR	754643	Identifier	c		754153	1					
ANR	754644	Label	out :	2663:0:59310:59313	754153	8	True				
ANR	754645	Identifier	out		754153	0					
ANR	754646	ExpressionStatement	* p = '\\0'	2664:1:59316:59325	754153	9	True				
ANR	754647	AssignmentExpression	* p = '\\0'		754153	0		=			
ANR	754648	UnaryOperationExpression	* p		754153	0					
ANR	754649	UnaryOperator	*		754153	0					
ANR	754650	Identifier	p		754153	1					
ANR	754651	PrimaryExpression	'\\0'		754153	1					
ANR	754652	Statement	m	2665:1:59328:59328	754153	10	True				
ANR	754653	Statement	->	2665:2:59329:59330	754153	11	True				
ANR	754654	Statement	vallen	2665:4:59331:59336	754153	12	True				
ANR	754655	Statement	=	2665:11:59338:59338	754153	13	True				
ANR	754656	Statement	CAST	2665:13:59340:59343	754153	14	True				
ANR	754657	Statement	(	2665:17:59344:59344	754153	15	True				
ANR	754658	Statement	unsigned	2665:18:59345:59352	754153	16	True				
ANR	754659	Statement	char	2665:27:59354:59357	754153	17	True				
ANR	754660	Statement	","	2665:31:59358:59358	754153	18	True				
ANR	754661	Statement	(	2665:33:59360:59360	754153	19	True				
ANR	754662	Statement	p	2665:34:59361:59361	754153	20	True				
ANR	754663	Statement	-	2665:36:59363:59363	754153	21	True				
ANR	754664	Statement	origp	2665:38:59365:59369	754153	22	True				
ANR	754665	Statement	)	2665:43:59370:59370	754153	23	True				
ANR	754666	Statement	)	2665:44:59371:59371	754153	24	True				
ANR	754667	ExpressionStatement		2665:45:59372:59372	754153	25	True				
ANR	754668	IfStatement	if ( m -> type == FILE_PSTRING )		754153	26					
ANR	754669	Condition	m -> type == FILE_PSTRING	2666:5:59379:59401	754153	0	True				
ANR	754670	EqualityExpression	m -> type == FILE_PSTRING		754153	0		==			
ANR	754671	PtrMemberAccess	m -> type		754153	0					
ANR	754672	Identifier	m		754153	0					
ANR	754673	Identifier	type		754153	1					
ANR	754674	Identifier	FILE_PSTRING		754153	1					
ANR	754675	ExpressionStatement	m -> vallen += ( unsigned char ) file_pstring_length_size ( m )	2667:2:59406:59461	754153	1	True				
ANR	754676	AssignmentExpression	m -> vallen += ( unsigned char ) file_pstring_length_size ( m )		754153	0		+=			
ANR	754677	PtrMemberAccess	m -> vallen		754153	0					
ANR	754678	Identifier	m		754153	0					
ANR	754679	Identifier	vallen		754153	1					
ANR	754680	CastExpression	( unsigned char ) file_pstring_length_size ( m )		754153	1					
ANR	754681	CastTarget	unsigned char		754153	0					
ANR	754682	CallExpression	file_pstring_length_size ( m )		754153	1					
ANR	754683	Callee	file_pstring_length_size		754153	0					
ANR	754684	Identifier	file_pstring_length_size		754153	0					
ANR	754685	ArgumentList	m		754153	1					
ANR	754686	Argument	m		754153	0					
ANR	754687	Identifier	m		754153	0					
ANR	754688	ReturnStatement	return s ;	2668:1:59464:59472	754153	27	True				
ANR	754689	Identifier	s		754153	0					
ANR	754690	ReturnType	const char *		754153	1					
ANR	754691	Identifier	getstr		754153	2					
ANR	754692	ParameterList	"struct magic_set * ms , struct magic * m , const char * s , int warn"		754153	3					
ANR	754693	Parameter	struct magic_set * ms	2517:7:56702:56721	754153	0	True				
ANR	754694	ParameterType	struct magic_set *		754153	0					
ANR	754695	Identifier	ms		754153	1					
ANR	754696	Parameter	struct magic * m	2517:29:56724:56738	754153	1	True				
ANR	754697	ParameterType	struct magic *		754153	0					
ANR	754698	Identifier	m		754153	1					
ANR	754699	Parameter	const char * s	2517:46:56741:56753	754153	2	True				
ANR	754700	ParameterType	const char *		754153	0					
ANR	754701	Identifier	s		754153	1					
ANR	754702	Parameter	int warn	2517:61:56756:56763	754153	3	True				
ANR	754703	ParameterType	int		754153	0					
ANR	754704	Identifier	warn		754153	1					
ANR	754705	CFGEntryNode	ENTRY		754153		True				
ANR	754706	CFGExitNode	EXIT		754153		True				
ANR	754707	Symbol	pmax		754153						
ANR	754708	Symbol	* s ++		754153						
ANR	754709	Symbol	origs		754153						
ANR	754710	Symbol	isprint		754153						
ANR	754711	Symbol	strchr		754153						
ANR	754712	Symbol	plen		754153						
ANR	754713	Symbol	m -> type		754153						
ANR	754714	Symbol	file_pstring_length_size		754153						
ANR	754715	Symbol	origp		754153						
ANR	754716	Symbol	val		754153						
ANR	754717	Symbol	c		754153						
ANR	754718	Symbol	NULL		754153						
ANR	754719	Symbol	m -> value		754153						
ANR	754720	Symbol	FILE_REGEX		754153						
ANR	754721	Symbol	ms		754153						
ANR	754722	Symbol	* p ++		754153						
ANR	754723	Symbol	m -> value . s		754153						
ANR	754724	Symbol	isspace		754153						
ANR	754725	Symbol	FILE_PSTRING		754153						
ANR	754726	Symbol	m		754153						
ANR	754727	Symbol	p		754153						
ANR	754728	Symbol	warn		754153						
ANR	754729	Symbol	hextoint		754153						
ANR	754730	Symbol	s		754153						
ANR	754731	Symbol	* m		754153						
ANR	754732	Symbol	* p		754153						
ANR	754733	Symbol	m -> vallen		754153						
ANR	754734	Function	hextoint	2673:8:59538:59778							
ANR	754735	FunctionDef	hextoint (int c)		754734	0					
ANR	754736	CompoundStatement		2675:0:59558:59778	754734	0					
ANR	754737	IfStatement	if ( ! isascii ( ( unsigned char ) c ) )		754734	0					
ANR	754738	Condition	! isascii ( ( unsigned char ) c )	2676:5:59565:59591	754734	0	True				
ANR	754739	UnaryOperationExpression	! isascii ( ( unsigned char ) c )		754734	0					
ANR	754740	UnaryOperator	!		754734	0					
ANR	754741	CallExpression	isascii ( ( unsigned char ) c )		754734	1					
ANR	754742	Callee	isascii		754734	0					
ANR	754743	Identifier	isascii		754734	0					
ANR	754744	ArgumentList	( unsigned char ) c		754734	1					
ANR	754745	Argument	( unsigned char ) c		754734	0					
ANR	754746	CastExpression	( unsigned char ) c		754734	0					
ANR	754747	CastTarget	unsigned char		754734	0					
ANR	754748	Identifier	c		754734	1					
ANR	754749	ReturnStatement	return - 1 ;	2677:2:59596:59605	754734	1	True				
ANR	754750	UnaryOperationExpression	- 1		754734	0					
ANR	754751	UnaryOperator	-		754734	0					
ANR	754752	PrimaryExpression	1		754734	1					
ANR	754753	IfStatement	if ( isdigit ( ( unsigned char ) c ) )		754734	1					
ANR	754754	Condition	isdigit ( ( unsigned char ) c )	2678:5:59612:59637	754734	0	True				
ANR	754755	CallExpression	isdigit ( ( unsigned char ) c )		754734	0					
ANR	754756	Callee	isdigit		754734	0					
ANR	754757	Identifier	isdigit		754734	0					
ANR	754758	ArgumentList	( unsigned char ) c		754734	1					
ANR	754759	Argument	( unsigned char ) c		754734	0					
ANR	754760	CastExpression	( unsigned char ) c		754734	0					
ANR	754761	CastTarget	unsigned char		754734	0					
ANR	754762	Identifier	c		754734	1					
ANR	754763	ReturnStatement	return c - '0' ;	2679:2:59642:59656	754734	1	True				
ANR	754764	AdditiveExpression	c - '0'		754734	0		-			
ANR	754765	Identifier	c		754734	0					
ANR	754766	PrimaryExpression	'0'		754734	1					
ANR	754767	IfStatement	if ( ( c >= 'a' ) && ( c <= 'f' ) )		754734	2					
ANR	754768	Condition	( c >= 'a' ) && ( c <= 'f' )	2680:5:59663:59686	754734	0	True				
ANR	754769	AndExpression	( c >= 'a' ) && ( c <= 'f' )		754734	0		&&			
ANR	754770	RelationalExpression	c >= 'a'		754734	0		>=			
ANR	754771	Identifier	c		754734	0					
ANR	754772	PrimaryExpression	'a'		754734	1					
ANR	754773	RelationalExpression	c <= 'f'		754734	1		<=			
ANR	754774	Identifier	c		754734	0					
ANR	754775	PrimaryExpression	'f'		754734	1					
ANR	754776	ReturnStatement	return c + 10 - 'a' ;	2681:2:59691:59710	754734	1	True				
ANR	754777	AdditiveExpression	c + 10 - 'a'		754734	0		+			
ANR	754778	Identifier	c		754734	0					
ANR	754779	AdditiveExpression	10 - 'a'		754734	1		-			
ANR	754780	PrimaryExpression	10		754734	0					
ANR	754781	PrimaryExpression	'a'		754734	1					
ANR	754782	IfStatement	if ( ( c >= 'A' ) && ( c <= 'F' ) )		754734	3					
ANR	754783	Condition	( c >= 'A' ) && ( c <= 'F' )	2682:5:59717:59740	754734	0	True				
ANR	754784	AndExpression	( c >= 'A' ) && ( c <= 'F' )		754734	0		&&			
ANR	754785	RelationalExpression	c >= 'A'		754734	0		>=			
ANR	754786	Identifier	c		754734	0					
ANR	754787	PrimaryExpression	'A'		754734	1					
ANR	754788	RelationalExpression	c <= 'F'		754734	1		<=			
ANR	754789	Identifier	c		754734	0					
ANR	754790	PrimaryExpression	'F'		754734	1					
ANR	754791	ReturnStatement	return c + 10 - 'A' ;	2683:2:59745:59764	754734	1	True				
ANR	754792	AdditiveExpression	c + 10 - 'A'		754734	0		+			
ANR	754793	Identifier	c		754734	0					
ANR	754794	AdditiveExpression	10 - 'A'		754734	1		-			
ANR	754795	PrimaryExpression	10		754734	0					
ANR	754796	PrimaryExpression	'A'		754734	1					
ANR	754797	ReturnStatement	return - 1 ;	2684:1:59767:59776	754734	4	True				
ANR	754798	UnaryOperationExpression	- 1		754734	0					
ANR	754799	UnaryOperator	-		754734	0					
ANR	754800	PrimaryExpression	1		754734	1					
ANR	754801	ReturnType	int		754734	1					
ANR	754802	Identifier	hextoint		754734	2					
ANR	754803	ParameterList	int c		754734	3					
ANR	754804	Parameter	int c	2674:9:59551:59555	754734	0	True				
ANR	754805	ParameterType	int		754734	0					
ANR	754806	Identifier	c		754734	1					
ANR	754807	CFGEntryNode	ENTRY		754734		True				
ANR	754808	CFGExitNode	EXIT		754734		True				
ANR	754809	Symbol	c		754734						
ANR	754810	Symbol	isdigit		754734						
ANR	754811	Symbol	isascii		754734						
ANR	754812	Function	file_showstr	2691:10:59849:60635							
ANR	754813	FunctionDef	"file_showstr (FILE * fp , const char * s , size_t len)"		754812	0					
ANR	754814	CompoundStatement		2693:0:59904:60635	754812	0					
ANR	754815	IdentifierDeclStatement	char c ;	2694:1:59907:59913	754812	0	True				
ANR	754816	IdentifierDecl	c		754812	0					
ANR	754817	IdentifierDeclType	char		754812	0					
ANR	754818	Identifier	c		754812	1					
ANR	754819	ForStatement	for ( ; ; )		754812	1					
ANR	754820	CompoundStatement		4:10:21:21	754812	0					
ANR	754821	IfStatement	if ( len == ~0U )		754812	0					
ANR	754822	Condition	len == ~0U	2697:6:59934:59943	754812	0	True				
ANR	754823	EqualityExpression	len == ~0U		754812	0		==			
ANR	754824	Identifier	len		754812	0					
ANR	754825	Identifier	~0U		754812	1					
ANR	754826	CompoundStatement		5:18:41:41	754812	1					
ANR	754827	ExpressionStatement	c = * s ++	2698:3:59951:59959	754812	0	True				
ANR	754828	AssignmentExpression	c = * s ++		754812	0		=			
ANR	754829	Identifier	c		754812	0					
ANR	754830	UnaryOperationExpression	* s ++		754812	1					
ANR	754831	UnaryOperator	*		754812	0					
ANR	754832	PostIncDecOperationExpression	s ++		754812	1					
ANR	754833	Identifier	s		754812	0					
ANR	754834	IncDec	++		754812	1					
ANR	754835	IfStatement	if ( c == '\\0' )		754812	1					
ANR	754836	Condition	c == '\\0'	2699:7:59968:59976	754812	0	True				
ANR	754837	EqualityExpression	c == '\\0'		754812	0		==			
ANR	754838	Identifier	c		754812	0					
ANR	754839	PrimaryExpression	'\\0'		754812	1					
ANR	754840	BreakStatement	break ;	2700:4:59983:59988	754812	1	True				
ANR	754841	ElseStatement	else		754812	0					
ANR	754842	CompoundStatement		10:8:97:97	754812	0					
ANR	754843	IfStatement	if ( len -- == 0 )		754812	0					
ANR	754844	Condition	len -- == 0	2703:7:60011:60020	754812	0	True				
ANR	754845	EqualityExpression	len -- == 0		754812	0		==			
ANR	754846	PostIncDecOperationExpression	len --		754812	0					
ANR	754847	Identifier	len		754812	0					
ANR	754848	IncDec	--		754812	1					
ANR	754849	PrimaryExpression	0		754812	1					
ANR	754850	BreakStatement	break ;	2704:4:60027:60032	754812	1	True				
ANR	754851	ExpressionStatement	c = * s ++	2705:3:60037:60045	754812	1	True				
ANR	754852	AssignmentExpression	c = * s ++		754812	0		=			
ANR	754853	Identifier	c		754812	0					
ANR	754854	UnaryOperationExpression	* s ++		754812	1					
ANR	754855	UnaryOperator	*		754812	0					
ANR	754856	PostIncDecOperationExpression	s ++		754812	1					
ANR	754857	Identifier	s		754812	0					
ANR	754858	IncDec	++		754812	1					
ANR	754859	IfStatement	if ( c >= 040 && c <= 0176 )		754812	1					
ANR	754860	Condition	c >= 040 && c <= 0176	2707:6:60057:60077	754812	0	True				
ANR	754861	AndExpression	c >= 040 && c <= 0176		754812	0		&&			
ANR	754862	RelationalExpression	c >= 040		754812	0		>=			
ANR	754863	Identifier	c		754812	0					
ANR	754864	PrimaryExpression	040		754812	1					
ANR	754865	RelationalExpression	c <= 0176		754812	1		<=			
ANR	754866	Identifier	c		754812	0					
ANR	754867	PrimaryExpression	0176		754812	1					
ANR	754868	ExpressionStatement	"( void ) fputc ( c , fp )"	2708:3:60114:60133	754812	1	True				
ANR	754869	CastExpression	"( void ) fputc ( c , fp )"		754812	0					
ANR	754870	CastTarget	void		754812	0					
ANR	754871	CallExpression	"fputc ( c , fp )"		754812	1					
ANR	754872	Callee	fputc		754812	0					
ANR	754873	Identifier	fputc		754812	0					
ANR	754874	ArgumentList	c		754812	1					
ANR	754875	Argument	c		754812	0					
ANR	754876	Identifier	c		754812	0					
ANR	754877	Argument	fp		754812	1					
ANR	754878	Identifier	fp		754812	0					
ANR	754879	ElseStatement	else		754812	0					
ANR	754880	CompoundStatement		17:7:237:237	754812	0					
ANR	754881	ExpressionStatement	"( void ) fputc ( '\\\\' , fp )"	2710:3:60147:60169	754812	0	True				
ANR	754882	CastExpression	"( void ) fputc ( '\\\\' , fp )"		754812	0					
ANR	754883	CastTarget	void		754812	0					
ANR	754884	CallExpression	"fputc ( '\\\\' , fp )"		754812	1					
ANR	754885	Callee	fputc		754812	0					
ANR	754886	Identifier	fputc		754812	0					
ANR	754887	ArgumentList	'\\\\'		754812	1					
ANR	754888	Argument	'\\\\'		754812	0					
ANR	754889	PrimaryExpression	'\\\\'		754812	0					
ANR	754890	Argument	fp		754812	1					
ANR	754891	Identifier	fp		754812	0					
ANR	754892	SwitchStatement	switch ( c )		754812	1					
ANR	754893	Condition	c	2711:11:60182:60182	754812	0	True				
ANR	754894	Identifier	c		754812	0					
ANR	754895	CompoundStatement		19:14:280:280	754812	1					
ANR	754896	Label	case '\\a' :	2712:3:60190:60199	754812	0	True				
ANR	754897	ExpressionStatement	"( void ) fputc ( 'a' , fp )"	2713:4:60205:60226	754812	1	True				
ANR	754898	CastExpression	"( void ) fputc ( 'a' , fp )"		754812	0					
ANR	754899	CastTarget	void		754812	0					
ANR	754900	CallExpression	"fputc ( 'a' , fp )"		754812	1					
ANR	754901	Callee	fputc		754812	0					
ANR	754902	Identifier	fputc		754812	0					
ANR	754903	ArgumentList	'a'		754812	1					
ANR	754904	Argument	'a'		754812	0					
ANR	754905	PrimaryExpression	'a'		754812	0					
ANR	754906	Argument	fp		754812	1					
ANR	754907	Identifier	fp		754812	0					
ANR	754908	BreakStatement	break ;	2714:4:60232:60237	754812	2	True				
ANR	754909	Label	case '\\b' :	2716:3:60243:60252	754812	3	True				
ANR	754910	ExpressionStatement	"( void ) fputc ( 'b' , fp )"	2717:4:60258:60279	754812	4	True				
ANR	754911	CastExpression	"( void ) fputc ( 'b' , fp )"		754812	0					
ANR	754912	CastTarget	void		754812	0					
ANR	754913	CallExpression	"fputc ( 'b' , fp )"		754812	1					
ANR	754914	Callee	fputc		754812	0					
ANR	754915	Identifier	fputc		754812	0					
ANR	754916	ArgumentList	'b'		754812	1					
ANR	754917	Argument	'b'		754812	0					
ANR	754918	PrimaryExpression	'b'		754812	0					
ANR	754919	Argument	fp		754812	1					
ANR	754920	Identifier	fp		754812	0					
ANR	754921	BreakStatement	break ;	2718:4:60285:60290	754812	5	True				
ANR	754922	Label	case '\\f' :	2720:3:60296:60305	754812	6	True				
ANR	754923	ExpressionStatement	"( void ) fputc ( 'f' , fp )"	2721:4:60311:60332	754812	7	True				
ANR	754924	CastExpression	"( void ) fputc ( 'f' , fp )"		754812	0					
ANR	754925	CastTarget	void		754812	0					
ANR	754926	CallExpression	"fputc ( 'f' , fp )"		754812	1					
ANR	754927	Callee	fputc		754812	0					
ANR	754928	Identifier	fputc		754812	0					
ANR	754929	ArgumentList	'f'		754812	1					
ANR	754930	Argument	'f'		754812	0					
ANR	754931	PrimaryExpression	'f'		754812	0					
ANR	754932	Argument	fp		754812	1					
ANR	754933	Identifier	fp		754812	0					
ANR	754934	BreakStatement	break ;	2722:4:60338:60343	754812	8	True				
ANR	754935	Label	case '\\n' :	2724:3:60349:60358	754812	9	True				
ANR	754936	ExpressionStatement	"( void ) fputc ( 'n' , fp )"	2725:4:60364:60385	754812	10	True				
ANR	754937	CastExpression	"( void ) fputc ( 'n' , fp )"		754812	0					
ANR	754938	CastTarget	void		754812	0					
ANR	754939	CallExpression	"fputc ( 'n' , fp )"		754812	1					
ANR	754940	Callee	fputc		754812	0					
ANR	754941	Identifier	fputc		754812	0					
ANR	754942	ArgumentList	'n'		754812	1					
ANR	754943	Argument	'n'		754812	0					
ANR	754944	PrimaryExpression	'n'		754812	0					
ANR	754945	Argument	fp		754812	1					
ANR	754946	Identifier	fp		754812	0					
ANR	754947	BreakStatement	break ;	2726:4:60391:60396	754812	11	True				
ANR	754948	Label	case '\\r' :	2728:3:60402:60411	754812	12	True				
ANR	754949	ExpressionStatement	"( void ) fputc ( 'r' , fp )"	2729:4:60417:60438	754812	13	True				
ANR	754950	CastExpression	"( void ) fputc ( 'r' , fp )"		754812	0					
ANR	754951	CastTarget	void		754812	0					
ANR	754952	CallExpression	"fputc ( 'r' , fp )"		754812	1					
ANR	754953	Callee	fputc		754812	0					
ANR	754954	Identifier	fputc		754812	0					
ANR	754955	ArgumentList	'r'		754812	1					
ANR	754956	Argument	'r'		754812	0					
ANR	754957	PrimaryExpression	'r'		754812	0					
ANR	754958	Argument	fp		754812	1					
ANR	754959	Identifier	fp		754812	0					
ANR	754960	BreakStatement	break ;	2730:4:60444:60449	754812	14	True				
ANR	754961	Label	case '\\t' :	2732:3:60455:60464	754812	15	True				
ANR	754962	ExpressionStatement	"( void ) fputc ( 't' , fp )"	2733:4:60470:60491	754812	16	True				
ANR	754963	CastExpression	"( void ) fputc ( 't' , fp )"		754812	0					
ANR	754964	CastTarget	void		754812	0					
ANR	754965	CallExpression	"fputc ( 't' , fp )"		754812	1					
ANR	754966	Callee	fputc		754812	0					
ANR	754967	Identifier	fputc		754812	0					
ANR	754968	ArgumentList	't'		754812	1					
ANR	754969	Argument	't'		754812	0					
ANR	754970	PrimaryExpression	't'		754812	0					
ANR	754971	Argument	fp		754812	1					
ANR	754972	Identifier	fp		754812	0					
ANR	754973	BreakStatement	break ;	2734:4:60497:60502	754812	17	True				
ANR	754974	Label	case '\\v' :	2736:3:60508:60517	754812	18	True				
ANR	754975	ExpressionStatement	"( void ) fputc ( 'v' , fp )"	2737:4:60523:60544	754812	19	True				
ANR	754976	CastExpression	"( void ) fputc ( 'v' , fp )"		754812	0					
ANR	754977	CastTarget	void		754812	0					
ANR	754978	CallExpression	"fputc ( 'v' , fp )"		754812	1					
ANR	754979	Callee	fputc		754812	0					
ANR	754980	Identifier	fputc		754812	0					
ANR	754981	ArgumentList	'v'		754812	1					
ANR	754982	Argument	'v'		754812	0					
ANR	754983	PrimaryExpression	'v'		754812	0					
ANR	754984	Argument	fp		754812	1					
ANR	754985	Identifier	fp		754812	0					
ANR	754986	BreakStatement	break ;	2738:4:60550:60555	754812	20	True				
ANR	754987	Label	default :	2740:3:60561:60568	754812	21	True				
ANR	754988	Identifier	default		754812	0					
ANR	754989	ExpressionStatement	"( void ) fprintf ( fp , ""%.3o"" , c & 0377 )"	2741:4:60574:60610	754812	22	True				
ANR	754990	CastExpression	"( void ) fprintf ( fp , ""%.3o"" , c & 0377 )"		754812	0					
ANR	754991	CastTarget	void		754812	0					
ANR	754992	CallExpression	"fprintf ( fp , ""%.3o"" , c & 0377 )"		754812	1					
ANR	754993	Callee	fprintf		754812	0					
ANR	754994	Identifier	fprintf		754812	0					
ANR	754995	ArgumentList	fp		754812	1					
ANR	754996	Argument	fp		754812	0					
ANR	754997	Identifier	fp		754812	0					
ANR	754998	Argument	"""%.3o"""		754812	1					
ANR	754999	PrimaryExpression	"""%.3o"""		754812	0					
ANR	755000	Argument	c & 0377		754812	2					
ANR	755001	BitAndExpression	c & 0377		754812	0		&			
ANR	755002	Identifier	c		754812	0					
ANR	755003	PrimaryExpression	0377		754812	1					
ANR	755004	BreakStatement	break ;	2742:4:60616:60621	754812	23	True				
ANR	755005	ReturnType	void		754812	1					
ANR	755006	Identifier	file_showstr		754812	2					
ANR	755007	ParameterList	"FILE * fp , const char * s , size_t len"		754812	3					
ANR	755008	Parameter	FILE * fp	2692:13:59867:59874	754812	0	True				
ANR	755009	ParameterType	FILE *		754812	0					
ANR	755010	Identifier	fp		754812	1					
ANR	755011	Parameter	const char * s	2692:23:59877:59889	754812	1	True				
ANR	755012	ParameterType	const char *		754812	0					
ANR	755013	Identifier	s		754812	1					
ANR	755014	Parameter	size_t len	2692:38:59892:59901	754812	2	True				
ANR	755015	ParameterType	size_t		754812	0					
ANR	755016	Identifier	len		754812	1					
ANR	755017	CFGEntryNode	ENTRY		754812		True				
ANR	755018	CFGExitNode	EXIT		754812		True				
ANR	755019	InfiniteForNode	true		754812		True				
ANR	755020	Symbol	* s ++		754812						
ANR	755021	Symbol	~0U		754812						
ANR	755022	Symbol	s		754812						
ANR	755023	Symbol	c		754812						
ANR	755024	Symbol	len		754812						
ANR	755025	Symbol	fp		754812						
ANR	755026	Function	eatsize	2751:8:60710:61015							
ANR	755027	FunctionDef	eatsize (const char * * p)		755026	0					
ANR	755028	CompoundStatement		2753:0:60739:61015	755026	0					
ANR	755029	IdentifierDeclStatement	const char * l = * p ;	2754:1:60742:60760	755026	0	True				
ANR	755030	IdentifierDecl	* l = * p		755026	0					
ANR	755031	IdentifierDeclType	const char *		755026	0					
ANR	755032	Identifier	l		755026	1					
ANR	755033	AssignmentExpression	* l = * p		755026	2		=			
ANR	755034	Identifier	l		755026	0					
ANR	755035	UnaryOperationExpression	* p		755026	1					
ANR	755036	UnaryOperator	*		755026	0					
ANR	755037	Identifier	p		755026	1					
ANR	755038	IfStatement	if ( LOWCASE ( * l ) == 'u' )		755026	1					
ANR	755039	Condition	LOWCASE ( * l ) == 'u'	2756:5:60768:60785	755026	0	True				
ANR	755040	EqualityExpression	LOWCASE ( * l ) == 'u'		755026	0		==			
ANR	755041	CallExpression	LOWCASE ( * l )		755026	0					
ANR	755042	Callee	LOWCASE		755026	0					
ANR	755043	Identifier	LOWCASE		755026	0					
ANR	755044	ArgumentList	* l		755026	1					
ANR	755045	Argument	* l		755026	0					
ANR	755046	UnaryOperationExpression	* l		755026	0					
ANR	755047	UnaryOperator	*		755026	0					
ANR	755048	Identifier	l		755026	1					
ANR	755049	PrimaryExpression	'u'		755026	1					
ANR	755050	ExpressionStatement	l ++	2757:2:60791:60794	755026	1	True				
ANR	755051	PostIncDecOperationExpression	l ++		755026	0					
ANR	755052	Identifier	l		755026	0					
ANR	755053	IncDec	++		755026	1					
ANR	755054	SwitchStatement	switch ( LOWCASE ( * l ) )		755026	2					
ANR	755055	Condition	LOWCASE ( * l )	2759:9:60806:60816	755026	0	True				
ANR	755056	CallExpression	LOWCASE ( * l )		755026	0					
ANR	755057	Callee	LOWCASE		755026	0					
ANR	755058	Identifier	LOWCASE		755026	0					
ANR	755059	ArgumentList	* l		755026	1					
ANR	755060	Argument	* l		755026	0					
ANR	755061	UnaryOperationExpression	* l		755026	0					
ANR	755062	UnaryOperator	*		755026	0					
ANR	755063	Identifier	l		755026	1					
ANR	755064	CompoundStatement		7:22:79:79	755026	1					
ANR	755065	Label	case 'l' :	2760:1:60822:60830	755026	0	True				
ANR	755066	Label	case 's' :	2761:1:60847:60855	755026	1	True				
ANR	755067	Label	case 'h' :	2762:1:60873:60881	755026	2	True				
ANR	755068	Label	case 'b' :	2763:1:60899:60907	755026	3	True				
ANR	755069	Label	case 'c' :	2764:1:60929:60937	755026	4	True				
ANR	755070	ExpressionStatement	l ++	2765:2:60960:60963	755026	5	True				
ANR	755071	PostIncDecOperationExpression	l ++		755026	0					
ANR	755072	Identifier	l		755026	0					
ANR	755073	IncDec	++		755026	1					
ANR	755074	Label	default :	2767:1:60984:60991	755026	6	True				
ANR	755075	Identifier	default		755026	0					
ANR	755076	BreakStatement	break ;	2768:2:60995:61000	755026	7	True				
ANR	755077	ExpressionStatement	* p = l	2771:1:61007:61013	755026	3	True				
ANR	755078	AssignmentExpression	* p = l		755026	0		=			
ANR	755079	UnaryOperationExpression	* p		755026	0					
ANR	755080	UnaryOperator	*		755026	0					
ANR	755081	Identifier	p		755026	1					
ANR	755082	Identifier	l		755026	1					
ANR	755083	ReturnType	void		755026	1					
ANR	755084	Identifier	eatsize		755026	2					
ANR	755085	ParameterList	const char * * p		755026	3					
ANR	755086	Parameter	const char * * p	2752:8:60723:60736	755026	0	True				
ANR	755087	ParameterType	const char * *		755026	0					
ANR	755088	Identifier	p		755026	1					
ANR	755089	CFGEntryNode	ENTRY		755026		True				
ANR	755090	CFGExitNode	EXIT		755026		True				
ANR	755091	Symbol	p		755026						
ANR	755092	Symbol	LOWCASE		755026						
ANR	755093	Symbol	* l		755026						
ANR	755094	Symbol	* p		755026						
ANR	755095	Symbol	l		755026						
ANR	755096	Function	apprentice_buf	2777:8:61080:61479							
ANR	755097	FunctionDef	"apprentice_buf (struct magic_set * ms , struct magic * buf , size_t len)"		755096	0					
ANR	755098	CompoundStatement		2779:0:61167:61479	755096	0					
ANR	755099	IdentifierDeclStatement	struct magic_map * map ;	2780:1:61170:61191	755096	0	True				
ANR	755100	IdentifierDecl	* map		755096	0					
ANR	755101	IdentifierDeclType	struct magic_map *		755096	0					
ANR	755102	Identifier	map		755096	1					
ANR	755103	Statement	if	2782:1:61195:61196	755096	1	True				
ANR	755104	Statement	(	2782:4:61198:61198	755096	2	True				
ANR	755105	Statement	(	2782:5:61199:61199	755096	3	True				
ANR	755106	Statement	map	2782:6:61200:61202	755096	4	True				
ANR	755107	Statement	=	2782:10:61204:61204	755096	5	True				
ANR	755108	Statement	CAST	2782:12:61206:61209	755096	6	True				
ANR	755109	Statement	(	2782:16:61210:61210	755096	7	True				
ANR	755110	Statement	struct	2782:17:61211:61216	755096	8	True				
ANR	755111	Statement	magic_map	2782:24:61218:61226	755096	9	True				
ANR	755112	Statement	*	2782:34:61228:61228	755096	10	True				
ANR	755113	Statement	","	2782:35:61229:61229	755096	11	True				
ANR	755114	Statement	calloc	2782:37:61231:61236	755096	12	True				
ANR	755115	Statement	(	2782:43:61237:61237	755096	13	True				
ANR	755116	Statement	1	2782:44:61238:61238	755096	14	True				
ANR	755117	Statement	","	2782:45:61239:61239	755096	15	True				
ANR	755118	Statement	sizeof	2782:47:61241:61246	755096	16	True				
ANR	755119	Statement	(	2782:53:61247:61247	755096	17	True				
ANR	755120	Statement	*	2782:54:61248:61248	755096	18	True				
ANR	755121	Statement	map	2782:55:61249:61251	755096	19	True				
ANR	755122	Statement	)	2782:58:61252:61252	755096	20	True				
ANR	755123	Statement	)	2782:59:61253:61253	755096	21	True				
ANR	755124	Statement	)	2782:60:61254:61254	755096	22	True				
ANR	755125	Statement	)	2782:61:61255:61255	755096	23	True				
ANR	755126	Statement	==	2782:63:61257:61258	755096	24	True				
ANR	755127	Statement	NULL	2782:66:61260:61263	755096	25	True				
ANR	755128	Statement	)	2782:70:61264:61264	755096	26	True				
ANR	755129	CompoundStatement		4:72:98:98	755096	27					
ANR	755130	ExpressionStatement	"file_oomem ( ms , sizeof ( * map ) )"	2783:2:61270:61298	755096	0	True				
ANR	755131	CallExpression	"file_oomem ( ms , sizeof ( * map ) )"		755096	0					
ANR	755132	Callee	file_oomem		755096	0					
ANR	755133	Identifier	file_oomem		755096	0					
ANR	755134	ArgumentList	ms		755096	1					
ANR	755135	Argument	ms		755096	0					
ANR	755136	Identifier	ms		755096	0					
ANR	755137	Argument	sizeof ( * map )		755096	1					
ANR	755138	SizeofExpression	sizeof ( * map )		755096	0					
ANR	755139	Sizeof	sizeof		755096	0					
ANR	755140	UnaryOperationExpression	* map		755096	1					
ANR	755141	UnaryOperator	*		755096	0					
ANR	755142	Identifier	map		755096	1					
ANR	755143	ReturnStatement	return NULL ;	2784:2:61302:61313	755096	1	True				
ANR	755144	Identifier	NULL		755096	0					
ANR	755145	ExpressionStatement	map -> len = len	2786:1:61319:61333	755096	28	True				
ANR	755146	AssignmentExpression	map -> len = len		755096	0		=			
ANR	755147	PtrMemberAccess	map -> len		755096	0					
ANR	755148	Identifier	map		755096	0					
ANR	755149	Identifier	len		755096	1					
ANR	755150	Identifier	len		755096	1					
ANR	755151	ExpressionStatement	map -> p = buf	2787:1:61336:61348	755096	29	True				
ANR	755152	AssignmentExpression	map -> p = buf		755096	0		=			
ANR	755153	PtrMemberAccess	map -> p		755096	0					
ANR	755154	Identifier	map		755096	0					
ANR	755155	Identifier	p		755096	1					
ANR	755156	Identifier	buf		755096	1					
ANR	755157	ExpressionStatement	map -> type = MAP_TYPE_USER	2788:1:61351:61376	755096	30	True				
ANR	755158	AssignmentExpression	map -> type = MAP_TYPE_USER		755096	0		=			
ANR	755159	PtrMemberAccess	map -> type		755096	0					
ANR	755160	Identifier	map		755096	0					
ANR	755161	Identifier	type		755096	1					
ANR	755162	Identifier	MAP_TYPE_USER		755096	1					
ANR	755163	IfStatement	"if ( check_buffer ( ms , map , ""buffer"" ) != 0 )"		755096	31					
ANR	755164	Condition	"check_buffer ( ms , map , ""buffer"" ) != 0"	2789:5:61383:61418	755096	0	True				
ANR	755165	EqualityExpression	"check_buffer ( ms , map , ""buffer"" ) != 0"		755096	0		!=			
ANR	755166	CallExpression	"check_buffer ( ms , map , ""buffer"" )"		755096	0					
ANR	755167	Callee	check_buffer		755096	0					
ANR	755168	Identifier	check_buffer		755096	0					
ANR	755169	ArgumentList	ms		755096	1					
ANR	755170	Argument	ms		755096	0					
ANR	755171	Identifier	ms		755096	0					
ANR	755172	Argument	map		755096	1					
ANR	755173	Identifier	map		755096	0					
ANR	755174	Argument	"""buffer"""		755096	2					
ANR	755175	PrimaryExpression	"""buffer"""		755096	0					
ANR	755176	PrimaryExpression	0		755096	1					
ANR	755177	CompoundStatement		11:43:253:253	755096	1					
ANR	755178	ExpressionStatement	apprentice_unmap ( map )	2790:2:61425:61446	755096	0	True				
ANR	755179	CallExpression	apprentice_unmap ( map )		755096	0					
ANR	755180	Callee	apprentice_unmap		755096	0					
ANR	755181	Identifier	apprentice_unmap		755096	0					
ANR	755182	ArgumentList	map		755096	1					
ANR	755183	Argument	map		755096	0					
ANR	755184	Identifier	map		755096	0					
ANR	755185	ReturnStatement	return NULL ;	2791:2:61450:61461	755096	1	True				
ANR	755186	Identifier	NULL		755096	0					
ANR	755187	ReturnStatement	return map ;	2793:1:61467:61477	755096	32	True				
ANR	755188	Identifier	map		755096	0					
ANR	755189	ReturnType	struct magic_map *		755096	1					
ANR	755190	Identifier	apprentice_buf		755096	2					
ANR	755191	ParameterList	"struct magic_set * ms , struct magic * buf , size_t len"		755096	3					
ANR	755192	Parameter	struct magic_set * ms	2778:15:61114:61133	755096	0	True				
ANR	755193	ParameterType	struct magic_set *		755096	0					
ANR	755194	Identifier	ms		755096	1					
ANR	755195	Parameter	struct magic * buf	2778:37:61136:61152	755096	1	True				
ANR	755196	ParameterType	struct magic *		755096	0					
ANR	755197	Identifier	buf		755096	1					
ANR	755198	Parameter	size_t len	2778:56:61155:61164	755096	2	True				
ANR	755199	ParameterType	size_t		755096	0					
ANR	755200	Identifier	len		755096	1					
ANR	755201	CFGEntryNode	ENTRY		755096		True				
ANR	755202	CFGExitNode	EXIT		755096		True				
ANR	755203	Symbol	MAP_TYPE_USER		755096						
ANR	755204	Symbol	buf		755096						
ANR	755205	Symbol	check_buffer		755096						
ANR	755206	Symbol	NULL		755096						
ANR	755207	Symbol	len		755096						
ANR	755208	Symbol	ms		755096						
ANR	755209	Symbol	* map		755096						
ANR	755210	Symbol	map -> p		755096						
ANR	755211	Symbol	map -> len		755096						
ANR	755212	Symbol	map		755096						
ANR	755213	Symbol	map -> type		755096						
ANR	755214	Function	apprentice_map	2800:8:61525:65098							
ANR	755215	FunctionDef	"apprentice_map (struct magic_set * ms , const char * fn)"		755214	0					
ANR	755216	CompoundStatement		2802:0:61597:65098	755214	0					
ANR	755217	IdentifierDeclStatement	uint32_t * ptr ;	2803:1:61600:61613	755214	0	True				
ANR	755218	IdentifierDecl	* ptr		755214	0					
ANR	755219	IdentifierDeclType	uint32_t *		755214	0					
ANR	755220	Identifier	ptr		755214	1					
ANR	755221	IdentifierDeclStatement	"uint32_t version , entries , nentries ;"	2804:1:61616:61651	755214	1	True				
ANR	755222	IdentifierDecl	version		755214	0					
ANR	755223	IdentifierDeclType	uint32_t		755214	0					
ANR	755224	Identifier	version		755214	1					
ANR	755225	IdentifierDecl	entries		755214	1					
ANR	755226	IdentifierDeclType	uint32_t		755214	0					
ANR	755227	Identifier	entries		755214	1					
ANR	755228	IdentifierDecl	nentries		755214	2					
ANR	755229	IdentifierDeclType	uint32_t		755214	0					
ANR	755230	Identifier	nentries		755214	1					
ANR	755231	IdentifierDeclStatement	int needsbyteswap ;	2805:1:61654:61671	755214	2	True				
ANR	755232	IdentifierDecl	needsbyteswap		755214	0					
ANR	755233	IdentifierDeclType	int		755214	0					
ANR	755234	Identifier	needsbyteswap		755214	1					
ANR	755235	IdentifierDeclStatement	char * dbname = NULL ;	2806:1:61674:61693	755214	3	True				
ANR	755236	IdentifierDecl	* dbname = NULL		755214	0					
ANR	755237	IdentifierDeclType	char *		755214	0					
ANR	755238	Identifier	dbname		755214	1					
ANR	755239	AssignmentExpression	* dbname = NULL		755214	2		=			
ANR	755240	Identifier	NULL		755214	0					
ANR	755241	Identifier	NULL		755214	1					
ANR	755242	IdentifierDeclStatement	struct magic_map * map ;	2807:1:61696:61717	755214	4	True				
ANR	755243	IdentifierDecl	* map		755214	0					
ANR	755244	IdentifierDeclType	struct magic_map *		755214	0					
ANR	755245	Identifier	map		755214	1					
ANR	755246	IdentifierDeclStatement	size_t i ;	2808:1:61720:61728	755214	5	True				
ANR	755247	IdentifierDecl	i		755214	0					
ANR	755248	IdentifierDeclType	size_t		755214	0					
ANR	755249	Identifier	i		755214	1					
ANR	755250	IdentifierDeclStatement	php_stream * stream = NULL ;	2809:1:61731:61756	755214	6	True				
ANR	755251	IdentifierDecl	* stream = NULL		755214	0					
ANR	755252	IdentifierDeclType	php_stream *		755214	0					
ANR	755253	Identifier	stream		755214	1					
ANR	755254	AssignmentExpression	* stream = NULL		755214	2		=			
ANR	755255	Identifier	NULL		755214	0					
ANR	755256	Identifier	NULL		755214	1					
ANR	755257	IdentifierDeclStatement	php_stream_statbuf st ;	2810:1:61759:61780	755214	7	True				
ANR	755258	IdentifierDecl	st		755214	0					
ANR	755259	IdentifierDeclType	php_stream_statbuf		755214	0					
ANR	755260	Identifier	st		755214	1					
ANR	755261	Statement	if	2814:1:61786:61787	755214	8	True				
ANR	755262	Statement	(	2814:4:61789:61789	755214	9	True				
ANR	755263	Statement	(	2814:5:61790:61790	755214	10	True				
ANR	755264	Statement	map	2814:6:61791:61793	755214	11	True				
ANR	755265	Statement	=	2814:10:61795:61795	755214	12	True				
ANR	755266	Statement	CAST	2814:12:61797:61800	755214	13	True				
ANR	755267	Statement	(	2814:16:61801:61801	755214	14	True				
ANR	755268	Statement	struct	2814:17:61802:61807	755214	15	True				
ANR	755269	Statement	magic_map	2814:24:61809:61817	755214	16	True				
ANR	755270	Statement	*	2814:34:61819:61819	755214	17	True				
ANR	755271	Statement	","	2814:35:61820:61820	755214	18	True				
ANR	755272	Statement	ecalloc	2814:37:61822:61828	755214	19	True				
ANR	755273	Statement	(	2814:44:61829:61829	755214	20	True				
ANR	755274	Statement	1	2814:45:61830:61830	755214	21	True				
ANR	755275	Statement	","	2814:46:61831:61831	755214	22	True				
ANR	755276	Statement	sizeof	2814:48:61833:61838	755214	23	True				
ANR	755277	Statement	(	2814:54:61839:61839	755214	24	True				
ANR	755278	Statement	*	2814:55:61840:61840	755214	25	True				
ANR	755279	Statement	map	2814:56:61841:61843	755214	26	True				
ANR	755280	Statement	)	2814:59:61844:61844	755214	27	True				
ANR	755281	Statement	)	2814:60:61845:61845	755214	28	True				
ANR	755282	Statement	)	2814:61:61846:61846	755214	29	True				
ANR	755283	Statement	)	2814:62:61847:61847	755214	30	True				
ANR	755284	Statement	==	2814:64:61849:61850	755214	31	True				
ANR	755285	Statement	NULL	2814:67:61852:61855	755214	32	True				
ANR	755286	Statement	)	2814:71:61856:61856	755214	33	True				
ANR	755287	CompoundStatement		13:73:260:260	755214	34					
ANR	755288	ExpressionStatement	"file_oomem ( ms , sizeof ( * map ) )"	2815:2:61862:61890	755214	0	True				
ANR	755289	CallExpression	"file_oomem ( ms , sizeof ( * map ) )"		755214	0					
ANR	755290	Callee	file_oomem		755214	0					
ANR	755291	Identifier	file_oomem		755214	0					
ANR	755292	ArgumentList	ms		755214	1					
ANR	755293	Argument	ms		755214	0					
ANR	755294	Identifier	ms		755214	0					
ANR	755295	Argument	sizeof ( * map )		755214	1					
ANR	755296	SizeofExpression	sizeof ( * map )		755214	0					
ANR	755297	Sizeof	sizeof		755214	0					
ANR	755298	UnaryOperationExpression	* map		755214	1					
ANR	755299	UnaryOperator	*		755214	0					
ANR	755300	Identifier	map		755214	1					
ANR	755301	ReturnStatement	return NULL ;	2816:2:61894:61905	755214	1	True				
ANR	755302	Identifier	NULL		755214	0					
ANR	755303	IfStatement	if ( fn == NULL )		755214	35					
ANR	755304	Condition	fn == NULL	2819:5:61916:61925	755214	0	True				
ANR	755305	EqualityExpression	fn == NULL		755214	0		==			
ANR	755306	Identifier	fn		755214	0					
ANR	755307	Identifier	NULL		755214	1					
ANR	755308	CompoundStatement		18:17:330:330	755214	1					
ANR	755309	ExpressionStatement	map -> p = ( void * ) & php_magic_database	2820:2:61932:61968	755214	0	True				
ANR	755310	AssignmentExpression	map -> p = ( void * ) & php_magic_database		755214	0		=			
ANR	755311	PtrMemberAccess	map -> p		755214	0					
ANR	755312	Identifier	map		755214	0					
ANR	755313	Identifier	p		755214	1					
ANR	755314	CastExpression	( void * ) & php_magic_database		755214	1					
ANR	755315	CastTarget	void *		755214	0					
ANR	755316	UnaryOperationExpression	& php_magic_database		755214	1					
ANR	755317	UnaryOperator	&		755214	0					
ANR	755318	Identifier	php_magic_database		755214	1					
ANR	755319	GotoStatement	goto internal_loaded ;	2821:2:61972:61992	755214	1	True				
ANR	755320	Identifier	internal_loaded		755214	0					
ANR	755321	IfStatement	"if ( php_stream_stat_path_ex ( ( char * ) fn , 0 , & st , NULL ) == SUCCESS )"		755214	36					
ANR	755322	Condition	"php_stream_stat_path_ex ( ( char * ) fn , 0 , & st , NULL ) == SUCCESS"	2827:5:62125:62184	755214	0	True				
ANR	755323	EqualityExpression	"php_stream_stat_path_ex ( ( char * ) fn , 0 , & st , NULL ) == SUCCESS"		755214	0		==			
ANR	755324	CallExpression	"php_stream_stat_path_ex ( ( char * ) fn , 0 , & st , NULL )"		755214	0					
ANR	755325	Callee	php_stream_stat_path_ex		755214	0					
ANR	755326	Identifier	php_stream_stat_path_ex		755214	0					
ANR	755327	ArgumentList	( char * ) fn		755214	1					
ANR	755328	Argument	( char * ) fn		755214	0					
ANR	755329	CastExpression	( char * ) fn		755214	0					
ANR	755330	CastTarget	char *		755214	0					
ANR	755331	Identifier	fn		755214	1					
ANR	755332	Argument	0		755214	1					
ANR	755333	PrimaryExpression	0		755214	0					
ANR	755334	Argument	& st		755214	2					
ANR	755335	UnaryOperationExpression	& st		755214	0					
ANR	755336	UnaryOperator	&		755214	0					
ANR	755337	Identifier	st		755214	1					
ANR	755338	Argument	NULL		755214	3					
ANR	755339	Identifier	NULL		755214	0					
ANR	755340	Identifier	SUCCESS		755214	1					
ANR	755341	CompoundStatement		26:67:589:589	755214	1					
ANR	755342	IfStatement	if ( st . sb . st_mode & S_IFDIR )		755214	0					
ANR	755343	Condition	st . sb . st_mode & S_IFDIR	2828:19:62208:62230	755214	0	True				
ANR	755344	BitAndExpression	st . sb . st_mode & S_IFDIR		755214	0		&			
ANR	755345	MemberAccess	st . sb . st_mode		755214	0					
ANR	755346	MemberAccess	st . sb		755214	0					
ANR	755347	Identifier	st		755214	0					
ANR	755348	Identifier	sb		755214	1					
ANR	755349	Identifier	st_mode		755214	1					
ANR	755350	Identifier	S_IFDIR		755214	1					
ANR	755351	CompoundStatement		27:44:635:635	755214	1					
ANR	755352	ReturnStatement	return NULL ;	2829:23:62258:62269	755214	0	True				
ANR	755353	Identifier	NULL		755214	0					
ANR	755354	ExpressionStatement	"dbname = mkdbname ( ms , fn , 0 )"	2834:1:62306:62334	755214	37	True				
ANR	755355	AssignmentExpression	"dbname = mkdbname ( ms , fn , 0 )"		755214	0		=			
ANR	755356	Identifier	dbname		755214	0					
ANR	755357	CallExpression	"mkdbname ( ms , fn , 0 )"		755214	1					
ANR	755358	Callee	mkdbname		755214	0					
ANR	755359	Identifier	mkdbname		755214	0					
ANR	755360	ArgumentList	ms		755214	1					
ANR	755361	Argument	ms		755214	0					
ANR	755362	Identifier	ms		755214	0					
ANR	755363	Argument	fn		755214	1					
ANR	755364	Identifier	fn		755214	0					
ANR	755365	Argument	0		755214	2					
ANR	755366	PrimaryExpression	0		755214	0					
ANR	755367	IfStatement	if ( dbname == NULL )		755214	38					
ANR	755368	Condition	dbname == NULL	2835:5:62341:62354	755214	0	True				
ANR	755369	EqualityExpression	dbname == NULL		755214	0		==			
ANR	755370	Identifier	dbname		755214	0					
ANR	755371	Identifier	NULL		755214	1					
ANR	755372	GotoStatement	goto error ;	2836:2:62359:62369	755214	1	True				
ANR	755373	Identifier	error		755214	0					
ANR	755374	ExpressionStatement	"stream = php_stream_open_wrapper ( ( char * ) fn , ""rb"" , REPORT_ERRORS , NULL )"	2838:2:62374:62445	755214	39	True				
ANR	755375	AssignmentExpression	"stream = php_stream_open_wrapper ( ( char * ) fn , ""rb"" , REPORT_ERRORS , NULL )"		755214	0		=			
ANR	755376	Identifier	stream		755214	0					
ANR	755377	CallExpression	"php_stream_open_wrapper ( ( char * ) fn , ""rb"" , REPORT_ERRORS , NULL )"		755214	1					
ANR	755378	Callee	php_stream_open_wrapper		755214	0					
ANR	755379	Identifier	php_stream_open_wrapper		755214	0					
ANR	755380	ArgumentList	( char * ) fn		755214	1					
ANR	755381	Argument	( char * ) fn		755214	0					
ANR	755382	CastExpression	( char * ) fn		755214	0					
ANR	755383	CastTarget	char *		755214	0					
ANR	755384	Identifier	fn		755214	1					
ANR	755385	Argument	"""rb"""		755214	1					
ANR	755386	PrimaryExpression	"""rb"""		755214	0					
ANR	755387	Argument	REPORT_ERRORS		755214	2					
ANR	755388	Identifier	REPORT_ERRORS		755214	0					
ANR	755389	Argument	NULL		755214	3					
ANR	755390	Identifier	NULL		755214	0					
ANR	755391	IfStatement	if ( ! stream )		755214	40					
ANR	755392	Condition	! stream	2840:5:62453:62459	755214	0	True				
ANR	755393	UnaryOperationExpression	! stream		755214	0					
ANR	755394	UnaryOperator	!		755214	0					
ANR	755395	Identifier	stream		755214	1					
ANR	755396	CompoundStatement		39:14:864:864	755214	1					
ANR	755397	GotoStatement	goto error ;	2841:2:62466:62476	755214	0	True				
ANR	755398	Identifier	error		755214	0					
ANR	755399	IfStatement	"if ( php_stream_stat ( stream , & st ) < 0 )"		755214	41					
ANR	755400	Condition	"php_stream_stat ( stream , & st ) < 0"	2844:5:62487:62518	755214	0	True				
ANR	755401	RelationalExpression	"php_stream_stat ( stream , & st ) < 0"		755214	0		<			
ANR	755402	CallExpression	"php_stream_stat ( stream , & st )"		755214	0					
ANR	755403	Callee	php_stream_stat		755214	0					
ANR	755404	Identifier	php_stream_stat		755214	0					
ANR	755405	ArgumentList	stream		755214	1					
ANR	755406	Argument	stream		755214	0					
ANR	755407	Identifier	stream		755214	0					
ANR	755408	Argument	& st		755214	1					
ANR	755409	UnaryOperationExpression	& st		755214	0					
ANR	755410	UnaryOperator	&		755214	0					
ANR	755411	Identifier	st		755214	1					
ANR	755412	PrimaryExpression	0		755214	1					
ANR	755413	CompoundStatement		43:39:923:923	755214	1					
ANR	755414	ExpressionStatement	"file_error ( ms , errno , ""cannot stat `%s'"" , dbname )"	2845:2:62525:62574	755214	0	True				
ANR	755415	CallExpression	"file_error ( ms , errno , ""cannot stat `%s'"" , dbname )"		755214	0					
ANR	755416	Callee	file_error		755214	0					
ANR	755417	Identifier	file_error		755214	0					
ANR	755418	ArgumentList	ms		755214	1					
ANR	755419	Argument	ms		755214	0					
ANR	755420	Identifier	ms		755214	0					
ANR	755421	Argument	errno		755214	1					
ANR	755422	Identifier	errno		755214	0					
ANR	755423	Argument	"""cannot stat `%s'"""		755214	2					
ANR	755424	PrimaryExpression	"""cannot stat `%s'"""		755214	0					
ANR	755425	Argument	dbname		755214	3					
ANR	755426	Identifier	dbname		755214	0					
ANR	755427	GotoStatement	goto error ;	2846:2:62578:62588	755214	1	True				
ANR	755428	Identifier	error		755214	0					
ANR	755429	IfStatement	if ( st . sb . st_size < 8 || st . sb . st_size > MAXMAGIC_SIZE )		755214	42					
ANR	755430	Condition	st . sb . st_size < 8 || st . sb . st_size > MAXMAGIC_SIZE	2848:5:62598:62647	755214	0	True				
ANR	755431	OrExpression	st . sb . st_size < 8 || st . sb . st_size > MAXMAGIC_SIZE		755214	0		||			
ANR	755432	RelationalExpression	st . sb . st_size < 8		755214	0		<			
ANR	755433	MemberAccess	st . sb . st_size		755214	0					
ANR	755434	MemberAccess	st . sb		755214	0					
ANR	755435	Identifier	st		755214	0					
ANR	755436	Identifier	sb		755214	1					
ANR	755437	Identifier	st_size		755214	1					
ANR	755438	PrimaryExpression	8		755214	1					
ANR	755439	RelationalExpression	st . sb . st_size > MAXMAGIC_SIZE		755214	1		>			
ANR	755440	MemberAccess	st . sb . st_size		755214	0					
ANR	755441	MemberAccess	st . sb		755214	0					
ANR	755442	Identifier	st		755214	0					
ANR	755443	Identifier	sb		755214	1					
ANR	755444	Identifier	st_size		755214	1					
ANR	755445	Identifier	MAXMAGIC_SIZE		755214	1					
ANR	755446	CompoundStatement		47:57:1052:1052	755214	1					
ANR	755447	ExpressionStatement	"file_error ( ms , 0 , ""file `%s' is too %s"" , dbname , st . sb . st_size < 8 ? ""small"" : ""large"" )"	2849:2:62654:62747	755214	0	True				
ANR	755448	CallExpression	"file_error ( ms , 0 , ""file `%s' is too %s"" , dbname , st . sb . st_size < 8 ? ""small"" : ""large"" )"		755214	0					
ANR	755449	Callee	file_error		755214	0					
ANR	755450	Identifier	file_error		755214	0					
ANR	755451	ArgumentList	ms		755214	1					
ANR	755452	Argument	ms		755214	0					
ANR	755453	Identifier	ms		755214	0					
ANR	755454	Argument	0		755214	1					
ANR	755455	PrimaryExpression	0		755214	0					
ANR	755456	Argument	"""file `%s' is too %s"""		755214	2					
ANR	755457	PrimaryExpression	"""file `%s' is too %s"""		755214	0					
ANR	755458	Argument	dbname		755214	3					
ANR	755459	Identifier	dbname		755214	0					
ANR	755460	Argument	"st . sb . st_size < 8 ? ""small"" : ""large"""		755214	4					
ANR	755461	ConditionalExpression	"st . sb . st_size < 8 ? ""small"" : ""large"""		755214	0					
ANR	755462	Condition	st . sb . st_size < 8		755214	0					
ANR	755463	RelationalExpression	st . sb . st_size < 8		755214	0		<			
ANR	755464	MemberAccess	st . sb . st_size		755214	0					
ANR	755465	MemberAccess	st . sb		755214	0					
ANR	755466	Identifier	st		755214	0					
ANR	755467	Identifier	sb		755214	1					
ANR	755468	Identifier	st_size		755214	1					
ANR	755469	PrimaryExpression	8		755214	1					
ANR	755470	PrimaryExpression	"""small"""		755214	1					
ANR	755471	PrimaryExpression	"""large"""		755214	2					
ANR	755472	GotoStatement	goto error ;	2851:2:62751:62761	755214	1	True				
ANR	755473	Identifier	error		755214	0					
ANR	755474	ExpressionStatement	map -> len = ( size_t ) st . sb . st_size	2854:1:62768:62800	755214	43	True				
ANR	755475	AssignmentExpression	map -> len = ( size_t ) st . sb . st_size		755214	0		=			
ANR	755476	PtrMemberAccess	map -> len		755214	0					
ANR	755477	Identifier	map		755214	0					
ANR	755478	Identifier	len		755214	1					
ANR	755479	CastExpression	( size_t ) st . sb . st_size		755214	1					
ANR	755480	CastTarget	size_t		755214	0					
ANR	755481	MemberAccess	st . sb . st_size		755214	1					
ANR	755482	MemberAccess	st . sb		755214	0					
ANR	755483	Identifier	st		755214	0					
ANR	755484	Identifier	sb		755214	1					
ANR	755485	Identifier	st_size		755214	1					
ANR	755486	Statement	if	2855:1:62803:62804	755214	44	True				
ANR	755487	Statement	(	2855:4:62806:62806	755214	45	True				
ANR	755488	Statement	(	2855:5:62807:62807	755214	46	True				
ANR	755489	Statement	map	2855:6:62808:62810	755214	47	True				
ANR	755490	Statement	->	2855:9:62811:62812	755214	48	True				
ANR	755491	Statement	p	2855:11:62813:62813	755214	49	True				
ANR	755492	Statement	=	2855:13:62815:62815	755214	50	True				
ANR	755493	Statement	CAST	2855:15:62817:62820	755214	51	True				
ANR	755494	Statement	(	2855:19:62821:62821	755214	52	True				
ANR	755495	Statement	void	2855:20:62822:62825	755214	53	True				
ANR	755496	Statement	*	2855:25:62827:62827	755214	54	True				
ANR	755497	Statement	","	2855:26:62828:62828	755214	55	True				
ANR	755498	Statement	emalloc	2855:28:62830:62836	755214	56	True				
ANR	755499	Statement	(	2855:35:62837:62837	755214	57	True				
ANR	755500	Statement	map	2855:36:62838:62840	755214	58	True				
ANR	755501	Statement	->	2855:39:62841:62842	755214	59	True				
ANR	755502	Statement	len	2855:41:62843:62845	755214	60	True				
ANR	755503	Statement	)	2855:44:62846:62846	755214	61	True				
ANR	755504	Statement	)	2855:45:62847:62847	755214	62	True				
ANR	755505	Statement	)	2855:46:62848:62848	755214	63	True				
ANR	755506	Statement	==	2855:48:62850:62851	755214	64	True				
ANR	755507	Statement	NULL	2855:51:62853:62856	755214	65	True				
ANR	755508	Statement	)	2855:55:62857:62857	755214	66	True				
ANR	755509	CompoundStatement		54:57:1261:1261	755214	67					
ANR	755510	ExpressionStatement	"file_oomem ( ms , map -> len )"	2856:2:62863:62887	755214	0	True				
ANR	755511	CallExpression	"file_oomem ( ms , map -> len )"		755214	0					
ANR	755512	Callee	file_oomem		755214	0					
ANR	755513	Identifier	file_oomem		755214	0					
ANR	755514	ArgumentList	ms		755214	1					
ANR	755515	Argument	ms		755214	0					
ANR	755516	Identifier	ms		755214	0					
ANR	755517	Argument	map -> len		755214	1					
ANR	755518	PtrMemberAccess	map -> len		755214	0					
ANR	755519	Identifier	map		755214	0					
ANR	755520	Identifier	len		755214	1					
ANR	755521	GotoStatement	goto error ;	2857:2:62891:62901	755214	1	True				
ANR	755522	Identifier	error		755214	0					
ANR	755523	IfStatement	"if ( php_stream_read ( stream , map -> p , ( size_t ) st . sb . st_size ) != ( size_t ) st . sb . st_size )"		755214	68					
ANR	755524	Condition	"php_stream_read ( stream , map -> p , ( size_t ) st . sb . st_size ) != ( size_t ) st . sb . st_size"	2859:5:62911:62989	755214	0	True				
ANR	755525	EqualityExpression	"php_stream_read ( stream , map -> p , ( size_t ) st . sb . st_size ) != ( size_t ) st . sb . st_size"		755214	0		!=			
ANR	755526	CallExpression	"php_stream_read ( stream , map -> p , ( size_t ) st . sb . st_size )"		755214	0					
ANR	755527	Callee	php_stream_read		755214	0					
ANR	755528	Identifier	php_stream_read		755214	0					
ANR	755529	ArgumentList	stream		755214	1					
ANR	755530	Argument	stream		755214	0					
ANR	755531	Identifier	stream		755214	0					
ANR	755532	Argument	map -> p		755214	1					
ANR	755533	PtrMemberAccess	map -> p		755214	0					
ANR	755534	Identifier	map		755214	0					
ANR	755535	Identifier	p		755214	1					
ANR	755536	Argument	( size_t ) st . sb . st_size		755214	2					
ANR	755537	CastExpression	( size_t ) st . sb . st_size		755214	0					
ANR	755538	CastTarget	size_t		755214	0					
ANR	755539	MemberAccess	st . sb . st_size		755214	1					
ANR	755540	MemberAccess	st . sb		755214	0					
ANR	755541	Identifier	st		755214	0					
ANR	755542	Identifier	sb		755214	1					
ANR	755543	Identifier	st_size		755214	1					
ANR	755544	CastExpression	( size_t ) st . sb . st_size		755214	1					
ANR	755545	CastTarget	size_t		755214	0					
ANR	755546	MemberAccess	st . sb . st_size		755214	1					
ANR	755547	MemberAccess	st . sb		755214	0					
ANR	755548	Identifier	st		755214	0					
ANR	755549	Identifier	sb		755214	1					
ANR	755550	Identifier	st_size		755214	1					
ANR	755551	CompoundStatement		58:86:1394:1394	755214	1					
ANR	755552	ExpressionStatement	file_badread ( ms )	2860:2:62996:63012	755214	0	True				
ANR	755553	CallExpression	file_badread ( ms )		755214	0					
ANR	755554	Callee	file_badread		755214	0					
ANR	755555	Identifier	file_badread		755214	0					
ANR	755556	ArgumentList	ms		755214	1					
ANR	755557	Argument	ms		755214	0					
ANR	755558	Identifier	ms		755214	0					
ANR	755559	GotoStatement	goto error ;	2861:2:63016:63026	755214	1	True				
ANR	755560	Identifier	error		755214	0					
ANR	755561	ExpressionStatement	map -> len = 0	2863:1:63032:63044	755214	69	True				
ANR	755562	AssignmentExpression	map -> len = 0		755214	0		=			
ANR	755563	PtrMemberAccess	map -> len		755214	0					
ANR	755564	Identifier	map		755214	0					
ANR	755565	Identifier	len		755214	1					
ANR	755566	PrimaryExpression	0		755214	1					
ANR	755567	Statement	define	2864:1:63047:63052	755214	70	True				
ANR	755568	Statement	RET	2864:8:63054:63056	755214	71	True				
ANR	755569	Statement	1	2864:12:63058:63058	755214	72	True				
ANR	755570	ExpressionStatement	php_stream_close ( stream )	2866:1:63062:63086	755214	73	True				
ANR	755571	CallExpression	php_stream_close ( stream )		755214	0					
ANR	755572	Callee	php_stream_close		755214	0					
ANR	755573	Identifier	php_stream_close		755214	0					
ANR	755574	ArgumentList	stream		755214	1					
ANR	755575	Argument	stream		755214	0					
ANR	755576	Identifier	stream		755214	0					
ANR	755577	ExpressionStatement	stream = NULL	2867:1:63089:63102	755214	74	True				
ANR	755578	AssignmentExpression	stream = NULL		755214	0		=			
ANR	755579	Identifier	stream		755214	0					
ANR	755580	Identifier	NULL		755214	1					
ANR	755581	Label	internal_loaded :	2869:0:63105:63120	755214	75	True				
ANR	755582	Identifier	internal_loaded		755214	0					
ANR	755583	ExpressionStatement	ptr = ( uint32_t * ) ( void * ) map -> p	2870:1:63123:63155	755214	76	True				
ANR	755584	AssignmentExpression	ptr = ( uint32_t * ) ( void * ) map -> p		755214	0		=			
ANR	755585	Identifier	ptr		755214	0					
ANR	755586	CastExpression	( uint32_t * ) ( void * ) map -> p		755214	1					
ANR	755587	CastTarget	uint32_t *		755214	0					
ANR	755588	CastExpression	( void * ) map -> p		755214	1					
ANR	755589	CastTarget	void *		755214	0					
ANR	755590	PtrMemberAccess	map -> p		755214	1					
ANR	755591	Identifier	map		755214	0					
ANR	755592	Identifier	p		755214	1					
ANR	755593	IfStatement	if ( * ptr != MAGICNO )		755214	77					
ANR	755594	Condition	* ptr != MAGICNO	2871:5:63162:63176	755214	0	True				
ANR	755595	EqualityExpression	* ptr != MAGICNO		755214	0		!=			
ANR	755596	UnaryOperationExpression	* ptr		755214	0					
ANR	755597	UnaryOperator	*		755214	0					
ANR	755598	Identifier	ptr		755214	1					
ANR	755599	Identifier	MAGICNO		755214	1					
ANR	755600	CompoundStatement		70:22:1581:1581	755214	1					
ANR	755601	IfStatement	if ( swap4 ( * ptr ) != MAGICNO )		755214	0					
ANR	755602	Condition	swap4 ( * ptr ) != MAGICNO	2872:6:63187:63208	755214	0	True				
ANR	755603	EqualityExpression	swap4 ( * ptr ) != MAGICNO		755214	0		!=			
ANR	755604	CallExpression	swap4 ( * ptr )		755214	0					
ANR	755605	Callee	swap4		755214	0					
ANR	755606	Identifier	swap4		755214	0					
ANR	755607	ArgumentList	* ptr		755214	1					
ANR	755608	Argument	* ptr		755214	0					
ANR	755609	UnaryOperationExpression	* ptr		755214	0					
ANR	755610	UnaryOperator	*		755214	0					
ANR	755611	Identifier	ptr		755214	1					
ANR	755612	Identifier	MAGICNO		755214	1					
ANR	755613	CompoundStatement		71:30:1613:1613	755214	1					
ANR	755614	ExpressionStatement	"file_error ( ms , 0 , ""bad magic in `%s'"" , dbname )"	2873:3:63216:63262	755214	0	True				
ANR	755615	CallExpression	"file_error ( ms , 0 , ""bad magic in `%s'"" , dbname )"		755214	0					
ANR	755616	Callee	file_error		755214	0					
ANR	755617	Identifier	file_error		755214	0					
ANR	755618	ArgumentList	ms		755214	1					
ANR	755619	Argument	ms		755214	0					
ANR	755620	Identifier	ms		755214	0					
ANR	755621	Argument	0		755214	1					
ANR	755622	PrimaryExpression	0		755214	0					
ANR	755623	Argument	"""bad magic in `%s'"""		755214	2					
ANR	755624	PrimaryExpression	"""bad magic in `%s'"""		755214	0					
ANR	755625	Argument	dbname		755214	3					
ANR	755626	Identifier	dbname		755214	0					
ANR	755627	GotoStatement	goto error ;	2874:3:63267:63277	755214	1	True				
ANR	755628	Identifier	error		755214	0					
ANR	755629	ExpressionStatement	needsbyteswap = 1	2876:2:63285:63302	755214	1	True				
ANR	755630	AssignmentExpression	needsbyteswap = 1		755214	0		=			
ANR	755631	Identifier	needsbyteswap		755214	0					
ANR	755632	PrimaryExpression	1		755214	1					
ANR	755633	ElseStatement	else		755214	0					
ANR	755634	ExpressionStatement	needsbyteswap = 0	2878:2:63314:63331	755214	0	True				
ANR	755635	AssignmentExpression	needsbyteswap = 0		755214	0		=			
ANR	755636	Identifier	needsbyteswap		755214	0					
ANR	755637	PrimaryExpression	0		755214	1					
ANR	755638	IfStatement	if ( needsbyteswap )		755214	78					
ANR	755639	Condition	needsbyteswap	2879:5:63338:63350	755214	0	True				
ANR	755640	Identifier	needsbyteswap		755214	0					
ANR	755641	ExpressionStatement	version = swap4 ( ptr [ 1 ] )	2880:2:63355:63378	755214	1	True				
ANR	755642	AssignmentExpression	version = swap4 ( ptr [ 1 ] )		755214	0		=			
ANR	755643	Identifier	version		755214	0					
ANR	755644	CallExpression	swap4 ( ptr [ 1 ] )		755214	1					
ANR	755645	Callee	swap4		755214	0					
ANR	755646	Identifier	swap4		755214	0					
ANR	755647	ArgumentList	ptr [ 1 ]		755214	1					
ANR	755648	Argument	ptr [ 1 ]		755214	0					
ANR	755649	ArrayIndexing	ptr [ 1 ]		755214	0					
ANR	755650	Identifier	ptr		755214	0					
ANR	755651	PrimaryExpression	1		755214	1					
ANR	755652	ElseStatement	else		755214	0					
ANR	755653	ExpressionStatement	version = ptr [ 1 ]	2882:2:63388:63404	755214	0	True				
ANR	755654	AssignmentExpression	version = ptr [ 1 ]		755214	0		=			
ANR	755655	Identifier	version		755214	0					
ANR	755656	ArrayIndexing	ptr [ 1 ]		755214	1					
ANR	755657	Identifier	ptr		755214	0					
ANR	755658	PrimaryExpression	1		755214	1					
ANR	755659	IfStatement	if ( version != VERSIONNO )		755214	79					
ANR	755660	Condition	version != VERSIONNO	2883:5:63411:63430	755214	0	True				
ANR	755661	EqualityExpression	version != VERSIONNO		755214	0		!=			
ANR	755662	Identifier	version		755214	0					
ANR	755663	Identifier	VERSIONNO		755214	1					
ANR	755664	CompoundStatement		82:27:1835:1835	755214	1					
ANR	755665	Statement	file_error	2884:2:63437:63446	755214	0	True				
ANR	755666	Statement	(	2884:12:63447:63447	755214	1	True				
ANR	755667	Statement	ms	2884:13:63448:63449	755214	2	True				
ANR	755668	Statement	","	2884:15:63450:63450	755214	3	True				
ANR	755669	Statement	0	2884:17:63452:63452	755214	4	True				
ANR	755670	Statement	","	2884:18:63453:63453	755214	5	True				
ANR	755671	Statement	"""File %d.%d supports only version %d magic """	2884:20:63455:63498	755214	6	True				
ANR	755672	Statement	"""files. `%s' is version %d"""	2885:6:63506:63532	755214	7	True				
ANR	755673	Statement	","	2885:33:63533:63533	755214	8	True				
ANR	755674	Statement	FILE_VERSION_MAJOR	2885:35:63535:63552	755214	9	True				
ANR	755675	Statement	","	2885:53:63553:63553	755214	10	True				
ANR	755676	Statement	patchlevel	2885:55:63555:63564	755214	11	True				
ANR	755677	Statement	","	2885:65:63565:63565	755214	12	True				
ANR	755678	Statement	VERSIONNO	2886:6:63573:63581	755214	13	True				
ANR	755679	Statement	","	2886:15:63582:63582	755214	14	True				
ANR	755680	Statement	dbname	2886:17:63584:63589	755214	15	True				
ANR	755681	Statement	","	2886:23:63590:63590	755214	16	True				
ANR	755682	Statement	version	2886:25:63592:63598	755214	17	True				
ANR	755683	Statement	)	2886:32:63599:63599	755214	18	True				
ANR	755684	ExpressionStatement		2886:33:63600:63600	755214	19	True				
ANR	755685	GotoStatement	goto error ;	2887:2:63604:63614	755214	20	True				
ANR	755686	Identifier	error		755214	0					
ANR	755687	IfStatement	if ( needsbyteswap && fn == NULL )		755214	80					
ANR	755688	Condition	needsbyteswap && fn == NULL	2893:5:63809:63835	755214	0	True				
ANR	755689	AndExpression	needsbyteswap && fn == NULL		755214	0		&&			
ANR	755690	Identifier	needsbyteswap		755214	0					
ANR	755691	EqualityExpression	fn == NULL		755214	1		==			
ANR	755692	Identifier	fn		755214	0					
ANR	755693	Identifier	NULL		755214	1					
ANR	755694	CompoundStatement		92:34:2240:2240	755214	1					
ANR	755695	ExpressionStatement	map -> p = emalloc ( sizeof ( php_magic_database ) )	2894:2:63842:63886	755214	0	True				
ANR	755696	AssignmentExpression	map -> p = emalloc ( sizeof ( php_magic_database ) )		755214	0		=			
ANR	755697	PtrMemberAccess	map -> p		755214	0					
ANR	755698	Identifier	map		755214	0					
ANR	755699	Identifier	p		755214	1					
ANR	755700	CallExpression	emalloc ( sizeof ( php_magic_database ) )		755214	1					
ANR	755701	Callee	emalloc		755214	0					
ANR	755702	Identifier	emalloc		755214	0					
ANR	755703	ArgumentList	sizeof ( php_magic_database )		755214	1					
ANR	755704	Argument	sizeof ( php_magic_database )		755214	0					
ANR	755705	SizeofExpression	sizeof ( php_magic_database )		755214	0					
ANR	755706	Sizeof	sizeof		755214	0					
ANR	755707	SizeofOperand	php_magic_database		755214	1					
ANR	755708	ExpressionStatement	"map -> p = memcpy ( map -> p , php_magic_database , sizeof ( php_magic_database ) )"	2895:2:63890:63961	755214	1	True				
ANR	755709	AssignmentExpression	"map -> p = memcpy ( map -> p , php_magic_database , sizeof ( php_magic_database ) )"		755214	0		=			
ANR	755710	PtrMemberAccess	map -> p		755214	0					
ANR	755711	Identifier	map		755214	0					
ANR	755712	Identifier	p		755214	1					
ANR	755713	CallExpression	"memcpy ( map -> p , php_magic_database , sizeof ( php_magic_database ) )"		755214	1					
ANR	755714	Callee	memcpy		755214	0					
ANR	755715	Identifier	memcpy		755214	0					
ANR	755716	ArgumentList	map -> p		755214	1					
ANR	755717	Argument	map -> p		755214	0					
ANR	755718	PtrMemberAccess	map -> p		755214	0					
ANR	755719	Identifier	map		755214	0					
ANR	755720	Identifier	p		755214	1					
ANR	755721	Argument	php_magic_database		755214	1					
ANR	755722	Identifier	php_magic_database		755214	0					
ANR	755723	Argument	sizeof ( php_magic_database )		755214	2					
ANR	755724	SizeofExpression	sizeof ( php_magic_database )		755214	0					
ANR	755725	Sizeof	sizeof		755214	0					
ANR	755726	SizeofOperand	php_magic_database		755214	1					
ANR	755727	IfStatement	if ( NULL != fn )		755214	81					
ANR	755728	Condition	NULL != fn	2898:5:63972:63981	755214	0	True				
ANR	755729	EqualityExpression	NULL != fn		755214	0		!=			
ANR	755730	Identifier	NULL		755214	0					
ANR	755731	Identifier	fn		755214	1					
ANR	755732	CompoundStatement		97:17:2386:2386	755214	1					
ANR	755733	ExpressionStatement	nentries = ( uint32_t ) ( st . sb . st_size / sizeof ( struct magic ) )	2899:2:63988:64047	755214	0	True				
ANR	755734	AssignmentExpression	nentries = ( uint32_t ) ( st . sb . st_size / sizeof ( struct magic ) )		755214	0		=			
ANR	755735	Identifier	nentries		755214	0					
ANR	755736	CastExpression	( uint32_t ) ( st . sb . st_size / sizeof ( struct magic ) )		755214	1					
ANR	755737	CastTarget	uint32_t		755214	0					
ANR	755738	MultiplicativeExpression	st . sb . st_size / sizeof ( struct magic )		755214	1		/			
ANR	755739	MemberAccess	st . sb . st_size		755214	0					
ANR	755740	MemberAccess	st . sb		755214	0					
ANR	755741	Identifier	st		755214	0					
ANR	755742	Identifier	sb		755214	1					
ANR	755743	Identifier	st_size		755214	1					
ANR	755744	SizeofExpression	sizeof ( struct magic )		755214	1					
ANR	755745	Sizeof	sizeof		755214	0					
ANR	755746	SizeofOperand	struct magic		755214	1					
ANR	755747	ExpressionStatement	entries = ( uint32_t ) ( st . sb . st_size / sizeof ( struct magic ) )	2900:2:64051:64109	755214	1	True				
ANR	755748	AssignmentExpression	entries = ( uint32_t ) ( st . sb . st_size / sizeof ( struct magic ) )		755214	0		=			
ANR	755749	Identifier	entries		755214	0					
ANR	755750	CastExpression	( uint32_t ) ( st . sb . st_size / sizeof ( struct magic ) )		755214	1					
ANR	755751	CastTarget	uint32_t		755214	0					
ANR	755752	MultiplicativeExpression	st . sb . st_size / sizeof ( struct magic )		755214	1		/			
ANR	755753	MemberAccess	st . sb . st_size		755214	0					
ANR	755754	MemberAccess	st . sb		755214	0					
ANR	755755	Identifier	st		755214	0					
ANR	755756	Identifier	sb		755214	1					
ANR	755757	Identifier	st_size		755214	1					
ANR	755758	SizeofExpression	sizeof ( struct magic )		755214	1					
ANR	755759	Sizeof	sizeof		755214	0					
ANR	755760	SizeofOperand	struct magic		755214	1					
ANR	755761	IfStatement	if ( ( zend_off_t ) ( entries * sizeof ( struct magic ) ) != st . sb . st_size )		755214	2					
ANR	755762	Condition	( zend_off_t ) ( entries * sizeof ( struct magic ) ) != st . sb . st_size	2901:6:64117:64177	755214	0	True				
ANR	755763	EqualityExpression	( zend_off_t ) ( entries * sizeof ( struct magic ) ) != st . sb . st_size		755214	0		!=			
ANR	755764	CastExpression	( zend_off_t ) ( entries * sizeof ( struct magic ) )		755214	0					
ANR	755765	CastTarget	zend_off_t		755214	0					
ANR	755766	MultiplicativeExpression	entries * sizeof ( struct magic )		755214	1		*			
ANR	755767	Identifier	entries		755214	0					
ANR	755768	SizeofExpression	sizeof ( struct magic )		755214	1					
ANR	755769	Sizeof	sizeof		755214	0					
ANR	755770	SizeofOperand	struct magic		755214	1					
ANR	755771	MemberAccess	st . sb . st_size		755214	1					
ANR	755772	MemberAccess	st . sb		755214	0					
ANR	755773	Identifier	st		755214	0					
ANR	755774	Identifier	sb		755214	1					
ANR	755775	Identifier	st_size		755214	1					
ANR	755776	CompoundStatement		100:69:2582:2582	755214	1					
ANR	755777	ExpressionStatement	"file_error ( ms , 0 , ""Size of `%s' %llu is not a multiple of %zu"" , dbname , ( unsigned long long ) st . sb . st_size , sizeof ( struct magic ) )"	2902:3:64185:64321	755214	0	True				
ANR	755778	CallExpression	"file_error ( ms , 0 , ""Size of `%s' %llu is not a multiple of %zu"" , dbname , ( unsigned long long ) st . sb . st_size , sizeof ( struct magic ) )"		755214	0					
ANR	755779	Callee	file_error		755214	0					
ANR	755780	Identifier	file_error		755214	0					
ANR	755781	ArgumentList	ms		755214	1					
ANR	755782	Argument	ms		755214	0					
ANR	755783	Identifier	ms		755214	0					
ANR	755784	Argument	0		755214	1					
ANR	755785	PrimaryExpression	0		755214	0					
ANR	755786	Argument	"""Size of `%s' %llu is not a multiple of %zu"""		755214	2					
ANR	755787	PrimaryExpression	"""Size of `%s' %llu is not a multiple of %zu"""		755214	0					
ANR	755788	Argument	dbname		755214	3					
ANR	755789	Identifier	dbname		755214	0					
ANR	755790	Argument	( unsigned long long ) st . sb . st_size		755214	4					
ANR	755791	CastExpression	( unsigned long long ) st . sb . st_size		755214	0					
ANR	755792	CastTarget	unsigned long long		755214	0					
ANR	755793	MemberAccess	st . sb . st_size		755214	1					
ANR	755794	MemberAccess	st . sb		755214	0					
ANR	755795	Identifier	st		755214	0					
ANR	755796	Identifier	sb		755214	1					
ANR	755797	Identifier	st_size		755214	1					
ANR	755798	Argument	sizeof ( struct magic )		755214	5					
ANR	755799	SizeofExpression	sizeof ( struct magic )		755214	0					
ANR	755800	Sizeof	sizeof		755214	0					
ANR	755801	SizeofOperand	struct magic		755214	1					
ANR	755802	GotoStatement	goto error ;	2905:3:64326:64336	755214	1	True				
ANR	755803	Identifier	error		755214	0					
ANR	755804	Statement	map	2908:1:64346:64348	755214	82	True				
ANR	755805	Statement	->	2908:4:64349:64350	755214	83	True				
ANR	755806	Statement	magic	2908:6:64351:64355	755214	84	True				
ANR	755807	Statement	[	2908:11:64356:64356	755214	85	True				
ANR	755808	Statement	0	2908:12:64357:64357	755214	86	True				
ANR	755809	Statement	]	2908:13:64358:64358	755214	87	True				
ANR	755810	Statement	=	2908:15:64360:64360	755214	88	True				
ANR	755811	Statement	CAST	2908:17:64362:64365	755214	89	True				
ANR	755812	Statement	(	2908:21:64366:64366	755214	90	True				
ANR	755813	Statement	struct	2908:22:64367:64372	755214	91	True				
ANR	755814	Statement	magic	2908:29:64374:64378	755214	92	True				
ANR	755815	Statement	*	2908:35:64380:64380	755214	93	True				
ANR	755816	Statement	","	2908:36:64381:64381	755214	94	True				
ANR	755817	Statement	map	2908:38:64383:64385	755214	95	True				
ANR	755818	Statement	->	2908:41:64386:64387	755214	96	True				
ANR	755819	Statement	p	2908:43:64388:64388	755214	97	True				
ANR	755820	Statement	)	2908:44:64389:64389	755214	98	True				
ANR	755821	ExpressionStatement	+ 1	2908:46:64391:64394	755214	99	True				
ANR	755822	UnaryOperationExpression	+ 1		755214	0					
ANR	755823	UnaryOperator	+		755214	0					
ANR	755824	PrimaryExpression	1		755214	1					
ANR	755825	ExpressionStatement	nentries = 0	2909:1:64397:64409	755214	100	True				
ANR	755826	AssignmentExpression	nentries = 0		755214	0		=			
ANR	755827	Identifier	nentries		755214	0					
ANR	755828	PrimaryExpression	0		755214	1					
ANR	755829	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		755214	101					
ANR	755830	ForInit	i = 0 ;	2910:6:64417:64422	755214	0	True				
ANR	755831	AssignmentExpression	i = 0		755214	0		=			
ANR	755832	Identifier	i		755214	0					
ANR	755833	PrimaryExpression	0		755214	1					
ANR	755834	Condition	i < MAGIC_SETS	2910:13:64424:64437	755214	1	True				
ANR	755835	RelationalExpression	i < MAGIC_SETS		755214	0		<			
ANR	755836	Identifier	i		755214	0					
ANR	755837	Identifier	MAGIC_SETS		755214	1					
ANR	755838	PostIncDecOperationExpression	i ++	2910:29:64440:64442	755214	2	True				
ANR	755839	Identifier	i		755214	0					
ANR	755840	IncDec	++		755214	1					
ANR	755841	CompoundStatement		109:34:2847:2847	755214	3					
ANR	755842	IfStatement	if ( needsbyteswap )		755214	0					
ANR	755843	Condition	needsbyteswap	2911:6:64453:64465	755214	0	True				
ANR	755844	Identifier	needsbyteswap		755214	0					
ANR	755845	ExpressionStatement	map -> nmagic [ i ] = swap4 ( ptr [ i + 2 ] )	2912:3:64471:64505	755214	1	True				
ANR	755846	AssignmentExpression	map -> nmagic [ i ] = swap4 ( ptr [ i + 2 ] )		755214	0		=			
ANR	755847	ArrayIndexing	map -> nmagic [ i ]		755214	0					
ANR	755848	PtrMemberAccess	map -> nmagic		755214	0					
ANR	755849	Identifier	map		755214	0					
ANR	755850	Identifier	nmagic		755214	1					
ANR	755851	Identifier	i		755214	1					
ANR	755852	CallExpression	swap4 ( ptr [ i + 2 ] )		755214	1					
ANR	755853	Callee	swap4		755214	0					
ANR	755854	Identifier	swap4		755214	0					
ANR	755855	ArgumentList	ptr [ i + 2 ]		755214	1					
ANR	755856	Argument	ptr [ i + 2 ]		755214	0					
ANR	755857	ArrayIndexing	ptr [ i + 2 ]		755214	0					
ANR	755858	Identifier	ptr		755214	0					
ANR	755859	AdditiveExpression	i + 2		755214	1		+			
ANR	755860	Identifier	i		755214	0					
ANR	755861	PrimaryExpression	2		755214	1					
ANR	755862	ElseStatement	else		755214	0					
ANR	755863	ExpressionStatement	map -> nmagic [ i ] = ptr [ i + 2 ]	2914:3:64517:64544	755214	0	True				
ANR	755864	AssignmentExpression	map -> nmagic [ i ] = ptr [ i + 2 ]		755214	0		=			
ANR	755865	ArrayIndexing	map -> nmagic [ i ]		755214	0					
ANR	755866	PtrMemberAccess	map -> nmagic		755214	0					
ANR	755867	Identifier	map		755214	0					
ANR	755868	Identifier	nmagic		755214	1					
ANR	755869	Identifier	i		755214	1					
ANR	755870	ArrayIndexing	ptr [ i + 2 ]		755214	1					
ANR	755871	Identifier	ptr		755214	0					
ANR	755872	AdditiveExpression	i + 2		755214	1		+			
ANR	755873	Identifier	i		755214	0					
ANR	755874	PrimaryExpression	2		755214	1					
ANR	755875	IfStatement	if ( i != MAGIC_SETS - 1 )		755214	1					
ANR	755876	Condition	i != MAGIC_SETS - 1	2915:6:64552:64570	755214	0	True				
ANR	755877	EqualityExpression	i != MAGIC_SETS - 1		755214	0		!=			
ANR	755878	Identifier	i		755214	0					
ANR	755879	AdditiveExpression	MAGIC_SETS - 1		755214	1		-			
ANR	755880	Identifier	MAGIC_SETS		755214	0					
ANR	755881	PrimaryExpression	1		755214	1					
ANR	755882	ExpressionStatement	map -> magic [ i + 1 ] = map -> magic [ i ] + map -> nmagic [ i ]	2916:3:64576:64626	755214	1	True				
ANR	755883	AssignmentExpression	map -> magic [ i + 1 ] = map -> magic [ i ] + map -> nmagic [ i ]		755214	0		=			
ANR	755884	ArrayIndexing	map -> magic [ i + 1 ]		755214	0					
ANR	755885	PtrMemberAccess	map -> magic		755214	0					
ANR	755886	Identifier	map		755214	0					
ANR	755887	Identifier	magic		755214	1					
ANR	755888	AdditiveExpression	i + 1		755214	1		+			
ANR	755889	Identifier	i		755214	0					
ANR	755890	PrimaryExpression	1		755214	1					
ANR	755891	AdditiveExpression	map -> magic [ i ] + map -> nmagic [ i ]		755214	1		+			
ANR	755892	ArrayIndexing	map -> magic [ i ]		755214	0					
ANR	755893	PtrMemberAccess	map -> magic		755214	0					
ANR	755894	Identifier	map		755214	0					
ANR	755895	Identifier	magic		755214	1					
ANR	755896	Identifier	i		755214	1					
ANR	755897	ArrayIndexing	map -> nmagic [ i ]		755214	1					
ANR	755898	PtrMemberAccess	map -> nmagic		755214	0					
ANR	755899	Identifier	map		755214	0					
ANR	755900	Identifier	nmagic		755214	1					
ANR	755901	Identifier	i		755214	1					
ANR	755902	ExpressionStatement	nentries += map -> nmagic [ i ]	2917:2:64630:64656	755214	2	True				
ANR	755903	AssignmentExpression	nentries += map -> nmagic [ i ]		755214	0		+=			
ANR	755904	Identifier	nentries		755214	0					
ANR	755905	ArrayIndexing	map -> nmagic [ i ]		755214	1					
ANR	755906	PtrMemberAccess	map -> nmagic		755214	0					
ANR	755907	Identifier	map		755214	0					
ANR	755908	Identifier	nmagic		755214	1					
ANR	755909	Identifier	i		755214	1					
ANR	755910	IfStatement	if ( NULL != fn && entries != nentries + 1 )		755214	102					
ANR	755911	Condition	NULL != fn && entries != nentries + 1	2919:5:64666:64702	755214	0	True				
ANR	755912	AndExpression	NULL != fn && entries != nentries + 1		755214	0		&&			
ANR	755913	EqualityExpression	NULL != fn		755214	0		!=			
ANR	755914	Identifier	NULL		755214	0					
ANR	755915	Identifier	fn		755214	1					
ANR	755916	EqualityExpression	entries != nentries + 1		755214	1		!=			
ANR	755917	Identifier	entries		755214	0					
ANR	755918	AdditiveExpression	nentries + 1		755214	1		+			
ANR	755919	Identifier	nentries		755214	0					
ANR	755920	PrimaryExpression	1		755214	1					
ANR	755921	CompoundStatement		118:44:3107:3107	755214	1					
ANR	755922	ExpressionStatement	"file_error ( ms , 0 , ""Inconsistent entries in `%s' %u != %u"" , dbname , entries , nentries + 1 )"	2920:2:64709:64804	755214	0	True				
ANR	755923	CallExpression	"file_error ( ms , 0 , ""Inconsistent entries in `%s' %u != %u"" , dbname , entries , nentries + 1 )"		755214	0					
ANR	755924	Callee	file_error		755214	0					
ANR	755925	Identifier	file_error		755214	0					
ANR	755926	ArgumentList	ms		755214	1					
ANR	755927	Argument	ms		755214	0					
ANR	755928	Identifier	ms		755214	0					
ANR	755929	Argument	0		755214	1					
ANR	755930	PrimaryExpression	0		755214	0					
ANR	755931	Argument	"""Inconsistent entries in `%s' %u != %u"""		755214	2					
ANR	755932	PrimaryExpression	"""Inconsistent entries in `%s' %u != %u"""		755214	0					
ANR	755933	Argument	dbname		755214	3					
ANR	755934	Identifier	dbname		755214	0					
ANR	755935	Argument	entries		755214	4					
ANR	755936	Identifier	entries		755214	0					
ANR	755937	Argument	nentries + 1		755214	5					
ANR	755938	AdditiveExpression	nentries + 1		755214	0		+			
ANR	755939	Identifier	nentries		755214	0					
ANR	755940	PrimaryExpression	1		755214	1					
ANR	755941	GotoStatement	goto error ;	2922:2:64808:64818	755214	1	True				
ANR	755942	Identifier	error		755214	0					
ANR	755943	IfStatement	if ( needsbyteswap )		755214	103					
ANR	755944	Condition	needsbyteswap	2924:5:64828:64840	755214	0	True				
ANR	755945	Identifier	needsbyteswap		755214	0					
ANR	755946	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		755214	1					
ANR	755947	ForInit	i = 0 ;	2925:7:64850:64855	755214	0	True				
ANR	755948	AssignmentExpression	i = 0		755214	0		=			
ANR	755949	Identifier	i		755214	0					
ANR	755950	PrimaryExpression	0		755214	1					
ANR	755951	Condition	i < MAGIC_SETS	2925:14:64857:64870	755214	1	True				
ANR	755952	RelationalExpression	i < MAGIC_SETS		755214	0		<			
ANR	755953	Identifier	i		755214	0					
ANR	755954	Identifier	MAGIC_SETS		755214	1					
ANR	755955	PostIncDecOperationExpression	i ++	2925:30:64873:64875	755214	2	True				
ANR	755956	Identifier	i		755214	0					
ANR	755957	IncDec	++		755214	1					
ANR	755958	ExpressionStatement	"byteswap ( map -> magic [ i ] , map -> nmagic [ i ] )"	2926:3:64881:64920	755214	3	True				
ANR	755959	CallExpression	"byteswap ( map -> magic [ i ] , map -> nmagic [ i ] )"		755214	0					
ANR	755960	Callee	byteswap		755214	0					
ANR	755961	Identifier	byteswap		755214	0					
ANR	755962	ArgumentList	map -> magic [ i ]		755214	1					
ANR	755963	Argument	map -> magic [ i ]		755214	0					
ANR	755964	ArrayIndexing	map -> magic [ i ]		755214	0					
ANR	755965	PtrMemberAccess	map -> magic		755214	0					
ANR	755966	Identifier	map		755214	0					
ANR	755967	Identifier	magic		755214	1					
ANR	755968	Identifier	i		755214	1					
ANR	755969	Argument	map -> nmagic [ i ]		755214	1					
ANR	755970	ArrayIndexing	map -> nmagic [ i ]		755214	0					
ANR	755971	PtrMemberAccess	map -> nmagic		755214	0					
ANR	755972	Identifier	map		755214	0					
ANR	755973	Identifier	nmagic		755214	1					
ANR	755974	Identifier	i		755214	1					
ANR	755975	IfStatement	if ( dbname )		755214	104					
ANR	755976	Condition	dbname	2928:5:64928:64933	755214	0	True				
ANR	755977	Identifier	dbname		755214	0					
ANR	755978	CompoundStatement		127:13:3338:3338	755214	1					
ANR	755979	ExpressionStatement	efree ( dbname )	2929:2:64940:64953	755214	0	True				
ANR	755980	CallExpression	efree ( dbname )		755214	0					
ANR	755981	Callee	efree		755214	0					
ANR	755982	Identifier	efree		755214	0					
ANR	755983	ArgumentList	dbname		755214	1					
ANR	755984	Argument	dbname		755214	0					
ANR	755985	Identifier	dbname		755214	0					
ANR	755986	ReturnStatement	return map ;	2931:1:64959:64969	755214	105	True				
ANR	755987	Identifier	map		755214	0					
ANR	755988	Label	error :	2933:0:64972:64977	755214	106	True				
ANR	755989	Identifier	error		755214	0					
ANR	755990	IfStatement	if ( stream )		755214	107					
ANR	755991	Condition	stream	2934:5:64984:64989	755214	0	True				
ANR	755992	Identifier	stream		755214	0					
ANR	755993	CompoundStatement		133:13:3394:3394	755214	1					
ANR	755994	ExpressionStatement	php_stream_close ( stream )	2935:2:64996:65020	755214	0	True				
ANR	755995	CallExpression	php_stream_close ( stream )		755214	0					
ANR	755996	Callee	php_stream_close		755214	0					
ANR	755997	Identifier	php_stream_close		755214	0					
ANR	755998	ArgumentList	stream		755214	1					
ANR	755999	Argument	stream		755214	0					
ANR	756000	Identifier	stream		755214	0					
ANR	756001	ExpressionStatement	apprentice_unmap ( map )	2937:1:65026:65047	755214	108	True				
ANR	756002	CallExpression	apprentice_unmap ( map )		755214	0					
ANR	756003	Callee	apprentice_unmap		755214	0					
ANR	756004	Identifier	apprentice_unmap		755214	0					
ANR	756005	ArgumentList	map		755214	1					
ANR	756006	Argument	map		755214	0					
ANR	756007	Identifier	map		755214	0					
ANR	756008	IfStatement	if ( dbname )		755214	109					
ANR	756009	Condition	dbname	2938:5:65054:65059	755214	0	True				
ANR	756010	Identifier	dbname		755214	0					
ANR	756011	CompoundStatement		137:13:3464:3464	755214	1					
ANR	756012	ExpressionStatement	efree ( dbname )	2939:2:65066:65079	755214	0	True				
ANR	756013	CallExpression	efree ( dbname )		755214	0					
ANR	756014	Callee	efree		755214	0					
ANR	756015	Identifier	efree		755214	0					
ANR	756016	ArgumentList	dbname		755214	1					
ANR	756017	Argument	dbname		755214	0					
ANR	756018	Identifier	dbname		755214	0					
ANR	756019	ReturnStatement	return NULL ;	2941:1:65085:65096	755214	110	True				
ANR	756020	Identifier	NULL		755214	0					
ANR	756021	ReturnType	struct magic_map *		755214	1					
ANR	756022	Identifier	apprentice_map		755214	2					
ANR	756023	ParameterList	"struct magic_set * ms , const char * fn"		755214	3					
ANR	756024	Parameter	struct magic_set * ms	2801:15:61559:61578	755214	0	True				
ANR	756025	ParameterType	struct magic_set *		755214	0					
ANR	756026	Identifier	ms		755214	1					
ANR	756027	Parameter	const char * fn	2801:37:61581:61594	755214	1	True				
ANR	756028	ParameterType	const char *		755214	0					
ANR	756029	Identifier	fn		755214	1					
ANR	756030	CFGEntryNode	ENTRY		755214		True				
ANR	756031	CFGExitNode	EXIT		755214		True				
ANR	756032	Symbol	VERSIONNO		755214						
ANR	756033	Symbol	nentries		755214						
ANR	756034	Symbol	MAGIC_SETS		755214						
ANR	756035	Symbol	* map		755214						
ANR	756036	Symbol	fn		755214						
ANR	756037	Symbol	& st		755214						
ANR	756038	Symbol	swap4		755214						
ANR	756039	Symbol	php_stream_open_wrapper		755214						
ANR	756040	Symbol	emalloc		755214						
ANR	756041	Symbol	stream		755214						
ANR	756042	Symbol	php_stream_stat_path_ex		755214						
ANR	756043	Symbol	map -> p		755214						
ANR	756044	Symbol	php_magic_database		755214						
ANR	756045	Symbol	st . sb		755214						
ANR	756046	Symbol	* ptr		755214						
ANR	756047	Symbol	map -> magic		755214						
ANR	756048	Symbol	& php_magic_database		755214						
ANR	756049	Symbol	st . sb . st_mode		755214						
ANR	756050	Symbol	map -> nmagic		755214						
ANR	756051	Symbol	* map -> nmagic		755214						
ANR	756052	Symbol	map		755214						
ANR	756053	Symbol	MAXMAGIC_SIZE		755214						
ANR	756054	Symbol	st		755214						
ANR	756055	Symbol	errno		755214						
ANR	756056	Symbol	NULL		755214						
ANR	756057	Symbol	SUCCESS		755214						
ANR	756058	Symbol	S_IFDIR		755214						
ANR	756059	Symbol	ms		755214						
ANR	756060	Symbol	* map -> magic		755214						
ANR	756061	Symbol	map -> len		755214						
ANR	756062	Symbol	i		755214						
ANR	756063	Symbol	version		755214						
ANR	756064	Symbol	ptr		755214						
ANR	756065	Symbol	needsbyteswap		755214						
ANR	756066	Symbol	mkdbname		755214						
ANR	756067	Symbol	* * map		755214						
ANR	756068	Symbol	entries		755214						
ANR	756069	Symbol	* i		755214						
ANR	756070	Symbol	dbname		755214						
ANR	756071	Symbol	REPORT_ERRORS		755214						
ANR	756072	Symbol	php_stream_stat		755214						
ANR	756073	Symbol	st . sb . st_size		755214						
ANR	756074	Symbol	memcpy		755214						
ANR	756075	Symbol	php_stream_read		755214						
ANR	756076	Symbol	MAGICNO		755214						
ANR	756077	Function	check_buffer	2944:8:65109:66610							
ANR	756078	FunctionDef	"check_buffer (struct magic_set * ms , struct magic_map * map , const char * dbname)"		756077	0					
ANR	756079	CompoundStatement		2946:0:65191:66610	756077	0					
ANR	756080	IdentifierDeclStatement	uint32_t * ptr ;	2947:1:65194:65207	756077	0	True				
ANR	756081	IdentifierDecl	* ptr		756077	0					
ANR	756082	IdentifierDeclType	uint32_t *		756077	0					
ANR	756083	Identifier	ptr		756077	1					
ANR	756084	IdentifierDeclStatement	"uint32_t entries , nentries ;"	2948:1:65210:65236	756077	1	True				
ANR	756085	IdentifierDecl	entries		756077	0					
ANR	756086	IdentifierDeclType	uint32_t		756077	0					
ANR	756087	Identifier	entries		756077	1					
ANR	756088	IdentifierDecl	nentries		756077	1					
ANR	756089	IdentifierDeclType	uint32_t		756077	0					
ANR	756090	Identifier	nentries		756077	1					
ANR	756091	IdentifierDeclStatement	uint32_t version ;	2949:1:65239:65255	756077	2	True				
ANR	756092	IdentifierDecl	version		756077	0					
ANR	756093	IdentifierDeclType	uint32_t		756077	0					
ANR	756094	Identifier	version		756077	1					
ANR	756095	IdentifierDeclStatement	"int i , needsbyteswap ;"	2950:1:65258:65278	756077	3	True				
ANR	756096	IdentifierDecl	i		756077	0					
ANR	756097	IdentifierDeclType	int		756077	0					
ANR	756098	Identifier	i		756077	1					
ANR	756099	IdentifierDecl	needsbyteswap		756077	1					
ANR	756100	IdentifierDeclType	int		756077	0					
ANR	756101	Identifier	needsbyteswap		756077	1					
ANR	756102	Statement	ptr	2952:1:65282:65284	756077	4	True				
ANR	756103	Statement	=	2952:5:65286:65286	756077	5	True				
ANR	756104	Statement	CAST	2952:7:65288:65291	756077	6	True				
ANR	756105	Statement	(	2952:11:65292:65292	756077	7	True				
ANR	756106	Statement	uint32_t	2952:12:65293:65300	756077	8	True				
ANR	756107	Statement	*	2952:21:65302:65302	756077	9	True				
ANR	756108	Statement	","	2952:22:65303:65303	756077	10	True				
ANR	756109	Statement	map	2952:24:65305:65307	756077	11	True				
ANR	756110	Statement	->	2952:27:65308:65309	756077	12	True				
ANR	756111	Statement	p	2952:29:65310:65310	756077	13	True				
ANR	756112	Statement	)	2952:30:65311:65311	756077	14	True				
ANR	756113	ExpressionStatement		2952:31:65312:65312	756077	15	True				
ANR	756114	IfStatement	if ( * ptr != MAGICNO )		756077	16					
ANR	756115	Condition	* ptr != MAGICNO	2953:5:65319:65333	756077	0	True				
ANR	756116	EqualityExpression	* ptr != MAGICNO		756077	0		!=			
ANR	756117	UnaryOperationExpression	* ptr		756077	0					
ANR	756118	UnaryOperator	*		756077	0					
ANR	756119	Identifier	ptr		756077	1					
ANR	756120	Identifier	MAGICNO		756077	1					
ANR	756121	CompoundStatement		8:22:144:144	756077	1					
ANR	756122	IfStatement	if ( swap4 ( * ptr ) != MAGICNO )		756077	0					
ANR	756123	Condition	swap4 ( * ptr ) != MAGICNO	2954:6:65344:65365	756077	0	True				
ANR	756124	EqualityExpression	swap4 ( * ptr ) != MAGICNO		756077	0		!=			
ANR	756125	CallExpression	swap4 ( * ptr )		756077	0					
ANR	756126	Callee	swap4		756077	0					
ANR	756127	Identifier	swap4		756077	0					
ANR	756128	ArgumentList	* ptr		756077	1					
ANR	756129	Argument	* ptr		756077	0					
ANR	756130	UnaryOperationExpression	* ptr		756077	0					
ANR	756131	UnaryOperator	*		756077	0					
ANR	756132	Identifier	ptr		756077	1					
ANR	756133	Identifier	MAGICNO		756077	1					
ANR	756134	CompoundStatement		9:30:176:176	756077	1					
ANR	756135	ExpressionStatement	"file_error ( ms , 0 , ""bad magic in `%s'"" , dbname )"	2955:3:65373:65419	756077	0	True				
ANR	756136	CallExpression	"file_error ( ms , 0 , ""bad magic in `%s'"" , dbname )"		756077	0					
ANR	756137	Callee	file_error		756077	0					
ANR	756138	Identifier	file_error		756077	0					
ANR	756139	ArgumentList	ms		756077	1					
ANR	756140	Argument	ms		756077	0					
ANR	756141	Identifier	ms		756077	0					
ANR	756142	Argument	0		756077	1					
ANR	756143	PrimaryExpression	0		756077	0					
ANR	756144	Argument	"""bad magic in `%s'"""		756077	2					
ANR	756145	PrimaryExpression	"""bad magic in `%s'"""		756077	0					
ANR	756146	Argument	dbname		756077	3					
ANR	756147	Identifier	dbname		756077	0					
ANR	756148	ReturnStatement	return - 1 ;	2956:3:65424:65433	756077	1	True				
ANR	756149	UnaryOperationExpression	- 1		756077	0					
ANR	756150	UnaryOperator	-		756077	0					
ANR	756151	PrimaryExpression	1		756077	1					
ANR	756152	ExpressionStatement	needsbyteswap = 1	2958:2:65441:65458	756077	1	True				
ANR	756153	AssignmentExpression	needsbyteswap = 1		756077	0		=			
ANR	756154	Identifier	needsbyteswap		756077	0					
ANR	756155	PrimaryExpression	1		756077	1					
ANR	756156	ElseStatement	else		756077	0					
ANR	756157	ExpressionStatement	needsbyteswap = 0	2960:2:65470:65487	756077	0	True				
ANR	756158	AssignmentExpression	needsbyteswap = 0		756077	0		=			
ANR	756159	Identifier	needsbyteswap		756077	0					
ANR	756160	PrimaryExpression	0		756077	1					
ANR	756161	IfStatement	if ( needsbyteswap )		756077	17					
ANR	756162	Condition	needsbyteswap	2961:5:65494:65506	756077	0	True				
ANR	756163	Identifier	needsbyteswap		756077	0					
ANR	756164	ExpressionStatement	version = swap4 ( ptr [ 1 ] )	2962:2:65511:65534	756077	1	True				
ANR	756165	AssignmentExpression	version = swap4 ( ptr [ 1 ] )		756077	0		=			
ANR	756166	Identifier	version		756077	0					
ANR	756167	CallExpression	swap4 ( ptr [ 1 ] )		756077	1					
ANR	756168	Callee	swap4		756077	0					
ANR	756169	Identifier	swap4		756077	0					
ANR	756170	ArgumentList	ptr [ 1 ]		756077	1					
ANR	756171	Argument	ptr [ 1 ]		756077	0					
ANR	756172	ArrayIndexing	ptr [ 1 ]		756077	0					
ANR	756173	Identifier	ptr		756077	0					
ANR	756174	PrimaryExpression	1		756077	1					
ANR	756175	ElseStatement	else		756077	0					
ANR	756176	ExpressionStatement	version = ptr [ 1 ]	2964:2:65544:65560	756077	0	True				
ANR	756177	AssignmentExpression	version = ptr [ 1 ]		756077	0		=			
ANR	756178	Identifier	version		756077	0					
ANR	756179	ArrayIndexing	ptr [ 1 ]		756077	1					
ANR	756180	Identifier	ptr		756077	0					
ANR	756181	PrimaryExpression	1		756077	1					
ANR	756182	IfStatement	if ( version != VERSIONNO )		756077	18					
ANR	756183	Condition	version != VERSIONNO	2965:5:65567:65586	756077	0	True				
ANR	756184	EqualityExpression	version != VERSIONNO		756077	0		!=			
ANR	756185	Identifier	version		756077	0					
ANR	756186	Identifier	VERSIONNO		756077	1					
ANR	756187	CompoundStatement		20:27:397:397	756077	1					
ANR	756188	Statement	file_error	2966:2:65593:65602	756077	0	True				
ANR	756189	Statement	(	2966:12:65603:65603	756077	1	True				
ANR	756190	Statement	ms	2966:13:65604:65605	756077	2	True				
ANR	756191	Statement	","	2966:15:65606:65606	756077	3	True				
ANR	756192	Statement	0	2966:17:65608:65608	756077	4	True				
ANR	756193	Statement	","	2966:18:65609:65609	756077	5	True				
ANR	756194	Statement	"""File %s supports only version %d magic """	2966:20:65611:65651	756077	6	True				
ANR	756195	Statement	"""files. `%s' is version %d"""	2967:6:65659:65685	756077	7	True				
ANR	756196	Statement	","	2967:33:65686:65686	756077	8	True				
ANR	756197	Statement	FILE_VERSION_MAJOR	2967:35:65688:65705	756077	9	True				
ANR	756198	Statement	","	2967:53:65706:65706	756077	10	True				
ANR	756199	Statement	VERSIONNO	2968:6:65714:65722	756077	11	True				
ANR	756200	Statement	","	2968:15:65723:65723	756077	12	True				
ANR	756201	Statement	dbname	2968:17:65725:65730	756077	13	True				
ANR	756202	Statement	","	2968:23:65731:65731	756077	14	True				
ANR	756203	Statement	version	2968:25:65733:65739	756077	15	True				
ANR	756204	Statement	)	2968:32:65740:65740	756077	16	True				
ANR	756205	ExpressionStatement		2968:33:65741:65741	756077	17	True				
ANR	756206	ReturnStatement	return - 1 ;	2969:2:65745:65754	756077	18	True				
ANR	756207	UnaryOperationExpression	- 1		756077	0					
ANR	756208	UnaryOperator	-		756077	0					
ANR	756209	PrimaryExpression	1		756077	1					
ANR	756210	ExpressionStatement	entries = ( uint32_t ) ( map -> len / sizeof ( struct magic ) )	2971:1:65760:65813	756077	19	True				
ANR	756211	AssignmentExpression	entries = ( uint32_t ) ( map -> len / sizeof ( struct magic ) )		756077	0		=			
ANR	756212	Identifier	entries		756077	0					
ANR	756213	CastExpression	( uint32_t ) ( map -> len / sizeof ( struct magic ) )		756077	1					
ANR	756214	CastTarget	uint32_t		756077	0					
ANR	756215	MultiplicativeExpression	map -> len / sizeof ( struct magic )		756077	1		/			
ANR	756216	PtrMemberAccess	map -> len		756077	0					
ANR	756217	Identifier	map		756077	0					
ANR	756218	Identifier	len		756077	1					
ANR	756219	SizeofExpression	sizeof ( struct magic )		756077	1					
ANR	756220	Sizeof	sizeof		756077	0					
ANR	756221	SizeofOperand	struct magic		756077	1					
ANR	756222	IfStatement	if ( ( entries * sizeof ( struct magic ) ) != map -> len )		756077	20					
ANR	756223	Condition	( entries * sizeof ( struct magic ) ) != map -> len	2972:5:65820:65863	756077	0	True				
ANR	756224	EqualityExpression	( entries * sizeof ( struct magic ) ) != map -> len		756077	0		!=			
ANR	756225	MultiplicativeExpression	entries * sizeof ( struct magic )		756077	0		*			
ANR	756226	Identifier	entries		756077	0					
ANR	756227	SizeofExpression	sizeof ( struct magic )		756077	1					
ANR	756228	Sizeof	sizeof		756077	0					
ANR	756229	SizeofOperand	struct magic		756077	1					
ANR	756230	PtrMemberAccess	map -> len		756077	1					
ANR	756231	Identifier	map		756077	0					
ANR	756232	Identifier	len		756077	1					
ANR	756233	CompoundStatement		27:51:674:674	756077	1					
ANR	756234	Statement	file_error	2973:2:65870:65879	756077	0	True				
ANR	756235	Statement	(	2973:12:65880:65880	756077	1	True				
ANR	756236	Statement	ms	2973:13:65881:65882	756077	2	True				
ANR	756237	Statement	","	2973:15:65883:65883	756077	3	True				
ANR	756238	Statement	0	2973:17:65885:65885	756077	4	True				
ANR	756239	Statement	","	2973:18:65886:65886	756077	5	True				
ANR	756240	Statement	"""Size of `%s' %"""	2973:20:65888:65903	756077	6	True				
ANR	756241	Statement	SIZE_T_FORMAT	2973:37:65905:65917	756077	7	True				
ANR	756242	Statement	"""u is not """	2973:51:65919:65929	756077	8	True				
ANR	756243	Statement	"""a multiple of %"""	2974:6:65937:65953	756077	9	True				
ANR	756244	Statement	SIZE_T_FORMAT	2974:24:65955:65967	756077	10	True				
ANR	756245	Statement	"""u"""	2974:38:65969:65971	756077	11	True				
ANR	756246	Statement	","	2974:41:65972:65972	756077	12	True				
ANR	756247	Statement	dbname	2975:6:65980:65985	756077	13	True				
ANR	756248	Statement	","	2975:12:65986:65986	756077	14	True				
ANR	756249	Statement	map	2975:14:65988:65990	756077	15	True				
ANR	756250	Statement	->	2975:17:65991:65992	756077	16	True				
ANR	756251	Statement	len	2975:19:65993:65995	756077	17	True				
ANR	756252	Statement	","	2975:22:65996:65996	756077	18	True				
ANR	756253	Statement	sizeof	2975:24:65998:66003	756077	19	True				
ANR	756254	Statement	(	2975:30:66004:66004	756077	20	True				
ANR	756255	Statement	struct	2975:31:66005:66010	756077	21	True				
ANR	756256	Statement	magic	2975:38:66012:66016	756077	22	True				
ANR	756257	Statement	)	2975:43:66017:66017	756077	23	True				
ANR	756258	Statement	)	2975:44:66018:66018	756077	24	True				
ANR	756259	ExpressionStatement		2975:45:66019:66019	756077	25	True				
ANR	756260	ReturnStatement	return - 1 ;	2976:2:66023:66032	756077	26	True				
ANR	756261	UnaryOperationExpression	- 1		756077	0					
ANR	756262	UnaryOperator	-		756077	0					
ANR	756263	PrimaryExpression	1		756077	1					
ANR	756264	Statement	map	2978:1:66038:66040	756077	21	True				
ANR	756265	Statement	->	2978:4:66041:66042	756077	22	True				
ANR	756266	Statement	magic	2978:6:66043:66047	756077	23	True				
ANR	756267	Statement	[	2978:11:66048:66048	756077	24	True				
ANR	756268	Statement	0	2978:12:66049:66049	756077	25	True				
ANR	756269	Statement	]	2978:13:66050:66050	756077	26	True				
ANR	756270	Statement	=	2978:15:66052:66052	756077	27	True				
ANR	756271	Statement	CAST	2978:17:66054:66057	756077	28	True				
ANR	756272	Statement	(	2978:21:66058:66058	756077	29	True				
ANR	756273	Statement	struct	2978:22:66059:66064	756077	30	True				
ANR	756274	Statement	magic	2978:29:66066:66070	756077	31	True				
ANR	756275	Statement	*	2978:35:66072:66072	756077	32	True				
ANR	756276	Statement	","	2978:36:66073:66073	756077	33	True				
ANR	756277	Statement	map	2978:38:66075:66077	756077	34	True				
ANR	756278	Statement	->	2978:41:66078:66079	756077	35	True				
ANR	756279	Statement	p	2978:43:66080:66080	756077	36	True				
ANR	756280	Statement	)	2978:44:66081:66081	756077	37	True				
ANR	756281	ExpressionStatement	+ 1	2978:46:66083:66086	756077	38	True				
ANR	756282	UnaryOperationExpression	+ 1		756077	0					
ANR	756283	UnaryOperator	+		756077	0					
ANR	756284	PrimaryExpression	1		756077	1					
ANR	756285	ExpressionStatement	nentries = 0	2979:1:66089:66101	756077	39	True				
ANR	756286	AssignmentExpression	nentries = 0		756077	0		=			
ANR	756287	Identifier	nentries		756077	0					
ANR	756288	PrimaryExpression	0		756077	1					
ANR	756289	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		756077	40					
ANR	756290	ForInit	i = 0 ;	2980:6:66109:66114	756077	0	True				
ANR	756291	AssignmentExpression	i = 0		756077	0		=			
ANR	756292	Identifier	i		756077	0					
ANR	756293	PrimaryExpression	0		756077	1					
ANR	756294	Condition	i < MAGIC_SETS	2980:13:66116:66129	756077	1	True				
ANR	756295	RelationalExpression	i < MAGIC_SETS		756077	0		<			
ANR	756296	Identifier	i		756077	0					
ANR	756297	Identifier	MAGIC_SETS		756077	1					
ANR	756298	PostIncDecOperationExpression	i ++	2980:29:66132:66134	756077	2	True				
ANR	756299	Identifier	i		756077	0					
ANR	756300	IncDec	++		756077	1					
ANR	756301	CompoundStatement		35:34:945:945	756077	3					
ANR	756302	IfStatement	if ( needsbyteswap )		756077	0					
ANR	756303	Condition	needsbyteswap	2981:6:66145:66157	756077	0	True				
ANR	756304	Identifier	needsbyteswap		756077	0					
ANR	756305	ExpressionStatement	map -> nmagic [ i ] = swap4 ( ptr [ i + 2 ] )	2982:3:66163:66197	756077	1	True				
ANR	756306	AssignmentExpression	map -> nmagic [ i ] = swap4 ( ptr [ i + 2 ] )		756077	0		=			
ANR	756307	ArrayIndexing	map -> nmagic [ i ]		756077	0					
ANR	756308	PtrMemberAccess	map -> nmagic		756077	0					
ANR	756309	Identifier	map		756077	0					
ANR	756310	Identifier	nmagic		756077	1					
ANR	756311	Identifier	i		756077	1					
ANR	756312	CallExpression	swap4 ( ptr [ i + 2 ] )		756077	1					
ANR	756313	Callee	swap4		756077	0					
ANR	756314	Identifier	swap4		756077	0					
ANR	756315	ArgumentList	ptr [ i + 2 ]		756077	1					
ANR	756316	Argument	ptr [ i + 2 ]		756077	0					
ANR	756317	ArrayIndexing	ptr [ i + 2 ]		756077	0					
ANR	756318	Identifier	ptr		756077	0					
ANR	756319	AdditiveExpression	i + 2		756077	1		+			
ANR	756320	Identifier	i		756077	0					
ANR	756321	PrimaryExpression	2		756077	1					
ANR	756322	ElseStatement	else		756077	0					
ANR	756323	ExpressionStatement	map -> nmagic [ i ] = ptr [ i + 2 ]	2984:3:66209:66236	756077	0	True				
ANR	756324	AssignmentExpression	map -> nmagic [ i ] = ptr [ i + 2 ]		756077	0		=			
ANR	756325	ArrayIndexing	map -> nmagic [ i ]		756077	0					
ANR	756326	PtrMemberAccess	map -> nmagic		756077	0					
ANR	756327	Identifier	map		756077	0					
ANR	756328	Identifier	nmagic		756077	1					
ANR	756329	Identifier	i		756077	1					
ANR	756330	ArrayIndexing	ptr [ i + 2 ]		756077	1					
ANR	756331	Identifier	ptr		756077	0					
ANR	756332	AdditiveExpression	i + 2		756077	1		+			
ANR	756333	Identifier	i		756077	0					
ANR	756334	PrimaryExpression	2		756077	1					
ANR	756335	IfStatement	if ( i != MAGIC_SETS - 1 )		756077	1					
ANR	756336	Condition	i != MAGIC_SETS - 1	2985:6:66244:66262	756077	0	True				
ANR	756337	EqualityExpression	i != MAGIC_SETS - 1		756077	0		!=			
ANR	756338	Identifier	i		756077	0					
ANR	756339	AdditiveExpression	MAGIC_SETS - 1		756077	1		-			
ANR	756340	Identifier	MAGIC_SETS		756077	0					
ANR	756341	PrimaryExpression	1		756077	1					
ANR	756342	ExpressionStatement	map -> magic [ i + 1 ] = map -> magic [ i ] + map -> nmagic [ i ]	2986:3:66268:66318	756077	1	True				
ANR	756343	AssignmentExpression	map -> magic [ i + 1 ] = map -> magic [ i ] + map -> nmagic [ i ]		756077	0		=			
ANR	756344	ArrayIndexing	map -> magic [ i + 1 ]		756077	0					
ANR	756345	PtrMemberAccess	map -> magic		756077	0					
ANR	756346	Identifier	map		756077	0					
ANR	756347	Identifier	magic		756077	1					
ANR	756348	AdditiveExpression	i + 1		756077	1		+			
ANR	756349	Identifier	i		756077	0					
ANR	756350	PrimaryExpression	1		756077	1					
ANR	756351	AdditiveExpression	map -> magic [ i ] + map -> nmagic [ i ]		756077	1		+			
ANR	756352	ArrayIndexing	map -> magic [ i ]		756077	0					
ANR	756353	PtrMemberAccess	map -> magic		756077	0					
ANR	756354	Identifier	map		756077	0					
ANR	756355	Identifier	magic		756077	1					
ANR	756356	Identifier	i		756077	1					
ANR	756357	ArrayIndexing	map -> nmagic [ i ]		756077	1					
ANR	756358	PtrMemberAccess	map -> nmagic		756077	0					
ANR	756359	Identifier	map		756077	0					
ANR	756360	Identifier	nmagic		756077	1					
ANR	756361	Identifier	i		756077	1					
ANR	756362	ExpressionStatement	nentries += map -> nmagic [ i ]	2987:2:66322:66348	756077	2	True				
ANR	756363	AssignmentExpression	nentries += map -> nmagic [ i ]		756077	0		+=			
ANR	756364	Identifier	nentries		756077	0					
ANR	756365	ArrayIndexing	map -> nmagic [ i ]		756077	1					
ANR	756366	PtrMemberAccess	map -> nmagic		756077	0					
ANR	756367	Identifier	map		756077	0					
ANR	756368	Identifier	nmagic		756077	1					
ANR	756369	Identifier	i		756077	1					
ANR	756370	IfStatement	if ( entries != nentries + 1 )		756077	41					
ANR	756371	Condition	entries != nentries + 1	2989:5:66358:66380	756077	0	True				
ANR	756372	EqualityExpression	entries != nentries + 1		756077	0		!=			
ANR	756373	Identifier	entries		756077	0					
ANR	756374	AdditiveExpression	nentries + 1		756077	1		+			
ANR	756375	Identifier	nentries		756077	0					
ANR	756376	PrimaryExpression	1		756077	1					
ANR	756377	CompoundStatement		44:30:1191:1191	756077	1					
ANR	756378	ExpressionStatement	"file_error ( ms , 0 , ""Inconsistent entries in `%s' %u != %u"" , dbname , entries , nentries + 1 )"	2990:2:66387:66482	756077	0	True				
ANR	756379	CallExpression	"file_error ( ms , 0 , ""Inconsistent entries in `%s' %u != %u"" , dbname , entries , nentries + 1 )"		756077	0					
ANR	756380	Callee	file_error		756077	0					
ANR	756381	Identifier	file_error		756077	0					
ANR	756382	ArgumentList	ms		756077	1					
ANR	756383	Argument	ms		756077	0					
ANR	756384	Identifier	ms		756077	0					
ANR	756385	Argument	0		756077	1					
ANR	756386	PrimaryExpression	0		756077	0					
ANR	756387	Argument	"""Inconsistent entries in `%s' %u != %u"""		756077	2					
ANR	756388	PrimaryExpression	"""Inconsistent entries in `%s' %u != %u"""		756077	0					
ANR	756389	Argument	dbname		756077	3					
ANR	756390	Identifier	dbname		756077	0					
ANR	756391	Argument	entries		756077	4					
ANR	756392	Identifier	entries		756077	0					
ANR	756393	Argument	nentries + 1		756077	5					
ANR	756394	AdditiveExpression	nentries + 1		756077	0		+			
ANR	756395	Identifier	nentries		756077	0					
ANR	756396	PrimaryExpression	1		756077	1					
ANR	756397	ReturnStatement	return - 1 ;	2992:2:66486:66495	756077	1	True				
ANR	756398	UnaryOperationExpression	- 1		756077	0					
ANR	756399	UnaryOperator	-		756077	0					
ANR	756400	PrimaryExpression	1		756077	1					
ANR	756401	IfStatement	if ( needsbyteswap )		756077	42					
ANR	756402	Condition	needsbyteswap	2994:5:66505:66517	756077	0	True				
ANR	756403	Identifier	needsbyteswap		756077	0					
ANR	756404	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		756077	1					
ANR	756405	ForInit	i = 0 ;	2995:7:66527:66532	756077	0	True				
ANR	756406	AssignmentExpression	i = 0		756077	0		=			
ANR	756407	Identifier	i		756077	0					
ANR	756408	PrimaryExpression	0		756077	1					
ANR	756409	Condition	i < MAGIC_SETS	2995:14:66534:66547	756077	1	True				
ANR	756410	RelationalExpression	i < MAGIC_SETS		756077	0		<			
ANR	756411	Identifier	i		756077	0					
ANR	756412	Identifier	MAGIC_SETS		756077	1					
ANR	756413	PostIncDecOperationExpression	i ++	2995:30:66550:66552	756077	2	True				
ANR	756414	Identifier	i		756077	0					
ANR	756415	IncDec	++		756077	1					
ANR	756416	ExpressionStatement	"byteswap ( map -> magic [ i ] , map -> nmagic [ i ] )"	2996:3:66558:66597	756077	3	True				
ANR	756417	CallExpression	"byteswap ( map -> magic [ i ] , map -> nmagic [ i ] )"		756077	0					
ANR	756418	Callee	byteswap		756077	0					
ANR	756419	Identifier	byteswap		756077	0					
ANR	756420	ArgumentList	map -> magic [ i ]		756077	1					
ANR	756421	Argument	map -> magic [ i ]		756077	0					
ANR	756422	ArrayIndexing	map -> magic [ i ]		756077	0					
ANR	756423	PtrMemberAccess	map -> magic		756077	0					
ANR	756424	Identifier	map		756077	0					
ANR	756425	Identifier	magic		756077	1					
ANR	756426	Identifier	i		756077	1					
ANR	756427	Argument	map -> nmagic [ i ]		756077	1					
ANR	756428	ArrayIndexing	map -> nmagic [ i ]		756077	0					
ANR	756429	PtrMemberAccess	map -> nmagic		756077	0					
ANR	756430	Identifier	map		756077	0					
ANR	756431	Identifier	nmagic		756077	1					
ANR	756432	Identifier	i		756077	1					
ANR	756433	ReturnStatement	return 0 ;	2997:1:66600:66608	756077	43	True				
ANR	756434	PrimaryExpression	0		756077	0					
ANR	756435	ReturnType	int		756077	1					
ANR	756436	Identifier	check_buffer		756077	2					
ANR	756437	ParameterList	"struct magic_set * ms , struct magic_map * map , const char * dbname"		756077	3					
ANR	756438	Parameter	struct magic_set * ms	2945:13:65126:65145	756077	0	True				
ANR	756439	ParameterType	struct magic_set *		756077	0					
ANR	756440	Identifier	ms		756077	1					
ANR	756441	Parameter	struct magic_map * map	2945:35:65148:65168	756077	1	True				
ANR	756442	ParameterType	struct magic_map *		756077	0					
ANR	756443	Identifier	map		756077	1					
ANR	756444	Parameter	const char * dbname	2945:58:65171:65188	756077	2	True				
ANR	756445	ParameterType	const char *		756077	0					
ANR	756446	Identifier	dbname		756077	1					
ANR	756447	CFGEntryNode	ENTRY		756077		True				
ANR	756448	CFGExitNode	EXIT		756077		True				
ANR	756449	Symbol	VERSIONNO		756077						
ANR	756450	Symbol	nentries		756077						
ANR	756451	Symbol	MAGIC_SETS		756077						
ANR	756452	Symbol	ms		756077						
ANR	756453	Symbol	* map		756077						
ANR	756454	Symbol	* map -> magic		756077						
ANR	756455	Symbol	map -> len		756077						
ANR	756456	Symbol	i		756077						
ANR	756457	Symbol	version		756077						
ANR	756458	Symbol	swap4		756077						
ANR	756459	Symbol	ptr		756077						
ANR	756460	Symbol	needsbyteswap		756077						
ANR	756461	Symbol	* * map		756077						
ANR	756462	Symbol	entries		756077						
ANR	756463	Symbol	* i		756077						
ANR	756464	Symbol	dbname		756077						
ANR	756465	Symbol	* ptr		756077						
ANR	756466	Symbol	map -> magic		756077						
ANR	756467	Symbol	map -> nmagic		756077						
ANR	756468	Symbol	MAGICNO		756077						
ANR	756469	Symbol	* map -> nmagic		756077						
ANR	756470	Symbol	map		756077						
ANR	756471	Function	apprentice_compile	3003:8:66654:67865							
ANR	756472	FunctionDef	"apprentice_compile (struct magic_set * ms , struct magic_map * map , const char * fn)"		756471	0					
ANR	756473	CompoundStatement		3005:0:66738:67865	756471	0					
ANR	756474	Statement	static	3006:1:66741:66746	756471	0	True				
ANR	756475	IdentifierDeclStatement	const size_t nm = sizeof ( * map -> nmagic ) * MAGIC_SETS ;	3006:8:66748:66799	756471	1	True				
ANR	756476	IdentifierDecl	nm = sizeof ( * map -> nmagic ) * MAGIC_SETS		756471	0					
ANR	756477	IdentifierDeclType	const size_t		756471	0					
ANR	756478	Identifier	nm		756471	1					
ANR	756479	AssignmentExpression	nm = sizeof ( * map -> nmagic ) * MAGIC_SETS		756471	2		=			
ANR	756480	Identifier	nm		756471	0					
ANR	756481	MultiplicativeExpression	sizeof ( * map -> nmagic ) * MAGIC_SETS		756471	1		*			
ANR	756482	SizeofExpression	sizeof ( * map -> nmagic )		756471	0					
ANR	756483	Sizeof	sizeof		756471	0					
ANR	756484	UnaryOperationExpression	* map -> nmagic		756471	1					
ANR	756485	UnaryOperator	*		756471	0					
ANR	756486	PtrMemberAccess	map -> nmagic		756471	1					
ANR	756487	Identifier	map		756471	0					
ANR	756488	Identifier	nmagic		756471	1					
ANR	756489	Identifier	MAGIC_SETS		756471	1					
ANR	756490	Statement	static	3007:1:66802:66807	756471	2	True				
ANR	756491	IdentifierDeclStatement	const size_t m = sizeof ( * * map -> magic ) ;	3007:8:66809:66846	756471	3	True				
ANR	756492	IdentifierDecl	m = sizeof ( * * map -> magic )		756471	0					
ANR	756493	IdentifierDeclType	const size_t		756471	0					
ANR	756494	Identifier	m		756471	1					
ANR	756495	AssignmentExpression	m = sizeof ( * * map -> magic )		756471	2		=			
ANR	756496	Identifier	m		756471	0					
ANR	756497	SizeofExpression	sizeof ( * * map -> magic )		756471	1					
ANR	756498	Sizeof	sizeof		756471	0					
ANR	756499	UnaryOperationExpression	* * map -> magic		756471	1					
ANR	756500	UnaryOperator	*		756471	0					
ANR	756501	UnaryOperationExpression	* map -> magic		756471	1					
ANR	756502	UnaryOperator	*		756471	0					
ANR	756503	PtrMemberAccess	map -> magic		756471	1					
ANR	756504	Identifier	map		756471	0					
ANR	756505	Identifier	magic		756471	1					
ANR	756506	IdentifierDeclStatement	int fd = - 1 ;	3008:1:66849:66860	756471	4	True				
ANR	756507	IdentifierDecl	fd = - 1		756471	0					
ANR	756508	IdentifierDeclType	int		756471	0					
ANR	756509	Identifier	fd		756471	1					
ANR	756510	AssignmentExpression	fd = - 1		756471	2		=			
ANR	756511	Identifier	fd		756471	0					
ANR	756512	UnaryOperationExpression	- 1		756471	1					
ANR	756513	UnaryOperator	-		756471	0					
ANR	756514	PrimaryExpression	1		756471	1					
ANR	756515	IdentifierDeclStatement	size_t len ;	3009:1:66863:66873	756471	5	True				
ANR	756516	IdentifierDecl	len		756471	0					
ANR	756517	IdentifierDeclType	size_t		756471	0					
ANR	756518	Identifier	len		756471	1					
ANR	756519	IdentifierDeclStatement	char * dbname ;	3010:1:66876:66888	756471	6	True				
ANR	756520	IdentifierDecl	* dbname		756471	0					
ANR	756521	IdentifierDeclType	char *		756471	0					
ANR	756522	Identifier	dbname		756471	1					
ANR	756523	IdentifierDeclStatement	int rv = - 1 ;	3011:1:66891:66902	756471	7	True				
ANR	756524	IdentifierDecl	rv = - 1		756471	0					
ANR	756525	IdentifierDeclType	int		756471	0					
ANR	756526	Identifier	rv		756471	1					
ANR	756527	AssignmentExpression	rv = - 1		756471	2		=			
ANR	756528	Identifier	rv		756471	0					
ANR	756529	UnaryOperationExpression	- 1		756471	1					
ANR	756530	UnaryOperator	-		756471	0					
ANR	756531	PrimaryExpression	1		756471	1					
ANR	756532	IdentifierDeclStatement	uint32_t i ;	3012:1:66905:66915	756471	8	True				
ANR	756533	IdentifierDecl	i		756471	0					
ANR	756534	IdentifierDeclType	uint32_t		756471	0					
ANR	756535	Identifier	i		756471	1					
ANR	756536	ClassDefStatement	union { struct magic m ; uint32_t h [ 2 + MAGIC_SETS ] ; } hdr ;	3013:1:66918:66980	756471	9	True				
ANR	756537	IdentifierDecl	hdr		756471	0					
ANR	756538	IdentifierDeclType			756471	0					
ANR	756539	Identifier	hdr		756471	1					
ANR	756540	IdentifierDeclStatement	php_stream * stream ;	3017:1:66983:67001	756471	10	True				
ANR	756541	IdentifierDecl	* stream		756471	0					
ANR	756542	IdentifierDeclType	php_stream *		756471	0					
ANR	756543	Identifier	stream		756471	1					
ANR	756544	ExpressionStatement	"dbname = mkdbname ( ms , fn , 0 )"	3020:1:67006:67034	756471	11	True				
ANR	756545	AssignmentExpression	"dbname = mkdbname ( ms , fn , 0 )"		756471	0		=			
ANR	756546	Identifier	dbname		756471	0					
ANR	756547	CallExpression	"mkdbname ( ms , fn , 0 )"		756471	1					
ANR	756548	Callee	mkdbname		756471	0					
ANR	756549	Identifier	mkdbname		756471	0					
ANR	756550	ArgumentList	ms		756471	1					
ANR	756551	Argument	ms		756471	0					
ANR	756552	Identifier	ms		756471	0					
ANR	756553	Argument	fn		756471	1					
ANR	756554	Identifier	fn		756471	0					
ANR	756555	Argument	0		756471	2					
ANR	756556	PrimaryExpression	0		756471	0					
ANR	756557	IfStatement	if ( dbname == NULL )		756471	12					
ANR	756558	Condition	dbname == NULL	3022:5:67042:67055	756471	0	True				
ANR	756559	EqualityExpression	dbname == NULL		756471	0		==			
ANR	756560	Identifier	dbname		756471	0					
ANR	756561	Identifier	NULL		756471	1					
ANR	756562	GotoStatement	goto out ;	3023:2:67060:67068	756471	1	True				
ANR	756563	Identifier	out		756471	0					
ANR	756564	ExpressionStatement	"stream = php_stream_open_wrapper ( ( char * ) fn , ""wb+"" , REPORT_ERRORS , NULL )"	3026:1:67120:67192	756471	13	True				
ANR	756565	AssignmentExpression	"stream = php_stream_open_wrapper ( ( char * ) fn , ""wb+"" , REPORT_ERRORS , NULL )"		756471	0		=			
ANR	756566	Identifier	stream		756471	0					
ANR	756567	CallExpression	"php_stream_open_wrapper ( ( char * ) fn , ""wb+"" , REPORT_ERRORS , NULL )"		756471	1					
ANR	756568	Callee	php_stream_open_wrapper		756471	0					
ANR	756569	Identifier	php_stream_open_wrapper		756471	0					
ANR	756570	ArgumentList	( char * ) fn		756471	1					
ANR	756571	Argument	( char * ) fn		756471	0					
ANR	756572	CastExpression	( char * ) fn		756471	0					
ANR	756573	CastTarget	char *		756471	0					
ANR	756574	Identifier	fn		756471	1					
ANR	756575	Argument	"""wb+"""		756471	1					
ANR	756576	PrimaryExpression	"""wb+"""		756471	0					
ANR	756577	Argument	REPORT_ERRORS		756471	2					
ANR	756578	Identifier	REPORT_ERRORS		756471	0					
ANR	756579	Argument	NULL		756471	3					
ANR	756580	Identifier	NULL		756471	0					
ANR	756581	IfStatement	if ( ! stream )		756471	14					
ANR	756582	Condition	! stream	3028:5:67200:67206	756471	0	True				
ANR	756583	UnaryOperationExpression	! stream		756471	0					
ANR	756584	UnaryOperator	!		756471	0					
ANR	756585	Identifier	stream		756471	1					
ANR	756586	CompoundStatement		24:14:470:470	756471	1					
ANR	756587	ExpressionStatement	"file_error ( ms , errno , ""cannot open `%s'"" , dbname )"	3029:2:67213:67262	756471	0	True				
ANR	756588	CallExpression	"file_error ( ms , errno , ""cannot open `%s'"" , dbname )"		756471	0					
ANR	756589	Callee	file_error		756471	0					
ANR	756590	Identifier	file_error		756471	0					
ANR	756591	ArgumentList	ms		756471	1					
ANR	756592	Argument	ms		756471	0					
ANR	756593	Identifier	ms		756471	0					
ANR	756594	Argument	errno		756471	1					
ANR	756595	Identifier	errno		756471	0					
ANR	756596	Argument	"""cannot open `%s'"""		756471	2					
ANR	756597	PrimaryExpression	"""cannot open `%s'"""		756471	0					
ANR	756598	Argument	dbname		756471	3					
ANR	756599	Identifier	dbname		756471	0					
ANR	756600	GotoStatement	goto out ;	3030:2:67266:67274	756471	1	True				
ANR	756601	Identifier	out		756471	0					
ANR	756602	ExpressionStatement	"memset ( & hdr , 0 , sizeof ( hdr ) )"	3032:1:67280:67308	756471	15	True				
ANR	756603	CallExpression	"memset ( & hdr , 0 , sizeof ( hdr ) )"		756471	0					
ANR	756604	Callee	memset		756471	0					
ANR	756605	Identifier	memset		756471	0					
ANR	756606	ArgumentList	& hdr		756471	1					
ANR	756607	Argument	& hdr		756471	0					
ANR	756608	UnaryOperationExpression	& hdr		756471	0					
ANR	756609	UnaryOperator	&		756471	0					
ANR	756610	Identifier	hdr		756471	1					
ANR	756611	Argument	0		756471	1					
ANR	756612	PrimaryExpression	0		756471	0					
ANR	756613	Argument	sizeof ( hdr )		756471	2					
ANR	756614	SizeofExpression	sizeof ( hdr )		756471	0					
ANR	756615	Sizeof	sizeof		756471	0					
ANR	756616	SizeofOperand	hdr		756471	1					
ANR	756617	ExpressionStatement	hdr . h [ 0 ] = MAGICNO	3033:1:67311:67329	756471	16	True				
ANR	756618	AssignmentExpression	hdr . h [ 0 ] = MAGICNO		756471	0		=			
ANR	756619	ArrayIndexing	hdr . h [ 0 ]		756471	0					
ANR	756620	MemberAccess	hdr . h		756471	0					
ANR	756621	Identifier	hdr		756471	0					
ANR	756622	Identifier	h		756471	1					
ANR	756623	PrimaryExpression	0		756471	1					
ANR	756624	Identifier	MAGICNO		756471	1					
ANR	756625	ExpressionStatement	hdr . h [ 1 ] = VERSIONNO	3034:1:67332:67352	756471	17	True				
ANR	756626	AssignmentExpression	hdr . h [ 1 ] = VERSIONNO		756471	0		=			
ANR	756627	ArrayIndexing	hdr . h [ 1 ]		756471	0					
ANR	756628	MemberAccess	hdr . h		756471	0					
ANR	756629	Identifier	hdr		756471	0					
ANR	756630	Identifier	h		756471	1					
ANR	756631	PrimaryExpression	1		756471	1					
ANR	756632	Identifier	VERSIONNO		756471	1					
ANR	756633	ExpressionStatement	"memcpy ( hdr . h + 2 , map -> nmagic , nm )"	3035:1:67355:67389	756471	18	True				
ANR	756634	CallExpression	"memcpy ( hdr . h + 2 , map -> nmagic , nm )"		756471	0					
ANR	756635	Callee	memcpy		756471	0					
ANR	756636	Identifier	memcpy		756471	0					
ANR	756637	ArgumentList	hdr . h + 2		756471	1					
ANR	756638	Argument	hdr . h + 2		756471	0					
ANR	756639	AdditiveExpression	hdr . h + 2		756471	0		+			
ANR	756640	MemberAccess	hdr . h		756471	0					
ANR	756641	Identifier	hdr		756471	0					
ANR	756642	Identifier	h		756471	1					
ANR	756643	PrimaryExpression	2		756471	1					
ANR	756644	Argument	map -> nmagic		756471	1					
ANR	756645	PtrMemberAccess	map -> nmagic		756471	0					
ANR	756646	Identifier	map		756471	0					
ANR	756647	Identifier	nmagic		756471	1					
ANR	756648	Argument	nm		756471	2					
ANR	756649	Identifier	nm		756471	0					
ANR	756650	IfStatement	"if ( php_stream_write ( stream , ( const char * ) & hdr , sizeof ( hdr ) ) != ( ssize_t ) sizeof ( hdr ) )"		756471	19					
ANR	756651	Condition	"php_stream_write ( stream , ( const char * ) & hdr , sizeof ( hdr ) ) != ( ssize_t ) sizeof ( hdr )"	3037:5:67397:67476	756471	0	True				
ANR	756652	EqualityExpression	"php_stream_write ( stream , ( const char * ) & hdr , sizeof ( hdr ) ) != ( ssize_t ) sizeof ( hdr )"		756471	0		!=			
ANR	756653	CallExpression	"php_stream_write ( stream , ( const char * ) & hdr , sizeof ( hdr ) )"		756471	0					
ANR	756654	Callee	php_stream_write		756471	0					
ANR	756655	Identifier	php_stream_write		756471	0					
ANR	756656	ArgumentList	stream		756471	1					
ANR	756657	Argument	stream		756471	0					
ANR	756658	Identifier	stream		756471	0					
ANR	756659	Argument	( const char * ) & hdr		756471	1					
ANR	756660	CastExpression	( const char * ) & hdr		756471	0					
ANR	756661	CastTarget	const char *		756471	0					
ANR	756662	UnaryOperationExpression	& hdr		756471	1					
ANR	756663	UnaryOperator	&		756471	0					
ANR	756664	Identifier	hdr		756471	1					
ANR	756665	Argument	sizeof ( hdr )		756471	2					
ANR	756666	SizeofExpression	sizeof ( hdr )		756471	0					
ANR	756667	Sizeof	sizeof		756471	0					
ANR	756668	SizeofOperand	hdr		756471	1					
ANR	756669	CastExpression	( ssize_t ) sizeof ( hdr )		756471	1					
ANR	756670	CastTarget	ssize_t		756471	0					
ANR	756671	SizeofExpression	sizeof ( hdr )		756471	1					
ANR	756672	Sizeof	sizeof		756471	0					
ANR	756673	SizeofOperand	hdr		756471	1					
ANR	756674	CompoundStatement		33:87:740:740	756471	1					
ANR	756675	ExpressionStatement	"file_error ( ms , errno , ""error writing `%s'"" , dbname )"	3038:2:67483:67534	756471	0	True				
ANR	756676	CallExpression	"file_error ( ms , errno , ""error writing `%s'"" , dbname )"		756471	0					
ANR	756677	Callee	file_error		756471	0					
ANR	756678	Identifier	file_error		756471	0					
ANR	756679	ArgumentList	ms		756471	1					
ANR	756680	Argument	ms		756471	0					
ANR	756681	Identifier	ms		756471	0					
ANR	756682	Argument	errno		756471	1					
ANR	756683	Identifier	errno		756471	0					
ANR	756684	Argument	"""error writing `%s'"""		756471	2					
ANR	756685	PrimaryExpression	"""error writing `%s'"""		756471	0					
ANR	756686	Argument	dbname		756471	3					
ANR	756687	Identifier	dbname		756471	0					
ANR	756688	GotoStatement	goto out ;	3039:2:67538:67546	756471	1	True				
ANR	756689	Identifier	out		756471	0					
ANR	756690	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		756471	20					
ANR	756691	ForInit	i = 0 ;	3042:6:67558:67563	756471	0	True				
ANR	756692	AssignmentExpression	i = 0		756471	0		=			
ANR	756693	Identifier	i		756471	0					
ANR	756694	PrimaryExpression	0		756471	1					
ANR	756695	Condition	i < MAGIC_SETS	3042:13:67565:67578	756471	1	True				
ANR	756696	RelationalExpression	i < MAGIC_SETS		756471	0		<			
ANR	756697	Identifier	i		756471	0					
ANR	756698	Identifier	MAGIC_SETS		756471	1					
ANR	756699	PostIncDecOperationExpression	i ++	3042:29:67581:67583	756471	2	True				
ANR	756700	Identifier	i		756471	0					
ANR	756701	IncDec	++		756471	1					
ANR	756702	CompoundStatement		38:34:847:847	756471	3					
ANR	756703	ExpressionStatement	len = m * map -> nmagic [ i ]	3043:2:67590:67614	756471	0	True				
ANR	756704	AssignmentExpression	len = m * map -> nmagic [ i ]		756471	0		=			
ANR	756705	Identifier	len		756471	0					
ANR	756706	MultiplicativeExpression	m * map -> nmagic [ i ]		756471	1		*			
ANR	756707	Identifier	m		756471	0					
ANR	756708	ArrayIndexing	map -> nmagic [ i ]		756471	1					
ANR	756709	PtrMemberAccess	map -> nmagic		756471	0					
ANR	756710	Identifier	map		756471	0					
ANR	756711	Identifier	nmagic		756471	1					
ANR	756712	Identifier	i		756471	1					
ANR	756713	IfStatement	"if ( php_stream_write ( stream , ( const char * ) map -> magic [ i ] , len ) != ( ssize_t ) len )"		756471	1					
ANR	756714	Condition	"php_stream_write ( stream , ( const char * ) map -> magic [ i ] , len ) != ( ssize_t ) len"	3044:6:67622:67695	756471	0	True				
ANR	756715	EqualityExpression	"php_stream_write ( stream , ( const char * ) map -> magic [ i ] , len ) != ( ssize_t ) len"		756471	0		!=			
ANR	756716	CallExpression	"php_stream_write ( stream , ( const char * ) map -> magic [ i ] , len )"		756471	0					
ANR	756717	Callee	php_stream_write		756471	0					
ANR	756718	Identifier	php_stream_write		756471	0					
ANR	756719	ArgumentList	stream		756471	1					
ANR	756720	Argument	stream		756471	0					
ANR	756721	Identifier	stream		756471	0					
ANR	756722	Argument	( const char * ) map -> magic [ i ]		756471	1					
ANR	756723	CastExpression	( const char * ) map -> magic [ i ]		756471	0					
ANR	756724	CastTarget	const char *		756471	0					
ANR	756725	ArrayIndexing	map -> magic [ i ]		756471	1					
ANR	756726	PtrMemberAccess	map -> magic		756471	0					
ANR	756727	Identifier	map		756471	0					
ANR	756728	Identifier	magic		756471	1					
ANR	756729	Identifier	i		756471	1					
ANR	756730	Argument	len		756471	2					
ANR	756731	Identifier	len		756471	0					
ANR	756732	CastExpression	( ssize_t ) len		756471	1					
ANR	756733	CastTarget	ssize_t		756471	0					
ANR	756734	Identifier	len		756471	1					
ANR	756735	CompoundStatement		40:82:959:959	756471	1					
ANR	756736	ExpressionStatement	"file_error ( ms , errno , ""error writing `%s'"" , dbname )"	3045:3:67703:67754	756471	0	True				
ANR	756737	CallExpression	"file_error ( ms , errno , ""error writing `%s'"" , dbname )"		756471	0					
ANR	756738	Callee	file_error		756471	0					
ANR	756739	Identifier	file_error		756471	0					
ANR	756740	ArgumentList	ms		756471	1					
ANR	756741	Argument	ms		756471	0					
ANR	756742	Identifier	ms		756471	0					
ANR	756743	Argument	errno		756471	1					
ANR	756744	Identifier	errno		756471	0					
ANR	756745	Argument	"""error writing `%s'"""		756471	2					
ANR	756746	PrimaryExpression	"""error writing `%s'"""		756471	0					
ANR	756747	Argument	dbname		756471	3					
ANR	756748	Identifier	dbname		756471	0					
ANR	756749	GotoStatement	goto out ;	3046:3:67759:67767	756471	1	True				
ANR	756750	Identifier	out		756471	0					
ANR	756751	IfStatement	if ( stream )		756471	21					
ANR	756752	Condition	stream	3050:5:67782:67787	756471	0	True				
ANR	756753	Identifier	stream		756471	0					
ANR	756754	CompoundStatement		46:13:1051:1051	756471	1					
ANR	756755	ExpressionStatement	php_stream_close ( stream )	3051:2:67794:67818	756471	0	True				
ANR	756756	CallExpression	php_stream_close ( stream )		756471	0					
ANR	756757	Callee	php_stream_close		756471	0					
ANR	756758	Identifier	php_stream_close		756471	0					
ANR	756759	ArgumentList	stream		756471	1					
ANR	756760	Argument	stream		756471	0					
ANR	756761	Identifier	stream		756471	0					
ANR	756762	ExpressionStatement	rv = 0	3053:1:67824:67830	756471	22	True				
ANR	756763	AssignmentExpression	rv = 0		756471	0		=			
ANR	756764	Identifier	rv		756471	0					
ANR	756765	PrimaryExpression	0		756471	1					
ANR	756766	Label	out :	3054:0:67832:67835	756471	23	True				
ANR	756767	Identifier	out		756471	0					
ANR	756768	ExpressionStatement	efree ( dbname )	3055:1:67838:67851	756471	24	True				
ANR	756769	CallExpression	efree ( dbname )		756471	0					
ANR	756770	Callee	efree		756471	0					
ANR	756771	Identifier	efree		756471	0					
ANR	756772	ArgumentList	dbname		756471	1					
ANR	756773	Argument	dbname		756471	0					
ANR	756774	Identifier	dbname		756471	0					
ANR	756775	ReturnStatement	return rv ;	3056:1:67854:67863	756471	25	True				
ANR	756776	Identifier	rv		756471	0					
ANR	756777	ReturnType	int		756471	1					
ANR	756778	Identifier	apprentice_compile		756471	2					
ANR	756779	ParameterList	"struct magic_set * ms , struct magic_map * map , const char * fn"		756471	3					
ANR	756780	Parameter	struct magic_set * ms	3004:19:66677:66696	756471	0	True				
ANR	756781	ParameterType	struct magic_set *		756471	0					
ANR	756782	Identifier	ms		756471	1					
ANR	756783	Parameter	struct magic_map * map	3004:41:66699:66719	756471	1	True				
ANR	756784	ParameterType	struct magic_map *		756471	0					
ANR	756785	Identifier	map		756471	1					
ANR	756786	Parameter	const char * fn	3004:64:66722:66735	756471	2	True				
ANR	756787	ParameterType	const char *		756471	0					
ANR	756788	Identifier	fn		756471	1					
ANR	756789	CFGEntryNode	ENTRY		756471		True				
ANR	756790	CFGExitNode	EXIT		756471		True				
ANR	756791	Symbol	VERSIONNO		756471						
ANR	756792	Symbol	MAGIC_SETS		756471						
ANR	756793	Symbol	rv		756471						
ANR	756794	Symbol	* map		756471						
ANR	756795	Symbol	fn		756471						
ANR	756796	Symbol	hdr . h		756471						
ANR	756797	Symbol	php_stream_open_wrapper		756471						
ANR	756798	Symbol	* * map -> magic		756471						
ANR	756799	Symbol	len		756471						
ANR	756800	Symbol	stream		756471						
ANR	756801	Symbol	map -> magic		756471						
ANR	756802	Symbol	map -> nmagic		756471						
ANR	756803	Symbol	* * * map		756471						
ANR	756804	Symbol	& hdr		756471						
ANR	756805	Symbol	* map -> nmagic		756471						
ANR	756806	Symbol	map		756471						
ANR	756807	Symbol	* hdr		756471						
ANR	756808	Symbol	errno		756471						
ANR	756809	Symbol	NULL		756471						
ANR	756810	Symbol	ms		756471						
ANR	756811	Symbol	* map -> magic		756471						
ANR	756812	Symbol	i		756471						
ANR	756813	Symbol	m		756471						
ANR	756814	Symbol	* * map		756471						
ANR	756815	Symbol	mkdbname		756471						
ANR	756816	Symbol	php_stream_write		756471						
ANR	756817	Symbol	* i		756471						
ANR	756818	Symbol	dbname		756471						
ANR	756819	Symbol	REPORT_ERRORS		756471						
ANR	756820	Symbol	* hdr . h		756471						
ANR	756821	Symbol	hdr		756471						
ANR	756822	Symbol	MAGICNO		756471						
ANR	756823	Symbol	fd		756471						
ANR	756824	Symbol	nm		756471						
ANR	756825	DeclStmt									
ANR	756826	Decl							const char	const char [ ]	ext
ANR	756827	Function	mkdbname	3063:8:67935:68858							
ANR	756828	FunctionDef	"mkdbname (struct magic_set * ms , const char * fn , int strip)"		756827	0					
ANR	756829	CompoundStatement		3065:0:68000:68858	756827	0					
ANR	756830	IdentifierDeclStatement	"const char * p , * q ;"	3066:1:68003:68020	756827	0	True				
ANR	756831	IdentifierDecl	* p		756827	0					
ANR	756832	IdentifierDeclType	const char *		756827	0					
ANR	756833	Identifier	p		756827	1					
ANR	756834	IdentifierDecl	* q		756827	1					
ANR	756835	IdentifierDeclType	const char *		756827	0					
ANR	756836	Identifier	q		756827	1					
ANR	756837	IdentifierDeclStatement	char * buf ;	3067:1:68023:68032	756827	1	True				
ANR	756838	IdentifierDecl	* buf		756827	0					
ANR	756839	IdentifierDeclType	char *		756827	0					
ANR	756840	Identifier	buf		756827	1					
ANR	756841	IfStatement	if ( strip )		756827	2					
ANR	756842	Condition	strip	3069:5:68040:68044	756827	0	True				
ANR	756843	Identifier	strip		756827	0					
ANR	756844	CompoundStatement		5:12:46:46	756827	1					
ANR	756845	IfStatement	"if ( ( p = strrchr ( fn , '/' ) ) != NULL )"		756827	0					
ANR	756846	Condition	"( p = strrchr ( fn , '/' ) ) != NULL"	3070:6:68055:68084	756827	0	True				
ANR	756847	EqualityExpression	"( p = strrchr ( fn , '/' ) ) != NULL"		756827	0		!=			
ANR	756848	AssignmentExpression	"p = strrchr ( fn , '/' )"		756827	0		=			
ANR	756849	Identifier	p		756827	0					
ANR	756850	CallExpression	"strrchr ( fn , '/' )"		756827	1					
ANR	756851	Callee	strrchr		756827	0					
ANR	756852	Identifier	strrchr		756827	0					
ANR	756853	ArgumentList	fn		756827	1					
ANR	756854	Argument	fn		756827	0					
ANR	756855	Identifier	fn		756827	0					
ANR	756856	Argument	'/'		756827	1					
ANR	756857	PrimaryExpression	'/'		756827	0					
ANR	756858	Identifier	NULL		756827	1					
ANR	756859	ExpressionStatement	fn = ++ p	3071:3:68090:68098	756827	1	True				
ANR	756860	AssignmentExpression	fn = ++ p		756827	0		=			
ANR	756861	Identifier	fn		756827	0					
ANR	756862	UnaryExpression	++ p		756827	1					
ANR	756863	IncDec	++		756827	0					
ANR	756864	Identifier	p		756827	1					
ANR	756865	ForStatement	for ( q = fn ; * q ; q ++ )		756827	3					
ANR	756866	ForInit	q = fn ;	3074:6:68110:68116	756827	0	True				
ANR	756867	AssignmentExpression	q = fn		756827	0		=			
ANR	756868	Identifier	q		756827	0					
ANR	756869	Identifier	fn		756827	1					
ANR	756870	Condition	* q	3074:14:68118:68119	756827	1	True				
ANR	756871	UnaryOperationExpression	* q		756827	0					
ANR	756872	UnaryOperator	*		756827	0					
ANR	756873	Identifier	q		756827	1					
ANR	756874	PostIncDecOperationExpression	q ++	3074:18:68122:68124	756827	2	True				
ANR	756875	Identifier	q		756827	0					
ANR	756876	IncDec	++		756827	1					
ANR	756877	ContinueStatement	continue ;	3075:2:68129:68137	756827	3	True				
ANR	756878	ForStatement	"for ( p = ext + sizeof ( ext ) - 1 ; p >= ext && q >= fn ; p -- , q -- )"		756827	4					
ANR	756879	ForInit	p = ext + sizeof ( ext ) - 1 ;	3077:6:68166:68191	756827	0	True				
ANR	756880	AssignmentExpression	p = ext + sizeof ( ext ) - 1		756827	0		=			
ANR	756881	Identifier	p		756827	0					
ANR	756882	AdditiveExpression	ext + sizeof ( ext ) - 1		756827	1		+			
ANR	756883	Identifier	ext		756827	0					
ANR	756884	AdditiveExpression	sizeof ( ext ) - 1		756827	1		-			
ANR	756885	SizeofExpression	sizeof ( ext )		756827	0					
ANR	756886	Sizeof	sizeof		756827	0					
ANR	756887	SizeofOperand	ext		756827	1					
ANR	756888	PrimaryExpression	1		756827	1					
ANR	756889	Condition	p >= ext && q >= fn	3077:33:68193:68211	756827	1	True				
ANR	756890	AndExpression	p >= ext && q >= fn		756827	0		&&			
ANR	756891	RelationalExpression	p >= ext		756827	0		>=			
ANR	756892	Identifier	p		756827	0					
ANR	756893	Identifier	ext		756827	1					
ANR	756894	RelationalExpression	q >= fn		756827	1		>=			
ANR	756895	Identifier	q		756827	0					
ANR	756896	Identifier	fn		756827	1					
ANR	756897	Expression	"p -- , q --"	3077:54:68214:68221	756827	2	True				
ANR	756898	PostIncDecOperationExpression	p --		756827	0					
ANR	756899	Identifier	p		756827	0					
ANR	756900	IncDec	--		756827	1					
ANR	756901	PostIncDecOperationExpression	q --		756827	1					
ANR	756902	Identifier	q		756827	0					
ANR	756903	IncDec	--		756827	1					
ANR	756904	IfStatement	if ( * p != * q )		756827	3					
ANR	756905	Condition	* p != * q	3078:6:68230:68237	756827	0	True				
ANR	756906	EqualityExpression	* p != * q		756827	0		!=			
ANR	756907	UnaryOperationExpression	* p		756827	0					
ANR	756908	UnaryOperator	*		756827	0					
ANR	756909	Identifier	p		756827	1					
ANR	756910	UnaryOperationExpression	* q		756827	1					
ANR	756911	UnaryOperator	*		756827	0					
ANR	756912	Identifier	q		756827	1					
ANR	756913	BreakStatement	break ;	3079:3:68243:68248	756827	1	True				
ANR	756914	IfStatement	if ( p >= ext )		756827	5					
ANR	756915	Condition	p >= ext	3082:5:68292:68299	756827	0	True				
ANR	756916	RelationalExpression	p >= ext		756827	0		>=			
ANR	756917	Identifier	p		756827	0					
ANR	756918	Identifier	ext		756827	1					
ANR	756919	WhileStatement	while ( * q )		756827	1					
ANR	756920	Condition	* q	3083:9:68311:68312	756827	0	True				
ANR	756921	UnaryOperationExpression	* q		756827	0					
ANR	756922	UnaryOperator	*		756827	0					
ANR	756923	Identifier	q		756827	1					
ANR	756924	ExpressionStatement	q ++	3084:3:68318:68321	756827	1	True				
ANR	756925	PostIncDecOperationExpression	q ++		756827	0					
ANR	756926	Identifier	q		756827	0					
ANR	756927	IncDec	++		756827	1					
ANR	756928	ExpressionStatement	q ++	3086:1:68325:68328	756827	6	True				
ANR	756929	PostIncDecOperationExpression	q ++		756827	0					
ANR	756930	Identifier	q		756827	0					
ANR	756931	IncDec	++		756827	1					
ANR	756932	IfStatement	if ( ms -> flags & MAGIC_MIME )		756827	7					
ANR	756933	Condition	ms -> flags & MAGIC_MIME	3088:5:68391:68412	756827	0	True				
ANR	756934	BitAndExpression	ms -> flags & MAGIC_MIME		756827	0		&			
ANR	756935	PtrMemberAccess	ms -> flags		756827	0					
ANR	756936	Identifier	ms		756827	0					
ANR	756937	Identifier	flags		756827	1					
ANR	756938	Identifier	MAGIC_MIME		756827	1					
ANR	756939	CompoundStatement		24:29:414:414	756827	1					
ANR	756940	ExpressionStatement	"spprintf ( & buf , MAXPATHLEN , ""%.*s.mime%s"" , ( int ) ( q - fn ) , fn , ext )"	3089:2:68419:68484	756827	0	True				
ANR	756941	CallExpression	"spprintf ( & buf , MAXPATHLEN , ""%.*s.mime%s"" , ( int ) ( q - fn ) , fn , ext )"		756827	0					
ANR	756942	Callee	spprintf		756827	0					
ANR	756943	Identifier	spprintf		756827	0					
ANR	756944	ArgumentList	& buf		756827	1					
ANR	756945	Argument	& buf		756827	0					
ANR	756946	UnaryOperationExpression	& buf		756827	0					
ANR	756947	UnaryOperator	&		756827	0					
ANR	756948	Identifier	buf		756827	1					
ANR	756949	Argument	MAXPATHLEN		756827	1					
ANR	756950	Identifier	MAXPATHLEN		756827	0					
ANR	756951	Argument	"""%.*s.mime%s"""		756827	2					
ANR	756952	PrimaryExpression	"""%.*s.mime%s"""		756827	0					
ANR	756953	Argument	( int ) ( q - fn )		756827	3					
ANR	756954	CastExpression	( int ) ( q - fn )		756827	0					
ANR	756955	CastTarget	int		756827	0					
ANR	756956	AdditiveExpression	q - fn		756827	1		-			
ANR	756957	Identifier	q		756827	0					
ANR	756958	Identifier	fn		756827	1					
ANR	756959	Argument	fn		756827	4					
ANR	756960	Identifier	fn		756827	0					
ANR	756961	Argument	ext		756827	5					
ANR	756962	Identifier	ext		756827	0					
ANR	756963	IfStatement	"if ( VCWD_ACCESS ( buf , R_OK ) == 0 )"		756827	1					
ANR	756964	Condition	"VCWD_ACCESS ( buf , R_OK ) == 0"	3091:6:68509:68535	756827	0	True				
ANR	756965	EqualityExpression	"VCWD_ACCESS ( buf , R_OK ) == 0"		756827	0		==			
ANR	756966	CallExpression	"VCWD_ACCESS ( buf , R_OK )"		756827	0					
ANR	756967	Callee	VCWD_ACCESS		756827	0					
ANR	756968	Identifier	VCWD_ACCESS		756827	0					
ANR	756969	ArgumentList	buf		756827	1					
ANR	756970	Argument	buf		756827	0					
ANR	756971	Identifier	buf		756827	0					
ANR	756972	Argument	R_OK		756827	1					
ANR	756973	Identifier	R_OK		756827	0					
ANR	756974	PrimaryExpression	0		756827	1					
ANR	756975	CompoundStatement		27:35:537:537	756827	1					
ANR	756976	ExpressionStatement	ms -> flags &= MAGIC_MIME_TYPE	3095:3:68594:68622	756827	0	True				
ANR	756977	AssignmentExpression	ms -> flags &= MAGIC_MIME_TYPE		756827	0		&=			
ANR	756978	PtrMemberAccess	ms -> flags		756827	0					
ANR	756979	Identifier	ms		756827	0					
ANR	756980	Identifier	flags		756827	1					
ANR	756981	Identifier	MAGIC_MIME_TYPE		756827	1					
ANR	756982	ReturnStatement	return buf ;	3096:3:68627:68637	756827	1	True				
ANR	756983	Identifier	buf		756827	0					
ANR	756984	ExpressionStatement	efree ( buf )	3098:2:68645:68655	756827	2	True				
ANR	756985	CallExpression	efree ( buf )		756827	0					
ANR	756986	Callee	efree		756827	0					
ANR	756987	Identifier	efree		756827	0					
ANR	756988	ArgumentList	buf		756827	1					
ANR	756989	Argument	buf		756827	0					
ANR	756990	Identifier	buf		756827	0					
ANR	756991	ExpressionStatement	"spprintf ( & buf , MAXPATHLEN , ""%.*s%s"" , ( int ) ( q - fn ) , fn , ext )"	3100:1:68661:68721	756827	8	True				
ANR	756992	CallExpression	"spprintf ( & buf , MAXPATHLEN , ""%.*s%s"" , ( int ) ( q - fn ) , fn , ext )"		756827	0					
ANR	756993	Callee	spprintf		756827	0					
ANR	756994	Identifier	spprintf		756827	0					
ANR	756995	ArgumentList	& buf		756827	1					
ANR	756996	Argument	& buf		756827	0					
ANR	756997	UnaryOperationExpression	& buf		756827	0					
ANR	756998	UnaryOperator	&		756827	0					
ANR	756999	Identifier	buf		756827	1					
ANR	757000	Argument	MAXPATHLEN		756827	1					
ANR	757001	Identifier	MAXPATHLEN		756827	0					
ANR	757002	Argument	"""%.*s%s"""		756827	2					
ANR	757003	PrimaryExpression	"""%.*s%s"""		756827	0					
ANR	757004	Argument	( int ) ( q - fn )		756827	3					
ANR	757005	CastExpression	( int ) ( q - fn )		756827	0					
ANR	757006	CastTarget	int		756827	0					
ANR	757007	AdditiveExpression	q - fn		756827	1		-			
ANR	757008	Identifier	q		756827	0					
ANR	757009	Identifier	fn		756827	1					
ANR	757010	Argument	fn		756827	4					
ANR	757011	Identifier	fn		756827	0					
ANR	757012	Argument	ext		756827	5					
ANR	757013	Identifier	ext		756827	0					
ANR	757014	IfStatement	"if ( strstr ( p , "".mime"" ) != NULL )"		756827	9					
ANR	757015	Condition	"strstr ( p , "".mime"" ) != NULL"	3103:5:68785:68810	756827	0	True				
ANR	757016	EqualityExpression	"strstr ( p , "".mime"" ) != NULL"		756827	0		!=			
ANR	757017	CallExpression	"strstr ( p , "".mime"" )"		756827	0					
ANR	757018	Callee	strstr		756827	0					
ANR	757019	Identifier	strstr		756827	0					
ANR	757020	ArgumentList	p		756827	1					
ANR	757021	Argument	p		756827	0					
ANR	757022	Identifier	p		756827	0					
ANR	757023	Argument	""".mime"""		756827	1					
ANR	757024	PrimaryExpression	""".mime"""		756827	0					
ANR	757025	Identifier	NULL		756827	1					
ANR	757026	ExpressionStatement	ms -> flags &= MAGIC_MIME_TYPE	3104:2:68815:68843	756827	1	True				
ANR	757027	AssignmentExpression	ms -> flags &= MAGIC_MIME_TYPE		756827	0		&=			
ANR	757028	PtrMemberAccess	ms -> flags		756827	0					
ANR	757029	Identifier	ms		756827	0					
ANR	757030	Identifier	flags		756827	1					
ANR	757031	Identifier	MAGIC_MIME_TYPE		756827	1					
ANR	757032	ReturnStatement	return buf ;	3105:1:68846:68856	756827	10	True				
ANR	757033	Identifier	buf		756827	0					
ANR	757034	ReturnType	char *		756827	1					
ANR	757035	Identifier	mkdbname		756827	2					
ANR	757036	ParameterList	"struct magic_set * ms , const char * fn , int strip"		756827	3					
ANR	757037	Parameter	struct magic_set * ms	3064:9:67951:67970	756827	0	True				
ANR	757038	ParameterType	struct magic_set *		756827	0					
ANR	757039	Identifier	ms		756827	1					
ANR	757040	Parameter	const char * fn	3064:31:67973:67986	756827	1	True				
ANR	757041	ParameterType	const char *		756827	0					
ANR	757042	Identifier	fn		756827	1					
ANR	757043	Parameter	int strip	3064:47:67989:67997	756827	2	True				
ANR	757044	ParameterType	int		756827	0					
ANR	757045	Identifier	strip		756827	1					
ANR	757046	CFGEntryNode	ENTRY		756827		True				
ANR	757047	CFGExitNode	EXIT		756827		True				
ANR	757048	Symbol	ext		756827						
ANR	757049	Symbol	VCWD_ACCESS		756827						
ANR	757050	Symbol	NULL		756827						
ANR	757051	Symbol	MAGIC_MIME		756827						
ANR	757052	Symbol	ms		756827						
ANR	757053	Symbol	MAGIC_MIME_TYPE		756827						
ANR	757054	Symbol	fn		756827						
ANR	757055	Symbol	* ms		756827						
ANR	757056	Symbol	R_OK		756827						
ANR	757057	Symbol	p		756827						
ANR	757058	Symbol	q		756827						
ANR	757059	Symbol	MAXPATHLEN		756827						
ANR	757060	Symbol	buf		756827						
ANR	757061	Symbol	strip		756827						
ANR	757062	Symbol	strstr		756827						
ANR	757063	Symbol	strrchr		756827						
ANR	757064	Symbol	* p		756827						
ANR	757065	Symbol	* q		756827						
ANR	757066	Symbol	ms -> flags		756827						
ANR	757067	Symbol	& buf		756827						
ANR	757068	Function	byteswap	3111:8:68914:69029							
ANR	757069	FunctionDef	"byteswap (struct magic * magic , uint32_t nmagic)"		757068	0					
ANR	757070	CompoundStatement		3113:0:68966:69029	757068	0					
ANR	757071	IdentifierDeclStatement	uint32_t i ;	3114:1:68969:68979	757068	0	True				
ANR	757072	IdentifierDecl	i		757068	0					
ANR	757073	IdentifierDeclType	uint32_t		757068	0					
ANR	757074	Identifier	i		757068	1					
ANR	757075	ForStatement	for ( i = 0 ; i < nmagic ; i ++ )		757068	1					
ANR	757076	ForInit	i = 0 ;	3115:6:68987:68992	757068	0	True				
ANR	757077	AssignmentExpression	i = 0		757068	0		=			
ANR	757078	Identifier	i		757068	0					
ANR	757079	PrimaryExpression	0		757068	1					
ANR	757080	Condition	i < nmagic	3115:13:68994:69003	757068	1	True				
ANR	757081	RelationalExpression	i < nmagic		757068	0		<			
ANR	757082	Identifier	i		757068	0					
ANR	757083	Identifier	nmagic		757068	1					
ANR	757084	PostIncDecOperationExpression	i ++	3115:25:69006:69008	757068	2	True				
ANR	757085	Identifier	i		757068	0					
ANR	757086	IncDec	++		757068	1					
ANR	757087	ExpressionStatement	bs1 ( & magic [ i ] )	3116:2:69013:69027	757068	3	True				
ANR	757088	CallExpression	bs1 ( & magic [ i ] )		757068	0					
ANR	757089	Callee	bs1		757068	0					
ANR	757090	Identifier	bs1		757068	0					
ANR	757091	ArgumentList	& magic [ i ]		757068	1					
ANR	757092	Argument	& magic [ i ]		757068	0					
ANR	757093	UnaryOperationExpression	& magic [ i ]		757068	0					
ANR	757094	UnaryOperator	&		757068	0					
ANR	757095	ArrayIndexing	magic [ i ]		757068	1					
ANR	757096	Identifier	magic		757068	0					
ANR	757097	Identifier	i		757068	1					
ANR	757098	ReturnType	void		757068	1					
ANR	757099	Identifier	byteswap		757068	2					
ANR	757100	ParameterList	"struct magic * magic , uint32_t nmagic"		757068	3					
ANR	757101	Parameter	struct magic * magic	3112:9:68928:68946	757068	0	True				
ANR	757102	ParameterType	struct magic *		757068	0					
ANR	757103	Identifier	magic		757068	1					
ANR	757104	Parameter	uint32_t nmagic	3112:30:68949:68963	757068	1	True				
ANR	757105	ParameterType	uint32_t		757068	0					
ANR	757106	Identifier	nmagic		757068	1					
ANR	757107	CFGEntryNode	ENTRY		757068		True				
ANR	757108	CFGExitNode	EXIT		757068		True				
ANR	757109	Symbol	magic		757068						
ANR	757110	Symbol	i		757068						
ANR	757111	Symbol	nmagic		757068						
ANR	757112	Function	swap2	3122:8:69063:69225							
ANR	757113	FunctionDef	swap2 (uint16_t sv)		757112	0					
ANR	757114	CompoundStatement		3124:0:69091:69225	757112	0					
ANR	757115	IdentifierDeclStatement	uint16_t rv ;	3125:1:69094:69105	757112	0	True				
ANR	757116	IdentifierDecl	rv		757112	0					
ANR	757117	IdentifierDeclType	uint16_t		757112	0					
ANR	757118	Identifier	rv		757112	1					
ANR	757119	IdentifierDeclStatement	uint8_t * s = ( uint8_t * ) ( void * ) & sv ;	3126:1:69108:69143	757112	1	True				
ANR	757120	IdentifierDecl	* s = ( uint8_t * ) ( void * ) & sv		757112	0					
ANR	757121	IdentifierDeclType	uint8_t *		757112	0					
ANR	757122	Identifier	s		757112	1					
ANR	757123	AssignmentExpression	* s = ( uint8_t * ) ( void * ) & sv		757112	2		=			
ANR	757124	Identifier	s		757112	0					
ANR	757125	CastExpression	( uint8_t * ) ( void * ) & sv		757112	1					
ANR	757126	CastTarget	uint8_t *		757112	0					
ANR	757127	CastExpression	( void * ) & sv		757112	1					
ANR	757128	CastTarget	void *		757112	0					
ANR	757129	UnaryOperationExpression	& sv		757112	1					
ANR	757130	UnaryOperator	&		757112	0					
ANR	757131	Identifier	sv		757112	1					
ANR	757132	IdentifierDeclStatement	uint8_t * d = ( uint8_t * ) ( void * ) & rv ;	3127:1:69147:69182	757112	2	True				
ANR	757133	IdentifierDecl	* d = ( uint8_t * ) ( void * ) & rv		757112	0					
ANR	757134	IdentifierDeclType	uint8_t *		757112	0					
ANR	757135	Identifier	d		757112	1					
ANR	757136	AssignmentExpression	* d = ( uint8_t * ) ( void * ) & rv		757112	2		=			
ANR	757137	Identifier	d		757112	0					
ANR	757138	CastExpression	( uint8_t * ) ( void * ) & rv		757112	1					
ANR	757139	CastTarget	uint8_t *		757112	0					
ANR	757140	CastExpression	( void * ) & rv		757112	1					
ANR	757141	CastTarget	void *		757112	0					
ANR	757142	UnaryOperationExpression	& rv		757112	1					
ANR	757143	UnaryOperator	&		757112	0					
ANR	757144	Identifier	rv		757112	1					
ANR	757145	ExpressionStatement	d [ 0 ] = s [ 1 ]	3128:1:69186:69197	757112	3	True				
ANR	757146	AssignmentExpression	d [ 0 ] = s [ 1 ]		757112	0		=			
ANR	757147	ArrayIndexing	d [ 0 ]		757112	0					
ANR	757148	Identifier	d		757112	0					
ANR	757149	PrimaryExpression	0		757112	1					
ANR	757150	ArrayIndexing	s [ 1 ]		757112	1					
ANR	757151	Identifier	s		757112	0					
ANR	757152	PrimaryExpression	1		757112	1					
ANR	757153	ExpressionStatement	d [ 1 ] = s [ 0 ]	3129:1:69200:69211	757112	4	True				
ANR	757154	AssignmentExpression	d [ 1 ] = s [ 0 ]		757112	0		=			
ANR	757155	ArrayIndexing	d [ 1 ]		757112	0					
ANR	757156	Identifier	d		757112	0					
ANR	757157	PrimaryExpression	1		757112	1					
ANR	757158	ArrayIndexing	s [ 0 ]		757112	1					
ANR	757159	Identifier	s		757112	0					
ANR	757160	PrimaryExpression	0		757112	1					
ANR	757161	ReturnStatement	return rv ;	3130:1:69214:69223	757112	5	True				
ANR	757162	Identifier	rv		757112	0					
ANR	757163	ReturnType	uint16_t		757112	1					
ANR	757164	Identifier	swap2		757112	2					
ANR	757165	ParameterList	uint16_t sv		757112	3					
ANR	757166	Parameter	uint16_t sv	3123:6:69078:69088	757112	0	True				
ANR	757167	ParameterType	uint16_t		757112	0					
ANR	757168	Identifier	sv		757112	1					
ANR	757169	CFGEntryNode	ENTRY		757112		True				
ANR	757170	CFGExitNode	EXIT		757112		True				
ANR	757171	Symbol	sv		757112						
ANR	757172	Symbol	s		757112						
ANR	757173	Symbol	rv		757112						
ANR	757174	Symbol	d		757112						
ANR	757175	Symbol	& sv		757112						
ANR	757176	Symbol	* s		757112						
ANR	757177	Symbol	* d		757112						
ANR	757178	Symbol	& rv		757112						
ANR	757179	Function	swap4	3136:8:69258:69448							
ANR	757180	FunctionDef	swap4 (uint32_t sv)		757179	0					
ANR	757181	CompoundStatement		3138:0:69286:69448	757179	0					
ANR	757182	IdentifierDeclStatement	uint32_t rv ;	3139:1:69289:69300	757179	0	True				
ANR	757183	IdentifierDecl	rv		757179	0					
ANR	757184	IdentifierDeclType	uint32_t		757179	0					
ANR	757185	Identifier	rv		757179	1					
ANR	757186	IdentifierDeclStatement	uint8_t * s = ( uint8_t * ) ( void * ) & sv ;	3140:1:69303:69338	757179	1	True				
ANR	757187	IdentifierDecl	* s = ( uint8_t * ) ( void * ) & sv		757179	0					
ANR	757188	IdentifierDeclType	uint8_t *		757179	0					
ANR	757189	Identifier	s		757179	1					
ANR	757190	AssignmentExpression	* s = ( uint8_t * ) ( void * ) & sv		757179	2		=			
ANR	757191	Identifier	s		757179	0					
ANR	757192	CastExpression	( uint8_t * ) ( void * ) & sv		757179	1					
ANR	757193	CastTarget	uint8_t *		757179	0					
ANR	757194	CastExpression	( void * ) & sv		757179	1					
ANR	757195	CastTarget	void *		757179	0					
ANR	757196	UnaryOperationExpression	& sv		757179	1					
ANR	757197	UnaryOperator	&		757179	0					
ANR	757198	Identifier	sv		757179	1					
ANR	757199	IdentifierDeclStatement	uint8_t * d = ( uint8_t * ) ( void * ) & rv ;	3141:1:69342:69377	757179	2	True				
ANR	757200	IdentifierDecl	* d = ( uint8_t * ) ( void * ) & rv		757179	0					
ANR	757201	IdentifierDeclType	uint8_t *		757179	0					
ANR	757202	Identifier	d		757179	1					
ANR	757203	AssignmentExpression	* d = ( uint8_t * ) ( void * ) & rv		757179	2		=			
ANR	757204	Identifier	d		757179	0					
ANR	757205	CastExpression	( uint8_t * ) ( void * ) & rv		757179	1					
ANR	757206	CastTarget	uint8_t *		757179	0					
ANR	757207	CastExpression	( void * ) & rv		757179	1					
ANR	757208	CastTarget	void *		757179	0					
ANR	757209	UnaryOperationExpression	& rv		757179	1					
ANR	757210	UnaryOperator	&		757179	0					
ANR	757211	Identifier	rv		757179	1					
ANR	757212	ExpressionStatement	d [ 0 ] = s [ 3 ]	3142:1:69381:69392	757179	3	True				
ANR	757213	AssignmentExpression	d [ 0 ] = s [ 3 ]		757179	0		=			
ANR	757214	ArrayIndexing	d [ 0 ]		757179	0					
ANR	757215	Identifier	d		757179	0					
ANR	757216	PrimaryExpression	0		757179	1					
ANR	757217	ArrayIndexing	s [ 3 ]		757179	1					
ANR	757218	Identifier	s		757179	0					
ANR	757219	PrimaryExpression	3		757179	1					
ANR	757220	ExpressionStatement	d [ 1 ] = s [ 2 ]	3143:1:69395:69406	757179	4	True				
ANR	757221	AssignmentExpression	d [ 1 ] = s [ 2 ]		757179	0		=			
ANR	757222	ArrayIndexing	d [ 1 ]		757179	0					
ANR	757223	Identifier	d		757179	0					
ANR	757224	PrimaryExpression	1		757179	1					
ANR	757225	ArrayIndexing	s [ 2 ]		757179	1					
ANR	757226	Identifier	s		757179	0					
ANR	757227	PrimaryExpression	2		757179	1					
ANR	757228	ExpressionStatement	d [ 2 ] = s [ 1 ]	3144:1:69409:69420	757179	5	True				
ANR	757229	AssignmentExpression	d [ 2 ] = s [ 1 ]		757179	0		=			
ANR	757230	ArrayIndexing	d [ 2 ]		757179	0					
ANR	757231	Identifier	d		757179	0					
ANR	757232	PrimaryExpression	2		757179	1					
ANR	757233	ArrayIndexing	s [ 1 ]		757179	1					
ANR	757234	Identifier	s		757179	0					
ANR	757235	PrimaryExpression	1		757179	1					
ANR	757236	ExpressionStatement	d [ 3 ] = s [ 0 ]	3145:1:69423:69434	757179	6	True				
ANR	757237	AssignmentExpression	d [ 3 ] = s [ 0 ]		757179	0		=			
ANR	757238	ArrayIndexing	d [ 3 ]		757179	0					
ANR	757239	Identifier	d		757179	0					
ANR	757240	PrimaryExpression	3		757179	1					
ANR	757241	ArrayIndexing	s [ 0 ]		757179	1					
ANR	757242	Identifier	s		757179	0					
ANR	757243	PrimaryExpression	0		757179	1					
ANR	757244	ReturnStatement	return rv ;	3146:1:69437:69446	757179	7	True				
ANR	757245	Identifier	rv		757179	0					
ANR	757246	ReturnType	uint32_t		757179	1					
ANR	757247	Identifier	swap4		757179	2					
ANR	757248	ParameterList	uint32_t sv		757179	3					
ANR	757249	Parameter	uint32_t sv	3137:6:69273:69283	757179	0	True				
ANR	757250	ParameterType	uint32_t		757179	0					
ANR	757251	Identifier	sv		757179	1					
ANR	757252	CFGEntryNode	ENTRY		757179		True				
ANR	757253	CFGExitNode	EXIT		757179		True				
ANR	757254	Symbol	sv		757179						
ANR	757255	Symbol	s		757179						
ANR	757256	Symbol	rv		757179						
ANR	757257	Symbol	d		757179						
ANR	757258	Symbol	& sv		757179						
ANR	757259	Symbol	* s		757179						
ANR	757260	Symbol	* d		757179						
ANR	757261	Symbol	& rv		757179						
ANR	757262	Function	swap8	3152:8:69481:69858							
ANR	757263	FunctionDef	swap8 (uint64_t sv)		757262	0					
ANR	757264	CompoundStatement		3154:0:69509:69858	757262	0					
ANR	757265	IdentifierDeclStatement	uint64_t rv ;	3155:1:69512:69523	757262	0	True				
ANR	757266	IdentifierDecl	rv		757262	0					
ANR	757267	IdentifierDeclType	uint64_t		757262	0					
ANR	757268	Identifier	rv		757262	1					
ANR	757269	IdentifierDeclStatement	uint8_t * s = ( uint8_t * ) ( void * ) & sv ;	3156:1:69526:69561	757262	1	True				
ANR	757270	IdentifierDecl	* s = ( uint8_t * ) ( void * ) & sv		757262	0					
ANR	757271	IdentifierDeclType	uint8_t *		757262	0					
ANR	757272	Identifier	s		757262	1					
ANR	757273	AssignmentExpression	* s = ( uint8_t * ) ( void * ) & sv		757262	2		=			
ANR	757274	Identifier	s		757262	0					
ANR	757275	CastExpression	( uint8_t * ) ( void * ) & sv		757262	1					
ANR	757276	CastTarget	uint8_t *		757262	0					
ANR	757277	CastExpression	( void * ) & sv		757262	1					
ANR	757278	CastTarget	void *		757262	0					
ANR	757279	UnaryOperationExpression	& sv		757262	1					
ANR	757280	UnaryOperator	&		757262	0					
ANR	757281	Identifier	sv		757262	1					
ANR	757282	IdentifierDeclStatement	uint8_t * d = ( uint8_t * ) ( void * ) & rv ;	3157:1:69565:69600	757262	2	True				
ANR	757283	IdentifierDecl	* d = ( uint8_t * ) ( void * ) & rv		757262	0					
ANR	757284	IdentifierDeclType	uint8_t *		757262	0					
ANR	757285	Identifier	d		757262	1					
ANR	757286	AssignmentExpression	* d = ( uint8_t * ) ( void * ) & rv		757262	2		=			
ANR	757287	Identifier	d		757262	0					
ANR	757288	CastExpression	( uint8_t * ) ( void * ) & rv		757262	1					
ANR	757289	CastTarget	uint8_t *		757262	0					
ANR	757290	CastExpression	( void * ) & rv		757262	1					
ANR	757291	CastTarget	void *		757262	0					
ANR	757292	UnaryOperationExpression	& rv		757262	1					
ANR	757293	UnaryOperator	&		757262	0					
ANR	757294	Identifier	rv		757262	1					
ANR	757295	ExpressionStatement	d [ 0 ] = s [ 3 ]	3159:1:69610:69621	757262	3	True				
ANR	757296	AssignmentExpression	d [ 0 ] = s [ 3 ]		757262	0		=			
ANR	757297	ArrayIndexing	d [ 0 ]		757262	0					
ANR	757298	Identifier	d		757262	0					
ANR	757299	PrimaryExpression	0		757262	1					
ANR	757300	ArrayIndexing	s [ 3 ]		757262	1					
ANR	757301	Identifier	s		757262	0					
ANR	757302	PrimaryExpression	3		757262	1					
ANR	757303	ExpressionStatement	d [ 1 ] = s [ 2 ]	3160:1:69624:69635	757262	4	True				
ANR	757304	AssignmentExpression	d [ 1 ] = s [ 2 ]		757262	0		=			
ANR	757305	ArrayIndexing	d [ 1 ]		757262	0					
ANR	757306	Identifier	d		757262	0					
ANR	757307	PrimaryExpression	1		757262	1					
ANR	757308	ArrayIndexing	s [ 2 ]		757262	1					
ANR	757309	Identifier	s		757262	0					
ANR	757310	PrimaryExpression	2		757262	1					
ANR	757311	ExpressionStatement	d [ 2 ] = s [ 1 ]	3161:1:69638:69649	757262	5	True				
ANR	757312	AssignmentExpression	d [ 2 ] = s [ 1 ]		757262	0		=			
ANR	757313	ArrayIndexing	d [ 2 ]		757262	0					
ANR	757314	Identifier	d		757262	0					
ANR	757315	PrimaryExpression	2		757262	1					
ANR	757316	ArrayIndexing	s [ 1 ]		757262	1					
ANR	757317	Identifier	s		757262	0					
ANR	757318	PrimaryExpression	1		757262	1					
ANR	757319	ExpressionStatement	d [ 3 ] = s [ 0 ]	3162:1:69652:69663	757262	6	True				
ANR	757320	AssignmentExpression	d [ 3 ] = s [ 0 ]		757262	0		=			
ANR	757321	ArrayIndexing	d [ 3 ]		757262	0					
ANR	757322	Identifier	d		757262	0					
ANR	757323	PrimaryExpression	3		757262	1					
ANR	757324	ArrayIndexing	s [ 0 ]		757262	1					
ANR	757325	Identifier	s		757262	0					
ANR	757326	PrimaryExpression	0		757262	1					
ANR	757327	ExpressionStatement	d [ 4 ] = s [ 7 ]	3163:1:69666:69677	757262	7	True				
ANR	757328	AssignmentExpression	d [ 4 ] = s [ 7 ]		757262	0		=			
ANR	757329	ArrayIndexing	d [ 4 ]		757262	0					
ANR	757330	Identifier	d		757262	0					
ANR	757331	PrimaryExpression	4		757262	1					
ANR	757332	ArrayIndexing	s [ 7 ]		757262	1					
ANR	757333	Identifier	s		757262	0					
ANR	757334	PrimaryExpression	7		757262	1					
ANR	757335	ExpressionStatement	d [ 5 ] = s [ 6 ]	3164:1:69680:69691	757262	8	True				
ANR	757336	AssignmentExpression	d [ 5 ] = s [ 6 ]		757262	0		=			
ANR	757337	ArrayIndexing	d [ 5 ]		757262	0					
ANR	757338	Identifier	d		757262	0					
ANR	757339	PrimaryExpression	5		757262	1					
ANR	757340	ArrayIndexing	s [ 6 ]		757262	1					
ANR	757341	Identifier	s		757262	0					
ANR	757342	PrimaryExpression	6		757262	1					
ANR	757343	ExpressionStatement	d [ 6 ] = s [ 5 ]	3165:1:69694:69705	757262	9	True				
ANR	757344	AssignmentExpression	d [ 6 ] = s [ 5 ]		757262	0		=			
ANR	757345	ArrayIndexing	d [ 6 ]		757262	0					
ANR	757346	Identifier	d		757262	0					
ANR	757347	PrimaryExpression	6		757262	1					
ANR	757348	ArrayIndexing	s [ 5 ]		757262	1					
ANR	757349	Identifier	s		757262	0					
ANR	757350	PrimaryExpression	5		757262	1					
ANR	757351	ExpressionStatement	d [ 7 ] = s [ 4 ]	3166:1:69708:69719	757262	10	True				
ANR	757352	AssignmentExpression	d [ 7 ] = s [ 4 ]		757262	0		=			
ANR	757353	ArrayIndexing	d [ 7 ]		757262	0					
ANR	757354	Identifier	d		757262	0					
ANR	757355	PrimaryExpression	7		757262	1					
ANR	757356	ArrayIndexing	s [ 4 ]		757262	1					
ANR	757357	Identifier	s		757262	0					
ANR	757358	PrimaryExpression	4		757262	1					
ANR	757359	ReturnStatement	return rv ;	3177:1:69847:69856	757262	11	True				
ANR	757360	Identifier	rv		757262	0					
ANR	757361	ReturnType	uint64_t		757262	1					
ANR	757362	Identifier	swap8		757262	2					
ANR	757363	ParameterList	uint64_t sv		757262	3					
ANR	757364	Parameter	uint64_t sv	3153:6:69496:69506	757262	0	True				
ANR	757365	ParameterType	uint64_t		757262	0					
ANR	757366	Identifier	sv		757262	1					
ANR	757367	CFGEntryNode	ENTRY		757262		True				
ANR	757368	CFGExitNode	EXIT		757262		True				
ANR	757369	Symbol	sv		757262						
ANR	757370	Symbol	s		757262						
ANR	757371	Symbol	rv		757262						
ANR	757372	Symbol	d		757262						
ANR	757373	Symbol	& sv		757262						
ANR	757374	Symbol	* s		757262						
ANR	757375	Symbol	* d		757262						
ANR	757376	Symbol	& rv		757262						
ANR	757377	Function	bs1	3183:8:69909:70301							
ANR	757378	FunctionDef	bs1 (struct magic * m)		757377	0					
ANR	757379	CompoundStatement		3185:0:69935:70301	757377	0					
ANR	757380	ExpressionStatement	m -> cont_level = swap2 ( m -> cont_level )	3186:1:69938:69974	757377	0	True				
ANR	757381	AssignmentExpression	m -> cont_level = swap2 ( m -> cont_level )		757377	0		=			
ANR	757382	PtrMemberAccess	m -> cont_level		757377	0					
ANR	757383	Identifier	m		757377	0					
ANR	757384	Identifier	cont_level		757377	1					
ANR	757385	CallExpression	swap2 ( m -> cont_level )		757377	1					
ANR	757386	Callee	swap2		757377	0					
ANR	757387	Identifier	swap2		757377	0					
ANR	757388	ArgumentList	m -> cont_level		757377	1					
ANR	757389	Argument	m -> cont_level		757377	0					
ANR	757390	PtrMemberAccess	m -> cont_level		757377	0					
ANR	757391	Identifier	m		757377	0					
ANR	757392	Identifier	cont_level		757377	1					
ANR	757393	ExpressionStatement	m -> offset = swap4 ( ( uint32_t ) m -> offset )	3187:1:69977:70015	757377	1	True				
ANR	757394	AssignmentExpression	m -> offset = swap4 ( ( uint32_t ) m -> offset )		757377	0		=			
ANR	757395	PtrMemberAccess	m -> offset		757377	0					
ANR	757396	Identifier	m		757377	0					
ANR	757397	Identifier	offset		757377	1					
ANR	757398	CallExpression	swap4 ( ( uint32_t ) m -> offset )		757377	1					
ANR	757399	Callee	swap4		757377	0					
ANR	757400	Identifier	swap4		757377	0					
ANR	757401	ArgumentList	( uint32_t ) m -> offset		757377	1					
ANR	757402	Argument	( uint32_t ) m -> offset		757377	0					
ANR	757403	CastExpression	( uint32_t ) m -> offset		757377	0					
ANR	757404	CastTarget	uint32_t		757377	0					
ANR	757405	PtrMemberAccess	m -> offset		757377	1					
ANR	757406	Identifier	m		757377	0					
ANR	757407	Identifier	offset		757377	1					
ANR	757408	ExpressionStatement	m -> in_offset = swap4 ( ( uint32_t ) m -> in_offset )	3188:1:70018:70062	757377	2	True				
ANR	757409	AssignmentExpression	m -> in_offset = swap4 ( ( uint32_t ) m -> in_offset )		757377	0		=			
ANR	757410	PtrMemberAccess	m -> in_offset		757377	0					
ANR	757411	Identifier	m		757377	0					
ANR	757412	Identifier	in_offset		757377	1					
ANR	757413	CallExpression	swap4 ( ( uint32_t ) m -> in_offset )		757377	1					
ANR	757414	Callee	swap4		757377	0					
ANR	757415	Identifier	swap4		757377	0					
ANR	757416	ArgumentList	( uint32_t ) m -> in_offset		757377	1					
ANR	757417	Argument	( uint32_t ) m -> in_offset		757377	0					
ANR	757418	CastExpression	( uint32_t ) m -> in_offset		757377	0					
ANR	757419	CastTarget	uint32_t		757377	0					
ANR	757420	PtrMemberAccess	m -> in_offset		757377	1					
ANR	757421	Identifier	m		757377	0					
ANR	757422	Identifier	in_offset		757377	1					
ANR	757423	ExpressionStatement	m -> lineno = swap4 ( ( uint32_t ) m -> lineno )	3189:1:70065:70103	757377	3	True				
ANR	757424	AssignmentExpression	m -> lineno = swap4 ( ( uint32_t ) m -> lineno )		757377	0		=			
ANR	757425	PtrMemberAccess	m -> lineno		757377	0					
ANR	757426	Identifier	m		757377	0					
ANR	757427	Identifier	lineno		757377	1					
ANR	757428	CallExpression	swap4 ( ( uint32_t ) m -> lineno )		757377	1					
ANR	757429	Callee	swap4		757377	0					
ANR	757430	Identifier	swap4		757377	0					
ANR	757431	ArgumentList	( uint32_t ) m -> lineno		757377	1					
ANR	757432	Argument	( uint32_t ) m -> lineno		757377	0					
ANR	757433	CastExpression	( uint32_t ) m -> lineno		757377	0					
ANR	757434	CastTarget	uint32_t		757377	0					
ANR	757435	PtrMemberAccess	m -> lineno		757377	1					
ANR	757436	Identifier	m		757377	0					
ANR	757437	Identifier	lineno		757377	1					
ANR	757438	IfStatement	if ( IS_LIBMAGIC_STRING ( m -> type ) )		757377	4					
ANR	757439	Condition	IS_LIBMAGIC_STRING ( m -> type )	3190:5:70110:70136	757377	0	True				
ANR	757440	CallExpression	IS_LIBMAGIC_STRING ( m -> type )		757377	0					
ANR	757441	Callee	IS_LIBMAGIC_STRING		757377	0					
ANR	757442	Identifier	IS_LIBMAGIC_STRING		757377	0					
ANR	757443	ArgumentList	m -> type		757377	1					
ANR	757444	Argument	m -> type		757377	0					
ANR	757445	PtrMemberAccess	m -> type		757377	0					
ANR	757446	Identifier	m		757377	0					
ANR	757447	Identifier	type		757377	1					
ANR	757448	CompoundStatement		6:34:203:203	757377	1					
ANR	757449	ExpressionStatement	m -> str_range = swap4 ( m -> str_range )	3191:2:70143:70177	757377	0	True				
ANR	757450	AssignmentExpression	m -> str_range = swap4 ( m -> str_range )		757377	0		=			
ANR	757451	PtrMemberAccess	m -> str_range		757377	0					
ANR	757452	Identifier	m		757377	0					
ANR	757453	Identifier	str_range		757377	1					
ANR	757454	CallExpression	swap4 ( m -> str_range )		757377	1					
ANR	757455	Callee	swap4		757377	0					
ANR	757456	Identifier	swap4		757377	0					
ANR	757457	ArgumentList	m -> str_range		757377	1					
ANR	757458	Argument	m -> str_range		757377	0					
ANR	757459	PtrMemberAccess	m -> str_range		757377	0					
ANR	757460	Identifier	m		757377	0					
ANR	757461	Identifier	str_range		757377	1					
ANR	757462	ExpressionStatement	m -> str_flags = swap4 ( m -> str_flags )	3192:2:70181:70215	757377	1	True				
ANR	757463	AssignmentExpression	m -> str_flags = swap4 ( m -> str_flags )		757377	0		=			
ANR	757464	PtrMemberAccess	m -> str_flags		757377	0					
ANR	757465	Identifier	m		757377	0					
ANR	757466	Identifier	str_flags		757377	1					
ANR	757467	CallExpression	swap4 ( m -> str_flags )		757377	1					
ANR	757468	Callee	swap4		757377	0					
ANR	757469	Identifier	swap4		757377	0					
ANR	757470	ArgumentList	m -> str_flags		757377	1					
ANR	757471	Argument	m -> str_flags		757377	0					
ANR	757472	PtrMemberAccess	m -> str_flags		757377	0					
ANR	757473	Identifier	m		757377	0					
ANR	757474	Identifier	str_flags		757377	1					
ANR	757475	ElseStatement	else		757377	0					
ANR	757476	CompoundStatement		10:6:290:290	757377	0					
ANR	757477	ExpressionStatement	m -> value . q = swap8 ( m -> value . q )	3195:2:70230:70260	757377	0	True				
ANR	757478	AssignmentExpression	m -> value . q = swap8 ( m -> value . q )		757377	0		=			
ANR	757479	MemberAccess	m -> value . q		757377	0					
ANR	757480	PtrMemberAccess	m -> value		757377	0					
ANR	757481	Identifier	m		757377	0					
ANR	757482	Identifier	value		757377	1					
ANR	757483	Identifier	q		757377	1					
ANR	757484	CallExpression	swap8 ( m -> value . q )		757377	1					
ANR	757485	Callee	swap8		757377	0					
ANR	757486	Identifier	swap8		757377	0					
ANR	757487	ArgumentList	m -> value . q		757377	1					
ANR	757488	Argument	m -> value . q		757377	0					
ANR	757489	MemberAccess	m -> value . q		757377	0					
ANR	757490	PtrMemberAccess	m -> value		757377	0					
ANR	757491	Identifier	m		757377	0					
ANR	757492	Identifier	value		757377	1					
ANR	757493	Identifier	q		757377	1					
ANR	757494	ExpressionStatement	m -> num_mask = swap8 ( m -> num_mask )	3196:2:70264:70296	757377	1	True				
ANR	757495	AssignmentExpression	m -> num_mask = swap8 ( m -> num_mask )		757377	0		=			
ANR	757496	PtrMemberAccess	m -> num_mask		757377	0					
ANR	757497	Identifier	m		757377	0					
ANR	757498	Identifier	num_mask		757377	1					
ANR	757499	CallExpression	swap8 ( m -> num_mask )		757377	1					
ANR	757500	Callee	swap8		757377	0					
ANR	757501	Identifier	swap8		757377	0					
ANR	757502	ArgumentList	m -> num_mask		757377	1					
ANR	757503	Argument	m -> num_mask		757377	0					
ANR	757504	PtrMemberAccess	m -> num_mask		757377	0					
ANR	757505	Identifier	m		757377	0					
ANR	757506	Identifier	num_mask		757377	1					
ANR	757507	ReturnType	void		757377	1					
ANR	757508	Identifier	bs1		757377	2					
ANR	757509	ParameterList	struct magic * m		757377	3					
ANR	757510	Parameter	struct magic * m	3184:4:69918:69932	757377	0	True				
ANR	757511	ParameterType	struct magic *		757377	0					
ANR	757512	Identifier	m		757377	1					
ANR	757513	CFGEntryNode	ENTRY		757377		True				
ANR	757514	CFGExitNode	EXIT		757377		True				
ANR	757515	Symbol	m -> in_offset		757377						
ANR	757516	Symbol	m -> value		757377						
ANR	757517	Symbol	m -> str_flags		757377						
ANR	757518	Symbol	swap8		757377						
ANR	757519	Symbol	m -> value . q		757377						
ANR	757520	Symbol	m -> str_range		757377						
ANR	757521	Symbol	m		757377						
ANR	757522	Symbol	swap4		757377						
ANR	757523	Symbol	m -> num_mask		757377						
ANR	757524	Symbol	m -> type		757377						
ANR	757525	Symbol	m -> offset		757377						
ANR	757526	Symbol	swap2		757377						
ANR	757527	Symbol	IS_LIBMAGIC_STRING		757377						
ANR	757528	Symbol	* m		757377						
ANR	757529	Symbol	m -> cont_level		757377						
ANR	757530	Symbol	m -> lineno		757377						
ANR	757531	Function	file_pstring_length_size	3200:10:70314:70600							
ANR	757532	FunctionDef	file_pstring_length_size (const struct magic * m)		757531	0					
ANR	757533	CompoundStatement		3202:0:70370:70600	757531	0					
ANR	757534	SwitchStatement	switch ( m -> str_flags & PSTRING_LEN )		757531	0					
ANR	757535	Condition	m -> str_flags & PSTRING_LEN	3203:9:70381:70406	757531	0	True				
ANR	757536	BitAndExpression	m -> str_flags & PSTRING_LEN		757531	0		&			
ANR	757537	PtrMemberAccess	m -> str_flags		757531	0					
ANR	757538	Identifier	m		757531	0					
ANR	757539	Identifier	str_flags		757531	1					
ANR	757540	Identifier	PSTRING_LEN		757531	1					
ANR	757541	CompoundStatement		2:37:38:38	757531	1					
ANR	757542	Label	case PSTRING_1_LE :	3204:1:70412:70429	757531	0	True				
ANR	757543	Identifier	PSTRING_1_LE		757531	0					
ANR	757544	ReturnStatement	return 1 ;	3205:2:70433:70441	757531	1	True				
ANR	757545	PrimaryExpression	1		757531	0					
ANR	757546	Label	case PSTRING_2_LE :	3206:1:70444:70461	757531	2	True				
ANR	757547	Identifier	PSTRING_2_LE		757531	0					
ANR	757548	Label	case PSTRING_2_BE :	3207:1:70464:70481	757531	3	True				
ANR	757549	Identifier	PSTRING_2_BE		757531	0					
ANR	757550	ReturnStatement	return 2 ;	3208:2:70485:70493	757531	4	True				
ANR	757551	PrimaryExpression	2		757531	0					
ANR	757552	Label	case PSTRING_4_LE :	3209:1:70496:70513	757531	5	True				
ANR	757553	Identifier	PSTRING_4_LE		757531	0					
ANR	757554	Label	case PSTRING_4_BE :	3210:1:70516:70533	757531	6	True				
ANR	757555	Identifier	PSTRING_4_BE		757531	0					
ANR	757556	ReturnStatement	return 4 ;	3211:2:70537:70545	757531	7	True				
ANR	757557	PrimaryExpression	4		757531	0					
ANR	757558	Label	default :	3212:1:70548:70555	757531	8	True				
ANR	757559	Identifier	default		757531	0					
ANR	757560	ExpressionStatement	abort ( )	3213:2:70559:70566	757531	9	True				
ANR	757561	CallExpression	abort ( )		757531	0					
ANR	757562	Callee	abort		757531	0					
ANR	757563	Identifier	abort		757531	0					
ANR	757564	ArgumentList			757531	1					
ANR	757565	ReturnStatement	return 1 ;	3214:2:70587:70595	757531	10	True				
ANR	757566	PrimaryExpression	1		757531	0					
ANR	757567	ReturnType	size_t		757531	1					
ANR	757568	Identifier	file_pstring_length_size		757531	2					
ANR	757569	ParameterList	const struct magic * m		757531	3					
ANR	757570	Parameter	const struct magic * m	3201:25:70347:70367	757531	0	True				
ANR	757571	ParameterType	const struct magic *		757531	0					
ANR	757572	Identifier	m		757531	1					
ANR	757573	CFGEntryNode	ENTRY		757531		True				
ANR	757574	CFGExitNode	EXIT		757531		True				
ANR	757575	Symbol	PSTRING_LEN		757531						
ANR	757576	Symbol	* m		757531						
ANR	757577	Symbol	m -> str_flags		757531						
ANR	757578	Symbol	m		757531						
ANR	757579	Function	file_pstring_get_length	3217:10:70612:71215							
ANR	757580	FunctionDef	"file_pstring_get_length (const struct magic * m , const char * s)"		757579	0					
ANR	757581	CompoundStatement		3219:0:70681:71215	757579	0					
ANR	757582	IdentifierDeclStatement	size_t len = 0 ;	3220:1:70684:70698	757579	0	True				
ANR	757583	IdentifierDecl	len = 0		757579	0					
ANR	757584	IdentifierDeclType	size_t		757579	0					
ANR	757585	Identifier	len		757579	1					
ANR	757586	AssignmentExpression	len = 0		757579	2		=			
ANR	757587	Identifier	len		757579	0					
ANR	757588	PrimaryExpression	0		757579	1					
ANR	757589	SwitchStatement	switch ( m -> str_flags & PSTRING_LEN )		757579	1					
ANR	757590	Condition	m -> str_flags & PSTRING_LEN	3222:9:70710:70735	757579	0	True				
ANR	757591	BitAndExpression	m -> str_flags & PSTRING_LEN		757579	0		&			
ANR	757592	PtrMemberAccess	m -> str_flags		757579	0					
ANR	757593	Identifier	m		757579	0					
ANR	757594	Identifier	str_flags		757579	1					
ANR	757595	Identifier	PSTRING_LEN		757579	1					
ANR	757596	CompoundStatement		4:37:56:56	757579	1					
ANR	757597	Label	case PSTRING_1_LE :	3223:1:70741:70758	757579	0	True				
ANR	757598	Identifier	PSTRING_1_LE		757579	0					
ANR	757599	ExpressionStatement	len = * s	3224:2:70762:70770	757579	1	True				
ANR	757600	AssignmentExpression	len = * s		757579	0		=			
ANR	757601	Identifier	len		757579	0					
ANR	757602	UnaryOperationExpression	* s		757579	1					
ANR	757603	UnaryOperator	*		757579	0					
ANR	757604	Identifier	s		757579	1					
ANR	757605	BreakStatement	break ;	3225:2:70774:70779	757579	2	True				
ANR	757606	Label	case PSTRING_2_LE :	3226:1:70782:70799	757579	3	True				
ANR	757607	Identifier	PSTRING_2_LE		757579	0					
ANR	757608	ExpressionStatement	len = ( s [ 1 ] << 8 ) | s [ 0 ]	3227:2:70803:70827	757579	4	True				
ANR	757609	AssignmentExpression	len = ( s [ 1 ] << 8 ) | s [ 0 ]		757579	0		=			
ANR	757610	Identifier	len		757579	0					
ANR	757611	InclusiveOrExpression	( s [ 1 ] << 8 ) | s [ 0 ]		757579	1		|			
ANR	757612	ShiftExpression	s [ 1 ] << 8		757579	0		<<			
ANR	757613	ArrayIndexing	s [ 1 ]		757579	0					
ANR	757614	Identifier	s		757579	0					
ANR	757615	PrimaryExpression	1		757579	1					
ANR	757616	PrimaryExpression	8		757579	1					
ANR	757617	ArrayIndexing	s [ 0 ]		757579	1					
ANR	757618	Identifier	s		757579	0					
ANR	757619	PrimaryExpression	0		757579	1					
ANR	757620	BreakStatement	break ;	3228:2:70831:70836	757579	5	True				
ANR	757621	Label	case PSTRING_2_BE :	3229:1:70839:70856	757579	6	True				
ANR	757622	Identifier	PSTRING_2_BE		757579	0					
ANR	757623	ExpressionStatement	len = ( s [ 0 ] << 8 ) | s [ 1 ]	3230:2:70860:70884	757579	7	True				
ANR	757624	AssignmentExpression	len = ( s [ 0 ] << 8 ) | s [ 1 ]		757579	0		=			
ANR	757625	Identifier	len		757579	0					
ANR	757626	InclusiveOrExpression	( s [ 0 ] << 8 ) | s [ 1 ]		757579	1		|			
ANR	757627	ShiftExpression	s [ 0 ] << 8		757579	0		<<			
ANR	757628	ArrayIndexing	s [ 0 ]		757579	0					
ANR	757629	Identifier	s		757579	0					
ANR	757630	PrimaryExpression	0		757579	1					
ANR	757631	PrimaryExpression	8		757579	1					
ANR	757632	ArrayIndexing	s [ 1 ]		757579	1					
ANR	757633	Identifier	s		757579	0					
ANR	757634	PrimaryExpression	1		757579	1					
ANR	757635	BreakStatement	break ;	3231:2:70888:70893	757579	8	True				
ANR	757636	Label	case PSTRING_4_LE :	3232:1:70896:70913	757579	9	True				
ANR	757637	Identifier	PSTRING_4_LE		757579	0					
ANR	757638	ExpressionStatement	len = ( s [ 3 ] << 24 ) | ( s [ 2 ] << 16 ) | ( s [ 1 ] << 8 ) | s [ 0 ]	3233:2:70917:70971	757579	10	True				
ANR	757639	AssignmentExpression	len = ( s [ 3 ] << 24 ) | ( s [ 2 ] << 16 ) | ( s [ 1 ] << 8 ) | s [ 0 ]		757579	0		=			
ANR	757640	Identifier	len		757579	0					
ANR	757641	InclusiveOrExpression	( s [ 3 ] << 24 ) | ( s [ 2 ] << 16 ) | ( s [ 1 ] << 8 ) | s [ 0 ]		757579	1		|			
ANR	757642	ShiftExpression	s [ 3 ] << 24		757579	0		<<			
ANR	757643	ArrayIndexing	s [ 3 ]		757579	0					
ANR	757644	Identifier	s		757579	0					
ANR	757645	PrimaryExpression	3		757579	1					
ANR	757646	PrimaryExpression	24		757579	1					
ANR	757647	InclusiveOrExpression	( s [ 2 ] << 16 ) | ( s [ 1 ] << 8 ) | s [ 0 ]		757579	1		|			
ANR	757648	ShiftExpression	s [ 2 ] << 16		757579	0		<<			
ANR	757649	ArrayIndexing	s [ 2 ]		757579	0					
ANR	757650	Identifier	s		757579	0					
ANR	757651	PrimaryExpression	2		757579	1					
ANR	757652	PrimaryExpression	16		757579	1					
ANR	757653	InclusiveOrExpression	( s [ 1 ] << 8 ) | s [ 0 ]		757579	1		|			
ANR	757654	ShiftExpression	s [ 1 ] << 8		757579	0		<<			
ANR	757655	ArrayIndexing	s [ 1 ]		757579	0					
ANR	757656	Identifier	s		757579	0					
ANR	757657	PrimaryExpression	1		757579	1					
ANR	757658	PrimaryExpression	8		757579	1					
ANR	757659	ArrayIndexing	s [ 0 ]		757579	1					
ANR	757660	Identifier	s		757579	0					
ANR	757661	PrimaryExpression	0		757579	1					
ANR	757662	BreakStatement	break ;	3234:2:70975:70980	757579	11	True				
ANR	757663	Label	case PSTRING_4_BE :	3235:1:70983:71000	757579	12	True				
ANR	757664	Identifier	PSTRING_4_BE		757579	0					
ANR	757665	ExpressionStatement	len = ( s [ 0 ] << 24 ) | ( s [ 1 ] << 16 ) | ( s [ 2 ] << 8 ) | s [ 3 ]	3236:2:71004:71058	757579	13	True				
ANR	757666	AssignmentExpression	len = ( s [ 0 ] << 24 ) | ( s [ 1 ] << 16 ) | ( s [ 2 ] << 8 ) | s [ 3 ]		757579	0		=			
ANR	757667	Identifier	len		757579	0					
ANR	757668	InclusiveOrExpression	( s [ 0 ] << 24 ) | ( s [ 1 ] << 16 ) | ( s [ 2 ] << 8 ) | s [ 3 ]		757579	1		|			
ANR	757669	ShiftExpression	s [ 0 ] << 24		757579	0		<<			
ANR	757670	ArrayIndexing	s [ 0 ]		757579	0					
ANR	757671	Identifier	s		757579	0					
ANR	757672	PrimaryExpression	0		757579	1					
ANR	757673	PrimaryExpression	24		757579	1					
ANR	757674	InclusiveOrExpression	( s [ 1 ] << 16 ) | ( s [ 2 ] << 8 ) | s [ 3 ]		757579	1		|			
ANR	757675	ShiftExpression	s [ 1 ] << 16		757579	0		<<			
ANR	757676	ArrayIndexing	s [ 1 ]		757579	0					
ANR	757677	Identifier	s		757579	0					
ANR	757678	PrimaryExpression	1		757579	1					
ANR	757679	PrimaryExpression	16		757579	1					
ANR	757680	InclusiveOrExpression	( s [ 2 ] << 8 ) | s [ 3 ]		757579	1		|			
ANR	757681	ShiftExpression	s [ 2 ] << 8		757579	0		<<			
ANR	757682	ArrayIndexing	s [ 2 ]		757579	0					
ANR	757683	Identifier	s		757579	0					
ANR	757684	PrimaryExpression	2		757579	1					
ANR	757685	PrimaryExpression	8		757579	1					
ANR	757686	ArrayIndexing	s [ 3 ]		757579	1					
ANR	757687	Identifier	s		757579	0					
ANR	757688	PrimaryExpression	3		757579	1					
ANR	757689	BreakStatement	break ;	3237:2:71062:71067	757579	14	True				
ANR	757690	Label	default :	3238:1:71070:71077	757579	15	True				
ANR	757691	Identifier	default		757579	0					
ANR	757692	ExpressionStatement	abort ( )	3239:2:71081:71088	757579	16	True				
ANR	757693	CallExpression	abort ( )		757579	0					
ANR	757694	Callee	abort		757579	0					
ANR	757695	Identifier	abort		757579	0					
ANR	757696	ArgumentList			757579	1					
ANR	757697	IfStatement	if ( m -> str_flags & PSTRING_LENGTH_INCLUDES_ITSELF )		757579	2					
ANR	757698	Condition	m -> str_flags & PSTRING_LENGTH_INCLUDES_ITSELF	3242:5:71116:71160	757579	0	True				
ANR	757699	BitAndExpression	m -> str_flags & PSTRING_LENGTH_INCLUDES_ITSELF		757579	0		&			
ANR	757700	PtrMemberAccess	m -> str_flags		757579	0					
ANR	757701	Identifier	m		757579	0					
ANR	757702	Identifier	str_flags		757579	1					
ANR	757703	Identifier	PSTRING_LENGTH_INCLUDES_ITSELF		757579	1					
ANR	757704	ExpressionStatement	len -= file_pstring_length_size ( m )	3243:2:71165:71199	757579	1	True				
ANR	757705	AssignmentExpression	len -= file_pstring_length_size ( m )		757579	0		-=			
ANR	757706	Identifier	len		757579	0					
ANR	757707	CallExpression	file_pstring_length_size ( m )		757579	1					
ANR	757708	Callee	file_pstring_length_size		757579	0					
ANR	757709	Identifier	file_pstring_length_size		757579	0					
ANR	757710	ArgumentList	m		757579	1					
ANR	757711	Argument	m		757579	0					
ANR	757712	Identifier	m		757579	0					
ANR	757713	ReturnStatement	return len ;	3245:1:71203:71213	757579	3	True				
ANR	757714	Identifier	len		757579	0					
ANR	757715	ReturnType	size_t		757579	1					
ANR	757716	Identifier	file_pstring_get_length		757579	2					
ANR	757717	ParameterList	"const struct magic * m , const char * s"		757579	3					
ANR	757718	Parameter	const struct magic * m	3218:24:70643:70663	757579	0	True				
ANR	757719	ParameterType	const struct magic *		757579	0					
ANR	757720	Identifier	m		757579	1					
ANR	757721	Parameter	const char * s	3218:47:70666:70678	757579	1	True				
ANR	757722	ParameterType	const char *		757579	0					
ANR	757723	Identifier	s		757579	1					
ANR	757724	CFGEntryNode	ENTRY		757579		True				
ANR	757725	CFGExitNode	EXIT		757579		True				
ANR	757726	Symbol	s		757579						
ANR	757727	Symbol	file_pstring_length_size		757579						
ANR	757728	Symbol	len		757579						
ANR	757729	Symbol	PSTRING_LEN		757579						
ANR	757730	Symbol	* m		757579						
ANR	757731	Symbol	m -> str_flags		757579						
ANR	757732	Symbol	m		757579						
ANR	757733	Symbol	* s		757579						
ANR	757734	Symbol	PSTRING_LENGTH_INCLUDES_ITSELF		757579						
ANR	757735	Function	file_magicfind	3248:10:71228:71777							
ANR	757736	FunctionDef	"file_magicfind (struct magic_set * ms , const char * name , struct mlist * v)"		757735	0					
ANR	757737	CompoundStatement		3250:0:71304:71777	757735	0					
ANR	757738	IdentifierDeclStatement	"uint32_t i , j ;"	3251:1:71307:71320	757735	0	True				
ANR	757739	IdentifierDecl	i		757735	0					
ANR	757740	IdentifierDeclType	uint32_t		757735	0					
ANR	757741	Identifier	i		757735	1					
ANR	757742	IdentifierDecl	j		757735	1					
ANR	757743	IdentifierDeclType	uint32_t		757735	0					
ANR	757744	Identifier	j		757735	1					
ANR	757745	IdentifierDeclStatement	"struct mlist * mlist , * ml ;"	3252:1:71323:71347	757735	1	True				
ANR	757746	IdentifierDecl	* mlist		757735	0					
ANR	757747	IdentifierDeclType	struct mlist *		757735	0					
ANR	757748	Identifier	mlist		757735	1					
ANR	757749	IdentifierDecl	* ml		757735	1					
ANR	757750	IdentifierDeclType	struct mlist *		757735	0					
ANR	757751	Identifier	ml		757735	1					
ANR	757752	ExpressionStatement	mlist = ms -> mlist [ 1 ]	3254:1:71351:71371	757735	2	True				
ANR	757753	AssignmentExpression	mlist = ms -> mlist [ 1 ]		757735	0		=			
ANR	757754	Identifier	mlist		757735	0					
ANR	757755	ArrayIndexing	ms -> mlist [ 1 ]		757735	1					
ANR	757756	PtrMemberAccess	ms -> mlist		757735	0					
ANR	757757	Identifier	ms		757735	0					
ANR	757758	Identifier	mlist		757735	1					
ANR	757759	PrimaryExpression	1		757735	1					
ANR	757760	ForStatement	for ( ml = mlist -> next ; ml != mlist ; ml = ml -> next )		757735	3					
ANR	757761	ForInit	ml = mlist -> next ;	3256:6:71380:71396	757735	0	True				
ANR	757762	AssignmentExpression	ml = mlist -> next		757735	0		=			
ANR	757763	Identifier	ml		757735	0					
ANR	757764	PtrMemberAccess	mlist -> next		757735	1					
ANR	757765	Identifier	mlist		757735	0					
ANR	757766	Identifier	next		757735	1					
ANR	757767	Condition	ml != mlist	3256:24:71398:71408	757735	1	True				
ANR	757768	EqualityExpression	ml != mlist		757735	0		!=			
ANR	757769	Identifier	ml		757735	0					
ANR	757770	Identifier	mlist		757735	1					
ANR	757771	AssignmentExpression	ml = ml -> next	3256:37:71411:71423	757735	2	True	=			
ANR	757772	Identifier	ml		757735	0					
ANR	757773	PtrMemberAccess	ml -> next		757735	1					
ANR	757774	Identifier	ml		757735	0					
ANR	757775	Identifier	next		757735	1					
ANR	757776	CompoundStatement		9:2:157:182	757735	3					
ANR	757777	IdentifierDeclStatement	struct magic * ma = ml -> magic ;	3257:2:71430:71458	757735	0	True				
ANR	757778	IdentifierDecl	* ma = ml -> magic		757735	0					
ANR	757779	IdentifierDeclType	struct magic *		757735	0					
ANR	757780	Identifier	ma		757735	1					
ANR	757781	AssignmentExpression	* ma = ml -> magic		757735	2		=			
ANR	757782	Identifier	ma		757735	0					
ANR	757783	PtrMemberAccess	ml -> magic		757735	1					
ANR	757784	Identifier	ml		757735	0					
ANR	757785	Identifier	magic		757735	1					
ANR	757786	IdentifierDeclStatement	uint32_t nma = ml -> nmagic ;	3258:2:71462:71487	757735	1	True				
ANR	757787	IdentifierDecl	nma = ml -> nmagic		757735	0					
ANR	757788	IdentifierDeclType	uint32_t		757735	0					
ANR	757789	Identifier	nma		757735	1					
ANR	757790	AssignmentExpression	nma = ml -> nmagic		757735	2		=			
ANR	757791	Identifier	nma		757735	0					
ANR	757792	PtrMemberAccess	ml -> nmagic		757735	1					
ANR	757793	Identifier	ml		757735	0					
ANR	757794	Identifier	nmagic		757735	1					
ANR	757795	ForStatement	for ( i = 0 ; i < nma ; i ++ )		757735	2					
ANR	757796	ForInit	i = 0 ;	3259:7:71496:71501	757735	0	True				
ANR	757797	AssignmentExpression	i = 0		757735	0		=			
ANR	757798	Identifier	i		757735	0					
ANR	757799	PrimaryExpression	0		757735	1					
ANR	757800	Condition	i < nma	3259:14:71503:71509	757735	1	True				
ANR	757801	RelationalExpression	i < nma		757735	0		<			
ANR	757802	Identifier	i		757735	0					
ANR	757803	Identifier	nma		757735	1					
ANR	757804	PostIncDecOperationExpression	i ++	3259:23:71512:71514	757735	2	True				
ANR	757805	Identifier	i		757735	0					
ANR	757806	IncDec	++		757735	1					
ANR	757807	CompoundStatement		10:28:212:212	757735	3					
ANR	757808	IfStatement	if ( ma [ i ] . type != FILE_NAME )		757735	0					
ANR	757809	Condition	ma [ i ] . type != FILE_NAME	3260:7:71526:71548	757735	0	True				
ANR	757810	EqualityExpression	ma [ i ] . type != FILE_NAME		757735	0		!=			
ANR	757811	MemberAccess	ma [ i ] . type		757735	0					
ANR	757812	ArrayIndexing	ma [ i ]		757735	0					
ANR	757813	Identifier	ma		757735	0					
ANR	757814	Identifier	i		757735	1					
ANR	757815	Identifier	type		757735	1					
ANR	757816	Identifier	FILE_NAME		757735	1					
ANR	757817	ContinueStatement	continue ;	3261:4:71555:71563	757735	1	True				
ANR	757818	IfStatement	"if ( strcmp ( ma [ i ] . value . s , name ) == 0 )"		757735	1					
ANR	757819	Condition	"strcmp ( ma [ i ] . value . s , name ) == 0"	3262:7:71572:71603	757735	0	True				
ANR	757820	EqualityExpression	"strcmp ( ma [ i ] . value . s , name ) == 0"		757735	0		==			
ANR	757821	CallExpression	"strcmp ( ma [ i ] . value . s , name )"		757735	0					
ANR	757822	Callee	strcmp		757735	0					
ANR	757823	Identifier	strcmp		757735	0					
ANR	757824	ArgumentList	ma [ i ] . value . s		757735	1					
ANR	757825	Argument	ma [ i ] . value . s		757735	0					
ANR	757826	MemberAccess	ma [ i ] . value . s		757735	0					
ANR	757827	MemberAccess	ma [ i ] . value		757735	0					
ANR	757828	ArrayIndexing	ma [ i ]		757735	0					
ANR	757829	Identifier	ma		757735	0					
ANR	757830	Identifier	i		757735	1					
ANR	757831	Identifier	value		757735	1					
ANR	757832	Identifier	s		757735	1					
ANR	757833	Argument	name		757735	1					
ANR	757834	Identifier	name		757735	0					
ANR	757835	PrimaryExpression	0		757735	1					
ANR	757836	CompoundStatement		13:41:301:301	757735	1					
ANR	757837	ExpressionStatement	v -> magic = & ma [ i ]	3263:4:71612:71629	757735	0	True				
ANR	757838	AssignmentExpression	v -> magic = & ma [ i ]		757735	0		=			
ANR	757839	PtrMemberAccess	v -> magic		757735	0					
ANR	757840	Identifier	v		757735	0					
ANR	757841	Identifier	magic		757735	1					
ANR	757842	UnaryOperationExpression	& ma [ i ]		757735	1					
ANR	757843	UnaryOperator	&		757735	0					
ANR	757844	ArrayIndexing	ma [ i ]		757735	1					
ANR	757845	Identifier	ma		757735	0					
ANR	757846	Identifier	i		757735	1					
ANR	757847	ForStatement	for ( j = i + 1 ; j < nma ; j ++ )		757735	1					
ANR	757848	ForInit	j = i + 1 ;	3264:9:71640:71649	757735	0	True				
ANR	757849	AssignmentExpression	j = i + 1		757735	0		=			
ANR	757850	Identifier	j		757735	0					
ANR	757851	AdditiveExpression	i + 1		757735	1		+			
ANR	757852	Identifier	i		757735	0					
ANR	757853	PrimaryExpression	1		757735	1					
ANR	757854	Condition	j < nma	3264:20:71651:71657	757735	1	True				
ANR	757855	RelationalExpression	j < nma		757735	0		<			
ANR	757856	Identifier	j		757735	0					
ANR	757857	Identifier	nma		757735	1					
ANR	757858	PostIncDecOperationExpression	j ++	3264:29:71660:71662	757735	2	True				
ANR	757859	Identifier	j		757735	0					
ANR	757860	IncDec	++		757735	1					
ANR	757861	IfStatement	if ( ma [ j ] . cont_level == 0 )		757735	3					
ANR	757862	Condition	ma [ j ] . cont_level == 0	3265:12:71677:71697	757735	0	True				
ANR	757863	EqualityExpression	ma [ j ] . cont_level == 0		757735	0		==			
ANR	757864	MemberAccess	ma [ j ] . cont_level		757735	0					
ANR	757865	ArrayIndexing	ma [ j ]		757735	0					
ANR	757866	Identifier	ma		757735	0					
ANR	757867	Identifier	j		757735	1					
ANR	757868	Identifier	cont_level		757735	1					
ANR	757869	PrimaryExpression	0		757735	1					
ANR	757870	BreakStatement	break ;	3266:9:71709:71714	757735	1	True				
ANR	757871	ExpressionStatement	v -> nmagic = j - i	3267:4:71720:71737	757735	2	True				
ANR	757872	AssignmentExpression	v -> nmagic = j - i		757735	0		=			
ANR	757873	PtrMemberAccess	v -> nmagic		757735	0					
ANR	757874	Identifier	v		757735	0					
ANR	757875	Identifier	nmagic		757735	1					
ANR	757876	AdditiveExpression	j - i		757735	1		-			
ANR	757877	Identifier	j		757735	0					
ANR	757878	Identifier	i		757735	1					
ANR	757879	ReturnStatement	return 0 ;	3268:4:71743:71751	757735	3	True				
ANR	757880	PrimaryExpression	0		757735	0					
ANR	757881	ReturnStatement	return - 1 ;	3272:1:71766:71775	757735	4	True				
ANR	757882	UnaryOperationExpression	- 1		757735	0					
ANR	757883	UnaryOperator	-		757735	0					
ANR	757884	PrimaryExpression	1		757735	1					
ANR	757885	ReturnType	int		757735	1					
ANR	757886	Identifier	file_magicfind		757735	2					
ANR	757887	ParameterList	"struct magic_set * ms , const char * name , struct mlist * v"		757735	3					
ANR	757888	Parameter	struct magic_set * ms	3249:15:71247:71266	757735	0	True				
ANR	757889	ParameterType	struct magic_set *		757735	0					
ANR	757890	Identifier	ms		757735	1					
ANR	757891	Parameter	const char * name	3249:37:71269:71284	757735	1	True				
ANR	757892	ParameterType	const char *		757735	0					
ANR	757893	Identifier	name		757735	1					
ANR	757894	Parameter	struct mlist * v	3249:55:71287:71301	757735	2	True				
ANR	757895	ParameterType	struct mlist *		757735	0					
ANR	757896	Identifier	v		757735	1					
ANR	757897	CFGEntryNode	ENTRY		757735		True				
ANR	757898	CFGExitNode	EXIT		757735		True				
ANR	757899	Symbol	* v		757735						
ANR	757900	Symbol	nma		757735						
ANR	757901	Symbol	mlist -> next		757735						
ANR	757902	Symbol	ml -> next		757735						
ANR	757903	Symbol	ms -> mlist		757735						
ANR	757904	Symbol	* mlist		757735						
ANR	757905	Symbol	* ml		757735						
ANR	757906	Symbol	ml -> nmagic		757735						
ANR	757907	Symbol	FILE_NAME		757735						
ANR	757908	Symbol	* ms		757735						
ANR	757909	Symbol	* * ms		757735						
ANR	757910	Symbol	ma		757735						
ANR	757911	Symbol	ml -> magic		757735						
ANR	757912	Symbol	ma [ i ] . value		757735						
ANR	757913	Symbol	* ma		757735						
ANR	757914	Symbol	ma [ i ] . type		757735						
ANR	757915	Symbol	ml		757735						
ANR	757916	Symbol	strcmp		757735						
ANR	757917	Symbol	* ms -> mlist		757735						
ANR	757918	Symbol	ms		757735						
ANR	757919	Symbol	i		757735						
ANR	757920	Symbol	j		757735						
ANR	757921	Symbol	v -> magic		757735						
ANR	757922	Symbol	ma [ j ] . cont_level		757735						
ANR	757923	Symbol	* i		757735						
ANR	757924	Symbol	* j		757735						
ANR	757925	Symbol	ma [ i ] . value . s		757735						
ANR	757926	Symbol	v		757735						
ANR	757927	Symbol	v -> nmagic		757735						
ANR	757928	Symbol	name		757735						
ANR	757929	Symbol	mlist		757735						
