command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	407938	File	data/converged/CVE-2015-8617_php-src/apprentice.c								
ANR	407939	ClassDef	magic_entry	98:0:2877:2961							
ANR	407940	DeclStmt									
ANR	407941	Decl							struct magic	struct magic *	mp
ANR	407942	DeclStmt									
ANR	407943	Decl							uint32_t	uint32_t	cont_count
ANR	407944	DeclStmt									
ANR	407945	Decl							uint32_t	uint32_t	max_count
ANR	407946	ClassDef	magic_entry_set	104:0:2965:3047							
ANR	407947	DeclStmt									
ANR	407948	Decl							struct magic_entry	struct magic_entry *	me
ANR	407949	DeclStmt									
ANR	407950	Decl							uint32_t	uint32_t	count
ANR	407951	DeclStmt									
ANR	407952	Decl							uint32_t	uint32_t	max
ANR	407953	ClassDef	magic_map	110:0:3051:3168							
ANR	407954	DeclStmt									
ANR	407955	Decl							void	void *	p
ANR	407956	DeclStmt									
ANR	407957	Decl							size_t	size_t	len
ANR	407958	DeclStmt									
ANR	407959	Decl							int	int	type
ANR	407960	DeclStmt									
ANR	407961	Decl							struct magic	struct magic * [ MAGIC_SETS ]	magic
ANR	407962	DeclStmt									
ANR	407963	Decl							uint32_t	uint32_t [ MAGIC_SETS ]	nmagic
ANR	407964	DeclStmt									
ANR	407965	Decl							int	int [ FILE_NAMES_SIZE ]	file_formats
ANR	407966	DeclStmt									
ANR	407967	Decl							const size_t	const size_t	file_nformats
ANR	407968	DeclStmt									
ANR	407969	Decl							const char	const char * [ FILE_NAMES_SIZE ]	file_names
ANR	407970	DeclStmt									
ANR	407971	Decl							const size_t	const size_t	file_nnames
ANR	407972	DeclStmt									
ANR	407973	Decl							int	"int ( struct magic_set * ms , struct magic * , const char * * , int )"	getvalue
ANR	407974	DeclStmt									
ANR	407975	Decl							int	int ( int )	hextoint
ANR	407976	DeclStmt									
ANR	407977	Decl							const char	"const char * ( struct magic_set * , struct magic * , const char * , int )"	getstr
ANR	407978	DeclStmt									
ANR	407979	Decl							int	"int ( struct magic_set * , struct magic_entry * , const char * , size_t , int )"	parse
ANR	407980	DeclStmt									
ANR	407981	Decl							void	void ( const char * * )	eatsize
ANR	407982	DeclStmt									
ANR	407983	Decl							int	"int ( struct magic_set * , const char * , int )"	apprentice_1
ANR	407984	DeclStmt									
ANR	407985	Decl							size_t	size_t ( const struct magic * )	apprentice_magic_strength
ANR	407986	DeclStmt									
ANR	407987	Decl							int	"int ( const void * , const void * )"	apprentice_sort
ANR	407988	DeclStmt									
ANR	407989	Decl							void	"void ( struct mlist * , int )"	apprentice_list
ANR	407990	DeclStmt									
ANR	407991	Decl							struct magic_map	"struct magic_map * ( struct magic_set * , const char * , int )"	apprentice_load
ANR	407992	DeclStmt									
ANR	407993	Decl							struct mlist	struct mlist * ( void )	mlist_alloc
ANR	407994	DeclStmt									
ANR	407995	Decl							void	void ( struct mlist * )	mlist_free
ANR	407996	DeclStmt									
ANR	407997	Decl							void	"void ( struct magic * , uint32_t )"	byteswap
ANR	407998	DeclStmt									
ANR	407999	Decl							void	void ( struct magic * )	bs1
ANR	408000	DeclStmt									
ANR	408001	Decl							uint16_t	uint16_t ( uint16_t )	swap2
ANR	408002	DeclStmt									
ANR	408003	Decl							uint32_t	uint32_t ( uint32_t )	swap4
ANR	408004	DeclStmt									
ANR	408005	Decl							uint64_t	uint64_t ( uint64_t )	swap8
ANR	408006	DeclStmt									
ANR	408007	Decl							char	"char * ( struct magic_set * , const char * , int )"	mkdbname
ANR	408008	DeclStmt									
ANR	408009	Decl							struct magic_map	"struct magic_map * ( struct magic_set * , struct magic * , size_t )"	apprentice_buf
ANR	408010	DeclStmt									
ANR	408011	Decl							struct magic_map	"struct magic_map * ( struct magic_set * , const char * )"	apprentice_map
ANR	408012	DeclStmt									
ANR	408013	Decl							int	"int ( struct magic_set * , struct magic_map * , const char * )"	check_buffer
ANR	408014	DeclStmt									
ANR	408015	Decl							void	void ( struct magic_map * )	apprentice_unmap
ANR	408016	DeclStmt									
ANR	408017	Decl							int	"int ( struct magic_set * , struct magic_map * , const char * )"	apprentice_compile
ANR	408018	DeclStmt									
ANR	408019	Decl							int	"int ( const char * , int )"	check_format_type
ANR	408020	DeclStmt									
ANR	408021	Decl							int	"int ( struct magic_set * , struct magic * )"	check_format
ANR	408022	DeclStmt									
ANR	408023	Decl							int	int ( char )	get_op
ANR	408024	DeclStmt									
ANR	408025	Decl							int	"int ( struct magic_set * , struct magic_entry * , const char * )"	parse_mime
ANR	408026	DeclStmt									
ANR	408027	Decl							int	"int ( struct magic_set * , struct magic_entry * , const char * )"	parse_strength
ANR	408028	DeclStmt									
ANR	408029	Decl							int	"int ( struct magic_set * , struct magic_entry * , const char * )"	parse_apple
ANR	408030	DeclStmt									
ANR	408031	Decl							size_t	size_t	magicsize
ANR	408032	DeclStmt									
ANR	408033	Decl							const char	const char [ ]	usg_hdr
ANR	408034	ClassDef	<unnamed>	163:8:5228:5538							
ANR	408035	DeclStmt									
ANR	408036	Decl							const char	const char *	name
ANR	408037	DeclStmt									
ANR	408038	Decl							size_t	size_t	len
ANR	408039	DeclStmt									
ANR	408040	Decl							"int ( * ) ( struct magic_set * , struct magic_entry * , const char * )"	"int ( * ) ( struct magic_set * , struct magic_entry * , const char * )"	fun
ANR	408041	DeclStmt									
ANR	408042	Decl								 [ ]	bang
ANR	408043	ClassDef	type_tbl_s	178:0:5568:5665							
ANR	408044	DeclStmt									
ANR	408045	Decl							const char	const char [ 16 ]	name
ANR	408046	DeclStmt									
ANR	408047	Decl							const size_t	const size_t	len
ANR	408048	DeclStmt									
ANR	408049	Decl							const int	const int	type
ANR	408050	DeclStmt									
ANR	408051	Decl							const int	const int	format
ANR	408052	DeclStmt									
ANR	408053	Decl							const struct type_tbl_s	const struct type_tbl_s [ ]	type_tbl
ANR	408054	DeclStmt									
ANR	408055	Decl							const struct type_tbl_s	const struct type_tbl_s [ ]	special_tbl
ANR	408056	Function	get_type	262:8:8870:9113							
ANR	408057	FunctionDef	"get_type (const struct type_tbl_s * tbl , const char * l , const char * * t)"		408056	0					
ANR	408058	CompoundStatement		264:0:8944:9113	408056	0					
ANR	408059	IdentifierDeclStatement	const struct type_tbl_s * p ;	265:1:8947:8973	408056	0	True				
ANR	408060	IdentifierDecl	* p		408056	0					
ANR	408061	IdentifierDeclType	const struct type_tbl_s *		408056	0					
ANR	408062	Identifier	p		408056	1					
ANR	408063	ForStatement	for ( p = tbl ; p -> len ; p ++ )		408056	1					
ANR	408064	ForInit	p = tbl ;	267:6:8982:8989	408056	0	True				
ANR	408065	AssignmentExpression	p = tbl		408056	0		=			
ANR	408066	Identifier	p		408056	0					
ANR	408067	Identifier	tbl		408056	1					
ANR	408068	Condition	p -> len	267:15:8991:8996	408056	1	True				
ANR	408069	PtrMemberAccess	p -> len		408056	0					
ANR	408070	Identifier	p		408056	0					
ANR	408071	Identifier	len		408056	1					
ANR	408072	PostIncDecOperationExpression	p ++	267:23:8999:9001	408056	2	True				
ANR	408073	Identifier	p		408056	0					
ANR	408074	IncDec	++		408056	1					
ANR	408075	CompoundStatement		4:28:59:59	408056	3					
ANR	408076	IfStatement	"if ( strncmp ( l , p -> name , p -> len ) == 0 )"		408056	0					
ANR	408077	Condition	"strncmp ( l , p -> name , p -> len ) == 0"	268:6:9012:9043	408056	0	True				
ANR	408078	EqualityExpression	"strncmp ( l , p -> name , p -> len ) == 0"		408056	0		==			
ANR	408079	CallExpression	"strncmp ( l , p -> name , p -> len )"		408056	0					
ANR	408080	Callee	strncmp		408056	0					
ANR	408081	Identifier	strncmp		408056	0					
ANR	408082	ArgumentList	l		408056	1					
ANR	408083	Argument	l		408056	0					
ANR	408084	Identifier	l		408056	0					
ANR	408085	Argument	p -> name		408056	1					
ANR	408086	PtrMemberAccess	p -> name		408056	0					
ANR	408087	Identifier	p		408056	0					
ANR	408088	Identifier	name		408056	1					
ANR	408089	Argument	p -> len		408056	2					
ANR	408090	PtrMemberAccess	p -> len		408056	0					
ANR	408091	Identifier	p		408056	0					
ANR	408092	Identifier	len		408056	1					
ANR	408093	PrimaryExpression	0		408056	1					
ANR	408094	CompoundStatement		5:40:101:101	408056	1					
ANR	408095	IfStatement	if ( t )		408056	0					
ANR	408096	Condition	t	269:7:9055:9055	408056	0	True				
ANR	408097	Identifier	t		408056	0					
ANR	408098	ExpressionStatement	* t = l + p -> len	270:4:9062:9077	408056	1	True				
ANR	408099	AssignmentExpression	* t = l + p -> len		408056	0		=			
ANR	408100	UnaryOperationExpression	* t		408056	0					
ANR	408101	UnaryOperator	*		408056	0					
ANR	408102	Identifier	t		408056	1					
ANR	408103	AdditiveExpression	l + p -> len		408056	1		+			
ANR	408104	Identifier	l		408056	0					
ANR	408105	PtrMemberAccess	p -> len		408056	1					
ANR	408106	Identifier	p		408056	0					
ANR	408107	Identifier	len		408056	1					
ANR	408108	BreakStatement	break ;	271:3:9082:9087	408056	1	True				
ANR	408109	ReturnStatement	return p -> type ;	274:1:9097:9111	408056	2	True				
ANR	408110	PtrMemberAccess	p -> type		408056	0					
ANR	408111	Identifier	p		408056	0					
ANR	408112	Identifier	type		408056	1					
ANR	408113	ReturnType	int		408056	1					
ANR	408114	Identifier	get_type		408056	2					
ANR	408115	ParameterList	"const struct type_tbl_s * tbl , const char * l , const char * * t"		408056	3					
ANR	408116	Parameter	const struct type_tbl_s * tbl	263:9:8883:8910	408056	0	True				
ANR	408117	ParameterType	const struct type_tbl_s *		408056	0					
ANR	408118	Identifier	tbl		408056	1					
ANR	408119	Parameter	const char * l	263:39:8913:8925	408056	1	True				
ANR	408120	ParameterType	const char *		408056	0					
ANR	408121	Identifier	l		408056	1					
ANR	408122	Parameter	const char * * t	263:54:8928:8941	408056	2	True				
ANR	408123	ParameterType	const char * *		408056	0					
ANR	408124	Identifier	t		408056	1					
ANR	408125	CFGEntryNode	ENTRY		408056		True				
ANR	408126	CFGExitNode	EXIT		408056		True				
ANR	408127	Symbol	p		408056						
ANR	408128	Symbol	strncmp		408056						
ANR	408129	Symbol	t		408056						
ANR	408130	Symbol	p -> len		408056						
ANR	408131	Symbol	* p		408056						
ANR	408132	Symbol	p -> name		408056						
ANR	408133	Symbol	l		408056						
ANR	408134	Symbol	p -> type		408056						
ANR	408135	Symbol	* t		408056						
ANR	408136	Symbol	tbl		408056						
ANR	408137	Function	get_standard_integer_type	277:8:9124:10991							
ANR	408138	FunctionDef	"get_standard_integer_type (const char * l , const char * * t)"		408137	0					
ANR	408139	CompoundStatement		279:0:9185:10991	408137	0					
ANR	408140	IdentifierDeclStatement	int type ;	280:1:9188:9196	408137	0	True				
ANR	408141	IdentifierDecl	type		408137	0					
ANR	408142	IdentifierDeclType	int		408137	0					
ANR	408143	Identifier	type		408137	1					
ANR	408144	IfStatement	if ( isalpha ( ( unsigned char ) l [ 1 ] ) )		408137	1					
ANR	408145	Condition	isalpha ( ( unsigned char ) l [ 1 ] )	282:5:9204:9231	408137	0	True				
ANR	408146	CallExpression	isalpha ( ( unsigned char ) l [ 1 ] )		408137	0					
ANR	408147	Callee	isalpha		408137	0					
ANR	408148	Identifier	isalpha		408137	0					
ANR	408149	ArgumentList	( unsigned char ) l [ 1 ]		408137	1					
ANR	408150	Argument	( unsigned char ) l [ 1 ]		408137	0					
ANR	408151	CastExpression	( unsigned char ) l [ 1 ]		408137	0					
ANR	408152	CastTarget	unsigned char		408137	0					
ANR	408153	ArrayIndexing	l [ 1 ]		408137	1					
ANR	408154	Identifier	l		408137	0					
ANR	408155	PrimaryExpression	1		408137	1					
ANR	408156	CompoundStatement		4:35:48:48	408137	1					
ANR	408157	SwitchStatement	switch ( l [ 1 ] )		408137	0					
ANR	408158	Condition	l [ 1 ]	283:10:9246:9249	408137	0	True				
ANR	408159	ArrayIndexing	l [ 1 ]		408137	0					
ANR	408160	Identifier	l		408137	0					
ANR	408161	PrimaryExpression	1		408137	1					
ANR	408162	CompoundStatement		5:16:66:66	408137	1					
ANR	408163	Label	case 'C' :	284:2:9256:9264	408137	0	True				
ANR	408164	ExpressionStatement	type = FILE_BYTE	286:3:9292:9308	408137	1	True				
ANR	408165	AssignmentExpression	type = FILE_BYTE		408137	0		=			
ANR	408166	Identifier	type		408137	0					
ANR	408167	Identifier	FILE_BYTE		408137	1					
ANR	408168	BreakStatement	break ;	287:3:9313:9318	408137	2	True				
ANR	408169	Label	case 'S' :	288:2:9322:9330	408137	3	True				
ANR	408170	ExpressionStatement	type = FILE_SHORT	290:3:9358:9375	408137	4	True				
ANR	408171	AssignmentExpression	type = FILE_SHORT		408137	0		=			
ANR	408172	Identifier	type		408137	0					
ANR	408173	Identifier	FILE_SHORT		408137	1					
ANR	408174	BreakStatement	break ;	291:3:9380:9385	408137	5	True				
ANR	408175	Label	case 'I' :	292:2:9389:9397	408137	6	True				
ANR	408176	Label	case 'L' :	293:2:9401:9409	408137	7	True				
ANR	408177	ExpressionStatement	type = FILE_LONG	306:3:9850:9866	408137	8	True				
ANR	408178	AssignmentExpression	type = FILE_LONG		408137	0		=			
ANR	408179	Identifier	type		408137	0					
ANR	408180	Identifier	FILE_LONG		408137	1					
ANR	408181	BreakStatement	break ;	307:3:9871:9876	408137	9	True				
ANR	408182	Label	case 'Q' :	308:2:9880:9888	408137	10	True				
ANR	408183	ExpressionStatement	type = FILE_QUAD	310:3:9916:9932	408137	11	True				
ANR	408184	AssignmentExpression	type = FILE_QUAD		408137	0		=			
ANR	408185	Identifier	type		408137	0					
ANR	408186	Identifier	FILE_QUAD		408137	1					
ANR	408187	BreakStatement	break ;	311:3:9937:9942	408137	12	True				
ANR	408188	Label	default :	312:2:9946:9953	408137	13	True				
ANR	408189	Identifier	default		408137	0					
ANR	408190	ReturnStatement	return FILE_INVALID ;	314:3:10006:10025	408137	14	True				
ANR	408191	Identifier	FILE_INVALID		408137	0					
ANR	408192	ExpressionStatement	l += 2	316:2:10033:10039	408137	1	True				
ANR	408193	AssignmentExpression	l += 2		408137	0		+=			
ANR	408194	Identifier	l		408137	0					
ANR	408195	PrimaryExpression	2		408137	1					
ANR	408196	ElseStatement	else		408137	0					
ANR	408197	IfStatement	if ( isdigit ( ( unsigned char ) l [ 1 ] ) )		408137	0					
ANR	408198	Condition	isdigit ( ( unsigned char ) l [ 1 ] )	317:12:10053:10080	408137	0	True				
ANR	408199	CallExpression	isdigit ( ( unsigned char ) l [ 1 ] )		408137	0					
ANR	408200	Callee	isdigit		408137	0					
ANR	408201	Identifier	isdigit		408137	0					
ANR	408202	ArgumentList	( unsigned char ) l [ 1 ]		408137	1					
ANR	408203	Argument	( unsigned char ) l [ 1 ]		408137	0					
ANR	408204	CastExpression	( unsigned char ) l [ 1 ]		408137	0					
ANR	408205	CastTarget	unsigned char		408137	0					
ANR	408206	ArrayIndexing	l [ 1 ]		408137	1					
ANR	408207	Identifier	l		408137	0					
ANR	408208	PrimaryExpression	1		408137	1					
ANR	408209	CompoundStatement		39:42:897:897	408137	1					
ANR	408210	IfStatement	if ( isdigit ( ( unsigned char ) l [ 2 ] ) )		408137	0					
ANR	408211	Condition	isdigit ( ( unsigned char ) l [ 2 ] )	328:6:10511:10538	408137	0	True				
ANR	408212	CallExpression	isdigit ( ( unsigned char ) l [ 2 ] )		408137	0					
ANR	408213	Callee	isdigit		408137	0					
ANR	408214	Identifier	isdigit		408137	0					
ANR	408215	ArgumentList	( unsigned char ) l [ 2 ]		408137	1					
ANR	408216	Argument	( unsigned char ) l [ 2 ]		408137	0					
ANR	408217	CastExpression	( unsigned char ) l [ 2 ]		408137	0					
ANR	408218	CastTarget	unsigned char		408137	0					
ANR	408219	ArrayIndexing	l [ 2 ]		408137	1					
ANR	408220	Identifier	l		408137	0					
ANR	408221	PrimaryExpression	2		408137	1					
ANR	408222	CompoundStatement		50:36:1355:1355	408137	1					
ANR	408223	ReturnStatement	return FILE_INVALID ;	330:3:10575:10594	408137	0	True				
ANR	408224	Identifier	FILE_INVALID		408137	0					
ANR	408225	SwitchStatement	switch ( l [ 1 ] )		408137	1					
ANR	408226	Condition	l [ 1 ]	332:10:10610:10613	408137	0	True				
ANR	408227	ArrayIndexing	l [ 1 ]		408137	0					
ANR	408228	Identifier	l		408137	0					
ANR	408229	PrimaryExpression	1		408137	1					
ANR	408230	CompoundStatement		54:16:1430:1430	408137	1					
ANR	408231	Label	case '1' :	333:2:10620:10628	408137	0	True				
ANR	408232	ExpressionStatement	type = FILE_BYTE	334:3:10633:10649	408137	1	True				
ANR	408233	AssignmentExpression	type = FILE_BYTE		408137	0		=			
ANR	408234	Identifier	type		408137	0					
ANR	408235	Identifier	FILE_BYTE		408137	1					
ANR	408236	BreakStatement	break ;	335:3:10654:10659	408137	2	True				
ANR	408237	Label	case '2' :	336:2:10663:10671	408137	3	True				
ANR	408238	ExpressionStatement	type = FILE_SHORT	337:3:10676:10693	408137	4	True				
ANR	408239	AssignmentExpression	type = FILE_SHORT		408137	0		=			
ANR	408240	Identifier	type		408137	0					
ANR	408241	Identifier	FILE_SHORT		408137	1					
ANR	408242	BreakStatement	break ;	338:3:10698:10703	408137	5	True				
ANR	408243	Label	case '4' :	339:2:10707:10715	408137	6	True				
ANR	408244	ExpressionStatement	type = FILE_LONG	340:3:10720:10736	408137	7	True				
ANR	408245	AssignmentExpression	type = FILE_LONG		408137	0		=			
ANR	408246	Identifier	type		408137	0					
ANR	408247	Identifier	FILE_LONG		408137	1					
ANR	408248	BreakStatement	break ;	341:3:10741:10746	408137	8	True				
ANR	408249	Label	case '8' :	342:2:10750:10758	408137	9	True				
ANR	408250	ExpressionStatement	type = FILE_QUAD	343:3:10763:10779	408137	10	True				
ANR	408251	AssignmentExpression	type = FILE_QUAD		408137	0		=			
ANR	408252	Identifier	type		408137	0					
ANR	408253	Identifier	FILE_QUAD		408137	1					
ANR	408254	BreakStatement	break ;	344:3:10784:10789	408137	11	True				
ANR	408255	Label	default :	345:2:10793:10800	408137	12	True				
ANR	408256	Identifier	default		408137	0					
ANR	408257	ReturnStatement	return FILE_INVALID ;	347:3:10846:10865	408137	13	True				
ANR	408258	Identifier	FILE_INVALID		408137	0					
ANR	408259	ExpressionStatement	l += 2	349:2:10873:10879	408137	2	True				
ANR	408260	AssignmentExpression	l += 2		408137	0		+=			
ANR	408261	Identifier	l		408137	0					
ANR	408262	PrimaryExpression	2		408137	1					
ANR	408263	ElseStatement	else		408137	0					
ANR	408264	CompoundStatement		72:8:1703:1703	408137	0					
ANR	408265	ExpressionStatement	type = FILE_LONG	354:2:10931:10947	408137	0	True				
ANR	408266	AssignmentExpression	type = FILE_LONG		408137	0		=			
ANR	408267	Identifier	type		408137	0					
ANR	408268	Identifier	FILE_LONG		408137	1					
ANR	408269	ExpressionStatement	++ l	355:2:10951:10954	408137	1	True				
ANR	408270	UnaryExpression	++ l		408137	0					
ANR	408271	IncDec	++		408137	0					
ANR	408272	Identifier	l		408137	1					
ANR	408273	IfStatement	if ( t )		408137	2					
ANR	408274	Condition	t	357:5:10964:10964	408137	0	True				
ANR	408275	Identifier	t		408137	0					
ANR	408276	ExpressionStatement	* t = l	358:2:10969:10975	408137	1	True				
ANR	408277	AssignmentExpression	* t = l		408137	0		=			
ANR	408278	UnaryOperationExpression	* t		408137	0					
ANR	408279	UnaryOperator	*		408137	0					
ANR	408280	Identifier	t		408137	1					
ANR	408281	Identifier	l		408137	1					
ANR	408282	ReturnStatement	return type ;	359:1:10978:10989	408137	3	True				
ANR	408283	Identifier	type		408137	0					
ANR	408284	ReturnType	int		408137	1					
ANR	408285	Identifier	get_standard_integer_type		408137	2					
ANR	408286	ParameterList	"const char * l , const char * * t"		408137	3					
ANR	408287	Parameter	const char * l	278:26:9154:9166	408137	0	True				
ANR	408288	ParameterType	const char *		408137	0					
ANR	408289	Identifier	l		408137	1					
ANR	408290	Parameter	const char * * t	278:41:9169:9182	408137	1	True				
ANR	408291	ParameterType	const char * *		408137	0					
ANR	408292	Identifier	t		408137	1					
ANR	408293	CFGEntryNode	ENTRY		408137		True				
ANR	408294	CFGExitNode	EXIT		408137		True				
ANR	408295	Symbol	FILE_INVALID		408137						
ANR	408296	Symbol	isalpha		408137						
ANR	408297	Symbol	t		408137						
ANR	408298	Symbol	FILE_BYTE		408137						
ANR	408299	Symbol	* l		408137						
ANR	408300	Symbol	FILE_SHORT		408137						
ANR	408301	Symbol	l		408137						
ANR	408302	Symbol	type		408137						
ANR	408303	Symbol	FILE_LONG		408137						
ANR	408304	Symbol	isdigit		408137						
ANR	408305	Symbol	FILE_QUAD		408137						
ANR	408306	Symbol	* t		408137						
ANR	408307	Function	init_file_tables	362:8:11002:11302							
ANR	408308	FunctionDef	init_file_tables ()		408307	0					
ANR	408309	CompoundStatement		364:0:11030:11302	408307	0					
ANR	408310	Statement	static	365:1:11033:11038	408307	0	True				
ANR	408311	IdentifierDeclStatement	int done = 0 ;	365:8:11040:11052	408307	1	True				
ANR	408312	IdentifierDecl	done = 0		408307	0					
ANR	408313	IdentifierDeclType	int		408307	0					
ANR	408314	Identifier	done		408307	1					
ANR	408315	AssignmentExpression	done = 0		408307	2		=			
ANR	408316	Identifier	done		408307	0					
ANR	408317	PrimaryExpression	0		408307	1					
ANR	408318	IdentifierDeclStatement	const struct type_tbl_s * p ;	366:1:11055:11081	408307	2	True				
ANR	408319	IdentifierDecl	* p		408307	0					
ANR	408320	IdentifierDeclType	const struct type_tbl_s *		408307	0					
ANR	408321	Identifier	p		408307	1					
ANR	408322	IfStatement	if ( done )		408307	3					
ANR	408323	Condition	done	368:5:11089:11092	408307	0	True				
ANR	408324	Identifier	done		408307	0					
ANR	408325	ReturnStatement	return ;	369:2:11097:11103	408307	1	True				
ANR	408326	ExpressionStatement	done ++	370:1:11106:11112	408307	4	True				
ANR	408327	PostIncDecOperationExpression	done ++		408307	0					
ANR	408328	Identifier	done		408307	0					
ANR	408329	IncDec	++		408307	1					
ANR	408330	ForStatement	for ( p = type_tbl ; p -> len ; p ++ )		408307	5					
ANR	408331	ForInit	p = type_tbl ;	372:6:11121:11133	408307	0	True				
ANR	408332	AssignmentExpression	p = type_tbl		408307	0		=			
ANR	408333	Identifier	p		408307	0					
ANR	408334	Identifier	type_tbl		408307	1					
ANR	408335	Condition	p -> len	372:20:11135:11140	408307	1	True				
ANR	408336	PtrMemberAccess	p -> len		408307	0					
ANR	408337	Identifier	p		408307	0					
ANR	408338	Identifier	len		408307	1					
ANR	408339	PostIncDecOperationExpression	p ++	372:28:11143:11145	408307	2	True				
ANR	408340	Identifier	p		408307	0					
ANR	408341	IncDec	++		408307	1					
ANR	408342	CompoundStatement		9:33:117:117	408307	3					
ANR	408343	ExpressionStatement	assert ( p -> type < FILE_NAMES_SIZE )	373:2:11152:11185	408307	0	True				
ANR	408344	CallExpression	assert ( p -> type < FILE_NAMES_SIZE )		408307	0					
ANR	408345	Callee	assert		408307	0					
ANR	408346	Identifier	assert		408307	0					
ANR	408347	ArgumentList	p -> type < FILE_NAMES_SIZE		408307	1					
ANR	408348	Argument	p -> type < FILE_NAMES_SIZE		408307	0					
ANR	408349	RelationalExpression	p -> type < FILE_NAMES_SIZE		408307	0		<			
ANR	408350	PtrMemberAccess	p -> type		408307	0					
ANR	408351	Identifier	p		408307	0					
ANR	408352	Identifier	type		408307	1					
ANR	408353	Identifier	FILE_NAMES_SIZE		408307	1					
ANR	408354	ExpressionStatement	file_names [ p -> type ] = p -> name	374:2:11189:11218	408307	1	True				
ANR	408355	AssignmentExpression	file_names [ p -> type ] = p -> name		408307	0		=			
ANR	408356	ArrayIndexing	file_names [ p -> type ]		408307	0					
ANR	408357	Identifier	file_names		408307	0					
ANR	408358	PtrMemberAccess	p -> type		408307	1					
ANR	408359	Identifier	p		408307	0					
ANR	408360	Identifier	type		408307	1					
ANR	408361	PtrMemberAccess	p -> name		408307	1					
ANR	408362	Identifier	p		408307	0					
ANR	408363	Identifier	name		408307	1					
ANR	408364	ExpressionStatement	file_formats [ p -> type ] = p -> format	375:2:11222:11255	408307	2	True				
ANR	408365	AssignmentExpression	file_formats [ p -> type ] = p -> format		408307	0		=			
ANR	408366	ArrayIndexing	file_formats [ p -> type ]		408307	0					
ANR	408367	Identifier	file_formats		408307	0					
ANR	408368	PtrMemberAccess	p -> type		408307	1					
ANR	408369	Identifier	p		408307	0					
ANR	408370	Identifier	type		408307	1					
ANR	408371	PtrMemberAccess	p -> format		408307	1					
ANR	408372	Identifier	p		408307	0					
ANR	408373	Identifier	format		408307	1					
ANR	408374	ExpressionStatement	assert ( p - type_tbl == FILE_NAMES_SIZE )	377:1:11261:11300	408307	6	True				
ANR	408375	CallExpression	assert ( p - type_tbl == FILE_NAMES_SIZE )		408307	0					
ANR	408376	Callee	assert		408307	0					
ANR	408377	Identifier	assert		408307	0					
ANR	408378	ArgumentList	p - type_tbl == FILE_NAMES_SIZE		408307	1					
ANR	408379	Argument	p - type_tbl == FILE_NAMES_SIZE		408307	0					
ANR	408380	EqualityExpression	p - type_tbl == FILE_NAMES_SIZE		408307	0		==			
ANR	408381	AdditiveExpression	p - type_tbl		408307	0		-			
ANR	408382	Identifier	p		408307	0					
ANR	408383	Identifier	type_tbl		408307	1					
ANR	408384	Identifier	FILE_NAMES_SIZE		408307	1					
ANR	408385	ReturnType	void		408307	1					
ANR	408386	Identifier	init_file_tables		408307	2					
ANR	408387	ParameterList			408307	3					
ANR	408388	CFGEntryNode	ENTRY		408307		True				
ANR	408389	CFGExitNode	EXIT		408307		True				
ANR	408390	Symbol	p -> format		408307						
ANR	408391	Symbol	file_names		408307						
ANR	408392	Symbol	file_formats		408307						
ANR	408393	Symbol	* file_names		408307						
ANR	408394	Symbol	FILE_NAMES_SIZE		408307						
ANR	408395	Symbol	* p -> type		408307						
ANR	408396	Symbol	type_tbl		408307						
ANR	408397	Symbol	* file_formats		408307						
ANR	408398	Symbol	done		408307						
ANR	408399	Symbol	p -> type		408307						
ANR	408400	Symbol	p		408307						
ANR	408401	Symbol	p -> len		408307						
ANR	408402	Symbol	* p		408307						
ANR	408403	Symbol	p -> name		408307						
ANR	408404	Symbol	* * p		408307						
ANR	408405	Function	add_mlist	380:8:11313:11687							
ANR	408406	FunctionDef	"add_mlist (struct mlist * mlp , struct magic_map * map , size_t idx)"		408405	0					
ANR	408407	CompoundStatement		382:0:11381:11687	408405	0					
ANR	408408	IdentifierDeclStatement	struct mlist * ml ;	383:1:11384:11400	408405	0	True				
ANR	408409	IdentifierDecl	* ml		408405	0					
ANR	408410	IdentifierDeclType	struct mlist *		408405	0					
ANR	408411	Identifier	ml		408405	1					
ANR	408412	ExpressionStatement	mlp -> map = idx == 0 ? map : NULL	385:1:11404:11436	408405	1	True				
ANR	408413	AssignmentExpression	mlp -> map = idx == 0 ? map : NULL		408405	0		=			
ANR	408414	PtrMemberAccess	mlp -> map		408405	0					
ANR	408415	Identifier	mlp		408405	0					
ANR	408416	Identifier	map		408405	1					
ANR	408417	ConditionalExpression	idx == 0 ? map : NULL		408405	1					
ANR	408418	Condition	idx == 0		408405	0					
ANR	408419	EqualityExpression	idx == 0		408405	0		==			
ANR	408420	Identifier	idx		408405	0					
ANR	408421	PrimaryExpression	0		408405	1					
ANR	408422	Identifier	map		408405	1					
ANR	408423	Identifier	NULL		408405	2					
ANR	408424	Statement	if	386:1:11439:11440	408405	2	True				
ANR	408425	Statement	(	386:4:11442:11442	408405	3	True				
ANR	408426	Statement	(	386:5:11443:11443	408405	4	True				
ANR	408427	Statement	ml	386:6:11444:11445	408405	5	True				
ANR	408428	Statement	=	386:9:11447:11447	408405	6	True				
ANR	408429	Statement	CAST	386:11:11449:11452	408405	7	True				
ANR	408430	Statement	(	386:15:11453:11453	408405	8	True				
ANR	408431	Statement	struct	386:16:11454:11459	408405	9	True				
ANR	408432	Statement	mlist	386:23:11461:11465	408405	10	True				
ANR	408433	Statement	*	386:29:11467:11467	408405	11	True				
ANR	408434	Statement	","	386:30:11468:11468	408405	12	True				
ANR	408435	Statement	emalloc	386:32:11470:11476	408405	13	True				
ANR	408436	Statement	(	386:39:11477:11477	408405	14	True				
ANR	408437	Statement	sizeof	386:40:11478:11483	408405	15	True				
ANR	408438	Statement	(	386:46:11484:11484	408405	16	True				
ANR	408439	Statement	*	386:47:11485:11485	408405	17	True				
ANR	408440	Statement	ml	386:48:11486:11487	408405	18	True				
ANR	408441	Statement	)	386:50:11488:11488	408405	19	True				
ANR	408442	Statement	)	386:51:11489:11489	408405	20	True				
ANR	408443	Statement	)	386:52:11490:11490	408405	21	True				
ANR	408444	Statement	)	386:53:11491:11491	408405	22	True				
ANR	408445	Statement	==	386:55:11493:11494	408405	23	True				
ANR	408446	Statement	NULL	386:58:11496:11499	408405	24	True				
ANR	408447	Statement	)	386:62:11500:11500	408405	25	True				
ANR	408448	ReturnStatement	return - 1 ;	387:2:11504:11513	408405	26	True				
ANR	408449	UnaryOperationExpression	- 1		408405	0					
ANR	408450	UnaryOperator	-		408405	0					
ANR	408451	PrimaryExpression	1		408405	1					
ANR	408452	ExpressionStatement	ml -> map = NULL	389:1:11517:11531	408405	27	True				
ANR	408453	AssignmentExpression	ml -> map = NULL		408405	0		=			
ANR	408454	PtrMemberAccess	ml -> map		408405	0					
ANR	408455	Identifier	ml		408405	0					
ANR	408456	Identifier	map		408405	1					
ANR	408457	Identifier	NULL		408405	1					
ANR	408458	ExpressionStatement	ml -> magic = map -> magic [ idx ]	390:1:11534:11561	408405	28	True				
ANR	408459	AssignmentExpression	ml -> magic = map -> magic [ idx ]		408405	0		=			
ANR	408460	PtrMemberAccess	ml -> magic		408405	0					
ANR	408461	Identifier	ml		408405	0					
ANR	408462	Identifier	magic		408405	1					
ANR	408463	ArrayIndexing	map -> magic [ idx ]		408405	1					
ANR	408464	PtrMemberAccess	map -> magic		408405	0					
ANR	408465	Identifier	map		408405	0					
ANR	408466	Identifier	magic		408405	1					
ANR	408467	Identifier	idx		408405	1					
ANR	408468	ExpressionStatement	ml -> nmagic = map -> nmagic [ idx ]	391:1:11564:11593	408405	29	True				
ANR	408469	AssignmentExpression	ml -> nmagic = map -> nmagic [ idx ]		408405	0		=			
ANR	408470	PtrMemberAccess	ml -> nmagic		408405	0					
ANR	408471	Identifier	ml		408405	0					
ANR	408472	Identifier	nmagic		408405	1					
ANR	408473	ArrayIndexing	map -> nmagic [ idx ]		408405	1					
ANR	408474	PtrMemberAccess	map -> nmagic		408405	0					
ANR	408475	Identifier	map		408405	0					
ANR	408476	Identifier	nmagic		408405	1					
ANR	408477	Identifier	idx		408405	1					
ANR	408478	ExpressionStatement	mlp -> prev -> next = ml	393:1:11597:11617	408405	30	True				
ANR	408479	AssignmentExpression	mlp -> prev -> next = ml		408405	0		=			
ANR	408480	PtrMemberAccess	mlp -> prev -> next		408405	0					
ANR	408481	PtrMemberAccess	mlp -> prev		408405	0					
ANR	408482	Identifier	mlp		408405	0					
ANR	408483	Identifier	prev		408405	1					
ANR	408484	Identifier	next		408405	1					
ANR	408485	Identifier	ml		408405	1					
ANR	408486	ExpressionStatement	ml -> prev = mlp -> prev	394:1:11620:11640	408405	31	True				
ANR	408487	AssignmentExpression	ml -> prev = mlp -> prev		408405	0		=			
ANR	408488	PtrMemberAccess	ml -> prev		408405	0					
ANR	408489	Identifier	ml		408405	0					
ANR	408490	Identifier	prev		408405	1					
ANR	408491	PtrMemberAccess	mlp -> prev		408405	1					
ANR	408492	Identifier	mlp		408405	0					
ANR	408493	Identifier	prev		408405	1					
ANR	408494	ExpressionStatement	ml -> next = mlp	395:1:11643:11657	408405	32	True				
ANR	408495	AssignmentExpression	ml -> next = mlp		408405	0		=			
ANR	408496	PtrMemberAccess	ml -> next		408405	0					
ANR	408497	Identifier	ml		408405	0					
ANR	408498	Identifier	next		408405	1					
ANR	408499	Identifier	mlp		408405	1					
ANR	408500	ExpressionStatement	mlp -> prev = ml	396:1:11660:11674	408405	33	True				
ANR	408501	AssignmentExpression	mlp -> prev = ml		408405	0		=			
ANR	408502	PtrMemberAccess	mlp -> prev		408405	0					
ANR	408503	Identifier	mlp		408405	0					
ANR	408504	Identifier	prev		408405	1					
ANR	408505	Identifier	ml		408405	1					
ANR	408506	ReturnStatement	return 0 ;	397:1:11677:11685	408405	34	True				
ANR	408507	PrimaryExpression	0		408405	0					
ANR	408508	ReturnType	int		408405	1					
ANR	408509	Identifier	add_mlist		408405	2					
ANR	408510	ParameterList	"struct mlist * mlp , struct magic_map * map , size_t idx"		408405	3					
ANR	408511	Parameter	struct mlist * mlp	381:10:11327:11343	408405	0	True				
ANR	408512	ParameterType	struct mlist *		408405	0					
ANR	408513	Identifier	mlp		408405	1					
ANR	408514	Parameter	struct magic_map * map	381:29:11346:11366	408405	1	True				
ANR	408515	ParameterType	struct magic_map *		408405	0					
ANR	408516	Identifier	map		408405	1					
ANR	408517	Parameter	size_t idx	381:52:11369:11378	408405	2	True				
ANR	408518	ParameterType	size_t		408405	0					
ANR	408519	Identifier	idx		408405	1					
ANR	408520	CFGEntryNode	ENTRY		408405		True				
ANR	408521	CFGExitNode	EXIT		408405		True				
ANR	408522	Symbol	NULL		408405						
ANR	408523	Symbol	ml -> map		408405						
ANR	408524	Symbol	* * mlp		408405						
ANR	408525	Symbol	ml -> next		408405						
ANR	408526	Symbol	* ml		408405						
ANR	408527	Symbol	* map		408405						
ANR	408528	Symbol	* map -> magic		408405						
ANR	408529	Symbol	ml -> prev		408405						
ANR	408530	Symbol	ml -> nmagic		408405						
ANR	408531	Symbol	mlp -> map		408405						
ANR	408532	Symbol	mlp		408405						
ANR	408533	Symbol	* * map		408405						
ANR	408534	Symbol	ml -> magic		408405						
ANR	408535	Symbol	mlp -> prev -> next		408405						
ANR	408536	Symbol	* idx		408405						
ANR	408537	Symbol	map -> magic		408405						
ANR	408538	Symbol	map -> nmagic		408405						
ANR	408539	Symbol	* mlp		408405						
ANR	408540	Symbol	idx		408405						
ANR	408541	Symbol	* map -> nmagic		408405						
ANR	408542	Symbol	map		408405						
ANR	408543	Symbol	mlp -> prev		408405						
ANR	408544	Symbol	ml		408405						
ANR	408545	Symbol	* mlp -> prev		408405						
ANR	408546	Function	apprentice_1	403:8:11738:12872							
ANR	408547	FunctionDef	"apprentice_1 (struct magic_set * ms , const char * fn , int action)"		408546	0					
ANR	408548	CompoundStatement		405:0:11805:12872	408546	0					
ANR	408549	IdentifierDeclStatement	struct magic_map * map ;	406:1:11808:11829	408546	0	True				
ANR	408550	IdentifierDecl	* map		408546	0					
ANR	408551	IdentifierDeclType	struct magic_map *		408546	0					
ANR	408552	Identifier	map		408546	1					
ANR	408553	IdentifierDeclStatement	struct mlist * ml ;	407:1:11832:11848	408546	1	True				
ANR	408554	IdentifierDecl	* ml		408546	0					
ANR	408555	IdentifierDeclType	struct mlist *		408546	0					
ANR	408556	Identifier	ml		408546	1					
ANR	408557	IdentifierDeclStatement	size_t i ;	408:1:11851:11859	408546	2	True				
ANR	408558	IdentifierDecl	i		408546	0					
ANR	408559	IdentifierDeclType	size_t		408546	0					
ANR	408560	Identifier	i		408546	1					
ANR	408561	IfStatement	if ( magicsize != FILE_MAGICSIZE )		408546	3					
ANR	408562	Condition	magicsize != FILE_MAGICSIZE	410:5:11867:11893	408546	0	True				
ANR	408563	EqualityExpression	magicsize != FILE_MAGICSIZE		408546	0		!=			
ANR	408564	Identifier	magicsize		408546	0					
ANR	408565	Identifier	FILE_MAGICSIZE		408546	1					
ANR	408566	CompoundStatement		6:34:90:90	408546	1					
ANR	408567	ExpressionStatement	"file_error ( ms , 0 , ""magic element size %lu != %lu"" , ( unsigned long ) sizeof ( * map -> magic [ 0 ] ) , ( unsigned long ) FILE_MAGICSIZE )"	411:2:11900:12032	408546	0	True				
ANR	408568	CallExpression	"file_error ( ms , 0 , ""magic element size %lu != %lu"" , ( unsigned long ) sizeof ( * map -> magic [ 0 ] ) , ( unsigned long ) FILE_MAGICSIZE )"		408546	0					
ANR	408569	Callee	file_error		408546	0					
ANR	408570	Identifier	file_error		408546	0					
ANR	408571	ArgumentList	ms		408546	1					
ANR	408572	Argument	ms		408546	0					
ANR	408573	Identifier	ms		408546	0					
ANR	408574	Argument	0		408546	1					
ANR	408575	PrimaryExpression	0		408546	0					
ANR	408576	Argument	"""magic element size %lu != %lu"""		408546	2					
ANR	408577	PrimaryExpression	"""magic element size %lu != %lu"""		408546	0					
ANR	408578	Argument	( unsigned long ) sizeof ( * map -> magic [ 0 ] )		408546	3					
ANR	408579	CastExpression	( unsigned long ) sizeof ( * map -> magic [ 0 ] )		408546	0					
ANR	408580	CastTarget	unsigned long		408546	0					
ANR	408581	SizeofExpression	sizeof ( * map -> magic [ 0 ] )		408546	1					
ANR	408582	Sizeof	sizeof		408546	0					
ANR	408583	UnaryOperationExpression	* map -> magic [ 0 ]		408546	1					
ANR	408584	UnaryOperator	*		408546	0					
ANR	408585	ArrayIndexing	map -> magic [ 0 ]		408546	1					
ANR	408586	PtrMemberAccess	map -> magic		408546	0					
ANR	408587	Identifier	map		408546	0					
ANR	408588	Identifier	magic		408546	1					
ANR	408589	PrimaryExpression	0		408546	1					
ANR	408590	Argument	( unsigned long ) FILE_MAGICSIZE		408546	4					
ANR	408591	CastExpression	( unsigned long ) FILE_MAGICSIZE		408546	0					
ANR	408592	CastTarget	unsigned long		408546	0					
ANR	408593	Identifier	FILE_MAGICSIZE		408546	1					
ANR	408594	ReturnStatement	return - 1 ;	414:2:12036:12045	408546	1	True				
ANR	408595	UnaryOperationExpression	- 1		408546	0					
ANR	408596	UnaryOperator	-		408546	0					
ANR	408597	PrimaryExpression	1		408546	1					
ANR	408598	IfStatement	if ( action == FILE_COMPILE )		408546	4					
ANR	408599	Condition	action == FILE_COMPILE	417:5:12056:12077	408546	0	True				
ANR	408600	EqualityExpression	action == FILE_COMPILE		408546	0		==			
ANR	408601	Identifier	action		408546	0					
ANR	408602	Identifier	FILE_COMPILE		408546	1					
ANR	408603	CompoundStatement		13:29:274:274	408546	1					
ANR	408604	ExpressionStatement	"map = apprentice_load ( ms , fn , action )"	418:2:12084:12121	408546	0	True				
ANR	408605	AssignmentExpression	"map = apprentice_load ( ms , fn , action )"		408546	0		=			
ANR	408606	Identifier	map		408546	0					
ANR	408607	CallExpression	"apprentice_load ( ms , fn , action )"		408546	1					
ANR	408608	Callee	apprentice_load		408546	0					
ANR	408609	Identifier	apprentice_load		408546	0					
ANR	408610	ArgumentList	ms		408546	1					
ANR	408611	Argument	ms		408546	0					
ANR	408612	Identifier	ms		408546	0					
ANR	408613	Argument	fn		408546	1					
ANR	408614	Identifier	fn		408546	0					
ANR	408615	Argument	action		408546	2					
ANR	408616	Identifier	action		408546	0					
ANR	408617	IfStatement	if ( map == NULL )		408546	1					
ANR	408618	Condition	map == NULL	419:6:12129:12139	408546	0	True				
ANR	408619	EqualityExpression	map == NULL		408546	0		==			
ANR	408620	Identifier	map		408546	0					
ANR	408621	Identifier	NULL		408546	1					
ANR	408622	ReturnStatement	return - 1 ;	420:3:12145:12154	408546	1	True				
ANR	408623	UnaryOperationExpression	- 1		408546	0					
ANR	408624	UnaryOperator	-		408546	0					
ANR	408625	PrimaryExpression	1		408546	1					
ANR	408626	ReturnStatement	"return apprentice_compile ( ms , map , fn ) ;"	421:2:12158:12196	408546	2	True				
ANR	408627	CallExpression	"apprentice_compile ( ms , map , fn )"		408546	0					
ANR	408628	Callee	apprentice_compile		408546	0					
ANR	408629	Identifier	apprentice_compile		408546	0					
ANR	408630	ArgumentList	ms		408546	1					
ANR	408631	Argument	ms		408546	0					
ANR	408632	Identifier	ms		408546	0					
ANR	408633	Argument	map		408546	1					
ANR	408634	Identifier	map		408546	0					
ANR	408635	Argument	fn		408546	2					
ANR	408636	Identifier	fn		408546	0					
ANR	408637	ExpressionStatement	"map = apprentice_map ( ms , fn )"	424:1:12203:12231	408546	5	True				
ANR	408638	AssignmentExpression	"map = apprentice_map ( ms , fn )"		408546	0		=			
ANR	408639	Identifier	map		408546	0					
ANR	408640	CallExpression	"apprentice_map ( ms , fn )"		408546	1					
ANR	408641	Callee	apprentice_map		408546	0					
ANR	408642	Identifier	apprentice_map		408546	0					
ANR	408643	ArgumentList	ms		408546	1					
ANR	408644	Argument	ms		408546	0					
ANR	408645	Identifier	ms		408546	0					
ANR	408646	Argument	fn		408546	1					
ANR	408647	Identifier	fn		408546	0					
ANR	408648	IfStatement	if ( map == NULL )		408546	6					
ANR	408649	Condition	map == NULL	425:5:12238:12248	408546	0	True				
ANR	408650	EqualityExpression	map == NULL		408546	0		==			
ANR	408651	Identifier	map		408546	0					
ANR	408652	Identifier	NULL		408546	1					
ANR	408653	CompoundStatement		21:18:445:445	408546	1					
ANR	408654	IfStatement	if ( fn )		408546	0					
ANR	408655	Condition	fn	426:6:12259:12260	408546	0	True				
ANR	408656	Identifier	fn		408546	0					
ANR	408657	CompoundStatement		22:10:457:457	408546	1					
ANR	408658	IfStatement	if ( ms -> flags & MAGIC_CHECK )		408546	0					
ANR	408659	Condition	ms -> flags & MAGIC_CHECK	427:7:12272:12294	408546	0	True				
ANR	408660	BitAndExpression	ms -> flags & MAGIC_CHECK		408546	0		&			
ANR	408661	PtrMemberAccess	ms -> flags		408546	0					
ANR	408662	Identifier	ms		408546	0					
ANR	408663	Identifier	flags		408546	1					
ANR	408664	Identifier	MAGIC_CHECK		408546	1					
ANR	408665	ExpressionStatement	"file_magwarn ( ms , ""using regular magic file `%s'"" , fn )"	428:4:12301:12354	408546	1	True				
ANR	408666	CallExpression	"file_magwarn ( ms , ""using regular magic file `%s'"" , fn )"		408546	0					
ANR	408667	Callee	file_magwarn		408546	0					
ANR	408668	Identifier	file_magwarn		408546	0					
ANR	408669	ArgumentList	ms		408546	1					
ANR	408670	Argument	ms		408546	0					
ANR	408671	Identifier	ms		408546	0					
ANR	408672	Argument	"""using regular magic file `%s'"""		408546	1					
ANR	408673	PrimaryExpression	"""using regular magic file `%s'"""		408546	0					
ANR	408674	Argument	fn		408546	2					
ANR	408675	Identifier	fn		408546	0					
ANR	408676	ExpressionStatement	"map = apprentice_load ( ms , fn , action )"	429:3:12359:12396	408546	1	True				
ANR	408677	AssignmentExpression	"map = apprentice_load ( ms , fn , action )"		408546	0		=			
ANR	408678	Identifier	map		408546	0					
ANR	408679	CallExpression	"apprentice_load ( ms , fn , action )"		408546	1					
ANR	408680	Callee	apprentice_load		408546	0					
ANR	408681	Identifier	apprentice_load		408546	0					
ANR	408682	ArgumentList	ms		408546	1					
ANR	408683	Argument	ms		408546	0					
ANR	408684	Identifier	ms		408546	0					
ANR	408685	Argument	fn		408546	1					
ANR	408686	Identifier	fn		408546	0					
ANR	408687	Argument	action		408546	2					
ANR	408688	Identifier	action		408546	0					
ANR	408689	IfStatement	if ( map == NULL )		408546	1					
ANR	408690	Condition	map == NULL	431:6:12408:12418	408546	0	True				
ANR	408691	EqualityExpression	map == NULL		408546	0		==			
ANR	408692	Identifier	map		408546	0					
ANR	408693	Identifier	NULL		408546	1					
ANR	408694	ReturnStatement	return - 1 ;	432:3:12424:12433	408546	1	True				
ANR	408695	UnaryOperationExpression	- 1		408546	0					
ANR	408696	UnaryOperator	-		408546	0					
ANR	408697	PrimaryExpression	1		408546	1					
ANR	408698	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		408546	7					
ANR	408699	ForInit	i = 0 ;	435:6:12445:12450	408546	0	True				
ANR	408700	AssignmentExpression	i = 0		408546	0		=			
ANR	408701	Identifier	i		408546	0					
ANR	408702	PrimaryExpression	0		408546	1					
ANR	408703	Condition	i < MAGIC_SETS	435:13:12452:12465	408546	1	True				
ANR	408704	RelationalExpression	i < MAGIC_SETS		408546	0		<			
ANR	408705	Identifier	i		408546	0					
ANR	408706	Identifier	MAGIC_SETS		408546	1					
ANR	408707	PostIncDecOperationExpression	i ++	435:29:12468:12470	408546	2	True				
ANR	408708	Identifier	i		408546	0					
ANR	408709	IncDec	++		408546	1					
ANR	408710	CompoundStatement		31:34:667:667	408546	3					
ANR	408711	IfStatement	"if ( add_mlist ( ms -> mlist [ i ] , map , i ) == - 1 )"		408546	0					
ANR	408712	Condition	"add_mlist ( ms -> mlist [ i ] , map , i ) == - 1"	436:6:12481:12517	408546	0	True				
ANR	408713	EqualityExpression	"add_mlist ( ms -> mlist [ i ] , map , i ) == - 1"		408546	0		==			
ANR	408714	CallExpression	"add_mlist ( ms -> mlist [ i ] , map , i )"		408546	0					
ANR	408715	Callee	add_mlist		408546	0					
ANR	408716	Identifier	add_mlist		408546	0					
ANR	408717	ArgumentList	ms -> mlist [ i ]		408546	1					
ANR	408718	Argument	ms -> mlist [ i ]		408546	0					
ANR	408719	ArrayIndexing	ms -> mlist [ i ]		408546	0					
ANR	408720	PtrMemberAccess	ms -> mlist		408546	0					
ANR	408721	Identifier	ms		408546	0					
ANR	408722	Identifier	mlist		408546	1					
ANR	408723	Identifier	i		408546	1					
ANR	408724	Argument	map		408546	1					
ANR	408725	Identifier	map		408546	0					
ANR	408726	Argument	i		408546	2					
ANR	408727	Identifier	i		408546	0					
ANR	408728	UnaryOperationExpression	- 1		408546	1					
ANR	408729	UnaryOperator	-		408546	0					
ANR	408730	PrimaryExpression	1		408546	1					
ANR	408731	CompoundStatement		32:45:714:714	408546	1					
ANR	408732	ExpressionStatement	"file_oomem ( ms , sizeof ( * ml ) )"	437:3:12525:12552	408546	0	True				
ANR	408733	CallExpression	"file_oomem ( ms , sizeof ( * ml ) )"		408546	0					
ANR	408734	Callee	file_oomem		408546	0					
ANR	408735	Identifier	file_oomem		408546	0					
ANR	408736	ArgumentList	ms		408546	1					
ANR	408737	Argument	ms		408546	0					
ANR	408738	Identifier	ms		408546	0					
ANR	408739	Argument	sizeof ( * ml )		408546	1					
ANR	408740	SizeofExpression	sizeof ( * ml )		408546	0					
ANR	408741	Sizeof	sizeof		408546	0					
ANR	408742	UnaryOperationExpression	* ml		408546	1					
ANR	408743	UnaryOperator	*		408546	0					
ANR	408744	Identifier	ml		408546	1					
ANR	408745	ExpressionStatement	apprentice_unmap ( map )	438:3:12557:12578	408546	1	True				
ANR	408746	CallExpression	apprentice_unmap ( map )		408546	0					
ANR	408747	Callee	apprentice_unmap		408546	0					
ANR	408748	Identifier	apprentice_unmap		408546	0					
ANR	408749	ArgumentList	map		408546	1					
ANR	408750	Argument	map		408546	0					
ANR	408751	Identifier	map		408546	0					
ANR	408752	ReturnStatement	return - 1 ;	439:3:12583:12592	408546	2	True				
ANR	408753	UnaryOperationExpression	- 1		408546	0					
ANR	408754	UnaryOperator	-		408546	0					
ANR	408755	PrimaryExpression	1		408546	1					
ANR	408756	IfStatement	if ( action == FILE_LIST )		408546	8					
ANR	408757	Condition	action == FILE_LIST	443:5:12607:12625	408546	0	True				
ANR	408758	EqualityExpression	action == FILE_LIST		408546	0		==			
ANR	408759	Identifier	action		408546	0					
ANR	408760	Identifier	FILE_LIST		408546	1					
ANR	408761	CompoundStatement		39:26:822:822	408546	1					
ANR	408762	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		408546	0					
ANR	408763	ForInit	i = 0 ;	444:7:12637:12642	408546	0	True				
ANR	408764	AssignmentExpression	i = 0		408546	0		=			
ANR	408765	Identifier	i		408546	0					
ANR	408766	PrimaryExpression	0		408546	1					
ANR	408767	Condition	i < MAGIC_SETS	444:14:12644:12657	408546	1	True				
ANR	408768	RelationalExpression	i < MAGIC_SETS		408546	0		<			
ANR	408769	Identifier	i		408546	0					
ANR	408770	Identifier	MAGIC_SETS		408546	1					
ANR	408771	PostIncDecOperationExpression	i ++	444:30:12660:12662	408546	2	True				
ANR	408772	Identifier	i		408546	0					
ANR	408773	IncDec	++		408546	1					
ANR	408774	CompoundStatement		40:35:859:859	408546	3					
ANR	408775	Statement	printf	445:3:12670:12675	408546	0	True				
ANR	408776	Statement	(	445:9:12676:12676	408546	1	True				
ANR	408777	Statement	"""Set %"""	445:10:12677:12683	408546	2	True				
ANR	408778	Statement	SIZE_T_FORMAT	445:18:12685:12697	408546	3	True				
ANR	408779	Statement	"""u:\\nBinary patterns:\\n"""	445:32:12699:12722	408546	4	True				
ANR	408780	Statement	","	445:56:12723:12723	408546	5	True				
ANR	408781	Statement	i	446:7:12732:12732	408546	6	True				
ANR	408782	Statement	)	446:8:12733:12733	408546	7	True				
ANR	408783	ExpressionStatement		446:9:12734:12734	408546	8	True				
ANR	408784	ExpressionStatement	"apprentice_list ( ms -> mlist [ i ] , BINTEST )"	447:3:12739:12777	408546	9	True				
ANR	408785	CallExpression	"apprentice_list ( ms -> mlist [ i ] , BINTEST )"		408546	0					
ANR	408786	Callee	apprentice_list		408546	0					
ANR	408787	Identifier	apprentice_list		408546	0					
ANR	408788	ArgumentList	ms -> mlist [ i ]		408546	1					
ANR	408789	Argument	ms -> mlist [ i ]		408546	0					
ANR	408790	ArrayIndexing	ms -> mlist [ i ]		408546	0					
ANR	408791	PtrMemberAccess	ms -> mlist		408546	0					
ANR	408792	Identifier	ms		408546	0					
ANR	408793	Identifier	mlist		408546	1					
ANR	408794	Identifier	i		408546	1					
ANR	408795	Argument	BINTEST		408546	1					
ANR	408796	Identifier	BINTEST		408546	0					
ANR	408797	ExpressionStatement	"printf ( ""Text patterns:\\n"" )"	448:3:12782:12808	408546	10	True				
ANR	408798	CallExpression	"printf ( ""Text patterns:\\n"" )"		408546	0					
ANR	408799	Callee	printf		408546	0					
ANR	408800	Identifier	printf		408546	0					
ANR	408801	ArgumentList	"""Text patterns:\\n"""		408546	1					
ANR	408802	Argument	"""Text patterns:\\n"""		408546	0					
ANR	408803	PrimaryExpression	"""Text patterns:\\n"""		408546	0					
ANR	408804	ExpressionStatement	"apprentice_list ( ms -> mlist [ i ] , TEXTTEST )"	449:3:12813:12852	408546	11	True				
ANR	408805	CallExpression	"apprentice_list ( ms -> mlist [ i ] , TEXTTEST )"		408546	0					
ANR	408806	Callee	apprentice_list		408546	0					
ANR	408807	Identifier	apprentice_list		408546	0					
ANR	408808	ArgumentList	ms -> mlist [ i ]		408546	1					
ANR	408809	Argument	ms -> mlist [ i ]		408546	0					
ANR	408810	ArrayIndexing	ms -> mlist [ i ]		408546	0					
ANR	408811	PtrMemberAccess	ms -> mlist		408546	0					
ANR	408812	Identifier	ms		408546	0					
ANR	408813	Identifier	mlist		408546	1					
ANR	408814	Identifier	i		408546	1					
ANR	408815	Argument	TEXTTEST		408546	1					
ANR	408816	Identifier	TEXTTEST		408546	0					
ANR	408817	ReturnStatement	return 0 ;	452:1:12862:12870	408546	9	True				
ANR	408818	PrimaryExpression	0		408546	0					
ANR	408819	ReturnType	int		408546	1					
ANR	408820	Identifier	apprentice_1		408546	2					
ANR	408821	ParameterList	"struct magic_set * ms , const char * fn , int action"		408546	3					
ANR	408822	Parameter	struct magic_set * ms	404:13:11755:11774	408546	0	True				
ANR	408823	ParameterType	struct magic_set *		408546	0					
ANR	408824	Identifier	ms		408546	1					
ANR	408825	Parameter	const char * fn	404:35:11777:11790	408546	1	True				
ANR	408826	ParameterType	const char *		408546	0					
ANR	408827	Identifier	fn		408546	1					
ANR	408828	Parameter	int action	404:51:11793:11802	408546	2	True				
ANR	408829	ParameterType	int		408546	0					
ANR	408830	Identifier	action		408546	1					
ANR	408831	CFGEntryNode	ENTRY		408546		True				
ANR	408832	CFGExitNode	EXIT		408546		True				
ANR	408833	Symbol	magicsize		408546						
ANR	408834	Symbol	MAGIC_SETS		408546						
ANR	408835	Symbol	* map		408546						
ANR	408836	Symbol	ms -> mlist		408546						
ANR	408837	Symbol	* ml		408546						
ANR	408838	Symbol	fn		408546						
ANR	408839	Symbol	* map -> magic [ 0 ]		408546						
ANR	408840	Symbol	add_mlist		408546						
ANR	408841	Symbol	* ms		408546						
ANR	408842	Symbol	* * ms		408546						
ANR	408843	Symbol	* * map -> magic		408546						
ANR	408844	Symbol	map -> magic		408546						
ANR	408845	Symbol	action		408546						
ANR	408846	Symbol	* * * map		408546						
ANR	408847	Symbol	FILE_COMPILE		408546						
ANR	408848	Symbol	map		408546						
ANR	408849	Symbol	TEXTTEST		408546						
ANR	408850	Symbol	ml		408546						
ANR	408851	Symbol	FILE_MAGICSIZE		408546						
ANR	408852	Symbol	NULL		408546						
ANR	408853	Symbol	FILE_LIST		408546						
ANR	408854	Symbol	apprentice_load		408546						
ANR	408855	Symbol	* ms -> mlist		408546						
ANR	408856	Symbol	ms		408546						
ANR	408857	Symbol	* map -> magic		408546						
ANR	408858	Symbol	BINTEST		408546						
ANR	408859	Symbol	i		408546						
ANR	408860	Symbol	* * map		408546						
ANR	408861	Symbol	apprentice_compile		408546						
ANR	408862	Symbol	* i		408546						
ANR	408863	Symbol	MAGIC_CHECK		408546						
ANR	408864	Symbol	ms -> flags		408546						
ANR	408865	Symbol	apprentice_map		408546						
ANR	408866	Function	file_ms_free	455:10:12885:13162							
ANR	408867	FunctionDef	file_ms_free (struct magic_set * ms)		408866	0					
ANR	408868	CompoundStatement		457:0:12925:13162	408866	0					
ANR	408869	IdentifierDeclStatement	size_t i ;	458:1:12928:12936	408866	0	True				
ANR	408870	IdentifierDecl	i		408866	0					
ANR	408871	IdentifierDeclType	size_t		408866	0					
ANR	408872	Identifier	i		408866	1					
ANR	408873	IfStatement	if ( ms == NULL )		408866	1					
ANR	408874	Condition	ms == NULL	459:5:12943:12952	408866	0	True				
ANR	408875	EqualityExpression	ms == NULL		408866	0		==			
ANR	408876	Identifier	ms		408866	0					
ANR	408877	Identifier	NULL		408866	1					
ANR	408878	ReturnStatement	return ;	460:2:12957:12963	408866	1	True				
ANR	408879	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		408866	2					
ANR	408880	ForInit	i = 0 ;	461:6:12971:12976	408866	0	True				
ANR	408881	AssignmentExpression	i = 0		408866	0		=			
ANR	408882	Identifier	i		408866	0					
ANR	408883	PrimaryExpression	0		408866	1					
ANR	408884	Condition	i < MAGIC_SETS	461:13:12978:12991	408866	1	True				
ANR	408885	RelationalExpression	i < MAGIC_SETS		408866	0		<			
ANR	408886	Identifier	i		408866	0					
ANR	408887	Identifier	MAGIC_SETS		408866	1					
ANR	408888	PostIncDecOperationExpression	i ++	461:29:12994:12996	408866	2	True				
ANR	408889	Identifier	i		408866	0					
ANR	408890	IncDec	++		408866	1					
ANR	408891	ExpressionStatement	mlist_free ( ms -> mlist [ i ] )	462:2:13001:13025	408866	3	True				
ANR	408892	CallExpression	mlist_free ( ms -> mlist [ i ] )		408866	0					
ANR	408893	Callee	mlist_free		408866	0					
ANR	408894	Identifier	mlist_free		408866	0					
ANR	408895	ArgumentList	ms -> mlist [ i ]		408866	1					
ANR	408896	Argument	ms -> mlist [ i ]		408866	0					
ANR	408897	ArrayIndexing	ms -> mlist [ i ]		408866	0					
ANR	408898	PtrMemberAccess	ms -> mlist		408866	0					
ANR	408899	Identifier	ms		408866	0					
ANR	408900	Identifier	mlist		408866	1					
ANR	408901	Identifier	i		408866	1					
ANR	408902	IfStatement	if ( ms -> o . pbuf )		408866	3					
ANR	408903	Condition	ms -> o . pbuf	463:5:13032:13041	408866	0	True				
ANR	408904	MemberAccess	ms -> o . pbuf		408866	0					
ANR	408905	PtrMemberAccess	ms -> o		408866	0					
ANR	408906	Identifier	ms		408866	0					
ANR	408907	Identifier	o		408866	1					
ANR	408908	Identifier	pbuf		408866	1					
ANR	408909	CompoundStatement		7:17:118:118	408866	1					
ANR	408910	ExpressionStatement	efree ( ms -> o . pbuf )	464:2:13048:13065	408866	0	True				
ANR	408911	CallExpression	efree ( ms -> o . pbuf )		408866	0					
ANR	408912	Callee	efree		408866	0					
ANR	408913	Identifier	efree		408866	0					
ANR	408914	ArgumentList	ms -> o . pbuf		408866	1					
ANR	408915	Argument	ms -> o . pbuf		408866	0					
ANR	408916	MemberAccess	ms -> o . pbuf		408866	0					
ANR	408917	PtrMemberAccess	ms -> o		408866	0					
ANR	408918	Identifier	ms		408866	0					
ANR	408919	Identifier	o		408866	1					
ANR	408920	Identifier	pbuf		408866	1					
ANR	408921	IfStatement	if ( ms -> o . buf )		408866	4					
ANR	408922	Condition	ms -> o . buf	466:5:13075:13083	408866	0	True				
ANR	408923	MemberAccess	ms -> o . buf		408866	0					
ANR	408924	PtrMemberAccess	ms -> o		408866	0					
ANR	408925	Identifier	ms		408866	0					
ANR	408926	Identifier	o		408866	1					
ANR	408927	Identifier	buf		408866	1					
ANR	408928	CompoundStatement		10:16:160:160	408866	1					
ANR	408929	ExpressionStatement	efree ( ms -> o . buf )	467:2:13090:13106	408866	0	True				
ANR	408930	CallExpression	efree ( ms -> o . buf )		408866	0					
ANR	408931	Callee	efree		408866	0					
ANR	408932	Identifier	efree		408866	0					
ANR	408933	ArgumentList	ms -> o . buf		408866	1					
ANR	408934	Argument	ms -> o . buf		408866	0					
ANR	408935	MemberAccess	ms -> o . buf		408866	0					
ANR	408936	PtrMemberAccess	ms -> o		408866	0					
ANR	408937	Identifier	ms		408866	0					
ANR	408938	Identifier	o		408866	1					
ANR	408939	Identifier	buf		408866	1					
ANR	408940	IfStatement	if ( ms -> c . li )		408866	5					
ANR	408941	Condition	ms -> c . li	469:5:13116:13123	408866	0	True				
ANR	408942	MemberAccess	ms -> c . li		408866	0					
ANR	408943	PtrMemberAccess	ms -> c		408866	0					
ANR	408944	Identifier	ms		408866	0					
ANR	408945	Identifier	c		408866	1					
ANR	408946	Identifier	li		408866	1					
ANR	408947	CompoundStatement		13:15:200:200	408866	1					
ANR	408948	ExpressionStatement	efree ( ms -> c . li )	470:2:13130:13145	408866	0	True				
ANR	408949	CallExpression	efree ( ms -> c . li )		408866	0					
ANR	408950	Callee	efree		408866	0					
ANR	408951	Identifier	efree		408866	0					
ANR	408952	ArgumentList	ms -> c . li		408866	1					
ANR	408953	Argument	ms -> c . li		408866	0					
ANR	408954	MemberAccess	ms -> c . li		408866	0					
ANR	408955	PtrMemberAccess	ms -> c		408866	0					
ANR	408956	Identifier	ms		408866	0					
ANR	408957	Identifier	c		408866	1					
ANR	408958	Identifier	li		408866	1					
ANR	408959	ExpressionStatement	efree ( ms )	472:1:13151:13160	408866	6	True				
ANR	408960	CallExpression	efree ( ms )		408866	0					
ANR	408961	Callee	efree		408866	0					
ANR	408962	Identifier	efree		408866	0					
ANR	408963	ArgumentList	ms		408866	1					
ANR	408964	Argument	ms		408866	0					
ANR	408965	Identifier	ms		408866	0					
ANR	408966	ReturnType	void		408866	1					
ANR	408967	Identifier	file_ms_free		408866	2					
ANR	408968	ParameterList	struct magic_set * ms		408866	3					
ANR	408969	Parameter	struct magic_set * ms	456:13:12903:12922	408866	0	True				
ANR	408970	ParameterType	struct magic_set *		408866	0					
ANR	408971	Identifier	ms		408866	1					
ANR	408972	CFGEntryNode	ENTRY		408866		True				
ANR	408973	CFGExitNode	EXIT		408866		True				
ANR	408974	Symbol	NULL		408866						
ANR	408975	Symbol	MAGIC_SETS		408866						
ANR	408976	Symbol	* ms -> mlist		408866						
ANR	408977	Symbol	ms		408866						
ANR	408978	Symbol	ms -> mlist		408866						
ANR	408979	Symbol	ms -> o		408866						
ANR	408980	Symbol	i		408866						
ANR	408981	Symbol	ms -> c . li		408866						
ANR	408982	Symbol	ms -> o . buf		408866						
ANR	408983	Symbol	* ms		408866						
ANR	408984	Symbol	* * ms		408866						
ANR	408985	Symbol	ms -> o . pbuf		408866						
ANR	408986	Symbol	ms -> c		408866						
ANR	408987	Symbol	* i		408866						
ANR	408988	Function	file_ms_alloc	475:10:13175:13973							
ANR	408989	FunctionDef	file_ms_alloc (int flags)		408988	0					
ANR	408990	CompoundStatement		477:0:13219:13973	408988	0					
ANR	408991	IdentifierDeclStatement	struct magic_set * ms ;	478:1:13222:13242	408988	0	True				
ANR	408992	IdentifierDecl	* ms		408988	0					
ANR	408993	IdentifierDeclType	struct magic_set *		408988	0					
ANR	408994	Identifier	ms		408988	1					
ANR	408995	IdentifierDeclStatement	"size_t i , len ;"	479:1:13245:13258	408988	1	True				
ANR	408996	IdentifierDecl	i		408988	0					
ANR	408997	IdentifierDeclType	size_t		408988	0					
ANR	408998	Identifier	i		408988	1					
ANR	408999	IdentifierDecl	len		408988	1					
ANR	409000	IdentifierDeclType	size_t		408988	0					
ANR	409001	Identifier	len		408988	1					
ANR	409002	Statement	if	481:1:13262:13263	408988	2	True				
ANR	409003	Statement	(	481:4:13265:13265	408988	3	True				
ANR	409004	Statement	(	481:5:13266:13266	408988	4	True				
ANR	409005	Statement	ms	481:6:13267:13268	408988	5	True				
ANR	409006	Statement	=	481:9:13270:13270	408988	6	True				
ANR	409007	Statement	CAST	481:11:13272:13275	408988	7	True				
ANR	409008	Statement	(	481:15:13276:13276	408988	8	True				
ANR	409009	Statement	struct	481:16:13277:13282	408988	9	True				
ANR	409010	Statement	magic_set	481:23:13284:13292	408988	10	True				
ANR	409011	Statement	*	481:33:13294:13294	408988	11	True				
ANR	409012	Statement	","	481:34:13295:13295	408988	12	True				
ANR	409013	Statement	ecalloc	481:36:13297:13303	408988	13	True				
ANR	409014	Statement	(	481:43:13304:13304	408988	14	True				
ANR	409015	Statement	(	481:44:13305:13305	408988	15	True				
ANR	409016	Statement	size_t	481:45:13306:13311	408988	16	True				
ANR	409017	Statement	)	481:51:13312:13312	408988	17	True				
ANR	409018	Statement	1	481:52:13313:13313	408988	18	True				
ANR	409019	Statement	","	481:53:13314:13314	408988	19	True				
ANR	409020	Statement	sizeof	482:5:13321:13326	408988	20	True				
ANR	409021	Statement	(	482:11:13327:13327	408988	21	True				
ANR	409022	Statement	struct	482:12:13328:13333	408988	22	True				
ANR	409023	Statement	magic_set	482:19:13335:13343	408988	23	True				
ANR	409024	Statement	)	482:28:13344:13344	408988	24	True				
ANR	409025	Statement	)	482:29:13345:13345	408988	25	True				
ANR	409026	Statement	)	482:30:13346:13346	408988	26	True				
ANR	409027	Statement	)	482:31:13347:13347	408988	27	True				
ANR	409028	Statement	==	482:33:13349:13350	408988	28	True				
ANR	409029	Statement	NULL	482:36:13352:13355	408988	29	True				
ANR	409030	Statement	)	482:40:13356:13356	408988	30	True				
ANR	409031	ReturnStatement	return NULL ;	483:2:13360:13371	408988	31	True				
ANR	409032	Identifier	NULL		408988	0					
ANR	409033	IfStatement	"if ( magic_setflags ( ms , flags ) == - 1 )"		408988	32					
ANR	409034	Condition	"magic_setflags ( ms , flags ) == - 1"	485:5:13379:13409	408988	0	True				
ANR	409035	EqualityExpression	"magic_setflags ( ms , flags ) == - 1"		408988	0		==			
ANR	409036	CallExpression	"magic_setflags ( ms , flags )"		408988	0					
ANR	409037	Callee	magic_setflags		408988	0					
ANR	409038	Identifier	magic_setflags		408988	0					
ANR	409039	ArgumentList	ms		408988	1					
ANR	409040	Argument	ms		408988	0					
ANR	409041	Identifier	ms		408988	0					
ANR	409042	Argument	flags		408988	1					
ANR	409043	Identifier	flags		408988	0					
ANR	409044	UnaryOperationExpression	- 1		408988	1					
ANR	409045	UnaryOperator	-		408988	0					
ANR	409046	PrimaryExpression	1		408988	1					
ANR	409047	CompoundStatement		9:38:192:192	408988	1					
ANR	409048	ExpressionStatement	errno = EINVAL	486:2:13416:13430	408988	0	True				
ANR	409049	AssignmentExpression	errno = EINVAL		408988	0		=			
ANR	409050	Identifier	errno		408988	0					
ANR	409051	Identifier	EINVAL		408988	1					
ANR	409052	GotoStatement	goto free ;	487:2:13434:13443	408988	1	True				
ANR	409053	Identifier	free		408988	0					
ANR	409054	ExpressionStatement	ms -> o . buf = ms -> o . pbuf = NULL	490:1:13450:13479	408988	33	True				
ANR	409055	AssignmentExpression	ms -> o . buf = ms -> o . pbuf = NULL		408988	0		=			
ANR	409056	MemberAccess	ms -> o . buf		408988	0					
ANR	409057	PtrMemberAccess	ms -> o		408988	0					
ANR	409058	Identifier	ms		408988	0					
ANR	409059	Identifier	o		408988	1					
ANR	409060	Identifier	buf		408988	1					
ANR	409061	AssignmentExpression	ms -> o . pbuf = NULL		408988	1		=			
ANR	409062	MemberAccess	ms -> o . pbuf		408988	0					
ANR	409063	PtrMemberAccess	ms -> o		408988	0					
ANR	409064	Identifier	ms		408988	0					
ANR	409065	Identifier	o		408988	1					
ANR	409066	Identifier	pbuf		408988	1					
ANR	409067	Identifier	NULL		408988	1					
ANR	409068	ExpressionStatement	len = ( ms -> c . len = 10 ) * sizeof ( * ms -> c . li )	491:1:13482:13524	408988	34	True				
ANR	409069	AssignmentExpression	len = ( ms -> c . len = 10 ) * sizeof ( * ms -> c . li )		408988	0		=			
ANR	409070	Identifier	len		408988	0					
ANR	409071	MultiplicativeExpression	( ms -> c . len = 10 ) * sizeof ( * ms -> c . li )		408988	1		*			
ANR	409072	AssignmentExpression	ms -> c . len = 10		408988	0		=			
ANR	409073	MemberAccess	ms -> c . len		408988	0					
ANR	409074	PtrMemberAccess	ms -> c		408988	0					
ANR	409075	Identifier	ms		408988	0					
ANR	409076	Identifier	c		408988	1					
ANR	409077	Identifier	len		408988	1					
ANR	409078	PrimaryExpression	10		408988	1					
ANR	409079	SizeofExpression	sizeof ( * ms -> c . li )		408988	1					
ANR	409080	Sizeof	sizeof		408988	0					
ANR	409081	UnaryOperationExpression	* ms -> c . li		408988	1					
ANR	409082	UnaryOperator	*		408988	0					
ANR	409083	MemberAccess	ms -> c . li		408988	1					
ANR	409084	PtrMemberAccess	ms -> c		408988	0					
ANR	409085	Identifier	ms		408988	0					
ANR	409086	Identifier	c		408988	1					
ANR	409087	Identifier	li		408988	1					
ANR	409088	Statement	if	493:1:13528:13529	408988	35	True				
ANR	409089	Statement	(	493:4:13531:13531	408988	36	True				
ANR	409090	Statement	(	493:5:13532:13532	408988	37	True				
ANR	409091	Statement	ms	493:6:13533:13534	408988	38	True				
ANR	409092	Statement	->	493:8:13535:13536	408988	39	True				
ANR	409093	Statement	c	493:10:13537:13537	408988	40	True				
ANR	409094	Statement	.	493:11:13538:13538	408988	41	True				
ANR	409095	Statement	li	493:12:13539:13540	408988	42	True				
ANR	409096	Statement	=	493:15:13542:13542	408988	43	True				
ANR	409097	Statement	CAST	493:17:13544:13547	408988	44	True				
ANR	409098	Statement	(	493:21:13548:13548	408988	45	True				
ANR	409099	Statement	struct	493:22:13549:13554	408988	46	True				
ANR	409100	Statement	level_info	493:29:13556:13565	408988	47	True				
ANR	409101	Statement	*	493:40:13567:13567	408988	48	True				
ANR	409102	Statement	","	493:41:13568:13568	408988	49	True				
ANR	409103	Statement	emalloc	493:43:13570:13576	408988	50	True				
ANR	409104	Statement	(	493:50:13577:13577	408988	51	True				
ANR	409105	Statement	len	493:51:13578:13580	408988	52	True				
ANR	409106	Statement	)	493:54:13581:13581	408988	53	True				
ANR	409107	Statement	)	493:55:13582:13582	408988	54	True				
ANR	409108	Statement	)	493:56:13583:13583	408988	55	True				
ANR	409109	Statement	==	493:58:13585:13586	408988	56	True				
ANR	409110	Statement	NULL	493:61:13588:13591	408988	57	True				
ANR	409111	Statement	)	493:65:13592:13592	408988	58	True				
ANR	409112	GotoStatement	goto free ;	494:2:13596:13605	408988	59	True				
ANR	409113	Identifier	free		408988	0					
ANR	409114	ExpressionStatement	ms -> event_flags = 0	496:1:13609:13628	408988	60	True				
ANR	409115	AssignmentExpression	ms -> event_flags = 0		408988	0		=			
ANR	409116	PtrMemberAccess	ms -> event_flags		408988	0					
ANR	409117	Identifier	ms		408988	0					
ANR	409118	Identifier	event_flags		408988	1					
ANR	409119	PrimaryExpression	0		408988	1					
ANR	409120	ExpressionStatement	ms -> error = - 1	497:1:13631:13645	408988	61	True				
ANR	409121	AssignmentExpression	ms -> error = - 1		408988	0		=			
ANR	409122	PtrMemberAccess	ms -> error		408988	0					
ANR	409123	Identifier	ms		408988	0					
ANR	409124	Identifier	error		408988	1					
ANR	409125	UnaryOperationExpression	- 1		408988	1					
ANR	409126	UnaryOperator	-		408988	0					
ANR	409127	PrimaryExpression	1		408988	1					
ANR	409128	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		408988	62					
ANR	409129	ForInit	i = 0 ;	498:6:13653:13658	408988	0	True				
ANR	409130	AssignmentExpression	i = 0		408988	0		=			
ANR	409131	Identifier	i		408988	0					
ANR	409132	PrimaryExpression	0		408988	1					
ANR	409133	Condition	i < MAGIC_SETS	498:13:13660:13673	408988	1	True				
ANR	409134	RelationalExpression	i < MAGIC_SETS		408988	0		<			
ANR	409135	Identifier	i		408988	0					
ANR	409136	Identifier	MAGIC_SETS		408988	1					
ANR	409137	PostIncDecOperationExpression	i ++	498:29:13676:13678	408988	2	True				
ANR	409138	Identifier	i		408988	0					
ANR	409139	IncDec	++		408988	1					
ANR	409140	ExpressionStatement	ms -> mlist [ i ] = NULL	499:2:13683:13702	408988	3	True				
ANR	409141	AssignmentExpression	ms -> mlist [ i ] = NULL		408988	0		=			
ANR	409142	ArrayIndexing	ms -> mlist [ i ]		408988	0					
ANR	409143	PtrMemberAccess	ms -> mlist		408988	0					
ANR	409144	Identifier	ms		408988	0					
ANR	409145	Identifier	mlist		408988	1					
ANR	409146	Identifier	i		408988	1					
ANR	409147	Identifier	NULL		408988	1					
ANR	409148	ExpressionStatement	"ms -> file = ""unknown"""	500:1:13705:13725	408988	63	True				
ANR	409149	AssignmentExpression	"ms -> file = ""unknown"""		408988	0		=			
ANR	409150	PtrMemberAccess	ms -> file		408988	0					
ANR	409151	Identifier	ms		408988	0					
ANR	409152	Identifier	file		408988	1					
ANR	409153	PrimaryExpression	"""unknown"""		408988	1					
ANR	409154	ExpressionStatement	ms -> line = 0	501:1:13728:13740	408988	64	True				
ANR	409155	AssignmentExpression	ms -> line = 0		408988	0		=			
ANR	409156	PtrMemberAccess	ms -> line		408988	0					
ANR	409157	Identifier	ms		408988	0					
ANR	409158	Identifier	line		408988	1					
ANR	409159	PrimaryExpression	0		408988	1					
ANR	409160	ExpressionStatement	ms -> indir_max = FILE_INDIR_MAX	502:1:13743:13773	408988	65	True				
ANR	409161	AssignmentExpression	ms -> indir_max = FILE_INDIR_MAX		408988	0		=			
ANR	409162	PtrMemberAccess	ms -> indir_max		408988	0					
ANR	409163	Identifier	ms		408988	0					
ANR	409164	Identifier	indir_max		408988	1					
ANR	409165	Identifier	FILE_INDIR_MAX		408988	1					
ANR	409166	ExpressionStatement	ms -> name_max = FILE_NAME_MAX	503:1:13776:13804	408988	66	True				
ANR	409167	AssignmentExpression	ms -> name_max = FILE_NAME_MAX		408988	0		=			
ANR	409168	PtrMemberAccess	ms -> name_max		408988	0					
ANR	409169	Identifier	ms		408988	0					
ANR	409170	Identifier	name_max		408988	1					
ANR	409171	Identifier	FILE_NAME_MAX		408988	1					
ANR	409172	ExpressionStatement	ms -> elf_shnum_max = FILE_ELF_SHNUM_MAX	504:1:13807:13845	408988	67	True				
ANR	409173	AssignmentExpression	ms -> elf_shnum_max = FILE_ELF_SHNUM_MAX		408988	0		=			
ANR	409174	PtrMemberAccess	ms -> elf_shnum_max		408988	0					
ANR	409175	Identifier	ms		408988	0					
ANR	409176	Identifier	elf_shnum_max		408988	1					
ANR	409177	Identifier	FILE_ELF_SHNUM_MAX		408988	1					
ANR	409178	ExpressionStatement	ms -> elf_phnum_max = FILE_ELF_PHNUM_MAX	505:1:13848:13886	408988	68	True				
ANR	409179	AssignmentExpression	ms -> elf_phnum_max = FILE_ELF_PHNUM_MAX		408988	0		=			
ANR	409180	PtrMemberAccess	ms -> elf_phnum_max		408988	0					
ANR	409181	Identifier	ms		408988	0					
ANR	409182	Identifier	elf_phnum_max		408988	1					
ANR	409183	Identifier	FILE_ELF_PHNUM_MAX		408988	1					
ANR	409184	ExpressionStatement	ms -> elf_notes_max = FILE_ELF_NOTES_MAX	506:1:13889:13927	408988	69	True				
ANR	409185	AssignmentExpression	ms -> elf_notes_max = FILE_ELF_NOTES_MAX		408988	0		=			
ANR	409186	PtrMemberAccess	ms -> elf_notes_max		408988	0					
ANR	409187	Identifier	ms		408988	0					
ANR	409188	Identifier	elf_notes_max		408988	1					
ANR	409189	Identifier	FILE_ELF_NOTES_MAX		408988	1					
ANR	409190	ReturnStatement	return ms ;	507:1:13930:13939	408988	70	True				
ANR	409191	Identifier	ms		408988	0					
ANR	409192	Label	free :	508:0:13941:13945	408988	71	True				
ANR	409193	Identifier	free		408988	0					
ANR	409194	ExpressionStatement	efree ( ms )	509:1:13948:13957	408988	72	True				
ANR	409195	CallExpression	efree ( ms )		408988	0					
ANR	409196	Callee	efree		408988	0					
ANR	409197	Identifier	efree		408988	0					
ANR	409198	ArgumentList	ms		408988	1					
ANR	409199	Argument	ms		408988	0					
ANR	409200	Identifier	ms		408988	0					
ANR	409201	ReturnStatement	return NULL ;	510:1:13960:13971	408988	73	True				
ANR	409202	Identifier	NULL		408988	0					
ANR	409203	ReturnType	struct magic_set *		408988	1					
ANR	409204	Identifier	file_ms_alloc		408988	2					
ANR	409205	ParameterList	int flags		408988	3					
ANR	409206	Parameter	int flags	476:14:13208:13216	408988	0	True				
ANR	409207	ParameterType	int		408988	0					
ANR	409208	Identifier	flags		408988	1					
ANR	409209	CFGEntryNode	ENTRY		408988		True				
ANR	409210	CFGExitNode	EXIT		408988		True				
ANR	409211	Symbol	ms -> name_max		408988						
ANR	409212	Symbol	* ms -> c		408988						
ANR	409213	Symbol	MAGIC_SETS		408988						
ANR	409214	Symbol	ms -> mlist		408988						
ANR	409215	Symbol	FILE_INDIR_MAX		408988						
ANR	409216	Symbol	flags		408988						
ANR	409217	Symbol	ms -> c . li		408988						
ANR	409218	Symbol	FILE_ELF_PHNUM_MAX		408988						
ANR	409219	Symbol	ms -> o . buf		408988						
ANR	409220	Symbol	* ms		408988						
ANR	409221	Symbol	* * ms		408988						
ANR	409222	Symbol	magic_setflags		408988						
ANR	409223	Symbol	len		408988						
ANR	409224	Symbol	ms -> elf_notes_max		408988						
ANR	409225	Symbol	ms -> elf_phnum_max		408988						
ANR	409226	Symbol	errno		408988						
ANR	409227	Symbol	NULL		408988						
ANR	409228	Symbol	ms -> event_flags		408988						
ANR	409229	Symbol	* ms -> mlist		408988						
ANR	409230	Symbol	ms -> indir_max		408988						
ANR	409231	Symbol	ms		408988						
ANR	409232	Symbol	ms -> o		408988						
ANR	409233	Symbol	* ms -> c . li		408988						
ANR	409234	Symbol	i		408988						
ANR	409235	Symbol	ms -> line		408988						
ANR	409236	Symbol	FILE_ELF_NOTES_MAX		408988						
ANR	409237	Symbol	ms -> elf_shnum_max		408988						
ANR	409238	Symbol	EINVAL		408988						
ANR	409239	Symbol	ms -> o . pbuf		408988						
ANR	409240	Symbol	ms -> error		408988						
ANR	409241	Symbol	ms -> file		408988						
ANR	409242	Symbol	ms -> c		408988						
ANR	409243	Symbol	* i		408988						
ANR	409244	Symbol	FILE_NAME_MAX		408988						
ANR	409245	Symbol	FILE_ELF_SHNUM_MAX		408988						
ANR	409246	Symbol	ms -> c . len		408988						
ANR	409247	Function	apprentice_unmap	513:8:13984:14280							
ANR	409248	FunctionDef	apprentice_unmap (struct magic_map * map)		409247	0					
ANR	409249	CompoundStatement		515:0:14029:14280	409247	0					
ANR	409250	IfStatement	if ( map == NULL )		409247	0					
ANR	409251	Condition	map == NULL	516:5:14036:14046	409247	0	True				
ANR	409252	EqualityExpression	map == NULL		409247	0		==			
ANR	409253	Identifier	map		409247	0					
ANR	409254	Identifier	NULL		409247	1					
ANR	409255	ReturnStatement	return ;	517:2:14051:14057	409247	1	True				
ANR	409256	IfStatement	if ( map -> p != php_magic_database )		409247	1					
ANR	409257	Condition	map -> p != php_magic_database	518:5:14064:14091	409247	0	True				
ANR	409258	EqualityExpression	map -> p != php_magic_database		409247	0		!=			
ANR	409259	PtrMemberAccess	map -> p		409247	0					
ANR	409260	Identifier	map		409247	0					
ANR	409261	Identifier	p		409247	1					
ANR	409262	Identifier	php_magic_database		409247	1					
ANR	409263	CompoundStatement		4:35:64:64	409247	1					
ANR	409264	IfStatement	if ( map -> p == NULL )		409247	0					
ANR	409265	Condition	map -> p == NULL	519:6:14102:14115	409247	0	True				
ANR	409266	EqualityExpression	map -> p == NULL		409247	0		==			
ANR	409267	PtrMemberAccess	map -> p		409247	0					
ANR	409268	Identifier	map		409247	0					
ANR	409269	Identifier	p		409247	1					
ANR	409270	Identifier	NULL		409247	1					
ANR	409271	CompoundStatement		6:3:93:98	409247	1					
ANR	409272	IdentifierDeclStatement	int j ;	520:3:14123:14128	409247	0	True				
ANR	409273	IdentifierDecl	j		409247	0					
ANR	409274	IdentifierDeclType	int		409247	0					
ANR	409275	Identifier	j		409247	1					
ANR	409276	ForStatement	for ( j = 0 ; j < MAGIC_SETS ; j ++ )		409247	1					
ANR	409277	ForInit	j = 0 ;	521:8:14138:14143	409247	0	True				
ANR	409278	AssignmentExpression	j = 0		409247	0		=			
ANR	409279	Identifier	j		409247	0					
ANR	409280	PrimaryExpression	0		409247	1					
ANR	409281	Condition	j < MAGIC_SETS	521:15:14145:14158	409247	1	True				
ANR	409282	RelationalExpression	j < MAGIC_SETS		409247	0		<			
ANR	409283	Identifier	j		409247	0					
ANR	409284	Identifier	MAGIC_SETS		409247	1					
ANR	409285	PostIncDecOperationExpression	j ++	521:31:14161:14163	409247	2	True				
ANR	409286	Identifier	j		409247	0					
ANR	409287	IncDec	++		409247	1					
ANR	409288	CompoundStatement		7:36:136:136	409247	3					
ANR	409289	IfStatement	if ( map -> magic [ j ] )		409247	0					
ANR	409290	Condition	map -> magic [ j ]	522:8:14176:14188	409247	0	True				
ANR	409291	ArrayIndexing	map -> magic [ j ]		409247	0					
ANR	409292	PtrMemberAccess	map -> magic		409247	0					
ANR	409293	Identifier	map		409247	0					
ANR	409294	Identifier	magic		409247	1					
ANR	409295	Identifier	j		409247	1					
ANR	409296	CompoundStatement		8:23:161:161	409247	1					
ANR	409297	ExpressionStatement	efree ( map -> magic [ j ] )	523:5:14198:14218	409247	0	True				
ANR	409298	CallExpression	efree ( map -> magic [ j ] )		409247	0					
ANR	409299	Callee	efree		409247	0					
ANR	409300	Identifier	efree		409247	0					
ANR	409301	ArgumentList	map -> magic [ j ]		409247	1					
ANR	409302	Argument	map -> magic [ j ]		409247	0					
ANR	409303	ArrayIndexing	map -> magic [ j ]		409247	0					
ANR	409304	PtrMemberAccess	map -> magic		409247	0					
ANR	409305	Identifier	map		409247	0					
ANR	409306	Identifier	magic		409247	1					
ANR	409307	Identifier	j		409247	1					
ANR	409308	ElseStatement	else		409247	0					
ANR	409309	CompoundStatement		12:9:210:210	409247	0					
ANR	409310	ExpressionStatement	efree ( map -> p )	527:3:14245:14258	409247	0	True				
ANR	409311	CallExpression	efree ( map -> p )		409247	0					
ANR	409312	Callee	efree		409247	0					
ANR	409313	Identifier	efree		409247	0					
ANR	409314	ArgumentList	map -> p		409247	1					
ANR	409315	Argument	map -> p		409247	0					
ANR	409316	PtrMemberAccess	map -> p		409247	0					
ANR	409317	Identifier	map		409247	0					
ANR	409318	Identifier	p		409247	1					
ANR	409319	ExpressionStatement	efree ( map )	530:1:14268:14278	409247	2	True				
ANR	409320	CallExpression	efree ( map )		409247	0					
ANR	409321	Callee	efree		409247	0					
ANR	409322	Identifier	efree		409247	0					
ANR	409323	ArgumentList	map		409247	1					
ANR	409324	Argument	map		409247	0					
ANR	409325	Identifier	map		409247	0					
ANR	409326	ReturnType	void		409247	1					
ANR	409327	Identifier	apprentice_unmap		409247	2					
ANR	409328	ParameterList	struct magic_map * map		409247	3					
ANR	409329	Parameter	struct magic_map * map	514:17:14006:14026	409247	0	True				
ANR	409330	ParameterType	struct magic_map *		409247	0					
ANR	409331	Identifier	map		409247	1					
ANR	409332	CFGEntryNode	ENTRY		409247		True				
ANR	409333	CFGExitNode	EXIT		409247		True				
ANR	409334	Symbol	* * map		409247						
ANR	409335	Symbol	NULL		409247						
ANR	409336	Symbol	MAGIC_SETS		409247						
ANR	409337	Symbol	* j		409247						
ANR	409338	Symbol	* map		409247						
ANR	409339	Symbol	php_magic_database		409247						
ANR	409340	Symbol	map -> p		409247						
ANR	409341	Symbol	* map -> magic		409247						
ANR	409342	Symbol	map -> magic		409247						
ANR	409343	Symbol	j		409247						
ANR	409344	Symbol	map		409247						
ANR	409345	Function	mlist_alloc	533:8:14291:14492							
ANR	409346	FunctionDef	mlist_alloc ()		409345	0					
ANR	409347	CompoundStatement		535:0:14324:14492	409345	0					
ANR	409348	IdentifierDeclStatement	struct mlist * mlist ;	536:1:14327:14346	409345	0	True				
ANR	409349	IdentifierDecl	* mlist		409345	0					
ANR	409350	IdentifierDeclType	struct mlist *		409345	0					
ANR	409351	Identifier	mlist		409345	1					
ANR	409352	Statement	if	537:1:14349:14350	409345	1	True				
ANR	409353	Statement	(	537:4:14352:14352	409345	2	True				
ANR	409354	Statement	(	537:5:14353:14353	409345	3	True				
ANR	409355	Statement	mlist	537:6:14354:14358	409345	4	True				
ANR	409356	Statement	=	537:12:14360:14360	409345	5	True				
ANR	409357	Statement	CAST	537:14:14362:14365	409345	6	True				
ANR	409358	Statement	(	537:18:14366:14366	409345	7	True				
ANR	409359	Statement	struct	537:19:14367:14372	409345	8	True				
ANR	409360	Statement	mlist	537:26:14374:14378	409345	9	True				
ANR	409361	Statement	*	537:32:14380:14380	409345	10	True				
ANR	409362	Statement	","	537:33:14381:14381	409345	11	True				
ANR	409363	Statement	ecalloc	537:35:14383:14389	409345	12	True				
ANR	409364	Statement	(	537:42:14390:14390	409345	13	True				
ANR	409365	Statement	1	537:43:14391:14391	409345	14	True				
ANR	409366	Statement	","	537:44:14392:14392	409345	15	True				
ANR	409367	Statement	sizeof	537:46:14394:14399	409345	16	True				
ANR	409368	Statement	(	537:52:14400:14400	409345	17	True				
ANR	409369	Statement	*	537:53:14401:14401	409345	18	True				
ANR	409370	Statement	mlist	537:54:14402:14406	409345	19	True				
ANR	409371	Statement	)	537:59:14407:14407	409345	20	True				
ANR	409372	Statement	)	537:60:14408:14408	409345	21	True				
ANR	409373	Statement	)	537:61:14409:14409	409345	22	True				
ANR	409374	Statement	)	537:62:14410:14410	409345	23	True				
ANR	409375	Statement	==	537:64:14412:14413	409345	24	True				
ANR	409376	Statement	NULL	537:67:14415:14418	409345	25	True				
ANR	409377	Statement	)	537:71:14419:14419	409345	26	True				
ANR	409378	CompoundStatement		3:73:96:96	409345	27					
ANR	409379	ReturnStatement	return NULL ;	538:2:14425:14436	409345	0	True				
ANR	409380	Identifier	NULL		409345	0					
ANR	409381	ExpressionStatement	mlist -> next = mlist -> prev = mlist	540:1:14442:14475	409345	28	True				
ANR	409382	AssignmentExpression	mlist -> next = mlist -> prev = mlist		409345	0		=			
ANR	409383	PtrMemberAccess	mlist -> next		409345	0					
ANR	409384	Identifier	mlist		409345	0					
ANR	409385	Identifier	next		409345	1					
ANR	409386	AssignmentExpression	mlist -> prev = mlist		409345	1		=			
ANR	409387	PtrMemberAccess	mlist -> prev		409345	0					
ANR	409388	Identifier	mlist		409345	0					
ANR	409389	Identifier	prev		409345	1					
ANR	409390	Identifier	mlist		409345	1					
ANR	409391	ReturnStatement	return mlist ;	541:1:14478:14490	409345	29	True				
ANR	409392	Identifier	mlist		409345	0					
ANR	409393	ReturnType	struct mlist *		409345	1					
ANR	409394	Identifier	mlist_alloc		409345	2					
ANR	409395	ParameterList			409345	3					
ANR	409396	CFGEntryNode	ENTRY		409345		True				
ANR	409397	CFGExitNode	EXIT		409345		True				
ANR	409398	Symbol	NULL		409345						
ANR	409399	Symbol	mlist -> next		409345						
ANR	409400	Symbol	* mlist		409345						
ANR	409401	Symbol	mlist -> prev		409345						
ANR	409402	Symbol	mlist		409345						
ANR	409403	Function	mlist_free	544:8:14503:14773							
ANR	409404	FunctionDef	mlist_free (struct mlist * mlist)		409403	0					
ANR	409405	CompoundStatement		546:0:14540:14773	409403	0					
ANR	409406	IdentifierDeclStatement	"struct mlist * ml , * next ;"	547:1:14543:14566	409403	0	True				
ANR	409407	IdentifierDecl	* ml		409403	0					
ANR	409408	IdentifierDeclType	struct mlist *		409403	0					
ANR	409409	Identifier	ml		409403	1					
ANR	409410	IdentifierDecl	* next		409403	1					
ANR	409411	IdentifierDeclType	struct mlist *		409403	0					
ANR	409412	Identifier	next		409403	1					
ANR	409413	IfStatement	if ( mlist == NULL )		409403	1					
ANR	409414	Condition	mlist == NULL	549:5:14574:14586	409403	0	True				
ANR	409415	EqualityExpression	mlist == NULL		409403	0		==			
ANR	409416	Identifier	mlist		409403	0					
ANR	409417	Identifier	NULL		409403	1					
ANR	409418	ReturnStatement	return ;	550:2:14591:14597	409403	1	True				
ANR	409419	ExpressionStatement	ml = mlist -> next	552:1:14601:14617	409403	2	True				
ANR	409420	AssignmentExpression	ml = mlist -> next		409403	0		=			
ANR	409421	Identifier	ml		409403	0					
ANR	409422	PtrMemberAccess	mlist -> next		409403	1					
ANR	409423	Identifier	mlist		409403	0					
ANR	409424	Identifier	next		409403	1					
ANR	409425	ForStatement	for ( ml = mlist -> next ; ( next = ml -> next ) != NULL ; ml = next )		409403	3					
ANR	409426	ForInit	ml = mlist -> next ;	553:6:14625:14641	409403	0	True				
ANR	409427	AssignmentExpression	ml = mlist -> next		409403	0		=			
ANR	409428	Identifier	ml		409403	0					
ANR	409429	PtrMemberAccess	mlist -> next		409403	1					
ANR	409430	Identifier	mlist		409403	0					
ANR	409431	Identifier	next		409403	1					
ANR	409432	Condition	( next = ml -> next ) != NULL	553:24:14643:14667	409403	1	True				
ANR	409433	EqualityExpression	( next = ml -> next ) != NULL		409403	0		!=			
ANR	409434	AssignmentExpression	next = ml -> next		409403	0		=			
ANR	409435	Identifier	next		409403	0					
ANR	409436	PtrMemberAccess	ml -> next		409403	1					
ANR	409437	Identifier	ml		409403	0					
ANR	409438	Identifier	next		409403	1					
ANR	409439	Identifier	NULL		409403	1					
ANR	409440	AssignmentExpression	ml = next	553:51:14670:14678	409403	2	True	=			
ANR	409441	Identifier	ml		409403	0					
ANR	409442	Identifier	next		409403	1					
ANR	409443	CompoundStatement		8:62:140:140	409403	3					
ANR	409444	IfStatement	if ( ml -> map )		409403	0					
ANR	409445	Condition	ml -> map	554:6:14689:14695	409403	0	True				
ANR	409446	PtrMemberAccess	ml -> map		409403	0					
ANR	409447	Identifier	ml		409403	0					
ANR	409448	Identifier	map		409403	1					
ANR	409449	ExpressionStatement	apprentice_unmap ( ml -> map )	555:3:14701:14726	409403	1	True				
ANR	409450	CallExpression	apprentice_unmap ( ml -> map )		409403	0					
ANR	409451	Callee	apprentice_unmap		409403	0					
ANR	409452	Identifier	apprentice_unmap		409403	0					
ANR	409453	ArgumentList	ml -> map		409403	1					
ANR	409454	Argument	ml -> map		409403	0					
ANR	409455	PtrMemberAccess	ml -> map		409403	0					
ANR	409456	Identifier	ml		409403	0					
ANR	409457	Identifier	map		409403	1					
ANR	409458	ExpressionStatement	efree ( ml )	556:2:14730:14739	409403	1	True				
ANR	409459	CallExpression	efree ( ml )		409403	0					
ANR	409460	Callee	efree		409403	0					
ANR	409461	Identifier	efree		409403	0					
ANR	409462	ArgumentList	ml		409403	1					
ANR	409463	Argument	ml		409403	0					
ANR	409464	Identifier	ml		409403	0					
ANR	409465	IfStatement	if ( ml == mlist )		409403	2					
ANR	409466	Condition	ml == mlist	557:6:14747:14757	409403	0	True				
ANR	409467	EqualityExpression	ml == mlist		409403	0		==			
ANR	409468	Identifier	ml		409403	0					
ANR	409469	Identifier	mlist		409403	1					
ANR	409470	BreakStatement	break ;	558:3:14763:14768	409403	1	True				
ANR	409471	ReturnType	void		409403	1					
ANR	409472	Identifier	mlist_free		409403	2					
ANR	409473	ParameterList	struct mlist * mlist		409403	3					
ANR	409474	Parameter	struct mlist * mlist	545:11:14519:14537	409403	0	True				
ANR	409475	ParameterType	struct mlist *		409403	0					
ANR	409476	Identifier	mlist		409403	1					
ANR	409477	CFGEntryNode	ENTRY		409403		True				
ANR	409478	CFGExitNode	EXIT		409403		True				
ANR	409479	Symbol	next		409403						
ANR	409480	Symbol	NULL		409403						
ANR	409481	Symbol	ml -> map		409403						
ANR	409482	Symbol	mlist -> next		409403						
ANR	409483	Symbol	ml -> next		409403						
ANR	409484	Symbol	* mlist		409403						
ANR	409485	Symbol	* ml		409403						
ANR	409486	Symbol	mlist		409403						
ANR	409487	Symbol	ml		409403						
ANR	409488	Function	file_apprentice	563:10:14844:16593							
ANR	409489	FunctionDef	"file_apprentice (struct magic_set * ms , const char * fn , int action)"		409488	0					
ANR	409490	CompoundStatement		565:0:14914:16593	409488	0					
ANR	409491	IdentifierDeclStatement	"char * p , * mfn ;"	566:1:14917:14930	409488	0	True				
ANR	409492	IdentifierDecl	* p		409488	0					
ANR	409493	IdentifierDeclType	char *		409488	0					
ANR	409494	Identifier	p		409488	1					
ANR	409495	IdentifierDecl	* mfn		409488	1					
ANR	409496	IdentifierDeclType	char *		409488	0					
ANR	409497	Identifier	mfn		409488	1					
ANR	409498	IdentifierDeclStatement	"int file_err , errs = - 1 ;"	567:1:14933:14956	409488	1	True				
ANR	409499	IdentifierDecl	file_err		409488	0					
ANR	409500	IdentifierDeclType	int		409488	0					
ANR	409501	Identifier	file_err		409488	1					
ANR	409502	IdentifierDecl	errs = - 1		409488	1					
ANR	409503	IdentifierDeclType	int		409488	0					
ANR	409504	Identifier	errs		409488	1					
ANR	409505	AssignmentExpression	errs = - 1		409488	2		=			
ANR	409506	Identifier	errs		409488	0					
ANR	409507	UnaryOperationExpression	- 1		409488	1					
ANR	409508	UnaryOperator	-		409488	0					
ANR	409509	PrimaryExpression	1		409488	1					
ANR	409510	IdentifierDeclStatement	size_t i ;	568:1:14959:14967	409488	2	True				
ANR	409511	IdentifierDecl	i		409488	0					
ANR	409512	IdentifierDeclType	size_t		409488	0					
ANR	409513	Identifier	i		409488	1					
ANR	409514	IfStatement	if ( ms -> mlist [ 0 ] != NULL )		409488	3					
ANR	409515	Condition	ms -> mlist [ 0 ] != NULL	570:5:14975:14994	409488	0	True				
ANR	409516	EqualityExpression	ms -> mlist [ 0 ] != NULL		409488	0		!=			
ANR	409517	ArrayIndexing	ms -> mlist [ 0 ]		409488	0					
ANR	409518	PtrMemberAccess	ms -> mlist		409488	0					
ANR	409519	Identifier	ms		409488	0					
ANR	409520	Identifier	mlist		409488	1					
ANR	409521	PrimaryExpression	0		409488	1					
ANR	409522	Identifier	NULL		409488	1					
ANR	409523	ExpressionStatement	file_reset ( ms )	571:2:14999:15013	409488	1	True				
ANR	409524	CallExpression	file_reset ( ms )		409488	0					
ANR	409525	Callee	file_reset		409488	0					
ANR	409526	Identifier	file_reset		409488	0					
ANR	409527	ArgumentList	ms		409488	1					
ANR	409528	Argument	ms		409488	0					
ANR	409529	Identifier	ms		409488	0					
ANR	409530	IfStatement	"if ( ( fn = magic_getpath ( fn , action ) ) == NULL )"		409488	4					
ANR	409531	Condition	"( fn = magic_getpath ( fn , action ) ) == NULL"	575:5:15101:15140	409488	0	True				
ANR	409532	EqualityExpression	"( fn = magic_getpath ( fn , action ) ) == NULL"		409488	0		==			
ANR	409533	AssignmentExpression	"fn = magic_getpath ( fn , action )"		409488	0		=			
ANR	409534	Identifier	fn		409488	0					
ANR	409535	CallExpression	"magic_getpath ( fn , action )"		409488	1					
ANR	409536	Callee	magic_getpath		409488	0					
ANR	409537	Identifier	magic_getpath		409488	0					
ANR	409538	ArgumentList	fn		409488	1					
ANR	409539	Argument	fn		409488	0					
ANR	409540	Identifier	fn		409488	0					
ANR	409541	Argument	action		409488	1					
ANR	409542	Identifier	action		409488	0					
ANR	409543	Identifier	NULL		409488	1					
ANR	409544	ReturnStatement	return - 1 ;	576:2:15145:15154	409488	1	True				
ANR	409545	UnaryOperationExpression	- 1		409488	0					
ANR	409546	UnaryOperator	-		409488	0					
ANR	409547	PrimaryExpression	1		409488	1					
ANR	409548	ExpressionStatement	init_file_tables ( )	579:1:15165:15183	409488	5	True				
ANR	409549	CallExpression	init_file_tables ( )		409488	0					
ANR	409550	Callee	init_file_tables		409488	0					
ANR	409551	Identifier	init_file_tables		409488	0					
ANR	409552	ArgumentList			409488	1					
ANR	409553	IfStatement	if ( fn == NULL )		409488	6					
ANR	409554	Condition	fn == NULL	581:5:15191:15200	409488	0	True				
ANR	409555	EqualityExpression	fn == NULL		409488	0		==			
ANR	409556	Identifier	fn		409488	0					
ANR	409557	Identifier	NULL		409488	1					
ANR	409558	ExpressionStatement	"fn = getenv ( ""MAGIC"" )"	582:2:15205:15225	409488	1	True				
ANR	409559	AssignmentExpression	"fn = getenv ( ""MAGIC"" )"		409488	0		=			
ANR	409560	Identifier	fn		409488	0					
ANR	409561	CallExpression	"getenv ( ""MAGIC"" )"		409488	1					
ANR	409562	Callee	getenv		409488	0					
ANR	409563	Identifier	getenv		409488	0					
ANR	409564	ArgumentList	"""MAGIC"""		409488	1					
ANR	409565	Argument	"""MAGIC"""		409488	0					
ANR	409566	PrimaryExpression	"""MAGIC"""		409488	0					
ANR	409567	IfStatement	if ( fn == NULL )		409488	7					
ANR	409568	Condition	fn == NULL	583:5:15232:15241	409488	0	True				
ANR	409569	EqualityExpression	fn == NULL		409488	0		==			
ANR	409570	Identifier	fn		409488	0					
ANR	409571	Identifier	NULL		409488	1					
ANR	409572	CompoundStatement		19:17:329:329	409488	1					
ANR	409573	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		409488	0					
ANR	409574	ForInit	i = 0 ;	584:7:15253:15258	409488	0	True				
ANR	409575	AssignmentExpression	i = 0		409488	0		=			
ANR	409576	Identifier	i		409488	0					
ANR	409577	PrimaryExpression	0		409488	1					
ANR	409578	Condition	i < MAGIC_SETS	584:14:15260:15273	409488	1	True				
ANR	409579	RelationalExpression	i < MAGIC_SETS		409488	0		<			
ANR	409580	Identifier	i		409488	0					
ANR	409581	Identifier	MAGIC_SETS		409488	1					
ANR	409582	PostIncDecOperationExpression	i ++	584:30:15276:15278	409488	2	True				
ANR	409583	Identifier	i		409488	0					
ANR	409584	IncDec	++		409488	1					
ANR	409585	CompoundStatement		20:35:366:366	409488	3					
ANR	409586	ExpressionStatement	mlist_free ( ms -> mlist [ i ] )	585:3:15286:15310	409488	0	True				
ANR	409587	CallExpression	mlist_free ( ms -> mlist [ i ] )		409488	0					
ANR	409588	Callee	mlist_free		409488	0					
ANR	409589	Identifier	mlist_free		409488	0					
ANR	409590	ArgumentList	ms -> mlist [ i ]		409488	1					
ANR	409591	Argument	ms -> mlist [ i ]		409488	0					
ANR	409592	ArrayIndexing	ms -> mlist [ i ]		409488	0					
ANR	409593	PtrMemberAccess	ms -> mlist		409488	0					
ANR	409594	Identifier	ms		409488	0					
ANR	409595	Identifier	mlist		409488	1					
ANR	409596	Identifier	i		409488	1					
ANR	409597	IfStatement	if ( ( ms -> mlist [ i ] = mlist_alloc ( ) ) == NULL )		409488	1					
ANR	409598	Condition	( ms -> mlist [ i ] = mlist_alloc ( ) ) == NULL	586:7:15319:15356	409488	0	True				
ANR	409599	EqualityExpression	( ms -> mlist [ i ] = mlist_alloc ( ) ) == NULL		409488	0		==			
ANR	409600	AssignmentExpression	ms -> mlist [ i ] = mlist_alloc ( )		409488	0		=			
ANR	409601	ArrayIndexing	ms -> mlist [ i ]		409488	0					
ANR	409602	PtrMemberAccess	ms -> mlist		409488	0					
ANR	409603	Identifier	ms		409488	0					
ANR	409604	Identifier	mlist		409488	1					
ANR	409605	Identifier	i		409488	1					
ANR	409606	CallExpression	mlist_alloc ( )		409488	1					
ANR	409607	Callee	mlist_alloc		409488	0					
ANR	409608	Identifier	mlist_alloc		409488	0					
ANR	409609	ArgumentList			409488	1					
ANR	409610	Identifier	NULL		409488	1					
ANR	409611	CompoundStatement		22:47:444:444	409488	1					
ANR	409612	ExpressionStatement	"file_oomem ( ms , sizeof ( * ms -> mlist [ i ] ) )"	587:4:15365:15402	409488	0	True				
ANR	409613	CallExpression	"file_oomem ( ms , sizeof ( * ms -> mlist [ i ] ) )"		409488	0					
ANR	409614	Callee	file_oomem		409488	0					
ANR	409615	Identifier	file_oomem		409488	0					
ANR	409616	ArgumentList	ms		409488	1					
ANR	409617	Argument	ms		409488	0					
ANR	409618	Identifier	ms		409488	0					
ANR	409619	Argument	sizeof ( * ms -> mlist [ i ] )		409488	1					
ANR	409620	SizeofExpression	sizeof ( * ms -> mlist [ i ] )		409488	0					
ANR	409621	Sizeof	sizeof		409488	0					
ANR	409622	UnaryOperationExpression	* ms -> mlist [ i ]		409488	1					
ANR	409623	UnaryOperator	*		409488	0					
ANR	409624	ArrayIndexing	ms -> mlist [ i ]		409488	1					
ANR	409625	PtrMemberAccess	ms -> mlist		409488	0					
ANR	409626	Identifier	ms		409488	0					
ANR	409627	Identifier	mlist		409488	1					
ANR	409628	Identifier	i		409488	1					
ANR	409629	ReturnStatement	return - 1 ;	588:4:15408:15417	409488	1	True				
ANR	409630	UnaryOperationExpression	- 1		409488	0					
ANR	409631	UnaryOperator	-		409488	0					
ANR	409632	PrimaryExpression	1		409488	1					
ANR	409633	ReturnStatement	"return apprentice_1 ( ms , fn , action ) ;"	591:2:15430:15465	409488	1	True				
ANR	409634	CallExpression	"apprentice_1 ( ms , fn , action )"		409488	0					
ANR	409635	Callee	apprentice_1		409488	0					
ANR	409636	Identifier	apprentice_1		409488	0					
ANR	409637	ArgumentList	ms		409488	1					
ANR	409638	Argument	ms		409488	0					
ANR	409639	Identifier	ms		409488	0					
ANR	409640	Argument	fn		409488	1					
ANR	409641	Identifier	fn		409488	0					
ANR	409642	Argument	action		409488	2					
ANR	409643	Identifier	action		409488	0					
ANR	409644	IfStatement	if ( ( mfn = estrdup ( fn ) ) == NULL )		409488	8					
ANR	409645	Condition	( mfn = estrdup ( fn ) ) == NULL	594:5:15476:15502	409488	0	True				
ANR	409646	EqualityExpression	( mfn = estrdup ( fn ) ) == NULL		409488	0		==			
ANR	409647	AssignmentExpression	mfn = estrdup ( fn )		409488	0		=			
ANR	409648	Identifier	mfn		409488	0					
ANR	409649	CallExpression	estrdup ( fn )		409488	1					
ANR	409650	Callee	estrdup		409488	0					
ANR	409651	Identifier	estrdup		409488	0					
ANR	409652	ArgumentList	fn		409488	1					
ANR	409653	Argument	fn		409488	0					
ANR	409654	Identifier	fn		409488	0					
ANR	409655	Identifier	NULL		409488	1					
ANR	409656	CompoundStatement		30:34:590:590	409488	1					
ANR	409657	ExpressionStatement	"file_oomem ( ms , strlen ( fn ) )"	595:2:15509:15535	409488	0	True				
ANR	409658	CallExpression	"file_oomem ( ms , strlen ( fn ) )"		409488	0					
ANR	409659	Callee	file_oomem		409488	0					
ANR	409660	Identifier	file_oomem		409488	0					
ANR	409661	ArgumentList	ms		409488	1					
ANR	409662	Argument	ms		409488	0					
ANR	409663	Identifier	ms		409488	0					
ANR	409664	Argument	strlen ( fn )		409488	1					
ANR	409665	CallExpression	strlen ( fn )		409488	0					
ANR	409666	Callee	strlen		409488	0					
ANR	409667	Identifier	strlen		409488	0					
ANR	409668	ArgumentList	fn		409488	1					
ANR	409669	Argument	fn		409488	0					
ANR	409670	Identifier	fn		409488	0					
ANR	409671	ReturnStatement	return - 1 ;	596:2:15539:15548	409488	1	True				
ANR	409672	UnaryOperationExpression	- 1		409488	0					
ANR	409673	UnaryOperator	-		409488	0					
ANR	409674	PrimaryExpression	1		409488	1					
ANR	409675	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		409488	9					
ANR	409676	ForInit	i = 0 ;	599:6:15560:15565	409488	0	True				
ANR	409677	AssignmentExpression	i = 0		409488	0		=			
ANR	409678	Identifier	i		409488	0					
ANR	409679	PrimaryExpression	0		409488	1					
ANR	409680	Condition	i < MAGIC_SETS	599:13:15567:15580	409488	1	True				
ANR	409681	RelationalExpression	i < MAGIC_SETS		409488	0		<			
ANR	409682	Identifier	i		409488	0					
ANR	409683	Identifier	MAGIC_SETS		409488	1					
ANR	409684	PostIncDecOperationExpression	i ++	599:29:15583:15585	409488	2	True				
ANR	409685	Identifier	i		409488	0					
ANR	409686	IncDec	++		409488	1					
ANR	409687	CompoundStatement		35:34:673:673	409488	3					
ANR	409688	ExpressionStatement	mlist_free ( ms -> mlist [ i ] )	600:2:15592:15616	409488	0	True				
ANR	409689	CallExpression	mlist_free ( ms -> mlist [ i ] )		409488	0					
ANR	409690	Callee	mlist_free		409488	0					
ANR	409691	Identifier	mlist_free		409488	0					
ANR	409692	ArgumentList	ms -> mlist [ i ]		409488	1					
ANR	409693	Argument	ms -> mlist [ i ]		409488	0					
ANR	409694	ArrayIndexing	ms -> mlist [ i ]		409488	0					
ANR	409695	PtrMemberAccess	ms -> mlist		409488	0					
ANR	409696	Identifier	ms		409488	0					
ANR	409697	Identifier	mlist		409488	1					
ANR	409698	Identifier	i		409488	1					
ANR	409699	IfStatement	if ( ( ms -> mlist [ i ] = mlist_alloc ( ) ) == NULL )		409488	1					
ANR	409700	Condition	( ms -> mlist [ i ] = mlist_alloc ( ) ) == NULL	601:6:15624:15661	409488	0	True				
ANR	409701	EqualityExpression	( ms -> mlist [ i ] = mlist_alloc ( ) ) == NULL		409488	0		==			
ANR	409702	AssignmentExpression	ms -> mlist [ i ] = mlist_alloc ( )		409488	0		=			
ANR	409703	ArrayIndexing	ms -> mlist [ i ]		409488	0					
ANR	409704	PtrMemberAccess	ms -> mlist		409488	0					
ANR	409705	Identifier	ms		409488	0					
ANR	409706	Identifier	mlist		409488	1					
ANR	409707	Identifier	i		409488	1					
ANR	409708	CallExpression	mlist_alloc ( )		409488	1					
ANR	409709	Callee	mlist_alloc		409488	0					
ANR	409710	Identifier	mlist_alloc		409488	0					
ANR	409711	ArgumentList			409488	1					
ANR	409712	Identifier	NULL		409488	1					
ANR	409713	CompoundStatement		37:46:749:749	409488	1					
ANR	409714	ExpressionStatement	"file_oomem ( ms , sizeof ( * ms -> mlist [ i ] ) )"	602:3:15669:15706	409488	0	True				
ANR	409715	CallExpression	"file_oomem ( ms , sizeof ( * ms -> mlist [ i ] ) )"		409488	0					
ANR	409716	Callee	file_oomem		409488	0					
ANR	409717	Identifier	file_oomem		409488	0					
ANR	409718	ArgumentList	ms		409488	1					
ANR	409719	Argument	ms		409488	0					
ANR	409720	Identifier	ms		409488	0					
ANR	409721	Argument	sizeof ( * ms -> mlist [ i ] )		409488	1					
ANR	409722	SizeofExpression	sizeof ( * ms -> mlist [ i ] )		409488	0					
ANR	409723	Sizeof	sizeof		409488	0					
ANR	409724	UnaryOperationExpression	* ms -> mlist [ i ]		409488	1					
ANR	409725	UnaryOperator	*		409488	0					
ANR	409726	ArrayIndexing	ms -> mlist [ i ]		409488	1					
ANR	409727	PtrMemberAccess	ms -> mlist		409488	0					
ANR	409728	Identifier	ms		409488	0					
ANR	409729	Identifier	mlist		409488	1					
ANR	409730	Identifier	i		409488	1					
ANR	409731	WhileStatement	while ( i -- > 0 )		409488	1					
ANR	409732	Condition	i -- > 0	603:10:15718:15724	409488	0	True				
ANR	409733	RelationalExpression	i -- > 0		409488	0		>			
ANR	409734	PostIncDecOperationExpression	i --		409488	0					
ANR	409735	Identifier	i		409488	0					
ANR	409736	IncDec	--		409488	1					
ANR	409737	PrimaryExpression	0		409488	1					
ANR	409738	CompoundStatement		39:19:812:812	409488	1					
ANR	409739	ExpressionStatement	mlist_free ( ms -> mlist [ i ] )	604:4:15733:15757	409488	0	True				
ANR	409740	CallExpression	mlist_free ( ms -> mlist [ i ] )		409488	0					
ANR	409741	Callee	mlist_free		409488	0					
ANR	409742	Identifier	mlist_free		409488	0					
ANR	409743	ArgumentList	ms -> mlist [ i ]		409488	1					
ANR	409744	Argument	ms -> mlist [ i ]		409488	0					
ANR	409745	ArrayIndexing	ms -> mlist [ i ]		409488	0					
ANR	409746	PtrMemberAccess	ms -> mlist		409488	0					
ANR	409747	Identifier	ms		409488	0					
ANR	409748	Identifier	mlist		409488	1					
ANR	409749	Identifier	i		409488	1					
ANR	409750	ExpressionStatement	ms -> mlist [ i ] = NULL	605:4:15763:15782	409488	1	True				
ANR	409751	AssignmentExpression	ms -> mlist [ i ] = NULL		409488	0		=			
ANR	409752	ArrayIndexing	ms -> mlist [ i ]		409488	0					
ANR	409753	PtrMemberAccess	ms -> mlist		409488	0					
ANR	409754	Identifier	ms		409488	0					
ANR	409755	Identifier	mlist		409488	1					
ANR	409756	Identifier	i		409488	1					
ANR	409757	Identifier	NULL		409488	1					
ANR	409758	ExpressionStatement	efree ( mfn )	607:3:15792:15802	409488	2	True				
ANR	409759	CallExpression	efree ( mfn )		409488	0					
ANR	409760	Callee	efree		409488	0					
ANR	409761	Identifier	efree		409488	0					
ANR	409762	ArgumentList	mfn		409488	1					
ANR	409763	Argument	mfn		409488	0					
ANR	409764	Identifier	mfn		409488	0					
ANR	409765	ReturnStatement	return - 1 ;	608:3:15807:15816	409488	3	True				
ANR	409766	UnaryOperationExpression	- 1		409488	0					
ANR	409767	UnaryOperator	-		409488	0					
ANR	409768	PrimaryExpression	1		409488	1					
ANR	409769	ExpressionStatement	fn = mfn	611:1:15826:15834	409488	10	True				
ANR	409770	AssignmentExpression	fn = mfn		409488	0		=			
ANR	409771	Identifier	fn		409488	0					
ANR	409772	Identifier	mfn		409488	1					
ANR	409773	WhileStatement	while ( fn )		409488	11					
ANR	409774	Condition	fn	613:8:15845:15846	409488	0	True				
ANR	409775	Identifier	fn		409488	0					
ANR	409776	CompoundStatement		49:12:934:934	409488	1					
ANR	409777	ExpressionStatement	"p = strchr ( fn , PATHSEP )"	614:2:15853:15876	409488	0	True				
ANR	409778	AssignmentExpression	"p = strchr ( fn , PATHSEP )"		409488	0		=			
ANR	409779	Identifier	p		409488	0					
ANR	409780	CallExpression	"strchr ( fn , PATHSEP )"		409488	1					
ANR	409781	Callee	strchr		409488	0					
ANR	409782	Identifier	strchr		409488	0					
ANR	409783	ArgumentList	fn		409488	1					
ANR	409784	Argument	fn		409488	0					
ANR	409785	Identifier	fn		409488	0					
ANR	409786	Argument	PATHSEP		409488	1					
ANR	409787	Identifier	PATHSEP		409488	0					
ANR	409788	IfStatement	if ( p )		409488	1					
ANR	409789	Condition	p	615:6:15884:15884	409488	0	True				
ANR	409790	Identifier	p		409488	0					
ANR	409791	ExpressionStatement	* p ++ = '\\0'	616:3:15890:15901	409488	1	True				
ANR	409792	AssignmentExpression	* p ++ = '\\0'		409488	0		=			
ANR	409793	UnaryOperationExpression	* p ++		409488	0					
ANR	409794	UnaryOperator	*		409488	0					
ANR	409795	PostIncDecOperationExpression	p ++		409488	1					
ANR	409796	Identifier	p		409488	0					
ANR	409797	IncDec	++		409488	1					
ANR	409798	PrimaryExpression	'\\0'		409488	1					
ANR	409799	IfStatement	if ( * fn == '\\0' )		409488	2					
ANR	409800	Condition	* fn == '\\0'	617:6:15909:15919	409488	0	True				
ANR	409801	EqualityExpression	* fn == '\\0'		409488	0		==			
ANR	409802	UnaryOperationExpression	* fn		409488	0					
ANR	409803	UnaryOperator	*		409488	0					
ANR	409804	Identifier	fn		409488	1					
ANR	409805	PrimaryExpression	'\\0'		409488	1					
ANR	409806	BreakStatement	break ;	618:3:15925:15930	409488	1	True				
ANR	409807	ExpressionStatement	"file_err = apprentice_1 ( ms , fn , action )"	619:2:15934:15973	409488	3	True				
ANR	409808	AssignmentExpression	"file_err = apprentice_1 ( ms , fn , action )"		409488	0		=			
ANR	409809	Identifier	file_err		409488	0					
ANR	409810	CallExpression	"apprentice_1 ( ms , fn , action )"		409488	1					
ANR	409811	Callee	apprentice_1		409488	0					
ANR	409812	Identifier	apprentice_1		409488	0					
ANR	409813	ArgumentList	ms		409488	1					
ANR	409814	Argument	ms		409488	0					
ANR	409815	Identifier	ms		409488	0					
ANR	409816	Argument	fn		409488	1					
ANR	409817	Identifier	fn		409488	0					
ANR	409818	Argument	action		409488	2					
ANR	409819	Identifier	action		409488	0					
ANR	409820	ExpressionStatement	"errs = MAX ( errs , file_err )"	620:2:15977:16003	409488	4	True				
ANR	409821	AssignmentExpression	"errs = MAX ( errs , file_err )"		409488	0		=			
ANR	409822	Identifier	errs		409488	0					
ANR	409823	CallExpression	"MAX ( errs , file_err )"		409488	1					
ANR	409824	Callee	MAX		409488	0					
ANR	409825	Identifier	MAX		409488	0					
ANR	409826	ArgumentList	errs		409488	1					
ANR	409827	Argument	errs		409488	0					
ANR	409828	Identifier	errs		409488	0					
ANR	409829	Argument	file_err		409488	1					
ANR	409830	Identifier	file_err		409488	0					
ANR	409831	ExpressionStatement	fn = p	621:2:16007:16013	409488	5	True				
ANR	409832	AssignmentExpression	fn = p		409488	0		=			
ANR	409833	Identifier	fn		409488	0					
ANR	409834	Identifier	p		409488	1					
ANR	409835	ExpressionStatement	efree ( mfn )	624:1:16020:16030	409488	12	True				
ANR	409836	CallExpression	efree ( mfn )		409488	0					
ANR	409837	Callee	efree		409488	0					
ANR	409838	Identifier	efree		409488	0					
ANR	409839	ArgumentList	mfn		409488	1					
ANR	409840	Argument	mfn		409488	0					
ANR	409841	Identifier	mfn		409488	0					
ANR	409842	IfStatement	if ( errs == - 1 )		409488	13					
ANR	409843	Condition	errs == - 1	626:5:16038:16047	409488	0	True				
ANR	409844	EqualityExpression	errs == - 1		409488	0		==			
ANR	409845	Identifier	errs		409488	0					
ANR	409846	UnaryOperationExpression	- 1		409488	1					
ANR	409847	UnaryOperator	-		409488	0					
ANR	409848	PrimaryExpression	1		409488	1					
ANR	409849	CompoundStatement		62:17:1135:1135	409488	1					
ANR	409850	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		409488	0					
ANR	409851	ForInit	i = 0 ;	627:7:16059:16064	409488	0	True				
ANR	409852	AssignmentExpression	i = 0		409488	0		=			
ANR	409853	Identifier	i		409488	0					
ANR	409854	PrimaryExpression	0		409488	1					
ANR	409855	Condition	i < MAGIC_SETS	627:14:16066:16079	409488	1	True				
ANR	409856	RelationalExpression	i < MAGIC_SETS		409488	0		<			
ANR	409857	Identifier	i		409488	0					
ANR	409858	Identifier	MAGIC_SETS		409488	1					
ANR	409859	PostIncDecOperationExpression	i ++	627:30:16082:16084	409488	2	True				
ANR	409860	Identifier	i		409488	0					
ANR	409861	IncDec	++		409488	1					
ANR	409862	CompoundStatement		63:35:1172:1172	409488	3					
ANR	409863	ExpressionStatement	mlist_free ( ms -> mlist [ i ] )	628:3:16092:16116	409488	0	True				
ANR	409864	CallExpression	mlist_free ( ms -> mlist [ i ] )		409488	0					
ANR	409865	Callee	mlist_free		409488	0					
ANR	409866	Identifier	mlist_free		409488	0					
ANR	409867	ArgumentList	ms -> mlist [ i ]		409488	1					
ANR	409868	Argument	ms -> mlist [ i ]		409488	0					
ANR	409869	ArrayIndexing	ms -> mlist [ i ]		409488	0					
ANR	409870	PtrMemberAccess	ms -> mlist		409488	0					
ANR	409871	Identifier	ms		409488	0					
ANR	409872	Identifier	mlist		409488	1					
ANR	409873	Identifier	i		409488	1					
ANR	409874	ExpressionStatement	ms -> mlist [ i ] = NULL	629:3:16121:16140	409488	1	True				
ANR	409875	AssignmentExpression	ms -> mlist [ i ] = NULL		409488	0		=			
ANR	409876	ArrayIndexing	ms -> mlist [ i ]		409488	0					
ANR	409877	PtrMemberAccess	ms -> mlist		409488	0					
ANR	409878	Identifier	ms		409488	0					
ANR	409879	Identifier	mlist		409488	1					
ANR	409880	Identifier	i		409488	1					
ANR	409881	Identifier	NULL		409488	1					
ANR	409882	ExpressionStatement	"file_error ( ms , 0 , ""could not find any valid magic files!"" )"	631:2:16148:16206	409488	1	True				
ANR	409883	CallExpression	"file_error ( ms , 0 , ""could not find any valid magic files!"" )"		409488	0					
ANR	409884	Callee	file_error		409488	0					
ANR	409885	Identifier	file_error		409488	0					
ANR	409886	ArgumentList	ms		409488	1					
ANR	409887	Argument	ms		409488	0					
ANR	409888	Identifier	ms		409488	0					
ANR	409889	Argument	0		409488	1					
ANR	409890	PrimaryExpression	0		409488	0					
ANR	409891	Argument	"""could not find any valid magic files!"""		409488	2					
ANR	409892	PrimaryExpression	"""could not find any valid magic files!"""		409488	0					
ANR	409893	ReturnStatement	return - 1 ;	632:2:16210:16219	409488	2	True				
ANR	409894	UnaryOperationExpression	- 1		409488	0					
ANR	409895	UnaryOperator	-		409488	0					
ANR	409896	PrimaryExpression	1		409488	1					
ANR	409897	IfStatement	if ( action == FILE_LOAD )		409488	14					
ANR	409898	Condition	action == FILE_LOAD	639:5:16282:16300	409488	0	True				
ANR	409899	EqualityExpression	action == FILE_LOAD		409488	0		==			
ANR	409900	Identifier	action		409488	0					
ANR	409901	Identifier	FILE_LOAD		409488	1					
ANR	409902	ReturnStatement	return 0 ;	640:2:16305:16313	409488	1	True				
ANR	409903	PrimaryExpression	0		409488	0					
ANR	409904	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		409488	15					
ANR	409905	ForInit	i = 0 ;	642:6:16322:16327	409488	0	True				
ANR	409906	AssignmentExpression	i = 0		409488	0		=			
ANR	409907	Identifier	i		409488	0					
ANR	409908	PrimaryExpression	0		409488	1					
ANR	409909	Condition	i < MAGIC_SETS	642:13:16329:16342	409488	1	True				
ANR	409910	RelationalExpression	i < MAGIC_SETS		409488	0		<			
ANR	409911	Identifier	i		409488	0					
ANR	409912	Identifier	MAGIC_SETS		409488	1					
ANR	409913	PostIncDecOperationExpression	i ++	642:29:16345:16347	409488	2	True				
ANR	409914	Identifier	i		409488	0					
ANR	409915	IncDec	++		409488	1					
ANR	409916	CompoundStatement		78:34:1435:1435	409488	3					
ANR	409917	ExpressionStatement	mlist_free ( ms -> mlist [ i ] )	643:2:16354:16378	409488	0	True				
ANR	409918	CallExpression	mlist_free ( ms -> mlist [ i ] )		409488	0					
ANR	409919	Callee	mlist_free		409488	0					
ANR	409920	Identifier	mlist_free		409488	0					
ANR	409921	ArgumentList	ms -> mlist [ i ]		409488	1					
ANR	409922	Argument	ms -> mlist [ i ]		409488	0					
ANR	409923	ArrayIndexing	ms -> mlist [ i ]		409488	0					
ANR	409924	PtrMemberAccess	ms -> mlist		409488	0					
ANR	409925	Identifier	ms		409488	0					
ANR	409926	Identifier	mlist		409488	1					
ANR	409927	Identifier	i		409488	1					
ANR	409928	ExpressionStatement	ms -> mlist [ i ] = NULL	644:2:16382:16401	409488	1	True				
ANR	409929	AssignmentExpression	ms -> mlist [ i ] = NULL		409488	0		=			
ANR	409930	ArrayIndexing	ms -> mlist [ i ]		409488	0					
ANR	409931	PtrMemberAccess	ms -> mlist		409488	0					
ANR	409932	Identifier	ms		409488	0					
ANR	409933	Identifier	mlist		409488	1					
ANR	409934	Identifier	i		409488	1					
ANR	409935	Identifier	NULL		409488	1					
ANR	409936	SwitchStatement	switch ( action )		409488	16					
ANR	409937	Condition	action	648:9:16423:16428	409488	0	True				
ANR	409938	Identifier	action		409488	0					
ANR	409939	CompoundStatement		84:17:1516:1516	409488	1					
ANR	409940	Label	case FILE_LOAD :	649:1:16434:16448	409488	0	True				
ANR	409941	Identifier	FILE_LOAD		409488	0					
ANR	409942	Label	case FILE_COMPILE :	650:1:16451:16468	409488	1	True				
ANR	409943	Identifier	FILE_COMPILE		409488	0					
ANR	409944	Label	case FILE_CHECK :	651:1:16471:16486	409488	2	True				
ANR	409945	Identifier	FILE_CHECK		409488	0					
ANR	409946	Label	case FILE_LIST :	652:1:16489:16503	409488	3	True				
ANR	409947	Identifier	FILE_LIST		409488	0					
ANR	409948	ReturnStatement	return 0 ;	653:2:16507:16515	409488	4	True				
ANR	409949	PrimaryExpression	0		409488	0					
ANR	409950	Label	default :	654:1:16518:16525	409488	5	True				
ANR	409951	Identifier	default		409488	0					
ANR	409952	ExpressionStatement	"file_error ( ms , 0 , ""Invalid action %d"" , action )"	655:2:16529:16575	409488	6	True				
ANR	409953	CallExpression	"file_error ( ms , 0 , ""Invalid action %d"" , action )"		409488	0					
ANR	409954	Callee	file_error		409488	0					
ANR	409955	Identifier	file_error		409488	0					
ANR	409956	ArgumentList	ms		409488	1					
ANR	409957	Argument	ms		409488	0					
ANR	409958	Identifier	ms		409488	0					
ANR	409959	Argument	0		409488	1					
ANR	409960	PrimaryExpression	0		409488	0					
ANR	409961	Argument	"""Invalid action %d"""		409488	2					
ANR	409962	PrimaryExpression	"""Invalid action %d"""		409488	0					
ANR	409963	Argument	action		409488	3					
ANR	409964	Identifier	action		409488	0					
ANR	409965	ReturnStatement	return - 1 ;	656:2:16579:16588	409488	7	True				
ANR	409966	UnaryOperationExpression	- 1		409488	0					
ANR	409967	UnaryOperator	-		409488	0					
ANR	409968	PrimaryExpression	1		409488	1					
ANR	409969	ReturnType	int		409488	1					
ANR	409970	Identifier	file_apprentice		409488	2					
ANR	409971	ParameterList	"struct magic_set * ms , const char * fn , int action"		409488	3					
ANR	409972	Parameter	struct magic_set * ms	564:16:14864:14883	409488	0	True				
ANR	409973	ParameterType	struct magic_set *		409488	0					
ANR	409974	Identifier	ms		409488	1					
ANR	409975	Parameter	const char * fn	564:38:14886:14899	409488	1	True				
ANR	409976	ParameterType	const char *		409488	0					
ANR	409977	Identifier	fn		409488	1					
ANR	409978	Parameter	int action	564:54:14902:14911	409488	2	True				
ANR	409979	ParameterType	int		409488	0					
ANR	409980	Identifier	action		409488	1					
ANR	409981	CFGEntryNode	ENTRY		409488		True				
ANR	409982	CFGExitNode	EXIT		409488		True				
ANR	409983	Symbol	errs		409488						
ANR	409984	Symbol	MAGIC_SETS		409488						
ANR	409985	Symbol	MAX		409488						
ANR	409986	Symbol	ms -> mlist		409488						
ANR	409987	Symbol	apprentice_1		409488						
ANR	409988	Symbol	fn		409488						
ANR	409989	Symbol	strchr		409488						
ANR	409990	Symbol	mlist_alloc		409488						
ANR	409991	Symbol	file_err		409488						
ANR	409992	Symbol	* ms		409488						
ANR	409993	Symbol	* * ms		409488						
ANR	409994	Symbol	strlen		409488						
ANR	409995	Symbol	* * ms -> mlist		409488						
ANR	409996	Symbol	* ms -> mlist [ i ]		409488						
ANR	409997	Symbol	action		409488						
ANR	409998	Symbol	getenv		409488						
ANR	409999	Symbol	* * i		409488						
ANR	410000	Symbol	NULL		409488						
ANR	410001	Symbol	* ms -> mlist		409488						
ANR	410002	Symbol	ms		409488						
ANR	410003	Symbol	PATHSEP		409488						
ANR	410004	Symbol	* p ++		409488						
ANR	410005	Symbol	i		409488						
ANR	410006	Symbol	FILE_LOAD		409488						
ANR	410007	Symbol	* fn		409488						
ANR	410008	Symbol	p		409488						
ANR	410009	Symbol	* * * ms		409488						
ANR	410010	Symbol	* i		409488						
ANR	410011	Symbol	mfn		409488						
ANR	410012	Symbol	estrdup		409488						
ANR	410013	Symbol	magic_getpath		409488						
ANR	410014	Function	nonmagic	670:8:16981:17640							
ANR	410015	FunctionDef	nonmagic (const char * str)		410014	0					
ANR	410016	CompoundStatement		672:0:17014:17640	410014	0					
ANR	410017	IdentifierDeclStatement	const char * p ;	673:1:17017:17030	410014	0	True				
ANR	410018	IdentifierDecl	* p		410014	0					
ANR	410019	IdentifierDeclType	const char *		410014	0					
ANR	410020	Identifier	p		410014	1					
ANR	410021	IdentifierDeclStatement	size_t rv = 0 ;	674:1:17033:17046	410014	1	True				
ANR	410022	IdentifierDecl	rv = 0		410014	0					
ANR	410023	IdentifierDeclType	size_t		410014	0					
ANR	410024	Identifier	rv		410014	1					
ANR	410025	AssignmentExpression	rv = 0		410014	2		=			
ANR	410026	Identifier	rv		410014	0					
ANR	410027	PrimaryExpression	0		410014	1					
ANR	410028	ForStatement	for ( p = str ; * p ; p ++ )		410014	2					
ANR	410029	ForInit	p = str ;	676:6:17055:17062	410014	0	True				
ANR	410030	AssignmentExpression	p = str		410014	0		=			
ANR	410031	Identifier	p		410014	0					
ANR	410032	Identifier	str		410014	1					
ANR	410033	Condition	* p	676:15:17064:17065	410014	1	True				
ANR	410034	UnaryOperationExpression	* p		410014	0					
ANR	410035	UnaryOperator	*		410014	0					
ANR	410036	Identifier	p		410014	1					
ANR	410037	PostIncDecOperationExpression	p ++	676:19:17068:17070	410014	2	True				
ANR	410038	Identifier	p		410014	0					
ANR	410039	IncDec	++		410014	1					
ANR	410040	SwitchStatement	switch ( * p )		410014	3					
ANR	410041	Condition	* p	677:10:17083:17084	410014	0	True				
ANR	410042	UnaryOperationExpression	* p		410014	0					
ANR	410043	UnaryOperator	*		410014	0					
ANR	410044	Identifier	p		410014	1					
ANR	410045	CompoundStatement		6:14:72:72	410014	1					
ANR	410046	Label	case '\\\\' :	678:2:17091:17100	410014	0	True				
ANR	410047	IfStatement	if ( ! * ++ p )		410014	1					
ANR	410048	Condition	! * ++ p	679:7:17141:17145	410014	0	True				
ANR	410049	UnaryOperationExpression	! * ++ p		410014	0					
ANR	410050	UnaryOperator	!		410014	0					
ANR	410051	UnaryOperationExpression	* ++ p		410014	1					
ANR	410052	UnaryOperator	*		410014	0					
ANR	410053	UnaryExpression	++ p		410014	1					
ANR	410054	IncDec	++		410014	0					
ANR	410055	Identifier	p		410014	1					
ANR	410056	ExpressionStatement	p --	680:4:17152:17155	410014	1	True				
ANR	410057	PostIncDecOperationExpression	p --		410014	0					
ANR	410058	Identifier	p		410014	0					
ANR	410059	IncDec	--		410014	1					
ANR	410060	ExpressionStatement	rv ++	681:3:17160:17164	410014	2	True				
ANR	410061	PostIncDecOperationExpression	rv ++		410014	0					
ANR	410062	Identifier	rv		410014	0					
ANR	410063	IncDec	++		410014	1					
ANR	410064	ContinueStatement	continue ;	682:3:17169:17177	410014	3	True				
ANR	410065	Label	case '?' :	683:2:17181:17189	410014	4	True				
ANR	410066	Label	case '*' :	684:2:17224:17232	410014	5	True				
ANR	410067	Label	case '.' :	685:2:17236:17244	410014	6	True				
ANR	410068	Label	case '+' :	686:2:17248:17256	410014	7	True				
ANR	410069	Label	case '^' :	687:2:17260:17268	410014	8	True				
ANR	410070	Label	case '$' :	688:2:17272:17280	410014	9	True				
ANR	410071	ContinueStatement	continue ;	689:3:17285:17293	410014	10	True				
ANR	410072	Label	case '[' :	690:2:17297:17305	410014	11	True				
ANR	410073	WhileStatement	while ( * p && * p != ']' )		410014	12					
ANR	410074	Condition	* p && * p != ']'	691:10:17361:17375	410014	0	True				
ANR	410075	AndExpression	* p && * p != ']'		410014	0		&&			
ANR	410076	UnaryOperationExpression	* p		410014	0					
ANR	410077	UnaryOperator	*		410014	0					
ANR	410078	Identifier	p		410014	1					
ANR	410079	EqualityExpression	* p != ']'		410014	1		!=			
ANR	410080	UnaryOperationExpression	* p		410014	0					
ANR	410081	UnaryOperator	*		410014	0					
ANR	410082	Identifier	p		410014	1					
ANR	410083	PrimaryExpression	']'		410014	1					
ANR	410084	ExpressionStatement	p ++	692:4:17382:17385	410014	1	True				
ANR	410085	PostIncDecOperationExpression	p ++		410014	0					
ANR	410086	Identifier	p		410014	0					
ANR	410087	IncDec	++		410014	1					
ANR	410088	ExpressionStatement	p --	693:3:17390:17393	410014	13	True				
ANR	410089	PostIncDecOperationExpression	p --		410014	0					
ANR	410090	Identifier	p		410014	0					
ANR	410091	IncDec	--		410014	1					
ANR	410092	ContinueStatement	continue ;	694:3:17398:17406	410014	14	True				
ANR	410093	Label	case '{' :	695:2:17410:17418	410014	15	True				
ANR	410094	WhileStatement	while ( * p && * p != '}' )		410014	16					
ANR	410095	Condition	* p && * p != '}'	696:10:17463:17477	410014	0	True				
ANR	410096	AndExpression	* p && * p != '}'		410014	0		&&			
ANR	410097	UnaryOperationExpression	* p		410014	0					
ANR	410098	UnaryOperator	*		410014	0					
ANR	410099	Identifier	p		410014	1					
ANR	410100	EqualityExpression	* p != '}'		410014	1		!=			
ANR	410101	UnaryOperationExpression	* p		410014	0					
ANR	410102	UnaryOperator	*		410014	0					
ANR	410103	Identifier	p		410014	1					
ANR	410104	PrimaryExpression	'}'		410014	1					
ANR	410105	ExpressionStatement	p ++	697:4:17484:17487	410014	1	True				
ANR	410106	PostIncDecOperationExpression	p ++		410014	0					
ANR	410107	Identifier	p		410014	0					
ANR	410108	IncDec	++		410014	1					
ANR	410109	IfStatement	if ( ! * p )		410014	17					
ANR	410110	Condition	! * p	698:7:17496:17498	410014	0	True				
ANR	410111	UnaryOperationExpression	! * p		410014	0					
ANR	410112	UnaryOperator	!		410014	0					
ANR	410113	UnaryOperationExpression	* p		410014	1					
ANR	410114	UnaryOperator	*		410014	0					
ANR	410115	Identifier	p		410014	1					
ANR	410116	ExpressionStatement	p --	699:4:17505:17508	410014	1	True				
ANR	410117	PostIncDecOperationExpression	p --		410014	0					
ANR	410118	Identifier	p		410014	0					
ANR	410119	IncDec	--		410014	1					
ANR	410120	ContinueStatement	continue ;	700:3:17513:17521	410014	18	True				
ANR	410121	Label	default :	701:2:17525:17532	410014	19	True				
ANR	410122	Identifier	default		410014	0					
ANR	410123	ExpressionStatement	rv ++	702:3:17566:17570	410014	20	True				
ANR	410124	PostIncDecOperationExpression	rv ++		410014	0					
ANR	410125	Identifier	rv		410014	0					
ANR	410126	IncDec	++		410014	1					
ANR	410127	ContinueStatement	continue ;	703:3:17575:17583	410014	21	True				
ANR	410128	ReturnStatement	return rv == 0 ? 1 : rv ;	706:1:17591:17614	410014	3	True				
ANR	410129	ConditionalExpression	rv == 0 ? 1 : rv		410014	0					
ANR	410130	Condition	rv == 0		410014	0					
ANR	410131	EqualityExpression	rv == 0		410014	0		==			
ANR	410132	Identifier	rv		410014	0					
ANR	410133	PrimaryExpression	0		410014	1					
ANR	410134	PrimaryExpression	1		410014	1					
ANR	410135	Identifier	rv		410014	2					
ANR	410136	ReturnType	size_t		410014	1					
ANR	410137	Identifier	nonmagic		410014	2					
ANR	410138	ParameterList	const char * str		410014	3					
ANR	410139	Parameter	const char * str	671:9:16997:17011	410014	0	True				
ANR	410140	ParameterType	const char *		410014	0					
ANR	410141	Identifier	str		410014	1					
ANR	410142	CFGEntryNode	ENTRY		410014		True				
ANR	410143	CFGExitNode	EXIT		410014		True				
ANR	410144	Symbol	str		410014						
ANR	410145	Symbol	p		410014						
ANR	410146	Symbol	rv		410014						
ANR	410147	Symbol	* ++ p		410014						
ANR	410148	Symbol	* p		410014						
ANR	410149	Function	apprentice_magic_strength	712:8:17715:20273							
ANR	410150	FunctionDef	apprentice_magic_strength (const struct magic * m)		410149	0					
ANR	410151	CompoundStatement		714:0:17771:20273	410149	0					
ANR	410152	Statement	define	715:1:17774:17779	410149	0	True				
ANR	410153	Statement	MULT	715:8:17781:17784	410149	1	True				
ANR	410154	Statement	10	715:13:17786:17787	410149	2	True				
ANR	410155	IdentifierDeclStatement	"size_t v , val = 2 * MULT ;"	716:1:17790:17814	410149	3	True				
ANR	410156	IdentifierDecl	v		410149	0					
ANR	410157	IdentifierDeclType	size_t		410149	0					
ANR	410158	Identifier	v		410149	1					
ANR	410159	IdentifierDecl	val = 2 * MULT		410149	1					
ANR	410160	IdentifierDeclType	size_t		410149	0					
ANR	410161	Identifier	val		410149	1					
ANR	410162	AssignmentExpression	val = 2 * MULT		410149	2		=			
ANR	410163	Identifier	val		410149	0					
ANR	410164	MultiplicativeExpression	2 * MULT		410149	1		*			
ANR	410165	PrimaryExpression	2		410149	0					
ANR	410166	Identifier	MULT		410149	1					
ANR	410167	SwitchStatement	switch ( m -> type )		410149	4					
ANR	410168	Condition	m -> type	718:9:17850:17856	410149	0	True				
ANR	410169	PtrMemberAccess	m -> type		410149	0					
ANR	410170	Identifier	m		410149	0					
ANR	410171	Identifier	type		410149	1					
ANR	410172	CompoundStatement		5:18:87:87	410149	1					
ANR	410173	Label	case FILE_DEFAULT :	719:1:17862:17879	410149	0	True				
ANR	410174	Identifier	FILE_DEFAULT		410149	0					
ANR	410175	IfStatement	if ( m -> factor_op != FILE_FACTOR_OP_NONE )		410149	1					
ANR	410176	Condition	m -> factor_op != FILE_FACTOR_OP_NONE	720:6:17919:17953	410149	0	True				
ANR	410177	EqualityExpression	m -> factor_op != FILE_FACTOR_OP_NONE		410149	0		!=			
ANR	410178	PtrMemberAccess	m -> factor_op		410149	0					
ANR	410179	Identifier	m		410149	0					
ANR	410180	Identifier	factor_op		410149	1					
ANR	410181	Identifier	FILE_FACTOR_OP_NONE		410149	1					
ANR	410182	ExpressionStatement	abort ( )	721:3:17959:17966	410149	1	True				
ANR	410183	CallExpression	abort ( )		410149	0					
ANR	410184	Callee	abort		410149	0					
ANR	410185	Identifier	abort		410149	0					
ANR	410186	ArgumentList			410149	1					
ANR	410187	ReturnStatement	return 0 ;	722:2:17970:17978	410149	2	True				
ANR	410188	PrimaryExpression	0		410149	0					
ANR	410189	Label	case FILE_BYTE :	724:1:17982:17996	410149	3	True				
ANR	410190	Identifier	FILE_BYTE		410149	0					
ANR	410191	ExpressionStatement	val += 1 * MULT	725:2:18000:18015	410149	4	True				
ANR	410192	AssignmentExpression	val += 1 * MULT		410149	0		+=			
ANR	410193	Identifier	val		410149	0					
ANR	410194	MultiplicativeExpression	1 * MULT		410149	1		*			
ANR	410195	PrimaryExpression	1		410149	0					
ANR	410196	Identifier	MULT		410149	1					
ANR	410197	BreakStatement	break ;	726:2:18019:18024	410149	5	True				
ANR	410198	Label	case FILE_SHORT :	728:1:18028:18043	410149	6	True				
ANR	410199	Identifier	FILE_SHORT		410149	0					
ANR	410200	Label	case FILE_LESHORT :	729:1:18046:18063	410149	7	True				
ANR	410201	Identifier	FILE_LESHORT		410149	0					
ANR	410202	Label	case FILE_BESHORT :	730:1:18066:18083	410149	8	True				
ANR	410203	Identifier	FILE_BESHORT		410149	0					
ANR	410204	ExpressionStatement	val += 2 * MULT	731:2:18087:18102	410149	9	True				
ANR	410205	AssignmentExpression	val += 2 * MULT		410149	0		+=			
ANR	410206	Identifier	val		410149	0					
ANR	410207	MultiplicativeExpression	2 * MULT		410149	1		*			
ANR	410208	PrimaryExpression	2		410149	0					
ANR	410209	Identifier	MULT		410149	1					
ANR	410210	BreakStatement	break ;	732:2:18106:18111	410149	10	True				
ANR	410211	Label	case FILE_LONG :	734:1:18115:18129	410149	11	True				
ANR	410212	Identifier	FILE_LONG		410149	0					
ANR	410213	Label	case FILE_LELONG :	735:1:18132:18148	410149	12	True				
ANR	410214	Identifier	FILE_LELONG		410149	0					
ANR	410215	Label	case FILE_BELONG :	736:1:18151:18167	410149	13	True				
ANR	410216	Identifier	FILE_BELONG		410149	0					
ANR	410217	Label	case FILE_MELONG :	737:1:18170:18186	410149	14	True				
ANR	410218	Identifier	FILE_MELONG		410149	0					
ANR	410219	ExpressionStatement	val += 4 * MULT	738:2:18190:18205	410149	15	True				
ANR	410220	AssignmentExpression	val += 4 * MULT		410149	0		+=			
ANR	410221	Identifier	val		410149	0					
ANR	410222	MultiplicativeExpression	4 * MULT		410149	1		*			
ANR	410223	PrimaryExpression	4		410149	0					
ANR	410224	Identifier	MULT		410149	1					
ANR	410225	BreakStatement	break ;	739:2:18209:18214	410149	16	True				
ANR	410226	Label	case FILE_PSTRING :	741:1:18218:18235	410149	17	True				
ANR	410227	Identifier	FILE_PSTRING		410149	0					
ANR	410228	Label	case FILE_STRING :	742:1:18238:18254	410149	18	True				
ANR	410229	Identifier	FILE_STRING		410149	0					
ANR	410230	ExpressionStatement	val += m -> vallen * MULT	743:2:18258:18281	410149	19	True				
ANR	410231	AssignmentExpression	val += m -> vallen * MULT		410149	0		+=			
ANR	410232	Identifier	val		410149	0					
ANR	410233	MultiplicativeExpression	m -> vallen * MULT		410149	1		*			
ANR	410234	PtrMemberAccess	m -> vallen		410149	0					
ANR	410235	Identifier	m		410149	0					
ANR	410236	Identifier	vallen		410149	1					
ANR	410237	Identifier	MULT		410149	1					
ANR	410238	BreakStatement	break ;	744:2:18285:18290	410149	20	True				
ANR	410239	Label	case FILE_BESTRING16 :	746:1:18294:18314	410149	21	True				
ANR	410240	Identifier	FILE_BESTRING16		410149	0					
ANR	410241	Label	case FILE_LESTRING16 :	747:1:18317:18337	410149	22	True				
ANR	410242	Identifier	FILE_LESTRING16		410149	0					
ANR	410243	ExpressionStatement	val += m -> vallen * MULT / 2	748:2:18341:18368	410149	23	True				
ANR	410244	AssignmentExpression	val += m -> vallen * MULT / 2		410149	0		+=			
ANR	410245	Identifier	val		410149	0					
ANR	410246	MultiplicativeExpression	m -> vallen * MULT / 2		410149	1		*			
ANR	410247	PtrMemberAccess	m -> vallen		410149	0					
ANR	410248	Identifier	m		410149	0					
ANR	410249	Identifier	vallen		410149	1					
ANR	410250	MultiplicativeExpression	MULT / 2		410149	1		/			
ANR	410251	Identifier	MULT		410149	0					
ANR	410252	PrimaryExpression	2		410149	1					
ANR	410253	BreakStatement	break ;	749:2:18372:18377	410149	24	True				
ANR	410254	Label	case FILE_SEARCH :	751:1:18381:18397	410149	25	True				
ANR	410255	Identifier	FILE_SEARCH		410149	0					
ANR	410256	ExpressionStatement	"val += m -> vallen * MAX ( MULT / m -> vallen , 1 )"	752:2:18401:18444	410149	26	True				
ANR	410257	AssignmentExpression	"val += m -> vallen * MAX ( MULT / m -> vallen , 1 )"		410149	0		+=			
ANR	410258	Identifier	val		410149	0					
ANR	410259	MultiplicativeExpression	"m -> vallen * MAX ( MULT / m -> vallen , 1 )"		410149	1		*			
ANR	410260	PtrMemberAccess	m -> vallen		410149	0					
ANR	410261	Identifier	m		410149	0					
ANR	410262	Identifier	vallen		410149	1					
ANR	410263	CallExpression	"MAX ( MULT / m -> vallen , 1 )"		410149	1					
ANR	410264	Callee	MAX		410149	0					
ANR	410265	Identifier	MAX		410149	0					
ANR	410266	ArgumentList	MULT / m -> vallen		410149	1					
ANR	410267	Argument	MULT / m -> vallen		410149	0					
ANR	410268	MultiplicativeExpression	MULT / m -> vallen		410149	0		/			
ANR	410269	Identifier	MULT		410149	0					
ANR	410270	PtrMemberAccess	m -> vallen		410149	1					
ANR	410271	Identifier	m		410149	0					
ANR	410272	Identifier	vallen		410149	1					
ANR	410273	Argument	1		410149	1					
ANR	410274	PrimaryExpression	1		410149	0					
ANR	410275	BreakStatement	break ;	753:2:18448:18453	410149	27	True				
ANR	410276	Label	case FILE_REGEX :	755:1:18457:18472	410149	28	True				
ANR	410277	Identifier	FILE_REGEX		410149	0					
ANR	410278	ExpressionStatement	v = nonmagic ( m -> value . s )	756:2:18476:18500	410149	29	True				
ANR	410279	AssignmentExpression	v = nonmagic ( m -> value . s )		410149	0		=			
ANR	410280	Identifier	v		410149	0					
ANR	410281	CallExpression	nonmagic ( m -> value . s )		410149	1					
ANR	410282	Callee	nonmagic		410149	0					
ANR	410283	Identifier	nonmagic		410149	0					
ANR	410284	ArgumentList	m -> value . s		410149	1					
ANR	410285	Argument	m -> value . s		410149	0					
ANR	410286	MemberAccess	m -> value . s		410149	0					
ANR	410287	PtrMemberAccess	m -> value		410149	0					
ANR	410288	Identifier	m		410149	0					
ANR	410289	Identifier	value		410149	1					
ANR	410290	Identifier	s		410149	1					
ANR	410291	ExpressionStatement	"val += v * MAX ( MULT / v , 1 )"	757:2:18504:18531	410149	30	True				
ANR	410292	AssignmentExpression	"val += v * MAX ( MULT / v , 1 )"		410149	0		+=			
ANR	410293	Identifier	val		410149	0					
ANR	410294	MultiplicativeExpression	"v * MAX ( MULT / v , 1 )"		410149	1		*			
ANR	410295	Identifier	v		410149	0					
ANR	410296	CallExpression	"MAX ( MULT / v , 1 )"		410149	1					
ANR	410297	Callee	MAX		410149	0					
ANR	410298	Identifier	MAX		410149	0					
ANR	410299	ArgumentList	MULT / v		410149	1					
ANR	410300	Argument	MULT / v		410149	0					
ANR	410301	MultiplicativeExpression	MULT / v		410149	0		/			
ANR	410302	Identifier	MULT		410149	0					
ANR	410303	Identifier	v		410149	1					
ANR	410304	Argument	1		410149	1					
ANR	410305	PrimaryExpression	1		410149	0					
ANR	410306	BreakStatement	break ;	758:2:18535:18540	410149	31	True				
ANR	410307	Label	case FILE_DATE :	760:1:18544:18558	410149	32	True				
ANR	410308	Identifier	FILE_DATE		410149	0					
ANR	410309	Label	case FILE_LEDATE :	761:1:18561:18577	410149	33	True				
ANR	410310	Identifier	FILE_LEDATE		410149	0					
ANR	410311	Label	case FILE_BEDATE :	762:1:18580:18596	410149	34	True				
ANR	410312	Identifier	FILE_BEDATE		410149	0					
ANR	410313	Label	case FILE_MEDATE :	763:1:18599:18615	410149	35	True				
ANR	410314	Identifier	FILE_MEDATE		410149	0					
ANR	410315	Label	case FILE_LDATE :	764:1:18618:18633	410149	36	True				
ANR	410316	Identifier	FILE_LDATE		410149	0					
ANR	410317	Label	case FILE_LELDATE :	765:1:18636:18653	410149	37	True				
ANR	410318	Identifier	FILE_LELDATE		410149	0					
ANR	410319	Label	case FILE_BELDATE :	766:1:18656:18673	410149	38	True				
ANR	410320	Identifier	FILE_BELDATE		410149	0					
ANR	410321	Label	case FILE_MELDATE :	767:1:18676:18693	410149	39	True				
ANR	410322	Identifier	FILE_MELDATE		410149	0					
ANR	410323	Label	case FILE_FLOAT :	768:1:18696:18711	410149	40	True				
ANR	410324	Identifier	FILE_FLOAT		410149	0					
ANR	410325	Label	case FILE_BEFLOAT :	769:1:18714:18731	410149	41	True				
ANR	410326	Identifier	FILE_BEFLOAT		410149	0					
ANR	410327	Label	case FILE_LEFLOAT :	770:1:18734:18751	410149	42	True				
ANR	410328	Identifier	FILE_LEFLOAT		410149	0					
ANR	410329	ExpressionStatement	val += 4 * MULT	771:2:18755:18770	410149	43	True				
ANR	410330	AssignmentExpression	val += 4 * MULT		410149	0		+=			
ANR	410331	Identifier	val		410149	0					
ANR	410332	MultiplicativeExpression	4 * MULT		410149	1		*			
ANR	410333	PrimaryExpression	4		410149	0					
ANR	410334	Identifier	MULT		410149	1					
ANR	410335	BreakStatement	break ;	772:2:18774:18779	410149	44	True				
ANR	410336	Label	case FILE_QUAD :	774:1:18783:18797	410149	45	True				
ANR	410337	Identifier	FILE_QUAD		410149	0					
ANR	410338	Label	case FILE_BEQUAD :	775:1:18800:18816	410149	46	True				
ANR	410339	Identifier	FILE_BEQUAD		410149	0					
ANR	410340	Label	case FILE_LEQUAD :	776:1:18819:18835	410149	47	True				
ANR	410341	Identifier	FILE_LEQUAD		410149	0					
ANR	410342	Label	case FILE_QDATE :	777:1:18838:18853	410149	48	True				
ANR	410343	Identifier	FILE_QDATE		410149	0					
ANR	410344	Label	case FILE_LEQDATE :	778:1:18856:18873	410149	49	True				
ANR	410345	Identifier	FILE_LEQDATE		410149	0					
ANR	410346	Label	case FILE_BEQDATE :	779:1:18876:18893	410149	50	True				
ANR	410347	Identifier	FILE_BEQDATE		410149	0					
ANR	410348	Label	case FILE_QLDATE :	780:1:18896:18912	410149	51	True				
ANR	410349	Identifier	FILE_QLDATE		410149	0					
ANR	410350	Label	case FILE_LEQLDATE :	781:1:18915:18933	410149	52	True				
ANR	410351	Identifier	FILE_LEQLDATE		410149	0					
ANR	410352	Label	case FILE_BEQLDATE :	782:1:18936:18954	410149	53	True				
ANR	410353	Identifier	FILE_BEQLDATE		410149	0					
ANR	410354	Label	case FILE_QWDATE :	783:1:18957:18973	410149	54	True				
ANR	410355	Identifier	FILE_QWDATE		410149	0					
ANR	410356	Label	case FILE_LEQWDATE :	784:1:18976:18994	410149	55	True				
ANR	410357	Identifier	FILE_LEQWDATE		410149	0					
ANR	410358	Label	case FILE_BEQWDATE :	785:1:18997:19015	410149	56	True				
ANR	410359	Identifier	FILE_BEQWDATE		410149	0					
ANR	410360	Label	case FILE_DOUBLE :	786:1:19018:19034	410149	57	True				
ANR	410361	Identifier	FILE_DOUBLE		410149	0					
ANR	410362	Label	case FILE_BEDOUBLE :	787:1:19037:19055	410149	58	True				
ANR	410363	Identifier	FILE_BEDOUBLE		410149	0					
ANR	410364	Label	case FILE_LEDOUBLE :	788:1:19058:19076	410149	59	True				
ANR	410365	Identifier	FILE_LEDOUBLE		410149	0					
ANR	410366	ExpressionStatement	val += 8 * MULT	789:2:19080:19095	410149	60	True				
ANR	410367	AssignmentExpression	val += 8 * MULT		410149	0		+=			
ANR	410368	Identifier	val		410149	0					
ANR	410369	MultiplicativeExpression	8 * MULT		410149	1		*			
ANR	410370	PrimaryExpression	8		410149	0					
ANR	410371	Identifier	MULT		410149	1					
ANR	410372	BreakStatement	break ;	790:2:19099:19104	410149	61	True				
ANR	410373	Label	case FILE_INDIRECT :	792:1:19108:19126	410149	62	True				
ANR	410374	Identifier	FILE_INDIRECT		410149	0					
ANR	410375	Label	case FILE_NAME :	793:1:19129:19143	410149	63	True				
ANR	410376	Identifier	FILE_NAME		410149	0					
ANR	410377	Label	case FILE_USE :	794:1:19146:19159	410149	64	True				
ANR	410378	Identifier	FILE_USE		410149	0					
ANR	410379	BreakStatement	break ;	795:2:19163:19168	410149	65	True				
ANR	410380	Label	default :	797:1:19172:19179	410149	66	True				
ANR	410381	Identifier	default		410149	0					
ANR	410382	ExpressionStatement	"( void ) fprintf ( stderr , ""Bad type %d\\n"" , m -> type )"	798:2:19183:19230	410149	67	True				
ANR	410383	CastExpression	"( void ) fprintf ( stderr , ""Bad type %d\\n"" , m -> type )"		410149	0					
ANR	410384	CastTarget	void		410149	0					
ANR	410385	CallExpression	"fprintf ( stderr , ""Bad type %d\\n"" , m -> type )"		410149	1					
ANR	410386	Callee	fprintf		410149	0					
ANR	410387	Identifier	fprintf		410149	0					
ANR	410388	ArgumentList	stderr		410149	1					
ANR	410389	Argument	stderr		410149	0					
ANR	410390	Identifier	stderr		410149	0					
ANR	410391	Argument	"""Bad type %d\\n"""		410149	1					
ANR	410392	PrimaryExpression	"""Bad type %d\\n"""		410149	0					
ANR	410393	Argument	m -> type		410149	2					
ANR	410394	PtrMemberAccess	m -> type		410149	0					
ANR	410395	Identifier	m		410149	0					
ANR	410396	Identifier	type		410149	1					
ANR	410397	ExpressionStatement	abort ( )	799:2:19234:19241	410149	68	True				
ANR	410398	CallExpression	abort ( )		410149	0					
ANR	410399	Callee	abort		410149	0					
ANR	410400	Identifier	abort		410149	0					
ANR	410401	ArgumentList			410149	1					
ANR	410402	SwitchStatement	switch ( m -> reln )		410149	5					
ANR	410403	Condition	m -> reln	802:9:19256:19262	410149	0	True				
ANR	410404	PtrMemberAccess	m -> reln		410149	0					
ANR	410405	Identifier	m		410149	0					
ANR	410406	Identifier	reln		410149	1					
ANR	410407	CompoundStatement		89:18:1493:1493	410149	1					
ANR	410408	Label	case 'x' :	803:1:19268:19276	410149	0	True				
ANR	410409	Label	case '!' :	804:1:19311:19319	410149	1	True				
ANR	410410	ExpressionStatement	val = 0	805:2:19368:19375	410149	2	True				
ANR	410411	AssignmentExpression	val = 0		410149	0		=			
ANR	410412	Identifier	val		410149	0					
ANR	410413	PrimaryExpression	0		410149	1					
ANR	410414	BreakStatement	break ;	806:2:19379:19384	410149	3	True				
ANR	410415	Label	case '=' :	808:1:19388:19396	410149	4	True				
ANR	410416	ExpressionStatement	val += MULT	809:2:19426:19437	410149	5	True				
ANR	410417	AssignmentExpression	val += MULT		410149	0		+=			
ANR	410418	Identifier	val		410149	0					
ANR	410419	Identifier	MULT		410149	1					
ANR	410420	BreakStatement	break ;	810:2:19441:19446	410149	6	True				
ANR	410421	Label	case '>' :	812:1:19450:19458	410149	7	True				
ANR	410422	Label	case '<' :	813:1:19461:19469	410149	8	True				
ANR	410423	ExpressionStatement	val -= 2 * MULT	814:2:19512:19527	410149	9	True				
ANR	410424	AssignmentExpression	val -= 2 * MULT		410149	0		-=			
ANR	410425	Identifier	val		410149	0					
ANR	410426	MultiplicativeExpression	2 * MULT		410149	1		*			
ANR	410427	PrimaryExpression	2		410149	0					
ANR	410428	Identifier	MULT		410149	1					
ANR	410429	BreakStatement	break ;	815:2:19531:19536	410149	10	True				
ANR	410430	Label	case '^' :	817:1:19540:19548	410149	11	True				
ANR	410431	Label	case '&' :	818:1:19551:19559	410149	12	True				
ANR	410432	ExpressionStatement	val -= MULT	819:2:19607:19618	410149	13	True				
ANR	410433	AssignmentExpression	val -= MULT		410149	0		-=			
ANR	410434	Identifier	val		410149	0					
ANR	410435	Identifier	MULT		410149	1					
ANR	410436	BreakStatement	break ;	820:2:19622:19627	410149	14	True				
ANR	410437	Label	default :	822:1:19631:19638	410149	15	True				
ANR	410438	Identifier	default		410149	0					
ANR	410439	ExpressionStatement	"( void ) fprintf ( stderr , ""Bad relation %c\\n"" , m -> reln )"	823:2:19642:19693	410149	16	True				
ANR	410440	CastExpression	"( void ) fprintf ( stderr , ""Bad relation %c\\n"" , m -> reln )"		410149	0					
ANR	410441	CastTarget	void		410149	0					
ANR	410442	CallExpression	"fprintf ( stderr , ""Bad relation %c\\n"" , m -> reln )"		410149	1					
ANR	410443	Callee	fprintf		410149	0					
ANR	410444	Identifier	fprintf		410149	0					
ANR	410445	ArgumentList	stderr		410149	1					
ANR	410446	Argument	stderr		410149	0					
ANR	410447	Identifier	stderr		410149	0					
ANR	410448	Argument	"""Bad relation %c\\n"""		410149	1					
ANR	410449	PrimaryExpression	"""Bad relation %c\\n"""		410149	0					
ANR	410450	Argument	m -> reln		410149	2					
ANR	410451	PtrMemberAccess	m -> reln		410149	0					
ANR	410452	Identifier	m		410149	0					
ANR	410453	Identifier	reln		410149	1					
ANR	410454	ExpressionStatement	abort ( )	824:2:19697:19704	410149	17	True				
ANR	410455	CallExpression	abort ( )		410149	0					
ANR	410456	Callee	abort		410149	0					
ANR	410457	Identifier	abort		410149	0					
ANR	410458	ArgumentList			410149	1					
ANR	410459	IfStatement	if ( val == 0 )		410149	6					
ANR	410460	Condition	val == 0	827:5:19715:19722	410149	0	True				
ANR	410461	EqualityExpression	val == 0		410149	0		==			
ANR	410462	Identifier	val		410149	0					
ANR	410463	PrimaryExpression	0		410149	1					
ANR	410464	ExpressionStatement	val = 1	828:2:19774:19781	410149	1	True				
ANR	410465	AssignmentExpression	val = 1		410149	0		=			
ANR	410466	Identifier	val		410149	0					
ANR	410467	PrimaryExpression	1		410149	1					
ANR	410468	SwitchStatement	switch ( m -> factor_op )		410149	7					
ANR	410469	Condition	m -> factor_op	830:9:19793:19804	410149	0	True				
ANR	410470	PtrMemberAccess	m -> factor_op		410149	0					
ANR	410471	Identifier	m		410149	0					
ANR	410472	Identifier	factor_op		410149	1					
ANR	410473	CompoundStatement		117:23:2035:2035	410149	1					
ANR	410474	Label	case FILE_FACTOR_OP_NONE :	831:1:19810:19834	410149	0	True				
ANR	410475	Identifier	FILE_FACTOR_OP_NONE		410149	0					
ANR	410476	BreakStatement	break ;	832:2:19838:19843	410149	1	True				
ANR	410477	Label	case FILE_FACTOR_OP_PLUS :	833:1:19846:19870	410149	2	True				
ANR	410478	Identifier	FILE_FACTOR_OP_PLUS		410149	0					
ANR	410479	ExpressionStatement	val += m -> factor	834:2:19874:19890	410149	3	True				
ANR	410480	AssignmentExpression	val += m -> factor		410149	0		+=			
ANR	410481	Identifier	val		410149	0					
ANR	410482	PtrMemberAccess	m -> factor		410149	1					
ANR	410483	Identifier	m		410149	0					
ANR	410484	Identifier	factor		410149	1					
ANR	410485	BreakStatement	break ;	835:2:19894:19899	410149	4	True				
ANR	410486	Label	case FILE_FACTOR_OP_MINUS :	836:1:19902:19927	410149	5	True				
ANR	410487	Identifier	FILE_FACTOR_OP_MINUS		410149	0					
ANR	410488	ExpressionStatement	val -= m -> factor	837:2:19931:19947	410149	6	True				
ANR	410489	AssignmentExpression	val -= m -> factor		410149	0		-=			
ANR	410490	Identifier	val		410149	0					
ANR	410491	PtrMemberAccess	m -> factor		410149	1					
ANR	410492	Identifier	m		410149	0					
ANR	410493	Identifier	factor		410149	1					
ANR	410494	BreakStatement	break ;	838:2:19951:19956	410149	7	True				
ANR	410495	Label	case FILE_FACTOR_OP_TIMES :	839:1:19959:19984	410149	8	True				
ANR	410496	Identifier	FILE_FACTOR_OP_TIMES		410149	0					
ANR	410497	ExpressionStatement	val *= m -> factor	840:2:19988:20004	410149	9	True				
ANR	410498	AssignmentExpression	val *= m -> factor		410149	0		*=			
ANR	410499	Identifier	val		410149	0					
ANR	410500	PtrMemberAccess	m -> factor		410149	1					
ANR	410501	Identifier	m		410149	0					
ANR	410502	Identifier	factor		410149	1					
ANR	410503	BreakStatement	break ;	841:2:20008:20013	410149	10	True				
ANR	410504	Label	case FILE_FACTOR_OP_DIV :	842:1:20016:20039	410149	11	True				
ANR	410505	Identifier	FILE_FACTOR_OP_DIV		410149	0					
ANR	410506	ExpressionStatement	val /= m -> factor	843:2:20043:20059	410149	12	True				
ANR	410507	AssignmentExpression	val /= m -> factor		410149	0		/=			
ANR	410508	Identifier	val		410149	0					
ANR	410509	PtrMemberAccess	m -> factor		410149	1					
ANR	410510	Identifier	m		410149	0					
ANR	410511	Identifier	factor		410149	1					
ANR	410512	BreakStatement	break ;	844:2:20063:20068	410149	13	True				
ANR	410513	Label	default :	845:1:20071:20078	410149	14	True				
ANR	410514	Identifier	default		410149	0					
ANR	410515	ExpressionStatement	abort ( )	846:2:20082:20089	410149	15	True				
ANR	410516	CallExpression	abort ( )		410149	0					
ANR	410517	Callee	abort		410149	0					
ANR	410518	Identifier	abort		410149	0					
ANR	410519	ArgumentList			410149	1					
ANR	410520	IfStatement	if ( m -> desc [ 0 ] == '\\0' )		410149	8					
ANR	410521	Condition	m -> desc [ 0 ] == '\\0'	853:5:20231:20248	410149	0	True				
ANR	410522	EqualityExpression	m -> desc [ 0 ] == '\\0'		410149	0		==			
ANR	410523	ArrayIndexing	m -> desc [ 0 ]		410149	0					
ANR	410524	PtrMemberAccess	m -> desc		410149	0					
ANR	410525	Identifier	m		410149	0					
ANR	410526	Identifier	desc		410149	1					
ANR	410527	PrimaryExpression	0		410149	1					
ANR	410528	PrimaryExpression	'\\0'		410149	1					
ANR	410529	ExpressionStatement	val ++	854:2:20253:20258	410149	1	True				
ANR	410530	PostIncDecOperationExpression	val ++		410149	0					
ANR	410531	Identifier	val		410149	0					
ANR	410532	IncDec	++		410149	1					
ANR	410533	ReturnStatement	return val ;	855:1:20261:20271	410149	9	True				
ANR	410534	Identifier	val		410149	0					
ANR	410535	ReturnType	size_t		410149	1					
ANR	410536	Identifier	apprentice_magic_strength		410149	2					
ANR	410537	ParameterList	const struct magic * m		410149	3					
ANR	410538	Parameter	const struct magic * m	713:26:17748:17768	410149	0	True				
ANR	410539	ParameterType	const struct magic *		410149	0					
ANR	410540	Identifier	m		410149	1					
ANR	410541	CFGEntryNode	ENTRY		410149		True				
ANR	410542	CFGExitNode	EXIT		410149		True				
ANR	410543	Symbol	val		410149						
ANR	410544	Symbol	m -> value		410149						
ANR	410545	Symbol	* m -> desc		410149						
ANR	410546	Symbol	MAX		410149						
ANR	410547	Symbol	m -> factor_op		410149						
ANR	410548	Symbol	m -> value . s		410149						
ANR	410549	Symbol	FILE_FACTOR_OP_NONE		410149						
ANR	410550	Symbol	stderr		410149						
ANR	410551	Symbol	m		410149						
ANR	410552	Symbol	m -> type		410149						
ANR	410553	Symbol	m -> factor		410149						
ANR	410554	Symbol	m -> desc		410149						
ANR	410555	Symbol	MULT		410149						
ANR	410556	Symbol	v		410149						
ANR	410557	Symbol	* m		410149						
ANR	410558	Symbol	nonmagic		410149						
ANR	410559	Symbol	m -> reln		410149						
ANR	410560	Symbol	m -> vallen		410149						
ANR	410561	Symbol	* * m		410149						
ANR	410562	Function	apprentice_sort	861:8:20363:20726							
ANR	410563	FunctionDef	"apprentice_sort (const void * a , const void * b)"		410562	0					
ANR	410564	CompoundStatement		863:0:20413:20726	410562	0					
ANR	410565	Statement	const	864:1:20416:20420	410562	0	True				
ANR	410566	Statement	struct	864:7:20422:20427	410562	1	True				
ANR	410567	Statement	magic_entry	864:14:20429:20439	410562	2	True				
ANR	410568	Statement	*	864:26:20441:20441	410562	3	True				
ANR	410569	Statement	ma	864:27:20442:20443	410562	4	True				
ANR	410570	Statement	=	864:30:20445:20445	410562	5	True				
ANR	410571	Statement	CAST	864:32:20447:20450	410562	6	True				
ANR	410572	Statement	(	864:36:20451:20451	410562	7	True				
ANR	410573	Statement	const	864:37:20452:20456	410562	8	True				
ANR	410574	Statement	struct	864:43:20458:20463	410562	9	True				
ANR	410575	Statement	magic_entry	864:50:20465:20475	410562	10	True				
ANR	410576	Statement	*	864:62:20477:20477	410562	11	True				
ANR	410577	Statement	","	864:63:20478:20478	410562	12	True				
ANR	410578	Statement	a	864:65:20480:20480	410562	13	True				
ANR	410579	Statement	)	864:66:20481:20481	410562	14	True				
ANR	410580	ExpressionStatement		864:67:20482:20482	410562	15	True				
ANR	410581	Statement	const	865:1:20485:20489	410562	16	True				
ANR	410582	Statement	struct	865:7:20491:20496	410562	17	True				
ANR	410583	Statement	magic_entry	865:14:20498:20508	410562	18	True				
ANR	410584	Statement	*	865:26:20510:20510	410562	19	True				
ANR	410585	Statement	mb	865:27:20511:20512	410562	20	True				
ANR	410586	Statement	=	865:30:20514:20514	410562	21	True				
ANR	410587	Statement	CAST	865:32:20516:20519	410562	22	True				
ANR	410588	Statement	(	865:36:20520:20520	410562	23	True				
ANR	410589	Statement	const	865:37:20521:20525	410562	24	True				
ANR	410590	Statement	struct	865:43:20527:20532	410562	25	True				
ANR	410591	Statement	magic_entry	865:50:20534:20544	410562	26	True				
ANR	410592	Statement	*	865:62:20546:20546	410562	27	True				
ANR	410593	Statement	","	865:63:20547:20547	410562	28	True				
ANR	410594	Statement	b	865:65:20549:20549	410562	29	True				
ANR	410595	Statement	)	865:66:20550:20550	410562	30	True				
ANR	410596	ExpressionStatement		865:67:20551:20551	410562	31	True				
ANR	410597	IdentifierDeclStatement	size_t sa = apprentice_magic_strength ( ma -> mp ) ;	866:1:20554:20599	410562	32	True				
ANR	410598	IdentifierDecl	sa = apprentice_magic_strength ( ma -> mp )		410562	0					
ANR	410599	IdentifierDeclType	size_t		410562	0					
ANR	410600	Identifier	sa		410562	1					
ANR	410601	AssignmentExpression	sa = apprentice_magic_strength ( ma -> mp )		410562	2		=			
ANR	410602	Identifier	sa		410562	0					
ANR	410603	CallExpression	apprentice_magic_strength ( ma -> mp )		410562	1					
ANR	410604	Callee	apprentice_magic_strength		410562	0					
ANR	410605	Identifier	apprentice_magic_strength		410562	0					
ANR	410606	ArgumentList	ma -> mp		410562	1					
ANR	410607	Argument	ma -> mp		410562	0					
ANR	410608	PtrMemberAccess	ma -> mp		410562	0					
ANR	410609	Identifier	ma		410562	0					
ANR	410610	Identifier	mp		410562	1					
ANR	410611	IdentifierDeclStatement	size_t sb = apprentice_magic_strength ( mb -> mp ) ;	867:1:20602:20647	410562	33	True				
ANR	410612	IdentifierDecl	sb = apprentice_magic_strength ( mb -> mp )		410562	0					
ANR	410613	IdentifierDeclType	size_t		410562	0					
ANR	410614	Identifier	sb		410562	1					
ANR	410615	AssignmentExpression	sb = apprentice_magic_strength ( mb -> mp )		410562	2		=			
ANR	410616	Identifier	sb		410562	0					
ANR	410617	CallExpression	apprentice_magic_strength ( mb -> mp )		410562	1					
ANR	410618	Callee	apprentice_magic_strength		410562	0					
ANR	410619	Identifier	apprentice_magic_strength		410562	0					
ANR	410620	ArgumentList	mb -> mp		410562	1					
ANR	410621	Argument	mb -> mp		410562	0					
ANR	410622	PtrMemberAccess	mb -> mp		410562	0					
ANR	410623	Identifier	mb		410562	0					
ANR	410624	Identifier	mp		410562	1					
ANR	410625	IfStatement	if ( sa == sb )		410562	34					
ANR	410626	Condition	sa == sb	868:5:20654:20661	410562	0	True				
ANR	410627	EqualityExpression	sa == sb		410562	0		==			
ANR	410628	Identifier	sa		410562	0					
ANR	410629	Identifier	sb		410562	1					
ANR	410630	ReturnStatement	return 0 ;	869:2:20666:20674	410562	1	True				
ANR	410631	PrimaryExpression	0		410562	0					
ANR	410632	ElseStatement	else		410562	0					
ANR	410633	IfStatement	if ( sa > sb )		410562	0					
ANR	410634	Condition	sa > sb	870:10:20686:20692	410562	0	True				
ANR	410635	RelationalExpression	sa > sb		410562	0		>			
ANR	410636	Identifier	sa		410562	0					
ANR	410637	Identifier	sb		410562	1					
ANR	410638	ReturnStatement	return - 1 ;	871:2:20697:20706	410562	1	True				
ANR	410639	UnaryOperationExpression	- 1		410562	0					
ANR	410640	UnaryOperator	-		410562	0					
ANR	410641	PrimaryExpression	1		410562	1					
ANR	410642	ElseStatement	else		410562	0					
ANR	410643	ReturnStatement	return 1 ;	873:2:20716:20724	410562	0	True				
ANR	410644	PrimaryExpression	1		410562	0					
ANR	410645	ReturnType	int		410562	1					
ANR	410646	Identifier	apprentice_sort		410562	2					
ANR	410647	ParameterList	"const void * a , const void * b"		410562	3					
ANR	410648	Parameter	const void * a	862:16:20383:20395	410562	0	True				
ANR	410649	ParameterType	const void *		410562	0					
ANR	410650	Identifier	a		410562	1					
ANR	410651	Parameter	const void * b	862:31:20398:20410	410562	1	True				
ANR	410652	ParameterType	const void *		410562	0					
ANR	410653	Identifier	b		410562	1					
ANR	410654	CFGEntryNode	ENTRY		410562		True				
ANR	410655	CFGExitNode	EXIT		410562		True				
ANR	410656	Symbol	a		410562						
ANR	410657	Symbol	b		410562						
ANR	410658	Symbol	mb -> mp		410562						
ANR	410659	Symbol	ma		410562						
ANR	410660	Symbol	mb		410562						
ANR	410661	Symbol	ma -> mp		410562						
ANR	410662	Symbol	* mb		410562						
ANR	410663	Symbol	* ma		410562						
ANR	410664	Symbol	apprentice_magic_strength		410562						
ANR	410665	Symbol	sa		410562						
ANR	410666	Symbol	sb		410562						
ANR	410667	Function	apprentice_list	879:8:20820:21808							
ANR	410668	FunctionDef	"apprentice_list (struct mlist * mlist , int mode)"		410667	0					
ANR	410669	CompoundStatement		881:0:20872:21808	410667	0					
ANR	410670	IdentifierDeclStatement	uint32_t magindex = 0 ;	882:1:20875:20896	410667	0	True				
ANR	410671	IdentifierDecl	magindex = 0		410667	0					
ANR	410672	IdentifierDeclType	uint32_t		410667	0					
ANR	410673	Identifier	magindex		410667	1					
ANR	410674	AssignmentExpression	magindex = 0		410667	2		=			
ANR	410675	Identifier	magindex		410667	0					
ANR	410676	PrimaryExpression	0		410667	1					
ANR	410677	IdentifierDeclStatement	struct mlist * ml ;	883:1:20899:20915	410667	1	True				
ANR	410678	IdentifierDecl	* ml		410667	0					
ANR	410679	IdentifierDeclType	struct mlist *		410667	0					
ANR	410680	Identifier	ml		410667	1					
ANR	410681	ForStatement	for ( ml = mlist -> next ; ml != mlist ; ml = ml -> next )		410667	2					
ANR	410682	ForInit	ml = mlist -> next ;	884:6:20923:20939	410667	0	True				
ANR	410683	AssignmentExpression	ml = mlist -> next		410667	0		=			
ANR	410684	Identifier	ml		410667	0					
ANR	410685	PtrMemberAccess	mlist -> next		410667	1					
ANR	410686	Identifier	mlist		410667	0					
ANR	410687	Identifier	next		410667	1					
ANR	410688	Condition	ml != mlist	884:24:20941:20951	410667	1	True				
ANR	410689	EqualityExpression	ml != mlist		410667	0		!=			
ANR	410690	Identifier	ml		410667	0					
ANR	410691	Identifier	mlist		410667	1					
ANR	410692	AssignmentExpression	ml = ml -> next	884:37:20954:20966	410667	2	True	=			
ANR	410693	Identifier	ml		410667	0					
ANR	410694	PtrMemberAccess	ml -> next		410667	1					
ANR	410695	Identifier	ml		410667	0					
ANR	410696	Identifier	next		410667	1					
ANR	410697	CompoundStatement		4:52:96:96	410667	3					
ANR	410698	ForStatement	for ( magindex = 0 ; magindex < ml -> nmagic ; magindex ++ )		410667	0					
ANR	410699	ForInit	magindex = 0 ;	885:7:20978:20990	410667	0	True				
ANR	410700	AssignmentExpression	magindex = 0		410667	0		=			
ANR	410701	Identifier	magindex		410667	0					
ANR	410702	PrimaryExpression	0		410667	1					
ANR	410703	Condition	magindex < ml -> nmagic	885:21:20992:21012	410667	1	True				
ANR	410704	RelationalExpression	magindex < ml -> nmagic		410667	0		<			
ANR	410705	Identifier	magindex		410667	0					
ANR	410706	PtrMemberAccess	ml -> nmagic		410667	1					
ANR	410707	Identifier	ml		410667	0					
ANR	410708	Identifier	nmagic		410667	1					
ANR	410709	PostIncDecOperationExpression	magindex ++	885:44:21015:21024	410667	2	True				
ANR	410710	Identifier	magindex		410667	0					
ANR	410711	IncDec	++		410667	1					
ANR	410712	CompoundStatement		6:3:159:197	410667	3					
ANR	410713	IdentifierDeclStatement	struct magic * m = & ml -> magic [ magindex ] ;	886:3:21032:21070	410667	0	True				
ANR	410714	IdentifierDecl	* m = & ml -> magic [ magindex ]		410667	0					
ANR	410715	IdentifierDeclType	struct magic *		410667	0					
ANR	410716	Identifier	m		410667	1					
ANR	410717	AssignmentExpression	* m = & ml -> magic [ magindex ]		410667	2		=			
ANR	410718	Identifier	m		410667	0					
ANR	410719	UnaryOperationExpression	& ml -> magic [ magindex ]		410667	1					
ANR	410720	UnaryOperator	&		410667	0					
ANR	410721	ArrayIndexing	ml -> magic [ magindex ]		410667	1					
ANR	410722	PtrMemberAccess	ml -> magic		410667	0					
ANR	410723	Identifier	ml		410667	0					
ANR	410724	Identifier	magic		410667	1					
ANR	410725	Identifier	magindex		410667	1					
ANR	410726	IfStatement	if ( ( m -> flag & mode ) != mode )		410667	1					
ANR	410727	Condition	( m -> flag & mode ) != mode	887:7:21079:21102	410667	0	True				
ANR	410728	EqualityExpression	( m -> flag & mode ) != mode		410667	0		!=			
ANR	410729	BitAndExpression	m -> flag & mode		410667	0		&			
ANR	410730	PtrMemberAccess	m -> flag		410667	0					
ANR	410731	Identifier	m		410667	0					
ANR	410732	Identifier	flag		410667	1					
ANR	410733	Identifier	mode		410667	1					
ANR	410734	Identifier	mode		410667	1					
ANR	410735	CompoundStatement		7:33:232:232	410667	1					
ANR	410736	WhileStatement	while ( magindex + 1 < ml -> nmagic && ml -> magic [ magindex + 1 ] . cont_level != 0 )		410667	0					
ANR	410737	Condition	magindex + 1 < ml -> nmagic && ml -> magic [ magindex + 1 ] . cont_level != 0	889:11:21143:21221	410667	0	True				
ANR	410738	AndExpression	magindex + 1 < ml -> nmagic && ml -> magic [ magindex + 1 ] . cont_level != 0		410667	0		&&			
ANR	410739	RelationalExpression	magindex + 1 < ml -> nmagic		410667	0		<			
ANR	410740	AdditiveExpression	magindex + 1		410667	0		+			
ANR	410741	Identifier	magindex		410667	0					
ANR	410742	PrimaryExpression	1		410667	1					
ANR	410743	PtrMemberAccess	ml -> nmagic		410667	1					
ANR	410744	Identifier	ml		410667	0					
ANR	410745	Identifier	nmagic		410667	1					
ANR	410746	EqualityExpression	ml -> magic [ magindex + 1 ] . cont_level != 0		410667	1		!=			
ANR	410747	MemberAccess	ml -> magic [ magindex + 1 ] . cont_level		410667	0					
ANR	410748	ArrayIndexing	ml -> magic [ magindex + 1 ]		410667	0					
ANR	410749	PtrMemberAccess	ml -> magic		410667	0					
ANR	410750	Identifier	ml		410667	0					
ANR	410751	Identifier	magic		410667	1					
ANR	410752	AdditiveExpression	magindex + 1		410667	1		+			
ANR	410753	Identifier	magindex		410667	0					
ANR	410754	PrimaryExpression	1		410667	1					
ANR	410755	Identifier	cont_level		410667	1					
ANR	410756	PrimaryExpression	0		410667	1					
ANR	410757	ExpressionStatement	++ magindex	891:5:21229:21239	410667	1	True				
ANR	410758	UnaryExpression	++ magindex		410667	0					
ANR	410759	IncDec	++		410667	0					
ANR	410760	Identifier	magindex		410667	1					
ANR	410761	ContinueStatement	continue ;	892:4:21245:21253	410667	1	True				
ANR	410762	WhileStatement	while ( magindex + 1 < ml -> nmagic && ml -> magic [ magindex + 1 ] . cont_level != 0 && * ml -> magic [ magindex ] . desc == '\\0' && * ml -> magic [ magindex ] . mimetype == '\\0' )		410667	2					
ANR	410763	Condition	magindex + 1 < ml -> nmagic && ml -> magic [ magindex + 1 ] . cont_level != 0 && * ml -> magic [ magindex ] . desc == '\\0' && * ml -> magic [ magindex ] . mimetype == '\\0'	899:10:21404:21579	410667	0	True				
ANR	410764	AndExpression	magindex + 1 < ml -> nmagic && ml -> magic [ magindex + 1 ] . cont_level != 0 && * ml -> magic [ magindex ] . desc == '\\0' && * ml -> magic [ magindex ] . mimetype == '\\0'		410667	0		&&			
ANR	410765	RelationalExpression	magindex + 1 < ml -> nmagic		410667	0		<			
ANR	410766	AdditiveExpression	magindex + 1		410667	0		+			
ANR	410767	Identifier	magindex		410667	0					
ANR	410768	PrimaryExpression	1		410667	1					
ANR	410769	PtrMemberAccess	ml -> nmagic		410667	1					
ANR	410770	Identifier	ml		410667	0					
ANR	410771	Identifier	nmagic		410667	1					
ANR	410772	AndExpression	ml -> magic [ magindex + 1 ] . cont_level != 0 && * ml -> magic [ magindex ] . desc == '\\0' && * ml -> magic [ magindex ] . mimetype == '\\0'		410667	1		&&			
ANR	410773	EqualityExpression	ml -> magic [ magindex + 1 ] . cont_level != 0		410667	0		!=			
ANR	410774	MemberAccess	ml -> magic [ magindex + 1 ] . cont_level		410667	0					
ANR	410775	ArrayIndexing	ml -> magic [ magindex + 1 ]		410667	0					
ANR	410776	PtrMemberAccess	ml -> magic		410667	0					
ANR	410777	Identifier	ml		410667	0					
ANR	410778	Identifier	magic		410667	1					
ANR	410779	AdditiveExpression	magindex + 1		410667	1		+			
ANR	410780	Identifier	magindex		410667	0					
ANR	410781	PrimaryExpression	1		410667	1					
ANR	410782	Identifier	cont_level		410667	1					
ANR	410783	PrimaryExpression	0		410667	1					
ANR	410784	AndExpression	* ml -> magic [ magindex ] . desc == '\\0' && * ml -> magic [ magindex ] . mimetype == '\\0'		410667	1		&&			
ANR	410785	EqualityExpression	* ml -> magic [ magindex ] . desc == '\\0'		410667	0		==			
ANR	410786	UnaryOperationExpression	* ml -> magic [ magindex ] . desc		410667	0					
ANR	410787	UnaryOperator	*		410667	0					
ANR	410788	MemberAccess	ml -> magic [ magindex ] . desc		410667	1					
ANR	410789	ArrayIndexing	ml -> magic [ magindex ]		410667	0					
ANR	410790	PtrMemberAccess	ml -> magic		410667	0					
ANR	410791	Identifier	ml		410667	0					
ANR	410792	Identifier	magic		410667	1					
ANR	410793	Identifier	magindex		410667	1					
ANR	410794	Identifier	desc		410667	1					
ANR	410795	PrimaryExpression	'\\0'		410667	1					
ANR	410796	EqualityExpression	* ml -> magic [ magindex ] . mimetype == '\\0'		410667	1		==			
ANR	410797	UnaryOperationExpression	* ml -> magic [ magindex ] . mimetype		410667	0					
ANR	410798	UnaryOperator	*		410667	0					
ANR	410799	MemberAccess	ml -> magic [ magindex ] . mimetype		410667	1					
ANR	410800	ArrayIndexing	ml -> magic [ magindex ]		410667	0					
ANR	410801	PtrMemberAccess	ml -> magic		410667	0					
ANR	410802	Identifier	ml		410667	0					
ANR	410803	Identifier	magic		410667	1					
ANR	410804	Identifier	magindex		410667	1					
ANR	410805	Identifier	mimetype		410667	1					
ANR	410806	PrimaryExpression	'\\0'		410667	1					
ANR	410807	ExpressionStatement	magindex ++	903:4:21586:21596	410667	1	True				
ANR	410808	PostIncDecOperationExpression	magindex ++		410667	0					
ANR	410809	Identifier	magindex		410667	0					
ANR	410810	IncDec	++		410667	1					
ANR	410811	Statement	printf	905:3:21602:21607	410667	3	True				
ANR	410812	Statement	(	905:9:21608:21608	410667	4	True				
ANR	410813	Statement	"""Strength = %3"""	905:10:21609:21623	410667	5	True				
ANR	410814	Statement	SIZE_T_FORMAT	905:26:21625:21637	410667	6	True				
ANR	410815	Statement	"""u@%u: %s [%s]\\n"""	905:40:21639:21655	410667	7	True				
ANR	410816	Statement	","	905:57:21656:21656	410667	8	True				
ANR	410817	Statement	apprentice_magic_strength	906:7:21665:21689	410667	9	True				
ANR	410818	Statement	(	906:32:21690:21690	410667	10	True				
ANR	410819	Statement	m	906:33:21691:21691	410667	11	True				
ANR	410820	Statement	)	906:34:21692:21692	410667	12	True				
ANR	410821	Statement	","	906:35:21693:21693	410667	13	True				
ANR	410822	Statement	ml	907:7:21702:21703	410667	14	True				
ANR	410823	Statement	->	907:9:21704:21705	410667	15	True				
ANR	410824	Statement	magic	907:11:21706:21710	410667	16	True				
ANR	410825	Statement	[	907:16:21711:21711	410667	17	True				
ANR	410826	Statement	magindex	907:17:21712:21719	410667	18	True				
ANR	410827	Statement	]	907:25:21720:21720	410667	19	True				
ANR	410828	Statement	.	907:26:21721:21721	410667	20	True				
ANR	410829	Statement	lineno	907:27:21722:21727	410667	21	True				
ANR	410830	Statement	","	907:33:21728:21728	410667	22	True				
ANR	410831	Statement	ml	908:7:21737:21738	410667	23	True				
ANR	410832	Statement	->	908:9:21739:21740	410667	24	True				
ANR	410833	Statement	magic	908:11:21741:21745	410667	25	True				
ANR	410834	Statement	[	908:16:21746:21746	410667	26	True				
ANR	410835	Statement	magindex	908:17:21747:21754	410667	27	True				
ANR	410836	Statement	]	908:25:21755:21755	410667	28	True				
ANR	410837	Statement	.	908:26:21756:21756	410667	29	True				
ANR	410838	Statement	desc	908:27:21757:21760	410667	30	True				
ANR	410839	Statement	","	908:31:21761:21761	410667	31	True				
ANR	410840	Statement	ml	909:7:21770:21771	410667	32	True				
ANR	410841	Statement	->	909:9:21772:21773	410667	33	True				
ANR	410842	Statement	magic	909:11:21774:21778	410667	34	True				
ANR	410843	Statement	[	909:16:21779:21779	410667	35	True				
ANR	410844	Statement	magindex	909:17:21780:21787	410667	36	True				
ANR	410845	Statement	]	909:25:21788:21788	410667	37	True				
ANR	410846	Statement	.	909:26:21789:21789	410667	38	True				
ANR	410847	Statement	mimetype	909:27:21790:21797	410667	39	True				
ANR	410848	Statement	)	909:35:21798:21798	410667	40	True				
ANR	410849	ExpressionStatement		909:36:21799:21799	410667	41	True				
ANR	410850	ReturnType	void		410667	1					
ANR	410851	Identifier	apprentice_list		410667	2					
ANR	410852	ParameterList	"struct mlist * mlist , int mode"		410667	3					
ANR	410853	Parameter	struct mlist * mlist	880:16:20841:20859	410667	0	True				
ANR	410854	ParameterType	struct mlist *		410667	0					
ANR	410855	Identifier	mlist		410667	1					
ANR	410856	Parameter	int mode	880:37:20862:20869	410667	1	True				
ANR	410857	ParameterType	int		410667	0					
ANR	410858	Identifier	mode		410667	1					
ANR	410859	CFGEntryNode	ENTRY		410667		True				
ANR	410860	CFGExitNode	EXIT		410667		True				
ANR	410861	Symbol	* magindex		410667						
ANR	410862	Symbol	mlist -> next		410667						
ANR	410863	Symbol	magindex		410667						
ANR	410864	Symbol	ml -> next		410667						
ANR	410865	Symbol	* * ml -> magic		410667						
ANR	410866	Symbol	* mlist		410667						
ANR	410867	Symbol	* ml		410667						
ANR	410868	Symbol	ml -> magic [ magindex ] . desc		410667						
ANR	410869	Symbol	m -> flag		410667						
ANR	410870	Symbol	* * ml		410667						
ANR	410871	Symbol	ml -> nmagic		410667						
ANR	410872	Symbol	ml -> magic [ magindex ] . mimetype		410667						
ANR	410873	Symbol	* ml -> magic [ magindex ] . mimetype		410667						
ANR	410874	Symbol	m		410667						
ANR	410875	Symbol	mode		410667						
ANR	410876	Symbol	* ml -> magic		410667						
ANR	410877	Symbol	ml -> magic		410667						
ANR	410878	Symbol	ml -> magic [ magindex + 1 ] . cont_level		410667						
ANR	410879	Symbol	* m		410667						
ANR	410880	Symbol	* ml -> magic [ magindex ] . desc		410667						
ANR	410881	Symbol	mlist		410667						
ANR	410882	Symbol	* * * ml		410667						
ANR	410883	Symbol	* * magindex		410667						
ANR	410884	Symbol	ml		410667						
ANR	410885	Function	set_test_type	914:8:21819:23490							
ANR	410886	FunctionDef	"set_test_type (struct magic * mstart , struct magic * m)"		410885	0					
ANR	410887	CompoundStatement		916:0:21877:23490	410885	0					
ANR	410888	SwitchStatement	switch ( m -> type )		410885	0					
ANR	410889	Condition	m -> type	917:9:21888:21894	410885	0	True				
ANR	410890	PtrMemberAccess	m -> type		410885	0					
ANR	410891	Identifier	m		410885	0					
ANR	410892	Identifier	type		410885	1					
ANR	410893	CompoundStatement		2:18:19:19	410885	1					
ANR	410894	Label	case FILE_BYTE :	918:1:21900:21914	410885	0	True				
ANR	410895	Identifier	FILE_BYTE		410885	0					
ANR	410896	Label	case FILE_SHORT :	919:1:21917:21932	410885	1	True				
ANR	410897	Identifier	FILE_SHORT		410885	0					
ANR	410898	Label	case FILE_LONG :	920:1:21935:21949	410885	2	True				
ANR	410899	Identifier	FILE_LONG		410885	0					
ANR	410900	Label	case FILE_DATE :	921:1:21952:21966	410885	3	True				
ANR	410901	Identifier	FILE_DATE		410885	0					
ANR	410902	Label	case FILE_BESHORT :	922:1:21969:21986	410885	4	True				
ANR	410903	Identifier	FILE_BESHORT		410885	0					
ANR	410904	Label	case FILE_BELONG :	923:1:21989:22005	410885	5	True				
ANR	410905	Identifier	FILE_BELONG		410885	0					
ANR	410906	Label	case FILE_BEDATE :	924:1:22008:22024	410885	6	True				
ANR	410907	Identifier	FILE_BEDATE		410885	0					
ANR	410908	Label	case FILE_LESHORT :	925:1:22027:22044	410885	7	True				
ANR	410909	Identifier	FILE_LESHORT		410885	0					
ANR	410910	Label	case FILE_LELONG :	926:1:22047:22063	410885	8	True				
ANR	410911	Identifier	FILE_LELONG		410885	0					
ANR	410912	Label	case FILE_LEDATE :	927:1:22066:22082	410885	9	True				
ANR	410913	Identifier	FILE_LEDATE		410885	0					
ANR	410914	Label	case FILE_LDATE :	928:1:22085:22100	410885	10	True				
ANR	410915	Identifier	FILE_LDATE		410885	0					
ANR	410916	Label	case FILE_BELDATE :	929:1:22103:22120	410885	11	True				
ANR	410917	Identifier	FILE_BELDATE		410885	0					
ANR	410918	Label	case FILE_LELDATE :	930:1:22123:22140	410885	12	True				
ANR	410919	Identifier	FILE_LELDATE		410885	0					
ANR	410920	Label	case FILE_MEDATE :	931:1:22143:22159	410885	13	True				
ANR	410921	Identifier	FILE_MEDATE		410885	0					
ANR	410922	Label	case FILE_MELDATE :	932:1:22162:22179	410885	14	True				
ANR	410923	Identifier	FILE_MELDATE		410885	0					
ANR	410924	Label	case FILE_MELONG :	933:1:22182:22198	410885	15	True				
ANR	410925	Identifier	FILE_MELONG		410885	0					
ANR	410926	Label	case FILE_QUAD :	934:1:22201:22215	410885	16	True				
ANR	410927	Identifier	FILE_QUAD		410885	0					
ANR	410928	Label	case FILE_LEQUAD :	935:1:22218:22234	410885	17	True				
ANR	410929	Identifier	FILE_LEQUAD		410885	0					
ANR	410930	Label	case FILE_BEQUAD :	936:1:22237:22253	410885	18	True				
ANR	410931	Identifier	FILE_BEQUAD		410885	0					
ANR	410932	Label	case FILE_QDATE :	937:1:22256:22271	410885	19	True				
ANR	410933	Identifier	FILE_QDATE		410885	0					
ANR	410934	Label	case FILE_LEQDATE :	938:1:22274:22291	410885	20	True				
ANR	410935	Identifier	FILE_LEQDATE		410885	0					
ANR	410936	Label	case FILE_BEQDATE :	939:1:22294:22311	410885	21	True				
ANR	410937	Identifier	FILE_BEQDATE		410885	0					
ANR	410938	Label	case FILE_QLDATE :	940:1:22314:22330	410885	22	True				
ANR	410939	Identifier	FILE_QLDATE		410885	0					
ANR	410940	Label	case FILE_LEQLDATE :	941:1:22333:22351	410885	23	True				
ANR	410941	Identifier	FILE_LEQLDATE		410885	0					
ANR	410942	Label	case FILE_BEQLDATE :	942:1:22354:22372	410885	24	True				
ANR	410943	Identifier	FILE_BEQLDATE		410885	0					
ANR	410944	Label	case FILE_QWDATE :	943:1:22375:22391	410885	25	True				
ANR	410945	Identifier	FILE_QWDATE		410885	0					
ANR	410946	Label	case FILE_LEQWDATE :	944:1:22394:22412	410885	26	True				
ANR	410947	Identifier	FILE_LEQWDATE		410885	0					
ANR	410948	Label	case FILE_BEQWDATE :	945:1:22415:22433	410885	27	True				
ANR	410949	Identifier	FILE_BEQWDATE		410885	0					
ANR	410950	Label	case FILE_FLOAT :	946:1:22436:22451	410885	28	True				
ANR	410951	Identifier	FILE_FLOAT		410885	0					
ANR	410952	Label	case FILE_BEFLOAT :	947:1:22454:22471	410885	29	True				
ANR	410953	Identifier	FILE_BEFLOAT		410885	0					
ANR	410954	Label	case FILE_LEFLOAT :	948:1:22474:22491	410885	30	True				
ANR	410955	Identifier	FILE_LEFLOAT		410885	0					
ANR	410956	Label	case FILE_DOUBLE :	949:1:22494:22510	410885	31	True				
ANR	410957	Identifier	FILE_DOUBLE		410885	0					
ANR	410958	Label	case FILE_BEDOUBLE :	950:1:22513:22531	410885	32	True				
ANR	410959	Identifier	FILE_BEDOUBLE		410885	0					
ANR	410960	Label	case FILE_LEDOUBLE :	951:1:22534:22552	410885	33	True				
ANR	410961	Identifier	FILE_LEDOUBLE		410885	0					
ANR	410962	ExpressionStatement	mstart -> flag |= BINTEST	952:2:22556:22579	410885	34	True				
ANR	410963	AssignmentExpression	mstart -> flag |= BINTEST		410885	0		|=			
ANR	410964	PtrMemberAccess	mstart -> flag		410885	0					
ANR	410965	Identifier	mstart		410885	0					
ANR	410966	Identifier	flag		410885	1					
ANR	410967	Identifier	BINTEST		410885	1					
ANR	410968	BreakStatement	break ;	953:2:22583:22588	410885	35	True				
ANR	410969	Label	case FILE_STRING :	954:1:22591:22607	410885	36	True				
ANR	410970	Identifier	FILE_STRING		410885	0					
ANR	410971	Label	case FILE_PSTRING :	955:1:22610:22627	410885	37	True				
ANR	410972	Identifier	FILE_PSTRING		410885	0					
ANR	410973	Label	case FILE_BESTRING16 :	956:1:22630:22650	410885	38	True				
ANR	410974	Identifier	FILE_BESTRING16		410885	0					
ANR	410975	Label	case FILE_LESTRING16 :	957:1:22653:22673	410885	39	True				
ANR	410976	Identifier	FILE_LESTRING16		410885	0					
ANR	410977	IfStatement	if ( mstart -> str_flags & STRING_TEXTTEST )		410885	40					
ANR	410978	Condition	mstart -> str_flags & STRING_TEXTTEST	959:6:22710:22744	410885	0	True				
ANR	410979	BitAndExpression	mstart -> str_flags & STRING_TEXTTEST		410885	0		&			
ANR	410980	PtrMemberAccess	mstart -> str_flags		410885	0					
ANR	410981	Identifier	mstart		410885	0					
ANR	410982	Identifier	str_flags		410885	1					
ANR	410983	Identifier	STRING_TEXTTEST		410885	1					
ANR	410984	ExpressionStatement	mstart -> flag |= TEXTTEST	960:3:22750:22774	410885	1	True				
ANR	410985	AssignmentExpression	mstart -> flag |= TEXTTEST		410885	0		|=			
ANR	410986	PtrMemberAccess	mstart -> flag		410885	0					
ANR	410987	Identifier	mstart		410885	0					
ANR	410988	Identifier	flag		410885	1					
ANR	410989	Identifier	TEXTTEST		410885	1					
ANR	410990	ElseStatement	else		410885	0					
ANR	410991	ExpressionStatement	mstart -> flag |= BINTEST	962:3:22786:22809	410885	0	True				
ANR	410992	AssignmentExpression	mstart -> flag |= BINTEST		410885	0		|=			
ANR	410993	PtrMemberAccess	mstart -> flag		410885	0					
ANR	410994	Identifier	mstart		410885	0					
ANR	410995	Identifier	flag		410885	1					
ANR	410996	Identifier	BINTEST		410885	1					
ANR	410997	BreakStatement	break ;	963:2:22813:22818	410885	41	True				
ANR	410998	Label	case FILE_REGEX :	964:1:22821:22836	410885	42	True				
ANR	410999	Identifier	FILE_REGEX		410885	0					
ANR	411000	Label	case FILE_SEARCH :	965:1:22839:22855	410885	43	True				
ANR	411001	Identifier	FILE_SEARCH		410885	0					
ANR	411002	IfStatement	if ( mstart -> str_flags & STRING_BINTEST )		410885	44					
ANR	411003	Condition	mstart -> str_flags & STRING_BINTEST	967:6:22890:22923	410885	0	True				
ANR	411004	BitAndExpression	mstart -> str_flags & STRING_BINTEST		410885	0		&			
ANR	411005	PtrMemberAccess	mstart -> str_flags		410885	0					
ANR	411006	Identifier	mstart		410885	0					
ANR	411007	Identifier	str_flags		410885	1					
ANR	411008	Identifier	STRING_BINTEST		410885	1					
ANR	411009	ExpressionStatement	mstart -> flag |= BINTEST	968:3:22929:22952	410885	1	True				
ANR	411010	AssignmentExpression	mstart -> flag |= BINTEST		410885	0		|=			
ANR	411011	PtrMemberAccess	mstart -> flag		410885	0					
ANR	411012	Identifier	mstart		410885	0					
ANR	411013	Identifier	flag		410885	1					
ANR	411014	Identifier	BINTEST		410885	1					
ANR	411015	IfStatement	if ( mstart -> str_flags & STRING_TEXTTEST )		410885	45					
ANR	411016	Condition	mstart -> str_flags & STRING_TEXTTEST	969:6:22960:22994	410885	0	True				
ANR	411017	BitAndExpression	mstart -> str_flags & STRING_TEXTTEST		410885	0		&			
ANR	411018	PtrMemberAccess	mstart -> str_flags		410885	0					
ANR	411019	Identifier	mstart		410885	0					
ANR	411020	Identifier	str_flags		410885	1					
ANR	411021	Identifier	STRING_TEXTTEST		410885	1					
ANR	411022	ExpressionStatement	mstart -> flag |= TEXTTEST	970:3:23000:23024	410885	1	True				
ANR	411023	AssignmentExpression	mstart -> flag |= TEXTTEST		410885	0		|=			
ANR	411024	PtrMemberAccess	mstart -> flag		410885	0					
ANR	411025	Identifier	mstart		410885	0					
ANR	411026	Identifier	flag		410885	1					
ANR	411027	Identifier	TEXTTEST		410885	1					
ANR	411028	IfStatement	if ( mstart -> flag & ( TEXTTEST | BINTEST ) )		410885	46					
ANR	411029	Condition	mstart -> flag & ( TEXTTEST | BINTEST )	972:6:23039:23071	410885	0	True				
ANR	411030	BitAndExpression	mstart -> flag & ( TEXTTEST | BINTEST )		410885	0		&			
ANR	411031	PtrMemberAccess	mstart -> flag		410885	0					
ANR	411032	Identifier	mstart		410885	0					
ANR	411033	Identifier	flag		410885	1					
ANR	411034	InclusiveOrExpression	TEXTTEST | BINTEST		410885	1		|			
ANR	411035	Identifier	TEXTTEST		410885	0					
ANR	411036	Identifier	BINTEST		410885	1					
ANR	411037	BreakStatement	break ;	973:3:23077:23082	410885	1	True				
ANR	411038	IfStatement	"if ( file_looks_utf8 ( m -> value . us , ( size_t ) m -> vallen , NULL , NULL ) <= 0 )"		410885	47					
ANR	411039	Condition	"file_looks_utf8 ( m -> value . us , ( size_t ) m -> vallen , NULL , NULL ) <= 0"	976:6:23134:23203	410885	0	True				
ANR	411040	RelationalExpression	"file_looks_utf8 ( m -> value . us , ( size_t ) m -> vallen , NULL , NULL ) <= 0"		410885	0		<=			
ANR	411041	CallExpression	"file_looks_utf8 ( m -> value . us , ( size_t ) m -> vallen , NULL , NULL )"		410885	0					
ANR	411042	Callee	file_looks_utf8		410885	0					
ANR	411043	Identifier	file_looks_utf8		410885	0					
ANR	411044	ArgumentList	m -> value . us		410885	1					
ANR	411045	Argument	m -> value . us		410885	0					
ANR	411046	MemberAccess	m -> value . us		410885	0					
ANR	411047	PtrMemberAccess	m -> value		410885	0					
ANR	411048	Identifier	m		410885	0					
ANR	411049	Identifier	value		410885	1					
ANR	411050	Identifier	us		410885	1					
ANR	411051	Argument	( size_t ) m -> vallen		410885	1					
ANR	411052	CastExpression	( size_t ) m -> vallen		410885	0					
ANR	411053	CastTarget	size_t		410885	0					
ANR	411054	PtrMemberAccess	m -> vallen		410885	1					
ANR	411055	Identifier	m		410885	0					
ANR	411056	Identifier	vallen		410885	1					
ANR	411057	Argument	NULL		410885	2					
ANR	411058	Identifier	NULL		410885	0					
ANR	411059	Argument	NULL		410885	3					
ANR	411060	Identifier	NULL		410885	0					
ANR	411061	PrimaryExpression	0		410885	1					
ANR	411062	ExpressionStatement	mstart -> flag |= BINTEST	978:3:23209:23232	410885	1	True				
ANR	411063	AssignmentExpression	mstart -> flag |= BINTEST		410885	0		|=			
ANR	411064	PtrMemberAccess	mstart -> flag		410885	0					
ANR	411065	Identifier	mstart		410885	0					
ANR	411066	Identifier	flag		410885	1					
ANR	411067	Identifier	BINTEST		410885	1					
ANR	411068	ElseStatement	else		410885	0					
ANR	411069	ExpressionStatement	mstart -> flag |= TEXTTEST	980:3:23244:23268	410885	0	True				
ANR	411070	AssignmentExpression	mstart -> flag |= TEXTTEST		410885	0		|=			
ANR	411071	PtrMemberAccess	mstart -> flag		410885	0					
ANR	411072	Identifier	mstart		410885	0					
ANR	411073	Identifier	flag		410885	1					
ANR	411074	Identifier	TEXTTEST		410885	1					
ANR	411075	BreakStatement	break ;	981:2:23272:23277	410885	48	True				
ANR	411076	Label	case FILE_DEFAULT :	982:1:23280:23297	410885	49	True				
ANR	411077	Identifier	FILE_DEFAULT		410885	0					
ANR	411078	BreakStatement	break ;	985:2:23383:23388	410885	50	True				
ANR	411079	Label	case FILE_INVALID :	986:1:23391:23408	410885	51	True				
ANR	411080	Identifier	FILE_INVALID		410885	0					
ANR	411081	Label	default :	987:1:23411:23418	410885	52	True				
ANR	411082	Identifier	default		410885	0					
ANR	411083	BreakStatement	break ;	989:2:23480:23485	410885	53	True				
ANR	411084	ReturnType	void		410885	1					
ANR	411085	Identifier	set_test_type		410885	2					
ANR	411086	ParameterList	"struct magic * mstart , struct magic * m"		410885	3					
ANR	411087	Parameter	struct magic * mstart	915:14:21838:21857	410885	0	True				
ANR	411088	ParameterType	struct magic *		410885	0					
ANR	411089	Identifier	mstart		410885	1					
ANR	411090	Parameter	struct magic * m	915:36:21860:21874	410885	1	True				
ANR	411091	ParameterType	struct magic *		410885	0					
ANR	411092	Identifier	m		410885	1					
ANR	411093	CFGEntryNode	ENTRY		410885		True				
ANR	411094	CFGExitNode	EXIT		410885		True				
ANR	411095	Symbol	NULL		410885						
ANR	411096	Symbol	m -> value		410885						
ANR	411097	Symbol	STRING_BINTEST		410885						
ANR	411098	Symbol	BINTEST		410885						
ANR	411099	Symbol	m -> value . us		410885						
ANR	411100	Symbol	* mstart		410885						
ANR	411101	Symbol	file_looks_utf8		410885						
ANR	411102	Symbol	m		410885						
ANR	411103	Symbol	STRING_TEXTTEST		410885						
ANR	411104	Symbol	m -> type		410885						
ANR	411105	Symbol	mstart -> flag		410885						
ANR	411106	Symbol	* m		410885						
ANR	411107	Symbol	m -> vallen		410885						
ANR	411108	Symbol	TEXTTEST		410885						
ANR	411109	Symbol	mstart		410885						
ANR	411110	Symbol	mstart -> str_flags		410885						
ANR	411111	Function	addentry	993:8:23501:24080							
ANR	411112	FunctionDef	"addentry (struct magic_set * ms , struct magic_entry * me , struct magic_entry_set * mset)"		411111	0					
ANR	411113	CompoundStatement		996:0:23593:24080	411111	0					
ANR	411114	IdentifierDeclStatement	size_t i = me -> mp -> type == FILE_NAME ? 1 : 0 ;	997:1:23596:23640	411111	0	True				
ANR	411115	IdentifierDecl	i = me -> mp -> type == FILE_NAME ? 1 : 0		411111	0					
ANR	411116	IdentifierDeclType	size_t		411111	0					
ANR	411117	Identifier	i		411111	1					
ANR	411118	AssignmentExpression	i = me -> mp -> type == FILE_NAME ? 1 : 0		411111	2		=			
ANR	411119	Identifier	i		411111	0					
ANR	411120	ConditionalExpression	me -> mp -> type == FILE_NAME ? 1 : 0		411111	1					
ANR	411121	Condition	me -> mp -> type == FILE_NAME		411111	0					
ANR	411122	EqualityExpression	me -> mp -> type == FILE_NAME		411111	0		==			
ANR	411123	PtrMemberAccess	me -> mp -> type		411111	0					
ANR	411124	PtrMemberAccess	me -> mp		411111	0					
ANR	411125	Identifier	me		411111	0					
ANR	411126	Identifier	mp		411111	1					
ANR	411127	Identifier	type		411111	1					
ANR	411128	Identifier	FILE_NAME		411111	1					
ANR	411129	PrimaryExpression	1		411111	1					
ANR	411130	PrimaryExpression	0		411111	2					
ANR	411131	IfStatement	if ( mset [ i ] . count == mset [ i ] . max )		411111	1					
ANR	411132	Condition	mset [ i ] . count == mset [ i ] . max	998:5:23647:23674	411111	0	True				
ANR	411133	EqualityExpression	mset [ i ] . count == mset [ i ] . max		411111	0		==			
ANR	411134	MemberAccess	mset [ i ] . count		411111	0					
ANR	411135	ArrayIndexing	mset [ i ]		411111	0					
ANR	411136	Identifier	mset		411111	0					
ANR	411137	Identifier	i		411111	1					
ANR	411138	Identifier	count		411111	1					
ANR	411139	MemberAccess	mset [ i ] . max		411111	1					
ANR	411140	ArrayIndexing	mset [ i ]		411111	0					
ANR	411141	Identifier	mset		411111	0					
ANR	411142	Identifier	i		411111	1					
ANR	411143	Identifier	max		411111	1					
ANR	411144	CompoundStatement		4:2:87:109	411111	1					
ANR	411145	IdentifierDeclStatement	struct magic_entry * mp ;	999:2:23681:23703	411111	0	True				
ANR	411146	IdentifierDecl	* mp		411111	0					
ANR	411147	IdentifierDeclType	struct magic_entry *		411111	0					
ANR	411148	Identifier	mp		411111	1					
ANR	411149	ExpressionStatement	mset [ i ] . max += ALLOC_INCR	1001:2:23708:23733	411111	1	True				
ANR	411150	AssignmentExpression	mset [ i ] . max += ALLOC_INCR		411111	0		+=			
ANR	411151	MemberAccess	mset [ i ] . max		411111	0					
ANR	411152	ArrayIndexing	mset [ i ]		411111	0					
ANR	411153	Identifier	mset		411111	0					
ANR	411154	Identifier	i		411111	1					
ANR	411155	Identifier	max		411111	1					
ANR	411156	Identifier	ALLOC_INCR		411111	1					
ANR	411157	Statement	if	1002:2:23737:23738	411111	2	True				
ANR	411158	Statement	(	1002:5:23740:23740	411111	3	True				
ANR	411159	Statement	(	1002:6:23741:23741	411111	4	True				
ANR	411160	Statement	mp	1002:7:23742:23743	411111	5	True				
ANR	411161	Statement	=	1002:10:23745:23745	411111	6	True				
ANR	411162	Statement	CAST	1002:12:23747:23750	411111	7	True				
ANR	411163	Statement	(	1002:16:23751:23751	411111	8	True				
ANR	411164	Statement	struct	1002:17:23752:23757	411111	9	True				
ANR	411165	Statement	magic_entry	1002:24:23759:23769	411111	10	True				
ANR	411166	Statement	*	1002:36:23771:23771	411111	11	True				
ANR	411167	Statement	","	1002:37:23772:23772	411111	12	True				
ANR	411168	Statement	erealloc	1003:6:23780:23787	411111	13	True				
ANR	411169	Statement	(	1003:14:23788:23788	411111	14	True				
ANR	411170	Statement	mset	1003:15:23789:23792	411111	15	True				
ANR	411171	Statement	[	1003:19:23793:23793	411111	16	True				
ANR	411172	Statement	i	1003:20:23794:23794	411111	17	True				
ANR	411173	Statement	]	1003:21:23795:23795	411111	18	True				
ANR	411174	Statement	.	1003:22:23796:23796	411111	19	True				
ANR	411175	Statement	me	1003:23:23797:23798	411111	20	True				
ANR	411176	Statement	","	1003:25:23799:23799	411111	21	True				
ANR	411177	Statement	sizeof	1003:27:23801:23806	411111	22	True				
ANR	411178	Statement	(	1003:33:23807:23807	411111	23	True				
ANR	411179	Statement	*	1003:34:23808:23808	411111	24	True				
ANR	411180	Statement	mp	1003:35:23809:23810	411111	25	True				
ANR	411181	Statement	)	1003:37:23811:23811	411111	26	True				
ANR	411182	Statement	*	1003:39:23813:23813	411111	27	True				
ANR	411183	Statement	mset	1003:41:23815:23818	411111	28	True				
ANR	411184	Statement	[	1003:45:23819:23819	411111	29	True				
ANR	411185	Statement	i	1003:46:23820:23820	411111	30	True				
ANR	411186	Statement	]	1003:47:23821:23821	411111	31	True				
ANR	411187	Statement	.	1003:48:23822:23822	411111	32	True				
ANR	411188	Statement	max	1003:49:23823:23825	411111	33	True				
ANR	411189	Statement	)	1003:52:23826:23826	411111	34	True				
ANR	411190	Statement	)	1003:53:23827:23827	411111	35	True				
ANR	411191	Statement	)	1003:54:23828:23828	411111	36	True				
ANR	411192	Statement	==	1003:56:23830:23831	411111	37	True				
ANR	411193	Statement	NULL	1004:6:23839:23842	411111	38	True				
ANR	411194	Statement	)	1004:10:23843:23843	411111	39	True				
ANR	411195	CompoundStatement		9:12:251:251	411111	40					
ANR	411196	ExpressionStatement	"file_oomem ( ms , sizeof ( * mp ) * mset [ i ] . max )"	1005:3:23850:23891	411111	0	True				
ANR	411197	CallExpression	"file_oomem ( ms , sizeof ( * mp ) * mset [ i ] . max )"		411111	0					
ANR	411198	Callee	file_oomem		411111	0					
ANR	411199	Identifier	file_oomem		411111	0					
ANR	411200	ArgumentList	ms		411111	1					
ANR	411201	Argument	ms		411111	0					
ANR	411202	Identifier	ms		411111	0					
ANR	411203	Argument	sizeof ( * mp ) * mset [ i ] . max		411111	1					
ANR	411204	MultiplicativeExpression	sizeof ( * mp ) * mset [ i ] . max		411111	0		*			
ANR	411205	SizeofExpression	sizeof ( * mp )		411111	0					
ANR	411206	Sizeof	sizeof		411111	0					
ANR	411207	UnaryOperationExpression	* mp		411111	1					
ANR	411208	UnaryOperator	*		411111	0					
ANR	411209	Identifier	mp		411111	1					
ANR	411210	MemberAccess	mset [ i ] . max		411111	1					
ANR	411211	ArrayIndexing	mset [ i ]		411111	0					
ANR	411212	Identifier	mset		411111	0					
ANR	411213	Identifier	i		411111	1					
ANR	411214	Identifier	max		411111	1					
ANR	411215	ReturnStatement	return - 1 ;	1006:3:23896:23905	411111	1	True				
ANR	411216	UnaryOperationExpression	- 1		411111	0					
ANR	411217	UnaryOperator	-		411111	0					
ANR	411218	PrimaryExpression	1		411111	1					
ANR	411219	ExpressionStatement	"( void ) memset ( & mp [ mset [ i ] . count ] , 0 , sizeof ( * mp ) * ALLOC_INCR )"	1008:2:23913:23980	411111	41	True				
ANR	411220	CastExpression	"( void ) memset ( & mp [ mset [ i ] . count ] , 0 , sizeof ( * mp ) * ALLOC_INCR )"		411111	0					
ANR	411221	CastTarget	void		411111	0					
ANR	411222	CallExpression	"memset ( & mp [ mset [ i ] . count ] , 0 , sizeof ( * mp ) * ALLOC_INCR )"		411111	1					
ANR	411223	Callee	memset		411111	0					
ANR	411224	Identifier	memset		411111	0					
ANR	411225	ArgumentList	& mp [ mset [ i ] . count ]		411111	1					
ANR	411226	Argument	& mp [ mset [ i ] . count ]		411111	0					
ANR	411227	UnaryOperationExpression	& mp [ mset [ i ] . count ]		411111	0					
ANR	411228	UnaryOperator	&		411111	0					
ANR	411229	ArrayIndexing	mp [ mset [ i ] . count ]		411111	1					
ANR	411230	Identifier	mp		411111	0					
ANR	411231	MemberAccess	mset [ i ] . count		411111	1					
ANR	411232	ArrayIndexing	mset [ i ]		411111	0					
ANR	411233	Identifier	mset		411111	0					
ANR	411234	Identifier	i		411111	1					
ANR	411235	Identifier	count		411111	1					
ANR	411236	Argument	0		411111	1					
ANR	411237	PrimaryExpression	0		411111	0					
ANR	411238	Argument	sizeof ( * mp ) * ALLOC_INCR		411111	2					
ANR	411239	MultiplicativeExpression	sizeof ( * mp ) * ALLOC_INCR		411111	0		*			
ANR	411240	SizeofExpression	sizeof ( * mp )		411111	0					
ANR	411241	Sizeof	sizeof		411111	0					
ANR	411242	UnaryOperationExpression	* mp		411111	1					
ANR	411243	UnaryOperator	*		411111	0					
ANR	411244	Identifier	mp		411111	1					
ANR	411245	Identifier	ALLOC_INCR		411111	1					
ANR	411246	ExpressionStatement	mset [ i ] . me = mp	1010:2:23984:23999	411111	42	True				
ANR	411247	AssignmentExpression	mset [ i ] . me = mp		411111	0		=			
ANR	411248	MemberAccess	mset [ i ] . me		411111	0					
ANR	411249	ArrayIndexing	mset [ i ]		411111	0					
ANR	411250	Identifier	mset		411111	0					
ANR	411251	Identifier	i		411111	1					
ANR	411252	Identifier	me		411111	1					
ANR	411253	Identifier	mp		411111	1					
ANR	411254	ExpressionStatement	mset [ i ] . me [ mset [ i ] . count ++ ] = * me	1012:1:24005:24038	411111	2	True				
ANR	411255	AssignmentExpression	mset [ i ] . me [ mset [ i ] . count ++ ] = * me		411111	0		=			
ANR	411256	ArrayIndexing	mset [ i ] . me [ mset [ i ] . count ++ ]		411111	0					
ANR	411257	MemberAccess	mset [ i ] . me		411111	0					
ANR	411258	ArrayIndexing	mset [ i ]		411111	0					
ANR	411259	Identifier	mset		411111	0					
ANR	411260	Identifier	i		411111	1					
ANR	411261	Identifier	me		411111	1					
ANR	411262	PostIncDecOperationExpression	mset [ i ] . count ++		411111	1					
ANR	411263	MemberAccess	mset [ i ] . count		411111	0					
ANR	411264	ArrayIndexing	mset [ i ]		411111	0					
ANR	411265	Identifier	mset		411111	0					
ANR	411266	Identifier	i		411111	1					
ANR	411267	Identifier	count		411111	1					
ANR	411268	IncDec	++		411111	1					
ANR	411269	UnaryOperationExpression	* me		411111	1					
ANR	411270	UnaryOperator	*		411111	0					
ANR	411271	Identifier	me		411111	1					
ANR	411272	ExpressionStatement	"memset ( me , 0 , sizeof ( * me ) )"	1013:1:24041:24067	411111	3	True				
ANR	411273	CallExpression	"memset ( me , 0 , sizeof ( * me ) )"		411111	0					
ANR	411274	Callee	memset		411111	0					
ANR	411275	Identifier	memset		411111	0					
ANR	411276	ArgumentList	me		411111	1					
ANR	411277	Argument	me		411111	0					
ANR	411278	Identifier	me		411111	0					
ANR	411279	Argument	0		411111	1					
ANR	411280	PrimaryExpression	0		411111	0					
ANR	411281	Argument	sizeof ( * me )		411111	2					
ANR	411282	SizeofExpression	sizeof ( * me )		411111	0					
ANR	411283	Sizeof	sizeof		411111	0					
ANR	411284	UnaryOperationExpression	* me		411111	1					
ANR	411285	UnaryOperator	*		411111	0					
ANR	411286	Identifier	me		411111	1					
ANR	411287	ReturnStatement	return 0 ;	1014:1:24070:24078	411111	4	True				
ANR	411288	PrimaryExpression	0		411111	0					
ANR	411289	ReturnType	int		411111	1					
ANR	411290	Identifier	addentry		411111	2					
ANR	411291	ParameterList	"struct magic_set * ms , struct magic_entry * me , struct magic_entry_set * mset"		411111	3					
ANR	411292	Parameter	struct magic_set * ms	994:9:23514:23533	411111	0	True				
ANR	411293	ParameterType	struct magic_set *		411111	0					
ANR	411294	Identifier	ms		411111	1					
ANR	411295	Parameter	struct magic_entry * me	994:31:23536:23557	411111	1	True				
ANR	411296	ParameterType	struct magic_entry *		411111	0					
ANR	411297	Identifier	me		411111	1					
ANR	411298	Parameter	struct magic_entry_set * mset	995:3:23563:23590	411111	2	True				
ANR	411299	ParameterType	struct magic_entry_set *		411111	0					
ANR	411300	Identifier	mset		411111	1					
ANR	411301	CFGEntryNode	ENTRY		411111		True				
ANR	411302	CFGExitNode	EXIT		411111		True				
ANR	411303	Symbol	mset [ i ] . max		411111						
ANR	411304	Symbol	* me -> mp		411111						
ANR	411305	Symbol	* * i		411111						
ANR	411306	Symbol	mp		411111						
ANR	411307	Symbol	ms		411111						
ANR	411308	Symbol	mset		411111						
ANR	411309	Symbol	* * me		411111						
ANR	411310	Symbol	i		411111						
ANR	411311	Symbol	* mset		411111						
ANR	411312	Symbol	* mp		411111						
ANR	411313	Symbol	FILE_NAME		411111						
ANR	411314	Symbol	me -> mp		411111						
ANR	411315	Symbol	me -> mp -> type		411111						
ANR	411316	Symbol	ALLOC_INCR		411111						
ANR	411317	Symbol	* i		411111						
ANR	411318	Symbol	mset [ i ] . count		411111						
ANR	411319	Symbol	me		411111						
ANR	411320	Symbol	* * mset		411111						
ANR	411321	Symbol	* mset [ i ] . me		411111						
ANR	411322	Symbol	* me		411111						
ANR	411323	Symbol	mset [ i ] . me		411111						
ANR	411324	Function	load_1	1020:8:24126:25977							
ANR	411325	FunctionDef	"load_1 (struct magic_set * ms , int action , const char * fn , int * errs , struct magic_entry_set * mset)"		411324	0					
ANR	411326	CompoundStatement		1023:0:24232:25977	411324	0					
ANR	411327	IdentifierDeclStatement	char buffer [ BUFSIZ + 1 ] ;	1024:1:24235:24258	411324	0	True				
ANR	411328	IdentifierDecl	buffer [ BUFSIZ + 1 ]		411324	0					
ANR	411329	IdentifierDeclType	char [ BUFSIZ + 1 ]		411324	0					
ANR	411330	Identifier	buffer		411324	1					
ANR	411331	AdditiveExpression	BUFSIZ + 1		411324	2		+			
ANR	411332	Identifier	BUFSIZ		411324	0					
ANR	411333	PrimaryExpression	1		411324	1					
ANR	411334	IdentifierDeclStatement	char * line = NULL ;	1025:1:24261:24278	411324	1	True				
ANR	411335	IdentifierDecl	* line = NULL		411324	0					
ANR	411336	IdentifierDeclType	char *		411324	0					
ANR	411337	Identifier	line		411324	1					
ANR	411338	AssignmentExpression	* line = NULL		411324	2		=			
ANR	411339	Identifier	NULL		411324	0					
ANR	411340	Identifier	NULL		411324	1					
ANR	411341	IdentifierDeclStatement	size_t len ;	1026:1:24281:24291	411324	2	True				
ANR	411342	IdentifierDecl	len		411324	0					
ANR	411343	IdentifierDeclType	size_t		411324	0					
ANR	411344	Identifier	len		411324	1					
ANR	411345	IdentifierDeclStatement	size_t lineno = 0 ;	1027:1:24294:24311	411324	3	True				
ANR	411346	IdentifierDecl	lineno = 0		411324	0					
ANR	411347	IdentifierDeclType	size_t		411324	0					
ANR	411348	Identifier	lineno		411324	1					
ANR	411349	AssignmentExpression	lineno = 0		411324	2		=			
ANR	411350	Identifier	lineno		411324	0					
ANR	411351	PrimaryExpression	0		411324	1					
ANR	411352	IdentifierDeclStatement	struct magic_entry me ;	1028:1:24314:24335	411324	4	True				
ANR	411353	IdentifierDecl	me		411324	0					
ANR	411354	IdentifierDeclType	struct magic_entry		411324	0					
ANR	411355	Identifier	me		411324	1					
ANR	411356	IdentifierDeclStatement	php_stream * stream ;	1030:1:24339:24357	411324	5	True				
ANR	411357	IdentifierDecl	* stream		411324	0					
ANR	411358	IdentifierDeclType	php_stream *		411324	0					
ANR	411359	Identifier	stream		411324	1					
ANR	411360	ExpressionStatement	ms -> file = fn	1033:1:24362:24375	411324	6	True				
ANR	411361	AssignmentExpression	ms -> file = fn		411324	0		=			
ANR	411362	PtrMemberAccess	ms -> file		411324	0					
ANR	411363	Identifier	ms		411324	0					
ANR	411364	Identifier	file		411324	1					
ANR	411365	Identifier	fn		411324	1					
ANR	411366	ExpressionStatement	"stream = php_stream_open_wrapper ( ( char * ) fn , ""rb"" , REPORT_ERRORS , NULL )"	1034:1:24378:24449	411324	7	True				
ANR	411367	AssignmentExpression	"stream = php_stream_open_wrapper ( ( char * ) fn , ""rb"" , REPORT_ERRORS , NULL )"		411324	0		=			
ANR	411368	Identifier	stream		411324	0					
ANR	411369	CallExpression	"php_stream_open_wrapper ( ( char * ) fn , ""rb"" , REPORT_ERRORS , NULL )"		411324	1					
ANR	411370	Callee	php_stream_open_wrapper		411324	0					
ANR	411371	Identifier	php_stream_open_wrapper		411324	0					
ANR	411372	ArgumentList	( char * ) fn		411324	1					
ANR	411373	Argument	( char * ) fn		411324	0					
ANR	411374	CastExpression	( char * ) fn		411324	0					
ANR	411375	CastTarget	char *		411324	0					
ANR	411376	Identifier	fn		411324	1					
ANR	411377	Argument	"""rb"""		411324	1					
ANR	411378	PrimaryExpression	"""rb"""		411324	0					
ANR	411379	Argument	REPORT_ERRORS		411324	2					
ANR	411380	Identifier	REPORT_ERRORS		411324	0					
ANR	411381	Argument	NULL		411324	3					
ANR	411382	Identifier	NULL		411324	0					
ANR	411383	IfStatement	if ( stream == NULL )		411324	8					
ANR	411384	Condition	stream == NULL	1036:5:24457:24470	411324	0	True				
ANR	411385	EqualityExpression	stream == NULL		411324	0		==			
ANR	411386	Identifier	stream		411324	0					
ANR	411387	Identifier	NULL		411324	1					
ANR	411388	CompoundStatement		14:21:240:240	411324	1					
ANR	411389	IfStatement	if ( errno != ENOENT )		411324	0					
ANR	411390	Condition	errno != ENOENT	1037:6:24481:24495	411324	0	True				
ANR	411391	EqualityExpression	errno != ENOENT		411324	0		!=			
ANR	411392	Identifier	errno		411324	0					
ANR	411393	Identifier	ENOENT		411324	1					
ANR	411394	ExpressionStatement	"file_error ( ms , errno , ""cannot read magic file `%s'"" , fn )"	1038:3:24501:24564	411324	1	True				
ANR	411395	CallExpression	"file_error ( ms , errno , ""cannot read magic file `%s'"" , fn )"		411324	0					
ANR	411396	Callee	file_error		411324	0					
ANR	411397	Identifier	file_error		411324	0					
ANR	411398	ArgumentList	ms		411324	1					
ANR	411399	Argument	ms		411324	0					
ANR	411400	Identifier	ms		411324	0					
ANR	411401	Argument	errno		411324	1					
ANR	411402	Identifier	errno		411324	0					
ANR	411403	Argument	"""cannot read magic file `%s'"""		411324	2					
ANR	411404	PrimaryExpression	"""cannot read magic file `%s'"""		411324	0					
ANR	411405	Argument	fn		411324	3					
ANR	411406	Identifier	fn		411324	0					
ANR	411407	ExpressionStatement	( * errs ) ++	1040:2:24568:24577	411324	1	True				
ANR	411408	PostIncDecOperationExpression	( * errs ) ++		411324	0					
ANR	411409	UnaryOperationExpression	* errs		411324	0					
ANR	411410	UnaryOperator	*		411324	0					
ANR	411411	Identifier	errs		411324	1					
ANR	411412	IncDec	++		411324	1					
ANR	411413	ReturnStatement	return ;	1041:2:24581:24587	411324	2	True				
ANR	411414	ExpressionStatement	"memset ( & me , 0 , sizeof ( me ) )"	1044:1:24594:24620	411324	9	True				
ANR	411415	CallExpression	"memset ( & me , 0 , sizeof ( me ) )"		411324	0					
ANR	411416	Callee	memset		411324	0					
ANR	411417	Identifier	memset		411324	0					
ANR	411418	ArgumentList	& me		411324	1					
ANR	411419	Argument	& me		411324	0					
ANR	411420	UnaryOperationExpression	& me		411324	0					
ANR	411421	UnaryOperator	&		411324	0					
ANR	411422	Identifier	me		411324	1					
ANR	411423	Argument	0		411324	1					
ANR	411424	PrimaryExpression	0		411324	0					
ANR	411425	Argument	sizeof ( me )		411324	2					
ANR	411426	SizeofExpression	sizeof ( me )		411324	0					
ANR	411427	Sizeof	sizeof		411324	0					
ANR	411428	SizeofOperand	me		411324	1					
ANR	411429	ForStatement	"for ( ms -> line = 1 ; ( line = php_stream_get_line ( stream , buffer , BUFSIZ , & len ) ) != NULL ; ms -> line ++ )"		411324	10					
ANR	411430	ForInit	ms -> line = 1 ;	1046:6:24660:24672	411324	0	True				
ANR	411431	AssignmentExpression	ms -> line = 1		411324	0		=			
ANR	411432	PtrMemberAccess	ms -> line		411324	0					
ANR	411433	Identifier	ms		411324	0					
ANR	411434	Identifier	line		411324	1					
ANR	411435	PrimaryExpression	1		411324	1					
ANR	411436	Condition	"( line = php_stream_get_line ( stream , buffer , BUFSIZ , & len ) ) != NULL"	1046:20:24674:24740	411324	1	True				
ANR	411437	EqualityExpression	"( line = php_stream_get_line ( stream , buffer , BUFSIZ , & len ) ) != NULL"		411324	0		!=			
ANR	411438	AssignmentExpression	"line = php_stream_get_line ( stream , buffer , BUFSIZ , & len )"		411324	0		=			
ANR	411439	Identifier	line		411324	0					
ANR	411440	CallExpression	"php_stream_get_line ( stream , buffer , BUFSIZ , & len )"		411324	1					
ANR	411441	Callee	php_stream_get_line		411324	0					
ANR	411442	Identifier	php_stream_get_line		411324	0					
ANR	411443	ArgumentList	stream		411324	1					
ANR	411444	Argument	stream		411324	0					
ANR	411445	Identifier	stream		411324	0					
ANR	411446	Argument	buffer		411324	1					
ANR	411447	Identifier	buffer		411324	0					
ANR	411448	Argument	BUFSIZ		411324	2					
ANR	411449	Identifier	BUFSIZ		411324	0					
ANR	411450	Argument	& len		411324	3					
ANR	411451	UnaryOperationExpression	& len		411324	0					
ANR	411452	UnaryOperator	&		411324	0					
ANR	411453	Identifier	len		411324	1					
ANR	411454	Identifier	NULL		411324	1					
ANR	411455	PostIncDecOperationExpression	ms -> line ++	1046:89:24743:24752	411324	2	True				
ANR	411456	PtrMemberAccess	ms -> line		411324	0					
ANR	411457	Identifier	ms		411324	0					
ANR	411458	Identifier	line		411324	1					
ANR	411459	IncDec	++		411324	1					
ANR	411460	CompoundStatement		24:101:522:522	411324	3					
ANR	411461	IfStatement	if ( len == 0 )		411324	0					
ANR	411462	Condition	len == 0	1047:6:24763:24770	411324	0	True				
ANR	411463	EqualityExpression	len == 0		411324	0		==			
ANR	411464	Identifier	len		411324	0					
ANR	411465	PrimaryExpression	0		411324	1					
ANR	411466	ContinueStatement	continue ;	1048:3:24806:24814	411324	1	True				
ANR	411467	IfStatement	if ( line [ len - 1 ] == '\\n' )		411324	1					
ANR	411468	Condition	line [ len - 1 ] == '\\n'	1049:6:24822:24842	411324	0	True				
ANR	411469	EqualityExpression	line [ len - 1 ] == '\\n'		411324	0		==			
ANR	411470	ArrayIndexing	line [ len - 1 ]		411324	0					
ANR	411471	Identifier	line		411324	0					
ANR	411472	AdditiveExpression	len - 1		411324	1		-			
ANR	411473	Identifier	len		411324	0					
ANR	411474	PrimaryExpression	1		411324	1					
ANR	411475	PrimaryExpression	'\\n'		411324	1					
ANR	411476	CompoundStatement		27:29:612:612	411324	1					
ANR	411477	ExpressionStatement	lineno ++	1050:3:24850:24858	411324	0	True				
ANR	411478	PostIncDecOperationExpression	lineno ++		411324	0					
ANR	411479	Identifier	lineno		411324	0					
ANR	411480	IncDec	++		411324	1					
ANR	411481	ExpressionStatement	line [ len - 1 ] = '\\0'	1051:3:24863:24883	411324	1	True				
ANR	411482	AssignmentExpression	line [ len - 1 ] = '\\0'		411324	0		=			
ANR	411483	ArrayIndexing	line [ len - 1 ]		411324	0					
ANR	411484	Identifier	line		411324	0					
ANR	411485	AdditiveExpression	len - 1		411324	1		-			
ANR	411486	Identifier	len		411324	0					
ANR	411487	PrimaryExpression	1		411324	1					
ANR	411488	PrimaryExpression	'\\0'		411324	1					
ANR	411489	SwitchStatement	switch ( line [ 0 ] )		411324	2					
ANR	411490	Condition	line [ 0 ]	1053:10:24920:24926	411324	0	True				
ANR	411491	ArrayIndexing	line [ 0 ]		411324	0					
ANR	411492	Identifier	line		411324	0					
ANR	411493	PrimaryExpression	0		411324	1					
ANR	411494	CompoundStatement		31:19:696:696	411324	1					
ANR	411495	Label	case '\\0' :	1054:2:24933:24942	411324	0	True				
ANR	411496	Label	case '#' :	1055:2:24972:24980	411324	1	True				
ANR	411497	ContinueStatement	continue ;	1056:3:25013:25021	411324	2	True				
ANR	411498	Label	case '!' :	1057:2:25025:25033	411324	3	True				
ANR	411499	IfStatement	if ( line [ 1 ] == ':' )		411324	4					
ANR	411500	Condition	line [ 1 ] == ':'	1058:7:25042:25055	411324	0	True				
ANR	411501	EqualityExpression	line [ 1 ] == ':'		411324	0		==			
ANR	411502	ArrayIndexing	line [ 1 ]		411324	0					
ANR	411503	Identifier	line		411324	0					
ANR	411504	PrimaryExpression	1		411324	1					
ANR	411505	PrimaryExpression	':'		411324	1					
ANR	411506	CompoundStatement		37:4:831:839	411324	1					
ANR	411507	IdentifierDeclStatement	size_t i ;	1059:4:25064:25072	411324	0	True				
ANR	411508	IdentifierDecl	i		411324	0					
ANR	411509	IdentifierDeclType	size_t		411324	0					
ANR	411510	Identifier	i		411324	1					
ANR	411511	ForStatement	for ( i = 0 ; bang [ i ] . name != NULL ; i ++ )		411324	1					
ANR	411512	ForInit	i = 0 ;	1061:9:25084:25089	411324	0	True				
ANR	411513	AssignmentExpression	i = 0		411324	0		=			
ANR	411514	Identifier	i		411324	0					
ANR	411515	PrimaryExpression	0		411324	1					
ANR	411516	Condition	bang [ i ] . name != NULL	1061:16:25091:25110	411324	1	True				
ANR	411517	EqualityExpression	bang [ i ] . name != NULL		411324	0		!=			
ANR	411518	MemberAccess	bang [ i ] . name		411324	0					
ANR	411519	ArrayIndexing	bang [ i ]		411324	0					
ANR	411520	Identifier	bang		411324	0					
ANR	411521	Identifier	i		411324	1					
ANR	411522	Identifier	name		411324	1					
ANR	411523	Identifier	NULL		411324	1					
ANR	411524	PostIncDecOperationExpression	i ++	1061:38:25113:25115	411324	2	True				
ANR	411525	Identifier	i		411324	0					
ANR	411526	IncDec	++		411324	1					
ANR	411527	CompoundStatement		39:43:885:885	411324	3					
ANR	411528	IfStatement	"if ( ( size_t ) ( len - 2 ) > bang [ i ] . len && memcmp ( bang [ i ] . name , line + 2 , bang [ i ] . len ) == 0 )"		411324	0					
ANR	411529	Condition	"( size_t ) ( len - 2 ) > bang [ i ] . len && memcmp ( bang [ i ] . name , line + 2 , bang [ i ] . len ) == 0"	1062:9:25129:25229	411324	0	True				
ANR	411530	AndExpression	"( size_t ) ( len - 2 ) > bang [ i ] . len && memcmp ( bang [ i ] . name , line + 2 , bang [ i ] . len ) == 0"		411324	0		&&			
ANR	411531	RelationalExpression	( size_t ) ( len - 2 ) > bang [ i ] . len		411324	0		>			
ANR	411532	CastExpression	( size_t ) ( len - 2 )		411324	0					
ANR	411533	CastTarget	size_t		411324	0					
ANR	411534	AdditiveExpression	len - 2		411324	1		-			
ANR	411535	Identifier	len		411324	0					
ANR	411536	PrimaryExpression	2		411324	1					
ANR	411537	MemberAccess	bang [ i ] . len		411324	1					
ANR	411538	ArrayIndexing	bang [ i ]		411324	0					
ANR	411539	Identifier	bang		411324	0					
ANR	411540	Identifier	i		411324	1					
ANR	411541	Identifier	len		411324	1					
ANR	411542	EqualityExpression	"memcmp ( bang [ i ] . name , line + 2 , bang [ i ] . len ) == 0"		411324	1		==			
ANR	411543	CallExpression	"memcmp ( bang [ i ] . name , line + 2 , bang [ i ] . len )"		411324	0					
ANR	411544	Callee	memcmp		411324	0					
ANR	411545	Identifier	memcmp		411324	0					
ANR	411546	ArgumentList	bang [ i ] . name		411324	1					
ANR	411547	Argument	bang [ i ] . name		411324	0					
ANR	411548	MemberAccess	bang [ i ] . name		411324	0					
ANR	411549	ArrayIndexing	bang [ i ]		411324	0					
ANR	411550	Identifier	bang		411324	0					
ANR	411551	Identifier	i		411324	1					
ANR	411552	Identifier	name		411324	1					
ANR	411553	Argument	line + 2		411324	1					
ANR	411554	AdditiveExpression	line + 2		411324	0		+			
ANR	411555	Identifier	line		411324	0					
ANR	411556	PrimaryExpression	2		411324	1					
ANR	411557	Argument	bang [ i ] . len		411324	2					
ANR	411558	MemberAccess	bang [ i ] . len		411324	0					
ANR	411559	ArrayIndexing	bang [ i ]		411324	0					
ANR	411560	Identifier	bang		411324	0					
ANR	411561	Identifier	i		411324	1					
ANR	411562	Identifier	len		411324	1					
ANR	411563	PrimaryExpression	0		411324	1					
ANR	411564	BreakStatement	break ;	1065:6:25238:25243	411324	1	True				
ANR	411565	IfStatement	if ( bang [ i ] . name == NULL )		411324	2					
ANR	411566	Condition	bang [ i ] . name == NULL	1067:8:25259:25278	411324	0	True				
ANR	411567	EqualityExpression	bang [ i ] . name == NULL		411324	0		==			
ANR	411568	MemberAccess	bang [ i ] . name		411324	0					
ANR	411569	ArrayIndexing	bang [ i ]		411324	0					
ANR	411570	Identifier	bang		411324	0					
ANR	411571	Identifier	i		411324	1					
ANR	411572	Identifier	name		411324	1					
ANR	411573	Identifier	NULL		411324	1					
ANR	411574	CompoundStatement		45:30:1048:1048	411324	1					
ANR	411575	ExpressionStatement	"file_error ( ms , 0 , ""Unknown !: entry `%s'"" , line )"	1068:5:25288:25345	411324	0	True				
ANR	411576	CallExpression	"file_error ( ms , 0 , ""Unknown !: entry `%s'"" , line )"		411324	0					
ANR	411577	Callee	file_error		411324	0					
ANR	411578	Identifier	file_error		411324	0					
ANR	411579	ArgumentList	ms		411324	1					
ANR	411580	Argument	ms		411324	0					
ANR	411581	Identifier	ms		411324	0					
ANR	411582	Argument	0		411324	1					
ANR	411583	PrimaryExpression	0		411324	0					
ANR	411584	Argument	"""Unknown !: entry `%s'"""		411324	2					
ANR	411585	PrimaryExpression	"""Unknown !: entry `%s'"""		411324	0					
ANR	411586	Argument	line		411324	3					
ANR	411587	Identifier	line		411324	0					
ANR	411588	ExpressionStatement	( * errs ) ++	1070:5:25352:25361	411324	1	True				
ANR	411589	PostIncDecOperationExpression	( * errs ) ++		411324	0					
ANR	411590	UnaryOperationExpression	* errs		411324	0					
ANR	411591	UnaryOperator	*		411324	0					
ANR	411592	Identifier	errs		411324	1					
ANR	411593	IncDec	++		411324	1					
ANR	411594	ContinueStatement	continue ;	1071:5:25368:25376	411324	2	True				
ANR	411595	IfStatement	if ( me . mp == NULL )		411324	3					
ANR	411596	Condition	me . mp == NULL	1073:8:25392:25404	411324	0	True				
ANR	411597	EqualityExpression	me . mp == NULL		411324	0		==			
ANR	411598	MemberAccess	me . mp		411324	0					
ANR	411599	Identifier	me		411324	0					
ANR	411600	Identifier	mp		411324	1					
ANR	411601	Identifier	NULL		411324	1					
ANR	411602	CompoundStatement		51:23:1174:1174	411324	1					
ANR	411603	ExpressionStatement	"file_error ( ms , 0 , ""No current entry for :!%s type"" , bang [ i ] . name )"	1074:5:25414:25494	411324	0	True				
ANR	411604	CallExpression	"file_error ( ms , 0 , ""No current entry for :!%s type"" , bang [ i ] . name )"		411324	0					
ANR	411605	Callee	file_error		411324	0					
ANR	411606	Identifier	file_error		411324	0					
ANR	411607	ArgumentList	ms		411324	1					
ANR	411608	Argument	ms		411324	0					
ANR	411609	Identifier	ms		411324	0					
ANR	411610	Argument	0		411324	1					
ANR	411611	PrimaryExpression	0		411324	0					
ANR	411612	Argument	"""No current entry for :!%s type"""		411324	2					
ANR	411613	PrimaryExpression	"""No current entry for :!%s type"""		411324	0					
ANR	411614	Argument	bang [ i ] . name		411324	3					
ANR	411615	MemberAccess	bang [ i ] . name		411324	0					
ANR	411616	ArrayIndexing	bang [ i ]		411324	0					
ANR	411617	Identifier	bang		411324	0					
ANR	411618	Identifier	i		411324	1					
ANR	411619	Identifier	name		411324	1					
ANR	411620	ExpressionStatement	( * errs ) ++	1077:5:25501:25510	411324	1	True				
ANR	411621	PostIncDecOperationExpression	( * errs ) ++		411324	0					
ANR	411622	UnaryOperationExpression	* errs		411324	0					
ANR	411623	UnaryOperator	*		411324	0					
ANR	411624	Identifier	errs		411324	1					
ANR	411625	IncDec	++		411324	1					
ANR	411626	ContinueStatement	continue ;	1078:5:25517:25525	411324	2	True				
ANR	411627	IfStatement	"if ( ( * bang [ i ] . fun ) ( ms , & me , line + bang [ i ] . len + 2 ) != 0 )"		411324	4					
ANR	411628	Condition	"( * bang [ i ] . fun ) ( ms , & me , line + bang [ i ] . len + 2 ) != 0"	1080:8:25541:25600	411324	0	True				
ANR	411629	EqualityExpression	"( * bang [ i ] . fun ) ( ms , & me , line + bang [ i ] . len + 2 ) != 0"		411324	0		!=			
ANR	411630	CallExpression	"( * bang [ i ] . fun ) ( ms , & me , line + bang [ i ] . len + 2 )"		411324	0					
ANR	411631	Callee	* bang [ i ] . fun		411324	0					
ANR	411632	UnaryOperationExpression	* bang [ i ] . fun		411324	0					
ANR	411633	UnaryOperator	*		411324	0					
ANR	411634	MemberAccess	bang [ i ] . fun		411324	1					
ANR	411635	ArrayIndexing	bang [ i ]		411324	0					
ANR	411636	Identifier	bang		411324	0					
ANR	411637	Identifier	i		411324	1					
ANR	411638	Identifier	fun		411324	1					
ANR	411639	ArgumentList	ms		411324	1					
ANR	411640	Argument	ms		411324	0					
ANR	411641	Identifier	ms		411324	0					
ANR	411642	Argument	& me		411324	1					
ANR	411643	UnaryOperationExpression	& me		411324	0					
ANR	411644	UnaryOperator	&		411324	0					
ANR	411645	Identifier	me		411324	1					
ANR	411646	Argument	line + bang [ i ] . len + 2		411324	2					
ANR	411647	AdditiveExpression	line + bang [ i ] . len + 2		411324	0		+			
ANR	411648	Identifier	line		411324	0					
ANR	411649	AdditiveExpression	bang [ i ] . len + 2		411324	1		+			
ANR	411650	MemberAccess	bang [ i ] . len		411324	0					
ANR	411651	ArrayIndexing	bang [ i ]		411324	0					
ANR	411652	Identifier	bang		411324	0					
ANR	411653	Identifier	i		411324	1					
ANR	411654	Identifier	len		411324	1					
ANR	411655	PrimaryExpression	2		411324	1					
ANR	411656	PrimaryExpression	0		411324	1					
ANR	411657	CompoundStatement		59:38:1370:1370	411324	1					
ANR	411658	ExpressionStatement	( * errs ) ++	1082:5:25610:25619	411324	0	True				
ANR	411659	PostIncDecOperationExpression	( * errs ) ++		411324	0					
ANR	411660	UnaryOperationExpression	* errs		411324	0					
ANR	411661	UnaryOperator	*		411324	0					
ANR	411662	Identifier	errs		411324	1					
ANR	411663	IncDec	++		411324	1					
ANR	411664	ContinueStatement	continue ;	1083:5:25626:25634	411324	1	True				
ANR	411665	ContinueStatement	continue ;	1085:4:25646:25654	411324	5	True				
ANR	411666	Label	default :	1088:2:25682:25689	411324	5	True				
ANR	411667	Identifier	default		411324	0					
ANR	411668	Label	again :	1089:2:25693:25698	411324	6	True				
ANR	411669	Identifier	again		411324	0					
ANR	411670	SwitchStatement	"switch ( parse ( ms , & me , line , lineno , action ) )"		411324	7					
ANR	411671	Condition	"parse ( ms , & me , line , lineno , action )"	1090:11:25711:25746	411324	0	True				
ANR	411672	CallExpression	"parse ( ms , & me , line , lineno , action )"		411324	0					
ANR	411673	Callee	parse		411324	0					
ANR	411674	Identifier	parse		411324	0					
ANR	411675	ArgumentList	ms		411324	1					
ANR	411676	Argument	ms		411324	0					
ANR	411677	Identifier	ms		411324	0					
ANR	411678	Argument	& me		411324	1					
ANR	411679	UnaryOperationExpression	& me		411324	0					
ANR	411680	UnaryOperator	&		411324	0					
ANR	411681	Identifier	me		411324	1					
ANR	411682	Argument	line		411324	2					
ANR	411683	Identifier	line		411324	0					
ANR	411684	Argument	lineno		411324	3					
ANR	411685	Identifier	lineno		411324	0					
ANR	411686	Argument	action		411324	4					
ANR	411687	Identifier	action		411324	0					
ANR	411688	CompoundStatement		68:49:1516:1516	411324	1					
ANR	411689	Label	case 0 :	1091:3:25754:25760	411324	0	True				
ANR	411690	ContinueStatement	continue ;	1092:4:25766:25774	411324	1	True				
ANR	411691	Label	case 1 :	1093:3:25779:25785	411324	2	True				
ANR	411692	ExpressionStatement	"( void ) addentry ( ms , & me , mset )"	1094:4:25791:25820	411324	3	True				
ANR	411693	CastExpression	"( void ) addentry ( ms , & me , mset )"		411324	0					
ANR	411694	CastTarget	void		411324	0					
ANR	411695	CallExpression	"addentry ( ms , & me , mset )"		411324	1					
ANR	411696	Callee	addentry		411324	0					
ANR	411697	Identifier	addentry		411324	0					
ANR	411698	ArgumentList	ms		411324	1					
ANR	411699	Argument	ms		411324	0					
ANR	411700	Identifier	ms		411324	0					
ANR	411701	Argument	& me		411324	1					
ANR	411702	UnaryOperationExpression	& me		411324	0					
ANR	411703	UnaryOperator	&		411324	0					
ANR	411704	Identifier	me		411324	1					
ANR	411705	Argument	mset		411324	2					
ANR	411706	Identifier	mset		411324	0					
ANR	411707	GotoStatement	goto again ;	1095:4:25826:25836	411324	4	True				
ANR	411708	Identifier	again		411324	0					
ANR	411709	Label	default :	1096:3:25841:25848	411324	5	True				
ANR	411710	Identifier	default		411324	0					
ANR	411711	ExpressionStatement	( * errs ) ++	1097:4:25854:25863	411324	6	True				
ANR	411712	PostIncDecOperationExpression	( * errs ) ++		411324	0					
ANR	411713	UnaryOperationExpression	* errs		411324	0					
ANR	411714	UnaryOperator	*		411324	0					
ANR	411715	Identifier	errs		411324	1					
ANR	411716	IncDec	++		411324	1					
ANR	411717	BreakStatement	break ;	1098:4:25869:25874	411324	7	True				
ANR	411718	IfStatement	if ( me . mp )		411324	11					
ANR	411719	Condition	me . mp	1102:5:25893:25897	411324	0	True				
ANR	411720	MemberAccess	me . mp		411324	0					
ANR	411721	Identifier	me		411324	0					
ANR	411722	Identifier	mp		411324	1					
ANR	411723	ExpressionStatement	"( void ) addentry ( ms , & me , mset )"	1103:2:25902:25931	411324	1	True				
ANR	411724	CastExpression	"( void ) addentry ( ms , & me , mset )"		411324	0					
ANR	411725	CastTarget	void		411324	0					
ANR	411726	CallExpression	"addentry ( ms , & me , mset )"		411324	1					
ANR	411727	Callee	addentry		411324	0					
ANR	411728	Identifier	addentry		411324	0					
ANR	411729	ArgumentList	ms		411324	1					
ANR	411730	Argument	ms		411324	0					
ANR	411731	Identifier	ms		411324	0					
ANR	411732	Argument	& me		411324	1					
ANR	411733	UnaryOperationExpression	& me		411324	0					
ANR	411734	UnaryOperator	&		411324	0					
ANR	411735	Identifier	me		411324	1					
ANR	411736	Argument	mset		411324	2					
ANR	411737	Identifier	mset		411324	0					
ANR	411738	ExpressionStatement	efree ( line )	1104:4:25937:25948	411324	12	True				
ANR	411739	CallExpression	efree ( line )		411324	0					
ANR	411740	Callee	efree		411324	0					
ANR	411741	Identifier	efree		411324	0					
ANR	411742	ArgumentList	line		411324	1					
ANR	411743	Argument	line		411324	0					
ANR	411744	Identifier	line		411324	0					
ANR	411745	ExpressionStatement	php_stream_close ( stream )	1105:1:25951:25975	411324	13	True				
ANR	411746	CallExpression	php_stream_close ( stream )		411324	0					
ANR	411747	Callee	php_stream_close		411324	0					
ANR	411748	Identifier	php_stream_close		411324	0					
ANR	411749	ArgumentList	stream		411324	1					
ANR	411750	Argument	stream		411324	0					
ANR	411751	Identifier	stream		411324	0					
ANR	411752	ReturnType	void		411324	1					
ANR	411753	Identifier	load_1		411324	2					
ANR	411754	ParameterList	"struct magic_set * ms , int action , const char * fn , int * errs , struct magic_entry_set * mset"		411324	3					
ANR	411755	Parameter	struct magic_set * ms	1021:7:24138:24157	411324	0	True				
ANR	411756	ParameterType	struct magic_set *		411324	0					
ANR	411757	Identifier	ms		411324	1					
ANR	411758	Parameter	int action	1021:29:24160:24169	411324	1	True				
ANR	411759	ParameterType	int		411324	0					
ANR	411760	Identifier	action		411324	1					
ANR	411761	Parameter	const char * fn	1021:41:24172:24185	411324	2	True				
ANR	411762	ParameterType	const char *		411324	0					
ANR	411763	Identifier	fn		411324	1					
ANR	411764	Parameter	int * errs	1021:57:24188:24196	411324	3	True				
ANR	411765	ParameterType	int *		411324	0					
ANR	411766	Identifier	errs		411324	1					
ANR	411767	Parameter	struct magic_entry_set * mset	1022:3:24202:24229	411324	4	True				
ANR	411768	ParameterType	struct magic_entry_set *		411324	0					
ANR	411769	Identifier	mset		411324	1					
ANR	411770	CFGEntryNode	ENTRY		411324		True				
ANR	411771	CFGExitNode	EXIT		411324		True				
ANR	411772	Symbol	errs		411324						
ANR	411773	Symbol	& me		411324						
ANR	411774	Symbol	line		411324						
ANR	411775	Symbol	bang [ i ] . len		411324						
ANR	411776	Symbol	fn		411324						
ANR	411777	Symbol	* line		411324						
ANR	411778	Symbol	* ms		411324						
ANR	411779	Symbol	php_stream_open_wrapper		411324						
ANR	411780	Symbol	memcmp		411324						
ANR	411781	Symbol	len		411324						
ANR	411782	Symbol	stream		411324						
ANR	411783	Symbol	bang		411324						
ANR	411784	Symbol	me		411324						
ANR	411785	Symbol	action		411324						
ANR	411786	Symbol	buffer		411324						
ANR	411787	Symbol	bang [ i ] . fun		411324						
ANR	411788	Symbol	bang [ i ] . name		411324						
ANR	411789	Symbol	errno		411324						
ANR	411790	Symbol	* * i		411324						
ANR	411791	Symbol	NULL		411324						
ANR	411792	Symbol	me . mp		411324						
ANR	411793	Symbol	ms		411324						
ANR	411794	Symbol	mset		411324						
ANR	411795	Symbol	i		411324						
ANR	411796	Symbol	ms -> line		411324						
ANR	411797	Symbol	ENOENT		411324						
ANR	411798	Symbol	parse		411324						
ANR	411799	Symbol	ms -> file		411324						
ANR	411800	Symbol	* * bang		411324						
ANR	411801	Symbol	* bang		411324						
ANR	411802	Symbol	lineno		411324						
ANR	411803	Symbol	* i		411324						
ANR	411804	Symbol	REPORT_ERRORS		411324						
ANR	411805	Symbol	php_stream_get_line		411324						
ANR	411806	Symbol	* bang [ i ] . fun		411324						
ANR	411807	Symbol	* errs		411324						
ANR	411808	Symbol	& len		411324						
ANR	411809	Symbol	BUFSIZ		411324						
ANR	411810	Symbol	* len		411324						
ANR	411811	Function	cmpstrp	1112:8:26084:26193							
ANR	411812	FunctionDef	"cmpstrp (const void * p1 , const void * p2)"		411811	0					
ANR	411813	CompoundStatement		1114:0:26128:26193	411811	0					
ANR	411814	Statement	return	1115:8:26138:26143	411811	0	True				
ANR	411815	Statement	strcmp	1115:15:26145:26150	411811	1	True				
ANR	411816	Statement	(	1115:21:26151:26151	411811	2	True				
ANR	411817	Statement	*	1115:22:26152:26152	411811	3	True				
ANR	411818	Statement	(	1115:23:26153:26153	411811	4	True				
ANR	411819	Statement	char	1115:24:26154:26157	411811	5	True				
ANR	411820	Statement	*	1115:29:26159:26159	411811	6	True				
ANR	411821	Statement	const	1115:30:26160:26164	411811	7	True				
ANR	411822	Statement	*	1115:36:26166:26166	411811	8	True				
ANR	411823	Statement	)	1115:37:26167:26167	411811	9	True				
ANR	411824	Statement	p1	1115:38:26168:26169	411811	10	True				
ANR	411825	Statement	","	1115:40:26170:26170	411811	11	True				
ANR	411826	Statement	*	1115:42:26172:26172	411811	12	True				
ANR	411827	Statement	(	1115:43:26173:26173	411811	13	True				
ANR	411828	Statement	char	1115:44:26174:26177	411811	14	True				
ANR	411829	Statement	*	1115:49:26179:26179	411811	15	True				
ANR	411830	Statement	const	1115:50:26180:26184	411811	16	True				
ANR	411831	Statement	*	1115:56:26186:26186	411811	17	True				
ANR	411832	Statement	)	1115:57:26187:26187	411811	18	True				
ANR	411833	Statement	p2	1115:58:26188:26189	411811	19	True				
ANR	411834	Statement	)	1115:60:26190:26190	411811	20	True				
ANR	411835	ExpressionStatement		1115:61:26191:26191	411811	21	True				
ANR	411836	ReturnType	int		411811	1					
ANR	411837	Identifier	cmpstrp		411811	2					
ANR	411838	ParameterList	"const void * p1 , const void * p2"		411811	3					
ANR	411839	Parameter	const void * p1	1113:8:26096:26109	411811	0	True				
ANR	411840	ParameterType	const void *		411811	0					
ANR	411841	Identifier	p1		411811	1					
ANR	411842	Parameter	const void * p2	1113:24:26112:26125	411811	1	True				
ANR	411843	ParameterType	const void *		411811	0					
ANR	411844	Identifier	p2		411811	1					
ANR	411845	CFGEntryNode	ENTRY		411811		True				
ANR	411846	CFGExitNode	EXIT		411811		True				
ANR	411847	Symbol	p1		411811						
ANR	411848	Symbol	p2		411811						
ANR	411849	Function	set_text_binary	1119:8:26205:27207							
ANR	411850	FunctionDef	"set_text_binary (struct magic_set * ms , struct magic_entry * me , uint32_t nme , uint32_t starttest)"		411849	0					
ANR	411851	CompoundStatement		1122:0:26314:27207	411849	0					
ANR	411852	Statement	static	1123:1:26317:26322	411849	0	True				
ANR	411853	IdentifierDeclStatement	"const char text [ ] = ""text"" ;"	1123:8:26324:26350	411849	1	True				
ANR	411854	IdentifierDecl	"text [ ] = ""text"""		411849	0					
ANR	411855	IdentifierDeclType	const char [ ]		411849	0					
ANR	411856	Identifier	text		411849	1					
ANR	411857	AssignmentExpression	"text [ ] = ""text"""		411849	2		=			
ANR	411858	Identifier	text		411849	0					
ANR	411859	PrimaryExpression	"""text"""		411849	1					
ANR	411860	Statement	static	1124:1:26353:26358	411849	2	True				
ANR	411861	IdentifierDeclStatement	"const char binary [ ] = ""binary"" ;"	1124:8:26360:26390	411849	3	True				
ANR	411862	IdentifierDecl	"binary [ ] = ""binary"""		411849	0					
ANR	411863	IdentifierDeclType	const char [ ]		411849	0					
ANR	411864	Identifier	binary		411849	1					
ANR	411865	AssignmentExpression	"binary [ ] = ""binary"""		411849	2		=			
ANR	411866	Identifier	binary		411849	0					
ANR	411867	PrimaryExpression	"""binary"""		411849	1					
ANR	411868	Statement	static	1125:1:26393:26398	411849	4	True				
ANR	411869	IdentifierDeclStatement	const size_t len = sizeof ( text ) ;	1125:8:26400:26431	411849	5	True				
ANR	411870	IdentifierDecl	len = sizeof ( text )		411849	0					
ANR	411871	IdentifierDeclType	const size_t		411849	0					
ANR	411872	Identifier	len		411849	1					
ANR	411873	AssignmentExpression	len = sizeof ( text )		411849	2		=			
ANR	411874	Identifier	len		411849	0					
ANR	411875	SizeofExpression	sizeof ( text )		411849	1					
ANR	411876	Sizeof	sizeof		411849	0					
ANR	411877	SizeofOperand	text		411849	1					
ANR	411878	IdentifierDeclStatement	uint32_t i = starttest ;	1127:1:26435:26457	411849	6	True				
ANR	411879	IdentifierDecl	i = starttest		411849	0					
ANR	411880	IdentifierDeclType	uint32_t		411849	0					
ANR	411881	Identifier	i		411849	1					
ANR	411882	AssignmentExpression	i = starttest		411849	2		=			
ANR	411883	Identifier	starttest		411849	0					
ANR	411884	Identifier	starttest		411849	1					
ANR	411885	DoStatement	do		411849	7					
ANR	411886	CompoundStatement		8:4:149:149	411849	0					
ANR	411887	ExpressionStatement	"set_test_type ( me [ starttest ] . mp , me [ i ] . mp )"	1130:2:26468:26509	411849	0	True				
ANR	411888	CallExpression	"set_test_type ( me [ starttest ] . mp , me [ i ] . mp )"		411849	0					
ANR	411889	Callee	set_test_type		411849	0					
ANR	411890	Identifier	set_test_type		411849	0					
ANR	411891	ArgumentList	me [ starttest ] . mp		411849	1					
ANR	411892	Argument	me [ starttest ] . mp		411849	0					
ANR	411893	MemberAccess	me [ starttest ] . mp		411849	0					
ANR	411894	ArrayIndexing	me [ starttest ]		411849	0					
ANR	411895	Identifier	me		411849	0					
ANR	411896	Identifier	starttest		411849	1					
ANR	411897	Identifier	mp		411849	1					
ANR	411898	Argument	me [ i ] . mp		411849	1					
ANR	411899	MemberAccess	me [ i ] . mp		411849	0					
ANR	411900	ArrayIndexing	me [ i ]		411849	0					
ANR	411901	Identifier	me		411849	0					
ANR	411902	Identifier	i		411849	1					
ANR	411903	Identifier	mp		411849	1					
ANR	411904	IfStatement	if ( ( ms -> flags & MAGIC_DEBUG ) == 0 )		411849	1					
ANR	411905	Condition	( ms -> flags & MAGIC_DEBUG ) == 0	1131:6:26517:26546	411849	0	True				
ANR	411906	EqualityExpression	( ms -> flags & MAGIC_DEBUG ) == 0		411849	0		==			
ANR	411907	BitAndExpression	ms -> flags & MAGIC_DEBUG		411849	0		&			
ANR	411908	PtrMemberAccess	ms -> flags		411849	0					
ANR	411909	Identifier	ms		411849	0					
ANR	411910	Identifier	flags		411849	1					
ANR	411911	Identifier	MAGIC_DEBUG		411849	1					
ANR	411912	PrimaryExpression	0		411849	1					
ANR	411913	ContinueStatement	continue ;	1132:3:26552:26560	411849	1	True				
ANR	411914	ExpressionStatement	"( void ) fprintf ( stderr , ""%s%s%s: %s\\n"" , me [ i ] . mp -> mimetype , me [ i ] . mp -> mimetype [ 0 ] == '\\0' ? """" : ""; "" , me [ i ] . mp -> desc [ 0 ] ? me [ i ] . mp -> desc : ""(no description)"" , me [ i ] . mp -> flag & BINTEST ? binary : text )"	1133:2:26564:26787	411849	2	True				
ANR	411915	CastExpression	"( void ) fprintf ( stderr , ""%s%s%s: %s\\n"" , me [ i ] . mp -> mimetype , me [ i ] . mp -> mimetype [ 0 ] == '\\0' ? """" : ""; "" , me [ i ] . mp -> desc [ 0 ] ? me [ i ] . mp -> desc : ""(no description)"" , me [ i ] . mp -> flag & BINTEST ? binary : text )"		411849	0					
ANR	411916	CastTarget	void		411849	0					
ANR	411917	CallExpression	"fprintf ( stderr , ""%s%s%s: %s\\n"" , me [ i ] . mp -> mimetype , me [ i ] . mp -> mimetype [ 0 ] == '\\0' ? """" : ""; "" , me [ i ] . mp -> desc [ 0 ] ? me [ i ] . mp -> desc : ""(no description)"" , me [ i ] . mp -> flag & BINTEST ? binary : text )"		411849	1					
ANR	411918	Callee	fprintf		411849	0					
ANR	411919	Identifier	fprintf		411849	0					
ANR	411920	ArgumentList	stderr		411849	1					
ANR	411921	Argument	stderr		411849	0					
ANR	411922	Identifier	stderr		411849	0					
ANR	411923	Argument	"""%s%s%s: %s\\n"""		411849	1					
ANR	411924	PrimaryExpression	"""%s%s%s: %s\\n"""		411849	0					
ANR	411925	Argument	me [ i ] . mp -> mimetype		411849	2					
ANR	411926	PtrMemberAccess	me [ i ] . mp -> mimetype		411849	0					
ANR	411927	MemberAccess	me [ i ] . mp		411849	0					
ANR	411928	ArrayIndexing	me [ i ]		411849	0					
ANR	411929	Identifier	me		411849	0					
ANR	411930	Identifier	i		411849	1					
ANR	411931	Identifier	mp		411849	1					
ANR	411932	Identifier	mimetype		411849	1					
ANR	411933	Argument	"me [ i ] . mp -> mimetype [ 0 ] == '\\0' ? """" : ""; """		411849	3					
ANR	411934	ConditionalExpression	"me [ i ] . mp -> mimetype [ 0 ] == '\\0' ? """" : ""; """		411849	0					
ANR	411935	Condition	me [ i ] . mp -> mimetype [ 0 ] == '\\0'		411849	0					
ANR	411936	EqualityExpression	me [ i ] . mp -> mimetype [ 0 ] == '\\0'		411849	0		==			
ANR	411937	ArrayIndexing	me [ i ] . mp -> mimetype [ 0 ]		411849	0					
ANR	411938	PtrMemberAccess	me [ i ] . mp -> mimetype		411849	0					
ANR	411939	MemberAccess	me [ i ] . mp		411849	0					
ANR	411940	ArrayIndexing	me [ i ]		411849	0					
ANR	411941	Identifier	me		411849	0					
ANR	411942	Identifier	i		411849	1					
ANR	411943	Identifier	mp		411849	1					
ANR	411944	Identifier	mimetype		411849	1					
ANR	411945	PrimaryExpression	0		411849	1					
ANR	411946	PrimaryExpression	'\\0'		411849	1					
ANR	411947	PrimaryExpression	""""""		411849	1					
ANR	411948	PrimaryExpression	"""; """		411849	2					
ANR	411949	Argument	"me [ i ] . mp -> desc [ 0 ] ? me [ i ] . mp -> desc : ""(no description)"""		411849	4					
ANR	411950	ConditionalExpression	"me [ i ] . mp -> desc [ 0 ] ? me [ i ] . mp -> desc : ""(no description)"""		411849	0					
ANR	411951	Condition	me [ i ] . mp -> desc [ 0 ]		411849	0					
ANR	411952	ArrayIndexing	me [ i ] . mp -> desc [ 0 ]		411849	0					
ANR	411953	PtrMemberAccess	me [ i ] . mp -> desc		411849	0					
ANR	411954	MemberAccess	me [ i ] . mp		411849	0					
ANR	411955	ArrayIndexing	me [ i ]		411849	0					
ANR	411956	Identifier	me		411849	0					
ANR	411957	Identifier	i		411849	1					
ANR	411958	Identifier	mp		411849	1					
ANR	411959	Identifier	desc		411849	1					
ANR	411960	PrimaryExpression	0		411849	1					
ANR	411961	PtrMemberAccess	me [ i ] . mp -> desc		411849	1					
ANR	411962	MemberAccess	me [ i ] . mp		411849	0					
ANR	411963	ArrayIndexing	me [ i ]		411849	0					
ANR	411964	Identifier	me		411849	0					
ANR	411965	Identifier	i		411849	1					
ANR	411966	Identifier	mp		411849	1					
ANR	411967	Identifier	desc		411849	1					
ANR	411968	PrimaryExpression	"""(no description)"""		411849	2					
ANR	411969	Argument	me [ i ] . mp -> flag & BINTEST ? binary : text		411849	5					
ANR	411970	ConditionalExpression	me [ i ] . mp -> flag & BINTEST ? binary : text		411849	0					
ANR	411971	Condition	me [ i ] . mp -> flag & BINTEST		411849	0					
ANR	411972	BitAndExpression	me [ i ] . mp -> flag & BINTEST		411849	0		&			
ANR	411973	PtrMemberAccess	me [ i ] . mp -> flag		411849	0					
ANR	411974	MemberAccess	me [ i ] . mp		411849	0					
ANR	411975	ArrayIndexing	me [ i ]		411849	0					
ANR	411976	Identifier	me		411849	0					
ANR	411977	Identifier	i		411849	1					
ANR	411978	Identifier	mp		411849	1					
ANR	411979	Identifier	flag		411849	1					
ANR	411980	Identifier	BINTEST		411849	1					
ANR	411981	Identifier	binary		411849	1					
ANR	411982	Identifier	text		411849	2					
ANR	411983	IfStatement	if ( me [ i ] . mp -> flag & BINTEST )		411849	3					
ANR	411984	Condition	me [ i ] . mp -> flag & BINTEST	1138:6:26795:26818	411849	0	True				
ANR	411985	BitAndExpression	me [ i ] . mp -> flag & BINTEST		411849	0		&			
ANR	411986	PtrMemberAccess	me [ i ] . mp -> flag		411849	0					
ANR	411987	MemberAccess	me [ i ] . mp		411849	0					
ANR	411988	ArrayIndexing	me [ i ]		411849	0					
ANR	411989	Identifier	me		411849	0					
ANR	411990	Identifier	i		411849	1					
ANR	411991	Identifier	mp		411849	1					
ANR	411992	Identifier	flag		411849	1					
ANR	411993	Identifier	BINTEST		411849	1					
ANR	411994	CompoundStatement		18:3:511:549	411849	1					
ANR	411995	IdentifierDeclStatement	"char * p = strstr ( me [ i ] . mp -> desc , text ) ;"	1139:3:26826:26864	411849	0	True				
ANR	411996	IdentifierDecl	"* p = strstr ( me [ i ] . mp -> desc , text )"		411849	0					
ANR	411997	IdentifierDeclType	char *		411849	0					
ANR	411998	Identifier	p		411849	1					
ANR	411999	AssignmentExpression	"* p = strstr ( me [ i ] . mp -> desc , text )"		411849	2		=			
ANR	412000	Identifier	p		411849	0					
ANR	412001	CallExpression	"strstr ( me [ i ] . mp -> desc , text )"		411849	1					
ANR	412002	Callee	strstr		411849	0					
ANR	412003	Identifier	strstr		411849	0					
ANR	412004	ArgumentList	me [ i ] . mp -> desc		411849	1					
ANR	412005	Argument	me [ i ] . mp -> desc		411849	0					
ANR	412006	PtrMemberAccess	me [ i ] . mp -> desc		411849	0					
ANR	412007	MemberAccess	me [ i ] . mp		411849	0					
ANR	412008	ArrayIndexing	me [ i ]		411849	0					
ANR	412009	Identifier	me		411849	0					
ANR	412010	Identifier	i		411849	1					
ANR	412011	Identifier	mp		411849	1					
ANR	412012	Identifier	desc		411849	1					
ANR	412013	Argument	text		411849	1					
ANR	412014	Identifier	text		411849	0					
ANR	412015	IfStatement	if ( p && ( p == me [ i ] . mp -> desc || isspace ( ( unsigned char ) p [ - 1 ] ) ) && ( p + len - me [ i ] . mp -> desc == MAXstring || ( p [ len ] == '\\0' || isspace ( ( unsigned char ) p [ len ] ) ) ) )		411849	1					
ANR	412016	Condition	p && ( p == me [ i ] . mp -> desc || isspace ( ( unsigned char ) p [ - 1 ] ) ) && ( p + len - me [ i ] . mp -> desc == MAXstring || ( p [ len ] == '\\0' || isspace ( ( unsigned char ) p [ len ] ) ) )	1140:7:26873:27056	411849	0	True				
ANR	412017	AndExpression	p && ( p == me [ i ] . mp -> desc || isspace ( ( unsigned char ) p [ - 1 ] ) ) && ( p + len - me [ i ] . mp -> desc == MAXstring || ( p [ len ] == '\\0' || isspace ( ( unsigned char ) p [ len ] ) ) )		411849	0		&&			
ANR	412018	Identifier	p		411849	0					
ANR	412019	AndExpression	( p == me [ i ] . mp -> desc || isspace ( ( unsigned char ) p [ - 1 ] ) ) && ( p + len - me [ i ] . mp -> desc == MAXstring || ( p [ len ] == '\\0' || isspace ( ( unsigned char ) p [ len ] ) ) )		411849	1		&&			
ANR	412020	OrExpression	p == me [ i ] . mp -> desc || isspace ( ( unsigned char ) p [ - 1 ] )		411849	0		||			
ANR	412021	EqualityExpression	p == me [ i ] . mp -> desc		411849	0		==			
ANR	412022	Identifier	p		411849	0					
ANR	412023	PtrMemberAccess	me [ i ] . mp -> desc		411849	1					
ANR	412024	MemberAccess	me [ i ] . mp		411849	0					
ANR	412025	ArrayIndexing	me [ i ]		411849	0					
ANR	412026	Identifier	me		411849	0					
ANR	412027	Identifier	i		411849	1					
ANR	412028	Identifier	mp		411849	1					
ANR	412029	Identifier	desc		411849	1					
ANR	412030	CallExpression	isspace ( ( unsigned char ) p [ - 1 ] )		411849	1					
ANR	412031	Callee	isspace		411849	0					
ANR	412032	Identifier	isspace		411849	0					
ANR	412033	ArgumentList	( unsigned char ) p [ - 1 ]		411849	1					
ANR	412034	Argument	( unsigned char ) p [ - 1 ]		411849	0					
ANR	412035	CastExpression	( unsigned char ) p [ - 1 ]		411849	0					
ANR	412036	CastTarget	unsigned char		411849	0					
ANR	412037	ArrayIndexing	p [ - 1 ]		411849	1					
ANR	412038	Identifier	p		411849	0					
ANR	412039	UnaryOperationExpression	- 1		411849	1					
ANR	412040	UnaryOperator	-		411849	0					
ANR	412041	PrimaryExpression	1		411849	1					
ANR	412042	OrExpression	p + len - me [ i ] . mp -> desc == MAXstring || ( p [ len ] == '\\0' || isspace ( ( unsigned char ) p [ len ] ) )		411849	1		||			
ANR	412043	EqualityExpression	p + len - me [ i ] . mp -> desc == MAXstring		411849	0		==			
ANR	412044	AdditiveExpression	p + len - me [ i ] . mp -> desc		411849	0		+			
ANR	412045	Identifier	p		411849	0					
ANR	412046	AdditiveExpression	len - me [ i ] . mp -> desc		411849	1		-			
ANR	412047	Identifier	len		411849	0					
ANR	412048	PtrMemberAccess	me [ i ] . mp -> desc		411849	1					
ANR	412049	MemberAccess	me [ i ] . mp		411849	0					
ANR	412050	ArrayIndexing	me [ i ]		411849	0					
ANR	412051	Identifier	me		411849	0					
ANR	412052	Identifier	i		411849	1					
ANR	412053	Identifier	mp		411849	1					
ANR	412054	Identifier	desc		411849	1					
ANR	412055	Identifier	MAXstring		411849	1					
ANR	412056	OrExpression	p [ len ] == '\\0' || isspace ( ( unsigned char ) p [ len ] )		411849	1		||			
ANR	412057	EqualityExpression	p [ len ] == '\\0'		411849	0		==			
ANR	412058	ArrayIndexing	p [ len ]		411849	0					
ANR	412059	Identifier	p		411849	0					
ANR	412060	Identifier	len		411849	1					
ANR	412061	PrimaryExpression	'\\0'		411849	1					
ANR	412062	CallExpression	isspace ( ( unsigned char ) p [ len ] )		411849	1					
ANR	412063	Callee	isspace		411849	0					
ANR	412064	Identifier	isspace		411849	0					
ANR	412065	ArgumentList	( unsigned char ) p [ len ]		411849	1					
ANR	412066	Argument	( unsigned char ) p [ len ]		411849	0					
ANR	412067	CastExpression	( unsigned char ) p [ len ]		411849	0					
ANR	412068	CastTarget	unsigned char		411849	0					
ANR	412069	ArrayIndexing	p [ len ]		411849	1					
ANR	412070	Identifier	p		411849	0					
ANR	412071	Identifier	len		411849	1					
ANR	412072	Statement	(	1145:4:27063:27063	411849	1	True				
ANR	412073	Statement	void	1145:5:27064:27067	411849	2	True				
ANR	412074	Statement	)	1145:9:27068:27068	411849	3	True				
ANR	412075	Statement	fprintf	1145:10:27069:27075	411849	4	True				
ANR	412076	Statement	(	1145:17:27076:27076	411849	5	True				
ANR	412077	Statement	stderr	1145:18:27077:27082	411849	6	True				
ANR	412078	Statement	","	1145:24:27083:27083	411849	7	True				
ANR	412079	Statement	"""*** Possible """	1145:26:27085:27099	411849	8	True				
ANR	412080	Statement	"""binary test for text type\\n"""	1146:8:27109:27137	411849	9	True				
ANR	412081	Statement	)	1146:37:27138:27138	411849	10	True				
ANR	412082	ExpressionStatement		1146:38:27139:27139	411849	11	True				
ANR	412083	Condition	++ i < nme && me [ i ] . mp -> cont_level != 0	1148:10:27155:27192	411849	1	True				
ANR	412084	AndExpression	++ i < nme && me [ i ] . mp -> cont_level != 0		411849	0		&&			
ANR	412085	RelationalExpression	++ i < nme		411849	0		<			
ANR	412086	UnaryExpression	++ i		411849	0					
ANR	412087	IncDec	++		411849	0					
ANR	412088	Identifier	i		411849	1					
ANR	412089	Identifier	nme		411849	1					
ANR	412090	EqualityExpression	me [ i ] . mp -> cont_level != 0		411849	1		!=			
ANR	412091	PtrMemberAccess	me [ i ] . mp -> cont_level		411849	0					
ANR	412092	MemberAccess	me [ i ] . mp		411849	0					
ANR	412093	ArrayIndexing	me [ i ]		411849	0					
ANR	412094	Identifier	me		411849	0					
ANR	412095	Identifier	i		411849	1					
ANR	412096	Identifier	mp		411849	1					
ANR	412097	Identifier	cont_level		411849	1					
ANR	412098	PrimaryExpression	0		411849	1					
ANR	412099	ReturnStatement	return i ;	1149:1:27197:27205	411849	8	True				
ANR	412100	Identifier	i		411849	0					
ANR	412101	ReturnType	uint32_t		411849	1					
ANR	412102	Identifier	set_text_binary		411849	2					
ANR	412103	ParameterList	"struct magic_set * ms , struct magic_entry * me , uint32_t nme , uint32_t starttest"		411849	3					
ANR	412104	Parameter	struct magic_set * ms	1120:16:26230:26249	411849	0	True				
ANR	412105	ParameterType	struct magic_set *		411849	0					
ANR	412106	Identifier	ms		411849	1					
ANR	412107	Parameter	struct magic_entry * me	1120:38:26252:26273	411849	1	True				
ANR	412108	ParameterType	struct magic_entry *		411849	0					
ANR	412109	Identifier	me		411849	1					
ANR	412110	Parameter	uint32_t nme	1120:62:26276:26287	411849	2	True				
ANR	412111	ParameterType	uint32_t		411849	0					
ANR	412112	Identifier	nme		411849	1					
ANR	412113	Parameter	uint32_t starttest	1121:4:26294:26311	411849	3	True				
ANR	412114	ParameterType	uint32_t		411849	0					
ANR	412115	Identifier	starttest		411849	1					
ANR	412116	CFGEntryNode	ENTRY		411849		True				
ANR	412117	CFGExitNode	EXIT		411849		True				
ANR	412118	Symbol	* * * me		411849						
ANR	412119	Symbol	* me [ i ] . mp -> mimetype		411849						
ANR	412120	Symbol	* me [ i ] . mp		411849						
ANR	412121	Symbol	* * me		411849						
ANR	412122	Symbol	* me [ i ] . mp -> desc		411849						
ANR	412123	Symbol	nme		411849						
ANR	412124	Symbol	me [ i ] . mp -> cont_level		411849						
ANR	412125	Symbol	* ms		411849						
ANR	412126	Symbol	starttest		411849						
ANR	412127	Symbol	len		411849						
ANR	412128	Symbol	me		411849						
ANR	412129	Symbol	me [ i ] . mp -> desc		411849						
ANR	412130	Symbol	text		411849						
ANR	412131	Symbol	* me		411849						
ANR	412132	Symbol	MAGIC_DEBUG		411849						
ANR	412133	Symbol	* * i		411849						
ANR	412134	Symbol	ms		411849						
ANR	412135	Symbol	BINTEST		411849						
ANR	412136	Symbol	isspace		411849						
ANR	412137	Symbol	i		411849						
ANR	412138	Symbol	* starttest		411849						
ANR	412139	Symbol	stderr		411849						
ANR	412140	Symbol	MAXstring		411849						
ANR	412141	Symbol	* * me [ i ] . mp		411849						
ANR	412142	Symbol	me [ i ] . mp -> flag		411849						
ANR	412143	Symbol	p		411849						
ANR	412144	Symbol	me [ i ] . mp		411849						
ANR	412145	Symbol	* i		411849						
ANR	412146	Symbol	me [ i ] . mp -> mimetype		411849						
ANR	412147	Symbol	me [ starttest ] . mp		411849						
ANR	412148	Symbol	strstr		411849						
ANR	412149	Symbol	binary		411849						
ANR	412150	Symbol	* * * i		411849						
ANR	412151	Symbol	* p		411849						
ANR	412152	Symbol	ms -> flags		411849						
ANR	412153	Symbol	* len		411849						
ANR	412154	Function	set_last_default	1152:8:27218:27663							
ANR	412155	FunctionDef	"set_last_default (struct magic_set * ms , struct magic_entry * me , uint32_t nme)"		412154	0					
ANR	412156	CompoundStatement		1154:0:27300:27663	412154	0					
ANR	412157	IdentifierDeclStatement	uint32_t i ;	1155:1:27303:27313	412154	0	True				
ANR	412158	IdentifierDecl	i		412154	0					
ANR	412159	IdentifierDeclType	uint32_t		412154	0					
ANR	412160	Identifier	i		412154	1					
ANR	412161	ForStatement	for ( i = 0 ; i < nme ; i ++ )		412154	1					
ANR	412162	ForInit	i = 0 ;	1156:6:27321:27326	412154	0	True				
ANR	412163	AssignmentExpression	i = 0		412154	0		=			
ANR	412164	Identifier	i		412154	0					
ANR	412165	PrimaryExpression	0		412154	1					
ANR	412166	Condition	i < nme	1156:13:27328:27334	412154	1	True				
ANR	412167	RelationalExpression	i < nme		412154	0		<			
ANR	412168	Identifier	i		412154	0					
ANR	412169	Identifier	nme		412154	1					
ANR	412170	PostIncDecOperationExpression	i ++	1156:22:27337:27339	412154	2	True				
ANR	412171	Identifier	i		412154	0					
ANR	412172	IncDec	++		412154	1					
ANR	412173	CompoundStatement		3:27:41:41	412154	3					
ANR	412174	IfStatement	if ( me [ i ] . mp -> cont_level == 0 && me [ i ] . mp -> type == FILE_DEFAULT )		412154	0					
ANR	412175	Condition	me [ i ] . mp -> cont_level == 0 && me [ i ] . mp -> type == FILE_DEFAULT	1157:6:27350:27414	412154	0	True				
ANR	412176	AndExpression	me [ i ] . mp -> cont_level == 0 && me [ i ] . mp -> type == FILE_DEFAULT		412154	0		&&			
ANR	412177	EqualityExpression	me [ i ] . mp -> cont_level == 0		412154	0		==			
ANR	412178	PtrMemberAccess	me [ i ] . mp -> cont_level		412154	0					
ANR	412179	MemberAccess	me [ i ] . mp		412154	0					
ANR	412180	ArrayIndexing	me [ i ]		412154	0					
ANR	412181	Identifier	me		412154	0					
ANR	412182	Identifier	i		412154	1					
ANR	412183	Identifier	mp		412154	1					
ANR	412184	Identifier	cont_level		412154	1					
ANR	412185	PrimaryExpression	0		412154	1					
ANR	412186	EqualityExpression	me [ i ] . mp -> type == FILE_DEFAULT		412154	1		==			
ANR	412187	PtrMemberAccess	me [ i ] . mp -> type		412154	0					
ANR	412188	MemberAccess	me [ i ] . mp		412154	0					
ANR	412189	ArrayIndexing	me [ i ]		412154	0					
ANR	412190	Identifier	me		412154	0					
ANR	412191	Identifier	i		412154	1					
ANR	412192	Identifier	mp		412154	1					
ANR	412193	Identifier	type		412154	1					
ANR	412194	Identifier	FILE_DEFAULT		412154	1					
ANR	412195	CompoundStatement		5:38:116:116	412154	1					
ANR	412196	WhileStatement	while ( ++ i < nme )		412154	0					
ANR	412197	Condition	++ i < nme	1159:10:27429:27437	412154	0	True				
ANR	412198	RelationalExpression	++ i < nme		412154	0		<			
ANR	412199	UnaryExpression	++ i		412154	0					
ANR	412200	IncDec	++		412154	0					
ANR	412201	Identifier	i		412154	1					
ANR	412202	Identifier	nme		412154	1					
ANR	412203	IfStatement	if ( me [ i ] . mp -> cont_level == 0 )		412154	1					
ANR	412204	Condition	me [ i ] . mp -> cont_level == 0	1160:8:27448:27472	412154	0	True				
ANR	412205	EqualityExpression	me [ i ] . mp -> cont_level == 0		412154	0		==			
ANR	412206	PtrMemberAccess	me [ i ] . mp -> cont_level		412154	0					
ANR	412207	MemberAccess	me [ i ] . mp		412154	0					
ANR	412208	ArrayIndexing	me [ i ]		412154	0					
ANR	412209	Identifier	me		412154	0					
ANR	412210	Identifier	i		412154	1					
ANR	412211	Identifier	mp		412154	1					
ANR	412212	Identifier	cont_level		412154	1					
ANR	412213	PrimaryExpression	0		412154	1					
ANR	412214	BreakStatement	break ;	1161:5:27480:27485	412154	1	True				
ANR	412215	IfStatement	if ( i != nme )		412154	1					
ANR	412216	Condition	i != nme	1162:7:27494:27501	412154	0	True				
ANR	412217	EqualityExpression	i != nme		412154	0		!=			
ANR	412218	Identifier	i		412154	0					
ANR	412219	Identifier	nme		412154	1					
ANR	412220	CompoundStatement		9:17:203:203	412154	1					
ANR	412221	ExpressionStatement	ms -> line = me [ i ] . mp -> lineno	1164:4:27531:27558	412154	0	True				
ANR	412222	AssignmentExpression	ms -> line = me [ i ] . mp -> lineno		412154	0		=			
ANR	412223	PtrMemberAccess	ms -> line		412154	0					
ANR	412224	Identifier	ms		412154	0					
ANR	412225	Identifier	line		412154	1					
ANR	412226	PtrMemberAccess	me [ i ] . mp -> lineno		412154	1					
ANR	412227	MemberAccess	me [ i ] . mp		412154	0					
ANR	412228	ArrayIndexing	me [ i ]		412154	0					
ANR	412229	Identifier	me		412154	0					
ANR	412230	Identifier	i		412154	1					
ANR	412231	Identifier	mp		412154	1					
ANR	412232	Identifier	lineno		412154	1					
ANR	412233	ExpressionStatement	"file_magwarn ( ms , ""level 0 \\""default\\"" did not sort last"" )"	1165:4:27564:27629	412154	1	True				
ANR	412234	CallExpression	"file_magwarn ( ms , ""level 0 \\""default\\"" did not sort last"" )"		412154	0					
ANR	412235	Callee	file_magwarn		412154	0					
ANR	412236	Identifier	file_magwarn		412154	0					
ANR	412237	ArgumentList	ms		412154	1					
ANR	412238	Argument	ms		412154	0					
ANR	412239	Identifier	ms		412154	0					
ANR	412240	Argument	"""level 0 \\""default\\"" did not sort last"""		412154	1					
ANR	412241	PrimaryExpression	"""level 0 \\""default\\"" did not sort last"""		412154	0					
ANR	412242	ReturnStatement	return ;	1168:3:27639:27645	412154	2	True				
ANR	412243	ReturnType	void		412154	1					
ANR	412244	Identifier	set_last_default		412154	2					
ANR	412245	ParameterList	"struct magic_set * ms , struct magic_entry * me , uint32_t nme"		412154	3					
ANR	412246	Parameter	struct magic_set * ms	1153:17:27240:27259	412154	0	True				
ANR	412247	ParameterType	struct magic_set *		412154	0					
ANR	412248	Identifier	ms		412154	1					
ANR	412249	Parameter	struct magic_entry * me	1153:39:27262:27283	412154	1	True				
ANR	412250	ParameterType	struct magic_entry *		412154	0					
ANR	412251	Identifier	me		412154	1					
ANR	412252	Parameter	uint32_t nme	1153:63:27286:27297	412154	2	True				
ANR	412253	ParameterType	uint32_t		412154	0					
ANR	412254	Identifier	nme		412154	1					
ANR	412255	CFGEntryNode	ENTRY		412154		True				
ANR	412256	CFGExitNode	EXIT		412154		True				
ANR	412257	Symbol	* * i		412154						
ANR	412258	Symbol	* me [ i ] . mp		412154						
ANR	412259	Symbol	ms		412154						
ANR	412260	Symbol	FILE_DEFAULT		412154						
ANR	412261	Symbol	* * me		412154						
ANR	412262	Symbol	nme		412154						
ANR	412263	Symbol	me [ i ] . mp -> cont_level		412154						
ANR	412264	Symbol	me [ i ] . mp -> type		412154						
ANR	412265	Symbol	me [ i ] . mp -> lineno		412154						
ANR	412266	Symbol	i		412154						
ANR	412267	Symbol	ms -> line		412154						
ANR	412268	Symbol	* ms		412154						
ANR	412269	Symbol	me [ i ] . mp		412154						
ANR	412270	Symbol	* i		412154						
ANR	412271	Symbol	me		412154						
ANR	412272	Symbol	* me		412154						
ANR	412273	Function	coalesce_entries	1173:8:27674:28241							
ANR	412274	FunctionDef	"coalesce_entries (struct magic_set * ms , struct magic_entry * me , uint32_t nme , struct magic * * ma , uint32_t * nma)"		412273	0					
ANR	412275	CompoundStatement		1176:0:27793:28241	412273	0					
ANR	412276	IdentifierDeclStatement	"uint32_t i , mentrycount = 0 ;"	1177:1:27796:27823	412273	0	True				
ANR	412277	IdentifierDecl	i		412273	0					
ANR	412278	IdentifierDeclType	uint32_t		412273	0					
ANR	412279	Identifier	i		412273	1					
ANR	412280	IdentifierDecl	mentrycount = 0		412273	1					
ANR	412281	IdentifierDeclType	uint32_t		412273	0					
ANR	412282	Identifier	mentrycount		412273	1					
ANR	412283	AssignmentExpression	mentrycount = 0		412273	2		=			
ANR	412284	Identifier	mentrycount		412273	0					
ANR	412285	PrimaryExpression	0		412273	1					
ANR	412286	IdentifierDeclStatement	size_t slen ;	1178:1:27826:27837	412273	1	True				
ANR	412287	IdentifierDecl	slen		412273	0					
ANR	412288	IdentifierDeclType	size_t		412273	0					
ANR	412289	Identifier	slen		412273	1					
ANR	412290	ForStatement	for ( i = 0 ; i < nme ; i ++ )		412273	2					
ANR	412291	ForInit	i = 0 ;	1180:6:27846:27851	412273	0	True				
ANR	412292	AssignmentExpression	i = 0		412273	0		=			
ANR	412293	Identifier	i		412273	0					
ANR	412294	PrimaryExpression	0		412273	1					
ANR	412295	Condition	i < nme	1180:13:27853:27859	412273	1	True				
ANR	412296	RelationalExpression	i < nme		412273	0		<			
ANR	412297	Identifier	i		412273	0					
ANR	412298	Identifier	nme		412273	1					
ANR	412299	PostIncDecOperationExpression	i ++	1180:22:27862:27864	412273	2	True				
ANR	412300	Identifier	i		412273	0					
ANR	412301	IncDec	++		412273	1					
ANR	412302	ExpressionStatement	mentrycount += me [ i ] . cont_count	1181:2:27869:27900	412273	3	True				
ANR	412303	AssignmentExpression	mentrycount += me [ i ] . cont_count		412273	0		+=			
ANR	412304	Identifier	mentrycount		412273	0					
ANR	412305	MemberAccess	me [ i ] . cont_count		412273	1					
ANR	412306	ArrayIndexing	me [ i ]		412273	0					
ANR	412307	Identifier	me		412273	0					
ANR	412308	Identifier	i		412273	1					
ANR	412309	Identifier	cont_count		412273	1					
ANR	412310	ExpressionStatement	slen = sizeof ( * * ma ) * mentrycount	1183:1:27904:27937	412273	3	True				
ANR	412311	AssignmentExpression	slen = sizeof ( * * ma ) * mentrycount		412273	0		=			
ANR	412312	Identifier	slen		412273	0					
ANR	412313	MultiplicativeExpression	sizeof ( * * ma ) * mentrycount		412273	1		*			
ANR	412314	SizeofExpression	sizeof ( * * ma )		412273	0					
ANR	412315	Sizeof	sizeof		412273	0					
ANR	412316	UnaryOperationExpression	* * ma		412273	1					
ANR	412317	UnaryOperator	*		412273	0					
ANR	412318	UnaryOperationExpression	* ma		412273	1					
ANR	412319	UnaryOperator	*		412273	0					
ANR	412320	Identifier	ma		412273	1					
ANR	412321	Identifier	mentrycount		412273	1					
ANR	412322	Statement	if	1184:1:27940:27941	412273	4	True				
ANR	412323	Statement	(	1184:4:27943:27943	412273	5	True				
ANR	412324	Statement	(	1184:5:27944:27944	412273	6	True				
ANR	412325	Statement	*	1184:6:27945:27945	412273	7	True				
ANR	412326	Statement	ma	1184:7:27946:27947	412273	8	True				
ANR	412327	Statement	=	1184:10:27949:27949	412273	9	True				
ANR	412328	Statement	CAST	1184:12:27951:27954	412273	10	True				
ANR	412329	Statement	(	1184:16:27955:27955	412273	11	True				
ANR	412330	Statement	struct	1184:17:27956:27961	412273	12	True				
ANR	412331	Statement	magic	1184:24:27963:27967	412273	13	True				
ANR	412332	Statement	*	1184:30:27969:27969	412273	14	True				
ANR	412333	Statement	","	1184:31:27970:27970	412273	15	True				
ANR	412334	Statement	emalloc	1184:33:27972:27978	412273	16	True				
ANR	412335	Statement	(	1184:40:27979:27979	412273	17	True				
ANR	412336	Statement	slen	1184:41:27980:27983	412273	18	True				
ANR	412337	Statement	)	1184:45:27984:27984	412273	19	True				
ANR	412338	Statement	)	1184:46:27985:27985	412273	20	True				
ANR	412339	Statement	)	1184:47:27986:27986	412273	21	True				
ANR	412340	Statement	==	1184:49:27988:27989	412273	22	True				
ANR	412341	Statement	NULL	1184:52:27991:27994	412273	23	True				
ANR	412342	Statement	)	1184:56:27995:27995	412273	24	True				
ANR	412343	CompoundStatement		9:58:203:203	412273	25					
ANR	412344	ExpressionStatement	"file_oomem ( ms , slen )"	1185:2:28001:28021	412273	0	True				
ANR	412345	CallExpression	"file_oomem ( ms , slen )"		412273	0					
ANR	412346	Callee	file_oomem		412273	0					
ANR	412347	Identifier	file_oomem		412273	0					
ANR	412348	ArgumentList	ms		412273	1					
ANR	412349	Argument	ms		412273	0					
ANR	412350	Identifier	ms		412273	0					
ANR	412351	Argument	slen		412273	1					
ANR	412352	Identifier	slen		412273	0					
ANR	412353	ReturnStatement	return - 1 ;	1186:2:28025:28034	412273	1	True				
ANR	412354	UnaryOperationExpression	- 1		412273	0					
ANR	412355	UnaryOperator	-		412273	0					
ANR	412356	PrimaryExpression	1		412273	1					
ANR	412357	ExpressionStatement	mentrycount = 0	1189:1:28041:28056	412273	26	True				
ANR	412358	AssignmentExpression	mentrycount = 0		412273	0		=			
ANR	412359	Identifier	mentrycount		412273	0					
ANR	412360	PrimaryExpression	0		412273	1					
ANR	412361	ForStatement	for ( i = 0 ; i < nme ; i ++ )		412273	27					
ANR	412362	ForInit	i = 0 ;	1190:6:28064:28069	412273	0	True				
ANR	412363	AssignmentExpression	i = 0		412273	0		=			
ANR	412364	Identifier	i		412273	0					
ANR	412365	PrimaryExpression	0		412273	1					
ANR	412366	Condition	i < nme	1190:13:28071:28077	412273	1	True				
ANR	412367	RelationalExpression	i < nme		412273	0		<			
ANR	412368	Identifier	i		412273	0					
ANR	412369	Identifier	nme		412273	1					
ANR	412370	PostIncDecOperationExpression	i ++	1190:22:28080:28082	412273	2	True				
ANR	412371	Identifier	i		412273	0					
ANR	412372	IncDec	++		412273	1					
ANR	412373	CompoundStatement		15:27:291:291	412273	3					
ANR	412374	ExpressionStatement	"( void ) memcpy ( * ma + mentrycount , me [ i ] . mp , me [ i ] . cont_count * sizeof ( * * ma ) )"	1191:2:28089:28169	412273	0	True				
ANR	412375	CastExpression	"( void ) memcpy ( * ma + mentrycount , me [ i ] . mp , me [ i ] . cont_count * sizeof ( * * ma ) )"		412273	0					
ANR	412376	CastTarget	void		412273	0					
ANR	412377	CallExpression	"memcpy ( * ma + mentrycount , me [ i ] . mp , me [ i ] . cont_count * sizeof ( * * ma ) )"		412273	1					
ANR	412378	Callee	memcpy		412273	0					
ANR	412379	Identifier	memcpy		412273	0					
ANR	412380	ArgumentList	* ma + mentrycount		412273	1					
ANR	412381	Argument	* ma + mentrycount		412273	0					
ANR	412382	AdditiveExpression	* ma + mentrycount		412273	0		+			
ANR	412383	UnaryOperationExpression	* ma		412273	0					
ANR	412384	UnaryOperator	*		412273	0					
ANR	412385	Identifier	ma		412273	1					
ANR	412386	Identifier	mentrycount		412273	1					
ANR	412387	Argument	me [ i ] . mp		412273	1					
ANR	412388	MemberAccess	me [ i ] . mp		412273	0					
ANR	412389	ArrayIndexing	me [ i ]		412273	0					
ANR	412390	Identifier	me		412273	0					
ANR	412391	Identifier	i		412273	1					
ANR	412392	Identifier	mp		412273	1					
ANR	412393	Argument	me [ i ] . cont_count * sizeof ( * * ma )		412273	2					
ANR	412394	MultiplicativeExpression	me [ i ] . cont_count * sizeof ( * * ma )		412273	0		*			
ANR	412395	MemberAccess	me [ i ] . cont_count		412273	0					
ANR	412396	ArrayIndexing	me [ i ]		412273	0					
ANR	412397	Identifier	me		412273	0					
ANR	412398	Identifier	i		412273	1					
ANR	412399	Identifier	cont_count		412273	1					
ANR	412400	SizeofExpression	sizeof ( * * ma )		412273	1					
ANR	412401	Sizeof	sizeof		412273	0					
ANR	412402	UnaryOperationExpression	* * ma		412273	1					
ANR	412403	UnaryOperator	*		412273	0					
ANR	412404	UnaryOperationExpression	* ma		412273	1					
ANR	412405	UnaryOperator	*		412273	0					
ANR	412406	Identifier	ma		412273	1					
ANR	412407	ExpressionStatement	mentrycount += me [ i ] . cont_count	1193:2:28173:28204	412273	1	True				
ANR	412408	AssignmentExpression	mentrycount += me [ i ] . cont_count		412273	0		+=			
ANR	412409	Identifier	mentrycount		412273	0					
ANR	412410	MemberAccess	me [ i ] . cont_count		412273	1					
ANR	412411	ArrayIndexing	me [ i ]		412273	0					
ANR	412412	Identifier	me		412273	0					
ANR	412413	Identifier	i		412273	1					
ANR	412414	Identifier	cont_count		412273	1					
ANR	412415	ExpressionStatement	* nma = mentrycount	1195:1:28210:28228	412273	28	True				
ANR	412416	AssignmentExpression	* nma = mentrycount		412273	0		=			
ANR	412417	UnaryOperationExpression	* nma		412273	0					
ANR	412418	UnaryOperator	*		412273	0					
ANR	412419	Identifier	nma		412273	1					
ANR	412420	Identifier	mentrycount		412273	1					
ANR	412421	ReturnStatement	return 0 ;	1196:1:28231:28239	412273	29	True				
ANR	412422	PrimaryExpression	0		412273	0					
ANR	412423	ReturnType	int		412273	1					
ANR	412424	Identifier	coalesce_entries		412273	2					
ANR	412425	ParameterList	"struct magic_set * ms , struct magic_entry * me , uint32_t nme , struct magic * * ma , uint32_t * nma"		412273	3					
ANR	412426	Parameter	struct magic_set * ms	1174:17:27695:27714	412273	0	True				
ANR	412427	ParameterType	struct magic_set *		412273	0					
ANR	412428	Identifier	ms		412273	1					
ANR	412429	Parameter	struct magic_entry * me	1174:39:27717:27738	412273	1	True				
ANR	412430	ParameterType	struct magic_entry *		412273	0					
ANR	412431	Identifier	me		412273	1					
ANR	412432	Parameter	uint32_t nme	1174:63:27741:27752	412273	2	True				
ANR	412433	ParameterType	uint32_t		412273	0					
ANR	412434	Identifier	nme		412273	1					
ANR	412435	Parameter	struct magic * * ma	1175:4:27759:27775	412273	3	True				
ANR	412436	ParameterType	struct magic * *		412273	0					
ANR	412437	Identifier	ma		412273	1					
ANR	412438	Parameter	uint32_t * nma	1175:23:27778:27790	412273	4	True				
ANR	412439	ParameterType	uint32_t *		412273	0					
ANR	412440	Identifier	nma		412273	1					
ANR	412441	CFGEntryNode	ENTRY		412273		True				
ANR	412442	CFGExitNode	EXIT		412273		True				
ANR	412443	Symbol	* * ma		412273						
ANR	412444	Symbol	nma		412273						
ANR	412445	Symbol	me [ i ] . cont_count		412273						
ANR	412446	Symbol	ms		412273						
ANR	412447	Symbol	nme		412273						
ANR	412448	Symbol	i		412273						
ANR	412449	Symbol	* nma		412273						
ANR	412450	Symbol	me [ i ] . mp		412273						
ANR	412451	Symbol	* i		412273						
ANR	412452	Symbol	ma		412273						
ANR	412453	Symbol	slen		412273						
ANR	412454	Symbol	me		412273						
ANR	412455	Symbol	* ma		412273						
ANR	412456	Symbol	mentrycount		412273						
ANR	412457	Symbol	* me		412273						
ANR	412458	Function	magic_entry_free	1199:8:28252:28412							
ANR	412459	FunctionDef	"magic_entry_free (struct magic_entry * me , uint32_t nme)"		412458	0					
ANR	412460	CompoundStatement		1201:0:28312:28412	412458	0					
ANR	412461	IdentifierDeclStatement	uint32_t i ;	1202:1:28315:28325	412458	0	True				
ANR	412462	IdentifierDecl	i		412458	0					
ANR	412463	IdentifierDeclType	uint32_t		412458	0					
ANR	412464	Identifier	i		412458	1					
ANR	412465	IfStatement	if ( me == NULL )		412458	1					
ANR	412466	Condition	me == NULL	1203:5:28332:28341	412458	0	True				
ANR	412467	EqualityExpression	me == NULL		412458	0		==			
ANR	412468	Identifier	me		412458	0					
ANR	412469	Identifier	NULL		412458	1					
ANR	412470	ReturnStatement	return ;	1204:2:28346:28352	412458	1	True				
ANR	412471	ForStatement	for ( i = 0 ; i < nme ; i ++ )		412458	2					
ANR	412472	ForInit	i = 0 ;	1205:6:28360:28365	412458	0	True				
ANR	412473	AssignmentExpression	i = 0		412458	0		=			
ANR	412474	Identifier	i		412458	0					
ANR	412475	PrimaryExpression	0		412458	1					
ANR	412476	Condition	i < nme	1205:13:28367:28373	412458	1	True				
ANR	412477	RelationalExpression	i < nme		412458	0		<			
ANR	412478	Identifier	i		412458	0					
ANR	412479	Identifier	nme		412458	1					
ANR	412480	PostIncDecOperationExpression	i ++	1205:22:28376:28378	412458	2	True				
ANR	412481	Identifier	i		412458	0					
ANR	412482	IncDec	++		412458	1					
ANR	412483	ExpressionStatement	efree ( me [ i ] . mp )	1206:2:28383:28398	412458	3	True				
ANR	412484	CallExpression	efree ( me [ i ] . mp )		412458	0					
ANR	412485	Callee	efree		412458	0					
ANR	412486	Identifier	efree		412458	0					
ANR	412487	ArgumentList	me [ i ] . mp		412458	1					
ANR	412488	Argument	me [ i ] . mp		412458	0					
ANR	412489	MemberAccess	me [ i ] . mp		412458	0					
ANR	412490	ArrayIndexing	me [ i ]		412458	0					
ANR	412491	Identifier	me		412458	0					
ANR	412492	Identifier	i		412458	1					
ANR	412493	Identifier	mp		412458	1					
ANR	412494	ExpressionStatement	efree ( me )	1207:1:28401:28410	412458	3	True				
ANR	412495	CallExpression	efree ( me )		412458	0					
ANR	412496	Callee	efree		412458	0					
ANR	412497	Identifier	efree		412458	0					
ANR	412498	ArgumentList	me		412458	1					
ANR	412499	Argument	me		412458	0					
ANR	412500	Identifier	me		412458	0					
ANR	412501	ReturnType	void		412458	1					
ANR	412502	Identifier	magic_entry_free		412458	2					
ANR	412503	ParameterList	"struct magic_entry * me , uint32_t nme"		412458	3					
ANR	412504	Parameter	struct magic_entry * me	1200:17:28274:28295	412458	0	True				
ANR	412505	ParameterType	struct magic_entry *		412458	0					
ANR	412506	Identifier	me		412458	1					
ANR	412507	Parameter	uint32_t nme	1200:41:28298:28309	412458	1	True				
ANR	412508	ParameterType	uint32_t		412458	0					
ANR	412509	Identifier	nme		412458	1					
ANR	412510	CFGEntryNode	ENTRY		412458		True				
ANR	412511	CFGExitNode	EXIT		412458		True				
ANR	412512	Symbol	me [ i ] . mp		412458						
ANR	412513	Symbol	NULL		412458						
ANR	412514	Symbol	* i		412458						
ANR	412515	Symbol	nme		412458						
ANR	412516	Symbol	me		412458						
ANR	412517	Symbol	i		412458						
ANR	412518	Symbol	* me		412458						
ANR	412519	Function	apprentice_load	1210:8:28423:31169							
ANR	412520	FunctionDef	"apprentice_load (struct magic_set * ms , const char * fn , int action)"		412519	0					
ANR	412521	CompoundStatement		1212:0:28508:31169	412519	0					
ANR	412522	IdentifierDeclStatement	int errs = 0 ;	1213:1:28511:28523	412519	0	True				
ANR	412523	IdentifierDecl	errs = 0		412519	0					
ANR	412524	IdentifierDeclType	int		412519	0					
ANR	412525	Identifier	errs		412519	1					
ANR	412526	AssignmentExpression	errs = 0		412519	2		=			
ANR	412527	Identifier	errs		412519	0					
ANR	412528	PrimaryExpression	0		412519	1					
ANR	412529	IdentifierDeclStatement	"uint32_t i , j ;"	1214:1:28526:28539	412519	1	True				
ANR	412530	IdentifierDecl	i		412519	0					
ANR	412531	IdentifierDeclType	uint32_t		412519	0					
ANR	412532	Identifier	i		412519	1					
ANR	412533	IdentifierDecl	j		412519	1					
ANR	412534	IdentifierDeclType	uint32_t		412519	0					
ANR	412535	Identifier	j		412519	1					
ANR	412536	IdentifierDeclStatement	"size_t files = 0 , maxfiles = 0 ;"	1215:1:28542:28572	412519	2	True				
ANR	412537	IdentifierDecl	files = 0		412519	0					
ANR	412538	IdentifierDeclType	size_t		412519	0					
ANR	412539	Identifier	files		412519	1					
ANR	412540	AssignmentExpression	files = 0		412519	2		=			
ANR	412541	Identifier	files		412519	0					
ANR	412542	PrimaryExpression	0		412519	1					
ANR	412543	IdentifierDecl	maxfiles = 0		412519	1					
ANR	412544	IdentifierDeclType	size_t		412519	0					
ANR	412545	Identifier	maxfiles		412519	1					
ANR	412546	AssignmentExpression	maxfiles = 0		412519	2		=			
ANR	412547	Identifier	maxfiles		412519	0					
ANR	412548	PrimaryExpression	0		412519	1					
ANR	412549	IdentifierDeclStatement	char * * filearr = NULL ;	1216:1:28575:28596	412519	3	True				
ANR	412550	IdentifierDecl	* * filearr = NULL		412519	0					
ANR	412551	IdentifierDeclType	char * *		412519	0					
ANR	412552	Identifier	filearr		412519	1					
ANR	412553	AssignmentExpression	* * filearr = NULL		412519	2		=			
ANR	412554	Identifier	NULL		412519	0					
ANR	412555	Identifier	NULL		412519	1					
ANR	412556	IdentifierDeclStatement	zend_stat_t st ;	1217:1:28599:28613	412519	4	True				
ANR	412557	IdentifierDecl	st		412519	0					
ANR	412558	IdentifierDeclType	zend_stat_t		412519	0					
ANR	412559	Identifier	st		412519	1					
ANR	412560	IdentifierDeclStatement	struct magic_map * map ;	1218:1:28616:28637	412519	5	True				
ANR	412561	IdentifierDecl	* map		412519	0					
ANR	412562	IdentifierDeclType	struct magic_map *		412519	0					
ANR	412563	Identifier	map		412519	1					
ANR	412564	IdentifierDeclStatement	struct magic_entry_set mset [ MAGIC_SETS ] ;	1219:1:28640:28679	412519	6	True				
ANR	412565	IdentifierDecl	mset [ MAGIC_SETS ]		412519	0					
ANR	412566	IdentifierDeclType	struct magic_entry_set [ MAGIC_SETS ]		412519	0					
ANR	412567	Identifier	mset		412519	1					
ANR	412568	Identifier	MAGIC_SETS		412519	2					
ANR	412569	IdentifierDeclStatement	php_stream * dir ;	1220:1:28682:28697	412519	7	True				
ANR	412570	IdentifierDecl	* dir		412519	0					
ANR	412571	IdentifierDeclType	php_stream *		412519	0					
ANR	412572	Identifier	dir		412519	1					
ANR	412573	IdentifierDeclStatement	php_stream_dirent d ;	1221:1:28700:28719	412519	8	True				
ANR	412574	IdentifierDecl	d		412519	0					
ANR	412575	IdentifierDeclType	php_stream_dirent		412519	0					
ANR	412576	Identifier	d		412519	1					
ANR	412577	ExpressionStatement	"memset ( mset , 0 , sizeof ( mset ) )"	1224:1:28725:28754	412519	9	True				
ANR	412578	CallExpression	"memset ( mset , 0 , sizeof ( mset ) )"		412519	0					
ANR	412579	Callee	memset		412519	0					
ANR	412580	Identifier	memset		412519	0					
ANR	412581	ArgumentList	mset		412519	1					
ANR	412582	Argument	mset		412519	0					
ANR	412583	Identifier	mset		412519	0					
ANR	412584	Argument	0		412519	1					
ANR	412585	PrimaryExpression	0		412519	0					
ANR	412586	Argument	sizeof ( mset )		412519	2					
ANR	412587	SizeofExpression	sizeof ( mset )		412519	0					
ANR	412588	Sizeof	sizeof		412519	0					
ANR	412589	SizeofOperand	mset		412519	1					
ANR	412590	ExpressionStatement	ms -> flags |= MAGIC_CHECK	1225:1:28757:28781	412519	10	True				
ANR	412591	AssignmentExpression	ms -> flags |= MAGIC_CHECK		412519	0		|=			
ANR	412592	PtrMemberAccess	ms -> flags		412519	0					
ANR	412593	Identifier	ms		412519	0					
ANR	412594	Identifier	flags		412519	1					
ANR	412595	Identifier	MAGIC_CHECK		412519	1					
ANR	412596	Statement	if	1228:1:28823:28824	412519	11	True				
ANR	412597	Statement	(	1228:4:28826:28826	412519	12	True				
ANR	412598	Statement	(	1228:5:28827:28827	412519	13	True				
ANR	412599	Statement	map	1228:6:28828:28830	412519	14	True				
ANR	412600	Statement	=	1228:10:28832:28832	412519	15	True				
ANR	412601	Statement	CAST	1228:12:28834:28837	412519	16	True				
ANR	412602	Statement	(	1228:16:28838:28838	412519	17	True				
ANR	412603	Statement	struct	1228:17:28839:28844	412519	18	True				
ANR	412604	Statement	magic_map	1228:24:28846:28854	412519	19	True				
ANR	412605	Statement	*	1228:34:28856:28856	412519	20	True				
ANR	412606	Statement	","	1228:35:28857:28857	412519	21	True				
ANR	412607	Statement	ecalloc	1228:37:28859:28865	412519	22	True				
ANR	412608	Statement	(	1228:44:28866:28866	412519	23	True				
ANR	412609	Statement	1	1228:45:28867:28867	412519	24	True				
ANR	412610	Statement	","	1228:46:28868:28868	412519	25	True				
ANR	412611	Statement	sizeof	1228:48:28870:28875	412519	26	True				
ANR	412612	Statement	(	1228:54:28876:28876	412519	27	True				
ANR	412613	Statement	*	1228:55:28877:28877	412519	28	True				
ANR	412614	Statement	map	1228:56:28878:28880	412519	29	True				
ANR	412615	Statement	)	1228:59:28881:28881	412519	30	True				
ANR	412616	Statement	)	1228:60:28882:28882	412519	31	True				
ANR	412617	Statement	)	1228:61:28883:28883	412519	32	True				
ANR	412618	Statement	)	1228:62:28884:28884	412519	33	True				
ANR	412619	Statement	==	1228:64:28886:28887	412519	34	True				
ANR	412620	Statement	NULL	1228:67:28889:28892	412519	35	True				
ANR	412621	Statement	)	1228:71:28893:28893	412519	36	True				
ANR	412622	CompoundStatement		18:1:387:387	412519	37					
ANR	412623	ExpressionStatement	"file_oomem ( ms , sizeof ( * map ) )"	1230:2:28900:28928	412519	0	True				
ANR	412624	CallExpression	"file_oomem ( ms , sizeof ( * map ) )"		412519	0					
ANR	412625	Callee	file_oomem		412519	0					
ANR	412626	Identifier	file_oomem		412519	0					
ANR	412627	ArgumentList	ms		412519	1					
ANR	412628	Argument	ms		412519	0					
ANR	412629	Identifier	ms		412519	0					
ANR	412630	Argument	sizeof ( * map )		412519	1					
ANR	412631	SizeofExpression	sizeof ( * map )		412519	0					
ANR	412632	Sizeof	sizeof		412519	0					
ANR	412633	UnaryOperationExpression	* map		412519	1					
ANR	412634	UnaryOperator	*		412519	0					
ANR	412635	Identifier	map		412519	1					
ANR	412636	ReturnStatement	return NULL ;	1231:2:28932:28943	412519	1	True				
ANR	412637	Identifier	NULL		412519	0					
ANR	412638	IfStatement	if ( action == FILE_CHECK )		412519	38					
ANR	412639	Condition	action == FILE_CHECK	1235:5:29004:29023	412519	0	True				
ANR	412640	EqualityExpression	action == FILE_CHECK		412519	0		==			
ANR	412641	Identifier	action		412519	0					
ANR	412642	Identifier	FILE_CHECK		412519	1					
ANR	412643	ExpressionStatement	"( void ) fprintf ( stderr , ""%s\\n"" , usg_hdr )"	1236:2:29028:29066	412519	1	True				
ANR	412644	CastExpression	"( void ) fprintf ( stderr , ""%s\\n"" , usg_hdr )"		412519	0					
ANR	412645	CastTarget	void		412519	0					
ANR	412646	CallExpression	"fprintf ( stderr , ""%s\\n"" , usg_hdr )"		412519	1					
ANR	412647	Callee	fprintf		412519	0					
ANR	412648	Identifier	fprintf		412519	0					
ANR	412649	ArgumentList	stderr		412519	1					
ANR	412650	Argument	stderr		412519	0					
ANR	412651	Identifier	stderr		412519	0					
ANR	412652	Argument	"""%s\\n"""		412519	1					
ANR	412653	PrimaryExpression	"""%s\\n"""		412519	0					
ANR	412654	Argument	usg_hdr		412519	2					
ANR	412655	Identifier	usg_hdr		412519	0					
ANR	412656	IfStatement	"if ( php_sys_stat ( fn , & st ) == 0 && S_ISDIR ( st . st_mode ) )"		412519	39					
ANR	412657	Condition	"php_sys_stat ( fn , & st ) == 0 && S_ISDIR ( st . st_mode )"	1241:5:29204:29252	412519	0	True				
ANR	412658	AndExpression	"php_sys_stat ( fn , & st ) == 0 && S_ISDIR ( st . st_mode )"		412519	0		&&			
ANR	412659	EqualityExpression	"php_sys_stat ( fn , & st ) == 0"		412519	0		==			
ANR	412660	CallExpression	"php_sys_stat ( fn , & st )"		412519	0					
ANR	412661	Callee	php_sys_stat		412519	0					
ANR	412662	Identifier	php_sys_stat		412519	0					
ANR	412663	ArgumentList	fn		412519	1					
ANR	412664	Argument	fn		412519	0					
ANR	412665	Identifier	fn		412519	0					
ANR	412666	Argument	& st		412519	1					
ANR	412667	UnaryOperationExpression	& st		412519	0					
ANR	412668	UnaryOperator	&		412519	0					
ANR	412669	Identifier	st		412519	1					
ANR	412670	PrimaryExpression	0		412519	1					
ANR	412671	CallExpression	S_ISDIR ( st . st_mode )		412519	1					
ANR	412672	Callee	S_ISDIR		412519	0					
ANR	412673	Identifier	S_ISDIR		412519	0					
ANR	412674	ArgumentList	st . st_mode		412519	1					
ANR	412675	Argument	st . st_mode		412519	0					
ANR	412676	MemberAccess	st . st_mode		412519	0					
ANR	412677	Identifier	st		412519	0					
ANR	412678	Identifier	st_mode		412519	1					
ANR	412679	CompoundStatement		32:2:763:783	412519	1					
ANR	412680	IdentifierDeclStatement	int mflen ;	1242:2:29259:29268	412519	0	True				
ANR	412681	IdentifierDecl	mflen		412519	0					
ANR	412682	IdentifierDeclType	int		412519	0					
ANR	412683	Identifier	mflen		412519	1					
ANR	412684	IdentifierDeclStatement	char mfn [ MAXPATHLEN ] ;	1243:2:29272:29292	412519	1	True				
ANR	412685	IdentifierDecl	mfn [ MAXPATHLEN ]		412519	0					
ANR	412686	IdentifierDeclType	char [ MAXPATHLEN ]		412519	0					
ANR	412687	Identifier	mfn		412519	1					
ANR	412688	Identifier	MAXPATHLEN		412519	2					
ANR	412689	ExpressionStatement	"dir = php_stream_opendir ( ( char * ) fn , REPORT_ERRORS , NULL )"	1245:2:29297:29354	412519	2	True				
ANR	412690	AssignmentExpression	"dir = php_stream_opendir ( ( char * ) fn , REPORT_ERRORS , NULL )"		412519	0		=			
ANR	412691	Identifier	dir		412519	0					
ANR	412692	CallExpression	"php_stream_opendir ( ( char * ) fn , REPORT_ERRORS , NULL )"		412519	1					
ANR	412693	Callee	php_stream_opendir		412519	0					
ANR	412694	Identifier	php_stream_opendir		412519	0					
ANR	412695	ArgumentList	( char * ) fn		412519	1					
ANR	412696	Argument	( char * ) fn		412519	0					
ANR	412697	CastExpression	( char * ) fn		412519	0					
ANR	412698	CastTarget	char *		412519	0					
ANR	412699	Identifier	fn		412519	1					
ANR	412700	Argument	REPORT_ERRORS		412519	1					
ANR	412701	Identifier	REPORT_ERRORS		412519	0					
ANR	412702	Argument	NULL		412519	2					
ANR	412703	Identifier	NULL		412519	0					
ANR	412704	IfStatement	if ( ! dir )		412519	3					
ANR	412705	Condition	! dir	1246:6:29362:29365	412519	0	True				
ANR	412706	UnaryOperationExpression	! dir		412519	0					
ANR	412707	UnaryOperator	!		412519	0					
ANR	412708	Identifier	dir		412519	1					
ANR	412709	CompoundStatement		35:12:859:859	412519	1					
ANR	412710	ExpressionStatement	errs ++	1247:3:29373:29379	412519	0	True				
ANR	412711	PostIncDecOperationExpression	errs ++		412519	0					
ANR	412712	Identifier	errs		412519	0					
ANR	412713	IncDec	++		412519	1					
ANR	412714	GotoStatement	goto out ;	1248:3:29384:29392	412519	1	True				
ANR	412715	Identifier	out		412519	0					
ANR	412716	WhileStatement	"while ( php_stream_readdir ( dir , & d ) )"		412519	4					
ANR	412717	Condition	"php_stream_readdir ( dir , & d )"	1250:9:29407:29433	412519	0	True				
ANR	412718	CallExpression	"php_stream_readdir ( dir , & d )"		412519	0					
ANR	412719	Callee	php_stream_readdir		412519	0					
ANR	412720	Identifier	php_stream_readdir		412519	0					
ANR	412721	ArgumentList	dir		412519	1					
ANR	412722	Argument	dir		412519	0					
ANR	412723	Identifier	dir		412519	0					
ANR	412724	Argument	& d		412519	1					
ANR	412725	UnaryOperationExpression	& d		412519	0					
ANR	412726	UnaryOperator	&		412519	0					
ANR	412727	Identifier	d		412519	1					
ANR	412728	CompoundStatement		39:38:927:927	412519	1					
ANR	412729	IfStatement	"if ( ( mflen = snprintf ( mfn , sizeof ( mfn ) , ""%s/%s"" , fn , d . d_name ) ) < 0 )"		412519	0					
ANR	412730	Condition	"( mflen = snprintf ( mfn , sizeof ( mfn ) , ""%s/%s"" , fn , d . d_name ) ) < 0"	1251:7:29445:29507	412519	0	True				
ANR	412731	RelationalExpression	"( mflen = snprintf ( mfn , sizeof ( mfn ) , ""%s/%s"" , fn , d . d_name ) ) < 0"		412519	0		<			
ANR	412732	AssignmentExpression	"mflen = snprintf ( mfn , sizeof ( mfn ) , ""%s/%s"" , fn , d . d_name )"		412519	0		=			
ANR	412733	Identifier	mflen		412519	0					
ANR	412734	CallExpression	"snprintf ( mfn , sizeof ( mfn ) , ""%s/%s"" , fn , d . d_name )"		412519	1					
ANR	412735	Callee	snprintf		412519	0					
ANR	412736	Identifier	snprintf		412519	0					
ANR	412737	ArgumentList	mfn		412519	1					
ANR	412738	Argument	mfn		412519	0					
ANR	412739	Identifier	mfn		412519	0					
ANR	412740	Argument	sizeof ( mfn )		412519	1					
ANR	412741	SizeofExpression	sizeof ( mfn )		412519	0					
ANR	412742	Sizeof	sizeof		412519	0					
ANR	412743	SizeofOperand	mfn		412519	1					
ANR	412744	Argument	"""%s/%s"""		412519	2					
ANR	412745	PrimaryExpression	"""%s/%s"""		412519	0					
ANR	412746	Argument	fn		412519	3					
ANR	412747	Identifier	fn		412519	0					
ANR	412748	Argument	d . d_name		412519	4					
ANR	412749	MemberAccess	d . d_name		412519	0					
ANR	412750	Identifier	d		412519	0					
ANR	412751	Identifier	d_name		412519	1					
ANR	412752	PrimaryExpression	0		412519	1					
ANR	412753	CompoundStatement		40:72:1001:1001	412519	1					
ANR	412754	ExpressionStatement	"file_oomem ( ms , strlen ( fn ) + strlen ( d . d_name ) + 2 )"	1252:4:29516:29569	412519	0	True				
ANR	412755	CallExpression	"file_oomem ( ms , strlen ( fn ) + strlen ( d . d_name ) + 2 )"		412519	0					
ANR	412756	Callee	file_oomem		412519	0					
ANR	412757	Identifier	file_oomem		412519	0					
ANR	412758	ArgumentList	ms		412519	1					
ANR	412759	Argument	ms		412519	0					
ANR	412760	Identifier	ms		412519	0					
ANR	412761	Argument	strlen ( fn ) + strlen ( d . d_name ) + 2		412519	1					
ANR	412762	AdditiveExpression	strlen ( fn ) + strlen ( d . d_name ) + 2		412519	0		+			
ANR	412763	CallExpression	strlen ( fn )		412519	0					
ANR	412764	Callee	strlen		412519	0					
ANR	412765	Identifier	strlen		412519	0					
ANR	412766	ArgumentList	fn		412519	1					
ANR	412767	Argument	fn		412519	0					
ANR	412768	Identifier	fn		412519	0					
ANR	412769	AdditiveExpression	strlen ( d . d_name ) + 2		412519	1		+			
ANR	412770	CallExpression	strlen ( d . d_name )		412519	0					
ANR	412771	Callee	strlen		412519	0					
ANR	412772	Identifier	strlen		412519	0					
ANR	412773	ArgumentList	d . d_name		412519	1					
ANR	412774	Argument	d . d_name		412519	0					
ANR	412775	MemberAccess	d . d_name		412519	0					
ANR	412776	Identifier	d		412519	0					
ANR	412777	Identifier	d_name		412519	1					
ANR	412778	PrimaryExpression	2		412519	1					
ANR	412779	ExpressionStatement	errs ++	1254:4:29575:29581	412519	1	True				
ANR	412780	PostIncDecOperationExpression	errs ++		412519	0					
ANR	412781	Identifier	errs		412519	0					
ANR	412782	IncDec	++		412519	1					
ANR	412783	ExpressionStatement	php_stream_closedir ( dir )	1255:4:29587:29611	412519	2	True				
ANR	412784	CallExpression	php_stream_closedir ( dir )		412519	0					
ANR	412785	Callee	php_stream_closedir		412519	0					
ANR	412786	Identifier	php_stream_closedir		412519	0					
ANR	412787	ArgumentList	dir		412519	1					
ANR	412788	Argument	dir		412519	0					
ANR	412789	Identifier	dir		412519	0					
ANR	412790	GotoStatement	goto out ;	1256:4:29617:29625	412519	3	True				
ANR	412791	Identifier	out		412519	0					
ANR	412792	IfStatement	"if ( zend_stat ( mfn , & st ) == - 1 || ! S_ISREG ( st . st_mode ) )"		412519	1					
ANR	412793	Condition	"zend_stat ( mfn , & st ) == - 1 || ! S_ISREG ( st . st_mode )"	1258:7:29639:29687	412519	0	True				
ANR	412794	OrExpression	"zend_stat ( mfn , & st ) == - 1 || ! S_ISREG ( st . st_mode )"		412519	0		||			
ANR	412795	EqualityExpression	"zend_stat ( mfn , & st ) == - 1"		412519	0		==			
ANR	412796	CallExpression	"zend_stat ( mfn , & st )"		412519	0					
ANR	412797	Callee	zend_stat		412519	0					
ANR	412798	Identifier	zend_stat		412519	0					
ANR	412799	ArgumentList	mfn		412519	1					
ANR	412800	Argument	mfn		412519	0					
ANR	412801	Identifier	mfn		412519	0					
ANR	412802	Argument	& st		412519	1					
ANR	412803	UnaryOperationExpression	& st		412519	0					
ANR	412804	UnaryOperator	&		412519	0					
ANR	412805	Identifier	st		412519	1					
ANR	412806	UnaryOperationExpression	- 1		412519	1					
ANR	412807	UnaryOperator	-		412519	0					
ANR	412808	PrimaryExpression	1		412519	1					
ANR	412809	UnaryOperationExpression	! S_ISREG ( st . st_mode )		412519	1					
ANR	412810	UnaryOperator	!		412519	0					
ANR	412811	CallExpression	S_ISREG ( st . st_mode )		412519	1					
ANR	412812	Callee	S_ISREG		412519	0					
ANR	412813	Identifier	S_ISREG		412519	0					
ANR	412814	ArgumentList	st . st_mode		412519	1					
ANR	412815	Argument	st . st_mode		412519	0					
ANR	412816	MemberAccess	st . st_mode		412519	0					
ANR	412817	Identifier	st		412519	0					
ANR	412818	Identifier	st_mode		412519	1					
ANR	412819	CompoundStatement		47:58:1181:1181	412519	1					
ANR	412820	ContinueStatement	continue ;	1259:4:29696:29704	412519	0	True				
ANR	412821	IfStatement	if ( files >= maxfiles )		412519	2					
ANR	412822	Condition	files >= maxfiles	1261:7:29718:29734	412519	0	True				
ANR	412823	RelationalExpression	files >= maxfiles		412519	0		>=			
ANR	412824	Identifier	files		412519	0					
ANR	412825	Identifier	maxfiles		412519	1					
ANR	412826	CompoundStatement		51:4:1234:1245	412519	1					
ANR	412827	IdentifierDeclStatement	size_t mlen ;	1262:4:29743:29754	412519	0	True				
ANR	412828	IdentifierDecl	mlen		412519	0					
ANR	412829	IdentifierDeclType	size_t		412519	0					
ANR	412830	Identifier	mlen		412519	1					
ANR	412831	ExpressionStatement	maxfiles = ( maxfiles + 1 ) * 2	1263:4:29760:29789	412519	1	True				
ANR	412832	AssignmentExpression	maxfiles = ( maxfiles + 1 ) * 2		412519	0		=			
ANR	412833	Identifier	maxfiles		412519	0					
ANR	412834	MultiplicativeExpression	( maxfiles + 1 ) * 2		412519	1		*			
ANR	412835	AdditiveExpression	maxfiles + 1		412519	0		+			
ANR	412836	Identifier	maxfiles		412519	0					
ANR	412837	PrimaryExpression	1		412519	1					
ANR	412838	PrimaryExpression	2		412519	1					
ANR	412839	ExpressionStatement	mlen = maxfiles * sizeof ( * filearr )	1264:4:29795:29829	412519	2	True				
ANR	412840	AssignmentExpression	mlen = maxfiles * sizeof ( * filearr )		412519	0		=			
ANR	412841	Identifier	mlen		412519	0					
ANR	412842	MultiplicativeExpression	maxfiles * sizeof ( * filearr )		412519	1		*			
ANR	412843	Identifier	maxfiles		412519	0					
ANR	412844	SizeofExpression	sizeof ( * filearr )		412519	1					
ANR	412845	Sizeof	sizeof		412519	0					
ANR	412846	UnaryOperationExpression	* filearr		412519	1					
ANR	412847	UnaryOperator	*		412519	0					
ANR	412848	Identifier	filearr		412519	1					
ANR	412849	Statement	if	1265:4:29835:29836	412519	3	True				
ANR	412850	Statement	(	1265:7:29838:29838	412519	4	True				
ANR	412851	Statement	(	1265:8:29839:29839	412519	5	True				
ANR	412852	Statement	filearr	1265:9:29840:29846	412519	6	True				
ANR	412853	Statement	=	1265:17:29848:29848	412519	7	True				
ANR	412854	Statement	CAST	1265:19:29850:29853	412519	8	True				
ANR	412855	Statement	(	1265:23:29854:29854	412519	9	True				
ANR	412856	Statement	char	1265:24:29855:29858	412519	10	True				
ANR	412857	Statement	*	1265:29:29860:29860	412519	11	True				
ANR	412858	Statement	*	1265:30:29861:29861	412519	12	True				
ANR	412859	Statement	","	1265:31:29862:29862	412519	13	True				
ANR	412860	Statement	erealloc	1266:8:29872:29879	412519	14	True				
ANR	412861	Statement	(	1266:16:29880:29880	412519	15	True				
ANR	412862	Statement	filearr	1266:17:29881:29887	412519	16	True				
ANR	412863	Statement	","	1266:24:29888:29888	412519	17	True				
ANR	412864	Statement	mlen	1266:26:29890:29893	412519	18	True				
ANR	412865	Statement	)	1266:30:29894:29894	412519	19	True				
ANR	412866	Statement	)	1266:31:29895:29895	412519	20	True				
ANR	412867	Statement	)	1266:32:29896:29896	412519	21	True				
ANR	412868	Statement	==	1266:34:29898:29899	412519	22	True				
ANR	412869	Statement	NULL	1266:37:29901:29904	412519	23	True				
ANR	412870	Statement	)	1266:41:29905:29905	412519	24	True				
ANR	412871	CompoundStatement		55:43:1398:1398	412519	25					
ANR	412872	ExpressionStatement	"file_oomem ( ms , mlen )"	1267:5:29914:29934	412519	0	True				
ANR	412873	CallExpression	"file_oomem ( ms , mlen )"		412519	0					
ANR	412874	Callee	file_oomem		412519	0					
ANR	412875	Identifier	file_oomem		412519	0					
ANR	412876	ArgumentList	ms		412519	1					
ANR	412877	Argument	ms		412519	0					
ANR	412878	Identifier	ms		412519	0					
ANR	412879	Argument	mlen		412519	1					
ANR	412880	Identifier	mlen		412519	0					
ANR	412881	ExpressionStatement	php_stream_closedir ( dir )	1268:5:29941:29965	412519	1	True				
ANR	412882	CallExpression	php_stream_closedir ( dir )		412519	0					
ANR	412883	Callee	php_stream_closedir		412519	0					
ANR	412884	Identifier	php_stream_closedir		412519	0					
ANR	412885	ArgumentList	dir		412519	1					
ANR	412886	Argument	dir		412519	0					
ANR	412887	Identifier	dir		412519	0					
ANR	412888	ExpressionStatement	errs ++	1269:5:29972:29978	412519	2	True				
ANR	412889	PostIncDecOperationExpression	errs ++		412519	0					
ANR	412890	Identifier	errs		412519	0					
ANR	412891	IncDec	++		412519	1					
ANR	412892	GotoStatement	goto out ;	1270:5:29985:29993	412519	3	True				
ANR	412893	Identifier	out		412519	0					
ANR	412894	ExpressionStatement	"filearr [ files ++ ] = estrndup ( mfn , ( mflen > sizeof ( mfn ) - 1 ) ? sizeof ( mfn ) - 1 : mflen )"	1273:3:30009:30092	412519	3	True				
ANR	412895	AssignmentExpression	"filearr [ files ++ ] = estrndup ( mfn , ( mflen > sizeof ( mfn ) - 1 ) ? sizeof ( mfn ) - 1 : mflen )"		412519	0		=			
ANR	412896	ArrayIndexing	filearr [ files ++ ]		412519	0					
ANR	412897	Identifier	filearr		412519	0					
ANR	412898	PostIncDecOperationExpression	files ++		412519	1					
ANR	412899	Identifier	files		412519	0					
ANR	412900	IncDec	++		412519	1					
ANR	412901	CallExpression	"estrndup ( mfn , ( mflen > sizeof ( mfn ) - 1 ) ? sizeof ( mfn ) - 1 : mflen )"		412519	1					
ANR	412902	Callee	estrndup		412519	0					
ANR	412903	Identifier	estrndup		412519	0					
ANR	412904	ArgumentList	mfn		412519	1					
ANR	412905	Argument	mfn		412519	0					
ANR	412906	Identifier	mfn		412519	0					
ANR	412907	Argument	( mflen > sizeof ( mfn ) - 1 ) ? sizeof ( mfn ) - 1 : mflen		412519	1					
ANR	412908	ConditionalExpression	( mflen > sizeof ( mfn ) - 1 ) ? sizeof ( mfn ) - 1 : mflen		412519	0					
ANR	412909	Condition	mflen > sizeof ( mfn ) - 1		412519	0					
ANR	412910	RelationalExpression	mflen > sizeof ( mfn ) - 1		412519	0		>			
ANR	412911	Identifier	mflen		412519	0					
ANR	412912	AdditiveExpression	sizeof ( mfn ) - 1		412519	1		-			
ANR	412913	SizeofExpression	sizeof ( mfn )		412519	0					
ANR	412914	Sizeof	sizeof		412519	0					
ANR	412915	SizeofOperand	mfn		412519	1					
ANR	412916	PrimaryExpression	1		412519	1					
ANR	412917	AdditiveExpression	sizeof ( mfn ) - 1		412519	1		-			
ANR	412918	SizeofExpression	sizeof ( mfn )		412519	0					
ANR	412919	Sizeof	sizeof		412519	0					
ANR	412920	SizeofOperand	mfn		412519	1					
ANR	412921	PrimaryExpression	1		412519	1					
ANR	412922	Identifier	mflen		412519	2					
ANR	412923	ExpressionStatement	php_stream_closedir ( dir )	1275:2:30100:30124	412519	5	True				
ANR	412924	CallExpression	php_stream_closedir ( dir )		412519	0					
ANR	412925	Callee	php_stream_closedir		412519	0					
ANR	412926	Identifier	php_stream_closedir		412519	0					
ANR	412927	ArgumentList	dir		412519	1					
ANR	412928	Argument	dir		412519	0					
ANR	412929	Identifier	dir		412519	0					
ANR	412930	ExpressionStatement	"qsort ( filearr , files , sizeof ( * filearr ) , cmpstrp )"	1276:2:30128:30176	412519	6	True				
ANR	412931	CallExpression	"qsort ( filearr , files , sizeof ( * filearr ) , cmpstrp )"		412519	0					
ANR	412932	Callee	qsort		412519	0					
ANR	412933	Identifier	qsort		412519	0					
ANR	412934	ArgumentList	filearr		412519	1					
ANR	412935	Argument	filearr		412519	0					
ANR	412936	Identifier	filearr		412519	0					
ANR	412937	Argument	files		412519	1					
ANR	412938	Identifier	files		412519	0					
ANR	412939	Argument	sizeof ( * filearr )		412519	2					
ANR	412940	SizeofExpression	sizeof ( * filearr )		412519	0					
ANR	412941	Sizeof	sizeof		412519	0					
ANR	412942	UnaryOperationExpression	* filearr		412519	1					
ANR	412943	UnaryOperator	*		412519	0					
ANR	412944	Identifier	filearr		412519	1					
ANR	412945	Argument	cmpstrp		412519	3					
ANR	412946	Identifier	cmpstrp		412519	0					
ANR	412947	ForStatement	for ( i = 0 ; i < files ; i ++ )		412519	7					
ANR	412948	ForInit	i = 0 ;	1277:7:30185:30190	412519	0	True				
ANR	412949	AssignmentExpression	i = 0		412519	0		=			
ANR	412950	Identifier	i		412519	0					
ANR	412951	PrimaryExpression	0		412519	1					
ANR	412952	Condition	i < files	1277:14:30192:30200	412519	1	True				
ANR	412953	RelationalExpression	i < files		412519	0		<			
ANR	412954	Identifier	i		412519	0					
ANR	412955	Identifier	files		412519	1					
ANR	412956	PostIncDecOperationExpression	i ++	1277:25:30203:30205	412519	2	True				
ANR	412957	Identifier	i		412519	0					
ANR	412958	IncDec	++		412519	1					
ANR	412959	CompoundStatement		66:30:1699:1699	412519	3					
ANR	412960	ExpressionStatement	"load_1 ( ms , action , filearr [ i ] , & errs , mset )"	1278:3:30213:30256	412519	0	True				
ANR	412961	CallExpression	"load_1 ( ms , action , filearr [ i ] , & errs , mset )"		412519	0					
ANR	412962	Callee	load_1		412519	0					
ANR	412963	Identifier	load_1		412519	0					
ANR	412964	ArgumentList	ms		412519	1					
ANR	412965	Argument	ms		412519	0					
ANR	412966	Identifier	ms		412519	0					
ANR	412967	Argument	action		412519	1					
ANR	412968	Identifier	action		412519	0					
ANR	412969	Argument	filearr [ i ]		412519	2					
ANR	412970	ArrayIndexing	filearr [ i ]		412519	0					
ANR	412971	Identifier	filearr		412519	0					
ANR	412972	Identifier	i		412519	1					
ANR	412973	Argument	& errs		412519	3					
ANR	412974	UnaryOperationExpression	& errs		412519	0					
ANR	412975	UnaryOperator	&		412519	0					
ANR	412976	Identifier	errs		412519	1					
ANR	412977	Argument	mset		412519	4					
ANR	412978	Identifier	mset		412519	0					
ANR	412979	ExpressionStatement	efree ( filearr [ i ] )	1279:3:30261:30278	412519	1	True				
ANR	412980	CallExpression	efree ( filearr [ i ] )		412519	0					
ANR	412981	Callee	efree		412519	0					
ANR	412982	Identifier	efree		412519	0					
ANR	412983	ArgumentList	filearr [ i ]		412519	1					
ANR	412984	Argument	filearr [ i ]		412519	0					
ANR	412985	ArrayIndexing	filearr [ i ]		412519	0					
ANR	412986	Identifier	filearr		412519	0					
ANR	412987	Identifier	i		412519	1					
ANR	412988	ExpressionStatement	efree ( filearr )	1281:2:30286:30300	412519	8	True				
ANR	412989	CallExpression	efree ( filearr )		412519	0					
ANR	412990	Callee	efree		412519	0					
ANR	412991	Identifier	efree		412519	0					
ANR	412992	ArgumentList	filearr		412519	1					
ANR	412993	Argument	filearr		412519	0					
ANR	412994	Identifier	filearr		412519	0					
ANR	412995	ElseStatement	else		412519	0					
ANR	412996	ExpressionStatement	"load_1 ( ms , action , fn , & errs , mset )"	1283:2:30312:30347	412519	0	True				
ANR	412997	CallExpression	"load_1 ( ms , action , fn , & errs , mset )"		412519	0					
ANR	412998	Callee	load_1		412519	0					
ANR	412999	Identifier	load_1		412519	0					
ANR	413000	ArgumentList	ms		412519	1					
ANR	413001	Argument	ms		412519	0					
ANR	413002	Identifier	ms		412519	0					
ANR	413003	Argument	action		412519	1					
ANR	413004	Identifier	action		412519	0					
ANR	413005	Argument	fn		412519	2					
ANR	413006	Identifier	fn		412519	0					
ANR	413007	Argument	& errs		412519	3					
ANR	413008	UnaryOperationExpression	& errs		412519	0					
ANR	413009	UnaryOperator	&		412519	0					
ANR	413010	Identifier	errs		412519	1					
ANR	413011	Argument	mset		412519	4					
ANR	413012	Identifier	mset		412519	0					
ANR	413013	IfStatement	if ( errs )		412519	40					
ANR	413014	Condition	errs	1284:5:30354:30357	412519	0	True				
ANR	413015	Identifier	errs		412519	0					
ANR	413016	GotoStatement	goto out ;	1285:2:30362:30370	412519	1	True				
ANR	413017	Identifier	out		412519	0					
ANR	413018	ForStatement	for ( j = 0 ; j < MAGIC_SETS ; j ++ )		412519	41					
ANR	413019	ForInit	j = 0 ;	1287:6:30379:30384	412519	0	True				
ANR	413020	AssignmentExpression	j = 0		412519	0		=			
ANR	413021	Identifier	j		412519	0					
ANR	413022	PrimaryExpression	0		412519	1					
ANR	413023	Condition	j < MAGIC_SETS	1287:13:30386:30399	412519	1	True				
ANR	413024	RelationalExpression	j < MAGIC_SETS		412519	0		<			
ANR	413025	Identifier	j		412519	0					
ANR	413026	Identifier	MAGIC_SETS		412519	1					
ANR	413027	PostIncDecOperationExpression	j ++	1287:29:30402:30404	412519	2	True				
ANR	413028	Identifier	j		412519	0					
ANR	413029	IncDec	++		412519	1					
ANR	413030	CompoundStatement		76:34:1898:1898	412519	3					
ANR	413031	ForStatement	for ( i = 0 ; i < mset [ j ] . count ; )		412519	0					
ANR	413032	ForInit	i = 0 ;	1289:7:30443:30448	412519	0	True				
ANR	413033	AssignmentExpression	i = 0		412519	0		=			
ANR	413034	Identifier	i		412519	0					
ANR	413035	PrimaryExpression	0		412519	1					
ANR	413036	Condition	i < mset [ j ] . count	1289:14:30450:30466	412519	1	True				
ANR	413037	RelationalExpression	i < mset [ j ] . count		412519	0		<			
ANR	413038	Identifier	i		412519	0					
ANR	413039	MemberAccess	mset [ j ] . count		412519	1					
ANR	413040	ArrayIndexing	mset [ j ]		412519	0					
ANR	413041	Identifier	mset		412519	0					
ANR	413042	Identifier	j		412519	1					
ANR	413043	Identifier	count		412519	1					
ANR	413044	CompoundStatement		78:35:1962:1962	412519	2					
ANR	413045	IfStatement	if ( mset [ j ] . me [ i ] . mp -> cont_level != 0 )		412519	0					
ANR	413046	Condition	mset [ j ] . me [ i ] . mp -> cont_level != 0	1290:7:30480:30512	412519	0	True				
ANR	413047	EqualityExpression	mset [ j ] . me [ i ] . mp -> cont_level != 0		412519	0		!=			
ANR	413048	PtrMemberAccess	mset [ j ] . me [ i ] . mp -> cont_level		412519	0					
ANR	413049	MemberAccess	mset [ j ] . me [ i ] . mp		412519	0					
ANR	413050	ArrayIndexing	mset [ j ] . me [ i ]		412519	0					
ANR	413051	MemberAccess	mset [ j ] . me		412519	0					
ANR	413052	ArrayIndexing	mset [ j ]		412519	0					
ANR	413053	Identifier	mset		412519	0					
ANR	413054	Identifier	j		412519	1					
ANR	413055	Identifier	me		412519	1					
ANR	413056	Identifier	i		412519	1					
ANR	413057	Identifier	mp		412519	1					
ANR	413058	Identifier	cont_level		412519	1					
ANR	413059	PrimaryExpression	0		412519	1					
ANR	413060	CompoundStatement		79:42:2006:2006	412519	1					
ANR	413061	ExpressionStatement	i ++	1291:4:30521:30524	412519	0	True				
ANR	413062	PostIncDecOperationExpression	i ++		412519	0					
ANR	413063	Identifier	i		412519	0					
ANR	413064	IncDec	++		412519	1					
ANR	413065	ContinueStatement	continue ;	1292:4:30530:30538	412519	1	True				
ANR	413066	ExpressionStatement	"i = set_text_binary ( ms , mset [ j ] . me , mset [ j ] . count , i )"	1294:3:30548:30601	412519	1	True				
ANR	413067	AssignmentExpression	"i = set_text_binary ( ms , mset [ j ] . me , mset [ j ] . count , i )"		412519	0		=			
ANR	413068	Identifier	i		412519	0					
ANR	413069	CallExpression	"set_text_binary ( ms , mset [ j ] . me , mset [ j ] . count , i )"		412519	1					
ANR	413070	Callee	set_text_binary		412519	0					
ANR	413071	Identifier	set_text_binary		412519	0					
ANR	413072	ArgumentList	ms		412519	1					
ANR	413073	Argument	ms		412519	0					
ANR	413074	Identifier	ms		412519	0					
ANR	413075	Argument	mset [ j ] . me		412519	1					
ANR	413076	MemberAccess	mset [ j ] . me		412519	0					
ANR	413077	ArrayIndexing	mset [ j ]		412519	0					
ANR	413078	Identifier	mset		412519	0					
ANR	413079	Identifier	j		412519	1					
ANR	413080	Identifier	me		412519	1					
ANR	413081	Argument	mset [ j ] . count		412519	2					
ANR	413082	MemberAccess	mset [ j ] . count		412519	0					
ANR	413083	ArrayIndexing	mset [ j ]		412519	0					
ANR	413084	Identifier	mset		412519	0					
ANR	413085	Identifier	j		412519	1					
ANR	413086	Identifier	count		412519	1					
ANR	413087	Argument	i		412519	3					
ANR	413088	Identifier	i		412519	0					
ANR	413089	ExpressionStatement	"qsort ( mset [ j ] . me , mset [ j ] . count , sizeof ( * mset [ j ] . me ) , apprentice_sort )"	1296:2:30609:30685	412519	1	True				
ANR	413090	CallExpression	"qsort ( mset [ j ] . me , mset [ j ] . count , sizeof ( * mset [ j ] . me ) , apprentice_sort )"		412519	0					
ANR	413091	Callee	qsort		412519	0					
ANR	413092	Identifier	qsort		412519	0					
ANR	413093	ArgumentList	mset [ j ] . me		412519	1					
ANR	413094	Argument	mset [ j ] . me		412519	0					
ANR	413095	MemberAccess	mset [ j ] . me		412519	0					
ANR	413096	ArrayIndexing	mset [ j ]		412519	0					
ANR	413097	Identifier	mset		412519	0					
ANR	413098	Identifier	j		412519	1					
ANR	413099	Identifier	me		412519	1					
ANR	413100	Argument	mset [ j ] . count		412519	1					
ANR	413101	MemberAccess	mset [ j ] . count		412519	0					
ANR	413102	ArrayIndexing	mset [ j ]		412519	0					
ANR	413103	Identifier	mset		412519	0					
ANR	413104	Identifier	j		412519	1					
ANR	413105	Identifier	count		412519	1					
ANR	413106	Argument	sizeof ( * mset [ j ] . me )		412519	2					
ANR	413107	SizeofExpression	sizeof ( * mset [ j ] . me )		412519	0					
ANR	413108	Sizeof	sizeof		412519	0					
ANR	413109	UnaryOperationExpression	* mset [ j ] . me		412519	1					
ANR	413110	UnaryOperator	*		412519	0					
ANR	413111	MemberAccess	mset [ j ] . me		412519	1					
ANR	413112	ArrayIndexing	mset [ j ]		412519	0					
ANR	413113	Identifier	mset		412519	0					
ANR	413114	Identifier	j		412519	1					
ANR	413115	Identifier	me		412519	1					
ANR	413116	Argument	apprentice_sort		412519	3					
ANR	413117	Identifier	apprentice_sort		412519	0					
ANR	413118	ExpressionStatement	"set_last_default ( ms , mset [ j ] . me , mset [ j ] . count )"	1303:2:30778:30825	412519	2	True				
ANR	413119	CallExpression	"set_last_default ( ms , mset [ j ] . me , mset [ j ] . count )"		412519	0					
ANR	413120	Callee	set_last_default		412519	0					
ANR	413121	Identifier	set_last_default		412519	0					
ANR	413122	ArgumentList	ms		412519	1					
ANR	413123	Argument	ms		412519	0					
ANR	413124	Identifier	ms		412519	0					
ANR	413125	Argument	mset [ j ] . me		412519	1					
ANR	413126	MemberAccess	mset [ j ] . me		412519	0					
ANR	413127	ArrayIndexing	mset [ j ]		412519	0					
ANR	413128	Identifier	mset		412519	0					
ANR	413129	Identifier	j		412519	1					
ANR	413130	Identifier	me		412519	1					
ANR	413131	Argument	mset [ j ] . count		412519	2					
ANR	413132	MemberAccess	mset [ j ] . count		412519	0					
ANR	413133	ArrayIndexing	mset [ j ]		412519	0					
ANR	413134	Identifier	mset		412519	0					
ANR	413135	Identifier	j		412519	1					
ANR	413136	Identifier	count		412519	1					
ANR	413137	IfStatement	"if ( coalesce_entries ( ms , mset [ j ] . me , mset [ j ] . count , & map -> magic [ j ] , & map -> nmagic [ j ] ) == - 1 )"		412519	3					
ANR	413138	Condition	"coalesce_entries ( ms , mset [ j ] . me , mset [ j ] . count , & map -> magic [ j ] , & map -> nmagic [ j ] ) == - 1"	1306:6:30885:30976	412519	0	True				
ANR	413139	EqualityExpression	"coalesce_entries ( ms , mset [ j ] . me , mset [ j ] . count , & map -> magic [ j ] , & map -> nmagic [ j ] ) == - 1"		412519	0		==			
ANR	413140	CallExpression	"coalesce_entries ( ms , mset [ j ] . me , mset [ j ] . count , & map -> magic [ j ] , & map -> nmagic [ j ] )"		412519	0					
ANR	413141	Callee	coalesce_entries		412519	0					
ANR	413142	Identifier	coalesce_entries		412519	0					
ANR	413143	ArgumentList	ms		412519	1					
ANR	413144	Argument	ms		412519	0					
ANR	413145	Identifier	ms		412519	0					
ANR	413146	Argument	mset [ j ] . me		412519	1					
ANR	413147	MemberAccess	mset [ j ] . me		412519	0					
ANR	413148	ArrayIndexing	mset [ j ]		412519	0					
ANR	413149	Identifier	mset		412519	0					
ANR	413150	Identifier	j		412519	1					
ANR	413151	Identifier	me		412519	1					
ANR	413152	Argument	mset [ j ] . count		412519	2					
ANR	413153	MemberAccess	mset [ j ] . count		412519	0					
ANR	413154	ArrayIndexing	mset [ j ]		412519	0					
ANR	413155	Identifier	mset		412519	0					
ANR	413156	Identifier	j		412519	1					
ANR	413157	Identifier	count		412519	1					
ANR	413158	Argument	& map -> magic [ j ]		412519	3					
ANR	413159	UnaryOperationExpression	& map -> magic [ j ]		412519	0					
ANR	413160	UnaryOperator	&		412519	0					
ANR	413161	ArrayIndexing	map -> magic [ j ]		412519	1					
ANR	413162	PtrMemberAccess	map -> magic		412519	0					
ANR	413163	Identifier	map		412519	0					
ANR	413164	Identifier	magic		412519	1					
ANR	413165	Identifier	j		412519	1					
ANR	413166	Argument	& map -> nmagic [ j ]		412519	4					
ANR	413167	UnaryOperationExpression	& map -> nmagic [ j ]		412519	0					
ANR	413168	UnaryOperator	&		412519	0					
ANR	413169	ArrayIndexing	map -> nmagic [ j ]		412519	1					
ANR	413170	PtrMemberAccess	map -> nmagic		412519	0					
ANR	413171	Identifier	map		412519	0					
ANR	413172	Identifier	nmagic		412519	1					
ANR	413173	Identifier	j		412519	1					
ANR	413174	UnaryOperationExpression	- 1		412519	1					
ANR	413175	UnaryOperator	-		412519	0					
ANR	413176	PrimaryExpression	1		412519	1					
ANR	413177	CompoundStatement		96:46:2470:2470	412519	1					
ANR	413178	ExpressionStatement	errs ++	1308:3:30984:30990	412519	0	True				
ANR	413179	PostIncDecOperationExpression	errs ++		412519	0					
ANR	413180	Identifier	errs		412519	0					
ANR	413181	IncDec	++		412519	1					
ANR	413182	GotoStatement	goto out ;	1309:3:30995:31003	412519	1	True				
ANR	413183	Identifier	out		412519	0					
ANR	413184	Label	out :	1313:0:31013:31016	412519	42	True				
ANR	413185	Identifier	out		412519	0					
ANR	413186	ForStatement	for ( j = 0 ; j < MAGIC_SETS ; j ++ )		412519	43					
ANR	413187	ForInit	j = 0 ;	1314:6:31024:31029	412519	0	True				
ANR	413188	AssignmentExpression	j = 0		412519	0		=			
ANR	413189	Identifier	j		412519	0					
ANR	413190	PrimaryExpression	0		412519	1					
ANR	413191	Condition	j < MAGIC_SETS	1314:13:31031:31044	412519	1	True				
ANR	413192	RelationalExpression	j < MAGIC_SETS		412519	0		<			
ANR	413193	Identifier	j		412519	0					
ANR	413194	Identifier	MAGIC_SETS		412519	1					
ANR	413195	PostIncDecOperationExpression	j ++	1314:29:31047:31049	412519	2	True				
ANR	413196	Identifier	j		412519	0					
ANR	413197	IncDec	++		412519	1					
ANR	413198	ExpressionStatement	"magic_entry_free ( mset [ j ] . me , mset [ j ] . count )"	1315:2:31054:31097	412519	3	True				
ANR	413199	CallExpression	"magic_entry_free ( mset [ j ] . me , mset [ j ] . count )"		412519	0					
ANR	413200	Callee	magic_entry_free		412519	0					
ANR	413201	Identifier	magic_entry_free		412519	0					
ANR	413202	ArgumentList	mset [ j ] . me		412519	1					
ANR	413203	Argument	mset [ j ] . me		412519	0					
ANR	413204	MemberAccess	mset [ j ] . me		412519	0					
ANR	413205	ArrayIndexing	mset [ j ]		412519	0					
ANR	413206	Identifier	mset		412519	0					
ANR	413207	Identifier	j		412519	1					
ANR	413208	Identifier	me		412519	1					
ANR	413209	Argument	mset [ j ] . count		412519	1					
ANR	413210	MemberAccess	mset [ j ] . count		412519	0					
ANR	413211	ArrayIndexing	mset [ j ]		412519	0					
ANR	413212	Identifier	mset		412519	0					
ANR	413213	Identifier	j		412519	1					
ANR	413214	Identifier	count		412519	1					
ANR	413215	IfStatement	if ( errs )		412519	44					
ANR	413216	Condition	errs	1317:5:31105:31108	412519	0	True				
ANR	413217	Identifier	errs		412519	0					
ANR	413218	CompoundStatement		106:11:2602:2602	412519	1					
ANR	413219	ExpressionStatement	apprentice_unmap ( map )	1318:2:31115:31136	412519	0	True				
ANR	413220	CallExpression	apprentice_unmap ( map )		412519	0					
ANR	413221	Callee	apprentice_unmap		412519	0					
ANR	413222	Identifier	apprentice_unmap		412519	0					
ANR	413223	ArgumentList	map		412519	1					
ANR	413224	Argument	map		412519	0					
ANR	413225	Identifier	map		412519	0					
ANR	413226	ReturnStatement	return NULL ;	1319:2:31140:31151	412519	1	True				
ANR	413227	Identifier	NULL		412519	0					
ANR	413228	ReturnStatement	return map ;	1321:1:31157:31167	412519	45	True				
ANR	413229	Identifier	map		412519	0					
ANR	413230	ReturnType	struct magic_map *		412519	1					
ANR	413231	Identifier	apprentice_load		412519	2					
ANR	413232	ParameterList	"struct magic_set * ms , const char * fn , int action"		412519	3					
ANR	413233	Parameter	struct magic_set * ms	1211:16:28458:28477	412519	0	True				
ANR	413234	ParameterType	struct magic_set *		412519	0					
ANR	413235	Identifier	ms		412519	1					
ANR	413236	Parameter	const char * fn	1211:38:28480:28493	412519	1	True				
ANR	413237	ParameterType	const char *		412519	0					
ANR	413238	Identifier	fn		412519	1					
ANR	413239	Parameter	int action	1211:54:28496:28505	412519	2	True				
ANR	413240	ParameterType	int		412519	0					
ANR	413241	Identifier	action		412519	1					
ANR	413242	CFGEntryNode	ENTRY		412519		True				
ANR	413243	CFGExitNode	EXIT		412519		True				
ANR	413244	Symbol	errs		412519						
ANR	413245	Symbol	* * * mset		412519						
ANR	413246	Symbol	MAGIC_SETS		412519						
ANR	413247	Symbol	* map		412519						
ANR	413248	Symbol	* filearr		412519						
ANR	413249	Symbol	& st		412519						
ANR	413250	Symbol	st . st_mode		412519						
ANR	413251	Symbol	FILE_CHECK		412519						
ANR	413252	Symbol	dir		412519						
ANR	413253	Symbol	usg_hdr		412519						
ANR	413254	Symbol	strlen		412519						
ANR	413255	Symbol	mset [ j ] . me [ i ] . mp		412519						
ANR	413256	Symbol	action		412519						
ANR	413257	Symbol	map -> nmagic		412519						
ANR	413258	Symbol	* * mset		412519						
ANR	413259	Symbol	* * j		412519						
ANR	413260	Symbol	& errs		412519						
ANR	413261	Symbol	* * i		412519						
ANR	413262	Symbol	maxfiles		412519						
ANR	413263	Symbol	NULL		412519						
ANR	413264	Symbol	php_sys_stat		412519						
ANR	413265	Symbol	ms		412519						
ANR	413266	Symbol	* mset		412519						
ANR	413267	Symbol	stderr		412519						
ANR	413268	Symbol	* * * j		412519						
ANR	413269	Symbol	files		412519						
ANR	413270	Symbol	mlen		412519						
ANR	413271	Symbol	ms -> flags		412519						
ANR	413272	Symbol	mset [ j ] . count		412519						
ANR	413273	Symbol	apprentice_sort		412519						
ANR	413274	Symbol	coalesce_entries		412519						
ANR	413275	Symbol	mset [ j ] . me [ i ] . mp -> cont_level		412519						
ANR	413276	Symbol	zend_stat		412519						
ANR	413277	Symbol	fn		412519						
ANR	413278	Symbol	* mset [ j ] . me [ i ] . mp		412519						
ANR	413279	Symbol	php_stream_readdir		412519						
ANR	413280	Symbol	cmpstrp		412519						
ANR	413281	Symbol	php_stream_opendir		412519						
ANR	413282	Symbol	* ms		412519						
ANR	413283	Symbol	set_text_binary		412519						
ANR	413284	Symbol	* * mset [ j ] . me		412519						
ANR	413285	Symbol	estrndup		412519						
ANR	413286	Symbol	map -> magic		412519						
ANR	413287	Symbol	* mset [ j ] . me		412519						
ANR	413288	Symbol	map		412519						
ANR	413289	Symbol	snprintf		412519						
ANR	413290	Symbol	st		412519						
ANR	413291	Symbol	d		412519						
ANR	413292	Symbol	mset		412519						
ANR	413293	Symbol	i		412519						
ANR	413294	Symbol	j		412519						
ANR	413295	Symbol	& d		412519						
ANR	413296	Symbol	filearr		412519						
ANR	413297	Symbol	mflen		412519						
ANR	413298	Symbol	S_ISREG		412519						
ANR	413299	Symbol	* i		412519						
ANR	413300	Symbol	mfn		412519						
ANR	413301	Symbol	REPORT_ERRORS		412519						
ANR	413302	Symbol	* j		412519						
ANR	413303	Symbol	MAGIC_CHECK		412519						
ANR	413304	Symbol	S_ISDIR		412519						
ANR	413305	Symbol	d . d_name		412519						
ANR	413306	Symbol	mset [ j ] . me		412519						
ANR	413307	Function	file_signextend	1327:10:31246:32718							
ANR	413308	FunctionDef	"file_signextend (struct magic_set * ms , struct magic * m , uint64_t v)"		413307	0					
ANR	413309	CompoundStatement		1329:0:31322:32718	413307	0					
ANR	413310	IfStatement	if ( ! ( m -> flag & UNSIGNED ) )		413307	0					
ANR	413311	Condition	! ( m -> flag & UNSIGNED )	1330:5:31329:31349	413307	0	True				
ANR	413312	UnaryOperationExpression	! ( m -> flag & UNSIGNED )		413307	0					
ANR	413313	UnaryOperator	!		413307	0					
ANR	413314	BitAndExpression	m -> flag & UNSIGNED		413307	1		&			
ANR	413315	PtrMemberAccess	m -> flag		413307	0					
ANR	413316	Identifier	m		413307	0					
ANR	413317	Identifier	flag		413307	1					
ANR	413318	Identifier	UNSIGNED		413307	1					
ANR	413319	CompoundStatement		2:28:29:29	413307	1					
ANR	413320	SwitchStatement	switch ( m -> type )		413307	0					
ANR	413321	Condition	m -> type	1331:9:31363:31369	413307	0	True				
ANR	413322	PtrMemberAccess	m -> type		413307	0					
ANR	413323	Identifier	m		413307	0					
ANR	413324	Identifier	type		413307	1					
ANR	413325	CompoundStatement		3:18:49:49	413307	1					
ANR	413326	Label	case FILE_BYTE :	1337:2:31525:31539	413307	0	True				
ANR	413327	Identifier	FILE_BYTE		413307	0					
ANR	413328	ExpressionStatement	v = ( signed char ) v	1338:3:31544:31563	413307	1	True				
ANR	413329	AssignmentExpression	v = ( signed char ) v		413307	0		=			
ANR	413330	Identifier	v		413307	0					
ANR	413331	CastExpression	( signed char ) v		413307	1					
ANR	413332	CastTarget	signed char		413307	0					
ANR	413333	Identifier	v		413307	1					
ANR	413334	BreakStatement	break ;	1339:3:31568:31573	413307	2	True				
ANR	413335	Label	case FILE_SHORT :	1340:2:31577:31592	413307	3	True				
ANR	413336	Identifier	FILE_SHORT		413307	0					
ANR	413337	Label	case FILE_BESHORT :	1341:2:31596:31613	413307	4	True				
ANR	413338	Identifier	FILE_BESHORT		413307	0					
ANR	413339	Label	case FILE_LESHORT :	1342:2:31617:31634	413307	5	True				
ANR	413340	Identifier	FILE_LESHORT		413307	0					
ANR	413341	ExpressionStatement	v = ( short ) v	1343:3:31639:31652	413307	6	True				
ANR	413342	AssignmentExpression	v = ( short ) v		413307	0		=			
ANR	413343	Identifier	v		413307	0					
ANR	413344	CastExpression	( short ) v		413307	1					
ANR	413345	CastTarget	short		413307	0					
ANR	413346	Identifier	v		413307	1					
ANR	413347	BreakStatement	break ;	1344:3:31657:31662	413307	7	True				
ANR	413348	Label	case FILE_DATE :	1345:2:31666:31680	413307	8	True				
ANR	413349	Identifier	FILE_DATE		413307	0					
ANR	413350	Label	case FILE_BEDATE :	1346:2:31684:31700	413307	9	True				
ANR	413351	Identifier	FILE_BEDATE		413307	0					
ANR	413352	Label	case FILE_LEDATE :	1347:2:31704:31720	413307	10	True				
ANR	413353	Identifier	FILE_LEDATE		413307	0					
ANR	413354	Label	case FILE_MEDATE :	1348:2:31724:31740	413307	11	True				
ANR	413355	Identifier	FILE_MEDATE		413307	0					
ANR	413356	Label	case FILE_LDATE :	1349:2:31744:31759	413307	12	True				
ANR	413357	Identifier	FILE_LDATE		413307	0					
ANR	413358	Label	case FILE_BELDATE :	1350:2:31763:31780	413307	13	True				
ANR	413359	Identifier	FILE_BELDATE		413307	0					
ANR	413360	Label	case FILE_LELDATE :	1351:2:31784:31801	413307	14	True				
ANR	413361	Identifier	FILE_LELDATE		413307	0					
ANR	413362	Label	case FILE_MELDATE :	1352:2:31805:31822	413307	15	True				
ANR	413363	Identifier	FILE_MELDATE		413307	0					
ANR	413364	Label	case FILE_LONG :	1353:2:31826:31840	413307	16	True				
ANR	413365	Identifier	FILE_LONG		413307	0					
ANR	413366	Label	case FILE_BELONG :	1354:2:31844:31860	413307	17	True				
ANR	413367	Identifier	FILE_BELONG		413307	0					
ANR	413368	Label	case FILE_LELONG :	1355:2:31864:31880	413307	18	True				
ANR	413369	Identifier	FILE_LELONG		413307	0					
ANR	413370	Label	case FILE_MELONG :	1356:2:31884:31900	413307	19	True				
ANR	413371	Identifier	FILE_MELONG		413307	0					
ANR	413372	Label	case FILE_FLOAT :	1357:2:31904:31919	413307	20	True				
ANR	413373	Identifier	FILE_FLOAT		413307	0					
ANR	413374	Label	case FILE_BEFLOAT :	1358:2:31923:31940	413307	21	True				
ANR	413375	Identifier	FILE_BEFLOAT		413307	0					
ANR	413376	Label	case FILE_LEFLOAT :	1359:2:31944:31961	413307	22	True				
ANR	413377	Identifier	FILE_LEFLOAT		413307	0					
ANR	413378	ExpressionStatement	v = ( int32_t ) v	1360:3:31966:31981	413307	23	True				
ANR	413379	AssignmentExpression	v = ( int32_t ) v		413307	0		=			
ANR	413380	Identifier	v		413307	0					
ANR	413381	CastExpression	( int32_t ) v		413307	1					
ANR	413382	CastTarget	int32_t		413307	0					
ANR	413383	Identifier	v		413307	1					
ANR	413384	BreakStatement	break ;	1361:3:31986:31991	413307	24	True				
ANR	413385	Label	case FILE_QUAD :	1362:2:31995:32009	413307	25	True				
ANR	413386	Identifier	FILE_QUAD		413307	0					
ANR	413387	Label	case FILE_BEQUAD :	1363:2:32013:32029	413307	26	True				
ANR	413388	Identifier	FILE_BEQUAD		413307	0					
ANR	413389	Label	case FILE_LEQUAD :	1364:2:32033:32049	413307	27	True				
ANR	413390	Identifier	FILE_LEQUAD		413307	0					
ANR	413391	Label	case FILE_QDATE :	1365:2:32053:32068	413307	28	True				
ANR	413392	Identifier	FILE_QDATE		413307	0					
ANR	413393	Label	case FILE_QLDATE :	1366:2:32072:32088	413307	29	True				
ANR	413394	Identifier	FILE_QLDATE		413307	0					
ANR	413395	Label	case FILE_QWDATE :	1367:2:32092:32108	413307	30	True				
ANR	413396	Identifier	FILE_QWDATE		413307	0					
ANR	413397	Label	case FILE_BEQDATE :	1368:2:32112:32129	413307	31	True				
ANR	413398	Identifier	FILE_BEQDATE		413307	0					
ANR	413399	Label	case FILE_BEQLDATE :	1369:2:32133:32151	413307	32	True				
ANR	413400	Identifier	FILE_BEQLDATE		413307	0					
ANR	413401	Label	case FILE_BEQWDATE :	1370:2:32155:32173	413307	33	True				
ANR	413402	Identifier	FILE_BEQWDATE		413307	0					
ANR	413403	Label	case FILE_LEQDATE :	1371:2:32177:32194	413307	34	True				
ANR	413404	Identifier	FILE_LEQDATE		413307	0					
ANR	413405	Label	case FILE_LEQLDATE :	1372:2:32198:32216	413307	35	True				
ANR	413406	Identifier	FILE_LEQLDATE		413307	0					
ANR	413407	Label	case FILE_LEQWDATE :	1373:2:32220:32238	413307	36	True				
ANR	413408	Identifier	FILE_LEQWDATE		413307	0					
ANR	413409	Label	case FILE_DOUBLE :	1374:2:32242:32258	413307	37	True				
ANR	413410	Identifier	FILE_DOUBLE		413307	0					
ANR	413411	Label	case FILE_BEDOUBLE :	1375:2:32262:32280	413307	38	True				
ANR	413412	Identifier	FILE_BEDOUBLE		413307	0					
ANR	413413	Label	case FILE_LEDOUBLE :	1376:2:32284:32302	413307	39	True				
ANR	413414	Identifier	FILE_LEDOUBLE		413307	0					
ANR	413415	ExpressionStatement	v = ( int64_t ) v	1377:3:32307:32322	413307	40	True				
ANR	413416	AssignmentExpression	v = ( int64_t ) v		413307	0		=			
ANR	413417	Identifier	v		413307	0					
ANR	413418	CastExpression	( int64_t ) v		413307	1					
ANR	413419	CastTarget	int64_t		413307	0					
ANR	413420	Identifier	v		413307	1					
ANR	413421	BreakStatement	break ;	1378:3:32327:32332	413307	41	True				
ANR	413422	Label	case FILE_STRING :	1379:2:32336:32352	413307	42	True				
ANR	413423	Identifier	FILE_STRING		413307	0					
ANR	413424	Label	case FILE_PSTRING :	1380:2:32356:32373	413307	43	True				
ANR	413425	Identifier	FILE_PSTRING		413307	0					
ANR	413426	Label	case FILE_BESTRING16 :	1381:2:32377:32397	413307	44	True				
ANR	413427	Identifier	FILE_BESTRING16		413307	0					
ANR	413428	Label	case FILE_LESTRING16 :	1382:2:32401:32421	413307	45	True				
ANR	413429	Identifier	FILE_LESTRING16		413307	0					
ANR	413430	Label	case FILE_REGEX :	1383:2:32425:32440	413307	46	True				
ANR	413431	Identifier	FILE_REGEX		413307	0					
ANR	413432	Label	case FILE_SEARCH :	1384:2:32444:32460	413307	47	True				
ANR	413433	Identifier	FILE_SEARCH		413307	0					
ANR	413434	Label	case FILE_DEFAULT :	1385:2:32464:32481	413307	48	True				
ANR	413435	Identifier	FILE_DEFAULT		413307	0					
ANR	413436	Label	case FILE_INDIRECT :	1386:2:32485:32503	413307	49	True				
ANR	413437	Identifier	FILE_INDIRECT		413307	0					
ANR	413438	Label	case FILE_NAME :	1387:2:32507:32521	413307	50	True				
ANR	413439	Identifier	FILE_NAME		413307	0					
ANR	413440	Label	case FILE_USE :	1388:2:32525:32538	413307	51	True				
ANR	413441	Identifier	FILE_USE		413307	0					
ANR	413442	Label	case FILE_CLEAR :	1389:2:32542:32557	413307	52	True				
ANR	413443	Identifier	FILE_CLEAR		413307	0					
ANR	413444	BreakStatement	break ;	1390:3:32562:32567	413307	53	True				
ANR	413445	Label	default :	1391:2:32571:32578	413307	54	True				
ANR	413446	Identifier	default		413307	0					
ANR	413447	IfStatement	if ( ms -> flags & MAGIC_CHECK )		413307	55					
ANR	413448	Condition	ms -> flags & MAGIC_CHECK	1392:7:32587:32609	413307	0	True				
ANR	413449	BitAndExpression	ms -> flags & MAGIC_CHECK		413307	0		&			
ANR	413450	PtrMemberAccess	ms -> flags		413307	0					
ANR	413451	Identifier	ms		413307	0					
ANR	413452	Identifier	flags		413307	1					
ANR	413453	Identifier	MAGIC_CHECK		413307	1					
ANR	413454	ExpressionStatement	"file_magwarn ( ms , ""cannot happen: m->type=%d\\n"" , m -> type )"	1393:7:32619:32683	413307	1	True				
ANR	413455	CallExpression	"file_magwarn ( ms , ""cannot happen: m->type=%d\\n"" , m -> type )"		413307	0					
ANR	413456	Callee	file_magwarn		413307	0					
ANR	413457	Identifier	file_magwarn		413307	0					
ANR	413458	ArgumentList	ms		413307	1					
ANR	413459	Argument	ms		413307	0					
ANR	413460	Identifier	ms		413307	0					
ANR	413461	Argument	"""cannot happen: m->type=%d\\n"""		413307	1					
ANR	413462	PrimaryExpression	"""cannot happen: m->type=%d\\n"""		413307	0					
ANR	413463	Argument	m -> type		413307	2					
ANR	413464	PtrMemberAccess	m -> type		413307	0					
ANR	413465	Identifier	m		413307	0					
ANR	413466	Identifier	type		413307	1					
ANR	413467	ReturnStatement	return ~0U ;	1395:3:32688:32698	413307	56	True				
ANR	413468	Identifier	~0U		413307	0					
ANR	413469	ReturnStatement	return v ;	1398:1:32708:32716	413307	1	True				
ANR	413470	Identifier	v		413307	0					
ANR	413471	ReturnType	uint64_t		413307	1					
ANR	413472	Identifier	file_signextend		413307	2					
ANR	413473	ParameterList	"struct magic_set * ms , struct magic * m , uint64_t v"		413307	3					
ANR	413474	Parameter	struct magic_set * ms	1328:16:31271:31290	413307	0	True				
ANR	413475	ParameterType	struct magic_set *		413307	0					
ANR	413476	Identifier	ms		413307	1					
ANR	413477	Parameter	struct magic * m	1328:38:31293:31307	413307	1	True				
ANR	413478	ParameterType	struct magic *		413307	0					
ANR	413479	Identifier	m		413307	1					
ANR	413480	Parameter	uint64_t v	1328:55:31310:31319	413307	2	True				
ANR	413481	ParameterType	uint64_t		413307	0					
ANR	413482	Identifier	v		413307	1					
ANR	413483	CFGEntryNode	ENTRY		413307		True				
ANR	413484	CFGExitNode	EXIT		413307		True				
ANR	413485	Symbol	m -> type		413307						
ANR	413486	Symbol	~0U		413307						
ANR	413487	Symbol	ms		413307						
ANR	413488	Symbol	v		413307						
ANR	413489	Symbol	* m		413307						
ANR	413490	Symbol	UNSIGNED		413307						
ANR	413491	Symbol	m -> flag		413307						
ANR	413492	Symbol	MAGIC_CHECK		413307						
ANR	413493	Symbol	ms -> flags		413307						
ANR	413494	Symbol	m		413307						
ANR	413495	Symbol	* ms		413307						
ANR	413496	Function	string_modifier_check	1401:8:32729:34201							
ANR	413497	FunctionDef	"string_modifier_check (struct magic_set * ms , struct magic * m)"		413496	0					
ANR	413498	CompoundStatement		1403:0:32794:34201	413496	0					
ANR	413499	IfStatement	if ( ( ms -> flags & MAGIC_CHECK ) == 0 )		413496	0					
ANR	413500	Condition	( ms -> flags & MAGIC_CHECK ) == 0	1404:5:32801:32830	413496	0	True				
ANR	413501	EqualityExpression	( ms -> flags & MAGIC_CHECK ) == 0		413496	0		==			
ANR	413502	BitAndExpression	ms -> flags & MAGIC_CHECK		413496	0		&			
ANR	413503	PtrMemberAccess	ms -> flags		413496	0					
ANR	413504	Identifier	ms		413496	0					
ANR	413505	Identifier	flags		413496	1					
ANR	413506	Identifier	MAGIC_CHECK		413496	1					
ANR	413507	PrimaryExpression	0		413496	1					
ANR	413508	ReturnStatement	return 0 ;	1405:2:32835:32843	413496	1	True				
ANR	413509	PrimaryExpression	0		413496	0					
ANR	413510	IfStatement	if ( ( m -> type != FILE_REGEX || ( m -> str_flags & REGEX_LINE_COUNT ) == 0 ) && ( m -> type != FILE_PSTRING && ( m -> str_flags & PSTRING_LEN ) != 0 ) )		413496	1					
ANR	413511	Condition	( m -> type != FILE_REGEX || ( m -> str_flags & REGEX_LINE_COUNT ) == 0 ) && ( m -> type != FILE_PSTRING && ( m -> str_flags & PSTRING_LEN ) != 0 )	1407:5:32851:32986	413496	0	True				
ANR	413512	AndExpression	( m -> type != FILE_REGEX || ( m -> str_flags & REGEX_LINE_COUNT ) == 0 ) && ( m -> type != FILE_PSTRING && ( m -> str_flags & PSTRING_LEN ) != 0 )		413496	0		&&			
ANR	413513	OrExpression	m -> type != FILE_REGEX || ( m -> str_flags & REGEX_LINE_COUNT ) == 0		413496	0		||			
ANR	413514	EqualityExpression	m -> type != FILE_REGEX		413496	0		!=			
ANR	413515	PtrMemberAccess	m -> type		413496	0					
ANR	413516	Identifier	m		413496	0					
ANR	413517	Identifier	type		413496	1					
ANR	413518	Identifier	FILE_REGEX		413496	1					
ANR	413519	EqualityExpression	( m -> str_flags & REGEX_LINE_COUNT ) == 0		413496	1		==			
ANR	413520	BitAndExpression	m -> str_flags & REGEX_LINE_COUNT		413496	0		&			
ANR	413521	PtrMemberAccess	m -> str_flags		413496	0					
ANR	413522	Identifier	m		413496	0					
ANR	413523	Identifier	str_flags		413496	1					
ANR	413524	Identifier	REGEX_LINE_COUNT		413496	1					
ANR	413525	PrimaryExpression	0		413496	1					
ANR	413526	AndExpression	m -> type != FILE_PSTRING && ( m -> str_flags & PSTRING_LEN ) != 0		413496	1		&&			
ANR	413527	EqualityExpression	m -> type != FILE_PSTRING		413496	0		!=			
ANR	413528	PtrMemberAccess	m -> type		413496	0					
ANR	413529	Identifier	m		413496	0					
ANR	413530	Identifier	type		413496	1					
ANR	413531	Identifier	FILE_PSTRING		413496	1					
ANR	413532	EqualityExpression	( m -> str_flags & PSTRING_LEN ) != 0		413496	1		!=			
ANR	413533	BitAndExpression	m -> str_flags & PSTRING_LEN		413496	0		&			
ANR	413534	PtrMemberAccess	m -> str_flags		413496	0					
ANR	413535	Identifier	m		413496	0					
ANR	413536	Identifier	str_flags		413496	1					
ANR	413537	Identifier	PSTRING_LEN		413496	1					
ANR	413538	PrimaryExpression	0		413496	1					
ANR	413539	CompoundStatement		6:69:194:194	413496	1					
ANR	413540	ExpressionStatement	"file_magwarn ( ms , ""'/BHhLl' modifiers are only allowed for pascal strings\\n"" )"	1409:2:32993:33075	413496	0	True				
ANR	413541	CallExpression	"file_magwarn ( ms , ""'/BHhLl' modifiers are only allowed for pascal strings\\n"" )"		413496	0					
ANR	413542	Callee	file_magwarn		413496	0					
ANR	413543	Identifier	file_magwarn		413496	0					
ANR	413544	ArgumentList	ms		413496	1					
ANR	413545	Argument	ms		413496	0					
ANR	413546	Identifier	ms		413496	0					
ANR	413547	Argument	"""'/BHhLl' modifiers are only allowed for pascal strings\\n"""		413496	1					
ANR	413548	PrimaryExpression	"""'/BHhLl' modifiers are only allowed for pascal strings\\n"""		413496	0					
ANR	413549	ReturnStatement	return - 1 ;	1411:2:33079:33088	413496	1	True				
ANR	413550	UnaryOperationExpression	- 1		413496	0					
ANR	413551	UnaryOperator	-		413496	0					
ANR	413552	PrimaryExpression	1		413496	1					
ANR	413553	SwitchStatement	switch ( m -> type )		413496	2					
ANR	413554	Condition	m -> type	1413:9:33102:33108	413496	0	True				
ANR	413555	PtrMemberAccess	m -> type		413496	0					
ANR	413556	Identifier	m		413496	0					
ANR	413557	Identifier	type		413496	1					
ANR	413558	CompoundStatement		11:18:316:316	413496	1					
ANR	413559	Label	case FILE_BESTRING16 :	1414:1:33114:33134	413496	0	True				
ANR	413560	Identifier	FILE_BESTRING16		413496	0					
ANR	413561	Label	case FILE_LESTRING16 :	1415:1:33137:33157	413496	1	True				
ANR	413562	Identifier	FILE_LESTRING16		413496	0					
ANR	413563	IfStatement	if ( m -> str_flags != 0 )		413496	2					
ANR	413564	Condition	m -> str_flags != 0	1416:6:33165:33181	413496	0	True				
ANR	413565	EqualityExpression	m -> str_flags != 0		413496	0		!=			
ANR	413566	PtrMemberAccess	m -> str_flags		413496	0					
ANR	413567	Identifier	m		413496	0					
ANR	413568	Identifier	str_flags		413496	1					
ANR	413569	PrimaryExpression	0		413496	1					
ANR	413570	CompoundStatement		14:25:389:389	413496	1					
ANR	413571	ExpressionStatement	"file_magwarn ( ms , ""no modifiers allowed for 16-bit strings\\n"" )"	1417:3:33189:33257	413496	0	True				
ANR	413572	CallExpression	"file_magwarn ( ms , ""no modifiers allowed for 16-bit strings\\n"" )"		413496	0					
ANR	413573	Callee	file_magwarn		413496	0					
ANR	413574	Identifier	file_magwarn		413496	0					
ANR	413575	ArgumentList	ms		413496	1					
ANR	413576	Argument	ms		413496	0					
ANR	413577	Identifier	ms		413496	0					
ANR	413578	Argument	"""no modifiers allowed for 16-bit strings\\n"""		413496	1					
ANR	413579	PrimaryExpression	"""no modifiers allowed for 16-bit strings\\n"""		413496	0					
ANR	413580	ReturnStatement	return - 1 ;	1419:3:33262:33271	413496	1	True				
ANR	413581	UnaryOperationExpression	- 1		413496	0					
ANR	413582	UnaryOperator	-		413496	0					
ANR	413583	PrimaryExpression	1		413496	1					
ANR	413584	BreakStatement	break ;	1421:2:33279:33284	413496	3	True				
ANR	413585	Label	case FILE_STRING :	1422:1:33287:33303	413496	4	True				
ANR	413586	Identifier	FILE_STRING		413496	0					
ANR	413587	Label	case FILE_PSTRING :	1423:1:33306:33323	413496	5	True				
ANR	413588	Identifier	FILE_PSTRING		413496	0					
ANR	413589	IfStatement	if ( ( m -> str_flags & REGEX_OFFSET_START ) != 0 )		413496	6					
ANR	413590	Condition	( m -> str_flags & REGEX_OFFSET_START ) != 0	1424:6:33331:33370	413496	0	True				
ANR	413591	EqualityExpression	( m -> str_flags & REGEX_OFFSET_START ) != 0		413496	0		!=			
ANR	413592	BitAndExpression	m -> str_flags & REGEX_OFFSET_START		413496	0		&			
ANR	413593	PtrMemberAccess	m -> str_flags		413496	0					
ANR	413594	Identifier	m		413496	0					
ANR	413595	Identifier	str_flags		413496	1					
ANR	413596	Identifier	REGEX_OFFSET_START		413496	1					
ANR	413597	PrimaryExpression	0		413496	1					
ANR	413598	CompoundStatement		22:48:578:578	413496	1					
ANR	413599	ExpressionStatement	"file_magwarn ( ms , ""'/%c' only allowed on regex and search\\n"" , CHAR_REGEX_OFFSET_START )"	1425:3:33378:33477	413496	0	True				
ANR	413600	CallExpression	"file_magwarn ( ms , ""'/%c' only allowed on regex and search\\n"" , CHAR_REGEX_OFFSET_START )"		413496	0					
ANR	413601	Callee	file_magwarn		413496	0					
ANR	413602	Identifier	file_magwarn		413496	0					
ANR	413603	ArgumentList	ms		413496	1					
ANR	413604	Argument	ms		413496	0					
ANR	413605	Identifier	ms		413496	0					
ANR	413606	Argument	"""'/%c' only allowed on regex and search\\n"""		413496	1					
ANR	413607	PrimaryExpression	"""'/%c' only allowed on regex and search\\n"""		413496	0					
ANR	413608	Argument	CHAR_REGEX_OFFSET_START		413496	2					
ANR	413609	Identifier	CHAR_REGEX_OFFSET_START		413496	0					
ANR	413610	ReturnStatement	return - 1 ;	1428:3:33482:33491	413496	1	True				
ANR	413611	UnaryOperationExpression	- 1		413496	0					
ANR	413612	UnaryOperator	-		413496	0					
ANR	413613	PrimaryExpression	1		413496	1					
ANR	413614	BreakStatement	break ;	1430:2:33499:33504	413496	7	True				
ANR	413615	Label	case FILE_SEARCH :	1431:1:33507:33523	413496	8	True				
ANR	413616	Identifier	FILE_SEARCH		413496	0					
ANR	413617	IfStatement	if ( m -> str_range == 0 )		413496	9					
ANR	413618	Condition	m -> str_range == 0	1432:6:33531:33547	413496	0	True				
ANR	413619	EqualityExpression	m -> str_range == 0		413496	0		==			
ANR	413620	PtrMemberAccess	m -> str_range		413496	0					
ANR	413621	Identifier	m		413496	0					
ANR	413622	Identifier	str_range		413496	1					
ANR	413623	PrimaryExpression	0		413496	1					
ANR	413624	CompoundStatement		30:25:755:755	413496	1					
ANR	413625	ExpressionStatement	"file_magwarn ( ms , ""missing range; defaulting to %d\\n"" , STRING_DEFAULT_RANGE )"	1433:3:33555:33665	413496	0	True				
ANR	413626	CallExpression	"file_magwarn ( ms , ""missing range; defaulting to %d\\n"" , STRING_DEFAULT_RANGE )"		413496	0					
ANR	413627	Callee	file_magwarn		413496	0					
ANR	413628	Identifier	file_magwarn		413496	0					
ANR	413629	ArgumentList	ms		413496	1					
ANR	413630	Argument	ms		413496	0					
ANR	413631	Identifier	ms		413496	0					
ANR	413632	Argument	"""missing range; defaulting to %d\\n"""		413496	1					
ANR	413633	PrimaryExpression	"""missing range; defaulting to %d\\n"""		413496	0					
ANR	413634	Argument	STRING_DEFAULT_RANGE		413496	2					
ANR	413635	Identifier	STRING_DEFAULT_RANGE		413496	0					
ANR	413636	ExpressionStatement	m -> str_range = STRING_DEFAULT_RANGE	1436:3:33670:33705	413496	1	True				
ANR	413637	AssignmentExpression	m -> str_range = STRING_DEFAULT_RANGE		413496	0		=			
ANR	413638	PtrMemberAccess	m -> str_range		413496	0					
ANR	413639	Identifier	m		413496	0					
ANR	413640	Identifier	str_range		413496	1					
ANR	413641	Identifier	STRING_DEFAULT_RANGE		413496	1					
ANR	413642	ReturnStatement	return - 1 ;	1437:3:33710:33719	413496	2	True				
ANR	413643	UnaryOperationExpression	- 1		413496	0					
ANR	413644	UnaryOperator	-		413496	0					
ANR	413645	PrimaryExpression	1		413496	1					
ANR	413646	BreakStatement	break ;	1439:2:33727:33732	413496	10	True				
ANR	413647	Label	case FILE_REGEX :	1440:1:33735:33750	413496	11	True				
ANR	413648	Identifier	FILE_REGEX		413496	0					
ANR	413649	IfStatement	if ( ( m -> str_flags & STRING_COMPACT_WHITESPACE ) != 0 )		413496	12					
ANR	413650	Condition	( m -> str_flags & STRING_COMPACT_WHITESPACE ) != 0	1441:6:33758:33804	413496	0	True				
ANR	413651	EqualityExpression	( m -> str_flags & STRING_COMPACT_WHITESPACE ) != 0		413496	0		!=			
ANR	413652	BitAndExpression	m -> str_flags & STRING_COMPACT_WHITESPACE		413496	0		&			
ANR	413653	PtrMemberAccess	m -> str_flags		413496	0					
ANR	413654	Identifier	m		413496	0					
ANR	413655	Identifier	str_flags		413496	1					
ANR	413656	Identifier	STRING_COMPACT_WHITESPACE		413496	1					
ANR	413657	PrimaryExpression	0		413496	1					
ANR	413658	CompoundStatement		39:55:1012:1012	413496	1					
ANR	413659	ExpressionStatement	"file_magwarn ( ms , ""'/%c' not allowed on regex\\n"" , CHAR_COMPACT_WHITESPACE )"	1442:3:33812:33892	413496	0	True				
ANR	413660	CallExpression	"file_magwarn ( ms , ""'/%c' not allowed on regex\\n"" , CHAR_COMPACT_WHITESPACE )"		413496	0					
ANR	413661	Callee	file_magwarn		413496	0					
ANR	413662	Identifier	file_magwarn		413496	0					
ANR	413663	ArgumentList	ms		413496	1					
ANR	413664	Argument	ms		413496	0					
ANR	413665	Identifier	ms		413496	0					
ANR	413666	Argument	"""'/%c' not allowed on regex\\n"""		413496	1					
ANR	413667	PrimaryExpression	"""'/%c' not allowed on regex\\n"""		413496	0					
ANR	413668	Argument	CHAR_COMPACT_WHITESPACE		413496	2					
ANR	413669	Identifier	CHAR_COMPACT_WHITESPACE		413496	0					
ANR	413670	ReturnStatement	return - 1 ;	1444:3:33897:33906	413496	1	True				
ANR	413671	UnaryOperationExpression	- 1		413496	0					
ANR	413672	UnaryOperator	-		413496	0					
ANR	413673	PrimaryExpression	1		413496	1					
ANR	413674	IfStatement	if ( ( m -> str_flags & STRING_COMPACT_OPTIONAL_WHITESPACE ) != 0 )		413496	13					
ANR	413675	Condition	( m -> str_flags & STRING_COMPACT_OPTIONAL_WHITESPACE ) != 0	1446:6:33918:33973	413496	0	True				
ANR	413676	EqualityExpression	( m -> str_flags & STRING_COMPACT_OPTIONAL_WHITESPACE ) != 0		413496	0		!=			
ANR	413677	BitAndExpression	m -> str_flags & STRING_COMPACT_OPTIONAL_WHITESPACE		413496	0		&			
ANR	413678	PtrMemberAccess	m -> str_flags		413496	0					
ANR	413679	Identifier	m		413496	0					
ANR	413680	Identifier	str_flags		413496	1					
ANR	413681	Identifier	STRING_COMPACT_OPTIONAL_WHITESPACE		413496	1					
ANR	413682	PrimaryExpression	0		413496	1					
ANR	413683	CompoundStatement		44:64:1181:1181	413496	1					
ANR	413684	ExpressionStatement	"file_magwarn ( ms , ""'/%c' not allowed on regex\\n"" , CHAR_COMPACT_OPTIONAL_WHITESPACE )"	1447:3:33981:34070	413496	0	True				
ANR	413685	CallExpression	"file_magwarn ( ms , ""'/%c' not allowed on regex\\n"" , CHAR_COMPACT_OPTIONAL_WHITESPACE )"		413496	0					
ANR	413686	Callee	file_magwarn		413496	0					
ANR	413687	Identifier	file_magwarn		413496	0					
ANR	413688	ArgumentList	ms		413496	1					
ANR	413689	Argument	ms		413496	0					
ANR	413690	Identifier	ms		413496	0					
ANR	413691	Argument	"""'/%c' not allowed on regex\\n"""		413496	1					
ANR	413692	PrimaryExpression	"""'/%c' not allowed on regex\\n"""		413496	0					
ANR	413693	Argument	CHAR_COMPACT_OPTIONAL_WHITESPACE		413496	2					
ANR	413694	Identifier	CHAR_COMPACT_OPTIONAL_WHITESPACE		413496	0					
ANR	413695	ReturnStatement	return - 1 ;	1449:3:34075:34084	413496	1	True				
ANR	413696	UnaryOperationExpression	- 1		413496	0					
ANR	413697	UnaryOperator	-		413496	0					
ANR	413698	PrimaryExpression	1		413496	1					
ANR	413699	BreakStatement	break ;	1451:2:34092:34097	413496	14	True				
ANR	413700	Label	default :	1452:1:34100:34107	413496	15	True				
ANR	413701	Identifier	default		413496	0					
ANR	413702	ExpressionStatement	"file_magwarn ( ms , ""coding error: m->type=%d\\n"" , m -> type )"	1453:2:34111:34172	413496	16	True				
ANR	413703	CallExpression	"file_magwarn ( ms , ""coding error: m->type=%d\\n"" , m -> type )"		413496	0					
ANR	413704	Callee	file_magwarn		413496	0					
ANR	413705	Identifier	file_magwarn		413496	0					
ANR	413706	ArgumentList	ms		413496	1					
ANR	413707	Argument	ms		413496	0					
ANR	413708	Identifier	ms		413496	0					
ANR	413709	Argument	"""coding error: m->type=%d\\n"""		413496	1					
ANR	413710	PrimaryExpression	"""coding error: m->type=%d\\n"""		413496	0					
ANR	413711	Argument	m -> type		413496	2					
ANR	413712	PtrMemberAccess	m -> type		413496	0					
ANR	413713	Identifier	m		413496	0					
ANR	413714	Identifier	type		413496	1					
ANR	413715	ReturnStatement	return - 1 ;	1455:2:34176:34185	413496	17	True				
ANR	413716	UnaryOperationExpression	- 1		413496	0					
ANR	413717	UnaryOperator	-		413496	0					
ANR	413718	PrimaryExpression	1		413496	1					
ANR	413719	ReturnStatement	return 0 ;	1457:1:34191:34199	413496	3	True				
ANR	413720	PrimaryExpression	0		413496	0					
ANR	413721	ReturnType	int		413496	1					
ANR	413722	Identifier	string_modifier_check		413496	2					
ANR	413723	ParameterList	"struct magic_set * ms , struct magic * m"		413496	3					
ANR	413724	Parameter	struct magic_set * ms	1402:22:32755:32774	413496	0	True				
ANR	413725	ParameterType	struct magic_set *		413496	0					
ANR	413726	Identifier	ms		413496	1					
ANR	413727	Parameter	struct magic * m	1402:44:32777:32791	413496	1	True				
ANR	413728	ParameterType	struct magic *		413496	0					
ANR	413729	Identifier	m		413496	1					
ANR	413730	CFGEntryNode	ENTRY		413496		True				
ANR	413731	CFGExitNode	EXIT		413496		True				
ANR	413732	Symbol	FILE_REGEX		413496						
ANR	413733	Symbol	PSTRING_LEN		413496						
ANR	413734	Symbol	STRING_COMPACT_WHITESPACE		413496						
ANR	413735	Symbol	ms		413496						
ANR	413736	Symbol	REGEX_OFFSET_START		413496						
ANR	413737	Symbol	CHAR_COMPACT_OPTIONAL_WHITESPACE		413496						
ANR	413738	Symbol	m -> str_flags		413496						
ANR	413739	Symbol	FILE_PSTRING		413496						
ANR	413740	Symbol	m -> str_range		413496						
ANR	413741	Symbol	STRING_COMPACT_OPTIONAL_WHITESPACE		413496						
ANR	413742	Symbol	m		413496						
ANR	413743	Symbol	STRING_DEFAULT_RANGE		413496						
ANR	413744	Symbol	* ms		413496						
ANR	413745	Symbol	REGEX_LINE_COUNT		413496						
ANR	413746	Symbol	m -> type		413496						
ANR	413747	Symbol	* m		413496						
ANR	413748	Symbol	MAGIC_CHECK		413496						
ANR	413749	Symbol	CHAR_COMPACT_WHITESPACE		413496						
ANR	413750	Symbol	ms -> flags		413496						
ANR	413751	Symbol	CHAR_REGEX_OFFSET_START		413496						
ANR	413752	Function	get_op	1460:8:34212:34541							
ANR	413753	FunctionDef	get_op (char c)		413752	0					
ANR	413754	CompoundStatement		1462:0:34231:34541	413752	0					
ANR	413755	SwitchStatement	switch ( c )		413752	0					
ANR	413756	Condition	c	1463:9:34242:34242	413752	0	True				
ANR	413757	Identifier	c		413752	0					
ANR	413758	CompoundStatement		2:12:13:13	413752	1					
ANR	413759	Label	case '&' :	1464:1:34248:34256	413752	0	True				
ANR	413760	ReturnStatement	return FILE_OPAND ;	1465:2:34260:34277	413752	1	True				
ANR	413761	Identifier	FILE_OPAND		413752	0					
ANR	413762	Label	case '|' :	1466:1:34280:34288	413752	2	True				
ANR	413763	ReturnStatement	return FILE_OPOR ;	1467:2:34292:34308	413752	3	True				
ANR	413764	Identifier	FILE_OPOR		413752	0					
ANR	413765	Label	case '^' :	1468:1:34311:34319	413752	4	True				
ANR	413766	ReturnStatement	return FILE_OPXOR ;	1469:2:34323:34340	413752	5	True				
ANR	413767	Identifier	FILE_OPXOR		413752	0					
ANR	413768	Label	case '+' :	1470:1:34343:34351	413752	6	True				
ANR	413769	ReturnStatement	return FILE_OPADD ;	1471:2:34355:34372	413752	7	True				
ANR	413770	Identifier	FILE_OPADD		413752	0					
ANR	413771	Label	case '-' :	1472:1:34375:34383	413752	8	True				
ANR	413772	ReturnStatement	return FILE_OPMINUS ;	1473:2:34387:34406	413752	9	True				
ANR	413773	Identifier	FILE_OPMINUS		413752	0					
ANR	413774	Label	case '*' :	1474:1:34409:34417	413752	10	True				
ANR	413775	ReturnStatement	return FILE_OPMULTIPLY ;	1475:2:34421:34443	413752	11	True				
ANR	413776	Identifier	FILE_OPMULTIPLY		413752	0					
ANR	413777	Label	case '/' :	1476:1:34446:34454	413752	12	True				
ANR	413778	ReturnStatement	return FILE_OPDIVIDE ;	1477:2:34458:34478	413752	13	True				
ANR	413779	Identifier	FILE_OPDIVIDE		413752	0					
ANR	413780	Label	case '%' :	1478:1:34481:34489	413752	14	True				
ANR	413781	ReturnStatement	return FILE_OPMODULO ;	1479:2:34493:34513	413752	15	True				
ANR	413782	Identifier	FILE_OPMODULO		413752	0					
ANR	413783	Label	default :	1480:1:34516:34523	413752	16	True				
ANR	413784	Identifier	default		413752	0					
ANR	413785	ReturnStatement	return - 1 ;	1481:2:34527:34536	413752	17	True				
ANR	413786	UnaryOperationExpression	- 1		413752	0					
ANR	413787	UnaryOperator	-		413752	0					
ANR	413788	PrimaryExpression	1		413752	1					
ANR	413789	ReturnType	int		413752	1					
ANR	413790	Identifier	get_op		413752	2					
ANR	413791	ParameterList	char c		413752	3					
ANR	413792	Parameter	char c	1461:7:34223:34228	413752	0	True				
ANR	413793	ParameterType	char		413752	0					
ANR	413794	Identifier	c		413752	1					
ANR	413795	CFGEntryNode	ENTRY		413752		True				
ANR	413796	CFGExitNode	EXIT		413752		True				
ANR	413797	Symbol	c		413752						
ANR	413798	Symbol	FILE_OPOR		413752						
ANR	413799	Symbol	FILE_OPMINUS		413752						
ANR	413800	Symbol	FILE_OPMODULO		413752						
ANR	413801	Symbol	FILE_OPMULTIPLY		413752						
ANR	413802	Symbol	FILE_OPADD		413752						
ANR	413803	Symbol	FILE_OPAND		413752						
ANR	413804	Symbol	FILE_OPDIVIDE		413752						
ANR	413805	Symbol	FILE_OPXOR		413752						
ANR	413806	Function	get_cond	1486:8:34579:35044							
ANR	413807	FunctionDef	"get_cond (const char * l , const char * * t)"		413806	0					
ANR	413808	CompoundStatement		1488:0:34623:35044	413806	0					
ANR	413809	Statement	static	1489:1:34626:34631	413806	0	True				
ANR	413810	Statement	const	1489:8:34633:34637	413806	1	True				
ANR	413811	ClassDefStatement	struct cond_tbl_s { char name [ 8 ] ; size_t len ; int cond ; }	1489:14:34639:34702	413806	2	True				
ANR	413812	Identifier	cond_tbl_s		413806	0					
ANR	413813	Statement	cond_tbl	1493:3:34704:34711	413806	3	True				
ANR	413814	Statement	[	1493:11:34712:34712	413806	4	True				
ANR	413815	Statement	]	1493:12:34713:34713	413806	5	True				
ANR	413816	Statement	=	1493:14:34715:34715	413806	6	True				
ANR	413817	CompoundStatement		6:16:93:93	413806	7					
ANR	413818	CompoundStatement		7:2:97:97	413806	0					
ANR	413819	Statement	"""if"""	1494:4:34723:34726	413806	0	True				
ANR	413820	Statement	","	1494:8:34727:34727	413806	1	True				
ANR	413821	Statement	2	1494:11:34730:34730	413806	2	True				
ANR	413822	Statement	","	1494:12:34731:34731	413806	3	True				
ANR	413823	Statement	COND_IF	1494:14:34733:34739	413806	4	True				
ANR	413824	Statement	","	1494:23:34742:34742	413806	1	True				
ANR	413825	CompoundStatement		8:2:122:122	413806	2					
ANR	413826	Statement	"""elif"""	1495:4:34748:34753	413806	0	True				
ANR	413827	Statement	","	1495:10:34754:34754	413806	1	True				
ANR	413828	Statement	4	1495:12:34756:34756	413806	2	True				
ANR	413829	Statement	","	1495:13:34757:34757	413806	3	True				
ANR	413830	Statement	COND_ELIF	1495:15:34759:34767	413806	4	True				
ANR	413831	Statement	","	1495:26:34770:34770	413806	3	True				
ANR	413832	CompoundStatement		9:2:150:150	413806	4					
ANR	413833	Statement	"""else"""	1496:4:34776:34781	413806	0	True				
ANR	413834	Statement	","	1496:10:34782:34782	413806	1	True				
ANR	413835	Statement	4	1496:12:34784:34784	413806	2	True				
ANR	413836	Statement	","	1496:13:34785:34785	413806	3	True				
ANR	413837	Statement	COND_ELSE	1496:15:34787:34795	413806	4	True				
ANR	413838	Statement	","	1496:26:34798:34798	413806	5	True				
ANR	413839	CompoundStatement		10:2:178:178	413806	6					
ANR	413840	Statement	""""""	1497:4:34804:34805	413806	0	True				
ANR	413841	Statement	","	1497:6:34806:34806	413806	1	True				
ANR	413842	Statement	0	1497:9:34809:34809	413806	2	True				
ANR	413843	Statement	","	1497:10:34810:34810	413806	3	True				
ANR	413844	Statement	COND_NONE	1497:12:34812:34820	413806	4	True				
ANR	413845	Statement	","	1497:23:34823:34823	413806	7	True				
ANR	413846	ExpressionStatement		1498:2:34827:34827	413806	8	True				
ANR	413847	IdentifierDeclStatement	const struct cond_tbl_s * p ;	1499:1:34830:34856	413806	9	True				
ANR	413848	IdentifierDecl	* p		413806	0					
ANR	413849	IdentifierDeclType	const struct cond_tbl_s *		413806	0					
ANR	413850	Identifier	p		413806	1					
ANR	413851	ForStatement	for ( p = cond_tbl ; p -> len ; p ++ )		413806	10					
ANR	413852	ForInit	p = cond_tbl ;	1501:6:34865:34877	413806	0	True				
ANR	413853	AssignmentExpression	p = cond_tbl		413806	0		=			
ANR	413854	Identifier	p		413806	0					
ANR	413855	Identifier	cond_tbl		413806	1					
ANR	413856	Condition	p -> len	1501:20:34879:34884	413806	1	True				
ANR	413857	PtrMemberAccess	p -> len		413806	0					
ANR	413858	Identifier	p		413806	0					
ANR	413859	Identifier	len		413806	1					
ANR	413860	PostIncDecOperationExpression	p ++	1501:28:34887:34889	413806	2	True				
ANR	413861	Identifier	p		413806	0					
ANR	413862	IncDec	++		413806	1					
ANR	413863	CompoundStatement		14:33:268:268	413806	3					
ANR	413864	IfStatement	"if ( strncmp ( l , p -> name , p -> len ) == 0 && isspace ( ( unsigned char ) l [ p -> len ] ) )"		413806	0					
ANR	413865	Condition	"strncmp ( l , p -> name , p -> len ) == 0 && isspace ( ( unsigned char ) l [ p -> len ] )"	1502:6:34900:34974	413806	0	True				
ANR	413866	AndExpression	"strncmp ( l , p -> name , p -> len ) == 0 && isspace ( ( unsigned char ) l [ p -> len ] )"		413806	0		&&			
ANR	413867	EqualityExpression	"strncmp ( l , p -> name , p -> len ) == 0"		413806	0		==			
ANR	413868	CallExpression	"strncmp ( l , p -> name , p -> len )"		413806	0					
ANR	413869	Callee	strncmp		413806	0					
ANR	413870	Identifier	strncmp		413806	0					
ANR	413871	ArgumentList	l		413806	1					
ANR	413872	Argument	l		413806	0					
ANR	413873	Identifier	l		413806	0					
ANR	413874	Argument	p -> name		413806	1					
ANR	413875	PtrMemberAccess	p -> name		413806	0					
ANR	413876	Identifier	p		413806	0					
ANR	413877	Identifier	name		413806	1					
ANR	413878	Argument	p -> len		413806	2					
ANR	413879	PtrMemberAccess	p -> len		413806	0					
ANR	413880	Identifier	p		413806	0					
ANR	413881	Identifier	len		413806	1					
ANR	413882	PrimaryExpression	0		413806	1					
ANR	413883	CallExpression	isspace ( ( unsigned char ) l [ p -> len ] )		413806	1					
ANR	413884	Callee	isspace		413806	0					
ANR	413885	Identifier	isspace		413806	0					
ANR	413886	ArgumentList	( unsigned char ) l [ p -> len ]		413806	1					
ANR	413887	Argument	( unsigned char ) l [ p -> len ]		413806	0					
ANR	413888	CastExpression	( unsigned char ) l [ p -> len ]		413806	0					
ANR	413889	CastTarget	unsigned char		413806	0					
ANR	413890	ArrayIndexing	l [ p -> len ]		413806	1					
ANR	413891	Identifier	l		413806	0					
ANR	413892	PtrMemberAccess	p -> len		413806	1					
ANR	413893	Identifier	p		413806	0					
ANR	413894	Identifier	len		413806	1					
ANR	413895	CompoundStatement		16:41:353:353	413806	1					
ANR	413896	IfStatement	if ( t )		413806	0					
ANR	413897	Condition	t	1504:7:34986:34986	413806	0	True				
ANR	413898	Identifier	t		413806	0					
ANR	413899	ExpressionStatement	* t = l + p -> len	1505:4:34993:35008	413806	1	True				
ANR	413900	AssignmentExpression	* t = l + p -> len		413806	0		=			
ANR	413901	UnaryOperationExpression	* t		413806	0					
ANR	413902	UnaryOperator	*		413806	0					
ANR	413903	Identifier	t		413806	1					
ANR	413904	AdditiveExpression	l + p -> len		413806	1		+			
ANR	413905	Identifier	l		413806	0					
ANR	413906	PtrMemberAccess	p -> len		413806	1					
ANR	413907	Identifier	p		413806	0					
ANR	413908	Identifier	len		413806	1					
ANR	413909	BreakStatement	break ;	1506:3:35013:35018	413806	1	True				
ANR	413910	ReturnStatement	return p -> cond ;	1509:1:35028:35042	413806	11	True				
ANR	413911	PtrMemberAccess	p -> cond		413806	0					
ANR	413912	Identifier	p		413806	0					
ANR	413913	Identifier	cond		413806	1					
ANR	413914	ReturnType	int		413806	1					
ANR	413915	Identifier	get_cond		413806	2					
ANR	413916	ParameterList	"const char * l , const char * * t"		413806	3					
ANR	413917	Parameter	const char * l	1487:9:34592:34604	413806	0	True				
ANR	413918	ParameterType	const char *		413806	0					
ANR	413919	Identifier	l		413806	1					
ANR	413920	Parameter	const char * * t	1487:24:34607:34620	413806	1	True				
ANR	413921	ParameterType	const char * *		413806	0					
ANR	413922	Identifier	t		413806	1					
ANR	413923	CFGEntryNode	ENTRY		413806		True				
ANR	413924	CFGExitNode	EXIT		413806		True				
ANR	413925	Symbol	* p -> len		413806						
ANR	413926	Symbol	isspace		413806						
ANR	413927	Symbol	cond_tbl		413806						
ANR	413928	Symbol	l		413806						
ANR	413929	Symbol	p -> cond		413806						
ANR	413930	Symbol	p		413806						
ANR	413931	Symbol	strncmp		413806						
ANR	413932	Symbol	t		413806						
ANR	413933	Symbol	* l		413806						
ANR	413934	Symbol	p -> len		413806						
ANR	413935	Symbol	* p		413806						
ANR	413936	Symbol	* * p		413806						
ANR	413937	Symbol	p -> name		413806						
ANR	413938	Symbol	* t		413806						
ANR	413939	Function	check_cond	1512:8:35055:35923							
ANR	413940	FunctionDef	"check_cond (struct magic_set * ms , int cond , uint32_t cont_level)"		413939	0					
ANR	413941	CompoundStatement		1514:0:35123:35923	413939	0					
ANR	413942	IdentifierDeclStatement	int last_cond ;	1515:1:35126:35139	413939	0	True				
ANR	413943	IdentifierDecl	last_cond		413939	0					
ANR	413944	IdentifierDeclType	int		413939	0					
ANR	413945	Identifier	last_cond		413939	1					
ANR	413946	ExpressionStatement	last_cond = ms -> c . li [ cont_level ] . last_cond	1516:1:35142:35184	413939	1	True				
ANR	413947	AssignmentExpression	last_cond = ms -> c . li [ cont_level ] . last_cond		413939	0		=			
ANR	413948	Identifier	last_cond		413939	0					
ANR	413949	MemberAccess	ms -> c . li [ cont_level ] . last_cond		413939	1					
ANR	413950	ArrayIndexing	ms -> c . li [ cont_level ]		413939	0					
ANR	413951	MemberAccess	ms -> c . li		413939	0					
ANR	413952	PtrMemberAccess	ms -> c		413939	0					
ANR	413953	Identifier	ms		413939	0					
ANR	413954	Identifier	c		413939	1					
ANR	413955	Identifier	li		413939	1					
ANR	413956	Identifier	cont_level		413939	1					
ANR	413957	Identifier	last_cond		413939	1					
ANR	413958	SwitchStatement	switch ( cond )		413939	2					
ANR	413959	Condition	cond	1518:9:35196:35199	413939	0	True				
ANR	413960	Identifier	cond		413939	0					
ANR	413961	CompoundStatement		5:15:78:78	413939	1					
ANR	413962	Label	case COND_IF :	1519:1:35205:35217	413939	0	True				
ANR	413963	Identifier	COND_IF		413939	0					
ANR	413964	IfStatement	if ( last_cond != COND_NONE && last_cond != COND_ELIF )		413939	1					
ANR	413965	Condition	last_cond != COND_NONE && last_cond != COND_ELIF	1520:6:35225:35272	413939	0	True				
ANR	413966	AndExpression	last_cond != COND_NONE && last_cond != COND_ELIF		413939	0		&&			
ANR	413967	EqualityExpression	last_cond != COND_NONE		413939	0		!=			
ANR	413968	Identifier	last_cond		413939	0					
ANR	413969	Identifier	COND_NONE		413939	1					
ANR	413970	EqualityExpression	last_cond != COND_ELIF		413939	1		!=			
ANR	413971	Identifier	last_cond		413939	0					
ANR	413972	Identifier	COND_ELIF		413939	1					
ANR	413973	CompoundStatement		7:56:151:151	413939	1					
ANR	413974	IfStatement	if ( ms -> flags & MAGIC_CHECK )		413939	0					
ANR	413975	Condition	ms -> flags & MAGIC_CHECK	1521:7:35284:35306	413939	0	True				
ANR	413976	BitAndExpression	ms -> flags & MAGIC_CHECK		413939	0		&			
ANR	413977	PtrMemberAccess	ms -> flags		413939	0					
ANR	413978	Identifier	ms		413939	0					
ANR	413979	Identifier	flags		413939	1					
ANR	413980	Identifier	MAGIC_CHECK		413939	1					
ANR	413981	ExpressionStatement	"file_magwarn ( ms , ""syntax error: `if'"" )"	1522:4:35313:35351	413939	1	True				
ANR	413982	CallExpression	"file_magwarn ( ms , ""syntax error: `if'"" )"		413939	0					
ANR	413983	Callee	file_magwarn		413939	0					
ANR	413984	Identifier	file_magwarn		413939	0					
ANR	413985	ArgumentList	ms		413939	1					
ANR	413986	Argument	ms		413939	0					
ANR	413987	Identifier	ms		413939	0					
ANR	413988	Argument	"""syntax error: `if'"""		413939	1					
ANR	413989	PrimaryExpression	"""syntax error: `if'"""		413939	0					
ANR	413990	ReturnStatement	return - 1 ;	1523:3:35356:35365	413939	1	True				
ANR	413991	UnaryOperationExpression	- 1		413939	0					
ANR	413992	UnaryOperator	-		413939	0					
ANR	413993	PrimaryExpression	1		413939	1					
ANR	413994	ExpressionStatement	last_cond = COND_IF	1525:2:35373:35392	413939	2	True				
ANR	413995	AssignmentExpression	last_cond = COND_IF		413939	0		=			
ANR	413996	Identifier	last_cond		413939	0					
ANR	413997	Identifier	COND_IF		413939	1					
ANR	413998	BreakStatement	break ;	1526:2:35396:35401	413939	3	True				
ANR	413999	Label	case COND_ELIF :	1528:1:35405:35419	413939	4	True				
ANR	414000	Identifier	COND_ELIF		413939	0					
ANR	414001	IfStatement	if ( last_cond != COND_IF && last_cond != COND_ELIF )		413939	5					
ANR	414002	Condition	last_cond != COND_IF && last_cond != COND_ELIF	1529:6:35427:35472	413939	0	True				
ANR	414003	AndExpression	last_cond != COND_IF && last_cond != COND_ELIF		413939	0		&&			
ANR	414004	EqualityExpression	last_cond != COND_IF		413939	0		!=			
ANR	414005	Identifier	last_cond		413939	0					
ANR	414006	Identifier	COND_IF		413939	1					
ANR	414007	EqualityExpression	last_cond != COND_ELIF		413939	1		!=			
ANR	414008	Identifier	last_cond		413939	0					
ANR	414009	Identifier	COND_ELIF		413939	1					
ANR	414010	CompoundStatement		16:54:351:351	413939	1					
ANR	414011	IfStatement	if ( ms -> flags & MAGIC_CHECK )		413939	0					
ANR	414012	Condition	ms -> flags & MAGIC_CHECK	1530:7:35484:35506	413939	0	True				
ANR	414013	BitAndExpression	ms -> flags & MAGIC_CHECK		413939	0		&			
ANR	414014	PtrMemberAccess	ms -> flags		413939	0					
ANR	414015	Identifier	ms		413939	0					
ANR	414016	Identifier	flags		413939	1					
ANR	414017	Identifier	MAGIC_CHECK		413939	1					
ANR	414018	ExpressionStatement	"file_magwarn ( ms , ""syntax error: `elif'"" )"	1531:4:35513:35553	413939	1	True				
ANR	414019	CallExpression	"file_magwarn ( ms , ""syntax error: `elif'"" )"		413939	0					
ANR	414020	Callee	file_magwarn		413939	0					
ANR	414021	Identifier	file_magwarn		413939	0					
ANR	414022	ArgumentList	ms		413939	1					
ANR	414023	Argument	ms		413939	0					
ANR	414024	Identifier	ms		413939	0					
ANR	414025	Argument	"""syntax error: `elif'"""		413939	1					
ANR	414026	PrimaryExpression	"""syntax error: `elif'"""		413939	0					
ANR	414027	ReturnStatement	return - 1 ;	1532:3:35558:35567	413939	1	True				
ANR	414028	UnaryOperationExpression	- 1		413939	0					
ANR	414029	UnaryOperator	-		413939	0					
ANR	414030	PrimaryExpression	1		413939	1					
ANR	414031	ExpressionStatement	last_cond = COND_ELIF	1534:2:35575:35596	413939	6	True				
ANR	414032	AssignmentExpression	last_cond = COND_ELIF		413939	0		=			
ANR	414033	Identifier	last_cond		413939	0					
ANR	414034	Identifier	COND_ELIF		413939	1					
ANR	414035	BreakStatement	break ;	1535:2:35600:35605	413939	7	True				
ANR	414036	Label	case COND_ELSE :	1537:1:35609:35623	413939	8	True				
ANR	414037	Identifier	COND_ELSE		413939	0					
ANR	414038	IfStatement	if ( last_cond != COND_IF && last_cond != COND_ELIF )		413939	9					
ANR	414039	Condition	last_cond != COND_IF && last_cond != COND_ELIF	1538:6:35631:35676	413939	0	True				
ANR	414040	AndExpression	last_cond != COND_IF && last_cond != COND_ELIF		413939	0		&&			
ANR	414041	EqualityExpression	last_cond != COND_IF		413939	0		!=			
ANR	414042	Identifier	last_cond		413939	0					
ANR	414043	Identifier	COND_IF		413939	1					
ANR	414044	EqualityExpression	last_cond != COND_ELIF		413939	1		!=			
ANR	414045	Identifier	last_cond		413939	0					
ANR	414046	Identifier	COND_ELIF		413939	1					
ANR	414047	CompoundStatement		25:54:555:555	413939	1					
ANR	414048	IfStatement	if ( ms -> flags & MAGIC_CHECK )		413939	0					
ANR	414049	Condition	ms -> flags & MAGIC_CHECK	1539:7:35688:35710	413939	0	True				
ANR	414050	BitAndExpression	ms -> flags & MAGIC_CHECK		413939	0		&			
ANR	414051	PtrMemberAccess	ms -> flags		413939	0					
ANR	414052	Identifier	ms		413939	0					
ANR	414053	Identifier	flags		413939	1					
ANR	414054	Identifier	MAGIC_CHECK		413939	1					
ANR	414055	ExpressionStatement	"file_magwarn ( ms , ""syntax error: `else'"" )"	1540:4:35717:35757	413939	1	True				
ANR	414056	CallExpression	"file_magwarn ( ms , ""syntax error: `else'"" )"		413939	0					
ANR	414057	Callee	file_magwarn		413939	0					
ANR	414058	Identifier	file_magwarn		413939	0					
ANR	414059	ArgumentList	ms		413939	1					
ANR	414060	Argument	ms		413939	0					
ANR	414061	Identifier	ms		413939	0					
ANR	414062	Argument	"""syntax error: `else'"""		413939	1					
ANR	414063	PrimaryExpression	"""syntax error: `else'"""		413939	0					
ANR	414064	ReturnStatement	return - 1 ;	1541:3:35762:35771	413939	1	True				
ANR	414065	UnaryOperationExpression	- 1		413939	0					
ANR	414066	UnaryOperator	-		413939	0					
ANR	414067	PrimaryExpression	1		413939	1					
ANR	414068	ExpressionStatement	last_cond = COND_NONE	1543:2:35779:35800	413939	10	True				
ANR	414069	AssignmentExpression	last_cond = COND_NONE		413939	0		=			
ANR	414070	Identifier	last_cond		413939	0					
ANR	414071	Identifier	COND_NONE		413939	1					
ANR	414072	BreakStatement	break ;	1544:2:35804:35809	413939	11	True				
ANR	414073	Label	case COND_NONE :	1546:1:35813:35827	413939	12	True				
ANR	414074	Identifier	COND_NONE		413939	0					
ANR	414075	ExpressionStatement	last_cond = COND_NONE	1547:2:35831:35852	413939	13	True				
ANR	414076	AssignmentExpression	last_cond = COND_NONE		413939	0		=			
ANR	414077	Identifier	last_cond		413939	0					
ANR	414078	Identifier	COND_NONE		413939	1					
ANR	414079	BreakStatement	break ;	1548:2:35856:35861	413939	14	True				
ANR	414080	ExpressionStatement	ms -> c . li [ cont_level ] . last_cond = last_cond	1551:1:35868:35910	413939	3	True				
ANR	414081	AssignmentExpression	ms -> c . li [ cont_level ] . last_cond = last_cond		413939	0		=			
ANR	414082	MemberAccess	ms -> c . li [ cont_level ] . last_cond		413939	0					
ANR	414083	ArrayIndexing	ms -> c . li [ cont_level ]		413939	0					
ANR	414084	MemberAccess	ms -> c . li		413939	0					
ANR	414085	PtrMemberAccess	ms -> c		413939	0					
ANR	414086	Identifier	ms		413939	0					
ANR	414087	Identifier	c		413939	1					
ANR	414088	Identifier	li		413939	1					
ANR	414089	Identifier	cont_level		413939	1					
ANR	414090	Identifier	last_cond		413939	1					
ANR	414091	Identifier	last_cond		413939	1					
ANR	414092	ReturnStatement	return 0 ;	1552:1:35913:35921	413939	4	True				
ANR	414093	PrimaryExpression	0		413939	0					
ANR	414094	ReturnType	int		413939	1					
ANR	414095	Identifier	check_cond		413939	2					
ANR	414096	ParameterList	"struct magic_set * ms , int cond , uint32_t cont_level"		413939	3					
ANR	414097	Parameter	struct magic_set * ms	1513:11:35070:35089	413939	0	True				
ANR	414098	ParameterType	struct magic_set *		413939	0					
ANR	414099	Identifier	ms		413939	1					
ANR	414100	Parameter	int cond	1513:33:35092:35099	413939	1	True				
ANR	414101	ParameterType	int		413939	0					
ANR	414102	Identifier	cond		413939	1					
ANR	414103	Parameter	uint32_t cont_level	1513:43:35102:35120	413939	2	True				
ANR	414104	ParameterType	uint32_t		413939	0					
ANR	414105	Identifier	cont_level		413939	1					
ANR	414106	CFGEntryNode	ENTRY		413939		True				
ANR	414107	CFGExitNode	EXIT		413939		True				
ANR	414108	Symbol	COND_NONE		413939						
ANR	414109	Symbol	COND_IF		413939						
ANR	414110	Symbol	* ms -> c		413939						
ANR	414111	Symbol	ms		413939						
ANR	414112	Symbol	* ms -> c . li		413939						
ANR	414113	Symbol	cond		413939						
ANR	414114	Symbol	ms -> c . li		413939						
ANR	414115	Symbol	* cont_level		413939						
ANR	414116	Symbol	ms -> c . li [ cont_level ] . last_cond		413939						
ANR	414117	Symbol	* ms		413939						
ANR	414118	Symbol	* * ms		413939						
ANR	414119	Symbol	COND_ELIF		413939						
ANR	414120	Symbol	cont_level		413939						
ANR	414121	Symbol	last_cond		413939						
ANR	414122	Symbol	ms -> c		413939						
ANR	414123	Symbol	MAGIC_CHECK		413939						
ANR	414124	Symbol	ms -> flags		413939						
ANR	414125	Function	parse_indirect_modifier	1556:8:35967:36372							
ANR	414126	FunctionDef	"parse_indirect_modifier (struct magic_set * ms , struct magic * m , const char * * lp)"		414125	0					
ANR	414127	CompoundStatement		1558:0:36051:36372	414125	0					
ANR	414128	IdentifierDeclStatement	const char * l = * lp ;	1559:1:36054:36073	414125	0	True				
ANR	414129	IdentifierDecl	* l = * lp		414125	0					
ANR	414130	IdentifierDeclType	const char *		414125	0					
ANR	414131	Identifier	l		414125	1					
ANR	414132	AssignmentExpression	* l = * lp		414125	2		=			
ANR	414133	Identifier	l		414125	0					
ANR	414134	UnaryOperationExpression	* lp		414125	1					
ANR	414135	UnaryOperator	*		414125	0					
ANR	414136	Identifier	lp		414125	1					
ANR	414137	WhileStatement	while ( ! isspace ( ( unsigned char ) * ++ l ) )		414125	1					
ANR	414138	Condition	! isspace ( ( unsigned char ) * ++ l )	1561:8:36084:36112	414125	0	True				
ANR	414139	UnaryOperationExpression	! isspace ( ( unsigned char ) * ++ l )		414125	0					
ANR	414140	UnaryOperator	!		414125	0					
ANR	414141	CallExpression	isspace ( ( unsigned char ) * ++ l )		414125	1					
ANR	414142	Callee	isspace		414125	0					
ANR	414143	Identifier	isspace		414125	0					
ANR	414144	ArgumentList	( unsigned char ) * ++ l		414125	1					
ANR	414145	Argument	( unsigned char ) * ++ l		414125	0					
ANR	414146	CastExpression	( unsigned char ) * ++ l		414125	0					
ANR	414147	CastTarget	unsigned char		414125	0					
ANR	414148	UnaryOperationExpression	* ++ l		414125	1					
ANR	414149	UnaryOperator	*		414125	0					
ANR	414150	UnaryExpression	++ l		414125	1					
ANR	414151	IncDec	++		414125	0					
ANR	414152	Identifier	l		414125	1					
ANR	414153	SwitchStatement	switch ( * l )		414125	1					
ANR	414154	Condition	* l	1562:10:36125:36126	414125	0	True				
ANR	414155	UnaryOperationExpression	* l		414125	0					
ANR	414156	UnaryOperator	*		414125	0					
ANR	414157	Identifier	l		414125	1					
ANR	414158	CompoundStatement		5:14:77:77	414125	1					
ANR	414159	Label	case CHAR_INDIRECT_RELATIVE :	1563:2:36133:36160	414125	0	True				
ANR	414160	Identifier	CHAR_INDIRECT_RELATIVE		414125	0					
ANR	414161	ExpressionStatement	m -> str_flags |= INDIRECT_RELATIVE	1564:3:36165:36198	414125	1	True				
ANR	414162	AssignmentExpression	m -> str_flags |= INDIRECT_RELATIVE		414125	0		|=			
ANR	414163	PtrMemberAccess	m -> str_flags		414125	0					
ANR	414164	Identifier	m		414125	0					
ANR	414165	Identifier	str_flags		414125	1					
ANR	414166	Identifier	INDIRECT_RELATIVE		414125	1					
ANR	414167	BreakStatement	break ;	1565:3:36203:36208	414125	2	True				
ANR	414168	Label	default :	1566:2:36212:36219	414125	3	True				
ANR	414169	Identifier	default		414125	0					
ANR	414170	IfStatement	if ( ms -> flags & MAGIC_CHECK )		414125	4					
ANR	414171	Condition	ms -> flags & MAGIC_CHECK	1567:7:36228:36250	414125	0	True				
ANR	414172	BitAndExpression	ms -> flags & MAGIC_CHECK		414125	0		&			
ANR	414173	PtrMemberAccess	ms -> flags		414125	0					
ANR	414174	Identifier	ms		414125	0					
ANR	414175	Identifier	flags		414125	1					
ANR	414176	Identifier	MAGIC_CHECK		414125	1					
ANR	414177	Statement	file_magwarn	1568:4:36257:36268	414125	1	True				
ANR	414178	Statement	(	1568:16:36269:36269	414125	5	True				
ANR	414179	Statement	ms	1568:17:36270:36271	414125	6	True				
ANR	414180	Statement	","	1568:19:36272:36272	414125	7	True				
ANR	414181	Statement	"""indirect modifier `%c' """	1568:21:36274:36298	414125	8	True				
ANR	414182	Statement	"""invalid"""	1569:5:36305:36313	414125	9	True				
ANR	414183	Statement	","	1569:14:36314:36314	414125	10	True				
ANR	414184	Statement	*	1569:16:36316:36316	414125	11	True				
ANR	414185	Statement	l	1569:17:36317:36317	414125	12	True				
ANR	414186	Statement	)	1569:18:36318:36318	414125	13	True				
ANR	414187	ExpressionStatement		1569:19:36319:36319	414125	14	True				
ANR	414188	ExpressionStatement	* lp = l	1570:3:36324:36331	414125	15	True				
ANR	414189	AssignmentExpression	* lp = l		414125	0		=			
ANR	414190	UnaryOperationExpression	* lp		414125	0					
ANR	414191	UnaryOperator	*		414125	0					
ANR	414192	Identifier	lp		414125	1					
ANR	414193	Identifier	l		414125	1					
ANR	414194	ReturnStatement	return - 1 ;	1571:3:36336:36345	414125	16	True				
ANR	414195	UnaryOperationExpression	- 1		414125	0					
ANR	414196	UnaryOperator	-		414125	0					
ANR	414197	PrimaryExpression	1		414125	1					
ANR	414198	ExpressionStatement	* lp = l	1573:1:36352:36359	414125	2	True				
ANR	414199	AssignmentExpression	* lp = l		414125	0		=			
ANR	414200	UnaryOperationExpression	* lp		414125	0					
ANR	414201	UnaryOperator	*		414125	0					
ANR	414202	Identifier	lp		414125	1					
ANR	414203	Identifier	l		414125	1					
ANR	414204	ReturnStatement	return 0 ;	1574:1:36362:36370	414125	3	True				
ANR	414205	PrimaryExpression	0		414125	0					
ANR	414206	ReturnType	int		414125	1					
ANR	414207	Identifier	parse_indirect_modifier		414125	2					
ANR	414208	ParameterList	"struct magic_set * ms , struct magic * m , const char * * lp"		414125	3					
ANR	414209	Parameter	struct magic_set * ms	1557:24:35995:36014	414125	0	True				
ANR	414210	ParameterType	struct magic_set *		414125	0					
ANR	414211	Identifier	ms		414125	1					
ANR	414212	Parameter	struct magic * m	1557:46:36017:36031	414125	1	True				
ANR	414213	ParameterType	struct magic *		414125	0					
ANR	414214	Identifier	m		414125	1					
ANR	414215	Parameter	const char * * lp	1557:63:36034:36048	414125	2	True				
ANR	414216	ParameterType	const char * *		414125	0					
ANR	414217	Identifier	lp		414125	1					
ANR	414218	CFGEntryNode	ENTRY		414125		True				
ANR	414219	CFGExitNode	EXIT		414125		True				
ANR	414220	Symbol	* ++ l		414125						
ANR	414221	Symbol	lp		414125						
ANR	414222	Symbol	ms		414125						
ANR	414223	Symbol	isspace		414125						
ANR	414224	Symbol	INDIRECT_RELATIVE		414125						
ANR	414225	Symbol	* lp		414125						
ANR	414226	Symbol	m -> str_flags		414125						
ANR	414227	Symbol	l		414125						
ANR	414228	Symbol	m		414125						
ANR	414229	Symbol	* ms		414125						
ANR	414230	Symbol	* l		414125						
ANR	414231	Symbol	* m		414125						
ANR	414232	Symbol	MAGIC_CHECK		414125						
ANR	414233	Symbol	ms -> flags		414125						
ANR	414234	Function	parse_op_modifier	1577:8:36383:36662							
ANR	414235	FunctionDef	"parse_op_modifier (struct magic_set * ms , struct magic * m , const char * * lp , int op)"		414234	0					
ANR	414236	CompoundStatement		1580:0:36474:36662	414234	0					
ANR	414237	IdentifierDeclStatement	const char * l = * lp ;	1581:1:36477:36496	414234	0	True				
ANR	414238	IdentifierDecl	* l = * lp		414234	0					
ANR	414239	IdentifierDeclType	const char *		414234	0					
ANR	414240	Identifier	l		414234	1					
ANR	414241	AssignmentExpression	* l = * lp		414234	2		=			
ANR	414242	Identifier	l		414234	0					
ANR	414243	UnaryOperationExpression	* lp		414234	1					
ANR	414244	UnaryOperator	*		414234	0					
ANR	414245	Identifier	lp		414234	1					
ANR	414246	IdentifierDeclStatement	char * t ;	1582:1:36499:36506	414234	1	True				
ANR	414247	IdentifierDecl	* t		414234	0					
ANR	414248	IdentifierDeclType	char *		414234	0					
ANR	414249	Identifier	t		414234	1					
ANR	414250	IdentifierDeclStatement	uint64_t val ;	1583:1:36509:36521	414234	2	True				
ANR	414251	IdentifierDecl	val		414234	0					
ANR	414252	IdentifierDeclType	uint64_t		414234	0					
ANR	414253	Identifier	val		414234	1					
ANR	414254	ExpressionStatement	++ l	1585:1:36525:36528	414234	3	True				
ANR	414255	UnaryExpression	++ l		414234	0					
ANR	414256	IncDec	++		414234	0					
ANR	414257	Identifier	l		414234	1					
ANR	414258	ExpressionStatement	m -> mask_op |= op	1586:1:36531:36547	414234	4	True				
ANR	414259	AssignmentExpression	m -> mask_op |= op		414234	0		|=			
ANR	414260	PtrMemberAccess	m -> mask_op		414234	0					
ANR	414261	Identifier	m		414234	0					
ANR	414262	Identifier	mask_op		414234	1					
ANR	414263	Identifier	op		414234	1					
ANR	414264	ExpressionStatement	"val = ( uint64_t ) strtoull ( l , & t , 0 )"	1587:1:36550:36584	414234	5	True				
ANR	414265	AssignmentExpression	"val = ( uint64_t ) strtoull ( l , & t , 0 )"		414234	0		=			
ANR	414266	Identifier	val		414234	0					
ANR	414267	CastExpression	"( uint64_t ) strtoull ( l , & t , 0 )"		414234	1					
ANR	414268	CastTarget	uint64_t		414234	0					
ANR	414269	CallExpression	"strtoull ( l , & t , 0 )"		414234	1					
ANR	414270	Callee	strtoull		414234	0					
ANR	414271	Identifier	strtoull		414234	0					
ANR	414272	ArgumentList	l		414234	1					
ANR	414273	Argument	l		414234	0					
ANR	414274	Identifier	l		414234	0					
ANR	414275	Argument	& t		414234	1					
ANR	414276	UnaryOperationExpression	& t		414234	0					
ANR	414277	UnaryOperator	&		414234	0					
ANR	414278	Identifier	t		414234	1					
ANR	414279	Argument	0		414234	2					
ANR	414280	PrimaryExpression	0		414234	0					
ANR	414281	ExpressionStatement	l = t	1588:1:36587:36592	414234	6	True				
ANR	414282	AssignmentExpression	l = t		414234	0		=			
ANR	414283	Identifier	l		414234	0					
ANR	414284	Identifier	t		414234	1					
ANR	414285	ExpressionStatement	"m -> num_mask = file_signextend ( ms , m , val )"	1589:1:36595:36636	414234	7	True				
ANR	414286	AssignmentExpression	"m -> num_mask = file_signextend ( ms , m , val )"		414234	0		=			
ANR	414287	PtrMemberAccess	m -> num_mask		414234	0					
ANR	414288	Identifier	m		414234	0					
ANR	414289	Identifier	num_mask		414234	1					
ANR	414290	CallExpression	"file_signextend ( ms , m , val )"		414234	1					
ANR	414291	Callee	file_signextend		414234	0					
ANR	414292	Identifier	file_signextend		414234	0					
ANR	414293	ArgumentList	ms		414234	1					
ANR	414294	Argument	ms		414234	0					
ANR	414295	Identifier	ms		414234	0					
ANR	414296	Argument	m		414234	1					
ANR	414297	Identifier	m		414234	0					
ANR	414298	Argument	val		414234	2					
ANR	414299	Identifier	val		414234	0					
ANR	414300	ExpressionStatement	eatsize ( & l )	1590:1:36639:36650	414234	8	True				
ANR	414301	CallExpression	eatsize ( & l )		414234	0					
ANR	414302	Callee	eatsize		414234	0					
ANR	414303	Identifier	eatsize		414234	0					
ANR	414304	ArgumentList	& l		414234	1					
ANR	414305	Argument	& l		414234	0					
ANR	414306	UnaryOperationExpression	& l		414234	0					
ANR	414307	UnaryOperator	&		414234	0					
ANR	414308	Identifier	l		414234	1					
ANR	414309	ExpressionStatement	* lp = l	1591:1:36653:36660	414234	9	True				
ANR	414310	AssignmentExpression	* lp = l		414234	0		=			
ANR	414311	UnaryOperationExpression	* lp		414234	0					
ANR	414312	UnaryOperator	*		414234	0					
ANR	414313	Identifier	lp		414234	1					
ANR	414314	Identifier	l		414234	1					
ANR	414315	ReturnType	void		414234	1					
ANR	414316	Identifier	parse_op_modifier		414234	2					
ANR	414317	ParameterList	"struct magic_set * ms , struct magic * m , const char * * lp , int op"		414234	3					
ANR	414318	Parameter	struct magic_set * ms	1578:18:36406:36425	414234	0	True				
ANR	414319	ParameterType	struct magic_set *		414234	0					
ANR	414320	Identifier	ms		414234	1					
ANR	414321	Parameter	struct magic * m	1578:40:36428:36442	414234	1	True				
ANR	414322	ParameterType	struct magic *		414234	0					
ANR	414323	Identifier	m		414234	1					
ANR	414324	Parameter	const char * * lp	1578:57:36445:36459	414234	2	True				
ANR	414325	ParameterType	const char * *		414234	0					
ANR	414326	Identifier	lp		414234	1					
ANR	414327	Parameter	int op	1579:4:36466:36471	414234	3	True				
ANR	414328	ParameterType	int		414234	0					
ANR	414329	Identifier	op		414234	1					
ANR	414330	CFGEntryNode	ENTRY		414234		True				
ANR	414331	CFGExitNode	EXIT		414234		True				
ANR	414332	Symbol	val		414234						
ANR	414333	Symbol	op		414234						
ANR	414334	Symbol	lp		414234						
ANR	414335	Symbol	file_signextend		414234						
ANR	414336	Symbol	ms		414234						
ANR	414337	Symbol	* lp		414234						
ANR	414338	Symbol	l		414234						
ANR	414339	Symbol	m		414234						
ANR	414340	Symbol	strtoull		414234						
ANR	414341	Symbol	m -> num_mask		414234						
ANR	414342	Symbol	& l		414234						
ANR	414343	Symbol	t		414234						
ANR	414344	Symbol	m -> mask_op		414234						
ANR	414345	Symbol	* m		414234						
ANR	414346	Symbol	& t		414234						
ANR	414347	Function	parse_string_modifier	1594:8:36673:39045							
ANR	414348	FunctionDef	"parse_string_modifier (struct magic_set * ms , struct magic * m , const char * * lp)"		414347	0					
ANR	414349	CompoundStatement		1596:0:36755:39045	414347	0					
ANR	414350	IdentifierDeclStatement	const char * l = * lp ;	1597:1:36758:36777	414347	0	True				
ANR	414351	IdentifierDecl	* l = * lp		414347	0					
ANR	414352	IdentifierDeclType	const char *		414347	0					
ANR	414353	Identifier	l		414347	1					
ANR	414354	AssignmentExpression	* l = * lp		414347	2		=			
ANR	414355	Identifier	l		414347	0					
ANR	414356	UnaryOperationExpression	* lp		414347	1					
ANR	414357	UnaryOperator	*		414347	0					
ANR	414358	Identifier	lp		414347	1					
ANR	414359	IdentifierDeclStatement	char * t ;	1598:1:36780:36787	414347	1	True				
ANR	414360	IdentifierDecl	* t		414347	0					
ANR	414361	IdentifierDeclType	char *		414347	0					
ANR	414362	Identifier	t		414347	1					
ANR	414363	IdentifierDeclStatement	int have_range = 0 ;	1599:1:36790:36808	414347	2	True				
ANR	414364	IdentifierDecl	have_range = 0		414347	0					
ANR	414365	IdentifierDeclType	int		414347	0					
ANR	414366	Identifier	have_range		414347	1					
ANR	414367	AssignmentExpression	have_range = 0		414347	2		=			
ANR	414368	Identifier	have_range		414347	0					
ANR	414369	PrimaryExpression	0		414347	1					
ANR	414370	WhileStatement	while ( ! isspace ( ( unsigned char ) * ++ l ) )		414347	3					
ANR	414371	Condition	! isspace ( ( unsigned char ) * ++ l )	1601:8:36819:36847	414347	0	True				
ANR	414372	UnaryOperationExpression	! isspace ( ( unsigned char ) * ++ l )		414347	0					
ANR	414373	UnaryOperator	!		414347	0					
ANR	414374	CallExpression	isspace ( ( unsigned char ) * ++ l )		414347	1					
ANR	414375	Callee	isspace		414347	0					
ANR	414376	Identifier	isspace		414347	0					
ANR	414377	ArgumentList	( unsigned char ) * ++ l		414347	1					
ANR	414378	Argument	( unsigned char ) * ++ l		414347	0					
ANR	414379	CastExpression	( unsigned char ) * ++ l		414347	0					
ANR	414380	CastTarget	unsigned char		414347	0					
ANR	414381	UnaryOperationExpression	* ++ l		414347	1					
ANR	414382	UnaryOperator	*		414347	0					
ANR	414383	UnaryExpression	++ l		414347	1					
ANR	414384	IncDec	++		414347	0					
ANR	414385	Identifier	l		414347	1					
ANR	414386	CompoundStatement		6:39:94:94	414347	1					
ANR	414387	SwitchStatement	switch ( * l )		414347	0					
ANR	414388	Condition	* l	1602:10:36862:36863	414347	0	True				
ANR	414389	UnaryOperationExpression	* l		414347	0					
ANR	414390	UnaryOperator	*		414347	0					
ANR	414391	Identifier	l		414347	1					
ANR	414392	CompoundStatement		7:14:110:110	414347	1					
ANR	414393	Label	case '0' :	1603:2:36870:36878	414347	0	True				
ANR	414394	Label	case '1' :	1603:13:36881:36889	414347	1	True				
ANR	414395	Label	case '2' :	1603:24:36892:36900	414347	2	True				
ANR	414396	Label	case '3' :	1604:2:36904:36912	414347	3	True				
ANR	414397	Label	case '4' :	1604:13:36915:36923	414347	4	True				
ANR	414398	Label	case '5' :	1604:24:36926:36934	414347	5	True				
ANR	414399	Label	case '6' :	1605:2:36938:36946	414347	6	True				
ANR	414400	Label	case '7' :	1605:13:36949:36957	414347	7	True				
ANR	414401	Label	case '8' :	1605:24:36960:36968	414347	8	True				
ANR	414402	Label	case '9' :	1606:2:36972:36980	414347	9	True				
ANR	414403	IfStatement	if ( have_range && ( ms -> flags & MAGIC_CHECK ) )		414347	10					
ANR	414404	Condition	have_range && ( ms -> flags & MAGIC_CHECK )	1607:7:36989:37027	414347	0	True				
ANR	414405	AndExpression	have_range && ( ms -> flags & MAGIC_CHECK )		414347	0		&&			
ANR	414406	Identifier	have_range		414347	0					
ANR	414407	BitAndExpression	ms -> flags & MAGIC_CHECK		414347	1		&			
ANR	414408	PtrMemberAccess	ms -> flags		414347	0					
ANR	414409	Identifier	ms		414347	0					
ANR	414410	Identifier	flags		414347	1					
ANR	414411	Identifier	MAGIC_CHECK		414347	1					
ANR	414412	ExpressionStatement	"file_magwarn ( ms , ""multiple ranges"" )"	1608:4:37034:37069	414347	1	True				
ANR	414413	CallExpression	"file_magwarn ( ms , ""multiple ranges"" )"		414347	0					
ANR	414414	Callee	file_magwarn		414347	0					
ANR	414415	Identifier	file_magwarn		414347	0					
ANR	414416	ArgumentList	ms		414347	1					
ANR	414417	Argument	ms		414347	0					
ANR	414418	Identifier	ms		414347	0					
ANR	414419	Argument	"""multiple ranges"""		414347	1					
ANR	414420	PrimaryExpression	"""multiple ranges"""		414347	0					
ANR	414421	ExpressionStatement	have_range = 1	1609:3:37074:37088	414347	11	True				
ANR	414422	AssignmentExpression	have_range = 1		414347	0		=			
ANR	414423	Identifier	have_range		414347	0					
ANR	414424	PrimaryExpression	1		414347	1					
ANR	414425	ExpressionStatement	"m -> str_range = CAST ( uint32_t , strtoul ( l , & t , 0 ) )"	1610:3:37093:37141	414347	12	True				
ANR	414426	AssignmentExpression	"m -> str_range = CAST ( uint32_t , strtoul ( l , & t , 0 ) )"		414347	0		=			
ANR	414427	PtrMemberAccess	m -> str_range		414347	0					
ANR	414428	Identifier	m		414347	0					
ANR	414429	Identifier	str_range		414347	1					
ANR	414430	CallExpression	"CAST ( uint32_t , strtoul ( l , & t , 0 ) )"		414347	1					
ANR	414431	Callee	CAST		414347	0					
ANR	414432	Identifier	CAST		414347	0					
ANR	414433	ArgumentList	uint32_t		414347	1					
ANR	414434	Argument	uint32_t		414347	0					
ANR	414435	Identifier	uint32_t		414347	0					
ANR	414436	Argument	"strtoul ( l , & t , 0 )"		414347	1					
ANR	414437	CallExpression	"strtoul ( l , & t , 0 )"		414347	0					
ANR	414438	Callee	strtoul		414347	0					
ANR	414439	Identifier	strtoul		414347	0					
ANR	414440	ArgumentList	l		414347	1					
ANR	414441	Argument	l		414347	0					
ANR	414442	Identifier	l		414347	0					
ANR	414443	Argument	& t		414347	1					
ANR	414444	UnaryOperationExpression	& t		414347	0					
ANR	414445	UnaryOperator	&		414347	0					
ANR	414446	Identifier	t		414347	1					
ANR	414447	Argument	0		414347	2					
ANR	414448	PrimaryExpression	0		414347	0					
ANR	414449	IfStatement	if ( m -> str_range == 0 )		414347	13					
ANR	414450	Condition	m -> str_range == 0	1611:7:37150:37166	414347	0	True				
ANR	414451	EqualityExpression	m -> str_range == 0		414347	0		==			
ANR	414452	PtrMemberAccess	m -> str_range		414347	0					
ANR	414453	Identifier	m		414347	0					
ANR	414454	Identifier	str_range		414347	1					
ANR	414455	PrimaryExpression	0		414347	1					
ANR	414456	ExpressionStatement	"file_magwarn ( ms , ""zero range"" )"	1612:4:37173:37203	414347	1	True				
ANR	414457	CallExpression	"file_magwarn ( ms , ""zero range"" )"		414347	0					
ANR	414458	Callee	file_magwarn		414347	0					
ANR	414459	Identifier	file_magwarn		414347	0					
ANR	414460	ArgumentList	ms		414347	1					
ANR	414461	Argument	ms		414347	0					
ANR	414462	Identifier	ms		414347	0					
ANR	414463	Argument	"""zero range"""		414347	1					
ANR	414464	PrimaryExpression	"""zero range"""		414347	0					
ANR	414465	ExpressionStatement	l = t - 1	1613:3:37208:37217	414347	14	True				
ANR	414466	AssignmentExpression	l = t - 1		414347	0		=			
ANR	414467	Identifier	l		414347	0					
ANR	414468	AdditiveExpression	t - 1		414347	1		-			
ANR	414469	Identifier	t		414347	0					
ANR	414470	PrimaryExpression	1		414347	1					
ANR	414471	BreakStatement	break ;	1614:3:37222:37227	414347	15	True				
ANR	414472	Label	case CHAR_COMPACT_WHITESPACE :	1615:2:37231:37259	414347	16	True				
ANR	414473	Identifier	CHAR_COMPACT_WHITESPACE		414347	0					
ANR	414474	ExpressionStatement	m -> str_flags |= STRING_COMPACT_WHITESPACE	1616:3:37264:37305	414347	17	True				
ANR	414475	AssignmentExpression	m -> str_flags |= STRING_COMPACT_WHITESPACE		414347	0		|=			
ANR	414476	PtrMemberAccess	m -> str_flags		414347	0					
ANR	414477	Identifier	m		414347	0					
ANR	414478	Identifier	str_flags		414347	1					
ANR	414479	Identifier	STRING_COMPACT_WHITESPACE		414347	1					
ANR	414480	BreakStatement	break ;	1617:3:37310:37315	414347	18	True				
ANR	414481	Label	case CHAR_COMPACT_OPTIONAL_WHITESPACE :	1618:2:37319:37356	414347	19	True				
ANR	414482	Identifier	CHAR_COMPACT_OPTIONAL_WHITESPACE		414347	0					
ANR	414483	ExpressionStatement	m -> str_flags |= STRING_COMPACT_OPTIONAL_WHITESPACE	1619:3:37361:37411	414347	20	True				
ANR	414484	AssignmentExpression	m -> str_flags |= STRING_COMPACT_OPTIONAL_WHITESPACE		414347	0		|=			
ANR	414485	PtrMemberAccess	m -> str_flags		414347	0					
ANR	414486	Identifier	m		414347	0					
ANR	414487	Identifier	str_flags		414347	1					
ANR	414488	Identifier	STRING_COMPACT_OPTIONAL_WHITESPACE		414347	1					
ANR	414489	BreakStatement	break ;	1620:3:37416:37421	414347	21	True				
ANR	414490	Label	case CHAR_IGNORE_LOWERCASE :	1621:2:37425:37451	414347	22	True				
ANR	414491	Identifier	CHAR_IGNORE_LOWERCASE		414347	0					
ANR	414492	ExpressionStatement	m -> str_flags |= STRING_IGNORE_LOWERCASE	1622:3:37456:37495	414347	23	True				
ANR	414493	AssignmentExpression	m -> str_flags |= STRING_IGNORE_LOWERCASE		414347	0		|=			
ANR	414494	PtrMemberAccess	m -> str_flags		414347	0					
ANR	414495	Identifier	m		414347	0					
ANR	414496	Identifier	str_flags		414347	1					
ANR	414497	Identifier	STRING_IGNORE_LOWERCASE		414347	1					
ANR	414498	BreakStatement	break ;	1623:3:37500:37505	414347	24	True				
ANR	414499	Label	case CHAR_IGNORE_UPPERCASE :	1624:2:37509:37535	414347	25	True				
ANR	414500	Identifier	CHAR_IGNORE_UPPERCASE		414347	0					
ANR	414501	ExpressionStatement	m -> str_flags |= STRING_IGNORE_UPPERCASE	1625:3:37540:37579	414347	26	True				
ANR	414502	AssignmentExpression	m -> str_flags |= STRING_IGNORE_UPPERCASE		414347	0		|=			
ANR	414503	PtrMemberAccess	m -> str_flags		414347	0					
ANR	414504	Identifier	m		414347	0					
ANR	414505	Identifier	str_flags		414347	1					
ANR	414506	Identifier	STRING_IGNORE_UPPERCASE		414347	1					
ANR	414507	BreakStatement	break ;	1626:3:37584:37589	414347	27	True				
ANR	414508	Label	case CHAR_REGEX_OFFSET_START :	1627:2:37593:37621	414347	28	True				
ANR	414509	Identifier	CHAR_REGEX_OFFSET_START		414347	0					
ANR	414510	ExpressionStatement	m -> str_flags |= REGEX_OFFSET_START	1628:3:37626:37660	414347	29	True				
ANR	414511	AssignmentExpression	m -> str_flags |= REGEX_OFFSET_START		414347	0		|=			
ANR	414512	PtrMemberAccess	m -> str_flags		414347	0					
ANR	414513	Identifier	m		414347	0					
ANR	414514	Identifier	str_flags		414347	1					
ANR	414515	Identifier	REGEX_OFFSET_START		414347	1					
ANR	414516	BreakStatement	break ;	1629:3:37665:37670	414347	30	True				
ANR	414517	Label	case CHAR_BINTEST :	1630:2:37674:37691	414347	31	True				
ANR	414518	Identifier	CHAR_BINTEST		414347	0					
ANR	414519	ExpressionStatement	m -> str_flags |= STRING_BINTEST	1631:3:37696:37726	414347	32	True				
ANR	414520	AssignmentExpression	m -> str_flags |= STRING_BINTEST		414347	0		|=			
ANR	414521	PtrMemberAccess	m -> str_flags		414347	0					
ANR	414522	Identifier	m		414347	0					
ANR	414523	Identifier	str_flags		414347	1					
ANR	414524	Identifier	STRING_BINTEST		414347	1					
ANR	414525	BreakStatement	break ;	1632:3:37731:37736	414347	33	True				
ANR	414526	Label	case CHAR_TEXTTEST :	1633:2:37740:37758	414347	34	True				
ANR	414527	Identifier	CHAR_TEXTTEST		414347	0					
ANR	414528	ExpressionStatement	m -> str_flags |= STRING_TEXTTEST	1634:3:37763:37794	414347	35	True				
ANR	414529	AssignmentExpression	m -> str_flags |= STRING_TEXTTEST		414347	0		|=			
ANR	414530	PtrMemberAccess	m -> str_flags		414347	0					
ANR	414531	Identifier	m		414347	0					
ANR	414532	Identifier	str_flags		414347	1					
ANR	414533	Identifier	STRING_TEXTTEST		414347	1					
ANR	414534	BreakStatement	break ;	1635:3:37799:37804	414347	36	True				
ANR	414535	Label	case CHAR_TRIM :	1636:2:37808:37822	414347	37	True				
ANR	414536	Identifier	CHAR_TRIM		414347	0					
ANR	414537	ExpressionStatement	m -> str_flags |= STRING_TRIM	1637:3:37827:37854	414347	38	True				
ANR	414538	AssignmentExpression	m -> str_flags |= STRING_TRIM		414347	0		|=			
ANR	414539	PtrMemberAccess	m -> str_flags		414347	0					
ANR	414540	Identifier	m		414347	0					
ANR	414541	Identifier	str_flags		414347	1					
ANR	414542	Identifier	STRING_TRIM		414347	1					
ANR	414543	BreakStatement	break ;	1638:3:37859:37864	414347	39	True				
ANR	414544	Label	case CHAR_PSTRING_1_LE :	1639:2:37868:37890	414347	40	True				
ANR	414545	Identifier	CHAR_PSTRING_1_LE		414347	0					
ANR	414546	Statement	define	1640:1:37893:37898	414347	41	True				
ANR	414547	Statement	SET_LENGTH	1640:8:37900:37909	414347	42	True				
ANR	414548	Statement	(	1640:18:37910:37910	414347	43	True				
ANR	414549	Statement	a	1640:19:37911:37911	414347	44	True				
ANR	414550	Statement	)	1640:20:37912:37912	414347	45	True				
ANR	414551	Statement	m	1640:22:37914:37914	414347	46	True				
ANR	414552	Statement	->	1640:23:37915:37916	414347	47	True				
ANR	414553	Statement	str_flags	1640:25:37917:37925	414347	48	True				
ANR	414554	Statement	=	1640:35:37927:37927	414347	49	True				
ANR	414555	Statement	(	1640:37:37929:37929	414347	50	True				
ANR	414556	Statement	m	1640:38:37930:37930	414347	51	True				
ANR	414557	Statement	->	1640:39:37931:37932	414347	52	True				
ANR	414558	Statement	str_flags	1640:41:37933:37941	414347	53	True				
ANR	414559	Statement	&	1640:51:37943:37943	414347	54	True				
ANR	414560	Statement	~PSTRING_LEN	1640:53:37945:37956	414347	55	True				
ANR	414561	Statement	)	1640:65:37957:37957	414347	56	True				
ANR	414562	Statement	|	1640:67:37959:37959	414347	57	True				
ANR	414563	Statement	(	1640:69:37961:37961	414347	58	True				
ANR	414564	Statement	a	1640:70:37962:37962	414347	59	True				
ANR	414565	Statement	)	1640:71:37963:37963	414347	60	True				
ANR	414566	IfStatement	if ( m -> type != FILE_PSTRING )		414347	61					
ANR	414567	Condition	m -> type != FILE_PSTRING	1641:7:37972:37994	414347	0	True				
ANR	414568	EqualityExpression	m -> type != FILE_PSTRING		414347	0		!=			
ANR	414569	PtrMemberAccess	m -> type		414347	0					
ANR	414570	Identifier	m		414347	0					
ANR	414571	Identifier	type		414347	1					
ANR	414572	Identifier	FILE_PSTRING		414347	1					
ANR	414573	GotoStatement	goto bad ;	1642:4:38001:38009	414347	1	True				
ANR	414574	Identifier	bad		414347	0					
ANR	414575	ExpressionStatement	SET_LENGTH ( PSTRING_1_LE )	1643:3:38014:38038	414347	62	True				
ANR	414576	CallExpression	SET_LENGTH ( PSTRING_1_LE )		414347	0					
ANR	414577	Callee	SET_LENGTH		414347	0					
ANR	414578	Identifier	SET_LENGTH		414347	0					
ANR	414579	ArgumentList	PSTRING_1_LE		414347	1					
ANR	414580	Argument	PSTRING_1_LE		414347	0					
ANR	414581	Identifier	PSTRING_1_LE		414347	0					
ANR	414582	BreakStatement	break ;	1644:3:38043:38048	414347	63	True				
ANR	414583	Label	case CHAR_PSTRING_2_BE :	1645:2:38052:38074	414347	64	True				
ANR	414584	Identifier	CHAR_PSTRING_2_BE		414347	0					
ANR	414585	IfStatement	if ( m -> type != FILE_PSTRING )		414347	65					
ANR	414586	Condition	m -> type != FILE_PSTRING	1646:7:38083:38105	414347	0	True				
ANR	414587	EqualityExpression	m -> type != FILE_PSTRING		414347	0		!=			
ANR	414588	PtrMemberAccess	m -> type		414347	0					
ANR	414589	Identifier	m		414347	0					
ANR	414590	Identifier	type		414347	1					
ANR	414591	Identifier	FILE_PSTRING		414347	1					
ANR	414592	GotoStatement	goto bad ;	1647:4:38112:38120	414347	1	True				
ANR	414593	Identifier	bad		414347	0					
ANR	414594	ExpressionStatement	SET_LENGTH ( PSTRING_2_BE )	1648:3:38125:38149	414347	66	True				
ANR	414595	CallExpression	SET_LENGTH ( PSTRING_2_BE )		414347	0					
ANR	414596	Callee	SET_LENGTH		414347	0					
ANR	414597	Identifier	SET_LENGTH		414347	0					
ANR	414598	ArgumentList	PSTRING_2_BE		414347	1					
ANR	414599	Argument	PSTRING_2_BE		414347	0					
ANR	414600	Identifier	PSTRING_2_BE		414347	0					
ANR	414601	BreakStatement	break ;	1649:3:38154:38159	414347	67	True				
ANR	414602	Label	case CHAR_PSTRING_2_LE :	1650:2:38163:38185	414347	68	True				
ANR	414603	Identifier	CHAR_PSTRING_2_LE		414347	0					
ANR	414604	IfStatement	if ( m -> type != FILE_PSTRING )		414347	69					
ANR	414605	Condition	m -> type != FILE_PSTRING	1651:7:38194:38216	414347	0	True				
ANR	414606	EqualityExpression	m -> type != FILE_PSTRING		414347	0		!=			
ANR	414607	PtrMemberAccess	m -> type		414347	0					
ANR	414608	Identifier	m		414347	0					
ANR	414609	Identifier	type		414347	1					
ANR	414610	Identifier	FILE_PSTRING		414347	1					
ANR	414611	GotoStatement	goto bad ;	1652:4:38223:38231	414347	1	True				
ANR	414612	Identifier	bad		414347	0					
ANR	414613	ExpressionStatement	SET_LENGTH ( PSTRING_2_LE )	1653:3:38236:38260	414347	70	True				
ANR	414614	CallExpression	SET_LENGTH ( PSTRING_2_LE )		414347	0					
ANR	414615	Callee	SET_LENGTH		414347	0					
ANR	414616	Identifier	SET_LENGTH		414347	0					
ANR	414617	ArgumentList	PSTRING_2_LE		414347	1					
ANR	414618	Argument	PSTRING_2_LE		414347	0					
ANR	414619	Identifier	PSTRING_2_LE		414347	0					
ANR	414620	BreakStatement	break ;	1654:3:38265:38270	414347	71	True				
ANR	414621	Label	case CHAR_PSTRING_4_BE :	1655:2:38274:38296	414347	72	True				
ANR	414622	Identifier	CHAR_PSTRING_4_BE		414347	0					
ANR	414623	IfStatement	if ( m -> type != FILE_PSTRING )		414347	73					
ANR	414624	Condition	m -> type != FILE_PSTRING	1656:7:38305:38327	414347	0	True				
ANR	414625	EqualityExpression	m -> type != FILE_PSTRING		414347	0		!=			
ANR	414626	PtrMemberAccess	m -> type		414347	0					
ANR	414627	Identifier	m		414347	0					
ANR	414628	Identifier	type		414347	1					
ANR	414629	Identifier	FILE_PSTRING		414347	1					
ANR	414630	GotoStatement	goto bad ;	1657:4:38334:38342	414347	1	True				
ANR	414631	Identifier	bad		414347	0					
ANR	414632	ExpressionStatement	SET_LENGTH ( PSTRING_4_BE )	1658:3:38347:38371	414347	74	True				
ANR	414633	CallExpression	SET_LENGTH ( PSTRING_4_BE )		414347	0					
ANR	414634	Callee	SET_LENGTH		414347	0					
ANR	414635	Identifier	SET_LENGTH		414347	0					
ANR	414636	ArgumentList	PSTRING_4_BE		414347	1					
ANR	414637	Argument	PSTRING_4_BE		414347	0					
ANR	414638	Identifier	PSTRING_4_BE		414347	0					
ANR	414639	BreakStatement	break ;	1659:3:38376:38381	414347	75	True				
ANR	414640	Label	case CHAR_PSTRING_4_LE :	1660:2:38385:38407	414347	76	True				
ANR	414641	Identifier	CHAR_PSTRING_4_LE		414347	0					
ANR	414642	SwitchStatement	switch ( m -> type )		414347	77					
ANR	414643	Condition	m -> type	1661:11:38420:38426	414347	0	True				
ANR	414644	PtrMemberAccess	m -> type		414347	0					
ANR	414645	Identifier	m		414347	0					
ANR	414646	Identifier	type		414347	1					
ANR	414647	CompoundStatement		66:20:1673:1673	414347	1					
ANR	414648	Label	case FILE_PSTRING :	1662:3:38434:38451	414347	0	True				
ANR	414649	Identifier	FILE_PSTRING		414347	0					
ANR	414650	Label	case FILE_REGEX :	1663:3:38456:38471	414347	1	True				
ANR	414651	Identifier	FILE_REGEX		414347	0					
ANR	414652	BreakStatement	break ;	1664:4:38477:38482	414347	2	True				
ANR	414653	Label	default :	1665:3:38487:38494	414347	3	True				
ANR	414654	Identifier	default		414347	0					
ANR	414655	GotoStatement	goto bad ;	1666:4:38500:38508	414347	4	True				
ANR	414656	Identifier	bad		414347	0					
ANR	414657	ExpressionStatement	SET_LENGTH ( PSTRING_4_LE )	1668:3:38518:38542	414347	78	True				
ANR	414658	CallExpression	SET_LENGTH ( PSTRING_4_LE )		414347	0					
ANR	414659	Callee	SET_LENGTH		414347	0					
ANR	414660	Identifier	SET_LENGTH		414347	0					
ANR	414661	ArgumentList	PSTRING_4_LE		414347	1					
ANR	414662	Argument	PSTRING_4_LE		414347	0					
ANR	414663	Identifier	PSTRING_4_LE		414347	0					
ANR	414664	BreakStatement	break ;	1669:3:38547:38552	414347	79	True				
ANR	414665	Label	case CHAR_PSTRING_LENGTH_INCLUDES_ITSELF :	1670:2:38556:38596	414347	80	True				
ANR	414666	Identifier	CHAR_PSTRING_LENGTH_INCLUDES_ITSELF		414347	0					
ANR	414667	IfStatement	if ( m -> type != FILE_PSTRING )		414347	81					
ANR	414668	Condition	m -> type != FILE_PSTRING	1671:7:38605:38627	414347	0	True				
ANR	414669	EqualityExpression	m -> type != FILE_PSTRING		414347	0		!=			
ANR	414670	PtrMemberAccess	m -> type		414347	0					
ANR	414671	Identifier	m		414347	0					
ANR	414672	Identifier	type		414347	1					
ANR	414673	Identifier	FILE_PSTRING		414347	1					
ANR	414674	GotoStatement	goto bad ;	1672:4:38634:38642	414347	1	True				
ANR	414675	Identifier	bad		414347	0					
ANR	414676	ExpressionStatement	m -> str_flags |= PSTRING_LENGTH_INCLUDES_ITSELF	1673:3:38647:38693	414347	82	True				
ANR	414677	AssignmentExpression	m -> str_flags |= PSTRING_LENGTH_INCLUDES_ITSELF		414347	0		|=			
ANR	414678	PtrMemberAccess	m -> str_flags		414347	0					
ANR	414679	Identifier	m		414347	0					
ANR	414680	Identifier	str_flags		414347	1					
ANR	414681	Identifier	PSTRING_LENGTH_INCLUDES_ITSELF		414347	1					
ANR	414682	BreakStatement	break ;	1674:3:38698:38703	414347	83	True				
ANR	414683	Label	default :	1675:2:38707:38714	414347	84	True				
ANR	414684	Identifier	default		414347	0					
ANR	414685	Label	bad :	1676:2:38718:38721	414347	85	True				
ANR	414686	Identifier	bad		414347	0					
ANR	414687	IfStatement	if ( ms -> flags & MAGIC_CHECK )		414347	86					
ANR	414688	Condition	ms -> flags & MAGIC_CHECK	1677:7:38730:38752	414347	0	True				
ANR	414689	BitAndExpression	ms -> flags & MAGIC_CHECK		414347	0		&			
ANR	414690	PtrMemberAccess	ms -> flags		414347	0					
ANR	414691	Identifier	ms		414347	0					
ANR	414692	Identifier	flags		414347	1					
ANR	414693	Identifier	MAGIC_CHECK		414347	1					
ANR	414694	Statement	file_magwarn	1678:4:38759:38770	414347	1	True				
ANR	414695	Statement	(	1678:16:38771:38771	414347	87	True				
ANR	414696	Statement	ms	1678:17:38772:38773	414347	88	True				
ANR	414697	Statement	","	1678:19:38774:38774	414347	89	True				
ANR	414698	Statement	"""string modifier `%c' """	1678:21:38776:38798	414347	90	True				
ANR	414699	Statement	"""invalid"""	1679:5:38805:38813	414347	91	True				
ANR	414700	Statement	","	1679:14:38814:38814	414347	92	True				
ANR	414701	Statement	*	1679:16:38816:38816	414347	93	True				
ANR	414702	Statement	l	1679:17:38817:38817	414347	94	True				
ANR	414703	Statement	)	1679:18:38818:38818	414347	95	True				
ANR	414704	ExpressionStatement		1679:19:38819:38819	414347	96	True				
ANR	414705	GotoStatement	goto out ;	1680:3:38824:38832	414347	97	True				
ANR	414706	Identifier	out		414347	0					
ANR	414707	IfStatement	if ( l [ 1 ] == '/' && ! isspace ( ( unsigned char ) l [ 2 ] ) )		414347	1					
ANR	414708	Condition	l [ 1 ] == '/' && ! isspace ( ( unsigned char ) l [ 2 ] )	1683:6:38887:38930	414347	0	True				
ANR	414709	AndExpression	l [ 1 ] == '/' && ! isspace ( ( unsigned char ) l [ 2 ] )		414347	0		&&			
ANR	414710	EqualityExpression	l [ 1 ] == '/'		414347	0		==			
ANR	414711	ArrayIndexing	l [ 1 ]		414347	0					
ANR	414712	Identifier	l		414347	0					
ANR	414713	PrimaryExpression	1		414347	1					
ANR	414714	PrimaryExpression	'/'		414347	1					
ANR	414715	UnaryOperationExpression	! isspace ( ( unsigned char ) l [ 2 ] )		414347	1					
ANR	414716	UnaryOperator	!		414347	0					
ANR	414717	CallExpression	isspace ( ( unsigned char ) l [ 2 ] )		414347	1					
ANR	414718	Callee	isspace		414347	0					
ANR	414719	Identifier	isspace		414347	0					
ANR	414720	ArgumentList	( unsigned char ) l [ 2 ]		414347	1					
ANR	414721	Argument	( unsigned char ) l [ 2 ]		414347	0					
ANR	414722	CastExpression	( unsigned char ) l [ 2 ]		414347	0					
ANR	414723	CastTarget	unsigned char		414347	0					
ANR	414724	ArrayIndexing	l [ 2 ]		414347	1					
ANR	414725	Identifier	l		414347	0					
ANR	414726	PrimaryExpression	2		414347	1					
ANR	414727	ExpressionStatement	l ++	1684:3:38936:38939	414347	1	True				
ANR	414728	PostIncDecOperationExpression	l ++		414347	0					
ANR	414729	Identifier	l		414347	0					
ANR	414730	IncDec	++		414347	1					
ANR	414731	IfStatement	"if ( string_modifier_check ( ms , m ) == - 1 )"		414347	4					
ANR	414732	Condition	"string_modifier_check ( ms , m ) == - 1"	1686:5:38949:38982	414347	0	True				
ANR	414733	EqualityExpression	"string_modifier_check ( ms , m ) == - 1"		414347	0		==			
ANR	414734	CallExpression	"string_modifier_check ( ms , m )"		414347	0					
ANR	414735	Callee	string_modifier_check		414347	0					
ANR	414736	Identifier	string_modifier_check		414347	0					
ANR	414737	ArgumentList	ms		414347	1					
ANR	414738	Argument	ms		414347	0					
ANR	414739	Identifier	ms		414347	0					
ANR	414740	Argument	m		414347	1					
ANR	414741	Identifier	m		414347	0					
ANR	414742	UnaryOperationExpression	- 1		414347	1					
ANR	414743	UnaryOperator	-		414347	0					
ANR	414744	PrimaryExpression	1		414347	1					
ANR	414745	GotoStatement	goto out ;	1687:2:38987:38995	414347	1	True				
ANR	414746	Identifier	out		414347	0					
ANR	414747	ExpressionStatement	* lp = l	1688:1:38998:39005	414347	5	True				
ANR	414748	AssignmentExpression	* lp = l		414347	0		=			
ANR	414749	UnaryOperationExpression	* lp		414347	0					
ANR	414750	UnaryOperator	*		414347	0					
ANR	414751	Identifier	lp		414347	1					
ANR	414752	Identifier	l		414347	1					
ANR	414753	ReturnStatement	return 0 ;	1689:1:39008:39016	414347	6	True				
ANR	414754	PrimaryExpression	0		414347	0					
ANR	414755	Label	out :	1690:0:39018:39021	414347	7	True				
ANR	414756	Identifier	out		414347	0					
ANR	414757	ExpressionStatement	* lp = l	1691:1:39024:39031	414347	8	True				
ANR	414758	AssignmentExpression	* lp = l		414347	0		=			
ANR	414759	UnaryOperationExpression	* lp		414347	0					
ANR	414760	UnaryOperator	*		414347	0					
ANR	414761	Identifier	lp		414347	1					
ANR	414762	Identifier	l		414347	1					
ANR	414763	ReturnStatement	return - 1 ;	1692:1:39034:39043	414347	9	True				
ANR	414764	UnaryOperationExpression	- 1		414347	0					
ANR	414765	UnaryOperator	-		414347	0					
ANR	414766	PrimaryExpression	1		414347	1					
ANR	414767	ReturnType	int		414347	1					
ANR	414768	Identifier	parse_string_modifier		414347	2					
ANR	414769	ParameterList	"struct magic_set * ms , struct magic * m , const char * * lp"		414347	3					
ANR	414770	Parameter	struct magic_set * ms	1595:22:36699:36718	414347	0	True				
ANR	414771	ParameterType	struct magic_set *		414347	0					
ANR	414772	Identifier	ms		414347	1					
ANR	414773	Parameter	struct magic * m	1595:44:36721:36735	414347	1	True				
ANR	414774	ParameterType	struct magic *		414347	0					
ANR	414775	Identifier	m		414347	1					
ANR	414776	Parameter	const char * * lp	1595:61:36738:36752	414347	2	True				
ANR	414777	ParameterType	const char * *		414347	0					
ANR	414778	Identifier	lp		414347	1					
ANR	414779	CFGEntryNode	ENTRY		414347		True				
ANR	414780	CFGExitNode	EXIT		414347		True				
ANR	414781	Symbol	STRING_TRIM		414347						
ANR	414782	Symbol	PSTRING_2_LE		414347						
ANR	414783	Symbol	lp		414347						
ANR	414784	Symbol	PSTRING_4_LE		414347						
ANR	414785	Symbol	STRING_COMPACT_WHITESPACE		414347						
ANR	414786	Symbol	STRING_BINTEST		414347						
ANR	414787	Symbol	REGEX_OFFSET_START		414347						
ANR	414788	Symbol	m -> str_flags		414347						
ANR	414789	Symbol	PSTRING_4_BE		414347						
ANR	414790	Symbol	PSTRING_2_BE		414347						
ANR	414791	Symbol	* ms		414347						
ANR	414792	Symbol	m -> type		414347						
ANR	414793	Symbol	have_range		414347						
ANR	414794	Symbol	strtoul		414347						
ANR	414795	Symbol	STRING_IGNORE_UPPERCASE		414347						
ANR	414796	Symbol	* ++ l		414347						
ANR	414797	Symbol	CAST		414347						
ANR	414798	Symbol	STRING_IGNORE_LOWERCASE		414347						
ANR	414799	Symbol	PSTRING_1_LE		414347						
ANR	414800	Symbol	ms		414347						
ANR	414801	Symbol	isspace		414347						
ANR	414802	Symbol	* lp		414347						
ANR	414803	Symbol	uint32_t		414347						
ANR	414804	Symbol	FILE_PSTRING		414347						
ANR	414805	Symbol	m -> str_range		414347						
ANR	414806	Symbol	STRING_COMPACT_OPTIONAL_WHITESPACE		414347						
ANR	414807	Symbol	l		414347						
ANR	414808	Symbol	m		414347						
ANR	414809	Symbol	STRING_TEXTTEST		414347						
ANR	414810	Symbol	string_modifier_check		414347						
ANR	414811	Symbol	t		414347						
ANR	414812	Symbol	* l		414347						
ANR	414813	Symbol	* m		414347						
ANR	414814	Symbol	MAGIC_CHECK		414347						
ANR	414815	Symbol	& t		414347						
ANR	414816	Symbol	ms -> flags		414347						
ANR	414817	Symbol	PSTRING_LENGTH_INCLUDES_ITSELF		414347						
ANR	414818	Function	parse	1698:8:39131:47526							
ANR	414819	FunctionDef	"parse (struct magic_set * ms , struct magic_entry * me , const char * line , size_t lineno , int action)"		414818	0					
ANR	414820	CompoundStatement		1701:0:39236:47526	414818	0					
ANR	414821	Statement	static	1703:1:39266:39271	414818	0	True				
ANR	414822	IdentifierDeclStatement	uint32_t last_cont_level = 0 ;	1703:8:39273:39301	414818	1	True				
ANR	414823	IdentifierDecl	last_cont_level = 0		414818	0					
ANR	414824	IdentifierDeclType	uint32_t		414818	0					
ANR	414825	Identifier	last_cont_level		414818	1					
ANR	414826	AssignmentExpression	last_cont_level = 0		414818	2		=			
ANR	414827	Identifier	last_cont_level		414818	0					
ANR	414828	PrimaryExpression	0		414818	1					
ANR	414829	IdentifierDeclStatement	size_t i ;	1705:1:39311:39319	414818	2	True				
ANR	414830	IdentifierDecl	i		414818	0					
ANR	414831	IdentifierDeclType	size_t		414818	0					
ANR	414832	Identifier	i		414818	1					
ANR	414833	IdentifierDeclStatement	struct magic * m ;	1706:1:39322:39337	414818	3	True				
ANR	414834	IdentifierDecl	* m		414818	0					
ANR	414835	IdentifierDeclType	struct magic *		414818	0					
ANR	414836	Identifier	m		414818	1					
ANR	414837	IdentifierDeclStatement	const char * l = line ;	1707:1:39340:39360	414818	4	True				
ANR	414838	IdentifierDecl	* l = line		414818	0					
ANR	414839	IdentifierDeclType	const char *		414818	0					
ANR	414840	Identifier	l		414818	1					
ANR	414841	AssignmentExpression	* l = line		414818	2		=			
ANR	414842	Identifier	line		414818	0					
ANR	414843	Identifier	line		414818	1					
ANR	414844	IdentifierDeclStatement	char * t ;	1708:1:39363:39370	414818	5	True				
ANR	414845	IdentifierDecl	* t		414818	0					
ANR	414846	IdentifierDeclType	char *		414818	0					
ANR	414847	Identifier	t		414818	1					
ANR	414848	IdentifierDeclStatement	int op ;	1709:1:39373:39379	414818	6	True				
ANR	414849	IdentifierDecl	op		414818	0					
ANR	414850	IdentifierDeclType	int		414818	0					
ANR	414851	Identifier	op		414818	1					
ANR	414852	IdentifierDeclStatement	uint32_t cont_level ;	1710:1:39382:39401	414818	7	True				
ANR	414853	IdentifierDecl	cont_level		414818	0					
ANR	414854	IdentifierDeclType	uint32_t		414818	0					
ANR	414855	Identifier	cont_level		414818	1					
ANR	414856	IdentifierDeclStatement	int32_t diff ;	1711:1:39404:39416	414818	8	True				
ANR	414857	IdentifierDecl	diff		414818	0					
ANR	414858	IdentifierDeclType	int32_t		414818	0					
ANR	414859	Identifier	diff		414818	1					
ANR	414860	ExpressionStatement	cont_level = 0	1713:1:39420:39434	414818	9	True				
ANR	414861	AssignmentExpression	cont_level = 0		414818	0		=			
ANR	414862	Identifier	cont_level		414818	0					
ANR	414863	PrimaryExpression	0		414818	1					
ANR	414864	WhileStatement	while ( * l == '>' )		414818	10					
ANR	414865	Condition	* l == '>'	1718:8:39476:39484	414818	0	True				
ANR	414866	EqualityExpression	* l == '>'		414818	0		==			
ANR	414867	UnaryOperationExpression	* l		414818	0					
ANR	414868	UnaryOperator	*		414818	0					
ANR	414869	Identifier	l		414818	1					
ANR	414870	PrimaryExpression	'>'		414818	1					
ANR	414871	CompoundStatement		18:19:250:250	414818	1					
ANR	414872	ExpressionStatement	++ l	1719:2:39491:39494	414818	0	True				
ANR	414873	UnaryExpression	++ l		414818	0					
ANR	414874	IncDec	++		414818	0					
ANR	414875	Identifier	l		414818	1					
ANR	414876	ExpressionStatement	cont_level ++	1720:2:39515:39527	414818	1	True				
ANR	414877	PostIncDecOperationExpression	cont_level ++		414818	0					
ANR	414878	Identifier	cont_level		414818	0					
ANR	414879	IncDec	++		414818	1					
ANR	414880	IfStatement	if ( cont_level == 0 || cont_level > last_cont_level )		414818	11					
ANR	414881	Condition	cont_level == 0 || cont_level > last_cont_level	1723:5:39565:39611	414818	0	True				
ANR	414882	OrExpression	cont_level == 0 || cont_level > last_cont_level		414818	0		||			
ANR	414883	EqualityExpression	cont_level == 0		414818	0		==			
ANR	414884	Identifier	cont_level		414818	0					
ANR	414885	PrimaryExpression	0		414818	1					
ANR	414886	RelationalExpression	cont_level > last_cont_level		414818	1		>			
ANR	414887	Identifier	cont_level		414818	0					
ANR	414888	Identifier	last_cont_level		414818	1					
ANR	414889	IfStatement	"if ( file_check_mem ( ms , cont_level ) == - 1 )"		414818	1					
ANR	414890	Condition	"file_check_mem ( ms , cont_level ) == - 1"	1724:6:39620:39655	414818	0	True				
ANR	414891	EqualityExpression	"file_check_mem ( ms , cont_level ) == - 1"		414818	0		==			
ANR	414892	CallExpression	"file_check_mem ( ms , cont_level )"		414818	0					
ANR	414893	Callee	file_check_mem		414818	0					
ANR	414894	Identifier	file_check_mem		414818	0					
ANR	414895	ArgumentList	ms		414818	1					
ANR	414896	Argument	ms		414818	0					
ANR	414897	Identifier	ms		414818	0					
ANR	414898	Argument	cont_level		414818	1					
ANR	414899	Identifier	cont_level		414818	0					
ANR	414900	UnaryOperationExpression	- 1		414818	1					
ANR	414901	UnaryOperator	-		414818	0					
ANR	414902	PrimaryExpression	1		414818	1					
ANR	414903	ReturnStatement	return - 1 ;	1725:3:39661:39670	414818	1	True				
ANR	414904	UnaryOperationExpression	- 1		414818	0					
ANR	414905	UnaryOperator	-		414818	0					
ANR	414906	PrimaryExpression	1		414818	1					
ANR	414907	ExpressionStatement	last_cont_level = cont_level	1726:1:39673:39701	414818	12	True				
ANR	414908	AssignmentExpression	last_cont_level = cont_level		414818	0		=			
ANR	414909	Identifier	last_cont_level		414818	0					
ANR	414910	Identifier	cont_level		414818	1					
ANR	414911	IfStatement	if ( cont_level != 0 )		414818	13					
ANR	414912	Condition	cont_level != 0	1728:5:39715:39729	414818	0	True				
ANR	414913	EqualityExpression	cont_level != 0		414818	0		!=			
ANR	414914	Identifier	cont_level		414818	0					
ANR	414915	PrimaryExpression	0		414818	1					
ANR	414916	CompoundStatement		28:22:495:495	414818	1					
ANR	414917	IfStatement	if ( me -> mp == NULL )		414818	0					
ANR	414918	Condition	me -> mp == NULL	1729:6:39740:39753	414818	0	True				
ANR	414919	EqualityExpression	me -> mp == NULL		414818	0		==			
ANR	414920	PtrMemberAccess	me -> mp		414818	0					
ANR	414921	Identifier	me		414818	0					
ANR	414922	Identifier	mp		414818	1					
ANR	414923	Identifier	NULL		414818	1					
ANR	414924	CompoundStatement		29:22:519:519	414818	1					
ANR	414925	ExpressionStatement	"file_magerror ( ms , ""No current entry for continuation"" )"	1730:3:39761:39815	414818	0	True				
ANR	414926	CallExpression	"file_magerror ( ms , ""No current entry for continuation"" )"		414818	0					
ANR	414927	Callee	file_magerror		414818	0					
ANR	414928	Identifier	file_magerror		414818	0					
ANR	414929	ArgumentList	ms		414818	1					
ANR	414930	Argument	ms		414818	0					
ANR	414931	Identifier	ms		414818	0					
ANR	414932	Argument	"""No current entry for continuation"""		414818	1					
ANR	414933	PrimaryExpression	"""No current entry for continuation"""		414818	0					
ANR	414934	ReturnStatement	return - 1 ;	1731:3:39820:39829	414818	1	True				
ANR	414935	UnaryOperationExpression	- 1		414818	0					
ANR	414936	UnaryOperator	-		414818	0					
ANR	414937	PrimaryExpression	1		414818	1					
ANR	414938	IfStatement	if ( me -> cont_count == 0 )		414818	1					
ANR	414939	Condition	me -> cont_count == 0	1733:6:39841:39859	414818	0	True				
ANR	414940	EqualityExpression	me -> cont_count == 0		414818	0		==			
ANR	414941	PtrMemberAccess	me -> cont_count		414818	0					
ANR	414942	Identifier	me		414818	0					
ANR	414943	Identifier	cont_count		414818	1					
ANR	414944	PrimaryExpression	0		414818	1					
ANR	414945	CompoundStatement		33:27:625:625	414818	1					
ANR	414946	ExpressionStatement	"file_magerror ( ms , ""Continuations present with 0 count"" )"	1734:3:39867:39922	414818	0	True				
ANR	414947	CallExpression	"file_magerror ( ms , ""Continuations present with 0 count"" )"		414818	0					
ANR	414948	Callee	file_magerror		414818	0					
ANR	414949	Identifier	file_magerror		414818	0					
ANR	414950	ArgumentList	ms		414818	1					
ANR	414951	Argument	ms		414818	0					
ANR	414952	Identifier	ms		414818	0					
ANR	414953	Argument	"""Continuations present with 0 count"""		414818	1					
ANR	414954	PrimaryExpression	"""Continuations present with 0 count"""		414818	0					
ANR	414955	ReturnStatement	return - 1 ;	1735:3:39927:39936	414818	1	True				
ANR	414956	UnaryOperationExpression	- 1		414818	0					
ANR	414957	UnaryOperator	-		414818	0					
ANR	414958	PrimaryExpression	1		414818	1					
ANR	414959	ExpressionStatement	m = & me -> mp [ me -> cont_count - 1 ]	1737:2:39944:39975	414818	2	True				
ANR	414960	AssignmentExpression	m = & me -> mp [ me -> cont_count - 1 ]		414818	0		=			
ANR	414961	Identifier	m		414818	0					
ANR	414962	UnaryOperationExpression	& me -> mp [ me -> cont_count - 1 ]		414818	1					
ANR	414963	UnaryOperator	&		414818	0					
ANR	414964	ArrayIndexing	me -> mp [ me -> cont_count - 1 ]		414818	1					
ANR	414965	PtrMemberAccess	me -> mp		414818	0					
ANR	414966	Identifier	me		414818	0					
ANR	414967	Identifier	mp		414818	1					
ANR	414968	AdditiveExpression	me -> cont_count - 1		414818	1		-			
ANR	414969	PtrMemberAccess	me -> cont_count		414818	0					
ANR	414970	Identifier	me		414818	0					
ANR	414971	Identifier	cont_count		414818	1					
ANR	414972	PrimaryExpression	1		414818	1					
ANR	414973	ExpressionStatement	diff = ( int32_t ) cont_level - ( int32_t ) m -> cont_level	1738:2:39979:40030	414818	3	True				
ANR	414974	AssignmentExpression	diff = ( int32_t ) cont_level - ( int32_t ) m -> cont_level		414818	0		=			
ANR	414975	Identifier	diff		414818	0					
ANR	414976	AdditiveExpression	( int32_t ) cont_level - ( int32_t ) m -> cont_level		414818	1		-			
ANR	414977	CastExpression	( int32_t ) cont_level		414818	0					
ANR	414978	CastTarget	int32_t		414818	0					
ANR	414979	Identifier	cont_level		414818	1					
ANR	414980	CastExpression	( int32_t ) m -> cont_level		414818	1					
ANR	414981	CastTarget	int32_t		414818	0					
ANR	414982	PtrMemberAccess	m -> cont_level		414818	1					
ANR	414983	Identifier	m		414818	0					
ANR	414984	Identifier	cont_level		414818	1					
ANR	414985	IfStatement	if ( diff > 1 )		414818	4					
ANR	414986	Condition	diff > 1	1739:6:40038:40045	414818	0	True				
ANR	414987	RelationalExpression	diff > 1		414818	0		>			
ANR	414988	Identifier	diff		414818	0					
ANR	414989	PrimaryExpression	1		414818	1					
ANR	414990	Statement	file_magwarn	1740:3:40051:40062	414818	1	True				
ANR	414991	Statement	(	1740:15:40063:40063	414818	5	True				
ANR	414992	Statement	ms	1740:16:40064:40065	414818	6	True				
ANR	414993	Statement	","	1740:18:40066:40066	414818	7	True				
ANR	414994	Statement	"""New continuation level %u is more """	1740:20:40068:40103	414818	8	True				
ANR	414995	Statement	"""than one larger than current level %u"""	1741:7:40112:40150	414818	9	True				
ANR	414996	Statement	","	1741:46:40151:40151	414818	10	True				
ANR	414997	Statement	cont_level	1741:48:40153:40162	414818	11	True				
ANR	414998	Statement	","	1741:58:40163:40163	414818	12	True				
ANR	414999	Statement	m	1742:7:40172:40172	414818	13	True				
ANR	415000	Statement	->	1742:8:40173:40174	414818	14	True				
ANR	415001	Statement	cont_level	1742:10:40175:40184	414818	15	True				
ANR	415002	Statement	)	1742:20:40185:40185	414818	16	True				
ANR	415003	ExpressionStatement		1742:21:40186:40186	414818	17	True				
ANR	415004	IfStatement	if ( me -> cont_count == me -> max_count )		414818	18					
ANR	415005	Condition	me -> cont_count == me -> max_count	1743:6:40194:40224	414818	0	True				
ANR	415006	EqualityExpression	me -> cont_count == me -> max_count		414818	0		==			
ANR	415007	PtrMemberAccess	me -> cont_count		414818	0					
ANR	415008	Identifier	me		414818	0					
ANR	415009	Identifier	cont_count		414818	1					
ANR	415010	PtrMemberAccess	me -> max_count		414818	1					
ANR	415011	Identifier	me		414818	0					
ANR	415012	Identifier	max_count		414818	1					
ANR	415013	CompoundStatement		45:3:1016:1056	414818	1					
ANR	415014	IdentifierDeclStatement	struct magic * nm ;	1744:3:40232:40248	414818	0	True				
ANR	415015	IdentifierDecl	* nm		414818	0					
ANR	415016	IdentifierDeclType	struct magic *		414818	0					
ANR	415017	Identifier	nm		414818	1					
ANR	415018	IdentifierDeclStatement	size_t cnt = me -> max_count + ALLOC_CHUNK ;	1745:3:40253:40293	414818	1	True				
ANR	415019	IdentifierDecl	cnt = me -> max_count + ALLOC_CHUNK		414818	0					
ANR	415020	IdentifierDeclType	size_t		414818	0					
ANR	415021	Identifier	cnt		414818	1					
ANR	415022	AssignmentExpression	cnt = me -> max_count + ALLOC_CHUNK		414818	2		=			
ANR	415023	Identifier	cnt		414818	0					
ANR	415024	AdditiveExpression	me -> max_count + ALLOC_CHUNK		414818	1		+			
ANR	415025	PtrMemberAccess	me -> max_count		414818	0					
ANR	415026	Identifier	me		414818	0					
ANR	415027	Identifier	max_count		414818	1					
ANR	415028	Identifier	ALLOC_CHUNK		414818	1					
ANR	415029	Statement	if	1746:3:40298:40299	414818	2	True				
ANR	415030	Statement	(	1746:6:40301:40301	414818	3	True				
ANR	415031	Statement	(	1746:7:40302:40302	414818	4	True				
ANR	415032	Statement	nm	1746:8:40303:40304	414818	5	True				
ANR	415033	Statement	=	1746:11:40306:40306	414818	6	True				
ANR	415034	Statement	CAST	1746:13:40308:40311	414818	7	True				
ANR	415035	Statement	(	1746:17:40312:40312	414818	8	True				
ANR	415036	Statement	struct	1746:18:40313:40318	414818	9	True				
ANR	415037	Statement	magic	1746:25:40320:40324	414818	10	True				
ANR	415038	Statement	*	1746:31:40326:40326	414818	11	True				
ANR	415039	Statement	","	1746:32:40327:40327	414818	12	True				
ANR	415040	Statement	erealloc	1746:34:40329:40336	414818	13	True				
ANR	415041	Statement	(	1746:42:40337:40337	414818	14	True				
ANR	415042	Statement	me	1746:43:40338:40339	414818	15	True				
ANR	415043	Statement	->	1746:45:40340:40341	414818	16	True				
ANR	415044	Statement	mp	1746:47:40342:40343	414818	17	True				
ANR	415045	Statement	","	1746:49:40344:40344	414818	18	True				
ANR	415046	Statement	sizeof	1747:7:40353:40358	414818	19	True				
ANR	415047	Statement	(	1747:13:40359:40359	414818	20	True				
ANR	415048	Statement	*	1747:14:40360:40360	414818	21	True				
ANR	415049	Statement	nm	1747:15:40361:40362	414818	22	True				
ANR	415050	Statement	)	1747:17:40363:40363	414818	23	True				
ANR	415051	Statement	*	1747:19:40365:40365	414818	24	True				
ANR	415052	Statement	cnt	1747:21:40367:40369	414818	25	True				
ANR	415053	Statement	)	1747:24:40370:40370	414818	26	True				
ANR	415054	Statement	)	1747:25:40371:40371	414818	27	True				
ANR	415055	Statement	)	1747:26:40372:40372	414818	28	True				
ANR	415056	Statement	==	1747:28:40374:40375	414818	29	True				
ANR	415057	Statement	NULL	1747:31:40377:40380	414818	30	True				
ANR	415058	Statement	)	1747:35:40381:40381	414818	31	True				
ANR	415059	CompoundStatement		47:37:1146:1146	414818	32					
ANR	415060	ExpressionStatement	"file_oomem ( ms , sizeof ( * nm ) * cnt )"	1748:4:40389:40422	414818	0	True				
ANR	415061	CallExpression	"file_oomem ( ms , sizeof ( * nm ) * cnt )"		414818	0					
ANR	415062	Callee	file_oomem		414818	0					
ANR	415063	Identifier	file_oomem		414818	0					
ANR	415064	ArgumentList	ms		414818	1					
ANR	415065	Argument	ms		414818	0					
ANR	415066	Identifier	ms		414818	0					
ANR	415067	Argument	sizeof ( * nm ) * cnt		414818	1					
ANR	415068	MultiplicativeExpression	sizeof ( * nm ) * cnt		414818	0		*			
ANR	415069	SizeofExpression	sizeof ( * nm )		414818	0					
ANR	415070	Sizeof	sizeof		414818	0					
ANR	415071	UnaryOperationExpression	* nm		414818	1					
ANR	415072	UnaryOperator	*		414818	0					
ANR	415073	Identifier	nm		414818	1					
ANR	415074	Identifier	cnt		414818	1					
ANR	415075	ReturnStatement	return - 1 ;	1749:4:40428:40437	414818	1	True				
ANR	415076	UnaryOperationExpression	- 1		414818	0					
ANR	415077	UnaryOperator	-		414818	0					
ANR	415078	PrimaryExpression	1		414818	1					
ANR	415079	ExpressionStatement	me -> mp = m = nm	1751:3:40447:40462	414818	33	True				
ANR	415080	AssignmentExpression	me -> mp = m = nm		414818	0		=			
ANR	415081	PtrMemberAccess	me -> mp		414818	0					
ANR	415082	Identifier	me		414818	0					
ANR	415083	Identifier	mp		414818	1					
ANR	415084	AssignmentExpression	m = nm		414818	1		=			
ANR	415085	Identifier	m		414818	0					
ANR	415086	Identifier	nm		414818	1					
ANR	415087	ExpressionStatement	"me -> max_count = CAST ( uint32_t , cnt )"	1752:3:40467:40502	414818	34	True				
ANR	415088	AssignmentExpression	"me -> max_count = CAST ( uint32_t , cnt )"		414818	0		=			
ANR	415089	PtrMemberAccess	me -> max_count		414818	0					
ANR	415090	Identifier	me		414818	0					
ANR	415091	Identifier	max_count		414818	1					
ANR	415092	CallExpression	"CAST ( uint32_t , cnt )"		414818	1					
ANR	415093	Callee	CAST		414818	0					
ANR	415094	Identifier	CAST		414818	0					
ANR	415095	ArgumentList	uint32_t		414818	1					
ANR	415096	Argument	uint32_t		414818	0					
ANR	415097	Identifier	uint32_t		414818	0					
ANR	415098	Argument	cnt		414818	1					
ANR	415099	Identifier	cnt		414818	0					
ANR	415100	ExpressionStatement	m = & me -> mp [ me -> cont_count ++ ]	1754:2:40510:40539	414818	19	True				
ANR	415101	AssignmentExpression	m = & me -> mp [ me -> cont_count ++ ]		414818	0		=			
ANR	415102	Identifier	m		414818	0					
ANR	415103	UnaryOperationExpression	& me -> mp [ me -> cont_count ++ ]		414818	1					
ANR	415104	UnaryOperator	&		414818	0					
ANR	415105	ArrayIndexing	me -> mp [ me -> cont_count ++ ]		414818	1					
ANR	415106	PtrMemberAccess	me -> mp		414818	0					
ANR	415107	Identifier	me		414818	0					
ANR	415108	Identifier	mp		414818	1					
ANR	415109	PostIncDecOperationExpression	me -> cont_count ++		414818	1					
ANR	415110	PtrMemberAccess	me -> cont_count		414818	0					
ANR	415111	Identifier	me		414818	0					
ANR	415112	Identifier	cont_count		414818	1					
ANR	415113	IncDec	++		414818	1					
ANR	415114	ExpressionStatement	"( void ) memset ( m , 0 , sizeof ( * m ) )"	1755:2:40543:40573	414818	20	True				
ANR	415115	CastExpression	"( void ) memset ( m , 0 , sizeof ( * m ) )"		414818	0					
ANR	415116	CastTarget	void		414818	0					
ANR	415117	CallExpression	"memset ( m , 0 , sizeof ( * m ) )"		414818	1					
ANR	415118	Callee	memset		414818	0					
ANR	415119	Identifier	memset		414818	0					
ANR	415120	ArgumentList	m		414818	1					
ANR	415121	Argument	m		414818	0					
ANR	415122	Identifier	m		414818	0					
ANR	415123	Argument	0		414818	1					
ANR	415124	PrimaryExpression	0		414818	0					
ANR	415125	Argument	sizeof ( * m )		414818	2					
ANR	415126	SizeofExpression	sizeof ( * m )		414818	0					
ANR	415127	Sizeof	sizeof		414818	0					
ANR	415128	UnaryOperationExpression	* m		414818	1					
ANR	415129	UnaryOperator	*		414818	0					
ANR	415130	Identifier	m		414818	1					
ANR	415131	ExpressionStatement	m -> cont_level = cont_level	1756:2:40577:40603	414818	21	True				
ANR	415132	AssignmentExpression	m -> cont_level = cont_level		414818	0		=			
ANR	415133	PtrMemberAccess	m -> cont_level		414818	0					
ANR	415134	Identifier	m		414818	0					
ANR	415135	Identifier	cont_level		414818	1					
ANR	415136	Identifier	cont_level		414818	1					
ANR	415137	ElseStatement	else		414818	0					
ANR	415138	CompoundStatement		58:9:1387:1430	414818	0					
ANR	415139	Statement	static	1758:2:40617:40622	414818	0	True				
ANR	415140	IdentifierDeclStatement	const size_t len = sizeof ( * m ) * ALLOC_CHUNK ;	1758:9:40624:40667	414818	1	True				
ANR	415141	IdentifierDecl	len = sizeof ( * m ) * ALLOC_CHUNK		414818	0					
ANR	415142	IdentifierDeclType	const size_t		414818	0					
ANR	415143	Identifier	len		414818	1					
ANR	415144	AssignmentExpression	len = sizeof ( * m ) * ALLOC_CHUNK		414818	2		=			
ANR	415145	Identifier	len		414818	0					
ANR	415146	MultiplicativeExpression	sizeof ( * m ) * ALLOC_CHUNK		414818	1		*			
ANR	415147	SizeofExpression	sizeof ( * m )		414818	0					
ANR	415148	Sizeof	sizeof		414818	0					
ANR	415149	UnaryOperationExpression	* m		414818	1					
ANR	415150	UnaryOperator	*		414818	0					
ANR	415151	Identifier	m		414818	1					
ANR	415152	Identifier	ALLOC_CHUNK		414818	1					
ANR	415153	IfStatement	if ( me -> mp != NULL )		414818	2					
ANR	415154	Condition	me -> mp != NULL	1759:6:40675:40688	414818	0	True				
ANR	415155	EqualityExpression	me -> mp != NULL		414818	0		!=			
ANR	415156	PtrMemberAccess	me -> mp		414818	0					
ANR	415157	Identifier	me		414818	0					
ANR	415158	Identifier	mp		414818	1					
ANR	415159	Identifier	NULL		414818	1					
ANR	415160	ReturnStatement	return 1 ;	1760:3:40694:40702	414818	1	True				
ANR	415161	PrimaryExpression	1		414818	0					
ANR	415162	Statement	if	1761:2:40706:40707	414818	3	True				
ANR	415163	Statement	(	1761:5:40709:40709	414818	4	True				
ANR	415164	Statement	(	1761:6:40710:40710	414818	5	True				
ANR	415165	Statement	m	1761:7:40711:40711	414818	6	True				
ANR	415166	Statement	=	1761:9:40713:40713	414818	7	True				
ANR	415167	Statement	CAST	1761:11:40715:40718	414818	8	True				
ANR	415168	Statement	(	1761:15:40719:40719	414818	9	True				
ANR	415169	Statement	struct	1761:16:40720:40725	414818	10	True				
ANR	415170	Statement	magic	1761:23:40727:40731	414818	11	True				
ANR	415171	Statement	*	1761:29:40733:40733	414818	12	True				
ANR	415172	Statement	","	1761:30:40734:40734	414818	13	True				
ANR	415173	Statement	emalloc	1761:32:40736:40742	414818	14	True				
ANR	415174	Statement	(	1761:39:40743:40743	414818	15	True				
ANR	415175	Statement	len	1761:40:40744:40746	414818	16	True				
ANR	415176	Statement	)	1761:43:40747:40747	414818	17	True				
ANR	415177	Statement	)	1761:44:40748:40748	414818	18	True				
ANR	415178	Statement	)	1761:45:40749:40749	414818	19	True				
ANR	415179	Statement	==	1761:47:40751:40752	414818	20	True				
ANR	415180	Statement	NULL	1761:50:40754:40757	414818	21	True				
ANR	415181	Statement	)	1761:54:40758:40758	414818	22	True				
ANR	415182	CompoundStatement		61:56:1523:1523	414818	23					
ANR	415183	ExpressionStatement	"file_oomem ( ms , len )"	1762:3:40765:40784	414818	0	True				
ANR	415184	CallExpression	"file_oomem ( ms , len )"		414818	0					
ANR	415185	Callee	file_oomem		414818	0					
ANR	415186	Identifier	file_oomem		414818	0					
ANR	415187	ArgumentList	ms		414818	1					
ANR	415188	Argument	ms		414818	0					
ANR	415189	Identifier	ms		414818	0					
ANR	415190	Argument	len		414818	1					
ANR	415191	Identifier	len		414818	0					
ANR	415192	ReturnStatement	return - 1 ;	1763:3:40789:40798	414818	1	True				
ANR	415193	UnaryOperationExpression	- 1		414818	0					
ANR	415194	UnaryOperator	-		414818	0					
ANR	415195	PrimaryExpression	1		414818	1					
ANR	415196	ExpressionStatement	me -> mp = m	1765:2:40806:40816	414818	24	True				
ANR	415197	AssignmentExpression	me -> mp = m		414818	0		=			
ANR	415198	PtrMemberAccess	me -> mp		414818	0					
ANR	415199	Identifier	me		414818	0					
ANR	415200	Identifier	mp		414818	1					
ANR	415201	Identifier	m		414818	1					
ANR	415202	ExpressionStatement	me -> max_count = ALLOC_CHUNK	1766:2:40820:40847	414818	25	True				
ANR	415203	AssignmentExpression	me -> max_count = ALLOC_CHUNK		414818	0		=			
ANR	415204	PtrMemberAccess	me -> max_count		414818	0					
ANR	415205	Identifier	me		414818	0					
ANR	415206	Identifier	max_count		414818	1					
ANR	415207	Identifier	ALLOC_CHUNK		414818	1					
ANR	415208	ExpressionStatement	"( void ) memset ( m , 0 , sizeof ( * m ) )"	1767:2:40851:40881	414818	26	True				
ANR	415209	CastExpression	"( void ) memset ( m , 0 , sizeof ( * m ) )"		414818	0					
ANR	415210	CastTarget	void		414818	0					
ANR	415211	CallExpression	"memset ( m , 0 , sizeof ( * m ) )"		414818	1					
ANR	415212	Callee	memset		414818	0					
ANR	415213	Identifier	memset		414818	0					
ANR	415214	ArgumentList	m		414818	1					
ANR	415215	Argument	m		414818	0					
ANR	415216	Identifier	m		414818	0					
ANR	415217	Argument	0		414818	1					
ANR	415218	PrimaryExpression	0		414818	0					
ANR	415219	Argument	sizeof ( * m )		414818	2					
ANR	415220	SizeofExpression	sizeof ( * m )		414818	0					
ANR	415221	Sizeof	sizeof		414818	0					
ANR	415222	UnaryOperationExpression	* m		414818	1					
ANR	415223	UnaryOperator	*		414818	0					
ANR	415224	Identifier	m		414818	1					
ANR	415225	ExpressionStatement	m -> factor_op = FILE_FACTOR_OP_NONE	1768:2:40885:40919	414818	27	True				
ANR	415226	AssignmentExpression	m -> factor_op = FILE_FACTOR_OP_NONE		414818	0		=			
ANR	415227	PtrMemberAccess	m -> factor_op		414818	0					
ANR	415228	Identifier	m		414818	0					
ANR	415229	Identifier	factor_op		414818	1					
ANR	415230	Identifier	FILE_FACTOR_OP_NONE		414818	1					
ANR	415231	ExpressionStatement	m -> cont_level = 0	1769:2:40923:40940	414818	28	True				
ANR	415232	AssignmentExpression	m -> cont_level = 0		414818	0		=			
ANR	415233	PtrMemberAccess	m -> cont_level		414818	0					
ANR	415234	Identifier	m		414818	0					
ANR	415235	Identifier	cont_level		414818	1					
ANR	415236	PrimaryExpression	0		414818	1					
ANR	415237	ExpressionStatement	me -> cont_count = 1	1770:2:40944:40962	414818	29	True				
ANR	415238	AssignmentExpression	me -> cont_count = 1		414818	0		=			
ANR	415239	PtrMemberAccess	me -> cont_count		414818	0					
ANR	415240	Identifier	me		414818	0					
ANR	415241	Identifier	cont_count		414818	1					
ANR	415242	PrimaryExpression	1		414818	1					
ANR	415243	ExpressionStatement	"m -> lineno = CAST ( uint32_t , lineno )"	1772:1:40968:41002	414818	14	True				
ANR	415244	AssignmentExpression	"m -> lineno = CAST ( uint32_t , lineno )"		414818	0		=			
ANR	415245	PtrMemberAccess	m -> lineno		414818	0					
ANR	415246	Identifier	m		414818	0					
ANR	415247	Identifier	lineno		414818	1					
ANR	415248	CallExpression	"CAST ( uint32_t , lineno )"		414818	1					
ANR	415249	Callee	CAST		414818	0					
ANR	415250	Identifier	CAST		414818	0					
ANR	415251	ArgumentList	uint32_t		414818	1					
ANR	415252	Argument	uint32_t		414818	0					
ANR	415253	Identifier	uint32_t		414818	0					
ANR	415254	Argument	lineno		414818	1					
ANR	415255	Identifier	lineno		414818	0					
ANR	415256	IfStatement	if ( * l == '&' )		414818	15					
ANR	415257	Condition	* l == '&'	1774:5:41010:41018	414818	0	True				
ANR	415258	EqualityExpression	* l == '&'		414818	0		==			
ANR	415259	UnaryOperationExpression	* l		414818	0					
ANR	415260	UnaryOperator	*		414818	0					
ANR	415261	Identifier	l		414818	1					
ANR	415262	PrimaryExpression	'&'		414818	1					
ANR	415263	CompoundStatement		74:16:1784:1784	414818	1					
ANR	415264	ExpressionStatement	++ l	1775:16:41080:41083	414818	0	True				
ANR	415265	UnaryExpression	++ l		414818	0					
ANR	415266	IncDec	++		414818	0					
ANR	415267	Identifier	l		414818	1					
ANR	415268	ExpressionStatement	m -> flag |= OFFADD	1776:16:41128:41145	414818	1	True				
ANR	415269	AssignmentExpression	m -> flag |= OFFADD		414818	0		|=			
ANR	415270	PtrMemberAccess	m -> flag		414818	0					
ANR	415271	Identifier	m		414818	0					
ANR	415272	Identifier	flag		414818	1					
ANR	415273	Identifier	OFFADD		414818	1					
ANR	415274	IfStatement	if ( * l == '(' )		414818	16					
ANR	415275	Condition	* l == '('	1778:5:41162:41170	414818	0	True				
ANR	415276	EqualityExpression	* l == '('		414818	0		==			
ANR	415277	UnaryOperationExpression	* l		414818	0					
ANR	415278	UnaryOperator	*		414818	0					
ANR	415279	Identifier	l		414818	1					
ANR	415280	PrimaryExpression	'('		414818	1					
ANR	415281	CompoundStatement		78:16:1936:1936	414818	1					
ANR	415282	ExpressionStatement	++ l	1779:2:41177:41180	414818	0	True				
ANR	415283	UnaryExpression	++ l		414818	0					
ANR	415284	IncDec	++		414818	0					
ANR	415285	Identifier	l		414818	1					
ANR	415286	ExpressionStatement	m -> flag |= INDIR	1780:2:41201:41217	414818	1	True				
ANR	415287	AssignmentExpression	m -> flag |= INDIR		414818	0		|=			
ANR	415288	PtrMemberAccess	m -> flag		414818	0					
ANR	415289	Identifier	m		414818	0					
ANR	415290	Identifier	flag		414818	1					
ANR	415291	Identifier	INDIR		414818	1					
ANR	415292	IfStatement	if ( m -> flag & OFFADD )		414818	2					
ANR	415293	Condition	m -> flag & OFFADD	1781:6:41225:41240	414818	0	True				
ANR	415294	BitAndExpression	m -> flag & OFFADD		414818	0		&			
ANR	415295	PtrMemberAccess	m -> flag		414818	0					
ANR	415296	Identifier	m		414818	0					
ANR	415297	Identifier	flag		414818	1					
ANR	415298	Identifier	OFFADD		414818	1					
ANR	415299	ExpressionStatement	m -> flag = ( m -> flag & ~OFFADD ) | INDIROFFADD	1782:3:41246:41289	414818	1	True				
ANR	415300	AssignmentExpression	m -> flag = ( m -> flag & ~OFFADD ) | INDIROFFADD		414818	0		=			
ANR	415301	PtrMemberAccess	m -> flag		414818	0					
ANR	415302	Identifier	m		414818	0					
ANR	415303	Identifier	flag		414818	1					
ANR	415304	InclusiveOrExpression	( m -> flag & ~OFFADD ) | INDIROFFADD		414818	1		|			
ANR	415305	BitAndExpression	m -> flag & ~OFFADD		414818	0		&			
ANR	415306	PtrMemberAccess	m -> flag		414818	0					
ANR	415307	Identifier	m		414818	0					
ANR	415308	Identifier	flag		414818	1					
ANR	415309	Identifier	~OFFADD		414818	1					
ANR	415310	Identifier	INDIROFFADD		414818	1					
ANR	415311	IfStatement	if ( * l == '&' )		414818	3					
ANR	415312	Condition	* l == '&'	1784:6:41298:41306	414818	0	True				
ANR	415313	EqualityExpression	* l == '&'		414818	0		==			
ANR	415314	UnaryOperationExpression	* l		414818	0					
ANR	415315	UnaryOperator	*		414818	0					
ANR	415316	Identifier	l		414818	1					
ANR	415317	PrimaryExpression	'&'		414818	1					
ANR	415318	CompoundStatement		84:17:2072:2072	414818	1					
ANR	415319	ExpressionStatement	++ l	1785:3:41354:41357	414818	0	True				
ANR	415320	UnaryExpression	++ l		414818	0					
ANR	415321	IncDec	++		414818	0					
ANR	415322	Identifier	l		414818	1					
ANR	415323	ExpressionStatement	m -> flag |= OFFADD	1786:3:41389:41406	414818	1	True				
ANR	415324	AssignmentExpression	m -> flag |= OFFADD		414818	0		|=			
ANR	415325	PtrMemberAccess	m -> flag		414818	0					
ANR	415326	Identifier	m		414818	0					
ANR	415327	Identifier	flag		414818	1					
ANR	415328	Identifier	OFFADD		414818	1					
ANR	415329	IfStatement	if ( m -> cont_level == 0 && ( m -> flag & ( OFFADD | INDIROFFADD ) ) )		414818	17					
ANR	415330	Condition	m -> cont_level == 0 && ( m -> flag & ( OFFADD | INDIROFFADD ) )	1790:5:41470:41525	414818	0	True				
ANR	415331	AndExpression	m -> cont_level == 0 && ( m -> flag & ( OFFADD | INDIROFFADD ) )		414818	0		&&			
ANR	415332	EqualityExpression	m -> cont_level == 0		414818	0		==			
ANR	415333	PtrMemberAccess	m -> cont_level		414818	0					
ANR	415334	Identifier	m		414818	0					
ANR	415335	Identifier	cont_level		414818	1					
ANR	415336	PrimaryExpression	0		414818	1					
ANR	415337	BitAndExpression	m -> flag & ( OFFADD | INDIROFFADD )		414818	1		&			
ANR	415338	PtrMemberAccess	m -> flag		414818	0					
ANR	415339	Identifier	m		414818	0					
ANR	415340	Identifier	flag		414818	1					
ANR	415341	InclusiveOrExpression	OFFADD | INDIROFFADD		414818	1		|			
ANR	415342	Identifier	OFFADD		414818	0					
ANR	415343	Identifier	INDIROFFADD		414818	1					
ANR	415344	IfStatement	if ( ms -> flags & MAGIC_CHECK )		414818	1					
ANR	415345	Condition	ms -> flags & MAGIC_CHECK	1791:6:41534:41556	414818	0	True				
ANR	415346	BitAndExpression	ms -> flags & MAGIC_CHECK		414818	0		&			
ANR	415347	PtrMemberAccess	ms -> flags		414818	0					
ANR	415348	Identifier	ms		414818	0					
ANR	415349	Identifier	flags		414818	1					
ANR	415350	Identifier	MAGIC_CHECK		414818	1					
ANR	415351	ExpressionStatement	"file_magwarn ( ms , ""relative offset at level 0"" )"	1792:3:41562:41608	414818	1	True				
ANR	415352	CallExpression	"file_magwarn ( ms , ""relative offset at level 0"" )"		414818	0					
ANR	415353	Callee	file_magwarn		414818	0					
ANR	415354	Identifier	file_magwarn		414818	0					
ANR	415355	ArgumentList	ms		414818	1					
ANR	415356	Argument	ms		414818	0					
ANR	415357	Identifier	ms		414818	0					
ANR	415358	Argument	"""relative offset at level 0"""		414818	1					
ANR	415359	PrimaryExpression	"""relative offset at level 0"""		414818	0					
ANR	415360	ExpressionStatement	"m -> offset = ( uint32_t ) strtoul ( l , & t , 0 )"	1795:1:41649:41688	414818	18	True				
ANR	415361	AssignmentExpression	"m -> offset = ( uint32_t ) strtoul ( l , & t , 0 )"		414818	0		=			
ANR	415362	PtrMemberAccess	m -> offset		414818	0					
ANR	415363	Identifier	m		414818	0					
ANR	415364	Identifier	offset		414818	1					
ANR	415365	CastExpression	"( uint32_t ) strtoul ( l , & t , 0 )"		414818	1					
ANR	415366	CastTarget	uint32_t		414818	0					
ANR	415367	CallExpression	"strtoul ( l , & t , 0 )"		414818	1					
ANR	415368	Callee	strtoul		414818	0					
ANR	415369	Identifier	strtoul		414818	0					
ANR	415370	ArgumentList	l		414818	1					
ANR	415371	Argument	l		414818	0					
ANR	415372	Identifier	l		414818	0					
ANR	415373	Argument	& t		414818	1					
ANR	415374	UnaryOperationExpression	& t		414818	0					
ANR	415375	UnaryOperator	&		414818	0					
ANR	415376	Identifier	t		414818	1					
ANR	415377	Argument	0		414818	2					
ANR	415378	PrimaryExpression	0		414818	0					
ANR	415379	IfStatement	if ( l == t )		414818	19					
ANR	415380	Condition	l == t	1796:12:41702:41707	414818	0	True				
ANR	415381	EqualityExpression	l == t		414818	0		==			
ANR	415382	Identifier	l		414818	0					
ANR	415383	Identifier	t		414818	1					
ANR	415384	IfStatement	if ( ms -> flags & MAGIC_CHECK )		414818	1					
ANR	415385	Condition	ms -> flags & MAGIC_CHECK	1797:6:41716:41738	414818	0	True				
ANR	415386	BitAndExpression	ms -> flags & MAGIC_CHECK		414818	0		&			
ANR	415387	PtrMemberAccess	ms -> flags		414818	0					
ANR	415388	Identifier	ms		414818	0					
ANR	415389	Identifier	flags		414818	1					
ANR	415390	Identifier	MAGIC_CHECK		414818	1					
ANR	415391	ExpressionStatement	"file_magwarn ( ms , ""offset `%s' invalid"" , l )"	1798:3:41744:41786	414818	1	True				
ANR	415392	CallExpression	"file_magwarn ( ms , ""offset `%s' invalid"" , l )"		414818	0					
ANR	415393	Callee	file_magwarn		414818	0					
ANR	415394	Identifier	file_magwarn		414818	0					
ANR	415395	ArgumentList	ms		414818	1					
ANR	415396	Argument	ms		414818	0					
ANR	415397	Identifier	ms		414818	0					
ANR	415398	Argument	"""offset `%s' invalid"""		414818	1					
ANR	415399	PrimaryExpression	"""offset `%s' invalid"""		414818	0					
ANR	415400	Argument	l		414818	2					
ANR	415401	Identifier	l		414818	0					
ANR	415402	ExpressionStatement	l = t	1799:8:41796:41801	414818	20	True				
ANR	415403	AssignmentExpression	l = t		414818	0		=			
ANR	415404	Identifier	l		414818	0					
ANR	415405	Identifier	t		414818	1					
ANR	415406	IfStatement	if ( m -> flag & INDIR )		414818	21					
ANR	415407	Condition	m -> flag & INDIR	1801:5:41809:41823	414818	0	True				
ANR	415408	BitAndExpression	m -> flag & INDIR		414818	0		&			
ANR	415409	PtrMemberAccess	m -> flag		414818	0					
ANR	415410	Identifier	m		414818	0					
ANR	415411	Identifier	flag		414818	1					
ANR	415412	Identifier	INDIR		414818	1					
ANR	415413	CompoundStatement		101:22:2589:2589	414818	1					
ANR	415414	ExpressionStatement	m -> in_type = FILE_LONG	1802:2:41830:41852	414818	0	True				
ANR	415415	AssignmentExpression	m -> in_type = FILE_LONG		414818	0		=			
ANR	415416	PtrMemberAccess	m -> in_type		414818	0					
ANR	415417	Identifier	m		414818	0					
ANR	415418	Identifier	in_type		414818	1					
ANR	415419	Identifier	FILE_LONG		414818	1					
ANR	415420	ExpressionStatement	m -> in_offset = 0	1803:2:41856:41872	414818	1	True				
ANR	415421	AssignmentExpression	m -> in_offset = 0		414818	0		=			
ANR	415422	PtrMemberAccess	m -> in_offset		414818	0					
ANR	415423	Identifier	m		414818	0					
ANR	415424	Identifier	in_offset		414818	1					
ANR	415425	PrimaryExpression	0		414818	1					
ANR	415426	IfStatement	if ( * l == '.' )		414818	2					
ANR	415427	Condition	* l == '.'	1807:6:41918:41926	414818	0	True				
ANR	415428	EqualityExpression	* l == '.'		414818	0		==			
ANR	415429	UnaryOperationExpression	* l		414818	0					
ANR	415430	UnaryOperator	*		414818	0					
ANR	415431	Identifier	l		414818	1					
ANR	415432	PrimaryExpression	'.'		414818	1					
ANR	415433	CompoundStatement		107:17:2692:2692	414818	1					
ANR	415434	ExpressionStatement	l ++	1808:3:41934:41937	414818	0	True				
ANR	415435	PostIncDecOperationExpression	l ++		414818	0					
ANR	415436	Identifier	l		414818	0					
ANR	415437	IncDec	++		414818	1					
ANR	415438	SwitchStatement	switch ( * l )		414818	1					
ANR	415439	Condition	* l	1809:11:41950:41951	414818	0	True				
ANR	415440	UnaryOperationExpression	* l		414818	0					
ANR	415441	UnaryOperator	*		414818	0					
ANR	415442	Identifier	l		414818	1					
ANR	415443	CompoundStatement		109:15:2717:2717	414818	1					
ANR	415444	Label	case 'l' :	1810:3:41959:41967	414818	0	True				
ANR	415445	ExpressionStatement	m -> in_type = FILE_LELONG	1811:4:41973:41997	414818	1	True				
ANR	415446	AssignmentExpression	m -> in_type = FILE_LELONG		414818	0		=			
ANR	415447	PtrMemberAccess	m -> in_type		414818	0					
ANR	415448	Identifier	m		414818	0					
ANR	415449	Identifier	in_type		414818	1					
ANR	415450	Identifier	FILE_LELONG		414818	1					
ANR	415451	BreakStatement	break ;	1812:4:42003:42008	414818	2	True				
ANR	415452	Label	case 'L' :	1813:3:42013:42021	414818	3	True				
ANR	415453	ExpressionStatement	m -> in_type = FILE_BELONG	1814:4:42027:42051	414818	4	True				
ANR	415454	AssignmentExpression	m -> in_type = FILE_BELONG		414818	0		=			
ANR	415455	PtrMemberAccess	m -> in_type		414818	0					
ANR	415456	Identifier	m		414818	0					
ANR	415457	Identifier	in_type		414818	1					
ANR	415458	Identifier	FILE_BELONG		414818	1					
ANR	415459	BreakStatement	break ;	1815:4:42057:42062	414818	5	True				
ANR	415460	Label	case 'm' :	1816:3:42067:42075	414818	6	True				
ANR	415461	ExpressionStatement	m -> in_type = FILE_MELONG	1817:4:42081:42105	414818	7	True				
ANR	415462	AssignmentExpression	m -> in_type = FILE_MELONG		414818	0		=			
ANR	415463	PtrMemberAccess	m -> in_type		414818	0					
ANR	415464	Identifier	m		414818	0					
ANR	415465	Identifier	in_type		414818	1					
ANR	415466	Identifier	FILE_MELONG		414818	1					
ANR	415467	BreakStatement	break ;	1818:4:42111:42116	414818	8	True				
ANR	415468	Label	case 'h' :	1819:3:42121:42129	414818	9	True				
ANR	415469	Label	case 's' :	1820:3:42134:42142	414818	10	True				
ANR	415470	ExpressionStatement	m -> in_type = FILE_LESHORT	1821:4:42148:42173	414818	11	True				
ANR	415471	AssignmentExpression	m -> in_type = FILE_LESHORT		414818	0		=			
ANR	415472	PtrMemberAccess	m -> in_type		414818	0					
ANR	415473	Identifier	m		414818	0					
ANR	415474	Identifier	in_type		414818	1					
ANR	415475	Identifier	FILE_LESHORT		414818	1					
ANR	415476	BreakStatement	break ;	1822:4:42179:42184	414818	12	True				
ANR	415477	Label	case 'H' :	1823:3:42189:42197	414818	13	True				
ANR	415478	Label	case 'S' :	1824:3:42202:42210	414818	14	True				
ANR	415479	ExpressionStatement	m -> in_type = FILE_BESHORT	1825:4:42216:42241	414818	15	True				
ANR	415480	AssignmentExpression	m -> in_type = FILE_BESHORT		414818	0		=			
ANR	415481	PtrMemberAccess	m -> in_type		414818	0					
ANR	415482	Identifier	m		414818	0					
ANR	415483	Identifier	in_type		414818	1					
ANR	415484	Identifier	FILE_BESHORT		414818	1					
ANR	415485	BreakStatement	break ;	1826:4:42247:42252	414818	16	True				
ANR	415486	Label	case 'c' :	1827:3:42257:42265	414818	17	True				
ANR	415487	Label	case 'b' :	1828:3:42270:42278	414818	18	True				
ANR	415488	Label	case 'C' :	1829:3:42283:42291	414818	19	True				
ANR	415489	Label	case 'B' :	1830:3:42296:42304	414818	20	True				
ANR	415490	ExpressionStatement	m -> in_type = FILE_BYTE	1831:4:42310:42332	414818	21	True				
ANR	415491	AssignmentExpression	m -> in_type = FILE_BYTE		414818	0		=			
ANR	415492	PtrMemberAccess	m -> in_type		414818	0					
ANR	415493	Identifier	m		414818	0					
ANR	415494	Identifier	in_type		414818	1					
ANR	415495	Identifier	FILE_BYTE		414818	1					
ANR	415496	BreakStatement	break ;	1832:4:42338:42343	414818	22	True				
ANR	415497	Label	case 'e' :	1833:3:42348:42356	414818	23	True				
ANR	415498	Label	case 'f' :	1834:3:42361:42369	414818	24	True				
ANR	415499	Label	case 'g' :	1835:3:42374:42382	414818	25	True				
ANR	415500	ExpressionStatement	m -> in_type = FILE_LEDOUBLE	1836:4:42388:42414	414818	26	True				
ANR	415501	AssignmentExpression	m -> in_type = FILE_LEDOUBLE		414818	0		=			
ANR	415502	PtrMemberAccess	m -> in_type		414818	0					
ANR	415503	Identifier	m		414818	0					
ANR	415504	Identifier	in_type		414818	1					
ANR	415505	Identifier	FILE_LEDOUBLE		414818	1					
ANR	415506	BreakStatement	break ;	1837:4:42420:42425	414818	27	True				
ANR	415507	Label	case 'E' :	1838:3:42430:42438	414818	28	True				
ANR	415508	Label	case 'F' :	1839:3:42443:42451	414818	29	True				
ANR	415509	Label	case 'G' :	1840:3:42456:42464	414818	30	True				
ANR	415510	ExpressionStatement	m -> in_type = FILE_BEDOUBLE	1841:4:42470:42496	414818	31	True				
ANR	415511	AssignmentExpression	m -> in_type = FILE_BEDOUBLE		414818	0		=			
ANR	415512	PtrMemberAccess	m -> in_type		414818	0					
ANR	415513	Identifier	m		414818	0					
ANR	415514	Identifier	in_type		414818	1					
ANR	415515	Identifier	FILE_BEDOUBLE		414818	1					
ANR	415516	BreakStatement	break ;	1842:4:42502:42507	414818	32	True				
ANR	415517	Label	case 'i' :	1843:3:42512:42520	414818	33	True				
ANR	415518	ExpressionStatement	m -> in_type = FILE_LEID3	1844:4:42526:42549	414818	34	True				
ANR	415519	AssignmentExpression	m -> in_type = FILE_LEID3		414818	0		=			
ANR	415520	PtrMemberAccess	m -> in_type		414818	0					
ANR	415521	Identifier	m		414818	0					
ANR	415522	Identifier	in_type		414818	1					
ANR	415523	Identifier	FILE_LEID3		414818	1					
ANR	415524	BreakStatement	break ;	1845:4:42555:42560	414818	35	True				
ANR	415525	Label	case 'I' :	1846:3:42565:42573	414818	36	True				
ANR	415526	ExpressionStatement	m -> in_type = FILE_BEID3	1847:4:42579:42602	414818	37	True				
ANR	415527	AssignmentExpression	m -> in_type = FILE_BEID3		414818	0		=			
ANR	415528	PtrMemberAccess	m -> in_type		414818	0					
ANR	415529	Identifier	m		414818	0					
ANR	415530	Identifier	in_type		414818	1					
ANR	415531	Identifier	FILE_BEID3		414818	1					
ANR	415532	BreakStatement	break ;	1848:4:42608:42613	414818	38	True				
ANR	415533	Label	default :	1849:3:42618:42625	414818	39	True				
ANR	415534	Identifier	default		414818	0					
ANR	415535	IfStatement	if ( ms -> flags & MAGIC_CHECK )		414818	40					
ANR	415536	Condition	ms -> flags & MAGIC_CHECK	1850:8:42635:42657	414818	0	True				
ANR	415537	BitAndExpression	ms -> flags & MAGIC_CHECK		414818	0		&			
ANR	415538	PtrMemberAccess	ms -> flags		414818	0					
ANR	415539	Identifier	ms		414818	0					
ANR	415540	Identifier	flags		414818	1					
ANR	415541	Identifier	MAGIC_CHECK		414818	1					
ANR	415542	ExpressionStatement	"file_magwarn ( ms , ""indirect offset type `%c' invalid"" , * l )"	1851:5:42665:42740	414818	1	True				
ANR	415543	CallExpression	"file_magwarn ( ms , ""indirect offset type `%c' invalid"" , * l )"		414818	0					
ANR	415544	Callee	file_magwarn		414818	0					
ANR	415545	Identifier	file_magwarn		414818	0					
ANR	415546	ArgumentList	ms		414818	1					
ANR	415547	Argument	ms		414818	0					
ANR	415548	Identifier	ms		414818	0					
ANR	415549	Argument	"""indirect offset type `%c' invalid"""		414818	1					
ANR	415550	PrimaryExpression	"""indirect offset type `%c' invalid"""		414818	0					
ANR	415551	Argument	* l		414818	2					
ANR	415552	UnaryOperationExpression	* l		414818	0					
ANR	415553	UnaryOperator	*		414818	0					
ANR	415554	Identifier	l		414818	1					
ANR	415555	BreakStatement	break ;	1854:4:42746:42751	414818	41	True				
ANR	415556	ExpressionStatement	l ++	1856:3:42761:42764	414818	2	True				
ANR	415557	PostIncDecOperationExpression	l ++		414818	0					
ANR	415558	Identifier	l		414818	0					
ANR	415559	IncDec	++		414818	1					
ANR	415560	ExpressionStatement	m -> in_op = 0	1859:2:42773:42785	414818	3	True				
ANR	415561	AssignmentExpression	m -> in_op = 0		414818	0		=			
ANR	415562	PtrMemberAccess	m -> in_op		414818	0					
ANR	415563	Identifier	m		414818	0					
ANR	415564	Identifier	in_op		414818	1					
ANR	415565	PrimaryExpression	0		414818	1					
ANR	415566	IfStatement	if ( * l == '~' )		414818	4					
ANR	415567	Condition	* l == '~'	1860:6:42793:42801	414818	0	True				
ANR	415568	EqualityExpression	* l == '~'		414818	0		==			
ANR	415569	UnaryOperationExpression	* l		414818	0					
ANR	415570	UnaryOperator	*		414818	0					
ANR	415571	Identifier	l		414818	1					
ANR	415572	PrimaryExpression	'~'		414818	1					
ANR	415573	CompoundStatement		160:17:3567:3567	414818	1					
ANR	415574	ExpressionStatement	m -> in_op |= FILE_OPINVERSE	1861:3:42809:42835	414818	0	True				
ANR	415575	AssignmentExpression	m -> in_op |= FILE_OPINVERSE		414818	0		|=			
ANR	415576	PtrMemberAccess	m -> in_op		414818	0					
ANR	415577	Identifier	m		414818	0					
ANR	415578	Identifier	in_op		414818	1					
ANR	415579	Identifier	FILE_OPINVERSE		414818	1					
ANR	415580	ExpressionStatement	l ++	1862:3:42840:42843	414818	1	True				
ANR	415581	PostIncDecOperationExpression	l ++		414818	0					
ANR	415582	Identifier	l		414818	0					
ANR	415583	IncDec	++		414818	1					
ANR	415584	IfStatement	if ( ( op = get_op ( * l ) ) != - 1 )		414818	5					
ANR	415585	Condition	( op = get_op ( * l ) ) != - 1	1864:6:42855:42877	414818	0	True				
ANR	415586	EqualityExpression	( op = get_op ( * l ) ) != - 1		414818	0		!=			
ANR	415587	AssignmentExpression	op = get_op ( * l )		414818	0		=			
ANR	415588	Identifier	op		414818	0					
ANR	415589	CallExpression	get_op ( * l )		414818	1					
ANR	415590	Callee	get_op		414818	0					
ANR	415591	Identifier	get_op		414818	0					
ANR	415592	ArgumentList	* l		414818	1					
ANR	415593	Argument	* l		414818	0					
ANR	415594	UnaryOperationExpression	* l		414818	0					
ANR	415595	UnaryOperator	*		414818	0					
ANR	415596	Identifier	l		414818	1					
ANR	415597	UnaryOperationExpression	- 1		414818	1					
ANR	415598	UnaryOperator	-		414818	0					
ANR	415599	PrimaryExpression	1		414818	1					
ANR	415600	CompoundStatement		164:31:3643:3643	414818	1					
ANR	415601	ExpressionStatement	m -> in_op |= op	1865:3:42885:42899	414818	0	True				
ANR	415602	AssignmentExpression	m -> in_op |= op		414818	0		|=			
ANR	415603	PtrMemberAccess	m -> in_op		414818	0					
ANR	415604	Identifier	m		414818	0					
ANR	415605	Identifier	in_op		414818	1					
ANR	415606	Identifier	op		414818	1					
ANR	415607	ExpressionStatement	l ++	1866:3:42904:42907	414818	1	True				
ANR	415608	PostIncDecOperationExpression	l ++		414818	0					
ANR	415609	Identifier	l		414818	0					
ANR	415610	IncDec	++		414818	1					
ANR	415611	IfStatement	if ( * l == '(' )		414818	6					
ANR	415612	Condition	* l == '('	1868:6:42919:42927	414818	0	True				
ANR	415613	EqualityExpression	* l == '('		414818	0		==			
ANR	415614	UnaryOperationExpression	* l		414818	0					
ANR	415615	UnaryOperator	*		414818	0					
ANR	415616	Identifier	l		414818	1					
ANR	415617	PrimaryExpression	'('		414818	1					
ANR	415618	CompoundStatement		168:17:3693:3693	414818	1					
ANR	415619	ExpressionStatement	m -> in_op |= FILE_OPINDIRECT	1869:3:42935:42962	414818	0	True				
ANR	415620	AssignmentExpression	m -> in_op |= FILE_OPINDIRECT		414818	0		|=			
ANR	415621	PtrMemberAccess	m -> in_op		414818	0					
ANR	415622	Identifier	m		414818	0					
ANR	415623	Identifier	in_op		414818	1					
ANR	415624	Identifier	FILE_OPINDIRECT		414818	1					
ANR	415625	ExpressionStatement	l ++	1870:3:42967:42970	414818	1	True				
ANR	415626	PostIncDecOperationExpression	l ++		414818	0					
ANR	415627	Identifier	l		414818	0					
ANR	415628	IncDec	++		414818	1					
ANR	415629	IfStatement	if ( isdigit ( ( unsigned char ) * l ) || * l == '-' )		414818	7					
ANR	415630	Condition	isdigit ( ( unsigned char ) * l ) || * l == '-'	1872:6:42982:43020	414818	0	True				
ANR	415631	OrExpression	isdigit ( ( unsigned char ) * l ) || * l == '-'		414818	0		||			
ANR	415632	CallExpression	isdigit ( ( unsigned char ) * l )		414818	0					
ANR	415633	Callee	isdigit		414818	0					
ANR	415634	Identifier	isdigit		414818	0					
ANR	415635	ArgumentList	( unsigned char ) * l		414818	1					
ANR	415636	Argument	( unsigned char ) * l		414818	0					
ANR	415637	CastExpression	( unsigned char ) * l		414818	0					
ANR	415638	CastTarget	unsigned char		414818	0					
ANR	415639	UnaryOperationExpression	* l		414818	1					
ANR	415640	UnaryOperator	*		414818	0					
ANR	415641	Identifier	l		414818	1					
ANR	415642	EqualityExpression	* l == '-'		414818	1		==			
ANR	415643	UnaryOperationExpression	* l		414818	0					
ANR	415644	UnaryOperator	*		414818	0					
ANR	415645	Identifier	l		414818	1					
ANR	415646	PrimaryExpression	'-'		414818	1					
ANR	415647	CompoundStatement		172:47:3786:3786	414818	1					
ANR	415648	ExpressionStatement	"m -> in_offset = ( int32_t ) strtol ( l , & t , 0 )"	1873:3:43028:43068	414818	0	True				
ANR	415649	AssignmentExpression	"m -> in_offset = ( int32_t ) strtol ( l , & t , 0 )"		414818	0		=			
ANR	415650	PtrMemberAccess	m -> in_offset		414818	0					
ANR	415651	Identifier	m		414818	0					
ANR	415652	Identifier	in_offset		414818	1					
ANR	415653	CastExpression	"( int32_t ) strtol ( l , & t , 0 )"		414818	1					
ANR	415654	CastTarget	int32_t		414818	0					
ANR	415655	CallExpression	"strtol ( l , & t , 0 )"		414818	1					
ANR	415656	Callee	strtol		414818	0					
ANR	415657	Identifier	strtol		414818	0					
ANR	415658	ArgumentList	l		414818	1					
ANR	415659	Argument	l		414818	0					
ANR	415660	Identifier	l		414818	0					
ANR	415661	Argument	& t		414818	1					
ANR	415662	UnaryOperationExpression	& t		414818	0					
ANR	415663	UnaryOperator	&		414818	0					
ANR	415664	Identifier	t		414818	1					
ANR	415665	Argument	0		414818	2					
ANR	415666	PrimaryExpression	0		414818	0					
ANR	415667	IfStatement	if ( l == t )		414818	1					
ANR	415668	Condition	l == t	1874:7:43077:43082	414818	0	True				
ANR	415669	EqualityExpression	l == t		414818	0		==			
ANR	415670	Identifier	l		414818	0					
ANR	415671	Identifier	t		414818	1					
ANR	415672	IfStatement	if ( ms -> flags & MAGIC_CHECK )		414818	1					
ANR	415673	Condition	ms -> flags & MAGIC_CHECK	1875:8:43093:43115	414818	0	True				
ANR	415674	BitAndExpression	ms -> flags & MAGIC_CHECK		414818	0		&			
ANR	415675	PtrMemberAccess	ms -> flags		414818	0					
ANR	415676	Identifier	ms		414818	0					
ANR	415677	Identifier	flags		414818	1					
ANR	415678	Identifier	MAGIC_CHECK		414818	1					
ANR	415679	ExpressionStatement	"file_magwarn ( ms , ""in_offset `%s' invalid"" , l )"	1876:5:43123:43177	414818	1	True				
ANR	415680	CallExpression	"file_magwarn ( ms , ""in_offset `%s' invalid"" , l )"		414818	0					
ANR	415681	Callee	file_magwarn		414818	0					
ANR	415682	Identifier	file_magwarn		414818	0					
ANR	415683	ArgumentList	ms		414818	1					
ANR	415684	Argument	ms		414818	0					
ANR	415685	Identifier	ms		414818	0					
ANR	415686	Argument	"""in_offset `%s' invalid"""		414818	1					
ANR	415687	PrimaryExpression	"""in_offset `%s' invalid"""		414818	0					
ANR	415688	Argument	l		414818	2					
ANR	415689	Identifier	l		414818	0					
ANR	415690	ExpressionStatement	l = t	1878:3:43182:43187	414818	2	True				
ANR	415691	AssignmentExpression	l = t		414818	0		=			
ANR	415692	Identifier	l		414818	0					
ANR	415693	Identifier	t		414818	1					
ANR	415694	IfStatement	if ( * l ++ != ')' || ( ( m -> in_op & FILE_OPINDIRECT ) && * l ++ != ')' ) )		414818	8					
ANR	415695	Condition	* l ++ != ')' || ( ( m -> in_op & FILE_OPINDIRECT ) && * l ++ != ')' )	1880:6:43199:43265	414818	0	True				
ANR	415696	OrExpression	* l ++ != ')' || ( ( m -> in_op & FILE_OPINDIRECT ) && * l ++ != ')' )		414818	0		||			
ANR	415697	EqualityExpression	* l ++ != ')'		414818	0		!=			
ANR	415698	UnaryOperationExpression	* l ++		414818	0					
ANR	415699	UnaryOperator	*		414818	0					
ANR	415700	PostIncDecOperationExpression	l ++		414818	1					
ANR	415701	Identifier	l		414818	0					
ANR	415702	IncDec	++		414818	1					
ANR	415703	PrimaryExpression	')'		414818	1					
ANR	415704	AndExpression	( m -> in_op & FILE_OPINDIRECT ) && * l ++ != ')'		414818	1		&&			
ANR	415705	BitAndExpression	m -> in_op & FILE_OPINDIRECT		414818	0		&			
ANR	415706	PtrMemberAccess	m -> in_op		414818	0					
ANR	415707	Identifier	m		414818	0					
ANR	415708	Identifier	in_op		414818	1					
ANR	415709	Identifier	FILE_OPINDIRECT		414818	1					
ANR	415710	EqualityExpression	* l ++ != ')'		414818	1		!=			
ANR	415711	UnaryOperationExpression	* l ++		414818	0					
ANR	415712	UnaryOperator	*		414818	0					
ANR	415713	PostIncDecOperationExpression	l ++		414818	1					
ANR	415714	Identifier	l		414818	0					
ANR	415715	IncDec	++		414818	1					
ANR	415716	PrimaryExpression	')'		414818	1					
ANR	415717	IfStatement	if ( ms -> flags & MAGIC_CHECK )		414818	1					
ANR	415718	Condition	ms -> flags & MAGIC_CHECK	1882:7:43275:43297	414818	0	True				
ANR	415719	BitAndExpression	ms -> flags & MAGIC_CHECK		414818	0		&			
ANR	415720	PtrMemberAccess	ms -> flags		414818	0					
ANR	415721	Identifier	ms		414818	0					
ANR	415722	Identifier	flags		414818	1					
ANR	415723	Identifier	MAGIC_CHECK		414818	1					
ANR	415724	ExpressionStatement	"file_magwarn ( ms , ""missing ')' in indirect offset"" )"	1883:4:43304:43362	414818	1	True				
ANR	415725	CallExpression	"file_magwarn ( ms , ""missing ')' in indirect offset"" )"		414818	0					
ANR	415726	Callee	file_magwarn		414818	0					
ANR	415727	Identifier	file_magwarn		414818	0					
ANR	415728	ArgumentList	ms		414818	1					
ANR	415729	Argument	ms		414818	0					
ANR	415730	Identifier	ms		414818	0					
ANR	415731	Argument	"""missing ')' in indirect offset"""		414818	1					
ANR	415732	PrimaryExpression	"""missing ')' in indirect offset"""		414818	0					
ANR	415733	ExpressionStatement	EATAB	1886:1:43368:43373	414818	22	True				
ANR	415734	Identifier	EATAB		414818	0					
ANR	415735	ExpressionStatement	"m -> cond = get_cond ( l , & l )"	1889:1:43404:43429	414818	23	True				
ANR	415736	AssignmentExpression	"m -> cond = get_cond ( l , & l )"		414818	0		=			
ANR	415737	PtrMemberAccess	m -> cond		414818	0					
ANR	415738	Identifier	m		414818	0					
ANR	415739	Identifier	cond		414818	1					
ANR	415740	CallExpression	"get_cond ( l , & l )"		414818	1					
ANR	415741	Callee	get_cond		414818	0					
ANR	415742	Identifier	get_cond		414818	0					
ANR	415743	ArgumentList	l		414818	1					
ANR	415744	Argument	l		414818	0					
ANR	415745	Identifier	l		414818	0					
ANR	415746	Argument	& l		414818	1					
ANR	415747	UnaryOperationExpression	& l		414818	0					
ANR	415748	UnaryOperator	&		414818	0					
ANR	415749	Identifier	l		414818	1					
ANR	415750	IfStatement	"if ( check_cond ( ms , m -> cond , cont_level ) == - 1 )"		414818	24					
ANR	415751	Condition	"check_cond ( ms , m -> cond , cont_level ) == - 1"	1890:5:43436:43476	414818	0	True				
ANR	415752	EqualityExpression	"check_cond ( ms , m -> cond , cont_level ) == - 1"		414818	0		==			
ANR	415753	CallExpression	"check_cond ( ms , m -> cond , cont_level )"		414818	0					
ANR	415754	Callee	check_cond		414818	0					
ANR	415755	Identifier	check_cond		414818	0					
ANR	415756	ArgumentList	ms		414818	1					
ANR	415757	Argument	ms		414818	0					
ANR	415758	Identifier	ms		414818	0					
ANR	415759	Argument	m -> cond		414818	1					
ANR	415760	PtrMemberAccess	m -> cond		414818	0					
ANR	415761	Identifier	m		414818	0					
ANR	415762	Identifier	cond		414818	1					
ANR	415763	Argument	cont_level		414818	2					
ANR	415764	Identifier	cont_level		414818	0					
ANR	415765	UnaryOperationExpression	- 1		414818	1					
ANR	415766	UnaryOperator	-		414818	0					
ANR	415767	PrimaryExpression	1		414818	1					
ANR	415768	ReturnStatement	return - 1 ;	1891:2:43481:43490	414818	1	True				
ANR	415769	UnaryOperationExpression	- 1		414818	0					
ANR	415770	UnaryOperator	-		414818	0					
ANR	415771	PrimaryExpression	1		414818	1					
ANR	415772	ExpressionStatement	EATAB	1893:1:43494:43499	414818	25	True				
ANR	415773	Identifier	EATAB		414818	0					
ANR	415774	IfStatement	if ( * l == 'u' )		414818	26					
ANR	415775	Condition	* l == 'u'	1899:5:43543:43551	414818	0	True				
ANR	415776	EqualityExpression	* l == 'u'		414818	0		==			
ANR	415777	UnaryOperationExpression	* l		414818	0					
ANR	415778	UnaryOperator	*		414818	0					
ANR	415779	Identifier	l		414818	1					
ANR	415780	PrimaryExpression	'u'		414818	1					
ANR	415781	CompoundStatement		199:16:4317:4317	414818	1					
ANR	415782	ExpressionStatement	"m -> type = get_type ( type_tbl , l + 1 , & l )"	1905:2:43702:43741	414818	0	True				
ANR	415783	AssignmentExpression	"m -> type = get_type ( type_tbl , l + 1 , & l )"		414818	0		=			
ANR	415784	PtrMemberAccess	m -> type		414818	0					
ANR	415785	Identifier	m		414818	0					
ANR	415786	Identifier	type		414818	1					
ANR	415787	CallExpression	"get_type ( type_tbl , l + 1 , & l )"		414818	1					
ANR	415788	Callee	get_type		414818	0					
ANR	415789	Identifier	get_type		414818	0					
ANR	415790	ArgumentList	type_tbl		414818	1					
ANR	415791	Argument	type_tbl		414818	0					
ANR	415792	Identifier	type_tbl		414818	0					
ANR	415793	Argument	l + 1		414818	1					
ANR	415794	AdditiveExpression	l + 1		414818	0		+			
ANR	415795	Identifier	l		414818	0					
ANR	415796	PrimaryExpression	1		414818	1					
ANR	415797	Argument	& l		414818	2					
ANR	415798	UnaryOperationExpression	& l		414818	0					
ANR	415799	UnaryOperator	&		414818	0					
ANR	415800	Identifier	l		414818	1					
ANR	415801	IfStatement	if ( m -> type == FILE_INVALID )		414818	1					
ANR	415802	Condition	m -> type == FILE_INVALID	1906:6:43749:43771	414818	0	True				
ANR	415803	EqualityExpression	m -> type == FILE_INVALID		414818	0		==			
ANR	415804	PtrMemberAccess	m -> type		414818	0					
ANR	415805	Identifier	m		414818	0					
ANR	415806	Identifier	type		414818	1					
ANR	415807	Identifier	FILE_INVALID		414818	1					
ANR	415808	CompoundStatement		206:31:4537:4537	414818	1					
ANR	415809	ExpressionStatement	"m -> type = get_standard_integer_type ( l , & l )"	1911:3:43893:43935	414818	0	True				
ANR	415810	AssignmentExpression	"m -> type = get_standard_integer_type ( l , & l )"		414818	0		=			
ANR	415811	PtrMemberAccess	m -> type		414818	0					
ANR	415812	Identifier	m		414818	0					
ANR	415813	Identifier	type		414818	1					
ANR	415814	CallExpression	"get_standard_integer_type ( l , & l )"		414818	1					
ANR	415815	Callee	get_standard_integer_type		414818	0					
ANR	415816	Identifier	get_standard_integer_type		414818	0					
ANR	415817	ArgumentList	l		414818	1					
ANR	415818	Argument	l		414818	0					
ANR	415819	Identifier	l		414818	0					
ANR	415820	Argument	& l		414818	1					
ANR	415821	UnaryOperationExpression	& l		414818	0					
ANR	415822	UnaryOperator	&		414818	0					
ANR	415823	Identifier	l		414818	1					
ANR	415824	IfStatement	if ( m -> type != FILE_INVALID )		414818	2					
ANR	415825	Condition	m -> type != FILE_INVALID	1914:6:43970:43992	414818	0	True				
ANR	415826	EqualityExpression	m -> type != FILE_INVALID		414818	0		!=			
ANR	415827	PtrMemberAccess	m -> type		414818	0					
ANR	415828	Identifier	m		414818	0					
ANR	415829	Identifier	type		414818	1					
ANR	415830	Identifier	FILE_INVALID		414818	1					
ANR	415831	ExpressionStatement	m -> flag |= UNSIGNED	1915:3:43998:44017	414818	1	True				
ANR	415832	AssignmentExpression	m -> flag |= UNSIGNED		414818	0		|=			
ANR	415833	PtrMemberAccess	m -> flag		414818	0					
ANR	415834	Identifier	m		414818	0					
ANR	415835	Identifier	flag		414818	1					
ANR	415836	Identifier	UNSIGNED		414818	1					
ANR	415837	ElseStatement	else		414818	0					
ANR	415838	CompoundStatement		216:8:4790:4790	414818	0					
ANR	415839	ExpressionStatement	"m -> type = get_type ( type_tbl , l , & l )"	1923:2:44237:44272	414818	0	True				
ANR	415840	AssignmentExpression	"m -> type = get_type ( type_tbl , l , & l )"		414818	0		=			
ANR	415841	PtrMemberAccess	m -> type		414818	0					
ANR	415842	Identifier	m		414818	0					
ANR	415843	Identifier	type		414818	1					
ANR	415844	CallExpression	"get_type ( type_tbl , l , & l )"		414818	1					
ANR	415845	Callee	get_type		414818	0					
ANR	415846	Identifier	get_type		414818	0					
ANR	415847	ArgumentList	type_tbl		414818	1					
ANR	415848	Argument	type_tbl		414818	0					
ANR	415849	Identifier	type_tbl		414818	0					
ANR	415850	Argument	l		414818	1					
ANR	415851	Identifier	l		414818	0					
ANR	415852	Argument	& l		414818	2					
ANR	415853	UnaryOperationExpression	& l		414818	0					
ANR	415854	UnaryOperator	&		414818	0					
ANR	415855	Identifier	l		414818	1					
ANR	415856	IfStatement	if ( m -> type == FILE_INVALID )		414818	1					
ANR	415857	Condition	m -> type == FILE_INVALID	1924:6:44280:44302	414818	0	True				
ANR	415858	EqualityExpression	m -> type == FILE_INVALID		414818	0		==			
ANR	415859	PtrMemberAccess	m -> type		414818	0					
ANR	415860	Identifier	m		414818	0					
ANR	415861	Identifier	type		414818	1					
ANR	415862	Identifier	FILE_INVALID		414818	1					
ANR	415863	CompoundStatement		224:31:5068:5068	414818	1					
ANR	415864	IfStatement	if ( * l == 'd' )		414818	0					
ANR	415865	Condition	* l == 'd'	1930:7:44454:44462	414818	0	True				
ANR	415866	EqualityExpression	* l == 'd'		414818	0		==			
ANR	415867	UnaryOperationExpression	* l		414818	0					
ANR	415868	UnaryOperator	*		414818	0					
ANR	415869	Identifier	l		414818	1					
ANR	415870	PrimaryExpression	'd'		414818	1					
ANR	415871	ExpressionStatement	"m -> type = get_standard_integer_type ( l , & l )"	1931:4:44469:44511	414818	1	True				
ANR	415872	AssignmentExpression	"m -> type = get_standard_integer_type ( l , & l )"		414818	0		=			
ANR	415873	PtrMemberAccess	m -> type		414818	0					
ANR	415874	Identifier	m		414818	0					
ANR	415875	Identifier	type		414818	1					
ANR	415876	CallExpression	"get_standard_integer_type ( l , & l )"		414818	1					
ANR	415877	Callee	get_standard_integer_type		414818	0					
ANR	415878	Identifier	get_standard_integer_type		414818	0					
ANR	415879	ArgumentList	l		414818	1					
ANR	415880	Argument	l		414818	0					
ANR	415881	Identifier	l		414818	0					
ANR	415882	Argument	& l		414818	1					
ANR	415883	UnaryOperationExpression	& l		414818	0					
ANR	415884	UnaryOperator	&		414818	0					
ANR	415885	Identifier	l		414818	1					
ANR	415886	ElseStatement	else		414818	0					
ANR	415887	IfStatement	if ( * l == 's' && ! isalpha ( ( unsigned char ) l [ 1 ] ) )		414818	0					
ANR	415888	Condition	* l == 's' && ! isalpha ( ( unsigned char ) l [ 1 ] )	1932:12:44525:44566	414818	0	True				
ANR	415889	AndExpression	* l == 's' && ! isalpha ( ( unsigned char ) l [ 1 ] )		414818	0		&&			
ANR	415890	EqualityExpression	* l == 's'		414818	0		==			
ANR	415891	UnaryOperationExpression	* l		414818	0					
ANR	415892	UnaryOperator	*		414818	0					
ANR	415893	Identifier	l		414818	1					
ANR	415894	PrimaryExpression	's'		414818	1					
ANR	415895	UnaryOperationExpression	! isalpha ( ( unsigned char ) l [ 1 ] )		414818	1					
ANR	415896	UnaryOperator	!		414818	0					
ANR	415897	CallExpression	isalpha ( ( unsigned char ) l [ 1 ] )		414818	1					
ANR	415898	Callee	isalpha		414818	0					
ANR	415899	Identifier	isalpha		414818	0					
ANR	415900	ArgumentList	( unsigned char ) l [ 1 ]		414818	1					
ANR	415901	Argument	( unsigned char ) l [ 1 ]		414818	0					
ANR	415902	CastExpression	( unsigned char ) l [ 1 ]		414818	0					
ANR	415903	CastTarget	unsigned char		414818	0					
ANR	415904	ArrayIndexing	l [ 1 ]		414818	1					
ANR	415905	Identifier	l		414818	0					
ANR	415906	PrimaryExpression	1		414818	1					
ANR	415907	CompoundStatement		232:56:5332:5332	414818	1					
ANR	415908	ExpressionStatement	m -> type = FILE_STRING	1933:4:44575:44596	414818	0	True				
ANR	415909	AssignmentExpression	m -> type = FILE_STRING		414818	0		=			
ANR	415910	PtrMemberAccess	m -> type		414818	0					
ANR	415911	Identifier	m		414818	0					
ANR	415912	Identifier	type		414818	1					
ANR	415913	Identifier	FILE_STRING		414818	1					
ANR	415914	ExpressionStatement	++ l	1934:2:44600:44603	414818	1	True				
ANR	415915	UnaryExpression	++ l		414818	0					
ANR	415916	IncDec	++		414818	0					
ANR	415917	Identifier	l		414818	1					
ANR	415918	IfStatement	if ( m -> type == FILE_INVALID )		414818	27					
ANR	415919	Condition	m -> type == FILE_INVALID	1939:5:44623:44645	414818	0	True				
ANR	415920	EqualityExpression	m -> type == FILE_INVALID		414818	0		==			
ANR	415921	PtrMemberAccess	m -> type		414818	0					
ANR	415922	Identifier	m		414818	0					
ANR	415923	Identifier	type		414818	1					
ANR	415924	Identifier	FILE_INVALID		414818	1					
ANR	415925	CompoundStatement		239:30:5411:5411	414818	1					
ANR	415926	ExpressionStatement	"m -> type = get_type ( special_tbl , l , & l )"	1941:2:44701:44739	414818	0	True				
ANR	415927	AssignmentExpression	"m -> type = get_type ( special_tbl , l , & l )"		414818	0		=			
ANR	415928	PtrMemberAccess	m -> type		414818	0					
ANR	415929	Identifier	m		414818	0					
ANR	415930	Identifier	type		414818	1					
ANR	415931	CallExpression	"get_type ( special_tbl , l , & l )"		414818	1					
ANR	415932	Callee	get_type		414818	0					
ANR	415933	Identifier	get_type		414818	0					
ANR	415934	ArgumentList	special_tbl		414818	1					
ANR	415935	Argument	special_tbl		414818	0					
ANR	415936	Identifier	special_tbl		414818	0					
ANR	415937	Argument	l		414818	1					
ANR	415938	Identifier	l		414818	0					
ANR	415939	Argument	& l		414818	2					
ANR	415940	UnaryOperationExpression	& l		414818	0					
ANR	415941	UnaryOperator	&		414818	0					
ANR	415942	Identifier	l		414818	1					
ANR	415943	IfStatement	if ( m -> type == FILE_INVALID )		414818	28					
ANR	415944	Condition	m -> type == FILE_INVALID	1944:5:44753:44775	414818	0	True				
ANR	415945	EqualityExpression	m -> type == FILE_INVALID		414818	0		==			
ANR	415946	PtrMemberAccess	m -> type		414818	0					
ANR	415947	Identifier	m		414818	0					
ANR	415948	Identifier	type		414818	1					
ANR	415949	Identifier	FILE_INVALID		414818	1					
ANR	415950	CompoundStatement		244:30:5541:5541	414818	1					
ANR	415951	IfStatement	if ( ms -> flags & MAGIC_CHECK )		414818	0					
ANR	415952	Condition	ms -> flags & MAGIC_CHECK	1945:6:44786:44808	414818	0	True				
ANR	415953	BitAndExpression	ms -> flags & MAGIC_CHECK		414818	0		&			
ANR	415954	PtrMemberAccess	ms -> flags		414818	0					
ANR	415955	Identifier	ms		414818	0					
ANR	415956	Identifier	flags		414818	1					
ANR	415957	Identifier	MAGIC_CHECK		414818	1					
ANR	415958	ExpressionStatement	"file_magwarn ( ms , ""type `%s' invalid"" , l )"	1946:3:44814:44854	414818	1	True				
ANR	415959	CallExpression	"file_magwarn ( ms , ""type `%s' invalid"" , l )"		414818	0					
ANR	415960	Callee	file_magwarn		414818	0					
ANR	415961	Identifier	file_magwarn		414818	0					
ANR	415962	ArgumentList	ms		414818	1					
ANR	415963	Argument	ms		414818	0					
ANR	415964	Identifier	ms		414818	0					
ANR	415965	Argument	"""type `%s' invalid"""		414818	1					
ANR	415966	PrimaryExpression	"""type `%s' invalid"""		414818	0					
ANR	415967	Argument	l		414818	2					
ANR	415968	Identifier	l		414818	0					
ANR	415969	ReturnStatement	return - 1 ;	1947:2:44858:44867	414818	1	True				
ANR	415970	UnaryOperationExpression	- 1		414818	0					
ANR	415971	UnaryOperator	-		414818	0					
ANR	415972	PrimaryExpression	1		414818	1					
ANR	415973	ExpressionStatement	m -> mask_op = 0	1953:1:45005:45019	414818	29	True				
ANR	415974	AssignmentExpression	m -> mask_op = 0		414818	0		=			
ANR	415975	PtrMemberAccess	m -> mask_op		414818	0					
ANR	415976	Identifier	m		414818	0					
ANR	415977	Identifier	mask_op		414818	1					
ANR	415978	PrimaryExpression	0		414818	1					
ANR	415979	IfStatement	if ( * l == '~' )		414818	30					
ANR	415980	Condition	* l == '~'	1954:5:45026:45034	414818	0	True				
ANR	415981	EqualityExpression	* l == '~'		414818	0		==			
ANR	415982	UnaryOperationExpression	* l		414818	0					
ANR	415983	UnaryOperator	*		414818	0					
ANR	415984	Identifier	l		414818	1					
ANR	415985	PrimaryExpression	'~'		414818	1					
ANR	415986	CompoundStatement		254:16:5800:5800	414818	1					
ANR	415987	IfStatement	if ( ! IS_LIBMAGIC_STRING ( m -> type ) )		414818	0					
ANR	415988	Condition	! IS_LIBMAGIC_STRING ( m -> type )	1955:6:45045:45072	414818	0	True				
ANR	415989	UnaryOperationExpression	! IS_LIBMAGIC_STRING ( m -> type )		414818	0					
ANR	415990	UnaryOperator	!		414818	0					
ANR	415991	CallExpression	IS_LIBMAGIC_STRING ( m -> type )		414818	1					
ANR	415992	Callee	IS_LIBMAGIC_STRING		414818	0					
ANR	415993	Identifier	IS_LIBMAGIC_STRING		414818	0					
ANR	415994	ArgumentList	m -> type		414818	1					
ANR	415995	Argument	m -> type		414818	0					
ANR	415996	PtrMemberAccess	m -> type		414818	0					
ANR	415997	Identifier	m		414818	0					
ANR	415998	Identifier	type		414818	1					
ANR	415999	ExpressionStatement	m -> mask_op |= FILE_OPINVERSE	1956:3:45078:45106	414818	1	True				
ANR	416000	AssignmentExpression	m -> mask_op |= FILE_OPINVERSE		414818	0		|=			
ANR	416001	PtrMemberAccess	m -> mask_op		414818	0					
ANR	416002	Identifier	m		414818	0					
ANR	416003	Identifier	mask_op		414818	1					
ANR	416004	Identifier	FILE_OPINVERSE		414818	1					
ANR	416005	ElseStatement	else		414818	0					
ANR	416006	IfStatement	if ( ms -> flags & MAGIC_CHECK )		414818	0					
ANR	416007	Condition	ms -> flags & MAGIC_CHECK	1957:11:45119:45141	414818	0	True				
ANR	416008	BitAndExpression	ms -> flags & MAGIC_CHECK		414818	0		&			
ANR	416009	PtrMemberAccess	ms -> flags		414818	0					
ANR	416010	Identifier	ms		414818	0					
ANR	416011	Identifier	flags		414818	1					
ANR	416012	Identifier	MAGIC_CHECK		414818	1					
ANR	416013	ExpressionStatement	"file_magwarn ( ms , ""'~' invalid for string types"" )"	1958:3:45147:45195	414818	1	True				
ANR	416014	CallExpression	"file_magwarn ( ms , ""'~' invalid for string types"" )"		414818	0					
ANR	416015	Callee	file_magwarn		414818	0					
ANR	416016	Identifier	file_magwarn		414818	0					
ANR	416017	ArgumentList	ms		414818	1					
ANR	416018	Argument	ms		414818	0					
ANR	416019	Identifier	ms		414818	0					
ANR	416020	Argument	"""'~' invalid for string types"""		414818	1					
ANR	416021	PrimaryExpression	"""'~' invalid for string types"""		414818	0					
ANR	416022	ExpressionStatement	++ l	1959:2:45199:45202	414818	1	True				
ANR	416023	UnaryExpression	++ l		414818	0					
ANR	416024	IncDec	++		414818	0					
ANR	416025	Identifier	l		414818	1					
ANR	416026	ExpressionStatement	m -> str_range = 0	1961:1:45208:45224	414818	31	True				
ANR	416027	AssignmentExpression	m -> str_range = 0		414818	0		=			
ANR	416028	PtrMemberAccess	m -> str_range		414818	0					
ANR	416029	Identifier	m		414818	0					
ANR	416030	Identifier	str_range		414818	1					
ANR	416031	PrimaryExpression	0		414818	1					
ANR	416032	ExpressionStatement	m -> str_flags = m -> type == FILE_PSTRING ? PSTRING_1_LE : 0	1962:1:45227:45284	414818	32	True				
ANR	416033	AssignmentExpression	m -> str_flags = m -> type == FILE_PSTRING ? PSTRING_1_LE : 0		414818	0		=			
ANR	416034	PtrMemberAccess	m -> str_flags		414818	0					
ANR	416035	Identifier	m		414818	0					
ANR	416036	Identifier	str_flags		414818	1					
ANR	416037	ConditionalExpression	m -> type == FILE_PSTRING ? PSTRING_1_LE : 0		414818	1					
ANR	416038	Condition	m -> type == FILE_PSTRING		414818	0					
ANR	416039	EqualityExpression	m -> type == FILE_PSTRING		414818	0		==			
ANR	416040	PtrMemberAccess	m -> type		414818	0					
ANR	416041	Identifier	m		414818	0					
ANR	416042	Identifier	type		414818	1					
ANR	416043	Identifier	FILE_PSTRING		414818	1					
ANR	416044	Identifier	PSTRING_1_LE		414818	1					
ANR	416045	PrimaryExpression	0		414818	2					
ANR	416046	IfStatement	if ( ( op = get_op ( * l ) ) != - 1 )		414818	33					
ANR	416047	Condition	( op = get_op ( * l ) ) != - 1	1963:5:45291:45313	414818	0	True				
ANR	416048	EqualityExpression	( op = get_op ( * l ) ) != - 1		414818	0		!=			
ANR	416049	AssignmentExpression	op = get_op ( * l )		414818	0		=			
ANR	416050	Identifier	op		414818	0					
ANR	416051	CallExpression	get_op ( * l )		414818	1					
ANR	416052	Callee	get_op		414818	0					
ANR	416053	Identifier	get_op		414818	0					
ANR	416054	ArgumentList	* l		414818	1					
ANR	416055	Argument	* l		414818	0					
ANR	416056	UnaryOperationExpression	* l		414818	0					
ANR	416057	UnaryOperator	*		414818	0					
ANR	416058	Identifier	l		414818	1					
ANR	416059	UnaryOperationExpression	- 1		414818	1					
ANR	416060	UnaryOperator	-		414818	0					
ANR	416061	PrimaryExpression	1		414818	1					
ANR	416062	CompoundStatement		263:30:6079:6079	414818	1					
ANR	416063	IfStatement	if ( IS_LIBMAGIC_STRING ( m -> type ) )		414818	0					
ANR	416064	Condition	IS_LIBMAGIC_STRING ( m -> type )	1964:6:45324:45350	414818	0	True				
ANR	416065	CallExpression	IS_LIBMAGIC_STRING ( m -> type )		414818	0					
ANR	416066	Callee	IS_LIBMAGIC_STRING		414818	0					
ANR	416067	Identifier	IS_LIBMAGIC_STRING		414818	0					
ANR	416068	ArgumentList	m -> type		414818	1					
ANR	416069	Argument	m -> type		414818	0					
ANR	416070	PtrMemberAccess	m -> type		414818	0					
ANR	416071	Identifier	m		414818	0					
ANR	416072	Identifier	type		414818	1					
ANR	416073	CompoundStatement		265:3:6121:6126	414818	1					
ANR	416074	IdentifierDeclStatement	int r ;	1965:3:45358:45363	414818	0	True				
ANR	416075	IdentifierDecl	r		414818	0					
ANR	416076	IdentifierDeclType	int		414818	0					
ANR	416077	Identifier	r		414818	1					
ANR	416078	IfStatement	if ( op != FILE_OPDIVIDE )		414818	1					
ANR	416079	Condition	op != FILE_OPDIVIDE	1967:7:45373:45391	414818	0	True				
ANR	416080	EqualityExpression	op != FILE_OPDIVIDE		414818	0		!=			
ANR	416081	Identifier	op		414818	0					
ANR	416082	Identifier	FILE_OPDIVIDE		414818	1					
ANR	416083	CompoundStatement		267:28:6157:6157	414818	1					
ANR	416084	IfStatement	if ( ms -> flags & MAGIC_CHECK )		414818	0					
ANR	416085	Condition	ms -> flags & MAGIC_CHECK	1968:8:45404:45426	414818	0	True				
ANR	416086	BitAndExpression	ms -> flags & MAGIC_CHECK		414818	0		&			
ANR	416087	PtrMemberAccess	ms -> flags		414818	0					
ANR	416088	Identifier	ms		414818	0					
ANR	416089	Identifier	flags		414818	1					
ANR	416090	Identifier	MAGIC_CHECK		414818	1					
ANR	416091	Statement	file_magwarn	1969:5:45434:45445	414818	1	True				
ANR	416092	Statement	(	1969:17:45446:45446	414818	1	True				
ANR	416093	Statement	ms	1969:18:45447:45448	414818	2	True				
ANR	416094	Statement	","	1969:20:45449:45449	414818	3	True				
ANR	416095	Statement	"""invalid string/indirect op: """	1970:9:45460:45489	414818	4	True				
ANR	416096	Statement	"""`%c'"""	1971:9:45500:45505	414818	5	True				
ANR	416097	Statement	","	1971:15:45506:45506	414818	6	True				
ANR	416098	Statement	*	1971:17:45508:45508	414818	7	True				
ANR	416099	Statement	t	1971:18:45509:45509	414818	8	True				
ANR	416100	Statement	)	1971:19:45510:45510	414818	9	True				
ANR	416101	ExpressionStatement		1971:20:45511:45511	414818	10	True				
ANR	416102	ReturnStatement	return - 1 ;	1972:4:45517:45526	414818	11	True				
ANR	416103	UnaryOperationExpression	- 1		414818	0					
ANR	416104	UnaryOperator	-		414818	0					
ANR	416105	PrimaryExpression	1		414818	1					
ANR	416106	IfStatement	if ( m -> type == FILE_INDIRECT )		414818	2					
ANR	416107	Condition	m -> type == FILE_INDIRECT	1975:7:45541:45564	414818	0	True				
ANR	416108	EqualityExpression	m -> type == FILE_INDIRECT		414818	0		==			
ANR	416109	PtrMemberAccess	m -> type		414818	0					
ANR	416110	Identifier	m		414818	0					
ANR	416111	Identifier	type		414818	1					
ANR	416112	Identifier	FILE_INDIRECT		414818	1					
ANR	416113	ExpressionStatement	"r = parse_indirect_modifier ( ms , m , & l )"	1976:4:45571:45609	414818	1	True				
ANR	416114	AssignmentExpression	"r = parse_indirect_modifier ( ms , m , & l )"		414818	0		=			
ANR	416115	Identifier	r		414818	0					
ANR	416116	CallExpression	"parse_indirect_modifier ( ms , m , & l )"		414818	1					
ANR	416117	Callee	parse_indirect_modifier		414818	0					
ANR	416118	Identifier	parse_indirect_modifier		414818	0					
ANR	416119	ArgumentList	ms		414818	1					
ANR	416120	Argument	ms		414818	0					
ANR	416121	Identifier	ms		414818	0					
ANR	416122	Argument	m		414818	1					
ANR	416123	Identifier	m		414818	0					
ANR	416124	Argument	& l		414818	2					
ANR	416125	UnaryOperationExpression	& l		414818	0					
ANR	416126	UnaryOperator	&		414818	0					
ANR	416127	Identifier	l		414818	1					
ANR	416128	ElseStatement	else		414818	0					
ANR	416129	ExpressionStatement	"r = parse_string_modifier ( ms , m , & l )"	1978:4:45623:45659	414818	0	True				
ANR	416130	AssignmentExpression	"r = parse_string_modifier ( ms , m , & l )"		414818	0		=			
ANR	416131	Identifier	r		414818	0					
ANR	416132	CallExpression	"parse_string_modifier ( ms , m , & l )"		414818	1					
ANR	416133	Callee	parse_string_modifier		414818	0					
ANR	416134	Identifier	parse_string_modifier		414818	0					
ANR	416135	ArgumentList	ms		414818	1					
ANR	416136	Argument	ms		414818	0					
ANR	416137	Identifier	ms		414818	0					
ANR	416138	Argument	m		414818	1					
ANR	416139	Identifier	m		414818	0					
ANR	416140	Argument	& l		414818	2					
ANR	416141	UnaryOperationExpression	& l		414818	0					
ANR	416142	UnaryOperator	&		414818	0					
ANR	416143	Identifier	l		414818	1					
ANR	416144	IfStatement	if ( r == - 1 )		414818	3					
ANR	416145	Condition	r == - 1	1979:7:45668:45674	414818	0	True				
ANR	416146	EqualityExpression	r == - 1		414818	0		==			
ANR	416147	Identifier	r		414818	0					
ANR	416148	UnaryOperationExpression	- 1		414818	1					
ANR	416149	UnaryOperator	-		414818	0					
ANR	416150	PrimaryExpression	1		414818	1					
ANR	416151	ReturnStatement	return - 1 ;	1980:4:45681:45690	414818	1	True				
ANR	416152	UnaryOperationExpression	- 1		414818	0					
ANR	416153	UnaryOperator	-		414818	0					
ANR	416154	PrimaryExpression	1		414818	1					
ANR	416155	ElseStatement	else		414818	0					
ANR	416156	ExpressionStatement	"parse_op_modifier ( ms , m , & l , op )"	1982:3:45704:45736	414818	0	True				
ANR	416157	CallExpression	"parse_op_modifier ( ms , m , & l , op )"		414818	0					
ANR	416158	Callee	parse_op_modifier		414818	0					
ANR	416159	Identifier	parse_op_modifier		414818	0					
ANR	416160	ArgumentList	ms		414818	1					
ANR	416161	Argument	ms		414818	0					
ANR	416162	Identifier	ms		414818	0					
ANR	416163	Argument	m		414818	1					
ANR	416164	Identifier	m		414818	0					
ANR	416165	Argument	& l		414818	2					
ANR	416166	UnaryOperationExpression	& l		414818	0					
ANR	416167	UnaryOperator	&		414818	0					
ANR	416168	Identifier	l		414818	1					
ANR	416169	Argument	op		414818	3					
ANR	416170	Identifier	op		414818	0					
ANR	416171	ExpressionStatement	EATAB	1989:1:45876:45881	414818	34	True				
ANR	416172	Identifier	EATAB		414818	0					
ANR	416173	SwitchStatement	switch ( * l )		414818	35					
ANR	416174	Condition	* l	1991:9:45895:45896	414818	0	True				
ANR	416175	UnaryOperationExpression	* l		414818	0					
ANR	416176	UnaryOperator	*		414818	0					
ANR	416177	Identifier	l		414818	1					
ANR	416178	CompoundStatement		291:13:6662:6662	414818	1					
ANR	416179	Label	case '>' :	1992:1:45902:45910	414818	0	True				
ANR	416180	Label	case '<' :	1993:1:45913:45921	414818	1	True				
ANR	416181	ExpressionStatement	m -> reln = * l	1994:4:45927:45939	414818	2	True				
ANR	416182	AssignmentExpression	m -> reln = * l		414818	0		=			
ANR	416183	PtrMemberAccess	m -> reln		414818	0					
ANR	416184	Identifier	m		414818	0					
ANR	416185	Identifier	reln		414818	1					
ANR	416186	UnaryOperationExpression	* l		414818	1					
ANR	416187	UnaryOperator	*		414818	0					
ANR	416188	Identifier	l		414818	1					
ANR	416189	ExpressionStatement	++ l	1995:4:45945:45948	414818	3	True				
ANR	416190	UnaryExpression	++ l		414818	0					
ANR	416191	IncDec	++		414818	0					
ANR	416192	Identifier	l		414818	1					
ANR	416193	IfStatement	if ( * l == '=' )		414818	4					
ANR	416194	Condition	* l == '='	1996:6:45956:45964	414818	0	True				
ANR	416195	EqualityExpression	* l == '='		414818	0		==			
ANR	416196	UnaryOperationExpression	* l		414818	0					
ANR	416197	UnaryOperator	*		414818	0					
ANR	416198	Identifier	l		414818	1					
ANR	416199	PrimaryExpression	'='		414818	1					
ANR	416200	CompoundStatement		296:17:6730:6730	414818	1					
ANR	416201	IfStatement	if ( ms -> flags & MAGIC_CHECK )		414818	0					
ANR	416202	Condition	ms -> flags & MAGIC_CHECK	1997:7:45976:45998	414818	0	True				
ANR	416203	BitAndExpression	ms -> flags & MAGIC_CHECK		414818	0		&			
ANR	416204	PtrMemberAccess	ms -> flags		414818	0					
ANR	416205	Identifier	ms		414818	0					
ANR	416206	Identifier	flags		414818	1					
ANR	416207	Identifier	MAGIC_CHECK		414818	1					
ANR	416208	CompoundStatement		297:32:6764:6764	414818	1					
ANR	416209	ExpressionStatement	"file_magwarn ( ms , ""%c= not supported"" , m -> reln )"	1998:4:46007:46061	414818	0	True				
ANR	416210	CallExpression	"file_magwarn ( ms , ""%c= not supported"" , m -> reln )"		414818	0					
ANR	416211	Callee	file_magwarn		414818	0					
ANR	416212	Identifier	file_magwarn		414818	0					
ANR	416213	ArgumentList	ms		414818	1					
ANR	416214	Argument	ms		414818	0					
ANR	416215	Identifier	ms		414818	0					
ANR	416216	Argument	"""%c= not supported"""		414818	1					
ANR	416217	PrimaryExpression	"""%c= not supported"""		414818	0					
ANR	416218	Argument	m -> reln		414818	2					
ANR	416219	PtrMemberAccess	m -> reln		414818	0					
ANR	416220	Identifier	m		414818	0					
ANR	416221	Identifier	reln		414818	1					
ANR	416222	ReturnStatement	return - 1 ;	2000:4:46067:46076	414818	1	True				
ANR	416223	UnaryOperationExpression	- 1		414818	0					
ANR	416224	UnaryOperator	-		414818	0					
ANR	416225	PrimaryExpression	1		414818	1					
ANR	416226	ExpressionStatement	++ l	2002:5:46088:46091	414818	1	True				
ANR	416227	UnaryExpression	++ l		414818	0					
ANR	416228	IncDec	++		414818	0					
ANR	416229	Identifier	l		414818	1					
ANR	416230	BreakStatement	break ;	2004:2:46099:46104	414818	5	True				
ANR	416231	Label	case '&' :	2006:1:46166:46174	414818	6	True				
ANR	416232	Label	case '^' :	2007:1:46177:46185	414818	7	True				
ANR	416233	Label	case '=' :	2008:1:46188:46196	414818	8	True				
ANR	416234	ExpressionStatement	m -> reln = * l	2009:4:46202:46214	414818	9	True				
ANR	416235	AssignmentExpression	m -> reln = * l		414818	0		=			
ANR	416236	PtrMemberAccess	m -> reln		414818	0					
ANR	416237	Identifier	m		414818	0					
ANR	416238	Identifier	reln		414818	1					
ANR	416239	UnaryOperationExpression	* l		414818	1					
ANR	416240	UnaryOperator	*		414818	0					
ANR	416241	Identifier	l		414818	1					
ANR	416242	ExpressionStatement	++ l	2010:4:46220:46223	414818	10	True				
ANR	416243	UnaryExpression	++ l		414818	0					
ANR	416244	IncDec	++		414818	0					
ANR	416245	Identifier	l		414818	1					
ANR	416246	IfStatement	if ( * l == '=' )		414818	11					
ANR	416247	Condition	* l == '='	2011:6:46231:46239	414818	0	True				
ANR	416248	EqualityExpression	* l == '='		414818	0		==			
ANR	416249	UnaryOperationExpression	* l		414818	0					
ANR	416250	UnaryOperator	*		414818	0					
ANR	416251	Identifier	l		414818	1					
ANR	416252	PrimaryExpression	'='		414818	1					
ANR	416253	CompoundStatement		311:17:7005:7005	414818	1					
ANR	416254	ExpressionStatement	++ l	2013:5:46286:46289	414818	0	True				
ANR	416255	UnaryExpression	++ l		414818	0					
ANR	416256	IncDec	++		414818	0					
ANR	416257	Identifier	l		414818	1					
ANR	416258	BreakStatement	break ;	2015:2:46297:46302	414818	12	True				
ANR	416259	Label	case '!' :	2016:1:46305:46313	414818	13	True				
ANR	416260	ExpressionStatement	m -> reln = * l	2017:2:46317:46329	414818	14	True				
ANR	416261	AssignmentExpression	m -> reln = * l		414818	0		=			
ANR	416262	PtrMemberAccess	m -> reln		414818	0					
ANR	416263	Identifier	m		414818	0					
ANR	416264	Identifier	reln		414818	1					
ANR	416265	UnaryOperationExpression	* l		414818	1					
ANR	416266	UnaryOperator	*		414818	0					
ANR	416267	Identifier	l		414818	1					
ANR	416268	ExpressionStatement	++ l	2018:2:46333:46336	414818	15	True				
ANR	416269	UnaryExpression	++ l		414818	0					
ANR	416270	IncDec	++		414818	0					
ANR	416271	Identifier	l		414818	1					
ANR	416272	BreakStatement	break ;	2019:2:46340:46345	414818	16	True				
ANR	416273	Label	default :	2020:1:46348:46355	414818	17	True				
ANR	416274	Identifier	default		414818	0					
ANR	416275	ExpressionStatement	m -> reln = '='	2021:4:46361:46374	414818	18	True				
ANR	416276	AssignmentExpression	m -> reln = '='		414818	0		=			
ANR	416277	PtrMemberAccess	m -> reln		414818	0					
ANR	416278	Identifier	m		414818	0					
ANR	416279	Identifier	reln		414818	1					
ANR	416280	PrimaryExpression	'='		414818	1					
ANR	416281	IfStatement	if ( * l == 'x' && ( ( isascii ( ( unsigned char ) l [ 1 ] ) && isspace ( ( unsigned char ) l [ 1 ] ) ) || ! l [ 1 ] ) )		414818	19					
ANR	416282	Condition	* l == 'x' && ( ( isascii ( ( unsigned char ) l [ 1 ] ) && isspace ( ( unsigned char ) l [ 1 ] ) ) || ! l [ 1 ] )	2022:6:46409:46501	414818	0	True				
ANR	416283	AndExpression	* l == 'x' && ( ( isascii ( ( unsigned char ) l [ 1 ] ) && isspace ( ( unsigned char ) l [ 1 ] ) ) || ! l [ 1 ] )		414818	0		&&			
ANR	416284	EqualityExpression	* l == 'x'		414818	0		==			
ANR	416285	UnaryOperationExpression	* l		414818	0					
ANR	416286	UnaryOperator	*		414818	0					
ANR	416287	Identifier	l		414818	1					
ANR	416288	PrimaryExpression	'x'		414818	1					
ANR	416289	OrExpression	( isascii ( ( unsigned char ) l [ 1 ] ) && isspace ( ( unsigned char ) l [ 1 ] ) ) || ! l [ 1 ]		414818	1		||			
ANR	416290	AndExpression	isascii ( ( unsigned char ) l [ 1 ] ) && isspace ( ( unsigned char ) l [ 1 ] )		414818	0		&&			
ANR	416291	CallExpression	isascii ( ( unsigned char ) l [ 1 ] )		414818	0					
ANR	416292	Callee	isascii		414818	0					
ANR	416293	Identifier	isascii		414818	0					
ANR	416294	ArgumentList	( unsigned char ) l [ 1 ]		414818	1					
ANR	416295	Argument	( unsigned char ) l [ 1 ]		414818	0					
ANR	416296	CastExpression	( unsigned char ) l [ 1 ]		414818	0					
ANR	416297	CastTarget	unsigned char		414818	0					
ANR	416298	ArrayIndexing	l [ 1 ]		414818	1					
ANR	416299	Identifier	l		414818	0					
ANR	416300	PrimaryExpression	1		414818	1					
ANR	416301	CallExpression	isspace ( ( unsigned char ) l [ 1 ] )		414818	1					
ANR	416302	Callee	isspace		414818	0					
ANR	416303	Identifier	isspace		414818	0					
ANR	416304	ArgumentList	( unsigned char ) l [ 1 ]		414818	1					
ANR	416305	Argument	( unsigned char ) l [ 1 ]		414818	0					
ANR	416306	CastExpression	( unsigned char ) l [ 1 ]		414818	0					
ANR	416307	CastTarget	unsigned char		414818	0					
ANR	416308	ArrayIndexing	l [ 1 ]		414818	1					
ANR	416309	Identifier	l		414818	0					
ANR	416310	PrimaryExpression	1		414818	1					
ANR	416311	UnaryOperationExpression	! l [ 1 ]		414818	1					
ANR	416312	UnaryOperator	!		414818	0					
ANR	416313	ArrayIndexing	l [ 1 ]		414818	1					
ANR	416314	Identifier	l		414818	0					
ANR	416315	PrimaryExpression	1		414818	1					
ANR	416316	CompoundStatement		323:47:7267:7267	414818	1					
ANR	416317	ExpressionStatement	m -> reln = * l	2024:3:46509:46521	414818	0	True				
ANR	416318	AssignmentExpression	m -> reln = * l		414818	0		=			
ANR	416319	PtrMemberAccess	m -> reln		414818	0					
ANR	416320	Identifier	m		414818	0					
ANR	416321	Identifier	reln		414818	1					
ANR	416322	UnaryOperationExpression	* l		414818	1					
ANR	416323	UnaryOperator	*		414818	0					
ANR	416324	Identifier	l		414818	1					
ANR	416325	ExpressionStatement	++ l	2025:3:46526:46529	414818	1	True				
ANR	416326	UnaryExpression	++ l		414818	0					
ANR	416327	IncDec	++		414818	0					
ANR	416328	Identifier	l		414818	1					
ANR	416329	BreakStatement	break ;	2027:2:46537:46542	414818	20	True				
ANR	416330	IfStatement	"if ( m -> reln != 'x' && getvalue ( ms , m , & l , action ) )"		414818	36					
ANR	416331	Condition	"m -> reln != 'x' && getvalue ( ms , m , & l , action )"	2032:5:46610:46654	414818	0	True				
ANR	416332	AndExpression	"m -> reln != 'x' && getvalue ( ms , m , & l , action )"		414818	0		&&			
ANR	416333	EqualityExpression	m -> reln != 'x'		414818	0		!=			
ANR	416334	PtrMemberAccess	m -> reln		414818	0					
ANR	416335	Identifier	m		414818	0					
ANR	416336	Identifier	reln		414818	1					
ANR	416337	PrimaryExpression	'x'		414818	1					
ANR	416338	CallExpression	"getvalue ( ms , m , & l , action )"		414818	1					
ANR	416339	Callee	getvalue		414818	0					
ANR	416340	Identifier	getvalue		414818	0					
ANR	416341	ArgumentList	ms		414818	1					
ANR	416342	Argument	ms		414818	0					
ANR	416343	Identifier	ms		414818	0					
ANR	416344	Argument	m		414818	1					
ANR	416345	Identifier	m		414818	0					
ANR	416346	Argument	& l		414818	2					
ANR	416347	UnaryOperationExpression	& l		414818	0					
ANR	416348	UnaryOperator	&		414818	0					
ANR	416349	Identifier	l		414818	1					
ANR	416350	Argument	action		414818	3					
ANR	416351	Identifier	action		414818	0					
ANR	416352	ReturnStatement	return - 1 ;	2033:2:46659:46668	414818	1	True				
ANR	416353	UnaryOperationExpression	- 1		414818	0					
ANR	416354	UnaryOperator	-		414818	0					
ANR	416355	PrimaryExpression	1		414818	1					
ANR	416356	ExpressionStatement	EATAB	2044:1:46861:46866	414818	37	True				
ANR	416357	Identifier	EATAB		414818	0					
ANR	416358	IfStatement	if ( l [ 0 ] == '\\b' )		414818	38					
ANR	416359	Condition	l [ 0 ] == '\\b'	2045:5:46873:46884	414818	0	True				
ANR	416360	EqualityExpression	l [ 0 ] == '\\b'		414818	0		==			
ANR	416361	ArrayIndexing	l [ 0 ]		414818	0					
ANR	416362	Identifier	l		414818	0					
ANR	416363	PrimaryExpression	0		414818	1					
ANR	416364	PrimaryExpression	'\\b'		414818	1					
ANR	416365	CompoundStatement		345:19:7650:7650	414818	1					
ANR	416366	ExpressionStatement	++ l	2046:2:46891:46894	414818	0	True				
ANR	416367	UnaryExpression	++ l		414818	0					
ANR	416368	IncDec	++		414818	0					
ANR	416369	Identifier	l		414818	1					
ANR	416370	ExpressionStatement	m -> flag |= NOSPACE	2047:2:46898:46916	414818	1	True				
ANR	416371	AssignmentExpression	m -> flag |= NOSPACE		414818	0		|=			
ANR	416372	PtrMemberAccess	m -> flag		414818	0					
ANR	416373	Identifier	m		414818	0					
ANR	416374	Identifier	flag		414818	1					
ANR	416375	Identifier	NOSPACE		414818	1					
ANR	416376	ElseStatement	else		414818	0					
ANR	416377	IfStatement	if ( ( l [ 0 ] == '\\\\' ) && ( l [ 1 ] == 'b' ) )		414818	0					
ANR	416378	Condition	( l [ 0 ] == '\\\\' ) && ( l [ 1 ] == 'b' )	2048:12:46930:46960	414818	0	True				
ANR	416379	AndExpression	( l [ 0 ] == '\\\\' ) && ( l [ 1 ] == 'b' )		414818	0		&&			
ANR	416380	EqualityExpression	l [ 0 ] == '\\\\'		414818	0		==			
ANR	416381	ArrayIndexing	l [ 0 ]		414818	0					
ANR	416382	Identifier	l		414818	0					
ANR	416383	PrimaryExpression	0		414818	1					
ANR	416384	PrimaryExpression	'\\\\'		414818	1					
ANR	416385	EqualityExpression	l [ 1 ] == 'b'		414818	1		==			
ANR	416386	ArrayIndexing	l [ 1 ]		414818	0					
ANR	416387	Identifier	l		414818	0					
ANR	416388	PrimaryExpression	1		414818	1					
ANR	416389	PrimaryExpression	'b'		414818	1					
ANR	416390	CompoundStatement		348:45:7726:7726	414818	1					
ANR	416391	ExpressionStatement	++ l	2049:2:46967:46970	414818	0	True				
ANR	416392	UnaryExpression	++ l		414818	0					
ANR	416393	IncDec	++		414818	0					
ANR	416394	Identifier	l		414818	1					
ANR	416395	ExpressionStatement	++ l	2050:2:46974:46977	414818	1	True				
ANR	416396	UnaryExpression	++ l		414818	0					
ANR	416397	IncDec	++		414818	0					
ANR	416398	Identifier	l		414818	1					
ANR	416399	ExpressionStatement	m -> flag |= NOSPACE	2051:2:46981:46999	414818	2	True				
ANR	416400	AssignmentExpression	m -> flag |= NOSPACE		414818	0		|=			
ANR	416401	PtrMemberAccess	m -> flag		414818	0					
ANR	416402	Identifier	m		414818	0					
ANR	416403	Identifier	flag		414818	1					
ANR	416404	Identifier	NOSPACE		414818	1					
ANR	416405	ForStatement	for ( i = 0 ; ( m -> desc [ i ++ ] = * l ++ ) != '\\0' && i < sizeof ( m -> desc ) ; )		414818	39					
ANR	416406	ForInit	i = 0 ;	2053:6:47010:47015	414818	0	True				
ANR	416407	AssignmentExpression	i = 0		414818	0		=			
ANR	416408	Identifier	i		414818	0					
ANR	416409	PrimaryExpression	0		414818	1					
ANR	416410	Condition	( m -> desc [ i ++ ] = * l ++ ) != '\\0' && i < sizeof ( m -> desc )	2053:13:47017:47068	414818	1	True				
ANR	416411	AndExpression	( m -> desc [ i ++ ] = * l ++ ) != '\\0' && i < sizeof ( m -> desc )		414818	0		&&			
ANR	416412	EqualityExpression	( m -> desc [ i ++ ] = * l ++ ) != '\\0'		414818	0		!=			
ANR	416413	AssignmentExpression	m -> desc [ i ++ ] = * l ++		414818	0		=			
ANR	416414	ArrayIndexing	m -> desc [ i ++ ]		414818	0					
ANR	416415	PtrMemberAccess	m -> desc		414818	0					
ANR	416416	Identifier	m		414818	0					
ANR	416417	Identifier	desc		414818	1					
ANR	416418	PostIncDecOperationExpression	i ++		414818	1					
ANR	416419	Identifier	i		414818	0					
ANR	416420	IncDec	++		414818	1					
ANR	416421	UnaryOperationExpression	* l ++		414818	1					
ANR	416422	UnaryOperator	*		414818	0					
ANR	416423	PostIncDecOperationExpression	l ++		414818	1					
ANR	416424	Identifier	l		414818	0					
ANR	416425	IncDec	++		414818	1					
ANR	416426	PrimaryExpression	'\\0'		414818	1					
ANR	416427	RelationalExpression	i < sizeof ( m -> desc )		414818	1		<			
ANR	416428	Identifier	i		414818	0					
ANR	416429	SizeofExpression	sizeof ( m -> desc )		414818	1					
ANR	416430	Sizeof	sizeof		414818	0					
ANR	416431	PtrMemberAccess	m -> desc		414818	1					
ANR	416432	Identifier	m		414818	0					
ANR	416433	Identifier	desc		414818	1					
ANR	416434	ContinueStatement	continue ;	2054:2:47075:47083	414818	2	True				
ANR	416435	IfStatement	if ( i == sizeof ( m -> desc ) )		414818	40					
ANR	416436	Condition	i == sizeof ( m -> desc )	2055:5:47090:47109	414818	0	True				
ANR	416437	EqualityExpression	i == sizeof ( m -> desc )		414818	0		==			
ANR	416438	Identifier	i		414818	0					
ANR	416439	SizeofExpression	sizeof ( m -> desc )		414818	1					
ANR	416440	Sizeof	sizeof		414818	0					
ANR	416441	PtrMemberAccess	m -> desc		414818	1					
ANR	416442	Identifier	m		414818	0					
ANR	416443	Identifier	desc		414818	1					
ANR	416444	CompoundStatement		355:27:7875:7875	414818	1					
ANR	416445	ExpressionStatement	m -> desc [ sizeof ( m -> desc ) - 1 ] = '\\0'	2056:2:47116:47151	414818	0	True				
ANR	416446	AssignmentExpression	m -> desc [ sizeof ( m -> desc ) - 1 ] = '\\0'		414818	0		=			
ANR	416447	ArrayIndexing	m -> desc [ sizeof ( m -> desc ) - 1 ]		414818	0					
ANR	416448	PtrMemberAccess	m -> desc		414818	0					
ANR	416449	Identifier	m		414818	0					
ANR	416450	Identifier	desc		414818	1					
ANR	416451	AdditiveExpression	sizeof ( m -> desc ) - 1		414818	1		-			
ANR	416452	SizeofExpression	sizeof ( m -> desc )		414818	0					
ANR	416453	Sizeof	sizeof		414818	0					
ANR	416454	PtrMemberAccess	m -> desc		414818	1					
ANR	416455	Identifier	m		414818	0					
ANR	416456	Identifier	desc		414818	1					
ANR	416457	PrimaryExpression	1		414818	1					
ANR	416458	PrimaryExpression	'\\0'		414818	1					
ANR	416459	IfStatement	if ( ms -> flags & MAGIC_CHECK )		414818	1					
ANR	416460	Condition	ms -> flags & MAGIC_CHECK	2057:6:47159:47181	414818	0	True				
ANR	416461	BitAndExpression	ms -> flags & MAGIC_CHECK		414818	0		&			
ANR	416462	PtrMemberAccess	ms -> flags		414818	0					
ANR	416463	Identifier	ms		414818	0					
ANR	416464	Identifier	flags		414818	1					
ANR	416465	Identifier	MAGIC_CHECK		414818	1					
ANR	416466	ExpressionStatement	"file_magwarn ( ms , ""description `%s' truncated"" , m -> desc )"	2058:3:47187:47242	414818	1	True				
ANR	416467	CallExpression	"file_magwarn ( ms , ""description `%s' truncated"" , m -> desc )"		414818	0					
ANR	416468	Callee	file_magwarn		414818	0					
ANR	416469	Identifier	file_magwarn		414818	0					
ANR	416470	ArgumentList	ms		414818	1					
ANR	416471	Argument	ms		414818	0					
ANR	416472	Identifier	ms		414818	0					
ANR	416473	Argument	"""description `%s' truncated"""		414818	1					
ANR	416474	PrimaryExpression	"""description `%s' truncated"""		414818	0					
ANR	416475	Argument	m -> desc		414818	2					
ANR	416476	PtrMemberAccess	m -> desc		414818	0					
ANR	416477	Identifier	m		414818	0					
ANR	416478	Identifier	desc		414818	1					
ANR	416479	IfStatement	if ( ms -> flags & MAGIC_CHECK )		414818	41					
ANR	416480	Condition	ms -> flags & MAGIC_CHECK	2065:12:47378:47400	414818	0	True				
ANR	416481	BitAndExpression	ms -> flags & MAGIC_CHECK		414818	0		&			
ANR	416482	PtrMemberAccess	ms -> flags		414818	0					
ANR	416483	Identifier	ms		414818	0					
ANR	416484	Identifier	flags		414818	1					
ANR	416485	Identifier	MAGIC_CHECK		414818	1					
ANR	416486	CompoundStatement		365:37:8166:8166	414818	1					
ANR	416487	IfStatement	"if ( check_format ( ms , m ) == - 1 )"		414818	0					
ANR	416488	Condition	"check_format ( ms , m ) == - 1"	2066:6:47411:47435	414818	0	True				
ANR	416489	EqualityExpression	"check_format ( ms , m ) == - 1"		414818	0		==			
ANR	416490	CallExpression	"check_format ( ms , m )"		414818	0					
ANR	416491	Callee	check_format		414818	0					
ANR	416492	Identifier	check_format		414818	0					
ANR	416493	ArgumentList	ms		414818	1					
ANR	416494	Argument	ms		414818	0					
ANR	416495	Identifier	ms		414818	0					
ANR	416496	Argument	m		414818	1					
ANR	416497	Identifier	m		414818	0					
ANR	416498	UnaryOperationExpression	- 1		414818	1					
ANR	416499	UnaryOperator	-		414818	0					
ANR	416500	PrimaryExpression	1		414818	1					
ANR	416501	ReturnStatement	return - 1 ;	2067:3:47441:47450	414818	1	True				
ANR	416502	UnaryOperationExpression	- 1		414818	0					
ANR	416503	UnaryOperator	-		414818	0					
ANR	416504	PrimaryExpression	1		414818	1					
ANR	416505	ExpressionStatement	m -> mimetype [ 0 ] = '\\0'	2069:1:47456:47477	414818	42	True				
ANR	416506	AssignmentExpression	m -> mimetype [ 0 ] = '\\0'		414818	0		=			
ANR	416507	ArrayIndexing	m -> mimetype [ 0 ]		414818	0					
ANR	416508	PtrMemberAccess	m -> mimetype		414818	0					
ANR	416509	Identifier	m		414818	0					
ANR	416510	Identifier	mimetype		414818	1					
ANR	416511	PrimaryExpression	0		414818	1					
ANR	416512	PrimaryExpression	'\\0'		414818	1					
ANR	416513	ReturnStatement	return 0 ;	2070:1:47516:47524	414818	43	True				
ANR	416514	PrimaryExpression	0		414818	0					
ANR	416515	ReturnType	int		414818	1					
ANR	416516	Identifier	parse		414818	2					
ANR	416517	ParameterList	"struct magic_set * ms , struct magic_entry * me , const char * line , size_t lineno , int action"		414818	3					
ANR	416518	Parameter	struct magic_set * ms	1699:6:39141:39160	414818	0	True				
ANR	416519	ParameterType	struct magic_set *		414818	0					
ANR	416520	Identifier	ms		414818	1					
ANR	416521	Parameter	struct magic_entry * me	1699:28:39163:39184	414818	1	True				
ANR	416522	ParameterType	struct magic_entry *		414818	0					
ANR	416523	Identifier	me		414818	1					
ANR	416524	Parameter	const char * line	1699:52:39187:39202	414818	2	True				
ANR	416525	ParameterType	const char *		414818	0					
ANR	416526	Identifier	line		414818	1					
ANR	416527	Parameter	size_t lineno	1700:4:39209:39221	414818	3	True				
ANR	416528	ParameterType	size_t		414818	0					
ANR	416529	Identifier	lineno		414818	1					
ANR	416530	Parameter	int action	1700:19:39224:39233	414818	4	True				
ANR	416531	ParameterType	int		414818	0					
ANR	416532	Identifier	action		414818	1					
ANR	416533	CFGEntryNode	ENTRY		414818		True				
ANR	416534	CFGExitNode	EXIT		414818		True				
ANR	416535	Symbol	FILE_BEDOUBLE		414818						
ANR	416536	Symbol	INDIR		414818						
ANR	416537	Symbol	m -> cond		414818						
ANR	416538	Symbol	* m -> mimetype		414818						
ANR	416539	Symbol	m -> in_offset		414818						
ANR	416540	Symbol	me -> mp		414818						
ANR	416541	Symbol	m -> type		414818						
ANR	416542	Symbol	len		414818						
ANR	416543	Symbol	FILE_LELONG		414818						
ANR	416544	Symbol	OFFADD		414818						
ANR	416545	Symbol	action		414818						
ANR	416546	Symbol	isdigit		414818						
ANR	416547	Symbol	FILE_BELONG		414818						
ANR	416548	Symbol	CAST		414818						
ANR	416549	Symbol	FILE_INVALID		414818						
ANR	416550	Symbol	parse_string_modifier		414818						
ANR	416551	Symbol	isspace		414818						
ANR	416552	Symbol	diff		414818						
ANR	416553	Symbol	FILE_LEID3		414818						
ANR	416554	Symbol	ms -> flags		414818						
ANR	416555	Symbol	m -> lineno		414818						
ANR	416556	Symbol	FILE_LONG		414818						
ANR	416557	Symbol	special_tbl		414818						
ANR	416558	Symbol	isalpha		414818						
ANR	416559	Symbol	* m -> desc		414818						
ANR	416560	Symbol	UNSIGNED		414818						
ANR	416561	Symbol	m -> flag		414818						
ANR	416562	Symbol	file_check_mem		414818						
ANR	416563	Symbol	* ms		414818						
ANR	416564	Symbol	FILE_BESHORT		414818						
ANR	416565	Symbol	cont_level		414818						
ANR	416566	Symbol	FILE_OPINDIRECT		414818						
ANR	416567	Symbol	get_type		414818						
ANR	416568	Symbol	strtol		414818						
ANR	416569	Symbol	m -> in_type		414818						
ANR	416570	Symbol	m -> mimetype		414818						
ANR	416571	Symbol	* me		414818						
ANR	416572	Symbol	* * m		414818						
ANR	416573	Symbol	isascii		414818						
ANR	416574	Symbol	FILE_STRING		414818						
ANR	416575	Symbol	get_standard_integer_type		414818						
ANR	416576	Symbol	* nm		414818						
ANR	416577	Symbol	cnt		414818						
ANR	416578	Symbol	i		414818						
ANR	416579	Symbol	uint32_t		414818						
ANR	416580	Symbol	* l ++		414818						
ANR	416581	Symbol	FILE_PSTRING		414818						
ANR	416582	Symbol	l		414818						
ANR	416583	Symbol	m		414818						
ANR	416584	Symbol	NOSPACE		414818						
ANR	416585	Symbol	me -> max_count		414818						
ANR	416586	Symbol	r		414818						
ANR	416587	Symbol	parse_indirect_modifier		414818						
ANR	416588	Symbol	t		414818						
ANR	416589	Symbol	FILE_MELONG		414818						
ANR	416590	Symbol	INDIROFFADD		414818						
ANR	416591	Symbol	MAGIC_CHECK		414818						
ANR	416592	Symbol	ALLOC_CHUNK		414818						
ANR	416593	Symbol	m -> factor_op		414818						
ANR	416594	Symbol	FILE_BEID3		414818						
ANR	416595	Symbol	type_tbl		414818						
ANR	416596	Symbol	m -> desc		414818						
ANR	416597	Symbol	FILE_INDIRECT		414818						
ANR	416598	Symbol	me		414818						
ANR	416599	Symbol	m -> in_op		414818						
ANR	416600	Symbol	get_cond		414818						
ANR	416601	Symbol	NULL		414818						
ANR	416602	Symbol	FILE_LESHORT		414818						
ANR	416603	Symbol	ms		414818						
ANR	416604	Symbol	m -> str_range		414818						
ANR	416605	Symbol	FILE_OPINVERSE		414818						
ANR	416606	Symbol	FILE_BYTE		414818						
ANR	416607	Symbol	last_cont_level		414818						
ANR	416608	Symbol	m -> cont_level		414818						
ANR	416609	Symbol	nm		414818						
ANR	416610	Symbol	line		414818						
ANR	416611	Symbol	m -> str_flags		414818						
ANR	416612	Symbol	FILE_OPDIVIDE		414818						
ANR	416613	Symbol	~OFFADD		414818						
ANR	416614	Symbol	getvalue		414818						
ANR	416615	Symbol	m -> mask_op		414818						
ANR	416616	Symbol	m -> reln		414818						
ANR	416617	Symbol	strtoul		414818						
ANR	416618	Symbol	op		414818						
ANR	416619	Symbol	PSTRING_1_LE		414818						
ANR	416620	Symbol	get_op		414818						
ANR	416621	Symbol	check_cond		414818						
ANR	416622	Symbol	FILE_FACTOR_OP_NONE		414818						
ANR	416623	Symbol	FILE_LEDOUBLE		414818						
ANR	416624	Symbol	m -> offset		414818						
ANR	416625	Symbol	& l		414818						
ANR	416626	Symbol	lineno		414818						
ANR	416627	Symbol	IS_LIBMAGIC_STRING		414818						
ANR	416628	Symbol	* l		414818						
ANR	416629	Symbol	* m		414818						
ANR	416630	Symbol	check_format		414818						
ANR	416631	Symbol	& t		414818						
ANR	416632	Symbol	me -> cont_count		414818						
ANR	416633	Function	parse_strength	2077:8:47635:48909							
ANR	416634	FunctionDef	"parse_strength (struct magic_set * ms , struct magic_entry * me , const char * line)"		416633	0					
ANR	416635	CompoundStatement		2079:0:47718:48909	416633	0					
ANR	416636	IdentifierDeclStatement	const char * l = line ;	2080:1:47721:47741	416633	0	True				
ANR	416637	IdentifierDecl	* l = line		416633	0					
ANR	416638	IdentifierDeclType	const char *		416633	0					
ANR	416639	Identifier	l		416633	1					
ANR	416640	AssignmentExpression	* l = line		416633	2		=			
ANR	416641	Identifier	line		416633	0					
ANR	416642	Identifier	line		416633	1					
ANR	416643	IdentifierDeclStatement	char * el ;	2081:1:47744:47752	416633	1	True				
ANR	416644	IdentifierDecl	* el		416633	0					
ANR	416645	IdentifierDeclType	char *		416633	0					
ANR	416646	Identifier	el		416633	1					
ANR	416647	IdentifierDeclStatement	unsigned long factor ;	2082:1:47755:47775	416633	2	True				
ANR	416648	IdentifierDecl	factor		416633	0					
ANR	416649	IdentifierDeclType	unsigned long		416633	0					
ANR	416650	Identifier	factor		416633	1					
ANR	416651	IdentifierDeclStatement	struct magic * m = & me -> mp [ 0 ] ;	2083:1:47778:47806	416633	3	True				
ANR	416652	IdentifierDecl	* m = & me -> mp [ 0 ]		416633	0					
ANR	416653	IdentifierDeclType	struct magic *		416633	0					
ANR	416654	Identifier	m		416633	1					
ANR	416655	AssignmentExpression	* m = & me -> mp [ 0 ]		416633	2		=			
ANR	416656	Identifier	m		416633	0					
ANR	416657	UnaryOperationExpression	& me -> mp [ 0 ]		416633	1					
ANR	416658	UnaryOperator	&		416633	0					
ANR	416659	ArrayIndexing	me -> mp [ 0 ]		416633	1					
ANR	416660	PtrMemberAccess	me -> mp		416633	0					
ANR	416661	Identifier	me		416633	0					
ANR	416662	Identifier	mp		416633	1					
ANR	416663	PrimaryExpression	0		416633	1					
ANR	416664	IfStatement	if ( m -> factor_op != FILE_FACTOR_OP_NONE )		416633	4					
ANR	416665	Condition	m -> factor_op != FILE_FACTOR_OP_NONE	2085:5:47814:47848	416633	0	True				
ANR	416666	EqualityExpression	m -> factor_op != FILE_FACTOR_OP_NONE		416633	0		!=			
ANR	416667	PtrMemberAccess	m -> factor_op		416633	0					
ANR	416668	Identifier	m		416633	0					
ANR	416669	Identifier	factor_op		416633	1					
ANR	416670	Identifier	FILE_FACTOR_OP_NONE		416633	1					
ANR	416671	CompoundStatement		7:42:132:132	416633	1					
ANR	416672	ExpressionStatement	"file_magwarn ( ms , ""Current entry already has a strength type: %c %d"" , m -> factor_op , m -> factor )"	2086:2:47855:47960	416633	0	True				
ANR	416673	CallExpression	"file_magwarn ( ms , ""Current entry already has a strength type: %c %d"" , m -> factor_op , m -> factor )"		416633	0					
ANR	416674	Callee	file_magwarn		416633	0					
ANR	416675	Identifier	file_magwarn		416633	0					
ANR	416676	ArgumentList	ms		416633	1					
ANR	416677	Argument	ms		416633	0					
ANR	416678	Identifier	ms		416633	0					
ANR	416679	Argument	"""Current entry already has a strength type: %c %d"""		416633	1					
ANR	416680	PrimaryExpression	"""Current entry already has a strength type: %c %d"""		416633	0					
ANR	416681	Argument	m -> factor_op		416633	2					
ANR	416682	PtrMemberAccess	m -> factor_op		416633	0					
ANR	416683	Identifier	m		416633	0					
ANR	416684	Identifier	factor_op		416633	1					
ANR	416685	Argument	m -> factor		416633	3					
ANR	416686	PtrMemberAccess	m -> factor		416633	0					
ANR	416687	Identifier	m		416633	0					
ANR	416688	Identifier	factor		416633	1					
ANR	416689	ReturnStatement	return - 1 ;	2089:2:47964:47973	416633	1	True				
ANR	416690	UnaryOperationExpression	- 1		416633	0					
ANR	416691	UnaryOperator	-		416633	0					
ANR	416692	PrimaryExpression	1		416633	1					
ANR	416693	IfStatement	if ( m -> type == FILE_NAME )		416633	5					
ANR	416694	Condition	m -> type == FILE_NAME	2091:5:47983:48002	416633	0	True				
ANR	416695	EqualityExpression	m -> type == FILE_NAME		416633	0		==			
ANR	416696	PtrMemberAccess	m -> type		416633	0					
ANR	416697	Identifier	m		416633	0					
ANR	416698	Identifier	type		416633	1					
ANR	416699	Identifier	FILE_NAME		416633	1					
ANR	416700	CompoundStatement		13:27:286:286	416633	1					
ANR	416701	Statement	file_magwarn	2092:2:48009:48020	416633	0	True				
ANR	416702	Statement	(	2092:14:48021:48021	416633	1	True				
ANR	416703	Statement	ms	2092:15:48022:48023	416633	2	True				
ANR	416704	Statement	","	2092:17:48024:48024	416633	3	True				
ANR	416705	Statement	"""%s: Strength setting is not supported in """	2092:19:48026:48068	416633	4	True				
ANR	416706	Statement	"""\\""name\\"" magic entries"""	2093:6:48076:48099	416633	5	True				
ANR	416707	Statement	","	2093:30:48100:48100	416633	6	True				
ANR	416708	Statement	m	2093:32:48102:48102	416633	7	True				
ANR	416709	Statement	->	2093:33:48103:48104	416633	8	True				
ANR	416710	Statement	value	2093:35:48105:48109	416633	9	True				
ANR	416711	Statement	.	2093:40:48110:48110	416633	10	True				
ANR	416712	Statement	s	2093:41:48111:48111	416633	11	True				
ANR	416713	Statement	)	2093:42:48112:48112	416633	12	True				
ANR	416714	ExpressionStatement		2093:43:48113:48113	416633	13	True				
ANR	416715	ReturnStatement	return - 1 ;	2094:2:48117:48126	416633	14	True				
ANR	416716	UnaryOperationExpression	- 1		416633	0					
ANR	416717	UnaryOperator	-		416633	0					
ANR	416718	PrimaryExpression	1		416633	1					
ANR	416719	ExpressionStatement	EATAB	2096:1:48132:48137	416633	6	True				
ANR	416720	Identifier	EATAB		416633	0					
ANR	416721	SwitchStatement	switch ( * l )		416633	7					
ANR	416722	Condition	* l	2097:9:48148:48149	416633	0	True				
ANR	416723	UnaryOperationExpression	* l		416633	0					
ANR	416724	UnaryOperator	*		416633	0					
ANR	416725	Identifier	l		416633	1					
ANR	416726	CompoundStatement		19:13:433:433	416633	1					
ANR	416727	Label	case FILE_FACTOR_OP_NONE :	2098:1:48155:48179	416633	0	True				
ANR	416728	Identifier	FILE_FACTOR_OP_NONE		416633	0					
ANR	416729	Label	case FILE_FACTOR_OP_PLUS :	2099:1:48182:48206	416633	1	True				
ANR	416730	Identifier	FILE_FACTOR_OP_PLUS		416633	0					
ANR	416731	Label	case FILE_FACTOR_OP_MINUS :	2100:1:48209:48234	416633	2	True				
ANR	416732	Identifier	FILE_FACTOR_OP_MINUS		416633	0					
ANR	416733	Label	case FILE_FACTOR_OP_TIMES :	2101:1:48237:48262	416633	3	True				
ANR	416734	Identifier	FILE_FACTOR_OP_TIMES		416633	0					
ANR	416735	Label	case FILE_FACTOR_OP_DIV :	2102:1:48265:48288	416633	4	True				
ANR	416736	Identifier	FILE_FACTOR_OP_DIV		416633	0					
ANR	416737	ExpressionStatement	m -> factor_op = * l ++	2103:2:48292:48311	416633	5	True				
ANR	416738	AssignmentExpression	m -> factor_op = * l ++		416633	0		=			
ANR	416739	PtrMemberAccess	m -> factor_op		416633	0					
ANR	416740	Identifier	m		416633	0					
ANR	416741	Identifier	factor_op		416633	1					
ANR	416742	UnaryOperationExpression	* l ++		416633	1					
ANR	416743	UnaryOperator	*		416633	0					
ANR	416744	PostIncDecOperationExpression	l ++		416633	1					
ANR	416745	Identifier	l		416633	0					
ANR	416746	IncDec	++		416633	1					
ANR	416747	BreakStatement	break ;	2104:2:48315:48320	416633	6	True				
ANR	416748	Label	default :	2105:1:48323:48330	416633	7	True				
ANR	416749	Identifier	default		416633	0					
ANR	416750	ExpressionStatement	"file_magwarn ( ms , ""Unknown factor op `%c'"" , * l )"	2106:2:48334:48380	416633	8	True				
ANR	416751	CallExpression	"file_magwarn ( ms , ""Unknown factor op `%c'"" , * l )"		416633	0					
ANR	416752	Callee	file_magwarn		416633	0					
ANR	416753	Identifier	file_magwarn		416633	0					
ANR	416754	ArgumentList	ms		416633	1					
ANR	416755	Argument	ms		416633	0					
ANR	416756	Identifier	ms		416633	0					
ANR	416757	Argument	"""Unknown factor op `%c'"""		416633	1					
ANR	416758	PrimaryExpression	"""Unknown factor op `%c'"""		416633	0					
ANR	416759	Argument	* l		416633	2					
ANR	416760	UnaryOperationExpression	* l		416633	0					
ANR	416761	UnaryOperator	*		416633	0					
ANR	416762	Identifier	l		416633	1					
ANR	416763	ReturnStatement	return - 1 ;	2107:2:48384:48393	416633	9	True				
ANR	416764	UnaryOperationExpression	- 1		416633	0					
ANR	416765	UnaryOperator	-		416633	0					
ANR	416766	PrimaryExpression	1		416633	1					
ANR	416767	ExpressionStatement	EATAB	2109:1:48399:48404	416633	8	True				
ANR	416768	Identifier	EATAB		416633	0					
ANR	416769	ExpressionStatement	"factor = strtoul ( l , & el , 0 )"	2110:1:48407:48434	416633	9	True				
ANR	416770	AssignmentExpression	"factor = strtoul ( l , & el , 0 )"		416633	0		=			
ANR	416771	Identifier	factor		416633	0					
ANR	416772	CallExpression	"strtoul ( l , & el , 0 )"		416633	1					
ANR	416773	Callee	strtoul		416633	0					
ANR	416774	Identifier	strtoul		416633	0					
ANR	416775	ArgumentList	l		416633	1					
ANR	416776	Argument	l		416633	0					
ANR	416777	Identifier	l		416633	0					
ANR	416778	Argument	& el		416633	1					
ANR	416779	UnaryOperationExpression	& el		416633	0					
ANR	416780	UnaryOperator	&		416633	0					
ANR	416781	Identifier	el		416633	1					
ANR	416782	Argument	0		416633	2					
ANR	416783	PrimaryExpression	0		416633	0					
ANR	416784	IfStatement	if ( factor > 255 )		416633	10					
ANR	416785	Condition	factor > 255	2111:5:48441:48452	416633	0	True				
ANR	416786	RelationalExpression	factor > 255		416633	0		>			
ANR	416787	Identifier	factor		416633	0					
ANR	416788	PrimaryExpression	255		416633	1					
ANR	416789	CompoundStatement		33:19:736:736	416633	1					
ANR	416790	ExpressionStatement	"file_magwarn ( ms , ""Too large factor `%lu'"" , factor )"	2112:2:48459:48509	416633	0	True				
ANR	416791	CallExpression	"file_magwarn ( ms , ""Too large factor `%lu'"" , factor )"		416633	0					
ANR	416792	Callee	file_magwarn		416633	0					
ANR	416793	Identifier	file_magwarn		416633	0					
ANR	416794	ArgumentList	ms		416633	1					
ANR	416795	Argument	ms		416633	0					
ANR	416796	Identifier	ms		416633	0					
ANR	416797	Argument	"""Too large factor `%lu'"""		416633	1					
ANR	416798	PrimaryExpression	"""Too large factor `%lu'"""		416633	0					
ANR	416799	Argument	factor		416633	2					
ANR	416800	Identifier	factor		416633	0					
ANR	416801	GotoStatement	goto out ;	2113:2:48513:48521	416633	1	True				
ANR	416802	Identifier	out		416633	0					
ANR	416803	IfStatement	if ( * el && ! isspace ( ( unsigned char ) * el ) )		416633	11					
ANR	416804	Condition	* el && ! isspace ( ( unsigned char ) * el )	2115:5:48531:48565	416633	0	True				
ANR	416805	AndExpression	* el && ! isspace ( ( unsigned char ) * el )		416633	0		&&			
ANR	416806	UnaryOperationExpression	* el		416633	0					
ANR	416807	UnaryOperator	*		416633	0					
ANR	416808	Identifier	el		416633	1					
ANR	416809	UnaryOperationExpression	! isspace ( ( unsigned char ) * el )		416633	1					
ANR	416810	UnaryOperator	!		416633	0					
ANR	416811	CallExpression	isspace ( ( unsigned char ) * el )		416633	1					
ANR	416812	Callee	isspace		416633	0					
ANR	416813	Identifier	isspace		416633	0					
ANR	416814	ArgumentList	( unsigned char ) * el		416633	1					
ANR	416815	Argument	( unsigned char ) * el		416633	0					
ANR	416816	CastExpression	( unsigned char ) * el		416633	0					
ANR	416817	CastTarget	unsigned char		416633	0					
ANR	416818	UnaryOperationExpression	* el		416633	1					
ANR	416819	UnaryOperator	*		416633	0					
ANR	416820	Identifier	el		416633	1					
ANR	416821	CompoundStatement		37:42:849:849	416633	1					
ANR	416822	ExpressionStatement	"file_magwarn ( ms , ""Bad factor `%s'"" , l )"	2116:2:48572:48610	416633	0	True				
ANR	416823	CallExpression	"file_magwarn ( ms , ""Bad factor `%s'"" , l )"		416633	0					
ANR	416824	Callee	file_magwarn		416633	0					
ANR	416825	Identifier	file_magwarn		416633	0					
ANR	416826	ArgumentList	ms		416633	1					
ANR	416827	Argument	ms		416633	0					
ANR	416828	Identifier	ms		416633	0					
ANR	416829	Argument	"""Bad factor `%s'"""		416633	1					
ANR	416830	PrimaryExpression	"""Bad factor `%s'"""		416633	0					
ANR	416831	Argument	l		416633	2					
ANR	416832	Identifier	l		416633	0					
ANR	416833	GotoStatement	goto out ;	2117:2:48614:48622	416633	1	True				
ANR	416834	Identifier	out		416633	0					
ANR	416835	ExpressionStatement	m -> factor = ( uint8_t ) factor	2119:1:48628:48655	416633	12	True				
ANR	416836	AssignmentExpression	m -> factor = ( uint8_t ) factor		416633	0		=			
ANR	416837	PtrMemberAccess	m -> factor		416633	0					
ANR	416838	Identifier	m		416633	0					
ANR	416839	Identifier	factor		416633	1					
ANR	416840	CastExpression	( uint8_t ) factor		416633	1					
ANR	416841	CastTarget	uint8_t		416633	0					
ANR	416842	Identifier	factor		416633	1					
ANR	416843	IfStatement	if ( m -> factor == 0 && m -> factor_op == FILE_FACTOR_OP_DIV )		416633	13					
ANR	416844	Condition	m -> factor == 0 && m -> factor_op == FILE_FACTOR_OP_DIV	2120:5:48662:48713	416633	0	True				
ANR	416845	AndExpression	m -> factor == 0 && m -> factor_op == FILE_FACTOR_OP_DIV		416633	0		&&			
ANR	416846	EqualityExpression	m -> factor == 0		416633	0		==			
ANR	416847	PtrMemberAccess	m -> factor		416633	0					
ANR	416848	Identifier	m		416633	0					
ANR	416849	Identifier	factor		416633	1					
ANR	416850	PrimaryExpression	0		416633	1					
ANR	416851	EqualityExpression	m -> factor_op == FILE_FACTOR_OP_DIV		416633	1		==			
ANR	416852	PtrMemberAccess	m -> factor_op		416633	0					
ANR	416853	Identifier	m		416633	0					
ANR	416854	Identifier	factor_op		416633	1					
ANR	416855	Identifier	FILE_FACTOR_OP_DIV		416633	1					
ANR	416856	CompoundStatement		42:59:997:997	416633	1					
ANR	416857	ExpressionStatement	"file_magwarn ( ms , ""Cannot have factor op `%c' and factor %u"" , m -> factor_op , m -> factor )"	2121:2:48720:48811	416633	0	True				
ANR	416858	CallExpression	"file_magwarn ( ms , ""Cannot have factor op `%c' and factor %u"" , m -> factor_op , m -> factor )"		416633	0					
ANR	416859	Callee	file_magwarn		416633	0					
ANR	416860	Identifier	file_magwarn		416633	0					
ANR	416861	ArgumentList	ms		416633	1					
ANR	416862	Argument	ms		416633	0					
ANR	416863	Identifier	ms		416633	0					
ANR	416864	Argument	"""Cannot have factor op `%c' and factor %u"""		416633	1					
ANR	416865	PrimaryExpression	"""Cannot have factor op `%c' and factor %u"""		416633	0					
ANR	416866	Argument	m -> factor_op		416633	2					
ANR	416867	PtrMemberAccess	m -> factor_op		416633	0					
ANR	416868	Identifier	m		416633	0					
ANR	416869	Identifier	factor_op		416633	1					
ANR	416870	Argument	m -> factor		416633	3					
ANR	416871	PtrMemberAccess	m -> factor		416633	0					
ANR	416872	Identifier	m		416633	0					
ANR	416873	Identifier	factor		416633	1					
ANR	416874	GotoStatement	goto out ;	2123:2:48815:48823	416633	1	True				
ANR	416875	Identifier	out		416633	0					
ANR	416876	ReturnStatement	return 0 ;	2125:1:48829:48837	416633	14	True				
ANR	416877	PrimaryExpression	0		416633	0					
ANR	416878	Label	out :	2126:0:48839:48842	416633	15	True				
ANR	416879	Identifier	out		416633	0					
ANR	416880	ExpressionStatement	m -> factor_op = FILE_FACTOR_OP_NONE	2127:1:48845:48879	416633	16	True				
ANR	416881	AssignmentExpression	m -> factor_op = FILE_FACTOR_OP_NONE		416633	0		=			
ANR	416882	PtrMemberAccess	m -> factor_op		416633	0					
ANR	416883	Identifier	m		416633	0					
ANR	416884	Identifier	factor_op		416633	1					
ANR	416885	Identifier	FILE_FACTOR_OP_NONE		416633	1					
ANR	416886	ExpressionStatement	m -> factor = 0	2128:1:48882:48895	416633	17	True				
ANR	416887	AssignmentExpression	m -> factor = 0		416633	0		=			
ANR	416888	PtrMemberAccess	m -> factor		416633	0					
ANR	416889	Identifier	m		416633	0					
ANR	416890	Identifier	factor		416633	1					
ANR	416891	PrimaryExpression	0		416633	1					
ANR	416892	ReturnStatement	return - 1 ;	2129:1:48898:48907	416633	18	True				
ANR	416893	UnaryOperationExpression	- 1		416633	0					
ANR	416894	UnaryOperator	-		416633	0					
ANR	416895	PrimaryExpression	1		416633	1					
ANR	416896	ReturnType	int		416633	1					
ANR	416897	Identifier	parse_strength		416633	2					
ANR	416898	ParameterList	"struct magic_set * ms , struct magic_entry * me , const char * line"		416633	3					
ANR	416899	Parameter	struct magic_set * ms	2078:15:47654:47673	416633	0	True				
ANR	416900	ParameterType	struct magic_set *		416633	0					
ANR	416901	Identifier	ms		416633	1					
ANR	416902	Parameter	struct magic_entry * me	2078:37:47676:47697	416633	1	True				
ANR	416903	ParameterType	struct magic_entry *		416633	0					
ANR	416904	Identifier	me		416633	1					
ANR	416905	Parameter	const char * line	2078:61:47700:47715	416633	2	True				
ANR	416906	ParameterType	const char *		416633	0					
ANR	416907	Identifier	line		416633	1					
ANR	416908	CFGEntryNode	ENTRY		416633		True				
ANR	416909	CFGExitNode	EXIT		416633		True				
ANR	416910	Symbol	ms		416633						
ANR	416911	Symbol	line		416633						
ANR	416912	Symbol	el		416633						
ANR	416913	Symbol	FILE_FACTOR_OP_DIV		416633						
ANR	416914	Symbol	m -> factor_op		416633						
ANR	416915	Symbol	isspace		416633						
ANR	416916	Symbol	* l ++		416633						
ANR	416917	Symbol	FILE_FACTOR_OP_NONE		416633						
ANR	416918	Symbol	l		416633						
ANR	416919	Symbol	me -> mp		416633						
ANR	416920	Symbol	m		416633						
ANR	416921	Symbol	FILE_NAME		416633						
ANR	416922	Symbol	* el		416633						
ANR	416923	Symbol	& el		416633						
ANR	416924	Symbol	m -> factor		416633						
ANR	416925	Symbol	m -> type		416633						
ANR	416926	Symbol	* l		416633						
ANR	416927	Symbol	* m		416633						
ANR	416928	Symbol	me		416633						
ANR	416929	Symbol	strtoul		416633						
ANR	416930	Symbol	factor		416633						
ANR	416931	Symbol	* me		416633						
ANR	416932	Function	goodchar	2132:8:48920:49027							
ANR	416933	FunctionDef	"goodchar (unsigned char x , const char * extra)"		416932	0					
ANR	416934	CompoundStatement		2134:0:48969:49027	416932	0					
ANR	416935	ReturnStatement	"return ( isascii ( x ) && isalnum ( x ) ) || strchr ( extra , x ) ;"	2135:1:48972:49025	416932	0	True				
ANR	416936	OrExpression	"( isascii ( x ) && isalnum ( x ) ) || strchr ( extra , x )"		416932	0		||			
ANR	416937	AndExpression	isascii ( x ) && isalnum ( x )		416932	0		&&			
ANR	416938	CallExpression	isascii ( x )		416932	0					
ANR	416939	Callee	isascii		416932	0					
ANR	416940	Identifier	isascii		416932	0					
ANR	416941	ArgumentList	x		416932	1					
ANR	416942	Argument	x		416932	0					
ANR	416943	Identifier	x		416932	0					
ANR	416944	CallExpression	isalnum ( x )		416932	1					
ANR	416945	Callee	isalnum		416932	0					
ANR	416946	Identifier	isalnum		416932	0					
ANR	416947	ArgumentList	x		416932	1					
ANR	416948	Argument	x		416932	0					
ANR	416949	Identifier	x		416932	0					
ANR	416950	CallExpression	"strchr ( extra , x )"		416932	1					
ANR	416951	Callee	strchr		416932	0					
ANR	416952	Identifier	strchr		416932	0					
ANR	416953	ArgumentList	extra		416932	1					
ANR	416954	Argument	extra		416932	0					
ANR	416955	Identifier	extra		416932	0					
ANR	416956	Argument	x		416932	1					
ANR	416957	Identifier	x		416932	0					
ANR	416958	ReturnType	int		416932	1					
ANR	416959	Identifier	goodchar		416932	2					
ANR	416960	ParameterList	"unsigned char x , const char * extra"		416932	3					
ANR	416961	Parameter	unsigned char x	2133:9:48933:48947	416932	0	True				
ANR	416962	ParameterType	unsigned char		416932	0					
ANR	416963	Identifier	x		416932	1					
ANR	416964	Parameter	const char * extra	2133:26:48950:48966	416932	1	True				
ANR	416965	ParameterType	const char *		416932	0					
ANR	416966	Identifier	extra		416932	1					
ANR	416967	CFGEntryNode	ENTRY		416932		True				
ANR	416968	CFGExitNode	EXIT		416932		True				
ANR	416969	Symbol	isalnum		416932						
ANR	416970	Symbol	extra		416932						
ANR	416971	Symbol	x		416932						
ANR	416972	Symbol	strchr		416932						
ANR	416973	Symbol	isascii		416932						
ANR	416974	Function	parse_extra	2138:8:49038:50222							
ANR	416975	FunctionDef	"parse_extra (struct magic_set * ms , struct magic_entry * me , const char * line , zend_off_t off , size_t len , const char * name , const char * extra , int nt)"		416974	0					
ANR	416976	CompoundStatement		2141:0:49195:50222	416974	0					
ANR	416977	IdentifierDeclStatement	size_t i ;	2142:1:49198:49206	416974	0	True				
ANR	416978	IdentifierDecl	i		416974	0					
ANR	416979	IdentifierDeclType	size_t		416974	0					
ANR	416980	Identifier	i		416974	1					
ANR	416981	IdentifierDeclStatement	const char * l = line ;	2143:1:49209:49229	416974	1	True				
ANR	416982	IdentifierDecl	* l = line		416974	0					
ANR	416983	IdentifierDeclType	const char *		416974	0					
ANR	416984	Identifier	l		416974	1					
ANR	416985	AssignmentExpression	* l = line		416974	2		=			
ANR	416986	Identifier	line		416974	0					
ANR	416987	Identifier	line		416974	1					
ANR	416988	IdentifierDeclStatement	struct magic * m = & me -> mp [ me -> cont_count == 0 ? 0 : me -> cont_count - 1 ] ;	2144:1:49232:49303	416974	2	True				
ANR	416989	IdentifierDecl	* m = & me -> mp [ me -> cont_count == 0 ? 0 : me -> cont_count - 1 ]		416974	0					
ANR	416990	IdentifierDeclType	struct magic *		416974	0					
ANR	416991	Identifier	m		416974	1					
ANR	416992	AssignmentExpression	* m = & me -> mp [ me -> cont_count == 0 ? 0 : me -> cont_count - 1 ]		416974	2		=			
ANR	416993	Identifier	m		416974	0					
ANR	416994	UnaryOperationExpression	& me -> mp [ me -> cont_count == 0 ? 0 : me -> cont_count - 1 ]		416974	1					
ANR	416995	UnaryOperator	&		416974	0					
ANR	416996	ArrayIndexing	me -> mp [ me -> cont_count == 0 ? 0 : me -> cont_count - 1 ]		416974	1					
ANR	416997	PtrMemberAccess	me -> mp		416974	0					
ANR	416998	Identifier	me		416974	0					
ANR	416999	Identifier	mp		416974	1					
ANR	417000	ConditionalExpression	me -> cont_count == 0 ? 0 : me -> cont_count - 1		416974	1					
ANR	417001	Condition	me -> cont_count == 0		416974	0					
ANR	417002	EqualityExpression	me -> cont_count == 0		416974	0		==			
ANR	417003	PtrMemberAccess	me -> cont_count		416974	0					
ANR	417004	Identifier	me		416974	0					
ANR	417005	Identifier	cont_count		416974	1					
ANR	417006	PrimaryExpression	0		416974	1					
ANR	417007	PrimaryExpression	0		416974	1					
ANR	417008	AdditiveExpression	me -> cont_count - 1		416974	2		-			
ANR	417009	PtrMemberAccess	me -> cont_count		416974	0					
ANR	417010	Identifier	me		416974	0					
ANR	417011	Identifier	cont_count		416974	1					
ANR	417012	PrimaryExpression	1		416974	1					
ANR	417013	Statement	char	2145:1:49306:49309	416974	3	True				
ANR	417014	Statement	*	2145:6:49311:49311	416974	4	True				
ANR	417015	Statement	buf	2145:7:49312:49314	416974	5	True				
ANR	417016	Statement	=	2145:11:49316:49316	416974	6	True				
ANR	417017	Statement	CAST	2145:13:49318:49321	416974	7	True				
ANR	417018	Statement	(	2145:17:49322:49322	416974	8	True				
ANR	417019	Statement	char	2145:18:49323:49326	416974	9	True				
ANR	417020	Statement	*	2145:23:49328:49328	416974	10	True				
ANR	417021	Statement	","	2145:24:49329:49329	416974	11	True				
ANR	417022	Statement	CAST	2145:26:49331:49334	416974	12	True				
ANR	417023	Statement	(	2145:30:49335:49335	416974	13	True				
ANR	417024	Statement	void	2145:31:49336:49339	416974	14	True				
ANR	417025	Statement	*	2145:36:49341:49341	416974	15	True				
ANR	417026	Statement	","	2145:37:49342:49342	416974	16	True				
ANR	417027	Statement	m	2145:39:49344:49344	416974	17	True				
ANR	417028	Statement	)	2145:40:49345:49345	416974	18	True				
ANR	417029	Statement	)	2145:41:49346:49346	416974	19	True				
ANR	417030	ExpressionStatement	+ off	2145:43:49348:49353	416974	20	True				
ANR	417031	UnaryOperationExpression	+ off		416974	0					
ANR	417032	UnaryOperator	+		416974	0					
ANR	417033	Identifier	off		416974	1					
ANR	417034	IfStatement	if ( buf [ 0 ] != '\\0' )		416974	21					
ANR	417035	Condition	buf [ 0 ] != '\\0'	2147:5:49361:49374	416974	0	True				
ANR	417036	EqualityExpression	buf [ 0 ] != '\\0'		416974	0		!=			
ANR	417037	ArrayIndexing	buf [ 0 ]		416974	0					
ANR	417038	Identifier	buf		416974	0					
ANR	417039	PrimaryExpression	0		416974	1					
ANR	417040	PrimaryExpression	'\\0'		416974	1					
ANR	417041	CompoundStatement		7:21:181:181	416974	1					
ANR	417042	ExpressionStatement	len = nt ? strlen ( buf ) : len	2148:2:49381:49409	416974	0	True				
ANR	417043	AssignmentExpression	len = nt ? strlen ( buf ) : len		416974	0		=			
ANR	417044	Identifier	len		416974	0					
ANR	417045	ConditionalExpression	nt ? strlen ( buf ) : len		416974	1					
ANR	417046	Condition	nt		416974	0					
ANR	417047	Identifier	nt		416974	0					
ANR	417048	CallExpression	strlen ( buf )		416974	1					
ANR	417049	Callee	strlen		416974	0					
ANR	417050	Identifier	strlen		416974	0					
ANR	417051	ArgumentList	buf		416974	1					
ANR	417052	Argument	buf		416974	0					
ANR	417053	Identifier	buf		416974	0					
ANR	417054	Identifier	len		416974	2					
ANR	417055	Statement	file_magwarn	2149:2:49413:49424	416974	1	True				
ANR	417056	Statement	(	2149:14:49425:49425	416974	2	True				
ANR	417057	Statement	ms	2149:15:49426:49427	416974	3	True				
ANR	417058	Statement	","	2149:17:49428:49428	416974	4	True				
ANR	417059	Statement	"""Current entry already has a %s type """	2149:19:49430:49467	416974	5	True				
ANR	417060	Statement	"""`%.*s', new type `%s'"""	2150:6:49475:49497	416974	6	True				
ANR	417061	Statement	","	2150:29:49498:49498	416974	7	True				
ANR	417062	Statement	name	2150:31:49500:49503	416974	8	True				
ANR	417063	Statement	","	2150:35:49504:49504	416974	9	True				
ANR	417064	Statement	(	2150:37:49506:49506	416974	10	True				
ANR	417065	Statement	int	2150:38:49507:49509	416974	11	True				
ANR	417066	Statement	)	2150:41:49510:49510	416974	12	True				
ANR	417067	Statement	len	2150:42:49511:49513	416974	13	True				
ANR	417068	Statement	","	2150:45:49514:49514	416974	14	True				
ANR	417069	Statement	buf	2150:47:49516:49518	416974	15	True				
ANR	417070	Statement	","	2150:50:49519:49519	416974	16	True				
ANR	417071	Statement	l	2150:52:49521:49521	416974	17	True				
ANR	417072	Statement	)	2150:53:49522:49522	416974	18	True				
ANR	417073	ExpressionStatement		2150:54:49523:49523	416974	19	True				
ANR	417074	ReturnStatement	return - 1 ;	2151:2:49527:49536	416974	20	True				
ANR	417075	UnaryOperationExpression	- 1		416974	0					
ANR	417076	UnaryOperator	-		416974	0					
ANR	417077	PrimaryExpression	1		416974	1					
ANR	417078	IfStatement	if ( * m -> desc == '\\0' )		416974	22					
ANR	417079	Condition	* m -> desc == '\\0'	2154:5:49548:49563	416974	0	True				
ANR	417080	EqualityExpression	* m -> desc == '\\0'		416974	0		==			
ANR	417081	UnaryOperationExpression	* m -> desc		416974	0					
ANR	417082	UnaryOperator	*		416974	0					
ANR	417083	PtrMemberAccess	m -> desc		416974	1					
ANR	417084	Identifier	m		416974	0					
ANR	417085	Identifier	desc		416974	1					
ANR	417086	PrimaryExpression	'\\0'		416974	1					
ANR	417087	CompoundStatement		14:23:370:370	416974	1					
ANR	417088	Statement	file_magwarn	2155:2:49570:49581	416974	0	True				
ANR	417089	Statement	(	2155:14:49582:49582	416974	1	True				
ANR	417090	Statement	ms	2155:15:49583:49584	416974	2	True				
ANR	417091	Statement	","	2155:17:49585:49585	416974	3	True				
ANR	417092	Statement	"""Current entry does not yet have a """	2155:19:49587:49622	416974	4	True				
ANR	417093	Statement	"""description for adding a %s type"""	2156:6:49630:49663	416974	5	True				
ANR	417094	Statement	","	2156:40:49664:49664	416974	6	True				
ANR	417095	Statement	name	2156:42:49666:49669	416974	7	True				
ANR	417096	Statement	)	2156:46:49670:49670	416974	8	True				
ANR	417097	ExpressionStatement		2156:47:49671:49671	416974	9	True				
ANR	417098	ReturnStatement	return - 1 ;	2157:2:49675:49684	416974	10	True				
ANR	417099	UnaryOperationExpression	- 1		416974	0					
ANR	417100	UnaryOperator	-		416974	0					
ANR	417101	PrimaryExpression	1		416974	1					
ANR	417102	ExpressionStatement	EATAB	2160:1:49691:49696	416974	23	True				
ANR	417103	Identifier	EATAB		416974	0					
ANR	417104	ForStatement	"for ( i = 0 ; * l && i < len && goodchar ( * l , extra ) ; buf [ i ++ ] = * l ++ )"		416974	24					
ANR	417105	ForInit	i = 0 ;	2161:6:49704:49709	416974	0	True				
ANR	417106	AssignmentExpression	i = 0		416974	0		=			
ANR	417107	Identifier	i		416974	0					
ANR	417108	PrimaryExpression	0		416974	1					
ANR	417109	Condition	"* l && i < len && goodchar ( * l , extra )"	2161:13:49711:49746	416974	1	True				
ANR	417110	AndExpression	"* l && i < len && goodchar ( * l , extra )"		416974	0		&&			
ANR	417111	UnaryOperationExpression	* l		416974	0					
ANR	417112	UnaryOperator	*		416974	0					
ANR	417113	Identifier	l		416974	1					
ANR	417114	AndExpression	"i < len && goodchar ( * l , extra )"		416974	1		&&			
ANR	417115	RelationalExpression	i < len		416974	0		<			
ANR	417116	Identifier	i		416974	0					
ANR	417117	Identifier	len		416974	1					
ANR	417118	CallExpression	"goodchar ( * l , extra )"		416974	1					
ANR	417119	Callee	goodchar		416974	0					
ANR	417120	Identifier	goodchar		416974	0					
ANR	417121	ArgumentList	* l		416974	1					
ANR	417122	Argument	* l		416974	0					
ANR	417123	UnaryOperationExpression	* l		416974	0					
ANR	417124	UnaryOperator	*		416974	0					
ANR	417125	Identifier	l		416974	1					
ANR	417126	Argument	extra		416974	1					
ANR	417127	Identifier	extra		416974	0					
ANR	417128	AssignmentExpression	buf [ i ++ ] = * l ++	2161:51:49749:49763	416974	2	True	=			
ANR	417129	ArrayIndexing	buf [ i ++ ]		416974	0					
ANR	417130	Identifier	buf		416974	0					
ANR	417131	PostIncDecOperationExpression	i ++		416974	1					
ANR	417132	Identifier	i		416974	0					
ANR	417133	IncDec	++		416974	1					
ANR	417134	UnaryOperationExpression	* l ++		416974	1					
ANR	417135	UnaryOperator	*		416974	0					
ANR	417136	PostIncDecOperationExpression	l ++		416974	1					
ANR	417137	Identifier	l		416974	0					
ANR	417138	IncDec	++		416974	1					
ANR	417139	ContinueStatement	continue ;	2162:2:49768:49776	416974	3	True				
ANR	417140	IfStatement	if ( i == len && * l )		416974	25					
ANR	417141	Condition	i == len && * l	2164:5:49784:49797	416974	0	True				
ANR	417142	AndExpression	i == len && * l		416974	0		&&			
ANR	417143	EqualityExpression	i == len		416974	0		==			
ANR	417144	Identifier	i		416974	0					
ANR	417145	Identifier	len		416974	1					
ANR	417146	UnaryOperationExpression	* l		416974	1					
ANR	417147	UnaryOperator	*		416974	0					
ANR	417148	Identifier	l		416974	1					
ANR	417149	CompoundStatement		24:21:604:604	416974	1					
ANR	417150	IfStatement	if ( nt )		416974	0					
ANR	417151	Condition	nt	2165:6:49808:49809	416974	0	True				
ANR	417152	Identifier	nt		416974	0					
ANR	417153	ExpressionStatement	buf [ len - 1 ] = '\\0'	2166:3:49815:49834	416974	1	True				
ANR	417154	AssignmentExpression	buf [ len - 1 ] = '\\0'		416974	0		=			
ANR	417155	ArrayIndexing	buf [ len - 1 ]		416974	0					
ANR	417156	Identifier	buf		416974	0					
ANR	417157	AdditiveExpression	len - 1		416974	1		-			
ANR	417158	Identifier	len		416974	0					
ANR	417159	PrimaryExpression	1		416974	1					
ANR	417160	PrimaryExpression	'\\0'		416974	1					
ANR	417161	IfStatement	if ( ms -> flags & MAGIC_CHECK )		416974	1					
ANR	417162	Condition	ms -> flags & MAGIC_CHECK	2167:6:49842:49864	416974	0	True				
ANR	417163	BitAndExpression	ms -> flags & MAGIC_CHECK		416974	0		&			
ANR	417164	PtrMemberAccess	ms -> flags		416974	0					
ANR	417165	Identifier	ms		416974	0					
ANR	417166	Identifier	flags		416974	1					
ANR	417167	Identifier	MAGIC_CHECK		416974	1					
ANR	417168	Statement	file_magwarn	2168:3:49870:49881	416974	1	True				
ANR	417169	Statement	(	2168:15:49882:49882	416974	2	True				
ANR	417170	Statement	ms	2168:16:49883:49884	416974	3	True				
ANR	417171	Statement	","	2168:18:49885:49885	416974	4	True				
ANR	417172	Statement	"""%s type `%s' truncated %"""	2168:20:49887:49912	416974	5	True				
ANR	417173	Statement	SIZE_T_FORMAT	2169:7:49921:49933	416974	6	True				
ANR	417174	Statement	"""u"""	2169:21:49935:49937	416974	7	True				
ANR	417175	Statement	","	2169:24:49938:49938	416974	8	True				
ANR	417176	Statement	name	2169:26:49940:49943	416974	9	True				
ANR	417177	Statement	","	2169:30:49944:49944	416974	10	True				
ANR	417178	Statement	line	2169:32:49946:49949	416974	11	True				
ANR	417179	Statement	","	2169:36:49950:49950	416974	12	True				
ANR	417180	Statement	i	2169:38:49952:49952	416974	13	True				
ANR	417181	Statement	)	2169:39:49953:49953	416974	14	True				
ANR	417182	ExpressionStatement		2169:40:49954:49954	416974	15	True				
ANR	417183	ElseStatement	else		416974	0					
ANR	417184	CompoundStatement		30:8:768:768	416974	0					
ANR	417185	IfStatement	"if ( ! isspace ( ( unsigned char ) * l ) && ! goodchar ( * l , extra ) )"		416974	0					
ANR	417186	Condition	"! isspace ( ( unsigned char ) * l ) && ! goodchar ( * l , extra )"	2171:6:49972:50022	416974	0	True				
ANR	417187	AndExpression	"! isspace ( ( unsigned char ) * l ) && ! goodchar ( * l , extra )"		416974	0		&&			
ANR	417188	UnaryOperationExpression	! isspace ( ( unsigned char ) * l )		416974	0					
ANR	417189	UnaryOperator	!		416974	0					
ANR	417190	CallExpression	isspace ( ( unsigned char ) * l )		416974	1					
ANR	417191	Callee	isspace		416974	0					
ANR	417192	Identifier	isspace		416974	0					
ANR	417193	ArgumentList	( unsigned char ) * l		416974	1					
ANR	417194	Argument	( unsigned char ) * l		416974	0					
ANR	417195	CastExpression	( unsigned char ) * l		416974	0					
ANR	417196	CastTarget	unsigned char		416974	0					
ANR	417197	UnaryOperationExpression	* l		416974	1					
ANR	417198	UnaryOperator	*		416974	0					
ANR	417199	Identifier	l		416974	1					
ANR	417200	UnaryOperationExpression	"! goodchar ( * l , extra )"		416974	1					
ANR	417201	UnaryOperator	!		416974	0					
ANR	417202	CallExpression	"goodchar ( * l , extra )"		416974	1					
ANR	417203	Callee	goodchar		416974	0					
ANR	417204	Identifier	goodchar		416974	0					
ANR	417205	ArgumentList	* l		416974	1					
ANR	417206	Argument	* l		416974	0					
ANR	417207	UnaryOperationExpression	* l		416974	0					
ANR	417208	UnaryOperator	*		416974	0					
ANR	417209	Identifier	l		416974	1					
ANR	417210	Argument	extra		416974	1					
ANR	417211	Identifier	extra		416974	0					
ANR	417212	ExpressionStatement	"file_magwarn ( ms , ""%s type `%s' has bad char '%c'"" , name , line , * l )"	2172:3:50028:50101	416974	1	True				
ANR	417213	CallExpression	"file_magwarn ( ms , ""%s type `%s' has bad char '%c'"" , name , line , * l )"		416974	0					
ANR	417214	Callee	file_magwarn		416974	0					
ANR	417215	Identifier	file_magwarn		416974	0					
ANR	417216	ArgumentList	ms		416974	1					
ANR	417217	Argument	ms		416974	0					
ANR	417218	Identifier	ms		416974	0					
ANR	417219	Argument	"""%s type `%s' has bad char '%c'"""		416974	1					
ANR	417220	PrimaryExpression	"""%s type `%s' has bad char '%c'"""		416974	0					
ANR	417221	Argument	name		416974	2					
ANR	417222	Identifier	name		416974	0					
ANR	417223	Argument	line		416974	3					
ANR	417224	Identifier	line		416974	0					
ANR	417225	Argument	* l		416974	4					
ANR	417226	UnaryOperationExpression	* l		416974	0					
ANR	417227	UnaryOperator	*		416974	0					
ANR	417228	Identifier	l		416974	1					
ANR	417229	IfStatement	if ( nt )		416974	1					
ANR	417230	Condition	nt	2174:6:50109:50110	416974	0	True				
ANR	417231	Identifier	nt		416974	0					
ANR	417232	ExpressionStatement	buf [ i ] = '\\0'	2175:3:50116:50129	416974	1	True				
ANR	417233	AssignmentExpression	buf [ i ] = '\\0'		416974	0		=			
ANR	417234	ArrayIndexing	buf [ i ]		416974	0					
ANR	417235	Identifier	buf		416974	0					
ANR	417236	Identifier	i		416974	1					
ANR	417237	PrimaryExpression	'\\0'		416974	1					
ANR	417238	IfStatement	if ( i > 0 )		416974	26					
ANR	417239	Condition	i > 0	2178:5:50140:50144	416974	0	True				
ANR	417240	RelationalExpression	i > 0		416974	0		>			
ANR	417241	Identifier	i		416974	0					
ANR	417242	PrimaryExpression	0		416974	1					
ANR	417243	ReturnStatement	return 0 ;	2179:2:50149:50157	416974	1	True				
ANR	417244	PrimaryExpression	0		416974	0					
ANR	417245	ExpressionStatement	"file_magerror ( ms , ""Bad magic entry '%s'"" , line )"	2181:1:50161:50208	416974	27	True				
ANR	417246	CallExpression	"file_magerror ( ms , ""Bad magic entry '%s'"" , line )"		416974	0					
ANR	417247	Callee	file_magerror		416974	0					
ANR	417248	Identifier	file_magerror		416974	0					
ANR	417249	ArgumentList	ms		416974	1					
ANR	417250	Argument	ms		416974	0					
ANR	417251	Identifier	ms		416974	0					
ANR	417252	Argument	"""Bad magic entry '%s'"""		416974	1					
ANR	417253	PrimaryExpression	"""Bad magic entry '%s'"""		416974	0					
ANR	417254	Argument	line		416974	2					
ANR	417255	Identifier	line		416974	0					
ANR	417256	ReturnStatement	return - 1 ;	2182:1:50211:50220	416974	28	True				
ANR	417257	UnaryOperationExpression	- 1		416974	0					
ANR	417258	UnaryOperator	-		416974	0					
ANR	417259	PrimaryExpression	1		416974	1					
ANR	417260	ReturnType	int		416974	1					
ANR	417261	Identifier	parse_extra		416974	2					
ANR	417262	ParameterList	"struct magic_set * ms , struct magic_entry * me , const char * line , zend_off_t off , size_t len , const char * name , const char * extra , int nt"		416974	3					
ANR	417263	Parameter	struct magic_set * ms	2139:12:49054:49073	416974	0	True				
ANR	417264	ParameterType	struct magic_set *		416974	0					
ANR	417265	Identifier	ms		416974	1					
ANR	417266	Parameter	struct magic_entry * me	2139:34:49076:49097	416974	1	True				
ANR	417267	ParameterType	struct magic_entry *		416974	0					
ANR	417268	Identifier	me		416974	1					
ANR	417269	Parameter	const char * line	2139:58:49100:49115	416974	2	True				
ANR	417270	ParameterType	const char *		416974	0					
ANR	417271	Identifier	line		416974	1					
ANR	417272	Parameter	zend_off_t off	2140:4:49122:49135	416974	3	True				
ANR	417273	ParameterType	zend_off_t		416974	0					
ANR	417274	Identifier	off		416974	1					
ANR	417275	Parameter	size_t len	2140:20:49138:49147	416974	4	True				
ANR	417276	ParameterType	size_t		416974	0					
ANR	417277	Identifier	len		416974	1					
ANR	417278	Parameter	const char * name	2140:32:49150:49165	416974	5	True				
ANR	417279	ParameterType	const char *		416974	0					
ANR	417280	Identifier	name		416974	1					
ANR	417281	Parameter	const char * extra	2140:50:49168:49184	416974	6	True				
ANR	417282	ParameterType	const char *		416974	0					
ANR	417283	Identifier	extra		416974	1					
ANR	417284	Parameter	int nt	2140:69:49187:49192	416974	7	True				
ANR	417285	ParameterType	int		416974	0					
ANR	417286	Identifier	nt		416974	1					
ANR	417287	CFGEntryNode	ENTRY		416974		True				
ANR	417288	CFGExitNode	EXIT		416974		True				
ANR	417289	Symbol	* m -> desc		416974						
ANR	417290	Symbol	line		416974						
ANR	417291	Symbol	nt		416974						
ANR	417292	Symbol	me -> mp		416974						
ANR	417293	Symbol	* ms		416974						
ANR	417294	Symbol	strlen		416974						
ANR	417295	Symbol	m -> desc		416974						
ANR	417296	Symbol	len		416974						
ANR	417297	Symbol	goodchar		416974						
ANR	417298	Symbol	extra		416974						
ANR	417299	Symbol	me		416974						
ANR	417300	Symbol	* me		416974						
ANR	417301	Symbol	* * m		416974						
ANR	417302	Symbol	* buf		416974						
ANR	417303	Symbol	ms		416974						
ANR	417304	Symbol	isspace		416974						
ANR	417305	Symbol	i		416974						
ANR	417306	Symbol	* l ++		416974						
ANR	417307	Symbol	l		416974						
ANR	417308	Symbol	m		416974						
ANR	417309	Symbol	off		416974						
ANR	417310	Symbol	buf		416974						
ANR	417311	Symbol	* i		416974						
ANR	417312	Symbol	* l		416974						
ANR	417313	Symbol	* m		416974						
ANR	417314	Symbol	name		416974						
ANR	417315	Symbol	MAGIC_CHECK		416974						
ANR	417316	Symbol	ms -> flags		416974						
ANR	417317	Symbol	me -> cont_count		416974						
ANR	417318	Symbol	* len		416974						
ANR	417319	Function	parse_apple	2189:8:50334:50576							
ANR	417320	FunctionDef	"parse_apple (struct magic_set * ms , struct magic_entry * me , const char * line)"		417319	0					
ANR	417321	CompoundStatement		2191:0:50414:50576	417319	0					
ANR	417322	IdentifierDeclStatement	struct magic * m = & me -> mp [ 0 ] ;	2192:1:50417:50445	417319	0	True				
ANR	417323	IdentifierDecl	* m = & me -> mp [ 0 ]		417319	0					
ANR	417324	IdentifierDeclType	struct magic *		417319	0					
ANR	417325	Identifier	m		417319	1					
ANR	417326	AssignmentExpression	* m = & me -> mp [ 0 ]		417319	2		=			
ANR	417327	Identifier	m		417319	0					
ANR	417328	UnaryOperationExpression	& me -> mp [ 0 ]		417319	1					
ANR	417329	UnaryOperator	&		417319	0					
ANR	417330	ArrayIndexing	me -> mp [ 0 ]		417319	1					
ANR	417331	PtrMemberAccess	me -> mp		417319	0					
ANR	417332	Identifier	me		417319	0					
ANR	417333	Identifier	mp		417319	1					
ANR	417334	PrimaryExpression	0		417319	1					
ANR	417335	Statement	return	2194:1:50449:50454	417319	1	True				
ANR	417336	Statement	parse_extra	2194:8:50456:50466	417319	2	True				
ANR	417337	Statement	(	2194:19:50467:50467	417319	3	True				
ANR	417338	Statement	ms	2194:20:50468:50469	417319	4	True				
ANR	417339	Statement	","	2194:22:50470:50470	417319	5	True				
ANR	417340	Statement	me	2194:24:50472:50473	417319	6	True				
ANR	417341	Statement	","	2194:26:50474:50474	417319	7	True				
ANR	417342	Statement	line	2194:28:50476:50479	417319	8	True				
ANR	417343	Statement	","	2194:32:50480:50480	417319	9	True				
ANR	417344	Statement	CAST	2195:5:50487:50490	417319	10	True				
ANR	417345	Statement	(	2195:9:50491:50491	417319	11	True				
ANR	417346	Statement	off_t	2195:10:50492:50496	417319	12	True				
ANR	417347	Statement	","	2195:15:50497:50497	417319	13	True				
ANR	417348	Statement	offsetof	2195:17:50499:50506	417319	14	True				
ANR	417349	Statement	(	2195:25:50507:50507	417319	15	True				
ANR	417350	Statement	struct	2195:26:50508:50513	417319	16	True				
ANR	417351	Statement	magic	2195:33:50515:50519	417319	17	True				
ANR	417352	Statement	","	2195:38:50520:50520	417319	18	True				
ANR	417353	Statement	apple	2195:40:50522:50526	417319	19	True				
ANR	417354	Statement	)	2195:45:50527:50527	417319	20	True				
ANR	417355	Statement	)	2195:46:50528:50528	417319	21	True				
ANR	417356	Statement	","	2195:47:50529:50529	417319	22	True				
ANR	417357	Statement	sizeof	2196:5:50536:50541	417319	23	True				
ANR	417358	Statement	(	2196:11:50542:50542	417319	24	True				
ANR	417359	Statement	m	2196:12:50543:50543	417319	25	True				
ANR	417360	Statement	->	2196:13:50544:50545	417319	26	True				
ANR	417361	Statement	apple	2196:15:50546:50550	417319	27	True				
ANR	417362	Statement	)	2196:20:50551:50551	417319	28	True				
ANR	417363	Statement	","	2196:21:50552:50552	417319	29	True				
ANR	417364	Statement	"""APPLE"""	2196:23:50554:50560	417319	30	True				
ANR	417365	Statement	","	2196:30:50561:50561	417319	31	True				
ANR	417366	Statement	"""!+-./"""	2196:32:50563:50569	417319	32	True				
ANR	417367	Statement	","	2196:39:50570:50570	417319	33	True				
ANR	417368	Statement	0	2196:41:50572:50572	417319	34	True				
ANR	417369	Statement	)	2196:42:50573:50573	417319	35	True				
ANR	417370	ExpressionStatement		2196:43:50574:50574	417319	36	True				
ANR	417371	ReturnType	int		417319	1					
ANR	417372	Identifier	parse_apple		417319	2					
ANR	417373	ParameterList	"struct magic_set * ms , struct magic_entry * me , const char * line"		417319	3					
ANR	417374	Parameter	struct magic_set * ms	2190:12:50350:50369	417319	0	True				
ANR	417375	ParameterType	struct magic_set *		417319	0					
ANR	417376	Identifier	ms		417319	1					
ANR	417377	Parameter	struct magic_entry * me	2190:34:50372:50393	417319	1	True				
ANR	417378	ParameterType	struct magic_entry *		417319	0					
ANR	417379	Identifier	me		417319	1					
ANR	417380	Parameter	const char * line	2190:58:50396:50411	417319	2	True				
ANR	417381	ParameterType	const char *		417319	0					
ANR	417382	Identifier	line		417319	1					
ANR	417383	CFGEntryNode	ENTRY		417319		True				
ANR	417384	CFGExitNode	EXIT		417319		True				
ANR	417385	Symbol	ms		417319						
ANR	417386	Symbol	line		417319						
ANR	417387	Symbol	me		417319						
ANR	417388	Symbol	* me		417319						
ANR	417389	Symbol	m		417319						
ANR	417390	Symbol	me -> mp		417319						
ANR	417391	Function	parse_mime	2203:8:50681:50931							
ANR	417392	FunctionDef	"parse_mime (struct magic_set * ms , struct magic_entry * me , const char * line)"		417391	0					
ANR	417393	CompoundStatement		2205:0:50760:50931	417391	0					
ANR	417394	IdentifierDeclStatement	struct magic * m = & me -> mp [ 0 ] ;	2206:1:50763:50791	417391	0	True				
ANR	417395	IdentifierDecl	* m = & me -> mp [ 0 ]		417391	0					
ANR	417396	IdentifierDeclType	struct magic *		417391	0					
ANR	417397	Identifier	m		417391	1					
ANR	417398	AssignmentExpression	* m = & me -> mp [ 0 ]		417391	2		=			
ANR	417399	Identifier	m		417391	0					
ANR	417400	UnaryOperationExpression	& me -> mp [ 0 ]		417391	1					
ANR	417401	UnaryOperator	&		417391	0					
ANR	417402	ArrayIndexing	me -> mp [ 0 ]		417391	1					
ANR	417403	PtrMemberAccess	me -> mp		417391	0					
ANR	417404	Identifier	me		417391	0					
ANR	417405	Identifier	mp		417391	1					
ANR	417406	PrimaryExpression	0		417391	1					
ANR	417407	Statement	return	2208:1:50795:50800	417391	1	True				
ANR	417408	Statement	parse_extra	2208:8:50802:50812	417391	2	True				
ANR	417409	Statement	(	2208:19:50813:50813	417391	3	True				
ANR	417410	Statement	ms	2208:20:50814:50815	417391	4	True				
ANR	417411	Statement	","	2208:22:50816:50816	417391	5	True				
ANR	417412	Statement	me	2208:24:50818:50819	417391	6	True				
ANR	417413	Statement	","	2208:26:50820:50820	417391	7	True				
ANR	417414	Statement	line	2208:28:50822:50825	417391	8	True				
ANR	417415	Statement	","	2208:32:50826:50826	417391	9	True				
ANR	417416	Statement	CAST	2209:5:50833:50836	417391	10	True				
ANR	417417	Statement	(	2209:9:50837:50837	417391	11	True				
ANR	417418	Statement	zend_off_t	2209:10:50838:50847	417391	12	True				
ANR	417419	Statement	","	2209:20:50848:50848	417391	13	True				
ANR	417420	Statement	offsetof	2209:22:50850:50857	417391	14	True				
ANR	417421	Statement	(	2209:30:50858:50858	417391	15	True				
ANR	417422	Statement	struct	2209:31:50859:50864	417391	16	True				
ANR	417423	Statement	magic	2209:38:50866:50870	417391	17	True				
ANR	417424	Statement	","	2209:43:50871:50871	417391	18	True				
ANR	417425	Statement	mimetype	2209:45:50873:50880	417391	19	True				
ANR	417426	Statement	)	2209:53:50881:50881	417391	20	True				
ANR	417427	Statement	)	2209:54:50882:50882	417391	21	True				
ANR	417428	Statement	","	2209:55:50883:50883	417391	22	True				
ANR	417429	Statement	sizeof	2210:5:50890:50895	417391	23	True				
ANR	417430	Statement	(	2210:11:50896:50896	417391	24	True				
ANR	417431	Statement	m	2210:12:50897:50897	417391	25	True				
ANR	417432	Statement	->	2210:13:50898:50899	417391	26	True				
ANR	417433	Statement	mimetype	2210:15:50900:50907	417391	27	True				
ANR	417434	Statement	)	2210:23:50908:50908	417391	28	True				
ANR	417435	Statement	","	2210:24:50909:50909	417391	29	True				
ANR	417436	Statement	"""MIME"""	2210:26:50911:50916	417391	30	True				
ANR	417437	Statement	","	2210:32:50917:50917	417391	31	True				
ANR	417438	Statement	"""+-/."""	2210:34:50919:50924	417391	32	True				
ANR	417439	Statement	","	2210:40:50925:50925	417391	33	True				
ANR	417440	Statement	1	2210:42:50927:50927	417391	34	True				
ANR	417441	Statement	)	2210:43:50928:50928	417391	35	True				
ANR	417442	ExpressionStatement		2210:44:50929:50929	417391	36	True				
ANR	417443	ReturnType	int		417391	1					
ANR	417444	Identifier	parse_mime		417391	2					
ANR	417445	ParameterList	"struct magic_set * ms , struct magic_entry * me , const char * line"		417391	3					
ANR	417446	Parameter	struct magic_set * ms	2204:11:50696:50715	417391	0	True				
ANR	417447	ParameterType	struct magic_set *		417391	0					
ANR	417448	Identifier	ms		417391	1					
ANR	417449	Parameter	struct magic_entry * me	2204:33:50718:50739	417391	1	True				
ANR	417450	ParameterType	struct magic_entry *		417391	0					
ANR	417451	Identifier	me		417391	1					
ANR	417452	Parameter	const char * line	2204:57:50742:50757	417391	2	True				
ANR	417453	ParameterType	const char *		417391	0					
ANR	417454	Identifier	line		417391	1					
ANR	417455	CFGEntryNode	ENTRY		417391		True				
ANR	417456	CFGExitNode	EXIT		417391		True				
ANR	417457	Symbol	ms		417391						
ANR	417458	Symbol	line		417391						
ANR	417459	Symbol	me		417391						
ANR	417460	Symbol	* me		417391						
ANR	417461	Symbol	m		417391						
ANR	417462	Symbol	me -> mp		417391						
ANR	417463	Function	check_format_type	2213:8:50942:53608							
ANR	417464	FunctionDef	"check_format_type (const char * ptr , int type)"		417463	0					
ANR	417465	CompoundStatement		2215:0:50991:53608	417463	0					
ANR	417466	IdentifierDeclStatement	"int quad = 0 , h ;"	2216:1:50994:51009	417463	0	True				
ANR	417467	IdentifierDecl	quad = 0		417463	0					
ANR	417468	IdentifierDeclType	int		417463	0					
ANR	417469	Identifier	quad		417463	1					
ANR	417470	AssignmentExpression	quad = 0		417463	2		=			
ANR	417471	Identifier	quad		417463	0					
ANR	417472	PrimaryExpression	0		417463	1					
ANR	417473	IdentifierDecl	h		417463	1					
ANR	417474	IdentifierDeclType	int		417463	0					
ANR	417475	Identifier	h		417463	1					
ANR	417476	IfStatement	if ( * ptr == '\\0' )		417463	1					
ANR	417477	Condition	* ptr == '\\0'	2217:5:51016:51027	417463	0	True				
ANR	417478	EqualityExpression	* ptr == '\\0'		417463	0		==			
ANR	417479	UnaryOperationExpression	* ptr		417463	0					
ANR	417480	UnaryOperator	*		417463	0					
ANR	417481	Identifier	ptr		417463	1					
ANR	417482	PrimaryExpression	'\\0'		417463	1					
ANR	417483	CompoundStatement		3:19:38:38	417463	1					
ANR	417484	ReturnStatement	return - 1 ;	2219:2:51069:51078	417463	0	True				
ANR	417485	UnaryOperationExpression	- 1		417463	0					
ANR	417486	UnaryOperator	-		417463	0					
ANR	417487	PrimaryExpression	1		417463	1					
ANR	417488	SwitchStatement	switch ( file_formats [ type ] )		417463	2					
ANR	417489	Condition	file_formats [ type ]	2222:9:51093:51110	417463	0	True				
ANR	417490	ArrayIndexing	file_formats [ type ]		417463	0					
ANR	417491	Identifier	file_formats		417463	0					
ANR	417492	Identifier	type		417463	1					
ANR	417493	CompoundStatement		8:29:121:121	417463	1					
ANR	417494	Label	case FILE_FMT_QUAD :	2223:1:51116:51134	417463	0	True				
ANR	417495	Identifier	FILE_FMT_QUAD		417463	0					
ANR	417496	ExpressionStatement	quad = 1	2224:2:51138:51146	417463	1	True				
ANR	417497	AssignmentExpression	quad = 1		417463	0		=			
ANR	417498	Identifier	quad		417463	0					
ANR	417499	PrimaryExpression	1		417463	1					
ANR	417500	Label	case FILE_FMT_NUM :	2226:1:51167:51184	417463	2	True				
ANR	417501	Identifier	FILE_FMT_NUM		417463	0					
ANR	417502	IfStatement	if ( quad == 0 )		417463	3					
ANR	417503	Condition	quad == 0	2227:6:51192:51200	417463	0	True				
ANR	417504	EqualityExpression	quad == 0		417463	0		==			
ANR	417505	Identifier	quad		417463	0					
ANR	417506	PrimaryExpression	0		417463	1					
ANR	417507	CompoundStatement		13:17:211:211	417463	1					
ANR	417508	SwitchStatement	switch ( type )		417463	0					
ANR	417509	Condition	type	2228:11:51216:51219	417463	0	True				
ANR	417510	Identifier	type		417463	0					
ANR	417511	CompoundStatement		14:17:230:230	417463	1					
ANR	417512	Label	case FILE_BYTE :	2229:3:51227:51241	417463	0	True				
ANR	417513	Identifier	FILE_BYTE		417463	0					
ANR	417514	ExpressionStatement	h = 2	2230:4:51247:51252	417463	1	True				
ANR	417515	AssignmentExpression	h = 2		417463	0		=			
ANR	417516	Identifier	h		417463	0					
ANR	417517	PrimaryExpression	2		417463	1					
ANR	417518	BreakStatement	break ;	2231:4:51258:51263	417463	2	True				
ANR	417519	Label	case FILE_SHORT :	2232:3:51268:51283	417463	3	True				
ANR	417520	Identifier	FILE_SHORT		417463	0					
ANR	417521	Label	case FILE_BESHORT :	2233:3:51288:51305	417463	4	True				
ANR	417522	Identifier	FILE_BESHORT		417463	0					
ANR	417523	Label	case FILE_LESHORT :	2234:3:51310:51327	417463	5	True				
ANR	417524	Identifier	FILE_LESHORT		417463	0					
ANR	417525	ExpressionStatement	h = 1	2235:4:51333:51338	417463	6	True				
ANR	417526	AssignmentExpression	h = 1		417463	0		=			
ANR	417527	Identifier	h		417463	0					
ANR	417528	PrimaryExpression	1		417463	1					
ANR	417529	BreakStatement	break ;	2236:4:51344:51349	417463	7	True				
ANR	417530	Label	case FILE_LONG :	2237:3:51354:51368	417463	8	True				
ANR	417531	Identifier	FILE_LONG		417463	0					
ANR	417532	Label	case FILE_BELONG :	2238:3:51373:51389	417463	9	True				
ANR	417533	Identifier	FILE_BELONG		417463	0					
ANR	417534	Label	case FILE_LELONG :	2239:3:51394:51410	417463	10	True				
ANR	417535	Identifier	FILE_LELONG		417463	0					
ANR	417536	Label	case FILE_MELONG :	2240:3:51415:51431	417463	11	True				
ANR	417537	Identifier	FILE_MELONG		417463	0					
ANR	417538	Label	case FILE_LEID3 :	2241:3:51436:51451	417463	12	True				
ANR	417539	Identifier	FILE_LEID3		417463	0					
ANR	417540	Label	case FILE_BEID3 :	2242:3:51456:51471	417463	13	True				
ANR	417541	Identifier	FILE_BEID3		417463	0					
ANR	417542	Label	case FILE_INDIRECT :	2243:3:51476:51494	417463	14	True				
ANR	417543	Identifier	FILE_INDIRECT		417463	0					
ANR	417544	ExpressionStatement	h = 0	2244:4:51500:51505	417463	15	True				
ANR	417545	AssignmentExpression	h = 0		417463	0		=			
ANR	417546	Identifier	h		417463	0					
ANR	417547	PrimaryExpression	0		417463	1					
ANR	417548	BreakStatement	break ;	2245:4:51511:51516	417463	16	True				
ANR	417549	Label	default :	2246:3:51521:51528	417463	17	True				
ANR	417550	Identifier	default		417463	0					
ANR	417551	ExpressionStatement	abort ( )	2247:4:51534:51541	417463	18	True				
ANR	417552	CallExpression	abort ( )		417463	0					
ANR	417553	Callee	abort		417463	0					
ANR	417554	Identifier	abort		417463	0					
ANR	417555	ArgumentList			417463	1					
ANR	417556	ElseStatement	else		417463	0					
ANR	417557	ExpressionStatement	h = 0	2250:3:51560:51565	417463	0	True				
ANR	417558	AssignmentExpression	h = 0		417463	0		=			
ANR	417559	Identifier	h		417463	0					
ANR	417560	PrimaryExpression	0		417463	1					
ANR	417561	IfStatement	if ( * ptr == '-' )		417463	4					
ANR	417562	Condition	* ptr == '-'	2251:6:51573:51583	417463	0	True				
ANR	417563	EqualityExpression	* ptr == '-'		417463	0		==			
ANR	417564	UnaryOperationExpression	* ptr		417463	0					
ANR	417565	UnaryOperator	*		417463	0					
ANR	417566	Identifier	ptr		417463	1					
ANR	417567	PrimaryExpression	'-'		417463	1					
ANR	417568	ExpressionStatement	ptr ++	2252:3:51589:51594	417463	1	True				
ANR	417569	PostIncDecOperationExpression	ptr ++		417463	0					
ANR	417570	Identifier	ptr		417463	0					
ANR	417571	IncDec	++		417463	1					
ANR	417572	IfStatement	if ( * ptr == '.' )		417463	5					
ANR	417573	Condition	* ptr == '.'	2253:6:51602:51612	417463	0	True				
ANR	417574	EqualityExpression	* ptr == '.'		417463	0		==			
ANR	417575	UnaryOperationExpression	* ptr		417463	0					
ANR	417576	UnaryOperator	*		417463	0					
ANR	417577	Identifier	ptr		417463	1					
ANR	417578	PrimaryExpression	'.'		417463	1					
ANR	417579	ExpressionStatement	ptr ++	2254:3:51618:51623	417463	1	True				
ANR	417580	PostIncDecOperationExpression	ptr ++		417463	0					
ANR	417581	Identifier	ptr		417463	0					
ANR	417582	IncDec	++		417463	1					
ANR	417583	WhileStatement	while ( isdigit ( ( unsigned char ) * ptr ) )		417463	6					
ANR	417584	Condition	isdigit ( ( unsigned char ) * ptr )	2255:9:51634:51661	417463	0	True				
ANR	417585	CallExpression	isdigit ( ( unsigned char ) * ptr )		417463	0					
ANR	417586	Callee	isdigit		417463	0					
ANR	417587	Identifier	isdigit		417463	0					
ANR	417588	ArgumentList	( unsigned char ) * ptr		417463	1					
ANR	417589	Argument	( unsigned char ) * ptr		417463	0					
ANR	417590	CastExpression	( unsigned char ) * ptr		417463	0					
ANR	417591	CastTarget	unsigned char		417463	0					
ANR	417592	UnaryOperationExpression	* ptr		417463	1					
ANR	417593	UnaryOperator	*		417463	0					
ANR	417594	Identifier	ptr		417463	1					
ANR	417595	ExpressionStatement	ptr ++	2255:39:51664:51669	417463	1	True				
ANR	417596	PostIncDecOperationExpression	ptr ++		417463	0					
ANR	417597	Identifier	ptr		417463	0					
ANR	417598	IncDec	++		417463	1					
ANR	417599	IfStatement	if ( * ptr == '.' )		417463	7					
ANR	417600	Condition	* ptr == '.'	2256:6:51677:51687	417463	0	True				
ANR	417601	EqualityExpression	* ptr == '.'		417463	0		==			
ANR	417602	UnaryOperationExpression	* ptr		417463	0					
ANR	417603	UnaryOperator	*		417463	0					
ANR	417604	Identifier	ptr		417463	1					
ANR	417605	PrimaryExpression	'.'		417463	1					
ANR	417606	ExpressionStatement	ptr ++	2257:3:51693:51698	417463	1	True				
ANR	417607	PostIncDecOperationExpression	ptr ++		417463	0					
ANR	417608	Identifier	ptr		417463	0					
ANR	417609	IncDec	++		417463	1					
ANR	417610	WhileStatement	while ( isdigit ( ( unsigned char ) * ptr ) )		417463	8					
ANR	417611	Condition	isdigit ( ( unsigned char ) * ptr )	2258:9:51709:51736	417463	0	True				
ANR	417612	CallExpression	isdigit ( ( unsigned char ) * ptr )		417463	0					
ANR	417613	Callee	isdigit		417463	0					
ANR	417614	Identifier	isdigit		417463	0					
ANR	417615	ArgumentList	( unsigned char ) * ptr		417463	1					
ANR	417616	Argument	( unsigned char ) * ptr		417463	0					
ANR	417617	CastExpression	( unsigned char ) * ptr		417463	0					
ANR	417618	CastTarget	unsigned char		417463	0					
ANR	417619	UnaryOperationExpression	* ptr		417463	1					
ANR	417620	UnaryOperator	*		417463	0					
ANR	417621	Identifier	ptr		417463	1					
ANR	417622	ExpressionStatement	ptr ++	2258:39:51739:51744	417463	1	True				
ANR	417623	PostIncDecOperationExpression	ptr ++		417463	0					
ANR	417624	Identifier	ptr		417463	0					
ANR	417625	IncDec	++		417463	1					
ANR	417626	IfStatement	if ( quad )		417463	9					
ANR	417627	Condition	quad	2259:6:51752:51755	417463	0	True				
ANR	417628	Identifier	quad		417463	0					
ANR	417629	CompoundStatement		45:12:766:766	417463	1					
ANR	417630	IfStatement	if ( * ptr ++ != 'l' )		417463	0					
ANR	417631	Condition	* ptr ++ != 'l'	2260:7:51767:51779	417463	0	True				
ANR	417632	EqualityExpression	* ptr ++ != 'l'		417463	0		!=			
ANR	417633	UnaryOperationExpression	* ptr ++		417463	0					
ANR	417634	UnaryOperator	*		417463	0					
ANR	417635	PostIncDecOperationExpression	ptr ++		417463	1					
ANR	417636	Identifier	ptr		417463	0					
ANR	417637	IncDec	++		417463	1					
ANR	417638	PrimaryExpression	'l'		417463	1					
ANR	417639	ReturnStatement	return - 1 ;	2261:4:51786:51795	417463	1	True				
ANR	417640	UnaryOperationExpression	- 1		417463	0					
ANR	417641	UnaryOperator	-		417463	0					
ANR	417642	PrimaryExpression	1		417463	1					
ANR	417643	IfStatement	if ( * ptr ++ != 'l' )		417463	1					
ANR	417644	Condition	* ptr ++ != 'l'	2262:7:51804:51816	417463	0	True				
ANR	417645	EqualityExpression	* ptr ++ != 'l'		417463	0		!=			
ANR	417646	UnaryOperationExpression	* ptr ++		417463	0					
ANR	417647	UnaryOperator	*		417463	0					
ANR	417648	PostIncDecOperationExpression	ptr ++		417463	1					
ANR	417649	Identifier	ptr		417463	0					
ANR	417650	IncDec	++		417463	1					
ANR	417651	PrimaryExpression	'l'		417463	1					
ANR	417652	ReturnStatement	return - 1 ;	2263:4:51823:51832	417463	1	True				
ANR	417653	UnaryOperationExpression	- 1		417463	0					
ANR	417654	UnaryOperator	-		417463	0					
ANR	417655	PrimaryExpression	1		417463	1					
ANR	417656	SwitchStatement	switch ( * ptr ++ )		417463	10					
ANR	417657	Condition	* ptr ++	2266:10:51850:51855	417463	0	True				
ANR	417658	UnaryOperationExpression	* ptr ++		417463	0					
ANR	417659	UnaryOperator	*		417463	0					
ANR	417660	PostIncDecOperationExpression	ptr ++		417463	1					
ANR	417661	Identifier	ptr		417463	0					
ANR	417662	IncDec	++		417463	1					
ANR	417663	CompoundStatement		52:18:866:866	417463	1					
ANR	417664	Label	case 'l' :	2269:2:51969:51977	417463	0	True				
ANR	417665	SwitchStatement	switch ( * ptr ++ )		417463	1					
ANR	417666	Condition	* ptr ++	2270:11:51990:51995	417463	0	True				
ANR	417667	UnaryOperationExpression	* ptr ++		417463	0					
ANR	417668	UnaryOperator	*		417463	0					
ANR	417669	PostIncDecOperationExpression	ptr ++		417463	1					
ANR	417670	Identifier	ptr		417463	0					
ANR	417671	IncDec	++		417463	1					
ANR	417672	CompoundStatement		56:19:1006:1006	417463	1					
ANR	417673	Label	case 'i' :	2271:3:52003:52011	417463	0	True				
ANR	417674	Label	case 'd' :	2272:3:52016:52024	417463	1	True				
ANR	417675	Label	case 'u' :	2273:3:52029:52037	417463	2	True				
ANR	417676	Label	case 'o' :	2274:3:52042:52050	417463	3	True				
ANR	417677	Label	case 'x' :	2275:3:52055:52063	417463	4	True				
ANR	417678	Label	case 'X' :	2276:3:52068:52076	417463	5	True				
ANR	417679	ReturnStatement	return h != 0 ? - 1 : 0 ;	2277:4:52082:52104	417463	6	True				
ANR	417680	ConditionalExpression	h != 0 ? - 1 : 0		417463	0					
ANR	417681	Condition	h != 0		417463	0					
ANR	417682	EqualityExpression	h != 0		417463	0		!=			
ANR	417683	Identifier	h		417463	0					
ANR	417684	PrimaryExpression	0		417463	1					
ANR	417685	UnaryOperationExpression	- 1		417463	1					
ANR	417686	UnaryOperator	-		417463	0					
ANR	417687	PrimaryExpression	1		417463	1					
ANR	417688	PrimaryExpression	0		417463	2					
ANR	417689	Label	default :	2278:3:52109:52116	417463	7	True				
ANR	417690	Identifier	default		417463	0					
ANR	417691	ReturnStatement	return - 1 ;	2279:4:52122:52131	417463	8	True				
ANR	417692	UnaryOperationExpression	- 1		417463	0					
ANR	417693	UnaryOperator	-		417463	0					
ANR	417694	PrimaryExpression	1		417463	1					
ANR	417695	Label	case 'h' :	2286:2:52271:52279	417463	2	True				
ANR	417696	IfStatement	if ( h -- <= 0 )		417463	3					
ANR	417697	Condition	h -- <= 0	2287:7:52288:52295	417463	0	True				
ANR	417698	RelationalExpression	h -- <= 0		417463	0		<=			
ANR	417699	PostIncDecOperationExpression	h --		417463	0					
ANR	417700	Identifier	h		417463	0					
ANR	417701	IncDec	--		417463	1					
ANR	417702	PrimaryExpression	0		417463	1					
ANR	417703	ReturnStatement	return - 1 ;	2288:4:52302:52311	417463	1	True				
ANR	417704	UnaryOperationExpression	- 1		417463	0					
ANR	417705	UnaryOperator	-		417463	0					
ANR	417706	PrimaryExpression	1		417463	1					
ANR	417707	SwitchStatement	switch ( * ptr ++ )		417463	4					
ANR	417708	Condition	* ptr ++	2289:11:52324:52329	417463	0	True				
ANR	417709	UnaryOperationExpression	* ptr ++		417463	0					
ANR	417710	UnaryOperator	*		417463	0					
ANR	417711	PostIncDecOperationExpression	ptr ++		417463	1					
ANR	417712	Identifier	ptr		417463	0					
ANR	417713	IncDec	++		417463	1					
ANR	417714	CompoundStatement		75:19:1340:1340	417463	1					
ANR	417715	Label	case 'h' :	2290:3:52337:52345	417463	0	True				
ANR	417716	IfStatement	if ( h -- <= 0 )		417463	1					
ANR	417717	Condition	h -- <= 0	2291:8:52355:52362	417463	0	True				
ANR	417718	RelationalExpression	h -- <= 0		417463	0		<=			
ANR	417719	PostIncDecOperationExpression	h --		417463	0					
ANR	417720	Identifier	h		417463	0					
ANR	417721	IncDec	--		417463	1					
ANR	417722	PrimaryExpression	0		417463	1					
ANR	417723	ReturnStatement	return - 1 ;	2292:5:52370:52379	417463	1	True				
ANR	417724	UnaryOperationExpression	- 1		417463	0					
ANR	417725	UnaryOperator	-		417463	0					
ANR	417726	PrimaryExpression	1		417463	1					
ANR	417727	SwitchStatement	switch ( * ptr ++ )		417463	2					
ANR	417728	Condition	* ptr ++	2293:12:52393:52398	417463	0	True				
ANR	417729	UnaryOperationExpression	* ptr ++		417463	0					
ANR	417730	UnaryOperator	*		417463	0					
ANR	417731	PostIncDecOperationExpression	ptr ++		417463	1					
ANR	417732	Identifier	ptr		417463	0					
ANR	417733	IncDec	++		417463	1					
ANR	417734	CompoundStatement		79:20:1409:1409	417463	1					
ANR	417735	Label	case 'i' :	2294:4:52407:52415	417463	0	True				
ANR	417736	Label	case 'd' :	2295:4:52421:52429	417463	1	True				
ANR	417737	Label	case 'u' :	2296:4:52435:52443	417463	2	True				
ANR	417738	Label	case 'o' :	2297:4:52449:52457	417463	3	True				
ANR	417739	Label	case 'x' :	2298:4:52463:52471	417463	4	True				
ANR	417740	Label	case 'X' :	2299:4:52477:52485	417463	5	True				
ANR	417741	ReturnStatement	return 0 ;	2300:5:52492:52500	417463	6	True				
ANR	417742	PrimaryExpression	0		417463	0					
ANR	417743	Label	default :	2301:4:52506:52513	417463	7	True				
ANR	417744	Identifier	default		417463	0					
ANR	417745	ReturnStatement	return - 1 ;	2302:5:52520:52529	417463	8	True				
ANR	417746	UnaryOperationExpression	- 1		417463	0					
ANR	417747	UnaryOperator	-		417463	0					
ANR	417748	PrimaryExpression	1		417463	1					
ANR	417749	Label	case 'i' :	2304:3:52540:52548	417463	3	True				
ANR	417750	Label	case 'd' :	2305:3:52553:52561	417463	4	True				
ANR	417751	Label	case 'u' :	2306:3:52566:52574	417463	5	True				
ANR	417752	Label	case 'o' :	2307:3:52579:52587	417463	6	True				
ANR	417753	Label	case 'x' :	2308:3:52592:52600	417463	7	True				
ANR	417754	Label	case 'X' :	2309:3:52605:52613	417463	8	True				
ANR	417755	ReturnStatement	return h != 0 ? - 1 : 0 ;	2310:4:52619:52641	417463	9	True				
ANR	417756	ConditionalExpression	h != 0 ? - 1 : 0		417463	0					
ANR	417757	Condition	h != 0		417463	0					
ANR	417758	EqualityExpression	h != 0		417463	0		!=			
ANR	417759	Identifier	h		417463	0					
ANR	417760	PrimaryExpression	0		417463	1					
ANR	417761	UnaryOperationExpression	- 1		417463	1					
ANR	417762	UnaryOperator	-		417463	0					
ANR	417763	PrimaryExpression	1		417463	1					
ANR	417764	PrimaryExpression	0		417463	2					
ANR	417765	Label	default :	2311:3:52646:52653	417463	10	True				
ANR	417766	Identifier	default		417463	0					
ANR	417767	ReturnStatement	return - 1 ;	2312:4:52659:52668	417463	11	True				
ANR	417768	UnaryOperationExpression	- 1		417463	0					
ANR	417769	UnaryOperator	-		417463	0					
ANR	417770	PrimaryExpression	1		417463	1					
ANR	417771	Label	case 'c' :	2315:2:52684:52692	417463	5	True				
ANR	417772	ReturnStatement	return h != 2 ? - 1 : 0 ;	2316:3:52697:52719	417463	6	True				
ANR	417773	ConditionalExpression	h != 2 ? - 1 : 0		417463	0					
ANR	417774	Condition	h != 2		417463	0					
ANR	417775	EqualityExpression	h != 2		417463	0		!=			
ANR	417776	Identifier	h		417463	0					
ANR	417777	PrimaryExpression	2		417463	1					
ANR	417778	UnaryOperationExpression	- 1		417463	1					
ANR	417779	UnaryOperator	-		417463	0					
ANR	417780	PrimaryExpression	1		417463	1					
ANR	417781	PrimaryExpression	0		417463	2					
ANR	417782	Label	case 'i' :	2317:2:52723:52731	417463	7	True				
ANR	417783	Label	case 'd' :	2318:2:52735:52743	417463	8	True				
ANR	417784	Label	case 'u' :	2319:2:52747:52755	417463	9	True				
ANR	417785	Label	case 'o' :	2320:2:52759:52767	417463	10	True				
ANR	417786	Label	case 'x' :	2321:2:52771:52779	417463	11	True				
ANR	417787	Label	case 'X' :	2322:2:52783:52791	417463	12	True				
ANR	417788	ReturnStatement	return h != 0 ? - 1 : 0 ;	2324:3:52817:52839	417463	13	True				
ANR	417789	ConditionalExpression	h != 0 ? - 1 : 0		417463	0					
ANR	417790	Condition	h != 0		417463	0					
ANR	417791	EqualityExpression	h != 0		417463	0		!=			
ANR	417792	Identifier	h		417463	0					
ANR	417793	PrimaryExpression	0		417463	1					
ANR	417794	UnaryOperationExpression	- 1		417463	1					
ANR	417795	UnaryOperator	-		417463	0					
ANR	417796	PrimaryExpression	1		417463	1					
ANR	417797	PrimaryExpression	0		417463	2					
ANR	417798	Label	default :	2328:2:52869:52876	417463	14	True				
ANR	417799	Identifier	default		417463	0					
ANR	417800	ReturnStatement	return - 1 ;	2329:3:52881:52890	417463	15	True				
ANR	417801	UnaryOperationExpression	- 1		417463	0					
ANR	417802	UnaryOperator	-		417463	0					
ANR	417803	PrimaryExpression	1		417463	1					
ANR	417804	Label	case FILE_FMT_FLOAT :	2332:1:52900:52919	417463	11	True				
ANR	417805	Identifier	FILE_FMT_FLOAT		417463	0					
ANR	417806	Label	case FILE_FMT_DOUBLE :	2333:1:52922:52942	417463	12	True				
ANR	417807	Identifier	FILE_FMT_DOUBLE		417463	0					
ANR	417808	IfStatement	if ( * ptr == '-' )		417463	13					
ANR	417809	Condition	* ptr == '-'	2334:6:52950:52960	417463	0	True				
ANR	417810	EqualityExpression	* ptr == '-'		417463	0		==			
ANR	417811	UnaryOperationExpression	* ptr		417463	0					
ANR	417812	UnaryOperator	*		417463	0					
ANR	417813	Identifier	ptr		417463	1					
ANR	417814	PrimaryExpression	'-'		417463	1					
ANR	417815	ExpressionStatement	ptr ++	2335:3:52966:52971	417463	1	True				
ANR	417816	PostIncDecOperationExpression	ptr ++		417463	0					
ANR	417817	Identifier	ptr		417463	0					
ANR	417818	IncDec	++		417463	1					
ANR	417819	IfStatement	if ( * ptr == '.' )		417463	14					
ANR	417820	Condition	* ptr == '.'	2336:6:52979:52989	417463	0	True				
ANR	417821	EqualityExpression	* ptr == '.'		417463	0		==			
ANR	417822	UnaryOperationExpression	* ptr		417463	0					
ANR	417823	UnaryOperator	*		417463	0					
ANR	417824	Identifier	ptr		417463	1					
ANR	417825	PrimaryExpression	'.'		417463	1					
ANR	417826	ExpressionStatement	ptr ++	2337:3:52995:53000	417463	1	True				
ANR	417827	PostIncDecOperationExpression	ptr ++		417463	0					
ANR	417828	Identifier	ptr		417463	0					
ANR	417829	IncDec	++		417463	1					
ANR	417830	WhileStatement	while ( isdigit ( ( unsigned char ) * ptr ) )		417463	15					
ANR	417831	Condition	isdigit ( ( unsigned char ) * ptr )	2338:9:53011:53038	417463	0	True				
ANR	417832	CallExpression	isdigit ( ( unsigned char ) * ptr )		417463	0					
ANR	417833	Callee	isdigit		417463	0					
ANR	417834	Identifier	isdigit		417463	0					
ANR	417835	ArgumentList	( unsigned char ) * ptr		417463	1					
ANR	417836	Argument	( unsigned char ) * ptr		417463	0					
ANR	417837	CastExpression	( unsigned char ) * ptr		417463	0					
ANR	417838	CastTarget	unsigned char		417463	0					
ANR	417839	UnaryOperationExpression	* ptr		417463	1					
ANR	417840	UnaryOperator	*		417463	0					
ANR	417841	Identifier	ptr		417463	1					
ANR	417842	ExpressionStatement	ptr ++	2338:39:53041:53046	417463	1	True				
ANR	417843	PostIncDecOperationExpression	ptr ++		417463	0					
ANR	417844	Identifier	ptr		417463	0					
ANR	417845	IncDec	++		417463	1					
ANR	417846	IfStatement	if ( * ptr == '.' )		417463	16					
ANR	417847	Condition	* ptr == '.'	2339:6:53054:53064	417463	0	True				
ANR	417848	EqualityExpression	* ptr == '.'		417463	0		==			
ANR	417849	UnaryOperationExpression	* ptr		417463	0					
ANR	417850	UnaryOperator	*		417463	0					
ANR	417851	Identifier	ptr		417463	1					
ANR	417852	PrimaryExpression	'.'		417463	1					
ANR	417853	ExpressionStatement	ptr ++	2340:3:53070:53075	417463	1	True				
ANR	417854	PostIncDecOperationExpression	ptr ++		417463	0					
ANR	417855	Identifier	ptr		417463	0					
ANR	417856	IncDec	++		417463	1					
ANR	417857	WhileStatement	while ( isdigit ( ( unsigned char ) * ptr ) )		417463	17					
ANR	417858	Condition	isdigit ( ( unsigned char ) * ptr )	2341:9:53086:53113	417463	0	True				
ANR	417859	CallExpression	isdigit ( ( unsigned char ) * ptr )		417463	0					
ANR	417860	Callee	isdigit		417463	0					
ANR	417861	Identifier	isdigit		417463	0					
ANR	417862	ArgumentList	( unsigned char ) * ptr		417463	1					
ANR	417863	Argument	( unsigned char ) * ptr		417463	0					
ANR	417864	CastExpression	( unsigned char ) * ptr		417463	0					
ANR	417865	CastTarget	unsigned char		417463	0					
ANR	417866	UnaryOperationExpression	* ptr		417463	1					
ANR	417867	UnaryOperator	*		417463	0					
ANR	417868	Identifier	ptr		417463	1					
ANR	417869	ExpressionStatement	ptr ++	2341:39:53116:53121	417463	1	True				
ANR	417870	PostIncDecOperationExpression	ptr ++		417463	0					
ANR	417871	Identifier	ptr		417463	0					
ANR	417872	IncDec	++		417463	1					
ANR	417873	SwitchStatement	switch ( * ptr ++ )		417463	18					
ANR	417874	Condition	* ptr ++	2343:10:53135:53140	417463	0	True				
ANR	417875	UnaryOperationExpression	* ptr ++		417463	0					
ANR	417876	UnaryOperator	*		417463	0					
ANR	417877	PostIncDecOperationExpression	ptr ++		417463	1					
ANR	417878	Identifier	ptr		417463	0					
ANR	417879	IncDec	++		417463	1					
ANR	417880	CompoundStatement		129:18:2151:2151	417463	1					
ANR	417881	Label	case 'e' :	2344:2:53147:53155	417463	0	True				
ANR	417882	Label	case 'E' :	2345:2:53159:53167	417463	1	True				
ANR	417883	Label	case 'f' :	2346:2:53171:53179	417463	2	True				
ANR	417884	Label	case 'F' :	2347:2:53183:53191	417463	3	True				
ANR	417885	Label	case 'g' :	2348:2:53195:53203	417463	4	True				
ANR	417886	Label	case 'G' :	2349:2:53207:53215	417463	5	True				
ANR	417887	ReturnStatement	return 0 ;	2350:3:53220:53228	417463	6	True				
ANR	417888	PrimaryExpression	0		417463	0					
ANR	417889	Label	default :	2352:2:53236:53243	417463	7	True				
ANR	417890	Identifier	default		417463	0					
ANR	417891	ReturnStatement	return - 1 ;	2353:3:53248:53257	417463	8	True				
ANR	417892	UnaryOperationExpression	- 1		417463	0					
ANR	417893	UnaryOperator	-		417463	0					
ANR	417894	PrimaryExpression	1		417463	1					
ANR	417895	Label	case FILE_FMT_STR :	2357:1:53268:53285	417463	19	True				
ANR	417896	Identifier	FILE_FMT_STR		417463	0					
ANR	417897	IfStatement	if ( * ptr == '-' )		417463	20					
ANR	417898	Condition	* ptr == '-'	2358:6:53293:53303	417463	0	True				
ANR	417899	EqualityExpression	* ptr == '-'		417463	0		==			
ANR	417900	UnaryOperationExpression	* ptr		417463	0					
ANR	417901	UnaryOperator	*		417463	0					
ANR	417902	Identifier	ptr		417463	1					
ANR	417903	PrimaryExpression	'-'		417463	1					
ANR	417904	ExpressionStatement	ptr ++	2359:3:53309:53314	417463	1	True				
ANR	417905	PostIncDecOperationExpression	ptr ++		417463	0					
ANR	417906	Identifier	ptr		417463	0					
ANR	417907	IncDec	++		417463	1					
ANR	417908	WhileStatement	while ( isdigit ( ( unsigned char ) * ptr ) )		417463	21					
ANR	417909	Condition	isdigit ( ( unsigned char ) * ptr )	2360:9:53325:53353	417463	0	True				
ANR	417910	CallExpression	isdigit ( ( unsigned char ) * ptr )		417463	0					
ANR	417911	Callee	isdigit		417463	0					
ANR	417912	Identifier	isdigit		417463	0					
ANR	417913	ArgumentList	( unsigned char ) * ptr		417463	1					
ANR	417914	Argument	( unsigned char ) * ptr		417463	0					
ANR	417915	CastExpression	( unsigned char ) * ptr		417463	0					
ANR	417916	CastTarget	unsigned char		417463	0					
ANR	417917	UnaryOperationExpression	* ptr		417463	1					
ANR	417918	UnaryOperator	*		417463	0					
ANR	417919	Identifier	ptr		417463	1					
ANR	417920	ExpressionStatement	ptr ++	2361:3:53359:53364	417463	1	True				
ANR	417921	PostIncDecOperationExpression	ptr ++		417463	0					
ANR	417922	Identifier	ptr		417463	0					
ANR	417923	IncDec	++		417463	1					
ANR	417924	IfStatement	if ( * ptr == '.' )		417463	22					
ANR	417925	Condition	* ptr == '.'	2362:6:53372:53382	417463	0	True				
ANR	417926	EqualityExpression	* ptr == '.'		417463	0		==			
ANR	417927	UnaryOperationExpression	* ptr		417463	0					
ANR	417928	UnaryOperator	*		417463	0					
ANR	417929	Identifier	ptr		417463	1					
ANR	417930	PrimaryExpression	'.'		417463	1					
ANR	417931	CompoundStatement		148:19:2393:2393	417463	1					
ANR	417932	ExpressionStatement	ptr ++	2363:3:53390:53395	417463	0	True				
ANR	417933	PostIncDecOperationExpression	ptr ++		417463	0					
ANR	417934	Identifier	ptr		417463	0					
ANR	417935	IncDec	++		417463	1					
ANR	417936	WhileStatement	while ( isdigit ( ( unsigned char ) * ptr ) )		417463	1					
ANR	417937	Condition	isdigit ( ( unsigned char ) * ptr )	2364:10:53407:53435	417463	0	True				
ANR	417938	CallExpression	isdigit ( ( unsigned char ) * ptr )		417463	0					
ANR	417939	Callee	isdigit		417463	0					
ANR	417940	Identifier	isdigit		417463	0					
ANR	417941	ArgumentList	( unsigned char ) * ptr		417463	1					
ANR	417942	Argument	( unsigned char ) * ptr		417463	0					
ANR	417943	CastExpression	( unsigned char ) * ptr		417463	0					
ANR	417944	CastTarget	unsigned char		417463	0					
ANR	417945	UnaryOperationExpression	* ptr		417463	1					
ANR	417946	UnaryOperator	*		417463	0					
ANR	417947	Identifier	ptr		417463	1					
ANR	417948	ExpressionStatement	ptr ++	2365:4:53442:53447	417463	1	True				
ANR	417949	PostIncDecOperationExpression	ptr ++		417463	0					
ANR	417950	Identifier	ptr		417463	0					
ANR	417951	IncDec	++		417463	1					
ANR	417952	SwitchStatement	switch ( * ptr ++ )		417463	23					
ANR	417953	Condition	* ptr ++	2368:10:53466:53471	417463	0	True				
ANR	417954	UnaryOperationExpression	* ptr ++		417463	0					
ANR	417955	UnaryOperator	*		417463	0					
ANR	417956	PostIncDecOperationExpression	ptr ++		417463	1					
ANR	417957	Identifier	ptr		417463	0					
ANR	417958	IncDec	++		417463	1					
ANR	417959	CompoundStatement		154:18:2482:2482	417463	1					
ANR	417960	Label	case 's' :	2369:2:53478:53486	417463	0	True				
ANR	417961	ReturnStatement	return 0 ;	2370:3:53491:53499	417463	1	True				
ANR	417962	PrimaryExpression	0		417463	0					
ANR	417963	Label	default :	2371:2:53503:53510	417463	2	True				
ANR	417964	Identifier	default		417463	0					
ANR	417965	ReturnStatement	return - 1 ;	2372:3:53515:53524	417463	3	True				
ANR	417966	UnaryOperationExpression	- 1		417463	0					
ANR	417967	UnaryOperator	-		417463	0					
ANR	417968	PrimaryExpression	1		417463	1					
ANR	417969	Label	default :	2375:1:53534:53541	417463	24	True				
ANR	417970	Identifier	default		417463	0					
ANR	417971	ExpressionStatement	abort ( )	2377:2:53568:53575	417463	25	True				
ANR	417972	CallExpression	abort ( )		417463	0					
ANR	417973	Callee	abort		417463	0					
ANR	417974	Identifier	abort		417463	0					
ANR	417975	ArgumentList			417463	1					
ANR	417976	ReturnStatement	return - 1 ;	2380:1:53597:53606	417463	3	True				
ANR	417977	UnaryOperationExpression	- 1		417463	0					
ANR	417978	UnaryOperator	-		417463	0					
ANR	417979	PrimaryExpression	1		417463	1					
ANR	417980	ReturnType	int		417463	1					
ANR	417981	Identifier	check_format_type		417463	2					
ANR	417982	ParameterList	"const char * ptr , int type"		417463	3					
ANR	417983	Parameter	const char * ptr	2214:18:50964:50978	417463	0	True				
ANR	417984	ParameterType	const char *		417463	0					
ANR	417985	Identifier	ptr		417463	1					
ANR	417986	Parameter	int type	2214:35:50981:50988	417463	1	True				
ANR	417987	ParameterType	int		417463	0					
ANR	417988	Identifier	type		417463	1					
ANR	417989	CFGEntryNode	ENTRY		417463		True				
ANR	417990	CFGExitNode	EXIT		417463		True				
ANR	417991	Symbol	quad		417463						
ANR	417992	Symbol	* type		417463						
ANR	417993	Symbol	file_formats		417463						
ANR	417994	Symbol	* ptr ++		417463						
ANR	417995	Symbol	h		417463						
ANR	417996	Symbol	* ptr		417463						
ANR	417997	Symbol	type		417463						
ANR	417998	Symbol	* file_formats		417463						
ANR	417999	Symbol	isdigit		417463						
ANR	418000	Symbol	ptr		417463						
ANR	418001	Function	check_format	2387:8:53717:54844							
ANR	418002	FunctionDef	"check_format (struct magic_set * ms , struct magic * m)"		418001	0					
ANR	418003	CompoundStatement		2389:0:53773:54844	418001	0					
ANR	418004	IdentifierDeclStatement	char * ptr ;	2390:1:53776:53785	418001	0	True				
ANR	418005	IdentifierDecl	* ptr		418001	0					
ANR	418006	IdentifierDeclType	char *		418001	0					
ANR	418007	Identifier	ptr		418001	1					
ANR	418008	ForStatement	for ( ptr = m -> desc ; * ptr ; ptr ++ )		418001	1					
ANR	418009	ForInit	ptr = m -> desc ;	2392:6:53794:53807	418001	0	True				
ANR	418010	AssignmentExpression	ptr = m -> desc		418001	0		=			
ANR	418011	Identifier	ptr		418001	0					
ANR	418012	PtrMemberAccess	m -> desc		418001	1					
ANR	418013	Identifier	m		418001	0					
ANR	418014	Identifier	desc		418001	1					
ANR	418015	Condition	* ptr	2392:21:53809:53812	418001	1	True				
ANR	418016	UnaryOperationExpression	* ptr		418001	0					
ANR	418017	UnaryOperator	*		418001	0					
ANR	418018	Identifier	ptr		418001	1					
ANR	418019	PostIncDecOperationExpression	ptr ++	2392:27:53815:53819	418001	2	True				
ANR	418020	Identifier	ptr		418001	0					
ANR	418021	IncDec	++		418001	1					
ANR	418022	IfStatement	if ( * ptr == '%' )		418001	3					
ANR	418023	Condition	* ptr == '%'	2393:6:53828:53838	418001	0	True				
ANR	418024	EqualityExpression	* ptr == '%'		418001	0		==			
ANR	418025	UnaryOperationExpression	* ptr		418001	0					
ANR	418026	UnaryOperator	*		418001	0					
ANR	418027	Identifier	ptr		418001	1					
ANR	418028	PrimaryExpression	'%'		418001	1					
ANR	418029	BreakStatement	break ;	2394:3:53844:53849	418001	1	True				
ANR	418030	IfStatement	if ( * ptr == '\\0' )		418001	2					
ANR	418031	Condition	* ptr == '\\0'	2395:5:53856:53867	418001	0	True				
ANR	418032	EqualityExpression	* ptr == '\\0'		418001	0		==			
ANR	418033	UnaryOperationExpression	* ptr		418001	0					
ANR	418034	UnaryOperator	*		418001	0					
ANR	418035	Identifier	ptr		418001	1					
ANR	418036	PrimaryExpression	'\\0'		418001	1					
ANR	418037	CompoundStatement		7:19:96:96	418001	1					
ANR	418038	ReturnStatement	return 1 ;	2397:2:53903:53911	418001	0	True				
ANR	418039	PrimaryExpression	1		418001	0					
ANR	418040	ExpressionStatement	assert ( file_nformats == file_nnames )	2400:1:53918:53954	418001	3	True				
ANR	418041	CallExpression	assert ( file_nformats == file_nnames )		418001	0					
ANR	418042	Callee	assert		418001	0					
ANR	418043	Identifier	assert		418001	0					
ANR	418044	ArgumentList	file_nformats == file_nnames		418001	1					
ANR	418045	Argument	file_nformats == file_nnames		418001	0					
ANR	418046	EqualityExpression	file_nformats == file_nnames		418001	0		==			
ANR	418047	Identifier	file_nformats		418001	0					
ANR	418048	Identifier	file_nnames		418001	1					
ANR	418049	IfStatement	if ( m -> type >= file_nformats )		418001	4					
ANR	418050	Condition	m -> type >= file_nformats	2402:5:53962:53985	418001	0	True				
ANR	418051	RelationalExpression	m -> type >= file_nformats		418001	0		>=			
ANR	418052	PtrMemberAccess	m -> type		418001	0					
ANR	418053	Identifier	m		418001	0					
ANR	418054	Identifier	type		418001	1					
ANR	418055	Identifier	file_nformats		418001	1					
ANR	418056	CompoundStatement		14:31:214:214	418001	1					
ANR	418057	Statement	file_magwarn	2403:2:53992:54003	418001	0	True				
ANR	418058	Statement	(	2403:14:54004:54004	418001	1	True				
ANR	418059	Statement	ms	2403:15:54005:54006	418001	2	True				
ANR	418060	Statement	","	2403:17:54007:54007	418001	3	True				
ANR	418061	Statement	"""Internal error inconsistency between """	2403:19:54009:54047	418001	4	True				
ANR	418062	Statement	"""m->type and format strings"""	2404:6:54055:54082	418001	5	True				
ANR	418063	Statement	)	2404:34:54083:54083	418001	6	True				
ANR	418064	ExpressionStatement		2404:35:54084:54084	418001	7	True				
ANR	418065	ReturnStatement	return - 1 ;	2405:2:54090:54099	418001	8	True				
ANR	418066	UnaryOperationExpression	- 1		418001	0					
ANR	418067	UnaryOperator	-		418001	0					
ANR	418068	PrimaryExpression	1		418001	1					
ANR	418069	IfStatement	if ( file_formats [ m -> type ] == FILE_FMT_NONE )		418001	5					
ANR	418070	Condition	file_formats [ m -> type ] == FILE_FMT_NONE	2407:5:54109:54146	418001	0	True				
ANR	418071	EqualityExpression	file_formats [ m -> type ] == FILE_FMT_NONE		418001	0		==			
ANR	418072	ArrayIndexing	file_formats [ m -> type ]		418001	0					
ANR	418073	Identifier	file_formats		418001	0					
ANR	418074	PtrMemberAccess	m -> type		418001	1					
ANR	418075	Identifier	m		418001	0					
ANR	418076	Identifier	type		418001	1					
ANR	418077	Identifier	FILE_FMT_NONE		418001	1					
ANR	418078	CompoundStatement		19:45:375:375	418001	1					
ANR	418079	Statement	file_magwarn	2408:2:54153:54164	418001	0	True				
ANR	418080	Statement	(	2408:14:54165:54165	418001	1	True				
ANR	418081	Statement	ms	2408:15:54166:54167	418001	2	True				
ANR	418082	Statement	","	2408:17:54168:54168	418001	3	True				
ANR	418083	Statement	"""No format string for `%s' with description """	2408:19:54170:54214	418001	4	True				
ANR	418084	Statement	"""`%s'"""	2409:6:54222:54227	418001	5	True				
ANR	418085	Statement	","	2409:12:54228:54228	418001	6	True				
ANR	418086	Statement	m	2409:14:54230:54230	418001	7	True				
ANR	418087	Statement	->	2409:15:54231:54232	418001	8	True				
ANR	418088	Statement	desc	2409:17:54233:54236	418001	9	True				
ANR	418089	Statement	","	2409:21:54237:54237	418001	10	True				
ANR	418090	Statement	file_names	2409:23:54239:54248	418001	11	True				
ANR	418091	Statement	[	2409:33:54249:54249	418001	12	True				
ANR	418092	Statement	m	2409:34:54250:54250	418001	13	True				
ANR	418093	Statement	->	2409:35:54251:54252	418001	14	True				
ANR	418094	Statement	type	2409:37:54253:54256	418001	15	True				
ANR	418095	Statement	]	2409:41:54257:54257	418001	16	True				
ANR	418096	Statement	)	2409:42:54258:54258	418001	17	True				
ANR	418097	ExpressionStatement		2409:43:54259:54259	418001	18	True				
ANR	418098	ReturnStatement	return - 1 ;	2410:2:54263:54272	418001	19	True				
ANR	418099	UnaryOperationExpression	- 1		418001	0					
ANR	418100	UnaryOperator	-		418001	0					
ANR	418101	PrimaryExpression	1		418001	1					
ANR	418102	ExpressionStatement	ptr ++	2413:1:54279:54284	418001	6	True				
ANR	418103	PostIncDecOperationExpression	ptr ++		418001	0					
ANR	418104	Identifier	ptr		418001	0					
ANR	418105	IncDec	++		418001	1					
ANR	418106	IfStatement	"if ( check_format_type ( ptr , m -> type ) == - 1 )"		418001	7					
ANR	418107	Condition	"check_format_type ( ptr , m -> type ) == - 1"	2414:5:54291:54327	418001	0	True				
ANR	418108	EqualityExpression	"check_format_type ( ptr , m -> type ) == - 1"		418001	0		==			
ANR	418109	CallExpression	"check_format_type ( ptr , m -> type )"		418001	0					
ANR	418110	Callee	check_format_type		418001	0					
ANR	418111	Identifier	check_format_type		418001	0					
ANR	418112	ArgumentList	ptr		418001	1					
ANR	418113	Argument	ptr		418001	0					
ANR	418114	Identifier	ptr		418001	0					
ANR	418115	Argument	m -> type		418001	1					
ANR	418116	PtrMemberAccess	m -> type		418001	0					
ANR	418117	Identifier	m		418001	0					
ANR	418118	Identifier	type		418001	1					
ANR	418119	UnaryOperationExpression	- 1		418001	1					
ANR	418120	UnaryOperator	-		418001	0					
ANR	418121	PrimaryExpression	1		418001	1					
ANR	418122	CompoundStatement		26:44:556:556	418001	1					
ANR	418123	Statement	file_magwarn	2419:2:54440:54451	418001	0	True				
ANR	418124	Statement	(	2419:14:54452:54452	418001	1	True				
ANR	418125	Statement	ms	2419:15:54453:54454	418001	2	True				
ANR	418126	Statement	","	2419:17:54455:54455	418001	3	True				
ANR	418127	Statement	"""Printf format `%c' is not valid for type """	2419:19:54457:54499	418001	4	True				
ANR	418128	Statement	"""`%s' in description `%s'"""	2420:6:54507:54532	418001	5	True				
ANR	418129	Statement	","	2420:32:54533:54533	418001	6	True				
ANR	418130	Statement	*	2420:34:54535:54535	418001	7	True				
ANR	418131	Statement	ptr	2420:35:54536:54538	418001	8	True				
ANR	418132	Statement	?	2420:39:54540:54540	418001	9	True				
ANR	418133	Statement	*	2420:41:54542:54542	418001	10	True				
ANR	418134	Label	ptr :	2420:42:54543:54547	418001	11	True				
ANR	418135	Identifier	ptr		418001	0					
ANR	418136	Statement	'?'	2420:48:54549:54551	418001	12	True				
ANR	418137	Statement	","	2420:51:54552:54552	418001	13	True				
ANR	418138	Statement	file_names	2421:6:54560:54569	418001	14	True				
ANR	418139	Statement	[	2421:16:54570:54570	418001	15	True				
ANR	418140	Statement	m	2421:17:54571:54571	418001	16	True				
ANR	418141	Statement	->	2421:18:54572:54573	418001	17	True				
ANR	418142	Statement	type	2421:20:54574:54577	418001	18	True				
ANR	418143	Statement	]	2421:24:54578:54578	418001	19	True				
ANR	418144	Statement	","	2421:25:54579:54579	418001	20	True				
ANR	418145	Statement	m	2421:27:54581:54581	418001	21	True				
ANR	418146	Statement	->	2421:28:54582:54583	418001	22	True				
ANR	418147	Statement	desc	2421:30:54584:54587	418001	23	True				
ANR	418148	Statement	)	2421:34:54588:54588	418001	24	True				
ANR	418149	ExpressionStatement		2421:35:54589:54589	418001	25	True				
ANR	418150	ReturnStatement	return - 1 ;	2422:2:54593:54602	418001	26	True				
ANR	418151	UnaryOperationExpression	- 1		418001	0					
ANR	418152	UnaryOperator	-		418001	0					
ANR	418153	PrimaryExpression	1		418001	1					
ANR	418154	ForStatement	for ( ; * ptr ; ptr ++ )		418001	8					
ANR	418155	Condition	* ptr	2425:8:54617:54620	418001	0	True				
ANR	418156	UnaryOperationExpression	* ptr		418001	0					
ANR	418157	UnaryOperator	*		418001	0					
ANR	418158	Identifier	ptr		418001	1					
ANR	418159	PostIncDecOperationExpression	ptr ++	2425:14:54623:54627	418001	1	True				
ANR	418160	Identifier	ptr		418001	0					
ANR	418161	IncDec	++		418001	1					
ANR	418162	CompoundStatement		37:21:856:856	418001	2					
ANR	418163	IfStatement	if ( * ptr == '%' )		418001	0					
ANR	418164	Condition	* ptr == '%'	2426:6:54638:54648	418001	0	True				
ANR	418165	EqualityExpression	* ptr == '%'		418001	0		==			
ANR	418166	UnaryOperationExpression	* ptr		418001	0					
ANR	418167	UnaryOperator	*		418001	0					
ANR	418168	Identifier	ptr		418001	1					
ANR	418169	PrimaryExpression	'%'		418001	1					
ANR	418170	CompoundStatement		38:19:877:877	418001	1					
ANR	418171	Statement	file_magwarn	2427:3:54656:54667	418001	0	True				
ANR	418172	Statement	(	2427:15:54668:54668	418001	1	True				
ANR	418173	Statement	ms	2427:16:54669:54670	418001	2	True				
ANR	418174	Statement	","	2427:18:54671:54671	418001	3	True				
ANR	418175	Statement	"""Too many format strings (should have at most one) """	2428:7:54680:54731	418001	4	True				
ANR	418176	Statement	"""for `%s' with description `%s'"""	2429:7:54740:54771	418001	5	True				
ANR	418177	Statement	","	2429:39:54772:54772	418001	6	True				
ANR	418178	Statement	file_names	2430:7:54781:54790	418001	7	True				
ANR	418179	Statement	[	2430:17:54791:54791	418001	8	True				
ANR	418180	Statement	m	2430:18:54792:54792	418001	9	True				
ANR	418181	Statement	->	2430:19:54793:54794	418001	10	True				
ANR	418182	Statement	type	2430:21:54795:54798	418001	11	True				
ANR	418183	Statement	]	2430:25:54799:54799	418001	12	True				
ANR	418184	Statement	","	2430:26:54800:54800	418001	13	True				
ANR	418185	Statement	m	2430:28:54802:54802	418001	14	True				
ANR	418186	Statement	->	2430:29:54803:54804	418001	15	True				
ANR	418187	Statement	desc	2430:31:54805:54808	418001	16	True				
ANR	418188	Statement	)	2430:35:54809:54809	418001	17	True				
ANR	418189	ExpressionStatement		2430:36:54810:54810	418001	18	True				
ANR	418190	ReturnStatement	return - 1 ;	2431:3:54815:54824	418001	19	True				
ANR	418191	UnaryOperationExpression	- 1		418001	0					
ANR	418192	UnaryOperator	-		418001	0					
ANR	418193	PrimaryExpression	1		418001	1					
ANR	418194	ReturnStatement	return 0 ;	2434:1:54834:54842	418001	9	True				
ANR	418195	PrimaryExpression	0		418001	0					
ANR	418196	ReturnType	int		418001	1					
ANR	418197	Identifier	check_format		418001	2					
ANR	418198	ParameterList	"struct magic_set * ms , struct magic * m"		418001	3					
ANR	418199	Parameter	struct magic_set * ms	2388:13:53734:53753	418001	0	True				
ANR	418200	ParameterType	struct magic_set *		418001	0					
ANR	418201	Identifier	ms		418001	1					
ANR	418202	Parameter	struct magic * m	2388:35:53756:53770	418001	1	True				
ANR	418203	ParameterType	struct magic *		418001	0					
ANR	418204	Identifier	m		418001	1					
ANR	418205	CFGEntryNode	ENTRY		418001		True				
ANR	418206	CFGExitNode	EXIT		418001		True				
ANR	418207	Symbol	check_format_type		418001						
ANR	418208	Symbol	ms		418001						
ANR	418209	Symbol	file_formats		418001						
ANR	418210	Symbol	file_nnames		418001						
ANR	418211	Symbol	* file_formats		418001						
ANR	418212	Symbol	m		418001						
ANR	418213	Symbol	ptr		418001						
ANR	418214	Symbol	m -> type		418001						
ANR	418215	Symbol	m -> desc		418001						
ANR	418216	Symbol	* m		418001						
ANR	418217	Symbol	FILE_FMT_NONE		418001						
ANR	418218	Symbol	* ptr		418001						
ANR	418219	Symbol	file_nformats		418001						
ANR	418220	Symbol	* m -> type		418001						
ANR	418221	Symbol	* * m		418001						
ANR	418222	Function	getvalue	2442:8:55090:56433							
ANR	418223	FunctionDef	"getvalue (struct magic_set * ms , struct magic * m , const char * * p , int action)"		418222	0					
ANR	418224	CompoundStatement		2444:0:55170:56433	418222	0					
ANR	418225	SwitchStatement	switch ( m -> type )		418222	0					
ANR	418226	Condition	m -> type	2445:9:55181:55187	418222	0	True				
ANR	418227	PtrMemberAccess	m -> type		418222	0					
ANR	418228	Identifier	m		418222	0					
ANR	418229	Identifier	type		418222	1					
ANR	418230	CompoundStatement		2:18:19:19	418222	1					
ANR	418231	Label	case FILE_BESTRING16 :	2446:1:55193:55213	418222	0	True				
ANR	418232	Identifier	FILE_BESTRING16		418222	0					
ANR	418233	Label	case FILE_LESTRING16 :	2447:1:55216:55236	418222	1	True				
ANR	418234	Identifier	FILE_LESTRING16		418222	0					
ANR	418235	Label	case FILE_STRING :	2448:1:55239:55255	418222	2	True				
ANR	418236	Identifier	FILE_STRING		418222	0					
ANR	418237	Label	case FILE_PSTRING :	2449:1:55258:55275	418222	3	True				
ANR	418238	Identifier	FILE_PSTRING		418222	0					
ANR	418239	Label	case FILE_REGEX :	2450:1:55278:55293	418222	4	True				
ANR	418240	Identifier	FILE_REGEX		418222	0					
ANR	418241	Label	case FILE_SEARCH :	2451:1:55296:55312	418222	5	True				
ANR	418242	Identifier	FILE_SEARCH		418222	0					
ANR	418243	Label	case FILE_NAME :	2452:1:55315:55329	418222	6	True				
ANR	418244	Identifier	FILE_NAME		418222	0					
ANR	418245	Label	case FILE_USE :	2453:1:55332:55345	418222	7	True				
ANR	418246	Identifier	FILE_USE		418222	0					
ANR	418247	ExpressionStatement	"* p = getstr ( ms , m , * p , action == FILE_COMPILE )"	2454:2:55349:55395	418222	8	True				
ANR	418248	AssignmentExpression	"* p = getstr ( ms , m , * p , action == FILE_COMPILE )"		418222	0		=			
ANR	418249	UnaryOperationExpression	* p		418222	0					
ANR	418250	UnaryOperator	*		418222	0					
ANR	418251	Identifier	p		418222	1					
ANR	418252	CallExpression	"getstr ( ms , m , * p , action == FILE_COMPILE )"		418222	1					
ANR	418253	Callee	getstr		418222	0					
ANR	418254	Identifier	getstr		418222	0					
ANR	418255	ArgumentList	ms		418222	1					
ANR	418256	Argument	ms		418222	0					
ANR	418257	Identifier	ms		418222	0					
ANR	418258	Argument	m		418222	1					
ANR	418259	Identifier	m		418222	0					
ANR	418260	Argument	* p		418222	2					
ANR	418261	UnaryOperationExpression	* p		418222	0					
ANR	418262	UnaryOperator	*		418222	0					
ANR	418263	Identifier	p		418222	1					
ANR	418264	Argument	action == FILE_COMPILE		418222	3					
ANR	418265	EqualityExpression	action == FILE_COMPILE		418222	0		==			
ANR	418266	Identifier	action		418222	0					
ANR	418267	Identifier	FILE_COMPILE		418222	1					
ANR	418268	IfStatement	if ( * p == NULL )		418222	9					
ANR	418269	Condition	* p == NULL	2455:6:55403:55412	418222	0	True				
ANR	418270	EqualityExpression	* p == NULL		418222	0		==			
ANR	418271	UnaryOperationExpression	* p		418222	0					
ANR	418272	UnaryOperator	*		418222	0					
ANR	418273	Identifier	p		418222	1					
ANR	418274	Identifier	NULL		418222	1					
ANR	418275	CompoundStatement		12:18:244:244	418222	1					
ANR	418276	IfStatement	if ( ms -> flags & MAGIC_CHECK )		418222	0					
ANR	418277	Condition	ms -> flags & MAGIC_CHECK	2456:7:55424:55446	418222	0	True				
ANR	418278	BitAndExpression	ms -> flags & MAGIC_CHECK		418222	0		&			
ANR	418279	PtrMemberAccess	ms -> flags		418222	0					
ANR	418280	Identifier	ms		418222	0					
ANR	418281	Identifier	flags		418222	1					
ANR	418282	Identifier	MAGIC_CHECK		418222	1					
ANR	418283	ExpressionStatement	"file_magwarn ( ms , ""cannot get string from `%s'"" , m -> value . s )"	2457:4:55453:55520	418222	1	True				
ANR	418284	CallExpression	"file_magwarn ( ms , ""cannot get string from `%s'"" , m -> value . s )"		418222	0					
ANR	418285	Callee	file_magwarn		418222	0					
ANR	418286	Identifier	file_magwarn		418222	0					
ANR	418287	ArgumentList	ms		418222	1					
ANR	418288	Argument	ms		418222	0					
ANR	418289	Identifier	ms		418222	0					
ANR	418290	Argument	"""cannot get string from `%s'"""		418222	1					
ANR	418291	PrimaryExpression	"""cannot get string from `%s'"""		418222	0					
ANR	418292	Argument	m -> value . s		418222	2					
ANR	418293	MemberAccess	m -> value . s		418222	0					
ANR	418294	PtrMemberAccess	m -> value		418222	0					
ANR	418295	Identifier	m		418222	0					
ANR	418296	Identifier	value		418222	1					
ANR	418297	Identifier	s		418222	1					
ANR	418298	ReturnStatement	return - 1 ;	2459:3:55525:55534	418222	1	True				
ANR	418299	UnaryOperationExpression	- 1		418222	0					
ANR	418300	UnaryOperator	-		418222	0					
ANR	418301	PrimaryExpression	1		418222	1					
ANR	418302	IfStatement	if ( m -> type == FILE_REGEX )		418222	10					
ANR	418303	Condition	m -> type == FILE_REGEX	2461:6:55546:55566	418222	0	True				
ANR	418304	EqualityExpression	m -> type == FILE_REGEX		418222	0		==			
ANR	418305	PtrMemberAccess	m -> type		418222	0					
ANR	418306	Identifier	m		418222	0					
ANR	418307	Identifier	type		418222	1					
ANR	418308	Identifier	FILE_REGEX		418222	1					
ANR	418309	CompoundStatement		18:29:398:398	418222	1					
ANR	418310	ReturnStatement	return 0 ;	2475:2:55864:55872	418222	11	True				
ANR	418311	PrimaryExpression	0		418222	0					
ANR	418312	Label	case FILE_FLOAT :	2476:1:55875:55890	418222	12	True				
ANR	418313	Identifier	FILE_FLOAT		418222	0					
ANR	418314	Label	case FILE_BEFLOAT :	2477:1:55893:55910	418222	13	True				
ANR	418315	Identifier	FILE_BEFLOAT		418222	0					
ANR	418316	Label	case FILE_LEFLOAT :	2478:1:55913:55930	418222	14	True				
ANR	418317	Identifier	FILE_LEFLOAT		418222	0					
ANR	418318	IfStatement	if ( m -> reln != 'x' )		418222	15					
ANR	418319	Condition	m -> reln != 'x'	2479:6:55938:55951	418222	0	True				
ANR	418320	EqualityExpression	m -> reln != 'x'		418222	0		!=			
ANR	418321	PtrMemberAccess	m -> reln		418222	0					
ANR	418322	Identifier	m		418222	0					
ANR	418323	Identifier	reln		418222	1					
ANR	418324	PrimaryExpression	'x'		418222	1					
ANR	418325	CompoundStatement		37:3:788:796	418222	1					
ANR	418326	IdentifierDeclStatement	char * ep ;	2480:3:55959:55967	418222	0	True				
ANR	418327	IdentifierDecl	* ep		418222	0					
ANR	418328	IdentifierDeclType	char *		418222	0					
ANR	418329	Identifier	ep		418222	1					
ANR	418330	ExpressionStatement	"m -> value . f = strtof ( * p , & ep )"	2482:3:55991:56019	418222	1	True				
ANR	418331	AssignmentExpression	"m -> value . f = strtof ( * p , & ep )"		418222	0		=			
ANR	418332	MemberAccess	m -> value . f		418222	0					
ANR	418333	PtrMemberAccess	m -> value		418222	0					
ANR	418334	Identifier	m		418222	0					
ANR	418335	Identifier	value		418222	1					
ANR	418336	Identifier	f		418222	1					
ANR	418337	CallExpression	"strtof ( * p , & ep )"		418222	1					
ANR	418338	Callee	strtof		418222	0					
ANR	418339	Identifier	strtof		418222	0					
ANR	418340	ArgumentList	* p		418222	1					
ANR	418341	Argument	* p		418222	0					
ANR	418342	UnaryOperationExpression	* p		418222	0					
ANR	418343	UnaryOperator	*		418222	0					
ANR	418344	Identifier	p		418222	1					
ANR	418345	Argument	& ep		418222	1					
ANR	418346	UnaryOperationExpression	& ep		418222	0					
ANR	418347	UnaryOperator	&		418222	0					
ANR	418348	Identifier	ep		418222	1					
ANR	418349	ExpressionStatement	* p = ep	2486:3:56077:56084	418222	2	True				
ANR	418350	AssignmentExpression	* p = ep		418222	0		=			
ANR	418351	UnaryOperationExpression	* p		418222	0					
ANR	418352	UnaryOperator	*		418222	0					
ANR	418353	Identifier	p		418222	1					
ANR	418354	Identifier	ep		418222	1					
ANR	418355	ReturnStatement	return 0 ;	2488:2:56092:56100	418222	16	True				
ANR	418356	PrimaryExpression	0		418222	0					
ANR	418357	Label	case FILE_DOUBLE :	2489:1:56103:56119	418222	17	True				
ANR	418358	Identifier	FILE_DOUBLE		418222	0					
ANR	418359	Label	case FILE_BEDOUBLE :	2490:1:56122:56140	418222	18	True				
ANR	418360	Identifier	FILE_BEDOUBLE		418222	0					
ANR	418361	Label	case FILE_LEDOUBLE :	2491:1:56143:56161	418222	19	True				
ANR	418362	Identifier	FILE_LEDOUBLE		418222	0					
ANR	418363	IfStatement	if ( m -> reln != 'x' )		418222	20					
ANR	418364	Condition	m -> reln != 'x'	2492:6:56169:56182	418222	0	True				
ANR	418365	EqualityExpression	m -> reln != 'x'		418222	0		!=			
ANR	418366	PtrMemberAccess	m -> reln		418222	0					
ANR	418367	Identifier	m		418222	0					
ANR	418368	Identifier	reln		418222	1					
ANR	418369	PrimaryExpression	'x'		418222	1					
ANR	418370	CompoundStatement		50:3:1019:1027	418222	1					
ANR	418371	IdentifierDeclStatement	char * ep ;	2493:3:56190:56198	418222	0	True				
ANR	418372	IdentifierDecl	* ep		418222	0					
ANR	418373	IdentifierDeclType	char *		418222	0					
ANR	418374	Identifier	ep		418222	1					
ANR	418375	ExpressionStatement	"m -> value . d = strtod ( * p , & ep )"	2494:3:56203:56231	418222	1	True				
ANR	418376	AssignmentExpression	"m -> value . d = strtod ( * p , & ep )"		418222	0		=			
ANR	418377	MemberAccess	m -> value . d		418222	0					
ANR	418378	PtrMemberAccess	m -> value		418222	0					
ANR	418379	Identifier	m		418222	0					
ANR	418380	Identifier	value		418222	1					
ANR	418381	Identifier	d		418222	1					
ANR	418382	CallExpression	"strtod ( * p , & ep )"		418222	1					
ANR	418383	Callee	strtod		418222	0					
ANR	418384	Identifier	strtod		418222	0					
ANR	418385	ArgumentList	* p		418222	1					
ANR	418386	Argument	* p		418222	0					
ANR	418387	UnaryOperationExpression	* p		418222	0					
ANR	418388	UnaryOperator	*		418222	0					
ANR	418389	Identifier	p		418222	1					
ANR	418390	Argument	& ep		418222	1					
ANR	418391	UnaryOperationExpression	& ep		418222	0					
ANR	418392	UnaryOperator	&		418222	0					
ANR	418393	Identifier	ep		418222	1					
ANR	418394	ExpressionStatement	* p = ep	2495:3:56236:56243	418222	2	True				
ANR	418395	AssignmentExpression	* p = ep		418222	0		=			
ANR	418396	UnaryOperationExpression	* p		418222	0					
ANR	418397	UnaryOperator	*		418222	0					
ANR	418398	Identifier	p		418222	1					
ANR	418399	Identifier	ep		418222	1					
ANR	418400	ReturnStatement	return 0 ;	2497:2:56251:56259	418222	21	True				
ANR	418401	PrimaryExpression	0		418222	0					
ANR	418402	Label	default :	2498:1:56262:56269	418222	22	True				
ANR	418403	Identifier	default		418222	0					
ANR	418404	IfStatement	if ( m -> reln != 'x' )		418222	23					
ANR	418405	Condition	m -> reln != 'x'	2499:6:56277:56290	418222	0	True				
ANR	418406	EqualityExpression	m -> reln != 'x'		418222	0		!=			
ANR	418407	PtrMemberAccess	m -> reln		418222	0					
ANR	418408	Identifier	m		418222	0					
ANR	418409	Identifier	reln		418222	1					
ANR	418410	PrimaryExpression	'x'		418222	1					
ANR	418411	CompoundStatement		57:3:1127:1135	418222	1					
ANR	418412	IdentifierDeclStatement	char * ep ;	2500:3:56298:56306	418222	0	True				
ANR	418413	IdentifierDecl	* ep		418222	0					
ANR	418414	IdentifierDeclType	char *		418222	0					
ANR	418415	Identifier	ep		418222	1					
ANR	418416	ExpressionStatement	"m -> value . q = file_signextend ( ms , m , ( uint64_t ) strtoull ( * p , & ep , 0 ) )"	2501:3:56311:56385	418222	1	True				
ANR	418417	AssignmentExpression	"m -> value . q = file_signextend ( ms , m , ( uint64_t ) strtoull ( * p , & ep , 0 ) )"		418222	0		=			
ANR	418418	MemberAccess	m -> value . q		418222	0					
ANR	418419	PtrMemberAccess	m -> value		418222	0					
ANR	418420	Identifier	m		418222	0					
ANR	418421	Identifier	value		418222	1					
ANR	418422	Identifier	q		418222	1					
ANR	418423	CallExpression	"file_signextend ( ms , m , ( uint64_t ) strtoull ( * p , & ep , 0 ) )"		418222	1					
ANR	418424	Callee	file_signextend		418222	0					
ANR	418425	Identifier	file_signextend		418222	0					
ANR	418426	ArgumentList	ms		418222	1					
ANR	418427	Argument	ms		418222	0					
ANR	418428	Identifier	ms		418222	0					
ANR	418429	Argument	m		418222	1					
ANR	418430	Identifier	m		418222	0					
ANR	418431	Argument	"( uint64_t ) strtoull ( * p , & ep , 0 )"		418222	2					
ANR	418432	CastExpression	"( uint64_t ) strtoull ( * p , & ep , 0 )"		418222	0					
ANR	418433	CastTarget	uint64_t		418222	0					
ANR	418434	CallExpression	"strtoull ( * p , & ep , 0 )"		418222	1					
ANR	418435	Callee	strtoull		418222	0					
ANR	418436	Identifier	strtoull		418222	0					
ANR	418437	ArgumentList	* p		418222	1					
ANR	418438	Argument	* p		418222	0					
ANR	418439	UnaryOperationExpression	* p		418222	0					
ANR	418440	UnaryOperator	*		418222	0					
ANR	418441	Identifier	p		418222	1					
ANR	418442	Argument	& ep		418222	1					
ANR	418443	UnaryOperationExpression	& ep		418222	0					
ANR	418444	UnaryOperator	&		418222	0					
ANR	418445	Identifier	ep		418222	1					
ANR	418446	Argument	0		418222	2					
ANR	418447	PrimaryExpression	0		418222	0					
ANR	418448	ExpressionStatement	* p = ep	2503:3:56390:56397	418222	2	True				
ANR	418449	AssignmentExpression	* p = ep		418222	0		=			
ANR	418450	UnaryOperationExpression	* p		418222	0					
ANR	418451	UnaryOperator	*		418222	0					
ANR	418452	Identifier	p		418222	1					
ANR	418453	Identifier	ep		418222	1					
ANR	418454	ExpressionStatement	eatsize ( p )	2504:3:56402:56412	418222	3	True				
ANR	418455	CallExpression	eatsize ( p )		418222	0					
ANR	418456	Callee	eatsize		418222	0					
ANR	418457	Identifier	eatsize		418222	0					
ANR	418458	ArgumentList	p		418222	1					
ANR	418459	Argument	p		418222	0					
ANR	418460	Identifier	p		418222	0					
ANR	418461	ReturnStatement	return 0 ;	2506:2:56420:56428	418222	24	True				
ANR	418462	PrimaryExpression	0		418222	0					
ANR	418463	ReturnType	int		418222	1					
ANR	418464	Identifier	getvalue		418222	2					
ANR	418465	ParameterList	"struct magic_set * ms , struct magic * m , const char * * p , int action"		418222	3					
ANR	418466	Parameter	struct magic_set * ms	2443:9:55103:55122	418222	0	True				
ANR	418467	ParameterType	struct magic_set *		418222	0					
ANR	418468	Identifier	ms		418222	1					
ANR	418469	Parameter	struct magic * m	2443:31:55125:55139	418222	1	True				
ANR	418470	ParameterType	struct magic *		418222	0					
ANR	418471	Identifier	m		418222	1					
ANR	418472	Parameter	const char * * p	2443:48:55142:55155	418222	2	True				
ANR	418473	ParameterType	const char * *		418222	0					
ANR	418474	Identifier	p		418222	1					
ANR	418475	Parameter	int action	2443:64:55158:55167	418222	3	True				
ANR	418476	ParameterType	int		418222	0					
ANR	418477	Identifier	action		418222	1					
ANR	418478	CFGEntryNode	ENTRY		418222		True				
ANR	418479	CFGExitNode	EXIT		418222		True				
ANR	418480	Symbol	* ms		418222						
ANR	418481	Symbol	strtoull		418222						
ANR	418482	Symbol	m -> type		418222						
ANR	418483	Symbol	getstr		418222						
ANR	418484	Symbol	m -> reln		418222						
ANR	418485	Symbol	action		418222						
ANR	418486	Symbol	FILE_COMPILE		418222						
ANR	418487	Symbol	NULL		418222						
ANR	418488	Symbol	m -> value		418222						
ANR	418489	Symbol	FILE_REGEX		418222						
ANR	418490	Symbol	file_signextend		418222						
ANR	418491	Symbol	ms		418222						
ANR	418492	Symbol	m -> value . s		418222						
ANR	418493	Symbol	m -> value . q		418222						
ANR	418494	Symbol	ep		418222						
ANR	418495	Symbol	m		418222						
ANR	418496	Symbol	strtod		418222						
ANR	418497	Symbol	strtof		418222						
ANR	418498	Symbol	p		418222						
ANR	418499	Symbol	& ep		418222						
ANR	418500	Symbol	* m		418222						
ANR	418501	Symbol	m -> value . f		418222						
ANR	418502	Symbol	MAGIC_CHECK		418222						
ANR	418503	Symbol	m -> value . d		418222						
ANR	418504	Symbol	* p		418222						
ANR	418505	Symbol	ms -> flags		418222						
ANR	418506	Function	getstr	2516:8:56682:59474							
ANR	418507	FunctionDef	"getstr (struct magic_set * ms , struct magic * m , const char * s , int warn)"		418506	0					
ANR	418508	CompoundStatement		2518:0:56766:59474	418506	0					
ANR	418509	IdentifierDeclStatement	const char * origs = s ;	2519:1:56769:56790	418506	0	True				
ANR	418510	IdentifierDecl	* origs = s		418506	0					
ANR	418511	IdentifierDeclType	const char *		418506	0					
ANR	418512	Identifier	origs		418506	1					
ANR	418513	AssignmentExpression	* origs = s		418506	2		=			
ANR	418514	Identifier	s		418506	0					
ANR	418515	Identifier	s		418506	1					
ANR	418516	IdentifierDeclStatement	char * p = m -> value . s ;	2520:1:56793:56813	418506	1	True				
ANR	418517	IdentifierDecl	* p = m -> value . s		418506	0					
ANR	418518	IdentifierDeclType	char *		418506	0					
ANR	418519	Identifier	p		418506	1					
ANR	418520	AssignmentExpression	* p = m -> value . s		418506	2		=			
ANR	418521	Identifier	p		418506	0					
ANR	418522	MemberAccess	m -> value . s		418506	1					
ANR	418523	PtrMemberAccess	m -> value		418506	0					
ANR	418524	Identifier	m		418506	0					
ANR	418525	Identifier	value		418506	1					
ANR	418526	Identifier	s		418506	1					
ANR	418527	IdentifierDeclStatement	size_t plen = sizeof ( m -> value . s ) ;	2521:1:56816:56849	418506	2	True				
ANR	418528	IdentifierDecl	plen = sizeof ( m -> value . s )		418506	0					
ANR	418529	IdentifierDeclType	size_t		418506	0					
ANR	418530	Identifier	plen		418506	1					
ANR	418531	AssignmentExpression	plen = sizeof ( m -> value . s )		418506	2		=			
ANR	418532	Identifier	plen		418506	0					
ANR	418533	SizeofExpression	sizeof ( m -> value . s )		418506	1					
ANR	418534	Sizeof	sizeof		418506	0					
ANR	418535	MemberAccess	m -> value . s		418506	1					
ANR	418536	PtrMemberAccess	m -> value		418506	0					
ANR	418537	Identifier	m		418506	0					
ANR	418538	Identifier	value		418506	1					
ANR	418539	Identifier	s		418506	1					
ANR	418540	IdentifierDeclStatement	char * origp = p ;	2522:1:56852:56868	418506	3	True				
ANR	418541	IdentifierDecl	* origp = p		418506	0					
ANR	418542	IdentifierDeclType	char *		418506	0					
ANR	418543	Identifier	origp		418506	1					
ANR	418544	AssignmentExpression	* origp = p		418506	2		=			
ANR	418545	Identifier	p		418506	0					
ANR	418546	Identifier	p		418506	1					
ANR	418547	IdentifierDeclStatement	char * pmax = p + plen - 1 ;	2523:1:56871:56896	418506	4	True				
ANR	418548	IdentifierDecl	* pmax = p + plen - 1		418506	0					
ANR	418549	IdentifierDeclType	char *		418506	0					
ANR	418550	Identifier	pmax		418506	1					
ANR	418551	AssignmentExpression	* pmax = p + plen - 1		418506	2		=			
ANR	418552	Identifier	pmax		418506	0					
ANR	418553	AdditiveExpression	p + plen - 1		418506	1		+			
ANR	418554	Identifier	p		418506	0					
ANR	418555	AdditiveExpression	plen - 1		418506	1		-			
ANR	418556	Identifier	plen		418506	0					
ANR	418557	PrimaryExpression	1		418506	1					
ANR	418558	IdentifierDeclStatement	int c ;	2524:1:56899:56904	418506	5	True				
ANR	418559	IdentifierDecl	c		418506	0					
ANR	418560	IdentifierDeclType	int		418506	0					
ANR	418561	Identifier	c		418506	1					
ANR	418562	IdentifierDeclStatement	int val ;	2525:1:56907:56914	418506	6	True				
ANR	418563	IdentifierDecl	val		418506	0					
ANR	418564	IdentifierDeclType	int		418506	0					
ANR	418565	Identifier	val		418506	1					
ANR	418566	WhileStatement	while ( ( c = * s ++ ) != '\\0' )		418506	7					
ANR	418567	Condition	( c = * s ++ ) != '\\0'	2527:8:56925:56942	418506	0	True				
ANR	418568	EqualityExpression	( c = * s ++ ) != '\\0'		418506	0		!=			
ANR	418569	AssignmentExpression	c = * s ++		418506	0		=			
ANR	418570	Identifier	c		418506	0					
ANR	418571	UnaryOperationExpression	* s ++		418506	1					
ANR	418572	UnaryOperator	*		418506	0					
ANR	418573	PostIncDecOperationExpression	s ++		418506	1					
ANR	418574	Identifier	s		418506	0					
ANR	418575	IncDec	++		418506	1					
ANR	418576	PrimaryExpression	'\\0'		418506	1					
ANR	418577	CompoundStatement		10:28:178:178	418506	1					
ANR	418578	IfStatement	if ( isspace ( ( unsigned char ) c ) )		418506	0					
ANR	418579	Condition	isspace ( ( unsigned char ) c )	2528:6:56953:56978	418506	0	True				
ANR	418580	CallExpression	isspace ( ( unsigned char ) c )		418506	0					
ANR	418581	Callee	isspace		418506	0					
ANR	418582	Identifier	isspace		418506	0					
ANR	418583	ArgumentList	( unsigned char ) c		418506	1					
ANR	418584	Argument	( unsigned char ) c		418506	0					
ANR	418585	CastExpression	( unsigned char ) c		418506	0					
ANR	418586	CastTarget	unsigned char		418506	0					
ANR	418587	Identifier	c		418506	1					
ANR	418588	BreakStatement	break ;	2529:3:56984:56989	418506	1	True				
ANR	418589	IfStatement	if ( p >= pmax )		418506	1					
ANR	418590	Condition	p >= pmax	2530:6:56997:57005	418506	0	True				
ANR	418591	RelationalExpression	p >= pmax		418506	0		>=			
ANR	418592	Identifier	p		418506	0					
ANR	418593	Identifier	pmax		418506	1					
ANR	418594	CompoundStatement		13:17:241:241	418506	1					
ANR	418595	ExpressionStatement	"file_error ( ms , 0 , ""string too long: `%s'"" , origs )"	2531:3:57013:57062	418506	0	True				
ANR	418596	CallExpression	"file_error ( ms , 0 , ""string too long: `%s'"" , origs )"		418506	0					
ANR	418597	Callee	file_error		418506	0					
ANR	418598	Identifier	file_error		418506	0					
ANR	418599	ArgumentList	ms		418506	1					
ANR	418600	Argument	ms		418506	0					
ANR	418601	Identifier	ms		418506	0					
ANR	418602	Argument	0		418506	1					
ANR	418603	PrimaryExpression	0		418506	0					
ANR	418604	Argument	"""string too long: `%s'"""		418506	2					
ANR	418605	PrimaryExpression	"""string too long: `%s'"""		418506	0					
ANR	418606	Argument	origs		418506	3					
ANR	418607	Identifier	origs		418506	0					
ANR	418608	ReturnStatement	return NULL ;	2532:3:57067:57078	418506	1	True				
ANR	418609	Identifier	NULL		418506	0					
ANR	418610	IfStatement	if ( c == '\\\\' )		418506	2					
ANR	418611	Condition	c == '\\\\'	2534:6:57090:57098	418506	0	True				
ANR	418612	EqualityExpression	c == '\\\\'		418506	0		==			
ANR	418613	Identifier	c		418506	0					
ANR	418614	PrimaryExpression	'\\\\'		418506	1					
ANR	418615	CompoundStatement		17:17:334:334	418506	1					
ANR	418616	SwitchStatement	switch ( c = * s ++ )		418506	0					
ANR	418617	Condition	c = * s ++	2535:10:57113:57120	418506	0	True				
ANR	418618	AssignmentExpression	c = * s ++		418506	0		=			
ANR	418619	Identifier	c		418506	0					
ANR	418620	UnaryOperationExpression	* s ++		418506	1					
ANR	418621	UnaryOperator	*		418506	0					
ANR	418622	PostIncDecOperationExpression	s ++		418506	1					
ANR	418623	Identifier	s		418506	0					
ANR	418624	IncDec	++		418506	1					
ANR	418625	CompoundStatement		18:20:356:356	418506	1					
ANR	418626	Label	case '\\0' :	2537:3:57129:57138	418506	0	True				
ANR	418627	IfStatement	if ( warn )		418506	1					
ANR	418628	Condition	warn	2538:8:57148:57151	418506	0	True				
ANR	418629	Identifier	warn		418506	0					
ANR	418630	ExpressionStatement	"file_magwarn ( ms , ""incomplete escape"" )"	2539:5:57159:57196	418506	1	True				
ANR	418631	CallExpression	"file_magwarn ( ms , ""incomplete escape"" )"		418506	0					
ANR	418632	Callee	file_magwarn		418506	0					
ANR	418633	Identifier	file_magwarn		418506	0					
ANR	418634	ArgumentList	ms		418506	1					
ANR	418635	Argument	ms		418506	0					
ANR	418636	Identifier	ms		418506	0					
ANR	418637	Argument	"""incomplete escape"""		418506	1					
ANR	418638	PrimaryExpression	"""incomplete escape"""		418506	0					
ANR	418639	GotoStatement	goto out ;	2540:4:57202:57210	418506	2	True				
ANR	418640	Identifier	out		418506	0					
ANR	418641	Label	case '\\t' :	2542:3:57216:57225	418506	3	True				
ANR	418642	IfStatement	if ( warn )		418506	4					
ANR	418643	Condition	warn	2543:8:57235:57238	418506	0	True				
ANR	418644	Identifier	warn		418506	0					
ANR	418645	CompoundStatement		26:14:474:474	418506	1					
ANR	418646	ExpressionStatement	"file_magwarn ( ms , ""escaped tab found, use \\\\t instead"" )"	2544:5:57248:57311	418506	0	True				
ANR	418647	CallExpression	"file_magwarn ( ms , ""escaped tab found, use \\\\t instead"" )"		418506	0					
ANR	418648	Callee	file_magwarn		418506	0					
ANR	418649	Identifier	file_magwarn		418506	0					
ANR	418650	ArgumentList	ms		418506	1					
ANR	418651	Argument	ms		418506	0					
ANR	418652	Identifier	ms		418506	0					
ANR	418653	Argument	"""escaped tab found, use \\\\t instead"""		418506	1					
ANR	418654	PrimaryExpression	"""escaped tab found, use \\\\t instead"""		418506	0					
ANR	418655	ExpressionStatement	warn = 0	2546:5:57318:57326	418506	1	True				
ANR	418656	AssignmentExpression	warn = 0		418506	0		=			
ANR	418657	Identifier	warn		418506	0					
ANR	418658	PrimaryExpression	0		418506	1					
ANR	418659	Label	default :	2549:3:57375:57382	418506	5	True				
ANR	418660	Identifier	default		418506	0					
ANR	418661	IfStatement	if ( warn )		418506	6					
ANR	418662	Condition	warn	2550:8:57392:57395	418506	0	True				
ANR	418663	Identifier	warn		418506	0					
ANR	418664	CompoundStatement		33:14:631:631	418506	1					
ANR	418665	IfStatement	if ( isprint ( ( unsigned char ) c ) )		418506	0					
ANR	418666	Condition	isprint ( ( unsigned char ) c )	2551:9:57409:57433	418506	0	True				
ANR	418667	CallExpression	isprint ( ( unsigned char ) c )		418506	0					
ANR	418668	Callee	isprint		418506	0					
ANR	418669	Identifier	isprint		418506	0					
ANR	418670	ArgumentList	( unsigned char ) c		418506	1					
ANR	418671	Argument	( unsigned char ) c		418506	0					
ANR	418672	CastExpression	( unsigned char ) c		418506	0					
ANR	418673	CastTarget	unsigned char		418506	0					
ANR	418674	Identifier	c		418506	1					
ANR	418675	CompoundStatement		34:36:669:669	418506	1					
ANR	418676	IfStatement	"if ( strchr ( ""<>&^=!"" , c ) == NULL && ( m -> type != FILE_REGEX || strchr ( ""[]().*?^$|{}"" , c ) == NULL ) )"		418506	0					
ANR	418677	Condition	"strchr ( ""<>&^=!"" , c ) == NULL && ( m -> type != FILE_REGEX || strchr ( ""[]().*?^$|{}"" , c ) == NULL )"	2554:10:57502:57622	418506	0	True				
ANR	418678	AndExpression	"strchr ( ""<>&^=!"" , c ) == NULL && ( m -> type != FILE_REGEX || strchr ( ""[]().*?^$|{}"" , c ) == NULL )"		418506	0		&&			
ANR	418679	EqualityExpression	"strchr ( ""<>&^=!"" , c ) == NULL"		418506	0		==			
ANR	418680	CallExpression	"strchr ( ""<>&^=!"" , c )"		418506	0					
ANR	418681	Callee	strchr		418506	0					
ANR	418682	Identifier	strchr		418506	0					
ANR	418683	ArgumentList	"""<>&^=!"""		418506	1					
ANR	418684	Argument	"""<>&^=!"""		418506	0					
ANR	418685	PrimaryExpression	"""<>&^=!"""		418506	0					
ANR	418686	Argument	c		418506	1					
ANR	418687	Identifier	c		418506	0					
ANR	418688	Identifier	NULL		418506	1					
ANR	418689	OrExpression	"m -> type != FILE_REGEX || strchr ( ""[]().*?^$|{}"" , c ) == NULL"		418506	1		||			
ANR	418690	EqualityExpression	m -> type != FILE_REGEX		418506	0		!=			
ANR	418691	PtrMemberAccess	m -> type		418506	0					
ANR	418692	Identifier	m		418506	0					
ANR	418693	Identifier	type		418506	1					
ANR	418694	Identifier	FILE_REGEX		418506	1					
ANR	418695	EqualityExpression	"strchr ( ""[]().*?^$|{}"" , c ) == NULL"		418506	1		==			
ANR	418696	CallExpression	"strchr ( ""[]().*?^$|{}"" , c )"		418506	0					
ANR	418697	Callee	strchr		418506	0					
ANR	418698	Identifier	strchr		418506	0					
ANR	418699	ArgumentList	"""[]().*?^$|{}"""		418506	1					
ANR	418700	Argument	"""[]().*?^$|{}"""		418506	0					
ANR	418701	PrimaryExpression	"""[]().*?^$|{}"""		418506	0					
ANR	418702	Argument	c		418506	1					
ANR	418703	Identifier	c		418506	0					
ANR	418704	Identifier	NULL		418506	1					
ANR	418705	CompoundStatement		40:20:858:858	418506	1					
ANR	418706	Statement	file_magwarn	2558:7:57634:57645	418506	0	True				
ANR	418707	Statement	(	2558:19:57646:57646	418506	1	True				
ANR	418708	Statement	ms	2558:20:57647:57648	418506	2	True				
ANR	418709	Statement	","	2558:22:57649:57649	418506	3	True				
ANR	418710	Statement	"""no """	2558:24:57651:57655	418506	4	True				
ANR	418711	Statement	"""need to escape """	2559:11:57668:57684	418506	5	True				
ANR	418712	Statement	"""`%c'"""	2560:11:57697:57702	418506	6	True				
ANR	418713	Statement	","	2560:17:57703:57703	418506	7	True				
ANR	418714	Statement	c	2560:19:57705:57705	418506	8	True				
ANR	418715	Statement	)	2560:20:57706:57706	418506	9	True				
ANR	418716	ExpressionStatement		2560:21:57707:57707	418506	10	True				
ANR	418717	ElseStatement	else		418506	0					
ANR	418718	CompoundStatement		45:12:962:962	418506	0					
ANR	418719	Statement	file_magwarn	2563:6:57737:57748	418506	0	True				
ANR	418720	Statement	(	2563:18:57749:57749	418506	1	True				
ANR	418721	Statement	ms	2563:19:57750:57751	418506	2	True				
ANR	418722	Statement	","	2563:21:57752:57752	418506	3	True				
ANR	418723	Statement	"""unknown escape sequence: """	2564:10:57764:57790	418506	4	True				
ANR	418724	Statement	"""\\\\%03o"""	2565:10:57802:57809	418506	5	True				
ANR	418725	Statement	","	2565:18:57810:57810	418506	6	True				
ANR	418726	Statement	c	2565:20:57812:57812	418506	7	True				
ANR	418727	Statement	)	2565:21:57813:57813	418506	8	True				
ANR	418728	ExpressionStatement		2565:22:57814:57814	418506	9	True				
ANR	418729	Label	case ' ' :	2570:3:57902:57910	418506	7	True				
ANR	418730	Label	case '\\'' :	2576:3:58017:58026	418506	8	True				
ANR	418731	Label	"case '""' :"	2577:3:58031:58039	418506	9	True				
ANR	418732	Label	case '?' :	2578:3:58044:58052	418506	10	True				
ANR	418733	Label	case '>' :	2581:3:58083:58091	418506	11	True				
ANR	418734	Label	case '<' :	2582:3:58096:58104	418506	12	True				
ANR	418735	Label	case '&' :	2583:3:58109:58117	418506	13	True				
ANR	418736	Label	case '^' :	2584:3:58122:58130	418506	14	True				
ANR	418737	Label	case '=' :	2585:3:58135:58143	418506	15	True				
ANR	418738	Label	case '!' :	2586:3:58148:58156	418506	16	True				
ANR	418739	Label	case '\\\\' :	2588:3:58191:58200	418506	17	True				
ANR	418740	ExpressionStatement	* p ++ = ( char ) c	2589:4:58206:58221	418506	18	True				
ANR	418741	AssignmentExpression	* p ++ = ( char ) c		418506	0		=			
ANR	418742	UnaryOperationExpression	* p ++		418506	0					
ANR	418743	UnaryOperator	*		418506	0					
ANR	418744	PostIncDecOperationExpression	p ++		418506	1					
ANR	418745	Identifier	p		418506	0					
ANR	418746	IncDec	++		418506	1					
ANR	418747	CastExpression	( char ) c		418506	1					
ANR	418748	CastTarget	char		418506	0					
ANR	418749	Identifier	c		418506	1					
ANR	418750	BreakStatement	break ;	2590:4:58227:58232	418506	19	True				
ANR	418751	Label	case 'a' :	2592:3:58238:58246	418506	20	True				
ANR	418752	ExpressionStatement	* p ++ = '\\a'	2593:4:58252:58263	418506	21	True				
ANR	418753	AssignmentExpression	* p ++ = '\\a'		418506	0		=			
ANR	418754	UnaryOperationExpression	* p ++		418506	0					
ANR	418755	UnaryOperator	*		418506	0					
ANR	418756	PostIncDecOperationExpression	p ++		418506	1					
ANR	418757	Identifier	p		418506	0					
ANR	418758	IncDec	++		418506	1					
ANR	418759	PrimaryExpression	'\\a'		418506	1					
ANR	418760	BreakStatement	break ;	2594:4:58269:58274	418506	22	True				
ANR	418761	Label	case 'b' :	2596:3:58280:58288	418506	23	True				
ANR	418762	ExpressionStatement	* p ++ = '\\b'	2597:4:58294:58305	418506	24	True				
ANR	418763	AssignmentExpression	* p ++ = '\\b'		418506	0		=			
ANR	418764	UnaryOperationExpression	* p ++		418506	0					
ANR	418765	UnaryOperator	*		418506	0					
ANR	418766	PostIncDecOperationExpression	p ++		418506	1					
ANR	418767	Identifier	p		418506	0					
ANR	418768	IncDec	++		418506	1					
ANR	418769	PrimaryExpression	'\\b'		418506	1					
ANR	418770	BreakStatement	break ;	2598:4:58311:58316	418506	25	True				
ANR	418771	Label	case 'f' :	2600:3:58322:58330	418506	26	True				
ANR	418772	ExpressionStatement	* p ++ = '\\f'	2601:4:58336:58347	418506	27	True				
ANR	418773	AssignmentExpression	* p ++ = '\\f'		418506	0		=			
ANR	418774	UnaryOperationExpression	* p ++		418506	0					
ANR	418775	UnaryOperator	*		418506	0					
ANR	418776	PostIncDecOperationExpression	p ++		418506	1					
ANR	418777	Identifier	p		418506	0					
ANR	418778	IncDec	++		418506	1					
ANR	418779	PrimaryExpression	'\\f'		418506	1					
ANR	418780	BreakStatement	break ;	2602:4:58353:58358	418506	28	True				
ANR	418781	Label	case 'n' :	2604:3:58364:58372	418506	29	True				
ANR	418782	ExpressionStatement	* p ++ = '\\n'	2605:4:58378:58389	418506	30	True				
ANR	418783	AssignmentExpression	* p ++ = '\\n'		418506	0		=			
ANR	418784	UnaryOperationExpression	* p ++		418506	0					
ANR	418785	UnaryOperator	*		418506	0					
ANR	418786	PostIncDecOperationExpression	p ++		418506	1					
ANR	418787	Identifier	p		418506	0					
ANR	418788	IncDec	++		418506	1					
ANR	418789	PrimaryExpression	'\\n'		418506	1					
ANR	418790	BreakStatement	break ;	2606:4:58395:58400	418506	31	True				
ANR	418791	Label	case 'r' :	2608:3:58406:58414	418506	32	True				
ANR	418792	ExpressionStatement	* p ++ = '\\r'	2609:4:58420:58431	418506	33	True				
ANR	418793	AssignmentExpression	* p ++ = '\\r'		418506	0		=			
ANR	418794	UnaryOperationExpression	* p ++		418506	0					
ANR	418795	UnaryOperator	*		418506	0					
ANR	418796	PostIncDecOperationExpression	p ++		418506	1					
ANR	418797	Identifier	p		418506	0					
ANR	418798	IncDec	++		418506	1					
ANR	418799	PrimaryExpression	'\\r'		418506	1					
ANR	418800	BreakStatement	break ;	2610:4:58437:58442	418506	34	True				
ANR	418801	Label	case 't' :	2612:3:58448:58456	418506	35	True				
ANR	418802	ExpressionStatement	* p ++ = '\\t'	2613:4:58462:58473	418506	36	True				
ANR	418803	AssignmentExpression	* p ++ = '\\t'		418506	0		=			
ANR	418804	UnaryOperationExpression	* p ++		418506	0					
ANR	418805	UnaryOperator	*		418506	0					
ANR	418806	PostIncDecOperationExpression	p ++		418506	1					
ANR	418807	Identifier	p		418506	0					
ANR	418808	IncDec	++		418506	1					
ANR	418809	PrimaryExpression	'\\t'		418506	1					
ANR	418810	BreakStatement	break ;	2614:4:58479:58484	418506	37	True				
ANR	418811	Label	case 'v' :	2616:3:58490:58498	418506	38	True				
ANR	418812	ExpressionStatement	* p ++ = '\\v'	2617:4:58504:58515	418506	39	True				
ANR	418813	AssignmentExpression	* p ++ = '\\v'		418506	0		=			
ANR	418814	UnaryOperationExpression	* p ++		418506	0					
ANR	418815	UnaryOperator	*		418506	0					
ANR	418816	PostIncDecOperationExpression	p ++		418506	1					
ANR	418817	Identifier	p		418506	0					
ANR	418818	IncDec	++		418506	1					
ANR	418819	PrimaryExpression	'\\v'		418506	1					
ANR	418820	BreakStatement	break ;	2618:4:58521:58526	418506	40	True				
ANR	418821	Label	case '0' :	2621:3:58568:58576	418506	41	True				
ANR	418822	Label	case '1' :	2622:3:58581:58589	418506	42	True				
ANR	418823	Label	case '2' :	2623:3:58594:58602	418506	43	True				
ANR	418824	Label	case '3' :	2624:3:58607:58615	418506	44	True				
ANR	418825	Label	case '4' :	2625:3:58620:58628	418506	45	True				
ANR	418826	Label	case '5' :	2626:3:58633:58641	418506	46	True				
ANR	418827	Label	case '6' :	2627:3:58646:58654	418506	47	True				
ANR	418828	Label	case '7' :	2628:3:58659:58667	418506	48	True				
ANR	418829	ExpressionStatement	val = c - '0'	2629:4:58673:58686	418506	49	True				
ANR	418830	AssignmentExpression	val = c - '0'		418506	0		=			
ANR	418831	Identifier	val		418506	0					
ANR	418832	AdditiveExpression	c - '0'		418506	1		-			
ANR	418833	Identifier	c		418506	0					
ANR	418834	PrimaryExpression	'0'		418506	1					
ANR	418835	ExpressionStatement	c = * s ++	2630:4:58692:58700	418506	50	True				
ANR	418836	AssignmentExpression	c = * s ++		418506	0		=			
ANR	418837	Identifier	c		418506	0					
ANR	418838	UnaryOperationExpression	* s ++		418506	1					
ANR	418839	UnaryOperator	*		418506	0					
ANR	418840	PostIncDecOperationExpression	s ++		418506	1					
ANR	418841	Identifier	s		418506	0					
ANR	418842	IncDec	++		418506	1					
ANR	418843	IfStatement	if ( c >= '0' && c <= '7' )		418506	51					
ANR	418844	Condition	c >= '0' && c <= '7'	2631:8:58727:58746	418506	0	True				
ANR	418845	AndExpression	c >= '0' && c <= '7'		418506	0		&&			
ANR	418846	RelationalExpression	c >= '0'		418506	0		>=			
ANR	418847	Identifier	c		418506	0					
ANR	418848	PrimaryExpression	'0'		418506	1					
ANR	418849	RelationalExpression	c <= '7'		418506	1		<=			
ANR	418850	Identifier	c		418506	0					
ANR	418851	PrimaryExpression	'7'		418506	1					
ANR	418852	CompoundStatement		114:30:1982:1982	418506	1					
ANR	418853	ExpressionStatement	val = ( val << 3 ) | ( c - '0' )	2632:5:58756:58784	418506	0	True				
ANR	418854	AssignmentExpression	val = ( val << 3 ) | ( c - '0' )		418506	0		=			
ANR	418855	Identifier	val		418506	0					
ANR	418856	InclusiveOrExpression	( val << 3 ) | ( c - '0' )		418506	1		|			
ANR	418857	ShiftExpression	val << 3		418506	0		<<			
ANR	418858	Identifier	val		418506	0					
ANR	418859	PrimaryExpression	3		418506	1					
ANR	418860	AdditiveExpression	c - '0'		418506	1		-			
ANR	418861	Identifier	c		418506	0					
ANR	418862	PrimaryExpression	'0'		418506	1					
ANR	418863	ExpressionStatement	c = * s ++	2633:5:58791:58799	418506	1	True				
ANR	418864	AssignmentExpression	c = * s ++		418506	0		=			
ANR	418865	Identifier	c		418506	0					
ANR	418866	UnaryOperationExpression	* s ++		418506	1					
ANR	418867	UnaryOperator	*		418506	0					
ANR	418868	PostIncDecOperationExpression	s ++		418506	1					
ANR	418869	Identifier	s		418506	0					
ANR	418870	IncDec	++		418506	1					
ANR	418871	IfStatement	if ( c >= '0' && c <= '7' )		418506	2					
ANR	418872	Condition	c >= '0' && c <= '7'	2634:9:58827:58846	418506	0	True				
ANR	418873	AndExpression	c >= '0' && c <= '7'		418506	0		&&			
ANR	418874	RelationalExpression	c >= '0'		418506	0		>=			
ANR	418875	Identifier	c		418506	0					
ANR	418876	PrimaryExpression	'0'		418506	1					
ANR	418877	RelationalExpression	c <= '7'		418506	1		<=			
ANR	418878	Identifier	c		418506	0					
ANR	418879	PrimaryExpression	'7'		418506	1					
ANR	418880	ExpressionStatement	val = ( val << 3 ) | ( c - '0' )	2635:6:58855:58881	418506	1	True				
ANR	418881	AssignmentExpression	val = ( val << 3 ) | ( c - '0' )		418506	0		=			
ANR	418882	Identifier	val		418506	0					
ANR	418883	InclusiveOrExpression	( val << 3 ) | ( c - '0' )		418506	1		|			
ANR	418884	ShiftExpression	val << 3		418506	0		<<			
ANR	418885	Identifier	val		418506	0					
ANR	418886	PrimaryExpression	3		418506	1					
ANR	418887	AdditiveExpression	c - '0'		418506	1		-			
ANR	418888	Identifier	c		418506	0					
ANR	418889	PrimaryExpression	'0'		418506	1					
ANR	418890	ElseStatement	else		418506	0					
ANR	418891	ExpressionStatement	-- s	2637:6:58899:58902	418506	0	True				
ANR	418892	UnaryExpression	-- s		418506	0					
ANR	418893	IncDec	--		418506	0					
ANR	418894	Identifier	s		418506	1					
ANR	418895	ElseStatement	else		418506	0					
ANR	418896	ExpressionStatement	-- s	2640:5:58924:58927	418506	0	True				
ANR	418897	UnaryExpression	-- s		418506	0					
ANR	418898	IncDec	--		418506	0					
ANR	418899	Identifier	s		418506	1					
ANR	418900	ExpressionStatement	* p ++ = ( char ) val	2641:4:58933:58949	418506	52	True				
ANR	418901	AssignmentExpression	* p ++ = ( char ) val		418506	0		=			
ANR	418902	UnaryOperationExpression	* p ++		418506	0					
ANR	418903	UnaryOperator	*		418506	0					
ANR	418904	PostIncDecOperationExpression	p ++		418506	1					
ANR	418905	Identifier	p		418506	0					
ANR	418906	IncDec	++		418506	1					
ANR	418907	CastExpression	( char ) val		418506	1					
ANR	418908	CastTarget	char		418506	0					
ANR	418909	Identifier	val		418506	1					
ANR	418910	BreakStatement	break ;	2642:4:58955:58960	418506	53	True				
ANR	418911	Label	case 'x' :	2645:3:59001:59009	418506	54	True				
ANR	418912	ExpressionStatement	val = 'x'	2646:4:59015:59024	418506	55	True				
ANR	418913	AssignmentExpression	val = 'x'		418506	0		=			
ANR	418914	Identifier	val		418506	0					
ANR	418915	PrimaryExpression	'x'		418506	1					
ANR	418916	ExpressionStatement	c = hextoint ( * s ++ )	2647:4:59057:59075	418506	56	True				
ANR	418917	AssignmentExpression	c = hextoint ( * s ++ )		418506	0		=			
ANR	418918	Identifier	c		418506	0					
ANR	418919	CallExpression	hextoint ( * s ++ )		418506	1					
ANR	418920	Callee	hextoint		418506	0					
ANR	418921	Identifier	hextoint		418506	0					
ANR	418922	ArgumentList	* s ++		418506	1					
ANR	418923	Argument	* s ++		418506	0					
ANR	418924	UnaryOperationExpression	* s ++		418506	0					
ANR	418925	UnaryOperator	*		418506	0					
ANR	418926	PostIncDecOperationExpression	s ++		418506	1					
ANR	418927	Identifier	s		418506	0					
ANR	418928	IncDec	++		418506	1					
ANR	418929	IfStatement	if ( c >= 0 )		418506	57					
ANR	418930	Condition	c >= 0	2648:8:59105:59110	418506	0	True				
ANR	418931	RelationalExpression	c >= 0		418506	0		>=			
ANR	418932	Identifier	c		418506	0					
ANR	418933	PrimaryExpression	0		418506	1					
ANR	418934	CompoundStatement		131:16:2346:2346	418506	1					
ANR	418935	ExpressionStatement	val = c	2649:5:59120:59127	418506	0	True				
ANR	418936	AssignmentExpression	val = c		418506	0		=			
ANR	418937	Identifier	val		418506	0					
ANR	418938	Identifier	c		418506	1					
ANR	418939	ExpressionStatement	c = hextoint ( * s ++ )	2650:5:59134:59152	418506	1	True				
ANR	418940	AssignmentExpression	c = hextoint ( * s ++ )		418506	0		=			
ANR	418941	Identifier	c		418506	0					
ANR	418942	CallExpression	hextoint ( * s ++ )		418506	1					
ANR	418943	Callee	hextoint		418506	0					
ANR	418944	Identifier	hextoint		418506	0					
ANR	418945	ArgumentList	* s ++		418506	1					
ANR	418946	Argument	* s ++		418506	0					
ANR	418947	UnaryOperationExpression	* s ++		418506	0					
ANR	418948	UnaryOperator	*		418506	0					
ANR	418949	PostIncDecOperationExpression	s ++		418506	1					
ANR	418950	Identifier	s		418506	0					
ANR	418951	IncDec	++		418506	1					
ANR	418952	IfStatement	if ( c >= 0 )		418506	2					
ANR	418953	Condition	c >= 0	2651:9:59163:59168	418506	0	True				
ANR	418954	RelationalExpression	c >= 0		418506	0		>=			
ANR	418955	Identifier	c		418506	0					
ANR	418956	PrimaryExpression	0		418506	1					
ANR	418957	ExpressionStatement	val = ( val << 4 ) + c	2652:6:59177:59197	418506	1	True				
ANR	418958	AssignmentExpression	val = ( val << 4 ) + c		418506	0		=			
ANR	418959	Identifier	val		418506	0					
ANR	418960	AdditiveExpression	( val << 4 ) + c		418506	1		+			
ANR	418961	ShiftExpression	val << 4		418506	0		<<			
ANR	418962	Identifier	val		418506	0					
ANR	418963	PrimaryExpression	4		418506	1					
ANR	418964	Identifier	c		418506	1					
ANR	418965	ElseStatement	else		418506	0					
ANR	418966	ExpressionStatement	-- s	2654:6:59215:59218	418506	0	True				
ANR	418967	UnaryExpression	-- s		418506	0					
ANR	418968	IncDec	--		418506	0					
ANR	418969	Identifier	s		418506	1					
ANR	418970	ElseStatement	else		418506	0					
ANR	418971	ExpressionStatement	-- s	2656:5:59236:59239	418506	0	True				
ANR	418972	UnaryExpression	-- s		418506	0					
ANR	418973	IncDec	--		418506	0					
ANR	418974	Identifier	s		418506	1					
ANR	418975	ExpressionStatement	* p ++ = ( char ) val	2657:4:59245:59261	418506	58	True				
ANR	418976	AssignmentExpression	* p ++ = ( char ) val		418506	0		=			
ANR	418977	UnaryOperationExpression	* p ++		418506	0					
ANR	418978	UnaryOperator	*		418506	0					
ANR	418979	PostIncDecOperationExpression	p ++		418506	1					
ANR	418980	Identifier	p		418506	0					
ANR	418981	IncDec	++		418506	1					
ANR	418982	CastExpression	( char ) val		418506	1					
ANR	418983	CastTarget	char		418506	0					
ANR	418984	Identifier	val		418506	1					
ANR	418985	BreakStatement	break ;	2658:4:59267:59272	418506	59	True				
ANR	418986	ElseStatement	else		418506	0					
ANR	418987	ExpressionStatement	* p ++ = ( char ) c	2661:3:59291:59305	418506	0	True				
ANR	418988	AssignmentExpression	* p ++ = ( char ) c		418506	0		=			
ANR	418989	UnaryOperationExpression	* p ++		418506	0					
ANR	418990	UnaryOperator	*		418506	0					
ANR	418991	PostIncDecOperationExpression	p ++		418506	1					
ANR	418992	Identifier	p		418506	0					
ANR	418993	IncDec	++		418506	1					
ANR	418994	CastExpression	( char ) c		418506	1					
ANR	418995	CastTarget	char		418506	0					
ANR	418996	Identifier	c		418506	1					
ANR	418997	Label	out :	2663:0:59310:59313	418506	8	True				
ANR	418998	Identifier	out		418506	0					
ANR	418999	ExpressionStatement	* p = '\\0'	2664:1:59316:59325	418506	9	True				
ANR	419000	AssignmentExpression	* p = '\\0'		418506	0		=			
ANR	419001	UnaryOperationExpression	* p		418506	0					
ANR	419002	UnaryOperator	*		418506	0					
ANR	419003	Identifier	p		418506	1					
ANR	419004	PrimaryExpression	'\\0'		418506	1					
ANR	419005	Statement	m	2665:1:59328:59328	418506	10	True				
ANR	419006	Statement	->	2665:2:59329:59330	418506	11	True				
ANR	419007	Statement	vallen	2665:4:59331:59336	418506	12	True				
ANR	419008	Statement	=	2665:11:59338:59338	418506	13	True				
ANR	419009	Statement	CAST	2665:13:59340:59343	418506	14	True				
ANR	419010	Statement	(	2665:17:59344:59344	418506	15	True				
ANR	419011	Statement	unsigned	2665:18:59345:59352	418506	16	True				
ANR	419012	Statement	char	2665:27:59354:59357	418506	17	True				
ANR	419013	Statement	","	2665:31:59358:59358	418506	18	True				
ANR	419014	Statement	(	2665:33:59360:59360	418506	19	True				
ANR	419015	Statement	p	2665:34:59361:59361	418506	20	True				
ANR	419016	Statement	-	2665:36:59363:59363	418506	21	True				
ANR	419017	Statement	origp	2665:38:59365:59369	418506	22	True				
ANR	419018	Statement	)	2665:43:59370:59370	418506	23	True				
ANR	419019	Statement	)	2665:44:59371:59371	418506	24	True				
ANR	419020	ExpressionStatement		2665:45:59372:59372	418506	25	True				
ANR	419021	IfStatement	if ( m -> type == FILE_PSTRING )		418506	26					
ANR	419022	Condition	m -> type == FILE_PSTRING	2666:5:59379:59401	418506	0	True				
ANR	419023	EqualityExpression	m -> type == FILE_PSTRING		418506	0		==			
ANR	419024	PtrMemberAccess	m -> type		418506	0					
ANR	419025	Identifier	m		418506	0					
ANR	419026	Identifier	type		418506	1					
ANR	419027	Identifier	FILE_PSTRING		418506	1					
ANR	419028	ExpressionStatement	m -> vallen += ( unsigned char ) file_pstring_length_size ( m )	2667:2:59406:59461	418506	1	True				
ANR	419029	AssignmentExpression	m -> vallen += ( unsigned char ) file_pstring_length_size ( m )		418506	0		+=			
ANR	419030	PtrMemberAccess	m -> vallen		418506	0					
ANR	419031	Identifier	m		418506	0					
ANR	419032	Identifier	vallen		418506	1					
ANR	419033	CastExpression	( unsigned char ) file_pstring_length_size ( m )		418506	1					
ANR	419034	CastTarget	unsigned char		418506	0					
ANR	419035	CallExpression	file_pstring_length_size ( m )		418506	1					
ANR	419036	Callee	file_pstring_length_size		418506	0					
ANR	419037	Identifier	file_pstring_length_size		418506	0					
ANR	419038	ArgumentList	m		418506	1					
ANR	419039	Argument	m		418506	0					
ANR	419040	Identifier	m		418506	0					
ANR	419041	ReturnStatement	return s ;	2668:1:59464:59472	418506	27	True				
ANR	419042	Identifier	s		418506	0					
ANR	419043	ReturnType	const char *		418506	1					
ANR	419044	Identifier	getstr		418506	2					
ANR	419045	ParameterList	"struct magic_set * ms , struct magic * m , const char * s , int warn"		418506	3					
ANR	419046	Parameter	struct magic_set * ms	2517:7:56702:56721	418506	0	True				
ANR	419047	ParameterType	struct magic_set *		418506	0					
ANR	419048	Identifier	ms		418506	1					
ANR	419049	Parameter	struct magic * m	2517:29:56724:56738	418506	1	True				
ANR	419050	ParameterType	struct magic *		418506	0					
ANR	419051	Identifier	m		418506	1					
ANR	419052	Parameter	const char * s	2517:46:56741:56753	418506	2	True				
ANR	419053	ParameterType	const char *		418506	0					
ANR	419054	Identifier	s		418506	1					
ANR	419055	Parameter	int warn	2517:61:56756:56763	418506	3	True				
ANR	419056	ParameterType	int		418506	0					
ANR	419057	Identifier	warn		418506	1					
ANR	419058	CFGEntryNode	ENTRY		418506		True				
ANR	419059	CFGExitNode	EXIT		418506		True				
ANR	419060	Symbol	pmax		418506						
ANR	419061	Symbol	* s ++		418506						
ANR	419062	Symbol	origs		418506						
ANR	419063	Symbol	isprint		418506						
ANR	419064	Symbol	strchr		418506						
ANR	419065	Symbol	plen		418506						
ANR	419066	Symbol	m -> type		418506						
ANR	419067	Symbol	file_pstring_length_size		418506						
ANR	419068	Symbol	origp		418506						
ANR	419069	Symbol	val		418506						
ANR	419070	Symbol	c		418506						
ANR	419071	Symbol	NULL		418506						
ANR	419072	Symbol	m -> value		418506						
ANR	419073	Symbol	FILE_REGEX		418506						
ANR	419074	Symbol	ms		418506						
ANR	419075	Symbol	* p ++		418506						
ANR	419076	Symbol	m -> value . s		418506						
ANR	419077	Symbol	isspace		418506						
ANR	419078	Symbol	FILE_PSTRING		418506						
ANR	419079	Symbol	m		418506						
ANR	419080	Symbol	p		418506						
ANR	419081	Symbol	warn		418506						
ANR	419082	Symbol	hextoint		418506						
ANR	419083	Symbol	s		418506						
ANR	419084	Symbol	* m		418506						
ANR	419085	Symbol	* p		418506						
ANR	419086	Symbol	m -> vallen		418506						
ANR	419087	Function	hextoint	2673:8:59538:59778							
ANR	419088	FunctionDef	hextoint (int c)		419087	0					
ANR	419089	CompoundStatement		2675:0:59558:59778	419087	0					
ANR	419090	IfStatement	if ( ! isascii ( ( unsigned char ) c ) )		419087	0					
ANR	419091	Condition	! isascii ( ( unsigned char ) c )	2676:5:59565:59591	419087	0	True				
ANR	419092	UnaryOperationExpression	! isascii ( ( unsigned char ) c )		419087	0					
ANR	419093	UnaryOperator	!		419087	0					
ANR	419094	CallExpression	isascii ( ( unsigned char ) c )		419087	1					
ANR	419095	Callee	isascii		419087	0					
ANR	419096	Identifier	isascii		419087	0					
ANR	419097	ArgumentList	( unsigned char ) c		419087	1					
ANR	419098	Argument	( unsigned char ) c		419087	0					
ANR	419099	CastExpression	( unsigned char ) c		419087	0					
ANR	419100	CastTarget	unsigned char		419087	0					
ANR	419101	Identifier	c		419087	1					
ANR	419102	ReturnStatement	return - 1 ;	2677:2:59596:59605	419087	1	True				
ANR	419103	UnaryOperationExpression	- 1		419087	0					
ANR	419104	UnaryOperator	-		419087	0					
ANR	419105	PrimaryExpression	1		419087	1					
ANR	419106	IfStatement	if ( isdigit ( ( unsigned char ) c ) )		419087	1					
ANR	419107	Condition	isdigit ( ( unsigned char ) c )	2678:5:59612:59637	419087	0	True				
ANR	419108	CallExpression	isdigit ( ( unsigned char ) c )		419087	0					
ANR	419109	Callee	isdigit		419087	0					
ANR	419110	Identifier	isdigit		419087	0					
ANR	419111	ArgumentList	( unsigned char ) c		419087	1					
ANR	419112	Argument	( unsigned char ) c		419087	0					
ANR	419113	CastExpression	( unsigned char ) c		419087	0					
ANR	419114	CastTarget	unsigned char		419087	0					
ANR	419115	Identifier	c		419087	1					
ANR	419116	ReturnStatement	return c - '0' ;	2679:2:59642:59656	419087	1	True				
ANR	419117	AdditiveExpression	c - '0'		419087	0		-			
ANR	419118	Identifier	c		419087	0					
ANR	419119	PrimaryExpression	'0'		419087	1					
ANR	419120	IfStatement	if ( ( c >= 'a' ) && ( c <= 'f' ) )		419087	2					
ANR	419121	Condition	( c >= 'a' ) && ( c <= 'f' )	2680:5:59663:59686	419087	0	True				
ANR	419122	AndExpression	( c >= 'a' ) && ( c <= 'f' )		419087	0		&&			
ANR	419123	RelationalExpression	c >= 'a'		419087	0		>=			
ANR	419124	Identifier	c		419087	0					
ANR	419125	PrimaryExpression	'a'		419087	1					
ANR	419126	RelationalExpression	c <= 'f'		419087	1		<=			
ANR	419127	Identifier	c		419087	0					
ANR	419128	PrimaryExpression	'f'		419087	1					
ANR	419129	ReturnStatement	return c + 10 - 'a' ;	2681:2:59691:59710	419087	1	True				
ANR	419130	AdditiveExpression	c + 10 - 'a'		419087	0		+			
ANR	419131	Identifier	c		419087	0					
ANR	419132	AdditiveExpression	10 - 'a'		419087	1		-			
ANR	419133	PrimaryExpression	10		419087	0					
ANR	419134	PrimaryExpression	'a'		419087	1					
ANR	419135	IfStatement	if ( ( c >= 'A' ) && ( c <= 'F' ) )		419087	3					
ANR	419136	Condition	( c >= 'A' ) && ( c <= 'F' )	2682:5:59717:59740	419087	0	True				
ANR	419137	AndExpression	( c >= 'A' ) && ( c <= 'F' )		419087	0		&&			
ANR	419138	RelationalExpression	c >= 'A'		419087	0		>=			
ANR	419139	Identifier	c		419087	0					
ANR	419140	PrimaryExpression	'A'		419087	1					
ANR	419141	RelationalExpression	c <= 'F'		419087	1		<=			
ANR	419142	Identifier	c		419087	0					
ANR	419143	PrimaryExpression	'F'		419087	1					
ANR	419144	ReturnStatement	return c + 10 - 'A' ;	2683:2:59745:59764	419087	1	True				
ANR	419145	AdditiveExpression	c + 10 - 'A'		419087	0		+			
ANR	419146	Identifier	c		419087	0					
ANR	419147	AdditiveExpression	10 - 'A'		419087	1		-			
ANR	419148	PrimaryExpression	10		419087	0					
ANR	419149	PrimaryExpression	'A'		419087	1					
ANR	419150	ReturnStatement	return - 1 ;	2684:1:59767:59776	419087	4	True				
ANR	419151	UnaryOperationExpression	- 1		419087	0					
ANR	419152	UnaryOperator	-		419087	0					
ANR	419153	PrimaryExpression	1		419087	1					
ANR	419154	ReturnType	int		419087	1					
ANR	419155	Identifier	hextoint		419087	2					
ANR	419156	ParameterList	int c		419087	3					
ANR	419157	Parameter	int c	2674:9:59551:59555	419087	0	True				
ANR	419158	ParameterType	int		419087	0					
ANR	419159	Identifier	c		419087	1					
ANR	419160	CFGEntryNode	ENTRY		419087		True				
ANR	419161	CFGExitNode	EXIT		419087		True				
ANR	419162	Symbol	c		419087						
ANR	419163	Symbol	isdigit		419087						
ANR	419164	Symbol	isascii		419087						
ANR	419165	Function	file_showstr	2691:10:59849:60635							
ANR	419166	FunctionDef	"file_showstr (FILE * fp , const char * s , size_t len)"		419165	0					
ANR	419167	CompoundStatement		2693:0:59904:60635	419165	0					
ANR	419168	IdentifierDeclStatement	char c ;	2694:1:59907:59913	419165	0	True				
ANR	419169	IdentifierDecl	c		419165	0					
ANR	419170	IdentifierDeclType	char		419165	0					
ANR	419171	Identifier	c		419165	1					
ANR	419172	ForStatement	for ( ; ; )		419165	1					
ANR	419173	CompoundStatement		4:10:21:21	419165	0					
ANR	419174	IfStatement	if ( len == ~0U )		419165	0					
ANR	419175	Condition	len == ~0U	2697:6:59934:59943	419165	0	True				
ANR	419176	EqualityExpression	len == ~0U		419165	0		==			
ANR	419177	Identifier	len		419165	0					
ANR	419178	Identifier	~0U		419165	1					
ANR	419179	CompoundStatement		5:18:41:41	419165	1					
ANR	419180	ExpressionStatement	c = * s ++	2698:3:59951:59959	419165	0	True				
ANR	419181	AssignmentExpression	c = * s ++		419165	0		=			
ANR	419182	Identifier	c		419165	0					
ANR	419183	UnaryOperationExpression	* s ++		419165	1					
ANR	419184	UnaryOperator	*		419165	0					
ANR	419185	PostIncDecOperationExpression	s ++		419165	1					
ANR	419186	Identifier	s		419165	0					
ANR	419187	IncDec	++		419165	1					
ANR	419188	IfStatement	if ( c == '\\0' )		419165	1					
ANR	419189	Condition	c == '\\0'	2699:7:59968:59976	419165	0	True				
ANR	419190	EqualityExpression	c == '\\0'		419165	0		==			
ANR	419191	Identifier	c		419165	0					
ANR	419192	PrimaryExpression	'\\0'		419165	1					
ANR	419193	BreakStatement	break ;	2700:4:59983:59988	419165	1	True				
ANR	419194	ElseStatement	else		419165	0					
ANR	419195	CompoundStatement		10:8:97:97	419165	0					
ANR	419196	IfStatement	if ( len -- == 0 )		419165	0					
ANR	419197	Condition	len -- == 0	2703:7:60011:60020	419165	0	True				
ANR	419198	EqualityExpression	len -- == 0		419165	0		==			
ANR	419199	PostIncDecOperationExpression	len --		419165	0					
ANR	419200	Identifier	len		419165	0					
ANR	419201	IncDec	--		419165	1					
ANR	419202	PrimaryExpression	0		419165	1					
ANR	419203	BreakStatement	break ;	2704:4:60027:60032	419165	1	True				
ANR	419204	ExpressionStatement	c = * s ++	2705:3:60037:60045	419165	1	True				
ANR	419205	AssignmentExpression	c = * s ++		419165	0		=			
ANR	419206	Identifier	c		419165	0					
ANR	419207	UnaryOperationExpression	* s ++		419165	1					
ANR	419208	UnaryOperator	*		419165	0					
ANR	419209	PostIncDecOperationExpression	s ++		419165	1					
ANR	419210	Identifier	s		419165	0					
ANR	419211	IncDec	++		419165	1					
ANR	419212	IfStatement	if ( c >= 040 && c <= 0176 )		419165	1					
ANR	419213	Condition	c >= 040 && c <= 0176	2707:6:60057:60077	419165	0	True				
ANR	419214	AndExpression	c >= 040 && c <= 0176		419165	0		&&			
ANR	419215	RelationalExpression	c >= 040		419165	0		>=			
ANR	419216	Identifier	c		419165	0					
ANR	419217	PrimaryExpression	040		419165	1					
ANR	419218	RelationalExpression	c <= 0176		419165	1		<=			
ANR	419219	Identifier	c		419165	0					
ANR	419220	PrimaryExpression	0176		419165	1					
ANR	419221	ExpressionStatement	"( void ) fputc ( c , fp )"	2708:3:60114:60133	419165	1	True				
ANR	419222	CastExpression	"( void ) fputc ( c , fp )"		419165	0					
ANR	419223	CastTarget	void		419165	0					
ANR	419224	CallExpression	"fputc ( c , fp )"		419165	1					
ANR	419225	Callee	fputc		419165	0					
ANR	419226	Identifier	fputc		419165	0					
ANR	419227	ArgumentList	c		419165	1					
ANR	419228	Argument	c		419165	0					
ANR	419229	Identifier	c		419165	0					
ANR	419230	Argument	fp		419165	1					
ANR	419231	Identifier	fp		419165	0					
ANR	419232	ElseStatement	else		419165	0					
ANR	419233	CompoundStatement		17:7:237:237	419165	0					
ANR	419234	ExpressionStatement	"( void ) fputc ( '\\\\' , fp )"	2710:3:60147:60169	419165	0	True				
ANR	419235	CastExpression	"( void ) fputc ( '\\\\' , fp )"		419165	0					
ANR	419236	CastTarget	void		419165	0					
ANR	419237	CallExpression	"fputc ( '\\\\' , fp )"		419165	1					
ANR	419238	Callee	fputc		419165	0					
ANR	419239	Identifier	fputc		419165	0					
ANR	419240	ArgumentList	'\\\\'		419165	1					
ANR	419241	Argument	'\\\\'		419165	0					
ANR	419242	PrimaryExpression	'\\\\'		419165	0					
ANR	419243	Argument	fp		419165	1					
ANR	419244	Identifier	fp		419165	0					
ANR	419245	SwitchStatement	switch ( c )		419165	1					
ANR	419246	Condition	c	2711:11:60182:60182	419165	0	True				
ANR	419247	Identifier	c		419165	0					
ANR	419248	CompoundStatement		19:14:280:280	419165	1					
ANR	419249	Label	case '\\a' :	2712:3:60190:60199	419165	0	True				
ANR	419250	ExpressionStatement	"( void ) fputc ( 'a' , fp )"	2713:4:60205:60226	419165	1	True				
ANR	419251	CastExpression	"( void ) fputc ( 'a' , fp )"		419165	0					
ANR	419252	CastTarget	void		419165	0					
ANR	419253	CallExpression	"fputc ( 'a' , fp )"		419165	1					
ANR	419254	Callee	fputc		419165	0					
ANR	419255	Identifier	fputc		419165	0					
ANR	419256	ArgumentList	'a'		419165	1					
ANR	419257	Argument	'a'		419165	0					
ANR	419258	PrimaryExpression	'a'		419165	0					
ANR	419259	Argument	fp		419165	1					
ANR	419260	Identifier	fp		419165	0					
ANR	419261	BreakStatement	break ;	2714:4:60232:60237	419165	2	True				
ANR	419262	Label	case '\\b' :	2716:3:60243:60252	419165	3	True				
ANR	419263	ExpressionStatement	"( void ) fputc ( 'b' , fp )"	2717:4:60258:60279	419165	4	True				
ANR	419264	CastExpression	"( void ) fputc ( 'b' , fp )"		419165	0					
ANR	419265	CastTarget	void		419165	0					
ANR	419266	CallExpression	"fputc ( 'b' , fp )"		419165	1					
ANR	419267	Callee	fputc		419165	0					
ANR	419268	Identifier	fputc		419165	0					
ANR	419269	ArgumentList	'b'		419165	1					
ANR	419270	Argument	'b'		419165	0					
ANR	419271	PrimaryExpression	'b'		419165	0					
ANR	419272	Argument	fp		419165	1					
ANR	419273	Identifier	fp		419165	0					
ANR	419274	BreakStatement	break ;	2718:4:60285:60290	419165	5	True				
ANR	419275	Label	case '\\f' :	2720:3:60296:60305	419165	6	True				
ANR	419276	ExpressionStatement	"( void ) fputc ( 'f' , fp )"	2721:4:60311:60332	419165	7	True				
ANR	419277	CastExpression	"( void ) fputc ( 'f' , fp )"		419165	0					
ANR	419278	CastTarget	void		419165	0					
ANR	419279	CallExpression	"fputc ( 'f' , fp )"		419165	1					
ANR	419280	Callee	fputc		419165	0					
ANR	419281	Identifier	fputc		419165	0					
ANR	419282	ArgumentList	'f'		419165	1					
ANR	419283	Argument	'f'		419165	0					
ANR	419284	PrimaryExpression	'f'		419165	0					
ANR	419285	Argument	fp		419165	1					
ANR	419286	Identifier	fp		419165	0					
ANR	419287	BreakStatement	break ;	2722:4:60338:60343	419165	8	True				
ANR	419288	Label	case '\\n' :	2724:3:60349:60358	419165	9	True				
ANR	419289	ExpressionStatement	"( void ) fputc ( 'n' , fp )"	2725:4:60364:60385	419165	10	True				
ANR	419290	CastExpression	"( void ) fputc ( 'n' , fp )"		419165	0					
ANR	419291	CastTarget	void		419165	0					
ANR	419292	CallExpression	"fputc ( 'n' , fp )"		419165	1					
ANR	419293	Callee	fputc		419165	0					
ANR	419294	Identifier	fputc		419165	0					
ANR	419295	ArgumentList	'n'		419165	1					
ANR	419296	Argument	'n'		419165	0					
ANR	419297	PrimaryExpression	'n'		419165	0					
ANR	419298	Argument	fp		419165	1					
ANR	419299	Identifier	fp		419165	0					
ANR	419300	BreakStatement	break ;	2726:4:60391:60396	419165	11	True				
ANR	419301	Label	case '\\r' :	2728:3:60402:60411	419165	12	True				
ANR	419302	ExpressionStatement	"( void ) fputc ( 'r' , fp )"	2729:4:60417:60438	419165	13	True				
ANR	419303	CastExpression	"( void ) fputc ( 'r' , fp )"		419165	0					
ANR	419304	CastTarget	void		419165	0					
ANR	419305	CallExpression	"fputc ( 'r' , fp )"		419165	1					
ANR	419306	Callee	fputc		419165	0					
ANR	419307	Identifier	fputc		419165	0					
ANR	419308	ArgumentList	'r'		419165	1					
ANR	419309	Argument	'r'		419165	0					
ANR	419310	PrimaryExpression	'r'		419165	0					
ANR	419311	Argument	fp		419165	1					
ANR	419312	Identifier	fp		419165	0					
ANR	419313	BreakStatement	break ;	2730:4:60444:60449	419165	14	True				
ANR	419314	Label	case '\\t' :	2732:3:60455:60464	419165	15	True				
ANR	419315	ExpressionStatement	"( void ) fputc ( 't' , fp )"	2733:4:60470:60491	419165	16	True				
ANR	419316	CastExpression	"( void ) fputc ( 't' , fp )"		419165	0					
ANR	419317	CastTarget	void		419165	0					
ANR	419318	CallExpression	"fputc ( 't' , fp )"		419165	1					
ANR	419319	Callee	fputc		419165	0					
ANR	419320	Identifier	fputc		419165	0					
ANR	419321	ArgumentList	't'		419165	1					
ANR	419322	Argument	't'		419165	0					
ANR	419323	PrimaryExpression	't'		419165	0					
ANR	419324	Argument	fp		419165	1					
ANR	419325	Identifier	fp		419165	0					
ANR	419326	BreakStatement	break ;	2734:4:60497:60502	419165	17	True				
ANR	419327	Label	case '\\v' :	2736:3:60508:60517	419165	18	True				
ANR	419328	ExpressionStatement	"( void ) fputc ( 'v' , fp )"	2737:4:60523:60544	419165	19	True				
ANR	419329	CastExpression	"( void ) fputc ( 'v' , fp )"		419165	0					
ANR	419330	CastTarget	void		419165	0					
ANR	419331	CallExpression	"fputc ( 'v' , fp )"		419165	1					
ANR	419332	Callee	fputc		419165	0					
ANR	419333	Identifier	fputc		419165	0					
ANR	419334	ArgumentList	'v'		419165	1					
ANR	419335	Argument	'v'		419165	0					
ANR	419336	PrimaryExpression	'v'		419165	0					
ANR	419337	Argument	fp		419165	1					
ANR	419338	Identifier	fp		419165	0					
ANR	419339	BreakStatement	break ;	2738:4:60550:60555	419165	20	True				
ANR	419340	Label	default :	2740:3:60561:60568	419165	21	True				
ANR	419341	Identifier	default		419165	0					
ANR	419342	ExpressionStatement	"( void ) fprintf ( fp , ""%.3o"" , c & 0377 )"	2741:4:60574:60610	419165	22	True				
ANR	419343	CastExpression	"( void ) fprintf ( fp , ""%.3o"" , c & 0377 )"		419165	0					
ANR	419344	CastTarget	void		419165	0					
ANR	419345	CallExpression	"fprintf ( fp , ""%.3o"" , c & 0377 )"		419165	1					
ANR	419346	Callee	fprintf		419165	0					
ANR	419347	Identifier	fprintf		419165	0					
ANR	419348	ArgumentList	fp		419165	1					
ANR	419349	Argument	fp		419165	0					
ANR	419350	Identifier	fp		419165	0					
ANR	419351	Argument	"""%.3o"""		419165	1					
ANR	419352	PrimaryExpression	"""%.3o"""		419165	0					
ANR	419353	Argument	c & 0377		419165	2					
ANR	419354	BitAndExpression	c & 0377		419165	0		&			
ANR	419355	Identifier	c		419165	0					
ANR	419356	PrimaryExpression	0377		419165	1					
ANR	419357	BreakStatement	break ;	2742:4:60616:60621	419165	23	True				
ANR	419358	ReturnType	void		419165	1					
ANR	419359	Identifier	file_showstr		419165	2					
ANR	419360	ParameterList	"FILE * fp , const char * s , size_t len"		419165	3					
ANR	419361	Parameter	FILE * fp	2692:13:59867:59874	419165	0	True				
ANR	419362	ParameterType	FILE *		419165	0					
ANR	419363	Identifier	fp		419165	1					
ANR	419364	Parameter	const char * s	2692:23:59877:59889	419165	1	True				
ANR	419365	ParameterType	const char *		419165	0					
ANR	419366	Identifier	s		419165	1					
ANR	419367	Parameter	size_t len	2692:38:59892:59901	419165	2	True				
ANR	419368	ParameterType	size_t		419165	0					
ANR	419369	Identifier	len		419165	1					
ANR	419370	CFGEntryNode	ENTRY		419165		True				
ANR	419371	CFGExitNode	EXIT		419165		True				
ANR	419372	InfiniteForNode	true		419165		True				
ANR	419373	Symbol	* s ++		419165						
ANR	419374	Symbol	~0U		419165						
ANR	419375	Symbol	s		419165						
ANR	419376	Symbol	c		419165						
ANR	419377	Symbol	len		419165						
ANR	419378	Symbol	fp		419165						
ANR	419379	Function	eatsize	2751:8:60710:61015							
ANR	419380	FunctionDef	eatsize (const char * * p)		419379	0					
ANR	419381	CompoundStatement		2753:0:60739:61015	419379	0					
ANR	419382	IdentifierDeclStatement	const char * l = * p ;	2754:1:60742:60760	419379	0	True				
ANR	419383	IdentifierDecl	* l = * p		419379	0					
ANR	419384	IdentifierDeclType	const char *		419379	0					
ANR	419385	Identifier	l		419379	1					
ANR	419386	AssignmentExpression	* l = * p		419379	2		=			
ANR	419387	Identifier	l		419379	0					
ANR	419388	UnaryOperationExpression	* p		419379	1					
ANR	419389	UnaryOperator	*		419379	0					
ANR	419390	Identifier	p		419379	1					
ANR	419391	IfStatement	if ( LOWCASE ( * l ) == 'u' )		419379	1					
ANR	419392	Condition	LOWCASE ( * l ) == 'u'	2756:5:60768:60785	419379	0	True				
ANR	419393	EqualityExpression	LOWCASE ( * l ) == 'u'		419379	0		==			
ANR	419394	CallExpression	LOWCASE ( * l )		419379	0					
ANR	419395	Callee	LOWCASE		419379	0					
ANR	419396	Identifier	LOWCASE		419379	0					
ANR	419397	ArgumentList	* l		419379	1					
ANR	419398	Argument	* l		419379	0					
ANR	419399	UnaryOperationExpression	* l		419379	0					
ANR	419400	UnaryOperator	*		419379	0					
ANR	419401	Identifier	l		419379	1					
ANR	419402	PrimaryExpression	'u'		419379	1					
ANR	419403	ExpressionStatement	l ++	2757:2:60791:60794	419379	1	True				
ANR	419404	PostIncDecOperationExpression	l ++		419379	0					
ANR	419405	Identifier	l		419379	0					
ANR	419406	IncDec	++		419379	1					
ANR	419407	SwitchStatement	switch ( LOWCASE ( * l ) )		419379	2					
ANR	419408	Condition	LOWCASE ( * l )	2759:9:60806:60816	419379	0	True				
ANR	419409	CallExpression	LOWCASE ( * l )		419379	0					
ANR	419410	Callee	LOWCASE		419379	0					
ANR	419411	Identifier	LOWCASE		419379	0					
ANR	419412	ArgumentList	* l		419379	1					
ANR	419413	Argument	* l		419379	0					
ANR	419414	UnaryOperationExpression	* l		419379	0					
ANR	419415	UnaryOperator	*		419379	0					
ANR	419416	Identifier	l		419379	1					
ANR	419417	CompoundStatement		7:22:79:79	419379	1					
ANR	419418	Label	case 'l' :	2760:1:60822:60830	419379	0	True				
ANR	419419	Label	case 's' :	2761:1:60847:60855	419379	1	True				
ANR	419420	Label	case 'h' :	2762:1:60873:60881	419379	2	True				
ANR	419421	Label	case 'b' :	2763:1:60899:60907	419379	3	True				
ANR	419422	Label	case 'c' :	2764:1:60929:60937	419379	4	True				
ANR	419423	ExpressionStatement	l ++	2765:2:60960:60963	419379	5	True				
ANR	419424	PostIncDecOperationExpression	l ++		419379	0					
ANR	419425	Identifier	l		419379	0					
ANR	419426	IncDec	++		419379	1					
ANR	419427	Label	default :	2767:1:60984:60991	419379	6	True				
ANR	419428	Identifier	default		419379	0					
ANR	419429	BreakStatement	break ;	2768:2:60995:61000	419379	7	True				
ANR	419430	ExpressionStatement	* p = l	2771:1:61007:61013	419379	3	True				
ANR	419431	AssignmentExpression	* p = l		419379	0		=			
ANR	419432	UnaryOperationExpression	* p		419379	0					
ANR	419433	UnaryOperator	*		419379	0					
ANR	419434	Identifier	p		419379	1					
ANR	419435	Identifier	l		419379	1					
ANR	419436	ReturnType	void		419379	1					
ANR	419437	Identifier	eatsize		419379	2					
ANR	419438	ParameterList	const char * * p		419379	3					
ANR	419439	Parameter	const char * * p	2752:8:60723:60736	419379	0	True				
ANR	419440	ParameterType	const char * *		419379	0					
ANR	419441	Identifier	p		419379	1					
ANR	419442	CFGEntryNode	ENTRY		419379		True				
ANR	419443	CFGExitNode	EXIT		419379		True				
ANR	419444	Symbol	p		419379						
ANR	419445	Symbol	LOWCASE		419379						
ANR	419446	Symbol	* l		419379						
ANR	419447	Symbol	* p		419379						
ANR	419448	Symbol	l		419379						
ANR	419449	Function	apprentice_buf	2777:8:61080:61479							
ANR	419450	FunctionDef	"apprentice_buf (struct magic_set * ms , struct magic * buf , size_t len)"		419449	0					
ANR	419451	CompoundStatement		2779:0:61167:61479	419449	0					
ANR	419452	IdentifierDeclStatement	struct magic_map * map ;	2780:1:61170:61191	419449	0	True				
ANR	419453	IdentifierDecl	* map		419449	0					
ANR	419454	IdentifierDeclType	struct magic_map *		419449	0					
ANR	419455	Identifier	map		419449	1					
ANR	419456	Statement	if	2782:1:61195:61196	419449	1	True				
ANR	419457	Statement	(	2782:4:61198:61198	419449	2	True				
ANR	419458	Statement	(	2782:5:61199:61199	419449	3	True				
ANR	419459	Statement	map	2782:6:61200:61202	419449	4	True				
ANR	419460	Statement	=	2782:10:61204:61204	419449	5	True				
ANR	419461	Statement	CAST	2782:12:61206:61209	419449	6	True				
ANR	419462	Statement	(	2782:16:61210:61210	419449	7	True				
ANR	419463	Statement	struct	2782:17:61211:61216	419449	8	True				
ANR	419464	Statement	magic_map	2782:24:61218:61226	419449	9	True				
ANR	419465	Statement	*	2782:34:61228:61228	419449	10	True				
ANR	419466	Statement	","	2782:35:61229:61229	419449	11	True				
ANR	419467	Statement	calloc	2782:37:61231:61236	419449	12	True				
ANR	419468	Statement	(	2782:43:61237:61237	419449	13	True				
ANR	419469	Statement	1	2782:44:61238:61238	419449	14	True				
ANR	419470	Statement	","	2782:45:61239:61239	419449	15	True				
ANR	419471	Statement	sizeof	2782:47:61241:61246	419449	16	True				
ANR	419472	Statement	(	2782:53:61247:61247	419449	17	True				
ANR	419473	Statement	*	2782:54:61248:61248	419449	18	True				
ANR	419474	Statement	map	2782:55:61249:61251	419449	19	True				
ANR	419475	Statement	)	2782:58:61252:61252	419449	20	True				
ANR	419476	Statement	)	2782:59:61253:61253	419449	21	True				
ANR	419477	Statement	)	2782:60:61254:61254	419449	22	True				
ANR	419478	Statement	)	2782:61:61255:61255	419449	23	True				
ANR	419479	Statement	==	2782:63:61257:61258	419449	24	True				
ANR	419480	Statement	NULL	2782:66:61260:61263	419449	25	True				
ANR	419481	Statement	)	2782:70:61264:61264	419449	26	True				
ANR	419482	CompoundStatement		4:72:98:98	419449	27					
ANR	419483	ExpressionStatement	"file_oomem ( ms , sizeof ( * map ) )"	2783:2:61270:61298	419449	0	True				
ANR	419484	CallExpression	"file_oomem ( ms , sizeof ( * map ) )"		419449	0					
ANR	419485	Callee	file_oomem		419449	0					
ANR	419486	Identifier	file_oomem		419449	0					
ANR	419487	ArgumentList	ms		419449	1					
ANR	419488	Argument	ms		419449	0					
ANR	419489	Identifier	ms		419449	0					
ANR	419490	Argument	sizeof ( * map )		419449	1					
ANR	419491	SizeofExpression	sizeof ( * map )		419449	0					
ANR	419492	Sizeof	sizeof		419449	0					
ANR	419493	UnaryOperationExpression	* map		419449	1					
ANR	419494	UnaryOperator	*		419449	0					
ANR	419495	Identifier	map		419449	1					
ANR	419496	ReturnStatement	return NULL ;	2784:2:61302:61313	419449	1	True				
ANR	419497	Identifier	NULL		419449	0					
ANR	419498	ExpressionStatement	map -> len = len	2786:1:61319:61333	419449	28	True				
ANR	419499	AssignmentExpression	map -> len = len		419449	0		=			
ANR	419500	PtrMemberAccess	map -> len		419449	0					
ANR	419501	Identifier	map		419449	0					
ANR	419502	Identifier	len		419449	1					
ANR	419503	Identifier	len		419449	1					
ANR	419504	ExpressionStatement	map -> p = buf	2787:1:61336:61348	419449	29	True				
ANR	419505	AssignmentExpression	map -> p = buf		419449	0		=			
ANR	419506	PtrMemberAccess	map -> p		419449	0					
ANR	419507	Identifier	map		419449	0					
ANR	419508	Identifier	p		419449	1					
ANR	419509	Identifier	buf		419449	1					
ANR	419510	ExpressionStatement	map -> type = MAP_TYPE_USER	2788:1:61351:61376	419449	30	True				
ANR	419511	AssignmentExpression	map -> type = MAP_TYPE_USER		419449	0		=			
ANR	419512	PtrMemberAccess	map -> type		419449	0					
ANR	419513	Identifier	map		419449	0					
ANR	419514	Identifier	type		419449	1					
ANR	419515	Identifier	MAP_TYPE_USER		419449	1					
ANR	419516	IfStatement	"if ( check_buffer ( ms , map , ""buffer"" ) != 0 )"		419449	31					
ANR	419517	Condition	"check_buffer ( ms , map , ""buffer"" ) != 0"	2789:5:61383:61418	419449	0	True				
ANR	419518	EqualityExpression	"check_buffer ( ms , map , ""buffer"" ) != 0"		419449	0		!=			
ANR	419519	CallExpression	"check_buffer ( ms , map , ""buffer"" )"		419449	0					
ANR	419520	Callee	check_buffer		419449	0					
ANR	419521	Identifier	check_buffer		419449	0					
ANR	419522	ArgumentList	ms		419449	1					
ANR	419523	Argument	ms		419449	0					
ANR	419524	Identifier	ms		419449	0					
ANR	419525	Argument	map		419449	1					
ANR	419526	Identifier	map		419449	0					
ANR	419527	Argument	"""buffer"""		419449	2					
ANR	419528	PrimaryExpression	"""buffer"""		419449	0					
ANR	419529	PrimaryExpression	0		419449	1					
ANR	419530	CompoundStatement		11:43:253:253	419449	1					
ANR	419531	ExpressionStatement	apprentice_unmap ( map )	2790:2:61425:61446	419449	0	True				
ANR	419532	CallExpression	apprentice_unmap ( map )		419449	0					
ANR	419533	Callee	apprentice_unmap		419449	0					
ANR	419534	Identifier	apprentice_unmap		419449	0					
ANR	419535	ArgumentList	map		419449	1					
ANR	419536	Argument	map		419449	0					
ANR	419537	Identifier	map		419449	0					
ANR	419538	ReturnStatement	return NULL ;	2791:2:61450:61461	419449	1	True				
ANR	419539	Identifier	NULL		419449	0					
ANR	419540	ReturnStatement	return map ;	2793:1:61467:61477	419449	32	True				
ANR	419541	Identifier	map		419449	0					
ANR	419542	ReturnType	struct magic_map *		419449	1					
ANR	419543	Identifier	apprentice_buf		419449	2					
ANR	419544	ParameterList	"struct magic_set * ms , struct magic * buf , size_t len"		419449	3					
ANR	419545	Parameter	struct magic_set * ms	2778:15:61114:61133	419449	0	True				
ANR	419546	ParameterType	struct magic_set *		419449	0					
ANR	419547	Identifier	ms		419449	1					
ANR	419548	Parameter	struct magic * buf	2778:37:61136:61152	419449	1	True				
ANR	419549	ParameterType	struct magic *		419449	0					
ANR	419550	Identifier	buf		419449	1					
ANR	419551	Parameter	size_t len	2778:56:61155:61164	419449	2	True				
ANR	419552	ParameterType	size_t		419449	0					
ANR	419553	Identifier	len		419449	1					
ANR	419554	CFGEntryNode	ENTRY		419449		True				
ANR	419555	CFGExitNode	EXIT		419449		True				
ANR	419556	Symbol	MAP_TYPE_USER		419449						
ANR	419557	Symbol	buf		419449						
ANR	419558	Symbol	check_buffer		419449						
ANR	419559	Symbol	NULL		419449						
ANR	419560	Symbol	len		419449						
ANR	419561	Symbol	ms		419449						
ANR	419562	Symbol	* map		419449						
ANR	419563	Symbol	map -> p		419449						
ANR	419564	Symbol	map -> len		419449						
ANR	419565	Symbol	map		419449						
ANR	419566	Symbol	map -> type		419449						
ANR	419567	Function	apprentice_map	2800:8:61525:65098							
ANR	419568	FunctionDef	"apprentice_map (struct magic_set * ms , const char * fn)"		419567	0					
ANR	419569	CompoundStatement		2802:0:61597:65098	419567	0					
ANR	419570	IdentifierDeclStatement	uint32_t * ptr ;	2803:1:61600:61613	419567	0	True				
ANR	419571	IdentifierDecl	* ptr		419567	0					
ANR	419572	IdentifierDeclType	uint32_t *		419567	0					
ANR	419573	Identifier	ptr		419567	1					
ANR	419574	IdentifierDeclStatement	"uint32_t version , entries , nentries ;"	2804:1:61616:61651	419567	1	True				
ANR	419575	IdentifierDecl	version		419567	0					
ANR	419576	IdentifierDeclType	uint32_t		419567	0					
ANR	419577	Identifier	version		419567	1					
ANR	419578	IdentifierDecl	entries		419567	1					
ANR	419579	IdentifierDeclType	uint32_t		419567	0					
ANR	419580	Identifier	entries		419567	1					
ANR	419581	IdentifierDecl	nentries		419567	2					
ANR	419582	IdentifierDeclType	uint32_t		419567	0					
ANR	419583	Identifier	nentries		419567	1					
ANR	419584	IdentifierDeclStatement	int needsbyteswap ;	2805:1:61654:61671	419567	2	True				
ANR	419585	IdentifierDecl	needsbyteswap		419567	0					
ANR	419586	IdentifierDeclType	int		419567	0					
ANR	419587	Identifier	needsbyteswap		419567	1					
ANR	419588	IdentifierDeclStatement	char * dbname = NULL ;	2806:1:61674:61693	419567	3	True				
ANR	419589	IdentifierDecl	* dbname = NULL		419567	0					
ANR	419590	IdentifierDeclType	char *		419567	0					
ANR	419591	Identifier	dbname		419567	1					
ANR	419592	AssignmentExpression	* dbname = NULL		419567	2		=			
ANR	419593	Identifier	NULL		419567	0					
ANR	419594	Identifier	NULL		419567	1					
ANR	419595	IdentifierDeclStatement	struct magic_map * map ;	2807:1:61696:61717	419567	4	True				
ANR	419596	IdentifierDecl	* map		419567	0					
ANR	419597	IdentifierDeclType	struct magic_map *		419567	0					
ANR	419598	Identifier	map		419567	1					
ANR	419599	IdentifierDeclStatement	size_t i ;	2808:1:61720:61728	419567	5	True				
ANR	419600	IdentifierDecl	i		419567	0					
ANR	419601	IdentifierDeclType	size_t		419567	0					
ANR	419602	Identifier	i		419567	1					
ANR	419603	IdentifierDeclStatement	php_stream * stream = NULL ;	2809:1:61731:61756	419567	6	True				
ANR	419604	IdentifierDecl	* stream = NULL		419567	0					
ANR	419605	IdentifierDeclType	php_stream *		419567	0					
ANR	419606	Identifier	stream		419567	1					
ANR	419607	AssignmentExpression	* stream = NULL		419567	2		=			
ANR	419608	Identifier	NULL		419567	0					
ANR	419609	Identifier	NULL		419567	1					
ANR	419610	IdentifierDeclStatement	php_stream_statbuf st ;	2810:1:61759:61780	419567	7	True				
ANR	419611	IdentifierDecl	st		419567	0					
ANR	419612	IdentifierDeclType	php_stream_statbuf		419567	0					
ANR	419613	Identifier	st		419567	1					
ANR	419614	Statement	if	2814:1:61786:61787	419567	8	True				
ANR	419615	Statement	(	2814:4:61789:61789	419567	9	True				
ANR	419616	Statement	(	2814:5:61790:61790	419567	10	True				
ANR	419617	Statement	map	2814:6:61791:61793	419567	11	True				
ANR	419618	Statement	=	2814:10:61795:61795	419567	12	True				
ANR	419619	Statement	CAST	2814:12:61797:61800	419567	13	True				
ANR	419620	Statement	(	2814:16:61801:61801	419567	14	True				
ANR	419621	Statement	struct	2814:17:61802:61807	419567	15	True				
ANR	419622	Statement	magic_map	2814:24:61809:61817	419567	16	True				
ANR	419623	Statement	*	2814:34:61819:61819	419567	17	True				
ANR	419624	Statement	","	2814:35:61820:61820	419567	18	True				
ANR	419625	Statement	ecalloc	2814:37:61822:61828	419567	19	True				
ANR	419626	Statement	(	2814:44:61829:61829	419567	20	True				
ANR	419627	Statement	1	2814:45:61830:61830	419567	21	True				
ANR	419628	Statement	","	2814:46:61831:61831	419567	22	True				
ANR	419629	Statement	sizeof	2814:48:61833:61838	419567	23	True				
ANR	419630	Statement	(	2814:54:61839:61839	419567	24	True				
ANR	419631	Statement	*	2814:55:61840:61840	419567	25	True				
ANR	419632	Statement	map	2814:56:61841:61843	419567	26	True				
ANR	419633	Statement	)	2814:59:61844:61844	419567	27	True				
ANR	419634	Statement	)	2814:60:61845:61845	419567	28	True				
ANR	419635	Statement	)	2814:61:61846:61846	419567	29	True				
ANR	419636	Statement	)	2814:62:61847:61847	419567	30	True				
ANR	419637	Statement	==	2814:64:61849:61850	419567	31	True				
ANR	419638	Statement	NULL	2814:67:61852:61855	419567	32	True				
ANR	419639	Statement	)	2814:71:61856:61856	419567	33	True				
ANR	419640	CompoundStatement		13:73:260:260	419567	34					
ANR	419641	ExpressionStatement	"file_oomem ( ms , sizeof ( * map ) )"	2815:2:61862:61890	419567	0	True				
ANR	419642	CallExpression	"file_oomem ( ms , sizeof ( * map ) )"		419567	0					
ANR	419643	Callee	file_oomem		419567	0					
ANR	419644	Identifier	file_oomem		419567	0					
ANR	419645	ArgumentList	ms		419567	1					
ANR	419646	Argument	ms		419567	0					
ANR	419647	Identifier	ms		419567	0					
ANR	419648	Argument	sizeof ( * map )		419567	1					
ANR	419649	SizeofExpression	sizeof ( * map )		419567	0					
ANR	419650	Sizeof	sizeof		419567	0					
ANR	419651	UnaryOperationExpression	* map		419567	1					
ANR	419652	UnaryOperator	*		419567	0					
ANR	419653	Identifier	map		419567	1					
ANR	419654	ReturnStatement	return NULL ;	2816:2:61894:61905	419567	1	True				
ANR	419655	Identifier	NULL		419567	0					
ANR	419656	IfStatement	if ( fn == NULL )		419567	35					
ANR	419657	Condition	fn == NULL	2819:5:61916:61925	419567	0	True				
ANR	419658	EqualityExpression	fn == NULL		419567	0		==			
ANR	419659	Identifier	fn		419567	0					
ANR	419660	Identifier	NULL		419567	1					
ANR	419661	CompoundStatement		18:17:330:330	419567	1					
ANR	419662	ExpressionStatement	map -> p = ( void * ) & php_magic_database	2820:2:61932:61968	419567	0	True				
ANR	419663	AssignmentExpression	map -> p = ( void * ) & php_magic_database		419567	0		=			
ANR	419664	PtrMemberAccess	map -> p		419567	0					
ANR	419665	Identifier	map		419567	0					
ANR	419666	Identifier	p		419567	1					
ANR	419667	CastExpression	( void * ) & php_magic_database		419567	1					
ANR	419668	CastTarget	void *		419567	0					
ANR	419669	UnaryOperationExpression	& php_magic_database		419567	1					
ANR	419670	UnaryOperator	&		419567	0					
ANR	419671	Identifier	php_magic_database		419567	1					
ANR	419672	GotoStatement	goto internal_loaded ;	2821:2:61972:61992	419567	1	True				
ANR	419673	Identifier	internal_loaded		419567	0					
ANR	419674	IfStatement	"if ( php_stream_stat_path_ex ( ( char * ) fn , 0 , & st , NULL ) == SUCCESS )"		419567	36					
ANR	419675	Condition	"php_stream_stat_path_ex ( ( char * ) fn , 0 , & st , NULL ) == SUCCESS"	2827:5:62125:62184	419567	0	True				
ANR	419676	EqualityExpression	"php_stream_stat_path_ex ( ( char * ) fn , 0 , & st , NULL ) == SUCCESS"		419567	0		==			
ANR	419677	CallExpression	"php_stream_stat_path_ex ( ( char * ) fn , 0 , & st , NULL )"		419567	0					
ANR	419678	Callee	php_stream_stat_path_ex		419567	0					
ANR	419679	Identifier	php_stream_stat_path_ex		419567	0					
ANR	419680	ArgumentList	( char * ) fn		419567	1					
ANR	419681	Argument	( char * ) fn		419567	0					
ANR	419682	CastExpression	( char * ) fn		419567	0					
ANR	419683	CastTarget	char *		419567	0					
ANR	419684	Identifier	fn		419567	1					
ANR	419685	Argument	0		419567	1					
ANR	419686	PrimaryExpression	0		419567	0					
ANR	419687	Argument	& st		419567	2					
ANR	419688	UnaryOperationExpression	& st		419567	0					
ANR	419689	UnaryOperator	&		419567	0					
ANR	419690	Identifier	st		419567	1					
ANR	419691	Argument	NULL		419567	3					
ANR	419692	Identifier	NULL		419567	0					
ANR	419693	Identifier	SUCCESS		419567	1					
ANR	419694	CompoundStatement		26:67:589:589	419567	1					
ANR	419695	IfStatement	if ( st . sb . st_mode & S_IFDIR )		419567	0					
ANR	419696	Condition	st . sb . st_mode & S_IFDIR	2828:19:62208:62230	419567	0	True				
ANR	419697	BitAndExpression	st . sb . st_mode & S_IFDIR		419567	0		&			
ANR	419698	MemberAccess	st . sb . st_mode		419567	0					
ANR	419699	MemberAccess	st . sb		419567	0					
ANR	419700	Identifier	st		419567	0					
ANR	419701	Identifier	sb		419567	1					
ANR	419702	Identifier	st_mode		419567	1					
ANR	419703	Identifier	S_IFDIR		419567	1					
ANR	419704	CompoundStatement		27:44:635:635	419567	1					
ANR	419705	ReturnStatement	return NULL ;	2829:23:62258:62269	419567	0	True				
ANR	419706	Identifier	NULL		419567	0					
ANR	419707	ExpressionStatement	"dbname = mkdbname ( ms , fn , 0 )"	2834:1:62306:62334	419567	37	True				
ANR	419708	AssignmentExpression	"dbname = mkdbname ( ms , fn , 0 )"		419567	0		=			
ANR	419709	Identifier	dbname		419567	0					
ANR	419710	CallExpression	"mkdbname ( ms , fn , 0 )"		419567	1					
ANR	419711	Callee	mkdbname		419567	0					
ANR	419712	Identifier	mkdbname		419567	0					
ANR	419713	ArgumentList	ms		419567	1					
ANR	419714	Argument	ms		419567	0					
ANR	419715	Identifier	ms		419567	0					
ANR	419716	Argument	fn		419567	1					
ANR	419717	Identifier	fn		419567	0					
ANR	419718	Argument	0		419567	2					
ANR	419719	PrimaryExpression	0		419567	0					
ANR	419720	IfStatement	if ( dbname == NULL )		419567	38					
ANR	419721	Condition	dbname == NULL	2835:5:62341:62354	419567	0	True				
ANR	419722	EqualityExpression	dbname == NULL		419567	0		==			
ANR	419723	Identifier	dbname		419567	0					
ANR	419724	Identifier	NULL		419567	1					
ANR	419725	GotoStatement	goto error ;	2836:2:62359:62369	419567	1	True				
ANR	419726	Identifier	error		419567	0					
ANR	419727	ExpressionStatement	"stream = php_stream_open_wrapper ( ( char * ) fn , ""rb"" , REPORT_ERRORS , NULL )"	2838:2:62374:62445	419567	39	True				
ANR	419728	AssignmentExpression	"stream = php_stream_open_wrapper ( ( char * ) fn , ""rb"" , REPORT_ERRORS , NULL )"		419567	0		=			
ANR	419729	Identifier	stream		419567	0					
ANR	419730	CallExpression	"php_stream_open_wrapper ( ( char * ) fn , ""rb"" , REPORT_ERRORS , NULL )"		419567	1					
ANR	419731	Callee	php_stream_open_wrapper		419567	0					
ANR	419732	Identifier	php_stream_open_wrapper		419567	0					
ANR	419733	ArgumentList	( char * ) fn		419567	1					
ANR	419734	Argument	( char * ) fn		419567	0					
ANR	419735	CastExpression	( char * ) fn		419567	0					
ANR	419736	CastTarget	char *		419567	0					
ANR	419737	Identifier	fn		419567	1					
ANR	419738	Argument	"""rb"""		419567	1					
ANR	419739	PrimaryExpression	"""rb"""		419567	0					
ANR	419740	Argument	REPORT_ERRORS		419567	2					
ANR	419741	Identifier	REPORT_ERRORS		419567	0					
ANR	419742	Argument	NULL		419567	3					
ANR	419743	Identifier	NULL		419567	0					
ANR	419744	IfStatement	if ( ! stream )		419567	40					
ANR	419745	Condition	! stream	2840:5:62453:62459	419567	0	True				
ANR	419746	UnaryOperationExpression	! stream		419567	0					
ANR	419747	UnaryOperator	!		419567	0					
ANR	419748	Identifier	stream		419567	1					
ANR	419749	CompoundStatement		39:14:864:864	419567	1					
ANR	419750	GotoStatement	goto error ;	2841:2:62466:62476	419567	0	True				
ANR	419751	Identifier	error		419567	0					
ANR	419752	IfStatement	"if ( php_stream_stat ( stream , & st ) < 0 )"		419567	41					
ANR	419753	Condition	"php_stream_stat ( stream , & st ) < 0"	2844:5:62487:62518	419567	0	True				
ANR	419754	RelationalExpression	"php_stream_stat ( stream , & st ) < 0"		419567	0		<			
ANR	419755	CallExpression	"php_stream_stat ( stream , & st )"		419567	0					
ANR	419756	Callee	php_stream_stat		419567	0					
ANR	419757	Identifier	php_stream_stat		419567	0					
ANR	419758	ArgumentList	stream		419567	1					
ANR	419759	Argument	stream		419567	0					
ANR	419760	Identifier	stream		419567	0					
ANR	419761	Argument	& st		419567	1					
ANR	419762	UnaryOperationExpression	& st		419567	0					
ANR	419763	UnaryOperator	&		419567	0					
ANR	419764	Identifier	st		419567	1					
ANR	419765	PrimaryExpression	0		419567	1					
ANR	419766	CompoundStatement		43:39:923:923	419567	1					
ANR	419767	ExpressionStatement	"file_error ( ms , errno , ""cannot stat `%s'"" , dbname )"	2845:2:62525:62574	419567	0	True				
ANR	419768	CallExpression	"file_error ( ms , errno , ""cannot stat `%s'"" , dbname )"		419567	0					
ANR	419769	Callee	file_error		419567	0					
ANR	419770	Identifier	file_error		419567	0					
ANR	419771	ArgumentList	ms		419567	1					
ANR	419772	Argument	ms		419567	0					
ANR	419773	Identifier	ms		419567	0					
ANR	419774	Argument	errno		419567	1					
ANR	419775	Identifier	errno		419567	0					
ANR	419776	Argument	"""cannot stat `%s'"""		419567	2					
ANR	419777	PrimaryExpression	"""cannot stat `%s'"""		419567	0					
ANR	419778	Argument	dbname		419567	3					
ANR	419779	Identifier	dbname		419567	0					
ANR	419780	GotoStatement	goto error ;	2846:2:62578:62588	419567	1	True				
ANR	419781	Identifier	error		419567	0					
ANR	419782	IfStatement	if ( st . sb . st_size < 8 || st . sb . st_size > MAXMAGIC_SIZE )		419567	42					
ANR	419783	Condition	st . sb . st_size < 8 || st . sb . st_size > MAXMAGIC_SIZE	2848:5:62598:62647	419567	0	True				
ANR	419784	OrExpression	st . sb . st_size < 8 || st . sb . st_size > MAXMAGIC_SIZE		419567	0		||			
ANR	419785	RelationalExpression	st . sb . st_size < 8		419567	0		<			
ANR	419786	MemberAccess	st . sb . st_size		419567	0					
ANR	419787	MemberAccess	st . sb		419567	0					
ANR	419788	Identifier	st		419567	0					
ANR	419789	Identifier	sb		419567	1					
ANR	419790	Identifier	st_size		419567	1					
ANR	419791	PrimaryExpression	8		419567	1					
ANR	419792	RelationalExpression	st . sb . st_size > MAXMAGIC_SIZE		419567	1		>			
ANR	419793	MemberAccess	st . sb . st_size		419567	0					
ANR	419794	MemberAccess	st . sb		419567	0					
ANR	419795	Identifier	st		419567	0					
ANR	419796	Identifier	sb		419567	1					
ANR	419797	Identifier	st_size		419567	1					
ANR	419798	Identifier	MAXMAGIC_SIZE		419567	1					
ANR	419799	CompoundStatement		47:57:1052:1052	419567	1					
ANR	419800	ExpressionStatement	"file_error ( ms , 0 , ""file `%s' is too %s"" , dbname , st . sb . st_size < 8 ? ""small"" : ""large"" )"	2849:2:62654:62747	419567	0	True				
ANR	419801	CallExpression	"file_error ( ms , 0 , ""file `%s' is too %s"" , dbname , st . sb . st_size < 8 ? ""small"" : ""large"" )"		419567	0					
ANR	419802	Callee	file_error		419567	0					
ANR	419803	Identifier	file_error		419567	0					
ANR	419804	ArgumentList	ms		419567	1					
ANR	419805	Argument	ms		419567	0					
ANR	419806	Identifier	ms		419567	0					
ANR	419807	Argument	0		419567	1					
ANR	419808	PrimaryExpression	0		419567	0					
ANR	419809	Argument	"""file `%s' is too %s"""		419567	2					
ANR	419810	PrimaryExpression	"""file `%s' is too %s"""		419567	0					
ANR	419811	Argument	dbname		419567	3					
ANR	419812	Identifier	dbname		419567	0					
ANR	419813	Argument	"st . sb . st_size < 8 ? ""small"" : ""large"""		419567	4					
ANR	419814	ConditionalExpression	"st . sb . st_size < 8 ? ""small"" : ""large"""		419567	0					
ANR	419815	Condition	st . sb . st_size < 8		419567	0					
ANR	419816	RelationalExpression	st . sb . st_size < 8		419567	0		<			
ANR	419817	MemberAccess	st . sb . st_size		419567	0					
ANR	419818	MemberAccess	st . sb		419567	0					
ANR	419819	Identifier	st		419567	0					
ANR	419820	Identifier	sb		419567	1					
ANR	419821	Identifier	st_size		419567	1					
ANR	419822	PrimaryExpression	8		419567	1					
ANR	419823	PrimaryExpression	"""small"""		419567	1					
ANR	419824	PrimaryExpression	"""large"""		419567	2					
ANR	419825	GotoStatement	goto error ;	2851:2:62751:62761	419567	1	True				
ANR	419826	Identifier	error		419567	0					
ANR	419827	ExpressionStatement	map -> len = ( size_t ) st . sb . st_size	2854:1:62768:62800	419567	43	True				
ANR	419828	AssignmentExpression	map -> len = ( size_t ) st . sb . st_size		419567	0		=			
ANR	419829	PtrMemberAccess	map -> len		419567	0					
ANR	419830	Identifier	map		419567	0					
ANR	419831	Identifier	len		419567	1					
ANR	419832	CastExpression	( size_t ) st . sb . st_size		419567	1					
ANR	419833	CastTarget	size_t		419567	0					
ANR	419834	MemberAccess	st . sb . st_size		419567	1					
ANR	419835	MemberAccess	st . sb		419567	0					
ANR	419836	Identifier	st		419567	0					
ANR	419837	Identifier	sb		419567	1					
ANR	419838	Identifier	st_size		419567	1					
ANR	419839	Statement	if	2855:1:62803:62804	419567	44	True				
ANR	419840	Statement	(	2855:4:62806:62806	419567	45	True				
ANR	419841	Statement	(	2855:5:62807:62807	419567	46	True				
ANR	419842	Statement	map	2855:6:62808:62810	419567	47	True				
ANR	419843	Statement	->	2855:9:62811:62812	419567	48	True				
ANR	419844	Statement	p	2855:11:62813:62813	419567	49	True				
ANR	419845	Statement	=	2855:13:62815:62815	419567	50	True				
ANR	419846	Statement	CAST	2855:15:62817:62820	419567	51	True				
ANR	419847	Statement	(	2855:19:62821:62821	419567	52	True				
ANR	419848	Statement	void	2855:20:62822:62825	419567	53	True				
ANR	419849	Statement	*	2855:25:62827:62827	419567	54	True				
ANR	419850	Statement	","	2855:26:62828:62828	419567	55	True				
ANR	419851	Statement	emalloc	2855:28:62830:62836	419567	56	True				
ANR	419852	Statement	(	2855:35:62837:62837	419567	57	True				
ANR	419853	Statement	map	2855:36:62838:62840	419567	58	True				
ANR	419854	Statement	->	2855:39:62841:62842	419567	59	True				
ANR	419855	Statement	len	2855:41:62843:62845	419567	60	True				
ANR	419856	Statement	)	2855:44:62846:62846	419567	61	True				
ANR	419857	Statement	)	2855:45:62847:62847	419567	62	True				
ANR	419858	Statement	)	2855:46:62848:62848	419567	63	True				
ANR	419859	Statement	==	2855:48:62850:62851	419567	64	True				
ANR	419860	Statement	NULL	2855:51:62853:62856	419567	65	True				
ANR	419861	Statement	)	2855:55:62857:62857	419567	66	True				
ANR	419862	CompoundStatement		54:57:1261:1261	419567	67					
ANR	419863	ExpressionStatement	"file_oomem ( ms , map -> len )"	2856:2:62863:62887	419567	0	True				
ANR	419864	CallExpression	"file_oomem ( ms , map -> len )"		419567	0					
ANR	419865	Callee	file_oomem		419567	0					
ANR	419866	Identifier	file_oomem		419567	0					
ANR	419867	ArgumentList	ms		419567	1					
ANR	419868	Argument	ms		419567	0					
ANR	419869	Identifier	ms		419567	0					
ANR	419870	Argument	map -> len		419567	1					
ANR	419871	PtrMemberAccess	map -> len		419567	0					
ANR	419872	Identifier	map		419567	0					
ANR	419873	Identifier	len		419567	1					
ANR	419874	GotoStatement	goto error ;	2857:2:62891:62901	419567	1	True				
ANR	419875	Identifier	error		419567	0					
ANR	419876	IfStatement	"if ( php_stream_read ( stream , map -> p , ( size_t ) st . sb . st_size ) != ( size_t ) st . sb . st_size )"		419567	68					
ANR	419877	Condition	"php_stream_read ( stream , map -> p , ( size_t ) st . sb . st_size ) != ( size_t ) st . sb . st_size"	2859:5:62911:62989	419567	0	True				
ANR	419878	EqualityExpression	"php_stream_read ( stream , map -> p , ( size_t ) st . sb . st_size ) != ( size_t ) st . sb . st_size"		419567	0		!=			
ANR	419879	CallExpression	"php_stream_read ( stream , map -> p , ( size_t ) st . sb . st_size )"		419567	0					
ANR	419880	Callee	php_stream_read		419567	0					
ANR	419881	Identifier	php_stream_read		419567	0					
ANR	419882	ArgumentList	stream		419567	1					
ANR	419883	Argument	stream		419567	0					
ANR	419884	Identifier	stream		419567	0					
ANR	419885	Argument	map -> p		419567	1					
ANR	419886	PtrMemberAccess	map -> p		419567	0					
ANR	419887	Identifier	map		419567	0					
ANR	419888	Identifier	p		419567	1					
ANR	419889	Argument	( size_t ) st . sb . st_size		419567	2					
ANR	419890	CastExpression	( size_t ) st . sb . st_size		419567	0					
ANR	419891	CastTarget	size_t		419567	0					
ANR	419892	MemberAccess	st . sb . st_size		419567	1					
ANR	419893	MemberAccess	st . sb		419567	0					
ANR	419894	Identifier	st		419567	0					
ANR	419895	Identifier	sb		419567	1					
ANR	419896	Identifier	st_size		419567	1					
ANR	419897	CastExpression	( size_t ) st . sb . st_size		419567	1					
ANR	419898	CastTarget	size_t		419567	0					
ANR	419899	MemberAccess	st . sb . st_size		419567	1					
ANR	419900	MemberAccess	st . sb		419567	0					
ANR	419901	Identifier	st		419567	0					
ANR	419902	Identifier	sb		419567	1					
ANR	419903	Identifier	st_size		419567	1					
ANR	419904	CompoundStatement		58:86:1394:1394	419567	1					
ANR	419905	ExpressionStatement	file_badread ( ms )	2860:2:62996:63012	419567	0	True				
ANR	419906	CallExpression	file_badread ( ms )		419567	0					
ANR	419907	Callee	file_badread		419567	0					
ANR	419908	Identifier	file_badread		419567	0					
ANR	419909	ArgumentList	ms		419567	1					
ANR	419910	Argument	ms		419567	0					
ANR	419911	Identifier	ms		419567	0					
ANR	419912	GotoStatement	goto error ;	2861:2:63016:63026	419567	1	True				
ANR	419913	Identifier	error		419567	0					
ANR	419914	ExpressionStatement	map -> len = 0	2863:1:63032:63044	419567	69	True				
ANR	419915	AssignmentExpression	map -> len = 0		419567	0		=			
ANR	419916	PtrMemberAccess	map -> len		419567	0					
ANR	419917	Identifier	map		419567	0					
ANR	419918	Identifier	len		419567	1					
ANR	419919	PrimaryExpression	0		419567	1					
ANR	419920	Statement	define	2864:1:63047:63052	419567	70	True				
ANR	419921	Statement	RET	2864:8:63054:63056	419567	71	True				
ANR	419922	Statement	1	2864:12:63058:63058	419567	72	True				
ANR	419923	ExpressionStatement	php_stream_close ( stream )	2866:1:63062:63086	419567	73	True				
ANR	419924	CallExpression	php_stream_close ( stream )		419567	0					
ANR	419925	Callee	php_stream_close		419567	0					
ANR	419926	Identifier	php_stream_close		419567	0					
ANR	419927	ArgumentList	stream		419567	1					
ANR	419928	Argument	stream		419567	0					
ANR	419929	Identifier	stream		419567	0					
ANR	419930	ExpressionStatement	stream = NULL	2867:1:63089:63102	419567	74	True				
ANR	419931	AssignmentExpression	stream = NULL		419567	0		=			
ANR	419932	Identifier	stream		419567	0					
ANR	419933	Identifier	NULL		419567	1					
ANR	419934	Label	internal_loaded :	2869:0:63105:63120	419567	75	True				
ANR	419935	Identifier	internal_loaded		419567	0					
ANR	419936	ExpressionStatement	ptr = ( uint32_t * ) ( void * ) map -> p	2870:1:63123:63155	419567	76	True				
ANR	419937	AssignmentExpression	ptr = ( uint32_t * ) ( void * ) map -> p		419567	0		=			
ANR	419938	Identifier	ptr		419567	0					
ANR	419939	CastExpression	( uint32_t * ) ( void * ) map -> p		419567	1					
ANR	419940	CastTarget	uint32_t *		419567	0					
ANR	419941	CastExpression	( void * ) map -> p		419567	1					
ANR	419942	CastTarget	void *		419567	0					
ANR	419943	PtrMemberAccess	map -> p		419567	1					
ANR	419944	Identifier	map		419567	0					
ANR	419945	Identifier	p		419567	1					
ANR	419946	IfStatement	if ( * ptr != MAGICNO )		419567	77					
ANR	419947	Condition	* ptr != MAGICNO	2871:5:63162:63176	419567	0	True				
ANR	419948	EqualityExpression	* ptr != MAGICNO		419567	0		!=			
ANR	419949	UnaryOperationExpression	* ptr		419567	0					
ANR	419950	UnaryOperator	*		419567	0					
ANR	419951	Identifier	ptr		419567	1					
ANR	419952	Identifier	MAGICNO		419567	1					
ANR	419953	CompoundStatement		70:22:1581:1581	419567	1					
ANR	419954	IfStatement	if ( swap4 ( * ptr ) != MAGICNO )		419567	0					
ANR	419955	Condition	swap4 ( * ptr ) != MAGICNO	2872:6:63187:63208	419567	0	True				
ANR	419956	EqualityExpression	swap4 ( * ptr ) != MAGICNO		419567	0		!=			
ANR	419957	CallExpression	swap4 ( * ptr )		419567	0					
ANR	419958	Callee	swap4		419567	0					
ANR	419959	Identifier	swap4		419567	0					
ANR	419960	ArgumentList	* ptr		419567	1					
ANR	419961	Argument	* ptr		419567	0					
ANR	419962	UnaryOperationExpression	* ptr		419567	0					
ANR	419963	UnaryOperator	*		419567	0					
ANR	419964	Identifier	ptr		419567	1					
ANR	419965	Identifier	MAGICNO		419567	1					
ANR	419966	CompoundStatement		71:30:1613:1613	419567	1					
ANR	419967	ExpressionStatement	"file_error ( ms , 0 , ""bad magic in `%s'"" , dbname )"	2873:3:63216:63262	419567	0	True				
ANR	419968	CallExpression	"file_error ( ms , 0 , ""bad magic in `%s'"" , dbname )"		419567	0					
ANR	419969	Callee	file_error		419567	0					
ANR	419970	Identifier	file_error		419567	0					
ANR	419971	ArgumentList	ms		419567	1					
ANR	419972	Argument	ms		419567	0					
ANR	419973	Identifier	ms		419567	0					
ANR	419974	Argument	0		419567	1					
ANR	419975	PrimaryExpression	0		419567	0					
ANR	419976	Argument	"""bad magic in `%s'"""		419567	2					
ANR	419977	PrimaryExpression	"""bad magic in `%s'"""		419567	0					
ANR	419978	Argument	dbname		419567	3					
ANR	419979	Identifier	dbname		419567	0					
ANR	419980	GotoStatement	goto error ;	2874:3:63267:63277	419567	1	True				
ANR	419981	Identifier	error		419567	0					
ANR	419982	ExpressionStatement	needsbyteswap = 1	2876:2:63285:63302	419567	1	True				
ANR	419983	AssignmentExpression	needsbyteswap = 1		419567	0		=			
ANR	419984	Identifier	needsbyteswap		419567	0					
ANR	419985	PrimaryExpression	1		419567	1					
ANR	419986	ElseStatement	else		419567	0					
ANR	419987	ExpressionStatement	needsbyteswap = 0	2878:2:63314:63331	419567	0	True				
ANR	419988	AssignmentExpression	needsbyteswap = 0		419567	0		=			
ANR	419989	Identifier	needsbyteswap		419567	0					
ANR	419990	PrimaryExpression	0		419567	1					
ANR	419991	IfStatement	if ( needsbyteswap )		419567	78					
ANR	419992	Condition	needsbyteswap	2879:5:63338:63350	419567	0	True				
ANR	419993	Identifier	needsbyteswap		419567	0					
ANR	419994	ExpressionStatement	version = swap4 ( ptr [ 1 ] )	2880:2:63355:63378	419567	1	True				
ANR	419995	AssignmentExpression	version = swap4 ( ptr [ 1 ] )		419567	0		=			
ANR	419996	Identifier	version		419567	0					
ANR	419997	CallExpression	swap4 ( ptr [ 1 ] )		419567	1					
ANR	419998	Callee	swap4		419567	0					
ANR	419999	Identifier	swap4		419567	0					
ANR	420000	ArgumentList	ptr [ 1 ]		419567	1					
ANR	420001	Argument	ptr [ 1 ]		419567	0					
ANR	420002	ArrayIndexing	ptr [ 1 ]		419567	0					
ANR	420003	Identifier	ptr		419567	0					
ANR	420004	PrimaryExpression	1		419567	1					
ANR	420005	ElseStatement	else		419567	0					
ANR	420006	ExpressionStatement	version = ptr [ 1 ]	2882:2:63388:63404	419567	0	True				
ANR	420007	AssignmentExpression	version = ptr [ 1 ]		419567	0		=			
ANR	420008	Identifier	version		419567	0					
ANR	420009	ArrayIndexing	ptr [ 1 ]		419567	1					
ANR	420010	Identifier	ptr		419567	0					
ANR	420011	PrimaryExpression	1		419567	1					
ANR	420012	IfStatement	if ( version != VERSIONNO )		419567	79					
ANR	420013	Condition	version != VERSIONNO	2883:5:63411:63430	419567	0	True				
ANR	420014	EqualityExpression	version != VERSIONNO		419567	0		!=			
ANR	420015	Identifier	version		419567	0					
ANR	420016	Identifier	VERSIONNO		419567	1					
ANR	420017	CompoundStatement		82:27:1835:1835	419567	1					
ANR	420018	Statement	file_error	2884:2:63437:63446	419567	0	True				
ANR	420019	Statement	(	2884:12:63447:63447	419567	1	True				
ANR	420020	Statement	ms	2884:13:63448:63449	419567	2	True				
ANR	420021	Statement	","	2884:15:63450:63450	419567	3	True				
ANR	420022	Statement	0	2884:17:63452:63452	419567	4	True				
ANR	420023	Statement	","	2884:18:63453:63453	419567	5	True				
ANR	420024	Statement	"""File %d.%d supports only version %d magic """	2884:20:63455:63498	419567	6	True				
ANR	420025	Statement	"""files. `%s' is version %d"""	2885:6:63506:63532	419567	7	True				
ANR	420026	Statement	","	2885:33:63533:63533	419567	8	True				
ANR	420027	Statement	FILE_VERSION_MAJOR	2885:35:63535:63552	419567	9	True				
ANR	420028	Statement	","	2885:53:63553:63553	419567	10	True				
ANR	420029	Statement	patchlevel	2885:55:63555:63564	419567	11	True				
ANR	420030	Statement	","	2885:65:63565:63565	419567	12	True				
ANR	420031	Statement	VERSIONNO	2886:6:63573:63581	419567	13	True				
ANR	420032	Statement	","	2886:15:63582:63582	419567	14	True				
ANR	420033	Statement	dbname	2886:17:63584:63589	419567	15	True				
ANR	420034	Statement	","	2886:23:63590:63590	419567	16	True				
ANR	420035	Statement	version	2886:25:63592:63598	419567	17	True				
ANR	420036	Statement	)	2886:32:63599:63599	419567	18	True				
ANR	420037	ExpressionStatement		2886:33:63600:63600	419567	19	True				
ANR	420038	GotoStatement	goto error ;	2887:2:63604:63614	419567	20	True				
ANR	420039	Identifier	error		419567	0					
ANR	420040	IfStatement	if ( needsbyteswap && fn == NULL )		419567	80					
ANR	420041	Condition	needsbyteswap && fn == NULL	2893:5:63809:63835	419567	0	True				
ANR	420042	AndExpression	needsbyteswap && fn == NULL		419567	0		&&			
ANR	420043	Identifier	needsbyteswap		419567	0					
ANR	420044	EqualityExpression	fn == NULL		419567	1		==			
ANR	420045	Identifier	fn		419567	0					
ANR	420046	Identifier	NULL		419567	1					
ANR	420047	CompoundStatement		92:34:2240:2240	419567	1					
ANR	420048	ExpressionStatement	map -> p = emalloc ( sizeof ( php_magic_database ) )	2894:2:63842:63886	419567	0	True				
ANR	420049	AssignmentExpression	map -> p = emalloc ( sizeof ( php_magic_database ) )		419567	0		=			
ANR	420050	PtrMemberAccess	map -> p		419567	0					
ANR	420051	Identifier	map		419567	0					
ANR	420052	Identifier	p		419567	1					
ANR	420053	CallExpression	emalloc ( sizeof ( php_magic_database ) )		419567	1					
ANR	420054	Callee	emalloc		419567	0					
ANR	420055	Identifier	emalloc		419567	0					
ANR	420056	ArgumentList	sizeof ( php_magic_database )		419567	1					
ANR	420057	Argument	sizeof ( php_magic_database )		419567	0					
ANR	420058	SizeofExpression	sizeof ( php_magic_database )		419567	0					
ANR	420059	Sizeof	sizeof		419567	0					
ANR	420060	SizeofOperand	php_magic_database		419567	1					
ANR	420061	ExpressionStatement	"map -> p = memcpy ( map -> p , php_magic_database , sizeof ( php_magic_database ) )"	2895:2:63890:63961	419567	1	True				
ANR	420062	AssignmentExpression	"map -> p = memcpy ( map -> p , php_magic_database , sizeof ( php_magic_database ) )"		419567	0		=			
ANR	420063	PtrMemberAccess	map -> p		419567	0					
ANR	420064	Identifier	map		419567	0					
ANR	420065	Identifier	p		419567	1					
ANR	420066	CallExpression	"memcpy ( map -> p , php_magic_database , sizeof ( php_magic_database ) )"		419567	1					
ANR	420067	Callee	memcpy		419567	0					
ANR	420068	Identifier	memcpy		419567	0					
ANR	420069	ArgumentList	map -> p		419567	1					
ANR	420070	Argument	map -> p		419567	0					
ANR	420071	PtrMemberAccess	map -> p		419567	0					
ANR	420072	Identifier	map		419567	0					
ANR	420073	Identifier	p		419567	1					
ANR	420074	Argument	php_magic_database		419567	1					
ANR	420075	Identifier	php_magic_database		419567	0					
ANR	420076	Argument	sizeof ( php_magic_database )		419567	2					
ANR	420077	SizeofExpression	sizeof ( php_magic_database )		419567	0					
ANR	420078	Sizeof	sizeof		419567	0					
ANR	420079	SizeofOperand	php_magic_database		419567	1					
ANR	420080	IfStatement	if ( NULL != fn )		419567	81					
ANR	420081	Condition	NULL != fn	2898:5:63972:63981	419567	0	True				
ANR	420082	EqualityExpression	NULL != fn		419567	0		!=			
ANR	420083	Identifier	NULL		419567	0					
ANR	420084	Identifier	fn		419567	1					
ANR	420085	CompoundStatement		97:17:2386:2386	419567	1					
ANR	420086	ExpressionStatement	nentries = ( uint32_t ) ( st . sb . st_size / sizeof ( struct magic ) )	2899:2:63988:64047	419567	0	True				
ANR	420087	AssignmentExpression	nentries = ( uint32_t ) ( st . sb . st_size / sizeof ( struct magic ) )		419567	0		=			
ANR	420088	Identifier	nentries		419567	0					
ANR	420089	CastExpression	( uint32_t ) ( st . sb . st_size / sizeof ( struct magic ) )		419567	1					
ANR	420090	CastTarget	uint32_t		419567	0					
ANR	420091	MultiplicativeExpression	st . sb . st_size / sizeof ( struct magic )		419567	1		/			
ANR	420092	MemberAccess	st . sb . st_size		419567	0					
ANR	420093	MemberAccess	st . sb		419567	0					
ANR	420094	Identifier	st		419567	0					
ANR	420095	Identifier	sb		419567	1					
ANR	420096	Identifier	st_size		419567	1					
ANR	420097	SizeofExpression	sizeof ( struct magic )		419567	1					
ANR	420098	Sizeof	sizeof		419567	0					
ANR	420099	SizeofOperand	struct magic		419567	1					
ANR	420100	ExpressionStatement	entries = ( uint32_t ) ( st . sb . st_size / sizeof ( struct magic ) )	2900:2:64051:64109	419567	1	True				
ANR	420101	AssignmentExpression	entries = ( uint32_t ) ( st . sb . st_size / sizeof ( struct magic ) )		419567	0		=			
ANR	420102	Identifier	entries		419567	0					
ANR	420103	CastExpression	( uint32_t ) ( st . sb . st_size / sizeof ( struct magic ) )		419567	1					
ANR	420104	CastTarget	uint32_t		419567	0					
ANR	420105	MultiplicativeExpression	st . sb . st_size / sizeof ( struct magic )		419567	1		/			
ANR	420106	MemberAccess	st . sb . st_size		419567	0					
ANR	420107	MemberAccess	st . sb		419567	0					
ANR	420108	Identifier	st		419567	0					
ANR	420109	Identifier	sb		419567	1					
ANR	420110	Identifier	st_size		419567	1					
ANR	420111	SizeofExpression	sizeof ( struct magic )		419567	1					
ANR	420112	Sizeof	sizeof		419567	0					
ANR	420113	SizeofOperand	struct magic		419567	1					
ANR	420114	IfStatement	if ( ( zend_off_t ) ( entries * sizeof ( struct magic ) ) != st . sb . st_size )		419567	2					
ANR	420115	Condition	( zend_off_t ) ( entries * sizeof ( struct magic ) ) != st . sb . st_size	2901:6:64117:64177	419567	0	True				
ANR	420116	EqualityExpression	( zend_off_t ) ( entries * sizeof ( struct magic ) ) != st . sb . st_size		419567	0		!=			
ANR	420117	CastExpression	( zend_off_t ) ( entries * sizeof ( struct magic ) )		419567	0					
ANR	420118	CastTarget	zend_off_t		419567	0					
ANR	420119	MultiplicativeExpression	entries * sizeof ( struct magic )		419567	1		*			
ANR	420120	Identifier	entries		419567	0					
ANR	420121	SizeofExpression	sizeof ( struct magic )		419567	1					
ANR	420122	Sizeof	sizeof		419567	0					
ANR	420123	SizeofOperand	struct magic		419567	1					
ANR	420124	MemberAccess	st . sb . st_size		419567	1					
ANR	420125	MemberAccess	st . sb		419567	0					
ANR	420126	Identifier	st		419567	0					
ANR	420127	Identifier	sb		419567	1					
ANR	420128	Identifier	st_size		419567	1					
ANR	420129	CompoundStatement		100:69:2582:2582	419567	1					
ANR	420130	ExpressionStatement	"file_error ( ms , 0 , ""Size of `%s' %llu is not a multiple of %zu"" , dbname , ( unsigned long long ) st . sb . st_size , sizeof ( struct magic ) )"	2902:3:64185:64321	419567	0	True				
ANR	420131	CallExpression	"file_error ( ms , 0 , ""Size of `%s' %llu is not a multiple of %zu"" , dbname , ( unsigned long long ) st . sb . st_size , sizeof ( struct magic ) )"		419567	0					
ANR	420132	Callee	file_error		419567	0					
ANR	420133	Identifier	file_error		419567	0					
ANR	420134	ArgumentList	ms		419567	1					
ANR	420135	Argument	ms		419567	0					
ANR	420136	Identifier	ms		419567	0					
ANR	420137	Argument	0		419567	1					
ANR	420138	PrimaryExpression	0		419567	0					
ANR	420139	Argument	"""Size of `%s' %llu is not a multiple of %zu"""		419567	2					
ANR	420140	PrimaryExpression	"""Size of `%s' %llu is not a multiple of %zu"""		419567	0					
ANR	420141	Argument	dbname		419567	3					
ANR	420142	Identifier	dbname		419567	0					
ANR	420143	Argument	( unsigned long long ) st . sb . st_size		419567	4					
ANR	420144	CastExpression	( unsigned long long ) st . sb . st_size		419567	0					
ANR	420145	CastTarget	unsigned long long		419567	0					
ANR	420146	MemberAccess	st . sb . st_size		419567	1					
ANR	420147	MemberAccess	st . sb		419567	0					
ANR	420148	Identifier	st		419567	0					
ANR	420149	Identifier	sb		419567	1					
ANR	420150	Identifier	st_size		419567	1					
ANR	420151	Argument	sizeof ( struct magic )		419567	5					
ANR	420152	SizeofExpression	sizeof ( struct magic )		419567	0					
ANR	420153	Sizeof	sizeof		419567	0					
ANR	420154	SizeofOperand	struct magic		419567	1					
ANR	420155	GotoStatement	goto error ;	2905:3:64326:64336	419567	1	True				
ANR	420156	Identifier	error		419567	0					
ANR	420157	Statement	map	2908:1:64346:64348	419567	82	True				
ANR	420158	Statement	->	2908:4:64349:64350	419567	83	True				
ANR	420159	Statement	magic	2908:6:64351:64355	419567	84	True				
ANR	420160	Statement	[	2908:11:64356:64356	419567	85	True				
ANR	420161	Statement	0	2908:12:64357:64357	419567	86	True				
ANR	420162	Statement	]	2908:13:64358:64358	419567	87	True				
ANR	420163	Statement	=	2908:15:64360:64360	419567	88	True				
ANR	420164	Statement	CAST	2908:17:64362:64365	419567	89	True				
ANR	420165	Statement	(	2908:21:64366:64366	419567	90	True				
ANR	420166	Statement	struct	2908:22:64367:64372	419567	91	True				
ANR	420167	Statement	magic	2908:29:64374:64378	419567	92	True				
ANR	420168	Statement	*	2908:35:64380:64380	419567	93	True				
ANR	420169	Statement	","	2908:36:64381:64381	419567	94	True				
ANR	420170	Statement	map	2908:38:64383:64385	419567	95	True				
ANR	420171	Statement	->	2908:41:64386:64387	419567	96	True				
ANR	420172	Statement	p	2908:43:64388:64388	419567	97	True				
ANR	420173	Statement	)	2908:44:64389:64389	419567	98	True				
ANR	420174	ExpressionStatement	+ 1	2908:46:64391:64394	419567	99	True				
ANR	420175	UnaryOperationExpression	+ 1		419567	0					
ANR	420176	UnaryOperator	+		419567	0					
ANR	420177	PrimaryExpression	1		419567	1					
ANR	420178	ExpressionStatement	nentries = 0	2909:1:64397:64409	419567	100	True				
ANR	420179	AssignmentExpression	nentries = 0		419567	0		=			
ANR	420180	Identifier	nentries		419567	0					
ANR	420181	PrimaryExpression	0		419567	1					
ANR	420182	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		419567	101					
ANR	420183	ForInit	i = 0 ;	2910:6:64417:64422	419567	0	True				
ANR	420184	AssignmentExpression	i = 0		419567	0		=			
ANR	420185	Identifier	i		419567	0					
ANR	420186	PrimaryExpression	0		419567	1					
ANR	420187	Condition	i < MAGIC_SETS	2910:13:64424:64437	419567	1	True				
ANR	420188	RelationalExpression	i < MAGIC_SETS		419567	0		<			
ANR	420189	Identifier	i		419567	0					
ANR	420190	Identifier	MAGIC_SETS		419567	1					
ANR	420191	PostIncDecOperationExpression	i ++	2910:29:64440:64442	419567	2	True				
ANR	420192	Identifier	i		419567	0					
ANR	420193	IncDec	++		419567	1					
ANR	420194	CompoundStatement		109:34:2847:2847	419567	3					
ANR	420195	IfStatement	if ( needsbyteswap )		419567	0					
ANR	420196	Condition	needsbyteswap	2911:6:64453:64465	419567	0	True				
ANR	420197	Identifier	needsbyteswap		419567	0					
ANR	420198	ExpressionStatement	map -> nmagic [ i ] = swap4 ( ptr [ i + 2 ] )	2912:3:64471:64505	419567	1	True				
ANR	420199	AssignmentExpression	map -> nmagic [ i ] = swap4 ( ptr [ i + 2 ] )		419567	0		=			
ANR	420200	ArrayIndexing	map -> nmagic [ i ]		419567	0					
ANR	420201	PtrMemberAccess	map -> nmagic		419567	0					
ANR	420202	Identifier	map		419567	0					
ANR	420203	Identifier	nmagic		419567	1					
ANR	420204	Identifier	i		419567	1					
ANR	420205	CallExpression	swap4 ( ptr [ i + 2 ] )		419567	1					
ANR	420206	Callee	swap4		419567	0					
ANR	420207	Identifier	swap4		419567	0					
ANR	420208	ArgumentList	ptr [ i + 2 ]		419567	1					
ANR	420209	Argument	ptr [ i + 2 ]		419567	0					
ANR	420210	ArrayIndexing	ptr [ i + 2 ]		419567	0					
ANR	420211	Identifier	ptr		419567	0					
ANR	420212	AdditiveExpression	i + 2		419567	1		+			
ANR	420213	Identifier	i		419567	0					
ANR	420214	PrimaryExpression	2		419567	1					
ANR	420215	ElseStatement	else		419567	0					
ANR	420216	ExpressionStatement	map -> nmagic [ i ] = ptr [ i + 2 ]	2914:3:64517:64544	419567	0	True				
ANR	420217	AssignmentExpression	map -> nmagic [ i ] = ptr [ i + 2 ]		419567	0		=			
ANR	420218	ArrayIndexing	map -> nmagic [ i ]		419567	0					
ANR	420219	PtrMemberAccess	map -> nmagic		419567	0					
ANR	420220	Identifier	map		419567	0					
ANR	420221	Identifier	nmagic		419567	1					
ANR	420222	Identifier	i		419567	1					
ANR	420223	ArrayIndexing	ptr [ i + 2 ]		419567	1					
ANR	420224	Identifier	ptr		419567	0					
ANR	420225	AdditiveExpression	i + 2		419567	1		+			
ANR	420226	Identifier	i		419567	0					
ANR	420227	PrimaryExpression	2		419567	1					
ANR	420228	IfStatement	if ( i != MAGIC_SETS - 1 )		419567	1					
ANR	420229	Condition	i != MAGIC_SETS - 1	2915:6:64552:64570	419567	0	True				
ANR	420230	EqualityExpression	i != MAGIC_SETS - 1		419567	0		!=			
ANR	420231	Identifier	i		419567	0					
ANR	420232	AdditiveExpression	MAGIC_SETS - 1		419567	1		-			
ANR	420233	Identifier	MAGIC_SETS		419567	0					
ANR	420234	PrimaryExpression	1		419567	1					
ANR	420235	ExpressionStatement	map -> magic [ i + 1 ] = map -> magic [ i ] + map -> nmagic [ i ]	2916:3:64576:64626	419567	1	True				
ANR	420236	AssignmentExpression	map -> magic [ i + 1 ] = map -> magic [ i ] + map -> nmagic [ i ]		419567	0		=			
ANR	420237	ArrayIndexing	map -> magic [ i + 1 ]		419567	0					
ANR	420238	PtrMemberAccess	map -> magic		419567	0					
ANR	420239	Identifier	map		419567	0					
ANR	420240	Identifier	magic		419567	1					
ANR	420241	AdditiveExpression	i + 1		419567	1		+			
ANR	420242	Identifier	i		419567	0					
ANR	420243	PrimaryExpression	1		419567	1					
ANR	420244	AdditiveExpression	map -> magic [ i ] + map -> nmagic [ i ]		419567	1		+			
ANR	420245	ArrayIndexing	map -> magic [ i ]		419567	0					
ANR	420246	PtrMemberAccess	map -> magic		419567	0					
ANR	420247	Identifier	map		419567	0					
ANR	420248	Identifier	magic		419567	1					
ANR	420249	Identifier	i		419567	1					
ANR	420250	ArrayIndexing	map -> nmagic [ i ]		419567	1					
ANR	420251	PtrMemberAccess	map -> nmagic		419567	0					
ANR	420252	Identifier	map		419567	0					
ANR	420253	Identifier	nmagic		419567	1					
ANR	420254	Identifier	i		419567	1					
ANR	420255	ExpressionStatement	nentries += map -> nmagic [ i ]	2917:2:64630:64656	419567	2	True				
ANR	420256	AssignmentExpression	nentries += map -> nmagic [ i ]		419567	0		+=			
ANR	420257	Identifier	nentries		419567	0					
ANR	420258	ArrayIndexing	map -> nmagic [ i ]		419567	1					
ANR	420259	PtrMemberAccess	map -> nmagic		419567	0					
ANR	420260	Identifier	map		419567	0					
ANR	420261	Identifier	nmagic		419567	1					
ANR	420262	Identifier	i		419567	1					
ANR	420263	IfStatement	if ( NULL != fn && entries != nentries + 1 )		419567	102					
ANR	420264	Condition	NULL != fn && entries != nentries + 1	2919:5:64666:64702	419567	0	True				
ANR	420265	AndExpression	NULL != fn && entries != nentries + 1		419567	0		&&			
ANR	420266	EqualityExpression	NULL != fn		419567	0		!=			
ANR	420267	Identifier	NULL		419567	0					
ANR	420268	Identifier	fn		419567	1					
ANR	420269	EqualityExpression	entries != nentries + 1		419567	1		!=			
ANR	420270	Identifier	entries		419567	0					
ANR	420271	AdditiveExpression	nentries + 1		419567	1		+			
ANR	420272	Identifier	nentries		419567	0					
ANR	420273	PrimaryExpression	1		419567	1					
ANR	420274	CompoundStatement		118:44:3107:3107	419567	1					
ANR	420275	ExpressionStatement	"file_error ( ms , 0 , ""Inconsistent entries in `%s' %u != %u"" , dbname , entries , nentries + 1 )"	2920:2:64709:64804	419567	0	True				
ANR	420276	CallExpression	"file_error ( ms , 0 , ""Inconsistent entries in `%s' %u != %u"" , dbname , entries , nentries + 1 )"		419567	0					
ANR	420277	Callee	file_error		419567	0					
ANR	420278	Identifier	file_error		419567	0					
ANR	420279	ArgumentList	ms		419567	1					
ANR	420280	Argument	ms		419567	0					
ANR	420281	Identifier	ms		419567	0					
ANR	420282	Argument	0		419567	1					
ANR	420283	PrimaryExpression	0		419567	0					
ANR	420284	Argument	"""Inconsistent entries in `%s' %u != %u"""		419567	2					
ANR	420285	PrimaryExpression	"""Inconsistent entries in `%s' %u != %u"""		419567	0					
ANR	420286	Argument	dbname		419567	3					
ANR	420287	Identifier	dbname		419567	0					
ANR	420288	Argument	entries		419567	4					
ANR	420289	Identifier	entries		419567	0					
ANR	420290	Argument	nentries + 1		419567	5					
ANR	420291	AdditiveExpression	nentries + 1		419567	0		+			
ANR	420292	Identifier	nentries		419567	0					
ANR	420293	PrimaryExpression	1		419567	1					
ANR	420294	GotoStatement	goto error ;	2922:2:64808:64818	419567	1	True				
ANR	420295	Identifier	error		419567	0					
ANR	420296	IfStatement	if ( needsbyteswap )		419567	103					
ANR	420297	Condition	needsbyteswap	2924:5:64828:64840	419567	0	True				
ANR	420298	Identifier	needsbyteswap		419567	0					
ANR	420299	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		419567	1					
ANR	420300	ForInit	i = 0 ;	2925:7:64850:64855	419567	0	True				
ANR	420301	AssignmentExpression	i = 0		419567	0		=			
ANR	420302	Identifier	i		419567	0					
ANR	420303	PrimaryExpression	0		419567	1					
ANR	420304	Condition	i < MAGIC_SETS	2925:14:64857:64870	419567	1	True				
ANR	420305	RelationalExpression	i < MAGIC_SETS		419567	0		<			
ANR	420306	Identifier	i		419567	0					
ANR	420307	Identifier	MAGIC_SETS		419567	1					
ANR	420308	PostIncDecOperationExpression	i ++	2925:30:64873:64875	419567	2	True				
ANR	420309	Identifier	i		419567	0					
ANR	420310	IncDec	++		419567	1					
ANR	420311	ExpressionStatement	"byteswap ( map -> magic [ i ] , map -> nmagic [ i ] )"	2926:3:64881:64920	419567	3	True				
ANR	420312	CallExpression	"byteswap ( map -> magic [ i ] , map -> nmagic [ i ] )"		419567	0					
ANR	420313	Callee	byteswap		419567	0					
ANR	420314	Identifier	byteswap		419567	0					
ANR	420315	ArgumentList	map -> magic [ i ]		419567	1					
ANR	420316	Argument	map -> magic [ i ]		419567	0					
ANR	420317	ArrayIndexing	map -> magic [ i ]		419567	0					
ANR	420318	PtrMemberAccess	map -> magic		419567	0					
ANR	420319	Identifier	map		419567	0					
ANR	420320	Identifier	magic		419567	1					
ANR	420321	Identifier	i		419567	1					
ANR	420322	Argument	map -> nmagic [ i ]		419567	1					
ANR	420323	ArrayIndexing	map -> nmagic [ i ]		419567	0					
ANR	420324	PtrMemberAccess	map -> nmagic		419567	0					
ANR	420325	Identifier	map		419567	0					
ANR	420326	Identifier	nmagic		419567	1					
ANR	420327	Identifier	i		419567	1					
ANR	420328	IfStatement	if ( dbname )		419567	104					
ANR	420329	Condition	dbname	2928:5:64928:64933	419567	0	True				
ANR	420330	Identifier	dbname		419567	0					
ANR	420331	CompoundStatement		127:13:3338:3338	419567	1					
ANR	420332	ExpressionStatement	efree ( dbname )	2929:2:64940:64953	419567	0	True				
ANR	420333	CallExpression	efree ( dbname )		419567	0					
ANR	420334	Callee	efree		419567	0					
ANR	420335	Identifier	efree		419567	0					
ANR	420336	ArgumentList	dbname		419567	1					
ANR	420337	Argument	dbname		419567	0					
ANR	420338	Identifier	dbname		419567	0					
ANR	420339	ReturnStatement	return map ;	2931:1:64959:64969	419567	105	True				
ANR	420340	Identifier	map		419567	0					
ANR	420341	Label	error :	2933:0:64972:64977	419567	106	True				
ANR	420342	Identifier	error		419567	0					
ANR	420343	IfStatement	if ( stream )		419567	107					
ANR	420344	Condition	stream	2934:5:64984:64989	419567	0	True				
ANR	420345	Identifier	stream		419567	0					
ANR	420346	CompoundStatement		133:13:3394:3394	419567	1					
ANR	420347	ExpressionStatement	php_stream_close ( stream )	2935:2:64996:65020	419567	0	True				
ANR	420348	CallExpression	php_stream_close ( stream )		419567	0					
ANR	420349	Callee	php_stream_close		419567	0					
ANR	420350	Identifier	php_stream_close		419567	0					
ANR	420351	ArgumentList	stream		419567	1					
ANR	420352	Argument	stream		419567	0					
ANR	420353	Identifier	stream		419567	0					
ANR	420354	ExpressionStatement	apprentice_unmap ( map )	2937:1:65026:65047	419567	108	True				
ANR	420355	CallExpression	apprentice_unmap ( map )		419567	0					
ANR	420356	Callee	apprentice_unmap		419567	0					
ANR	420357	Identifier	apprentice_unmap		419567	0					
ANR	420358	ArgumentList	map		419567	1					
ANR	420359	Argument	map		419567	0					
ANR	420360	Identifier	map		419567	0					
ANR	420361	IfStatement	if ( dbname )		419567	109					
ANR	420362	Condition	dbname	2938:5:65054:65059	419567	0	True				
ANR	420363	Identifier	dbname		419567	0					
ANR	420364	CompoundStatement		137:13:3464:3464	419567	1					
ANR	420365	ExpressionStatement	efree ( dbname )	2939:2:65066:65079	419567	0	True				
ANR	420366	CallExpression	efree ( dbname )		419567	0					
ANR	420367	Callee	efree		419567	0					
ANR	420368	Identifier	efree		419567	0					
ANR	420369	ArgumentList	dbname		419567	1					
ANR	420370	Argument	dbname		419567	0					
ANR	420371	Identifier	dbname		419567	0					
ANR	420372	ReturnStatement	return NULL ;	2941:1:65085:65096	419567	110	True				
ANR	420373	Identifier	NULL		419567	0					
ANR	420374	ReturnType	struct magic_map *		419567	1					
ANR	420375	Identifier	apprentice_map		419567	2					
ANR	420376	ParameterList	"struct magic_set * ms , const char * fn"		419567	3					
ANR	420377	Parameter	struct magic_set * ms	2801:15:61559:61578	419567	0	True				
ANR	420378	ParameterType	struct magic_set *		419567	0					
ANR	420379	Identifier	ms		419567	1					
ANR	420380	Parameter	const char * fn	2801:37:61581:61594	419567	1	True				
ANR	420381	ParameterType	const char *		419567	0					
ANR	420382	Identifier	fn		419567	1					
ANR	420383	CFGEntryNode	ENTRY		419567		True				
ANR	420384	CFGExitNode	EXIT		419567		True				
ANR	420385	Symbol	VERSIONNO		419567						
ANR	420386	Symbol	nentries		419567						
ANR	420387	Symbol	MAGIC_SETS		419567						
ANR	420388	Symbol	* map		419567						
ANR	420389	Symbol	fn		419567						
ANR	420390	Symbol	& st		419567						
ANR	420391	Symbol	swap4		419567						
ANR	420392	Symbol	php_stream_open_wrapper		419567						
ANR	420393	Symbol	emalloc		419567						
ANR	420394	Symbol	stream		419567						
ANR	420395	Symbol	php_stream_stat_path_ex		419567						
ANR	420396	Symbol	map -> p		419567						
ANR	420397	Symbol	php_magic_database		419567						
ANR	420398	Symbol	st . sb		419567						
ANR	420399	Symbol	* ptr		419567						
ANR	420400	Symbol	map -> magic		419567						
ANR	420401	Symbol	& php_magic_database		419567						
ANR	420402	Symbol	st . sb . st_mode		419567						
ANR	420403	Symbol	map -> nmagic		419567						
ANR	420404	Symbol	* map -> nmagic		419567						
ANR	420405	Symbol	map		419567						
ANR	420406	Symbol	MAXMAGIC_SIZE		419567						
ANR	420407	Symbol	st		419567						
ANR	420408	Symbol	errno		419567						
ANR	420409	Symbol	NULL		419567						
ANR	420410	Symbol	SUCCESS		419567						
ANR	420411	Symbol	S_IFDIR		419567						
ANR	420412	Symbol	ms		419567						
ANR	420413	Symbol	* map -> magic		419567						
ANR	420414	Symbol	map -> len		419567						
ANR	420415	Symbol	i		419567						
ANR	420416	Symbol	version		419567						
ANR	420417	Symbol	ptr		419567						
ANR	420418	Symbol	needsbyteswap		419567						
ANR	420419	Symbol	mkdbname		419567						
ANR	420420	Symbol	* * map		419567						
ANR	420421	Symbol	entries		419567						
ANR	420422	Symbol	* i		419567						
ANR	420423	Symbol	dbname		419567						
ANR	420424	Symbol	REPORT_ERRORS		419567						
ANR	420425	Symbol	php_stream_stat		419567						
ANR	420426	Symbol	st . sb . st_size		419567						
ANR	420427	Symbol	memcpy		419567						
ANR	420428	Symbol	php_stream_read		419567						
ANR	420429	Symbol	MAGICNO		419567						
ANR	420430	Function	check_buffer	2944:8:65109:66610							
ANR	420431	FunctionDef	"check_buffer (struct magic_set * ms , struct magic_map * map , const char * dbname)"		420430	0					
ANR	420432	CompoundStatement		2946:0:65191:66610	420430	0					
ANR	420433	IdentifierDeclStatement	uint32_t * ptr ;	2947:1:65194:65207	420430	0	True				
ANR	420434	IdentifierDecl	* ptr		420430	0					
ANR	420435	IdentifierDeclType	uint32_t *		420430	0					
ANR	420436	Identifier	ptr		420430	1					
ANR	420437	IdentifierDeclStatement	"uint32_t entries , nentries ;"	2948:1:65210:65236	420430	1	True				
ANR	420438	IdentifierDecl	entries		420430	0					
ANR	420439	IdentifierDeclType	uint32_t		420430	0					
ANR	420440	Identifier	entries		420430	1					
ANR	420441	IdentifierDecl	nentries		420430	1					
ANR	420442	IdentifierDeclType	uint32_t		420430	0					
ANR	420443	Identifier	nentries		420430	1					
ANR	420444	IdentifierDeclStatement	uint32_t version ;	2949:1:65239:65255	420430	2	True				
ANR	420445	IdentifierDecl	version		420430	0					
ANR	420446	IdentifierDeclType	uint32_t		420430	0					
ANR	420447	Identifier	version		420430	1					
ANR	420448	IdentifierDeclStatement	"int i , needsbyteswap ;"	2950:1:65258:65278	420430	3	True				
ANR	420449	IdentifierDecl	i		420430	0					
ANR	420450	IdentifierDeclType	int		420430	0					
ANR	420451	Identifier	i		420430	1					
ANR	420452	IdentifierDecl	needsbyteswap		420430	1					
ANR	420453	IdentifierDeclType	int		420430	0					
ANR	420454	Identifier	needsbyteswap		420430	1					
ANR	420455	Statement	ptr	2952:1:65282:65284	420430	4	True				
ANR	420456	Statement	=	2952:5:65286:65286	420430	5	True				
ANR	420457	Statement	CAST	2952:7:65288:65291	420430	6	True				
ANR	420458	Statement	(	2952:11:65292:65292	420430	7	True				
ANR	420459	Statement	uint32_t	2952:12:65293:65300	420430	8	True				
ANR	420460	Statement	*	2952:21:65302:65302	420430	9	True				
ANR	420461	Statement	","	2952:22:65303:65303	420430	10	True				
ANR	420462	Statement	map	2952:24:65305:65307	420430	11	True				
ANR	420463	Statement	->	2952:27:65308:65309	420430	12	True				
ANR	420464	Statement	p	2952:29:65310:65310	420430	13	True				
ANR	420465	Statement	)	2952:30:65311:65311	420430	14	True				
ANR	420466	ExpressionStatement		2952:31:65312:65312	420430	15	True				
ANR	420467	IfStatement	if ( * ptr != MAGICNO )		420430	16					
ANR	420468	Condition	* ptr != MAGICNO	2953:5:65319:65333	420430	0	True				
ANR	420469	EqualityExpression	* ptr != MAGICNO		420430	0		!=			
ANR	420470	UnaryOperationExpression	* ptr		420430	0					
ANR	420471	UnaryOperator	*		420430	0					
ANR	420472	Identifier	ptr		420430	1					
ANR	420473	Identifier	MAGICNO		420430	1					
ANR	420474	CompoundStatement		8:22:144:144	420430	1					
ANR	420475	IfStatement	if ( swap4 ( * ptr ) != MAGICNO )		420430	0					
ANR	420476	Condition	swap4 ( * ptr ) != MAGICNO	2954:6:65344:65365	420430	0	True				
ANR	420477	EqualityExpression	swap4 ( * ptr ) != MAGICNO		420430	0		!=			
ANR	420478	CallExpression	swap4 ( * ptr )		420430	0					
ANR	420479	Callee	swap4		420430	0					
ANR	420480	Identifier	swap4		420430	0					
ANR	420481	ArgumentList	* ptr		420430	1					
ANR	420482	Argument	* ptr		420430	0					
ANR	420483	UnaryOperationExpression	* ptr		420430	0					
ANR	420484	UnaryOperator	*		420430	0					
ANR	420485	Identifier	ptr		420430	1					
ANR	420486	Identifier	MAGICNO		420430	1					
ANR	420487	CompoundStatement		9:30:176:176	420430	1					
ANR	420488	ExpressionStatement	"file_error ( ms , 0 , ""bad magic in `%s'"" , dbname )"	2955:3:65373:65419	420430	0	True				
ANR	420489	CallExpression	"file_error ( ms , 0 , ""bad magic in `%s'"" , dbname )"		420430	0					
ANR	420490	Callee	file_error		420430	0					
ANR	420491	Identifier	file_error		420430	0					
ANR	420492	ArgumentList	ms		420430	1					
ANR	420493	Argument	ms		420430	0					
ANR	420494	Identifier	ms		420430	0					
ANR	420495	Argument	0		420430	1					
ANR	420496	PrimaryExpression	0		420430	0					
ANR	420497	Argument	"""bad magic in `%s'"""		420430	2					
ANR	420498	PrimaryExpression	"""bad magic in `%s'"""		420430	0					
ANR	420499	Argument	dbname		420430	3					
ANR	420500	Identifier	dbname		420430	0					
ANR	420501	ReturnStatement	return - 1 ;	2956:3:65424:65433	420430	1	True				
ANR	420502	UnaryOperationExpression	- 1		420430	0					
ANR	420503	UnaryOperator	-		420430	0					
ANR	420504	PrimaryExpression	1		420430	1					
ANR	420505	ExpressionStatement	needsbyteswap = 1	2958:2:65441:65458	420430	1	True				
ANR	420506	AssignmentExpression	needsbyteswap = 1		420430	0		=			
ANR	420507	Identifier	needsbyteswap		420430	0					
ANR	420508	PrimaryExpression	1		420430	1					
ANR	420509	ElseStatement	else		420430	0					
ANR	420510	ExpressionStatement	needsbyteswap = 0	2960:2:65470:65487	420430	0	True				
ANR	420511	AssignmentExpression	needsbyteswap = 0		420430	0		=			
ANR	420512	Identifier	needsbyteswap		420430	0					
ANR	420513	PrimaryExpression	0		420430	1					
ANR	420514	IfStatement	if ( needsbyteswap )		420430	17					
ANR	420515	Condition	needsbyteswap	2961:5:65494:65506	420430	0	True				
ANR	420516	Identifier	needsbyteswap		420430	0					
ANR	420517	ExpressionStatement	version = swap4 ( ptr [ 1 ] )	2962:2:65511:65534	420430	1	True				
ANR	420518	AssignmentExpression	version = swap4 ( ptr [ 1 ] )		420430	0		=			
ANR	420519	Identifier	version		420430	0					
ANR	420520	CallExpression	swap4 ( ptr [ 1 ] )		420430	1					
ANR	420521	Callee	swap4		420430	0					
ANR	420522	Identifier	swap4		420430	0					
ANR	420523	ArgumentList	ptr [ 1 ]		420430	1					
ANR	420524	Argument	ptr [ 1 ]		420430	0					
ANR	420525	ArrayIndexing	ptr [ 1 ]		420430	0					
ANR	420526	Identifier	ptr		420430	0					
ANR	420527	PrimaryExpression	1		420430	1					
ANR	420528	ElseStatement	else		420430	0					
ANR	420529	ExpressionStatement	version = ptr [ 1 ]	2964:2:65544:65560	420430	0	True				
ANR	420530	AssignmentExpression	version = ptr [ 1 ]		420430	0		=			
ANR	420531	Identifier	version		420430	0					
ANR	420532	ArrayIndexing	ptr [ 1 ]		420430	1					
ANR	420533	Identifier	ptr		420430	0					
ANR	420534	PrimaryExpression	1		420430	1					
ANR	420535	IfStatement	if ( version != VERSIONNO )		420430	18					
ANR	420536	Condition	version != VERSIONNO	2965:5:65567:65586	420430	0	True				
ANR	420537	EqualityExpression	version != VERSIONNO		420430	0		!=			
ANR	420538	Identifier	version		420430	0					
ANR	420539	Identifier	VERSIONNO		420430	1					
ANR	420540	CompoundStatement		20:27:397:397	420430	1					
ANR	420541	Statement	file_error	2966:2:65593:65602	420430	0	True				
ANR	420542	Statement	(	2966:12:65603:65603	420430	1	True				
ANR	420543	Statement	ms	2966:13:65604:65605	420430	2	True				
ANR	420544	Statement	","	2966:15:65606:65606	420430	3	True				
ANR	420545	Statement	0	2966:17:65608:65608	420430	4	True				
ANR	420546	Statement	","	2966:18:65609:65609	420430	5	True				
ANR	420547	Statement	"""File %s supports only version %d magic """	2966:20:65611:65651	420430	6	True				
ANR	420548	Statement	"""files. `%s' is version %d"""	2967:6:65659:65685	420430	7	True				
ANR	420549	Statement	","	2967:33:65686:65686	420430	8	True				
ANR	420550	Statement	FILE_VERSION_MAJOR	2967:35:65688:65705	420430	9	True				
ANR	420551	Statement	","	2967:53:65706:65706	420430	10	True				
ANR	420552	Statement	VERSIONNO	2968:6:65714:65722	420430	11	True				
ANR	420553	Statement	","	2968:15:65723:65723	420430	12	True				
ANR	420554	Statement	dbname	2968:17:65725:65730	420430	13	True				
ANR	420555	Statement	","	2968:23:65731:65731	420430	14	True				
ANR	420556	Statement	version	2968:25:65733:65739	420430	15	True				
ANR	420557	Statement	)	2968:32:65740:65740	420430	16	True				
ANR	420558	ExpressionStatement		2968:33:65741:65741	420430	17	True				
ANR	420559	ReturnStatement	return - 1 ;	2969:2:65745:65754	420430	18	True				
ANR	420560	UnaryOperationExpression	- 1		420430	0					
ANR	420561	UnaryOperator	-		420430	0					
ANR	420562	PrimaryExpression	1		420430	1					
ANR	420563	ExpressionStatement	entries = ( uint32_t ) ( map -> len / sizeof ( struct magic ) )	2971:1:65760:65813	420430	19	True				
ANR	420564	AssignmentExpression	entries = ( uint32_t ) ( map -> len / sizeof ( struct magic ) )		420430	0		=			
ANR	420565	Identifier	entries		420430	0					
ANR	420566	CastExpression	( uint32_t ) ( map -> len / sizeof ( struct magic ) )		420430	1					
ANR	420567	CastTarget	uint32_t		420430	0					
ANR	420568	MultiplicativeExpression	map -> len / sizeof ( struct magic )		420430	1		/			
ANR	420569	PtrMemberAccess	map -> len		420430	0					
ANR	420570	Identifier	map		420430	0					
ANR	420571	Identifier	len		420430	1					
ANR	420572	SizeofExpression	sizeof ( struct magic )		420430	1					
ANR	420573	Sizeof	sizeof		420430	0					
ANR	420574	SizeofOperand	struct magic		420430	1					
ANR	420575	IfStatement	if ( ( entries * sizeof ( struct magic ) ) != map -> len )		420430	20					
ANR	420576	Condition	( entries * sizeof ( struct magic ) ) != map -> len	2972:5:65820:65863	420430	0	True				
ANR	420577	EqualityExpression	( entries * sizeof ( struct magic ) ) != map -> len		420430	0		!=			
ANR	420578	MultiplicativeExpression	entries * sizeof ( struct magic )		420430	0		*			
ANR	420579	Identifier	entries		420430	0					
ANR	420580	SizeofExpression	sizeof ( struct magic )		420430	1					
ANR	420581	Sizeof	sizeof		420430	0					
ANR	420582	SizeofOperand	struct magic		420430	1					
ANR	420583	PtrMemberAccess	map -> len		420430	1					
ANR	420584	Identifier	map		420430	0					
ANR	420585	Identifier	len		420430	1					
ANR	420586	CompoundStatement		27:51:674:674	420430	1					
ANR	420587	Statement	file_error	2973:2:65870:65879	420430	0	True				
ANR	420588	Statement	(	2973:12:65880:65880	420430	1	True				
ANR	420589	Statement	ms	2973:13:65881:65882	420430	2	True				
ANR	420590	Statement	","	2973:15:65883:65883	420430	3	True				
ANR	420591	Statement	0	2973:17:65885:65885	420430	4	True				
ANR	420592	Statement	","	2973:18:65886:65886	420430	5	True				
ANR	420593	Statement	"""Size of `%s' %"""	2973:20:65888:65903	420430	6	True				
ANR	420594	Statement	SIZE_T_FORMAT	2973:37:65905:65917	420430	7	True				
ANR	420595	Statement	"""u is not """	2973:51:65919:65929	420430	8	True				
ANR	420596	Statement	"""a multiple of %"""	2974:6:65937:65953	420430	9	True				
ANR	420597	Statement	SIZE_T_FORMAT	2974:24:65955:65967	420430	10	True				
ANR	420598	Statement	"""u"""	2974:38:65969:65971	420430	11	True				
ANR	420599	Statement	","	2974:41:65972:65972	420430	12	True				
ANR	420600	Statement	dbname	2975:6:65980:65985	420430	13	True				
ANR	420601	Statement	","	2975:12:65986:65986	420430	14	True				
ANR	420602	Statement	map	2975:14:65988:65990	420430	15	True				
ANR	420603	Statement	->	2975:17:65991:65992	420430	16	True				
ANR	420604	Statement	len	2975:19:65993:65995	420430	17	True				
ANR	420605	Statement	","	2975:22:65996:65996	420430	18	True				
ANR	420606	Statement	sizeof	2975:24:65998:66003	420430	19	True				
ANR	420607	Statement	(	2975:30:66004:66004	420430	20	True				
ANR	420608	Statement	struct	2975:31:66005:66010	420430	21	True				
ANR	420609	Statement	magic	2975:38:66012:66016	420430	22	True				
ANR	420610	Statement	)	2975:43:66017:66017	420430	23	True				
ANR	420611	Statement	)	2975:44:66018:66018	420430	24	True				
ANR	420612	ExpressionStatement		2975:45:66019:66019	420430	25	True				
ANR	420613	ReturnStatement	return - 1 ;	2976:2:66023:66032	420430	26	True				
ANR	420614	UnaryOperationExpression	- 1		420430	0					
ANR	420615	UnaryOperator	-		420430	0					
ANR	420616	PrimaryExpression	1		420430	1					
ANR	420617	Statement	map	2978:1:66038:66040	420430	21	True				
ANR	420618	Statement	->	2978:4:66041:66042	420430	22	True				
ANR	420619	Statement	magic	2978:6:66043:66047	420430	23	True				
ANR	420620	Statement	[	2978:11:66048:66048	420430	24	True				
ANR	420621	Statement	0	2978:12:66049:66049	420430	25	True				
ANR	420622	Statement	]	2978:13:66050:66050	420430	26	True				
ANR	420623	Statement	=	2978:15:66052:66052	420430	27	True				
ANR	420624	Statement	CAST	2978:17:66054:66057	420430	28	True				
ANR	420625	Statement	(	2978:21:66058:66058	420430	29	True				
ANR	420626	Statement	struct	2978:22:66059:66064	420430	30	True				
ANR	420627	Statement	magic	2978:29:66066:66070	420430	31	True				
ANR	420628	Statement	*	2978:35:66072:66072	420430	32	True				
ANR	420629	Statement	","	2978:36:66073:66073	420430	33	True				
ANR	420630	Statement	map	2978:38:66075:66077	420430	34	True				
ANR	420631	Statement	->	2978:41:66078:66079	420430	35	True				
ANR	420632	Statement	p	2978:43:66080:66080	420430	36	True				
ANR	420633	Statement	)	2978:44:66081:66081	420430	37	True				
ANR	420634	ExpressionStatement	+ 1	2978:46:66083:66086	420430	38	True				
ANR	420635	UnaryOperationExpression	+ 1		420430	0					
ANR	420636	UnaryOperator	+		420430	0					
ANR	420637	PrimaryExpression	1		420430	1					
ANR	420638	ExpressionStatement	nentries = 0	2979:1:66089:66101	420430	39	True				
ANR	420639	AssignmentExpression	nentries = 0		420430	0		=			
ANR	420640	Identifier	nentries		420430	0					
ANR	420641	PrimaryExpression	0		420430	1					
ANR	420642	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		420430	40					
ANR	420643	ForInit	i = 0 ;	2980:6:66109:66114	420430	0	True				
ANR	420644	AssignmentExpression	i = 0		420430	0		=			
ANR	420645	Identifier	i		420430	0					
ANR	420646	PrimaryExpression	0		420430	1					
ANR	420647	Condition	i < MAGIC_SETS	2980:13:66116:66129	420430	1	True				
ANR	420648	RelationalExpression	i < MAGIC_SETS		420430	0		<			
ANR	420649	Identifier	i		420430	0					
ANR	420650	Identifier	MAGIC_SETS		420430	1					
ANR	420651	PostIncDecOperationExpression	i ++	2980:29:66132:66134	420430	2	True				
ANR	420652	Identifier	i		420430	0					
ANR	420653	IncDec	++		420430	1					
ANR	420654	CompoundStatement		35:34:945:945	420430	3					
ANR	420655	IfStatement	if ( needsbyteswap )		420430	0					
ANR	420656	Condition	needsbyteswap	2981:6:66145:66157	420430	0	True				
ANR	420657	Identifier	needsbyteswap		420430	0					
ANR	420658	ExpressionStatement	map -> nmagic [ i ] = swap4 ( ptr [ i + 2 ] )	2982:3:66163:66197	420430	1	True				
ANR	420659	AssignmentExpression	map -> nmagic [ i ] = swap4 ( ptr [ i + 2 ] )		420430	0		=			
ANR	420660	ArrayIndexing	map -> nmagic [ i ]		420430	0					
ANR	420661	PtrMemberAccess	map -> nmagic		420430	0					
ANR	420662	Identifier	map		420430	0					
ANR	420663	Identifier	nmagic		420430	1					
ANR	420664	Identifier	i		420430	1					
ANR	420665	CallExpression	swap4 ( ptr [ i + 2 ] )		420430	1					
ANR	420666	Callee	swap4		420430	0					
ANR	420667	Identifier	swap4		420430	0					
ANR	420668	ArgumentList	ptr [ i + 2 ]		420430	1					
ANR	420669	Argument	ptr [ i + 2 ]		420430	0					
ANR	420670	ArrayIndexing	ptr [ i + 2 ]		420430	0					
ANR	420671	Identifier	ptr		420430	0					
ANR	420672	AdditiveExpression	i + 2		420430	1		+			
ANR	420673	Identifier	i		420430	0					
ANR	420674	PrimaryExpression	2		420430	1					
ANR	420675	ElseStatement	else		420430	0					
ANR	420676	ExpressionStatement	map -> nmagic [ i ] = ptr [ i + 2 ]	2984:3:66209:66236	420430	0	True				
ANR	420677	AssignmentExpression	map -> nmagic [ i ] = ptr [ i + 2 ]		420430	0		=			
ANR	420678	ArrayIndexing	map -> nmagic [ i ]		420430	0					
ANR	420679	PtrMemberAccess	map -> nmagic		420430	0					
ANR	420680	Identifier	map		420430	0					
ANR	420681	Identifier	nmagic		420430	1					
ANR	420682	Identifier	i		420430	1					
ANR	420683	ArrayIndexing	ptr [ i + 2 ]		420430	1					
ANR	420684	Identifier	ptr		420430	0					
ANR	420685	AdditiveExpression	i + 2		420430	1		+			
ANR	420686	Identifier	i		420430	0					
ANR	420687	PrimaryExpression	2		420430	1					
ANR	420688	IfStatement	if ( i != MAGIC_SETS - 1 )		420430	1					
ANR	420689	Condition	i != MAGIC_SETS - 1	2985:6:66244:66262	420430	0	True				
ANR	420690	EqualityExpression	i != MAGIC_SETS - 1		420430	0		!=			
ANR	420691	Identifier	i		420430	0					
ANR	420692	AdditiveExpression	MAGIC_SETS - 1		420430	1		-			
ANR	420693	Identifier	MAGIC_SETS		420430	0					
ANR	420694	PrimaryExpression	1		420430	1					
ANR	420695	ExpressionStatement	map -> magic [ i + 1 ] = map -> magic [ i ] + map -> nmagic [ i ]	2986:3:66268:66318	420430	1	True				
ANR	420696	AssignmentExpression	map -> magic [ i + 1 ] = map -> magic [ i ] + map -> nmagic [ i ]		420430	0		=			
ANR	420697	ArrayIndexing	map -> magic [ i + 1 ]		420430	0					
ANR	420698	PtrMemberAccess	map -> magic		420430	0					
ANR	420699	Identifier	map		420430	0					
ANR	420700	Identifier	magic		420430	1					
ANR	420701	AdditiveExpression	i + 1		420430	1		+			
ANR	420702	Identifier	i		420430	0					
ANR	420703	PrimaryExpression	1		420430	1					
ANR	420704	AdditiveExpression	map -> magic [ i ] + map -> nmagic [ i ]		420430	1		+			
ANR	420705	ArrayIndexing	map -> magic [ i ]		420430	0					
ANR	420706	PtrMemberAccess	map -> magic		420430	0					
ANR	420707	Identifier	map		420430	0					
ANR	420708	Identifier	magic		420430	1					
ANR	420709	Identifier	i		420430	1					
ANR	420710	ArrayIndexing	map -> nmagic [ i ]		420430	1					
ANR	420711	PtrMemberAccess	map -> nmagic		420430	0					
ANR	420712	Identifier	map		420430	0					
ANR	420713	Identifier	nmagic		420430	1					
ANR	420714	Identifier	i		420430	1					
ANR	420715	ExpressionStatement	nentries += map -> nmagic [ i ]	2987:2:66322:66348	420430	2	True				
ANR	420716	AssignmentExpression	nentries += map -> nmagic [ i ]		420430	0		+=			
ANR	420717	Identifier	nentries		420430	0					
ANR	420718	ArrayIndexing	map -> nmagic [ i ]		420430	1					
ANR	420719	PtrMemberAccess	map -> nmagic		420430	0					
ANR	420720	Identifier	map		420430	0					
ANR	420721	Identifier	nmagic		420430	1					
ANR	420722	Identifier	i		420430	1					
ANR	420723	IfStatement	if ( entries != nentries + 1 )		420430	41					
ANR	420724	Condition	entries != nentries + 1	2989:5:66358:66380	420430	0	True				
ANR	420725	EqualityExpression	entries != nentries + 1		420430	0		!=			
ANR	420726	Identifier	entries		420430	0					
ANR	420727	AdditiveExpression	nentries + 1		420430	1		+			
ANR	420728	Identifier	nentries		420430	0					
ANR	420729	PrimaryExpression	1		420430	1					
ANR	420730	CompoundStatement		44:30:1191:1191	420430	1					
ANR	420731	ExpressionStatement	"file_error ( ms , 0 , ""Inconsistent entries in `%s' %u != %u"" , dbname , entries , nentries + 1 )"	2990:2:66387:66482	420430	0	True				
ANR	420732	CallExpression	"file_error ( ms , 0 , ""Inconsistent entries in `%s' %u != %u"" , dbname , entries , nentries + 1 )"		420430	0					
ANR	420733	Callee	file_error		420430	0					
ANR	420734	Identifier	file_error		420430	0					
ANR	420735	ArgumentList	ms		420430	1					
ANR	420736	Argument	ms		420430	0					
ANR	420737	Identifier	ms		420430	0					
ANR	420738	Argument	0		420430	1					
ANR	420739	PrimaryExpression	0		420430	0					
ANR	420740	Argument	"""Inconsistent entries in `%s' %u != %u"""		420430	2					
ANR	420741	PrimaryExpression	"""Inconsistent entries in `%s' %u != %u"""		420430	0					
ANR	420742	Argument	dbname		420430	3					
ANR	420743	Identifier	dbname		420430	0					
ANR	420744	Argument	entries		420430	4					
ANR	420745	Identifier	entries		420430	0					
ANR	420746	Argument	nentries + 1		420430	5					
ANR	420747	AdditiveExpression	nentries + 1		420430	0		+			
ANR	420748	Identifier	nentries		420430	0					
ANR	420749	PrimaryExpression	1		420430	1					
ANR	420750	ReturnStatement	return - 1 ;	2992:2:66486:66495	420430	1	True				
ANR	420751	UnaryOperationExpression	- 1		420430	0					
ANR	420752	UnaryOperator	-		420430	0					
ANR	420753	PrimaryExpression	1		420430	1					
ANR	420754	IfStatement	if ( needsbyteswap )		420430	42					
ANR	420755	Condition	needsbyteswap	2994:5:66505:66517	420430	0	True				
ANR	420756	Identifier	needsbyteswap		420430	0					
ANR	420757	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		420430	1					
ANR	420758	ForInit	i = 0 ;	2995:7:66527:66532	420430	0	True				
ANR	420759	AssignmentExpression	i = 0		420430	0		=			
ANR	420760	Identifier	i		420430	0					
ANR	420761	PrimaryExpression	0		420430	1					
ANR	420762	Condition	i < MAGIC_SETS	2995:14:66534:66547	420430	1	True				
ANR	420763	RelationalExpression	i < MAGIC_SETS		420430	0		<			
ANR	420764	Identifier	i		420430	0					
ANR	420765	Identifier	MAGIC_SETS		420430	1					
ANR	420766	PostIncDecOperationExpression	i ++	2995:30:66550:66552	420430	2	True				
ANR	420767	Identifier	i		420430	0					
ANR	420768	IncDec	++		420430	1					
ANR	420769	ExpressionStatement	"byteswap ( map -> magic [ i ] , map -> nmagic [ i ] )"	2996:3:66558:66597	420430	3	True				
ANR	420770	CallExpression	"byteswap ( map -> magic [ i ] , map -> nmagic [ i ] )"		420430	0					
ANR	420771	Callee	byteswap		420430	0					
ANR	420772	Identifier	byteswap		420430	0					
ANR	420773	ArgumentList	map -> magic [ i ]		420430	1					
ANR	420774	Argument	map -> magic [ i ]		420430	0					
ANR	420775	ArrayIndexing	map -> magic [ i ]		420430	0					
ANR	420776	PtrMemberAccess	map -> magic		420430	0					
ANR	420777	Identifier	map		420430	0					
ANR	420778	Identifier	magic		420430	1					
ANR	420779	Identifier	i		420430	1					
ANR	420780	Argument	map -> nmagic [ i ]		420430	1					
ANR	420781	ArrayIndexing	map -> nmagic [ i ]		420430	0					
ANR	420782	PtrMemberAccess	map -> nmagic		420430	0					
ANR	420783	Identifier	map		420430	0					
ANR	420784	Identifier	nmagic		420430	1					
ANR	420785	Identifier	i		420430	1					
ANR	420786	ReturnStatement	return 0 ;	2997:1:66600:66608	420430	43	True				
ANR	420787	PrimaryExpression	0		420430	0					
ANR	420788	ReturnType	int		420430	1					
ANR	420789	Identifier	check_buffer		420430	2					
ANR	420790	ParameterList	"struct magic_set * ms , struct magic_map * map , const char * dbname"		420430	3					
ANR	420791	Parameter	struct magic_set * ms	2945:13:65126:65145	420430	0	True				
ANR	420792	ParameterType	struct magic_set *		420430	0					
ANR	420793	Identifier	ms		420430	1					
ANR	420794	Parameter	struct magic_map * map	2945:35:65148:65168	420430	1	True				
ANR	420795	ParameterType	struct magic_map *		420430	0					
ANR	420796	Identifier	map		420430	1					
ANR	420797	Parameter	const char * dbname	2945:58:65171:65188	420430	2	True				
ANR	420798	ParameterType	const char *		420430	0					
ANR	420799	Identifier	dbname		420430	1					
ANR	420800	CFGEntryNode	ENTRY		420430		True				
ANR	420801	CFGExitNode	EXIT		420430		True				
ANR	420802	Symbol	VERSIONNO		420430						
ANR	420803	Symbol	nentries		420430						
ANR	420804	Symbol	MAGIC_SETS		420430						
ANR	420805	Symbol	ms		420430						
ANR	420806	Symbol	* map		420430						
ANR	420807	Symbol	* map -> magic		420430						
ANR	420808	Symbol	map -> len		420430						
ANR	420809	Symbol	i		420430						
ANR	420810	Symbol	version		420430						
ANR	420811	Symbol	swap4		420430						
ANR	420812	Symbol	ptr		420430						
ANR	420813	Symbol	needsbyteswap		420430						
ANR	420814	Symbol	* * map		420430						
ANR	420815	Symbol	entries		420430						
ANR	420816	Symbol	* i		420430						
ANR	420817	Symbol	dbname		420430						
ANR	420818	Symbol	* ptr		420430						
ANR	420819	Symbol	map -> magic		420430						
ANR	420820	Symbol	map -> nmagic		420430						
ANR	420821	Symbol	MAGICNO		420430						
ANR	420822	Symbol	* map -> nmagic		420430						
ANR	420823	Symbol	map		420430						
ANR	420824	Function	apprentice_compile	3003:8:66654:67865							
ANR	420825	FunctionDef	"apprentice_compile (struct magic_set * ms , struct magic_map * map , const char * fn)"		420824	0					
ANR	420826	CompoundStatement		3005:0:66738:67865	420824	0					
ANR	420827	Statement	static	3006:1:66741:66746	420824	0	True				
ANR	420828	IdentifierDeclStatement	const size_t nm = sizeof ( * map -> nmagic ) * MAGIC_SETS ;	3006:8:66748:66799	420824	1	True				
ANR	420829	IdentifierDecl	nm = sizeof ( * map -> nmagic ) * MAGIC_SETS		420824	0					
ANR	420830	IdentifierDeclType	const size_t		420824	0					
ANR	420831	Identifier	nm		420824	1					
ANR	420832	AssignmentExpression	nm = sizeof ( * map -> nmagic ) * MAGIC_SETS		420824	2		=			
ANR	420833	Identifier	nm		420824	0					
ANR	420834	MultiplicativeExpression	sizeof ( * map -> nmagic ) * MAGIC_SETS		420824	1		*			
ANR	420835	SizeofExpression	sizeof ( * map -> nmagic )		420824	0					
ANR	420836	Sizeof	sizeof		420824	0					
ANR	420837	UnaryOperationExpression	* map -> nmagic		420824	1					
ANR	420838	UnaryOperator	*		420824	0					
ANR	420839	PtrMemberAccess	map -> nmagic		420824	1					
ANR	420840	Identifier	map		420824	0					
ANR	420841	Identifier	nmagic		420824	1					
ANR	420842	Identifier	MAGIC_SETS		420824	1					
ANR	420843	Statement	static	3007:1:66802:66807	420824	2	True				
ANR	420844	IdentifierDeclStatement	const size_t m = sizeof ( * * map -> magic ) ;	3007:8:66809:66846	420824	3	True				
ANR	420845	IdentifierDecl	m = sizeof ( * * map -> magic )		420824	0					
ANR	420846	IdentifierDeclType	const size_t		420824	0					
ANR	420847	Identifier	m		420824	1					
ANR	420848	AssignmentExpression	m = sizeof ( * * map -> magic )		420824	2		=			
ANR	420849	Identifier	m		420824	0					
ANR	420850	SizeofExpression	sizeof ( * * map -> magic )		420824	1					
ANR	420851	Sizeof	sizeof		420824	0					
ANR	420852	UnaryOperationExpression	* * map -> magic		420824	1					
ANR	420853	UnaryOperator	*		420824	0					
ANR	420854	UnaryOperationExpression	* map -> magic		420824	1					
ANR	420855	UnaryOperator	*		420824	0					
ANR	420856	PtrMemberAccess	map -> magic		420824	1					
ANR	420857	Identifier	map		420824	0					
ANR	420858	Identifier	magic		420824	1					
ANR	420859	IdentifierDeclStatement	int fd = - 1 ;	3008:1:66849:66860	420824	4	True				
ANR	420860	IdentifierDecl	fd = - 1		420824	0					
ANR	420861	IdentifierDeclType	int		420824	0					
ANR	420862	Identifier	fd		420824	1					
ANR	420863	AssignmentExpression	fd = - 1		420824	2		=			
ANR	420864	Identifier	fd		420824	0					
ANR	420865	UnaryOperationExpression	- 1		420824	1					
ANR	420866	UnaryOperator	-		420824	0					
ANR	420867	PrimaryExpression	1		420824	1					
ANR	420868	IdentifierDeclStatement	size_t len ;	3009:1:66863:66873	420824	5	True				
ANR	420869	IdentifierDecl	len		420824	0					
ANR	420870	IdentifierDeclType	size_t		420824	0					
ANR	420871	Identifier	len		420824	1					
ANR	420872	IdentifierDeclStatement	char * dbname ;	3010:1:66876:66888	420824	6	True				
ANR	420873	IdentifierDecl	* dbname		420824	0					
ANR	420874	IdentifierDeclType	char *		420824	0					
ANR	420875	Identifier	dbname		420824	1					
ANR	420876	IdentifierDeclStatement	int rv = - 1 ;	3011:1:66891:66902	420824	7	True				
ANR	420877	IdentifierDecl	rv = - 1		420824	0					
ANR	420878	IdentifierDeclType	int		420824	0					
ANR	420879	Identifier	rv		420824	1					
ANR	420880	AssignmentExpression	rv = - 1		420824	2		=			
ANR	420881	Identifier	rv		420824	0					
ANR	420882	UnaryOperationExpression	- 1		420824	1					
ANR	420883	UnaryOperator	-		420824	0					
ANR	420884	PrimaryExpression	1		420824	1					
ANR	420885	IdentifierDeclStatement	uint32_t i ;	3012:1:66905:66915	420824	8	True				
ANR	420886	IdentifierDecl	i		420824	0					
ANR	420887	IdentifierDeclType	uint32_t		420824	0					
ANR	420888	Identifier	i		420824	1					
ANR	420889	ClassDefStatement	union { struct magic m ; uint32_t h [ 2 + MAGIC_SETS ] ; } hdr ;	3013:1:66918:66980	420824	9	True				
ANR	420890	IdentifierDecl	hdr		420824	0					
ANR	420891	IdentifierDeclType			420824	0					
ANR	420892	Identifier	hdr		420824	1					
ANR	420893	IdentifierDeclStatement	php_stream * stream ;	3017:1:66983:67001	420824	10	True				
ANR	420894	IdentifierDecl	* stream		420824	0					
ANR	420895	IdentifierDeclType	php_stream *		420824	0					
ANR	420896	Identifier	stream		420824	1					
ANR	420897	ExpressionStatement	"dbname = mkdbname ( ms , fn , 0 )"	3020:1:67006:67034	420824	11	True				
ANR	420898	AssignmentExpression	"dbname = mkdbname ( ms , fn , 0 )"		420824	0		=			
ANR	420899	Identifier	dbname		420824	0					
ANR	420900	CallExpression	"mkdbname ( ms , fn , 0 )"		420824	1					
ANR	420901	Callee	mkdbname		420824	0					
ANR	420902	Identifier	mkdbname		420824	0					
ANR	420903	ArgumentList	ms		420824	1					
ANR	420904	Argument	ms		420824	0					
ANR	420905	Identifier	ms		420824	0					
ANR	420906	Argument	fn		420824	1					
ANR	420907	Identifier	fn		420824	0					
ANR	420908	Argument	0		420824	2					
ANR	420909	PrimaryExpression	0		420824	0					
ANR	420910	IfStatement	if ( dbname == NULL )		420824	12					
ANR	420911	Condition	dbname == NULL	3022:5:67042:67055	420824	0	True				
ANR	420912	EqualityExpression	dbname == NULL		420824	0		==			
ANR	420913	Identifier	dbname		420824	0					
ANR	420914	Identifier	NULL		420824	1					
ANR	420915	GotoStatement	goto out ;	3023:2:67060:67068	420824	1	True				
ANR	420916	Identifier	out		420824	0					
ANR	420917	ExpressionStatement	"stream = php_stream_open_wrapper ( ( char * ) fn , ""wb+"" , REPORT_ERRORS , NULL )"	3026:1:67120:67192	420824	13	True				
ANR	420918	AssignmentExpression	"stream = php_stream_open_wrapper ( ( char * ) fn , ""wb+"" , REPORT_ERRORS , NULL )"		420824	0		=			
ANR	420919	Identifier	stream		420824	0					
ANR	420920	CallExpression	"php_stream_open_wrapper ( ( char * ) fn , ""wb+"" , REPORT_ERRORS , NULL )"		420824	1					
ANR	420921	Callee	php_stream_open_wrapper		420824	0					
ANR	420922	Identifier	php_stream_open_wrapper		420824	0					
ANR	420923	ArgumentList	( char * ) fn		420824	1					
ANR	420924	Argument	( char * ) fn		420824	0					
ANR	420925	CastExpression	( char * ) fn		420824	0					
ANR	420926	CastTarget	char *		420824	0					
ANR	420927	Identifier	fn		420824	1					
ANR	420928	Argument	"""wb+"""		420824	1					
ANR	420929	PrimaryExpression	"""wb+"""		420824	0					
ANR	420930	Argument	REPORT_ERRORS		420824	2					
ANR	420931	Identifier	REPORT_ERRORS		420824	0					
ANR	420932	Argument	NULL		420824	3					
ANR	420933	Identifier	NULL		420824	0					
ANR	420934	IfStatement	if ( ! stream )		420824	14					
ANR	420935	Condition	! stream	3028:5:67200:67206	420824	0	True				
ANR	420936	UnaryOperationExpression	! stream		420824	0					
ANR	420937	UnaryOperator	!		420824	0					
ANR	420938	Identifier	stream		420824	1					
ANR	420939	CompoundStatement		24:14:470:470	420824	1					
ANR	420940	ExpressionStatement	"file_error ( ms , errno , ""cannot open `%s'"" , dbname )"	3029:2:67213:67262	420824	0	True				
ANR	420941	CallExpression	"file_error ( ms , errno , ""cannot open `%s'"" , dbname )"		420824	0					
ANR	420942	Callee	file_error		420824	0					
ANR	420943	Identifier	file_error		420824	0					
ANR	420944	ArgumentList	ms		420824	1					
ANR	420945	Argument	ms		420824	0					
ANR	420946	Identifier	ms		420824	0					
ANR	420947	Argument	errno		420824	1					
ANR	420948	Identifier	errno		420824	0					
ANR	420949	Argument	"""cannot open `%s'"""		420824	2					
ANR	420950	PrimaryExpression	"""cannot open `%s'"""		420824	0					
ANR	420951	Argument	dbname		420824	3					
ANR	420952	Identifier	dbname		420824	0					
ANR	420953	GotoStatement	goto out ;	3030:2:67266:67274	420824	1	True				
ANR	420954	Identifier	out		420824	0					
ANR	420955	ExpressionStatement	"memset ( & hdr , 0 , sizeof ( hdr ) )"	3032:1:67280:67308	420824	15	True				
ANR	420956	CallExpression	"memset ( & hdr , 0 , sizeof ( hdr ) )"		420824	0					
ANR	420957	Callee	memset		420824	0					
ANR	420958	Identifier	memset		420824	0					
ANR	420959	ArgumentList	& hdr		420824	1					
ANR	420960	Argument	& hdr		420824	0					
ANR	420961	UnaryOperationExpression	& hdr		420824	0					
ANR	420962	UnaryOperator	&		420824	0					
ANR	420963	Identifier	hdr		420824	1					
ANR	420964	Argument	0		420824	1					
ANR	420965	PrimaryExpression	0		420824	0					
ANR	420966	Argument	sizeof ( hdr )		420824	2					
ANR	420967	SizeofExpression	sizeof ( hdr )		420824	0					
ANR	420968	Sizeof	sizeof		420824	0					
ANR	420969	SizeofOperand	hdr		420824	1					
ANR	420970	ExpressionStatement	hdr . h [ 0 ] = MAGICNO	3033:1:67311:67329	420824	16	True				
ANR	420971	AssignmentExpression	hdr . h [ 0 ] = MAGICNO		420824	0		=			
ANR	420972	ArrayIndexing	hdr . h [ 0 ]		420824	0					
ANR	420973	MemberAccess	hdr . h		420824	0					
ANR	420974	Identifier	hdr		420824	0					
ANR	420975	Identifier	h		420824	1					
ANR	420976	PrimaryExpression	0		420824	1					
ANR	420977	Identifier	MAGICNO		420824	1					
ANR	420978	ExpressionStatement	hdr . h [ 1 ] = VERSIONNO	3034:1:67332:67352	420824	17	True				
ANR	420979	AssignmentExpression	hdr . h [ 1 ] = VERSIONNO		420824	0		=			
ANR	420980	ArrayIndexing	hdr . h [ 1 ]		420824	0					
ANR	420981	MemberAccess	hdr . h		420824	0					
ANR	420982	Identifier	hdr		420824	0					
ANR	420983	Identifier	h		420824	1					
ANR	420984	PrimaryExpression	1		420824	1					
ANR	420985	Identifier	VERSIONNO		420824	1					
ANR	420986	ExpressionStatement	"memcpy ( hdr . h + 2 , map -> nmagic , nm )"	3035:1:67355:67389	420824	18	True				
ANR	420987	CallExpression	"memcpy ( hdr . h + 2 , map -> nmagic , nm )"		420824	0					
ANR	420988	Callee	memcpy		420824	0					
ANR	420989	Identifier	memcpy		420824	0					
ANR	420990	ArgumentList	hdr . h + 2		420824	1					
ANR	420991	Argument	hdr . h + 2		420824	0					
ANR	420992	AdditiveExpression	hdr . h + 2		420824	0		+			
ANR	420993	MemberAccess	hdr . h		420824	0					
ANR	420994	Identifier	hdr		420824	0					
ANR	420995	Identifier	h		420824	1					
ANR	420996	PrimaryExpression	2		420824	1					
ANR	420997	Argument	map -> nmagic		420824	1					
ANR	420998	PtrMemberAccess	map -> nmagic		420824	0					
ANR	420999	Identifier	map		420824	0					
ANR	421000	Identifier	nmagic		420824	1					
ANR	421001	Argument	nm		420824	2					
ANR	421002	Identifier	nm		420824	0					
ANR	421003	IfStatement	"if ( php_stream_write ( stream , ( const char * ) & hdr , sizeof ( hdr ) ) != ( ssize_t ) sizeof ( hdr ) )"		420824	19					
ANR	421004	Condition	"php_stream_write ( stream , ( const char * ) & hdr , sizeof ( hdr ) ) != ( ssize_t ) sizeof ( hdr )"	3037:5:67397:67476	420824	0	True				
ANR	421005	EqualityExpression	"php_stream_write ( stream , ( const char * ) & hdr , sizeof ( hdr ) ) != ( ssize_t ) sizeof ( hdr )"		420824	0		!=			
ANR	421006	CallExpression	"php_stream_write ( stream , ( const char * ) & hdr , sizeof ( hdr ) )"		420824	0					
ANR	421007	Callee	php_stream_write		420824	0					
ANR	421008	Identifier	php_stream_write		420824	0					
ANR	421009	ArgumentList	stream		420824	1					
ANR	421010	Argument	stream		420824	0					
ANR	421011	Identifier	stream		420824	0					
ANR	421012	Argument	( const char * ) & hdr		420824	1					
ANR	421013	CastExpression	( const char * ) & hdr		420824	0					
ANR	421014	CastTarget	const char *		420824	0					
ANR	421015	UnaryOperationExpression	& hdr		420824	1					
ANR	421016	UnaryOperator	&		420824	0					
ANR	421017	Identifier	hdr		420824	1					
ANR	421018	Argument	sizeof ( hdr )		420824	2					
ANR	421019	SizeofExpression	sizeof ( hdr )		420824	0					
ANR	421020	Sizeof	sizeof		420824	0					
ANR	421021	SizeofOperand	hdr		420824	1					
ANR	421022	CastExpression	( ssize_t ) sizeof ( hdr )		420824	1					
ANR	421023	CastTarget	ssize_t		420824	0					
ANR	421024	SizeofExpression	sizeof ( hdr )		420824	1					
ANR	421025	Sizeof	sizeof		420824	0					
ANR	421026	SizeofOperand	hdr		420824	1					
ANR	421027	CompoundStatement		33:87:740:740	420824	1					
ANR	421028	ExpressionStatement	"file_error ( ms , errno , ""error writing `%s'"" , dbname )"	3038:2:67483:67534	420824	0	True				
ANR	421029	CallExpression	"file_error ( ms , errno , ""error writing `%s'"" , dbname )"		420824	0					
ANR	421030	Callee	file_error		420824	0					
ANR	421031	Identifier	file_error		420824	0					
ANR	421032	ArgumentList	ms		420824	1					
ANR	421033	Argument	ms		420824	0					
ANR	421034	Identifier	ms		420824	0					
ANR	421035	Argument	errno		420824	1					
ANR	421036	Identifier	errno		420824	0					
ANR	421037	Argument	"""error writing `%s'"""		420824	2					
ANR	421038	PrimaryExpression	"""error writing `%s'"""		420824	0					
ANR	421039	Argument	dbname		420824	3					
ANR	421040	Identifier	dbname		420824	0					
ANR	421041	GotoStatement	goto out ;	3039:2:67538:67546	420824	1	True				
ANR	421042	Identifier	out		420824	0					
ANR	421043	ForStatement	for ( i = 0 ; i < MAGIC_SETS ; i ++ )		420824	20					
ANR	421044	ForInit	i = 0 ;	3042:6:67558:67563	420824	0	True				
ANR	421045	AssignmentExpression	i = 0		420824	0		=			
ANR	421046	Identifier	i		420824	0					
ANR	421047	PrimaryExpression	0		420824	1					
ANR	421048	Condition	i < MAGIC_SETS	3042:13:67565:67578	420824	1	True				
ANR	421049	RelationalExpression	i < MAGIC_SETS		420824	0		<			
ANR	421050	Identifier	i		420824	0					
ANR	421051	Identifier	MAGIC_SETS		420824	1					
ANR	421052	PostIncDecOperationExpression	i ++	3042:29:67581:67583	420824	2	True				
ANR	421053	Identifier	i		420824	0					
ANR	421054	IncDec	++		420824	1					
ANR	421055	CompoundStatement		38:34:847:847	420824	3					
ANR	421056	ExpressionStatement	len = m * map -> nmagic [ i ]	3043:2:67590:67614	420824	0	True				
ANR	421057	AssignmentExpression	len = m * map -> nmagic [ i ]		420824	0		=			
ANR	421058	Identifier	len		420824	0					
ANR	421059	MultiplicativeExpression	m * map -> nmagic [ i ]		420824	1		*			
ANR	421060	Identifier	m		420824	0					
ANR	421061	ArrayIndexing	map -> nmagic [ i ]		420824	1					
ANR	421062	PtrMemberAccess	map -> nmagic		420824	0					
ANR	421063	Identifier	map		420824	0					
ANR	421064	Identifier	nmagic		420824	1					
ANR	421065	Identifier	i		420824	1					
ANR	421066	IfStatement	"if ( php_stream_write ( stream , ( const char * ) map -> magic [ i ] , len ) != ( ssize_t ) len )"		420824	1					
ANR	421067	Condition	"php_stream_write ( stream , ( const char * ) map -> magic [ i ] , len ) != ( ssize_t ) len"	3044:6:67622:67695	420824	0	True				
ANR	421068	EqualityExpression	"php_stream_write ( stream , ( const char * ) map -> magic [ i ] , len ) != ( ssize_t ) len"		420824	0		!=			
ANR	421069	CallExpression	"php_stream_write ( stream , ( const char * ) map -> magic [ i ] , len )"		420824	0					
ANR	421070	Callee	php_stream_write		420824	0					
ANR	421071	Identifier	php_stream_write		420824	0					
ANR	421072	ArgumentList	stream		420824	1					
ANR	421073	Argument	stream		420824	0					
ANR	421074	Identifier	stream		420824	0					
ANR	421075	Argument	( const char * ) map -> magic [ i ]		420824	1					
ANR	421076	CastExpression	( const char * ) map -> magic [ i ]		420824	0					
ANR	421077	CastTarget	const char *		420824	0					
ANR	421078	ArrayIndexing	map -> magic [ i ]		420824	1					
ANR	421079	PtrMemberAccess	map -> magic		420824	0					
ANR	421080	Identifier	map		420824	0					
ANR	421081	Identifier	magic		420824	1					
ANR	421082	Identifier	i		420824	1					
ANR	421083	Argument	len		420824	2					
ANR	421084	Identifier	len		420824	0					
ANR	421085	CastExpression	( ssize_t ) len		420824	1					
ANR	421086	CastTarget	ssize_t		420824	0					
ANR	421087	Identifier	len		420824	1					
ANR	421088	CompoundStatement		40:82:959:959	420824	1					
ANR	421089	ExpressionStatement	"file_error ( ms , errno , ""error writing `%s'"" , dbname )"	3045:3:67703:67754	420824	0	True				
ANR	421090	CallExpression	"file_error ( ms , errno , ""error writing `%s'"" , dbname )"		420824	0					
ANR	421091	Callee	file_error		420824	0					
ANR	421092	Identifier	file_error		420824	0					
ANR	421093	ArgumentList	ms		420824	1					
ANR	421094	Argument	ms		420824	0					
ANR	421095	Identifier	ms		420824	0					
ANR	421096	Argument	errno		420824	1					
ANR	421097	Identifier	errno		420824	0					
ANR	421098	Argument	"""error writing `%s'"""		420824	2					
ANR	421099	PrimaryExpression	"""error writing `%s'"""		420824	0					
ANR	421100	Argument	dbname		420824	3					
ANR	421101	Identifier	dbname		420824	0					
ANR	421102	GotoStatement	goto out ;	3046:3:67759:67767	420824	1	True				
ANR	421103	Identifier	out		420824	0					
ANR	421104	IfStatement	if ( stream )		420824	21					
ANR	421105	Condition	stream	3050:5:67782:67787	420824	0	True				
ANR	421106	Identifier	stream		420824	0					
ANR	421107	CompoundStatement		46:13:1051:1051	420824	1					
ANR	421108	ExpressionStatement	php_stream_close ( stream )	3051:2:67794:67818	420824	0	True				
ANR	421109	CallExpression	php_stream_close ( stream )		420824	0					
ANR	421110	Callee	php_stream_close		420824	0					
ANR	421111	Identifier	php_stream_close		420824	0					
ANR	421112	ArgumentList	stream		420824	1					
ANR	421113	Argument	stream		420824	0					
ANR	421114	Identifier	stream		420824	0					
ANR	421115	ExpressionStatement	rv = 0	3053:1:67824:67830	420824	22	True				
ANR	421116	AssignmentExpression	rv = 0		420824	0		=			
ANR	421117	Identifier	rv		420824	0					
ANR	421118	PrimaryExpression	0		420824	1					
ANR	421119	Label	out :	3054:0:67832:67835	420824	23	True				
ANR	421120	Identifier	out		420824	0					
ANR	421121	ExpressionStatement	efree ( dbname )	3055:1:67838:67851	420824	24	True				
ANR	421122	CallExpression	efree ( dbname )		420824	0					
ANR	421123	Callee	efree		420824	0					
ANR	421124	Identifier	efree		420824	0					
ANR	421125	ArgumentList	dbname		420824	1					
ANR	421126	Argument	dbname		420824	0					
ANR	421127	Identifier	dbname		420824	0					
ANR	421128	ReturnStatement	return rv ;	3056:1:67854:67863	420824	25	True				
ANR	421129	Identifier	rv		420824	0					
ANR	421130	ReturnType	int		420824	1					
ANR	421131	Identifier	apprentice_compile		420824	2					
ANR	421132	ParameterList	"struct magic_set * ms , struct magic_map * map , const char * fn"		420824	3					
ANR	421133	Parameter	struct magic_set * ms	3004:19:66677:66696	420824	0	True				
ANR	421134	ParameterType	struct magic_set *		420824	0					
ANR	421135	Identifier	ms		420824	1					
ANR	421136	Parameter	struct magic_map * map	3004:41:66699:66719	420824	1	True				
ANR	421137	ParameterType	struct magic_map *		420824	0					
ANR	421138	Identifier	map		420824	1					
ANR	421139	Parameter	const char * fn	3004:64:66722:66735	420824	2	True				
ANR	421140	ParameterType	const char *		420824	0					
ANR	421141	Identifier	fn		420824	1					
ANR	421142	CFGEntryNode	ENTRY		420824		True				
ANR	421143	CFGExitNode	EXIT		420824		True				
ANR	421144	Symbol	VERSIONNO		420824						
ANR	421145	Symbol	MAGIC_SETS		420824						
ANR	421146	Symbol	rv		420824						
ANR	421147	Symbol	* map		420824						
ANR	421148	Symbol	fn		420824						
ANR	421149	Symbol	hdr . h		420824						
ANR	421150	Symbol	php_stream_open_wrapper		420824						
ANR	421151	Symbol	* * map -> magic		420824						
ANR	421152	Symbol	len		420824						
ANR	421153	Symbol	stream		420824						
ANR	421154	Symbol	map -> magic		420824						
ANR	421155	Symbol	map -> nmagic		420824						
ANR	421156	Symbol	* * * map		420824						
ANR	421157	Symbol	& hdr		420824						
ANR	421158	Symbol	* map -> nmagic		420824						
ANR	421159	Symbol	map		420824						
ANR	421160	Symbol	* hdr		420824						
ANR	421161	Symbol	errno		420824						
ANR	421162	Symbol	NULL		420824						
ANR	421163	Symbol	ms		420824						
ANR	421164	Symbol	* map -> magic		420824						
ANR	421165	Symbol	i		420824						
ANR	421166	Symbol	m		420824						
ANR	421167	Symbol	* * map		420824						
ANR	421168	Symbol	mkdbname		420824						
ANR	421169	Symbol	php_stream_write		420824						
ANR	421170	Symbol	* i		420824						
ANR	421171	Symbol	dbname		420824						
ANR	421172	Symbol	REPORT_ERRORS		420824						
ANR	421173	Symbol	* hdr . h		420824						
ANR	421174	Symbol	hdr		420824						
ANR	421175	Symbol	MAGICNO		420824						
ANR	421176	Symbol	fd		420824						
ANR	421177	Symbol	nm		420824						
ANR	421178	DeclStmt									
ANR	421179	Decl							const char	const char [ ]	ext
ANR	421180	Function	mkdbname	3063:8:67935:68858							
ANR	421181	FunctionDef	"mkdbname (struct magic_set * ms , const char * fn , int strip)"		421180	0					
ANR	421182	CompoundStatement		3065:0:68000:68858	421180	0					
ANR	421183	IdentifierDeclStatement	"const char * p , * q ;"	3066:1:68003:68020	421180	0	True				
ANR	421184	IdentifierDecl	* p		421180	0					
ANR	421185	IdentifierDeclType	const char *		421180	0					
ANR	421186	Identifier	p		421180	1					
ANR	421187	IdentifierDecl	* q		421180	1					
ANR	421188	IdentifierDeclType	const char *		421180	0					
ANR	421189	Identifier	q		421180	1					
ANR	421190	IdentifierDeclStatement	char * buf ;	3067:1:68023:68032	421180	1	True				
ANR	421191	IdentifierDecl	* buf		421180	0					
ANR	421192	IdentifierDeclType	char *		421180	0					
ANR	421193	Identifier	buf		421180	1					
ANR	421194	IfStatement	if ( strip )		421180	2					
ANR	421195	Condition	strip	3069:5:68040:68044	421180	0	True				
ANR	421196	Identifier	strip		421180	0					
ANR	421197	CompoundStatement		5:12:46:46	421180	1					
ANR	421198	IfStatement	"if ( ( p = strrchr ( fn , '/' ) ) != NULL )"		421180	0					
ANR	421199	Condition	"( p = strrchr ( fn , '/' ) ) != NULL"	3070:6:68055:68084	421180	0	True				
ANR	421200	EqualityExpression	"( p = strrchr ( fn , '/' ) ) != NULL"		421180	0		!=			
ANR	421201	AssignmentExpression	"p = strrchr ( fn , '/' )"		421180	0		=			
ANR	421202	Identifier	p		421180	0					
ANR	421203	CallExpression	"strrchr ( fn , '/' )"		421180	1					
ANR	421204	Callee	strrchr		421180	0					
ANR	421205	Identifier	strrchr		421180	0					
ANR	421206	ArgumentList	fn		421180	1					
ANR	421207	Argument	fn		421180	0					
ANR	421208	Identifier	fn		421180	0					
ANR	421209	Argument	'/'		421180	1					
ANR	421210	PrimaryExpression	'/'		421180	0					
ANR	421211	Identifier	NULL		421180	1					
ANR	421212	ExpressionStatement	fn = ++ p	3071:3:68090:68098	421180	1	True				
ANR	421213	AssignmentExpression	fn = ++ p		421180	0		=			
ANR	421214	Identifier	fn		421180	0					
ANR	421215	UnaryExpression	++ p		421180	1					
ANR	421216	IncDec	++		421180	0					
ANR	421217	Identifier	p		421180	1					
ANR	421218	ForStatement	for ( q = fn ; * q ; q ++ )		421180	3					
ANR	421219	ForInit	q = fn ;	3074:6:68110:68116	421180	0	True				
ANR	421220	AssignmentExpression	q = fn		421180	0		=			
ANR	421221	Identifier	q		421180	0					
ANR	421222	Identifier	fn		421180	1					
ANR	421223	Condition	* q	3074:14:68118:68119	421180	1	True				
ANR	421224	UnaryOperationExpression	* q		421180	0					
ANR	421225	UnaryOperator	*		421180	0					
ANR	421226	Identifier	q		421180	1					
ANR	421227	PostIncDecOperationExpression	q ++	3074:18:68122:68124	421180	2	True				
ANR	421228	Identifier	q		421180	0					
ANR	421229	IncDec	++		421180	1					
ANR	421230	ContinueStatement	continue ;	3075:2:68129:68137	421180	3	True				
ANR	421231	ForStatement	"for ( p = ext + sizeof ( ext ) - 1 ; p >= ext && q >= fn ; p -- , q -- )"		421180	4					
ANR	421232	ForInit	p = ext + sizeof ( ext ) - 1 ;	3077:6:68166:68191	421180	0	True				
ANR	421233	AssignmentExpression	p = ext + sizeof ( ext ) - 1		421180	0		=			
ANR	421234	Identifier	p		421180	0					
ANR	421235	AdditiveExpression	ext + sizeof ( ext ) - 1		421180	1		+			
ANR	421236	Identifier	ext		421180	0					
ANR	421237	AdditiveExpression	sizeof ( ext ) - 1		421180	1		-			
ANR	421238	SizeofExpression	sizeof ( ext )		421180	0					
ANR	421239	Sizeof	sizeof		421180	0					
ANR	421240	SizeofOperand	ext		421180	1					
ANR	421241	PrimaryExpression	1		421180	1					
ANR	421242	Condition	p >= ext && q >= fn	3077:33:68193:68211	421180	1	True				
ANR	421243	AndExpression	p >= ext && q >= fn		421180	0		&&			
ANR	421244	RelationalExpression	p >= ext		421180	0		>=			
ANR	421245	Identifier	p		421180	0					
ANR	421246	Identifier	ext		421180	1					
ANR	421247	RelationalExpression	q >= fn		421180	1		>=			
ANR	421248	Identifier	q		421180	0					
ANR	421249	Identifier	fn		421180	1					
ANR	421250	Expression	"p -- , q --"	3077:54:68214:68221	421180	2	True				
ANR	421251	PostIncDecOperationExpression	p --		421180	0					
ANR	421252	Identifier	p		421180	0					
ANR	421253	IncDec	--		421180	1					
ANR	421254	PostIncDecOperationExpression	q --		421180	1					
ANR	421255	Identifier	q		421180	0					
ANR	421256	IncDec	--		421180	1					
ANR	421257	IfStatement	if ( * p != * q )		421180	3					
ANR	421258	Condition	* p != * q	3078:6:68230:68237	421180	0	True				
ANR	421259	EqualityExpression	* p != * q		421180	0		!=			
ANR	421260	UnaryOperationExpression	* p		421180	0					
ANR	421261	UnaryOperator	*		421180	0					
ANR	421262	Identifier	p		421180	1					
ANR	421263	UnaryOperationExpression	* q		421180	1					
ANR	421264	UnaryOperator	*		421180	0					
ANR	421265	Identifier	q		421180	1					
ANR	421266	BreakStatement	break ;	3079:3:68243:68248	421180	1	True				
ANR	421267	IfStatement	if ( p >= ext )		421180	5					
ANR	421268	Condition	p >= ext	3082:5:68292:68299	421180	0	True				
ANR	421269	RelationalExpression	p >= ext		421180	0		>=			
ANR	421270	Identifier	p		421180	0					
ANR	421271	Identifier	ext		421180	1					
ANR	421272	WhileStatement	while ( * q )		421180	1					
ANR	421273	Condition	* q	3083:9:68311:68312	421180	0	True				
ANR	421274	UnaryOperationExpression	* q		421180	0					
ANR	421275	UnaryOperator	*		421180	0					
ANR	421276	Identifier	q		421180	1					
ANR	421277	ExpressionStatement	q ++	3084:3:68318:68321	421180	1	True				
ANR	421278	PostIncDecOperationExpression	q ++		421180	0					
ANR	421279	Identifier	q		421180	0					
ANR	421280	IncDec	++		421180	1					
ANR	421281	ExpressionStatement	q ++	3086:1:68325:68328	421180	6	True				
ANR	421282	PostIncDecOperationExpression	q ++		421180	0					
ANR	421283	Identifier	q		421180	0					
ANR	421284	IncDec	++		421180	1					
ANR	421285	IfStatement	if ( ms -> flags & MAGIC_MIME )		421180	7					
ANR	421286	Condition	ms -> flags & MAGIC_MIME	3088:5:68391:68412	421180	0	True				
ANR	421287	BitAndExpression	ms -> flags & MAGIC_MIME		421180	0		&			
ANR	421288	PtrMemberAccess	ms -> flags		421180	0					
ANR	421289	Identifier	ms		421180	0					
ANR	421290	Identifier	flags		421180	1					
ANR	421291	Identifier	MAGIC_MIME		421180	1					
ANR	421292	CompoundStatement		24:29:414:414	421180	1					
ANR	421293	ExpressionStatement	"spprintf ( & buf , MAXPATHLEN , ""%.*s.mime%s"" , ( int ) ( q - fn ) , fn , ext )"	3089:2:68419:68484	421180	0	True				
ANR	421294	CallExpression	"spprintf ( & buf , MAXPATHLEN , ""%.*s.mime%s"" , ( int ) ( q - fn ) , fn , ext )"		421180	0					
ANR	421295	Callee	spprintf		421180	0					
ANR	421296	Identifier	spprintf		421180	0					
ANR	421297	ArgumentList	& buf		421180	1					
ANR	421298	Argument	& buf		421180	0					
ANR	421299	UnaryOperationExpression	& buf		421180	0					
ANR	421300	UnaryOperator	&		421180	0					
ANR	421301	Identifier	buf		421180	1					
ANR	421302	Argument	MAXPATHLEN		421180	1					
ANR	421303	Identifier	MAXPATHLEN		421180	0					
ANR	421304	Argument	"""%.*s.mime%s"""		421180	2					
ANR	421305	PrimaryExpression	"""%.*s.mime%s"""		421180	0					
ANR	421306	Argument	( int ) ( q - fn )		421180	3					
ANR	421307	CastExpression	( int ) ( q - fn )		421180	0					
ANR	421308	CastTarget	int		421180	0					
ANR	421309	AdditiveExpression	q - fn		421180	1		-			
ANR	421310	Identifier	q		421180	0					
ANR	421311	Identifier	fn		421180	1					
ANR	421312	Argument	fn		421180	4					
ANR	421313	Identifier	fn		421180	0					
ANR	421314	Argument	ext		421180	5					
ANR	421315	Identifier	ext		421180	0					
ANR	421316	IfStatement	"if ( VCWD_ACCESS ( buf , R_OK ) == 0 )"		421180	1					
ANR	421317	Condition	"VCWD_ACCESS ( buf , R_OK ) == 0"	3091:6:68509:68535	421180	0	True				
ANR	421318	EqualityExpression	"VCWD_ACCESS ( buf , R_OK ) == 0"		421180	0		==			
ANR	421319	CallExpression	"VCWD_ACCESS ( buf , R_OK )"		421180	0					
ANR	421320	Callee	VCWD_ACCESS		421180	0					
ANR	421321	Identifier	VCWD_ACCESS		421180	0					
ANR	421322	ArgumentList	buf		421180	1					
ANR	421323	Argument	buf		421180	0					
ANR	421324	Identifier	buf		421180	0					
ANR	421325	Argument	R_OK		421180	1					
ANR	421326	Identifier	R_OK		421180	0					
ANR	421327	PrimaryExpression	0		421180	1					
ANR	421328	CompoundStatement		27:35:537:537	421180	1					
ANR	421329	ExpressionStatement	ms -> flags &= MAGIC_MIME_TYPE	3095:3:68594:68622	421180	0	True				
ANR	421330	AssignmentExpression	ms -> flags &= MAGIC_MIME_TYPE		421180	0		&=			
ANR	421331	PtrMemberAccess	ms -> flags		421180	0					
ANR	421332	Identifier	ms		421180	0					
ANR	421333	Identifier	flags		421180	1					
ANR	421334	Identifier	MAGIC_MIME_TYPE		421180	1					
ANR	421335	ReturnStatement	return buf ;	3096:3:68627:68637	421180	1	True				
ANR	421336	Identifier	buf		421180	0					
ANR	421337	ExpressionStatement	efree ( buf )	3098:2:68645:68655	421180	2	True				
ANR	421338	CallExpression	efree ( buf )		421180	0					
ANR	421339	Callee	efree		421180	0					
ANR	421340	Identifier	efree		421180	0					
ANR	421341	ArgumentList	buf		421180	1					
ANR	421342	Argument	buf		421180	0					
ANR	421343	Identifier	buf		421180	0					
ANR	421344	ExpressionStatement	"spprintf ( & buf , MAXPATHLEN , ""%.*s%s"" , ( int ) ( q - fn ) , fn , ext )"	3100:1:68661:68721	421180	8	True				
ANR	421345	CallExpression	"spprintf ( & buf , MAXPATHLEN , ""%.*s%s"" , ( int ) ( q - fn ) , fn , ext )"		421180	0					
ANR	421346	Callee	spprintf		421180	0					
ANR	421347	Identifier	spprintf		421180	0					
ANR	421348	ArgumentList	& buf		421180	1					
ANR	421349	Argument	& buf		421180	0					
ANR	421350	UnaryOperationExpression	& buf		421180	0					
ANR	421351	UnaryOperator	&		421180	0					
ANR	421352	Identifier	buf		421180	1					
ANR	421353	Argument	MAXPATHLEN		421180	1					
ANR	421354	Identifier	MAXPATHLEN		421180	0					
ANR	421355	Argument	"""%.*s%s"""		421180	2					
ANR	421356	PrimaryExpression	"""%.*s%s"""		421180	0					
ANR	421357	Argument	( int ) ( q - fn )		421180	3					
ANR	421358	CastExpression	( int ) ( q - fn )		421180	0					
ANR	421359	CastTarget	int		421180	0					
ANR	421360	AdditiveExpression	q - fn		421180	1		-			
ANR	421361	Identifier	q		421180	0					
ANR	421362	Identifier	fn		421180	1					
ANR	421363	Argument	fn		421180	4					
ANR	421364	Identifier	fn		421180	0					
ANR	421365	Argument	ext		421180	5					
ANR	421366	Identifier	ext		421180	0					
ANR	421367	IfStatement	"if ( strstr ( p , "".mime"" ) != NULL )"		421180	9					
ANR	421368	Condition	"strstr ( p , "".mime"" ) != NULL"	3103:5:68785:68810	421180	0	True				
ANR	421369	EqualityExpression	"strstr ( p , "".mime"" ) != NULL"		421180	0		!=			
ANR	421370	CallExpression	"strstr ( p , "".mime"" )"		421180	0					
ANR	421371	Callee	strstr		421180	0					
ANR	421372	Identifier	strstr		421180	0					
ANR	421373	ArgumentList	p		421180	1					
ANR	421374	Argument	p		421180	0					
ANR	421375	Identifier	p		421180	0					
ANR	421376	Argument	""".mime"""		421180	1					
ANR	421377	PrimaryExpression	""".mime"""		421180	0					
ANR	421378	Identifier	NULL		421180	1					
ANR	421379	ExpressionStatement	ms -> flags &= MAGIC_MIME_TYPE	3104:2:68815:68843	421180	1	True				
ANR	421380	AssignmentExpression	ms -> flags &= MAGIC_MIME_TYPE		421180	0		&=			
ANR	421381	PtrMemberAccess	ms -> flags		421180	0					
ANR	421382	Identifier	ms		421180	0					
ANR	421383	Identifier	flags		421180	1					
ANR	421384	Identifier	MAGIC_MIME_TYPE		421180	1					
ANR	421385	ReturnStatement	return buf ;	3105:1:68846:68856	421180	10	True				
ANR	421386	Identifier	buf		421180	0					
ANR	421387	ReturnType	char *		421180	1					
ANR	421388	Identifier	mkdbname		421180	2					
ANR	421389	ParameterList	"struct magic_set * ms , const char * fn , int strip"		421180	3					
ANR	421390	Parameter	struct magic_set * ms	3064:9:67951:67970	421180	0	True				
ANR	421391	ParameterType	struct magic_set *		421180	0					
ANR	421392	Identifier	ms		421180	1					
ANR	421393	Parameter	const char * fn	3064:31:67973:67986	421180	1	True				
ANR	421394	ParameterType	const char *		421180	0					
ANR	421395	Identifier	fn		421180	1					
ANR	421396	Parameter	int strip	3064:47:67989:67997	421180	2	True				
ANR	421397	ParameterType	int		421180	0					
ANR	421398	Identifier	strip		421180	1					
ANR	421399	CFGEntryNode	ENTRY		421180		True				
ANR	421400	CFGExitNode	EXIT		421180		True				
ANR	421401	Symbol	ext		421180						
ANR	421402	Symbol	VCWD_ACCESS		421180						
ANR	421403	Symbol	NULL		421180						
ANR	421404	Symbol	MAGIC_MIME		421180						
ANR	421405	Symbol	ms		421180						
ANR	421406	Symbol	MAGIC_MIME_TYPE		421180						
ANR	421407	Symbol	fn		421180						
ANR	421408	Symbol	* ms		421180						
ANR	421409	Symbol	R_OK		421180						
ANR	421410	Symbol	p		421180						
ANR	421411	Symbol	q		421180						
ANR	421412	Symbol	MAXPATHLEN		421180						
ANR	421413	Symbol	buf		421180						
ANR	421414	Symbol	strip		421180						
ANR	421415	Symbol	strstr		421180						
ANR	421416	Symbol	strrchr		421180						
ANR	421417	Symbol	* p		421180						
ANR	421418	Symbol	* q		421180						
ANR	421419	Symbol	ms -> flags		421180						
ANR	421420	Symbol	& buf		421180						
ANR	421421	Function	byteswap	3111:8:68914:69029							
ANR	421422	FunctionDef	"byteswap (struct magic * magic , uint32_t nmagic)"		421421	0					
ANR	421423	CompoundStatement		3113:0:68966:69029	421421	0					
ANR	421424	IdentifierDeclStatement	uint32_t i ;	3114:1:68969:68979	421421	0	True				
ANR	421425	IdentifierDecl	i		421421	0					
ANR	421426	IdentifierDeclType	uint32_t		421421	0					
ANR	421427	Identifier	i		421421	1					
ANR	421428	ForStatement	for ( i = 0 ; i < nmagic ; i ++ )		421421	1					
ANR	421429	ForInit	i = 0 ;	3115:6:68987:68992	421421	0	True				
ANR	421430	AssignmentExpression	i = 0		421421	0		=			
ANR	421431	Identifier	i		421421	0					
ANR	421432	PrimaryExpression	0		421421	1					
ANR	421433	Condition	i < nmagic	3115:13:68994:69003	421421	1	True				
ANR	421434	RelationalExpression	i < nmagic		421421	0		<			
ANR	421435	Identifier	i		421421	0					
ANR	421436	Identifier	nmagic		421421	1					
ANR	421437	PostIncDecOperationExpression	i ++	3115:25:69006:69008	421421	2	True				
ANR	421438	Identifier	i		421421	0					
ANR	421439	IncDec	++		421421	1					
ANR	421440	ExpressionStatement	bs1 ( & magic [ i ] )	3116:2:69013:69027	421421	3	True				
ANR	421441	CallExpression	bs1 ( & magic [ i ] )		421421	0					
ANR	421442	Callee	bs1		421421	0					
ANR	421443	Identifier	bs1		421421	0					
ANR	421444	ArgumentList	& magic [ i ]		421421	1					
ANR	421445	Argument	& magic [ i ]		421421	0					
ANR	421446	UnaryOperationExpression	& magic [ i ]		421421	0					
ANR	421447	UnaryOperator	&		421421	0					
ANR	421448	ArrayIndexing	magic [ i ]		421421	1					
ANR	421449	Identifier	magic		421421	0					
ANR	421450	Identifier	i		421421	1					
ANR	421451	ReturnType	void		421421	1					
ANR	421452	Identifier	byteswap		421421	2					
ANR	421453	ParameterList	"struct magic * magic , uint32_t nmagic"		421421	3					
ANR	421454	Parameter	struct magic * magic	3112:9:68928:68946	421421	0	True				
ANR	421455	ParameterType	struct magic *		421421	0					
ANR	421456	Identifier	magic		421421	1					
ANR	421457	Parameter	uint32_t nmagic	3112:30:68949:68963	421421	1	True				
ANR	421458	ParameterType	uint32_t		421421	0					
ANR	421459	Identifier	nmagic		421421	1					
ANR	421460	CFGEntryNode	ENTRY		421421		True				
ANR	421461	CFGExitNode	EXIT		421421		True				
ANR	421462	Symbol	magic		421421						
ANR	421463	Symbol	i		421421						
ANR	421464	Symbol	nmagic		421421						
ANR	421465	Function	swap2	3122:8:69063:69225							
ANR	421466	FunctionDef	swap2 (uint16_t sv)		421465	0					
ANR	421467	CompoundStatement		3124:0:69091:69225	421465	0					
ANR	421468	IdentifierDeclStatement	uint16_t rv ;	3125:1:69094:69105	421465	0	True				
ANR	421469	IdentifierDecl	rv		421465	0					
ANR	421470	IdentifierDeclType	uint16_t		421465	0					
ANR	421471	Identifier	rv		421465	1					
ANR	421472	IdentifierDeclStatement	uint8_t * s = ( uint8_t * ) ( void * ) & sv ;	3126:1:69108:69143	421465	1	True				
ANR	421473	IdentifierDecl	* s = ( uint8_t * ) ( void * ) & sv		421465	0					
ANR	421474	IdentifierDeclType	uint8_t *		421465	0					
ANR	421475	Identifier	s		421465	1					
ANR	421476	AssignmentExpression	* s = ( uint8_t * ) ( void * ) & sv		421465	2		=			
ANR	421477	Identifier	s		421465	0					
ANR	421478	CastExpression	( uint8_t * ) ( void * ) & sv		421465	1					
ANR	421479	CastTarget	uint8_t *		421465	0					
ANR	421480	CastExpression	( void * ) & sv		421465	1					
ANR	421481	CastTarget	void *		421465	0					
ANR	421482	UnaryOperationExpression	& sv		421465	1					
ANR	421483	UnaryOperator	&		421465	0					
ANR	421484	Identifier	sv		421465	1					
ANR	421485	IdentifierDeclStatement	uint8_t * d = ( uint8_t * ) ( void * ) & rv ;	3127:1:69147:69182	421465	2	True				
ANR	421486	IdentifierDecl	* d = ( uint8_t * ) ( void * ) & rv		421465	0					
ANR	421487	IdentifierDeclType	uint8_t *		421465	0					
ANR	421488	Identifier	d		421465	1					
ANR	421489	AssignmentExpression	* d = ( uint8_t * ) ( void * ) & rv		421465	2		=			
ANR	421490	Identifier	d		421465	0					
ANR	421491	CastExpression	( uint8_t * ) ( void * ) & rv		421465	1					
ANR	421492	CastTarget	uint8_t *		421465	0					
ANR	421493	CastExpression	( void * ) & rv		421465	1					
ANR	421494	CastTarget	void *		421465	0					
ANR	421495	UnaryOperationExpression	& rv		421465	1					
ANR	421496	UnaryOperator	&		421465	0					
ANR	421497	Identifier	rv		421465	1					
ANR	421498	ExpressionStatement	d [ 0 ] = s [ 1 ]	3128:1:69186:69197	421465	3	True				
ANR	421499	AssignmentExpression	d [ 0 ] = s [ 1 ]		421465	0		=			
ANR	421500	ArrayIndexing	d [ 0 ]		421465	0					
ANR	421501	Identifier	d		421465	0					
ANR	421502	PrimaryExpression	0		421465	1					
ANR	421503	ArrayIndexing	s [ 1 ]		421465	1					
ANR	421504	Identifier	s		421465	0					
ANR	421505	PrimaryExpression	1		421465	1					
ANR	421506	ExpressionStatement	d [ 1 ] = s [ 0 ]	3129:1:69200:69211	421465	4	True				
ANR	421507	AssignmentExpression	d [ 1 ] = s [ 0 ]		421465	0		=			
ANR	421508	ArrayIndexing	d [ 1 ]		421465	0					
ANR	421509	Identifier	d		421465	0					
ANR	421510	PrimaryExpression	1		421465	1					
ANR	421511	ArrayIndexing	s [ 0 ]		421465	1					
ANR	421512	Identifier	s		421465	0					
ANR	421513	PrimaryExpression	0		421465	1					
ANR	421514	ReturnStatement	return rv ;	3130:1:69214:69223	421465	5	True				
ANR	421515	Identifier	rv		421465	0					
ANR	421516	ReturnType	uint16_t		421465	1					
ANR	421517	Identifier	swap2		421465	2					
ANR	421518	ParameterList	uint16_t sv		421465	3					
ANR	421519	Parameter	uint16_t sv	3123:6:69078:69088	421465	0	True				
ANR	421520	ParameterType	uint16_t		421465	0					
ANR	421521	Identifier	sv		421465	1					
ANR	421522	CFGEntryNode	ENTRY		421465		True				
ANR	421523	CFGExitNode	EXIT		421465		True				
ANR	421524	Symbol	sv		421465						
ANR	421525	Symbol	s		421465						
ANR	421526	Symbol	rv		421465						
ANR	421527	Symbol	d		421465						
ANR	421528	Symbol	& sv		421465						
ANR	421529	Symbol	* s		421465						
ANR	421530	Symbol	* d		421465						
ANR	421531	Symbol	& rv		421465						
ANR	421532	Function	swap4	3136:8:69258:69448							
ANR	421533	FunctionDef	swap4 (uint32_t sv)		421532	0					
ANR	421534	CompoundStatement		3138:0:69286:69448	421532	0					
ANR	421535	IdentifierDeclStatement	uint32_t rv ;	3139:1:69289:69300	421532	0	True				
ANR	421536	IdentifierDecl	rv		421532	0					
ANR	421537	IdentifierDeclType	uint32_t		421532	0					
ANR	421538	Identifier	rv		421532	1					
ANR	421539	IdentifierDeclStatement	uint8_t * s = ( uint8_t * ) ( void * ) & sv ;	3140:1:69303:69338	421532	1	True				
ANR	421540	IdentifierDecl	* s = ( uint8_t * ) ( void * ) & sv		421532	0					
ANR	421541	IdentifierDeclType	uint8_t *		421532	0					
ANR	421542	Identifier	s		421532	1					
ANR	421543	AssignmentExpression	* s = ( uint8_t * ) ( void * ) & sv		421532	2		=			
ANR	421544	Identifier	s		421532	0					
ANR	421545	CastExpression	( uint8_t * ) ( void * ) & sv		421532	1					
ANR	421546	CastTarget	uint8_t *		421532	0					
ANR	421547	CastExpression	( void * ) & sv		421532	1					
ANR	421548	CastTarget	void *		421532	0					
ANR	421549	UnaryOperationExpression	& sv		421532	1					
ANR	421550	UnaryOperator	&		421532	0					
ANR	421551	Identifier	sv		421532	1					
ANR	421552	IdentifierDeclStatement	uint8_t * d = ( uint8_t * ) ( void * ) & rv ;	3141:1:69342:69377	421532	2	True				
ANR	421553	IdentifierDecl	* d = ( uint8_t * ) ( void * ) & rv		421532	0					
ANR	421554	IdentifierDeclType	uint8_t *		421532	0					
ANR	421555	Identifier	d		421532	1					
ANR	421556	AssignmentExpression	* d = ( uint8_t * ) ( void * ) & rv		421532	2		=			
ANR	421557	Identifier	d		421532	0					
ANR	421558	CastExpression	( uint8_t * ) ( void * ) & rv		421532	1					
ANR	421559	CastTarget	uint8_t *		421532	0					
ANR	421560	CastExpression	( void * ) & rv		421532	1					
ANR	421561	CastTarget	void *		421532	0					
ANR	421562	UnaryOperationExpression	& rv		421532	1					
ANR	421563	UnaryOperator	&		421532	0					
ANR	421564	Identifier	rv		421532	1					
ANR	421565	ExpressionStatement	d [ 0 ] = s [ 3 ]	3142:1:69381:69392	421532	3	True				
ANR	421566	AssignmentExpression	d [ 0 ] = s [ 3 ]		421532	0		=			
ANR	421567	ArrayIndexing	d [ 0 ]		421532	0					
ANR	421568	Identifier	d		421532	0					
ANR	421569	PrimaryExpression	0		421532	1					
ANR	421570	ArrayIndexing	s [ 3 ]		421532	1					
ANR	421571	Identifier	s		421532	0					
ANR	421572	PrimaryExpression	3		421532	1					
ANR	421573	ExpressionStatement	d [ 1 ] = s [ 2 ]	3143:1:69395:69406	421532	4	True				
ANR	421574	AssignmentExpression	d [ 1 ] = s [ 2 ]		421532	0		=			
ANR	421575	ArrayIndexing	d [ 1 ]		421532	0					
ANR	421576	Identifier	d		421532	0					
ANR	421577	PrimaryExpression	1		421532	1					
ANR	421578	ArrayIndexing	s [ 2 ]		421532	1					
ANR	421579	Identifier	s		421532	0					
ANR	421580	PrimaryExpression	2		421532	1					
ANR	421581	ExpressionStatement	d [ 2 ] = s [ 1 ]	3144:1:69409:69420	421532	5	True				
ANR	421582	AssignmentExpression	d [ 2 ] = s [ 1 ]		421532	0		=			
ANR	421583	ArrayIndexing	d [ 2 ]		421532	0					
ANR	421584	Identifier	d		421532	0					
ANR	421585	PrimaryExpression	2		421532	1					
ANR	421586	ArrayIndexing	s [ 1 ]		421532	1					
ANR	421587	Identifier	s		421532	0					
ANR	421588	PrimaryExpression	1		421532	1					
ANR	421589	ExpressionStatement	d [ 3 ] = s [ 0 ]	3145:1:69423:69434	421532	6	True				
ANR	421590	AssignmentExpression	d [ 3 ] = s [ 0 ]		421532	0		=			
ANR	421591	ArrayIndexing	d [ 3 ]		421532	0					
ANR	421592	Identifier	d		421532	0					
ANR	421593	PrimaryExpression	3		421532	1					
ANR	421594	ArrayIndexing	s [ 0 ]		421532	1					
ANR	421595	Identifier	s		421532	0					
ANR	421596	PrimaryExpression	0		421532	1					
ANR	421597	ReturnStatement	return rv ;	3146:1:69437:69446	421532	7	True				
ANR	421598	Identifier	rv		421532	0					
ANR	421599	ReturnType	uint32_t		421532	1					
ANR	421600	Identifier	swap4		421532	2					
ANR	421601	ParameterList	uint32_t sv		421532	3					
ANR	421602	Parameter	uint32_t sv	3137:6:69273:69283	421532	0	True				
ANR	421603	ParameterType	uint32_t		421532	0					
ANR	421604	Identifier	sv		421532	1					
ANR	421605	CFGEntryNode	ENTRY		421532		True				
ANR	421606	CFGExitNode	EXIT		421532		True				
ANR	421607	Symbol	sv		421532						
ANR	421608	Symbol	s		421532						
ANR	421609	Symbol	rv		421532						
ANR	421610	Symbol	d		421532						
ANR	421611	Symbol	& sv		421532						
ANR	421612	Symbol	* s		421532						
ANR	421613	Symbol	* d		421532						
ANR	421614	Symbol	& rv		421532						
ANR	421615	Function	swap8	3152:8:69481:69858							
ANR	421616	FunctionDef	swap8 (uint64_t sv)		421615	0					
ANR	421617	CompoundStatement		3154:0:69509:69858	421615	0					
ANR	421618	IdentifierDeclStatement	uint64_t rv ;	3155:1:69512:69523	421615	0	True				
ANR	421619	IdentifierDecl	rv		421615	0					
ANR	421620	IdentifierDeclType	uint64_t		421615	0					
ANR	421621	Identifier	rv		421615	1					
ANR	421622	IdentifierDeclStatement	uint8_t * s = ( uint8_t * ) ( void * ) & sv ;	3156:1:69526:69561	421615	1	True				
ANR	421623	IdentifierDecl	* s = ( uint8_t * ) ( void * ) & sv		421615	0					
ANR	421624	IdentifierDeclType	uint8_t *		421615	0					
ANR	421625	Identifier	s		421615	1					
ANR	421626	AssignmentExpression	* s = ( uint8_t * ) ( void * ) & sv		421615	2		=			
ANR	421627	Identifier	s		421615	0					
ANR	421628	CastExpression	( uint8_t * ) ( void * ) & sv		421615	1					
ANR	421629	CastTarget	uint8_t *		421615	0					
ANR	421630	CastExpression	( void * ) & sv		421615	1					
ANR	421631	CastTarget	void *		421615	0					
ANR	421632	UnaryOperationExpression	& sv		421615	1					
ANR	421633	UnaryOperator	&		421615	0					
ANR	421634	Identifier	sv		421615	1					
ANR	421635	IdentifierDeclStatement	uint8_t * d = ( uint8_t * ) ( void * ) & rv ;	3157:1:69565:69600	421615	2	True				
ANR	421636	IdentifierDecl	* d = ( uint8_t * ) ( void * ) & rv		421615	0					
ANR	421637	IdentifierDeclType	uint8_t *		421615	0					
ANR	421638	Identifier	d		421615	1					
ANR	421639	AssignmentExpression	* d = ( uint8_t * ) ( void * ) & rv		421615	2		=			
ANR	421640	Identifier	d		421615	0					
ANR	421641	CastExpression	( uint8_t * ) ( void * ) & rv		421615	1					
ANR	421642	CastTarget	uint8_t *		421615	0					
ANR	421643	CastExpression	( void * ) & rv		421615	1					
ANR	421644	CastTarget	void *		421615	0					
ANR	421645	UnaryOperationExpression	& rv		421615	1					
ANR	421646	UnaryOperator	&		421615	0					
ANR	421647	Identifier	rv		421615	1					
ANR	421648	ExpressionStatement	d [ 0 ] = s [ 3 ]	3159:1:69610:69621	421615	3	True				
ANR	421649	AssignmentExpression	d [ 0 ] = s [ 3 ]		421615	0		=			
ANR	421650	ArrayIndexing	d [ 0 ]		421615	0					
ANR	421651	Identifier	d		421615	0					
ANR	421652	PrimaryExpression	0		421615	1					
ANR	421653	ArrayIndexing	s [ 3 ]		421615	1					
ANR	421654	Identifier	s		421615	0					
ANR	421655	PrimaryExpression	3		421615	1					
ANR	421656	ExpressionStatement	d [ 1 ] = s [ 2 ]	3160:1:69624:69635	421615	4	True				
ANR	421657	AssignmentExpression	d [ 1 ] = s [ 2 ]		421615	0		=			
ANR	421658	ArrayIndexing	d [ 1 ]		421615	0					
ANR	421659	Identifier	d		421615	0					
ANR	421660	PrimaryExpression	1		421615	1					
ANR	421661	ArrayIndexing	s [ 2 ]		421615	1					
ANR	421662	Identifier	s		421615	0					
ANR	421663	PrimaryExpression	2		421615	1					
ANR	421664	ExpressionStatement	d [ 2 ] = s [ 1 ]	3161:1:69638:69649	421615	5	True				
ANR	421665	AssignmentExpression	d [ 2 ] = s [ 1 ]		421615	0		=			
ANR	421666	ArrayIndexing	d [ 2 ]		421615	0					
ANR	421667	Identifier	d		421615	0					
ANR	421668	PrimaryExpression	2		421615	1					
ANR	421669	ArrayIndexing	s [ 1 ]		421615	1					
ANR	421670	Identifier	s		421615	0					
ANR	421671	PrimaryExpression	1		421615	1					
ANR	421672	ExpressionStatement	d [ 3 ] = s [ 0 ]	3162:1:69652:69663	421615	6	True				
ANR	421673	AssignmentExpression	d [ 3 ] = s [ 0 ]		421615	0		=			
ANR	421674	ArrayIndexing	d [ 3 ]		421615	0					
ANR	421675	Identifier	d		421615	0					
ANR	421676	PrimaryExpression	3		421615	1					
ANR	421677	ArrayIndexing	s [ 0 ]		421615	1					
ANR	421678	Identifier	s		421615	0					
ANR	421679	PrimaryExpression	0		421615	1					
ANR	421680	ExpressionStatement	d [ 4 ] = s [ 7 ]	3163:1:69666:69677	421615	7	True				
ANR	421681	AssignmentExpression	d [ 4 ] = s [ 7 ]		421615	0		=			
ANR	421682	ArrayIndexing	d [ 4 ]		421615	0					
ANR	421683	Identifier	d		421615	0					
ANR	421684	PrimaryExpression	4		421615	1					
ANR	421685	ArrayIndexing	s [ 7 ]		421615	1					
ANR	421686	Identifier	s		421615	0					
ANR	421687	PrimaryExpression	7		421615	1					
ANR	421688	ExpressionStatement	d [ 5 ] = s [ 6 ]	3164:1:69680:69691	421615	8	True				
ANR	421689	AssignmentExpression	d [ 5 ] = s [ 6 ]		421615	0		=			
ANR	421690	ArrayIndexing	d [ 5 ]		421615	0					
ANR	421691	Identifier	d		421615	0					
ANR	421692	PrimaryExpression	5		421615	1					
ANR	421693	ArrayIndexing	s [ 6 ]		421615	1					
ANR	421694	Identifier	s		421615	0					
ANR	421695	PrimaryExpression	6		421615	1					
ANR	421696	ExpressionStatement	d [ 6 ] = s [ 5 ]	3165:1:69694:69705	421615	9	True				
ANR	421697	AssignmentExpression	d [ 6 ] = s [ 5 ]		421615	0		=			
ANR	421698	ArrayIndexing	d [ 6 ]		421615	0					
ANR	421699	Identifier	d		421615	0					
ANR	421700	PrimaryExpression	6		421615	1					
ANR	421701	ArrayIndexing	s [ 5 ]		421615	1					
ANR	421702	Identifier	s		421615	0					
ANR	421703	PrimaryExpression	5		421615	1					
ANR	421704	ExpressionStatement	d [ 7 ] = s [ 4 ]	3166:1:69708:69719	421615	10	True				
ANR	421705	AssignmentExpression	d [ 7 ] = s [ 4 ]		421615	0		=			
ANR	421706	ArrayIndexing	d [ 7 ]		421615	0					
ANR	421707	Identifier	d		421615	0					
ANR	421708	PrimaryExpression	7		421615	1					
ANR	421709	ArrayIndexing	s [ 4 ]		421615	1					
ANR	421710	Identifier	s		421615	0					
ANR	421711	PrimaryExpression	4		421615	1					
ANR	421712	ReturnStatement	return rv ;	3177:1:69847:69856	421615	11	True				
ANR	421713	Identifier	rv		421615	0					
ANR	421714	ReturnType	uint64_t		421615	1					
ANR	421715	Identifier	swap8		421615	2					
ANR	421716	ParameterList	uint64_t sv		421615	3					
ANR	421717	Parameter	uint64_t sv	3153:6:69496:69506	421615	0	True				
ANR	421718	ParameterType	uint64_t		421615	0					
ANR	421719	Identifier	sv		421615	1					
ANR	421720	CFGEntryNode	ENTRY		421615		True				
ANR	421721	CFGExitNode	EXIT		421615		True				
ANR	421722	Symbol	sv		421615						
ANR	421723	Symbol	s		421615						
ANR	421724	Symbol	rv		421615						
ANR	421725	Symbol	d		421615						
ANR	421726	Symbol	& sv		421615						
ANR	421727	Symbol	* s		421615						
ANR	421728	Symbol	* d		421615						
ANR	421729	Symbol	& rv		421615						
ANR	421730	Function	bs1	3183:8:69909:70301							
ANR	421731	FunctionDef	bs1 (struct magic * m)		421730	0					
ANR	421732	CompoundStatement		3185:0:69935:70301	421730	0					
ANR	421733	ExpressionStatement	m -> cont_level = swap2 ( m -> cont_level )	3186:1:69938:69974	421730	0	True				
ANR	421734	AssignmentExpression	m -> cont_level = swap2 ( m -> cont_level )		421730	0		=			
ANR	421735	PtrMemberAccess	m -> cont_level		421730	0					
ANR	421736	Identifier	m		421730	0					
ANR	421737	Identifier	cont_level		421730	1					
ANR	421738	CallExpression	swap2 ( m -> cont_level )		421730	1					
ANR	421739	Callee	swap2		421730	0					
ANR	421740	Identifier	swap2		421730	0					
ANR	421741	ArgumentList	m -> cont_level		421730	1					
ANR	421742	Argument	m -> cont_level		421730	0					
ANR	421743	PtrMemberAccess	m -> cont_level		421730	0					
ANR	421744	Identifier	m		421730	0					
ANR	421745	Identifier	cont_level		421730	1					
ANR	421746	ExpressionStatement	m -> offset = swap4 ( ( uint32_t ) m -> offset )	3187:1:69977:70015	421730	1	True				
ANR	421747	AssignmentExpression	m -> offset = swap4 ( ( uint32_t ) m -> offset )		421730	0		=			
ANR	421748	PtrMemberAccess	m -> offset		421730	0					
ANR	421749	Identifier	m		421730	0					
ANR	421750	Identifier	offset		421730	1					
ANR	421751	CallExpression	swap4 ( ( uint32_t ) m -> offset )		421730	1					
ANR	421752	Callee	swap4		421730	0					
ANR	421753	Identifier	swap4		421730	0					
ANR	421754	ArgumentList	( uint32_t ) m -> offset		421730	1					
ANR	421755	Argument	( uint32_t ) m -> offset		421730	0					
ANR	421756	CastExpression	( uint32_t ) m -> offset		421730	0					
ANR	421757	CastTarget	uint32_t		421730	0					
ANR	421758	PtrMemberAccess	m -> offset		421730	1					
ANR	421759	Identifier	m		421730	0					
ANR	421760	Identifier	offset		421730	1					
ANR	421761	ExpressionStatement	m -> in_offset = swap4 ( ( uint32_t ) m -> in_offset )	3188:1:70018:70062	421730	2	True				
ANR	421762	AssignmentExpression	m -> in_offset = swap4 ( ( uint32_t ) m -> in_offset )		421730	0		=			
ANR	421763	PtrMemberAccess	m -> in_offset		421730	0					
ANR	421764	Identifier	m		421730	0					
ANR	421765	Identifier	in_offset		421730	1					
ANR	421766	CallExpression	swap4 ( ( uint32_t ) m -> in_offset )		421730	1					
ANR	421767	Callee	swap4		421730	0					
ANR	421768	Identifier	swap4		421730	0					
ANR	421769	ArgumentList	( uint32_t ) m -> in_offset		421730	1					
ANR	421770	Argument	( uint32_t ) m -> in_offset		421730	0					
ANR	421771	CastExpression	( uint32_t ) m -> in_offset		421730	0					
ANR	421772	CastTarget	uint32_t		421730	0					
ANR	421773	PtrMemberAccess	m -> in_offset		421730	1					
ANR	421774	Identifier	m		421730	0					
ANR	421775	Identifier	in_offset		421730	1					
ANR	421776	ExpressionStatement	m -> lineno = swap4 ( ( uint32_t ) m -> lineno )	3189:1:70065:70103	421730	3	True				
ANR	421777	AssignmentExpression	m -> lineno = swap4 ( ( uint32_t ) m -> lineno )		421730	0		=			
ANR	421778	PtrMemberAccess	m -> lineno		421730	0					
ANR	421779	Identifier	m		421730	0					
ANR	421780	Identifier	lineno		421730	1					
ANR	421781	CallExpression	swap4 ( ( uint32_t ) m -> lineno )		421730	1					
ANR	421782	Callee	swap4		421730	0					
ANR	421783	Identifier	swap4		421730	0					
ANR	421784	ArgumentList	( uint32_t ) m -> lineno		421730	1					
ANR	421785	Argument	( uint32_t ) m -> lineno		421730	0					
ANR	421786	CastExpression	( uint32_t ) m -> lineno		421730	0					
ANR	421787	CastTarget	uint32_t		421730	0					
ANR	421788	PtrMemberAccess	m -> lineno		421730	1					
ANR	421789	Identifier	m		421730	0					
ANR	421790	Identifier	lineno		421730	1					
ANR	421791	IfStatement	if ( IS_LIBMAGIC_STRING ( m -> type ) )		421730	4					
ANR	421792	Condition	IS_LIBMAGIC_STRING ( m -> type )	3190:5:70110:70136	421730	0	True				
ANR	421793	CallExpression	IS_LIBMAGIC_STRING ( m -> type )		421730	0					
ANR	421794	Callee	IS_LIBMAGIC_STRING		421730	0					
ANR	421795	Identifier	IS_LIBMAGIC_STRING		421730	0					
ANR	421796	ArgumentList	m -> type		421730	1					
ANR	421797	Argument	m -> type		421730	0					
ANR	421798	PtrMemberAccess	m -> type		421730	0					
ANR	421799	Identifier	m		421730	0					
ANR	421800	Identifier	type		421730	1					
ANR	421801	CompoundStatement		6:34:203:203	421730	1					
ANR	421802	ExpressionStatement	m -> str_range = swap4 ( m -> str_range )	3191:2:70143:70177	421730	0	True				
ANR	421803	AssignmentExpression	m -> str_range = swap4 ( m -> str_range )		421730	0		=			
ANR	421804	PtrMemberAccess	m -> str_range		421730	0					
ANR	421805	Identifier	m		421730	0					
ANR	421806	Identifier	str_range		421730	1					
ANR	421807	CallExpression	swap4 ( m -> str_range )		421730	1					
ANR	421808	Callee	swap4		421730	0					
ANR	421809	Identifier	swap4		421730	0					
ANR	421810	ArgumentList	m -> str_range		421730	1					
ANR	421811	Argument	m -> str_range		421730	0					
ANR	421812	PtrMemberAccess	m -> str_range		421730	0					
ANR	421813	Identifier	m		421730	0					
ANR	421814	Identifier	str_range		421730	1					
ANR	421815	ExpressionStatement	m -> str_flags = swap4 ( m -> str_flags )	3192:2:70181:70215	421730	1	True				
ANR	421816	AssignmentExpression	m -> str_flags = swap4 ( m -> str_flags )		421730	0		=			
ANR	421817	PtrMemberAccess	m -> str_flags		421730	0					
ANR	421818	Identifier	m		421730	0					
ANR	421819	Identifier	str_flags		421730	1					
ANR	421820	CallExpression	swap4 ( m -> str_flags )		421730	1					
ANR	421821	Callee	swap4		421730	0					
ANR	421822	Identifier	swap4		421730	0					
ANR	421823	ArgumentList	m -> str_flags		421730	1					
ANR	421824	Argument	m -> str_flags		421730	0					
ANR	421825	PtrMemberAccess	m -> str_flags		421730	0					
ANR	421826	Identifier	m		421730	0					
ANR	421827	Identifier	str_flags		421730	1					
ANR	421828	ElseStatement	else		421730	0					
ANR	421829	CompoundStatement		10:6:290:290	421730	0					
ANR	421830	ExpressionStatement	m -> value . q = swap8 ( m -> value . q )	3195:2:70230:70260	421730	0	True				
ANR	421831	AssignmentExpression	m -> value . q = swap8 ( m -> value . q )		421730	0		=			
ANR	421832	MemberAccess	m -> value . q		421730	0					
ANR	421833	PtrMemberAccess	m -> value		421730	0					
ANR	421834	Identifier	m		421730	0					
ANR	421835	Identifier	value		421730	1					
ANR	421836	Identifier	q		421730	1					
ANR	421837	CallExpression	swap8 ( m -> value . q )		421730	1					
ANR	421838	Callee	swap8		421730	0					
ANR	421839	Identifier	swap8		421730	0					
ANR	421840	ArgumentList	m -> value . q		421730	1					
ANR	421841	Argument	m -> value . q		421730	0					
ANR	421842	MemberAccess	m -> value . q		421730	0					
ANR	421843	PtrMemberAccess	m -> value		421730	0					
ANR	421844	Identifier	m		421730	0					
ANR	421845	Identifier	value		421730	1					
ANR	421846	Identifier	q		421730	1					
ANR	421847	ExpressionStatement	m -> num_mask = swap8 ( m -> num_mask )	3196:2:70264:70296	421730	1	True				
ANR	421848	AssignmentExpression	m -> num_mask = swap8 ( m -> num_mask )		421730	0		=			
ANR	421849	PtrMemberAccess	m -> num_mask		421730	0					
ANR	421850	Identifier	m		421730	0					
ANR	421851	Identifier	num_mask		421730	1					
ANR	421852	CallExpression	swap8 ( m -> num_mask )		421730	1					
ANR	421853	Callee	swap8		421730	0					
ANR	421854	Identifier	swap8		421730	0					
ANR	421855	ArgumentList	m -> num_mask		421730	1					
ANR	421856	Argument	m -> num_mask		421730	0					
ANR	421857	PtrMemberAccess	m -> num_mask		421730	0					
ANR	421858	Identifier	m		421730	0					
ANR	421859	Identifier	num_mask		421730	1					
ANR	421860	ReturnType	void		421730	1					
ANR	421861	Identifier	bs1		421730	2					
ANR	421862	ParameterList	struct magic * m		421730	3					
ANR	421863	Parameter	struct magic * m	3184:4:69918:69932	421730	0	True				
ANR	421864	ParameterType	struct magic *		421730	0					
ANR	421865	Identifier	m		421730	1					
ANR	421866	CFGEntryNode	ENTRY		421730		True				
ANR	421867	CFGExitNode	EXIT		421730		True				
ANR	421868	Symbol	m -> in_offset		421730						
ANR	421869	Symbol	m -> value		421730						
ANR	421870	Symbol	m -> str_flags		421730						
ANR	421871	Symbol	swap8		421730						
ANR	421872	Symbol	m -> value . q		421730						
ANR	421873	Symbol	m -> str_range		421730						
ANR	421874	Symbol	m		421730						
ANR	421875	Symbol	swap4		421730						
ANR	421876	Symbol	m -> num_mask		421730						
ANR	421877	Symbol	m -> type		421730						
ANR	421878	Symbol	m -> offset		421730						
ANR	421879	Symbol	swap2		421730						
ANR	421880	Symbol	IS_LIBMAGIC_STRING		421730						
ANR	421881	Symbol	* m		421730						
ANR	421882	Symbol	m -> cont_level		421730						
ANR	421883	Symbol	m -> lineno		421730						
ANR	421884	Function	file_pstring_length_size	3200:10:70314:70600							
ANR	421885	FunctionDef	file_pstring_length_size (const struct magic * m)		421884	0					
ANR	421886	CompoundStatement		3202:0:70370:70600	421884	0					
ANR	421887	SwitchStatement	switch ( m -> str_flags & PSTRING_LEN )		421884	0					
ANR	421888	Condition	m -> str_flags & PSTRING_LEN	3203:9:70381:70406	421884	0	True				
ANR	421889	BitAndExpression	m -> str_flags & PSTRING_LEN		421884	0		&			
ANR	421890	PtrMemberAccess	m -> str_flags		421884	0					
ANR	421891	Identifier	m		421884	0					
ANR	421892	Identifier	str_flags		421884	1					
ANR	421893	Identifier	PSTRING_LEN		421884	1					
ANR	421894	CompoundStatement		2:37:38:38	421884	1					
ANR	421895	Label	case PSTRING_1_LE :	3204:1:70412:70429	421884	0	True				
ANR	421896	Identifier	PSTRING_1_LE		421884	0					
ANR	421897	ReturnStatement	return 1 ;	3205:2:70433:70441	421884	1	True				
ANR	421898	PrimaryExpression	1		421884	0					
ANR	421899	Label	case PSTRING_2_LE :	3206:1:70444:70461	421884	2	True				
ANR	421900	Identifier	PSTRING_2_LE		421884	0					
ANR	421901	Label	case PSTRING_2_BE :	3207:1:70464:70481	421884	3	True				
ANR	421902	Identifier	PSTRING_2_BE		421884	0					
ANR	421903	ReturnStatement	return 2 ;	3208:2:70485:70493	421884	4	True				
ANR	421904	PrimaryExpression	2		421884	0					
ANR	421905	Label	case PSTRING_4_LE :	3209:1:70496:70513	421884	5	True				
ANR	421906	Identifier	PSTRING_4_LE		421884	0					
ANR	421907	Label	case PSTRING_4_BE :	3210:1:70516:70533	421884	6	True				
ANR	421908	Identifier	PSTRING_4_BE		421884	0					
ANR	421909	ReturnStatement	return 4 ;	3211:2:70537:70545	421884	7	True				
ANR	421910	PrimaryExpression	4		421884	0					
ANR	421911	Label	default :	3212:1:70548:70555	421884	8	True				
ANR	421912	Identifier	default		421884	0					
ANR	421913	ExpressionStatement	abort ( )	3213:2:70559:70566	421884	9	True				
ANR	421914	CallExpression	abort ( )		421884	0					
ANR	421915	Callee	abort		421884	0					
ANR	421916	Identifier	abort		421884	0					
ANR	421917	ArgumentList			421884	1					
ANR	421918	ReturnStatement	return 1 ;	3214:2:70587:70595	421884	10	True				
ANR	421919	PrimaryExpression	1		421884	0					
ANR	421920	ReturnType	size_t		421884	1					
ANR	421921	Identifier	file_pstring_length_size		421884	2					
ANR	421922	ParameterList	const struct magic * m		421884	3					
ANR	421923	Parameter	const struct magic * m	3201:25:70347:70367	421884	0	True				
ANR	421924	ParameterType	const struct magic *		421884	0					
ANR	421925	Identifier	m		421884	1					
ANR	421926	CFGEntryNode	ENTRY		421884		True				
ANR	421927	CFGExitNode	EXIT		421884		True				
ANR	421928	Symbol	PSTRING_LEN		421884						
ANR	421929	Symbol	* m		421884						
ANR	421930	Symbol	m -> str_flags		421884						
ANR	421931	Symbol	m		421884						
ANR	421932	Function	file_pstring_get_length	3217:10:70612:71215							
ANR	421933	FunctionDef	"file_pstring_get_length (const struct magic * m , const char * s)"		421932	0					
ANR	421934	CompoundStatement		3219:0:70681:71215	421932	0					
ANR	421935	IdentifierDeclStatement	size_t len = 0 ;	3220:1:70684:70698	421932	0	True				
ANR	421936	IdentifierDecl	len = 0		421932	0					
ANR	421937	IdentifierDeclType	size_t		421932	0					
ANR	421938	Identifier	len		421932	1					
ANR	421939	AssignmentExpression	len = 0		421932	2		=			
ANR	421940	Identifier	len		421932	0					
ANR	421941	PrimaryExpression	0		421932	1					
ANR	421942	SwitchStatement	switch ( m -> str_flags & PSTRING_LEN )		421932	1					
ANR	421943	Condition	m -> str_flags & PSTRING_LEN	3222:9:70710:70735	421932	0	True				
ANR	421944	BitAndExpression	m -> str_flags & PSTRING_LEN		421932	0		&			
ANR	421945	PtrMemberAccess	m -> str_flags		421932	0					
ANR	421946	Identifier	m		421932	0					
ANR	421947	Identifier	str_flags		421932	1					
ANR	421948	Identifier	PSTRING_LEN		421932	1					
ANR	421949	CompoundStatement		4:37:56:56	421932	1					
ANR	421950	Label	case PSTRING_1_LE :	3223:1:70741:70758	421932	0	True				
ANR	421951	Identifier	PSTRING_1_LE		421932	0					
ANR	421952	ExpressionStatement	len = * s	3224:2:70762:70770	421932	1	True				
ANR	421953	AssignmentExpression	len = * s		421932	0		=			
ANR	421954	Identifier	len		421932	0					
ANR	421955	UnaryOperationExpression	* s		421932	1					
ANR	421956	UnaryOperator	*		421932	0					
ANR	421957	Identifier	s		421932	1					
ANR	421958	BreakStatement	break ;	3225:2:70774:70779	421932	2	True				
ANR	421959	Label	case PSTRING_2_LE :	3226:1:70782:70799	421932	3	True				
ANR	421960	Identifier	PSTRING_2_LE		421932	0					
ANR	421961	ExpressionStatement	len = ( s [ 1 ] << 8 ) | s [ 0 ]	3227:2:70803:70827	421932	4	True				
ANR	421962	AssignmentExpression	len = ( s [ 1 ] << 8 ) | s [ 0 ]		421932	0		=			
ANR	421963	Identifier	len		421932	0					
ANR	421964	InclusiveOrExpression	( s [ 1 ] << 8 ) | s [ 0 ]		421932	1		|			
ANR	421965	ShiftExpression	s [ 1 ] << 8		421932	0		<<			
ANR	421966	ArrayIndexing	s [ 1 ]		421932	0					
ANR	421967	Identifier	s		421932	0					
ANR	421968	PrimaryExpression	1		421932	1					
ANR	421969	PrimaryExpression	8		421932	1					
ANR	421970	ArrayIndexing	s [ 0 ]		421932	1					
ANR	421971	Identifier	s		421932	0					
ANR	421972	PrimaryExpression	0		421932	1					
ANR	421973	BreakStatement	break ;	3228:2:70831:70836	421932	5	True				
ANR	421974	Label	case PSTRING_2_BE :	3229:1:70839:70856	421932	6	True				
ANR	421975	Identifier	PSTRING_2_BE		421932	0					
ANR	421976	ExpressionStatement	len = ( s [ 0 ] << 8 ) | s [ 1 ]	3230:2:70860:70884	421932	7	True				
ANR	421977	AssignmentExpression	len = ( s [ 0 ] << 8 ) | s [ 1 ]		421932	0		=			
ANR	421978	Identifier	len		421932	0					
ANR	421979	InclusiveOrExpression	( s [ 0 ] << 8 ) | s [ 1 ]		421932	1		|			
ANR	421980	ShiftExpression	s [ 0 ] << 8		421932	0		<<			
ANR	421981	ArrayIndexing	s [ 0 ]		421932	0					
ANR	421982	Identifier	s		421932	0					
ANR	421983	PrimaryExpression	0		421932	1					
ANR	421984	PrimaryExpression	8		421932	1					
ANR	421985	ArrayIndexing	s [ 1 ]		421932	1					
ANR	421986	Identifier	s		421932	0					
ANR	421987	PrimaryExpression	1		421932	1					
ANR	421988	BreakStatement	break ;	3231:2:70888:70893	421932	8	True				
ANR	421989	Label	case PSTRING_4_LE :	3232:1:70896:70913	421932	9	True				
ANR	421990	Identifier	PSTRING_4_LE		421932	0					
ANR	421991	ExpressionStatement	len = ( s [ 3 ] << 24 ) | ( s [ 2 ] << 16 ) | ( s [ 1 ] << 8 ) | s [ 0 ]	3233:2:70917:70971	421932	10	True				
ANR	421992	AssignmentExpression	len = ( s [ 3 ] << 24 ) | ( s [ 2 ] << 16 ) | ( s [ 1 ] << 8 ) | s [ 0 ]		421932	0		=			
ANR	421993	Identifier	len		421932	0					
ANR	421994	InclusiveOrExpression	( s [ 3 ] << 24 ) | ( s [ 2 ] << 16 ) | ( s [ 1 ] << 8 ) | s [ 0 ]		421932	1		|			
ANR	421995	ShiftExpression	s [ 3 ] << 24		421932	0		<<			
ANR	421996	ArrayIndexing	s [ 3 ]		421932	0					
ANR	421997	Identifier	s		421932	0					
ANR	421998	PrimaryExpression	3		421932	1					
ANR	421999	PrimaryExpression	24		421932	1					
ANR	422000	InclusiveOrExpression	( s [ 2 ] << 16 ) | ( s [ 1 ] << 8 ) | s [ 0 ]		421932	1		|			
ANR	422001	ShiftExpression	s [ 2 ] << 16		421932	0		<<			
ANR	422002	ArrayIndexing	s [ 2 ]		421932	0					
ANR	422003	Identifier	s		421932	0					
ANR	422004	PrimaryExpression	2		421932	1					
ANR	422005	PrimaryExpression	16		421932	1					
ANR	422006	InclusiveOrExpression	( s [ 1 ] << 8 ) | s [ 0 ]		421932	1		|			
ANR	422007	ShiftExpression	s [ 1 ] << 8		421932	0		<<			
ANR	422008	ArrayIndexing	s [ 1 ]		421932	0					
ANR	422009	Identifier	s		421932	0					
ANR	422010	PrimaryExpression	1		421932	1					
ANR	422011	PrimaryExpression	8		421932	1					
ANR	422012	ArrayIndexing	s [ 0 ]		421932	1					
ANR	422013	Identifier	s		421932	0					
ANR	422014	PrimaryExpression	0		421932	1					
ANR	422015	BreakStatement	break ;	3234:2:70975:70980	421932	11	True				
ANR	422016	Label	case PSTRING_4_BE :	3235:1:70983:71000	421932	12	True				
ANR	422017	Identifier	PSTRING_4_BE		421932	0					
ANR	422018	ExpressionStatement	len = ( s [ 0 ] << 24 ) | ( s [ 1 ] << 16 ) | ( s [ 2 ] << 8 ) | s [ 3 ]	3236:2:71004:71058	421932	13	True				
ANR	422019	AssignmentExpression	len = ( s [ 0 ] << 24 ) | ( s [ 1 ] << 16 ) | ( s [ 2 ] << 8 ) | s [ 3 ]		421932	0		=			
ANR	422020	Identifier	len		421932	0					
ANR	422021	InclusiveOrExpression	( s [ 0 ] << 24 ) | ( s [ 1 ] << 16 ) | ( s [ 2 ] << 8 ) | s [ 3 ]		421932	1		|			
ANR	422022	ShiftExpression	s [ 0 ] << 24		421932	0		<<			
ANR	422023	ArrayIndexing	s [ 0 ]		421932	0					
ANR	422024	Identifier	s		421932	0					
ANR	422025	PrimaryExpression	0		421932	1					
ANR	422026	PrimaryExpression	24		421932	1					
ANR	422027	InclusiveOrExpression	( s [ 1 ] << 16 ) | ( s [ 2 ] << 8 ) | s [ 3 ]		421932	1		|			
ANR	422028	ShiftExpression	s [ 1 ] << 16		421932	0		<<			
ANR	422029	ArrayIndexing	s [ 1 ]		421932	0					
ANR	422030	Identifier	s		421932	0					
ANR	422031	PrimaryExpression	1		421932	1					
ANR	422032	PrimaryExpression	16		421932	1					
ANR	422033	InclusiveOrExpression	( s [ 2 ] << 8 ) | s [ 3 ]		421932	1		|			
ANR	422034	ShiftExpression	s [ 2 ] << 8		421932	0		<<			
ANR	422035	ArrayIndexing	s [ 2 ]		421932	0					
ANR	422036	Identifier	s		421932	0					
ANR	422037	PrimaryExpression	2		421932	1					
ANR	422038	PrimaryExpression	8		421932	1					
ANR	422039	ArrayIndexing	s [ 3 ]		421932	1					
ANR	422040	Identifier	s		421932	0					
ANR	422041	PrimaryExpression	3		421932	1					
ANR	422042	BreakStatement	break ;	3237:2:71062:71067	421932	14	True				
ANR	422043	Label	default :	3238:1:71070:71077	421932	15	True				
ANR	422044	Identifier	default		421932	0					
ANR	422045	ExpressionStatement	abort ( )	3239:2:71081:71088	421932	16	True				
ANR	422046	CallExpression	abort ( )		421932	0					
ANR	422047	Callee	abort		421932	0					
ANR	422048	Identifier	abort		421932	0					
ANR	422049	ArgumentList			421932	1					
ANR	422050	IfStatement	if ( m -> str_flags & PSTRING_LENGTH_INCLUDES_ITSELF )		421932	2					
ANR	422051	Condition	m -> str_flags & PSTRING_LENGTH_INCLUDES_ITSELF	3242:5:71116:71160	421932	0	True				
ANR	422052	BitAndExpression	m -> str_flags & PSTRING_LENGTH_INCLUDES_ITSELF		421932	0		&			
ANR	422053	PtrMemberAccess	m -> str_flags		421932	0					
ANR	422054	Identifier	m		421932	0					
ANR	422055	Identifier	str_flags		421932	1					
ANR	422056	Identifier	PSTRING_LENGTH_INCLUDES_ITSELF		421932	1					
ANR	422057	ExpressionStatement	len -= file_pstring_length_size ( m )	3243:2:71165:71199	421932	1	True				
ANR	422058	AssignmentExpression	len -= file_pstring_length_size ( m )		421932	0		-=			
ANR	422059	Identifier	len		421932	0					
ANR	422060	CallExpression	file_pstring_length_size ( m )		421932	1					
ANR	422061	Callee	file_pstring_length_size		421932	0					
ANR	422062	Identifier	file_pstring_length_size		421932	0					
ANR	422063	ArgumentList	m		421932	1					
ANR	422064	Argument	m		421932	0					
ANR	422065	Identifier	m		421932	0					
ANR	422066	ReturnStatement	return len ;	3245:1:71203:71213	421932	3	True				
ANR	422067	Identifier	len		421932	0					
ANR	422068	ReturnType	size_t		421932	1					
ANR	422069	Identifier	file_pstring_get_length		421932	2					
ANR	422070	ParameterList	"const struct magic * m , const char * s"		421932	3					
ANR	422071	Parameter	const struct magic * m	3218:24:70643:70663	421932	0	True				
ANR	422072	ParameterType	const struct magic *		421932	0					
ANR	422073	Identifier	m		421932	1					
ANR	422074	Parameter	const char * s	3218:47:70666:70678	421932	1	True				
ANR	422075	ParameterType	const char *		421932	0					
ANR	422076	Identifier	s		421932	1					
ANR	422077	CFGEntryNode	ENTRY		421932		True				
ANR	422078	CFGExitNode	EXIT		421932		True				
ANR	422079	Symbol	s		421932						
ANR	422080	Symbol	file_pstring_length_size		421932						
ANR	422081	Symbol	len		421932						
ANR	422082	Symbol	PSTRING_LEN		421932						
ANR	422083	Symbol	* m		421932						
ANR	422084	Symbol	m -> str_flags		421932						
ANR	422085	Symbol	m		421932						
ANR	422086	Symbol	* s		421932						
ANR	422087	Symbol	PSTRING_LENGTH_INCLUDES_ITSELF		421932						
ANR	422088	Function	file_magicfind	3248:10:71228:71777							
ANR	422089	FunctionDef	"file_magicfind (struct magic_set * ms , const char * name , struct mlist * v)"		422088	0					
ANR	422090	CompoundStatement		3250:0:71304:71777	422088	0					
ANR	422091	IdentifierDeclStatement	"uint32_t i , j ;"	3251:1:71307:71320	422088	0	True				
ANR	422092	IdentifierDecl	i		422088	0					
ANR	422093	IdentifierDeclType	uint32_t		422088	0					
ANR	422094	Identifier	i		422088	1					
ANR	422095	IdentifierDecl	j		422088	1					
ANR	422096	IdentifierDeclType	uint32_t		422088	0					
ANR	422097	Identifier	j		422088	1					
ANR	422098	IdentifierDeclStatement	"struct mlist * mlist , * ml ;"	3252:1:71323:71347	422088	1	True				
ANR	422099	IdentifierDecl	* mlist		422088	0					
ANR	422100	IdentifierDeclType	struct mlist *		422088	0					
ANR	422101	Identifier	mlist		422088	1					
ANR	422102	IdentifierDecl	* ml		422088	1					
ANR	422103	IdentifierDeclType	struct mlist *		422088	0					
ANR	422104	Identifier	ml		422088	1					
ANR	422105	ExpressionStatement	mlist = ms -> mlist [ 1 ]	3254:1:71351:71371	422088	2	True				
ANR	422106	AssignmentExpression	mlist = ms -> mlist [ 1 ]		422088	0		=			
ANR	422107	Identifier	mlist		422088	0					
ANR	422108	ArrayIndexing	ms -> mlist [ 1 ]		422088	1					
ANR	422109	PtrMemberAccess	ms -> mlist		422088	0					
ANR	422110	Identifier	ms		422088	0					
ANR	422111	Identifier	mlist		422088	1					
ANR	422112	PrimaryExpression	1		422088	1					
ANR	422113	ForStatement	for ( ml = mlist -> next ; ml != mlist ; ml = ml -> next )		422088	3					
ANR	422114	ForInit	ml = mlist -> next ;	3256:6:71380:71396	422088	0	True				
ANR	422115	AssignmentExpression	ml = mlist -> next		422088	0		=			
ANR	422116	Identifier	ml		422088	0					
ANR	422117	PtrMemberAccess	mlist -> next		422088	1					
ANR	422118	Identifier	mlist		422088	0					
ANR	422119	Identifier	next		422088	1					
ANR	422120	Condition	ml != mlist	3256:24:71398:71408	422088	1	True				
ANR	422121	EqualityExpression	ml != mlist		422088	0		!=			
ANR	422122	Identifier	ml		422088	0					
ANR	422123	Identifier	mlist		422088	1					
ANR	422124	AssignmentExpression	ml = ml -> next	3256:37:71411:71423	422088	2	True	=			
ANR	422125	Identifier	ml		422088	0					
ANR	422126	PtrMemberAccess	ml -> next		422088	1					
ANR	422127	Identifier	ml		422088	0					
ANR	422128	Identifier	next		422088	1					
ANR	422129	CompoundStatement		9:2:157:182	422088	3					
ANR	422130	IdentifierDeclStatement	struct magic * ma = ml -> magic ;	3257:2:71430:71458	422088	0	True				
ANR	422131	IdentifierDecl	* ma = ml -> magic		422088	0					
ANR	422132	IdentifierDeclType	struct magic *		422088	0					
ANR	422133	Identifier	ma		422088	1					
ANR	422134	AssignmentExpression	* ma = ml -> magic		422088	2		=			
ANR	422135	Identifier	ma		422088	0					
ANR	422136	PtrMemberAccess	ml -> magic		422088	1					
ANR	422137	Identifier	ml		422088	0					
ANR	422138	Identifier	magic		422088	1					
ANR	422139	IdentifierDeclStatement	uint32_t nma = ml -> nmagic ;	3258:2:71462:71487	422088	1	True				
ANR	422140	IdentifierDecl	nma = ml -> nmagic		422088	0					
ANR	422141	IdentifierDeclType	uint32_t		422088	0					
ANR	422142	Identifier	nma		422088	1					
ANR	422143	AssignmentExpression	nma = ml -> nmagic		422088	2		=			
ANR	422144	Identifier	nma		422088	0					
ANR	422145	PtrMemberAccess	ml -> nmagic		422088	1					
ANR	422146	Identifier	ml		422088	0					
ANR	422147	Identifier	nmagic		422088	1					
ANR	422148	ForStatement	for ( i = 0 ; i < nma ; i ++ )		422088	2					
ANR	422149	ForInit	i = 0 ;	3259:7:71496:71501	422088	0	True				
ANR	422150	AssignmentExpression	i = 0		422088	0		=			
ANR	422151	Identifier	i		422088	0					
ANR	422152	PrimaryExpression	0		422088	1					
ANR	422153	Condition	i < nma	3259:14:71503:71509	422088	1	True				
ANR	422154	RelationalExpression	i < nma		422088	0		<			
ANR	422155	Identifier	i		422088	0					
ANR	422156	Identifier	nma		422088	1					
ANR	422157	PostIncDecOperationExpression	i ++	3259:23:71512:71514	422088	2	True				
ANR	422158	Identifier	i		422088	0					
ANR	422159	IncDec	++		422088	1					
ANR	422160	CompoundStatement		10:28:212:212	422088	3					
ANR	422161	IfStatement	if ( ma [ i ] . type != FILE_NAME )		422088	0					
ANR	422162	Condition	ma [ i ] . type != FILE_NAME	3260:7:71526:71548	422088	0	True				
ANR	422163	EqualityExpression	ma [ i ] . type != FILE_NAME		422088	0		!=			
ANR	422164	MemberAccess	ma [ i ] . type		422088	0					
ANR	422165	ArrayIndexing	ma [ i ]		422088	0					
ANR	422166	Identifier	ma		422088	0					
ANR	422167	Identifier	i		422088	1					
ANR	422168	Identifier	type		422088	1					
ANR	422169	Identifier	FILE_NAME		422088	1					
ANR	422170	ContinueStatement	continue ;	3261:4:71555:71563	422088	1	True				
ANR	422171	IfStatement	"if ( strcmp ( ma [ i ] . value . s , name ) == 0 )"		422088	1					
ANR	422172	Condition	"strcmp ( ma [ i ] . value . s , name ) == 0"	3262:7:71572:71603	422088	0	True				
ANR	422173	EqualityExpression	"strcmp ( ma [ i ] . value . s , name ) == 0"		422088	0		==			
ANR	422174	CallExpression	"strcmp ( ma [ i ] . value . s , name )"		422088	0					
ANR	422175	Callee	strcmp		422088	0					
ANR	422176	Identifier	strcmp		422088	0					
ANR	422177	ArgumentList	ma [ i ] . value . s		422088	1					
ANR	422178	Argument	ma [ i ] . value . s		422088	0					
ANR	422179	MemberAccess	ma [ i ] . value . s		422088	0					
ANR	422180	MemberAccess	ma [ i ] . value		422088	0					
ANR	422181	ArrayIndexing	ma [ i ]		422088	0					
ANR	422182	Identifier	ma		422088	0					
ANR	422183	Identifier	i		422088	1					
ANR	422184	Identifier	value		422088	1					
ANR	422185	Identifier	s		422088	1					
ANR	422186	Argument	name		422088	1					
ANR	422187	Identifier	name		422088	0					
ANR	422188	PrimaryExpression	0		422088	1					
ANR	422189	CompoundStatement		13:41:301:301	422088	1					
ANR	422190	ExpressionStatement	v -> magic = & ma [ i ]	3263:4:71612:71629	422088	0	True				
ANR	422191	AssignmentExpression	v -> magic = & ma [ i ]		422088	0		=			
ANR	422192	PtrMemberAccess	v -> magic		422088	0					
ANR	422193	Identifier	v		422088	0					
ANR	422194	Identifier	magic		422088	1					
ANR	422195	UnaryOperationExpression	& ma [ i ]		422088	1					
ANR	422196	UnaryOperator	&		422088	0					
ANR	422197	ArrayIndexing	ma [ i ]		422088	1					
ANR	422198	Identifier	ma		422088	0					
ANR	422199	Identifier	i		422088	1					
ANR	422200	ForStatement	for ( j = i + 1 ; j < nma ; j ++ )		422088	1					
ANR	422201	ForInit	j = i + 1 ;	3264:9:71640:71649	422088	0	True				
ANR	422202	AssignmentExpression	j = i + 1		422088	0		=			
ANR	422203	Identifier	j		422088	0					
ANR	422204	AdditiveExpression	i + 1		422088	1		+			
ANR	422205	Identifier	i		422088	0					
ANR	422206	PrimaryExpression	1		422088	1					
ANR	422207	Condition	j < nma	3264:20:71651:71657	422088	1	True				
ANR	422208	RelationalExpression	j < nma		422088	0		<			
ANR	422209	Identifier	j		422088	0					
ANR	422210	Identifier	nma		422088	1					
ANR	422211	PostIncDecOperationExpression	j ++	3264:29:71660:71662	422088	2	True				
ANR	422212	Identifier	j		422088	0					
ANR	422213	IncDec	++		422088	1					
ANR	422214	IfStatement	if ( ma [ j ] . cont_level == 0 )		422088	3					
ANR	422215	Condition	ma [ j ] . cont_level == 0	3265:12:71677:71697	422088	0	True				
ANR	422216	EqualityExpression	ma [ j ] . cont_level == 0		422088	0		==			
ANR	422217	MemberAccess	ma [ j ] . cont_level		422088	0					
ANR	422218	ArrayIndexing	ma [ j ]		422088	0					
ANR	422219	Identifier	ma		422088	0					
ANR	422220	Identifier	j		422088	1					
ANR	422221	Identifier	cont_level		422088	1					
ANR	422222	PrimaryExpression	0		422088	1					
ANR	422223	BreakStatement	break ;	3266:9:71709:71714	422088	1	True				
ANR	422224	ExpressionStatement	v -> nmagic = j - i	3267:4:71720:71737	422088	2	True				
ANR	422225	AssignmentExpression	v -> nmagic = j - i		422088	0		=			
ANR	422226	PtrMemberAccess	v -> nmagic		422088	0					
ANR	422227	Identifier	v		422088	0					
ANR	422228	Identifier	nmagic		422088	1					
ANR	422229	AdditiveExpression	j - i		422088	1		-			
ANR	422230	Identifier	j		422088	0					
ANR	422231	Identifier	i		422088	1					
ANR	422232	ReturnStatement	return 0 ;	3268:4:71743:71751	422088	3	True				
ANR	422233	PrimaryExpression	0		422088	0					
ANR	422234	ReturnStatement	return - 1 ;	3272:1:71766:71775	422088	4	True				
ANR	422235	UnaryOperationExpression	- 1		422088	0					
ANR	422236	UnaryOperator	-		422088	0					
ANR	422237	PrimaryExpression	1		422088	1					
ANR	422238	ReturnType	int		422088	1					
ANR	422239	Identifier	file_magicfind		422088	2					
ANR	422240	ParameterList	"struct magic_set * ms , const char * name , struct mlist * v"		422088	3					
ANR	422241	Parameter	struct magic_set * ms	3249:15:71247:71266	422088	0	True				
ANR	422242	ParameterType	struct magic_set *		422088	0					
ANR	422243	Identifier	ms		422088	1					
ANR	422244	Parameter	const char * name	3249:37:71269:71284	422088	1	True				
ANR	422245	ParameterType	const char *		422088	0					
ANR	422246	Identifier	name		422088	1					
ANR	422247	Parameter	struct mlist * v	3249:55:71287:71301	422088	2	True				
ANR	422248	ParameterType	struct mlist *		422088	0					
ANR	422249	Identifier	v		422088	1					
ANR	422250	CFGEntryNode	ENTRY		422088		True				
ANR	422251	CFGExitNode	EXIT		422088		True				
ANR	422252	Symbol	* v		422088						
ANR	422253	Symbol	nma		422088						
ANR	422254	Symbol	mlist -> next		422088						
ANR	422255	Symbol	ml -> next		422088						
ANR	422256	Symbol	ms -> mlist		422088						
ANR	422257	Symbol	* mlist		422088						
ANR	422258	Symbol	* ml		422088						
ANR	422259	Symbol	ml -> nmagic		422088						
ANR	422260	Symbol	FILE_NAME		422088						
ANR	422261	Symbol	* ms		422088						
ANR	422262	Symbol	* * ms		422088						
ANR	422263	Symbol	ma		422088						
ANR	422264	Symbol	ml -> magic		422088						
ANR	422265	Symbol	ma [ i ] . value		422088						
ANR	422266	Symbol	* ma		422088						
ANR	422267	Symbol	ma [ i ] . type		422088						
ANR	422268	Symbol	ml		422088						
ANR	422269	Symbol	strcmp		422088						
ANR	422270	Symbol	* ms -> mlist		422088						
ANR	422271	Symbol	ms		422088						
ANR	422272	Symbol	i		422088						
ANR	422273	Symbol	j		422088						
ANR	422274	Symbol	v -> magic		422088						
ANR	422275	Symbol	ma [ j ] . cont_level		422088						
ANR	422276	Symbol	* i		422088						
ANR	422277	Symbol	* j		422088						
ANR	422278	Symbol	ma [ i ] . value . s		422088						
ANR	422279	Symbol	v		422088						
ANR	422280	Symbol	v -> nmagic		422088						
ANR	422281	Symbol	name		422088						
ANR	422282	Symbol	mlist		422088						
