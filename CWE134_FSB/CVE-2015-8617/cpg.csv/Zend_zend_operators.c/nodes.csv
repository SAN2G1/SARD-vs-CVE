command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	319167	File	data/converged/CVE-2015-8617_php-src/Zend_zend_operators.c								
ANR	319168	DeclStmt									
ANR	319169	Decl							_locale_t	_locale_t	current_locale
ANR	319170	DeclStmt									
ANR	319171	Decl							const unsigned char	const unsigned char [ 256 ]	tolower_map
ANR	319172	Function	zend_atoi	83:0:3670:4144							
ANR	319173	FunctionDef	"zend_atoi (const char * str , int str_len)"		319172	0					
ANR	319174	CompoundStatement		84:0:3747:4144	319172	0					
ANR	319175	IdentifierDeclStatement	int retval ;	85:1:3750:3760	319172	0	True				
ANR	319176	IdentifierDecl	retval		319172	0					
ANR	319177	IdentifierDeclType	int		319172	0					
ANR	319178	Identifier	retval		319172	1					
ANR	319179	IfStatement	if ( ! str_len )		319172	1					
ANR	319180	Condition	! str_len	87:5:3768:3775	319172	0	True				
ANR	319181	UnaryOperationExpression	! str_len		319172	0					
ANR	319182	UnaryOperator	!		319172	0					
ANR	319183	Identifier	str_len		319172	1					
ANR	319184	CompoundStatement		4:15:30:30	319172	1					
ANR	319185	ExpressionStatement	str_len = ( int ) strlen ( str )	88:2:3782:3808	319172	0	True				
ANR	319186	AssignmentExpression	str_len = ( int ) strlen ( str )		319172	0		=			
ANR	319187	Identifier	str_len		319172	0					
ANR	319188	CastExpression	( int ) strlen ( str )		319172	1					
ANR	319189	CastTarget	int		319172	0					
ANR	319190	CallExpression	strlen ( str )		319172	1					
ANR	319191	Callee	strlen		319172	0					
ANR	319192	Identifier	strlen		319172	0					
ANR	319193	ArgumentList	str		319172	1					
ANR	319194	Argument	str		319172	0					
ANR	319195	Identifier	str		319172	0					
ANR	319196	ExpressionStatement	"retval = ZEND_STRTOL ( str , NULL , 0 )"	90:1:3814:3848	319172	2	True				
ANR	319197	AssignmentExpression	"retval = ZEND_STRTOL ( str , NULL , 0 )"		319172	0		=			
ANR	319198	Identifier	retval		319172	0					
ANR	319199	CallExpression	"ZEND_STRTOL ( str , NULL , 0 )"		319172	1					
ANR	319200	Callee	ZEND_STRTOL		319172	0					
ANR	319201	Identifier	ZEND_STRTOL		319172	0					
ANR	319202	ArgumentList	str		319172	1					
ANR	319203	Argument	str		319172	0					
ANR	319204	Identifier	str		319172	0					
ANR	319205	Argument	NULL		319172	1					
ANR	319206	Identifier	NULL		319172	0					
ANR	319207	Argument	0		319172	2					
ANR	319208	PrimaryExpression	0		319172	0					
ANR	319209	IfStatement	if ( str_len > 0 )		319172	3					
ANR	319210	Condition	str_len > 0	91:5:3855:3863	319172	0	True				
ANR	319211	RelationalExpression	str_len > 0		319172	0		>			
ANR	319212	Identifier	str_len		319172	0					
ANR	319213	PrimaryExpression	0		319172	1					
ANR	319214	CompoundStatement		8:16:118:118	319172	1					
ANR	319215	SwitchStatement	switch ( str [ str_len - 1 ] )		319172	0					
ANR	319216	Condition	str [ str_len - 1 ]	92:10:3878:3891	319172	0	True				
ANR	319217	ArrayIndexing	str [ str_len - 1 ]		319172	0					
ANR	319218	Identifier	str		319172	0					
ANR	319219	AdditiveExpression	str_len - 1		319172	1		-			
ANR	319220	Identifier	str_len		319172	0					
ANR	319221	PrimaryExpression	1		319172	1					
ANR	319222	CompoundStatement		9:26:146:146	319172	1					
ANR	319223	Label	case 'g' :	93:3:3899:3907	319172	0	True				
ANR	319224	Label	case 'G' :	94:3:3912:3920	319172	1	True				
ANR	319225	ExpressionStatement	retval *= 1024	95:4:3926:3940	319172	2	True				
ANR	319226	AssignmentExpression	retval *= 1024		319172	0		*=			
ANR	319227	Identifier	retval		319172	0					
ANR	319228	PrimaryExpression	1024		319172	1					
ANR	319229	Label	case 'm' :	97:3:3983:3991	319172	3	True				
ANR	319230	Label	case 'M' :	98:3:3996:4004	319172	4	True				
ANR	319231	ExpressionStatement	retval *= 1024	99:4:4010:4024	319172	5	True				
ANR	319232	AssignmentExpression	retval *= 1024		319172	0		*=			
ANR	319233	Identifier	retval		319172	0					
ANR	319234	PrimaryExpression	1024		319172	1					
ANR	319235	Label	case 'k' :	101:3:4067:4075	319172	6	True				
ANR	319236	Label	case 'K' :	102:3:4080:4088	319172	7	True				
ANR	319237	ExpressionStatement	retval *= 1024	103:4:4094:4108	319172	8	True				
ANR	319238	AssignmentExpression	retval *= 1024		319172	0		*=			
ANR	319239	Identifier	retval		319172	0					
ANR	319240	PrimaryExpression	1024		319172	1					
ANR	319241	BreakStatement	break ;	104:4:4114:4119	319172	9	True				
ANR	319242	ReturnStatement	return retval ;	107:1:4129:4142	319172	4	True				
ANR	319243	Identifier	retval		319172	0					
ANR	319244	ReturnType	ZEND_API int ZEND_FASTCALL		319172	1					
ANR	319245	Identifier	zend_atoi		319172	2					
ANR	319246	ParameterList	"const char * str , int str_len"		319172	3					
ANR	319247	Parameter	const char * str	83:37:3707:3721	319172	0	True				
ANR	319248	ParameterType	const char *		319172	0					
ANR	319249	Identifier	str		319172	1					
ANR	319250	Parameter	int str_len	83:54:3724:3734	319172	1	True				
ANR	319251	ParameterType	int		319172	0					
ANR	319252	Identifier	str_len		319172	1					
ANR	319253	CFGEntryNode	ENTRY		319172		True				
ANR	319254	CFGExitNode	EXIT		319172		True				
ANR	319255	Symbol	str		319172						
ANR	319256	Symbol	* str_len		319172						
ANR	319257	Symbol	strlen		319172						
ANR	319258	Symbol	NULL		319172						
ANR	319259	Symbol	str_len		319172						
ANR	319260	Symbol	ZEND_STRTOL		319172						
ANR	319261	Symbol	* str		319172						
ANR	319262	Symbol	retval		319172						
ANR	319263	Function	zend_atol	111:0:4157:4643							
ANR	319264	FunctionDef	"zend_atol (const char * str , int str_len)"		319263	0					
ANR	319265	CompoundStatement		112:0:4240:4643	319263	0					
ANR	319266	IdentifierDeclStatement	zend_long retval ;	113:1:4243:4259	319263	0	True				
ANR	319267	IdentifierDecl	retval		319263	0					
ANR	319268	IdentifierDeclType	zend_long		319263	0					
ANR	319269	Identifier	retval		319263	1					
ANR	319270	IfStatement	if ( ! str_len )		319263	1					
ANR	319271	Condition	! str_len	115:5:4267:4274	319263	0	True				
ANR	319272	UnaryOperationExpression	! str_len		319263	0					
ANR	319273	UnaryOperator	!		319263	0					
ANR	319274	Identifier	str_len		319263	1					
ANR	319275	CompoundStatement		4:15:36:36	319263	1					
ANR	319276	ExpressionStatement	str_len = ( int ) strlen ( str )	116:2:4281:4307	319263	0	True				
ANR	319277	AssignmentExpression	str_len = ( int ) strlen ( str )		319263	0		=			
ANR	319278	Identifier	str_len		319263	0					
ANR	319279	CastExpression	( int ) strlen ( str )		319263	1					
ANR	319280	CastTarget	int		319263	0					
ANR	319281	CallExpression	strlen ( str )		319263	1					
ANR	319282	Callee	strlen		319263	0					
ANR	319283	Identifier	strlen		319263	0					
ANR	319284	ArgumentList	str		319263	1					
ANR	319285	Argument	str		319263	0					
ANR	319286	Identifier	str		319263	0					
ANR	319287	ExpressionStatement	"retval = ZEND_STRTOL ( str , NULL , 0 )"	118:1:4313:4347	319263	2	True				
ANR	319288	AssignmentExpression	"retval = ZEND_STRTOL ( str , NULL , 0 )"		319263	0		=			
ANR	319289	Identifier	retval		319263	0					
ANR	319290	CallExpression	"ZEND_STRTOL ( str , NULL , 0 )"		319263	1					
ANR	319291	Callee	ZEND_STRTOL		319263	0					
ANR	319292	Identifier	ZEND_STRTOL		319263	0					
ANR	319293	ArgumentList	str		319263	1					
ANR	319294	Argument	str		319263	0					
ANR	319295	Identifier	str		319263	0					
ANR	319296	Argument	NULL		319263	1					
ANR	319297	Identifier	NULL		319263	0					
ANR	319298	Argument	0		319263	2					
ANR	319299	PrimaryExpression	0		319263	0					
ANR	319300	IfStatement	if ( str_len > 0 )		319263	3					
ANR	319301	Condition	str_len > 0	119:5:4354:4362	319263	0	True				
ANR	319302	RelationalExpression	str_len > 0		319263	0		>			
ANR	319303	Identifier	str_len		319263	0					
ANR	319304	PrimaryExpression	0		319263	1					
ANR	319305	CompoundStatement		8:16:124:124	319263	1					
ANR	319306	SwitchStatement	switch ( str [ str_len - 1 ] )		319263	0					
ANR	319307	Condition	str [ str_len - 1 ]	120:10:4377:4390	319263	0	True				
ANR	319308	ArrayIndexing	str [ str_len - 1 ]		319263	0					
ANR	319309	Identifier	str		319263	0					
ANR	319310	AdditiveExpression	str_len - 1		319263	1		-			
ANR	319311	Identifier	str_len		319263	0					
ANR	319312	PrimaryExpression	1		319263	1					
ANR	319313	CompoundStatement		9:26:152:152	319263	1					
ANR	319314	Label	case 'g' :	121:3:4398:4406	319263	0	True				
ANR	319315	Label	case 'G' :	122:3:4411:4419	319263	1	True				
ANR	319316	ExpressionStatement	retval *= 1024	123:4:4425:4439	319263	2	True				
ANR	319317	AssignmentExpression	retval *= 1024		319263	0		*=			
ANR	319318	Identifier	retval		319263	0					
ANR	319319	PrimaryExpression	1024		319263	1					
ANR	319320	Label	case 'm' :	125:3:4482:4490	319263	3	True				
ANR	319321	Label	case 'M' :	126:3:4495:4503	319263	4	True				
ANR	319322	ExpressionStatement	retval *= 1024	127:4:4509:4523	319263	5	True				
ANR	319323	AssignmentExpression	retval *= 1024		319263	0		*=			
ANR	319324	Identifier	retval		319263	0					
ANR	319325	PrimaryExpression	1024		319263	1					
ANR	319326	Label	case 'k' :	129:3:4566:4574	319263	6	True				
ANR	319327	Label	case 'K' :	130:3:4579:4587	319263	7	True				
ANR	319328	ExpressionStatement	retval *= 1024	131:4:4593:4607	319263	8	True				
ANR	319329	AssignmentExpression	retval *= 1024		319263	0		*=			
ANR	319330	Identifier	retval		319263	0					
ANR	319331	PrimaryExpression	1024		319263	1					
ANR	319332	BreakStatement	break ;	132:4:4613:4618	319263	9	True				
ANR	319333	ReturnStatement	return retval ;	135:1:4628:4641	319263	4	True				
ANR	319334	Identifier	retval		319263	0					
ANR	319335	ReturnType	ZEND_API zend_long ZEND_FASTCALL		319263	1					
ANR	319336	Identifier	zend_atol		319263	2					
ANR	319337	ParameterList	"const char * str , int str_len"		319263	3					
ANR	319338	Parameter	const char * str	111:43:4200:4214	319263	0	True				
ANR	319339	ParameterType	const char *		319263	0					
ANR	319340	Identifier	str		319263	1					
ANR	319341	Parameter	int str_len	111:60:4217:4227	319263	1	True				
ANR	319342	ParameterType	int		319263	0					
ANR	319343	Identifier	str_len		319263	1					
ANR	319344	CFGEntryNode	ENTRY		319263		True				
ANR	319345	CFGExitNode	EXIT		319263		True				
ANR	319346	Symbol	str		319263						
ANR	319347	Symbol	* str_len		319263						
ANR	319348	Symbol	strlen		319263						
ANR	319349	Symbol	NULL		319263						
ANR	319350	Symbol	str_len		319263						
ANR	319351	Symbol	ZEND_STRTOL		319263						
ANR	319352	Symbol	* str		319263						
ANR	319353	Symbol	retval		319263						
ANR	319354	Function	zend_unwrap_reference	139:0:4656:4843							
ANR	319355	FunctionDef	zend_unwrap_reference (zval * op)		319354	0					
ANR	319356	CompoundStatement		140:0:4729:4843	319354	0					
ANR	319357	IfStatement	if ( Z_REFCOUNT_P ( op ) == 1 )		319354	0					
ANR	319358	Condition	Z_REFCOUNT_P ( op ) == 1	141:5:4736:4756	319354	0	True				
ANR	319359	EqualityExpression	Z_REFCOUNT_P ( op ) == 1		319354	0		==			
ANR	319360	CallExpression	Z_REFCOUNT_P ( op )		319354	0					
ANR	319361	Callee	Z_REFCOUNT_P		319354	0					
ANR	319362	Identifier	Z_REFCOUNT_P		319354	0					
ANR	319363	ArgumentList	op		319354	1					
ANR	319364	Argument	op		319354	0					
ANR	319365	Identifier	op		319354	0					
ANR	319366	PrimaryExpression	1		319354	1					
ANR	319367	CompoundStatement		2:28:29:29	319354	1					
ANR	319368	ExpressionStatement	ZVAL_UNREF ( op )	142:2:4763:4777	319354	0	True				
ANR	319369	CallExpression	ZVAL_UNREF ( op )		319354	0					
ANR	319370	Callee	ZVAL_UNREF		319354	0					
ANR	319371	Identifier	ZVAL_UNREF		319354	0					
ANR	319372	ArgumentList	op		319354	1					
ANR	319373	Argument	op		319354	0					
ANR	319374	Identifier	op		319354	0					
ANR	319375	ElseStatement	else		319354	0					
ANR	319376	CompoundStatement		4:8:57:57	319354	0					
ANR	319377	ExpressionStatement	Z_DELREF_P ( op )	144:2:4791:4805	319354	0	True				
ANR	319378	CallExpression	Z_DELREF_P ( op )		319354	0					
ANR	319379	Callee	Z_DELREF_P		319354	0					
ANR	319380	Identifier	Z_DELREF_P		319354	0					
ANR	319381	ArgumentList	op		319354	1					
ANR	319382	Argument	op		319354	0					
ANR	319383	Identifier	op		319354	0					
ANR	319384	ExpressionStatement	"ZVAL_COPY ( op , Z_REFVAL_P ( op ) )"	145:2:4809:4838	319354	1	True				
ANR	319385	CallExpression	"ZVAL_COPY ( op , Z_REFVAL_P ( op ) )"		319354	0					
ANR	319386	Callee	ZVAL_COPY		319354	0					
ANR	319387	Identifier	ZVAL_COPY		319354	0					
ANR	319388	ArgumentList	op		319354	1					
ANR	319389	Argument	op		319354	0					
ANR	319390	Identifier	op		319354	0					
ANR	319391	Argument	Z_REFVAL_P ( op )		319354	1					
ANR	319392	CallExpression	Z_REFVAL_P ( op )		319354	0					
ANR	319393	Callee	Z_REFVAL_P		319354	0					
ANR	319394	Identifier	Z_REFVAL_P		319354	0					
ANR	319395	ArgumentList	op		319354	1					
ANR	319396	Argument	op		319354	0					
ANR	319397	Identifier	op		319354	0					
ANR	319398	ReturnType	static zend_always_inline void		319354	1					
ANR	319399	Identifier	zend_unwrap_reference		319354	2					
ANR	319400	ParameterList	zval * op		319354	3					
ANR	319401	Parameter	zval * op	139:53:4709:4716	319354	0	True				
ANR	319402	ParameterType	zval *		319354	0					
ANR	319403	Identifier	op		319354	1					
ANR	319404	CFGEntryNode	ENTRY		319354		True				
ANR	319405	CFGExitNode	EXIT		319354		True				
ANR	319406	Symbol	op		319354						
ANR	319407	Symbol	Z_REFVAL_P		319354						
ANR	319408	Symbol	Z_REFCOUNT_P		319354						
ANR	319409	Function	convert_scalar_to_number	150:0:4856:5596							
ANR	319410	FunctionDef	convert_scalar_to_number (zval * op)		319409	0					
ANR	319411	CompoundStatement		151:0:4929:5596	319409	0					
ANR	319412	Label	try_again :	152:0:4931:4940	319409	0	True				
ANR	319413	Identifier	try_again		319409	0					
ANR	319414	SwitchStatement	switch ( Z_TYPE_P ( op ) )		319409	1					
ANR	319415	Condition	Z_TYPE_P ( op )	153:9:4951:4962	319409	0	True				
ANR	319416	CallExpression	Z_TYPE_P ( op )		319409	0					
ANR	319417	Callee	Z_TYPE_P		319409	0					
ANR	319418	Identifier	Z_TYPE_P		319409	0					
ANR	319419	ArgumentList	op		319409	1					
ANR	319420	Argument	op		319409	0					
ANR	319421	Identifier	op		319409	0					
ANR	319422	CompoundStatement		3:23:35:35	319409	1					
ANR	319423	Label	case IS_REFERENCE :	154:2:4969:4986	319409	0	True				
ANR	319424	Identifier	IS_REFERENCE		319409	0					
ANR	319425	ExpressionStatement	zend_unwrap_reference ( op )	155:3:4991:5016	319409	1	True				
ANR	319426	CallExpression	zend_unwrap_reference ( op )		319409	0					
ANR	319427	Callee	zend_unwrap_reference		319409	0					
ANR	319428	Identifier	zend_unwrap_reference		319409	0					
ANR	319429	ArgumentList	op		319409	1					
ANR	319430	Argument	op		319409	0					
ANR	319431	Identifier	op		319409	0					
ANR	319432	GotoStatement	goto try_again ;	156:3:5021:5035	319409	2	True				
ANR	319433	Identifier	try_again		319409	0					
ANR	319434	Label	case IS_STRING :	157:2:5039:5053	319409	3	True				
ANR	319435	Identifier	IS_STRING		319409	0					
ANR	319436	CompoundStatement		9:4:134:150	319409	4					
ANR	319437	IdentifierDeclStatement	zend_string * str ;	159:4:5064:5080	319409	0	True				
ANR	319438	IdentifierDecl	* str		319409	0					
ANR	319439	IdentifierDeclType	zend_string *		319409	0					
ANR	319440	Identifier	str		319409	1					
ANR	319441	ExpressionStatement	str = Z_STR_P ( op )	161:4:5087:5104	319409	1	True				
ANR	319442	AssignmentExpression	str = Z_STR_P ( op )		319409	0		=			
ANR	319443	Identifier	str		319409	0					
ANR	319444	CallExpression	Z_STR_P ( op )		319409	1					
ANR	319445	Callee	Z_STR_P		319409	0					
ANR	319446	Identifier	Z_STR_P		319409	0					
ANR	319447	ArgumentList	op		319409	1					
ANR	319448	Argument	op		319409	0					
ANR	319449	Identifier	op		319409	0					
ANR	319450	IfStatement	"if ( ( Z_TYPE_INFO_P ( op ) = is_numeric_string ( ZSTR_VAL ( str ) , ZSTR_LEN ( str ) , & Z_LVAL_P ( op ) , & Z_DVAL_P ( op ) , 1 ) ) == 0 )"		319409	2					
ANR	319451	Condition	"( Z_TYPE_INFO_P ( op ) = is_numeric_string ( ZSTR_VAL ( str ) , ZSTR_LEN ( str ) , & Z_LVAL_P ( op ) , & Z_DVAL_P ( op ) , 1 ) ) == 0"	162:8:5114:5218	319409	0	True				
ANR	319452	EqualityExpression	"( Z_TYPE_INFO_P ( op ) = is_numeric_string ( ZSTR_VAL ( str ) , ZSTR_LEN ( str ) , & Z_LVAL_P ( op ) , & Z_DVAL_P ( op ) , 1 ) ) == 0"		319409	0		==			
ANR	319453	AssignmentExpression	"Z_TYPE_INFO_P ( op ) = is_numeric_string ( ZSTR_VAL ( str ) , ZSTR_LEN ( str ) , & Z_LVAL_P ( op ) , & Z_DVAL_P ( op ) , 1 )"		319409	0		=			
ANR	319454	CallExpression	Z_TYPE_INFO_P ( op )		319409	0					
ANR	319455	Callee	Z_TYPE_INFO_P		319409	0					
ANR	319456	Identifier	Z_TYPE_INFO_P		319409	0					
ANR	319457	ArgumentList	op		319409	1					
ANR	319458	Argument	op		319409	0					
ANR	319459	Identifier	op		319409	0					
ANR	319460	CallExpression	"is_numeric_string ( ZSTR_VAL ( str ) , ZSTR_LEN ( str ) , & Z_LVAL_P ( op ) , & Z_DVAL_P ( op ) , 1 )"		319409	1					
ANR	319461	Callee	is_numeric_string		319409	0					
ANR	319462	Identifier	is_numeric_string		319409	0					
ANR	319463	ArgumentList	ZSTR_VAL ( str )		319409	1					
ANR	319464	Argument	ZSTR_VAL ( str )		319409	0					
ANR	319465	CallExpression	ZSTR_VAL ( str )		319409	0					
ANR	319466	Callee	ZSTR_VAL		319409	0					
ANR	319467	Identifier	ZSTR_VAL		319409	0					
ANR	319468	ArgumentList	str		319409	1					
ANR	319469	Argument	str		319409	0					
ANR	319470	Identifier	str		319409	0					
ANR	319471	Argument	ZSTR_LEN ( str )		319409	1					
ANR	319472	CallExpression	ZSTR_LEN ( str )		319409	0					
ANR	319473	Callee	ZSTR_LEN		319409	0					
ANR	319474	Identifier	ZSTR_LEN		319409	0					
ANR	319475	ArgumentList	str		319409	1					
ANR	319476	Argument	str		319409	0					
ANR	319477	Identifier	str		319409	0					
ANR	319478	Argument	& Z_LVAL_P ( op )		319409	2					
ANR	319479	UnaryOperationExpression	& Z_LVAL_P ( op )		319409	0					
ANR	319480	UnaryOperator	&		319409	0					
ANR	319481	CallExpression	Z_LVAL_P ( op )		319409	1					
ANR	319482	Callee	Z_LVAL_P		319409	0					
ANR	319483	Identifier	Z_LVAL_P		319409	0					
ANR	319484	ArgumentList	op		319409	1					
ANR	319485	Argument	op		319409	0					
ANR	319486	Identifier	op		319409	0					
ANR	319487	Argument	& Z_DVAL_P ( op )		319409	3					
ANR	319488	UnaryOperationExpression	& Z_DVAL_P ( op )		319409	0					
ANR	319489	UnaryOperator	&		319409	0					
ANR	319490	CallExpression	Z_DVAL_P ( op )		319409	1					
ANR	319491	Callee	Z_DVAL_P		319409	0					
ANR	319492	Identifier	Z_DVAL_P		319409	0					
ANR	319493	ArgumentList	op		319409	1					
ANR	319494	Argument	op		319409	0					
ANR	319495	Identifier	op		319409	0					
ANR	319496	Argument	1		319409	4					
ANR	319497	PrimaryExpression	1		319409	0					
ANR	319498	PrimaryExpression	0		319409	1					
ANR	319499	CompoundStatement		12:115:291:291	319409	1					
ANR	319500	ExpressionStatement	"ZVAL_LONG ( op , 0 )"	163:5:5228:5244	319409	0	True				
ANR	319501	CallExpression	"ZVAL_LONG ( op , 0 )"		319409	0					
ANR	319502	Callee	ZVAL_LONG		319409	0					
ANR	319503	Identifier	ZVAL_LONG		319409	0					
ANR	319504	ArgumentList	op		319409	1					
ANR	319505	Argument	op		319409	0					
ANR	319506	Identifier	op		319409	0					
ANR	319507	Argument	0		319409	1					
ANR	319508	PrimaryExpression	0		319409	0					
ANR	319509	ExpressionStatement	zend_string_release ( str )	165:4:5256:5280	319409	3	True				
ANR	319510	CallExpression	zend_string_release ( str )		319409	0					
ANR	319511	Callee	zend_string_release		319409	0					
ANR	319512	Identifier	zend_string_release		319409	0					
ANR	319513	ArgumentList	str		319409	1					
ANR	319514	Argument	str		319409	0					
ANR	319515	Identifier	str		319409	0					
ANR	319516	BreakStatement	break ;	166:4:5286:5291	319409	4	True				
ANR	319517	Label	case IS_NULL :	168:2:5300:5312	319409	5	True				
ANR	319518	Identifier	IS_NULL		319409	0					
ANR	319519	Label	case IS_FALSE :	169:2:5316:5329	319409	6	True				
ANR	319520	Identifier	IS_FALSE		319409	0					
ANR	319521	ExpressionStatement	"ZVAL_LONG ( op , 0 )"	170:3:5334:5350	319409	7	True				
ANR	319522	CallExpression	"ZVAL_LONG ( op , 0 )"		319409	0					
ANR	319523	Callee	ZVAL_LONG		319409	0					
ANR	319524	Identifier	ZVAL_LONG		319409	0					
ANR	319525	ArgumentList	op		319409	1					
ANR	319526	Argument	op		319409	0					
ANR	319527	Identifier	op		319409	0					
ANR	319528	Argument	0		319409	1					
ANR	319529	PrimaryExpression	0		319409	0					
ANR	319530	BreakStatement	break ;	171:3:5355:5360	319409	8	True				
ANR	319531	Label	case IS_TRUE :	172:2:5364:5376	319409	9	True				
ANR	319532	Identifier	IS_TRUE		319409	0					
ANR	319533	ExpressionStatement	"ZVAL_LONG ( op , 1 )"	173:3:5381:5397	319409	10	True				
ANR	319534	CallExpression	"ZVAL_LONG ( op , 1 )"		319409	0					
ANR	319535	Callee	ZVAL_LONG		319409	0					
ANR	319536	Identifier	ZVAL_LONG		319409	0					
ANR	319537	ArgumentList	op		319409	1					
ANR	319538	Argument	op		319409	0					
ANR	319539	Identifier	op		319409	0					
ANR	319540	Argument	1		319409	1					
ANR	319541	PrimaryExpression	1		319409	0					
ANR	319542	BreakStatement	break ;	174:3:5402:5407	319409	11	True				
ANR	319543	Label	case IS_RESOURCE :	175:2:5411:5427	319409	12	True				
ANR	319544	Identifier	IS_RESOURCE		319409	0					
ANR	319545	CompoundStatement		27:4:508:540	319409	13					
ANR	319546	IdentifierDeclStatement	zend_long l = Z_RES_HANDLE_P ( op ) ;	177:4:5438:5470	319409	0	True				
ANR	319547	IdentifierDecl	l = Z_RES_HANDLE_P ( op )		319409	0					
ANR	319548	IdentifierDeclType	zend_long		319409	0					
ANR	319549	Identifier	l		319409	1					
ANR	319550	AssignmentExpression	l = Z_RES_HANDLE_P ( op )		319409	2		=			
ANR	319551	Identifier	l		319409	0					
ANR	319552	CallExpression	Z_RES_HANDLE_P ( op )		319409	1					
ANR	319553	Callee	Z_RES_HANDLE_P		319409	0					
ANR	319554	Identifier	Z_RES_HANDLE_P		319409	0					
ANR	319555	ArgumentList	op		319409	1					
ANR	319556	Argument	op		319409	0					
ANR	319557	Identifier	op		319409	0					
ANR	319558	ExpressionStatement	zval_ptr_dtor ( op )	178:4:5476:5493	319409	1	True				
ANR	319559	CallExpression	zval_ptr_dtor ( op )		319409	0					
ANR	319560	Callee	zval_ptr_dtor		319409	0					
ANR	319561	Identifier	zval_ptr_dtor		319409	0					
ANR	319562	ArgumentList	op		319409	1					
ANR	319563	Argument	op		319409	0					
ANR	319564	Identifier	op		319409	0					
ANR	319565	ExpressionStatement	"ZVAL_LONG ( op , l )"	179:4:5499:5515	319409	2	True				
ANR	319566	CallExpression	"ZVAL_LONG ( op , l )"		319409	0					
ANR	319567	Callee	ZVAL_LONG		319409	0					
ANR	319568	Identifier	ZVAL_LONG		319409	0					
ANR	319569	ArgumentList	op		319409	1					
ANR	319570	Argument	op		319409	0					
ANR	319571	Identifier	op		319409	0					
ANR	319572	Argument	l		319409	1					
ANR	319573	Identifier	l		319409	0					
ANR	319574	BreakStatement	break ;	181:3:5525:5530	319409	14	True				
ANR	319575	Label	case IS_OBJECT :	182:2:5534:5548	319409	15	True				
ANR	319576	Identifier	IS_OBJECT		319409	0					
ANR	319577	ExpressionStatement	"convert_to_long_base ( op , 10 )"	183:3:5553:5581	319409	16	True				
ANR	319578	CallExpression	"convert_to_long_base ( op , 10 )"		319409	0					
ANR	319579	Callee	convert_to_long_base		319409	0					
ANR	319580	Identifier	convert_to_long_base		319409	0					
ANR	319581	ArgumentList	op		319409	1					
ANR	319582	Argument	op		319409	0					
ANR	319583	Identifier	op		319409	0					
ANR	319584	Argument	10		319409	1					
ANR	319585	PrimaryExpression	10		319409	0					
ANR	319586	BreakStatement	break ;	184:3:5586:5591	319409	17	True				
ANR	319587	ReturnType	ZEND_API void ZEND_FASTCALL		319409	1					
ANR	319588	Identifier	convert_scalar_to_number		319409	2					
ANR	319589	ParameterList	zval * op		319409	3					
ANR	319590	Parameter	zval * op	150:53:4909:4916	319409	0	True				
ANR	319591	ParameterType	zval *		319409	0					
ANR	319592	Identifier	op		319409	1					
ANR	319593	CFGEntryNode	ENTRY		319409		True				
ANR	319594	CFGExitNode	EXIT		319409		True				
ANR	319595	Symbol	str		319409						
ANR	319596	Symbol	Z_RES_HANDLE_P		319409						
ANR	319597	Symbol	op		319409						
ANR	319598	Symbol	is_numeric_string		319409						
ANR	319599	Symbol	ZSTR_LEN		319409						
ANR	319600	Symbol	Z_STR_P		319409						
ANR	319601	Symbol	Z_TYPE_P		319409						
ANR	319602	Symbol	& Z_LVAL_P		319409						
ANR	319603	Symbol	l		319409						
ANR	319604	Symbol	Z_TYPE_INFO_P		319409						
ANR	319605	Symbol	& Z_DVAL_P		319409						
ANR	319606	Symbol	ZSTR_VAL		319409						
ANR	319607	DeclStmt									
ANR	319608	Decl							zval	zval *	newop
ANR	319609	Function	convert_to_long	282:0:8878:9011							
ANR	319610	FunctionDef	convert_to_long (zval * op)		319609	0					
ANR	319611	CompoundStatement		283:0:8942:9011	319609	0					
ANR	319612	IfStatement	if ( Z_TYPE_P ( op ) != IS_LONG )		319609	0					
ANR	319613	Condition	Z_TYPE_P ( op ) != IS_LONG	284:5:8949:8971	319609	0	True				
ANR	319614	EqualityExpression	Z_TYPE_P ( op ) != IS_LONG		319609	0		!=			
ANR	319615	CallExpression	Z_TYPE_P ( op )		319609	0					
ANR	319616	Callee	Z_TYPE_P		319609	0					
ANR	319617	Identifier	Z_TYPE_P		319609	0					
ANR	319618	ArgumentList	op		319609	1					
ANR	319619	Argument	op		319609	0					
ANR	319620	Identifier	op		319609	0					
ANR	319621	Identifier	IS_LONG		319609	1					
ANR	319622	CompoundStatement		2:30:31:31	319609	1					
ANR	319623	ExpressionStatement	"convert_to_long_base ( op , 10 )"	285:2:8978:9006	319609	0	True				
ANR	319624	CallExpression	"convert_to_long_base ( op , 10 )"		319609	0					
ANR	319625	Callee	convert_to_long_base		319609	0					
ANR	319626	Identifier	convert_to_long_base		319609	0					
ANR	319627	ArgumentList	op		319609	1					
ANR	319628	Argument	op		319609	0					
ANR	319629	Identifier	op		319609	0					
ANR	319630	Argument	10		319609	1					
ANR	319631	PrimaryExpression	10		319609	0					
ANR	319632	ReturnType	ZEND_API void ZEND_FASTCALL		319609	1					
ANR	319633	Identifier	convert_to_long		319609	2					
ANR	319634	ParameterList	zval * op		319609	3					
ANR	319635	Parameter	zval * op	282:44:8922:8929	319609	0	True				
ANR	319636	ParameterType	zval *		319609	0					
ANR	319637	Identifier	op		319609	1					
ANR	319638	CFGEntryNode	ENTRY		319609		True				
ANR	319639	CFGExitNode	EXIT		319609		True				
ANR	319640	Symbol	op		319609						
ANR	319641	Symbol	IS_LONG		319609						
ANR	319642	Symbol	Z_TYPE_P		319609						
ANR	319643	Function	convert_to_long_base	290:0:9024:10120							
ANR	319644	FunctionDef	"convert_to_long_base (zval * op , int base)"		319643	0					
ANR	319645	CompoundStatement		291:0:9103:10120	319643	0					
ANR	319646	IdentifierDeclStatement	zend_long tmp ;	292:1:9106:9119	319643	0	True				
ANR	319647	IdentifierDecl	tmp		319643	0					
ANR	319648	IdentifierDeclType	zend_long		319643	0					
ANR	319649	Identifier	tmp		319643	1					
ANR	319650	Label	try_again :	294:0:9122:9131	319643	1	True				
ANR	319651	Identifier	try_again		319643	0					
ANR	319652	SwitchStatement	switch ( Z_TYPE_P ( op ) )		319643	2					
ANR	319653	Condition	Z_TYPE_P ( op )	295:9:9142:9153	319643	0	True				
ANR	319654	CallExpression	Z_TYPE_P ( op )		319643	0					
ANR	319655	Callee	Z_TYPE_P		319643	0					
ANR	319656	Identifier	Z_TYPE_P		319643	0					
ANR	319657	ArgumentList	op		319643	1					
ANR	319658	Argument	op		319643	0					
ANR	319659	Identifier	op		319643	0					
ANR	319660	CompoundStatement		5:23:52:52	319643	1					
ANR	319661	Label	case IS_NULL :	296:2:9160:9172	319643	0	True				
ANR	319662	Identifier	IS_NULL		319643	0					
ANR	319663	Label	case IS_FALSE :	297:2:9176:9189	319643	1	True				
ANR	319664	Identifier	IS_FALSE		319643	0					
ANR	319665	ExpressionStatement	"ZVAL_LONG ( op , 0 )"	298:3:9194:9210	319643	2	True				
ANR	319666	CallExpression	"ZVAL_LONG ( op , 0 )"		319643	0					
ANR	319667	Callee	ZVAL_LONG		319643	0					
ANR	319668	Identifier	ZVAL_LONG		319643	0					
ANR	319669	ArgumentList	op		319643	1					
ANR	319670	Argument	op		319643	0					
ANR	319671	Identifier	op		319643	0					
ANR	319672	Argument	0		319643	1					
ANR	319673	PrimaryExpression	0		319643	0					
ANR	319674	BreakStatement	break ;	299:3:9215:9220	319643	3	True				
ANR	319675	Label	case IS_TRUE :	300:2:9224:9236	319643	4	True				
ANR	319676	Identifier	IS_TRUE		319643	0					
ANR	319677	ExpressionStatement	"ZVAL_LONG ( op , 1 )"	301:3:9241:9257	319643	5	True				
ANR	319678	CallExpression	"ZVAL_LONG ( op , 1 )"		319643	0					
ANR	319679	Callee	ZVAL_LONG		319643	0					
ANR	319680	Identifier	ZVAL_LONG		319643	0					
ANR	319681	ArgumentList	op		319643	1					
ANR	319682	Argument	op		319643	0					
ANR	319683	Identifier	op		319643	0					
ANR	319684	Argument	1		319643	1					
ANR	319685	PrimaryExpression	1		319643	0					
ANR	319686	BreakStatement	break ;	302:3:9262:9267	319643	6	True				
ANR	319687	Label	case IS_RESOURCE :	303:2:9271:9287	319643	7	True				
ANR	319688	Identifier	IS_RESOURCE		319643	0					
ANR	319689	ExpressionStatement	tmp = Z_RES_HANDLE_P ( op )	304:3:9292:9316	319643	8	True				
ANR	319690	AssignmentExpression	tmp = Z_RES_HANDLE_P ( op )		319643	0		=			
ANR	319691	Identifier	tmp		319643	0					
ANR	319692	CallExpression	Z_RES_HANDLE_P ( op )		319643	1					
ANR	319693	Callee	Z_RES_HANDLE_P		319643	0					
ANR	319694	Identifier	Z_RES_HANDLE_P		319643	0					
ANR	319695	ArgumentList	op		319643	1					
ANR	319696	Argument	op		319643	0					
ANR	319697	Identifier	op		319643	0					
ANR	319698	ExpressionStatement	zval_ptr_dtor ( op )	305:3:9321:9338	319643	9	True				
ANR	319699	CallExpression	zval_ptr_dtor ( op )		319643	0					
ANR	319700	Callee	zval_ptr_dtor		319643	0					
ANR	319701	Identifier	zval_ptr_dtor		319643	0					
ANR	319702	ArgumentList	op		319643	1					
ANR	319703	Argument	op		319643	0					
ANR	319704	Identifier	op		319643	0					
ANR	319705	ExpressionStatement	"ZVAL_LONG ( op , tmp )"	306:3:9343:9361	319643	10	True				
ANR	319706	CallExpression	"ZVAL_LONG ( op , tmp )"		319643	0					
ANR	319707	Callee	ZVAL_LONG		319643	0					
ANR	319708	Identifier	ZVAL_LONG		319643	0					
ANR	319709	ArgumentList	op		319643	1					
ANR	319710	Argument	op		319643	0					
ANR	319711	Identifier	op		319643	0					
ANR	319712	Argument	tmp		319643	1					
ANR	319713	Identifier	tmp		319643	0					
ANR	319714	BreakStatement	break ;	307:3:9366:9371	319643	11	True				
ANR	319715	Label	case IS_LONG :	308:2:9375:9387	319643	12	True				
ANR	319716	Identifier	IS_LONG		319643	0					
ANR	319717	BreakStatement	break ;	309:3:9392:9397	319643	13	True				
ANR	319718	Label	case IS_DOUBLE :	310:2:9401:9415	319643	14	True				
ANR	319719	Identifier	IS_DOUBLE		319643	0					
ANR	319720	ExpressionStatement	"ZVAL_LONG ( op , zend_dval_to_lval ( Z_DVAL_P ( op ) ) )"	311:3:9420:9466	319643	15	True				
ANR	319721	CallExpression	"ZVAL_LONG ( op , zend_dval_to_lval ( Z_DVAL_P ( op ) ) )"		319643	0					
ANR	319722	Callee	ZVAL_LONG		319643	0					
ANR	319723	Identifier	ZVAL_LONG		319643	0					
ANR	319724	ArgumentList	op		319643	1					
ANR	319725	Argument	op		319643	0					
ANR	319726	Identifier	op		319643	0					
ANR	319727	Argument	zend_dval_to_lval ( Z_DVAL_P ( op ) )		319643	1					
ANR	319728	CallExpression	zend_dval_to_lval ( Z_DVAL_P ( op ) )		319643	0					
ANR	319729	Callee	zend_dval_to_lval		319643	0					
ANR	319730	Identifier	zend_dval_to_lval		319643	0					
ANR	319731	ArgumentList	Z_DVAL_P ( op )		319643	1					
ANR	319732	Argument	Z_DVAL_P ( op )		319643	0					
ANR	319733	CallExpression	Z_DVAL_P ( op )		319643	0					
ANR	319734	Callee	Z_DVAL_P		319643	0					
ANR	319735	Identifier	Z_DVAL_P		319643	0					
ANR	319736	ArgumentList	op		319643	1					
ANR	319737	Argument	op		319643	0					
ANR	319738	Identifier	op		319643	0					
ANR	319739	BreakStatement	break ;	312:3:9471:9476	319643	16	True				
ANR	319740	Label	case IS_STRING :	313:2:9480:9494	319643	17	True				
ANR	319741	Identifier	IS_STRING		319643	0					
ANR	319742	CompoundStatement		25:4:401:431	319643	18					
ANR	319743	IdentifierDeclStatement	zend_string * str = Z_STR_P ( op ) ;	315:4:9505:9535	319643	0	True				
ANR	319744	IdentifierDecl	* str = Z_STR_P ( op )		319643	0					
ANR	319745	IdentifierDeclType	zend_string *		319643	0					
ANR	319746	Identifier	str		319643	1					
ANR	319747	AssignmentExpression	* str = Z_STR_P ( op )		319643	2		=			
ANR	319748	Identifier	str		319643	0					
ANR	319749	CallExpression	Z_STR_P ( op )		319643	1					
ANR	319750	Callee	Z_STR_P		319643	0					
ANR	319751	Identifier	Z_STR_P		319643	0					
ANR	319752	ArgumentList	op		319643	1					
ANR	319753	Argument	op		319643	0					
ANR	319754	Identifier	op		319643	0					
ANR	319755	ExpressionStatement	"ZVAL_LONG ( op , ZEND_STRTOL ( ZSTR_VAL ( str ) , NULL , base ) )"	317:4:9542:9595	319643	1	True				
ANR	319756	CallExpression	"ZVAL_LONG ( op , ZEND_STRTOL ( ZSTR_VAL ( str ) , NULL , base ) )"		319643	0					
ANR	319757	Callee	ZVAL_LONG		319643	0					
ANR	319758	Identifier	ZVAL_LONG		319643	0					
ANR	319759	ArgumentList	op		319643	1					
ANR	319760	Argument	op		319643	0					
ANR	319761	Identifier	op		319643	0					
ANR	319762	Argument	"ZEND_STRTOL ( ZSTR_VAL ( str ) , NULL , base )"		319643	1					
ANR	319763	CallExpression	"ZEND_STRTOL ( ZSTR_VAL ( str ) , NULL , base )"		319643	0					
ANR	319764	Callee	ZEND_STRTOL		319643	0					
ANR	319765	Identifier	ZEND_STRTOL		319643	0					
ANR	319766	ArgumentList	ZSTR_VAL ( str )		319643	1					
ANR	319767	Argument	ZSTR_VAL ( str )		319643	0					
ANR	319768	CallExpression	ZSTR_VAL ( str )		319643	0					
ANR	319769	Callee	ZSTR_VAL		319643	0					
ANR	319770	Identifier	ZSTR_VAL		319643	0					
ANR	319771	ArgumentList	str		319643	1					
ANR	319772	Argument	str		319643	0					
ANR	319773	Identifier	str		319643	0					
ANR	319774	Argument	NULL		319643	1					
ANR	319775	Identifier	NULL		319643	0					
ANR	319776	Argument	base		319643	2					
ANR	319777	Identifier	base		319643	0					
ANR	319778	ExpressionStatement	zend_string_release ( str )	318:4:9601:9625	319643	2	True				
ANR	319779	CallExpression	zend_string_release ( str )		319643	0					
ANR	319780	Callee	zend_string_release		319643	0					
ANR	319781	Identifier	zend_string_release		319643	0					
ANR	319782	ArgumentList	str		319643	1					
ANR	319783	Argument	str		319643	0					
ANR	319784	Identifier	str		319643	0					
ANR	319785	BreakStatement	break ;	320:3:9635:9640	319643	19	True				
ANR	319786	Label	case IS_ARRAY :	321:2:9644:9657	319643	20	True				
ANR	319787	Identifier	IS_ARRAY		319643	0					
ANR	319788	ExpressionStatement	tmp = ( zend_hash_num_elements ( Z_ARRVAL_P ( op ) ) ? 1 : 0 )	322:3:9662:9712	319643	21	True				
ANR	319789	AssignmentExpression	tmp = ( zend_hash_num_elements ( Z_ARRVAL_P ( op ) ) ? 1 : 0 )		319643	0		=			
ANR	319790	Identifier	tmp		319643	0					
ANR	319791	ConditionalExpression	zend_hash_num_elements ( Z_ARRVAL_P ( op ) ) ? 1 : 0		319643	1					
ANR	319792	Condition	zend_hash_num_elements ( Z_ARRVAL_P ( op ) )		319643	0					
ANR	319793	CallExpression	zend_hash_num_elements ( Z_ARRVAL_P ( op ) )		319643	0					
ANR	319794	Callee	zend_hash_num_elements		319643	0					
ANR	319795	Identifier	zend_hash_num_elements		319643	0					
ANR	319796	ArgumentList	Z_ARRVAL_P ( op )		319643	1					
ANR	319797	Argument	Z_ARRVAL_P ( op )		319643	0					
ANR	319798	CallExpression	Z_ARRVAL_P ( op )		319643	0					
ANR	319799	Callee	Z_ARRVAL_P		319643	0					
ANR	319800	Identifier	Z_ARRVAL_P		319643	0					
ANR	319801	ArgumentList	op		319643	1					
ANR	319802	Argument	op		319643	0					
ANR	319803	Identifier	op		319643	0					
ANR	319804	PrimaryExpression	1		319643	1					
ANR	319805	PrimaryExpression	0		319643	2					
ANR	319806	ExpressionStatement	zval_ptr_dtor ( op )	323:3:9717:9734	319643	22	True				
ANR	319807	CallExpression	zval_ptr_dtor ( op )		319643	0					
ANR	319808	Callee	zval_ptr_dtor		319643	0					
ANR	319809	Identifier	zval_ptr_dtor		319643	0					
ANR	319810	ArgumentList	op		319643	1					
ANR	319811	Argument	op		319643	0					
ANR	319812	Identifier	op		319643	0					
ANR	319813	ExpressionStatement	"ZVAL_LONG ( op , tmp )"	324:3:9739:9757	319643	23	True				
ANR	319814	CallExpression	"ZVAL_LONG ( op , tmp )"		319643	0					
ANR	319815	Callee	ZVAL_LONG		319643	0					
ANR	319816	Identifier	ZVAL_LONG		319643	0					
ANR	319817	ArgumentList	op		319643	1					
ANR	319818	Argument	op		319643	0					
ANR	319819	Identifier	op		319643	0					
ANR	319820	Argument	tmp		319643	1					
ANR	319821	Identifier	tmp		319643	0					
ANR	319822	BreakStatement	break ;	325:3:9762:9767	319643	24	True				
ANR	319823	Label	case IS_OBJECT :	326:2:9771:9785	319643	25	True				
ANR	319824	Identifier	IS_OBJECT		319643	0					
ANR	319825	CompoundStatement		38:4:692:700	319643	26					
ANR	319826	IdentifierDeclStatement	zval dst ;	328:4:9796:9804	319643	0	True				
ANR	319827	IdentifierDecl	dst		319643	0					
ANR	319828	IdentifierDeclType	zval		319643	0					
ANR	319829	Identifier	dst		319643	1					
ANR	319830	ExpressionStatement	"convert_object_to_type ( op , & dst , IS_LONG , convert_to_long )"	330:4:9811:9869	319643	1	True				
ANR	319831	CallExpression	"convert_object_to_type ( op , & dst , IS_LONG , convert_to_long )"		319643	0					
ANR	319832	Callee	convert_object_to_type		319643	0					
ANR	319833	Identifier	convert_object_to_type		319643	0					
ANR	319834	ArgumentList	op		319643	1					
ANR	319835	Argument	op		319643	0					
ANR	319836	Identifier	op		319643	0					
ANR	319837	Argument	& dst		319643	1					
ANR	319838	UnaryOperationExpression	& dst		319643	0					
ANR	319839	UnaryOperator	&		319643	0					
ANR	319840	Identifier	dst		319643	1					
ANR	319841	Argument	IS_LONG		319643	2					
ANR	319842	Identifier	IS_LONG		319643	0					
ANR	319843	Argument	convert_to_long		319643	3					
ANR	319844	Identifier	convert_to_long		319643	0					
ANR	319845	ExpressionStatement	zval_dtor ( op )	331:4:9875:9888	319643	2	True				
ANR	319846	CallExpression	zval_dtor ( op )		319643	0					
ANR	319847	Callee	zval_dtor		319643	0					
ANR	319848	Identifier	zval_dtor		319643	0					
ANR	319849	ArgumentList	op		319643	1					
ANR	319850	Argument	op		319643	0					
ANR	319851	Identifier	op		319643	0					
ANR	319852	IfStatement	if ( Z_TYPE ( dst ) == IS_LONG )		319643	3					
ANR	319853	Condition	Z_TYPE ( dst ) == IS_LONG	333:8:9899:9920	319643	0	True				
ANR	319854	EqualityExpression	Z_TYPE ( dst ) == IS_LONG		319643	0		==			
ANR	319855	CallExpression	Z_TYPE ( dst )		319643	0					
ANR	319856	Callee	Z_TYPE		319643	0					
ANR	319857	Identifier	Z_TYPE		319643	0					
ANR	319858	ArgumentList	dst		319643	1					
ANR	319859	Argument	dst		319643	0					
ANR	319860	Identifier	dst		319643	0					
ANR	319861	Identifier	IS_LONG		319643	1					
ANR	319862	CompoundStatement		43:32:819:819	319643	1					
ANR	319863	ExpressionStatement	"ZVAL_COPY_VALUE ( op , & dst )"	334:5:9930:9955	319643	0	True				
ANR	319864	CallExpression	"ZVAL_COPY_VALUE ( op , & dst )"		319643	0					
ANR	319865	Callee	ZVAL_COPY_VALUE		319643	0					
ANR	319866	Identifier	ZVAL_COPY_VALUE		319643	0					
ANR	319867	ArgumentList	op		319643	1					
ANR	319868	Argument	op		319643	0					
ANR	319869	Identifier	op		319643	0					
ANR	319870	Argument	& dst		319643	1					
ANR	319871	UnaryOperationExpression	& dst		319643	0					
ANR	319872	UnaryOperator	&		319643	0					
ANR	319873	Identifier	dst		319643	1					
ANR	319874	ElseStatement	else		319643	0					
ANR	319875	CompoundStatement		45:11:864:864	319643	0					
ANR	319876	ExpressionStatement	"ZVAL_LONG ( op , 1 )"	337:5:9976:9992	319643	0	True				
ANR	319877	CallExpression	"ZVAL_LONG ( op , 1 )"		319643	0					
ANR	319878	Callee	ZVAL_LONG		319643	0					
ANR	319879	Identifier	ZVAL_LONG		319643	0					
ANR	319880	ArgumentList	op		319643	1					
ANR	319881	Argument	op		319643	0					
ANR	319882	Identifier	op		319643	0					
ANR	319883	Argument	1		319643	1					
ANR	319884	PrimaryExpression	1		319643	0					
ANR	319885	ReturnStatement	return ;	339:4:10004:10010	319643	4	True				
ANR	319886	Label	case IS_REFERENCE :	341:2:10019:10036	319643	27	True				
ANR	319887	Identifier	IS_REFERENCE		319643	0					
ANR	319888	ExpressionStatement	zend_unwrap_reference ( op )	342:3:10041:10066	319643	28	True				
ANR	319889	CallExpression	zend_unwrap_reference ( op )		319643	0					
ANR	319890	Callee	zend_unwrap_reference		319643	0					
ANR	319891	Identifier	zend_unwrap_reference		319643	0					
ANR	319892	ArgumentList	op		319643	1					
ANR	319893	Argument	op		319643	0					
ANR	319894	Identifier	op		319643	0					
ANR	319895	GotoStatement	goto try_again ;	343:3:10071:10085	319643	29	True				
ANR	319896	Identifier	try_again		319643	0					
ANR	319897	Statement	EMPTY_SWITCH_DEFAULT_CASE	344:2:10089:10113	319643	30	True				
ANR	319898	Statement	(	344:27:10114:10114	319643	31	True				
ANR	319899	Statement	)	344:28:10115:10115	319643	32	True				
ANR	319900	ReturnType	ZEND_API void ZEND_FASTCALL		319643	1					
ANR	319901	Identifier	convert_to_long_base		319643	2					
ANR	319902	ParameterList	"zval * op , int base"		319643	3					
ANR	319903	Parameter	zval * op	290:49:9073:9080	319643	0	True				
ANR	319904	ParameterType	zval *		319643	0					
ANR	319905	Identifier	op		319643	1					
ANR	319906	Parameter	int base	290:59:9083:9090	319643	1	True				
ANR	319907	ParameterType	int		319643	0					
ANR	319908	Identifier	base		319643	1					
ANR	319909	CFGEntryNode	ENTRY		319643		True				
ANR	319910	CFGExitNode	EXIT		319643		True				
ANR	319911	Symbol	Z_RES_HANDLE_P		319643						
ANR	319912	Symbol	op		319643						
ANR	319913	Symbol	NULL		319643						
ANR	319914	Symbol	dst		319643						
ANR	319915	Symbol	zend_hash_num_elements		319643						
ANR	319916	Symbol	Z_TYPE		319643						
ANR	319917	Symbol	ZEND_STRTOL		319643						
ANR	319918	Symbol	convert_to_long		319643						
ANR	319919	Symbol	Z_TYPE_P		319643						
ANR	319920	Symbol	& dst		319643						
ANR	319921	Symbol	Z_DVAL_P		319643						
ANR	319922	Symbol	ZSTR_VAL		319643						
ANR	319923	Symbol	zend_dval_to_lval		319643						
ANR	319924	Symbol	str		319643						
ANR	319925	Symbol	tmp		319643						
ANR	319926	Symbol	IS_LONG		319643						
ANR	319927	Symbol	Z_STR_P		319643						
ANR	319928	Symbol	Z_ARRVAL_P		319643						
ANR	319929	Symbol	base		319643						
ANR	319930	Function	convert_to_double	349:0:10133:11243							
ANR	319931	FunctionDef	convert_to_double (zval * op)		319930	0					
ANR	319932	CompoundStatement		350:0:10199:11243	319930	0					
ANR	319933	IdentifierDeclStatement	double tmp ;	351:1:10202:10212	319930	0	True				
ANR	319934	IdentifierDecl	tmp		319930	0					
ANR	319935	IdentifierDeclType	double		319930	0					
ANR	319936	Identifier	tmp		319930	1					
ANR	319937	Label	try_again :	353:0:10215:10224	319930	1	True				
ANR	319938	Identifier	try_again		319930	0					
ANR	319939	SwitchStatement	switch ( Z_TYPE_P ( op ) )		319930	2					
ANR	319940	Condition	Z_TYPE_P ( op )	354:9:10235:10246	319930	0	True				
ANR	319941	CallExpression	Z_TYPE_P ( op )		319930	0					
ANR	319942	Callee	Z_TYPE_P		319930	0					
ANR	319943	Identifier	Z_TYPE_P		319930	0					
ANR	319944	ArgumentList	op		319930	1					
ANR	319945	Argument	op		319930	0					
ANR	319946	Identifier	op		319930	0					
ANR	319947	CompoundStatement		5:23:49:49	319930	1					
ANR	319948	Label	case IS_NULL :	355:2:10253:10265	319930	0	True				
ANR	319949	Identifier	IS_NULL		319930	0					
ANR	319950	Label	case IS_FALSE :	356:2:10269:10282	319930	1	True				
ANR	319951	Identifier	IS_FALSE		319930	0					
ANR	319952	ExpressionStatement	"ZVAL_DOUBLE ( op , 0.0 )"	357:3:10287:10307	319930	2	True				
ANR	319953	CallExpression	"ZVAL_DOUBLE ( op , 0.0 )"		319930	0					
ANR	319954	Callee	ZVAL_DOUBLE		319930	0					
ANR	319955	Identifier	ZVAL_DOUBLE		319930	0					
ANR	319956	ArgumentList	op		319930	1					
ANR	319957	Argument	op		319930	0					
ANR	319958	Identifier	op		319930	0					
ANR	319959	Argument	0.0		319930	1					
ANR	319960	PrimaryExpression	0.0		319930	0					
ANR	319961	BreakStatement	break ;	358:3:10312:10317	319930	3	True				
ANR	319962	Label	case IS_TRUE :	359:2:10321:10333	319930	4	True				
ANR	319963	Identifier	IS_TRUE		319930	0					
ANR	319964	ExpressionStatement	"ZVAL_DOUBLE ( op , 1.0 )"	360:3:10338:10358	319930	5	True				
ANR	319965	CallExpression	"ZVAL_DOUBLE ( op , 1.0 )"		319930	0					
ANR	319966	Callee	ZVAL_DOUBLE		319930	0					
ANR	319967	Identifier	ZVAL_DOUBLE		319930	0					
ANR	319968	ArgumentList	op		319930	1					
ANR	319969	Argument	op		319930	0					
ANR	319970	Identifier	op		319930	0					
ANR	319971	Argument	1.0		319930	1					
ANR	319972	PrimaryExpression	1.0		319930	0					
ANR	319973	BreakStatement	break ;	361:3:10363:10368	319930	6	True				
ANR	319974	Label	case IS_RESOURCE :	362:2:10372:10388	319930	7	True				
ANR	319975	Identifier	IS_RESOURCE		319930	0					
ANR	319976	CompoundStatement		14:4:196:234	319930	8					
ANR	319977	IdentifierDeclStatement	double d = ( double ) Z_RES_HANDLE_P ( op ) ;	363:4:10396:10434	319930	0	True				
ANR	319978	IdentifierDecl	d = ( double ) Z_RES_HANDLE_P ( op )		319930	0					
ANR	319979	IdentifierDeclType	double		319930	0					
ANR	319980	Identifier	d		319930	1					
ANR	319981	AssignmentExpression	d = ( double ) Z_RES_HANDLE_P ( op )		319930	2		=			
ANR	319982	Identifier	d		319930	0					
ANR	319983	CastExpression	( double ) Z_RES_HANDLE_P ( op )		319930	1					
ANR	319984	CastTarget	double		319930	0					
ANR	319985	CallExpression	Z_RES_HANDLE_P ( op )		319930	1					
ANR	319986	Callee	Z_RES_HANDLE_P		319930	0					
ANR	319987	Identifier	Z_RES_HANDLE_P		319930	0					
ANR	319988	ArgumentList	op		319930	1					
ANR	319989	Argument	op		319930	0					
ANR	319990	Identifier	op		319930	0					
ANR	319991	ExpressionStatement	zval_ptr_dtor ( op )	364:4:10440:10457	319930	1	True				
ANR	319992	CallExpression	zval_ptr_dtor ( op )		319930	0					
ANR	319993	Callee	zval_ptr_dtor		319930	0					
ANR	319994	Identifier	zval_ptr_dtor		319930	0					
ANR	319995	ArgumentList	op		319930	1					
ANR	319996	Argument	op		319930	0					
ANR	319997	Identifier	op		319930	0					
ANR	319998	ExpressionStatement	"ZVAL_DOUBLE ( op , d )"	365:4:10463:10481	319930	2	True				
ANR	319999	CallExpression	"ZVAL_DOUBLE ( op , d )"		319930	0					
ANR	320000	Callee	ZVAL_DOUBLE		319930	0					
ANR	320001	Identifier	ZVAL_DOUBLE		319930	0					
ANR	320002	ArgumentList	op		319930	1					
ANR	320003	Argument	op		319930	0					
ANR	320004	Identifier	op		319930	0					
ANR	320005	Argument	d		319930	1					
ANR	320006	Identifier	d		319930	0					
ANR	320007	BreakStatement	break ;	367:3:10491:10496	319930	9	True				
ANR	320008	Label	case IS_LONG :	368:2:10500:10512	319930	10	True				
ANR	320009	Identifier	IS_LONG		319930	0					
ANR	320010	ExpressionStatement	"ZVAL_DOUBLE ( op , ( double ) Z_LVAL_P ( op ) )"	369:3:10517:10555	319930	11	True				
ANR	320011	CallExpression	"ZVAL_DOUBLE ( op , ( double ) Z_LVAL_P ( op ) )"		319930	0					
ANR	320012	Callee	ZVAL_DOUBLE		319930	0					
ANR	320013	Identifier	ZVAL_DOUBLE		319930	0					
ANR	320014	ArgumentList	op		319930	1					
ANR	320015	Argument	op		319930	0					
ANR	320016	Identifier	op		319930	0					
ANR	320017	Argument	( double ) Z_LVAL_P ( op )		319930	1					
ANR	320018	CastExpression	( double ) Z_LVAL_P ( op )		319930	0					
ANR	320019	CastTarget	double		319930	0					
ANR	320020	CallExpression	Z_LVAL_P ( op )		319930	1					
ANR	320021	Callee	Z_LVAL_P		319930	0					
ANR	320022	Identifier	Z_LVAL_P		319930	0					
ANR	320023	ArgumentList	op		319930	1					
ANR	320024	Argument	op		319930	0					
ANR	320025	Identifier	op		319930	0					
ANR	320026	BreakStatement	break ;	370:3:10560:10565	319930	12	True				
ANR	320027	Label	case IS_DOUBLE :	371:2:10569:10583	319930	13	True				
ANR	320028	Identifier	IS_DOUBLE		319930	0					
ANR	320029	BreakStatement	break ;	372:3:10588:10593	319930	14	True				
ANR	320030	Label	case IS_STRING :	373:2:10597:10611	319930	15	True				
ANR	320031	Identifier	IS_STRING		319930	0					
ANR	320032	CompoundStatement		26:4:422:452	319930	16					
ANR	320033	IdentifierDeclStatement	zend_string * str = Z_STR_P ( op ) ;	375:4:10622:10652	319930	0	True				
ANR	320034	IdentifierDecl	* str = Z_STR_P ( op )		319930	0					
ANR	320035	IdentifierDeclType	zend_string *		319930	0					
ANR	320036	Identifier	str		319930	1					
ANR	320037	AssignmentExpression	* str = Z_STR_P ( op )		319930	2		=			
ANR	320038	Identifier	str		319930	0					
ANR	320039	CallExpression	Z_STR_P ( op )		319930	1					
ANR	320040	Callee	Z_STR_P		319930	0					
ANR	320041	Identifier	Z_STR_P		319930	0					
ANR	320042	ArgumentList	op		319930	1					
ANR	320043	Argument	op		319930	0					
ANR	320044	Identifier	op		319930	0					
ANR	320045	ExpressionStatement	"ZVAL_DOUBLE ( op , zend_strtod ( ZSTR_VAL ( str ) , NULL ) )"	377:4:10659:10708	319930	1	True				
ANR	320046	CallExpression	"ZVAL_DOUBLE ( op , zend_strtod ( ZSTR_VAL ( str ) , NULL ) )"		319930	0					
ANR	320047	Callee	ZVAL_DOUBLE		319930	0					
ANR	320048	Identifier	ZVAL_DOUBLE		319930	0					
ANR	320049	ArgumentList	op		319930	1					
ANR	320050	Argument	op		319930	0					
ANR	320051	Identifier	op		319930	0					
ANR	320052	Argument	"zend_strtod ( ZSTR_VAL ( str ) , NULL )"		319930	1					
ANR	320053	CallExpression	"zend_strtod ( ZSTR_VAL ( str ) , NULL )"		319930	0					
ANR	320054	Callee	zend_strtod		319930	0					
ANR	320055	Identifier	zend_strtod		319930	0					
ANR	320056	ArgumentList	ZSTR_VAL ( str )		319930	1					
ANR	320057	Argument	ZSTR_VAL ( str )		319930	0					
ANR	320058	CallExpression	ZSTR_VAL ( str )		319930	0					
ANR	320059	Callee	ZSTR_VAL		319930	0					
ANR	320060	Identifier	ZSTR_VAL		319930	0					
ANR	320061	ArgumentList	str		319930	1					
ANR	320062	Argument	str		319930	0					
ANR	320063	Identifier	str		319930	0					
ANR	320064	Argument	NULL		319930	1					
ANR	320065	Identifier	NULL		319930	0					
ANR	320066	ExpressionStatement	zend_string_release ( str )	378:4:10714:10738	319930	2	True				
ANR	320067	CallExpression	zend_string_release ( str )		319930	0					
ANR	320068	Callee	zend_string_release		319930	0					
ANR	320069	Identifier	zend_string_release		319930	0					
ANR	320070	ArgumentList	str		319930	1					
ANR	320071	Argument	str		319930	0					
ANR	320072	Identifier	str		319930	0					
ANR	320073	BreakStatement	break ;	380:3:10748:10753	319930	17	True				
ANR	320074	Label	case IS_ARRAY :	381:2:10757:10770	319930	18	True				
ANR	320075	Identifier	IS_ARRAY		319930	0					
ANR	320076	ExpressionStatement	tmp = ( zend_hash_num_elements ( Z_ARRVAL_P ( op ) ) ? 1 : 0 )	382:3:10775:10825	319930	19	True				
ANR	320077	AssignmentExpression	tmp = ( zend_hash_num_elements ( Z_ARRVAL_P ( op ) ) ? 1 : 0 )		319930	0		=			
ANR	320078	Identifier	tmp		319930	0					
ANR	320079	ConditionalExpression	zend_hash_num_elements ( Z_ARRVAL_P ( op ) ) ? 1 : 0		319930	1					
ANR	320080	Condition	zend_hash_num_elements ( Z_ARRVAL_P ( op ) )		319930	0					
ANR	320081	CallExpression	zend_hash_num_elements ( Z_ARRVAL_P ( op ) )		319930	0					
ANR	320082	Callee	zend_hash_num_elements		319930	0					
ANR	320083	Identifier	zend_hash_num_elements		319930	0					
ANR	320084	ArgumentList	Z_ARRVAL_P ( op )		319930	1					
ANR	320085	Argument	Z_ARRVAL_P ( op )		319930	0					
ANR	320086	CallExpression	Z_ARRVAL_P ( op )		319930	0					
ANR	320087	Callee	Z_ARRVAL_P		319930	0					
ANR	320088	Identifier	Z_ARRVAL_P		319930	0					
ANR	320089	ArgumentList	op		319930	1					
ANR	320090	Argument	op		319930	0					
ANR	320091	Identifier	op		319930	0					
ANR	320092	PrimaryExpression	1		319930	1					
ANR	320093	PrimaryExpression	0		319930	2					
ANR	320094	ExpressionStatement	zval_ptr_dtor ( op )	383:3:10830:10847	319930	20	True				
ANR	320095	CallExpression	zval_ptr_dtor ( op )		319930	0					
ANR	320096	Callee	zval_ptr_dtor		319930	0					
ANR	320097	Identifier	zval_ptr_dtor		319930	0					
ANR	320098	ArgumentList	op		319930	1					
ANR	320099	Argument	op		319930	0					
ANR	320100	Identifier	op		319930	0					
ANR	320101	ExpressionStatement	"ZVAL_DOUBLE ( op , tmp )"	384:3:10852:10872	319930	21	True				
ANR	320102	CallExpression	"ZVAL_DOUBLE ( op , tmp )"		319930	0					
ANR	320103	Callee	ZVAL_DOUBLE		319930	0					
ANR	320104	Identifier	ZVAL_DOUBLE		319930	0					
ANR	320105	ArgumentList	op		319930	1					
ANR	320106	Argument	op		319930	0					
ANR	320107	Identifier	op		319930	0					
ANR	320108	Argument	tmp		319930	1					
ANR	320109	Identifier	tmp		319930	0					
ANR	320110	BreakStatement	break ;	385:3:10877:10882	319930	22	True				
ANR	320111	Label	case IS_OBJECT :	386:2:10886:10900	319930	23	True				
ANR	320112	Identifier	IS_OBJECT		319930	0					
ANR	320113	CompoundStatement		39:4:711:719	319930	24					
ANR	320114	IdentifierDeclStatement	zval dst ;	388:4:10911:10919	319930	0	True				
ANR	320115	IdentifierDecl	dst		319930	0					
ANR	320116	IdentifierDeclType	zval		319930	0					
ANR	320117	Identifier	dst		319930	1					
ANR	320118	ExpressionStatement	"convert_object_to_type ( op , & dst , IS_DOUBLE , convert_to_double )"	390:4:10926:10988	319930	1	True				
ANR	320119	CallExpression	"convert_object_to_type ( op , & dst , IS_DOUBLE , convert_to_double )"		319930	0					
ANR	320120	Callee	convert_object_to_type		319930	0					
ANR	320121	Identifier	convert_object_to_type		319930	0					
ANR	320122	ArgumentList	op		319930	1					
ANR	320123	Argument	op		319930	0					
ANR	320124	Identifier	op		319930	0					
ANR	320125	Argument	& dst		319930	1					
ANR	320126	UnaryOperationExpression	& dst		319930	0					
ANR	320127	UnaryOperator	&		319930	0					
ANR	320128	Identifier	dst		319930	1					
ANR	320129	Argument	IS_DOUBLE		319930	2					
ANR	320130	Identifier	IS_DOUBLE		319930	0					
ANR	320131	Argument	convert_to_double		319930	3					
ANR	320132	Identifier	convert_to_double		319930	0					
ANR	320133	ExpressionStatement	zval_dtor ( op )	391:4:10994:11007	319930	2	True				
ANR	320134	CallExpression	zval_dtor ( op )		319930	0					
ANR	320135	Callee	zval_dtor		319930	0					
ANR	320136	Identifier	zval_dtor		319930	0					
ANR	320137	ArgumentList	op		319930	1					
ANR	320138	Argument	op		319930	0					
ANR	320139	Identifier	op		319930	0					
ANR	320140	IfStatement	if ( Z_TYPE ( dst ) == IS_DOUBLE )		319930	3					
ANR	320141	Condition	Z_TYPE ( dst ) == IS_DOUBLE	393:8:11018:11041	319930	0	True				
ANR	320142	EqualityExpression	Z_TYPE ( dst ) == IS_DOUBLE		319930	0		==			
ANR	320143	CallExpression	Z_TYPE ( dst )		319930	0					
ANR	320144	Callee	Z_TYPE		319930	0					
ANR	320145	Identifier	Z_TYPE		319930	0					
ANR	320146	ArgumentList	dst		319930	1					
ANR	320147	Argument	dst		319930	0					
ANR	320148	Identifier	dst		319930	0					
ANR	320149	Identifier	IS_DOUBLE		319930	1					
ANR	320150	CompoundStatement		44:34:844:844	319930	1					
ANR	320151	ExpressionStatement	"ZVAL_COPY_VALUE ( op , & dst )"	394:5:11051:11076	319930	0	True				
ANR	320152	CallExpression	"ZVAL_COPY_VALUE ( op , & dst )"		319930	0					
ANR	320153	Callee	ZVAL_COPY_VALUE		319930	0					
ANR	320154	Identifier	ZVAL_COPY_VALUE		319930	0					
ANR	320155	ArgumentList	op		319930	1					
ANR	320156	Argument	op		319930	0					
ANR	320157	Identifier	op		319930	0					
ANR	320158	Argument	& dst		319930	1					
ANR	320159	UnaryOperationExpression	& dst		319930	0					
ANR	320160	UnaryOperator	&		319930	0					
ANR	320161	Identifier	dst		319930	1					
ANR	320162	ElseStatement	else		319930	0					
ANR	320163	CompoundStatement		46:11:889:889	319930	0					
ANR	320164	ExpressionStatement	"ZVAL_DOUBLE ( op , 1.0 )"	396:5:11096:11116	319930	0	True				
ANR	320165	CallExpression	"ZVAL_DOUBLE ( op , 1.0 )"		319930	0					
ANR	320166	Callee	ZVAL_DOUBLE		319930	0					
ANR	320167	Identifier	ZVAL_DOUBLE		319930	0					
ANR	320168	ArgumentList	op		319930	1					
ANR	320169	Argument	op		319930	0					
ANR	320170	Identifier	op		319930	0					
ANR	320171	Argument	1.0		319930	1					
ANR	320172	PrimaryExpression	1.0		319930	0					
ANR	320173	BreakStatement	break ;	398:4:11128:11133	319930	4	True				
ANR	320174	Label	case IS_REFERENCE :	400:2:11142:11159	319930	25	True				
ANR	320175	Identifier	IS_REFERENCE		319930	0					
ANR	320176	ExpressionStatement	zend_unwrap_reference ( op )	401:3:11164:11189	319930	26	True				
ANR	320177	CallExpression	zend_unwrap_reference ( op )		319930	0					
ANR	320178	Callee	zend_unwrap_reference		319930	0					
ANR	320179	Identifier	zend_unwrap_reference		319930	0					
ANR	320180	ArgumentList	op		319930	1					
ANR	320181	Argument	op		319930	0					
ANR	320182	Identifier	op		319930	0					
ANR	320183	GotoStatement	goto try_again ;	402:3:11194:11208	319930	27	True				
ANR	320184	Identifier	try_again		319930	0					
ANR	320185	Statement	EMPTY_SWITCH_DEFAULT_CASE	403:2:11212:11236	319930	28	True				
ANR	320186	Statement	(	403:27:11237:11237	319930	29	True				
ANR	320187	Statement	)	403:28:11238:11238	319930	30	True				
ANR	320188	ReturnType	ZEND_API void ZEND_FASTCALL		319930	1					
ANR	320189	Identifier	convert_to_double		319930	2					
ANR	320190	ParameterList	zval * op		319930	3					
ANR	320191	Parameter	zval * op	349:46:10179:10186	319930	0	True				
ANR	320192	ParameterType	zval *		319930	0					
ANR	320193	Identifier	op		319930	1					
ANR	320194	CFGEntryNode	ENTRY		319930		True				
ANR	320195	CFGExitNode	EXIT		319930		True				
ANR	320196	Symbol	Z_RES_HANDLE_P		319930						
ANR	320197	Symbol	op		319930						
ANR	320198	Symbol	NULL		319930						
ANR	320199	Symbol	d		319930						
ANR	320200	Symbol	dst		319930						
ANR	320201	Symbol	zend_hash_num_elements		319930						
ANR	320202	Symbol	convert_to_double		319930						
ANR	320203	Symbol	Z_TYPE		319930						
ANR	320204	Symbol	Z_TYPE_P		319930						
ANR	320205	Symbol	& dst		319930						
ANR	320206	Symbol	Z_LVAL_P		319930						
ANR	320207	Symbol	zend_strtod		319930						
ANR	320208	Symbol	ZSTR_VAL		319930						
ANR	320209	Symbol	str		319930						
ANR	320210	Symbol	tmp		319930						
ANR	320211	Symbol	IS_DOUBLE		319930						
ANR	320212	Symbol	Z_STR_P		319930						
ANR	320213	Symbol	Z_ARRVAL_P		319930						
ANR	320214	Function	convert_to_null	408:0:11256:11617							
ANR	320215	FunctionDef	convert_to_null (zval * op)		320214	0					
ANR	320216	CompoundStatement		409:0:11320:11617	320214	0					
ANR	320217	IfStatement	if ( Z_TYPE_P ( op ) == IS_OBJECT )		320214	0					
ANR	320218	Condition	Z_TYPE_P ( op ) == IS_OBJECT	410:5:11327:11351	320214	0	True				
ANR	320219	EqualityExpression	Z_TYPE_P ( op ) == IS_OBJECT		320214	0		==			
ANR	320220	CallExpression	Z_TYPE_P ( op )		320214	0					
ANR	320221	Callee	Z_TYPE_P		320214	0					
ANR	320222	Identifier	Z_TYPE_P		320214	0					
ANR	320223	ArgumentList	op		320214	1					
ANR	320224	Argument	op		320214	0					
ANR	320225	Identifier	op		320214	0					
ANR	320226	Identifier	IS_OBJECT		320214	1					
ANR	320227	CompoundStatement		2:32:33:33	320214	1					
ANR	320228	IfStatement	if ( Z_OBJ_HT_P ( op ) -> cast_object )		320214	0					
ANR	320229	Condition	Z_OBJ_HT_P ( op ) -> cast_object	411:6:11362:11388	320214	0	True				
ANR	320230	PtrMemberAccess	Z_OBJ_HT_P ( op ) -> cast_object		320214	0					
ANR	320231	CallExpression	Z_OBJ_HT_P ( op )		320214	0					
ANR	320232	Callee	Z_OBJ_HT_P		320214	0					
ANR	320233	Identifier	Z_OBJ_HT_P		320214	0					
ANR	320234	ArgumentList	op		320214	1					
ANR	320235	Argument	op		320214	0					
ANR	320236	Identifier	op		320214	0					
ANR	320237	Identifier	cast_object		320214	1					
ANR	320238	CompoundStatement		4:3:75:83	320214	1					
ANR	320239	IdentifierDeclStatement	zval org ;	412:3:11396:11404	320214	0	True				
ANR	320240	IdentifierDecl	org		320214	0					
ANR	320241	IdentifierDeclType	zval		320214	0					
ANR	320242	Identifier	org		320214	1					
ANR	320243	ExpressionStatement	"ZVAL_COPY_VALUE ( & org , op )"	414:3:11410:11435	320214	1	True				
ANR	320244	CallExpression	"ZVAL_COPY_VALUE ( & org , op )"		320214	0					
ANR	320245	Callee	ZVAL_COPY_VALUE		320214	0					
ANR	320246	Identifier	ZVAL_COPY_VALUE		320214	0					
ANR	320247	ArgumentList	& org		320214	1					
ANR	320248	Argument	& org		320214	0					
ANR	320249	UnaryOperationExpression	& org		320214	0					
ANR	320250	UnaryOperator	&		320214	0					
ANR	320251	Identifier	org		320214	1					
ANR	320252	Argument	op		320214	1					
ANR	320253	Identifier	op		320214	0					
ANR	320254	IfStatement	"if ( Z_OBJ_HT_P ( op ) -> cast_object ( & org , op , IS_NULL ) == SUCCESS )"		320214	2					
ANR	320255	Condition	"Z_OBJ_HT_P ( op ) -> cast_object ( & org , op , IS_NULL ) == SUCCESS"	415:7:11444:11500	320214	0	True				
ANR	320256	EqualityExpression	"Z_OBJ_HT_P ( op ) -> cast_object ( & org , op , IS_NULL ) == SUCCESS"		320214	0		==			
ANR	320257	CallExpression	"Z_OBJ_HT_P ( op ) -> cast_object ( & org , op , IS_NULL )"		320214	0					
ANR	320258	Callee	Z_OBJ_HT_P ( op ) -> cast_object		320214	0					
ANR	320259	PtrMemberAccess	Z_OBJ_HT_P ( op ) -> cast_object		320214	0					
ANR	320260	CallExpression	Z_OBJ_HT_P ( op )		320214	0					
ANR	320261	Callee	Z_OBJ_HT_P		320214	0					
ANR	320262	Identifier	Z_OBJ_HT_P		320214	0					
ANR	320263	ArgumentList	op		320214	1					
ANR	320264	Argument	op		320214	0					
ANR	320265	Identifier	op		320214	0					
ANR	320266	Identifier	cast_object		320214	1					
ANR	320267	ArgumentList	& org		320214	1					
ANR	320268	Argument	& org		320214	0					
ANR	320269	UnaryOperationExpression	& org		320214	0					
ANR	320270	UnaryOperator	&		320214	0					
ANR	320271	Identifier	org		320214	1					
ANR	320272	Argument	op		320214	1					
ANR	320273	Identifier	op		320214	0					
ANR	320274	Argument	IS_NULL		320214	2					
ANR	320275	Identifier	IS_NULL		320214	0					
ANR	320276	Identifier	SUCCESS		320214	1					
ANR	320277	CompoundStatement		7:66:182:182	320214	1					
ANR	320278	ExpressionStatement	zval_dtor ( & org )	416:4:11509:11524	320214	0	True				
ANR	320279	CallExpression	zval_dtor ( & org )		320214	0					
ANR	320280	Callee	zval_dtor		320214	0					
ANR	320281	Identifier	zval_dtor		320214	0					
ANR	320282	ArgumentList	& org		320214	1					
ANR	320283	Argument	& org		320214	0					
ANR	320284	UnaryOperationExpression	& org		320214	0					
ANR	320285	UnaryOperator	&		320214	0					
ANR	320286	Identifier	org		320214	1					
ANR	320287	ReturnStatement	return ;	417:4:11530:11536	320214	1	True				
ANR	320288	ExpressionStatement	"ZVAL_COPY_VALUE ( op , & org )"	419:3:11546:11571	320214	3	True				
ANR	320289	CallExpression	"ZVAL_COPY_VALUE ( op , & org )"		320214	0					
ANR	320290	Callee	ZVAL_COPY_VALUE		320214	0					
ANR	320291	Identifier	ZVAL_COPY_VALUE		320214	0					
ANR	320292	ArgumentList	op		320214	1					
ANR	320293	Argument	op		320214	0					
ANR	320294	Identifier	op		320214	0					
ANR	320295	Argument	& org		320214	1					
ANR	320296	UnaryOperationExpression	& org		320214	0					
ANR	320297	UnaryOperator	&		320214	0					
ANR	320298	Identifier	org		320214	1					
ANR	320299	ExpressionStatement	zval_ptr_dtor ( op )	423:1:11582:11599	320214	1	True				
ANR	320300	CallExpression	zval_ptr_dtor ( op )		320214	0					
ANR	320301	Callee	zval_ptr_dtor		320214	0					
ANR	320302	Identifier	zval_ptr_dtor		320214	0					
ANR	320303	ArgumentList	op		320214	1					
ANR	320304	Argument	op		320214	0					
ANR	320305	Identifier	op		320214	0					
ANR	320306	ExpressionStatement	ZVAL_NULL ( op )	424:1:11602:11615	320214	2	True				
ANR	320307	CallExpression	ZVAL_NULL ( op )		320214	0					
ANR	320308	Callee	ZVAL_NULL		320214	0					
ANR	320309	Identifier	ZVAL_NULL		320214	0					
ANR	320310	ArgumentList	op		320214	1					
ANR	320311	Argument	op		320214	0					
ANR	320312	Identifier	op		320214	0					
ANR	320313	ReturnType	ZEND_API void ZEND_FASTCALL		320214	1					
ANR	320314	Identifier	convert_to_null		320214	2					
ANR	320315	ParameterList	zval * op		320214	3					
ANR	320316	Parameter	zval * op	408:44:11300:11307	320214	0	True				
ANR	320317	ParameterType	zval *		320214	0					
ANR	320318	Identifier	op		320214	1					
ANR	320319	CFGEntryNode	ENTRY		320214		True				
ANR	320320	CFGExitNode	EXIT		320214		True				
ANR	320321	Symbol	op		320214						
ANR	320322	Symbol	SUCCESS		320214						
ANR	320323	Symbol	IS_NULL		320214						
ANR	320324	Symbol	org		320214						
ANR	320325	Symbol	Z_OBJ_HT_P		320214						
ANR	320326	Symbol	Z_OBJ_HT_P ( op ) -> cast_object		320214						
ANR	320327	Symbol	Z_TYPE_P		320214						
ANR	320328	Symbol	IS_OBJECT		320214						
ANR	320329	Symbol	* Z_OBJ_HT_P		320214						
ANR	320330	Symbol	& org		320214						
ANR	320331	Function	convert_to_boolean	428:0:11630:12854							
ANR	320332	FunctionDef	convert_to_boolean (zval * op)		320331	0					
ANR	320333	CompoundStatement		429:0:11697:12854	320331	0					
ANR	320334	IdentifierDeclStatement	int tmp ;	430:1:11700:11707	320331	0	True				
ANR	320335	IdentifierDecl	tmp		320331	0					
ANR	320336	IdentifierDeclType	int		320331	0					
ANR	320337	Identifier	tmp		320331	1					
ANR	320338	Label	try_again :	432:0:11710:11719	320331	1	True				
ANR	320339	Identifier	try_again		320331	0					
ANR	320340	SwitchStatement	switch ( Z_TYPE_P ( op ) )		320331	2					
ANR	320341	Condition	Z_TYPE_P ( op )	433:9:11730:11741	320331	0	True				
ANR	320342	CallExpression	Z_TYPE_P ( op )		320331	0					
ANR	320343	Callee	Z_TYPE_P		320331	0					
ANR	320344	Identifier	Z_TYPE_P		320331	0					
ANR	320345	ArgumentList	op		320331	1					
ANR	320346	Argument	op		320331	0					
ANR	320347	Identifier	op		320331	0					
ANR	320348	CompoundStatement		5:23:46:46	320331	1					
ANR	320349	Label	case IS_FALSE :	434:2:11748:11761	320331	0	True				
ANR	320350	Identifier	IS_FALSE		320331	0					
ANR	320351	Label	case IS_TRUE :	435:2:11765:11777	320331	1	True				
ANR	320352	Identifier	IS_TRUE		320331	0					
ANR	320353	BreakStatement	break ;	436:3:11782:11787	320331	2	True				
ANR	320354	Label	case IS_NULL :	437:2:11791:11803	320331	3	True				
ANR	320355	Identifier	IS_NULL		320331	0					
ANR	320356	ExpressionStatement	ZVAL_FALSE ( op )	438:3:11808:11822	320331	4	True				
ANR	320357	CallExpression	ZVAL_FALSE ( op )		320331	0					
ANR	320358	Callee	ZVAL_FALSE		320331	0					
ANR	320359	Identifier	ZVAL_FALSE		320331	0					
ANR	320360	ArgumentList	op		320331	1					
ANR	320361	Argument	op		320331	0					
ANR	320362	Identifier	op		320331	0					
ANR	320363	BreakStatement	break ;	439:3:11827:11832	320331	5	True				
ANR	320364	Label	case IS_RESOURCE :	440:2:11836:11852	320331	6	True				
ANR	320365	Identifier	IS_RESOURCE		320331	0					
ANR	320366	CompoundStatement		13:4:162:204	320331	7					
ANR	320367	IdentifierDeclStatement	zend_long l = ( Z_RES_HANDLE_P ( op ) ? 1 : 0 ) ;	441:4:11860:11902	320331	0	True				
ANR	320368	IdentifierDecl	l = ( Z_RES_HANDLE_P ( op ) ? 1 : 0 )		320331	0					
ANR	320369	IdentifierDeclType	zend_long		320331	0					
ANR	320370	Identifier	l		320331	1					
ANR	320371	AssignmentExpression	l = ( Z_RES_HANDLE_P ( op ) ? 1 : 0 )		320331	2		=			
ANR	320372	Identifier	l		320331	0					
ANR	320373	ConditionalExpression	Z_RES_HANDLE_P ( op ) ? 1 : 0		320331	1					
ANR	320374	Condition	Z_RES_HANDLE_P ( op )		320331	0					
ANR	320375	CallExpression	Z_RES_HANDLE_P ( op )		320331	0					
ANR	320376	Callee	Z_RES_HANDLE_P		320331	0					
ANR	320377	Identifier	Z_RES_HANDLE_P		320331	0					
ANR	320378	ArgumentList	op		320331	1					
ANR	320379	Argument	op		320331	0					
ANR	320380	Identifier	op		320331	0					
ANR	320381	PrimaryExpression	1		320331	1					
ANR	320382	PrimaryExpression	0		320331	2					
ANR	320383	ExpressionStatement	zval_ptr_dtor ( op )	443:4:11909:11926	320331	1	True				
ANR	320384	CallExpression	zval_ptr_dtor ( op )		320331	0					
ANR	320385	Callee	zval_ptr_dtor		320331	0					
ANR	320386	Identifier	zval_ptr_dtor		320331	0					
ANR	320387	ArgumentList	op		320331	1					
ANR	320388	Argument	op		320331	0					
ANR	320389	Identifier	op		320331	0					
ANR	320390	ExpressionStatement	"ZVAL_BOOL ( op , l )"	444:4:11932:11948	320331	2	True				
ANR	320391	CallExpression	"ZVAL_BOOL ( op , l )"		320331	0					
ANR	320392	Callee	ZVAL_BOOL		320331	0					
ANR	320393	Identifier	ZVAL_BOOL		320331	0					
ANR	320394	ArgumentList	op		320331	1					
ANR	320395	Argument	op		320331	0					
ANR	320396	Identifier	op		320331	0					
ANR	320397	Argument	l		320331	1					
ANR	320398	Identifier	l		320331	0					
ANR	320399	BreakStatement	break ;	446:3:11958:11963	320331	8	True				
ANR	320400	Label	case IS_LONG :	447:2:11967:11979	320331	9	True				
ANR	320401	Identifier	IS_LONG		320331	0					
ANR	320402	ExpressionStatement	"ZVAL_BOOL ( op , Z_LVAL_P ( op ) ? 1 : 0 )"	448:3:11984:12019	320331	10	True				
ANR	320403	CallExpression	"ZVAL_BOOL ( op , Z_LVAL_P ( op ) ? 1 : 0 )"		320331	0					
ANR	320404	Callee	ZVAL_BOOL		320331	0					
ANR	320405	Identifier	ZVAL_BOOL		320331	0					
ANR	320406	ArgumentList	op		320331	1					
ANR	320407	Argument	op		320331	0					
ANR	320408	Identifier	op		320331	0					
ANR	320409	Argument	Z_LVAL_P ( op ) ? 1 : 0		320331	1					
ANR	320410	ConditionalExpression	Z_LVAL_P ( op ) ? 1 : 0		320331	0					
ANR	320411	Condition	Z_LVAL_P ( op )		320331	0					
ANR	320412	CallExpression	Z_LVAL_P ( op )		320331	0					
ANR	320413	Callee	Z_LVAL_P		320331	0					
ANR	320414	Identifier	Z_LVAL_P		320331	0					
ANR	320415	ArgumentList	op		320331	1					
ANR	320416	Argument	op		320331	0					
ANR	320417	Identifier	op		320331	0					
ANR	320418	PrimaryExpression	1		320331	1					
ANR	320419	PrimaryExpression	0		320331	2					
ANR	320420	BreakStatement	break ;	449:3:12024:12029	320331	11	True				
ANR	320421	Label	case IS_DOUBLE :	450:2:12033:12047	320331	12	True				
ANR	320422	Identifier	IS_DOUBLE		320331	0					
ANR	320423	ExpressionStatement	"ZVAL_BOOL ( op , Z_DVAL_P ( op ) ? 1 : 0 )"	451:3:12052:12087	320331	13	True				
ANR	320424	CallExpression	"ZVAL_BOOL ( op , Z_DVAL_P ( op ) ? 1 : 0 )"		320331	0					
ANR	320425	Callee	ZVAL_BOOL		320331	0					
ANR	320426	Identifier	ZVAL_BOOL		320331	0					
ANR	320427	ArgumentList	op		320331	1					
ANR	320428	Argument	op		320331	0					
ANR	320429	Identifier	op		320331	0					
ANR	320430	Argument	Z_DVAL_P ( op ) ? 1 : 0		320331	1					
ANR	320431	ConditionalExpression	Z_DVAL_P ( op ) ? 1 : 0		320331	0					
ANR	320432	Condition	Z_DVAL_P ( op )		320331	0					
ANR	320433	CallExpression	Z_DVAL_P ( op )		320331	0					
ANR	320434	Callee	Z_DVAL_P		320331	0					
ANR	320435	Identifier	Z_DVAL_P		320331	0					
ANR	320436	ArgumentList	op		320331	1					
ANR	320437	Argument	op		320331	0					
ANR	320438	Identifier	op		320331	0					
ANR	320439	PrimaryExpression	1		320331	1					
ANR	320440	PrimaryExpression	0		320331	2					
ANR	320441	BreakStatement	break ;	452:3:12092:12097	320331	14	True				
ANR	320442	Label	case IS_STRING :	453:2:12101:12115	320331	15	True				
ANR	320443	Identifier	IS_STRING		320331	0					
ANR	320444	CompoundStatement		27:4:428:458	320331	16					
ANR	320445	IdentifierDeclStatement	zend_string * str = Z_STR_P ( op ) ;	455:4:12126:12156	320331	0	True				
ANR	320446	IdentifierDecl	* str = Z_STR_P ( op )		320331	0					
ANR	320447	IdentifierDeclType	zend_string *		320331	0					
ANR	320448	Identifier	str		320331	1					
ANR	320449	AssignmentExpression	* str = Z_STR_P ( op )		320331	2		=			
ANR	320450	Identifier	str		320331	0					
ANR	320451	CallExpression	Z_STR_P ( op )		320331	1					
ANR	320452	Callee	Z_STR_P		320331	0					
ANR	320453	Identifier	Z_STR_P		320331	0					
ANR	320454	ArgumentList	op		320331	1					
ANR	320455	Argument	op		320331	0					
ANR	320456	Identifier	op		320331	0					
ANR	320457	IfStatement	if ( ZSTR_LEN ( str ) == 0 || ( ZSTR_LEN ( str ) == 1 && ZSTR_VAL ( str ) [ 0 ] == '0' ) )		320331	1					
ANR	320458	Condition	ZSTR_LEN ( str ) == 0 || ( ZSTR_LEN ( str ) == 1 && ZSTR_VAL ( str ) [ 0 ] == '0' )	457:8:12167:12240	320331	0	True				
ANR	320459	OrExpression	ZSTR_LEN ( str ) == 0 || ( ZSTR_LEN ( str ) == 1 && ZSTR_VAL ( str ) [ 0 ] == '0' )		320331	0		||			
ANR	320460	EqualityExpression	ZSTR_LEN ( str ) == 0		320331	0		==			
ANR	320461	CallExpression	ZSTR_LEN ( str )		320331	0					
ANR	320462	Callee	ZSTR_LEN		320331	0					
ANR	320463	Identifier	ZSTR_LEN		320331	0					
ANR	320464	ArgumentList	str		320331	1					
ANR	320465	Argument	str		320331	0					
ANR	320466	Identifier	str		320331	0					
ANR	320467	PrimaryExpression	0		320331	1					
ANR	320468	AndExpression	ZSTR_LEN ( str ) == 1 && ZSTR_VAL ( str ) [ 0 ] == '0'		320331	1		&&			
ANR	320469	EqualityExpression	ZSTR_LEN ( str ) == 1		320331	0		==			
ANR	320470	CallExpression	ZSTR_LEN ( str )		320331	0					
ANR	320471	Callee	ZSTR_LEN		320331	0					
ANR	320472	Identifier	ZSTR_LEN		320331	0					
ANR	320473	ArgumentList	str		320331	1					
ANR	320474	Argument	str		320331	0					
ANR	320475	Identifier	str		320331	0					
ANR	320476	PrimaryExpression	1		320331	1					
ANR	320477	EqualityExpression	ZSTR_VAL ( str ) [ 0 ] == '0'		320331	1		==			
ANR	320478	ArrayIndexing	ZSTR_VAL ( str ) [ 0 ]		320331	0					
ANR	320479	CallExpression	ZSTR_VAL ( str )		320331	0					
ANR	320480	Callee	ZSTR_VAL		320331	0					
ANR	320481	Identifier	ZSTR_VAL		320331	0					
ANR	320482	ArgumentList	str		320331	1					
ANR	320483	Argument	str		320331	0					
ANR	320484	Identifier	str		320331	0					
ANR	320485	PrimaryExpression	0		320331	1					
ANR	320486	PrimaryExpression	'0'		320331	1					
ANR	320487	CompoundStatement		30:57:545:545	320331	1					
ANR	320488	ExpressionStatement	ZVAL_FALSE ( op )	459:5:12250:12264	320331	0	True				
ANR	320489	CallExpression	ZVAL_FALSE ( op )		320331	0					
ANR	320490	Callee	ZVAL_FALSE		320331	0					
ANR	320491	Identifier	ZVAL_FALSE		320331	0					
ANR	320492	ArgumentList	op		320331	1					
ANR	320493	Argument	op		320331	0					
ANR	320494	Identifier	op		320331	0					
ANR	320495	ElseStatement	else		320331	0					
ANR	320496	CompoundStatement		32:11:579:579	320331	0					
ANR	320497	ExpressionStatement	ZVAL_TRUE ( op )	461:5:12284:12297	320331	0	True				
ANR	320498	CallExpression	ZVAL_TRUE ( op )		320331	0					
ANR	320499	Callee	ZVAL_TRUE		320331	0					
ANR	320500	Identifier	ZVAL_TRUE		320331	0					
ANR	320501	ArgumentList	op		320331	1					
ANR	320502	Argument	op		320331	0					
ANR	320503	Identifier	op		320331	0					
ANR	320504	ExpressionStatement	zend_string_release ( str )	463:4:12309:12333	320331	2	True				
ANR	320505	CallExpression	zend_string_release ( str )		320331	0					
ANR	320506	Callee	zend_string_release		320331	0					
ANR	320507	Identifier	zend_string_release		320331	0					
ANR	320508	ArgumentList	str		320331	1					
ANR	320509	Argument	str		320331	0					
ANR	320510	Identifier	str		320331	0					
ANR	320511	BreakStatement	break ;	465:3:12343:12348	320331	17	True				
ANR	320512	Label	case IS_ARRAY :	466:2:12352:12365	320331	18	True				
ANR	320513	Identifier	IS_ARRAY		320331	0					
ANR	320514	ExpressionStatement	tmp = ( zend_hash_num_elements ( Z_ARRVAL_P ( op ) ) ? 1 : 0 )	467:3:12370:12420	320331	19	True				
ANR	320515	AssignmentExpression	tmp = ( zend_hash_num_elements ( Z_ARRVAL_P ( op ) ) ? 1 : 0 )		320331	0		=			
ANR	320516	Identifier	tmp		320331	0					
ANR	320517	ConditionalExpression	zend_hash_num_elements ( Z_ARRVAL_P ( op ) ) ? 1 : 0		320331	1					
ANR	320518	Condition	zend_hash_num_elements ( Z_ARRVAL_P ( op ) )		320331	0					
ANR	320519	CallExpression	zend_hash_num_elements ( Z_ARRVAL_P ( op ) )		320331	0					
ANR	320520	Callee	zend_hash_num_elements		320331	0					
ANR	320521	Identifier	zend_hash_num_elements		320331	0					
ANR	320522	ArgumentList	Z_ARRVAL_P ( op )		320331	1					
ANR	320523	Argument	Z_ARRVAL_P ( op )		320331	0					
ANR	320524	CallExpression	Z_ARRVAL_P ( op )		320331	0					
ANR	320525	Callee	Z_ARRVAL_P		320331	0					
ANR	320526	Identifier	Z_ARRVAL_P		320331	0					
ANR	320527	ArgumentList	op		320331	1					
ANR	320528	Argument	op		320331	0					
ANR	320529	Identifier	op		320331	0					
ANR	320530	PrimaryExpression	1		320331	1					
ANR	320531	PrimaryExpression	0		320331	2					
ANR	320532	ExpressionStatement	zval_ptr_dtor ( op )	468:3:12425:12442	320331	20	True				
ANR	320533	CallExpression	zval_ptr_dtor ( op )		320331	0					
ANR	320534	Callee	zval_ptr_dtor		320331	0					
ANR	320535	Identifier	zval_ptr_dtor		320331	0					
ANR	320536	ArgumentList	op		320331	1					
ANR	320537	Argument	op		320331	0					
ANR	320538	Identifier	op		320331	0					
ANR	320539	ExpressionStatement	"ZVAL_BOOL ( op , tmp )"	469:3:12447:12465	320331	21	True				
ANR	320540	CallExpression	"ZVAL_BOOL ( op , tmp )"		320331	0					
ANR	320541	Callee	ZVAL_BOOL		320331	0					
ANR	320542	Identifier	ZVAL_BOOL		320331	0					
ANR	320543	ArgumentList	op		320331	1					
ANR	320544	Argument	op		320331	0					
ANR	320545	Identifier	op		320331	0					
ANR	320546	Argument	tmp		320331	1					
ANR	320547	Identifier	tmp		320331	0					
ANR	320548	BreakStatement	break ;	470:3:12470:12475	320331	22	True				
ANR	320549	Label	case IS_OBJECT :	471:2:12479:12493	320331	23	True				
ANR	320550	Identifier	IS_OBJECT		320331	0					
ANR	320551	CompoundStatement		45:4:806:814	320331	24					
ANR	320552	IdentifierDeclStatement	zval dst ;	473:4:12504:12512	320331	0	True				
ANR	320553	IdentifierDecl	dst		320331	0					
ANR	320554	IdentifierDeclType	zval		320331	0					
ANR	320555	Identifier	dst		320331	1					
ANR	320556	ExpressionStatement	"convert_object_to_type ( op , & dst , _IS_BOOL , convert_to_boolean )"	475:4:12519:12581	320331	1	True				
ANR	320557	CallExpression	"convert_object_to_type ( op , & dst , _IS_BOOL , convert_to_boolean )"		320331	0					
ANR	320558	Callee	convert_object_to_type		320331	0					
ANR	320559	Identifier	convert_object_to_type		320331	0					
ANR	320560	ArgumentList	op		320331	1					
ANR	320561	Argument	op		320331	0					
ANR	320562	Identifier	op		320331	0					
ANR	320563	Argument	& dst		320331	1					
ANR	320564	UnaryOperationExpression	& dst		320331	0					
ANR	320565	UnaryOperator	&		320331	0					
ANR	320566	Identifier	dst		320331	1					
ANR	320567	Argument	_IS_BOOL		320331	2					
ANR	320568	Identifier	_IS_BOOL		320331	0					
ANR	320569	Argument	convert_to_boolean		320331	3					
ANR	320570	Identifier	convert_to_boolean		320331	0					
ANR	320571	ExpressionStatement	zval_dtor ( op )	476:4:12587:12600	320331	2	True				
ANR	320572	CallExpression	zval_dtor ( op )		320331	0					
ANR	320573	Callee	zval_dtor		320331	0					
ANR	320574	Identifier	zval_dtor		320331	0					
ANR	320575	ArgumentList	op		320331	1					
ANR	320576	Argument	op		320331	0					
ANR	320577	Identifier	op		320331	0					
ANR	320578	IfStatement	if ( Z_TYPE ( dst ) == IS_FALSE || Z_TYPE ( dst ) == IS_TRUE )		320331	3					
ANR	320579	Condition	Z_TYPE ( dst ) == IS_FALSE || Z_TYPE ( dst ) == IS_TRUE	478:8:12611:12659	320331	0	True				
ANR	320580	OrExpression	Z_TYPE ( dst ) == IS_FALSE || Z_TYPE ( dst ) == IS_TRUE		320331	0		||			
ANR	320581	EqualityExpression	Z_TYPE ( dst ) == IS_FALSE		320331	0		==			
ANR	320582	CallExpression	Z_TYPE ( dst )		320331	0					
ANR	320583	Callee	Z_TYPE		320331	0					
ANR	320584	Identifier	Z_TYPE		320331	0					
ANR	320585	ArgumentList	dst		320331	1					
ANR	320586	Argument	dst		320331	0					
ANR	320587	Identifier	dst		320331	0					
ANR	320588	Identifier	IS_FALSE		320331	1					
ANR	320589	EqualityExpression	Z_TYPE ( dst ) == IS_TRUE		320331	1		==			
ANR	320590	CallExpression	Z_TYPE ( dst )		320331	0					
ANR	320591	Callee	Z_TYPE		320331	0					
ANR	320592	Identifier	Z_TYPE		320331	0					
ANR	320593	ArgumentList	dst		320331	1					
ANR	320594	Argument	dst		320331	0					
ANR	320595	Identifier	dst		320331	0					
ANR	320596	Identifier	IS_TRUE		320331	1					
ANR	320597	CompoundStatement		50:59:964:964	320331	1					
ANR	320598	ExpressionStatement	"ZVAL_COPY_VALUE ( op , & dst )"	479:5:12669:12694	320331	0	True				
ANR	320599	CallExpression	"ZVAL_COPY_VALUE ( op , & dst )"		320331	0					
ANR	320600	Callee	ZVAL_COPY_VALUE		320331	0					
ANR	320601	Identifier	ZVAL_COPY_VALUE		320331	0					
ANR	320602	ArgumentList	op		320331	1					
ANR	320603	Argument	op		320331	0					
ANR	320604	Identifier	op		320331	0					
ANR	320605	Argument	& dst		320331	1					
ANR	320606	UnaryOperationExpression	& dst		320331	0					
ANR	320607	UnaryOperator	&		320331	0					
ANR	320608	Identifier	dst		320331	1					
ANR	320609	ElseStatement	else		320331	0					
ANR	320610	CompoundStatement		52:11:1009:1009	320331	0					
ANR	320611	ExpressionStatement	ZVAL_TRUE ( op )	481:5:12714:12727	320331	0	True				
ANR	320612	CallExpression	ZVAL_TRUE ( op )		320331	0					
ANR	320613	Callee	ZVAL_TRUE		320331	0					
ANR	320614	Identifier	ZVAL_TRUE		320331	0					
ANR	320615	ArgumentList	op		320331	1					
ANR	320616	Argument	op		320331	0					
ANR	320617	Identifier	op		320331	0					
ANR	320618	BreakStatement	break ;	483:4:12739:12744	320331	4	True				
ANR	320619	Label	case IS_REFERENCE :	485:2:12753:12770	320331	25	True				
ANR	320620	Identifier	IS_REFERENCE		320331	0					
ANR	320621	ExpressionStatement	zend_unwrap_reference ( op )	486:3:12775:12800	320331	26	True				
ANR	320622	CallExpression	zend_unwrap_reference ( op )		320331	0					
ANR	320623	Callee	zend_unwrap_reference		320331	0					
ANR	320624	Identifier	zend_unwrap_reference		320331	0					
ANR	320625	ArgumentList	op		320331	1					
ANR	320626	Argument	op		320331	0					
ANR	320627	Identifier	op		320331	0					
ANR	320628	GotoStatement	goto try_again ;	487:3:12805:12819	320331	27	True				
ANR	320629	Identifier	try_again		320331	0					
ANR	320630	Statement	EMPTY_SWITCH_DEFAULT_CASE	488:2:12823:12847	320331	28	True				
ANR	320631	Statement	(	488:27:12848:12848	320331	29	True				
ANR	320632	Statement	)	488:28:12849:12849	320331	30	True				
ANR	320633	ReturnType	ZEND_API void ZEND_FASTCALL		320331	1					
ANR	320634	Identifier	convert_to_boolean		320331	2					
ANR	320635	ParameterList	zval * op		320331	3					
ANR	320636	Parameter	zval * op	428:47:11677:11684	320331	0	True				
ANR	320637	ParameterType	zval *		320331	0					
ANR	320638	Identifier	op		320331	1					
ANR	320639	CFGEntryNode	ENTRY		320331		True				
ANR	320640	CFGExitNode	EXIT		320331		True				
ANR	320641	Symbol	Z_RES_HANDLE_P		320331						
ANR	320642	Symbol	op		320331						
ANR	320643	Symbol	dst		320331						
ANR	320644	Symbol	zend_hash_num_elements		320331						
ANR	320645	Symbol	convert_to_boolean		320331						
ANR	320646	Symbol	IS_TRUE		320331						
ANR	320647	Symbol	Z_TYPE		320331						
ANR	320648	Symbol	Z_TYPE_P		320331						
ANR	320649	Symbol	l		320331						
ANR	320650	Symbol	& dst		320331						
ANR	320651	Symbol	Z_DVAL_P		320331						
ANR	320652	Symbol	Z_LVAL_P		320331						
ANR	320653	Symbol	ZSTR_VAL		320331						
ANR	320654	Symbol	str		320331						
ANR	320655	Symbol	_IS_BOOL		320331						
ANR	320656	Symbol	tmp		320331						
ANR	320657	Symbol	ZSTR_LEN		320331						
ANR	320658	Symbol	Z_STR_P		320331						
ANR	320659	Symbol	Z_ARRVAL_P		320331						
ANR	320660	Symbol	IS_FALSE		320331						
ANR	320661	Symbol	* ZSTR_VAL		320331						
ANR	320662	DeclStmt									
ANR	320663	Decl							zend_string	zend_string *	str
ANR	320664	DeclStmt									
ANR	320665	Decl							double	double	dval
ANR	320666	DeclStmt									
ANR	320667	Decl							char	"char [ sizeof ( ""Resource id #"" ) + MAX_LENGTH_OF_LONG ]"	buf
ANR	320668	DeclStmt									
ANR	320669	Decl							int	int	len
ANR	320670	DeclStmt									
ANR	320671	Decl							zend_string	zend_string *	str
ANR	320672	DeclStmt									
ANR	320673	Decl							double	double	dval
ANR	320674	DeclStmt									
ANR	320675	Decl							zval	zval	dst
ANR	320676	Function	convert_scalar_to_array	572:0:14819:15054							
ANR	320677	FunctionDef	convert_scalar_to_array (zval * op)		320676	0					
ANR	320678	CompoundStatement		573:0:14875:15054	320676	0					
ANR	320679	IdentifierDeclStatement	zval entry ;	574:1:14878:14888	320676	0	True				
ANR	320680	IdentifierDecl	entry		320676	0					
ANR	320681	IdentifierDeclType	zval		320676	0					
ANR	320682	Identifier	entry		320676	1					
ANR	320683	ExpressionStatement	"ZVAL_COPY_VALUE ( & entry , op )"	576:1:14892:14919	320676	1	True				
ANR	320684	CallExpression	"ZVAL_COPY_VALUE ( & entry , op )"		320676	0					
ANR	320685	Callee	ZVAL_COPY_VALUE		320676	0					
ANR	320686	Identifier	ZVAL_COPY_VALUE		320676	0					
ANR	320687	ArgumentList	& entry		320676	1					
ANR	320688	Argument	& entry		320676	0					
ANR	320689	UnaryOperationExpression	& entry		320676	0					
ANR	320690	UnaryOperator	&		320676	0					
ANR	320691	Identifier	entry		320676	1					
ANR	320692	Argument	op		320676	1					
ANR	320693	Identifier	op		320676	0					
ANR	320694	ExpressionStatement	ZVAL_NEW_ARR ( op )	578:1:14923:14939	320676	2	True				
ANR	320695	CallExpression	ZVAL_NEW_ARR ( op )		320676	0					
ANR	320696	Callee	ZVAL_NEW_ARR		320676	0					
ANR	320697	Identifier	ZVAL_NEW_ARR		320676	0					
ANR	320698	ArgumentList	op		320676	1					
ANR	320699	Argument	op		320676	0					
ANR	320700	Identifier	op		320676	0					
ANR	320701	ExpressionStatement	"zend_hash_init ( Z_ARRVAL_P ( op ) , 8 , NULL , ZVAL_PTR_DTOR , 0 )"	579:1:14942:14999	320676	3	True				
ANR	320702	CallExpression	"zend_hash_init ( Z_ARRVAL_P ( op ) , 8 , NULL , ZVAL_PTR_DTOR , 0 )"		320676	0					
ANR	320703	Callee	zend_hash_init		320676	0					
ANR	320704	Identifier	zend_hash_init		320676	0					
ANR	320705	ArgumentList	Z_ARRVAL_P ( op )		320676	1					
ANR	320706	Argument	Z_ARRVAL_P ( op )		320676	0					
ANR	320707	CallExpression	Z_ARRVAL_P ( op )		320676	0					
ANR	320708	Callee	Z_ARRVAL_P		320676	0					
ANR	320709	Identifier	Z_ARRVAL_P		320676	0					
ANR	320710	ArgumentList	op		320676	1					
ANR	320711	Argument	op		320676	0					
ANR	320712	Identifier	op		320676	0					
ANR	320713	Argument	8		320676	1					
ANR	320714	PrimaryExpression	8		320676	0					
ANR	320715	Argument	NULL		320676	2					
ANR	320716	Identifier	NULL		320676	0					
ANR	320717	Argument	ZVAL_PTR_DTOR		320676	3					
ANR	320718	Identifier	ZVAL_PTR_DTOR		320676	0					
ANR	320719	Argument	0		320676	4					
ANR	320720	PrimaryExpression	0		320676	0					
ANR	320721	ExpressionStatement	"zend_hash_index_add_new ( Z_ARRVAL_P ( op ) , 0 , & entry )"	580:1:15002:15052	320676	4	True				
ANR	320722	CallExpression	"zend_hash_index_add_new ( Z_ARRVAL_P ( op ) , 0 , & entry )"		320676	0					
ANR	320723	Callee	zend_hash_index_add_new		320676	0					
ANR	320724	Identifier	zend_hash_index_add_new		320676	0					
ANR	320725	ArgumentList	Z_ARRVAL_P ( op )		320676	1					
ANR	320726	Argument	Z_ARRVAL_P ( op )		320676	0					
ANR	320727	CallExpression	Z_ARRVAL_P ( op )		320676	0					
ANR	320728	Callee	Z_ARRVAL_P		320676	0					
ANR	320729	Identifier	Z_ARRVAL_P		320676	0					
ANR	320730	ArgumentList	op		320676	1					
ANR	320731	Argument	op		320676	0					
ANR	320732	Identifier	op		320676	0					
ANR	320733	Argument	0		320676	1					
ANR	320734	PrimaryExpression	0		320676	0					
ANR	320735	Argument	& entry		320676	2					
ANR	320736	UnaryOperationExpression	& entry		320676	0					
ANR	320737	UnaryOperator	&		320676	0					
ANR	320738	Identifier	entry		320676	1					
ANR	320739	ReturnType	static void		320676	1					
ANR	320740	Identifier	convert_scalar_to_array		320676	2					
ANR	320741	ParameterList	zval * op		320676	3					
ANR	320742	Parameter	zval * op	572:36:14855:14862	320676	0	True				
ANR	320743	ParameterType	zval *		320676	0					
ANR	320744	Identifier	op		320676	1					
ANR	320745	CFGEntryNode	ENTRY		320676		True				
ANR	320746	CFGExitNode	EXIT		320676		True				
ANR	320747	Symbol	op		320676						
ANR	320748	Symbol	entry		320676						
ANR	320749	Symbol	& entry		320676						
ANR	320750	Symbol	NULL		320676						
ANR	320751	Symbol	Z_ARRVAL_P		320676						
ANR	320752	Symbol	ZVAL_PTR_DTOR		320676						
ANR	320753	Function	convert_to_array	584:0:15067:16602							
ANR	320754	FunctionDef	convert_to_array (zval * op)		320753	0					
ANR	320755	CompoundStatement		585:0:15132:16602	320753	0					
ANR	320756	Label	try_again :	586:0:15134:15143	320753	0	True				
ANR	320757	Identifier	try_again		320753	0					
ANR	320758	SwitchStatement	switch ( Z_TYPE_P ( op ) )		320753	1					
ANR	320759	Condition	Z_TYPE_P ( op )	587:9:15154:15165	320753	0	True				
ANR	320760	CallExpression	Z_TYPE_P ( op )		320753	0					
ANR	320761	Callee	Z_TYPE_P		320753	0					
ANR	320762	Identifier	Z_TYPE_P		320753	0					
ANR	320763	ArgumentList	op		320753	1					
ANR	320764	Argument	op		320753	0					
ANR	320765	Identifier	op		320753	0					
ANR	320766	CompoundStatement		3:23:35:35	320753	1					
ANR	320767	Label	case IS_ARRAY :	588:2:15172:15185	320753	0	True				
ANR	320768	Identifier	IS_ARRAY		320753	0					
ANR	320769	BreakStatement	break ;	589:3:15190:15195	320753	1	True				
ANR	320770	Label	case IS_OBJECT :	591:2:15222:15236	320753	2	True				
ANR	320771	Identifier	IS_OBJECT		320753	0					
ANR	320772	IfStatement	if ( Z_OBJCE_P ( op ) == zend_ce_closure )		320753	3					
ANR	320773	Condition	Z_OBJCE_P ( op ) == zend_ce_closure	592:7:15245:15276	320753	0	True				
ANR	320774	EqualityExpression	Z_OBJCE_P ( op ) == zend_ce_closure		320753	0		==			
ANR	320775	CallExpression	Z_OBJCE_P ( op )		320753	0					
ANR	320776	Callee	Z_OBJCE_P		320753	0					
ANR	320777	Identifier	Z_OBJCE_P		320753	0					
ANR	320778	ArgumentList	op		320753	1					
ANR	320779	Argument	op		320753	0					
ANR	320780	Identifier	op		320753	0					
ANR	320781	Identifier	zend_ce_closure		320753	1					
ANR	320782	CompoundStatement		8:41:146:146	320753	1					
ANR	320783	ExpressionStatement	convert_scalar_to_array ( op )	593:4:15285:15312	320753	0	True				
ANR	320784	CallExpression	convert_scalar_to_array ( op )		320753	0					
ANR	320785	Callee	convert_scalar_to_array		320753	0					
ANR	320786	Identifier	convert_scalar_to_array		320753	0					
ANR	320787	ArgumentList	op		320753	1					
ANR	320788	Argument	op		320753	0					
ANR	320789	Identifier	op		320753	0					
ANR	320790	ElseStatement	else		320753	0					
ANR	320791	CompoundStatement		10:10:191:191	320753	0					
ANR	320792	IfStatement	if ( Z_OBJ_HT_P ( op ) -> get_properties )		320753	0					
ANR	320793	Condition	Z_OBJ_HT_P ( op ) -> get_properties	595:8:15334:15363	320753	0	True				
ANR	320794	PtrMemberAccess	Z_OBJ_HT_P ( op ) -> get_properties		320753	0					
ANR	320795	CallExpression	Z_OBJ_HT_P ( op )		320753	0					
ANR	320796	Callee	Z_OBJ_HT_P		320753	0					
ANR	320797	Identifier	Z_OBJ_HT_P		320753	0					
ANR	320798	ArgumentList	op		320753	1					
ANR	320799	Argument	op		320753	0					
ANR	320800	Identifier	op		320753	0					
ANR	320801	Identifier	get_properties		320753	1					
ANR	320802	CompoundStatement		12:5:240:294	320753	1					
ANR	320803	IdentifierDeclStatement	HashTable * obj_ht = Z_OBJ_HT_P ( op ) -> get_properties ( op ) ;	596:5:15373:15427	320753	0	True				
ANR	320804	IdentifierDecl	* obj_ht = Z_OBJ_HT_P ( op ) -> get_properties ( op )		320753	0					
ANR	320805	IdentifierDeclType	HashTable *		320753	0					
ANR	320806	Identifier	obj_ht		320753	1					
ANR	320807	AssignmentExpression	* obj_ht = Z_OBJ_HT_P ( op ) -> get_properties ( op )		320753	2		=			
ANR	320808	Identifier	obj_ht		320753	0					
ANR	320809	CallExpression	Z_OBJ_HT_P ( op ) -> get_properties ( op )		320753	1					
ANR	320810	Callee	Z_OBJ_HT_P ( op ) -> get_properties		320753	0					
ANR	320811	PtrMemberAccess	Z_OBJ_HT_P ( op ) -> get_properties		320753	0					
ANR	320812	CallExpression	Z_OBJ_HT_P ( op )		320753	0					
ANR	320813	Callee	Z_OBJ_HT_P		320753	0					
ANR	320814	Identifier	Z_OBJ_HT_P		320753	0					
ANR	320815	ArgumentList	op		320753	1					
ANR	320816	Argument	op		320753	0					
ANR	320817	Identifier	op		320753	0					
ANR	320818	Identifier	get_properties		320753	1					
ANR	320819	ArgumentList	op		320753	1					
ANR	320820	Argument	op		320753	0					
ANR	320821	Identifier	op		320753	0					
ANR	320822	IfStatement	if ( obj_ht )		320753	1					
ANR	320823	Condition	obj_ht	597:9:15438:15443	320753	0	True				
ANR	320824	Identifier	obj_ht		320753	0					
ANR	320825	CompoundStatement		14:6:321:329	320753	1					
ANR	320826	IdentifierDeclStatement	zval arr ;	598:6:15454:15462	320753	0	True				
ANR	320827	IdentifierDecl	arr		320753	0					
ANR	320828	IdentifierDeclType	zval		320753	0					
ANR	320829	Identifier	arr		320753	1					
ANR	320830	IfStatement	if ( ! Z_OBJCE_P ( op ) -> default_properties_count && obj_ht == Z_OBJ_P ( op ) -> properties )		320753	1					
ANR	320831	Condition	! Z_OBJCE_P ( op ) -> default_properties_count && obj_ht == Z_OBJ_P ( op ) -> properties	600:10:15475:15551	320753	0	True				
ANR	320832	AndExpression	! Z_OBJCE_P ( op ) -> default_properties_count && obj_ht == Z_OBJ_P ( op ) -> properties		320753	0		&&			
ANR	320833	UnaryOperationExpression	! Z_OBJCE_P ( op ) -> default_properties_count		320753	0					
ANR	320834	UnaryOperator	!		320753	0					
ANR	320835	PtrMemberAccess	Z_OBJCE_P ( op ) -> default_properties_count		320753	1					
ANR	320836	CallExpression	Z_OBJCE_P ( op )		320753	0					
ANR	320837	Callee	Z_OBJCE_P		320753	0					
ANR	320838	Identifier	Z_OBJCE_P		320753	0					
ANR	320839	ArgumentList	op		320753	1					
ANR	320840	Argument	op		320753	0					
ANR	320841	Identifier	op		320753	0					
ANR	320842	Identifier	default_properties_count		320753	1					
ANR	320843	EqualityExpression	obj_ht == Z_OBJ_P ( op ) -> properties		320753	1		==			
ANR	320844	Identifier	obj_ht		320753	0					
ANR	320845	PtrMemberAccess	Z_OBJ_P ( op ) -> properties		320753	1					
ANR	320846	CallExpression	Z_OBJ_P ( op )		320753	0					
ANR	320847	Callee	Z_OBJ_P		320753	0					
ANR	320848	Identifier	Z_OBJ_P		320753	0					
ANR	320849	ArgumentList	op		320753	1					
ANR	320850	Argument	op		320753	0					
ANR	320851	Identifier	op		320753	0					
ANR	320852	Identifier	properties		320753	1					
ANR	320853	CompoundStatement		16:89:421:421	320753	1					
ANR	320854	IfStatement	if ( EXPECTED ( Z_OBJ_P ( op ) -> handlers == & std_object_handlers ) )		320753	0					
ANR	320855	Condition	EXPECTED ( Z_OBJ_P ( op ) -> handlers == & std_object_handlers )	602:11:15590:15644	320753	0	True				
ANR	320856	CallExpression	EXPECTED ( Z_OBJ_P ( op ) -> handlers == & std_object_handlers )		320753	0					
ANR	320857	Callee	EXPECTED		320753	0					
ANR	320858	Identifier	EXPECTED		320753	0					
ANR	320859	ArgumentList	Z_OBJ_P ( op ) -> handlers == & std_object_handlers		320753	1					
ANR	320860	Argument	Z_OBJ_P ( op ) -> handlers == & std_object_handlers		320753	0					
ANR	320861	EqualityExpression	Z_OBJ_P ( op ) -> handlers == & std_object_handlers		320753	0		==			
ANR	320862	PtrMemberAccess	Z_OBJ_P ( op ) -> handlers		320753	0					
ANR	320863	CallExpression	Z_OBJ_P ( op )		320753	0					
ANR	320864	Callee	Z_OBJ_P		320753	0					
ANR	320865	Identifier	Z_OBJ_P		320753	0					
ANR	320866	ArgumentList	op		320753	1					
ANR	320867	Argument	op		320753	0					
ANR	320868	Identifier	op		320753	0					
ANR	320869	Identifier	handlers		320753	1					
ANR	320870	UnaryOperationExpression	& std_object_handlers		320753	1					
ANR	320871	UnaryOperator	&		320753	0					
ANR	320872	Identifier	std_object_handlers		320753	1					
ANR	320873	CompoundStatement		18:68:514:514	320753	1					
ANR	320874	ExpressionStatement	"ZVAL_ARR ( & arr , obj_ht )"	603:8:15657:15679	320753	0	True				
ANR	320875	CallExpression	"ZVAL_ARR ( & arr , obj_ht )"		320753	0					
ANR	320876	Callee	ZVAL_ARR		320753	0					
ANR	320877	Identifier	ZVAL_ARR		320753	0					
ANR	320878	ArgumentList	& arr		320753	1					
ANR	320879	Argument	& arr		320753	0					
ANR	320880	UnaryOperationExpression	& arr		320753	0					
ANR	320881	UnaryOperator	&		320753	0					
ANR	320882	Identifier	arr		320753	1					
ANR	320883	Argument	obj_ht		320753	1					
ANR	320884	Identifier	obj_ht		320753	0					
ANR	320885	IfStatement	if ( EXPECTED ( ! ( GC_FLAGS ( Z_OBJ_P ( op ) -> properties ) & IS_ARRAY_IMMUTABLE ) ) )		320753	1					
ANR	320886	Condition	EXPECTED ( ! ( GC_FLAGS ( Z_OBJ_P ( op ) -> properties ) & IS_ARRAY_IMMUTABLE ) )	604:12:15693:15759	320753	0	True				
ANR	320887	CallExpression	EXPECTED ( ! ( GC_FLAGS ( Z_OBJ_P ( op ) -> properties ) & IS_ARRAY_IMMUTABLE ) )		320753	0					
ANR	320888	Callee	EXPECTED		320753	0					
ANR	320889	Identifier	EXPECTED		320753	0					
ANR	320890	ArgumentList	! ( GC_FLAGS ( Z_OBJ_P ( op ) -> properties ) & IS_ARRAY_IMMUTABLE )		320753	1					
ANR	320891	Argument	! ( GC_FLAGS ( Z_OBJ_P ( op ) -> properties ) & IS_ARRAY_IMMUTABLE )		320753	0					
ANR	320892	UnaryOperationExpression	! ( GC_FLAGS ( Z_OBJ_P ( op ) -> properties ) & IS_ARRAY_IMMUTABLE )		320753	0					
ANR	320893	UnaryOperator	!		320753	0					
ANR	320894	BitAndExpression	GC_FLAGS ( Z_OBJ_P ( op ) -> properties ) & IS_ARRAY_IMMUTABLE		320753	1		&			
ANR	320895	CallExpression	GC_FLAGS ( Z_OBJ_P ( op ) -> properties )		320753	0					
ANR	320896	Callee	GC_FLAGS		320753	0					
ANR	320897	Identifier	GC_FLAGS		320753	0					
ANR	320898	ArgumentList	Z_OBJ_P ( op ) -> properties		320753	1					
ANR	320899	Argument	Z_OBJ_P ( op ) -> properties		320753	0					
ANR	320900	PtrMemberAccess	Z_OBJ_P ( op ) -> properties		320753	0					
ANR	320901	CallExpression	Z_OBJ_P ( op )		320753	0					
ANR	320902	Callee	Z_OBJ_P		320753	0					
ANR	320903	Identifier	Z_OBJ_P		320753	0					
ANR	320904	ArgumentList	op		320753	1					
ANR	320905	Argument	op		320753	0					
ANR	320906	Identifier	op		320753	0					
ANR	320907	Identifier	properties		320753	1					
ANR	320908	Identifier	IS_ARRAY_IMMUTABLE		320753	1					
ANR	320909	CompoundStatement		20:81:629:629	320753	1					
ANR	320910	ExpressionStatement	GC_REFCOUNT ( Z_OBJ_P ( op ) -> properties ) ++	605:9:15773:15811	320753	0	True				
ANR	320911	PostIncDecOperationExpression	GC_REFCOUNT ( Z_OBJ_P ( op ) -> properties ) ++		320753	0					
ANR	320912	CallExpression	GC_REFCOUNT ( Z_OBJ_P ( op ) -> properties )		320753	0					
ANR	320913	Callee	GC_REFCOUNT		320753	0					
ANR	320914	Identifier	GC_REFCOUNT		320753	0					
ANR	320915	ArgumentList	Z_OBJ_P ( op ) -> properties		320753	1					
ANR	320916	Argument	Z_OBJ_P ( op ) -> properties		320753	0					
ANR	320917	PtrMemberAccess	Z_OBJ_P ( op ) -> properties		320753	0					
ANR	320918	CallExpression	Z_OBJ_P ( op )		320753	0					
ANR	320919	Callee	Z_OBJ_P		320753	0					
ANR	320920	Identifier	Z_OBJ_P		320753	0					
ANR	320921	ArgumentList	op		320753	1					
ANR	320922	Argument	op		320753	0					
ANR	320923	Identifier	op		320753	0					
ANR	320924	Identifier	properties		320753	1					
ANR	320925	IncDec	++		320753	1					
ANR	320926	ElseStatement	else		320753	0					
ANR	320927	CompoundStatement		23:14:704:704	320753	0					
ANR	320928	ExpressionStatement	"ZVAL_ARR ( & arr , zend_array_dup ( obj_ht ) )"	608:8:15847:15885	320753	0	True				
ANR	320929	CallExpression	"ZVAL_ARR ( & arr , zend_array_dup ( obj_ht ) )"		320753	0					
ANR	320930	Callee	ZVAL_ARR		320753	0					
ANR	320931	Identifier	ZVAL_ARR		320753	0					
ANR	320932	ArgumentList	& arr		320753	1					
ANR	320933	Argument	& arr		320753	0					
ANR	320934	UnaryOperationExpression	& arr		320753	0					
ANR	320935	UnaryOperator	&		320753	0					
ANR	320936	Identifier	arr		320753	1					
ANR	320937	Argument	zend_array_dup ( obj_ht )		320753	1					
ANR	320938	CallExpression	zend_array_dup ( obj_ht )		320753	0					
ANR	320939	Callee	zend_array_dup		320753	0					
ANR	320940	Identifier	zend_array_dup		320753	0					
ANR	320941	ArgumentList	obj_ht		320753	1					
ANR	320942	Argument	obj_ht		320753	0					
ANR	320943	Identifier	obj_ht		320753	0					
ANR	320944	ExpressionStatement	zval_dtor ( op )	610:7:15903:15916	320753	1	True				
ANR	320945	CallExpression	zval_dtor ( op )		320753	0					
ANR	320946	Callee	zval_dtor		320753	0					
ANR	320947	Identifier	zval_dtor		320753	0					
ANR	320948	ArgumentList	op		320753	1					
ANR	320949	Argument	op		320753	0					
ANR	320950	Identifier	op		320753	0					
ANR	320951	ExpressionStatement	"ZVAL_COPY_VALUE ( op , & arr )"	611:7:15925:15950	320753	2	True				
ANR	320952	CallExpression	"ZVAL_COPY_VALUE ( op , & arr )"		320753	0					
ANR	320953	Callee	ZVAL_COPY_VALUE		320753	0					
ANR	320954	Identifier	ZVAL_COPY_VALUE		320753	0					
ANR	320955	ArgumentList	op		320753	1					
ANR	320956	Argument	op		320753	0					
ANR	320957	Identifier	op		320753	0					
ANR	320958	Argument	& arr		320753	1					
ANR	320959	UnaryOperationExpression	& arr		320753	0					
ANR	320960	UnaryOperator	&		320753	0					
ANR	320961	Identifier	arr		320753	1					
ANR	320962	ElseStatement	else		320753	0					
ANR	320963	CompoundStatement		28:13:832:832	320753	0					
ANR	320964	ExpressionStatement	"ZVAL_ARR ( & arr , zend_array_dup ( obj_ht ) )"	613:7:15974:16012	320753	0	True				
ANR	320965	CallExpression	"ZVAL_ARR ( & arr , zend_array_dup ( obj_ht ) )"		320753	0					
ANR	320966	Callee	ZVAL_ARR		320753	0					
ANR	320967	Identifier	ZVAL_ARR		320753	0					
ANR	320968	ArgumentList	& arr		320753	1					
ANR	320969	Argument	& arr		320753	0					
ANR	320970	UnaryOperationExpression	& arr		320753	0					
ANR	320971	UnaryOperator	&		320753	0					
ANR	320972	Identifier	arr		320753	1					
ANR	320973	Argument	zend_array_dup ( obj_ht )		320753	1					
ANR	320974	CallExpression	zend_array_dup ( obj_ht )		320753	0					
ANR	320975	Callee	zend_array_dup		320753	0					
ANR	320976	Identifier	zend_array_dup		320753	0					
ANR	320977	ArgumentList	obj_ht		320753	1					
ANR	320978	Argument	obj_ht		320753	0					
ANR	320979	Identifier	obj_ht		320753	0					
ANR	320980	ExpressionStatement	zval_dtor ( op )	614:7:16021:16034	320753	1	True				
ANR	320981	CallExpression	zval_dtor ( op )		320753	0					
ANR	320982	Callee	zval_dtor		320753	0					
ANR	320983	Identifier	zval_dtor		320753	0					
ANR	320984	ArgumentList	op		320753	1					
ANR	320985	Argument	op		320753	0					
ANR	320986	Identifier	op		320753	0					
ANR	320987	ExpressionStatement	"ZVAL_COPY_VALUE ( op , & arr )"	615:7:16043:16068	320753	2	True				
ANR	320988	CallExpression	"ZVAL_COPY_VALUE ( op , & arr )"		320753	0					
ANR	320989	Callee	ZVAL_COPY_VALUE		320753	0					
ANR	320990	Identifier	ZVAL_COPY_VALUE		320753	0					
ANR	320991	ArgumentList	op		320753	1					
ANR	320992	Argument	op		320753	0					
ANR	320993	Identifier	op		320753	0					
ANR	320994	Argument	& arr		320753	1					
ANR	320995	UnaryOperationExpression	& arr		320753	0					
ANR	320996	UnaryOperator	&		320753	0					
ANR	320997	Identifier	arr		320753	1					
ANR	320998	ReturnStatement	return ;	617:6:16084:16090	320753	2	True				
ANR	320999	ElseStatement	else		320753	0					
ANR	321000	CompoundStatement		36:5:984:992	320753	0					
ANR	321001	IdentifierDeclStatement	zval dst ;	620:5:16117:16125	320753	0	True				
ANR	321002	IdentifierDecl	dst		320753	0					
ANR	321003	IdentifierDeclType	zval		320753	0					
ANR	321004	Identifier	dst		320753	1					
ANR	321005	ExpressionStatement	"convert_object_to_type ( op , & dst , IS_ARRAY , convert_to_array )"	621:5:16132:16192	320753	1	True				
ANR	321006	CallExpression	"convert_object_to_type ( op , & dst , IS_ARRAY , convert_to_array )"		320753	0					
ANR	321007	Callee	convert_object_to_type		320753	0					
ANR	321008	Identifier	convert_object_to_type		320753	0					
ANR	321009	ArgumentList	op		320753	1					
ANR	321010	Argument	op		320753	0					
ANR	321011	Identifier	op		320753	0					
ANR	321012	Argument	& dst		320753	1					
ANR	321013	UnaryOperationExpression	& dst		320753	0					
ANR	321014	UnaryOperator	&		320753	0					
ANR	321015	Identifier	dst		320753	1					
ANR	321016	Argument	IS_ARRAY		320753	2					
ANR	321017	Identifier	IS_ARRAY		320753	0					
ANR	321018	Argument	convert_to_array		320753	3					
ANR	321019	Identifier	convert_to_array		320753	0					
ANR	321020	IfStatement	if ( Z_TYPE ( dst ) == IS_ARRAY )		320753	2					
ANR	321021	Condition	Z_TYPE ( dst ) == IS_ARRAY	623:9:16204:16226	320753	0	True				
ANR	321022	EqualityExpression	Z_TYPE ( dst ) == IS_ARRAY		320753	0		==			
ANR	321023	CallExpression	Z_TYPE ( dst )		320753	0					
ANR	321024	Callee	Z_TYPE		320753	0					
ANR	321025	Identifier	Z_TYPE		320753	0					
ANR	321026	ArgumentList	dst		320753	1					
ANR	321027	Argument	dst		320753	0					
ANR	321028	Identifier	dst		320753	0					
ANR	321029	Identifier	IS_ARRAY		320753	1					
ANR	321030	CompoundStatement		39:34:1096:1096	320753	1					
ANR	321031	ExpressionStatement	zval_dtor ( op )	624:6:16237:16250	320753	0	True				
ANR	321032	CallExpression	zval_dtor ( op )		320753	0					
ANR	321033	Callee	zval_dtor		320753	0					
ANR	321034	Identifier	zval_dtor		320753	0					
ANR	321035	ArgumentList	op		320753	1					
ANR	321036	Argument	op		320753	0					
ANR	321037	Identifier	op		320753	0					
ANR	321038	ExpressionStatement	"ZVAL_COPY_VALUE ( op , & dst )"	625:6:16258:16283	320753	1	True				
ANR	321039	CallExpression	"ZVAL_COPY_VALUE ( op , & dst )"		320753	0					
ANR	321040	Callee	ZVAL_COPY_VALUE		320753	0					
ANR	321041	Identifier	ZVAL_COPY_VALUE		320753	0					
ANR	321042	ArgumentList	op		320753	1					
ANR	321043	Argument	op		320753	0					
ANR	321044	Identifier	op		320753	0					
ANR	321045	Argument	& dst		320753	1					
ANR	321046	UnaryOperationExpression	& dst		320753	0					
ANR	321047	UnaryOperator	&		320753	0					
ANR	321048	Identifier	dst		320753	1					
ANR	321049	ReturnStatement	return ;	626:6:16291:16297	320753	2	True				
ANR	321050	ExpressionStatement	zval_dtor ( op )	630:4:16317:16330	320753	1	True				
ANR	321051	CallExpression	zval_dtor ( op )		320753	0					
ANR	321052	Callee	zval_dtor		320753	0					
ANR	321053	Identifier	zval_dtor		320753	0					
ANR	321054	ArgumentList	op		320753	1					
ANR	321055	Argument	op		320753	0					
ANR	321056	Identifier	op		320753	0					
ANR	321057	ExpressionStatement	array_init ( op )	631:4:16336:16350	320753	2	True				
ANR	321058	CallExpression	array_init ( op )		320753	0					
ANR	321059	Callee	array_init		320753	0					
ANR	321060	Identifier	array_init		320753	0					
ANR	321061	ArgumentList	op		320753	1					
ANR	321062	Argument	op		320753	0					
ANR	321063	Identifier	op		320753	0					
ANR	321064	BreakStatement	break ;	633:3:16360:16365	320753	4	True				
ANR	321065	Label	case IS_NULL :	634:2:16369:16381	320753	5	True				
ANR	321066	Identifier	IS_NULL		320753	0					
ANR	321067	ExpressionStatement	ZVAL_NEW_ARR ( op )	635:3:16386:16402	320753	6	True				
ANR	321068	CallExpression	ZVAL_NEW_ARR ( op )		320753	0					
ANR	321069	Callee	ZVAL_NEW_ARR		320753	0					
ANR	321070	Identifier	ZVAL_NEW_ARR		320753	0					
ANR	321071	ArgumentList	op		320753	1					
ANR	321072	Argument	op		320753	0					
ANR	321073	Identifier	op		320753	0					
ANR	321074	ExpressionStatement	"zend_hash_init ( Z_ARRVAL_P ( op ) , 8 , NULL , ZVAL_PTR_DTOR , 0 )"	636:3:16407:16464	320753	7	True				
ANR	321075	CallExpression	"zend_hash_init ( Z_ARRVAL_P ( op ) , 8 , NULL , ZVAL_PTR_DTOR , 0 )"		320753	0					
ANR	321076	Callee	zend_hash_init		320753	0					
ANR	321077	Identifier	zend_hash_init		320753	0					
ANR	321078	ArgumentList	Z_ARRVAL_P ( op )		320753	1					
ANR	321079	Argument	Z_ARRVAL_P ( op )		320753	0					
ANR	321080	CallExpression	Z_ARRVAL_P ( op )		320753	0					
ANR	321081	Callee	Z_ARRVAL_P		320753	0					
ANR	321082	Identifier	Z_ARRVAL_P		320753	0					
ANR	321083	ArgumentList	op		320753	1					
ANR	321084	Argument	op		320753	0					
ANR	321085	Identifier	op		320753	0					
ANR	321086	Argument	8		320753	1					
ANR	321087	PrimaryExpression	8		320753	0					
ANR	321088	Argument	NULL		320753	2					
ANR	321089	Identifier	NULL		320753	0					
ANR	321090	Argument	ZVAL_PTR_DTOR		320753	3					
ANR	321091	Identifier	ZVAL_PTR_DTOR		320753	0					
ANR	321092	Argument	0		320753	4					
ANR	321093	PrimaryExpression	0		320753	0					
ANR	321094	BreakStatement	break ;	637:3:16469:16474	320753	8	True				
ANR	321095	Label	case IS_REFERENCE :	638:2:16478:16495	320753	9	True				
ANR	321096	Identifier	IS_REFERENCE		320753	0					
ANR	321097	ExpressionStatement	zend_unwrap_reference ( op )	639:3:16500:16525	320753	10	True				
ANR	321098	CallExpression	zend_unwrap_reference ( op )		320753	0					
ANR	321099	Callee	zend_unwrap_reference		320753	0					
ANR	321100	Identifier	zend_unwrap_reference		320753	0					
ANR	321101	ArgumentList	op		320753	1					
ANR	321102	Argument	op		320753	0					
ANR	321103	Identifier	op		320753	0					
ANR	321104	GotoStatement	goto try_again ;	640:3:16530:16544	320753	11	True				
ANR	321105	Identifier	try_again		320753	0					
ANR	321106	Label	default :	641:2:16548:16555	320753	12	True				
ANR	321107	Identifier	default		320753	0					
ANR	321108	ExpressionStatement	convert_scalar_to_array ( op )	642:3:16560:16587	320753	13	True				
ANR	321109	CallExpression	convert_scalar_to_array ( op )		320753	0					
ANR	321110	Callee	convert_scalar_to_array		320753	0					
ANR	321111	Identifier	convert_scalar_to_array		320753	0					
ANR	321112	ArgumentList	op		320753	1					
ANR	321113	Argument	op		320753	0					
ANR	321114	Identifier	op		320753	0					
ANR	321115	BreakStatement	break ;	643:3:16592:16597	320753	14	True				
ANR	321116	ReturnType	ZEND_API void ZEND_FASTCALL		320753	1					
ANR	321117	Identifier	convert_to_array		320753	2					
ANR	321118	ParameterList	zval * op		320753	3					
ANR	321119	Parameter	zval * op	584:45:15112:15119	320753	0	True				
ANR	321120	ParameterType	zval *		320753	0					
ANR	321121	Identifier	op		320753	1					
ANR	321122	CFGEntryNode	ENTRY		320753		True				
ANR	321123	CFGExitNode	EXIT		320753		True				
ANR	321124	Symbol	& arr		320753						
ANR	321125	Symbol	zend_ce_closure		320753						
ANR	321126	Symbol	dst		320753						
ANR	321127	Symbol	Z_OBJ_P		320753						
ANR	321128	Symbol	Z_TYPE		320753						
ANR	321129	Symbol	GC_FLAGS		320753						
ANR	321130	Symbol	Z_OBJ_P ( op ) -> properties		320753						
ANR	321131	Symbol	Z_OBJ_P ( op ) -> handlers		320753						
ANR	321132	Symbol	obj_ht		320753						
ANR	321133	Symbol	IS_ARRAY		320753						
ANR	321134	Symbol	Z_OBJCE_P		320753						
ANR	321135	Symbol	Z_ARRVAL_P		320753						
ANR	321136	Symbol	GC_REFCOUNT		320753						
ANR	321137	Symbol	zend_array_dup		320753						
ANR	321138	Symbol	* Z_OBJCE_P		320753						
ANR	321139	Symbol	arr		320753						
ANR	321140	Symbol	op		320753						
ANR	321141	Symbol	NULL		320753						
ANR	321142	Symbol	Z_OBJ_HT_P ( op ) -> get_properties		320753						
ANR	321143	Symbol	* Z_OBJ_P		320753						
ANR	321144	Symbol	IS_ARRAY_IMMUTABLE		320753						
ANR	321145	Symbol	Z_TYPE_P		320753						
ANR	321146	Symbol	& dst		320753						
ANR	321147	Symbol	* Z_OBJ_HT_P		320753						
ANR	321148	Symbol	ZVAL_PTR_DTOR		320753						
ANR	321149	Symbol	Z_OBJ_HT_P		320753						
ANR	321150	Symbol	Z_OBJCE_P ( op ) -> default_properties_count		320753						
ANR	321151	Symbol	EXPECTED		320753						
ANR	321152	Symbol	& std_object_handlers		320753						
ANR	321153	Symbol	convert_to_array		320753						
ANR	321154	Function	convert_to_object	648:0:16615:17303							
ANR	321155	FunctionDef	convert_to_object (zval * op)		321154	0					
ANR	321156	CompoundStatement		649:0:16681:17303	321154	0					
ANR	321157	Label	try_again :	650:0:16683:16692	321154	0	True				
ANR	321158	Identifier	try_again		321154	0					
ANR	321159	SwitchStatement	switch ( Z_TYPE_P ( op ) )		321154	1					
ANR	321160	Condition	Z_TYPE_P ( op )	651:9:16703:16714	321154	0	True				
ANR	321161	CallExpression	Z_TYPE_P ( op )		321154	0					
ANR	321162	Callee	Z_TYPE_P		321154	0					
ANR	321163	Identifier	Z_TYPE_P		321154	0					
ANR	321164	ArgumentList	op		321154	1					
ANR	321165	Argument	op		321154	0					
ANR	321166	Identifier	op		321154	0					
ANR	321167	CompoundStatement		3:23:35:35	321154	1					
ANR	321168	Label	case IS_ARRAY :	652:2:16721:16734	321154	0	True				
ANR	321169	Identifier	IS_ARRAY		321154	0					
ANR	321170	CompoundStatement		6:4:63:90	321154	1					
ANR	321171	IdentifierDeclStatement	HashTable * ht = Z_ARR_P ( op ) ;	654:4:16745:16772	321154	0	True				
ANR	321172	IdentifierDecl	* ht = Z_ARR_P ( op )		321154	0					
ANR	321173	IdentifierDeclType	HashTable *		321154	0					
ANR	321174	Identifier	ht		321154	1					
ANR	321175	AssignmentExpression	* ht = Z_ARR_P ( op )		321154	2		=			
ANR	321176	Identifier	ht		321154	0					
ANR	321177	CallExpression	Z_ARR_P ( op )		321154	1					
ANR	321178	Callee	Z_ARR_P		321154	0					
ANR	321179	Identifier	Z_ARR_P		321154	0					
ANR	321180	ArgumentList	op		321154	1					
ANR	321181	Argument	op		321154	0					
ANR	321182	Identifier	op		321154	0					
ANR	321183	IfStatement	if ( Z_IMMUTABLE_P ( op ) )		321154	1					
ANR	321184	Condition	Z_IMMUTABLE_P ( op )	655:8:16782:16798	321154	0	True				
ANR	321185	CallExpression	Z_IMMUTABLE_P ( op )		321154	0					
ANR	321186	Callee	Z_IMMUTABLE_P		321154	0					
ANR	321187	Identifier	Z_IMMUTABLE_P		321154	0					
ANR	321188	ArgumentList	op		321154	1					
ANR	321189	Argument	op		321154	0					
ANR	321190	Identifier	op		321154	0					
ANR	321191	CompoundStatement		7:27:119:119	321154	1					
ANR	321192	ExpressionStatement	ht = zend_array_dup ( ht )	657:5:16875:16898	321154	0	True				
ANR	321193	AssignmentExpression	ht = zend_array_dup ( ht )		321154	0		=			
ANR	321194	Identifier	ht		321154	0					
ANR	321195	CallExpression	zend_array_dup ( ht )		321154	1					
ANR	321196	Callee	zend_array_dup		321154	0					
ANR	321197	Identifier	zend_array_dup		321154	0					
ANR	321198	ArgumentList	ht		321154	1					
ANR	321199	Argument	ht		321154	0					
ANR	321200	Identifier	ht		321154	0					
ANR	321201	ExpressionStatement	"object_and_properties_init ( op , zend_standard_class_def , ht )"	659:4:16910:16969	321154	2	True				
ANR	321202	CallExpression	"object_and_properties_init ( op , zend_standard_class_def , ht )"		321154	0					
ANR	321203	Callee	object_and_properties_init		321154	0					
ANR	321204	Identifier	object_and_properties_init		321154	0					
ANR	321205	ArgumentList	op		321154	1					
ANR	321206	Argument	op		321154	0					
ANR	321207	Identifier	op		321154	0					
ANR	321208	Argument	zend_standard_class_def		321154	1					
ANR	321209	Identifier	zend_standard_class_def		321154	0					
ANR	321210	Argument	ht		321154	2					
ANR	321211	Identifier	ht		321154	0					
ANR	321212	BreakStatement	break ;	660:4:16975:16980	321154	3	True				
ANR	321213	Label	case IS_OBJECT :	662:2:16989:17003	321154	2	True				
ANR	321214	Identifier	IS_OBJECT		321154	0					
ANR	321215	BreakStatement	break ;	663:3:17008:17013	321154	3	True				
ANR	321216	Label	case IS_NULL :	664:2:17017:17029	321154	4	True				
ANR	321217	Identifier	IS_NULL		321154	0					
ANR	321218	ExpressionStatement	object_init ( op )	665:3:17034:17049	321154	5	True				
ANR	321219	CallExpression	object_init ( op )		321154	0					
ANR	321220	Callee	object_init		321154	0					
ANR	321221	Identifier	object_init		321154	0					
ANR	321222	ArgumentList	op		321154	1					
ANR	321223	Argument	op		321154	0					
ANR	321224	Identifier	op		321154	0					
ANR	321225	BreakStatement	break ;	666:3:17054:17059	321154	6	True				
ANR	321226	Label	case IS_REFERENCE :	667:2:17063:17080	321154	7	True				
ANR	321227	Identifier	IS_REFERENCE		321154	0					
ANR	321228	ExpressionStatement	zend_unwrap_reference ( op )	668:3:17085:17110	321154	8	True				
ANR	321229	CallExpression	zend_unwrap_reference ( op )		321154	0					
ANR	321230	Callee	zend_unwrap_reference		321154	0					
ANR	321231	Identifier	zend_unwrap_reference		321154	0					
ANR	321232	ArgumentList	op		321154	1					
ANR	321233	Argument	op		321154	0					
ANR	321234	Identifier	op		321154	0					
ANR	321235	GotoStatement	goto try_again ;	669:3:17115:17129	321154	9	True				
ANR	321236	Identifier	try_again		321154	0					
ANR	321237	Label	default :	670:2:17133:17140	321154	10	True				
ANR	321238	Identifier	default		321154	0					
ANR	321239	CompoundStatement		23:3:465:473	321154	11					
ANR	321240	IdentifierDeclStatement	zval tmp ;	671:3:17147:17155	321154	0	True				
ANR	321241	IdentifierDecl	tmp		321154	0					
ANR	321242	IdentifierDeclType	zval		321154	0					
ANR	321243	Identifier	tmp		321154	1					
ANR	321244	ExpressionStatement	"ZVAL_COPY_VALUE ( & tmp , op )"	672:3:17160:17185	321154	1	True				
ANR	321245	CallExpression	"ZVAL_COPY_VALUE ( & tmp , op )"		321154	0					
ANR	321246	Callee	ZVAL_COPY_VALUE		321154	0					
ANR	321247	Identifier	ZVAL_COPY_VALUE		321154	0					
ANR	321248	ArgumentList	& tmp		321154	1					
ANR	321249	Argument	& tmp		321154	0					
ANR	321250	UnaryOperationExpression	& tmp		321154	0					
ANR	321251	UnaryOperator	&		321154	0					
ANR	321252	Identifier	tmp		321154	1					
ANR	321253	Argument	op		321154	1					
ANR	321254	Identifier	op		321154	0					
ANR	321255	ExpressionStatement	object_init ( op )	673:3:17190:17205	321154	2	True				
ANR	321256	CallExpression	object_init ( op )		321154	0					
ANR	321257	Callee	object_init		321154	0					
ANR	321258	Identifier	object_init		321154	0					
ANR	321259	ArgumentList	op		321154	1					
ANR	321260	Argument	op		321154	0					
ANR	321261	Identifier	op		321154	0					
ANR	321262	ExpressionStatement	"zend_hash_str_add_new ( Z_OBJPROP_P ( op ) , ""scalar"" , sizeof ( ""scalar"" ) - 1 , & tmp )"	674:3:17210:17284	321154	3	True				
ANR	321263	CallExpression	"zend_hash_str_add_new ( Z_OBJPROP_P ( op ) , ""scalar"" , sizeof ( ""scalar"" ) - 1 , & tmp )"		321154	0					
ANR	321264	Callee	zend_hash_str_add_new		321154	0					
ANR	321265	Identifier	zend_hash_str_add_new		321154	0					
ANR	321266	ArgumentList	Z_OBJPROP_P ( op )		321154	1					
ANR	321267	Argument	Z_OBJPROP_P ( op )		321154	0					
ANR	321268	CallExpression	Z_OBJPROP_P ( op )		321154	0					
ANR	321269	Callee	Z_OBJPROP_P		321154	0					
ANR	321270	Identifier	Z_OBJPROP_P		321154	0					
ANR	321271	ArgumentList	op		321154	1					
ANR	321272	Argument	op		321154	0					
ANR	321273	Identifier	op		321154	0					
ANR	321274	Argument	"""scalar"""		321154	1					
ANR	321275	PrimaryExpression	"""scalar"""		321154	0					
ANR	321276	Argument	"sizeof ( ""scalar"" ) - 1"		321154	2					
ANR	321277	AdditiveExpression	"sizeof ( ""scalar"" ) - 1"		321154	0		-			
ANR	321278	SizeofExpression	"sizeof ( ""scalar"" )"		321154	0					
ANR	321279	Sizeof	sizeof		321154	0					
ANR	321280	PrimaryExpression	"""scalar"""		321154	1					
ANR	321281	PrimaryExpression	1		321154	1					
ANR	321282	Argument	& tmp		321154	3					
ANR	321283	UnaryOperationExpression	& tmp		321154	0					
ANR	321284	UnaryOperator	&		321154	0					
ANR	321285	Identifier	tmp		321154	1					
ANR	321286	BreakStatement	break ;	675:3:17289:17294	321154	4	True				
ANR	321287	ReturnType	ZEND_API void ZEND_FASTCALL		321154	1					
ANR	321288	Identifier	convert_to_object		321154	2					
ANR	321289	ParameterList	zval * op		321154	3					
ANR	321290	Parameter	zval * op	648:46:16661:16668	321154	0	True				
ANR	321291	ParameterType	zval *		321154	0					
ANR	321292	Identifier	op		321154	1					
ANR	321293	CFGEntryNode	ENTRY		321154		True				
ANR	321294	CFGExitNode	EXIT		321154		True				
ANR	321295	Symbol	zend_standard_class_def		321154						
ANR	321296	Symbol	op		321154						
ANR	321297	Symbol	tmp		321154						
ANR	321298	Symbol	Z_ARR_P		321154						
ANR	321299	Symbol	& tmp		321154						
ANR	321300	Symbol	Z_OBJPROP_P		321154						
ANR	321301	Symbol	Z_TYPE_P		321154						
ANR	321302	Symbol	ht		321154						
ANR	321303	Symbol	Z_IMMUTABLE_P		321154						
ANR	321304	Symbol	zend_array_dup		321154						
ANR	321305	Function	multi_convert_to_long_ex	681:0:17316:17520							
ANR	321306	FunctionDef	multi_convert_to_long_ex (int argc)		321305	0					
ANR	321307	CompoundStatement		682:0:17380:17520	321305	0					
ANR	321308	IdentifierDeclStatement	zval * arg ;	683:1:17383:17392	321305	0	True				
ANR	321309	IdentifierDecl	* arg		321305	0					
ANR	321310	IdentifierDeclType	zval *		321305	0					
ANR	321311	Identifier	arg		321305	1					
ANR	321312	IdentifierDeclStatement	va_list ap ;	684:1:17395:17405	321305	1	True				
ANR	321313	IdentifierDecl	ap		321305	0					
ANR	321314	IdentifierDeclType	va_list		321305	0					
ANR	321315	Identifier	ap		321305	1					
ANR	321316	ExpressionStatement	"va_start ( ap , argc )"	686:1:17409:17427	321305	2	True				
ANR	321317	CallExpression	"va_start ( ap , argc )"		321305	0					
ANR	321318	Callee	va_start		321305	0					
ANR	321319	Identifier	va_start		321305	0					
ANR	321320	ArgumentList	ap		321305	1					
ANR	321321	Argument	ap		321305	0					
ANR	321322	Identifier	ap		321305	0					
ANR	321323	Argument	argc		321305	1					
ANR	321324	Identifier	argc		321305	0					
ANR	321325	WhileStatement	while ( argc -- )		321305	3					
ANR	321326	Condition	argc --	688:8:17438:17443	321305	0	True				
ANR	321327	PostIncDecOperationExpression	argc --		321305	0					
ANR	321328	Identifier	argc		321305	0					
ANR	321329	IncDec	--		321305	1					
ANR	321330	CompoundStatement		7:16:65:65	321305	1					
ANR	321331	Statement	arg	689:2:17450:17452	321305	0	True				
ANR	321332	Statement	=	689:6:17454:17454	321305	1	True				
ANR	321333	Statement	va_arg	689:8:17456:17461	321305	2	True				
ANR	321334	Statement	(	689:14:17462:17462	321305	3	True				
ANR	321335	Statement	ap	689:15:17463:17464	321305	4	True				
ANR	321336	Statement	","	689:17:17465:17465	321305	5	True				
ANR	321337	Statement	zval	689:19:17467:17470	321305	6	True				
ANR	321338	Statement	*	689:24:17472:17472	321305	7	True				
ANR	321339	Statement	)	689:25:17473:17473	321305	8	True				
ANR	321340	ExpressionStatement		689:26:17474:17474	321305	9	True				
ANR	321341	ExpressionStatement	convert_to_long_ex ( arg )	690:2:17478:17501	321305	10	True				
ANR	321342	CallExpression	convert_to_long_ex ( arg )		321305	0					
ANR	321343	Callee	convert_to_long_ex		321305	0					
ANR	321344	Identifier	convert_to_long_ex		321305	0					
ANR	321345	ArgumentList	arg		321305	1					
ANR	321346	Argument	arg		321305	0					
ANR	321347	Identifier	arg		321305	0					
ANR	321348	ExpressionStatement	va_end ( ap )	693:1:17508:17518	321305	4	True				
ANR	321349	CallExpression	va_end ( ap )		321305	0					
ANR	321350	Callee	va_end		321305	0					
ANR	321351	Identifier	va_end		321305	0					
ANR	321352	ArgumentList	ap		321305	1					
ANR	321353	Argument	ap		321305	0					
ANR	321354	Identifier	ap		321305	0					
ANR	321355	ReturnType	ZEND_API void		321305	1					
ANR	321356	Identifier	multi_convert_to_long_ex		321305	2					
ANR	321357	ParameterList	int argc		321305	3					
ANR	321358	Parameter	int argc	681:39:17355:17362	321305	0	True				
ANR	321359	ParameterType	int		321305	0					
ANR	321360	Identifier	argc		321305	1					
ANR	321361	CFGEntryNode	ENTRY		321305		True				
ANR	321362	CFGExitNode	EXIT		321305		True				
ANR	321363	Symbol	argc		321305						
ANR	321364	Symbol	arg		321305						
ANR	321365	Symbol	ap		321305						
ANR	321366	Function	multi_convert_to_double_ex	697:0:17533:17741							
ANR	321367	FunctionDef	multi_convert_to_double_ex (int argc)		321366	0					
ANR	321368	CompoundStatement		698:0:17599:17741	321366	0					
ANR	321369	IdentifierDeclStatement	zval * arg ;	699:1:17602:17611	321366	0	True				
ANR	321370	IdentifierDecl	* arg		321366	0					
ANR	321371	IdentifierDeclType	zval *		321366	0					
ANR	321372	Identifier	arg		321366	1					
ANR	321373	IdentifierDeclStatement	va_list ap ;	700:1:17614:17624	321366	1	True				
ANR	321374	IdentifierDecl	ap		321366	0					
ANR	321375	IdentifierDeclType	va_list		321366	0					
ANR	321376	Identifier	ap		321366	1					
ANR	321377	ExpressionStatement	"va_start ( ap , argc )"	702:1:17628:17646	321366	2	True				
ANR	321378	CallExpression	"va_start ( ap , argc )"		321366	0					
ANR	321379	Callee	va_start		321366	0					
ANR	321380	Identifier	va_start		321366	0					
ANR	321381	ArgumentList	ap		321366	1					
ANR	321382	Argument	ap		321366	0					
ANR	321383	Identifier	ap		321366	0					
ANR	321384	Argument	argc		321366	1					
ANR	321385	Identifier	argc		321366	0					
ANR	321386	WhileStatement	while ( argc -- )		321366	3					
ANR	321387	Condition	argc --	704:8:17657:17662	321366	0	True				
ANR	321388	PostIncDecOperationExpression	argc --		321366	0					
ANR	321389	Identifier	argc		321366	0					
ANR	321390	IncDec	--		321366	1					
ANR	321391	CompoundStatement		7:16:65:65	321366	1					
ANR	321392	Statement	arg	705:2:17669:17671	321366	0	True				
ANR	321393	Statement	=	705:6:17673:17673	321366	1	True				
ANR	321394	Statement	va_arg	705:8:17675:17680	321366	2	True				
ANR	321395	Statement	(	705:14:17681:17681	321366	3	True				
ANR	321396	Statement	ap	705:15:17682:17683	321366	4	True				
ANR	321397	Statement	","	705:17:17684:17684	321366	5	True				
ANR	321398	Statement	zval	705:19:17686:17689	321366	6	True				
ANR	321399	Statement	*	705:24:17691:17691	321366	7	True				
ANR	321400	Statement	)	705:25:17692:17692	321366	8	True				
ANR	321401	ExpressionStatement		705:26:17693:17693	321366	9	True				
ANR	321402	ExpressionStatement	convert_to_double_ex ( arg )	706:2:17697:17722	321366	10	True				
ANR	321403	CallExpression	convert_to_double_ex ( arg )		321366	0					
ANR	321404	Callee	convert_to_double_ex		321366	0					
ANR	321405	Identifier	convert_to_double_ex		321366	0					
ANR	321406	ArgumentList	arg		321366	1					
ANR	321407	Argument	arg		321366	0					
ANR	321408	Identifier	arg		321366	0					
ANR	321409	ExpressionStatement	va_end ( ap )	709:1:17729:17739	321366	4	True				
ANR	321410	CallExpression	va_end ( ap )		321366	0					
ANR	321411	Callee	va_end		321366	0					
ANR	321412	Identifier	va_end		321366	0					
ANR	321413	ArgumentList	ap		321366	1					
ANR	321414	Argument	ap		321366	0					
ANR	321415	Identifier	ap		321366	0					
ANR	321416	ReturnType	ZEND_API void		321366	1					
ANR	321417	Identifier	multi_convert_to_double_ex		321366	2					
ANR	321418	ParameterList	int argc		321366	3					
ANR	321419	Parameter	int argc	697:41:17574:17581	321366	0	True				
ANR	321420	ParameterType	int		321366	0					
ANR	321421	Identifier	argc		321366	1					
ANR	321422	CFGEntryNode	ENTRY		321366		True				
ANR	321423	CFGExitNode	EXIT		321366		True				
ANR	321424	Symbol	argc		321366						
ANR	321425	Symbol	arg		321366						
ANR	321426	Symbol	ap		321366						
ANR	321427	Function	multi_convert_to_string_ex	713:0:17754:17962							
ANR	321428	FunctionDef	multi_convert_to_string_ex (int argc)		321427	0					
ANR	321429	CompoundStatement		714:0:17820:17962	321427	0					
ANR	321430	IdentifierDeclStatement	zval * arg ;	715:1:17823:17832	321427	0	True				
ANR	321431	IdentifierDecl	* arg		321427	0					
ANR	321432	IdentifierDeclType	zval *		321427	0					
ANR	321433	Identifier	arg		321427	1					
ANR	321434	IdentifierDeclStatement	va_list ap ;	716:1:17835:17845	321427	1	True				
ANR	321435	IdentifierDecl	ap		321427	0					
ANR	321436	IdentifierDeclType	va_list		321427	0					
ANR	321437	Identifier	ap		321427	1					
ANR	321438	ExpressionStatement	"va_start ( ap , argc )"	718:1:17849:17867	321427	2	True				
ANR	321439	CallExpression	"va_start ( ap , argc )"		321427	0					
ANR	321440	Callee	va_start		321427	0					
ANR	321441	Identifier	va_start		321427	0					
ANR	321442	ArgumentList	ap		321427	1					
ANR	321443	Argument	ap		321427	0					
ANR	321444	Identifier	ap		321427	0					
ANR	321445	Argument	argc		321427	1					
ANR	321446	Identifier	argc		321427	0					
ANR	321447	WhileStatement	while ( argc -- )		321427	3					
ANR	321448	Condition	argc --	720:8:17878:17883	321427	0	True				
ANR	321449	PostIncDecOperationExpression	argc --		321427	0					
ANR	321450	Identifier	argc		321427	0					
ANR	321451	IncDec	--		321427	1					
ANR	321452	CompoundStatement		7:16:65:65	321427	1					
ANR	321453	Statement	arg	721:2:17890:17892	321427	0	True				
ANR	321454	Statement	=	721:6:17894:17894	321427	1	True				
ANR	321455	Statement	va_arg	721:8:17896:17901	321427	2	True				
ANR	321456	Statement	(	721:14:17902:17902	321427	3	True				
ANR	321457	Statement	ap	721:15:17903:17904	321427	4	True				
ANR	321458	Statement	","	721:17:17905:17905	321427	5	True				
ANR	321459	Statement	zval	721:19:17907:17910	321427	6	True				
ANR	321460	Statement	*	721:24:17912:17912	321427	7	True				
ANR	321461	Statement	)	721:25:17913:17913	321427	8	True				
ANR	321462	ExpressionStatement		721:26:17914:17914	321427	9	True				
ANR	321463	ExpressionStatement	convert_to_string_ex ( arg )	722:2:17918:17943	321427	10	True				
ANR	321464	CallExpression	convert_to_string_ex ( arg )		321427	0					
ANR	321465	Callee	convert_to_string_ex		321427	0					
ANR	321466	Identifier	convert_to_string_ex		321427	0					
ANR	321467	ArgumentList	arg		321427	1					
ANR	321468	Argument	arg		321427	0					
ANR	321469	Identifier	arg		321427	0					
ANR	321470	ExpressionStatement	va_end ( ap )	725:1:17950:17960	321427	4	True				
ANR	321471	CallExpression	va_end ( ap )		321427	0					
ANR	321472	Callee	va_end		321427	0					
ANR	321473	Identifier	va_end		321427	0					
ANR	321474	ArgumentList	ap		321427	1					
ANR	321475	Argument	ap		321427	0					
ANR	321476	Identifier	ap		321427	0					
ANR	321477	ReturnType	ZEND_API void		321427	1					
ANR	321478	Identifier	multi_convert_to_string_ex		321427	2					
ANR	321479	ParameterList	int argc		321427	3					
ANR	321480	Parameter	int argc	713:41:17795:17802	321427	0	True				
ANR	321481	ParameterType	int		321427	0					
ANR	321482	Identifier	argc		321427	1					
ANR	321483	CFGEntryNode	ENTRY		321427		True				
ANR	321484	CFGExitNode	EXIT		321427		True				
ANR	321485	Symbol	argc		321427						
ANR	321486	Symbol	arg		321427						
ANR	321487	Symbol	ap		321427						
ANR	321488	Function	_zval_get_long_func	729:0:17975:18761							
ANR	321489	FunctionDef	_zval_get_long_func (zval * op)		321488	0					
ANR	321490	CompoundStatement		730:0:18048:18761	321488	0					
ANR	321491	Label	try_again :	731:0:18050:18059	321488	0	True				
ANR	321492	Identifier	try_again		321488	0					
ANR	321493	SwitchStatement	switch ( Z_TYPE_P ( op ) )		321488	1					
ANR	321494	Condition	Z_TYPE_P ( op )	732:9:18070:18081	321488	0	True				
ANR	321495	CallExpression	Z_TYPE_P ( op )		321488	0					
ANR	321496	Callee	Z_TYPE_P		321488	0					
ANR	321497	Identifier	Z_TYPE_P		321488	0					
ANR	321498	ArgumentList	op		321488	1					
ANR	321499	Argument	op		321488	0					
ANR	321500	Identifier	op		321488	0					
ANR	321501	CompoundStatement		3:23:35:35	321488	1					
ANR	321502	Label	case IS_NULL :	733:2:18088:18100	321488	0	True				
ANR	321503	Identifier	IS_NULL		321488	0					
ANR	321504	Label	case IS_FALSE :	734:2:18104:18117	321488	1	True				
ANR	321505	Identifier	IS_FALSE		321488	0					
ANR	321506	ReturnStatement	return 0 ;	735:3:18122:18130	321488	2	True				
ANR	321507	PrimaryExpression	0		321488	0					
ANR	321508	Label	case IS_TRUE :	736:2:18134:18146	321488	3	True				
ANR	321509	Identifier	IS_TRUE		321488	0					
ANR	321510	ReturnStatement	return 1 ;	737:3:18151:18159	321488	4	True				
ANR	321511	PrimaryExpression	1		321488	0					
ANR	321512	Label	case IS_RESOURCE :	738:2:18163:18179	321488	5	True				
ANR	321513	Identifier	IS_RESOURCE		321488	0					
ANR	321514	ReturnStatement	return Z_RES_HANDLE_P ( op ) ;	739:3:18184:18209	321488	6	True				
ANR	321515	CallExpression	Z_RES_HANDLE_P ( op )		321488	0					
ANR	321516	Callee	Z_RES_HANDLE_P		321488	0					
ANR	321517	Identifier	Z_RES_HANDLE_P		321488	0					
ANR	321518	ArgumentList	op		321488	1					
ANR	321519	Argument	op		321488	0					
ANR	321520	Identifier	op		321488	0					
ANR	321521	Label	case IS_LONG :	740:2:18213:18225	321488	7	True				
ANR	321522	Identifier	IS_LONG		321488	0					
ANR	321523	ReturnStatement	return Z_LVAL_P ( op ) ;	741:3:18230:18249	321488	8	True				
ANR	321524	CallExpression	Z_LVAL_P ( op )		321488	0					
ANR	321525	Callee	Z_LVAL_P		321488	0					
ANR	321526	Identifier	Z_LVAL_P		321488	0					
ANR	321527	ArgumentList	op		321488	1					
ANR	321528	Argument	op		321488	0					
ANR	321529	Identifier	op		321488	0					
ANR	321530	Label	case IS_DOUBLE :	742:2:18253:18267	321488	9	True				
ANR	321531	Identifier	IS_DOUBLE		321488	0					
ANR	321532	ReturnStatement	return zend_dval_to_lval ( Z_DVAL_P ( op ) ) ;	743:3:18272:18310	321488	10	True				
ANR	321533	CallExpression	zend_dval_to_lval ( Z_DVAL_P ( op ) )		321488	0					
ANR	321534	Callee	zend_dval_to_lval		321488	0					
ANR	321535	Identifier	zend_dval_to_lval		321488	0					
ANR	321536	ArgumentList	Z_DVAL_P ( op )		321488	1					
ANR	321537	Argument	Z_DVAL_P ( op )		321488	0					
ANR	321538	CallExpression	Z_DVAL_P ( op )		321488	0					
ANR	321539	Callee	Z_DVAL_P		321488	0					
ANR	321540	Identifier	Z_DVAL_P		321488	0					
ANR	321541	ArgumentList	op		321488	1					
ANR	321542	Argument	op		321488	0					
ANR	321543	Identifier	op		321488	0					
ANR	321544	Label	case IS_STRING :	744:2:18314:18328	321488	11	True				
ANR	321545	Identifier	IS_STRING		321488	0					
ANR	321546	ReturnStatement	"return ZEND_STRTOL ( Z_STRVAL_P ( op ) , NULL , 10 ) ;"	745:3:18333:18377	321488	12	True				
ANR	321547	CallExpression	"ZEND_STRTOL ( Z_STRVAL_P ( op ) , NULL , 10 )"		321488	0					
ANR	321548	Callee	ZEND_STRTOL		321488	0					
ANR	321549	Identifier	ZEND_STRTOL		321488	0					
ANR	321550	ArgumentList	Z_STRVAL_P ( op )		321488	1					
ANR	321551	Argument	Z_STRVAL_P ( op )		321488	0					
ANR	321552	CallExpression	Z_STRVAL_P ( op )		321488	0					
ANR	321553	Callee	Z_STRVAL_P		321488	0					
ANR	321554	Identifier	Z_STRVAL_P		321488	0					
ANR	321555	ArgumentList	op		321488	1					
ANR	321556	Argument	op		321488	0					
ANR	321557	Identifier	op		321488	0					
ANR	321558	Argument	NULL		321488	1					
ANR	321559	Identifier	NULL		321488	0					
ANR	321560	Argument	10		321488	2					
ANR	321561	PrimaryExpression	10		321488	0					
ANR	321562	Label	case IS_ARRAY :	746:2:18381:18394	321488	13	True				
ANR	321563	Identifier	IS_ARRAY		321488	0					
ANR	321564	ReturnStatement	return zend_hash_num_elements ( Z_ARRVAL_P ( op ) ) ? 1 : 0 ;	747:3:18399:18452	321488	14	True				
ANR	321565	ConditionalExpression	zend_hash_num_elements ( Z_ARRVAL_P ( op ) ) ? 1 : 0		321488	0					
ANR	321566	Condition	zend_hash_num_elements ( Z_ARRVAL_P ( op ) )		321488	0					
ANR	321567	CallExpression	zend_hash_num_elements ( Z_ARRVAL_P ( op ) )		321488	0					
ANR	321568	Callee	zend_hash_num_elements		321488	0					
ANR	321569	Identifier	zend_hash_num_elements		321488	0					
ANR	321570	ArgumentList	Z_ARRVAL_P ( op )		321488	1					
ANR	321571	Argument	Z_ARRVAL_P ( op )		321488	0					
ANR	321572	CallExpression	Z_ARRVAL_P ( op )		321488	0					
ANR	321573	Callee	Z_ARRVAL_P		321488	0					
ANR	321574	Identifier	Z_ARRVAL_P		321488	0					
ANR	321575	ArgumentList	op		321488	1					
ANR	321576	Argument	op		321488	0					
ANR	321577	Identifier	op		321488	0					
ANR	321578	PrimaryExpression	1		321488	1					
ANR	321579	PrimaryExpression	0		321488	2					
ANR	321580	Label	case IS_OBJECT :	748:2:18456:18470	321488	15	True				
ANR	321581	Identifier	IS_OBJECT		321488	0					
ANR	321582	CompoundStatement		21:4:432:440	321488	16					
ANR	321583	IdentifierDeclStatement	zval dst ;	750:4:18481:18489	321488	0	True				
ANR	321584	IdentifierDecl	dst		321488	0					
ANR	321585	IdentifierDeclType	zval		321488	0					
ANR	321586	Identifier	dst		321488	1					
ANR	321587	ExpressionStatement	"convert_object_to_type ( op , & dst , IS_LONG , convert_to_long )"	751:4:18495:18553	321488	1	True				
ANR	321588	CallExpression	"convert_object_to_type ( op , & dst , IS_LONG , convert_to_long )"		321488	0					
ANR	321589	Callee	convert_object_to_type		321488	0					
ANR	321590	Identifier	convert_object_to_type		321488	0					
ANR	321591	ArgumentList	op		321488	1					
ANR	321592	Argument	op		321488	0					
ANR	321593	Identifier	op		321488	0					
ANR	321594	Argument	& dst		321488	1					
ANR	321595	UnaryOperationExpression	& dst		321488	0					
ANR	321596	UnaryOperator	&		321488	0					
ANR	321597	Identifier	dst		321488	1					
ANR	321598	Argument	IS_LONG		321488	2					
ANR	321599	Identifier	IS_LONG		321488	0					
ANR	321600	Argument	convert_to_long		321488	3					
ANR	321601	Identifier	convert_to_long		321488	0					
ANR	321602	IfStatement	if ( Z_TYPE ( dst ) == IS_LONG )		321488	2					
ANR	321603	Condition	Z_TYPE ( dst ) == IS_LONG	752:8:18563:18584	321488	0	True				
ANR	321604	EqualityExpression	Z_TYPE ( dst ) == IS_LONG		321488	0		==			
ANR	321605	CallExpression	Z_TYPE ( dst )		321488	0					
ANR	321606	Callee	Z_TYPE		321488	0					
ANR	321607	Identifier	Z_TYPE		321488	0					
ANR	321608	ArgumentList	dst		321488	1					
ANR	321609	Argument	dst		321488	0					
ANR	321610	Identifier	dst		321488	0					
ANR	321611	Identifier	IS_LONG		321488	1					
ANR	321612	CompoundStatement		23:32:538:538	321488	1					
ANR	321613	ReturnStatement	return Z_LVAL ( dst ) ;	753:5:18594:18612	321488	0	True				
ANR	321614	CallExpression	Z_LVAL ( dst )		321488	0					
ANR	321615	Callee	Z_LVAL		321488	0					
ANR	321616	Identifier	Z_LVAL		321488	0					
ANR	321617	ArgumentList	dst		321488	1					
ANR	321618	Argument	dst		321488	0					
ANR	321619	Identifier	dst		321488	0					
ANR	321620	ElseStatement	else		321488	0					
ANR	321621	CompoundStatement		25:11:576:576	321488	0					
ANR	321622	ReturnStatement	return 1 ;	755:5:18632:18640	321488	0	True				
ANR	321623	PrimaryExpression	1		321488	0					
ANR	321624	Label	case IS_REFERENCE :	758:2:18655:18672	321488	17	True				
ANR	321625	Identifier	IS_REFERENCE		321488	0					
ANR	321626	ExpressionStatement	op = Z_REFVAL_P ( op )	759:3:18677:18696	321488	18	True				
ANR	321627	AssignmentExpression	op = Z_REFVAL_P ( op )		321488	0		=			
ANR	321628	Identifier	op		321488	0					
ANR	321629	CallExpression	Z_REFVAL_P ( op )		321488	1					
ANR	321630	Callee	Z_REFVAL_P		321488	0					
ANR	321631	Identifier	Z_REFVAL_P		321488	0					
ANR	321632	ArgumentList	op		321488	1					
ANR	321633	Argument	op		321488	0					
ANR	321634	Identifier	op		321488	0					
ANR	321635	GotoStatement	goto try_again ;	760:3:18701:18715	321488	19	True				
ANR	321636	Identifier	try_again		321488	0					
ANR	321637	Statement	EMPTY_SWITCH_DEFAULT_CASE	761:2:18719:18743	321488	20	True				
ANR	321638	Statement	(	761:27:18744:18744	321488	21	True				
ANR	321639	Statement	)	761:28:18745:18745	321488	22	True				
ANR	321640	ReturnStatement	return 0 ;	763:1:18751:18759	321488	2	True				
ANR	321641	PrimaryExpression	0		321488	0					
ANR	321642	ReturnType	ZEND_API zend_long ZEND_FASTCALL		321488	1					
ANR	321643	Identifier	_zval_get_long_func		321488	2					
ANR	321644	ParameterList	zval * op		321488	3					
ANR	321645	Parameter	zval * op	729:53:18028:18035	321488	0	True				
ANR	321646	ParameterType	zval *		321488	0					
ANR	321647	Identifier	op		321488	1					
ANR	321648	CFGEntryNode	ENTRY		321488		True				
ANR	321649	CFGExitNode	EXIT		321488		True				
ANR	321650	Symbol	Z_RES_HANDLE_P		321488						
ANR	321651	Symbol	op		321488						
ANR	321652	Symbol	NULL		321488						
ANR	321653	Symbol	dst		321488						
ANR	321654	Symbol	zend_hash_num_elements		321488						
ANR	321655	Symbol	Z_LVAL		321488						
ANR	321656	Symbol	Z_TYPE		321488						
ANR	321657	Symbol	ZEND_STRTOL		321488						
ANR	321658	Symbol	convert_to_long		321488						
ANR	321659	Symbol	Z_TYPE_P		321488						
ANR	321660	Symbol	& dst		321488						
ANR	321661	Symbol	Z_STRVAL_P		321488						
ANR	321662	Symbol	Z_DVAL_P		321488						
ANR	321663	Symbol	Z_LVAL_P		321488						
ANR	321664	Symbol	zend_dval_to_lval		321488						
ANR	321665	Symbol	IS_LONG		321488						
ANR	321666	Symbol	Z_REFVAL_P		321488						
ANR	321667	Symbol	Z_ARRVAL_P		321488						
ANR	321668	Function	_zval_get_double_func	767:0:18774:19573							
ANR	321669	FunctionDef	_zval_get_double_func (zval * op)		321668	0					
ANR	321670	CompoundStatement		768:0:18846:19573	321668	0					
ANR	321671	Label	try_again :	769:0:18848:18857	321668	0	True				
ANR	321672	Identifier	try_again		321668	0					
ANR	321673	SwitchStatement	switch ( Z_TYPE_P ( op ) )		321668	1					
ANR	321674	Condition	Z_TYPE_P ( op )	770:9:18868:18879	321668	0	True				
ANR	321675	CallExpression	Z_TYPE_P ( op )		321668	0					
ANR	321676	Callee	Z_TYPE_P		321668	0					
ANR	321677	Identifier	Z_TYPE_P		321668	0					
ANR	321678	ArgumentList	op		321668	1					
ANR	321679	Argument	op		321668	0					
ANR	321680	Identifier	op		321668	0					
ANR	321681	CompoundStatement		3:23:35:35	321668	1					
ANR	321682	Label	case IS_NULL :	771:2:18886:18898	321668	0	True				
ANR	321683	Identifier	IS_NULL		321668	0					
ANR	321684	Label	case IS_FALSE :	772:2:18902:18915	321668	1	True				
ANR	321685	Identifier	IS_FALSE		321668	0					
ANR	321686	ReturnStatement	return 0.0 ;	773:3:18920:18930	321668	2	True				
ANR	321687	PrimaryExpression	0.0		321668	0					
ANR	321688	Label	case IS_TRUE :	774:2:18934:18946	321668	3	True				
ANR	321689	Identifier	IS_TRUE		321668	0					
ANR	321690	ReturnStatement	return 1.0 ;	775:3:18951:18961	321668	4	True				
ANR	321691	PrimaryExpression	1.0		321668	0					
ANR	321692	Label	case IS_RESOURCE :	776:2:18965:18981	321668	5	True				
ANR	321693	Identifier	IS_RESOURCE		321668	0					
ANR	321694	ReturnStatement	return ( double ) Z_RES_HANDLE_P ( op ) ;	777:3:18986:19020	321668	6	True				
ANR	321695	CastExpression	( double ) Z_RES_HANDLE_P ( op )		321668	0					
ANR	321696	CastTarget	double		321668	0					
ANR	321697	CallExpression	Z_RES_HANDLE_P ( op )		321668	1					
ANR	321698	Callee	Z_RES_HANDLE_P		321668	0					
ANR	321699	Identifier	Z_RES_HANDLE_P		321668	0					
ANR	321700	ArgumentList	op		321668	1					
ANR	321701	Argument	op		321668	0					
ANR	321702	Identifier	op		321668	0					
ANR	321703	Label	case IS_LONG :	778:2:19024:19036	321668	7	True				
ANR	321704	Identifier	IS_LONG		321668	0					
ANR	321705	ReturnStatement	return ( double ) Z_LVAL_P ( op ) ;	779:3:19041:19069	321668	8	True				
ANR	321706	CastExpression	( double ) Z_LVAL_P ( op )		321668	0					
ANR	321707	CastTarget	double		321668	0					
ANR	321708	CallExpression	Z_LVAL_P ( op )		321668	1					
ANR	321709	Callee	Z_LVAL_P		321668	0					
ANR	321710	Identifier	Z_LVAL_P		321668	0					
ANR	321711	ArgumentList	op		321668	1					
ANR	321712	Argument	op		321668	0					
ANR	321713	Identifier	op		321668	0					
ANR	321714	Label	case IS_DOUBLE :	780:2:19073:19087	321668	9	True				
ANR	321715	Identifier	IS_DOUBLE		321668	0					
ANR	321716	ReturnStatement	return Z_DVAL_P ( op ) ;	781:3:19092:19111	321668	10	True				
ANR	321717	CallExpression	Z_DVAL_P ( op )		321668	0					
ANR	321718	Callee	Z_DVAL_P		321668	0					
ANR	321719	Identifier	Z_DVAL_P		321668	0					
ANR	321720	ArgumentList	op		321668	1					
ANR	321721	Argument	op		321668	0					
ANR	321722	Identifier	op		321668	0					
ANR	321723	Label	case IS_STRING :	782:2:19115:19129	321668	11	True				
ANR	321724	Identifier	IS_STRING		321668	0					
ANR	321725	ReturnStatement	"return zend_strtod ( Z_STRVAL_P ( op ) , NULL ) ;"	783:3:19134:19174	321668	12	True				
ANR	321726	CallExpression	"zend_strtod ( Z_STRVAL_P ( op ) , NULL )"		321668	0					
ANR	321727	Callee	zend_strtod		321668	0					
ANR	321728	Identifier	zend_strtod		321668	0					
ANR	321729	ArgumentList	Z_STRVAL_P ( op )		321668	1					
ANR	321730	Argument	Z_STRVAL_P ( op )		321668	0					
ANR	321731	CallExpression	Z_STRVAL_P ( op )		321668	0					
ANR	321732	Callee	Z_STRVAL_P		321668	0					
ANR	321733	Identifier	Z_STRVAL_P		321668	0					
ANR	321734	ArgumentList	op		321668	1					
ANR	321735	Argument	op		321668	0					
ANR	321736	Identifier	op		321668	0					
ANR	321737	Argument	NULL		321668	1					
ANR	321738	Identifier	NULL		321668	0					
ANR	321739	Label	case IS_ARRAY :	784:2:19178:19191	321668	13	True				
ANR	321740	Identifier	IS_ARRAY		321668	0					
ANR	321741	ReturnStatement	return zend_hash_num_elements ( Z_ARRVAL_P ( op ) ) ? 1.0 : 0.0 ;	785:3:19196:19253	321668	14	True				
ANR	321742	ConditionalExpression	zend_hash_num_elements ( Z_ARRVAL_P ( op ) ) ? 1.0 : 0.0		321668	0					
ANR	321743	Condition	zend_hash_num_elements ( Z_ARRVAL_P ( op ) )		321668	0					
ANR	321744	CallExpression	zend_hash_num_elements ( Z_ARRVAL_P ( op ) )		321668	0					
ANR	321745	Callee	zend_hash_num_elements		321668	0					
ANR	321746	Identifier	zend_hash_num_elements		321668	0					
ANR	321747	ArgumentList	Z_ARRVAL_P ( op )		321668	1					
ANR	321748	Argument	Z_ARRVAL_P ( op )		321668	0					
ANR	321749	CallExpression	Z_ARRVAL_P ( op )		321668	0					
ANR	321750	Callee	Z_ARRVAL_P		321668	0					
ANR	321751	Identifier	Z_ARRVAL_P		321668	0					
ANR	321752	ArgumentList	op		321668	1					
ANR	321753	Argument	op		321668	0					
ANR	321754	Identifier	op		321668	0					
ANR	321755	PrimaryExpression	1.0		321668	1					
ANR	321756	PrimaryExpression	0.0		321668	2					
ANR	321757	Label	case IS_OBJECT :	786:2:19257:19271	321668	15	True				
ANR	321758	Identifier	IS_OBJECT		321668	0					
ANR	321759	CompoundStatement		21:4:435:443	321668	16					
ANR	321760	IdentifierDeclStatement	zval dst ;	788:4:19282:19290	321668	0	True				
ANR	321761	IdentifierDecl	dst		321668	0					
ANR	321762	IdentifierDeclType	zval		321668	0					
ANR	321763	Identifier	dst		321668	1					
ANR	321764	ExpressionStatement	"convert_object_to_type ( op , & dst , IS_DOUBLE , convert_to_double )"	789:4:19296:19358	321668	1	True				
ANR	321765	CallExpression	"convert_object_to_type ( op , & dst , IS_DOUBLE , convert_to_double )"		321668	0					
ANR	321766	Callee	convert_object_to_type		321668	0					
ANR	321767	Identifier	convert_object_to_type		321668	0					
ANR	321768	ArgumentList	op		321668	1					
ANR	321769	Argument	op		321668	0					
ANR	321770	Identifier	op		321668	0					
ANR	321771	Argument	& dst		321668	1					
ANR	321772	UnaryOperationExpression	& dst		321668	0					
ANR	321773	UnaryOperator	&		321668	0					
ANR	321774	Identifier	dst		321668	1					
ANR	321775	Argument	IS_DOUBLE		321668	2					
ANR	321776	Identifier	IS_DOUBLE		321668	0					
ANR	321777	Argument	convert_to_double		321668	3					
ANR	321778	Identifier	convert_to_double		321668	0					
ANR	321779	IfStatement	if ( Z_TYPE ( dst ) == IS_DOUBLE )		321668	2					
ANR	321780	Condition	Z_TYPE ( dst ) == IS_DOUBLE	791:8:19369:19392	321668	0	True				
ANR	321781	EqualityExpression	Z_TYPE ( dst ) == IS_DOUBLE		321668	0		==			
ANR	321782	CallExpression	Z_TYPE ( dst )		321668	0					
ANR	321783	Callee	Z_TYPE		321668	0					
ANR	321784	Identifier	Z_TYPE		321668	0					
ANR	321785	ArgumentList	dst		321668	1					
ANR	321786	Argument	dst		321668	0					
ANR	321787	Identifier	dst		321668	0					
ANR	321788	Identifier	IS_DOUBLE		321668	1					
ANR	321789	CompoundStatement		24:34:548:548	321668	1					
ANR	321790	ReturnStatement	return Z_DVAL ( dst ) ;	792:5:19402:19420	321668	0	True				
ANR	321791	CallExpression	Z_DVAL ( dst )		321668	0					
ANR	321792	Callee	Z_DVAL		321668	0					
ANR	321793	Identifier	Z_DVAL		321668	0					
ANR	321794	ArgumentList	dst		321668	1					
ANR	321795	Argument	dst		321668	0					
ANR	321796	Identifier	dst		321668	0					
ANR	321797	ElseStatement	else		321668	0					
ANR	321798	CompoundStatement		26:11:586:586	321668	0					
ANR	321799	ReturnStatement	return 1.0 ;	794:5:19440:19450	321668	0	True				
ANR	321800	PrimaryExpression	1.0		321668	0					
ANR	321801	Label	case IS_REFERENCE :	797:2:19465:19482	321668	17	True				
ANR	321802	Identifier	IS_REFERENCE		321668	0					
ANR	321803	ExpressionStatement	op = Z_REFVAL_P ( op )	798:3:19487:19506	321668	18	True				
ANR	321804	AssignmentExpression	op = Z_REFVAL_P ( op )		321668	0		=			
ANR	321805	Identifier	op		321668	0					
ANR	321806	CallExpression	Z_REFVAL_P ( op )		321668	1					
ANR	321807	Callee	Z_REFVAL_P		321668	0					
ANR	321808	Identifier	Z_REFVAL_P		321668	0					
ANR	321809	ArgumentList	op		321668	1					
ANR	321810	Argument	op		321668	0					
ANR	321811	Identifier	op		321668	0					
ANR	321812	GotoStatement	goto try_again ;	799:3:19511:19525	321668	19	True				
ANR	321813	Identifier	try_again		321668	0					
ANR	321814	Statement	EMPTY_SWITCH_DEFAULT_CASE	800:2:19529:19553	321668	20	True				
ANR	321815	Statement	(	800:27:19554:19554	321668	21	True				
ANR	321816	Statement	)	800:28:19555:19555	321668	22	True				
ANR	321817	ReturnStatement	return 0.0 ;	802:1:19561:19571	321668	2	True				
ANR	321818	PrimaryExpression	0.0		321668	0					
ANR	321819	ReturnType	ZEND_API double ZEND_FASTCALL		321668	1					
ANR	321820	Identifier	_zval_get_double_func		321668	2					
ANR	321821	ParameterList	zval * op		321668	3					
ANR	321822	Parameter	zval * op	767:52:18826:18833	321668	0	True				
ANR	321823	ParameterType	zval *		321668	0					
ANR	321824	Identifier	op		321668	1					
ANR	321825	CFGEntryNode	ENTRY		321668		True				
ANR	321826	CFGExitNode	EXIT		321668		True				
ANR	321827	Symbol	Z_RES_HANDLE_P		321668						
ANR	321828	Symbol	op		321668						
ANR	321829	Symbol	NULL		321668						
ANR	321830	Symbol	dst		321668						
ANR	321831	Symbol	zend_hash_num_elements		321668						
ANR	321832	Symbol	convert_to_double		321668						
ANR	321833	Symbol	Z_TYPE		321668						
ANR	321834	Symbol	Z_TYPE_P		321668						
ANR	321835	Symbol	& dst		321668						
ANR	321836	Symbol	Z_STRVAL_P		321668						
ANR	321837	Symbol	Z_DVAL		321668						
ANR	321838	Symbol	Z_DVAL_P		321668						
ANR	321839	Symbol	Z_LVAL_P		321668						
ANR	321840	Symbol	zend_strtod		321668						
ANR	321841	Symbol	Z_REFVAL_P		321668						
ANR	321842	Symbol	IS_DOUBLE		321668						
ANR	321843	Symbol	Z_ARRVAL_P		321668						
ANR	321844	Function	_zval_get_string_func	806:22:19608:21216							
ANR	321845	FunctionDef	_zval_get_string_func (zval * op)		321844	0					
ANR	321846	CompoundStatement		807:0:19664:21216	321844	0					
ANR	321847	Label	try_again :	808:0:19666:19675	321844	0	True				
ANR	321848	Identifier	try_again		321844	0					
ANR	321849	SwitchStatement	switch ( Z_TYPE_P ( op ) )		321844	1					
ANR	321850	Condition	Z_TYPE_P ( op )	809:9:19686:19697	321844	0	True				
ANR	321851	CallExpression	Z_TYPE_P ( op )		321844	0					
ANR	321852	Callee	Z_TYPE_P		321844	0					
ANR	321853	Identifier	Z_TYPE_P		321844	0					
ANR	321854	ArgumentList	op		321844	1					
ANR	321855	Argument	op		321844	0					
ANR	321856	Identifier	op		321844	0					
ANR	321857	CompoundStatement		3:23:35:35	321844	1					
ANR	321858	Label	case IS_UNDEF :	810:2:19704:19717	321844	0	True				
ANR	321859	Identifier	IS_UNDEF		321844	0					
ANR	321860	Label	case IS_NULL :	811:2:19721:19733	321844	1	True				
ANR	321861	Identifier	IS_NULL		321844	0					
ANR	321862	Label	case IS_FALSE :	812:2:19737:19750	321844	2	True				
ANR	321863	Identifier	IS_FALSE		321844	0					
ANR	321864	ReturnStatement	return ZSTR_EMPTY_ALLOC ( ) ;	813:3:19755:19780	321844	3	True				
ANR	321865	CallExpression	ZSTR_EMPTY_ALLOC ( )		321844	0					
ANR	321866	Callee	ZSTR_EMPTY_ALLOC		321844	0					
ANR	321867	Identifier	ZSTR_EMPTY_ALLOC		321844	0					
ANR	321868	ArgumentList			321844	1					
ANR	321869	Label	case IS_TRUE :	814:2:19784:19796	321844	4	True				
ANR	321870	Identifier	IS_TRUE		321844	0					
ANR	321871	IfStatement	if ( CG ( one_char_string ) [ '1' ] )		321844	5					
ANR	321872	Condition	CG ( one_char_string ) [ '1' ]	815:7:19805:19828	321844	0	True				
ANR	321873	ArrayIndexing	CG ( one_char_string ) [ '1' ]		321844	0					
ANR	321874	CallExpression	CG ( one_char_string )		321844	0					
ANR	321875	Callee	CG		321844	0					
ANR	321876	Identifier	CG		321844	0					
ANR	321877	ArgumentList	one_char_string		321844	1					
ANR	321878	Argument	one_char_string		321844	0					
ANR	321879	Identifier	one_char_string		321844	0					
ANR	321880	PrimaryExpression	'1'		321844	1					
ANR	321881	CompoundStatement		9:33:166:166	321844	1					
ANR	321882	ReturnStatement	return CG ( one_char_string ) [ '1' ] ;	816:4:19837:19868	321844	0	True				
ANR	321883	ArrayIndexing	CG ( one_char_string ) [ '1' ]		321844	0					
ANR	321884	CallExpression	CG ( one_char_string )		321844	0					
ANR	321885	Callee	CG		321844	0					
ANR	321886	Identifier	CG		321844	0					
ANR	321887	ArgumentList	one_char_string		321844	1					
ANR	321888	Argument	one_char_string		321844	0					
ANR	321889	Identifier	one_char_string		321844	0					
ANR	321890	PrimaryExpression	'1'		321844	1					
ANR	321891	ElseStatement	else		321844	0					
ANR	321892	CompoundStatement		11:10:215:215	321844	0					
ANR	321893	ReturnStatement	"return zend_string_init ( ""1"" , 1 , 0 ) ;"	818:4:19886:19920	321844	0	True				
ANR	321894	CallExpression	"zend_string_init ( ""1"" , 1 , 0 )"		321844	0					
ANR	321895	Callee	zend_string_init		321844	0					
ANR	321896	Identifier	zend_string_init		321844	0					
ANR	321897	ArgumentList	"""1"""		321844	1					
ANR	321898	Argument	"""1"""		321844	0					
ANR	321899	PrimaryExpression	"""1"""		321844	0					
ANR	321900	Argument	1		321844	1					
ANR	321901	PrimaryExpression	1		321844	0					
ANR	321902	Argument	0		321844	2					
ANR	321903	PrimaryExpression	0		321844	0					
ANR	321904	Label	case IS_RESOURCE :	820:2:19929:19945	321844	6	True				
ANR	321905	Identifier	IS_RESOURCE		321844	0					
ANR	321906	CompoundStatement		16:3:346:353	321844	7					
ANR	321907	IdentifierDeclStatement	"char buf [ sizeof ( ""Resource id #"" ) + MAX_LENGTH_OF_LONG ] ;"	821:3:19952:20006	321844	0	True				
ANR	321908	IdentifierDecl	"buf [ sizeof ( ""Resource id #"" ) + MAX_LENGTH_OF_LONG ]"		321844	0					
ANR	321909	IdentifierDeclType	"char [ sizeof ( ""Resource id #"" ) + MAX_LENGTH_OF_LONG ]"		321844	0					
ANR	321910	Identifier	buf		321844	1					
ANR	321911	AdditiveExpression	"sizeof ( ""Resource id #"" ) + MAX_LENGTH_OF_LONG"		321844	2		+			
ANR	321912	SizeofExpression	"sizeof ( ""Resource id #"" )"		321844	0					
ANR	321913	Sizeof	sizeof		321844	0					
ANR	321914	PrimaryExpression	"""Resource id #"""		321844	1					
ANR	321915	Identifier	MAX_LENGTH_OF_LONG		321844	1					
ANR	321916	IdentifierDeclStatement	int len ;	822:3:20011:20018	321844	1	True				
ANR	321917	IdentifierDecl	len		321844	0					
ANR	321918	IdentifierDeclType	int		321844	0					
ANR	321919	Identifier	len		321844	1					
ANR	321920	Statement	len	824:3:20024:20026	321844	2	True				
ANR	321921	Statement	=	824:7:20028:20028	321844	3	True				
ANR	321922	Statement	snprintf	824:9:20030:20037	321844	4	True				
ANR	321923	Statement	(	824:17:20038:20038	321844	5	True				
ANR	321924	Statement	buf	824:18:20039:20041	321844	6	True				
ANR	321925	Statement	","	824:21:20042:20042	321844	7	True				
ANR	321926	Statement	sizeof	824:23:20044:20049	321844	8	True				
ANR	321927	Statement	(	824:29:20050:20050	321844	9	True				
ANR	321928	Statement	buf	824:30:20051:20053	321844	10	True				
ANR	321929	Statement	)	824:33:20054:20054	321844	11	True				
ANR	321930	Statement	","	824:34:20055:20055	321844	12	True				
ANR	321931	Statement	"""Resource id #"""	824:36:20057:20071	321844	13	True				
ANR	321932	Statement	ZEND_LONG_FMT	824:52:20073:20085	321844	14	True				
ANR	321933	Statement	","	824:65:20086:20086	321844	15	True				
ANR	321934	Statement	(	824:67:20088:20088	321844	16	True				
ANR	321935	Statement	zend_long	824:68:20089:20097	321844	17	True				
ANR	321936	Statement	)	824:77:20098:20098	321844	18	True				
ANR	321937	Statement	Z_RES_HANDLE_P	824:78:20099:20112	321844	19	True				
ANR	321938	Statement	(	824:92:20113:20113	321844	20	True				
ANR	321939	Statement	op	824:93:20114:20115	321844	21	True				
ANR	321940	Statement	)	824:95:20116:20116	321844	22	True				
ANR	321941	Statement	)	824:96:20117:20117	321844	23	True				
ANR	321942	ExpressionStatement		824:97:20118:20118	321844	24	True				
ANR	321943	ReturnStatement	"return zend_string_init ( buf , len , 0 ) ;"	825:3:20123:20159	321844	25	True				
ANR	321944	CallExpression	"zend_string_init ( buf , len , 0 )"		321844	0					
ANR	321945	Callee	zend_string_init		321844	0					
ANR	321946	Identifier	zend_string_init		321844	0					
ANR	321947	ArgumentList	buf		321844	1					
ANR	321948	Argument	buf		321844	0					
ANR	321949	Identifier	buf		321844	0					
ANR	321950	Argument	len		321844	1					
ANR	321951	Identifier	len		321844	0					
ANR	321952	Argument	0		321844	2					
ANR	321953	PrimaryExpression	0		321844	0					
ANR	321954	Label	case IS_LONG :	827:2:20167:20179	321844	8	True				
ANR	321955	Identifier	IS_LONG		321844	0					
ANR	321956	CompoundStatement		21:16:516:516	321844	9					
ANR	321957	ReturnStatement	return zend_long_to_str ( Z_LVAL_P ( op ) ) ;	828:3:20186:20223	321844	0	True				
ANR	321958	CallExpression	zend_long_to_str ( Z_LVAL_P ( op ) )		321844	0					
ANR	321959	Callee	zend_long_to_str		321844	0					
ANR	321960	Identifier	zend_long_to_str		321844	0					
ANR	321961	ArgumentList	Z_LVAL_P ( op )		321844	1					
ANR	321962	Argument	Z_LVAL_P ( op )		321844	0					
ANR	321963	CallExpression	Z_LVAL_P ( op )		321844	0					
ANR	321964	Callee	Z_LVAL_P		321844	0					
ANR	321965	Identifier	Z_LVAL_P		321844	0					
ANR	321966	ArgumentList	op		321844	1					
ANR	321967	Argument	op		321844	0					
ANR	321968	Identifier	op		321844	0					
ANR	321969	Label	case IS_DOUBLE :	830:2:20231:20245	321844	10	True				
ANR	321970	Identifier	IS_DOUBLE		321844	0					
ANR	321971	CompoundStatement		24:18:582:582	321844	11					
ANR	321972	ReturnStatement	"return zend_strpprintf ( 0 , ""%.*G"" , ( int ) EG ( precision ) , Z_DVAL_P ( op ) ) ;"	831:3:20252:20320	321844	0	True				
ANR	321973	CallExpression	"zend_strpprintf ( 0 , ""%.*G"" , ( int ) EG ( precision ) , Z_DVAL_P ( op ) )"		321844	0					
ANR	321974	Callee	zend_strpprintf		321844	0					
ANR	321975	Identifier	zend_strpprintf		321844	0					
ANR	321976	ArgumentList	0		321844	1					
ANR	321977	Argument	0		321844	0					
ANR	321978	PrimaryExpression	0		321844	0					
ANR	321979	Argument	"""%.*G"""		321844	1					
ANR	321980	PrimaryExpression	"""%.*G"""		321844	0					
ANR	321981	Argument	( int ) EG ( precision )		321844	2					
ANR	321982	CastExpression	( int ) EG ( precision )		321844	0					
ANR	321983	CastTarget	int		321844	0					
ANR	321984	CallExpression	EG ( precision )		321844	1					
ANR	321985	Callee	EG		321844	0					
ANR	321986	Identifier	EG		321844	0					
ANR	321987	ArgumentList	precision		321844	1					
ANR	321988	Argument	precision		321844	0					
ANR	321989	Identifier	precision		321844	0					
ANR	321990	Argument	Z_DVAL_P ( op )		321844	3					
ANR	321991	CallExpression	Z_DVAL_P ( op )		321844	0					
ANR	321992	Callee	Z_DVAL_P		321844	0					
ANR	321993	Identifier	Z_DVAL_P		321844	0					
ANR	321994	ArgumentList	op		321844	1					
ANR	321995	Argument	op		321844	0					
ANR	321996	Identifier	op		321844	0					
ANR	321997	Label	case IS_ARRAY :	833:2:20328:20341	321844	12	True				
ANR	321998	Identifier	IS_ARRAY		321844	0					
ANR	321999	ExpressionStatement	"zend_error ( E_NOTICE , ""Array to string conversion"" )"	834:3:20346:20396	321844	13	True				
ANR	322000	CallExpression	"zend_error ( E_NOTICE , ""Array to string conversion"" )"		321844	0					
ANR	322001	Callee	zend_error		321844	0					
ANR	322002	Identifier	zend_error		321844	0					
ANR	322003	ArgumentList	E_NOTICE		321844	1					
ANR	322004	Argument	E_NOTICE		321844	0					
ANR	322005	Identifier	E_NOTICE		321844	0					
ANR	322006	Argument	"""Array to string conversion"""		321844	1					
ANR	322007	PrimaryExpression	"""Array to string conversion"""		321844	0					
ANR	322008	ReturnStatement	"return zend_string_init ( ""Array"" , sizeof ( ""Array"" ) - 1 , 0 ) ;"	835:3:20401:20455	321844	14	True				
ANR	322009	CallExpression	"zend_string_init ( ""Array"" , sizeof ( ""Array"" ) - 1 , 0 )"		321844	0					
ANR	322010	Callee	zend_string_init		321844	0					
ANR	322011	Identifier	zend_string_init		321844	0					
ANR	322012	ArgumentList	"""Array"""		321844	1					
ANR	322013	Argument	"""Array"""		321844	0					
ANR	322014	PrimaryExpression	"""Array"""		321844	0					
ANR	322015	Argument	"sizeof ( ""Array"" ) - 1"		321844	1					
ANR	322016	AdditiveExpression	"sizeof ( ""Array"" ) - 1"		321844	0		-			
ANR	322017	SizeofExpression	"sizeof ( ""Array"" )"		321844	0					
ANR	322018	Sizeof	sizeof		321844	0					
ANR	322019	PrimaryExpression	"""Array"""		321844	1					
ANR	322020	PrimaryExpression	1		321844	1					
ANR	322021	Argument	0		321844	2					
ANR	322022	PrimaryExpression	0		321844	0					
ANR	322023	Label	case IS_OBJECT :	836:2:20459:20473	321844	15	True				
ANR	322024	Identifier	IS_OBJECT		321844	0					
ANR	322025	CompoundStatement		31:3:815:823	321844	16					
ANR	322026	IdentifierDeclStatement	zval tmp ;	837:3:20480:20488	321844	0	True				
ANR	322027	IdentifierDecl	tmp		321844	0					
ANR	322028	IdentifierDeclType	zval		321844	0					
ANR	322029	Identifier	tmp		321844	1					
ANR	322030	IfStatement	if ( Z_OBJ_HT_P ( op ) -> cast_object )		321844	1					
ANR	322031	Condition	Z_OBJ_HT_P ( op ) -> cast_object	838:7:20497:20523	321844	0	True				
ANR	322032	PtrMemberAccess	Z_OBJ_HT_P ( op ) -> cast_object		321844	0					
ANR	322033	CallExpression	Z_OBJ_HT_P ( op )		321844	0					
ANR	322034	Callee	Z_OBJ_HT_P		321844	0					
ANR	322035	Identifier	Z_OBJ_HT_P		321844	0					
ANR	322036	ArgumentList	op		321844	1					
ANR	322037	Argument	op		321844	0					
ANR	322038	Identifier	op		321844	0					
ANR	322039	Identifier	cast_object		321844	1					
ANR	322040	CompoundStatement		32:36:861:861	321844	1					
ANR	322041	IfStatement	"if ( Z_OBJ_HT_P ( op ) -> cast_object ( op , & tmp , IS_STRING ) == SUCCESS )"		321844	0					
ANR	322042	Condition	"Z_OBJ_HT_P ( op ) -> cast_object ( op , & tmp , IS_STRING ) == SUCCESS"	839:8:20536:20594	321844	0	True				
ANR	322043	EqualityExpression	"Z_OBJ_HT_P ( op ) -> cast_object ( op , & tmp , IS_STRING ) == SUCCESS"		321844	0		==			
ANR	322044	CallExpression	"Z_OBJ_HT_P ( op ) -> cast_object ( op , & tmp , IS_STRING )"		321844	0					
ANR	322045	Callee	Z_OBJ_HT_P ( op ) -> cast_object		321844	0					
ANR	322046	PtrMemberAccess	Z_OBJ_HT_P ( op ) -> cast_object		321844	0					
ANR	322047	CallExpression	Z_OBJ_HT_P ( op )		321844	0					
ANR	322048	Callee	Z_OBJ_HT_P		321844	0					
ANR	322049	Identifier	Z_OBJ_HT_P		321844	0					
ANR	322050	ArgumentList	op		321844	1					
ANR	322051	Argument	op		321844	0					
ANR	322052	Identifier	op		321844	0					
ANR	322053	Identifier	cast_object		321844	1					
ANR	322054	ArgumentList	op		321844	1					
ANR	322055	Argument	op		321844	0					
ANR	322056	Identifier	op		321844	0					
ANR	322057	Argument	& tmp		321844	1					
ANR	322058	UnaryOperationExpression	& tmp		321844	0					
ANR	322059	UnaryOperator	&		321844	0					
ANR	322060	Identifier	tmp		321844	1					
ANR	322061	Argument	IS_STRING		321844	2					
ANR	322062	Identifier	IS_STRING		321844	0					
ANR	322063	Identifier	SUCCESS		321844	1					
ANR	322064	CompoundStatement		33:69:932:932	321844	1					
ANR	322065	ReturnStatement	return Z_STR ( tmp ) ;	840:5:20604:20621	321844	0	True				
ANR	322066	CallExpression	Z_STR ( tmp )		321844	0					
ANR	322067	Callee	Z_STR		321844	0					
ANR	322068	Identifier	Z_STR		321844	0					
ANR	322069	ArgumentList	tmp		321844	1					
ANR	322070	Argument	tmp		321844	0					
ANR	322071	Identifier	tmp		321844	0					
ANR	322072	ElseStatement	else		321844	0					
ANR	322073	IfStatement	if ( Z_OBJ_HT_P ( op ) -> get )		321844	0					
ANR	322074	Condition	Z_OBJ_HT_P ( op ) -> get	842:14:20643:20661	321844	0	True				
ANR	322075	PtrMemberAccess	Z_OBJ_HT_P ( op ) -> get		321844	0					
ANR	322076	CallExpression	Z_OBJ_HT_P ( op )		321844	0					
ANR	322077	Callee	Z_OBJ_HT_P		321844	0					
ANR	322078	Identifier	Z_OBJ_HT_P		321844	0					
ANR	322079	ArgumentList	op		321844	1					
ANR	322080	Argument	op		321844	0					
ANR	322081	Identifier	op		321844	0					
ANR	322082	Identifier	get		321844	1					
ANR	322083	CompoundStatement		37:4:1005:1044	321844	1					
ANR	322084	IdentifierDeclStatement	"zval * z = Z_OBJ_HT_P ( op ) -> get ( op , & tmp ) ;"	843:4:20670:20709	321844	0	True				
ANR	322085	IdentifierDecl	"* z = Z_OBJ_HT_P ( op ) -> get ( op , & tmp )"		321844	0					
ANR	322086	IdentifierDeclType	zval *		321844	0					
ANR	322087	Identifier	z		321844	1					
ANR	322088	AssignmentExpression	"* z = Z_OBJ_HT_P ( op ) -> get ( op , & tmp )"		321844	2		=			
ANR	322089	Identifier	z		321844	0					
ANR	322090	CallExpression	"Z_OBJ_HT_P ( op ) -> get ( op , & tmp )"		321844	1					
ANR	322091	Callee	Z_OBJ_HT_P ( op ) -> get		321844	0					
ANR	322092	PtrMemberAccess	Z_OBJ_HT_P ( op ) -> get		321844	0					
ANR	322093	CallExpression	Z_OBJ_HT_P ( op )		321844	0					
ANR	322094	Callee	Z_OBJ_HT_P		321844	0					
ANR	322095	Identifier	Z_OBJ_HT_P		321844	0					
ANR	322096	ArgumentList	op		321844	1					
ANR	322097	Argument	op		321844	0					
ANR	322098	Identifier	op		321844	0					
ANR	322099	Identifier	get		321844	1					
ANR	322100	ArgumentList	op		321844	1					
ANR	322101	Argument	op		321844	0					
ANR	322102	Identifier	op		321844	0					
ANR	322103	Argument	& tmp		321844	1					
ANR	322104	UnaryOperationExpression	& tmp		321844	0					
ANR	322105	UnaryOperator	&		321844	0					
ANR	322106	Identifier	tmp		321844	1					
ANR	322107	IfStatement	if ( Z_TYPE_P ( z ) != IS_OBJECT )		321844	1					
ANR	322108	Condition	Z_TYPE_P ( z ) != IS_OBJECT	844:8:20719:20742	321844	0	True				
ANR	322109	EqualityExpression	Z_TYPE_P ( z ) != IS_OBJECT		321844	0		!=			
ANR	322110	CallExpression	Z_TYPE_P ( z )		321844	0					
ANR	322111	Callee	Z_TYPE_P		321844	0					
ANR	322112	Identifier	Z_TYPE_P		321844	0					
ANR	322113	ArgumentList	z		321844	1					
ANR	322114	Argument	z		321844	0					
ANR	322115	Identifier	z		321844	0					
ANR	322116	Identifier	IS_OBJECT		321844	1					
ANR	322117	CompoundStatement		39:5:1087:1124	321844	1					
ANR	322118	IdentifierDeclStatement	zend_string * str = zval_get_string ( z ) ;	845:5:20752:20789	321844	0	True				
ANR	322119	IdentifierDecl	* str = zval_get_string ( z )		321844	0					
ANR	322120	IdentifierDeclType	zend_string *		321844	0					
ANR	322121	Identifier	str		321844	1					
ANR	322122	AssignmentExpression	* str = zval_get_string ( z )		321844	2		=			
ANR	322123	Identifier	str		321844	0					
ANR	322124	CallExpression	zval_get_string ( z )		321844	1					
ANR	322125	Callee	zval_get_string		321844	0					
ANR	322126	Identifier	zval_get_string		321844	0					
ANR	322127	ArgumentList	z		321844	1					
ANR	322128	Argument	z		321844	0					
ANR	322129	Identifier	z		321844	0					
ANR	322130	ExpressionStatement	zval_ptr_dtor ( z )	846:5:20796:20812	321844	1	True				
ANR	322131	CallExpression	zval_ptr_dtor ( z )		321844	0					
ANR	322132	Callee	zval_ptr_dtor		321844	0					
ANR	322133	Identifier	zval_ptr_dtor		321844	0					
ANR	322134	ArgumentList	z		321844	1					
ANR	322135	Argument	z		321844	0					
ANR	322136	Identifier	z		321844	0					
ANR	322137	ReturnStatement	return str ;	847:5:20819:20829	321844	2	True				
ANR	322138	Identifier	str		321844	0					
ANR	322139	ExpressionStatement	zval_ptr_dtor ( z )	849:4:20841:20857	321844	2	True				
ANR	322140	CallExpression	zval_ptr_dtor ( z )		321844	0					
ANR	322141	Callee	zval_ptr_dtor		321844	0					
ANR	322142	Identifier	zval_ptr_dtor		321844	0					
ANR	322143	ArgumentList	z		321844	1					
ANR	322144	Argument	z		321844	0					
ANR	322145	Identifier	z		321844	0					
ANR	322146	ExpressionStatement	"zend_error ( EG ( exception ) ? E_ERROR : E_RECOVERABLE_ERROR , ""Object of class %s could not be converted to string"" , ZSTR_VAL ( Z_OBJCE_P ( op ) -> name ) )"	851:3:20867:21010	321844	2	True				
ANR	322147	CallExpression	"zend_error ( EG ( exception ) ? E_ERROR : E_RECOVERABLE_ERROR , ""Object of class %s could not be converted to string"" , ZSTR_VAL ( Z_OBJCE_P ( op ) -> name ) )"		321844	0					
ANR	322148	Callee	zend_error		321844	0					
ANR	322149	Identifier	zend_error		321844	0					
ANR	322150	ArgumentList	EG ( exception ) ? E_ERROR : E_RECOVERABLE_ERROR		321844	1					
ANR	322151	Argument	EG ( exception ) ? E_ERROR : E_RECOVERABLE_ERROR		321844	0					
ANR	322152	ConditionalExpression	EG ( exception ) ? E_ERROR : E_RECOVERABLE_ERROR		321844	0					
ANR	322153	Condition	EG ( exception )		321844	0					
ANR	322154	CallExpression	EG ( exception )		321844	0					
ANR	322155	Callee	EG		321844	0					
ANR	322156	Identifier	EG		321844	0					
ANR	322157	ArgumentList	exception		321844	1					
ANR	322158	Argument	exception		321844	0					
ANR	322159	Identifier	exception		321844	0					
ANR	322160	Identifier	E_ERROR		321844	1					
ANR	322161	Identifier	E_RECOVERABLE_ERROR		321844	2					
ANR	322162	Argument	"""Object of class %s could not be converted to string"""		321844	1					
ANR	322163	PrimaryExpression	"""Object of class %s could not be converted to string"""		321844	0					
ANR	322164	Argument	ZSTR_VAL ( Z_OBJCE_P ( op ) -> name )		321844	2					
ANR	322165	CallExpression	ZSTR_VAL ( Z_OBJCE_P ( op ) -> name )		321844	0					
ANR	322166	Callee	ZSTR_VAL		321844	0					
ANR	322167	Identifier	ZSTR_VAL		321844	0					
ANR	322168	ArgumentList	Z_OBJCE_P ( op ) -> name		321844	1					
ANR	322169	Argument	Z_OBJCE_P ( op ) -> name		321844	0					
ANR	322170	PtrMemberAccess	Z_OBJCE_P ( op ) -> name		321844	0					
ANR	322171	CallExpression	Z_OBJCE_P ( op )		321844	0					
ANR	322172	Callee	Z_OBJCE_P		321844	0					
ANR	322173	Identifier	Z_OBJCE_P		321844	0					
ANR	322174	ArgumentList	op		321844	1					
ANR	322175	Argument	op		321844	0					
ANR	322176	Identifier	op		321844	0					
ANR	322177	Identifier	name		321844	1					
ANR	322178	ReturnStatement	return ZSTR_EMPTY_ALLOC ( ) ;	852:3:21015:21040	321844	3	True				
ANR	322179	CallExpression	ZSTR_EMPTY_ALLOC ( )		321844	0					
ANR	322180	Callee	ZSTR_EMPTY_ALLOC		321844	0					
ANR	322181	Identifier	ZSTR_EMPTY_ALLOC		321844	0					
ANR	322182	ArgumentList			321844	1					
ANR	322183	Label	case IS_REFERENCE :	854:2:21048:21065	321844	17	True				
ANR	322184	Identifier	IS_REFERENCE		321844	0					
ANR	322185	ExpressionStatement	op = Z_REFVAL_P ( op )	855:3:21070:21089	321844	18	True				
ANR	322186	AssignmentExpression	op = Z_REFVAL_P ( op )		321844	0		=			
ANR	322187	Identifier	op		321844	0					
ANR	322188	CallExpression	Z_REFVAL_P ( op )		321844	1					
ANR	322189	Callee	Z_REFVAL_P		321844	0					
ANR	322190	Identifier	Z_REFVAL_P		321844	0					
ANR	322191	ArgumentList	op		321844	1					
ANR	322192	Argument	op		321844	0					
ANR	322193	Identifier	op		321844	0					
ANR	322194	GotoStatement	goto try_again ;	856:3:21094:21108	321844	19	True				
ANR	322195	Identifier	try_again		321844	0					
ANR	322196	Label	case IS_STRING :	857:2:21112:21126	321844	20	True				
ANR	322197	Identifier	IS_STRING		321844	0					
ANR	322198	ReturnStatement	return zend_string_copy ( Z_STR_P ( op ) ) ;	858:3:21131:21167	321844	21	True				
ANR	322199	CallExpression	zend_string_copy ( Z_STR_P ( op ) )		321844	0					
ANR	322200	Callee	zend_string_copy		321844	0					
ANR	322201	Identifier	zend_string_copy		321844	0					
ANR	322202	ArgumentList	Z_STR_P ( op )		321844	1					
ANR	322203	Argument	Z_STR_P ( op )		321844	0					
ANR	322204	CallExpression	Z_STR_P ( op )		321844	0					
ANR	322205	Callee	Z_STR_P		321844	0					
ANR	322206	Identifier	Z_STR_P		321844	0					
ANR	322207	ArgumentList	op		321844	1					
ANR	322208	Argument	op		321844	0					
ANR	322209	Identifier	op		321844	0					
ANR	322210	Statement	EMPTY_SWITCH_DEFAULT_CASE	859:2:21171:21195	321844	22	True				
ANR	322211	Statement	(	859:27:21196:21196	321844	23	True				
ANR	322212	Statement	)	859:28:21197:21197	321844	24	True				
ANR	322213	ReturnStatement	return NULL ;	861:1:21203:21214	321844	2	True				
ANR	322214	Identifier	NULL		321844	0					
ANR	322215	ReturnType	ZEND_FASTCALL		321844	1					
ANR	322216	Identifier	_zval_get_string_func		321844	2					
ANR	322217	ParameterList	zval * op		321844	3					
ANR	322218	Parameter	zval * op	806:58:19644:19651	321844	0	True				
ANR	322219	ParameterType	zval *		321844	0					
ANR	322220	Identifier	op		321844	1					
ANR	322221	CFGEntryNode	ENTRY		321844		True				
ANR	322222	CFGExitNode	EXIT		321844		True				
ANR	322223	Symbol	exception		321844						
ANR	322224	Symbol	E_RECOVERABLE_ERROR		321844						
ANR	322225	Symbol	precision		321844						
ANR	322226	Symbol	* CG		321844						
ANR	322227	Symbol	zend_long_to_str		321844						
ANR	322228	Symbol	Z_STR		321844						
ANR	322229	Symbol	ZSTR_EMPTY_ALLOC		321844						
ANR	322230	Symbol	one_char_string		321844						
ANR	322231	Symbol	zend_string_init		321844						
ANR	322232	Symbol	len		321844						
ANR	322233	Symbol	tmp		321844						
ANR	322234	Symbol	Z_OBJCE_P		321844						
ANR	322235	Symbol	IS_STRING		321844						
ANR	322236	Symbol	* Z_OBJCE_P		321844						
ANR	322237	Symbol	op		321844						
ANR	322238	Symbol	zend_strpprintf		321844						
ANR	322239	Symbol	EG		321844						
ANR	322240	Symbol	SUCCESS		321844						
ANR	322241	Symbol	NULL		321844						
ANR	322242	Symbol	CG		321844						
ANR	322243	Symbol	E_NOTICE		321844						
ANR	322244	Symbol	zval_get_string		321844						
ANR	322245	Symbol	zend_string_copy		321844						
ANR	322246	Symbol	Z_TYPE_P		321844						
ANR	322247	Symbol	* Z_OBJ_HT_P		321844						
ANR	322248	Symbol	Z_DVAL_P		321844						
ANR	322249	Symbol	Z_LVAL_P		321844						
ANR	322250	Symbol	ZSTR_VAL		321844						
ANR	322251	Symbol	str		321844						
ANR	322252	Symbol	Z_OBJCE_P ( op ) -> name		321844						
ANR	322253	Symbol	buf		321844						
ANR	322254	Symbol	Z_OBJ_HT_P ( op ) -> get		321844						
ANR	322255	Symbol	E_ERROR		321844						
ANR	322256	Symbol	Z_REFVAL_P		321844						
ANR	322257	Symbol	Z_OBJ_HT_P		321844						
ANR	322258	Symbol	Z_OBJ_HT_P ( op ) -> cast_object		321844						
ANR	322259	Symbol	& tmp		321844						
ANR	322260	Symbol	z		321844						
ANR	322261	Symbol	Z_STR_P		321844						
ANR	322262	Symbol	IS_OBJECT		321844						
ANR	322263	Function	add_function	865:0:21229:23018							
ANR	322264	FunctionDef	"add_function (zval * result , zval * op1 , zval * op2)"		322263	0					
ANR	322265	CompoundStatement		866:0:21315:23018	322263	0					
ANR	322266	IdentifierDeclStatement	"zval op1_copy , op2_copy ;"	867:1:21318:21341	322263	0	True				
ANR	322267	IdentifierDecl	op1_copy		322263	0					
ANR	322268	IdentifierDeclType	zval		322263	0					
ANR	322269	Identifier	op1_copy		322263	1					
ANR	322270	IdentifierDecl	op2_copy		322263	1					
ANR	322271	IdentifierDeclType	zval		322263	0					
ANR	322272	Identifier	op2_copy		322263	1					
ANR	322273	IdentifierDeclStatement	int converted = 0 ;	868:1:21344:21361	322263	1	True				
ANR	322274	IdentifierDecl	converted = 0		322263	0					
ANR	322275	IdentifierDeclType	int		322263	0					
ANR	322276	Identifier	converted		322263	1					
ANR	322277	AssignmentExpression	converted = 0		322263	2		=			
ANR	322278	Identifier	converted		322263	0					
ANR	322279	PrimaryExpression	0		322263	1					
ANR	322280	WhileStatement	while ( 1 )		322263	2					
ANR	322281	Condition	1	870:8:21372:21372	322263	0	True				
ANR	322282	PrimaryExpression	1		322263	0					
ANR	322283	CompoundStatement		5:11:59:59	322263	1					
ANR	322284	SwitchStatement	"switch ( TYPE_PAIR ( Z_TYPE_P ( op1 ) , Z_TYPE_P ( op2 ) ) )"		322263	0					
ANR	322285	Condition	"TYPE_PAIR ( Z_TYPE_P ( op1 ) , Z_TYPE_P ( op2 ) )"	871:10:21387:21425	322263	0	True				
ANR	322286	CallExpression	"TYPE_PAIR ( Z_TYPE_P ( op1 ) , Z_TYPE_P ( op2 ) )"		322263	0					
ANR	322287	Callee	TYPE_PAIR		322263	0					
ANR	322288	Identifier	TYPE_PAIR		322263	0					
ANR	322289	ArgumentList	Z_TYPE_P ( op1 )		322263	1					
ANR	322290	Argument	Z_TYPE_P ( op1 )		322263	0					
ANR	322291	CallExpression	Z_TYPE_P ( op1 )		322263	0					
ANR	322292	Callee	Z_TYPE_P		322263	0					
ANR	322293	Identifier	Z_TYPE_P		322263	0					
ANR	322294	ArgumentList	op1		322263	1					
ANR	322295	Argument	op1		322263	0					
ANR	322296	Identifier	op1		322263	0					
ANR	322297	Argument	Z_TYPE_P ( op2 )		322263	1					
ANR	322298	CallExpression	Z_TYPE_P ( op2 )		322263	0					
ANR	322299	Callee	Z_TYPE_P		322263	0					
ANR	322300	Identifier	Z_TYPE_P		322263	0					
ANR	322301	ArgumentList	op2		322263	1					
ANR	322302	Argument	op2		322263	0					
ANR	322303	Identifier	op2		322263	0					
ANR	322304	CompoundStatement		6:51:112:112	322263	1					
ANR	322305	Statement	case	872:3:21433:21436	322263	0	True				
ANR	322306	Statement	TYPE_PAIR	872:8:21438:21446	322263	1	True				
ANR	322307	Statement	(	872:17:21447:21447	322263	2	True				
ANR	322308	Statement	IS_LONG	872:18:21448:21454	322263	3	True				
ANR	322309	Statement	","	872:25:21455:21455	322263	4	True				
ANR	322310	Statement	IS_LONG	872:27:21457:21463	322263	5	True				
ANR	322311	Statement	)	872:34:21464:21464	322263	6	True				
ANR	322312	Statement	:	872:35:21465:21465	322263	7	True				
ANR	322313	CompoundStatement		8:4:157:203	322263	8					
ANR	322314	IdentifierDeclStatement	zend_long lval = Z_LVAL_P ( op1 ) + Z_LVAL_P ( op2 ) ;	873:4:21473:21519	322263	0	True				
ANR	322315	IdentifierDecl	lval = Z_LVAL_P ( op1 ) + Z_LVAL_P ( op2 )		322263	0					
ANR	322316	IdentifierDeclType	zend_long		322263	0					
ANR	322317	Identifier	lval		322263	1					
ANR	322318	AssignmentExpression	lval = Z_LVAL_P ( op1 ) + Z_LVAL_P ( op2 )		322263	2		=			
ANR	322319	Identifier	lval		322263	0					
ANR	322320	AdditiveExpression	Z_LVAL_P ( op1 ) + Z_LVAL_P ( op2 )		322263	1		+			
ANR	322321	CallExpression	Z_LVAL_P ( op1 )		322263	0					
ANR	322322	Callee	Z_LVAL_P		322263	0					
ANR	322323	Identifier	Z_LVAL_P		322263	0					
ANR	322324	ArgumentList	op1		322263	1					
ANR	322325	Argument	op1		322263	0					
ANR	322326	Identifier	op1		322263	0					
ANR	322327	CallExpression	Z_LVAL_P ( op2 )		322263	1					
ANR	322328	Callee	Z_LVAL_P		322263	0					
ANR	322329	Identifier	Z_LVAL_P		322263	0					
ANR	322330	ArgumentList	op2		322263	1					
ANR	322331	Argument	op2		322263	0					
ANR	322332	Identifier	op2		322263	0					
ANR	322333	IfStatement	if ( ( Z_LVAL_P ( op1 ) & LONG_SIGN_MASK ) == ( Z_LVAL_P ( op2 ) & LONG_SIGN_MASK ) && ( Z_LVAL_P ( op1 ) & LONG_SIGN_MASK ) != ( lval & LONG_SIGN_MASK ) )		322263	1					
ANR	322334	Condition	( Z_LVAL_P ( op1 ) & LONG_SIGN_MASK ) == ( Z_LVAL_P ( op2 ) & LONG_SIGN_MASK ) && ( Z_LVAL_P ( op1 ) & LONG_SIGN_MASK ) != ( lval & LONG_SIGN_MASK )	876:8:21582:21717	322263	0	True				
ANR	322335	AndExpression	( Z_LVAL_P ( op1 ) & LONG_SIGN_MASK ) == ( Z_LVAL_P ( op2 ) & LONG_SIGN_MASK ) && ( Z_LVAL_P ( op1 ) & LONG_SIGN_MASK ) != ( lval & LONG_SIGN_MASK )		322263	0		&&			
ANR	322336	EqualityExpression	( Z_LVAL_P ( op1 ) & LONG_SIGN_MASK ) == ( Z_LVAL_P ( op2 ) & LONG_SIGN_MASK )		322263	0		==			
ANR	322337	BitAndExpression	Z_LVAL_P ( op1 ) & LONG_SIGN_MASK		322263	0		&			
ANR	322338	CallExpression	Z_LVAL_P ( op1 )		322263	0					
ANR	322339	Callee	Z_LVAL_P		322263	0					
ANR	322340	Identifier	Z_LVAL_P		322263	0					
ANR	322341	ArgumentList	op1		322263	1					
ANR	322342	Argument	op1		322263	0					
ANR	322343	Identifier	op1		322263	0					
ANR	322344	Identifier	LONG_SIGN_MASK		322263	1					
ANR	322345	BitAndExpression	Z_LVAL_P ( op2 ) & LONG_SIGN_MASK		322263	1		&			
ANR	322346	CallExpression	Z_LVAL_P ( op2 )		322263	0					
ANR	322347	Callee	Z_LVAL_P		322263	0					
ANR	322348	Identifier	Z_LVAL_P		322263	0					
ANR	322349	ArgumentList	op2		322263	1					
ANR	322350	Argument	op2		322263	0					
ANR	322351	Identifier	op2		322263	0					
ANR	322352	Identifier	LONG_SIGN_MASK		322263	1					
ANR	322353	EqualityExpression	( Z_LVAL_P ( op1 ) & LONG_SIGN_MASK ) != ( lval & LONG_SIGN_MASK )		322263	1		!=			
ANR	322354	BitAndExpression	Z_LVAL_P ( op1 ) & LONG_SIGN_MASK		322263	0		&			
ANR	322355	CallExpression	Z_LVAL_P ( op1 )		322263	0					
ANR	322356	Callee	Z_LVAL_P		322263	0					
ANR	322357	Identifier	Z_LVAL_P		322263	0					
ANR	322358	ArgumentList	op1		322263	1					
ANR	322359	Argument	op1		322263	0					
ANR	322360	Identifier	op1		322263	0					
ANR	322361	Identifier	LONG_SIGN_MASK		322263	1					
ANR	322362	BitAndExpression	lval & LONG_SIGN_MASK		322263	1		&			
ANR	322363	Identifier	lval		322263	0					
ANR	322364	Identifier	LONG_SIGN_MASK		322263	1					
ANR	322365	CompoundStatement		12:69:404:404	322263	1					
ANR	322366	ExpressionStatement	"ZVAL_DOUBLE ( result , ( double ) Z_LVAL_P ( op1 ) + ( double ) Z_LVAL_P ( op2 ) )"	879:5:21728:21796	322263	0	True				
ANR	322367	CallExpression	"ZVAL_DOUBLE ( result , ( double ) Z_LVAL_P ( op1 ) + ( double ) Z_LVAL_P ( op2 ) )"		322263	0					
ANR	322368	Callee	ZVAL_DOUBLE		322263	0					
ANR	322369	Identifier	ZVAL_DOUBLE		322263	0					
ANR	322370	ArgumentList	result		322263	1					
ANR	322371	Argument	result		322263	0					
ANR	322372	Identifier	result		322263	0					
ANR	322373	Argument	( double ) Z_LVAL_P ( op1 ) + ( double ) Z_LVAL_P ( op2 )		322263	1					
ANR	322374	AdditiveExpression	( double ) Z_LVAL_P ( op1 ) + ( double ) Z_LVAL_P ( op2 )		322263	0		+			
ANR	322375	CastExpression	( double ) Z_LVAL_P ( op1 )		322263	0					
ANR	322376	CastTarget	double		322263	0					
ANR	322377	CallExpression	Z_LVAL_P ( op1 )		322263	1					
ANR	322378	Callee	Z_LVAL_P		322263	0					
ANR	322379	Identifier	Z_LVAL_P		322263	0					
ANR	322380	ArgumentList	op1		322263	1					
ANR	322381	Argument	op1		322263	0					
ANR	322382	Identifier	op1		322263	0					
ANR	322383	CastExpression	( double ) Z_LVAL_P ( op2 )		322263	1					
ANR	322384	CastTarget	double		322263	0					
ANR	322385	CallExpression	Z_LVAL_P ( op2 )		322263	1					
ANR	322386	Callee	Z_LVAL_P		322263	0					
ANR	322387	Identifier	Z_LVAL_P		322263	0					
ANR	322388	ArgumentList	op2		322263	1					
ANR	322389	Argument	op2		322263	0					
ANR	322390	Identifier	op2		322263	0					
ANR	322391	ElseStatement	else		322263	0					
ANR	322392	CompoundStatement		15:11:493:493	322263	0					
ANR	322393	ExpressionStatement	"ZVAL_LONG ( result , lval )"	881:5:21816:21839	322263	0	True				
ANR	322394	CallExpression	"ZVAL_LONG ( result , lval )"		322263	0					
ANR	322395	Callee	ZVAL_LONG		322263	0					
ANR	322396	Identifier	ZVAL_LONG		322263	0					
ANR	322397	ArgumentList	result		322263	1					
ANR	322398	Argument	result		322263	0					
ANR	322399	Identifier	result		322263	0					
ANR	322400	Argument	lval		322263	1					
ANR	322401	Identifier	lval		322263	0					
ANR	322402	ReturnStatement	return SUCCESS ;	883:4:21851:21865	322263	2	True				
ANR	322403	Identifier	SUCCESS		322263	0					
ANR	322404	Statement	case	886:3:21876:21879	322263	9	True				
ANR	322405	Statement	TYPE_PAIR	886:8:21881:21889	322263	10	True				
ANR	322406	Statement	(	886:17:21890:21890	322263	11	True				
ANR	322407	Statement	IS_LONG	886:18:21891:21897	322263	12	True				
ANR	322408	Statement	","	886:25:21898:21898	322263	13	True				
ANR	322409	Statement	IS_DOUBLE	886:27:21900:21908	322263	14	True				
ANR	322410	Statement	)	886:36:21909:21909	322263	15	True				
ANR	322411	Statement	:	886:37:21910:21910	322263	16	True				
ANR	322412	ExpressionStatement	"ZVAL_DOUBLE ( result , ( ( double ) Z_LVAL_P ( op1 ) ) + Z_DVAL_P ( op2 ) )"	887:4:21916:21976	322263	17	True				
ANR	322413	CallExpression	"ZVAL_DOUBLE ( result , ( ( double ) Z_LVAL_P ( op1 ) ) + Z_DVAL_P ( op2 ) )"		322263	0					
ANR	322414	Callee	ZVAL_DOUBLE		322263	0					
ANR	322415	Identifier	ZVAL_DOUBLE		322263	0					
ANR	322416	ArgumentList	result		322263	1					
ANR	322417	Argument	result		322263	0					
ANR	322418	Identifier	result		322263	0					
ANR	322419	Argument	( ( double ) Z_LVAL_P ( op1 ) ) + Z_DVAL_P ( op2 )		322263	1					
ANR	322420	AdditiveExpression	( ( double ) Z_LVAL_P ( op1 ) ) + Z_DVAL_P ( op2 )		322263	0		+			
ANR	322421	CastExpression	( double ) Z_LVAL_P ( op1 )		322263	0					
ANR	322422	CastTarget	double		322263	0					
ANR	322423	CallExpression	Z_LVAL_P ( op1 )		322263	1					
ANR	322424	Callee	Z_LVAL_P		322263	0					
ANR	322425	Identifier	Z_LVAL_P		322263	0					
ANR	322426	ArgumentList	op1		322263	1					
ANR	322427	Argument	op1		322263	0					
ANR	322428	Identifier	op1		322263	0					
ANR	322429	CallExpression	Z_DVAL_P ( op2 )		322263	1					
ANR	322430	Callee	Z_DVAL_P		322263	0					
ANR	322431	Identifier	Z_DVAL_P		322263	0					
ANR	322432	ArgumentList	op2		322263	1					
ANR	322433	Argument	op2		322263	0					
ANR	322434	Identifier	op2		322263	0					
ANR	322435	ReturnStatement	return SUCCESS ;	888:4:21982:21996	322263	18	True				
ANR	322436	Identifier	SUCCESS		322263	0					
ANR	322437	Statement	case	890:3:22002:22005	322263	19	True				
ANR	322438	Statement	TYPE_PAIR	890:8:22007:22015	322263	20	True				
ANR	322439	Statement	(	890:17:22016:22016	322263	21	True				
ANR	322440	Statement	IS_DOUBLE	890:18:22017:22025	322263	22	True				
ANR	322441	Statement	","	890:27:22026:22026	322263	23	True				
ANR	322442	Statement	IS_LONG	890:29:22028:22034	322263	24	True				
ANR	322443	Statement	)	890:36:22035:22035	322263	25	True				
ANR	322444	Statement	:	890:37:22036:22036	322263	26	True				
ANR	322445	ExpressionStatement	"ZVAL_DOUBLE ( result , Z_DVAL_P ( op1 ) + ( ( double ) Z_LVAL_P ( op2 ) ) )"	891:4:22042:22102	322263	27	True				
ANR	322446	CallExpression	"ZVAL_DOUBLE ( result , Z_DVAL_P ( op1 ) + ( ( double ) Z_LVAL_P ( op2 ) ) )"		322263	0					
ANR	322447	Callee	ZVAL_DOUBLE		322263	0					
ANR	322448	Identifier	ZVAL_DOUBLE		322263	0					
ANR	322449	ArgumentList	result		322263	1					
ANR	322450	Argument	result		322263	0					
ANR	322451	Identifier	result		322263	0					
ANR	322452	Argument	Z_DVAL_P ( op1 ) + ( ( double ) Z_LVAL_P ( op2 ) )		322263	1					
ANR	322453	AdditiveExpression	Z_DVAL_P ( op1 ) + ( ( double ) Z_LVAL_P ( op2 ) )		322263	0		+			
ANR	322454	CallExpression	Z_DVAL_P ( op1 )		322263	0					
ANR	322455	Callee	Z_DVAL_P		322263	0					
ANR	322456	Identifier	Z_DVAL_P		322263	0					
ANR	322457	ArgumentList	op1		322263	1					
ANR	322458	Argument	op1		322263	0					
ANR	322459	Identifier	op1		322263	0					
ANR	322460	CastExpression	( double ) Z_LVAL_P ( op2 )		322263	1					
ANR	322461	CastTarget	double		322263	0					
ANR	322462	CallExpression	Z_LVAL_P ( op2 )		322263	1					
ANR	322463	Callee	Z_LVAL_P		322263	0					
ANR	322464	Identifier	Z_LVAL_P		322263	0					
ANR	322465	ArgumentList	op2		322263	1					
ANR	322466	Argument	op2		322263	0					
ANR	322467	Identifier	op2		322263	0					
ANR	322468	ReturnStatement	return SUCCESS ;	892:4:22108:22122	322263	28	True				
ANR	322469	Identifier	SUCCESS		322263	0					
ANR	322470	Statement	case	894:3:22128:22131	322263	29	True				
ANR	322471	Statement	TYPE_PAIR	894:8:22133:22141	322263	30	True				
ANR	322472	Statement	(	894:17:22142:22142	322263	31	True				
ANR	322473	Statement	IS_DOUBLE	894:18:22143:22151	322263	32	True				
ANR	322474	Statement	","	894:27:22152:22152	322263	33	True				
ANR	322475	Statement	IS_DOUBLE	894:29:22154:22162	322263	34	True				
ANR	322476	Statement	)	894:38:22163:22163	322263	35	True				
ANR	322477	Statement	:	894:39:22164:22164	322263	36	True				
ANR	322478	ExpressionStatement	"ZVAL_DOUBLE ( result , Z_DVAL_P ( op1 ) + Z_DVAL_P ( op2 ) )"	895:4:22170:22220	322263	37	True				
ANR	322479	CallExpression	"ZVAL_DOUBLE ( result , Z_DVAL_P ( op1 ) + Z_DVAL_P ( op2 ) )"		322263	0					
ANR	322480	Callee	ZVAL_DOUBLE		322263	0					
ANR	322481	Identifier	ZVAL_DOUBLE		322263	0					
ANR	322482	ArgumentList	result		322263	1					
ANR	322483	Argument	result		322263	0					
ANR	322484	Identifier	result		322263	0					
ANR	322485	Argument	Z_DVAL_P ( op1 ) + Z_DVAL_P ( op2 )		322263	1					
ANR	322486	AdditiveExpression	Z_DVAL_P ( op1 ) + Z_DVAL_P ( op2 )		322263	0		+			
ANR	322487	CallExpression	Z_DVAL_P ( op1 )		322263	0					
ANR	322488	Callee	Z_DVAL_P		322263	0					
ANR	322489	Identifier	Z_DVAL_P		322263	0					
ANR	322490	ArgumentList	op1		322263	1					
ANR	322491	Argument	op1		322263	0					
ANR	322492	Identifier	op1		322263	0					
ANR	322493	CallExpression	Z_DVAL_P ( op2 )		322263	1					
ANR	322494	Callee	Z_DVAL_P		322263	0					
ANR	322495	Identifier	Z_DVAL_P		322263	0					
ANR	322496	ArgumentList	op2		322263	1					
ANR	322497	Argument	op2		322263	0					
ANR	322498	Identifier	op2		322263	0					
ANR	322499	ReturnStatement	return SUCCESS ;	896:4:22226:22240	322263	38	True				
ANR	322500	Identifier	SUCCESS		322263	0					
ANR	322501	Statement	case	898:3:22246:22249	322263	39	True				
ANR	322502	Statement	TYPE_PAIR	898:8:22251:22259	322263	40	True				
ANR	322503	Statement	(	898:17:22260:22260	322263	41	True				
ANR	322504	Statement	IS_ARRAY	898:18:22261:22268	322263	42	True				
ANR	322505	Statement	","	898:26:22269:22269	322263	43	True				
ANR	322506	Statement	IS_ARRAY	898:28:22271:22278	322263	44	True				
ANR	322507	Statement	)	898:36:22279:22279	322263	45	True				
ANR	322508	Statement	:	898:37:22280:22280	322263	46	True				
ANR	322509	IfStatement	if ( ( result == op1 ) && ( result == op2 ) )		322263	47					
ANR	322510	Condition	( result == op1 ) && ( result == op2 )	899:8:22290:22323	322263	0	True				
ANR	322511	AndExpression	( result == op1 ) && ( result == op2 )		322263	0		&&			
ANR	322512	EqualityExpression	result == op1		322263	0		==			
ANR	322513	Identifier	result		322263	0					
ANR	322514	Identifier	op1		322263	1					
ANR	322515	EqualityExpression	result == op2		322263	1		==			
ANR	322516	Identifier	result		322263	0					
ANR	322517	Identifier	op2		322263	1					
ANR	322518	CompoundStatement		34:44:1010:1010	322263	1					
ANR	322519	ReturnStatement	return SUCCESS ;	901:5:22353:22367	322263	0	True				
ANR	322520	Identifier	SUCCESS		322263	0					
ANR	322521	IfStatement	if ( result != op1 )		322263	48					
ANR	322522	Condition	result != op1	903:8:22383:22395	322263	0	True				
ANR	322523	EqualityExpression	result != op1		322263	0		!=			
ANR	322524	Identifier	result		322263	0					
ANR	322525	Identifier	op1		322263	1					
ANR	322526	CompoundStatement		38:23:1082:1082	322263	1					
ANR	322527	ExpressionStatement	"ZVAL_DUP ( result , op1 )"	904:5:22405:22426	322263	0	True				
ANR	322528	CallExpression	"ZVAL_DUP ( result , op1 )"		322263	0					
ANR	322529	Callee	ZVAL_DUP		322263	0					
ANR	322530	Identifier	ZVAL_DUP		322263	0					
ANR	322531	ArgumentList	result		322263	1					
ANR	322532	Argument	result		322263	0					
ANR	322533	Identifier	result		322263	0					
ANR	322534	Argument	op1		322263	1					
ANR	322535	Identifier	op1		322263	0					
ANR	322536	ExpressionStatement	"zend_hash_merge ( Z_ARRVAL_P ( result ) , Z_ARRVAL_P ( op2 ) , zval_add_ref , 0 )"	906:4:22438:22507	322263	49	True				
ANR	322537	CallExpression	"zend_hash_merge ( Z_ARRVAL_P ( result ) , Z_ARRVAL_P ( op2 ) , zval_add_ref , 0 )"		322263	0					
ANR	322538	Callee	zend_hash_merge		322263	0					
ANR	322539	Identifier	zend_hash_merge		322263	0					
ANR	322540	ArgumentList	Z_ARRVAL_P ( result )		322263	1					
ANR	322541	Argument	Z_ARRVAL_P ( result )		322263	0					
ANR	322542	CallExpression	Z_ARRVAL_P ( result )		322263	0					
ANR	322543	Callee	Z_ARRVAL_P		322263	0					
ANR	322544	Identifier	Z_ARRVAL_P		322263	0					
ANR	322545	ArgumentList	result		322263	1					
ANR	322546	Argument	result		322263	0					
ANR	322547	Identifier	result		322263	0					
ANR	322548	Argument	Z_ARRVAL_P ( op2 )		322263	1					
ANR	322549	CallExpression	Z_ARRVAL_P ( op2 )		322263	0					
ANR	322550	Callee	Z_ARRVAL_P		322263	0					
ANR	322551	Identifier	Z_ARRVAL_P		322263	0					
ANR	322552	ArgumentList	op2		322263	1					
ANR	322553	Argument	op2		322263	0					
ANR	322554	Identifier	op2		322263	0					
ANR	322555	Argument	zval_add_ref		322263	2					
ANR	322556	Identifier	zval_add_ref		322263	0					
ANR	322557	Argument	0		322263	3					
ANR	322558	PrimaryExpression	0		322263	0					
ANR	322559	ReturnStatement	return SUCCESS ;	907:4:22513:22527	322263	50	True				
ANR	322560	Identifier	SUCCESS		322263	0					
ANR	322561	Label	default :	909:3:22533:22540	322263	51	True				
ANR	322562	Identifier	default		322263	0					
ANR	322563	IfStatement	if ( Z_ISREF_P ( op1 ) )		322263	52					
ANR	322564	Condition	Z_ISREF_P ( op1 )	910:8:22550:22563	322263	0	True				
ANR	322565	CallExpression	Z_ISREF_P ( op1 )		322263	0					
ANR	322566	Callee	Z_ISREF_P		322263	0					
ANR	322567	Identifier	Z_ISREF_P		322263	0					
ANR	322568	ArgumentList	op1		322263	1					
ANR	322569	Argument	op1		322263	0					
ANR	322570	Identifier	op1		322263	0					
ANR	322571	CompoundStatement		45:24:1250:1250	322263	1					
ANR	322572	ExpressionStatement	op1 = Z_REFVAL_P ( op1 )	911:5:22573:22594	322263	0	True				
ANR	322573	AssignmentExpression	op1 = Z_REFVAL_P ( op1 )		322263	0		=			
ANR	322574	Identifier	op1		322263	0					
ANR	322575	CallExpression	Z_REFVAL_P ( op1 )		322263	1					
ANR	322576	Callee	Z_REFVAL_P		322263	0					
ANR	322577	Identifier	Z_REFVAL_P		322263	0					
ANR	322578	ArgumentList	op1		322263	1					
ANR	322579	Argument	op1		322263	0					
ANR	322580	Identifier	op1		322263	0					
ANR	322581	ElseStatement	else		322263	0					
ANR	322582	IfStatement	if ( Z_ISREF_P ( op2 ) )		322263	0					
ANR	322583	Condition	Z_ISREF_P ( op2 )	912:15:22611:22624	322263	0	True				
ANR	322584	CallExpression	Z_ISREF_P ( op2 )		322263	0					
ANR	322585	Callee	Z_ISREF_P		322263	0					
ANR	322586	Identifier	Z_ISREF_P		322263	0					
ANR	322587	ArgumentList	op2		322263	1					
ANR	322588	Argument	op2		322263	0					
ANR	322589	Identifier	op2		322263	0					
ANR	322590	CompoundStatement		47:31:1311:1311	322263	1					
ANR	322591	ExpressionStatement	op2 = Z_REFVAL_P ( op2 )	913:5:22634:22655	322263	0	True				
ANR	322592	AssignmentExpression	op2 = Z_REFVAL_P ( op2 )		322263	0		=			
ANR	322593	Identifier	op2		322263	0					
ANR	322594	CallExpression	Z_REFVAL_P ( op2 )		322263	1					
ANR	322595	Callee	Z_REFVAL_P		322263	0					
ANR	322596	Identifier	Z_REFVAL_P		322263	0					
ANR	322597	ArgumentList	op2		322263	1					
ANR	322598	Argument	op2		322263	0					
ANR	322599	Identifier	op2		322263	0					
ANR	322600	ElseStatement	else		322263	0					
ANR	322601	IfStatement	if ( ! converted )		322263	0					
ANR	322602	Condition	! converted	914:15:22672:22681	322263	0	True				
ANR	322603	UnaryOperationExpression	! converted		322263	0					
ANR	322604	UnaryOperator	!		322263	0					
ANR	322605	Identifier	converted		322263	1					
ANR	322606	CompoundStatement		49:27:1368:1368	322263	1					
ANR	322607	ExpressionStatement	"ZEND_TRY_BINARY_OBJECT_OPERATION ( ZEND_ADD , add_function )"	915:5:22691:22747	322263	0	True				
ANR	322608	CallExpression	"ZEND_TRY_BINARY_OBJECT_OPERATION ( ZEND_ADD , add_function )"		322263	0					
ANR	322609	Callee	ZEND_TRY_BINARY_OBJECT_OPERATION		322263	0					
ANR	322610	Identifier	ZEND_TRY_BINARY_OBJECT_OPERATION		322263	0					
ANR	322611	ArgumentList	ZEND_ADD		322263	1					
ANR	322612	Argument	ZEND_ADD		322263	0					
ANR	322613	Identifier	ZEND_ADD		322263	0					
ANR	322614	Argument	add_function		322263	1					
ANR	322615	Identifier	add_function		322263	0					
ANR	322616	ExpressionStatement	"zendi_convert_scalar_to_number ( op1 , op1_copy , result )"	917:5:22755:22808	322263	1	True				
ANR	322617	CallExpression	"zendi_convert_scalar_to_number ( op1 , op1_copy , result )"		322263	0					
ANR	322618	Callee	zendi_convert_scalar_to_number		322263	0					
ANR	322619	Identifier	zendi_convert_scalar_to_number		322263	0					
ANR	322620	ArgumentList	op1		322263	1					
ANR	322621	Argument	op1		322263	0					
ANR	322622	Identifier	op1		322263	0					
ANR	322623	Argument	op1_copy		322263	1					
ANR	322624	Identifier	op1_copy		322263	0					
ANR	322625	Argument	result		322263	2					
ANR	322626	Identifier	result		322263	0					
ANR	322627	ExpressionStatement	"zendi_convert_scalar_to_number ( op2 , op2_copy , result )"	918:5:22815:22868	322263	2	True				
ANR	322628	CallExpression	"zendi_convert_scalar_to_number ( op2 , op2_copy , result )"		322263	0					
ANR	322629	Callee	zendi_convert_scalar_to_number		322263	0					
ANR	322630	Identifier	zendi_convert_scalar_to_number		322263	0					
ANR	322631	ArgumentList	op2		322263	1					
ANR	322632	Argument	op2		322263	0					
ANR	322633	Identifier	op2		322263	0					
ANR	322634	Argument	op2_copy		322263	1					
ANR	322635	Identifier	op2_copy		322263	0					
ANR	322636	Argument	result		322263	2					
ANR	322637	Identifier	result		322263	0					
ANR	322638	ExpressionStatement	converted = 1	919:5:22875:22888	322263	3	True				
ANR	322639	AssignmentExpression	converted = 1		322263	0		=			
ANR	322640	Identifier	converted		322263	0					
ANR	322641	PrimaryExpression	1		322263	1					
ANR	322642	ElseStatement	else		322263	0					
ANR	322643	CompoundStatement		55:11:1585:1585	322263	0					
ANR	322644	ExpressionStatement	"zend_throw_error ( NULL , ""Unsupported operand types"" )"	921:5:22908:22959	322263	0	True				
ANR	322645	CallExpression	"zend_throw_error ( NULL , ""Unsupported operand types"" )"		322263	0					
ANR	322646	Callee	zend_throw_error		322263	0					
ANR	322647	Identifier	zend_throw_error		322263	0					
ANR	322648	ArgumentList	NULL		322263	1					
ANR	322649	Argument	NULL		322263	0					
ANR	322650	Identifier	NULL		322263	0					
ANR	322651	Argument	"""Unsupported operand types"""		322263	1					
ANR	322652	PrimaryExpression	"""Unsupported operand types"""		322263	0					
ANR	322653	ReturnStatement	return FAILURE ;	922:5:22966:22980	322263	1	True				
ANR	322654	Identifier	FAILURE		322263	0					
ANR	322655	ReturnType	ZEND_API int ZEND_FASTCALL		322263	1					
ANR	322656	Identifier	add_function		322263	2					
ANR	322657	ParameterList	"zval * result , zval * op1 , zval * op2"		322263	3					
ANR	322658	Parameter	zval * result	865:40:21269:21280	322263	0	True				
ANR	322659	ParameterType	zval *		322263	0					
ANR	322660	Identifier	result		322263	1					
ANR	322661	Parameter	zval * op1	865:54:21283:21291	322263	1	True				
ANR	322662	ParameterType	zval *		322263	0					
ANR	322663	Identifier	op1		322263	1					
ANR	322664	Parameter	zval * op2	865:65:21294:21302	322263	2	True				
ANR	322665	ParameterType	zval *		322263	0					
ANR	322666	Identifier	op2		322263	1					
ANR	322667	CFGEntryNode	ENTRY		322263		True				
ANR	322668	CFGExitNode	EXIT		322263		True				
ANR	322669	Symbol	SUCCESS		322263						
ANR	322670	Symbol	NULL		322263						
ANR	322671	Symbol	LONG_SIGN_MASK		322263						
ANR	322672	Symbol	op1_copy		322263						
ANR	322673	Symbol	lval		322263						
ANR	322674	Symbol	Z_TYPE_P		322263						
ANR	322675	Symbol	FAILURE		322263						
ANR	322676	Symbol	Z_DVAL_P		322263						
ANR	322677	Symbol	Z_LVAL_P		322263						
ANR	322678	Symbol	result		322263						
ANR	322679	Symbol	op2		322263						
ANR	322680	Symbol	op1		322263						
ANR	322681	Symbol	TYPE_PAIR		322263						
ANR	322682	Symbol	converted		322263						
ANR	322683	Symbol	Z_REFVAL_P		322263						
ANR	322684	Symbol	zval_add_ref		322263						
ANR	322685	Symbol	op2_copy		322263						
ANR	322686	Symbol	Z_ARRVAL_P		322263						
ANR	322687	Symbol	add_function		322263						
ANR	322688	Symbol	Z_ISREF_P		322263						
ANR	322689	Symbol	ZEND_ADD		322263						
ANR	322690	Function	sub_function	929:0:23031:24533							
ANR	322691	FunctionDef	"sub_function (zval * result , zval * op1 , zval * op2)"		322690	0					
ANR	322692	CompoundStatement		930:0:23117:24533	322690	0					
ANR	322693	IdentifierDeclStatement	"zval op1_copy , op2_copy ;"	931:1:23120:23143	322690	0	True				
ANR	322694	IdentifierDecl	op1_copy		322690	0					
ANR	322695	IdentifierDeclType	zval		322690	0					
ANR	322696	Identifier	op1_copy		322690	1					
ANR	322697	IdentifierDecl	op2_copy		322690	1					
ANR	322698	IdentifierDeclType	zval		322690	0					
ANR	322699	Identifier	op2_copy		322690	1					
ANR	322700	IdentifierDeclStatement	int converted = 0 ;	932:1:23146:23163	322690	1	True				
ANR	322701	IdentifierDecl	converted = 0		322690	0					
ANR	322702	IdentifierDeclType	int		322690	0					
ANR	322703	Identifier	converted		322690	1					
ANR	322704	AssignmentExpression	converted = 0		322690	2		=			
ANR	322705	Identifier	converted		322690	0					
ANR	322706	PrimaryExpression	0		322690	1					
ANR	322707	WhileStatement	while ( 1 )		322690	2					
ANR	322708	Condition	1	934:8:23174:23174	322690	0	True				
ANR	322709	PrimaryExpression	1		322690	0					
ANR	322710	CompoundStatement		5:11:59:59	322690	1					
ANR	322711	SwitchStatement	"switch ( TYPE_PAIR ( Z_TYPE_P ( op1 ) , Z_TYPE_P ( op2 ) ) )"		322690	0					
ANR	322712	Condition	"TYPE_PAIR ( Z_TYPE_P ( op1 ) , Z_TYPE_P ( op2 ) )"	935:10:23189:23227	322690	0	True				
ANR	322713	CallExpression	"TYPE_PAIR ( Z_TYPE_P ( op1 ) , Z_TYPE_P ( op2 ) )"		322690	0					
ANR	322714	Callee	TYPE_PAIR		322690	0					
ANR	322715	Identifier	TYPE_PAIR		322690	0					
ANR	322716	ArgumentList	Z_TYPE_P ( op1 )		322690	1					
ANR	322717	Argument	Z_TYPE_P ( op1 )		322690	0					
ANR	322718	CallExpression	Z_TYPE_P ( op1 )		322690	0					
ANR	322719	Callee	Z_TYPE_P		322690	0					
ANR	322720	Identifier	Z_TYPE_P		322690	0					
ANR	322721	ArgumentList	op1		322690	1					
ANR	322722	Argument	op1		322690	0					
ANR	322723	Identifier	op1		322690	0					
ANR	322724	Argument	Z_TYPE_P ( op2 )		322690	1					
ANR	322725	CallExpression	Z_TYPE_P ( op2 )		322690	0					
ANR	322726	Callee	Z_TYPE_P		322690	0					
ANR	322727	Identifier	Z_TYPE_P		322690	0					
ANR	322728	ArgumentList	op2		322690	1					
ANR	322729	Argument	op2		322690	0					
ANR	322730	Identifier	op2		322690	0					
ANR	322731	CompoundStatement		6:51:112:112	322690	1					
ANR	322732	Statement	case	936:3:23235:23238	322690	0	True				
ANR	322733	Statement	TYPE_PAIR	936:8:23240:23248	322690	1	True				
ANR	322734	Statement	(	936:17:23249:23249	322690	2	True				
ANR	322735	Statement	IS_LONG	936:18:23250:23256	322690	3	True				
ANR	322736	Statement	","	936:25:23257:23257	322690	4	True				
ANR	322737	Statement	IS_LONG	936:27:23259:23265	322690	5	True				
ANR	322738	Statement	)	936:34:23266:23266	322690	6	True				
ANR	322739	Statement	:	936:35:23267:23267	322690	7	True				
ANR	322740	CompoundStatement		8:4:157:203	322690	8					
ANR	322741	IdentifierDeclStatement	zend_long lval = Z_LVAL_P ( op1 ) - Z_LVAL_P ( op2 ) ;	937:4:23275:23321	322690	0	True				
ANR	322742	IdentifierDecl	lval = Z_LVAL_P ( op1 ) - Z_LVAL_P ( op2 )		322690	0					
ANR	322743	IdentifierDeclType	zend_long		322690	0					
ANR	322744	Identifier	lval		322690	1					
ANR	322745	AssignmentExpression	lval = Z_LVAL_P ( op1 ) - Z_LVAL_P ( op2 )		322690	2		=			
ANR	322746	Identifier	lval		322690	0					
ANR	322747	AdditiveExpression	Z_LVAL_P ( op1 ) - Z_LVAL_P ( op2 )		322690	1		-			
ANR	322748	CallExpression	Z_LVAL_P ( op1 )		322690	0					
ANR	322749	Callee	Z_LVAL_P		322690	0					
ANR	322750	Identifier	Z_LVAL_P		322690	0					
ANR	322751	ArgumentList	op1		322690	1					
ANR	322752	Argument	op1		322690	0					
ANR	322753	Identifier	op1		322690	0					
ANR	322754	CallExpression	Z_LVAL_P ( op2 )		322690	1					
ANR	322755	Callee	Z_LVAL_P		322690	0					
ANR	322756	Identifier	Z_LVAL_P		322690	0					
ANR	322757	ArgumentList	op2		322690	1					
ANR	322758	Argument	op2		322690	0					
ANR	322759	Identifier	op2		322690	0					
ANR	322760	IfStatement	if ( ( Z_LVAL_P ( op1 ) & LONG_SIGN_MASK ) != ( Z_LVAL_P ( op2 ) & LONG_SIGN_MASK ) && ( Z_LVAL_P ( op1 ) & LONG_SIGN_MASK ) != ( lval & LONG_SIGN_MASK ) )		322690	1					
ANR	322761	Condition	( Z_LVAL_P ( op1 ) & LONG_SIGN_MASK ) != ( Z_LVAL_P ( op2 ) & LONG_SIGN_MASK ) && ( Z_LVAL_P ( op1 ) & LONG_SIGN_MASK ) != ( lval & LONG_SIGN_MASK )	940:8:23384:23519	322690	0	True				
ANR	322762	AndExpression	( Z_LVAL_P ( op1 ) & LONG_SIGN_MASK ) != ( Z_LVAL_P ( op2 ) & LONG_SIGN_MASK ) && ( Z_LVAL_P ( op1 ) & LONG_SIGN_MASK ) != ( lval & LONG_SIGN_MASK )		322690	0		&&			
ANR	322763	EqualityExpression	( Z_LVAL_P ( op1 ) & LONG_SIGN_MASK ) != ( Z_LVAL_P ( op2 ) & LONG_SIGN_MASK )		322690	0		!=			
ANR	322764	BitAndExpression	Z_LVAL_P ( op1 ) & LONG_SIGN_MASK		322690	0		&			
ANR	322765	CallExpression	Z_LVAL_P ( op1 )		322690	0					
ANR	322766	Callee	Z_LVAL_P		322690	0					
ANR	322767	Identifier	Z_LVAL_P		322690	0					
ANR	322768	ArgumentList	op1		322690	1					
ANR	322769	Argument	op1		322690	0					
ANR	322770	Identifier	op1		322690	0					
ANR	322771	Identifier	LONG_SIGN_MASK		322690	1					
ANR	322772	BitAndExpression	Z_LVAL_P ( op2 ) & LONG_SIGN_MASK		322690	1		&			
ANR	322773	CallExpression	Z_LVAL_P ( op2 )		322690	0					
ANR	322774	Callee	Z_LVAL_P		322690	0					
ANR	322775	Identifier	Z_LVAL_P		322690	0					
ANR	322776	ArgumentList	op2		322690	1					
ANR	322777	Argument	op2		322690	0					
ANR	322778	Identifier	op2		322690	0					
ANR	322779	Identifier	LONG_SIGN_MASK		322690	1					
ANR	322780	EqualityExpression	( Z_LVAL_P ( op1 ) & LONG_SIGN_MASK ) != ( lval & LONG_SIGN_MASK )		322690	1		!=			
ANR	322781	BitAndExpression	Z_LVAL_P ( op1 ) & LONG_SIGN_MASK		322690	0		&			
ANR	322782	CallExpression	Z_LVAL_P ( op1 )		322690	0					
ANR	322783	Callee	Z_LVAL_P		322690	0					
ANR	322784	Identifier	Z_LVAL_P		322690	0					
ANR	322785	ArgumentList	op1		322690	1					
ANR	322786	Argument	op1		322690	0					
ANR	322787	Identifier	op1		322690	0					
ANR	322788	Identifier	LONG_SIGN_MASK		322690	1					
ANR	322789	BitAndExpression	lval & LONG_SIGN_MASK		322690	1		&			
ANR	322790	Identifier	lval		322690	0					
ANR	322791	Identifier	LONG_SIGN_MASK		322690	1					
ANR	322792	CompoundStatement		12:69:404:404	322690	1					
ANR	322793	ExpressionStatement	"ZVAL_DOUBLE ( result , ( double ) Z_LVAL_P ( op1 ) - ( double ) Z_LVAL_P ( op2 ) )"	943:5:23530:23598	322690	0	True				
ANR	322794	CallExpression	"ZVAL_DOUBLE ( result , ( double ) Z_LVAL_P ( op1 ) - ( double ) Z_LVAL_P ( op2 ) )"		322690	0					
ANR	322795	Callee	ZVAL_DOUBLE		322690	0					
ANR	322796	Identifier	ZVAL_DOUBLE		322690	0					
ANR	322797	ArgumentList	result		322690	1					
ANR	322798	Argument	result		322690	0					
ANR	322799	Identifier	result		322690	0					
ANR	322800	Argument	( double ) Z_LVAL_P ( op1 ) - ( double ) Z_LVAL_P ( op2 )		322690	1					
ANR	322801	AdditiveExpression	( double ) Z_LVAL_P ( op1 ) - ( double ) Z_LVAL_P ( op2 )		322690	0		-			
ANR	322802	CastExpression	( double ) Z_LVAL_P ( op1 )		322690	0					
ANR	322803	CastTarget	double		322690	0					
ANR	322804	CallExpression	Z_LVAL_P ( op1 )		322690	1					
ANR	322805	Callee	Z_LVAL_P		322690	0					
ANR	322806	Identifier	Z_LVAL_P		322690	0					
ANR	322807	ArgumentList	op1		322690	1					
ANR	322808	Argument	op1		322690	0					
ANR	322809	Identifier	op1		322690	0					
ANR	322810	CastExpression	( double ) Z_LVAL_P ( op2 )		322690	1					
ANR	322811	CastTarget	double		322690	0					
ANR	322812	CallExpression	Z_LVAL_P ( op2 )		322690	1					
ANR	322813	Callee	Z_LVAL_P		322690	0					
ANR	322814	Identifier	Z_LVAL_P		322690	0					
ANR	322815	ArgumentList	op2		322690	1					
ANR	322816	Argument	op2		322690	0					
ANR	322817	Identifier	op2		322690	0					
ANR	322818	ElseStatement	else		322690	0					
ANR	322819	CompoundStatement		15:11:493:493	322690	0					
ANR	322820	ExpressionStatement	"ZVAL_LONG ( result , lval )"	945:5:23618:23641	322690	0	True				
ANR	322821	CallExpression	"ZVAL_LONG ( result , lval )"		322690	0					
ANR	322822	Callee	ZVAL_LONG		322690	0					
ANR	322823	Identifier	ZVAL_LONG		322690	0					
ANR	322824	ArgumentList	result		322690	1					
ANR	322825	Argument	result		322690	0					
ANR	322826	Identifier	result		322690	0					
ANR	322827	Argument	lval		322690	1					
ANR	322828	Identifier	lval		322690	0					
ANR	322829	ReturnStatement	return SUCCESS ;	947:4:23653:23667	322690	2	True				
ANR	322830	Identifier	SUCCESS		322690	0					
ANR	322831	Statement	case	950:3:23678:23681	322690	9	True				
ANR	322832	Statement	TYPE_PAIR	950:8:23683:23691	322690	10	True				
ANR	322833	Statement	(	950:17:23692:23692	322690	11	True				
ANR	322834	Statement	IS_LONG	950:18:23693:23699	322690	12	True				
ANR	322835	Statement	","	950:25:23700:23700	322690	13	True				
ANR	322836	Statement	IS_DOUBLE	950:27:23702:23710	322690	14	True				
ANR	322837	Statement	)	950:36:23711:23711	322690	15	True				
ANR	322838	Statement	:	950:37:23712:23712	322690	16	True				
ANR	322839	ExpressionStatement	"ZVAL_DOUBLE ( result , ( ( double ) Z_LVAL_P ( op1 ) ) - Z_DVAL_P ( op2 ) )"	951:4:23718:23778	322690	17	True				
ANR	322840	CallExpression	"ZVAL_DOUBLE ( result , ( ( double ) Z_LVAL_P ( op1 ) ) - Z_DVAL_P ( op2 ) )"		322690	0					
ANR	322841	Callee	ZVAL_DOUBLE		322690	0					
ANR	322842	Identifier	ZVAL_DOUBLE		322690	0					
ANR	322843	ArgumentList	result		322690	1					
ANR	322844	Argument	result		322690	0					
ANR	322845	Identifier	result		322690	0					
ANR	322846	Argument	( ( double ) Z_LVAL_P ( op1 ) ) - Z_DVAL_P ( op2 )		322690	1					
ANR	322847	AdditiveExpression	( ( double ) Z_LVAL_P ( op1 ) ) - Z_DVAL_P ( op2 )		322690	0		-			
ANR	322848	CastExpression	( double ) Z_LVAL_P ( op1 )		322690	0					
ANR	322849	CastTarget	double		322690	0					
ANR	322850	CallExpression	Z_LVAL_P ( op1 )		322690	1					
ANR	322851	Callee	Z_LVAL_P		322690	0					
ANR	322852	Identifier	Z_LVAL_P		322690	0					
ANR	322853	ArgumentList	op1		322690	1					
ANR	322854	Argument	op1		322690	0					
ANR	322855	Identifier	op1		322690	0					
ANR	322856	CallExpression	Z_DVAL_P ( op2 )		322690	1					
ANR	322857	Callee	Z_DVAL_P		322690	0					
ANR	322858	Identifier	Z_DVAL_P		322690	0					
ANR	322859	ArgumentList	op2		322690	1					
ANR	322860	Argument	op2		322690	0					
ANR	322861	Identifier	op2		322690	0					
ANR	322862	ReturnStatement	return SUCCESS ;	952:4:23784:23798	322690	18	True				
ANR	322863	Identifier	SUCCESS		322690	0					
ANR	322864	Statement	case	954:3:23804:23807	322690	19	True				
ANR	322865	Statement	TYPE_PAIR	954:8:23809:23817	322690	20	True				
ANR	322866	Statement	(	954:17:23818:23818	322690	21	True				
ANR	322867	Statement	IS_DOUBLE	954:18:23819:23827	322690	22	True				
ANR	322868	Statement	","	954:27:23828:23828	322690	23	True				
ANR	322869	Statement	IS_LONG	954:29:23830:23836	322690	24	True				
ANR	322870	Statement	)	954:36:23837:23837	322690	25	True				
ANR	322871	Statement	:	954:37:23838:23838	322690	26	True				
ANR	322872	ExpressionStatement	"ZVAL_DOUBLE ( result , Z_DVAL_P ( op1 ) - ( ( double ) Z_LVAL_P ( op2 ) ) )"	955:4:23844:23904	322690	27	True				
ANR	322873	CallExpression	"ZVAL_DOUBLE ( result , Z_DVAL_P ( op1 ) - ( ( double ) Z_LVAL_P ( op2 ) ) )"		322690	0					
ANR	322874	Callee	ZVAL_DOUBLE		322690	0					
ANR	322875	Identifier	ZVAL_DOUBLE		322690	0					
ANR	322876	ArgumentList	result		322690	1					
ANR	322877	Argument	result		322690	0					
ANR	322878	Identifier	result		322690	0					
ANR	322879	Argument	Z_DVAL_P ( op1 ) - ( ( double ) Z_LVAL_P ( op2 ) )		322690	1					
ANR	322880	AdditiveExpression	Z_DVAL_P ( op1 ) - ( ( double ) Z_LVAL_P ( op2 ) )		322690	0		-			
ANR	322881	CallExpression	Z_DVAL_P ( op1 )		322690	0					
ANR	322882	Callee	Z_DVAL_P		322690	0					
ANR	322883	Identifier	Z_DVAL_P		322690	0					
ANR	322884	ArgumentList	op1		322690	1					
ANR	322885	Argument	op1		322690	0					
ANR	322886	Identifier	op1		322690	0					
ANR	322887	CastExpression	( double ) Z_LVAL_P ( op2 )		322690	1					
ANR	322888	CastTarget	double		322690	0					
ANR	322889	CallExpression	Z_LVAL_P ( op2 )		322690	1					
ANR	322890	Callee	Z_LVAL_P		322690	0					
ANR	322891	Identifier	Z_LVAL_P		322690	0					
ANR	322892	ArgumentList	op2		322690	1					
ANR	322893	Argument	op2		322690	0					
ANR	322894	Identifier	op2		322690	0					
ANR	322895	ReturnStatement	return SUCCESS ;	956:4:23910:23924	322690	28	True				
ANR	322896	Identifier	SUCCESS		322690	0					
ANR	322897	Statement	case	958:3:23930:23933	322690	29	True				
ANR	322898	Statement	TYPE_PAIR	958:8:23935:23943	322690	30	True				
ANR	322899	Statement	(	958:17:23944:23944	322690	31	True				
ANR	322900	Statement	IS_DOUBLE	958:18:23945:23953	322690	32	True				
ANR	322901	Statement	","	958:27:23954:23954	322690	33	True				
ANR	322902	Statement	IS_DOUBLE	958:29:23956:23964	322690	34	True				
ANR	322903	Statement	)	958:38:23965:23965	322690	35	True				
ANR	322904	Statement	:	958:39:23966:23966	322690	36	True				
ANR	322905	ExpressionStatement	"ZVAL_DOUBLE ( result , Z_DVAL_P ( op1 ) - Z_DVAL_P ( op2 ) )"	959:4:23972:24022	322690	37	True				
ANR	322906	CallExpression	"ZVAL_DOUBLE ( result , Z_DVAL_P ( op1 ) - Z_DVAL_P ( op2 ) )"		322690	0					
ANR	322907	Callee	ZVAL_DOUBLE		322690	0					
ANR	322908	Identifier	ZVAL_DOUBLE		322690	0					
ANR	322909	ArgumentList	result		322690	1					
ANR	322910	Argument	result		322690	0					
ANR	322911	Identifier	result		322690	0					
ANR	322912	Argument	Z_DVAL_P ( op1 ) - Z_DVAL_P ( op2 )		322690	1					
ANR	322913	AdditiveExpression	Z_DVAL_P ( op1 ) - Z_DVAL_P ( op2 )		322690	0		-			
ANR	322914	CallExpression	Z_DVAL_P ( op1 )		322690	0					
ANR	322915	Callee	Z_DVAL_P		322690	0					
ANR	322916	Identifier	Z_DVAL_P		322690	0					
ANR	322917	ArgumentList	op1		322690	1					
ANR	322918	Argument	op1		322690	0					
ANR	322919	Identifier	op1		322690	0					
ANR	322920	CallExpression	Z_DVAL_P ( op2 )		322690	1					
ANR	322921	Callee	Z_DVAL_P		322690	0					
ANR	322922	Identifier	Z_DVAL_P		322690	0					
ANR	322923	ArgumentList	op2		322690	1					
ANR	322924	Argument	op2		322690	0					
ANR	322925	Identifier	op2		322690	0					
ANR	322926	ReturnStatement	return SUCCESS ;	960:4:24028:24042	322690	38	True				
ANR	322927	Identifier	SUCCESS		322690	0					
ANR	322928	Label	default :	962:3:24048:24055	322690	39	True				
ANR	322929	Identifier	default		322690	0					
ANR	322930	IfStatement	if ( Z_ISREF_P ( op1 ) )		322690	40					
ANR	322931	Condition	Z_ISREF_P ( op1 )	963:8:24065:24078	322690	0	True				
ANR	322932	CallExpression	Z_ISREF_P ( op1 )		322690	0					
ANR	322933	Callee	Z_ISREF_P		322690	0					
ANR	322934	Identifier	Z_ISREF_P		322690	0					
ANR	322935	ArgumentList	op1		322690	1					
ANR	322936	Argument	op1		322690	0					
ANR	322937	Identifier	op1		322690	0					
ANR	322938	CompoundStatement		34:24:963:963	322690	1					
ANR	322939	ExpressionStatement	op1 = Z_REFVAL_P ( op1 )	964:5:24088:24109	322690	0	True				
ANR	322940	AssignmentExpression	op1 = Z_REFVAL_P ( op1 )		322690	0		=			
ANR	322941	Identifier	op1		322690	0					
ANR	322942	CallExpression	Z_REFVAL_P ( op1 )		322690	1					
ANR	322943	Callee	Z_REFVAL_P		322690	0					
ANR	322944	Identifier	Z_REFVAL_P		322690	0					
ANR	322945	ArgumentList	op1		322690	1					
ANR	322946	Argument	op1		322690	0					
ANR	322947	Identifier	op1		322690	0					
ANR	322948	ElseStatement	else		322690	0					
ANR	322949	IfStatement	if ( Z_ISREF_P ( op2 ) )		322690	0					
ANR	322950	Condition	Z_ISREF_P ( op2 )	965:15:24126:24139	322690	0	True				
ANR	322951	CallExpression	Z_ISREF_P ( op2 )		322690	0					
ANR	322952	Callee	Z_ISREF_P		322690	0					
ANR	322953	Identifier	Z_ISREF_P		322690	0					
ANR	322954	ArgumentList	op2		322690	1					
ANR	322955	Argument	op2		322690	0					
ANR	322956	Identifier	op2		322690	0					
ANR	322957	CompoundStatement		36:31:1024:1024	322690	1					
ANR	322958	ExpressionStatement	op2 = Z_REFVAL_P ( op2 )	966:5:24149:24170	322690	0	True				
ANR	322959	AssignmentExpression	op2 = Z_REFVAL_P ( op2 )		322690	0		=			
ANR	322960	Identifier	op2		322690	0					
ANR	322961	CallExpression	Z_REFVAL_P ( op2 )		322690	1					
ANR	322962	Callee	Z_REFVAL_P		322690	0					
ANR	322963	Identifier	Z_REFVAL_P		322690	0					
ANR	322964	ArgumentList	op2		322690	1					
ANR	322965	Argument	op2		322690	0					
ANR	322966	Identifier	op2		322690	0					
ANR	322967	ElseStatement	else		322690	0					
ANR	322968	IfStatement	if ( ! converted )		322690	0					
ANR	322969	Condition	! converted	967:15:24187:24196	322690	0	True				
ANR	322970	UnaryOperationExpression	! converted		322690	0					
ANR	322971	UnaryOperator	!		322690	0					
ANR	322972	Identifier	converted		322690	1					
ANR	322973	CompoundStatement		38:27:1081:1081	322690	1					
ANR	322974	ExpressionStatement	"ZEND_TRY_BINARY_OBJECT_OPERATION ( ZEND_SUB , sub_function )"	968:5:24206:24262	322690	0	True				
ANR	322975	CallExpression	"ZEND_TRY_BINARY_OBJECT_OPERATION ( ZEND_SUB , sub_function )"		322690	0					
ANR	322976	Callee	ZEND_TRY_BINARY_OBJECT_OPERATION		322690	0					
ANR	322977	Identifier	ZEND_TRY_BINARY_OBJECT_OPERATION		322690	0					
ANR	322978	ArgumentList	ZEND_SUB		322690	1					
ANR	322979	Argument	ZEND_SUB		322690	0					
ANR	322980	Identifier	ZEND_SUB		322690	0					
ANR	322981	Argument	sub_function		322690	1					
ANR	322982	Identifier	sub_function		322690	0					
ANR	322983	ExpressionStatement	"zendi_convert_scalar_to_number ( op1 , op1_copy , result )"	970:5:24270:24323	322690	1	True				
ANR	322984	CallExpression	"zendi_convert_scalar_to_number ( op1 , op1_copy , result )"		322690	0					
ANR	322985	Callee	zendi_convert_scalar_to_number		322690	0					
ANR	322986	Identifier	zendi_convert_scalar_to_number		322690	0					
ANR	322987	ArgumentList	op1		322690	1					
ANR	322988	Argument	op1		322690	0					
ANR	322989	Identifier	op1		322690	0					
ANR	322990	Argument	op1_copy		322690	1					
ANR	322991	Identifier	op1_copy		322690	0					
ANR	322992	Argument	result		322690	2					
ANR	322993	Identifier	result		322690	0					
ANR	322994	ExpressionStatement	"zendi_convert_scalar_to_number ( op2 , op2_copy , result )"	971:5:24330:24383	322690	2	True				
ANR	322995	CallExpression	"zendi_convert_scalar_to_number ( op2 , op2_copy , result )"		322690	0					
ANR	322996	Callee	zendi_convert_scalar_to_number		322690	0					
ANR	322997	Identifier	zendi_convert_scalar_to_number		322690	0					
ANR	322998	ArgumentList	op2		322690	1					
ANR	322999	Argument	op2		322690	0					
ANR	323000	Identifier	op2		322690	0					
ANR	323001	Argument	op2_copy		322690	1					
ANR	323002	Identifier	op2_copy		322690	0					
ANR	323003	Argument	result		322690	2					
ANR	323004	Identifier	result		322690	0					
ANR	323005	ExpressionStatement	converted = 1	972:5:24390:24403	322690	3	True				
ANR	323006	AssignmentExpression	converted = 1		322690	0		=			
ANR	323007	Identifier	converted		322690	0					
ANR	323008	PrimaryExpression	1		322690	1					
ANR	323009	ElseStatement	else		322690	0					
ANR	323010	CompoundStatement		44:11:1298:1298	322690	0					
ANR	323011	ExpressionStatement	"zend_throw_error ( NULL , ""Unsupported operand types"" )"	974:5:24423:24474	322690	0	True				
ANR	323012	CallExpression	"zend_throw_error ( NULL , ""Unsupported operand types"" )"		322690	0					
ANR	323013	Callee	zend_throw_error		322690	0					
ANR	323014	Identifier	zend_throw_error		322690	0					
ANR	323015	ArgumentList	NULL		322690	1					
ANR	323016	Argument	NULL		322690	0					
ANR	323017	Identifier	NULL		322690	0					
ANR	323018	Argument	"""Unsupported operand types"""		322690	1					
ANR	323019	PrimaryExpression	"""Unsupported operand types"""		322690	0					
ANR	323020	ReturnStatement	return FAILURE ;	975:5:24481:24495	322690	1	True				
ANR	323021	Identifier	FAILURE		322690	0					
ANR	323022	ReturnType	ZEND_API int ZEND_FASTCALL		322690	1					
ANR	323023	Identifier	sub_function		322690	2					
ANR	323024	ParameterList	"zval * result , zval * op1 , zval * op2"		322690	3					
ANR	323025	Parameter	zval * result	929:40:23071:23082	322690	0	True				
ANR	323026	ParameterType	zval *		322690	0					
ANR	323027	Identifier	result		322690	1					
ANR	323028	Parameter	zval * op1	929:54:23085:23093	322690	1	True				
ANR	323029	ParameterType	zval *		322690	0					
ANR	323030	Identifier	op1		322690	1					
ANR	323031	Parameter	zval * op2	929:65:23096:23104	322690	2	True				
ANR	323032	ParameterType	zval *		322690	0					
ANR	323033	Identifier	op2		322690	1					
ANR	323034	CFGEntryNode	ENTRY		322690		True				
ANR	323035	CFGExitNode	EXIT		322690		True				
ANR	323036	Symbol	SUCCESS		322690						
ANR	323037	Symbol	NULL		322690						
ANR	323038	Symbol	LONG_SIGN_MASK		322690						
ANR	323039	Symbol	op1_copy		322690						
ANR	323040	Symbol	lval		322690						
ANR	323041	Symbol	Z_TYPE_P		322690						
ANR	323042	Symbol	FAILURE		322690						
ANR	323043	Symbol	Z_DVAL_P		322690						
ANR	323044	Symbol	Z_LVAL_P		322690						
ANR	323045	Symbol	result		322690						
ANR	323046	Symbol	op2		322690						
ANR	323047	Symbol	op1		322690						
ANR	323048	Symbol	TYPE_PAIR		322690						
ANR	323049	Symbol	sub_function		322690						
ANR	323050	Symbol	converted		322690						
ANR	323051	Symbol	Z_REFVAL_P		322690						
ANR	323052	Symbol	op2_copy		322690						
ANR	323053	Symbol	Z_ISREF_P		322690						
ANR	323054	Symbol	ZEND_SUB		322690						
ANR	323055	Function	mul_function	982:0:24546:25859							
ANR	323056	FunctionDef	"mul_function (zval * result , zval * op1 , zval * op2)"		323055	0					
ANR	323057	CompoundStatement		983:0:24632:25859	323055	0					
ANR	323058	IdentifierDeclStatement	"zval op1_copy , op2_copy ;"	984:1:24635:24658	323055	0	True				
ANR	323059	IdentifierDecl	op1_copy		323055	0					
ANR	323060	IdentifierDeclType	zval		323055	0					
ANR	323061	Identifier	op1_copy		323055	1					
ANR	323062	IdentifierDecl	op2_copy		323055	1					
ANR	323063	IdentifierDeclType	zval		323055	0					
ANR	323064	Identifier	op2_copy		323055	1					
ANR	323065	IdentifierDeclStatement	int converted = 0 ;	985:1:24661:24678	323055	1	True				
ANR	323066	IdentifierDecl	converted = 0		323055	0					
ANR	323067	IdentifierDeclType	int		323055	0					
ANR	323068	Identifier	converted		323055	1					
ANR	323069	AssignmentExpression	converted = 0		323055	2		=			
ANR	323070	Identifier	converted		323055	0					
ANR	323071	PrimaryExpression	0		323055	1					
ANR	323072	WhileStatement	while ( 1 )		323055	2					
ANR	323073	Condition	1	987:8:24689:24689	323055	0	True				
ANR	323074	PrimaryExpression	1		323055	0					
ANR	323075	CompoundStatement		5:11:59:59	323055	1					
ANR	323076	SwitchStatement	"switch ( TYPE_PAIR ( Z_TYPE_P ( op1 ) , Z_TYPE_P ( op2 ) ) )"		323055	0					
ANR	323077	Condition	"TYPE_PAIR ( Z_TYPE_P ( op1 ) , Z_TYPE_P ( op2 ) )"	988:10:24704:24742	323055	0	True				
ANR	323078	CallExpression	"TYPE_PAIR ( Z_TYPE_P ( op1 ) , Z_TYPE_P ( op2 ) )"		323055	0					
ANR	323079	Callee	TYPE_PAIR		323055	0					
ANR	323080	Identifier	TYPE_PAIR		323055	0					
ANR	323081	ArgumentList	Z_TYPE_P ( op1 )		323055	1					
ANR	323082	Argument	Z_TYPE_P ( op1 )		323055	0					
ANR	323083	CallExpression	Z_TYPE_P ( op1 )		323055	0					
ANR	323084	Callee	Z_TYPE_P		323055	0					
ANR	323085	Identifier	Z_TYPE_P		323055	0					
ANR	323086	ArgumentList	op1		323055	1					
ANR	323087	Argument	op1		323055	0					
ANR	323088	Identifier	op1		323055	0					
ANR	323089	Argument	Z_TYPE_P ( op2 )		323055	1					
ANR	323090	CallExpression	Z_TYPE_P ( op2 )		323055	0					
ANR	323091	Callee	Z_TYPE_P		323055	0					
ANR	323092	Identifier	Z_TYPE_P		323055	0					
ANR	323093	ArgumentList	op2		323055	1					
ANR	323094	Argument	op2		323055	0					
ANR	323095	Identifier	op2		323055	0					
ANR	323096	CompoundStatement		6:51:112:112	323055	1					
ANR	323097	Statement	case	989:3:24750:24753	323055	0	True				
ANR	323098	Statement	TYPE_PAIR	989:8:24755:24763	323055	1	True				
ANR	323099	Statement	(	989:17:24764:24764	323055	2	True				
ANR	323100	Statement	IS_LONG	989:18:24765:24771	323055	3	True				
ANR	323101	Statement	","	989:25:24772:24772	323055	4	True				
ANR	323102	Statement	IS_LONG	989:27:24774:24780	323055	5	True				
ANR	323103	Statement	)	989:34:24781:24781	323055	6	True				
ANR	323104	Statement	:	989:35:24782:24782	323055	7	True				
ANR	323105	CompoundStatement		8:4:157:175	323055	8					
ANR	323106	IdentifierDeclStatement	zend_long overflow ;	990:4:24790:24808	323055	0	True				
ANR	323107	IdentifierDecl	overflow		323055	0					
ANR	323108	IdentifierDeclType	zend_long		323055	0					
ANR	323109	Identifier	overflow		323055	1					
ANR	323110	ExpressionStatement	"ZEND_SIGNED_MULTIPLY_LONG ( Z_LVAL_P ( op1 ) , Z_LVAL_P ( op2 ) , Z_LVAL_P ( result ) , Z_DVAL_P ( result ) , overflow )"	992:4:24815:24913	323055	1	True				
ANR	323111	CallExpression	"ZEND_SIGNED_MULTIPLY_LONG ( Z_LVAL_P ( op1 ) , Z_LVAL_P ( op2 ) , Z_LVAL_P ( result ) , Z_DVAL_P ( result ) , overflow )"		323055	0					
ANR	323112	Callee	ZEND_SIGNED_MULTIPLY_LONG		323055	0					
ANR	323113	Identifier	ZEND_SIGNED_MULTIPLY_LONG		323055	0					
ANR	323114	ArgumentList	Z_LVAL_P ( op1 )		323055	1					
ANR	323115	Argument	Z_LVAL_P ( op1 )		323055	0					
ANR	323116	CallExpression	Z_LVAL_P ( op1 )		323055	0					
ANR	323117	Callee	Z_LVAL_P		323055	0					
ANR	323118	Identifier	Z_LVAL_P		323055	0					
ANR	323119	ArgumentList	op1		323055	1					
ANR	323120	Argument	op1		323055	0					
ANR	323121	Identifier	op1		323055	0					
ANR	323122	Argument	Z_LVAL_P ( op2 )		323055	1					
ANR	323123	CallExpression	Z_LVAL_P ( op2 )		323055	0					
ANR	323124	Callee	Z_LVAL_P		323055	0					
ANR	323125	Identifier	Z_LVAL_P		323055	0					
ANR	323126	ArgumentList	op2		323055	1					
ANR	323127	Argument	op2		323055	0					
ANR	323128	Identifier	op2		323055	0					
ANR	323129	Argument	Z_LVAL_P ( result )		323055	2					
ANR	323130	CallExpression	Z_LVAL_P ( result )		323055	0					
ANR	323131	Callee	Z_LVAL_P		323055	0					
ANR	323132	Identifier	Z_LVAL_P		323055	0					
ANR	323133	ArgumentList	result		323055	1					
ANR	323134	Argument	result		323055	0					
ANR	323135	Identifier	result		323055	0					
ANR	323136	Argument	Z_DVAL_P ( result )		323055	3					
ANR	323137	CallExpression	Z_DVAL_P ( result )		323055	0					
ANR	323138	Callee	Z_DVAL_P		323055	0					
ANR	323139	Identifier	Z_DVAL_P		323055	0					
ANR	323140	ArgumentList	result		323055	1					
ANR	323141	Argument	result		323055	0					
ANR	323142	Identifier	result		323055	0					
ANR	323143	Argument	overflow		323055	4					
ANR	323144	Identifier	overflow		323055	0					
ANR	323145	ExpressionStatement	Z_TYPE_INFO_P ( result ) = overflow ? IS_DOUBLE : IS_LONG	993:4:24919:24973	323055	2	True				
ANR	323146	AssignmentExpression	Z_TYPE_INFO_P ( result ) = overflow ? IS_DOUBLE : IS_LONG		323055	0		=			
ANR	323147	CallExpression	Z_TYPE_INFO_P ( result )		323055	0					
ANR	323148	Callee	Z_TYPE_INFO_P		323055	0					
ANR	323149	Identifier	Z_TYPE_INFO_P		323055	0					
ANR	323150	ArgumentList	result		323055	1					
ANR	323151	Argument	result		323055	0					
ANR	323152	Identifier	result		323055	0					
ANR	323153	ConditionalExpression	overflow ? IS_DOUBLE : IS_LONG		323055	1					
ANR	323154	Condition	overflow		323055	0					
ANR	323155	Identifier	overflow		323055	0					
ANR	323156	Identifier	IS_DOUBLE		323055	1					
ANR	323157	Identifier	IS_LONG		323055	2					
ANR	323158	ReturnStatement	return SUCCESS ;	994:4:24979:24993	323055	3	True				
ANR	323159	Identifier	SUCCESS		323055	0					
ANR	323160	Statement	case	997:3:25004:25007	323055	9	True				
ANR	323161	Statement	TYPE_PAIR	997:8:25009:25017	323055	10	True				
ANR	323162	Statement	(	997:17:25018:25018	323055	11	True				
ANR	323163	Statement	IS_LONG	997:18:25019:25025	323055	12	True				
ANR	323164	Statement	","	997:25:25026:25026	323055	13	True				
ANR	323165	Statement	IS_DOUBLE	997:27:25028:25036	323055	14	True				
ANR	323166	Statement	)	997:36:25037:25037	323055	15	True				
ANR	323167	Statement	:	997:37:25038:25038	323055	16	True				
ANR	323168	ExpressionStatement	"ZVAL_DOUBLE ( result , ( ( double ) Z_LVAL_P ( op1 ) ) * Z_DVAL_P ( op2 ) )"	998:4:25044:25104	323055	17	True				
ANR	323169	CallExpression	"ZVAL_DOUBLE ( result , ( ( double ) Z_LVAL_P ( op1 ) ) * Z_DVAL_P ( op2 ) )"		323055	0					
ANR	323170	Callee	ZVAL_DOUBLE		323055	0					
ANR	323171	Identifier	ZVAL_DOUBLE		323055	0					
ANR	323172	ArgumentList	result		323055	1					
ANR	323173	Argument	result		323055	0					
ANR	323174	Identifier	result		323055	0					
ANR	323175	Argument	( ( double ) Z_LVAL_P ( op1 ) ) * Z_DVAL_P ( op2 )		323055	1					
ANR	323176	MultiplicativeExpression	( ( double ) Z_LVAL_P ( op1 ) ) * Z_DVAL_P ( op2 )		323055	0		*			
ANR	323177	CastExpression	( double ) Z_LVAL_P ( op1 )		323055	0					
ANR	323178	CastTarget	double		323055	0					
ANR	323179	CallExpression	Z_LVAL_P ( op1 )		323055	1					
ANR	323180	Callee	Z_LVAL_P		323055	0					
ANR	323181	Identifier	Z_LVAL_P		323055	0					
ANR	323182	ArgumentList	op1		323055	1					
ANR	323183	Argument	op1		323055	0					
ANR	323184	Identifier	op1		323055	0					
ANR	323185	CallExpression	Z_DVAL_P ( op2 )		323055	1					
ANR	323186	Callee	Z_DVAL_P		323055	0					
ANR	323187	Identifier	Z_DVAL_P		323055	0					
ANR	323188	ArgumentList	op2		323055	1					
ANR	323189	Argument	op2		323055	0					
ANR	323190	Identifier	op2		323055	0					
ANR	323191	ReturnStatement	return SUCCESS ;	999:4:25110:25124	323055	18	True				
ANR	323192	Identifier	SUCCESS		323055	0					
ANR	323193	Statement	case	1001:3:25130:25133	323055	19	True				
ANR	323194	Statement	TYPE_PAIR	1001:8:25135:25143	323055	20	True				
ANR	323195	Statement	(	1001:17:25144:25144	323055	21	True				
ANR	323196	Statement	IS_DOUBLE	1001:18:25145:25153	323055	22	True				
ANR	323197	Statement	","	1001:27:25154:25154	323055	23	True				
ANR	323198	Statement	IS_LONG	1001:29:25156:25162	323055	24	True				
ANR	323199	Statement	)	1001:36:25163:25163	323055	25	True				
ANR	323200	Statement	:	1001:37:25164:25164	323055	26	True				
ANR	323201	ExpressionStatement	"ZVAL_DOUBLE ( result , Z_DVAL_P ( op1 ) * ( ( double ) Z_LVAL_P ( op2 ) ) )"	1002:4:25170:25230	323055	27	True				
ANR	323202	CallExpression	"ZVAL_DOUBLE ( result , Z_DVAL_P ( op1 ) * ( ( double ) Z_LVAL_P ( op2 ) ) )"		323055	0					
ANR	323203	Callee	ZVAL_DOUBLE		323055	0					
ANR	323204	Identifier	ZVAL_DOUBLE		323055	0					
ANR	323205	ArgumentList	result		323055	1					
ANR	323206	Argument	result		323055	0					
ANR	323207	Identifier	result		323055	0					
ANR	323208	Argument	Z_DVAL_P ( op1 ) * ( ( double ) Z_LVAL_P ( op2 ) )		323055	1					
ANR	323209	MultiplicativeExpression	Z_DVAL_P ( op1 ) * ( ( double ) Z_LVAL_P ( op2 ) )		323055	0		*			
ANR	323210	CallExpression	Z_DVAL_P ( op1 )		323055	0					
ANR	323211	Callee	Z_DVAL_P		323055	0					
ANR	323212	Identifier	Z_DVAL_P		323055	0					
ANR	323213	ArgumentList	op1		323055	1					
ANR	323214	Argument	op1		323055	0					
ANR	323215	Identifier	op1		323055	0					
ANR	323216	CastExpression	( double ) Z_LVAL_P ( op2 )		323055	1					
ANR	323217	CastTarget	double		323055	0					
ANR	323218	CallExpression	Z_LVAL_P ( op2 )		323055	1					
ANR	323219	Callee	Z_LVAL_P		323055	0					
ANR	323220	Identifier	Z_LVAL_P		323055	0					
ANR	323221	ArgumentList	op2		323055	1					
ANR	323222	Argument	op2		323055	0					
ANR	323223	Identifier	op2		323055	0					
ANR	323224	ReturnStatement	return SUCCESS ;	1003:4:25236:25250	323055	28	True				
ANR	323225	Identifier	SUCCESS		323055	0					
ANR	323226	Statement	case	1005:3:25256:25259	323055	29	True				
ANR	323227	Statement	TYPE_PAIR	1005:8:25261:25269	323055	30	True				
ANR	323228	Statement	(	1005:17:25270:25270	323055	31	True				
ANR	323229	Statement	IS_DOUBLE	1005:18:25271:25279	323055	32	True				
ANR	323230	Statement	","	1005:27:25280:25280	323055	33	True				
ANR	323231	Statement	IS_DOUBLE	1005:29:25282:25290	323055	34	True				
ANR	323232	Statement	)	1005:38:25291:25291	323055	35	True				
ANR	323233	Statement	:	1005:39:25292:25292	323055	36	True				
ANR	323234	ExpressionStatement	"ZVAL_DOUBLE ( result , Z_DVAL_P ( op1 ) * Z_DVAL_P ( op2 ) )"	1006:4:25298:25348	323055	37	True				
ANR	323235	CallExpression	"ZVAL_DOUBLE ( result , Z_DVAL_P ( op1 ) * Z_DVAL_P ( op2 ) )"		323055	0					
ANR	323236	Callee	ZVAL_DOUBLE		323055	0					
ANR	323237	Identifier	ZVAL_DOUBLE		323055	0					
ANR	323238	ArgumentList	result		323055	1					
ANR	323239	Argument	result		323055	0					
ANR	323240	Identifier	result		323055	0					
ANR	323241	Argument	Z_DVAL_P ( op1 ) * Z_DVAL_P ( op2 )		323055	1					
ANR	323242	MultiplicativeExpression	Z_DVAL_P ( op1 ) * Z_DVAL_P ( op2 )		323055	0		*			
ANR	323243	CallExpression	Z_DVAL_P ( op1 )		323055	0					
ANR	323244	Callee	Z_DVAL_P		323055	0					
ANR	323245	Identifier	Z_DVAL_P		323055	0					
ANR	323246	ArgumentList	op1		323055	1					
ANR	323247	Argument	op1		323055	0					
ANR	323248	Identifier	op1		323055	0					
ANR	323249	CallExpression	Z_DVAL_P ( op2 )		323055	1					
ANR	323250	Callee	Z_DVAL_P		323055	0					
ANR	323251	Identifier	Z_DVAL_P		323055	0					
ANR	323252	ArgumentList	op2		323055	1					
ANR	323253	Argument	op2		323055	0					
ANR	323254	Identifier	op2		323055	0					
ANR	323255	ReturnStatement	return SUCCESS ;	1007:4:25354:25368	323055	38	True				
ANR	323256	Identifier	SUCCESS		323055	0					
ANR	323257	Label	default :	1009:3:25374:25381	323055	39	True				
ANR	323258	Identifier	default		323055	0					
ANR	323259	IfStatement	if ( Z_ISREF_P ( op1 ) )		323055	40					
ANR	323260	Condition	Z_ISREF_P ( op1 )	1010:8:25391:25404	323055	0	True				
ANR	323261	CallExpression	Z_ISREF_P ( op1 )		323055	0					
ANR	323262	Callee	Z_ISREF_P		323055	0					
ANR	323263	Identifier	Z_ISREF_P		323055	0					
ANR	323264	ArgumentList	op1		323055	1					
ANR	323265	Argument	op1		323055	0					
ANR	323266	Identifier	op1		323055	0					
ANR	323267	CompoundStatement		28:24:774:774	323055	1					
ANR	323268	ExpressionStatement	op1 = Z_REFVAL_P ( op1 )	1011:5:25414:25435	323055	0	True				
ANR	323269	AssignmentExpression	op1 = Z_REFVAL_P ( op1 )		323055	0		=			
ANR	323270	Identifier	op1		323055	0					
ANR	323271	CallExpression	Z_REFVAL_P ( op1 )		323055	1					
ANR	323272	Callee	Z_REFVAL_P		323055	0					
ANR	323273	Identifier	Z_REFVAL_P		323055	0					
ANR	323274	ArgumentList	op1		323055	1					
ANR	323275	Argument	op1		323055	0					
ANR	323276	Identifier	op1		323055	0					
ANR	323277	ElseStatement	else		323055	0					
ANR	323278	IfStatement	if ( Z_ISREF_P ( op2 ) )		323055	0					
ANR	323279	Condition	Z_ISREF_P ( op2 )	1012:15:25452:25465	323055	0	True				
ANR	323280	CallExpression	Z_ISREF_P ( op2 )		323055	0					
ANR	323281	Callee	Z_ISREF_P		323055	0					
ANR	323282	Identifier	Z_ISREF_P		323055	0					
ANR	323283	ArgumentList	op2		323055	1					
ANR	323284	Argument	op2		323055	0					
ANR	323285	Identifier	op2		323055	0					
ANR	323286	CompoundStatement		30:31:835:835	323055	1					
ANR	323287	ExpressionStatement	op2 = Z_REFVAL_P ( op2 )	1013:5:25475:25496	323055	0	True				
ANR	323288	AssignmentExpression	op2 = Z_REFVAL_P ( op2 )		323055	0		=			
ANR	323289	Identifier	op2		323055	0					
ANR	323290	CallExpression	Z_REFVAL_P ( op2 )		323055	1					
ANR	323291	Callee	Z_REFVAL_P		323055	0					
ANR	323292	Identifier	Z_REFVAL_P		323055	0					
ANR	323293	ArgumentList	op2		323055	1					
ANR	323294	Argument	op2		323055	0					
ANR	323295	Identifier	op2		323055	0					
ANR	323296	ElseStatement	else		323055	0					
ANR	323297	IfStatement	if ( ! converted )		323055	0					
ANR	323298	Condition	! converted	1014:15:25513:25522	323055	0	True				
ANR	323299	UnaryOperationExpression	! converted		323055	0					
ANR	323300	UnaryOperator	!		323055	0					
ANR	323301	Identifier	converted		323055	1					
ANR	323302	CompoundStatement		32:27:892:892	323055	1					
ANR	323303	ExpressionStatement	"ZEND_TRY_BINARY_OBJECT_OPERATION ( ZEND_MUL , mul_function )"	1015:5:25532:25588	323055	0	True				
ANR	323304	CallExpression	"ZEND_TRY_BINARY_OBJECT_OPERATION ( ZEND_MUL , mul_function )"		323055	0					
ANR	323305	Callee	ZEND_TRY_BINARY_OBJECT_OPERATION		323055	0					
ANR	323306	Identifier	ZEND_TRY_BINARY_OBJECT_OPERATION		323055	0					
ANR	323307	ArgumentList	ZEND_MUL		323055	1					
ANR	323308	Argument	ZEND_MUL		323055	0					
ANR	323309	Identifier	ZEND_MUL		323055	0					
ANR	323310	Argument	mul_function		323055	1					
ANR	323311	Identifier	mul_function		323055	0					
ANR	323312	ExpressionStatement	"zendi_convert_scalar_to_number ( op1 , op1_copy , result )"	1017:5:25596:25649	323055	1	True				
ANR	323313	CallExpression	"zendi_convert_scalar_to_number ( op1 , op1_copy , result )"		323055	0					
ANR	323314	Callee	zendi_convert_scalar_to_number		323055	0					
ANR	323315	Identifier	zendi_convert_scalar_to_number		323055	0					
ANR	323316	ArgumentList	op1		323055	1					
ANR	323317	Argument	op1		323055	0					
ANR	323318	Identifier	op1		323055	0					
ANR	323319	Argument	op1_copy		323055	1					
ANR	323320	Identifier	op1_copy		323055	0					
ANR	323321	Argument	result		323055	2					
ANR	323322	Identifier	result		323055	0					
ANR	323323	ExpressionStatement	"zendi_convert_scalar_to_number ( op2 , op2_copy , result )"	1018:5:25656:25709	323055	2	True				
ANR	323324	CallExpression	"zendi_convert_scalar_to_number ( op2 , op2_copy , result )"		323055	0					
ANR	323325	Callee	zendi_convert_scalar_to_number		323055	0					
ANR	323326	Identifier	zendi_convert_scalar_to_number		323055	0					
ANR	323327	ArgumentList	op2		323055	1					
ANR	323328	Argument	op2		323055	0					
ANR	323329	Identifier	op2		323055	0					
ANR	323330	Argument	op2_copy		323055	1					
ANR	323331	Identifier	op2_copy		323055	0					
ANR	323332	Argument	result		323055	2					
ANR	323333	Identifier	result		323055	0					
ANR	323334	ExpressionStatement	converted = 1	1019:5:25716:25729	323055	3	True				
ANR	323335	AssignmentExpression	converted = 1		323055	0		=			
ANR	323336	Identifier	converted		323055	0					
ANR	323337	PrimaryExpression	1		323055	1					
ANR	323338	ElseStatement	else		323055	0					
ANR	323339	CompoundStatement		38:11:1109:1109	323055	0					
ANR	323340	ExpressionStatement	"zend_throw_error ( NULL , ""Unsupported operand types"" )"	1021:5:25749:25800	323055	0	True				
ANR	323341	CallExpression	"zend_throw_error ( NULL , ""Unsupported operand types"" )"		323055	0					
ANR	323342	Callee	zend_throw_error		323055	0					
ANR	323343	Identifier	zend_throw_error		323055	0					
ANR	323344	ArgumentList	NULL		323055	1					
ANR	323345	Argument	NULL		323055	0					
ANR	323346	Identifier	NULL		323055	0					
ANR	323347	Argument	"""Unsupported operand types"""		323055	1					
ANR	323348	PrimaryExpression	"""Unsupported operand types"""		323055	0					
ANR	323349	ReturnStatement	return FAILURE ;	1022:5:25807:25821	323055	1	True				
ANR	323350	Identifier	FAILURE		323055	0					
ANR	323351	ReturnType	ZEND_API int ZEND_FASTCALL		323055	1					
ANR	323352	Identifier	mul_function		323055	2					
ANR	323353	ParameterList	"zval * result , zval * op1 , zval * op2"		323055	3					
ANR	323354	Parameter	zval * result	982:40:24586:24597	323055	0	True				
ANR	323355	ParameterType	zval *		323055	0					
ANR	323356	Identifier	result		323055	1					
ANR	323357	Parameter	zval * op1	982:54:24600:24608	323055	1	True				
ANR	323358	ParameterType	zval *		323055	0					
ANR	323359	Identifier	op1		323055	1					
ANR	323360	Parameter	zval * op2	982:65:24611:24619	323055	2	True				
ANR	323361	ParameterType	zval *		323055	0					
ANR	323362	Identifier	op2		323055	1					
ANR	323363	CFGEntryNode	ENTRY		323055		True				
ANR	323364	CFGExitNode	EXIT		323055		True				
ANR	323365	Symbol	SUCCESS		323055						
ANR	323366	Symbol	NULL		323055						
ANR	323367	Symbol	op1_copy		323055						
ANR	323368	Symbol	mul_function		323055						
ANR	323369	Symbol	Z_TYPE_P		323055						
ANR	323370	Symbol	FAILURE		323055						
ANR	323371	Symbol	Z_DVAL_P		323055						
ANR	323372	Symbol	Z_TYPE_INFO_P		323055						
ANR	323373	Symbol	Z_LVAL_P		323055						
ANR	323374	Symbol	result		323055						
ANR	323375	Symbol	op2		323055						
ANR	323376	Symbol	op1		323055						
ANR	323377	Symbol	TYPE_PAIR		323055						
ANR	323378	Symbol	overflow		323055						
ANR	323379	Symbol	converted		323055						
ANR	323380	Symbol	IS_LONG		323055						
ANR	323381	Symbol	Z_REFVAL_P		323055						
ANR	323382	Symbol	IS_DOUBLE		323055						
ANR	323383	Symbol	ZEND_MUL		323055						
ANR	323384	Symbol	op2_copy		323055						
ANR	323385	Symbol	Z_ISREF_P		323055						
ANR	323386	Function	pow_function	1029:0:25872:28075							
ANR	323387	FunctionDef	"pow_function (zval * result , zval * op1 , zval * op2)"		323386	0					
ANR	323388	CompoundStatement		1030:0:25958:28075	323386	0					
ANR	323389	IdentifierDeclStatement	"zval op1_copy , op2_copy ;"	1031:1:25961:25984	323386	0	True				
ANR	323390	IdentifierDecl	op1_copy		323386	0					
ANR	323391	IdentifierDeclType	zval		323386	0					
ANR	323392	Identifier	op1_copy		323386	1					
ANR	323393	IdentifierDecl	op2_copy		323386	1					
ANR	323394	IdentifierDeclType	zval		323386	0					
ANR	323395	Identifier	op2_copy		323386	1					
ANR	323396	IdentifierDeclStatement	int converted = 0 ;	1032:1:25987:26004	323386	1	True				
ANR	323397	IdentifierDecl	converted = 0		323386	0					
ANR	323398	IdentifierDeclType	int		323386	0					
ANR	323399	Identifier	converted		323386	1					
ANR	323400	AssignmentExpression	converted = 0		323386	2		=			
ANR	323401	Identifier	converted		323386	0					
ANR	323402	PrimaryExpression	0		323386	1					
ANR	323403	WhileStatement	while ( 1 )		323386	2					
ANR	323404	Condition	1	1034:8:26015:26015	323386	0	True				
ANR	323405	PrimaryExpression	1		323386	0					
ANR	323406	CompoundStatement		5:11:59:59	323386	1					
ANR	323407	SwitchStatement	"switch ( TYPE_PAIR ( Z_TYPE_P ( op1 ) , Z_TYPE_P ( op2 ) ) )"		323386	0					
ANR	323408	Condition	"TYPE_PAIR ( Z_TYPE_P ( op1 ) , Z_TYPE_P ( op2 ) )"	1035:10:26030:26068	323386	0	True				
ANR	323409	CallExpression	"TYPE_PAIR ( Z_TYPE_P ( op1 ) , Z_TYPE_P ( op2 ) )"		323386	0					
ANR	323410	Callee	TYPE_PAIR		323386	0					
ANR	323411	Identifier	TYPE_PAIR		323386	0					
ANR	323412	ArgumentList	Z_TYPE_P ( op1 )		323386	1					
ANR	323413	Argument	Z_TYPE_P ( op1 )		323386	0					
ANR	323414	CallExpression	Z_TYPE_P ( op1 )		323386	0					
ANR	323415	Callee	Z_TYPE_P		323386	0					
ANR	323416	Identifier	Z_TYPE_P		323386	0					
ANR	323417	ArgumentList	op1		323386	1					
ANR	323418	Argument	op1		323386	0					
ANR	323419	Identifier	op1		323386	0					
ANR	323420	Argument	Z_TYPE_P ( op2 )		323386	1					
ANR	323421	CallExpression	Z_TYPE_P ( op2 )		323386	0					
ANR	323422	Callee	Z_TYPE_P		323386	0					
ANR	323423	Identifier	Z_TYPE_P		323386	0					
ANR	323424	ArgumentList	op2		323386	1					
ANR	323425	Argument	op2		323386	0					
ANR	323426	Identifier	op2		323386	0					
ANR	323427	CompoundStatement		6:51:112:112	323386	1					
ANR	323428	Statement	case	1036:3:26076:26079	323386	0	True				
ANR	323429	Statement	TYPE_PAIR	1036:8:26081:26089	323386	1	True				
ANR	323430	Statement	(	1036:17:26090:26090	323386	2	True				
ANR	323431	Statement	IS_LONG	1036:18:26091:26097	323386	3	True				
ANR	323432	Statement	","	1036:25:26098:26098	323386	4	True				
ANR	323433	Statement	IS_LONG	1036:27:26100:26106	323386	5	True				
ANR	323434	Statement	)	1036:34:26107:26107	323386	6	True				
ANR	323435	Statement	:	1036:35:26108:26108	323386	7	True				
ANR	323436	IfStatement	if ( Z_LVAL_P ( op2 ) >= 0 )		323386	8					
ANR	323437	Condition	Z_LVAL_P ( op2 ) >= 0	1037:8:26118:26135	323386	0	True				
ANR	323438	RelationalExpression	Z_LVAL_P ( op2 ) >= 0		323386	0		>=			
ANR	323439	CallExpression	Z_LVAL_P ( op2 )		323386	0					
ANR	323440	Callee	Z_LVAL_P		323386	0					
ANR	323441	Identifier	Z_LVAL_P		323386	0					
ANR	323442	ArgumentList	op2		323386	1					
ANR	323443	Argument	op2		323386	0					
ANR	323444	Identifier	op2		323386	0					
ANR	323445	PrimaryExpression	0		323386	1					
ANR	323446	CompoundStatement		9:5:186:241	323386	1					
ANR	323447	IdentifierDeclStatement	"zend_long l1 = 1 , l2 = Z_LVAL_P ( op1 ) , i = Z_LVAL_P ( op2 ) ;"	1038:5:26145:26200	323386	0	True				
ANR	323448	IdentifierDecl	l1 = 1		323386	0					
ANR	323449	IdentifierDeclType	zend_long		323386	0					
ANR	323450	Identifier	l1		323386	1					
ANR	323451	AssignmentExpression	l1 = 1		323386	2		=			
ANR	323452	Identifier	l1		323386	0					
ANR	323453	PrimaryExpression	1		323386	1					
ANR	323454	IdentifierDecl	l2 = Z_LVAL_P ( op1 )		323386	1					
ANR	323455	IdentifierDeclType	zend_long		323386	0					
ANR	323456	Identifier	l2		323386	1					
ANR	323457	AssignmentExpression	l2 = Z_LVAL_P ( op1 )		323386	2		=			
ANR	323458	Identifier	l2		323386	0					
ANR	323459	CallExpression	Z_LVAL_P ( op1 )		323386	1					
ANR	323460	Callee	Z_LVAL_P		323386	0					
ANR	323461	Identifier	Z_LVAL_P		323386	0					
ANR	323462	ArgumentList	op1		323386	1					
ANR	323463	Argument	op1		323386	0					
ANR	323464	Identifier	op1		323386	0					
ANR	323465	IdentifierDecl	i = Z_LVAL_P ( op2 )		323386	2					
ANR	323466	IdentifierDeclType	zend_long		323386	0					
ANR	323467	Identifier	i		323386	1					
ANR	323468	AssignmentExpression	i = Z_LVAL_P ( op2 )		323386	2		=			
ANR	323469	Identifier	i		323386	0					
ANR	323470	CallExpression	Z_LVAL_P ( op2 )		323386	1					
ANR	323471	Callee	Z_LVAL_P		323386	0					
ANR	323472	Identifier	Z_LVAL_P		323386	0					
ANR	323473	ArgumentList	op2		323386	1					
ANR	323474	Argument	op2		323386	0					
ANR	323475	Identifier	op2		323386	0					
ANR	323476	IfStatement	if ( i == 0 )		323386	1					
ANR	323477	Condition	i == 0	1040:9:26212:26217	323386	0	True				
ANR	323478	EqualityExpression	i == 0		323386	0		==			
ANR	323479	Identifier	i		323386	0					
ANR	323480	PrimaryExpression	0		323386	1					
ANR	323481	CompoundStatement		11:17:261:261	323386	1					
ANR	323482	ExpressionStatement	"ZVAL_LONG ( result , 1L )"	1041:6:26228:26249	323386	0	True				
ANR	323483	CallExpression	"ZVAL_LONG ( result , 1L )"		323386	0					
ANR	323484	Callee	ZVAL_LONG		323386	0					
ANR	323485	Identifier	ZVAL_LONG		323386	0					
ANR	323486	ArgumentList	result		323386	1					
ANR	323487	Argument	result		323386	0					
ANR	323488	Identifier	result		323386	0					
ANR	323489	Argument	1L		323386	1					
ANR	323490	PrimaryExpression	1L		323386	0					
ANR	323491	ReturnStatement	return SUCCESS ;	1042:6:26257:26271	323386	1	True				
ANR	323492	Identifier	SUCCESS		323386	0					
ANR	323493	ElseStatement	else		323386	0					
ANR	323494	IfStatement	if ( l2 == 0 )		323386	0					
ANR	323495	Condition	l2 == 0	1043:16:26289:26295	323386	0	True				
ANR	323496	EqualityExpression	l2 == 0		323386	0		==			
ANR	323497	Identifier	l2		323386	0					
ANR	323498	PrimaryExpression	0		323386	1					
ANR	323499	CompoundStatement		14:25:339:339	323386	1					
ANR	323500	ExpressionStatement	"ZVAL_LONG ( result , 0 )"	1044:6:26306:26326	323386	0	True				
ANR	323501	CallExpression	"ZVAL_LONG ( result , 0 )"		323386	0					
ANR	323502	Callee	ZVAL_LONG		323386	0					
ANR	323503	Identifier	ZVAL_LONG		323386	0					
ANR	323504	ArgumentList	result		323386	1					
ANR	323505	Argument	result		323386	0					
ANR	323506	Identifier	result		323386	0					
ANR	323507	Argument	0		323386	1					
ANR	323508	PrimaryExpression	0		323386	0					
ANR	323509	ReturnStatement	return SUCCESS ;	1045:6:26334:26348	323386	1	True				
ANR	323510	Identifier	SUCCESS		323386	0					
ANR	323511	WhileStatement	while ( i >= 1 )		323386	2					
ANR	323512	Condition	i >= 1	1048:12:26370:26375	323386	0	True				
ANR	323513	RelationalExpression	i >= 1		323386	0		>=			
ANR	323514	Identifier	i		323386	0					
ANR	323515	PrimaryExpression	1		323386	1					
ANR	323516	CompoundStatement		21:6:453:470	323386	1					
ANR	323517	IdentifierDeclStatement	zend_long overflow ;	1049:6:26386:26404	323386	0	True				
ANR	323518	IdentifierDecl	overflow		323386	0					
ANR	323519	IdentifierDeclType	zend_long		323386	0					
ANR	323520	Identifier	overflow		323386	1					
ANR	323521	IdentifierDeclStatement	double dval = 0.0 ;	1050:6:26412:26429	323386	1	True				
ANR	323522	IdentifierDecl	dval = 0.0		323386	0					
ANR	323523	IdentifierDeclType	double		323386	0					
ANR	323524	Identifier	dval		323386	1					
ANR	323525	AssignmentExpression	dval = 0.0		323386	2		=			
ANR	323526	Identifier	dval		323386	0					
ANR	323527	PrimaryExpression	0.0		323386	1					
ANR	323528	IfStatement	if ( i % 2 )		323386	2					
ANR	323529	Condition	i % 2	1052:10:26442:26446	323386	0	True				
ANR	323530	MultiplicativeExpression	i % 2		323386	0		%			
ANR	323531	Identifier	i		323386	0					
ANR	323532	PrimaryExpression	2		323386	1					
ANR	323533	CompoundStatement		23:17:490:490	323386	1					
ANR	323534	ExpressionStatement	-- i	1053:7:26458:26461	323386	0	True				
ANR	323535	UnaryExpression	-- i		323386	0					
ANR	323536	IncDec	--		323386	0					
ANR	323537	Identifier	i		323386	1					
ANR	323538	ExpressionStatement	"ZEND_SIGNED_MULTIPLY_LONG ( l1 , l2 , l1 , dval , overflow )"	1054:7:26470:26523	323386	1	True				
ANR	323539	CallExpression	"ZEND_SIGNED_MULTIPLY_LONG ( l1 , l2 , l1 , dval , overflow )"		323386	0					
ANR	323540	Callee	ZEND_SIGNED_MULTIPLY_LONG		323386	0					
ANR	323541	Identifier	ZEND_SIGNED_MULTIPLY_LONG		323386	0					
ANR	323542	ArgumentList	l1		323386	1					
ANR	323543	Argument	l1		323386	0					
ANR	323544	Identifier	l1		323386	0					
ANR	323545	Argument	l2		323386	1					
ANR	323546	Identifier	l2		323386	0					
ANR	323547	Argument	l1		323386	2					
ANR	323548	Identifier	l1		323386	0					
ANR	323549	Argument	dval		323386	3					
ANR	323550	Identifier	dval		323386	0					
ANR	323551	Argument	overflow		323386	4					
ANR	323552	Identifier	overflow		323386	0					
ANR	323553	IfStatement	if ( overflow )		323386	2					
ANR	323554	Condition	overflow	1055:11:26536:26543	323386	0	True				
ANR	323555	Identifier	overflow		323386	0					
ANR	323556	CompoundStatement		26:21:587:587	323386	1					
ANR	323557	ExpressionStatement	"ZVAL_DOUBLE ( result , dval * pow ( l2 , i ) )"	1056:8:26556:26594	323386	0	True				
ANR	323558	CallExpression	"ZVAL_DOUBLE ( result , dval * pow ( l2 , i ) )"		323386	0					
ANR	323559	Callee	ZVAL_DOUBLE		323386	0					
ANR	323560	Identifier	ZVAL_DOUBLE		323386	0					
ANR	323561	ArgumentList	result		323386	1					
ANR	323562	Argument	result		323386	0					
ANR	323563	Identifier	result		323386	0					
ANR	323564	Argument	"dval * pow ( l2 , i )"		323386	1					
ANR	323565	MultiplicativeExpression	"dval * pow ( l2 , i )"		323386	0		*			
ANR	323566	Identifier	dval		323386	0					
ANR	323567	CallExpression	"pow ( l2 , i )"		323386	1					
ANR	323568	Callee	pow		323386	0					
ANR	323569	Identifier	pow		323386	0					
ANR	323570	ArgumentList	l2		323386	1					
ANR	323571	Argument	l2		323386	0					
ANR	323572	Identifier	l2		323386	0					
ANR	323573	Argument	i		323386	1					
ANR	323574	Identifier	i		323386	0					
ANR	323575	ReturnStatement	return SUCCESS ;	1057:8:26604:26618	323386	1	True				
ANR	323576	Identifier	SUCCESS		323386	0					
ANR	323577	ElseStatement	else		323386	0					
ANR	323578	CompoundStatement		30:13:683:683	323386	0					
ANR	323579	ExpressionStatement	i /= 2	1060:7:26651:26657	323386	0	True				
ANR	323580	AssignmentExpression	i /= 2		323386	0		/=			
ANR	323581	Identifier	i		323386	0					
ANR	323582	PrimaryExpression	2		323386	1					
ANR	323583	ExpressionStatement	"ZEND_SIGNED_MULTIPLY_LONG ( l2 , l2 , l2 , dval , overflow )"	1061:7:26666:26719	323386	1	True				
ANR	323584	CallExpression	"ZEND_SIGNED_MULTIPLY_LONG ( l2 , l2 , l2 , dval , overflow )"		323386	0					
ANR	323585	Callee	ZEND_SIGNED_MULTIPLY_LONG		323386	0					
ANR	323586	Identifier	ZEND_SIGNED_MULTIPLY_LONG		323386	0					
ANR	323587	ArgumentList	l2		323386	1					
ANR	323588	Argument	l2		323386	0					
ANR	323589	Identifier	l2		323386	0					
ANR	323590	Argument	l2		323386	1					
ANR	323591	Identifier	l2		323386	0					
ANR	323592	Argument	l2		323386	2					
ANR	323593	Identifier	l2		323386	0					
ANR	323594	Argument	dval		323386	3					
ANR	323595	Identifier	dval		323386	0					
ANR	323596	Argument	overflow		323386	4					
ANR	323597	Identifier	overflow		323386	0					
ANR	323598	IfStatement	if ( overflow )		323386	2					
ANR	323599	Condition	overflow	1062:11:26732:26739	323386	0	True				
ANR	323600	Identifier	overflow		323386	0					
ANR	323601	CompoundStatement		33:21:783:783	323386	1					
ANR	323602	ExpressionStatement	"ZVAL_DOUBLE ( result , ( double ) l1 * pow ( dval , i ) )"	1063:8:26752:26798	323386	0	True				
ANR	323603	CallExpression	"ZVAL_DOUBLE ( result , ( double ) l1 * pow ( dval , i ) )"		323386	0					
ANR	323604	Callee	ZVAL_DOUBLE		323386	0					
ANR	323605	Identifier	ZVAL_DOUBLE		323386	0					
ANR	323606	ArgumentList	result		323386	1					
ANR	323607	Argument	result		323386	0					
ANR	323608	Identifier	result		323386	0					
ANR	323609	Argument	"( double ) l1 * pow ( dval , i )"		323386	1					
ANR	323610	MultiplicativeExpression	"( double ) l1 * pow ( dval , i )"		323386	0		*			
ANR	323611	CastExpression	( double ) l1		323386	0					
ANR	323612	CastTarget	double		323386	0					
ANR	323613	Identifier	l1		323386	1					
ANR	323614	CallExpression	"pow ( dval , i )"		323386	1					
ANR	323615	Callee	pow		323386	0					
ANR	323616	Identifier	pow		323386	0					
ANR	323617	ArgumentList	dval		323386	1					
ANR	323618	Argument	dval		323386	0					
ANR	323619	Identifier	dval		323386	0					
ANR	323620	Argument	i		323386	1					
ANR	323621	Identifier	i		323386	0					
ANR	323622	ReturnStatement	return SUCCESS ;	1064:8:26808:26822	323386	1	True				
ANR	323623	Identifier	SUCCESS		323386	0					
ANR	323624	ExpressionStatement	"ZVAL_LONG ( result , l1 )"	1069:5:26871:26892	323386	3	True				
ANR	323625	CallExpression	"ZVAL_LONG ( result , l1 )"		323386	0					
ANR	323626	Callee	ZVAL_LONG		323386	0					
ANR	323627	Identifier	ZVAL_LONG		323386	0					
ANR	323628	ArgumentList	result		323386	1					
ANR	323629	Argument	result		323386	0					
ANR	323630	Identifier	result		323386	0					
ANR	323631	Argument	l1		323386	1					
ANR	323632	Identifier	l1		323386	0					
ANR	323633	ElseStatement	else		323386	0					
ANR	323634	CompoundStatement		41:11:946:946	323386	0					
ANR	323635	ExpressionStatement	"ZVAL_DOUBLE ( result , pow ( ( double ) Z_LVAL_P ( op1 ) , ( double ) Z_LVAL_P ( op2 ) ) )"	1071:5:26912:26982	323386	0	True				
ANR	323636	CallExpression	"ZVAL_DOUBLE ( result , pow ( ( double ) Z_LVAL_P ( op1 ) , ( double ) Z_LVAL_P ( op2 ) ) )"		323386	0					
ANR	323637	Callee	ZVAL_DOUBLE		323386	0					
ANR	323638	Identifier	ZVAL_DOUBLE		323386	0					
ANR	323639	ArgumentList	result		323386	1					
ANR	323640	Argument	result		323386	0					
ANR	323641	Identifier	result		323386	0					
ANR	323642	Argument	"pow ( ( double ) Z_LVAL_P ( op1 ) , ( double ) Z_LVAL_P ( op2 ) )"		323386	1					
ANR	323643	CallExpression	"pow ( ( double ) Z_LVAL_P ( op1 ) , ( double ) Z_LVAL_P ( op2 ) )"		323386	0					
ANR	323644	Callee	pow		323386	0					
ANR	323645	Identifier	pow		323386	0					
ANR	323646	ArgumentList	( double ) Z_LVAL_P ( op1 )		323386	1					
ANR	323647	Argument	( double ) Z_LVAL_P ( op1 )		323386	0					
ANR	323648	CastExpression	( double ) Z_LVAL_P ( op1 )		323386	0					
ANR	323649	CastTarget	double		323386	0					
ANR	323650	CallExpression	Z_LVAL_P ( op1 )		323386	1					
ANR	323651	Callee	Z_LVAL_P		323386	0					
ANR	323652	Identifier	Z_LVAL_P		323386	0					
ANR	323653	ArgumentList	op1		323386	1					
ANR	323654	Argument	op1		323386	0					
ANR	323655	Identifier	op1		323386	0					
ANR	323656	Argument	( double ) Z_LVAL_P ( op2 )		323386	1					
ANR	323657	CastExpression	( double ) Z_LVAL_P ( op2 )		323386	0					
ANR	323658	CastTarget	double		323386	0					
ANR	323659	CallExpression	Z_LVAL_P ( op2 )		323386	1					
ANR	323660	Callee	Z_LVAL_P		323386	0					
ANR	323661	Identifier	Z_LVAL_P		323386	0					
ANR	323662	ArgumentList	op2		323386	1					
ANR	323663	Argument	op2		323386	0					
ANR	323664	Identifier	op2		323386	0					
ANR	323665	ReturnStatement	return SUCCESS ;	1073:4:26994:27008	323386	9	True				
ANR	323666	Identifier	SUCCESS		323386	0					
ANR	323667	Statement	case	1075:3:27014:27017	323386	10	True				
ANR	323668	Statement	TYPE_PAIR	1075:8:27019:27027	323386	11	True				
ANR	323669	Statement	(	1075:17:27028:27028	323386	12	True				
ANR	323670	Statement	IS_LONG	1075:18:27029:27035	323386	13	True				
ANR	323671	Statement	","	1075:25:27036:27036	323386	14	True				
ANR	323672	Statement	IS_DOUBLE	1075:27:27038:27046	323386	15	True				
ANR	323673	Statement	)	1075:36:27047:27047	323386	16	True				
ANR	323674	Statement	:	1075:37:27048:27048	323386	17	True				
ANR	323675	ExpressionStatement	"ZVAL_DOUBLE ( result , pow ( ( double ) Z_LVAL_P ( op1 ) , Z_DVAL_P ( op2 ) ) )"	1076:4:27054:27116	323386	18	True				
ANR	323676	CallExpression	"ZVAL_DOUBLE ( result , pow ( ( double ) Z_LVAL_P ( op1 ) , Z_DVAL_P ( op2 ) ) )"		323386	0					
ANR	323677	Callee	ZVAL_DOUBLE		323386	0					
ANR	323678	Identifier	ZVAL_DOUBLE		323386	0					
ANR	323679	ArgumentList	result		323386	1					
ANR	323680	Argument	result		323386	0					
ANR	323681	Identifier	result		323386	0					
ANR	323682	Argument	"pow ( ( double ) Z_LVAL_P ( op1 ) , Z_DVAL_P ( op2 ) )"		323386	1					
ANR	323683	CallExpression	"pow ( ( double ) Z_LVAL_P ( op1 ) , Z_DVAL_P ( op2 ) )"		323386	0					
ANR	323684	Callee	pow		323386	0					
ANR	323685	Identifier	pow		323386	0					
ANR	323686	ArgumentList	( double ) Z_LVAL_P ( op1 )		323386	1					
ANR	323687	Argument	( double ) Z_LVAL_P ( op1 )		323386	0					
ANR	323688	CastExpression	( double ) Z_LVAL_P ( op1 )		323386	0					
ANR	323689	CastTarget	double		323386	0					
ANR	323690	CallExpression	Z_LVAL_P ( op1 )		323386	1					
ANR	323691	Callee	Z_LVAL_P		323386	0					
ANR	323692	Identifier	Z_LVAL_P		323386	0					
ANR	323693	ArgumentList	op1		323386	1					
ANR	323694	Argument	op1		323386	0					
ANR	323695	Identifier	op1		323386	0					
ANR	323696	Argument	Z_DVAL_P ( op2 )		323386	1					
ANR	323697	CallExpression	Z_DVAL_P ( op2 )		323386	0					
ANR	323698	Callee	Z_DVAL_P		323386	0					
ANR	323699	Identifier	Z_DVAL_P		323386	0					
ANR	323700	ArgumentList	op2		323386	1					
ANR	323701	Argument	op2		323386	0					
ANR	323702	Identifier	op2		323386	0					
ANR	323703	ReturnStatement	return SUCCESS ;	1077:4:27122:27136	323386	19	True				
ANR	323704	Identifier	SUCCESS		323386	0					
ANR	323705	Statement	case	1079:3:27142:27145	323386	20	True				
ANR	323706	Statement	TYPE_PAIR	1079:8:27147:27155	323386	21	True				
ANR	323707	Statement	(	1079:17:27156:27156	323386	22	True				
ANR	323708	Statement	IS_DOUBLE	1079:18:27157:27165	323386	23	True				
ANR	323709	Statement	","	1079:27:27166:27166	323386	24	True				
ANR	323710	Statement	IS_LONG	1079:29:27168:27174	323386	25	True				
ANR	323711	Statement	)	1079:36:27175:27175	323386	26	True				
ANR	323712	Statement	:	1079:37:27176:27176	323386	27	True				
ANR	323713	ExpressionStatement	"ZVAL_DOUBLE ( result , pow ( Z_DVAL_P ( op1 ) , ( double ) Z_LVAL_P ( op2 ) ) )"	1080:4:27182:27244	323386	28	True				
ANR	323714	CallExpression	"ZVAL_DOUBLE ( result , pow ( Z_DVAL_P ( op1 ) , ( double ) Z_LVAL_P ( op2 ) ) )"		323386	0					
ANR	323715	Callee	ZVAL_DOUBLE		323386	0					
ANR	323716	Identifier	ZVAL_DOUBLE		323386	0					
ANR	323717	ArgumentList	result		323386	1					
ANR	323718	Argument	result		323386	0					
ANR	323719	Identifier	result		323386	0					
ANR	323720	Argument	"pow ( Z_DVAL_P ( op1 ) , ( double ) Z_LVAL_P ( op2 ) )"		323386	1					
ANR	323721	CallExpression	"pow ( Z_DVAL_P ( op1 ) , ( double ) Z_LVAL_P ( op2 ) )"		323386	0					
ANR	323722	Callee	pow		323386	0					
ANR	323723	Identifier	pow		323386	0					
ANR	323724	ArgumentList	Z_DVAL_P ( op1 )		323386	1					
ANR	323725	Argument	Z_DVAL_P ( op1 )		323386	0					
ANR	323726	CallExpression	Z_DVAL_P ( op1 )		323386	0					
ANR	323727	Callee	Z_DVAL_P		323386	0					
ANR	323728	Identifier	Z_DVAL_P		323386	0					
ANR	323729	ArgumentList	op1		323386	1					
ANR	323730	Argument	op1		323386	0					
ANR	323731	Identifier	op1		323386	0					
ANR	323732	Argument	( double ) Z_LVAL_P ( op2 )		323386	1					
ANR	323733	CastExpression	( double ) Z_LVAL_P ( op2 )		323386	0					
ANR	323734	CastTarget	double		323386	0					
ANR	323735	CallExpression	Z_LVAL_P ( op2 )		323386	1					
ANR	323736	Callee	Z_LVAL_P		323386	0					
ANR	323737	Identifier	Z_LVAL_P		323386	0					
ANR	323738	ArgumentList	op2		323386	1					
ANR	323739	Argument	op2		323386	0					
ANR	323740	Identifier	op2		323386	0					
ANR	323741	ReturnStatement	return SUCCESS ;	1081:4:27250:27264	323386	29	True				
ANR	323742	Identifier	SUCCESS		323386	0					
ANR	323743	Statement	case	1083:3:27270:27273	323386	30	True				
ANR	323744	Statement	TYPE_PAIR	1083:8:27275:27283	323386	31	True				
ANR	323745	Statement	(	1083:17:27284:27284	323386	32	True				
ANR	323746	Statement	IS_DOUBLE	1083:18:27285:27293	323386	33	True				
ANR	323747	Statement	","	1083:27:27294:27294	323386	34	True				
ANR	323748	Statement	IS_DOUBLE	1083:29:27296:27304	323386	35	True				
ANR	323749	Statement	)	1083:38:27305:27305	323386	36	True				
ANR	323750	Statement	:	1083:39:27306:27306	323386	37	True				
ANR	323751	ExpressionStatement	"ZVAL_DOUBLE ( result , pow ( Z_DVAL_P ( op1 ) , Z_DVAL_P ( op2 ) ) )"	1084:4:27312:27366	323386	38	True				
ANR	323752	CallExpression	"ZVAL_DOUBLE ( result , pow ( Z_DVAL_P ( op1 ) , Z_DVAL_P ( op2 ) ) )"		323386	0					
ANR	323753	Callee	ZVAL_DOUBLE		323386	0					
ANR	323754	Identifier	ZVAL_DOUBLE		323386	0					
ANR	323755	ArgumentList	result		323386	1					
ANR	323756	Argument	result		323386	0					
ANR	323757	Identifier	result		323386	0					
ANR	323758	Argument	"pow ( Z_DVAL_P ( op1 ) , Z_DVAL_P ( op2 ) )"		323386	1					
ANR	323759	CallExpression	"pow ( Z_DVAL_P ( op1 ) , Z_DVAL_P ( op2 ) )"		323386	0					
ANR	323760	Callee	pow		323386	0					
ANR	323761	Identifier	pow		323386	0					
ANR	323762	ArgumentList	Z_DVAL_P ( op1 )		323386	1					
ANR	323763	Argument	Z_DVAL_P ( op1 )		323386	0					
ANR	323764	CallExpression	Z_DVAL_P ( op1 )		323386	0					
ANR	323765	Callee	Z_DVAL_P		323386	0					
ANR	323766	Identifier	Z_DVAL_P		323386	0					
ANR	323767	ArgumentList	op1		323386	1					
ANR	323768	Argument	op1		323386	0					
ANR	323769	Identifier	op1		323386	0					
ANR	323770	Argument	Z_DVAL_P ( op2 )		323386	1					
ANR	323771	CallExpression	Z_DVAL_P ( op2 )		323386	0					
ANR	323772	Callee	Z_DVAL_P		323386	0					
ANR	323773	Identifier	Z_DVAL_P		323386	0					
ANR	323774	ArgumentList	op2		323386	1					
ANR	323775	Argument	op2		323386	0					
ANR	323776	Identifier	op2		323386	0					
ANR	323777	ReturnStatement	return SUCCESS ;	1085:4:27372:27386	323386	39	True				
ANR	323778	Identifier	SUCCESS		323386	0					
ANR	323779	Label	default :	1087:3:27392:27399	323386	40	True				
ANR	323780	Identifier	default		323386	0					
ANR	323781	IfStatement	if ( Z_ISREF_P ( op1 ) )		323386	41					
ANR	323782	Condition	Z_ISREF_P ( op1 )	1088:8:27409:27422	323386	0	True				
ANR	323783	CallExpression	Z_ISREF_P ( op1 )		323386	0					
ANR	323784	Callee	Z_ISREF_P		323386	0					
ANR	323785	Identifier	Z_ISREF_P		323386	0					
ANR	323786	ArgumentList	op1		323386	1					
ANR	323787	Argument	op1		323386	0					
ANR	323788	Identifier	op1		323386	0					
ANR	323789	CompoundStatement		59:24:1466:1466	323386	1					
ANR	323790	ExpressionStatement	op1 = Z_REFVAL_P ( op1 )	1089:5:27432:27453	323386	0	True				
ANR	323791	AssignmentExpression	op1 = Z_REFVAL_P ( op1 )		323386	0		=			
ANR	323792	Identifier	op1		323386	0					
ANR	323793	CallExpression	Z_REFVAL_P ( op1 )		323386	1					
ANR	323794	Callee	Z_REFVAL_P		323386	0					
ANR	323795	Identifier	Z_REFVAL_P		323386	0					
ANR	323796	ArgumentList	op1		323386	1					
ANR	323797	Argument	op1		323386	0					
ANR	323798	Identifier	op1		323386	0					
ANR	323799	ElseStatement	else		323386	0					
ANR	323800	IfStatement	if ( Z_ISREF_P ( op2 ) )		323386	0					
ANR	323801	Condition	Z_ISREF_P ( op2 )	1090:15:27470:27483	323386	0	True				
ANR	323802	CallExpression	Z_ISREF_P ( op2 )		323386	0					
ANR	323803	Callee	Z_ISREF_P		323386	0					
ANR	323804	Identifier	Z_ISREF_P		323386	0					
ANR	323805	ArgumentList	op2		323386	1					
ANR	323806	Argument	op2		323386	0					
ANR	323807	Identifier	op2		323386	0					
ANR	323808	CompoundStatement		61:31:1527:1527	323386	1					
ANR	323809	ExpressionStatement	op2 = Z_REFVAL_P ( op2 )	1091:5:27493:27514	323386	0	True				
ANR	323810	AssignmentExpression	op2 = Z_REFVAL_P ( op2 )		323386	0		=			
ANR	323811	Identifier	op2		323386	0					
ANR	323812	CallExpression	Z_REFVAL_P ( op2 )		323386	1					
ANR	323813	Callee	Z_REFVAL_P		323386	0					
ANR	323814	Identifier	Z_REFVAL_P		323386	0					
ANR	323815	ArgumentList	op2		323386	1					
ANR	323816	Argument	op2		323386	0					
ANR	323817	Identifier	op2		323386	0					
ANR	323818	ElseStatement	else		323386	0					
ANR	323819	IfStatement	if ( ! converted )		323386	0					
ANR	323820	Condition	! converted	1092:15:27531:27540	323386	0	True				
ANR	323821	UnaryOperationExpression	! converted		323386	0					
ANR	323822	UnaryOperator	!		323386	0					
ANR	323823	Identifier	converted		323386	1					
ANR	323824	CompoundStatement		63:27:1584:1584	323386	1					
ANR	323825	ExpressionStatement	"ZEND_TRY_BINARY_OBJECT_OPERATION ( ZEND_POW , pow_function )"	1093:5:27550:27606	323386	0	True				
ANR	323826	CallExpression	"ZEND_TRY_BINARY_OBJECT_OPERATION ( ZEND_POW , pow_function )"		323386	0					
ANR	323827	Callee	ZEND_TRY_BINARY_OBJECT_OPERATION		323386	0					
ANR	323828	Identifier	ZEND_TRY_BINARY_OBJECT_OPERATION		323386	0					
ANR	323829	ArgumentList	ZEND_POW		323386	1					
ANR	323830	Argument	ZEND_POW		323386	0					
ANR	323831	Identifier	ZEND_POW		323386	0					
ANR	323832	Argument	pow_function		323386	1					
ANR	323833	Identifier	pow_function		323386	0					
ANR	323834	IfStatement	if ( Z_TYPE_P ( op1 ) == IS_ARRAY )		323386	1					
ANR	323835	Condition	Z_TYPE_P ( op1 ) == IS_ARRAY	1095:9:27618:27642	323386	0	True				
ANR	323836	EqualityExpression	Z_TYPE_P ( op1 ) == IS_ARRAY		323386	0		==			
ANR	323837	CallExpression	Z_TYPE_P ( op1 )		323386	0					
ANR	323838	Callee	Z_TYPE_P		323386	0					
ANR	323839	Identifier	Z_TYPE_P		323386	0					
ANR	323840	ArgumentList	op1		323386	1					
ANR	323841	Argument	op1		323386	0					
ANR	323842	Identifier	op1		323386	0					
ANR	323843	Identifier	IS_ARRAY		323386	1					
ANR	323844	CompoundStatement		66:36:1686:1686	323386	1					
ANR	323845	ExpressionStatement	"ZVAL_LONG ( result , 0 )"	1096:6:27653:27673	323386	0	True				
ANR	323846	CallExpression	"ZVAL_LONG ( result , 0 )"		323386	0					
ANR	323847	Callee	ZVAL_LONG		323386	0					
ANR	323848	Identifier	ZVAL_LONG		323386	0					
ANR	323849	ArgumentList	result		323386	1					
ANR	323850	Argument	result		323386	0					
ANR	323851	Identifier	result		323386	0					
ANR	323852	Argument	0		323386	1					
ANR	323853	PrimaryExpression	0		323386	0					
ANR	323854	ReturnStatement	return SUCCESS ;	1097:6:27681:27695	323386	1	True				
ANR	323855	Identifier	SUCCESS		323386	0					
ANR	323856	ElseStatement	else		323386	0					
ANR	323857	CompoundStatement		69:12:1750:1750	323386	0					
ANR	323858	ExpressionStatement	"zendi_convert_scalar_to_number ( op1 , op1_copy , result )"	1099:6:27717:27770	323386	0	True				
ANR	323859	CallExpression	"zendi_convert_scalar_to_number ( op1 , op1_copy , result )"		323386	0					
ANR	323860	Callee	zendi_convert_scalar_to_number		323386	0					
ANR	323861	Identifier	zendi_convert_scalar_to_number		323386	0					
ANR	323862	ArgumentList	op1		323386	1					
ANR	323863	Argument	op1		323386	0					
ANR	323864	Identifier	op1		323386	0					
ANR	323865	Argument	op1_copy		323386	1					
ANR	323866	Identifier	op1_copy		323386	0					
ANR	323867	Argument	result		323386	2					
ANR	323868	Identifier	result		323386	0					
ANR	323869	IfStatement	if ( Z_TYPE_P ( op2 ) == IS_ARRAY )		323386	2					
ANR	323870	Condition	Z_TYPE_P ( op2 ) == IS_ARRAY	1101:9:27788:27812	323386	0	True				
ANR	323871	EqualityExpression	Z_TYPE_P ( op2 ) == IS_ARRAY		323386	0		==			
ANR	323872	CallExpression	Z_TYPE_P ( op2 )		323386	0					
ANR	323873	Callee	Z_TYPE_P		323386	0					
ANR	323874	Identifier	Z_TYPE_P		323386	0					
ANR	323875	ArgumentList	op2		323386	1					
ANR	323876	Argument	op2		323386	0					
ANR	323877	Identifier	op2		323386	0					
ANR	323878	Identifier	IS_ARRAY		323386	1					
ANR	323879	CompoundStatement		72:36:1856:1856	323386	1					
ANR	323880	ExpressionStatement	"ZVAL_LONG ( result , 1L )"	1102:6:27823:27844	323386	0	True				
ANR	323881	CallExpression	"ZVAL_LONG ( result , 1L )"		323386	0					
ANR	323882	Callee	ZVAL_LONG		323386	0					
ANR	323883	Identifier	ZVAL_LONG		323386	0					
ANR	323884	ArgumentList	result		323386	1					
ANR	323885	Argument	result		323386	0					
ANR	323886	Identifier	result		323386	0					
ANR	323887	Argument	1L		323386	1					
ANR	323888	PrimaryExpression	1L		323386	0					
ANR	323889	ReturnStatement	return SUCCESS ;	1103:6:27852:27866	323386	1	True				
ANR	323890	Identifier	SUCCESS		323386	0					
ANR	323891	ElseStatement	else		323386	0					
ANR	323892	CompoundStatement		75:12:1921:1921	323386	0					
ANR	323893	ExpressionStatement	"zendi_convert_scalar_to_number ( op2 , op2_copy , result )"	1105:6:27888:27941	323386	0	True				
ANR	323894	CallExpression	"zendi_convert_scalar_to_number ( op2 , op2_copy , result )"		323386	0					
ANR	323895	Callee	zendi_convert_scalar_to_number		323386	0					
ANR	323896	Identifier	zendi_convert_scalar_to_number		323386	0					
ANR	323897	ArgumentList	op2		323386	1					
ANR	323898	Argument	op2		323386	0					
ANR	323899	Identifier	op2		323386	0					
ANR	323900	Argument	op2_copy		323386	1					
ANR	323901	Identifier	op2_copy		323386	0					
ANR	323902	Argument	result		323386	2					
ANR	323903	Identifier	result		323386	0					
ANR	323904	ExpressionStatement	converted = 1	1107:5:27955:27968	323386	3	True				
ANR	323905	AssignmentExpression	converted = 1		323386	0		=			
ANR	323906	Identifier	converted		323386	0					
ANR	323907	PrimaryExpression	1		323386	1					
ANR	323908	ElseStatement	else		323386	0					
ANR	323909	CompoundStatement		79:11:2022:2022	323386	0					
ANR	323910	ExpressionStatement	"zend_throw_error ( NULL , ""Unsupported operand types"" )"	1109:5:27988:28039	323386	0	True				
ANR	323911	CallExpression	"zend_throw_error ( NULL , ""Unsupported operand types"" )"		323386	0					
ANR	323912	Callee	zend_throw_error		323386	0					
ANR	323913	Identifier	zend_throw_error		323386	0					
ANR	323914	ArgumentList	NULL		323386	1					
ANR	323915	Argument	NULL		323386	0					
ANR	323916	Identifier	NULL		323386	0					
ANR	323917	Argument	"""Unsupported operand types"""		323386	1					
ANR	323918	PrimaryExpression	"""Unsupported operand types"""		323386	0					
ANR	323919	ReturnStatement	return FAILURE ;	1110:5:28046:28060	323386	1	True				
ANR	323920	Identifier	FAILURE		323386	0					
ANR	323921	ReturnType	ZEND_API int ZEND_FASTCALL		323386	1					
ANR	323922	Identifier	pow_function		323386	2					
ANR	323923	ParameterList	"zval * result , zval * op1 , zval * op2"		323386	3					
ANR	323924	Parameter	zval * result	1029:40:25912:25923	323386	0	True				
ANR	323925	ParameterType	zval *		323386	0					
ANR	323926	Identifier	result		323386	1					
ANR	323927	Parameter	zval * op1	1029:54:25926:25934	323386	1	True				
ANR	323928	ParameterType	zval *		323386	0					
ANR	323929	Identifier	op1		323386	1					
ANR	323930	Parameter	zval * op2	1029:65:25937:25945	323386	2	True				
ANR	323931	ParameterType	zval *		323386	0					
ANR	323932	Identifier	op2		323386	1					
ANR	323933	CFGEntryNode	ENTRY		323386		True				
ANR	323934	CFGExitNode	EXIT		323386		True				
ANR	323935	Symbol	SUCCESS		323386						
ANR	323936	Symbol	NULL		323386						
ANR	323937	Symbol	l1		323386						
ANR	323938	Symbol	pow_function		323386						
ANR	323939	Symbol	l2		323386						
ANR	323940	Symbol	ZEND_POW		323386						
ANR	323941	Symbol	op1_copy		323386						
ANR	323942	Symbol	i		323386						
ANR	323943	Symbol	Z_TYPE_P		323386						
ANR	323944	Symbol	FAILURE		323386						
ANR	323945	Symbol	Z_DVAL_P		323386						
ANR	323946	Symbol	Z_LVAL_P		323386						
ANR	323947	Symbol	result		323386						
ANR	323948	Symbol	op2		323386						
ANR	323949	Symbol	op1		323386						
ANR	323950	Symbol	TYPE_PAIR		323386						
ANR	323951	Symbol	dval		323386						
ANR	323952	Symbol	overflow		323386						
ANR	323953	Symbol	converted		323386						
ANR	323954	Symbol	IS_ARRAY		323386						
ANR	323955	Symbol	Z_REFVAL_P		323386						
ANR	323956	Symbol	pow		323386						
ANR	323957	Symbol	op2_copy		323386						
ANR	323958	Symbol	Z_ISREF_P		323386						
ANR	323959	Function	div_function	1117:0:28088:30025							
ANR	323960	FunctionDef	"div_function (zval * result , zval * op1 , zval * op2)"		323959	0					
ANR	323961	CompoundStatement		1118:0:28174:30025	323959	0					
ANR	323962	IdentifierDeclStatement	"zval op1_copy , op2_copy ;"	1119:1:28177:28200	323959	0	True				
ANR	323963	IdentifierDecl	op1_copy		323959	0					
ANR	323964	IdentifierDeclType	zval		323959	0					
ANR	323965	Identifier	op1_copy		323959	1					
ANR	323966	IdentifierDecl	op2_copy		323959	1					
ANR	323967	IdentifierDeclType	zval		323959	0					
ANR	323968	Identifier	op2_copy		323959	1					
ANR	323969	IdentifierDeclStatement	int converted = 0 ;	1120:1:28203:28220	323959	1	True				
ANR	323970	IdentifierDecl	converted = 0		323959	0					
ANR	323971	IdentifierDeclType	int		323959	0					
ANR	323972	Identifier	converted		323959	1					
ANR	323973	AssignmentExpression	converted = 0		323959	2		=			
ANR	323974	Identifier	converted		323959	0					
ANR	323975	PrimaryExpression	0		323959	1					
ANR	323976	WhileStatement	while ( 1 )		323959	2					
ANR	323977	Condition	1	1122:8:28231:28231	323959	0	True				
ANR	323978	PrimaryExpression	1		323959	0					
ANR	323979	CompoundStatement		5:11:59:59	323959	1					
ANR	323980	SwitchStatement	"switch ( TYPE_PAIR ( Z_TYPE_P ( op1 ) , Z_TYPE_P ( op2 ) ) )"		323959	0					
ANR	323981	Condition	"TYPE_PAIR ( Z_TYPE_P ( op1 ) , Z_TYPE_P ( op2 ) )"	1123:10:28246:28284	323959	0	True				
ANR	323982	CallExpression	"TYPE_PAIR ( Z_TYPE_P ( op1 ) , Z_TYPE_P ( op2 ) )"		323959	0					
ANR	323983	Callee	TYPE_PAIR		323959	0					
ANR	323984	Identifier	TYPE_PAIR		323959	0					
ANR	323985	ArgumentList	Z_TYPE_P ( op1 )		323959	1					
ANR	323986	Argument	Z_TYPE_P ( op1 )		323959	0					
ANR	323987	CallExpression	Z_TYPE_P ( op1 )		323959	0					
ANR	323988	Callee	Z_TYPE_P		323959	0					
ANR	323989	Identifier	Z_TYPE_P		323959	0					
ANR	323990	ArgumentList	op1		323959	1					
ANR	323991	Argument	op1		323959	0					
ANR	323992	Identifier	op1		323959	0					
ANR	323993	Argument	Z_TYPE_P ( op2 )		323959	1					
ANR	323994	CallExpression	Z_TYPE_P ( op2 )		323959	0					
ANR	323995	Callee	Z_TYPE_P		323959	0					
ANR	323996	Identifier	Z_TYPE_P		323959	0					
ANR	323997	ArgumentList	op2		323959	1					
ANR	323998	Argument	op2		323959	0					
ANR	323999	Identifier	op2		323959	0					
ANR	324000	CompoundStatement		6:51:112:112	323959	1					
ANR	324001	Statement	case	1124:3:28292:28295	323959	0	True				
ANR	324002	Statement	TYPE_PAIR	1124:8:28297:28305	323959	1	True				
ANR	324003	Statement	(	1124:17:28306:28306	323959	2	True				
ANR	324004	Statement	IS_LONG	1124:18:28307:28313	323959	3	True				
ANR	324005	Statement	","	1124:25:28314:28314	323959	4	True				
ANR	324006	Statement	IS_LONG	1124:27:28316:28322	323959	5	True				
ANR	324007	Statement	)	1124:34:28323:28323	323959	6	True				
ANR	324008	Statement	:	1124:35:28324:28324	323959	7	True				
ANR	324009	IfStatement	if ( Z_LVAL_P ( op2 ) == 0 )		323959	8					
ANR	324010	Condition	Z_LVAL_P ( op2 ) == 0	1125:8:28334:28351	323959	0	True				
ANR	324011	EqualityExpression	Z_LVAL_P ( op2 ) == 0		323959	0		==			
ANR	324012	CallExpression	Z_LVAL_P ( op2 )		323959	0					
ANR	324013	Callee	Z_LVAL_P		323959	0					
ANR	324014	Identifier	Z_LVAL_P		323959	0					
ANR	324015	ArgumentList	op2		323959	1					
ANR	324016	Argument	op2		323959	0					
ANR	324017	Identifier	op2		323959	0					
ANR	324018	PrimaryExpression	0		323959	1					
ANR	324019	CompoundStatement		8:28:179:179	323959	1					
ANR	324020	ExpressionStatement	"zend_error ( E_WARNING , ""Division by zero"" )"	1126:5:28361:28402	323959	0	True				
ANR	324021	CallExpression	"zend_error ( E_WARNING , ""Division by zero"" )"		323959	0					
ANR	324022	Callee	zend_error		323959	0					
ANR	324023	Identifier	zend_error		323959	0					
ANR	324024	ArgumentList	E_WARNING		323959	1					
ANR	324025	Argument	E_WARNING		323959	0					
ANR	324026	Identifier	E_WARNING		323959	0					
ANR	324027	Argument	"""Division by zero"""		323959	1					
ANR	324028	PrimaryExpression	"""Division by zero"""		323959	0					
ANR	324029	ExpressionStatement	"ZVAL_DOUBLE ( result , ( ( double ) Z_LVAL_P ( op1 ) / ( double ) Z_LVAL_P ( op2 ) ) )"	1127:5:28409:28479	323959	1	True				
ANR	324030	CallExpression	"ZVAL_DOUBLE ( result , ( ( double ) Z_LVAL_P ( op1 ) / ( double ) Z_LVAL_P ( op2 ) ) )"		323959	0					
ANR	324031	Callee	ZVAL_DOUBLE		323959	0					
ANR	324032	Identifier	ZVAL_DOUBLE		323959	0					
ANR	324033	ArgumentList	result		323959	1					
ANR	324034	Argument	result		323959	0					
ANR	324035	Identifier	result		323959	0					
ANR	324036	Argument	( double ) Z_LVAL_P ( op1 ) / ( double ) Z_LVAL_P ( op2 )		323959	1					
ANR	324037	MultiplicativeExpression	( double ) Z_LVAL_P ( op1 ) / ( double ) Z_LVAL_P ( op2 )		323959	0		/			
ANR	324038	CastExpression	( double ) Z_LVAL_P ( op1 )		323959	0					
ANR	324039	CastTarget	double		323959	0					
ANR	324040	CallExpression	Z_LVAL_P ( op1 )		323959	1					
ANR	324041	Callee	Z_LVAL_P		323959	0					
ANR	324042	Identifier	Z_LVAL_P		323959	0					
ANR	324043	ArgumentList	op1		323959	1					
ANR	324044	Argument	op1		323959	0					
ANR	324045	Identifier	op1		323959	0					
ANR	324046	CastExpression	( double ) Z_LVAL_P ( op2 )		323959	1					
ANR	324047	CastTarget	double		323959	0					
ANR	324048	CallExpression	Z_LVAL_P ( op2 )		323959	1					
ANR	324049	Callee	Z_LVAL_P		323959	0					
ANR	324050	Identifier	Z_LVAL_P		323959	0					
ANR	324051	ArgumentList	op2		323959	1					
ANR	324052	Argument	op2		323959	0					
ANR	324053	Identifier	op2		323959	0					
ANR	324054	ReturnStatement	return SUCCESS ;	1128:5:28486:28500	323959	2	True				
ANR	324055	Identifier	SUCCESS		323959	0					
ANR	324056	ElseStatement	else		323959	0					
ANR	324057	IfStatement	if ( Z_LVAL_P ( op2 ) == - 1 && Z_LVAL_P ( op1 ) == ZEND_LONG_MIN )		323959	0					
ANR	324058	Condition	Z_LVAL_P ( op2 ) == - 1 && Z_LVAL_P ( op1 ) == ZEND_LONG_MIN	1129:15:28517:28569	323959	0	True				
ANR	324059	AndExpression	Z_LVAL_P ( op2 ) == - 1 && Z_LVAL_P ( op1 ) == ZEND_LONG_MIN		323959	0		&&			
ANR	324060	EqualityExpression	Z_LVAL_P ( op2 ) == - 1		323959	0		==			
ANR	324061	CallExpression	Z_LVAL_P ( op2 )		323959	0					
ANR	324062	Callee	Z_LVAL_P		323959	0					
ANR	324063	Identifier	Z_LVAL_P		323959	0					
ANR	324064	ArgumentList	op2		323959	1					
ANR	324065	Argument	op2		323959	0					
ANR	324066	Identifier	op2		323959	0					
ANR	324067	UnaryOperationExpression	- 1		323959	1					
ANR	324068	UnaryOperator	-		323959	0					
ANR	324069	PrimaryExpression	1		323959	1					
ANR	324070	EqualityExpression	Z_LVAL_P ( op1 ) == ZEND_LONG_MIN		323959	1		==			
ANR	324071	CallExpression	Z_LVAL_P ( op1 )		323959	0					
ANR	324072	Callee	Z_LVAL_P		323959	0					
ANR	324073	Identifier	Z_LVAL_P		323959	0					
ANR	324074	ArgumentList	op1		323959	1					
ANR	324075	Argument	op1		323959	0					
ANR	324076	Identifier	op1		323959	0					
ANR	324077	Identifier	ZEND_LONG_MIN		323959	1					
ANR	324078	CompoundStatement		12:70:397:397	323959	1					
ANR	324079	ExpressionStatement	"ZVAL_DOUBLE ( result , ( double ) ZEND_LONG_MIN / - 1 )"	1131:5:28619:28667	323959	0	True				
ANR	324080	CallExpression	"ZVAL_DOUBLE ( result , ( double ) ZEND_LONG_MIN / - 1 )"		323959	0					
ANR	324081	Callee	ZVAL_DOUBLE		323959	0					
ANR	324082	Identifier	ZVAL_DOUBLE		323959	0					
ANR	324083	ArgumentList	result		323959	1					
ANR	324084	Argument	result		323959	0					
ANR	324085	Identifier	result		323959	0					
ANR	324086	Argument	( double ) ZEND_LONG_MIN / - 1		323959	1					
ANR	324087	MultiplicativeExpression	( double ) ZEND_LONG_MIN / - 1		323959	0		/			
ANR	324088	CastExpression	( double ) ZEND_LONG_MIN		323959	0					
ANR	324089	CastTarget	double		323959	0					
ANR	324090	Identifier	ZEND_LONG_MIN		323959	1					
ANR	324091	UnaryOperationExpression	- 1		323959	1					
ANR	324092	UnaryOperator	-		323959	0					
ANR	324093	PrimaryExpression	1		323959	1					
ANR	324094	ReturnStatement	return SUCCESS ;	1132:5:28674:28688	323959	1	True				
ANR	324095	Identifier	SUCCESS		323959	0					
ANR	324096	IfStatement	if ( Z_LVAL_P ( op1 ) % Z_LVAL_P ( op2 ) == 0 )		323959	9					
ANR	324097	Condition	Z_LVAL_P ( op1 ) % Z_LVAL_P ( op2 ) == 0	1134:8:28704:28737	323959	0	True				
ANR	324098	EqualityExpression	Z_LVAL_P ( op1 ) % Z_LVAL_P ( op2 ) == 0		323959	0		==			
ANR	324099	MultiplicativeExpression	Z_LVAL_P ( op1 ) % Z_LVAL_P ( op2 )		323959	0		%			
ANR	324100	CallExpression	Z_LVAL_P ( op1 )		323959	0					
ANR	324101	Callee	Z_LVAL_P		323959	0					
ANR	324102	Identifier	Z_LVAL_P		323959	0					
ANR	324103	ArgumentList	op1		323959	1					
ANR	324104	Argument	op1		323959	0					
ANR	324105	Identifier	op1		323959	0					
ANR	324106	CallExpression	Z_LVAL_P ( op2 )		323959	1					
ANR	324107	Callee	Z_LVAL_P		323959	0					
ANR	324108	Identifier	Z_LVAL_P		323959	0					
ANR	324109	ArgumentList	op2		323959	1					
ANR	324110	Argument	op2		323959	0					
ANR	324111	Identifier	op2		323959	0					
ANR	324112	PrimaryExpression	0		323959	1					
ANR	324113	CompoundStatement		17:44:565:565	323959	1					
ANR	324114	ExpressionStatement	"ZVAL_LONG ( result , Z_LVAL_P ( op1 ) / Z_LVAL_P ( op2 ) )"	1135:5:28761:28809	323959	0	True				
ANR	324115	CallExpression	"ZVAL_LONG ( result , Z_LVAL_P ( op1 ) / Z_LVAL_P ( op2 ) )"		323959	0					
ANR	324116	Callee	ZVAL_LONG		323959	0					
ANR	324117	Identifier	ZVAL_LONG		323959	0					
ANR	324118	ArgumentList	result		323959	1					
ANR	324119	Argument	result		323959	0					
ANR	324120	Identifier	result		323959	0					
ANR	324121	Argument	Z_LVAL_P ( op1 ) / Z_LVAL_P ( op2 )		323959	1					
ANR	324122	MultiplicativeExpression	Z_LVAL_P ( op1 ) / Z_LVAL_P ( op2 )		323959	0		/			
ANR	324123	CallExpression	Z_LVAL_P ( op1 )		323959	0					
ANR	324124	Callee	Z_LVAL_P		323959	0					
ANR	324125	Identifier	Z_LVAL_P		323959	0					
ANR	324126	ArgumentList	op1		323959	1					
ANR	324127	Argument	op1		323959	0					
ANR	324128	Identifier	op1		323959	0					
ANR	324129	CallExpression	Z_LVAL_P ( op2 )		323959	1					
ANR	324130	Callee	Z_LVAL_P		323959	0					
ANR	324131	Identifier	Z_LVAL_P		323959	0					
ANR	324132	ArgumentList	op2		323959	1					
ANR	324133	Argument	op2		323959	0					
ANR	324134	Identifier	op2		323959	0					
ANR	324135	ElseStatement	else		323959	0					
ANR	324136	CompoundStatement		19:11:647:647	323959	0					
ANR	324137	ExpressionStatement	"ZVAL_DOUBLE ( result , ( ( double ) Z_LVAL_P ( op1 ) ) / Z_LVAL_P ( op2 ) )"	1137:5:28829:28890	323959	0	True				
ANR	324138	CallExpression	"ZVAL_DOUBLE ( result , ( ( double ) Z_LVAL_P ( op1 ) ) / Z_LVAL_P ( op2 ) )"		323959	0					
ANR	324139	Callee	ZVAL_DOUBLE		323959	0					
ANR	324140	Identifier	ZVAL_DOUBLE		323959	0					
ANR	324141	ArgumentList	result		323959	1					
ANR	324142	Argument	result		323959	0					
ANR	324143	Identifier	result		323959	0					
ANR	324144	Argument	( ( double ) Z_LVAL_P ( op1 ) ) / Z_LVAL_P ( op2 )		323959	1					
ANR	324145	MultiplicativeExpression	( ( double ) Z_LVAL_P ( op1 ) ) / Z_LVAL_P ( op2 )		323959	0		/			
ANR	324146	CastExpression	( double ) Z_LVAL_P ( op1 )		323959	0					
ANR	324147	CastTarget	double		323959	0					
ANR	324148	CallExpression	Z_LVAL_P ( op1 )		323959	1					
ANR	324149	Callee	Z_LVAL_P		323959	0					
ANR	324150	Identifier	Z_LVAL_P		323959	0					
ANR	324151	ArgumentList	op1		323959	1					
ANR	324152	Argument	op1		323959	0					
ANR	324153	Identifier	op1		323959	0					
ANR	324154	CallExpression	Z_LVAL_P ( op2 )		323959	1					
ANR	324155	Callee	Z_LVAL_P		323959	0					
ANR	324156	Identifier	Z_LVAL_P		323959	0					
ANR	324157	ArgumentList	op2		323959	1					
ANR	324158	Argument	op2		323959	0					
ANR	324159	Identifier	op2		323959	0					
ANR	324160	ReturnStatement	return SUCCESS ;	1139:4:28902:28916	323959	10	True				
ANR	324161	Identifier	SUCCESS		323959	0					
ANR	324162	Statement	case	1141:3:28922:28925	323959	11	True				
ANR	324163	Statement	TYPE_PAIR	1141:8:28927:28935	323959	12	True				
ANR	324164	Statement	(	1141:17:28936:28936	323959	13	True				
ANR	324165	Statement	IS_DOUBLE	1141:18:28937:28945	323959	14	True				
ANR	324166	Statement	","	1141:27:28946:28946	323959	15	True				
ANR	324167	Statement	IS_LONG	1141:29:28948:28954	323959	16	True				
ANR	324168	Statement	)	1141:36:28955:28955	323959	17	True				
ANR	324169	Statement	:	1141:37:28956:28956	323959	18	True				
ANR	324170	IfStatement	if ( Z_LVAL_P ( op2 ) == 0 )		323959	19					
ANR	324171	Condition	Z_LVAL_P ( op2 ) == 0	1142:8:28966:28983	323959	0	True				
ANR	324172	EqualityExpression	Z_LVAL_P ( op2 ) == 0		323959	0		==			
ANR	324173	CallExpression	Z_LVAL_P ( op2 )		323959	0					
ANR	324174	Callee	Z_LVAL_P		323959	0					
ANR	324175	Identifier	Z_LVAL_P		323959	0					
ANR	324176	ArgumentList	op2		323959	1					
ANR	324177	Argument	op2		323959	0					
ANR	324178	Identifier	op2		323959	0					
ANR	324179	PrimaryExpression	0		323959	1					
ANR	324180	CompoundStatement		25:28:811:811	323959	1					
ANR	324181	ExpressionStatement	"zend_error ( E_WARNING , ""Division by zero"" )"	1143:5:28993:29034	323959	0	True				
ANR	324182	CallExpression	"zend_error ( E_WARNING , ""Division by zero"" )"		323959	0					
ANR	324183	Callee	zend_error		323959	0					
ANR	324184	Identifier	zend_error		323959	0					
ANR	324185	ArgumentList	E_WARNING		323959	1					
ANR	324186	Argument	E_WARNING		323959	0					
ANR	324187	Identifier	E_WARNING		323959	0					
ANR	324188	Argument	"""Division by zero"""		323959	1					
ANR	324189	PrimaryExpression	"""Division by zero"""		323959	0					
ANR	324190	ExpressionStatement	"ZVAL_DOUBLE ( result , Z_DVAL_P ( op1 ) / ( double ) Z_LVAL_P ( op2 ) )"	1145:4:29046:29104	323959	20	True				
ANR	324191	CallExpression	"ZVAL_DOUBLE ( result , Z_DVAL_P ( op1 ) / ( double ) Z_LVAL_P ( op2 ) )"		323959	0					
ANR	324192	Callee	ZVAL_DOUBLE		323959	0					
ANR	324193	Identifier	ZVAL_DOUBLE		323959	0					
ANR	324194	ArgumentList	result		323959	1					
ANR	324195	Argument	result		323959	0					
ANR	324196	Identifier	result		323959	0					
ANR	324197	Argument	Z_DVAL_P ( op1 ) / ( double ) Z_LVAL_P ( op2 )		323959	1					
ANR	324198	MultiplicativeExpression	Z_DVAL_P ( op1 ) / ( double ) Z_LVAL_P ( op2 )		323959	0		/			
ANR	324199	CallExpression	Z_DVAL_P ( op1 )		323959	0					
ANR	324200	Callee	Z_DVAL_P		323959	0					
ANR	324201	Identifier	Z_DVAL_P		323959	0					
ANR	324202	ArgumentList	op1		323959	1					
ANR	324203	Argument	op1		323959	0					
ANR	324204	Identifier	op1		323959	0					
ANR	324205	CastExpression	( double ) Z_LVAL_P ( op2 )		323959	1					
ANR	324206	CastTarget	double		323959	0					
ANR	324207	CallExpression	Z_LVAL_P ( op2 )		323959	1					
ANR	324208	Callee	Z_LVAL_P		323959	0					
ANR	324209	Identifier	Z_LVAL_P		323959	0					
ANR	324210	ArgumentList	op2		323959	1					
ANR	324211	Argument	op2		323959	0					
ANR	324212	Identifier	op2		323959	0					
ANR	324213	ReturnStatement	return SUCCESS ;	1146:4:29110:29124	323959	21	True				
ANR	324214	Identifier	SUCCESS		323959	0					
ANR	324215	Statement	case	1148:3:29130:29133	323959	22	True				
ANR	324216	Statement	TYPE_PAIR	1148:8:29135:29143	323959	23	True				
ANR	324217	Statement	(	1148:17:29144:29144	323959	24	True				
ANR	324218	Statement	IS_LONG	1148:18:29145:29151	323959	25	True				
ANR	324219	Statement	","	1148:25:29152:29152	323959	26	True				
ANR	324220	Statement	IS_DOUBLE	1148:27:29154:29162	323959	27	True				
ANR	324221	Statement	)	1148:36:29163:29163	323959	28	True				
ANR	324222	Statement	:	1148:37:29164:29164	323959	29	True				
ANR	324223	IfStatement	if ( Z_DVAL_P ( op2 ) == 0 )		323959	30					
ANR	324224	Condition	Z_DVAL_P ( op2 ) == 0	1149:8:29174:29191	323959	0	True				
ANR	324225	EqualityExpression	Z_DVAL_P ( op2 ) == 0		323959	0		==			
ANR	324226	CallExpression	Z_DVAL_P ( op2 )		323959	0					
ANR	324227	Callee	Z_DVAL_P		323959	0					
ANR	324228	Identifier	Z_DVAL_P		323959	0					
ANR	324229	ArgumentList	op2		323959	1					
ANR	324230	Argument	op2		323959	0					
ANR	324231	Identifier	op2		323959	0					
ANR	324232	PrimaryExpression	0		323959	1					
ANR	324233	CompoundStatement		32:28:1019:1019	323959	1					
ANR	324234	ExpressionStatement	"zend_error ( E_WARNING , ""Division by zero"" )"	1150:5:29201:29242	323959	0	True				
ANR	324235	CallExpression	"zend_error ( E_WARNING , ""Division by zero"" )"		323959	0					
ANR	324236	Callee	zend_error		323959	0					
ANR	324237	Identifier	zend_error		323959	0					
ANR	324238	ArgumentList	E_WARNING		323959	1					
ANR	324239	Argument	E_WARNING		323959	0					
ANR	324240	Identifier	E_WARNING		323959	0					
ANR	324241	Argument	"""Division by zero"""		323959	1					
ANR	324242	PrimaryExpression	"""Division by zero"""		323959	0					
ANR	324243	ExpressionStatement	"ZVAL_DOUBLE ( result , ( double ) Z_LVAL_P ( op1 ) / Z_DVAL_P ( op2 ) )"	1152:4:29254:29312	323959	31	True				
ANR	324244	CallExpression	"ZVAL_DOUBLE ( result , ( double ) Z_LVAL_P ( op1 ) / Z_DVAL_P ( op2 ) )"		323959	0					
ANR	324245	Callee	ZVAL_DOUBLE		323959	0					
ANR	324246	Identifier	ZVAL_DOUBLE		323959	0					
ANR	324247	ArgumentList	result		323959	1					
ANR	324248	Argument	result		323959	0					
ANR	324249	Identifier	result		323959	0					
ANR	324250	Argument	( double ) Z_LVAL_P ( op1 ) / Z_DVAL_P ( op2 )		323959	1					
ANR	324251	MultiplicativeExpression	( double ) Z_LVAL_P ( op1 ) / Z_DVAL_P ( op2 )		323959	0		/			
ANR	324252	CastExpression	( double ) Z_LVAL_P ( op1 )		323959	0					
ANR	324253	CastTarget	double		323959	0					
ANR	324254	CallExpression	Z_LVAL_P ( op1 )		323959	1					
ANR	324255	Callee	Z_LVAL_P		323959	0					
ANR	324256	Identifier	Z_LVAL_P		323959	0					
ANR	324257	ArgumentList	op1		323959	1					
ANR	324258	Argument	op1		323959	0					
ANR	324259	Identifier	op1		323959	0					
ANR	324260	CallExpression	Z_DVAL_P ( op2 )		323959	1					
ANR	324261	Callee	Z_DVAL_P		323959	0					
ANR	324262	Identifier	Z_DVAL_P		323959	0					
ANR	324263	ArgumentList	op2		323959	1					
ANR	324264	Argument	op2		323959	0					
ANR	324265	Identifier	op2		323959	0					
ANR	324266	ReturnStatement	return SUCCESS ;	1153:4:29318:29332	323959	32	True				
ANR	324267	Identifier	SUCCESS		323959	0					
ANR	324268	Statement	case	1155:3:29338:29341	323959	33	True				
ANR	324269	Statement	TYPE_PAIR	1155:8:29343:29351	323959	34	True				
ANR	324270	Statement	(	1155:17:29352:29352	323959	35	True				
ANR	324271	Statement	IS_DOUBLE	1155:18:29353:29361	323959	36	True				
ANR	324272	Statement	","	1155:27:29362:29362	323959	37	True				
ANR	324273	Statement	IS_DOUBLE	1155:29:29364:29372	323959	38	True				
ANR	324274	Statement	)	1155:38:29373:29373	323959	39	True				
ANR	324275	Statement	:	1155:39:29374:29374	323959	40	True				
ANR	324276	IfStatement	if ( Z_DVAL_P ( op2 ) == 0 )		323959	41					
ANR	324277	Condition	Z_DVAL_P ( op2 ) == 0	1156:8:29384:29401	323959	0	True				
ANR	324278	EqualityExpression	Z_DVAL_P ( op2 ) == 0		323959	0		==			
ANR	324279	CallExpression	Z_DVAL_P ( op2 )		323959	0					
ANR	324280	Callee	Z_DVAL_P		323959	0					
ANR	324281	Identifier	Z_DVAL_P		323959	0					
ANR	324282	ArgumentList	op2		323959	1					
ANR	324283	Argument	op2		323959	0					
ANR	324284	Identifier	op2		323959	0					
ANR	324285	PrimaryExpression	0		323959	1					
ANR	324286	CompoundStatement		39:28:1229:1229	323959	1					
ANR	324287	ExpressionStatement	"zend_error ( E_WARNING , ""Division by zero"" )"	1157:5:29411:29452	323959	0	True				
ANR	324288	CallExpression	"zend_error ( E_WARNING , ""Division by zero"" )"		323959	0					
ANR	324289	Callee	zend_error		323959	0					
ANR	324290	Identifier	zend_error		323959	0					
ANR	324291	ArgumentList	E_WARNING		323959	1					
ANR	324292	Argument	E_WARNING		323959	0					
ANR	324293	Identifier	E_WARNING		323959	0					
ANR	324294	Argument	"""Division by zero"""		323959	1					
ANR	324295	PrimaryExpression	"""Division by zero"""		323959	0					
ANR	324296	ExpressionStatement	"ZVAL_DOUBLE ( result , Z_DVAL_P ( op1 ) / Z_DVAL_P ( op2 ) )"	1159:4:29464:29514	323959	42	True				
ANR	324297	CallExpression	"ZVAL_DOUBLE ( result , Z_DVAL_P ( op1 ) / Z_DVAL_P ( op2 ) )"		323959	0					
ANR	324298	Callee	ZVAL_DOUBLE		323959	0					
ANR	324299	Identifier	ZVAL_DOUBLE		323959	0					
ANR	324300	ArgumentList	result		323959	1					
ANR	324301	Argument	result		323959	0					
ANR	324302	Identifier	result		323959	0					
ANR	324303	Argument	Z_DVAL_P ( op1 ) / Z_DVAL_P ( op2 )		323959	1					
ANR	324304	MultiplicativeExpression	Z_DVAL_P ( op1 ) / Z_DVAL_P ( op2 )		323959	0		/			
ANR	324305	CallExpression	Z_DVAL_P ( op1 )		323959	0					
ANR	324306	Callee	Z_DVAL_P		323959	0					
ANR	324307	Identifier	Z_DVAL_P		323959	0					
ANR	324308	ArgumentList	op1		323959	1					
ANR	324309	Argument	op1		323959	0					
ANR	324310	Identifier	op1		323959	0					
ANR	324311	CallExpression	Z_DVAL_P ( op2 )		323959	1					
ANR	324312	Callee	Z_DVAL_P		323959	0					
ANR	324313	Identifier	Z_DVAL_P		323959	0					
ANR	324314	ArgumentList	op2		323959	1					
ANR	324315	Argument	op2		323959	0					
ANR	324316	Identifier	op2		323959	0					
ANR	324317	ReturnStatement	return SUCCESS ;	1160:4:29520:29534	323959	43	True				
ANR	324318	Identifier	SUCCESS		323959	0					
ANR	324319	Label	default :	1162:3:29540:29547	323959	44	True				
ANR	324320	Identifier	default		323959	0					
ANR	324321	IfStatement	if ( Z_ISREF_P ( op1 ) )		323959	45					
ANR	324322	Condition	Z_ISREF_P ( op1 )	1163:8:29557:29570	323959	0	True				
ANR	324323	CallExpression	Z_ISREF_P ( op1 )		323959	0					
ANR	324324	Callee	Z_ISREF_P		323959	0					
ANR	324325	Identifier	Z_ISREF_P		323959	0					
ANR	324326	ArgumentList	op1		323959	1					
ANR	324327	Argument	op1		323959	0					
ANR	324328	Identifier	op1		323959	0					
ANR	324329	CompoundStatement		46:24:1398:1398	323959	1					
ANR	324330	ExpressionStatement	op1 = Z_REFVAL_P ( op1 )	1164:5:29580:29601	323959	0	True				
ANR	324331	AssignmentExpression	op1 = Z_REFVAL_P ( op1 )		323959	0		=			
ANR	324332	Identifier	op1		323959	0					
ANR	324333	CallExpression	Z_REFVAL_P ( op1 )		323959	1					
ANR	324334	Callee	Z_REFVAL_P		323959	0					
ANR	324335	Identifier	Z_REFVAL_P		323959	0					
ANR	324336	ArgumentList	op1		323959	1					
ANR	324337	Argument	op1		323959	0					
ANR	324338	Identifier	op1		323959	0					
ANR	324339	ElseStatement	else		323959	0					
ANR	324340	IfStatement	if ( Z_ISREF_P ( op2 ) )		323959	0					
ANR	324341	Condition	Z_ISREF_P ( op2 )	1165:15:29618:29631	323959	0	True				
ANR	324342	CallExpression	Z_ISREF_P ( op2 )		323959	0					
ANR	324343	Callee	Z_ISREF_P		323959	0					
ANR	324344	Identifier	Z_ISREF_P		323959	0					
ANR	324345	ArgumentList	op2		323959	1					
ANR	324346	Argument	op2		323959	0					
ANR	324347	Identifier	op2		323959	0					
ANR	324348	CompoundStatement		48:31:1459:1459	323959	1					
ANR	324349	ExpressionStatement	op2 = Z_REFVAL_P ( op2 )	1166:5:29641:29662	323959	0	True				
ANR	324350	AssignmentExpression	op2 = Z_REFVAL_P ( op2 )		323959	0		=			
ANR	324351	Identifier	op2		323959	0					
ANR	324352	CallExpression	Z_REFVAL_P ( op2 )		323959	1					
ANR	324353	Callee	Z_REFVAL_P		323959	0					
ANR	324354	Identifier	Z_REFVAL_P		323959	0					
ANR	324355	ArgumentList	op2		323959	1					
ANR	324356	Argument	op2		323959	0					
ANR	324357	Identifier	op2		323959	0					
ANR	324358	ElseStatement	else		323959	0					
ANR	324359	IfStatement	if ( ! converted )		323959	0					
ANR	324360	Condition	! converted	1167:15:29679:29688	323959	0	True				
ANR	324361	UnaryOperationExpression	! converted		323959	0					
ANR	324362	UnaryOperator	!		323959	0					
ANR	324363	Identifier	converted		323959	1					
ANR	324364	CompoundStatement		50:27:1516:1516	323959	1					
ANR	324365	ExpressionStatement	"ZEND_TRY_BINARY_OBJECT_OPERATION ( ZEND_DIV , div_function )"	1168:5:29698:29754	323959	0	True				
ANR	324366	CallExpression	"ZEND_TRY_BINARY_OBJECT_OPERATION ( ZEND_DIV , div_function )"		323959	0					
ANR	324367	Callee	ZEND_TRY_BINARY_OBJECT_OPERATION		323959	0					
ANR	324368	Identifier	ZEND_TRY_BINARY_OBJECT_OPERATION		323959	0					
ANR	324369	ArgumentList	ZEND_DIV		323959	1					
ANR	324370	Argument	ZEND_DIV		323959	0					
ANR	324371	Identifier	ZEND_DIV		323959	0					
ANR	324372	Argument	div_function		323959	1					
ANR	324373	Identifier	div_function		323959	0					
ANR	324374	ExpressionStatement	"zendi_convert_scalar_to_number ( op1 , op1_copy , result )"	1170:5:29762:29815	323959	1	True				
ANR	324375	CallExpression	"zendi_convert_scalar_to_number ( op1 , op1_copy , result )"		323959	0					
ANR	324376	Callee	zendi_convert_scalar_to_number		323959	0					
ANR	324377	Identifier	zendi_convert_scalar_to_number		323959	0					
ANR	324378	ArgumentList	op1		323959	1					
ANR	324379	Argument	op1		323959	0					
ANR	324380	Identifier	op1		323959	0					
ANR	324381	Argument	op1_copy		323959	1					
ANR	324382	Identifier	op1_copy		323959	0					
ANR	324383	Argument	result		323959	2					
ANR	324384	Identifier	result		323959	0					
ANR	324385	ExpressionStatement	"zendi_convert_scalar_to_number ( op2 , op2_copy , result )"	1171:5:29822:29875	323959	2	True				
ANR	324386	CallExpression	"zendi_convert_scalar_to_number ( op2 , op2_copy , result )"		323959	0					
ANR	324387	Callee	zendi_convert_scalar_to_number		323959	0					
ANR	324388	Identifier	zendi_convert_scalar_to_number		323959	0					
ANR	324389	ArgumentList	op2		323959	1					
ANR	324390	Argument	op2		323959	0					
ANR	324391	Identifier	op2		323959	0					
ANR	324392	Argument	op2_copy		323959	1					
ANR	324393	Identifier	op2_copy		323959	0					
ANR	324394	Argument	result		323959	2					
ANR	324395	Identifier	result		323959	0					
ANR	324396	ExpressionStatement	converted = 1	1172:5:29882:29895	323959	3	True				
ANR	324397	AssignmentExpression	converted = 1		323959	0		=			
ANR	324398	Identifier	converted		323959	0					
ANR	324399	PrimaryExpression	1		323959	1					
ANR	324400	ElseStatement	else		323959	0					
ANR	324401	CompoundStatement		56:11:1733:1733	323959	0					
ANR	324402	ExpressionStatement	"zend_throw_error ( NULL , ""Unsupported operand types"" )"	1174:5:29915:29966	323959	0	True				
ANR	324403	CallExpression	"zend_throw_error ( NULL , ""Unsupported operand types"" )"		323959	0					
ANR	324404	Callee	zend_throw_error		323959	0					
ANR	324405	Identifier	zend_throw_error		323959	0					
ANR	324406	ArgumentList	NULL		323959	1					
ANR	324407	Argument	NULL		323959	0					
ANR	324408	Identifier	NULL		323959	0					
ANR	324409	Argument	"""Unsupported operand types"""		323959	1					
ANR	324410	PrimaryExpression	"""Unsupported operand types"""		323959	0					
ANR	324411	ReturnStatement	return FAILURE ;	1175:5:29973:29987	323959	1	True				
ANR	324412	Identifier	FAILURE		323959	0					
ANR	324413	ReturnType	ZEND_API int ZEND_FASTCALL		323959	1					
ANR	324414	Identifier	div_function		323959	2					
ANR	324415	ParameterList	"zval * result , zval * op1 , zval * op2"		323959	3					
ANR	324416	Parameter	zval * result	1117:40:28128:28139	323959	0	True				
ANR	324417	ParameterType	zval *		323959	0					
ANR	324418	Identifier	result		323959	1					
ANR	324419	Parameter	zval * op1	1117:54:28142:28150	323959	1	True				
ANR	324420	ParameterType	zval *		323959	0					
ANR	324421	Identifier	op1		323959	1					
ANR	324422	Parameter	zval * op2	1117:65:28153:28161	323959	2	True				
ANR	324423	ParameterType	zval *		323959	0					
ANR	324424	Identifier	op2		323959	1					
ANR	324425	CFGEntryNode	ENTRY		323959		True				
ANR	324426	CFGExitNode	EXIT		323959		True				
ANR	324427	Symbol	SUCCESS		323959						
ANR	324428	Symbol	NULL		323959						
ANR	324429	Symbol	div_function		323959						
ANR	324430	Symbol	op1_copy		323959						
ANR	324431	Symbol	Z_TYPE_P		323959						
ANR	324432	Symbol	FAILURE		323959						
ANR	324433	Symbol	Z_DVAL_P		323959						
ANR	324434	Symbol	Z_LVAL_P		323959						
ANR	324435	Symbol	ZEND_DIV		323959						
ANR	324436	Symbol	result		323959						
ANR	324437	Symbol	op2		323959						
ANR	324438	Symbol	E_WARNING		323959						
ANR	324439	Symbol	op1		323959						
ANR	324440	Symbol	TYPE_PAIR		323959						
ANR	324441	Symbol	ZEND_LONG_MIN		323959						
ANR	324442	Symbol	converted		323959						
ANR	324443	Symbol	Z_REFVAL_P		323959						
ANR	324444	Symbol	op2_copy		323959						
ANR	324445	Symbol	Z_ISREF_P		323959						
ANR	324446	Function	mod_function	1182:0:30038:30758							
ANR	324447	FunctionDef	"mod_function (zval * result , zval * op1 , zval * op2)"		324446	0					
ANR	324448	CompoundStatement		1183:0:30124:30758	324446	0					
ANR	324449	IdentifierDeclStatement	"zend_long op1_lval , op2_lval ;"	1184:1:30127:30155	324446	0	True				
ANR	324450	IdentifierDecl	op1_lval		324446	0					
ANR	324451	IdentifierDeclType	zend_long		324446	0					
ANR	324452	Identifier	op1_lval		324446	1					
ANR	324453	IdentifierDecl	op2_lval		324446	1					
ANR	324454	IdentifierDeclType	zend_long		324446	0					
ANR	324455	Identifier	op2_lval		324446	1					
ANR	324456	ExpressionStatement	"convert_op1_op2_long ( op1 , op1_lval , op2 , op2_lval , ZEND_MOD , mod_function )"	1186:1:30159:30233	324446	1	True				
ANR	324457	CallExpression	"convert_op1_op2_long ( op1 , op1_lval , op2 , op2_lval , ZEND_MOD , mod_function )"		324446	0					
ANR	324458	Callee	convert_op1_op2_long		324446	0					
ANR	324459	Identifier	convert_op1_op2_long		324446	0					
ANR	324460	ArgumentList	op1		324446	1					
ANR	324461	Argument	op1		324446	0					
ANR	324462	Identifier	op1		324446	0					
ANR	324463	Argument	op1_lval		324446	1					
ANR	324464	Identifier	op1_lval		324446	0					
ANR	324465	Argument	op2		324446	2					
ANR	324466	Identifier	op2		324446	0					
ANR	324467	Argument	op2_lval		324446	3					
ANR	324468	Identifier	op2_lval		324446	0					
ANR	324469	Argument	ZEND_MOD		324446	4					
ANR	324470	Identifier	ZEND_MOD		324446	0					
ANR	324471	Argument	mod_function		324446	5					
ANR	324472	Identifier	mod_function		324446	0					
ANR	324473	IfStatement	if ( op1 == result )		324446	2					
ANR	324474	Condition	op1 == result	1188:5:30241:30253	324446	0	True				
ANR	324475	EqualityExpression	op1 == result		324446	0		==			
ANR	324476	Identifier	op1		324446	0					
ANR	324477	Identifier	result		324446	1					
ANR	324478	CompoundStatement		6:20:131:131	324446	1					
ANR	324479	ExpressionStatement	zval_dtor ( result )	1189:2:30260:30277	324446	0	True				
ANR	324480	CallExpression	zval_dtor ( result )		324446	0					
ANR	324481	Callee	zval_dtor		324446	0					
ANR	324482	Identifier	zval_dtor		324446	0					
ANR	324483	ArgumentList	result		324446	1					
ANR	324484	Argument	result		324446	0					
ANR	324485	Identifier	result		324446	0					
ANR	324486	IfStatement	if ( op2_lval == 0 )		324446	3					
ANR	324487	Condition	op2_lval == 0	1192:5:30288:30300	324446	0	True				
ANR	324488	EqualityExpression	op2_lval == 0		324446	0		==			
ANR	324489	Identifier	op2_lval		324446	0					
ANR	324490	PrimaryExpression	0		324446	1					
ANR	324491	CompoundStatement		10:20:178:178	324446	1					
ANR	324492	IfStatement	if ( EG ( current_execute_data ) && ! CG ( in_compilation ) )		324446	0					
ANR	324493	Condition	EG ( current_execute_data ) && ! CG ( in_compilation )	1194:6:30335:30381	324446	0	True				
ANR	324494	AndExpression	EG ( current_execute_data ) && ! CG ( in_compilation )		324446	0		&&			
ANR	324495	CallExpression	EG ( current_execute_data )		324446	0					
ANR	324496	Callee	EG		324446	0					
ANR	324497	Identifier	EG		324446	0					
ANR	324498	ArgumentList	current_execute_data		324446	1					
ANR	324499	Argument	current_execute_data		324446	0					
ANR	324500	Identifier	current_execute_data		324446	0					
ANR	324501	UnaryOperationExpression	! CG ( in_compilation )		324446	1					
ANR	324502	UnaryOperator	!		324446	0					
ANR	324503	CallExpression	CG ( in_compilation )		324446	1					
ANR	324504	Callee	CG		324446	0					
ANR	324505	Identifier	CG		324446	0					
ANR	324506	ArgumentList	in_compilation		324446	1					
ANR	324507	Argument	in_compilation		324446	0					
ANR	324508	Identifier	in_compilation		324446	0					
ANR	324509	CompoundStatement		12:55:259:259	324446	1					
ANR	324510	ExpressionStatement	"zend_throw_exception_ex ( zend_ce_division_by_zero_error , 0 , ""Modulo by zero"" )"	1195:3:30389:30465	324446	0	True				
ANR	324511	CallExpression	"zend_throw_exception_ex ( zend_ce_division_by_zero_error , 0 , ""Modulo by zero"" )"		324446	0					
ANR	324512	Callee	zend_throw_exception_ex		324446	0					
ANR	324513	Identifier	zend_throw_exception_ex		324446	0					
ANR	324514	ArgumentList	zend_ce_division_by_zero_error		324446	1					
ANR	324515	Argument	zend_ce_division_by_zero_error		324446	0					
ANR	324516	Identifier	zend_ce_division_by_zero_error		324446	0					
ANR	324517	Argument	0		324446	1					
ANR	324518	PrimaryExpression	0		324446	0					
ANR	324519	Argument	"""Modulo by zero"""		324446	2					
ANR	324520	PrimaryExpression	"""Modulo by zero"""		324446	0					
ANR	324521	ElseStatement	else		324446	0					
ANR	324522	CompoundStatement		14:9:351:351	324446	0					
ANR	324523	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Modulo by zero"" )"	1197:3:30481:30527	324446	0	True				
ANR	324524	CallExpression	"zend_error_noreturn ( E_ERROR , ""Modulo by zero"" )"		324446	0					
ANR	324525	Callee	zend_error_noreturn		324446	0					
ANR	324526	Identifier	zend_error_noreturn		324446	0					
ANR	324527	ArgumentList	E_ERROR		324446	1					
ANR	324528	Argument	E_ERROR		324446	0					
ANR	324529	Identifier	E_ERROR		324446	0					
ANR	324530	Argument	"""Modulo by zero"""		324446	1					
ANR	324531	PrimaryExpression	"""Modulo by zero"""		324446	0					
ANR	324532	ExpressionStatement	ZVAL_UNDEF ( result )	1199:2:30535:30553	324446	1	True				
ANR	324533	CallExpression	ZVAL_UNDEF ( result )		324446	0					
ANR	324534	Callee	ZVAL_UNDEF		324446	0					
ANR	324535	Identifier	ZVAL_UNDEF		324446	0					
ANR	324536	ArgumentList	result		324446	1					
ANR	324537	Argument	result		324446	0					
ANR	324538	Identifier	result		324446	0					
ANR	324539	ReturnStatement	return FAILURE ;	1200:2:30557:30571	324446	2	True				
ANR	324540	Identifier	FAILURE		324446	0					
ANR	324541	IfStatement	if ( op2_lval == - 1 )		324446	4					
ANR	324542	Condition	op2_lval == - 1	1203:5:30582:30595	324446	0	True				
ANR	324543	EqualityExpression	op2_lval == - 1		324446	0		==			
ANR	324544	Identifier	op2_lval		324446	0					
ANR	324545	UnaryOperationExpression	- 1		324446	1					
ANR	324546	UnaryOperator	-		324446	0					
ANR	324547	PrimaryExpression	1		324446	1					
ANR	324548	CompoundStatement		21:21:473:473	324446	1					
ANR	324549	ExpressionStatement	"ZVAL_LONG ( result , 0 )"	1205:2:30656:30676	324446	0	True				
ANR	324550	CallExpression	"ZVAL_LONG ( result , 0 )"		324446	0					
ANR	324551	Callee	ZVAL_LONG		324446	0					
ANR	324552	Identifier	ZVAL_LONG		324446	0					
ANR	324553	ArgumentList	result		324446	1					
ANR	324554	Argument	result		324446	0					
ANR	324555	Identifier	result		324446	0					
ANR	324556	Argument	0		324446	1					
ANR	324557	PrimaryExpression	0		324446	0					
ANR	324558	ReturnStatement	return SUCCESS ;	1206:2:30680:30694	324446	1	True				
ANR	324559	Identifier	SUCCESS		324446	0					
ANR	324560	ExpressionStatement	"ZVAL_LONG ( result , op1_lval % op2_lval )"	1209:1:30701:30739	324446	5	True				
ANR	324561	CallExpression	"ZVAL_LONG ( result , op1_lval % op2_lval )"		324446	0					
ANR	324562	Callee	ZVAL_LONG		324446	0					
ANR	324563	Identifier	ZVAL_LONG		324446	0					
ANR	324564	ArgumentList	result		324446	1					
ANR	324565	Argument	result		324446	0					
ANR	324566	Identifier	result		324446	0					
ANR	324567	Argument	op1_lval % op2_lval		324446	1					
ANR	324568	MultiplicativeExpression	op1_lval % op2_lval		324446	0		%			
ANR	324569	Identifier	op1_lval		324446	0					
ANR	324570	Identifier	op2_lval		324446	1					
ANR	324571	ReturnStatement	return SUCCESS ;	1210:1:30742:30756	324446	6	True				
ANR	324572	Identifier	SUCCESS		324446	0					
ANR	324573	ReturnType	ZEND_API int ZEND_FASTCALL		324446	1					
ANR	324574	Identifier	mod_function		324446	2					
ANR	324575	ParameterList	"zval * result , zval * op1 , zval * op2"		324446	3					
ANR	324576	Parameter	zval * result	1182:40:30078:30089	324446	0	True				
ANR	324577	ParameterType	zval *		324446	0					
ANR	324578	Identifier	result		324446	1					
ANR	324579	Parameter	zval * op1	1182:54:30092:30100	324446	1	True				
ANR	324580	ParameterType	zval *		324446	0					
ANR	324581	Identifier	op1		324446	1					
ANR	324582	Parameter	zval * op2	1182:65:30103:30111	324446	2	True				
ANR	324583	ParameterType	zval *		324446	0					
ANR	324584	Identifier	op2		324446	1					
ANR	324585	CFGEntryNode	ENTRY		324446		True				
ANR	324586	CFGExitNode	EXIT		324446		True				
ANR	324587	Symbol	EG		324446						
ANR	324588	Symbol	op1_lval		324446						
ANR	324589	Symbol	SUCCESS		324446						
ANR	324590	Symbol	mod_function		324446						
ANR	324591	Symbol	CG		324446						
ANR	324592	Symbol	current_execute_data		324446						
ANR	324593	Symbol	FAILURE		324446						
ANR	324594	Symbol	in_compilation		324446						
ANR	324595	Symbol	result		324446						
ANR	324596	Symbol	op2		324446						
ANR	324597	Symbol	op1		324446						
ANR	324598	Symbol	E_ERROR		324446						
ANR	324599	Symbol	ZEND_MOD		324446						
ANR	324600	Symbol	op2_lval		324446						
ANR	324601	Symbol	zend_ce_division_by_zero_error		324446						
ANR	324602	Function	boolean_xor_function	1214:0:30771:31878							
ANR	324603	FunctionDef	"boolean_xor_function (zval * result , zval * op1 , zval * op2)"		324602	0					
ANR	324604	CompoundStatement		1215:0:30865:31878	324602	0					
ANR	324605	IdentifierDeclStatement	"int op1_val , op2_val ;"	1216:1:30868:30888	324602	0	True				
ANR	324606	IdentifierDecl	op1_val		324602	0					
ANR	324607	IdentifierDeclType	int		324602	0					
ANR	324608	Identifier	op1_val		324602	1					
ANR	324609	IdentifierDecl	op2_val		324602	1					
ANR	324610	IdentifierDeclType	int		324602	0					
ANR	324611	Identifier	op2_val		324602	1					
ANR	324612	DoStatement	do		324602	1					
ANR	324613	CompoundStatement		4:4:29:29	324602	0					
ANR	324614	IfStatement	if ( Z_TYPE_P ( op1 ) == IS_FALSE )		324602	0					
ANR	324615	Condition	Z_TYPE_P ( op1 ) == IS_FALSE	1219:6:30903:30927	324602	0	True				
ANR	324616	EqualityExpression	Z_TYPE_P ( op1 ) == IS_FALSE		324602	0		==			
ANR	324617	CallExpression	Z_TYPE_P ( op1 )		324602	0					
ANR	324618	Callee	Z_TYPE_P		324602	0					
ANR	324619	Identifier	Z_TYPE_P		324602	0					
ANR	324620	ArgumentList	op1		324602	1					
ANR	324621	Argument	op1		324602	0					
ANR	324622	Identifier	op1		324602	0					
ANR	324623	Identifier	IS_FALSE		324602	1					
ANR	324624	CompoundStatement		5:33:64:64	324602	1					
ANR	324625	ExpressionStatement	op1_val = 0	1220:3:30935:30946	324602	0	True				
ANR	324626	AssignmentExpression	op1_val = 0		324602	0		=			
ANR	324627	Identifier	op1_val		324602	0					
ANR	324628	PrimaryExpression	0		324602	1					
ANR	324629	ElseStatement	else		324602	0					
ANR	324630	IfStatement	if ( EXPECTED ( Z_TYPE_P ( op1 ) == IS_TRUE ) )		324602	0					
ANR	324631	Condition	EXPECTED ( Z_TYPE_P ( op1 ) == IS_TRUE )	1221:13:30961:30994	324602	0	True				
ANR	324632	CallExpression	EXPECTED ( Z_TYPE_P ( op1 ) == IS_TRUE )		324602	0					
ANR	324633	Callee	EXPECTED		324602	0					
ANR	324634	Identifier	EXPECTED		324602	0					
ANR	324635	ArgumentList	Z_TYPE_P ( op1 ) == IS_TRUE		324602	1					
ANR	324636	Argument	Z_TYPE_P ( op1 ) == IS_TRUE		324602	0					
ANR	324637	EqualityExpression	Z_TYPE_P ( op1 ) == IS_TRUE		324602	0		==			
ANR	324638	CallExpression	Z_TYPE_P ( op1 )		324602	0					
ANR	324639	Callee	Z_TYPE_P		324602	0					
ANR	324640	Identifier	Z_TYPE_P		324602	0					
ANR	324641	ArgumentList	op1		324602	1					
ANR	324642	Argument	op1		324602	0					
ANR	324643	Identifier	op1		324602	0					
ANR	324644	Identifier	IS_TRUE		324602	1					
ANR	324645	CompoundStatement		7:49:131:131	324602	1					
ANR	324646	ExpressionStatement	op1_val = 1	1222:3:31002:31013	324602	0	True				
ANR	324647	AssignmentExpression	op1_val = 1		324602	0		=			
ANR	324648	Identifier	op1_val		324602	0					
ANR	324649	PrimaryExpression	1		324602	1					
ANR	324650	ElseStatement	else		324602	0					
ANR	324651	CompoundStatement		9:9:158:158	324602	0					
ANR	324652	IfStatement	if ( Z_ISREF_P ( op1 ) )		324602	0					
ANR	324653	Condition	Z_ISREF_P ( op1 )	1224:7:31033:31046	324602	0	True				
ANR	324654	CallExpression	Z_ISREF_P ( op1 )		324602	0					
ANR	324655	Callee	Z_ISREF_P		324602	0					
ANR	324656	Identifier	Z_ISREF_P		324602	0					
ANR	324657	ArgumentList	op1		324602	1					
ANR	324658	Argument	op1		324602	0					
ANR	324659	Identifier	op1		324602	0					
ANR	324660	CompoundStatement		10:23:183:183	324602	1					
ANR	324661	ExpressionStatement	op1 = Z_REFVAL_P ( op1 )	1225:4:31055:31076	324602	0	True				
ANR	324662	AssignmentExpression	op1 = Z_REFVAL_P ( op1 )		324602	0		=			
ANR	324663	Identifier	op1		324602	0					
ANR	324664	CallExpression	Z_REFVAL_P ( op1 )		324602	1					
ANR	324665	Callee	Z_REFVAL_P		324602	0					
ANR	324666	Identifier	Z_REFVAL_P		324602	0					
ANR	324667	ArgumentList	op1		324602	1					
ANR	324668	Argument	op1		324602	0					
ANR	324669	Identifier	op1		324602	0					
ANR	324670	IfStatement	if ( Z_TYPE_P ( op1 ) == IS_FALSE )		324602	1					
ANR	324671	Condition	Z_TYPE_P ( op1 ) == IS_FALSE	1226:8:31086:31110	324602	0	True				
ANR	324672	EqualityExpression	Z_TYPE_P ( op1 ) == IS_FALSE		324602	0		==			
ANR	324673	CallExpression	Z_TYPE_P ( op1 )		324602	0					
ANR	324674	Callee	Z_TYPE_P		324602	0					
ANR	324675	Identifier	Z_TYPE_P		324602	0					
ANR	324676	ArgumentList	op1		324602	1					
ANR	324677	Argument	op1		324602	0					
ANR	324678	Identifier	op1		324602	0					
ANR	324679	Identifier	IS_FALSE		324602	1					
ANR	324680	CompoundStatement		12:35:247:247	324602	1					
ANR	324681	ExpressionStatement	op1_val = 0	1227:5:31120:31131	324602	0	True				
ANR	324682	AssignmentExpression	op1_val = 0		324602	0		=			
ANR	324683	Identifier	op1_val		324602	0					
ANR	324684	PrimaryExpression	0		324602	1					
ANR	324685	BreakStatement	break ;	1228:5:31138:31143	324602	1	True				
ANR	324686	ElseStatement	else		324602	0					
ANR	324687	IfStatement	if ( EXPECTED ( Z_TYPE_P ( op1 ) == IS_TRUE ) )		324602	0					
ANR	324688	Condition	EXPECTED ( Z_TYPE_P ( op1 ) == IS_TRUE )	1229:15:31160:31193	324602	0	True				
ANR	324689	CallExpression	EXPECTED ( Z_TYPE_P ( op1 ) == IS_TRUE )		324602	0					
ANR	324690	Callee	EXPECTED		324602	0					
ANR	324691	Identifier	EXPECTED		324602	0					
ANR	324692	ArgumentList	Z_TYPE_P ( op1 ) == IS_TRUE		324602	1					
ANR	324693	Argument	Z_TYPE_P ( op1 ) == IS_TRUE		324602	0					
ANR	324694	EqualityExpression	Z_TYPE_P ( op1 ) == IS_TRUE		324602	0		==			
ANR	324695	CallExpression	Z_TYPE_P ( op1 )		324602	0					
ANR	324696	Callee	Z_TYPE_P		324602	0					
ANR	324697	Identifier	Z_TYPE_P		324602	0					
ANR	324698	ArgumentList	op1		324602	1					
ANR	324699	Argument	op1		324602	0					
ANR	324700	Identifier	op1		324602	0					
ANR	324701	Identifier	IS_TRUE		324602	1					
ANR	324702	CompoundStatement		15:51:330:330	324602	1					
ANR	324703	ExpressionStatement	op1_val = 1	1230:5:31203:31214	324602	0	True				
ANR	324704	AssignmentExpression	op1_val = 1		324602	0		=			
ANR	324705	Identifier	op1_val		324602	0					
ANR	324706	PrimaryExpression	1		324602	1					
ANR	324707	BreakStatement	break ;	1231:5:31221:31226	324602	1	True				
ANR	324708	ExpressionStatement	"ZEND_TRY_BINARY_OP1_OBJECT_OPERATION ( ZEND_BOOL_XOR , boolean_xor_function )"	1234:3:31242:31315	324602	1	True				
ANR	324709	CallExpression	"ZEND_TRY_BINARY_OP1_OBJECT_OPERATION ( ZEND_BOOL_XOR , boolean_xor_function )"		324602	0					
ANR	324710	Callee	ZEND_TRY_BINARY_OP1_OBJECT_OPERATION		324602	0					
ANR	324711	Identifier	ZEND_TRY_BINARY_OP1_OBJECT_OPERATION		324602	0					
ANR	324712	ArgumentList	ZEND_BOOL_XOR		324602	1					
ANR	324713	Argument	ZEND_BOOL_XOR		324602	0					
ANR	324714	Identifier	ZEND_BOOL_XOR		324602	0					
ANR	324715	Argument	boolean_xor_function		324602	1					
ANR	324716	Identifier	boolean_xor_function		324602	0					
ANR	324717	ExpressionStatement	op1_val = zval_is_true ( op1 )	1235:3:31320:31347	324602	2	True				
ANR	324718	AssignmentExpression	op1_val = zval_is_true ( op1 )		324602	0		=			
ANR	324719	Identifier	op1_val		324602	0					
ANR	324720	CallExpression	zval_is_true ( op1 )		324602	1					
ANR	324721	Callee	zval_is_true		324602	0					
ANR	324722	Identifier	zval_is_true		324602	0					
ANR	324723	ArgumentList	op1		324602	1					
ANR	324724	Argument	op1		324602	0					
ANR	324725	Identifier	op1		324602	0					
ANR	324726	Condition	0	1237:10:31363:31363	324602	1	True				
ANR	324727	PrimaryExpression	0		324602	0					
ANR	324728	DoStatement	do		324602	2					
ANR	324729	CompoundStatement		24:4:505:505	324602	0					
ANR	324730	IfStatement	if ( Z_TYPE_P ( op2 ) == IS_FALSE )		324602	0					
ANR	324731	Condition	Z_TYPE_P ( op2 ) == IS_FALSE	1239:6:31379:31403	324602	0	True				
ANR	324732	EqualityExpression	Z_TYPE_P ( op2 ) == IS_FALSE		324602	0		==			
ANR	324733	CallExpression	Z_TYPE_P ( op2 )		324602	0					
ANR	324734	Callee	Z_TYPE_P		324602	0					
ANR	324735	Identifier	Z_TYPE_P		324602	0					
ANR	324736	ArgumentList	op2		324602	1					
ANR	324737	Argument	op2		324602	0					
ANR	324738	Identifier	op2		324602	0					
ANR	324739	Identifier	IS_FALSE		324602	1					
ANR	324740	CompoundStatement		25:33:540:540	324602	1					
ANR	324741	ExpressionStatement	op2_val = 0	1240:3:31411:31422	324602	0	True				
ANR	324742	AssignmentExpression	op2_val = 0		324602	0		=			
ANR	324743	Identifier	op2_val		324602	0					
ANR	324744	PrimaryExpression	0		324602	1					
ANR	324745	ElseStatement	else		324602	0					
ANR	324746	IfStatement	if ( EXPECTED ( Z_TYPE_P ( op2 ) == IS_TRUE ) )		324602	0					
ANR	324747	Condition	EXPECTED ( Z_TYPE_P ( op2 ) == IS_TRUE )	1241:13:31437:31470	324602	0	True				
ANR	324748	CallExpression	EXPECTED ( Z_TYPE_P ( op2 ) == IS_TRUE )		324602	0					
ANR	324749	Callee	EXPECTED		324602	0					
ANR	324750	Identifier	EXPECTED		324602	0					
ANR	324751	ArgumentList	Z_TYPE_P ( op2 ) == IS_TRUE		324602	1					
ANR	324752	Argument	Z_TYPE_P ( op2 ) == IS_TRUE		324602	0					
ANR	324753	EqualityExpression	Z_TYPE_P ( op2 ) == IS_TRUE		324602	0		==			
ANR	324754	CallExpression	Z_TYPE_P ( op2 )		324602	0					
ANR	324755	Callee	Z_TYPE_P		324602	0					
ANR	324756	Identifier	Z_TYPE_P		324602	0					
ANR	324757	ArgumentList	op2		324602	1					
ANR	324758	Argument	op2		324602	0					
ANR	324759	Identifier	op2		324602	0					
ANR	324760	Identifier	IS_TRUE		324602	1					
ANR	324761	CompoundStatement		27:49:607:607	324602	1					
ANR	324762	ExpressionStatement	op2_val = 1	1242:3:31478:31489	324602	0	True				
ANR	324763	AssignmentExpression	op2_val = 1		324602	0		=			
ANR	324764	Identifier	op2_val		324602	0					
ANR	324765	PrimaryExpression	1		324602	1					
ANR	324766	ElseStatement	else		324602	0					
ANR	324767	CompoundStatement		29:9:634:634	324602	0					
ANR	324768	IfStatement	if ( Z_ISREF_P ( op2 ) )		324602	0					
ANR	324769	Condition	Z_ISREF_P ( op2 )	1244:7:31509:31522	324602	0	True				
ANR	324770	CallExpression	Z_ISREF_P ( op2 )		324602	0					
ANR	324771	Callee	Z_ISREF_P		324602	0					
ANR	324772	Identifier	Z_ISREF_P		324602	0					
ANR	324773	ArgumentList	op2		324602	1					
ANR	324774	Argument	op2		324602	0					
ANR	324775	Identifier	op2		324602	0					
ANR	324776	CompoundStatement		30:23:659:659	324602	1					
ANR	324777	ExpressionStatement	op2 = Z_REFVAL_P ( op2 )	1245:4:31531:31552	324602	0	True				
ANR	324778	AssignmentExpression	op2 = Z_REFVAL_P ( op2 )		324602	0		=			
ANR	324779	Identifier	op2		324602	0					
ANR	324780	CallExpression	Z_REFVAL_P ( op2 )		324602	1					
ANR	324781	Callee	Z_REFVAL_P		324602	0					
ANR	324782	Identifier	Z_REFVAL_P		324602	0					
ANR	324783	ArgumentList	op2		324602	1					
ANR	324784	Argument	op2		324602	0					
ANR	324785	Identifier	op2		324602	0					
ANR	324786	IfStatement	if ( Z_TYPE_P ( op2 ) == IS_FALSE )		324602	1					
ANR	324787	Condition	Z_TYPE_P ( op2 ) == IS_FALSE	1246:8:31562:31586	324602	0	True				
ANR	324788	EqualityExpression	Z_TYPE_P ( op2 ) == IS_FALSE		324602	0		==			
ANR	324789	CallExpression	Z_TYPE_P ( op2 )		324602	0					
ANR	324790	Callee	Z_TYPE_P		324602	0					
ANR	324791	Identifier	Z_TYPE_P		324602	0					
ANR	324792	ArgumentList	op2		324602	1					
ANR	324793	Argument	op2		324602	0					
ANR	324794	Identifier	op2		324602	0					
ANR	324795	Identifier	IS_FALSE		324602	1					
ANR	324796	CompoundStatement		32:35:723:723	324602	1					
ANR	324797	ExpressionStatement	op2_val = 0	1247:5:31596:31607	324602	0	True				
ANR	324798	AssignmentExpression	op2_val = 0		324602	0		=			
ANR	324799	Identifier	op2_val		324602	0					
ANR	324800	PrimaryExpression	0		324602	1					
ANR	324801	BreakStatement	break ;	1248:5:31614:31619	324602	1	True				
ANR	324802	ElseStatement	else		324602	0					
ANR	324803	IfStatement	if ( EXPECTED ( Z_TYPE_P ( op2 ) == IS_TRUE ) )		324602	0					
ANR	324804	Condition	EXPECTED ( Z_TYPE_P ( op2 ) == IS_TRUE )	1249:15:31636:31669	324602	0	True				
ANR	324805	CallExpression	EXPECTED ( Z_TYPE_P ( op2 ) == IS_TRUE )		324602	0					
ANR	324806	Callee	EXPECTED		324602	0					
ANR	324807	Identifier	EXPECTED		324602	0					
ANR	324808	ArgumentList	Z_TYPE_P ( op2 ) == IS_TRUE		324602	1					
ANR	324809	Argument	Z_TYPE_P ( op2 ) == IS_TRUE		324602	0					
ANR	324810	EqualityExpression	Z_TYPE_P ( op2 ) == IS_TRUE		324602	0		==			
ANR	324811	CallExpression	Z_TYPE_P ( op2 )		324602	0					
ANR	324812	Callee	Z_TYPE_P		324602	0					
ANR	324813	Identifier	Z_TYPE_P		324602	0					
ANR	324814	ArgumentList	op2		324602	1					
ANR	324815	Argument	op2		324602	0					
ANR	324816	Identifier	op2		324602	0					
ANR	324817	Identifier	IS_TRUE		324602	1					
ANR	324818	CompoundStatement		35:51:806:806	324602	1					
ANR	324819	ExpressionStatement	op2_val = 1	1250:5:31679:31690	324602	0	True				
ANR	324820	AssignmentExpression	op2_val = 1		324602	0		=			
ANR	324821	Identifier	op2_val		324602	0					
ANR	324822	PrimaryExpression	1		324602	1					
ANR	324823	BreakStatement	break ;	1251:5:31697:31702	324602	1	True				
ANR	324824	ExpressionStatement	ZEND_TRY_BINARY_OP2_OBJECT_OPERATION ( ZEND_BOOL_XOR )	1254:3:31718:31769	324602	1	True				
ANR	324825	CallExpression	ZEND_TRY_BINARY_OP2_OBJECT_OPERATION ( ZEND_BOOL_XOR )		324602	0					
ANR	324826	Callee	ZEND_TRY_BINARY_OP2_OBJECT_OPERATION		324602	0					
ANR	324827	Identifier	ZEND_TRY_BINARY_OP2_OBJECT_OPERATION		324602	0					
ANR	324828	ArgumentList	ZEND_BOOL_XOR		324602	1					
ANR	324829	Argument	ZEND_BOOL_XOR		324602	0					
ANR	324830	Identifier	ZEND_BOOL_XOR		324602	0					
ANR	324831	ExpressionStatement	op2_val = zval_is_true ( op2 )	1255:3:31774:31801	324602	2	True				
ANR	324832	AssignmentExpression	op2_val = zval_is_true ( op2 )		324602	0		=			
ANR	324833	Identifier	op2_val		324602	0					
ANR	324834	CallExpression	zval_is_true ( op2 )		324602	1					
ANR	324835	Callee	zval_is_true		324602	0					
ANR	324836	Identifier	zval_is_true		324602	0					
ANR	324837	ArgumentList	op2		324602	1					
ANR	324838	Argument	op2		324602	0					
ANR	324839	Identifier	op2		324602	0					
ANR	324840	Condition	0	1257:10:31817:31817	324602	1	True				
ANR	324841	PrimaryExpression	0		324602	0					
ANR	324842	ExpressionStatement	"ZVAL_BOOL ( result , op1_val ^ op2_val )"	1259:1:31823:31859	324602	3	True				
ANR	324843	CallExpression	"ZVAL_BOOL ( result , op1_val ^ op2_val )"		324602	0					
ANR	324844	Callee	ZVAL_BOOL		324602	0					
ANR	324845	Identifier	ZVAL_BOOL		324602	0					
ANR	324846	ArgumentList	result		324602	1					
ANR	324847	Argument	result		324602	0					
ANR	324848	Identifier	result		324602	0					
ANR	324849	Argument	op1_val ^ op2_val		324602	1					
ANR	324850	ExclusiveOrExpression	op1_val ^ op2_val		324602	0		^			
ANR	324851	Identifier	op1_val		324602	0					
ANR	324852	Identifier	op2_val		324602	1					
ANR	324853	ReturnStatement	return SUCCESS ;	1260:1:31862:31876	324602	4	True				
ANR	324854	Identifier	SUCCESS		324602	0					
ANR	324855	ReturnType	ZEND_API int ZEND_FASTCALL		324602	1					
ANR	324856	Identifier	boolean_xor_function		324602	2					
ANR	324857	ParameterList	"zval * result , zval * op1 , zval * op2"		324602	3					
ANR	324858	Parameter	zval * result	1214:48:30819:30830	324602	0	True				
ANR	324859	ParameterType	zval *		324602	0					
ANR	324860	Identifier	result		324602	1					
ANR	324861	Parameter	zval * op1	1214:62:30833:30841	324602	1	True				
ANR	324862	ParameterType	zval *		324602	0					
ANR	324863	Identifier	op1		324602	1					
ANR	324864	Parameter	zval * op2	1214:73:30844:30852	324602	2	True				
ANR	324865	ParameterType	zval *		324602	0					
ANR	324866	Identifier	op2		324602	1					
ANR	324867	CFGEntryNode	ENTRY		324602		True				
ANR	324868	CFGExitNode	EXIT		324602		True				
ANR	324869	Symbol	boolean_xor_function		324602						
ANR	324870	Symbol	op1_val		324602						
ANR	324871	Symbol	SUCCESS		324602						
ANR	324872	Symbol	IS_TRUE		324602						
ANR	324873	Symbol	Z_TYPE_P		324602						
ANR	324874	Symbol	ZEND_BOOL_XOR		324602						
ANR	324875	Symbol	result		324602						
ANR	324876	Symbol	op2		324602						
ANR	324877	Symbol	op1		324602						
ANR	324878	Symbol	op2_val		324602						
ANR	324879	Symbol	Z_REFVAL_P		324602						
ANR	324880	Symbol	zval_is_true		324602						
ANR	324881	Symbol	EXPECTED		324602						
ANR	324882	Symbol	IS_FALSE		324602						
ANR	324883	Symbol	Z_ISREF_P		324602						
ANR	324884	Function	boolean_not_function	1264:0:31891:32455							
ANR	324885	FunctionDef	"boolean_not_function (zval * result , zval * op1)"		324884	0					
ANR	324886	CompoundStatement		1265:0:31974:32455	324884	0					
ANR	324887	IfStatement	if ( Z_TYPE_P ( op1 ) < IS_TRUE )		324884	0					
ANR	324888	Condition	Z_TYPE_P ( op1 ) < IS_TRUE	1266:5:31981:32003	324884	0	True				
ANR	324889	RelationalExpression	Z_TYPE_P ( op1 ) < IS_TRUE		324884	0		<			
ANR	324890	CallExpression	Z_TYPE_P ( op1 )		324884	0					
ANR	324891	Callee	Z_TYPE_P		324884	0					
ANR	324892	Identifier	Z_TYPE_P		324884	0					
ANR	324893	ArgumentList	op1		324884	1					
ANR	324894	Argument	op1		324884	0					
ANR	324895	Identifier	op1		324884	0					
ANR	324896	Identifier	IS_TRUE		324884	1					
ANR	324897	CompoundStatement		2:30:31:31	324884	1					
ANR	324898	ExpressionStatement	ZVAL_TRUE ( result )	1267:2:32010:32027	324884	0	True				
ANR	324899	CallExpression	ZVAL_TRUE ( result )		324884	0					
ANR	324900	Callee	ZVAL_TRUE		324884	0					
ANR	324901	Identifier	ZVAL_TRUE		324884	0					
ANR	324902	ArgumentList	result		324884	1					
ANR	324903	Argument	result		324884	0					
ANR	324904	Identifier	result		324884	0					
ANR	324905	ElseStatement	else		324884	0					
ANR	324906	IfStatement	if ( EXPECTED ( Z_TYPE_P ( op1 ) == IS_TRUE ) )		324884	0					
ANR	324907	Condition	EXPECTED ( Z_TYPE_P ( op1 ) == IS_TRUE )	1268:12:32041:32074	324884	0	True				
ANR	324908	CallExpression	EXPECTED ( Z_TYPE_P ( op1 ) == IS_TRUE )		324884	0					
ANR	324909	Callee	EXPECTED		324884	0					
ANR	324910	Identifier	EXPECTED		324884	0					
ANR	324911	ArgumentList	Z_TYPE_P ( op1 ) == IS_TRUE		324884	1					
ANR	324912	Argument	Z_TYPE_P ( op1 ) == IS_TRUE		324884	0					
ANR	324913	EqualityExpression	Z_TYPE_P ( op1 ) == IS_TRUE		324884	0		==			
ANR	324914	CallExpression	Z_TYPE_P ( op1 )		324884	0					
ANR	324915	Callee	Z_TYPE_P		324884	0					
ANR	324916	Identifier	Z_TYPE_P		324884	0					
ANR	324917	ArgumentList	op1		324884	1					
ANR	324918	Argument	op1		324884	0					
ANR	324919	Identifier	op1		324884	0					
ANR	324920	Identifier	IS_TRUE		324884	1					
ANR	324921	CompoundStatement		4:48:102:102	324884	1					
ANR	324922	ExpressionStatement	ZVAL_FALSE ( result )	1269:2:32081:32099	324884	0	True				
ANR	324923	CallExpression	ZVAL_FALSE ( result )		324884	0					
ANR	324924	Callee	ZVAL_FALSE		324884	0					
ANR	324925	Identifier	ZVAL_FALSE		324884	0					
ANR	324926	ArgumentList	result		324884	1					
ANR	324927	Argument	result		324884	0					
ANR	324928	Identifier	result		324884	0					
ANR	324929	ElseStatement	else		324884	0					
ANR	324930	CompoundStatement		6:8:134:134	324884	0					
ANR	324931	IfStatement	if ( Z_ISREF_P ( op1 ) )		324884	0					
ANR	324932	Condition	Z_ISREF_P ( op1 )	1271:6:32117:32130	324884	0	True				
ANR	324933	CallExpression	Z_ISREF_P ( op1 )		324884	0					
ANR	324934	Callee	Z_ISREF_P		324884	0					
ANR	324935	Identifier	Z_ISREF_P		324884	0					
ANR	324936	ArgumentList	op1		324884	1					
ANR	324937	Argument	op1		324884	0					
ANR	324938	Identifier	op1		324884	0					
ANR	324939	CompoundStatement		7:22:158:158	324884	1					
ANR	324940	ExpressionStatement	op1 = Z_REFVAL_P ( op1 )	1272:3:32138:32159	324884	0	True				
ANR	324941	AssignmentExpression	op1 = Z_REFVAL_P ( op1 )		324884	0		=			
ANR	324942	Identifier	op1		324884	0					
ANR	324943	CallExpression	Z_REFVAL_P ( op1 )		324884	1					
ANR	324944	Callee	Z_REFVAL_P		324884	0					
ANR	324945	Identifier	Z_REFVAL_P		324884	0					
ANR	324946	ArgumentList	op1		324884	1					
ANR	324947	Argument	op1		324884	0					
ANR	324948	Identifier	op1		324884	0					
ANR	324949	IfStatement	if ( Z_TYPE_P ( op1 ) < IS_TRUE )		324884	1					
ANR	324950	Condition	Z_TYPE_P ( op1 ) < IS_TRUE	1273:7:32168:32190	324884	0	True				
ANR	324951	RelationalExpression	Z_TYPE_P ( op1 ) < IS_TRUE		324884	0		<			
ANR	324952	CallExpression	Z_TYPE_P ( op1 )		324884	0					
ANR	324953	Callee	Z_TYPE_P		324884	0					
ANR	324954	Identifier	Z_TYPE_P		324884	0					
ANR	324955	ArgumentList	op1		324884	1					
ANR	324956	Argument	op1		324884	0					
ANR	324957	Identifier	op1		324884	0					
ANR	324958	Identifier	IS_TRUE		324884	1					
ANR	324959	CompoundStatement		9:32:218:218	324884	1					
ANR	324960	ExpressionStatement	ZVAL_TRUE ( result )	1274:4:32199:32216	324884	0	True				
ANR	324961	CallExpression	ZVAL_TRUE ( result )		324884	0					
ANR	324962	Callee	ZVAL_TRUE		324884	0					
ANR	324963	Identifier	ZVAL_TRUE		324884	0					
ANR	324964	ArgumentList	result		324884	1					
ANR	324965	Argument	result		324884	0					
ANR	324966	Identifier	result		324884	0					
ANR	324967	ReturnStatement	return SUCCESS ;	1275:4:32222:32236	324884	1	True				
ANR	324968	Identifier	SUCCESS		324884	0					
ANR	324969	ElseStatement	else		324884	0					
ANR	324970	IfStatement	if ( EXPECTED ( Z_TYPE_P ( op1 ) == IS_TRUE ) )		324884	0					
ANR	324971	Condition	EXPECTED ( Z_TYPE_P ( op1 ) == IS_TRUE )	1276:14:32252:32285	324884	0	True				
ANR	324972	CallExpression	EXPECTED ( Z_TYPE_P ( op1 ) == IS_TRUE )		324884	0					
ANR	324973	Callee	EXPECTED		324884	0					
ANR	324974	Identifier	EXPECTED		324884	0					
ANR	324975	ArgumentList	Z_TYPE_P ( op1 ) == IS_TRUE		324884	1					
ANR	324976	Argument	Z_TYPE_P ( op1 ) == IS_TRUE		324884	0					
ANR	324977	EqualityExpression	Z_TYPE_P ( op1 ) == IS_TRUE		324884	0		==			
ANR	324978	CallExpression	Z_TYPE_P ( op1 )		324884	0					
ANR	324979	Callee	Z_TYPE_P		324884	0					
ANR	324980	Identifier	Z_TYPE_P		324884	0					
ANR	324981	ArgumentList	op1		324884	1					
ANR	324982	Argument	op1		324884	0					
ANR	324983	Identifier	op1		324884	0					
ANR	324984	Identifier	IS_TRUE		324884	1					
ANR	324985	CompoundStatement		12:50:313:313	324884	1					
ANR	324986	ExpressionStatement	ZVAL_FALSE ( result )	1277:4:32294:32312	324884	0	True				
ANR	324987	CallExpression	ZVAL_FALSE ( result )		324884	0					
ANR	324988	Callee	ZVAL_FALSE		324884	0					
ANR	324989	Identifier	ZVAL_FALSE		324884	0					
ANR	324990	ArgumentList	result		324884	1					
ANR	324991	Argument	result		324884	0					
ANR	324992	Identifier	result		324884	0					
ANR	324993	ReturnStatement	return SUCCESS ;	1278:4:32318:32332	324884	1	True				
ANR	324994	Identifier	SUCCESS		324884	0					
ANR	324995	ExpressionStatement	ZEND_TRY_UNARY_OBJECT_OPERATION ( ZEND_BOOL_NOT )	1281:2:32345:32391	324884	1	True				
ANR	324996	CallExpression	ZEND_TRY_UNARY_OBJECT_OPERATION ( ZEND_BOOL_NOT )		324884	0					
ANR	324997	Callee	ZEND_TRY_UNARY_OBJECT_OPERATION		324884	0					
ANR	324998	Identifier	ZEND_TRY_UNARY_OBJECT_OPERATION		324884	0					
ANR	324999	ArgumentList	ZEND_BOOL_NOT		324884	1					
ANR	325000	Argument	ZEND_BOOL_NOT		324884	0					
ANR	325001	Identifier	ZEND_BOOL_NOT		324884	0					
ANR	325002	ExpressionStatement	"ZVAL_BOOL ( result , ! zval_is_true ( op1 ) )"	1283:2:32396:32433	324884	2	True				
ANR	325003	CallExpression	"ZVAL_BOOL ( result , ! zval_is_true ( op1 ) )"		324884	0					
ANR	325004	Callee	ZVAL_BOOL		324884	0					
ANR	325005	Identifier	ZVAL_BOOL		324884	0					
ANR	325006	ArgumentList	result		324884	1					
ANR	325007	Argument	result		324884	0					
ANR	325008	Identifier	result		324884	0					
ANR	325009	Argument	! zval_is_true ( op1 )		324884	1					
ANR	325010	UnaryOperationExpression	! zval_is_true ( op1 )		324884	0					
ANR	325011	UnaryOperator	!		324884	0					
ANR	325012	CallExpression	zval_is_true ( op1 )		324884	1					
ANR	325013	Callee	zval_is_true		324884	0					
ANR	325014	Identifier	zval_is_true		324884	0					
ANR	325015	ArgumentList	op1		324884	1					
ANR	325016	Argument	op1		324884	0					
ANR	325017	Identifier	op1		324884	0					
ANR	325018	ReturnStatement	return SUCCESS ;	1285:1:32439:32453	324884	1	True				
ANR	325019	Identifier	SUCCESS		324884	0					
ANR	325020	ReturnType	ZEND_API int ZEND_FASTCALL		324884	1					
ANR	325021	Identifier	boolean_not_function		324884	2					
ANR	325022	ParameterList	"zval * result , zval * op1"		324884	3					
ANR	325023	Parameter	zval * result	1264:48:31939:31950	324884	0	True				
ANR	325024	ParameterType	zval *		324884	0					
ANR	325025	Identifier	result		324884	1					
ANR	325026	Parameter	zval * op1	1264:62:31953:31961	324884	1	True				
ANR	325027	ParameterType	zval *		324884	0					
ANR	325028	Identifier	op1		324884	1					
ANR	325029	CFGEntryNode	ENTRY		324884		True				
ANR	325030	CFGExitNode	EXIT		324884		True				
ANR	325031	Symbol	result		324884						
ANR	325032	Symbol	op1		324884						
ANR	325033	Symbol	SUCCESS		324884						
ANR	325034	Symbol	Z_REFVAL_P		324884						
ANR	325035	Symbol	ZEND_BOOL_NOT		324884						
ANR	325036	Symbol	IS_TRUE		324884						
ANR	325037	Symbol	zval_is_true		324884						
ANR	325038	Symbol	Z_TYPE_P		324884						
ANR	325039	Symbol	EXPECTED		324884						
ANR	325040	Symbol	Z_ISREF_P		324884						
ANR	325041	Function	bitwise_not_function	1289:0:32468:33495							
ANR	325042	FunctionDef	"bitwise_not_function (zval * result , zval * op1)"		325041	0					
ANR	325043	CompoundStatement		1290:0:32551:33495	325041	0					
ANR	325044	Label	try_again :	1291:0:32553:32562	325041	0	True				
ANR	325045	Identifier	try_again		325041	0					
ANR	325046	SwitchStatement	switch ( Z_TYPE_P ( op1 ) )		325041	1					
ANR	325047	Condition	Z_TYPE_P ( op1 )	1292:9:32573:32585	325041	0	True				
ANR	325048	CallExpression	Z_TYPE_P ( op1 )		325041	0					
ANR	325049	Callee	Z_TYPE_P		325041	0					
ANR	325050	Identifier	Z_TYPE_P		325041	0					
ANR	325051	ArgumentList	op1		325041	1					
ANR	325052	Argument	op1		325041	0					
ANR	325053	Identifier	op1		325041	0					
ANR	325054	CompoundStatement		3:24:36:36	325041	1					
ANR	325055	Label	case IS_LONG :	1293:2:32592:32604	325041	0	True				
ANR	325056	Identifier	IS_LONG		325041	0					
ANR	325057	ExpressionStatement	"ZVAL_LONG ( result , ~Z_LVAL_P ( op1 ) )"	1294:3:32609:32642	325041	1	True				
ANR	325058	CallExpression	"ZVAL_LONG ( result , ~Z_LVAL_P ( op1 ) )"		325041	0					
ANR	325059	Callee	ZVAL_LONG		325041	0					
ANR	325060	Identifier	ZVAL_LONG		325041	0					
ANR	325061	ArgumentList	result		325041	1					
ANR	325062	Argument	result		325041	0					
ANR	325063	Identifier	result		325041	0					
ANR	325064	Argument	~Z_LVAL_P ( op1 )		325041	1					
ANR	325065	CallExpression	~Z_LVAL_P ( op1 )		325041	0					
ANR	325066	Callee	~Z_LVAL_P		325041	0					
ANR	325067	Identifier	~Z_LVAL_P		325041	0					
ANR	325068	ArgumentList	op1		325041	1					
ANR	325069	Argument	op1		325041	0					
ANR	325070	Identifier	op1		325041	0					
ANR	325071	ReturnStatement	return SUCCESS ;	1295:3:32647:32661	325041	2	True				
ANR	325072	Identifier	SUCCESS		325041	0					
ANR	325073	Label	case IS_DOUBLE :	1296:2:32665:32679	325041	3	True				
ANR	325074	Identifier	IS_DOUBLE		325041	0					
ANR	325075	ExpressionStatement	"ZVAL_LONG ( result , ~zend_dval_to_lval ( Z_DVAL_P ( op1 ) ) )"	1297:3:32684:32736	325041	4	True				
ANR	325076	CallExpression	"ZVAL_LONG ( result , ~zend_dval_to_lval ( Z_DVAL_P ( op1 ) ) )"		325041	0					
ANR	325077	Callee	ZVAL_LONG		325041	0					
ANR	325078	Identifier	ZVAL_LONG		325041	0					
ANR	325079	ArgumentList	result		325041	1					
ANR	325080	Argument	result		325041	0					
ANR	325081	Identifier	result		325041	0					
ANR	325082	Argument	~zend_dval_to_lval ( Z_DVAL_P ( op1 ) )		325041	1					
ANR	325083	CallExpression	~zend_dval_to_lval ( Z_DVAL_P ( op1 ) )		325041	0					
ANR	325084	Callee	~zend_dval_to_lval		325041	0					
ANR	325085	Identifier	~zend_dval_to_lval		325041	0					
ANR	325086	ArgumentList	Z_DVAL_P ( op1 )		325041	1					
ANR	325087	Argument	Z_DVAL_P ( op1 )		325041	0					
ANR	325088	CallExpression	Z_DVAL_P ( op1 )		325041	0					
ANR	325089	Callee	Z_DVAL_P		325041	0					
ANR	325090	Identifier	Z_DVAL_P		325041	0					
ANR	325091	ArgumentList	op1		325041	1					
ANR	325092	Argument	op1		325041	0					
ANR	325093	Identifier	op1		325041	0					
ANR	325094	ReturnStatement	return SUCCESS ;	1298:3:32741:32755	325041	5	True				
ANR	325095	Identifier	SUCCESS		325041	0					
ANR	325096	Label	case IS_STRING :	1299:2:32759:32773	325041	6	True				
ANR	325097	Identifier	IS_STRING		325041	0					
ANR	325098	CompoundStatement		11:3:228:236	325041	7					
ANR	325099	IdentifierDeclStatement	size_t i ;	1300:3:32780:32788	325041	0	True				
ANR	325100	IdentifierDecl	i		325041	0					
ANR	325101	IdentifierDeclType	size_t		325041	0					
ANR	325102	Identifier	i		325041	1					
ANR	325103	IfStatement	if ( Z_STRLEN_P ( op1 ) == 1 )		325041	1					
ANR	325104	Condition	Z_STRLEN_P ( op1 ) == 1	1302:7:32798:32817	325041	0	True				
ANR	325105	EqualityExpression	Z_STRLEN_P ( op1 ) == 1		325041	0		==			
ANR	325106	CallExpression	Z_STRLEN_P ( op1 )		325041	0					
ANR	325107	Callee	Z_STRLEN_P		325041	0					
ANR	325108	Identifier	Z_STRLEN_P		325041	0					
ANR	325109	ArgumentList	op1		325041	1					
ANR	325110	Argument	op1		325041	0					
ANR	325111	Identifier	op1		325041	0					
ANR	325112	PrimaryExpression	1		325041	1					
ANR	325113	CompoundStatement		14:4:274:321	325041	1					
ANR	325114	IdentifierDeclStatement	zend_uchar not = ( zend_uchar ) ~ * Z_STRVAL_P ( op1 ) ;	1303:4:32826:32873	325041	0	True				
ANR	325115	IdentifierDecl	not = ( zend_uchar ) ~ * Z_STRVAL_P ( op1 )		325041	0					
ANR	325116	IdentifierDeclType	zend_uchar		325041	0					
ANR	325117	Identifier	not		325041	1					
ANR	325118	AssignmentExpression	not = ( zend_uchar ) ~ * Z_STRVAL_P ( op1 )		325041	2		=			
ANR	325119	Identifier	not		325041	0					
ANR	325120	CastExpression	( zend_uchar ) ~ * Z_STRVAL_P ( op1 )		325041	1					
ANR	325121	CastTarget	zend_uchar		325041	0					
ANR	325122	UnaryOperationExpression	~ * Z_STRVAL_P ( op1 )		325041	1					
ANR	325123	UnaryOperator	~		325041	0					
ANR	325124	UnaryOperationExpression	* Z_STRVAL_P ( op1 )		325041	1					
ANR	325125	UnaryOperator	*		325041	0					
ANR	325126	CallExpression	Z_STRVAL_P ( op1 )		325041	1					
ANR	325127	Callee	Z_STRVAL_P		325041	0					
ANR	325128	Identifier	Z_STRVAL_P		325041	0					
ANR	325129	ArgumentList	op1		325041	1					
ANR	325130	Argument	op1		325041	0					
ANR	325131	Identifier	op1		325041	0					
ANR	325132	IfStatement	if ( CG ( one_char_string ) [ not ] )		325041	1					
ANR	325133	Condition	CG ( one_char_string ) [ not ]	1304:8:32883:32906	325041	0	True				
ANR	325134	ArrayIndexing	CG ( one_char_string ) [ not ]		325041	0					
ANR	325135	CallExpression	CG ( one_char_string )		325041	0					
ANR	325136	Callee	CG		325041	0					
ANR	325137	Identifier	CG		325041	0					
ANR	325138	ArgumentList	one_char_string		325041	1					
ANR	325139	Argument	one_char_string		325041	0					
ANR	325140	Identifier	one_char_string		325041	0					
ANR	325141	Identifier	not		325041	1					
ANR	325142	CompoundStatement		15:34:357:357	325041	1					
ANR	325143	ExpressionStatement	"ZVAL_INTERNED_STR ( result , CG ( one_char_string ) [ not ] )"	1305:5:32916:32967	325041	0	True				
ANR	325144	CallExpression	"ZVAL_INTERNED_STR ( result , CG ( one_char_string ) [ not ] )"		325041	0					
ANR	325145	Callee	ZVAL_INTERNED_STR		325041	0					
ANR	325146	Identifier	ZVAL_INTERNED_STR		325041	0					
ANR	325147	ArgumentList	result		325041	1					
ANR	325148	Argument	result		325041	0					
ANR	325149	Identifier	result		325041	0					
ANR	325150	Argument	CG ( one_char_string ) [ not ]		325041	1					
ANR	325151	ArrayIndexing	CG ( one_char_string ) [ not ]		325041	0					
ANR	325152	CallExpression	CG ( one_char_string )		325041	0					
ANR	325153	Callee	CG		325041	0					
ANR	325154	Identifier	CG		325041	0					
ANR	325155	ArgumentList	one_char_string		325041	1					
ANR	325156	Argument	one_char_string		325041	0					
ANR	325157	Identifier	one_char_string		325041	0					
ANR	325158	Identifier	not		325041	1					
ANR	325159	ElseStatement	else		325041	0					
ANR	325160	CompoundStatement		17:11:428:428	325041	0					
ANR	325161	ExpressionStatement	"ZVAL_NEW_STR ( result , zend_string_init ( ( char * ) & not , 1 , 0 ) )"	1307:5:32987:33046	325041	0	True				
ANR	325162	CallExpression	"ZVAL_NEW_STR ( result , zend_string_init ( ( char * ) & not , 1 , 0 ) )"		325041	0					
ANR	325163	Callee	ZVAL_NEW_STR		325041	0					
ANR	325164	Identifier	ZVAL_NEW_STR		325041	0					
ANR	325165	ArgumentList	result		325041	1					
ANR	325166	Argument	result		325041	0					
ANR	325167	Identifier	result		325041	0					
ANR	325168	Argument	"zend_string_init ( ( char * ) & not , 1 , 0 )"		325041	1					
ANR	325169	CallExpression	"zend_string_init ( ( char * ) & not , 1 , 0 )"		325041	0					
ANR	325170	Callee	zend_string_init		325041	0					
ANR	325171	Identifier	zend_string_init		325041	0					
ANR	325172	ArgumentList	( char * ) & not		325041	1					
ANR	325173	Argument	( char * ) & not		325041	0					
ANR	325174	CastExpression	( char * ) & not		325041	0					
ANR	325175	CastTarget	char *		325041	0					
ANR	325176	UnaryOperationExpression	& not		325041	1					
ANR	325177	UnaryOperator	&		325041	0					
ANR	325178	Identifier	not		325041	1					
ANR	325179	Argument	1		325041	1					
ANR	325180	PrimaryExpression	1		325041	0					
ANR	325181	Argument	0		325041	2					
ANR	325182	PrimaryExpression	0		325041	0					
ANR	325183	ElseStatement	else		325041	0					
ANR	325184	CompoundStatement		20:10:512:512	325041	0					
ANR	325185	ExpressionStatement	"ZVAL_NEW_STR ( result , zend_string_alloc ( Z_STRLEN_P ( op1 ) , 0 ) )"	1310:4:33070:33129	325041	0	True				
ANR	325186	CallExpression	"ZVAL_NEW_STR ( result , zend_string_alloc ( Z_STRLEN_P ( op1 ) , 0 ) )"		325041	0					
ANR	325187	Callee	ZVAL_NEW_STR		325041	0					
ANR	325188	Identifier	ZVAL_NEW_STR		325041	0					
ANR	325189	ArgumentList	result		325041	1					
ANR	325190	Argument	result		325041	0					
ANR	325191	Identifier	result		325041	0					
ANR	325192	Argument	"zend_string_alloc ( Z_STRLEN_P ( op1 ) , 0 )"		325041	1					
ANR	325193	CallExpression	"zend_string_alloc ( Z_STRLEN_P ( op1 ) , 0 )"		325041	0					
ANR	325194	Callee	zend_string_alloc		325041	0					
ANR	325195	Identifier	zend_string_alloc		325041	0					
ANR	325196	ArgumentList	Z_STRLEN_P ( op1 )		325041	1					
ANR	325197	Argument	Z_STRLEN_P ( op1 )		325041	0					
ANR	325198	CallExpression	Z_STRLEN_P ( op1 )		325041	0					
ANR	325199	Callee	Z_STRLEN_P		325041	0					
ANR	325200	Identifier	Z_STRLEN_P		325041	0					
ANR	325201	ArgumentList	op1		325041	1					
ANR	325202	Argument	op1		325041	0					
ANR	325203	Identifier	op1		325041	0					
ANR	325204	Argument	0		325041	1					
ANR	325205	PrimaryExpression	0		325041	0					
ANR	325206	ForStatement	for ( i = 0 ; i < Z_STRLEN_P ( op1 ) ; i ++ )		325041	1					
ANR	325207	ForInit	i = 0 ;	1311:9:33140:33145	325041	0	True				
ANR	325208	AssignmentExpression	i = 0		325041	0		=			
ANR	325209	Identifier	i		325041	0					
ANR	325210	PrimaryExpression	0		325041	1					
ANR	325211	Condition	i < Z_STRLEN_P ( op1 )	1311:16:33147:33165	325041	1	True				
ANR	325212	RelationalExpression	i < Z_STRLEN_P ( op1 )		325041	0		<			
ANR	325213	Identifier	i		325041	0					
ANR	325214	CallExpression	Z_STRLEN_P ( op1 )		325041	1					
ANR	325215	Callee	Z_STRLEN_P		325041	0					
ANR	325216	Identifier	Z_STRLEN_P		325041	0					
ANR	325217	ArgumentList	op1		325041	1					
ANR	325218	Argument	op1		325041	0					
ANR	325219	Identifier	op1		325041	0					
ANR	325220	PostIncDecOperationExpression	i ++	1311:37:33168:33170	325041	2	True				
ANR	325221	Identifier	i		325041	0					
ANR	325222	IncDec	++		325041	1					
ANR	325223	CompoundStatement		22:42:621:621	325041	3					
ANR	325224	ExpressionStatement	Z_STRVAL_P ( result ) [ i ] = ~Z_STRVAL_P ( op1 ) [ i ]	1312:5:33180:33223	325041	0	True				
ANR	325225	AssignmentExpression	Z_STRVAL_P ( result ) [ i ] = ~Z_STRVAL_P ( op1 ) [ i ]		325041	0		=			
ANR	325226	ArrayIndexing	Z_STRVAL_P ( result ) [ i ]		325041	0					
ANR	325227	CallExpression	Z_STRVAL_P ( result )		325041	0					
ANR	325228	Callee	Z_STRVAL_P		325041	0					
ANR	325229	Identifier	Z_STRVAL_P		325041	0					
ANR	325230	ArgumentList	result		325041	1					
ANR	325231	Argument	result		325041	0					
ANR	325232	Identifier	result		325041	0					
ANR	325233	Identifier	i		325041	1					
ANR	325234	ArrayIndexing	~Z_STRVAL_P ( op1 ) [ i ]		325041	1					
ANR	325235	CallExpression	~Z_STRVAL_P ( op1 )		325041	0					
ANR	325236	Callee	~Z_STRVAL_P		325041	0					
ANR	325237	Identifier	~Z_STRVAL_P		325041	0					
ANR	325238	ArgumentList	op1		325041	1					
ANR	325239	Argument	op1		325041	0					
ANR	325240	Identifier	op1		325041	0					
ANR	325241	Identifier	i		325041	1					
ANR	325242	ExpressionStatement	Z_STRVAL_P ( result ) [ i ] = 0	1314:4:33235:33260	325041	2	True				
ANR	325243	AssignmentExpression	Z_STRVAL_P ( result ) [ i ] = 0		325041	0		=			
ANR	325244	ArrayIndexing	Z_STRVAL_P ( result ) [ i ]		325041	0					
ANR	325245	CallExpression	Z_STRVAL_P ( result )		325041	0					
ANR	325246	Callee	Z_STRVAL_P		325041	0					
ANR	325247	Identifier	Z_STRVAL_P		325041	0					
ANR	325248	ArgumentList	result		325041	1					
ANR	325249	Argument	result		325041	0					
ANR	325250	Identifier	result		325041	0					
ANR	325251	Identifier	i		325041	1					
ANR	325252	PrimaryExpression	0		325041	1					
ANR	325253	ReturnStatement	return SUCCESS ;	1316:3:33270:33284	325041	2	True				
ANR	325254	Identifier	SUCCESS		325041	0					
ANR	325255	Label	case IS_REFERENCE :	1318:2:33292:33309	325041	8	True				
ANR	325256	Identifier	IS_REFERENCE		325041	0					
ANR	325257	ExpressionStatement	op1 = Z_REFVAL_P ( op1 )	1319:3:33314:33335	325041	9	True				
ANR	325258	AssignmentExpression	op1 = Z_REFVAL_P ( op1 )		325041	0		=			
ANR	325259	Identifier	op1		325041	0					
ANR	325260	CallExpression	Z_REFVAL_P ( op1 )		325041	1					
ANR	325261	Callee	Z_REFVAL_P		325041	0					
ANR	325262	Identifier	Z_REFVAL_P		325041	0					
ANR	325263	ArgumentList	op1		325041	1					
ANR	325264	Argument	op1		325041	0					
ANR	325265	Identifier	op1		325041	0					
ANR	325266	GotoStatement	goto try_again ;	1320:3:33340:33354	325041	10	True				
ANR	325267	Identifier	try_again		325041	0					
ANR	325268	Label	default :	1321:2:33358:33365	325041	11	True				
ANR	325269	Identifier	default		325041	0					
ANR	325270	ExpressionStatement	ZEND_TRY_UNARY_OBJECT_OPERATION ( ZEND_BW_NOT )	1322:3:33370:33414	325041	12	True				
ANR	325271	CallExpression	ZEND_TRY_UNARY_OBJECT_OPERATION ( ZEND_BW_NOT )		325041	0					
ANR	325272	Callee	ZEND_TRY_UNARY_OBJECT_OPERATION		325041	0					
ANR	325273	Identifier	ZEND_TRY_UNARY_OBJECT_OPERATION		325041	0					
ANR	325274	ArgumentList	ZEND_BW_NOT		325041	1					
ANR	325275	Argument	ZEND_BW_NOT		325041	0					
ANR	325276	Identifier	ZEND_BW_NOT		325041	0					
ANR	325277	ExpressionStatement	"zend_throw_error ( NULL , ""Unsupported operand types"" )"	1324:3:33420:33471	325041	13	True				
ANR	325278	CallExpression	"zend_throw_error ( NULL , ""Unsupported operand types"" )"		325041	0					
ANR	325279	Callee	zend_throw_error		325041	0					
ANR	325280	Identifier	zend_throw_error		325041	0					
ANR	325281	ArgumentList	NULL		325041	1					
ANR	325282	Argument	NULL		325041	0					
ANR	325283	Identifier	NULL		325041	0					
ANR	325284	Argument	"""Unsupported operand types"""		325041	1					
ANR	325285	PrimaryExpression	"""Unsupported operand types"""		325041	0					
ANR	325286	ReturnStatement	return FAILURE ;	1325:3:33476:33490	325041	14	True				
ANR	325287	Identifier	FAILURE		325041	0					
ANR	325288	ReturnType	ZEND_API int ZEND_FASTCALL		325041	1					
ANR	325289	Identifier	bitwise_not_function		325041	2					
ANR	325290	ParameterList	"zval * result , zval * op1"		325041	3					
ANR	325291	Parameter	zval * result	1289:48:32516:32527	325041	0	True				
ANR	325292	ParameterType	zval *		325041	0					
ANR	325293	Identifier	result		325041	1					
ANR	325294	Parameter	zval * op1	1289:62:32530:32538	325041	1	True				
ANR	325295	ParameterType	zval *		325041	0					
ANR	325296	Identifier	op1		325041	1					
ANR	325297	CFGEntryNode	ENTRY		325041		True				
ANR	325298	CFGExitNode	EXIT		325041		True				
ANR	325299	Symbol	~zend_dval_to_lval		325041						
ANR	325300	Symbol	ZEND_BW_NOT		325041						
ANR	325301	Symbol	* CG		325041						
ANR	325302	Symbol	* Z_STRVAL_P ( op1 )		325041						
ANR	325303	Symbol	one_char_string		325041						
ANR	325304	Symbol	result		325041						
ANR	325305	Symbol	zend_string_init		325041						
ANR	325306	Symbol	not		325041						
ANR	325307	Symbol	~Z_LVAL_P		325041						
ANR	325308	Symbol	Z_STRLEN_P		325041						
ANR	325309	Symbol	* Z_STRVAL_P		325041						
ANR	325310	Symbol	* ~Z_STRVAL_P		325041						
ANR	325311	Symbol	zend_string_alloc		325041						
ANR	325312	Symbol	SUCCESS		325041						
ANR	325313	Symbol	NULL		325041						
ANR	325314	Symbol	CG		325041						
ANR	325315	Symbol	i		325041						
ANR	325316	Symbol	Z_TYPE_P		325041						
ANR	325317	Symbol	Z_STRVAL_P		325041						
ANR	325318	Symbol	FAILURE		325041						
ANR	325319	Symbol	Z_DVAL_P		325041						
ANR	325320	Symbol	op1		325041						
ANR	325321	Symbol	* i		325041						
ANR	325322	Symbol	Z_REFVAL_P		325041						
ANR	325323	Symbol	* not		325041						
ANR	325324	Symbol	& not		325041						
ANR	325325	Symbol	~Z_STRVAL_P		325041						
ANR	325326	Function	bitwise_or_function	1330:0:33508:35301							
ANR	325327	FunctionDef	"bitwise_or_function (zval * result , zval * op1 , zval * op2)"		325326	0					
ANR	325328	CompoundStatement		1331:0:33601:35301	325326	0					
ANR	325329	IdentifierDeclStatement	"zend_long op1_lval , op2_lval ;"	1332:1:33604:33632	325326	0	True				
ANR	325330	IdentifierDecl	op1_lval		325326	0					
ANR	325331	IdentifierDeclType	zend_long		325326	0					
ANR	325332	Identifier	op1_lval		325326	1					
ANR	325333	IdentifierDecl	op2_lval		325326	1					
ANR	325334	IdentifierDeclType	zend_long		325326	0					
ANR	325335	Identifier	op2_lval		325326	1					
ANR	325336	IfStatement	if ( EXPECTED ( Z_TYPE_P ( op1 ) == IS_LONG ) && EXPECTED ( Z_TYPE_P ( op2 ) == IS_LONG ) )		325326	1					
ANR	325337	Condition	EXPECTED ( Z_TYPE_P ( op1 ) == IS_LONG ) && EXPECTED ( Z_TYPE_P ( op2 ) == IS_LONG )	1334:5:33640:33711	325326	0	True				
ANR	325338	AndExpression	EXPECTED ( Z_TYPE_P ( op1 ) == IS_LONG ) && EXPECTED ( Z_TYPE_P ( op2 ) == IS_LONG )		325326	0		&&			
ANR	325339	CallExpression	EXPECTED ( Z_TYPE_P ( op1 ) == IS_LONG )		325326	0					
ANR	325340	Callee	EXPECTED		325326	0					
ANR	325341	Identifier	EXPECTED		325326	0					
ANR	325342	ArgumentList	Z_TYPE_P ( op1 ) == IS_LONG		325326	1					
ANR	325343	Argument	Z_TYPE_P ( op1 ) == IS_LONG		325326	0					
ANR	325344	EqualityExpression	Z_TYPE_P ( op1 ) == IS_LONG		325326	0		==			
ANR	325345	CallExpression	Z_TYPE_P ( op1 )		325326	0					
ANR	325346	Callee	Z_TYPE_P		325326	0					
ANR	325347	Identifier	Z_TYPE_P		325326	0					
ANR	325348	ArgumentList	op1		325326	1					
ANR	325349	Argument	op1		325326	0					
ANR	325350	Identifier	op1		325326	0					
ANR	325351	Identifier	IS_LONG		325326	1					
ANR	325352	CallExpression	EXPECTED ( Z_TYPE_P ( op2 ) == IS_LONG )		325326	1					
ANR	325353	Callee	EXPECTED		325326	0					
ANR	325354	Identifier	EXPECTED		325326	0					
ANR	325355	ArgumentList	Z_TYPE_P ( op2 ) == IS_LONG		325326	1					
ANR	325356	Argument	Z_TYPE_P ( op2 ) == IS_LONG		325326	0					
ANR	325357	EqualityExpression	Z_TYPE_P ( op2 ) == IS_LONG		325326	0		==			
ANR	325358	CallExpression	Z_TYPE_P ( op2 )		325326	0					
ANR	325359	Callee	Z_TYPE_P		325326	0					
ANR	325360	Identifier	Z_TYPE_P		325326	0					
ANR	325361	ArgumentList	op2		325326	1					
ANR	325362	Argument	op2		325326	0					
ANR	325363	Identifier	op2		325326	0					
ANR	325364	Identifier	IS_LONG		325326	1					
ANR	325365	CompoundStatement		4:79:112:112	325326	1					
ANR	325366	ExpressionStatement	"ZVAL_LONG ( result , Z_LVAL_P ( op1 ) | Z_LVAL_P ( op2 ) )"	1335:2:33718:33766	325326	0	True				
ANR	325367	CallExpression	"ZVAL_LONG ( result , Z_LVAL_P ( op1 ) | Z_LVAL_P ( op2 ) )"		325326	0					
ANR	325368	Callee	ZVAL_LONG		325326	0					
ANR	325369	Identifier	ZVAL_LONG		325326	0					
ANR	325370	ArgumentList	result		325326	1					
ANR	325371	Argument	result		325326	0					
ANR	325372	Identifier	result		325326	0					
ANR	325373	Argument	Z_LVAL_P ( op1 ) | Z_LVAL_P ( op2 )		325326	1					
ANR	325374	InclusiveOrExpression	Z_LVAL_P ( op1 ) | Z_LVAL_P ( op2 )		325326	0		|			
ANR	325375	CallExpression	Z_LVAL_P ( op1 )		325326	0					
ANR	325376	Callee	Z_LVAL_P		325326	0					
ANR	325377	Identifier	Z_LVAL_P		325326	0					
ANR	325378	ArgumentList	op1		325326	1					
ANR	325379	Argument	op1		325326	0					
ANR	325380	Identifier	op1		325326	0					
ANR	325381	CallExpression	Z_LVAL_P ( op2 )		325326	1					
ANR	325382	Callee	Z_LVAL_P		325326	0					
ANR	325383	Identifier	Z_LVAL_P		325326	0					
ANR	325384	ArgumentList	op2		325326	1					
ANR	325385	Argument	op2		325326	0					
ANR	325386	Identifier	op2		325326	0					
ANR	325387	ReturnStatement	return SUCCESS ;	1336:2:33770:33784	325326	1	True				
ANR	325388	Identifier	SUCCESS		325326	0					
ANR	325389	ExpressionStatement	ZVAL_DEREF ( op1 )	1339:1:33791:33806	325326	2	True				
ANR	325390	CallExpression	ZVAL_DEREF ( op1 )		325326	0					
ANR	325391	Callee	ZVAL_DEREF		325326	0					
ANR	325392	Identifier	ZVAL_DEREF		325326	0					
ANR	325393	ArgumentList	op1		325326	1					
ANR	325394	Argument	op1		325326	0					
ANR	325395	Identifier	op1		325326	0					
ANR	325396	ExpressionStatement	ZVAL_DEREF ( op2 )	1340:1:33809:33824	325326	3	True				
ANR	325397	CallExpression	ZVAL_DEREF ( op2 )		325326	0					
ANR	325398	Callee	ZVAL_DEREF		325326	0					
ANR	325399	Identifier	ZVAL_DEREF		325326	0					
ANR	325400	ArgumentList	op2		325326	1					
ANR	325401	Argument	op2		325326	0					
ANR	325402	Identifier	op2		325326	0					
ANR	325403	IfStatement	if ( Z_TYPE_P ( op1 ) == IS_STRING && EXPECTED ( Z_TYPE_P ( op2 ) == IS_STRING ) )		325326	4					
ANR	325404	Condition	Z_TYPE_P ( op1 ) == IS_STRING && EXPECTED ( Z_TYPE_P ( op2 ) == IS_STRING )	1342:5:33832:33897	325326	0	True				
ANR	325405	AndExpression	Z_TYPE_P ( op1 ) == IS_STRING && EXPECTED ( Z_TYPE_P ( op2 ) == IS_STRING )		325326	0		&&			
ANR	325406	EqualityExpression	Z_TYPE_P ( op1 ) == IS_STRING		325326	0		==			
ANR	325407	CallExpression	Z_TYPE_P ( op1 )		325326	0					
ANR	325408	Callee	Z_TYPE_P		325326	0					
ANR	325409	Identifier	Z_TYPE_P		325326	0					
ANR	325410	ArgumentList	op1		325326	1					
ANR	325411	Argument	op1		325326	0					
ANR	325412	Identifier	op1		325326	0					
ANR	325413	Identifier	IS_STRING		325326	1					
ANR	325414	CallExpression	EXPECTED ( Z_TYPE_P ( op2 ) == IS_STRING )		325326	1					
ANR	325415	Callee	EXPECTED		325326	0					
ANR	325416	Identifier	EXPECTED		325326	0					
ANR	325417	ArgumentList	Z_TYPE_P ( op2 ) == IS_STRING		325326	1					
ANR	325418	Argument	Z_TYPE_P ( op2 ) == IS_STRING		325326	0					
ANR	325419	EqualityExpression	Z_TYPE_P ( op2 ) == IS_STRING		325326	0		==			
ANR	325420	CallExpression	Z_TYPE_P ( op2 )		325326	0					
ANR	325421	Callee	Z_TYPE_P		325326	0					
ANR	325422	Identifier	Z_TYPE_P		325326	0					
ANR	325423	ArgumentList	op2		325326	1					
ANR	325424	Argument	op2		325326	0					
ANR	325425	Identifier	op2		325326	0					
ANR	325426	Identifier	IS_STRING		325326	1					
ANR	325427	CompoundStatement		15:2:348:356	325326	1					
ANR	325428	IdentifierDeclStatement	"zval * longer , * shorter ;"	1343:2:33904:33926	325326	0	True				
ANR	325429	IdentifierDecl	* longer		325326	0					
ANR	325430	IdentifierDeclType	zval *		325326	0					
ANR	325431	Identifier	longer		325326	1					
ANR	325432	IdentifierDecl	* shorter		325326	1					
ANR	325433	IdentifierDeclType	zval *		325326	0					
ANR	325434	Identifier	shorter		325326	1					
ANR	325435	IdentifierDeclStatement	zend_string * str ;	1344:2:33930:33946	325326	1	True				
ANR	325436	IdentifierDecl	* str		325326	0					
ANR	325437	IdentifierDeclType	zend_string *		325326	0					
ANR	325438	Identifier	str		325326	1					
ANR	325439	IdentifierDeclStatement	size_t i ;	1345:2:33950:33958	325326	2	True				
ANR	325440	IdentifierDecl	i		325326	0					
ANR	325441	IdentifierDeclType	size_t		325326	0					
ANR	325442	Identifier	i		325326	1					
ANR	325443	IfStatement	if ( EXPECTED ( Z_STRLEN_P ( op1 ) >= Z_STRLEN_P ( op2 ) ) )		325326	3					
ANR	325444	Condition	EXPECTED ( Z_STRLEN_P ( op1 ) >= Z_STRLEN_P ( op2 ) )	1347:6:33967:34010	325326	0	True				
ANR	325445	CallExpression	EXPECTED ( Z_STRLEN_P ( op1 ) >= Z_STRLEN_P ( op2 ) )		325326	0					
ANR	325446	Callee	EXPECTED		325326	0					
ANR	325447	Identifier	EXPECTED		325326	0					
ANR	325448	ArgumentList	Z_STRLEN_P ( op1 ) >= Z_STRLEN_P ( op2 )		325326	1					
ANR	325449	Argument	Z_STRLEN_P ( op1 ) >= Z_STRLEN_P ( op2 )		325326	0					
ANR	325450	RelationalExpression	Z_STRLEN_P ( op1 ) >= Z_STRLEN_P ( op2 )		325326	0		>=			
ANR	325451	CallExpression	Z_STRLEN_P ( op1 )		325326	0					
ANR	325452	Callee	Z_STRLEN_P		325326	0					
ANR	325453	Identifier	Z_STRLEN_P		325326	0					
ANR	325454	ArgumentList	op1		325326	1					
ANR	325455	Argument	op1		325326	0					
ANR	325456	Identifier	op1		325326	0					
ANR	325457	CallExpression	Z_STRLEN_P ( op2 )		325326	1					
ANR	325458	Callee	Z_STRLEN_P		325326	0					
ANR	325459	Identifier	Z_STRLEN_P		325326	0					
ANR	325460	ArgumentList	op2		325326	1					
ANR	325461	Argument	op2		325326	0					
ANR	325462	Identifier	op2		325326	0					
ANR	325463	CompoundStatement		17:52:411:411	325326	1					
ANR	325464	IfStatement	if ( EXPECTED ( Z_STRLEN_P ( op1 ) == Z_STRLEN_P ( op2 ) ) && Z_STRLEN_P ( op1 ) == 1 )		325326	0					
ANR	325465	Condition	EXPECTED ( Z_STRLEN_P ( op1 ) == Z_STRLEN_P ( op2 ) ) && Z_STRLEN_P ( op1 ) == 1	1348:7:34022:34089	325326	0	True				
ANR	325466	AndExpression	EXPECTED ( Z_STRLEN_P ( op1 ) == Z_STRLEN_P ( op2 ) ) && Z_STRLEN_P ( op1 ) == 1		325326	0		&&			
ANR	325467	CallExpression	EXPECTED ( Z_STRLEN_P ( op1 ) == Z_STRLEN_P ( op2 ) )		325326	0					
ANR	325468	Callee	EXPECTED		325326	0					
ANR	325469	Identifier	EXPECTED		325326	0					
ANR	325470	ArgumentList	Z_STRLEN_P ( op1 ) == Z_STRLEN_P ( op2 )		325326	1					
ANR	325471	Argument	Z_STRLEN_P ( op1 ) == Z_STRLEN_P ( op2 )		325326	0					
ANR	325472	EqualityExpression	Z_STRLEN_P ( op1 ) == Z_STRLEN_P ( op2 )		325326	0		==			
ANR	325473	CallExpression	Z_STRLEN_P ( op1 )		325326	0					
ANR	325474	Callee	Z_STRLEN_P		325326	0					
ANR	325475	Identifier	Z_STRLEN_P		325326	0					
ANR	325476	ArgumentList	op1		325326	1					
ANR	325477	Argument	op1		325326	0					
ANR	325478	Identifier	op1		325326	0					
ANR	325479	CallExpression	Z_STRLEN_P ( op2 )		325326	1					
ANR	325480	Callee	Z_STRLEN_P		325326	0					
ANR	325481	Identifier	Z_STRLEN_P		325326	0					
ANR	325482	ArgumentList	op2		325326	1					
ANR	325483	Argument	op2		325326	0					
ANR	325484	Identifier	op2		325326	0					
ANR	325485	EqualityExpression	Z_STRLEN_P ( op1 ) == 1		325326	1		==			
ANR	325486	CallExpression	Z_STRLEN_P ( op1 )		325326	0					
ANR	325487	Callee	Z_STRLEN_P		325326	0					
ANR	325488	Identifier	Z_STRLEN_P		325326	0					
ANR	325489	ArgumentList	op1		325326	1					
ANR	325490	Argument	op1		325326	0					
ANR	325491	Identifier	op1		325326	0					
ANR	325492	PrimaryExpression	1		325326	1					
ANR	325493	CompoundStatement		19:4:496:562	325326	1					
ANR	325494	IdentifierDeclStatement	zend_uchar or = ( zend_uchar ) ( * Z_STRVAL_P ( op1 ) | * Z_STRVAL_P ( op2 ) ) ;	1349:4:34098:34164	325326	0	True				
ANR	325495	IdentifierDecl	or = ( zend_uchar ) ( * Z_STRVAL_P ( op1 ) | * Z_STRVAL_P ( op2 ) )		325326	0					
ANR	325496	IdentifierDeclType	zend_uchar		325326	0					
ANR	325497	Identifier	or		325326	1					
ANR	325498	AssignmentExpression	or = ( zend_uchar ) ( * Z_STRVAL_P ( op1 ) | * Z_STRVAL_P ( op2 ) )		325326	2		=			
ANR	325499	Identifier	or		325326	0					
ANR	325500	CastExpression	( zend_uchar ) ( * Z_STRVAL_P ( op1 ) | * Z_STRVAL_P ( op2 ) )		325326	1					
ANR	325501	CastTarget	zend_uchar		325326	0					
ANR	325502	InclusiveOrExpression	* Z_STRVAL_P ( op1 ) | * Z_STRVAL_P ( op2 )		325326	1		|			
ANR	325503	UnaryOperationExpression	* Z_STRVAL_P ( op1 )		325326	0					
ANR	325504	UnaryOperator	*		325326	0					
ANR	325505	CallExpression	Z_STRVAL_P ( op1 )		325326	1					
ANR	325506	Callee	Z_STRVAL_P		325326	0					
ANR	325507	Identifier	Z_STRVAL_P		325326	0					
ANR	325508	ArgumentList	op1		325326	1					
ANR	325509	Argument	op1		325326	0					
ANR	325510	Identifier	op1		325326	0					
ANR	325511	UnaryOperationExpression	* Z_STRVAL_P ( op2 )		325326	1					
ANR	325512	UnaryOperator	*		325326	0					
ANR	325513	CallExpression	Z_STRVAL_P ( op2 )		325326	1					
ANR	325514	Callee	Z_STRVAL_P		325326	0					
ANR	325515	Identifier	Z_STRVAL_P		325326	0					
ANR	325516	ArgumentList	op2		325326	1					
ANR	325517	Argument	op2		325326	0					
ANR	325518	Identifier	op2		325326	0					
ANR	325519	IfStatement	if ( CG ( one_char_string ) [ or ] )		325326	1					
ANR	325520	Condition	CG ( one_char_string ) [ or ]	1350:8:34174:34196	325326	0	True				
ANR	325521	ArrayIndexing	CG ( one_char_string ) [ or ]		325326	0					
ANR	325522	CallExpression	CG ( one_char_string )		325326	0					
ANR	325523	Callee	CG		325326	0					
ANR	325524	Identifier	CG		325326	0					
ANR	325525	ArgumentList	one_char_string		325326	1					
ANR	325526	Argument	one_char_string		325326	0					
ANR	325527	Identifier	one_char_string		325326	0					
ANR	325528	Identifier	or		325326	1					
ANR	325529	CompoundStatement		20:33:597:597	325326	1					
ANR	325530	ExpressionStatement	"ZVAL_INTERNED_STR ( result , CG ( one_char_string ) [ or ] )"	1351:5:34206:34256	325326	0	True				
ANR	325531	CallExpression	"ZVAL_INTERNED_STR ( result , CG ( one_char_string ) [ or ] )"		325326	0					
ANR	325532	Callee	ZVAL_INTERNED_STR		325326	0					
ANR	325533	Identifier	ZVAL_INTERNED_STR		325326	0					
ANR	325534	ArgumentList	result		325326	1					
ANR	325535	Argument	result		325326	0					
ANR	325536	Identifier	result		325326	0					
ANR	325537	Argument	CG ( one_char_string ) [ or ]		325326	1					
ANR	325538	ArrayIndexing	CG ( one_char_string ) [ or ]		325326	0					
ANR	325539	CallExpression	CG ( one_char_string )		325326	0					
ANR	325540	Callee	CG		325326	0					
ANR	325541	Identifier	CG		325326	0					
ANR	325542	ArgumentList	one_char_string		325326	1					
ANR	325543	Argument	one_char_string		325326	0					
ANR	325544	Identifier	one_char_string		325326	0					
ANR	325545	Identifier	or		325326	1					
ANR	325546	ElseStatement	else		325326	0					
ANR	325547	CompoundStatement		22:11:667:667	325326	0					
ANR	325548	ExpressionStatement	"ZVAL_NEW_STR ( result , zend_string_init ( ( char * ) & or , 1 , 0 ) )"	1353:5:34276:34334	325326	0	True				
ANR	325549	CallExpression	"ZVAL_NEW_STR ( result , zend_string_init ( ( char * ) & or , 1 , 0 ) )"		325326	0					
ANR	325550	Callee	ZVAL_NEW_STR		325326	0					
ANR	325551	Identifier	ZVAL_NEW_STR		325326	0					
ANR	325552	ArgumentList	result		325326	1					
ANR	325553	Argument	result		325326	0					
ANR	325554	Identifier	result		325326	0					
ANR	325555	Argument	"zend_string_init ( ( char * ) & or , 1 , 0 )"		325326	1					
ANR	325556	CallExpression	"zend_string_init ( ( char * ) & or , 1 , 0 )"		325326	0					
ANR	325557	Callee	zend_string_init		325326	0					
ANR	325558	Identifier	zend_string_init		325326	0					
ANR	325559	ArgumentList	( char * ) & or		325326	1					
ANR	325560	Argument	( char * ) & or		325326	0					
ANR	325561	CastExpression	( char * ) & or		325326	0					
ANR	325562	CastTarget	char *		325326	0					
ANR	325563	UnaryOperationExpression	& or		325326	1					
ANR	325564	UnaryOperator	&		325326	0					
ANR	325565	Identifier	or		325326	1					
ANR	325566	Argument	1		325326	1					
ANR	325567	PrimaryExpression	1		325326	0					
ANR	325568	Argument	0		325326	2					
ANR	325569	PrimaryExpression	0		325326	0					
ANR	325570	ReturnStatement	return SUCCESS ;	1355:4:34346:34360	325326	2	True				
ANR	325571	Identifier	SUCCESS		325326	0					
ANR	325572	ExpressionStatement	longer = op1	1357:3:34370:34382	325326	1	True				
ANR	325573	AssignmentExpression	longer = op1		325326	0		=			
ANR	325574	Identifier	longer		325326	0					
ANR	325575	Identifier	op1		325326	1					
ANR	325576	ExpressionStatement	shorter = op2	1358:3:34387:34400	325326	2	True				
ANR	325577	AssignmentExpression	shorter = op2		325326	0		=			
ANR	325578	Identifier	shorter		325326	0					
ANR	325579	Identifier	op2		325326	1					
ANR	325580	ElseStatement	else		325326	0					
ANR	325581	CompoundStatement		29:9:809:809	325326	0					
ANR	325582	ExpressionStatement	longer = op2	1360:3:34416:34428	325326	0	True				
ANR	325583	AssignmentExpression	longer = op2		325326	0		=			
ANR	325584	Identifier	longer		325326	0					
ANR	325585	Identifier	op2		325326	1					
ANR	325586	ExpressionStatement	shorter = op1	1361:3:34433:34446	325326	1	True				
ANR	325587	AssignmentExpression	shorter = op1		325326	0		=			
ANR	325588	Identifier	shorter		325326	0					
ANR	325589	Identifier	op1		325326	1					
ANR	325590	ExpressionStatement	"str = zend_string_alloc ( Z_STRLEN_P ( longer ) , 0 )"	1364:2:34455:34501	325326	4	True				
ANR	325591	AssignmentExpression	"str = zend_string_alloc ( Z_STRLEN_P ( longer ) , 0 )"		325326	0		=			
ANR	325592	Identifier	str		325326	0					
ANR	325593	CallExpression	"zend_string_alloc ( Z_STRLEN_P ( longer ) , 0 )"		325326	1					
ANR	325594	Callee	zend_string_alloc		325326	0					
ANR	325595	Identifier	zend_string_alloc		325326	0					
ANR	325596	ArgumentList	Z_STRLEN_P ( longer )		325326	1					
ANR	325597	Argument	Z_STRLEN_P ( longer )		325326	0					
ANR	325598	CallExpression	Z_STRLEN_P ( longer )		325326	0					
ANR	325599	Callee	Z_STRLEN_P		325326	0					
ANR	325600	Identifier	Z_STRLEN_P		325326	0					
ANR	325601	ArgumentList	longer		325326	1					
ANR	325602	Argument	longer		325326	0					
ANR	325603	Identifier	longer		325326	0					
ANR	325604	Argument	0		325326	1					
ANR	325605	PrimaryExpression	0		325326	0					
ANR	325606	ForStatement	for ( i = 0 ; i < Z_STRLEN_P ( shorter ) ; i ++ )		325326	5					
ANR	325607	ForInit	i = 0 ;	1365:7:34510:34515	325326	0	True				
ANR	325608	AssignmentExpression	i = 0		325326	0		=			
ANR	325609	Identifier	i		325326	0					
ANR	325610	PrimaryExpression	0		325326	1					
ANR	325611	Condition	i < Z_STRLEN_P ( shorter )	1365:14:34517:34539	325326	1	True				
ANR	325612	RelationalExpression	i < Z_STRLEN_P ( shorter )		325326	0		<			
ANR	325613	Identifier	i		325326	0					
ANR	325614	CallExpression	Z_STRLEN_P ( shorter )		325326	1					
ANR	325615	Callee	Z_STRLEN_P		325326	0					
ANR	325616	Identifier	Z_STRLEN_P		325326	0					
ANR	325617	ArgumentList	shorter		325326	1					
ANR	325618	Argument	shorter		325326	0					
ANR	325619	Identifier	shorter		325326	0					
ANR	325620	PostIncDecOperationExpression	i ++	1365:39:34542:34544	325326	2	True				
ANR	325621	Identifier	i		325326	0					
ANR	325622	IncDec	++		325326	1					
ANR	325623	CompoundStatement		35:44:945:945	325326	3					
ANR	325624	ExpressionStatement	ZSTR_VAL ( str ) [ i ] = Z_STRVAL_P ( longer ) [ i ] | Z_STRVAL_P ( shorter ) [ i ]	1366:3:34552:34617	325326	0	True				
ANR	325625	AssignmentExpression	ZSTR_VAL ( str ) [ i ] = Z_STRVAL_P ( longer ) [ i ] | Z_STRVAL_P ( shorter ) [ i ]		325326	0		=			
ANR	325626	ArrayIndexing	ZSTR_VAL ( str ) [ i ]		325326	0					
ANR	325627	CallExpression	ZSTR_VAL ( str )		325326	0					
ANR	325628	Callee	ZSTR_VAL		325326	0					
ANR	325629	Identifier	ZSTR_VAL		325326	0					
ANR	325630	ArgumentList	str		325326	1					
ANR	325631	Argument	str		325326	0					
ANR	325632	Identifier	str		325326	0					
ANR	325633	Identifier	i		325326	1					
ANR	325634	InclusiveOrExpression	Z_STRVAL_P ( longer ) [ i ] | Z_STRVAL_P ( shorter ) [ i ]		325326	1		|			
ANR	325635	ArrayIndexing	Z_STRVAL_P ( longer ) [ i ]		325326	0					
ANR	325636	CallExpression	Z_STRVAL_P ( longer )		325326	0					
ANR	325637	Callee	Z_STRVAL_P		325326	0					
ANR	325638	Identifier	Z_STRVAL_P		325326	0					
ANR	325639	ArgumentList	longer		325326	1					
ANR	325640	Argument	longer		325326	0					
ANR	325641	Identifier	longer		325326	0					
ANR	325642	Identifier	i		325326	1					
ANR	325643	ArrayIndexing	Z_STRVAL_P ( shorter ) [ i ]		325326	1					
ANR	325644	CallExpression	Z_STRVAL_P ( shorter )		325326	0					
ANR	325645	Callee	Z_STRVAL_P		325326	0					
ANR	325646	Identifier	Z_STRVAL_P		325326	0					
ANR	325647	ArgumentList	shorter		325326	1					
ANR	325648	Argument	shorter		325326	0					
ANR	325649	Identifier	shorter		325326	0					
ANR	325650	Identifier	i		325326	1					
ANR	325651	ExpressionStatement	"memcpy ( ZSTR_VAL ( str ) + i , Z_STRVAL_P ( longer ) + i , Z_STRLEN_P ( longer ) - i + 1 )"	1368:2:34625:34702	325326	6	True				
ANR	325652	CallExpression	"memcpy ( ZSTR_VAL ( str ) + i , Z_STRVAL_P ( longer ) + i , Z_STRLEN_P ( longer ) - i + 1 )"		325326	0					
ANR	325653	Callee	memcpy		325326	0					
ANR	325654	Identifier	memcpy		325326	0					
ANR	325655	ArgumentList	ZSTR_VAL ( str ) + i		325326	1					
ANR	325656	Argument	ZSTR_VAL ( str ) + i		325326	0					
ANR	325657	AdditiveExpression	ZSTR_VAL ( str ) + i		325326	0		+			
ANR	325658	CallExpression	ZSTR_VAL ( str )		325326	0					
ANR	325659	Callee	ZSTR_VAL		325326	0					
ANR	325660	Identifier	ZSTR_VAL		325326	0					
ANR	325661	ArgumentList	str		325326	1					
ANR	325662	Argument	str		325326	0					
ANR	325663	Identifier	str		325326	0					
ANR	325664	Identifier	i		325326	1					
ANR	325665	Argument	Z_STRVAL_P ( longer ) + i		325326	1					
ANR	325666	AdditiveExpression	Z_STRVAL_P ( longer ) + i		325326	0		+			
ANR	325667	CallExpression	Z_STRVAL_P ( longer )		325326	0					
ANR	325668	Callee	Z_STRVAL_P		325326	0					
ANR	325669	Identifier	Z_STRVAL_P		325326	0					
ANR	325670	ArgumentList	longer		325326	1					
ANR	325671	Argument	longer		325326	0					
ANR	325672	Identifier	longer		325326	0					
ANR	325673	Identifier	i		325326	1					
ANR	325674	Argument	Z_STRLEN_P ( longer ) - i + 1		325326	2					
ANR	325675	AdditiveExpression	Z_STRLEN_P ( longer ) - i + 1		325326	0		-			
ANR	325676	CallExpression	Z_STRLEN_P ( longer )		325326	0					
ANR	325677	Callee	Z_STRLEN_P		325326	0					
ANR	325678	Identifier	Z_STRLEN_P		325326	0					
ANR	325679	ArgumentList	longer		325326	1					
ANR	325680	Argument	longer		325326	0					
ANR	325681	Identifier	longer		325326	0					
ANR	325682	AdditiveExpression	i + 1		325326	1		+			
ANR	325683	Identifier	i		325326	0					
ANR	325684	PrimaryExpression	1		325326	1					
ANR	325685	IfStatement	if ( result == op1 )		325326	7					
ANR	325686	Condition	result == op1	1369:6:34710:34720	325326	0	True				
ANR	325687	EqualityExpression	result == op1		325326	0		==			
ANR	325688	Identifier	result		325326	0					
ANR	325689	Identifier	op1		325326	1					
ANR	325690	CompoundStatement		39:19:1121:1121	325326	1					
ANR	325691	ExpressionStatement	zend_string_release ( Z_STR_P ( result ) )	1370:3:34728:34764	325326	0	True				
ANR	325692	CallExpression	zend_string_release ( Z_STR_P ( result ) )		325326	0					
ANR	325693	Callee	zend_string_release		325326	0					
ANR	325694	Identifier	zend_string_release		325326	0					
ANR	325695	ArgumentList	Z_STR_P ( result )		325326	1					
ANR	325696	Argument	Z_STR_P ( result )		325326	0					
ANR	325697	CallExpression	Z_STR_P ( result )		325326	0					
ANR	325698	Callee	Z_STR_P		325326	0					
ANR	325699	Identifier	Z_STR_P		325326	0					
ANR	325700	ArgumentList	result		325326	1					
ANR	325701	Argument	result		325326	0					
ANR	325702	Identifier	result		325326	0					
ANR	325703	ExpressionStatement	"ZVAL_NEW_STR ( result , str )"	1372:2:34772:34797	325326	8	True				
ANR	325704	CallExpression	"ZVAL_NEW_STR ( result , str )"		325326	0					
ANR	325705	Callee	ZVAL_NEW_STR		325326	0					
ANR	325706	Identifier	ZVAL_NEW_STR		325326	0					
ANR	325707	ArgumentList	result		325326	1					
ANR	325708	Argument	result		325326	0					
ANR	325709	Identifier	result		325326	0					
ANR	325710	Argument	str		325326	1					
ANR	325711	Identifier	str		325326	0					
ANR	325712	ReturnStatement	return SUCCESS ;	1373:2:34801:34815	325326	9	True				
ANR	325713	Identifier	SUCCESS		325326	0					
ANR	325714	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( op1 ) != IS_LONG ) )		325326	5					
ANR	325715	Condition	UNEXPECTED ( Z_TYPE_P ( op1 ) != IS_LONG )	1376:5:34826:34861	325326	0	True				
ANR	325716	CallExpression	UNEXPECTED ( Z_TYPE_P ( op1 ) != IS_LONG )		325326	0					
ANR	325717	Callee	UNEXPECTED		325326	0					
ANR	325718	Identifier	UNEXPECTED		325326	0					
ANR	325719	ArgumentList	Z_TYPE_P ( op1 ) != IS_LONG		325326	1					
ANR	325720	Argument	Z_TYPE_P ( op1 ) != IS_LONG		325326	0					
ANR	325721	EqualityExpression	Z_TYPE_P ( op1 ) != IS_LONG		325326	0		!=			
ANR	325722	CallExpression	Z_TYPE_P ( op1 )		325326	0					
ANR	325723	Callee	Z_TYPE_P		325326	0					
ANR	325724	Identifier	Z_TYPE_P		325326	0					
ANR	325725	ArgumentList	op1		325326	1					
ANR	325726	Argument	op1		325326	0					
ANR	325727	Identifier	op1		325326	0					
ANR	325728	Identifier	IS_LONG		325326	1					
ANR	325729	CompoundStatement		46:43:1262:1262	325326	1					
ANR	325730	ExpressionStatement	"ZEND_TRY_BINARY_OP1_OBJECT_OPERATION ( ZEND_BW_OR , bitwise_or_function )"	1377:2:34868:34937	325326	0	True				
ANR	325731	CallExpression	"ZEND_TRY_BINARY_OP1_OBJECT_OPERATION ( ZEND_BW_OR , bitwise_or_function )"		325326	0					
ANR	325732	Callee	ZEND_TRY_BINARY_OP1_OBJECT_OPERATION		325326	0					
ANR	325733	Identifier	ZEND_TRY_BINARY_OP1_OBJECT_OPERATION		325326	0					
ANR	325734	ArgumentList	ZEND_BW_OR		325326	1					
ANR	325735	Argument	ZEND_BW_OR		325326	0					
ANR	325736	Identifier	ZEND_BW_OR		325326	0					
ANR	325737	Argument	bitwise_or_function		325326	1					
ANR	325738	Identifier	bitwise_or_function		325326	0					
ANR	325739	ExpressionStatement	op1_lval = _zval_get_long_func ( op1 )	1378:2:34941:34976	325326	1	True				
ANR	325740	AssignmentExpression	op1_lval = _zval_get_long_func ( op1 )		325326	0		=			
ANR	325741	Identifier	op1_lval		325326	0					
ANR	325742	CallExpression	_zval_get_long_func ( op1 )		325326	1					
ANR	325743	Callee	_zval_get_long_func		325326	0					
ANR	325744	Identifier	_zval_get_long_func		325326	0					
ANR	325745	ArgumentList	op1		325326	1					
ANR	325746	Argument	op1		325326	0					
ANR	325747	Identifier	op1		325326	0					
ANR	325748	ElseStatement	else		325326	0					
ANR	325749	CompoundStatement		49:8:1384:1384	325326	0					
ANR	325750	ExpressionStatement	op1_lval = Z_LVAL_P ( op1 )	1380:2:34990:35014	325326	0	True				
ANR	325751	AssignmentExpression	op1_lval = Z_LVAL_P ( op1 )		325326	0		=			
ANR	325752	Identifier	op1_lval		325326	0					
ANR	325753	CallExpression	Z_LVAL_P ( op1 )		325326	1					
ANR	325754	Callee	Z_LVAL_P		325326	0					
ANR	325755	Identifier	Z_LVAL_P		325326	0					
ANR	325756	ArgumentList	op1		325326	1					
ANR	325757	Argument	op1		325326	0					
ANR	325758	Identifier	op1		325326	0					
ANR	325759	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( op2 ) != IS_LONG ) )		325326	6					
ANR	325760	Condition	UNEXPECTED ( Z_TYPE_P ( op2 ) != IS_LONG )	1382:5:35024:35059	325326	0	True				
ANR	325761	CallExpression	UNEXPECTED ( Z_TYPE_P ( op2 ) != IS_LONG )		325326	0					
ANR	325762	Callee	UNEXPECTED		325326	0					
ANR	325763	Identifier	UNEXPECTED		325326	0					
ANR	325764	ArgumentList	Z_TYPE_P ( op2 ) != IS_LONG		325326	1					
ANR	325765	Argument	Z_TYPE_P ( op2 ) != IS_LONG		325326	0					
ANR	325766	EqualityExpression	Z_TYPE_P ( op2 ) != IS_LONG		325326	0		!=			
ANR	325767	CallExpression	Z_TYPE_P ( op2 )		325326	0					
ANR	325768	Callee	Z_TYPE_P		325326	0					
ANR	325769	Identifier	Z_TYPE_P		325326	0					
ANR	325770	ArgumentList	op2		325326	1					
ANR	325771	Argument	op2		325326	0					
ANR	325772	Identifier	op2		325326	0					
ANR	325773	Identifier	IS_LONG		325326	1					
ANR	325774	CompoundStatement		52:43:1460:1460	325326	1					
ANR	325775	ExpressionStatement	ZEND_TRY_BINARY_OP2_OBJECT_OPERATION ( ZEND_BW_OR )	1383:2:35066:35114	325326	0	True				
ANR	325776	CallExpression	ZEND_TRY_BINARY_OP2_OBJECT_OPERATION ( ZEND_BW_OR )		325326	0					
ANR	325777	Callee	ZEND_TRY_BINARY_OP2_OBJECT_OPERATION		325326	0					
ANR	325778	Identifier	ZEND_TRY_BINARY_OP2_OBJECT_OPERATION		325326	0					
ANR	325779	ArgumentList	ZEND_BW_OR		325326	1					
ANR	325780	Argument	ZEND_BW_OR		325326	0					
ANR	325781	Identifier	ZEND_BW_OR		325326	0					
ANR	325782	ExpressionStatement	op2_lval = _zval_get_long_func ( op2 )	1384:2:35118:35153	325326	1	True				
ANR	325783	AssignmentExpression	op2_lval = _zval_get_long_func ( op2 )		325326	0		=			
ANR	325784	Identifier	op2_lval		325326	0					
ANR	325785	CallExpression	_zval_get_long_func ( op2 )		325326	1					
ANR	325786	Callee	_zval_get_long_func		325326	0					
ANR	325787	Identifier	_zval_get_long_func		325326	0					
ANR	325788	ArgumentList	op2		325326	1					
ANR	325789	Argument	op2		325326	0					
ANR	325790	Identifier	op2		325326	0					
ANR	325791	ElseStatement	else		325326	0					
ANR	325792	CompoundStatement		55:8:1561:1561	325326	0					
ANR	325793	ExpressionStatement	op2_lval = Z_LVAL_P ( op2 )	1386:2:35167:35191	325326	0	True				
ANR	325794	AssignmentExpression	op2_lval = Z_LVAL_P ( op2 )		325326	0		=			
ANR	325795	Identifier	op2_lval		325326	0					
ANR	325796	CallExpression	Z_LVAL_P ( op2 )		325326	1					
ANR	325797	Callee	Z_LVAL_P		325326	0					
ANR	325798	Identifier	Z_LVAL_P		325326	0					
ANR	325799	ArgumentList	op2		325326	1					
ANR	325800	Argument	op2		325326	0					
ANR	325801	Identifier	op2		325326	0					
ANR	325802	IfStatement	if ( op1 == result )		325326	7					
ANR	325803	Condition	op1 == result	1389:5:35202:35214	325326	0	True				
ANR	325804	EqualityExpression	op1 == result		325326	0		==			
ANR	325805	Identifier	op1		325326	0					
ANR	325806	Identifier	result		325326	1					
ANR	325807	CompoundStatement		59:20:1615:1615	325326	1					
ANR	325808	ExpressionStatement	zval_dtor ( result )	1390:2:35221:35238	325326	0	True				
ANR	325809	CallExpression	zval_dtor ( result )		325326	0					
ANR	325810	Callee	zval_dtor		325326	0					
ANR	325811	Identifier	zval_dtor		325326	0					
ANR	325812	ArgumentList	result		325326	1					
ANR	325813	Argument	result		325326	0					
ANR	325814	Identifier	result		325326	0					
ANR	325815	ExpressionStatement	"ZVAL_LONG ( result , op1_lval | op2_lval )"	1392:1:35244:35282	325326	8	True				
ANR	325816	CallExpression	"ZVAL_LONG ( result , op1_lval | op2_lval )"		325326	0					
ANR	325817	Callee	ZVAL_LONG		325326	0					
ANR	325818	Identifier	ZVAL_LONG		325326	0					
ANR	325819	ArgumentList	result		325326	1					
ANR	325820	Argument	result		325326	0					
ANR	325821	Identifier	result		325326	0					
ANR	325822	Argument	op1_lval | op2_lval		325326	1					
ANR	325823	InclusiveOrExpression	op1_lval | op2_lval		325326	0		|			
ANR	325824	Identifier	op1_lval		325326	0					
ANR	325825	Identifier	op2_lval		325326	1					
ANR	325826	ReturnStatement	return SUCCESS ;	1393:1:35285:35299	325326	9	True				
ANR	325827	Identifier	SUCCESS		325326	0					
ANR	325828	ReturnType	ZEND_API int ZEND_FASTCALL		325326	1					
ANR	325829	Identifier	bitwise_or_function		325326	2					
ANR	325830	ParameterList	"zval * result , zval * op1 , zval * op2"		325326	3					
ANR	325831	Parameter	zval * result	1330:47:33555:33566	325326	0	True				
ANR	325832	ParameterType	zval *		325326	0					
ANR	325833	Identifier	result		325326	1					
ANR	325834	Parameter	zval * op1	1330:61:33569:33577	325326	1	True				
ANR	325835	ParameterType	zval *		325326	0					
ANR	325836	Identifier	op1		325326	1					
ANR	325837	Parameter	zval * op2	1330:72:33580:33588	325326	2	True				
ANR	325838	ParameterType	zval *		325326	0					
ANR	325839	Identifier	op2		325326	1					
ANR	325840	CFGEntryNode	ENTRY		325326		True				
ANR	325841	CFGExitNode	EXIT		325326		True				
ANR	325842	Symbol	bitwise_or_function		325326						
ANR	325843	Symbol	ZEND_BW_OR		325326						
ANR	325844	Symbol	op1_lval		325326						
ANR	325845	Symbol	* CG		325326						
ANR	325846	Symbol	* or		325326						
ANR	325847	Symbol	* Z_STRVAL_P ( op2 )		325326						
ANR	325848	Symbol	& or		325326						
ANR	325849	Symbol	* Z_STRVAL_P ( op1 )		325326						
ANR	325850	Symbol	one_char_string		325326						
ANR	325851	Symbol	result		325326						
ANR	325852	Symbol	UNEXPECTED		325326						
ANR	325853	Symbol	zend_string_init		325326						
ANR	325854	Symbol	IS_LONG		325326						
ANR	325855	Symbol	Z_STRLEN_P		325326						
ANR	325856	Symbol	IS_STRING		325326						
ANR	325857	Symbol	* Z_STRVAL_P		325326						
ANR	325858	Symbol	op2_lval		325326						
ANR	325859	Symbol	shorter		325326						
ANR	325860	Symbol	* ZSTR_VAL		325326						
ANR	325861	Symbol	zend_string_alloc		325326						
ANR	325862	Symbol	SUCCESS		325326						
ANR	325863	Symbol	or		325326						
ANR	325864	Symbol	CG		325326						
ANR	325865	Symbol	i		325326						
ANR	325866	Symbol	Z_TYPE_P		325326						
ANR	325867	Symbol	Z_STRVAL_P		325326						
ANR	325868	Symbol	Z_LVAL_P		325326						
ANR	325869	Symbol	ZSTR_VAL		325326						
ANR	325870	Symbol	op2		325326						
ANR	325871	Symbol	str		325326						
ANR	325872	Symbol	op1		325326						
ANR	325873	Symbol	longer		325326						
ANR	325874	Symbol	* i		325326						
ANR	325875	Symbol	_zval_get_long_func		325326						
ANR	325876	Symbol	Z_STR_P		325326						
ANR	325877	Symbol	EXPECTED		325326						
ANR	325878	Function	bitwise_and_function	1397:0:35314:37049							
ANR	325879	FunctionDef	"bitwise_and_function (zval * result , zval * op1 , zval * op2)"		325878	0					
ANR	325880	CompoundStatement		1398:0:35408:37049	325878	0					
ANR	325881	IdentifierDeclStatement	"zend_long op1_lval , op2_lval ;"	1399:1:35411:35439	325878	0	True				
ANR	325882	IdentifierDecl	op1_lval		325878	0					
ANR	325883	IdentifierDeclType	zend_long		325878	0					
ANR	325884	Identifier	op1_lval		325878	1					
ANR	325885	IdentifierDecl	op2_lval		325878	1					
ANR	325886	IdentifierDeclType	zend_long		325878	0					
ANR	325887	Identifier	op2_lval		325878	1					
ANR	325888	IfStatement	if ( EXPECTED ( Z_TYPE_P ( op1 ) == IS_LONG ) && EXPECTED ( Z_TYPE_P ( op2 ) == IS_LONG ) )		325878	1					
ANR	325889	Condition	EXPECTED ( Z_TYPE_P ( op1 ) == IS_LONG ) && EXPECTED ( Z_TYPE_P ( op2 ) == IS_LONG )	1401:5:35447:35518	325878	0	True				
ANR	325890	AndExpression	EXPECTED ( Z_TYPE_P ( op1 ) == IS_LONG ) && EXPECTED ( Z_TYPE_P ( op2 ) == IS_LONG )		325878	0		&&			
ANR	325891	CallExpression	EXPECTED ( Z_TYPE_P ( op1 ) == IS_LONG )		325878	0					
ANR	325892	Callee	EXPECTED		325878	0					
ANR	325893	Identifier	EXPECTED		325878	0					
ANR	325894	ArgumentList	Z_TYPE_P ( op1 ) == IS_LONG		325878	1					
ANR	325895	Argument	Z_TYPE_P ( op1 ) == IS_LONG		325878	0					
ANR	325896	EqualityExpression	Z_TYPE_P ( op1 ) == IS_LONG		325878	0		==			
ANR	325897	CallExpression	Z_TYPE_P ( op1 )		325878	0					
ANR	325898	Callee	Z_TYPE_P		325878	0					
ANR	325899	Identifier	Z_TYPE_P		325878	0					
ANR	325900	ArgumentList	op1		325878	1					
ANR	325901	Argument	op1		325878	0					
ANR	325902	Identifier	op1		325878	0					
ANR	325903	Identifier	IS_LONG		325878	1					
ANR	325904	CallExpression	EXPECTED ( Z_TYPE_P ( op2 ) == IS_LONG )		325878	1					
ANR	325905	Callee	EXPECTED		325878	0					
ANR	325906	Identifier	EXPECTED		325878	0					
ANR	325907	ArgumentList	Z_TYPE_P ( op2 ) == IS_LONG		325878	1					
ANR	325908	Argument	Z_TYPE_P ( op2 ) == IS_LONG		325878	0					
ANR	325909	EqualityExpression	Z_TYPE_P ( op2 ) == IS_LONG		325878	0		==			
ANR	325910	CallExpression	Z_TYPE_P ( op2 )		325878	0					
ANR	325911	Callee	Z_TYPE_P		325878	0					
ANR	325912	Identifier	Z_TYPE_P		325878	0					
ANR	325913	ArgumentList	op2		325878	1					
ANR	325914	Argument	op2		325878	0					
ANR	325915	Identifier	op2		325878	0					
ANR	325916	Identifier	IS_LONG		325878	1					
ANR	325917	CompoundStatement		4:79:112:112	325878	1					
ANR	325918	ExpressionStatement	"ZVAL_LONG ( result , Z_LVAL_P ( op1 ) & Z_LVAL_P ( op2 ) )"	1402:2:35525:35573	325878	0	True				
ANR	325919	CallExpression	"ZVAL_LONG ( result , Z_LVAL_P ( op1 ) & Z_LVAL_P ( op2 ) )"		325878	0					
ANR	325920	Callee	ZVAL_LONG		325878	0					
ANR	325921	Identifier	ZVAL_LONG		325878	0					
ANR	325922	ArgumentList	result		325878	1					
ANR	325923	Argument	result		325878	0					
ANR	325924	Identifier	result		325878	0					
ANR	325925	Argument	Z_LVAL_P ( op1 ) & Z_LVAL_P ( op2 )		325878	1					
ANR	325926	BitAndExpression	Z_LVAL_P ( op1 ) & Z_LVAL_P ( op2 )		325878	0		&			
ANR	325927	CallExpression	Z_LVAL_P ( op1 )		325878	0					
ANR	325928	Callee	Z_LVAL_P		325878	0					
ANR	325929	Identifier	Z_LVAL_P		325878	0					
ANR	325930	ArgumentList	op1		325878	1					
ANR	325931	Argument	op1		325878	0					
ANR	325932	Identifier	op1		325878	0					
ANR	325933	CallExpression	Z_LVAL_P ( op2 )		325878	1					
ANR	325934	Callee	Z_LVAL_P		325878	0					
ANR	325935	Identifier	Z_LVAL_P		325878	0					
ANR	325936	ArgumentList	op2		325878	1					
ANR	325937	Argument	op2		325878	0					
ANR	325938	Identifier	op2		325878	0					
ANR	325939	ReturnStatement	return SUCCESS ;	1403:2:35577:35591	325878	1	True				
ANR	325940	Identifier	SUCCESS		325878	0					
ANR	325941	ExpressionStatement	ZVAL_DEREF ( op1 )	1406:1:35598:35613	325878	2	True				
ANR	325942	CallExpression	ZVAL_DEREF ( op1 )		325878	0					
ANR	325943	Callee	ZVAL_DEREF		325878	0					
ANR	325944	Identifier	ZVAL_DEREF		325878	0					
ANR	325945	ArgumentList	op1		325878	1					
ANR	325946	Argument	op1		325878	0					
ANR	325947	Identifier	op1		325878	0					
ANR	325948	ExpressionStatement	ZVAL_DEREF ( op2 )	1407:1:35616:35631	325878	3	True				
ANR	325949	CallExpression	ZVAL_DEREF ( op2 )		325878	0					
ANR	325950	Callee	ZVAL_DEREF		325878	0					
ANR	325951	Identifier	ZVAL_DEREF		325878	0					
ANR	325952	ArgumentList	op2		325878	1					
ANR	325953	Argument	op2		325878	0					
ANR	325954	Identifier	op2		325878	0					
ANR	325955	IfStatement	if ( Z_TYPE_P ( op1 ) == IS_STRING && Z_TYPE_P ( op2 ) == IS_STRING )		325878	4					
ANR	325956	Condition	Z_TYPE_P ( op1 ) == IS_STRING && Z_TYPE_P ( op2 ) == IS_STRING	1409:5:35639:35694	325878	0	True				
ANR	325957	AndExpression	Z_TYPE_P ( op1 ) == IS_STRING && Z_TYPE_P ( op2 ) == IS_STRING		325878	0		&&			
ANR	325958	EqualityExpression	Z_TYPE_P ( op1 ) == IS_STRING		325878	0		==			
ANR	325959	CallExpression	Z_TYPE_P ( op1 )		325878	0					
ANR	325960	Callee	Z_TYPE_P		325878	0					
ANR	325961	Identifier	Z_TYPE_P		325878	0					
ANR	325962	ArgumentList	op1		325878	1					
ANR	325963	Argument	op1		325878	0					
ANR	325964	Identifier	op1		325878	0					
ANR	325965	Identifier	IS_STRING		325878	1					
ANR	325966	EqualityExpression	Z_TYPE_P ( op2 ) == IS_STRING		325878	1		==			
ANR	325967	CallExpression	Z_TYPE_P ( op2 )		325878	0					
ANR	325968	Callee	Z_TYPE_P		325878	0					
ANR	325969	Identifier	Z_TYPE_P		325878	0					
ANR	325970	ArgumentList	op2		325878	1					
ANR	325971	Argument	op2		325878	0					
ANR	325972	Identifier	op2		325878	0					
ANR	325973	Identifier	IS_STRING		325878	1					
ANR	325974	CompoundStatement		15:2:338:346	325878	1					
ANR	325975	IdentifierDeclStatement	"zval * longer , * shorter ;"	1410:2:35701:35723	325878	0	True				
ANR	325976	IdentifierDecl	* longer		325878	0					
ANR	325977	IdentifierDeclType	zval *		325878	0					
ANR	325978	Identifier	longer		325878	1					
ANR	325979	IdentifierDecl	* shorter		325878	1					
ANR	325980	IdentifierDeclType	zval *		325878	0					
ANR	325981	Identifier	shorter		325878	1					
ANR	325982	IdentifierDeclStatement	zend_string * str ;	1411:2:35727:35743	325878	1	True				
ANR	325983	IdentifierDecl	* str		325878	0					
ANR	325984	IdentifierDeclType	zend_string *		325878	0					
ANR	325985	Identifier	str		325878	1					
ANR	325986	IdentifierDeclStatement	size_t i ;	1412:2:35747:35755	325878	2	True				
ANR	325987	IdentifierDecl	i		325878	0					
ANR	325988	IdentifierDeclType	size_t		325878	0					
ANR	325989	Identifier	i		325878	1					
ANR	325990	IfStatement	if ( EXPECTED ( Z_STRLEN_P ( op1 ) >= Z_STRLEN_P ( op2 ) ) )		325878	3					
ANR	325991	Condition	EXPECTED ( Z_STRLEN_P ( op1 ) >= Z_STRLEN_P ( op2 ) )	1414:6:35764:35807	325878	0	True				
ANR	325992	CallExpression	EXPECTED ( Z_STRLEN_P ( op1 ) >= Z_STRLEN_P ( op2 ) )		325878	0					
ANR	325993	Callee	EXPECTED		325878	0					
ANR	325994	Identifier	EXPECTED		325878	0					
ANR	325995	ArgumentList	Z_STRLEN_P ( op1 ) >= Z_STRLEN_P ( op2 )		325878	1					
ANR	325996	Argument	Z_STRLEN_P ( op1 ) >= Z_STRLEN_P ( op2 )		325878	0					
ANR	325997	RelationalExpression	Z_STRLEN_P ( op1 ) >= Z_STRLEN_P ( op2 )		325878	0		>=			
ANR	325998	CallExpression	Z_STRLEN_P ( op1 )		325878	0					
ANR	325999	Callee	Z_STRLEN_P		325878	0					
ANR	326000	Identifier	Z_STRLEN_P		325878	0					
ANR	326001	ArgumentList	op1		325878	1					
ANR	326002	Argument	op1		325878	0					
ANR	326003	Identifier	op1		325878	0					
ANR	326004	CallExpression	Z_STRLEN_P ( op2 )		325878	1					
ANR	326005	Callee	Z_STRLEN_P		325878	0					
ANR	326006	Identifier	Z_STRLEN_P		325878	0					
ANR	326007	ArgumentList	op2		325878	1					
ANR	326008	Argument	op2		325878	0					
ANR	326009	Identifier	op2		325878	0					
ANR	326010	CompoundStatement		17:52:401:401	325878	1					
ANR	326011	IfStatement	if ( EXPECTED ( Z_STRLEN_P ( op1 ) == Z_STRLEN_P ( op2 ) ) && Z_STRLEN_P ( op1 ) == 1 )		325878	0					
ANR	326012	Condition	EXPECTED ( Z_STRLEN_P ( op1 ) == Z_STRLEN_P ( op2 ) ) && Z_STRLEN_P ( op1 ) == 1	1415:7:35819:35886	325878	0	True				
ANR	326013	AndExpression	EXPECTED ( Z_STRLEN_P ( op1 ) == Z_STRLEN_P ( op2 ) ) && Z_STRLEN_P ( op1 ) == 1		325878	0		&&			
ANR	326014	CallExpression	EXPECTED ( Z_STRLEN_P ( op1 ) == Z_STRLEN_P ( op2 ) )		325878	0					
ANR	326015	Callee	EXPECTED		325878	0					
ANR	326016	Identifier	EXPECTED		325878	0					
ANR	326017	ArgumentList	Z_STRLEN_P ( op1 ) == Z_STRLEN_P ( op2 )		325878	1					
ANR	326018	Argument	Z_STRLEN_P ( op1 ) == Z_STRLEN_P ( op2 )		325878	0					
ANR	326019	EqualityExpression	Z_STRLEN_P ( op1 ) == Z_STRLEN_P ( op2 )		325878	0		==			
ANR	326020	CallExpression	Z_STRLEN_P ( op1 )		325878	0					
ANR	326021	Callee	Z_STRLEN_P		325878	0					
ANR	326022	Identifier	Z_STRLEN_P		325878	0					
ANR	326023	ArgumentList	op1		325878	1					
ANR	326024	Argument	op1		325878	0					
ANR	326025	Identifier	op1		325878	0					
ANR	326026	CallExpression	Z_STRLEN_P ( op2 )		325878	1					
ANR	326027	Callee	Z_STRLEN_P		325878	0					
ANR	326028	Identifier	Z_STRLEN_P		325878	0					
ANR	326029	ArgumentList	op2		325878	1					
ANR	326030	Argument	op2		325878	0					
ANR	326031	Identifier	op2		325878	0					
ANR	326032	EqualityExpression	Z_STRLEN_P ( op1 ) == 1		325878	1		==			
ANR	326033	CallExpression	Z_STRLEN_P ( op1 )		325878	0					
ANR	326034	Callee	Z_STRLEN_P		325878	0					
ANR	326035	Identifier	Z_STRLEN_P		325878	0					
ANR	326036	ArgumentList	op1		325878	1					
ANR	326037	Argument	op1		325878	0					
ANR	326038	Identifier	op1		325878	0					
ANR	326039	PrimaryExpression	1		325878	1					
ANR	326040	CompoundStatement		19:4:486:553	325878	1					
ANR	326041	IdentifierDeclStatement	zend_uchar and = ( zend_uchar ) ( * Z_STRVAL_P ( op1 ) & * Z_STRVAL_P ( op2 ) ) ;	1416:4:35895:35962	325878	0	True				
ANR	326042	IdentifierDecl	and = ( zend_uchar ) ( * Z_STRVAL_P ( op1 ) & * Z_STRVAL_P ( op2 ) )		325878	0					
ANR	326043	IdentifierDeclType	zend_uchar		325878	0					
ANR	326044	Identifier	and		325878	1					
ANR	326045	AssignmentExpression	and = ( zend_uchar ) ( * Z_STRVAL_P ( op1 ) & * Z_STRVAL_P ( op2 ) )		325878	2		=			
ANR	326046	Identifier	and		325878	0					
ANR	326047	CastExpression	( zend_uchar ) ( * Z_STRVAL_P ( op1 ) & * Z_STRVAL_P ( op2 ) )		325878	1					
ANR	326048	CastTarget	zend_uchar		325878	0					
ANR	326049	BitAndExpression	* Z_STRVAL_P ( op1 ) & * Z_STRVAL_P ( op2 )		325878	1		&			
ANR	326050	UnaryOperationExpression	* Z_STRVAL_P ( op1 )		325878	0					
ANR	326051	UnaryOperator	*		325878	0					
ANR	326052	CallExpression	Z_STRVAL_P ( op1 )		325878	1					
ANR	326053	Callee	Z_STRVAL_P		325878	0					
ANR	326054	Identifier	Z_STRVAL_P		325878	0					
ANR	326055	ArgumentList	op1		325878	1					
ANR	326056	Argument	op1		325878	0					
ANR	326057	Identifier	op1		325878	0					
ANR	326058	UnaryOperationExpression	* Z_STRVAL_P ( op2 )		325878	1					
ANR	326059	UnaryOperator	*		325878	0					
ANR	326060	CallExpression	Z_STRVAL_P ( op2 )		325878	1					
ANR	326061	Callee	Z_STRVAL_P		325878	0					
ANR	326062	Identifier	Z_STRVAL_P		325878	0					
ANR	326063	ArgumentList	op2		325878	1					
ANR	326064	Argument	op2		325878	0					
ANR	326065	Identifier	op2		325878	0					
ANR	326066	IfStatement	if ( CG ( one_char_string ) [ and ] )		325878	1					
ANR	326067	Condition	CG ( one_char_string ) [ and ]	1417:8:35972:35995	325878	0	True				
ANR	326068	ArrayIndexing	CG ( one_char_string ) [ and ]		325878	0					
ANR	326069	CallExpression	CG ( one_char_string )		325878	0					
ANR	326070	Callee	CG		325878	0					
ANR	326071	Identifier	CG		325878	0					
ANR	326072	ArgumentList	one_char_string		325878	1					
ANR	326073	Argument	one_char_string		325878	0					
ANR	326074	Identifier	one_char_string		325878	0					
ANR	326075	Identifier	and		325878	1					
ANR	326076	CompoundStatement		20:34:589:589	325878	1					
ANR	326077	ExpressionStatement	"ZVAL_INTERNED_STR ( result , CG ( one_char_string ) [ and ] )"	1418:5:36005:36056	325878	0	True				
ANR	326078	CallExpression	"ZVAL_INTERNED_STR ( result , CG ( one_char_string ) [ and ] )"		325878	0					
ANR	326079	Callee	ZVAL_INTERNED_STR		325878	0					
ANR	326080	Identifier	ZVAL_INTERNED_STR		325878	0					
ANR	326081	ArgumentList	result		325878	1					
ANR	326082	Argument	result		325878	0					
ANR	326083	Identifier	result		325878	0					
ANR	326084	Argument	CG ( one_char_string ) [ and ]		325878	1					
ANR	326085	ArrayIndexing	CG ( one_char_string ) [ and ]		325878	0					
ANR	326086	CallExpression	CG ( one_char_string )		325878	0					
ANR	326087	Callee	CG		325878	0					
ANR	326088	Identifier	CG		325878	0					
ANR	326089	ArgumentList	one_char_string		325878	1					
ANR	326090	Argument	one_char_string		325878	0					
ANR	326091	Identifier	one_char_string		325878	0					
ANR	326092	Identifier	and		325878	1					
ANR	326093	ElseStatement	else		325878	0					
ANR	326094	CompoundStatement		22:11:660:660	325878	0					
ANR	326095	ExpressionStatement	"ZVAL_NEW_STR ( result , zend_string_init ( ( char * ) & and , 1 , 0 ) )"	1420:5:36076:36135	325878	0	True				
ANR	326096	CallExpression	"ZVAL_NEW_STR ( result , zend_string_init ( ( char * ) & and , 1 , 0 ) )"		325878	0					
ANR	326097	Callee	ZVAL_NEW_STR		325878	0					
ANR	326098	Identifier	ZVAL_NEW_STR		325878	0					
ANR	326099	ArgumentList	result		325878	1					
ANR	326100	Argument	result		325878	0					
ANR	326101	Identifier	result		325878	0					
ANR	326102	Argument	"zend_string_init ( ( char * ) & and , 1 , 0 )"		325878	1					
ANR	326103	CallExpression	"zend_string_init ( ( char * ) & and , 1 , 0 )"		325878	0					
ANR	326104	Callee	zend_string_init		325878	0					
ANR	326105	Identifier	zend_string_init		325878	0					
ANR	326106	ArgumentList	( char * ) & and		325878	1					
ANR	326107	Argument	( char * ) & and		325878	0					
ANR	326108	CastExpression	( char * ) & and		325878	0					
ANR	326109	CastTarget	char *		325878	0					
ANR	326110	UnaryOperationExpression	& and		325878	1					
ANR	326111	UnaryOperator	&		325878	0					
ANR	326112	Identifier	and		325878	1					
ANR	326113	Argument	1		325878	1					
ANR	326114	PrimaryExpression	1		325878	0					
ANR	326115	Argument	0		325878	2					
ANR	326116	PrimaryExpression	0		325878	0					
ANR	326117	ReturnStatement	return SUCCESS ;	1422:4:36147:36161	325878	2	True				
ANR	326118	Identifier	SUCCESS		325878	0					
ANR	326119	ExpressionStatement	longer = op1	1424:3:36171:36183	325878	1	True				
ANR	326120	AssignmentExpression	longer = op1		325878	0		=			
ANR	326121	Identifier	longer		325878	0					
ANR	326122	Identifier	op1		325878	1					
ANR	326123	ExpressionStatement	shorter = op2	1425:3:36188:36201	325878	2	True				
ANR	326124	AssignmentExpression	shorter = op2		325878	0		=			
ANR	326125	Identifier	shorter		325878	0					
ANR	326126	Identifier	op2		325878	1					
ANR	326127	ElseStatement	else		325878	0					
ANR	326128	CompoundStatement		29:9:803:803	325878	0					
ANR	326129	ExpressionStatement	longer = op2	1427:3:36217:36229	325878	0	True				
ANR	326130	AssignmentExpression	longer = op2		325878	0		=			
ANR	326131	Identifier	longer		325878	0					
ANR	326132	Identifier	op2		325878	1					
ANR	326133	ExpressionStatement	shorter = op1	1428:3:36234:36247	325878	1	True				
ANR	326134	AssignmentExpression	shorter = op1		325878	0		=			
ANR	326135	Identifier	shorter		325878	0					
ANR	326136	Identifier	op1		325878	1					
ANR	326137	ExpressionStatement	"str = zend_string_alloc ( Z_STRLEN_P ( shorter ) , 0 )"	1431:2:36256:36303	325878	4	True				
ANR	326138	AssignmentExpression	"str = zend_string_alloc ( Z_STRLEN_P ( shorter ) , 0 )"		325878	0		=			
ANR	326139	Identifier	str		325878	0					
ANR	326140	CallExpression	"zend_string_alloc ( Z_STRLEN_P ( shorter ) , 0 )"		325878	1					
ANR	326141	Callee	zend_string_alloc		325878	0					
ANR	326142	Identifier	zend_string_alloc		325878	0					
ANR	326143	ArgumentList	Z_STRLEN_P ( shorter )		325878	1					
ANR	326144	Argument	Z_STRLEN_P ( shorter )		325878	0					
ANR	326145	CallExpression	Z_STRLEN_P ( shorter )		325878	0					
ANR	326146	Callee	Z_STRLEN_P		325878	0					
ANR	326147	Identifier	Z_STRLEN_P		325878	0					
ANR	326148	ArgumentList	shorter		325878	1					
ANR	326149	Argument	shorter		325878	0					
ANR	326150	Identifier	shorter		325878	0					
ANR	326151	Argument	0		325878	1					
ANR	326152	PrimaryExpression	0		325878	0					
ANR	326153	ForStatement	for ( i = 0 ; i < Z_STRLEN_P ( shorter ) ; i ++ )		325878	5					
ANR	326154	ForInit	i = 0 ;	1432:7:36312:36317	325878	0	True				
ANR	326155	AssignmentExpression	i = 0		325878	0		=			
ANR	326156	Identifier	i		325878	0					
ANR	326157	PrimaryExpression	0		325878	1					
ANR	326158	Condition	i < Z_STRLEN_P ( shorter )	1432:14:36319:36341	325878	1	True				
ANR	326159	RelationalExpression	i < Z_STRLEN_P ( shorter )		325878	0		<			
ANR	326160	Identifier	i		325878	0					
ANR	326161	CallExpression	Z_STRLEN_P ( shorter )		325878	1					
ANR	326162	Callee	Z_STRLEN_P		325878	0					
ANR	326163	Identifier	Z_STRLEN_P		325878	0					
ANR	326164	ArgumentList	shorter		325878	1					
ANR	326165	Argument	shorter		325878	0					
ANR	326166	Identifier	shorter		325878	0					
ANR	326167	PostIncDecOperationExpression	i ++	1432:39:36344:36346	325878	2	True				
ANR	326168	Identifier	i		325878	0					
ANR	326169	IncDec	++		325878	1					
ANR	326170	CompoundStatement		35:44:940:940	325878	3					
ANR	326171	ExpressionStatement	ZSTR_VAL ( str ) [ i ] = Z_STRVAL_P ( shorter ) [ i ] & Z_STRVAL_P ( longer ) [ i ]	1433:3:36354:36419	325878	0	True				
ANR	326172	AssignmentExpression	ZSTR_VAL ( str ) [ i ] = Z_STRVAL_P ( shorter ) [ i ] & Z_STRVAL_P ( longer ) [ i ]		325878	0		=			
ANR	326173	ArrayIndexing	ZSTR_VAL ( str ) [ i ]		325878	0					
ANR	326174	CallExpression	ZSTR_VAL ( str )		325878	0					
ANR	326175	Callee	ZSTR_VAL		325878	0					
ANR	326176	Identifier	ZSTR_VAL		325878	0					
ANR	326177	ArgumentList	str		325878	1					
ANR	326178	Argument	str		325878	0					
ANR	326179	Identifier	str		325878	0					
ANR	326180	Identifier	i		325878	1					
ANR	326181	BitAndExpression	Z_STRVAL_P ( shorter ) [ i ] & Z_STRVAL_P ( longer ) [ i ]		325878	1		&			
ANR	326182	ArrayIndexing	Z_STRVAL_P ( shorter ) [ i ]		325878	0					
ANR	326183	CallExpression	Z_STRVAL_P ( shorter )		325878	0					
ANR	326184	Callee	Z_STRVAL_P		325878	0					
ANR	326185	Identifier	Z_STRVAL_P		325878	0					
ANR	326186	ArgumentList	shorter		325878	1					
ANR	326187	Argument	shorter		325878	0					
ANR	326188	Identifier	shorter		325878	0					
ANR	326189	Identifier	i		325878	1					
ANR	326190	ArrayIndexing	Z_STRVAL_P ( longer ) [ i ]		325878	1					
ANR	326191	CallExpression	Z_STRVAL_P ( longer )		325878	0					
ANR	326192	Callee	Z_STRVAL_P		325878	0					
ANR	326193	Identifier	Z_STRVAL_P		325878	0					
ANR	326194	ArgumentList	longer		325878	1					
ANR	326195	Argument	longer		325878	0					
ANR	326196	Identifier	longer		325878	0					
ANR	326197	Identifier	i		325878	1					
ANR	326198	ExpressionStatement	ZSTR_VAL ( str ) [ i ] = 0	1435:2:36427:36447	325878	6	True				
ANR	326199	AssignmentExpression	ZSTR_VAL ( str ) [ i ] = 0		325878	0		=			
ANR	326200	ArrayIndexing	ZSTR_VAL ( str ) [ i ]		325878	0					
ANR	326201	CallExpression	ZSTR_VAL ( str )		325878	0					
ANR	326202	Callee	ZSTR_VAL		325878	0					
ANR	326203	Identifier	ZSTR_VAL		325878	0					
ANR	326204	ArgumentList	str		325878	1					
ANR	326205	Argument	str		325878	0					
ANR	326206	Identifier	str		325878	0					
ANR	326207	Identifier	i		325878	1					
ANR	326208	PrimaryExpression	0		325878	1					
ANR	326209	IfStatement	if ( result == op1 )		325878	7					
ANR	326210	Condition	result == op1	1436:6:36455:36465	325878	0	True				
ANR	326211	EqualityExpression	result == op1		325878	0		==			
ANR	326212	Identifier	result		325878	0					
ANR	326213	Identifier	op1		325878	1					
ANR	326214	CompoundStatement		39:19:1059:1059	325878	1					
ANR	326215	ExpressionStatement	zend_string_release ( Z_STR_P ( result ) )	1437:3:36473:36509	325878	0	True				
ANR	326216	CallExpression	zend_string_release ( Z_STR_P ( result ) )		325878	0					
ANR	326217	Callee	zend_string_release		325878	0					
ANR	326218	Identifier	zend_string_release		325878	0					
ANR	326219	ArgumentList	Z_STR_P ( result )		325878	1					
ANR	326220	Argument	Z_STR_P ( result )		325878	0					
ANR	326221	CallExpression	Z_STR_P ( result )		325878	0					
ANR	326222	Callee	Z_STR_P		325878	0					
ANR	326223	Identifier	Z_STR_P		325878	0					
ANR	326224	ArgumentList	result		325878	1					
ANR	326225	Argument	result		325878	0					
ANR	326226	Identifier	result		325878	0					
ANR	326227	ExpressionStatement	"ZVAL_NEW_STR ( result , str )"	1439:2:36517:36542	325878	8	True				
ANR	326228	CallExpression	"ZVAL_NEW_STR ( result , str )"		325878	0					
ANR	326229	Callee	ZVAL_NEW_STR		325878	0					
ANR	326230	Identifier	ZVAL_NEW_STR		325878	0					
ANR	326231	ArgumentList	result		325878	1					
ANR	326232	Argument	result		325878	0					
ANR	326233	Identifier	result		325878	0					
ANR	326234	Argument	str		325878	1					
ANR	326235	Identifier	str		325878	0					
ANR	326236	ReturnStatement	return SUCCESS ;	1440:2:36546:36560	325878	9	True				
ANR	326237	Identifier	SUCCESS		325878	0					
ANR	326238	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( op1 ) != IS_LONG ) )		325878	5					
ANR	326239	Condition	UNEXPECTED ( Z_TYPE_P ( op1 ) != IS_LONG )	1443:5:36571:36606	325878	0	True				
ANR	326240	CallExpression	UNEXPECTED ( Z_TYPE_P ( op1 ) != IS_LONG )		325878	0					
ANR	326241	Callee	UNEXPECTED		325878	0					
ANR	326242	Identifier	UNEXPECTED		325878	0					
ANR	326243	ArgumentList	Z_TYPE_P ( op1 ) != IS_LONG		325878	1					
ANR	326244	Argument	Z_TYPE_P ( op1 ) != IS_LONG		325878	0					
ANR	326245	EqualityExpression	Z_TYPE_P ( op1 ) != IS_LONG		325878	0		!=			
ANR	326246	CallExpression	Z_TYPE_P ( op1 )		325878	0					
ANR	326247	Callee	Z_TYPE_P		325878	0					
ANR	326248	Identifier	Z_TYPE_P		325878	0					
ANR	326249	ArgumentList	op1		325878	1					
ANR	326250	Argument	op1		325878	0					
ANR	326251	Identifier	op1		325878	0					
ANR	326252	Identifier	IS_LONG		325878	1					
ANR	326253	CompoundStatement		46:43:1200:1200	325878	1					
ANR	326254	ExpressionStatement	"ZEND_TRY_BINARY_OP1_OBJECT_OPERATION ( ZEND_BW_AND , bitwise_and_function )"	1444:2:36613:36684	325878	0	True				
ANR	326255	CallExpression	"ZEND_TRY_BINARY_OP1_OBJECT_OPERATION ( ZEND_BW_AND , bitwise_and_function )"		325878	0					
ANR	326256	Callee	ZEND_TRY_BINARY_OP1_OBJECT_OPERATION		325878	0					
ANR	326257	Identifier	ZEND_TRY_BINARY_OP1_OBJECT_OPERATION		325878	0					
ANR	326258	ArgumentList	ZEND_BW_AND		325878	1					
ANR	326259	Argument	ZEND_BW_AND		325878	0					
ANR	326260	Identifier	ZEND_BW_AND		325878	0					
ANR	326261	Argument	bitwise_and_function		325878	1					
ANR	326262	Identifier	bitwise_and_function		325878	0					
ANR	326263	ExpressionStatement	op1_lval = _zval_get_long_func ( op1 )	1445:2:36688:36723	325878	1	True				
ANR	326264	AssignmentExpression	op1_lval = _zval_get_long_func ( op1 )		325878	0		=			
ANR	326265	Identifier	op1_lval		325878	0					
ANR	326266	CallExpression	_zval_get_long_func ( op1 )		325878	1					
ANR	326267	Callee	_zval_get_long_func		325878	0					
ANR	326268	Identifier	_zval_get_long_func		325878	0					
ANR	326269	ArgumentList	op1		325878	1					
ANR	326270	Argument	op1		325878	0					
ANR	326271	Identifier	op1		325878	0					
ANR	326272	ElseStatement	else		325878	0					
ANR	326273	CompoundStatement		49:8:1324:1324	325878	0					
ANR	326274	ExpressionStatement	op1_lval = Z_LVAL_P ( op1 )	1447:2:36737:36761	325878	0	True				
ANR	326275	AssignmentExpression	op1_lval = Z_LVAL_P ( op1 )		325878	0		=			
ANR	326276	Identifier	op1_lval		325878	0					
ANR	326277	CallExpression	Z_LVAL_P ( op1 )		325878	1					
ANR	326278	Callee	Z_LVAL_P		325878	0					
ANR	326279	Identifier	Z_LVAL_P		325878	0					
ANR	326280	ArgumentList	op1		325878	1					
ANR	326281	Argument	op1		325878	0					
ANR	326282	Identifier	op1		325878	0					
ANR	326283	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( op2 ) != IS_LONG ) )		325878	6					
ANR	326284	Condition	UNEXPECTED ( Z_TYPE_P ( op2 ) != IS_LONG )	1449:5:36771:36806	325878	0	True				
ANR	326285	CallExpression	UNEXPECTED ( Z_TYPE_P ( op2 ) != IS_LONG )		325878	0					
ANR	326286	Callee	UNEXPECTED		325878	0					
ANR	326287	Identifier	UNEXPECTED		325878	0					
ANR	326288	ArgumentList	Z_TYPE_P ( op2 ) != IS_LONG		325878	1					
ANR	326289	Argument	Z_TYPE_P ( op2 ) != IS_LONG		325878	0					
ANR	326290	EqualityExpression	Z_TYPE_P ( op2 ) != IS_LONG		325878	0		!=			
ANR	326291	CallExpression	Z_TYPE_P ( op2 )		325878	0					
ANR	326292	Callee	Z_TYPE_P		325878	0					
ANR	326293	Identifier	Z_TYPE_P		325878	0					
ANR	326294	ArgumentList	op2		325878	1					
ANR	326295	Argument	op2		325878	0					
ANR	326296	Identifier	op2		325878	0					
ANR	326297	Identifier	IS_LONG		325878	1					
ANR	326298	CompoundStatement		52:43:1400:1400	325878	1					
ANR	326299	ExpressionStatement	ZEND_TRY_BINARY_OP2_OBJECT_OPERATION ( ZEND_BW_AND )	1450:2:36813:36862	325878	0	True				
ANR	326300	CallExpression	ZEND_TRY_BINARY_OP2_OBJECT_OPERATION ( ZEND_BW_AND )		325878	0					
ANR	326301	Callee	ZEND_TRY_BINARY_OP2_OBJECT_OPERATION		325878	0					
ANR	326302	Identifier	ZEND_TRY_BINARY_OP2_OBJECT_OPERATION		325878	0					
ANR	326303	ArgumentList	ZEND_BW_AND		325878	1					
ANR	326304	Argument	ZEND_BW_AND		325878	0					
ANR	326305	Identifier	ZEND_BW_AND		325878	0					
ANR	326306	ExpressionStatement	op2_lval = _zval_get_long_func ( op2 )	1451:2:36866:36901	325878	1	True				
ANR	326307	AssignmentExpression	op2_lval = _zval_get_long_func ( op2 )		325878	0		=			
ANR	326308	Identifier	op2_lval		325878	0					
ANR	326309	CallExpression	_zval_get_long_func ( op2 )		325878	1					
ANR	326310	Callee	_zval_get_long_func		325878	0					
ANR	326311	Identifier	_zval_get_long_func		325878	0					
ANR	326312	ArgumentList	op2		325878	1					
ANR	326313	Argument	op2		325878	0					
ANR	326314	Identifier	op2		325878	0					
ANR	326315	ElseStatement	else		325878	0					
ANR	326316	CompoundStatement		55:8:1502:1502	325878	0					
ANR	326317	ExpressionStatement	op2_lval = Z_LVAL_P ( op2 )	1453:2:36915:36939	325878	0	True				
ANR	326318	AssignmentExpression	op2_lval = Z_LVAL_P ( op2 )		325878	0		=			
ANR	326319	Identifier	op2_lval		325878	0					
ANR	326320	CallExpression	Z_LVAL_P ( op2 )		325878	1					
ANR	326321	Callee	Z_LVAL_P		325878	0					
ANR	326322	Identifier	Z_LVAL_P		325878	0					
ANR	326323	ArgumentList	op2		325878	1					
ANR	326324	Argument	op2		325878	0					
ANR	326325	Identifier	op2		325878	0					
ANR	326326	IfStatement	if ( op1 == result )		325878	7					
ANR	326327	Condition	op1 == result	1456:5:36950:36962	325878	0	True				
ANR	326328	EqualityExpression	op1 == result		325878	0		==			
ANR	326329	Identifier	op1		325878	0					
ANR	326330	Identifier	result		325878	1					
ANR	326331	CompoundStatement		59:20:1556:1556	325878	1					
ANR	326332	ExpressionStatement	zval_dtor ( result )	1457:2:36969:36986	325878	0	True				
ANR	326333	CallExpression	zval_dtor ( result )		325878	0					
ANR	326334	Callee	zval_dtor		325878	0					
ANR	326335	Identifier	zval_dtor		325878	0					
ANR	326336	ArgumentList	result		325878	1					
ANR	326337	Argument	result		325878	0					
ANR	326338	Identifier	result		325878	0					
ANR	326339	ExpressionStatement	"ZVAL_LONG ( result , op1_lval & op2_lval )"	1459:1:36992:37030	325878	8	True				
ANR	326340	CallExpression	"ZVAL_LONG ( result , op1_lval & op2_lval )"		325878	0					
ANR	326341	Callee	ZVAL_LONG		325878	0					
ANR	326342	Identifier	ZVAL_LONG		325878	0					
ANR	326343	ArgumentList	result		325878	1					
ANR	326344	Argument	result		325878	0					
ANR	326345	Identifier	result		325878	0					
ANR	326346	Argument	op1_lval & op2_lval		325878	1					
ANR	326347	BitAndExpression	op1_lval & op2_lval		325878	0		&			
ANR	326348	Identifier	op1_lval		325878	0					
ANR	326349	Identifier	op2_lval		325878	1					
ANR	326350	ReturnStatement	return SUCCESS ;	1460:1:37033:37047	325878	9	True				
ANR	326351	Identifier	SUCCESS		325878	0					
ANR	326352	ReturnType	ZEND_API int ZEND_FASTCALL		325878	1					
ANR	326353	Identifier	bitwise_and_function		325878	2					
ANR	326354	ParameterList	"zval * result , zval * op1 , zval * op2"		325878	3					
ANR	326355	Parameter	zval * result	1397:48:35362:35373	325878	0	True				
ANR	326356	ParameterType	zval *		325878	0					
ANR	326357	Identifier	result		325878	1					
ANR	326358	Parameter	zval * op1	1397:62:35376:35384	325878	1	True				
ANR	326359	ParameterType	zval *		325878	0					
ANR	326360	Identifier	op1		325878	1					
ANR	326361	Parameter	zval * op2	1397:73:35387:35395	325878	2	True				
ANR	326362	ParameterType	zval *		325878	0					
ANR	326363	Identifier	op2		325878	1					
ANR	326364	CFGEntryNode	ENTRY		325878		True				
ANR	326365	CFGExitNode	EXIT		325878		True				
ANR	326366	Symbol	op1_lval		325878						
ANR	326367	Symbol	* CG		325878						
ANR	326368	Symbol	ZEND_BW_AND		325878						
ANR	326369	Symbol	* Z_STRVAL_P ( op2 )		325878						
ANR	326370	Symbol	* Z_STRVAL_P ( op1 )		325878						
ANR	326371	Symbol	one_char_string		325878						
ANR	326372	Symbol	result		325878						
ANR	326373	Symbol	UNEXPECTED		325878						
ANR	326374	Symbol	zend_string_init		325878						
ANR	326375	Symbol	IS_LONG		325878						
ANR	326376	Symbol	and		325878						
ANR	326377	Symbol	Z_STRLEN_P		325878						
ANR	326378	Symbol	IS_STRING		325878						
ANR	326379	Symbol	* Z_STRVAL_P		325878						
ANR	326380	Symbol	op2_lval		325878						
ANR	326381	Symbol	shorter		325878						
ANR	326382	Symbol	* ZSTR_VAL		325878						
ANR	326383	Symbol	zend_string_alloc		325878						
ANR	326384	Symbol	SUCCESS		325878						
ANR	326385	Symbol	CG		325878						
ANR	326386	Symbol	i		325878						
ANR	326387	Symbol	bitwise_and_function		325878						
ANR	326388	Symbol	Z_TYPE_P		325878						
ANR	326389	Symbol	Z_STRVAL_P		325878						
ANR	326390	Symbol	Z_LVAL_P		325878						
ANR	326391	Symbol	ZSTR_VAL		325878						
ANR	326392	Symbol	op2		325878						
ANR	326393	Symbol	str		325878						
ANR	326394	Symbol	op1		325878						
ANR	326395	Symbol	longer		325878						
ANR	326396	Symbol	* i		325878						
ANR	326397	Symbol	_zval_get_long_func		325878						
ANR	326398	Symbol	& and		325878						
ANR	326399	Symbol	Z_STR_P		325878						
ANR	326400	Symbol	EXPECTED		325878						
ANR	326401	Symbol	* and		325878						
ANR	326402	Function	bitwise_xor_function	1464:0:37062:38797							
ANR	326403	FunctionDef	"bitwise_xor_function (zval * result , zval * op1 , zval * op2)"		326402	0					
ANR	326404	CompoundStatement		1465:0:37156:38797	326402	0					
ANR	326405	IdentifierDeclStatement	"zend_long op1_lval , op2_lval ;"	1466:1:37159:37187	326402	0	True				
ANR	326406	IdentifierDecl	op1_lval		326402	0					
ANR	326407	IdentifierDeclType	zend_long		326402	0					
ANR	326408	Identifier	op1_lval		326402	1					
ANR	326409	IdentifierDecl	op2_lval		326402	1					
ANR	326410	IdentifierDeclType	zend_long		326402	0					
ANR	326411	Identifier	op2_lval		326402	1					
ANR	326412	IfStatement	if ( EXPECTED ( Z_TYPE_P ( op1 ) == IS_LONG ) && EXPECTED ( Z_TYPE_P ( op2 ) == IS_LONG ) )		326402	1					
ANR	326413	Condition	EXPECTED ( Z_TYPE_P ( op1 ) == IS_LONG ) && EXPECTED ( Z_TYPE_P ( op2 ) == IS_LONG )	1468:5:37195:37266	326402	0	True				
ANR	326414	AndExpression	EXPECTED ( Z_TYPE_P ( op1 ) == IS_LONG ) && EXPECTED ( Z_TYPE_P ( op2 ) == IS_LONG )		326402	0		&&			
ANR	326415	CallExpression	EXPECTED ( Z_TYPE_P ( op1 ) == IS_LONG )		326402	0					
ANR	326416	Callee	EXPECTED		326402	0					
ANR	326417	Identifier	EXPECTED		326402	0					
ANR	326418	ArgumentList	Z_TYPE_P ( op1 ) == IS_LONG		326402	1					
ANR	326419	Argument	Z_TYPE_P ( op1 ) == IS_LONG		326402	0					
ANR	326420	EqualityExpression	Z_TYPE_P ( op1 ) == IS_LONG		326402	0		==			
ANR	326421	CallExpression	Z_TYPE_P ( op1 )		326402	0					
ANR	326422	Callee	Z_TYPE_P		326402	0					
ANR	326423	Identifier	Z_TYPE_P		326402	0					
ANR	326424	ArgumentList	op1		326402	1					
ANR	326425	Argument	op1		326402	0					
ANR	326426	Identifier	op1		326402	0					
ANR	326427	Identifier	IS_LONG		326402	1					
ANR	326428	CallExpression	EXPECTED ( Z_TYPE_P ( op2 ) == IS_LONG )		326402	1					
ANR	326429	Callee	EXPECTED		326402	0					
ANR	326430	Identifier	EXPECTED		326402	0					
ANR	326431	ArgumentList	Z_TYPE_P ( op2 ) == IS_LONG		326402	1					
ANR	326432	Argument	Z_TYPE_P ( op2 ) == IS_LONG		326402	0					
ANR	326433	EqualityExpression	Z_TYPE_P ( op2 ) == IS_LONG		326402	0		==			
ANR	326434	CallExpression	Z_TYPE_P ( op2 )		326402	0					
ANR	326435	Callee	Z_TYPE_P		326402	0					
ANR	326436	Identifier	Z_TYPE_P		326402	0					
ANR	326437	ArgumentList	op2		326402	1					
ANR	326438	Argument	op2		326402	0					
ANR	326439	Identifier	op2		326402	0					
ANR	326440	Identifier	IS_LONG		326402	1					
ANR	326441	CompoundStatement		4:79:112:112	326402	1					
ANR	326442	ExpressionStatement	"ZVAL_LONG ( result , Z_LVAL_P ( op1 ) ^ Z_LVAL_P ( op2 ) )"	1469:2:37273:37321	326402	0	True				
ANR	326443	CallExpression	"ZVAL_LONG ( result , Z_LVAL_P ( op1 ) ^ Z_LVAL_P ( op2 ) )"		326402	0					
ANR	326444	Callee	ZVAL_LONG		326402	0					
ANR	326445	Identifier	ZVAL_LONG		326402	0					
ANR	326446	ArgumentList	result		326402	1					
ANR	326447	Argument	result		326402	0					
ANR	326448	Identifier	result		326402	0					
ANR	326449	Argument	Z_LVAL_P ( op1 ) ^ Z_LVAL_P ( op2 )		326402	1					
ANR	326450	ExclusiveOrExpression	Z_LVAL_P ( op1 ) ^ Z_LVAL_P ( op2 )		326402	0		^			
ANR	326451	CallExpression	Z_LVAL_P ( op1 )		326402	0					
ANR	326452	Callee	Z_LVAL_P		326402	0					
ANR	326453	Identifier	Z_LVAL_P		326402	0					
ANR	326454	ArgumentList	op1		326402	1					
ANR	326455	Argument	op1		326402	0					
ANR	326456	Identifier	op1		326402	0					
ANR	326457	CallExpression	Z_LVAL_P ( op2 )		326402	1					
ANR	326458	Callee	Z_LVAL_P		326402	0					
ANR	326459	Identifier	Z_LVAL_P		326402	0					
ANR	326460	ArgumentList	op2		326402	1					
ANR	326461	Argument	op2		326402	0					
ANR	326462	Identifier	op2		326402	0					
ANR	326463	ReturnStatement	return SUCCESS ;	1470:2:37325:37339	326402	1	True				
ANR	326464	Identifier	SUCCESS		326402	0					
ANR	326465	ExpressionStatement	ZVAL_DEREF ( op1 )	1473:1:37346:37361	326402	2	True				
ANR	326466	CallExpression	ZVAL_DEREF ( op1 )		326402	0					
ANR	326467	Callee	ZVAL_DEREF		326402	0					
ANR	326468	Identifier	ZVAL_DEREF		326402	0					
ANR	326469	ArgumentList	op1		326402	1					
ANR	326470	Argument	op1		326402	0					
ANR	326471	Identifier	op1		326402	0					
ANR	326472	ExpressionStatement	ZVAL_DEREF ( op2 )	1474:1:37364:37379	326402	3	True				
ANR	326473	CallExpression	ZVAL_DEREF ( op2 )		326402	0					
ANR	326474	Callee	ZVAL_DEREF		326402	0					
ANR	326475	Identifier	ZVAL_DEREF		326402	0					
ANR	326476	ArgumentList	op2		326402	1					
ANR	326477	Argument	op2		326402	0					
ANR	326478	Identifier	op2		326402	0					
ANR	326479	IfStatement	if ( Z_TYPE_P ( op1 ) == IS_STRING && Z_TYPE_P ( op2 ) == IS_STRING )		326402	4					
ANR	326480	Condition	Z_TYPE_P ( op1 ) == IS_STRING && Z_TYPE_P ( op2 ) == IS_STRING	1476:5:37387:37442	326402	0	True				
ANR	326481	AndExpression	Z_TYPE_P ( op1 ) == IS_STRING && Z_TYPE_P ( op2 ) == IS_STRING		326402	0		&&			
ANR	326482	EqualityExpression	Z_TYPE_P ( op1 ) == IS_STRING		326402	0		==			
ANR	326483	CallExpression	Z_TYPE_P ( op1 )		326402	0					
ANR	326484	Callee	Z_TYPE_P		326402	0					
ANR	326485	Identifier	Z_TYPE_P		326402	0					
ANR	326486	ArgumentList	op1		326402	1					
ANR	326487	Argument	op1		326402	0					
ANR	326488	Identifier	op1		326402	0					
ANR	326489	Identifier	IS_STRING		326402	1					
ANR	326490	EqualityExpression	Z_TYPE_P ( op2 ) == IS_STRING		326402	1		==			
ANR	326491	CallExpression	Z_TYPE_P ( op2 )		326402	0					
ANR	326492	Callee	Z_TYPE_P		326402	0					
ANR	326493	Identifier	Z_TYPE_P		326402	0					
ANR	326494	ArgumentList	op2		326402	1					
ANR	326495	Argument	op2		326402	0					
ANR	326496	Identifier	op2		326402	0					
ANR	326497	Identifier	IS_STRING		326402	1					
ANR	326498	CompoundStatement		15:2:338:346	326402	1					
ANR	326499	IdentifierDeclStatement	"zval * longer , * shorter ;"	1477:2:37449:37471	326402	0	True				
ANR	326500	IdentifierDecl	* longer		326402	0					
ANR	326501	IdentifierDeclType	zval *		326402	0					
ANR	326502	Identifier	longer		326402	1					
ANR	326503	IdentifierDecl	* shorter		326402	1					
ANR	326504	IdentifierDeclType	zval *		326402	0					
ANR	326505	Identifier	shorter		326402	1					
ANR	326506	IdentifierDeclStatement	zend_string * str ;	1478:2:37475:37491	326402	1	True				
ANR	326507	IdentifierDecl	* str		326402	0					
ANR	326508	IdentifierDeclType	zend_string *		326402	0					
ANR	326509	Identifier	str		326402	1					
ANR	326510	IdentifierDeclStatement	size_t i ;	1479:2:37495:37503	326402	2	True				
ANR	326511	IdentifierDecl	i		326402	0					
ANR	326512	IdentifierDeclType	size_t		326402	0					
ANR	326513	Identifier	i		326402	1					
ANR	326514	IfStatement	if ( EXPECTED ( Z_STRLEN_P ( op1 ) >= Z_STRLEN_P ( op2 ) ) )		326402	3					
ANR	326515	Condition	EXPECTED ( Z_STRLEN_P ( op1 ) >= Z_STRLEN_P ( op2 ) )	1481:6:37512:37555	326402	0	True				
ANR	326516	CallExpression	EXPECTED ( Z_STRLEN_P ( op1 ) >= Z_STRLEN_P ( op2 ) )		326402	0					
ANR	326517	Callee	EXPECTED		326402	0					
ANR	326518	Identifier	EXPECTED		326402	0					
ANR	326519	ArgumentList	Z_STRLEN_P ( op1 ) >= Z_STRLEN_P ( op2 )		326402	1					
ANR	326520	Argument	Z_STRLEN_P ( op1 ) >= Z_STRLEN_P ( op2 )		326402	0					
ANR	326521	RelationalExpression	Z_STRLEN_P ( op1 ) >= Z_STRLEN_P ( op2 )		326402	0		>=			
ANR	326522	CallExpression	Z_STRLEN_P ( op1 )		326402	0					
ANR	326523	Callee	Z_STRLEN_P		326402	0					
ANR	326524	Identifier	Z_STRLEN_P		326402	0					
ANR	326525	ArgumentList	op1		326402	1					
ANR	326526	Argument	op1		326402	0					
ANR	326527	Identifier	op1		326402	0					
ANR	326528	CallExpression	Z_STRLEN_P ( op2 )		326402	1					
ANR	326529	Callee	Z_STRLEN_P		326402	0					
ANR	326530	Identifier	Z_STRLEN_P		326402	0					
ANR	326531	ArgumentList	op2		326402	1					
ANR	326532	Argument	op2		326402	0					
ANR	326533	Identifier	op2		326402	0					
ANR	326534	CompoundStatement		17:52:401:401	326402	1					
ANR	326535	IfStatement	if ( EXPECTED ( Z_STRLEN_P ( op1 ) == Z_STRLEN_P ( op2 ) ) && Z_STRLEN_P ( op1 ) == 1 )		326402	0					
ANR	326536	Condition	EXPECTED ( Z_STRLEN_P ( op1 ) == Z_STRLEN_P ( op2 ) ) && Z_STRLEN_P ( op1 ) == 1	1482:7:37567:37634	326402	0	True				
ANR	326537	AndExpression	EXPECTED ( Z_STRLEN_P ( op1 ) == Z_STRLEN_P ( op2 ) ) && Z_STRLEN_P ( op1 ) == 1		326402	0		&&			
ANR	326538	CallExpression	EXPECTED ( Z_STRLEN_P ( op1 ) == Z_STRLEN_P ( op2 ) )		326402	0					
ANR	326539	Callee	EXPECTED		326402	0					
ANR	326540	Identifier	EXPECTED		326402	0					
ANR	326541	ArgumentList	Z_STRLEN_P ( op1 ) == Z_STRLEN_P ( op2 )		326402	1					
ANR	326542	Argument	Z_STRLEN_P ( op1 ) == Z_STRLEN_P ( op2 )		326402	0					
ANR	326543	EqualityExpression	Z_STRLEN_P ( op1 ) == Z_STRLEN_P ( op2 )		326402	0		==			
ANR	326544	CallExpression	Z_STRLEN_P ( op1 )		326402	0					
ANR	326545	Callee	Z_STRLEN_P		326402	0					
ANR	326546	Identifier	Z_STRLEN_P		326402	0					
ANR	326547	ArgumentList	op1		326402	1					
ANR	326548	Argument	op1		326402	0					
ANR	326549	Identifier	op1		326402	0					
ANR	326550	CallExpression	Z_STRLEN_P ( op2 )		326402	1					
ANR	326551	Callee	Z_STRLEN_P		326402	0					
ANR	326552	Identifier	Z_STRLEN_P		326402	0					
ANR	326553	ArgumentList	op2		326402	1					
ANR	326554	Argument	op2		326402	0					
ANR	326555	Identifier	op2		326402	0					
ANR	326556	EqualityExpression	Z_STRLEN_P ( op1 ) == 1		326402	1		==			
ANR	326557	CallExpression	Z_STRLEN_P ( op1 )		326402	0					
ANR	326558	Callee	Z_STRLEN_P		326402	0					
ANR	326559	Identifier	Z_STRLEN_P		326402	0					
ANR	326560	ArgumentList	op1		326402	1					
ANR	326561	Argument	op1		326402	0					
ANR	326562	Identifier	op1		326402	0					
ANR	326563	PrimaryExpression	1		326402	1					
ANR	326564	CompoundStatement		19:4:486:553	326402	1					
ANR	326565	IdentifierDeclStatement	zend_uchar xor = ( zend_uchar ) ( * Z_STRVAL_P ( op1 ) ^ * Z_STRVAL_P ( op2 ) ) ;	1483:4:37643:37710	326402	0	True				
ANR	326566	IdentifierDecl	xor = ( zend_uchar ) ( * Z_STRVAL_P ( op1 ) ^ * Z_STRVAL_P ( op2 ) )		326402	0					
ANR	326567	IdentifierDeclType	zend_uchar		326402	0					
ANR	326568	Identifier	xor		326402	1					
ANR	326569	AssignmentExpression	xor = ( zend_uchar ) ( * Z_STRVAL_P ( op1 ) ^ * Z_STRVAL_P ( op2 ) )		326402	2		=			
ANR	326570	Identifier	xor		326402	0					
ANR	326571	CastExpression	( zend_uchar ) ( * Z_STRVAL_P ( op1 ) ^ * Z_STRVAL_P ( op2 ) )		326402	1					
ANR	326572	CastTarget	zend_uchar		326402	0					
ANR	326573	ExclusiveOrExpression	* Z_STRVAL_P ( op1 ) ^ * Z_STRVAL_P ( op2 )		326402	1		^			
ANR	326574	UnaryOperationExpression	* Z_STRVAL_P ( op1 )		326402	0					
ANR	326575	UnaryOperator	*		326402	0					
ANR	326576	CallExpression	Z_STRVAL_P ( op1 )		326402	1					
ANR	326577	Callee	Z_STRVAL_P		326402	0					
ANR	326578	Identifier	Z_STRVAL_P		326402	0					
ANR	326579	ArgumentList	op1		326402	1					
ANR	326580	Argument	op1		326402	0					
ANR	326581	Identifier	op1		326402	0					
ANR	326582	UnaryOperationExpression	* Z_STRVAL_P ( op2 )		326402	1					
ANR	326583	UnaryOperator	*		326402	0					
ANR	326584	CallExpression	Z_STRVAL_P ( op2 )		326402	1					
ANR	326585	Callee	Z_STRVAL_P		326402	0					
ANR	326586	Identifier	Z_STRVAL_P		326402	0					
ANR	326587	ArgumentList	op2		326402	1					
ANR	326588	Argument	op2		326402	0					
ANR	326589	Identifier	op2		326402	0					
ANR	326590	IfStatement	if ( CG ( one_char_string ) [ xor ] )		326402	1					
ANR	326591	Condition	CG ( one_char_string ) [ xor ]	1484:8:37720:37743	326402	0	True				
ANR	326592	ArrayIndexing	CG ( one_char_string ) [ xor ]		326402	0					
ANR	326593	CallExpression	CG ( one_char_string )		326402	0					
ANR	326594	Callee	CG		326402	0					
ANR	326595	Identifier	CG		326402	0					
ANR	326596	ArgumentList	one_char_string		326402	1					
ANR	326597	Argument	one_char_string		326402	0					
ANR	326598	Identifier	one_char_string		326402	0					
ANR	326599	Identifier	xor		326402	1					
ANR	326600	CompoundStatement		20:34:589:589	326402	1					
ANR	326601	ExpressionStatement	"ZVAL_INTERNED_STR ( result , CG ( one_char_string ) [ xor ] )"	1485:5:37753:37804	326402	0	True				
ANR	326602	CallExpression	"ZVAL_INTERNED_STR ( result , CG ( one_char_string ) [ xor ] )"		326402	0					
ANR	326603	Callee	ZVAL_INTERNED_STR		326402	0					
ANR	326604	Identifier	ZVAL_INTERNED_STR		326402	0					
ANR	326605	ArgumentList	result		326402	1					
ANR	326606	Argument	result		326402	0					
ANR	326607	Identifier	result		326402	0					
ANR	326608	Argument	CG ( one_char_string ) [ xor ]		326402	1					
ANR	326609	ArrayIndexing	CG ( one_char_string ) [ xor ]		326402	0					
ANR	326610	CallExpression	CG ( one_char_string )		326402	0					
ANR	326611	Callee	CG		326402	0					
ANR	326612	Identifier	CG		326402	0					
ANR	326613	ArgumentList	one_char_string		326402	1					
ANR	326614	Argument	one_char_string		326402	0					
ANR	326615	Identifier	one_char_string		326402	0					
ANR	326616	Identifier	xor		326402	1					
ANR	326617	ElseStatement	else		326402	0					
ANR	326618	CompoundStatement		22:11:660:660	326402	0					
ANR	326619	ExpressionStatement	"ZVAL_NEW_STR ( result , zend_string_init ( ( char * ) & xor , 1 , 0 ) )"	1487:5:37824:37883	326402	0	True				
ANR	326620	CallExpression	"ZVAL_NEW_STR ( result , zend_string_init ( ( char * ) & xor , 1 , 0 ) )"		326402	0					
ANR	326621	Callee	ZVAL_NEW_STR		326402	0					
ANR	326622	Identifier	ZVAL_NEW_STR		326402	0					
ANR	326623	ArgumentList	result		326402	1					
ANR	326624	Argument	result		326402	0					
ANR	326625	Identifier	result		326402	0					
ANR	326626	Argument	"zend_string_init ( ( char * ) & xor , 1 , 0 )"		326402	1					
ANR	326627	CallExpression	"zend_string_init ( ( char * ) & xor , 1 , 0 )"		326402	0					
ANR	326628	Callee	zend_string_init		326402	0					
ANR	326629	Identifier	zend_string_init		326402	0					
ANR	326630	ArgumentList	( char * ) & xor		326402	1					
ANR	326631	Argument	( char * ) & xor		326402	0					
ANR	326632	CastExpression	( char * ) & xor		326402	0					
ANR	326633	CastTarget	char *		326402	0					
ANR	326634	UnaryOperationExpression	& xor		326402	1					
ANR	326635	UnaryOperator	&		326402	0					
ANR	326636	Identifier	xor		326402	1					
ANR	326637	Argument	1		326402	1					
ANR	326638	PrimaryExpression	1		326402	0					
ANR	326639	Argument	0		326402	2					
ANR	326640	PrimaryExpression	0		326402	0					
ANR	326641	ReturnStatement	return SUCCESS ;	1489:4:37895:37909	326402	2	True				
ANR	326642	Identifier	SUCCESS		326402	0					
ANR	326643	ExpressionStatement	longer = op1	1491:3:37919:37931	326402	1	True				
ANR	326644	AssignmentExpression	longer = op1		326402	0		=			
ANR	326645	Identifier	longer		326402	0					
ANR	326646	Identifier	op1		326402	1					
ANR	326647	ExpressionStatement	shorter = op2	1492:3:37936:37949	326402	2	True				
ANR	326648	AssignmentExpression	shorter = op2		326402	0		=			
ANR	326649	Identifier	shorter		326402	0					
ANR	326650	Identifier	op2		326402	1					
ANR	326651	ElseStatement	else		326402	0					
ANR	326652	CompoundStatement		29:9:803:803	326402	0					
ANR	326653	ExpressionStatement	longer = op2	1494:3:37965:37977	326402	0	True				
ANR	326654	AssignmentExpression	longer = op2		326402	0		=			
ANR	326655	Identifier	longer		326402	0					
ANR	326656	Identifier	op2		326402	1					
ANR	326657	ExpressionStatement	shorter = op1	1495:3:37982:37995	326402	1	True				
ANR	326658	AssignmentExpression	shorter = op1		326402	0		=			
ANR	326659	Identifier	shorter		326402	0					
ANR	326660	Identifier	op1		326402	1					
ANR	326661	ExpressionStatement	"str = zend_string_alloc ( Z_STRLEN_P ( shorter ) , 0 )"	1498:2:38004:38051	326402	4	True				
ANR	326662	AssignmentExpression	"str = zend_string_alloc ( Z_STRLEN_P ( shorter ) , 0 )"		326402	0		=			
ANR	326663	Identifier	str		326402	0					
ANR	326664	CallExpression	"zend_string_alloc ( Z_STRLEN_P ( shorter ) , 0 )"		326402	1					
ANR	326665	Callee	zend_string_alloc		326402	0					
ANR	326666	Identifier	zend_string_alloc		326402	0					
ANR	326667	ArgumentList	Z_STRLEN_P ( shorter )		326402	1					
ANR	326668	Argument	Z_STRLEN_P ( shorter )		326402	0					
ANR	326669	CallExpression	Z_STRLEN_P ( shorter )		326402	0					
ANR	326670	Callee	Z_STRLEN_P		326402	0					
ANR	326671	Identifier	Z_STRLEN_P		326402	0					
ANR	326672	ArgumentList	shorter		326402	1					
ANR	326673	Argument	shorter		326402	0					
ANR	326674	Identifier	shorter		326402	0					
ANR	326675	Argument	0		326402	1					
ANR	326676	PrimaryExpression	0		326402	0					
ANR	326677	ForStatement	for ( i = 0 ; i < Z_STRLEN_P ( shorter ) ; i ++ )		326402	5					
ANR	326678	ForInit	i = 0 ;	1499:7:38060:38065	326402	0	True				
ANR	326679	AssignmentExpression	i = 0		326402	0		=			
ANR	326680	Identifier	i		326402	0					
ANR	326681	PrimaryExpression	0		326402	1					
ANR	326682	Condition	i < Z_STRLEN_P ( shorter )	1499:14:38067:38089	326402	1	True				
ANR	326683	RelationalExpression	i < Z_STRLEN_P ( shorter )		326402	0		<			
ANR	326684	Identifier	i		326402	0					
ANR	326685	CallExpression	Z_STRLEN_P ( shorter )		326402	1					
ANR	326686	Callee	Z_STRLEN_P		326402	0					
ANR	326687	Identifier	Z_STRLEN_P		326402	0					
ANR	326688	ArgumentList	shorter		326402	1					
ANR	326689	Argument	shorter		326402	0					
ANR	326690	Identifier	shorter		326402	0					
ANR	326691	PostIncDecOperationExpression	i ++	1499:39:38092:38094	326402	2	True				
ANR	326692	Identifier	i		326402	0					
ANR	326693	IncDec	++		326402	1					
ANR	326694	CompoundStatement		35:44:940:940	326402	3					
ANR	326695	ExpressionStatement	ZSTR_VAL ( str ) [ i ] = Z_STRVAL_P ( shorter ) [ i ] ^ Z_STRVAL_P ( longer ) [ i ]	1500:3:38102:38167	326402	0	True				
ANR	326696	AssignmentExpression	ZSTR_VAL ( str ) [ i ] = Z_STRVAL_P ( shorter ) [ i ] ^ Z_STRVAL_P ( longer ) [ i ]		326402	0		=			
ANR	326697	ArrayIndexing	ZSTR_VAL ( str ) [ i ]		326402	0					
ANR	326698	CallExpression	ZSTR_VAL ( str )		326402	0					
ANR	326699	Callee	ZSTR_VAL		326402	0					
ANR	326700	Identifier	ZSTR_VAL		326402	0					
ANR	326701	ArgumentList	str		326402	1					
ANR	326702	Argument	str		326402	0					
ANR	326703	Identifier	str		326402	0					
ANR	326704	Identifier	i		326402	1					
ANR	326705	ExclusiveOrExpression	Z_STRVAL_P ( shorter ) [ i ] ^ Z_STRVAL_P ( longer ) [ i ]		326402	1		^			
ANR	326706	ArrayIndexing	Z_STRVAL_P ( shorter ) [ i ]		326402	0					
ANR	326707	CallExpression	Z_STRVAL_P ( shorter )		326402	0					
ANR	326708	Callee	Z_STRVAL_P		326402	0					
ANR	326709	Identifier	Z_STRVAL_P		326402	0					
ANR	326710	ArgumentList	shorter		326402	1					
ANR	326711	Argument	shorter		326402	0					
ANR	326712	Identifier	shorter		326402	0					
ANR	326713	Identifier	i		326402	1					
ANR	326714	ArrayIndexing	Z_STRVAL_P ( longer ) [ i ]		326402	1					
ANR	326715	CallExpression	Z_STRVAL_P ( longer )		326402	0					
ANR	326716	Callee	Z_STRVAL_P		326402	0					
ANR	326717	Identifier	Z_STRVAL_P		326402	0					
ANR	326718	ArgumentList	longer		326402	1					
ANR	326719	Argument	longer		326402	0					
ANR	326720	Identifier	longer		326402	0					
ANR	326721	Identifier	i		326402	1					
ANR	326722	ExpressionStatement	ZSTR_VAL ( str ) [ i ] = 0	1502:2:38175:38195	326402	6	True				
ANR	326723	AssignmentExpression	ZSTR_VAL ( str ) [ i ] = 0		326402	0		=			
ANR	326724	ArrayIndexing	ZSTR_VAL ( str ) [ i ]		326402	0					
ANR	326725	CallExpression	ZSTR_VAL ( str )		326402	0					
ANR	326726	Callee	ZSTR_VAL		326402	0					
ANR	326727	Identifier	ZSTR_VAL		326402	0					
ANR	326728	ArgumentList	str		326402	1					
ANR	326729	Argument	str		326402	0					
ANR	326730	Identifier	str		326402	0					
ANR	326731	Identifier	i		326402	1					
ANR	326732	PrimaryExpression	0		326402	1					
ANR	326733	IfStatement	if ( result == op1 )		326402	7					
ANR	326734	Condition	result == op1	1503:6:38203:38213	326402	0	True				
ANR	326735	EqualityExpression	result == op1		326402	0		==			
ANR	326736	Identifier	result		326402	0					
ANR	326737	Identifier	op1		326402	1					
ANR	326738	CompoundStatement		39:19:1059:1059	326402	1					
ANR	326739	ExpressionStatement	zend_string_release ( Z_STR_P ( result ) )	1504:3:38221:38257	326402	0	True				
ANR	326740	CallExpression	zend_string_release ( Z_STR_P ( result ) )		326402	0					
ANR	326741	Callee	zend_string_release		326402	0					
ANR	326742	Identifier	zend_string_release		326402	0					
ANR	326743	ArgumentList	Z_STR_P ( result )		326402	1					
ANR	326744	Argument	Z_STR_P ( result )		326402	0					
ANR	326745	CallExpression	Z_STR_P ( result )		326402	0					
ANR	326746	Callee	Z_STR_P		326402	0					
ANR	326747	Identifier	Z_STR_P		326402	0					
ANR	326748	ArgumentList	result		326402	1					
ANR	326749	Argument	result		326402	0					
ANR	326750	Identifier	result		326402	0					
ANR	326751	ExpressionStatement	"ZVAL_NEW_STR ( result , str )"	1506:2:38265:38290	326402	8	True				
ANR	326752	CallExpression	"ZVAL_NEW_STR ( result , str )"		326402	0					
ANR	326753	Callee	ZVAL_NEW_STR		326402	0					
ANR	326754	Identifier	ZVAL_NEW_STR		326402	0					
ANR	326755	ArgumentList	result		326402	1					
ANR	326756	Argument	result		326402	0					
ANR	326757	Identifier	result		326402	0					
ANR	326758	Argument	str		326402	1					
ANR	326759	Identifier	str		326402	0					
ANR	326760	ReturnStatement	return SUCCESS ;	1507:2:38294:38308	326402	9	True				
ANR	326761	Identifier	SUCCESS		326402	0					
ANR	326762	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( op1 ) != IS_LONG ) )		326402	5					
ANR	326763	Condition	UNEXPECTED ( Z_TYPE_P ( op1 ) != IS_LONG )	1510:5:38319:38354	326402	0	True				
ANR	326764	CallExpression	UNEXPECTED ( Z_TYPE_P ( op1 ) != IS_LONG )		326402	0					
ANR	326765	Callee	UNEXPECTED		326402	0					
ANR	326766	Identifier	UNEXPECTED		326402	0					
ANR	326767	ArgumentList	Z_TYPE_P ( op1 ) != IS_LONG		326402	1					
ANR	326768	Argument	Z_TYPE_P ( op1 ) != IS_LONG		326402	0					
ANR	326769	EqualityExpression	Z_TYPE_P ( op1 ) != IS_LONG		326402	0		!=			
ANR	326770	CallExpression	Z_TYPE_P ( op1 )		326402	0					
ANR	326771	Callee	Z_TYPE_P		326402	0					
ANR	326772	Identifier	Z_TYPE_P		326402	0					
ANR	326773	ArgumentList	op1		326402	1					
ANR	326774	Argument	op1		326402	0					
ANR	326775	Identifier	op1		326402	0					
ANR	326776	Identifier	IS_LONG		326402	1					
ANR	326777	CompoundStatement		46:43:1200:1200	326402	1					
ANR	326778	ExpressionStatement	"ZEND_TRY_BINARY_OP1_OBJECT_OPERATION ( ZEND_BW_XOR , bitwise_xor_function )"	1511:2:38361:38432	326402	0	True				
ANR	326779	CallExpression	"ZEND_TRY_BINARY_OP1_OBJECT_OPERATION ( ZEND_BW_XOR , bitwise_xor_function )"		326402	0					
ANR	326780	Callee	ZEND_TRY_BINARY_OP1_OBJECT_OPERATION		326402	0					
ANR	326781	Identifier	ZEND_TRY_BINARY_OP1_OBJECT_OPERATION		326402	0					
ANR	326782	ArgumentList	ZEND_BW_XOR		326402	1					
ANR	326783	Argument	ZEND_BW_XOR		326402	0					
ANR	326784	Identifier	ZEND_BW_XOR		326402	0					
ANR	326785	Argument	bitwise_xor_function		326402	1					
ANR	326786	Identifier	bitwise_xor_function		326402	0					
ANR	326787	ExpressionStatement	op1_lval = _zval_get_long_func ( op1 )	1512:2:38436:38471	326402	1	True				
ANR	326788	AssignmentExpression	op1_lval = _zval_get_long_func ( op1 )		326402	0		=			
ANR	326789	Identifier	op1_lval		326402	0					
ANR	326790	CallExpression	_zval_get_long_func ( op1 )		326402	1					
ANR	326791	Callee	_zval_get_long_func		326402	0					
ANR	326792	Identifier	_zval_get_long_func		326402	0					
ANR	326793	ArgumentList	op1		326402	1					
ANR	326794	Argument	op1		326402	0					
ANR	326795	Identifier	op1		326402	0					
ANR	326796	ElseStatement	else		326402	0					
ANR	326797	CompoundStatement		49:8:1324:1324	326402	0					
ANR	326798	ExpressionStatement	op1_lval = Z_LVAL_P ( op1 )	1514:2:38485:38509	326402	0	True				
ANR	326799	AssignmentExpression	op1_lval = Z_LVAL_P ( op1 )		326402	0		=			
ANR	326800	Identifier	op1_lval		326402	0					
ANR	326801	CallExpression	Z_LVAL_P ( op1 )		326402	1					
ANR	326802	Callee	Z_LVAL_P		326402	0					
ANR	326803	Identifier	Z_LVAL_P		326402	0					
ANR	326804	ArgumentList	op1		326402	1					
ANR	326805	Argument	op1		326402	0					
ANR	326806	Identifier	op1		326402	0					
ANR	326807	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( op2 ) != IS_LONG ) )		326402	6					
ANR	326808	Condition	UNEXPECTED ( Z_TYPE_P ( op2 ) != IS_LONG )	1516:5:38519:38554	326402	0	True				
ANR	326809	CallExpression	UNEXPECTED ( Z_TYPE_P ( op2 ) != IS_LONG )		326402	0					
ANR	326810	Callee	UNEXPECTED		326402	0					
ANR	326811	Identifier	UNEXPECTED		326402	0					
ANR	326812	ArgumentList	Z_TYPE_P ( op2 ) != IS_LONG		326402	1					
ANR	326813	Argument	Z_TYPE_P ( op2 ) != IS_LONG		326402	0					
ANR	326814	EqualityExpression	Z_TYPE_P ( op2 ) != IS_LONG		326402	0		!=			
ANR	326815	CallExpression	Z_TYPE_P ( op2 )		326402	0					
ANR	326816	Callee	Z_TYPE_P		326402	0					
ANR	326817	Identifier	Z_TYPE_P		326402	0					
ANR	326818	ArgumentList	op2		326402	1					
ANR	326819	Argument	op2		326402	0					
ANR	326820	Identifier	op2		326402	0					
ANR	326821	Identifier	IS_LONG		326402	1					
ANR	326822	CompoundStatement		52:43:1400:1400	326402	1					
ANR	326823	ExpressionStatement	ZEND_TRY_BINARY_OP2_OBJECT_OPERATION ( ZEND_BW_XOR )	1517:2:38561:38610	326402	0	True				
ANR	326824	CallExpression	ZEND_TRY_BINARY_OP2_OBJECT_OPERATION ( ZEND_BW_XOR )		326402	0					
ANR	326825	Callee	ZEND_TRY_BINARY_OP2_OBJECT_OPERATION		326402	0					
ANR	326826	Identifier	ZEND_TRY_BINARY_OP2_OBJECT_OPERATION		326402	0					
ANR	326827	ArgumentList	ZEND_BW_XOR		326402	1					
ANR	326828	Argument	ZEND_BW_XOR		326402	0					
ANR	326829	Identifier	ZEND_BW_XOR		326402	0					
ANR	326830	ExpressionStatement	op2_lval = _zval_get_long_func ( op2 )	1518:2:38614:38649	326402	1	True				
ANR	326831	AssignmentExpression	op2_lval = _zval_get_long_func ( op2 )		326402	0		=			
ANR	326832	Identifier	op2_lval		326402	0					
ANR	326833	CallExpression	_zval_get_long_func ( op2 )		326402	1					
ANR	326834	Callee	_zval_get_long_func		326402	0					
ANR	326835	Identifier	_zval_get_long_func		326402	0					
ANR	326836	ArgumentList	op2		326402	1					
ANR	326837	Argument	op2		326402	0					
ANR	326838	Identifier	op2		326402	0					
ANR	326839	ElseStatement	else		326402	0					
ANR	326840	CompoundStatement		55:8:1502:1502	326402	0					
ANR	326841	ExpressionStatement	op2_lval = Z_LVAL_P ( op2 )	1520:2:38663:38687	326402	0	True				
ANR	326842	AssignmentExpression	op2_lval = Z_LVAL_P ( op2 )		326402	0		=			
ANR	326843	Identifier	op2_lval		326402	0					
ANR	326844	CallExpression	Z_LVAL_P ( op2 )		326402	1					
ANR	326845	Callee	Z_LVAL_P		326402	0					
ANR	326846	Identifier	Z_LVAL_P		326402	0					
ANR	326847	ArgumentList	op2		326402	1					
ANR	326848	Argument	op2		326402	0					
ANR	326849	Identifier	op2		326402	0					
ANR	326850	IfStatement	if ( op1 == result )		326402	7					
ANR	326851	Condition	op1 == result	1523:5:38698:38710	326402	0	True				
ANR	326852	EqualityExpression	op1 == result		326402	0		==			
ANR	326853	Identifier	op1		326402	0					
ANR	326854	Identifier	result		326402	1					
ANR	326855	CompoundStatement		59:20:1556:1556	326402	1					
ANR	326856	ExpressionStatement	zval_dtor ( result )	1524:2:38717:38734	326402	0	True				
ANR	326857	CallExpression	zval_dtor ( result )		326402	0					
ANR	326858	Callee	zval_dtor		326402	0					
ANR	326859	Identifier	zval_dtor		326402	0					
ANR	326860	ArgumentList	result		326402	1					
ANR	326861	Argument	result		326402	0					
ANR	326862	Identifier	result		326402	0					
ANR	326863	ExpressionStatement	"ZVAL_LONG ( result , op1_lval ^ op2_lval )"	1526:1:38740:38778	326402	8	True				
ANR	326864	CallExpression	"ZVAL_LONG ( result , op1_lval ^ op2_lval )"		326402	0					
ANR	326865	Callee	ZVAL_LONG		326402	0					
ANR	326866	Identifier	ZVAL_LONG		326402	0					
ANR	326867	ArgumentList	result		326402	1					
ANR	326868	Argument	result		326402	0					
ANR	326869	Identifier	result		326402	0					
ANR	326870	Argument	op1_lval ^ op2_lval		326402	1					
ANR	326871	ExclusiveOrExpression	op1_lval ^ op2_lval		326402	0		^			
ANR	326872	Identifier	op1_lval		326402	0					
ANR	326873	Identifier	op2_lval		326402	1					
ANR	326874	ReturnStatement	return SUCCESS ;	1527:1:38781:38795	326402	9	True				
ANR	326875	Identifier	SUCCESS		326402	0					
ANR	326876	ReturnType	ZEND_API int ZEND_FASTCALL		326402	1					
ANR	326877	Identifier	bitwise_xor_function		326402	2					
ANR	326878	ParameterList	"zval * result , zval * op1 , zval * op2"		326402	3					
ANR	326879	Parameter	zval * result	1464:48:37110:37121	326402	0	True				
ANR	326880	ParameterType	zval *		326402	0					
ANR	326881	Identifier	result		326402	1					
ANR	326882	Parameter	zval * op1	1464:62:37124:37132	326402	1	True				
ANR	326883	ParameterType	zval *		326402	0					
ANR	326884	Identifier	op1		326402	1					
ANR	326885	Parameter	zval * op2	1464:73:37135:37143	326402	2	True				
ANR	326886	ParameterType	zval *		326402	0					
ANR	326887	Identifier	op2		326402	1					
ANR	326888	CFGEntryNode	ENTRY		326402		True				
ANR	326889	CFGExitNode	EXIT		326402		True				
ANR	326890	Symbol	op1_lval		326402						
ANR	326891	Symbol	* xor		326402						
ANR	326892	Symbol	& xor		326402						
ANR	326893	Symbol	* CG		326402						
ANR	326894	Symbol	bitwise_xor_function		326402						
ANR	326895	Symbol	* Z_STRVAL_P ( op2 )		326402						
ANR	326896	Symbol	ZEND_BW_XOR		326402						
ANR	326897	Symbol	* Z_STRVAL_P ( op1 )		326402						
ANR	326898	Symbol	one_char_string		326402						
ANR	326899	Symbol	result		326402						
ANR	326900	Symbol	UNEXPECTED		326402						
ANR	326901	Symbol	zend_string_init		326402						
ANR	326902	Symbol	IS_LONG		326402						
ANR	326903	Symbol	Z_STRLEN_P		326402						
ANR	326904	Symbol	xor		326402						
ANR	326905	Symbol	IS_STRING		326402						
ANR	326906	Symbol	* Z_STRVAL_P		326402						
ANR	326907	Symbol	op2_lval		326402						
ANR	326908	Symbol	shorter		326402						
ANR	326909	Symbol	* ZSTR_VAL		326402						
ANR	326910	Symbol	zend_string_alloc		326402						
ANR	326911	Symbol	SUCCESS		326402						
ANR	326912	Symbol	CG		326402						
ANR	326913	Symbol	i		326402						
ANR	326914	Symbol	Z_TYPE_P		326402						
ANR	326915	Symbol	Z_STRVAL_P		326402						
ANR	326916	Symbol	Z_LVAL_P		326402						
ANR	326917	Symbol	ZSTR_VAL		326402						
ANR	326918	Symbol	op2		326402						
ANR	326919	Symbol	str		326402						
ANR	326920	Symbol	op1		326402						
ANR	326921	Symbol	longer		326402						
ANR	326922	Symbol	* i		326402						
ANR	326923	Symbol	_zval_get_long_func		326402						
ANR	326924	Symbol	Z_STR_P		326402						
ANR	326925	Symbol	EXPECTED		326402						
ANR	326926	Function	shift_left_function	1531:0:38810:39638							
ANR	326927	FunctionDef	"shift_left_function (zval * result , zval * op1 , zval * op2)"		326926	0					
ANR	326928	CompoundStatement		1532:0:38903:39638	326926	0					
ANR	326929	IdentifierDeclStatement	"zend_long op1_lval , op2_lval ;"	1533:1:38906:38934	326926	0	True				
ANR	326930	IdentifierDecl	op1_lval		326926	0					
ANR	326931	IdentifierDeclType	zend_long		326926	0					
ANR	326932	Identifier	op1_lval		326926	1					
ANR	326933	IdentifierDecl	op2_lval		326926	1					
ANR	326934	IdentifierDeclType	zend_long		326926	0					
ANR	326935	Identifier	op2_lval		326926	1					
ANR	326936	ExpressionStatement	"convert_op1_op2_long ( op1 , op1_lval , op2 , op2_lval , ZEND_SL , shift_left_function )"	1535:1:38938:39018	326926	1	True				
ANR	326937	CallExpression	"convert_op1_op2_long ( op1 , op1_lval , op2 , op2_lval , ZEND_SL , shift_left_function )"		326926	0					
ANR	326938	Callee	convert_op1_op2_long		326926	0					
ANR	326939	Identifier	convert_op1_op2_long		326926	0					
ANR	326940	ArgumentList	op1		326926	1					
ANR	326941	Argument	op1		326926	0					
ANR	326942	Identifier	op1		326926	0					
ANR	326943	Argument	op1_lval		326926	1					
ANR	326944	Identifier	op1_lval		326926	0					
ANR	326945	Argument	op2		326926	2					
ANR	326946	Identifier	op2		326926	0					
ANR	326947	Argument	op2_lval		326926	3					
ANR	326948	Identifier	op2_lval		326926	0					
ANR	326949	Argument	ZEND_SL		326926	4					
ANR	326950	Identifier	ZEND_SL		326926	0					
ANR	326951	Argument	shift_left_function		326926	5					
ANR	326952	Identifier	shift_left_function		326926	0					
ANR	326953	IfStatement	if ( op1 == result )		326926	2					
ANR	326954	Condition	op1 == result	1537:5:39026:39038	326926	0	True				
ANR	326955	EqualityExpression	op1 == result		326926	0		==			
ANR	326956	Identifier	op1		326926	0					
ANR	326957	Identifier	result		326926	1					
ANR	326958	CompoundStatement		6:20:137:137	326926	1					
ANR	326959	ExpressionStatement	zval_dtor ( result )	1538:2:39045:39062	326926	0	True				
ANR	326960	CallExpression	zval_dtor ( result )		326926	0					
ANR	326961	Callee	zval_dtor		326926	0					
ANR	326962	Identifier	zval_dtor		326926	0					
ANR	326963	ArgumentList	result		326926	1					
ANR	326964	Argument	result		326926	0					
ANR	326965	Identifier	result		326926	0					
ANR	326966	IfStatement	if ( UNEXPECTED ( ( zend_ulong ) op2_lval >= SIZEOF_ZEND_LONG * 8 ) )		326926	3					
ANR	326967	Condition	UNEXPECTED ( ( zend_ulong ) op2_lval >= SIZEOF_ZEND_LONG * 8 )	1542:5:39151:39206	326926	0	True				
ANR	326968	CallExpression	UNEXPECTED ( ( zend_ulong ) op2_lval >= SIZEOF_ZEND_LONG * 8 )		326926	0					
ANR	326969	Callee	UNEXPECTED		326926	0					
ANR	326970	Identifier	UNEXPECTED		326926	0					
ANR	326971	ArgumentList	( zend_ulong ) op2_lval >= SIZEOF_ZEND_LONG * 8		326926	1					
ANR	326972	Argument	( zend_ulong ) op2_lval >= SIZEOF_ZEND_LONG * 8		326926	0					
ANR	326973	RelationalExpression	( zend_ulong ) op2_lval >= SIZEOF_ZEND_LONG * 8		326926	0		>=			
ANR	326974	CastExpression	( zend_ulong ) op2_lval		326926	0					
ANR	326975	CastTarget	zend_ulong		326926	0					
ANR	326976	Identifier	op2_lval		326926	1					
ANR	326977	MultiplicativeExpression	SIZEOF_ZEND_LONG * 8		326926	1		*			
ANR	326978	Identifier	SIZEOF_ZEND_LONG		326926	0					
ANR	326979	PrimaryExpression	8		326926	1					
ANR	326980	CompoundStatement		11:63:305:305	326926	1					
ANR	326981	IfStatement	if ( EXPECTED ( op2_lval > 0 ) )		326926	0					
ANR	326982	Condition	EXPECTED ( op2_lval > 0 )	1543:6:39217:39238	326926	0	True				
ANR	326983	CallExpression	EXPECTED ( op2_lval > 0 )		326926	0					
ANR	326984	Callee	EXPECTED		326926	0					
ANR	326985	Identifier	EXPECTED		326926	0					
ANR	326986	ArgumentList	op2_lval > 0		326926	1					
ANR	326987	Argument	op2_lval > 0		326926	0					
ANR	326988	RelationalExpression	op2_lval > 0		326926	0		>			
ANR	326989	Identifier	op2_lval		326926	0					
ANR	326990	PrimaryExpression	0		326926	1					
ANR	326991	CompoundStatement		12:30:337:337	326926	1					
ANR	326992	ExpressionStatement	"ZVAL_LONG ( result , 0 )"	1544:3:39246:39266	326926	0	True				
ANR	326993	CallExpression	"ZVAL_LONG ( result , 0 )"		326926	0					
ANR	326994	Callee	ZVAL_LONG		326926	0					
ANR	326995	Identifier	ZVAL_LONG		326926	0					
ANR	326996	ArgumentList	result		326926	1					
ANR	326997	Argument	result		326926	0					
ANR	326998	Identifier	result		326926	0					
ANR	326999	Argument	0		326926	1					
ANR	327000	PrimaryExpression	0		326926	0					
ANR	327001	ReturnStatement	return SUCCESS ;	1545:3:39271:39285	326926	1	True				
ANR	327002	Identifier	SUCCESS		326926	0					
ANR	327003	ElseStatement	else		326926	0					
ANR	327004	CompoundStatement		15:9:392:392	326926	0					
ANR	327005	IfStatement	if ( EG ( current_execute_data ) && ! CG ( in_compilation ) )		326926	0					
ANR	327006	Condition	EG ( current_execute_data ) && ! CG ( in_compilation )	1547:7:39305:39351	326926	0	True				
ANR	327007	AndExpression	EG ( current_execute_data ) && ! CG ( in_compilation )		326926	0		&&			
ANR	327008	CallExpression	EG ( current_execute_data )		326926	0					
ANR	327009	Callee	EG		326926	0					
ANR	327010	Identifier	EG		326926	0					
ANR	327011	ArgumentList	current_execute_data		326926	1					
ANR	327012	Argument	current_execute_data		326926	0					
ANR	327013	Identifier	current_execute_data		326926	0					
ANR	327014	UnaryOperationExpression	! CG ( in_compilation )		326926	1					
ANR	327015	UnaryOperator	!		326926	0					
ANR	327016	CallExpression	CG ( in_compilation )		326926	1					
ANR	327017	Callee	CG		326926	0					
ANR	327018	Identifier	CG		326926	0					
ANR	327019	ArgumentList	in_compilation		326926	1					
ANR	327020	Argument	in_compilation		326926	0					
ANR	327021	Identifier	in_compilation		326926	0					
ANR	327022	CompoundStatement		16:56:450:450	326926	1					
ANR	327023	ExpressionStatement	"zend_throw_exception_ex ( zend_ce_arithmetic_error , 0 , ""Bit shift by negative number"" )"	1548:4:39360:39444	326926	0	True				
ANR	327024	CallExpression	"zend_throw_exception_ex ( zend_ce_arithmetic_error , 0 , ""Bit shift by negative number"" )"		326926	0					
ANR	327025	Callee	zend_throw_exception_ex		326926	0					
ANR	327026	Identifier	zend_throw_exception_ex		326926	0					
ANR	327027	ArgumentList	zend_ce_arithmetic_error		326926	1					
ANR	327028	Argument	zend_ce_arithmetic_error		326926	0					
ANR	327029	Identifier	zend_ce_arithmetic_error		326926	0					
ANR	327030	Argument	0		326926	1					
ANR	327031	PrimaryExpression	0		326926	0					
ANR	327032	Argument	"""Bit shift by negative number"""		326926	2					
ANR	327033	PrimaryExpression	"""Bit shift by negative number"""		326926	0					
ANR	327034	ElseStatement	else		326926	0					
ANR	327035	CompoundStatement		18:10:552:552	326926	0					
ANR	327036	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Bit shift by negative number"" )"	1550:4:39462:39522	326926	0	True				
ANR	327037	CallExpression	"zend_error_noreturn ( E_ERROR , ""Bit shift by negative number"" )"		326926	0					
ANR	327038	Callee	zend_error_noreturn		326926	0					
ANR	327039	Identifier	zend_error_noreturn		326926	0					
ANR	327040	ArgumentList	E_ERROR		326926	1					
ANR	327041	Argument	E_ERROR		326926	0					
ANR	327042	Identifier	E_ERROR		326926	0					
ANR	327043	Argument	"""Bit shift by negative number"""		326926	1					
ANR	327044	PrimaryExpression	"""Bit shift by negative number"""		326926	0					
ANR	327045	ExpressionStatement	ZVAL_UNDEF ( result )	1552:3:39532:39550	326926	1	True				
ANR	327046	CallExpression	ZVAL_UNDEF ( result )		326926	0					
ANR	327047	Callee	ZVAL_UNDEF		326926	0					
ANR	327048	Identifier	ZVAL_UNDEF		326926	0					
ANR	327049	ArgumentList	result		326926	1					
ANR	327050	Argument	result		326926	0					
ANR	327051	Identifier	result		326926	0					
ANR	327052	ReturnStatement	return FAILURE ;	1553:3:39555:39569	326926	2	True				
ANR	327053	Identifier	FAILURE		326926	0					
ANR	327054	ExpressionStatement	"ZVAL_LONG ( result , op1_lval << op2_lval )"	1557:1:39580:39619	326926	4	True				
ANR	327055	CallExpression	"ZVAL_LONG ( result , op1_lval << op2_lval )"		326926	0					
ANR	327056	Callee	ZVAL_LONG		326926	0					
ANR	327057	Identifier	ZVAL_LONG		326926	0					
ANR	327058	ArgumentList	result		326926	1					
ANR	327059	Argument	result		326926	0					
ANR	327060	Identifier	result		326926	0					
ANR	327061	Argument	op1_lval << op2_lval		326926	1					
ANR	327062	ShiftExpression	op1_lval << op2_lval		326926	0		<<			
ANR	327063	Identifier	op1_lval		326926	0					
ANR	327064	Identifier	op2_lval		326926	1					
ANR	327065	ReturnStatement	return SUCCESS ;	1558:1:39622:39636	326926	5	True				
ANR	327066	Identifier	SUCCESS		326926	0					
ANR	327067	ReturnType	ZEND_API int ZEND_FASTCALL		326926	1					
ANR	327068	Identifier	shift_left_function		326926	2					
ANR	327069	ParameterList	"zval * result , zval * op1 , zval * op2"		326926	3					
ANR	327070	Parameter	zval * result	1531:47:38857:38868	326926	0	True				
ANR	327071	ParameterType	zval *		326926	0					
ANR	327072	Identifier	result		326926	1					
ANR	327073	Parameter	zval * op1	1531:61:38871:38879	326926	1	True				
ANR	327074	ParameterType	zval *		326926	0					
ANR	327075	Identifier	op1		326926	1					
ANR	327076	Parameter	zval * op2	1531:72:38882:38890	326926	2	True				
ANR	327077	ParameterType	zval *		326926	0					
ANR	327078	Identifier	op2		326926	1					
ANR	327079	CFGEntryNode	ENTRY		326926		True				
ANR	327080	CFGExitNode	EXIT		326926		True				
ANR	327081	Symbol	EG		326926						
ANR	327082	Symbol	op1_lval		326926						
ANR	327083	Symbol	SUCCESS		326926						
ANR	327084	Symbol	CG		326926						
ANR	327085	Symbol	current_execute_data		326926						
ANR	327086	Symbol	ZEND_SL		326926						
ANR	327087	Symbol	FAILURE		326926						
ANR	327088	Symbol	in_compilation		326926						
ANR	327089	Symbol	result		326926						
ANR	327090	Symbol	op2		326926						
ANR	327091	Symbol	UNEXPECTED		326926						
ANR	327092	Symbol	op1		326926						
ANR	327093	Symbol	E_ERROR		326926						
ANR	327094	Symbol	shift_left_function		326926						
ANR	327095	Symbol	SIZEOF_ZEND_LONG		326926						
ANR	327096	Symbol	EXPECTED		326926						
ANR	327097	Symbol	op2_lval		326926						
ANR	327098	Symbol	zend_ce_arithmetic_error		326926						
ANR	327099	Function	shift_right_function	1562:0:39651:40503							
ANR	327100	FunctionDef	"shift_right_function (zval * result , zval * op1 , zval * op2)"		327099	0					
ANR	327101	CompoundStatement		1563:0:39745:40503	327099	0					
ANR	327102	IdentifierDeclStatement	"zend_long op1_lval , op2_lval ;"	1564:1:39748:39776	327099	0	True				
ANR	327103	IdentifierDecl	op1_lval		327099	0					
ANR	327104	IdentifierDeclType	zend_long		327099	0					
ANR	327105	Identifier	op1_lval		327099	1					
ANR	327106	IdentifierDecl	op2_lval		327099	1					
ANR	327107	IdentifierDeclType	zend_long		327099	0					
ANR	327108	Identifier	op2_lval		327099	1					
ANR	327109	ExpressionStatement	"convert_op1_op2_long ( op1 , op1_lval , op2 , op2_lval , ZEND_SR , shift_right_function )"	1566:1:39780:39861	327099	1	True				
ANR	327110	CallExpression	"convert_op1_op2_long ( op1 , op1_lval , op2 , op2_lval , ZEND_SR , shift_right_function )"		327099	0					
ANR	327111	Callee	convert_op1_op2_long		327099	0					
ANR	327112	Identifier	convert_op1_op2_long		327099	0					
ANR	327113	ArgumentList	op1		327099	1					
ANR	327114	Argument	op1		327099	0					
ANR	327115	Identifier	op1		327099	0					
ANR	327116	Argument	op1_lval		327099	1					
ANR	327117	Identifier	op1_lval		327099	0					
ANR	327118	Argument	op2		327099	2					
ANR	327119	Identifier	op2		327099	0					
ANR	327120	Argument	op2_lval		327099	3					
ANR	327121	Identifier	op2_lval		327099	0					
ANR	327122	Argument	ZEND_SR		327099	4					
ANR	327123	Identifier	ZEND_SR		327099	0					
ANR	327124	Argument	shift_right_function		327099	5					
ANR	327125	Identifier	shift_right_function		327099	0					
ANR	327126	IfStatement	if ( op1 == result )		327099	2					
ANR	327127	Condition	op1 == result	1568:5:39869:39881	327099	0	True				
ANR	327128	EqualityExpression	op1 == result		327099	0		==			
ANR	327129	Identifier	op1		327099	0					
ANR	327130	Identifier	result		327099	1					
ANR	327131	CompoundStatement		6:20:138:138	327099	1					
ANR	327132	ExpressionStatement	zval_dtor ( result )	1569:2:39888:39905	327099	0	True				
ANR	327133	CallExpression	zval_dtor ( result )		327099	0					
ANR	327134	Callee	zval_dtor		327099	0					
ANR	327135	Identifier	zval_dtor		327099	0					
ANR	327136	ArgumentList	result		327099	1					
ANR	327137	Argument	result		327099	0					
ANR	327138	Identifier	result		327099	0					
ANR	327139	IfStatement	if ( UNEXPECTED ( ( zend_ulong ) op2_lval >= SIZEOF_ZEND_LONG * 8 ) )		327099	3					
ANR	327140	Condition	UNEXPECTED ( ( zend_ulong ) op2_lval >= SIZEOF_ZEND_LONG * 8 )	1573:5:39994:40049	327099	0	True				
ANR	327141	CallExpression	UNEXPECTED ( ( zend_ulong ) op2_lval >= SIZEOF_ZEND_LONG * 8 )		327099	0					
ANR	327142	Callee	UNEXPECTED		327099	0					
ANR	327143	Identifier	UNEXPECTED		327099	0					
ANR	327144	ArgumentList	( zend_ulong ) op2_lval >= SIZEOF_ZEND_LONG * 8		327099	1					
ANR	327145	Argument	( zend_ulong ) op2_lval >= SIZEOF_ZEND_LONG * 8		327099	0					
ANR	327146	RelationalExpression	( zend_ulong ) op2_lval >= SIZEOF_ZEND_LONG * 8		327099	0		>=			
ANR	327147	CastExpression	( zend_ulong ) op2_lval		327099	0					
ANR	327148	CastTarget	zend_ulong		327099	0					
ANR	327149	Identifier	op2_lval		327099	1					
ANR	327150	MultiplicativeExpression	SIZEOF_ZEND_LONG * 8		327099	1		*			
ANR	327151	Identifier	SIZEOF_ZEND_LONG		327099	0					
ANR	327152	PrimaryExpression	8		327099	1					
ANR	327153	CompoundStatement		11:63:306:306	327099	1					
ANR	327154	IfStatement	if ( EXPECTED ( op2_lval > 0 ) )		327099	0					
ANR	327155	Condition	EXPECTED ( op2_lval > 0 )	1574:6:40060:40081	327099	0	True				
ANR	327156	CallExpression	EXPECTED ( op2_lval > 0 )		327099	0					
ANR	327157	Callee	EXPECTED		327099	0					
ANR	327158	Identifier	EXPECTED		327099	0					
ANR	327159	ArgumentList	op2_lval > 0		327099	1					
ANR	327160	Argument	op2_lval > 0		327099	0					
ANR	327161	RelationalExpression	op2_lval > 0		327099	0		>			
ANR	327162	Identifier	op2_lval		327099	0					
ANR	327163	PrimaryExpression	0		327099	1					
ANR	327164	CompoundStatement		12:30:338:338	327099	1					
ANR	327165	ExpressionStatement	"ZVAL_LONG ( result , ( op1_lval < 0 ) ? - 1 : 0 )"	1575:3:40089:40131	327099	0	True				
ANR	327166	CallExpression	"ZVAL_LONG ( result , ( op1_lval < 0 ) ? - 1 : 0 )"		327099	0					
ANR	327167	Callee	ZVAL_LONG		327099	0					
ANR	327168	Identifier	ZVAL_LONG		327099	0					
ANR	327169	ArgumentList	result		327099	1					
ANR	327170	Argument	result		327099	0					
ANR	327171	Identifier	result		327099	0					
ANR	327172	Argument	( op1_lval < 0 ) ? - 1 : 0		327099	1					
ANR	327173	ConditionalExpression	( op1_lval < 0 ) ? - 1 : 0		327099	0					
ANR	327174	Condition	op1_lval < 0		327099	0					
ANR	327175	RelationalExpression	op1_lval < 0		327099	0		<			
ANR	327176	Identifier	op1_lval		327099	0					
ANR	327177	PrimaryExpression	0		327099	1					
ANR	327178	UnaryOperationExpression	- 1		327099	1					
ANR	327179	UnaryOperator	-		327099	0					
ANR	327180	PrimaryExpression	1		327099	1					
ANR	327181	PrimaryExpression	0		327099	2					
ANR	327182	ReturnStatement	return SUCCESS ;	1576:3:40136:40150	327099	1	True				
ANR	327183	Identifier	SUCCESS		327099	0					
ANR	327184	ElseStatement	else		327099	0					
ANR	327185	CompoundStatement		15:9:415:415	327099	0					
ANR	327186	IfStatement	if ( EG ( current_execute_data ) && ! CG ( in_compilation ) )		327099	0					
ANR	327187	Condition	EG ( current_execute_data ) && ! CG ( in_compilation )	1578:7:40170:40216	327099	0	True				
ANR	327188	AndExpression	EG ( current_execute_data ) && ! CG ( in_compilation )		327099	0		&&			
ANR	327189	CallExpression	EG ( current_execute_data )		327099	0					
ANR	327190	Callee	EG		327099	0					
ANR	327191	Identifier	EG		327099	0					
ANR	327192	ArgumentList	current_execute_data		327099	1					
ANR	327193	Argument	current_execute_data		327099	0					
ANR	327194	Identifier	current_execute_data		327099	0					
ANR	327195	UnaryOperationExpression	! CG ( in_compilation )		327099	1					
ANR	327196	UnaryOperator	!		327099	0					
ANR	327197	CallExpression	CG ( in_compilation )		327099	1					
ANR	327198	Callee	CG		327099	0					
ANR	327199	Identifier	CG		327099	0					
ANR	327200	ArgumentList	in_compilation		327099	1					
ANR	327201	Argument	in_compilation		327099	0					
ANR	327202	Identifier	in_compilation		327099	0					
ANR	327203	CompoundStatement		16:56:473:473	327099	1					
ANR	327204	ExpressionStatement	"zend_throw_exception_ex ( zend_ce_arithmetic_error , 0 , ""Bit shift by negative number"" )"	1579:4:40225:40309	327099	0	True				
ANR	327205	CallExpression	"zend_throw_exception_ex ( zend_ce_arithmetic_error , 0 , ""Bit shift by negative number"" )"		327099	0					
ANR	327206	Callee	zend_throw_exception_ex		327099	0					
ANR	327207	Identifier	zend_throw_exception_ex		327099	0					
ANR	327208	ArgumentList	zend_ce_arithmetic_error		327099	1					
ANR	327209	Argument	zend_ce_arithmetic_error		327099	0					
ANR	327210	Identifier	zend_ce_arithmetic_error		327099	0					
ANR	327211	Argument	0		327099	1					
ANR	327212	PrimaryExpression	0		327099	0					
ANR	327213	Argument	"""Bit shift by negative number"""		327099	2					
ANR	327214	PrimaryExpression	"""Bit shift by negative number"""		327099	0					
ANR	327215	ElseStatement	else		327099	0					
ANR	327216	CompoundStatement		18:10:575:575	327099	0					
ANR	327217	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Bit shift by negative number"" )"	1581:4:40327:40387	327099	0	True				
ANR	327218	CallExpression	"zend_error_noreturn ( E_ERROR , ""Bit shift by negative number"" )"		327099	0					
ANR	327219	Callee	zend_error_noreturn		327099	0					
ANR	327220	Identifier	zend_error_noreturn		327099	0					
ANR	327221	ArgumentList	E_ERROR		327099	1					
ANR	327222	Argument	E_ERROR		327099	0					
ANR	327223	Identifier	E_ERROR		327099	0					
ANR	327224	Argument	"""Bit shift by negative number"""		327099	1					
ANR	327225	PrimaryExpression	"""Bit shift by negative number"""		327099	0					
ANR	327226	ExpressionStatement	ZVAL_UNDEF ( result )	1583:3:40397:40415	327099	1	True				
ANR	327227	CallExpression	ZVAL_UNDEF ( result )		327099	0					
ANR	327228	Callee	ZVAL_UNDEF		327099	0					
ANR	327229	Identifier	ZVAL_UNDEF		327099	0					
ANR	327230	ArgumentList	result		327099	1					
ANR	327231	Argument	result		327099	0					
ANR	327232	Identifier	result		327099	0					
ANR	327233	ReturnStatement	return FAILURE ;	1584:3:40420:40434	327099	2	True				
ANR	327234	Identifier	FAILURE		327099	0					
ANR	327235	ExpressionStatement	"ZVAL_LONG ( result , op1_lval >> op2_lval )"	1588:1:40445:40484	327099	4	True				
ANR	327236	CallExpression	"ZVAL_LONG ( result , op1_lval >> op2_lval )"		327099	0					
ANR	327237	Callee	ZVAL_LONG		327099	0					
ANR	327238	Identifier	ZVAL_LONG		327099	0					
ANR	327239	ArgumentList	result		327099	1					
ANR	327240	Argument	result		327099	0					
ANR	327241	Identifier	result		327099	0					
ANR	327242	Argument	op1_lval >> op2_lval		327099	1					
ANR	327243	ShiftExpression	op1_lval >> op2_lval		327099	0		>>			
ANR	327244	Identifier	op1_lval		327099	0					
ANR	327245	Identifier	op2_lval		327099	1					
ANR	327246	ReturnStatement	return SUCCESS ;	1589:1:40487:40501	327099	5	True				
ANR	327247	Identifier	SUCCESS		327099	0					
ANR	327248	ReturnType	ZEND_API int ZEND_FASTCALL		327099	1					
ANR	327249	Identifier	shift_right_function		327099	2					
ANR	327250	ParameterList	"zval * result , zval * op1 , zval * op2"		327099	3					
ANR	327251	Parameter	zval * result	1562:48:39699:39710	327099	0	True				
ANR	327252	ParameterType	zval *		327099	0					
ANR	327253	Identifier	result		327099	1					
ANR	327254	Parameter	zval * op1	1562:62:39713:39721	327099	1	True				
ANR	327255	ParameterType	zval *		327099	0					
ANR	327256	Identifier	op1		327099	1					
ANR	327257	Parameter	zval * op2	1562:73:39724:39732	327099	2	True				
ANR	327258	ParameterType	zval *		327099	0					
ANR	327259	Identifier	op2		327099	1					
ANR	327260	CFGEntryNode	ENTRY		327099		True				
ANR	327261	CFGExitNode	EXIT		327099		True				
ANR	327262	Symbol	EG		327099						
ANR	327263	Symbol	op1_lval		327099						
ANR	327264	Symbol	SUCCESS		327099						
ANR	327265	Symbol	CG		327099						
ANR	327266	Symbol	ZEND_SR		327099						
ANR	327267	Symbol	current_execute_data		327099						
ANR	327268	Symbol	shift_right_function		327099						
ANR	327269	Symbol	FAILURE		327099						
ANR	327270	Symbol	in_compilation		327099						
ANR	327271	Symbol	result		327099						
ANR	327272	Symbol	op2		327099						
ANR	327273	Symbol	UNEXPECTED		327099						
ANR	327274	Symbol	op1		327099						
ANR	327275	Symbol	E_ERROR		327099						
ANR	327276	Symbol	SIZEOF_ZEND_LONG		327099						
ANR	327277	Symbol	EXPECTED		327099						
ANR	327278	Symbol	op2_lval		327099						
ANR	327279	Symbol	zend_ce_arithmetic_error		327099						
ANR	327280	Function	concat_function	1593:0:40516:42711							
ANR	327281	FunctionDef	"concat_function (zval * result , zval * op1 , zval * op2)"		327280	0					
ANR	327282	CompoundStatement		1594:0:40605:42711	327280	0					
ANR	327283	IdentifierDeclStatement	"zval op1_copy , op2_copy ;"	1595:1:40608:40631	327280	0	True				
ANR	327284	IdentifierDecl	op1_copy		327280	0					
ANR	327285	IdentifierDeclType	zval		327280	0					
ANR	327286	Identifier	op1_copy		327280	1					
ANR	327287	IdentifierDecl	op2_copy		327280	1					
ANR	327288	IdentifierDeclType	zval		327280	0					
ANR	327289	Identifier	op2_copy		327280	1					
ANR	327290	IdentifierDeclStatement	"int use_copy1 = 0 , use_copy2 = 0 ;"	1596:1:40634:40666	327280	1	True				
ANR	327291	IdentifierDecl	use_copy1 = 0		327280	0					
ANR	327292	IdentifierDeclType	int		327280	0					
ANR	327293	Identifier	use_copy1		327280	1					
ANR	327294	AssignmentExpression	use_copy1 = 0		327280	2		=			
ANR	327295	Identifier	use_copy1		327280	0					
ANR	327296	PrimaryExpression	0		327280	1					
ANR	327297	IdentifierDecl	use_copy2 = 0		327280	1					
ANR	327298	IdentifierDeclType	int		327280	0					
ANR	327299	Identifier	use_copy2		327280	1					
ANR	327300	AssignmentExpression	use_copy2 = 0		327280	2		=			
ANR	327301	Identifier	use_copy2		327280	0					
ANR	327302	PrimaryExpression	0		327280	1					
ANR	327303	DoStatement	do		327280	2					
ANR	327304	CompoundStatement		5:4:67:67	327280	0					
ANR	327305	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( op1 ) != IS_STRING ) )		327280	0					
ANR	327306	Condition	UNEXPECTED ( Z_TYPE_P ( op1 ) != IS_STRING )	1599:7:40682:40719	327280	0	True				
ANR	327307	CallExpression	UNEXPECTED ( Z_TYPE_P ( op1 ) != IS_STRING )		327280	0					
ANR	327308	Callee	UNEXPECTED		327280	0					
ANR	327309	Identifier	UNEXPECTED		327280	0					
ANR	327310	ArgumentList	Z_TYPE_P ( op1 ) != IS_STRING		327280	1					
ANR	327311	Argument	Z_TYPE_P ( op1 ) != IS_STRING		327280	0					
ANR	327312	EqualityExpression	Z_TYPE_P ( op1 ) != IS_STRING		327280	0		!=			
ANR	327313	CallExpression	Z_TYPE_P ( op1 )		327280	0					
ANR	327314	Callee	Z_TYPE_P		327280	0					
ANR	327315	Identifier	Z_TYPE_P		327280	0					
ANR	327316	ArgumentList	op1		327280	1					
ANR	327317	Argument	op1		327280	0					
ANR	327318	Identifier	op1		327280	0					
ANR	327319	Identifier	IS_STRING		327280	1					
ANR	327320	CompoundStatement		6:47:116:116	327280	1					
ANR	327321	IfStatement	if ( Z_ISREF_P ( op1 ) )		327280	0					
ANR	327322	Condition	Z_ISREF_P ( op1 )	1600:8:40732:40745	327280	0	True				
ANR	327323	CallExpression	Z_ISREF_P ( op1 )		327280	0					
ANR	327324	Callee	Z_ISREF_P		327280	0					
ANR	327325	Identifier	Z_ISREF_P		327280	0					
ANR	327326	ArgumentList	op1		327280	1					
ANR	327327	Argument	op1		327280	0					
ANR	327328	Identifier	op1		327280	0					
ANR	327329	CompoundStatement		7:24:142:142	327280	1					
ANR	327330	ExpressionStatement	op1 = Z_REFVAL_P ( op1 )	1601:5:40755:40776	327280	0	True				
ANR	327331	AssignmentExpression	op1 = Z_REFVAL_P ( op1 )		327280	0		=			
ANR	327332	Identifier	op1		327280	0					
ANR	327333	CallExpression	Z_REFVAL_P ( op1 )		327280	1					
ANR	327334	Callee	Z_REFVAL_P		327280	0					
ANR	327335	Identifier	Z_REFVAL_P		327280	0					
ANR	327336	ArgumentList	op1		327280	1					
ANR	327337	Argument	op1		327280	0					
ANR	327338	Identifier	op1		327280	0					
ANR	327339	IfStatement	if ( Z_TYPE_P ( op1 ) == IS_STRING )		327280	1					
ANR	327340	Condition	Z_TYPE_P ( op1 ) == IS_STRING	1602:9:40787:40812	327280	0	True				
ANR	327341	EqualityExpression	Z_TYPE_P ( op1 ) == IS_STRING		327280	0		==			
ANR	327342	CallExpression	Z_TYPE_P ( op1 )		327280	0					
ANR	327343	Callee	Z_TYPE_P		327280	0					
ANR	327344	Identifier	Z_TYPE_P		327280	0					
ANR	327345	ArgumentList	op1		327280	1					
ANR	327346	Argument	op1		327280	0					
ANR	327347	Identifier	op1		327280	0					
ANR	327348	Identifier	IS_STRING		327280	1					
ANR	327349	BreakStatement	break ;	1602:37:40815:40820	327280	1	True				
ANR	327350	ExpressionStatement	"ZEND_TRY_BINARY_OBJECT_OPERATION ( ZEND_CONCAT , concat_function )"	1604:3:40831:40893	327280	1	True				
ANR	327351	CallExpression	"ZEND_TRY_BINARY_OBJECT_OPERATION ( ZEND_CONCAT , concat_function )"		327280	0					
ANR	327352	Callee	ZEND_TRY_BINARY_OBJECT_OPERATION		327280	0					
ANR	327353	Identifier	ZEND_TRY_BINARY_OBJECT_OPERATION		327280	0					
ANR	327354	ArgumentList	ZEND_CONCAT		327280	1					
ANR	327355	Argument	ZEND_CONCAT		327280	0					
ANR	327356	Identifier	ZEND_CONCAT		327280	0					
ANR	327357	Argument	concat_function		327280	1					
ANR	327358	Identifier	concat_function		327280	0					
ANR	327359	ExpressionStatement	"use_copy1 = zend_make_printable_zval ( op1 , & op1_copy )"	1605:3:40898:40950	327280	2	True				
ANR	327360	AssignmentExpression	"use_copy1 = zend_make_printable_zval ( op1 , & op1_copy )"		327280	0		=			
ANR	327361	Identifier	use_copy1		327280	0					
ANR	327362	CallExpression	"zend_make_printable_zval ( op1 , & op1_copy )"		327280	1					
ANR	327363	Callee	zend_make_printable_zval		327280	0					
ANR	327364	Identifier	zend_make_printable_zval		327280	0					
ANR	327365	ArgumentList	op1		327280	1					
ANR	327366	Argument	op1		327280	0					
ANR	327367	Identifier	op1		327280	0					
ANR	327368	Argument	& op1_copy		327280	1					
ANR	327369	UnaryOperationExpression	& op1_copy		327280	0					
ANR	327370	UnaryOperator	&		327280	0					
ANR	327371	Identifier	op1_copy		327280	1					
ANR	327372	IfStatement	if ( use_copy1 )		327280	3					
ANR	327373	Condition	use_copy1	1606:7:40959:40967	327280	0	True				
ANR	327374	Identifier	use_copy1		327280	0					
ANR	327375	CompoundStatement		13:18:364:364	327280	1					
ANR	327376	IfStatement	if ( result == op1 )		327280	0					
ANR	327377	Condition	result == op1	1610:8:41105:41117	327280	0	True				
ANR	327378	EqualityExpression	result == op1		327280	0		==			
ANR	327379	Identifier	result		327280	0					
ANR	327380	Identifier	op1		327280	1					
ANR	327381	CompoundStatement		17:23:514:514	327280	1					
ANR	327382	ExpressionStatement	zval_dtor ( op1 )	1611:5:41127:41141	327280	0	True				
ANR	327383	CallExpression	zval_dtor ( op1 )		327280	0					
ANR	327384	Callee	zval_dtor		327280	0					
ANR	327385	Identifier	zval_dtor		327280	0					
ANR	327386	ArgumentList	op1		327280	1					
ANR	327387	Argument	op1		327280	0					
ANR	327388	Identifier	op1		327280	0					
ANR	327389	IfStatement	if ( UNEXPECTED ( op1 == op2 ) )		327280	1					
ANR	327390	Condition	UNEXPECTED ( op1 == op2 )	1612:9:41152:41173	327280	0	True				
ANR	327391	CallExpression	UNEXPECTED ( op1 == op2 )		327280	0					
ANR	327392	Callee	UNEXPECTED		327280	0					
ANR	327393	Identifier	UNEXPECTED		327280	0					
ANR	327394	ArgumentList	op1 == op2		327280	1					
ANR	327395	Argument	op1 == op2		327280	0					
ANR	327396	EqualityExpression	op1 == op2		327280	0		==			
ANR	327397	Identifier	op1		327280	0					
ANR	327398	Identifier	op2		327280	1					
ANR	327399	CompoundStatement		19:33:570:570	327280	1					
ANR	327400	ExpressionStatement	op2 = & op1_copy	1613:6:41184:41199	327280	0	True				
ANR	327401	AssignmentExpression	op2 = & op1_copy		327280	0		=			
ANR	327402	Identifier	op2		327280	0					
ANR	327403	UnaryOperationExpression	& op1_copy		327280	1					
ANR	327404	UnaryOperator	&		327280	0					
ANR	327405	Identifier	op1_copy		327280	1					
ANR	327406	ExpressionStatement	op1 = & op1_copy	1616:4:41218:41233	327280	1	True				
ANR	327407	AssignmentExpression	op1 = & op1_copy		327280	0		=			
ANR	327408	Identifier	op1		327280	0					
ANR	327409	UnaryOperationExpression	& op1_copy		327280	1					
ANR	327410	UnaryOperator	&		327280	0					
ANR	327411	Identifier	op1_copy		327280	1					
ANR	327412	Condition	0	1619:10:41254:41254	327280	1	True				
ANR	327413	PrimaryExpression	0		327280	0					
ANR	327414	DoStatement	do		327280	3					
ANR	327415	CompoundStatement		27:4:656:656	327280	0					
ANR	327416	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( op2 ) != IS_STRING ) )		327280	0					
ANR	327417	Condition	UNEXPECTED ( Z_TYPE_P ( op2 ) != IS_STRING )	1621:6:41270:41307	327280	0	True				
ANR	327418	CallExpression	UNEXPECTED ( Z_TYPE_P ( op2 ) != IS_STRING )		327280	0					
ANR	327419	Callee	UNEXPECTED		327280	0					
ANR	327420	Identifier	UNEXPECTED		327280	0					
ANR	327421	ArgumentList	Z_TYPE_P ( op2 ) != IS_STRING		327280	1					
ANR	327422	Argument	Z_TYPE_P ( op2 ) != IS_STRING		327280	0					
ANR	327423	EqualityExpression	Z_TYPE_P ( op2 ) != IS_STRING		327280	0		!=			
ANR	327424	CallExpression	Z_TYPE_P ( op2 )		327280	0					
ANR	327425	Callee	Z_TYPE_P		327280	0					
ANR	327426	Identifier	Z_TYPE_P		327280	0					
ANR	327427	ArgumentList	op2		327280	1					
ANR	327428	Argument	op2		327280	0					
ANR	327429	Identifier	op2		327280	0					
ANR	327430	Identifier	IS_STRING		327280	1					
ANR	327431	CompoundStatement		28:46:704:704	327280	1					
ANR	327432	IfStatement	if ( Z_ISREF_P ( op2 ) )		327280	0					
ANR	327433	Condition	Z_ISREF_P ( op2 )	1622:8:41320:41333	327280	0	True				
ANR	327434	CallExpression	Z_ISREF_P ( op2 )		327280	0					
ANR	327435	Callee	Z_ISREF_P		327280	0					
ANR	327436	Identifier	Z_ISREF_P		327280	0					
ANR	327437	ArgumentList	op2		327280	1					
ANR	327438	Argument	op2		327280	0					
ANR	327439	Identifier	op2		327280	0					
ANR	327440	CompoundStatement		29:24:730:730	327280	1					
ANR	327441	ExpressionStatement	op2 = Z_REFVAL_P ( op2 )	1623:5:41343:41364	327280	0	True				
ANR	327442	AssignmentExpression	op2 = Z_REFVAL_P ( op2 )		327280	0		=			
ANR	327443	Identifier	op2		327280	0					
ANR	327444	CallExpression	Z_REFVAL_P ( op2 )		327280	1					
ANR	327445	Callee	Z_REFVAL_P		327280	0					
ANR	327446	Identifier	Z_REFVAL_P		327280	0					
ANR	327447	ArgumentList	op2		327280	1					
ANR	327448	Argument	op2		327280	0					
ANR	327449	Identifier	op2		327280	0					
ANR	327450	IfStatement	if ( Z_TYPE_P ( op2 ) == IS_STRING )		327280	1					
ANR	327451	Condition	Z_TYPE_P ( op2 ) == IS_STRING	1624:9:41375:41400	327280	0	True				
ANR	327452	EqualityExpression	Z_TYPE_P ( op2 ) == IS_STRING		327280	0		==			
ANR	327453	CallExpression	Z_TYPE_P ( op2 )		327280	0					
ANR	327454	Callee	Z_TYPE_P		327280	0					
ANR	327455	Identifier	Z_TYPE_P		327280	0					
ANR	327456	ArgumentList	op2		327280	1					
ANR	327457	Argument	op2		327280	0					
ANR	327458	Identifier	op2		327280	0					
ANR	327459	Identifier	IS_STRING		327280	1					
ANR	327460	BreakStatement	break ;	1624:37:41403:41408	327280	1	True				
ANR	327461	ExpressionStatement	ZEND_TRY_BINARY_OP2_OBJECT_OPERATION ( ZEND_CONCAT )	1626:3:41419:41468	327280	1	True				
ANR	327462	CallExpression	ZEND_TRY_BINARY_OP2_OBJECT_OPERATION ( ZEND_CONCAT )		327280	0					
ANR	327463	Callee	ZEND_TRY_BINARY_OP2_OBJECT_OPERATION		327280	0					
ANR	327464	Identifier	ZEND_TRY_BINARY_OP2_OBJECT_OPERATION		327280	0					
ANR	327465	ArgumentList	ZEND_CONCAT		327280	1					
ANR	327466	Argument	ZEND_CONCAT		327280	0					
ANR	327467	Identifier	ZEND_CONCAT		327280	0					
ANR	327468	ExpressionStatement	"use_copy2 = zend_make_printable_zval ( op2 , & op2_copy )"	1627:3:41473:41525	327280	2	True				
ANR	327469	AssignmentExpression	"use_copy2 = zend_make_printable_zval ( op2 , & op2_copy )"		327280	0		=			
ANR	327470	Identifier	use_copy2		327280	0					
ANR	327471	CallExpression	"zend_make_printable_zval ( op2 , & op2_copy )"		327280	1					
ANR	327472	Callee	zend_make_printable_zval		327280	0					
ANR	327473	Identifier	zend_make_printable_zval		327280	0					
ANR	327474	ArgumentList	op2		327280	1					
ANR	327475	Argument	op2		327280	0					
ANR	327476	Identifier	op2		327280	0					
ANR	327477	Argument	& op2_copy		327280	1					
ANR	327478	UnaryOperationExpression	& op2_copy		327280	0					
ANR	327479	UnaryOperator	&		327280	0					
ANR	327480	Identifier	op2_copy		327280	1					
ANR	327481	IfStatement	if ( use_copy2 )		327280	3					
ANR	327482	Condition	use_copy2	1628:7:41534:41542	327280	0	True				
ANR	327483	Identifier	use_copy2		327280	0					
ANR	327484	CompoundStatement		35:18:939:939	327280	1					
ANR	327485	ExpressionStatement	op2 = & op2_copy	1629:4:41551:41566	327280	0	True				
ANR	327486	AssignmentExpression	op2 = & op2_copy		327280	0		=			
ANR	327487	Identifier	op2		327280	0					
ANR	327488	UnaryOperationExpression	& op2_copy		327280	1					
ANR	327489	UnaryOperator	&		327280	0					
ANR	327490	Identifier	op2_copy		327280	1					
ANR	327491	Condition	0	1632:10:41587:41587	327280	1	True				
ANR	327492	PrimaryExpression	0		327280	0					
ANR	327493	CompoundStatement		45:2:1104:1127	327280	4					
ANR	327494	IdentifierDeclStatement	size_t op1_len = Z_STRLEN_P ( op1 ) ;	1635:2:41597:41629	327280	0	True				
ANR	327495	IdentifierDecl	op1_len = Z_STRLEN_P ( op1 )		327280	0					
ANR	327496	IdentifierDeclType	size_t		327280	0					
ANR	327497	Identifier	op1_len		327280	1					
ANR	327498	AssignmentExpression	op1_len = Z_STRLEN_P ( op1 )		327280	2		=			
ANR	327499	Identifier	op1_len		327280	0					
ANR	327500	CallExpression	Z_STRLEN_P ( op1 )		327280	1					
ANR	327501	Callee	Z_STRLEN_P		327280	0					
ANR	327502	Identifier	Z_STRLEN_P		327280	0					
ANR	327503	ArgumentList	op1		327280	1					
ANR	327504	Argument	op1		327280	0					
ANR	327505	Identifier	op1		327280	0					
ANR	327506	IdentifierDeclStatement	size_t op2_len = Z_STRLEN_P ( op2 ) ;	1636:2:41633:41665	327280	1	True				
ANR	327507	IdentifierDecl	op2_len = Z_STRLEN_P ( op2 )		327280	0					
ANR	327508	IdentifierDeclType	size_t		327280	0					
ANR	327509	Identifier	op2_len		327280	1					
ANR	327510	AssignmentExpression	op2_len = Z_STRLEN_P ( op2 )		327280	2		=			
ANR	327511	Identifier	op2_len		327280	0					
ANR	327512	CallExpression	Z_STRLEN_P ( op2 )		327280	1					
ANR	327513	Callee	Z_STRLEN_P		327280	0					
ANR	327514	Identifier	Z_STRLEN_P		327280	0					
ANR	327515	ArgumentList	op2		327280	1					
ANR	327516	Argument	op2		327280	0					
ANR	327517	Identifier	op2		327280	0					
ANR	327518	IdentifierDeclStatement	size_t result_len = op1_len + op2_len ;	1637:2:41669:41706	327280	2	True				
ANR	327519	IdentifierDecl	result_len = op1_len + op2_len		327280	0					
ANR	327520	IdentifierDeclType	size_t		327280	0					
ANR	327521	Identifier	result_len		327280	1					
ANR	327522	AssignmentExpression	result_len = op1_len + op2_len		327280	2		=			
ANR	327523	Identifier	result_len		327280	0					
ANR	327524	AdditiveExpression	op1_len + op2_len		327280	1		+			
ANR	327525	Identifier	op1_len		327280	0					
ANR	327526	Identifier	op2_len		327280	1					
ANR	327527	IdentifierDeclStatement	zend_string * result_str ;	1638:2:41710:41733	327280	3	True				
ANR	327528	IdentifierDecl	* result_str		327280	0					
ANR	327529	IdentifierDeclType	zend_string *		327280	0					
ANR	327530	Identifier	result_str		327280	1					
ANR	327531	IfStatement	if ( UNEXPECTED ( op1_len > SIZE_MAX - op2_len ) )		327280	4					
ANR	327532	Condition	UNEXPECTED ( op1_len > SIZE_MAX - op2_len )	1640:6:41742:41781	327280	0	True				
ANR	327533	CallExpression	UNEXPECTED ( op1_len > SIZE_MAX - op2_len )		327280	0					
ANR	327534	Callee	UNEXPECTED		327280	0					
ANR	327535	Identifier	UNEXPECTED		327280	0					
ANR	327536	ArgumentList	op1_len > SIZE_MAX - op2_len		327280	1					
ANR	327537	Argument	op1_len > SIZE_MAX - op2_len		327280	0					
ANR	327538	RelationalExpression	op1_len > SIZE_MAX - op2_len		327280	0		>			
ANR	327539	Identifier	op1_len		327280	0					
ANR	327540	AdditiveExpression	SIZE_MAX - op2_len		327280	1		-			
ANR	327541	Identifier	SIZE_MAX		327280	0					
ANR	327542	Identifier	op2_len		327280	1					
ANR	327543	CompoundStatement		47:48:1178:1178	327280	1					
ANR	327544	ExpressionStatement	"zend_throw_error ( NULL , ""String size overflow"" )"	1641:3:41789:41835	327280	0	True				
ANR	327545	CallExpression	"zend_throw_error ( NULL , ""String size overflow"" )"		327280	0					
ANR	327546	Callee	zend_throw_error		327280	0					
ANR	327547	Identifier	zend_throw_error		327280	0					
ANR	327548	ArgumentList	NULL		327280	1					
ANR	327549	Argument	NULL		327280	0					
ANR	327550	Identifier	NULL		327280	0					
ANR	327551	Argument	"""String size overflow"""		327280	1					
ANR	327552	PrimaryExpression	"""String size overflow"""		327280	0					
ANR	327553	ExpressionStatement	ZVAL_FALSE ( result )	1642:3:41840:41858	327280	1	True				
ANR	327554	CallExpression	ZVAL_FALSE ( result )		327280	0					
ANR	327555	Callee	ZVAL_FALSE		327280	0					
ANR	327556	Identifier	ZVAL_FALSE		327280	0					
ANR	327557	ArgumentList	result		327280	1					
ANR	327558	Argument	result		327280	0					
ANR	327559	Identifier	result		327280	0					
ANR	327560	ReturnStatement	return FAILURE ;	1643:3:41863:41877	327280	2	True				
ANR	327561	Identifier	FAILURE		327280	0					
ANR	327562	IfStatement	if ( result == op1 && Z_REFCOUNTED_P ( result ) )		327280	5					
ANR	327563	Condition	result == op1 && Z_REFCOUNTED_P ( result )	1646:6:41890:41928	327280	0	True				
ANR	327564	AndExpression	result == op1 && Z_REFCOUNTED_P ( result )		327280	0		&&			
ANR	327565	EqualityExpression	result == op1		327280	0		==			
ANR	327566	Identifier	result		327280	0					
ANR	327567	Identifier	op1		327280	1					
ANR	327568	CallExpression	Z_REFCOUNTED_P ( result )		327280	1					
ANR	327569	Callee	Z_REFCOUNTED_P		327280	0					
ANR	327570	Identifier	Z_REFCOUNTED_P		327280	0					
ANR	327571	ArgumentList	result		327280	1					
ANR	327572	Argument	result		327280	0					
ANR	327573	Identifier	result		327280	0					
ANR	327574	CompoundStatement		53:47:1325:1325	327280	1					
ANR	327575	ExpressionStatement	"result_str = zend_string_extend ( Z_STR_P ( result ) , result_len , 0 )"	1648:3:41988:42051	327280	0	True				
ANR	327576	AssignmentExpression	"result_str = zend_string_extend ( Z_STR_P ( result ) , result_len , 0 )"		327280	0		=			
ANR	327577	Identifier	result_str		327280	0					
ANR	327578	CallExpression	"zend_string_extend ( Z_STR_P ( result ) , result_len , 0 )"		327280	1					
ANR	327579	Callee	zend_string_extend		327280	0					
ANR	327580	Identifier	zend_string_extend		327280	0					
ANR	327581	ArgumentList	Z_STR_P ( result )		327280	1					
ANR	327582	Argument	Z_STR_P ( result )		327280	0					
ANR	327583	CallExpression	Z_STR_P ( result )		327280	0					
ANR	327584	Callee	Z_STR_P		327280	0					
ANR	327585	Identifier	Z_STR_P		327280	0					
ANR	327586	ArgumentList	result		327280	1					
ANR	327587	Argument	result		327280	0					
ANR	327588	Identifier	result		327280	0					
ANR	327589	Argument	result_len		327280	1					
ANR	327590	Identifier	result_len		327280	0					
ANR	327591	Argument	0		327280	2					
ANR	327592	PrimaryExpression	0		327280	0					
ANR	327593	ElseStatement	else		327280	0					
ANR	327594	CompoundStatement		56:9:1456:1456	327280	0					
ANR	327595	ExpressionStatement	"result_str = zend_string_alloc ( result_len , 0 )"	1650:3:42067:42112	327280	0	True				
ANR	327596	AssignmentExpression	"result_str = zend_string_alloc ( result_len , 0 )"		327280	0		=			
ANR	327597	Identifier	result_str		327280	0					
ANR	327598	CallExpression	"zend_string_alloc ( result_len , 0 )"		327280	1					
ANR	327599	Callee	zend_string_alloc		327280	0					
ANR	327600	Identifier	zend_string_alloc		327280	0					
ANR	327601	ArgumentList	result_len		327280	1					
ANR	327602	Argument	result_len		327280	0					
ANR	327603	Identifier	result_len		327280	0					
ANR	327604	Argument	0		327280	1					
ANR	327605	PrimaryExpression	0		327280	0					
ANR	327606	ExpressionStatement	"memcpy ( ZSTR_VAL ( result_str ) , Z_STRVAL_P ( op1 ) , op1_len )"	1651:3:42117:42171	327280	1	True				
ANR	327607	CallExpression	"memcpy ( ZSTR_VAL ( result_str ) , Z_STRVAL_P ( op1 ) , op1_len )"		327280	0					
ANR	327608	Callee	memcpy		327280	0					
ANR	327609	Identifier	memcpy		327280	0					
ANR	327610	ArgumentList	ZSTR_VAL ( result_str )		327280	1					
ANR	327611	Argument	ZSTR_VAL ( result_str )		327280	0					
ANR	327612	CallExpression	ZSTR_VAL ( result_str )		327280	0					
ANR	327613	Callee	ZSTR_VAL		327280	0					
ANR	327614	Identifier	ZSTR_VAL		327280	0					
ANR	327615	ArgumentList	result_str		327280	1					
ANR	327616	Argument	result_str		327280	0					
ANR	327617	Identifier	result_str		327280	0					
ANR	327618	Argument	Z_STRVAL_P ( op1 )		327280	1					
ANR	327619	CallExpression	Z_STRVAL_P ( op1 )		327280	0					
ANR	327620	Callee	Z_STRVAL_P		327280	0					
ANR	327621	Identifier	Z_STRVAL_P		327280	0					
ANR	327622	ArgumentList	op1		327280	1					
ANR	327623	Argument	op1		327280	0					
ANR	327624	Identifier	op1		327280	0					
ANR	327625	Argument	op1_len		327280	2					
ANR	327626	Identifier	op1_len		327280	0					
ANR	327627	ExpressionStatement	"ZVAL_NEW_STR ( result , result_str )"	1657:2:42442:42474	327280	6	True				
ANR	327628	CallExpression	"ZVAL_NEW_STR ( result , result_str )"		327280	0					
ANR	327629	Callee	ZVAL_NEW_STR		327280	0					
ANR	327630	Identifier	ZVAL_NEW_STR		327280	0					
ANR	327631	ArgumentList	result		327280	1					
ANR	327632	Argument	result		327280	0					
ANR	327633	Identifier	result		327280	0					
ANR	327634	Argument	result_str		327280	1					
ANR	327635	Identifier	result_str		327280	0					
ANR	327636	ExpressionStatement	"memcpy ( ZSTR_VAL ( result_str ) + op1_len , Z_STRVAL_P ( op2 ) , op2_len )"	1659:2:42479:42543	327280	7	True				
ANR	327637	CallExpression	"memcpy ( ZSTR_VAL ( result_str ) + op1_len , Z_STRVAL_P ( op2 ) , op2_len )"		327280	0					
ANR	327638	Callee	memcpy		327280	0					
ANR	327639	Identifier	memcpy		327280	0					
ANR	327640	ArgumentList	ZSTR_VAL ( result_str ) + op1_len		327280	1					
ANR	327641	Argument	ZSTR_VAL ( result_str ) + op1_len		327280	0					
ANR	327642	AdditiveExpression	ZSTR_VAL ( result_str ) + op1_len		327280	0		+			
ANR	327643	CallExpression	ZSTR_VAL ( result_str )		327280	0					
ANR	327644	Callee	ZSTR_VAL		327280	0					
ANR	327645	Identifier	ZSTR_VAL		327280	0					
ANR	327646	ArgumentList	result_str		327280	1					
ANR	327647	Argument	result_str		327280	0					
ANR	327648	Identifier	result_str		327280	0					
ANR	327649	Identifier	op1_len		327280	1					
ANR	327650	Argument	Z_STRVAL_P ( op2 )		327280	1					
ANR	327651	CallExpression	Z_STRVAL_P ( op2 )		327280	0					
ANR	327652	Callee	Z_STRVAL_P		327280	0					
ANR	327653	Identifier	Z_STRVAL_P		327280	0					
ANR	327654	ArgumentList	op2		327280	1					
ANR	327655	Argument	op2		327280	0					
ANR	327656	Identifier	op2		327280	0					
ANR	327657	Argument	op2_len		327280	2					
ANR	327658	Identifier	op2_len		327280	0					
ANR	327659	ExpressionStatement	ZSTR_VAL ( result_str ) [ result_len ] = '\\0'	1660:2:42547:42586	327280	8	True				
ANR	327660	AssignmentExpression	ZSTR_VAL ( result_str ) [ result_len ] = '\\0'		327280	0		=			
ANR	327661	ArrayIndexing	ZSTR_VAL ( result_str ) [ result_len ]		327280	0					
ANR	327662	CallExpression	ZSTR_VAL ( result_str )		327280	0					
ANR	327663	Callee	ZSTR_VAL		327280	0					
ANR	327664	Identifier	ZSTR_VAL		327280	0					
ANR	327665	ArgumentList	result_str		327280	1					
ANR	327666	Argument	result_str		327280	0					
ANR	327667	Identifier	result_str		327280	0					
ANR	327668	Identifier	result_len		327280	1					
ANR	327669	PrimaryExpression	'\\0'		327280	1					
ANR	327670	IfStatement	if ( UNEXPECTED ( use_copy1 ) )		327280	5					
ANR	327671	Condition	UNEXPECTED ( use_copy1 )	1663:5:42597:42617	327280	0	True				
ANR	327672	CallExpression	UNEXPECTED ( use_copy1 )		327280	0					
ANR	327673	Callee	UNEXPECTED		327280	0					
ANR	327674	Identifier	UNEXPECTED		327280	0					
ANR	327675	ArgumentList	use_copy1		327280	1					
ANR	327676	Argument	use_copy1		327280	0					
ANR	327677	Identifier	use_copy1		327280	0					
ANR	327678	CompoundStatement		70:28:2014:2014	327280	1					
ANR	327679	ExpressionStatement	zval_dtor ( op1 )	1664:2:42624:42638	327280	0	True				
ANR	327680	CallExpression	zval_dtor ( op1 )		327280	0					
ANR	327681	Callee	zval_dtor		327280	0					
ANR	327682	Identifier	zval_dtor		327280	0					
ANR	327683	ArgumentList	op1		327280	1					
ANR	327684	Argument	op1		327280	0					
ANR	327685	Identifier	op1		327280	0					
ANR	327686	IfStatement	if ( UNEXPECTED ( use_copy2 ) )		327280	6					
ANR	327687	Condition	UNEXPECTED ( use_copy2 )	1666:5:42648:42668	327280	0	True				
ANR	327688	CallExpression	UNEXPECTED ( use_copy2 )		327280	0					
ANR	327689	Callee	UNEXPECTED		327280	0					
ANR	327690	Identifier	UNEXPECTED		327280	0					
ANR	327691	ArgumentList	use_copy2		327280	1					
ANR	327692	Argument	use_copy2		327280	0					
ANR	327693	Identifier	use_copy2		327280	0					
ANR	327694	CompoundStatement		73:28:2065:2065	327280	1					
ANR	327695	ExpressionStatement	zval_dtor ( op2 )	1667:2:42675:42689	327280	0	True				
ANR	327696	CallExpression	zval_dtor ( op2 )		327280	0					
ANR	327697	Callee	zval_dtor		327280	0					
ANR	327698	Identifier	zval_dtor		327280	0					
ANR	327699	ArgumentList	op2		327280	1					
ANR	327700	Argument	op2		327280	0					
ANR	327701	Identifier	op2		327280	0					
ANR	327702	ReturnStatement	return SUCCESS ;	1669:1:42695:42709	327280	7	True				
ANR	327703	Identifier	SUCCESS		327280	0					
ANR	327704	ReturnType	ZEND_API int ZEND_FASTCALL		327280	1					
ANR	327705	Identifier	concat_function		327280	2					
ANR	327706	ParameterList	"zval * result , zval * op1 , zval * op2"		327280	3					
ANR	327707	Parameter	zval * result	1593:43:40559:40570	327280	0	True				
ANR	327708	ParameterType	zval *		327280	0					
ANR	327709	Identifier	result		327280	1					
ANR	327710	Parameter	zval * op1	1593:57:40573:40581	327280	1	True				
ANR	327711	ParameterType	zval *		327280	0					
ANR	327712	Identifier	op1		327280	1					
ANR	327713	Parameter	zval * op2	1593:68:40584:40592	327280	2	True				
ANR	327714	ParameterType	zval *		327280	0					
ANR	327715	Identifier	op2		327280	1					
ANR	327716	CFGEntryNode	ENTRY		327280		True				
ANR	327717	CFGExitNode	EXIT		327280		True				
ANR	327718	Symbol	zend_string_extend		327280						
ANR	327719	Symbol	* result_len		327280						
ANR	327720	Symbol	concat_function		327280						
ANR	327721	Symbol	op1_copy		327280						
ANR	327722	Symbol	& op1_copy		327280						
ANR	327723	Symbol	zend_make_printable_zval		327280						
ANR	327724	Symbol	result		327280						
ANR	327725	Symbol	UNEXPECTED		327280						
ANR	327726	Symbol	op1_len		327280						
ANR	327727	Symbol	op2_len		327280						
ANR	327728	Symbol	Z_STRLEN_P		327280						
ANR	327729	Symbol	op2_copy		327280						
ANR	327730	Symbol	IS_STRING		327280						
ANR	327731	Symbol	result_len		327280						
ANR	327732	Symbol	* ZSTR_VAL		327280						
ANR	327733	Symbol	result_str		327280						
ANR	327734	Symbol	use_copy1		327280						
ANR	327735	Symbol	zend_string_alloc		327280						
ANR	327736	Symbol	use_copy2		327280						
ANR	327737	Symbol	NULL		327280						
ANR	327738	Symbol	SUCCESS		327280						
ANR	327739	Symbol	Z_TYPE_P		327280						
ANR	327740	Symbol	ZEND_CONCAT		327280						
ANR	327741	Symbol	FAILURE		327280						
ANR	327742	Symbol	Z_STRVAL_P		327280						
ANR	327743	Symbol	ZSTR_VAL		327280						
ANR	327744	Symbol	op2		327280						
ANR	327745	Symbol	op1		327280						
ANR	327746	Symbol	& op2_copy		327280						
ANR	327747	Symbol	SIZE_MAX		327280						
ANR	327748	Symbol	Z_REFVAL_P		327280						
ANR	327749	Symbol	Z_REFCOUNTED_P		327280						
ANR	327750	Symbol	Z_STR_P		327280						
ANR	327751	Symbol	Z_ISREF_P		327280						
ANR	327752	Function	string_compare_function_ex	1673:0:42724:43235							
ANR	327753	FunctionDef	"string_compare_function_ex (zval * op1 , zval * op2 , zend_bool case_insensitive)"		327752	0					
ANR	327754	CompoundStatement		1674:0:42838:43235	327752	0					
ANR	327755	IdentifierDeclStatement	zend_string * str1 = zval_get_string ( op1 ) ;	1675:1:42841:42881	327752	0	True				
ANR	327756	IdentifierDecl	* str1 = zval_get_string ( op1 )		327752	0					
ANR	327757	IdentifierDeclType	zend_string *		327752	0					
ANR	327758	Identifier	str1		327752	1					
ANR	327759	AssignmentExpression	* str1 = zval_get_string ( op1 )		327752	2		=			
ANR	327760	Identifier	str1		327752	0					
ANR	327761	CallExpression	zval_get_string ( op1 )		327752	1					
ANR	327762	Callee	zval_get_string		327752	0					
ANR	327763	Identifier	zval_get_string		327752	0					
ANR	327764	ArgumentList	op1		327752	1					
ANR	327765	Argument	op1		327752	0					
ANR	327766	Identifier	op1		327752	0					
ANR	327767	IdentifierDeclStatement	zend_string * str2 = zval_get_string ( op2 ) ;	1676:1:42884:42924	327752	1	True				
ANR	327768	IdentifierDecl	* str2 = zval_get_string ( op2 )		327752	0					
ANR	327769	IdentifierDeclType	zend_string *		327752	0					
ANR	327770	Identifier	str2		327752	1					
ANR	327771	AssignmentExpression	* str2 = zval_get_string ( op2 )		327752	2		=			
ANR	327772	Identifier	str2		327752	0					
ANR	327773	CallExpression	zval_get_string ( op2 )		327752	1					
ANR	327774	Callee	zval_get_string		327752	0					
ANR	327775	Identifier	zval_get_string		327752	0					
ANR	327776	ArgumentList	op2		327752	1					
ANR	327777	Argument	op2		327752	0					
ANR	327778	Identifier	op2		327752	0					
ANR	327779	IdentifierDeclStatement	int ret ;	1677:1:42927:42934	327752	2	True				
ANR	327780	IdentifierDecl	ret		327752	0					
ANR	327781	IdentifierDeclType	int		327752	0					
ANR	327782	Identifier	ret		327752	1					
ANR	327783	IfStatement	if ( case_insensitive )		327752	3					
ANR	327784	Condition	case_insensitive	1679:5:42942:42957	327752	0	True				
ANR	327785	Identifier	case_insensitive		327752	0					
ANR	327786	CompoundStatement		6:23:121:121	327752	1					
ANR	327787	ExpressionStatement	"ret = zend_binary_strcasecmp_l ( ZSTR_VAL ( str1 ) , ZSTR_LEN ( str1 ) , ZSTR_VAL ( str2 ) , ZSTR_LEN ( str1 ) )"	1680:2:42964:43058	327752	0	True				
ANR	327788	AssignmentExpression	"ret = zend_binary_strcasecmp_l ( ZSTR_VAL ( str1 ) , ZSTR_LEN ( str1 ) , ZSTR_VAL ( str2 ) , ZSTR_LEN ( str1 ) )"		327752	0		=			
ANR	327789	Identifier	ret		327752	0					
ANR	327790	CallExpression	"zend_binary_strcasecmp_l ( ZSTR_VAL ( str1 ) , ZSTR_LEN ( str1 ) , ZSTR_VAL ( str2 ) , ZSTR_LEN ( str1 ) )"		327752	1					
ANR	327791	Callee	zend_binary_strcasecmp_l		327752	0					
ANR	327792	Identifier	zend_binary_strcasecmp_l		327752	0					
ANR	327793	ArgumentList	ZSTR_VAL ( str1 )		327752	1					
ANR	327794	Argument	ZSTR_VAL ( str1 )		327752	0					
ANR	327795	CallExpression	ZSTR_VAL ( str1 )		327752	0					
ANR	327796	Callee	ZSTR_VAL		327752	0					
ANR	327797	Identifier	ZSTR_VAL		327752	0					
ANR	327798	ArgumentList	str1		327752	1					
ANR	327799	Argument	str1		327752	0					
ANR	327800	Identifier	str1		327752	0					
ANR	327801	Argument	ZSTR_LEN ( str1 )		327752	1					
ANR	327802	CallExpression	ZSTR_LEN ( str1 )		327752	0					
ANR	327803	Callee	ZSTR_LEN		327752	0					
ANR	327804	Identifier	ZSTR_LEN		327752	0					
ANR	327805	ArgumentList	str1		327752	1					
ANR	327806	Argument	str1		327752	0					
ANR	327807	Identifier	str1		327752	0					
ANR	327808	Argument	ZSTR_VAL ( str2 )		327752	2					
ANR	327809	CallExpression	ZSTR_VAL ( str2 )		327752	0					
ANR	327810	Callee	ZSTR_VAL		327752	0					
ANR	327811	Identifier	ZSTR_VAL		327752	0					
ANR	327812	ArgumentList	str2		327752	1					
ANR	327813	Argument	str2		327752	0					
ANR	327814	Identifier	str2		327752	0					
ANR	327815	Argument	ZSTR_LEN ( str1 )		327752	3					
ANR	327816	CallExpression	ZSTR_LEN ( str1 )		327752	0					
ANR	327817	Callee	ZSTR_LEN		327752	0					
ANR	327818	Identifier	ZSTR_LEN		327752	0					
ANR	327819	ArgumentList	str1		327752	1					
ANR	327820	Argument	str1		327752	0					
ANR	327821	Identifier	str1		327752	0					
ANR	327822	ElseStatement	else		327752	0					
ANR	327823	CompoundStatement		8:8:229:229	327752	0					
ANR	327824	ExpressionStatement	"ret = zend_binary_strcmp ( ZSTR_VAL ( str1 ) , ZSTR_LEN ( str1 ) , ZSTR_VAL ( str2 ) , ZSTR_LEN ( str2 ) )"	1682:2:43072:43160	327752	0	True				
ANR	327825	AssignmentExpression	"ret = zend_binary_strcmp ( ZSTR_VAL ( str1 ) , ZSTR_LEN ( str1 ) , ZSTR_VAL ( str2 ) , ZSTR_LEN ( str2 ) )"		327752	0		=			
ANR	327826	Identifier	ret		327752	0					
ANR	327827	CallExpression	"zend_binary_strcmp ( ZSTR_VAL ( str1 ) , ZSTR_LEN ( str1 ) , ZSTR_VAL ( str2 ) , ZSTR_LEN ( str2 ) )"		327752	1					
ANR	327828	Callee	zend_binary_strcmp		327752	0					
ANR	327829	Identifier	zend_binary_strcmp		327752	0					
ANR	327830	ArgumentList	ZSTR_VAL ( str1 )		327752	1					
ANR	327831	Argument	ZSTR_VAL ( str1 )		327752	0					
ANR	327832	CallExpression	ZSTR_VAL ( str1 )		327752	0					
ANR	327833	Callee	ZSTR_VAL		327752	0					
ANR	327834	Identifier	ZSTR_VAL		327752	0					
ANR	327835	ArgumentList	str1		327752	1					
ANR	327836	Argument	str1		327752	0					
ANR	327837	Identifier	str1		327752	0					
ANR	327838	Argument	ZSTR_LEN ( str1 )		327752	1					
ANR	327839	CallExpression	ZSTR_LEN ( str1 )		327752	0					
ANR	327840	Callee	ZSTR_LEN		327752	0					
ANR	327841	Identifier	ZSTR_LEN		327752	0					
ANR	327842	ArgumentList	str1		327752	1					
ANR	327843	Argument	str1		327752	0					
ANR	327844	Identifier	str1		327752	0					
ANR	327845	Argument	ZSTR_VAL ( str2 )		327752	2					
ANR	327846	CallExpression	ZSTR_VAL ( str2 )		327752	0					
ANR	327847	Callee	ZSTR_VAL		327752	0					
ANR	327848	Identifier	ZSTR_VAL		327752	0					
ANR	327849	ArgumentList	str2		327752	1					
ANR	327850	Argument	str2		327752	0					
ANR	327851	Identifier	str2		327752	0					
ANR	327852	Argument	ZSTR_LEN ( str2 )		327752	3					
ANR	327853	CallExpression	ZSTR_LEN ( str2 )		327752	0					
ANR	327854	Callee	ZSTR_LEN		327752	0					
ANR	327855	Identifier	ZSTR_LEN		327752	0					
ANR	327856	ArgumentList	str2		327752	1					
ANR	327857	Argument	str2		327752	0					
ANR	327858	Identifier	str2		327752	0					
ANR	327859	ExpressionStatement	zend_string_release ( str1 )	1685:1:43167:43192	327752	4	True				
ANR	327860	CallExpression	zend_string_release ( str1 )		327752	0					
ANR	327861	Callee	zend_string_release		327752	0					
ANR	327862	Identifier	zend_string_release		327752	0					
ANR	327863	ArgumentList	str1		327752	1					
ANR	327864	Argument	str1		327752	0					
ANR	327865	Identifier	str1		327752	0					
ANR	327866	ExpressionStatement	zend_string_release ( str2 )	1686:1:43195:43220	327752	5	True				
ANR	327867	CallExpression	zend_string_release ( str2 )		327752	0					
ANR	327868	Callee	zend_string_release		327752	0					
ANR	327869	Identifier	zend_string_release		327752	0					
ANR	327870	ArgumentList	str2		327752	1					
ANR	327871	Argument	str2		327752	0					
ANR	327872	Identifier	str2		327752	0					
ANR	327873	ReturnStatement	return ret ;	1687:1:43223:43233	327752	6	True				
ANR	327874	Identifier	ret		327752	0					
ANR	327875	ReturnType	ZEND_API int ZEND_FASTCALL		327752	1					
ANR	327876	Identifier	string_compare_function_ex		327752	2					
ANR	327877	ParameterList	"zval * op1 , zval * op2 , zend_bool case_insensitive"		327752	3					
ANR	327878	Parameter	zval * op1	1673:54:42778:42786	327752	0	True				
ANR	327879	ParameterType	zval *		327752	0					
ANR	327880	Identifier	op1		327752	1					
ANR	327881	Parameter	zval * op2	1673:65:42789:42797	327752	1	True				
ANR	327882	ParameterType	zval *		327752	0					
ANR	327883	Identifier	op2		327752	1					
ANR	327884	Parameter	zend_bool case_insensitive	1673:76:42800:42825	327752	2	True				
ANR	327885	ParameterType	zend_bool		327752	0					
ANR	327886	Identifier	case_insensitive		327752	1					
ANR	327887	CFGEntryNode	ENTRY		327752		True				
ANR	327888	CFGExitNode	EXIT		327752		True				
ANR	327889	Symbol	op2		327752						
ANR	327890	Symbol	ret		327752						
ANR	327891	Symbol	zend_binary_strcmp		327752						
ANR	327892	Symbol	op1		327752						
ANR	327893	Symbol	zend_binary_strcasecmp_l		327752						
ANR	327894	Symbol	case_insensitive		327752						
ANR	327895	Symbol	str1		327752						
ANR	327896	Symbol	str2		327752						
ANR	327897	Symbol	ZSTR_LEN		327752						
ANR	327898	Symbol	zval_get_string		327752						
ANR	327899	Symbol	ZSTR_VAL		327752						
ANR	327900	Function	string_compare_function	1691:0:43248:43857							
ANR	327901	FunctionDef	"string_compare_function (zval * op1 , zval * op2)"		327900	0					
ANR	327902	CompoundStatement		1692:0:43331:43857	327900	0					
ANR	327903	IfStatement	if ( EXPECTED ( Z_TYPE_P ( op1 ) == IS_STRING ) && EXPECTED ( Z_TYPE_P ( op2 ) == IS_STRING ) )		327900	0					
ANR	327904	Condition	EXPECTED ( Z_TYPE_P ( op1 ) == IS_STRING ) && EXPECTED ( Z_TYPE_P ( op2 ) == IS_STRING )	1693:5:43338:43418	327900	0	True				
ANR	327905	AndExpression	EXPECTED ( Z_TYPE_P ( op1 ) == IS_STRING ) && EXPECTED ( Z_TYPE_P ( op2 ) == IS_STRING )		327900	0		&&			
ANR	327906	CallExpression	EXPECTED ( Z_TYPE_P ( op1 ) == IS_STRING )		327900	0					
ANR	327907	Callee	EXPECTED		327900	0					
ANR	327908	Identifier	EXPECTED		327900	0					
ANR	327909	ArgumentList	Z_TYPE_P ( op1 ) == IS_STRING		327900	1					
ANR	327910	Argument	Z_TYPE_P ( op1 ) == IS_STRING		327900	0					
ANR	327911	EqualityExpression	Z_TYPE_P ( op1 ) == IS_STRING		327900	0		==			
ANR	327912	CallExpression	Z_TYPE_P ( op1 )		327900	0					
ANR	327913	Callee	Z_TYPE_P		327900	0					
ANR	327914	Identifier	Z_TYPE_P		327900	0					
ANR	327915	ArgumentList	op1		327900	1					
ANR	327916	Argument	op1		327900	0					
ANR	327917	Identifier	op1		327900	0					
ANR	327918	Identifier	IS_STRING		327900	1					
ANR	327919	CallExpression	EXPECTED ( Z_TYPE_P ( op2 ) == IS_STRING )		327900	1					
ANR	327920	Callee	EXPECTED		327900	0					
ANR	327921	Identifier	EXPECTED		327900	0					
ANR	327922	ArgumentList	Z_TYPE_P ( op2 ) == IS_STRING		327900	1					
ANR	327923	Argument	Z_TYPE_P ( op2 ) == IS_STRING		327900	0					
ANR	327924	EqualityExpression	Z_TYPE_P ( op2 ) == IS_STRING		327900	0		==			
ANR	327925	CallExpression	Z_TYPE_P ( op2 )		327900	0					
ANR	327926	Callee	Z_TYPE_P		327900	0					
ANR	327927	Identifier	Z_TYPE_P		327900	0					
ANR	327928	ArgumentList	op2		327900	1					
ANR	327929	Argument	op2		327900	0					
ANR	327930	Identifier	op2		327900	0					
ANR	327931	Identifier	IS_STRING		327900	1					
ANR	327932	CompoundStatement		3:43:89:89	327900	1					
ANR	327933	IfStatement	if ( Z_STR_P ( op1 ) == Z_STR_P ( op2 ) )		327900	0					
ANR	327934	Condition	Z_STR_P ( op1 ) == Z_STR_P ( op2 )	1695:6:43429:43456	327900	0	True				
ANR	327935	EqualityExpression	Z_STR_P ( op1 ) == Z_STR_P ( op2 )		327900	0		==			
ANR	327936	CallExpression	Z_STR_P ( op1 )		327900	0					
ANR	327937	Callee	Z_STR_P		327900	0					
ANR	327938	Identifier	Z_STR_P		327900	0					
ANR	327939	ArgumentList	op1		327900	1					
ANR	327940	Argument	op1		327900	0					
ANR	327941	Identifier	op1		327900	0					
ANR	327942	CallExpression	Z_STR_P ( op2 )		327900	1					
ANR	327943	Callee	Z_STR_P		327900	0					
ANR	327944	Identifier	Z_STR_P		327900	0					
ANR	327945	ArgumentList	op2		327900	1					
ANR	327946	Argument	op2		327900	0					
ANR	327947	Identifier	op2		327900	0					
ANR	327948	CompoundStatement		4:36:127:127	327900	1					
ANR	327949	ReturnStatement	return 0 ;	1696:3:43464:43472	327900	0	True				
ANR	327950	PrimaryExpression	0		327900	0					
ANR	327951	ElseStatement	else		327900	0					
ANR	327952	CompoundStatement		6:9:151:151	327900	0					
ANR	327953	ReturnStatement	"return zend_binary_strcmp ( Z_STRVAL_P ( op1 ) , Z_STRLEN_P ( op1 ) , Z_STRVAL_P ( op2 ) , Z_STRLEN_P ( op2 ) ) ;"	1698:3:43488:43581	327900	0	True				
ANR	327954	CallExpression	"zend_binary_strcmp ( Z_STRVAL_P ( op1 ) , Z_STRLEN_P ( op1 ) , Z_STRVAL_P ( op2 ) , Z_STRLEN_P ( op2 ) )"		327900	0					
ANR	327955	Callee	zend_binary_strcmp		327900	0					
ANR	327956	Identifier	zend_binary_strcmp		327900	0					
ANR	327957	ArgumentList	Z_STRVAL_P ( op1 )		327900	1					
ANR	327958	Argument	Z_STRVAL_P ( op1 )		327900	0					
ANR	327959	CallExpression	Z_STRVAL_P ( op1 )		327900	0					
ANR	327960	Callee	Z_STRVAL_P		327900	0					
ANR	327961	Identifier	Z_STRVAL_P		327900	0					
ANR	327962	ArgumentList	op1		327900	1					
ANR	327963	Argument	op1		327900	0					
ANR	327964	Identifier	op1		327900	0					
ANR	327965	Argument	Z_STRLEN_P ( op1 )		327900	1					
ANR	327966	CallExpression	Z_STRLEN_P ( op1 )		327900	0					
ANR	327967	Callee	Z_STRLEN_P		327900	0					
ANR	327968	Identifier	Z_STRLEN_P		327900	0					
ANR	327969	ArgumentList	op1		327900	1					
ANR	327970	Argument	op1		327900	0					
ANR	327971	Identifier	op1		327900	0					
ANR	327972	Argument	Z_STRVAL_P ( op2 )		327900	2					
ANR	327973	CallExpression	Z_STRVAL_P ( op2 )		327900	0					
ANR	327974	Callee	Z_STRVAL_P		327900	0					
ANR	327975	Identifier	Z_STRVAL_P		327900	0					
ANR	327976	ArgumentList	op2		327900	1					
ANR	327977	Argument	op2		327900	0					
ANR	327978	Identifier	op2		327900	0					
ANR	327979	Argument	Z_STRLEN_P ( op2 )		327900	3					
ANR	327980	CallExpression	Z_STRLEN_P ( op2 )		327900	0					
ANR	327981	Callee	Z_STRLEN_P		327900	0					
ANR	327982	Identifier	Z_STRLEN_P		327900	0					
ANR	327983	ArgumentList	op2		327900	1					
ANR	327984	Argument	op2		327900	0					
ANR	327985	Identifier	op2		327900	0					
ANR	327986	ElseStatement	else		327900	0					
ANR	327987	CompoundStatement		12:2:355:447	327900	0					
ANR	327988	IdentifierDeclStatement	zend_string * str1 = zval_get_string ( op1 ) ;	1701:2:43599:43639	327900	0	True				
ANR	327989	IdentifierDecl	* str1 = zval_get_string ( op1 )		327900	0					
ANR	327990	IdentifierDeclType	zend_string *		327900	0					
ANR	327991	Identifier	str1		327900	1					
ANR	327992	AssignmentExpression	* str1 = zval_get_string ( op1 )		327900	2		=			
ANR	327993	Identifier	str1		327900	0					
ANR	327994	CallExpression	zval_get_string ( op1 )		327900	1					
ANR	327995	Callee	zval_get_string		327900	0					
ANR	327996	Identifier	zval_get_string		327900	0					
ANR	327997	ArgumentList	op1		327900	1					
ANR	327998	Argument	op1		327900	0					
ANR	327999	Identifier	op1		327900	0					
ANR	328000	IdentifierDeclStatement	zend_string * str2 = zval_get_string ( op2 ) ;	1702:2:43643:43683	327900	1	True				
ANR	328001	IdentifierDecl	* str2 = zval_get_string ( op2 )		327900	0					
ANR	328002	IdentifierDeclType	zend_string *		327900	0					
ANR	328003	Identifier	str2		327900	1					
ANR	328004	AssignmentExpression	* str2 = zval_get_string ( op2 )		327900	2		=			
ANR	328005	Identifier	str2		327900	0					
ANR	328006	CallExpression	zval_get_string ( op2 )		327900	1					
ANR	328007	Callee	zval_get_string		327900	0					
ANR	328008	Identifier	zval_get_string		327900	0					
ANR	328009	ArgumentList	op2		327900	1					
ANR	328010	Argument	op2		327900	0					
ANR	328011	Identifier	op2		327900	0					
ANR	328012	IdentifierDeclStatement	"int ret = zend_binary_strcmp ( ZSTR_VAL ( str1 ) , ZSTR_LEN ( str1 ) , ZSTR_VAL ( str2 ) , ZSTR_LEN ( str2 ) ) ;"	1703:2:43687:43779	327900	2	True				
ANR	328013	IdentifierDecl	"ret = zend_binary_strcmp ( ZSTR_VAL ( str1 ) , ZSTR_LEN ( str1 ) , ZSTR_VAL ( str2 ) , ZSTR_LEN ( str2 ) )"		327900	0					
ANR	328014	IdentifierDeclType	int		327900	0					
ANR	328015	Identifier	ret		327900	1					
ANR	328016	AssignmentExpression	"ret = zend_binary_strcmp ( ZSTR_VAL ( str1 ) , ZSTR_LEN ( str1 ) , ZSTR_VAL ( str2 ) , ZSTR_LEN ( str2 ) )"		327900	2		=			
ANR	328017	Identifier	ret		327900	0					
ANR	328018	CallExpression	"zend_binary_strcmp ( ZSTR_VAL ( str1 ) , ZSTR_LEN ( str1 ) , ZSTR_VAL ( str2 ) , ZSTR_LEN ( str2 ) )"		327900	1					
ANR	328019	Callee	zend_binary_strcmp		327900	0					
ANR	328020	Identifier	zend_binary_strcmp		327900	0					
ANR	328021	ArgumentList	ZSTR_VAL ( str1 )		327900	1					
ANR	328022	Argument	ZSTR_VAL ( str1 )		327900	0					
ANR	328023	CallExpression	ZSTR_VAL ( str1 )		327900	0					
ANR	328024	Callee	ZSTR_VAL		327900	0					
ANR	328025	Identifier	ZSTR_VAL		327900	0					
ANR	328026	ArgumentList	str1		327900	1					
ANR	328027	Argument	str1		327900	0					
ANR	328028	Identifier	str1		327900	0					
ANR	328029	Argument	ZSTR_LEN ( str1 )		327900	1					
ANR	328030	CallExpression	ZSTR_LEN ( str1 )		327900	0					
ANR	328031	Callee	ZSTR_LEN		327900	0					
ANR	328032	Identifier	ZSTR_LEN		327900	0					
ANR	328033	ArgumentList	str1		327900	1					
ANR	328034	Argument	str1		327900	0					
ANR	328035	Identifier	str1		327900	0					
ANR	328036	Argument	ZSTR_VAL ( str2 )		327900	2					
ANR	328037	CallExpression	ZSTR_VAL ( str2 )		327900	0					
ANR	328038	Callee	ZSTR_VAL		327900	0					
ANR	328039	Identifier	ZSTR_VAL		327900	0					
ANR	328040	ArgumentList	str2		327900	1					
ANR	328041	Argument	str2		327900	0					
ANR	328042	Identifier	str2		327900	0					
ANR	328043	Argument	ZSTR_LEN ( str2 )		327900	3					
ANR	328044	CallExpression	ZSTR_LEN ( str2 )		327900	0					
ANR	328045	Callee	ZSTR_LEN		327900	0					
ANR	328046	Identifier	ZSTR_LEN		327900	0					
ANR	328047	ArgumentList	str2		327900	1					
ANR	328048	Argument	str2		327900	0					
ANR	328049	Identifier	str2		327900	0					
ANR	328050	ExpressionStatement	zend_string_release ( str1 )	1705:2:43784:43809	327900	3	True				
ANR	328051	CallExpression	zend_string_release ( str1 )		327900	0					
ANR	328052	Callee	zend_string_release		327900	0					
ANR	328053	Identifier	zend_string_release		327900	0					
ANR	328054	ArgumentList	str1		327900	1					
ANR	328055	Argument	str1		327900	0					
ANR	328056	Identifier	str1		327900	0					
ANR	328057	ExpressionStatement	zend_string_release ( str2 )	1706:2:43813:43838	327900	4	True				
ANR	328058	CallExpression	zend_string_release ( str2 )		327900	0					
ANR	328059	Callee	zend_string_release		327900	0					
ANR	328060	Identifier	zend_string_release		327900	0					
ANR	328061	ArgumentList	str2		327900	1					
ANR	328062	Argument	str2		327900	0					
ANR	328063	Identifier	str2		327900	0					
ANR	328064	ReturnStatement	return ret ;	1707:2:43842:43852	327900	5	True				
ANR	328065	Identifier	ret		327900	0					
ANR	328066	ReturnType	ZEND_API int ZEND_FASTCALL		327900	1					
ANR	328067	Identifier	string_compare_function		327900	2					
ANR	328068	ParameterList	"zval * op1 , zval * op2"		327900	3					
ANR	328069	Parameter	zval * op1	1691:51:43299:43307	327900	0	True				
ANR	328070	ParameterType	zval *		327900	0					
ANR	328071	Identifier	op1		327900	1					
ANR	328072	Parameter	zval * op2	1691:62:43310:43318	327900	1	True				
ANR	328073	ParameterType	zval *		327900	0					
ANR	328074	Identifier	op2		327900	1					
ANR	328075	CFGEntryNode	ENTRY		327900		True				
ANR	328076	CFGExitNode	EXIT		327900		True				
ANR	328077	Symbol	ret		327900						
ANR	328078	Symbol	zval_get_string		327900						
ANR	328079	Symbol	Z_TYPE_P		327900						
ANR	328080	Symbol	Z_STRVAL_P		327900						
ANR	328081	Symbol	ZSTR_VAL		327900						
ANR	328082	Symbol	op2		327900						
ANR	328083	Symbol	zend_binary_strcmp		327900						
ANR	328084	Symbol	op1		327900						
ANR	328085	Symbol	str1		327900						
ANR	328086	Symbol	str2		327900						
ANR	328087	Symbol	ZSTR_LEN		327900						
ANR	328088	Symbol	Z_STRLEN_P		327900						
ANR	328089	Symbol	IS_STRING		327900						
ANR	328090	Symbol	Z_STR_P		327900						
ANR	328091	Symbol	EXPECTED		327900						
ANR	328092	Function	string_case_compare_function	1712:0:43870:44496							
ANR	328093	FunctionDef	"string_case_compare_function (zval * op1 , zval * op2)"		328092	0					
ANR	328094	CompoundStatement		1713:0:43958:44496	328092	0					
ANR	328095	IfStatement	if ( EXPECTED ( Z_TYPE_P ( op1 ) == IS_STRING ) && EXPECTED ( Z_TYPE_P ( op2 ) == IS_STRING ) )		328092	0					
ANR	328096	Condition	EXPECTED ( Z_TYPE_P ( op1 ) == IS_STRING ) && EXPECTED ( Z_TYPE_P ( op2 ) == IS_STRING )	1714:5:43965:44045	328092	0	True				
ANR	328097	AndExpression	EXPECTED ( Z_TYPE_P ( op1 ) == IS_STRING ) && EXPECTED ( Z_TYPE_P ( op2 ) == IS_STRING )		328092	0		&&			
ANR	328098	CallExpression	EXPECTED ( Z_TYPE_P ( op1 ) == IS_STRING )		328092	0					
ANR	328099	Callee	EXPECTED		328092	0					
ANR	328100	Identifier	EXPECTED		328092	0					
ANR	328101	ArgumentList	Z_TYPE_P ( op1 ) == IS_STRING		328092	1					
ANR	328102	Argument	Z_TYPE_P ( op1 ) == IS_STRING		328092	0					
ANR	328103	EqualityExpression	Z_TYPE_P ( op1 ) == IS_STRING		328092	0		==			
ANR	328104	CallExpression	Z_TYPE_P ( op1 )		328092	0					
ANR	328105	Callee	Z_TYPE_P		328092	0					
ANR	328106	Identifier	Z_TYPE_P		328092	0					
ANR	328107	ArgumentList	op1		328092	1					
ANR	328108	Argument	op1		328092	0					
ANR	328109	Identifier	op1		328092	0					
ANR	328110	Identifier	IS_STRING		328092	1					
ANR	328111	CallExpression	EXPECTED ( Z_TYPE_P ( op2 ) == IS_STRING )		328092	1					
ANR	328112	Callee	EXPECTED		328092	0					
ANR	328113	Identifier	EXPECTED		328092	0					
ANR	328114	ArgumentList	Z_TYPE_P ( op2 ) == IS_STRING		328092	1					
ANR	328115	Argument	Z_TYPE_P ( op2 ) == IS_STRING		328092	0					
ANR	328116	EqualityExpression	Z_TYPE_P ( op2 ) == IS_STRING		328092	0		==			
ANR	328117	CallExpression	Z_TYPE_P ( op2 )		328092	0					
ANR	328118	Callee	Z_TYPE_P		328092	0					
ANR	328119	Identifier	Z_TYPE_P		328092	0					
ANR	328120	ArgumentList	op2		328092	1					
ANR	328121	Argument	op2		328092	0					
ANR	328122	Identifier	op2		328092	0					
ANR	328123	Identifier	IS_STRING		328092	1					
ANR	328124	CompoundStatement		3:43:89:89	328092	1					
ANR	328125	IfStatement	if ( Z_STR_P ( op1 ) == Z_STR_P ( op2 ) )		328092	0					
ANR	328126	Condition	Z_STR_P ( op1 ) == Z_STR_P ( op2 )	1716:6:44056:44083	328092	0	True				
ANR	328127	EqualityExpression	Z_STR_P ( op1 ) == Z_STR_P ( op2 )		328092	0		==			
ANR	328128	CallExpression	Z_STR_P ( op1 )		328092	0					
ANR	328129	Callee	Z_STR_P		328092	0					
ANR	328130	Identifier	Z_STR_P		328092	0					
ANR	328131	ArgumentList	op1		328092	1					
ANR	328132	Argument	op1		328092	0					
ANR	328133	Identifier	op1		328092	0					
ANR	328134	CallExpression	Z_STR_P ( op2 )		328092	1					
ANR	328135	Callee	Z_STR_P		328092	0					
ANR	328136	Identifier	Z_STR_P		328092	0					
ANR	328137	ArgumentList	op2		328092	1					
ANR	328138	Argument	op2		328092	0					
ANR	328139	Identifier	op2		328092	0					
ANR	328140	CompoundStatement		4:36:127:127	328092	1					
ANR	328141	ReturnStatement	return 0 ;	1717:3:44091:44099	328092	0	True				
ANR	328142	PrimaryExpression	0		328092	0					
ANR	328143	ElseStatement	else		328092	0					
ANR	328144	CompoundStatement		6:9:151:151	328092	0					
ANR	328145	ReturnStatement	"return zend_binary_strcasecmp_l ( Z_STRVAL_P ( op1 ) , Z_STRLEN_P ( op1 ) , Z_STRVAL_P ( op2 ) , Z_STRLEN_P ( op2 ) ) ;"	1719:3:44115:44214	328092	0	True				
ANR	328146	CallExpression	"zend_binary_strcasecmp_l ( Z_STRVAL_P ( op1 ) , Z_STRLEN_P ( op1 ) , Z_STRVAL_P ( op2 ) , Z_STRLEN_P ( op2 ) )"		328092	0					
ANR	328147	Callee	zend_binary_strcasecmp_l		328092	0					
ANR	328148	Identifier	zend_binary_strcasecmp_l		328092	0					
ANR	328149	ArgumentList	Z_STRVAL_P ( op1 )		328092	1					
ANR	328150	Argument	Z_STRVAL_P ( op1 )		328092	0					
ANR	328151	CallExpression	Z_STRVAL_P ( op1 )		328092	0					
ANR	328152	Callee	Z_STRVAL_P		328092	0					
ANR	328153	Identifier	Z_STRVAL_P		328092	0					
ANR	328154	ArgumentList	op1		328092	1					
ANR	328155	Argument	op1		328092	0					
ANR	328156	Identifier	op1		328092	0					
ANR	328157	Argument	Z_STRLEN_P ( op1 )		328092	1					
ANR	328158	CallExpression	Z_STRLEN_P ( op1 )		328092	0					
ANR	328159	Callee	Z_STRLEN_P		328092	0					
ANR	328160	Identifier	Z_STRLEN_P		328092	0					
ANR	328161	ArgumentList	op1		328092	1					
ANR	328162	Argument	op1		328092	0					
ANR	328163	Identifier	op1		328092	0					
ANR	328164	Argument	Z_STRVAL_P ( op2 )		328092	2					
ANR	328165	CallExpression	Z_STRVAL_P ( op2 )		328092	0					
ANR	328166	Callee	Z_STRVAL_P		328092	0					
ANR	328167	Identifier	Z_STRVAL_P		328092	0					
ANR	328168	ArgumentList	op2		328092	1					
ANR	328169	Argument	op2		328092	0					
ANR	328170	Identifier	op2		328092	0					
ANR	328171	Argument	Z_STRLEN_P ( op2 )		328092	3					
ANR	328172	CallExpression	Z_STRLEN_P ( op2 )		328092	0					
ANR	328173	Callee	Z_STRLEN_P		328092	0					
ANR	328174	Identifier	Z_STRLEN_P		328092	0					
ANR	328175	ArgumentList	op2		328092	1					
ANR	328176	Argument	op2		328092	0					
ANR	328177	Identifier	op2		328092	0					
ANR	328178	ElseStatement	else		328092	0					
ANR	328179	CompoundStatement		12:2:361:459	328092	0					
ANR	328180	IdentifierDeclStatement	zend_string * str1 = zval_get_string ( op1 ) ;	1722:2:44232:44272	328092	0	True				
ANR	328181	IdentifierDecl	* str1 = zval_get_string ( op1 )		328092	0					
ANR	328182	IdentifierDeclType	zend_string *		328092	0					
ANR	328183	Identifier	str1		328092	1					
ANR	328184	AssignmentExpression	* str1 = zval_get_string ( op1 )		328092	2		=			
ANR	328185	Identifier	str1		328092	0					
ANR	328186	CallExpression	zval_get_string ( op1 )		328092	1					
ANR	328187	Callee	zval_get_string		328092	0					
ANR	328188	Identifier	zval_get_string		328092	0					
ANR	328189	ArgumentList	op1		328092	1					
ANR	328190	Argument	op1		328092	0					
ANR	328191	Identifier	op1		328092	0					
ANR	328192	IdentifierDeclStatement	zend_string * str2 = zval_get_string ( op2 ) ;	1723:2:44276:44316	328092	1	True				
ANR	328193	IdentifierDecl	* str2 = zval_get_string ( op2 )		328092	0					
ANR	328194	IdentifierDeclType	zend_string *		328092	0					
ANR	328195	Identifier	str2		328092	1					
ANR	328196	AssignmentExpression	* str2 = zval_get_string ( op2 )		328092	2		=			
ANR	328197	Identifier	str2		328092	0					
ANR	328198	CallExpression	zval_get_string ( op2 )		328092	1					
ANR	328199	Callee	zval_get_string		328092	0					
ANR	328200	Identifier	zval_get_string		328092	0					
ANR	328201	ArgumentList	op2		328092	1					
ANR	328202	Argument	op2		328092	0					
ANR	328203	Identifier	op2		328092	0					
ANR	328204	IdentifierDeclStatement	"int ret = zend_binary_strcasecmp_l ( ZSTR_VAL ( str1 ) , ZSTR_LEN ( str1 ) , ZSTR_VAL ( str2 ) , ZSTR_LEN ( str1 ) ) ;"	1724:2:44320:44418	328092	2	True				
ANR	328205	IdentifierDecl	"ret = zend_binary_strcasecmp_l ( ZSTR_VAL ( str1 ) , ZSTR_LEN ( str1 ) , ZSTR_VAL ( str2 ) , ZSTR_LEN ( str1 ) )"		328092	0					
ANR	328206	IdentifierDeclType	int		328092	0					
ANR	328207	Identifier	ret		328092	1					
ANR	328208	AssignmentExpression	"ret = zend_binary_strcasecmp_l ( ZSTR_VAL ( str1 ) , ZSTR_LEN ( str1 ) , ZSTR_VAL ( str2 ) , ZSTR_LEN ( str1 ) )"		328092	2		=			
ANR	328209	Identifier	ret		328092	0					
ANR	328210	CallExpression	"zend_binary_strcasecmp_l ( ZSTR_VAL ( str1 ) , ZSTR_LEN ( str1 ) , ZSTR_VAL ( str2 ) , ZSTR_LEN ( str1 ) )"		328092	1					
ANR	328211	Callee	zend_binary_strcasecmp_l		328092	0					
ANR	328212	Identifier	zend_binary_strcasecmp_l		328092	0					
ANR	328213	ArgumentList	ZSTR_VAL ( str1 )		328092	1					
ANR	328214	Argument	ZSTR_VAL ( str1 )		328092	0					
ANR	328215	CallExpression	ZSTR_VAL ( str1 )		328092	0					
ANR	328216	Callee	ZSTR_VAL		328092	0					
ANR	328217	Identifier	ZSTR_VAL		328092	0					
ANR	328218	ArgumentList	str1		328092	1					
ANR	328219	Argument	str1		328092	0					
ANR	328220	Identifier	str1		328092	0					
ANR	328221	Argument	ZSTR_LEN ( str1 )		328092	1					
ANR	328222	CallExpression	ZSTR_LEN ( str1 )		328092	0					
ANR	328223	Callee	ZSTR_LEN		328092	0					
ANR	328224	Identifier	ZSTR_LEN		328092	0					
ANR	328225	ArgumentList	str1		328092	1					
ANR	328226	Argument	str1		328092	0					
ANR	328227	Identifier	str1		328092	0					
ANR	328228	Argument	ZSTR_VAL ( str2 )		328092	2					
ANR	328229	CallExpression	ZSTR_VAL ( str2 )		328092	0					
ANR	328230	Callee	ZSTR_VAL		328092	0					
ANR	328231	Identifier	ZSTR_VAL		328092	0					
ANR	328232	ArgumentList	str2		328092	1					
ANR	328233	Argument	str2		328092	0					
ANR	328234	Identifier	str2		328092	0					
ANR	328235	Argument	ZSTR_LEN ( str1 )		328092	3					
ANR	328236	CallExpression	ZSTR_LEN ( str1 )		328092	0					
ANR	328237	Callee	ZSTR_LEN		328092	0					
ANR	328238	Identifier	ZSTR_LEN		328092	0					
ANR	328239	ArgumentList	str1		328092	1					
ANR	328240	Argument	str1		328092	0					
ANR	328241	Identifier	str1		328092	0					
ANR	328242	ExpressionStatement	zend_string_release ( str1 )	1726:2:44423:44448	328092	3	True				
ANR	328243	CallExpression	zend_string_release ( str1 )		328092	0					
ANR	328244	Callee	zend_string_release		328092	0					
ANR	328245	Identifier	zend_string_release		328092	0					
ANR	328246	ArgumentList	str1		328092	1					
ANR	328247	Argument	str1		328092	0					
ANR	328248	Identifier	str1		328092	0					
ANR	328249	ExpressionStatement	zend_string_release ( str2 )	1727:2:44452:44477	328092	4	True				
ANR	328250	CallExpression	zend_string_release ( str2 )		328092	0					
ANR	328251	Callee	zend_string_release		328092	0					
ANR	328252	Identifier	zend_string_release		328092	0					
ANR	328253	ArgumentList	str2		328092	1					
ANR	328254	Argument	str2		328092	0					
ANR	328255	Identifier	str2		328092	0					
ANR	328256	ReturnStatement	return ret ;	1728:2:44481:44491	328092	5	True				
ANR	328257	Identifier	ret		328092	0					
ANR	328258	ReturnType	ZEND_API int ZEND_FASTCALL		328092	1					
ANR	328259	Identifier	string_case_compare_function		328092	2					
ANR	328260	ParameterList	"zval * op1 , zval * op2"		328092	3					
ANR	328261	Parameter	zval * op1	1712:56:43926:43934	328092	0	True				
ANR	328262	ParameterType	zval *		328092	0					
ANR	328263	Identifier	op1		328092	1					
ANR	328264	Parameter	zval * op2	1712:67:43937:43945	328092	1	True				
ANR	328265	ParameterType	zval *		328092	0					
ANR	328266	Identifier	op2		328092	1					
ANR	328267	CFGEntryNode	ENTRY		328092		True				
ANR	328268	CFGExitNode	EXIT		328092		True				
ANR	328269	Symbol	ret		328092						
ANR	328270	Symbol	zval_get_string		328092						
ANR	328271	Symbol	Z_TYPE_P		328092						
ANR	328272	Symbol	Z_STRVAL_P		328092						
ANR	328273	Symbol	ZSTR_VAL		328092						
ANR	328274	Symbol	op2		328092						
ANR	328275	Symbol	op1		328092						
ANR	328276	Symbol	zend_binary_strcasecmp_l		328092						
ANR	328277	Symbol	str1		328092						
ANR	328278	Symbol	str2		328092						
ANR	328279	Symbol	ZSTR_LEN		328092						
ANR	328280	Symbol	Z_STRLEN_P		328092						
ANR	328281	Symbol	IS_STRING		328092						
ANR	328282	Symbol	Z_STR_P		328092						
ANR	328283	Symbol	EXPECTED		328092						
ANR	328284	Function	string_locale_compare_function	1734:0:44526:44826							
ANR	328285	FunctionDef	"string_locale_compare_function (zval * op1 , zval * op2)"		328284	0					
ANR	328286	CompoundStatement		1735:0:44616:44826	328284	0					
ANR	328287	IdentifierDeclStatement	zend_string * str1 = zval_get_string ( op1 ) ;	1736:1:44619:44659	328284	0	True				
ANR	328288	IdentifierDecl	* str1 = zval_get_string ( op1 )		328284	0					
ANR	328289	IdentifierDeclType	zend_string *		328284	0					
ANR	328290	Identifier	str1		328284	1					
ANR	328291	AssignmentExpression	* str1 = zval_get_string ( op1 )		328284	2		=			
ANR	328292	Identifier	str1		328284	0					
ANR	328293	CallExpression	zval_get_string ( op1 )		328284	1					
ANR	328294	Callee	zval_get_string		328284	0					
ANR	328295	Identifier	zval_get_string		328284	0					
ANR	328296	ArgumentList	op1		328284	1					
ANR	328297	Argument	op1		328284	0					
ANR	328298	Identifier	op1		328284	0					
ANR	328299	IdentifierDeclStatement	zend_string * str2 = zval_get_string ( op2 ) ;	1737:1:44662:44702	328284	1	True				
ANR	328300	IdentifierDecl	* str2 = zval_get_string ( op2 )		328284	0					
ANR	328301	IdentifierDeclType	zend_string *		328284	0					
ANR	328302	Identifier	str2		328284	1					
ANR	328303	AssignmentExpression	* str2 = zval_get_string ( op2 )		328284	2		=			
ANR	328304	Identifier	str2		328284	0					
ANR	328305	CallExpression	zval_get_string ( op2 )		328284	1					
ANR	328306	Callee	zval_get_string		328284	0					
ANR	328307	Identifier	zval_get_string		328284	0					
ANR	328308	ArgumentList	op2		328284	1					
ANR	328309	Argument	op2		328284	0					
ANR	328310	Identifier	op2		328284	0					
ANR	328311	IdentifierDeclStatement	"int ret = strcoll ( ZSTR_VAL ( str1 ) , ZSTR_VAL ( str2 ) ) ;"	1738:1:44705:44754	328284	2	True				
ANR	328312	IdentifierDecl	"ret = strcoll ( ZSTR_VAL ( str1 ) , ZSTR_VAL ( str2 ) )"		328284	0					
ANR	328313	IdentifierDeclType	int		328284	0					
ANR	328314	Identifier	ret		328284	1					
ANR	328315	AssignmentExpression	"ret = strcoll ( ZSTR_VAL ( str1 ) , ZSTR_VAL ( str2 ) )"		328284	2		=			
ANR	328316	Identifier	ret		328284	0					
ANR	328317	CallExpression	"strcoll ( ZSTR_VAL ( str1 ) , ZSTR_VAL ( str2 ) )"		328284	1					
ANR	328318	Callee	strcoll		328284	0					
ANR	328319	Identifier	strcoll		328284	0					
ANR	328320	ArgumentList	ZSTR_VAL ( str1 )		328284	1					
ANR	328321	Argument	ZSTR_VAL ( str1 )		328284	0					
ANR	328322	CallExpression	ZSTR_VAL ( str1 )		328284	0					
ANR	328323	Callee	ZSTR_VAL		328284	0					
ANR	328324	Identifier	ZSTR_VAL		328284	0					
ANR	328325	ArgumentList	str1		328284	1					
ANR	328326	Argument	str1		328284	0					
ANR	328327	Identifier	str1		328284	0					
ANR	328328	Argument	ZSTR_VAL ( str2 )		328284	1					
ANR	328329	CallExpression	ZSTR_VAL ( str2 )		328284	0					
ANR	328330	Callee	ZSTR_VAL		328284	0					
ANR	328331	Identifier	ZSTR_VAL		328284	0					
ANR	328332	ArgumentList	str2		328284	1					
ANR	328333	Argument	str2		328284	0					
ANR	328334	Identifier	str2		328284	0					
ANR	328335	ExpressionStatement	zend_string_release ( str1 )	1740:1:44758:44783	328284	3	True				
ANR	328336	CallExpression	zend_string_release ( str1 )		328284	0					
ANR	328337	Callee	zend_string_release		328284	0					
ANR	328338	Identifier	zend_string_release		328284	0					
ANR	328339	ArgumentList	str1		328284	1					
ANR	328340	Argument	str1		328284	0					
ANR	328341	Identifier	str1		328284	0					
ANR	328342	ExpressionStatement	zend_string_release ( str2 )	1741:1:44786:44811	328284	4	True				
ANR	328343	CallExpression	zend_string_release ( str2 )		328284	0					
ANR	328344	Callee	zend_string_release		328284	0					
ANR	328345	Identifier	zend_string_release		328284	0					
ANR	328346	ArgumentList	str2		328284	1					
ANR	328347	Argument	str2		328284	0					
ANR	328348	Identifier	str2		328284	0					
ANR	328349	ReturnStatement	return ret ;	1742:1:44814:44824	328284	5	True				
ANR	328350	Identifier	ret		328284	0					
ANR	328351	ReturnType	ZEND_API int ZEND_FASTCALL		328284	1					
ANR	328352	Identifier	string_locale_compare_function		328284	2					
ANR	328353	ParameterList	"zval * op1 , zval * op2"		328284	3					
ANR	328354	Parameter	zval * op1	1734:58:44584:44592	328284	0	True				
ANR	328355	ParameterType	zval *		328284	0					
ANR	328356	Identifier	op1		328284	1					
ANR	328357	Parameter	zval * op2	1734:69:44595:44603	328284	1	True				
ANR	328358	ParameterType	zval *		328284	0					
ANR	328359	Identifier	op2		328284	1					
ANR	328360	CFGEntryNode	ENTRY		328284		True				
ANR	328361	CFGExitNode	EXIT		328284		True				
ANR	328362	Symbol	op2		328284						
ANR	328363	Symbol	ret		328284						
ANR	328364	Symbol	op1		328284						
ANR	328365	Symbol	str1		328284						
ANR	328366	Symbol	str2		328284						
ANR	328367	Symbol	zval_get_string		328284						
ANR	328368	Symbol	strcoll		328284						
ANR	328369	Symbol	ZSTR_VAL		328284						
ANR	328370	Function	numeric_compare_function	1747:0:44846:45044							
ANR	328371	FunctionDef	"numeric_compare_function (zval * op1 , zval * op2)"		328370	0					
ANR	328372	CompoundStatement		1748:0:44930:45044	328370	0					
ANR	328373	IdentifierDeclStatement	"double d1 , d2 ;"	1749:1:44933:44946	328370	0	True				
ANR	328374	IdentifierDecl	d1		328370	0					
ANR	328375	IdentifierDeclType	double		328370	0					
ANR	328376	Identifier	d1		328370	1					
ANR	328377	IdentifierDecl	d2		328370	1					
ANR	328378	IdentifierDeclType	double		328370	0					
ANR	328379	Identifier	d2		328370	1					
ANR	328380	ExpressionStatement	d1 = zval_get_double ( op1 )	1751:1:44950:44975	328370	1	True				
ANR	328381	AssignmentExpression	d1 = zval_get_double ( op1 )		328370	0		=			
ANR	328382	Identifier	d1		328370	0					
ANR	328383	CallExpression	zval_get_double ( op1 )		328370	1					
ANR	328384	Callee	zval_get_double		328370	0					
ANR	328385	Identifier	zval_get_double		328370	0					
ANR	328386	ArgumentList	op1		328370	1					
ANR	328387	Argument	op1		328370	0					
ANR	328388	Identifier	op1		328370	0					
ANR	328389	ExpressionStatement	d2 = zval_get_double ( op2 )	1752:1:44978:45003	328370	2	True				
ANR	328390	AssignmentExpression	d2 = zval_get_double ( op2 )		328370	0		=			
ANR	328391	Identifier	d2		328370	0					
ANR	328392	CallExpression	zval_get_double ( op2 )		328370	1					
ANR	328393	Callee	zval_get_double		328370	0					
ANR	328394	Identifier	zval_get_double		328370	0					
ANR	328395	ArgumentList	op2		328370	1					
ANR	328396	Argument	op2		328370	0					
ANR	328397	Identifier	op2		328370	0					
ANR	328398	ReturnStatement	return ZEND_NORMALIZE_BOOL ( d1 - d2 ) ;	1754:1:45007:45042	328370	3	True				
ANR	328399	CallExpression	ZEND_NORMALIZE_BOOL ( d1 - d2 )		328370	0					
ANR	328400	Callee	ZEND_NORMALIZE_BOOL		328370	0					
ANR	328401	Identifier	ZEND_NORMALIZE_BOOL		328370	0					
ANR	328402	ArgumentList	d1 - d2		328370	1					
ANR	328403	Argument	d1 - d2		328370	0					
ANR	328404	AdditiveExpression	d1 - d2		328370	0		-			
ANR	328405	Identifier	d1		328370	0					
ANR	328406	Identifier	d2		328370	1					
ANR	328407	ReturnType	ZEND_API int ZEND_FASTCALL		328370	1					
ANR	328408	Identifier	numeric_compare_function		328370	2					
ANR	328409	ParameterList	"zval * op1 , zval * op2"		328370	3					
ANR	328410	Parameter	zval * op1	1747:52:44898:44906	328370	0	True				
ANR	328411	ParameterType	zval *		328370	0					
ANR	328412	Identifier	op1		328370	1					
ANR	328413	Parameter	zval * op2	1747:63:44909:44917	328370	1	True				
ANR	328414	ParameterType	zval *		328370	0					
ANR	328415	Identifier	op2		328370	1					
ANR	328416	CFGEntryNode	ENTRY		328370		True				
ANR	328417	CFGExitNode	EXIT		328370		True				
ANR	328418	Symbol	op2		328370						
ANR	328419	Symbol	op1		328370						
ANR	328420	Symbol	ZEND_NORMALIZE_BOOL		328370						
ANR	328421	Symbol	d1		328370						
ANR	328422	Symbol	d2		328370						
ANR	328423	Symbol	zval_get_double		328370						
ANR	328424	Function	zend_free_obj_get_result	1758:0:45057:45239							
ANR	328425	FunctionDef	zend_free_obj_get_result (zval * op)		328424	0					
ANR	328426	CompoundStatement		1759:0:45121:45239	328424	0					
ANR	328427	IfStatement	if ( Z_REFCOUNTED_P ( op ) )		328424	0					
ANR	328428	Condition	Z_REFCOUNTED_P ( op )	1760:5:45128:45145	328424	0	True				
ANR	328429	CallExpression	Z_REFCOUNTED_P ( op )		328424	0					
ANR	328430	Callee	Z_REFCOUNTED_P		328424	0					
ANR	328431	Identifier	Z_REFCOUNTED_P		328424	0					
ANR	328432	ArgumentList	op		328424	1					
ANR	328433	Argument	op		328424	0					
ANR	328434	Identifier	op		328424	0					
ANR	328435	CompoundStatement		2:25:26:26	328424	1					
ANR	328436	IfStatement	if ( Z_REFCOUNT_P ( op ) == 0 )		328424	0					
ANR	328437	Condition	Z_REFCOUNT_P ( op ) == 0	1761:6:45156:45176	328424	0	True				
ANR	328438	EqualityExpression	Z_REFCOUNT_P ( op ) == 0		328424	0		==			
ANR	328439	CallExpression	Z_REFCOUNT_P ( op )		328424	0					
ANR	328440	Callee	Z_REFCOUNT_P		328424	0					
ANR	328441	Identifier	Z_REFCOUNT_P		328424	0					
ANR	328442	ArgumentList	op		328424	1					
ANR	328443	Argument	op		328424	0					
ANR	328444	Identifier	op		328424	0					
ANR	328445	PrimaryExpression	0		328424	1					
ANR	328446	CompoundStatement		3:29:57:57	328424	1					
ANR	328447	ExpressionStatement	zval_dtor ( op )	1762:3:45184:45197	328424	0	True				
ANR	328448	CallExpression	zval_dtor ( op )		328424	0					
ANR	328449	Callee	zval_dtor		328424	0					
ANR	328450	Identifier	zval_dtor		328424	0					
ANR	328451	ArgumentList	op		328424	1					
ANR	328452	Argument	op		328424	0					
ANR	328453	Identifier	op		328424	0					
ANR	328454	ElseStatement	else		328424	0					
ANR	328455	CompoundStatement		5:9:86:86	328424	0					
ANR	328456	ExpressionStatement	zval_ptr_dtor ( op )	1764:3:45213:45230	328424	0	True				
ANR	328457	CallExpression	zval_ptr_dtor ( op )		328424	0					
ANR	328458	Callee	zval_ptr_dtor		328424	0					
ANR	328459	Identifier	zval_ptr_dtor		328424	0					
ANR	328460	ArgumentList	op		328424	1					
ANR	328461	Argument	op		328424	0					
ANR	328462	Identifier	op		328424	0					
ANR	328463	ReturnType	static inline void		328424	1					
ANR	328464	Identifier	zend_free_obj_get_result		328424	2					
ANR	328465	ParameterList	zval * op		328424	3					
ANR	328466	Parameter	zval * op	1758:44:45101:45108	328424	0	True				
ANR	328467	ParameterType	zval *		328424	0					
ANR	328468	Identifier	op		328424	1					
ANR	328469	CFGEntryNode	ENTRY		328424		True				
ANR	328470	CFGExitNode	EXIT		328424		True				
ANR	328471	Symbol	op		328424						
ANR	328472	Symbol	Z_REFCOUNTED_P		328424						
ANR	328473	Symbol	Z_REFCOUNT_P		328424						
ANR	328474	Function	convert_compare_result_to_long	1770:0:45252:45473							
ANR	328475	FunctionDef	convert_compare_result_to_long (zval * result)		328474	0					
ANR	328476	CompoundStatement		1771:0:45333:45473	328474	0					
ANR	328477	IfStatement	if ( Z_TYPE_P ( result ) == IS_DOUBLE )		328474	0					
ANR	328478	Condition	Z_TYPE_P ( result ) == IS_DOUBLE	1772:5:45340:45368	328474	0	True				
ANR	328479	EqualityExpression	Z_TYPE_P ( result ) == IS_DOUBLE		328474	0		==			
ANR	328480	CallExpression	Z_TYPE_P ( result )		328474	0					
ANR	328481	Callee	Z_TYPE_P		328474	0					
ANR	328482	Identifier	Z_TYPE_P		328474	0					
ANR	328483	ArgumentList	result		328474	1					
ANR	328484	Argument	result		328474	0					
ANR	328485	Identifier	result		328474	0					
ANR	328486	Identifier	IS_DOUBLE		328474	1					
ANR	328487	CompoundStatement		2:36:37:37	328474	1					
ANR	328488	ExpressionStatement	"ZVAL_LONG ( result , ZEND_NORMALIZE_BOOL ( Z_DVAL_P ( result ) ) )"	1773:2:45375:45431	328474	0	True				
ANR	328489	CallExpression	"ZVAL_LONG ( result , ZEND_NORMALIZE_BOOL ( Z_DVAL_P ( result ) ) )"		328474	0					
ANR	328490	Callee	ZVAL_LONG		328474	0					
ANR	328491	Identifier	ZVAL_LONG		328474	0					
ANR	328492	ArgumentList	result		328474	1					
ANR	328493	Argument	result		328474	0					
ANR	328494	Identifier	result		328474	0					
ANR	328495	Argument	ZEND_NORMALIZE_BOOL ( Z_DVAL_P ( result ) )		328474	1					
ANR	328496	CallExpression	ZEND_NORMALIZE_BOOL ( Z_DVAL_P ( result ) )		328474	0					
ANR	328497	Callee	ZEND_NORMALIZE_BOOL		328474	0					
ANR	328498	Identifier	ZEND_NORMALIZE_BOOL		328474	0					
ANR	328499	ArgumentList	Z_DVAL_P ( result )		328474	1					
ANR	328500	Argument	Z_DVAL_P ( result )		328474	0					
ANR	328501	CallExpression	Z_DVAL_P ( result )		328474	0					
ANR	328502	Callee	Z_DVAL_P		328474	0					
ANR	328503	Identifier	Z_DVAL_P		328474	0					
ANR	328504	ArgumentList	result		328474	1					
ANR	328505	Argument	result		328474	0					
ANR	328506	Identifier	result		328474	0					
ANR	328507	ElseStatement	else		328474	0					
ANR	328508	CompoundStatement		4:8:107:107	328474	0					
ANR	328509	ExpressionStatement	convert_to_long ( result )	1775:2:45445:45468	328474	0	True				
ANR	328510	CallExpression	convert_to_long ( result )		328474	0					
ANR	328511	Callee	convert_to_long		328474	0					
ANR	328512	Identifier	convert_to_long		328474	0					
ANR	328513	ArgumentList	result		328474	1					
ANR	328514	Argument	result		328474	0					
ANR	328515	Identifier	result		328474	0					
ANR	328516	ReturnType	static void ZEND_FASTCALL		328474	1					
ANR	328517	Identifier	convert_compare_result_to_long		328474	2					
ANR	328518	ParameterList	zval * result		328474	3					
ANR	328519	Parameter	zval * result	1770:57:45309:45320	328474	0	True				
ANR	328520	ParameterType	zval *		328474	0					
ANR	328521	Identifier	result		328474	1					
ANR	328522	CFGEntryNode	ENTRY		328474		True				
ANR	328523	CFGExitNode	EXIT		328474		True				
ANR	328524	Symbol	result		328474						
ANR	328525	Symbol	ZEND_NORMALIZE_BOOL		328474						
ANR	328526	Symbol	IS_DOUBLE		328474						
ANR	328527	Symbol	Z_TYPE_P		328474						
ANR	328528	Symbol	Z_DVAL_P		328474						
ANR	328529	Function	compare_function	1780:0:45486:51507							
ANR	328530	FunctionDef	"compare_function (zval * result , zval * op1 , zval * op2)"		328529	0					
ANR	328531	CompoundStatement		1781:0:45576:51507	328529	0					
ANR	328532	IdentifierDeclStatement	int ret ;	1782:1:45579:45586	328529	0	True				
ANR	328533	IdentifierDecl	ret		328529	0					
ANR	328534	IdentifierDeclType	int		328529	0					
ANR	328535	Identifier	ret		328529	1					
ANR	328536	IdentifierDeclStatement	int converted = 0 ;	1783:1:45589:45606	328529	1	True				
ANR	328537	IdentifierDecl	converted = 0		328529	0					
ANR	328538	IdentifierDeclType	int		328529	0					
ANR	328539	Identifier	converted		328529	1					
ANR	328540	AssignmentExpression	converted = 0		328529	2		=			
ANR	328541	Identifier	converted		328529	0					
ANR	328542	PrimaryExpression	0		328529	1					
ANR	328543	IdentifierDeclStatement	"zval op1_copy , op2_copy ;"	1784:1:45609:45632	328529	2	True				
ANR	328544	IdentifierDecl	op1_copy		328529	0					
ANR	328545	IdentifierDeclType	zval		328529	0					
ANR	328546	Identifier	op1_copy		328529	1					
ANR	328547	IdentifierDecl	op2_copy		328529	1					
ANR	328548	IdentifierDeclType	zval		328529	0					
ANR	328549	Identifier	op2_copy		328529	1					
ANR	328550	IdentifierDeclStatement	"zval * op_free , tmp_free ;"	1785:1:45635:45658	328529	3	True				
ANR	328551	IdentifierDecl	* op_free		328529	0					
ANR	328552	IdentifierDeclType	zval *		328529	0					
ANR	328553	Identifier	op_free		328529	1					
ANR	328554	IdentifierDecl	tmp_free		328529	1					
ANR	328555	IdentifierDeclType	zval		328529	0					
ANR	328556	Identifier	tmp_free		328529	1					
ANR	328557	WhileStatement	while ( 1 )		328529	4					
ANR	328558	Condition	1	1787:8:45669:45669	328529	0	True				
ANR	328559	PrimaryExpression	1		328529	0					
ANR	328560	CompoundStatement		7:11:95:95	328529	1					
ANR	328561	SwitchStatement	"switch ( TYPE_PAIR ( Z_TYPE_P ( op1 ) , Z_TYPE_P ( op2 ) ) )"		328529	0					
ANR	328562	Condition	"TYPE_PAIR ( Z_TYPE_P ( op1 ) , Z_TYPE_P ( op2 ) )"	1788:10:45684:45722	328529	0	True				
ANR	328563	CallExpression	"TYPE_PAIR ( Z_TYPE_P ( op1 ) , Z_TYPE_P ( op2 ) )"		328529	0					
ANR	328564	Callee	TYPE_PAIR		328529	0					
ANR	328565	Identifier	TYPE_PAIR		328529	0					
ANR	328566	ArgumentList	Z_TYPE_P ( op1 )		328529	1					
ANR	328567	Argument	Z_TYPE_P ( op1 )		328529	0					
ANR	328568	CallExpression	Z_TYPE_P ( op1 )		328529	0					
ANR	328569	Callee	Z_TYPE_P		328529	0					
ANR	328570	Identifier	Z_TYPE_P		328529	0					
ANR	328571	ArgumentList	op1		328529	1					
ANR	328572	Argument	op1		328529	0					
ANR	328573	Identifier	op1		328529	0					
ANR	328574	Argument	Z_TYPE_P ( op2 )		328529	1					
ANR	328575	CallExpression	Z_TYPE_P ( op2 )		328529	0					
ANR	328576	Callee	Z_TYPE_P		328529	0					
ANR	328577	Identifier	Z_TYPE_P		328529	0					
ANR	328578	ArgumentList	op2		328529	1					
ANR	328579	Argument	op2		328529	0					
ANR	328580	Identifier	op2		328529	0					
ANR	328581	CompoundStatement		8:51:148:148	328529	1					
ANR	328582	Statement	case	1789:3:45730:45733	328529	0	True				
ANR	328583	Statement	TYPE_PAIR	1789:8:45735:45743	328529	1	True				
ANR	328584	Statement	(	1789:17:45744:45744	328529	2	True				
ANR	328585	Statement	IS_LONG	1789:18:45745:45751	328529	3	True				
ANR	328586	Statement	","	1789:25:45752:45752	328529	4	True				
ANR	328587	Statement	IS_LONG	1789:27:45754:45760	328529	5	True				
ANR	328588	Statement	)	1789:34:45761:45761	328529	6	True				
ANR	328589	Statement	:	1789:35:45762:45762	328529	7	True				
ANR	328590	ExpressionStatement	"ZVAL_LONG ( result , Z_LVAL_P ( op1 ) > Z_LVAL_P ( op2 ) ? 1 : ( Z_LVAL_P ( op1 ) < Z_LVAL_P ( op2 ) ? - 1 : 0 ) )"	1790:4:45768:45851	328529	8	True				
ANR	328591	CallExpression	"ZVAL_LONG ( result , Z_LVAL_P ( op1 ) > Z_LVAL_P ( op2 ) ? 1 : ( Z_LVAL_P ( op1 ) < Z_LVAL_P ( op2 ) ? - 1 : 0 ) )"		328529	0					
ANR	328592	Callee	ZVAL_LONG		328529	0					
ANR	328593	Identifier	ZVAL_LONG		328529	0					
ANR	328594	ArgumentList	result		328529	1					
ANR	328595	Argument	result		328529	0					
ANR	328596	Identifier	result		328529	0					
ANR	328597	Argument	Z_LVAL_P ( op1 ) > Z_LVAL_P ( op2 ) ? 1 : ( Z_LVAL_P ( op1 ) < Z_LVAL_P ( op2 ) ? - 1 : 0 )		328529	1					
ANR	328598	ConditionalExpression	Z_LVAL_P ( op1 ) > Z_LVAL_P ( op2 ) ? 1 : ( Z_LVAL_P ( op1 ) < Z_LVAL_P ( op2 ) ? - 1 : 0 )		328529	0					
ANR	328599	Condition	Z_LVAL_P ( op1 ) > Z_LVAL_P ( op2 )		328529	0					
ANR	328600	RelationalExpression	Z_LVAL_P ( op1 ) > Z_LVAL_P ( op2 )		328529	0		>			
ANR	328601	CallExpression	Z_LVAL_P ( op1 )		328529	0					
ANR	328602	Callee	Z_LVAL_P		328529	0					
ANR	328603	Identifier	Z_LVAL_P		328529	0					
ANR	328604	ArgumentList	op1		328529	1					
ANR	328605	Argument	op1		328529	0					
ANR	328606	Identifier	op1		328529	0					
ANR	328607	CallExpression	Z_LVAL_P ( op2 )		328529	1					
ANR	328608	Callee	Z_LVAL_P		328529	0					
ANR	328609	Identifier	Z_LVAL_P		328529	0					
ANR	328610	ArgumentList	op2		328529	1					
ANR	328611	Argument	op2		328529	0					
ANR	328612	Identifier	op2		328529	0					
ANR	328613	PrimaryExpression	1		328529	1					
ANR	328614	ConditionalExpression	Z_LVAL_P ( op1 ) < Z_LVAL_P ( op2 ) ? - 1 : 0		328529	2					
ANR	328615	Condition	Z_LVAL_P ( op1 ) < Z_LVAL_P ( op2 )		328529	0					
ANR	328616	RelationalExpression	Z_LVAL_P ( op1 ) < Z_LVAL_P ( op2 )		328529	0		<			
ANR	328617	CallExpression	Z_LVAL_P ( op1 )		328529	0					
ANR	328618	Callee	Z_LVAL_P		328529	0					
ANR	328619	Identifier	Z_LVAL_P		328529	0					
ANR	328620	ArgumentList	op1		328529	1					
ANR	328621	Argument	op1		328529	0					
ANR	328622	Identifier	op1		328529	0					
ANR	328623	CallExpression	Z_LVAL_P ( op2 )		328529	1					
ANR	328624	Callee	Z_LVAL_P		328529	0					
ANR	328625	Identifier	Z_LVAL_P		328529	0					
ANR	328626	ArgumentList	op2		328529	1					
ANR	328627	Argument	op2		328529	0					
ANR	328628	Identifier	op2		328529	0					
ANR	328629	UnaryOperationExpression	- 1		328529	1					
ANR	328630	UnaryOperator	-		328529	0					
ANR	328631	PrimaryExpression	1		328529	1					
ANR	328632	PrimaryExpression	0		328529	2					
ANR	328633	ReturnStatement	return SUCCESS ;	1791:4:45857:45871	328529	9	True				
ANR	328634	Identifier	SUCCESS		328529	0					
ANR	328635	Statement	case	1793:3:45877:45880	328529	10	True				
ANR	328636	Statement	TYPE_PAIR	1793:8:45882:45890	328529	11	True				
ANR	328637	Statement	(	1793:17:45891:45891	328529	12	True				
ANR	328638	Statement	IS_DOUBLE	1793:18:45892:45900	328529	13	True				
ANR	328639	Statement	","	1793:27:45901:45901	328529	14	True				
ANR	328640	Statement	IS_LONG	1793:29:45903:45909	328529	15	True				
ANR	328641	Statement	)	1793:36:45910:45910	328529	16	True				
ANR	328642	Statement	:	1793:37:45911:45911	328529	17	True				
ANR	328643	ExpressionStatement	Z_DVAL_P ( result ) = Z_DVAL_P ( op1 ) - ( double ) Z_LVAL_P ( op2 )	1794:4:45917:45973	328529	18	True				
ANR	328644	AssignmentExpression	Z_DVAL_P ( result ) = Z_DVAL_P ( op1 ) - ( double ) Z_LVAL_P ( op2 )		328529	0		=			
ANR	328645	CallExpression	Z_DVAL_P ( result )		328529	0					
ANR	328646	Callee	Z_DVAL_P		328529	0					
ANR	328647	Identifier	Z_DVAL_P		328529	0					
ANR	328648	ArgumentList	result		328529	1					
ANR	328649	Argument	result		328529	0					
ANR	328650	Identifier	result		328529	0					
ANR	328651	AdditiveExpression	Z_DVAL_P ( op1 ) - ( double ) Z_LVAL_P ( op2 )		328529	1		-			
ANR	328652	CallExpression	Z_DVAL_P ( op1 )		328529	0					
ANR	328653	Callee	Z_DVAL_P		328529	0					
ANR	328654	Identifier	Z_DVAL_P		328529	0					
ANR	328655	ArgumentList	op1		328529	1					
ANR	328656	Argument	op1		328529	0					
ANR	328657	Identifier	op1		328529	0					
ANR	328658	CastExpression	( double ) Z_LVAL_P ( op2 )		328529	1					
ANR	328659	CastTarget	double		328529	0					
ANR	328660	CallExpression	Z_LVAL_P ( op2 )		328529	1					
ANR	328661	Callee	Z_LVAL_P		328529	0					
ANR	328662	Identifier	Z_LVAL_P		328529	0					
ANR	328663	ArgumentList	op2		328529	1					
ANR	328664	Argument	op2		328529	0					
ANR	328665	Identifier	op2		328529	0					
ANR	328666	ExpressionStatement	"ZVAL_LONG ( result , ZEND_NORMALIZE_BOOL ( Z_DVAL_P ( result ) ) )"	1795:4:45979:46035	328529	19	True				
ANR	328667	CallExpression	"ZVAL_LONG ( result , ZEND_NORMALIZE_BOOL ( Z_DVAL_P ( result ) ) )"		328529	0					
ANR	328668	Callee	ZVAL_LONG		328529	0					
ANR	328669	Identifier	ZVAL_LONG		328529	0					
ANR	328670	ArgumentList	result		328529	1					
ANR	328671	Argument	result		328529	0					
ANR	328672	Identifier	result		328529	0					
ANR	328673	Argument	ZEND_NORMALIZE_BOOL ( Z_DVAL_P ( result ) )		328529	1					
ANR	328674	CallExpression	ZEND_NORMALIZE_BOOL ( Z_DVAL_P ( result ) )		328529	0					
ANR	328675	Callee	ZEND_NORMALIZE_BOOL		328529	0					
ANR	328676	Identifier	ZEND_NORMALIZE_BOOL		328529	0					
ANR	328677	ArgumentList	Z_DVAL_P ( result )		328529	1					
ANR	328678	Argument	Z_DVAL_P ( result )		328529	0					
ANR	328679	CallExpression	Z_DVAL_P ( result )		328529	0					
ANR	328680	Callee	Z_DVAL_P		328529	0					
ANR	328681	Identifier	Z_DVAL_P		328529	0					
ANR	328682	ArgumentList	result		328529	1					
ANR	328683	Argument	result		328529	0					
ANR	328684	Identifier	result		328529	0					
ANR	328685	ReturnStatement	return SUCCESS ;	1796:4:46041:46055	328529	20	True				
ANR	328686	Identifier	SUCCESS		328529	0					
ANR	328687	Statement	case	1798:3:46061:46064	328529	21	True				
ANR	328688	Statement	TYPE_PAIR	1798:8:46066:46074	328529	22	True				
ANR	328689	Statement	(	1798:17:46075:46075	328529	23	True				
ANR	328690	Statement	IS_LONG	1798:18:46076:46082	328529	24	True				
ANR	328691	Statement	","	1798:25:46083:46083	328529	25	True				
ANR	328692	Statement	IS_DOUBLE	1798:27:46085:46093	328529	26	True				
ANR	328693	Statement	)	1798:36:46094:46094	328529	27	True				
ANR	328694	Statement	:	1798:37:46095:46095	328529	28	True				
ANR	328695	ExpressionStatement	Z_DVAL_P ( result ) = ( double ) Z_LVAL_P ( op1 ) - Z_DVAL_P ( op2 )	1799:4:46101:46157	328529	29	True				
ANR	328696	AssignmentExpression	Z_DVAL_P ( result ) = ( double ) Z_LVAL_P ( op1 ) - Z_DVAL_P ( op2 )		328529	0		=			
ANR	328697	CallExpression	Z_DVAL_P ( result )		328529	0					
ANR	328698	Callee	Z_DVAL_P		328529	0					
ANR	328699	Identifier	Z_DVAL_P		328529	0					
ANR	328700	ArgumentList	result		328529	1					
ANR	328701	Argument	result		328529	0					
ANR	328702	Identifier	result		328529	0					
ANR	328703	AdditiveExpression	( double ) Z_LVAL_P ( op1 ) - Z_DVAL_P ( op2 )		328529	1		-			
ANR	328704	CastExpression	( double ) Z_LVAL_P ( op1 )		328529	0					
ANR	328705	CastTarget	double		328529	0					
ANR	328706	CallExpression	Z_LVAL_P ( op1 )		328529	1					
ANR	328707	Callee	Z_LVAL_P		328529	0					
ANR	328708	Identifier	Z_LVAL_P		328529	0					
ANR	328709	ArgumentList	op1		328529	1					
ANR	328710	Argument	op1		328529	0					
ANR	328711	Identifier	op1		328529	0					
ANR	328712	CallExpression	Z_DVAL_P ( op2 )		328529	1					
ANR	328713	Callee	Z_DVAL_P		328529	0					
ANR	328714	Identifier	Z_DVAL_P		328529	0					
ANR	328715	ArgumentList	op2		328529	1					
ANR	328716	Argument	op2		328529	0					
ANR	328717	Identifier	op2		328529	0					
ANR	328718	ExpressionStatement	"ZVAL_LONG ( result , ZEND_NORMALIZE_BOOL ( Z_DVAL_P ( result ) ) )"	1800:4:46163:46219	328529	30	True				
ANR	328719	CallExpression	"ZVAL_LONG ( result , ZEND_NORMALIZE_BOOL ( Z_DVAL_P ( result ) ) )"		328529	0					
ANR	328720	Callee	ZVAL_LONG		328529	0					
ANR	328721	Identifier	ZVAL_LONG		328529	0					
ANR	328722	ArgumentList	result		328529	1					
ANR	328723	Argument	result		328529	0					
ANR	328724	Identifier	result		328529	0					
ANR	328725	Argument	ZEND_NORMALIZE_BOOL ( Z_DVAL_P ( result ) )		328529	1					
ANR	328726	CallExpression	ZEND_NORMALIZE_BOOL ( Z_DVAL_P ( result ) )		328529	0					
ANR	328727	Callee	ZEND_NORMALIZE_BOOL		328529	0					
ANR	328728	Identifier	ZEND_NORMALIZE_BOOL		328529	0					
ANR	328729	ArgumentList	Z_DVAL_P ( result )		328529	1					
ANR	328730	Argument	Z_DVAL_P ( result )		328529	0					
ANR	328731	CallExpression	Z_DVAL_P ( result )		328529	0					
ANR	328732	Callee	Z_DVAL_P		328529	0					
ANR	328733	Identifier	Z_DVAL_P		328529	0					
ANR	328734	ArgumentList	result		328529	1					
ANR	328735	Argument	result		328529	0					
ANR	328736	Identifier	result		328529	0					
ANR	328737	ReturnStatement	return SUCCESS ;	1801:4:46225:46239	328529	31	True				
ANR	328738	Identifier	SUCCESS		328529	0					
ANR	328739	Statement	case	1803:3:46245:46248	328529	32	True				
ANR	328740	Statement	TYPE_PAIR	1803:8:46250:46258	328529	33	True				
ANR	328741	Statement	(	1803:17:46259:46259	328529	34	True				
ANR	328742	Statement	IS_DOUBLE	1803:18:46260:46268	328529	35	True				
ANR	328743	Statement	","	1803:27:46269:46269	328529	36	True				
ANR	328744	Statement	IS_DOUBLE	1803:29:46271:46279	328529	37	True				
ANR	328745	Statement	)	1803:38:46280:46280	328529	38	True				
ANR	328746	Statement	:	1803:39:46281:46281	328529	39	True				
ANR	328747	IfStatement	if ( Z_DVAL_P ( op1 ) == Z_DVAL_P ( op2 ) )		328529	40					
ANR	328748	Condition	Z_DVAL_P ( op1 ) == Z_DVAL_P ( op2 )	1804:8:46291:46320	328529	0	True				
ANR	328749	EqualityExpression	Z_DVAL_P ( op1 ) == Z_DVAL_P ( op2 )		328529	0		==			
ANR	328750	CallExpression	Z_DVAL_P ( op1 )		328529	0					
ANR	328751	Callee	Z_DVAL_P		328529	0					
ANR	328752	Identifier	Z_DVAL_P		328529	0					
ANR	328753	ArgumentList	op1		328529	1					
ANR	328754	Argument	op1		328529	0					
ANR	328755	Identifier	op1		328529	0					
ANR	328756	CallExpression	Z_DVAL_P ( op2 )		328529	1					
ANR	328757	Callee	Z_DVAL_P		328529	0					
ANR	328758	Identifier	Z_DVAL_P		328529	0					
ANR	328759	ArgumentList	op2		328529	1					
ANR	328760	Argument	op2		328529	0					
ANR	328761	Identifier	op2		328529	0					
ANR	328762	CompoundStatement		24:40:746:746	328529	1					
ANR	328763	ExpressionStatement	"ZVAL_LONG ( result , 0 )"	1805:5:46330:46350	328529	0	True				
ANR	328764	CallExpression	"ZVAL_LONG ( result , 0 )"		328529	0					
ANR	328765	Callee	ZVAL_LONG		328529	0					
ANR	328766	Identifier	ZVAL_LONG		328529	0					
ANR	328767	ArgumentList	result		328529	1					
ANR	328768	Argument	result		328529	0					
ANR	328769	Identifier	result		328529	0					
ANR	328770	Argument	0		328529	1					
ANR	328771	PrimaryExpression	0		328529	0					
ANR	328772	ElseStatement	else		328529	0					
ANR	328773	CompoundStatement		26:11:786:786	328529	0					
ANR	328774	ExpressionStatement	Z_DVAL_P ( result ) = Z_DVAL_P ( op1 ) - Z_DVAL_P ( op2 )	1807:5:46370:46418	328529	0	True				
ANR	328775	AssignmentExpression	Z_DVAL_P ( result ) = Z_DVAL_P ( op1 ) - Z_DVAL_P ( op2 )		328529	0		=			
ANR	328776	CallExpression	Z_DVAL_P ( result )		328529	0					
ANR	328777	Callee	Z_DVAL_P		328529	0					
ANR	328778	Identifier	Z_DVAL_P		328529	0					
ANR	328779	ArgumentList	result		328529	1					
ANR	328780	Argument	result		328529	0					
ANR	328781	Identifier	result		328529	0					
ANR	328782	AdditiveExpression	Z_DVAL_P ( op1 ) - Z_DVAL_P ( op2 )		328529	1		-			
ANR	328783	CallExpression	Z_DVAL_P ( op1 )		328529	0					
ANR	328784	Callee	Z_DVAL_P		328529	0					
ANR	328785	Identifier	Z_DVAL_P		328529	0					
ANR	328786	ArgumentList	op1		328529	1					
ANR	328787	Argument	op1		328529	0					
ANR	328788	Identifier	op1		328529	0					
ANR	328789	CallExpression	Z_DVAL_P ( op2 )		328529	1					
ANR	328790	Callee	Z_DVAL_P		328529	0					
ANR	328791	Identifier	Z_DVAL_P		328529	0					
ANR	328792	ArgumentList	op2		328529	1					
ANR	328793	Argument	op2		328529	0					
ANR	328794	Identifier	op2		328529	0					
ANR	328795	ExpressionStatement	"ZVAL_LONG ( result , ZEND_NORMALIZE_BOOL ( Z_DVAL_P ( result ) ) )"	1808:5:46425:46481	328529	1	True				
ANR	328796	CallExpression	"ZVAL_LONG ( result , ZEND_NORMALIZE_BOOL ( Z_DVAL_P ( result ) ) )"		328529	0					
ANR	328797	Callee	ZVAL_LONG		328529	0					
ANR	328798	Identifier	ZVAL_LONG		328529	0					
ANR	328799	ArgumentList	result		328529	1					
ANR	328800	Argument	result		328529	0					
ANR	328801	Identifier	result		328529	0					
ANR	328802	Argument	ZEND_NORMALIZE_BOOL ( Z_DVAL_P ( result ) )		328529	1					
ANR	328803	CallExpression	ZEND_NORMALIZE_BOOL ( Z_DVAL_P ( result ) )		328529	0					
ANR	328804	Callee	ZEND_NORMALIZE_BOOL		328529	0					
ANR	328805	Identifier	ZEND_NORMALIZE_BOOL		328529	0					
ANR	328806	ArgumentList	Z_DVAL_P ( result )		328529	1					
ANR	328807	Argument	Z_DVAL_P ( result )		328529	0					
ANR	328808	CallExpression	Z_DVAL_P ( result )		328529	0					
ANR	328809	Callee	Z_DVAL_P		328529	0					
ANR	328810	Identifier	Z_DVAL_P		328529	0					
ANR	328811	ArgumentList	result		328529	1					
ANR	328812	Argument	result		328529	0					
ANR	328813	Identifier	result		328529	0					
ANR	328814	ReturnStatement	return SUCCESS ;	1810:4:46493:46507	328529	41	True				
ANR	328815	Identifier	SUCCESS		328529	0					
ANR	328816	Statement	case	1812:3:46513:46516	328529	42	True				
ANR	328817	Statement	TYPE_PAIR	1812:8:46518:46526	328529	43	True				
ANR	328818	Statement	(	1812:17:46527:46527	328529	44	True				
ANR	328819	Statement	IS_ARRAY	1812:18:46528:46535	328529	45	True				
ANR	328820	Statement	","	1812:26:46536:46536	328529	46	True				
ANR	328821	Statement	IS_ARRAY	1812:28:46538:46545	328529	47	True				
ANR	328822	Statement	)	1812:36:46546:46546	328529	48	True				
ANR	328823	Statement	:	1812:37:46547:46547	328529	49	True				
ANR	328824	ExpressionStatement	"ZVAL_LONG ( result , zend_compare_arrays ( op1 , op2 ) )"	1813:4:46553:46601	328529	50	True				
ANR	328825	CallExpression	"ZVAL_LONG ( result , zend_compare_arrays ( op1 , op2 ) )"		328529	0					
ANR	328826	Callee	ZVAL_LONG		328529	0					
ANR	328827	Identifier	ZVAL_LONG		328529	0					
ANR	328828	ArgumentList	result		328529	1					
ANR	328829	Argument	result		328529	0					
ANR	328830	Identifier	result		328529	0					
ANR	328831	Argument	"zend_compare_arrays ( op1 , op2 )"		328529	1					
ANR	328832	CallExpression	"zend_compare_arrays ( op1 , op2 )"		328529	0					
ANR	328833	Callee	zend_compare_arrays		328529	0					
ANR	328834	Identifier	zend_compare_arrays		328529	0					
ANR	328835	ArgumentList	op1		328529	1					
ANR	328836	Argument	op1		328529	0					
ANR	328837	Identifier	op1		328529	0					
ANR	328838	Argument	op2		328529	1					
ANR	328839	Identifier	op2		328529	0					
ANR	328840	ReturnStatement	return SUCCESS ;	1814:4:46607:46621	328529	51	True				
ANR	328841	Identifier	SUCCESS		328529	0					
ANR	328842	Statement	case	1816:3:46627:46630	328529	52	True				
ANR	328843	Statement	TYPE_PAIR	1816:8:46632:46640	328529	53	True				
ANR	328844	Statement	(	1816:17:46641:46641	328529	54	True				
ANR	328845	Statement	IS_NULL	1816:18:46642:46648	328529	55	True				
ANR	328846	Statement	","	1816:25:46649:46649	328529	56	True				
ANR	328847	Statement	IS_NULL	1816:27:46651:46657	328529	57	True				
ANR	328848	Statement	)	1816:34:46658:46658	328529	58	True				
ANR	328849	Statement	:	1816:35:46659:46659	328529	59	True				
ANR	328850	Statement	case	1817:3:46664:46667	328529	60	True				
ANR	328851	Statement	TYPE_PAIR	1817:8:46669:46677	328529	61	True				
ANR	328852	Statement	(	1817:17:46678:46678	328529	62	True				
ANR	328853	Statement	IS_NULL	1817:18:46679:46685	328529	63	True				
ANR	328854	Statement	","	1817:25:46686:46686	328529	64	True				
ANR	328855	Statement	IS_FALSE	1817:27:46688:46695	328529	65	True				
ANR	328856	Statement	)	1817:35:46696:46696	328529	66	True				
ANR	328857	Statement	:	1817:36:46697:46697	328529	67	True				
ANR	328858	Statement	case	1818:3:46702:46705	328529	68	True				
ANR	328859	Statement	TYPE_PAIR	1818:8:46707:46715	328529	69	True				
ANR	328860	Statement	(	1818:17:46716:46716	328529	70	True				
ANR	328861	Statement	IS_FALSE	1818:18:46717:46724	328529	71	True				
ANR	328862	Statement	","	1818:26:46725:46725	328529	72	True				
ANR	328863	Statement	IS_NULL	1818:28:46727:46733	328529	73	True				
ANR	328864	Statement	)	1818:35:46734:46734	328529	74	True				
ANR	328865	Statement	:	1818:36:46735:46735	328529	75	True				
ANR	328866	Statement	case	1819:3:46740:46743	328529	76	True				
ANR	328867	Statement	TYPE_PAIR	1819:8:46745:46753	328529	77	True				
ANR	328868	Statement	(	1819:17:46754:46754	328529	78	True				
ANR	328869	Statement	IS_FALSE	1819:18:46755:46762	328529	79	True				
ANR	328870	Statement	","	1819:26:46763:46763	328529	80	True				
ANR	328871	Statement	IS_FALSE	1819:28:46765:46772	328529	81	True				
ANR	328872	Statement	)	1819:36:46773:46773	328529	82	True				
ANR	328873	Statement	:	1819:37:46774:46774	328529	83	True				
ANR	328874	Statement	case	1820:3:46779:46782	328529	84	True				
ANR	328875	Statement	TYPE_PAIR	1820:8:46784:46792	328529	85	True				
ANR	328876	Statement	(	1820:17:46793:46793	328529	86	True				
ANR	328877	Statement	IS_TRUE	1820:18:46794:46800	328529	87	True				
ANR	328878	Statement	","	1820:25:46801:46801	328529	88	True				
ANR	328879	Statement	IS_TRUE	1820:27:46803:46809	328529	89	True				
ANR	328880	Statement	)	1820:34:46810:46810	328529	90	True				
ANR	328881	Statement	:	1820:35:46811:46811	328529	91	True				
ANR	328882	ExpressionStatement	"ZVAL_LONG ( result , 0 )"	1821:4:46817:46837	328529	92	True				
ANR	328883	CallExpression	"ZVAL_LONG ( result , 0 )"		328529	0					
ANR	328884	Callee	ZVAL_LONG		328529	0					
ANR	328885	Identifier	ZVAL_LONG		328529	0					
ANR	328886	ArgumentList	result		328529	1					
ANR	328887	Argument	result		328529	0					
ANR	328888	Identifier	result		328529	0					
ANR	328889	Argument	0		328529	1					
ANR	328890	PrimaryExpression	0		328529	0					
ANR	328891	ReturnStatement	return SUCCESS ;	1822:4:46843:46857	328529	93	True				
ANR	328892	Identifier	SUCCESS		328529	0					
ANR	328893	Statement	case	1824:3:46863:46866	328529	94	True				
ANR	328894	Statement	TYPE_PAIR	1824:8:46868:46876	328529	95	True				
ANR	328895	Statement	(	1824:17:46877:46877	328529	96	True				
ANR	328896	Statement	IS_NULL	1824:18:46878:46884	328529	97	True				
ANR	328897	Statement	","	1824:25:46885:46885	328529	98	True				
ANR	328898	Statement	IS_TRUE	1824:27:46887:46893	328529	99	True				
ANR	328899	Statement	)	1824:34:46894:46894	328529	100	True				
ANR	328900	Statement	:	1824:35:46895:46895	328529	101	True				
ANR	328901	ExpressionStatement	"ZVAL_LONG ( result , - 1 )"	1825:4:46901:46922	328529	102	True				
ANR	328902	CallExpression	"ZVAL_LONG ( result , - 1 )"		328529	0					
ANR	328903	Callee	ZVAL_LONG		328529	0					
ANR	328904	Identifier	ZVAL_LONG		328529	0					
ANR	328905	ArgumentList	result		328529	1					
ANR	328906	Argument	result		328529	0					
ANR	328907	Identifier	result		328529	0					
ANR	328908	Argument	- 1		328529	1					
ANR	328909	UnaryOperationExpression	- 1		328529	0					
ANR	328910	UnaryOperator	-		328529	0					
ANR	328911	PrimaryExpression	1		328529	1					
ANR	328912	ReturnStatement	return SUCCESS ;	1826:4:46928:46942	328529	103	True				
ANR	328913	Identifier	SUCCESS		328529	0					
ANR	328914	Statement	case	1828:3:46948:46951	328529	104	True				
ANR	328915	Statement	TYPE_PAIR	1828:8:46953:46961	328529	105	True				
ANR	328916	Statement	(	1828:17:46962:46962	328529	106	True				
ANR	328917	Statement	IS_TRUE	1828:18:46963:46969	328529	107	True				
ANR	328918	Statement	","	1828:25:46970:46970	328529	108	True				
ANR	328919	Statement	IS_NULL	1828:27:46972:46978	328529	109	True				
ANR	328920	Statement	)	1828:34:46979:46979	328529	110	True				
ANR	328921	Statement	:	1828:35:46980:46980	328529	111	True				
ANR	328922	ExpressionStatement	"ZVAL_LONG ( result , 1 )"	1829:4:46986:47006	328529	112	True				
ANR	328923	CallExpression	"ZVAL_LONG ( result , 1 )"		328529	0					
ANR	328924	Callee	ZVAL_LONG		328529	0					
ANR	328925	Identifier	ZVAL_LONG		328529	0					
ANR	328926	ArgumentList	result		328529	1					
ANR	328927	Argument	result		328529	0					
ANR	328928	Identifier	result		328529	0					
ANR	328929	Argument	1		328529	1					
ANR	328930	PrimaryExpression	1		328529	0					
ANR	328931	ReturnStatement	return SUCCESS ;	1830:4:47012:47026	328529	113	True				
ANR	328932	Identifier	SUCCESS		328529	0					
ANR	328933	Statement	case	1832:3:47032:47035	328529	114	True				
ANR	328934	Statement	TYPE_PAIR	1832:8:47037:47045	328529	115	True				
ANR	328935	Statement	(	1832:17:47046:47046	328529	116	True				
ANR	328936	Statement	IS_STRING	1832:18:47047:47055	328529	117	True				
ANR	328937	Statement	","	1832:27:47056:47056	328529	118	True				
ANR	328938	Statement	IS_STRING	1832:29:47058:47066	328529	119	True				
ANR	328939	Statement	)	1832:38:47067:47067	328529	120	True				
ANR	328940	Statement	:	1832:39:47068:47068	328529	121	True				
ANR	328941	IfStatement	if ( Z_STR_P ( op1 ) == Z_STR_P ( op2 ) )		328529	122					
ANR	328942	Condition	Z_STR_P ( op1 ) == Z_STR_P ( op2 )	1833:8:47078:47105	328529	0	True				
ANR	328943	EqualityExpression	Z_STR_P ( op1 ) == Z_STR_P ( op2 )		328529	0		==			
ANR	328944	CallExpression	Z_STR_P ( op1 )		328529	0					
ANR	328945	Callee	Z_STR_P		328529	0					
ANR	328946	Identifier	Z_STR_P		328529	0					
ANR	328947	ArgumentList	op1		328529	1					
ANR	328948	Argument	op1		328529	0					
ANR	328949	Identifier	op1		328529	0					
ANR	328950	CallExpression	Z_STR_P ( op2 )		328529	1					
ANR	328951	Callee	Z_STR_P		328529	0					
ANR	328952	Identifier	Z_STR_P		328529	0					
ANR	328953	ArgumentList	op2		328529	1					
ANR	328954	Argument	op2		328529	0					
ANR	328955	Identifier	op2		328529	0					
ANR	328956	CompoundStatement		53:38:1531:1531	328529	1					
ANR	328957	ExpressionStatement	"ZVAL_LONG ( result , 0 )"	1834:5:47115:47135	328529	0	True				
ANR	328958	CallExpression	"ZVAL_LONG ( result , 0 )"		328529	0					
ANR	328959	Callee	ZVAL_LONG		328529	0					
ANR	328960	Identifier	ZVAL_LONG		328529	0					
ANR	328961	ArgumentList	result		328529	1					
ANR	328962	Argument	result		328529	0					
ANR	328963	Identifier	result		328529	0					
ANR	328964	Argument	0		328529	1					
ANR	328965	PrimaryExpression	0		328529	0					
ANR	328966	ReturnStatement	return SUCCESS ;	1835:5:47142:47156	328529	1	True				
ANR	328967	Identifier	SUCCESS		328529	0					
ANR	328968	ExpressionStatement	"ZVAL_LONG ( result , zendi_smart_strcmp ( Z_STR_P ( op1 ) , Z_STR_P ( op2 ) ) )"	1837:4:47168:47233	328529	123	True				
ANR	328969	CallExpression	"ZVAL_LONG ( result , zendi_smart_strcmp ( Z_STR_P ( op1 ) , Z_STR_P ( op2 ) ) )"		328529	0					
ANR	328970	Callee	ZVAL_LONG		328529	0					
ANR	328971	Identifier	ZVAL_LONG		328529	0					
ANR	328972	ArgumentList	result		328529	1					
ANR	328973	Argument	result		328529	0					
ANR	328974	Identifier	result		328529	0					
ANR	328975	Argument	"zendi_smart_strcmp ( Z_STR_P ( op1 ) , Z_STR_P ( op2 ) )"		328529	1					
ANR	328976	CallExpression	"zendi_smart_strcmp ( Z_STR_P ( op1 ) , Z_STR_P ( op2 ) )"		328529	0					
ANR	328977	Callee	zendi_smart_strcmp		328529	0					
ANR	328978	Identifier	zendi_smart_strcmp		328529	0					
ANR	328979	ArgumentList	Z_STR_P ( op1 )		328529	1					
ANR	328980	Argument	Z_STR_P ( op1 )		328529	0					
ANR	328981	CallExpression	Z_STR_P ( op1 )		328529	0					
ANR	328982	Callee	Z_STR_P		328529	0					
ANR	328983	Identifier	Z_STR_P		328529	0					
ANR	328984	ArgumentList	op1		328529	1					
ANR	328985	Argument	op1		328529	0					
ANR	328986	Identifier	op1		328529	0					
ANR	328987	Argument	Z_STR_P ( op2 )		328529	1					
ANR	328988	CallExpression	Z_STR_P ( op2 )		328529	0					
ANR	328989	Callee	Z_STR_P		328529	0					
ANR	328990	Identifier	Z_STR_P		328529	0					
ANR	328991	ArgumentList	op2		328529	1					
ANR	328992	Argument	op2		328529	0					
ANR	328993	Identifier	op2		328529	0					
ANR	328994	ReturnStatement	return SUCCESS ;	1838:4:47239:47253	328529	124	True				
ANR	328995	Identifier	SUCCESS		328529	0					
ANR	328996	Statement	case	1840:3:47259:47262	328529	125	True				
ANR	328997	Statement	TYPE_PAIR	1840:8:47264:47272	328529	126	True				
ANR	328998	Statement	(	1840:17:47273:47273	328529	127	True				
ANR	328999	Statement	IS_NULL	1840:18:47274:47280	328529	128	True				
ANR	329000	Statement	","	1840:25:47281:47281	328529	129	True				
ANR	329001	Statement	IS_STRING	1840:27:47283:47291	328529	130	True				
ANR	329002	Statement	)	1840:36:47292:47292	328529	131	True				
ANR	329003	Statement	:	1840:37:47293:47293	328529	132	True				
ANR	329004	ExpressionStatement	"ZVAL_LONG ( result , Z_STRLEN_P ( op2 ) == 0 ? 0 : - 1 )"	1841:4:47299:47347	328529	133	True				
ANR	329005	CallExpression	"ZVAL_LONG ( result , Z_STRLEN_P ( op2 ) == 0 ? 0 : - 1 )"		328529	0					
ANR	329006	Callee	ZVAL_LONG		328529	0					
ANR	329007	Identifier	ZVAL_LONG		328529	0					
ANR	329008	ArgumentList	result		328529	1					
ANR	329009	Argument	result		328529	0					
ANR	329010	Identifier	result		328529	0					
ANR	329011	Argument	Z_STRLEN_P ( op2 ) == 0 ? 0 : - 1		328529	1					
ANR	329012	ConditionalExpression	Z_STRLEN_P ( op2 ) == 0 ? 0 : - 1		328529	0					
ANR	329013	Condition	Z_STRLEN_P ( op2 ) == 0		328529	0					
ANR	329014	EqualityExpression	Z_STRLEN_P ( op2 ) == 0		328529	0		==			
ANR	329015	CallExpression	Z_STRLEN_P ( op2 )		328529	0					
ANR	329016	Callee	Z_STRLEN_P		328529	0					
ANR	329017	Identifier	Z_STRLEN_P		328529	0					
ANR	329018	ArgumentList	op2		328529	1					
ANR	329019	Argument	op2		328529	0					
ANR	329020	Identifier	op2		328529	0					
ANR	329021	PrimaryExpression	0		328529	1					
ANR	329022	PrimaryExpression	0		328529	1					
ANR	329023	UnaryOperationExpression	- 1		328529	2					
ANR	329024	UnaryOperator	-		328529	0					
ANR	329025	PrimaryExpression	1		328529	1					
ANR	329026	ReturnStatement	return SUCCESS ;	1842:4:47353:47367	328529	134	True				
ANR	329027	Identifier	SUCCESS		328529	0					
ANR	329028	Statement	case	1844:3:47373:47376	328529	135	True				
ANR	329029	Statement	TYPE_PAIR	1844:8:47378:47386	328529	136	True				
ANR	329030	Statement	(	1844:17:47387:47387	328529	137	True				
ANR	329031	Statement	IS_STRING	1844:18:47388:47396	328529	138	True				
ANR	329032	Statement	","	1844:27:47397:47397	328529	139	True				
ANR	329033	Statement	IS_NULL	1844:29:47399:47405	328529	140	True				
ANR	329034	Statement	)	1844:36:47406:47406	328529	141	True				
ANR	329035	Statement	:	1844:37:47407:47407	328529	142	True				
ANR	329036	ExpressionStatement	"ZVAL_LONG ( result , Z_STRLEN_P ( op1 ) == 0 ? 0 : 1 )"	1845:4:47413:47460	328529	143	True				
ANR	329037	CallExpression	"ZVAL_LONG ( result , Z_STRLEN_P ( op1 ) == 0 ? 0 : 1 )"		328529	0					
ANR	329038	Callee	ZVAL_LONG		328529	0					
ANR	329039	Identifier	ZVAL_LONG		328529	0					
ANR	329040	ArgumentList	result		328529	1					
ANR	329041	Argument	result		328529	0					
ANR	329042	Identifier	result		328529	0					
ANR	329043	Argument	Z_STRLEN_P ( op1 ) == 0 ? 0 : 1		328529	1					
ANR	329044	ConditionalExpression	Z_STRLEN_P ( op1 ) == 0 ? 0 : 1		328529	0					
ANR	329045	Condition	Z_STRLEN_P ( op1 ) == 0		328529	0					
ANR	329046	EqualityExpression	Z_STRLEN_P ( op1 ) == 0		328529	0		==			
ANR	329047	CallExpression	Z_STRLEN_P ( op1 )		328529	0					
ANR	329048	Callee	Z_STRLEN_P		328529	0					
ANR	329049	Identifier	Z_STRLEN_P		328529	0					
ANR	329050	ArgumentList	op1		328529	1					
ANR	329051	Argument	op1		328529	0					
ANR	329052	Identifier	op1		328529	0					
ANR	329053	PrimaryExpression	0		328529	1					
ANR	329054	PrimaryExpression	0		328529	1					
ANR	329055	PrimaryExpression	1		328529	2					
ANR	329056	ReturnStatement	return SUCCESS ;	1846:4:47466:47480	328529	144	True				
ANR	329057	Identifier	SUCCESS		328529	0					
ANR	329058	Statement	case	1848:3:47486:47489	328529	145	True				
ANR	329059	Statement	TYPE_PAIR	1848:8:47491:47499	328529	146	True				
ANR	329060	Statement	(	1848:17:47500:47500	328529	147	True				
ANR	329061	Statement	IS_OBJECT	1848:18:47501:47509	328529	148	True				
ANR	329062	Statement	","	1848:27:47510:47510	328529	149	True				
ANR	329063	Statement	IS_NULL	1848:29:47512:47518	328529	150	True				
ANR	329064	Statement	)	1848:36:47519:47519	328529	151	True				
ANR	329065	Statement	:	1848:37:47520:47520	328529	152	True				
ANR	329066	ExpressionStatement	"ZVAL_LONG ( result , 1 )"	1849:4:47526:47546	328529	153	True				
ANR	329067	CallExpression	"ZVAL_LONG ( result , 1 )"		328529	0					
ANR	329068	Callee	ZVAL_LONG		328529	0					
ANR	329069	Identifier	ZVAL_LONG		328529	0					
ANR	329070	ArgumentList	result		328529	1					
ANR	329071	Argument	result		328529	0					
ANR	329072	Identifier	result		328529	0					
ANR	329073	Argument	1		328529	1					
ANR	329074	PrimaryExpression	1		328529	0					
ANR	329075	ReturnStatement	return SUCCESS ;	1850:4:47552:47566	328529	154	True				
ANR	329076	Identifier	SUCCESS		328529	0					
ANR	329077	Statement	case	1852:3:47572:47575	328529	155	True				
ANR	329078	Statement	TYPE_PAIR	1852:8:47577:47585	328529	156	True				
ANR	329079	Statement	(	1852:17:47586:47586	328529	157	True				
ANR	329080	Statement	IS_NULL	1852:18:47587:47593	328529	158	True				
ANR	329081	Statement	","	1852:25:47594:47594	328529	159	True				
ANR	329082	Statement	IS_OBJECT	1852:27:47596:47604	328529	160	True				
ANR	329083	Statement	)	1852:36:47605:47605	328529	161	True				
ANR	329084	Statement	:	1852:37:47606:47606	328529	162	True				
ANR	329085	ExpressionStatement	"ZVAL_LONG ( result , - 1 )"	1853:4:47612:47633	328529	163	True				
ANR	329086	CallExpression	"ZVAL_LONG ( result , - 1 )"		328529	0					
ANR	329087	Callee	ZVAL_LONG		328529	0					
ANR	329088	Identifier	ZVAL_LONG		328529	0					
ANR	329089	ArgumentList	result		328529	1					
ANR	329090	Argument	result		328529	0					
ANR	329091	Identifier	result		328529	0					
ANR	329092	Argument	- 1		328529	1					
ANR	329093	UnaryOperationExpression	- 1		328529	0					
ANR	329094	UnaryOperator	-		328529	0					
ANR	329095	PrimaryExpression	1		328529	1					
ANR	329096	ReturnStatement	return SUCCESS ;	1854:4:47639:47653	328529	164	True				
ANR	329097	Identifier	SUCCESS		328529	0					
ANR	329098	Label	default :	1856:3:47659:47666	328529	165	True				
ANR	329099	Identifier	default		328529	0					
ANR	329100	IfStatement	if ( Z_ISREF_P ( op1 ) )		328529	166					
ANR	329101	Condition	Z_ISREF_P ( op1 )	1857:8:47676:47689	328529	0	True				
ANR	329102	CallExpression	Z_ISREF_P ( op1 )		328529	0					
ANR	329103	Callee	Z_ISREF_P		328529	0					
ANR	329104	Identifier	Z_ISREF_P		328529	0					
ANR	329105	ArgumentList	op1		328529	1					
ANR	329106	Argument	op1		328529	0					
ANR	329107	Identifier	op1		328529	0					
ANR	329108	CompoundStatement		77:24:2115:2115	328529	1					
ANR	329109	ExpressionStatement	op1 = Z_REFVAL_P ( op1 )	1858:5:47699:47720	328529	0	True				
ANR	329110	AssignmentExpression	op1 = Z_REFVAL_P ( op1 )		328529	0		=			
ANR	329111	Identifier	op1		328529	0					
ANR	329112	CallExpression	Z_REFVAL_P ( op1 )		328529	1					
ANR	329113	Callee	Z_REFVAL_P		328529	0					
ANR	329114	Identifier	Z_REFVAL_P		328529	0					
ANR	329115	ArgumentList	op1		328529	1					
ANR	329116	Argument	op1		328529	0					
ANR	329117	Identifier	op1		328529	0					
ANR	329118	ContinueStatement	continue ;	1859:5:47727:47735	328529	1	True				
ANR	329119	ElseStatement	else		328529	0					
ANR	329120	IfStatement	if ( Z_ISREF_P ( op2 ) )		328529	0					
ANR	329121	Condition	Z_ISREF_P ( op2 )	1860:15:47752:47765	328529	0	True				
ANR	329122	CallExpression	Z_ISREF_P ( op2 )		328529	0					
ANR	329123	Callee	Z_ISREF_P		328529	0					
ANR	329124	Identifier	Z_ISREF_P		328529	0					
ANR	329125	ArgumentList	op2		328529	1					
ANR	329126	Argument	op2		328529	0					
ANR	329127	Identifier	op2		328529	0					
ANR	329128	CompoundStatement		80:31:2191:2191	328529	1					
ANR	329129	ExpressionStatement	op2 = Z_REFVAL_P ( op2 )	1861:5:47775:47796	328529	0	True				
ANR	329130	AssignmentExpression	op2 = Z_REFVAL_P ( op2 )		328529	0		=			
ANR	329131	Identifier	op2		328529	0					
ANR	329132	CallExpression	Z_REFVAL_P ( op2 )		328529	1					
ANR	329133	Callee	Z_REFVAL_P		328529	0					
ANR	329134	Identifier	Z_REFVAL_P		328529	0					
ANR	329135	ArgumentList	op2		328529	1					
ANR	329136	Argument	op2		328529	0					
ANR	329137	Identifier	op2		328529	0					
ANR	329138	ContinueStatement	continue ;	1862:5:47803:47811	328529	1	True				
ANR	329139	IfStatement	"if ( Z_TYPE_P ( op1 ) == IS_OBJECT && Z_OBJ_HANDLER_P ( op1 , compare ) )"		328529	167					
ANR	329140	Condition	"Z_TYPE_P ( op1 ) == IS_OBJECT && Z_OBJ_HANDLER_P ( op1 , compare )"	1865:8:47828:47886	328529	0	True				
ANR	329141	AndExpression	"Z_TYPE_P ( op1 ) == IS_OBJECT && Z_OBJ_HANDLER_P ( op1 , compare )"		328529	0		&&			
ANR	329142	EqualityExpression	Z_TYPE_P ( op1 ) == IS_OBJECT		328529	0		==			
ANR	329143	CallExpression	Z_TYPE_P ( op1 )		328529	0					
ANR	329144	Callee	Z_TYPE_P		328529	0					
ANR	329145	Identifier	Z_TYPE_P		328529	0					
ANR	329146	ArgumentList	op1		328529	1					
ANR	329147	Argument	op1		328529	0					
ANR	329148	Identifier	op1		328529	0					
ANR	329149	Identifier	IS_OBJECT		328529	1					
ANR	329150	CallExpression	"Z_OBJ_HANDLER_P ( op1 , compare )"		328529	1					
ANR	329151	Callee	Z_OBJ_HANDLER_P		328529	0					
ANR	329152	Identifier	Z_OBJ_HANDLER_P		328529	0					
ANR	329153	ArgumentList	op1		328529	1					
ANR	329154	Argument	op1		328529	0					
ANR	329155	Identifier	op1		328529	0					
ANR	329156	Argument	compare		328529	1					
ANR	329157	Identifier	compare		328529	0					
ANR	329158	CompoundStatement		85:69:2312:2312	328529	1					
ANR	329159	ExpressionStatement	"ret = Z_OBJ_HANDLER_P ( op1 , compare ) ( result , op1 , op2 )"	1866:5:47896:47949	328529	0	True				
ANR	329160	AssignmentExpression	"ret = Z_OBJ_HANDLER_P ( op1 , compare ) ( result , op1 , op2 )"		328529	0		=			
ANR	329161	Identifier	ret		328529	0					
ANR	329162	CallExpression	"Z_OBJ_HANDLER_P ( op1 , compare ) ( result , op1 , op2 )"		328529	1					
ANR	329163	Callee	"Z_OBJ_HANDLER_P ( op1 , compare )"		328529	0					
ANR	329164	CallExpression	"Z_OBJ_HANDLER_P ( op1 , compare )"		328529	0					
ANR	329165	Callee	Z_OBJ_HANDLER_P		328529	0					
ANR	329166	Identifier	Z_OBJ_HANDLER_P		328529	0					
ANR	329167	ArgumentList	op1		328529	1					
ANR	329168	Argument	op1		328529	0					
ANR	329169	Identifier	op1		328529	0					
ANR	329170	Argument	compare		328529	1					
ANR	329171	Identifier	compare		328529	0					
ANR	329172	ArgumentList	result		328529	1					
ANR	329173	Argument	result		328529	0					
ANR	329174	Identifier	result		328529	0					
ANR	329175	Argument	op1		328529	1					
ANR	329176	Identifier	op1		328529	0					
ANR	329177	Argument	op2		328529	2					
ANR	329178	Identifier	op2		328529	0					
ANR	329179	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( result ) != IS_LONG ) )		328529	1					
ANR	329180	Condition	UNEXPECTED ( Z_TYPE_P ( result ) != IS_LONG )	1867:9:47960:47998	328529	0	True				
ANR	329181	CallExpression	UNEXPECTED ( Z_TYPE_P ( result ) != IS_LONG )		328529	0					
ANR	329182	Callee	UNEXPECTED		328529	0					
ANR	329183	Identifier	UNEXPECTED		328529	0					
ANR	329184	ArgumentList	Z_TYPE_P ( result ) != IS_LONG		328529	1					
ANR	329185	Argument	Z_TYPE_P ( result ) != IS_LONG		328529	0					
ANR	329186	EqualityExpression	Z_TYPE_P ( result ) != IS_LONG		328529	0		!=			
ANR	329187	CallExpression	Z_TYPE_P ( result )		328529	0					
ANR	329188	Callee	Z_TYPE_P		328529	0					
ANR	329189	Identifier	Z_TYPE_P		328529	0					
ANR	329190	ArgumentList	result		328529	1					
ANR	329191	Argument	result		328529	0					
ANR	329192	Identifier	result		328529	0					
ANR	329193	Identifier	IS_LONG		328529	1					
ANR	329194	CompoundStatement		87:50:2424:2424	328529	1					
ANR	329195	ExpressionStatement	convert_compare_result_to_long ( result )	1868:6:48009:48047	328529	0	True				
ANR	329196	CallExpression	convert_compare_result_to_long ( result )		328529	0					
ANR	329197	Callee	convert_compare_result_to_long		328529	0					
ANR	329198	Identifier	convert_compare_result_to_long		328529	0					
ANR	329199	ArgumentList	result		328529	1					
ANR	329200	Argument	result		328529	0					
ANR	329201	Identifier	result		328529	0					
ANR	329202	ReturnStatement	return ret ;	1870:5:48061:48071	328529	2	True				
ANR	329203	Identifier	ret		328529	0					
ANR	329204	ElseStatement	else		328529	0					
ANR	329205	IfStatement	"if ( Z_TYPE_P ( op2 ) == IS_OBJECT && Z_OBJ_HANDLER_P ( op2 , compare ) )"		328529	0					
ANR	329206	Condition	"Z_TYPE_P ( op2 ) == IS_OBJECT && Z_OBJ_HANDLER_P ( op2 , compare )"	1871:15:48088:48146	328529	0	True				
ANR	329207	AndExpression	"Z_TYPE_P ( op2 ) == IS_OBJECT && Z_OBJ_HANDLER_P ( op2 , compare )"		328529	0		&&			
ANR	329208	EqualityExpression	Z_TYPE_P ( op2 ) == IS_OBJECT		328529	0		==			
ANR	329209	CallExpression	Z_TYPE_P ( op2 )		328529	0					
ANR	329210	Callee	Z_TYPE_P		328529	0					
ANR	329211	Identifier	Z_TYPE_P		328529	0					
ANR	329212	ArgumentList	op2		328529	1					
ANR	329213	Argument	op2		328529	0					
ANR	329214	Identifier	op2		328529	0					
ANR	329215	Identifier	IS_OBJECT		328529	1					
ANR	329216	CallExpression	"Z_OBJ_HANDLER_P ( op2 , compare )"		328529	1					
ANR	329217	Callee	Z_OBJ_HANDLER_P		328529	0					
ANR	329218	Identifier	Z_OBJ_HANDLER_P		328529	0					
ANR	329219	ArgumentList	op2		328529	1					
ANR	329220	Argument	op2		328529	0					
ANR	329221	Identifier	op2		328529	0					
ANR	329222	Argument	compare		328529	1					
ANR	329223	Identifier	compare		328529	0					
ANR	329224	CompoundStatement		91:76:2572:2572	328529	1					
ANR	329225	ExpressionStatement	"ret = Z_OBJ_HANDLER_P ( op2 , compare ) ( result , op1 , op2 )"	1872:5:48156:48209	328529	0	True				
ANR	329226	AssignmentExpression	"ret = Z_OBJ_HANDLER_P ( op2 , compare ) ( result , op1 , op2 )"		328529	0		=			
ANR	329227	Identifier	ret		328529	0					
ANR	329228	CallExpression	"Z_OBJ_HANDLER_P ( op2 , compare ) ( result , op1 , op2 )"		328529	1					
ANR	329229	Callee	"Z_OBJ_HANDLER_P ( op2 , compare )"		328529	0					
ANR	329230	CallExpression	"Z_OBJ_HANDLER_P ( op2 , compare )"		328529	0					
ANR	329231	Callee	Z_OBJ_HANDLER_P		328529	0					
ANR	329232	Identifier	Z_OBJ_HANDLER_P		328529	0					
ANR	329233	ArgumentList	op2		328529	1					
ANR	329234	Argument	op2		328529	0					
ANR	329235	Identifier	op2		328529	0					
ANR	329236	Argument	compare		328529	1					
ANR	329237	Identifier	compare		328529	0					
ANR	329238	ArgumentList	result		328529	1					
ANR	329239	Argument	result		328529	0					
ANR	329240	Identifier	result		328529	0					
ANR	329241	Argument	op1		328529	1					
ANR	329242	Identifier	op1		328529	0					
ANR	329243	Argument	op2		328529	2					
ANR	329244	Identifier	op2		328529	0					
ANR	329245	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( result ) != IS_LONG ) )		328529	1					
ANR	329246	Condition	UNEXPECTED ( Z_TYPE_P ( result ) != IS_LONG )	1873:9:48220:48258	328529	0	True				
ANR	329247	CallExpression	UNEXPECTED ( Z_TYPE_P ( result ) != IS_LONG )		328529	0					
ANR	329248	Callee	UNEXPECTED		328529	0					
ANR	329249	Identifier	UNEXPECTED		328529	0					
ANR	329250	ArgumentList	Z_TYPE_P ( result ) != IS_LONG		328529	1					
ANR	329251	Argument	Z_TYPE_P ( result ) != IS_LONG		328529	0					
ANR	329252	EqualityExpression	Z_TYPE_P ( result ) != IS_LONG		328529	0		!=			
ANR	329253	CallExpression	Z_TYPE_P ( result )		328529	0					
ANR	329254	Callee	Z_TYPE_P		328529	0					
ANR	329255	Identifier	Z_TYPE_P		328529	0					
ANR	329256	ArgumentList	result		328529	1					
ANR	329257	Argument	result		328529	0					
ANR	329258	Identifier	result		328529	0					
ANR	329259	Identifier	IS_LONG		328529	1					
ANR	329260	CompoundStatement		93:50:2684:2684	328529	1					
ANR	329261	ExpressionStatement	convert_compare_result_to_long ( result )	1874:6:48269:48307	328529	0	True				
ANR	329262	CallExpression	convert_compare_result_to_long ( result )		328529	0					
ANR	329263	Callee	convert_compare_result_to_long		328529	0					
ANR	329264	Identifier	convert_compare_result_to_long		328529	0					
ANR	329265	ArgumentList	result		328529	1					
ANR	329266	Argument	result		328529	0					
ANR	329267	Identifier	result		328529	0					
ANR	329268	ReturnStatement	return ret ;	1876:5:48321:48331	328529	2	True				
ANR	329269	Identifier	ret		328529	0					
ANR	329270	IfStatement	if ( Z_TYPE_P ( op1 ) == IS_OBJECT && Z_TYPE_P ( op2 ) == IS_OBJECT )		328529	168					
ANR	329271	Condition	Z_TYPE_P ( op1 ) == IS_OBJECT && Z_TYPE_P ( op2 ) == IS_OBJECT	1879:8:48348:48403	328529	0	True				
ANR	329272	AndExpression	Z_TYPE_P ( op1 ) == IS_OBJECT && Z_TYPE_P ( op2 ) == IS_OBJECT		328529	0		&&			
ANR	329273	EqualityExpression	Z_TYPE_P ( op1 ) == IS_OBJECT		328529	0		==			
ANR	329274	CallExpression	Z_TYPE_P ( op1 )		328529	0					
ANR	329275	Callee	Z_TYPE_P		328529	0					
ANR	329276	Identifier	Z_TYPE_P		328529	0					
ANR	329277	ArgumentList	op1		328529	1					
ANR	329278	Argument	op1		328529	0					
ANR	329279	Identifier	op1		328529	0					
ANR	329280	Identifier	IS_OBJECT		328529	1					
ANR	329281	EqualityExpression	Z_TYPE_P ( op2 ) == IS_OBJECT		328529	1		==			
ANR	329282	CallExpression	Z_TYPE_P ( op2 )		328529	0					
ANR	329283	Callee	Z_TYPE_P		328529	0					
ANR	329284	Identifier	Z_TYPE_P		328529	0					
ANR	329285	ArgumentList	op2		328529	1					
ANR	329286	Argument	op2		328529	0					
ANR	329287	Identifier	op2		328529	0					
ANR	329288	Identifier	IS_OBJECT		328529	1					
ANR	329289	CompoundStatement		99:66:2829:2829	328529	1					
ANR	329290	IfStatement	if ( Z_OBJ_P ( op1 ) == Z_OBJ_P ( op2 ) )		328529	0					
ANR	329291	Condition	Z_OBJ_P ( op1 ) == Z_OBJ_P ( op2 )	1880:9:48417:48444	328529	0	True				
ANR	329292	EqualityExpression	Z_OBJ_P ( op1 ) == Z_OBJ_P ( op2 )		328529	0		==			
ANR	329293	CallExpression	Z_OBJ_P ( op1 )		328529	0					
ANR	329294	Callee	Z_OBJ_P		328529	0					
ANR	329295	Identifier	Z_OBJ_P		328529	0					
ANR	329296	ArgumentList	op1		328529	1					
ANR	329297	Argument	op1		328529	0					
ANR	329298	Identifier	op1		328529	0					
ANR	329299	CallExpression	Z_OBJ_P ( op2 )		328529	1					
ANR	329300	Callee	Z_OBJ_P		328529	0					
ANR	329301	Identifier	Z_OBJ_P		328529	0					
ANR	329302	ArgumentList	op2		328529	1					
ANR	329303	Argument	op2		328529	0					
ANR	329304	Identifier	op2		328529	0					
ANR	329305	CompoundStatement		100:39:2870:2870	328529	1					
ANR	329306	ExpressionStatement	"ZVAL_LONG ( result , 0 )"	1882:6:48532:48552	328529	0	True				
ANR	329307	CallExpression	"ZVAL_LONG ( result , 0 )"		328529	0					
ANR	329308	Callee	ZVAL_LONG		328529	0					
ANR	329309	Identifier	ZVAL_LONG		328529	0					
ANR	329310	ArgumentList	result		328529	1					
ANR	329311	Argument	result		328529	0					
ANR	329312	Identifier	result		328529	0					
ANR	329313	Argument	0		328529	1					
ANR	329314	PrimaryExpression	0		328529	0					
ANR	329315	ReturnStatement	return SUCCESS ;	1883:6:48560:48574	328529	1	True				
ANR	329316	Identifier	SUCCESS		328529	0					
ANR	329317	IfStatement	"if ( Z_OBJ_HANDLER_P ( op1 , compare_objects ) == Z_OBJ_HANDLER_P ( op2 , compare_objects ) )"		328529	1					
ANR	329318	Condition	"Z_OBJ_HANDLER_P ( op1 , compare_objects ) == Z_OBJ_HANDLER_P ( op2 , compare_objects )"	1885:9:48592:48669	328529	0	True				
ANR	329319	EqualityExpression	"Z_OBJ_HANDLER_P ( op1 , compare_objects ) == Z_OBJ_HANDLER_P ( op2 , compare_objects )"		328529	0		==			
ANR	329320	CallExpression	"Z_OBJ_HANDLER_P ( op1 , compare_objects )"		328529	0					
ANR	329321	Callee	Z_OBJ_HANDLER_P		328529	0					
ANR	329322	Identifier	Z_OBJ_HANDLER_P		328529	0					
ANR	329323	ArgumentList	op1		328529	1					
ANR	329324	Argument	op1		328529	0					
ANR	329325	Identifier	op1		328529	0					
ANR	329326	Argument	compare_objects		328529	1					
ANR	329327	Identifier	compare_objects		328529	0					
ANR	329328	CallExpression	"Z_OBJ_HANDLER_P ( op2 , compare_objects )"		328529	1					
ANR	329329	Callee	Z_OBJ_HANDLER_P		328529	0					
ANR	329330	Identifier	Z_OBJ_HANDLER_P		328529	0					
ANR	329331	ArgumentList	op2		328529	1					
ANR	329332	Argument	op2		328529	0					
ANR	329333	Identifier	op2		328529	0					
ANR	329334	Argument	compare_objects		328529	1					
ANR	329335	Identifier	compare_objects		328529	0					
ANR	329336	CompoundStatement		105:89:3095:3095	328529	1					
ANR	329337	ExpressionStatement	"ZVAL_LONG ( result , Z_OBJ_HANDLER_P ( op1 , compare_objects ) ( op1 , op2 ) )"	1886:6:48680:48746	328529	0	True				
ANR	329338	CallExpression	"ZVAL_LONG ( result , Z_OBJ_HANDLER_P ( op1 , compare_objects ) ( op1 , op2 ) )"		328529	0					
ANR	329339	Callee	ZVAL_LONG		328529	0					
ANR	329340	Identifier	ZVAL_LONG		328529	0					
ANR	329341	ArgumentList	result		328529	1					
ANR	329342	Argument	result		328529	0					
ANR	329343	Identifier	result		328529	0					
ANR	329344	Argument	"Z_OBJ_HANDLER_P ( op1 , compare_objects ) ( op1 , op2 )"		328529	1					
ANR	329345	CallExpression	"Z_OBJ_HANDLER_P ( op1 , compare_objects ) ( op1 , op2 )"		328529	0					
ANR	329346	Callee	"Z_OBJ_HANDLER_P ( op1 , compare_objects )"		328529	0					
ANR	329347	CallExpression	"Z_OBJ_HANDLER_P ( op1 , compare_objects )"		328529	0					
ANR	329348	Callee	Z_OBJ_HANDLER_P		328529	0					
ANR	329349	Identifier	Z_OBJ_HANDLER_P		328529	0					
ANR	329350	ArgumentList	op1		328529	1					
ANR	329351	Argument	op1		328529	0					
ANR	329352	Identifier	op1		328529	0					
ANR	329353	Argument	compare_objects		328529	1					
ANR	329354	Identifier	compare_objects		328529	0					
ANR	329355	ArgumentList	op1		328529	1					
ANR	329356	Argument	op1		328529	0					
ANR	329357	Identifier	op1		328529	0					
ANR	329358	Argument	op2		328529	1					
ANR	329359	Identifier	op2		328529	0					
ANR	329360	ReturnStatement	return SUCCESS ;	1887:6:48754:48768	328529	1	True				
ANR	329361	Identifier	SUCCESS		328529	0					
ANR	329362	IfStatement	if ( Z_TYPE_P ( op1 ) == IS_OBJECT )		328529	169					
ANR	329363	Condition	Z_TYPE_P ( op1 ) == IS_OBJECT	1890:8:48791:48816	328529	0	True				
ANR	329364	EqualityExpression	Z_TYPE_P ( op1 ) == IS_OBJECT		328529	0		==			
ANR	329365	CallExpression	Z_TYPE_P ( op1 )		328529	0					
ANR	329366	Callee	Z_TYPE_P		328529	0					
ANR	329367	Identifier	Z_TYPE_P		328529	0					
ANR	329368	ArgumentList	op1		328529	1					
ANR	329369	Argument	op1		328529	0					
ANR	329370	Identifier	op1		328529	0					
ANR	329371	Identifier	IS_OBJECT		328529	1					
ANR	329372	CompoundStatement		110:36:3242:3242	328529	1					
ANR	329373	IfStatement	if ( Z_OBJ_HT_P ( op1 ) -> get )		328529	0					
ANR	329374	Condition	Z_OBJ_HT_P ( op1 ) -> get	1891:9:48830:48849	328529	0	True				
ANR	329375	PtrMemberAccess	Z_OBJ_HT_P ( op1 ) -> get		328529	0					
ANR	329376	CallExpression	Z_OBJ_HT_P ( op1 )		328529	0					
ANR	329377	Callee	Z_OBJ_HT_P		328529	0					
ANR	329378	Identifier	Z_OBJ_HT_P		328529	0					
ANR	329379	ArgumentList	op1		328529	1					
ANR	329380	Argument	op1		328529	0					
ANR	329381	Identifier	op1		328529	0					
ANR	329382	Identifier	get		328529	1					
ANR	329383	CompoundStatement		112:6:3283:3290	328529	1					
ANR	329384	IdentifierDeclStatement	zval rv ;	1892:6:48860:48867	328529	0	True				
ANR	329385	IdentifierDecl	rv		328529	0					
ANR	329386	IdentifierDeclType	zval		328529	0					
ANR	329387	Identifier	rv		328529	1					
ANR	329388	ExpressionStatement	"op_free = Z_OBJ_HT_P ( op1 ) -> get ( op1 , & rv )"	1893:6:48875:48915	328529	1	True				
ANR	329389	AssignmentExpression	"op_free = Z_OBJ_HT_P ( op1 ) -> get ( op1 , & rv )"		328529	0		=			
ANR	329390	Identifier	op_free		328529	0					
ANR	329391	CallExpression	"Z_OBJ_HT_P ( op1 ) -> get ( op1 , & rv )"		328529	1					
ANR	329392	Callee	Z_OBJ_HT_P ( op1 ) -> get		328529	0					
ANR	329393	PtrMemberAccess	Z_OBJ_HT_P ( op1 ) -> get		328529	0					
ANR	329394	CallExpression	Z_OBJ_HT_P ( op1 )		328529	0					
ANR	329395	Callee	Z_OBJ_HT_P		328529	0					
ANR	329396	Identifier	Z_OBJ_HT_P		328529	0					
ANR	329397	ArgumentList	op1		328529	1					
ANR	329398	Argument	op1		328529	0					
ANR	329399	Identifier	op1		328529	0					
ANR	329400	Identifier	get		328529	1					
ANR	329401	ArgumentList	op1		328529	1					
ANR	329402	Argument	op1		328529	0					
ANR	329403	Identifier	op1		328529	0					
ANR	329404	Argument	& rv		328529	1					
ANR	329405	UnaryOperationExpression	& rv		328529	0					
ANR	329406	UnaryOperator	&		328529	0					
ANR	329407	Identifier	rv		328529	1					
ANR	329408	ExpressionStatement	"ret = compare_function ( result , op_free , op2 )"	1894:6:48923:48967	328529	2	True				
ANR	329409	AssignmentExpression	"ret = compare_function ( result , op_free , op2 )"		328529	0		=			
ANR	329410	Identifier	ret		328529	0					
ANR	329411	CallExpression	"compare_function ( result , op_free , op2 )"		328529	1					
ANR	329412	Callee	compare_function		328529	0					
ANR	329413	Identifier	compare_function		328529	0					
ANR	329414	ArgumentList	result		328529	1					
ANR	329415	Argument	result		328529	0					
ANR	329416	Identifier	result		328529	0					
ANR	329417	Argument	op_free		328529	1					
ANR	329418	Identifier	op_free		328529	0					
ANR	329419	Argument	op2		328529	2					
ANR	329420	Identifier	op2		328529	0					
ANR	329421	ExpressionStatement	zend_free_obj_get_result ( op_free )	1895:6:48975:49008	328529	3	True				
ANR	329422	CallExpression	zend_free_obj_get_result ( op_free )		328529	0					
ANR	329423	Callee	zend_free_obj_get_result		328529	0					
ANR	329424	Identifier	zend_free_obj_get_result		328529	0					
ANR	329425	ArgumentList	op_free		328529	1					
ANR	329426	Argument	op_free		328529	0					
ANR	329427	Identifier	op_free		328529	0					
ANR	329428	ReturnStatement	return ret ;	1896:6:49016:49026	328529	4	True				
ANR	329429	Identifier	ret		328529	0					
ANR	329430	ElseStatement	else		328529	0					
ANR	329431	IfStatement	if ( Z_TYPE_P ( op2 ) != IS_OBJECT && Z_OBJ_HT_P ( op1 ) -> cast_object )		328529	0					
ANR	329432	Condition	Z_TYPE_P ( op2 ) != IS_OBJECT && Z_OBJ_HT_P ( op1 ) -> cast_object	1897:16:49044:49101	328529	0	True				
ANR	329433	AndExpression	Z_TYPE_P ( op2 ) != IS_OBJECT && Z_OBJ_HT_P ( op1 ) -> cast_object		328529	0		&&			
ANR	329434	EqualityExpression	Z_TYPE_P ( op2 ) != IS_OBJECT		328529	0		!=			
ANR	329435	CallExpression	Z_TYPE_P ( op2 )		328529	0					
ANR	329436	Callee	Z_TYPE_P		328529	0					
ANR	329437	Identifier	Z_TYPE_P		328529	0					
ANR	329438	ArgumentList	op2		328529	1					
ANR	329439	Argument	op2		328529	0					
ANR	329440	Identifier	op2		328529	0					
ANR	329441	Identifier	IS_OBJECT		328529	1					
ANR	329442	PtrMemberAccess	Z_OBJ_HT_P ( op1 ) -> cast_object		328529	1					
ANR	329443	CallExpression	Z_OBJ_HT_P ( op1 )		328529	0					
ANR	329444	Callee	Z_OBJ_HT_P		328529	0					
ANR	329445	Identifier	Z_OBJ_HT_P		328529	0					
ANR	329446	ArgumentList	op1		328529	1					
ANR	329447	Argument	op1		328529	0					
ANR	329448	Identifier	op1		328529	0					
ANR	329449	Identifier	cast_object		328529	1					
ANR	329450	CompoundStatement		117:76:3527:3527	328529	1					
ANR	329451	ExpressionStatement	ZVAL_UNDEF ( & tmp_free )	1898:6:49112:49133	328529	0	True				
ANR	329452	CallExpression	ZVAL_UNDEF ( & tmp_free )		328529	0					
ANR	329453	Callee	ZVAL_UNDEF		328529	0					
ANR	329454	Identifier	ZVAL_UNDEF		328529	0					
ANR	329455	ArgumentList	& tmp_free		328529	1					
ANR	329456	Argument	& tmp_free		328529	0					
ANR	329457	UnaryOperationExpression	& tmp_free		328529	0					
ANR	329458	UnaryOperator	&		328529	0					
ANR	329459	Identifier	tmp_free		328529	1					
ANR	329460	IfStatement	"if ( Z_OBJ_HT_P ( op1 ) -> cast_object ( op1 , & tmp_free , ( ( Z_TYPE_P ( op2 ) == IS_FALSE || Z_TYPE_P ( op2 ) == IS_TRUE ) ? _IS_BOOL : Z_TYPE_P ( op2 ) ) ) == FAILURE )"		328529	1					
ANR	329461	Condition	"Z_OBJ_HT_P ( op1 ) -> cast_object ( op1 , & tmp_free , ( ( Z_TYPE_P ( op2 ) == IS_FALSE || Z_TYPE_P ( op2 ) == IS_TRUE ) ? _IS_BOOL : Z_TYPE_P ( op2 ) ) ) == FAILURE"	1899:10:49145:49285	328529	0	True				
ANR	329462	EqualityExpression	"Z_OBJ_HT_P ( op1 ) -> cast_object ( op1 , & tmp_free , ( ( Z_TYPE_P ( op2 ) == IS_FALSE || Z_TYPE_P ( op2 ) == IS_TRUE ) ? _IS_BOOL : Z_TYPE_P ( op2 ) ) ) == FAILURE"		328529	0		==			
ANR	329463	CallExpression	"Z_OBJ_HT_P ( op1 ) -> cast_object ( op1 , & tmp_free , ( ( Z_TYPE_P ( op2 ) == IS_FALSE || Z_TYPE_P ( op2 ) == IS_TRUE ) ? _IS_BOOL : Z_TYPE_P ( op2 ) ) )"		328529	0					
ANR	329464	Callee	Z_OBJ_HT_P ( op1 ) -> cast_object		328529	0					
ANR	329465	PtrMemberAccess	Z_OBJ_HT_P ( op1 ) -> cast_object		328529	0					
ANR	329466	CallExpression	Z_OBJ_HT_P ( op1 )		328529	0					
ANR	329467	Callee	Z_OBJ_HT_P		328529	0					
ANR	329468	Identifier	Z_OBJ_HT_P		328529	0					
ANR	329469	ArgumentList	op1		328529	1					
ANR	329470	Argument	op1		328529	0					
ANR	329471	Identifier	op1		328529	0					
ANR	329472	Identifier	cast_object		328529	1					
ANR	329473	ArgumentList	op1		328529	1					
ANR	329474	Argument	op1		328529	0					
ANR	329475	Identifier	op1		328529	0					
ANR	329476	Argument	& tmp_free		328529	1					
ANR	329477	UnaryOperationExpression	& tmp_free		328529	0					
ANR	329478	UnaryOperator	&		328529	0					
ANR	329479	Identifier	tmp_free		328529	1					
ANR	329480	Argument	( Z_TYPE_P ( op2 ) == IS_FALSE || Z_TYPE_P ( op2 ) == IS_TRUE ) ? _IS_BOOL : Z_TYPE_P ( op2 )		328529	2					
ANR	329481	ConditionalExpression	( Z_TYPE_P ( op2 ) == IS_FALSE || Z_TYPE_P ( op2 ) == IS_TRUE ) ? _IS_BOOL : Z_TYPE_P ( op2 )		328529	0					
ANR	329482	Condition	Z_TYPE_P ( op2 ) == IS_FALSE || Z_TYPE_P ( op2 ) == IS_TRUE		328529	0					
ANR	329483	OrExpression	Z_TYPE_P ( op2 ) == IS_FALSE || Z_TYPE_P ( op2 ) == IS_TRUE		328529	0		||			
ANR	329484	EqualityExpression	Z_TYPE_P ( op2 ) == IS_FALSE		328529	0		==			
ANR	329485	CallExpression	Z_TYPE_P ( op2 )		328529	0					
ANR	329486	Callee	Z_TYPE_P		328529	0					
ANR	329487	Identifier	Z_TYPE_P		328529	0					
ANR	329488	ArgumentList	op2		328529	1					
ANR	329489	Argument	op2		328529	0					
ANR	329490	Identifier	op2		328529	0					
ANR	329491	Identifier	IS_FALSE		328529	1					
ANR	329492	EqualityExpression	Z_TYPE_P ( op2 ) == IS_TRUE		328529	1		==			
ANR	329493	CallExpression	Z_TYPE_P ( op2 )		328529	0					
ANR	329494	Callee	Z_TYPE_P		328529	0					
ANR	329495	Identifier	Z_TYPE_P		328529	0					
ANR	329496	ArgumentList	op2		328529	1					
ANR	329497	Argument	op2		328529	0					
ANR	329498	Identifier	op2		328529	0					
ANR	329499	Identifier	IS_TRUE		328529	1					
ANR	329500	Identifier	_IS_BOOL		328529	1					
ANR	329501	CallExpression	Z_TYPE_P ( op2 )		328529	2					
ANR	329502	Callee	Z_TYPE_P		328529	0					
ANR	329503	Identifier	Z_TYPE_P		328529	0					
ANR	329504	ArgumentList	op2		328529	1					
ANR	329505	Argument	op2		328529	0					
ANR	329506	Identifier	op2		328529	0					
ANR	329507	Identifier	FAILURE		328529	1					
ANR	329508	CompoundStatement		119:153:3711:3711	328529	1					
ANR	329509	ExpressionStatement	"ZVAL_LONG ( result , 1 )"	1900:7:49297:49317	328529	0	True				
ANR	329510	CallExpression	"ZVAL_LONG ( result , 1 )"		328529	0					
ANR	329511	Callee	ZVAL_LONG		328529	0					
ANR	329512	Identifier	ZVAL_LONG		328529	0					
ANR	329513	ArgumentList	result		328529	1					
ANR	329514	Argument	result		328529	0					
ANR	329515	Identifier	result		328529	0					
ANR	329516	Argument	1		328529	1					
ANR	329517	PrimaryExpression	1		328529	0					
ANR	329518	ExpressionStatement	zend_free_obj_get_result ( & tmp_free )	1901:7:49326:49361	328529	1	True				
ANR	329519	CallExpression	zend_free_obj_get_result ( & tmp_free )		328529	0					
ANR	329520	Callee	zend_free_obj_get_result		328529	0					
ANR	329521	Identifier	zend_free_obj_get_result		328529	0					
ANR	329522	ArgumentList	& tmp_free		328529	1					
ANR	329523	Argument	& tmp_free		328529	0					
ANR	329524	UnaryOperationExpression	& tmp_free		328529	0					
ANR	329525	UnaryOperator	&		328529	0					
ANR	329526	Identifier	tmp_free		328529	1					
ANR	329527	ReturnStatement	return SUCCESS ;	1902:7:49370:49384	328529	2	True				
ANR	329528	Identifier	SUCCESS		328529	0					
ANR	329529	ExpressionStatement	"ret = compare_function ( result , & tmp_free , op2 )"	1904:6:49400:49446	328529	2	True				
ANR	329530	AssignmentExpression	"ret = compare_function ( result , & tmp_free , op2 )"		328529	0		=			
ANR	329531	Identifier	ret		328529	0					
ANR	329532	CallExpression	"compare_function ( result , & tmp_free , op2 )"		328529	1					
ANR	329533	Callee	compare_function		328529	0					
ANR	329534	Identifier	compare_function		328529	0					
ANR	329535	ArgumentList	result		328529	1					
ANR	329536	Argument	result		328529	0					
ANR	329537	Identifier	result		328529	0					
ANR	329538	Argument	& tmp_free		328529	1					
ANR	329539	UnaryOperationExpression	& tmp_free		328529	0					
ANR	329540	UnaryOperator	&		328529	0					
ANR	329541	Identifier	tmp_free		328529	1					
ANR	329542	Argument	op2		328529	2					
ANR	329543	Identifier	op2		328529	0					
ANR	329544	ExpressionStatement	zend_free_obj_get_result ( & tmp_free )	1905:6:49454:49489	328529	3	True				
ANR	329545	CallExpression	zend_free_obj_get_result ( & tmp_free )		328529	0					
ANR	329546	Callee	zend_free_obj_get_result		328529	0					
ANR	329547	Identifier	zend_free_obj_get_result		328529	0					
ANR	329548	ArgumentList	& tmp_free		328529	1					
ANR	329549	Argument	& tmp_free		328529	0					
ANR	329550	UnaryOperationExpression	& tmp_free		328529	0					
ANR	329551	UnaryOperator	&		328529	0					
ANR	329552	Identifier	tmp_free		328529	1					
ANR	329553	ReturnStatement	return ret ;	1906:6:49497:49507	328529	4	True				
ANR	329554	Identifier	ret		328529	0					
ANR	329555	IfStatement	if ( Z_TYPE_P ( op2 ) == IS_OBJECT )		328529	170					
ANR	329556	Condition	Z_TYPE_P ( op2 ) == IS_OBJECT	1909:8:49530:49555	328529	0	True				
ANR	329557	EqualityExpression	Z_TYPE_P ( op2 ) == IS_OBJECT		328529	0		==			
ANR	329558	CallExpression	Z_TYPE_P ( op2 )		328529	0					
ANR	329559	Callee	Z_TYPE_P		328529	0					
ANR	329560	Identifier	Z_TYPE_P		328529	0					
ANR	329561	ArgumentList	op2		328529	1					
ANR	329562	Argument	op2		328529	0					
ANR	329563	Identifier	op2		328529	0					
ANR	329564	Identifier	IS_OBJECT		328529	1					
ANR	329565	CompoundStatement		129:36:3981:3981	328529	1					
ANR	329566	IfStatement	if ( Z_OBJ_HT_P ( op2 ) -> get )		328529	0					
ANR	329567	Condition	Z_OBJ_HT_P ( op2 ) -> get	1910:9:49569:49588	328529	0	True				
ANR	329568	PtrMemberAccess	Z_OBJ_HT_P ( op2 ) -> get		328529	0					
ANR	329569	CallExpression	Z_OBJ_HT_P ( op2 )		328529	0					
ANR	329570	Callee	Z_OBJ_HT_P		328529	0					
ANR	329571	Identifier	Z_OBJ_HT_P		328529	0					
ANR	329572	ArgumentList	op2		328529	1					
ANR	329573	Argument	op2		328529	0					
ANR	329574	Identifier	op2		328529	0					
ANR	329575	Identifier	get		328529	1					
ANR	329576	CompoundStatement		131:6:4022:4029	328529	1					
ANR	329577	IdentifierDeclStatement	zval rv ;	1911:6:49599:49606	328529	0	True				
ANR	329578	IdentifierDecl	rv		328529	0					
ANR	329579	IdentifierDeclType	zval		328529	0					
ANR	329580	Identifier	rv		328529	1					
ANR	329581	ExpressionStatement	"op_free = Z_OBJ_HT_P ( op2 ) -> get ( op2 , & rv )"	1912:6:49614:49654	328529	1	True				
ANR	329582	AssignmentExpression	"op_free = Z_OBJ_HT_P ( op2 ) -> get ( op2 , & rv )"		328529	0		=			
ANR	329583	Identifier	op_free		328529	0					
ANR	329584	CallExpression	"Z_OBJ_HT_P ( op2 ) -> get ( op2 , & rv )"		328529	1					
ANR	329585	Callee	Z_OBJ_HT_P ( op2 ) -> get		328529	0					
ANR	329586	PtrMemberAccess	Z_OBJ_HT_P ( op2 ) -> get		328529	0					
ANR	329587	CallExpression	Z_OBJ_HT_P ( op2 )		328529	0					
ANR	329588	Callee	Z_OBJ_HT_P		328529	0					
ANR	329589	Identifier	Z_OBJ_HT_P		328529	0					
ANR	329590	ArgumentList	op2		328529	1					
ANR	329591	Argument	op2		328529	0					
ANR	329592	Identifier	op2		328529	0					
ANR	329593	Identifier	get		328529	1					
ANR	329594	ArgumentList	op2		328529	1					
ANR	329595	Argument	op2		328529	0					
ANR	329596	Identifier	op2		328529	0					
ANR	329597	Argument	& rv		328529	1					
ANR	329598	UnaryOperationExpression	& rv		328529	0					
ANR	329599	UnaryOperator	&		328529	0					
ANR	329600	Identifier	rv		328529	1					
ANR	329601	ExpressionStatement	"ret = compare_function ( result , op1 , op_free )"	1913:6:49662:49706	328529	2	True				
ANR	329602	AssignmentExpression	"ret = compare_function ( result , op1 , op_free )"		328529	0		=			
ANR	329603	Identifier	ret		328529	0					
ANR	329604	CallExpression	"compare_function ( result , op1 , op_free )"		328529	1					
ANR	329605	Callee	compare_function		328529	0					
ANR	329606	Identifier	compare_function		328529	0					
ANR	329607	ArgumentList	result		328529	1					
ANR	329608	Argument	result		328529	0					
ANR	329609	Identifier	result		328529	0					
ANR	329610	Argument	op1		328529	1					
ANR	329611	Identifier	op1		328529	0					
ANR	329612	Argument	op_free		328529	2					
ANR	329613	Identifier	op_free		328529	0					
ANR	329614	ExpressionStatement	zend_free_obj_get_result ( op_free )	1914:6:49714:49747	328529	3	True				
ANR	329615	CallExpression	zend_free_obj_get_result ( op_free )		328529	0					
ANR	329616	Callee	zend_free_obj_get_result		328529	0					
ANR	329617	Identifier	zend_free_obj_get_result		328529	0					
ANR	329618	ArgumentList	op_free		328529	1					
ANR	329619	Argument	op_free		328529	0					
ANR	329620	Identifier	op_free		328529	0					
ANR	329621	ReturnStatement	return ret ;	1915:6:49755:49765	328529	4	True				
ANR	329622	Identifier	ret		328529	0					
ANR	329623	ElseStatement	else		328529	0					
ANR	329624	IfStatement	if ( Z_TYPE_P ( op1 ) != IS_OBJECT && Z_OBJ_HT_P ( op2 ) -> cast_object )		328529	0					
ANR	329625	Condition	Z_TYPE_P ( op1 ) != IS_OBJECT && Z_OBJ_HT_P ( op2 ) -> cast_object	1916:16:49783:49840	328529	0	True				
ANR	329626	AndExpression	Z_TYPE_P ( op1 ) != IS_OBJECT && Z_OBJ_HT_P ( op2 ) -> cast_object		328529	0		&&			
ANR	329627	EqualityExpression	Z_TYPE_P ( op1 ) != IS_OBJECT		328529	0		!=			
ANR	329628	CallExpression	Z_TYPE_P ( op1 )		328529	0					
ANR	329629	Callee	Z_TYPE_P		328529	0					
ANR	329630	Identifier	Z_TYPE_P		328529	0					
ANR	329631	ArgumentList	op1		328529	1					
ANR	329632	Argument	op1		328529	0					
ANR	329633	Identifier	op1		328529	0					
ANR	329634	Identifier	IS_OBJECT		328529	1					
ANR	329635	PtrMemberAccess	Z_OBJ_HT_P ( op2 ) -> cast_object		328529	1					
ANR	329636	CallExpression	Z_OBJ_HT_P ( op2 )		328529	0					
ANR	329637	Callee	Z_OBJ_HT_P		328529	0					
ANR	329638	Identifier	Z_OBJ_HT_P		328529	0					
ANR	329639	ArgumentList	op2		328529	1					
ANR	329640	Argument	op2		328529	0					
ANR	329641	Identifier	op2		328529	0					
ANR	329642	Identifier	cast_object		328529	1					
ANR	329643	CompoundStatement		136:76:4266:4266	328529	1					
ANR	329644	ExpressionStatement	ZVAL_UNDEF ( & tmp_free )	1917:6:49851:49872	328529	0	True				
ANR	329645	CallExpression	ZVAL_UNDEF ( & tmp_free )		328529	0					
ANR	329646	Callee	ZVAL_UNDEF		328529	0					
ANR	329647	Identifier	ZVAL_UNDEF		328529	0					
ANR	329648	ArgumentList	& tmp_free		328529	1					
ANR	329649	Argument	& tmp_free		328529	0					
ANR	329650	UnaryOperationExpression	& tmp_free		328529	0					
ANR	329651	UnaryOperator	&		328529	0					
ANR	329652	Identifier	tmp_free		328529	1					
ANR	329653	IfStatement	"if ( Z_OBJ_HT_P ( op2 ) -> cast_object ( op2 , & tmp_free , ( ( Z_TYPE_P ( op1 ) == IS_FALSE || Z_TYPE_P ( op1 ) == IS_TRUE ) ? _IS_BOOL : Z_TYPE_P ( op1 ) ) ) == FAILURE )"		328529	1					
ANR	329654	Condition	"Z_OBJ_HT_P ( op2 ) -> cast_object ( op2 , & tmp_free , ( ( Z_TYPE_P ( op1 ) == IS_FALSE || Z_TYPE_P ( op1 ) == IS_TRUE ) ? _IS_BOOL : Z_TYPE_P ( op1 ) ) ) == FAILURE"	1918:10:49884:50024	328529	0	True				
ANR	329655	EqualityExpression	"Z_OBJ_HT_P ( op2 ) -> cast_object ( op2 , & tmp_free , ( ( Z_TYPE_P ( op1 ) == IS_FALSE || Z_TYPE_P ( op1 ) == IS_TRUE ) ? _IS_BOOL : Z_TYPE_P ( op1 ) ) ) == FAILURE"		328529	0		==			
ANR	329656	CallExpression	"Z_OBJ_HT_P ( op2 ) -> cast_object ( op2 , & tmp_free , ( ( Z_TYPE_P ( op1 ) == IS_FALSE || Z_TYPE_P ( op1 ) == IS_TRUE ) ? _IS_BOOL : Z_TYPE_P ( op1 ) ) )"		328529	0					
ANR	329657	Callee	Z_OBJ_HT_P ( op2 ) -> cast_object		328529	0					
ANR	329658	PtrMemberAccess	Z_OBJ_HT_P ( op2 ) -> cast_object		328529	0					
ANR	329659	CallExpression	Z_OBJ_HT_P ( op2 )		328529	0					
ANR	329660	Callee	Z_OBJ_HT_P		328529	0					
ANR	329661	Identifier	Z_OBJ_HT_P		328529	0					
ANR	329662	ArgumentList	op2		328529	1					
ANR	329663	Argument	op2		328529	0					
ANR	329664	Identifier	op2		328529	0					
ANR	329665	Identifier	cast_object		328529	1					
ANR	329666	ArgumentList	op2		328529	1					
ANR	329667	Argument	op2		328529	0					
ANR	329668	Identifier	op2		328529	0					
ANR	329669	Argument	& tmp_free		328529	1					
ANR	329670	UnaryOperationExpression	& tmp_free		328529	0					
ANR	329671	UnaryOperator	&		328529	0					
ANR	329672	Identifier	tmp_free		328529	1					
ANR	329673	Argument	( Z_TYPE_P ( op1 ) == IS_FALSE || Z_TYPE_P ( op1 ) == IS_TRUE ) ? _IS_BOOL : Z_TYPE_P ( op1 )		328529	2					
ANR	329674	ConditionalExpression	( Z_TYPE_P ( op1 ) == IS_FALSE || Z_TYPE_P ( op1 ) == IS_TRUE ) ? _IS_BOOL : Z_TYPE_P ( op1 )		328529	0					
ANR	329675	Condition	Z_TYPE_P ( op1 ) == IS_FALSE || Z_TYPE_P ( op1 ) == IS_TRUE		328529	0					
ANR	329676	OrExpression	Z_TYPE_P ( op1 ) == IS_FALSE || Z_TYPE_P ( op1 ) == IS_TRUE		328529	0		||			
ANR	329677	EqualityExpression	Z_TYPE_P ( op1 ) == IS_FALSE		328529	0		==			
ANR	329678	CallExpression	Z_TYPE_P ( op1 )		328529	0					
ANR	329679	Callee	Z_TYPE_P		328529	0					
ANR	329680	Identifier	Z_TYPE_P		328529	0					
ANR	329681	ArgumentList	op1		328529	1					
ANR	329682	Argument	op1		328529	0					
ANR	329683	Identifier	op1		328529	0					
ANR	329684	Identifier	IS_FALSE		328529	1					
ANR	329685	EqualityExpression	Z_TYPE_P ( op1 ) == IS_TRUE		328529	1		==			
ANR	329686	CallExpression	Z_TYPE_P ( op1 )		328529	0					
ANR	329687	Callee	Z_TYPE_P		328529	0					
ANR	329688	Identifier	Z_TYPE_P		328529	0					
ANR	329689	ArgumentList	op1		328529	1					
ANR	329690	Argument	op1		328529	0					
ANR	329691	Identifier	op1		328529	0					
ANR	329692	Identifier	IS_TRUE		328529	1					
ANR	329693	Identifier	_IS_BOOL		328529	1					
ANR	329694	CallExpression	Z_TYPE_P ( op1 )		328529	2					
ANR	329695	Callee	Z_TYPE_P		328529	0					
ANR	329696	Identifier	Z_TYPE_P		328529	0					
ANR	329697	ArgumentList	op1		328529	1					
ANR	329698	Argument	op1		328529	0					
ANR	329699	Identifier	op1		328529	0					
ANR	329700	Identifier	FAILURE		328529	1					
ANR	329701	CompoundStatement		138:153:4450:4450	328529	1					
ANR	329702	ExpressionStatement	"ZVAL_LONG ( result , - 1 )"	1919:7:50036:50057	328529	0	True				
ANR	329703	CallExpression	"ZVAL_LONG ( result , - 1 )"		328529	0					
ANR	329704	Callee	ZVAL_LONG		328529	0					
ANR	329705	Identifier	ZVAL_LONG		328529	0					
ANR	329706	ArgumentList	result		328529	1					
ANR	329707	Argument	result		328529	0					
ANR	329708	Identifier	result		328529	0					
ANR	329709	Argument	- 1		328529	1					
ANR	329710	UnaryOperationExpression	- 1		328529	0					
ANR	329711	UnaryOperator	-		328529	0					
ANR	329712	PrimaryExpression	1		328529	1					
ANR	329713	ExpressionStatement	zend_free_obj_get_result ( & tmp_free )	1920:7:50066:50101	328529	1	True				
ANR	329714	CallExpression	zend_free_obj_get_result ( & tmp_free )		328529	0					
ANR	329715	Callee	zend_free_obj_get_result		328529	0					
ANR	329716	Identifier	zend_free_obj_get_result		328529	0					
ANR	329717	ArgumentList	& tmp_free		328529	1					
ANR	329718	Argument	& tmp_free		328529	0					
ANR	329719	UnaryOperationExpression	& tmp_free		328529	0					
ANR	329720	UnaryOperator	&		328529	0					
ANR	329721	Identifier	tmp_free		328529	1					
ANR	329722	ReturnStatement	return SUCCESS ;	1921:7:50110:50124	328529	2	True				
ANR	329723	Identifier	SUCCESS		328529	0					
ANR	329724	ExpressionStatement	"ret = compare_function ( result , op1 , & tmp_free )"	1923:6:50140:50186	328529	2	True				
ANR	329725	AssignmentExpression	"ret = compare_function ( result , op1 , & tmp_free )"		328529	0		=			
ANR	329726	Identifier	ret		328529	0					
ANR	329727	CallExpression	"compare_function ( result , op1 , & tmp_free )"		328529	1					
ANR	329728	Callee	compare_function		328529	0					
ANR	329729	Identifier	compare_function		328529	0					
ANR	329730	ArgumentList	result		328529	1					
ANR	329731	Argument	result		328529	0					
ANR	329732	Identifier	result		328529	0					
ANR	329733	Argument	op1		328529	1					
ANR	329734	Identifier	op1		328529	0					
ANR	329735	Argument	& tmp_free		328529	2					
ANR	329736	UnaryOperationExpression	& tmp_free		328529	0					
ANR	329737	UnaryOperator	&		328529	0					
ANR	329738	Identifier	tmp_free		328529	1					
ANR	329739	ExpressionStatement	zend_free_obj_get_result ( & tmp_free )	1924:6:50194:50229	328529	3	True				
ANR	329740	CallExpression	zend_free_obj_get_result ( & tmp_free )		328529	0					
ANR	329741	Callee	zend_free_obj_get_result		328529	0					
ANR	329742	Identifier	zend_free_obj_get_result		328529	0					
ANR	329743	ArgumentList	& tmp_free		328529	1					
ANR	329744	Argument	& tmp_free		328529	0					
ANR	329745	UnaryOperationExpression	& tmp_free		328529	0					
ANR	329746	UnaryOperator	&		328529	0					
ANR	329747	Identifier	tmp_free		328529	1					
ANR	329748	ReturnStatement	return ret ;	1925:6:50237:50247	328529	4	True				
ANR	329749	Identifier	ret		328529	0					
ANR	329750	ElseStatement	else		328529	0					
ANR	329751	IfStatement	if ( Z_TYPE_P ( op1 ) == IS_OBJECT )		328529	0					
ANR	329752	Condition	Z_TYPE_P ( op1 ) == IS_OBJECT	1926:16:50265:50290	328529	0	True				
ANR	329753	EqualityExpression	Z_TYPE_P ( op1 ) == IS_OBJECT		328529	0		==			
ANR	329754	CallExpression	Z_TYPE_P ( op1 )		328529	0					
ANR	329755	Callee	Z_TYPE_P		328529	0					
ANR	329756	Identifier	Z_TYPE_P		328529	0					
ANR	329757	ArgumentList	op1		328529	1					
ANR	329758	Argument	op1		328529	0					
ANR	329759	Identifier	op1		328529	0					
ANR	329760	Identifier	IS_OBJECT		328529	1					
ANR	329761	CompoundStatement		146:44:4716:4716	328529	1					
ANR	329762	ExpressionStatement	"ZVAL_LONG ( result , 1 )"	1927:6:50301:50321	328529	0	True				
ANR	329763	CallExpression	"ZVAL_LONG ( result , 1 )"		328529	0					
ANR	329764	Callee	ZVAL_LONG		328529	0					
ANR	329765	Identifier	ZVAL_LONG		328529	0					
ANR	329766	ArgumentList	result		328529	1					
ANR	329767	Argument	result		328529	0					
ANR	329768	Identifier	result		328529	0					
ANR	329769	Argument	1		328529	1					
ANR	329770	PrimaryExpression	1		328529	0					
ANR	329771	ReturnStatement	return SUCCESS ;	1928:6:50329:50343	328529	1	True				
ANR	329772	Identifier	SUCCESS		328529	0					
ANR	329773	IfStatement	if ( ! converted )		328529	171					
ANR	329774	Condition	! converted	1931:8:50366:50375	328529	0	True				
ANR	329775	UnaryOperationExpression	! converted		328529	0					
ANR	329776	UnaryOperator	!		328529	0					
ANR	329777	Identifier	converted		328529	1					
ANR	329778	CompoundStatement		151:20:4801:4801	328529	1					
ANR	329779	IfStatement	if ( Z_TYPE_P ( op1 ) == IS_NULL || Z_TYPE_P ( op1 ) == IS_FALSE )		328529	0					
ANR	329780	Condition	Z_TYPE_P ( op1 ) == IS_NULL || Z_TYPE_P ( op1 ) == IS_FALSE	1932:9:50389:50441	328529	0	True				
ANR	329781	OrExpression	Z_TYPE_P ( op1 ) == IS_NULL || Z_TYPE_P ( op1 ) == IS_FALSE		328529	0		||			
ANR	329782	EqualityExpression	Z_TYPE_P ( op1 ) == IS_NULL		328529	0		==			
ANR	329783	CallExpression	Z_TYPE_P ( op1 )		328529	0					
ANR	329784	Callee	Z_TYPE_P		328529	0					
ANR	329785	Identifier	Z_TYPE_P		328529	0					
ANR	329786	ArgumentList	op1		328529	1					
ANR	329787	Argument	op1		328529	0					
ANR	329788	Identifier	op1		328529	0					
ANR	329789	Identifier	IS_NULL		328529	1					
ANR	329790	EqualityExpression	Z_TYPE_P ( op1 ) == IS_FALSE		328529	1		==			
ANR	329791	CallExpression	Z_TYPE_P ( op1 )		328529	0					
ANR	329792	Callee	Z_TYPE_P		328529	0					
ANR	329793	Identifier	Z_TYPE_P		328529	0					
ANR	329794	ArgumentList	op1		328529	1					
ANR	329795	Argument	op1		328529	0					
ANR	329796	Identifier	op1		328529	0					
ANR	329797	Identifier	IS_FALSE		328529	1					
ANR	329798	CompoundStatement		152:64:4867:4867	328529	1					
ANR	329799	ExpressionStatement	"ZVAL_LONG ( result , zval_is_true ( op2 ) ? - 1 : 0 )"	1933:6:50452:50497	328529	0	True				
ANR	329800	CallExpression	"ZVAL_LONG ( result , zval_is_true ( op2 ) ? - 1 : 0 )"		328529	0					
ANR	329801	Callee	ZVAL_LONG		328529	0					
ANR	329802	Identifier	ZVAL_LONG		328529	0					
ANR	329803	ArgumentList	result		328529	1					
ANR	329804	Argument	result		328529	0					
ANR	329805	Identifier	result		328529	0					
ANR	329806	Argument	zval_is_true ( op2 ) ? - 1 : 0		328529	1					
ANR	329807	ConditionalExpression	zval_is_true ( op2 ) ? - 1 : 0		328529	0					
ANR	329808	Condition	zval_is_true ( op2 )		328529	0					
ANR	329809	CallExpression	zval_is_true ( op2 )		328529	0					
ANR	329810	Callee	zval_is_true		328529	0					
ANR	329811	Identifier	zval_is_true		328529	0					
ANR	329812	ArgumentList	op2		328529	1					
ANR	329813	Argument	op2		328529	0					
ANR	329814	Identifier	op2		328529	0					
ANR	329815	UnaryOperationExpression	- 1		328529	1					
ANR	329816	UnaryOperator	-		328529	0					
ANR	329817	PrimaryExpression	1		328529	1					
ANR	329818	PrimaryExpression	0		328529	2					
ANR	329819	ReturnStatement	return SUCCESS ;	1934:6:50505:50519	328529	1	True				
ANR	329820	Identifier	SUCCESS		328529	0					
ANR	329821	ElseStatement	else		328529	0					
ANR	329822	IfStatement	if ( Z_TYPE_P ( op2 ) == IS_NULL || Z_TYPE_P ( op2 ) == IS_FALSE )		328529	0					
ANR	329823	Condition	Z_TYPE_P ( op2 ) == IS_NULL || Z_TYPE_P ( op2 ) == IS_FALSE	1935:16:50537:50589	328529	0	True				
ANR	329824	OrExpression	Z_TYPE_P ( op2 ) == IS_NULL || Z_TYPE_P ( op2 ) == IS_FALSE		328529	0		||			
ANR	329825	EqualityExpression	Z_TYPE_P ( op2 ) == IS_NULL		328529	0		==			
ANR	329826	CallExpression	Z_TYPE_P ( op2 )		328529	0					
ANR	329827	Callee	Z_TYPE_P		328529	0					
ANR	329828	Identifier	Z_TYPE_P		328529	0					
ANR	329829	ArgumentList	op2		328529	1					
ANR	329830	Argument	op2		328529	0					
ANR	329831	Identifier	op2		328529	0					
ANR	329832	Identifier	IS_NULL		328529	1					
ANR	329833	EqualityExpression	Z_TYPE_P ( op2 ) == IS_FALSE		328529	1		==			
ANR	329834	CallExpression	Z_TYPE_P ( op2 )		328529	0					
ANR	329835	Callee	Z_TYPE_P		328529	0					
ANR	329836	Identifier	Z_TYPE_P		328529	0					
ANR	329837	ArgumentList	op2		328529	1					
ANR	329838	Argument	op2		328529	0					
ANR	329839	Identifier	op2		328529	0					
ANR	329840	Identifier	IS_FALSE		328529	1					
ANR	329841	CompoundStatement		155:71:5015:5015	328529	1					
ANR	329842	ExpressionStatement	"ZVAL_LONG ( result , zval_is_true ( op1 ) ? 1 : 0 )"	1936:6:50600:50644	328529	0	True				
ANR	329843	CallExpression	"ZVAL_LONG ( result , zval_is_true ( op1 ) ? 1 : 0 )"		328529	0					
ANR	329844	Callee	ZVAL_LONG		328529	0					
ANR	329845	Identifier	ZVAL_LONG		328529	0					
ANR	329846	ArgumentList	result		328529	1					
ANR	329847	Argument	result		328529	0					
ANR	329848	Identifier	result		328529	0					
ANR	329849	Argument	zval_is_true ( op1 ) ? 1 : 0		328529	1					
ANR	329850	ConditionalExpression	zval_is_true ( op1 ) ? 1 : 0		328529	0					
ANR	329851	Condition	zval_is_true ( op1 )		328529	0					
ANR	329852	CallExpression	zval_is_true ( op1 )		328529	0					
ANR	329853	Callee	zval_is_true		328529	0					
ANR	329854	Identifier	zval_is_true		328529	0					
ANR	329855	ArgumentList	op1		328529	1					
ANR	329856	Argument	op1		328529	0					
ANR	329857	Identifier	op1		328529	0					
ANR	329858	PrimaryExpression	1		328529	1					
ANR	329859	PrimaryExpression	0		328529	2					
ANR	329860	ReturnStatement	return SUCCESS ;	1937:6:50652:50666	328529	1	True				
ANR	329861	Identifier	SUCCESS		328529	0					
ANR	329862	ElseStatement	else		328529	0					
ANR	329863	IfStatement	if ( Z_TYPE_P ( op1 ) == IS_TRUE )		328529	0					
ANR	329864	Condition	Z_TYPE_P ( op1 ) == IS_TRUE	1938:16:50684:50707	328529	0	True				
ANR	329865	EqualityExpression	Z_TYPE_P ( op1 ) == IS_TRUE		328529	0		==			
ANR	329866	CallExpression	Z_TYPE_P ( op1 )		328529	0					
ANR	329867	Callee	Z_TYPE_P		328529	0					
ANR	329868	Identifier	Z_TYPE_P		328529	0					
ANR	329869	ArgumentList	op1		328529	1					
ANR	329870	Argument	op1		328529	0					
ANR	329871	Identifier	op1		328529	0					
ANR	329872	Identifier	IS_TRUE		328529	1					
ANR	329873	CompoundStatement		158:42:5133:5133	328529	1					
ANR	329874	ExpressionStatement	"ZVAL_LONG ( result , zval_is_true ( op2 ) ? 0 : 1 )"	1939:6:50718:50762	328529	0	True				
ANR	329875	CallExpression	"ZVAL_LONG ( result , zval_is_true ( op2 ) ? 0 : 1 )"		328529	0					
ANR	329876	Callee	ZVAL_LONG		328529	0					
ANR	329877	Identifier	ZVAL_LONG		328529	0					
ANR	329878	ArgumentList	result		328529	1					
ANR	329879	Argument	result		328529	0					
ANR	329880	Identifier	result		328529	0					
ANR	329881	Argument	zval_is_true ( op2 ) ? 0 : 1		328529	1					
ANR	329882	ConditionalExpression	zval_is_true ( op2 ) ? 0 : 1		328529	0					
ANR	329883	Condition	zval_is_true ( op2 )		328529	0					
ANR	329884	CallExpression	zval_is_true ( op2 )		328529	0					
ANR	329885	Callee	zval_is_true		328529	0					
ANR	329886	Identifier	zval_is_true		328529	0					
ANR	329887	ArgumentList	op2		328529	1					
ANR	329888	Argument	op2		328529	0					
ANR	329889	Identifier	op2		328529	0					
ANR	329890	PrimaryExpression	0		328529	1					
ANR	329891	PrimaryExpression	1		328529	2					
ANR	329892	ReturnStatement	return SUCCESS ;	1940:6:50770:50784	328529	1	True				
ANR	329893	Identifier	SUCCESS		328529	0					
ANR	329894	ElseStatement	else		328529	0					
ANR	329895	IfStatement	if ( Z_TYPE_P ( op2 ) == IS_TRUE )		328529	0					
ANR	329896	Condition	Z_TYPE_P ( op2 ) == IS_TRUE	1941:16:50802:50825	328529	0	True				
ANR	329897	EqualityExpression	Z_TYPE_P ( op2 ) == IS_TRUE		328529	0		==			
ANR	329898	CallExpression	Z_TYPE_P ( op2 )		328529	0					
ANR	329899	Callee	Z_TYPE_P		328529	0					
ANR	329900	Identifier	Z_TYPE_P		328529	0					
ANR	329901	ArgumentList	op2		328529	1					
ANR	329902	Argument	op2		328529	0					
ANR	329903	Identifier	op2		328529	0					
ANR	329904	Identifier	IS_TRUE		328529	1					
ANR	329905	CompoundStatement		161:42:5251:5251	328529	1					
ANR	329906	ExpressionStatement	"ZVAL_LONG ( result , zval_is_true ( op1 ) ? 0 : - 1 )"	1942:6:50836:50881	328529	0	True				
ANR	329907	CallExpression	"ZVAL_LONG ( result , zval_is_true ( op1 ) ? 0 : - 1 )"		328529	0					
ANR	329908	Callee	ZVAL_LONG		328529	0					
ANR	329909	Identifier	ZVAL_LONG		328529	0					
ANR	329910	ArgumentList	result		328529	1					
ANR	329911	Argument	result		328529	0					
ANR	329912	Identifier	result		328529	0					
ANR	329913	Argument	zval_is_true ( op1 ) ? 0 : - 1		328529	1					
ANR	329914	ConditionalExpression	zval_is_true ( op1 ) ? 0 : - 1		328529	0					
ANR	329915	Condition	zval_is_true ( op1 )		328529	0					
ANR	329916	CallExpression	zval_is_true ( op1 )		328529	0					
ANR	329917	Callee	zval_is_true		328529	0					
ANR	329918	Identifier	zval_is_true		328529	0					
ANR	329919	ArgumentList	op1		328529	1					
ANR	329920	Argument	op1		328529	0					
ANR	329921	Identifier	op1		328529	0					
ANR	329922	PrimaryExpression	0		328529	1					
ANR	329923	UnaryOperationExpression	- 1		328529	2					
ANR	329924	UnaryOperator	-		328529	0					
ANR	329925	PrimaryExpression	1		328529	1					
ANR	329926	ReturnStatement	return SUCCESS ;	1943:6:50889:50903	328529	1	True				
ANR	329927	Identifier	SUCCESS		328529	0					
ANR	329928	ElseStatement	else		328529	0					
ANR	329929	CompoundStatement		164:12:5340:5340	328529	0					
ANR	329930	ExpressionStatement	"zendi_convert_scalar_to_number ( op1 , op1_copy , result )"	1945:6:50925:50978	328529	0	True				
ANR	329931	CallExpression	"zendi_convert_scalar_to_number ( op1 , op1_copy , result )"		328529	0					
ANR	329932	Callee	zendi_convert_scalar_to_number		328529	0					
ANR	329933	Identifier	zendi_convert_scalar_to_number		328529	0					
ANR	329934	ArgumentList	op1		328529	1					
ANR	329935	Argument	op1		328529	0					
ANR	329936	Identifier	op1		328529	0					
ANR	329937	Argument	op1_copy		328529	1					
ANR	329938	Identifier	op1_copy		328529	0					
ANR	329939	Argument	result		328529	2					
ANR	329940	Identifier	result		328529	0					
ANR	329941	ExpressionStatement	"zendi_convert_scalar_to_number ( op2 , op2_copy , result )"	1946:6:50986:51039	328529	1	True				
ANR	329942	CallExpression	"zendi_convert_scalar_to_number ( op2 , op2_copy , result )"		328529	0					
ANR	329943	Callee	zendi_convert_scalar_to_number		328529	0					
ANR	329944	Identifier	zendi_convert_scalar_to_number		328529	0					
ANR	329945	ArgumentList	op2		328529	1					
ANR	329946	Argument	op2		328529	0					
ANR	329947	Identifier	op2		328529	0					
ANR	329948	Argument	op2_copy		328529	1					
ANR	329949	Identifier	op2_copy		328529	0					
ANR	329950	Argument	result		328529	2					
ANR	329951	Identifier	result		328529	0					
ANR	329952	ExpressionStatement	converted = 1	1947:6:51047:51060	328529	2	True				
ANR	329953	AssignmentExpression	converted = 1		328529	0		=			
ANR	329954	Identifier	converted		328529	0					
ANR	329955	PrimaryExpression	1		328529	1					
ANR	329956	ElseStatement	else		328529	0					
ANR	329957	IfStatement	if ( Z_TYPE_P ( op1 ) == IS_ARRAY )		328529	0					
ANR	329958	Condition	Z_TYPE_P ( op1 ) == IS_ARRAY	1949:15:51084:51106	328529	0	True				
ANR	329959	EqualityExpression	Z_TYPE_P ( op1 ) == IS_ARRAY		328529	0		==			
ANR	329960	CallExpression	Z_TYPE_P ( op1 )		328529	0					
ANR	329961	Callee	Z_TYPE_P		328529	0					
ANR	329962	Identifier	Z_TYPE_P		328529	0					
ANR	329963	ArgumentList	op1		328529	1					
ANR	329964	Argument	op1		328529	0					
ANR	329965	Identifier	op1		328529	0					
ANR	329966	Identifier	IS_ARRAY		328529	1					
ANR	329967	CompoundStatement		169:40:5532:5532	328529	1					
ANR	329968	ExpressionStatement	"ZVAL_LONG ( result , 1 )"	1950:5:51116:51136	328529	0	True				
ANR	329969	CallExpression	"ZVAL_LONG ( result , 1 )"		328529	0					
ANR	329970	Callee	ZVAL_LONG		328529	0					
ANR	329971	Identifier	ZVAL_LONG		328529	0					
ANR	329972	ArgumentList	result		328529	1					
ANR	329973	Argument	result		328529	0					
ANR	329974	Identifier	result		328529	0					
ANR	329975	Argument	1		328529	1					
ANR	329976	PrimaryExpression	1		328529	0					
ANR	329977	ReturnStatement	return SUCCESS ;	1951:5:51143:51157	328529	1	True				
ANR	329978	Identifier	SUCCESS		328529	0					
ANR	329979	ElseStatement	else		328529	0					
ANR	329980	IfStatement	if ( Z_TYPE_P ( op2 ) == IS_ARRAY )		328529	0					
ANR	329981	Condition	Z_TYPE_P ( op2 ) == IS_ARRAY	1952:15:51174:51196	328529	0	True				
ANR	329982	EqualityExpression	Z_TYPE_P ( op2 ) == IS_ARRAY		328529	0		==			
ANR	329983	CallExpression	Z_TYPE_P ( op2 )		328529	0					
ANR	329984	Callee	Z_TYPE_P		328529	0					
ANR	329985	Identifier	Z_TYPE_P		328529	0					
ANR	329986	ArgumentList	op2		328529	1					
ANR	329987	Argument	op2		328529	0					
ANR	329988	Identifier	op2		328529	0					
ANR	329989	Identifier	IS_ARRAY		328529	1					
ANR	329990	CompoundStatement		172:40:5622:5622	328529	1					
ANR	329991	ExpressionStatement	"ZVAL_LONG ( result , - 1 )"	1953:5:51206:51227	328529	0	True				
ANR	329992	CallExpression	"ZVAL_LONG ( result , - 1 )"		328529	0					
ANR	329993	Callee	ZVAL_LONG		328529	0					
ANR	329994	Identifier	ZVAL_LONG		328529	0					
ANR	329995	ArgumentList	result		328529	1					
ANR	329996	Argument	result		328529	0					
ANR	329997	Identifier	result		328529	0					
ANR	329998	Argument	- 1		328529	1					
ANR	329999	UnaryOperationExpression	- 1		328529	0					
ANR	330000	UnaryOperator	-		328529	0					
ANR	330001	PrimaryExpression	1		328529	1					
ANR	330002	ReturnStatement	return SUCCESS ;	1954:5:51234:51248	328529	1	True				
ANR	330003	Identifier	SUCCESS		328529	0					
ANR	330004	ElseStatement	else		328529	0					
ANR	330005	IfStatement	if ( Z_TYPE_P ( op1 ) == IS_OBJECT )		328529	0					
ANR	330006	Condition	Z_TYPE_P ( op1 ) == IS_OBJECT	1955:15:51265:51288	328529	0	True				
ANR	330007	EqualityExpression	Z_TYPE_P ( op1 ) == IS_OBJECT		328529	0		==			
ANR	330008	CallExpression	Z_TYPE_P ( op1 )		328529	0					
ANR	330009	Callee	Z_TYPE_P		328529	0					
ANR	330010	Identifier	Z_TYPE_P		328529	0					
ANR	330011	ArgumentList	op1		328529	1					
ANR	330012	Argument	op1		328529	0					
ANR	330013	Identifier	op1		328529	0					
ANR	330014	Identifier	IS_OBJECT		328529	1					
ANR	330015	CompoundStatement		175:41:5714:5714	328529	1					
ANR	330016	ExpressionStatement	"ZVAL_LONG ( result , 1 )"	1956:5:51298:51318	328529	0	True				
ANR	330017	CallExpression	"ZVAL_LONG ( result , 1 )"		328529	0					
ANR	330018	Callee	ZVAL_LONG		328529	0					
ANR	330019	Identifier	ZVAL_LONG		328529	0					
ANR	330020	ArgumentList	result		328529	1					
ANR	330021	Argument	result		328529	0					
ANR	330022	Identifier	result		328529	0					
ANR	330023	Argument	1		328529	1					
ANR	330024	PrimaryExpression	1		328529	0					
ANR	330025	ReturnStatement	return SUCCESS ;	1957:5:51325:51339	328529	1	True				
ANR	330026	Identifier	SUCCESS		328529	0					
ANR	330027	ElseStatement	else		328529	0					
ANR	330028	IfStatement	if ( Z_TYPE_P ( op2 ) == IS_OBJECT )		328529	0					
ANR	330029	Condition	Z_TYPE_P ( op2 ) == IS_OBJECT	1958:15:51356:51379	328529	0	True				
ANR	330030	EqualityExpression	Z_TYPE_P ( op2 ) == IS_OBJECT		328529	0		==			
ANR	330031	CallExpression	Z_TYPE_P ( op2 )		328529	0					
ANR	330032	Callee	Z_TYPE_P		328529	0					
ANR	330033	Identifier	Z_TYPE_P		328529	0					
ANR	330034	ArgumentList	op2		328529	1					
ANR	330035	Argument	op2		328529	0					
ANR	330036	Identifier	op2		328529	0					
ANR	330037	Identifier	IS_OBJECT		328529	1					
ANR	330038	CompoundStatement		178:41:5805:5805	328529	1					
ANR	330039	ExpressionStatement	"ZVAL_LONG ( result , - 1 )"	1959:5:51389:51410	328529	0	True				
ANR	330040	CallExpression	"ZVAL_LONG ( result , - 1 )"		328529	0					
ANR	330041	Callee	ZVAL_LONG		328529	0					
ANR	330042	Identifier	ZVAL_LONG		328529	0					
ANR	330043	ArgumentList	result		328529	1					
ANR	330044	Argument	result		328529	0					
ANR	330045	Identifier	result		328529	0					
ANR	330046	Argument	- 1		328529	1					
ANR	330047	UnaryOperationExpression	- 1		328529	0					
ANR	330048	UnaryOperator	-		328529	0					
ANR	330049	PrimaryExpression	1		328529	1					
ANR	330050	ReturnStatement	return SUCCESS ;	1960:5:51417:51431	328529	1	True				
ANR	330051	Identifier	SUCCESS		328529	0					
ANR	330052	ElseStatement	else		328529	0					
ANR	330053	CompoundStatement		181:11:5867:5867	328529	0					
ANR	330054	ExpressionStatement	"ZVAL_LONG ( result , 0 )"	1962:5:51451:51471	328529	0	True				
ANR	330055	CallExpression	"ZVAL_LONG ( result , 0 )"		328529	0					
ANR	330056	Callee	ZVAL_LONG		328529	0					
ANR	330057	Identifier	ZVAL_LONG		328529	0					
ANR	330058	ArgumentList	result		328529	1					
ANR	330059	Argument	result		328529	0					
ANR	330060	Identifier	result		328529	0					
ANR	330061	Argument	0		328529	1					
ANR	330062	PrimaryExpression	0		328529	0					
ANR	330063	ReturnStatement	return FAILURE ;	1963:5:51478:51492	328529	1	True				
ANR	330064	Identifier	FAILURE		328529	0					
ANR	330065	ReturnType	ZEND_API int ZEND_FASTCALL		328529	1					
ANR	330066	Identifier	compare_function		328529	2					
ANR	330067	ParameterList	"zval * result , zval * op1 , zval * op2"		328529	3					
ANR	330068	Parameter	zval * result	1780:44:45530:45541	328529	0	True				
ANR	330069	ParameterType	zval *		328529	0					
ANR	330070	Identifier	result		328529	1					
ANR	330071	Parameter	zval * op1	1780:58:45544:45552	328529	1	True				
ANR	330072	ParameterType	zval *		328529	0					
ANR	330073	Identifier	op1		328529	1					
ANR	330074	Parameter	zval * op2	1780:69:45555:45563	328529	2	True				
ANR	330075	ParameterType	zval *		328529	0					
ANR	330076	Identifier	op2		328529	1					
ANR	330077	CFGEntryNode	ENTRY		328529		True				
ANR	330078	CFGExitNode	EXIT		328529		True				
ANR	330079	Symbol	compare		328529						
ANR	330080	Symbol	& tmp_free		328529						
ANR	330081	Symbol	rv		328529						
ANR	330082	Symbol	Z_OBJ_P		328529						
ANR	330083	Symbol	op1_copy		328529						
ANR	330084	Symbol	Z_OBJ_HT_P ( op2 ) -> get		328529						
ANR	330085	Symbol	tmp_free		328529						
ANR	330086	Symbol	result		328529						
ANR	330087	Symbol	UNEXPECTED		328529						
ANR	330088	Symbol	compare_function		328529						
ANR	330089	Symbol	_IS_BOOL		328529						
ANR	330090	Symbol	ZEND_NORMALIZE_BOOL		328529						
ANR	330091	Symbol	IS_NULL		328529						
ANR	330092	Symbol	IS_ARRAY		328529						
ANR	330093	Symbol	IS_LONG		328529						
ANR	330094	Symbol	op_free		328529						
ANR	330095	Symbol	zval_is_true		328529						
ANR	330096	Symbol	Z_STRLEN_P		328529						
ANR	330097	Symbol	Z_OBJ_HANDLER_P		328529						
ANR	330098	Symbol	op2_copy		328529						
ANR	330099	Symbol	IS_FALSE		328529						
ANR	330100	Symbol	ret		328529						
ANR	330101	Symbol	SUCCESS		328529						
ANR	330102	Symbol	Z_OBJ_HT_P ( op2 ) -> cast_object		328529						
ANR	330103	Symbol	IS_TRUE		328529						
ANR	330104	Symbol	Z_TYPE_P		328529						
ANR	330105	Symbol	* Z_OBJ_HT_P		328529						
ANR	330106	Symbol	FAILURE		328529						
ANR	330107	Symbol	Z_DVAL_P		328529						
ANR	330108	Symbol	zendi_smart_strcmp		328529						
ANR	330109	Symbol	Z_LVAL_P		328529						
ANR	330110	Symbol	& rv		328529						
ANR	330111	Symbol	op2		328529						
ANR	330112	Symbol	op1		328529						
ANR	330113	Symbol	TYPE_PAIR		328529						
ANR	330114	Symbol	zend_compare_arrays		328529						
ANR	330115	Symbol	converted		328529						
ANR	330116	Symbol	Z_OBJ_HT_P ( op1 ) -> cast_object		328529						
ANR	330117	Symbol	Z_REFVAL_P		328529						
ANR	330118	Symbol	Z_OBJ_HT_P		328529						
ANR	330119	Symbol	Z_STR_P		328529						
ANR	330120	Symbol	Z_OBJ_HT_P ( op1 ) -> get		328529						
ANR	330121	Symbol	IS_OBJECT		328529						
ANR	330122	Symbol	Z_ISREF_P		328529						
ANR	330123	Symbol	compare_objects		328529						
ANR	330124	Function	hash_zval_identical_function	1970:0:51520:51947							
ANR	330125	FunctionDef	"hash_zval_identical_function (zval * z1 , zval * z2)"		330124	0					
ANR	330126	CompoundStatement		1971:0:51590:51947	330124	0					
ANR	330127	IdentifierDeclStatement	zval result ;	1972:1:51593:51604	330124	0	True				
ANR	330128	IdentifierDecl	result		330124	0					
ANR	330129	IdentifierDeclType	zval		330124	0					
ANR	330130	Identifier	result		330124	1					
ANR	330131	ExpressionStatement	ZVAL_DEREF ( z1 )	1979:1:51808:51822	330124	1	True				
ANR	330132	CallExpression	ZVAL_DEREF ( z1 )		330124	0					
ANR	330133	Callee	ZVAL_DEREF		330124	0					
ANR	330134	Identifier	ZVAL_DEREF		330124	0					
ANR	330135	ArgumentList	z1		330124	1					
ANR	330136	Argument	z1		330124	0					
ANR	330137	Identifier	z1		330124	0					
ANR	330138	ExpressionStatement	ZVAL_DEREF ( z2 )	1980:1:51825:51839	330124	2	True				
ANR	330139	CallExpression	ZVAL_DEREF ( z2 )		330124	0					
ANR	330140	Callee	ZVAL_DEREF		330124	0					
ANR	330141	Identifier	ZVAL_DEREF		330124	0					
ANR	330142	ArgumentList	z2		330124	1					
ANR	330143	Argument	z2		330124	0					
ANR	330144	Identifier	z2		330124	0					
ANR	330145	IfStatement	"if ( is_identical_function ( & result , z1 , z2 ) == FAILURE )"		330124	3					
ANR	330146	Condition	"is_identical_function ( & result , z1 , z2 ) == FAILURE"	1981:5:51846:51892	330124	0	True				
ANR	330147	EqualityExpression	"is_identical_function ( & result , z1 , z2 ) == FAILURE"		330124	0		==			
ANR	330148	CallExpression	"is_identical_function ( & result , z1 , z2 )"		330124	0					
ANR	330149	Callee	is_identical_function		330124	0					
ANR	330150	Identifier	is_identical_function		330124	0					
ANR	330151	ArgumentList	& result		330124	1					
ANR	330152	Argument	& result		330124	0					
ANR	330153	UnaryOperationExpression	& result		330124	0					
ANR	330154	UnaryOperator	&		330124	0					
ANR	330155	Identifier	result		330124	1					
ANR	330156	Argument	z1		330124	1					
ANR	330157	Identifier	z1		330124	0					
ANR	330158	Argument	z2		330124	2					
ANR	330159	Identifier	z2		330124	0					
ANR	330160	Identifier	FAILURE		330124	1					
ANR	330161	CompoundStatement		11:54:304:304	330124	1					
ANR	330162	ReturnStatement	return 1 ;	1982:2:51899:51907	330124	0	True				
ANR	330163	PrimaryExpression	1		330124	0					
ANR	330164	ReturnStatement	return Z_TYPE ( result ) != IS_TRUE ;	1984:1:51913:51945	330124	4	True				
ANR	330165	EqualityExpression	Z_TYPE ( result ) != IS_TRUE		330124	0		!=			
ANR	330166	CallExpression	Z_TYPE ( result )		330124	0					
ANR	330167	Callee	Z_TYPE		330124	0					
ANR	330168	Identifier	Z_TYPE		330124	0					
ANR	330169	ArgumentList	result		330124	1					
ANR	330170	Argument	result		330124	0					
ANR	330171	Identifier	result		330124	0					
ANR	330172	Identifier	IS_TRUE		330124	1					
ANR	330173	ReturnType	static int		330124	1					
ANR	330174	Identifier	hash_zval_identical_function		330124	2					
ANR	330175	ParameterList	"zval * z1 , zval * z2"		330124	3					
ANR	330176	Parameter	zval * z1	1970:40:51560:51567	330124	0	True				
ANR	330177	ParameterType	zval *		330124	0					
ANR	330178	Identifier	z1		330124	1					
ANR	330179	Parameter	zval * z2	1970:50:51570:51577	330124	1	True				
ANR	330180	ParameterType	zval *		330124	0					
ANR	330181	Identifier	z2		330124	1					
ANR	330182	CFGEntryNode	ENTRY		330124		True				
ANR	330183	CFGExitNode	EXIT		330124		True				
ANR	330184	Symbol	result		330124						
ANR	330185	Symbol	is_identical_function		330124						
ANR	330186	Symbol	& result		330124						
ANR	330187	Symbol	z1		330124						
ANR	330188	Symbol	z2		330124						
ANR	330189	Symbol	IS_TRUE		330124						
ANR	330190	Symbol	Z_TYPE		330124						
ANR	330191	Symbol	FAILURE		330124						
ANR	330192	Function	zend_is_identical	1988:0:51960:52844							
ANR	330193	FunctionDef	"zend_is_identical (zval * op1 , zval * op2)"		330192	0					
ANR	330194	CompoundStatement		1989:0:52037:52844	330192	0					
ANR	330195	IfStatement	if ( Z_TYPE_P ( op1 ) != Z_TYPE_P ( op2 ) )		330192	0					
ANR	330196	Condition	Z_TYPE_P ( op1 ) != Z_TYPE_P ( op2 )	1990:5:52044:52073	330192	0	True				
ANR	330197	EqualityExpression	Z_TYPE_P ( op1 ) != Z_TYPE_P ( op2 )		330192	0		!=			
ANR	330198	CallExpression	Z_TYPE_P ( op1 )		330192	0					
ANR	330199	Callee	Z_TYPE_P		330192	0					
ANR	330200	Identifier	Z_TYPE_P		330192	0					
ANR	330201	ArgumentList	op1		330192	1					
ANR	330202	Argument	op1		330192	0					
ANR	330203	Identifier	op1		330192	0					
ANR	330204	CallExpression	Z_TYPE_P ( op2 )		330192	1					
ANR	330205	Callee	Z_TYPE_P		330192	0					
ANR	330206	Identifier	Z_TYPE_P		330192	0					
ANR	330207	ArgumentList	op2		330192	1					
ANR	330208	Argument	op2		330192	0					
ANR	330209	Identifier	op2		330192	0					
ANR	330210	CompoundStatement		2:37:38:38	330192	1					
ANR	330211	ReturnStatement	return 0 ;	1991:2:52080:52088	330192	0	True				
ANR	330212	PrimaryExpression	0		330192	0					
ANR	330213	SwitchStatement	switch ( Z_TYPE_P ( op1 ) )		330192	1					
ANR	330214	Condition	Z_TYPE_P ( op1 )	1993:9:52102:52114	330192	0	True				
ANR	330215	CallExpression	Z_TYPE_P ( op1 )		330192	0					
ANR	330216	Callee	Z_TYPE_P		330192	0					
ANR	330217	Identifier	Z_TYPE_P		330192	0					
ANR	330218	ArgumentList	op1		330192	1					
ANR	330219	Argument	op1		330192	0					
ANR	330220	Identifier	op1		330192	0					
ANR	330221	CompoundStatement		5:24:79:79	330192	1					
ANR	330222	Label	case IS_NULL :	1994:2:52121:52133	330192	0	True				
ANR	330223	Identifier	IS_NULL		330192	0					
ANR	330224	Label	case IS_FALSE :	1995:2:52137:52150	330192	1	True				
ANR	330225	Identifier	IS_FALSE		330192	0					
ANR	330226	Label	case IS_TRUE :	1996:2:52154:52166	330192	2	True				
ANR	330227	Identifier	IS_TRUE		330192	0					
ANR	330228	ReturnStatement	return 1 ;	1997:3:52171:52179	330192	3	True				
ANR	330229	PrimaryExpression	1		330192	0					
ANR	330230	Label	case IS_LONG :	1998:2:52183:52195	330192	4	True				
ANR	330231	Identifier	IS_LONG		330192	0					
ANR	330232	ReturnStatement	return ( Z_LVAL_P ( op1 ) == Z_LVAL_P ( op2 ) ) ;	1999:3:52200:52239	330192	5	True				
ANR	330233	EqualityExpression	Z_LVAL_P ( op1 ) == Z_LVAL_P ( op2 )		330192	0		==			
ANR	330234	CallExpression	Z_LVAL_P ( op1 )		330192	0					
ANR	330235	Callee	Z_LVAL_P		330192	0					
ANR	330236	Identifier	Z_LVAL_P		330192	0					
ANR	330237	ArgumentList	op1		330192	1					
ANR	330238	Argument	op1		330192	0					
ANR	330239	Identifier	op1		330192	0					
ANR	330240	CallExpression	Z_LVAL_P ( op2 )		330192	1					
ANR	330241	Callee	Z_LVAL_P		330192	0					
ANR	330242	Identifier	Z_LVAL_P		330192	0					
ANR	330243	ArgumentList	op2		330192	1					
ANR	330244	Argument	op2		330192	0					
ANR	330245	Identifier	op2		330192	0					
ANR	330246	Label	case IS_RESOURCE :	2000:2:52243:52259	330192	6	True				
ANR	330247	Identifier	IS_RESOURCE		330192	0					
ANR	330248	ReturnStatement	return ( Z_RES_P ( op1 ) == Z_RES_P ( op2 ) ) ;	2001:3:52264:52301	330192	7	True				
ANR	330249	EqualityExpression	Z_RES_P ( op1 ) == Z_RES_P ( op2 )		330192	0		==			
ANR	330250	CallExpression	Z_RES_P ( op1 )		330192	0					
ANR	330251	Callee	Z_RES_P		330192	0					
ANR	330252	Identifier	Z_RES_P		330192	0					
ANR	330253	ArgumentList	op1		330192	1					
ANR	330254	Argument	op1		330192	0					
ANR	330255	Identifier	op1		330192	0					
ANR	330256	CallExpression	Z_RES_P ( op2 )		330192	1					
ANR	330257	Callee	Z_RES_P		330192	0					
ANR	330258	Identifier	Z_RES_P		330192	0					
ANR	330259	ArgumentList	op2		330192	1					
ANR	330260	Argument	op2		330192	0					
ANR	330261	Identifier	op2		330192	0					
ANR	330262	Label	case IS_DOUBLE :	2002:2:52305:52319	330192	8	True				
ANR	330263	Identifier	IS_DOUBLE		330192	0					
ANR	330264	ReturnStatement	return ( Z_DVAL_P ( op1 ) == Z_DVAL_P ( op2 ) ) ;	2003:3:52324:52363	330192	9	True				
ANR	330265	EqualityExpression	Z_DVAL_P ( op1 ) == Z_DVAL_P ( op2 )		330192	0		==			
ANR	330266	CallExpression	Z_DVAL_P ( op1 )		330192	0					
ANR	330267	Callee	Z_DVAL_P		330192	0					
ANR	330268	Identifier	Z_DVAL_P		330192	0					
ANR	330269	ArgumentList	op1		330192	1					
ANR	330270	Argument	op1		330192	0					
ANR	330271	Identifier	op1		330192	0					
ANR	330272	CallExpression	Z_DVAL_P ( op2 )		330192	1					
ANR	330273	Callee	Z_DVAL_P		330192	0					
ANR	330274	Identifier	Z_DVAL_P		330192	0					
ANR	330275	ArgumentList	op2		330192	1					
ANR	330276	Argument	op2		330192	0					
ANR	330277	Identifier	op2		330192	0					
ANR	330278	Label	case IS_STRING :	2004:2:52367:52381	330192	10	True				
ANR	330279	Identifier	IS_STRING		330192	0					
ANR	330280	ReturnStatement	"return ( Z_STR_P ( op1 ) == Z_STR_P ( op2 ) || ( Z_STRLEN_P ( op1 ) == Z_STRLEN_P ( op2 ) && memcmp ( Z_STRVAL_P ( op1 ) , Z_STRVAL_P ( op2 ) , Z_STRLEN_P ( op1 ) ) == 0 ) ) ;"	2005:3:52386:52538	330192	11	True				
ANR	330281	OrExpression	"Z_STR_P ( op1 ) == Z_STR_P ( op2 ) || ( Z_STRLEN_P ( op1 ) == Z_STRLEN_P ( op2 ) && memcmp ( Z_STRVAL_P ( op1 ) , Z_STRVAL_P ( op2 ) , Z_STRLEN_P ( op1 ) ) == 0 )"		330192	0		||			
ANR	330282	EqualityExpression	Z_STR_P ( op1 ) == Z_STR_P ( op2 )		330192	0		==			
ANR	330283	CallExpression	Z_STR_P ( op1 )		330192	0					
ANR	330284	Callee	Z_STR_P		330192	0					
ANR	330285	Identifier	Z_STR_P		330192	0					
ANR	330286	ArgumentList	op1		330192	1					
ANR	330287	Argument	op1		330192	0					
ANR	330288	Identifier	op1		330192	0					
ANR	330289	CallExpression	Z_STR_P ( op2 )		330192	1					
ANR	330290	Callee	Z_STR_P		330192	0					
ANR	330291	Identifier	Z_STR_P		330192	0					
ANR	330292	ArgumentList	op2		330192	1					
ANR	330293	Argument	op2		330192	0					
ANR	330294	Identifier	op2		330192	0					
ANR	330295	AndExpression	"Z_STRLEN_P ( op1 ) == Z_STRLEN_P ( op2 ) && memcmp ( Z_STRVAL_P ( op1 ) , Z_STRVAL_P ( op2 ) , Z_STRLEN_P ( op1 ) ) == 0"		330192	1		&&			
ANR	330296	EqualityExpression	Z_STRLEN_P ( op1 ) == Z_STRLEN_P ( op2 )		330192	0		==			
ANR	330297	CallExpression	Z_STRLEN_P ( op1 )		330192	0					
ANR	330298	Callee	Z_STRLEN_P		330192	0					
ANR	330299	Identifier	Z_STRLEN_P		330192	0					
ANR	330300	ArgumentList	op1		330192	1					
ANR	330301	Argument	op1		330192	0					
ANR	330302	Identifier	op1		330192	0					
ANR	330303	CallExpression	Z_STRLEN_P ( op2 )		330192	1					
ANR	330304	Callee	Z_STRLEN_P		330192	0					
ANR	330305	Identifier	Z_STRLEN_P		330192	0					
ANR	330306	ArgumentList	op2		330192	1					
ANR	330307	Argument	op2		330192	0					
ANR	330308	Identifier	op2		330192	0					
ANR	330309	EqualityExpression	"memcmp ( Z_STRVAL_P ( op1 ) , Z_STRVAL_P ( op2 ) , Z_STRLEN_P ( op1 ) ) == 0"		330192	1		==			
ANR	330310	CallExpression	"memcmp ( Z_STRVAL_P ( op1 ) , Z_STRVAL_P ( op2 ) , Z_STRLEN_P ( op1 ) )"		330192	0					
ANR	330311	Callee	memcmp		330192	0					
ANR	330312	Identifier	memcmp		330192	0					
ANR	330313	ArgumentList	Z_STRVAL_P ( op1 )		330192	1					
ANR	330314	Argument	Z_STRVAL_P ( op1 )		330192	0					
ANR	330315	CallExpression	Z_STRVAL_P ( op1 )		330192	0					
ANR	330316	Callee	Z_STRVAL_P		330192	0					
ANR	330317	Identifier	Z_STRVAL_P		330192	0					
ANR	330318	ArgumentList	op1		330192	1					
ANR	330319	Argument	op1		330192	0					
ANR	330320	Identifier	op1		330192	0					
ANR	330321	Argument	Z_STRVAL_P ( op2 )		330192	1					
ANR	330322	CallExpression	Z_STRVAL_P ( op2 )		330192	0					
ANR	330323	Callee	Z_STRVAL_P		330192	0					
ANR	330324	Identifier	Z_STRVAL_P		330192	0					
ANR	330325	ArgumentList	op2		330192	1					
ANR	330326	Argument	op2		330192	0					
ANR	330327	Identifier	op2		330192	0					
ANR	330328	Argument	Z_STRLEN_P ( op1 )		330192	2					
ANR	330329	CallExpression	Z_STRLEN_P ( op1 )		330192	0					
ANR	330330	Callee	Z_STRLEN_P		330192	0					
ANR	330331	Identifier	Z_STRLEN_P		330192	0					
ANR	330332	ArgumentList	op1		330192	1					
ANR	330333	Argument	op1		330192	0					
ANR	330334	Identifier	op1		330192	0					
ANR	330335	PrimaryExpression	0		330192	1					
ANR	330336	Label	case IS_ARRAY :	2008:2:52542:52555	330192	12	True				
ANR	330337	Identifier	IS_ARRAY		330192	0					
ANR	330338	ReturnStatement	"return ( Z_ARRVAL_P ( op1 ) == Z_ARRVAL_P ( op2 ) || zend_hash_compare ( Z_ARRVAL_P ( op1 ) , Z_ARRVAL_P ( op2 ) , ( compare_func_t ) hash_zval_identical_function , 1 ) == 0 ) ;"	2009:3:52560:52717	330192	13	True				
ANR	330339	OrExpression	"Z_ARRVAL_P ( op1 ) == Z_ARRVAL_P ( op2 ) || zend_hash_compare ( Z_ARRVAL_P ( op1 ) , Z_ARRVAL_P ( op2 ) , ( compare_func_t ) hash_zval_identical_function , 1 ) == 0"		330192	0		||			
ANR	330340	EqualityExpression	Z_ARRVAL_P ( op1 ) == Z_ARRVAL_P ( op2 )		330192	0		==			
ANR	330341	CallExpression	Z_ARRVAL_P ( op1 )		330192	0					
ANR	330342	Callee	Z_ARRVAL_P		330192	0					
ANR	330343	Identifier	Z_ARRVAL_P		330192	0					
ANR	330344	ArgumentList	op1		330192	1					
ANR	330345	Argument	op1		330192	0					
ANR	330346	Identifier	op1		330192	0					
ANR	330347	CallExpression	Z_ARRVAL_P ( op2 )		330192	1					
ANR	330348	Callee	Z_ARRVAL_P		330192	0					
ANR	330349	Identifier	Z_ARRVAL_P		330192	0					
ANR	330350	ArgumentList	op2		330192	1					
ANR	330351	Argument	op2		330192	0					
ANR	330352	Identifier	op2		330192	0					
ANR	330353	EqualityExpression	"zend_hash_compare ( Z_ARRVAL_P ( op1 ) , Z_ARRVAL_P ( op2 ) , ( compare_func_t ) hash_zval_identical_function , 1 ) == 0"		330192	1		==			
ANR	330354	CallExpression	"zend_hash_compare ( Z_ARRVAL_P ( op1 ) , Z_ARRVAL_P ( op2 ) , ( compare_func_t ) hash_zval_identical_function , 1 )"		330192	0					
ANR	330355	Callee	zend_hash_compare		330192	0					
ANR	330356	Identifier	zend_hash_compare		330192	0					
ANR	330357	ArgumentList	Z_ARRVAL_P ( op1 )		330192	1					
ANR	330358	Argument	Z_ARRVAL_P ( op1 )		330192	0					
ANR	330359	CallExpression	Z_ARRVAL_P ( op1 )		330192	0					
ANR	330360	Callee	Z_ARRVAL_P		330192	0					
ANR	330361	Identifier	Z_ARRVAL_P		330192	0					
ANR	330362	ArgumentList	op1		330192	1					
ANR	330363	Argument	op1		330192	0					
ANR	330364	Identifier	op1		330192	0					
ANR	330365	Argument	Z_ARRVAL_P ( op2 )		330192	1					
ANR	330366	CallExpression	Z_ARRVAL_P ( op2 )		330192	0					
ANR	330367	Callee	Z_ARRVAL_P		330192	0					
ANR	330368	Identifier	Z_ARRVAL_P		330192	0					
ANR	330369	ArgumentList	op2		330192	1					
ANR	330370	Argument	op2		330192	0					
ANR	330371	Identifier	op2		330192	0					
ANR	330372	Argument	( compare_func_t ) hash_zval_identical_function		330192	2					
ANR	330373	CastExpression	( compare_func_t ) hash_zval_identical_function		330192	0					
ANR	330374	CastTarget	compare_func_t		330192	0					
ANR	330375	Identifier	hash_zval_identical_function		330192	1					
ANR	330376	Argument	1		330192	3					
ANR	330377	PrimaryExpression	1		330192	0					
ANR	330378	PrimaryExpression	0		330192	1					
ANR	330379	Label	case IS_OBJECT :	2011:2:52721:52735	330192	14	True				
ANR	330380	Identifier	IS_OBJECT		330192	0					
ANR	330381	ReturnStatement	return ( Z_OBJ_P ( op1 ) == Z_OBJ_P ( op2 ) && Z_OBJ_HT_P ( op1 ) == Z_OBJ_HT_P ( op2 ) ) ;	2012:3:52740:52815	330192	15	True				
ANR	330382	AndExpression	Z_OBJ_P ( op1 ) == Z_OBJ_P ( op2 ) && Z_OBJ_HT_P ( op1 ) == Z_OBJ_HT_P ( op2 )		330192	0		&&			
ANR	330383	EqualityExpression	Z_OBJ_P ( op1 ) == Z_OBJ_P ( op2 )		330192	0		==			
ANR	330384	CallExpression	Z_OBJ_P ( op1 )		330192	0					
ANR	330385	Callee	Z_OBJ_P		330192	0					
ANR	330386	Identifier	Z_OBJ_P		330192	0					
ANR	330387	ArgumentList	op1		330192	1					
ANR	330388	Argument	op1		330192	0					
ANR	330389	Identifier	op1		330192	0					
ANR	330390	CallExpression	Z_OBJ_P ( op2 )		330192	1					
ANR	330391	Callee	Z_OBJ_P		330192	0					
ANR	330392	Identifier	Z_OBJ_P		330192	0					
ANR	330393	ArgumentList	op2		330192	1					
ANR	330394	Argument	op2		330192	0					
ANR	330395	Identifier	op2		330192	0					
ANR	330396	EqualityExpression	Z_OBJ_HT_P ( op1 ) == Z_OBJ_HT_P ( op2 )		330192	1		==			
ANR	330397	CallExpression	Z_OBJ_HT_P ( op1 )		330192	0					
ANR	330398	Callee	Z_OBJ_HT_P		330192	0					
ANR	330399	Identifier	Z_OBJ_HT_P		330192	0					
ANR	330400	ArgumentList	op1		330192	1					
ANR	330401	Argument	op1		330192	0					
ANR	330402	Identifier	op1		330192	0					
ANR	330403	CallExpression	Z_OBJ_HT_P ( op2 )		330192	1					
ANR	330404	Callee	Z_OBJ_HT_P		330192	0					
ANR	330405	Identifier	Z_OBJ_HT_P		330192	0					
ANR	330406	ArgumentList	op2		330192	1					
ANR	330407	Argument	op2		330192	0					
ANR	330408	Identifier	op2		330192	0					
ANR	330409	Label	default :	2013:2:52819:52826	330192	16	True				
ANR	330410	Identifier	default		330192	0					
ANR	330411	ReturnStatement	return 0 ;	2014:3:52831:52839	330192	17	True				
ANR	330412	PrimaryExpression	0		330192	0					
ANR	330413	ReturnType	ZEND_API int ZEND_FASTCALL		330192	1					
ANR	330414	Identifier	zend_is_identical		330192	2					
ANR	330415	ParameterList	"zval * op1 , zval * op2"		330192	3					
ANR	330416	Parameter	zval * op1	1988:45:52005:52013	330192	0	True				
ANR	330417	ParameterType	zval *		330192	0					
ANR	330418	Identifier	op1		330192	1					
ANR	330419	Parameter	zval * op2	1988:56:52016:52024	330192	1	True				
ANR	330420	ParameterType	zval *		330192	0					
ANR	330421	Identifier	op2		330192	1					
ANR	330422	CFGEntryNode	ENTRY		330192		True				
ANR	330423	CFGExitNode	EXIT		330192		True				
ANR	330424	Symbol	Z_OBJ_P		330192						
ANR	330425	Symbol	Z_TYPE_P		330192						
ANR	330426	Symbol	zend_hash_compare		330192						
ANR	330427	Symbol	Z_STRVAL_P		330192						
ANR	330428	Symbol	Z_DVAL_P		330192						
ANR	330429	Symbol	Z_LVAL_P		330192						
ANR	330430	Symbol	op2		330192						
ANR	330431	Symbol	op1		330192						
ANR	330432	Symbol	memcmp		330192						
ANR	330433	Symbol	hash_zval_identical_function		330192						
ANR	330434	Symbol	Z_OBJ_HT_P		330192						
ANR	330435	Symbol	Z_STRLEN_P		330192						
ANR	330436	Symbol	Z_STR_P		330192						
ANR	330437	Symbol	Z_ARRVAL_P		330192						
ANR	330438	Symbol	Z_RES_P		330192						
ANR	330439	Function	is_identical_function	2019:0:52857:53020							
ANR	330440	FunctionDef	"is_identical_function (zval * result , zval * op1 , zval * op2)"		330439	0					
ANR	330441	CompoundStatement		2020:0:52952:53020	330439	0					
ANR	330442	ExpressionStatement	"ZVAL_BOOL ( result , zend_is_identical ( op1 , op2 ) )"	2021:1:52955:53001	330439	0	True				
ANR	330443	CallExpression	"ZVAL_BOOL ( result , zend_is_identical ( op1 , op2 ) )"		330439	0					
ANR	330444	Callee	ZVAL_BOOL		330439	0					
ANR	330445	Identifier	ZVAL_BOOL		330439	0					
ANR	330446	ArgumentList	result		330439	1					
ANR	330447	Argument	result		330439	0					
ANR	330448	Identifier	result		330439	0					
ANR	330449	Argument	"zend_is_identical ( op1 , op2 )"		330439	1					
ANR	330450	CallExpression	"zend_is_identical ( op1 , op2 )"		330439	0					
ANR	330451	Callee	zend_is_identical		330439	0					
ANR	330452	Identifier	zend_is_identical		330439	0					
ANR	330453	ArgumentList	op1		330439	1					
ANR	330454	Argument	op1		330439	0					
ANR	330455	Identifier	op1		330439	0					
ANR	330456	Argument	op2		330439	1					
ANR	330457	Identifier	op2		330439	0					
ANR	330458	ReturnStatement	return SUCCESS ;	2022:1:53004:53018	330439	1	True				
ANR	330459	Identifier	SUCCESS		330439	0					
ANR	330460	ReturnType	ZEND_API int ZEND_FASTCALL		330439	1					
ANR	330461	Identifier	is_identical_function		330439	2					
ANR	330462	ParameterList	"zval * result , zval * op1 , zval * op2"		330439	3					
ANR	330463	Parameter	zval * result	2019:49:52906:52917	330439	0	True				
ANR	330464	ParameterType	zval *		330439	0					
ANR	330465	Identifier	result		330439	1					
ANR	330466	Parameter	zval * op1	2019:63:52920:52928	330439	1	True				
ANR	330467	ParameterType	zval *		330439	0					
ANR	330468	Identifier	op1		330439	1					
ANR	330469	Parameter	zval * op2	2019:74:52931:52939	330439	2	True				
ANR	330470	ParameterType	zval *		330439	0					
ANR	330471	Identifier	op2		330439	1					
ANR	330472	CFGEntryNode	ENTRY		330439		True				
ANR	330473	CFGExitNode	EXIT		330439		True				
ANR	330474	Symbol	result		330439						
ANR	330475	Symbol	op2		330439						
ANR	330476	Symbol	op1		330439						
ANR	330477	Symbol	SUCCESS		330439						
ANR	330478	Symbol	zend_is_identical		330439						
ANR	330479	Function	is_not_identical_function	2026:0:53033:53201							
ANR	330480	FunctionDef	"is_not_identical_function (zval * result , zval * op1 , zval * op2)"		330479	0					
ANR	330481	CompoundStatement		2027:0:53132:53201	330479	0					
ANR	330482	ExpressionStatement	"ZVAL_BOOL ( result , ! zend_is_identical ( op1 , op2 ) )"	2028:1:53135:53182	330479	0	True				
ANR	330483	CallExpression	"ZVAL_BOOL ( result , ! zend_is_identical ( op1 , op2 ) )"		330479	0					
ANR	330484	Callee	ZVAL_BOOL		330479	0					
ANR	330485	Identifier	ZVAL_BOOL		330479	0					
ANR	330486	ArgumentList	result		330479	1					
ANR	330487	Argument	result		330479	0					
ANR	330488	Identifier	result		330479	0					
ANR	330489	Argument	"! zend_is_identical ( op1 , op2 )"		330479	1					
ANR	330490	UnaryOperationExpression	"! zend_is_identical ( op1 , op2 )"		330479	0					
ANR	330491	UnaryOperator	!		330479	0					
ANR	330492	CallExpression	"zend_is_identical ( op1 , op2 )"		330479	1					
ANR	330493	Callee	zend_is_identical		330479	0					
ANR	330494	Identifier	zend_is_identical		330479	0					
ANR	330495	ArgumentList	op1		330479	1					
ANR	330496	Argument	op1		330479	0					
ANR	330497	Identifier	op1		330479	0					
ANR	330498	Argument	op2		330479	1					
ANR	330499	Identifier	op2		330479	0					
ANR	330500	ReturnStatement	return SUCCESS ;	2029:1:53185:53199	330479	1	True				
ANR	330501	Identifier	SUCCESS		330479	0					
ANR	330502	ReturnType	ZEND_API int ZEND_FASTCALL		330479	1					
ANR	330503	Identifier	is_not_identical_function		330479	2					
ANR	330504	ParameterList	"zval * result , zval * op1 , zval * op2"		330479	3					
ANR	330505	Parameter	zval * result	2026:53:53086:53097	330479	0	True				
ANR	330506	ParameterType	zval *		330479	0					
ANR	330507	Identifier	result		330479	1					
ANR	330508	Parameter	zval * op1	2026:67:53100:53108	330479	1	True				
ANR	330509	ParameterType	zval *		330479	0					
ANR	330510	Identifier	op1		330479	1					
ANR	330511	Parameter	zval * op2	2026:78:53111:53119	330479	2	True				
ANR	330512	ParameterType	zval *		330479	0					
ANR	330513	Identifier	op2		330479	1					
ANR	330514	CFGEntryNode	ENTRY		330479		True				
ANR	330515	CFGExitNode	EXIT		330479		True				
ANR	330516	Symbol	result		330479						
ANR	330517	Symbol	op2		330479						
ANR	330518	Symbol	op1		330479						
ANR	330519	Symbol	SUCCESS		330479						
ANR	330520	Symbol	zend_is_identical		330479						
ANR	330521	Function	is_equal_function	2033:0:53214:53444							
ANR	330522	FunctionDef	"is_equal_function (zval * result , zval * op1 , zval * op2)"		330521	0					
ANR	330523	CompoundStatement		2034:0:53305:53444	330521	0					
ANR	330524	IfStatement	"if ( compare_function ( result , op1 , op2 ) == FAILURE )"		330521	0					
ANR	330525	Condition	"compare_function ( result , op1 , op2 ) == FAILURE"	2035:5:53312:53356	330521	0	True				
ANR	330526	EqualityExpression	"compare_function ( result , op1 , op2 ) == FAILURE"		330521	0		==			
ANR	330527	CallExpression	"compare_function ( result , op1 , op2 )"		330521	0					
ANR	330528	Callee	compare_function		330521	0					
ANR	330529	Identifier	compare_function		330521	0					
ANR	330530	ArgumentList	result		330521	1					
ANR	330531	Argument	result		330521	0					
ANR	330532	Identifier	result		330521	0					
ANR	330533	Argument	op1		330521	1					
ANR	330534	Identifier	op1		330521	0					
ANR	330535	Argument	op2		330521	2					
ANR	330536	Identifier	op2		330521	0					
ANR	330537	Identifier	FAILURE		330521	1					
ANR	330538	CompoundStatement		2:52:53:53	330521	1					
ANR	330539	ReturnStatement	return FAILURE ;	2036:2:53363:53377	330521	0	True				
ANR	330540	Identifier	FAILURE		330521	0					
ANR	330541	ExpressionStatement	"ZVAL_BOOL ( result , ( Z_LVAL_P ( result ) == 0 ) )"	2038:1:53383:53425	330521	1	True				
ANR	330542	CallExpression	"ZVAL_BOOL ( result , ( Z_LVAL_P ( result ) == 0 ) )"		330521	0					
ANR	330543	Callee	ZVAL_BOOL		330521	0					
ANR	330544	Identifier	ZVAL_BOOL		330521	0					
ANR	330545	ArgumentList	result		330521	1					
ANR	330546	Argument	result		330521	0					
ANR	330547	Identifier	result		330521	0					
ANR	330548	Argument	Z_LVAL_P ( result ) == 0		330521	1					
ANR	330549	EqualityExpression	Z_LVAL_P ( result ) == 0		330521	0		==			
ANR	330550	CallExpression	Z_LVAL_P ( result )		330521	0					
ANR	330551	Callee	Z_LVAL_P		330521	0					
ANR	330552	Identifier	Z_LVAL_P		330521	0					
ANR	330553	ArgumentList	result		330521	1					
ANR	330554	Argument	result		330521	0					
ANR	330555	Identifier	result		330521	0					
ANR	330556	PrimaryExpression	0		330521	1					
ANR	330557	ReturnStatement	return SUCCESS ;	2039:1:53428:53442	330521	2	True				
ANR	330558	Identifier	SUCCESS		330521	0					
ANR	330559	ReturnType	ZEND_API int ZEND_FASTCALL		330521	1					
ANR	330560	Identifier	is_equal_function		330521	2					
ANR	330561	ParameterList	"zval * result , zval * op1 , zval * op2"		330521	3					
ANR	330562	Parameter	zval * result	2033:45:53259:53270	330521	0	True				
ANR	330563	ParameterType	zval *		330521	0					
ANR	330564	Identifier	result		330521	1					
ANR	330565	Parameter	zval * op1	2033:59:53273:53281	330521	1	True				
ANR	330566	ParameterType	zval *		330521	0					
ANR	330567	Identifier	op1		330521	1					
ANR	330568	Parameter	zval * op2	2033:70:53284:53292	330521	2	True				
ANR	330569	ParameterType	zval *		330521	0					
ANR	330570	Identifier	op2		330521	1					
ANR	330571	CFGEntryNode	ENTRY		330521		True				
ANR	330572	CFGExitNode	EXIT		330521		True				
ANR	330573	Symbol	result		330521						
ANR	330574	Symbol	op2		330521						
ANR	330575	Symbol	op1		330521						
ANR	330576	Symbol	compare_function		330521						
ANR	330577	Symbol	SUCCESS		330521						
ANR	330578	Symbol	FAILURE		330521						
ANR	330579	Symbol	Z_LVAL_P		330521						
ANR	330580	Function	is_not_equal_function	2043:0:53457:53691							
ANR	330581	FunctionDef	"is_not_equal_function (zval * result , zval * op1 , zval * op2)"		330580	0					
ANR	330582	CompoundStatement		2044:0:53552:53691	330580	0					
ANR	330583	IfStatement	"if ( compare_function ( result , op1 , op2 ) == FAILURE )"		330580	0					
ANR	330584	Condition	"compare_function ( result , op1 , op2 ) == FAILURE"	2045:5:53559:53603	330580	0	True				
ANR	330585	EqualityExpression	"compare_function ( result , op1 , op2 ) == FAILURE"		330580	0		==			
ANR	330586	CallExpression	"compare_function ( result , op1 , op2 )"		330580	0					
ANR	330587	Callee	compare_function		330580	0					
ANR	330588	Identifier	compare_function		330580	0					
ANR	330589	ArgumentList	result		330580	1					
ANR	330590	Argument	result		330580	0					
ANR	330591	Identifier	result		330580	0					
ANR	330592	Argument	op1		330580	1					
ANR	330593	Identifier	op1		330580	0					
ANR	330594	Argument	op2		330580	2					
ANR	330595	Identifier	op2		330580	0					
ANR	330596	Identifier	FAILURE		330580	1					
ANR	330597	CompoundStatement		2:52:53:53	330580	1					
ANR	330598	ReturnStatement	return FAILURE ;	2046:2:53610:53624	330580	0	True				
ANR	330599	Identifier	FAILURE		330580	0					
ANR	330600	ExpressionStatement	"ZVAL_BOOL ( result , ( Z_LVAL_P ( result ) != 0 ) )"	2048:1:53630:53672	330580	1	True				
ANR	330601	CallExpression	"ZVAL_BOOL ( result , ( Z_LVAL_P ( result ) != 0 ) )"		330580	0					
ANR	330602	Callee	ZVAL_BOOL		330580	0					
ANR	330603	Identifier	ZVAL_BOOL		330580	0					
ANR	330604	ArgumentList	result		330580	1					
ANR	330605	Argument	result		330580	0					
ANR	330606	Identifier	result		330580	0					
ANR	330607	Argument	Z_LVAL_P ( result ) != 0		330580	1					
ANR	330608	EqualityExpression	Z_LVAL_P ( result ) != 0		330580	0		!=			
ANR	330609	CallExpression	Z_LVAL_P ( result )		330580	0					
ANR	330610	Callee	Z_LVAL_P		330580	0					
ANR	330611	Identifier	Z_LVAL_P		330580	0					
ANR	330612	ArgumentList	result		330580	1					
ANR	330613	Argument	result		330580	0					
ANR	330614	Identifier	result		330580	0					
ANR	330615	PrimaryExpression	0		330580	1					
ANR	330616	ReturnStatement	return SUCCESS ;	2049:1:53675:53689	330580	2	True				
ANR	330617	Identifier	SUCCESS		330580	0					
ANR	330618	ReturnType	ZEND_API int ZEND_FASTCALL		330580	1					
ANR	330619	Identifier	is_not_equal_function		330580	2					
ANR	330620	ParameterList	"zval * result , zval * op1 , zval * op2"		330580	3					
ANR	330621	Parameter	zval * result	2043:49:53506:53517	330580	0	True				
ANR	330622	ParameterType	zval *		330580	0					
ANR	330623	Identifier	result		330580	1					
ANR	330624	Parameter	zval * op1	2043:63:53520:53528	330580	1	True				
ANR	330625	ParameterType	zval *		330580	0					
ANR	330626	Identifier	op1		330580	1					
ANR	330627	Parameter	zval * op2	2043:74:53531:53539	330580	2	True				
ANR	330628	ParameterType	zval *		330580	0					
ANR	330629	Identifier	op2		330580	1					
ANR	330630	CFGEntryNode	ENTRY		330580		True				
ANR	330631	CFGExitNode	EXIT		330580		True				
ANR	330632	Symbol	result		330580						
ANR	330633	Symbol	op2		330580						
ANR	330634	Symbol	op1		330580						
ANR	330635	Symbol	compare_function		330580						
ANR	330636	Symbol	SUCCESS		330580						
ANR	330637	Symbol	FAILURE		330580						
ANR	330638	Symbol	Z_LVAL_P		330580						
ANR	330639	Function	is_smaller_function	2053:0:53704:53935							
ANR	330640	FunctionDef	"is_smaller_function (zval * result , zval * op1 , zval * op2)"		330639	0					
ANR	330641	CompoundStatement		2054:0:53797:53935	330639	0					
ANR	330642	IfStatement	"if ( compare_function ( result , op1 , op2 ) == FAILURE )"		330639	0					
ANR	330643	Condition	"compare_function ( result , op1 , op2 ) == FAILURE"	2055:5:53804:53848	330639	0	True				
ANR	330644	EqualityExpression	"compare_function ( result , op1 , op2 ) == FAILURE"		330639	0		==			
ANR	330645	CallExpression	"compare_function ( result , op1 , op2 )"		330639	0					
ANR	330646	Callee	compare_function		330639	0					
ANR	330647	Identifier	compare_function		330639	0					
ANR	330648	ArgumentList	result		330639	1					
ANR	330649	Argument	result		330639	0					
ANR	330650	Identifier	result		330639	0					
ANR	330651	Argument	op1		330639	1					
ANR	330652	Identifier	op1		330639	0					
ANR	330653	Argument	op2		330639	2					
ANR	330654	Identifier	op2		330639	0					
ANR	330655	Identifier	FAILURE		330639	1					
ANR	330656	CompoundStatement		2:52:53:53	330639	1					
ANR	330657	ReturnStatement	return FAILURE ;	2056:2:53855:53869	330639	0	True				
ANR	330658	Identifier	FAILURE		330639	0					
ANR	330659	ExpressionStatement	"ZVAL_BOOL ( result , ( Z_LVAL_P ( result ) < 0 ) )"	2058:1:53875:53916	330639	1	True				
ANR	330660	CallExpression	"ZVAL_BOOL ( result , ( Z_LVAL_P ( result ) < 0 ) )"		330639	0					
ANR	330661	Callee	ZVAL_BOOL		330639	0					
ANR	330662	Identifier	ZVAL_BOOL		330639	0					
ANR	330663	ArgumentList	result		330639	1					
ANR	330664	Argument	result		330639	0					
ANR	330665	Identifier	result		330639	0					
ANR	330666	Argument	Z_LVAL_P ( result ) < 0		330639	1					
ANR	330667	RelationalExpression	Z_LVAL_P ( result ) < 0		330639	0		<			
ANR	330668	CallExpression	Z_LVAL_P ( result )		330639	0					
ANR	330669	Callee	Z_LVAL_P		330639	0					
ANR	330670	Identifier	Z_LVAL_P		330639	0					
ANR	330671	ArgumentList	result		330639	1					
ANR	330672	Argument	result		330639	0					
ANR	330673	Identifier	result		330639	0					
ANR	330674	PrimaryExpression	0		330639	1					
ANR	330675	ReturnStatement	return SUCCESS ;	2059:1:53919:53933	330639	2	True				
ANR	330676	Identifier	SUCCESS		330639	0					
ANR	330677	ReturnType	ZEND_API int ZEND_FASTCALL		330639	1					
ANR	330678	Identifier	is_smaller_function		330639	2					
ANR	330679	ParameterList	"zval * result , zval * op1 , zval * op2"		330639	3					
ANR	330680	Parameter	zval * result	2053:47:53751:53762	330639	0	True				
ANR	330681	ParameterType	zval *		330639	0					
ANR	330682	Identifier	result		330639	1					
ANR	330683	Parameter	zval * op1	2053:61:53765:53773	330639	1	True				
ANR	330684	ParameterType	zval *		330639	0					
ANR	330685	Identifier	op1		330639	1					
ANR	330686	Parameter	zval * op2	2053:72:53776:53784	330639	2	True				
ANR	330687	ParameterType	zval *		330639	0					
ANR	330688	Identifier	op2		330639	1					
ANR	330689	CFGEntryNode	ENTRY		330639		True				
ANR	330690	CFGExitNode	EXIT		330639		True				
ANR	330691	Symbol	result		330639						
ANR	330692	Symbol	op2		330639						
ANR	330693	Symbol	op1		330639						
ANR	330694	Symbol	compare_function		330639						
ANR	330695	Symbol	SUCCESS		330639						
ANR	330696	Symbol	FAILURE		330639						
ANR	330697	Symbol	Z_LVAL_P		330639						
ANR	330698	Function	is_smaller_or_equal_function	2063:0:53948:54189							
ANR	330699	FunctionDef	"is_smaller_or_equal_function (zval * result , zval * op1 , zval * op2)"		330698	0					
ANR	330700	CompoundStatement		2064:0:54050:54189	330698	0					
ANR	330701	IfStatement	"if ( compare_function ( result , op1 , op2 ) == FAILURE )"		330698	0					
ANR	330702	Condition	"compare_function ( result , op1 , op2 ) == FAILURE"	2065:5:54057:54101	330698	0	True				
ANR	330703	EqualityExpression	"compare_function ( result , op1 , op2 ) == FAILURE"		330698	0		==			
ANR	330704	CallExpression	"compare_function ( result , op1 , op2 )"		330698	0					
ANR	330705	Callee	compare_function		330698	0					
ANR	330706	Identifier	compare_function		330698	0					
ANR	330707	ArgumentList	result		330698	1					
ANR	330708	Argument	result		330698	0					
ANR	330709	Identifier	result		330698	0					
ANR	330710	Argument	op1		330698	1					
ANR	330711	Identifier	op1		330698	0					
ANR	330712	Argument	op2		330698	2					
ANR	330713	Identifier	op2		330698	0					
ANR	330714	Identifier	FAILURE		330698	1					
ANR	330715	CompoundStatement		2:52:53:53	330698	1					
ANR	330716	ReturnStatement	return FAILURE ;	2066:2:54108:54122	330698	0	True				
ANR	330717	Identifier	FAILURE		330698	0					
ANR	330718	ExpressionStatement	"ZVAL_BOOL ( result , ( Z_LVAL_P ( result ) <= 0 ) )"	2068:1:54128:54170	330698	1	True				
ANR	330719	CallExpression	"ZVAL_BOOL ( result , ( Z_LVAL_P ( result ) <= 0 ) )"		330698	0					
ANR	330720	Callee	ZVAL_BOOL		330698	0					
ANR	330721	Identifier	ZVAL_BOOL		330698	0					
ANR	330722	ArgumentList	result		330698	1					
ANR	330723	Argument	result		330698	0					
ANR	330724	Identifier	result		330698	0					
ANR	330725	Argument	Z_LVAL_P ( result ) <= 0		330698	1					
ANR	330726	RelationalExpression	Z_LVAL_P ( result ) <= 0		330698	0		<=			
ANR	330727	CallExpression	Z_LVAL_P ( result )		330698	0					
ANR	330728	Callee	Z_LVAL_P		330698	0					
ANR	330729	Identifier	Z_LVAL_P		330698	0					
ANR	330730	ArgumentList	result		330698	1					
ANR	330731	Argument	result		330698	0					
ANR	330732	Identifier	result		330698	0					
ANR	330733	PrimaryExpression	0		330698	1					
ANR	330734	ReturnStatement	return SUCCESS ;	2069:1:54173:54187	330698	2	True				
ANR	330735	Identifier	SUCCESS		330698	0					
ANR	330736	ReturnType	ZEND_API int ZEND_FASTCALL		330698	1					
ANR	330737	Identifier	is_smaller_or_equal_function		330698	2					
ANR	330738	ParameterList	"zval * result , zval * op1 , zval * op2"		330698	3					
ANR	330739	Parameter	zval * result	2063:56:54004:54015	330698	0	True				
ANR	330740	ParameterType	zval *		330698	0					
ANR	330741	Identifier	result		330698	1					
ANR	330742	Parameter	zval * op1	2063:70:54018:54026	330698	1	True				
ANR	330743	ParameterType	zval *		330698	0					
ANR	330744	Identifier	op1		330698	1					
ANR	330745	Parameter	zval * op2	2063:81:54029:54037	330698	2	True				
ANR	330746	ParameterType	zval *		330698	0					
ANR	330747	Identifier	op2		330698	1					
ANR	330748	CFGEntryNode	ENTRY		330698		True				
ANR	330749	CFGExitNode	EXIT		330698		True				
ANR	330750	Symbol	result		330698						
ANR	330751	Symbol	op2		330698						
ANR	330752	Symbol	op1		330698						
ANR	330753	Symbol	compare_function		330698						
ANR	330754	Symbol	SUCCESS		330698						
ANR	330755	Symbol	FAILURE		330698						
ANR	330756	Symbol	Z_LVAL_P		330698						
ANR	330757	Function	instanceof_interface_only	2073:0:54202:54501							
ANR	330758	FunctionDef	"instanceof_interface_only (const zend_class_entry * instance_ce , const zend_class_entry * ce)"		330757	0					
ANR	330759	CompoundStatement		2074:0:54334:54501	330757	0					
ANR	330760	IdentifierDeclStatement	uint32_t i ;	2075:1:54337:54347	330757	0	True				
ANR	330761	IdentifierDecl	i		330757	0					
ANR	330762	IdentifierDeclType	uint32_t		330757	0					
ANR	330763	Identifier	i		330757	1					
ANR	330764	ForStatement	for ( i = 0 ; i < instance_ce -> num_interfaces ; i ++ )		330757	1					
ANR	330765	ForInit	i = 0 ;	2077:6:54356:54361	330757	0	True				
ANR	330766	AssignmentExpression	i = 0		330757	0		=			
ANR	330767	Identifier	i		330757	0					
ANR	330768	PrimaryExpression	0		330757	1					
ANR	330769	Condition	i < instance_ce -> num_interfaces	2077:13:54363:54393	330757	1	True				
ANR	330770	RelationalExpression	i < instance_ce -> num_interfaces		330757	0		<			
ANR	330771	Identifier	i		330757	0					
ANR	330772	PtrMemberAccess	instance_ce -> num_interfaces		330757	1					
ANR	330773	Identifier	instance_ce		330757	0					
ANR	330774	Identifier	num_interfaces		330757	1					
ANR	330775	PostIncDecOperationExpression	i ++	2077:46:54396:54398	330757	2	True				
ANR	330776	Identifier	i		330757	0					
ANR	330777	IncDec	++		330757	1					
ANR	330778	CompoundStatement		4:51:66:66	330757	3					
ANR	330779	IfStatement	"if ( instanceof_interface_only ( instance_ce -> interfaces [ i ] , ce ) )"		330757	0					
ANR	330780	Condition	"instanceof_interface_only ( instance_ce -> interfaces [ i ] , ce )"	2078:6:54409:54465	330757	0	True				
ANR	330781	CallExpression	"instanceof_interface_only ( instance_ce -> interfaces [ i ] , ce )"		330757	0					
ANR	330782	Callee	instanceof_interface_only		330757	0					
ANR	330783	Identifier	instanceof_interface_only		330757	0					
ANR	330784	ArgumentList	instance_ce -> interfaces [ i ]		330757	1					
ANR	330785	Argument	instance_ce -> interfaces [ i ]		330757	0					
ANR	330786	ArrayIndexing	instance_ce -> interfaces [ i ]		330757	0					
ANR	330787	PtrMemberAccess	instance_ce -> interfaces		330757	0					
ANR	330788	Identifier	instance_ce		330757	0					
ANR	330789	Identifier	interfaces		330757	1					
ANR	330790	Identifier	i		330757	1					
ANR	330791	Argument	ce		330757	1					
ANR	330792	Identifier	ce		330757	0					
ANR	330793	CompoundStatement		5:65:133:133	330757	1					
ANR	330794	ReturnStatement	return 1 ;	2079:3:54473:54481	330757	0	True				
ANR	330795	PrimaryExpression	1		330757	0					
ANR	330796	ReturnStatement	return 0 ;	2082:1:54491:54499	330757	2	True				
ANR	330797	PrimaryExpression	0		330757	0					
ANR	330798	ReturnType	static zend_bool ZEND_FASTCALL		330757	1					
ANR	330799	Identifier	instanceof_interface_only		330757	2					
ANR	330800	ParameterList	"const zend_class_entry * instance_ce , const zend_class_entry * ce"		330757	3					
ANR	330801	Parameter	const zend_class_entry * instance_ce	2073:57:54259:54293	330757	0	True				
ANR	330802	ParameterType	const zend_class_entry *		330757	0					
ANR	330803	Identifier	instance_ce		330757	1					
ANR	330804	Parameter	const zend_class_entry * ce	2073:94:54296:54321	330757	1	True				
ANR	330805	ParameterType	const zend_class_entry *		330757	0					
ANR	330806	Identifier	ce		330757	1					
ANR	330807	CFGEntryNode	ENTRY		330757		True				
ANR	330808	CFGExitNode	EXIT		330757		True				
ANR	330809	Symbol	instance_ce -> interfaces		330757						
ANR	330810	Symbol	ce		330757						
ANR	330811	Symbol	* * instance_ce		330757						
ANR	330812	Symbol	* i		330757						
ANR	330813	Symbol	* instance_ce -> interfaces		330757						
ANR	330814	Symbol	i		330757						
ANR	330815	Symbol	instance_ce -> num_interfaces		330757						
ANR	330816	Symbol	instance_ce		330757						
ANR	330817	Symbol	instanceof_interface_only		330757						
ANR	330818	Symbol	* instance_ce		330757						
ANR	330819	Function	instanceof_class	2086:0:54514:54762							
ANR	330820	FunctionDef	"instanceof_class (const zend_class_entry * instance_ce , const zend_class_entry * ce)"		330819	0					
ANR	330821	CompoundStatement		2087:0:54642:54762	330819	0					
ANR	330822	WhileStatement	while ( instance_ce )		330819	0					
ANR	330823	Condition	instance_ce	2088:8:54652:54662	330819	0	True				
ANR	330824	Identifier	instance_ce		330819	0					
ANR	330825	CompoundStatement		2:21:22:22	330819	1					
ANR	330826	IfStatement	if ( instance_ce == ce )		330819	0					
ANR	330827	Condition	instance_ce == ce	2089:6:54673:54689	330819	0	True				
ANR	330828	EqualityExpression	instance_ce == ce		330819	0		==			
ANR	330829	Identifier	instance_ce		330819	0					
ANR	330830	Identifier	ce		330819	1					
ANR	330831	CompoundStatement		3:25:49:49	330819	1					
ANR	330832	ReturnStatement	return 1 ;	2090:3:54697:54705	330819	0	True				
ANR	330833	PrimaryExpression	1		330819	0					
ANR	330834	ExpressionStatement	instance_ce = instance_ce -> parent	2092:2:54713:54746	330819	1	True				
ANR	330835	AssignmentExpression	instance_ce = instance_ce -> parent		330819	0		=			
ANR	330836	Identifier	instance_ce		330819	0					
ANR	330837	PtrMemberAccess	instance_ce -> parent		330819	1					
ANR	330838	Identifier	instance_ce		330819	0					
ANR	330839	Identifier	parent		330819	1					
ANR	330840	ReturnStatement	return 0 ;	2094:1:54752:54760	330819	1	True				
ANR	330841	PrimaryExpression	0		330819	0					
ANR	330842	ReturnType	static zend_always_inline zend_bool		330819	1					
ANR	330843	Identifier	instanceof_class		330819	2					
ANR	330844	ParameterList	"const zend_class_entry * instance_ce , const zend_class_entry * ce"		330819	3					
ANR	330845	Parameter	const zend_class_entry * instance_ce	2086:53:54567:54601	330819	0	True				
ANR	330846	ParameterType	const zend_class_entry *		330819	0					
ANR	330847	Identifier	instance_ce		330819	1					
ANR	330848	Parameter	const zend_class_entry * ce	2086:90:54604:54629	330819	1	True				
ANR	330849	ParameterType	const zend_class_entry *		330819	0					
ANR	330850	Identifier	ce		330819	1					
ANR	330851	CFGEntryNode	ENTRY		330819		True				
ANR	330852	CFGExitNode	EXIT		330819		True				
ANR	330853	Symbol	ce		330819						
ANR	330854	Symbol	instance_ce		330819						
ANR	330855	Symbol	instance_ce -> parent		330819						
ANR	330856	Symbol	* instance_ce		330819						
ANR	330857	Function	instanceof_interface	2098:0:54775:55096							
ANR	330858	FunctionDef	"instanceof_interface (const zend_class_entry * instance_ce , const zend_class_entry * ce)"		330857	0					
ANR	330859	CompoundStatement		2099:0:54902:55096	330857	0					
ANR	330860	IdentifierDeclStatement	uint32_t i ;	2100:1:54905:54915	330857	0	True				
ANR	330861	IdentifierDecl	i		330857	0					
ANR	330862	IdentifierDeclType	uint32_t		330857	0					
ANR	330863	Identifier	i		330857	1					
ANR	330864	ForStatement	for ( i = 0 ; i < instance_ce -> num_interfaces ; i ++ )		330857	1					
ANR	330865	ForInit	i = 0 ;	2102:6:54924:54929	330857	0	True				
ANR	330866	AssignmentExpression	i = 0		330857	0		=			
ANR	330867	Identifier	i		330857	0					
ANR	330868	PrimaryExpression	0		330857	1					
ANR	330869	Condition	i < instance_ce -> num_interfaces	2102:13:54931:54961	330857	1	True				
ANR	330870	RelationalExpression	i < instance_ce -> num_interfaces		330857	0		<			
ANR	330871	Identifier	i		330857	0					
ANR	330872	PtrMemberAccess	instance_ce -> num_interfaces		330857	1					
ANR	330873	Identifier	instance_ce		330857	0					
ANR	330874	Identifier	num_interfaces		330857	1					
ANR	330875	PostIncDecOperationExpression	i ++	2102:46:54964:54966	330857	2	True				
ANR	330876	Identifier	i		330857	0					
ANR	330877	IncDec	++		330857	1					
ANR	330878	CompoundStatement		4:51:66:66	330857	3					
ANR	330879	IfStatement	"if ( instanceof_interface ( instance_ce -> interfaces [ i ] , ce ) )"		330857	0					
ANR	330880	Condition	"instanceof_interface ( instance_ce -> interfaces [ i ] , ce )"	2103:6:54977:55028	330857	0	True				
ANR	330881	CallExpression	"instanceof_interface ( instance_ce -> interfaces [ i ] , ce )"		330857	0					
ANR	330882	Callee	instanceof_interface		330857	0					
ANR	330883	Identifier	instanceof_interface		330857	0					
ANR	330884	ArgumentList	instance_ce -> interfaces [ i ]		330857	1					
ANR	330885	Argument	instance_ce -> interfaces [ i ]		330857	0					
ANR	330886	ArrayIndexing	instance_ce -> interfaces [ i ]		330857	0					
ANR	330887	PtrMemberAccess	instance_ce -> interfaces		330857	0					
ANR	330888	Identifier	instance_ce		330857	0					
ANR	330889	Identifier	interfaces		330857	1					
ANR	330890	Identifier	i		330857	1					
ANR	330891	Argument	ce		330857	1					
ANR	330892	Identifier	ce		330857	0					
ANR	330893	CompoundStatement		5:60:128:128	330857	1					
ANR	330894	ReturnStatement	return 1 ;	2104:3:55036:55044	330857	0	True				
ANR	330895	PrimaryExpression	1		330857	0					
ANR	330896	ReturnStatement	"return instanceof_class ( instance_ce , ce ) ;"	2107:1:55054:55094	330857	2	True				
ANR	330897	CallExpression	"instanceof_class ( instance_ce , ce )"		330857	0					
ANR	330898	Callee	instanceof_class		330857	0					
ANR	330899	Identifier	instanceof_class		330857	0					
ANR	330900	ArgumentList	instance_ce		330857	1					
ANR	330901	Argument	instance_ce		330857	0					
ANR	330902	Identifier	instance_ce		330857	0					
ANR	330903	Argument	ce		330857	1					
ANR	330904	Identifier	ce		330857	0					
ANR	330905	ReturnType	static zend_bool ZEND_FASTCALL		330857	1					
ANR	330906	Identifier	instanceof_interface		330857	2					
ANR	330907	ParameterList	"const zend_class_entry * instance_ce , const zend_class_entry * ce"		330857	3					
ANR	330908	Parameter	const zend_class_entry * instance_ce	2098:52:54827:54861	330857	0	True				
ANR	330909	ParameterType	const zend_class_entry *		330857	0					
ANR	330910	Identifier	instance_ce		330857	1					
ANR	330911	Parameter	const zend_class_entry * ce	2098:89:54864:54889	330857	1	True				
ANR	330912	ParameterType	const zend_class_entry *		330857	0					
ANR	330913	Identifier	ce		330857	1					
ANR	330914	CFGEntryNode	ENTRY		330857		True				
ANR	330915	CFGExitNode	EXIT		330857		True				
ANR	330916	Symbol	instance_ce -> interfaces		330857						
ANR	330917	Symbol	instanceof_interface		330857						
ANR	330918	Symbol	ce		330857						
ANR	330919	Symbol	* * instance_ce		330857						
ANR	330920	Symbol	instanceof_class		330857						
ANR	330921	Symbol	* instance_ce -> interfaces		330857						
ANR	330922	Symbol	* i		330857						
ANR	330923	Symbol	i		330857						
ANR	330924	Symbol	instance_ce -> num_interfaces		330857						
ANR	330925	Symbol	instance_ce		330857						
ANR	330926	Symbol	* instance_ce		330857						
ANR	330927	Function	instanceof_function_ex	2111:0:55109:55559							
ANR	330928	FunctionDef	"instanceof_function_ex (const zend_class_entry * instance_ce , const zend_class_entry * ce , zend_bool interfaces_only)"		330927	0					
ANR	330929	CompoundStatement		2112:0:55267:55559	330927	0					
ANR	330930	IfStatement	if ( ce -> ce_flags & ZEND_ACC_INTERFACE )		330927	0					
ANR	330931	Condition	ce -> ce_flags & ZEND_ACC_INTERFACE	2113:5:55274:55306	330927	0	True				
ANR	330932	BitAndExpression	ce -> ce_flags & ZEND_ACC_INTERFACE		330927	0		&			
ANR	330933	PtrMemberAccess	ce -> ce_flags		330927	0					
ANR	330934	Identifier	ce		330927	0					
ANR	330935	Identifier	ce_flags		330927	1					
ANR	330936	Identifier	ZEND_ACC_INTERFACE		330927	1					
ANR	330937	CompoundStatement		2:40:41:41	330927	1					
ANR	330938	IfStatement	if ( ! interfaces_only )		330927	0					
ANR	330939	Condition	! interfaces_only	2114:6:55317:55332	330927	0	True				
ANR	330940	UnaryOperationExpression	! interfaces_only		330927	0					
ANR	330941	UnaryOperator	!		330927	0					
ANR	330942	Identifier	interfaces_only		330927	1					
ANR	330943	CompoundStatement		3:24:67:67	330927	1					
ANR	330944	IfStatement	"if ( instanceof_interface_only ( instance_ce , ce ) )"		330927	0					
ANR	330945	Condition	"instanceof_interface_only ( instance_ce , ce )"	2115:7:55344:55385	330927	0	True				
ANR	330946	CallExpression	"instanceof_interface_only ( instance_ce , ce )"		330927	0					
ANR	330947	Callee	instanceof_interface_only		330927	0					
ANR	330948	Identifier	instanceof_interface_only		330927	0					
ANR	330949	ArgumentList	instance_ce		330927	1					
ANR	330950	Argument	instance_ce		330927	0					
ANR	330951	Identifier	instance_ce		330927	0					
ANR	330952	Argument	ce		330927	1					
ANR	330953	Identifier	ce		330927	0					
ANR	330954	CompoundStatement		4:51:120:120	330927	1					
ANR	330955	ReturnStatement	return 1 ;	2116:4:55394:55402	330927	0	True				
ANR	330956	PrimaryExpression	1		330927	0					
ANR	330957	ElseStatement	else		330927	0					
ANR	330958	CompoundStatement		7:9:150:150	330927	0					
ANR	330959	ReturnStatement	"return instanceof_interface ( instance_ce , ce ) ;"	2119:3:55423:55467	330927	0	True				
ANR	330960	CallExpression	"instanceof_interface ( instance_ce , ce )"		330927	0					
ANR	330961	Callee	instanceof_interface		330927	0					
ANR	330962	Identifier	instanceof_interface		330927	0					
ANR	330963	ArgumentList	instance_ce		330927	1					
ANR	330964	Argument	instance_ce		330927	0					
ANR	330965	Identifier	instance_ce		330927	0					
ANR	330966	Argument	ce		330927	1					
ANR	330967	Identifier	ce		330927	0					
ANR	330968	IfStatement	if ( ! interfaces_only )		330927	1					
ANR	330969	Condition	! interfaces_only	2122:5:55481:55496	330927	0	True				
ANR	330970	UnaryOperationExpression	! interfaces_only		330927	0					
ANR	330971	UnaryOperator	!		330927	0					
ANR	330972	Identifier	interfaces_only		330927	1					
ANR	330973	CompoundStatement		11:23:231:231	330927	1					
ANR	330974	ReturnStatement	"return instanceof_class ( instance_ce , ce ) ;"	2123:2:55503:55543	330927	0	True				
ANR	330975	CallExpression	"instanceof_class ( instance_ce , ce )"		330927	0					
ANR	330976	Callee	instanceof_class		330927	0					
ANR	330977	Identifier	instanceof_class		330927	0					
ANR	330978	ArgumentList	instance_ce		330927	1					
ANR	330979	Argument	instance_ce		330927	0					
ANR	330980	Identifier	instance_ce		330927	0					
ANR	330981	Argument	ce		330927	1					
ANR	330982	Identifier	ce		330927	0					
ANR	330983	ReturnStatement	return 0 ;	2125:1:55549:55557	330927	2	True				
ANR	330984	PrimaryExpression	0		330927	0					
ANR	330985	ReturnType	ZEND_API zend_bool ZEND_FASTCALL		330927	1					
ANR	330986	Identifier	instanceof_function_ex		330927	2					
ANR	330987	ParameterList	"const zend_class_entry * instance_ce , const zend_class_entry * ce , zend_bool interfaces_only"		330927	3					
ANR	330988	Parameter	const zend_class_entry * instance_ce	2111:56:55165:55199	330927	0	True				
ANR	330989	ParameterType	const zend_class_entry *		330927	0					
ANR	330990	Identifier	instance_ce		330927	1					
ANR	330991	Parameter	const zend_class_entry * ce	2111:93:55202:55227	330927	1	True				
ANR	330992	ParameterType	const zend_class_entry *		330927	0					
ANR	330993	Identifier	ce		330927	1					
ANR	330994	Parameter	zend_bool interfaces_only	2111:121:55230:55254	330927	2	True				
ANR	330995	ParameterType	zend_bool		330927	0					
ANR	330996	Identifier	interfaces_only		330927	1					
ANR	330997	CFGEntryNode	ENTRY		330927		True				
ANR	330998	CFGExitNode	EXIT		330927		True				
ANR	330999	Symbol	ce -> ce_flags		330927						
ANR	331000	Symbol	instanceof_interface		330927						
ANR	331001	Symbol	ce		330927						
ANR	331002	Symbol	instanceof_class		330927						
ANR	331003	Symbol	instance_ce		330927						
ANR	331004	Symbol	ZEND_ACC_INTERFACE		330927						
ANR	331005	Symbol	* ce		330927						
ANR	331006	Symbol	instanceof_interface_only		330927						
ANR	331007	Symbol	interfaces_only		330927						
ANR	331008	Function	instanceof_function	2129:0:55572:55849							
ANR	331009	FunctionDef	"instanceof_function (const zend_class_entry * instance_ce , const zend_class_entry * ce)"		331008	0					
ANR	331010	CompoundStatement		2130:0:55700:55849	331008	0					
ANR	331011	IfStatement	if ( ce -> ce_flags & ZEND_ACC_INTERFACE )		331008	0					
ANR	331012	Condition	ce -> ce_flags & ZEND_ACC_INTERFACE	2131:5:55707:55739	331008	0	True				
ANR	331013	BitAndExpression	ce -> ce_flags & ZEND_ACC_INTERFACE		331008	0		&			
ANR	331014	PtrMemberAccess	ce -> ce_flags		331008	0					
ANR	331015	Identifier	ce		331008	0					
ANR	331016	Identifier	ce_flags		331008	1					
ANR	331017	Identifier	ZEND_ACC_INTERFACE		331008	1					
ANR	331018	CompoundStatement		2:40:41:41	331008	1					
ANR	331019	ReturnStatement	"return instanceof_interface ( instance_ce , ce ) ;"	2132:2:55746:55790	331008	0	True				
ANR	331020	CallExpression	"instanceof_interface ( instance_ce , ce )"		331008	0					
ANR	331021	Callee	instanceof_interface		331008	0					
ANR	331022	Identifier	instanceof_interface		331008	0					
ANR	331023	ArgumentList	instance_ce		331008	1					
ANR	331024	Argument	instance_ce		331008	0					
ANR	331025	Identifier	instance_ce		331008	0					
ANR	331026	Argument	ce		331008	1					
ANR	331027	Identifier	ce		331008	0					
ANR	331028	ElseStatement	else		331008	0					
ANR	331029	CompoundStatement		4:8:99:99	331008	0					
ANR	331030	ReturnStatement	"return instanceof_class ( instance_ce , ce ) ;"	2134:2:55804:55844	331008	0	True				
ANR	331031	CallExpression	"instanceof_class ( instance_ce , ce )"		331008	0					
ANR	331032	Callee	instanceof_class		331008	0					
ANR	331033	Identifier	instanceof_class		331008	0					
ANR	331034	ArgumentList	instance_ce		331008	1					
ANR	331035	Argument	instance_ce		331008	0					
ANR	331036	Identifier	instance_ce		331008	0					
ANR	331037	Argument	ce		331008	1					
ANR	331038	Identifier	ce		331008	0					
ANR	331039	ReturnType	ZEND_API zend_bool ZEND_FASTCALL		331008	1					
ANR	331040	Identifier	instanceof_function		331008	2					
ANR	331041	ParameterList	"const zend_class_entry * instance_ce , const zend_class_entry * ce"		331008	3					
ANR	331042	Parameter	const zend_class_entry * instance_ce	2129:53:55625:55659	331008	0	True				
ANR	331043	ParameterType	const zend_class_entry *		331008	0					
ANR	331044	Identifier	instance_ce		331008	1					
ANR	331045	Parameter	const zend_class_entry * ce	2129:90:55662:55687	331008	1	True				
ANR	331046	ParameterType	const zend_class_entry *		331008	0					
ANR	331047	Identifier	ce		331008	1					
ANR	331048	CFGEntryNode	ENTRY		331008		True				
ANR	331049	CFGExitNode	EXIT		331008		True				
ANR	331050	Symbol	ce -> ce_flags		331008						
ANR	331051	Symbol	instanceof_interface		331008						
ANR	331052	Symbol	ce		331008						
ANR	331053	Symbol	instanceof_class		331008						
ANR	331054	Symbol	instance_ce		331008						
ANR	331055	Symbol	* ce		331008						
ANR	331056	Symbol	ZEND_ACC_INTERFACE		331008						
ANR	331057	Function	increment_string	2143:0:55923:57730							
ANR	331058	FunctionDef	increment_string (zval * str)		331057	0					
ANR	331059	CompoundStatement		2144:0:55987:57730	331057	0					
ANR	331060	IdentifierDeclStatement	int carry = 0 ;	2145:1:55990:56001	331057	0	True				
ANR	331061	IdentifierDecl	carry = 0		331057	0					
ANR	331062	IdentifierDeclType	int		331057	0					
ANR	331063	Identifier	carry		331057	1					
ANR	331064	AssignmentExpression	carry = 0		331057	2		=			
ANR	331065	Identifier	carry		331057	0					
ANR	331066	PrimaryExpression	0		331057	1					
ANR	331067	IdentifierDeclStatement	size_t pos = Z_STRLEN_P ( str ) - 1 ;	2146:1:56004:56032	331057	1	True				
ANR	331068	IdentifierDecl	pos = Z_STRLEN_P ( str ) - 1		331057	0					
ANR	331069	IdentifierDeclType	size_t		331057	0					
ANR	331070	Identifier	pos		331057	1					
ANR	331071	AssignmentExpression	pos = Z_STRLEN_P ( str ) - 1		331057	2		=			
ANR	331072	Identifier	pos		331057	0					
ANR	331073	AdditiveExpression	Z_STRLEN_P ( str ) - 1		331057	1		-			
ANR	331074	CallExpression	Z_STRLEN_P ( str )		331057	0					
ANR	331075	Callee	Z_STRLEN_P		331057	0					
ANR	331076	Identifier	Z_STRLEN_P		331057	0					
ANR	331077	ArgumentList	str		331057	1					
ANR	331078	Argument	str		331057	0					
ANR	331079	Identifier	str		331057	0					
ANR	331080	PrimaryExpression	1		331057	1					
ANR	331081	IdentifierDeclStatement	char * s ;	2147:1:56035:56042	331057	2	True				
ANR	331082	IdentifierDecl	* s		331057	0					
ANR	331083	IdentifierDeclType	char *		331057	0					
ANR	331084	Identifier	s		331057	1					
ANR	331085	IdentifierDeclStatement	zend_string * t ;	2148:1:56045:56059	331057	3	True				
ANR	331086	IdentifierDecl	* t		331057	0					
ANR	331087	IdentifierDeclType	zend_string *		331057	0					
ANR	331088	Identifier	t		331057	1					
ANR	331089	IdentifierDeclStatement	int last = 0 ;	2149:1:56062:56072	331057	4	True				
ANR	331090	IdentifierDecl	last = 0		331057	0					
ANR	331091	IdentifierDeclType	int		331057	0					
ANR	331092	Identifier	last		331057	1					
ANR	331093	AssignmentExpression	last = 0		331057	2		=			
ANR	331094	Identifier	last		331057	0					
ANR	331095	PrimaryExpression	0		331057	1					
ANR	331096	IdentifierDeclStatement	int ch ;	2150:1:56110:56116	331057	5	True				
ANR	331097	IdentifierDecl	ch		331057	0					
ANR	331098	IdentifierDeclType	int		331057	0					
ANR	331099	Identifier	ch		331057	1					
ANR	331100	IfStatement	if ( Z_STRLEN_P ( str ) == 0 )		331057	6					
ANR	331101	Condition	Z_STRLEN_P ( str ) == 0	2152:5:56124:56143	331057	0	True				
ANR	331102	EqualityExpression	Z_STRLEN_P ( str ) == 0		331057	0		==			
ANR	331103	CallExpression	Z_STRLEN_P ( str )		331057	0					
ANR	331104	Callee	Z_STRLEN_P		331057	0					
ANR	331105	Identifier	Z_STRLEN_P		331057	0					
ANR	331106	ArgumentList	str		331057	1					
ANR	331107	Argument	str		331057	0					
ANR	331108	Identifier	str		331057	0					
ANR	331109	PrimaryExpression	0		331057	1					
ANR	331110	CompoundStatement		9:27:158:158	331057	1					
ANR	331111	ExpressionStatement	zend_string_release ( Z_STR_P ( str ) )	2153:2:56150:56183	331057	0	True				
ANR	331112	CallExpression	zend_string_release ( Z_STR_P ( str ) )		331057	0					
ANR	331113	Callee	zend_string_release		331057	0					
ANR	331114	Identifier	zend_string_release		331057	0					
ANR	331115	ArgumentList	Z_STR_P ( str )		331057	1					
ANR	331116	Argument	Z_STR_P ( str )		331057	0					
ANR	331117	CallExpression	Z_STR_P ( str )		331057	0					
ANR	331118	Callee	Z_STR_P		331057	0					
ANR	331119	Identifier	Z_STR_P		331057	0					
ANR	331120	ArgumentList	str		331057	1					
ANR	331121	Argument	str		331057	0					
ANR	331122	Identifier	str		331057	0					
ANR	331123	IfStatement	if ( CG ( one_char_string ) [ '1' ] )		331057	1					
ANR	331124	Condition	CG ( one_char_string ) [ '1' ]	2154:6:56191:56214	331057	0	True				
ANR	331125	ArrayIndexing	CG ( one_char_string ) [ '1' ]		331057	0					
ANR	331126	CallExpression	CG ( one_char_string )		331057	0					
ANR	331127	Callee	CG		331057	0					
ANR	331128	Identifier	CG		331057	0					
ANR	331129	ArgumentList	one_char_string		331057	1					
ANR	331130	Argument	one_char_string		331057	0					
ANR	331131	Identifier	one_char_string		331057	0					
ANR	331132	PrimaryExpression	'1'		331057	1					
ANR	331133	CompoundStatement		11:32:229:229	331057	1					
ANR	331134	ExpressionStatement	"ZVAL_INTERNED_STR ( str , CG ( one_char_string ) [ '1' ] )"	2155:3:56222:56270	331057	0	True				
ANR	331135	CallExpression	"ZVAL_INTERNED_STR ( str , CG ( one_char_string ) [ '1' ] )"		331057	0					
ANR	331136	Callee	ZVAL_INTERNED_STR		331057	0					
ANR	331137	Identifier	ZVAL_INTERNED_STR		331057	0					
ANR	331138	ArgumentList	str		331057	1					
ANR	331139	Argument	str		331057	0					
ANR	331140	Identifier	str		331057	0					
ANR	331141	Argument	CG ( one_char_string ) [ '1' ]		331057	1					
ANR	331142	ArrayIndexing	CG ( one_char_string ) [ '1' ]		331057	0					
ANR	331143	CallExpression	CG ( one_char_string )		331057	0					
ANR	331144	Callee	CG		331057	0					
ANR	331145	Identifier	CG		331057	0					
ANR	331146	ArgumentList	one_char_string		331057	1					
ANR	331147	Argument	one_char_string		331057	0					
ANR	331148	Identifier	one_char_string		331057	0					
ANR	331149	PrimaryExpression	'1'		331057	1					
ANR	331150	ElseStatement	else		331057	0					
ANR	331151	CompoundStatement		13:9:293:293	331057	0					
ANR	331152	ExpressionStatement	"Z_STR_P ( str ) = zend_string_init ( ""1"" , sizeof ( ""1"" ) - 1 , 0 )"	2157:3:56286:56340	331057	0	True				
ANR	331153	AssignmentExpression	"Z_STR_P ( str ) = zend_string_init ( ""1"" , sizeof ( ""1"" ) - 1 , 0 )"		331057	0		=			
ANR	331154	CallExpression	Z_STR_P ( str )		331057	0					
ANR	331155	Callee	Z_STR_P		331057	0					
ANR	331156	Identifier	Z_STR_P		331057	0					
ANR	331157	ArgumentList	str		331057	1					
ANR	331158	Argument	str		331057	0					
ANR	331159	Identifier	str		331057	0					
ANR	331160	CallExpression	"zend_string_init ( ""1"" , sizeof ( ""1"" ) - 1 , 0 )"		331057	1					
ANR	331161	Callee	zend_string_init		331057	0					
ANR	331162	Identifier	zend_string_init		331057	0					
ANR	331163	ArgumentList	"""1"""		331057	1					
ANR	331164	Argument	"""1"""		331057	0					
ANR	331165	PrimaryExpression	"""1"""		331057	0					
ANR	331166	Argument	"sizeof ( ""1"" ) - 1"		331057	1					
ANR	331167	AdditiveExpression	"sizeof ( ""1"" ) - 1"		331057	0		-			
ANR	331168	SizeofExpression	"sizeof ( ""1"" )"		331057	0					
ANR	331169	Sizeof	sizeof		331057	0					
ANR	331170	PrimaryExpression	"""1"""		331057	1					
ANR	331171	PrimaryExpression	1		331057	1					
ANR	331172	Argument	0		331057	2					
ANR	331173	PrimaryExpression	0		331057	0					
ANR	331174	ExpressionStatement	Z_TYPE_INFO_P ( str ) = IS_STRING_EX	2158:3:56345:56378	331057	1	True				
ANR	331175	AssignmentExpression	Z_TYPE_INFO_P ( str ) = IS_STRING_EX		331057	0		=			
ANR	331176	CallExpression	Z_TYPE_INFO_P ( str )		331057	0					
ANR	331177	Callee	Z_TYPE_INFO_P		331057	0					
ANR	331178	Identifier	Z_TYPE_INFO_P		331057	0					
ANR	331179	ArgumentList	str		331057	1					
ANR	331180	Argument	str		331057	0					
ANR	331181	Identifier	str		331057	0					
ANR	331182	Identifier	IS_STRING_EX		331057	1					
ANR	331183	ReturnStatement	return ;	2160:2:56386:56392	331057	2	True				
ANR	331184	IfStatement	if ( ! Z_REFCOUNTED_P ( str ) )		331057	7					
ANR	331185	Condition	! Z_REFCOUNTED_P ( str )	2163:5:56403:56422	331057	0	True				
ANR	331186	UnaryOperationExpression	! Z_REFCOUNTED_P ( str )		331057	0					
ANR	331187	UnaryOperator	!		331057	0					
ANR	331188	CallExpression	Z_REFCOUNTED_P ( str )		331057	1					
ANR	331189	Callee	Z_REFCOUNTED_P		331057	0					
ANR	331190	Identifier	Z_REFCOUNTED_P		331057	0					
ANR	331191	ArgumentList	str		331057	1					
ANR	331192	Argument	str		331057	0					
ANR	331193	Identifier	str		331057	0					
ANR	331194	CompoundStatement		20:27:437:437	331057	1					
ANR	331195	ExpressionStatement	"Z_STR_P ( str ) = zend_string_init ( Z_STRVAL_P ( str ) , Z_STRLEN_P ( str ) , 0 )"	2164:2:56429:56497	331057	0	True				
ANR	331196	AssignmentExpression	"Z_STR_P ( str ) = zend_string_init ( Z_STRVAL_P ( str ) , Z_STRLEN_P ( str ) , 0 )"		331057	0		=			
ANR	331197	CallExpression	Z_STR_P ( str )		331057	0					
ANR	331198	Callee	Z_STR_P		331057	0					
ANR	331199	Identifier	Z_STR_P		331057	0					
ANR	331200	ArgumentList	str		331057	1					
ANR	331201	Argument	str		331057	0					
ANR	331202	Identifier	str		331057	0					
ANR	331203	CallExpression	"zend_string_init ( Z_STRVAL_P ( str ) , Z_STRLEN_P ( str ) , 0 )"		331057	1					
ANR	331204	Callee	zend_string_init		331057	0					
ANR	331205	Identifier	zend_string_init		331057	0					
ANR	331206	ArgumentList	Z_STRVAL_P ( str )		331057	1					
ANR	331207	Argument	Z_STRVAL_P ( str )		331057	0					
ANR	331208	CallExpression	Z_STRVAL_P ( str )		331057	0					
ANR	331209	Callee	Z_STRVAL_P		331057	0					
ANR	331210	Identifier	Z_STRVAL_P		331057	0					
ANR	331211	ArgumentList	str		331057	1					
ANR	331212	Argument	str		331057	0					
ANR	331213	Identifier	str		331057	0					
ANR	331214	Argument	Z_STRLEN_P ( str )		331057	1					
ANR	331215	CallExpression	Z_STRLEN_P ( str )		331057	0					
ANR	331216	Callee	Z_STRLEN_P		331057	0					
ANR	331217	Identifier	Z_STRLEN_P		331057	0					
ANR	331218	ArgumentList	str		331057	1					
ANR	331219	Argument	str		331057	0					
ANR	331220	Identifier	str		331057	0					
ANR	331221	Argument	0		331057	2					
ANR	331222	PrimaryExpression	0		331057	0					
ANR	331223	ExpressionStatement	Z_TYPE_INFO_P ( str ) = IS_STRING_EX	2165:2:56501:56534	331057	1	True				
ANR	331224	AssignmentExpression	Z_TYPE_INFO_P ( str ) = IS_STRING_EX		331057	0		=			
ANR	331225	CallExpression	Z_TYPE_INFO_P ( str )		331057	0					
ANR	331226	Callee	Z_TYPE_INFO_P		331057	0					
ANR	331227	Identifier	Z_TYPE_INFO_P		331057	0					
ANR	331228	ArgumentList	str		331057	1					
ANR	331229	Argument	str		331057	0					
ANR	331230	Identifier	str		331057	0					
ANR	331231	Identifier	IS_STRING_EX		331057	1					
ANR	331232	ElseStatement	else		331057	0					
ANR	331233	IfStatement	if ( Z_REFCOUNT_P ( str ) > 1 )		331057	0					
ANR	331234	Condition	Z_REFCOUNT_P ( str ) > 1	2166:12:56548:56568	331057	0	True				
ANR	331235	RelationalExpression	Z_REFCOUNT_P ( str ) > 1		331057	0		>			
ANR	331236	CallExpression	Z_REFCOUNT_P ( str )		331057	0					
ANR	331237	Callee	Z_REFCOUNT_P		331057	0					
ANR	331238	Identifier	Z_REFCOUNT_P		331057	0					
ANR	331239	ArgumentList	str		331057	1					
ANR	331240	Argument	str		331057	0					
ANR	331241	Identifier	str		331057	0					
ANR	331242	PrimaryExpression	1		331057	1					
ANR	331243	CompoundStatement		23:35:583:583	331057	1					
ANR	331244	ExpressionStatement	Z_DELREF_P ( str )	2167:2:56575:56590	331057	0	True				
ANR	331245	CallExpression	Z_DELREF_P ( str )		331057	0					
ANR	331246	Callee	Z_DELREF_P		331057	0					
ANR	331247	Identifier	Z_DELREF_P		331057	0					
ANR	331248	ArgumentList	str		331057	1					
ANR	331249	Argument	str		331057	0					
ANR	331250	Identifier	str		331057	0					
ANR	331251	ExpressionStatement	"Z_STR_P ( str ) = zend_string_init ( Z_STRVAL_P ( str ) , Z_STRLEN_P ( str ) , 0 )"	2168:2:56594:56662	331057	1	True				
ANR	331252	AssignmentExpression	"Z_STR_P ( str ) = zend_string_init ( Z_STRVAL_P ( str ) , Z_STRLEN_P ( str ) , 0 )"		331057	0		=			
ANR	331253	CallExpression	Z_STR_P ( str )		331057	0					
ANR	331254	Callee	Z_STR_P		331057	0					
ANR	331255	Identifier	Z_STR_P		331057	0					
ANR	331256	ArgumentList	str		331057	1					
ANR	331257	Argument	str		331057	0					
ANR	331258	Identifier	str		331057	0					
ANR	331259	CallExpression	"zend_string_init ( Z_STRVAL_P ( str ) , Z_STRLEN_P ( str ) , 0 )"		331057	1					
ANR	331260	Callee	zend_string_init		331057	0					
ANR	331261	Identifier	zend_string_init		331057	0					
ANR	331262	ArgumentList	Z_STRVAL_P ( str )		331057	1					
ANR	331263	Argument	Z_STRVAL_P ( str )		331057	0					
ANR	331264	CallExpression	Z_STRVAL_P ( str )		331057	0					
ANR	331265	Callee	Z_STRVAL_P		331057	0					
ANR	331266	Identifier	Z_STRVAL_P		331057	0					
ANR	331267	ArgumentList	str		331057	1					
ANR	331268	Argument	str		331057	0					
ANR	331269	Identifier	str		331057	0					
ANR	331270	Argument	Z_STRLEN_P ( str )		331057	1					
ANR	331271	CallExpression	Z_STRLEN_P ( str )		331057	0					
ANR	331272	Callee	Z_STRLEN_P		331057	0					
ANR	331273	Identifier	Z_STRLEN_P		331057	0					
ANR	331274	ArgumentList	str		331057	1					
ANR	331275	Argument	str		331057	0					
ANR	331276	Identifier	str		331057	0					
ANR	331277	Argument	0		331057	2					
ANR	331278	PrimaryExpression	0		331057	0					
ANR	331279	ElseStatement	else		331057	0					
ANR	331280	CompoundStatement		26:8:684:684	331057	0					
ANR	331281	ExpressionStatement	zend_string_forget_hash_val ( Z_STR_P ( str ) )	2170:2:56676:56717	331057	0	True				
ANR	331282	CallExpression	zend_string_forget_hash_val ( Z_STR_P ( str ) )		331057	0					
ANR	331283	Callee	zend_string_forget_hash_val		331057	0					
ANR	331284	Identifier	zend_string_forget_hash_val		331057	0					
ANR	331285	ArgumentList	Z_STR_P ( str )		331057	1					
ANR	331286	Argument	Z_STR_P ( str )		331057	0					
ANR	331287	CallExpression	Z_STR_P ( str )		331057	0					
ANR	331288	Callee	Z_STR_P		331057	0					
ANR	331289	Identifier	Z_STR_P		331057	0					
ANR	331290	ArgumentList	str		331057	1					
ANR	331291	Argument	str		331057	0					
ANR	331292	Identifier	str		331057	0					
ANR	331293	ExpressionStatement	s = Z_STRVAL_P ( str )	2172:1:56723:56742	331057	8	True				
ANR	331294	AssignmentExpression	s = Z_STRVAL_P ( str )		331057	0		=			
ANR	331295	Identifier	s		331057	0					
ANR	331296	CallExpression	Z_STRVAL_P ( str )		331057	1					
ANR	331297	Callee	Z_STRVAL_P		331057	0					
ANR	331298	Identifier	Z_STRVAL_P		331057	0					
ANR	331299	ArgumentList	str		331057	1					
ANR	331300	Argument	str		331057	0					
ANR	331301	Identifier	str		331057	0					
ANR	331302	DoStatement	do		331057	9					
ANR	331303	CompoundStatement		31:4:761:761	331057	0					
ANR	331304	ExpressionStatement	ch = s [ pos ]	2175:2:56753:56764	331057	0	True				
ANR	331305	AssignmentExpression	ch = s [ pos ]		331057	0		=			
ANR	331306	Identifier	ch		331057	0					
ANR	331307	ArrayIndexing	s [ pos ]		331057	1					
ANR	331308	Identifier	s		331057	0					
ANR	331309	Identifier	pos		331057	1					
ANR	331310	IfStatement	if ( ch >= 'a' && ch <= 'z' )		331057	1					
ANR	331311	Condition	ch >= 'a' && ch <= 'z'	2176:6:56772:56793	331057	0	True				
ANR	331312	AndExpression	ch >= 'a' && ch <= 'z'		331057	0		&&			
ANR	331313	RelationalExpression	ch >= 'a'		331057	0		>=			
ANR	331314	Identifier	ch		331057	0					
ANR	331315	PrimaryExpression	'a'		331057	1					
ANR	331316	RelationalExpression	ch <= 'z'		331057	1		<=			
ANR	331317	Identifier	ch		331057	0					
ANR	331318	PrimaryExpression	'z'		331057	1					
ANR	331319	CompoundStatement		33:30:808:808	331057	1					
ANR	331320	IfStatement	if ( ch == 'z' )		331057	0					
ANR	331321	Condition	ch == 'z'	2177:7:56805:56813	331057	0	True				
ANR	331322	EqualityExpression	ch == 'z'		331057	0		==			
ANR	331323	Identifier	ch		331057	0					
ANR	331324	PrimaryExpression	'z'		331057	1					
ANR	331325	CompoundStatement		34:18:828:828	331057	1					
ANR	331326	ExpressionStatement	s [ pos ] = 'a'	2178:4:56822:56834	331057	0	True				
ANR	331327	AssignmentExpression	s [ pos ] = 'a'		331057	0		=			
ANR	331328	ArrayIndexing	s [ pos ]		331057	0					
ANR	331329	Identifier	s		331057	0					
ANR	331330	Identifier	pos		331057	1					
ANR	331331	PrimaryExpression	'a'		331057	1					
ANR	331332	ExpressionStatement	carry = 1	2179:4:56840:56847	331057	1	True				
ANR	331333	AssignmentExpression	carry = 1		331057	0		=			
ANR	331334	Identifier	carry		331057	0					
ANR	331335	PrimaryExpression	1		331057	1					
ANR	331336	ElseStatement	else		331057	0					
ANR	331337	CompoundStatement		37:10:871:871	331057	0					
ANR	331338	ExpressionStatement	s [ pos ] ++	2181:4:56865:56873	331057	0	True				
ANR	331339	PostIncDecOperationExpression	s [ pos ] ++		331057	0					
ANR	331340	ArrayIndexing	s [ pos ]		331057	0					
ANR	331341	Identifier	s		331057	0					
ANR	331342	Identifier	pos		331057	1					
ANR	331343	IncDec	++		331057	1					
ANR	331344	ExpressionStatement	carry = 0	2182:4:56879:56886	331057	1	True				
ANR	331345	AssignmentExpression	carry = 0		331057	0		=			
ANR	331346	Identifier	carry		331057	0					
ANR	331347	PrimaryExpression	0		331057	1					
ANR	331348	ExpressionStatement	last = LOWER_CASE	2184:3:56896:56911	331057	1	True				
ANR	331349	AssignmentExpression	last = LOWER_CASE		331057	0		=			
ANR	331350	Identifier	last		331057	0					
ANR	331351	Identifier	LOWER_CASE		331057	1					
ANR	331352	ElseStatement	else		331057	0					
ANR	331353	IfStatement	if ( ch >= 'A' && ch <= 'Z' )		331057	0					
ANR	331354	Condition	ch >= 'A' && ch <= 'Z'	2185:13:56926:56947	331057	0	True				
ANR	331355	AndExpression	ch >= 'A' && ch <= 'Z'		331057	0		&&			
ANR	331356	RelationalExpression	ch >= 'A'		331057	0		>=			
ANR	331357	Identifier	ch		331057	0					
ANR	331358	PrimaryExpression	'A'		331057	1					
ANR	331359	RelationalExpression	ch <= 'Z'		331057	1		<=			
ANR	331360	Identifier	ch		331057	0					
ANR	331361	PrimaryExpression	'Z'		331057	1					
ANR	331362	CompoundStatement		42:37:962:962	331057	1					
ANR	331363	IfStatement	if ( ch == 'Z' )		331057	0					
ANR	331364	Condition	ch == 'Z'	2186:7:56959:56967	331057	0	True				
ANR	331365	EqualityExpression	ch == 'Z'		331057	0		==			
ANR	331366	Identifier	ch		331057	0					
ANR	331367	PrimaryExpression	'Z'		331057	1					
ANR	331368	CompoundStatement		43:18:982:982	331057	1					
ANR	331369	ExpressionStatement	s [ pos ] = 'A'	2187:4:56976:56988	331057	0	True				
ANR	331370	AssignmentExpression	s [ pos ] = 'A'		331057	0		=			
ANR	331371	ArrayIndexing	s [ pos ]		331057	0					
ANR	331372	Identifier	s		331057	0					
ANR	331373	Identifier	pos		331057	1					
ANR	331374	PrimaryExpression	'A'		331057	1					
ANR	331375	ExpressionStatement	carry = 1	2188:4:56994:57001	331057	1	True				
ANR	331376	AssignmentExpression	carry = 1		331057	0		=			
ANR	331377	Identifier	carry		331057	0					
ANR	331378	PrimaryExpression	1		331057	1					
ANR	331379	ElseStatement	else		331057	0					
ANR	331380	CompoundStatement		46:10:1025:1025	331057	0					
ANR	331381	ExpressionStatement	s [ pos ] ++	2190:4:57019:57027	331057	0	True				
ANR	331382	PostIncDecOperationExpression	s [ pos ] ++		331057	0					
ANR	331383	ArrayIndexing	s [ pos ]		331057	0					
ANR	331384	Identifier	s		331057	0					
ANR	331385	Identifier	pos		331057	1					
ANR	331386	IncDec	++		331057	1					
ANR	331387	ExpressionStatement	carry = 0	2191:4:57033:57040	331057	1	True				
ANR	331388	AssignmentExpression	carry = 0		331057	0		=			
ANR	331389	Identifier	carry		331057	0					
ANR	331390	PrimaryExpression	0		331057	1					
ANR	331391	ExpressionStatement	last = UPPER_CASE	2193:3:57050:57065	331057	1	True				
ANR	331392	AssignmentExpression	last = UPPER_CASE		331057	0		=			
ANR	331393	Identifier	last		331057	0					
ANR	331394	Identifier	UPPER_CASE		331057	1					
ANR	331395	ElseStatement	else		331057	0					
ANR	331396	IfStatement	if ( ch >= '0' && ch <= '9' )		331057	0					
ANR	331397	Condition	ch >= '0' && ch <= '9'	2194:13:57080:57101	331057	0	True				
ANR	331398	AndExpression	ch >= '0' && ch <= '9'		331057	0		&&			
ANR	331399	RelationalExpression	ch >= '0'		331057	0		>=			
ANR	331400	Identifier	ch		331057	0					
ANR	331401	PrimaryExpression	'0'		331057	1					
ANR	331402	RelationalExpression	ch <= '9'		331057	1		<=			
ANR	331403	Identifier	ch		331057	0					
ANR	331404	PrimaryExpression	'9'		331057	1					
ANR	331405	CompoundStatement		51:37:1116:1116	331057	1					
ANR	331406	IfStatement	if ( ch == '9' )		331057	0					
ANR	331407	Condition	ch == '9'	2195:7:57113:57121	331057	0	True				
ANR	331408	EqualityExpression	ch == '9'		331057	0		==			
ANR	331409	Identifier	ch		331057	0					
ANR	331410	PrimaryExpression	'9'		331057	1					
ANR	331411	CompoundStatement		52:18:1136:1136	331057	1					
ANR	331412	ExpressionStatement	s [ pos ] = '0'	2196:4:57130:57142	331057	0	True				
ANR	331413	AssignmentExpression	s [ pos ] = '0'		331057	0		=			
ANR	331414	ArrayIndexing	s [ pos ]		331057	0					
ANR	331415	Identifier	s		331057	0					
ANR	331416	Identifier	pos		331057	1					
ANR	331417	PrimaryExpression	'0'		331057	1					
ANR	331418	ExpressionStatement	carry = 1	2197:4:57148:57155	331057	1	True				
ANR	331419	AssignmentExpression	carry = 1		331057	0		=			
ANR	331420	Identifier	carry		331057	0					
ANR	331421	PrimaryExpression	1		331057	1					
ANR	331422	ElseStatement	else		331057	0					
ANR	331423	CompoundStatement		55:10:1179:1179	331057	0					
ANR	331424	ExpressionStatement	s [ pos ] ++	2199:4:57173:57181	331057	0	True				
ANR	331425	PostIncDecOperationExpression	s [ pos ] ++		331057	0					
ANR	331426	ArrayIndexing	s [ pos ]		331057	0					
ANR	331427	Identifier	s		331057	0					
ANR	331428	Identifier	pos		331057	1					
ANR	331429	IncDec	++		331057	1					
ANR	331430	ExpressionStatement	carry = 0	2200:4:57187:57194	331057	1	True				
ANR	331431	AssignmentExpression	carry = 0		331057	0		=			
ANR	331432	Identifier	carry		331057	0					
ANR	331433	PrimaryExpression	0		331057	1					
ANR	331434	ExpressionStatement	last = NUMERIC	2202:3:57204:57218	331057	1	True				
ANR	331435	AssignmentExpression	last = NUMERIC		331057	0		=			
ANR	331436	Identifier	last		331057	0					
ANR	331437	Identifier	NUMERIC		331057	1					
ANR	331438	ElseStatement	else		331057	0					
ANR	331439	CompoundStatement		60:9:1241:1241	331057	0					
ANR	331440	ExpressionStatement	carry = 0	2204:3:57234:57241	331057	0	True				
ANR	331441	AssignmentExpression	carry = 0		331057	0		=			
ANR	331442	Identifier	carry		331057	0					
ANR	331443	PrimaryExpression	0		331057	1					
ANR	331444	BreakStatement	break ;	2205:3:57246:57251	331057	1	True				
ANR	331445	IfStatement	if ( carry == 0 )		331057	2					
ANR	331446	Condition	carry == 0	2207:6:57263:57272	331057	0	True				
ANR	331447	EqualityExpression	carry == 0		331057	0		==			
ANR	331448	Identifier	carry		331057	0					
ANR	331449	PrimaryExpression	0		331057	1					
ANR	331450	CompoundStatement		64:18:1287:1287	331057	1					
ANR	331451	BreakStatement	break ;	2208:3:57280:57285	331057	0	True				
ANR	331452	Condition	pos -- > 0	2210:10:57301:57309	331057	1	True				
ANR	331453	RelationalExpression	pos -- > 0		331057	0		>			
ANR	331454	PostIncDecOperationExpression	pos --		331057	0					
ANR	331455	Identifier	pos		331057	0					
ANR	331456	IncDec	--		331057	1					
ANR	331457	PrimaryExpression	0		331057	1					
ANR	331458	IfStatement	if ( carry )		331057	10					
ANR	331459	Condition	carry	2212:5:57319:57323	331057	0	True				
ANR	331460	Identifier	carry		331057	0					
ANR	331461	CompoundStatement		69:12:1338:1338	331057	1					
ANR	331462	ExpressionStatement	"t = zend_string_alloc ( Z_STRLEN_P ( str ) + 1 , 0 )"	2213:2:57330:57373	331057	0	True				
ANR	331463	AssignmentExpression	"t = zend_string_alloc ( Z_STRLEN_P ( str ) + 1 , 0 )"		331057	0		=			
ANR	331464	Identifier	t		331057	0					
ANR	331465	CallExpression	"zend_string_alloc ( Z_STRLEN_P ( str ) + 1 , 0 )"		331057	1					
ANR	331466	Callee	zend_string_alloc		331057	0					
ANR	331467	Identifier	zend_string_alloc		331057	0					
ANR	331468	ArgumentList	Z_STRLEN_P ( str ) + 1		331057	1					
ANR	331469	Argument	Z_STRLEN_P ( str ) + 1		331057	0					
ANR	331470	AdditiveExpression	Z_STRLEN_P ( str ) + 1		331057	0		+			
ANR	331471	CallExpression	Z_STRLEN_P ( str )		331057	0					
ANR	331472	Callee	Z_STRLEN_P		331057	0					
ANR	331473	Identifier	Z_STRLEN_P		331057	0					
ANR	331474	ArgumentList	str		331057	1					
ANR	331475	Argument	str		331057	0					
ANR	331476	Identifier	str		331057	0					
ANR	331477	PrimaryExpression	1		331057	1					
ANR	331478	Argument	0		331057	1					
ANR	331479	PrimaryExpression	0		331057	0					
ANR	331480	ExpressionStatement	"memcpy ( ZSTR_VAL ( t ) + 1 , Z_STRVAL_P ( str ) , Z_STRLEN_P ( str ) )"	2214:2:57377:57434	331057	1	True				
ANR	331481	CallExpression	"memcpy ( ZSTR_VAL ( t ) + 1 , Z_STRVAL_P ( str ) , Z_STRLEN_P ( str ) )"		331057	0					
ANR	331482	Callee	memcpy		331057	0					
ANR	331483	Identifier	memcpy		331057	0					
ANR	331484	ArgumentList	ZSTR_VAL ( t ) + 1		331057	1					
ANR	331485	Argument	ZSTR_VAL ( t ) + 1		331057	0					
ANR	331486	AdditiveExpression	ZSTR_VAL ( t ) + 1		331057	0		+			
ANR	331487	CallExpression	ZSTR_VAL ( t )		331057	0					
ANR	331488	Callee	ZSTR_VAL		331057	0					
ANR	331489	Identifier	ZSTR_VAL		331057	0					
ANR	331490	ArgumentList	t		331057	1					
ANR	331491	Argument	t		331057	0					
ANR	331492	Identifier	t		331057	0					
ANR	331493	PrimaryExpression	1		331057	1					
ANR	331494	Argument	Z_STRVAL_P ( str )		331057	1					
ANR	331495	CallExpression	Z_STRVAL_P ( str )		331057	0					
ANR	331496	Callee	Z_STRVAL_P		331057	0					
ANR	331497	Identifier	Z_STRVAL_P		331057	0					
ANR	331498	ArgumentList	str		331057	1					
ANR	331499	Argument	str		331057	0					
ANR	331500	Identifier	str		331057	0					
ANR	331501	Argument	Z_STRLEN_P ( str )		331057	2					
ANR	331502	CallExpression	Z_STRLEN_P ( str )		331057	0					
ANR	331503	Callee	Z_STRLEN_P		331057	0					
ANR	331504	Identifier	Z_STRLEN_P		331057	0					
ANR	331505	ArgumentList	str		331057	1					
ANR	331506	Argument	str		331057	0					
ANR	331507	Identifier	str		331057	0					
ANR	331508	ExpressionStatement	ZSTR_VAL ( t ) [ Z_STRLEN_P ( str ) + 1 ] = '\\0'	2215:2:57438:57477	331057	2	True				
ANR	331509	AssignmentExpression	ZSTR_VAL ( t ) [ Z_STRLEN_P ( str ) + 1 ] = '\\0'		331057	0		=			
ANR	331510	ArrayIndexing	ZSTR_VAL ( t ) [ Z_STRLEN_P ( str ) + 1 ]		331057	0					
ANR	331511	CallExpression	ZSTR_VAL ( t )		331057	0					
ANR	331512	Callee	ZSTR_VAL		331057	0					
ANR	331513	Identifier	ZSTR_VAL		331057	0					
ANR	331514	ArgumentList	t		331057	1					
ANR	331515	Argument	t		331057	0					
ANR	331516	Identifier	t		331057	0					
ANR	331517	AdditiveExpression	Z_STRLEN_P ( str ) + 1		331057	1		+			
ANR	331518	CallExpression	Z_STRLEN_P ( str )		331057	0					
ANR	331519	Callee	Z_STRLEN_P		331057	0					
ANR	331520	Identifier	Z_STRLEN_P		331057	0					
ANR	331521	ArgumentList	str		331057	1					
ANR	331522	Argument	str		331057	0					
ANR	331523	Identifier	str		331057	0					
ANR	331524	PrimaryExpression	1		331057	1					
ANR	331525	PrimaryExpression	'\\0'		331057	1					
ANR	331526	SwitchStatement	switch ( last )		331057	3					
ANR	331527	Condition	last	2216:10:57489:57492	331057	0	True				
ANR	331528	Identifier	last		331057	0					
ANR	331529	CompoundStatement		73:16:1507:1507	331057	1					
ANR	331530	Label	case NUMERIC :	2217:3:57500:57512	331057	0	True				
ANR	331531	Identifier	NUMERIC		331057	0					
ANR	331532	ExpressionStatement	ZSTR_VAL ( t ) [ 0 ] = '1'	2218:4:57518:57538	331057	1	True				
ANR	331533	AssignmentExpression	ZSTR_VAL ( t ) [ 0 ] = '1'		331057	0		=			
ANR	331534	ArrayIndexing	ZSTR_VAL ( t ) [ 0 ]		331057	0					
ANR	331535	CallExpression	ZSTR_VAL ( t )		331057	0					
ANR	331536	Callee	ZSTR_VAL		331057	0					
ANR	331537	Identifier	ZSTR_VAL		331057	0					
ANR	331538	ArgumentList	t		331057	1					
ANR	331539	Argument	t		331057	0					
ANR	331540	Identifier	t		331057	0					
ANR	331541	PrimaryExpression	0		331057	1					
ANR	331542	PrimaryExpression	'1'		331057	1					
ANR	331543	BreakStatement	break ;	2219:4:57544:57549	331057	2	True				
ANR	331544	Label	case UPPER_CASE :	2220:3:57554:57569	331057	3	True				
ANR	331545	Identifier	UPPER_CASE		331057	0					
ANR	331546	ExpressionStatement	ZSTR_VAL ( t ) [ 0 ] = 'A'	2221:4:57575:57595	331057	4	True				
ANR	331547	AssignmentExpression	ZSTR_VAL ( t ) [ 0 ] = 'A'		331057	0		=			
ANR	331548	ArrayIndexing	ZSTR_VAL ( t ) [ 0 ]		331057	0					
ANR	331549	CallExpression	ZSTR_VAL ( t )		331057	0					
ANR	331550	Callee	ZSTR_VAL		331057	0					
ANR	331551	Identifier	ZSTR_VAL		331057	0					
ANR	331552	ArgumentList	t		331057	1					
ANR	331553	Argument	t		331057	0					
ANR	331554	Identifier	t		331057	0					
ANR	331555	PrimaryExpression	0		331057	1					
ANR	331556	PrimaryExpression	'A'		331057	1					
ANR	331557	BreakStatement	break ;	2222:4:57601:57606	331057	5	True				
ANR	331558	Label	case LOWER_CASE :	2223:3:57611:57626	331057	6	True				
ANR	331559	Identifier	LOWER_CASE		331057	0					
ANR	331560	ExpressionStatement	ZSTR_VAL ( t ) [ 0 ] = 'a'	2224:4:57632:57652	331057	7	True				
ANR	331561	AssignmentExpression	ZSTR_VAL ( t ) [ 0 ] = 'a'		331057	0		=			
ANR	331562	ArrayIndexing	ZSTR_VAL ( t ) [ 0 ]		331057	0					
ANR	331563	CallExpression	ZSTR_VAL ( t )		331057	0					
ANR	331564	Callee	ZSTR_VAL		331057	0					
ANR	331565	Identifier	ZSTR_VAL		331057	0					
ANR	331566	ArgumentList	t		331057	1					
ANR	331567	Argument	t		331057	0					
ANR	331568	Identifier	t		331057	0					
ANR	331569	PrimaryExpression	0		331057	1					
ANR	331570	PrimaryExpression	'a'		331057	1					
ANR	331571	BreakStatement	break ;	2225:4:57658:57663	331057	8	True				
ANR	331572	ExpressionStatement	zend_string_free ( Z_STR_P ( str ) )	2227:2:57671:57701	331057	4	True				
ANR	331573	CallExpression	zend_string_free ( Z_STR_P ( str ) )		331057	0					
ANR	331574	Callee	zend_string_free		331057	0					
ANR	331575	Identifier	zend_string_free		331057	0					
ANR	331576	ArgumentList	Z_STR_P ( str )		331057	1					
ANR	331577	Argument	Z_STR_P ( str )		331057	0					
ANR	331578	CallExpression	Z_STR_P ( str )		331057	0					
ANR	331579	Callee	Z_STR_P		331057	0					
ANR	331580	Identifier	Z_STR_P		331057	0					
ANR	331581	ArgumentList	str		331057	1					
ANR	331582	Argument	str		331057	0					
ANR	331583	Identifier	str		331057	0					
ANR	331584	ExpressionStatement	"ZVAL_NEW_STR ( str , t )"	2228:2:57705:57725	331057	5	True				
ANR	331585	CallExpression	"ZVAL_NEW_STR ( str , t )"		331057	0					
ANR	331586	Callee	ZVAL_NEW_STR		331057	0					
ANR	331587	Identifier	ZVAL_NEW_STR		331057	0					
ANR	331588	ArgumentList	str		331057	1					
ANR	331589	Argument	str		331057	0					
ANR	331590	Identifier	str		331057	0					
ANR	331591	Argument	t		331057	1					
ANR	331592	Identifier	t		331057	0					
ANR	331593	ReturnType	static void ZEND_FASTCALL		331057	1					
ANR	331594	Identifier	increment_string		331057	2					
ANR	331595	ParameterList	zval * str		331057	3					
ANR	331596	Parameter	zval * str	2143:43:55966:55974	331057	0	True				
ANR	331597	ParameterType	zval *		331057	0					
ANR	331598	Identifier	str		331057	1					
ANR	331599	CFGEntryNode	ENTRY		331057		True				
ANR	331600	CFGExitNode	EXIT		331057		True				
ANR	331601	Symbol	* CG		331057						
ANR	331602	Symbol	LOWER_CASE		331057						
ANR	331603	Symbol	Z_REFCOUNT_P		331057						
ANR	331604	Symbol	one_char_string		331057						
ANR	331605	Symbol	zend_string_init		331057						
ANR	331606	Symbol	IS_STRING_EX		331057						
ANR	331607	Symbol	pos		331057						
ANR	331608	Symbol	Z_STRLEN_P		331057						
ANR	331609	Symbol	* ZSTR_VAL		331057						
ANR	331610	Symbol	NUMERIC		331057						
ANR	331611	Symbol	zend_string_alloc		331057						
ANR	331612	Symbol	last		331057						
ANR	331613	Symbol	CG		331057						
ANR	331614	Symbol	ch		331057						
ANR	331615	Symbol	* Z_STRLEN_P		331057						
ANR	331616	Symbol	Z_STRVAL_P		331057						
ANR	331617	Symbol	Z_TYPE_INFO_P		331057						
ANR	331618	Symbol	ZSTR_VAL		331057						
ANR	331619	Symbol	str		331057						
ANR	331620	Symbol	s		331057						
ANR	331621	Symbol	t		331057						
ANR	331622	Symbol	UPPER_CASE		331057						
ANR	331623	Symbol	carry		331057						
ANR	331624	Symbol	Z_STR_P		331057						
ANR	331625	Symbol	Z_REFCOUNTED_P		331057						
ANR	331626	Symbol	* s		331057						
ANR	331627	Symbol	* pos		331057						
ANR	331628	Function	increment_function	2233:0:57743:59312							
ANR	331629	FunctionDef	increment_function (zval * op1)		331628	0					
ANR	331630	CompoundStatement		2234:0:57810:59312	331628	0					
ANR	331631	Label	try_again :	2235:0:57812:57821	331628	0	True				
ANR	331632	Identifier	try_again		331628	0					
ANR	331633	SwitchStatement	switch ( Z_TYPE_P ( op1 ) )		331628	1					
ANR	331634	Condition	Z_TYPE_P ( op1 )	2236:9:57832:57844	331628	0	True				
ANR	331635	CallExpression	Z_TYPE_P ( op1 )		331628	0					
ANR	331636	Callee	Z_TYPE_P		331628	0					
ANR	331637	Identifier	Z_TYPE_P		331628	0					
ANR	331638	ArgumentList	op1		331628	1					
ANR	331639	Argument	op1		331628	0					
ANR	331640	Identifier	op1		331628	0					
ANR	331641	CompoundStatement		3:24:36:36	331628	1					
ANR	331642	Label	case IS_LONG :	2237:2:57851:57863	331628	0	True				
ANR	331643	Identifier	IS_LONG		331628	0					
ANR	331644	ExpressionStatement	fast_long_increment_function ( op1 )	2238:3:57868:57901	331628	1	True				
ANR	331645	CallExpression	fast_long_increment_function ( op1 )		331628	0					
ANR	331646	Callee	fast_long_increment_function		331628	0					
ANR	331647	Identifier	fast_long_increment_function		331628	0					
ANR	331648	ArgumentList	op1		331628	1					
ANR	331649	Argument	op1		331628	0					
ANR	331650	Identifier	op1		331628	0					
ANR	331651	BreakStatement	break ;	2239:3:57906:57911	331628	2	True				
ANR	331652	Label	case IS_DOUBLE :	2240:2:57915:57929	331628	3	True				
ANR	331653	Identifier	IS_DOUBLE		331628	0					
ANR	331654	ExpressionStatement	Z_DVAL_P ( op1 ) = Z_DVAL_P ( op1 ) + 1	2241:3:57934:57967	331628	4	True				
ANR	331655	AssignmentExpression	Z_DVAL_P ( op1 ) = Z_DVAL_P ( op1 ) + 1		331628	0		=			
ANR	331656	CallExpression	Z_DVAL_P ( op1 )		331628	0					
ANR	331657	Callee	Z_DVAL_P		331628	0					
ANR	331658	Identifier	Z_DVAL_P		331628	0					
ANR	331659	ArgumentList	op1		331628	1					
ANR	331660	Argument	op1		331628	0					
ANR	331661	Identifier	op1		331628	0					
ANR	331662	AdditiveExpression	Z_DVAL_P ( op1 ) + 1		331628	1		+			
ANR	331663	CallExpression	Z_DVAL_P ( op1 )		331628	0					
ANR	331664	Callee	Z_DVAL_P		331628	0					
ANR	331665	Identifier	Z_DVAL_P		331628	0					
ANR	331666	ArgumentList	op1		331628	1					
ANR	331667	Argument	op1		331628	0					
ANR	331668	Identifier	op1		331628	0					
ANR	331669	PrimaryExpression	1		331628	1					
ANR	331670	BreakStatement	break ;	2242:3:57972:57977	331628	5	True				
ANR	331671	Label	case IS_NULL :	2243:2:57981:57993	331628	6	True				
ANR	331672	Identifier	IS_NULL		331628	0					
ANR	331673	ExpressionStatement	"ZVAL_LONG ( op1 , 1 )"	2244:3:57998:58015	331628	7	True				
ANR	331674	CallExpression	"ZVAL_LONG ( op1 , 1 )"		331628	0					
ANR	331675	Callee	ZVAL_LONG		331628	0					
ANR	331676	Identifier	ZVAL_LONG		331628	0					
ANR	331677	ArgumentList	op1		331628	1					
ANR	331678	Argument	op1		331628	0					
ANR	331679	Identifier	op1		331628	0					
ANR	331680	Argument	1		331628	1					
ANR	331681	PrimaryExpression	1		331628	0					
ANR	331682	BreakStatement	break ;	2245:3:58020:58025	331628	8	True				
ANR	331683	Label	case IS_STRING :	2246:2:58029:58043	331628	9	True				
ANR	331684	Identifier	IS_STRING		331628	0					
ANR	331685	CompoundStatement		15:4:260:271	331628	10					
ANR	331686	IdentifierDeclStatement	zend_long lval ;	2247:4:58051:58065	331628	0	True				
ANR	331687	IdentifierDecl	lval		331628	0					
ANR	331688	IdentifierDeclType	zend_long		331628	0					
ANR	331689	Identifier	lval		331628	1					
ANR	331690	IdentifierDeclStatement	double dval ;	2248:4:58071:58082	331628	1	True				
ANR	331691	IdentifierDecl	dval		331628	0					
ANR	331692	IdentifierDeclType	double		331628	0					
ANR	331693	Identifier	dval		331628	1					
ANR	331694	SwitchStatement	"switch ( is_numeric_string ( Z_STRVAL_P ( op1 ) , Z_STRLEN_P ( op1 ) , & lval , & dval , 0 ) )"		331628	2					
ANR	331695	Condition	"is_numeric_string ( Z_STRVAL_P ( op1 ) , Z_STRLEN_P ( op1 ) , & lval , & dval , 0 )"	2250:12:58097:58164	331628	0	True				
ANR	331696	CallExpression	"is_numeric_string ( Z_STRVAL_P ( op1 ) , Z_STRLEN_P ( op1 ) , & lval , & dval , 0 )"		331628	0					
ANR	331697	Callee	is_numeric_string		331628	0					
ANR	331698	Identifier	is_numeric_string		331628	0					
ANR	331699	ArgumentList	Z_STRVAL_P ( op1 )		331628	1					
ANR	331700	Argument	Z_STRVAL_P ( op1 )		331628	0					
ANR	331701	CallExpression	Z_STRVAL_P ( op1 )		331628	0					
ANR	331702	Callee	Z_STRVAL_P		331628	0					
ANR	331703	Identifier	Z_STRVAL_P		331628	0					
ANR	331704	ArgumentList	op1		331628	1					
ANR	331705	Argument	op1		331628	0					
ANR	331706	Identifier	op1		331628	0					
ANR	331707	Argument	Z_STRLEN_P ( op1 )		331628	1					
ANR	331708	CallExpression	Z_STRLEN_P ( op1 )		331628	0					
ANR	331709	Callee	Z_STRLEN_P		331628	0					
ANR	331710	Identifier	Z_STRLEN_P		331628	0					
ANR	331711	ArgumentList	op1		331628	1					
ANR	331712	Argument	op1		331628	0					
ANR	331713	Identifier	op1		331628	0					
ANR	331714	Argument	& lval		331628	2					
ANR	331715	UnaryOperationExpression	& lval		331628	0					
ANR	331716	UnaryOperator	&		331628	0					
ANR	331717	Identifier	lval		331628	1					
ANR	331718	Argument	& dval		331628	3					
ANR	331719	UnaryOperationExpression	& dval		331628	0					
ANR	331720	UnaryOperator	&		331628	0					
ANR	331721	Identifier	dval		331628	1					
ANR	331722	Argument	0		331628	4					
ANR	331723	PrimaryExpression	0		331628	0					
ANR	331724	CompoundStatement		17:82:356:356	331628	1					
ANR	331725	Label	case IS_LONG :	2251:5:58174:58186	331628	0	True				
ANR	331726	Identifier	IS_LONG		331628	0					
ANR	331727	ExpressionStatement	zend_string_release ( Z_STR_P ( op1 ) )	2252:6:58194:58227	331628	1	True				
ANR	331728	CallExpression	zend_string_release ( Z_STR_P ( op1 ) )		331628	0					
ANR	331729	Callee	zend_string_release		331628	0					
ANR	331730	Identifier	zend_string_release		331628	0					
ANR	331731	ArgumentList	Z_STR_P ( op1 )		331628	1					
ANR	331732	Argument	Z_STR_P ( op1 )		331628	0					
ANR	331733	CallExpression	Z_STR_P ( op1 )		331628	0					
ANR	331734	Callee	Z_STR_P		331628	0					
ANR	331735	Identifier	Z_STR_P		331628	0					
ANR	331736	ArgumentList	op1		331628	1					
ANR	331737	Argument	op1		331628	0					
ANR	331738	Identifier	op1		331628	0					
ANR	331739	IfStatement	if ( lval == ZEND_LONG_MAX )		331628	2					
ANR	331740	Condition	lval == ZEND_LONG_MAX	2253:10:58239:58259	331628	0	True				
ANR	331741	EqualityExpression	lval == ZEND_LONG_MAX		331628	0		==			
ANR	331742	Identifier	lval		331628	0					
ANR	331743	Identifier	ZEND_LONG_MAX		331628	1					
ANR	331744	CompoundStatement		22:7:490:513	331628	1					
ANR	331745	IdentifierDeclStatement	double d = ( double ) lval ;	2255:7:58301:58324	331628	0	True				
ANR	331746	IdentifierDecl	d = ( double ) lval		331628	0					
ANR	331747	IdentifierDeclType	double		331628	0					
ANR	331748	Identifier	d		331628	1					
ANR	331749	AssignmentExpression	d = ( double ) lval		331628	2		=			
ANR	331750	Identifier	d		331628	0					
ANR	331751	CastExpression	( double ) lval		331628	1					
ANR	331752	CastTarget	double		331628	0					
ANR	331753	Identifier	lval		331628	1					
ANR	331754	ExpressionStatement	"ZVAL_DOUBLE ( op1 , d + 1 )"	2256:7:58333:58354	331628	1	True				
ANR	331755	CallExpression	"ZVAL_DOUBLE ( op1 , d + 1 )"		331628	0					
ANR	331756	Callee	ZVAL_DOUBLE		331628	0					
ANR	331757	Identifier	ZVAL_DOUBLE		331628	0					
ANR	331758	ArgumentList	op1		331628	1					
ANR	331759	Argument	op1		331628	0					
ANR	331760	Identifier	op1		331628	0					
ANR	331761	Argument	d + 1		331628	1					
ANR	331762	AdditiveExpression	d + 1		331628	0		+			
ANR	331763	Identifier	d		331628	0					
ANR	331764	PrimaryExpression	1		331628	1					
ANR	331765	ElseStatement	else		331628	0					
ANR	331766	CompoundStatement		24:13:558:558	331628	0					
ANR	331767	ExpressionStatement	"ZVAL_LONG ( op1 , lval + 1 )"	2258:7:58378:58400	331628	0	True				
ANR	331768	CallExpression	"ZVAL_LONG ( op1 , lval + 1 )"		331628	0					
ANR	331769	Callee	ZVAL_LONG		331628	0					
ANR	331770	Identifier	ZVAL_LONG		331628	0					
ANR	331771	ArgumentList	op1		331628	1					
ANR	331772	Argument	op1		331628	0					
ANR	331773	Identifier	op1		331628	0					
ANR	331774	Argument	lval + 1		331628	1					
ANR	331775	AdditiveExpression	lval + 1		331628	0		+			
ANR	331776	Identifier	lval		331628	0					
ANR	331777	PrimaryExpression	1		331628	1					
ANR	331778	BreakStatement	break ;	2260:6:58416:58421	331628	3	True				
ANR	331779	Label	case IS_DOUBLE :	2261:5:58428:58442	331628	4	True				
ANR	331780	Identifier	IS_DOUBLE		331628	0					
ANR	331781	ExpressionStatement	zend_string_release ( Z_STR_P ( op1 ) )	2262:6:58450:58483	331628	5	True				
ANR	331782	CallExpression	zend_string_release ( Z_STR_P ( op1 ) )		331628	0					
ANR	331783	Callee	zend_string_release		331628	0					
ANR	331784	Identifier	zend_string_release		331628	0					
ANR	331785	ArgumentList	Z_STR_P ( op1 )		331628	1					
ANR	331786	Argument	Z_STR_P ( op1 )		331628	0					
ANR	331787	CallExpression	Z_STR_P ( op1 )		331628	0					
ANR	331788	Callee	Z_STR_P		331628	0					
ANR	331789	Identifier	Z_STR_P		331628	0					
ANR	331790	ArgumentList	op1		331628	1					
ANR	331791	Argument	op1		331628	0					
ANR	331792	Identifier	op1		331628	0					
ANR	331793	ExpressionStatement	"ZVAL_DOUBLE ( op1 , dval + 1 )"	2263:6:58491:58515	331628	6	True				
ANR	331794	CallExpression	"ZVAL_DOUBLE ( op1 , dval + 1 )"		331628	0					
ANR	331795	Callee	ZVAL_DOUBLE		331628	0					
ANR	331796	Identifier	ZVAL_DOUBLE		331628	0					
ANR	331797	ArgumentList	op1		331628	1					
ANR	331798	Argument	op1		331628	0					
ANR	331799	Identifier	op1		331628	0					
ANR	331800	Argument	dval + 1		331628	1					
ANR	331801	AdditiveExpression	dval + 1		331628	0		+			
ANR	331802	Identifier	dval		331628	0					
ANR	331803	PrimaryExpression	1		331628	1					
ANR	331804	BreakStatement	break ;	2264:6:58523:58528	331628	7	True				
ANR	331805	Label	default :	2265:5:58535:58542	331628	8	True				
ANR	331806	Identifier	default		331628	0					
ANR	331807	ExpressionStatement	increment_string ( op1 )	2267:6:58590:58611	331628	9	True				
ANR	331808	CallExpression	increment_string ( op1 )		331628	0					
ANR	331809	Callee	increment_string		331628	0					
ANR	331810	Identifier	increment_string		331628	0					
ANR	331811	ArgumentList	op1		331628	1					
ANR	331812	Argument	op1		331628	0					
ANR	331813	Identifier	op1		331628	0					
ANR	331814	BreakStatement	break ;	2268:6:58619:58624	331628	10	True				
ANR	331815	BreakStatement	break ;	2271:3:58640:58645	331628	11	True				
ANR	331816	Label	case IS_OBJECT :	2272:2:58649:58663	331628	12	True				
ANR	331817	Identifier	IS_OBJECT		331628	0					
ANR	331818	IfStatement	"if ( Z_OBJ_HANDLER_P ( op1 , get ) && Z_OBJ_HANDLER_P ( op1 , set ) )"		331628	13					
ANR	331819	Condition	"Z_OBJ_HANDLER_P ( op1 , get ) && Z_OBJ_HANDLER_P ( op1 , set )"	2273:7:58672:58731	331628	0	True				
ANR	331820	AndExpression	"Z_OBJ_HANDLER_P ( op1 , get ) && Z_OBJ_HANDLER_P ( op1 , set )"		331628	0		&&			
ANR	331821	CallExpression	"Z_OBJ_HANDLER_P ( op1 , get )"		331628	0					
ANR	331822	Callee	Z_OBJ_HANDLER_P		331628	0					
ANR	331823	Identifier	Z_OBJ_HANDLER_P		331628	0					
ANR	331824	ArgumentList	op1		331628	1					
ANR	331825	Argument	op1		331628	0					
ANR	331826	Identifier	op1		331628	0					
ANR	331827	Argument	get		331628	1					
ANR	331828	Identifier	get		331628	0					
ANR	331829	CallExpression	"Z_OBJ_HANDLER_P ( op1 , set )"		331628	1					
ANR	331830	Callee	Z_OBJ_HANDLER_P		331628	0					
ANR	331831	Identifier	Z_OBJ_HANDLER_P		331628	0					
ANR	331832	ArgumentList	op1		331628	1					
ANR	331833	Argument	op1		331628	0					
ANR	331834	Identifier	op1		331628	0					
ANR	331835	Argument	set		331628	1					
ANR	331836	Identifier	set		331628	0					
ANR	331837	CompoundStatement		44:4:965:974	331628	1					
ANR	331838	IdentifierDeclStatement	zval rv ;	2276:4:58763:58770	331628	0	True				
ANR	331839	IdentifierDecl	rv		331628	0					
ANR	331840	IdentifierDeclType	zval		331628	0					
ANR	331841	Identifier	rv		331628	1					
ANR	331842	IdentifierDeclStatement	zval * val ;	2277:4:58776:58785	331628	1	True				
ANR	331843	IdentifierDecl	* val		331628	0					
ANR	331844	IdentifierDeclType	zval *		331628	0					
ANR	331845	Identifier	val		331628	1					
ANR	331846	ExpressionStatement	"val = Z_OBJ_HANDLER_P ( op1 , get ) ( op1 , & rv )"	2279:4:58792:58833	331628	2	True				
ANR	331847	AssignmentExpression	"val = Z_OBJ_HANDLER_P ( op1 , get ) ( op1 , & rv )"		331628	0		=			
ANR	331848	Identifier	val		331628	0					
ANR	331849	CallExpression	"Z_OBJ_HANDLER_P ( op1 , get ) ( op1 , & rv )"		331628	1					
ANR	331850	Callee	"Z_OBJ_HANDLER_P ( op1 , get )"		331628	0					
ANR	331851	CallExpression	"Z_OBJ_HANDLER_P ( op1 , get )"		331628	0					
ANR	331852	Callee	Z_OBJ_HANDLER_P		331628	0					
ANR	331853	Identifier	Z_OBJ_HANDLER_P		331628	0					
ANR	331854	ArgumentList	op1		331628	1					
ANR	331855	Argument	op1		331628	0					
ANR	331856	Identifier	op1		331628	0					
ANR	331857	Argument	get		331628	1					
ANR	331858	Identifier	get		331628	0					
ANR	331859	ArgumentList	op1		331628	1					
ANR	331860	Argument	op1		331628	0					
ANR	331861	Identifier	op1		331628	0					
ANR	331862	Argument	& rv		331628	1					
ANR	331863	UnaryOperationExpression	& rv		331628	0					
ANR	331864	UnaryOperator	&		331628	0					
ANR	331865	Identifier	rv		331628	1					
ANR	331866	ExpressionStatement	Z_TRY_ADDREF_P ( val )	2280:4:58839:58858	331628	3	True				
ANR	331867	CallExpression	Z_TRY_ADDREF_P ( val )		331628	0					
ANR	331868	Callee	Z_TRY_ADDREF_P		331628	0					
ANR	331869	Identifier	Z_TRY_ADDREF_P		331628	0					
ANR	331870	ArgumentList	val		331628	1					
ANR	331871	Argument	val		331628	0					
ANR	331872	Identifier	val		331628	0					
ANR	331873	ExpressionStatement	increment_function ( val )	2281:4:58864:58887	331628	4	True				
ANR	331874	CallExpression	increment_function ( val )		331628	0					
ANR	331875	Callee	increment_function		331628	0					
ANR	331876	Identifier	increment_function		331628	0					
ANR	331877	ArgumentList	val		331628	1					
ANR	331878	Argument	val		331628	0					
ANR	331879	Identifier	val		331628	0					
ANR	331880	ExpressionStatement	"Z_OBJ_HANDLER_P ( op1 , set ) ( op1 , val )"	2282:4:58893:58928	331628	5	True				
ANR	331881	CallExpression	"Z_OBJ_HANDLER_P ( op1 , set ) ( op1 , val )"		331628	0					
ANR	331882	Callee	"Z_OBJ_HANDLER_P ( op1 , set )"		331628	0					
ANR	331883	CallExpression	"Z_OBJ_HANDLER_P ( op1 , set )"		331628	0					
ANR	331884	Callee	Z_OBJ_HANDLER_P		331628	0					
ANR	331885	Identifier	Z_OBJ_HANDLER_P		331628	0					
ANR	331886	ArgumentList	op1		331628	1					
ANR	331887	Argument	op1		331628	0					
ANR	331888	Identifier	op1		331628	0					
ANR	331889	Argument	set		331628	1					
ANR	331890	Identifier	set		331628	0					
ANR	331891	ArgumentList	op1		331628	1					
ANR	331892	Argument	op1		331628	0					
ANR	331893	Identifier	op1		331628	0					
ANR	331894	Argument	val		331628	1					
ANR	331895	Identifier	val		331628	0					
ANR	331896	ExpressionStatement	zval_ptr_dtor ( val )	2283:4:58934:58952	331628	6	True				
ANR	331897	CallExpression	zval_ptr_dtor ( val )		331628	0					
ANR	331898	Callee	zval_ptr_dtor		331628	0					
ANR	331899	Identifier	zval_ptr_dtor		331628	0					
ANR	331900	ArgumentList	val		331628	1					
ANR	331901	Argument	val		331628	0					
ANR	331902	Identifier	val		331628	0					
ANR	331903	ElseStatement	else		331628	0					
ANR	331904	IfStatement	"if ( Z_OBJ_HANDLER_P ( op1 , do_operation ) )"		331628	0					
ANR	331905	Condition	"Z_OBJ_HANDLER_P ( op1 , do_operation )"	2284:14:58968:59001	331628	0	True				
ANR	331906	CallExpression	"Z_OBJ_HANDLER_P ( op1 , do_operation )"		331628	0					
ANR	331907	Callee	Z_OBJ_HANDLER_P		331628	0					
ANR	331908	Identifier	Z_OBJ_HANDLER_P		331628	0					
ANR	331909	ArgumentList	op1		331628	1					
ANR	331910	Argument	op1		331628	0					
ANR	331911	Identifier	op1		331628	0					
ANR	331912	Argument	do_operation		331628	1					
ANR	331913	Identifier	do_operation		331628	0					
ANR	331914	CompoundStatement		53:4:1213:1220	331628	1					
ANR	331915	IdentifierDeclStatement	zval op2 ;	2285:4:59010:59018	331628	0	True				
ANR	331916	IdentifierDecl	op2		331628	0					
ANR	331917	IdentifierDeclType	zval		331628	0					
ANR	331918	Identifier	op2		331628	1					
ANR	331919	IdentifierDeclStatement	int res ;	2286:4:59024:59031	331628	1	True				
ANR	331920	IdentifierDecl	res		331628	0					
ANR	331921	IdentifierDeclType	int		331628	0					
ANR	331922	Identifier	res		331628	1					
ANR	331923	ExpressionStatement	"ZVAL_LONG ( & op2 , 1 )"	2288:4:59038:59056	331628	2	True				
ANR	331924	CallExpression	"ZVAL_LONG ( & op2 , 1 )"		331628	0					
ANR	331925	Callee	ZVAL_LONG		331628	0					
ANR	331926	Identifier	ZVAL_LONG		331628	0					
ANR	331927	ArgumentList	& op2		331628	1					
ANR	331928	Argument	& op2		331628	0					
ANR	331929	UnaryOperationExpression	& op2		331628	0					
ANR	331930	UnaryOperator	&		331628	0					
ANR	331931	Identifier	op2		331628	1					
ANR	331932	Argument	1		331628	1					
ANR	331933	PrimaryExpression	1		331628	0					
ANR	331934	ExpressionStatement	"res = Z_OBJ_HANDLER_P ( op1 , do_operation ) ( ZEND_ADD , op1 , op1 , & op2 )"	2289:4:59062:59128	331628	3	True				
ANR	331935	AssignmentExpression	"res = Z_OBJ_HANDLER_P ( op1 , do_operation ) ( ZEND_ADD , op1 , op1 , & op2 )"		331628	0		=			
ANR	331936	Identifier	res		331628	0					
ANR	331937	CallExpression	"Z_OBJ_HANDLER_P ( op1 , do_operation ) ( ZEND_ADD , op1 , op1 , & op2 )"		331628	1					
ANR	331938	Callee	"Z_OBJ_HANDLER_P ( op1 , do_operation )"		331628	0					
ANR	331939	CallExpression	"Z_OBJ_HANDLER_P ( op1 , do_operation )"		331628	0					
ANR	331940	Callee	Z_OBJ_HANDLER_P		331628	0					
ANR	331941	Identifier	Z_OBJ_HANDLER_P		331628	0					
ANR	331942	ArgumentList	op1		331628	1					
ANR	331943	Argument	op1		331628	0					
ANR	331944	Identifier	op1		331628	0					
ANR	331945	Argument	do_operation		331628	1					
ANR	331946	Identifier	do_operation		331628	0					
ANR	331947	ArgumentList	ZEND_ADD		331628	1					
ANR	331948	Argument	ZEND_ADD		331628	0					
ANR	331949	Identifier	ZEND_ADD		331628	0					
ANR	331950	Argument	op1		331628	1					
ANR	331951	Identifier	op1		331628	0					
ANR	331952	Argument	op1		331628	2					
ANR	331953	Identifier	op1		331628	0					
ANR	331954	Argument	& op2		331628	3					
ANR	331955	UnaryOperationExpression	& op2		331628	0					
ANR	331956	UnaryOperator	&		331628	0					
ANR	331957	Identifier	op2		331628	1					
ANR	331958	ExpressionStatement	zval_ptr_dtor ( & op2 )	2290:4:59134:59153	331628	4	True				
ANR	331959	CallExpression	zval_ptr_dtor ( & op2 )		331628	0					
ANR	331960	Callee	zval_ptr_dtor		331628	0					
ANR	331961	Identifier	zval_ptr_dtor		331628	0					
ANR	331962	ArgumentList	& op2		331628	1					
ANR	331963	Argument	& op2		331628	0					
ANR	331964	UnaryOperationExpression	& op2		331628	0					
ANR	331965	UnaryOperator	&		331628	0					
ANR	331966	Identifier	op2		331628	1					
ANR	331967	ReturnStatement	return res ;	2292:4:59160:59170	331628	5	True				
ANR	331968	Identifier	res		331628	0					
ANR	331969	ReturnStatement	return FAILURE ;	2294:3:59180:59194	331628	14	True				
ANR	331970	Identifier	FAILURE		331628	0					
ANR	331971	Label	case IS_REFERENCE :	2295:2:59198:59215	331628	15	True				
ANR	331972	Identifier	IS_REFERENCE		331628	0					
ANR	331973	ExpressionStatement	op1 = Z_REFVAL_P ( op1 )	2296:3:59220:59241	331628	16	True				
ANR	331974	AssignmentExpression	op1 = Z_REFVAL_P ( op1 )		331628	0		=			
ANR	331975	Identifier	op1		331628	0					
ANR	331976	CallExpression	Z_REFVAL_P ( op1 )		331628	1					
ANR	331977	Callee	Z_REFVAL_P		331628	0					
ANR	331978	Identifier	Z_REFVAL_P		331628	0					
ANR	331979	ArgumentList	op1		331628	1					
ANR	331980	Argument	op1		331628	0					
ANR	331981	Identifier	op1		331628	0					
ANR	331982	GotoStatement	goto try_again ;	2297:3:59246:59260	331628	17	True				
ANR	331983	Identifier	try_again		331628	0					
ANR	331984	Label	default :	2298:2:59264:59271	331628	18	True				
ANR	331985	Identifier	default		331628	0					
ANR	331986	ReturnStatement	return FAILURE ;	2299:3:59276:59290	331628	19	True				
ANR	331987	Identifier	FAILURE		331628	0					
ANR	331988	ReturnStatement	return SUCCESS ;	2301:1:59296:59310	331628	2	True				
ANR	331989	Identifier	SUCCESS		331628	0					
ANR	331990	ReturnType	ZEND_API int ZEND_FASTCALL		331628	1					
ANR	331991	Identifier	increment_function		331628	2					
ANR	331992	ParameterList	zval * op1		331628	3					
ANR	331993	Parameter	zval * op1	2233:46:57789:57797	331628	0	True				
ANR	331994	ParameterType	zval *		331628	0					
ANR	331995	Identifier	op1		331628	1					
ANR	331996	CFGEntryNode	ENTRY		331628		True				
ANR	331997	CFGExitNode	EXIT		331628		True				
ANR	331998	Symbol	ZEND_LONG_MAX		331628						
ANR	331999	Symbol	rv		331628						
ANR	332000	Symbol	lval		331628						
ANR	332001	Symbol	& op2		331628						
ANR	332002	Symbol	dval		331628						
ANR	332003	Symbol	get		331628						
ANR	332004	Symbol	Z_STRLEN_P		331628						
ANR	332005	Symbol	Z_OBJ_HANDLER_P		331628						
ANR	332006	Symbol	do_operation		331628						
ANR	332007	Symbol	ZEND_ADD		331628						
ANR	332008	Symbol	val		331628						
ANR	332009	Symbol	res		331628						
ANR	332010	Symbol	& lval		331628						
ANR	332011	Symbol	set		331628						
ANR	332012	Symbol	SUCCESS		331628						
ANR	332013	Symbol	d		331628						
ANR	332014	Symbol	Z_TYPE_P		331628						
ANR	332015	Symbol	Z_STRVAL_P		331628						
ANR	332016	Symbol	FAILURE		331628						
ANR	332017	Symbol	Z_DVAL_P		331628						
ANR	332018	Symbol	& rv		331628						
ANR	332019	Symbol	op2		331628						
ANR	332020	Symbol	op1		331628						
ANR	332021	Symbol	is_numeric_string		331628						
ANR	332022	Symbol	Z_REFVAL_P		331628						
ANR	332023	Symbol	Z_STR_P		331628						
ANR	332024	Symbol	& dval		331628						
ANR	332025	Function	decrement_function	2305:0:59325:60875							
ANR	332026	FunctionDef	decrement_function (zval * op1)		332025	0					
ANR	332027	CompoundStatement		2306:0:59392:60875	332025	0					
ANR	332028	IdentifierDeclStatement	zend_long lval ;	2307:1:59395:59409	332025	0	True				
ANR	332029	IdentifierDecl	lval		332025	0					
ANR	332030	IdentifierDeclType	zend_long		332025	0					
ANR	332031	Identifier	lval		332025	1					
ANR	332032	IdentifierDeclStatement	double dval ;	2308:1:59412:59423	332025	1	True				
ANR	332033	IdentifierDecl	dval		332025	0					
ANR	332034	IdentifierDeclType	double		332025	0					
ANR	332035	Identifier	dval		332025	1					
ANR	332036	Label	try_again :	2310:0:59426:59435	332025	2	True				
ANR	332037	Identifier	try_again		332025	0					
ANR	332038	SwitchStatement	switch ( Z_TYPE_P ( op1 ) )		332025	3					
ANR	332039	Condition	Z_TYPE_P ( op1 )	2311:9:59446:59458	332025	0	True				
ANR	332040	CallExpression	Z_TYPE_P ( op1 )		332025	0					
ANR	332041	Callee	Z_TYPE_P		332025	0					
ANR	332042	Identifier	Z_TYPE_P		332025	0					
ANR	332043	ArgumentList	op1		332025	1					
ANR	332044	Argument	op1		332025	0					
ANR	332045	Identifier	op1		332025	0					
ANR	332046	CompoundStatement		6:24:68:68	332025	1					
ANR	332047	Label	case IS_LONG :	2312:2:59465:59477	332025	0	True				
ANR	332048	Identifier	IS_LONG		332025	0					
ANR	332049	ExpressionStatement	fast_long_decrement_function ( op1 )	2313:3:59482:59515	332025	1	True				
ANR	332050	CallExpression	fast_long_decrement_function ( op1 )		332025	0					
ANR	332051	Callee	fast_long_decrement_function		332025	0					
ANR	332052	Identifier	fast_long_decrement_function		332025	0					
ANR	332053	ArgumentList	op1		332025	1					
ANR	332054	Argument	op1		332025	0					
ANR	332055	Identifier	op1		332025	0					
ANR	332056	BreakStatement	break ;	2314:3:59520:59525	332025	2	True				
ANR	332057	Label	case IS_DOUBLE :	2315:2:59529:59543	332025	3	True				
ANR	332058	Identifier	IS_DOUBLE		332025	0					
ANR	332059	ExpressionStatement	Z_DVAL_P ( op1 ) = Z_DVAL_P ( op1 ) - 1	2316:3:59548:59581	332025	4	True				
ANR	332060	AssignmentExpression	Z_DVAL_P ( op1 ) = Z_DVAL_P ( op1 ) - 1		332025	0		=			
ANR	332061	CallExpression	Z_DVAL_P ( op1 )		332025	0					
ANR	332062	Callee	Z_DVAL_P		332025	0					
ANR	332063	Identifier	Z_DVAL_P		332025	0					
ANR	332064	ArgumentList	op1		332025	1					
ANR	332065	Argument	op1		332025	0					
ANR	332066	Identifier	op1		332025	0					
ANR	332067	AdditiveExpression	Z_DVAL_P ( op1 ) - 1		332025	1		-			
ANR	332068	CallExpression	Z_DVAL_P ( op1 )		332025	0					
ANR	332069	Callee	Z_DVAL_P		332025	0					
ANR	332070	Identifier	Z_DVAL_P		332025	0					
ANR	332071	ArgumentList	op1		332025	1					
ANR	332072	Argument	op1		332025	0					
ANR	332073	Identifier	op1		332025	0					
ANR	332074	PrimaryExpression	1		332025	1					
ANR	332075	BreakStatement	break ;	2317:3:59586:59591	332025	5	True				
ANR	332076	Label	case IS_STRING :	2318:2:59595:59609	332025	6	True				
ANR	332077	Identifier	IS_STRING		332025	0					
ANR	332078	IfStatement	if ( Z_STRLEN_P ( op1 ) == 0 )		332025	7					
ANR	332079	Condition	Z_STRLEN_P ( op1 ) == 0	2319:7:59668:59687	332025	0	True				
ANR	332080	EqualityExpression	Z_STRLEN_P ( op1 ) == 0		332025	0		==			
ANR	332081	CallExpression	Z_STRLEN_P ( op1 )		332025	0					
ANR	332082	Callee	Z_STRLEN_P		332025	0					
ANR	332083	Identifier	Z_STRLEN_P		332025	0					
ANR	332084	ArgumentList	op1		332025	1					
ANR	332085	Argument	op1		332025	0					
ANR	332086	Identifier	op1		332025	0					
ANR	332087	PrimaryExpression	0		332025	1					
ANR	332088	CompoundStatement		14:29:297:297	332025	1					
ANR	332089	ExpressionStatement	zend_string_release ( Z_STR_P ( op1 ) )	2320:4:59716:59749	332025	0	True				
ANR	332090	CallExpression	zend_string_release ( Z_STR_P ( op1 ) )		332025	0					
ANR	332091	Callee	zend_string_release		332025	0					
ANR	332092	Identifier	zend_string_release		332025	0					
ANR	332093	ArgumentList	Z_STR_P ( op1 )		332025	1					
ANR	332094	Argument	Z_STR_P ( op1 )		332025	0					
ANR	332095	CallExpression	Z_STR_P ( op1 )		332025	0					
ANR	332096	Callee	Z_STR_P		332025	0					
ANR	332097	Identifier	Z_STR_P		332025	0					
ANR	332098	ArgumentList	op1		332025	1					
ANR	332099	Argument	op1		332025	0					
ANR	332100	Identifier	op1		332025	0					
ANR	332101	ExpressionStatement	"ZVAL_LONG ( op1 , - 1 )"	2321:4:59755:59773	332025	1	True				
ANR	332102	CallExpression	"ZVAL_LONG ( op1 , - 1 )"		332025	0					
ANR	332103	Callee	ZVAL_LONG		332025	0					
ANR	332104	Identifier	ZVAL_LONG		332025	0					
ANR	332105	ArgumentList	op1		332025	1					
ANR	332106	Argument	op1		332025	0					
ANR	332107	Identifier	op1		332025	0					
ANR	332108	Argument	- 1		332025	1					
ANR	332109	UnaryOperationExpression	- 1		332025	0					
ANR	332110	UnaryOperator	-		332025	0					
ANR	332111	PrimaryExpression	1		332025	1					
ANR	332112	BreakStatement	break ;	2322:4:59779:59784	332025	2	True				
ANR	332113	SwitchStatement	"switch ( is_numeric_string ( Z_STRVAL_P ( op1 ) , Z_STRLEN_P ( op1 ) , & lval , & dval , 0 ) )"		332025	8					
ANR	332114	Condition	"is_numeric_string ( Z_STRVAL_P ( op1 ) , Z_STRLEN_P ( op1 ) , & lval , & dval , 0 )"	2324:11:59802:59869	332025	0	True				
ANR	332115	CallExpression	"is_numeric_string ( Z_STRVAL_P ( op1 ) , Z_STRLEN_P ( op1 ) , & lval , & dval , 0 )"		332025	0					
ANR	332116	Callee	is_numeric_string		332025	0					
ANR	332117	Identifier	is_numeric_string		332025	0					
ANR	332118	ArgumentList	Z_STRVAL_P ( op1 )		332025	1					
ANR	332119	Argument	Z_STRVAL_P ( op1 )		332025	0					
ANR	332120	CallExpression	Z_STRVAL_P ( op1 )		332025	0					
ANR	332121	Callee	Z_STRVAL_P		332025	0					
ANR	332122	Identifier	Z_STRVAL_P		332025	0					
ANR	332123	ArgumentList	op1		332025	1					
ANR	332124	Argument	op1		332025	0					
ANR	332125	Identifier	op1		332025	0					
ANR	332126	Argument	Z_STRLEN_P ( op1 )		332025	1					
ANR	332127	CallExpression	Z_STRLEN_P ( op1 )		332025	0					
ANR	332128	Callee	Z_STRLEN_P		332025	0					
ANR	332129	Identifier	Z_STRLEN_P		332025	0					
ANR	332130	ArgumentList	op1		332025	1					
ANR	332131	Argument	op1		332025	0					
ANR	332132	Identifier	op1		332025	0					
ANR	332133	Argument	& lval		332025	2					
ANR	332134	UnaryOperationExpression	& lval		332025	0					
ANR	332135	UnaryOperator	&		332025	0					
ANR	332136	Identifier	lval		332025	1					
ANR	332137	Argument	& dval		332025	3					
ANR	332138	UnaryOperationExpression	& dval		332025	0					
ANR	332139	UnaryOperator	&		332025	0					
ANR	332140	Identifier	dval		332025	1					
ANR	332141	Argument	0		332025	4					
ANR	332142	PrimaryExpression	0		332025	0					
ANR	332143	CompoundStatement		19:81:479:479	332025	1					
ANR	332144	Label	case IS_LONG :	2325:4:59878:59890	332025	0	True				
ANR	332145	Identifier	IS_LONG		332025	0					
ANR	332146	ExpressionStatement	zend_string_release ( Z_STR_P ( op1 ) )	2326:5:59897:59930	332025	1	True				
ANR	332147	CallExpression	zend_string_release ( Z_STR_P ( op1 ) )		332025	0					
ANR	332148	Callee	zend_string_release		332025	0					
ANR	332149	Identifier	zend_string_release		332025	0					
ANR	332150	ArgumentList	Z_STR_P ( op1 )		332025	1					
ANR	332151	Argument	Z_STR_P ( op1 )		332025	0					
ANR	332152	CallExpression	Z_STR_P ( op1 )		332025	0					
ANR	332153	Callee	Z_STR_P		332025	0					
ANR	332154	Identifier	Z_STR_P		332025	0					
ANR	332155	ArgumentList	op1		332025	1					
ANR	332156	Argument	op1		332025	0					
ANR	332157	Identifier	op1		332025	0					
ANR	332158	IfStatement	if ( lval == ZEND_LONG_MIN )		332025	2					
ANR	332159	Condition	lval == ZEND_LONG_MIN	2327:9:59941:59961	332025	0	True				
ANR	332160	EqualityExpression	lval == ZEND_LONG_MIN		332025	0		==			
ANR	332161	Identifier	lval		332025	0					
ANR	332162	Identifier	ZEND_LONG_MIN		332025	1					
ANR	332163	CompoundStatement		23:6:579:602	332025	1					
ANR	332164	IdentifierDeclStatement	double d = ( double ) lval ;	2328:6:59972:59995	332025	0	True				
ANR	332165	IdentifierDecl	d = ( double ) lval		332025	0					
ANR	332166	IdentifierDeclType	double		332025	0					
ANR	332167	Identifier	d		332025	1					
ANR	332168	AssignmentExpression	d = ( double ) lval		332025	2		=			
ANR	332169	Identifier	d		332025	0					
ANR	332170	CastExpression	( double ) lval		332025	1					
ANR	332171	CastTarget	double		332025	0					
ANR	332172	Identifier	lval		332025	1					
ANR	332173	ExpressionStatement	"ZVAL_DOUBLE ( op1 , d - 1 )"	2329:6:60003:60024	332025	1	True				
ANR	332174	CallExpression	"ZVAL_DOUBLE ( op1 , d - 1 )"		332025	0					
ANR	332175	Callee	ZVAL_DOUBLE		332025	0					
ANR	332176	Identifier	ZVAL_DOUBLE		332025	0					
ANR	332177	ArgumentList	op1		332025	1					
ANR	332178	Argument	op1		332025	0					
ANR	332179	Identifier	op1		332025	0					
ANR	332180	Argument	d - 1		332025	1					
ANR	332181	AdditiveExpression	d - 1		332025	0		-			
ANR	332182	Identifier	d		332025	0					
ANR	332183	PrimaryExpression	1		332025	1					
ANR	332184	ElseStatement	else		332025	0					
ANR	332185	CompoundStatement		25:12:645:645	332025	0					
ANR	332186	ExpressionStatement	"ZVAL_LONG ( op1 , lval - 1 )"	2331:6:60046:60068	332025	0	True				
ANR	332187	CallExpression	"ZVAL_LONG ( op1 , lval - 1 )"		332025	0					
ANR	332188	Callee	ZVAL_LONG		332025	0					
ANR	332189	Identifier	ZVAL_LONG		332025	0					
ANR	332190	ArgumentList	op1		332025	1					
ANR	332191	Argument	op1		332025	0					
ANR	332192	Identifier	op1		332025	0					
ANR	332193	Argument	lval - 1		332025	1					
ANR	332194	AdditiveExpression	lval - 1		332025	0		-			
ANR	332195	Identifier	lval		332025	0					
ANR	332196	PrimaryExpression	1		332025	1					
ANR	332197	BreakStatement	break ;	2333:5:60082:60087	332025	3	True				
ANR	332198	Label	case IS_DOUBLE :	2334:4:60093:60107	332025	4	True				
ANR	332199	Identifier	IS_DOUBLE		332025	0					
ANR	332200	ExpressionStatement	zend_string_release ( Z_STR_P ( op1 ) )	2335:5:60114:60147	332025	5	True				
ANR	332201	CallExpression	zend_string_release ( Z_STR_P ( op1 ) )		332025	0					
ANR	332202	Callee	zend_string_release		332025	0					
ANR	332203	Identifier	zend_string_release		332025	0					
ANR	332204	ArgumentList	Z_STR_P ( op1 )		332025	1					
ANR	332205	Argument	Z_STR_P ( op1 )		332025	0					
ANR	332206	CallExpression	Z_STR_P ( op1 )		332025	0					
ANR	332207	Callee	Z_STR_P		332025	0					
ANR	332208	Identifier	Z_STR_P		332025	0					
ANR	332209	ArgumentList	op1		332025	1					
ANR	332210	Argument	op1		332025	0					
ANR	332211	Identifier	op1		332025	0					
ANR	332212	ExpressionStatement	"ZVAL_DOUBLE ( op1 , dval - 1 )"	2336:5:60154:60180	332025	6	True				
ANR	332213	CallExpression	"ZVAL_DOUBLE ( op1 , dval - 1 )"		332025	0					
ANR	332214	Callee	ZVAL_DOUBLE		332025	0					
ANR	332215	Identifier	ZVAL_DOUBLE		332025	0					
ANR	332216	ArgumentList	op1		332025	1					
ANR	332217	Argument	op1		332025	0					
ANR	332218	Identifier	op1		332025	0					
ANR	332219	Argument	dval - 1		332025	1					
ANR	332220	AdditiveExpression	dval - 1		332025	0		-			
ANR	332221	Identifier	dval		332025	0					
ANR	332222	PrimaryExpression	1		332025	1					
ANR	332223	BreakStatement	break ;	2337:5:60187:60192	332025	7	True				
ANR	332224	BreakStatement	break ;	2339:3:60202:60207	332025	9	True				
ANR	332225	Label	case IS_OBJECT :	2340:2:60211:60225	332025	10	True				
ANR	332226	Identifier	IS_OBJECT		332025	0					
ANR	332227	IfStatement	"if ( Z_OBJ_HANDLER_P ( op1 , get ) && Z_OBJ_HANDLER_P ( op1 , set ) )"		332025	11					
ANR	332228	Condition	"Z_OBJ_HANDLER_P ( op1 , get ) && Z_OBJ_HANDLER_P ( op1 , set )"	2341:7:60234:60293	332025	0	True				
ANR	332229	AndExpression	"Z_OBJ_HANDLER_P ( op1 , get ) && Z_OBJ_HANDLER_P ( op1 , set )"		332025	0		&&			
ANR	332230	CallExpression	"Z_OBJ_HANDLER_P ( op1 , get )"		332025	0					
ANR	332231	Callee	Z_OBJ_HANDLER_P		332025	0					
ANR	332232	Identifier	Z_OBJ_HANDLER_P		332025	0					
ANR	332233	ArgumentList	op1		332025	1					
ANR	332234	Argument	op1		332025	0					
ANR	332235	Identifier	op1		332025	0					
ANR	332236	Argument	get		332025	1					
ANR	332237	Identifier	get		332025	0					
ANR	332238	CallExpression	"Z_OBJ_HANDLER_P ( op1 , set )"		332025	1					
ANR	332239	Callee	Z_OBJ_HANDLER_P		332025	0					
ANR	332240	Identifier	Z_OBJ_HANDLER_P		332025	0					
ANR	332241	ArgumentList	op1		332025	1					
ANR	332242	Argument	op1		332025	0					
ANR	332243	Identifier	op1		332025	0					
ANR	332244	Argument	set		332025	1					
ANR	332245	Identifier	set		332025	0					
ANR	332246	CompoundStatement		40:4:945:954	332025	1					
ANR	332247	IdentifierDeclStatement	zval rv ;	2344:4:60325:60332	332025	0	True				
ANR	332248	IdentifierDecl	rv		332025	0					
ANR	332249	IdentifierDeclType	zval		332025	0					
ANR	332250	Identifier	rv		332025	1					
ANR	332251	IdentifierDeclStatement	zval * val ;	2345:4:60338:60347	332025	1	True				
ANR	332252	IdentifierDecl	* val		332025	0					
ANR	332253	IdentifierDeclType	zval *		332025	0					
ANR	332254	Identifier	val		332025	1					
ANR	332255	ExpressionStatement	"val = Z_OBJ_HANDLER_P ( op1 , get ) ( op1 , & rv )"	2347:4:60354:60395	332025	2	True				
ANR	332256	AssignmentExpression	"val = Z_OBJ_HANDLER_P ( op1 , get ) ( op1 , & rv )"		332025	0		=			
ANR	332257	Identifier	val		332025	0					
ANR	332258	CallExpression	"Z_OBJ_HANDLER_P ( op1 , get ) ( op1 , & rv )"		332025	1					
ANR	332259	Callee	"Z_OBJ_HANDLER_P ( op1 , get )"		332025	0					
ANR	332260	CallExpression	"Z_OBJ_HANDLER_P ( op1 , get )"		332025	0					
ANR	332261	Callee	Z_OBJ_HANDLER_P		332025	0					
ANR	332262	Identifier	Z_OBJ_HANDLER_P		332025	0					
ANR	332263	ArgumentList	op1		332025	1					
ANR	332264	Argument	op1		332025	0					
ANR	332265	Identifier	op1		332025	0					
ANR	332266	Argument	get		332025	1					
ANR	332267	Identifier	get		332025	0					
ANR	332268	ArgumentList	op1		332025	1					
ANR	332269	Argument	op1		332025	0					
ANR	332270	Identifier	op1		332025	0					
ANR	332271	Argument	& rv		332025	1					
ANR	332272	UnaryOperationExpression	& rv		332025	0					
ANR	332273	UnaryOperator	&		332025	0					
ANR	332274	Identifier	rv		332025	1					
ANR	332275	ExpressionStatement	Z_TRY_ADDREF_P ( val )	2348:4:60401:60420	332025	3	True				
ANR	332276	CallExpression	Z_TRY_ADDREF_P ( val )		332025	0					
ANR	332277	Callee	Z_TRY_ADDREF_P		332025	0					
ANR	332278	Identifier	Z_TRY_ADDREF_P		332025	0					
ANR	332279	ArgumentList	val		332025	1					
ANR	332280	Argument	val		332025	0					
ANR	332281	Identifier	val		332025	0					
ANR	332282	ExpressionStatement	decrement_function ( val )	2349:4:60426:60449	332025	4	True				
ANR	332283	CallExpression	decrement_function ( val )		332025	0					
ANR	332284	Callee	decrement_function		332025	0					
ANR	332285	Identifier	decrement_function		332025	0					
ANR	332286	ArgumentList	val		332025	1					
ANR	332287	Argument	val		332025	0					
ANR	332288	Identifier	val		332025	0					
ANR	332289	ExpressionStatement	"Z_OBJ_HANDLER_P ( op1 , set ) ( op1 , val )"	2350:4:60455:60490	332025	5	True				
ANR	332290	CallExpression	"Z_OBJ_HANDLER_P ( op1 , set ) ( op1 , val )"		332025	0					
ANR	332291	Callee	"Z_OBJ_HANDLER_P ( op1 , set )"		332025	0					
ANR	332292	CallExpression	"Z_OBJ_HANDLER_P ( op1 , set )"		332025	0					
ANR	332293	Callee	Z_OBJ_HANDLER_P		332025	0					
ANR	332294	Identifier	Z_OBJ_HANDLER_P		332025	0					
ANR	332295	ArgumentList	op1		332025	1					
ANR	332296	Argument	op1		332025	0					
ANR	332297	Identifier	op1		332025	0					
ANR	332298	Argument	set		332025	1					
ANR	332299	Identifier	set		332025	0					
ANR	332300	ArgumentList	op1		332025	1					
ANR	332301	Argument	op1		332025	0					
ANR	332302	Identifier	op1		332025	0					
ANR	332303	Argument	val		332025	1					
ANR	332304	Identifier	val		332025	0					
ANR	332305	ExpressionStatement	zval_ptr_dtor ( val )	2351:4:60496:60514	332025	6	True				
ANR	332306	CallExpression	zval_ptr_dtor ( val )		332025	0					
ANR	332307	Callee	zval_ptr_dtor		332025	0					
ANR	332308	Identifier	zval_ptr_dtor		332025	0					
ANR	332309	ArgumentList	val		332025	1					
ANR	332310	Argument	val		332025	0					
ANR	332311	Identifier	val		332025	0					
ANR	332312	ElseStatement	else		332025	0					
ANR	332313	IfStatement	"if ( Z_OBJ_HANDLER_P ( op1 , do_operation ) )"		332025	0					
ANR	332314	Condition	"Z_OBJ_HANDLER_P ( op1 , do_operation )"	2352:14:60530:60563	332025	0	True				
ANR	332315	CallExpression	"Z_OBJ_HANDLER_P ( op1 , do_operation )"		332025	0					
ANR	332316	Callee	Z_OBJ_HANDLER_P		332025	0					
ANR	332317	Identifier	Z_OBJ_HANDLER_P		332025	0					
ANR	332318	ArgumentList	op1		332025	1					
ANR	332319	Argument	op1		332025	0					
ANR	332320	Identifier	op1		332025	0					
ANR	332321	Argument	do_operation		332025	1					
ANR	332322	Identifier	do_operation		332025	0					
ANR	332323	CompoundStatement		49:4:1193:1200	332025	1					
ANR	332324	IdentifierDeclStatement	zval op2 ;	2353:4:60572:60580	332025	0	True				
ANR	332325	IdentifierDecl	op2		332025	0					
ANR	332326	IdentifierDeclType	zval		332025	0					
ANR	332327	Identifier	op2		332025	1					
ANR	332328	IdentifierDeclStatement	int res ;	2354:4:60586:60593	332025	1	True				
ANR	332329	IdentifierDecl	res		332025	0					
ANR	332330	IdentifierDeclType	int		332025	0					
ANR	332331	Identifier	res		332025	1					
ANR	332332	ExpressionStatement	"ZVAL_LONG ( & op2 , 1 )"	2356:4:60600:60618	332025	2	True				
ANR	332333	CallExpression	"ZVAL_LONG ( & op2 , 1 )"		332025	0					
ANR	332334	Callee	ZVAL_LONG		332025	0					
ANR	332335	Identifier	ZVAL_LONG		332025	0					
ANR	332336	ArgumentList	& op2		332025	1					
ANR	332337	Argument	& op2		332025	0					
ANR	332338	UnaryOperationExpression	& op2		332025	0					
ANR	332339	UnaryOperator	&		332025	0					
ANR	332340	Identifier	op2		332025	1					
ANR	332341	Argument	1		332025	1					
ANR	332342	PrimaryExpression	1		332025	0					
ANR	332343	ExpressionStatement	"res = Z_OBJ_HANDLER_P ( op1 , do_operation ) ( ZEND_SUB , op1 , op1 , & op2 )"	2357:4:60624:60690	332025	3	True				
ANR	332344	AssignmentExpression	"res = Z_OBJ_HANDLER_P ( op1 , do_operation ) ( ZEND_SUB , op1 , op1 , & op2 )"		332025	0		=			
ANR	332345	Identifier	res		332025	0					
ANR	332346	CallExpression	"Z_OBJ_HANDLER_P ( op1 , do_operation ) ( ZEND_SUB , op1 , op1 , & op2 )"		332025	1					
ANR	332347	Callee	"Z_OBJ_HANDLER_P ( op1 , do_operation )"		332025	0					
ANR	332348	CallExpression	"Z_OBJ_HANDLER_P ( op1 , do_operation )"		332025	0					
ANR	332349	Callee	Z_OBJ_HANDLER_P		332025	0					
ANR	332350	Identifier	Z_OBJ_HANDLER_P		332025	0					
ANR	332351	ArgumentList	op1		332025	1					
ANR	332352	Argument	op1		332025	0					
ANR	332353	Identifier	op1		332025	0					
ANR	332354	Argument	do_operation		332025	1					
ANR	332355	Identifier	do_operation		332025	0					
ANR	332356	ArgumentList	ZEND_SUB		332025	1					
ANR	332357	Argument	ZEND_SUB		332025	0					
ANR	332358	Identifier	ZEND_SUB		332025	0					
ANR	332359	Argument	op1		332025	1					
ANR	332360	Identifier	op1		332025	0					
ANR	332361	Argument	op1		332025	2					
ANR	332362	Identifier	op1		332025	0					
ANR	332363	Argument	& op2		332025	3					
ANR	332364	UnaryOperationExpression	& op2		332025	0					
ANR	332365	UnaryOperator	&		332025	0					
ANR	332366	Identifier	op2		332025	1					
ANR	332367	ExpressionStatement	zval_ptr_dtor ( & op2 )	2358:4:60696:60715	332025	4	True				
ANR	332368	CallExpression	zval_ptr_dtor ( & op2 )		332025	0					
ANR	332369	Callee	zval_ptr_dtor		332025	0					
ANR	332370	Identifier	zval_ptr_dtor		332025	0					
ANR	332371	ArgumentList	& op2		332025	1					
ANR	332372	Argument	& op2		332025	0					
ANR	332373	UnaryOperationExpression	& op2		332025	0					
ANR	332374	UnaryOperator	&		332025	0					
ANR	332375	Identifier	op2		332025	1					
ANR	332376	ReturnStatement	return res ;	2360:4:60722:60732	332025	5	True				
ANR	332377	Identifier	res		332025	0					
ANR	332378	ReturnStatement	return FAILURE ;	2362:3:60742:60756	332025	12	True				
ANR	332379	Identifier	FAILURE		332025	0					
ANR	332380	Label	case IS_REFERENCE :	2363:2:60760:60777	332025	13	True				
ANR	332381	Identifier	IS_REFERENCE		332025	0					
ANR	332382	ExpressionStatement	op1 = Z_REFVAL_P ( op1 )	2364:3:60782:60803	332025	14	True				
ANR	332383	AssignmentExpression	op1 = Z_REFVAL_P ( op1 )		332025	0		=			
ANR	332384	Identifier	op1		332025	0					
ANR	332385	CallExpression	Z_REFVAL_P ( op1 )		332025	1					
ANR	332386	Callee	Z_REFVAL_P		332025	0					
ANR	332387	Identifier	Z_REFVAL_P		332025	0					
ANR	332388	ArgumentList	op1		332025	1					
ANR	332389	Argument	op1		332025	0					
ANR	332390	Identifier	op1		332025	0					
ANR	332391	GotoStatement	goto try_again ;	2365:3:60808:60822	332025	15	True				
ANR	332392	Identifier	try_again		332025	0					
ANR	332393	Label	default :	2366:2:60826:60833	332025	16	True				
ANR	332394	Identifier	default		332025	0					
ANR	332395	ReturnStatement	return FAILURE ;	2367:3:60838:60852	332025	17	True				
ANR	332396	Identifier	FAILURE		332025	0					
ANR	332397	ReturnStatement	return SUCCESS ;	2370:1:60859:60873	332025	4	True				
ANR	332398	Identifier	SUCCESS		332025	0					
ANR	332399	ReturnType	ZEND_API int ZEND_FASTCALL		332025	1					
ANR	332400	Identifier	decrement_function		332025	2					
ANR	332401	ParameterList	zval * op1		332025	3					
ANR	332402	Parameter	zval * op1	2305:46:59371:59379	332025	0	True				
ANR	332403	ParameterType	zval *		332025	0					
ANR	332404	Identifier	op1		332025	1					
ANR	332405	CFGEntryNode	ENTRY		332025		True				
ANR	332406	CFGExitNode	EXIT		332025		True				
ANR	332407	Symbol	rv		332025						
ANR	332408	Symbol	lval		332025						
ANR	332409	Symbol	& op2		332025						
ANR	332410	Symbol	ZEND_LONG_MIN		332025						
ANR	332411	Symbol	dval		332025						
ANR	332412	Symbol	get		332025						
ANR	332413	Symbol	Z_STRLEN_P		332025						
ANR	332414	Symbol	Z_OBJ_HANDLER_P		332025						
ANR	332415	Symbol	do_operation		332025						
ANR	332416	Symbol	val		332025						
ANR	332417	Symbol	res		332025						
ANR	332418	Symbol	& lval		332025						
ANR	332419	Symbol	set		332025						
ANR	332420	Symbol	SUCCESS		332025						
ANR	332421	Symbol	d		332025						
ANR	332422	Symbol	Z_TYPE_P		332025						
ANR	332423	Symbol	Z_STRVAL_P		332025						
ANR	332424	Symbol	FAILURE		332025						
ANR	332425	Symbol	Z_DVAL_P		332025						
ANR	332426	Symbol	& rv		332025						
ANR	332427	Symbol	op2		332025						
ANR	332428	Symbol	op1		332025						
ANR	332429	Symbol	is_numeric_string		332025						
ANR	332430	Symbol	Z_REFVAL_P		332025						
ANR	332431	Symbol	Z_STR_P		332025						
ANR	332432	Symbol	& dval		332025						
ANR	332433	Symbol	ZEND_SUB		332025						
ANR	332434	Function	zend_is_true	2374:0:60888:60978							
ANR	332435	FunctionDef	zend_is_true (zval * op)		332434	0					
ANR	332436	CompoundStatement		2375:0:60948:60978	332434	0					
ANR	332437	ReturnStatement	return i_zend_is_true ( op ) ;	2376:1:60951:60976	332434	0	True				
ANR	332438	CallExpression	i_zend_is_true ( op )		332434	0					
ANR	332439	Callee	i_zend_is_true		332434	0					
ANR	332440	Identifier	i_zend_is_true		332434	0					
ANR	332441	ArgumentList	op		332434	1					
ANR	332442	Argument	op		332434	0					
ANR	332443	Identifier	op		332434	0					
ANR	332444	ReturnType	ZEND_API int ZEND_FASTCALL		332434	1					
ANR	332445	Identifier	zend_is_true		332434	2					
ANR	332446	ParameterList	zval * op		332434	3					
ANR	332447	Parameter	zval * op	2374:40:60928:60935	332434	0	True				
ANR	332448	ParameterType	zval *		332434	0					
ANR	332449	Identifier	op		332434	1					
ANR	332450	CFGEntryNode	ENTRY		332434		True				
ANR	332451	CFGExitNode	EXIT		332434		True				
ANR	332452	Symbol	op		332434						
ANR	332453	Symbol	i_zend_is_true		332434						
ANR	332454	Function	zend_object_is_true	2380:0:60991:61604							
ANR	332455	FunctionDef	zend_object_is_true (zval * op)		332454	0					
ANR	332456	CompoundStatement		2381:0:61058:61604	332454	0					
ANR	332457	IfStatement	if ( Z_OBJ_HT_P ( op ) -> cast_object )		332454	0					
ANR	332458	Condition	Z_OBJ_HT_P ( op ) -> cast_object	2382:5:61065:61091	332454	0	True				
ANR	332459	PtrMemberAccess	Z_OBJ_HT_P ( op ) -> cast_object		332454	0					
ANR	332460	CallExpression	Z_OBJ_HT_P ( op )		332454	0					
ANR	332461	Callee	Z_OBJ_HT_P		332454	0					
ANR	332462	Identifier	Z_OBJ_HT_P		332454	0					
ANR	332463	ArgumentList	op		332454	1					
ANR	332464	Argument	op		332454	0					
ANR	332465	Identifier	op		332454	0					
ANR	332466	Identifier	cast_object		332454	1					
ANR	332467	CompoundStatement		3:2:39:47	332454	1					
ANR	332468	IdentifierDeclStatement	zval tmp ;	2383:2:61098:61106	332454	0	True				
ANR	332469	IdentifierDecl	tmp		332454	0					
ANR	332470	IdentifierDeclType	zval		332454	0					
ANR	332471	Identifier	tmp		332454	1					
ANR	332472	IfStatement	"if ( Z_OBJ_HT_P ( op ) -> cast_object ( op , & tmp , _IS_BOOL ) == SUCCESS )"		332454	1					
ANR	332473	Condition	"Z_OBJ_HT_P ( op ) -> cast_object ( op , & tmp , _IS_BOOL ) == SUCCESS"	2384:6:61114:61171	332454	0	True				
ANR	332474	EqualityExpression	"Z_OBJ_HT_P ( op ) -> cast_object ( op , & tmp , _IS_BOOL ) == SUCCESS"		332454	0		==			
ANR	332475	CallExpression	"Z_OBJ_HT_P ( op ) -> cast_object ( op , & tmp , _IS_BOOL )"		332454	0					
ANR	332476	Callee	Z_OBJ_HT_P ( op ) -> cast_object		332454	0					
ANR	332477	PtrMemberAccess	Z_OBJ_HT_P ( op ) -> cast_object		332454	0					
ANR	332478	CallExpression	Z_OBJ_HT_P ( op )		332454	0					
ANR	332479	Callee	Z_OBJ_HT_P		332454	0					
ANR	332480	Identifier	Z_OBJ_HT_P		332454	0					
ANR	332481	ArgumentList	op		332454	1					
ANR	332482	Argument	op		332454	0					
ANR	332483	Identifier	op		332454	0					
ANR	332484	Identifier	cast_object		332454	1					
ANR	332485	ArgumentList	op		332454	1					
ANR	332486	Argument	op		332454	0					
ANR	332487	Identifier	op		332454	0					
ANR	332488	Argument	& tmp		332454	1					
ANR	332489	UnaryOperationExpression	& tmp		332454	0					
ANR	332490	UnaryOperator	&		332454	0					
ANR	332491	Identifier	tmp		332454	1					
ANR	332492	Argument	_IS_BOOL		332454	2					
ANR	332493	Identifier	_IS_BOOL		332454	0					
ANR	332494	Identifier	SUCCESS		332454	1					
ANR	332495	CompoundStatement		4:66:115:115	332454	1					
ANR	332496	ReturnStatement	return Z_TYPE ( tmp ) == IS_TRUE ;	2385:3:61179:61208	332454	0	True				
ANR	332497	EqualityExpression	Z_TYPE ( tmp ) == IS_TRUE		332454	0		==			
ANR	332498	CallExpression	Z_TYPE ( tmp )		332454	0					
ANR	332499	Callee	Z_TYPE		332454	0					
ANR	332500	Identifier	Z_TYPE		332454	0					
ANR	332501	ArgumentList	tmp		332454	1					
ANR	332502	Argument	tmp		332454	0					
ANR	332503	Identifier	tmp		332454	0					
ANR	332504	Identifier	IS_TRUE		332454	1					
ANR	332505	ExpressionStatement	"zend_error ( E_RECOVERABLE_ERROR , ""Object of class %s could not be converted to boolean"" , ZSTR_VAL ( Z_OBJ_P ( op ) -> ce -> name ) )"	2387:2:61216:61336	332454	2	True				
ANR	332506	CallExpression	"zend_error ( E_RECOVERABLE_ERROR , ""Object of class %s could not be converted to boolean"" , ZSTR_VAL ( Z_OBJ_P ( op ) -> ce -> name ) )"		332454	0					
ANR	332507	Callee	zend_error		332454	0					
ANR	332508	Identifier	zend_error		332454	0					
ANR	332509	ArgumentList	E_RECOVERABLE_ERROR		332454	1					
ANR	332510	Argument	E_RECOVERABLE_ERROR		332454	0					
ANR	332511	Identifier	E_RECOVERABLE_ERROR		332454	0					
ANR	332512	Argument	"""Object of class %s could not be converted to boolean"""		332454	1					
ANR	332513	PrimaryExpression	"""Object of class %s could not be converted to boolean"""		332454	0					
ANR	332514	Argument	ZSTR_VAL ( Z_OBJ_P ( op ) -> ce -> name )		332454	2					
ANR	332515	CallExpression	ZSTR_VAL ( Z_OBJ_P ( op ) -> ce -> name )		332454	0					
ANR	332516	Callee	ZSTR_VAL		332454	0					
ANR	332517	Identifier	ZSTR_VAL		332454	0					
ANR	332518	ArgumentList	Z_OBJ_P ( op ) -> ce -> name		332454	1					
ANR	332519	Argument	Z_OBJ_P ( op ) -> ce -> name		332454	0					
ANR	332520	PtrMemberAccess	Z_OBJ_P ( op ) -> ce -> name		332454	0					
ANR	332521	PtrMemberAccess	Z_OBJ_P ( op ) -> ce		332454	0					
ANR	332522	CallExpression	Z_OBJ_P ( op )		332454	0					
ANR	332523	Callee	Z_OBJ_P		332454	0					
ANR	332524	Identifier	Z_OBJ_P		332454	0					
ANR	332525	ArgumentList	op		332454	1					
ANR	332526	Argument	op		332454	0					
ANR	332527	Identifier	op		332454	0					
ANR	332528	Identifier	ce		332454	1					
ANR	332529	Identifier	name		332454	1					
ANR	332530	ElseStatement	else		332454	0					
ANR	332531	IfStatement	if ( Z_OBJ_HT_P ( op ) -> get )		332454	0					
ANR	332532	Condition	Z_OBJ_HT_P ( op ) -> get	2388:12:61350:61368	332454	0	True				
ANR	332533	PtrMemberAccess	Z_OBJ_HT_P ( op ) -> get		332454	0					
ANR	332534	CallExpression	Z_OBJ_HT_P ( op )		332454	0					
ANR	332535	Callee	Z_OBJ_HT_P		332454	0					
ANR	332536	Identifier	Z_OBJ_HT_P		332454	0					
ANR	332537	ArgumentList	op		332454	1					
ANR	332538	Argument	op		332454	0					
ANR	332539	Identifier	op		332454	0					
ANR	332540	Identifier	get		332454	1					
ANR	332541	CompoundStatement		11:2:341:381	332454	1					
ANR	332542	IdentifierDeclStatement	int result ;	2389:2:61375:61385	332454	0	True				
ANR	332543	IdentifierDecl	result		332454	0					
ANR	332544	IdentifierDeclType	int		332454	0					
ANR	332545	Identifier	result		332454	1					
ANR	332546	IdentifierDeclStatement	zval rv ;	2390:2:61389:61396	332454	1	True				
ANR	332547	IdentifierDecl	rv		332454	0					
ANR	332548	IdentifierDeclType	zval		332454	0					
ANR	332549	Identifier	rv		332454	1					
ANR	332550	IdentifierDeclStatement	"zval * tmp = Z_OBJ_HT_P ( op ) -> get ( op , & rv ) ;"	2391:2:61400:61440	332454	2	True				
ANR	332551	IdentifierDecl	"* tmp = Z_OBJ_HT_P ( op ) -> get ( op , & rv )"		332454	0					
ANR	332552	IdentifierDeclType	zval *		332454	0					
ANR	332553	Identifier	tmp		332454	1					
ANR	332554	AssignmentExpression	"* tmp = Z_OBJ_HT_P ( op ) -> get ( op , & rv )"		332454	2		=			
ANR	332555	Identifier	tmp		332454	0					
ANR	332556	CallExpression	"Z_OBJ_HT_P ( op ) -> get ( op , & rv )"		332454	1					
ANR	332557	Callee	Z_OBJ_HT_P ( op ) -> get		332454	0					
ANR	332558	PtrMemberAccess	Z_OBJ_HT_P ( op ) -> get		332454	0					
ANR	332559	CallExpression	Z_OBJ_HT_P ( op )		332454	0					
ANR	332560	Callee	Z_OBJ_HT_P		332454	0					
ANR	332561	Identifier	Z_OBJ_HT_P		332454	0					
ANR	332562	ArgumentList	op		332454	1					
ANR	332563	Argument	op		332454	0					
ANR	332564	Identifier	op		332454	0					
ANR	332565	Identifier	get		332454	1					
ANR	332566	ArgumentList	op		332454	1					
ANR	332567	Argument	op		332454	0					
ANR	332568	Identifier	op		332454	0					
ANR	332569	Argument	& rv		332454	1					
ANR	332570	UnaryOperationExpression	& rv		332454	0					
ANR	332571	UnaryOperator	&		332454	0					
ANR	332572	Identifier	rv		332454	1					
ANR	332573	IfStatement	if ( Z_TYPE_P ( tmp ) != IS_OBJECT )		332454	3					
ANR	332574	Condition	Z_TYPE_P ( tmp ) != IS_OBJECT	2393:6:61449:61474	332454	0	True				
ANR	332575	EqualityExpression	Z_TYPE_P ( tmp ) != IS_OBJECT		332454	0		!=			
ANR	332576	CallExpression	Z_TYPE_P ( tmp )		332454	0					
ANR	332577	Callee	Z_TYPE_P		332454	0					
ANR	332578	Identifier	Z_TYPE_P		332454	0					
ANR	332579	ArgumentList	tmp		332454	1					
ANR	332580	Argument	tmp		332454	0					
ANR	332581	Identifier	tmp		332454	0					
ANR	332582	Identifier	IS_OBJECT		332454	1					
ANR	332583	CompoundStatement		13:34:418:418	332454	1					
ANR	332584	ExpressionStatement	result = i_zend_is_true ( tmp )	2395:3:61515:61543	332454	0	True				
ANR	332585	AssignmentExpression	result = i_zend_is_true ( tmp )		332454	0		=			
ANR	332586	Identifier	result		332454	0					
ANR	332587	CallExpression	i_zend_is_true ( tmp )		332454	1					
ANR	332588	Callee	i_zend_is_true		332454	0					
ANR	332589	Identifier	i_zend_is_true		332454	0					
ANR	332590	ArgumentList	tmp		332454	1					
ANR	332591	Argument	tmp		332454	0					
ANR	332592	Identifier	tmp		332454	0					
ANR	332593	ExpressionStatement	zval_ptr_dtor ( tmp )	2396:3:61548:61566	332454	1	True				
ANR	332594	CallExpression	zval_ptr_dtor ( tmp )		332454	0					
ANR	332595	Callee	zval_ptr_dtor		332454	0					
ANR	332596	Identifier	zval_ptr_dtor		332454	0					
ANR	332597	ArgumentList	tmp		332454	1					
ANR	332598	Argument	tmp		332454	0					
ANR	332599	Identifier	tmp		332454	0					
ANR	332600	ReturnStatement	return result ;	2397:3:61571:61584	332454	2	True				
ANR	332601	Identifier	result		332454	0					
ANR	332602	ReturnStatement	return 1 ;	2400:1:61594:61602	332454	1	True				
ANR	332603	PrimaryExpression	1		332454	0					
ANR	332604	ReturnType	ZEND_API int ZEND_FASTCALL		332454	1					
ANR	332605	Identifier	zend_object_is_true		332454	2					
ANR	332606	ParameterList	zval * op		332454	3					
ANR	332607	Parameter	zval * op	2380:47:61038:61045	332454	0	True				
ANR	332608	ParameterType	zval *		332454	0					
ANR	332609	Identifier	op		332454	1					
ANR	332610	CFGEntryNode	ENTRY		332454		True				
ANR	332611	CFGExitNode	EXIT		332454		True				
ANR	332612	Symbol	E_RECOVERABLE_ERROR		332454						
ANR	332613	Symbol	rv		332454						
ANR	332614	Symbol	Z_OBJ_P		332454						
ANR	332615	Symbol	Z_TYPE		332454						
ANR	332616	Symbol	i_zend_is_true		332454						
ANR	332617	Symbol	* * Z_OBJ_P		332454						
ANR	332618	Symbol	result		332454						
ANR	332619	Symbol	_IS_BOOL		332454						
ANR	332620	Symbol	tmp		332454						
ANR	332621	Symbol	op		332454						
ANR	332622	Symbol	SUCCESS		332454						
ANR	332623	Symbol	IS_TRUE		332454						
ANR	332624	Symbol	* Z_OBJ_P		332454						
ANR	332625	Symbol	Z_TYPE_P		332454						
ANR	332626	Symbol	* Z_OBJ_HT_P		332454						
ANR	332627	Symbol	Z_OBJ_P ( op ) -> ce -> name		332454						
ANR	332628	Symbol	ZSTR_VAL		332454						
ANR	332629	Symbol	& rv		332454						
ANR	332630	Symbol	Z_OBJ_HT_P ( op ) -> get		332454						
ANR	332631	Symbol	Z_OBJ_HT_P		332454						
ANR	332632	Symbol	Z_OBJ_HT_P ( op ) -> cast_object		332454						
ANR	332633	Symbol	& tmp		332454						
ANR	332634	Symbol	* Z_OBJ_P ( op ) -> ce		332454						
ANR	332635	Symbol	IS_OBJECT		332454						
ANR	332636	Symbol	Z_OBJ_P ( op ) -> ce		332454						
ANR	332637	Function	zend_update_current_locale	2405:0:61643:61743							
ANR	332638	FunctionDef	zend_update_current_locale ()		332637	0					
ANR	332639	CompoundStatement		2406:0:61700:61743	332637	0					
ANR	332640	ExpressionStatement	current_locale = _get_current_locale ( )	2407:1:61703:61741	332637	0	True				
ANR	332641	AssignmentExpression	current_locale = _get_current_locale ( )		332637	0		=			
ANR	332642	Identifier	current_locale		332637	0					
ANR	332643	CallExpression	_get_current_locale ( )		332637	1					
ANR	332644	Callee	_get_current_locale		332637	0					
ANR	332645	Identifier	_get_current_locale		332637	0					
ANR	332646	ArgumentList			332637	1					
ANR	332647	ReturnType	ZEND_API void		332637	1					
ANR	332648	Identifier	zend_update_current_locale		332637	2					
ANR	332649	ParameterList			332637	3					
ANR	332650	CFGEntryNode	ENTRY		332637		True				
ANR	332651	CFGExitNode	EXIT		332637		True				
ANR	332652	Symbol	_get_current_locale		332637						
ANR	332653	Symbol	current_locale		332637						
ANR	332654	Function	zend_str_tolower_copy	2412:15:61778:62128							
ANR	332655	FunctionDef	"zend_str_tolower_copy (char * dest , const char * source , size_t length)"		332654	0					
ANR	332656	CompoundStatement		2413:0:61871:62128	332654	0					
ANR	332657	Statement	register	2414:1:61874:61881	332654	0	True				
ANR	332658	IdentifierDeclStatement	unsigned char * str = ( unsigned char * ) source ;	2414:10:61883:61926	332654	1	True				
ANR	332659	IdentifierDecl	* str = ( unsigned char * ) source		332654	0					
ANR	332660	IdentifierDeclType	unsigned char *		332654	0					
ANR	332661	Identifier	str		332654	1					
ANR	332662	AssignmentExpression	* str = ( unsigned char * ) source		332654	2		=			
ANR	332663	Identifier	str		332654	0					
ANR	332664	CastExpression	( unsigned char * ) source		332654	1					
ANR	332665	CastTarget	unsigned char *		332654	0					
ANR	332666	Identifier	source		332654	1					
ANR	332667	Statement	register	2415:1:61929:61936	332654	2	True				
ANR	332668	IdentifierDeclStatement	unsigned char * result = ( unsigned char * ) dest ;	2415:10:61938:61982	332654	3	True				
ANR	332669	IdentifierDecl	* result = ( unsigned char * ) dest		332654	0					
ANR	332670	IdentifierDeclType	unsigned char *		332654	0					
ANR	332671	Identifier	result		332654	1					
ANR	332672	AssignmentExpression	* result = ( unsigned char * ) dest		332654	2		=			
ANR	332673	Identifier	result		332654	0					
ANR	332674	CastExpression	( unsigned char * ) dest		332654	1					
ANR	332675	CastTarget	unsigned char *		332654	0					
ANR	332676	Identifier	dest		332654	1					
ANR	332677	Statement	register	2416:1:61985:61992	332654	4	True				
ANR	332678	IdentifierDeclStatement	unsigned char * end = str + length ;	2416:10:61994:62027	332654	5	True				
ANR	332679	IdentifierDecl	* end = str + length		332654	0					
ANR	332680	IdentifierDeclType	unsigned char *		332654	0					
ANR	332681	Identifier	end		332654	1					
ANR	332682	AssignmentExpression	* end = str + length		332654	2		=			
ANR	332683	Identifier	end		332654	0					
ANR	332684	AdditiveExpression	str + length		332654	1		+			
ANR	332685	Identifier	str		332654	0					
ANR	332686	Identifier	length		332654	1					
ANR	332687	WhileStatement	while ( str < end )		332654	6					
ANR	332688	Condition	str < end	2418:8:62038:62046	332654	0	True				
ANR	332689	RelationalExpression	str < end		332654	0		<			
ANR	332690	Identifier	str		332654	0					
ANR	332691	Identifier	end		332654	1					
ANR	332692	CompoundStatement		6:19:177:177	332654	1					
ANR	332693	ExpressionStatement	* result ++ = zend_tolower_ascii ( * str ++ )	2419:2:62053:62091	332654	0	True				
ANR	332694	AssignmentExpression	* result ++ = zend_tolower_ascii ( * str ++ )		332654	0		=			
ANR	332695	UnaryOperationExpression	* result ++		332654	0					
ANR	332696	UnaryOperator	*		332654	0					
ANR	332697	PostIncDecOperationExpression	result ++		332654	1					
ANR	332698	Identifier	result		332654	0					
ANR	332699	IncDec	++		332654	1					
ANR	332700	CallExpression	zend_tolower_ascii ( * str ++ )		332654	1					
ANR	332701	Callee	zend_tolower_ascii		332654	0					
ANR	332702	Identifier	zend_tolower_ascii		332654	0					
ANR	332703	ArgumentList	* str ++		332654	1					
ANR	332704	Argument	* str ++		332654	0					
ANR	332705	UnaryOperationExpression	* str ++		332654	0					
ANR	332706	UnaryOperator	*		332654	0					
ANR	332707	PostIncDecOperationExpression	str ++		332654	1					
ANR	332708	Identifier	str		332654	0					
ANR	332709	IncDec	++		332654	1					
ANR	332710	ExpressionStatement	* result = '\\0'	2421:1:62097:62111	332654	7	True				
ANR	332711	AssignmentExpression	* result = '\\0'		332654	0		=			
ANR	332712	UnaryOperationExpression	* result		332654	0					
ANR	332713	UnaryOperator	*		332654	0					
ANR	332714	Identifier	result		332654	1					
ANR	332715	PrimaryExpression	'\\0'		332654	1					
ANR	332716	ReturnStatement	return dest ;	2423:1:62115:62126	332654	8	True				
ANR	332717	Identifier	dest		332654	0					
ANR	332718	ReturnType	ZEND_FASTCALL		332654	1					
ANR	332719	Identifier	zend_str_tolower_copy		332654	2					
ANR	332720	ParameterList	"char * dest , const char * source , size_t length"		332654	3					
ANR	332721	Parameter	char * dest	2412:51:61814:61823	332654	0	True				
ANR	332722	ParameterType	char *		332654	0					
ANR	332723	Identifier	dest		332654	1					
ANR	332724	Parameter	const char * source	2412:63:61826:61843	332654	1	True				
ANR	332725	ParameterType	const char *		332654	0					
ANR	332726	Identifier	source		332654	1					
ANR	332727	Parameter	size_t length	2412:83:61846:61858	332654	2	True				
ANR	332728	ParameterType	size_t		332654	0					
ANR	332729	Identifier	length		332654	1					
ANR	332730	CFGEntryNode	ENTRY		332654		True				
ANR	332731	CFGExitNode	EXIT		332654		True				
ANR	332732	Symbol	str		332654						
ANR	332733	Symbol	result		332654						
ANR	332734	Symbol	* result ++		332654						
ANR	332735	Symbol	zend_tolower_ascii		332654						
ANR	332736	Symbol	* result		332654						
ANR	332737	Symbol	length		332654						
ANR	332738	Symbol	* str ++		332654						
ANR	332739	Symbol	end		332654						
ANR	332740	Symbol	source		332654						
ANR	332741	Symbol	dest		332654						
ANR	332742	Function	zend_str_tolower_dup	2427:15:62156:62312							
ANR	332743	FunctionDef	"zend_str_tolower_dup (const char * source , size_t length)"		332742	0					
ANR	332744	CompoundStatement		2428:0:62236:62312	332742	0					
ANR	332745	ReturnStatement	"return zend_str_tolower_copy ( ( char * ) emalloc ( length + 1 ) , source , length ) ;"	2429:1:62239:62310	332742	0	True				
ANR	332746	CallExpression	"zend_str_tolower_copy ( ( char * ) emalloc ( length + 1 ) , source , length )"		332742	0					
ANR	332747	Callee	zend_str_tolower_copy		332742	0					
ANR	332748	Identifier	zend_str_tolower_copy		332742	0					
ANR	332749	ArgumentList	( char * ) emalloc ( length + 1 )		332742	1					
ANR	332750	Argument	( char * ) emalloc ( length + 1 )		332742	0					
ANR	332751	CastExpression	( char * ) emalloc ( length + 1 )		332742	0					
ANR	332752	CastTarget	char *		332742	0					
ANR	332753	CallExpression	emalloc ( length + 1 )		332742	1					
ANR	332754	Callee	emalloc		332742	0					
ANR	332755	Identifier	emalloc		332742	0					
ANR	332756	ArgumentList	length + 1		332742	1					
ANR	332757	Argument	length + 1		332742	0					
ANR	332758	AdditiveExpression	length + 1		332742	0		+			
ANR	332759	Identifier	length		332742	0					
ANR	332760	PrimaryExpression	1		332742	1					
ANR	332761	Argument	source		332742	1					
ANR	332762	Identifier	source		332742	0					
ANR	332763	Argument	length		332742	2					
ANR	332764	Identifier	length		332742	0					
ANR	332765	ReturnType	ZEND_FASTCALL		332742	1					
ANR	332766	Identifier	zend_str_tolower_dup		332742	2					
ANR	332767	ParameterList	"const char * source , size_t length"		332742	3					
ANR	332768	Parameter	const char * source	2427:50:62191:62208	332742	0	True				
ANR	332769	ParameterType	const char *		332742	0					
ANR	332770	Identifier	source		332742	1					
ANR	332771	Parameter	size_t length	2427:70:62211:62223	332742	1	True				
ANR	332772	ParameterType	size_t		332742	0					
ANR	332773	Identifier	length		332742	1					
ANR	332774	CFGEntryNode	ENTRY		332742		True				
ANR	332775	CFGExitNode	EXIT		332742		True				
ANR	332776	Symbol	emalloc		332742						
ANR	332777	Symbol	length		332742						
ANR	332778	Symbol	zend_str_tolower_copy		332742						
ANR	332779	Symbol	source		332742						
ANR	332780	Function	zend_str_tolower	2433:0:62325:62562							
ANR	332781	FunctionDef	"zend_str_tolower (char * str , size_t length)"		332780	0					
ANR	332782	CompoundStatement		2434:0:62406:62562	332780	0					
ANR	332783	Statement	register	2435:1:62409:62416	332780	0	True				
ANR	332784	IdentifierDeclStatement	unsigned char * p = ( unsigned char * ) str ;	2435:10:62418:62456	332780	1	True				
ANR	332785	IdentifierDecl	* p = ( unsigned char * ) str		332780	0					
ANR	332786	IdentifierDeclType	unsigned char *		332780	0					
ANR	332787	Identifier	p		332780	1					
ANR	332788	AssignmentExpression	* p = ( unsigned char * ) str		332780	2		=			
ANR	332789	Identifier	p		332780	0					
ANR	332790	CastExpression	( unsigned char * ) str		332780	1					
ANR	332791	CastTarget	unsigned char *		332780	0					
ANR	332792	Identifier	str		332780	1					
ANR	332793	Statement	register	2436:1:62459:62466	332780	2	True				
ANR	332794	IdentifierDeclStatement	unsigned char * end = p + length ;	2436:10:62468:62499	332780	3	True				
ANR	332795	IdentifierDecl	* end = p + length		332780	0					
ANR	332796	IdentifierDeclType	unsigned char *		332780	0					
ANR	332797	Identifier	end		332780	1					
ANR	332798	AssignmentExpression	* end = p + length		332780	2		=			
ANR	332799	Identifier	end		332780	0					
ANR	332800	AdditiveExpression	p + length		332780	1		+			
ANR	332801	Identifier	p		332780	0					
ANR	332802	Identifier	length		332780	1					
ANR	332803	WhileStatement	while ( p < end )		332780	4					
ANR	332804	Condition	p < end	2438:8:62510:62516	332780	0	True				
ANR	332805	RelationalExpression	p < end		332780	0		<			
ANR	332806	Identifier	p		332780	0					
ANR	332807	Identifier	end		332780	1					
ANR	332808	CompoundStatement		5:17:112:112	332780	1					
ANR	332809	ExpressionStatement	* p = zend_tolower_ascii ( * p )	2439:2:62523:62550	332780	0	True				
ANR	332810	AssignmentExpression	* p = zend_tolower_ascii ( * p )		332780	0		=			
ANR	332811	UnaryOperationExpression	* p		332780	0					
ANR	332812	UnaryOperator	*		332780	0					
ANR	332813	Identifier	p		332780	1					
ANR	332814	CallExpression	zend_tolower_ascii ( * p )		332780	1					
ANR	332815	Callee	zend_tolower_ascii		332780	0					
ANR	332816	Identifier	zend_tolower_ascii		332780	0					
ANR	332817	ArgumentList	* p		332780	1					
ANR	332818	Argument	* p		332780	0					
ANR	332819	UnaryOperationExpression	* p		332780	0					
ANR	332820	UnaryOperator	*		332780	0					
ANR	332821	Identifier	p		332780	1					
ANR	332822	ExpressionStatement	p ++	2440:2:62554:62557	332780	1	True				
ANR	332823	PostIncDecOperationExpression	p ++		332780	0					
ANR	332824	Identifier	p		332780	0					
ANR	332825	IncDec	++		332780	1					
ANR	332826	ReturnType	ZEND_API void ZEND_FASTCALL		332780	1					
ANR	332827	Identifier	zend_str_tolower		332780	2					
ANR	332828	ParameterList	"char * str , size_t length"		332780	3					
ANR	332829	Parameter	char * str	2433:45:62370:62378	332780	0	True				
ANR	332830	ParameterType	char *		332780	0					
ANR	332831	Identifier	str		332780	1					
ANR	332832	Parameter	size_t length	2433:56:62381:62393	332780	1	True				
ANR	332833	ParameterType	size_t		332780	0					
ANR	332834	Identifier	length		332780	1					
ANR	332835	CFGEntryNode	ENTRY		332780		True				
ANR	332836	CFGExitNode	EXIT		332780		True				
ANR	332837	Symbol	str		332780						
ANR	332838	Symbol	p		332780						
ANR	332839	Symbol	zend_tolower_ascii		332780						
ANR	332840	Symbol	length		332780						
ANR	332841	Symbol	end		332780						
ANR	332842	Symbol	* p		332780						
ANR	332843	Function	zend_str_tolower_dup_ex	2445:15:62590:63206							
ANR	332844	FunctionDef	"zend_str_tolower_dup_ex (const char * source , size_t length)"		332843	0					
ANR	332845	CompoundStatement		2446:0:62673:63206	332843	0					
ANR	332846	Statement	register	2447:1:62676:62683	332843	0	True				
ANR	332847	IdentifierDeclStatement	const unsigned char * p = ( const unsigned char * ) source ;	2447:10:62685:62738	332843	1	True				
ANR	332848	IdentifierDecl	* p = ( const unsigned char * ) source		332843	0					
ANR	332849	IdentifierDeclType	const unsigned char *		332843	0					
ANR	332850	Identifier	p		332843	1					
ANR	332851	AssignmentExpression	* p = ( const unsigned char * ) source		332843	2		=			
ANR	332852	Identifier	p		332843	0					
ANR	332853	CastExpression	( const unsigned char * ) source		332843	1					
ANR	332854	CastTarget	const unsigned char *		332843	0					
ANR	332855	Identifier	source		332843	1					
ANR	332856	Statement	register	2448:1:62741:62748	332843	2	True				
ANR	332857	IdentifierDeclStatement	const unsigned char * end = p + length ;	2448:10:62750:62787	332843	3	True				
ANR	332858	IdentifierDecl	* end = p + length		332843	0					
ANR	332859	IdentifierDeclType	const unsigned char *		332843	0					
ANR	332860	Identifier	end		332843	1					
ANR	332861	AssignmentExpression	* end = p + length		332843	2		=			
ANR	332862	Identifier	end		332843	0					
ANR	332863	AdditiveExpression	p + length		332843	1		+			
ANR	332864	Identifier	p		332843	0					
ANR	332865	Identifier	length		332843	1					
ANR	332866	WhileStatement	while ( p < end )		332843	4					
ANR	332867	Condition	p < end	2450:8:62798:62804	332843	0	True				
ANR	332868	RelationalExpression	p < end		332843	0		<			
ANR	332869	Identifier	p		332843	0					
ANR	332870	Identifier	end		332843	1					
ANR	332871	CompoundStatement		5:17:133:133	332843	1					
ANR	332872	IfStatement	if ( * p != zend_tolower_ascii ( * p ) )		332843	0					
ANR	332873	Condition	* p != zend_tolower_ascii ( * p )	2451:6:62815:62842	332843	0	True				
ANR	332874	EqualityExpression	* p != zend_tolower_ascii ( * p )		332843	0		!=			
ANR	332875	UnaryOperationExpression	* p		332843	0					
ANR	332876	UnaryOperator	*		332843	0					
ANR	332877	Identifier	p		332843	1					
ANR	332878	CallExpression	zend_tolower_ascii ( * p )		332843	1					
ANR	332879	Callee	zend_tolower_ascii		332843	0					
ANR	332880	Identifier	zend_tolower_ascii		332843	0					
ANR	332881	ArgumentList	* p		332843	1					
ANR	332882	Argument	* p		332843	0					
ANR	332883	UnaryOperationExpression	* p		332843	0					
ANR	332884	UnaryOperator	*		332843	0					
ANR	332885	Identifier	p		332843	1					
ANR	332886	CompoundStatement		8:12:228:244	332843	1					
ANR	332887	IdentifierDeclStatement	char * res = ( char * ) emalloc ( length + 1 ) ;	2452:3:62850:62888	332843	0	True				
ANR	332888	IdentifierDecl	* res = ( char * ) emalloc ( length + 1 )		332843	0					
ANR	332889	IdentifierDeclType	char *		332843	0					
ANR	332890	Identifier	res		332843	1					
ANR	332891	AssignmentExpression	* res = ( char * ) emalloc ( length + 1 )		332843	2		=			
ANR	332892	Identifier	res		332843	0					
ANR	332893	CastExpression	( char * ) emalloc ( length + 1 )		332843	1					
ANR	332894	CastTarget	char *		332843	0					
ANR	332895	CallExpression	emalloc ( length + 1 )		332843	1					
ANR	332896	Callee	emalloc		332843	0					
ANR	332897	Identifier	emalloc		332843	0					
ANR	332898	ArgumentList	length + 1		332843	1					
ANR	332899	Argument	length + 1		332843	0					
ANR	332900	AdditiveExpression	length + 1		332843	0		+			
ANR	332901	Identifier	length		332843	0					
ANR	332902	PrimaryExpression	1		332843	1					
ANR	332903	Statement	register	2453:3:62893:62900	332843	1	True				
ANR	332904	IdentifierDeclStatement	unsigned char * r ;	2453:12:62902:62918	332843	2	True				
ANR	332905	IdentifierDecl	* r		332843	0					
ANR	332906	IdentifierDeclType	unsigned char *		332843	0					
ANR	332907	Identifier	r		332843	1					
ANR	332908	IfStatement	if ( p != ( const unsigned char * ) source )		332843	3					
ANR	332909	Condition	p != ( const unsigned char * ) source	2455:7:62928:62960	332843	0	True				
ANR	332910	EqualityExpression	p != ( const unsigned char * ) source		332843	0		!=			
ANR	332911	Identifier	p		332843	0					
ANR	332912	CastExpression	( const unsigned char * ) source		332843	1					
ANR	332913	CastTarget	const unsigned char *		332843	0					
ANR	332914	Identifier	source		332843	1					
ANR	332915	CompoundStatement		10:42:289:289	332843	1					
ANR	332916	ExpressionStatement	"memcpy ( res , source , p - ( const unsigned char * ) source )"	2456:4:62969:63022	332843	0	True				
ANR	332917	CallExpression	"memcpy ( res , source , p - ( const unsigned char * ) source )"		332843	0					
ANR	332918	Callee	memcpy		332843	0					
ANR	332919	Identifier	memcpy		332843	0					
ANR	332920	ArgumentList	res		332843	1					
ANR	332921	Argument	res		332843	0					
ANR	332922	Identifier	res		332843	0					
ANR	332923	Argument	source		332843	1					
ANR	332924	Identifier	source		332843	0					
ANR	332925	Argument	p - ( const unsigned char * ) source		332843	2					
ANR	332926	AdditiveExpression	p - ( const unsigned char * ) source		332843	0		-			
ANR	332927	Identifier	p		332843	0					
ANR	332928	CastExpression	( const unsigned char * ) source		332843	1					
ANR	332929	CastTarget	const unsigned char *		332843	0					
ANR	332930	Identifier	source		332843	1					
ANR	332931	ExpressionStatement	r = ( unsigned char * ) p + ( res - source )	2458:3:63032:63070	332843	4	True				
ANR	332932	AssignmentExpression	r = ( unsigned char * ) p + ( res - source )		332843	0		=			
ANR	332933	Identifier	r		332843	0					
ANR	332934	AdditiveExpression	( unsigned char * ) p + ( res - source )		332843	1		+			
ANR	332935	CastExpression	( unsigned char * ) p		332843	0					
ANR	332936	CastTarget	unsigned char *		332843	0					
ANR	332937	Identifier	p		332843	1					
ANR	332938	AdditiveExpression	res - source		332843	1		-			
ANR	332939	Identifier	res		332843	0					
ANR	332940	Identifier	source		332843	1					
ANR	332941	WhileStatement	while ( p < end )		332843	5					
ANR	332942	Condition	p < end	2459:10:63082:63088	332843	0	True				
ANR	332943	RelationalExpression	p < end		332843	0		<			
ANR	332944	Identifier	p		332843	0					
ANR	332945	Identifier	end		332843	1					
ANR	332946	CompoundStatement		14:19:417:417	332843	1					
ANR	332947	ExpressionStatement	* r = zend_tolower_ascii ( * p )	2460:4:63097:63124	332843	0	True				
ANR	332948	AssignmentExpression	* r = zend_tolower_ascii ( * p )		332843	0		=			
ANR	332949	UnaryOperationExpression	* r		332843	0					
ANR	332950	UnaryOperator	*		332843	0					
ANR	332951	Identifier	r		332843	1					
ANR	332952	CallExpression	zend_tolower_ascii ( * p )		332843	1					
ANR	332953	Callee	zend_tolower_ascii		332843	0					
ANR	332954	Identifier	zend_tolower_ascii		332843	0					
ANR	332955	ArgumentList	* p		332843	1					
ANR	332956	Argument	* p		332843	0					
ANR	332957	UnaryOperationExpression	* p		332843	0					
ANR	332958	UnaryOperator	*		332843	0					
ANR	332959	Identifier	p		332843	1					
ANR	332960	ExpressionStatement	p ++	2461:4:63130:63133	332843	1	True				
ANR	332961	PostIncDecOperationExpression	p ++		332843	0					
ANR	332962	Identifier	p		332843	0					
ANR	332963	IncDec	++		332843	1					
ANR	332964	ExpressionStatement	r ++	2462:4:63139:63142	332843	2	True				
ANR	332965	PostIncDecOperationExpression	r ++		332843	0					
ANR	332966	Identifier	r		332843	0					
ANR	332967	IncDec	++		332843	1					
ANR	332968	ExpressionStatement	* r = '\\0'	2464:3:63152:63161	332843	6	True				
ANR	332969	AssignmentExpression	* r = '\\0'		332843	0		=			
ANR	332970	UnaryOperationExpression	* r		332843	0					
ANR	332971	UnaryOperator	*		332843	0					
ANR	332972	Identifier	r		332843	1					
ANR	332973	PrimaryExpression	'\\0'		332843	1					
ANR	332974	ReturnStatement	return res ;	2465:3:63166:63176	332843	7	True				
ANR	332975	Identifier	res		332843	0					
ANR	332976	ExpressionStatement	p ++	2467:2:63184:63187	332843	1	True				
ANR	332977	PostIncDecOperationExpression	p ++		332843	0					
ANR	332978	Identifier	p		332843	0					
ANR	332979	IncDec	++		332843	1					
ANR	332980	ReturnStatement	return NULL ;	2469:1:63193:63204	332843	5	True				
ANR	332981	Identifier	NULL		332843	0					
ANR	332982	ReturnType	ZEND_FASTCALL		332843	1					
ANR	332983	Identifier	zend_str_tolower_dup_ex		332843	2					
ANR	332984	ParameterList	"const char * source , size_t length"		332843	3					
ANR	332985	Parameter	const char * source	2445:53:62628:62645	332843	0	True				
ANR	332986	ParameterType	const char *		332843	0					
ANR	332987	Identifier	source		332843	1					
ANR	332988	Parameter	size_t length	2445:73:62648:62660	332843	1	True				
ANR	332989	ParameterType	size_t		332843	0					
ANR	332990	Identifier	length		332843	1					
ANR	332991	CFGEntryNode	ENTRY		332843		True				
ANR	332992	CFGExitNode	EXIT		332843		True				
ANR	332993	Symbol	p		332843						
ANR	332994	Symbol	res		332843						
ANR	332995	Symbol	emalloc		332843						
ANR	332996	Symbol	r		332843						
ANR	332997	Symbol	zend_tolower_ascii		332843						
ANR	332998	Symbol	NULL		332843						
ANR	332999	Symbol	length		332843						
ANR	333000	Symbol	end		332843						
ANR	333001	Symbol	* p		332843						
ANR	333002	Symbol	source		332843						
ANR	333003	Symbol	* r		332843						
ANR	333004	Function	zend_string_tolower	2473:22:63241:63885							
ANR	333005	FunctionDef	zend_string_tolower (zend_string * str)		333004	0					
ANR	333006	CompoundStatement		2474:0:63303:63885	333004	0					
ANR	333007	Statement	register	2475:1:63306:63313	333004	0	True				
ANR	333008	IdentifierDeclStatement	unsigned char * p = ( unsigned char * ) ZSTR_VAL ( str ) ;	2475:10:63315:63363	333004	1	True				
ANR	333009	IdentifierDecl	* p = ( unsigned char * ) ZSTR_VAL ( str )		333004	0					
ANR	333010	IdentifierDeclType	unsigned char *		333004	0					
ANR	333011	Identifier	p		333004	1					
ANR	333012	AssignmentExpression	* p = ( unsigned char * ) ZSTR_VAL ( str )		333004	2		=			
ANR	333013	Identifier	p		333004	0					
ANR	333014	CastExpression	( unsigned char * ) ZSTR_VAL ( str )		333004	1					
ANR	333015	CastTarget	unsigned char *		333004	0					
ANR	333016	CallExpression	ZSTR_VAL ( str )		333004	1					
ANR	333017	Callee	ZSTR_VAL		333004	0					
ANR	333018	Identifier	ZSTR_VAL		333004	0					
ANR	333019	ArgumentList	str		333004	1					
ANR	333020	Argument	str		333004	0					
ANR	333021	Identifier	str		333004	0					
ANR	333022	Statement	register	2476:1:63366:63373	333004	2	True				
ANR	333023	IdentifierDeclStatement	unsigned char * end = p + ZSTR_LEN ( str ) ;	2476:10:63375:63413	333004	3	True				
ANR	333024	IdentifierDecl	* end = p + ZSTR_LEN ( str )		333004	0					
ANR	333025	IdentifierDeclType	unsigned char *		333004	0					
ANR	333026	Identifier	end		333004	1					
ANR	333027	AssignmentExpression	* end = p + ZSTR_LEN ( str )		333004	2		=			
ANR	333028	Identifier	end		333004	0					
ANR	333029	AdditiveExpression	p + ZSTR_LEN ( str )		333004	1		+			
ANR	333030	Identifier	p		333004	0					
ANR	333031	CallExpression	ZSTR_LEN ( str )		333004	1					
ANR	333032	Callee	ZSTR_LEN		333004	0					
ANR	333033	Identifier	ZSTR_LEN		333004	0					
ANR	333034	ArgumentList	str		333004	1					
ANR	333035	Argument	str		333004	0					
ANR	333036	Identifier	str		333004	0					
ANR	333037	WhileStatement	while ( p < end )		333004	4					
ANR	333038	Condition	p < end	2478:8:63424:63430	333004	0	True				
ANR	333039	RelationalExpression	p < end		333004	0		<			
ANR	333040	Identifier	p		333004	0					
ANR	333041	Identifier	end		333004	1					
ANR	333042	CompoundStatement		5:17:129:129	333004	1					
ANR	333043	IfStatement	if ( * p != zend_tolower_ascii ( * p ) )		333004	0					
ANR	333044	Condition	* p != zend_tolower_ascii ( * p )	2479:6:63441:63468	333004	0	True				
ANR	333045	EqualityExpression	* p != zend_tolower_ascii ( * p )		333004	0		!=			
ANR	333046	UnaryOperationExpression	* p		333004	0					
ANR	333047	UnaryOperator	*		333004	0					
ANR	333048	Identifier	p		333004	1					
ANR	333049	CallExpression	zend_tolower_ascii ( * p )		333004	1					
ANR	333050	Callee	zend_tolower_ascii		333004	0					
ANR	333051	Identifier	zend_tolower_ascii		333004	0					
ANR	333052	ArgumentList	* p		333004	1					
ANR	333053	Argument	* p		333004	0					
ANR	333054	UnaryOperationExpression	* p		333004	0					
ANR	333055	UnaryOperator	*		333004	0					
ANR	333056	Identifier	p		333004	1					
ANR	333057	CompoundStatement		8:12:240:256	333004	1					
ANR	333058	IdentifierDeclStatement	"zend_string * res = zend_string_alloc ( ZSTR_LEN ( str ) , 0 ) ;"	2480:3:63476:63530	333004	0	True				
ANR	333059	IdentifierDecl	"* res = zend_string_alloc ( ZSTR_LEN ( str ) , 0 )"		333004	0					
ANR	333060	IdentifierDeclType	zend_string *		333004	0					
ANR	333061	Identifier	res		333004	1					
ANR	333062	AssignmentExpression	"* res = zend_string_alloc ( ZSTR_LEN ( str ) , 0 )"		333004	2		=			
ANR	333063	Identifier	res		333004	0					
ANR	333064	CallExpression	"zend_string_alloc ( ZSTR_LEN ( str ) , 0 )"		333004	1					
ANR	333065	Callee	zend_string_alloc		333004	0					
ANR	333066	Identifier	zend_string_alloc		333004	0					
ANR	333067	ArgumentList	ZSTR_LEN ( str )		333004	1					
ANR	333068	Argument	ZSTR_LEN ( str )		333004	0					
ANR	333069	CallExpression	ZSTR_LEN ( str )		333004	0					
ANR	333070	Callee	ZSTR_LEN		333004	0					
ANR	333071	Identifier	ZSTR_LEN		333004	0					
ANR	333072	ArgumentList	str		333004	1					
ANR	333073	Argument	str		333004	0					
ANR	333074	Identifier	str		333004	0					
ANR	333075	Argument	0		333004	1					
ANR	333076	PrimaryExpression	0		333004	0					
ANR	333077	Statement	register	2481:3:63535:63542	333004	1	True				
ANR	333078	IdentifierDeclStatement	unsigned char * r ;	2481:12:63544:63560	333004	2	True				
ANR	333079	IdentifierDecl	* r		333004	0					
ANR	333080	IdentifierDeclType	unsigned char *		333004	0					
ANR	333081	Identifier	r		333004	1					
ANR	333082	IfStatement	if ( p != ( unsigned char * ) ZSTR_VAL ( str ) )		333004	3					
ANR	333083	Condition	p != ( unsigned char * ) ZSTR_VAL ( str )	2483:7:63570:63603	333004	0	True				
ANR	333084	EqualityExpression	p != ( unsigned char * ) ZSTR_VAL ( str )		333004	0		!=			
ANR	333085	Identifier	p		333004	0					
ANR	333086	CastExpression	( unsigned char * ) ZSTR_VAL ( str )		333004	1					
ANR	333087	CastTarget	unsigned char *		333004	0					
ANR	333088	CallExpression	ZSTR_VAL ( str )		333004	1					
ANR	333089	Callee	ZSTR_VAL		333004	0					
ANR	333090	Identifier	ZSTR_VAL		333004	0					
ANR	333091	ArgumentList	str		333004	1					
ANR	333092	Argument	str		333004	0					
ANR	333093	Identifier	str		333004	0					
ANR	333094	CompoundStatement		10:43:302:302	333004	1					
ANR	333095	ExpressionStatement	"memcpy ( ZSTR_VAL ( res ) , ZSTR_VAL ( str ) , p - ( unsigned char * ) ZSTR_VAL ( str ) )"	2484:4:63612:63683	333004	0	True				
ANR	333096	CallExpression	"memcpy ( ZSTR_VAL ( res ) , ZSTR_VAL ( str ) , p - ( unsigned char * ) ZSTR_VAL ( str ) )"		333004	0					
ANR	333097	Callee	memcpy		333004	0					
ANR	333098	Identifier	memcpy		333004	0					
ANR	333099	ArgumentList	ZSTR_VAL ( res )		333004	1					
ANR	333100	Argument	ZSTR_VAL ( res )		333004	0					
ANR	333101	CallExpression	ZSTR_VAL ( res )		333004	0					
ANR	333102	Callee	ZSTR_VAL		333004	0					
ANR	333103	Identifier	ZSTR_VAL		333004	0					
ANR	333104	ArgumentList	res		333004	1					
ANR	333105	Argument	res		333004	0					
ANR	333106	Identifier	res		333004	0					
ANR	333107	Argument	ZSTR_VAL ( str )		333004	1					
ANR	333108	CallExpression	ZSTR_VAL ( str )		333004	0					
ANR	333109	Callee	ZSTR_VAL		333004	0					
ANR	333110	Identifier	ZSTR_VAL		333004	0					
ANR	333111	ArgumentList	str		333004	1					
ANR	333112	Argument	str		333004	0					
ANR	333113	Identifier	str		333004	0					
ANR	333114	Argument	p - ( unsigned char * ) ZSTR_VAL ( str )		333004	2					
ANR	333115	AdditiveExpression	p - ( unsigned char * ) ZSTR_VAL ( str )		333004	0		-			
ANR	333116	Identifier	p		333004	0					
ANR	333117	CastExpression	( unsigned char * ) ZSTR_VAL ( str )		333004	1					
ANR	333118	CastTarget	unsigned char *		333004	0					
ANR	333119	CallExpression	ZSTR_VAL ( str )		333004	1					
ANR	333120	Callee	ZSTR_VAL		333004	0					
ANR	333121	Identifier	ZSTR_VAL		333004	0					
ANR	333122	ArgumentList	str		333004	1					
ANR	333123	Argument	str		333004	0					
ANR	333124	Identifier	str		333004	0					
ANR	333125	ExpressionStatement	r = p + ( ZSTR_VAL ( res ) - ZSTR_VAL ( str ) )	2486:3:63693:63732	333004	4	True				
ANR	333126	AssignmentExpression	r = p + ( ZSTR_VAL ( res ) - ZSTR_VAL ( str ) )		333004	0		=			
ANR	333127	Identifier	r		333004	0					
ANR	333128	AdditiveExpression	p + ( ZSTR_VAL ( res ) - ZSTR_VAL ( str ) )		333004	1		+			
ANR	333129	Identifier	p		333004	0					
ANR	333130	AdditiveExpression	ZSTR_VAL ( res ) - ZSTR_VAL ( str )		333004	1		-			
ANR	333131	CallExpression	ZSTR_VAL ( res )		333004	0					
ANR	333132	Callee	ZSTR_VAL		333004	0					
ANR	333133	Identifier	ZSTR_VAL		333004	0					
ANR	333134	ArgumentList	res		333004	1					
ANR	333135	Argument	res		333004	0					
ANR	333136	Identifier	res		333004	0					
ANR	333137	CallExpression	ZSTR_VAL ( str )		333004	1					
ANR	333138	Callee	ZSTR_VAL		333004	0					
ANR	333139	Identifier	ZSTR_VAL		333004	0					
ANR	333140	ArgumentList	str		333004	1					
ANR	333141	Argument	str		333004	0					
ANR	333142	Identifier	str		333004	0					
ANR	333143	WhileStatement	while ( p < end )		333004	5					
ANR	333144	Condition	p < end	2487:10:63744:63750	333004	0	True				
ANR	333145	RelationalExpression	p < end		333004	0		<			
ANR	333146	Identifier	p		333004	0					
ANR	333147	Identifier	end		333004	1					
ANR	333148	CompoundStatement		14:19:449:449	333004	1					
ANR	333149	ExpressionStatement	* r = zend_tolower_ascii ( * p )	2488:4:63759:63786	333004	0	True				
ANR	333150	AssignmentExpression	* r = zend_tolower_ascii ( * p )		333004	0		=			
ANR	333151	UnaryOperationExpression	* r		333004	0					
ANR	333152	UnaryOperator	*		333004	0					
ANR	333153	Identifier	r		333004	1					
ANR	333154	CallExpression	zend_tolower_ascii ( * p )		333004	1					
ANR	333155	Callee	zend_tolower_ascii		333004	0					
ANR	333156	Identifier	zend_tolower_ascii		333004	0					
ANR	333157	ArgumentList	* p		333004	1					
ANR	333158	Argument	* p		333004	0					
ANR	333159	UnaryOperationExpression	* p		333004	0					
ANR	333160	UnaryOperator	*		333004	0					
ANR	333161	Identifier	p		333004	1					
ANR	333162	ExpressionStatement	p ++	2489:4:63792:63795	333004	1	True				
ANR	333163	PostIncDecOperationExpression	p ++		333004	0					
ANR	333164	Identifier	p		333004	0					
ANR	333165	IncDec	++		333004	1					
ANR	333166	ExpressionStatement	r ++	2490:4:63801:63804	333004	2	True				
ANR	333167	PostIncDecOperationExpression	r ++		333004	0					
ANR	333168	Identifier	r		333004	0					
ANR	333169	IncDec	++		333004	1					
ANR	333170	ExpressionStatement	* r = '\\0'	2492:3:63814:63823	333004	6	True				
ANR	333171	AssignmentExpression	* r = '\\0'		333004	0		=			
ANR	333172	UnaryOperationExpression	* r		333004	0					
ANR	333173	UnaryOperator	*		333004	0					
ANR	333174	Identifier	r		333004	1					
ANR	333175	PrimaryExpression	'\\0'		333004	1					
ANR	333176	ReturnStatement	return res ;	2493:3:63828:63838	333004	7	True				
ANR	333177	Identifier	res		333004	0					
ANR	333178	ExpressionStatement	p ++	2495:2:63846:63849	333004	1	True				
ANR	333179	PostIncDecOperationExpression	p ++		333004	0					
ANR	333180	Identifier	p		333004	0					
ANR	333181	IncDec	++		333004	1					
ANR	333182	ReturnStatement	return zend_string_copy ( str ) ;	2497:1:63855:63883	333004	5	True				
ANR	333183	CallExpression	zend_string_copy ( str )		333004	0					
ANR	333184	Callee	zend_string_copy		333004	0					
ANR	333185	Identifier	zend_string_copy		333004	0					
ANR	333186	ArgumentList	str		333004	1					
ANR	333187	Argument	str		333004	0					
ANR	333188	Identifier	str		333004	0					
ANR	333189	ReturnType	ZEND_FASTCALL		333004	1					
ANR	333190	Identifier	zend_string_tolower		333004	2					
ANR	333191	ParameterList	zend_string * str		333004	3					
ANR	333192	Parameter	zend_string * str	2473:56:63275:63290	333004	0	True				
ANR	333193	ParameterType	zend_string *		333004	0					
ANR	333194	Identifier	str		333004	1					
ANR	333195	CFGEntryNode	ENTRY		333004		True				
ANR	333196	CFGExitNode	EXIT		333004		True				
ANR	333197	Symbol	str		333004						
ANR	333198	Symbol	p		333004						
ANR	333199	Symbol	res		333004						
ANR	333200	Symbol	zend_string_alloc		333004						
ANR	333201	Symbol	r		333004						
ANR	333202	Symbol	zend_tolower_ascii		333004						
ANR	333203	Symbol	ZSTR_LEN		333004						
ANR	333204	Symbol	end		333004						
ANR	333205	Symbol	* p		333004						
ANR	333206	Symbol	zend_string_copy		333004						
ANR	333207	Symbol	* r		333004						
ANR	333208	Symbol	ZSTR_VAL		333004						
ANR	333209	Function	zend_binary_strcmp	2501:0:63898:64178							
ANR	333210	FunctionDef	"zend_binary_strcmp (const char * s1 , size_t len1 , const char * s2 , size_t len2)"		333209	0					
ANR	333211	CompoundStatement		2502:0:64012:64178	333209	0					
ANR	333212	IdentifierDeclStatement	int retval ;	2503:1:64015:64025	333209	0	True				
ANR	333213	IdentifierDecl	retval		333209	0					
ANR	333214	IdentifierDeclType	int		333209	0					
ANR	333215	Identifier	retval		333209	1					
ANR	333216	IfStatement	if ( s1 == s2 )		333209	1					
ANR	333217	Condition	s1 == s2	2505:5:64033:64040	333209	0	True				
ANR	333218	EqualityExpression	s1 == s2		333209	0		==			
ANR	333219	Identifier	s1		333209	0					
ANR	333220	Identifier	s2		333209	1					
ANR	333221	CompoundStatement		4:15:30:30	333209	1					
ANR	333222	ReturnStatement	return 0 ;	2506:2:64047:64055	333209	0	True				
ANR	333223	PrimaryExpression	0		333209	0					
ANR	333224	ExpressionStatement	"retval = memcmp ( s1 , s2 , MIN ( len1 , len2 ) )"	2508:1:64061:64101	333209	2	True				
ANR	333225	AssignmentExpression	"retval = memcmp ( s1 , s2 , MIN ( len1 , len2 ) )"		333209	0		=			
ANR	333226	Identifier	retval		333209	0					
ANR	333227	CallExpression	"memcmp ( s1 , s2 , MIN ( len1 , len2 ) )"		333209	1					
ANR	333228	Callee	memcmp		333209	0					
ANR	333229	Identifier	memcmp		333209	0					
ANR	333230	ArgumentList	s1		333209	1					
ANR	333231	Argument	s1		333209	0					
ANR	333232	Identifier	s1		333209	0					
ANR	333233	Argument	s2		333209	1					
ANR	333234	Identifier	s2		333209	0					
ANR	333235	Argument	"MIN ( len1 , len2 )"		333209	2					
ANR	333236	CallExpression	"MIN ( len1 , len2 )"		333209	0					
ANR	333237	Callee	MIN		333209	0					
ANR	333238	Identifier	MIN		333209	0					
ANR	333239	ArgumentList	len1		333209	1					
ANR	333240	Argument	len1		333209	0					
ANR	333241	Identifier	len1		333209	0					
ANR	333242	Argument	len2		333209	1					
ANR	333243	Identifier	len2		333209	0					
ANR	333244	IfStatement	if ( ! retval )		333209	3					
ANR	333245	Condition	! retval	2509:5:64108:64114	333209	0	True				
ANR	333246	UnaryOperationExpression	! retval		333209	0					
ANR	333247	UnaryOperator	!		333209	0					
ANR	333248	Identifier	retval		333209	1					
ANR	333249	CompoundStatement		8:14:104:104	333209	1					
ANR	333250	ReturnStatement	return ( int ) ( len1 - len2 ) ;	2510:2:64121:64146	333209	0	True				
ANR	333251	CastExpression	( int ) ( len1 - len2 )		333209	0					
ANR	333252	CastTarget	int		333209	0					
ANR	333253	AdditiveExpression	len1 - len2		333209	1		-			
ANR	333254	Identifier	len1		333209	0					
ANR	333255	Identifier	len2		333209	1					
ANR	333256	ElseStatement	else		333209	0					
ANR	333257	CompoundStatement		10:8:143:143	333209	0					
ANR	333258	ReturnStatement	return retval ;	2512:2:64160:64173	333209	0	True				
ANR	333259	Identifier	retval		333209	0					
ANR	333260	ReturnType	ZEND_API int ZEND_FASTCALL		333209	1					
ANR	333261	Identifier	zend_binary_strcmp		333209	2					
ANR	333262	ParameterList	"const char * s1 , size_t len1 , const char * s2 , size_t len2"		333209	3					
ANR	333263	Parameter	const char * s1	2501:46:63944:63957	333209	0	True				
ANR	333264	ParameterType	const char *		333209	0					
ANR	333265	Identifier	s1		333209	1					
ANR	333266	Parameter	size_t len1	2501:62:63960:63970	333209	1	True				
ANR	333267	ParameterType	size_t		333209	0					
ANR	333268	Identifier	len1		333209	1					
ANR	333269	Parameter	const char * s2	2501:75:63973:63986	333209	2	True				
ANR	333270	ParameterType	const char *		333209	0					
ANR	333271	Identifier	s2		333209	1					
ANR	333272	Parameter	size_t len2	2501:91:63989:63999	333209	3	True				
ANR	333273	ParameterType	size_t		333209	0					
ANR	333274	Identifier	len2		333209	1					
ANR	333275	CFGEntryNode	ENTRY		333209		True				
ANR	333276	CFGExitNode	EXIT		333209		True				
ANR	333277	Symbol	MIN		333209						
ANR	333278	Symbol	memcmp		333209						
ANR	333279	Symbol	s1		333209						
ANR	333280	Symbol	len1		333209						
ANR	333281	Symbol	retval		333209						
ANR	333282	Symbol	s2		333209						
ANR	333283	Symbol	len2		333209						
ANR	333284	Function	zend_binary_strncmp	2517:0:64191:64526							
ANR	333285	FunctionDef	"zend_binary_strncmp (const char * s1 , size_t len1 , const char * s2 , size_t len2 , size_t length)"		333284	0					
ANR	333286	CompoundStatement		2518:0:64321:64526	333284	0					
ANR	333287	IdentifierDeclStatement	int retval ;	2519:1:64324:64334	333284	0	True				
ANR	333288	IdentifierDecl	retval		333284	0					
ANR	333289	IdentifierDeclType	int		333284	0					
ANR	333290	Identifier	retval		333284	1					
ANR	333291	IfStatement	if ( s1 == s2 )		333284	1					
ANR	333292	Condition	s1 == s2	2521:5:64342:64349	333284	0	True				
ANR	333293	EqualityExpression	s1 == s2		333284	0		==			
ANR	333294	Identifier	s1		333284	0					
ANR	333295	Identifier	s2		333284	1					
ANR	333296	CompoundStatement		4:15:30:30	333284	1					
ANR	333297	ReturnStatement	return 0 ;	2522:2:64356:64364	333284	0	True				
ANR	333298	PrimaryExpression	0		333284	0					
ANR	333299	ExpressionStatement	"retval = memcmp ( s1 , s2 , MIN ( length , MIN ( len1 , len2 ) ) )"	2524:1:64370:64423	333284	2	True				
ANR	333300	AssignmentExpression	"retval = memcmp ( s1 , s2 , MIN ( length , MIN ( len1 , len2 ) ) )"		333284	0		=			
ANR	333301	Identifier	retval		333284	0					
ANR	333302	CallExpression	"memcmp ( s1 , s2 , MIN ( length , MIN ( len1 , len2 ) ) )"		333284	1					
ANR	333303	Callee	memcmp		333284	0					
ANR	333304	Identifier	memcmp		333284	0					
ANR	333305	ArgumentList	s1		333284	1					
ANR	333306	Argument	s1		333284	0					
ANR	333307	Identifier	s1		333284	0					
ANR	333308	Argument	s2		333284	1					
ANR	333309	Identifier	s2		333284	0					
ANR	333310	Argument	"MIN ( length , MIN ( len1 , len2 ) )"		333284	2					
ANR	333311	CallExpression	"MIN ( length , MIN ( len1 , len2 ) )"		333284	0					
ANR	333312	Callee	MIN		333284	0					
ANR	333313	Identifier	MIN		333284	0					
ANR	333314	ArgumentList	length		333284	1					
ANR	333315	Argument	length		333284	0					
ANR	333316	Identifier	length		333284	0					
ANR	333317	Argument	"MIN ( len1 , len2 )"		333284	1					
ANR	333318	CallExpression	"MIN ( len1 , len2 )"		333284	0					
ANR	333319	Callee	MIN		333284	0					
ANR	333320	Identifier	MIN		333284	0					
ANR	333321	ArgumentList	len1		333284	1					
ANR	333322	Argument	len1		333284	0					
ANR	333323	Identifier	len1		333284	0					
ANR	333324	Argument	len2		333284	1					
ANR	333325	Identifier	len2		333284	0					
ANR	333326	IfStatement	if ( ! retval )		333284	3					
ANR	333327	Condition	! retval	2525:5:64430:64436	333284	0	True				
ANR	333328	UnaryOperationExpression	! retval		333284	0					
ANR	333329	UnaryOperator	!		333284	0					
ANR	333330	Identifier	retval		333284	1					
ANR	333331	CompoundStatement		8:14:117:117	333284	1					
ANR	333332	ReturnStatement	"return ( int ) ( MIN ( length , len1 ) - MIN ( length , len2 ) ) ;"	2526:2:64443:64494	333284	0	True				
ANR	333333	CastExpression	"( int ) ( MIN ( length , len1 ) - MIN ( length , len2 ) )"		333284	0					
ANR	333334	CastTarget	int		333284	0					
ANR	333335	AdditiveExpression	"MIN ( length , len1 ) - MIN ( length , len2 )"		333284	1		-			
ANR	333336	CallExpression	"MIN ( length , len1 )"		333284	0					
ANR	333337	Callee	MIN		333284	0					
ANR	333338	Identifier	MIN		333284	0					
ANR	333339	ArgumentList	length		333284	1					
ANR	333340	Argument	length		333284	0					
ANR	333341	Identifier	length		333284	0					
ANR	333342	Argument	len1		333284	1					
ANR	333343	Identifier	len1		333284	0					
ANR	333344	CallExpression	"MIN ( length , len2 )"		333284	1					
ANR	333345	Callee	MIN		333284	0					
ANR	333346	Identifier	MIN		333284	0					
ANR	333347	ArgumentList	length		333284	1					
ANR	333348	Argument	length		333284	0					
ANR	333349	Identifier	length		333284	0					
ANR	333350	Argument	len2		333284	1					
ANR	333351	Identifier	len2		333284	0					
ANR	333352	ElseStatement	else		333284	0					
ANR	333353	CompoundStatement		10:8:182:182	333284	0					
ANR	333354	ReturnStatement	return retval ;	2528:2:64508:64521	333284	0	True				
ANR	333355	Identifier	retval		333284	0					
ANR	333356	ReturnType	ZEND_API int ZEND_FASTCALL		333284	1					
ANR	333357	Identifier	zend_binary_strncmp		333284	2					
ANR	333358	ParameterList	"const char * s1 , size_t len1 , const char * s2 , size_t len2 , size_t length"		333284	3					
ANR	333359	Parameter	const char * s1	2517:47:64238:64251	333284	0	True				
ANR	333360	ParameterType	const char *		333284	0					
ANR	333361	Identifier	s1		333284	1					
ANR	333362	Parameter	size_t len1	2517:63:64254:64264	333284	1	True				
ANR	333363	ParameterType	size_t		333284	0					
ANR	333364	Identifier	len1		333284	1					
ANR	333365	Parameter	const char * s2	2517:76:64267:64280	333284	2	True				
ANR	333366	ParameterType	const char *		333284	0					
ANR	333367	Identifier	s2		333284	1					
ANR	333368	Parameter	size_t len2	2517:92:64283:64293	333284	3	True				
ANR	333369	ParameterType	size_t		333284	0					
ANR	333370	Identifier	len2		333284	1					
ANR	333371	Parameter	size_t length	2517:105:64296:64308	333284	4	True				
ANR	333372	ParameterType	size_t		333284	0					
ANR	333373	Identifier	length		333284	1					
ANR	333374	CFGEntryNode	ENTRY		333284		True				
ANR	333375	CFGExitNode	EXIT		333284		True				
ANR	333376	Symbol	MIN		333284						
ANR	333377	Symbol	memcmp		333284						
ANR	333378	Symbol	length		333284						
ANR	333379	Symbol	s1		333284						
ANR	333380	Symbol	len1		333284						
ANR	333381	Symbol	retval		333284						
ANR	333382	Symbol	s2		333284						
ANR	333383	Symbol	len2		333284						
ANR	333384	Function	zend_binary_strcasecmp	2533:0:64539:64935							
ANR	333385	FunctionDef	"zend_binary_strcasecmp (const char * s1 , size_t len1 , const char * s2 , size_t len2)"		333384	0					
ANR	333386	CompoundStatement		2534:0:64657:64935	333384	0					
ANR	333387	IdentifierDeclStatement	size_t len ;	2535:1:64660:64670	333384	0	True				
ANR	333388	IdentifierDecl	len		333384	0					
ANR	333389	IdentifierDeclType	size_t		333384	0					
ANR	333390	Identifier	len		333384	1					
ANR	333391	IdentifierDeclStatement	"int c1 , c2 ;"	2536:1:64673:64683	333384	1	True				
ANR	333392	IdentifierDecl	c1		333384	0					
ANR	333393	IdentifierDeclType	int		333384	0					
ANR	333394	Identifier	c1		333384	1					
ANR	333395	IdentifierDecl	c2		333384	1					
ANR	333396	IdentifierDeclType	int		333384	0					
ANR	333397	Identifier	c2		333384	1					
ANR	333398	IfStatement	if ( s1 == s2 )		333384	2					
ANR	333399	Condition	s1 == s2	2538:5:64691:64698	333384	0	True				
ANR	333400	EqualityExpression	s1 == s2		333384	0		==			
ANR	333401	Identifier	s1		333384	0					
ANR	333402	Identifier	s2		333384	1					
ANR	333403	CompoundStatement		5:15:43:43	333384	1					
ANR	333404	ReturnStatement	return 0 ;	2539:2:64705:64713	333384	0	True				
ANR	333405	PrimaryExpression	0		333384	0					
ANR	333406	ExpressionStatement	"len = MIN ( len1 , len2 )"	2542:1:64720:64741	333384	3	True				
ANR	333407	AssignmentExpression	"len = MIN ( len1 , len2 )"		333384	0		=			
ANR	333408	Identifier	len		333384	0					
ANR	333409	CallExpression	"MIN ( len1 , len2 )"		333384	1					
ANR	333410	Callee	MIN		333384	0					
ANR	333411	Identifier	MIN		333384	0					
ANR	333412	ArgumentList	len1		333384	1					
ANR	333413	Argument	len1		333384	0					
ANR	333414	Identifier	len1		333384	0					
ANR	333415	Argument	len2		333384	1					
ANR	333416	Identifier	len2		333384	0					
ANR	333417	WhileStatement	while ( len -- )		333384	4					
ANR	333418	Condition	len --	2543:8:64751:64755	333384	0	True				
ANR	333419	PostIncDecOperationExpression	len --		333384	0					
ANR	333420	Identifier	len		333384	0					
ANR	333421	IncDec	--		333384	1					
ANR	333422	CompoundStatement		10:15:100:100	333384	1					
ANR	333423	ExpressionStatement	c1 = zend_tolower_ascii ( * ( unsigned char * ) s1 ++ )	2544:2:64762:64809	333384	0	True				
ANR	333424	AssignmentExpression	c1 = zend_tolower_ascii ( * ( unsigned char * ) s1 ++ )		333384	0		=			
ANR	333425	Identifier	c1		333384	0					
ANR	333426	CallExpression	zend_tolower_ascii ( * ( unsigned char * ) s1 ++ )		333384	1					
ANR	333427	Callee	zend_tolower_ascii		333384	0					
ANR	333428	Identifier	zend_tolower_ascii		333384	0					
ANR	333429	ArgumentList	* ( unsigned char * ) s1 ++		333384	1					
ANR	333430	Argument	* ( unsigned char * ) s1 ++		333384	0					
ANR	333431	UnaryOperationExpression	* ( unsigned char * ) s1 ++		333384	0					
ANR	333432	UnaryOperator	*		333384	0					
ANR	333433	CastExpression	( unsigned char * ) s1 ++		333384	1					
ANR	333434	CastTarget	unsigned char *		333384	0					
ANR	333435	PostIncDecOperationExpression	s1 ++		333384	1					
ANR	333436	Identifier	s1		333384	0					
ANR	333437	IncDec	++		333384	1					
ANR	333438	ExpressionStatement	c2 = zend_tolower_ascii ( * ( unsigned char * ) s2 ++ )	2545:2:64813:64860	333384	1	True				
ANR	333439	AssignmentExpression	c2 = zend_tolower_ascii ( * ( unsigned char * ) s2 ++ )		333384	0		=			
ANR	333440	Identifier	c2		333384	0					
ANR	333441	CallExpression	zend_tolower_ascii ( * ( unsigned char * ) s2 ++ )		333384	1					
ANR	333442	Callee	zend_tolower_ascii		333384	0					
ANR	333443	Identifier	zend_tolower_ascii		333384	0					
ANR	333444	ArgumentList	* ( unsigned char * ) s2 ++		333384	1					
ANR	333445	Argument	* ( unsigned char * ) s2 ++		333384	0					
ANR	333446	UnaryOperationExpression	* ( unsigned char * ) s2 ++		333384	0					
ANR	333447	UnaryOperator	*		333384	0					
ANR	333448	CastExpression	( unsigned char * ) s2 ++		333384	1					
ANR	333449	CastTarget	unsigned char *		333384	0					
ANR	333450	PostIncDecOperationExpression	s2 ++		333384	1					
ANR	333451	Identifier	s2		333384	0					
ANR	333452	IncDec	++		333384	1					
ANR	333453	IfStatement	if ( c1 != c2 )		333384	2					
ANR	333454	Condition	c1 != c2	2546:6:64868:64875	333384	0	True				
ANR	333455	EqualityExpression	c1 != c2		333384	0		!=			
ANR	333456	Identifier	c1		333384	0					
ANR	333457	Identifier	c2		333384	1					
ANR	333458	CompoundStatement		13:16:220:220	333384	1					
ANR	333459	ReturnStatement	return c1 - c2 ;	2547:3:64883:64897	333384	0	True				
ANR	333460	AdditiveExpression	c1 - c2		333384	0		-			
ANR	333461	Identifier	c1		333384	0					
ANR	333462	Identifier	c2		333384	1					
ANR	333463	ReturnStatement	return ( int ) ( len1 - len2 ) ;	2551:1:64908:64933	333384	5	True				
ANR	333464	CastExpression	( int ) ( len1 - len2 )		333384	0					
ANR	333465	CastTarget	int		333384	0					
ANR	333466	AdditiveExpression	len1 - len2		333384	1		-			
ANR	333467	Identifier	len1		333384	0					
ANR	333468	Identifier	len2		333384	1					
ANR	333469	ReturnType	ZEND_API int ZEND_FASTCALL		333384	1					
ANR	333470	Identifier	zend_binary_strcasecmp		333384	2					
ANR	333471	ParameterList	"const char * s1 , size_t len1 , const char * s2 , size_t len2"		333384	3					
ANR	333472	Parameter	const char * s1	2533:50:64589:64602	333384	0	True				
ANR	333473	ParameterType	const char *		333384	0					
ANR	333474	Identifier	s1		333384	1					
ANR	333475	Parameter	size_t len1	2533:66:64605:64615	333384	1	True				
ANR	333476	ParameterType	size_t		333384	0					
ANR	333477	Identifier	len1		333384	1					
ANR	333478	Parameter	const char * s2	2533:79:64618:64631	333384	2	True				
ANR	333479	ParameterType	const char *		333384	0					
ANR	333480	Identifier	s2		333384	1					
ANR	333481	Parameter	size_t len2	2533:95:64634:64644	333384	3	True				
ANR	333482	ParameterType	size_t		333384	0					
ANR	333483	Identifier	len2		333384	1					
ANR	333484	CFGEntryNode	ENTRY		333384		True				
ANR	333485	CFGExitNode	EXIT		333384		True				
ANR	333486	Symbol	MIN		333384						
ANR	333487	Symbol	zend_tolower_ascii		333384						
ANR	333488	Symbol	len		333384						
ANR	333489	Symbol	* ( unsigned char * ) s2 ++		333384						
ANR	333490	Symbol	* ( unsigned char * ) s1 ++		333384						
ANR	333491	Symbol	s1		333384						
ANR	333492	Symbol	len1		333384						
ANR	333493	Symbol	c1		333384						
ANR	333494	Symbol	s2		333384						
ANR	333495	Symbol	len2		333384						
ANR	333496	Symbol	c2		333384						
ANR	333497	Function	zend_binary_strncasecmp	2555:0:64948:65398							
ANR	333498	FunctionDef	"zend_binary_strncasecmp (const char * s1 , size_t len1 , const char * s2 , size_t len2 , size_t length)"		333497	0					
ANR	333499	CompoundStatement		2556:0:65082:65398	333497	0					
ANR	333500	IdentifierDeclStatement	size_t len ;	2557:1:65085:65095	333497	0	True				
ANR	333501	IdentifierDecl	len		333497	0					
ANR	333502	IdentifierDeclType	size_t		333497	0					
ANR	333503	Identifier	len		333497	1					
ANR	333504	IdentifierDeclStatement	"int c1 , c2 ;"	2558:1:65098:65108	333497	1	True				
ANR	333505	IdentifierDecl	c1		333497	0					
ANR	333506	IdentifierDeclType	int		333497	0					
ANR	333507	Identifier	c1		333497	1					
ANR	333508	IdentifierDecl	c2		333497	1					
ANR	333509	IdentifierDeclType	int		333497	0					
ANR	333510	Identifier	c2		333497	1					
ANR	333511	IfStatement	if ( s1 == s2 )		333497	2					
ANR	333512	Condition	s1 == s2	2560:5:65116:65123	333497	0	True				
ANR	333513	EqualityExpression	s1 == s2		333497	0		==			
ANR	333514	Identifier	s1		333497	0					
ANR	333515	Identifier	s2		333497	1					
ANR	333516	CompoundStatement		5:15:43:43	333497	1					
ANR	333517	ReturnStatement	return 0 ;	2561:2:65130:65138	333497	0	True				
ANR	333518	PrimaryExpression	0		333497	0					
ANR	333519	ExpressionStatement	"len = MIN ( length , MIN ( len1 , len2 ) )"	2563:1:65144:65178	333497	3	True				
ANR	333520	AssignmentExpression	"len = MIN ( length , MIN ( len1 , len2 ) )"		333497	0		=			
ANR	333521	Identifier	len		333497	0					
ANR	333522	CallExpression	"MIN ( length , MIN ( len1 , len2 ) )"		333497	1					
ANR	333523	Callee	MIN		333497	0					
ANR	333524	Identifier	MIN		333497	0					
ANR	333525	ArgumentList	length		333497	1					
ANR	333526	Argument	length		333497	0					
ANR	333527	Identifier	length		333497	0					
ANR	333528	Argument	"MIN ( len1 , len2 )"		333497	1					
ANR	333529	CallExpression	"MIN ( len1 , len2 )"		333497	0					
ANR	333530	Callee	MIN		333497	0					
ANR	333531	Identifier	MIN		333497	0					
ANR	333532	ArgumentList	len1		333497	1					
ANR	333533	Argument	len1		333497	0					
ANR	333534	Identifier	len1		333497	0					
ANR	333535	Argument	len2		333497	1					
ANR	333536	Identifier	len2		333497	0					
ANR	333537	WhileStatement	while ( len -- )		333497	4					
ANR	333538	Condition	len --	2564:8:65188:65192	333497	0	True				
ANR	333539	PostIncDecOperationExpression	len --		333497	0					
ANR	333540	Identifier	len		333497	0					
ANR	333541	IncDec	--		333497	1					
ANR	333542	CompoundStatement		9:15:112:112	333497	1					
ANR	333543	ExpressionStatement	c1 = zend_tolower_ascii ( * ( unsigned char * ) s1 ++ )	2565:2:65199:65246	333497	0	True				
ANR	333544	AssignmentExpression	c1 = zend_tolower_ascii ( * ( unsigned char * ) s1 ++ )		333497	0		=			
ANR	333545	Identifier	c1		333497	0					
ANR	333546	CallExpression	zend_tolower_ascii ( * ( unsigned char * ) s1 ++ )		333497	1					
ANR	333547	Callee	zend_tolower_ascii		333497	0					
ANR	333548	Identifier	zend_tolower_ascii		333497	0					
ANR	333549	ArgumentList	* ( unsigned char * ) s1 ++		333497	1					
ANR	333550	Argument	* ( unsigned char * ) s1 ++		333497	0					
ANR	333551	UnaryOperationExpression	* ( unsigned char * ) s1 ++		333497	0					
ANR	333552	UnaryOperator	*		333497	0					
ANR	333553	CastExpression	( unsigned char * ) s1 ++		333497	1					
ANR	333554	CastTarget	unsigned char *		333497	0					
ANR	333555	PostIncDecOperationExpression	s1 ++		333497	1					
ANR	333556	Identifier	s1		333497	0					
ANR	333557	IncDec	++		333497	1					
ANR	333558	ExpressionStatement	c2 = zend_tolower_ascii ( * ( unsigned char * ) s2 ++ )	2566:2:65250:65297	333497	1	True				
ANR	333559	AssignmentExpression	c2 = zend_tolower_ascii ( * ( unsigned char * ) s2 ++ )		333497	0		=			
ANR	333560	Identifier	c2		333497	0					
ANR	333561	CallExpression	zend_tolower_ascii ( * ( unsigned char * ) s2 ++ )		333497	1					
ANR	333562	Callee	zend_tolower_ascii		333497	0					
ANR	333563	Identifier	zend_tolower_ascii		333497	0					
ANR	333564	ArgumentList	* ( unsigned char * ) s2 ++		333497	1					
ANR	333565	Argument	* ( unsigned char * ) s2 ++		333497	0					
ANR	333566	UnaryOperationExpression	* ( unsigned char * ) s2 ++		333497	0					
ANR	333567	UnaryOperator	*		333497	0					
ANR	333568	CastExpression	( unsigned char * ) s2 ++		333497	1					
ANR	333569	CastTarget	unsigned char *		333497	0					
ANR	333570	PostIncDecOperationExpression	s2 ++		333497	1					
ANR	333571	Identifier	s2		333497	0					
ANR	333572	IncDec	++		333497	1					
ANR	333573	IfStatement	if ( c1 != c2 )		333497	2					
ANR	333574	Condition	c1 != c2	2567:6:65305:65312	333497	0	True				
ANR	333575	EqualityExpression	c1 != c2		333497	0		!=			
ANR	333576	Identifier	c1		333497	0					
ANR	333577	Identifier	c2		333497	1					
ANR	333578	CompoundStatement		12:16:232:232	333497	1					
ANR	333579	ReturnStatement	return c1 - c2 ;	2568:3:65320:65334	333497	0	True				
ANR	333580	AdditiveExpression	c1 - c2		333497	0		-			
ANR	333581	Identifier	c1		333497	0					
ANR	333582	Identifier	c2		333497	1					
ANR	333583	ReturnStatement	"return ( int ) ( MIN ( length , len1 ) - MIN ( length , len2 ) ) ;"	2572:1:65345:65396	333497	5	True				
ANR	333584	CastExpression	"( int ) ( MIN ( length , len1 ) - MIN ( length , len2 ) )"		333497	0					
ANR	333585	CastTarget	int		333497	0					
ANR	333586	AdditiveExpression	"MIN ( length , len1 ) - MIN ( length , len2 )"		333497	1		-			
ANR	333587	CallExpression	"MIN ( length , len1 )"		333497	0					
ANR	333588	Callee	MIN		333497	0					
ANR	333589	Identifier	MIN		333497	0					
ANR	333590	ArgumentList	length		333497	1					
ANR	333591	Argument	length		333497	0					
ANR	333592	Identifier	length		333497	0					
ANR	333593	Argument	len1		333497	1					
ANR	333594	Identifier	len1		333497	0					
ANR	333595	CallExpression	"MIN ( length , len2 )"		333497	1					
ANR	333596	Callee	MIN		333497	0					
ANR	333597	Identifier	MIN		333497	0					
ANR	333598	ArgumentList	length		333497	1					
ANR	333599	Argument	length		333497	0					
ANR	333600	Identifier	length		333497	0					
ANR	333601	Argument	len2		333497	1					
ANR	333602	Identifier	len2		333497	0					
ANR	333603	ReturnType	ZEND_API int ZEND_FASTCALL		333497	1					
ANR	333604	Identifier	zend_binary_strncasecmp		333497	2					
ANR	333605	ParameterList	"const char * s1 , size_t len1 , const char * s2 , size_t len2 , size_t length"		333497	3					
ANR	333606	Parameter	const char * s1	2555:51:64999:65012	333497	0	True				
ANR	333607	ParameterType	const char *		333497	0					
ANR	333608	Identifier	s1		333497	1					
ANR	333609	Parameter	size_t len1	2555:67:65015:65025	333497	1	True				
ANR	333610	ParameterType	size_t		333497	0					
ANR	333611	Identifier	len1		333497	1					
ANR	333612	Parameter	const char * s2	2555:80:65028:65041	333497	2	True				
ANR	333613	ParameterType	const char *		333497	0					
ANR	333614	Identifier	s2		333497	1					
ANR	333615	Parameter	size_t len2	2555:96:65044:65054	333497	3	True				
ANR	333616	ParameterType	size_t		333497	0					
ANR	333617	Identifier	len2		333497	1					
ANR	333618	Parameter	size_t length	2555:109:65057:65069	333497	4	True				
ANR	333619	ParameterType	size_t		333497	0					
ANR	333620	Identifier	length		333497	1					
ANR	333621	CFGEntryNode	ENTRY		333497		True				
ANR	333622	CFGExitNode	EXIT		333497		True				
ANR	333623	Symbol	MIN		333497						
ANR	333624	Symbol	zend_tolower_ascii		333497						
ANR	333625	Symbol	len		333497						
ANR	333626	Symbol	* ( unsigned char * ) s2 ++		333497						
ANR	333627	Symbol	length		333497						
ANR	333628	Symbol	* ( unsigned char * ) s1 ++		333497						
ANR	333629	Symbol	s1		333497						
ANR	333630	Symbol	len1		333497						
ANR	333631	Symbol	c1		333497						
ANR	333632	Symbol	s2		333497						
ANR	333633	Symbol	len2		333497						
ANR	333634	Symbol	c2		333497						
ANR	333635	Function	zend_binary_strcasecmp_l	2576:0:65411:65807							
ANR	333636	FunctionDef	"zend_binary_strcasecmp_l (const char * s1 , size_t len1 , const char * s2 , size_t len2)"		333635	0					
ANR	333637	CompoundStatement		2577:0:65531:65807	333635	0					
ANR	333638	IdentifierDeclStatement	size_t len ;	2578:1:65534:65544	333635	0	True				
ANR	333639	IdentifierDecl	len		333635	0					
ANR	333640	IdentifierDeclType	size_t		333635	0					
ANR	333641	Identifier	len		333635	1					
ANR	333642	IdentifierDeclStatement	"int c1 , c2 ;"	2579:1:65547:65557	333635	1	True				
ANR	333643	IdentifierDecl	c1		333635	0					
ANR	333644	IdentifierDeclType	int		333635	0					
ANR	333645	Identifier	c1		333635	1					
ANR	333646	IdentifierDecl	c2		333635	1					
ANR	333647	IdentifierDeclType	int		333635	0					
ANR	333648	Identifier	c2		333635	1					
ANR	333649	IfStatement	if ( s1 == s2 )		333635	2					
ANR	333650	Condition	s1 == s2	2581:5:65565:65572	333635	0	True				
ANR	333651	EqualityExpression	s1 == s2		333635	0		==			
ANR	333652	Identifier	s1		333635	0					
ANR	333653	Identifier	s2		333635	1					
ANR	333654	CompoundStatement		5:15:43:43	333635	1					
ANR	333655	ReturnStatement	return 0 ;	2582:2:65579:65587	333635	0	True				
ANR	333656	PrimaryExpression	0		333635	0					
ANR	333657	ExpressionStatement	"len = MIN ( len1 , len2 )"	2585:1:65594:65615	333635	3	True				
ANR	333658	AssignmentExpression	"len = MIN ( len1 , len2 )"		333635	0		=			
ANR	333659	Identifier	len		333635	0					
ANR	333660	CallExpression	"MIN ( len1 , len2 )"		333635	1					
ANR	333661	Callee	MIN		333635	0					
ANR	333662	Identifier	MIN		333635	0					
ANR	333663	ArgumentList	len1		333635	1					
ANR	333664	Argument	len1		333635	0					
ANR	333665	Identifier	len1		333635	0					
ANR	333666	Argument	len2		333635	1					
ANR	333667	Identifier	len2		333635	0					
ANR	333668	WhileStatement	while ( len -- )		333635	4					
ANR	333669	Condition	len --	2586:8:65625:65629	333635	0	True				
ANR	333670	PostIncDecOperationExpression	len --		333635	0					
ANR	333671	Identifier	len		333635	0					
ANR	333672	IncDec	--		333635	1					
ANR	333673	CompoundStatement		10:15:100:100	333635	1					
ANR	333674	ExpressionStatement	c1 = zend_tolower ( ( int ) * ( unsigned char * ) s1 ++ )	2587:2:65636:65682	333635	0	True				
ANR	333675	AssignmentExpression	c1 = zend_tolower ( ( int ) * ( unsigned char * ) s1 ++ )		333635	0		=			
ANR	333676	Identifier	c1		333635	0					
ANR	333677	CallExpression	zend_tolower ( ( int ) * ( unsigned char * ) s1 ++ )		333635	1					
ANR	333678	Callee	zend_tolower		333635	0					
ANR	333679	Identifier	zend_tolower		333635	0					
ANR	333680	ArgumentList	( int ) * ( unsigned char * ) s1 ++		333635	1					
ANR	333681	Argument	( int ) * ( unsigned char * ) s1 ++		333635	0					
ANR	333682	CastExpression	( int ) * ( unsigned char * ) s1 ++		333635	0					
ANR	333683	CastTarget	int		333635	0					
ANR	333684	UnaryOperationExpression	* ( unsigned char * ) s1 ++		333635	1					
ANR	333685	UnaryOperator	*		333635	0					
ANR	333686	CastExpression	( unsigned char * ) s1 ++		333635	1					
ANR	333687	CastTarget	unsigned char *		333635	0					
ANR	333688	PostIncDecOperationExpression	s1 ++		333635	1					
ANR	333689	Identifier	s1		333635	0					
ANR	333690	IncDec	++		333635	1					
ANR	333691	ExpressionStatement	c2 = zend_tolower ( ( int ) * ( unsigned char * ) s2 ++ )	2588:2:65686:65732	333635	1	True				
ANR	333692	AssignmentExpression	c2 = zend_tolower ( ( int ) * ( unsigned char * ) s2 ++ )		333635	0		=			
ANR	333693	Identifier	c2		333635	0					
ANR	333694	CallExpression	zend_tolower ( ( int ) * ( unsigned char * ) s2 ++ )		333635	1					
ANR	333695	Callee	zend_tolower		333635	0					
ANR	333696	Identifier	zend_tolower		333635	0					
ANR	333697	ArgumentList	( int ) * ( unsigned char * ) s2 ++		333635	1					
ANR	333698	Argument	( int ) * ( unsigned char * ) s2 ++		333635	0					
ANR	333699	CastExpression	( int ) * ( unsigned char * ) s2 ++		333635	0					
ANR	333700	CastTarget	int		333635	0					
ANR	333701	UnaryOperationExpression	* ( unsigned char * ) s2 ++		333635	1					
ANR	333702	UnaryOperator	*		333635	0					
ANR	333703	CastExpression	( unsigned char * ) s2 ++		333635	1					
ANR	333704	CastTarget	unsigned char *		333635	0					
ANR	333705	PostIncDecOperationExpression	s2 ++		333635	1					
ANR	333706	Identifier	s2		333635	0					
ANR	333707	IncDec	++		333635	1					
ANR	333708	IfStatement	if ( c1 != c2 )		333635	2					
ANR	333709	Condition	c1 != c2	2589:6:65740:65747	333635	0	True				
ANR	333710	EqualityExpression	c1 != c2		333635	0		!=			
ANR	333711	Identifier	c1		333635	0					
ANR	333712	Identifier	c2		333635	1					
ANR	333713	CompoundStatement		13:16:218:218	333635	1					
ANR	333714	ReturnStatement	return c1 - c2 ;	2590:3:65755:65769	333635	0	True				
ANR	333715	AdditiveExpression	c1 - c2		333635	0		-			
ANR	333716	Identifier	c1		333635	0					
ANR	333717	Identifier	c2		333635	1					
ANR	333718	ReturnStatement	return ( int ) ( len1 - len2 ) ;	2594:1:65780:65805	333635	5	True				
ANR	333719	CastExpression	( int ) ( len1 - len2 )		333635	0					
ANR	333720	CastTarget	int		333635	0					
ANR	333721	AdditiveExpression	len1 - len2		333635	1		-			
ANR	333722	Identifier	len1		333635	0					
ANR	333723	Identifier	len2		333635	1					
ANR	333724	ReturnType	ZEND_API int ZEND_FASTCALL		333635	1					
ANR	333725	Identifier	zend_binary_strcasecmp_l		333635	2					
ANR	333726	ParameterList	"const char * s1 , size_t len1 , const char * s2 , size_t len2"		333635	3					
ANR	333727	Parameter	const char * s1	2576:52:65463:65476	333635	0	True				
ANR	333728	ParameterType	const char *		333635	0					
ANR	333729	Identifier	s1		333635	1					
ANR	333730	Parameter	size_t len1	2576:68:65479:65489	333635	1	True				
ANR	333731	ParameterType	size_t		333635	0					
ANR	333732	Identifier	len1		333635	1					
ANR	333733	Parameter	const char * s2	2576:81:65492:65505	333635	2	True				
ANR	333734	ParameterType	const char *		333635	0					
ANR	333735	Identifier	s2		333635	1					
ANR	333736	Parameter	size_t len2	2576:97:65508:65518	333635	3	True				
ANR	333737	ParameterType	size_t		333635	0					
ANR	333738	Identifier	len2		333635	1					
ANR	333739	CFGEntryNode	ENTRY		333635		True				
ANR	333740	CFGExitNode	EXIT		333635		True				
ANR	333741	Symbol	MIN		333635						
ANR	333742	Symbol	len		333635						
ANR	333743	Symbol	* ( unsigned char * ) s2 ++		333635						
ANR	333744	Symbol	zend_tolower		333635						
ANR	333745	Symbol	* ( unsigned char * ) s1 ++		333635						
ANR	333746	Symbol	s1		333635						
ANR	333747	Symbol	len1		333635						
ANR	333748	Symbol	c1		333635						
ANR	333749	Symbol	s2		333635						
ANR	333750	Symbol	len2		333635						
ANR	333751	Symbol	c2		333635						
ANR	333752	Function	zend_binary_strncasecmp_l	2598:0:65820:66270							
ANR	333753	FunctionDef	"zend_binary_strncasecmp_l (const char * s1 , size_t len1 , const char * s2 , size_t len2 , size_t length)"		333752	0					
ANR	333754	CompoundStatement		2599:0:65956:66270	333752	0					
ANR	333755	IdentifierDeclStatement	size_t len ;	2600:1:65959:65969	333752	0	True				
ANR	333756	IdentifierDecl	len		333752	0					
ANR	333757	IdentifierDeclType	size_t		333752	0					
ANR	333758	Identifier	len		333752	1					
ANR	333759	IdentifierDeclStatement	"int c1 , c2 ;"	2601:1:65972:65982	333752	1	True				
ANR	333760	IdentifierDecl	c1		333752	0					
ANR	333761	IdentifierDeclType	int		333752	0					
ANR	333762	Identifier	c1		333752	1					
ANR	333763	IdentifierDecl	c2		333752	1					
ANR	333764	IdentifierDeclType	int		333752	0					
ANR	333765	Identifier	c2		333752	1					
ANR	333766	IfStatement	if ( s1 == s2 )		333752	2					
ANR	333767	Condition	s1 == s2	2603:5:65990:65997	333752	0	True				
ANR	333768	EqualityExpression	s1 == s2		333752	0		==			
ANR	333769	Identifier	s1		333752	0					
ANR	333770	Identifier	s2		333752	1					
ANR	333771	CompoundStatement		5:15:43:43	333752	1					
ANR	333772	ReturnStatement	return 0 ;	2604:2:66004:66012	333752	0	True				
ANR	333773	PrimaryExpression	0		333752	0					
ANR	333774	ExpressionStatement	"len = MIN ( length , MIN ( len1 , len2 ) )"	2606:1:66018:66052	333752	3	True				
ANR	333775	AssignmentExpression	"len = MIN ( length , MIN ( len1 , len2 ) )"		333752	0		=			
ANR	333776	Identifier	len		333752	0					
ANR	333777	CallExpression	"MIN ( length , MIN ( len1 , len2 ) )"		333752	1					
ANR	333778	Callee	MIN		333752	0					
ANR	333779	Identifier	MIN		333752	0					
ANR	333780	ArgumentList	length		333752	1					
ANR	333781	Argument	length		333752	0					
ANR	333782	Identifier	length		333752	0					
ANR	333783	Argument	"MIN ( len1 , len2 )"		333752	1					
ANR	333784	CallExpression	"MIN ( len1 , len2 )"		333752	0					
ANR	333785	Callee	MIN		333752	0					
ANR	333786	Identifier	MIN		333752	0					
ANR	333787	ArgumentList	len1		333752	1					
ANR	333788	Argument	len1		333752	0					
ANR	333789	Identifier	len1		333752	0					
ANR	333790	Argument	len2		333752	1					
ANR	333791	Identifier	len2		333752	0					
ANR	333792	WhileStatement	while ( len -- )		333752	4					
ANR	333793	Condition	len --	2607:8:66062:66066	333752	0	True				
ANR	333794	PostIncDecOperationExpression	len --		333752	0					
ANR	333795	Identifier	len		333752	0					
ANR	333796	IncDec	--		333752	1					
ANR	333797	CompoundStatement		9:15:112:112	333752	1					
ANR	333798	ExpressionStatement	c1 = zend_tolower ( ( int ) * ( unsigned char * ) s1 ++ )	2608:2:66073:66119	333752	0	True				
ANR	333799	AssignmentExpression	c1 = zend_tolower ( ( int ) * ( unsigned char * ) s1 ++ )		333752	0		=			
ANR	333800	Identifier	c1		333752	0					
ANR	333801	CallExpression	zend_tolower ( ( int ) * ( unsigned char * ) s1 ++ )		333752	1					
ANR	333802	Callee	zend_tolower		333752	0					
ANR	333803	Identifier	zend_tolower		333752	0					
ANR	333804	ArgumentList	( int ) * ( unsigned char * ) s1 ++		333752	1					
ANR	333805	Argument	( int ) * ( unsigned char * ) s1 ++		333752	0					
ANR	333806	CastExpression	( int ) * ( unsigned char * ) s1 ++		333752	0					
ANR	333807	CastTarget	int		333752	0					
ANR	333808	UnaryOperationExpression	* ( unsigned char * ) s1 ++		333752	1					
ANR	333809	UnaryOperator	*		333752	0					
ANR	333810	CastExpression	( unsigned char * ) s1 ++		333752	1					
ANR	333811	CastTarget	unsigned char *		333752	0					
ANR	333812	PostIncDecOperationExpression	s1 ++		333752	1					
ANR	333813	Identifier	s1		333752	0					
ANR	333814	IncDec	++		333752	1					
ANR	333815	ExpressionStatement	c2 = zend_tolower ( ( int ) * ( unsigned char * ) s2 ++ )	2609:2:66123:66169	333752	1	True				
ANR	333816	AssignmentExpression	c2 = zend_tolower ( ( int ) * ( unsigned char * ) s2 ++ )		333752	0		=			
ANR	333817	Identifier	c2		333752	0					
ANR	333818	CallExpression	zend_tolower ( ( int ) * ( unsigned char * ) s2 ++ )		333752	1					
ANR	333819	Callee	zend_tolower		333752	0					
ANR	333820	Identifier	zend_tolower		333752	0					
ANR	333821	ArgumentList	( int ) * ( unsigned char * ) s2 ++		333752	1					
ANR	333822	Argument	( int ) * ( unsigned char * ) s2 ++		333752	0					
ANR	333823	CastExpression	( int ) * ( unsigned char * ) s2 ++		333752	0					
ANR	333824	CastTarget	int		333752	0					
ANR	333825	UnaryOperationExpression	* ( unsigned char * ) s2 ++		333752	1					
ANR	333826	UnaryOperator	*		333752	0					
ANR	333827	CastExpression	( unsigned char * ) s2 ++		333752	1					
ANR	333828	CastTarget	unsigned char *		333752	0					
ANR	333829	PostIncDecOperationExpression	s2 ++		333752	1					
ANR	333830	Identifier	s2		333752	0					
ANR	333831	IncDec	++		333752	1					
ANR	333832	IfStatement	if ( c1 != c2 )		333752	2					
ANR	333833	Condition	c1 != c2	2610:6:66177:66184	333752	0	True				
ANR	333834	EqualityExpression	c1 != c2		333752	0		!=			
ANR	333835	Identifier	c1		333752	0					
ANR	333836	Identifier	c2		333752	1					
ANR	333837	CompoundStatement		12:16:230:230	333752	1					
ANR	333838	ReturnStatement	return c1 - c2 ;	2611:3:66192:66206	333752	0	True				
ANR	333839	AdditiveExpression	c1 - c2		333752	0		-			
ANR	333840	Identifier	c1		333752	0					
ANR	333841	Identifier	c2		333752	1					
ANR	333842	ReturnStatement	"return ( int ) ( MIN ( length , len1 ) - MIN ( length , len2 ) ) ;"	2615:1:66217:66268	333752	5	True				
ANR	333843	CastExpression	"( int ) ( MIN ( length , len1 ) - MIN ( length , len2 ) )"		333752	0					
ANR	333844	CastTarget	int		333752	0					
ANR	333845	AdditiveExpression	"MIN ( length , len1 ) - MIN ( length , len2 )"		333752	1		-			
ANR	333846	CallExpression	"MIN ( length , len1 )"		333752	0					
ANR	333847	Callee	MIN		333752	0					
ANR	333848	Identifier	MIN		333752	0					
ANR	333849	ArgumentList	length		333752	1					
ANR	333850	Argument	length		333752	0					
ANR	333851	Identifier	length		333752	0					
ANR	333852	Argument	len1		333752	1					
ANR	333853	Identifier	len1		333752	0					
ANR	333854	CallExpression	"MIN ( length , len2 )"		333752	1					
ANR	333855	Callee	MIN		333752	0					
ANR	333856	Identifier	MIN		333752	0					
ANR	333857	ArgumentList	length		333752	1					
ANR	333858	Argument	length		333752	0					
ANR	333859	Identifier	length		333752	0					
ANR	333860	Argument	len2		333752	1					
ANR	333861	Identifier	len2		333752	0					
ANR	333862	ReturnType	ZEND_API int ZEND_FASTCALL		333752	1					
ANR	333863	Identifier	zend_binary_strncasecmp_l		333752	2					
ANR	333864	ParameterList	"const char * s1 , size_t len1 , const char * s2 , size_t len2 , size_t length"		333752	3					
ANR	333865	Parameter	const char * s1	2598:53:65873:65886	333752	0	True				
ANR	333866	ParameterType	const char *		333752	0					
ANR	333867	Identifier	s1		333752	1					
ANR	333868	Parameter	size_t len1	2598:69:65889:65899	333752	1	True				
ANR	333869	ParameterType	size_t		333752	0					
ANR	333870	Identifier	len1		333752	1					
ANR	333871	Parameter	const char * s2	2598:82:65902:65915	333752	2	True				
ANR	333872	ParameterType	const char *		333752	0					
ANR	333873	Identifier	s2		333752	1					
ANR	333874	Parameter	size_t len2	2598:98:65918:65928	333752	3	True				
ANR	333875	ParameterType	size_t		333752	0					
ANR	333876	Identifier	len2		333752	1					
ANR	333877	Parameter	size_t length	2598:111:65931:65943	333752	4	True				
ANR	333878	ParameterType	size_t		333752	0					
ANR	333879	Identifier	length		333752	1					
ANR	333880	CFGEntryNode	ENTRY		333752		True				
ANR	333881	CFGExitNode	EXIT		333752		True				
ANR	333882	Symbol	MIN		333752						
ANR	333883	Symbol	len		333752						
ANR	333884	Symbol	* ( unsigned char * ) s2 ++		333752						
ANR	333885	Symbol	zend_tolower		333752						
ANR	333886	Symbol	length		333752						
ANR	333887	Symbol	* ( unsigned char * ) s1 ++		333752						
ANR	333888	Symbol	s1		333752						
ANR	333889	Symbol	len1		333752						
ANR	333890	Symbol	c1		333752						
ANR	333891	Symbol	s2		333752						
ANR	333892	Symbol	len2		333752						
ANR	333893	Symbol	c2		333752						
ANR	333894	Function	zend_binary_zval_strcmp	2619:0:66283:66458							
ANR	333895	FunctionDef	"zend_binary_zval_strcmp (zval * s1 , zval * s2)"		333894	0					
ANR	333896	CompoundStatement		2620:0:66364:66458	333894	0					
ANR	333897	ReturnStatement	"return zend_binary_strcmp ( Z_STRVAL_P ( s1 ) , Z_STRLEN_P ( s1 ) , Z_STRVAL_P ( s2 ) , Z_STRLEN_P ( s2 ) ) ;"	2621:1:66367:66456	333894	0	True				
ANR	333898	CallExpression	"zend_binary_strcmp ( Z_STRVAL_P ( s1 ) , Z_STRLEN_P ( s1 ) , Z_STRVAL_P ( s2 ) , Z_STRLEN_P ( s2 ) )"		333894	0					
ANR	333899	Callee	zend_binary_strcmp		333894	0					
ANR	333900	Identifier	zend_binary_strcmp		333894	0					
ANR	333901	ArgumentList	Z_STRVAL_P ( s1 )		333894	1					
ANR	333902	Argument	Z_STRVAL_P ( s1 )		333894	0					
ANR	333903	CallExpression	Z_STRVAL_P ( s1 )		333894	0					
ANR	333904	Callee	Z_STRVAL_P		333894	0					
ANR	333905	Identifier	Z_STRVAL_P		333894	0					
ANR	333906	ArgumentList	s1		333894	1					
ANR	333907	Argument	s1		333894	0					
ANR	333908	Identifier	s1		333894	0					
ANR	333909	Argument	Z_STRLEN_P ( s1 )		333894	1					
ANR	333910	CallExpression	Z_STRLEN_P ( s1 )		333894	0					
ANR	333911	Callee	Z_STRLEN_P		333894	0					
ANR	333912	Identifier	Z_STRLEN_P		333894	0					
ANR	333913	ArgumentList	s1		333894	1					
ANR	333914	Argument	s1		333894	0					
ANR	333915	Identifier	s1		333894	0					
ANR	333916	Argument	Z_STRVAL_P ( s2 )		333894	2					
ANR	333917	CallExpression	Z_STRVAL_P ( s2 )		333894	0					
ANR	333918	Callee	Z_STRVAL_P		333894	0					
ANR	333919	Identifier	Z_STRVAL_P		333894	0					
ANR	333920	ArgumentList	s2		333894	1					
ANR	333921	Argument	s2		333894	0					
ANR	333922	Identifier	s2		333894	0					
ANR	333923	Argument	Z_STRLEN_P ( s2 )		333894	3					
ANR	333924	CallExpression	Z_STRLEN_P ( s2 )		333894	0					
ANR	333925	Callee	Z_STRLEN_P		333894	0					
ANR	333926	Identifier	Z_STRLEN_P		333894	0					
ANR	333927	ArgumentList	s2		333894	1					
ANR	333928	Argument	s2		333894	0					
ANR	333929	Identifier	s2		333894	0					
ANR	333930	ReturnType	ZEND_API int ZEND_FASTCALL		333894	1					
ANR	333931	Identifier	zend_binary_zval_strcmp		333894	2					
ANR	333932	ParameterList	"zval * s1 , zval * s2"		333894	3					
ANR	333933	Parameter	zval * s1	2619:51:66334:66341	333894	0	True				
ANR	333934	ParameterType	zval *		333894	0					
ANR	333935	Identifier	s1		333894	1					
ANR	333936	Parameter	zval * s2	2619:61:66344:66351	333894	1	True				
ANR	333937	ParameterType	zval *		333894	0					
ANR	333938	Identifier	s2		333894	1					
ANR	333939	CFGEntryNode	ENTRY		333894		True				
ANR	333940	CFGExitNode	EXIT		333894		True				
ANR	333941	Symbol	zend_binary_strcmp		333894						
ANR	333942	Symbol	Z_STRLEN_P		333894						
ANR	333943	Symbol	Z_STRVAL_P		333894						
ANR	333944	Symbol	s1		333894						
ANR	333945	Symbol	s2		333894						
ANR	333946	Function	zend_binary_zval_strncmp	2625:0:66471:66672							
ANR	333947	FunctionDef	"zend_binary_zval_strncmp (zval * s1 , zval * s2 , zval * s3)"		333946	0					
ANR	333948	CompoundStatement		2626:0:66563:66672	333946	0					
ANR	333949	ReturnStatement	"return zend_binary_strncmp ( Z_STRVAL_P ( s1 ) , Z_STRLEN_P ( s1 ) , Z_STRVAL_P ( s2 ) , Z_STRLEN_P ( s2 ) , Z_LVAL_P ( s3 ) ) ;"	2627:1:66566:66670	333946	0	True				
ANR	333950	CallExpression	"zend_binary_strncmp ( Z_STRVAL_P ( s1 ) , Z_STRLEN_P ( s1 ) , Z_STRVAL_P ( s2 ) , Z_STRLEN_P ( s2 ) , Z_LVAL_P ( s3 ) )"		333946	0					
ANR	333951	Callee	zend_binary_strncmp		333946	0					
ANR	333952	Identifier	zend_binary_strncmp		333946	0					
ANR	333953	ArgumentList	Z_STRVAL_P ( s1 )		333946	1					
ANR	333954	Argument	Z_STRVAL_P ( s1 )		333946	0					
ANR	333955	CallExpression	Z_STRVAL_P ( s1 )		333946	0					
ANR	333956	Callee	Z_STRVAL_P		333946	0					
ANR	333957	Identifier	Z_STRVAL_P		333946	0					
ANR	333958	ArgumentList	s1		333946	1					
ANR	333959	Argument	s1		333946	0					
ANR	333960	Identifier	s1		333946	0					
ANR	333961	Argument	Z_STRLEN_P ( s1 )		333946	1					
ANR	333962	CallExpression	Z_STRLEN_P ( s1 )		333946	0					
ANR	333963	Callee	Z_STRLEN_P		333946	0					
ANR	333964	Identifier	Z_STRLEN_P		333946	0					
ANR	333965	ArgumentList	s1		333946	1					
ANR	333966	Argument	s1		333946	0					
ANR	333967	Identifier	s1		333946	0					
ANR	333968	Argument	Z_STRVAL_P ( s2 )		333946	2					
ANR	333969	CallExpression	Z_STRVAL_P ( s2 )		333946	0					
ANR	333970	Callee	Z_STRVAL_P		333946	0					
ANR	333971	Identifier	Z_STRVAL_P		333946	0					
ANR	333972	ArgumentList	s2		333946	1					
ANR	333973	Argument	s2		333946	0					
ANR	333974	Identifier	s2		333946	0					
ANR	333975	Argument	Z_STRLEN_P ( s2 )		333946	3					
ANR	333976	CallExpression	Z_STRLEN_P ( s2 )		333946	0					
ANR	333977	Callee	Z_STRLEN_P		333946	0					
ANR	333978	Identifier	Z_STRLEN_P		333946	0					
ANR	333979	ArgumentList	s2		333946	1					
ANR	333980	Argument	s2		333946	0					
ANR	333981	Identifier	s2		333946	0					
ANR	333982	Argument	Z_LVAL_P ( s3 )		333946	4					
ANR	333983	CallExpression	Z_LVAL_P ( s3 )		333946	0					
ANR	333984	Callee	Z_LVAL_P		333946	0					
ANR	333985	Identifier	Z_LVAL_P		333946	0					
ANR	333986	ArgumentList	s3		333946	1					
ANR	333987	Argument	s3		333946	0					
ANR	333988	Identifier	s3		333946	0					
ANR	333989	ReturnType	ZEND_API int ZEND_FASTCALL		333946	1					
ANR	333990	Identifier	zend_binary_zval_strncmp		333946	2					
ANR	333991	ParameterList	"zval * s1 , zval * s2 , zval * s3"		333946	3					
ANR	333992	Parameter	zval * s1	2625:52:66523:66530	333946	0	True				
ANR	333993	ParameterType	zval *		333946	0					
ANR	333994	Identifier	s1		333946	1					
ANR	333995	Parameter	zval * s2	2625:62:66533:66540	333946	1	True				
ANR	333996	ParameterType	zval *		333946	0					
ANR	333997	Identifier	s2		333946	1					
ANR	333998	Parameter	zval * s3	2625:72:66543:66550	333946	2	True				
ANR	333999	ParameterType	zval *		333946	0					
ANR	334000	Identifier	s3		333946	1					
ANR	334001	CFGEntryNode	ENTRY		333946		True				
ANR	334002	CFGExitNode	EXIT		333946		True				
ANR	334003	Symbol	s3		333946						
ANR	334004	Symbol	zend_binary_strncmp		333946						
ANR	334005	Symbol	Z_STRLEN_P		333946						
ANR	334006	Symbol	Z_STRVAL_P		333946						
ANR	334007	Symbol	s1		333946						
ANR	334008	Symbol	s2		333946						
ANR	334009	Symbol	Z_LVAL_P		333946						
ANR	334010	Function	zend_binary_zval_strcasecmp	2631:0:66685:66870							
ANR	334011	FunctionDef	"zend_binary_zval_strcasecmp (zval * s1 , zval * s2)"		334010	0					
ANR	334012	CompoundStatement		2632:0:66770:66870	334010	0					
ANR	334013	ReturnStatement	"return zend_binary_strcasecmp_l ( Z_STRVAL_P ( s1 ) , Z_STRLEN_P ( s1 ) , Z_STRVAL_P ( s2 ) , Z_STRLEN_P ( s2 ) ) ;"	2633:1:66773:66868	334010	0	True				
ANR	334014	CallExpression	"zend_binary_strcasecmp_l ( Z_STRVAL_P ( s1 ) , Z_STRLEN_P ( s1 ) , Z_STRVAL_P ( s2 ) , Z_STRLEN_P ( s2 ) )"		334010	0					
ANR	334015	Callee	zend_binary_strcasecmp_l		334010	0					
ANR	334016	Identifier	zend_binary_strcasecmp_l		334010	0					
ANR	334017	ArgumentList	Z_STRVAL_P ( s1 )		334010	1					
ANR	334018	Argument	Z_STRVAL_P ( s1 )		334010	0					
ANR	334019	CallExpression	Z_STRVAL_P ( s1 )		334010	0					
ANR	334020	Callee	Z_STRVAL_P		334010	0					
ANR	334021	Identifier	Z_STRVAL_P		334010	0					
ANR	334022	ArgumentList	s1		334010	1					
ANR	334023	Argument	s1		334010	0					
ANR	334024	Identifier	s1		334010	0					
ANR	334025	Argument	Z_STRLEN_P ( s1 )		334010	1					
ANR	334026	CallExpression	Z_STRLEN_P ( s1 )		334010	0					
ANR	334027	Callee	Z_STRLEN_P		334010	0					
ANR	334028	Identifier	Z_STRLEN_P		334010	0					
ANR	334029	ArgumentList	s1		334010	1					
ANR	334030	Argument	s1		334010	0					
ANR	334031	Identifier	s1		334010	0					
ANR	334032	Argument	Z_STRVAL_P ( s2 )		334010	2					
ANR	334033	CallExpression	Z_STRVAL_P ( s2 )		334010	0					
ANR	334034	Callee	Z_STRVAL_P		334010	0					
ANR	334035	Identifier	Z_STRVAL_P		334010	0					
ANR	334036	ArgumentList	s2		334010	1					
ANR	334037	Argument	s2		334010	0					
ANR	334038	Identifier	s2		334010	0					
ANR	334039	Argument	Z_STRLEN_P ( s2 )		334010	3					
ANR	334040	CallExpression	Z_STRLEN_P ( s2 )		334010	0					
ANR	334041	Callee	Z_STRLEN_P		334010	0					
ANR	334042	Identifier	Z_STRLEN_P		334010	0					
ANR	334043	ArgumentList	s2		334010	1					
ANR	334044	Argument	s2		334010	0					
ANR	334045	Identifier	s2		334010	0					
ANR	334046	ReturnType	ZEND_API int ZEND_FASTCALL		334010	1					
ANR	334047	Identifier	zend_binary_zval_strcasecmp		334010	2					
ANR	334048	ParameterList	"zval * s1 , zval * s2"		334010	3					
ANR	334049	Parameter	zval * s1	2631:55:66740:66747	334010	0	True				
ANR	334050	ParameterType	zval *		334010	0					
ANR	334051	Identifier	s1		334010	1					
ANR	334052	Parameter	zval * s2	2631:65:66750:66757	334010	1	True				
ANR	334053	ParameterType	zval *		334010	0					
ANR	334054	Identifier	s2		334010	1					
ANR	334055	CFGEntryNode	ENTRY		334010		True				
ANR	334056	CFGExitNode	EXIT		334010		True				
ANR	334057	Symbol	zend_binary_strcasecmp_l		334010						
ANR	334058	Symbol	Z_STRLEN_P		334010						
ANR	334059	Symbol	Z_STRVAL_P		334010						
ANR	334060	Symbol	s1		334010						
ANR	334061	Symbol	s2		334010						
ANR	334062	Function	zend_binary_zval_strncasecmp	2637:0:66883:67094							
ANR	334063	FunctionDef	"zend_binary_zval_strncasecmp (zval * s1 , zval * s2 , zval * s3)"		334062	0					
ANR	334064	CompoundStatement		2638:0:66979:67094	334062	0					
ANR	334065	ReturnStatement	"return zend_binary_strncasecmp_l ( Z_STRVAL_P ( s1 ) , Z_STRLEN_P ( s1 ) , Z_STRVAL_P ( s2 ) , Z_STRLEN_P ( s2 ) , Z_LVAL_P ( s3 ) ) ;"	2639:1:66982:67092	334062	0	True				
ANR	334066	CallExpression	"zend_binary_strncasecmp_l ( Z_STRVAL_P ( s1 ) , Z_STRLEN_P ( s1 ) , Z_STRVAL_P ( s2 ) , Z_STRLEN_P ( s2 ) , Z_LVAL_P ( s3 ) )"		334062	0					
ANR	334067	Callee	zend_binary_strncasecmp_l		334062	0					
ANR	334068	Identifier	zend_binary_strncasecmp_l		334062	0					
ANR	334069	ArgumentList	Z_STRVAL_P ( s1 )		334062	1					
ANR	334070	Argument	Z_STRVAL_P ( s1 )		334062	0					
ANR	334071	CallExpression	Z_STRVAL_P ( s1 )		334062	0					
ANR	334072	Callee	Z_STRVAL_P		334062	0					
ANR	334073	Identifier	Z_STRVAL_P		334062	0					
ANR	334074	ArgumentList	s1		334062	1					
ANR	334075	Argument	s1		334062	0					
ANR	334076	Identifier	s1		334062	0					
ANR	334077	Argument	Z_STRLEN_P ( s1 )		334062	1					
ANR	334078	CallExpression	Z_STRLEN_P ( s1 )		334062	0					
ANR	334079	Callee	Z_STRLEN_P		334062	0					
ANR	334080	Identifier	Z_STRLEN_P		334062	0					
ANR	334081	ArgumentList	s1		334062	1					
ANR	334082	Argument	s1		334062	0					
ANR	334083	Identifier	s1		334062	0					
ANR	334084	Argument	Z_STRVAL_P ( s2 )		334062	2					
ANR	334085	CallExpression	Z_STRVAL_P ( s2 )		334062	0					
ANR	334086	Callee	Z_STRVAL_P		334062	0					
ANR	334087	Identifier	Z_STRVAL_P		334062	0					
ANR	334088	ArgumentList	s2		334062	1					
ANR	334089	Argument	s2		334062	0					
ANR	334090	Identifier	s2		334062	0					
ANR	334091	Argument	Z_STRLEN_P ( s2 )		334062	3					
ANR	334092	CallExpression	Z_STRLEN_P ( s2 )		334062	0					
ANR	334093	Callee	Z_STRLEN_P		334062	0					
ANR	334094	Identifier	Z_STRLEN_P		334062	0					
ANR	334095	ArgumentList	s2		334062	1					
ANR	334096	Argument	s2		334062	0					
ANR	334097	Identifier	s2		334062	0					
ANR	334098	Argument	Z_LVAL_P ( s3 )		334062	4					
ANR	334099	CallExpression	Z_LVAL_P ( s3 )		334062	0					
ANR	334100	Callee	Z_LVAL_P		334062	0					
ANR	334101	Identifier	Z_LVAL_P		334062	0					
ANR	334102	ArgumentList	s3		334062	1					
ANR	334103	Argument	s3		334062	0					
ANR	334104	Identifier	s3		334062	0					
ANR	334105	ReturnType	ZEND_API int ZEND_FASTCALL		334062	1					
ANR	334106	Identifier	zend_binary_zval_strncasecmp		334062	2					
ANR	334107	ParameterList	"zval * s1 , zval * s2 , zval * s3"		334062	3					
ANR	334108	Parameter	zval * s1	2637:56:66939:66946	334062	0	True				
ANR	334109	ParameterType	zval *		334062	0					
ANR	334110	Identifier	s1		334062	1					
ANR	334111	Parameter	zval * s2	2637:66:66949:66956	334062	1	True				
ANR	334112	ParameterType	zval *		334062	0					
ANR	334113	Identifier	s2		334062	1					
ANR	334114	Parameter	zval * s3	2637:76:66959:66966	334062	2	True				
ANR	334115	ParameterType	zval *		334062	0					
ANR	334116	Identifier	s3		334062	1					
ANR	334117	CFGEntryNode	ENTRY		334062		True				
ANR	334118	CFGExitNode	EXIT		334062		True				
ANR	334119	Symbol	s3		334062						
ANR	334120	Symbol	zend_binary_strncasecmp_l		334062						
ANR	334121	Symbol	Z_STRLEN_P		334062						
ANR	334122	Symbol	Z_STRVAL_P		334062						
ANR	334123	Symbol	s1		334062						
ANR	334124	Symbol	s2		334062						
ANR	334125	Symbol	Z_LVAL_P		334062						
ANR	334126	Function	zendi_smart_strcmp	2643:0:67107:68788							
ANR	334127	FunctionDef	"zendi_smart_strcmp (zend_string * s1 , zend_string * s2)"		334126	0					
ANR	334128	CompoundStatement		2644:0:67203:68788	334126	0					
ANR	334129	IdentifierDeclStatement	"int ret1 , ret2 ;"	2645:1:67206:67220	334126	0	True				
ANR	334130	IdentifierDecl	ret1		334126	0					
ANR	334131	IdentifierDeclType	int		334126	0					
ANR	334132	Identifier	ret1		334126	1					
ANR	334133	IdentifierDecl	ret2		334126	1					
ANR	334134	IdentifierDeclType	int		334126	0					
ANR	334135	Identifier	ret2		334126	1					
ANR	334136	IdentifierDeclStatement	"int oflow1 , oflow2 ;"	2646:1:67223:67241	334126	1	True				
ANR	334137	IdentifierDecl	oflow1		334126	0					
ANR	334138	IdentifierDeclType	int		334126	0					
ANR	334139	Identifier	oflow1		334126	1					
ANR	334140	IdentifierDecl	oflow2		334126	1					
ANR	334141	IdentifierDeclType	int		334126	0					
ANR	334142	Identifier	oflow2		334126	1					
ANR	334143	IdentifierDeclStatement	"zend_long lval1 = 0 , lval2 = 0 ;"	2647:1:67244:67274	334126	2	True				
ANR	334144	IdentifierDecl	lval1 = 0		334126	0					
ANR	334145	IdentifierDeclType	zend_long		334126	0					
ANR	334146	Identifier	lval1		334126	1					
ANR	334147	AssignmentExpression	lval1 = 0		334126	2		=			
ANR	334148	Identifier	lval1		334126	0					
ANR	334149	PrimaryExpression	0		334126	1					
ANR	334150	IdentifierDecl	lval2 = 0		334126	1					
ANR	334151	IdentifierDeclType	zend_long		334126	0					
ANR	334152	Identifier	lval2		334126	1					
ANR	334153	AssignmentExpression	lval2 = 0		334126	2		=			
ANR	334154	Identifier	lval2		334126	0					
ANR	334155	PrimaryExpression	0		334126	1					
ANR	334156	IdentifierDeclStatement	"double dval1 = 0.0 , dval2 = 0.0 ;"	2648:1:67277:67308	334126	3	True				
ANR	334157	IdentifierDecl	dval1 = 0.0		334126	0					
ANR	334158	IdentifierDeclType	double		334126	0					
ANR	334159	Identifier	dval1		334126	1					
ANR	334160	AssignmentExpression	dval1 = 0.0		334126	2		=			
ANR	334161	Identifier	dval1		334126	0					
ANR	334162	PrimaryExpression	0.0		334126	1					
ANR	334163	IdentifierDecl	dval2 = 0.0		334126	1					
ANR	334164	IdentifierDeclType	double		334126	0					
ANR	334165	Identifier	dval2		334126	1					
ANR	334166	AssignmentExpression	dval2 = 0.0		334126	2		=			
ANR	334167	Identifier	dval2		334126	0					
ANR	334168	PrimaryExpression	0.0		334126	1					
ANR	334169	IfStatement	"if ( ( ret1 = is_numeric_string_ex ( s1 -> val , s1 -> len , & lval1 , & dval1 , 0 , & oflow1 ) ) && ( ret2 = is_numeric_string_ex ( s2 -> val , s2 -> len , & lval2 , & dval2 , 0 , & oflow2 ) ) )"		334126	4					
ANR	334170	Condition	"( ret1 = is_numeric_string_ex ( s1 -> val , s1 -> len , & lval1 , & dval1 , 0 , & oflow1 ) ) && ( ret2 = is_numeric_string_ex ( s2 -> val , s2 -> len , & lval2 , & dval2 , 0 , & oflow2 ) )"	2650:5:67316:67471	334126	0	True				
ANR	334171	AndExpression	"( ret1 = is_numeric_string_ex ( s1 -> val , s1 -> len , & lval1 , & dval1 , 0 , & oflow1 ) ) && ( ret2 = is_numeric_string_ex ( s2 -> val , s2 -> len , & lval2 , & dval2 , 0 , & oflow2 ) )"		334126	0		&&			
ANR	334172	AssignmentExpression	"ret1 = is_numeric_string_ex ( s1 -> val , s1 -> len , & lval1 , & dval1 , 0 , & oflow1 )"		334126	0		=			
ANR	334173	Identifier	ret1		334126	0					
ANR	334174	CallExpression	"is_numeric_string_ex ( s1 -> val , s1 -> len , & lval1 , & dval1 , 0 , & oflow1 )"		334126	1					
ANR	334175	Callee	is_numeric_string_ex		334126	0					
ANR	334176	Identifier	is_numeric_string_ex		334126	0					
ANR	334177	ArgumentList	s1 -> val		334126	1					
ANR	334178	Argument	s1 -> val		334126	0					
ANR	334179	PtrMemberAccess	s1 -> val		334126	0					
ANR	334180	Identifier	s1		334126	0					
ANR	334181	Identifier	val		334126	1					
ANR	334182	Argument	s1 -> len		334126	1					
ANR	334183	PtrMemberAccess	s1 -> len		334126	0					
ANR	334184	Identifier	s1		334126	0					
ANR	334185	Identifier	len		334126	1					
ANR	334186	Argument	& lval1		334126	2					
ANR	334187	UnaryOperationExpression	& lval1		334126	0					
ANR	334188	UnaryOperator	&		334126	0					
ANR	334189	Identifier	lval1		334126	1					
ANR	334190	Argument	& dval1		334126	3					
ANR	334191	UnaryOperationExpression	& dval1		334126	0					
ANR	334192	UnaryOperator	&		334126	0					
ANR	334193	Identifier	dval1		334126	1					
ANR	334194	Argument	0		334126	4					
ANR	334195	PrimaryExpression	0		334126	0					
ANR	334196	Argument	& oflow1		334126	5					
ANR	334197	UnaryOperationExpression	& oflow1		334126	0					
ANR	334198	UnaryOperator	&		334126	0					
ANR	334199	Identifier	oflow1		334126	1					
ANR	334200	AssignmentExpression	"ret2 = is_numeric_string_ex ( s2 -> val , s2 -> len , & lval2 , & dval2 , 0 , & oflow2 )"		334126	1		=			
ANR	334201	Identifier	ret2		334126	0					
ANR	334202	CallExpression	"is_numeric_string_ex ( s2 -> val , s2 -> len , & lval2 , & dval2 , 0 , & oflow2 )"		334126	1					
ANR	334203	Callee	is_numeric_string_ex		334126	0					
ANR	334204	Identifier	is_numeric_string_ex		334126	0					
ANR	334205	ArgumentList	s2 -> val		334126	1					
ANR	334206	Argument	s2 -> val		334126	0					
ANR	334207	PtrMemberAccess	s2 -> val		334126	0					
ANR	334208	Identifier	s2		334126	0					
ANR	334209	Identifier	val		334126	1					
ANR	334210	Argument	s2 -> len		334126	1					
ANR	334211	PtrMemberAccess	s2 -> len		334126	0					
ANR	334212	Identifier	s2		334126	0					
ANR	334213	Identifier	len		334126	1					
ANR	334214	Argument	& lval2		334126	2					
ANR	334215	UnaryOperationExpression	& lval2		334126	0					
ANR	334216	UnaryOperator	&		334126	0					
ANR	334217	Identifier	lval2		334126	1					
ANR	334218	Argument	& dval2		334126	3					
ANR	334219	UnaryOperationExpression	& dval2		334126	0					
ANR	334220	UnaryOperator	&		334126	0					
ANR	334221	Identifier	dval2		334126	1					
ANR	334222	Argument	0		334126	4					
ANR	334223	PrimaryExpression	0		334126	0					
ANR	334224	Argument	& oflow2		334126	5					
ANR	334225	UnaryOperationExpression	& oflow2		334126	0					
ANR	334226	UnaryOperator	&		334126	0					
ANR	334227	Identifier	oflow2		334126	1					
ANR	334228	CompoundStatement		8:79:270:270	334126	1					
ANR	334229	IfStatement	if ( oflow1 != 0 && oflow1 == oflow2 && dval1 - dval2 == 0. && ( ( oflow1 == 1 && dval1 > 9007199254740991. ) || ( oflow1 == - 1 && dval1 < - 9007199254740991. ) ) )		334126	0					
ANR	334230	Condition	oflow1 != 0 && oflow1 == oflow2 && dval1 - dval2 == 0. && ( ( oflow1 == 1 && dval1 > 9007199254740991. ) || ( oflow1 == - 1 && dval1 < - 9007199254740991. ) )	2653:6:67515:67691	334126	0	True				
ANR	334231	AndExpression	oflow1 != 0 && oflow1 == oflow2 && dval1 - dval2 == 0. && ( ( oflow1 == 1 && dval1 > 9007199254740991. ) || ( oflow1 == - 1 && dval1 < - 9007199254740991. ) )		334126	0		&&			
ANR	334232	EqualityExpression	oflow1 != 0		334126	0		!=			
ANR	334233	Identifier	oflow1		334126	0					
ANR	334234	PrimaryExpression	0		334126	1					
ANR	334235	AndExpression	oflow1 == oflow2 && dval1 - dval2 == 0. && ( ( oflow1 == 1 && dval1 > 9007199254740991. ) || ( oflow1 == - 1 && dval1 < - 9007199254740991. ) )		334126	1		&&			
ANR	334236	EqualityExpression	oflow1 == oflow2		334126	0		==			
ANR	334237	Identifier	oflow1		334126	0					
ANR	334238	Identifier	oflow2		334126	1					
ANR	334239	AndExpression	dval1 - dval2 == 0. && ( ( oflow1 == 1 && dval1 > 9007199254740991. ) || ( oflow1 == - 1 && dval1 < - 9007199254740991. ) )		334126	1		&&			
ANR	334240	EqualityExpression	dval1 - dval2 == 0.		334126	0		==			
ANR	334241	AdditiveExpression	dval1 - dval2		334126	0		-			
ANR	334242	Identifier	dval1		334126	0					
ANR	334243	Identifier	dval2		334126	1					
ANR	334244	PrimaryExpression	0.		334126	1					
ANR	334245	OrExpression	( oflow1 == 1 && dval1 > 9007199254740991. ) || ( oflow1 == - 1 && dval1 < - 9007199254740991. )		334126	1		||			
ANR	334246	AndExpression	oflow1 == 1 && dval1 > 9007199254740991.		334126	0		&&			
ANR	334247	EqualityExpression	oflow1 == 1		334126	0		==			
ANR	334248	Identifier	oflow1		334126	0					
ANR	334249	PrimaryExpression	1		334126	1					
ANR	334250	RelationalExpression	dval1 > 9007199254740991.		334126	1		>			
ANR	334251	Identifier	dval1		334126	0					
ANR	334252	PrimaryExpression	9007199254740991.		334126	1					
ANR	334253	AndExpression	oflow1 == - 1 && dval1 < - 9007199254740991.		334126	1		&&			
ANR	334254	EqualityExpression	oflow1 == - 1		334126	0		==			
ANR	334255	Identifier	oflow1		334126	0					
ANR	334256	UnaryOperationExpression	- 1		334126	1					
ANR	334257	UnaryOperator	-		334126	0					
ANR	334258	PrimaryExpression	1		334126	1					
ANR	334259	RelationalExpression	dval1 < - 9007199254740991.		334126	1		<			
ANR	334260	Identifier	dval1		334126	0					
ANR	334261	UnaryOperationExpression	- 9007199254740991.		334126	1					
ANR	334262	UnaryOperator	-		334126	0					
ANR	334263	PrimaryExpression	9007199254740991.		334126	1					
ANR	334264	CompoundStatement		12:53:490:490	334126	1					
ANR	334265	GotoStatement	goto string_cmp ;	2661:3:67913:67928	334126	0	True				
ANR	334266	Identifier	string_cmp		334126	0					
ANR	334267	IfStatement	if ( ( ret1 == IS_DOUBLE ) || ( ret2 == IS_DOUBLE ) )		334126	1					
ANR	334268	Condition	( ret1 == IS_DOUBLE ) || ( ret2 == IS_DOUBLE )	2663:6:67940:67981	334126	0	True				
ANR	334269	OrExpression	( ret1 == IS_DOUBLE ) || ( ret2 == IS_DOUBLE )		334126	0		||			
ANR	334270	EqualityExpression	ret1 == IS_DOUBLE		334126	0		==			
ANR	334271	Identifier	ret1		334126	0					
ANR	334272	Identifier	IS_DOUBLE		334126	1					
ANR	334273	EqualityExpression	ret2 == IS_DOUBLE		334126	1		==			
ANR	334274	Identifier	ret2		334126	0					
ANR	334275	Identifier	IS_DOUBLE		334126	1					
ANR	334276	CompoundStatement		20:50:780:780	334126	1					
ANR	334277	IfStatement	if ( ret1 != IS_DOUBLE )		334126	0					
ANR	334278	Condition	ret1 != IS_DOUBLE	2664:7:67993:68009	334126	0	True				
ANR	334279	EqualityExpression	ret1 != IS_DOUBLE		334126	0		!=			
ANR	334280	Identifier	ret1		334126	0					
ANR	334281	Identifier	IS_DOUBLE		334126	1					
ANR	334282	CompoundStatement		21:26:808:808	334126	1					
ANR	334283	IfStatement	if ( oflow2 )		334126	0					
ANR	334284	Condition	oflow2	2665:8:68022:68027	334126	0	True				
ANR	334285	Identifier	oflow2		334126	0					
ANR	334286	CompoundStatement		22:16:826:826	334126	1					
ANR	334287	ReturnStatement	return - 1 * oflow2 ;	2667:5:68113:68131	334126	0	True				
ANR	334288	MultiplicativeExpression	- 1 * oflow2		334126	0		*			
ANR	334289	UnaryOperationExpression	- 1		334126	0					
ANR	334290	UnaryOperator	-		334126	0					
ANR	334291	PrimaryExpression	1		334126	1					
ANR	334292	Identifier	oflow2		334126	1					
ANR	334293	ExpressionStatement	dval1 = ( double ) lval1	2669:4:68143:68165	334126	1	True				
ANR	334294	AssignmentExpression	dval1 = ( double ) lval1		334126	0		=			
ANR	334295	Identifier	dval1		334126	0					
ANR	334296	CastExpression	( double ) lval1		334126	1					
ANR	334297	CastTarget	double		334126	0					
ANR	334298	Identifier	lval1		334126	1					
ANR	334299	ElseStatement	else		334126	0					
ANR	334300	IfStatement	if ( ret2 != IS_DOUBLE )		334126	0					
ANR	334301	Condition	ret2 != IS_DOUBLE	2670:14:68181:68197	334126	0	True				
ANR	334302	EqualityExpression	ret2 != IS_DOUBLE		334126	0		!=			
ANR	334303	Identifier	ret2		334126	0					
ANR	334304	Identifier	IS_DOUBLE		334126	1					
ANR	334305	CompoundStatement		27:33:996:996	334126	1					
ANR	334306	IfStatement	if ( oflow1 )		334126	0					
ANR	334307	Condition	oflow1	2671:8:68210:68215	334126	0	True				
ANR	334308	Identifier	oflow1		334126	0					
ANR	334309	CompoundStatement		28:16:1014:1014	334126	1					
ANR	334310	ReturnStatement	return oflow1 ;	2672:5:68225:68238	334126	0	True				
ANR	334311	Identifier	oflow1		334126	0					
ANR	334312	ExpressionStatement	dval2 = ( double ) lval2	2674:4:68250:68272	334126	1	True				
ANR	334313	AssignmentExpression	dval2 = ( double ) lval2		334126	0		=			
ANR	334314	Identifier	dval2		334126	0					
ANR	334315	CastExpression	( double ) lval2		334126	1					
ANR	334316	CastTarget	double		334126	0					
ANR	334317	Identifier	lval2		334126	1					
ANR	334318	ElseStatement	else		334126	0					
ANR	334319	IfStatement	if ( dval1 == dval2 && ! zend_finite ( dval1 ) )		334126	0					
ANR	334320	Condition	dval1 == dval2 && ! zend_finite ( dval1 )	2675:14:68288:68324	334126	0	True				
ANR	334321	AndExpression	dval1 == dval2 && ! zend_finite ( dval1 )		334126	0		&&			
ANR	334322	EqualityExpression	dval1 == dval2		334126	0		==			
ANR	334323	Identifier	dval1		334126	0					
ANR	334324	Identifier	dval2		334126	1					
ANR	334325	UnaryOperationExpression	! zend_finite ( dval1 )		334126	1					
ANR	334326	UnaryOperator	!		334126	0					
ANR	334327	CallExpression	zend_finite ( dval1 )		334126	1					
ANR	334328	Callee	zend_finite		334126	0					
ANR	334329	Identifier	zend_finite		334126	0					
ANR	334330	ArgumentList	dval1		334126	1					
ANR	334331	Argument	dval1		334126	0					
ANR	334332	Identifier	dval1		334126	0					
ANR	334333	CompoundStatement		32:53:1123:1123	334126	1					
ANR	334334	GotoStatement	goto string_cmp ;	2678:4:68441:68456	334126	0	True				
ANR	334335	Identifier	string_cmp		334126	0					
ANR	334336	ExpressionStatement	dval1 = dval1 - dval2	2680:3:68466:68487	334126	1	True				
ANR	334337	AssignmentExpression	dval1 = dval1 - dval2		334126	0		=			
ANR	334338	Identifier	dval1		334126	0					
ANR	334339	AdditiveExpression	dval1 - dval2		334126	1		-			
ANR	334340	Identifier	dval1		334126	0					
ANR	334341	Identifier	dval2		334126	1					
ANR	334342	ReturnStatement	return ZEND_NORMALIZE_BOOL ( dval1 ) ;	2681:3:68492:68525	334126	2	True				
ANR	334343	CallExpression	ZEND_NORMALIZE_BOOL ( dval1 )		334126	0					
ANR	334344	Callee	ZEND_NORMALIZE_BOOL		334126	0					
ANR	334345	Identifier	ZEND_NORMALIZE_BOOL		334126	0					
ANR	334346	ArgumentList	dval1		334126	1					
ANR	334347	Argument	dval1		334126	0					
ANR	334348	Identifier	dval1		334126	0					
ANR	334349	ElseStatement	else		334126	0					
ANR	334350	CompoundStatement		39:9:1332:1332	334126	0					
ANR	334351	ReturnStatement	return lval1 > lval2 ? 1 : ( lval1 < lval2 ? - 1 : 0 ) ;	2683:3:68575:68626	334126	0	True				
ANR	334352	ConditionalExpression	lval1 > lval2 ? 1 : ( lval1 < lval2 ? - 1 : 0 )		334126	0					
ANR	334353	Condition	lval1 > lval2		334126	0					
ANR	334354	RelationalExpression	lval1 > lval2		334126	0		>			
ANR	334355	Identifier	lval1		334126	0					
ANR	334356	Identifier	lval2		334126	1					
ANR	334357	PrimaryExpression	1		334126	1					
ANR	334358	ConditionalExpression	lval1 < lval2 ? - 1 : 0		334126	2					
ANR	334359	Condition	lval1 < lval2		334126	0					
ANR	334360	RelationalExpression	lval1 < lval2		334126	0		<			
ANR	334361	Identifier	lval1		334126	0					
ANR	334362	Identifier	lval2		334126	1					
ANR	334363	UnaryOperationExpression	- 1		334126	1					
ANR	334364	UnaryOperator	-		334126	0					
ANR	334365	PrimaryExpression	1		334126	1					
ANR	334366	PrimaryExpression	0		334126	2					
ANR	334367	ElseStatement	else		334126	0					
ANR	334368	CompoundStatement		43:2:1440:1454	334126	0					
ANR	334369	IdentifierDeclStatement	int strcmp_ret ;	2686:2:68644:68658	334126	0	True				
ANR	334370	IdentifierDecl	strcmp_ret		334126	0					
ANR	334371	IdentifierDeclType	int		334126	0					
ANR	334372	Identifier	strcmp_ret		334126	1					
ANR	334373	Label	string_cmp :	2687:0:68660:68670	334126	1	True				
ANR	334374	Identifier	string_cmp		334126	0					
ANR	334375	ExpressionStatement	"strcmp_ret = zend_binary_strcmp ( s1 -> val , s1 -> len , s2 -> val , s2 -> len )"	2688:2:68674:68741	334126	2	True				
ANR	334376	AssignmentExpression	"strcmp_ret = zend_binary_strcmp ( s1 -> val , s1 -> len , s2 -> val , s2 -> len )"		334126	0		=			
ANR	334377	Identifier	strcmp_ret		334126	0					
ANR	334378	CallExpression	"zend_binary_strcmp ( s1 -> val , s1 -> len , s2 -> val , s2 -> len )"		334126	1					
ANR	334379	Callee	zend_binary_strcmp		334126	0					
ANR	334380	Identifier	zend_binary_strcmp		334126	0					
ANR	334381	ArgumentList	s1 -> val		334126	1					
ANR	334382	Argument	s1 -> val		334126	0					
ANR	334383	PtrMemberAccess	s1 -> val		334126	0					
ANR	334384	Identifier	s1		334126	0					
ANR	334385	Identifier	val		334126	1					
ANR	334386	Argument	s1 -> len		334126	1					
ANR	334387	PtrMemberAccess	s1 -> len		334126	0					
ANR	334388	Identifier	s1		334126	0					
ANR	334389	Identifier	len		334126	1					
ANR	334390	Argument	s2 -> val		334126	2					
ANR	334391	PtrMemberAccess	s2 -> val		334126	0					
ANR	334392	Identifier	s2		334126	0					
ANR	334393	Identifier	val		334126	1					
ANR	334394	Argument	s2 -> len		334126	3					
ANR	334395	PtrMemberAccess	s2 -> len		334126	0					
ANR	334396	Identifier	s2		334126	0					
ANR	334397	Identifier	len		334126	1					
ANR	334398	ReturnStatement	return ZEND_NORMALIZE_BOOL ( strcmp_ret ) ;	2689:2:68745:68783	334126	3	True				
ANR	334399	CallExpression	ZEND_NORMALIZE_BOOL ( strcmp_ret )		334126	0					
ANR	334400	Callee	ZEND_NORMALIZE_BOOL		334126	0					
ANR	334401	Identifier	ZEND_NORMALIZE_BOOL		334126	0					
ANR	334402	ArgumentList	strcmp_ret		334126	1					
ANR	334403	Argument	strcmp_ret		334126	0					
ANR	334404	Identifier	strcmp_ret		334126	0					
ANR	334405	ReturnType	ZEND_API zend_long ZEND_FASTCALL		334126	1					
ANR	334406	Identifier	zendi_smart_strcmp		334126	2					
ANR	334407	ParameterList	"zend_string * s1 , zend_string * s2"		334126	3					
ANR	334408	Parameter	zend_string * s1	2643:52:67159:67173	334126	0	True				
ANR	334409	ParameterType	zend_string *		334126	0					
ANR	334410	Identifier	s1		334126	1					
ANR	334411	Parameter	zend_string * s2	2643:69:67176:67190	334126	1	True				
ANR	334412	ParameterType	zend_string *		334126	0					
ANR	334413	Identifier	s2		334126	1					
ANR	334414	CFGEntryNode	ENTRY		334126		True				
ANR	334415	CFGExitNode	EXIT		334126		True				
ANR	334416	Symbol	& oflow1		334126						
ANR	334417	Symbol	zend_finite		334126						
ANR	334418	Symbol	& oflow2		334126						
ANR	334419	Symbol	ret2		334126						
ANR	334420	Symbol	s2 -> len		334126						
ANR	334421	Symbol	ret1		334126						
ANR	334422	Symbol	* s2		334126						
ANR	334423	Symbol	* s1		334126						
ANR	334424	Symbol	s1 -> len		334126						
ANR	334425	Symbol	oflow1		334126						
ANR	334426	Symbol	oflow2		334126						
ANR	334427	Symbol	zend_binary_strcmp		334126						
ANR	334428	Symbol	& lval1		334126						
ANR	334429	Symbol	& lval2		334126						
ANR	334430	Symbol	ZEND_NORMALIZE_BOOL		334126						
ANR	334431	Symbol	s1 -> val		334126						
ANR	334432	Symbol	s2 -> val		334126						
ANR	334433	Symbol	& dval1		334126						
ANR	334434	Symbol	is_numeric_string_ex		334126						
ANR	334435	Symbol	& dval2		334126						
ANR	334436	Symbol	s1		334126						
ANR	334437	Symbol	s2		334126						
ANR	334438	Symbol	dval1		334126						
ANR	334439	Symbol	dval2		334126						
ANR	334440	Symbol	strcmp_ret		334126						
ANR	334441	Symbol	lval2		334126						
ANR	334442	Symbol	lval1		334126						
ANR	334443	Symbol	IS_DOUBLE		334126						
ANR	334444	Function	hash_zval_compare_function	2694:0:68801:68976							
ANR	334445	FunctionDef	"hash_zval_compare_function (zval * z1 , zval * z2)"		334444	0					
ANR	334446	CompoundStatement		2695:0:68869:68976	334444	0					
ANR	334447	IdentifierDeclStatement	zval result ;	2696:1:68872:68883	334444	0	True				
ANR	334448	IdentifierDecl	result		334444	0					
ANR	334449	IdentifierDeclType	zval		334444	0					
ANR	334450	Identifier	result		334444	1					
ANR	334451	IfStatement	"if ( compare_function ( & result , z1 , z2 ) == FAILURE )"		334444	1					
ANR	334452	Condition	"compare_function ( & result , z1 , z2 ) == FAILURE"	2698:5:68891:68932	334444	0	True				
ANR	334453	EqualityExpression	"compare_function ( & result , z1 , z2 ) == FAILURE"		334444	0		==			
ANR	334454	CallExpression	"compare_function ( & result , z1 , z2 )"		334444	0					
ANR	334455	Callee	compare_function		334444	0					
ANR	334456	Identifier	compare_function		334444	0					
ANR	334457	ArgumentList	& result		334444	1					
ANR	334458	Argument	& result		334444	0					
ANR	334459	UnaryOperationExpression	& result		334444	0					
ANR	334460	UnaryOperator	&		334444	0					
ANR	334461	Identifier	result		334444	1					
ANR	334462	Argument	z1		334444	1					
ANR	334463	Identifier	z1		334444	0					
ANR	334464	Argument	z2		334444	2					
ANR	334465	Identifier	z2		334444	0					
ANR	334466	Identifier	FAILURE		334444	1					
ANR	334467	CompoundStatement		4:49:65:65	334444	1					
ANR	334468	ReturnStatement	return 1 ;	2699:2:68939:68947	334444	0	True				
ANR	334469	PrimaryExpression	1		334444	0					
ANR	334470	ReturnStatement	return Z_LVAL ( result ) ;	2701:1:68953:68974	334444	2	True				
ANR	334471	CallExpression	Z_LVAL ( result )		334444	0					
ANR	334472	Callee	Z_LVAL		334444	0					
ANR	334473	Identifier	Z_LVAL		334444	0					
ANR	334474	ArgumentList	result		334444	1					
ANR	334475	Argument	result		334444	0					
ANR	334476	Identifier	result		334444	0					
ANR	334477	ReturnType	static int		334444	1					
ANR	334478	Identifier	hash_zval_compare_function		334444	2					
ANR	334479	ParameterList	"zval * z1 , zval * z2"		334444	3					
ANR	334480	Parameter	zval * z1	2694:38:68839:68846	334444	0	True				
ANR	334481	ParameterType	zval *		334444	0					
ANR	334482	Identifier	z1		334444	1					
ANR	334483	Parameter	zval * z2	2694:48:68849:68856	334444	1	True				
ANR	334484	ParameterType	zval *		334444	0					
ANR	334485	Identifier	z2		334444	1					
ANR	334486	CFGEntryNode	ENTRY		334444		True				
ANR	334487	CFGExitNode	EXIT		334444		True				
ANR	334488	Symbol	result		334444						
ANR	334489	Symbol	compare_function		334444						
ANR	334490	Symbol	& result		334444						
ANR	334491	Symbol	z1		334444						
ANR	334492	Symbol	z2		334444						
ANR	334493	Symbol	Z_LVAL		334444						
ANR	334494	Symbol	FAILURE		334444						
ANR	334495	Function	zend_compare_symbol_tables	2705:0:68989:69189							
ANR	334496	FunctionDef	"zend_compare_symbol_tables (HashTable * ht1 , HashTable * ht2)"		334495	0					
ANR	334497	CompoundStatement		2706:0:69085:69189	334495	0					
ANR	334498	ReturnStatement	"return ht1 == ht2 ? 0 : zend_hash_compare ( ht1 , ht2 , ( compare_func_t ) hash_zval_compare_function , 0 ) ;"	2707:1:69088:69187	334495	0	True				
ANR	334499	ConditionalExpression	"ht1 == ht2 ? 0 : zend_hash_compare ( ht1 , ht2 , ( compare_func_t ) hash_zval_compare_function , 0 )"		334495	0					
ANR	334500	Condition	ht1 == ht2		334495	0					
ANR	334501	EqualityExpression	ht1 == ht2		334495	0		==			
ANR	334502	Identifier	ht1		334495	0					
ANR	334503	Identifier	ht2		334495	1					
ANR	334504	PrimaryExpression	0		334495	1					
ANR	334505	CallExpression	"zend_hash_compare ( ht1 , ht2 , ( compare_func_t ) hash_zval_compare_function , 0 )"		334495	2					
ANR	334506	Callee	zend_hash_compare		334495	0					
ANR	334507	Identifier	zend_hash_compare		334495	0					
ANR	334508	ArgumentList	ht1		334495	1					
ANR	334509	Argument	ht1		334495	0					
ANR	334510	Identifier	ht1		334495	0					
ANR	334511	Argument	ht2		334495	1					
ANR	334512	Identifier	ht2		334495	0					
ANR	334513	Argument	( compare_func_t ) hash_zval_compare_function		334495	2					
ANR	334514	CastExpression	( compare_func_t ) hash_zval_compare_function		334495	0					
ANR	334515	CastTarget	compare_func_t		334495	0					
ANR	334516	Identifier	hash_zval_compare_function		334495	1					
ANR	334517	Argument	0		334495	3					
ANR	334518	PrimaryExpression	0		334495	0					
ANR	334519	ReturnType	ZEND_API int ZEND_FASTCALL		334495	1					
ANR	334520	Identifier	zend_compare_symbol_tables		334495	2					
ANR	334521	ParameterList	"HashTable * ht1 , HashTable * ht2"		334495	3					
ANR	334522	Parameter	HashTable * ht1	2705:54:69043:69056	334495	0	True				
ANR	334523	ParameterType	HashTable *		334495	0					
ANR	334524	Identifier	ht1		334495	1					
ANR	334525	Parameter	HashTable * ht2	2705:70:69059:69072	334495	1	True				
ANR	334526	ParameterType	HashTable *		334495	0					
ANR	334527	Identifier	ht2		334495	1					
ANR	334528	CFGEntryNode	ENTRY		334495		True				
ANR	334529	CFGExitNode	EXIT		334495		True				
ANR	334530	Symbol	ht1		334495						
ANR	334531	Symbol	ht2		334495						
ANR	334532	Symbol	hash_zval_compare_function		334495						
ANR	334533	Symbol	zend_hash_compare		334495						
ANR	334534	Function	zend_compare_arrays	2711:0:69202:69349							
ANR	334535	FunctionDef	"zend_compare_arrays (zval * a1 , zval * a2)"		334534	0					
ANR	334536	CompoundStatement		2712:0:69279:69349	334534	0					
ANR	334537	ReturnStatement	"return zend_compare_symbol_tables ( Z_ARRVAL_P ( a1 ) , Z_ARRVAL_P ( a2 ) ) ;"	2713:1:69282:69347	334534	0	True				
ANR	334538	CallExpression	"zend_compare_symbol_tables ( Z_ARRVAL_P ( a1 ) , Z_ARRVAL_P ( a2 ) )"		334534	0					
ANR	334539	Callee	zend_compare_symbol_tables		334534	0					
ANR	334540	Identifier	zend_compare_symbol_tables		334534	0					
ANR	334541	ArgumentList	Z_ARRVAL_P ( a1 )		334534	1					
ANR	334542	Argument	Z_ARRVAL_P ( a1 )		334534	0					
ANR	334543	CallExpression	Z_ARRVAL_P ( a1 )		334534	0					
ANR	334544	Callee	Z_ARRVAL_P		334534	0					
ANR	334545	Identifier	Z_ARRVAL_P		334534	0					
ANR	334546	ArgumentList	a1		334534	1					
ANR	334547	Argument	a1		334534	0					
ANR	334548	Identifier	a1		334534	0					
ANR	334549	Argument	Z_ARRVAL_P ( a2 )		334534	1					
ANR	334550	CallExpression	Z_ARRVAL_P ( a2 )		334534	0					
ANR	334551	Callee	Z_ARRVAL_P		334534	0					
ANR	334552	Identifier	Z_ARRVAL_P		334534	0					
ANR	334553	ArgumentList	a2		334534	1					
ANR	334554	Argument	a2		334534	0					
ANR	334555	Identifier	a2		334534	0					
ANR	334556	ReturnType	ZEND_API int ZEND_FASTCALL		334534	1					
ANR	334557	Identifier	zend_compare_arrays		334534	2					
ANR	334558	ParameterList	"zval * a1 , zval * a2"		334534	3					
ANR	334559	Parameter	zval * a1	2711:47:69249:69256	334534	0	True				
ANR	334560	ParameterType	zval *		334534	0					
ANR	334561	Identifier	a1		334534	1					
ANR	334562	Parameter	zval * a2	2711:57:69259:69266	334534	1	True				
ANR	334563	ParameterType	zval *		334534	0					
ANR	334564	Identifier	a2		334534	1					
ANR	334565	CFGEntryNode	ENTRY		334534		True				
ANR	334566	CFGExitNode	EXIT		334534		True				
ANR	334567	Symbol	a1		334534						
ANR	334568	Symbol	a2		334534						
ANR	334569	Symbol	zend_compare_symbol_tables		334534						
ANR	334570	Symbol	Z_ARRVAL_P		334534						
ANR	334571	Function	zend_compare_objects	2717:0:69362:69616							
ANR	334572	FunctionDef	"zend_compare_objects (zval * o1 , zval * o2)"		334571	0					
ANR	334573	CompoundStatement		2718:0:69440:69616	334571	0					
ANR	334574	IfStatement	if ( Z_OBJ_P ( o1 ) == Z_OBJ_P ( o2 ) )		334571	0					
ANR	334575	Condition	Z_OBJ_P ( o1 ) == Z_OBJ_P ( o2 )	2719:5:69447:69472	334571	0	True				
ANR	334576	EqualityExpression	Z_OBJ_P ( o1 ) == Z_OBJ_P ( o2 )		334571	0		==			
ANR	334577	CallExpression	Z_OBJ_P ( o1 )		334571	0					
ANR	334578	Callee	Z_OBJ_P		334571	0					
ANR	334579	Identifier	Z_OBJ_P		334571	0					
ANR	334580	ArgumentList	o1		334571	1					
ANR	334581	Argument	o1		334571	0					
ANR	334582	Identifier	o1		334571	0					
ANR	334583	CallExpression	Z_OBJ_P ( o2 )		334571	1					
ANR	334584	Callee	Z_OBJ_P		334571	0					
ANR	334585	Identifier	Z_OBJ_P		334571	0					
ANR	334586	ArgumentList	o2		334571	1					
ANR	334587	Argument	o2		334571	0					
ANR	334588	Identifier	o2		334571	0					
ANR	334589	CompoundStatement		2:33:34:34	334571	1					
ANR	334590	ReturnStatement	return 0 ;	2720:2:69479:69487	334571	0	True				
ANR	334591	PrimaryExpression	0		334571	0					
ANR	334592	IfStatement	if ( Z_OBJ_HT_P ( o1 ) -> compare_objects == NULL )		334571	1					
ANR	334593	Condition	Z_OBJ_HT_P ( o1 ) -> compare_objects == NULL	2723:5:69498:69536	334571	0	True				
ANR	334594	EqualityExpression	Z_OBJ_HT_P ( o1 ) -> compare_objects == NULL		334571	0		==			
ANR	334595	PtrMemberAccess	Z_OBJ_HT_P ( o1 ) -> compare_objects		334571	0					
ANR	334596	CallExpression	Z_OBJ_HT_P ( o1 )		334571	0					
ANR	334597	Callee	Z_OBJ_HT_P		334571	0					
ANR	334598	Identifier	Z_OBJ_HT_P		334571	0					
ANR	334599	ArgumentList	o1		334571	1					
ANR	334600	Argument	o1		334571	0					
ANR	334601	Identifier	o1		334571	0					
ANR	334602	Identifier	compare_objects		334571	1					
ANR	334603	Identifier	NULL		334571	1					
ANR	334604	CompoundStatement		6:46:98:98	334571	1					
ANR	334605	ReturnStatement	return 1 ;	2724:2:69543:69551	334571	0	True				
ANR	334606	PrimaryExpression	1		334571	0					
ANR	334607	ElseStatement	else		334571	0					
ANR	334608	CompoundStatement		8:8:120:120	334571	0					
ANR	334609	ReturnStatement	"return Z_OBJ_HT_P ( o1 ) -> compare_objects ( o1 , o2 ) ;"	2726:2:69565:69611	334571	0	True				
ANR	334610	CallExpression	"Z_OBJ_HT_P ( o1 ) -> compare_objects ( o1 , o2 )"		334571	0					
ANR	334611	Callee	Z_OBJ_HT_P ( o1 ) -> compare_objects		334571	0					
ANR	334612	PtrMemberAccess	Z_OBJ_HT_P ( o1 ) -> compare_objects		334571	0					
ANR	334613	CallExpression	Z_OBJ_HT_P ( o1 )		334571	0					
ANR	334614	Callee	Z_OBJ_HT_P		334571	0					
ANR	334615	Identifier	Z_OBJ_HT_P		334571	0					
ANR	334616	ArgumentList	o1		334571	1					
ANR	334617	Argument	o1		334571	0					
ANR	334618	Identifier	o1		334571	0					
ANR	334619	Identifier	compare_objects		334571	1					
ANR	334620	ArgumentList	o1		334571	1					
ANR	334621	Argument	o1		334571	0					
ANR	334622	Identifier	o1		334571	0					
ANR	334623	Argument	o2		334571	1					
ANR	334624	Identifier	o2		334571	0					
ANR	334625	ReturnType	ZEND_API int ZEND_FASTCALL		334571	1					
ANR	334626	Identifier	zend_compare_objects		334571	2					
ANR	334627	ParameterList	"zval * o1 , zval * o2"		334571	3					
ANR	334628	Parameter	zval * o1	2717:48:69410:69417	334571	0	True				
ANR	334629	ParameterType	zval *		334571	0					
ANR	334630	Identifier	o1		334571	1					
ANR	334631	Parameter	zval * o2	2717:58:69420:69427	334571	1	True				
ANR	334632	ParameterType	zval *		334571	0					
ANR	334633	Identifier	o2		334571	1					
ANR	334634	CFGEntryNode	ENTRY		334571		True				
ANR	334635	CFGExitNode	EXIT		334571		True				
ANR	334636	Symbol	o1		334571						
ANR	334637	Symbol	o2		334571						
ANR	334638	Symbol	NULL		334571						
ANR	334639	Symbol	Z_OBJ_P		334571						
ANR	334640	Symbol	Z_OBJ_HT_P		334571						
ANR	334641	Symbol	Z_OBJ_HT_P ( o1 ) -> compare_objects		334571						
ANR	334642	Symbol	* Z_OBJ_HT_P		334571						
ANR	334643	DeclStmt									
ANR	334644	Decl							zend_string	zend_string *	str
ANR	334645	Function	zend_long_to_str	2740:22:69881:70102							
ANR	334646	FunctionDef	zend_long_to_str (zend_long num)		334645	0					
ANR	334647	CompoundStatement		2741:0:69937:70102	334645	0					
ANR	334648	IdentifierDeclStatement	char buf [ MAX_LENGTH_OF_LONG + 1 ] ;	2742:1:69940:69972	334645	0	True				
ANR	334649	IdentifierDecl	buf [ MAX_LENGTH_OF_LONG + 1 ]		334645	0					
ANR	334650	IdentifierDeclType	char [ MAX_LENGTH_OF_LONG + 1 ]		334645	0					
ANR	334651	Identifier	buf		334645	1					
ANR	334652	AdditiveExpression	MAX_LENGTH_OF_LONG + 1		334645	2		+			
ANR	334653	Identifier	MAX_LENGTH_OF_LONG		334645	0					
ANR	334654	PrimaryExpression	1		334645	1					
ANR	334655	IdentifierDeclStatement	"char * res = zend_print_long_to_buf ( buf + sizeof ( buf ) - 1 , num ) ;"	2743:1:69975:70037	334645	1	True				
ANR	334656	IdentifierDecl	"* res = zend_print_long_to_buf ( buf + sizeof ( buf ) - 1 , num )"		334645	0					
ANR	334657	IdentifierDeclType	char *		334645	0					
ANR	334658	Identifier	res		334645	1					
ANR	334659	AssignmentExpression	"* res = zend_print_long_to_buf ( buf + sizeof ( buf ) - 1 , num )"		334645	2		=			
ANR	334660	Identifier	res		334645	0					
ANR	334661	CallExpression	"zend_print_long_to_buf ( buf + sizeof ( buf ) - 1 , num )"		334645	1					
ANR	334662	Callee	zend_print_long_to_buf		334645	0					
ANR	334663	Identifier	zend_print_long_to_buf		334645	0					
ANR	334664	ArgumentList	buf + sizeof ( buf ) - 1		334645	1					
ANR	334665	Argument	buf + sizeof ( buf ) - 1		334645	0					
ANR	334666	AdditiveExpression	buf + sizeof ( buf ) - 1		334645	0		+			
ANR	334667	Identifier	buf		334645	0					
ANR	334668	AdditiveExpression	sizeof ( buf ) - 1		334645	1		-			
ANR	334669	SizeofExpression	sizeof ( buf )		334645	0					
ANR	334670	Sizeof	sizeof		334645	0					
ANR	334671	SizeofOperand	buf		334645	1					
ANR	334672	PrimaryExpression	1		334645	1					
ANR	334673	Argument	num		334645	1					
ANR	334674	Identifier	num		334645	0					
ANR	334675	ReturnStatement	"return zend_string_init ( res , buf + sizeof ( buf ) - 1 - res , 0 ) ;"	2744:1:70040:70100	334645	2	True				
ANR	334676	CallExpression	"zend_string_init ( res , buf + sizeof ( buf ) - 1 - res , 0 )"		334645	0					
ANR	334677	Callee	zend_string_init		334645	0					
ANR	334678	Identifier	zend_string_init		334645	0					
ANR	334679	ArgumentList	res		334645	1					
ANR	334680	Argument	res		334645	0					
ANR	334681	Identifier	res		334645	0					
ANR	334682	Argument	buf + sizeof ( buf ) - 1 - res		334645	1					
ANR	334683	AdditiveExpression	buf + sizeof ( buf ) - 1 - res		334645	0		+			
ANR	334684	Identifier	buf		334645	0					
ANR	334685	AdditiveExpression	sizeof ( buf ) - 1 - res		334645	1		-			
ANR	334686	SizeofExpression	sizeof ( buf )		334645	0					
ANR	334687	Sizeof	sizeof		334645	0					
ANR	334688	SizeofOperand	buf		334645	1					
ANR	334689	AdditiveExpression	1 - res		334645	1		-			
ANR	334690	PrimaryExpression	1		334645	0					
ANR	334691	Identifier	res		334645	1					
ANR	334692	Argument	0		334645	2					
ANR	334693	PrimaryExpression	0		334645	0					
ANR	334694	ReturnType	ZEND_FASTCALL		334645	1					
ANR	334695	Identifier	zend_long_to_str		334645	2					
ANR	334696	ParameterList	zend_long num		334645	3					
ANR	334697	Parameter	zend_long num	2740:53:69912:69924	334645	0	True				
ANR	334698	ParameterType	zend_long		334645	0					
ANR	334699	Identifier	num		334645	1					
ANR	334700	CFGEntryNode	ENTRY		334645		True				
ANR	334701	CFGExitNode	EXIT		334645		True				
ANR	334702	Symbol	res		334645						
ANR	334703	Symbol	zend_string_init		334645						
ANR	334704	Symbol	buf		334645						
ANR	334705	Symbol	num		334645						
ANR	334706	Symbol	zend_print_long_to_buf		334645						
ANR	334707	Function	is_numeric_str_function	2748:0:70115:70325							
ANR	334708	FunctionDef	"is_numeric_str_function (const zend_string * str , zend_long * lval , double * dval)"		334707	0					
ANR	334709	CompoundStatement		2748:123:70238:70325	334707	0					
ANR	334710	ReturnStatement	"return is_numeric_string_ex ( ZSTR_VAL ( str ) , ZSTR_LEN ( str ) , lval , dval , - 1 , NULL ) ;"	2749:4:70244:70323	334707	0	True				
ANR	334711	CallExpression	"is_numeric_string_ex ( ZSTR_VAL ( str ) , ZSTR_LEN ( str ) , lval , dval , - 1 , NULL )"		334707	0					
ANR	334712	Callee	is_numeric_string_ex		334707	0					
ANR	334713	Identifier	is_numeric_string_ex		334707	0					
ANR	334714	ArgumentList	ZSTR_VAL ( str )		334707	1					
ANR	334715	Argument	ZSTR_VAL ( str )		334707	0					
ANR	334716	CallExpression	ZSTR_VAL ( str )		334707	0					
ANR	334717	Callee	ZSTR_VAL		334707	0					
ANR	334718	Identifier	ZSTR_VAL		334707	0					
ANR	334719	ArgumentList	str		334707	1					
ANR	334720	Argument	str		334707	0					
ANR	334721	Identifier	str		334707	0					
ANR	334722	Argument	ZSTR_LEN ( str )		334707	1					
ANR	334723	CallExpression	ZSTR_LEN ( str )		334707	0					
ANR	334724	Callee	ZSTR_LEN		334707	0					
ANR	334725	Identifier	ZSTR_LEN		334707	0					
ANR	334726	ArgumentList	str		334707	1					
ANR	334727	Argument	str		334707	0					
ANR	334728	Identifier	str		334707	0					
ANR	334729	Argument	lval		334707	2					
ANR	334730	Identifier	lval		334707	0					
ANR	334731	Argument	dval		334707	3					
ANR	334732	Identifier	dval		334707	0					
ANR	334733	Argument	- 1		334707	4					
ANR	334734	UnaryOperationExpression	- 1		334707	0					
ANR	334735	UnaryOperator	-		334707	0					
ANR	334736	PrimaryExpression	1		334707	1					
ANR	334737	Argument	NULL		334707	5					
ANR	334738	Identifier	NULL		334707	0					
ANR	334739	ReturnType	ZEND_API zend_uchar ZEND_FASTCALL		334707	1					
ANR	334740	Identifier	is_numeric_str_function		334707	2					
ANR	334741	ParameterList	"const zend_string * str , zend_long * lval , double * dval"		334707	3					
ANR	334742	Parameter	const zend_string * str	2748:58:70173:70194	334707	0	True				
ANR	334743	ParameterType	const zend_string *		334707	0					
ANR	334744	Identifier	str		334707	1					
ANR	334745	Parameter	zend_long * lval	2748:82:70197:70211	334707	1	True				
ANR	334746	ParameterType	zend_long *		334707	0					
ANR	334747	Identifier	lval		334707	1					
ANR	334748	Parameter	double * dval	2748:99:70214:70225	334707	2	True				
ANR	334749	ParameterType	double *		334707	0					
ANR	334750	Identifier	dval		334707	1					
ANR	334751	CFGEntryNode	ENTRY		334707		True				
ANR	334752	CFGExitNode	EXIT		334707		True				
ANR	334753	Symbol	str		334707						
ANR	334754	Symbol	dval		334707						
ANR	334755	Symbol	NULL		334707						
ANR	334756	Symbol	lval		334707						
ANR	334757	Symbol	ZSTR_LEN		334707						
ANR	334758	Symbol	is_numeric_string_ex		334707						
ANR	334759	Symbol	ZSTR_VAL		334707						
ANR	334760	Function	_is_numeric_string_ex	2753:0:70338:73088							
ANR	334761	FunctionDef	"_is_numeric_string_ex (const char * str , size_t length , zend_long * lval , double * dval , int allow_errors , int * oflow_info)"		334760	0					
ANR	334762	CompoundStatement		2754:0:70502:73088	334760	0					
ANR	334763	IdentifierDeclStatement	const char * ptr ;	2755:1:70505:70520	334760	0	True				
ANR	334764	IdentifierDecl	* ptr		334760	0					
ANR	334765	IdentifierDeclType	const char *		334760	0					
ANR	334766	Identifier	ptr		334760	1					
ANR	334767	IdentifierDeclStatement	"int digits = 0 , dp_or_e = 0 ;"	2756:1:70523:70550	334760	1	True				
ANR	334768	IdentifierDecl	digits = 0		334760	0					
ANR	334769	IdentifierDeclType	int		334760	0					
ANR	334770	Identifier	digits		334760	1					
ANR	334771	AssignmentExpression	digits = 0		334760	2		=			
ANR	334772	Identifier	digits		334760	0					
ANR	334773	PrimaryExpression	0		334760	1					
ANR	334774	IdentifierDecl	dp_or_e = 0		334760	1					
ANR	334775	IdentifierDeclType	int		334760	0					
ANR	334776	Identifier	dp_or_e		334760	1					
ANR	334777	AssignmentExpression	dp_or_e = 0		334760	2		=			
ANR	334778	Identifier	dp_or_e		334760	0					
ANR	334779	PrimaryExpression	0		334760	1					
ANR	334780	IdentifierDeclStatement	double local_dval = 0.0 ;	2757:1:70553:70576	334760	2	True				
ANR	334781	IdentifierDecl	local_dval = 0.0		334760	0					
ANR	334782	IdentifierDeclType	double		334760	0					
ANR	334783	Identifier	local_dval		334760	1					
ANR	334784	AssignmentExpression	local_dval = 0.0		334760	2		=			
ANR	334785	Identifier	local_dval		334760	0					
ANR	334786	PrimaryExpression	0.0		334760	1					
ANR	334787	IdentifierDeclStatement	zend_uchar type ;	2758:1:70579:70594	334760	3	True				
ANR	334788	IdentifierDecl	type		334760	0					
ANR	334789	IdentifierDeclType	zend_uchar		334760	0					
ANR	334790	Identifier	type		334760	1					
ANR	334791	IdentifierDeclStatement	zend_long tmp_lval = 0 ;	2759:1:70597:70619	334760	4	True				
ANR	334792	IdentifierDecl	tmp_lval = 0		334760	0					
ANR	334793	IdentifierDeclType	zend_long		334760	0					
ANR	334794	Identifier	tmp_lval		334760	1					
ANR	334795	AssignmentExpression	tmp_lval = 0		334760	2		=			
ANR	334796	Identifier	tmp_lval		334760	0					
ANR	334797	PrimaryExpression	0		334760	1					
ANR	334798	IdentifierDeclStatement	int neg = 0 ;	2760:1:70622:70633	334760	5	True				
ANR	334799	IdentifierDecl	neg = 0		334760	0					
ANR	334800	IdentifierDeclType	int		334760	0					
ANR	334801	Identifier	neg		334760	1					
ANR	334802	AssignmentExpression	neg = 0		334760	2		=			
ANR	334803	Identifier	neg		334760	0					
ANR	334804	PrimaryExpression	0		334760	1					
ANR	334805	IfStatement	if ( ! length )		334760	6					
ANR	334806	Condition	! length	2762:5:70641:70647	334760	0	True				
ANR	334807	UnaryOperationExpression	! length		334760	0					
ANR	334808	UnaryOperator	!		334760	0					
ANR	334809	Identifier	length		334760	1					
ANR	334810	CompoundStatement		9:14:147:147	334760	1					
ANR	334811	ReturnStatement	return 0 ;	2763:2:70654:70662	334760	0	True				
ANR	334812	PrimaryExpression	0		334760	0					
ANR	334813	IfStatement	if ( oflow_info != NULL )		334760	7					
ANR	334814	Condition	oflow_info != NULL	2766:5:70673:70690	334760	0	True				
ANR	334815	EqualityExpression	oflow_info != NULL		334760	0		!=			
ANR	334816	Identifier	oflow_info		334760	0					
ANR	334817	Identifier	NULL		334760	1					
ANR	334818	CompoundStatement		13:25:190:190	334760	1					
ANR	334819	ExpressionStatement	* oflow_info = 0	2767:2:70697:70712	334760	0	True				
ANR	334820	AssignmentExpression	* oflow_info = 0		334760	0		=			
ANR	334821	UnaryOperationExpression	* oflow_info		334760	0					
ANR	334822	UnaryOperator	*		334760	0					
ANR	334823	Identifier	oflow_info		334760	1					
ANR	334824	PrimaryExpression	0		334760	1					
ANR	334825	WhileStatement	while ( * str == ' ' || * str == '\\t' || * str == '\\n' || * str == '\\r' || * str == '\\v' || * str == '\\f' )		334760	8					
ANR	334826	Condition	* str == ' ' || * str == '\\t' || * str == '\\n' || * str == '\\r' || * str == '\\v' || * str == '\\f'	2772:8:70805:70895	334760	0	True				
ANR	334827	OrExpression	* str == ' ' || * str == '\\t' || * str == '\\n' || * str == '\\r' || * str == '\\v' || * str == '\\f'		334760	0		||			
ANR	334828	EqualityExpression	* str == ' '		334760	0		==			
ANR	334829	UnaryOperationExpression	* str		334760	0					
ANR	334830	UnaryOperator	*		334760	0					
ANR	334831	Identifier	str		334760	1					
ANR	334832	PrimaryExpression	' '		334760	1					
ANR	334833	OrExpression	* str == '\\t' || * str == '\\n' || * str == '\\r' || * str == '\\v' || * str == '\\f'		334760	1		||			
ANR	334834	EqualityExpression	* str == '\\t'		334760	0		==			
ANR	334835	UnaryOperationExpression	* str		334760	0					
ANR	334836	UnaryOperator	*		334760	0					
ANR	334837	Identifier	str		334760	1					
ANR	334838	PrimaryExpression	'\\t'		334760	1					
ANR	334839	OrExpression	* str == '\\n' || * str == '\\r' || * str == '\\v' || * str == '\\f'		334760	1		||			
ANR	334840	EqualityExpression	* str == '\\n'		334760	0		==			
ANR	334841	UnaryOperationExpression	* str		334760	0					
ANR	334842	UnaryOperator	*		334760	0					
ANR	334843	Identifier	str		334760	1					
ANR	334844	PrimaryExpression	'\\n'		334760	1					
ANR	334845	OrExpression	* str == '\\r' || * str == '\\v' || * str == '\\f'		334760	1		||			
ANR	334846	EqualityExpression	* str == '\\r'		334760	0		==			
ANR	334847	UnaryOperationExpression	* str		334760	0					
ANR	334848	UnaryOperator	*		334760	0					
ANR	334849	Identifier	str		334760	1					
ANR	334850	PrimaryExpression	'\\r'		334760	1					
ANR	334851	OrExpression	* str == '\\v' || * str == '\\f'		334760	1		||			
ANR	334852	EqualityExpression	* str == '\\v'		334760	0		==			
ANR	334853	UnaryOperationExpression	* str		334760	0					
ANR	334854	UnaryOperator	*		334760	0					
ANR	334855	Identifier	str		334760	1					
ANR	334856	PrimaryExpression	'\\v'		334760	1					
ANR	334857	EqualityExpression	* str == '\\f'		334760	1		==			
ANR	334858	UnaryOperationExpression	* str		334760	0					
ANR	334859	UnaryOperator	*		334760	0					
ANR	334860	Identifier	str		334760	1					
ANR	334861	PrimaryExpression	'\\f'		334760	1					
ANR	334862	CompoundStatement		19:101:395:395	334760	1					
ANR	334863	ExpressionStatement	str ++	2773:2:70902:70907	334760	0	True				
ANR	334864	PostIncDecOperationExpression	str ++		334760	0					
ANR	334865	Identifier	str		334760	0					
ANR	334866	IncDec	++		334760	1					
ANR	334867	ExpressionStatement	length --	2774:2:70911:70919	334760	1	True				
ANR	334868	PostIncDecOperationExpression	length --		334760	0					
ANR	334869	Identifier	length		334760	0					
ANR	334870	IncDec	--		334760	1					
ANR	334871	ExpressionStatement	ptr = str	2776:1:70925:70934	334760	9	True				
ANR	334872	AssignmentExpression	ptr = str		334760	0		=			
ANR	334873	Identifier	ptr		334760	0					
ANR	334874	Identifier	str		334760	1					
ANR	334875	IfStatement	if ( * ptr == '-' )		334760	10					
ANR	334876	Condition	* ptr == '-'	2778:5:70942:70952	334760	0	True				
ANR	334877	EqualityExpression	* ptr == '-'		334760	0		==			
ANR	334878	UnaryOperationExpression	* ptr		334760	0					
ANR	334879	UnaryOperator	*		334760	0					
ANR	334880	Identifier	ptr		334760	1					
ANR	334881	PrimaryExpression	'-'		334760	1					
ANR	334882	CompoundStatement		25:18:452:452	334760	1					
ANR	334883	ExpressionStatement	neg = 1	2779:2:70959:70966	334760	0	True				
ANR	334884	AssignmentExpression	neg = 1		334760	0		=			
ANR	334885	Identifier	neg		334760	0					
ANR	334886	PrimaryExpression	1		334760	1					
ANR	334887	ExpressionStatement	ptr ++	2780:2:70970:70975	334760	1	True				
ANR	334888	PostIncDecOperationExpression	ptr ++		334760	0					
ANR	334889	Identifier	ptr		334760	0					
ANR	334890	IncDec	++		334760	1					
ANR	334891	ElseStatement	else		334760	0					
ANR	334892	IfStatement	if ( * ptr == '+' )		334760	0					
ANR	334893	Condition	* ptr == '+'	2781:12:70989:70999	334760	0	True				
ANR	334894	EqualityExpression	* ptr == '+'		334760	0		==			
ANR	334895	UnaryOperationExpression	* ptr		334760	0					
ANR	334896	UnaryOperator	*		334760	0					
ANR	334897	Identifier	ptr		334760	1					
ANR	334898	PrimaryExpression	'+'		334760	1					
ANR	334899	CompoundStatement		28:25:499:499	334760	1					
ANR	334900	ExpressionStatement	ptr ++	2782:2:71006:71011	334760	0	True				
ANR	334901	PostIncDecOperationExpression	ptr ++		334760	0					
ANR	334902	Identifier	ptr		334760	0					
ANR	334903	IncDec	++		334760	1					
ANR	334904	IfStatement	if ( ZEND_IS_DIGIT ( * ptr ) )		334760	11					
ANR	334905	Condition	ZEND_IS_DIGIT ( * ptr )	2785:5:71022:71040	334760	0	True				
ANR	334906	CallExpression	ZEND_IS_DIGIT ( * ptr )		334760	0					
ANR	334907	Callee	ZEND_IS_DIGIT		334760	0					
ANR	334908	Identifier	ZEND_IS_DIGIT		334760	0					
ANR	334909	ArgumentList	* ptr		334760	1					
ANR	334910	Argument	* ptr		334760	0					
ANR	334911	UnaryOperationExpression	* ptr		334760	0					
ANR	334912	UnaryOperator	*		334760	0					
ANR	334913	Identifier	ptr		334760	1					
ANR	334914	CompoundStatement		32:26:540:540	334760	1					
ANR	334915	WhileStatement	while ( * ptr == '0' )		334760	0					
ANR	334916	Condition	* ptr == '0'	2787:9:71082:71092	334760	0	True				
ANR	334917	EqualityExpression	* ptr == '0'		334760	0		==			
ANR	334918	UnaryOperationExpression	* ptr		334760	0					
ANR	334919	UnaryOperator	*		334760	0					
ANR	334920	Identifier	ptr		334760	1					
ANR	334921	PrimaryExpression	'0'		334760	1					
ANR	334922	CompoundStatement		34:22:592:592	334760	1					
ANR	334923	ExpressionStatement	ptr ++	2788:3:71100:71105	334760	0	True				
ANR	334924	PostIncDecOperationExpression	ptr ++		334760	0					
ANR	334925	Identifier	ptr		334760	0					
ANR	334926	IncDec	++		334760	1					
ANR	334927	ForStatement	"for ( type = IS_LONG ; ! ( digits >= MAX_LENGTH_OF_LONG && ( dval || allow_errors == 1 ) ) ; digits ++ , ptr ++ )"		334760	1					
ANR	334928	ForInit	type = IS_LONG ;	2794:7:71332:71346	334760	0	True				
ANR	334929	AssignmentExpression	type = IS_LONG		334760	0		=			
ANR	334930	Identifier	type		334760	0					
ANR	334931	Identifier	IS_LONG		334760	1					
ANR	334932	Condition	! ( digits >= MAX_LENGTH_OF_LONG && ( dval || allow_errors == 1 ) )	2794:23:71348:71409	334760	1	True				
ANR	334933	UnaryOperationExpression	! ( digits >= MAX_LENGTH_OF_LONG && ( dval || allow_errors == 1 ) )		334760	0					
ANR	334934	UnaryOperator	!		334760	0					
ANR	334935	AndExpression	digits >= MAX_LENGTH_OF_LONG && ( dval || allow_errors == 1 )		334760	1		&&			
ANR	334936	RelationalExpression	digits >= MAX_LENGTH_OF_LONG		334760	0		>=			
ANR	334937	Identifier	digits		334760	0					
ANR	334938	Identifier	MAX_LENGTH_OF_LONG		334760	1					
ANR	334939	OrExpression	dval || allow_errors == 1		334760	1		||			
ANR	334940	Identifier	dval		334760	0					
ANR	334941	EqualityExpression	allow_errors == 1		334760	1		==			
ANR	334942	Identifier	allow_errors		334760	0					
ANR	334943	PrimaryExpression	1		334760	1					
ANR	334944	Expression	"digits ++ , ptr ++"	2794:87:71412:71426	334760	2	True				
ANR	334945	PostIncDecOperationExpression	digits ++		334760	0					
ANR	334946	Identifier	digits		334760	0					
ANR	334947	IncDec	++		334760	1					
ANR	334948	PostIncDecOperationExpression	ptr ++		334760	1					
ANR	334949	Identifier	ptr		334760	0					
ANR	334950	IncDec	++		334760	1					
ANR	334951	CompoundStatement		41:104:926:926	334760	3					
ANR	334952	Label	check_digits :	2795:0:71431:71443	334760	0	True				
ANR	334953	Identifier	check_digits		334760	0					
ANR	334954	IfStatement	if ( ZEND_IS_DIGIT ( * ptr ) )		334760	1					
ANR	334955	Condition	ZEND_IS_DIGIT ( * ptr )	2796:7:71452:71470	334760	0	True				
ANR	334956	CallExpression	ZEND_IS_DIGIT ( * ptr )		334760	0					
ANR	334957	Callee	ZEND_IS_DIGIT		334760	0					
ANR	334958	Identifier	ZEND_IS_DIGIT		334760	0					
ANR	334959	ArgumentList	* ptr		334760	1					
ANR	334960	Argument	* ptr		334760	0					
ANR	334961	UnaryOperationExpression	* ptr		334760	0					
ANR	334962	UnaryOperator	*		334760	0					
ANR	334963	Identifier	ptr		334760	1					
ANR	334964	CompoundStatement		43:28:970:970	334760	1					
ANR	334965	ExpressionStatement	tmp_lval = tmp_lval * 10 + ( * ptr ) - '0'	2797:4:71479:71518	334760	0	True				
ANR	334966	AssignmentExpression	tmp_lval = tmp_lval * 10 + ( * ptr ) - '0'		334760	0		=			
ANR	334967	Identifier	tmp_lval		334760	0					
ANR	334968	AdditiveExpression	tmp_lval * 10 + ( * ptr ) - '0'		334760	1		+			
ANR	334969	MultiplicativeExpression	tmp_lval * 10		334760	0		*			
ANR	334970	Identifier	tmp_lval		334760	0					
ANR	334971	PrimaryExpression	10		334760	1					
ANR	334972	AdditiveExpression	( * ptr ) - '0'		334760	1		-			
ANR	334973	UnaryOperationExpression	* ptr		334760	0					
ANR	334974	UnaryOperator	*		334760	0					
ANR	334975	Identifier	ptr		334760	1					
ANR	334976	PrimaryExpression	'0'		334760	1					
ANR	334977	ContinueStatement	continue ;	2798:4:71524:71532	334760	1	True				
ANR	334978	ElseStatement	else		334760	0					
ANR	334979	IfStatement	if ( * ptr == '.' && dp_or_e < 1 )		334760	0					
ANR	334980	Condition	* ptr == '.' && dp_or_e < 1	2799:14:71548:71573	334760	0	True				
ANR	334981	AndExpression	* ptr == '.' && dp_or_e < 1		334760	0		&&			
ANR	334982	EqualityExpression	* ptr == '.'		334760	0		==			
ANR	334983	UnaryOperationExpression	* ptr		334760	0					
ANR	334984	UnaryOperator	*		334760	0					
ANR	334985	Identifier	ptr		334760	1					
ANR	334986	PrimaryExpression	'.'		334760	1					
ANR	334987	RelationalExpression	dp_or_e < 1		334760	1		<			
ANR	334988	Identifier	dp_or_e		334760	0					
ANR	334989	PrimaryExpression	1		334760	1					
ANR	334990	CompoundStatement		46:42:1073:1073	334760	1					
ANR	334991	GotoStatement	goto process_double ;	2800:4:71582:71601	334760	0	True				
ANR	334992	Identifier	process_double		334760	0					
ANR	334993	ElseStatement	else		334760	0					
ANR	334994	IfStatement	if ( ( * ptr == 'e' || * ptr == 'E' ) && dp_or_e < 2 )		334760	0					
ANR	334995	Condition	( * ptr == 'e' || * ptr == 'E' ) && dp_or_e < 2	2801:14:71617:71659	334760	0	True				
ANR	334996	AndExpression	( * ptr == 'e' || * ptr == 'E' ) && dp_or_e < 2		334760	0		&&			
ANR	334997	OrExpression	* ptr == 'e' || * ptr == 'E'		334760	0		||			
ANR	334998	EqualityExpression	* ptr == 'e'		334760	0		==			
ANR	334999	UnaryOperationExpression	* ptr		334760	0					
ANR	335000	UnaryOperator	*		334760	0					
ANR	335001	Identifier	ptr		334760	1					
ANR	335002	PrimaryExpression	'e'		334760	1					
ANR	335003	EqualityExpression	* ptr == 'E'		334760	1		==			
ANR	335004	UnaryOperationExpression	* ptr		334760	0					
ANR	335005	UnaryOperator	*		334760	0					
ANR	335006	Identifier	ptr		334760	1					
ANR	335007	PrimaryExpression	'E'		334760	1					
ANR	335008	RelationalExpression	dp_or_e < 2		334760	1		<			
ANR	335009	Identifier	dp_or_e		334760	0					
ANR	335010	PrimaryExpression	2		334760	1					
ANR	335011	CompoundStatement		49:4:1165:1188	334760	1					
ANR	335012	IdentifierDeclStatement	const char * e = ptr + 1 ;	2802:4:71668:71691	334760	0	True				
ANR	335013	IdentifierDecl	* e = ptr + 1		334760	0					
ANR	335014	IdentifierDeclType	const char *		334760	0					
ANR	335015	Identifier	e		334760	1					
ANR	335016	AssignmentExpression	* e = ptr + 1		334760	2		=			
ANR	335017	Identifier	e		334760	0					
ANR	335018	AdditiveExpression	ptr + 1		334760	1		+			
ANR	335019	Identifier	ptr		334760	0					
ANR	335020	PrimaryExpression	1		334760	1					
ANR	335021	IfStatement	if ( * e == '-' || * e == '+' )		334760	1					
ANR	335022	Condition	* e == '-' || * e == '+'	2804:8:71702:71723	334760	0	True				
ANR	335023	OrExpression	* e == '-' || * e == '+'		334760	0		||			
ANR	335024	EqualityExpression	* e == '-'		334760	0		==			
ANR	335025	UnaryOperationExpression	* e		334760	0					
ANR	335026	UnaryOperator	*		334760	0					
ANR	335027	Identifier	e		334760	1					
ANR	335028	PrimaryExpression	'-'		334760	1					
ANR	335029	EqualityExpression	* e == '+'		334760	1		==			
ANR	335030	UnaryOperationExpression	* e		334760	0					
ANR	335031	UnaryOperator	*		334760	0					
ANR	335032	Identifier	e		334760	1					
ANR	335033	PrimaryExpression	'+'		334760	1					
ANR	335034	CompoundStatement		51:32:1223:1223	334760	1					
ANR	335035	ExpressionStatement	ptr = e ++	2805:5:71733:71742	334760	0	True				
ANR	335036	AssignmentExpression	ptr = e ++		334760	0		=			
ANR	335037	Identifier	ptr		334760	0					
ANR	335038	PostIncDecOperationExpression	e ++		334760	1					
ANR	335039	Identifier	e		334760	0					
ANR	335040	IncDec	++		334760	1					
ANR	335041	IfStatement	if ( ZEND_IS_DIGIT ( * e ) )		334760	2					
ANR	335042	Condition	ZEND_IS_DIGIT ( * e )	2807:8:71758:71774	334760	0	True				
ANR	335043	CallExpression	ZEND_IS_DIGIT ( * e )		334760	0					
ANR	335044	Callee	ZEND_IS_DIGIT		334760	0					
ANR	335045	Identifier	ZEND_IS_DIGIT		334760	0					
ANR	335046	ArgumentList	* e		334760	1					
ANR	335047	Argument	* e		334760	0					
ANR	335048	UnaryOperationExpression	* e		334760	0					
ANR	335049	UnaryOperator	*		334760	0					
ANR	335050	Identifier	e		334760	1					
ANR	335051	CompoundStatement		54:27:1274:1274	334760	1					
ANR	335052	GotoStatement	goto process_double ;	2808:5:71784:71803	334760	0	True				
ANR	335053	Identifier	process_double		334760	0					
ANR	335054	BreakStatement	break ;	2812:3:71820:71825	334760	2	True				
ANR	335055	IfStatement	if ( digits >= MAX_LENGTH_OF_LONG )		334760	2					
ANR	335056	Condition	digits >= MAX_LENGTH_OF_LONG	2815:6:71838:71865	334760	0	True				
ANR	335057	RelationalExpression	digits >= MAX_LENGTH_OF_LONG		334760	0		>=			
ANR	335058	Identifier	digits		334760	0					
ANR	335059	Identifier	MAX_LENGTH_OF_LONG		334760	1					
ANR	335060	CompoundStatement		62:36:1365:1365	334760	1					
ANR	335061	IfStatement	if ( oflow_info != NULL )		334760	0					
ANR	335062	Condition	oflow_info != NULL	2816:7:71877:71894	334760	0	True				
ANR	335063	EqualityExpression	oflow_info != NULL		334760	0		!=			
ANR	335064	Identifier	oflow_info		334760	0					
ANR	335065	Identifier	NULL		334760	1					
ANR	335066	CompoundStatement		63:27:1394:1394	334760	1					
ANR	335067	ExpressionStatement	* oflow_info = * str == '-' ? - 1 : 1	2817:4:71903:71937	334760	0	True				
ANR	335068	AssignmentExpression	* oflow_info = * str == '-' ? - 1 : 1		334760	0		=			
ANR	335069	UnaryOperationExpression	* oflow_info		334760	0					
ANR	335070	UnaryOperator	*		334760	0					
ANR	335071	Identifier	oflow_info		334760	1					
ANR	335072	ConditionalExpression	* str == '-' ? - 1 : 1		334760	1					
ANR	335073	Condition	* str == '-'		334760	0					
ANR	335074	EqualityExpression	* str == '-'		334760	0		==			
ANR	335075	UnaryOperationExpression	* str		334760	0					
ANR	335076	UnaryOperator	*		334760	0					
ANR	335077	Identifier	str		334760	1					
ANR	335078	PrimaryExpression	'-'		334760	1					
ANR	335079	UnaryOperationExpression	- 1		334760	1					
ANR	335080	UnaryOperator	-		334760	0					
ANR	335081	PrimaryExpression	1		334760	1					
ANR	335082	PrimaryExpression	1		334760	2					
ANR	335083	ExpressionStatement	dp_or_e = - 1	2819:3:71947:71959	334760	1	True				
ANR	335084	AssignmentExpression	dp_or_e = - 1		334760	0		=			
ANR	335085	Identifier	dp_or_e		334760	0					
ANR	335086	UnaryOperationExpression	- 1		334760	1					
ANR	335087	UnaryOperator	-		334760	0					
ANR	335088	PrimaryExpression	1		334760	1					
ANR	335089	GotoStatement	goto process_double ;	2820:3:71964:71983	334760	2	True				
ANR	335090	Identifier	process_double		334760	0					
ANR	335091	ElseStatement	else		334760	0					
ANR	335092	IfStatement	if ( * ptr == '.' && ZEND_IS_DIGIT ( ptr [ 1 ] ) )		334760	0					
ANR	335093	Condition	* ptr == '.' && ZEND_IS_DIGIT ( ptr [ 1 ] )	2822:12:72001:72036	334760	0	True				
ANR	335094	AndExpression	* ptr == '.' && ZEND_IS_DIGIT ( ptr [ 1 ] )		334760	0		&&			
ANR	335095	EqualityExpression	* ptr == '.'		334760	0		==			
ANR	335096	UnaryOperationExpression	* ptr		334760	0					
ANR	335097	UnaryOperator	*		334760	0					
ANR	335098	Identifier	ptr		334760	1					
ANR	335099	PrimaryExpression	'.'		334760	1					
ANR	335100	CallExpression	ZEND_IS_DIGIT ( ptr [ 1 ] )		334760	1					
ANR	335101	Callee	ZEND_IS_DIGIT		334760	0					
ANR	335102	Identifier	ZEND_IS_DIGIT		334760	0					
ANR	335103	ArgumentList	ptr [ 1 ]		334760	1					
ANR	335104	Argument	ptr [ 1 ]		334760	0					
ANR	335105	ArrayIndexing	ptr [ 1 ]		334760	0					
ANR	335106	Identifier	ptr		334760	0					
ANR	335107	PrimaryExpression	1		334760	1					
ANR	335108	CompoundStatement		69:50:1536:1536	334760	1					
ANR	335109	Label	process_double :	2823:0:72041:72055	334760	0	True				
ANR	335110	Identifier	process_double		334760	0					
ANR	335111	ExpressionStatement	type = IS_DOUBLE	2824:2:72059:72075	334760	1	True				
ANR	335112	AssignmentExpression	type = IS_DOUBLE		334760	0		=			
ANR	335113	Identifier	type		334760	0					
ANR	335114	Identifier	IS_DOUBLE		334760	1					
ANR	335115	IfStatement	if ( dval )		334760	2					
ANR	335116	Condition	dval	2828:6:72206:72209	334760	0	True				
ANR	335117	Identifier	dval		334760	0					
ANR	335118	CompoundStatement		75:12:1709:1709	334760	1					
ANR	335119	ExpressionStatement	"local_dval = zend_strtod ( str , & ptr )"	2829:3:72217:72252	334760	0	True				
ANR	335120	AssignmentExpression	"local_dval = zend_strtod ( str , & ptr )"		334760	0		=			
ANR	335121	Identifier	local_dval		334760	0					
ANR	335122	CallExpression	"zend_strtod ( str , & ptr )"		334760	1					
ANR	335123	Callee	zend_strtod		334760	0					
ANR	335124	Identifier	zend_strtod		334760	0					
ANR	335125	ArgumentList	str		334760	1					
ANR	335126	Argument	str		334760	0					
ANR	335127	Identifier	str		334760	0					
ANR	335128	Argument	& ptr		334760	1					
ANR	335129	UnaryOperationExpression	& ptr		334760	0					
ANR	335130	UnaryOperator	&		334760	0					
ANR	335131	Identifier	ptr		334760	1					
ANR	335132	ElseStatement	else		334760	0					
ANR	335133	IfStatement	if ( allow_errors != 1 && dp_or_e != - 1 )		334760	0					
ANR	335134	Condition	allow_errors != 1 && dp_or_e != - 1	2830:13:72267:72300	334760	0	True				
ANR	335135	AndExpression	allow_errors != 1 && dp_or_e != - 1		334760	0		&&			
ANR	335136	EqualityExpression	allow_errors != 1		334760	0		!=			
ANR	335137	Identifier	allow_errors		334760	0					
ANR	335138	PrimaryExpression	1		334760	1					
ANR	335139	EqualityExpression	dp_or_e != - 1		334760	1		!=			
ANR	335140	Identifier	dp_or_e		334760	0					
ANR	335141	UnaryOperationExpression	- 1		334760	1					
ANR	335142	UnaryOperator	-		334760	0					
ANR	335143	PrimaryExpression	1		334760	1					
ANR	335144	CompoundStatement		77:49:1800:1800	334760	1					
ANR	335145	ExpressionStatement	dp_or_e = ( * ptr ++ == '.' ) ? 1 : 2	2831:3:72308:72341	334760	0	True				
ANR	335146	AssignmentExpression	dp_or_e = ( * ptr ++ == '.' ) ? 1 : 2		334760	0		=			
ANR	335147	Identifier	dp_or_e		334760	0					
ANR	335148	ConditionalExpression	( * ptr ++ == '.' ) ? 1 : 2		334760	1					
ANR	335149	Condition	* ptr ++ == '.'		334760	0					
ANR	335150	EqualityExpression	* ptr ++ == '.'		334760	0		==			
ANR	335151	UnaryOperationExpression	* ptr ++		334760	0					
ANR	335152	UnaryOperator	*		334760	0					
ANR	335153	PostIncDecOperationExpression	ptr ++		334760	1					
ANR	335154	Identifier	ptr		334760	0					
ANR	335155	IncDec	++		334760	1					
ANR	335156	PrimaryExpression	'.'		334760	1					
ANR	335157	PrimaryExpression	1		334760	1					
ANR	335158	PrimaryExpression	2		334760	2					
ANR	335159	GotoStatement	goto check_digits ;	2832:3:72346:72363	334760	1	True				
ANR	335160	Identifier	check_digits		334760	0					
ANR	335161	ElseStatement	else		334760	0					
ANR	335162	CompoundStatement		81:8:1874:1874	334760	0					
ANR	335163	ReturnStatement	return 0 ;	2835:2:72381:72389	334760	0	True				
ANR	335164	PrimaryExpression	0		334760	0					
ANR	335165	IfStatement	if ( ptr != str + length )		334760	12					
ANR	335166	Condition	ptr != str + length	2838:5:72400:72418	334760	0	True				
ANR	335167	EqualityExpression	ptr != str + length		334760	0		!=			
ANR	335168	Identifier	ptr		334760	0					
ANR	335169	AdditiveExpression	str + length		334760	1		+			
ANR	335170	Identifier	str		334760	0					
ANR	335171	Identifier	length		334760	1					
ANR	335172	CompoundStatement		85:26:1918:1918	334760	1					
ANR	335173	IfStatement	if ( ! allow_errors )		334760	0					
ANR	335174	Condition	! allow_errors	2839:6:72429:72441	334760	0	True				
ANR	335175	UnaryOperationExpression	! allow_errors		334760	0					
ANR	335176	UnaryOperator	!		334760	0					
ANR	335177	Identifier	allow_errors		334760	1					
ANR	335178	CompoundStatement		86:21:1941:1941	334760	1					
ANR	335179	ReturnStatement	return 0 ;	2840:3:72449:72457	334760	0	True				
ANR	335180	PrimaryExpression	0		334760	0					
ANR	335181	IfStatement	if ( allow_errors == - 1 )		334760	1					
ANR	335182	Condition	allow_errors == - 1	2842:6:72469:72486	334760	0	True				
ANR	335183	EqualityExpression	allow_errors == - 1		334760	0		==			
ANR	335184	Identifier	allow_errors		334760	0					
ANR	335185	UnaryOperationExpression	- 1		334760	1					
ANR	335186	UnaryOperator	-		334760	0					
ANR	335187	PrimaryExpression	1		334760	1					
ANR	335188	CompoundStatement		89:26:1986:1986	334760	1					
ANR	335189	ExpressionStatement	"zend_error ( E_NOTICE , ""A non well formed numeric value encountered"" )"	2843:3:72494:72561	334760	0	True				
ANR	335190	CallExpression	"zend_error ( E_NOTICE , ""A non well formed numeric value encountered"" )"		334760	0					
ANR	335191	Callee	zend_error		334760	0					
ANR	335192	Identifier	zend_error		334760	0					
ANR	335193	ArgumentList	E_NOTICE		334760	1					
ANR	335194	Argument	E_NOTICE		334760	0					
ANR	335195	Identifier	E_NOTICE		334760	0					
ANR	335196	Argument	"""A non well formed numeric value encountered"""		334760	1					
ANR	335197	PrimaryExpression	"""A non well formed numeric value encountered"""		334760	0					
ANR	335198	IfStatement	if ( type == IS_LONG )		334760	13					
ANR	335199	Condition	type == IS_LONG	2847:5:72576:72590	334760	0	True				
ANR	335200	EqualityExpression	type == IS_LONG		334760	0		==			
ANR	335201	Identifier	type		334760	0					
ANR	335202	Identifier	IS_LONG		334760	1					
ANR	335203	CompoundStatement		94:22:2090:2090	334760	1					
ANR	335204	IfStatement	if ( digits == MAX_LENGTH_OF_LONG - 1 )		334760	0					
ANR	335205	Condition	digits == MAX_LENGTH_OF_LONG - 1	2848:6:72601:72632	334760	0	True				
ANR	335206	EqualityExpression	digits == MAX_LENGTH_OF_LONG - 1		334760	0		==			
ANR	335207	Identifier	digits		334760	0					
ANR	335208	AdditiveExpression	MAX_LENGTH_OF_LONG - 1		334760	1		-			
ANR	335209	Identifier	MAX_LENGTH_OF_LONG		334760	0					
ANR	335210	PrimaryExpression	1		334760	1					
ANR	335211	CompoundStatement		96:3:2137:2185	334760	1					
ANR	335212	IdentifierDeclStatement	"int cmp = strcmp ( & ptr [ - digits ] , long_min_digits ) ;"	2849:3:72640:72688	334760	0	True				
ANR	335213	IdentifierDecl	"cmp = strcmp ( & ptr [ - digits ] , long_min_digits )"		334760	0					
ANR	335214	IdentifierDeclType	int		334760	0					
ANR	335215	Identifier	cmp		334760	1					
ANR	335216	AssignmentExpression	"cmp = strcmp ( & ptr [ - digits ] , long_min_digits )"		334760	2		=			
ANR	335217	Identifier	cmp		334760	0					
ANR	335218	CallExpression	"strcmp ( & ptr [ - digits ] , long_min_digits )"		334760	1					
ANR	335219	Callee	strcmp		334760	0					
ANR	335220	Identifier	strcmp		334760	0					
ANR	335221	ArgumentList	& ptr [ - digits ]		334760	1					
ANR	335222	Argument	& ptr [ - digits ]		334760	0					
ANR	335223	UnaryOperationExpression	& ptr [ - digits ]		334760	0					
ANR	335224	UnaryOperator	&		334760	0					
ANR	335225	ArrayIndexing	ptr [ - digits ]		334760	1					
ANR	335226	Identifier	ptr		334760	0					
ANR	335227	UnaryOperationExpression	- digits		334760	1					
ANR	335228	UnaryOperator	-		334760	0					
ANR	335229	Identifier	digits		334760	1					
ANR	335230	Argument	long_min_digits		334760	1					
ANR	335231	Identifier	long_min_digits		334760	0					
ANR	335232	IfStatement	if ( ! ( cmp < 0 || ( cmp == 0 && * str == '-' ) ) )		334760	1					
ANR	335233	Condition	! ( cmp < 0 || ( cmp == 0 && * str == '-' ) )	2851:7:72698:72736	334760	0	True				
ANR	335234	UnaryOperationExpression	! ( cmp < 0 || ( cmp == 0 && * str == '-' ) )		334760	0					
ANR	335235	UnaryOperator	!		334760	0					
ANR	335236	OrExpression	cmp < 0 || ( cmp == 0 && * str == '-' )		334760	1		||			
ANR	335237	RelationalExpression	cmp < 0		334760	0		<			
ANR	335238	Identifier	cmp		334760	0					
ANR	335239	PrimaryExpression	0		334760	1					
ANR	335240	AndExpression	cmp == 0 && * str == '-'		334760	1		&&			
ANR	335241	EqualityExpression	cmp == 0		334760	0		==			
ANR	335242	Identifier	cmp		334760	0					
ANR	335243	PrimaryExpression	0		334760	1					
ANR	335244	EqualityExpression	* str == '-'		334760	1		==			
ANR	335245	UnaryOperationExpression	* str		334760	0					
ANR	335246	UnaryOperator	*		334760	0					
ANR	335247	Identifier	str		334760	1					
ANR	335248	PrimaryExpression	'-'		334760	1					
ANR	335249	CompoundStatement		98:48:2236:2236	334760	1					
ANR	335250	IfStatement	if ( dval )		334760	0					
ANR	335251	Condition	dval	2852:8:72749:72752	334760	0	True				
ANR	335252	Identifier	dval		334760	0					
ANR	335253	CompoundStatement		99:14:2252:2252	334760	1					
ANR	335254	ExpressionStatement	"* dval = zend_strtod ( str , NULL )"	2853:5:72762:72792	334760	0	True				
ANR	335255	AssignmentExpression	"* dval = zend_strtod ( str , NULL )"		334760	0		=			
ANR	335256	UnaryOperationExpression	* dval		334760	0					
ANR	335257	UnaryOperator	*		334760	0					
ANR	335258	Identifier	dval		334760	1					
ANR	335259	CallExpression	"zend_strtod ( str , NULL )"		334760	1					
ANR	335260	Callee	zend_strtod		334760	0					
ANR	335261	Identifier	zend_strtod		334760	0					
ANR	335262	ArgumentList	str		334760	1					
ANR	335263	Argument	str		334760	0					
ANR	335264	Identifier	str		334760	0					
ANR	335265	Argument	NULL		334760	1					
ANR	335266	Identifier	NULL		334760	0					
ANR	335267	IfStatement	if ( oflow_info != NULL )		334760	1					
ANR	335268	Condition	oflow_info != NULL	2855:8:72808:72825	334760	0	True				
ANR	335269	EqualityExpression	oflow_info != NULL		334760	0		!=			
ANR	335270	Identifier	oflow_info		334760	0					
ANR	335271	Identifier	NULL		334760	1					
ANR	335272	CompoundStatement		102:28:2325:2325	334760	1					
ANR	335273	ExpressionStatement	* oflow_info = * str == '-' ? - 1 : 1	2856:5:72835:72869	334760	0	True				
ANR	335274	AssignmentExpression	* oflow_info = * str == '-' ? - 1 : 1		334760	0		=			
ANR	335275	UnaryOperationExpression	* oflow_info		334760	0					
ANR	335276	UnaryOperator	*		334760	0					
ANR	335277	Identifier	oflow_info		334760	1					
ANR	335278	ConditionalExpression	* str == '-' ? - 1 : 1		334760	1					
ANR	335279	Condition	* str == '-'		334760	0					
ANR	335280	EqualityExpression	* str == '-'		334760	0		==			
ANR	335281	UnaryOperationExpression	* str		334760	0					
ANR	335282	UnaryOperator	*		334760	0					
ANR	335283	Identifier	str		334760	1					
ANR	335284	PrimaryExpression	'-'		334760	1					
ANR	335285	UnaryOperationExpression	- 1		334760	1					
ANR	335286	UnaryOperator	-		334760	0					
ANR	335287	PrimaryExpression	1		334760	1					
ANR	335288	PrimaryExpression	1		334760	2					
ANR	335289	ReturnStatement	return IS_DOUBLE ;	2859:4:72882:72898	334760	2	True				
ANR	335290	Identifier	IS_DOUBLE		334760	0					
ANR	335291	IfStatement	if ( lval )		334760	1					
ANR	335292	Condition	lval	2863:6:72916:72919	334760	0	True				
ANR	335293	Identifier	lval		334760	0					
ANR	335294	CompoundStatement		110:12:2419:2419	334760	1					
ANR	335295	IfStatement	if ( neg )		334760	0					
ANR	335296	Condition	neg	2864:7:72931:72933	334760	0	True				
ANR	335297	Identifier	neg		334760	0					
ANR	335298	CompoundStatement		111:12:2433:2433	334760	1					
ANR	335299	ExpressionStatement	tmp_lval = - tmp_lval	2865:4:72942:72962	334760	0	True				
ANR	335300	AssignmentExpression	tmp_lval = - tmp_lval		334760	0		=			
ANR	335301	Identifier	tmp_lval		334760	0					
ANR	335302	UnaryOperationExpression	- tmp_lval		334760	1					
ANR	335303	UnaryOperator	-		334760	0					
ANR	335304	Identifier	tmp_lval		334760	1					
ANR	335305	ExpressionStatement	* lval = tmp_lval	2867:3:72972:72988	334760	1	True				
ANR	335306	AssignmentExpression	* lval = tmp_lval		334760	0		=			
ANR	335307	UnaryOperationExpression	* lval		334760	0					
ANR	335308	UnaryOperator	*		334760	0					
ANR	335309	Identifier	lval		334760	1					
ANR	335310	Identifier	tmp_lval		334760	1					
ANR	335311	ReturnStatement	return IS_LONG ;	2870:2:72997:73011	334760	2	True				
ANR	335312	Identifier	IS_LONG		334760	0					
ANR	335313	ElseStatement	else		334760	0					
ANR	335314	CompoundStatement		118:8:2518:2518	334760	0					
ANR	335315	IfStatement	if ( dval )		334760	0					
ANR	335316	Condition	dval	2872:6:73029:73032	334760	0	True				
ANR	335317	Identifier	dval		334760	0					
ANR	335318	CompoundStatement		119:12:2532:2532	334760	1					
ANR	335319	ExpressionStatement	* dval = local_dval	2873:3:73040:73058	334760	0	True				
ANR	335320	AssignmentExpression	* dval = local_dval		334760	0		=			
ANR	335321	UnaryOperationExpression	* dval		334760	0					
ANR	335322	UnaryOperator	*		334760	0					
ANR	335323	Identifier	dval		334760	1					
ANR	335324	Identifier	local_dval		334760	1					
ANR	335325	ReturnStatement	return IS_DOUBLE ;	2876:2:73067:73083	334760	1	True				
ANR	335326	Identifier	IS_DOUBLE		334760	0					
ANR	335327	ReturnType	ZEND_API zend_uchar ZEND_FASTCALL		334760	1					
ANR	335328	Identifier	_is_numeric_string_ex		334760	2					
ANR	335329	ParameterList	"const char * str , size_t length , zend_long * lval , double * dval , int allow_errors , int * oflow_info"		334760	3					
ANR	335330	Parameter	const char * str	2753:56:70394:70408	334760	0	True				
ANR	335331	ParameterType	const char *		334760	0					
ANR	335332	Identifier	str		334760	1					
ANR	335333	Parameter	size_t length	2753:73:70411:70423	334760	1	True				
ANR	335334	ParameterType	size_t		334760	0					
ANR	335335	Identifier	length		334760	1					
ANR	335336	Parameter	zend_long * lval	2753:88:70426:70440	334760	2	True				
ANR	335337	ParameterType	zend_long *		334760	0					
ANR	335338	Identifier	lval		334760	1					
ANR	335339	Parameter	double * dval	2753:105:70443:70454	334760	3	True				
ANR	335340	ParameterType	double *		334760	0					
ANR	335341	Identifier	dval		334760	1					
ANR	335342	Parameter	int allow_errors	2753:119:70457:70472	334760	4	True				
ANR	335343	ParameterType	int		334760	0					
ANR	335344	Identifier	allow_errors		334760	1					
ANR	335345	Parameter	int * oflow_info	2753:137:70475:70489	334760	5	True				
ANR	335346	ParameterType	int *		334760	0					
ANR	335347	Identifier	oflow_info		334760	1					
ANR	335348	CFGEntryNode	ENTRY		334760		True				
ANR	335349	CFGExitNode	EXIT		334760		True				
ANR	335350	Symbol	allow_errors		334760						
ANR	335351	Symbol	tmp_lval		334760						
ANR	335352	Symbol	lval		334760						
ANR	335353	Symbol	cmp		334760						
ANR	335354	Symbol	ZEND_IS_DIGIT		334760						
ANR	335355	Symbol	* lval		334760						
ANR	335356	Symbol	type		334760						
ANR	335357	Symbol	zend_strtod		334760						
ANR	335358	Symbol	neg		334760						
ANR	335359	Symbol	dval		334760						
ANR	335360	Symbol	long_min_digits		334760						
ANR	335361	Symbol	& ptr		334760						
ANR	335362	Symbol	IS_LONG		334760						
ANR	335363	Symbol	* ptr		334760						
ANR	335364	Symbol	* str		334760						
ANR	335365	Symbol	dp_or_e		334760						
ANR	335366	Symbol	strcmp		334760						
ANR	335367	Symbol	* oflow_info		334760						
ANR	335368	Symbol	NULL		334760						
ANR	335369	Symbol	e		334760						
ANR	335370	Symbol	* ptr ++		334760						
ANR	335371	Symbol	length		334760						
ANR	335372	Symbol	MAX_LENGTH_OF_LONG		334760						
ANR	335373	Symbol	E_NOTICE		334760						
ANR	335374	Symbol	* dval		334760						
ANR	335375	Symbol	ptr		334760						
ANR	335376	Symbol	* e		334760						
ANR	335377	Symbol	str		334760						
ANR	335378	Symbol	IS_DOUBLE		334760						
ANR	335379	Symbol	digits		334760						
ANR	335380	Symbol	oflow_info		334760						
ANR	335381	Symbol	local_dval		334760						
ANR	335382	Function	zend_memnstr_ex_pre	2885:0:73219:73633							
ANR	335383	FunctionDef	"zend_memnstr_ex_pre (unsigned int td [ ] , const char * needle , size_t needle_len , int reverse)"		335382	0					
ANR	335384	CompoundStatement		2885:132:73351:73633	335382	0					
ANR	335385	IdentifierDeclStatement	int i ;	2886:1:73354:73359	335382	0	True				
ANR	335386	IdentifierDecl	i		335382	0					
ANR	335387	IdentifierDeclType	int		335382	0					
ANR	335388	Identifier	i		335382	1					
ANR	335389	ForStatement	for ( i = 0 ; i < 256 ; i ++ )		335382	1					
ANR	335390	ForInit	i = 0 ;	2888:6:73368:73373	335382	0	True				
ANR	335391	AssignmentExpression	i = 0		335382	0		=			
ANR	335392	Identifier	i		335382	0					
ANR	335393	PrimaryExpression	0		335382	1					
ANR	335394	Condition	i < 256	2888:13:73375:73381	335382	1	True				
ANR	335395	RelationalExpression	i < 256		335382	0		<			
ANR	335396	Identifier	i		335382	0					
ANR	335397	PrimaryExpression	256		335382	1					
ANR	335398	PostIncDecOperationExpression	i ++	2888:22:73384:73386	335382	2	True				
ANR	335399	Identifier	i		335382	0					
ANR	335400	IncDec	++		335382	1					
ANR	335401	CompoundStatement		4:27:37:37	335382	3					
ANR	335402	ExpressionStatement	td [ i ] = needle_len + 1	2889:2:73393:73415	335382	0	True				
ANR	335403	AssignmentExpression	td [ i ] = needle_len + 1		335382	0		=			
ANR	335404	ArrayIndexing	td [ i ]		335382	0					
ANR	335405	Identifier	td		335382	0					
ANR	335406	Identifier	i		335382	1					
ANR	335407	AdditiveExpression	needle_len + 1		335382	1		+			
ANR	335408	Identifier	needle_len		335382	0					
ANR	335409	PrimaryExpression	1		335382	1					
ANR	335410	IfStatement	if ( reverse )		335382	2					
ANR	335411	Condition	reverse	2892:5:73426:73432	335382	0	True				
ANR	335412	Identifier	reverse		335382	0					
ANR	335413	CompoundStatement		8:14:83:83	335382	1					
ANR	335414	ForStatement	for ( i = needle_len - 1 ; i >= 0 ; i -- )		335382	0					
ANR	335415	ForInit	i = needle_len - 1 ;	2893:7:73444:73462	335382	0	True				
ANR	335416	AssignmentExpression	i = needle_len - 1		335382	0		=			
ANR	335417	Identifier	i		335382	0					
ANR	335418	AdditiveExpression	needle_len - 1		335382	1		-			
ANR	335419	Identifier	needle_len		335382	0					
ANR	335420	PrimaryExpression	1		335382	1					
ANR	335421	Condition	i >= 0	2893:27:73464:73469	335382	1	True				
ANR	335422	RelationalExpression	i >= 0		335382	0		>=			
ANR	335423	Identifier	i		335382	0					
ANR	335424	PrimaryExpression	0		335382	1					
ANR	335425	PostIncDecOperationExpression	i --	2893:35:73472:73474	335382	2	True				
ANR	335426	Identifier	i		335382	0					
ANR	335427	IncDec	--		335382	1					
ANR	335428	CompoundStatement		9:40:125:125	335382	3					
ANR	335429	ExpressionStatement	td [ ( unsigned char ) needle [ i ] ] = i + 1	2894:3:73482:73518	335382	0	True				
ANR	335430	AssignmentExpression	td [ ( unsigned char ) needle [ i ] ] = i + 1		335382	0		=			
ANR	335431	ArrayIndexing	td [ ( unsigned char ) needle [ i ] ]		335382	0					
ANR	335432	Identifier	td		335382	0					
ANR	335433	CastExpression	( unsigned char ) needle [ i ]		335382	1					
ANR	335434	CastTarget	unsigned char		335382	0					
ANR	335435	ArrayIndexing	needle [ i ]		335382	1					
ANR	335436	Identifier	needle		335382	0					
ANR	335437	Identifier	i		335382	1					
ANR	335438	AdditiveExpression	i + 1		335382	1		+			
ANR	335439	Identifier	i		335382	0					
ANR	335440	PrimaryExpression	1		335382	1					
ANR	335441	ElseStatement	else		335382	0					
ANR	335442	CompoundStatement		12:8:180:180	335382	0					
ANR	335443	ForStatement	for ( i = 0 ; i < needle_len ; i ++ )		335382	0					
ANR	335444	ForInit	i = 0 ;	2897:7:73541:73546	335382	0	True				
ANR	335445	AssignmentExpression	i = 0		335382	0		=			
ANR	335446	Identifier	i		335382	0					
ANR	335447	PrimaryExpression	0		335382	1					
ANR	335448	Condition	i < needle_len	2897:14:73548:73561	335382	1	True				
ANR	335449	RelationalExpression	i < needle_len		335382	0		<			
ANR	335450	Identifier	i		335382	0					
ANR	335451	Identifier	needle_len		335382	1					
ANR	335452	PostIncDecOperationExpression	i ++	2897:30:73564:73566	335382	2	True				
ANR	335453	Identifier	i		335382	0					
ANR	335454	IncDec	++		335382	1					
ANR	335455	CompoundStatement		13:35:217:217	335382	3					
ANR	335456	ExpressionStatement	td [ ( unsigned char ) needle [ i ] ] = ( int ) needle_len - i	2898:3:73574:73624	335382	0	True				
ANR	335457	AssignmentExpression	td [ ( unsigned char ) needle [ i ] ] = ( int ) needle_len - i		335382	0		=			
ANR	335458	ArrayIndexing	td [ ( unsigned char ) needle [ i ] ]		335382	0					
ANR	335459	Identifier	td		335382	0					
ANR	335460	CastExpression	( unsigned char ) needle [ i ]		335382	1					
ANR	335461	CastTarget	unsigned char		335382	0					
ANR	335462	ArrayIndexing	needle [ i ]		335382	1					
ANR	335463	Identifier	needle		335382	0					
ANR	335464	Identifier	i		335382	1					
ANR	335465	AdditiveExpression	( int ) needle_len - i		335382	1		-			
ANR	335466	CastExpression	( int ) needle_len		335382	0					
ANR	335467	CastTarget	int		335382	0					
ANR	335468	Identifier	needle_len		335382	1					
ANR	335469	Identifier	i		335382	1					
ANR	335470	ReturnType	static zend_always_inline void		335382	1					
ANR	335471	Identifier	zend_memnstr_ex_pre		335382	2					
ANR	335472	ParameterList	"unsigned int td [ ] , const char * needle , size_t needle_len , int reverse"		335382	3					
ANR	335473	Parameter	unsigned int td [ ]	2885:51:73270:73286	335382	0	True				
ANR	335474	ParameterType	unsigned int [ ]		335382	0					
ANR	335475	Identifier	td		335382	1					
ANR	335476	Parameter	const char * needle	2885:70:73289:73306	335382	1	True				
ANR	335477	ParameterType	const char *		335382	0					
ANR	335478	Identifier	needle		335382	1					
ANR	335479	Parameter	size_t needle_len	2885:90:73309:73325	335382	2	True				
ANR	335480	ParameterType	size_t		335382	0					
ANR	335481	Identifier	needle_len		335382	1					
ANR	335482	Parameter	int reverse	2885:109:73328:73338	335382	3	True				
ANR	335483	ParameterType	int		335382	0					
ANR	335484	Identifier	reverse		335382	1					
ANR	335485	CFGEntryNode	ENTRY		335382		True				
ANR	335486	CFGExitNode	EXIT		335382		True				
ANR	335487	Symbol	td		335382						
ANR	335488	Symbol	* * i		335382						
ANR	335489	Symbol	* i		335382						
ANR	335490	Symbol	* td		335382						
ANR	335491	Symbol	i		335382						
ANR	335492	Symbol	* needle		335382						
ANR	335493	Symbol	needle		335382						
ANR	335494	Symbol	reverse		335382						
ANR	335495	Symbol	* * needle		335382						
ANR	335496	Symbol	needle_len		335382						
ANR	335497	Function	zend_memnstr_ex	2904:21:73667:74218							
ANR	335498	FunctionDef	"zend_memnstr_ex (const char * haystack , const char * needle , size_t needle_len , const char * end)"		335497	0					
ANR	335499	CompoundStatement		2905:0:73785:74218	335497	0					
ANR	335500	IdentifierDeclStatement	unsigned int td [ 256 ] ;	2906:1:73788:73808	335497	0	True				
ANR	335501	IdentifierDecl	td [ 256 ]		335497	0					
ANR	335502	IdentifierDeclType	unsigned int [ 256 ]		335497	0					
ANR	335503	Identifier	td		335497	1					
ANR	335504	PrimaryExpression	256		335497	2					
ANR	335505	Statement	register	2907:1:73811:73818	335497	1	True				
ANR	335506	IdentifierDeclStatement	size_t i ;	2907:10:73820:73828	335497	2	True				
ANR	335507	IdentifierDecl	i		335497	0					
ANR	335508	IdentifierDeclType	size_t		335497	0					
ANR	335509	Identifier	i		335497	1					
ANR	335510	Statement	register	2908:1:73831:73838	335497	3	True				
ANR	335511	IdentifierDeclStatement	const char * p ;	2908:10:73840:73853	335497	4	True				
ANR	335512	IdentifierDecl	* p		335497	0					
ANR	335513	IdentifierDeclType	const char *		335497	0					
ANR	335514	Identifier	p		335497	1					
ANR	335515	IfStatement	if ( needle_len == 0 || ( end - haystack ) == 0 )		335497	5					
ANR	335516	Condition	needle_len == 0 || ( end - haystack ) == 0	2910:5:73861:73900	335497	0	True				
ANR	335517	OrExpression	needle_len == 0 || ( end - haystack ) == 0		335497	0		||			
ANR	335518	EqualityExpression	needle_len == 0		335497	0		==			
ANR	335519	Identifier	needle_len		335497	0					
ANR	335520	PrimaryExpression	0		335497	1					
ANR	335521	EqualityExpression	( end - haystack ) == 0		335497	1		==			
ANR	335522	AdditiveExpression	end - haystack		335497	0		-			
ANR	335523	Identifier	end		335497	0					
ANR	335524	Identifier	haystack		335497	1					
ANR	335525	PrimaryExpression	0		335497	1					
ANR	335526	CompoundStatement		6:47:117:117	335497	1					
ANR	335527	ReturnStatement	return NULL ;	2911:2:73907:73918	335497	0	True				
ANR	335528	Identifier	NULL		335497	0					
ANR	335529	ExpressionStatement	"zend_memnstr_ex_pre ( td , needle , needle_len , 0 )"	2914:1:73925:73971	335497	6	True				
ANR	335530	CallExpression	"zend_memnstr_ex_pre ( td , needle , needle_len , 0 )"		335497	0					
ANR	335531	Callee	zend_memnstr_ex_pre		335497	0					
ANR	335532	Identifier	zend_memnstr_ex_pre		335497	0					
ANR	335533	ArgumentList	td		335497	1					
ANR	335534	Argument	td		335497	0					
ANR	335535	Identifier	td		335497	0					
ANR	335536	Argument	needle		335497	1					
ANR	335537	Identifier	needle		335497	0					
ANR	335538	Argument	needle_len		335497	2					
ANR	335539	Identifier	needle_len		335497	0					
ANR	335540	Argument	0		335497	3					
ANR	335541	PrimaryExpression	0		335497	0					
ANR	335542	ExpressionStatement	p = haystack	2916:1:73975:73987	335497	7	True				
ANR	335543	AssignmentExpression	p = haystack		335497	0		=			
ANR	335544	Identifier	p		335497	0					
ANR	335545	Identifier	haystack		335497	1					
ANR	335546	ExpressionStatement	end -= needle_len	2917:1:73990:74007	335497	8	True				
ANR	335547	AssignmentExpression	end -= needle_len		335497	0		-=			
ANR	335548	Identifier	end		335497	0					
ANR	335549	Identifier	needle_len		335497	1					
ANR	335550	WhileStatement	while ( p <= end )		335497	9					
ANR	335551	Condition	p <= end	2919:8:74018:74025	335497	0	True				
ANR	335552	RelationalExpression	p <= end		335497	0		<=			
ANR	335553	Identifier	p		335497	0					
ANR	335554	Identifier	end		335497	1					
ANR	335555	CompoundStatement		15:18:242:242	335497	1					
ANR	335556	ForStatement	for ( i = 0 ; i < needle_len ; i ++ )		335497	0					
ANR	335557	ForInit	i = 0 ;	2920:7:74037:74042	335497	0	True				
ANR	335558	AssignmentExpression	i = 0		335497	0		=			
ANR	335559	Identifier	i		335497	0					
ANR	335560	PrimaryExpression	0		335497	1					
ANR	335561	Condition	i < needle_len	2920:14:74044:74057	335497	1	True				
ANR	335562	RelationalExpression	i < needle_len		335497	0		<			
ANR	335563	Identifier	i		335497	0					
ANR	335564	Identifier	needle_len		335497	1					
ANR	335565	PostIncDecOperationExpression	i ++	2920:30:74060:74062	335497	2	True				
ANR	335566	Identifier	i		335497	0					
ANR	335567	IncDec	++		335497	1					
ANR	335568	CompoundStatement		16:35:279:279	335497	3					
ANR	335569	IfStatement	if ( needle [ i ] != p [ i ] )		335497	0					
ANR	335570	Condition	needle [ i ] != p [ i ]	2921:7:74074:74090	335497	0	True				
ANR	335571	EqualityExpression	needle [ i ] != p [ i ]		335497	0		!=			
ANR	335572	ArrayIndexing	needle [ i ]		335497	0					
ANR	335573	Identifier	needle		335497	0					
ANR	335574	Identifier	i		335497	1					
ANR	335575	ArrayIndexing	p [ i ]		335497	1					
ANR	335576	Identifier	p		335497	0					
ANR	335577	Identifier	i		335497	1					
ANR	335578	CompoundStatement		17:26:307:307	335497	1					
ANR	335579	BreakStatement	break ;	2922:4:74099:74104	335497	0	True				
ANR	335580	IfStatement	if ( i == needle_len )		335497	1					
ANR	335581	Condition	i == needle_len	2925:6:74121:74135	335497	0	True				
ANR	335582	EqualityExpression	i == needle_len		335497	0		==			
ANR	335583	Identifier	i		335497	0					
ANR	335584	Identifier	needle_len		335497	1					
ANR	335585	CompoundStatement		21:23:352:352	335497	1					
ANR	335586	ReturnStatement	return p ;	2926:3:74143:74151	335497	0	True				
ANR	335587	Identifier	p		335497	0					
ANR	335588	ExpressionStatement	p += td [ ( unsigned char ) ( p [ needle_len ] ) ]	2928:2:74159:74198	335497	2	True				
ANR	335589	AssignmentExpression	p += td [ ( unsigned char ) ( p [ needle_len ] ) ]		335497	0		+=			
ANR	335590	Identifier	p		335497	0					
ANR	335591	ArrayIndexing	td [ ( unsigned char ) ( p [ needle_len ] ) ]		335497	1					
ANR	335592	Identifier	td		335497	0					
ANR	335593	CastExpression	( unsigned char ) ( p [ needle_len ] )		335497	1					
ANR	335594	CastTarget	unsigned char		335497	0					
ANR	335595	ArrayIndexing	p [ needle_len ]		335497	1					
ANR	335596	Identifier	p		335497	0					
ANR	335597	Identifier	needle_len		335497	1					
ANR	335598	ReturnStatement	return NULL ;	2931:1:74205:74216	335497	10	True				
ANR	335599	Identifier	NULL		335497	0					
ANR	335600	ReturnType	ZEND_FASTCALL		335497	1					
ANR	335601	Identifier	zend_memnstr_ex		335497	2					
ANR	335602	ParameterList	"const char * haystack , const char * needle , size_t needle_len , const char * end"		335497	3					
ANR	335603	Parameter	const char * haystack	2904:51:73697:73716	335497	0	True				
ANR	335604	ParameterType	const char *		335497	0					
ANR	335605	Identifier	haystack		335497	1					
ANR	335606	Parameter	const char * needle	2904:73:73719:73736	335497	1	True				
ANR	335607	ParameterType	const char *		335497	0					
ANR	335608	Identifier	needle		335497	1					
ANR	335609	Parameter	size_t needle_len	2904:93:73739:73755	335497	2	True				
ANR	335610	ParameterType	size_t		335497	0					
ANR	335611	Identifier	needle_len		335497	1					
ANR	335612	Parameter	const char * end	2904:112:73758:73772	335497	3	True				
ANR	335613	ParameterType	const char *		335497	0					
ANR	335614	Identifier	end		335497	1					
ANR	335615	CFGEntryNode	ENTRY		335497		True				
ANR	335616	CFGExitNode	EXIT		335497		True				
ANR	335617	Symbol	NULL		335497						
ANR	335618	Symbol	i		335497						
ANR	335619	Symbol	* needle		335497						
ANR	335620	Symbol	* * needle_len		335497						
ANR	335621	Symbol	* needle_len		335497						
ANR	335622	Symbol	td		335497						
ANR	335623	Symbol	p		335497						
ANR	335624	Symbol	haystack		335497						
ANR	335625	Symbol	* i		335497						
ANR	335626	Symbol	* td		335497						
ANR	335627	Symbol	end		335497						
ANR	335628	Symbol	* p		335497						
ANR	335629	Symbol	* * p		335497						
ANR	335630	Symbol	needle		335497						
ANR	335631	Symbol	needle_len		335497						
ANR	335632	Function	zend_memnrstr_ex	2935:21:74252:74868							
ANR	335633	FunctionDef	"zend_memnrstr_ex (const char * haystack , const char * needle , size_t needle_len , const char * end)"		335632	0					
ANR	335634	CompoundStatement		2936:0:74371:74868	335632	0					
ANR	335635	IdentifierDeclStatement	unsigned int td [ 256 ] ;	2937:1:74374:74394	335632	0	True				
ANR	335636	IdentifierDecl	td [ 256 ]		335632	0					
ANR	335637	IdentifierDeclType	unsigned int [ 256 ]		335632	0					
ANR	335638	Identifier	td		335632	1					
ANR	335639	PrimaryExpression	256		335632	2					
ANR	335640	Statement	register	2938:1:74397:74404	335632	1	True				
ANR	335641	IdentifierDeclStatement	size_t i ;	2938:10:74406:74414	335632	2	True				
ANR	335642	IdentifierDecl	i		335632	0					
ANR	335643	IdentifierDeclType	size_t		335632	0					
ANR	335644	Identifier	i		335632	1					
ANR	335645	Statement	register	2939:1:74417:74424	335632	3	True				
ANR	335646	IdentifierDeclStatement	const char * p ;	2939:10:74426:74439	335632	4	True				
ANR	335647	IdentifierDecl	* p		335632	0					
ANR	335648	IdentifierDeclType	const char *		335632	0					
ANR	335649	Identifier	p		335632	1					
ANR	335650	IfStatement	if ( needle_len == 0 || ( end - haystack ) == 0 )		335632	5					
ANR	335651	Condition	needle_len == 0 || ( end - haystack ) == 0	2941:5:74447:74486	335632	0	True				
ANR	335652	OrExpression	needle_len == 0 || ( end - haystack ) == 0		335632	0		||			
ANR	335653	EqualityExpression	needle_len == 0		335632	0		==			
ANR	335654	Identifier	needle_len		335632	0					
ANR	335655	PrimaryExpression	0		335632	1					
ANR	335656	EqualityExpression	( end - haystack ) == 0		335632	1		==			
ANR	335657	AdditiveExpression	end - haystack		335632	0		-			
ANR	335658	Identifier	end		335632	0					
ANR	335659	Identifier	haystack		335632	1					
ANR	335660	PrimaryExpression	0		335632	1					
ANR	335661	CompoundStatement		6:47:117:117	335632	1					
ANR	335662	ReturnStatement	return NULL ;	2942:2:74493:74504	335632	0	True				
ANR	335663	Identifier	NULL		335632	0					
ANR	335664	ExpressionStatement	"zend_memnstr_ex_pre ( td , needle , needle_len , 1 )"	2945:1:74511:74557	335632	6	True				
ANR	335665	CallExpression	"zend_memnstr_ex_pre ( td , needle , needle_len , 1 )"		335632	0					
ANR	335666	Callee	zend_memnstr_ex_pre		335632	0					
ANR	335667	Identifier	zend_memnstr_ex_pre		335632	0					
ANR	335668	ArgumentList	td		335632	1					
ANR	335669	Argument	td		335632	0					
ANR	335670	Identifier	td		335632	0					
ANR	335671	Argument	needle		335632	1					
ANR	335672	Identifier	needle		335632	0					
ANR	335673	Argument	needle_len		335632	2					
ANR	335674	Identifier	needle_len		335632	0					
ANR	335675	Argument	1		335632	3					
ANR	335676	PrimaryExpression	1		335632	0					
ANR	335677	ExpressionStatement	p = end	2947:1:74561:74568	335632	7	True				
ANR	335678	AssignmentExpression	p = end		335632	0		=			
ANR	335679	Identifier	p		335632	0					
ANR	335680	Identifier	end		335632	1					
ANR	335681	ExpressionStatement	p -= needle_len	2948:1:74571:74586	335632	8	True				
ANR	335682	AssignmentExpression	p -= needle_len		335632	0		-=			
ANR	335683	Identifier	p		335632	0					
ANR	335684	Identifier	needle_len		335632	1					
ANR	335685	WhileStatement	while ( p >= haystack )		335632	9					
ANR	335686	Condition	p >= haystack	2950:8:74597:74609	335632	0	True				
ANR	335687	RelationalExpression	p >= haystack		335632	0		>=			
ANR	335688	Identifier	p		335632	0					
ANR	335689	Identifier	haystack		335632	1					
ANR	335690	CompoundStatement		15:23:240:240	335632	1					
ANR	335691	ForStatement	for ( i = 0 ; i < needle_len ; i ++ )		335632	0					
ANR	335692	ForInit	i = 0 ;	2951:7:74621:74626	335632	0	True				
ANR	335693	AssignmentExpression	i = 0		335632	0		=			
ANR	335694	Identifier	i		335632	0					
ANR	335695	PrimaryExpression	0		335632	1					
ANR	335696	Condition	i < needle_len	2951:14:74628:74641	335632	1	True				
ANR	335697	RelationalExpression	i < needle_len		335632	0		<			
ANR	335698	Identifier	i		335632	0					
ANR	335699	Identifier	needle_len		335632	1					
ANR	335700	PostIncDecOperationExpression	i ++	2951:30:74644:74646	335632	2	True				
ANR	335701	Identifier	i		335632	0					
ANR	335702	IncDec	++		335632	1					
ANR	335703	CompoundStatement		16:35:277:277	335632	3					
ANR	335704	IfStatement	if ( needle [ i ] != p [ i ] )		335632	0					
ANR	335705	Condition	needle [ i ] != p [ i ]	2952:7:74658:74674	335632	0	True				
ANR	335706	EqualityExpression	needle [ i ] != p [ i ]		335632	0		!=			
ANR	335707	ArrayIndexing	needle [ i ]		335632	0					
ANR	335708	Identifier	needle		335632	0					
ANR	335709	Identifier	i		335632	1					
ANR	335710	ArrayIndexing	p [ i ]		335632	1					
ANR	335711	Identifier	p		335632	0					
ANR	335712	Identifier	i		335632	1					
ANR	335713	CompoundStatement		17:26:305:305	335632	1					
ANR	335714	BreakStatement	break ;	2953:4:74683:74688	335632	0	True				
ANR	335715	IfStatement	if ( i == needle_len )		335632	1					
ANR	335716	Condition	i == needle_len	2957:6:74706:74720	335632	0	True				
ANR	335717	EqualityExpression	i == needle_len		335632	0		==			
ANR	335718	Identifier	i		335632	0					
ANR	335719	Identifier	needle_len		335632	1					
ANR	335720	CompoundStatement		22:23:351:351	335632	1					
ANR	335721	ReturnStatement	return ( const char * ) p ;	2958:3:74728:74750	335632	0	True				
ANR	335722	CastExpression	( const char * ) p		335632	0					
ANR	335723	CastTarget	const char *		335632	0					
ANR	335724	Identifier	p		335632	1					
ANR	335725	IfStatement	if ( UNEXPECTED ( p == haystack ) )		335632	2					
ANR	335726	Condition	UNEXPECTED ( p == haystack )	2961:6:74765:74789	335632	0	True				
ANR	335727	CallExpression	UNEXPECTED ( p == haystack )		335632	0					
ANR	335728	Callee	UNEXPECTED		335632	0					
ANR	335729	Identifier	UNEXPECTED		335632	0					
ANR	335730	ArgumentList	p == haystack		335632	1					
ANR	335731	Argument	p == haystack		335632	0					
ANR	335732	EqualityExpression	p == haystack		335632	0		==			
ANR	335733	Identifier	p		335632	0					
ANR	335734	Identifier	haystack		335632	1					
ANR	335735	CompoundStatement		26:33:420:420	335632	1					
ANR	335736	ReturnStatement	return NULL ;	2962:3:74797:74808	335632	0	True				
ANR	335737	Identifier	NULL		335632	0					
ANR	335738	ExpressionStatement	p -= td [ ( unsigned char ) ( p [ - 1 ] ) ]	2965:2:74817:74848	335632	3	True				
ANR	335739	AssignmentExpression	p -= td [ ( unsigned char ) ( p [ - 1 ] ) ]		335632	0		-=			
ANR	335740	Identifier	p		335632	0					
ANR	335741	ArrayIndexing	td [ ( unsigned char ) ( p [ - 1 ] ) ]		335632	1					
ANR	335742	Identifier	td		335632	0					
ANR	335743	CastExpression	( unsigned char ) ( p [ - 1 ] )		335632	1					
ANR	335744	CastTarget	unsigned char		335632	0					
ANR	335745	ArrayIndexing	p [ - 1 ]		335632	1					
ANR	335746	Identifier	p		335632	0					
ANR	335747	UnaryOperationExpression	- 1		335632	1					
ANR	335748	UnaryOperator	-		335632	0					
ANR	335749	PrimaryExpression	1		335632	1					
ANR	335750	ReturnStatement	return NULL ;	2968:1:74855:74866	335632	10	True				
ANR	335751	Identifier	NULL		335632	0					
ANR	335752	ReturnType	ZEND_FASTCALL		335632	1					
ANR	335753	Identifier	zend_memnrstr_ex		335632	2					
ANR	335754	ParameterList	"const char * haystack , const char * needle , size_t needle_len , const char * end"		335632	3					
ANR	335755	Parameter	const char * haystack	2935:52:74283:74302	335632	0	True				
ANR	335756	ParameterType	const char *		335632	0					
ANR	335757	Identifier	haystack		335632	1					
ANR	335758	Parameter	const char * needle	2935:74:74305:74322	335632	1	True				
ANR	335759	ParameterType	const char *		335632	0					
ANR	335760	Identifier	needle		335632	1					
ANR	335761	Parameter	size_t needle_len	2935:94:74325:74341	335632	2	True				
ANR	335762	ParameterType	size_t		335632	0					
ANR	335763	Identifier	needle_len		335632	1					
ANR	335764	Parameter	const char * end	2935:113:74344:74358	335632	3	True				
ANR	335765	ParameterType	const char *		335632	0					
ANR	335766	Identifier	end		335632	1					
ANR	335767	CFGEntryNode	ENTRY		335632		True				
ANR	335768	CFGExitNode	EXIT		335632		True				
ANR	335769	Symbol	NULL		335632						
ANR	335770	Symbol	i		335632						
ANR	335771	Symbol	* needle		335632						
ANR	335772	Symbol	td		335632						
ANR	335773	Symbol	p		335632						
ANR	335774	Symbol	UNEXPECTED		335632						
ANR	335775	Symbol	haystack		335632						
ANR	335776	Symbol	* i		335632						
ANR	335777	Symbol	* td		335632						
ANR	335778	Symbol	end		335632						
ANR	335779	Symbol	* p		335632						
ANR	335780	Symbol	* * p		335632						
ANR	335781	Symbol	needle		335632						
ANR	335782	Symbol	needle_len		335632						
ANR	335783	Function	zend_dval_to_lval_slow	2974:0:74939:75296							
ANR	335784	FunctionDef	zend_dval_to_lval_slow (double d)		335783	0					
ANR	335785	CompoundStatement		2975:0:75005:75296	335783	0					
ANR	335786	IdentifierDeclStatement	"double two_pow_32 = pow ( 2. , 32. ) , dmod ;"	2976:1:75008:75049	335783	0	True				
ANR	335787	IdentifierDecl	"two_pow_32 = pow ( 2. , 32. )"		335783	0					
ANR	335788	IdentifierDeclType	double		335783	0					
ANR	335789	Identifier	two_pow_32		335783	1					
ANR	335790	AssignmentExpression	"two_pow_32 = pow ( 2. , 32. )"		335783	2		=			
ANR	335791	Identifier	two_pow_32		335783	0					
ANR	335792	CallExpression	"pow ( 2. , 32. )"		335783	1					
ANR	335793	Callee	pow		335783	0					
ANR	335794	Identifier	pow		335783	0					
ANR	335795	ArgumentList	2.		335783	1					
ANR	335796	Argument	2.		335783	0					
ANR	335797	PrimaryExpression	2.		335783	0					
ANR	335798	Argument	32.		335783	1					
ANR	335799	PrimaryExpression	32.		335783	0					
ANR	335800	IdentifierDecl	dmod		335783	1					
ANR	335801	IdentifierDeclType	double		335783	0					
ANR	335802	Identifier	dmod		335783	1					
ANR	335803	ExpressionStatement	"dmod = fmod ( d , two_pow_32 )"	2979:1:75053:75079	335783	1	True				
ANR	335804	AssignmentExpression	"dmod = fmod ( d , two_pow_32 )"		335783	0		=			
ANR	335805	Identifier	dmod		335783	0					
ANR	335806	CallExpression	"fmod ( d , two_pow_32 )"		335783	1					
ANR	335807	Callee	fmod		335783	0					
ANR	335808	Identifier	fmod		335783	0					
ANR	335809	ArgumentList	d		335783	1					
ANR	335810	Argument	d		335783	0					
ANR	335811	Identifier	d		335783	0					
ANR	335812	Argument	two_pow_32		335783	1					
ANR	335813	Identifier	two_pow_32		335783	0					
ANR	335814	IfStatement	if ( dmod < 0 )		335783	2					
ANR	335815	Condition	dmod < 0	2980:5:75086:75093	335783	0	True				
ANR	335816	RelationalExpression	dmod < 0		335783	0		<			
ANR	335817	Identifier	dmod		335783	0					
ANR	335818	PrimaryExpression	0		335783	1					
ANR	335819	CompoundStatement		6:15:90:90	335783	1					
ANR	335820	ExpressionStatement	dmod = ceil ( dmod )	2983:2:75221:75238	335783	0	True				
ANR	335821	AssignmentExpression	dmod = ceil ( dmod )		335783	0		=			
ANR	335822	Identifier	dmod		335783	0					
ANR	335823	CallExpression	ceil ( dmod )		335783	1					
ANR	335824	Callee	ceil		335783	0					
ANR	335825	Identifier	ceil		335783	0					
ANR	335826	ArgumentList	dmod		335783	1					
ANR	335827	Argument	dmod		335783	0					
ANR	335828	Identifier	dmod		335783	0					
ANR	335829	ReturnStatement	return ( zend_long ) ( zend_ulong ) dmod ;	2985:1:75260:75294	335783	3	True				
ANR	335830	CastExpression	( zend_long ) ( zend_ulong ) dmod		335783	0					
ANR	335831	CastTarget	zend_long		335783	0					
ANR	335832	CastExpression	( zend_ulong ) dmod		335783	1					
ANR	335833	CastTarget	zend_ulong		335783	0					
ANR	335834	Identifier	dmod		335783	1					
ANR	335835	ReturnType	ZEND_API zend_long ZEND_FASTCALL		335783	1					
ANR	335836	Identifier	zend_dval_to_lval_slow		335783	2					
ANR	335837	ParameterList	double d		335783	3					
ANR	335838	Parameter	double d	2974:56:74995:75002	335783	0	True				
ANR	335839	ParameterType	double		335783	0					
ANR	335840	Identifier	d		335783	1					
ANR	335841	CFGEntryNode	ENTRY		335783		True				
ANR	335842	CFGExitNode	EXIT		335783		True				
ANR	335843	Symbol	dmod		335783						
ANR	335844	Symbol	two_pow_32		335783						
ANR	335845	Symbol	d		335783						
ANR	335846	Symbol	pow		335783						
ANR	335847	Symbol	ceil		335783						
ANR	335848	Symbol	fmod		335783						
ANR	335849	Function	zend_dval_to_lval_slow	2988:0:75304:75646							
ANR	335850	FunctionDef	zend_dval_to_lval_slow (double d)		335849	0					
ANR	335851	CompoundStatement		2989:0:75370:75646	335849	0					
ANR	335852	IdentifierDeclStatement	"double two_pow_64 = pow ( 2. , 64. ) , dmod ;"	2990:1:75373:75414	335849	0	True				
ANR	335853	IdentifierDecl	"two_pow_64 = pow ( 2. , 64. )"		335849	0					
ANR	335854	IdentifierDeclType	double		335849	0					
ANR	335855	Identifier	two_pow_64		335849	1					
ANR	335856	AssignmentExpression	"two_pow_64 = pow ( 2. , 64. )"		335849	2		=			
ANR	335857	Identifier	two_pow_64		335849	0					
ANR	335858	CallExpression	"pow ( 2. , 64. )"		335849	1					
ANR	335859	Callee	pow		335849	0					
ANR	335860	Identifier	pow		335849	0					
ANR	335861	ArgumentList	2.		335849	1					
ANR	335862	Argument	2.		335849	0					
ANR	335863	PrimaryExpression	2.		335849	0					
ANR	335864	Argument	64.		335849	1					
ANR	335865	PrimaryExpression	64.		335849	0					
ANR	335866	IdentifierDecl	dmod		335849	1					
ANR	335867	IdentifierDeclType	double		335849	0					
ANR	335868	Identifier	dmod		335849	1					
ANR	335869	ExpressionStatement	"dmod = fmod ( d , two_pow_64 )"	2993:1:75418:75444	335849	1	True				
ANR	335870	AssignmentExpression	"dmod = fmod ( d , two_pow_64 )"		335849	0		=			
ANR	335871	Identifier	dmod		335849	0					
ANR	335872	CallExpression	"fmod ( d , two_pow_64 )"		335849	1					
ANR	335873	Callee	fmod		335849	0					
ANR	335874	Identifier	fmod		335849	0					
ANR	335875	ArgumentList	d		335849	1					
ANR	335876	Argument	d		335849	0					
ANR	335877	Identifier	d		335849	0					
ANR	335878	Argument	two_pow_64		335849	1					
ANR	335879	Identifier	two_pow_64		335849	0					
ANR	335880	IfStatement	if ( dmod < 0 )		335849	2					
ANR	335881	Condition	dmod < 0	2994:5:75451:75458	335849	0	True				
ANR	335882	RelationalExpression	dmod < 0		335849	0		<			
ANR	335883	Identifier	dmod		335849	0					
ANR	335884	PrimaryExpression	0		335849	1					
ANR	335885	CompoundStatement		6:15:90:90	335849	1					
ANR	335886	ExpressionStatement	dmod += two_pow_64	2997:2:75586:75604	335849	0	True				
ANR	335887	AssignmentExpression	dmod += two_pow_64		335849	0		+=			
ANR	335888	Identifier	dmod		335849	0					
ANR	335889	Identifier	two_pow_64		335849	1					
ANR	335890	ReturnStatement	return ( zend_long ) ( zend_ulong ) dmod ;	2999:1:75610:75644	335849	3	True				
ANR	335891	CastExpression	( zend_long ) ( zend_ulong ) dmod		335849	0					
ANR	335892	CastTarget	zend_long		335849	0					
ANR	335893	CastExpression	( zend_ulong ) dmod		335849	1					
ANR	335894	CastTarget	zend_ulong		335849	0					
ANR	335895	Identifier	dmod		335849	1					
ANR	335896	ReturnType	ZEND_API zend_long ZEND_FASTCALL		335849	1					
ANR	335897	Identifier	zend_dval_to_lval_slow		335849	2					
ANR	335898	ParameterList	double d		335849	3					
ANR	335899	Parameter	double d	2988:56:75360:75367	335849	0	True				
ANR	335900	ParameterType	double		335849	0					
ANR	335901	Identifier	d		335849	1					
ANR	335902	CFGEntryNode	ENTRY		335849		True				
ANR	335903	CFGExitNode	EXIT		335849		True				
ANR	335904	Symbol	dmod		335849						
ANR	335905	Symbol	two_pow_64		335849						
ANR	335906	Symbol	d		335849						
ANR	335907	Symbol	pow		335849						
ANR	335908	Symbol	fmod		335849						
