command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3821098	File	data/converged/CVE-2015-8617_php-src/utf32_le.c								
ANR	3821099	Function	utf32le_is_mbc_newline	38:0:1685:2181							
ANR	3821100	FunctionDef	"utf32le_is_mbc_newline (const UChar * p , const UChar * end)"		3821099	0					
ANR	3821101	CompoundStatement		40:0:1753:2181	3821099	0					
ANR	3821102	IfStatement	if ( p + 3 < end )		3821099	0					
ANR	3821103	Condition	p + 3 < end	41:6:1761:1771	3821099	0	True				
ANR	3821104	RelationalExpression	p + 3 < end		3821099	0		<			
ANR	3821105	AdditiveExpression	p + 3		3821099	0		+			
ANR	3821106	Identifier	p		3821099	0					
ANR	3821107	PrimaryExpression	3		3821099	1					
ANR	3821108	Identifier	end		3821099	1					
ANR	3821109	CompoundStatement		2:19:20:20	3821099	1					
ANR	3821110	IfStatement	if ( * p == 0x0a && * ( p + 1 ) == 0 && * ( p + 2 ) == 0 && * ( p + 3 ) == 0 )		3821099	0					
ANR	3821111	Condition	* p == 0x0a && * ( p + 1 ) == 0 && * ( p + 2 ) == 0 && * ( p + 3 ) == 0	42:8:1784:1838	3821099	0	True				
ANR	3821112	AndExpression	* p == 0x0a && * ( p + 1 ) == 0 && * ( p + 2 ) == 0 && * ( p + 3 ) == 0		3821099	0		&&			
ANR	3821113	EqualityExpression	* p == 0x0a		3821099	0		==			
ANR	3821114	UnaryOperationExpression	* p		3821099	0					
ANR	3821115	UnaryOperator	*		3821099	0					
ANR	3821116	Identifier	p		3821099	1					
ANR	3821117	PrimaryExpression	0x0a		3821099	1					
ANR	3821118	AndExpression	* ( p + 1 ) == 0 && * ( p + 2 ) == 0 && * ( p + 3 ) == 0		3821099	1		&&			
ANR	3821119	EqualityExpression	* ( p + 1 ) == 0		3821099	0		==			
ANR	3821120	UnaryOperationExpression	* ( p + 1 )		3821099	0					
ANR	3821121	UnaryOperator	*		3821099	0					
ANR	3821122	AdditiveExpression	p + 1		3821099	1		+			
ANR	3821123	Identifier	p		3821099	0					
ANR	3821124	PrimaryExpression	1		3821099	1					
ANR	3821125	PrimaryExpression	0		3821099	1					
ANR	3821126	AndExpression	* ( p + 2 ) == 0 && * ( p + 3 ) == 0		3821099	1		&&			
ANR	3821127	EqualityExpression	* ( p + 2 ) == 0		3821099	0		==			
ANR	3821128	UnaryOperationExpression	* ( p + 2 )		3821099	0					
ANR	3821129	UnaryOperator	*		3821099	0					
ANR	3821130	AdditiveExpression	p + 2		3821099	1		+			
ANR	3821131	Identifier	p		3821099	0					
ANR	3821132	PrimaryExpression	2		3821099	1					
ANR	3821133	PrimaryExpression	0		3821099	1					
ANR	3821134	EqualityExpression	* ( p + 3 ) == 0		3821099	1		==			
ANR	3821135	UnaryOperationExpression	* ( p + 3 )		3821099	0					
ANR	3821136	UnaryOperator	*		3821099	0					
ANR	3821137	AdditiveExpression	p + 3		3821099	1		+			
ANR	3821138	Identifier	p		3821099	0					
ANR	3821139	PrimaryExpression	3		3821099	1					
ANR	3821140	PrimaryExpression	0		3821099	1					
ANR	3821141	ReturnStatement	return 1 ;	43:6:1847:1855	3821099	1	True				
ANR	3821142	PrimaryExpression	1		3821099	0					
ANR	3821143	Statement	if	45:4:1901:1902	3821099	1	True				
ANR	3821144	Statement	(	45:7:1904:1904	3821099	2	True				
ANR	3821145	Statement	(	45:8:1905:1905	3821099	3	True				
ANR	3821146	Statement	*	47:2:1945:1945	3821099	4	True				
ANR	3821147	Statement	p	47:3:1946:1946	3821099	5	True				
ANR	3821148	Statement	==	47:5:1948:1949	3821099	6	True				
ANR	3821149	Statement	0x0d	47:8:1951:1954	3821099	7	True				
ANR	3821150	Statement	||	47:13:1956:1957	3821099	8	True				
ANR	3821151	Statement	*	49:2:1968:1968	3821099	9	True				
ANR	3821152	Statement	p	49:3:1969:1969	3821099	10	True				
ANR	3821153	Statement	==	49:5:1971:1972	3821099	11	True				
ANR	3821154	Statement	0x85	49:8:1974:1977	3821099	12	True				
ANR	3821155	Statement	)	49:12:1978:1978	3821099	13	True				
ANR	3821156	Statement	&&	50:1:1981:1982	3821099	14	True				
ANR	3821157	Statement	*	50:4:1984:1984	3821099	15	True				
ANR	3821158	Statement	(	50:5:1985:1985	3821099	16	True				
ANR	3821159	Statement	p	50:6:1986:1986	3821099	17	True				
ANR	3821160	Statement	+	50:7:1987:1987	3821099	18	True				
ANR	3821161	Statement	1	50:8:1988:1988	3821099	19	True				
ANR	3821162	Statement	)	50:9:1989:1989	3821099	20	True				
ANR	3821163	Statement	==	50:11:1991:1992	3821099	21	True				
ANR	3821164	Statement	0x00	50:14:1994:1997	3821099	22	True				
ANR	3821165	Statement	&&	50:19:1999:2000	3821099	23	True				
ANR	3821166	Statement	(	50:22:2002:2002	3821099	24	True				
ANR	3821167	Statement	p	50:23:2003:2003	3821099	25	True				
ANR	3821168	Statement	+	50:24:2004:2004	3821099	26	True				
ANR	3821169	Statement	2	50:25:2005:2005	3821099	27	True				
ANR	3821170	Statement	)	50:26:2006:2006	3821099	28	True				
ANR	3821171	Statement	==	50:28:2008:2009	3821099	29	True				
ANR	3821172	Statement	0x00	50:31:2011:2014	3821099	30	True				
ANR	3821173	Statement	&&	50:36:2016:2017	3821099	31	True				
ANR	3821174	Statement	*	50:39:2019:2019	3821099	32	True				
ANR	3821175	Statement	(	50:40:2020:2020	3821099	33	True				
ANR	3821176	Statement	p	50:41:2021:2021	3821099	34	True				
ANR	3821177	Statement	+	50:42:2022:2022	3821099	35	True				
ANR	3821178	Statement	3	50:43:2023:2023	3821099	36	True				
ANR	3821179	Statement	)	50:44:2024:2024	3821099	37	True				
ANR	3821180	Statement	==	50:46:2026:2027	3821099	38	True				
ANR	3821181	Statement	0x00	50:49:2029:2032	3821099	39	True				
ANR	3821182	Statement	)	50:53:2033:2033	3821099	40	True				
ANR	3821183	ReturnStatement	return 1 ;	51:6:2041:2049	3821099	41	True				
ANR	3821184	PrimaryExpression	1		3821099	0					
ANR	3821185	IfStatement	if ( * ( p + 1 ) == 0x20 && ( * p == 0x29 || * p == 0x28 ) && * ( p + 2 ) == 0x00 && * ( p + 3 ) == 0x00 )		3821099	42					
ANR	3821186	Condition	* ( p + 1 ) == 0x20 && ( * p == 0x29 || * p == 0x28 ) && * ( p + 2 ) == 0x00 && * ( p + 3 ) == 0x00	52:8:2059:2139	3821099	0	True				
ANR	3821187	AndExpression	* ( p + 1 ) == 0x20 && ( * p == 0x29 || * p == 0x28 ) && * ( p + 2 ) == 0x00 && * ( p + 3 ) == 0x00		3821099	0		&&			
ANR	3821188	EqualityExpression	* ( p + 1 ) == 0x20		3821099	0		==			
ANR	3821189	UnaryOperationExpression	* ( p + 1 )		3821099	0					
ANR	3821190	UnaryOperator	*		3821099	0					
ANR	3821191	AdditiveExpression	p + 1		3821099	1		+			
ANR	3821192	Identifier	p		3821099	0					
ANR	3821193	PrimaryExpression	1		3821099	1					
ANR	3821194	PrimaryExpression	0x20		3821099	1					
ANR	3821195	AndExpression	( * p == 0x29 || * p == 0x28 ) && * ( p + 2 ) == 0x00 && * ( p + 3 ) == 0x00		3821099	1		&&			
ANR	3821196	OrExpression	* p == 0x29 || * p == 0x28		3821099	0		||			
ANR	3821197	EqualityExpression	* p == 0x29		3821099	0		==			
ANR	3821198	UnaryOperationExpression	* p		3821099	0					
ANR	3821199	UnaryOperator	*		3821099	0					
ANR	3821200	Identifier	p		3821099	1					
ANR	3821201	PrimaryExpression	0x29		3821099	1					
ANR	3821202	EqualityExpression	* p == 0x28		3821099	1		==			
ANR	3821203	UnaryOperationExpression	* p		3821099	0					
ANR	3821204	UnaryOperator	*		3821099	0					
ANR	3821205	Identifier	p		3821099	1					
ANR	3821206	PrimaryExpression	0x28		3821099	1					
ANR	3821207	AndExpression	* ( p + 2 ) == 0x00 && * ( p + 3 ) == 0x00		3821099	1		&&			
ANR	3821208	EqualityExpression	* ( p + 2 ) == 0x00		3821099	0		==			
ANR	3821209	UnaryOperationExpression	* ( p + 2 )		3821099	0					
ANR	3821210	UnaryOperator	*		3821099	0					
ANR	3821211	AdditiveExpression	p + 2		3821099	1		+			
ANR	3821212	Identifier	p		3821099	0					
ANR	3821213	PrimaryExpression	2		3821099	1					
ANR	3821214	PrimaryExpression	0x00		3821099	1					
ANR	3821215	EqualityExpression	* ( p + 3 ) == 0x00		3821099	1		==			
ANR	3821216	UnaryOperationExpression	* ( p + 3 )		3821099	0					
ANR	3821217	UnaryOperator	*		3821099	0					
ANR	3821218	AdditiveExpression	p + 3		3821099	1		+			
ANR	3821219	Identifier	p		3821099	0					
ANR	3821220	PrimaryExpression	3		3821099	1					
ANR	3821221	PrimaryExpression	0x00		3821099	1					
ANR	3821222	ReturnStatement	return 1 ;	54:6:2148:2156	3821099	1	True				
ANR	3821223	PrimaryExpression	1		3821099	0					
ANR	3821224	ReturnStatement	return 0 ;	57:2:2171:2179	3821099	1	True				
ANR	3821225	PrimaryExpression	0		3821099	0					
ANR	3821226	ReturnType	static int		3821099	1					
ANR	3821227	Identifier	utf32le_is_mbc_newline		3821099	2					
ANR	3821228	ParameterList	"const UChar * p , const UChar * end"		3821099	3					
ANR	3821229	Parameter	const UChar * p	39:23:1719:1732	3821099	0	True				
ANR	3821230	ParameterType	const UChar *		3821099	0					
ANR	3821231	Identifier	p		3821099	1					
ANR	3821232	Parameter	const UChar * end	39:39:1735:1750	3821099	1	True				
ANR	3821233	ParameterType	const UChar *		3821099	0					
ANR	3821234	Identifier	end		3821099	1					
ANR	3821235	CFGEntryNode	ENTRY		3821099		True				
ANR	3821236	CFGExitNode	EXIT		3821099		True				
ANR	3821237	Symbol	p		3821099						
ANR	3821238	Symbol	* ( p + 2 )		3821099						
ANR	3821239	Symbol	* ( p + 3 )		3821099						
ANR	3821240	Symbol	end		3821099						
ANR	3821241	Symbol	* p		3821099						
ANR	3821242	Symbol	* ( p + 1 )		3821099						
ANR	3821243	Function	utf32le_code_to_mbclen	66:0:2351:2430							
ANR	3821244	FunctionDef	utf32le_code_to_mbclen (OnigCodePoint code ARG_UNUSED)		3821243	0					
ANR	3821245	CompoundStatement		68:0:2416:2430	3821243	0					
ANR	3821246	ReturnStatement	return 4 ;	69:2:2420:2428	3821243	0	True				
ANR	3821247	PrimaryExpression	4		3821243	0					
ANR	3821248	ReturnType	static int		3821243	1					
ANR	3821249	Identifier	utf32le_code_to_mbclen		3821243	2					
ANR	3821250	ParameterList	OnigCodePoint code ARG_UNUSED		3821243	3					
ANR	3821251	Parameter	OnigCodePoint code ARG_UNUSED	67:23:2385:2413	3821243	0	True				
ANR	3821252	ParameterType	OnigCodePoint code		3821243	0					
ANR	3821253	Identifier	ARG_UNUSED		3821243	1					
ANR	3821254	CFGEntryNode	ENTRY		3821243		True				
ANR	3821255	CFGExitNode	EXIT		3821243		True				
ANR	3821256	Symbol	ARG_UNUSED		3821243						
ANR	3821257	Function	utf32le_code_to_mbc	72:0:2433:2697							
ANR	3821258	FunctionDef	"utf32le_code_to_mbc (OnigCodePoint code , UChar * buf)"		3821257	0					
ANR	3821259	CompoundStatement		74:0:2496:2697	3821257	0					
ANR	3821260	IdentifierDeclStatement	UChar * p = buf ;	75:2:2500:2514	3821257	0	True				
ANR	3821261	IdentifierDecl	* p = buf		3821257	0					
ANR	3821262	IdentifierDeclType	UChar *		3821257	0					
ANR	3821263	Identifier	p		3821257	1					
ANR	3821264	AssignmentExpression	* p = buf		3821257	2		=			
ANR	3821265	Identifier	buf		3821257	0					
ANR	3821266	Identifier	buf		3821257	1					
ANR	3821267	ExpressionStatement	* p ++ = ( UChar ) ( code & 0xff )	77:2:2519:2548	3821257	1	True				
ANR	3821268	AssignmentExpression	* p ++ = ( UChar ) ( code & 0xff )		3821257	0		=			
ANR	3821269	UnaryOperationExpression	* p ++		3821257	0					
ANR	3821270	UnaryOperator	*		3821257	0					
ANR	3821271	PostIncDecOperationExpression	p ++		3821257	1					
ANR	3821272	Identifier	p		3821257	0					
ANR	3821273	IncDec	++		3821257	1					
ANR	3821274	CastExpression	( UChar ) ( code & 0xff )		3821257	1					
ANR	3821275	CastTarget	UChar		3821257	0					
ANR	3821276	BitAndExpression	code & 0xff		3821257	1		&			
ANR	3821277	Identifier	code		3821257	0					
ANR	3821278	PrimaryExpression	0xff		3821257	1					
ANR	3821279	ExpressionStatement	* p ++ = ( UChar ) ( ( code & 0xff00 ) >> 8 )	78:2:2552:2593	3821257	2	True				
ANR	3821280	AssignmentExpression	* p ++ = ( UChar ) ( ( code & 0xff00 ) >> 8 )		3821257	0		=			
ANR	3821281	UnaryOperationExpression	* p ++		3821257	0					
ANR	3821282	UnaryOperator	*		3821257	0					
ANR	3821283	PostIncDecOperationExpression	p ++		3821257	1					
ANR	3821284	Identifier	p		3821257	0					
ANR	3821285	IncDec	++		3821257	1					
ANR	3821286	CastExpression	( UChar ) ( ( code & 0xff00 ) >> 8 )		3821257	1					
ANR	3821287	CastTarget	UChar		3821257	0					
ANR	3821288	ShiftExpression	( code & 0xff00 ) >> 8		3821257	1		>>			
ANR	3821289	BitAndExpression	code & 0xff00		3821257	0		&			
ANR	3821290	Identifier	code		3821257	0					
ANR	3821291	PrimaryExpression	0xff00		3821257	1					
ANR	3821292	PrimaryExpression	8		3821257	1					
ANR	3821293	ExpressionStatement	* p ++ = ( UChar ) ( ( code & 0xff0000 ) >> 16 )	79:2:2597:2638	3821257	3	True				
ANR	3821294	AssignmentExpression	* p ++ = ( UChar ) ( ( code & 0xff0000 ) >> 16 )		3821257	0		=			
ANR	3821295	UnaryOperationExpression	* p ++		3821257	0					
ANR	3821296	UnaryOperator	*		3821257	0					
ANR	3821297	PostIncDecOperationExpression	p ++		3821257	1					
ANR	3821298	Identifier	p		3821257	0					
ANR	3821299	IncDec	++		3821257	1					
ANR	3821300	CastExpression	( UChar ) ( ( code & 0xff0000 ) >> 16 )		3821257	1					
ANR	3821301	CastTarget	UChar		3821257	0					
ANR	3821302	ShiftExpression	( code & 0xff0000 ) >> 16		3821257	1		>>			
ANR	3821303	BitAndExpression	code & 0xff0000		3821257	0		&			
ANR	3821304	Identifier	code		3821257	0					
ANR	3821305	PrimaryExpression	0xff0000		3821257	1					
ANR	3821306	PrimaryExpression	16		3821257	1					
ANR	3821307	ExpressionStatement	* p ++ = ( UChar ) ( ( code & 0xff000000 ) >> 24 )	80:2:2642:2683	3821257	4	True				
ANR	3821308	AssignmentExpression	* p ++ = ( UChar ) ( ( code & 0xff000000 ) >> 24 )		3821257	0		=			
ANR	3821309	UnaryOperationExpression	* p ++		3821257	0					
ANR	3821310	UnaryOperator	*		3821257	0					
ANR	3821311	PostIncDecOperationExpression	p ++		3821257	1					
ANR	3821312	Identifier	p		3821257	0					
ANR	3821313	IncDec	++		3821257	1					
ANR	3821314	CastExpression	( UChar ) ( ( code & 0xff000000 ) >> 24 )		3821257	1					
ANR	3821315	CastTarget	UChar		3821257	0					
ANR	3821316	ShiftExpression	( code & 0xff000000 ) >> 24		3821257	1		>>			
ANR	3821317	BitAndExpression	code & 0xff000000		3821257	0		&			
ANR	3821318	Identifier	code		3821257	0					
ANR	3821319	PrimaryExpression	0xff000000		3821257	1					
ANR	3821320	PrimaryExpression	24		3821257	1					
ANR	3821321	ReturnStatement	return 4 ;	81:2:2687:2695	3821257	5	True				
ANR	3821322	PrimaryExpression	4		3821257	0					
ANR	3821323	ReturnType	static int		3821257	1					
ANR	3821324	Identifier	utf32le_code_to_mbc		3821257	2					
ANR	3821325	ParameterList	"OnigCodePoint code , UChar * buf"		3821257	3					
ANR	3821326	Parameter	OnigCodePoint code	73:20:2464:2481	3821257	0	True				
ANR	3821327	ParameterType	OnigCodePoint		3821257	0					
ANR	3821328	Identifier	code		3821257	1					
ANR	3821329	Parameter	UChar * buf	73:40:2484:2493	3821257	1	True				
ANR	3821330	ParameterType	UChar *		3821257	0					
ANR	3821331	Identifier	buf		3821257	1					
ANR	3821332	CFGEntryNode	ENTRY		3821257		True				
ANR	3821333	CFGExitNode	EXIT		3821257		True				
ANR	3821334	Symbol	p		3821257						
ANR	3821335	Symbol	buf		3821257						
ANR	3821336	Symbol	code		3821257						
ANR	3821337	Symbol	* p ++		3821257						
ANR	3821338	Function	utf32le_mbc_case_fold	84:0:2700:3406							
ANR	3821339	FunctionDef	"utf32le_mbc_case_fold (OnigCaseFoldType flag , const UChar * * pp , const UChar * end , UChar * fold)"		3821338	0					
ANR	3821340	CompoundStatement		87:0:2813:3406	3821338	0					
ANR	3821341	IdentifierDeclStatement	const UChar * p = * pp ;	88:2:2817:2837	3821338	0	True				
ANR	3821342	IdentifierDecl	* p = * pp		3821338	0					
ANR	3821343	IdentifierDeclType	const UChar *		3821338	0					
ANR	3821344	Identifier	p		3821338	1					
ANR	3821345	AssignmentExpression	* p = * pp		3821338	2		=			
ANR	3821346	Identifier	p		3821338	0					
ANR	3821347	UnaryOperationExpression	* pp		3821338	1					
ANR	3821348	UnaryOperator	*		3821338	0					
ANR	3821349	Identifier	pp		3821338	1					
ANR	3821350	IfStatement	if ( ONIGENC_IS_ASCII_CODE ( * p ) && * ( p + 1 ) == 0 && * ( p + 2 ) == 0 && * ( p + 3 ) == 0 )		3821338	1					
ANR	3821351	Condition	ONIGENC_IS_ASCII_CODE ( * p ) && * ( p + 1 ) == 0 && * ( p + 2 ) == 0 && * ( p + 3 ) == 0	90:6:2846:2915	3821338	0	True				
ANR	3821352	AndExpression	ONIGENC_IS_ASCII_CODE ( * p ) && * ( p + 1 ) == 0 && * ( p + 2 ) == 0 && * ( p + 3 ) == 0		3821338	0		&&			
ANR	3821353	CallExpression	ONIGENC_IS_ASCII_CODE ( * p )		3821338	0					
ANR	3821354	Callee	ONIGENC_IS_ASCII_CODE		3821338	0					
ANR	3821355	Identifier	ONIGENC_IS_ASCII_CODE		3821338	0					
ANR	3821356	ArgumentList	* p		3821338	1					
ANR	3821357	Argument	* p		3821338	0					
ANR	3821358	UnaryOperationExpression	* p		3821338	0					
ANR	3821359	UnaryOperator	*		3821338	0					
ANR	3821360	Identifier	p		3821338	1					
ANR	3821361	AndExpression	* ( p + 1 ) == 0 && * ( p + 2 ) == 0 && * ( p + 3 ) == 0		3821338	1		&&			
ANR	3821362	EqualityExpression	* ( p + 1 ) == 0		3821338	0		==			
ANR	3821363	UnaryOperationExpression	* ( p + 1 )		3821338	0					
ANR	3821364	UnaryOperator	*		3821338	0					
ANR	3821365	AdditiveExpression	p + 1		3821338	1		+			
ANR	3821366	Identifier	p		3821338	0					
ANR	3821367	PrimaryExpression	1		3821338	1					
ANR	3821368	PrimaryExpression	0		3821338	1					
ANR	3821369	AndExpression	* ( p + 2 ) == 0 && * ( p + 3 ) == 0		3821338	1		&&			
ANR	3821370	EqualityExpression	* ( p + 2 ) == 0		3821338	0		==			
ANR	3821371	UnaryOperationExpression	* ( p + 2 )		3821338	0					
ANR	3821372	UnaryOperator	*		3821338	0					
ANR	3821373	AdditiveExpression	p + 2		3821338	1		+			
ANR	3821374	Identifier	p		3821338	0					
ANR	3821375	PrimaryExpression	2		3821338	1					
ANR	3821376	PrimaryExpression	0		3821338	1					
ANR	3821377	EqualityExpression	* ( p + 3 ) == 0		3821338	1		==			
ANR	3821378	UnaryOperationExpression	* ( p + 3 )		3821338	0					
ANR	3821379	UnaryOperator	*		3821338	0					
ANR	3821380	AdditiveExpression	p + 3		3821338	1		+			
ANR	3821381	Identifier	p		3821338	0					
ANR	3821382	PrimaryExpression	3		3821338	1					
ANR	3821383	PrimaryExpression	0		3821338	1					
ANR	3821384	CompoundStatement		4:78:104:104	3821338	1					
ANR	3821385	IfStatement	if ( ( flag & ONIGENC_CASE_FOLD_TURKISH_AZERI ) != 0 )		3821338	0					
ANR	3821386	Condition	( flag & ONIGENC_CASE_FOLD_TURKISH_AZERI ) != 0	92:8:2971:3015	3821338	0	True				
ANR	3821387	EqualityExpression	( flag & ONIGENC_CASE_FOLD_TURKISH_AZERI ) != 0		3821338	0		!=			
ANR	3821388	BitAndExpression	flag & ONIGENC_CASE_FOLD_TURKISH_AZERI		3821338	0		&			
ANR	3821389	Identifier	flag		3821338	0					
ANR	3821390	Identifier	ONIGENC_CASE_FOLD_TURKISH_AZERI		3821338	1					
ANR	3821391	PrimaryExpression	0		3821338	1					
ANR	3821392	CompoundStatement		6:55:204:204	3821338	1					
ANR	3821393	IfStatement	if ( * p == 0x49 )		3821338	0					
ANR	3821394	Condition	* p == 0x49	93:10:3030:3039	3821338	0	True				
ANR	3821395	EqualityExpression	* p == 0x49		3821338	0		==			
ANR	3821396	UnaryOperationExpression	* p		3821338	0					
ANR	3821397	UnaryOperator	*		3821338	0					
ANR	3821398	Identifier	p		3821338	1					
ANR	3821399	PrimaryExpression	0x49		3821338	1					
ANR	3821400	CompoundStatement		7:22:228:228	3821338	1					
ANR	3821401	ExpressionStatement	* fold ++ = 0x31	94:1:3045:3059	3821338	0	True				
ANR	3821402	AssignmentExpression	* fold ++ = 0x31		3821338	0		=			
ANR	3821403	UnaryOperationExpression	* fold ++		3821338	0					
ANR	3821404	UnaryOperator	*		3821338	0					
ANR	3821405	PostIncDecOperationExpression	fold ++		3821338	1					
ANR	3821406	Identifier	fold		3821338	0					
ANR	3821407	IncDec	++		3821338	1					
ANR	3821408	PrimaryExpression	0x31		3821338	1					
ANR	3821409	ExpressionStatement	* fold ++ = 0x01	95:1:3062:3076	3821338	1	True				
ANR	3821410	AssignmentExpression	* fold ++ = 0x01		3821338	0		=			
ANR	3821411	UnaryOperationExpression	* fold ++		3821338	0					
ANR	3821412	UnaryOperator	*		3821338	0					
ANR	3821413	PostIncDecOperationExpression	fold ++		3821338	1					
ANR	3821414	Identifier	fold		3821338	0					
ANR	3821415	IncDec	++		3821338	1					
ANR	3821416	PrimaryExpression	0x01		3821338	1					
ANR	3821417	ElseStatement	else		3821338	0					
ANR	3821418	CompoundStatement		12:9:287:287	3821338	0					
ANR	3821419	ExpressionStatement	* fold ++ = ONIGENC_ASCII_CODE_TO_LOWER_CASE ( * p )	100:6:3116:3162	3821338	0	True				
ANR	3821420	AssignmentExpression	* fold ++ = ONIGENC_ASCII_CODE_TO_LOWER_CASE ( * p )		3821338	0		=			
ANR	3821421	UnaryOperationExpression	* fold ++		3821338	0					
ANR	3821422	UnaryOperator	*		3821338	0					
ANR	3821423	PostIncDecOperationExpression	fold ++		3821338	1					
ANR	3821424	Identifier	fold		3821338	0					
ANR	3821425	IncDec	++		3821338	1					
ANR	3821426	CallExpression	ONIGENC_ASCII_CODE_TO_LOWER_CASE ( * p )		3821338	1					
ANR	3821427	Callee	ONIGENC_ASCII_CODE_TO_LOWER_CASE		3821338	0					
ANR	3821428	Identifier	ONIGENC_ASCII_CODE_TO_LOWER_CASE		3821338	0					
ANR	3821429	ArgumentList	* p		3821338	1					
ANR	3821430	Argument	* p		3821338	0					
ANR	3821431	UnaryOperationExpression	* p		3821338	0					
ANR	3821432	UnaryOperator	*		3821338	0					
ANR	3821433	Identifier	p		3821338	1					
ANR	3821434	ExpressionStatement	* fold ++ = 0	101:6:3170:3181	3821338	1	True				
ANR	3821435	AssignmentExpression	* fold ++ = 0		3821338	0		=			
ANR	3821436	UnaryOperationExpression	* fold ++		3821338	0					
ANR	3821437	UnaryOperator	*		3821338	0					
ANR	3821438	PostIncDecOperationExpression	fold ++		3821338	1					
ANR	3821439	Identifier	fold		3821338	0					
ANR	3821440	IncDec	++		3821338	1					
ANR	3821441	PrimaryExpression	0		3821338	1					
ANR	3821442	ExpressionStatement	* fold ++ = 0	106:4:3244:3255	3821338	1	True				
ANR	3821443	AssignmentExpression	* fold ++ = 0		3821338	0		=			
ANR	3821444	UnaryOperationExpression	* fold ++		3821338	0					
ANR	3821445	UnaryOperator	*		3821338	0					
ANR	3821446	PostIncDecOperationExpression	fold ++		3821338	1					
ANR	3821447	Identifier	fold		3821338	0					
ANR	3821448	IncDec	++		3821338	1					
ANR	3821449	PrimaryExpression	0		3821338	1					
ANR	3821450	ExpressionStatement	* fold = 0	107:4:3261:3272	3821338	2	True				
ANR	3821451	AssignmentExpression	* fold = 0		3821338	0		=			
ANR	3821452	UnaryOperationExpression	* fold		3821338	0					
ANR	3821453	UnaryOperator	*		3821338	0					
ANR	3821454	Identifier	fold		3821338	1					
ANR	3821455	PrimaryExpression	0		3821338	1					
ANR	3821456	ExpressionStatement	* pp += 4	108:4:3278:3286	3821338	3	True				
ANR	3821457	AssignmentExpression	* pp += 4		3821338	0		+=			
ANR	3821458	UnaryOperationExpression	* pp		3821338	0					
ANR	3821459	UnaryOperator	*		3821338	0					
ANR	3821460	Identifier	pp		3821338	1					
ANR	3821461	PrimaryExpression	4		3821338	1					
ANR	3821462	ReturnStatement	return 4 ;	109:4:3292:3300	3821338	4	True				
ANR	3821463	PrimaryExpression	4		3821338	0					
ANR	3821464	ElseStatement	else		3821338	0					
ANR	3821465	ReturnStatement	"return onigenc_unicode_mbc_case_fold ( ONIG_ENCODING_UTF32_LE , flag , pp , end , fold ) ;"	112:4:3317:3404	3821338	0	True				
ANR	3821466	CallExpression	"onigenc_unicode_mbc_case_fold ( ONIG_ENCODING_UTF32_LE , flag , pp , end , fold )"		3821338	0					
ANR	3821467	Callee	onigenc_unicode_mbc_case_fold		3821338	0					
ANR	3821468	Identifier	onigenc_unicode_mbc_case_fold		3821338	0					
ANR	3821469	ArgumentList	ONIG_ENCODING_UTF32_LE		3821338	1					
ANR	3821470	Argument	ONIG_ENCODING_UTF32_LE		3821338	0					
ANR	3821471	Identifier	ONIG_ENCODING_UTF32_LE		3821338	0					
ANR	3821472	Argument	flag		3821338	1					
ANR	3821473	Identifier	flag		3821338	0					
ANR	3821474	Argument	pp		3821338	2					
ANR	3821475	Identifier	pp		3821338	0					
ANR	3821476	Argument	end		3821338	3					
ANR	3821477	Identifier	end		3821338	0					
ANR	3821478	Argument	fold		3821338	4					
ANR	3821479	Identifier	fold		3821338	0					
ANR	3821480	ReturnType	static int		3821338	1					
ANR	3821481	Identifier	utf32le_mbc_case_fold		3821338	2					
ANR	3821482	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end , UChar * fold"		3821338	3					
ANR	3821483	Parameter	OnigCaseFoldType flag	85:22:2733:2753	3821338	0	True				
ANR	3821484	ParameterType	OnigCaseFoldType		3821338	0					
ANR	3821485	Identifier	flag		3821338	1					
ANR	3821486	Parameter	const UChar * * pp	86:8:2764:2779	3821338	1	True				
ANR	3821487	ParameterType	const UChar * *		3821338	0					
ANR	3821488	Identifier	pp		3821338	1					
ANR	3821489	Parameter	const UChar * end	86:26:2782:2797	3821338	2	True				
ANR	3821490	ParameterType	const UChar *		3821338	0					
ANR	3821491	Identifier	end		3821338	1					
ANR	3821492	Parameter	UChar * fold	86:44:2800:2810	3821338	3	True				
ANR	3821493	ParameterType	UChar *		3821338	0					
ANR	3821494	Identifier	fold		3821338	1					
ANR	3821495	CFGEntryNode	ENTRY		3821338		True				
ANR	3821496	CFGExitNode	EXIT		3821338		True				
ANR	3821497	Symbol	pp		3821338						
ANR	3821498	Symbol	ONIGENC_IS_ASCII_CODE		3821338						
ANR	3821499	Symbol	flag		3821338						
ANR	3821500	Symbol	* ( p + 2 )		3821338						
ANR	3821501	Symbol	* pp		3821338						
ANR	3821502	Symbol	* ( p + 3 )		3821338						
ANR	3821503	Symbol	* fold		3821338						
ANR	3821504	Symbol	* ( p + 1 )		3821338						
ANR	3821505	Symbol	* fold ++		3821338						
ANR	3821506	Symbol	ONIG_ENCODING_UTF32_LE		3821338						
ANR	3821507	Symbol	p		3821338						
ANR	3821508	Symbol	fold		3821338						
ANR	3821509	Symbol	ONIGENC_ASCII_CODE_TO_LOWER_CASE		3821338						
ANR	3821510	Symbol	ONIGENC_CASE_FOLD_TURKISH_AZERI		3821338						
ANR	3821511	Symbol	end		3821338						
ANR	3821512	Symbol	* p		3821338						
ANR	3821513	Symbol	onigenc_unicode_mbc_case_fold		3821338						
ANR	3821514	Function	utf32le_is_mbc_ambiguous	117:0:3415:4091							
ANR	3821515	FunctionDef	"utf32le_is_mbc_ambiguous (OnigCaseFoldType flag , const UChar * * pp , const UChar * end)"		3821514	0					
ANR	3821516	CompoundStatement		119:0:3510:4091	3821514	0					
ANR	3821517	IdentifierDeclStatement	const UChar * p = * pp ;	120:2:3514:3534	3821514	0	True				
ANR	3821518	IdentifierDecl	* p = * pp		3821514	0					
ANR	3821519	IdentifierDeclType	const UChar *		3821514	0					
ANR	3821520	Identifier	p		3821514	1					
ANR	3821521	AssignmentExpression	* p = * pp		3821514	2		=			
ANR	3821522	Identifier	p		3821514	0					
ANR	3821523	UnaryOperationExpression	* pp		3821514	1					
ANR	3821524	UnaryOperator	*		3821514	0					
ANR	3821525	Identifier	pp		3821514	1					
ANR	3821526	ExpressionStatement	( * pp ) += 4	122:2:3539:3549	3821514	1	True				
ANR	3821527	AssignmentExpression	( * pp ) += 4		3821514	0		+=			
ANR	3821528	UnaryOperationExpression	* pp		3821514	0					
ANR	3821529	UnaryOperator	*		3821514	0					
ANR	3821530	Identifier	pp		3821514	1					
ANR	3821531	PrimaryExpression	4		3821514	1					
ANR	3821532	IfStatement	if ( * ( p + 1 ) == 0 && * ( p + 2 ) == 0 && * ( p + 3 ) == 0 )		3821514	2					
ANR	3821533	Condition	* ( p + 1 ) == 0 && * ( p + 2 ) == 0 && * ( p + 3 ) == 0	124:6:3558:3598	3821514	0	True				
ANR	3821534	AndExpression	* ( p + 1 ) == 0 && * ( p + 2 ) == 0 && * ( p + 3 ) == 0		3821514	0		&&			
ANR	3821535	EqualityExpression	* ( p + 1 ) == 0		3821514	0		==			
ANR	3821536	UnaryOperationExpression	* ( p + 1 )		3821514	0					
ANR	3821537	UnaryOperator	*		3821514	0					
ANR	3821538	AdditiveExpression	p + 1		3821514	1		+			
ANR	3821539	Identifier	p		3821514	0					
ANR	3821540	PrimaryExpression	1		3821514	1					
ANR	3821541	PrimaryExpression	0		3821514	1					
ANR	3821542	AndExpression	* ( p + 2 ) == 0 && * ( p + 3 ) == 0		3821514	1		&&			
ANR	3821543	EqualityExpression	* ( p + 2 ) == 0		3821514	0		==			
ANR	3821544	UnaryOperationExpression	* ( p + 2 )		3821514	0					
ANR	3821545	UnaryOperator	*		3821514	0					
ANR	3821546	AdditiveExpression	p + 2		3821514	1		+			
ANR	3821547	Identifier	p		3821514	0					
ANR	3821548	PrimaryExpression	2		3821514	1					
ANR	3821549	PrimaryExpression	0		3821514	1					
ANR	3821550	EqualityExpression	* ( p + 3 ) == 0		3821514	1		==			
ANR	3821551	UnaryOperationExpression	* ( p + 3 )		3821514	0					
ANR	3821552	UnaryOperator	*		3821514	0					
ANR	3821553	AdditiveExpression	p + 3		3821514	1		+			
ANR	3821554	Identifier	p		3821514	0					
ANR	3821555	PrimaryExpression	3		3821514	1					
ANR	3821556	PrimaryExpression	0		3821514	1					
ANR	3821557	CompoundStatement		7:4:96:104	3821514	1					
ANR	3821558	IdentifierDeclStatement	"int c , v ;"	125:4:3607:3615	3821514	0	True				
ANR	3821559	IdentifierDecl	c		3821514	0					
ANR	3821560	IdentifierDeclType	int		3821514	0					
ANR	3821561	Identifier	c		3821514	1					
ANR	3821562	IdentifierDecl	v		3821514	1					
ANR	3821563	IdentifierDeclType	int		3821514	0					
ANR	3821564	Identifier	v		3821514	1					
ANR	3821565	IfStatement	if ( * p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0 )		3821514	1					
ANR	3821566	Condition	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0	127:8:3626:3690	3821514	0	True				
ANR	3821567	AndExpression	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		3821514	0		&&			
ANR	3821568	EqualityExpression	* p == 0xdf		3821514	0		==			
ANR	3821569	UnaryOperationExpression	* p		3821514	0					
ANR	3821570	UnaryOperator	*		3821514	0					
ANR	3821571	Identifier	p		3821514	1					
ANR	3821572	PrimaryExpression	0xdf		3821514	1					
ANR	3821573	EqualityExpression	( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		3821514	1		!=			
ANR	3821574	BitAndExpression	flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		3821514	0		&			
ANR	3821575	Identifier	flag		3821514	0					
ANR	3821576	Identifier	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		3821514	1					
ANR	3821577	PrimaryExpression	0		3821514	1					
ANR	3821578	CompoundStatement		9:75:182:182	3821514	1					
ANR	3821579	ReturnStatement	return TRUE ;	128:6:3701:3712	3821514	0	True				
ANR	3821580	Identifier	TRUE		3821514	0					
ANR	3821581	ExpressionStatement	c = * p	131:4:3725:3731	3821514	2	True				
ANR	3821582	AssignmentExpression	c = * p		3821514	0		=			
ANR	3821583	Identifier	c		3821514	0					
ANR	3821584	UnaryOperationExpression	* p		3821514	1					
ANR	3821585	UnaryOperator	*		3821514	0					
ANR	3821586	Identifier	p		3821514	1					
ANR	3821587	ExpressionStatement	"v = ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE ( c , ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )"	132:4:3737:3843	3821514	3	True				
ANR	3821588	AssignmentExpression	"v = ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE ( c , ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )"		3821514	0		=			
ANR	3821589	Identifier	v		3821514	0					
ANR	3821590	CallExpression	"ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE ( c , ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )"		3821514	1					
ANR	3821591	Callee	ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE		3821514	0					
ANR	3821592	Identifier	ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE		3821514	0					
ANR	3821593	ArgumentList	c		3821514	1					
ANR	3821594	Argument	c		3821514	0					
ANR	3821595	Identifier	c		3821514	0					
ANR	3821596	Argument	BIT_CTYPE_UPPER | BIT_CTYPE_LOWER		3821514	1					
ANR	3821597	InclusiveOrExpression	BIT_CTYPE_UPPER | BIT_CTYPE_LOWER		3821514	0		|			
ANR	3821598	Identifier	BIT_CTYPE_UPPER		3821514	0					
ANR	3821599	Identifier	BIT_CTYPE_LOWER		3821514	1					
ANR	3821600	IfStatement	if ( ( v | BIT_CTYPE_LOWER ) != 0 )		3821514	4					
ANR	3821601	Condition	( v | BIT_CTYPE_LOWER ) != 0	134:8:3853:3878	3821514	0	True				
ANR	3821602	EqualityExpression	( v | BIT_CTYPE_LOWER ) != 0		3821514	0		!=			
ANR	3821603	InclusiveOrExpression	v | BIT_CTYPE_LOWER		3821514	0		|			
ANR	3821604	Identifier	v		3821514	0					
ANR	3821605	Identifier	BIT_CTYPE_LOWER		3821514	1					
ANR	3821606	PrimaryExpression	0		3821514	1					
ANR	3821607	CompoundStatement		16:36:370:370	3821514	1					
ANR	3821608	IfStatement	if ( c >= 0xaa && c <= 0xba )		3821514	0					
ANR	3821609	Condition	c >= 0xaa && c <= 0xba	136:10:3964:3985	3821514	0	True				
ANR	3821610	AndExpression	c >= 0xaa && c <= 0xba		3821514	0		&&			
ANR	3821611	RelationalExpression	c >= 0xaa		3821514	0		>=			
ANR	3821612	Identifier	c		3821514	0					
ANR	3821613	PrimaryExpression	0xaa		3821514	1					
ANR	3821614	RelationalExpression	c <= 0xba		3821514	1		<=			
ANR	3821615	Identifier	c		3821514	0					
ANR	3821616	PrimaryExpression	0xba		3821514	1					
ANR	3821617	ReturnStatement	return FALSE ;	137:1:3989:4001	3821514	1	True				
ANR	3821618	Identifier	FALSE		3821514	0					
ANR	3821619	ElseStatement	else		3821514	0					
ANR	3821620	ReturnStatement	return TRUE ;	139:1:4015:4026	3821514	0	True				
ANR	3821621	Identifier	TRUE		3821514	0					
ANR	3821622	ReturnStatement	return ( v != 0 ? TRUE : FALSE ) ;	141:4:4038:4068	3821514	5	True				
ANR	3821623	ConditionalExpression	v != 0 ? TRUE : FALSE		3821514	0					
ANR	3821624	Condition	v != 0		3821514	0					
ANR	3821625	EqualityExpression	v != 0		3821514	0		!=			
ANR	3821626	Identifier	v		3821514	0					
ANR	3821627	PrimaryExpression	0		3821514	1					
ANR	3821628	Identifier	TRUE		3821514	1					
ANR	3821629	Identifier	FALSE		3821514	2					
ANR	3821630	ReturnStatement	return FALSE ;	144:2:4077:4089	3821514	3	True				
ANR	3821631	Identifier	FALSE		3821514	0					
ANR	3821632	ReturnType	static int		3821514	1					
ANR	3821633	Identifier	utf32le_is_mbc_ambiguous		3821514	2					
ANR	3821634	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end"		3821514	3					
ANR	3821635	Parameter	OnigCaseFoldType flag	118:25:3451:3471	3821514	0	True				
ANR	3821636	ParameterType	OnigCaseFoldType		3821514	0					
ANR	3821637	Identifier	flag		3821514	1					
ANR	3821638	Parameter	const UChar * * pp	118:48:3474:3489	3821514	1	True				
ANR	3821639	ParameterType	const UChar * *		3821514	0					
ANR	3821640	Identifier	pp		3821514	1					
ANR	3821641	Parameter	const UChar * end	118:66:3492:3507	3821514	2	True				
ANR	3821642	ParameterType	const UChar *		3821514	0					
ANR	3821643	Identifier	end		3821514	1					
ANR	3821644	CFGEntryNode	ENTRY		3821514		True				
ANR	3821645	CFGExitNode	EXIT		3821514		True				
ANR	3821646	Symbol	pp		3821514						
ANR	3821647	Symbol	flag		3821514						
ANR	3821648	Symbol	c		3821514						
ANR	3821649	Symbol	* ( p + 2 )		3821514						
ANR	3821650	Symbol	* pp		3821514						
ANR	3821651	Symbol	* ( p + 3 )		3821514						
ANR	3821652	Symbol	TRUE		3821514						
ANR	3821653	Symbol	* ( p + 1 )		3821514						
ANR	3821654	Symbol	p		3821514						
ANR	3821655	Symbol	ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE		3821514						
ANR	3821656	Symbol	v		3821514						
ANR	3821657	Symbol	BIT_CTYPE_LOWER		3821514						
ANR	3821658	Symbol	end		3821514						
ANR	3821659	Symbol	* p		3821514						
ANR	3821660	Symbol	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		3821514						
ANR	3821661	Symbol	BIT_CTYPE_UPPER		3821514						
ANR	3821662	Symbol	FALSE		3821514						
ANR	3821663	Function	utf32le_left_adjust_char_head	148:0:4101:4287							
ANR	3821664	FunctionDef	"utf32le_left_adjust_char_head (const UChar * start , const UChar * s)"		3821663	0					
ANR	3821665	CompoundStatement		150:0:4181:4287	3821663	0					
ANR	3821666	IdentifierDeclStatement	int rem ;	151:2:4185:4192	3821663	0	True				
ANR	3821667	IdentifierDecl	rem		3821663	0					
ANR	3821668	IdentifierDeclType	int		3821663	0					
ANR	3821669	Identifier	rem		3821663	1					
ANR	3821670	IfStatement	if ( s <= start )		3821663	1					
ANR	3821671	Condition	s <= start	153:6:4201:4210	3821663	0	True				
ANR	3821672	RelationalExpression	s <= start		3821663	0		<=			
ANR	3821673	Identifier	s		3821663	0					
ANR	3821674	Identifier	start		3821663	1					
ANR	3821675	ReturnStatement	return ( UChar * ) s ;	153:18:4213:4230	3821663	1	True				
ANR	3821676	CastExpression	( UChar * ) s		3821663	0					
ANR	3821677	CastTarget	UChar *		3821663	0					
ANR	3821678	Identifier	s		3821663	1					
ANR	3821679	ExpressionStatement	rem = ( s - start ) % 4	155:2:4235:4256	3821663	2	True				
ANR	3821680	AssignmentExpression	rem = ( s - start ) % 4		3821663	0		=			
ANR	3821681	Identifier	rem		3821663	0					
ANR	3821682	MultiplicativeExpression	( s - start ) % 4		3821663	1		%			
ANR	3821683	AdditiveExpression	s - start		3821663	0		-			
ANR	3821684	Identifier	s		3821663	0					
ANR	3821685	Identifier	start		3821663	1					
ANR	3821686	PrimaryExpression	4		3821663	1					
ANR	3821687	ReturnStatement	return ( UChar * ) ( s - rem ) ;	156:2:4260:4285	3821663	3	True				
ANR	3821688	CastExpression	( UChar * ) ( s - rem )		3821663	0					
ANR	3821689	CastTarget	UChar *		3821663	0					
ANR	3821690	AdditiveExpression	s - rem		3821663	1		-			
ANR	3821691	Identifier	s		3821663	0					
ANR	3821692	Identifier	rem		3821663	1					
ANR	3821693	ReturnType	static UChar *		3821663	1					
ANR	3821694	Identifier	utf32le_left_adjust_char_head		3821663	2					
ANR	3821695	ParameterList	"const UChar * start , const UChar * s"		3821663	3					
ANR	3821696	Parameter	const UChar * start	149:30:4145:4162	3821663	0	True				
ANR	3821697	ParameterType	const UChar *		3821663	0					
ANR	3821698	Identifier	start		3821663	1					
ANR	3821699	Parameter	const UChar * s	149:50:4165:4178	3821663	1	True				
ANR	3821700	ParameterType	const UChar *		3821663	0					
ANR	3821701	Identifier	s		3821663	1					
ANR	3821702	CFGEntryNode	ENTRY		3821663		True				
ANR	3821703	CFGExitNode	EXIT		3821663		True				
ANR	3821704	Symbol	s		3821663						
ANR	3821705	Symbol	start		3821663						
ANR	3821706	Symbol	rem		3821663						
ANR	3821707	Function	utf32le_get_case_fold_codes_by_str	159:0:4290:4545							
ANR	3821708	FunctionDef	"utf32le_get_case_fold_codes_by_str (OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ])"		3821707	0					
ANR	3821709	CompoundStatement		162:0:4435:4545	3821707	0					
ANR	3821710	ReturnStatement	"return onigenc_unicode_get_case_fold_codes_by_str ( ONIG_ENCODING_UTF32_LE , flag , p , end , items ) ;"	163:2:4439:4543	3821707	0	True				
ANR	3821711	CallExpression	"onigenc_unicode_get_case_fold_codes_by_str ( ONIG_ENCODING_UTF32_LE , flag , p , end , items )"		3821707	0					
ANR	3821712	Callee	onigenc_unicode_get_case_fold_codes_by_str		3821707	0					
ANR	3821713	Identifier	onigenc_unicode_get_case_fold_codes_by_str		3821707	0					
ANR	3821714	ArgumentList	ONIG_ENCODING_UTF32_LE		3821707	1					
ANR	3821715	Argument	ONIG_ENCODING_UTF32_LE		3821707	0					
ANR	3821716	Identifier	ONIG_ENCODING_UTF32_LE		3821707	0					
ANR	3821717	Argument	flag		3821707	1					
ANR	3821718	Identifier	flag		3821707	0					
ANR	3821719	Argument	p		3821707	2					
ANR	3821720	Identifier	p		3821707	0					
ANR	3821721	Argument	end		3821707	3					
ANR	3821722	Identifier	end		3821707	0					
ANR	3821723	Argument	items		3821707	4					
ANR	3821724	Identifier	items		3821707	0					
ANR	3821725	ReturnType	static int		3821707	1					
ANR	3821726	Identifier	utf32le_get_case_fold_codes_by_str		3821707	2					
ANR	3821727	ParameterList	"OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ]"		3821707	3					
ANR	3821728	Parameter	OnigCaseFoldType flag	160:35:4336:4356	3821707	0	True				
ANR	3821729	ParameterType	OnigCaseFoldType		3821707	0					
ANR	3821730	Identifier	flag		3821707	1					
ANR	3821731	Parameter	const OnigUChar * p	161:4:4363:4380	3821707	1	True				
ANR	3821732	ParameterType	const OnigUChar *		3821707	0					
ANR	3821733	Identifier	p		3821707	1					
ANR	3821734	Parameter	const OnigUChar * end	161:24:4383:4402	3821707	2	True				
ANR	3821735	ParameterType	const OnigUChar *		3821707	0					
ANR	3821736	Identifier	end		3821707	1					
ANR	3821737	Parameter	OnigCaseFoldCodeItem items [ ]	161:46:4405:4432	3821707	3	True				
ANR	3821738	ParameterType	OnigCaseFoldCodeItem [ ]		3821707	0					
ANR	3821739	Identifier	items		3821707	1					
ANR	3821740	CFGEntryNode	ENTRY		3821707		True				
ANR	3821741	CFGExitNode	EXIT		3821707		True				
ANR	3821742	Symbol	p		3821707						
ANR	3821743	Symbol	flag		3821707						
ANR	3821744	Symbol	onigenc_unicode_get_case_fold_codes_by_str		3821707						
ANR	3821745	Symbol	end		3821707						
ANR	3821746	Symbol	items		3821707						
ANR	3821747	Symbol	ONIG_ENCODING_UTF32_LE		3821707						
ANR	3821748	DeclStmt									
ANR	3821749	Decl							OnigEncodingType	OnigEncodingType	OnigEncodingUTF32_LE
