command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2689843	File	data/converged/CVE-2015-8617_php-src/ext_standard_base64.c								
ANR	2689844	DeclStmt									
ANR	2689845	Decl							const char	const char [ ]	base64_table
ANR	2689846	DeclStmt									
ANR	2689847	Decl							const char	const char	base64_pad
ANR	2689848	DeclStmt									
ANR	2689849	Decl							const short	const short [ 256 ]	base64_reverse_table
ANR	2689850	Function	php_base64_encode	56:0:2752:3874							
ANR	2689851	FunctionDef	"php_base64_encode (const unsigned char * str , size_t length)"		2689850	0					
ANR	2689852	CompoundStatement		57:0:2841:3874	2689850	0					
ANR	2689853	IdentifierDeclStatement	const unsigned char * current = str ;	58:1:2844:2878	2689850	0	True				
ANR	2689854	IdentifierDecl	* current = str		2689850	0					
ANR	2689855	IdentifierDeclType	const unsigned char *		2689850	0					
ANR	2689856	Identifier	current		2689850	1					
ANR	2689857	AssignmentExpression	* current = str		2689850	2		=			
ANR	2689858	Identifier	str		2689850	0					
ANR	2689859	Identifier	str		2689850	1					
ANR	2689860	IdentifierDeclStatement	unsigned char * p ;	59:1:2881:2897	2689850	1	True				
ANR	2689861	IdentifierDecl	* p		2689850	0					
ANR	2689862	IdentifierDeclType	unsigned char *		2689850	0					
ANR	2689863	Identifier	p		2689850	1					
ANR	2689864	IdentifierDeclStatement	zend_string * result ;	60:1:2900:2919	2689850	2	True				
ANR	2689865	IdentifierDecl	* result		2689850	0					
ANR	2689866	IdentifierDeclType	zend_string *		2689850	0					
ANR	2689867	Identifier	result		2689850	1					
ANR	2689868	ExpressionStatement	"result = zend_string_alloc ( ( ( length + 2 ) / 3 ) * 4 * sizeof ( char ) , 0 )"	62:1:2923:2991	2689850	3	True				
ANR	2689869	AssignmentExpression	"result = zend_string_alloc ( ( ( length + 2 ) / 3 ) * 4 * sizeof ( char ) , 0 )"		2689850	0		=			
ANR	2689870	Identifier	result		2689850	0					
ANR	2689871	CallExpression	"zend_string_alloc ( ( ( length + 2 ) / 3 ) * 4 * sizeof ( char ) , 0 )"		2689850	1					
ANR	2689872	Callee	zend_string_alloc		2689850	0					
ANR	2689873	Identifier	zend_string_alloc		2689850	0					
ANR	2689874	ArgumentList	( ( length + 2 ) / 3 ) * 4 * sizeof ( char )		2689850	1					
ANR	2689875	Argument	( ( length + 2 ) / 3 ) * 4 * sizeof ( char )		2689850	0					
ANR	2689876	MultiplicativeExpression	( ( length + 2 ) / 3 ) * 4 * sizeof ( char )		2689850	0		*			
ANR	2689877	MultiplicativeExpression	( length + 2 ) / 3		2689850	0		/			
ANR	2689878	AdditiveExpression	length + 2		2689850	0		+			
ANR	2689879	Identifier	length		2689850	0					
ANR	2689880	PrimaryExpression	2		2689850	1					
ANR	2689881	PrimaryExpression	3		2689850	1					
ANR	2689882	MultiplicativeExpression	4 * sizeof ( char )		2689850	1		*			
ANR	2689883	PrimaryExpression	4		2689850	0					
ANR	2689884	SizeofExpression	sizeof ( char )		2689850	1					
ANR	2689885	Sizeof	sizeof		2689850	0					
ANR	2689886	SizeofOperand	char		2689850	1					
ANR	2689887	Argument	0		2689850	1					
ANR	2689888	PrimaryExpression	0		2689850	0					
ANR	2689889	ExpressionStatement	p = ( unsigned char * ) ZSTR_VAL ( result )	63:1:2994:3031	2689850	4	True				
ANR	2689890	AssignmentExpression	p = ( unsigned char * ) ZSTR_VAL ( result )		2689850	0		=			
ANR	2689891	Identifier	p		2689850	0					
ANR	2689892	CastExpression	( unsigned char * ) ZSTR_VAL ( result )		2689850	1					
ANR	2689893	CastTarget	unsigned char *		2689850	0					
ANR	2689894	CallExpression	ZSTR_VAL ( result )		2689850	1					
ANR	2689895	Callee	ZSTR_VAL		2689850	0					
ANR	2689896	Identifier	ZSTR_VAL		2689850	0					
ANR	2689897	ArgumentList	result		2689850	1					
ANR	2689898	Argument	result		2689850	0					
ANR	2689899	Identifier	result		2689850	0					
ANR	2689900	WhileStatement	while ( length > 2 )		2689850	5					
ANR	2689901	Condition	length > 2	65:8:3042:3051	2689850	0	True				
ANR	2689902	RelationalExpression	length > 2		2689850	0		>			
ANR	2689903	Identifier	length		2689850	0					
ANR	2689904	PrimaryExpression	2		2689850	1					
ANR	2689905	CompoundStatement		9:20:212:212	2689850	1					
ANR	2689906	ExpressionStatement	* p ++ = base64_table [ current [ 0 ] >> 2 ]	66:2:3107:3143	2689850	0	True				
ANR	2689907	AssignmentExpression	* p ++ = base64_table [ current [ 0 ] >> 2 ]		2689850	0		=			
ANR	2689908	UnaryOperationExpression	* p ++		2689850	0					
ANR	2689909	UnaryOperator	*		2689850	0					
ANR	2689910	PostIncDecOperationExpression	p ++		2689850	1					
ANR	2689911	Identifier	p		2689850	0					
ANR	2689912	IncDec	++		2689850	1					
ANR	2689913	ArrayIndexing	base64_table [ current [ 0 ] >> 2 ]		2689850	1					
ANR	2689914	Identifier	base64_table		2689850	0					
ANR	2689915	ShiftExpression	current [ 0 ] >> 2		2689850	1		>>			
ANR	2689916	ArrayIndexing	current [ 0 ]		2689850	0					
ANR	2689917	Identifier	current		2689850	0					
ANR	2689918	PrimaryExpression	0		2689850	1					
ANR	2689919	PrimaryExpression	2		2689850	1					
ANR	2689920	ExpressionStatement	* p ++ = base64_table [ ( ( current [ 0 ] & 0x03 ) << 4 ) + ( current [ 1 ] >> 4 ) ]	67:2:3147:3214	2689850	1	True				
ANR	2689921	AssignmentExpression	* p ++ = base64_table [ ( ( current [ 0 ] & 0x03 ) << 4 ) + ( current [ 1 ] >> 4 ) ]		2689850	0		=			
ANR	2689922	UnaryOperationExpression	* p ++		2689850	0					
ANR	2689923	UnaryOperator	*		2689850	0					
ANR	2689924	PostIncDecOperationExpression	p ++		2689850	1					
ANR	2689925	Identifier	p		2689850	0					
ANR	2689926	IncDec	++		2689850	1					
ANR	2689927	ArrayIndexing	base64_table [ ( ( current [ 0 ] & 0x03 ) << 4 ) + ( current [ 1 ] >> 4 ) ]		2689850	1					
ANR	2689928	Identifier	base64_table		2689850	0					
ANR	2689929	AdditiveExpression	( ( current [ 0 ] & 0x03 ) << 4 ) + ( current [ 1 ] >> 4 )		2689850	1		+			
ANR	2689930	ShiftExpression	( current [ 0 ] & 0x03 ) << 4		2689850	0		<<			
ANR	2689931	BitAndExpression	current [ 0 ] & 0x03		2689850	0		&			
ANR	2689932	ArrayIndexing	current [ 0 ]		2689850	0					
ANR	2689933	Identifier	current		2689850	0					
ANR	2689934	PrimaryExpression	0		2689850	1					
ANR	2689935	PrimaryExpression	0x03		2689850	1					
ANR	2689936	PrimaryExpression	4		2689850	1					
ANR	2689937	ShiftExpression	current [ 1 ] >> 4		2689850	1		>>			
ANR	2689938	ArrayIndexing	current [ 1 ]		2689850	0					
ANR	2689939	Identifier	current		2689850	0					
ANR	2689940	PrimaryExpression	1		2689850	1					
ANR	2689941	PrimaryExpression	4		2689850	1					
ANR	2689942	ExpressionStatement	* p ++ = base64_table [ ( ( current [ 1 ] & 0x0f ) << 2 ) + ( current [ 2 ] >> 6 ) ]	68:2:3218:3285	2689850	2	True				
ANR	2689943	AssignmentExpression	* p ++ = base64_table [ ( ( current [ 1 ] & 0x0f ) << 2 ) + ( current [ 2 ] >> 6 ) ]		2689850	0		=			
ANR	2689944	UnaryOperationExpression	* p ++		2689850	0					
ANR	2689945	UnaryOperator	*		2689850	0					
ANR	2689946	PostIncDecOperationExpression	p ++		2689850	1					
ANR	2689947	Identifier	p		2689850	0					
ANR	2689948	IncDec	++		2689850	1					
ANR	2689949	ArrayIndexing	base64_table [ ( ( current [ 1 ] & 0x0f ) << 2 ) + ( current [ 2 ] >> 6 ) ]		2689850	1					
ANR	2689950	Identifier	base64_table		2689850	0					
ANR	2689951	AdditiveExpression	( ( current [ 1 ] & 0x0f ) << 2 ) + ( current [ 2 ] >> 6 )		2689850	1		+			
ANR	2689952	ShiftExpression	( current [ 1 ] & 0x0f ) << 2		2689850	0		<<			
ANR	2689953	BitAndExpression	current [ 1 ] & 0x0f		2689850	0		&			
ANR	2689954	ArrayIndexing	current [ 1 ]		2689850	0					
ANR	2689955	Identifier	current		2689850	0					
ANR	2689956	PrimaryExpression	1		2689850	1					
ANR	2689957	PrimaryExpression	0x0f		2689850	1					
ANR	2689958	PrimaryExpression	2		2689850	1					
ANR	2689959	ShiftExpression	current [ 2 ] >> 6		2689850	1		>>			
ANR	2689960	ArrayIndexing	current [ 2 ]		2689850	0					
ANR	2689961	Identifier	current		2689850	0					
ANR	2689962	PrimaryExpression	2		2689850	1					
ANR	2689963	PrimaryExpression	6		2689850	1					
ANR	2689964	ExpressionStatement	* p ++ = base64_table [ current [ 2 ] & 0x3f ]	69:2:3289:3327	2689850	3	True				
ANR	2689965	AssignmentExpression	* p ++ = base64_table [ current [ 2 ] & 0x3f ]		2689850	0		=			
ANR	2689966	UnaryOperationExpression	* p ++		2689850	0					
ANR	2689967	UnaryOperator	*		2689850	0					
ANR	2689968	PostIncDecOperationExpression	p ++		2689850	1					
ANR	2689969	Identifier	p		2689850	0					
ANR	2689970	IncDec	++		2689850	1					
ANR	2689971	ArrayIndexing	base64_table [ current [ 2 ] & 0x3f ]		2689850	1					
ANR	2689972	Identifier	base64_table		2689850	0					
ANR	2689973	BitAndExpression	current [ 2 ] & 0x3f		2689850	1		&			
ANR	2689974	ArrayIndexing	current [ 2 ]		2689850	0					
ANR	2689975	Identifier	current		2689850	0					
ANR	2689976	PrimaryExpression	2		2689850	1					
ANR	2689977	PrimaryExpression	0x3f		2689850	1					
ANR	2689978	ExpressionStatement	current += 3	71:2:3332:3344	2689850	4	True				
ANR	2689979	AssignmentExpression	current += 3		2689850	0		+=			
ANR	2689980	Identifier	current		2689850	0					
ANR	2689981	PrimaryExpression	3		2689850	1					
ANR	2689982	ExpressionStatement	length -= 3	72:2:3348:3359	2689850	5	True				
ANR	2689983	AssignmentExpression	length -= 3		2689850	0		-=			
ANR	2689984	Identifier	length		2689850	0					
ANR	2689985	PrimaryExpression	3		2689850	1					
ANR	2689986	IfStatement	if ( length != 0 )		2689850	6					
ANR	2689987	Condition	length != 0	76:5:3452:3462	2689850	0	True				
ANR	2689988	EqualityExpression	length != 0		2689850	0		!=			
ANR	2689989	Identifier	length		2689850	0					
ANR	2689990	PrimaryExpression	0		2689850	1					
ANR	2689991	CompoundStatement		20:18:623:623	2689850	1					
ANR	2689992	ExpressionStatement	* p ++ = base64_table [ current [ 0 ] >> 2 ]	77:2:3469:3505	2689850	0	True				
ANR	2689993	AssignmentExpression	* p ++ = base64_table [ current [ 0 ] >> 2 ]		2689850	0		=			
ANR	2689994	UnaryOperationExpression	* p ++		2689850	0					
ANR	2689995	UnaryOperator	*		2689850	0					
ANR	2689996	PostIncDecOperationExpression	p ++		2689850	1					
ANR	2689997	Identifier	p		2689850	0					
ANR	2689998	IncDec	++		2689850	1					
ANR	2689999	ArrayIndexing	base64_table [ current [ 0 ] >> 2 ]		2689850	1					
ANR	2690000	Identifier	base64_table		2689850	0					
ANR	2690001	ShiftExpression	current [ 0 ] >> 2		2689850	1		>>			
ANR	2690002	ArrayIndexing	current [ 0 ]		2689850	0					
ANR	2690003	Identifier	current		2689850	0					
ANR	2690004	PrimaryExpression	0		2689850	1					
ANR	2690005	PrimaryExpression	2		2689850	1					
ANR	2690006	IfStatement	if ( length > 1 )		2689850	1					
ANR	2690007	Condition	length > 1	78:6:3513:3522	2689850	0	True				
ANR	2690008	RelationalExpression	length > 1		2689850	0		>			
ANR	2690009	Identifier	length		2689850	0					
ANR	2690010	PrimaryExpression	1		2689850	1					
ANR	2690011	CompoundStatement		22:18:683:683	2689850	1					
ANR	2690012	ExpressionStatement	* p ++ = base64_table [ ( ( current [ 0 ] & 0x03 ) << 4 ) + ( current [ 1 ] >> 4 ) ]	79:3:3530:3597	2689850	0	True				
ANR	2690013	AssignmentExpression	* p ++ = base64_table [ ( ( current [ 0 ] & 0x03 ) << 4 ) + ( current [ 1 ] >> 4 ) ]		2689850	0		=			
ANR	2690014	UnaryOperationExpression	* p ++		2689850	0					
ANR	2690015	UnaryOperator	*		2689850	0					
ANR	2690016	PostIncDecOperationExpression	p ++		2689850	1					
ANR	2690017	Identifier	p		2689850	0					
ANR	2690018	IncDec	++		2689850	1					
ANR	2690019	ArrayIndexing	base64_table [ ( ( current [ 0 ] & 0x03 ) << 4 ) + ( current [ 1 ] >> 4 ) ]		2689850	1					
ANR	2690020	Identifier	base64_table		2689850	0					
ANR	2690021	AdditiveExpression	( ( current [ 0 ] & 0x03 ) << 4 ) + ( current [ 1 ] >> 4 )		2689850	1		+			
ANR	2690022	ShiftExpression	( current [ 0 ] & 0x03 ) << 4		2689850	0		<<			
ANR	2690023	BitAndExpression	current [ 0 ] & 0x03		2689850	0		&			
ANR	2690024	ArrayIndexing	current [ 0 ]		2689850	0					
ANR	2690025	Identifier	current		2689850	0					
ANR	2690026	PrimaryExpression	0		2689850	1					
ANR	2690027	PrimaryExpression	0x03		2689850	1					
ANR	2690028	PrimaryExpression	4		2689850	1					
ANR	2690029	ShiftExpression	current [ 1 ] >> 4		2689850	1		>>			
ANR	2690030	ArrayIndexing	current [ 1 ]		2689850	0					
ANR	2690031	Identifier	current		2689850	0					
ANR	2690032	PrimaryExpression	1		2689850	1					
ANR	2690033	PrimaryExpression	4		2689850	1					
ANR	2690034	ExpressionStatement	* p ++ = base64_table [ ( current [ 1 ] & 0x0f ) << 2 ]	80:3:3602:3647	2689850	1	True				
ANR	2690035	AssignmentExpression	* p ++ = base64_table [ ( current [ 1 ] & 0x0f ) << 2 ]		2689850	0		=			
ANR	2690036	UnaryOperationExpression	* p ++		2689850	0					
ANR	2690037	UnaryOperator	*		2689850	0					
ANR	2690038	PostIncDecOperationExpression	p ++		2689850	1					
ANR	2690039	Identifier	p		2689850	0					
ANR	2690040	IncDec	++		2689850	1					
ANR	2690041	ArrayIndexing	base64_table [ ( current [ 1 ] & 0x0f ) << 2 ]		2689850	1					
ANR	2690042	Identifier	base64_table		2689850	0					
ANR	2690043	ShiftExpression	( current [ 1 ] & 0x0f ) << 2		2689850	1		<<			
ANR	2690044	BitAndExpression	current [ 1 ] & 0x0f		2689850	0		&			
ANR	2690045	ArrayIndexing	current [ 1 ]		2689850	0					
ANR	2690046	Identifier	current		2689850	0					
ANR	2690047	PrimaryExpression	1		2689850	1					
ANR	2690048	PrimaryExpression	0x0f		2689850	1					
ANR	2690049	PrimaryExpression	2		2689850	1					
ANR	2690050	ExpressionStatement	* p ++ = base64_pad	81:3:3652:3669	2689850	2	True				
ANR	2690051	AssignmentExpression	* p ++ = base64_pad		2689850	0		=			
ANR	2690052	UnaryOperationExpression	* p ++		2689850	0					
ANR	2690053	UnaryOperator	*		2689850	0					
ANR	2690054	PostIncDecOperationExpression	p ++		2689850	1					
ANR	2690055	Identifier	p		2689850	0					
ANR	2690056	IncDec	++		2689850	1					
ANR	2690057	Identifier	base64_pad		2689850	1					
ANR	2690058	ElseStatement	else		2689850	0					
ANR	2690059	CompoundStatement		26:9:838:838	2689850	0					
ANR	2690060	ExpressionStatement	* p ++ = base64_table [ ( current [ 0 ] & 0x03 ) << 4 ]	83:3:3685:3730	2689850	0	True				
ANR	2690061	AssignmentExpression	* p ++ = base64_table [ ( current [ 0 ] & 0x03 ) << 4 ]		2689850	0		=			
ANR	2690062	UnaryOperationExpression	* p ++		2689850	0					
ANR	2690063	UnaryOperator	*		2689850	0					
ANR	2690064	PostIncDecOperationExpression	p ++		2689850	1					
ANR	2690065	Identifier	p		2689850	0					
ANR	2690066	IncDec	++		2689850	1					
ANR	2690067	ArrayIndexing	base64_table [ ( current [ 0 ] & 0x03 ) << 4 ]		2689850	1					
ANR	2690068	Identifier	base64_table		2689850	0					
ANR	2690069	ShiftExpression	( current [ 0 ] & 0x03 ) << 4		2689850	1		<<			
ANR	2690070	BitAndExpression	current [ 0 ] & 0x03		2689850	0		&			
ANR	2690071	ArrayIndexing	current [ 0 ]		2689850	0					
ANR	2690072	Identifier	current		2689850	0					
ANR	2690073	PrimaryExpression	0		2689850	1					
ANR	2690074	PrimaryExpression	0x03		2689850	1					
ANR	2690075	PrimaryExpression	4		2689850	1					
ANR	2690076	ExpressionStatement	* p ++ = base64_pad	84:3:3735:3752	2689850	1	True				
ANR	2690077	AssignmentExpression	* p ++ = base64_pad		2689850	0		=			
ANR	2690078	UnaryOperationExpression	* p ++		2689850	0					
ANR	2690079	UnaryOperator	*		2689850	0					
ANR	2690080	PostIncDecOperationExpression	p ++		2689850	1					
ANR	2690081	Identifier	p		2689850	0					
ANR	2690082	IncDec	++		2689850	1					
ANR	2690083	Identifier	base64_pad		2689850	1					
ANR	2690084	ExpressionStatement	* p ++ = base64_pad	85:3:3757:3774	2689850	2	True				
ANR	2690085	AssignmentExpression	* p ++ = base64_pad		2689850	0		=			
ANR	2690086	UnaryOperationExpression	* p ++		2689850	0					
ANR	2690087	UnaryOperator	*		2689850	0					
ANR	2690088	PostIncDecOperationExpression	p ++		2689850	1					
ANR	2690089	Identifier	p		2689850	0					
ANR	2690090	IncDec	++		2689850	1					
ANR	2690091	Identifier	base64_pad		2689850	1					
ANR	2690092	ExpressionStatement	* p = '\\0'	88:1:3784:3793	2689850	7	True				
ANR	2690093	AssignmentExpression	* p = '\\0'		2689850	0		=			
ANR	2690094	UnaryOperationExpression	* p		2689850	0					
ANR	2690095	UnaryOperator	*		2689850	0					
ANR	2690096	Identifier	p		2689850	1					
ANR	2690097	PrimaryExpression	'\\0'		2689850	1					
ANR	2690098	ExpressionStatement	ZSTR_LEN ( result ) = ( p - ( unsigned char * ) ZSTR_VAL ( result ) )	90:1:3797:3855	2689850	8	True				
ANR	2690099	AssignmentExpression	ZSTR_LEN ( result ) = ( p - ( unsigned char * ) ZSTR_VAL ( result ) )		2689850	0		=			
ANR	2690100	CallExpression	ZSTR_LEN ( result )		2689850	0					
ANR	2690101	Callee	ZSTR_LEN		2689850	0					
ANR	2690102	Identifier	ZSTR_LEN		2689850	0					
ANR	2690103	ArgumentList	result		2689850	1					
ANR	2690104	Argument	result		2689850	0					
ANR	2690105	Identifier	result		2689850	0					
ANR	2690106	AdditiveExpression	p - ( unsigned char * ) ZSTR_VAL ( result )		2689850	1		-			
ANR	2690107	Identifier	p		2689850	0					
ANR	2690108	CastExpression	( unsigned char * ) ZSTR_VAL ( result )		2689850	1					
ANR	2690109	CastTarget	unsigned char *		2689850	0					
ANR	2690110	CallExpression	ZSTR_VAL ( result )		2689850	1					
ANR	2690111	Callee	ZSTR_VAL		2689850	0					
ANR	2690112	Identifier	ZSTR_VAL		2689850	0					
ANR	2690113	ArgumentList	result		2689850	1					
ANR	2690114	Argument	result		2689850	0					
ANR	2690115	Identifier	result		2689850	0					
ANR	2690116	ReturnStatement	return result ;	92:1:3859:3872	2689850	9	True				
ANR	2690117	Identifier	result		2689850	0					
ANR	2690118	ReturnType	PHPAPI zend_string *		2689850	1					
ANR	2690119	Identifier	php_base64_encode		2689850	2					
ANR	2690120	ParameterList	"const unsigned char * str , size_t length"		2689850	3					
ANR	2690121	Parameter	const unsigned char * str	56:38:2790:2813	2689850	0	True				
ANR	2690122	ParameterType	const unsigned char *		2689850	0					
ANR	2690123	Identifier	str		2689850	1					
ANR	2690124	Parameter	size_t length	56:64:2816:2828	2689850	1	True				
ANR	2690125	ParameterType	size_t		2689850	0					
ANR	2690126	Identifier	length		2689850	1					
ANR	2690127	CFGEntryNode	ENTRY		2689850		True				
ANR	2690128	CFGExitNode	EXIT		2689850		True				
ANR	2690129	Symbol	zend_string_alloc		2689850						
ANR	2690130	Symbol	* p ++		2689850						
ANR	2690131	Symbol	length		2689850						
ANR	2690132	Symbol	base64_table		2689850						
ANR	2690133	Symbol	* current		2689850						
ANR	2690134	Symbol	* base64_table		2689850						
ANR	2690135	Symbol	ZSTR_VAL		2689850						
ANR	2690136	Symbol	str		2689850						
ANR	2690137	Symbol	p		2689850						
ANR	2690138	Symbol	result		2689850						
ANR	2690139	Symbol	current		2689850						
ANR	2690140	Symbol	* * current		2689850						
ANR	2690141	Symbol	base64_pad		2689850						
ANR	2690142	Symbol	ZSTR_LEN		2689850						
ANR	2690143	Symbol	* p		2689850						
ANR	2690144	Function	php_base64_decode	130:0:4821:4958							
ANR	2690145	FunctionDef	"php_base64_decode (const unsigned char * str , size_t length)"		2690144	0					
ANR	2690146	CompoundStatement		131:0:4910:4958	2690144	0					
ANR	2690147	ReturnStatement	"return php_base64_decode_ex ( str , length , 0 ) ;"	132:1:4913:4956	2690144	0	True				
ANR	2690148	CallExpression	"php_base64_decode_ex ( str , length , 0 )"		2690144	0					
ANR	2690149	Callee	php_base64_decode_ex		2690144	0					
ANR	2690150	Identifier	php_base64_decode_ex		2690144	0					
ANR	2690151	ArgumentList	str		2690144	1					
ANR	2690152	Argument	str		2690144	0					
ANR	2690153	Identifier	str		2690144	0					
ANR	2690154	Argument	length		2690144	1					
ANR	2690155	Identifier	length		2690144	0					
ANR	2690156	Argument	0		2690144	2					
ANR	2690157	PrimaryExpression	0		2690144	0					
ANR	2690158	ReturnType	PHPAPI zend_string *		2690144	1					
ANR	2690159	Identifier	php_base64_decode		2690144	2					
ANR	2690160	ParameterList	"const unsigned char * str , size_t length"		2690144	3					
ANR	2690161	Parameter	const unsigned char * str	130:38:4859:4882	2690144	0	True				
ANR	2690162	ParameterType	const unsigned char *		2690144	0					
ANR	2690163	Identifier	str		2690144	1					
ANR	2690164	Parameter	size_t length	130:64:4885:4897	2690144	1	True				
ANR	2690165	ParameterType	size_t		2690144	0					
ANR	2690166	Identifier	length		2690144	1					
ANR	2690167	CFGEntryNode	ENTRY		2690144		True				
ANR	2690168	CFGExitNode	EXIT		2690144		True				
ANR	2690169	Symbol	str		2690144						
ANR	2690170	Symbol	length		2690144						
ANR	2690171	Symbol	php_base64_decode_ex		2690144						
ANR	2690172	Function	php_base64_decode_ex	136:0:4971:6541							
ANR	2690173	FunctionDef	"php_base64_decode_ex (const unsigned char * str , size_t length , zend_bool strict)"		2690172	0					
ANR	2690174	CompoundStatement		137:0:5081:6541	2690172	0					
ANR	2690175	IdentifierDeclStatement	const unsigned char * current = str ;	138:1:5084:5118	2690172	0	True				
ANR	2690176	IdentifierDecl	* current = str		2690172	0					
ANR	2690177	IdentifierDeclType	const unsigned char *		2690172	0					
ANR	2690178	Identifier	current		2690172	1					
ANR	2690179	AssignmentExpression	* current = str		2690172	2		=			
ANR	2690180	Identifier	str		2690172	0					
ANR	2690181	Identifier	str		2690172	1					
ANR	2690182	IdentifierDeclStatement	"int ch , i = 0 , j = 0 , k ;"	139:1:5121:5144	2690172	1	True				
ANR	2690183	IdentifierDecl	ch		2690172	0					
ANR	2690184	IdentifierDeclType	int		2690172	0					
ANR	2690185	Identifier	ch		2690172	1					
ANR	2690186	IdentifierDecl	i = 0		2690172	1					
ANR	2690187	IdentifierDeclType	int		2690172	0					
ANR	2690188	Identifier	i		2690172	1					
ANR	2690189	AssignmentExpression	i = 0		2690172	2		=			
ANR	2690190	Identifier	i		2690172	0					
ANR	2690191	PrimaryExpression	0		2690172	1					
ANR	2690192	IdentifierDecl	j = 0		2690172	2					
ANR	2690193	IdentifierDeclType	int		2690172	0					
ANR	2690194	Identifier	j		2690172	1					
ANR	2690195	AssignmentExpression	j = 0		2690172	2		=			
ANR	2690196	Identifier	j		2690172	0					
ANR	2690197	PrimaryExpression	0		2690172	1					
ANR	2690198	IdentifierDecl	k		2690172	3					
ANR	2690199	IdentifierDeclType	int		2690172	0					
ANR	2690200	Identifier	k		2690172	1					
ANR	2690201	IdentifierDeclStatement	zend_string * result ;	141:1:5191:5210	2690172	2	True				
ANR	2690202	IdentifierDecl	* result		2690172	0					
ANR	2690203	IdentifierDeclType	zend_string *		2690172	0					
ANR	2690204	Identifier	result		2690172	1					
ANR	2690205	ExpressionStatement	"result = zend_string_alloc ( length , 0 )"	143:1:5214:5251	2690172	3	True				
ANR	2690206	AssignmentExpression	"result = zend_string_alloc ( length , 0 )"		2690172	0		=			
ANR	2690207	Identifier	result		2690172	0					
ANR	2690208	CallExpression	"zend_string_alloc ( length , 0 )"		2690172	1					
ANR	2690209	Callee	zend_string_alloc		2690172	0					
ANR	2690210	Identifier	zend_string_alloc		2690172	0					
ANR	2690211	ArgumentList	length		2690172	1					
ANR	2690212	Argument	length		2690172	0					
ANR	2690213	Identifier	length		2690172	0					
ANR	2690214	Argument	0		2690172	1					
ANR	2690215	PrimaryExpression	0		2690172	0					
ANR	2690216	WhileStatement	while ( ( ch = * current ++ ) != '\\0' && length -- > 0 )		2690172	4					
ANR	2690217	Condition	( ch = * current ++ ) != '\\0' && length -- > 0	146:8:5319:5359	2690172	0	True				
ANR	2690218	AndExpression	( ch = * current ++ ) != '\\0' && length -- > 0		2690172	0		&&			
ANR	2690219	EqualityExpression	( ch = * current ++ ) != '\\0'		2690172	0		!=			
ANR	2690220	AssignmentExpression	ch = * current ++		2690172	0		=			
ANR	2690221	Identifier	ch		2690172	0					
ANR	2690222	UnaryOperationExpression	* current ++		2690172	1					
ANR	2690223	UnaryOperator	*		2690172	0					
ANR	2690224	PostIncDecOperationExpression	current ++		2690172	1					
ANR	2690225	Identifier	current		2690172	0					
ANR	2690226	IncDec	++		2690172	1					
ANR	2690227	PrimaryExpression	'\\0'		2690172	1					
ANR	2690228	RelationalExpression	length -- > 0		2690172	1		>			
ANR	2690229	PostIncDecOperationExpression	length --		2690172	0					
ANR	2690230	Identifier	length		2690172	0					
ANR	2690231	IncDec	--		2690172	1					
ANR	2690232	PrimaryExpression	0		2690172	1					
ANR	2690233	CompoundStatement		10:51:280:280	2690172	1					
ANR	2690234	IfStatement	if ( ch == base64_pad )		2690172	0					
ANR	2690235	Condition	ch == base64_pad	147:6:5370:5385	2690172	0	True				
ANR	2690236	EqualityExpression	ch == base64_pad		2690172	0		==			
ANR	2690237	Identifier	ch		2690172	0					
ANR	2690238	Identifier	base64_pad		2690172	1					
ANR	2690239	CompoundStatement		11:24:306:306	2690172	1					
ANR	2690240	IfStatement	if ( * current != '=' && ( ( i % 4 ) == 1 || ( strict && length > 0 ) ) )		2690172	0					
ANR	2690241	Condition	* current != '=' && ( ( i % 4 ) == 1 || ( strict && length > 0 ) )	148:7:5397:5455	2690172	0	True				
ANR	2690242	AndExpression	* current != '=' && ( ( i % 4 ) == 1 || ( strict && length > 0 ) )		2690172	0		&&			
ANR	2690243	EqualityExpression	* current != '='		2690172	0		!=			
ANR	2690244	UnaryOperationExpression	* current		2690172	0					
ANR	2690245	UnaryOperator	*		2690172	0					
ANR	2690246	Identifier	current		2690172	1					
ANR	2690247	PrimaryExpression	'='		2690172	1					
ANR	2690248	OrExpression	( i % 4 ) == 1 || ( strict && length > 0 )		2690172	1		||			
ANR	2690249	EqualityExpression	( i % 4 ) == 1		2690172	0		==			
ANR	2690250	MultiplicativeExpression	i % 4		2690172	0		%			
ANR	2690251	Identifier	i		2690172	0					
ANR	2690252	PrimaryExpression	4		2690172	1					
ANR	2690253	PrimaryExpression	1		2690172	1					
ANR	2690254	AndExpression	strict && length > 0		2690172	1		&&			
ANR	2690255	Identifier	strict		2690172	0					
ANR	2690256	RelationalExpression	length > 0		2690172	1		>			
ANR	2690257	Identifier	length		2690172	0					
ANR	2690258	PrimaryExpression	0		2690172	1					
ANR	2690259	CompoundStatement		12:68:376:376	2690172	1					
ANR	2690260	IfStatement	if ( ( i % 4 ) != 1 )		2690172	0					
ANR	2690261	Condition	( i % 4 ) != 1	149:8:5468:5479	2690172	0	True				
ANR	2690262	EqualityExpression	( i % 4 ) != 1		2690172	0		!=			
ANR	2690263	MultiplicativeExpression	i % 4		2690172	0		%			
ANR	2690264	Identifier	i		2690172	0					
ANR	2690265	PrimaryExpression	4		2690172	1					
ANR	2690266	PrimaryExpression	1		2690172	1					
ANR	2690267	CompoundStatement		13:22:400:400	2690172	1					
ANR	2690268	WhileStatement	while ( isspace ( * ( ++ current ) ) )		2690172	0					
ANR	2690269	Condition	isspace ( * ( ++ current ) )	150:12:5496:5516	2690172	0	True				
ANR	2690270	CallExpression	isspace ( * ( ++ current ) )		2690172	0					
ANR	2690271	Callee	isspace		2690172	0					
ANR	2690272	Identifier	isspace		2690172	0					
ANR	2690273	ArgumentList	* ( ++ current )		2690172	1					
ANR	2690274	Argument	* ( ++ current )		2690172	0					
ANR	2690275	UnaryOperationExpression	* ( ++ current )		2690172	0					
ANR	2690276	UnaryOperator	*		2690172	0					
ANR	2690277	UnaryExpression	++ current		2690172	1					
ANR	2690278	IncDec	++		2690172	0					
ANR	2690279	Identifier	current		2690172	1					
ANR	2690280	CompoundStatement		14:35:437:437	2690172	1					
ANR	2690281	ContinueStatement	continue ;	151:6:5527:5535	2690172	0	True				
ANR	2690282	IfStatement	if ( * current == '\\0' )		2690172	1					
ANR	2690283	Condition	* current == '\\0'	153:9:5553:5568	2690172	0	True				
ANR	2690284	EqualityExpression	* current == '\\0'		2690172	0		==			
ANR	2690285	UnaryOperationExpression	* current		2690172	0					
ANR	2690286	UnaryOperator	*		2690172	0					
ANR	2690287	Identifier	current		2690172	1					
ANR	2690288	PrimaryExpression	'\\0'		2690172	1					
ANR	2690289	CompoundStatement		17:27:489:489	2690172	1					
ANR	2690290	ContinueStatement	continue ;	154:6:5579:5587	2690172	0	True				
ANR	2690291	ExpressionStatement	zend_string_free ( result )	157:4:5606:5630	2690172	1	True				
ANR	2690292	CallExpression	zend_string_free ( result )		2690172	0					
ANR	2690293	Callee	zend_string_free		2690172	0					
ANR	2690294	Identifier	zend_string_free		2690172	0					
ANR	2690295	ArgumentList	result		2690172	1					
ANR	2690296	Argument	result		2690172	0					
ANR	2690297	Identifier	result		2690172	0					
ANR	2690298	ReturnStatement	return NULL ;	158:4:5636:5647	2690172	2	True				
ANR	2690299	Identifier	NULL		2690172	0					
ANR	2690300	ContinueStatement	continue ;	160:3:5657:5665	2690172	1	True				
ANR	2690301	ExpressionStatement	ch = base64_reverse_table [ ch ]	163:2:5674:5703	2690172	1	True				
ANR	2690302	AssignmentExpression	ch = base64_reverse_table [ ch ]		2690172	0		=			
ANR	2690303	Identifier	ch		2690172	0					
ANR	2690304	ArrayIndexing	base64_reverse_table [ ch ]		2690172	1					
ANR	2690305	Identifier	base64_reverse_table		2690172	0					
ANR	2690306	Identifier	ch		2690172	1					
ANR	2690307	IfStatement	if ( ( ! strict && ch < 0 ) || ch == - 1 )		2690172	2					
ANR	2690308	Condition	( ! strict && ch < 0 ) || ch == - 1	164:6:5711:5741	2690172	0	True				
ANR	2690309	OrExpression	( ! strict && ch < 0 ) || ch == - 1		2690172	0		||			
ANR	2690310	AndExpression	! strict && ch < 0		2690172	0		&&			
ANR	2690311	UnaryOperationExpression	! strict		2690172	0					
ANR	2690312	UnaryOperator	!		2690172	0					
ANR	2690313	Identifier	strict		2690172	1					
ANR	2690314	RelationalExpression	ch < 0		2690172	1		<			
ANR	2690315	Identifier	ch		2690172	0					
ANR	2690316	PrimaryExpression	0		2690172	1					
ANR	2690317	EqualityExpression	ch == - 1		2690172	1		==			
ANR	2690318	Identifier	ch		2690172	0					
ANR	2690319	UnaryOperationExpression	- 1		2690172	1					
ANR	2690320	UnaryOperator	-		2690172	0					
ANR	2690321	PrimaryExpression	1		2690172	1					
ANR	2690322	CompoundStatement		28:39:662:662	2690172	1					
ANR	2690323	ContinueStatement	continue ;	165:3:5818:5826	2690172	0	True				
ANR	2690324	ElseStatement	else		2690172	0					
ANR	2690325	IfStatement	if ( ch == - 2 )		2690172	0					
ANR	2690326	Condition	ch == - 2	166:13:5841:5848	2690172	0	True				
ANR	2690327	EqualityExpression	ch == - 2		2690172	0		==			
ANR	2690328	Identifier	ch		2690172	0					
ANR	2690329	UnaryOperationExpression	- 2		2690172	1					
ANR	2690330	UnaryOperator	-		2690172	0					
ANR	2690331	PrimaryExpression	2		2690172	1					
ANR	2690332	CompoundStatement		30:23:769:769	2690172	1					
ANR	2690333	ExpressionStatement	zend_string_free ( result )	167:3:5856:5880	2690172	0	True				
ANR	2690334	CallExpression	zend_string_free ( result )		2690172	0					
ANR	2690335	Callee	zend_string_free		2690172	0					
ANR	2690336	Identifier	zend_string_free		2690172	0					
ANR	2690337	ArgumentList	result		2690172	1					
ANR	2690338	Argument	result		2690172	0					
ANR	2690339	Identifier	result		2690172	0					
ANR	2690340	ReturnStatement	return NULL ;	168:3:5885:5896	2690172	1	True				
ANR	2690341	Identifier	NULL		2690172	0					
ANR	2690342	SwitchStatement	switch ( i % 4 )		2690172	3					
ANR	2690343	Condition	i % 4	171:9:5912:5916	2690172	0	True				
ANR	2690344	MultiplicativeExpression	i % 4		2690172	0		%			
ANR	2690345	Identifier	i		2690172	0					
ANR	2690346	PrimaryExpression	4		2690172	1					
ANR	2690347	CompoundStatement		35:16:837:837	2690172	1					
ANR	2690348	Label	case 0 :	172:2:5923:5929	2690172	0	True				
ANR	2690349	ExpressionStatement	ZSTR_VAL ( result ) [ j ] = ch << 2	173:3:5934:5963	2690172	1	True				
ANR	2690350	AssignmentExpression	ZSTR_VAL ( result ) [ j ] = ch << 2		2690172	0		=			
ANR	2690351	ArrayIndexing	ZSTR_VAL ( result ) [ j ]		2690172	0					
ANR	2690352	CallExpression	ZSTR_VAL ( result )		2690172	0					
ANR	2690353	Callee	ZSTR_VAL		2690172	0					
ANR	2690354	Identifier	ZSTR_VAL		2690172	0					
ANR	2690355	ArgumentList	result		2690172	1					
ANR	2690356	Argument	result		2690172	0					
ANR	2690357	Identifier	result		2690172	0					
ANR	2690358	Identifier	j		2690172	1					
ANR	2690359	ShiftExpression	ch << 2		2690172	1		<<			
ANR	2690360	Identifier	ch		2690172	0					
ANR	2690361	PrimaryExpression	2		2690172	1					
ANR	2690362	BreakStatement	break ;	174:3:5968:5973	2690172	2	True				
ANR	2690363	Label	case 1 :	175:2:5977:5983	2690172	3	True				
ANR	2690364	ExpressionStatement	ZSTR_VAL ( result ) [ j ++ ] |= ch >> 4	176:3:5988:6020	2690172	4	True				
ANR	2690365	AssignmentExpression	ZSTR_VAL ( result ) [ j ++ ] |= ch >> 4		2690172	0		|=			
ANR	2690366	ArrayIndexing	ZSTR_VAL ( result ) [ j ++ ]		2690172	0					
ANR	2690367	CallExpression	ZSTR_VAL ( result )		2690172	0					
ANR	2690368	Callee	ZSTR_VAL		2690172	0					
ANR	2690369	Identifier	ZSTR_VAL		2690172	0					
ANR	2690370	ArgumentList	result		2690172	1					
ANR	2690371	Argument	result		2690172	0					
ANR	2690372	Identifier	result		2690172	0					
ANR	2690373	PostIncDecOperationExpression	j ++		2690172	1					
ANR	2690374	Identifier	j		2690172	0					
ANR	2690375	IncDec	++		2690172	1					
ANR	2690376	ShiftExpression	ch >> 4		2690172	1		>>			
ANR	2690377	Identifier	ch		2690172	0					
ANR	2690378	PrimaryExpression	4		2690172	1					
ANR	2690379	ExpressionStatement	ZSTR_VAL ( result ) [ j ] = ( ch & 0x0f ) << 4	177:3:6025:6063	2690172	5	True				
ANR	2690380	AssignmentExpression	ZSTR_VAL ( result ) [ j ] = ( ch & 0x0f ) << 4		2690172	0		=			
ANR	2690381	ArrayIndexing	ZSTR_VAL ( result ) [ j ]		2690172	0					
ANR	2690382	CallExpression	ZSTR_VAL ( result )		2690172	0					
ANR	2690383	Callee	ZSTR_VAL		2690172	0					
ANR	2690384	Identifier	ZSTR_VAL		2690172	0					
ANR	2690385	ArgumentList	result		2690172	1					
ANR	2690386	Argument	result		2690172	0					
ANR	2690387	Identifier	result		2690172	0					
ANR	2690388	Identifier	j		2690172	1					
ANR	2690389	ShiftExpression	( ch & 0x0f ) << 4		2690172	1		<<			
ANR	2690390	BitAndExpression	ch & 0x0f		2690172	0		&			
ANR	2690391	Identifier	ch		2690172	0					
ANR	2690392	PrimaryExpression	0x0f		2690172	1					
ANR	2690393	PrimaryExpression	4		2690172	1					
ANR	2690394	BreakStatement	break ;	178:3:6068:6073	2690172	6	True				
ANR	2690395	Label	case 2 :	179:2:6077:6083	2690172	7	True				
ANR	2690396	ExpressionStatement	ZSTR_VAL ( result ) [ j ++ ] |= ch >> 2	180:3:6088:6119	2690172	8	True				
ANR	2690397	AssignmentExpression	ZSTR_VAL ( result ) [ j ++ ] |= ch >> 2		2690172	0		|=			
ANR	2690398	ArrayIndexing	ZSTR_VAL ( result ) [ j ++ ]		2690172	0					
ANR	2690399	CallExpression	ZSTR_VAL ( result )		2690172	0					
ANR	2690400	Callee	ZSTR_VAL		2690172	0					
ANR	2690401	Identifier	ZSTR_VAL		2690172	0					
ANR	2690402	ArgumentList	result		2690172	1					
ANR	2690403	Argument	result		2690172	0					
ANR	2690404	Identifier	result		2690172	0					
ANR	2690405	PostIncDecOperationExpression	j ++		2690172	1					
ANR	2690406	Identifier	j		2690172	0					
ANR	2690407	IncDec	++		2690172	1					
ANR	2690408	ShiftExpression	ch >> 2		2690172	1		>>			
ANR	2690409	Identifier	ch		2690172	0					
ANR	2690410	PrimaryExpression	2		2690172	1					
ANR	2690411	ExpressionStatement	ZSTR_VAL ( result ) [ j ] = ( ch & 0x03 ) << 6	181:3:6124:6162	2690172	9	True				
ANR	2690412	AssignmentExpression	ZSTR_VAL ( result ) [ j ] = ( ch & 0x03 ) << 6		2690172	0		=			
ANR	2690413	ArrayIndexing	ZSTR_VAL ( result ) [ j ]		2690172	0					
ANR	2690414	CallExpression	ZSTR_VAL ( result )		2690172	0					
ANR	2690415	Callee	ZSTR_VAL		2690172	0					
ANR	2690416	Identifier	ZSTR_VAL		2690172	0					
ANR	2690417	ArgumentList	result		2690172	1					
ANR	2690418	Argument	result		2690172	0					
ANR	2690419	Identifier	result		2690172	0					
ANR	2690420	Identifier	j		2690172	1					
ANR	2690421	ShiftExpression	( ch & 0x03 ) << 6		2690172	1		<<			
ANR	2690422	BitAndExpression	ch & 0x03		2690172	0		&			
ANR	2690423	Identifier	ch		2690172	0					
ANR	2690424	PrimaryExpression	0x03		2690172	1					
ANR	2690425	PrimaryExpression	6		2690172	1					
ANR	2690426	BreakStatement	break ;	182:3:6167:6172	2690172	10	True				
ANR	2690427	Label	case 3 :	183:2:6176:6182	2690172	11	True				
ANR	2690428	ExpressionStatement	ZSTR_VAL ( result ) [ j ++ ] |= ch	184:3:6187:6214	2690172	12	True				
ANR	2690429	AssignmentExpression	ZSTR_VAL ( result ) [ j ++ ] |= ch		2690172	0		|=			
ANR	2690430	ArrayIndexing	ZSTR_VAL ( result ) [ j ++ ]		2690172	0					
ANR	2690431	CallExpression	ZSTR_VAL ( result )		2690172	0					
ANR	2690432	Callee	ZSTR_VAL		2690172	0					
ANR	2690433	Identifier	ZSTR_VAL		2690172	0					
ANR	2690434	ArgumentList	result		2690172	1					
ANR	2690435	Argument	result		2690172	0					
ANR	2690436	Identifier	result		2690172	0					
ANR	2690437	PostIncDecOperationExpression	j ++		2690172	1					
ANR	2690438	Identifier	j		2690172	0					
ANR	2690439	IncDec	++		2690172	1					
ANR	2690440	Identifier	ch		2690172	1					
ANR	2690441	BreakStatement	break ;	185:3:6219:6224	2690172	13	True				
ANR	2690442	ExpressionStatement	i ++	187:2:6232:6235	2690172	4	True				
ANR	2690443	PostIncDecOperationExpression	i ++		2690172	0					
ANR	2690444	Identifier	i		2690172	0					
ANR	2690445	IncDec	++		2690172	1					
ANR	2690446	ExpressionStatement	k = j	190:1:6242:6247	2690172	5	True				
ANR	2690447	AssignmentExpression	k = j		2690172	0		=			
ANR	2690448	Identifier	k		2690172	0					
ANR	2690449	Identifier	j		2690172	1					
ANR	2690450	IfStatement	if ( ch == base64_pad )		2690172	6					
ANR	2690451	Condition	ch == base64_pad	192:5:6301:6316	2690172	0	True				
ANR	2690452	EqualityExpression	ch == base64_pad		2690172	0		==			
ANR	2690453	Identifier	ch		2690172	0					
ANR	2690454	Identifier	base64_pad		2690172	1					
ANR	2690455	CompoundStatement		56:23:1237:1237	2690172	1					
ANR	2690456	SwitchStatement	switch ( i % 4 )		2690172	0					
ANR	2690457	Condition	i % 4	193:9:6330:6334	2690172	0	True				
ANR	2690458	MultiplicativeExpression	i % 4		2690172	0		%			
ANR	2690459	Identifier	i		2690172	0					
ANR	2690460	PrimaryExpression	4		2690172	1					
ANR	2690461	CompoundStatement		57:16:1255:1255	2690172	1					
ANR	2690462	Label	case 1 :	194:2:6341:6347	2690172	0	True				
ANR	2690463	ExpressionStatement	zend_string_free ( result )	195:3:6352:6376	2690172	1	True				
ANR	2690464	CallExpression	zend_string_free ( result )		2690172	0					
ANR	2690465	Callee	zend_string_free		2690172	0					
ANR	2690466	Identifier	zend_string_free		2690172	0					
ANR	2690467	ArgumentList	result		2690172	1					
ANR	2690468	Argument	result		2690172	0					
ANR	2690469	Identifier	result		2690172	0					
ANR	2690470	ReturnStatement	return NULL ;	196:3:6381:6392	2690172	2	True				
ANR	2690471	Identifier	NULL		2690172	0					
ANR	2690472	Label	case 2 :	197:2:6396:6402	2690172	3	True				
ANR	2690473	ExpressionStatement	k ++	198:3:6407:6410	2690172	4	True				
ANR	2690474	PostIncDecOperationExpression	k ++		2690172	0					
ANR	2690475	Identifier	k		2690172	0					
ANR	2690476	IncDec	++		2690172	1					
ANR	2690477	Label	case 3 :	199:2:6414:6420	2690172	5	True				
ANR	2690478	ExpressionStatement	ZSTR_VAL ( result ) [ k ] = 0	200:3:6425:6448	2690172	6	True				
ANR	2690479	AssignmentExpression	ZSTR_VAL ( result ) [ k ] = 0		2690172	0		=			
ANR	2690480	ArrayIndexing	ZSTR_VAL ( result ) [ k ]		2690172	0					
ANR	2690481	CallExpression	ZSTR_VAL ( result )		2690172	0					
ANR	2690482	Callee	ZSTR_VAL		2690172	0					
ANR	2690483	Identifier	ZSTR_VAL		2690172	0					
ANR	2690484	ArgumentList	result		2690172	1					
ANR	2690485	Argument	result		2690172	0					
ANR	2690486	Identifier	result		2690172	0					
ANR	2690487	Identifier	k		2690172	1					
ANR	2690488	PrimaryExpression	0		2690172	1					
ANR	2690489	ExpressionStatement	ZSTR_LEN ( result ) = j	203:1:6458:6478	2690172	7	True				
ANR	2690490	AssignmentExpression	ZSTR_LEN ( result ) = j		2690172	0		=			
ANR	2690491	CallExpression	ZSTR_LEN ( result )		2690172	0					
ANR	2690492	Callee	ZSTR_LEN		2690172	0					
ANR	2690493	Identifier	ZSTR_LEN		2690172	0					
ANR	2690494	ArgumentList	result		2690172	1					
ANR	2690495	Argument	result		2690172	0					
ANR	2690496	Identifier	result		2690172	0					
ANR	2690497	Identifier	j		2690172	1					
ANR	2690498	ExpressionStatement	ZSTR_VAL ( result ) [ ZSTR_LEN ( result ) ] = '\\0'	204:1:6481:6522	2690172	8	True				
ANR	2690499	AssignmentExpression	ZSTR_VAL ( result ) [ ZSTR_LEN ( result ) ] = '\\0'		2690172	0		=			
ANR	2690500	ArrayIndexing	ZSTR_VAL ( result ) [ ZSTR_LEN ( result ) ]		2690172	0					
ANR	2690501	CallExpression	ZSTR_VAL ( result )		2690172	0					
ANR	2690502	Callee	ZSTR_VAL		2690172	0					
ANR	2690503	Identifier	ZSTR_VAL		2690172	0					
ANR	2690504	ArgumentList	result		2690172	1					
ANR	2690505	Argument	result		2690172	0					
ANR	2690506	Identifier	result		2690172	0					
ANR	2690507	CallExpression	ZSTR_LEN ( result )		2690172	1					
ANR	2690508	Callee	ZSTR_LEN		2690172	0					
ANR	2690509	Identifier	ZSTR_LEN		2690172	0					
ANR	2690510	ArgumentList	result		2690172	1					
ANR	2690511	Argument	result		2690172	0					
ANR	2690512	Identifier	result		2690172	0					
ANR	2690513	PrimaryExpression	'\\0'		2690172	1					
ANR	2690514	ReturnStatement	return result ;	206:1:6526:6539	2690172	9	True				
ANR	2690515	Identifier	result		2690172	0					
ANR	2690516	ReturnType	PHPAPI zend_string *		2690172	1					
ANR	2690517	Identifier	php_base64_decode_ex		2690172	2					
ANR	2690518	ParameterList	"const unsigned char * str , size_t length , zend_bool strict"		2690172	3					
ANR	2690519	Parameter	const unsigned char * str	136:41:5012:5035	2690172	0	True				
ANR	2690520	ParameterType	const unsigned char *		2690172	0					
ANR	2690521	Identifier	str		2690172	1					
ANR	2690522	Parameter	size_t length	136:67:5038:5050	2690172	1	True				
ANR	2690523	ParameterType	size_t		2690172	0					
ANR	2690524	Identifier	length		2690172	1					
ANR	2690525	Parameter	zend_bool strict	136:82:5053:5068	2690172	2	True				
ANR	2690526	ParameterType	zend_bool		2690172	0					
ANR	2690527	Identifier	strict		2690172	1					
ANR	2690528	CFGEntryNode	ENTRY		2690172		True				
ANR	2690529	CFGExitNode	EXIT		2690172		True				
ANR	2690530	Symbol	* current		2690172						
ANR	2690531	Symbol	* ch		2690172						
ANR	2690532	Symbol	* base64_reverse_table		2690172						
ANR	2690533	Symbol	* current ++		2690172						
ANR	2690534	Symbol	result		2690172						
ANR	2690535	Symbol	current		2690172						
ANR	2690536	Symbol	* ZSTR_LEN		2690172						
ANR	2690537	Symbol	base64_pad		2690172						
ANR	2690538	Symbol	strict		2690172						
ANR	2690539	Symbol	* ZSTR_VAL		2690172						
ANR	2690540	Symbol	zend_string_alloc		2690172						
ANR	2690541	Symbol	NULL		2690172						
ANR	2690542	Symbol	ch		2690172						
ANR	2690543	Symbol	length		2690172						
ANR	2690544	Symbol	isspace		2690172						
ANR	2690545	Symbol	i		2690172						
ANR	2690546	Symbol	j		2690172						
ANR	2690547	Symbol	k		2690172						
ANR	2690548	Symbol	base64_reverse_table		2690172						
ANR	2690549	Symbol	ZSTR_VAL		2690172						
ANR	2690550	Symbol	str		2690172						
ANR	2690551	Symbol	* j		2690172						
ANR	2690552	Symbol	* ( ++ current )		2690172						
ANR	2690553	Symbol	* k		2690172						
ANR	2690554	Symbol	ZSTR_LEN		2690172						
ANR	2690555	DeclStmt									
ANR	2690556	Decl							char	char *	str
ANR	2690557	DeclStmt									
ANR	2690558	Decl							size_t	size_t	str_len
ANR	2690559	DeclStmt									
ANR	2690560	Decl							zend_string	zend_string *	result
ANR	2690561	DeclStmt									
ANR	2690562	Decl							char	char *	str
ANR	2690563	DeclStmt									
ANR	2690564	Decl							zend_bool	zend_bool	strict
ANR	2690565	DeclStmt									
ANR	2690566	Decl							size_t	size_t	str_len
ANR	2690567	DeclStmt									
ANR	2690568	Decl							zend_string	zend_string *	result
