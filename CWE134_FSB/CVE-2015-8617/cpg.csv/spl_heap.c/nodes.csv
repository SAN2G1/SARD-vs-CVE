command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3757631	File	data/converged/CVE-2015-8617_php-src/spl_heap.c								
ANR	3757632	DeclStmt									
ANR	3757633	Decl							zend_object_handlers	zend_object_handlers	spl_handler_SplHeap
ANR	3757634	DeclStmt									
ANR	3757635	Decl							zend_object_handlers	zend_object_handlers	spl_handler_SplPriorityQueue
ANR	3757636	DeclStmt									
ANR	3757637	Decl							PHPAPI zend_class_entry	PHPAPI zend_class_entry *	spl_ce_SplHeap
ANR	3757638	DeclStmt									
ANR	3757639	Decl							PHPAPI zend_class_entry	PHPAPI zend_class_entry *	spl_ce_SplMaxHeap
ANR	3757640	DeclStmt									
ANR	3757641	Decl							PHPAPI zend_class_entry	PHPAPI zend_class_entry *	spl_ce_SplMinHeap
ANR	3757642	DeclStmt									
ANR	3757643	Decl							PHPAPI zend_class_entry	PHPAPI zend_class_entry *	spl_ce_SplPriorityQueue
ANR	3757644	DeclStmt									
ANR	3757645	Decl							void ( * ) ( zval * )	void ( * ) ( zval * )	spl_ptr_heap_dtor_func
ANR	3757646	DeclStmt									
ANR	3757647	Decl							void ( * ) ( zval * )	void ( * ) ( zval * )	spl_ptr_heap_ctor_func
ANR	3757648	DeclStmt									
ANR	3757649	Decl							"int ( * ) ( zval * , zval * , zval * )"	"int ( * ) ( zval * , zval * , zval * )"	spl_ptr_heap_cmp_func
ANR	3757650	ClassDef	_spl_ptr_heap	57:8:2108:2372							
ANR	3757651	DeclStmt									
ANR	3757652	Decl							zval	zval *	elements
ANR	3757653	DeclStmt									
ANR	3757654	Decl							spl_ptr_heap_ctor_func	spl_ptr_heap_ctor_func	ctor
ANR	3757655	DeclStmt									
ANR	3757656	Decl							spl_ptr_heap_dtor_func	spl_ptr_heap_dtor_func	dtor
ANR	3757657	DeclStmt									
ANR	3757658	Decl							spl_ptr_heap_cmp_func	spl_ptr_heap_cmp_func	cmp
ANR	3757659	DeclStmt									
ANR	3757660	Decl							int	int	count
ANR	3757661	DeclStmt									
ANR	3757662	Decl							int	int	max_size
ANR	3757663	DeclStmt									
ANR	3757664	Decl							int	int	flags
ANR	3757665	DeclStmt									
ANR	3757666	Decl							_spl_ptr_heap	_spl_ptr_heap	spl_ptr_heap
ANR	3757667	DeclStmt									
ANR	3757668	Decl							struct _spl_heap_object	struct _spl_heap_object	spl_heap_object
ANR	3757669	DeclStmt									
ANR	3757670	Decl							struct _spl_heap_it	struct _spl_heap_it	spl_heap_it
ANR	3757671	ClassDef	_spl_heap_object	70:0:2466:2675							
ANR	3757672	DeclStmt									
ANR	3757673	Decl							spl_ptr_heap	spl_ptr_heap *	heap
ANR	3757674	DeclStmt									
ANR	3757675	Decl							int	int	flags
ANR	3757676	DeclStmt									
ANR	3757677	Decl							zend_class_entry	zend_class_entry *	ce_get_iterator
ANR	3757678	DeclStmt									
ANR	3757679	Decl							zend_function	zend_function *	fptr_cmp
ANR	3757680	DeclStmt									
ANR	3757681	Decl							zend_function	zend_function *	fptr_count
ANR	3757682	DeclStmt									
ANR	3757683	Decl							zend_object	zend_object	std
ANR	3757684	ClassDef	_spl_heap_it	80:0:2725:2804							
ANR	3757685	DeclStmt									
ANR	3757686	Decl							zend_user_iterator	zend_user_iterator	intern
ANR	3757687	DeclStmt									
ANR	3757688	Decl							int	int	flags
ANR	3757689	Function	spl_heap_from_obj	85:0:2808:2964							
ANR	3757690	FunctionDef	spl_heap_from_obj (zend_object * obj)		3757689	0					
ANR	3757691	CompoundStatement		85:77:2885:2964	3757689	0					
ANR	3757692	ReturnStatement	"return ( spl_heap_object * ) ( ( char * ) ( obj ) - XtOffsetOf ( spl_heap_object , std ) ) ;"	86:1:2888:2962	3757689	0	True				
ANR	3757693	CastExpression	"( spl_heap_object * ) ( ( char * ) ( obj ) - XtOffsetOf ( spl_heap_object , std ) )"		3757689	0					
ANR	3757694	CastTarget	spl_heap_object *		3757689	0					
ANR	3757695	CastExpression	"( char * ) ( obj ) - XtOffsetOf ( spl_heap_object , std )"		3757689	1					
ANR	3757696	CastTarget	char *		3757689	0					
ANR	3757697	CastExpression	"( obj ) - XtOffsetOf ( spl_heap_object , std )"		3757689	1					
ANR	3757698	CastTarget	obj		3757689	0					
ANR	3757699	UnaryOperationExpression	"- XtOffsetOf ( spl_heap_object , std )"		3757689	1					
ANR	3757700	UnaryOperator	-		3757689	0					
ANR	3757701	CallExpression	"XtOffsetOf ( spl_heap_object , std )"		3757689	1					
ANR	3757702	Callee	XtOffsetOf		3757689	0					
ANR	3757703	Identifier	XtOffsetOf		3757689	0					
ANR	3757704	ArgumentList	spl_heap_object		3757689	1					
ANR	3757705	Argument	spl_heap_object		3757689	0					
ANR	3757706	Identifier	spl_heap_object		3757689	0					
ANR	3757707	Argument	std		3757689	1					
ANR	3757708	Identifier	std		3757689	0					
ANR	3757709	ReturnType	static inline spl_heap_object *		3757689	1					
ANR	3757710	Identifier	spl_heap_from_obj		3757689	2					
ANR	3757711	ParameterList	zend_object * obj		3757689	3					
ANR	3757712	Parameter	zend_object * obj	85:49:2857:2872	3757689	0	True				
ANR	3757713	ParameterType	zend_object *		3757689	0					
ANR	3757714	Identifier	obj		3757689	1					
ANR	3757715	CFGEntryNode	ENTRY		3757689		True				
ANR	3757716	CFGExitNode	EXIT		3757689		True				
ANR	3757717	Symbol	std		3757689						
ANR	3757718	Symbol	spl_heap_object		3757689						
ANR	3757719	Symbol	obj		3757689						
ANR	3757720	Symbol	XtOffsetOf		3757689						
ANR	3757721	Function	spl_ptr_heap_zval_dtor	92:0:3036:3148							
ANR	3757722	FunctionDef	spl_ptr_heap_zval_dtor (zval * elem)		3757721	0					
ANR	3757723	CompoundStatement		92:47:3083:3148	3757721	0					
ANR	3757724	IfStatement	if ( ! Z_ISUNDEF_P ( elem ) )		3757721	0					
ANR	3757725	Condition	! Z_ISUNDEF_P ( elem )	93:5:3100:3117	3757721	0	True				
ANR	3757726	UnaryOperationExpression	! Z_ISUNDEF_P ( elem )		3757721	0					
ANR	3757727	UnaryOperator	!		3757721	0					
ANR	3757728	CallExpression	Z_ISUNDEF_P ( elem )		3757721	1					
ANR	3757729	Callee	Z_ISUNDEF_P		3757721	0					
ANR	3757730	Identifier	Z_ISUNDEF_P		3757721	0					
ANR	3757731	ArgumentList	elem		3757721	1					
ANR	3757732	Argument	elem		3757721	0					
ANR	3757733	Identifier	elem		3757721	0					
ANR	3757734	CompoundStatement		2:25:36:36	3757721	1					
ANR	3757735	ExpressionStatement	zval_ptr_dtor ( elem )	94:2:3124:3143	3757721	0	True				
ANR	3757736	CallExpression	zval_ptr_dtor ( elem )		3757721	0					
ANR	3757737	Callee	zval_ptr_dtor		3757721	0					
ANR	3757738	Identifier	zval_ptr_dtor		3757721	0					
ANR	3757739	ArgumentList	elem		3757721	1					
ANR	3757740	Argument	elem		3757721	0					
ANR	3757741	Identifier	elem		3757721	0					
ANR	3757742	ReturnType	static void		3757721	1					
ANR	3757743	Identifier	spl_ptr_heap_zval_dtor		3757721	2					
ANR	3757744	ParameterList	zval * elem		3757721	3					
ANR	3757745	Parameter	zval * elem	92:35:3071:3080	3757721	0	True				
ANR	3757746	ParameterType	zval *		3757721	0					
ANR	3757747	Identifier	elem		3757721	1					
ANR	3757748	CFGEntryNode	ENTRY		3757721		True				
ANR	3757749	CFGExitNode	EXIT		3757721		True				
ANR	3757750	Symbol	elem		3757721						
ANR	3757751	Symbol	Z_ISUNDEF_P		3757721						
ANR	3757752	Function	spl_ptr_heap_zval_ctor	99:0:3161:3272							
ANR	3757753	FunctionDef	spl_ptr_heap_zval_ctor (zval * elem)		3757752	0					
ANR	3757754	CompoundStatement		99:47:3208:3272	3757752	0					
ANR	3757755	IfStatement	if ( Z_REFCOUNTED_P ( elem ) )		3757752	0					
ANR	3757756	Condition	Z_REFCOUNTED_P ( elem )	100:5:3225:3244	3757752	0	True				
ANR	3757757	CallExpression	Z_REFCOUNTED_P ( elem )		3757752	0					
ANR	3757758	Callee	Z_REFCOUNTED_P		3757752	0					
ANR	3757759	Identifier	Z_REFCOUNTED_P		3757752	0					
ANR	3757760	ArgumentList	elem		3757752	1					
ANR	3757761	Argument	elem		3757752	0					
ANR	3757762	Identifier	elem		3757752	0					
ANR	3757763	CompoundStatement		2:27:38:38	3757752	1					
ANR	3757764	ExpressionStatement	Z_ADDREF_P ( elem )	101:2:3251:3267	3757752	0	True				
ANR	3757765	CallExpression	Z_ADDREF_P ( elem )		3757752	0					
ANR	3757766	Callee	Z_ADDREF_P		3757752	0					
ANR	3757767	Identifier	Z_ADDREF_P		3757752	0					
ANR	3757768	ArgumentList	elem		3757752	1					
ANR	3757769	Argument	elem		3757752	0					
ANR	3757770	Identifier	elem		3757752	0					
ANR	3757771	ReturnType	static void		3757752	1					
ANR	3757772	Identifier	spl_ptr_heap_zval_ctor		3757752	2					
ANR	3757773	ParameterList	zval * elem		3757752	3					
ANR	3757774	Parameter	zval * elem	99:35:3196:3205	3757752	0	True				
ANR	3757775	ParameterType	zval *		3757752	0					
ANR	3757776	Identifier	elem		3757752	1					
ANR	3757777	CFGEntryNode	ENTRY		3757752		True				
ANR	3757778	CFGExitNode	EXIT		3757752		True				
ANR	3757779	Symbol	elem		3757752						
ANR	3757780	Symbol	Z_REFCOUNTED_P		3757752						
ANR	3757781	Function	spl_ptr_heap_cmp_cb_helper	106:0:3285:3670							
ANR	3757782	FunctionDef	"spl_ptr_heap_cmp_cb_helper (zval * object , spl_heap_object * heap_object , zval * a , zval * b , zend_long * result)"		3757781	0					
ANR	3757783	CompoundStatement		106:119:3404:3670	3757781	0					
ANR	3757784	IdentifierDeclStatement	zval zresult ;	107:1:3417:3429	3757781	0	True				
ANR	3757785	IdentifierDecl	zresult		3757781	0					
ANR	3757786	IdentifierDeclType	zval		3757781	0					
ANR	3757787	Identifier	zresult		3757781	1					
ANR	3757788	ExpressionStatement	"zend_call_method_with_2_params ( object , heap_object -> std . ce , & heap_object -> fptr_cmp , ""compare"" , & zresult , a , b )"	109:1:3433:3543	3757781	1	True				
ANR	3757789	CallExpression	"zend_call_method_with_2_params ( object , heap_object -> std . ce , & heap_object -> fptr_cmp , ""compare"" , & zresult , a , b )"		3757781	0					
ANR	3757790	Callee	zend_call_method_with_2_params		3757781	0					
ANR	3757791	Identifier	zend_call_method_with_2_params		3757781	0					
ANR	3757792	ArgumentList	object		3757781	1					
ANR	3757793	Argument	object		3757781	0					
ANR	3757794	Identifier	object		3757781	0					
ANR	3757795	Argument	heap_object -> std . ce		3757781	1					
ANR	3757796	MemberAccess	heap_object -> std . ce		3757781	0					
ANR	3757797	PtrMemberAccess	heap_object -> std		3757781	0					
ANR	3757798	Identifier	heap_object		3757781	0					
ANR	3757799	Identifier	std		3757781	1					
ANR	3757800	Identifier	ce		3757781	1					
ANR	3757801	Argument	& heap_object -> fptr_cmp		3757781	2					
ANR	3757802	UnaryOperationExpression	& heap_object -> fptr_cmp		3757781	0					
ANR	3757803	UnaryOperator	&		3757781	0					
ANR	3757804	PtrMemberAccess	heap_object -> fptr_cmp		3757781	1					
ANR	3757805	Identifier	heap_object		3757781	0					
ANR	3757806	Identifier	fptr_cmp		3757781	1					
ANR	3757807	Argument	"""compare"""		3757781	3					
ANR	3757808	PrimaryExpression	"""compare"""		3757781	0					
ANR	3757809	Argument	& zresult		3757781	4					
ANR	3757810	UnaryOperationExpression	& zresult		3757781	0					
ANR	3757811	UnaryOperator	&		3757781	0					
ANR	3757812	Identifier	zresult		3757781	1					
ANR	3757813	Argument	a		3757781	5					
ANR	3757814	Identifier	a		3757781	0					
ANR	3757815	Argument	b		3757781	6					
ANR	3757816	Identifier	b		3757781	0					
ANR	3757817	IfStatement	if ( EG ( exception ) )		3757781	2					
ANR	3757818	Condition	EG ( exception )	111:5:3551:3563	3757781	0	True				
ANR	3757819	CallExpression	EG ( exception )		3757781	0					
ANR	3757820	Callee	EG		3757781	0					
ANR	3757821	Identifier	EG		3757781	0					
ANR	3757822	ArgumentList	exception		3757781	1					
ANR	3757823	Argument	exception		3757781	0					
ANR	3757824	Identifier	exception		3757781	0					
ANR	3757825	CompoundStatement		6:20:161:161	3757781	1					
ANR	3757826	ReturnStatement	return FAILURE ;	112:2:3570:3584	3757781	0	True				
ANR	3757827	Identifier	FAILURE		3757781	0					
ANR	3757828	ExpressionStatement	* result = zval_get_long ( & zresult )	115:1:3591:3624	3757781	3	True				
ANR	3757829	AssignmentExpression	* result = zval_get_long ( & zresult )		3757781	0		=			
ANR	3757830	UnaryOperationExpression	* result		3757781	0					
ANR	3757831	UnaryOperator	*		3757781	0					
ANR	3757832	Identifier	result		3757781	1					
ANR	3757833	CallExpression	zval_get_long ( & zresult )		3757781	1					
ANR	3757834	Callee	zval_get_long		3757781	0					
ANR	3757835	Identifier	zval_get_long		3757781	0					
ANR	3757836	ArgumentList	& zresult		3757781	1					
ANR	3757837	Argument	& zresult		3757781	0					
ANR	3757838	UnaryOperationExpression	& zresult		3757781	0					
ANR	3757839	UnaryOperator	&		3757781	0					
ANR	3757840	Identifier	zresult		3757781	1					
ANR	3757841	ExpressionStatement	zval_ptr_dtor ( & zresult )	116:1:3627:3650	3757781	4	True				
ANR	3757842	CallExpression	zval_ptr_dtor ( & zresult )		3757781	0					
ANR	3757843	Callee	zval_ptr_dtor		3757781	0					
ANR	3757844	Identifier	zval_ptr_dtor		3757781	0					
ANR	3757845	ArgumentList	& zresult		3757781	1					
ANR	3757846	Argument	& zresult		3757781	0					
ANR	3757847	UnaryOperationExpression	& zresult		3757781	0					
ANR	3757848	UnaryOperator	&		3757781	0					
ANR	3757849	Identifier	zresult		3757781	1					
ANR	3757850	ReturnStatement	return SUCCESS ;	118:1:3654:3668	3757781	5	True				
ANR	3757851	Identifier	SUCCESS		3757781	0					
ANR	3757852	ReturnType	static int		3757781	1					
ANR	3757853	Identifier	spl_ptr_heap_cmp_cb_helper		3757781	2					
ANR	3757854	ParameterList	"zval * object , spl_heap_object * heap_object , zval * a , zval * b , zend_long * result"		3757781	3					
ANR	3757855	Parameter	zval * object	106:38:3323:3334	3757781	0	True				
ANR	3757856	ParameterType	zval *		3757781	0					
ANR	3757857	Identifier	object		3757781	1					
ANR	3757858	Parameter	spl_heap_object * heap_object	106:52:3337:3364	3757781	1	True				
ANR	3757859	ParameterType	spl_heap_object *		3757781	0					
ANR	3757860	Identifier	heap_object		3757781	1					
ANR	3757861	Parameter	zval * a	106:82:3367:3373	3757781	2	True				
ANR	3757862	ParameterType	zval *		3757781	0					
ANR	3757863	Identifier	a		3757781	1					
ANR	3757864	Parameter	zval * b	106:91:3376:3382	3757781	3	True				
ANR	3757865	ParameterType	zval *		3757781	0					
ANR	3757866	Identifier	b		3757781	1					
ANR	3757867	Parameter	zend_long * result	106:100:3385:3401	3757781	4	True				
ANR	3757868	ParameterType	zend_long *		3757781	0					
ANR	3757869	Identifier	result		3757781	1					
ANR	3757870	CFGEntryNode	ENTRY		3757781		True				
ANR	3757871	CFGExitNode	EXIT		3757781		True				
ANR	3757872	Symbol	exception		3757781						
ANR	3757873	Symbol	a		3757781						
ANR	3757874	Symbol	b		3757781						
ANR	3757875	Symbol	EG		3757781						
ANR	3757876	Symbol	heap_object -> std		3757781						
ANR	3757877	Symbol	SUCCESS		3757781						
ANR	3757878	Symbol	* heap_object		3757781						
ANR	3757879	Symbol	& zresult		3757781						
ANR	3757880	Symbol	& heap_object -> fptr_cmp		3757781						
ANR	3757881	Symbol	heap_object -> std . ce		3757781						
ANR	3757882	Symbol	FAILURE		3757781						
ANR	3757883	Symbol	result		3757781						
ANR	3757884	Symbol	zresult		3757781						
ANR	3757885	Symbol	* result		3757781						
ANR	3757886	Symbol	heap_object		3757781						
ANR	3757887	Symbol	zval_get_long		3757781						
ANR	3757888	Symbol	object		3757781						
ANR	3757889	Function	spl_pqueue_extract_helper	122:0:3683:4264							
ANR	3757890	FunctionDef	"spl_pqueue_extract_helper (zval * value , int flags)"		3757889	0					
ANR	3757891	CompoundStatement		123:0:3756:4264	3757889	0					
ANR	3757892	IfStatement	if ( ( flags & SPL_PQUEUE_EXTR_BOTH ) == SPL_PQUEUE_EXTR_BOTH )		3757889	0					
ANR	3757893	Condition	( flags & SPL_PQUEUE_EXTR_BOTH ) == SPL_PQUEUE_EXTR_BOTH	124:5:3763:3816	3757889	0	True				
ANR	3757894	EqualityExpression	( flags & SPL_PQUEUE_EXTR_BOTH ) == SPL_PQUEUE_EXTR_BOTH		3757889	0		==			
ANR	3757895	BitAndExpression	flags & SPL_PQUEUE_EXTR_BOTH		3757889	0		&			
ANR	3757896	Identifier	flags		3757889	0					
ANR	3757897	Identifier	SPL_PQUEUE_EXTR_BOTH		3757889	1					
ANR	3757898	Identifier	SPL_PQUEUE_EXTR_BOTH		3757889	1					
ANR	3757899	CompoundStatement		2:61:62:62	3757889	1					
ANR	3757900	ReturnStatement	return value ;	125:2:3823:3835	3757889	0	True				
ANR	3757901	Identifier	value		3757889	0					
ANR	3757902	ElseStatement	else		3757889	0					
ANR	3757903	IfStatement	if ( ( flags & SPL_PQUEUE_EXTR_BOTH ) > 0 )		3757889	0					
ANR	3757904	Condition	( flags & SPL_PQUEUE_EXTR_BOTH ) > 0	126:12:3849:3882	3757889	0	True				
ANR	3757905	RelationalExpression	( flags & SPL_PQUEUE_EXTR_BOTH ) > 0		3757889	0		>			
ANR	3757906	BitAndExpression	flags & SPL_PQUEUE_EXTR_BOTH		3757889	0		&			
ANR	3757907	Identifier	flags		3757889	0					
ANR	3757908	Identifier	SPL_PQUEUE_EXTR_BOTH		3757889	1					
ANR	3757909	PrimaryExpression	0		3757889	1					
ANR	3757910	CompoundStatement		4:48:128:128	3757889	1					
ANR	3757911	IfStatement	if ( ( flags & SPL_PQUEUE_EXTR_DATA ) == SPL_PQUEUE_EXTR_DATA )		3757889	0					
ANR	3757912	Condition	( flags & SPL_PQUEUE_EXTR_DATA ) == SPL_PQUEUE_EXTR_DATA	127:6:3893:3946	3757889	0	True				
ANR	3757913	EqualityExpression	( flags & SPL_PQUEUE_EXTR_DATA ) == SPL_PQUEUE_EXTR_DATA		3757889	0		==			
ANR	3757914	BitAndExpression	flags & SPL_PQUEUE_EXTR_DATA		3757889	0		&			
ANR	3757915	Identifier	flags		3757889	0					
ANR	3757916	Identifier	SPL_PQUEUE_EXTR_DATA		3757889	1					
ANR	3757917	Identifier	SPL_PQUEUE_EXTR_DATA		3757889	1					
ANR	3757918	CompoundStatement		6:3:197:207	3757889	1					
ANR	3757919	IdentifierDeclStatement	zval * data ;	128:3:3954:3964	3757889	0	True				
ANR	3757920	IdentifierDecl	* data		3757889	0					
ANR	3757921	IdentifierDeclType	zval *		3757889	0					
ANR	3757922	Identifier	data		3757889	1					
ANR	3757923	IfStatement	"if ( ( data = zend_hash_str_find ( Z_ARRVAL_P ( value ) , ""data"" , sizeof ( ""data"" ) - 1 ) ) != NULL )"		3757889	1					
ANR	3757924	Condition	"( data = zend_hash_str_find ( Z_ARRVAL_P ( value ) , ""data"" , sizeof ( ""data"" ) - 1 ) ) != NULL"	129:7:3973:4054	3757889	0	True				
ANR	3757925	EqualityExpression	"( data = zend_hash_str_find ( Z_ARRVAL_P ( value ) , ""data"" , sizeof ( ""data"" ) - 1 ) ) != NULL"		3757889	0		!=			
ANR	3757926	AssignmentExpression	"data = zend_hash_str_find ( Z_ARRVAL_P ( value ) , ""data"" , sizeof ( ""data"" ) - 1 )"		3757889	0		=			
ANR	3757927	Identifier	data		3757889	0					
ANR	3757928	CallExpression	"zend_hash_str_find ( Z_ARRVAL_P ( value ) , ""data"" , sizeof ( ""data"" ) - 1 )"		3757889	1					
ANR	3757929	Callee	zend_hash_str_find		3757889	0					
ANR	3757930	Identifier	zend_hash_str_find		3757889	0					
ANR	3757931	ArgumentList	Z_ARRVAL_P ( value )		3757889	1					
ANR	3757932	Argument	Z_ARRVAL_P ( value )		3757889	0					
ANR	3757933	CallExpression	Z_ARRVAL_P ( value )		3757889	0					
ANR	3757934	Callee	Z_ARRVAL_P		3757889	0					
ANR	3757935	Identifier	Z_ARRVAL_P		3757889	0					
ANR	3757936	ArgumentList	value		3757889	1					
ANR	3757937	Argument	value		3757889	0					
ANR	3757938	Identifier	value		3757889	0					
ANR	3757939	Argument	"""data"""		3757889	1					
ANR	3757940	PrimaryExpression	"""data"""		3757889	0					
ANR	3757941	Argument	"sizeof ( ""data"" ) - 1"		3757889	2					
ANR	3757942	AdditiveExpression	"sizeof ( ""data"" ) - 1"		3757889	0		-			
ANR	3757943	SizeofExpression	"sizeof ( ""data"" )"		3757889	0					
ANR	3757944	Sizeof	sizeof		3757889	0					
ANR	3757945	PrimaryExpression	"""data"""		3757889	1					
ANR	3757946	PrimaryExpression	1		3757889	1					
ANR	3757947	Identifier	NULL		3757889	1					
ANR	3757948	CompoundStatement		7:91:300:300	3757889	1					
ANR	3757949	ReturnStatement	return data ;	130:4:4063:4074	3757889	0	True				
ANR	3757950	Identifier	data		3757889	0					
ANR	3757951	ElseStatement	else		3757889	0					
ANR	3757952	CompoundStatement		11:3:338:352	3757889	0					
ANR	3757953	IdentifierDeclStatement	zval * priority ;	133:3:4095:4109	3757889	0	True				
ANR	3757954	IdentifierDecl	* priority		3757889	0					
ANR	3757955	IdentifierDeclType	zval *		3757889	0					
ANR	3757956	Identifier	priority		3757889	1					
ANR	3757957	IfStatement	"if ( ( priority = zend_hash_str_find ( Z_ARRVAL_P ( value ) , ""priority"" , sizeof ( ""priority"" ) - 1 ) ) != NULL )"		3757889	1					
ANR	3757958	Condition	"( priority = zend_hash_str_find ( Z_ARRVAL_P ( value ) , ""priority"" , sizeof ( ""priority"" ) - 1 ) ) != NULL"	134:7:4118:4211	3757889	0	True				
ANR	3757959	EqualityExpression	"( priority = zend_hash_str_find ( Z_ARRVAL_P ( value ) , ""priority"" , sizeof ( ""priority"" ) - 1 ) ) != NULL"		3757889	0		!=			
ANR	3757960	AssignmentExpression	"priority = zend_hash_str_find ( Z_ARRVAL_P ( value ) , ""priority"" , sizeof ( ""priority"" ) - 1 )"		3757889	0		=			
ANR	3757961	Identifier	priority		3757889	0					
ANR	3757962	CallExpression	"zend_hash_str_find ( Z_ARRVAL_P ( value ) , ""priority"" , sizeof ( ""priority"" ) - 1 )"		3757889	1					
ANR	3757963	Callee	zend_hash_str_find		3757889	0					
ANR	3757964	Identifier	zend_hash_str_find		3757889	0					
ANR	3757965	ArgumentList	Z_ARRVAL_P ( value )		3757889	1					
ANR	3757966	Argument	Z_ARRVAL_P ( value )		3757889	0					
ANR	3757967	CallExpression	Z_ARRVAL_P ( value )		3757889	0					
ANR	3757968	Callee	Z_ARRVAL_P		3757889	0					
ANR	3757969	Identifier	Z_ARRVAL_P		3757889	0					
ANR	3757970	ArgumentList	value		3757889	1					
ANR	3757971	Argument	value		3757889	0					
ANR	3757972	Identifier	value		3757889	0					
ANR	3757973	Argument	"""priority"""		3757889	1					
ANR	3757974	PrimaryExpression	"""priority"""		3757889	0					
ANR	3757975	Argument	"sizeof ( ""priority"" ) - 1"		3757889	2					
ANR	3757976	AdditiveExpression	"sizeof ( ""priority"" ) - 1"		3757889	0		-			
ANR	3757977	SizeofExpression	"sizeof ( ""priority"" )"		3757889	0					
ANR	3757978	Sizeof	sizeof		3757889	0					
ANR	3757979	PrimaryExpression	"""priority"""		3757889	1					
ANR	3757980	PrimaryExpression	1		3757889	1					
ANR	3757981	Identifier	NULL		3757889	1					
ANR	3757982	CompoundStatement		12:103:457:457	3757889	1					
ANR	3757983	ReturnStatement	return priority ;	135:4:4220:4235	3757889	0	True				
ANR	3757984	Identifier	priority		3757889	0					
ANR	3757985	ReturnStatement	return NULL ;	140:1:4251:4262	3757889	1	True				
ANR	3757986	Identifier	NULL		3757889	0					
ANR	3757987	ReturnType	static zval *		3757889	1					
ANR	3757988	Identifier	spl_pqueue_extract_helper		3757889	2					
ANR	3757989	ParameterList	"zval * value , int flags"		3757889	3					
ANR	3757990	Parameter	zval * value	122:39:3722:3732	3757889	0	True				
ANR	3757991	ParameterType	zval *		3757889	0					
ANR	3757992	Identifier	value		3757889	1					
ANR	3757993	Parameter	int flags	122:52:3735:3743	3757889	1	True				
ANR	3757994	ParameterType	int		3757889	0					
ANR	3757995	Identifier	flags		3757889	1					
ANR	3757996	CFGEntryNode	ENTRY		3757889		True				
ANR	3757997	CFGExitNode	EXIT		3757889		True				
ANR	3757998	Symbol	SPL_PQUEUE_EXTR_BOTH		3757889						
ANR	3757999	Symbol	zend_hash_str_find		3757889						
ANR	3758000	Symbol	NULL		3757889						
ANR	3758001	Symbol	data		3757889						
ANR	3758002	Symbol	flags		3757889						
ANR	3758003	Symbol	Z_ARRVAL_P		3757889						
ANR	3758004	Symbol	priority		3757889						
ANR	3758005	Symbol	value		3757889						
ANR	3758006	Symbol	SPL_PQUEUE_EXTR_DATA		3757889						
ANR	3758007	Function	spl_ptr_heap_zval_max_cmp	144:0:4277:4788							
ANR	3758008	FunctionDef	"spl_ptr_heap_zval_max_cmp (zval * a , zval * b , zval * object)"		3758007	0					
ANR	3758009	CompoundStatement		144:69:4346:4788	3758007	0					
ANR	3758010	IdentifierDeclStatement	zval result ;	145:1:4359:4370	3758007	0	True				
ANR	3758011	IdentifierDecl	result		3758007	0					
ANR	3758012	IdentifierDeclType	zval		3758007	0					
ANR	3758013	Identifier	result		3758007	1					
ANR	3758014	IfStatement	if ( EG ( exception ) )		3758007	1					
ANR	3758015	Condition	EG ( exception )	147:5:4378:4390	3758007	0	True				
ANR	3758016	CallExpression	EG ( exception )		3758007	0					
ANR	3758017	Callee	EG		3758007	0					
ANR	3758018	Identifier	EG		3758007	0					
ANR	3758019	ArgumentList	exception		3758007	1					
ANR	3758020	Argument	exception		3758007	0					
ANR	3758021	Identifier	exception		3758007	0					
ANR	3758022	CompoundStatement		4:20:46:46	3758007	1					
ANR	3758023	ReturnStatement	return 0 ;	148:2:4397:4405	3758007	0	True				
ANR	3758024	PrimaryExpression	0		3758007	0					
ANR	3758025	IfStatement	if ( object )		3758007	2					
ANR	3758026	Condition	object	151:5:4416:4421	3758007	0	True				
ANR	3758027	Identifier	object		3758007	0					
ANR	3758028	CompoundStatement		9:2:81:131	3758007	1					
ANR	3758029	IdentifierDeclStatement	spl_heap_object * heap_object = Z_SPLHEAP_P ( object ) ;	152:2:4428:4478	3758007	0	True				
ANR	3758030	IdentifierDecl	* heap_object = Z_SPLHEAP_P ( object )		3758007	0					
ANR	3758031	IdentifierDeclType	spl_heap_object *		3758007	0					
ANR	3758032	Identifier	heap_object		3758007	1					
ANR	3758033	AssignmentExpression	* heap_object = Z_SPLHEAP_P ( object )		3758007	2		=			
ANR	3758034	Identifier	heap_object		3758007	0					
ANR	3758035	CallExpression	Z_SPLHEAP_P ( object )		3758007	1					
ANR	3758036	Callee	Z_SPLHEAP_P		3758007	0					
ANR	3758037	Identifier	Z_SPLHEAP_P		3758007	0					
ANR	3758038	ArgumentList	object		3758007	1					
ANR	3758039	Argument	object		3758007	0					
ANR	3758040	Identifier	object		3758007	0					
ANR	3758041	IfStatement	if ( heap_object -> fptr_cmp )		3758007	1					
ANR	3758042	Condition	heap_object -> fptr_cmp	153:6:4486:4506	3758007	0	True				
ANR	3758043	PtrMemberAccess	heap_object -> fptr_cmp		3758007	0					
ANR	3758044	Identifier	heap_object		3758007	0					
ANR	3758045	Identifier	fptr_cmp		3758007	1					
ANR	3758046	CompoundStatement		11:3:167:185	3758007	1					
ANR	3758047	IdentifierDeclStatement	zend_long lval = 0 ;	154:3:4514:4532	3758007	0	True				
ANR	3758048	IdentifierDecl	lval = 0		3758007	0					
ANR	3758049	IdentifierDeclType	zend_long		3758007	0					
ANR	3758050	Identifier	lval		3758007	1					
ANR	3758051	AssignmentExpression	lval = 0		3758007	2		=			
ANR	3758052	Identifier	lval		3758007	0					
ANR	3758053	PrimaryExpression	0		3758007	1					
ANR	3758054	IfStatement	"if ( spl_ptr_heap_cmp_cb_helper ( object , heap_object , a , b , & lval ) == FAILURE )"		3758007	1					
ANR	3758055	Condition	"spl_ptr_heap_cmp_cb_helper ( object , heap_object , a , b , & lval ) == FAILURE"	155:7:4541:4611	3758007	0	True				
ANR	3758056	EqualityExpression	"spl_ptr_heap_cmp_cb_helper ( object , heap_object , a , b , & lval ) == FAILURE"		3758007	0		==			
ANR	3758057	CallExpression	"spl_ptr_heap_cmp_cb_helper ( object , heap_object , a , b , & lval )"		3758007	0					
ANR	3758058	Callee	spl_ptr_heap_cmp_cb_helper		3758007	0					
ANR	3758059	Identifier	spl_ptr_heap_cmp_cb_helper		3758007	0					
ANR	3758060	ArgumentList	object		3758007	1					
ANR	3758061	Argument	object		3758007	0					
ANR	3758062	Identifier	object		3758007	0					
ANR	3758063	Argument	heap_object		3758007	1					
ANR	3758064	Identifier	heap_object		3758007	0					
ANR	3758065	Argument	a		3758007	2					
ANR	3758066	Identifier	a		3758007	0					
ANR	3758067	Argument	b		3758007	3					
ANR	3758068	Identifier	b		3758007	0					
ANR	3758069	Argument	& lval		3758007	4					
ANR	3758070	UnaryOperationExpression	& lval		3758007	0					
ANR	3758071	UnaryOperator	&		3758007	0					
ANR	3758072	Identifier	lval		3758007	1					
ANR	3758073	Identifier	FAILURE		3758007	1					
ANR	3758074	CompoundStatement		12:80:267:267	3758007	1					
ANR	3758075	ReturnStatement	return 0 ;	157:4:4656:4664	3758007	0	True				
ANR	3758076	PrimaryExpression	0		3758007	0					
ANR	3758077	ReturnStatement	return lval > 0 ? 1 : ( lval < 0 ? - 1 : 0 ) ;	159:3:4674:4715	3758007	2	True				
ANR	3758078	ConditionalExpression	lval > 0 ? 1 : ( lval < 0 ? - 1 : 0 )		3758007	0					
ANR	3758079	Condition	lval > 0		3758007	0					
ANR	3758080	RelationalExpression	lval > 0		3758007	0		>			
ANR	3758081	Identifier	lval		3758007	0					
ANR	3758082	PrimaryExpression	0		3758007	1					
ANR	3758083	PrimaryExpression	1		3758007	1					
ANR	3758084	ConditionalExpression	lval < 0 ? - 1 : 0		3758007	2					
ANR	3758085	Condition	lval < 0		3758007	0					
ANR	3758086	RelationalExpression	lval < 0		3758007	0		<			
ANR	3758087	Identifier	lval		3758007	0					
ANR	3758088	PrimaryExpression	0		3758007	1					
ANR	3758089	UnaryOperationExpression	- 1		3758007	1					
ANR	3758090	UnaryOperator	-		3758007	0					
ANR	3758091	PrimaryExpression	1		3758007	1					
ANR	3758092	PrimaryExpression	0		3758007	2					
ANR	3758093	ExpressionStatement	"compare_function ( & result , a , b )"	163:1:4726:4757	3758007	3	True				
ANR	3758094	CallExpression	"compare_function ( & result , a , b )"		3758007	0					
ANR	3758095	Callee	compare_function		3758007	0					
ANR	3758096	Identifier	compare_function		3758007	0					
ANR	3758097	ArgumentList	& result		3758007	1					
ANR	3758098	Argument	& result		3758007	0					
ANR	3758099	UnaryOperationExpression	& result		3758007	0					
ANR	3758100	UnaryOperator	&		3758007	0					
ANR	3758101	Identifier	result		3758007	1					
ANR	3758102	Argument	a		3758007	1					
ANR	3758103	Identifier	a		3758007	0					
ANR	3758104	Argument	b		3758007	2					
ANR	3758105	Identifier	b		3758007	0					
ANR	3758106	ReturnStatement	return ( int ) Z_LVAL ( result ) ;	164:1:4760:4786	3758007	4	True				
ANR	3758107	CastExpression	( int ) Z_LVAL ( result )		3758007	0					
ANR	3758108	CastTarget	int		3758007	0					
ANR	3758109	CallExpression	Z_LVAL ( result )		3758007	1					
ANR	3758110	Callee	Z_LVAL		3758007	0					
ANR	3758111	Identifier	Z_LVAL		3758007	0					
ANR	3758112	ArgumentList	result		3758007	1					
ANR	3758113	Argument	result		3758007	0					
ANR	3758114	Identifier	result		3758007	0					
ANR	3758115	ReturnType	static int		3758007	1					
ANR	3758116	Identifier	spl_ptr_heap_zval_max_cmp		3758007	2					
ANR	3758117	ParameterList	"zval * a , zval * b , zval * object"		3758007	3					
ANR	3758118	Parameter	zval * a	144:37:4314:4320	3758007	0	True				
ANR	3758119	ParameterType	zval *		3758007	0					
ANR	3758120	Identifier	a		3758007	1					
ANR	3758121	Parameter	zval * b	144:46:4323:4329	3758007	1	True				
ANR	3758122	ParameterType	zval *		3758007	0					
ANR	3758123	Identifier	b		3758007	1					
ANR	3758124	Parameter	zval * object	144:55:4332:4343	3758007	2	True				
ANR	3758125	ParameterType	zval *		3758007	0					
ANR	3758126	Identifier	object		3758007	1					
ANR	3758127	CFGEntryNode	ENTRY		3758007		True				
ANR	3758128	CFGExitNode	EXIT		3758007		True				
ANR	3758129	Symbol	exception		3758007						
ANR	3758130	Symbol	a		3758007						
ANR	3758131	Symbol	b		3758007						
ANR	3758132	Symbol	EG		3758007						
ANR	3758133	Symbol	& lval		3758007						
ANR	3758134	Symbol	* heap_object		3758007						
ANR	3758135	Symbol	lval		3758007						
ANR	3758136	Symbol	Z_LVAL		3758007						
ANR	3758137	Symbol	FAILURE		3758007						
ANR	3758138	Symbol	heap_object -> fptr_cmp		3758007						
ANR	3758139	Symbol	result		3758007						
ANR	3758140	Symbol	Z_SPLHEAP_P		3758007						
ANR	3758141	Symbol	heap_object		3758007						
ANR	3758142	Symbol	& result		3758007						
ANR	3758143	Symbol	spl_ptr_heap_cmp_cb_helper		3758007						
ANR	3758144	Symbol	object		3758007						
ANR	3758145	Function	spl_ptr_heap_zval_min_cmp	168:0:4801:5312							
ANR	3758146	FunctionDef	"spl_ptr_heap_zval_min_cmp (zval * a , zval * b , zval * object)"		3758145	0					
ANR	3758147	CompoundStatement		168:69:4870:5312	3758145	0					
ANR	3758148	IdentifierDeclStatement	zval result ;	169:1:4883:4894	3758145	0	True				
ANR	3758149	IdentifierDecl	result		3758145	0					
ANR	3758150	IdentifierDeclType	zval		3758145	0					
ANR	3758151	Identifier	result		3758145	1					
ANR	3758152	IfStatement	if ( EG ( exception ) )		3758145	1					
ANR	3758153	Condition	EG ( exception )	171:5:4902:4914	3758145	0	True				
ANR	3758154	CallExpression	EG ( exception )		3758145	0					
ANR	3758155	Callee	EG		3758145	0					
ANR	3758156	Identifier	EG		3758145	0					
ANR	3758157	ArgumentList	exception		3758145	1					
ANR	3758158	Argument	exception		3758145	0					
ANR	3758159	Identifier	exception		3758145	0					
ANR	3758160	CompoundStatement		4:20:46:46	3758145	1					
ANR	3758161	ReturnStatement	return 0 ;	172:2:4921:4929	3758145	0	True				
ANR	3758162	PrimaryExpression	0		3758145	0					
ANR	3758163	IfStatement	if ( object )		3758145	2					
ANR	3758164	Condition	object	175:5:4940:4945	3758145	0	True				
ANR	3758165	Identifier	object		3758145	0					
ANR	3758166	CompoundStatement		9:2:81:131	3758145	1					
ANR	3758167	IdentifierDeclStatement	spl_heap_object * heap_object = Z_SPLHEAP_P ( object ) ;	176:2:4952:5002	3758145	0	True				
ANR	3758168	IdentifierDecl	* heap_object = Z_SPLHEAP_P ( object )		3758145	0					
ANR	3758169	IdentifierDeclType	spl_heap_object *		3758145	0					
ANR	3758170	Identifier	heap_object		3758145	1					
ANR	3758171	AssignmentExpression	* heap_object = Z_SPLHEAP_P ( object )		3758145	2		=			
ANR	3758172	Identifier	heap_object		3758145	0					
ANR	3758173	CallExpression	Z_SPLHEAP_P ( object )		3758145	1					
ANR	3758174	Callee	Z_SPLHEAP_P		3758145	0					
ANR	3758175	Identifier	Z_SPLHEAP_P		3758145	0					
ANR	3758176	ArgumentList	object		3758145	1					
ANR	3758177	Argument	object		3758145	0					
ANR	3758178	Identifier	object		3758145	0					
ANR	3758179	IfStatement	if ( heap_object -> fptr_cmp )		3758145	1					
ANR	3758180	Condition	heap_object -> fptr_cmp	177:6:5010:5030	3758145	0	True				
ANR	3758181	PtrMemberAccess	heap_object -> fptr_cmp		3758145	0					
ANR	3758182	Identifier	heap_object		3758145	0					
ANR	3758183	Identifier	fptr_cmp		3758145	1					
ANR	3758184	CompoundStatement		11:3:167:185	3758145	1					
ANR	3758185	IdentifierDeclStatement	zend_long lval = 0 ;	178:3:5038:5056	3758145	0	True				
ANR	3758186	IdentifierDecl	lval = 0		3758145	0					
ANR	3758187	IdentifierDeclType	zend_long		3758145	0					
ANR	3758188	Identifier	lval		3758145	1					
ANR	3758189	AssignmentExpression	lval = 0		3758145	2		=			
ANR	3758190	Identifier	lval		3758145	0					
ANR	3758191	PrimaryExpression	0		3758145	1					
ANR	3758192	IfStatement	"if ( spl_ptr_heap_cmp_cb_helper ( object , heap_object , a , b , & lval ) == FAILURE )"		3758145	1					
ANR	3758193	Condition	"spl_ptr_heap_cmp_cb_helper ( object , heap_object , a , b , & lval ) == FAILURE"	179:7:5065:5135	3758145	0	True				
ANR	3758194	EqualityExpression	"spl_ptr_heap_cmp_cb_helper ( object , heap_object , a , b , & lval ) == FAILURE"		3758145	0		==			
ANR	3758195	CallExpression	"spl_ptr_heap_cmp_cb_helper ( object , heap_object , a , b , & lval )"		3758145	0					
ANR	3758196	Callee	spl_ptr_heap_cmp_cb_helper		3758145	0					
ANR	3758197	Identifier	spl_ptr_heap_cmp_cb_helper		3758145	0					
ANR	3758198	ArgumentList	object		3758145	1					
ANR	3758199	Argument	object		3758145	0					
ANR	3758200	Identifier	object		3758145	0					
ANR	3758201	Argument	heap_object		3758145	1					
ANR	3758202	Identifier	heap_object		3758145	0					
ANR	3758203	Argument	a		3758145	2					
ANR	3758204	Identifier	a		3758145	0					
ANR	3758205	Argument	b		3758145	3					
ANR	3758206	Identifier	b		3758145	0					
ANR	3758207	Argument	& lval		3758145	4					
ANR	3758208	UnaryOperationExpression	& lval		3758145	0					
ANR	3758209	UnaryOperator	&		3758145	0					
ANR	3758210	Identifier	lval		3758145	1					
ANR	3758211	Identifier	FAILURE		3758145	1					
ANR	3758212	CompoundStatement		12:80:267:267	3758145	1					
ANR	3758213	ReturnStatement	return 0 ;	181:4:5180:5188	3758145	0	True				
ANR	3758214	PrimaryExpression	0		3758145	0					
ANR	3758215	ReturnStatement	return lval > 0 ? 1 : ( lval < 0 ? - 1 : 0 ) ;	183:3:5198:5239	3758145	2	True				
ANR	3758216	ConditionalExpression	lval > 0 ? 1 : ( lval < 0 ? - 1 : 0 )		3758145	0					
ANR	3758217	Condition	lval > 0		3758145	0					
ANR	3758218	RelationalExpression	lval > 0		3758145	0		>			
ANR	3758219	Identifier	lval		3758145	0					
ANR	3758220	PrimaryExpression	0		3758145	1					
ANR	3758221	PrimaryExpression	1		3758145	1					
ANR	3758222	ConditionalExpression	lval < 0 ? - 1 : 0		3758145	2					
ANR	3758223	Condition	lval < 0		3758145	0					
ANR	3758224	RelationalExpression	lval < 0		3758145	0		<			
ANR	3758225	Identifier	lval		3758145	0					
ANR	3758226	PrimaryExpression	0		3758145	1					
ANR	3758227	UnaryOperationExpression	- 1		3758145	1					
ANR	3758228	UnaryOperator	-		3758145	0					
ANR	3758229	PrimaryExpression	1		3758145	1					
ANR	3758230	PrimaryExpression	0		3758145	2					
ANR	3758231	ExpressionStatement	"compare_function ( & result , b , a )"	187:1:5250:5281	3758145	3	True				
ANR	3758232	CallExpression	"compare_function ( & result , b , a )"		3758145	0					
ANR	3758233	Callee	compare_function		3758145	0					
ANR	3758234	Identifier	compare_function		3758145	0					
ANR	3758235	ArgumentList	& result		3758145	1					
ANR	3758236	Argument	& result		3758145	0					
ANR	3758237	UnaryOperationExpression	& result		3758145	0					
ANR	3758238	UnaryOperator	&		3758145	0					
ANR	3758239	Identifier	result		3758145	1					
ANR	3758240	Argument	b		3758145	1					
ANR	3758241	Identifier	b		3758145	0					
ANR	3758242	Argument	a		3758145	2					
ANR	3758243	Identifier	a		3758145	0					
ANR	3758244	ReturnStatement	return ( int ) Z_LVAL ( result ) ;	188:1:5284:5310	3758145	4	True				
ANR	3758245	CastExpression	( int ) Z_LVAL ( result )		3758145	0					
ANR	3758246	CastTarget	int		3758145	0					
ANR	3758247	CallExpression	Z_LVAL ( result )		3758145	1					
ANR	3758248	Callee	Z_LVAL		3758145	0					
ANR	3758249	Identifier	Z_LVAL		3758145	0					
ANR	3758250	ArgumentList	result		3758145	1					
ANR	3758251	Argument	result		3758145	0					
ANR	3758252	Identifier	result		3758145	0					
ANR	3758253	ReturnType	static int		3758145	1					
ANR	3758254	Identifier	spl_ptr_heap_zval_min_cmp		3758145	2					
ANR	3758255	ParameterList	"zval * a , zval * b , zval * object"		3758145	3					
ANR	3758256	Parameter	zval * a	168:37:4838:4844	3758145	0	True				
ANR	3758257	ParameterType	zval *		3758145	0					
ANR	3758258	Identifier	a		3758145	1					
ANR	3758259	Parameter	zval * b	168:46:4847:4853	3758145	1	True				
ANR	3758260	ParameterType	zval *		3758145	0					
ANR	3758261	Identifier	b		3758145	1					
ANR	3758262	Parameter	zval * object	168:55:4856:4867	3758145	2	True				
ANR	3758263	ParameterType	zval *		3758145	0					
ANR	3758264	Identifier	object		3758145	1					
ANR	3758265	CFGEntryNode	ENTRY		3758145		True				
ANR	3758266	CFGExitNode	EXIT		3758145		True				
ANR	3758267	Symbol	exception		3758145						
ANR	3758268	Symbol	a		3758145						
ANR	3758269	Symbol	b		3758145						
ANR	3758270	Symbol	EG		3758145						
ANR	3758271	Symbol	& lval		3758145						
ANR	3758272	Symbol	* heap_object		3758145						
ANR	3758273	Symbol	lval		3758145						
ANR	3758274	Symbol	Z_LVAL		3758145						
ANR	3758275	Symbol	FAILURE		3758145						
ANR	3758276	Symbol	heap_object -> fptr_cmp		3758145						
ANR	3758277	Symbol	result		3758145						
ANR	3758278	Symbol	Z_SPLHEAP_P		3758145						
ANR	3758279	Symbol	heap_object		3758145						
ANR	3758280	Symbol	& result		3758145						
ANR	3758281	Symbol	spl_ptr_heap_cmp_cb_helper		3758145						
ANR	3758282	Symbol	object		3758145						
ANR	3758283	Function	spl_ptr_pqueue_zval_cmp	192:0:5325:6185							
ANR	3758284	FunctionDef	"spl_ptr_pqueue_zval_cmp (zval * a , zval * b , zval * object)"		3758283	0					
ANR	3758285	CompoundStatement		192:67:5392:6185	3758283	0					
ANR	3758286	IdentifierDeclStatement	zval result ;	193:1:5405:5416	3758283	0	True				
ANR	3758287	IdentifierDecl	result		3758283	0					
ANR	3758288	IdentifierDeclType	zval		3758283	0					
ANR	3758289	Identifier	result		3758283	1					
ANR	3758290	IdentifierDeclStatement	"zval * a_priority_p = spl_pqueue_extract_helper ( a , SPL_PQUEUE_EXTR_PRIORITY ) ;"	194:1:5419:5494	3758283	1	True				
ANR	3758291	IdentifierDecl	"* a_priority_p = spl_pqueue_extract_helper ( a , SPL_PQUEUE_EXTR_PRIORITY )"		3758283	0					
ANR	3758292	IdentifierDeclType	zval *		3758283	0					
ANR	3758293	Identifier	a_priority_p		3758283	1					
ANR	3758294	AssignmentExpression	"* a_priority_p = spl_pqueue_extract_helper ( a , SPL_PQUEUE_EXTR_PRIORITY )"		3758283	2		=			
ANR	3758295	Identifier	a_priority_p		3758283	0					
ANR	3758296	CallExpression	"spl_pqueue_extract_helper ( a , SPL_PQUEUE_EXTR_PRIORITY )"		3758283	1					
ANR	3758297	Callee	spl_pqueue_extract_helper		3758283	0					
ANR	3758298	Identifier	spl_pqueue_extract_helper		3758283	0					
ANR	3758299	ArgumentList	a		3758283	1					
ANR	3758300	Argument	a		3758283	0					
ANR	3758301	Identifier	a		3758283	0					
ANR	3758302	Argument	SPL_PQUEUE_EXTR_PRIORITY		3758283	1					
ANR	3758303	Identifier	SPL_PQUEUE_EXTR_PRIORITY		3758283	0					
ANR	3758304	IdentifierDeclStatement	"zval * b_priority_p = spl_pqueue_extract_helper ( b , SPL_PQUEUE_EXTR_PRIORITY ) ;"	195:1:5497:5572	3758283	2	True				
ANR	3758305	IdentifierDecl	"* b_priority_p = spl_pqueue_extract_helper ( b , SPL_PQUEUE_EXTR_PRIORITY )"		3758283	0					
ANR	3758306	IdentifierDeclType	zval *		3758283	0					
ANR	3758307	Identifier	b_priority_p		3758283	1					
ANR	3758308	AssignmentExpression	"* b_priority_p = spl_pqueue_extract_helper ( b , SPL_PQUEUE_EXTR_PRIORITY )"		3758283	2		=			
ANR	3758309	Identifier	b_priority_p		3758283	0					
ANR	3758310	CallExpression	"spl_pqueue_extract_helper ( b , SPL_PQUEUE_EXTR_PRIORITY )"		3758283	1					
ANR	3758311	Callee	spl_pqueue_extract_helper		3758283	0					
ANR	3758312	Identifier	spl_pqueue_extract_helper		3758283	0					
ANR	3758313	ArgumentList	b		3758283	1					
ANR	3758314	Argument	b		3758283	0					
ANR	3758315	Identifier	b		3758283	0					
ANR	3758316	Argument	SPL_PQUEUE_EXTR_PRIORITY		3758283	1					
ANR	3758317	Identifier	SPL_PQUEUE_EXTR_PRIORITY		3758283	0					
ANR	3758318	IfStatement	if ( ( ! a_priority_p ) || ( ! b_priority_p ) )		3758283	3					
ANR	3758319	Condition	( ! a_priority_p ) || ( ! b_priority_p )	197:5:5580:5613	3758283	0	True				
ANR	3758320	OrExpression	( ! a_priority_p ) || ( ! b_priority_p )		3758283	0		||			
ANR	3758321	UnaryOperationExpression	! a_priority_p		3758283	0					
ANR	3758322	UnaryOperator	!		3758283	0					
ANR	3758323	Identifier	a_priority_p		3758283	1					
ANR	3758324	UnaryOperationExpression	! b_priority_p		3758283	1					
ANR	3758325	UnaryOperator	!		3758283	0					
ANR	3758326	Identifier	b_priority_p		3758283	1					
ANR	3758327	CompoundStatement		6:41:223:223	3758283	1					
ANR	3758328	ExpressionStatement	"zend_error ( E_RECOVERABLE_ERROR , ""Unable to extract from the PriorityQueue node"" )"	198:2:5620:5700	3758283	0	True				
ANR	3758329	CallExpression	"zend_error ( E_RECOVERABLE_ERROR , ""Unable to extract from the PriorityQueue node"" )"		3758283	0					
ANR	3758330	Callee	zend_error		3758283	0					
ANR	3758331	Identifier	zend_error		3758283	0					
ANR	3758332	ArgumentList	E_RECOVERABLE_ERROR		3758283	1					
ANR	3758333	Argument	E_RECOVERABLE_ERROR		3758283	0					
ANR	3758334	Identifier	E_RECOVERABLE_ERROR		3758283	0					
ANR	3758335	Argument	"""Unable to extract from the PriorityQueue node"""		3758283	1					
ANR	3758336	PrimaryExpression	"""Unable to extract from the PriorityQueue node"""		3758283	0					
ANR	3758337	ReturnStatement	return 0 ;	199:2:5704:5712	3758283	1	True				
ANR	3758338	PrimaryExpression	0		3758283	0					
ANR	3758339	IfStatement	if ( EG ( exception ) )		3758283	4					
ANR	3758340	Condition	EG ( exception )	202:5:5723:5735	3758283	0	True				
ANR	3758341	CallExpression	EG ( exception )		3758283	0					
ANR	3758342	Callee	EG		3758283	0					
ANR	3758343	Identifier	EG		3758283	0					
ANR	3758344	ArgumentList	exception		3758283	1					
ANR	3758345	Argument	exception		3758283	0					
ANR	3758346	Identifier	exception		3758283	0					
ANR	3758347	CompoundStatement		11:20:345:345	3758283	1					
ANR	3758348	ReturnStatement	return 0 ;	203:2:5742:5750	3758283	0	True				
ANR	3758349	PrimaryExpression	0		3758283	0					
ANR	3758350	IfStatement	if ( object )		3758283	5					
ANR	3758351	Condition	object	206:5:5761:5766	3758283	0	True				
ANR	3758352	Identifier	object		3758283	0					
ANR	3758353	CompoundStatement		16:2:380:430	3758283	1					
ANR	3758354	IdentifierDeclStatement	spl_heap_object * heap_object = Z_SPLHEAP_P ( object ) ;	207:2:5773:5823	3758283	0	True				
ANR	3758355	IdentifierDecl	* heap_object = Z_SPLHEAP_P ( object )		3758283	0					
ANR	3758356	IdentifierDeclType	spl_heap_object *		3758283	0					
ANR	3758357	Identifier	heap_object		3758283	1					
ANR	3758358	AssignmentExpression	* heap_object = Z_SPLHEAP_P ( object )		3758283	2		=			
ANR	3758359	Identifier	heap_object		3758283	0					
ANR	3758360	CallExpression	Z_SPLHEAP_P ( object )		3758283	1					
ANR	3758361	Callee	Z_SPLHEAP_P		3758283	0					
ANR	3758362	Identifier	Z_SPLHEAP_P		3758283	0					
ANR	3758363	ArgumentList	object		3758283	1					
ANR	3758364	Argument	object		3758283	0					
ANR	3758365	Identifier	object		3758283	0					
ANR	3758366	IfStatement	if ( heap_object -> fptr_cmp )		3758283	1					
ANR	3758367	Condition	heap_object -> fptr_cmp	208:6:5831:5851	3758283	0	True				
ANR	3758368	PtrMemberAccess	heap_object -> fptr_cmp		3758283	0					
ANR	3758369	Identifier	heap_object		3758283	0					
ANR	3758370	Identifier	fptr_cmp		3758283	1					
ANR	3758371	CompoundStatement		18:3:466:484	3758283	1					
ANR	3758372	IdentifierDeclStatement	zend_long lval = 0 ;	209:3:5859:5877	3758283	0	True				
ANR	3758373	IdentifierDecl	lval = 0		3758283	0					
ANR	3758374	IdentifierDeclType	zend_long		3758283	0					
ANR	3758375	Identifier	lval		3758283	1					
ANR	3758376	AssignmentExpression	lval = 0		3758283	2		=			
ANR	3758377	Identifier	lval		3758283	0					
ANR	3758378	PrimaryExpression	0		3758283	1					
ANR	3758379	IfStatement	"if ( spl_ptr_heap_cmp_cb_helper ( ( zval * ) object , heap_object , a_priority_p , b_priority_p , & lval ) == FAILURE )"		3758283	1					
ANR	3758380	Condition	"spl_ptr_heap_cmp_cb_helper ( ( zval * ) object , heap_object , a_priority_p , b_priority_p , & lval ) == FAILURE"	210:7:5886:5986	3758283	0	True				
ANR	3758381	EqualityExpression	"spl_ptr_heap_cmp_cb_helper ( ( zval * ) object , heap_object , a_priority_p , b_priority_p , & lval ) == FAILURE"		3758283	0		==			
ANR	3758382	CallExpression	"spl_ptr_heap_cmp_cb_helper ( ( zval * ) object , heap_object , a_priority_p , b_priority_p , & lval )"		3758283	0					
ANR	3758383	Callee	spl_ptr_heap_cmp_cb_helper		3758283	0					
ANR	3758384	Identifier	spl_ptr_heap_cmp_cb_helper		3758283	0					
ANR	3758385	ArgumentList	( zval * ) object		3758283	1					
ANR	3758386	Argument	( zval * ) object		3758283	0					
ANR	3758387	CastExpression	( zval * ) object		3758283	0					
ANR	3758388	CastTarget	zval *		3758283	0					
ANR	3758389	Identifier	object		3758283	1					
ANR	3758390	Argument	heap_object		3758283	1					
ANR	3758391	Identifier	heap_object		3758283	0					
ANR	3758392	Argument	a_priority_p		3758283	2					
ANR	3758393	Identifier	a_priority_p		3758283	0					
ANR	3758394	Argument	b_priority_p		3758283	3					
ANR	3758395	Identifier	b_priority_p		3758283	0					
ANR	3758396	Argument	& lval		3758283	4					
ANR	3758397	UnaryOperationExpression	& lval		3758283	0					
ANR	3758398	UnaryOperator	&		3758283	0					
ANR	3758399	Identifier	lval		3758283	1					
ANR	3758400	Identifier	FAILURE		3758283	1					
ANR	3758401	CompoundStatement		19:110:596:596	3758283	1					
ANR	3758402	ReturnStatement	return 0 ;	212:4:6031:6039	3758283	0	True				
ANR	3758403	PrimaryExpression	0		3758283	0					
ANR	3758404	ReturnStatement	return lval > 0 ? 1 : ( lval < 0 ? - 1 : 0 ) ;	214:3:6049:6090	3758283	2	True				
ANR	3758405	ConditionalExpression	lval > 0 ? 1 : ( lval < 0 ? - 1 : 0 )		3758283	0					
ANR	3758406	Condition	lval > 0		3758283	0					
ANR	3758407	RelationalExpression	lval > 0		3758283	0		>			
ANR	3758408	Identifier	lval		3758283	0					
ANR	3758409	PrimaryExpression	0		3758283	1					
ANR	3758410	PrimaryExpression	1		3758283	1					
ANR	3758411	ConditionalExpression	lval < 0 ? - 1 : 0		3758283	2					
ANR	3758412	Condition	lval < 0		3758283	0					
ANR	3758413	RelationalExpression	lval < 0		3758283	0		<			
ANR	3758414	Identifier	lval		3758283	0					
ANR	3758415	PrimaryExpression	0		3758283	1					
ANR	3758416	UnaryOperationExpression	- 1		3758283	1					
ANR	3758417	UnaryOperator	-		3758283	0					
ANR	3758418	PrimaryExpression	1		3758283	1					
ANR	3758419	PrimaryExpression	0		3758283	2					
ANR	3758420	ExpressionStatement	"compare_function ( & result , a_priority_p , b_priority_p )"	218:1:6101:6154	3758283	6	True				
ANR	3758421	CallExpression	"compare_function ( & result , a_priority_p , b_priority_p )"		3758283	0					
ANR	3758422	Callee	compare_function		3758283	0					
ANR	3758423	Identifier	compare_function		3758283	0					
ANR	3758424	ArgumentList	& result		3758283	1					
ANR	3758425	Argument	& result		3758283	0					
ANR	3758426	UnaryOperationExpression	& result		3758283	0					
ANR	3758427	UnaryOperator	&		3758283	0					
ANR	3758428	Identifier	result		3758283	1					
ANR	3758429	Argument	a_priority_p		3758283	1					
ANR	3758430	Identifier	a_priority_p		3758283	0					
ANR	3758431	Argument	b_priority_p		3758283	2					
ANR	3758432	Identifier	b_priority_p		3758283	0					
ANR	3758433	ReturnStatement	return ( int ) Z_LVAL ( result ) ;	219:1:6157:6183	3758283	7	True				
ANR	3758434	CastExpression	( int ) Z_LVAL ( result )		3758283	0					
ANR	3758435	CastTarget	int		3758283	0					
ANR	3758436	CallExpression	Z_LVAL ( result )		3758283	1					
ANR	3758437	Callee	Z_LVAL		3758283	0					
ANR	3758438	Identifier	Z_LVAL		3758283	0					
ANR	3758439	ArgumentList	result		3758283	1					
ANR	3758440	Argument	result		3758283	0					
ANR	3758441	Identifier	result		3758283	0					
ANR	3758442	ReturnType	static int		3758283	1					
ANR	3758443	Identifier	spl_ptr_pqueue_zval_cmp		3758283	2					
ANR	3758444	ParameterList	"zval * a , zval * b , zval * object"		3758283	3					
ANR	3758445	Parameter	zval * a	192:35:5360:5366	3758283	0	True				
ANR	3758446	ParameterType	zval *		3758283	0					
ANR	3758447	Identifier	a		3758283	1					
ANR	3758448	Parameter	zval * b	192:44:5369:5375	3758283	1	True				
ANR	3758449	ParameterType	zval *		3758283	0					
ANR	3758450	Identifier	b		3758283	1					
ANR	3758451	Parameter	zval * object	192:53:5378:5389	3758283	2	True				
ANR	3758452	ParameterType	zval *		3758283	0					
ANR	3758453	Identifier	object		3758283	1					
ANR	3758454	CFGEntryNode	ENTRY		3758283		True				
ANR	3758455	CFGExitNode	EXIT		3758283		True				
ANR	3758456	Symbol	exception		3758283						
ANR	3758457	Symbol	a		3758283						
ANR	3758458	Symbol	b		3758283						
ANR	3758459	Symbol	b_priority_p		3758283						
ANR	3758460	Symbol	E_RECOVERABLE_ERROR		3758283						
ANR	3758461	Symbol	EG		3758283						
ANR	3758462	Symbol	& lval		3758283						
ANR	3758463	Symbol	* heap_object		3758283						
ANR	3758464	Symbol	lval		3758283						
ANR	3758465	Symbol	Z_LVAL		3758283						
ANR	3758466	Symbol	spl_pqueue_extract_helper		3758283						
ANR	3758467	Symbol	a_priority_p		3758283						
ANR	3758468	Symbol	FAILURE		3758283						
ANR	3758469	Symbol	heap_object -> fptr_cmp		3758283						
ANR	3758470	Symbol	result		3758283						
ANR	3758471	Symbol	Z_SPLHEAP_P		3758283						
ANR	3758472	Symbol	SPL_PQUEUE_EXTR_PRIORITY		3758283						
ANR	3758473	Symbol	heap_object		3758283						
ANR	3758474	Symbol	& result		3758283						
ANR	3758475	Symbol	spl_ptr_heap_cmp_cb_helper		3758283						
ANR	3758476	Symbol	object		3758283						
ANR	3758477	Function	spl_ptr_heap_init	223:0:6198:6617							
ANR	3758478	FunctionDef	"spl_ptr_heap_init (spl_ptr_heap_cmp_func cmp , spl_ptr_heap_ctor_func ctor , spl_ptr_heap_dtor_func dtor)"		3758477	0					
ANR	3758479	CompoundStatement		224:0:6332:6617	3758477	0					
ANR	3758480	IdentifierDeclStatement	spl_ptr_heap * heap = emalloc ( sizeof ( spl_ptr_heap ) ) ;	225:1:6335:6385	3758477	0	True				
ANR	3758481	IdentifierDecl	* heap = emalloc ( sizeof ( spl_ptr_heap ) )		3758477	0					
ANR	3758482	IdentifierDeclType	spl_ptr_heap *		3758477	0					
ANR	3758483	Identifier	heap		3758477	1					
ANR	3758484	AssignmentExpression	* heap = emalloc ( sizeof ( spl_ptr_heap ) )		3758477	2		=			
ANR	3758485	Identifier	heap		3758477	0					
ANR	3758486	CallExpression	emalloc ( sizeof ( spl_ptr_heap ) )		3758477	1					
ANR	3758487	Callee	emalloc		3758477	0					
ANR	3758488	Identifier	emalloc		3758477	0					
ANR	3758489	ArgumentList	sizeof ( spl_ptr_heap )		3758477	1					
ANR	3758490	Argument	sizeof ( spl_ptr_heap )		3758477	0					
ANR	3758491	SizeofExpression	sizeof ( spl_ptr_heap )		3758477	0					
ANR	3758492	Sizeof	sizeof		3758477	0					
ANR	3758493	SizeofOperand	spl_ptr_heap		3758477	1					
ANR	3758494	ExpressionStatement	heap -> dtor = dtor	227:1:6389:6410	3758477	1	True				
ANR	3758495	AssignmentExpression	heap -> dtor = dtor		3758477	0		=			
ANR	3758496	PtrMemberAccess	heap -> dtor		3758477	0					
ANR	3758497	Identifier	heap		3758477	0					
ANR	3758498	Identifier	dtor		3758477	1					
ANR	3758499	Identifier	dtor		3758477	1					
ANR	3758500	ExpressionStatement	heap -> ctor = ctor	228:1:6413:6434	3758477	2	True				
ANR	3758501	AssignmentExpression	heap -> ctor = ctor		3758477	0		=			
ANR	3758502	PtrMemberAccess	heap -> ctor		3758477	0					
ANR	3758503	Identifier	heap		3758477	0					
ANR	3758504	Identifier	ctor		3758477	1					
ANR	3758505	Identifier	ctor		3758477	1					
ANR	3758506	ExpressionStatement	heap -> cmp = cmp	229:1:6437:6457	3758477	3	True				
ANR	3758507	AssignmentExpression	heap -> cmp = cmp		3758477	0		=			
ANR	3758508	PtrMemberAccess	heap -> cmp		3758477	0					
ANR	3758509	Identifier	heap		3758477	0					
ANR	3758510	Identifier	cmp		3758477	1					
ANR	3758511	Identifier	cmp		3758477	1					
ANR	3758512	ExpressionStatement	"heap -> elements = ecalloc ( PTR_HEAP_BLOCK_SIZE , sizeof ( zval ) )"	230:1:6460:6519	3758477	4	True				
ANR	3758513	AssignmentExpression	"heap -> elements = ecalloc ( PTR_HEAP_BLOCK_SIZE , sizeof ( zval ) )"		3758477	0		=			
ANR	3758514	PtrMemberAccess	heap -> elements		3758477	0					
ANR	3758515	Identifier	heap		3758477	0					
ANR	3758516	Identifier	elements		3758477	1					
ANR	3758517	CallExpression	"ecalloc ( PTR_HEAP_BLOCK_SIZE , sizeof ( zval ) )"		3758477	1					
ANR	3758518	Callee	ecalloc		3758477	0					
ANR	3758519	Identifier	ecalloc		3758477	0					
ANR	3758520	ArgumentList	PTR_HEAP_BLOCK_SIZE		3758477	1					
ANR	3758521	Argument	PTR_HEAP_BLOCK_SIZE		3758477	0					
ANR	3758522	Identifier	PTR_HEAP_BLOCK_SIZE		3758477	0					
ANR	3758523	Argument	sizeof ( zval )		3758477	1					
ANR	3758524	SizeofExpression	sizeof ( zval )		3758477	0					
ANR	3758525	Sizeof	sizeof		3758477	0					
ANR	3758526	SizeofOperand	zval		3758477	1					
ANR	3758527	ExpressionStatement	heap -> max_size = PTR_HEAP_BLOCK_SIZE	231:1:6522:6558	3758477	5	True				
ANR	3758528	AssignmentExpression	heap -> max_size = PTR_HEAP_BLOCK_SIZE		3758477	0		=			
ANR	3758529	PtrMemberAccess	heap -> max_size		3758477	0					
ANR	3758530	Identifier	heap		3758477	0					
ANR	3758531	Identifier	max_size		3758477	1					
ANR	3758532	Identifier	PTR_HEAP_BLOCK_SIZE		3758477	1					
ANR	3758533	ExpressionStatement	heap -> count = 0	232:1:6561:6579	3758477	6	True				
ANR	3758534	AssignmentExpression	heap -> count = 0		3758477	0		=			
ANR	3758535	PtrMemberAccess	heap -> count		3758477	0					
ANR	3758536	Identifier	heap		3758477	0					
ANR	3758537	Identifier	count		3758477	1					
ANR	3758538	PrimaryExpression	0		3758477	1					
ANR	3758539	ExpressionStatement	heap -> flags = 0	233:1:6582:6600	3758477	7	True				
ANR	3758540	AssignmentExpression	heap -> flags = 0		3758477	0		=			
ANR	3758541	PtrMemberAccess	heap -> flags		3758477	0					
ANR	3758542	Identifier	heap		3758477	0					
ANR	3758543	Identifier	flags		3758477	1					
ANR	3758544	PrimaryExpression	0		3758477	1					
ANR	3758545	ReturnStatement	return heap ;	235:1:6604:6615	3758477	8	True				
ANR	3758546	Identifier	heap		3758477	0					
ANR	3758547	ReturnType	static spl_ptr_heap *		3758477	1					
ANR	3758548	Identifier	spl_ptr_heap_init		3758477	2					
ANR	3758549	ParameterList	"spl_ptr_heap_cmp_func cmp , spl_ptr_heap_ctor_func ctor , spl_ptr_heap_dtor_func dtor"		3758477	3					
ANR	3758550	Parameter	spl_ptr_heap_cmp_func cmp	223:39:6237:6261	3758477	0	True				
ANR	3758551	ParameterType	spl_ptr_heap_cmp_func		3758477	0					
ANR	3758552	Identifier	cmp		3758477	1					
ANR	3758553	Parameter	spl_ptr_heap_ctor_func ctor	223:66:6264:6290	3758477	1	True				
ANR	3758554	ParameterType	spl_ptr_heap_ctor_func		3758477	0					
ANR	3758555	Identifier	ctor		3758477	1					
ANR	3758556	Parameter	spl_ptr_heap_dtor_func dtor	223:95:6293:6319	3758477	2	True				
ANR	3758557	ParameterType	spl_ptr_heap_dtor_func		3758477	0					
ANR	3758558	Identifier	dtor		3758477	1					
ANR	3758559	CFGEntryNode	ENTRY		3758477		True				
ANR	3758560	CFGExitNode	EXIT		3758477		True				
ANR	3758561	Symbol	heap -> flags		3758477						
ANR	3758562	Symbol	cmp		3758477						
ANR	3758563	Symbol	heap -> dtor		3758477						
ANR	3758564	Symbol	heap -> ctor		3758477						
ANR	3758565	Symbol	emalloc		3758477						
ANR	3758566	Symbol	PTR_HEAP_BLOCK_SIZE		3758477						
ANR	3758567	Symbol	heap -> cmp		3758477						
ANR	3758568	Symbol	heap -> count		3758477						
ANR	3758569	Symbol	heap -> max_size		3758477						
ANR	3758570	Symbol	ecalloc		3758477						
ANR	3758571	Symbol	ctor		3758477						
ANR	3758572	Symbol	dtor		3758477						
ANR	3758573	Symbol	heap		3758477						
ANR	3758574	Symbol	* heap		3758477						
ANR	3758575	Symbol	heap -> elements		3758477						
ANR	3758576	Function	spl_ptr_heap_insert	239:0:6630:7342							
ANR	3758577	FunctionDef	"spl_ptr_heap_insert (spl_ptr_heap * heap , zval * elem , void * cmp_userdata)"		3758576	0					
ANR	3758578	CompoundStatement		239:84:6714:7342	3758576	0					
ANR	3758579	IdentifierDeclStatement	int i ;	240:1:6727:6732	3758576	0	True				
ANR	3758580	IdentifierDecl	i		3758576	0					
ANR	3758581	IdentifierDeclType	int		3758576	0					
ANR	3758582	Identifier	i		3758576	1					
ANR	3758583	IfStatement	if ( heap -> count + 1 > heap -> max_size )		3758576	1					
ANR	3758584	Condition	heap -> count + 1 > heap -> max_size	242:5:6740:6769	3758576	0	True				
ANR	3758585	RelationalExpression	heap -> count + 1 > heap -> max_size		3758576	0		>			
ANR	3758586	AdditiveExpression	heap -> count + 1		3758576	0		+			
ANR	3758587	PtrMemberAccess	heap -> count		3758576	0					
ANR	3758588	Identifier	heap		3758576	0					
ANR	3758589	Identifier	count		3758576	1					
ANR	3758590	PrimaryExpression	1		3758576	1					
ANR	3758591	PtrMemberAccess	heap -> max_size		3758576	1					
ANR	3758592	Identifier	heap		3758576	0					
ANR	3758593	Identifier	max_size		3758576	1					
ANR	3758594	CompoundStatement		4:37:57:57	3758576	1					
ANR	3758595	ExpressionStatement	"heap -> elements = erealloc ( heap -> elements , heap -> max_size * 2 * sizeof ( zval ) )"	244:2:6816:6893	3758576	0	True				
ANR	3758596	AssignmentExpression	"heap -> elements = erealloc ( heap -> elements , heap -> max_size * 2 * sizeof ( zval ) )"		3758576	0		=			
ANR	3758597	PtrMemberAccess	heap -> elements		3758576	0					
ANR	3758598	Identifier	heap		3758576	0					
ANR	3758599	Identifier	elements		3758576	1					
ANR	3758600	CallExpression	"erealloc ( heap -> elements , heap -> max_size * 2 * sizeof ( zval ) )"		3758576	1					
ANR	3758601	Callee	erealloc		3758576	0					
ANR	3758602	Identifier	erealloc		3758576	0					
ANR	3758603	ArgumentList	heap -> elements		3758576	1					
ANR	3758604	Argument	heap -> elements		3758576	0					
ANR	3758605	PtrMemberAccess	heap -> elements		3758576	0					
ANR	3758606	Identifier	heap		3758576	0					
ANR	3758607	Identifier	elements		3758576	1					
ANR	3758608	Argument	heap -> max_size * 2 * sizeof ( zval )		3758576	1					
ANR	3758609	MultiplicativeExpression	heap -> max_size * 2 * sizeof ( zval )		3758576	0		*			
ANR	3758610	PtrMemberAccess	heap -> max_size		3758576	0					
ANR	3758611	Identifier	heap		3758576	0					
ANR	3758612	Identifier	max_size		3758576	1					
ANR	3758613	MultiplicativeExpression	2 * sizeof ( zval )		3758576	1		*			
ANR	3758614	PrimaryExpression	2		3758576	0					
ANR	3758615	SizeofExpression	sizeof ( zval )		3758576	1					
ANR	3758616	Sizeof	sizeof		3758576	0					
ANR	3758617	SizeofOperand	zval		3758576	1					
ANR	3758618	ExpressionStatement	"memset ( heap -> elements + heap -> max_size , 0 , heap -> max_size * sizeof ( zval ) )"	245:2:6897:6970	3758576	1	True				
ANR	3758619	CallExpression	"memset ( heap -> elements + heap -> max_size , 0 , heap -> max_size * sizeof ( zval ) )"		3758576	0					
ANR	3758620	Callee	memset		3758576	0					
ANR	3758621	Identifier	memset		3758576	0					
ANR	3758622	ArgumentList	heap -> elements + heap -> max_size		3758576	1					
ANR	3758623	Argument	heap -> elements + heap -> max_size		3758576	0					
ANR	3758624	AdditiveExpression	heap -> elements + heap -> max_size		3758576	0		+			
ANR	3758625	PtrMemberAccess	heap -> elements		3758576	0					
ANR	3758626	Identifier	heap		3758576	0					
ANR	3758627	Identifier	elements		3758576	1					
ANR	3758628	PtrMemberAccess	heap -> max_size		3758576	1					
ANR	3758629	Identifier	heap		3758576	0					
ANR	3758630	Identifier	max_size		3758576	1					
ANR	3758631	Argument	0		3758576	1					
ANR	3758632	PrimaryExpression	0		3758576	0					
ANR	3758633	Argument	heap -> max_size * sizeof ( zval )		3758576	2					
ANR	3758634	MultiplicativeExpression	heap -> max_size * sizeof ( zval )		3758576	0		*			
ANR	3758635	PtrMemberAccess	heap -> max_size		3758576	0					
ANR	3758636	Identifier	heap		3758576	0					
ANR	3758637	Identifier	max_size		3758576	1					
ANR	3758638	SizeofExpression	sizeof ( zval )		3758576	1					
ANR	3758639	Sizeof	sizeof		3758576	0					
ANR	3758640	SizeofOperand	zval		3758576	1					
ANR	3758641	ExpressionStatement	heap -> max_size *= 2	246:2:6974:6993	3758576	2	True				
ANR	3758642	AssignmentExpression	heap -> max_size *= 2		3758576	0		*=			
ANR	3758643	PtrMemberAccess	heap -> max_size		3758576	0					
ANR	3758644	Identifier	heap		3758576	0					
ANR	3758645	Identifier	max_size		3758576	1					
ANR	3758646	PrimaryExpression	2		3758576	1					
ANR	3758647	ForStatement	"for ( i = heap -> count ; i > 0 && heap -> cmp ( & heap -> elements [ ( i - 1 ) / 2 ] , elem , cmp_userdata ) < 0 ; i = ( i - 1 ) / 2 )"		3758576	2					
ANR	3758648	ForInit	i = heap -> count ;	250:6:7023:7038	3758576	0	True				
ANR	3758649	AssignmentExpression	i = heap -> count		3758576	0		=			
ANR	3758650	Identifier	i		3758576	0					
ANR	3758651	PtrMemberAccess	heap -> count		3758576	1					
ANR	3758652	Identifier	heap		3758576	0					
ANR	3758653	Identifier	count		3758576	1					
ANR	3758654	Condition	"i > 0 && heap -> cmp ( & heap -> elements [ ( i - 1 ) / 2 ] , elem , cmp_userdata ) < 0"	250:23:7040:7107	3758576	1	True				
ANR	3758655	AndExpression	"i > 0 && heap -> cmp ( & heap -> elements [ ( i - 1 ) / 2 ] , elem , cmp_userdata ) < 0"		3758576	0		&&			
ANR	3758656	RelationalExpression	i > 0		3758576	0		>			
ANR	3758657	Identifier	i		3758576	0					
ANR	3758658	PrimaryExpression	0		3758576	1					
ANR	3758659	RelationalExpression	"heap -> cmp ( & heap -> elements [ ( i - 1 ) / 2 ] , elem , cmp_userdata ) < 0"		3758576	1		<			
ANR	3758660	CallExpression	"heap -> cmp ( & heap -> elements [ ( i - 1 ) / 2 ] , elem , cmp_userdata )"		3758576	0					
ANR	3758661	Callee	heap -> cmp		3758576	0					
ANR	3758662	PtrMemberAccess	heap -> cmp		3758576	0					
ANR	3758663	Identifier	heap		3758576	0					
ANR	3758664	Identifier	cmp		3758576	1					
ANR	3758665	ArgumentList	& heap -> elements [ ( i - 1 ) / 2 ]		3758576	1					
ANR	3758666	Argument	& heap -> elements [ ( i - 1 ) / 2 ]		3758576	0					
ANR	3758667	UnaryOperationExpression	& heap -> elements [ ( i - 1 ) / 2 ]		3758576	0					
ANR	3758668	UnaryOperator	&		3758576	0					
ANR	3758669	ArrayIndexing	heap -> elements [ ( i - 1 ) / 2 ]		3758576	1					
ANR	3758670	PtrMemberAccess	heap -> elements		3758576	0					
ANR	3758671	Identifier	heap		3758576	0					
ANR	3758672	Identifier	elements		3758576	1					
ANR	3758673	MultiplicativeExpression	( i - 1 ) / 2		3758576	1		/			
ANR	3758674	AdditiveExpression	i - 1		3758576	0		-			
ANR	3758675	Identifier	i		3758576	0					
ANR	3758676	PrimaryExpression	1		3758576	1					
ANR	3758677	PrimaryExpression	2		3758576	1					
ANR	3758678	Argument	elem		3758576	1					
ANR	3758679	Identifier	elem		3758576	0					
ANR	3758680	Argument	cmp_userdata		3758576	2					
ANR	3758681	Identifier	cmp_userdata		3758576	0					
ANR	3758682	PrimaryExpression	0		3758576	1					
ANR	3758683	AssignmentExpression	i = ( i - 1 ) / 2	250:93:7110:7120	3758576	2	True	=			
ANR	3758684	Identifier	i		3758576	0					
ANR	3758685	MultiplicativeExpression	( i - 1 ) / 2		3758576	1		/			
ANR	3758686	AdditiveExpression	i - 1		3758576	0		-			
ANR	3758687	Identifier	i		3758576	0					
ANR	3758688	PrimaryExpression	1		3758576	1					
ANR	3758689	PrimaryExpression	2		3758576	1					
ANR	3758690	CompoundStatement		12:106:408:408	3758576	3					
ANR	3758691	ExpressionStatement	heap -> elements [ i ] = heap -> elements [ ( i - 1 ) / 2 ]	251:2:7127:7170	3758576	0	True				
ANR	3758692	AssignmentExpression	heap -> elements [ i ] = heap -> elements [ ( i - 1 ) / 2 ]		3758576	0		=			
ANR	3758693	ArrayIndexing	heap -> elements [ i ]		3758576	0					
ANR	3758694	PtrMemberAccess	heap -> elements		3758576	0					
ANR	3758695	Identifier	heap		3758576	0					
ANR	3758696	Identifier	elements		3758576	1					
ANR	3758697	Identifier	i		3758576	1					
ANR	3758698	ArrayIndexing	heap -> elements [ ( i - 1 ) / 2 ]		3758576	1					
ANR	3758699	PtrMemberAccess	heap -> elements		3758576	0					
ANR	3758700	Identifier	heap		3758576	0					
ANR	3758701	Identifier	elements		3758576	1					
ANR	3758702	MultiplicativeExpression	( i - 1 ) / 2		3758576	1		/			
ANR	3758703	AdditiveExpression	i - 1		3758576	0		-			
ANR	3758704	Identifier	i		3758576	0					
ANR	3758705	PrimaryExpression	1		3758576	1					
ANR	3758706	PrimaryExpression	2		3758576	1					
ANR	3758707	ExpressionStatement	heap -> count ++	253:1:7176:7189	3758576	3	True				
ANR	3758708	PostIncDecOperationExpression	heap -> count ++		3758576	0					
ANR	3758709	PtrMemberAccess	heap -> count		3758576	0					
ANR	3758710	Identifier	heap		3758576	0					
ANR	3758711	Identifier	count		3758576	1					
ANR	3758712	IncDec	++		3758576	1					
ANR	3758713	IfStatement	if ( EG ( exception ) )		3758576	4					
ANR	3758714	Condition	EG ( exception )	255:5:7197:7209	3758576	0	True				
ANR	3758715	CallExpression	EG ( exception )		3758576	0					
ANR	3758716	Callee	EG		3758576	0					
ANR	3758717	Identifier	EG		3758576	0					
ANR	3758718	ArgumentList	exception		3758576	1					
ANR	3758719	Argument	exception		3758576	0					
ANR	3758720	Identifier	exception		3758576	0					
ANR	3758721	CompoundStatement		17:20:497:497	3758576	1					
ANR	3758722	ExpressionStatement	heap -> flags |= SPL_HEAP_CORRUPTED	257:2:7259:7292	3758576	0	True				
ANR	3758723	AssignmentExpression	heap -> flags |= SPL_HEAP_CORRUPTED		3758576	0		|=			
ANR	3758724	PtrMemberAccess	heap -> flags		3758576	0					
ANR	3758725	Identifier	heap		3758576	0					
ANR	3758726	Identifier	flags		3758576	1					
ANR	3758727	Identifier	SPL_HEAP_CORRUPTED		3758576	1					
ANR	3758728	ExpressionStatement	"ZVAL_COPY_VALUE ( & heap -> elements [ i ] , elem )"	260:1:7299:7340	3758576	5	True				
ANR	3758729	CallExpression	"ZVAL_COPY_VALUE ( & heap -> elements [ i ] , elem )"		3758576	0					
ANR	3758730	Callee	ZVAL_COPY_VALUE		3758576	0					
ANR	3758731	Identifier	ZVAL_COPY_VALUE		3758576	0					
ANR	3758732	ArgumentList	& heap -> elements [ i ]		3758576	1					
ANR	3758733	Argument	& heap -> elements [ i ]		3758576	0					
ANR	3758734	UnaryOperationExpression	& heap -> elements [ i ]		3758576	0					
ANR	3758735	UnaryOperator	&		3758576	0					
ANR	3758736	ArrayIndexing	heap -> elements [ i ]		3758576	1					
ANR	3758737	PtrMemberAccess	heap -> elements		3758576	0					
ANR	3758738	Identifier	heap		3758576	0					
ANR	3758739	Identifier	elements		3758576	1					
ANR	3758740	Identifier	i		3758576	1					
ANR	3758741	Argument	elem		3758576	1					
ANR	3758742	Identifier	elem		3758576	0					
ANR	3758743	ReturnType	static void		3758576	1					
ANR	3758744	Identifier	spl_ptr_heap_insert		3758576	2					
ANR	3758745	ParameterList	"spl_ptr_heap * heap , zval * elem , void * cmp_userdata"		3758576	3					
ANR	3758746	Parameter	spl_ptr_heap * heap	239:32:6662:6679	3758576	0	True				
ANR	3758747	ParameterType	spl_ptr_heap *		3758576	0					
ANR	3758748	Identifier	heap		3758576	1					
ANR	3758749	Parameter	zval * elem	239:52:6682:6691	3758576	1	True				
ANR	3758750	ParameterType	zval *		3758576	0					
ANR	3758751	Identifier	elem		3758576	1					
ANR	3758752	Parameter	void * cmp_userdata	239:64:6694:6711	3758576	2	True				
ANR	3758753	ParameterType	void *		3758576	0					
ANR	3758754	Identifier	cmp_userdata		3758576	1					
ANR	3758755	CFGEntryNode	ENTRY		3758576		True				
ANR	3758756	CFGExitNode	EXIT		3758576		True				
ANR	3758757	Symbol	elem		3758576						
ANR	3758758	Symbol	* * heap		3758576						
ANR	3758759	Symbol	exception		3758576						
ANR	3758760	Symbol	EG		3758576						
ANR	3758761	Symbol	heap -> flags		3758576						
ANR	3758762	Symbol	i		3758576						
ANR	3758763	Symbol	SPL_HEAP_CORRUPTED		3758576						
ANR	3758764	Symbol	cmp_userdata		3758576						
ANR	3758765	Symbol	* heap -> elements		3758576						
ANR	3758766	Symbol	* i		3758576						
ANR	3758767	Symbol	heap -> cmp		3758576						
ANR	3758768	Symbol	heap -> count		3758576						
ANR	3758769	Symbol	heap -> max_size		3758576						
ANR	3758770	Symbol	heap		3758576						
ANR	3758771	Symbol	* heap		3758576						
ANR	3758772	Symbol	heap -> elements		3758576						
ANR	3758773	Symbol	erealloc		3758576						
ANR	3758774	Function	spl_ptr_heap_top	264:0:7355:7526							
ANR	3758775	FunctionDef	spl_ptr_heap_top (spl_ptr_heap * heap)		3758774	0					
ANR	3758776	CompoundStatement		264:50:7405:7526	3758774	0					
ANR	3758777	IfStatement	if ( heap -> count == 0 )		3758774	0					
ANR	3758778	Condition	heap -> count == 0	265:5:7422:7437	3758774	0	True				
ANR	3758779	EqualityExpression	heap -> count == 0		3758774	0		==			
ANR	3758780	PtrMemberAccess	heap -> count		3758774	0					
ANR	3758781	Identifier	heap		3758774	0					
ANR	3758782	Identifier	count		3758774	1					
ANR	3758783	PrimaryExpression	0		3758774	1					
ANR	3758784	CompoundStatement		2:23:34:34	3758774	1					
ANR	3758785	ReturnStatement	return NULL ;	266:2:7444:7455	3758774	0	True				
ANR	3758786	Identifier	NULL		3758774	0					
ANR	3758787	ReturnStatement	return Z_ISUNDEF ( heap -> elements [ 0 ] ) ? NULL : & heap -> elements [ 0 ] ;	269:1:7462:7524	3758774	1	True				
ANR	3758788	ConditionalExpression	Z_ISUNDEF ( heap -> elements [ 0 ] ) ? NULL : & heap -> elements [ 0 ]		3758774	0					
ANR	3758789	Condition	Z_ISUNDEF ( heap -> elements [ 0 ] )		3758774	0					
ANR	3758790	CallExpression	Z_ISUNDEF ( heap -> elements [ 0 ] )		3758774	0					
ANR	3758791	Callee	Z_ISUNDEF		3758774	0					
ANR	3758792	Identifier	Z_ISUNDEF		3758774	0					
ANR	3758793	ArgumentList	heap -> elements [ 0 ]		3758774	1					
ANR	3758794	Argument	heap -> elements [ 0 ]		3758774	0					
ANR	3758795	ArrayIndexing	heap -> elements [ 0 ]		3758774	0					
ANR	3758796	PtrMemberAccess	heap -> elements		3758774	0					
ANR	3758797	Identifier	heap		3758774	0					
ANR	3758798	Identifier	elements		3758774	1					
ANR	3758799	PrimaryExpression	0		3758774	1					
ANR	3758800	Identifier	NULL		3758774	1					
ANR	3758801	UnaryOperationExpression	& heap -> elements [ 0 ]		3758774	2					
ANR	3758802	UnaryOperator	&		3758774	0					
ANR	3758803	ArrayIndexing	heap -> elements [ 0 ]		3758774	1					
ANR	3758804	PtrMemberAccess	heap -> elements		3758774	0					
ANR	3758805	Identifier	heap		3758774	0					
ANR	3758806	Identifier	elements		3758774	1					
ANR	3758807	PrimaryExpression	0		3758774	1					
ANR	3758808	ReturnType	static zval *		3758774	1					
ANR	3758809	Identifier	spl_ptr_heap_top		3758774	2					
ANR	3758810	ParameterList	spl_ptr_heap * heap		3758774	3					
ANR	3758811	Parameter	spl_ptr_heap * heap	264:30:7385:7402	3758774	0	True				
ANR	3758812	ParameterType	spl_ptr_heap *		3758774	0					
ANR	3758813	Identifier	heap		3758774	1					
ANR	3758814	CFGEntryNode	ENTRY		3758774		True				
ANR	3758815	CFGExitNode	EXIT		3758774		True				
ANR	3758816	Symbol	* * heap		3758774						
ANR	3758817	Symbol	* heap -> elements		3758774						
ANR	3758818	Symbol	NULL		3758774						
ANR	3758819	Symbol	heap -> count		3758774						
ANR	3758820	Symbol	Z_ISUNDEF		3758774						
ANR	3758821	Symbol	heap		3758774						
ANR	3758822	Symbol	* heap		3758774						
ANR	3758823	Symbol	heap -> elements		3758774						
ANR	3758824	Function	spl_ptr_heap_delete_top	273:0:7539:8393							
ANR	3758825	FunctionDef	"spl_ptr_heap_delete_top (spl_ptr_heap * heap , zval * elem , void * cmp_userdata)"		3758824	0					
ANR	3758826	CompoundStatement		273:88:7627:8393	3758824	0					
ANR	3758827	IdentifierDeclStatement	"int i , j ;"	274:1:7640:7648	3758824	0	True				
ANR	3758828	IdentifierDecl	i		3758824	0					
ANR	3758829	IdentifierDeclType	int		3758824	0					
ANR	3758830	Identifier	i		3758824	1					
ANR	3758831	IdentifierDecl	j		3758824	1					
ANR	3758832	IdentifierDeclType	int		3758824	0					
ANR	3758833	Identifier	j		3758824	1					
ANR	3758834	IdentifierDeclStatement	const int limit = ( heap -> count - 1 ) / 2 ;	275:1:7651:7686	3758824	1	True				
ANR	3758835	IdentifierDecl	limit = ( heap -> count - 1 ) / 2		3758824	0					
ANR	3758836	IdentifierDeclType	const int		3758824	0					
ANR	3758837	Identifier	limit		3758824	1					
ANR	3758838	AssignmentExpression	limit = ( heap -> count - 1 ) / 2		3758824	2		=			
ANR	3758839	Identifier	limit		3758824	0					
ANR	3758840	MultiplicativeExpression	( heap -> count - 1 ) / 2		3758824	1		/			
ANR	3758841	AdditiveExpression	heap -> count - 1		3758824	0		-			
ANR	3758842	PtrMemberAccess	heap -> count		3758824	0					
ANR	3758843	Identifier	heap		3758824	0					
ANR	3758844	Identifier	count		3758824	1					
ANR	3758845	PrimaryExpression	1		3758824	1					
ANR	3758846	PrimaryExpression	2		3758824	1					
ANR	3758847	IdentifierDeclStatement	zval * bottom ;	276:1:7689:7701	3758824	2	True				
ANR	3758848	IdentifierDecl	* bottom		3758824	0					
ANR	3758849	IdentifierDeclType	zval *		3758824	0					
ANR	3758850	Identifier	bottom		3758824	1					
ANR	3758851	IfStatement	if ( heap -> count == 0 )		3758824	3					
ANR	3758852	Condition	heap -> count == 0	278:5:7709:7724	3758824	0	True				
ANR	3758853	EqualityExpression	heap -> count == 0		3758824	0		==			
ANR	3758854	PtrMemberAccess	heap -> count		3758824	0					
ANR	3758855	Identifier	heap		3758824	0					
ANR	3758856	Identifier	count		3758824	1					
ANR	3758857	PrimaryExpression	0		3758824	1					
ANR	3758858	CompoundStatement		6:23:99:99	3758824	1					
ANR	3758859	ExpressionStatement	ZVAL_UNDEF ( elem )	279:2:7731:7747	3758824	0	True				
ANR	3758860	CallExpression	ZVAL_UNDEF ( elem )		3758824	0					
ANR	3758861	Callee	ZVAL_UNDEF		3758824	0					
ANR	3758862	Identifier	ZVAL_UNDEF		3758824	0					
ANR	3758863	ArgumentList	elem		3758824	1					
ANR	3758864	Argument	elem		3758824	0					
ANR	3758865	Identifier	elem		3758824	0					
ANR	3758866	ReturnStatement	return ;	280:2:7751:7757	3758824	1	True				
ANR	3758867	ExpressionStatement	"ZVAL_COPY_VALUE ( elem , & heap -> elements [ 0 ] )"	283:1:7764:7805	3758824	4	True				
ANR	3758868	CallExpression	"ZVAL_COPY_VALUE ( elem , & heap -> elements [ 0 ] )"		3758824	0					
ANR	3758869	Callee	ZVAL_COPY_VALUE		3758824	0					
ANR	3758870	Identifier	ZVAL_COPY_VALUE		3758824	0					
ANR	3758871	ArgumentList	elem		3758824	1					
ANR	3758872	Argument	elem		3758824	0					
ANR	3758873	Identifier	elem		3758824	0					
ANR	3758874	Argument	& heap -> elements [ 0 ]		3758824	1					
ANR	3758875	UnaryOperationExpression	& heap -> elements [ 0 ]		3758824	0					
ANR	3758876	UnaryOperator	&		3758824	0					
ANR	3758877	ArrayIndexing	heap -> elements [ 0 ]		3758824	1					
ANR	3758878	PtrMemberAccess	heap -> elements		3758824	0					
ANR	3758879	Identifier	heap		3758824	0					
ANR	3758880	Identifier	elements		3758824	1					
ANR	3758881	PrimaryExpression	0		3758824	1					
ANR	3758882	ExpressionStatement	bottom = & heap -> elements [ -- heap -> count ]	284:1:7808:7847	3758824	5	True				
ANR	3758883	AssignmentExpression	bottom = & heap -> elements [ -- heap -> count ]		3758824	0		=			
ANR	3758884	Identifier	bottom		3758824	0					
ANR	3758885	UnaryOperationExpression	& heap -> elements [ -- heap -> count ]		3758824	1					
ANR	3758886	UnaryOperator	&		3758824	0					
ANR	3758887	ArrayIndexing	heap -> elements [ -- heap -> count ]		3758824	1					
ANR	3758888	PtrMemberAccess	heap -> elements		3758824	0					
ANR	3758889	Identifier	heap		3758824	0					
ANR	3758890	Identifier	elements		3758824	1					
ANR	3758891	UnaryExpression	-- heap -> count		3758824	1					
ANR	3758892	IncDec	--		3758824	0					
ANR	3758893	PtrMemberAccess	heap -> count		3758824	1					
ANR	3758894	Identifier	heap		3758824	0					
ANR	3758895	Identifier	count		3758824	1					
ANR	3758896	ForStatement	for ( i = 0 ; i < limit ; i = j )		3758824	6					
ANR	3758897	ForInit	i = 0 ;	286:6:7856:7861	3758824	0	True				
ANR	3758898	AssignmentExpression	i = 0		3758824	0		=			
ANR	3758899	Identifier	i		3758824	0					
ANR	3758900	PrimaryExpression	0		3758824	1					
ANR	3758901	Condition	i < limit	286:13:7863:7871	3758824	1	True				
ANR	3758902	RelationalExpression	i < limit		3758824	0		<			
ANR	3758903	Identifier	i		3758824	0					
ANR	3758904	Identifier	limit		3758824	1					
ANR	3758905	AssignmentExpression	i = j	286:24:7874:7878	3758824	2	True	=			
ANR	3758906	Identifier	i		3758824	0					
ANR	3758907	Identifier	j		3758824	1					
ANR	3758908	CompoundStatement		14:31:253:253	3758824	3					
ANR	3758909	ExpressionStatement	j = i * 2 + 1	288:2:7912:7925	3758824	0	True				
ANR	3758910	AssignmentExpression	j = i * 2 + 1		3758824	0		=			
ANR	3758911	Identifier	j		3758824	0					
ANR	3758912	AdditiveExpression	i * 2 + 1		3758824	1		+			
ANR	3758913	MultiplicativeExpression	i * 2		3758824	0		*			
ANR	3758914	Identifier	i		3758824	0					
ANR	3758915	PrimaryExpression	2		3758824	1					
ANR	3758916	PrimaryExpression	1		3758824	1					
ANR	3758917	IfStatement	"if ( j != heap -> count && heap -> cmp ( & heap -> elements [ j + 1 ] , & heap -> elements [ j ] , cmp_userdata ) > 0 )"		3758824	1					
ANR	3758918	Condition	"j != heap -> count && heap -> cmp ( & heap -> elements [ j + 1 ] , & heap -> elements [ j ] , cmp_userdata ) > 0"	289:5:7932:8020	3758824	0	True				
ANR	3758919	AndExpression	"j != heap -> count && heap -> cmp ( & heap -> elements [ j + 1 ] , & heap -> elements [ j ] , cmp_userdata ) > 0"		3758824	0		&&			
ANR	3758920	EqualityExpression	j != heap -> count		3758824	0		!=			
ANR	3758921	Identifier	j		3758824	0					
ANR	3758922	PtrMemberAccess	heap -> count		3758824	1					
ANR	3758923	Identifier	heap		3758824	0					
ANR	3758924	Identifier	count		3758824	1					
ANR	3758925	RelationalExpression	"heap -> cmp ( & heap -> elements [ j + 1 ] , & heap -> elements [ j ] , cmp_userdata ) > 0"		3758824	1		>			
ANR	3758926	CallExpression	"heap -> cmp ( & heap -> elements [ j + 1 ] , & heap -> elements [ j ] , cmp_userdata )"		3758824	0					
ANR	3758927	Callee	heap -> cmp		3758824	0					
ANR	3758928	PtrMemberAccess	heap -> cmp		3758824	0					
ANR	3758929	Identifier	heap		3758824	0					
ANR	3758930	Identifier	cmp		3758824	1					
ANR	3758931	ArgumentList	& heap -> elements [ j + 1 ]		3758824	1					
ANR	3758932	Argument	& heap -> elements [ j + 1 ]		3758824	0					
ANR	3758933	UnaryOperationExpression	& heap -> elements [ j + 1 ]		3758824	0					
ANR	3758934	UnaryOperator	&		3758824	0					
ANR	3758935	ArrayIndexing	heap -> elements [ j + 1 ]		3758824	1					
ANR	3758936	PtrMemberAccess	heap -> elements		3758824	0					
ANR	3758937	Identifier	heap		3758824	0					
ANR	3758938	Identifier	elements		3758824	1					
ANR	3758939	AdditiveExpression	j + 1		3758824	1		+			
ANR	3758940	Identifier	j		3758824	0					
ANR	3758941	PrimaryExpression	1		3758824	1					
ANR	3758942	Argument	& heap -> elements [ j ]		3758824	1					
ANR	3758943	UnaryOperationExpression	& heap -> elements [ j ]		3758824	0					
ANR	3758944	UnaryOperator	&		3758824	0					
ANR	3758945	ArrayIndexing	heap -> elements [ j ]		3758824	1					
ANR	3758946	PtrMemberAccess	heap -> elements		3758824	0					
ANR	3758947	Identifier	heap		3758824	0					
ANR	3758948	Identifier	elements		3758824	1					
ANR	3758949	Identifier	j		3758824	1					
ANR	3758950	Argument	cmp_userdata		3758824	2					
ANR	3758951	Identifier	cmp_userdata		3758824	0					
ANR	3758952	PrimaryExpression	0		3758824	1					
ANR	3758953	CompoundStatement		17:96:395:395	3758824	1					
ANR	3758954	ExpressionStatement	j ++	290:3:8028:8031	3758824	0	True				
ANR	3758955	PostIncDecOperationExpression	j ++		3758824	0					
ANR	3758956	Identifier	j		3758824	0					
ANR	3758957	IncDec	++		3758824	1					
ANR	3758958	IfStatement	"if ( heap -> cmp ( bottom , & heap -> elements [ j ] , cmp_userdata ) < 0 )"		3758824	2					
ANR	3758959	Condition	"heap -> cmp ( bottom , & heap -> elements [ j ] , cmp_userdata ) < 0"	294:5:8111:8165	3758824	0	True				
ANR	3758960	RelationalExpression	"heap -> cmp ( bottom , & heap -> elements [ j ] , cmp_userdata ) < 0"		3758824	0		<			
ANR	3758961	CallExpression	"heap -> cmp ( bottom , & heap -> elements [ j ] , cmp_userdata )"		3758824	0					
ANR	3758962	Callee	heap -> cmp		3758824	0					
ANR	3758963	PtrMemberAccess	heap -> cmp		3758824	0					
ANR	3758964	Identifier	heap		3758824	0					
ANR	3758965	Identifier	cmp		3758824	1					
ANR	3758966	ArgumentList	bottom		3758824	1					
ANR	3758967	Argument	bottom		3758824	0					
ANR	3758968	Identifier	bottom		3758824	0					
ANR	3758969	Argument	& heap -> elements [ j ]		3758824	1					
ANR	3758970	UnaryOperationExpression	& heap -> elements [ j ]		3758824	0					
ANR	3758971	UnaryOperator	&		3758824	0					
ANR	3758972	ArrayIndexing	heap -> elements [ j ]		3758824	1					
ANR	3758973	PtrMemberAccess	heap -> elements		3758824	0					
ANR	3758974	Identifier	heap		3758824	0					
ANR	3758975	Identifier	elements		3758824	1					
ANR	3758976	Identifier	j		3758824	1					
ANR	3758977	Argument	cmp_userdata		3758824	2					
ANR	3758978	Identifier	cmp_userdata		3758824	0					
ANR	3758979	PrimaryExpression	0		3758824	1					
ANR	3758980	CompoundStatement		22:62:540:540	3758824	1					
ANR	3758981	ExpressionStatement	heap -> elements [ i ] = heap -> elements [ j ]	295:3:8173:8210	3758824	0	True				
ANR	3758982	AssignmentExpression	heap -> elements [ i ] = heap -> elements [ j ]		3758824	0		=			
ANR	3758983	ArrayIndexing	heap -> elements [ i ]		3758824	0					
ANR	3758984	PtrMemberAccess	heap -> elements		3758824	0					
ANR	3758985	Identifier	heap		3758824	0					
ANR	3758986	Identifier	elements		3758824	1					
ANR	3758987	Identifier	i		3758824	1					
ANR	3758988	ArrayIndexing	heap -> elements [ j ]		3758824	1					
ANR	3758989	PtrMemberAccess	heap -> elements		3758824	0					
ANR	3758990	Identifier	heap		3758824	0					
ANR	3758991	Identifier	elements		3758824	1					
ANR	3758992	Identifier	j		3758824	1					
ANR	3758993	ElseStatement	else		3758824	0					
ANR	3758994	CompoundStatement		24:9:593:593	3758824	0					
ANR	3758995	BreakStatement	break ;	297:3:8226:8231	3758824	0	True				
ANR	3758996	IfStatement	if ( EG ( exception ) )		3758824	7					
ANR	3758997	Condition	EG ( exception )	301:5:8246:8258	3758824	0	True				
ANR	3758998	CallExpression	EG ( exception )		3758824	0					
ANR	3758999	Callee	EG		3758824	0					
ANR	3759000	Identifier	EG		3758824	0					
ANR	3759001	ArgumentList	exception		3758824	1					
ANR	3759002	Argument	exception		3758824	0					
ANR	3759003	Identifier	exception		3758824	0					
ANR	3759004	CompoundStatement		29:20:633:633	3758824	1					
ANR	3759005	ExpressionStatement	heap -> flags |= SPL_HEAP_CORRUPTED	303:2:8308:8341	3758824	0	True				
ANR	3759006	AssignmentExpression	heap -> flags |= SPL_HEAP_CORRUPTED		3758824	0		|=			
ANR	3759007	PtrMemberAccess	heap -> flags		3758824	0					
ANR	3759008	Identifier	heap		3758824	0					
ANR	3759009	Identifier	flags		3758824	1					
ANR	3759010	Identifier	SPL_HEAP_CORRUPTED		3758824	1					
ANR	3759011	ExpressionStatement	"ZVAL_COPY_VALUE ( & heap -> elements [ i ] , bottom )"	306:1:8348:8391	3758824	8	True				
ANR	3759012	CallExpression	"ZVAL_COPY_VALUE ( & heap -> elements [ i ] , bottom )"		3758824	0					
ANR	3759013	Callee	ZVAL_COPY_VALUE		3758824	0					
ANR	3759014	Identifier	ZVAL_COPY_VALUE		3758824	0					
ANR	3759015	ArgumentList	& heap -> elements [ i ]		3758824	1					
ANR	3759016	Argument	& heap -> elements [ i ]		3758824	0					
ANR	3759017	UnaryOperationExpression	& heap -> elements [ i ]		3758824	0					
ANR	3759018	UnaryOperator	&		3758824	0					
ANR	3759019	ArrayIndexing	heap -> elements [ i ]		3758824	1					
ANR	3759020	PtrMemberAccess	heap -> elements		3758824	0					
ANR	3759021	Identifier	heap		3758824	0					
ANR	3759022	Identifier	elements		3758824	1					
ANR	3759023	Identifier	i		3758824	1					
ANR	3759024	Argument	bottom		3758824	1					
ANR	3759025	Identifier	bottom		3758824	0					
ANR	3759026	ReturnType	static void		3758824	1					
ANR	3759027	Identifier	spl_ptr_heap_delete_top		3758824	2					
ANR	3759028	ParameterList	"spl_ptr_heap * heap , zval * elem , void * cmp_userdata"		3758824	3					
ANR	3759029	Parameter	spl_ptr_heap * heap	273:36:7575:7592	3758824	0	True				
ANR	3759030	ParameterType	spl_ptr_heap *		3758824	0					
ANR	3759031	Identifier	heap		3758824	1					
ANR	3759032	Parameter	zval * elem	273:56:7595:7604	3758824	1	True				
ANR	3759033	ParameterType	zval *		3758824	0					
ANR	3759034	Identifier	elem		3758824	1					
ANR	3759035	Parameter	void * cmp_userdata	273:68:7607:7624	3758824	2	True				
ANR	3759036	ParameterType	void *		3758824	0					
ANR	3759037	Identifier	cmp_userdata		3758824	1					
ANR	3759038	CFGEntryNode	ENTRY		3758824		True				
ANR	3759039	CFGExitNode	EXIT		3758824		True				
ANR	3759040	Symbol	elem		3758824						
ANR	3759041	Symbol	* * heap		3758824						
ANR	3759042	Symbol	exception		3758824						
ANR	3759043	Symbol	EG		3758824						
ANR	3759044	Symbol	bottom		3758824						
ANR	3759045	Symbol	heap -> flags		3758824						
ANR	3759046	Symbol	i		3758824						
ANR	3759047	Symbol	j		3758824						
ANR	3759048	Symbol	SPL_HEAP_CORRUPTED		3758824						
ANR	3759049	Symbol	cmp_userdata		3758824						
ANR	3759050	Symbol	* heap -> elements		3758824						
ANR	3759051	Symbol	* i		3758824						
ANR	3759052	Symbol	heap -> cmp		3758824						
ANR	3759053	Symbol	* j		3758824						
ANR	3759054	Symbol	heap -> count		3758824						
ANR	3759055	Symbol	limit		3758824						
ANR	3759056	Symbol	heap		3758824						
ANR	3759057	Symbol	* heap		3758824						
ANR	3759058	Symbol	heap -> elements		3758824						
ANR	3759059	Function	spl_ptr_heap_clone	310:0:8406:8950							
ANR	3759060	FunctionDef	spl_ptr_heap_clone (spl_ptr_heap * from)		3759059	0					
ANR	3759061	CompoundStatement		310:60:8466:8950	3759059	0					
ANR	3759062	IdentifierDeclStatement	int i ;	311:1:8479:8484	3759059	0	True				
ANR	3759063	IdentifierDecl	i		3759059	0					
ANR	3759064	IdentifierDeclType	int		3759059	0					
ANR	3759065	Identifier	i		3759059	1					
ANR	3759066	IdentifierDeclStatement	spl_ptr_heap * heap = emalloc ( sizeof ( spl_ptr_heap ) ) ;	313:1:8488:8538	3759059	1	True				
ANR	3759067	IdentifierDecl	* heap = emalloc ( sizeof ( spl_ptr_heap ) )		3759059	0					
ANR	3759068	IdentifierDeclType	spl_ptr_heap *		3759059	0					
ANR	3759069	Identifier	heap		3759059	1					
ANR	3759070	AssignmentExpression	* heap = emalloc ( sizeof ( spl_ptr_heap ) )		3759059	2		=			
ANR	3759071	Identifier	heap		3759059	0					
ANR	3759072	CallExpression	emalloc ( sizeof ( spl_ptr_heap ) )		3759059	1					
ANR	3759073	Callee	emalloc		3759059	0					
ANR	3759074	Identifier	emalloc		3759059	0					
ANR	3759075	ArgumentList	sizeof ( spl_ptr_heap )		3759059	1					
ANR	3759076	Argument	sizeof ( spl_ptr_heap )		3759059	0					
ANR	3759077	SizeofExpression	sizeof ( spl_ptr_heap )		3759059	0					
ANR	3759078	Sizeof	sizeof		3759059	0					
ANR	3759079	SizeofOperand	spl_ptr_heap		3759059	1					
ANR	3759080	ExpressionStatement	heap -> dtor = from -> dtor	315:1:8542:8569	3759059	2	True				
ANR	3759081	AssignmentExpression	heap -> dtor = from -> dtor		3759059	0		=			
ANR	3759082	PtrMemberAccess	heap -> dtor		3759059	0					
ANR	3759083	Identifier	heap		3759059	0					
ANR	3759084	Identifier	dtor		3759059	1					
ANR	3759085	PtrMemberAccess	from -> dtor		3759059	1					
ANR	3759086	Identifier	from		3759059	0					
ANR	3759087	Identifier	dtor		3759059	1					
ANR	3759088	ExpressionStatement	heap -> ctor = from -> ctor	316:1:8572:8599	3759059	3	True				
ANR	3759089	AssignmentExpression	heap -> ctor = from -> ctor		3759059	0		=			
ANR	3759090	PtrMemberAccess	heap -> ctor		3759059	0					
ANR	3759091	Identifier	heap		3759059	0					
ANR	3759092	Identifier	ctor		3759059	1					
ANR	3759093	PtrMemberAccess	from -> ctor		3759059	1					
ANR	3759094	Identifier	from		3759059	0					
ANR	3759095	Identifier	ctor		3759059	1					
ANR	3759096	ExpressionStatement	heap -> cmp = from -> cmp	317:1:8602:8628	3759059	4	True				
ANR	3759097	AssignmentExpression	heap -> cmp = from -> cmp		3759059	0		=			
ANR	3759098	PtrMemberAccess	heap -> cmp		3759059	0					
ANR	3759099	Identifier	heap		3759059	0					
ANR	3759100	Identifier	cmp		3759059	1					
ANR	3759101	PtrMemberAccess	from -> cmp		3759059	1					
ANR	3759102	Identifier	from		3759059	0					
ANR	3759103	Identifier	cmp		3759059	1					
ANR	3759104	ExpressionStatement	heap -> max_size = from -> max_size	318:1:8631:8662	3759059	5	True				
ANR	3759105	AssignmentExpression	heap -> max_size = from -> max_size		3759059	0		=			
ANR	3759106	PtrMemberAccess	heap -> max_size		3759059	0					
ANR	3759107	Identifier	heap		3759059	0					
ANR	3759108	Identifier	max_size		3759059	1					
ANR	3759109	PtrMemberAccess	from -> max_size		3759059	1					
ANR	3759110	Identifier	from		3759059	0					
ANR	3759111	Identifier	max_size		3759059	1					
ANR	3759112	ExpressionStatement	heap -> count = from -> count	319:1:8665:8693	3759059	6	True				
ANR	3759113	AssignmentExpression	heap -> count = from -> count		3759059	0		=			
ANR	3759114	PtrMemberAccess	heap -> count		3759059	0					
ANR	3759115	Identifier	heap		3759059	0					
ANR	3759116	Identifier	count		3759059	1					
ANR	3759117	PtrMemberAccess	from -> count		3759059	1					
ANR	3759118	Identifier	from		3759059	0					
ANR	3759119	Identifier	count		3759059	1					
ANR	3759120	ExpressionStatement	heap -> flags = from -> flags	320:1:8696:8724	3759059	7	True				
ANR	3759121	AssignmentExpression	heap -> flags = from -> flags		3759059	0		=			
ANR	3759122	PtrMemberAccess	heap -> flags		3759059	0					
ANR	3759123	Identifier	heap		3759059	0					
ANR	3759124	Identifier	flags		3759059	1					
ANR	3759125	PtrMemberAccess	from -> flags		3759059	1					
ANR	3759126	Identifier	from		3759059	0					
ANR	3759127	Identifier	flags		3759059	1					
ANR	3759128	ExpressionStatement	"heap -> elements = safe_emalloc ( sizeof ( zval ) , from -> max_size , 0 )"	322:1:8728:8790	3759059	8	True				
ANR	3759129	AssignmentExpression	"heap -> elements = safe_emalloc ( sizeof ( zval ) , from -> max_size , 0 )"		3759059	0		=			
ANR	3759130	PtrMemberAccess	heap -> elements		3759059	0					
ANR	3759131	Identifier	heap		3759059	0					
ANR	3759132	Identifier	elements		3759059	1					
ANR	3759133	CallExpression	"safe_emalloc ( sizeof ( zval ) , from -> max_size , 0 )"		3759059	1					
ANR	3759134	Callee	safe_emalloc		3759059	0					
ANR	3759135	Identifier	safe_emalloc		3759059	0					
ANR	3759136	ArgumentList	sizeof ( zval )		3759059	1					
ANR	3759137	Argument	sizeof ( zval )		3759059	0					
ANR	3759138	SizeofExpression	sizeof ( zval )		3759059	0					
ANR	3759139	Sizeof	sizeof		3759059	0					
ANR	3759140	SizeofOperand	zval		3759059	1					
ANR	3759141	Argument	from -> max_size		3759059	1					
ANR	3759142	PtrMemberAccess	from -> max_size		3759059	0					
ANR	3759143	Identifier	from		3759059	0					
ANR	3759144	Identifier	max_size		3759059	1					
ANR	3759145	Argument	0		3759059	2					
ANR	3759146	PrimaryExpression	0		3759059	0					
ANR	3759147	ExpressionStatement	"memcpy ( heap -> elements , from -> elements , sizeof ( zval ) * from -> max_size )"	323:1:8793:8860	3759059	9	True				
ANR	3759148	CallExpression	"memcpy ( heap -> elements , from -> elements , sizeof ( zval ) * from -> max_size )"		3759059	0					
ANR	3759149	Callee	memcpy		3759059	0					
ANR	3759150	Identifier	memcpy		3759059	0					
ANR	3759151	ArgumentList	heap -> elements		3759059	1					
ANR	3759152	Argument	heap -> elements		3759059	0					
ANR	3759153	PtrMemberAccess	heap -> elements		3759059	0					
ANR	3759154	Identifier	heap		3759059	0					
ANR	3759155	Identifier	elements		3759059	1					
ANR	3759156	Argument	from -> elements		3759059	1					
ANR	3759157	PtrMemberAccess	from -> elements		3759059	0					
ANR	3759158	Identifier	from		3759059	0					
ANR	3759159	Identifier	elements		3759059	1					
ANR	3759160	Argument	sizeof ( zval ) * from -> max_size		3759059	2					
ANR	3759161	MultiplicativeExpression	sizeof ( zval ) * from -> max_size		3759059	0		*			
ANR	3759162	SizeofExpression	sizeof ( zval )		3759059	0					
ANR	3759163	Sizeof	sizeof		3759059	0					
ANR	3759164	SizeofOperand	zval		3759059	1					
ANR	3759165	PtrMemberAccess	from -> max_size		3759059	1					
ANR	3759166	Identifier	from		3759059	0					
ANR	3759167	Identifier	max_size		3759059	1					
ANR	3759168	ForStatement	for ( i = 0 ; i < heap -> count ; ++ i )		3759059	10					
ANR	3759169	ForInit	i = 0 ;	325:6:8869:8872	3759059	0	True				
ANR	3759170	AssignmentExpression	i = 0		3759059	0		=			
ANR	3759171	Identifier	i		3759059	0					
ANR	3759172	PrimaryExpression	0		3759059	1					
ANR	3759173	Condition	i < heap -> count	325:11:8874:8888	3759059	1	True				
ANR	3759174	RelationalExpression	i < heap -> count		3759059	0		<			
ANR	3759175	Identifier	i		3759059	0					
ANR	3759176	PtrMemberAccess	heap -> count		3759059	1					
ANR	3759177	Identifier	heap		3759059	0					
ANR	3759178	Identifier	count		3759059	1					
ANR	3759179	UnaryExpression	++ i	325:28:8891:8893	3759059	2	True				
ANR	3759180	IncDec	++		3759059	0					
ANR	3759181	Identifier	i		3759059	1					
ANR	3759182	CompoundStatement		16:33:429:429	3759059	3					
ANR	3759183	ExpressionStatement	heap -> ctor ( & heap -> elements [ i ] )	326:2:8900:8930	3759059	0	True				
ANR	3759184	CallExpression	heap -> ctor ( & heap -> elements [ i ] )		3759059	0					
ANR	3759185	Callee	heap -> ctor		3759059	0					
ANR	3759186	PtrMemberAccess	heap -> ctor		3759059	0					
ANR	3759187	Identifier	heap		3759059	0					
ANR	3759188	Identifier	ctor		3759059	1					
ANR	3759189	ArgumentList	& heap -> elements [ i ]		3759059	1					
ANR	3759190	Argument	& heap -> elements [ i ]		3759059	0					
ANR	3759191	UnaryOperationExpression	& heap -> elements [ i ]		3759059	0					
ANR	3759192	UnaryOperator	&		3759059	0					
ANR	3759193	ArrayIndexing	heap -> elements [ i ]		3759059	1					
ANR	3759194	PtrMemberAccess	heap -> elements		3759059	0					
ANR	3759195	Identifier	heap		3759059	0					
ANR	3759196	Identifier	elements		3759059	1					
ANR	3759197	Identifier	i		3759059	1					
ANR	3759198	ReturnStatement	return heap ;	329:1:8937:8948	3759059	11	True				
ANR	3759199	Identifier	heap		3759059	0					
ANR	3759200	ReturnType	static spl_ptr_heap *		3759059	1					
ANR	3759201	Identifier	spl_ptr_heap_clone		3759059	2					
ANR	3759202	ParameterList	spl_ptr_heap * from		3759059	3					
ANR	3759203	Parameter	spl_ptr_heap * from	310:40:8446:8463	3759059	0	True				
ANR	3759204	ParameterType	spl_ptr_heap *		3759059	0					
ANR	3759205	Identifier	from		3759059	1					
ANR	3759206	CFGEntryNode	ENTRY		3759059		True				
ANR	3759207	CFGExitNode	EXIT		3759059		True				
ANR	3759208	Symbol	from -> flags		3759059						
ANR	3759209	Symbol	from -> cmp		3759059						
ANR	3759210	Symbol	heap -> flags		3759059						
ANR	3759211	Symbol	heap -> dtor		3759059						
ANR	3759212	Symbol	i		3759059						
ANR	3759213	Symbol	heap -> ctor		3759059						
ANR	3759214	Symbol	from -> max_size		3759059						
ANR	3759215	Symbol	from -> count		3759059						
ANR	3759216	Symbol	emalloc		3759059						
ANR	3759217	Symbol	heap -> cmp		3759059						
ANR	3759218	Symbol	heap -> count		3759059						
ANR	3759219	Symbol	heap -> max_size		3759059						
ANR	3759220	Symbol	from -> elements		3759059						
ANR	3759221	Symbol	from		3759059						
ANR	3759222	Symbol	from -> dtor		3759059						
ANR	3759223	Symbol	from -> ctor		3759059						
ANR	3759224	Symbol	heap		3759059						
ANR	3759225	Symbol	* heap		3759059						
ANR	3759226	Symbol	safe_emalloc		3759059						
ANR	3759227	Symbol	heap -> elements		3759059						
ANR	3759228	Symbol	* from		3759059						
ANR	3759229	Function	spl_ptr_heap_destroy	333:0:8963:9148							
ANR	3759230	FunctionDef	spl_ptr_heap_destroy (spl_ptr_heap * heap)		3759229	0					
ANR	3759231	CompoundStatement		333:53:9016:9148	3759229	0					
ANR	3759232	IdentifierDeclStatement	int i ;	334:1:9029:9034	3759229	0	True				
ANR	3759233	IdentifierDecl	i		3759229	0					
ANR	3759234	IdentifierDeclType	int		3759229	0					
ANR	3759235	Identifier	i		3759229	1					
ANR	3759236	ForStatement	for ( i = 0 ; i < heap -> count ; ++ i )		3759229	1					
ANR	3759237	ForInit	i = 0 ;	336:6:9043:9046	3759229	0	True				
ANR	3759238	AssignmentExpression	i = 0		3759229	0		=			
ANR	3759239	Identifier	i		3759229	0					
ANR	3759240	PrimaryExpression	0		3759229	1					
ANR	3759241	Condition	i < heap -> count	336:11:9048:9062	3759229	1	True				
ANR	3759242	RelationalExpression	i < heap -> count		3759229	0		<			
ANR	3759243	Identifier	i		3759229	0					
ANR	3759244	PtrMemberAccess	heap -> count		3759229	1					
ANR	3759245	Identifier	heap		3759229	0					
ANR	3759246	Identifier	count		3759229	1					
ANR	3759247	UnaryExpression	++ i	336:28:9065:9067	3759229	2	True				
ANR	3759248	IncDec	++		3759229	0					
ANR	3759249	Identifier	i		3759229	1					
ANR	3759250	CompoundStatement		4:33:53:53	3759229	3					
ANR	3759251	ExpressionStatement	heap -> dtor ( & heap -> elements [ i ] )	337:2:9074:9104	3759229	0	True				
ANR	3759252	CallExpression	heap -> dtor ( & heap -> elements [ i ] )		3759229	0					
ANR	3759253	Callee	heap -> dtor		3759229	0					
ANR	3759254	PtrMemberAccess	heap -> dtor		3759229	0					
ANR	3759255	Identifier	heap		3759229	0					
ANR	3759256	Identifier	dtor		3759229	1					
ANR	3759257	ArgumentList	& heap -> elements [ i ]		3759229	1					
ANR	3759258	Argument	& heap -> elements [ i ]		3759229	0					
ANR	3759259	UnaryOperationExpression	& heap -> elements [ i ]		3759229	0					
ANR	3759260	UnaryOperator	&		3759229	0					
ANR	3759261	ArrayIndexing	heap -> elements [ i ]		3759229	1					
ANR	3759262	PtrMemberAccess	heap -> elements		3759229	0					
ANR	3759263	Identifier	heap		3759229	0					
ANR	3759264	Identifier	elements		3759229	1					
ANR	3759265	Identifier	i		3759229	1					
ANR	3759266	ExpressionStatement	efree ( heap -> elements )	340:1:9111:9132	3759229	2	True				
ANR	3759267	CallExpression	efree ( heap -> elements )		3759229	0					
ANR	3759268	Callee	efree		3759229	0					
ANR	3759269	Identifier	efree		3759229	0					
ANR	3759270	ArgumentList	heap -> elements		3759229	1					
ANR	3759271	Argument	heap -> elements		3759229	0					
ANR	3759272	PtrMemberAccess	heap -> elements		3759229	0					
ANR	3759273	Identifier	heap		3759229	0					
ANR	3759274	Identifier	elements		3759229	1					
ANR	3759275	ExpressionStatement	efree ( heap )	341:1:9135:9146	3759229	3	True				
ANR	3759276	CallExpression	efree ( heap )		3759229	0					
ANR	3759277	Callee	efree		3759229	0					
ANR	3759278	Identifier	efree		3759229	0					
ANR	3759279	ArgumentList	heap		3759229	1					
ANR	3759280	Argument	heap		3759229	0					
ANR	3759281	Identifier	heap		3759229	0					
ANR	3759282	ReturnType	static void		3759229	1					
ANR	3759283	Identifier	spl_ptr_heap_destroy		3759229	2					
ANR	3759284	ParameterList	spl_ptr_heap * heap		3759229	3					
ANR	3759285	Parameter	spl_ptr_heap * heap	333:33:8996:9013	3759229	0	True				
ANR	3759286	ParameterType	spl_ptr_heap *		3759229	0					
ANR	3759287	Identifier	heap		3759229	1					
ANR	3759288	CFGEntryNode	ENTRY		3759229		True				
ANR	3759289	CFGExitNode	EXIT		3759229		True				
ANR	3759290	Symbol	heap -> count		3759229						
ANR	3759291	Symbol	i		3759229						
ANR	3759292	Symbol	heap		3759229						
ANR	3759293	Symbol	* heap		3759229						
ANR	3759294	Symbol	heap -> elements		3759229						
ANR	3759295	Function	spl_ptr_heap_count	345:0:9161:9244							
ANR	3759296	FunctionDef	spl_ptr_heap_count (spl_ptr_heap * heap)		3759295	0					
ANR	3759297	CompoundStatement		345:50:9211:9244	3759295	0					
ANR	3759298	ReturnStatement	return heap -> count ;	346:1:9224:9242	3759295	0	True				
ANR	3759299	PtrMemberAccess	heap -> count		3759295	0					
ANR	3759300	Identifier	heap		3759295	0					
ANR	3759301	Identifier	count		3759295	1					
ANR	3759302	ReturnType	static int		3759295	1					
ANR	3759303	Identifier	spl_ptr_heap_count		3759295	2					
ANR	3759304	ParameterList	spl_ptr_heap * heap		3759295	3					
ANR	3759305	Parameter	spl_ptr_heap * heap	345:30:9191:9208	3759295	0	True				
ANR	3759306	ParameterType	spl_ptr_heap *		3759295	0					
ANR	3759307	Identifier	heap		3759295	1					
ANR	3759308	CFGEntryNode	ENTRY		3759295		True				
ANR	3759309	CFGExitNode	EXIT		3759295		True				
ANR	3759310	Symbol	heap -> count		3759295						
ANR	3759311	Symbol	heap		3759295						
ANR	3759312	Symbol	* heap		3759295						
ANR	3759313	DeclStmt									
ANR	3759314	Decl							zend_object_iterator	"zend_object_iterator * ( zend_class_entry * ce , zval * object , int by_ref )"	spl_heap_get_iterator
ANR	3759315	Function	spl_heap_object_free_storage	352:0:9351:9555							
ANR	3759316	FunctionDef	spl_heap_object_free_storage (zend_object * object)		3759315	0					
ANR	3759317	CompoundStatement		353:0:9423:9555	3759315	0					
ANR	3759318	IdentifierDeclStatement	spl_heap_object * intern = spl_heap_from_obj ( object ) ;	354:1:9426:9477	3759315	0	True				
ANR	3759319	IdentifierDecl	* intern = spl_heap_from_obj ( object )		3759315	0					
ANR	3759320	IdentifierDeclType	spl_heap_object *		3759315	0					
ANR	3759321	Identifier	intern		3759315	1					
ANR	3759322	AssignmentExpression	* intern = spl_heap_from_obj ( object )		3759315	2		=			
ANR	3759323	Identifier	intern		3759315	0					
ANR	3759324	CallExpression	spl_heap_from_obj ( object )		3759315	1					
ANR	3759325	Callee	spl_heap_from_obj		3759315	0					
ANR	3759326	Identifier	spl_heap_from_obj		3759315	0					
ANR	3759327	ArgumentList	object		3759315	1					
ANR	3759328	Argument	object		3759315	0					
ANR	3759329	Identifier	object		3759315	0					
ANR	3759330	ExpressionStatement	zend_object_std_dtor ( & intern -> std )	356:1:9481:9515	3759315	1	True				
ANR	3759331	CallExpression	zend_object_std_dtor ( & intern -> std )		3759315	0					
ANR	3759332	Callee	zend_object_std_dtor		3759315	0					
ANR	3759333	Identifier	zend_object_std_dtor		3759315	0					
ANR	3759334	ArgumentList	& intern -> std		3759315	1					
ANR	3759335	Argument	& intern -> std		3759315	0					
ANR	3759336	UnaryOperationExpression	& intern -> std		3759315	0					
ANR	3759337	UnaryOperator	&		3759315	0					
ANR	3759338	PtrMemberAccess	intern -> std		3759315	1					
ANR	3759339	Identifier	intern		3759315	0					
ANR	3759340	Identifier	std		3759315	1					
ANR	3759341	ExpressionStatement	spl_ptr_heap_destroy ( intern -> heap )	358:1:9519:9553	3759315	2	True				
ANR	3759342	CallExpression	spl_ptr_heap_destroy ( intern -> heap )		3759315	0					
ANR	3759343	Callee	spl_ptr_heap_destroy		3759315	0					
ANR	3759344	Identifier	spl_ptr_heap_destroy		3759315	0					
ANR	3759345	ArgumentList	intern -> heap		3759315	1					
ANR	3759346	Argument	intern -> heap		3759315	0					
ANR	3759347	PtrMemberAccess	intern -> heap		3759315	0					
ANR	3759348	Identifier	intern		3759315	0					
ANR	3759349	Identifier	heap		3759315	1					
ANR	3759350	ReturnType	static void		3759315	1					
ANR	3759351	Identifier	spl_heap_object_free_storage		3759315	2					
ANR	3759352	ParameterList	zend_object * object		3759315	3					
ANR	3759353	Parameter	zend_object * object	352:41:9392:9410	3759315	0	True				
ANR	3759354	ParameterType	zend_object *		3759315	0					
ANR	3759355	Identifier	object		3759315	1					
ANR	3759356	CFGEntryNode	ENTRY		3759315		True				
ANR	3759357	CFGExitNode	EXIT		3759315		True				
ANR	3759358	Symbol	* intern		3759315						
ANR	3759359	Symbol	intern		3759315						
ANR	3759360	Symbol	intern -> heap		3759315						
ANR	3759361	Symbol	& intern -> std		3759315						
ANR	3759362	Symbol	spl_heap_from_obj		3759315						
ANR	3759363	Symbol	object		3759315						
ANR	3759364	Function	spl_heap_object_new_ex	362:0:9568:11560							
ANR	3759365	FunctionDef	"spl_heap_object_new_ex (zend_class_entry * class_type , zval * orig , int clone_orig)"		3759364	0					
ANR	3759366	CompoundStatement		363:0:9679:11560	3759364	0					
ANR	3759367	IdentifierDeclStatement	spl_heap_object * intern ;	364:1:9682:9707	3759364	0	True				
ANR	3759368	IdentifierDecl	* intern		3759364	0					
ANR	3759369	IdentifierDeclType	spl_heap_object *		3759364	0					
ANR	3759370	Identifier	intern		3759364	1					
ANR	3759371	IdentifierDeclStatement	zend_class_entry * parent = class_type ;	365:1:9710:9748	3759364	1	True				
ANR	3759372	IdentifierDecl	* parent = class_type		3759364	0					
ANR	3759373	IdentifierDeclType	zend_class_entry *		3759364	0					
ANR	3759374	Identifier	parent		3759364	1					
ANR	3759375	AssignmentExpression	* parent = class_type		3759364	2		=			
ANR	3759376	Identifier	class_type		3759364	0					
ANR	3759377	Identifier	class_type		3759364	1					
ANR	3759378	IdentifierDeclStatement	int inherited = 0 ;	366:1:9751:9783	3759364	2	True				
ANR	3759379	IdentifierDecl	inherited = 0		3759364	0					
ANR	3759380	IdentifierDeclType	int		3759364	0					
ANR	3759381	Identifier	inherited		3759364	1					
ANR	3759382	AssignmentExpression	inherited = 0		3759364	2		=			
ANR	3759383	Identifier	inherited		3759364	0					
ANR	3759384	PrimaryExpression	0		3759364	1					
ANR	3759385	ExpressionStatement	"intern = ecalloc ( 1 , sizeof ( spl_heap_object ) + zend_object_properties_size ( parent ) )"	368:1:9787:9869	3759364	3	True				
ANR	3759386	AssignmentExpression	"intern = ecalloc ( 1 , sizeof ( spl_heap_object ) + zend_object_properties_size ( parent ) )"		3759364	0		=			
ANR	3759387	Identifier	intern		3759364	0					
ANR	3759388	CallExpression	"ecalloc ( 1 , sizeof ( spl_heap_object ) + zend_object_properties_size ( parent ) )"		3759364	1					
ANR	3759389	Callee	ecalloc		3759364	0					
ANR	3759390	Identifier	ecalloc		3759364	0					
ANR	3759391	ArgumentList	1		3759364	1					
ANR	3759392	Argument	1		3759364	0					
ANR	3759393	PrimaryExpression	1		3759364	0					
ANR	3759394	Argument	sizeof ( spl_heap_object ) + zend_object_properties_size ( parent )		3759364	1					
ANR	3759395	AdditiveExpression	sizeof ( spl_heap_object ) + zend_object_properties_size ( parent )		3759364	0		+			
ANR	3759396	SizeofExpression	sizeof ( spl_heap_object )		3759364	0					
ANR	3759397	Sizeof	sizeof		3759364	0					
ANR	3759398	SizeofOperand	spl_heap_object		3759364	1					
ANR	3759399	CallExpression	zend_object_properties_size ( parent )		3759364	1					
ANR	3759400	Callee	zend_object_properties_size		3759364	0					
ANR	3759401	Identifier	zend_object_properties_size		3759364	0					
ANR	3759402	ArgumentList	parent		3759364	1					
ANR	3759403	Argument	parent		3759364	0					
ANR	3759404	Identifier	parent		3759364	0					
ANR	3759405	ExpressionStatement	"zend_object_std_init ( & intern -> std , class_type )"	370:1:9873:9919	3759364	4	True				
ANR	3759406	CallExpression	"zend_object_std_init ( & intern -> std , class_type )"		3759364	0					
ANR	3759407	Callee	zend_object_std_init		3759364	0					
ANR	3759408	Identifier	zend_object_std_init		3759364	0					
ANR	3759409	ArgumentList	& intern -> std		3759364	1					
ANR	3759410	Argument	& intern -> std		3759364	0					
ANR	3759411	UnaryOperationExpression	& intern -> std		3759364	0					
ANR	3759412	UnaryOperator	&		3759364	0					
ANR	3759413	PtrMemberAccess	intern -> std		3759364	1					
ANR	3759414	Identifier	intern		3759364	0					
ANR	3759415	Identifier	std		3759364	1					
ANR	3759416	Argument	class_type		3759364	1					
ANR	3759417	Identifier	class_type		3759364	0					
ANR	3759418	ExpressionStatement	"object_properties_init ( & intern -> std , class_type )"	371:1:9922:9970	3759364	5	True				
ANR	3759419	CallExpression	"object_properties_init ( & intern -> std , class_type )"		3759364	0					
ANR	3759420	Callee	object_properties_init		3759364	0					
ANR	3759421	Identifier	object_properties_init		3759364	0					
ANR	3759422	ArgumentList	& intern -> std		3759364	1					
ANR	3759423	Argument	& intern -> std		3759364	0					
ANR	3759424	UnaryOperationExpression	& intern -> std		3759364	0					
ANR	3759425	UnaryOperator	&		3759364	0					
ANR	3759426	PtrMemberAccess	intern -> std		3759364	1					
ANR	3759427	Identifier	intern		3759364	0					
ANR	3759428	Identifier	std		3759364	1					
ANR	3759429	Argument	class_type		3759364	1					
ANR	3759430	Identifier	class_type		3759364	0					
ANR	3759431	ExpressionStatement	intern -> flags = 0	373:1:9974:9996	3759364	6	True				
ANR	3759432	AssignmentExpression	intern -> flags = 0		3759364	0		=			
ANR	3759433	PtrMemberAccess	intern -> flags		3759364	0					
ANR	3759434	Identifier	intern		3759364	0					
ANR	3759435	Identifier	flags		3759364	1					
ANR	3759436	PrimaryExpression	0		3759364	1					
ANR	3759437	ExpressionStatement	intern -> fptr_cmp = NULL	374:1:9999:10024	3759364	7	True				
ANR	3759438	AssignmentExpression	intern -> fptr_cmp = NULL		3759364	0		=			
ANR	3759439	PtrMemberAccess	intern -> fptr_cmp		3759364	0					
ANR	3759440	Identifier	intern		3759364	0					
ANR	3759441	Identifier	fptr_cmp		3759364	1					
ANR	3759442	Identifier	NULL		3759364	1					
ANR	3759443	IfStatement	if ( orig )		3759364	8					
ANR	3759444	Condition	orig	376:5:10032:10035	3759364	0	True				
ANR	3759445	Identifier	orig		3759364	0					
ANR	3759446	CompoundStatement		15:2:362:404	3759364	1					
ANR	3759447	IdentifierDeclStatement	spl_heap_object * other = Z_SPLHEAP_P ( orig ) ;	377:2:10042:10084	3759364	0	True				
ANR	3759448	IdentifierDecl	* other = Z_SPLHEAP_P ( orig )		3759364	0					
ANR	3759449	IdentifierDeclType	spl_heap_object *		3759364	0					
ANR	3759450	Identifier	other		3759364	1					
ANR	3759451	AssignmentExpression	* other = Z_SPLHEAP_P ( orig )		3759364	2		=			
ANR	3759452	Identifier	other		3759364	0					
ANR	3759453	CallExpression	Z_SPLHEAP_P ( orig )		3759364	1					
ANR	3759454	Callee	Z_SPLHEAP_P		3759364	0					
ANR	3759455	Identifier	Z_SPLHEAP_P		3759364	0					
ANR	3759456	ArgumentList	orig		3759364	1					
ANR	3759457	Argument	orig		3759364	0					
ANR	3759458	Identifier	orig		3759364	0					
ANR	3759459	ExpressionStatement	intern -> ce_get_iterator = other -> ce_get_iterator	378:2:10088:10136	3759364	1	True				
ANR	3759460	AssignmentExpression	intern -> ce_get_iterator = other -> ce_get_iterator		3759364	0		=			
ANR	3759461	PtrMemberAccess	intern -> ce_get_iterator		3759364	0					
ANR	3759462	Identifier	intern		3759364	0					
ANR	3759463	Identifier	ce_get_iterator		3759364	1					
ANR	3759464	PtrMemberAccess	other -> ce_get_iterator		3759364	1					
ANR	3759465	Identifier	other		3759364	0					
ANR	3759466	Identifier	ce_get_iterator		3759364	1					
ANR	3759467	IfStatement	if ( clone_orig )		3759364	2					
ANR	3759468	Condition	clone_orig	380:6:10145:10154	3759364	0	True				
ANR	3759469	Identifier	clone_orig		3759364	0					
ANR	3759470	CompoundStatement		18:18:477:477	3759364	1					
ANR	3759471	ExpressionStatement	intern -> heap = spl_ptr_heap_clone ( other -> heap )	381:3:10162:10208	3759364	0	True				
ANR	3759472	AssignmentExpression	intern -> heap = spl_ptr_heap_clone ( other -> heap )		3759364	0		=			
ANR	3759473	PtrMemberAccess	intern -> heap		3759364	0					
ANR	3759474	Identifier	intern		3759364	0					
ANR	3759475	Identifier	heap		3759364	1					
ANR	3759476	CallExpression	spl_ptr_heap_clone ( other -> heap )		3759364	1					
ANR	3759477	Callee	spl_ptr_heap_clone		3759364	0					
ANR	3759478	Identifier	spl_ptr_heap_clone		3759364	0					
ANR	3759479	ArgumentList	other -> heap		3759364	1					
ANR	3759480	Argument	other -> heap		3759364	0					
ANR	3759481	PtrMemberAccess	other -> heap		3759364	0					
ANR	3759482	Identifier	other		3759364	0					
ANR	3759483	Identifier	heap		3759364	1					
ANR	3759484	ElseStatement	else		3759364	0					
ANR	3759485	CompoundStatement		20:9:539:539	3759364	0					
ANR	3759486	ExpressionStatement	intern -> heap = other -> heap	383:3:10224:10250	3759364	0	True				
ANR	3759487	AssignmentExpression	intern -> heap = other -> heap		3759364	0		=			
ANR	3759488	PtrMemberAccess	intern -> heap		3759364	0					
ANR	3759489	Identifier	intern		3759364	0					
ANR	3759490	Identifier	heap		3759364	1					
ANR	3759491	PtrMemberAccess	other -> heap		3759364	1					
ANR	3759492	Identifier	other		3759364	0					
ANR	3759493	Identifier	heap		3759364	1					
ANR	3759494	ExpressionStatement	intern -> flags = other -> flags	386:2:10259:10287	3759364	3	True				
ANR	3759495	AssignmentExpression	intern -> flags = other -> flags		3759364	0		=			
ANR	3759496	PtrMemberAccess	intern -> flags		3759364	0					
ANR	3759497	Identifier	intern		3759364	0					
ANR	3759498	Identifier	flags		3759364	1					
ANR	3759499	PtrMemberAccess	other -> flags		3759364	1					
ANR	3759500	Identifier	other		3759364	0					
ANR	3759501	Identifier	flags		3759364	1					
ANR	3759502	ElseStatement	else		3759364	0					
ANR	3759503	CompoundStatement		25:8:617:617	3759364	0					
ANR	3759504	ExpressionStatement	"intern -> heap = spl_ptr_heap_init ( spl_ptr_heap_zval_max_cmp , spl_ptr_heap_zval_ctor , spl_ptr_heap_zval_dtor )"	388:2:10301:10408	3759364	0	True				
ANR	3759505	AssignmentExpression	"intern -> heap = spl_ptr_heap_init ( spl_ptr_heap_zval_max_cmp , spl_ptr_heap_zval_ctor , spl_ptr_heap_zval_dtor )"		3759364	0		=			
ANR	3759506	PtrMemberAccess	intern -> heap		3759364	0					
ANR	3759507	Identifier	intern		3759364	0					
ANR	3759508	Identifier	heap		3759364	1					
ANR	3759509	CallExpression	"spl_ptr_heap_init ( spl_ptr_heap_zval_max_cmp , spl_ptr_heap_zval_ctor , spl_ptr_heap_zval_dtor )"		3759364	1					
ANR	3759510	Callee	spl_ptr_heap_init		3759364	0					
ANR	3759511	Identifier	spl_ptr_heap_init		3759364	0					
ANR	3759512	ArgumentList	spl_ptr_heap_zval_max_cmp		3759364	1					
ANR	3759513	Argument	spl_ptr_heap_zval_max_cmp		3759364	0					
ANR	3759514	Identifier	spl_ptr_heap_zval_max_cmp		3759364	0					
ANR	3759515	Argument	spl_ptr_heap_zval_ctor		3759364	1					
ANR	3759516	Identifier	spl_ptr_heap_zval_ctor		3759364	0					
ANR	3759517	Argument	spl_ptr_heap_zval_dtor		3759364	2					
ANR	3759518	Identifier	spl_ptr_heap_zval_dtor		3759364	0					
ANR	3759519	ExpressionStatement	intern -> std . handlers = & spl_handler_SplHeap	391:1:10415:10458	3759364	9	True				
ANR	3759520	AssignmentExpression	intern -> std . handlers = & spl_handler_SplHeap		3759364	0		=			
ANR	3759521	MemberAccess	intern -> std . handlers		3759364	0					
ANR	3759522	PtrMemberAccess	intern -> std		3759364	0					
ANR	3759523	Identifier	intern		3759364	0					
ANR	3759524	Identifier	std		3759364	1					
ANR	3759525	Identifier	handlers		3759364	1					
ANR	3759526	UnaryOperationExpression	& spl_handler_SplHeap		3759364	1					
ANR	3759527	UnaryOperator	&		3759364	0					
ANR	3759528	Identifier	spl_handler_SplHeap		3759364	1					
ANR	3759529	WhileStatement	while ( parent )		3759364	10					
ANR	3759530	Condition	parent	393:8:10469:10474	3759364	0	True				
ANR	3759531	Identifier	parent		3759364	0					
ANR	3759532	CompoundStatement		31:16:797:797	3759364	1					
ANR	3759533	IfStatement	if ( parent == spl_ce_SplPriorityQueue )		3759364	0					
ANR	3759534	Condition	parent == spl_ce_SplPriorityQueue	394:6:10485:10517	3759364	0	True				
ANR	3759535	EqualityExpression	parent == spl_ce_SplPriorityQueue		3759364	0		==			
ANR	3759536	Identifier	parent		3759364	0					
ANR	3759537	Identifier	spl_ce_SplPriorityQueue		3759364	1					
ANR	3759538	CompoundStatement		32:41:840:840	3759364	1					
ANR	3759539	ExpressionStatement	intern -> heap -> cmp = spl_ptr_pqueue_zval_cmp	395:3:10525:10568	3759364	0	True				
ANR	3759540	AssignmentExpression	intern -> heap -> cmp = spl_ptr_pqueue_zval_cmp		3759364	0		=			
ANR	3759541	PtrMemberAccess	intern -> heap -> cmp		3759364	0					
ANR	3759542	PtrMemberAccess	intern -> heap		3759364	0					
ANR	3759543	Identifier	intern		3759364	0					
ANR	3759544	Identifier	heap		3759364	1					
ANR	3759545	Identifier	cmp		3759364	1					
ANR	3759546	Identifier	spl_ptr_pqueue_zval_cmp		3759364	1					
ANR	3759547	ExpressionStatement	intern -> flags = SPL_PQUEUE_EXTR_DATA	396:3:10573:10609	3759364	1	True				
ANR	3759548	AssignmentExpression	intern -> flags = SPL_PQUEUE_EXTR_DATA		3759364	0		=			
ANR	3759549	PtrMemberAccess	intern -> flags		3759364	0					
ANR	3759550	Identifier	intern		3759364	0					
ANR	3759551	Identifier	flags		3759364	1					
ANR	3759552	Identifier	SPL_PQUEUE_EXTR_DATA		3759364	1					
ANR	3759553	ExpressionStatement	intern -> std . handlers = & spl_handler_SplPriorityQueue	397:3:10614:10666	3759364	2	True				
ANR	3759554	AssignmentExpression	intern -> std . handlers = & spl_handler_SplPriorityQueue		3759364	0		=			
ANR	3759555	MemberAccess	intern -> std . handlers		3759364	0					
ANR	3759556	PtrMemberAccess	intern -> std		3759364	0					
ANR	3759557	Identifier	intern		3759364	0					
ANR	3759558	Identifier	std		3759364	1					
ANR	3759559	Identifier	handlers		3759364	1					
ANR	3759560	UnaryOperationExpression	& spl_handler_SplPriorityQueue		3759364	1					
ANR	3759561	UnaryOperator	&		3759364	0					
ANR	3759562	Identifier	spl_handler_SplPriorityQueue		3759364	1					
ANR	3759563	BreakStatement	break ;	398:3:10671:10676	3759364	3	True				
ANR	3759564	IfStatement	if ( parent == spl_ce_SplMinHeap )		3759364	1					
ANR	3759565	Condition	parent == spl_ce_SplMinHeap	401:6:10689:10715	3759364	0	True				
ANR	3759566	EqualityExpression	parent == spl_ce_SplMinHeap		3759364	0		==			
ANR	3759567	Identifier	parent		3759364	0					
ANR	3759568	Identifier	spl_ce_SplMinHeap		3759364	1					
ANR	3759569	CompoundStatement		39:35:1038:1038	3759364	1					
ANR	3759570	ExpressionStatement	intern -> heap -> cmp = spl_ptr_heap_zval_min_cmp	402:3:10723:10768	3759364	0	True				
ANR	3759571	AssignmentExpression	intern -> heap -> cmp = spl_ptr_heap_zval_min_cmp		3759364	0		=			
ANR	3759572	PtrMemberAccess	intern -> heap -> cmp		3759364	0					
ANR	3759573	PtrMemberAccess	intern -> heap		3759364	0					
ANR	3759574	Identifier	intern		3759364	0					
ANR	3759575	Identifier	heap		3759364	1					
ANR	3759576	Identifier	cmp		3759364	1					
ANR	3759577	Identifier	spl_ptr_heap_zval_min_cmp		3759364	1					
ANR	3759578	BreakStatement	break ;	403:3:10773:10778	3759364	1	True				
ANR	3759579	IfStatement	if ( parent == spl_ce_SplMaxHeap )		3759364	2					
ANR	3759580	Condition	parent == spl_ce_SplMaxHeap	406:6:10791:10817	3759364	0	True				
ANR	3759581	EqualityExpression	parent == spl_ce_SplMaxHeap		3759364	0		==			
ANR	3759582	Identifier	parent		3759364	0					
ANR	3759583	Identifier	spl_ce_SplMaxHeap		3759364	1					
ANR	3759584	CompoundStatement		44:35:1140:1140	3759364	1					
ANR	3759585	ExpressionStatement	intern -> heap -> cmp = spl_ptr_heap_zval_max_cmp	407:3:10825:10870	3759364	0	True				
ANR	3759586	AssignmentExpression	intern -> heap -> cmp = spl_ptr_heap_zval_max_cmp		3759364	0		=			
ANR	3759587	PtrMemberAccess	intern -> heap -> cmp		3759364	0					
ANR	3759588	PtrMemberAccess	intern -> heap		3759364	0					
ANR	3759589	Identifier	intern		3759364	0					
ANR	3759590	Identifier	heap		3759364	1					
ANR	3759591	Identifier	cmp		3759364	1					
ANR	3759592	Identifier	spl_ptr_heap_zval_max_cmp		3759364	1					
ANR	3759593	BreakStatement	break ;	408:3:10875:10880	3759364	1	True				
ANR	3759594	IfStatement	if ( parent == spl_ce_SplHeap )		3759364	3					
ANR	3759595	Condition	parent == spl_ce_SplHeap	411:6:10893:10916	3759364	0	True				
ANR	3759596	EqualityExpression	parent == spl_ce_SplHeap		3759364	0		==			
ANR	3759597	Identifier	parent		3759364	0					
ANR	3759598	Identifier	spl_ce_SplHeap		3759364	1					
ANR	3759599	CompoundStatement		49:32:1239:1239	3759364	1					
ANR	3759600	BreakStatement	break ;	412:3:10924:10929	3759364	0	True				
ANR	3759601	ExpressionStatement	parent = parent -> parent	415:2:10938:10961	3759364	4	True				
ANR	3759602	AssignmentExpression	parent = parent -> parent		3759364	0		=			
ANR	3759603	Identifier	parent		3759364	0					
ANR	3759604	PtrMemberAccess	parent -> parent		3759364	1					
ANR	3759605	Identifier	parent		3759364	0					
ANR	3759606	Identifier	parent		3759364	1					
ANR	3759607	ExpressionStatement	inherited = 1	416:2:10965:10978	3759364	5	True				
ANR	3759608	AssignmentExpression	inherited = 1		3759364	0		=			
ANR	3759609	Identifier	inherited		3759364	0					
ANR	3759610	PrimaryExpression	1		3759364	1					
ANR	3759611	IfStatement	if ( ! parent )		3759364	11					
ANR	3759612	Condition	! parent	419:5:10989:10995	3759364	0	True				
ANR	3759613	UnaryOperationExpression	! parent		3759364	0					
ANR	3759614	UnaryOperator	!		3759364	0					
ANR	3759615	Identifier	parent		3759364	1					
ANR	3759616	CompoundStatement		57:14:1318:1318	3759364	1					
ANR	3759617	ExpressionStatement	"php_error_docref ( NULL , E_COMPILE_ERROR , ""Internal compiler error, Class is not child of SplHeap"" )"	420:2:11031:11128	3759364	0	True				
ANR	3759618	CallExpression	"php_error_docref ( NULL , E_COMPILE_ERROR , ""Internal compiler error, Class is not child of SplHeap"" )"		3759364	0					
ANR	3759619	Callee	php_error_docref		3759364	0					
ANR	3759620	Identifier	php_error_docref		3759364	0					
ANR	3759621	ArgumentList	NULL		3759364	1					
ANR	3759622	Argument	NULL		3759364	0					
ANR	3759623	Identifier	NULL		3759364	0					
ANR	3759624	Argument	E_COMPILE_ERROR		3759364	1					
ANR	3759625	Identifier	E_COMPILE_ERROR		3759364	0					
ANR	3759626	Argument	"""Internal compiler error, Class is not child of SplHeap"""		3759364	2					
ANR	3759627	PrimaryExpression	"""Internal compiler error, Class is not child of SplHeap"""		3759364	0					
ANR	3759628	IfStatement	if ( inherited )		3759364	12					
ANR	3759629	Condition	inherited	423:5:11139:11147	3759364	0	True				
ANR	3759630	Identifier	inherited		3759364	0					
ANR	3759631	CompoundStatement		61:16:1470:1470	3759364	1					
ANR	3759632	ExpressionStatement	"intern -> fptr_cmp = zend_hash_str_find_ptr ( & class_type -> function_table , ""compare"" , sizeof ( ""compare"" ) - 1 )"	424:2:11154:11258	3759364	0	True				
ANR	3759633	AssignmentExpression	"intern -> fptr_cmp = zend_hash_str_find_ptr ( & class_type -> function_table , ""compare"" , sizeof ( ""compare"" ) - 1 )"		3759364	0		=			
ANR	3759634	PtrMemberAccess	intern -> fptr_cmp		3759364	0					
ANR	3759635	Identifier	intern		3759364	0					
ANR	3759636	Identifier	fptr_cmp		3759364	1					
ANR	3759637	CallExpression	"zend_hash_str_find_ptr ( & class_type -> function_table , ""compare"" , sizeof ( ""compare"" ) - 1 )"		3759364	1					
ANR	3759638	Callee	zend_hash_str_find_ptr		3759364	0					
ANR	3759639	Identifier	zend_hash_str_find_ptr		3759364	0					
ANR	3759640	ArgumentList	& class_type -> function_table		3759364	1					
ANR	3759641	Argument	& class_type -> function_table		3759364	0					
ANR	3759642	UnaryOperationExpression	& class_type -> function_table		3759364	0					
ANR	3759643	UnaryOperator	&		3759364	0					
ANR	3759644	PtrMemberAccess	class_type -> function_table		3759364	1					
ANR	3759645	Identifier	class_type		3759364	0					
ANR	3759646	Identifier	function_table		3759364	1					
ANR	3759647	Argument	"""compare"""		3759364	1					
ANR	3759648	PrimaryExpression	"""compare"""		3759364	0					
ANR	3759649	Argument	"sizeof ( ""compare"" ) - 1"		3759364	2					
ANR	3759650	AdditiveExpression	"sizeof ( ""compare"" ) - 1"		3759364	0		-			
ANR	3759651	SizeofExpression	"sizeof ( ""compare"" )"		3759364	0					
ANR	3759652	Sizeof	sizeof		3759364	0					
ANR	3759653	PrimaryExpression	"""compare"""		3759364	1					
ANR	3759654	PrimaryExpression	1		3759364	1					
ANR	3759655	IfStatement	if ( intern -> fptr_cmp -> common . scope == parent )		3759364	1					
ANR	3759656	Condition	intern -> fptr_cmp -> common . scope == parent	425:6:11266:11305	3759364	0	True				
ANR	3759657	EqualityExpression	intern -> fptr_cmp -> common . scope == parent		3759364	0		==			
ANR	3759658	MemberAccess	intern -> fptr_cmp -> common . scope		3759364	0					
ANR	3759659	PtrMemberAccess	intern -> fptr_cmp -> common		3759364	0					
ANR	3759660	PtrMemberAccess	intern -> fptr_cmp		3759364	0					
ANR	3759661	Identifier	intern		3759364	0					
ANR	3759662	Identifier	fptr_cmp		3759364	1					
ANR	3759663	Identifier	common		3759364	1					
ANR	3759664	Identifier	scope		3759364	1					
ANR	3759665	Identifier	parent		3759364	1					
ANR	3759666	CompoundStatement		63:48:1628:1628	3759364	1					
ANR	3759667	ExpressionStatement	intern -> fptr_cmp = NULL	426:3:11313:11336	3759364	0	True				
ANR	3759668	AssignmentExpression	intern -> fptr_cmp = NULL		3759364	0		=			
ANR	3759669	PtrMemberAccess	intern -> fptr_cmp		3759364	0					
ANR	3759670	Identifier	intern		3759364	0					
ANR	3759671	Identifier	fptr_cmp		3759364	1					
ANR	3759672	Identifier	NULL		3759364	1					
ANR	3759673	ExpressionStatement	"intern -> fptr_count = zend_hash_str_find_ptr ( & class_type -> function_table , ""count"" , sizeof ( ""count"" ) - 1 )"	428:2:11344:11446	3759364	2	True				
ANR	3759674	AssignmentExpression	"intern -> fptr_count = zend_hash_str_find_ptr ( & class_type -> function_table , ""count"" , sizeof ( ""count"" ) - 1 )"		3759364	0		=			
ANR	3759675	PtrMemberAccess	intern -> fptr_count		3759364	0					
ANR	3759676	Identifier	intern		3759364	0					
ANR	3759677	Identifier	fptr_count		3759364	1					
ANR	3759678	CallExpression	"zend_hash_str_find_ptr ( & class_type -> function_table , ""count"" , sizeof ( ""count"" ) - 1 )"		3759364	1					
ANR	3759679	Callee	zend_hash_str_find_ptr		3759364	0					
ANR	3759680	Identifier	zend_hash_str_find_ptr		3759364	0					
ANR	3759681	ArgumentList	& class_type -> function_table		3759364	1					
ANR	3759682	Argument	& class_type -> function_table		3759364	0					
ANR	3759683	UnaryOperationExpression	& class_type -> function_table		3759364	0					
ANR	3759684	UnaryOperator	&		3759364	0					
ANR	3759685	PtrMemberAccess	class_type -> function_table		3759364	1					
ANR	3759686	Identifier	class_type		3759364	0					
ANR	3759687	Identifier	function_table		3759364	1					
ANR	3759688	Argument	"""count"""		3759364	1					
ANR	3759689	PrimaryExpression	"""count"""		3759364	0					
ANR	3759690	Argument	"sizeof ( ""count"" ) - 1"		3759364	2					
ANR	3759691	AdditiveExpression	"sizeof ( ""count"" ) - 1"		3759364	0		-			
ANR	3759692	SizeofExpression	"sizeof ( ""count"" )"		3759364	0					
ANR	3759693	Sizeof	sizeof		3759364	0					
ANR	3759694	PrimaryExpression	"""count"""		3759364	1					
ANR	3759695	PrimaryExpression	1		3759364	1					
ANR	3759696	IfStatement	if ( intern -> fptr_count -> common . scope == parent )		3759364	3					
ANR	3759697	Condition	intern -> fptr_count -> common . scope == parent	429:6:11454:11495	3759364	0	True				
ANR	3759698	EqualityExpression	intern -> fptr_count -> common . scope == parent		3759364	0		==			
ANR	3759699	MemberAccess	intern -> fptr_count -> common . scope		3759364	0					
ANR	3759700	PtrMemberAccess	intern -> fptr_count -> common		3759364	0					
ANR	3759701	PtrMemberAccess	intern -> fptr_count		3759364	0					
ANR	3759702	Identifier	intern		3759364	0					
ANR	3759703	Identifier	fptr_count		3759364	1					
ANR	3759704	Identifier	common		3759364	1					
ANR	3759705	Identifier	scope		3759364	1					
ANR	3759706	Identifier	parent		3759364	1					
ANR	3759707	CompoundStatement		67:50:1818:1818	3759364	1					
ANR	3759708	ExpressionStatement	intern -> fptr_count = NULL	430:3:11503:11528	3759364	0	True				
ANR	3759709	AssignmentExpression	intern -> fptr_count = NULL		3759364	0		=			
ANR	3759710	PtrMemberAccess	intern -> fptr_count		3759364	0					
ANR	3759711	Identifier	intern		3759364	0					
ANR	3759712	Identifier	fptr_count		3759364	1					
ANR	3759713	Identifier	NULL		3759364	1					
ANR	3759714	ReturnStatement	return & intern -> std ;	434:1:11539:11558	3759364	13	True				
ANR	3759715	UnaryOperationExpression	& intern -> std		3759364	0					
ANR	3759716	UnaryOperator	&		3759364	0					
ANR	3759717	PtrMemberAccess	intern -> std		3759364	1					
ANR	3759718	Identifier	intern		3759364	0					
ANR	3759719	Identifier	std		3759364	1					
ANR	3759720	ReturnType	static zend_object *		3759364	1					
ANR	3759721	Identifier	spl_heap_object_new_ex		3759364	2					
ANR	3759722	ParameterList	"zend_class_entry * class_type , zval * orig , int clone_orig"		3759364	3					
ANR	3759723	Parameter	zend_class_entry * class_type	362:43:9611:9638	3759364	0	True				
ANR	3759724	ParameterType	zend_class_entry *		3759364	0					
ANR	3759725	Identifier	class_type		3759364	1					
ANR	3759726	Parameter	zval * orig	362:73:9641:9650	3759364	1	True				
ANR	3759727	ParameterType	zval *		3759364	0					
ANR	3759728	Identifier	orig		3759364	1					
ANR	3759729	Parameter	int clone_orig	362:85:9653:9666	3759364	2	True				
ANR	3759730	ParameterType	int		3759364	0					
ANR	3759731	Identifier	clone_orig		3759364	1					
ANR	3759732	CFGEntryNode	ENTRY		3759364		True				
ANR	3759733	CFGExitNode	EXIT		3759364		True				
ANR	3759734	Symbol	parent		3759364						
ANR	3759735	Symbol	* parent		3759364						
ANR	3759736	Symbol	intern -> fptr_count -> common . scope		3759364						
ANR	3759737	Symbol	E_COMPILE_ERROR		3759364						
ANR	3759738	Symbol	& spl_handler_SplPriorityQueue		3759364						
ANR	3759739	Symbol	intern -> fptr_cmp -> common		3759364						
ANR	3759740	Symbol	class_type		3759364						
ANR	3759741	Symbol	parent -> parent		3759364						
ANR	3759742	Symbol	intern -> heap		3759364						
ANR	3759743	Symbol	ecalloc		3759364						
ANR	3759744	Symbol	intern -> std . handlers		3759364						
ANR	3759745	Symbol	other -> flags		3759364						
ANR	3759746	Symbol	spl_ptr_heap_zval_min_cmp		3759364						
ANR	3759747	Symbol	spl_ce_SplPriorityQueue		3759364						
ANR	3759748	Symbol	other -> ce_get_iterator		3759364						
ANR	3759749	Symbol	spl_ptr_heap_clone		3759364						
ANR	3759750	Symbol	NULL		3759364						
ANR	3759751	Symbol	intern -> fptr_cmp -> common . scope		3759364						
ANR	3759752	Symbol	intern -> fptr_count -> common		3759364						
ANR	3759753	Symbol	* other		3759364						
ANR	3759754	Symbol	* intern -> fptr_count		3759364						
ANR	3759755	Symbol	spl_ce_SplMaxHeap		3759364						
ANR	3759756	Symbol	Z_SPLHEAP_P		3759364						
ANR	3759757	Symbol	spl_ptr_heap_init		3759364						
ANR	3759758	Symbol	spl_ptr_heap_zval_ctor		3759364						
ANR	3759759	Symbol	& intern -> std		3759364						
ANR	3759760	Symbol	* * intern		3759364						
ANR	3759761	Symbol	other		3759364						
ANR	3759762	Symbol	spl_ce_SplMinHeap		3759364						
ANR	3759763	Symbol	intern -> fptr_count		3759364						
ANR	3759764	Symbol	intern -> flags		3759364						
ANR	3759765	Symbol	spl_ptr_heap_zval_max_cmp		3759364						
ANR	3759766	Symbol	intern -> ce_get_iterator		3759364						
ANR	3759767	Symbol	spl_ptr_heap_zval_dtor		3759364						
ANR	3759768	Symbol	& spl_handler_SplHeap		3759364						
ANR	3759769	Symbol	zend_hash_str_find_ptr		3759364						
ANR	3759770	Symbol	spl_ce_SplHeap		3759364						
ANR	3759771	Symbol	& class_type -> function_table		3759364						
ANR	3759772	Symbol	SPL_PQUEUE_EXTR_DATA		3759364						
ANR	3759773	Symbol	* intern		3759364						
ANR	3759774	Symbol	intern		3759364						
ANR	3759775	Symbol	zend_object_properties_size		3759364						
ANR	3759776	Symbol	other -> heap		3759364						
ANR	3759777	Symbol	* intern -> heap		3759364						
ANR	3759778	Symbol	intern -> std		3759364						
ANR	3759779	Symbol	intern -> fptr_cmp		3759364						
ANR	3759780	Symbol	spl_ptr_pqueue_zval_cmp		3759364						
ANR	3759781	Symbol	orig		3759364						
ANR	3759782	Symbol	inherited		3759364						
ANR	3759783	Symbol	* intern -> fptr_cmp		3759364						
ANR	3759784	Symbol	clone_orig		3759364						
ANR	3759785	Symbol	intern -> heap -> cmp		3759364						
ANR	3759786	Function	spl_heap_object_new	438:0:11573:11708							
ANR	3759787	FunctionDef	spl_heap_object_new (zend_class_entry * class_type)		3759786	0					
ANR	3759788	CompoundStatement		439:0:11653:11708	3759786	0					
ANR	3759789	ReturnStatement	"return spl_heap_object_new_ex ( class_type , NULL , 0 ) ;"	440:1:11656:11706	3759786	0	True				
ANR	3759790	CallExpression	"spl_heap_object_new_ex ( class_type , NULL , 0 )"		3759786	0					
ANR	3759791	Callee	spl_heap_object_new_ex		3759786	0					
ANR	3759792	Identifier	spl_heap_object_new_ex		3759786	0					
ANR	3759793	ArgumentList	class_type		3759786	1					
ANR	3759794	Argument	class_type		3759786	0					
ANR	3759795	Identifier	class_type		3759786	0					
ANR	3759796	Argument	NULL		3759786	1					
ANR	3759797	Identifier	NULL		3759786	0					
ANR	3759798	Argument	0		3759786	2					
ANR	3759799	PrimaryExpression	0		3759786	0					
ANR	3759800	ReturnType	static zend_object *		3759786	1					
ANR	3759801	Identifier	spl_heap_object_new		3759786	2					
ANR	3759802	ParameterList	zend_class_entry * class_type		3759786	3					
ANR	3759803	Parameter	zend_class_entry * class_type	438:40:11613:11640	3759786	0	True				
ANR	3759804	ParameterType	zend_class_entry *		3759786	0					
ANR	3759805	Identifier	class_type		3759786	1					
ANR	3759806	CFGEntryNode	ENTRY		3759786		True				
ANR	3759807	CFGExitNode	EXIT		3759786		True				
ANR	3759808	Symbol	class_type		3759786						
ANR	3759809	Symbol	NULL		3759786						
ANR	3759810	Symbol	spl_heap_object_new_ex		3759786						
ANR	3759811	Function	spl_heap_object_clone	444:0:11721:12031							
ANR	3759812	FunctionDef	spl_heap_object_clone (zval * zobject)		3759811	0					
ANR	3759813	CompoundStatement		445:0:11788:12031	3759811	0					
ANR	3759814	IdentifierDeclStatement	zend_object * old_object ;	446:1:11791:11821	3759811	0	True				
ANR	3759815	IdentifierDecl	* old_object		3759811	0					
ANR	3759816	IdentifierDeclType	zend_object *		3759811	0					
ANR	3759817	Identifier	old_object		3759811	1					
ANR	3759818	IdentifierDeclStatement	zend_object * new_object ;	447:1:11824:11854	3759811	1	True				
ANR	3759819	IdentifierDecl	* new_object		3759811	0					
ANR	3759820	IdentifierDeclType	zend_object *		3759811	0					
ANR	3759821	Identifier	new_object		3759811	1					
ANR	3759822	ExpressionStatement	old_object = Z_OBJ_P ( zobject )	449:1:11858:11888	3759811	2	True				
ANR	3759823	AssignmentExpression	old_object = Z_OBJ_P ( zobject )		3759811	0		=			
ANR	3759824	Identifier	old_object		3759811	0					
ANR	3759825	CallExpression	Z_OBJ_P ( zobject )		3759811	1					
ANR	3759826	Callee	Z_OBJ_P		3759811	0					
ANR	3759827	Identifier	Z_OBJ_P		3759811	0					
ANR	3759828	ArgumentList	zobject		3759811	1					
ANR	3759829	Argument	zobject		3759811	0					
ANR	3759830	Identifier	zobject		3759811	0					
ANR	3759831	ExpressionStatement	"new_object = spl_heap_object_new_ex ( old_object -> ce , zobject , 1 )"	450:1:11891:11954	3759811	3	True				
ANR	3759832	AssignmentExpression	"new_object = spl_heap_object_new_ex ( old_object -> ce , zobject , 1 )"		3759811	0		=			
ANR	3759833	Identifier	new_object		3759811	0					
ANR	3759834	CallExpression	"spl_heap_object_new_ex ( old_object -> ce , zobject , 1 )"		3759811	1					
ANR	3759835	Callee	spl_heap_object_new_ex		3759811	0					
ANR	3759836	Identifier	spl_heap_object_new_ex		3759811	0					
ANR	3759837	ArgumentList	old_object -> ce		3759811	1					
ANR	3759838	Argument	old_object -> ce		3759811	0					
ANR	3759839	PtrMemberAccess	old_object -> ce		3759811	0					
ANR	3759840	Identifier	old_object		3759811	0					
ANR	3759841	Identifier	ce		3759811	1					
ANR	3759842	Argument	zobject		3759811	1					
ANR	3759843	Identifier	zobject		3759811	0					
ANR	3759844	Argument	1		3759811	2					
ANR	3759845	PrimaryExpression	1		3759811	0					
ANR	3759846	ExpressionStatement	"zend_objects_clone_members ( new_object , old_object )"	452:1:11958:12008	3759811	4	True				
ANR	3759847	CallExpression	"zend_objects_clone_members ( new_object , old_object )"		3759811	0					
ANR	3759848	Callee	zend_objects_clone_members		3759811	0					
ANR	3759849	Identifier	zend_objects_clone_members		3759811	0					
ANR	3759850	ArgumentList	new_object		3759811	1					
ANR	3759851	Argument	new_object		3759811	0					
ANR	3759852	Identifier	new_object		3759811	0					
ANR	3759853	Argument	old_object		3759811	1					
ANR	3759854	Identifier	old_object		3759811	0					
ANR	3759855	ReturnStatement	return new_object ;	454:1:12012:12029	3759811	5	True				
ANR	3759856	Identifier	new_object		3759811	0					
ANR	3759857	ReturnType	static zend_object *		3759811	1					
ANR	3759858	Identifier	spl_heap_object_clone		3759811	2					
ANR	3759859	ParameterList	zval * zobject		3759811	3					
ANR	3759860	Parameter	zval * zobject	444:42:11763:11775	3759811	0	True				
ANR	3759861	ParameterType	zval *		3759811	0					
ANR	3759862	Identifier	zobject		3759811	1					
ANR	3759863	CFGEntryNode	ENTRY		3759811		True				
ANR	3759864	CFGExitNode	EXIT		3759811		True				
ANR	3759865	Symbol	zobject		3759811						
ANR	3759866	Symbol	new_object		3759811						
ANR	3759867	Symbol	* old_object		3759811						
ANR	3759868	Symbol	Z_OBJ_P		3759811						
ANR	3759869	Symbol	old_object		3759811						
ANR	3759870	Symbol	spl_heap_object_new_ex		3759811						
ANR	3759871	Symbol	old_object -> ce		3759811						
ANR	3759872	Function	spl_heap_object_count_elements	458:0:12044:12510							
ANR	3759873	FunctionDef	"spl_heap_object_count_elements (zval * object , zend_long * count)"		3759872	0					
ANR	3759874	CompoundStatement		459:0:12128:12510	3759872	0					
ANR	3759875	IdentifierDeclStatement	spl_heap_object * intern = Z_SPLHEAP_P ( object ) ;	460:1:12131:12176	3759872	0	True				
ANR	3759876	IdentifierDecl	* intern = Z_SPLHEAP_P ( object )		3759872	0					
ANR	3759877	IdentifierDeclType	spl_heap_object *		3759872	0					
ANR	3759878	Identifier	intern		3759872	1					
ANR	3759879	AssignmentExpression	* intern = Z_SPLHEAP_P ( object )		3759872	2		=			
ANR	3759880	Identifier	intern		3759872	0					
ANR	3759881	CallExpression	Z_SPLHEAP_P ( object )		3759872	1					
ANR	3759882	Callee	Z_SPLHEAP_P		3759872	0					
ANR	3759883	Identifier	Z_SPLHEAP_P		3759872	0					
ANR	3759884	ArgumentList	object		3759872	1					
ANR	3759885	Argument	object		3759872	0					
ANR	3759886	Identifier	object		3759872	0					
ANR	3759887	IfStatement	if ( intern -> fptr_count )		3759872	1					
ANR	3759888	Condition	intern -> fptr_count	462:5:12184:12201	3759872	0	True				
ANR	3759889	PtrMemberAccess	intern -> fptr_count		3759872	0					
ANR	3759890	Identifier	intern		3759872	0					
ANR	3759891	Identifier	fptr_count		3759872	1					
ANR	3759892	CompoundStatement		5:2:79:86	3759872	1					
ANR	3759893	IdentifierDeclStatement	zval rv ;	463:2:12208:12215	3759872	0	True				
ANR	3759894	IdentifierDecl	rv		3759872	0					
ANR	3759895	IdentifierDeclType	zval		3759872	0					
ANR	3759896	Identifier	rv		3759872	1					
ANR	3759897	ExpressionStatement	"zend_call_method_with_0_params ( object , intern -> std . ce , & intern -> fptr_count , ""count"" , & rv )"	464:2:12219:12308	3759872	1	True				
ANR	3759898	CallExpression	"zend_call_method_with_0_params ( object , intern -> std . ce , & intern -> fptr_count , ""count"" , & rv )"		3759872	0					
ANR	3759899	Callee	zend_call_method_with_0_params		3759872	0					
ANR	3759900	Identifier	zend_call_method_with_0_params		3759872	0					
ANR	3759901	ArgumentList	object		3759872	1					
ANR	3759902	Argument	object		3759872	0					
ANR	3759903	Identifier	object		3759872	0					
ANR	3759904	Argument	intern -> std . ce		3759872	1					
ANR	3759905	MemberAccess	intern -> std . ce		3759872	0					
ANR	3759906	PtrMemberAccess	intern -> std		3759872	0					
ANR	3759907	Identifier	intern		3759872	0					
ANR	3759908	Identifier	std		3759872	1					
ANR	3759909	Identifier	ce		3759872	1					
ANR	3759910	Argument	& intern -> fptr_count		3759872	2					
ANR	3759911	UnaryOperationExpression	& intern -> fptr_count		3759872	0					
ANR	3759912	UnaryOperator	&		3759872	0					
ANR	3759913	PtrMemberAccess	intern -> fptr_count		3759872	1					
ANR	3759914	Identifier	intern		3759872	0					
ANR	3759915	Identifier	fptr_count		3759872	1					
ANR	3759916	Argument	"""count"""		3759872	3					
ANR	3759917	PrimaryExpression	"""count"""		3759872	0					
ANR	3759918	Argument	& rv		3759872	4					
ANR	3759919	UnaryOperationExpression	& rv		3759872	0					
ANR	3759920	UnaryOperator	&		3759872	0					
ANR	3759921	Identifier	rv		3759872	1					
ANR	3759922	IfStatement	if ( ! Z_ISUNDEF ( rv ) )		3759872	2					
ANR	3759923	Condition	! Z_ISUNDEF ( rv )	465:6:12316:12329	3759872	0	True				
ANR	3759924	UnaryOperationExpression	! Z_ISUNDEF ( rv )		3759872	0					
ANR	3759925	UnaryOperator	!		3759872	0					
ANR	3759926	CallExpression	Z_ISUNDEF ( rv )		3759872	1					
ANR	3759927	Callee	Z_ISUNDEF		3759872	0					
ANR	3759928	Identifier	Z_ISUNDEF		3759872	0					
ANR	3759929	ArgumentList	rv		3759872	1					
ANR	3759930	Argument	rv		3759872	0					
ANR	3759931	Identifier	rv		3759872	0					
ANR	3759932	CompoundStatement		7:22:203:203	3759872	1					
ANR	3759933	ExpressionStatement	* count = zval_get_long ( & rv )	466:3:12337:12364	3759872	0	True				
ANR	3759934	AssignmentExpression	* count = zval_get_long ( & rv )		3759872	0		=			
ANR	3759935	UnaryOperationExpression	* count		3759872	0					
ANR	3759936	UnaryOperator	*		3759872	0					
ANR	3759937	Identifier	count		3759872	1					
ANR	3759938	CallExpression	zval_get_long ( & rv )		3759872	1					
ANR	3759939	Callee	zval_get_long		3759872	0					
ANR	3759940	Identifier	zval_get_long		3759872	0					
ANR	3759941	ArgumentList	& rv		3759872	1					
ANR	3759942	Argument	& rv		3759872	0					
ANR	3759943	UnaryOperationExpression	& rv		3759872	0					
ANR	3759944	UnaryOperator	&		3759872	0					
ANR	3759945	Identifier	rv		3759872	1					
ANR	3759946	ExpressionStatement	zval_ptr_dtor ( & rv )	467:3:12369:12387	3759872	1	True				
ANR	3759947	CallExpression	zval_ptr_dtor ( & rv )		3759872	0					
ANR	3759948	Callee	zval_ptr_dtor		3759872	0					
ANR	3759949	Identifier	zval_ptr_dtor		3759872	0					
ANR	3759950	ArgumentList	& rv		3759872	1					
ANR	3759951	Argument	& rv		3759872	0					
ANR	3759952	UnaryOperationExpression	& rv		3759872	0					
ANR	3759953	UnaryOperator	&		3759872	0					
ANR	3759954	Identifier	rv		3759872	1					
ANR	3759955	ReturnStatement	return SUCCESS ;	468:3:12392:12406	3759872	2	True				
ANR	3759956	Identifier	SUCCESS		3759872	0					
ANR	3759957	ExpressionStatement	* count = 0	470:2:12414:12424	3759872	3	True				
ANR	3759958	AssignmentExpression	* count = 0		3759872	0		=			
ANR	3759959	UnaryOperationExpression	* count		3759872	0					
ANR	3759960	UnaryOperator	*		3759872	0					
ANR	3759961	Identifier	count		3759872	1					
ANR	3759962	PrimaryExpression	0		3759872	1					
ANR	3759963	ReturnStatement	return FAILURE ;	471:2:12428:12442	3759872	4	True				
ANR	3759964	Identifier	FAILURE		3759872	0					
ANR	3759965	ExpressionStatement	* count = spl_ptr_heap_count ( intern -> heap )	474:1:12449:12490	3759872	2	True				
ANR	3759966	AssignmentExpression	* count = spl_ptr_heap_count ( intern -> heap )		3759872	0		=			
ANR	3759967	UnaryOperationExpression	* count		3759872	0					
ANR	3759968	UnaryOperator	*		3759872	0					
ANR	3759969	Identifier	count		3759872	1					
ANR	3759970	CallExpression	spl_ptr_heap_count ( intern -> heap )		3759872	1					
ANR	3759971	Callee	spl_ptr_heap_count		3759872	0					
ANR	3759972	Identifier	spl_ptr_heap_count		3759872	0					
ANR	3759973	ArgumentList	intern -> heap		3759872	1					
ANR	3759974	Argument	intern -> heap		3759872	0					
ANR	3759975	PtrMemberAccess	intern -> heap		3759872	0					
ANR	3759976	Identifier	intern		3759872	0					
ANR	3759977	Identifier	heap		3759872	1					
ANR	3759978	ReturnStatement	return SUCCESS ;	476:1:12494:12508	3759872	3	True				
ANR	3759979	Identifier	SUCCESS		3759872	0					
ANR	3759980	ReturnType	static int		3759872	1					
ANR	3759981	Identifier	spl_heap_object_count_elements		3759872	2					
ANR	3759982	ParameterList	"zval * object , zend_long * count"		3759872	3					
ANR	3759983	Parameter	zval * object	458:42:12086:12097	3759872	0	True				
ANR	3759984	ParameterType	zval *		3759872	0					
ANR	3759985	Identifier	object		3759872	1					
ANR	3759986	Parameter	zend_long * count	458:56:12100:12115	3759872	1	True				
ANR	3759987	ParameterType	zend_long *		3759872	0					
ANR	3759988	Identifier	count		3759872	1					
ANR	3759989	CFGEntryNode	ENTRY		3759872		True				
ANR	3759990	CFGExitNode	EXIT		3759872		True				
ANR	3759991	Symbol	* intern		3759872						
ANR	3759992	Symbol	intern		3759872						
ANR	3759993	Symbol	SUCCESS		3759872						
ANR	3759994	Symbol	rv		3759872						
ANR	3759995	Symbol	Z_ISUNDEF		3759872						
ANR	3759996	Symbol	count		3759872						
ANR	3759997	Symbol	spl_ptr_heap_count		3759872						
ANR	3759998	Symbol	FAILURE		3759872						
ANR	3759999	Symbol	intern -> fptr_count		3759872						
ANR	3760000	Symbol	& rv		3759872						
ANR	3760001	Symbol	Z_SPLHEAP_P		3759872						
ANR	3760002	Symbol	intern -> std		3759872						
ANR	3760003	Symbol	intern -> std . ce		3759872						
ANR	3760004	Symbol	* count		3759872						
ANR	3760005	Symbol	intern -> heap		3759872						
ANR	3760006	Symbol	zval_get_long		3759872						
ANR	3760007	Symbol	& intern -> fptr_count		3759872						
ANR	3760008	Symbol	object		3759872						
ANR	3760009	Function	spl_heap_object_get_debug_info_helper	480:0:12523:13849							
ANR	3760010	FunctionDef	"spl_heap_object_get_debug_info_helper (zend_class_entry * ce , zval * obj , int * is_temp)"		3760009	0					
ANR	3760011	CompoundStatement		480:103:12626:13849	3760009	0					
ANR	3760012	IdentifierDeclStatement	spl_heap_object * intern = Z_SPLHEAP_P ( obj ) ;	481:1:12639:12681	3760009	0	True				
ANR	3760013	IdentifierDecl	* intern = Z_SPLHEAP_P ( obj )		3760009	0					
ANR	3760014	IdentifierDeclType	spl_heap_object *		3760009	0					
ANR	3760015	Identifier	intern		3760009	1					
ANR	3760016	AssignmentExpression	* intern = Z_SPLHEAP_P ( obj )		3760009	2		=			
ANR	3760017	Identifier	intern		3760009	0					
ANR	3760018	CallExpression	Z_SPLHEAP_P ( obj )		3760009	1					
ANR	3760019	Callee	Z_SPLHEAP_P		3760009	0					
ANR	3760020	Identifier	Z_SPLHEAP_P		3760009	0					
ANR	3760021	ArgumentList	obj		3760009	1					
ANR	3760022	Argument	obj		3760009	0					
ANR	3760023	Identifier	obj		3760009	0					
ANR	3760024	IdentifierDeclStatement	"zval tmp , heap_array ;"	482:1:12684:12704	3760009	1	True				
ANR	3760025	IdentifierDecl	tmp		3760009	0					
ANR	3760026	IdentifierDeclType	zval		3760009	0					
ANR	3760027	Identifier	tmp		3760009	1					
ANR	3760028	IdentifierDecl	heap_array		3760009	1					
ANR	3760029	IdentifierDeclType	zval		3760009	0					
ANR	3760030	Identifier	heap_array		3760009	1					
ANR	3760031	IdentifierDeclStatement	zend_string * pnstr ;	483:1:12707:12725	3760009	2	True				
ANR	3760032	IdentifierDecl	* pnstr		3760009	0					
ANR	3760033	IdentifierDeclType	zend_string *		3760009	0					
ANR	3760034	Identifier	pnstr		3760009	1					
ANR	3760035	IdentifierDeclStatement	HashTable * debug_info ;	484:1:12728:12749	3760009	3	True				
ANR	3760036	IdentifierDecl	* debug_info		3760009	0					
ANR	3760037	IdentifierDeclType	HashTable *		3760009	0					
ANR	3760038	Identifier	debug_info		3760009	1					
ANR	3760039	IdentifierDeclStatement	int i ;	485:1:12752:12758	3760009	4	True				
ANR	3760040	IdentifierDecl	i		3760009	0					
ANR	3760041	IdentifierDeclType	int		3760009	0					
ANR	3760042	Identifier	i		3760009	1					
ANR	3760043	ExpressionStatement	* is_temp = 1	487:1:12762:12774	3760009	5	True				
ANR	3760044	AssignmentExpression	* is_temp = 1		3760009	0		=			
ANR	3760045	UnaryOperationExpression	* is_temp		3760009	0					
ANR	3760046	UnaryOperator	*		3760009	0					
ANR	3760047	Identifier	is_temp		3760009	1					
ANR	3760048	PrimaryExpression	1		3760009	1					
ANR	3760049	IfStatement	if ( ! intern -> std . properties )		3760009	6					
ANR	3760050	Condition	! intern -> std . properties	489:5:12782:12804	3760009	0	True				
ANR	3760051	UnaryOperationExpression	! intern -> std . properties		3760009	0					
ANR	3760052	UnaryOperator	!		3760009	0					
ANR	3760053	MemberAccess	intern -> std . properties		3760009	1					
ANR	3760054	PtrMemberAccess	intern -> std		3760009	0					
ANR	3760055	Identifier	intern		3760009	0					
ANR	3760056	Identifier	std		3760009	1					
ANR	3760057	Identifier	properties		3760009	1					
ANR	3760058	CompoundStatement		10:30:180:180	3760009	1					
ANR	3760059	ExpressionStatement	rebuild_object_properties ( & intern -> std )	490:2:12811:12850	3760009	0	True				
ANR	3760060	CallExpression	rebuild_object_properties ( & intern -> std )		3760009	0					
ANR	3760061	Callee	rebuild_object_properties		3760009	0					
ANR	3760062	Identifier	rebuild_object_properties		3760009	0					
ANR	3760063	ArgumentList	& intern -> std		3760009	1					
ANR	3760064	Argument	& intern -> std		3760009	0					
ANR	3760065	UnaryOperationExpression	& intern -> std		3760009	0					
ANR	3760066	UnaryOperator	&		3760009	0					
ANR	3760067	PtrMemberAccess	intern -> std		3760009	1					
ANR	3760068	Identifier	intern		3760009	0					
ANR	3760069	Identifier	std		3760009	1					
ANR	3760070	ExpressionStatement	ALLOC_HASHTABLE ( debug_info )	493:1:12857:12884	3760009	7	True				
ANR	3760071	CallExpression	ALLOC_HASHTABLE ( debug_info )		3760009	0					
ANR	3760072	Callee	ALLOC_HASHTABLE		3760009	0					
ANR	3760073	Identifier	ALLOC_HASHTABLE		3760009	0					
ANR	3760074	ArgumentList	debug_info		3760009	1					
ANR	3760075	Argument	debug_info		3760009	0					
ANR	3760076	Identifier	debug_info		3760009	0					
ANR	3760077	ExpressionStatement	"ZEND_INIT_SYMTABLE_EX ( debug_info , zend_hash_num_elements ( intern -> std . properties ) + 1 , 0 )"	494:1:12887:12975	3760009	8	True				
ANR	3760078	CallExpression	"ZEND_INIT_SYMTABLE_EX ( debug_info , zend_hash_num_elements ( intern -> std . properties ) + 1 , 0 )"		3760009	0					
ANR	3760079	Callee	ZEND_INIT_SYMTABLE_EX		3760009	0					
ANR	3760080	Identifier	ZEND_INIT_SYMTABLE_EX		3760009	0					
ANR	3760081	ArgumentList	debug_info		3760009	1					
ANR	3760082	Argument	debug_info		3760009	0					
ANR	3760083	Identifier	debug_info		3760009	0					
ANR	3760084	Argument	zend_hash_num_elements ( intern -> std . properties ) + 1		3760009	1					
ANR	3760085	AdditiveExpression	zend_hash_num_elements ( intern -> std . properties ) + 1		3760009	0		+			
ANR	3760086	CallExpression	zend_hash_num_elements ( intern -> std . properties )		3760009	0					
ANR	3760087	Callee	zend_hash_num_elements		3760009	0					
ANR	3760088	Identifier	zend_hash_num_elements		3760009	0					
ANR	3760089	ArgumentList	intern -> std . properties		3760009	1					
ANR	3760090	Argument	intern -> std . properties		3760009	0					
ANR	3760091	MemberAccess	intern -> std . properties		3760009	0					
ANR	3760092	PtrMemberAccess	intern -> std		3760009	0					
ANR	3760093	Identifier	intern		3760009	0					
ANR	3760094	Identifier	std		3760009	1					
ANR	3760095	Identifier	properties		3760009	1					
ANR	3760096	PrimaryExpression	1		3760009	1					
ANR	3760097	Argument	0		3760009	2					
ANR	3760098	PrimaryExpression	0		3760009	0					
ANR	3760099	ExpressionStatement	"zend_hash_copy ( debug_info , intern -> std . properties , ( copy_ctor_func_t ) zval_add_ref )"	495:1:12978:13061	3760009	9	True				
ANR	3760100	CallExpression	"zend_hash_copy ( debug_info , intern -> std . properties , ( copy_ctor_func_t ) zval_add_ref )"		3760009	0					
ANR	3760101	Callee	zend_hash_copy		3760009	0					
ANR	3760102	Identifier	zend_hash_copy		3760009	0					
ANR	3760103	ArgumentList	debug_info		3760009	1					
ANR	3760104	Argument	debug_info		3760009	0					
ANR	3760105	Identifier	debug_info		3760009	0					
ANR	3760106	Argument	intern -> std . properties		3760009	1					
ANR	3760107	MemberAccess	intern -> std . properties		3760009	0					
ANR	3760108	PtrMemberAccess	intern -> std		3760009	0					
ANR	3760109	Identifier	intern		3760009	0					
ANR	3760110	Identifier	std		3760009	1					
ANR	3760111	Identifier	properties		3760009	1					
ANR	3760112	Argument	( copy_ctor_func_t ) zval_add_ref		3760009	2					
ANR	3760113	CastExpression	( copy_ctor_func_t ) zval_add_ref		3760009	0					
ANR	3760114	CastTarget	copy_ctor_func_t		3760009	0					
ANR	3760115	Identifier	zval_add_ref		3760009	1					
ANR	3760116	ExpressionStatement	"pnstr = spl_gen_private_prop_name ( ce , ""flags"" , sizeof ( ""flags"" ) - 1 )"	497:1:13065:13130	3760009	10	True				
ANR	3760117	AssignmentExpression	"pnstr = spl_gen_private_prop_name ( ce , ""flags"" , sizeof ( ""flags"" ) - 1 )"		3760009	0		=			
ANR	3760118	Identifier	pnstr		3760009	0					
ANR	3760119	CallExpression	"spl_gen_private_prop_name ( ce , ""flags"" , sizeof ( ""flags"" ) - 1 )"		3760009	1					
ANR	3760120	Callee	spl_gen_private_prop_name		3760009	0					
ANR	3760121	Identifier	spl_gen_private_prop_name		3760009	0					
ANR	3760122	ArgumentList	ce		3760009	1					
ANR	3760123	Argument	ce		3760009	0					
ANR	3760124	Identifier	ce		3760009	0					
ANR	3760125	Argument	"""flags"""		3760009	1					
ANR	3760126	PrimaryExpression	"""flags"""		3760009	0					
ANR	3760127	Argument	"sizeof ( ""flags"" ) - 1"		3760009	2					
ANR	3760128	AdditiveExpression	"sizeof ( ""flags"" ) - 1"		3760009	0		-			
ANR	3760129	SizeofExpression	"sizeof ( ""flags"" )"		3760009	0					
ANR	3760130	Sizeof	sizeof		3760009	0					
ANR	3760131	PrimaryExpression	"""flags"""		3760009	1					
ANR	3760132	PrimaryExpression	1		3760009	1					
ANR	3760133	ExpressionStatement	"ZVAL_LONG ( & tmp , intern -> flags )"	498:1:13133:13163	3760009	11	True				
ANR	3760134	CallExpression	"ZVAL_LONG ( & tmp , intern -> flags )"		3760009	0					
ANR	3760135	Callee	ZVAL_LONG		3760009	0					
ANR	3760136	Identifier	ZVAL_LONG		3760009	0					
ANR	3760137	ArgumentList	& tmp		3760009	1					
ANR	3760138	Argument	& tmp		3760009	0					
ANR	3760139	UnaryOperationExpression	& tmp		3760009	0					
ANR	3760140	UnaryOperator	&		3760009	0					
ANR	3760141	Identifier	tmp		3760009	1					
ANR	3760142	Argument	intern -> flags		3760009	1					
ANR	3760143	PtrMemberAccess	intern -> flags		3760009	0					
ANR	3760144	Identifier	intern		3760009	0					
ANR	3760145	Identifier	flags		3760009	1					
ANR	3760146	ExpressionStatement	"zend_hash_update ( debug_info , pnstr , & tmp )"	499:1:13166:13207	3760009	12	True				
ANR	3760147	CallExpression	"zend_hash_update ( debug_info , pnstr , & tmp )"		3760009	0					
ANR	3760148	Callee	zend_hash_update		3760009	0					
ANR	3760149	Identifier	zend_hash_update		3760009	0					
ANR	3760150	ArgumentList	debug_info		3760009	1					
ANR	3760151	Argument	debug_info		3760009	0					
ANR	3760152	Identifier	debug_info		3760009	0					
ANR	3760153	Argument	pnstr		3760009	1					
ANR	3760154	Identifier	pnstr		3760009	0					
ANR	3760155	Argument	& tmp		3760009	2					
ANR	3760156	UnaryOperationExpression	& tmp		3760009	0					
ANR	3760157	UnaryOperator	&		3760009	0					
ANR	3760158	Identifier	tmp		3760009	1					
ANR	3760159	ExpressionStatement	zend_string_release ( pnstr )	500:1:13210:13236	3760009	13	True				
ANR	3760160	CallExpression	zend_string_release ( pnstr )		3760009	0					
ANR	3760161	Callee	zend_string_release		3760009	0					
ANR	3760162	Identifier	zend_string_release		3760009	0					
ANR	3760163	ArgumentList	pnstr		3760009	1					
ANR	3760164	Argument	pnstr		3760009	0					
ANR	3760165	Identifier	pnstr		3760009	0					
ANR	3760166	ExpressionStatement	"pnstr = spl_gen_private_prop_name ( ce , ""isCorrupted"" , sizeof ( ""isCorrupted"" ) - 1 )"	502:1:13240:13317	3760009	14	True				
ANR	3760167	AssignmentExpression	"pnstr = spl_gen_private_prop_name ( ce , ""isCorrupted"" , sizeof ( ""isCorrupted"" ) - 1 )"		3760009	0		=			
ANR	3760168	Identifier	pnstr		3760009	0					
ANR	3760169	CallExpression	"spl_gen_private_prop_name ( ce , ""isCorrupted"" , sizeof ( ""isCorrupted"" ) - 1 )"		3760009	1					
ANR	3760170	Callee	spl_gen_private_prop_name		3760009	0					
ANR	3760171	Identifier	spl_gen_private_prop_name		3760009	0					
ANR	3760172	ArgumentList	ce		3760009	1					
ANR	3760173	Argument	ce		3760009	0					
ANR	3760174	Identifier	ce		3760009	0					
ANR	3760175	Argument	"""isCorrupted"""		3760009	1					
ANR	3760176	PrimaryExpression	"""isCorrupted"""		3760009	0					
ANR	3760177	Argument	"sizeof ( ""isCorrupted"" ) - 1"		3760009	2					
ANR	3760178	AdditiveExpression	"sizeof ( ""isCorrupted"" ) - 1"		3760009	0		-			
ANR	3760179	SizeofExpression	"sizeof ( ""isCorrupted"" )"		3760009	0					
ANR	3760180	Sizeof	sizeof		3760009	0					
ANR	3760181	PrimaryExpression	"""isCorrupted"""		3760009	1					
ANR	3760182	PrimaryExpression	1		3760009	1					
ANR	3760183	ExpressionStatement	"ZVAL_BOOL ( & tmp , intern -> heap -> flags & SPL_HEAP_CORRUPTED )"	503:1:13320:13375	3760009	15	True				
ANR	3760184	CallExpression	"ZVAL_BOOL ( & tmp , intern -> heap -> flags & SPL_HEAP_CORRUPTED )"		3760009	0					
ANR	3760185	Callee	ZVAL_BOOL		3760009	0					
ANR	3760186	Identifier	ZVAL_BOOL		3760009	0					
ANR	3760187	ArgumentList	& tmp		3760009	1					
ANR	3760188	Argument	& tmp		3760009	0					
ANR	3760189	UnaryOperationExpression	& tmp		3760009	0					
ANR	3760190	UnaryOperator	&		3760009	0					
ANR	3760191	Identifier	tmp		3760009	1					
ANR	3760192	Argument	intern -> heap -> flags & SPL_HEAP_CORRUPTED		3760009	1					
ANR	3760193	BitAndExpression	intern -> heap -> flags & SPL_HEAP_CORRUPTED		3760009	0		&			
ANR	3760194	PtrMemberAccess	intern -> heap -> flags		3760009	0					
ANR	3760195	PtrMemberAccess	intern -> heap		3760009	0					
ANR	3760196	Identifier	intern		3760009	0					
ANR	3760197	Identifier	heap		3760009	1					
ANR	3760198	Identifier	flags		3760009	1					
ANR	3760199	Identifier	SPL_HEAP_CORRUPTED		3760009	1					
ANR	3760200	ExpressionStatement	"zend_hash_update ( debug_info , pnstr , & tmp )"	504:1:13378:13419	3760009	16	True				
ANR	3760201	CallExpression	"zend_hash_update ( debug_info , pnstr , & tmp )"		3760009	0					
ANR	3760202	Callee	zend_hash_update		3760009	0					
ANR	3760203	Identifier	zend_hash_update		3760009	0					
ANR	3760204	ArgumentList	debug_info		3760009	1					
ANR	3760205	Argument	debug_info		3760009	0					
ANR	3760206	Identifier	debug_info		3760009	0					
ANR	3760207	Argument	pnstr		3760009	1					
ANR	3760208	Identifier	pnstr		3760009	0					
ANR	3760209	Argument	& tmp		3760009	2					
ANR	3760210	UnaryOperationExpression	& tmp		3760009	0					
ANR	3760211	UnaryOperator	&		3760009	0					
ANR	3760212	Identifier	tmp		3760009	1					
ANR	3760213	ExpressionStatement	zend_string_release ( pnstr )	505:1:13422:13448	3760009	17	True				
ANR	3760214	CallExpression	zend_string_release ( pnstr )		3760009	0					
ANR	3760215	Callee	zend_string_release		3760009	0					
ANR	3760216	Identifier	zend_string_release		3760009	0					
ANR	3760217	ArgumentList	pnstr		3760009	1					
ANR	3760218	Argument	pnstr		3760009	0					
ANR	3760219	Identifier	pnstr		3760009	0					
ANR	3760220	ExpressionStatement	array_init ( & heap_array )	507:1:13452:13475	3760009	18	True				
ANR	3760221	CallExpression	array_init ( & heap_array )		3760009	0					
ANR	3760222	Callee	array_init		3760009	0					
ANR	3760223	Identifier	array_init		3760009	0					
ANR	3760224	ArgumentList	& heap_array		3760009	1					
ANR	3760225	Argument	& heap_array		3760009	0					
ANR	3760226	UnaryOperationExpression	& heap_array		3760009	0					
ANR	3760227	UnaryOperator	&		3760009	0					
ANR	3760228	Identifier	heap_array		3760009	1					
ANR	3760229	ForStatement	for ( i = 0 ; i < intern -> heap -> count ; ++ i )		3760009	19					
ANR	3760230	ForInit	i = 0 ;	509:6:13484:13489	3760009	0	True				
ANR	3760231	AssignmentExpression	i = 0		3760009	0		=			
ANR	3760232	Identifier	i		3760009	0					
ANR	3760233	PrimaryExpression	0		3760009	1					
ANR	3760234	Condition	i < intern -> heap -> count	509:13:13491:13513	3760009	1	True				
ANR	3760235	RelationalExpression	i < intern -> heap -> count		3760009	0		<			
ANR	3760236	Identifier	i		3760009	0					
ANR	3760237	PtrMemberAccess	intern -> heap -> count		3760009	1					
ANR	3760238	PtrMemberAccess	intern -> heap		3760009	0					
ANR	3760239	Identifier	intern		3760009	0					
ANR	3760240	Identifier	heap		3760009	1					
ANR	3760241	Identifier	count		3760009	1					
ANR	3760242	UnaryExpression	++ i	509:38:13516:13518	3760009	2	True				
ANR	3760243	IncDec	++		3760009	0					
ANR	3760244	Identifier	i		3760009	1					
ANR	3760245	CompoundStatement		30:43:894:894	3760009	3					
ANR	3760246	ExpressionStatement	"add_index_zval ( & heap_array , i , & intern -> heap -> elements [ i ] )"	510:2:13525:13583	3760009	0	True				
ANR	3760247	CallExpression	"add_index_zval ( & heap_array , i , & intern -> heap -> elements [ i ] )"		3760009	0					
ANR	3760248	Callee	add_index_zval		3760009	0					
ANR	3760249	Identifier	add_index_zval		3760009	0					
ANR	3760250	ArgumentList	& heap_array		3760009	1					
ANR	3760251	Argument	& heap_array		3760009	0					
ANR	3760252	UnaryOperationExpression	& heap_array		3760009	0					
ANR	3760253	UnaryOperator	&		3760009	0					
ANR	3760254	Identifier	heap_array		3760009	1					
ANR	3760255	Argument	i		3760009	1					
ANR	3760256	Identifier	i		3760009	0					
ANR	3760257	Argument	& intern -> heap -> elements [ i ]		3760009	2					
ANR	3760258	UnaryOperationExpression	& intern -> heap -> elements [ i ]		3760009	0					
ANR	3760259	UnaryOperator	&		3760009	0					
ANR	3760260	ArrayIndexing	intern -> heap -> elements [ i ]		3760009	1					
ANR	3760261	PtrMemberAccess	intern -> heap -> elements		3760009	0					
ANR	3760262	PtrMemberAccess	intern -> heap		3760009	0					
ANR	3760263	Identifier	intern		3760009	0					
ANR	3760264	Identifier	heap		3760009	1					
ANR	3760265	Identifier	elements		3760009	1					
ANR	3760266	Identifier	i		3760009	1					
ANR	3760267	IfStatement	if ( Z_REFCOUNTED ( intern -> heap -> elements [ i ] ) )		3760009	1					
ANR	3760268	Condition	Z_REFCOUNTED ( intern -> heap -> elements [ i ] )	511:6:13591:13629	3760009	0	True				
ANR	3760269	CallExpression	Z_REFCOUNTED ( intern -> heap -> elements [ i ] )		3760009	0					
ANR	3760270	Callee	Z_REFCOUNTED		3760009	0					
ANR	3760271	Identifier	Z_REFCOUNTED		3760009	0					
ANR	3760272	ArgumentList	intern -> heap -> elements [ i ]		3760009	1					
ANR	3760273	Argument	intern -> heap -> elements [ i ]		3760009	0					
ANR	3760274	ArrayIndexing	intern -> heap -> elements [ i ]		3760009	0					
ANR	3760275	PtrMemberAccess	intern -> heap -> elements		3760009	0					
ANR	3760276	PtrMemberAccess	intern -> heap		3760009	0					
ANR	3760277	Identifier	intern		3760009	0					
ANR	3760278	Identifier	heap		3760009	1					
ANR	3760279	Identifier	elements		3760009	1					
ANR	3760280	Identifier	i		3760009	1					
ANR	3760281	CompoundStatement		32:47:1005:1005	3760009	1					
ANR	3760282	ExpressionStatement	Z_ADDREF ( intern -> heap -> elements [ i ] )	512:3:13637:13672	3760009	0	True				
ANR	3760283	CallExpression	Z_ADDREF ( intern -> heap -> elements [ i ] )		3760009	0					
ANR	3760284	Callee	Z_ADDREF		3760009	0					
ANR	3760285	Identifier	Z_ADDREF		3760009	0					
ANR	3760286	ArgumentList	intern -> heap -> elements [ i ]		3760009	1					
ANR	3760287	Argument	intern -> heap -> elements [ i ]		3760009	0					
ANR	3760288	ArrayIndexing	intern -> heap -> elements [ i ]		3760009	0					
ANR	3760289	PtrMemberAccess	intern -> heap -> elements		3760009	0					
ANR	3760290	PtrMemberAccess	intern -> heap		3760009	0					
ANR	3760291	Identifier	intern		3760009	0					
ANR	3760292	Identifier	heap		3760009	1					
ANR	3760293	Identifier	elements		3760009	1					
ANR	3760294	Identifier	i		3760009	1					
ANR	3760295	ExpressionStatement	"pnstr = spl_gen_private_prop_name ( ce , ""heap"" , sizeof ( ""heap"" ) - 1 )"	516:1:13683:13746	3760009	20	True				
ANR	3760296	AssignmentExpression	"pnstr = spl_gen_private_prop_name ( ce , ""heap"" , sizeof ( ""heap"" ) - 1 )"		3760009	0		=			
ANR	3760297	Identifier	pnstr		3760009	0					
ANR	3760298	CallExpression	"spl_gen_private_prop_name ( ce , ""heap"" , sizeof ( ""heap"" ) - 1 )"		3760009	1					
ANR	3760299	Callee	spl_gen_private_prop_name		3760009	0					
ANR	3760300	Identifier	spl_gen_private_prop_name		3760009	0					
ANR	3760301	ArgumentList	ce		3760009	1					
ANR	3760302	Argument	ce		3760009	0					
ANR	3760303	Identifier	ce		3760009	0					
ANR	3760304	Argument	"""heap"""		3760009	1					
ANR	3760305	PrimaryExpression	"""heap"""		3760009	0					
ANR	3760306	Argument	"sizeof ( ""heap"" ) - 1"		3760009	2					
ANR	3760307	AdditiveExpression	"sizeof ( ""heap"" ) - 1"		3760009	0		-			
ANR	3760308	SizeofExpression	"sizeof ( ""heap"" )"		3760009	0					
ANR	3760309	Sizeof	sizeof		3760009	0					
ANR	3760310	PrimaryExpression	"""heap"""		3760009	1					
ANR	3760311	PrimaryExpression	1		3760009	1					
ANR	3760312	ExpressionStatement	"zend_hash_update ( debug_info , pnstr , & heap_array )"	517:1:13749:13797	3760009	21	True				
ANR	3760313	CallExpression	"zend_hash_update ( debug_info , pnstr , & heap_array )"		3760009	0					
ANR	3760314	Callee	zend_hash_update		3760009	0					
ANR	3760315	Identifier	zend_hash_update		3760009	0					
ANR	3760316	ArgumentList	debug_info		3760009	1					
ANR	3760317	Argument	debug_info		3760009	0					
ANR	3760318	Identifier	debug_info		3760009	0					
ANR	3760319	Argument	pnstr		3760009	1					
ANR	3760320	Identifier	pnstr		3760009	0					
ANR	3760321	Argument	& heap_array		3760009	2					
ANR	3760322	UnaryOperationExpression	& heap_array		3760009	0					
ANR	3760323	UnaryOperator	&		3760009	0					
ANR	3760324	Identifier	heap_array		3760009	1					
ANR	3760325	ExpressionStatement	zend_string_release ( pnstr )	518:1:13800:13826	3760009	22	True				
ANR	3760326	CallExpression	zend_string_release ( pnstr )		3760009	0					
ANR	3760327	Callee	zend_string_release		3760009	0					
ANR	3760328	Identifier	zend_string_release		3760009	0					
ANR	3760329	ArgumentList	pnstr		3760009	1					
ANR	3760330	Argument	pnstr		3760009	0					
ANR	3760331	Identifier	pnstr		3760009	0					
ANR	3760332	ReturnStatement	return debug_info ;	520:1:13830:13847	3760009	23	True				
ANR	3760333	Identifier	debug_info		3760009	0					
ANR	3760334	ReturnType	static HashTable *		3760009	1					
ANR	3760335	Identifier	spl_heap_object_get_debug_info_helper		3760009	2					
ANR	3760336	ParameterList	"zend_class_entry * ce , zval * obj , int * is_temp"		3760009	3					
ANR	3760337	Parameter	zend_class_entry * ce	480:56:12579:12598	3760009	0	True				
ANR	3760338	ParameterType	zend_class_entry *		3760009	0					
ANR	3760339	Identifier	ce		3760009	1					
ANR	3760340	Parameter	zval * obj	480:78:12601:12609	3760009	1	True				
ANR	3760341	ParameterType	zval *		3760009	0					
ANR	3760342	Identifier	obj		3760009	1					
ANR	3760343	Parameter	int * is_temp	480:89:12612:12623	3760009	2	True				
ANR	3760344	ParameterType	int *		3760009	0					
ANR	3760345	Identifier	is_temp		3760009	1					
ANR	3760346	CFGEntryNode	ENTRY		3760009		True				
ANR	3760347	CFGExitNode	EXIT		3760009		True				
ANR	3760348	Symbol	* intern -> heap -> elements		3760009						
ANR	3760349	Symbol	intern -> heap -> flags		3760009						
ANR	3760350	Symbol	* * * intern		3760009						
ANR	3760351	Symbol	heap_array		3760009						
ANR	3760352	Symbol	spl_gen_private_prop_name		3760009						
ANR	3760353	Symbol	intern -> heap -> elements		3760009						
ANR	3760354	Symbol	intern -> flags		3760009						
ANR	3760355	Symbol	debug_info		3760009						
ANR	3760356	Symbol	is_temp		3760009						
ANR	3760357	Symbol	intern -> heap		3760009						
ANR	3760358	Symbol	tmp		3760009						
ANR	3760359	Symbol	* intern		3760009						
ANR	3760360	Symbol	ce		3760009						
ANR	3760361	Symbol	intern		3760009						
ANR	3760362	Symbol	zend_hash_num_elements		3760009						
ANR	3760363	Symbol	* * intern -> heap		3760009						
ANR	3760364	Symbol	i		3760009						
ANR	3760365	Symbol	pnstr		3760009						
ANR	3760366	Symbol	* is_temp		3760009						
ANR	3760367	Symbol	SPL_HEAP_CORRUPTED		3760009						
ANR	3760368	Symbol	Z_SPLHEAP_P		3760009						
ANR	3760369	Symbol	* intern -> heap		3760009						
ANR	3760370	Symbol	intern -> heap -> count		3760009						
ANR	3760371	Symbol	intern -> std		3760009						
ANR	3760372	Symbol	* i		3760009						
ANR	3760373	Symbol	obj		3760009						
ANR	3760374	Symbol	intern -> std . properties		3760009						
ANR	3760375	Symbol	& intern -> std		3760009						
ANR	3760376	Symbol	zval_add_ref		3760009						
ANR	3760377	Symbol	& tmp		3760009						
ANR	3760378	Symbol	* * intern		3760009						
ANR	3760379	Symbol	& heap_array		3760009						
ANR	3760380	Symbol	Z_REFCOUNTED		3760009						
ANR	3760381	Function	spl_heap_object_get_gc	524:0:13862:14132							
ANR	3760382	FunctionDef	"spl_heap_object_get_gc (zval * obj , zval * * gc_data , int * gc_data_count)"		3760381	0					
ANR	3760383	CompoundStatement		525:0:13960:14132	3760381	0					
ANR	3760384	IdentifierDeclStatement	spl_heap_object * intern = Z_SPLHEAP_P ( obj ) ;	526:1:13963:14005	3760381	0	True				
ANR	3760385	IdentifierDecl	* intern = Z_SPLHEAP_P ( obj )		3760381	0					
ANR	3760386	IdentifierDeclType	spl_heap_object *		3760381	0					
ANR	3760387	Identifier	intern		3760381	1					
ANR	3760388	AssignmentExpression	* intern = Z_SPLHEAP_P ( obj )		3760381	2		=			
ANR	3760389	Identifier	intern		3760381	0					
ANR	3760390	CallExpression	Z_SPLHEAP_P ( obj )		3760381	1					
ANR	3760391	Callee	Z_SPLHEAP_P		3760381	0					
ANR	3760392	Identifier	Z_SPLHEAP_P		3760381	0					
ANR	3760393	ArgumentList	obj		3760381	1					
ANR	3760394	Argument	obj		3760381	0					
ANR	3760395	Identifier	obj		3760381	0					
ANR	3760396	ExpressionStatement	* gc_data = intern -> heap -> elements	527:1:14008:14041	3760381	1	True				
ANR	3760397	AssignmentExpression	* gc_data = intern -> heap -> elements		3760381	0		=			
ANR	3760398	UnaryOperationExpression	* gc_data		3760381	0					
ANR	3760399	UnaryOperator	*		3760381	0					
ANR	3760400	Identifier	gc_data		3760381	1					
ANR	3760401	PtrMemberAccess	intern -> heap -> elements		3760381	1					
ANR	3760402	PtrMemberAccess	intern -> heap		3760381	0					
ANR	3760403	Identifier	intern		3760381	0					
ANR	3760404	Identifier	heap		3760381	1					
ANR	3760405	Identifier	elements		3760381	1					
ANR	3760406	ExpressionStatement	* gc_data_count = intern -> heap -> count	528:1:14044:14080	3760381	2	True				
ANR	3760407	AssignmentExpression	* gc_data_count = intern -> heap -> count		3760381	0		=			
ANR	3760408	UnaryOperationExpression	* gc_data_count		3760381	0					
ANR	3760409	UnaryOperator	*		3760381	0					
ANR	3760410	Identifier	gc_data_count		3760381	1					
ANR	3760411	PtrMemberAccess	intern -> heap -> count		3760381	1					
ANR	3760412	PtrMemberAccess	intern -> heap		3760381	0					
ANR	3760413	Identifier	intern		3760381	0					
ANR	3760414	Identifier	heap		3760381	1					
ANR	3760415	Identifier	count		3760381	1					
ANR	3760416	ReturnStatement	return std_object_handlers . get_properties ( obj ) ;	530:1:14084:14130	3760381	3	True				
ANR	3760417	CallExpression	std_object_handlers . get_properties ( obj )		3760381	0					
ANR	3760418	Callee	std_object_handlers . get_properties		3760381	0					
ANR	3760419	MemberAccess	std_object_handlers . get_properties		3760381	0					
ANR	3760420	Identifier	std_object_handlers		3760381	0					
ANR	3760421	Identifier	get_properties		3760381	1					
ANR	3760422	ArgumentList	obj		3760381	1					
ANR	3760423	Argument	obj		3760381	0					
ANR	3760424	Identifier	obj		3760381	0					
ANR	3760425	ReturnType	static HashTable *		3760381	1					
ANR	3760426	Identifier	spl_heap_object_get_gc		3760381	2					
ANR	3760427	ParameterList	"zval * obj , zval * * gc_data , int * gc_data_count"		3760381	3					
ANR	3760428	Parameter	zval * obj	524:41:13903:13911	3760381	0	True				
ANR	3760429	ParameterType	zval *		3760381	0					
ANR	3760430	Identifier	obj		3760381	1					
ANR	3760431	Parameter	zval * * gc_data	524:52:13914:13927	3760381	1	True				
ANR	3760432	ParameterType	zval * *		3760381	0					
ANR	3760433	Identifier	gc_data		3760381	1					
ANR	3760434	Parameter	int * gc_data_count	524:68:13930:13947	3760381	2	True				
ANR	3760435	ParameterType	int *		3760381	0					
ANR	3760436	Identifier	gc_data_count		3760381	1					
ANR	3760437	CFGEntryNode	ENTRY		3760381		True				
ANR	3760438	CFGExitNode	EXIT		3760381		True				
ANR	3760439	Symbol	* intern		3760381						
ANR	3760440	Symbol	intern		3760381						
ANR	3760441	Symbol	* gc_data		3760381						
ANR	3760442	Symbol	intern -> heap -> elements		3760381						
ANR	3760443	Symbol	* gc_data_count		3760381						
ANR	3760444	Symbol	Z_SPLHEAP_P		3760381						
ANR	3760445	Symbol	* intern -> heap		3760381						
ANR	3760446	Symbol	intern -> heap -> count		3760381						
ANR	3760447	Symbol	gc_data_count		3760381						
ANR	3760448	Symbol	std_object_handlers		3760381						
ANR	3760449	Symbol	intern -> heap		3760381						
ANR	3760450	Symbol	obj		3760381						
ANR	3760451	Symbol	gc_data		3760381						
ANR	3760452	Symbol	* * intern		3760381						
ANR	3760453	Symbol	std_object_handlers . get_properties		3760381						
ANR	3760454	Function	spl_heap_object_get_debug_info	534:0:14145:14308							
ANR	3760455	FunctionDef	"spl_heap_object_get_debug_info (zval * obj , int * is_temp)"		3760454	0					
ANR	3760456	CompoundStatement		535:0:14229:14308	3760454	0					
ANR	3760457	ReturnStatement	"return spl_heap_object_get_debug_info_helper ( spl_ce_SplHeap , obj , is_temp ) ;"	536:1:14232:14306	3760454	0	True				
ANR	3760458	CallExpression	"spl_heap_object_get_debug_info_helper ( spl_ce_SplHeap , obj , is_temp )"		3760454	0					
ANR	3760459	Callee	spl_heap_object_get_debug_info_helper		3760454	0					
ANR	3760460	Identifier	spl_heap_object_get_debug_info_helper		3760454	0					
ANR	3760461	ArgumentList	spl_ce_SplHeap		3760454	1					
ANR	3760462	Argument	spl_ce_SplHeap		3760454	0					
ANR	3760463	Identifier	spl_ce_SplHeap		3760454	0					
ANR	3760464	Argument	obj		3760454	1					
ANR	3760465	Identifier	obj		3760454	0					
ANR	3760466	Argument	is_temp		3760454	2					
ANR	3760467	Identifier	is_temp		3760454	0					
ANR	3760468	ReturnType	static HashTable *		3760454	1					
ANR	3760469	Identifier	spl_heap_object_get_debug_info		3760454	2					
ANR	3760470	ParameterList	"zval * obj , int * is_temp"		3760454	3					
ANR	3760471	Parameter	zval * obj	534:49:14194:14202	3760454	0	True				
ANR	3760472	ParameterType	zval *		3760454	0					
ANR	3760473	Identifier	obj		3760454	1					
ANR	3760474	Parameter	int * is_temp	534:60:14205:14216	3760454	1	True				
ANR	3760475	ParameterType	int *		3760454	0					
ANR	3760476	Identifier	is_temp		3760454	1					
ANR	3760477	CFGEntryNode	ENTRY		3760454		True				
ANR	3760478	CFGExitNode	EXIT		3760454		True				
ANR	3760479	Symbol	is_temp		3760454						
ANR	3760480	Symbol	obj		3760454						
ANR	3760481	Symbol	spl_ce_SplHeap		3760454						
ANR	3760482	Symbol	spl_heap_object_get_debug_info_helper		3760454						
ANR	3760483	Function	spl_pqueue_object_get_debug_info	540:0:14321:14495							
ANR	3760484	FunctionDef	"spl_pqueue_object_get_debug_info (zval * obj , int * is_temp)"		3760483	0					
ANR	3760485	CompoundStatement		541:0:14407:14495	3760483	0					
ANR	3760486	ReturnStatement	"return spl_heap_object_get_debug_info_helper ( spl_ce_SplPriorityQueue , obj , is_temp ) ;"	542:1:14410:14493	3760483	0	True				
ANR	3760487	CallExpression	"spl_heap_object_get_debug_info_helper ( spl_ce_SplPriorityQueue , obj , is_temp )"		3760483	0					
ANR	3760488	Callee	spl_heap_object_get_debug_info_helper		3760483	0					
ANR	3760489	Identifier	spl_heap_object_get_debug_info_helper		3760483	0					
ANR	3760490	ArgumentList	spl_ce_SplPriorityQueue		3760483	1					
ANR	3760491	Argument	spl_ce_SplPriorityQueue		3760483	0					
ANR	3760492	Identifier	spl_ce_SplPriorityQueue		3760483	0					
ANR	3760493	Argument	obj		3760483	1					
ANR	3760494	Identifier	obj		3760483	0					
ANR	3760495	Argument	is_temp		3760483	2					
ANR	3760496	Identifier	is_temp		3760483	0					
ANR	3760497	ReturnType	static HashTable *		3760483	1					
ANR	3760498	Identifier	spl_pqueue_object_get_debug_info		3760483	2					
ANR	3760499	ParameterList	"zval * obj , int * is_temp"		3760483	3					
ANR	3760500	Parameter	zval * obj	540:51:14372:14380	3760483	0	True				
ANR	3760501	ParameterType	zval *		3760483	0					
ANR	3760502	Identifier	obj		3760483	1					
ANR	3760503	Parameter	int * is_temp	540:62:14383:14394	3760483	1	True				
ANR	3760504	ParameterType	int *		3760483	0					
ANR	3760505	Identifier	is_temp		3760483	1					
ANR	3760506	CFGEntryNode	ENTRY		3760483		True				
ANR	3760507	CFGExitNode	EXIT		3760483		True				
ANR	3760508	Symbol	is_temp		3760483						
ANR	3760509	Symbol	obj		3760483						
ANR	3760510	Symbol	spl_ce_SplPriorityQueue		3760483						
ANR	3760511	Symbol	spl_heap_object_get_debug_info_helper		3760483						
ANR	3760512	DeclStmt									
ANR	3760513	Decl							zend_long	zend_long	count
ANR	3760514	DeclStmt									
ANR	3760515	Decl							spl_heap_object	spl_heap_object *	intern
ANR	3760516	DeclStmt									
ANR	3760517	Decl							spl_heap_object	spl_heap_object *	intern
ANR	3760518	DeclStmt									
ANR	3760519	Decl							zval	zval *	value
ANR	3760520	DeclStmt									
ANR	3760521	Decl							spl_heap_object	spl_heap_object *	intern
ANR	3760522	DeclStmt									
ANR	3760523	Decl							spl_heap_object	spl_heap_object *	intern
ANR	3760524	DeclStmt									
ANR	3760525	Decl							zval	zval *	data
ANR	3760526	Decl							zval	zval *	priority
ANR	3760527	Decl							zval	zval	elem
ANR	3760528	DeclStmt									
ANR	3760529	Decl							spl_heap_object	spl_heap_object *	intern
ANR	3760530	DeclStmt									
ANR	3760531	Decl							zval	zval	value
ANR	3760532	Decl							zval	zval *	value_out
ANR	3760533	DeclStmt									
ANR	3760534	Decl							spl_heap_object	spl_heap_object *	intern
ANR	3760535	DeclStmt									
ANR	3760536	Decl							zval	zval *	value
ANR	3760537	Decl							zval	zval *	value_out
ANR	3760538	DeclStmt									
ANR	3760539	Decl							spl_heap_object	spl_heap_object *	intern
ANR	3760540	DeclStmt									
ANR	3760541	Decl							zend_long	zend_long	value
ANR	3760542	DeclStmt									
ANR	3760543	Decl							spl_heap_object	spl_heap_object *	intern
ANR	3760544	DeclStmt									
ANR	3760545	Decl							value	value &	SPL_PQUEUE_EXTR_MASK
ANR	3760546	DeclStmt									
ANR	3760547	Decl							spl_heap_object	spl_heap_object *	intern
ANR	3760548	DeclStmt									
ANR	3760549	Decl							spl_heap_object	spl_heap_object *	intern
ANR	3760550	DeclStmt									
ANR	3760551	Decl							flags	flags &	~SPL_HEAP_CORRUPTED
ANR	3760552	DeclStmt									
ANR	3760553	Decl							spl_heap_object	spl_heap_object *	intern
ANR	3760554	DeclStmt									
ANR	3760555	Decl							zval	zval *	a
ANR	3760556	Decl							zval	zval *	b
ANR	3760557	DeclStmt									
ANR	3760558	Decl							zval	zval *	value
ANR	3760559	DeclStmt									
ANR	3760560	Decl							spl_heap_object	spl_heap_object *	intern
ANR	3760561	DeclStmt									
ANR	3760562	Decl							zval	zval *	a
ANR	3760563	Decl							zval	zval *	b
ANR	3760564	DeclStmt									
ANR	3760565	Decl							zval	zval *	a
ANR	3760566	Decl							zval	zval *	b
ANR	3760567	Function	spl_heap_it_dtor	876:0:21899:22098							
ANR	3760568	FunctionDef	spl_heap_it_dtor (zend_object_iterator * iter)		3760567	0					
ANR	3760569	CompoundStatement		877:0:21966:22098	3760567	0					
ANR	3760570	IdentifierDeclStatement	spl_heap_it * iterator = ( spl_heap_it * ) iter ;	878:1:21969:22012	3760567	0	True				
ANR	3760571	IdentifierDecl	* iterator = ( spl_heap_it * ) iter		3760567	0					
ANR	3760572	IdentifierDeclType	spl_heap_it *		3760567	0					
ANR	3760573	Identifier	iterator		3760567	1					
ANR	3760574	AssignmentExpression	* iterator = ( spl_heap_it * ) iter		3760567	2		=			
ANR	3760575	Identifier	iterator		3760567	0					
ANR	3760576	CastExpression	( spl_heap_it * ) iter		3760567	1					
ANR	3760577	CastTarget	spl_heap_it *		3760567	0					
ANR	3760578	Identifier	iter		3760567	1					
ANR	3760579	ExpressionStatement	zend_user_it_invalidate_current ( iter )	880:1:22016:22053	3760567	1	True				
ANR	3760580	CallExpression	zend_user_it_invalidate_current ( iter )		3760567	0					
ANR	3760581	Callee	zend_user_it_invalidate_current		3760567	0					
ANR	3760582	Identifier	zend_user_it_invalidate_current		3760567	0					
ANR	3760583	ArgumentList	iter		3760567	1					
ANR	3760584	Argument	iter		3760567	0					
ANR	3760585	Identifier	iter		3760567	0					
ANR	3760586	ExpressionStatement	zval_ptr_dtor ( & iterator -> intern . it . data )	881:1:22056:22096	3760567	2	True				
ANR	3760587	CallExpression	zval_ptr_dtor ( & iterator -> intern . it . data )		3760567	0					
ANR	3760588	Callee	zval_ptr_dtor		3760567	0					
ANR	3760589	Identifier	zval_ptr_dtor		3760567	0					
ANR	3760590	ArgumentList	& iterator -> intern . it . data		3760567	1					
ANR	3760591	Argument	& iterator -> intern . it . data		3760567	0					
ANR	3760592	UnaryOperationExpression	& iterator -> intern . it . data		3760567	0					
ANR	3760593	UnaryOperator	&		3760567	0					
ANR	3760594	MemberAccess	iterator -> intern . it . data		3760567	1					
ANR	3760595	MemberAccess	iterator -> intern . it		3760567	0					
ANR	3760596	PtrMemberAccess	iterator -> intern		3760567	0					
ANR	3760597	Identifier	iterator		3760567	0					
ANR	3760598	Identifier	intern		3760567	1					
ANR	3760599	Identifier	it		3760567	1					
ANR	3760600	Identifier	data		3760567	1					
ANR	3760601	ReturnType	static void		3760567	1					
ANR	3760602	Identifier	spl_heap_it_dtor		3760567	2					
ANR	3760603	ParameterList	zend_object_iterator * iter		3760567	3					
ANR	3760604	Parameter	zend_object_iterator * iter	876:29:21928:21953	3760567	0	True				
ANR	3760605	ParameterType	zend_object_iterator *		3760567	0					
ANR	3760606	Identifier	iter		3760567	1					
ANR	3760607	CFGEntryNode	ENTRY		3760567		True				
ANR	3760608	CFGExitNode	EXIT		3760567		True				
ANR	3760609	Symbol	iterator		3760567						
ANR	3760610	Symbol	* iterator		3760567						
ANR	3760611	Symbol	iterator -> intern		3760567						
ANR	3760612	Symbol	& iterator -> intern . it . data		3760567						
ANR	3760613	Symbol	& iterator -> intern . it		3760567						
ANR	3760614	Symbol	iter		3760567						
ANR	3760615	Symbol	& iterator -> intern		3760567						
ANR	3760616	Symbol	iterator -> intern . it		3760567						
ANR	3760617	Function	spl_heap_it_rewind	885:0:22111:22247							
ANR	3760618	FunctionDef	spl_heap_it_rewind (zend_object_iterator * iter)		3760617	0					
ANR	3760619	CompoundStatement		886:0:22180:22247	3760617	0					
ANR	3760620	ReturnType	static void		3760617	1					
ANR	3760621	Identifier	spl_heap_it_rewind		3760617	2					
ANR	3760622	ParameterList	zend_object_iterator * iter		3760617	3					
ANR	3760623	Parameter	zend_object_iterator * iter	885:31:22142:22167	3760617	0	True				
ANR	3760624	ParameterType	zend_object_iterator *		3760617	0					
ANR	3760625	Identifier	iter		3760617	1					
ANR	3760626	CFGEntryNode	ENTRY		3760617		True				
ANR	3760627	CFGExitNode	EXIT		3760617		True				
ANR	3760628	Symbol	iter		3760617						
ANR	3760629	Function	spl_heap_it_valid	891:0:22260:22405							
ANR	3760630	FunctionDef	spl_heap_it_valid (zend_object_iterator * iter)		3760629	0					
ANR	3760631	CompoundStatement		892:0:22327:22405	3760629	0					
ANR	3760632	ReturnStatement	return ( ( Z_SPLHEAP_P ( & iter -> data ) ) -> heap -> count != 0 ? SUCCESS : FAILURE ) ;	893:1:22330:22403	3760629	0	True				
ANR	3760633	ConditionalExpression	( Z_SPLHEAP_P ( & iter -> data ) ) -> heap -> count != 0 ? SUCCESS : FAILURE		3760629	0					
ANR	3760634	Condition	( Z_SPLHEAP_P ( & iter -> data ) ) -> heap -> count != 0		3760629	0					
ANR	3760635	EqualityExpression	( Z_SPLHEAP_P ( & iter -> data ) ) -> heap -> count != 0		3760629	0		!=			
ANR	3760636	PtrMemberAccess	( Z_SPLHEAP_P ( & iter -> data ) ) -> heap -> count		3760629	0					
ANR	3760637	PtrMemberAccess	( Z_SPLHEAP_P ( & iter -> data ) ) -> heap		3760629	0					
ANR	3760638	CallExpression	Z_SPLHEAP_P ( & iter -> data )		3760629	0					
ANR	3760639	Callee	Z_SPLHEAP_P		3760629	0					
ANR	3760640	Identifier	Z_SPLHEAP_P		3760629	0					
ANR	3760641	ArgumentList	& iter -> data		3760629	1					
ANR	3760642	Argument	& iter -> data		3760629	0					
ANR	3760643	UnaryOperationExpression	& iter -> data		3760629	0					
ANR	3760644	UnaryOperator	&		3760629	0					
ANR	3760645	PtrMemberAccess	iter -> data		3760629	1					
ANR	3760646	Identifier	iter		3760629	0					
ANR	3760647	Identifier	data		3760629	1					
ANR	3760648	Identifier	heap		3760629	1					
ANR	3760649	Identifier	count		3760629	1					
ANR	3760650	PrimaryExpression	0		3760629	1					
ANR	3760651	Identifier	SUCCESS		3760629	1					
ANR	3760652	Identifier	FAILURE		3760629	2					
ANR	3760653	ReturnType	static int		3760629	1					
ANR	3760654	Identifier	spl_heap_it_valid		3760629	2					
ANR	3760655	ParameterList	zend_object_iterator * iter		3760629	3					
ANR	3760656	Parameter	zend_object_iterator * iter	891:29:22289:22314	3760629	0	True				
ANR	3760657	ParameterType	zend_object_iterator *		3760629	0					
ANR	3760658	Identifier	iter		3760629	1					
ANR	3760659	CFGEntryNode	ENTRY		3760629		True				
ANR	3760660	CFGExitNode	EXIT		3760629		True				
ANR	3760661	Symbol	Z_SPLHEAP_P		3760629						
ANR	3760662	Symbol	( Z_SPLHEAP_P ( & iter -> data ) ) -> heap -> count		3760629						
ANR	3760663	Symbol	& iter -> data		3760629						
ANR	3760664	Symbol	SUCCESS		3760629						
ANR	3760665	Symbol	* ( Z_SPLHEAP_P ( & iter -> data ) ) -> heap		3760629						
ANR	3760666	Symbol	* * Z_SPLHEAP_P		3760629						
ANR	3760667	Symbol	( Z_SPLHEAP_P ( & iter -> data ) ) -> heap		3760629						
ANR	3760668	Symbol	iter		3760629						
ANR	3760669	Symbol	* Z_SPLHEAP_P		3760629						
ANR	3760670	Symbol	FAILURE		3760629						
ANR	3760671	Function	spl_heap_it_get_current_data	897:0:22418:22883							
ANR	3760672	FunctionDef	spl_heap_it_get_current_data (zend_object_iterator * iter)		3760671	0					
ANR	3760673	CompoundStatement		898:0:22498:22883	3760671	0					
ANR	3760674	IdentifierDeclStatement	spl_heap_object * object = Z_SPLHEAP_P ( & iter -> data ) ;	899:1:22501:22551	3760671	0	True				
ANR	3760675	IdentifierDecl	* object = Z_SPLHEAP_P ( & iter -> data )		3760671	0					
ANR	3760676	IdentifierDeclType	spl_heap_object *		3760671	0					
ANR	3760677	Identifier	object		3760671	1					
ANR	3760678	AssignmentExpression	* object = Z_SPLHEAP_P ( & iter -> data )		3760671	2		=			
ANR	3760679	Identifier	object		3760671	0					
ANR	3760680	CallExpression	Z_SPLHEAP_P ( & iter -> data )		3760671	1					
ANR	3760681	Callee	Z_SPLHEAP_P		3760671	0					
ANR	3760682	Identifier	Z_SPLHEAP_P		3760671	0					
ANR	3760683	ArgumentList	& iter -> data		3760671	1					
ANR	3760684	Argument	& iter -> data		3760671	0					
ANR	3760685	UnaryOperationExpression	& iter -> data		3760671	0					
ANR	3760686	UnaryOperator	&		3760671	0					
ANR	3760687	PtrMemberAccess	iter -> data		3760671	1					
ANR	3760688	Identifier	iter		3760671	0					
ANR	3760689	Identifier	data		3760671	1					
ANR	3760690	IdentifierDeclStatement	zval * element = & object -> heap -> elements [ 0 ] ;	900:1:22554:22596	3760671	1	True				
ANR	3760691	IdentifierDecl	* element = & object -> heap -> elements [ 0 ]		3760671	0					
ANR	3760692	IdentifierDeclType	zval *		3760671	0					
ANR	3760693	Identifier	element		3760671	1					
ANR	3760694	AssignmentExpression	* element = & object -> heap -> elements [ 0 ]		3760671	2		=			
ANR	3760695	Identifier	element		3760671	0					
ANR	3760696	UnaryOperationExpression	& object -> heap -> elements [ 0 ]		3760671	1					
ANR	3760697	UnaryOperator	&		3760671	0					
ANR	3760698	ArrayIndexing	object -> heap -> elements [ 0 ]		3760671	1					
ANR	3760699	PtrMemberAccess	object -> heap -> elements		3760671	0					
ANR	3760700	PtrMemberAccess	object -> heap		3760671	0					
ANR	3760701	Identifier	object		3760671	0					
ANR	3760702	Identifier	heap		3760671	1					
ANR	3760703	Identifier	elements		3760671	1					
ANR	3760704	PrimaryExpression	0		3760671	1					
ANR	3760705	IfStatement	if ( object -> heap -> flags & SPL_HEAP_CORRUPTED )		3760671	2					
ANR	3760706	Condition	object -> heap -> flags & SPL_HEAP_CORRUPTED	902:5:22604:22643	3760671	0	True				
ANR	3760707	BitAndExpression	object -> heap -> flags & SPL_HEAP_CORRUPTED		3760671	0		&			
ANR	3760708	PtrMemberAccess	object -> heap -> flags		3760671	0					
ANR	3760709	PtrMemberAccess	object -> heap		3760671	0					
ANR	3760710	Identifier	object		3760671	0					
ANR	3760711	Identifier	heap		3760671	1					
ANR	3760712	Identifier	flags		3760671	1					
ANR	3760713	Identifier	SPL_HEAP_CORRUPTED		3760671	1					
ANR	3760714	CompoundStatement		5:47:147:147	3760671	1					
ANR	3760715	ExpressionStatement	"zend_throw_exception ( spl_ce_RuntimeException , ""Heap is corrupted, heap properties are no longer ensured."" , 0 )"	903:2:22650:22759	3760671	0	True				
ANR	3760716	CallExpression	"zend_throw_exception ( spl_ce_RuntimeException , ""Heap is corrupted, heap properties are no longer ensured."" , 0 )"		3760671	0					
ANR	3760717	Callee	zend_throw_exception		3760671	0					
ANR	3760718	Identifier	zend_throw_exception		3760671	0					
ANR	3760719	ArgumentList	spl_ce_RuntimeException		3760671	1					
ANR	3760720	Argument	spl_ce_RuntimeException		3760671	0					
ANR	3760721	Identifier	spl_ce_RuntimeException		3760671	0					
ANR	3760722	Argument	"""Heap is corrupted, heap properties are no longer ensured."""		3760671	1					
ANR	3760723	PrimaryExpression	"""Heap is corrupted, heap properties are no longer ensured."""		3760671	0					
ANR	3760724	Argument	0		3760671	2					
ANR	3760725	PrimaryExpression	0		3760671	0					
ANR	3760726	ReturnStatement	return NULL ;	904:2:22763:22774	3760671	1	True				
ANR	3760727	Identifier	NULL		3760671	0					
ANR	3760728	IfStatement	if ( object -> heap -> count == 0 || Z_ISUNDEF_P ( element ) )		3760671	3					
ANR	3760729	Condition	object -> heap -> count == 0 || Z_ISUNDEF_P ( element )	907:5:22785:22832	3760671	0	True				
ANR	3760730	OrExpression	object -> heap -> count == 0 || Z_ISUNDEF_P ( element )		3760671	0		||			
ANR	3760731	EqualityExpression	object -> heap -> count == 0		3760671	0		==			
ANR	3760732	PtrMemberAccess	object -> heap -> count		3760671	0					
ANR	3760733	PtrMemberAccess	object -> heap		3760671	0					
ANR	3760734	Identifier	object		3760671	0					
ANR	3760735	Identifier	heap		3760671	1					
ANR	3760736	Identifier	count		3760671	1					
ANR	3760737	PrimaryExpression	0		3760671	1					
ANR	3760738	CallExpression	Z_ISUNDEF_P ( element )		3760671	1					
ANR	3760739	Callee	Z_ISUNDEF_P		3760671	0					
ANR	3760740	Identifier	Z_ISUNDEF_P		3760671	0					
ANR	3760741	ArgumentList	element		3760671	1					
ANR	3760742	Argument	element		3760671	0					
ANR	3760743	Identifier	element		3760671	0					
ANR	3760744	CompoundStatement		10:55:336:336	3760671	1					
ANR	3760745	ReturnStatement	return NULL ;	908:2:22839:22850	3760671	0	True				
ANR	3760746	Identifier	NULL		3760671	0					
ANR	3760747	ElseStatement	else		3760671	0					
ANR	3760748	CompoundStatement		12:8:361:361	3760671	0					
ANR	3760749	ReturnStatement	return element ;	910:2:22864:22878	3760671	0	True				
ANR	3760750	Identifier	element		3760671	0					
ANR	3760751	ReturnType	static zval *		3760671	1					
ANR	3760752	Identifier	spl_heap_it_get_current_data		3760671	2					
ANR	3760753	ParameterList	zend_object_iterator * iter		3760671	3					
ANR	3760754	Parameter	zend_object_iterator * iter	897:42:22460:22485	3760671	0	True				
ANR	3760755	ParameterType	zend_object_iterator *		3760671	0					
ANR	3760756	Identifier	iter		3760671	1					
ANR	3760757	CFGEntryNode	ENTRY		3760671		True				
ANR	3760758	CFGExitNode	EXIT		3760671		True				
ANR	3760759	Symbol	object -> heap -> elements		3760671						
ANR	3760760	Symbol	NULL		3760671						
ANR	3760761	Symbol	iter		3760671						
ANR	3760762	Symbol	* object		3760671						
ANR	3760763	Symbol	* object -> heap		3760671						
ANR	3760764	Symbol	SPL_HEAP_CORRUPTED		3760671						
ANR	3760765	Symbol	Z_SPLHEAP_P		3760671						
ANR	3760766	Symbol	& iter -> data		3760671						
ANR	3760767	Symbol	* * object		3760671						
ANR	3760768	Symbol	object -> heap -> count		3760671						
ANR	3760769	Symbol	object -> heap		3760671						
ANR	3760770	Symbol	object -> heap -> flags		3760671						
ANR	3760771	Symbol	Z_ISUNDEF_P		3760671						
ANR	3760772	Symbol	spl_ce_RuntimeException		3760671						
ANR	3760773	Symbol	object		3760671						
ANR	3760774	Symbol	element		3760671						
ANR	3760775	Function	spl_pqueue_it_get_current_data	915:0:22896:23530							
ANR	3760776	FunctionDef	spl_pqueue_it_get_current_data (zend_object_iterator * iter)		3760775	0					
ANR	3760777	CompoundStatement		916:0:22978:23530	3760775	0					
ANR	3760778	IdentifierDeclStatement	spl_heap_object * object = Z_SPLHEAP_P ( & iter -> data ) ;	917:1:22981:23031	3760775	0	True				
ANR	3760779	IdentifierDecl	* object = Z_SPLHEAP_P ( & iter -> data )		3760775	0					
ANR	3760780	IdentifierDeclType	spl_heap_object *		3760775	0					
ANR	3760781	Identifier	object		3760775	1					
ANR	3760782	AssignmentExpression	* object = Z_SPLHEAP_P ( & iter -> data )		3760775	2		=			
ANR	3760783	Identifier	object		3760775	0					
ANR	3760784	CallExpression	Z_SPLHEAP_P ( & iter -> data )		3760775	1					
ANR	3760785	Callee	Z_SPLHEAP_P		3760775	0					
ANR	3760786	Identifier	Z_SPLHEAP_P		3760775	0					
ANR	3760787	ArgumentList	& iter -> data		3760775	1					
ANR	3760788	Argument	& iter -> data		3760775	0					
ANR	3760789	UnaryOperationExpression	& iter -> data		3760775	0					
ANR	3760790	UnaryOperator	&		3760775	0					
ANR	3760791	PtrMemberAccess	iter -> data		3760775	1					
ANR	3760792	Identifier	iter		3760775	0					
ANR	3760793	Identifier	data		3760775	1					
ANR	3760794	IdentifierDeclStatement	zval * element = & object -> heap -> elements [ 0 ] ;	918:1:23034:23076	3760775	1	True				
ANR	3760795	IdentifierDecl	* element = & object -> heap -> elements [ 0 ]		3760775	0					
ANR	3760796	IdentifierDeclType	zval *		3760775	0					
ANR	3760797	Identifier	element		3760775	1					
ANR	3760798	AssignmentExpression	* element = & object -> heap -> elements [ 0 ]		3760775	2		=			
ANR	3760799	Identifier	element		3760775	0					
ANR	3760800	UnaryOperationExpression	& object -> heap -> elements [ 0 ]		3760775	1					
ANR	3760801	UnaryOperator	&		3760775	0					
ANR	3760802	ArrayIndexing	object -> heap -> elements [ 0 ]		3760775	1					
ANR	3760803	PtrMemberAccess	object -> heap -> elements		3760775	0					
ANR	3760804	PtrMemberAccess	object -> heap		3760775	0					
ANR	3760805	Identifier	object		3760775	0					
ANR	3760806	Identifier	heap		3760775	1					
ANR	3760807	Identifier	elements		3760775	1					
ANR	3760808	PrimaryExpression	0		3760775	1					
ANR	3760809	IfStatement	if ( object -> heap -> flags & SPL_HEAP_CORRUPTED )		3760775	2					
ANR	3760810	Condition	object -> heap -> flags & SPL_HEAP_CORRUPTED	920:5:23084:23123	3760775	0	True				
ANR	3760811	BitAndExpression	object -> heap -> flags & SPL_HEAP_CORRUPTED		3760775	0		&			
ANR	3760812	PtrMemberAccess	object -> heap -> flags		3760775	0					
ANR	3760813	PtrMemberAccess	object -> heap		3760775	0					
ANR	3760814	Identifier	object		3760775	0					
ANR	3760815	Identifier	heap		3760775	1					
ANR	3760816	Identifier	flags		3760775	1					
ANR	3760817	Identifier	SPL_HEAP_CORRUPTED		3760775	1					
ANR	3760818	CompoundStatement		5:47:147:147	3760775	1					
ANR	3760819	ExpressionStatement	"zend_throw_exception ( spl_ce_RuntimeException , ""Heap is corrupted, heap properties are no longer ensured."" , 0 )"	921:2:23130:23239	3760775	0	True				
ANR	3760820	CallExpression	"zend_throw_exception ( spl_ce_RuntimeException , ""Heap is corrupted, heap properties are no longer ensured."" , 0 )"		3760775	0					
ANR	3760821	Callee	zend_throw_exception		3760775	0					
ANR	3760822	Identifier	zend_throw_exception		3760775	0					
ANR	3760823	ArgumentList	spl_ce_RuntimeException		3760775	1					
ANR	3760824	Argument	spl_ce_RuntimeException		3760775	0					
ANR	3760825	Identifier	spl_ce_RuntimeException		3760775	0					
ANR	3760826	Argument	"""Heap is corrupted, heap properties are no longer ensured."""		3760775	1					
ANR	3760827	PrimaryExpression	"""Heap is corrupted, heap properties are no longer ensured."""		3760775	0					
ANR	3760828	Argument	0		3760775	2					
ANR	3760829	PrimaryExpression	0		3760775	0					
ANR	3760830	ReturnStatement	return NULL ;	922:2:23243:23254	3760775	1	True				
ANR	3760831	Identifier	NULL		3760775	0					
ANR	3760832	IfStatement	if ( object -> heap -> count == 0 || Z_ISUNDEF_P ( element ) )		3760775	3					
ANR	3760833	Condition	object -> heap -> count == 0 || Z_ISUNDEF_P ( element )	925:5:23265:23312	3760775	0	True				
ANR	3760834	OrExpression	object -> heap -> count == 0 || Z_ISUNDEF_P ( element )		3760775	0		||			
ANR	3760835	EqualityExpression	object -> heap -> count == 0		3760775	0		==			
ANR	3760836	PtrMemberAccess	object -> heap -> count		3760775	0					
ANR	3760837	PtrMemberAccess	object -> heap		3760775	0					
ANR	3760838	Identifier	object		3760775	0					
ANR	3760839	Identifier	heap		3760775	1					
ANR	3760840	Identifier	count		3760775	1					
ANR	3760841	PrimaryExpression	0		3760775	1					
ANR	3760842	CallExpression	Z_ISUNDEF_P ( element )		3760775	1					
ANR	3760843	Callee	Z_ISUNDEF_P		3760775	0					
ANR	3760844	Identifier	Z_ISUNDEF_P		3760775	0					
ANR	3760845	ArgumentList	element		3760775	1					
ANR	3760846	Argument	element		3760775	0					
ANR	3760847	Identifier	element		3760775	0					
ANR	3760848	CompoundStatement		10:55:336:336	3760775	1					
ANR	3760849	ReturnStatement	return NULL ;	926:2:23319:23330	3760775	0	True				
ANR	3760850	Identifier	NULL		3760775	0					
ANR	3760851	ElseStatement	else		3760775	0					
ANR	3760852	CompoundStatement		13:2:365:427	3760775	0					
ANR	3760853	IdentifierDeclStatement	"zval * data = spl_pqueue_extract_helper ( element , object -> flags ) ;"	928:2:23344:23406	3760775	0	True				
ANR	3760854	IdentifierDecl	"* data = spl_pqueue_extract_helper ( element , object -> flags )"		3760775	0					
ANR	3760855	IdentifierDeclType	zval *		3760775	0					
ANR	3760856	Identifier	data		3760775	1					
ANR	3760857	AssignmentExpression	"* data = spl_pqueue_extract_helper ( element , object -> flags )"		3760775	2		=			
ANR	3760858	Identifier	data		3760775	0					
ANR	3760859	CallExpression	"spl_pqueue_extract_helper ( element , object -> flags )"		3760775	1					
ANR	3760860	Callee	spl_pqueue_extract_helper		3760775	0					
ANR	3760861	Identifier	spl_pqueue_extract_helper		3760775	0					
ANR	3760862	ArgumentList	element		3760775	1					
ANR	3760863	Argument	element		3760775	0					
ANR	3760864	Identifier	element		3760775	0					
ANR	3760865	Argument	object -> flags		3760775	1					
ANR	3760866	PtrMemberAccess	object -> flags		3760775	0					
ANR	3760867	Identifier	object		3760775	0					
ANR	3760868	Identifier	flags		3760775	1					
ANR	3760869	IfStatement	if ( ! data )		3760775	1					
ANR	3760870	Condition	! data	929:6:23414:23418	3760775	0	True				
ANR	3760871	UnaryOperationExpression	! data		3760775	0					
ANR	3760872	UnaryOperator	!		3760775	0					
ANR	3760873	Identifier	data		3760775	1					
ANR	3760874	CompoundStatement		14:13:442:442	3760775	1					
ANR	3760875	ExpressionStatement	"zend_error ( E_RECOVERABLE_ERROR , ""Unable to extract from the PriorityQueue node"" )"	930:3:23426:23506	3760775	0	True				
ANR	3760876	CallExpression	"zend_error ( E_RECOVERABLE_ERROR , ""Unable to extract from the PriorityQueue node"" )"		3760775	0					
ANR	3760877	Callee	zend_error		3760775	0					
ANR	3760878	Identifier	zend_error		3760775	0					
ANR	3760879	ArgumentList	E_RECOVERABLE_ERROR		3760775	1					
ANR	3760880	Argument	E_RECOVERABLE_ERROR		3760775	0					
ANR	3760881	Identifier	E_RECOVERABLE_ERROR		3760775	0					
ANR	3760882	Argument	"""Unable to extract from the PriorityQueue node"""		3760775	1					
ANR	3760883	PrimaryExpression	"""Unable to extract from the PriorityQueue node"""		3760775	0					
ANR	3760884	ReturnStatement	return data ;	932:2:23514:23525	3760775	2	True				
ANR	3760885	Identifier	data		3760775	0					
ANR	3760886	ReturnType	static zval *		3760775	1					
ANR	3760887	Identifier	spl_pqueue_it_get_current_data		3760775	2					
ANR	3760888	ParameterList	zend_object_iterator * iter		3760775	3					
ANR	3760889	Parameter	zend_object_iterator * iter	915:44:22940:22965	3760775	0	True				
ANR	3760890	ParameterType	zend_object_iterator *		3760775	0					
ANR	3760891	Identifier	iter		3760775	1					
ANR	3760892	CFGEntryNode	ENTRY		3760775		True				
ANR	3760893	CFGExitNode	EXIT		3760775		True				
ANR	3760894	Symbol	E_RECOVERABLE_ERROR		3760775						
ANR	3760895	Symbol	object -> heap -> elements		3760775						
ANR	3760896	Symbol	NULL		3760775						
ANR	3760897	Symbol	data		3760775						
ANR	3760898	Symbol	iter		3760775						
ANR	3760899	Symbol	spl_pqueue_extract_helper		3760775						
ANR	3760900	Symbol	* object		3760775						
ANR	3760901	Symbol	* object -> heap		3760775						
ANR	3760902	Symbol	SPL_HEAP_CORRUPTED		3760775						
ANR	3760903	Symbol	Z_SPLHEAP_P		3760775						
ANR	3760904	Symbol	object -> flags		3760775						
ANR	3760905	Symbol	& iter -> data		3760775						
ANR	3760906	Symbol	* * object		3760775						
ANR	3760907	Symbol	object -> heap -> count		3760775						
ANR	3760908	Symbol	object -> heap		3760775						
ANR	3760909	Symbol	object -> heap -> flags		3760775						
ANR	3760910	Symbol	Z_ISUNDEF_P		3760775						
ANR	3760911	Symbol	spl_ce_RuntimeException		3760775						
ANR	3760912	Symbol	object		3760775						
ANR	3760913	Symbol	element		3760775						
ANR	3760914	Function	spl_heap_it_get_current_key	937:0:23543:23730							
ANR	3760915	FunctionDef	"spl_heap_it_get_current_key (zend_object_iterator * iter , zval * key)"		3760914	0					
ANR	3760916	CompoundStatement		938:0:23632:23730	3760914	0					
ANR	3760917	IdentifierDeclStatement	spl_heap_object * object = Z_SPLHEAP_P ( & iter -> data ) ;	939:1:23635:23685	3760914	0	True				
ANR	3760918	IdentifierDecl	* object = Z_SPLHEAP_P ( & iter -> data )		3760914	0					
ANR	3760919	IdentifierDeclType	spl_heap_object *		3760914	0					
ANR	3760920	Identifier	object		3760914	1					
ANR	3760921	AssignmentExpression	* object = Z_SPLHEAP_P ( & iter -> data )		3760914	2		=			
ANR	3760922	Identifier	object		3760914	0					
ANR	3760923	CallExpression	Z_SPLHEAP_P ( & iter -> data )		3760914	1					
ANR	3760924	Callee	Z_SPLHEAP_P		3760914	0					
ANR	3760925	Identifier	Z_SPLHEAP_P		3760914	0					
ANR	3760926	ArgumentList	& iter -> data		3760914	1					
ANR	3760927	Argument	& iter -> data		3760914	0					
ANR	3760928	UnaryOperationExpression	& iter -> data		3760914	0					
ANR	3760929	UnaryOperator	&		3760914	0					
ANR	3760930	PtrMemberAccess	iter -> data		3760914	1					
ANR	3760931	Identifier	iter		3760914	0					
ANR	3760932	Identifier	data		3760914	1					
ANR	3760933	ExpressionStatement	"ZVAL_LONG ( key , object -> heap -> count - 1 )"	941:1:23689:23728	3760914	1	True				
ANR	3760934	CallExpression	"ZVAL_LONG ( key , object -> heap -> count - 1 )"		3760914	0					
ANR	3760935	Callee	ZVAL_LONG		3760914	0					
ANR	3760936	Identifier	ZVAL_LONG		3760914	0					
ANR	3760937	ArgumentList	key		3760914	1					
ANR	3760938	Argument	key		3760914	0					
ANR	3760939	Identifier	key		3760914	0					
ANR	3760940	Argument	object -> heap -> count - 1		3760914	1					
ANR	3760941	AdditiveExpression	object -> heap -> count - 1		3760914	0		-			
ANR	3760942	PtrMemberAccess	object -> heap -> count		3760914	0					
ANR	3760943	PtrMemberAccess	object -> heap		3760914	0					
ANR	3760944	Identifier	object		3760914	0					
ANR	3760945	Identifier	heap		3760914	1					
ANR	3760946	Identifier	count		3760914	1					
ANR	3760947	PrimaryExpression	1		3760914	1					
ANR	3760948	ReturnType	static void		3760914	1					
ANR	3760949	Identifier	spl_heap_it_get_current_key		3760914	2					
ANR	3760950	ParameterList	"zend_object_iterator * iter , zval * key"		3760914	3					
ANR	3760951	Parameter	zend_object_iterator * iter	937:40:23583:23608	3760914	0	True				
ANR	3760952	ParameterType	zend_object_iterator *		3760914	0					
ANR	3760953	Identifier	iter		3760914	1					
ANR	3760954	Parameter	zval * key	937:68:23611:23619	3760914	1	True				
ANR	3760955	ParameterType	zval *		3760914	0					
ANR	3760956	Identifier	key		3760914	1					
ANR	3760957	CFGEntryNode	ENTRY		3760914		True				
ANR	3760958	CFGExitNode	EXIT		3760914		True				
ANR	3760959	Symbol	Z_SPLHEAP_P		3760914						
ANR	3760960	Symbol	& iter -> data		3760914						
ANR	3760961	Symbol	object -> heap -> count		3760914						
ANR	3760962	Symbol	* * object		3760914						
ANR	3760963	Symbol	iter		3760914						
ANR	3760964	Symbol	object -> heap		3760914						
ANR	3760965	Symbol	* object		3760914						
ANR	3760966	Symbol	key		3760914						
ANR	3760967	Symbol	* object -> heap		3760914						
ANR	3760968	Symbol	object		3760914						
ANR	3760969	Function	spl_heap_it_move_forward	945:0:23743:24187							
ANR	3760970	FunctionDef	spl_heap_it_move_forward (zend_object_iterator * iter)		3760969	0					
ANR	3760971	CompoundStatement		946:0:23818:24187	3760969	0					
ANR	3760972	IdentifierDeclStatement	spl_heap_object * object = Z_SPLHEAP_P ( & iter -> data ) ;	947:1:23821:23871	3760969	0	True				
ANR	3760973	IdentifierDecl	* object = Z_SPLHEAP_P ( & iter -> data )		3760969	0					
ANR	3760974	IdentifierDeclType	spl_heap_object *		3760969	0					
ANR	3760975	Identifier	object		3760969	1					
ANR	3760976	AssignmentExpression	* object = Z_SPLHEAP_P ( & iter -> data )		3760969	2		=			
ANR	3760977	Identifier	object		3760969	0					
ANR	3760978	CallExpression	Z_SPLHEAP_P ( & iter -> data )		3760969	1					
ANR	3760979	Callee	Z_SPLHEAP_P		3760969	0					
ANR	3760980	Identifier	Z_SPLHEAP_P		3760969	0					
ANR	3760981	ArgumentList	& iter -> data		3760969	1					
ANR	3760982	Argument	& iter -> data		3760969	0					
ANR	3760983	UnaryOperationExpression	& iter -> data		3760969	0					
ANR	3760984	UnaryOperator	&		3760969	0					
ANR	3760985	PtrMemberAccess	iter -> data		3760969	1					
ANR	3760986	Identifier	iter		3760969	0					
ANR	3760987	Identifier	data		3760969	1					
ANR	3760988	IdentifierDeclStatement	zval elem ;	948:1:23874:23883	3760969	1	True				
ANR	3760989	IdentifierDecl	elem		3760969	0					
ANR	3760990	IdentifierDeclType	zval		3760969	0					
ANR	3760991	Identifier	elem		3760969	1					
ANR	3760992	IfStatement	if ( object -> heap -> flags & SPL_HEAP_CORRUPTED )		3760969	2					
ANR	3760993	Condition	object -> heap -> flags & SPL_HEAP_CORRUPTED	950:5:23891:23930	3760969	0	True				
ANR	3760994	BitAndExpression	object -> heap -> flags & SPL_HEAP_CORRUPTED		3760969	0		&			
ANR	3760995	PtrMemberAccess	object -> heap -> flags		3760969	0					
ANR	3760996	PtrMemberAccess	object -> heap		3760969	0					
ANR	3760997	Identifier	object		3760969	0					
ANR	3760998	Identifier	heap		3760969	1					
ANR	3760999	Identifier	flags		3760969	1					
ANR	3761000	Identifier	SPL_HEAP_CORRUPTED		3760969	1					
ANR	3761001	CompoundStatement		5:47:114:114	3760969	1					
ANR	3761002	ExpressionStatement	"zend_throw_exception ( spl_ce_RuntimeException , ""Heap is corrupted, heap properties are no longer ensured."" , 0 )"	951:2:23937:24046	3760969	0	True				
ANR	3761003	CallExpression	"zend_throw_exception ( spl_ce_RuntimeException , ""Heap is corrupted, heap properties are no longer ensured."" , 0 )"		3760969	0					
ANR	3761004	Callee	zend_throw_exception		3760969	0					
ANR	3761005	Identifier	zend_throw_exception		3760969	0					
ANR	3761006	ArgumentList	spl_ce_RuntimeException		3760969	1					
ANR	3761007	Argument	spl_ce_RuntimeException		3760969	0					
ANR	3761008	Identifier	spl_ce_RuntimeException		3760969	0					
ANR	3761009	Argument	"""Heap is corrupted, heap properties are no longer ensured."""		3760969	1					
ANR	3761010	PrimaryExpression	"""Heap is corrupted, heap properties are no longer ensured."""		3760969	0					
ANR	3761011	Argument	0		3760969	2					
ANR	3761012	PrimaryExpression	0		3760969	0					
ANR	3761013	ReturnStatement	return ;	952:2:24050:24056	3760969	1	True				
ANR	3761014	ExpressionStatement	"spl_ptr_heap_delete_top ( object -> heap , & elem , & iter -> data )"	955:1:24063:24120	3760969	3	True				
ANR	3761015	CallExpression	"spl_ptr_heap_delete_top ( object -> heap , & elem , & iter -> data )"		3760969	0					
ANR	3761016	Callee	spl_ptr_heap_delete_top		3760969	0					
ANR	3761017	Identifier	spl_ptr_heap_delete_top		3760969	0					
ANR	3761018	ArgumentList	object -> heap		3760969	1					
ANR	3761019	Argument	object -> heap		3760969	0					
ANR	3761020	PtrMemberAccess	object -> heap		3760969	0					
ANR	3761021	Identifier	object		3760969	0					
ANR	3761022	Identifier	heap		3760969	1					
ANR	3761023	Argument	& elem		3760969	1					
ANR	3761024	UnaryOperationExpression	& elem		3760969	0					
ANR	3761025	UnaryOperator	&		3760969	0					
ANR	3761026	Identifier	elem		3760969	1					
ANR	3761027	Argument	& iter -> data		3760969	2					
ANR	3761028	UnaryOperationExpression	& iter -> data		3760969	0					
ANR	3761029	UnaryOperator	&		3760969	0					
ANR	3761030	PtrMemberAccess	iter -> data		3760969	1					
ANR	3761031	Identifier	iter		3760969	0					
ANR	3761032	Identifier	data		3760969	1					
ANR	3761033	ExpressionStatement	zval_ptr_dtor ( & elem )	957:1:24124:24144	3760969	4	True				
ANR	3761034	CallExpression	zval_ptr_dtor ( & elem )		3760969	0					
ANR	3761035	Callee	zval_ptr_dtor		3760969	0					
ANR	3761036	Identifier	zval_ptr_dtor		3760969	0					
ANR	3761037	ArgumentList	& elem		3760969	1					
ANR	3761038	Argument	& elem		3760969	0					
ANR	3761039	UnaryOperationExpression	& elem		3760969	0					
ANR	3761040	UnaryOperator	&		3760969	0					
ANR	3761041	Identifier	elem		3760969	1					
ANR	3761042	ExpressionStatement	zend_user_it_invalidate_current ( iter )	959:1:24148:24185	3760969	5	True				
ANR	3761043	CallExpression	zend_user_it_invalidate_current ( iter )		3760969	0					
ANR	3761044	Callee	zend_user_it_invalidate_current		3760969	0					
ANR	3761045	Identifier	zend_user_it_invalidate_current		3760969	0					
ANR	3761046	ArgumentList	iter		3760969	1					
ANR	3761047	Argument	iter		3760969	0					
ANR	3761048	Identifier	iter		3760969	0					
ANR	3761049	ReturnType	static void		3760969	1					
ANR	3761050	Identifier	spl_heap_it_move_forward		3760969	2					
ANR	3761051	ParameterList	zend_object_iterator * iter		3760969	3					
ANR	3761052	Parameter	zend_object_iterator * iter	945:37:23780:23805	3760969	0	True				
ANR	3761053	ParameterType	zend_object_iterator *		3760969	0					
ANR	3761054	Identifier	iter		3760969	1					
ANR	3761055	CFGEntryNode	ENTRY		3760969		True				
ANR	3761056	CFGExitNode	EXIT		3760969		True				
ANR	3761057	Symbol	elem		3760969						
ANR	3761058	Symbol	& elem		3760969						
ANR	3761059	Symbol	iter		3760969						
ANR	3761060	Symbol	* object		3760969						
ANR	3761061	Symbol	* object -> heap		3760969						
ANR	3761062	Symbol	SPL_HEAP_CORRUPTED		3760969						
ANR	3761063	Symbol	Z_SPLHEAP_P		3760969						
ANR	3761064	Symbol	& iter -> data		3760969						
ANR	3761065	Symbol	* * object		3760969						
ANR	3761066	Symbol	object -> heap		3760969						
ANR	3761067	Symbol	object -> heap -> flags		3760969						
ANR	3761068	Symbol	spl_ce_RuntimeException		3760969						
ANR	3761069	Symbol	object		3760969						
ANR	3761070	DeclStmt									
ANR	3761071	Decl							spl_heap_object	spl_heap_object *	intern
ANR	3761072	DeclStmt									
ANR	3761073	Decl							spl_heap_object	spl_heap_object *	intern
ANR	3761074	DeclStmt									
ANR	3761075	Decl							zval	zval	elem
ANR	3761076	DeclStmt									
ANR	3761077	Decl							spl_heap_object	spl_heap_object *	intern
ANR	3761078	DeclStmt									
ANR	3761079	Decl							spl_heap_object	spl_heap_object *	intern
ANR	3761080	DeclStmt									
ANR	3761081	Decl							zval	zval *	element
ANR	3761082	DeclStmt									
ANR	3761083	Decl							spl_heap_object	spl_heap_object *	intern
ANR	3761084	DeclStmt									
ANR	3761085	Decl							zval	zval *	element
ANR	3761086	DeclStmt									
ANR	3761087	Decl							zval	zval *	data
ANR	3761088	DeclStmt									
ANR	3761089	Decl							zend_object_iterator_funcs	zend_object_iterator_funcs	spl_heap_it_funcs
ANR	3761090	DeclStmt									
ANR	3761091	Decl							zend_object_iterator_funcs	zend_object_iterator_funcs	spl_pqueue_it_funcs
ANR	3761092	Function	spl_heap_get_iterator	1084:0:26805:27467							
ANR	3761093	FunctionDef	"spl_heap_get_iterator (zend_class_entry * ce , zval * object , int by_ref)"		3761092	0					
ANR	3761094	CompoundStatement		1085:0:26907:27467	3761092	0					
ANR	3761095	IdentifierDeclStatement	spl_heap_it * iterator ;	1086:1:26910:26935	3761092	0	True				
ANR	3761096	IdentifierDecl	* iterator		3761092	0					
ANR	3761097	IdentifierDeclType	spl_heap_it *		3761092	0					
ANR	3761098	Identifier	iterator		3761092	1					
ANR	3761099	IdentifierDeclStatement	spl_heap_object * heap_object = Z_SPLHEAP_P ( object ) ;	1087:1:26938:26988	3761092	1	True				
ANR	3761100	IdentifierDecl	* heap_object = Z_SPLHEAP_P ( object )		3761092	0					
ANR	3761101	IdentifierDeclType	spl_heap_object *		3761092	0					
ANR	3761102	Identifier	heap_object		3761092	1					
ANR	3761103	AssignmentExpression	* heap_object = Z_SPLHEAP_P ( object )		3761092	2		=			
ANR	3761104	Identifier	heap_object		3761092	0					
ANR	3761105	CallExpression	Z_SPLHEAP_P ( object )		3761092	1					
ANR	3761106	Callee	Z_SPLHEAP_P		3761092	0					
ANR	3761107	Identifier	Z_SPLHEAP_P		3761092	0					
ANR	3761108	ArgumentList	object		3761092	1					
ANR	3761109	Argument	object		3761092	0					
ANR	3761110	Identifier	object		3761092	0					
ANR	3761111	IfStatement	if ( by_ref )		3761092	2					
ANR	3761112	Condition	by_ref	1089:5:26996:27001	3761092	0	True				
ANR	3761113	Identifier	by_ref		3761092	0					
ANR	3761114	CompoundStatement		5:13:96:96	3761092	1					
ANR	3761115	ExpressionStatement	"zend_throw_exception ( spl_ce_RuntimeException , ""An iterator cannot be used with foreach by reference"" , 0 )"	1090:2:27008:27112	3761092	0	True				
ANR	3761116	CallExpression	"zend_throw_exception ( spl_ce_RuntimeException , ""An iterator cannot be used with foreach by reference"" , 0 )"		3761092	0					
ANR	3761117	Callee	zend_throw_exception		3761092	0					
ANR	3761118	Identifier	zend_throw_exception		3761092	0					
ANR	3761119	ArgumentList	spl_ce_RuntimeException		3761092	1					
ANR	3761120	Argument	spl_ce_RuntimeException		3761092	0					
ANR	3761121	Identifier	spl_ce_RuntimeException		3761092	0					
ANR	3761122	Argument	"""An iterator cannot be used with foreach by reference"""		3761092	1					
ANR	3761123	PrimaryExpression	"""An iterator cannot be used with foreach by reference"""		3761092	0					
ANR	3761124	Argument	0		3761092	2					
ANR	3761125	PrimaryExpression	0		3761092	0					
ANR	3761126	ReturnStatement	return NULL ;	1091:2:27116:27127	3761092	1	True				
ANR	3761127	Identifier	NULL		3761092	0					
ANR	3761128	ExpressionStatement	iterator = emalloc ( sizeof ( spl_heap_it ) )	1094:1:27134:27173	3761092	3	True				
ANR	3761129	AssignmentExpression	iterator = emalloc ( sizeof ( spl_heap_it ) )		3761092	0		=			
ANR	3761130	Identifier	iterator		3761092	0					
ANR	3761131	CallExpression	emalloc ( sizeof ( spl_heap_it ) )		3761092	1					
ANR	3761132	Callee	emalloc		3761092	0					
ANR	3761133	Identifier	emalloc		3761092	0					
ANR	3761134	ArgumentList	sizeof ( spl_heap_it )		3761092	1					
ANR	3761135	Argument	sizeof ( spl_heap_it )		3761092	0					
ANR	3761136	SizeofExpression	sizeof ( spl_heap_it )		3761092	0					
ANR	3761137	Sizeof	sizeof		3761092	0					
ANR	3761138	SizeofOperand	spl_heap_it		3761092	1					
ANR	3761139	ExpressionStatement	zend_iterator_init ( & iterator -> intern . it )	1096:1:27177:27217	3761092	4	True				
ANR	3761140	CallExpression	zend_iterator_init ( & iterator -> intern . it )		3761092	0					
ANR	3761141	Callee	zend_iterator_init		3761092	0					
ANR	3761142	Identifier	zend_iterator_init		3761092	0					
ANR	3761143	ArgumentList	& iterator -> intern . it		3761092	1					
ANR	3761144	Argument	& iterator -> intern . it		3761092	0					
ANR	3761145	UnaryOperationExpression	& iterator -> intern . it		3761092	0					
ANR	3761146	UnaryOperator	&		3761092	0					
ANR	3761147	MemberAccess	iterator -> intern . it		3761092	1					
ANR	3761148	PtrMemberAccess	iterator -> intern		3761092	0					
ANR	3761149	Identifier	iterator		3761092	0					
ANR	3761150	Identifier	intern		3761092	1					
ANR	3761151	Identifier	it		3761092	1					
ANR	3761152	ExpressionStatement	"ZVAL_COPY ( & iterator -> intern . it . data , object )"	1098:1:27221:27265	3761092	5	True				
ANR	3761153	CallExpression	"ZVAL_COPY ( & iterator -> intern . it . data , object )"		3761092	0					
ANR	3761154	Callee	ZVAL_COPY		3761092	0					
ANR	3761155	Identifier	ZVAL_COPY		3761092	0					
ANR	3761156	ArgumentList	& iterator -> intern . it . data		3761092	1					
ANR	3761157	Argument	& iterator -> intern . it . data		3761092	0					
ANR	3761158	UnaryOperationExpression	& iterator -> intern . it . data		3761092	0					
ANR	3761159	UnaryOperator	&		3761092	0					
ANR	3761160	MemberAccess	iterator -> intern . it . data		3761092	1					
ANR	3761161	MemberAccess	iterator -> intern . it		3761092	0					
ANR	3761162	PtrMemberAccess	iterator -> intern		3761092	0					
ANR	3761163	Identifier	iterator		3761092	0					
ANR	3761164	Identifier	intern		3761092	1					
ANR	3761165	Identifier	it		3761092	1					
ANR	3761166	Identifier	data		3761092	1					
ANR	3761167	Argument	object		3761092	1					
ANR	3761168	Identifier	object		3761092	0					
ANR	3761169	ExpressionStatement	iterator -> intern . it . funcs = & spl_heap_it_funcs	1099:1:27268:27314	3761092	6	True				
ANR	3761170	AssignmentExpression	iterator -> intern . it . funcs = & spl_heap_it_funcs		3761092	0		=			
ANR	3761171	MemberAccess	iterator -> intern . it . funcs		3761092	0					
ANR	3761172	MemberAccess	iterator -> intern . it		3761092	0					
ANR	3761173	PtrMemberAccess	iterator -> intern		3761092	0					
ANR	3761174	Identifier	iterator		3761092	0					
ANR	3761175	Identifier	intern		3761092	1					
ANR	3761176	Identifier	it		3761092	1					
ANR	3761177	Identifier	funcs		3761092	1					
ANR	3761178	UnaryOperationExpression	& spl_heap_it_funcs		3761092	1					
ANR	3761179	UnaryOperator	&		3761092	0					
ANR	3761180	Identifier	spl_heap_it_funcs		3761092	1					
ANR	3761181	ExpressionStatement	iterator -> intern . ce = ce	1100:1:27317:27347	3761092	7	True				
ANR	3761182	AssignmentExpression	iterator -> intern . ce = ce		3761092	0		=			
ANR	3761183	MemberAccess	iterator -> intern . ce		3761092	0					
ANR	3761184	PtrMemberAccess	iterator -> intern		3761092	0					
ANR	3761185	Identifier	iterator		3761092	0					
ANR	3761186	Identifier	intern		3761092	1					
ANR	3761187	Identifier	ce		3761092	1					
ANR	3761188	Identifier	ce		3761092	1					
ANR	3761189	ExpressionStatement	iterator -> flags = heap_object -> flags	1101:1:27350:27396	3761092	8	True				
ANR	3761190	AssignmentExpression	iterator -> flags = heap_object -> flags		3761092	0		=			
ANR	3761191	PtrMemberAccess	iterator -> flags		3761092	0					
ANR	3761192	Identifier	iterator		3761092	0					
ANR	3761193	Identifier	flags		3761092	1					
ANR	3761194	PtrMemberAccess	heap_object -> flags		3761092	1					
ANR	3761195	Identifier	heap_object		3761092	0					
ANR	3761196	Identifier	flags		3761092	1					
ANR	3761197	ExpressionStatement	ZVAL_UNDEF ( & iterator -> intern . value )	1102:1:27399:27434	3761092	9	True				
ANR	3761198	CallExpression	ZVAL_UNDEF ( & iterator -> intern . value )		3761092	0					
ANR	3761199	Callee	ZVAL_UNDEF		3761092	0					
ANR	3761200	Identifier	ZVAL_UNDEF		3761092	0					
ANR	3761201	ArgumentList	& iterator -> intern . value		3761092	1					
ANR	3761202	Argument	& iterator -> intern . value		3761092	0					
ANR	3761203	UnaryOperationExpression	& iterator -> intern . value		3761092	0					
ANR	3761204	UnaryOperator	&		3761092	0					
ANR	3761205	MemberAccess	iterator -> intern . value		3761092	1					
ANR	3761206	PtrMemberAccess	iterator -> intern		3761092	0					
ANR	3761207	Identifier	iterator		3761092	0					
ANR	3761208	Identifier	intern		3761092	1					
ANR	3761209	Identifier	value		3761092	1					
ANR	3761210	ReturnStatement	return & iterator -> intern . it ;	1104:1:27438:27465	3761092	10	True				
ANR	3761211	UnaryOperationExpression	& iterator -> intern . it		3761092	0					
ANR	3761212	UnaryOperator	&		3761092	0					
ANR	3761213	MemberAccess	iterator -> intern . it		3761092	1					
ANR	3761214	PtrMemberAccess	iterator -> intern		3761092	0					
ANR	3761215	Identifier	iterator		3761092	0					
ANR	3761216	Identifier	intern		3761092	1					
ANR	3761217	Identifier	it		3761092	1					
ANR	3761218	ReturnType	zend_object_iterator *		3761092	1					
ANR	3761219	Identifier	spl_heap_get_iterator		3761092	2					
ANR	3761220	ParameterList	"zend_class_entry * ce , zval * object , int by_ref"		3761092	3					
ANR	3761221	Parameter	zend_class_entry * ce	1084:44:26849:26868	3761092	0	True				
ANR	3761222	ParameterType	zend_class_entry *		3761092	0					
ANR	3761223	Identifier	ce		3761092	1					
ANR	3761224	Parameter	zval * object	1084:66:26871:26882	3761092	1	True				
ANR	3761225	ParameterType	zval *		3761092	0					
ANR	3761226	Identifier	object		3761092	1					
ANR	3761227	Parameter	int by_ref	1084:80:26885:26894	3761092	2	True				
ANR	3761228	ParameterType	int		3761092	0					
ANR	3761229	Identifier	by_ref		3761092	1					
ANR	3761230	CFGEntryNode	ENTRY		3761092		True				
ANR	3761231	CFGExitNode	EXIT		3761092		True				
ANR	3761232	Symbol	& iterator -> intern . value		3761092						
ANR	3761233	Symbol	iterator -> flags		3761092						
ANR	3761234	Symbol	ce		3761092						
ANR	3761235	Symbol	iterator -> intern		3761092						
ANR	3761236	Symbol	NULL		3761092						
ANR	3761237	Symbol	& iterator -> intern . it . data		3761092						
ANR	3761238	Symbol	* heap_object		3761092						
ANR	3761239	Symbol	iterator -> intern . ce		3761092						
ANR	3761240	Symbol	& spl_heap_it_funcs		3761092						
ANR	3761241	Symbol	& iterator -> intern		3761092						
ANR	3761242	Symbol	iterator -> intern . it		3761092						
ANR	3761243	Symbol	Z_SPLHEAP_P		3761092						
ANR	3761244	Symbol	iterator		3761092						
ANR	3761245	Symbol	emalloc		3761092						
ANR	3761246	Symbol	* iterator		3761092						
ANR	3761247	Symbol	& iterator -> intern . it		3761092						
ANR	3761248	Symbol	heap_object		3761092						
ANR	3761249	Symbol	iterator -> intern . it . funcs		3761092						
ANR	3761250	Symbol	by_ref		3761092						
ANR	3761251	Symbol	spl_ce_RuntimeException		3761092						
ANR	3761252	Symbol	heap_object -> flags		3761092						
ANR	3761253	Symbol	object		3761092						
ANR	3761254	Function	spl_pqueue_get_iterator	1108:0:27480:28158							
ANR	3761255	FunctionDef	"spl_pqueue_get_iterator (zend_class_entry * ce , zval * object , int by_ref)"		3761254	0					
ANR	3761256	CompoundStatement		1109:0:27584:28158	3761254	0					
ANR	3761257	IdentifierDeclStatement	spl_heap_it * iterator ;	1110:1:27587:27612	3761254	0	True				
ANR	3761258	IdentifierDecl	* iterator		3761254	0					
ANR	3761259	IdentifierDeclType	spl_heap_it *		3761254	0					
ANR	3761260	Identifier	iterator		3761254	1					
ANR	3761261	IdentifierDeclStatement	spl_heap_object * heap_object = Z_SPLHEAP_P ( object ) ;	1111:1:27615:27665	3761254	1	True				
ANR	3761262	IdentifierDecl	* heap_object = Z_SPLHEAP_P ( object )		3761254	0					
ANR	3761263	IdentifierDeclType	spl_heap_object *		3761254	0					
ANR	3761264	Identifier	heap_object		3761254	1					
ANR	3761265	AssignmentExpression	* heap_object = Z_SPLHEAP_P ( object )		3761254	2		=			
ANR	3761266	Identifier	heap_object		3761254	0					
ANR	3761267	CallExpression	Z_SPLHEAP_P ( object )		3761254	1					
ANR	3761268	Callee	Z_SPLHEAP_P		3761254	0					
ANR	3761269	Identifier	Z_SPLHEAP_P		3761254	0					
ANR	3761270	ArgumentList	object		3761254	1					
ANR	3761271	Argument	object		3761254	0					
ANR	3761272	Identifier	object		3761254	0					
ANR	3761273	IfStatement	if ( by_ref )		3761254	2					
ANR	3761274	Condition	by_ref	1113:5:27673:27678	3761254	0	True				
ANR	3761275	Identifier	by_ref		3761254	0					
ANR	3761276	CompoundStatement		5:13:96:96	3761254	1					
ANR	3761277	ExpressionStatement	"zend_throw_exception ( spl_ce_RuntimeException , ""An iterator cannot be used with foreach by reference"" , 0 )"	1114:2:27685:27789	3761254	0	True				
ANR	3761278	CallExpression	"zend_throw_exception ( spl_ce_RuntimeException , ""An iterator cannot be used with foreach by reference"" , 0 )"		3761254	0					
ANR	3761279	Callee	zend_throw_exception		3761254	0					
ANR	3761280	Identifier	zend_throw_exception		3761254	0					
ANR	3761281	ArgumentList	spl_ce_RuntimeException		3761254	1					
ANR	3761282	Argument	spl_ce_RuntimeException		3761254	0					
ANR	3761283	Identifier	spl_ce_RuntimeException		3761254	0					
ANR	3761284	Argument	"""An iterator cannot be used with foreach by reference"""		3761254	1					
ANR	3761285	PrimaryExpression	"""An iterator cannot be used with foreach by reference"""		3761254	0					
ANR	3761286	Argument	0		3761254	2					
ANR	3761287	PrimaryExpression	0		3761254	0					
ANR	3761288	ReturnStatement	return NULL ;	1115:2:27793:27804	3761254	1	True				
ANR	3761289	Identifier	NULL		3761254	0					
ANR	3761290	ExpressionStatement	iterator = emalloc ( sizeof ( spl_heap_it ) )	1118:1:27811:27850	3761254	3	True				
ANR	3761291	AssignmentExpression	iterator = emalloc ( sizeof ( spl_heap_it ) )		3761254	0		=			
ANR	3761292	Identifier	iterator		3761254	0					
ANR	3761293	CallExpression	emalloc ( sizeof ( spl_heap_it ) )		3761254	1					
ANR	3761294	Callee	emalloc		3761254	0					
ANR	3761295	Identifier	emalloc		3761254	0					
ANR	3761296	ArgumentList	sizeof ( spl_heap_it )		3761254	1					
ANR	3761297	Argument	sizeof ( spl_heap_it )		3761254	0					
ANR	3761298	SizeofExpression	sizeof ( spl_heap_it )		3761254	0					
ANR	3761299	Sizeof	sizeof		3761254	0					
ANR	3761300	SizeofOperand	spl_heap_it		3761254	1					
ANR	3761301	ExpressionStatement	zend_iterator_init ( ( zend_object_iterator * ) iterator )	1120:1:27854:27905	3761254	4	True				
ANR	3761302	CallExpression	zend_iterator_init ( ( zend_object_iterator * ) iterator )		3761254	0					
ANR	3761303	Callee	zend_iterator_init		3761254	0					
ANR	3761304	Identifier	zend_iterator_init		3761254	0					
ANR	3761305	ArgumentList	( zend_object_iterator * ) iterator		3761254	1					
ANR	3761306	Argument	( zend_object_iterator * ) iterator		3761254	0					
ANR	3761307	CastExpression	( zend_object_iterator * ) iterator		3761254	0					
ANR	3761308	CastTarget	zend_object_iterator *		3761254	0					
ANR	3761309	Identifier	iterator		3761254	1					
ANR	3761310	ExpressionStatement	"ZVAL_COPY ( & iterator -> intern . it . data , object )"	1122:1:27909:27953	3761254	5	True				
ANR	3761311	CallExpression	"ZVAL_COPY ( & iterator -> intern . it . data , object )"		3761254	0					
ANR	3761312	Callee	ZVAL_COPY		3761254	0					
ANR	3761313	Identifier	ZVAL_COPY		3761254	0					
ANR	3761314	ArgumentList	& iterator -> intern . it . data		3761254	1					
ANR	3761315	Argument	& iterator -> intern . it . data		3761254	0					
ANR	3761316	UnaryOperationExpression	& iterator -> intern . it . data		3761254	0					
ANR	3761317	UnaryOperator	&		3761254	0					
ANR	3761318	MemberAccess	iterator -> intern . it . data		3761254	1					
ANR	3761319	MemberAccess	iterator -> intern . it		3761254	0					
ANR	3761320	PtrMemberAccess	iterator -> intern		3761254	0					
ANR	3761321	Identifier	iterator		3761254	0					
ANR	3761322	Identifier	intern		3761254	1					
ANR	3761323	Identifier	it		3761254	1					
ANR	3761324	Identifier	data		3761254	1					
ANR	3761325	Argument	object		3761254	1					
ANR	3761326	Identifier	object		3761254	0					
ANR	3761327	ExpressionStatement	iterator -> intern . it . funcs = & spl_pqueue_it_funcs	1123:1:27956:28004	3761254	6	True				
ANR	3761328	AssignmentExpression	iterator -> intern . it . funcs = & spl_pqueue_it_funcs		3761254	0		=			
ANR	3761329	MemberAccess	iterator -> intern . it . funcs		3761254	0					
ANR	3761330	MemberAccess	iterator -> intern . it		3761254	0					
ANR	3761331	PtrMemberAccess	iterator -> intern		3761254	0					
ANR	3761332	Identifier	iterator		3761254	0					
ANR	3761333	Identifier	intern		3761254	1					
ANR	3761334	Identifier	it		3761254	1					
ANR	3761335	Identifier	funcs		3761254	1					
ANR	3761336	UnaryOperationExpression	& spl_pqueue_it_funcs		3761254	1					
ANR	3761337	UnaryOperator	&		3761254	0					
ANR	3761338	Identifier	spl_pqueue_it_funcs		3761254	1					
ANR	3761339	ExpressionStatement	iterator -> intern . ce = ce	1124:1:28007:28037	3761254	7	True				
ANR	3761340	AssignmentExpression	iterator -> intern . ce = ce		3761254	0		=			
ANR	3761341	MemberAccess	iterator -> intern . ce		3761254	0					
ANR	3761342	PtrMemberAccess	iterator -> intern		3761254	0					
ANR	3761343	Identifier	iterator		3761254	0					
ANR	3761344	Identifier	intern		3761254	1					
ANR	3761345	Identifier	ce		3761254	1					
ANR	3761346	Identifier	ce		3761254	1					
ANR	3761347	ExpressionStatement	iterator -> flags = heap_object -> flags	1125:1:28040:28086	3761254	8	True				
ANR	3761348	AssignmentExpression	iterator -> flags = heap_object -> flags		3761254	0		=			
ANR	3761349	PtrMemberAccess	iterator -> flags		3761254	0					
ANR	3761350	Identifier	iterator		3761254	0					
ANR	3761351	Identifier	flags		3761254	1					
ANR	3761352	PtrMemberAccess	heap_object -> flags		3761254	1					
ANR	3761353	Identifier	heap_object		3761254	0					
ANR	3761354	Identifier	flags		3761254	1					
ANR	3761355	ExpressionStatement	ZVAL_UNDEF ( & iterator -> intern . value )	1127:1:28090:28125	3761254	9	True				
ANR	3761356	CallExpression	ZVAL_UNDEF ( & iterator -> intern . value )		3761254	0					
ANR	3761357	Callee	ZVAL_UNDEF		3761254	0					
ANR	3761358	Identifier	ZVAL_UNDEF		3761254	0					
ANR	3761359	ArgumentList	& iterator -> intern . value		3761254	1					
ANR	3761360	Argument	& iterator -> intern . value		3761254	0					
ANR	3761361	UnaryOperationExpression	& iterator -> intern . value		3761254	0					
ANR	3761362	UnaryOperator	&		3761254	0					
ANR	3761363	MemberAccess	iterator -> intern . value		3761254	1					
ANR	3761364	PtrMemberAccess	iterator -> intern		3761254	0					
ANR	3761365	Identifier	iterator		3761254	0					
ANR	3761366	Identifier	intern		3761254	1					
ANR	3761367	Identifier	value		3761254	1					
ANR	3761368	ReturnStatement	return & iterator -> intern . it ;	1129:1:28129:28156	3761254	10	True				
ANR	3761369	UnaryOperationExpression	& iterator -> intern . it		3761254	0					
ANR	3761370	UnaryOperator	&		3761254	0					
ANR	3761371	MemberAccess	iterator -> intern . it		3761254	1					
ANR	3761372	PtrMemberAccess	iterator -> intern		3761254	0					
ANR	3761373	Identifier	iterator		3761254	0					
ANR	3761374	Identifier	intern		3761254	1					
ANR	3761375	Identifier	it		3761254	1					
ANR	3761376	ReturnType	zend_object_iterator *		3761254	1					
ANR	3761377	Identifier	spl_pqueue_get_iterator		3761254	2					
ANR	3761378	ParameterList	"zend_class_entry * ce , zval * object , int by_ref"		3761254	3					
ANR	3761379	Parameter	zend_class_entry * ce	1108:46:27526:27545	3761254	0	True				
ANR	3761380	ParameterType	zend_class_entry *		3761254	0					
ANR	3761381	Identifier	ce		3761254	1					
ANR	3761382	Parameter	zval * object	1108:68:27548:27559	3761254	1	True				
ANR	3761383	ParameterType	zval *		3761254	0					
ANR	3761384	Identifier	object		3761254	1					
ANR	3761385	Parameter	int by_ref	1108:82:27562:27571	3761254	2	True				
ANR	3761386	ParameterType	int		3761254	0					
ANR	3761387	Identifier	by_ref		3761254	1					
ANR	3761388	CFGEntryNode	ENTRY		3761254		True				
ANR	3761389	CFGExitNode	EXIT		3761254		True				
ANR	3761390	Symbol	& iterator -> intern . value		3761254						
ANR	3761391	Symbol	iterator -> flags		3761254						
ANR	3761392	Symbol	ce		3761254						
ANR	3761393	Symbol	iterator -> intern		3761254						
ANR	3761394	Symbol	NULL		3761254						
ANR	3761395	Symbol	& iterator -> intern . it . data		3761254						
ANR	3761396	Symbol	* heap_object		3761254						
ANR	3761397	Symbol	iterator -> intern . ce		3761254						
ANR	3761398	Symbol	& iterator -> intern		3761254						
ANR	3761399	Symbol	iterator -> intern . it		3761254						
ANR	3761400	Symbol	Z_SPLHEAP_P		3761254						
ANR	3761401	Symbol	iterator		3761254						
ANR	3761402	Symbol	emalloc		3761254						
ANR	3761403	Symbol	* iterator		3761254						
ANR	3761404	Symbol	& iterator -> intern . it		3761254						
ANR	3761405	Symbol	heap_object		3761254						
ANR	3761406	Symbol	& spl_pqueue_it_funcs		3761254						
ANR	3761407	Symbol	iterator -> intern . it . funcs		3761254						
ANR	3761408	Symbol	by_ref		3761254						
ANR	3761409	Symbol	spl_ce_RuntimeException		3761254						
ANR	3761410	Symbol	heap_object -> flags		3761254						
ANR	3761411	Symbol	object		3761254						
ANR	3761412	DeclStmt									
ANR	3761413	Decl							const zend_function_entry	const zend_function_entry [ ]	spl_funcs_SplMinHeap
ANR	3761414	DeclStmt									
ANR	3761415	Decl							const zend_function_entry	const zend_function_entry [ ]	spl_funcs_SplMaxHeap
ANR	3761416	DeclStmt									
ANR	3761417	Decl							const zend_function_entry	const zend_function_entry [ ]	spl_funcs_SplPriorityQueue
ANR	3761418	DeclStmt									
ANR	3761419	Decl							const zend_function_entry	const zend_function_entry [ ]	spl_funcs_SplHeap
