command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3650540	File	data/converged/CVE-2015-8617_php-src/sapi_phpdbg_phpdbg_btree.c								
ANR	3650541	Function	phpdbg_btree_init	33:0:1492:1617							
ANR	3650542	FunctionDef	"phpdbg_btree_init (phpdbg_btree * tree , zend_ulong depth)"		3650541	0					
ANR	3650543	CompoundStatement		33:61:1553:1617	3650541	0					
ANR	3650544	ExpressionStatement	tree -> depth = depth	34:1:1556:1575	3650541	0	True				
ANR	3650545	AssignmentExpression	tree -> depth = depth		3650541	0		=			
ANR	3650546	PtrMemberAccess	tree -> depth		3650541	0					
ANR	3650547	Identifier	tree		3650541	0					
ANR	3650548	Identifier	depth		3650541	1					
ANR	3650549	Identifier	depth		3650541	1					
ANR	3650550	ExpressionStatement	tree -> branch = NULL	35:1:1578:1597	3650541	1	True				
ANR	3650551	AssignmentExpression	tree -> branch = NULL		3650541	0		=			
ANR	3650552	PtrMemberAccess	tree -> branch		3650541	0					
ANR	3650553	Identifier	tree		3650541	0					
ANR	3650554	Identifier	branch		3650541	1					
ANR	3650555	Identifier	NULL		3650541	1					
ANR	3650556	ExpressionStatement	tree -> count = 0	36:1:1600:1615	3650541	2	True				
ANR	3650557	AssignmentExpression	tree -> count = 0		3650541	0		=			
ANR	3650558	PtrMemberAccess	tree -> count		3650541	0					
ANR	3650559	Identifier	tree		3650541	0					
ANR	3650560	Identifier	count		3650541	1					
ANR	3650561	PrimaryExpression	0		3650541	1					
ANR	3650562	ReturnType	void		3650541	1					
ANR	3650563	Identifier	phpdbg_btree_init		3650541	2					
ANR	3650564	ParameterList	"phpdbg_btree * tree , zend_ulong depth"		3650541	3					
ANR	3650565	Parameter	phpdbg_btree * tree	33:23:1515:1532	3650541	0	True				
ANR	3650566	ParameterType	phpdbg_btree *		3650541	0					
ANR	3650567	Identifier	tree		3650541	1					
ANR	3650568	Parameter	zend_ulong depth	33:43:1535:1550	3650541	1	True				
ANR	3650569	ParameterType	zend_ulong		3650541	0					
ANR	3650570	Identifier	depth		3650541	1					
ANR	3650571	CFGEntryNode	ENTRY		3650541		True				
ANR	3650572	CFGExitNode	EXIT		3650541		True				
ANR	3650573	Symbol	* tree		3650541						
ANR	3650574	Symbol	tree -> branch		3650541						
ANR	3650575	Symbol	depth		3650541						
ANR	3650576	Symbol	NULL		3650541						
ANR	3650577	Symbol	tree -> count		3650541						
ANR	3650578	Symbol	tree		3650541						
ANR	3650579	Symbol	tree -> depth		3650541						
ANR	3650580	Function	phpdbg_btree_find	39:0:1620:2076							
ANR	3650581	FunctionDef	"phpdbg_btree_find (phpdbg_btree * tree , zend_ulong idx)"		3650580	0					
ANR	3650582	CompoundStatement		39:75:1695:2076	3650580	0					
ANR	3650583	IdentifierDeclStatement	phpdbg_btree_branch * branch = tree -> branch ;	40:1:1698:1740	3650580	0	True				
ANR	3650584	IdentifierDecl	* branch = tree -> branch		3650580	0					
ANR	3650585	IdentifierDeclType	phpdbg_btree_branch *		3650580	0					
ANR	3650586	Identifier	branch		3650580	1					
ANR	3650587	AssignmentExpression	* branch = tree -> branch		3650580	2		=			
ANR	3650588	Identifier	branch		3650580	0					
ANR	3650589	PtrMemberAccess	tree -> branch		3650580	1					
ANR	3650590	Identifier	tree		3650580	0					
ANR	3650591	Identifier	branch		3650580	1					
ANR	3650592	IdentifierDeclStatement	int i = tree -> depth - 1 ;	41:1:1743:1766	3650580	1	True				
ANR	3650593	IdentifierDecl	i = tree -> depth - 1		3650580	0					
ANR	3650594	IdentifierDeclType	int		3650580	0					
ANR	3650595	Identifier	i		3650580	1					
ANR	3650596	AssignmentExpression	i = tree -> depth - 1		3650580	2		=			
ANR	3650597	Identifier	i		3650580	0					
ANR	3650598	AdditiveExpression	tree -> depth - 1		3650580	1		-			
ANR	3650599	PtrMemberAccess	tree -> depth		3650580	0					
ANR	3650600	Identifier	tree		3650580	0					
ANR	3650601	Identifier	depth		3650580	1					
ANR	3650602	PrimaryExpression	1		3650580	1					
ANR	3650603	IfStatement	if ( branch == NULL )		3650580	2					
ANR	3650604	Condition	branch == NULL	43:5:1774:1787	3650580	0	True				
ANR	3650605	EqualityExpression	branch == NULL		3650580	0		==			
ANR	3650606	Identifier	branch		3650580	0					
ANR	3650607	Identifier	NULL		3650580	1					
ANR	3650608	CompoundStatement		5:21:94:94	3650580	1					
ANR	3650609	ReturnStatement	return NULL ;	44:2:1794:1805	3650580	0	True				
ANR	3650610	Identifier	NULL		3650580	0					
ANR	3650611	DoStatement	do		3650580	3					
ANR	3650612	CompoundStatement		9:4:119:119	3650580	0					
ANR	3650613	IfStatement	if ( ( idx >> i ) % 2 == 1 )		3650580	0					
ANR	3650614	Condition	( idx >> i ) % 2 == 1	48:6:1823:1841	3650580	0	True				
ANR	3650615	EqualityExpression	( idx >> i ) % 2 == 1		3650580	0		==			
ANR	3650616	MultiplicativeExpression	( idx >> i ) % 2		3650580	0		%			
ANR	3650617	ShiftExpression	idx >> i		3650580	0		>>			
ANR	3650618	Identifier	idx		3650580	0					
ANR	3650619	Identifier	i		3650580	1					
ANR	3650620	PrimaryExpression	2		3650580	1					
ANR	3650621	PrimaryExpression	1		3650580	1					
ANR	3650622	CompoundStatement		10:27:148:148	3650580	1					
ANR	3650623	IfStatement	if ( branch -> branches [ 1 ] )		3650580	0					
ANR	3650624	Condition	branch -> branches [ 1 ]	49:8:1854:1872	3650580	0	True				
ANR	3650625	ArrayIndexing	branch -> branches [ 1 ]		3650580	0					
ANR	3650626	PtrMemberAccess	branch -> branches		3650580	0					
ANR	3650627	Identifier	branch		3650580	0					
ANR	3650628	Identifier	branches		3650580	1					
ANR	3650629	PrimaryExpression	1		3650580	1					
ANR	3650630	CompoundStatement		11:29:179:179	3650580	1					
ANR	3650631	ExpressionStatement	CHOOSE_BRANCH ( 1 )	50:4:1881:1897	3650580	0	True				
ANR	3650632	CallExpression	CHOOSE_BRANCH ( 1 )		3650580	0					
ANR	3650633	Callee	CHOOSE_BRANCH		3650580	0					
ANR	3650634	Identifier	CHOOSE_BRANCH		3650580	0					
ANR	3650635	ArgumentList	1		3650580	1					
ANR	3650636	Argument	1		3650580	0					
ANR	3650637	PrimaryExpression	1		3650580	0					
ANR	3650638	ElseStatement	else		3650580	0					
ANR	3650639	CompoundStatement		13:10:213:213	3650580	0					
ANR	3650640	ReturnStatement	return NULL ;	52:4:1915:1926	3650580	0	True				
ANR	3650641	Identifier	NULL		3650580	0					
ANR	3650642	ElseStatement	else		3650580	0					
ANR	3650643	CompoundStatement		16:9:246:246	3650580	0					
ANR	3650644	IfStatement	if ( branch -> branches [ 0 ] )		3650580	0					
ANR	3650645	Condition	branch -> branches [ 0 ]	55:7:1951:1969	3650580	0	True				
ANR	3650646	ArrayIndexing	branch -> branches [ 0 ]		3650580	0					
ANR	3650647	PtrMemberAccess	branch -> branches		3650580	0					
ANR	3650648	Identifier	branch		3650580	0					
ANR	3650649	Identifier	branches		3650580	1					
ANR	3650650	PrimaryExpression	0		3650580	1					
ANR	3650651	CompoundStatement		17:28:276:276	3650580	1					
ANR	3650652	ExpressionStatement	CHOOSE_BRANCH ( 0 )	56:4:1978:1994	3650580	0	True				
ANR	3650653	CallExpression	CHOOSE_BRANCH ( 0 )		3650580	0					
ANR	3650654	Callee	CHOOSE_BRANCH		3650580	0					
ANR	3650655	Identifier	CHOOSE_BRANCH		3650580	0					
ANR	3650656	ArgumentList	0		3650580	1					
ANR	3650657	Argument	0		3650580	0					
ANR	3650658	PrimaryExpression	0		3650580	0					
ANR	3650659	ElseStatement	else		3650580	0					
ANR	3650660	CompoundStatement		19:10:310:310	3650580	0					
ANR	3650661	ReturnStatement	return NULL ;	58:4:2012:2023	3650580	0	True				
ANR	3650662	Identifier	NULL		3650580	0					
ANR	3650663	Condition	i --	61:10:2044:2046	3650580	1	True				
ANR	3650664	PostIncDecOperationExpression	i --		3650580	0					
ANR	3650665	Identifier	i		3650580	0					
ANR	3650666	IncDec	--		3650580	1					
ANR	3650667	ReturnStatement	return & branch -> result ;	63:1:2052:2074	3650580	4	True				
ANR	3650668	UnaryOperationExpression	& branch -> result		3650580	0					
ANR	3650669	UnaryOperator	&		3650580	0					
ANR	3650670	PtrMemberAccess	branch -> result		3650580	1					
ANR	3650671	Identifier	branch		3650580	0					
ANR	3650672	Identifier	result		3650580	1					
ANR	3650673	ReturnType	phpdbg_btree_result *		3650580	1					
ANR	3650674	Identifier	phpdbg_btree_find		3650580	2					
ANR	3650675	ParameterList	"phpdbg_btree * tree , zend_ulong idx"		3650580	3					
ANR	3650676	Parameter	phpdbg_btree * tree	39:39:1659:1676	3650580	0	True				
ANR	3650677	ParameterType	phpdbg_btree *		3650580	0					
ANR	3650678	Identifier	tree		3650580	1					
ANR	3650679	Parameter	zend_ulong idx	39:59:1679:1692	3650580	1	True				
ANR	3650680	ParameterType	zend_ulong		3650580	0					
ANR	3650681	Identifier	idx		3650580	1					
ANR	3650682	CFGEntryNode	ENTRY		3650580		True				
ANR	3650683	CFGExitNode	EXIT		3650580		True				
ANR	3650684	Symbol	NULL		3650580						
ANR	3650685	Symbol	branch -> branches		3650580						
ANR	3650686	Symbol	tree		3650580						
ANR	3650687	Symbol	i		3650580						
ANR	3650688	Symbol	tree -> depth		3650580						
ANR	3650689	Symbol	* branch -> branches		3650580						
ANR	3650690	Symbol	* * branch		3650580						
ANR	3650691	Symbol	branch		3650580						
ANR	3650692	Symbol	* tree		3650580						
ANR	3650693	Symbol	tree -> branch		3650580						
ANR	3650694	Symbol	idx		3650580						
ANR	3650695	Symbol	& branch -> result		3650580						
ANR	3650696	Symbol	* branch		3650580						
ANR	3650697	Function	phpdbg_btree_find_closest	66:0:2079:3568							
ANR	3650698	FunctionDef	"phpdbg_btree_find_closest (phpdbg_btree * tree , zend_ulong idx)"		3650697	0					
ANR	3650699	CompoundStatement		66:83:2162:3568	3650697	0					
ANR	3650700	IdentifierDeclStatement	phpdbg_btree_branch * branch = tree -> branch ;	67:1:2165:2207	3650697	0	True				
ANR	3650701	IdentifierDecl	* branch = tree -> branch		3650697	0					
ANR	3650702	IdentifierDeclType	phpdbg_btree_branch *		3650697	0					
ANR	3650703	Identifier	branch		3650697	1					
ANR	3650704	AssignmentExpression	* branch = tree -> branch		3650697	2		=			
ANR	3650705	Identifier	branch		3650697	0					
ANR	3650706	PtrMemberAccess	tree -> branch		3650697	1					
ANR	3650707	Identifier	tree		3650697	0					
ANR	3650708	Identifier	branch		3650697	1					
ANR	3650709	IdentifierDeclStatement	"int i = tree -> depth - 1 , last_superior_i = - 1 ;"	68:1:2210:2255	3650697	1	True				
ANR	3650710	IdentifierDecl	i = tree -> depth - 1		3650697	0					
ANR	3650711	IdentifierDeclType	int		3650697	0					
ANR	3650712	Identifier	i		3650697	1					
ANR	3650713	AssignmentExpression	i = tree -> depth - 1		3650697	2		=			
ANR	3650714	Identifier	i		3650697	0					
ANR	3650715	AdditiveExpression	tree -> depth - 1		3650697	1		-			
ANR	3650716	PtrMemberAccess	tree -> depth		3650697	0					
ANR	3650717	Identifier	tree		3650697	0					
ANR	3650718	Identifier	depth		3650697	1					
ANR	3650719	PrimaryExpression	1		3650697	1					
ANR	3650720	IdentifierDecl	last_superior_i = - 1		3650697	1					
ANR	3650721	IdentifierDeclType	int		3650697	0					
ANR	3650722	Identifier	last_superior_i		3650697	1					
ANR	3650723	AssignmentExpression	last_superior_i = - 1		3650697	2		=			
ANR	3650724	Identifier	last_superior_i		3650697	0					
ANR	3650725	UnaryOperationExpression	- 1		3650697	1					
ANR	3650726	UnaryOperator	-		3650697	0					
ANR	3650727	PrimaryExpression	1		3650697	1					
ANR	3650728	IfStatement	if ( branch == NULL )		3650697	2					
ANR	3650729	Condition	branch == NULL	70:5:2263:2276	3650697	0	True				
ANR	3650730	EqualityExpression	branch == NULL		3650697	0		==			
ANR	3650731	Identifier	branch		3650697	0					
ANR	3650732	Identifier	NULL		3650697	1					
ANR	3650733	CompoundStatement		5:21:116:116	3650697	1					
ANR	3650734	ReturnStatement	return NULL ;	71:2:2283:2294	3650697	0	True				
ANR	3650735	Identifier	NULL		3650697	0					
ANR	3650736	DoStatement	do		3650697	3					
ANR	3650737	CompoundStatement		10:4:172:172	3650697	0					
ANR	3650738	IfStatement	if ( ( idx >> i ) % 2 == 0 )		3650697	0					
ANR	3650739	Condition	( idx >> i ) % 2 == 0	76:6:2343:2361	3650697	0	True				
ANR	3650740	EqualityExpression	( idx >> i ) % 2 == 0		3650697	0		==			
ANR	3650741	MultiplicativeExpression	( idx >> i ) % 2		3650697	0		%			
ANR	3650742	ShiftExpression	idx >> i		3650697	0		>>			
ANR	3650743	Identifier	idx		3650697	0					
ANR	3650744	Identifier	i		3650697	1					
ANR	3650745	PrimaryExpression	2		3650697	1					
ANR	3650746	PrimaryExpression	0		3650697	1					
ANR	3650747	CompoundStatement		11:27:201:201	3650697	1					
ANR	3650748	IfStatement	if ( branch -> branches [ 0 ] )		3650697	0					
ANR	3650749	Condition	branch -> branches [ 0 ]	77:7:2373:2391	3650697	0	True				
ANR	3650750	ArrayIndexing	branch -> branches [ 0 ]		3650697	0					
ANR	3650751	PtrMemberAccess	branch -> branches		3650697	0					
ANR	3650752	Identifier	branch		3650697	0					
ANR	3650753	Identifier	branches		3650697	1					
ANR	3650754	PrimaryExpression	0		3650697	1					
ANR	3650755	CompoundStatement		12:28:231:231	3650697	1					
ANR	3650756	ExpressionStatement	CHOOSE_BRANCH ( 0 )	78:4:2400:2416	3650697	0	True				
ANR	3650757	CallExpression	CHOOSE_BRANCH ( 0 )		3650697	0					
ANR	3650758	Callee	CHOOSE_BRANCH		3650697	0					
ANR	3650759	Identifier	CHOOSE_BRANCH		3650697	0					
ANR	3650760	ArgumentList	0		3650697	1					
ANR	3650761	Argument	0		3650697	0					
ANR	3650762	PrimaryExpression	0		3650697	0					
ANR	3650763	ElseStatement	else		3650697	0					
ANR	3650764	CompoundStatement		15:10:309:309	3650697	0					
ANR	3650765	IfStatement	if ( last_superior_i == - 1 )		3650697	0					
ANR	3650766	Condition	last_superior_i == - 1	82:8:2525:2545	3650697	0	True				
ANR	3650767	EqualityExpression	last_superior_i == - 1		3650697	0		==			
ANR	3650768	Identifier	last_superior_i		3650697	0					
ANR	3650769	UnaryOperationExpression	- 1		3650697	1					
ANR	3650770	UnaryOperator	-		3650697	0					
ANR	3650771	PrimaryExpression	1		3650697	1					
ANR	3650772	CompoundStatement		17:31:385:385	3650697	1					
ANR	3650773	ReturnStatement	return NULL ;	84:5:2574:2585	3650697	0	True				
ANR	3650774	Identifier	NULL		3650697	0					
ANR	3650775	ExpressionStatement	branch = tree -> branch	87:4:2619:2640	3650697	1	True				
ANR	3650776	AssignmentExpression	branch = tree -> branch		3650697	0		=			
ANR	3650777	Identifier	branch		3650697	0					
ANR	3650778	PtrMemberAccess	tree -> branch		3650697	1					
ANR	3650779	Identifier	tree		3650697	0					
ANR	3650780	Identifier	branch		3650697	1					
ANR	3650781	ExpressionStatement	i = tree -> depth - 1	88:4:2646:2665	3650697	2	True				
ANR	3650782	AssignmentExpression	i = tree -> depth - 1		3650697	0		=			
ANR	3650783	Identifier	i		3650697	0					
ANR	3650784	AdditiveExpression	tree -> depth - 1		3650697	1		-			
ANR	3650785	PtrMemberAccess	tree -> depth		3650697	0					
ANR	3650786	Identifier	tree		3650697	0					
ANR	3650787	Identifier	depth		3650697	1					
ANR	3650788	PrimaryExpression	1		3650697	1					
ANR	3650789	DoStatement	do		3650697	3					
ANR	3650790	CompoundStatement		25:7:617:617	3650697	0					
ANR	3650791	ExpressionStatement	CHOOSE_BRANCH ( ( idx >> i ) % 2 == 1 && branch -> branches [ 1 ] )	91:5:2787:2844	3650697	0	True				
ANR	3650792	CallExpression	CHOOSE_BRANCH ( ( idx >> i ) % 2 == 1 && branch -> branches [ 1 ] )		3650697	0					
ANR	3650793	Callee	CHOOSE_BRANCH		3650697	0					
ANR	3650794	Identifier	CHOOSE_BRANCH		3650697	0					
ANR	3650795	ArgumentList	( idx >> i ) % 2 == 1 && branch -> branches [ 1 ]		3650697	1					
ANR	3650796	Argument	( idx >> i ) % 2 == 1 && branch -> branches [ 1 ]		3650697	0					
ANR	3650797	AndExpression	( idx >> i ) % 2 == 1 && branch -> branches [ 1 ]		3650697	0		&&			
ANR	3650798	EqualityExpression	( idx >> i ) % 2 == 1		3650697	0		==			
ANR	3650799	MultiplicativeExpression	( idx >> i ) % 2		3650697	0		%			
ANR	3650800	ShiftExpression	idx >> i		3650697	0		>>			
ANR	3650801	Identifier	idx		3650697	0					
ANR	3650802	Identifier	i		3650697	1					
ANR	3650803	PrimaryExpression	2		3650697	1					
ANR	3650804	PrimaryExpression	1		3650697	1					
ANR	3650805	ArrayIndexing	branch -> branches [ 1 ]		3650697	1					
ANR	3650806	PtrMemberAccess	branch -> branches		3650697	0					
ANR	3650807	Identifier	branch		3650697	0					
ANR	3650808	Identifier	branches		3650697	1					
ANR	3650809	PrimaryExpression	1		3650697	1					
ANR	3650810	Condition	-- i > last_superior_i	92:13:2859:2879	3650697	1	True				
ANR	3650811	RelationalExpression	-- i > last_superior_i		3650697	0		>			
ANR	3650812	UnaryExpression	-- i		3650697	0					
ANR	3650813	IncDec	--		3650697	0					
ANR	3650814	Identifier	i		3650697	1					
ANR	3650815	Identifier	last_superior_i		3650697	1					
ANR	3650816	ExpressionStatement	CHOOSE_BRANCH ( 0 )	94:4:2992:3008	3650697	4	True				
ANR	3650817	CallExpression	CHOOSE_BRANCH ( 0 )		3650697	0					
ANR	3650818	Callee	CHOOSE_BRANCH		3650697	0					
ANR	3650819	Identifier	CHOOSE_BRANCH		3650697	0					
ANR	3650820	ArgumentList	0		3650697	1					
ANR	3650821	Argument	0		3650697	0					
ANR	3650822	PrimaryExpression	0		3650697	0					
ANR	3650823	WhileStatement	while ( i -- )		3650697	5					
ANR	3650824	Condition	i --	96:11:3124:3126	3650697	0	True				
ANR	3650825	PostIncDecOperationExpression	i --		3650697	0					
ANR	3650826	Identifier	i		3650697	0					
ANR	3650827	IncDec	--		3650697	1					
ANR	3650828	CompoundStatement		31:16:966:966	3650697	1					
ANR	3650829	ExpressionStatement	CHOOSE_BRANCH ( branch -> branches [ 1 ] )	97:5:3136:3170	3650697	0	True				
ANR	3650830	CallExpression	CHOOSE_BRANCH ( branch -> branches [ 1 ] )		3650697	0					
ANR	3650831	Callee	CHOOSE_BRANCH		3650697	0					
ANR	3650832	Identifier	CHOOSE_BRANCH		3650697	0					
ANR	3650833	ArgumentList	branch -> branches [ 1 ]		3650697	1					
ANR	3650834	Argument	branch -> branches [ 1 ]		3650697	0					
ANR	3650835	ArrayIndexing	branch -> branches [ 1 ]		3650697	0					
ANR	3650836	PtrMemberAccess	branch -> branches		3650697	0					
ANR	3650837	Identifier	branch		3650697	0					
ANR	3650838	Identifier	branches		3650697	1					
ANR	3650839	PrimaryExpression	1		3650697	1					
ANR	3650840	BreakStatement	break ;	99:4:3182:3187	3650697	6	True				
ANR	3650841	ElseStatement	else		3650697	0					
ANR	3650842	CompoundStatement		37:9:1127:1127	3650697	0					
ANR	3650843	IfStatement	if ( branch -> branches [ 1 ] )		3650697	0					
ANR	3650844	Condition	branch -> branches [ 1 ]	103:7:3299:3317	3650697	0	True				
ANR	3650845	ArrayIndexing	branch -> branches [ 1 ]		3650697	0					
ANR	3650846	PtrMemberAccess	branch -> branches		3650697	0					
ANR	3650847	Identifier	branch		3650697	0					
ANR	3650848	Identifier	branches		3650697	1					
ANR	3650849	PrimaryExpression	1		3650697	1					
ANR	3650850	CompoundStatement		38:28:1157:1157	3650697	1					
ANR	3650851	IfStatement	if ( branch -> branches [ 0 ] )		3650697	0					
ANR	3650852	Condition	branch -> branches [ 0 ]	104:8:3330:3348	3650697	0	True				
ANR	3650853	ArrayIndexing	branch -> branches [ 0 ]		3650697	0					
ANR	3650854	PtrMemberAccess	branch -> branches		3650697	0					
ANR	3650855	Identifier	branch		3650697	0					
ANR	3650856	Identifier	branches		3650697	1					
ANR	3650857	PrimaryExpression	0		3650697	1					
ANR	3650858	CompoundStatement		39:29:1188:1188	3650697	1					
ANR	3650859	ExpressionStatement	last_superior_i = i	105:5:3358:3377	3650697	0	True				
ANR	3650860	AssignmentExpression	last_superior_i = i		3650697	0		=			
ANR	3650861	Identifier	last_superior_i		3650697	0					
ANR	3650862	Identifier	i		3650697	1					
ANR	3650863	ExpressionStatement	CHOOSE_BRANCH ( 1 )	107:4:3389:3405	3650697	1	True				
ANR	3650864	CallExpression	CHOOSE_BRANCH ( 1 )		3650697	0					
ANR	3650865	Callee	CHOOSE_BRANCH		3650697	0					
ANR	3650866	Identifier	CHOOSE_BRANCH		3650697	0					
ANR	3650867	ArgumentList	1		3650697	1					
ANR	3650868	Argument	1		3650697	0					
ANR	3650869	PrimaryExpression	1		3650697	0					
ANR	3650870	ElseStatement	else		3650697	0					
ANR	3650871	CompoundStatement		43:10:1254:1254	3650697	0					
ANR	3650872	ExpressionStatement	CHOOSE_BRANCH ( 0 )	109:4:3423:3439	3650697	0	True				
ANR	3650873	CallExpression	CHOOSE_BRANCH ( 0 )		3650697	0					
ANR	3650874	Callee	CHOOSE_BRANCH		3650697	0					
ANR	3650875	Identifier	CHOOSE_BRANCH		3650697	0					
ANR	3650876	ArgumentList	0		3650697	1					
ANR	3650877	Argument	0		3650697	0					
ANR	3650878	PrimaryExpression	0		3650697	0					
ANR	3650879	WhileStatement	while ( i -- )		3650697	1					
ANR	3650880	Condition	i --	110:11:3452:3454	3650697	0	True				
ANR	3650881	PostIncDecOperationExpression	i --		3650697	0					
ANR	3650882	Identifier	i		3650697	0					
ANR	3650883	IncDec	--		3650697	1					
ANR	3650884	CompoundStatement		45:16:1294:1294	3650697	1					
ANR	3650885	ExpressionStatement	CHOOSE_BRANCH ( branch -> branches [ 1 ] )	111:5:3464:3498	3650697	0	True				
ANR	3650886	CallExpression	CHOOSE_BRANCH ( branch -> branches [ 1 ] )		3650697	0					
ANR	3650887	Callee	CHOOSE_BRANCH		3650697	0					
ANR	3650888	Identifier	CHOOSE_BRANCH		3650697	0					
ANR	3650889	ArgumentList	branch -> branches [ 1 ]		3650697	1					
ANR	3650890	Argument	branch -> branches [ 1 ]		3650697	0					
ANR	3650891	ArrayIndexing	branch -> branches [ 1 ]		3650697	0					
ANR	3650892	PtrMemberAccess	branch -> branches		3650697	0					
ANR	3650893	Identifier	branch		3650697	0					
ANR	3650894	Identifier	branches		3650697	1					
ANR	3650895	PrimaryExpression	1		3650697	1					
ANR	3650896	BreakStatement	break ;	113:4:3510:3515	3650697	2	True				
ANR	3650897	Condition	i --	116:10:3536:3538	3650697	1	True				
ANR	3650898	PostIncDecOperationExpression	i --		3650697	0					
ANR	3650899	Identifier	i		3650697	0					
ANR	3650900	IncDec	--		3650697	1					
ANR	3650901	ReturnStatement	return & branch -> result ;	118:1:3544:3566	3650697	4	True				
ANR	3650902	UnaryOperationExpression	& branch -> result		3650697	0					
ANR	3650903	UnaryOperator	&		3650697	0					
ANR	3650904	PtrMemberAccess	branch -> result		3650697	1					
ANR	3650905	Identifier	branch		3650697	0					
ANR	3650906	Identifier	result		3650697	1					
ANR	3650907	ReturnType	phpdbg_btree_result *		3650697	1					
ANR	3650908	Identifier	phpdbg_btree_find_closest		3650697	2					
ANR	3650909	ParameterList	"phpdbg_btree * tree , zend_ulong idx"		3650697	3					
ANR	3650910	Parameter	phpdbg_btree * tree	66:47:2126:2143	3650697	0	True				
ANR	3650911	ParameterType	phpdbg_btree *		3650697	0					
ANR	3650912	Identifier	tree		3650697	1					
ANR	3650913	Parameter	zend_ulong idx	66:67:2146:2159	3650697	1	True				
ANR	3650914	ParameterType	zend_ulong		3650697	0					
ANR	3650915	Identifier	idx		3650697	1					
ANR	3650916	CFGEntryNode	ENTRY		3650697		True				
ANR	3650917	CFGExitNode	EXIT		3650697		True				
ANR	3650918	Symbol	NULL		3650697						
ANR	3650919	Symbol	branch -> branches		3650697						
ANR	3650920	Symbol	tree		3650697						
ANR	3650921	Symbol	tree -> depth		3650697						
ANR	3650922	Symbol	i		3650697						
ANR	3650923	Symbol	* branch -> branches		3650697						
ANR	3650924	Symbol	* * branch		3650697						
ANR	3650925	Symbol	branch		3650697						
ANR	3650926	Symbol	* tree		3650697						
ANR	3650927	Symbol	tree -> branch		3650697						
ANR	3650928	Symbol	last_superior_i		3650697						
ANR	3650929	Symbol	idx		3650697						
ANR	3650930	Symbol	& branch -> result		3650697						
ANR	3650931	Symbol	* branch		3650697						
ANR	3650932	Function	phpdbg_btree_find_between	121:0:3571:3792							
ANR	3650933	FunctionDef	"phpdbg_btree_find_between (phpdbg_btree * tree , zend_ulong lower_idx , zend_ulong higher_idx)"		3650932	0					
ANR	3650934	CompoundStatement		121:113:3684:3792	3650932	0					
ANR	3650935	IdentifierDeclStatement	phpdbg_btree_position pos ;	122:1:3687:3712	3650932	0	True				
ANR	3650936	IdentifierDecl	pos		3650932	0					
ANR	3650937	IdentifierDeclType	phpdbg_btree_position		3650932	0					
ANR	3650938	Identifier	pos		3650932	1					
ANR	3650939	ExpressionStatement	pos . tree = tree	124:1:3716:3731	3650932	1	True				
ANR	3650940	AssignmentExpression	pos . tree = tree		3650932	0		=			
ANR	3650941	MemberAccess	pos . tree		3650932	0					
ANR	3650942	Identifier	pos		3650932	0					
ANR	3650943	Identifier	tree		3650932	1					
ANR	3650944	Identifier	tree		3650932	1					
ANR	3650945	ExpressionStatement	pos . end = lower_idx	125:1:3734:3753	3650932	2	True				
ANR	3650946	AssignmentExpression	pos . end = lower_idx		3650932	0		=			
ANR	3650947	MemberAccess	pos . end		3650932	0					
ANR	3650948	Identifier	pos		3650932	0					
ANR	3650949	Identifier	end		3650932	1					
ANR	3650950	Identifier	lower_idx		3650932	1					
ANR	3650951	ExpressionStatement	pos . cur = higher_idx	126:1:3756:3776	3650932	3	True				
ANR	3650952	AssignmentExpression	pos . cur = higher_idx		3650932	0		=			
ANR	3650953	MemberAccess	pos . cur		3650932	0					
ANR	3650954	Identifier	pos		3650932	0					
ANR	3650955	Identifier	cur		3650932	1					
ANR	3650956	Identifier	higher_idx		3650932	1					
ANR	3650957	ReturnStatement	return pos ;	128:1:3780:3790	3650932	4	True				
ANR	3650958	Identifier	pos		3650932	0					
ANR	3650959	ReturnType	phpdbg_btree_position		3650932	1					
ANR	3650960	Identifier	phpdbg_btree_find_between		3650932	2					
ANR	3650961	ParameterList	"phpdbg_btree * tree , zend_ulong lower_idx , zend_ulong higher_idx"		3650932	3					
ANR	3650962	Parameter	phpdbg_btree * tree	121:48:3619:3636	3650932	0	True				
ANR	3650963	ParameterType	phpdbg_btree *		3650932	0					
ANR	3650964	Identifier	tree		3650932	1					
ANR	3650965	Parameter	zend_ulong lower_idx	121:68:3639:3658	3650932	1	True				
ANR	3650966	ParameterType	zend_ulong		3650932	0					
ANR	3650967	Identifier	lower_idx		3650932	1					
ANR	3650968	Parameter	zend_ulong higher_idx	121:90:3661:3681	3650932	2	True				
ANR	3650969	ParameterType	zend_ulong		3650932	0					
ANR	3650970	Identifier	higher_idx		3650932	1					
ANR	3650971	CFGEntryNode	ENTRY		3650932		True				
ANR	3650972	CFGExitNode	EXIT		3650932		True				
ANR	3650973	Symbol	pos . cur		3650932						
ANR	3650974	Symbol	pos		3650932						
ANR	3650975	Symbol	tree		3650932						
ANR	3650976	Symbol	higher_idx		3650932						
ANR	3650977	Symbol	pos . tree		3650932						
ANR	3650978	Symbol	lower_idx		3650932						
ANR	3650979	Symbol	pos . end		3650932						
ANR	3650980	Function	phpdbg_btree_next	131:0:3795:4058							
ANR	3650981	FunctionDef	phpdbg_btree_next (phpdbg_btree_position * pos)		3650980	0					
ANR	3650982	CompoundStatement		131:67:3862:4058	3650980	0					
ANR	3650983	IdentifierDeclStatement	"phpdbg_btree_result * result = phpdbg_btree_find_closest ( pos -> tree , pos -> cur ) ;"	132:1:3865:3941	3650980	0	True				
ANR	3650984	IdentifierDecl	"* result = phpdbg_btree_find_closest ( pos -> tree , pos -> cur )"		3650980	0					
ANR	3650985	IdentifierDeclType	phpdbg_btree_result *		3650980	0					
ANR	3650986	Identifier	result		3650980	1					
ANR	3650987	AssignmentExpression	"* result = phpdbg_btree_find_closest ( pos -> tree , pos -> cur )"		3650980	2		=			
ANR	3650988	Identifier	result		3650980	0					
ANR	3650989	CallExpression	"phpdbg_btree_find_closest ( pos -> tree , pos -> cur )"		3650980	1					
ANR	3650990	Callee	phpdbg_btree_find_closest		3650980	0					
ANR	3650991	Identifier	phpdbg_btree_find_closest		3650980	0					
ANR	3650992	ArgumentList	pos -> tree		3650980	1					
ANR	3650993	Argument	pos -> tree		3650980	0					
ANR	3650994	PtrMemberAccess	pos -> tree		3650980	0					
ANR	3650995	Identifier	pos		3650980	0					
ANR	3650996	Identifier	tree		3650980	1					
ANR	3650997	Argument	pos -> cur		3650980	1					
ANR	3650998	PtrMemberAccess	pos -> cur		3650980	0					
ANR	3650999	Identifier	pos		3650980	0					
ANR	3651000	Identifier	cur		3650980	1					
ANR	3651001	IfStatement	if ( result == NULL || result -> idx < pos -> end )		3650980	1					
ANR	3651002	Condition	result == NULL || result -> idx < pos -> end	134:5:3949:3988	3650980	0	True				
ANR	3651003	OrExpression	result == NULL || result -> idx < pos -> end		3650980	0		||			
ANR	3651004	EqualityExpression	result == NULL		3650980	0		==			
ANR	3651005	Identifier	result		3650980	0					
ANR	3651006	Identifier	NULL		3650980	1					
ANR	3651007	RelationalExpression	result -> idx < pos -> end		3650980	1		<			
ANR	3651008	PtrMemberAccess	result -> idx		3650980	0					
ANR	3651009	Identifier	result		3650980	0					
ANR	3651010	Identifier	idx		3650980	1					
ANR	3651011	PtrMemberAccess	pos -> end		3650980	1					
ANR	3651012	Identifier	pos		3650980	0					
ANR	3651013	Identifier	end		3650980	1					
ANR	3651014	CompoundStatement		4:47:128:128	3650980	1					
ANR	3651015	ReturnStatement	return NULL ;	135:2:3995:4006	3650980	0	True				
ANR	3651016	Identifier	NULL		3650980	0					
ANR	3651017	ExpressionStatement	pos -> cur = result -> idx - 1	138:1:4013:4039	3650980	2	True				
ANR	3651018	AssignmentExpression	pos -> cur = result -> idx - 1		3650980	0		=			
ANR	3651019	PtrMemberAccess	pos -> cur		3650980	0					
ANR	3651020	Identifier	pos		3650980	0					
ANR	3651021	Identifier	cur		3650980	1					
ANR	3651022	AdditiveExpression	result -> idx - 1		3650980	1		-			
ANR	3651023	PtrMemberAccess	result -> idx		3650980	0					
ANR	3651024	Identifier	result		3650980	0					
ANR	3651025	Identifier	idx		3650980	1					
ANR	3651026	PrimaryExpression	1		3650980	1					
ANR	3651027	ReturnStatement	return result ;	140:1:4043:4056	3650980	3	True				
ANR	3651028	Identifier	result		3650980	0					
ANR	3651029	ReturnType	phpdbg_btree_result *		3650980	1					
ANR	3651030	Identifier	phpdbg_btree_next		3650980	2					
ANR	3651031	ParameterList	phpdbg_btree_position * pos		3650980	3					
ANR	3651032	Parameter	phpdbg_btree_position * pos	131:39:3834:3859	3650980	0	True				
ANR	3651033	ParameterType	phpdbg_btree_position *		3650980	0					
ANR	3651034	Identifier	pos		3650980	1					
ANR	3651035	CFGEntryNode	ENTRY		3650980		True				
ANR	3651036	CFGExitNode	EXIT		3650980		True				
ANR	3651037	Symbol	result		3650980						
ANR	3651038	Symbol	NULL		3650980						
ANR	3651039	Symbol	pos		3650980						
ANR	3651040	Symbol	phpdbg_btree_find_closest		3650980						
ANR	3651041	Symbol	* result		3650980						
ANR	3651042	Symbol	pos -> tree		3650980						
ANR	3651043	Symbol	pos -> end		3650980						
ANR	3651044	Symbol	pos -> cur		3650980						
ANR	3651045	Symbol	* pos		3650980						
ANR	3651046	Symbol	result -> idx		3650980						
ANR	3651047	Function	phpdbg_btree_insert_or_update	143:0:4061:4843							
ANR	3651048	FunctionDef	"phpdbg_btree_insert_or_update (phpdbg_btree * tree , zend_ulong idx , void * ptr , int flags)"		3651047	0					
ANR	3651049	CompoundStatement		143:92:4153:4843	3651047	0					
ANR	3651050	IdentifierDeclStatement	int i = tree -> depth - 1 ;	144:1:4156:4179	3651047	0	True				
ANR	3651051	IdentifierDecl	i = tree -> depth - 1		3651047	0					
ANR	3651052	IdentifierDeclType	int		3651047	0					
ANR	3651053	Identifier	i		3651047	1					
ANR	3651054	AssignmentExpression	i = tree -> depth - 1		3651047	2		=			
ANR	3651055	Identifier	i		3651047	0					
ANR	3651056	AdditiveExpression	tree -> depth - 1		3651047	1		-			
ANR	3651057	PtrMemberAccess	tree -> depth		3651047	0					
ANR	3651058	Identifier	tree		3651047	0					
ANR	3651059	Identifier	depth		3651047	1					
ANR	3651060	PrimaryExpression	1		3651047	1					
ANR	3651061	IdentifierDeclStatement	phpdbg_btree_branch * * branch = & tree -> branch ;	145:1:4182:4226	3651047	1	True				
ANR	3651062	IdentifierDecl	* * branch = & tree -> branch		3651047	0					
ANR	3651063	IdentifierDeclType	phpdbg_btree_branch * *		3651047	0					
ANR	3651064	Identifier	branch		3651047	1					
ANR	3651065	AssignmentExpression	* * branch = & tree -> branch		3651047	2		=			
ANR	3651066	Identifier	branch		3651047	0					
ANR	3651067	UnaryOperationExpression	& tree -> branch		3651047	1					
ANR	3651068	UnaryOperator	&		3651047	0					
ANR	3651069	PtrMemberAccess	tree -> branch		3651047	1					
ANR	3651070	Identifier	tree		3651047	0					
ANR	3651071	Identifier	branch		3651047	1					
ANR	3651072	DoStatement	do		3651047	2					
ANR	3651073	CompoundStatement		5:4:79:79	3651047	0					
ANR	3651074	IfStatement	if ( * branch == NULL )		3651047	0					
ANR	3651075	Condition	* branch == NULL	148:6:4241:4255	3651047	0	True				
ANR	3651076	EqualityExpression	* branch == NULL		3651047	0		==			
ANR	3651077	UnaryOperationExpression	* branch		3651047	0					
ANR	3651078	UnaryOperator	*		3651047	0					
ANR	3651079	Identifier	branch		3651047	1					
ANR	3651080	Identifier	NULL		3651047	1					
ANR	3651081	CompoundStatement		6:23:104:104	3651047	1					
ANR	3651082	BreakStatement	break ;	149:3:4263:4268	3651047	0	True				
ANR	3651083	ExpressionStatement	branch = & ( * branch ) -> branches [ ( idx >> i ) % 2 ]	151:2:4276:4321	3651047	1	True				
ANR	3651084	AssignmentExpression	branch = & ( * branch ) -> branches [ ( idx >> i ) % 2 ]		3651047	0		=			
ANR	3651085	Identifier	branch		3651047	0					
ANR	3651086	UnaryOperationExpression	& ( * branch ) -> branches [ ( idx >> i ) % 2 ]		3651047	1					
ANR	3651087	UnaryOperator	&		3651047	0					
ANR	3651088	ArrayIndexing	( * branch ) -> branches [ ( idx >> i ) % 2 ]		3651047	1					
ANR	3651089	PtrMemberAccess	( * branch ) -> branches		3651047	0					
ANR	3651090	UnaryOperationExpression	* branch		3651047	0					
ANR	3651091	UnaryOperator	*		3651047	0					
ANR	3651092	Identifier	branch		3651047	1					
ANR	3651093	Identifier	branches		3651047	1					
ANR	3651094	MultiplicativeExpression	( idx >> i ) % 2		3651047	1		%			
ANR	3651095	ShiftExpression	idx >> i		3651047	0		>>			
ANR	3651096	Identifier	idx		3651047	0					
ANR	3651097	Identifier	i		3651047	1					
ANR	3651098	PrimaryExpression	2		3651047	1					
ANR	3651099	Condition	i --	152:10:4333:4335	3651047	1	True				
ANR	3651100	PostIncDecOperationExpression	i --		3651047	0					
ANR	3651101	Identifier	i		3651047	0					
ANR	3651102	IncDec	--		3651047	1					
ANR	3651103	IfStatement	if ( * branch == NULL )		3651047	3					
ANR	3651104	Condition	* branch == NULL	154:5:4345:4359	3651047	0	True				
ANR	3651105	EqualityExpression	* branch == NULL		3651047	0		==			
ANR	3651106	UnaryOperationExpression	* branch		3651047	0					
ANR	3651107	UnaryOperator	*		3651047	0					
ANR	3651108	Identifier	branch		3651047	1					
ANR	3651109	Identifier	NULL		3651047	1					
ANR	3651110	CompoundStatement		12:22:208:208	3651047	1					
ANR	3651111	IfStatement	if ( ! ( flags & PHPDBG_BTREE_INSERT ) )		3651047	0					
ANR	3651112	Condition	! ( flags & PHPDBG_BTREE_INSERT )	155:6:4370:4399	3651047	0	True				
ANR	3651113	UnaryOperationExpression	! ( flags & PHPDBG_BTREE_INSERT )		3651047	0					
ANR	3651114	UnaryOperator	!		3651047	0					
ANR	3651115	BitAndExpression	flags & PHPDBG_BTREE_INSERT		3651047	1		&			
ANR	3651116	Identifier	flags		3651047	0					
ANR	3651117	Identifier	PHPDBG_BTREE_INSERT		3651047	1					
ANR	3651118	CompoundStatement		13:38:248:248	3651047	1					
ANR	3651119	ReturnStatement	return FAILURE ;	156:3:4407:4421	3651047	0	True				
ANR	3651120	Identifier	FAILURE		3651047	0					
ANR	3651121	CompoundStatement		18:3:281:367	3651047	1					
ANR	3651122	IdentifierDeclStatement	phpdbg_btree_branch * memory = * branch = emalloc ( ( i + 2 ) * sizeof ( phpdbg_btree_branch ) ) ;	160:3:4435:4521	3651047	0	True				
ANR	3651123	IdentifierDecl	* memory = * branch = emalloc ( ( i + 2 ) * sizeof ( phpdbg_btree_branch ) )		3651047	0					
ANR	3651124	IdentifierDeclType	phpdbg_btree_branch *		3651047	0					
ANR	3651125	Identifier	memory		3651047	1					
ANR	3651126	AssignmentExpression	* memory = * branch = emalloc ( ( i + 2 ) * sizeof ( phpdbg_btree_branch ) )		3651047	2		=			
ANR	3651127	Identifier	memory		3651047	0					
ANR	3651128	AssignmentExpression	* branch = emalloc ( ( i + 2 ) * sizeof ( phpdbg_btree_branch ) )		3651047	1		=			
ANR	3651129	UnaryOperationExpression	* branch		3651047	0					
ANR	3651130	UnaryOperator	*		3651047	0					
ANR	3651131	Identifier	branch		3651047	1					
ANR	3651132	CallExpression	emalloc ( ( i + 2 ) * sizeof ( phpdbg_btree_branch ) )		3651047	1					
ANR	3651133	Callee	emalloc		3651047	0					
ANR	3651134	Identifier	emalloc		3651047	0					
ANR	3651135	ArgumentList	( i + 2 ) * sizeof ( phpdbg_btree_branch )		3651047	1					
ANR	3651136	Argument	( i + 2 ) * sizeof ( phpdbg_btree_branch )		3651047	0					
ANR	3651137	MultiplicativeExpression	( i + 2 ) * sizeof ( phpdbg_btree_branch )		3651047	0		*			
ANR	3651138	AdditiveExpression	i + 2		3651047	0		+			
ANR	3651139	Identifier	i		3651047	0					
ANR	3651140	PrimaryExpression	2		3651047	1					
ANR	3651141	SizeofExpression	sizeof ( phpdbg_btree_branch )		3651047	1					
ANR	3651142	Sizeof	sizeof		3651047	0					
ANR	3651143	SizeofOperand	phpdbg_btree_branch		3651047	1					
ANR	3651144	DoStatement	do		3651047	1					
ANR	3651145	CompoundStatement		19:6:375:375	3651047	0					
ANR	3651146	ExpressionStatement	( * branch ) -> branches [ ! ( ( idx >> i ) % 2 ) ] = NULL	162:4:4535:4580	3651047	0	True				
ANR	3651147	AssignmentExpression	( * branch ) -> branches [ ! ( ( idx >> i ) % 2 ) ] = NULL		3651047	0		=			
ANR	3651148	ArrayIndexing	( * branch ) -> branches [ ! ( ( idx >> i ) % 2 ) ]		3651047	0					
ANR	3651149	PtrMemberAccess	( * branch ) -> branches		3651047	0					
ANR	3651150	UnaryOperationExpression	* branch		3651047	0					
ANR	3651151	UnaryOperator	*		3651047	0					
ANR	3651152	Identifier	branch		3651047	1					
ANR	3651153	Identifier	branches		3651047	1					
ANR	3651154	UnaryOperationExpression	! ( ( idx >> i ) % 2 )		3651047	1					
ANR	3651155	UnaryOperator	!		3651047	0					
ANR	3651156	MultiplicativeExpression	( idx >> i ) % 2		3651047	1		%			
ANR	3651157	ShiftExpression	idx >> i		3651047	0		>>			
ANR	3651158	Identifier	idx		3651047	0					
ANR	3651159	Identifier	i		3651047	1					
ANR	3651160	PrimaryExpression	2		3651047	1					
ANR	3651161	Identifier	NULL		3651047	1					
ANR	3651162	ExpressionStatement	branch = & ( * branch ) -> branches [ ( idx >> i ) % 2 ]	163:4:4586:4631	3651047	1	True				
ANR	3651163	AssignmentExpression	branch = & ( * branch ) -> branches [ ( idx >> i ) % 2 ]		3651047	0		=			
ANR	3651164	Identifier	branch		3651047	0					
ANR	3651165	UnaryOperationExpression	& ( * branch ) -> branches [ ( idx >> i ) % 2 ]		3651047	1					
ANR	3651166	UnaryOperator	&		3651047	0					
ANR	3651167	ArrayIndexing	( * branch ) -> branches [ ( idx >> i ) % 2 ]		3651047	1					
ANR	3651168	PtrMemberAccess	( * branch ) -> branches		3651047	0					
ANR	3651169	UnaryOperationExpression	* branch		3651047	0					
ANR	3651170	UnaryOperator	*		3651047	0					
ANR	3651171	Identifier	branch		3651047	1					
ANR	3651172	Identifier	branches		3651047	1					
ANR	3651173	MultiplicativeExpression	( idx >> i ) % 2		3651047	1		%			
ANR	3651174	ShiftExpression	idx >> i		3651047	0		>>			
ANR	3651175	Identifier	idx		3651047	0					
ANR	3651176	Identifier	i		3651047	1					
ANR	3651177	PrimaryExpression	2		3651047	1					
ANR	3651178	ExpressionStatement	* branch = ++ memory	164:4:4637:4655	3651047	2	True				
ANR	3651179	AssignmentExpression	* branch = ++ memory		3651047	0		=			
ANR	3651180	UnaryOperationExpression	* branch		3651047	0					
ANR	3651181	UnaryOperator	*		3651047	0					
ANR	3651182	Identifier	branch		3651047	1					
ANR	3651183	UnaryExpression	++ memory		3651047	1					
ANR	3651184	IncDec	++		3651047	0					
ANR	3651185	Identifier	memory		3651047	1					
ANR	3651186	Condition	i --	165:12:4669:4671	3651047	1	True				
ANR	3651187	PostIncDecOperationExpression	i --		3651047	0					
ANR	3651188	Identifier	i		3651047	0					
ANR	3651189	IncDec	--		3651047	1					
ANR	3651190	ExpressionStatement	tree -> count ++	166:3:4678:4691	3651047	2	True				
ANR	3651191	PostIncDecOperationExpression	tree -> count ++		3651047	0					
ANR	3651192	PtrMemberAccess	tree -> count		3651047	0					
ANR	3651193	Identifier	tree		3651047	0					
ANR	3651194	Identifier	count		3651047	1					
ANR	3651195	IncDec	++		3651047	1					
ANR	3651196	ElseStatement	else		3651047	0					
ANR	3651197	IfStatement	if ( ! ( flags & PHPDBG_BTREE_UPDATE ) )		3651047	0					
ANR	3651198	Condition	! ( flags & PHPDBG_BTREE_UPDATE )	168:12:4709:4738	3651047	0	True				
ANR	3651199	UnaryOperationExpression	! ( flags & PHPDBG_BTREE_UPDATE )		3651047	0					
ANR	3651200	UnaryOperator	!		3651047	0					
ANR	3651201	BitAndExpression	flags & PHPDBG_BTREE_UPDATE		3651047	1		&			
ANR	3651202	Identifier	flags		3651047	0					
ANR	3651203	Identifier	PHPDBG_BTREE_UPDATE		3651047	1					
ANR	3651204	CompoundStatement		26:44:587:587	3651047	1					
ANR	3651205	ReturnStatement	return FAILURE ;	169:2:4745:4759	3651047	0	True				
ANR	3651206	Identifier	FAILURE		3651047	0					
ANR	3651207	ExpressionStatement	( * branch ) -> result . idx = idx	172:1:4766:4793	3651047	4	True				
ANR	3651208	AssignmentExpression	( * branch ) -> result . idx = idx		3651047	0		=			
ANR	3651209	MemberAccess	( * branch ) -> result . idx		3651047	0					
ANR	3651210	PtrMemberAccess	( * branch ) -> result		3651047	0					
ANR	3651211	UnaryOperationExpression	* branch		3651047	0					
ANR	3651212	UnaryOperator	*		3651047	0					
ANR	3651213	Identifier	branch		3651047	1					
ANR	3651214	Identifier	result		3651047	1					
ANR	3651215	Identifier	idx		3651047	1					
ANR	3651216	Identifier	idx		3651047	1					
ANR	3651217	ExpressionStatement	( * branch ) -> result . ptr = ptr	173:1:4796:4823	3651047	5	True				
ANR	3651218	AssignmentExpression	( * branch ) -> result . ptr = ptr		3651047	0		=			
ANR	3651219	MemberAccess	( * branch ) -> result . ptr		3651047	0					
ANR	3651220	PtrMemberAccess	( * branch ) -> result		3651047	0					
ANR	3651221	UnaryOperationExpression	* branch		3651047	0					
ANR	3651222	UnaryOperator	*		3651047	0					
ANR	3651223	Identifier	branch		3651047	1					
ANR	3651224	Identifier	result		3651047	1					
ANR	3651225	Identifier	ptr		3651047	1					
ANR	3651226	Identifier	ptr		3651047	1					
ANR	3651227	ReturnStatement	return SUCCESS ;	175:1:4827:4841	3651047	6	True				
ANR	3651228	Identifier	SUCCESS		3651047	0					
ANR	3651229	ReturnType	int		3651047	1					
ANR	3651230	Identifier	phpdbg_btree_insert_or_update		3651047	2					
ANR	3651231	ParameterList	"phpdbg_btree * tree , zend_ulong idx , void * ptr , int flags"		3651047	3					
ANR	3651232	Parameter	phpdbg_btree * tree	143:34:4095:4112	3651047	0	True				
ANR	3651233	ParameterType	phpdbg_btree *		3651047	0					
ANR	3651234	Identifier	tree		3651047	1					
ANR	3651235	Parameter	zend_ulong idx	143:54:4115:4128	3651047	1	True				
ANR	3651236	ParameterType	zend_ulong		3651047	0					
ANR	3651237	Identifier	idx		3651047	1					
ANR	3651238	Parameter	void * ptr	143:70:4131:4139	3651047	2	True				
ANR	3651239	ParameterType	void *		3651047	0					
ANR	3651240	Identifier	ptr		3651047	1					
ANR	3651241	Parameter	int flags	143:81:4142:4150	3651047	3	True				
ANR	3651242	ParameterType	int		3651047	0					
ANR	3651243	Identifier	flags		3651047	1					
ANR	3651244	CFGEntryNode	ENTRY		3651047		True				
ANR	3651245	CFGExitNode	EXIT		3651047		True				
ANR	3651246	Symbol	memory		3651047						
ANR	3651247	Symbol	PHPDBG_BTREE_INSERT		3651047						
ANR	3651248	Symbol	( * branch ) -> result . idx		3651047						
ANR	3651249	Symbol	PHPDBG_BTREE_UPDATE		3651047						
ANR	3651250	Symbol	flags		3651047						
ANR	3651251	Symbol	* ( * branch ) -> branches		3651047						
ANR	3651252	Symbol	tree -> depth		3651047						
ANR	3651253	Symbol	* * branch		3651047						
ANR	3651254	Symbol	branch		3651047						
ANR	3651255	Symbol	( * branch ) -> branches		3651047						
ANR	3651256	Symbol	emalloc		3651047						
ANR	3651257	Symbol	( * branch ) -> result . ptr		3651047						
ANR	3651258	Symbol	* idx		3651047						
ANR	3651259	Symbol	& tree -> branch		3651047						
ANR	3651260	Symbol	NULL		3651047						
ANR	3651261	Symbol	SUCCESS		3651047						
ANR	3651262	Symbol	tree		3651047						
ANR	3651263	Symbol	i		3651047						
ANR	3651264	Symbol	FAILURE		3651047						
ANR	3651265	Symbol	ptr		3651047						
ANR	3651266	Symbol	* tree		3651047						
ANR	3651267	Symbol	* i		3651047						
ANR	3651268	Symbol	tree -> count		3651047						
ANR	3651269	Symbol	( * branch ) -> result		3651047						
ANR	3651270	Symbol	* * * branch		3651047						
ANR	3651271	Symbol	idx		3651047						
ANR	3651272	Symbol	* branch		3651047						
ANR	3651273	Function	phpdbg_btree_delete	178:0:4846:6378							
ANR	3651274	FunctionDef	"phpdbg_btree_delete (phpdbg_btree * tree , zend_ulong idx)"		3651273	0					
ANR	3651275	CompoundStatement		178:60:4906:6378	3651273	0					
ANR	3651276	IdentifierDeclStatement	int i = tree -> depth ;	179:1:4909:4928	3651273	0	True				
ANR	3651277	IdentifierDecl	i = tree -> depth		3651273	0					
ANR	3651278	IdentifierDeclType	int		3651273	0					
ANR	3651279	Identifier	i		3651273	1					
ANR	3651280	AssignmentExpression	i = tree -> depth		3651273	2		=			
ANR	3651281	Identifier	i		3651273	0					
ANR	3651282	PtrMemberAccess	tree -> depth		3651273	1					
ANR	3651283	Identifier	tree		3651273	0					
ANR	3651284	Identifier	depth		3651273	1					
ANR	3651285	IdentifierDeclStatement	phpdbg_btree_branch * branch = tree -> branch ;	180:1:4931:4973	3651273	1	True				
ANR	3651286	IdentifierDecl	* branch = tree -> branch		3651273	0					
ANR	3651287	IdentifierDeclType	phpdbg_btree_branch *		3651273	0					
ANR	3651288	Identifier	branch		3651273	1					
ANR	3651289	AssignmentExpression	* branch = tree -> branch		3651273	2		=			
ANR	3651290	Identifier	branch		3651273	0					
ANR	3651291	PtrMemberAccess	tree -> branch		3651273	1					
ANR	3651292	Identifier	tree		3651273	0					
ANR	3651293	Identifier	branch		3651273	1					
ANR	3651294	IdentifierDeclStatement	"int i_last_dual_branch = - 1 , last_dual_branch_branch ;"	181:1:4976:5028	3651273	2	True				
ANR	3651295	IdentifierDecl	i_last_dual_branch = - 1		3651273	0					
ANR	3651296	IdentifierDeclType	int		3651273	0					
ANR	3651297	Identifier	i_last_dual_branch		3651273	1					
ANR	3651298	AssignmentExpression	i_last_dual_branch = - 1		3651273	2		=			
ANR	3651299	Identifier	i_last_dual_branch		3651273	0					
ANR	3651300	UnaryOperationExpression	- 1		3651273	1					
ANR	3651301	UnaryOperator	-		3651273	0					
ANR	3651302	PrimaryExpression	1		3651273	1					
ANR	3651303	IdentifierDecl	last_dual_branch_branch		3651273	1					
ANR	3651304	IdentifierDeclType	int		3651273	0					
ANR	3651305	Identifier	last_dual_branch_branch		3651273	1					
ANR	3651306	IdentifierDeclStatement	phpdbg_btree_branch * last_dual_branch = NULL ;	182:1:5031:5075	3651273	3	True				
ANR	3651307	IdentifierDecl	* last_dual_branch = NULL		3651273	0					
ANR	3651308	IdentifierDeclType	phpdbg_btree_branch *		3651273	0					
ANR	3651309	Identifier	last_dual_branch		3651273	1					
ANR	3651310	AssignmentExpression	* last_dual_branch = NULL		3651273	2		=			
ANR	3651311	Identifier	NULL		3651273	0					
ANR	3651312	Identifier	NULL		3651273	1					
ANR	3651313	GotoStatement	goto check_branch_existence ;	184:1:5079:5106	3651273	4	True				
ANR	3651314	Identifier	check_branch_existence		3651273	0					
ANR	3651315	DoStatement	do		3651273	5					
ANR	3651316	CompoundStatement		8:4:205:205	3651273	0					
ANR	3651317	IfStatement	if ( branch -> branches [ 0 ] && branch -> branches [ 1 ] )		3651273	0					
ANR	3651318	Condition	branch -> branches [ 0 ] && branch -> branches [ 1 ]	186:6:5120:5161	3651273	0	True				
ANR	3651319	AndExpression	branch -> branches [ 0 ] && branch -> branches [ 1 ]		3651273	0		&&			
ANR	3651320	ArrayIndexing	branch -> branches [ 0 ]		3651273	0					
ANR	3651321	PtrMemberAccess	branch -> branches		3651273	0					
ANR	3651322	Identifier	branch		3651273	0					
ANR	3651323	Identifier	branches		3651273	1					
ANR	3651324	PrimaryExpression	0		3651273	1					
ANR	3651325	ArrayIndexing	branch -> branches [ 1 ]		3651273	1					
ANR	3651326	PtrMemberAccess	branch -> branches		3651273	0					
ANR	3651327	Identifier	branch		3651273	0					
ANR	3651328	Identifier	branches		3651273	1					
ANR	3651329	PrimaryExpression	1		3651273	1					
ANR	3651330	CompoundStatement		9:50:257:257	3651273	1					
ANR	3651331	ExpressionStatement	last_dual_branch = branch	187:3:5169:5194	3651273	0	True				
ANR	3651332	AssignmentExpression	last_dual_branch = branch		3651273	0		=			
ANR	3651333	Identifier	last_dual_branch		3651273	0					
ANR	3651334	Identifier	branch		3651273	1					
ANR	3651335	ExpressionStatement	i_last_dual_branch = i	188:3:5199:5221	3651273	1	True				
ANR	3651336	AssignmentExpression	i_last_dual_branch = i		3651273	0		=			
ANR	3651337	Identifier	i_last_dual_branch		3651273	0					
ANR	3651338	Identifier	i		3651273	1					
ANR	3651339	ExpressionStatement	last_dual_branch_branch = ( idx >> i ) % 2	189:3:5226:5266	3651273	2	True				
ANR	3651340	AssignmentExpression	last_dual_branch_branch = ( idx >> i ) % 2		3651273	0		=			
ANR	3651341	Identifier	last_dual_branch_branch		3651273	0					
ANR	3651342	MultiplicativeExpression	( idx >> i ) % 2		3651273	1		%			
ANR	3651343	ShiftExpression	idx >> i		3651273	0		>>			
ANR	3651344	Identifier	idx		3651273	0					
ANR	3651345	Identifier	i		3651273	1					
ANR	3651346	PrimaryExpression	2		3651273	1					
ANR	3651347	ExpressionStatement	branch = branch -> branches [ ( idx >> i ) % 2 ]	191:2:5274:5315	3651273	1	True				
ANR	3651348	AssignmentExpression	branch = branch -> branches [ ( idx >> i ) % 2 ]		3651273	0		=			
ANR	3651349	Identifier	branch		3651273	0					
ANR	3651350	ArrayIndexing	branch -> branches [ ( idx >> i ) % 2 ]		3651273	1					
ANR	3651351	PtrMemberAccess	branch -> branches		3651273	0					
ANR	3651352	Identifier	branch		3651273	0					
ANR	3651353	Identifier	branches		3651273	1					
ANR	3651354	MultiplicativeExpression	( idx >> i ) % 2		3651273	1		%			
ANR	3651355	ShiftExpression	idx >> i		3651273	0		>>			
ANR	3651356	Identifier	idx		3651273	0					
ANR	3651357	Identifier	i		3651273	1					
ANR	3651358	PrimaryExpression	2		3651273	1					
ANR	3651359	Label	check_branch_existence :	193:0:5318:5340	3651273	2	True				
ANR	3651360	Identifier	check_branch_existence		3651273	0					
ANR	3651361	IfStatement	if ( branch == NULL )		3651273	3					
ANR	3651362	Condition	branch == NULL	194:6:5348:5361	3651273	0	True				
ANR	3651363	EqualityExpression	branch == NULL		3651273	0		==			
ANR	3651364	Identifier	branch		3651273	0					
ANR	3651365	Identifier	NULL		3651273	1					
ANR	3651366	CompoundStatement		17:22:457:457	3651273	1					
ANR	3651367	ReturnStatement	return FAILURE ;	195:3:5369:5383	3651273	0	True				
ANR	3651368	Identifier	FAILURE		3651273	0					
ANR	3651369	Condition	i --	197:10:5399:5401	3651273	1	True				
ANR	3651370	PostIncDecOperationExpression	i --		3651273	0					
ANR	3651371	Identifier	i		3651273	0					
ANR	3651372	IncDec	--		3651273	1					
ANR	3651373	ExpressionStatement	tree -> count --	199:1:5407:5420	3651273	6	True				
ANR	3651374	PostIncDecOperationExpression	tree -> count --		3651273	0					
ANR	3651375	PtrMemberAccess	tree -> count		3651273	0					
ANR	3651376	Identifier	tree		3651273	0					
ANR	3651377	Identifier	count		3651273	1					
ANR	3651378	IncDec	--		3651273	1					
ANR	3651379	IfStatement	if ( i_last_dual_branch == - 1 )		3651273	7					
ANR	3651380	Condition	i_last_dual_branch == - 1	201:5:5428:5451	3651273	0	True				
ANR	3651381	EqualityExpression	i_last_dual_branch == - 1		3651273	0		==			
ANR	3651382	Identifier	i_last_dual_branch		3651273	0					
ANR	3651383	UnaryOperationExpression	- 1		3651273	1					
ANR	3651384	UnaryOperator	-		3651273	0					
ANR	3651385	PrimaryExpression	1		3651273	1					
ANR	3651386	CompoundStatement		24:31:547:547	3651273	1					
ANR	3651387	ExpressionStatement	efree ( tree -> branch )	202:2:5458:5477	3651273	0	True				
ANR	3651388	CallExpression	efree ( tree -> branch )		3651273	0					
ANR	3651389	Callee	efree		3651273	0					
ANR	3651390	Identifier	efree		3651273	0					
ANR	3651391	ArgumentList	tree -> branch		3651273	1					
ANR	3651392	Argument	tree -> branch		3651273	0					
ANR	3651393	PtrMemberAccess	tree -> branch		3651273	0					
ANR	3651394	Identifier	tree		3651273	0					
ANR	3651395	Identifier	branch		3651273	1					
ANR	3651396	ExpressionStatement	tree -> branch = NULL	203:2:5481:5500	3651273	1	True				
ANR	3651397	AssignmentExpression	tree -> branch = NULL		3651273	0		=			
ANR	3651398	PtrMemberAccess	tree -> branch		3651273	0					
ANR	3651399	Identifier	tree		3651273	0					
ANR	3651400	Identifier	branch		3651273	1					
ANR	3651401	Identifier	NULL		3651273	1					
ANR	3651402	ElseStatement	else		3651273	0					
ANR	3651403	CompoundStatement		27:8:603:603	3651273	0					
ANR	3651404	IfStatement	if ( last_dual_branch -> branches [ last_dual_branch_branch ] == last_dual_branch + 1 )		3651273	0					
ANR	3651405	Condition	last_dual_branch -> branches [ last_dual_branch_branch ] == last_dual_branch + 1	205:6:5518:5592	3651273	0	True				
ANR	3651406	EqualityExpression	last_dual_branch -> branches [ last_dual_branch_branch ] == last_dual_branch + 1		3651273	0		==			
ANR	3651407	ArrayIndexing	last_dual_branch -> branches [ last_dual_branch_branch ]		3651273	0					
ANR	3651408	PtrMemberAccess	last_dual_branch -> branches		3651273	0					
ANR	3651409	Identifier	last_dual_branch		3651273	0					
ANR	3651410	Identifier	branches		3651273	1					
ANR	3651411	Identifier	last_dual_branch_branch		3651273	1					
ANR	3651412	AdditiveExpression	last_dual_branch + 1		3651273	1		+			
ANR	3651413	Identifier	last_dual_branch		3651273	0					
ANR	3651414	PrimaryExpression	1		3651273	1					
ANR	3651415	CompoundStatement		29:3:693:784	3651273	1					
ANR	3651416	IdentifierDeclStatement	phpdbg_btree_branch * original_branch = last_dual_branch -> branches [ ! last_dual_branch_branch ] ;	206:3:5600:5691	3651273	0	True				
ANR	3651417	IdentifierDecl	* original_branch = last_dual_branch -> branches [ ! last_dual_branch_branch ]		3651273	0					
ANR	3651418	IdentifierDeclType	phpdbg_btree_branch *		3651273	0					
ANR	3651419	Identifier	original_branch		3651273	1					
ANR	3651420	AssignmentExpression	* original_branch = last_dual_branch -> branches [ ! last_dual_branch_branch ]		3651273	2		=			
ANR	3651421	Identifier	original_branch		3651273	0					
ANR	3651422	ArrayIndexing	last_dual_branch -> branches [ ! last_dual_branch_branch ]		3651273	1					
ANR	3651423	PtrMemberAccess	last_dual_branch -> branches		3651273	0					
ANR	3651424	Identifier	last_dual_branch		3651273	0					
ANR	3651425	Identifier	branches		3651273	1					
ANR	3651426	UnaryOperationExpression	! last_dual_branch_branch		3651273	1					
ANR	3651427	UnaryOperator	!		3651273	0					
ANR	3651428	Identifier	last_dual_branch_branch		3651273	1					
ANR	3651429	ExpressionStatement	"memcpy ( last_dual_branch + 1 , last_dual_branch -> branches [ ! last_dual_branch_branch ] , ( i_last_dual_branch + 1 ) * sizeof ( phpdbg_btree_branch ) )"	208:3:5697:5835	3651273	1	True				
ANR	3651430	CallExpression	"memcpy ( last_dual_branch + 1 , last_dual_branch -> branches [ ! last_dual_branch_branch ] , ( i_last_dual_branch + 1 ) * sizeof ( phpdbg_btree_branch ) )"		3651273	0					
ANR	3651431	Callee	memcpy		3651273	0					
ANR	3651432	Identifier	memcpy		3651273	0					
ANR	3651433	ArgumentList	last_dual_branch + 1		3651273	1					
ANR	3651434	Argument	last_dual_branch + 1		3651273	0					
ANR	3651435	AdditiveExpression	last_dual_branch + 1		3651273	0		+			
ANR	3651436	Identifier	last_dual_branch		3651273	0					
ANR	3651437	PrimaryExpression	1		3651273	1					
ANR	3651438	Argument	last_dual_branch -> branches [ ! last_dual_branch_branch ]		3651273	1					
ANR	3651439	ArrayIndexing	last_dual_branch -> branches [ ! last_dual_branch_branch ]		3651273	0					
ANR	3651440	PtrMemberAccess	last_dual_branch -> branches		3651273	0					
ANR	3651441	Identifier	last_dual_branch		3651273	0					
ANR	3651442	Identifier	branches		3651273	1					
ANR	3651443	UnaryOperationExpression	! last_dual_branch_branch		3651273	1					
ANR	3651444	UnaryOperator	!		3651273	0					
ANR	3651445	Identifier	last_dual_branch_branch		3651273	1					
ANR	3651446	Argument	( i_last_dual_branch + 1 ) * sizeof ( phpdbg_btree_branch )		3651273	2					
ANR	3651447	MultiplicativeExpression	( i_last_dual_branch + 1 ) * sizeof ( phpdbg_btree_branch )		3651273	0		*			
ANR	3651448	AdditiveExpression	i_last_dual_branch + 1		3651273	0		+			
ANR	3651449	Identifier	i_last_dual_branch		3651273	0					
ANR	3651450	PrimaryExpression	1		3651273	1					
ANR	3651451	SizeofExpression	sizeof ( phpdbg_btree_branch )		3651273	1					
ANR	3651452	Sizeof	sizeof		3651273	0					
ANR	3651453	SizeofOperand	phpdbg_btree_branch		3651273	1					
ANR	3651454	ExpressionStatement	efree ( last_dual_branch -> branches [ ! last_dual_branch_branch ] )	209:3:5840:5899	3651273	2	True				
ANR	3651455	CallExpression	efree ( last_dual_branch -> branches [ ! last_dual_branch_branch ] )		3651273	0					
ANR	3651456	Callee	efree		3651273	0					
ANR	3651457	Identifier	efree		3651273	0					
ANR	3651458	ArgumentList	last_dual_branch -> branches [ ! last_dual_branch_branch ]		3651273	1					
ANR	3651459	Argument	last_dual_branch -> branches [ ! last_dual_branch_branch ]		3651273	0					
ANR	3651460	ArrayIndexing	last_dual_branch -> branches [ ! last_dual_branch_branch ]		3651273	0					
ANR	3651461	PtrMemberAccess	last_dual_branch -> branches		3651273	0					
ANR	3651462	Identifier	last_dual_branch		3651273	0					
ANR	3651463	Identifier	branches		3651273	1					
ANR	3651464	UnaryOperationExpression	! last_dual_branch_branch		3651273	1					
ANR	3651465	UnaryOperator	!		3651273	0					
ANR	3651466	Identifier	last_dual_branch_branch		3651273	1					
ANR	3651467	ExpressionStatement	last_dual_branch -> branches [ ! last_dual_branch_branch ] = last_dual_branch + 1	210:3:5904:5979	3651273	3	True				
ANR	3651468	AssignmentExpression	last_dual_branch -> branches [ ! last_dual_branch_branch ] = last_dual_branch + 1		3651273	0		=			
ANR	3651469	ArrayIndexing	last_dual_branch -> branches [ ! last_dual_branch_branch ]		3651273	0					
ANR	3651470	PtrMemberAccess	last_dual_branch -> branches		3651273	0					
ANR	3651471	Identifier	last_dual_branch		3651273	0					
ANR	3651472	Identifier	branches		3651273	1					
ANR	3651473	UnaryOperationExpression	! last_dual_branch_branch		3651273	1					
ANR	3651474	UnaryOperator	!		3651273	0					
ANR	3651475	Identifier	last_dual_branch_branch		3651273	1					
ANR	3651476	AdditiveExpression	last_dual_branch + 1		3651273	1		+			
ANR	3651477	Identifier	last_dual_branch		3651273	0					
ANR	3651478	PrimaryExpression	1		3651273	1					
ANR	3651479	ExpressionStatement	branch = last_dual_branch -> branches [ ! last_dual_branch_branch ]	212:3:5985:6046	3651273	4	True				
ANR	3651480	AssignmentExpression	branch = last_dual_branch -> branches [ ! last_dual_branch_branch ]		3651273	0		=			
ANR	3651481	Identifier	branch		3651273	0					
ANR	3651482	ArrayIndexing	last_dual_branch -> branches [ ! last_dual_branch_branch ]		3651273	1					
ANR	3651483	PtrMemberAccess	last_dual_branch -> branches		3651273	0					
ANR	3651484	Identifier	last_dual_branch		3651273	0					
ANR	3651485	Identifier	branches		3651273	1					
ANR	3651486	UnaryOperationExpression	! last_dual_branch_branch		3651273	1					
ANR	3651487	UnaryOperator	!		3651273	0					
ANR	3651488	Identifier	last_dual_branch_branch		3651273	1					
ANR	3651489	ForStatement	for ( i = i_last_dual_branch ; i -- ; )		3651273	5					
ANR	3651490	ForInit	i = i_last_dual_branch ;	213:8:6056:6078	3651273	0	True				
ANR	3651491	AssignmentExpression	i = i_last_dual_branch		3651273	0		=			
ANR	3651492	Identifier	i		3651273	0					
ANR	3651493	Identifier	i_last_dual_branch		3651273	1					
ANR	3651494	Condition	i --	213:32:6080:6082	3651273	1	True				
ANR	3651495	PostIncDecOperationExpression	i --		3651273	0					
ANR	3651496	Identifier	i		3651273	0					
ANR	3651497	IncDec	--		3651273	1					
ANR	3651498	CompoundStatement		36:38:1179:1179	3651273	2					
ANR	3651499	ExpressionStatement	branch = ( branch -> branches [ branch -> branches [ 1 ] == ++ original_branch ] = last_dual_branch + i_last_dual_branch - i + 1 )	214:4:6092:6209	3651273	0	True				
ANR	3651500	AssignmentExpression	branch = ( branch -> branches [ branch -> branches [ 1 ] == ++ original_branch ] = last_dual_branch + i_last_dual_branch - i + 1 )		3651273	0		=			
ANR	3651501	Identifier	branch		3651273	0					
ANR	3651502	AssignmentExpression	branch -> branches [ branch -> branches [ 1 ] == ++ original_branch ] = last_dual_branch + i_last_dual_branch - i + 1		3651273	1		=			
ANR	3651503	ArrayIndexing	branch -> branches [ branch -> branches [ 1 ] == ++ original_branch ]		3651273	0					
ANR	3651504	PtrMemberAccess	branch -> branches		3651273	0					
ANR	3651505	Identifier	branch		3651273	0					
ANR	3651506	Identifier	branches		3651273	1					
ANR	3651507	EqualityExpression	branch -> branches [ 1 ] == ++ original_branch		3651273	1		==			
ANR	3651508	ArrayIndexing	branch -> branches [ 1 ]		3651273	0					
ANR	3651509	PtrMemberAccess	branch -> branches		3651273	0					
ANR	3651510	Identifier	branch		3651273	0					
ANR	3651511	Identifier	branches		3651273	1					
ANR	3651512	PrimaryExpression	1		3651273	1					
ANR	3651513	UnaryExpression	++ original_branch		3651273	1					
ANR	3651514	IncDec	++		3651273	0					
ANR	3651515	Identifier	original_branch		3651273	1					
ANR	3651516	AdditiveExpression	last_dual_branch + i_last_dual_branch - i + 1		3651273	1		+			
ANR	3651517	Identifier	last_dual_branch		3651273	0					
ANR	3651518	AdditiveExpression	i_last_dual_branch - i + 1		3651273	1		-			
ANR	3651519	Identifier	i_last_dual_branch		3651273	0					
ANR	3651520	AdditiveExpression	i + 1		3651273	1		+			
ANR	3651521	Identifier	i		3651273	0					
ANR	3651522	PrimaryExpression	1		3651273	1					
ANR	3651523	ElseStatement	else		3651273	0					
ANR	3651524	CompoundStatement		39:9:1318:1318	3651273	0					
ANR	3651525	ExpressionStatement	efree ( last_dual_branch -> branches [ last_dual_branch_branch ] )	217:3:6230:6288	3651273	0	True				
ANR	3651526	CallExpression	efree ( last_dual_branch -> branches [ last_dual_branch_branch ] )		3651273	0					
ANR	3651527	Callee	efree		3651273	0					
ANR	3651528	Identifier	efree		3651273	0					
ANR	3651529	ArgumentList	last_dual_branch -> branches [ last_dual_branch_branch ]		3651273	1					
ANR	3651530	Argument	last_dual_branch -> branches [ last_dual_branch_branch ]		3651273	0					
ANR	3651531	ArrayIndexing	last_dual_branch -> branches [ last_dual_branch_branch ]		3651273	0					
ANR	3651532	PtrMemberAccess	last_dual_branch -> branches		3651273	0					
ANR	3651533	Identifier	last_dual_branch		3651273	0					
ANR	3651534	Identifier	branches		3651273	1					
ANR	3651535	Identifier	last_dual_branch_branch		3651273	1					
ANR	3651536	ExpressionStatement	last_dual_branch -> branches [ last_dual_branch_branch ] = NULL	220:2:6297:6355	3651273	1	True				
ANR	3651537	AssignmentExpression	last_dual_branch -> branches [ last_dual_branch_branch ] = NULL		3651273	0		=			
ANR	3651538	ArrayIndexing	last_dual_branch -> branches [ last_dual_branch_branch ]		3651273	0					
ANR	3651539	PtrMemberAccess	last_dual_branch -> branches		3651273	0					
ANR	3651540	Identifier	last_dual_branch		3651273	0					
ANR	3651541	Identifier	branches		3651273	1					
ANR	3651542	Identifier	last_dual_branch_branch		3651273	1					
ANR	3651543	Identifier	NULL		3651273	1					
ANR	3651544	ReturnStatement	return SUCCESS ;	223:1:6362:6376	3651273	8	True				
ANR	3651545	Identifier	SUCCESS		3651273	0					
ANR	3651546	ReturnType	int		3651273	1					
ANR	3651547	Identifier	phpdbg_btree_delete		3651273	2					
ANR	3651548	ParameterList	"phpdbg_btree * tree , zend_ulong idx"		3651273	3					
ANR	3651549	Parameter	phpdbg_btree * tree	178:24:4870:4887	3651273	0	True				
ANR	3651550	ParameterType	phpdbg_btree *		3651273	0					
ANR	3651551	Identifier	tree		3651273	1					
ANR	3651552	Parameter	zend_ulong idx	178:44:4890:4903	3651273	1	True				
ANR	3651553	ParameterType	zend_ulong		3651273	0					
ANR	3651554	Identifier	idx		3651273	1					
ANR	3651555	CFGEntryNode	ENTRY		3651273		True				
ANR	3651556	CFGExitNode	EXIT		3651273		True				
ANR	3651557	Symbol	tree -> depth		3651273						
ANR	3651558	Symbol	* branch -> branches		3651273						
ANR	3651559	Symbol	* * branch		3651273						
ANR	3651560	Symbol	branch		3651273						
ANR	3651561	Symbol	last_dual_branch_branch		3651273						
ANR	3651562	Symbol	last_dual_branch		3651273						
ANR	3651563	Symbol	* last_dual_branch -> branches		3651273						
ANR	3651564	Symbol	original_branch		3651273						
ANR	3651565	Symbol	* idx		3651273						
ANR	3651566	Symbol	* * last_dual_branch		3651273						
ANR	3651567	Symbol	i_last_dual_branch		3651273						
ANR	3651568	Symbol	NULL		3651273						
ANR	3651569	Symbol	* * branch -> branches		3651273						
ANR	3651570	Symbol	SUCCESS		3651273						
ANR	3651571	Symbol	branch -> branches		3651273						
ANR	3651572	Symbol	* last_dual_branch		3651273						
ANR	3651573	Symbol	* last_dual_branch_branch		3651273						
ANR	3651574	Symbol	tree		3651273						
ANR	3651575	Symbol	i		3651273						
ANR	3651576	Symbol	last_dual_branch -> branches		3651273						
ANR	3651577	Symbol	FAILURE		3651273						
ANR	3651578	Symbol	* tree		3651273						
ANR	3651579	Symbol	tree -> branch		3651273						
ANR	3651580	Symbol	* i		3651273						
ANR	3651581	Symbol	tree -> count		3651273						
ANR	3651582	Symbol	* * * branch		3651273						
ANR	3651583	Symbol	* original_branch		3651273						
ANR	3651584	Symbol	idx		3651273						
ANR	3651585	Symbol	* branch		3651273						
ANR	3651586	Function	phpdbg_btree_branch_dump	226:0:6381:6705							
ANR	3651587	FunctionDef	"phpdbg_btree_branch_dump (phpdbg_btree_branch * branch , zend_ulong depth)"		3651586	0					
ANR	3651588	CompoundStatement		226:77:6458:6705	3651586	0					
ANR	3651589	IfStatement	if ( branch )		3651586	0					
ANR	3651590	Condition	branch	227:5:6465:6470	3651586	0	True				
ANR	3651591	Identifier	branch		3651586	0					
ANR	3651592	CompoundStatement		2:13:14:14	3651586	1					
ANR	3651593	IfStatement	if ( depth -- )		3651586	0					
ANR	3651594	Condition	depth --	228:6:6481:6487	3651586	0	True				
ANR	3651595	PostIncDecOperationExpression	depth --		3651586	0					
ANR	3651596	Identifier	depth		3651586	0					
ANR	3651597	IncDec	--		3651586	1					
ANR	3651598	CompoundStatement		3:15:31:31	3651586	1					
ANR	3651599	ExpressionStatement	"phpdbg_btree_branch_dump ( branch -> branches [ 0 ] , depth )"	229:3:6495:6547	3651586	0	True				
ANR	3651600	CallExpression	"phpdbg_btree_branch_dump ( branch -> branches [ 0 ] , depth )"		3651586	0					
ANR	3651601	Callee	phpdbg_btree_branch_dump		3651586	0					
ANR	3651602	Identifier	phpdbg_btree_branch_dump		3651586	0					
ANR	3651603	ArgumentList	branch -> branches [ 0 ]		3651586	1					
ANR	3651604	Argument	branch -> branches [ 0 ]		3651586	0					
ANR	3651605	ArrayIndexing	branch -> branches [ 0 ]		3651586	0					
ANR	3651606	PtrMemberAccess	branch -> branches		3651586	0					
ANR	3651607	Identifier	branch		3651586	0					
ANR	3651608	Identifier	branches		3651586	1					
ANR	3651609	PrimaryExpression	0		3651586	1					
ANR	3651610	Argument	depth		3651586	1					
ANR	3651611	Identifier	depth		3651586	0					
ANR	3651612	ExpressionStatement	"phpdbg_btree_branch_dump ( branch -> branches [ 1 ] , depth )"	230:3:6552:6604	3651586	1	True				
ANR	3651613	CallExpression	"phpdbg_btree_branch_dump ( branch -> branches [ 1 ] , depth )"		3651586	0					
ANR	3651614	Callee	phpdbg_btree_branch_dump		3651586	0					
ANR	3651615	Identifier	phpdbg_btree_branch_dump		3651586	0					
ANR	3651616	ArgumentList	branch -> branches [ 1 ]		3651586	1					
ANR	3651617	Argument	branch -> branches [ 1 ]		3651586	0					
ANR	3651618	ArrayIndexing	branch -> branches [ 1 ]		3651586	0					
ANR	3651619	PtrMemberAccess	branch -> branches		3651586	0					
ANR	3651620	Identifier	branch		3651586	0					
ANR	3651621	Identifier	branches		3651586	1					
ANR	3651622	PrimaryExpression	1		3651586	1					
ANR	3651623	Argument	depth		3651586	1					
ANR	3651624	Identifier	depth		3651586	0					
ANR	3651625	ElseStatement	else		3651586	0					
ANR	3651626	CompoundStatement		6:9:156:156	3651586	0					
ANR	3651627	ExpressionStatement	"fprintf ( stderr , ""%p: %p\\n"" , ( void * ) branch -> result . idx , branch -> result . ptr )"	232:3:6620:6696	3651586	0	True				
ANR	3651628	CallExpression	"fprintf ( stderr , ""%p: %p\\n"" , ( void * ) branch -> result . idx , branch -> result . ptr )"		3651586	0					
ANR	3651629	Callee	fprintf		3651586	0					
ANR	3651630	Identifier	fprintf		3651586	0					
ANR	3651631	ArgumentList	stderr		3651586	1					
ANR	3651632	Argument	stderr		3651586	0					
ANR	3651633	Identifier	stderr		3651586	0					
ANR	3651634	Argument	"""%p: %p\\n"""		3651586	1					
ANR	3651635	PrimaryExpression	"""%p: %p\\n"""		3651586	0					
ANR	3651636	Argument	( void * ) branch -> result . idx		3651586	2					
ANR	3651637	CastExpression	( void * ) branch -> result . idx		3651586	0					
ANR	3651638	CastTarget	void *		3651586	0					
ANR	3651639	MemberAccess	branch -> result . idx		3651586	1					
ANR	3651640	PtrMemberAccess	branch -> result		3651586	0					
ANR	3651641	Identifier	branch		3651586	0					
ANR	3651642	Identifier	result		3651586	1					
ANR	3651643	Identifier	idx		3651586	1					
ANR	3651644	Argument	branch -> result . ptr		3651586	3					
ANR	3651645	MemberAccess	branch -> result . ptr		3651586	0					
ANR	3651646	PtrMemberAccess	branch -> result		3651586	0					
ANR	3651647	Identifier	branch		3651586	0					
ANR	3651648	Identifier	result		3651586	1					
ANR	3651649	Identifier	ptr		3651586	1					
ANR	3651650	ReturnType	void		3651586	1					
ANR	3651651	Identifier	phpdbg_btree_branch_dump		3651586	2					
ANR	3651652	ParameterList	"phpdbg_btree_branch * branch , zend_ulong depth"		3651586	3					
ANR	3651653	Parameter	phpdbg_btree_branch * branch	226:30:6411:6437	3651586	0	True				
ANR	3651654	ParameterType	phpdbg_btree_branch *		3651586	0					
ANR	3651655	Identifier	branch		3651586	1					
ANR	3651656	Parameter	zend_ulong depth	226:59:6440:6455	3651586	1	True				
ANR	3651657	ParameterType	zend_ulong		3651586	0					
ANR	3651658	Identifier	depth		3651586	1					
ANR	3651659	CFGEntryNode	ENTRY		3651586		True				
ANR	3651660	CFGExitNode	EXIT		3651586		True				
ANR	3651661	Symbol	branch -> result . idx		3651586						
ANR	3651662	Symbol	branch -> result . ptr		3651586						
ANR	3651663	Symbol	depth		3651586						
ANR	3651664	Symbol	branch -> branches		3651586						
ANR	3651665	Symbol	* branch -> branches		3651586						
ANR	3651666	Symbol	* * branch		3651586						
ANR	3651667	Symbol	stderr		3651586						
ANR	3651668	Symbol	branch		3651586						
ANR	3651669	Symbol	* branch		3651586						
ANR	3651670	Symbol	branch -> result		3651586						
ANR	3651671	Function	phpdbg_btree_dump	237:0:6708:6807							
ANR	3651672	FunctionDef	phpdbg_btree_dump (phpdbg_btree * tree)		3651671	0					
ANR	3651673	CompoundStatement		237:43:6751:6807	3651671	0					
ANR	3651674	ExpressionStatement	"phpdbg_btree_branch_dump ( tree -> branch , tree -> depth )"	238:1:6754:6805	3651671	0	True				
ANR	3651675	CallExpression	"phpdbg_btree_branch_dump ( tree -> branch , tree -> depth )"		3651671	0					
ANR	3651676	Callee	phpdbg_btree_branch_dump		3651671	0					
ANR	3651677	Identifier	phpdbg_btree_branch_dump		3651671	0					
ANR	3651678	ArgumentList	tree -> branch		3651671	1					
ANR	3651679	Argument	tree -> branch		3651671	0					
ANR	3651680	PtrMemberAccess	tree -> branch		3651671	0					
ANR	3651681	Identifier	tree		3651671	0					
ANR	3651682	Identifier	branch		3651671	1					
ANR	3651683	Argument	tree -> depth		3651671	1					
ANR	3651684	PtrMemberAccess	tree -> depth		3651671	0					
ANR	3651685	Identifier	tree		3651671	0					
ANR	3651686	Identifier	depth		3651671	1					
ANR	3651687	ReturnType	void		3651671	1					
ANR	3651688	Identifier	phpdbg_btree_dump		3651671	2					
ANR	3651689	ParameterList	phpdbg_btree * tree		3651671	3					
ANR	3651690	Parameter	phpdbg_btree * tree	237:23:6731:6748	3651671	0	True				
ANR	3651691	ParameterType	phpdbg_btree *		3651671	0					
ANR	3651692	Identifier	tree		3651671	1					
ANR	3651693	CFGEntryNode	ENTRY		3651671		True				
ANR	3651694	CFGExitNode	EXIT		3651671		True				
ANR	3651695	Symbol	* tree		3651671						
ANR	3651696	Symbol	tree -> branch		3651671						
ANR	3651697	Symbol	tree		3651671						
ANR	3651698	Symbol	tree -> depth		3651671						
