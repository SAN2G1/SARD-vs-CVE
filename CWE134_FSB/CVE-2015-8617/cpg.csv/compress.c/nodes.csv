command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	470682	File	data/converged/CVE-2015-8617_php-src/compress.c								
ANR	470683	DeclStmt									
ANR	470684	Decl							void ( * ) ( int )	void ( * ) ( int )	sig_t
ANR	470685	ClassDef	<unnamed>	72:14:2428:3492							
ANR	470686	DeclStmt									
ANR	470687	Decl							const char	const char [ 8 ]	magic
ANR	470688	DeclStmt									
ANR	470689	Decl							size_t	size_t	maglen
ANR	470690	DeclStmt									
ANR	470691	Decl							const char	const char * [ 3 ]	argv
ANR	470692	DeclStmt									
ANR	470693	Decl							int	int	silent
ANR	470694	DeclStmt									
ANR	470695	Decl								 [ ]	compr
ANR	470696	DeclStmt									
ANR	470697	Decl							ssize_t	"ssize_t ( int , const void * , size_t )"	swrite
ANR	470698	DeclStmt									
ANR	470699	Decl							size_t	"size_t ( struct magic_set * , int , size_t , const unsigned char * , unsigned char * * , size_t )"	uncompressbuf
ANR	470700	DeclStmt									
ANR	470701	Decl							size_t	"size_t ( struct magic_set * , const unsigned char * , unsigned char * * , size_t )"	uncompressgzipped
ANR	470702	Function	file_zmagic	107:10:3873:5021							
ANR	470703	FunctionDef	"file_zmagic (struct magic_set * ms , int fd , const char * name , const unsigned char * buf , size_t nbytes)"		470702	0					
ANR	470704	CompoundStatement		110:0:3982:5021	470702	0					
ANR	470705	IdentifierDeclStatement	unsigned char * newbuf = NULL ;	111:1:3985:4013	470702	0	True				
ANR	470706	IdentifierDecl	* newbuf = NULL		470702	0					
ANR	470707	IdentifierDeclType	unsigned char *		470702	0					
ANR	470708	Identifier	newbuf		470702	1					
ANR	470709	AssignmentExpression	* newbuf = NULL		470702	2		=			
ANR	470710	Identifier	NULL		470702	0					
ANR	470711	Identifier	NULL		470702	1					
ANR	470712	IdentifierDeclStatement	"size_t i , nsz ;"	112:1:4016:4029	470702	1	True				
ANR	470713	IdentifierDecl	i		470702	0					
ANR	470714	IdentifierDeclType	size_t		470702	0					
ANR	470715	Identifier	i		470702	1					
ANR	470716	IdentifierDecl	nsz		470702	1					
ANR	470717	IdentifierDeclType	size_t		470702	0					
ANR	470718	Identifier	nsz		470702	1					
ANR	470719	IdentifierDeclStatement	int rv = 0 ;	113:1:4032:4042	470702	2	True				
ANR	470720	IdentifierDecl	rv = 0		470702	0					
ANR	470721	IdentifierDeclType	int		470702	0					
ANR	470722	Identifier	rv		470702	1					
ANR	470723	AssignmentExpression	rv = 0		470702	2		=			
ANR	470724	Identifier	rv		470702	0					
ANR	470725	PrimaryExpression	0		470702	1					
ANR	470726	IdentifierDeclStatement	int mime = ms -> flags & MAGIC_MIME ;	114:1:4045:4078	470702	3	True				
ANR	470727	IdentifierDecl	mime = ms -> flags & MAGIC_MIME		470702	0					
ANR	470728	IdentifierDeclType	int		470702	0					
ANR	470729	Identifier	mime		470702	1					
ANR	470730	AssignmentExpression	mime = ms -> flags & MAGIC_MIME		470702	2		=			
ANR	470731	Identifier	mime		470702	0					
ANR	470732	BitAndExpression	ms -> flags & MAGIC_MIME		470702	1		&			
ANR	470733	PtrMemberAccess	ms -> flags		470702	0					
ANR	470734	Identifier	ms		470702	0					
ANR	470735	Identifier	flags		470702	1					
ANR	470736	Identifier	MAGIC_MIME		470702	1					
ANR	470737	IdentifierDeclStatement	sig_t osigpipe ;	116:1:4102:4116	470702	4	True				
ANR	470738	IdentifierDecl	osigpipe		470702	0					
ANR	470739	IdentifierDeclType	sig_t		470702	0					
ANR	470740	Identifier	osigpipe		470702	1					
ANR	470741	IfStatement	if ( ( ms -> flags & MAGIC_COMPRESS ) == 0 )		470702	5					
ANR	470742	Condition	( ms -> flags & MAGIC_COMPRESS ) == 0	119:5:4131:4163	470702	0	True				
ANR	470743	EqualityExpression	( ms -> flags & MAGIC_COMPRESS ) == 0		470702	0		==			
ANR	470744	BitAndExpression	ms -> flags & MAGIC_COMPRESS		470702	0		&			
ANR	470745	PtrMemberAccess	ms -> flags		470702	0					
ANR	470746	Identifier	ms		470702	0					
ANR	470747	Identifier	flags		470702	1					
ANR	470748	Identifier	MAGIC_COMPRESS		470702	1					
ANR	470749	PrimaryExpression	0		470702	1					
ANR	470750	ReturnStatement	return 0 ;	120:2:4168:4176	470702	1	True				
ANR	470751	PrimaryExpression	0		470702	0					
ANR	470752	ExpressionStatement	"osigpipe = signal ( SIGPIPE , SIG_IGN )"	123:1:4201:4236	470702	6	True				
ANR	470753	AssignmentExpression	"osigpipe = signal ( SIGPIPE , SIG_IGN )"		470702	0		=			
ANR	470754	Identifier	osigpipe		470702	0					
ANR	470755	CallExpression	"signal ( SIGPIPE , SIG_IGN )"		470702	1					
ANR	470756	Callee	signal		470702	0					
ANR	470757	Identifier	signal		470702	0					
ANR	470758	ArgumentList	SIGPIPE		470702	1					
ANR	470759	Argument	SIGPIPE		470702	0					
ANR	470760	Identifier	SIGPIPE		470702	0					
ANR	470761	Argument	SIG_IGN		470702	1					
ANR	470762	Identifier	SIG_IGN		470702	0					
ANR	470763	ForStatement	for ( i = 0 ; i < ncompr ; i ++ )		470702	7					
ANR	470764	ForInit	i = 0 ;	125:6:4251:4256	470702	0	True				
ANR	470765	AssignmentExpression	i = 0		470702	0		=			
ANR	470766	Identifier	i		470702	0					
ANR	470767	PrimaryExpression	0		470702	1					
ANR	470768	Condition	i < ncompr	125:13:4258:4267	470702	1	True				
ANR	470769	RelationalExpression	i < ncompr		470702	0		<			
ANR	470770	Identifier	i		470702	0					
ANR	470771	Identifier	ncompr		470702	1					
ANR	470772	PostIncDecOperationExpression	i ++	125:25:4270:4272	470702	2	True				
ANR	470773	Identifier	i		470702	0					
ANR	470774	IncDec	++		470702	1					
ANR	470775	CompoundStatement		16:30:292:292	470702	3					
ANR	470776	IfStatement	if ( nbytes < compr [ i ] . maglen )		470702	0					
ANR	470777	Condition	nbytes < compr [ i ] . maglen	126:6:4283:4306	470702	0	True				
ANR	470778	RelationalExpression	nbytes < compr [ i ] . maglen		470702	0		<			
ANR	470779	Identifier	nbytes		470702	0					
ANR	470780	MemberAccess	compr [ i ] . maglen		470702	1					
ANR	470781	ArrayIndexing	compr [ i ]		470702	0					
ANR	470782	Identifier	compr		470702	0					
ANR	470783	Identifier	i		470702	1					
ANR	470784	Identifier	maglen		470702	1					
ANR	470785	ContinueStatement	continue ;	127:3:4312:4320	470702	1	True				
ANR	470786	IfStatement	"if ( memcmp ( buf , compr [ i ] . magic , compr [ i ] . maglen ) == 0 && ( nsz = uncompressbuf ( ms , fd , i , buf , & newbuf , nbytes ) ) != NODATA )"		470702	1					
ANR	470787	Condition	"memcmp ( buf , compr [ i ] . magic , compr [ i ] . maglen ) == 0 && ( nsz = uncompressbuf ( ms , fd , i , buf , & newbuf , nbytes ) ) != NODATA"	128:6:4328:4456	470702	0	True				
ANR	470788	AndExpression	"memcmp ( buf , compr [ i ] . magic , compr [ i ] . maglen ) == 0 && ( nsz = uncompressbuf ( ms , fd , i , buf , & newbuf , nbytes ) ) != NODATA"		470702	0		&&			
ANR	470789	EqualityExpression	"memcmp ( buf , compr [ i ] . magic , compr [ i ] . maglen ) == 0"		470702	0		==			
ANR	470790	CallExpression	"memcmp ( buf , compr [ i ] . magic , compr [ i ] . maglen )"		470702	0					
ANR	470791	Callee	memcmp		470702	0					
ANR	470792	Identifier	memcmp		470702	0					
ANR	470793	ArgumentList	buf		470702	1					
ANR	470794	Argument	buf		470702	0					
ANR	470795	Identifier	buf		470702	0					
ANR	470796	Argument	compr [ i ] . magic		470702	1					
ANR	470797	MemberAccess	compr [ i ] . magic		470702	0					
ANR	470798	ArrayIndexing	compr [ i ]		470702	0					
ANR	470799	Identifier	compr		470702	0					
ANR	470800	Identifier	i		470702	1					
ANR	470801	Identifier	magic		470702	1					
ANR	470802	Argument	compr [ i ] . maglen		470702	2					
ANR	470803	MemberAccess	compr [ i ] . maglen		470702	0					
ANR	470804	ArrayIndexing	compr [ i ]		470702	0					
ANR	470805	Identifier	compr		470702	0					
ANR	470806	Identifier	i		470702	1					
ANR	470807	Identifier	maglen		470702	1					
ANR	470808	PrimaryExpression	0		470702	1					
ANR	470809	EqualityExpression	"( nsz = uncompressbuf ( ms , fd , i , buf , & newbuf , nbytes ) ) != NODATA"		470702	1		!=			
ANR	470810	AssignmentExpression	"nsz = uncompressbuf ( ms , fd , i , buf , & newbuf , nbytes )"		470702	0		=			
ANR	470811	Identifier	nsz		470702	0					
ANR	470812	CallExpression	"uncompressbuf ( ms , fd , i , buf , & newbuf , nbytes )"		470702	1					
ANR	470813	Callee	uncompressbuf		470702	0					
ANR	470814	Identifier	uncompressbuf		470702	0					
ANR	470815	ArgumentList	ms		470702	1					
ANR	470816	Argument	ms		470702	0					
ANR	470817	Identifier	ms		470702	0					
ANR	470818	Argument	fd		470702	1					
ANR	470819	Identifier	fd		470702	0					
ANR	470820	Argument	i		470702	2					
ANR	470821	Identifier	i		470702	0					
ANR	470822	Argument	buf		470702	3					
ANR	470823	Identifier	buf		470702	0					
ANR	470824	Argument	& newbuf		470702	4					
ANR	470825	UnaryOperationExpression	& newbuf		470702	0					
ANR	470826	UnaryOperator	&		470702	0					
ANR	470827	Identifier	newbuf		470702	1					
ANR	470828	Argument	nbytes		470702	5					
ANR	470829	Identifier	nbytes		470702	0					
ANR	470830	Identifier	NODATA		470702	1					
ANR	470831	CompoundStatement		21:26:476:476	470702	1					
ANR	470832	ExpressionStatement	ms -> flags &= ~MAGIC_COMPRESS	131:3:4464:4492	470702	0	True				
ANR	470833	AssignmentExpression	ms -> flags &= ~MAGIC_COMPRESS		470702	0		&=			
ANR	470834	PtrMemberAccess	ms -> flags		470702	0					
ANR	470835	Identifier	ms		470702	0					
ANR	470836	Identifier	flags		470702	1					
ANR	470837	Identifier	~MAGIC_COMPRESS		470702	1					
ANR	470838	ExpressionStatement	rv = - 1	132:3:4497:4504	470702	1	True				
ANR	470839	AssignmentExpression	rv = - 1		470702	0		=			
ANR	470840	Identifier	rv		470702	0					
ANR	470841	UnaryOperationExpression	- 1		470702	1					
ANR	470842	UnaryOperator	-		470702	0					
ANR	470843	PrimaryExpression	1		470702	1					
ANR	470844	IfStatement	"if ( file_buffer ( ms , - 1 , name , newbuf , nsz ) == - 1 )"		470702	2					
ANR	470845	Condition	"file_buffer ( ms , - 1 , name , newbuf , nsz ) == - 1"	133:7:4513:4556	470702	0	True				
ANR	470846	EqualityExpression	"file_buffer ( ms , - 1 , name , newbuf , nsz ) == - 1"		470702	0		==			
ANR	470847	CallExpression	"file_buffer ( ms , - 1 , name , newbuf , nsz )"		470702	0					
ANR	470848	Callee	file_buffer		470702	0					
ANR	470849	Identifier	file_buffer		470702	0					
ANR	470850	ArgumentList	ms		470702	1					
ANR	470851	Argument	ms		470702	0					
ANR	470852	Identifier	ms		470702	0					
ANR	470853	Argument	- 1		470702	1					
ANR	470854	UnaryOperationExpression	- 1		470702	0					
ANR	470855	UnaryOperator	-		470702	0					
ANR	470856	PrimaryExpression	1		470702	1					
ANR	470857	Argument	name		470702	2					
ANR	470858	Identifier	name		470702	0					
ANR	470859	Argument	newbuf		470702	3					
ANR	470860	Identifier	newbuf		470702	0					
ANR	470861	Argument	nsz		470702	4					
ANR	470862	Identifier	nsz		470702	0					
ANR	470863	UnaryOperationExpression	- 1		470702	1					
ANR	470864	UnaryOperator	-		470702	0					
ANR	470865	PrimaryExpression	1		470702	1					
ANR	470866	GotoStatement	goto error ;	134:4:4563:4573	470702	1	True				
ANR	470867	Identifier	error		470702	0					
ANR	470868	IfStatement	if ( mime == MAGIC_MIME || mime == 0 )		470702	3					
ANR	470869	Condition	mime == MAGIC_MIME || mime == 0	136:7:4583:4613	470702	0	True				
ANR	470870	OrExpression	mime == MAGIC_MIME || mime == 0		470702	0		||			
ANR	470871	EqualityExpression	mime == MAGIC_MIME		470702	0		==			
ANR	470872	Identifier	mime		470702	0					
ANR	470873	Identifier	MAGIC_MIME		470702	1					
ANR	470874	EqualityExpression	mime == 0		470702	1		==			
ANR	470875	Identifier	mime		470702	0					
ANR	470876	PrimaryExpression	0		470702	1					
ANR	470877	CompoundStatement		27:40:633:633	470702	1					
ANR	470878	IfStatement	"if ( file_printf ( ms , mime ? "" compressed-encoding="" : "" ("" ) == - 1 )"		470702	0					
ANR	470879	Condition	"file_printf ( ms , mime ? "" compressed-encoding="" : "" ("" ) == - 1"	137:8:4626:4693	470702	0	True				
ANR	470880	EqualityExpression	"file_printf ( ms , mime ? "" compressed-encoding="" : "" ("" ) == - 1"		470702	0		==			
ANR	470881	CallExpression	"file_printf ( ms , mime ? "" compressed-encoding="" : "" ("" )"		470702	0					
ANR	470882	Callee	file_printf		470702	0					
ANR	470883	Identifier	file_printf		470702	0					
ANR	470884	ArgumentList	ms		470702	1					
ANR	470885	Argument	ms		470702	0					
ANR	470886	Identifier	ms		470702	0					
ANR	470887	Argument	"mime ? "" compressed-encoding="" : "" ("""		470702	1					
ANR	470888	ConditionalExpression	"mime ? "" compressed-encoding="" : "" ("""		470702	0					
ANR	470889	Condition	mime		470702	0					
ANR	470890	Identifier	mime		470702	0					
ANR	470891	PrimaryExpression	""" compressed-encoding="""		470702	1					
ANR	470892	PrimaryExpression	""" ("""		470702	2					
ANR	470893	UnaryOperationExpression	- 1		470702	1					
ANR	470894	UnaryOperator	-		470702	0					
ANR	470895	PrimaryExpression	1		470702	1					
ANR	470896	GotoStatement	goto error ;	139:5:4701:4711	470702	1	True				
ANR	470897	Identifier	error		470702	0					
ANR	470898	IfStatement	"if ( file_buffer ( ms , - 1 , NULL , buf , nbytes ) == - 1 )"		470702	1					
ANR	470899	Condition	"file_buffer ( ms , - 1 , NULL , buf , nbytes ) == - 1"	140:8:4721:4764	470702	0	True				
ANR	470900	EqualityExpression	"file_buffer ( ms , - 1 , NULL , buf , nbytes ) == - 1"		470702	0		==			
ANR	470901	CallExpression	"file_buffer ( ms , - 1 , NULL , buf , nbytes )"		470702	0					
ANR	470902	Callee	file_buffer		470702	0					
ANR	470903	Identifier	file_buffer		470702	0					
ANR	470904	ArgumentList	ms		470702	1					
ANR	470905	Argument	ms		470702	0					
ANR	470906	Identifier	ms		470702	0					
ANR	470907	Argument	- 1		470702	1					
ANR	470908	UnaryOperationExpression	- 1		470702	0					
ANR	470909	UnaryOperator	-		470702	0					
ANR	470910	PrimaryExpression	1		470702	1					
ANR	470911	Argument	NULL		470702	2					
ANR	470912	Identifier	NULL		470702	0					
ANR	470913	Argument	buf		470702	3					
ANR	470914	Identifier	buf		470702	0					
ANR	470915	Argument	nbytes		470702	4					
ANR	470916	Identifier	nbytes		470702	0					
ANR	470917	UnaryOperationExpression	- 1		470702	1					
ANR	470918	UnaryOperator	-		470702	0					
ANR	470919	PrimaryExpression	1		470702	1					
ANR	470920	GotoStatement	goto error ;	141:5:4772:4782	470702	1	True				
ANR	470921	Identifier	error		470702	0					
ANR	470922	IfStatement	"if ( ! mime && file_printf ( ms , "")"" ) == - 1 )"		470702	2					
ANR	470923	Condition	"! mime && file_printf ( ms , "")"" ) == - 1"	142:8:4792:4826	470702	0	True				
ANR	470924	AndExpression	"! mime && file_printf ( ms , "")"" ) == - 1"		470702	0		&&			
ANR	470925	UnaryOperationExpression	! mime		470702	0					
ANR	470926	UnaryOperator	!		470702	0					
ANR	470927	Identifier	mime		470702	1					
ANR	470928	EqualityExpression	"file_printf ( ms , "")"" ) == - 1"		470702	1		==			
ANR	470929	CallExpression	"file_printf ( ms , "")"" )"		470702	0					
ANR	470930	Callee	file_printf		470702	0					
ANR	470931	Identifier	file_printf		470702	0					
ANR	470932	ArgumentList	ms		470702	1					
ANR	470933	Argument	ms		470702	0					
ANR	470934	Identifier	ms		470702	0					
ANR	470935	Argument	""")"""		470702	1					
ANR	470936	PrimaryExpression	""")"""		470702	0					
ANR	470937	UnaryOperationExpression	- 1		470702	1					
ANR	470938	UnaryOperator	-		470702	0					
ANR	470939	PrimaryExpression	1		470702	1					
ANR	470940	GotoStatement	goto error ;	143:5:4834:4844	470702	1	True				
ANR	470941	Identifier	error		470702	0					
ANR	470942	ExpressionStatement	rv = 1	146:3:4855:4861	470702	4	True				
ANR	470943	AssignmentExpression	rv = 1		470702	0		=			
ANR	470944	Identifier	rv		470702	0					
ANR	470945	PrimaryExpression	1		470702	1					
ANR	470946	BreakStatement	break ;	147:3:4866:4871	470702	5	True				
ANR	470947	Label	error :	150:0:4880:4885	470702	8	True				
ANR	470948	Identifier	error		470702	0					
ANR	470949	ExpressionStatement	"( void ) signal ( SIGPIPE , osigpipe )"	152:1:4909:4940	470702	9	True				
ANR	470950	CastExpression	"( void ) signal ( SIGPIPE , osigpipe )"		470702	0					
ANR	470951	CastTarget	void		470702	0					
ANR	470952	CallExpression	"signal ( SIGPIPE , osigpipe )"		470702	1					
ANR	470953	Callee	signal		470702	0					
ANR	470954	Identifier	signal		470702	0					
ANR	470955	ArgumentList	SIGPIPE		470702	1					
ANR	470956	Argument	SIGPIPE		470702	0					
ANR	470957	Identifier	SIGPIPE		470702	0					
ANR	470958	Argument	osigpipe		470702	1					
ANR	470959	Identifier	osigpipe		470702	0					
ANR	470960	IfStatement	if ( newbuf )		470702	10					
ANR	470961	Condition	newbuf	154:5:4954:4959	470702	0	True				
ANR	470962	Identifier	newbuf		470702	0					
ANR	470963	ExpressionStatement	efree ( newbuf )	155:2:4964:4977	470702	1	True				
ANR	470964	CallExpression	efree ( newbuf )		470702	0					
ANR	470965	Callee	efree		470702	0					
ANR	470966	Identifier	efree		470702	0					
ANR	470967	ArgumentList	newbuf		470702	1					
ANR	470968	Argument	newbuf		470702	0					
ANR	470969	Identifier	newbuf		470702	0					
ANR	470970	ExpressionStatement	ms -> flags |= MAGIC_COMPRESS	156:1:4980:5007	470702	11	True				
ANR	470971	AssignmentExpression	ms -> flags |= MAGIC_COMPRESS		470702	0		|=			
ANR	470972	PtrMemberAccess	ms -> flags		470702	0					
ANR	470973	Identifier	ms		470702	0					
ANR	470974	Identifier	flags		470702	1					
ANR	470975	Identifier	MAGIC_COMPRESS		470702	1					
ANR	470976	ReturnStatement	return rv ;	157:1:5010:5019	470702	12	True				
ANR	470977	Identifier	rv		470702	0					
ANR	470978	ReturnType	int		470702	1					
ANR	470979	Identifier	file_zmagic		470702	2					
ANR	470980	ParameterList	"struct magic_set * ms , int fd , const char * name , const unsigned char * buf , size_t nbytes"		470702	3					
ANR	470981	Parameter	struct magic_set * ms	108:12:3889:3908	470702	0	True				
ANR	470982	ParameterType	struct magic_set *		470702	0					
ANR	470983	Identifier	ms		470702	1					
ANR	470984	Parameter	int fd	108:34:3911:3916	470702	1	True				
ANR	470985	ParameterType	int		470702	0					
ANR	470986	Identifier	fd		470702	1					
ANR	470987	Parameter	const char * name	108:42:3919:3934	470702	2	True				
ANR	470988	ParameterType	const char *		470702	0					
ANR	470989	Identifier	name		470702	1					
ANR	470990	Parameter	const unsigned char * buf	109:4:3941:3964	470702	3	True				
ANR	470991	ParameterType	const unsigned char *		470702	0					
ANR	470992	Identifier	buf		470702	1					
ANR	470993	Parameter	size_t nbytes	109:30:3967:3979	470702	4	True				
ANR	470994	ParameterType	size_t		470702	0					
ANR	470995	Identifier	nbytes		470702	1					
ANR	470996	CFGEntryNode	ENTRY		470702		True				
ANR	470997	CFGExitNode	EXIT		470702		True				
ANR	470998	Symbol	compr [ i ] . maglen		470702						
ANR	470999	Symbol	rv		470702						
ANR	471000	Symbol	file_printf		470702						
ANR	471001	Symbol	mime		470702						
ANR	471002	Symbol	ncompr		470702						
ANR	471003	Symbol	uncompressbuf		470702						
ANR	471004	Symbol	* compr		470702						
ANR	471005	Symbol	* ms		470702						
ANR	471006	Symbol	~MAGIC_COMPRESS		470702						
ANR	471007	Symbol	memcmp		470702						
ANR	471008	Symbol	nsz		470702						
ANR	471009	Symbol	MAGIC_COMPRESS		470702						
ANR	471010	Symbol	SIGPIPE		470702						
ANR	471011	Symbol	file_buffer		470702						
ANR	471012	Symbol	signal		470702						
ANR	471013	Symbol	NULL		470702						
ANR	471014	Symbol	MAGIC_MIME		470702						
ANR	471015	Symbol	compr		470702						
ANR	471016	Symbol	ms		470702						
ANR	471017	Symbol	newbuf		470702						
ANR	471018	Symbol	i		470702						
ANR	471019	Symbol	SIG_IGN		470702						
ANR	471020	Symbol	osigpipe		470702						
ANR	471021	Symbol	nbytes		470702						
ANR	471022	Symbol	buf		470702						
ANR	471023	Symbol	* i		470702						
ANR	471024	Symbol	name		470702						
ANR	471025	Symbol	NODATA		470702						
ANR	471026	Symbol	compr [ i ] . magic		470702						
ANR	471027	Symbol	ms -> flags		470702						
ANR	471028	Symbol	& newbuf		470702						
ANR	471029	Symbol	fd		470702						
ANR	471030	Function	swrite	163:8:5084:5372							
ANR	471031	FunctionDef	"swrite (int fd , const void * buf , size_t n)"		471030	0					
ANR	471032	CompoundStatement		165:0:5134:5372	471030	0					
ANR	471033	IdentifierDeclStatement	ssize_t rv ;	166:1:5137:5147	471030	0	True				
ANR	471034	IdentifierDecl	rv		471030	0					
ANR	471035	IdentifierDeclType	ssize_t		471030	0					
ANR	471036	Identifier	rv		471030	1					
ANR	471037	IdentifierDeclStatement	size_t rn = n ;	167:1:5150:5163	471030	1	True				
ANR	471038	IdentifierDecl	rn = n		471030	0					
ANR	471039	IdentifierDeclType	size_t		471030	0					
ANR	471040	Identifier	rn		471030	1					
ANR	471041	AssignmentExpression	rn = n		471030	2		=			
ANR	471042	Identifier	n		471030	0					
ANR	471043	Identifier	n		471030	1					
ANR	471044	DoStatement	do		471030	2					
ANR	471045	SwitchStatement	"switch ( rv = write ( fd , buf , n ) )"		471030	0					
ANR	471046	Condition	"rv = write ( fd , buf , n )"	170:10:5180:5201	471030	0	True				
ANR	471047	AssignmentExpression	"rv = write ( fd , buf , n )"		471030	0		=			
ANR	471048	Identifier	rv		471030	0					
ANR	471049	CallExpression	"write ( fd , buf , n )"		471030	1					
ANR	471050	Callee	write		471030	0					
ANR	471051	Identifier	write		471030	0					
ANR	471052	ArgumentList	fd		471030	1					
ANR	471053	Argument	fd		471030	0					
ANR	471054	Identifier	fd		471030	0					
ANR	471055	Argument	buf		471030	1					
ANR	471056	Identifier	buf		471030	0					
ANR	471057	Argument	n		471030	2					
ANR	471058	Identifier	n		471030	0					
ANR	471059	CompoundStatement		6:34:69:69	471030	1					
ANR	471060	Statement	case	171:2:5208:5211	471030	0	True				
ANR	471061	Statement	-	171:7:5213:5213	471030	1	True				
ANR	471062	Label	1 :	171:8:5214:5215	471030	2	True				
ANR	471063	IfStatement	if ( errno == EINTR )		471030	3					
ANR	471064	Condition	errno == EINTR	172:7:5224:5237	471030	0	True				
ANR	471065	EqualityExpression	errno == EINTR		471030	0		==			
ANR	471066	Identifier	errno		471030	0					
ANR	471067	Identifier	EINTR		471030	1					
ANR	471068	ContinueStatement	continue ;	173:4:5244:5252	471030	1	True				
ANR	471069	ReturnStatement	return - 1 ;	174:3:5257:5266	471030	4	True				
ANR	471070	UnaryOperationExpression	- 1		471030	0					
ANR	471071	UnaryOperator	-		471030	0					
ANR	471072	PrimaryExpression	1		471030	1					
ANR	471073	Label	default :	175:2:5270:5277	471030	5	True				
ANR	471074	Identifier	default		471030	0					
ANR	471075	ExpressionStatement	n -= rv	176:3:5282:5289	471030	6	True				
ANR	471076	AssignmentExpression	n -= rv		471030	0		-=			
ANR	471077	Identifier	n		471030	0					
ANR	471078	Identifier	rv		471030	1					
ANR	471079	Statement	buf	177:3:5294:5296	471030	7	True				
ANR	471080	Statement	=	177:7:5298:5298	471030	8	True				
ANR	471081	Statement	CAST	177:9:5300:5303	471030	9	True				
ANR	471082	Statement	(	177:13:5304:5304	471030	10	True				
ANR	471083	Statement	const	177:14:5305:5309	471030	11	True				
ANR	471084	Statement	char	177:20:5311:5314	471030	12	True				
ANR	471085	Statement	*	177:25:5316:5316	471030	13	True				
ANR	471086	Statement	","	177:26:5317:5317	471030	14	True				
ANR	471087	Statement	buf	177:28:5319:5321	471030	15	True				
ANR	471088	Statement	)	177:31:5322:5322	471030	16	True				
ANR	471089	ExpressionStatement	+ rv	177:33:5324:5328	471030	17	True				
ANR	471090	UnaryOperationExpression	+ rv		471030	0					
ANR	471091	UnaryOperator	+		471030	0					
ANR	471092	Identifier	rv		471030	1					
ANR	471093	BreakStatement	break ;	178:3:5333:5338	471030	18	True				
ANR	471094	Condition	n > 0	180:8:5352:5356	471030	1	True				
ANR	471095	RelationalExpression	n > 0		471030	0		>			
ANR	471096	Identifier	n		471030	0					
ANR	471097	PrimaryExpression	0		471030	1					
ANR	471098	ReturnStatement	return rn ;	181:1:5361:5370	471030	3	True				
ANR	471099	Identifier	rn		471030	0					
ANR	471100	ReturnType	ssize_t		471030	1					
ANR	471101	Identifier	swrite		471030	2					
ANR	471102	ParameterList	"int fd , const void * buf , size_t n"		471030	3					
ANR	471103	Parameter	int fd	164:7:5099:5104	471030	0	True				
ANR	471104	ParameterType	int		471030	0					
ANR	471105	Identifier	fd		471030	1					
ANR	471106	Parameter	const void * buf	164:15:5107:5121	471030	1	True				
ANR	471107	ParameterType	const void *		471030	0					
ANR	471108	Identifier	buf		471030	1					
ANR	471109	Parameter	size_t n	164:32:5124:5131	471030	2	True				
ANR	471110	ParameterType	size_t		471030	0					
ANR	471111	Identifier	n		471030	1					
ANR	471112	CFGEntryNode	ENTRY		471030		True				
ANR	471113	CFGExitNode	EXIT		471030		True				
ANR	471114	Symbol	buf		471030						
ANR	471115	Symbol	errno		471030						
ANR	471116	Symbol	rv		471030						
ANR	471117	Symbol	EINTR		471030						
ANR	471118	Symbol	rn		471030						
ANR	471119	Symbol	write		471030						
ANR	471120	Symbol	fd		471030						
ANR	471121	Symbol	n		471030						
ANR	471122	Function	sread	188:10:5431:6524							
ANR	471123	FunctionDef	"sread (int fd , void * buf , size_t n , int canbepipe)"		471122	0					
ANR	471124	CompoundStatement		190:0:5489:6524	471122	0					
ANR	471125	IdentifierDeclStatement	ssize_t rv ;	191:1:5492:5502	471122	0	True				
ANR	471126	IdentifierDecl	rv		471122	0					
ANR	471127	IdentifierDeclType	ssize_t		471122	0					
ANR	471128	Identifier	rv		471122	1					
ANR	471129	IdentifierDeclStatement	int t = 0 ;	193:1:5521:5530	471122	1	True				
ANR	471130	IdentifierDecl	t = 0		471122	0					
ANR	471131	IdentifierDeclType	int		471122	0					
ANR	471132	Identifier	t		471122	1					
ANR	471133	AssignmentExpression	t = 0		471122	2		=			
ANR	471134	Identifier	t		471122	0					
ANR	471135	PrimaryExpression	0		471122	1					
ANR	471136	IdentifierDeclStatement	size_t rn = n ;	195:1:5540:5553	471122	2	True				
ANR	471137	IdentifierDecl	rn = n		471122	0					
ANR	471138	IdentifierDeclType	size_t		471122	0					
ANR	471139	Identifier	rn		471122	1					
ANR	471140	AssignmentExpression	rn = n		471122	2		=			
ANR	471141	Identifier	n		471122	0					
ANR	471142	Identifier	n		471122	1					
ANR	471143	IfStatement	if ( fd == STDIN_FILENO )		471122	3					
ANR	471144	Condition	fd == STDIN_FILENO	197:5:5561:5578	471122	0	True				
ANR	471145	EqualityExpression	fd == STDIN_FILENO		471122	0		==			
ANR	471146	Identifier	fd		471122	0					
ANR	471147	Identifier	STDIN_FILENO		471122	1					
ANR	471148	GotoStatement	goto nocheck ;	198:2:5583:5595	471122	1	True				
ANR	471149	Identifier	nocheck		471122	0					
ANR	471150	IfStatement	"if ( canbepipe && ( ioctl ( fd , FIONREAD , & t ) == - 1 || t == 0 ) )"		471122	4					
ANR	471151	Condition	"canbepipe && ( ioctl ( fd , FIONREAD , & t ) == - 1 || t == 0 )"	201:5:5619:5672	471122	0	True				
ANR	471152	AndExpression	"canbepipe && ( ioctl ( fd , FIONREAD , & t ) == - 1 || t == 0 )"		471122	0		&&			
ANR	471153	Identifier	canbepipe		471122	0					
ANR	471154	OrExpression	"ioctl ( fd , FIONREAD , & t ) == - 1 || t == 0"		471122	1		||			
ANR	471155	EqualityExpression	"ioctl ( fd , FIONREAD , & t ) == - 1"		471122	0		==			
ANR	471156	CallExpression	"ioctl ( fd , FIONREAD , & t )"		471122	0					
ANR	471157	Callee	ioctl		471122	0					
ANR	471158	Identifier	ioctl		471122	0					
ANR	471159	ArgumentList	fd		471122	1					
ANR	471160	Argument	fd		471122	0					
ANR	471161	Identifier	fd		471122	0					
ANR	471162	Argument	FIONREAD		471122	1					
ANR	471163	Identifier	FIONREAD		471122	0					
ANR	471164	Argument	& t		471122	2					
ANR	471165	UnaryOperationExpression	& t		471122	0					
ANR	471166	UnaryOperator	&		471122	0					
ANR	471167	Identifier	t		471122	1					
ANR	471168	UnaryOperationExpression	- 1		471122	1					
ANR	471169	UnaryOperator	-		471122	0					
ANR	471170	PrimaryExpression	1		471122	1					
ANR	471171	EqualityExpression	t == 0		471122	1		==			
ANR	471172	Identifier	t		471122	0					
ANR	471173	PrimaryExpression	0		471122	1					
ANR	471174	CompoundStatement		14:2:204:215	471122	1					
ANR	471175	IdentifierDeclStatement	ssize_t cnt ;	203:2:5694:5705	471122	0	True				
ANR	471176	IdentifierDecl	cnt		471122	0					
ANR	471177	IdentifierDeclType	ssize_t		471122	0					
ANR	471178	Identifier	cnt		471122	1					
ANR	471179	ForStatement	for ( cnt = 0 ; ; cnt ++ )		471122	1					
ANR	471180	ForInit	cnt = 0 ;	204:7:5714:5721	471122	0	True				
ANR	471181	AssignmentExpression	cnt = 0		471122	0		=			
ANR	471182	Identifier	cnt		471122	0					
ANR	471183	PrimaryExpression	0		471122	1					
ANR	471184	PostIncDecOperationExpression	cnt ++	204:17:5724:5728	471122	1	True				
ANR	471185	Identifier	cnt		471122	0					
ANR	471186	IncDec	++		471122	1					
ANR	471187	CompoundStatement		18:3:305:314	471122	2					
ANR	471188	IdentifierDeclStatement	fd_set check ;	205:3:5736:5748	471122	0	True				
ANR	471189	IdentifierDecl	check		471122	0					
ANR	471190	IdentifierDeclType	fd_set		471122	0					
ANR	471191	Identifier	check		471122	1					
ANR	471192	IdentifierDeclStatement	"struct timeval tout = { 0 , 100 * 1000 } ;"	206:3:5753:5790	471122	1	True				
ANR	471193	IdentifierDecl	"tout = { 0 , 100 * 1000 }"		471122	0					
ANR	471194	IdentifierDeclType	struct timeval		471122	0					
ANR	471195	Identifier	tout		471122	1					
ANR	471196	AssignmentExpression	"tout = { 0 , 100 * 1000 }"		471122	2		=			
ANR	471197	Identifier	tout		471122	0					
ANR	471198	InitializerList	0		471122	1					
ANR	471199	PrimaryExpression	0		471122	0					
ANR	471200	MultiplicativeExpression	100 * 1000		471122	1		*			
ANR	471201	PrimaryExpression	100		471122	0					
ANR	471202	PrimaryExpression	1000		471122	1					
ANR	471203	IdentifierDeclStatement	int selrv ;	207:3:5795:5804	471122	2	True				
ANR	471204	IdentifierDecl	selrv		471122	0					
ANR	471205	IdentifierDeclType	int		471122	0					
ANR	471206	Identifier	selrv		471122	1					
ANR	471207	ExpressionStatement	FD_ZERO ( & check )	209:3:5810:5825	471122	3	True				
ANR	471208	CallExpression	FD_ZERO ( & check )		471122	0					
ANR	471209	Callee	FD_ZERO		471122	0					
ANR	471210	Identifier	FD_ZERO		471122	0					
ANR	471211	ArgumentList	& check		471122	1					
ANR	471212	Argument	& check		471122	0					
ANR	471213	UnaryOperationExpression	& check		471122	0					
ANR	471214	UnaryOperator	&		471122	0					
ANR	471215	Identifier	check		471122	1					
ANR	471216	ExpressionStatement	"FD_SET ( fd , & check )"	210:3:5830:5848	471122	4	True				
ANR	471217	CallExpression	"FD_SET ( fd , & check )"		471122	0					
ANR	471218	Callee	FD_SET		471122	0					
ANR	471219	Identifier	FD_SET		471122	0					
ANR	471220	ArgumentList	fd		471122	1					
ANR	471221	Argument	fd		471122	0					
ANR	471222	Identifier	fd		471122	0					
ANR	471223	Argument	& check		471122	1					
ANR	471224	UnaryOperationExpression	& check		471122	0					
ANR	471225	UnaryOperator	&		471122	0					
ANR	471226	Identifier	check		471122	1					
ANR	471227	ExpressionStatement	"selrv = select ( fd + 1 , & check , NULL , NULL , & tout )"	216:3:5964:6013	471122	5	True				
ANR	471228	AssignmentExpression	"selrv = select ( fd + 1 , & check , NULL , NULL , & tout )"		471122	0		=			
ANR	471229	Identifier	selrv		471122	0					
ANR	471230	CallExpression	"select ( fd + 1 , & check , NULL , NULL , & tout )"		471122	1					
ANR	471231	Callee	select		471122	0					
ANR	471232	Identifier	select		471122	0					
ANR	471233	ArgumentList	fd + 1		471122	1					
ANR	471234	Argument	fd + 1		471122	0					
ANR	471235	AdditiveExpression	fd + 1		471122	0		+			
ANR	471236	Identifier	fd		471122	0					
ANR	471237	PrimaryExpression	1		471122	1					
ANR	471238	Argument	& check		471122	1					
ANR	471239	UnaryOperationExpression	& check		471122	0					
ANR	471240	UnaryOperator	&		471122	0					
ANR	471241	Identifier	check		471122	1					
ANR	471242	Argument	NULL		471122	2					
ANR	471243	Identifier	NULL		471122	0					
ANR	471244	Argument	NULL		471122	3					
ANR	471245	Identifier	NULL		471122	0					
ANR	471246	Argument	& tout		471122	4					
ANR	471247	UnaryOperationExpression	& tout		471122	0					
ANR	471248	UnaryOperator	&		471122	0					
ANR	471249	Identifier	tout		471122	1					
ANR	471250	IfStatement	if ( selrv == - 1 )		471122	6					
ANR	471251	Condition	selrv == - 1	217:7:6022:6032	471122	0	True				
ANR	471252	EqualityExpression	selrv == - 1		471122	0		==			
ANR	471253	Identifier	selrv		471122	0					
ANR	471254	UnaryOperationExpression	- 1		471122	1					
ANR	471255	UnaryOperator	-		471122	0					
ANR	471256	PrimaryExpression	1		471122	1					
ANR	471257	CompoundStatement		28:20:545:545	471122	1					
ANR	471258	IfStatement	if ( errno == EINTR || errno == EAGAIN )		471122	0					
ANR	471259	Condition	errno == EINTR || errno == EAGAIN	218:8:6045:6077	471122	0	True				
ANR	471260	OrExpression	errno == EINTR || errno == EAGAIN		471122	0		||			
ANR	471261	EqualityExpression	errno == EINTR		471122	0		==			
ANR	471262	Identifier	errno		471122	0					
ANR	471263	Identifier	EINTR		471122	1					
ANR	471264	EqualityExpression	errno == EAGAIN		471122	1		==			
ANR	471265	Identifier	errno		471122	0					
ANR	471266	Identifier	EAGAIN		471122	1					
ANR	471267	ContinueStatement	continue ;	219:5:6085:6093	471122	1	True				
ANR	471268	ElseStatement	else		471122	0					
ANR	471269	IfStatement	if ( selrv == 0 && cnt >= 5 )		471122	0					
ANR	471270	Condition	selrv == 0 && cnt >= 5	220:14:6109:6130	471122	0	True				
ANR	471271	AndExpression	selrv == 0 && cnt >= 5		471122	0		&&			
ANR	471272	EqualityExpression	selrv == 0		471122	0		==			
ANR	471273	Identifier	selrv		471122	0					
ANR	471274	PrimaryExpression	0		471122	1					
ANR	471275	RelationalExpression	cnt >= 5		471122	1		>=			
ANR	471276	Identifier	cnt		471122	0					
ANR	471277	PrimaryExpression	5		471122	1					
ANR	471278	CompoundStatement		31:38:643:643	471122	1					
ANR	471279	ReturnStatement	return 0 ;	221:4:6139:6147	471122	0	True				
ANR	471280	PrimaryExpression	0		471122	0					
ANR	471281	ElseStatement	else		471122	0					
ANR	471282	BreakStatement	break ;	223:4:6163:6168	471122	0	True				
ANR	471283	ExpressionStatement	"( void ) ioctl ( fd , FIONREAD , & t )"	226:2:6183:6212	471122	2	True				
ANR	471284	CastExpression	"( void ) ioctl ( fd , FIONREAD , & t )"		471122	0					
ANR	471285	CastTarget	void		471122	0					
ANR	471286	CallExpression	"ioctl ( fd , FIONREAD , & t )"		471122	1					
ANR	471287	Callee	ioctl		471122	0					
ANR	471288	Identifier	ioctl		471122	0					
ANR	471289	ArgumentList	fd		471122	1					
ANR	471290	Argument	fd		471122	0					
ANR	471291	Identifier	fd		471122	0					
ANR	471292	Argument	FIONREAD		471122	1					
ANR	471293	Identifier	FIONREAD		471122	0					
ANR	471294	Argument	& t		471122	2					
ANR	471295	UnaryOperationExpression	& t		471122	0					
ANR	471296	UnaryOperator	&		471122	0					
ANR	471297	Identifier	t		471122	1					
ANR	471298	IfStatement	if ( t > 0 && ( size_t ) t < n )		471122	5					
ANR	471299	Condition	t > 0 && ( size_t ) t < n	229:5:6223:6244	471122	0	True				
ANR	471300	AndExpression	t > 0 && ( size_t ) t < n		471122	0		&&			
ANR	471301	RelationalExpression	t > 0		471122	0		>			
ANR	471302	Identifier	t		471122	0					
ANR	471303	PrimaryExpression	0		471122	1					
ANR	471304	RelationalExpression	( size_t ) t < n		471122	1		<			
ANR	471305	CastExpression	( size_t ) t		471122	0					
ANR	471306	CastTarget	size_t		471122	0					
ANR	471307	Identifier	t		471122	1					
ANR	471308	Identifier	n		471122	1					
ANR	471309	CompoundStatement		40:29:757:757	471122	1					
ANR	471310	ExpressionStatement	n = t	230:2:6251:6256	471122	0	True				
ANR	471311	AssignmentExpression	n = t		471122	0		=			
ANR	471312	Identifier	n		471122	0					
ANR	471313	Identifier	t		471122	1					
ANR	471314	ExpressionStatement	rn = n	231:2:6260:6266	471122	1	True				
ANR	471315	AssignmentExpression	rn = n		471122	0		=			
ANR	471316	Identifier	rn		471122	0					
ANR	471317	Identifier	n		471122	1					
ANR	471318	Label	nocheck :	235:0:6279:6286	471122	6	True				
ANR	471319	Identifier	nocheck		471122	0					
ANR	471320	DoStatement	do		471122	7					
ANR	471321	SwitchStatement	"switch ( ( rv = FINFO_READ_FUNC ( fd , buf , n ) ) )"		471122	0					
ANR	471322	Condition	"rv = FINFO_READ_FUNC ( fd , buf , n )"	237:10:6302:6335	471122	0	True				
ANR	471323	AssignmentExpression	"rv = FINFO_READ_FUNC ( fd , buf , n )"		471122	0		=			
ANR	471324	Identifier	rv		471122	0					
ANR	471325	CallExpression	"FINFO_READ_FUNC ( fd , buf , n )"		471122	1					
ANR	471326	Callee	FINFO_READ_FUNC		471122	0					
ANR	471327	Identifier	FINFO_READ_FUNC		471122	0					
ANR	471328	ArgumentList	fd		471122	1					
ANR	471329	Argument	fd		471122	0					
ANR	471330	Identifier	fd		471122	0					
ANR	471331	Argument	buf		471122	1					
ANR	471332	Identifier	buf		471122	0					
ANR	471333	Argument	n		471122	2					
ANR	471334	Identifier	n		471122	0					
ANR	471335	CompoundStatement		48:46:848:848	471122	1					
ANR	471336	Statement	case	238:2:6342:6345	471122	0	True				
ANR	471337	Statement	-	238:7:6347:6347	471122	1	True				
ANR	471338	Label	1 :	238:8:6348:6349	471122	2	True				
ANR	471339	IfStatement	if ( errno == EINTR )		471122	3					
ANR	471340	Condition	errno == EINTR	239:7:6358:6371	471122	0	True				
ANR	471341	EqualityExpression	errno == EINTR		471122	0		==			
ANR	471342	Identifier	errno		471122	0					
ANR	471343	Identifier	EINTR		471122	1					
ANR	471344	ContinueStatement	continue ;	240:4:6378:6386	471122	1	True				
ANR	471345	ReturnStatement	return - 1 ;	241:3:6391:6400	471122	4	True				
ANR	471346	UnaryOperationExpression	- 1		471122	0					
ANR	471347	UnaryOperator	-		471122	0					
ANR	471348	PrimaryExpression	1		471122	1					
ANR	471349	Label	case 0 :	242:2:6404:6410	471122	5	True				
ANR	471350	ReturnStatement	return rn - n ;	243:3:6415:6428	471122	6	True				
ANR	471351	AdditiveExpression	rn - n		471122	0		-			
ANR	471352	Identifier	rn		471122	0					
ANR	471353	Identifier	n		471122	1					
ANR	471354	Label	default :	244:2:6432:6439	471122	7	True				
ANR	471355	Identifier	default		471122	0					
ANR	471356	ExpressionStatement	n -= rv	245:3:6444:6451	471122	8	True				
ANR	471357	AssignmentExpression	n -= rv		471122	0		-=			
ANR	471358	Identifier	n		471122	0					
ANR	471359	Identifier	rv		471122	1					
ANR	471360	ExpressionStatement	buf = ( ( char * ) buf ) + rv	246:3:6456:6480	471122	9	True				
ANR	471361	AssignmentExpression	buf = ( ( char * ) buf ) + rv		471122	0		=			
ANR	471362	Identifier	buf		471122	0					
ANR	471363	AdditiveExpression	( ( char * ) buf ) + rv		471122	1		+			
ANR	471364	CastExpression	( char * ) buf		471122	0					
ANR	471365	CastTarget	char *		471122	0					
ANR	471366	Identifier	buf		471122	1					
ANR	471367	Identifier	rv		471122	1					
ANR	471368	BreakStatement	break ;	247:3:6485:6490	471122	10	True				
ANR	471369	Condition	n > 0	249:8:6504:6508	471122	1	True				
ANR	471370	RelationalExpression	n > 0		471122	0		>			
ANR	471371	Identifier	n		471122	0					
ANR	471372	PrimaryExpression	0		471122	1					
ANR	471373	ReturnStatement	return rn ;	250:1:6513:6522	471122	8	True				
ANR	471374	Identifier	rn		471122	0					
ANR	471375	ReturnType	ssize_t		471122	1					
ANR	471376	Identifier	sread		471122	2					
ANR	471377	ParameterList	"int fd , void * buf , size_t n , int canbepipe"		471122	3					
ANR	471378	Parameter	int fd	189:6:5445:5450	471122	0	True				
ANR	471379	ParameterType	int		471122	0					
ANR	471380	Identifier	fd		471122	1					
ANR	471381	Parameter	void * buf	189:14:5453:5461	471122	1	True				
ANR	471382	ParameterType	void *		471122	0					
ANR	471383	Identifier	buf		471122	1					
ANR	471384	Parameter	size_t n	189:25:5464:5471	471122	2	True				
ANR	471385	ParameterType	size_t		471122	0					
ANR	471386	Identifier	n		471122	1					
ANR	471387	Parameter	int canbepipe	189:35:5474:5486	471122	3	True				
ANR	471388	ParameterType	int		471122	0					
ANR	471389	Identifier	canbepipe		471122	1					
ANR	471390	CFGEntryNode	ENTRY		471122		True				
ANR	471391	CFGExitNode	EXIT		471122		True				
ANR	471392	InfiniteForNode	true		471122		True				
ANR	471393	Symbol	FIONREAD		471122						
ANR	471394	Symbol	errno		471122						
ANR	471395	Symbol	NULL		471122						
ANR	471396	Symbol	select		471122						
ANR	471397	Symbol	rv		471122						
ANR	471398	Symbol	STDIN_FILENO		471122						
ANR	471399	Symbol	& check		471122						
ANR	471400	Symbol	& tout		471122						
ANR	471401	Symbol	FINFO_READ_FUNC		471122						
ANR	471402	Symbol	EINTR		471122						
ANR	471403	Symbol	cnt		471122						
ANR	471404	Symbol	EAGAIN		471122						
ANR	471405	Symbol	check		471122						
ANR	471406	Symbol	tout		471122						
ANR	471407	Symbol	n		471122						
ANR	471408	Symbol	ioctl		471122						
ANR	471409	Symbol	buf		471122						
ANR	471410	Symbol	canbepipe		471122						
ANR	471411	Symbol	t		471122						
ANR	471412	Symbol	& t		471122						
ANR	471413	Symbol	selrv		471122						
ANR	471414	Symbol	rn		471122						
ANR	471415	Symbol	fd		471122						
ANR	471416	Function	file_pipe2file	253:10:6537:7901							
ANR	471417	FunctionDef	"file_pipe2file (struct magic_set * ms , int fd , const void * startbuf , size_t nbytes)"		471416	0					
ANR	471418	CompoundStatement		256:0:6627:7901	471416	0					
ANR	471419	IdentifierDeclStatement	char buf [ 4096 ] ;	257:1:6630:6644	471416	0	True				
ANR	471420	IdentifierDecl	buf [ 4096 ]		471416	0					
ANR	471421	IdentifierDeclType	char [ 4096 ]		471416	0					
ANR	471422	Identifier	buf		471416	1					
ANR	471423	PrimaryExpression	4096		471416	2					
ANR	471424	IdentifierDeclStatement	ssize_t r ;	258:1:6647:6656	471416	1	True				
ANR	471425	IdentifierDecl	r		471416	0					
ANR	471426	IdentifierDeclType	ssize_t		471416	0					
ANR	471427	Identifier	r		471416	1					
ANR	471428	IdentifierDeclStatement	int tfd ;	259:1:6659:6666	471416	2	True				
ANR	471429	IdentifierDecl	tfd		471416	0					
ANR	471430	IdentifierDeclType	int		471416	0					
ANR	471431	Identifier	tfd		471416	1					
ANR	471432	ExpressionStatement	"( void ) strlcpy ( buf , ""/tmp/file.XXXXXX"" , sizeof buf )"	261:1:6670:6720	471416	3	True				
ANR	471433	CastExpression	"( void ) strlcpy ( buf , ""/tmp/file.XXXXXX"" , sizeof buf )"		471416	0					
ANR	471434	CastTarget	void		471416	0					
ANR	471435	CallExpression	"strlcpy ( buf , ""/tmp/file.XXXXXX"" , sizeof buf )"		471416	1					
ANR	471436	Callee	strlcpy		471416	0					
ANR	471437	Identifier	strlcpy		471416	0					
ANR	471438	ArgumentList	buf		471416	1					
ANR	471439	Argument	buf		471416	0					
ANR	471440	Identifier	buf		471416	0					
ANR	471441	Argument	"""/tmp/file.XXXXXX"""		471416	1					
ANR	471442	PrimaryExpression	"""/tmp/file.XXXXXX"""		471416	0					
ANR	471443	Argument	sizeof buf		471416	2					
ANR	471444	SizeofExpression	sizeof buf		471416	0					
ANR	471445	Sizeof	sizeof		471416	0					
ANR	471446	Identifier	buf		471416	1					
ANR	471447	CompoundStatement		9:2:120:143	471416	4					
ANR	471448	IdentifierDeclStatement	char * ptr = mktemp ( buf ) ;	264:2:6748:6771	471416	0	True				
ANR	471449	IdentifierDecl	* ptr = mktemp ( buf )		471416	0					
ANR	471450	IdentifierDeclType	char *		471416	0					
ANR	471451	Identifier	ptr		471416	1					
ANR	471452	AssignmentExpression	* ptr = mktemp ( buf )		471416	2		=			
ANR	471453	Identifier	ptr		471416	0					
ANR	471454	CallExpression	mktemp ( buf )		471416	1					
ANR	471455	Callee	mktemp		471416	0					
ANR	471456	Identifier	mktemp		471416	0					
ANR	471457	ArgumentList	buf		471416	1					
ANR	471458	Argument	buf		471416	0					
ANR	471459	Identifier	buf		471416	0					
ANR	471460	ExpressionStatement	"tfd = open ( ptr , O_RDWR | O_TRUNC | O_EXCL | O_CREAT , 0600 )"	265:2:6775:6827	471416	1	True				
ANR	471461	AssignmentExpression	"tfd = open ( ptr , O_RDWR | O_TRUNC | O_EXCL | O_CREAT , 0600 )"		471416	0		=			
ANR	471462	Identifier	tfd		471416	0					
ANR	471463	CallExpression	"open ( ptr , O_RDWR | O_TRUNC | O_EXCL | O_CREAT , 0600 )"		471416	1					
ANR	471464	Callee	open		471416	0					
ANR	471465	Identifier	open		471416	0					
ANR	471466	ArgumentList	ptr		471416	1					
ANR	471467	Argument	ptr		471416	0					
ANR	471468	Identifier	ptr		471416	0					
ANR	471469	Argument	O_RDWR | O_TRUNC | O_EXCL | O_CREAT		471416	1					
ANR	471470	InclusiveOrExpression	O_RDWR | O_TRUNC | O_EXCL | O_CREAT		471416	0		|			
ANR	471471	Identifier	O_RDWR		471416	0					
ANR	471472	InclusiveOrExpression	O_TRUNC | O_EXCL | O_CREAT		471416	1		|			
ANR	471473	Identifier	O_TRUNC		471416	0					
ANR	471474	InclusiveOrExpression	O_EXCL | O_CREAT		471416	1		|			
ANR	471475	Identifier	O_EXCL		471416	0					
ANR	471476	Identifier	O_CREAT		471416	1					
ANR	471477	Argument	0600		471416	2					
ANR	471478	PrimaryExpression	0600		471416	0					
ANR	471479	ExpressionStatement	r = errno	266:2:6831:6840	471416	2	True				
ANR	471480	AssignmentExpression	r = errno		471416	0		=			
ANR	471481	Identifier	r		471416	0					
ANR	471482	Identifier	errno		471416	1					
ANR	471483	ExpressionStatement	( void ) unlink ( ptr )	267:2:6844:6861	471416	3	True				
ANR	471484	CastExpression	( void ) unlink ( ptr )		471416	0					
ANR	471485	CastTarget	void		471416	0					
ANR	471486	CallExpression	unlink ( ptr )		471416	1					
ANR	471487	Callee	unlink		471416	0					
ANR	471488	Identifier	unlink		471416	0					
ANR	471489	ArgumentList	ptr		471416	1					
ANR	471490	Argument	ptr		471416	0					
ANR	471491	Identifier	ptr		471416	0					
ANR	471492	ExpressionStatement	errno = r	268:2:6865:6874	471416	4	True				
ANR	471493	AssignmentExpression	errno = r		471416	0		=			
ANR	471494	Identifier	errno		471416	0					
ANR	471495	Identifier	r		471416	1					
ANR	471496	IfStatement	if ( tfd == - 1 )		471416	5					
ANR	471497	Condition	tfd == - 1	279:5:6984:6992	471416	0	True				
ANR	471498	EqualityExpression	tfd == - 1		471416	0		==			
ANR	471499	Identifier	tfd		471416	0					
ANR	471500	UnaryOperationExpression	- 1		471416	1					
ANR	471501	UnaryOperator	-		471416	0					
ANR	471502	PrimaryExpression	1		471416	1					
ANR	471503	CompoundStatement		24:16:367:367	471416	1					
ANR	471504	ExpressionStatement	"file_error ( ms , errno , ""cannot create temporary file for pipe copy"" )"	280:2:6999:7072	471416	0	True				
ANR	471505	CallExpression	"file_error ( ms , errno , ""cannot create temporary file for pipe copy"" )"		471416	0					
ANR	471506	Callee	file_error		471416	0					
ANR	471507	Identifier	file_error		471416	0					
ANR	471508	ArgumentList	ms		471416	1					
ANR	471509	Argument	ms		471416	0					
ANR	471510	Identifier	ms		471416	0					
ANR	471511	Argument	errno		471416	1					
ANR	471512	Identifier	errno		471416	0					
ANR	471513	Argument	"""cannot create temporary file for pipe copy"""		471416	2					
ANR	471514	PrimaryExpression	"""cannot create temporary file for pipe copy"""		471416	0					
ANR	471515	ReturnStatement	return - 1 ;	282:2:7076:7085	471416	1	True				
ANR	471516	UnaryOperationExpression	- 1		471416	0					
ANR	471517	UnaryOperator	-		471416	0					
ANR	471518	PrimaryExpression	1		471416	1					
ANR	471519	IfStatement	"if ( swrite ( tfd , startbuf , nbytes ) != ( ssize_t ) nbytes )"		471416	6					
ANR	471520	Condition	"swrite ( tfd , startbuf , nbytes ) != ( ssize_t ) nbytes"	285:5:7096:7143	471416	0	True				
ANR	471521	EqualityExpression	"swrite ( tfd , startbuf , nbytes ) != ( ssize_t ) nbytes"		471416	0		!=			
ANR	471522	CallExpression	"swrite ( tfd , startbuf , nbytes )"		471416	0					
ANR	471523	Callee	swrite		471416	0					
ANR	471524	Identifier	swrite		471416	0					
ANR	471525	ArgumentList	tfd		471416	1					
ANR	471526	Argument	tfd		471416	0					
ANR	471527	Identifier	tfd		471416	0					
ANR	471528	Argument	startbuf		471416	1					
ANR	471529	Identifier	startbuf		471416	0					
ANR	471530	Argument	nbytes		471416	2					
ANR	471531	Identifier	nbytes		471416	0					
ANR	471532	CastExpression	( ssize_t ) nbytes		471416	1					
ANR	471533	CastTarget	ssize_t		471416	0					
ANR	471534	Identifier	nbytes		471416	1					
ANR	471535	ExpressionStatement	r = 1	286:2:7148:7153	471416	1	True				
ANR	471536	AssignmentExpression	r = 1		471416	0		=			
ANR	471537	Identifier	r		471416	0					
ANR	471538	PrimaryExpression	1		471416	1					
ANR	471539	ElseStatement	else		471416	0					
ANR	471540	CompoundStatement		32:6:533:533	471416	0					
ANR	471541	WhileStatement	"while ( ( r = sread ( fd , buf , sizeof ( buf ) , 1 ) ) > 0 )"		471416	0					
ANR	471542	Condition	"( r = sread ( fd , buf , sizeof ( buf ) , 1 ) ) > 0"	288:9:7172:7211	471416	0	True				
ANR	471543	RelationalExpression	"( r = sread ( fd , buf , sizeof ( buf ) , 1 ) ) > 0"		471416	0		>			
ANR	471544	AssignmentExpression	"r = sread ( fd , buf , sizeof ( buf ) , 1 )"		471416	0		=			
ANR	471545	Identifier	r		471416	0					
ANR	471546	CallExpression	"sread ( fd , buf , sizeof ( buf ) , 1 )"		471416	1					
ANR	471547	Callee	sread		471416	0					
ANR	471548	Identifier	sread		471416	0					
ANR	471549	ArgumentList	fd		471416	1					
ANR	471550	Argument	fd		471416	0					
ANR	471551	Identifier	fd		471416	0					
ANR	471552	Argument	buf		471416	1					
ANR	471553	Identifier	buf		471416	0					
ANR	471554	Argument	sizeof ( buf )		471416	2					
ANR	471555	SizeofExpression	sizeof ( buf )		471416	0					
ANR	471556	Sizeof	sizeof		471416	0					
ANR	471557	SizeofOperand	buf		471416	1					
ANR	471558	Argument	1		471416	3					
ANR	471559	PrimaryExpression	1		471416	0					
ANR	471560	PrimaryExpression	0		471416	1					
ANR	471561	IfStatement	"if ( swrite ( tfd , buf , ( size_t ) r ) != r )"		471416	1					
ANR	471562	Condition	"swrite ( tfd , buf , ( size_t ) r ) != r"	289:7:7221:7252	471416	0	True				
ANR	471563	EqualityExpression	"swrite ( tfd , buf , ( size_t ) r ) != r"		471416	0		!=			
ANR	471564	CallExpression	"swrite ( tfd , buf , ( size_t ) r )"		471416	0					
ANR	471565	Callee	swrite		471416	0					
ANR	471566	Identifier	swrite		471416	0					
ANR	471567	ArgumentList	tfd		471416	1					
ANR	471568	Argument	tfd		471416	0					
ANR	471569	Identifier	tfd		471416	0					
ANR	471570	Argument	buf		471416	1					
ANR	471571	Identifier	buf		471416	0					
ANR	471572	Argument	( size_t ) r		471416	2					
ANR	471573	CastExpression	( size_t ) r		471416	0					
ANR	471574	CastTarget	size_t		471416	0					
ANR	471575	Identifier	r		471416	1					
ANR	471576	Identifier	r		471416	1					
ANR	471577	BreakStatement	break ;	290:4:7259:7264	471416	1	True				
ANR	471578	SwitchStatement	switch ( r )		471416	7					
ANR	471579	Condition	r	293:9:7279:7279	471416	0	True				
ANR	471580	Identifier	r		471416	0					
ANR	471581	CompoundStatement		38:12:654:654	471416	1					
ANR	471582	Statement	case	294:1:7285:7288	471416	0	True				
ANR	471583	Statement	-	294:6:7290:7290	471416	1	True				
ANR	471584	Label	1 :	294:7:7291:7292	471416	2	True				
ANR	471585	ExpressionStatement	"file_error ( ms , errno , ""error copying from pipe to temp file"" )"	295:2:7296:7357	471416	3	True				
ANR	471586	CallExpression	"file_error ( ms , errno , ""error copying from pipe to temp file"" )"		471416	0					
ANR	471587	Callee	file_error		471416	0					
ANR	471588	Identifier	file_error		471416	0					
ANR	471589	ArgumentList	ms		471416	1					
ANR	471590	Argument	ms		471416	0					
ANR	471591	Identifier	ms		471416	0					
ANR	471592	Argument	errno		471416	1					
ANR	471593	Identifier	errno		471416	0					
ANR	471594	Argument	"""error copying from pipe to temp file"""		471416	2					
ANR	471595	PrimaryExpression	"""error copying from pipe to temp file"""		471416	0					
ANR	471596	ReturnStatement	return - 1 ;	296:2:7361:7370	471416	4	True				
ANR	471597	UnaryOperationExpression	- 1		471416	0					
ANR	471598	UnaryOperator	-		471416	0					
ANR	471599	PrimaryExpression	1		471416	1					
ANR	471600	Label	case 0 :	297:1:7373:7379	471416	5	True				
ANR	471601	BreakStatement	break ;	298:2:7383:7388	471416	6	True				
ANR	471602	Label	default :	299:1:7391:7398	471416	7	True				
ANR	471603	Identifier	default		471416	0					
ANR	471604	ExpressionStatement	"file_error ( ms , errno , ""error while writing to temp file"" )"	300:2:7402:7459	471416	8	True				
ANR	471605	CallExpression	"file_error ( ms , errno , ""error while writing to temp file"" )"		471416	0					
ANR	471606	Callee	file_error		471416	0					
ANR	471607	Identifier	file_error		471416	0					
ANR	471608	ArgumentList	ms		471416	1					
ANR	471609	Argument	ms		471416	0					
ANR	471610	Identifier	ms		471416	0					
ANR	471611	Argument	errno		471416	1					
ANR	471612	Identifier	errno		471416	0					
ANR	471613	Argument	"""error while writing to temp file"""		471416	2					
ANR	471614	PrimaryExpression	"""error while writing to temp file"""		471416	0					
ANR	471615	ReturnStatement	return - 1 ;	301:2:7463:7472	471416	9	True				
ANR	471616	UnaryOperationExpression	- 1		471416	0					
ANR	471617	UnaryOperator	-		471416	0					
ANR	471618	PrimaryExpression	1		471416	1					
ANR	471619	IfStatement	"if ( ( fd = dup2 ( tfd , fd ) ) == - 1 )"		471416	8					
ANR	471620	Condition	"( fd = dup2 ( tfd , fd ) ) == - 1"	309:5:7649:7674	471416	0	True				
ANR	471621	EqualityExpression	"( fd = dup2 ( tfd , fd ) ) == - 1"		471416	0		==			
ANR	471622	AssignmentExpression	"fd = dup2 ( tfd , fd )"		471416	0		=			
ANR	471623	Identifier	fd		471416	0					
ANR	471624	CallExpression	"dup2 ( tfd , fd )"		471416	1					
ANR	471625	Callee	dup2		471416	0					
ANR	471626	Identifier	dup2		471416	0					
ANR	471627	ArgumentList	tfd		471416	1					
ANR	471628	Argument	tfd		471416	0					
ANR	471629	Identifier	tfd		471416	0					
ANR	471630	Argument	fd		471416	1					
ANR	471631	Identifier	fd		471416	0					
ANR	471632	UnaryOperationExpression	- 1		471416	1					
ANR	471633	UnaryOperator	-		471416	0					
ANR	471634	PrimaryExpression	1		471416	1					
ANR	471635	CompoundStatement		54:33:1049:1049	471416	1					
ANR	471636	ExpressionStatement	"file_error ( ms , errno , ""could not dup descriptor for temp file"" )"	310:2:7681:7744	471416	0	True				
ANR	471637	CallExpression	"file_error ( ms , errno , ""could not dup descriptor for temp file"" )"		471416	0					
ANR	471638	Callee	file_error		471416	0					
ANR	471639	Identifier	file_error		471416	0					
ANR	471640	ArgumentList	ms		471416	1					
ANR	471641	Argument	ms		471416	0					
ANR	471642	Identifier	ms		471416	0					
ANR	471643	Argument	errno		471416	1					
ANR	471644	Identifier	errno		471416	0					
ANR	471645	Argument	"""could not dup descriptor for temp file"""		471416	2					
ANR	471646	PrimaryExpression	"""could not dup descriptor for temp file"""		471416	0					
ANR	471647	ReturnStatement	return - 1 ;	311:2:7748:7757	471416	1	True				
ANR	471648	UnaryOperationExpression	- 1		471416	0					
ANR	471649	UnaryOperator	-		471416	0					
ANR	471650	PrimaryExpression	1		471416	1					
ANR	471651	ExpressionStatement	( void ) close ( tfd )	313:1:7763:7779	471416	9	True				
ANR	471652	CastExpression	( void ) close ( tfd )		471416	0					
ANR	471653	CastTarget	void		471416	0					
ANR	471654	CallExpression	close ( tfd )		471416	1					
ANR	471655	Callee	close		471416	0					
ANR	471656	Identifier	close		471416	0					
ANR	471657	ArgumentList	tfd		471416	1					
ANR	471658	Argument	tfd		471416	0					
ANR	471659	Identifier	tfd		471416	0					
ANR	471660	IfStatement	"if ( FINFO_LSEEK_FUNC ( fd , ( zend_off_t ) 0 , SEEK_SET ) == ( zend_off_t ) - 1 )"		471416	10					
ANR	471661	Condition	"FINFO_LSEEK_FUNC ( fd , ( zend_off_t ) 0 , SEEK_SET ) == ( zend_off_t ) - 1"	314:5:7786:7848	471416	0	True				
ANR	471662	EqualityExpression	"FINFO_LSEEK_FUNC ( fd , ( zend_off_t ) 0 , SEEK_SET ) == ( zend_off_t ) - 1"		471416	0		==			
ANR	471663	CallExpression	"FINFO_LSEEK_FUNC ( fd , ( zend_off_t ) 0 , SEEK_SET )"		471416	0					
ANR	471664	Callee	FINFO_LSEEK_FUNC		471416	0					
ANR	471665	Identifier	FINFO_LSEEK_FUNC		471416	0					
ANR	471666	ArgumentList	fd		471416	1					
ANR	471667	Argument	fd		471416	0					
ANR	471668	Identifier	fd		471416	0					
ANR	471669	Argument	( zend_off_t ) 0		471416	1					
ANR	471670	CastExpression	( zend_off_t ) 0		471416	0					
ANR	471671	CastTarget	zend_off_t		471416	0					
ANR	471672	PrimaryExpression	0		471416	1					
ANR	471673	Argument	SEEK_SET		471416	2					
ANR	471674	Identifier	SEEK_SET		471416	0					
ANR	471675	CastExpression	( zend_off_t ) - 1		471416	1					
ANR	471676	CastTarget	zend_off_t		471416	0					
ANR	471677	UnaryOperationExpression	- 1		471416	1					
ANR	471678	UnaryOperator	-		471416	0					
ANR	471679	PrimaryExpression	1		471416	1					
ANR	471680	CompoundStatement		59:70:1223:1223	471416	1					
ANR	471681	ExpressionStatement	file_badseek ( ms )	315:2:7855:7871	471416	0	True				
ANR	471682	CallExpression	file_badseek ( ms )		471416	0					
ANR	471683	Callee	file_badseek		471416	0					
ANR	471684	Identifier	file_badseek		471416	0					
ANR	471685	ArgumentList	ms		471416	1					
ANR	471686	Argument	ms		471416	0					
ANR	471687	Identifier	ms		471416	0					
ANR	471688	ReturnStatement	return - 1 ;	316:2:7875:7884	471416	1	True				
ANR	471689	UnaryOperationExpression	- 1		471416	0					
ANR	471690	UnaryOperator	-		471416	0					
ANR	471691	PrimaryExpression	1		471416	1					
ANR	471692	ReturnStatement	return fd ;	318:1:7890:7899	471416	11	True				
ANR	471693	Identifier	fd		471416	0					
ANR	471694	ReturnType	int		471416	1					
ANR	471695	Identifier	file_pipe2file		471416	2					
ANR	471696	ParameterList	"struct magic_set * ms , int fd , const void * startbuf , size_t nbytes"		471416	3					
ANR	471697	Parameter	struct magic_set * ms	254:15:6556:6575	471416	0	True				
ANR	471698	ParameterType	struct magic_set *		471416	0					
ANR	471699	Identifier	ms		471416	1					
ANR	471700	Parameter	int fd	254:37:6578:6583	471416	1	True				
ANR	471701	ParameterType	int		471416	0					
ANR	471702	Identifier	fd		471416	1					
ANR	471703	Parameter	const void * startbuf	254:45:6586:6605	471416	2	True				
ANR	471704	ParameterType	const void *		471416	0					
ANR	471705	Identifier	startbuf		471416	1					
ANR	471706	Parameter	size_t nbytes	255:4:6612:6624	471416	3	True				
ANR	471707	ParameterType	size_t		471416	0					
ANR	471708	Identifier	nbytes		471416	1					
ANR	471709	CFGEntryNode	ENTRY		471416		True				
ANR	471710	CFGExitNode	EXIT		471416		True				
ANR	471711	Symbol	sread		471416						
ANR	471712	Symbol	SEEK_SET		471416						
ANR	471713	Symbol	errno		471416						
ANR	471714	Symbol	ms		471416						
ANR	471715	Symbol	O_CREAT		471416						
ANR	471716	Symbol	O_EXCL		471416						
ANR	471717	Symbol	mktemp		471416						
ANR	471718	Symbol	startbuf		471416						
ANR	471719	Symbol	nbytes		471416						
ANR	471720	Symbol	ptr		471416						
ANR	471721	Symbol	buf		471416						
ANR	471722	Symbol	r		471416						
ANR	471723	Symbol	O_RDWR		471416						
ANR	471724	Symbol	O_TRUNC		471416						
ANR	471725	Symbol	tfd		471416						
ANR	471726	Symbol	swrite		471416						
ANR	471727	Symbol	FINFO_LSEEK_FUNC		471416						
ANR	471728	Symbol	dup2		471416						
ANR	471729	Symbol	fd		471416						
ANR	471730	Symbol	open		471416						
ANR	471731	Function	uncompressgzipped	329:8:8070:9420							
ANR	471732	FunctionDef	"uncompressgzipped (struct magic_set * ms , const unsigned char * old , unsigned char * * newch , size_t n)"		471731	0					
ANR	471733	CompoundStatement		332:0:8180:9420	471731	0					
ANR	471734	IdentifierDeclStatement	unsigned char flg = old [ 3 ] ;	333:1:8183:8209	471731	0	True				
ANR	471735	IdentifierDecl	flg = old [ 3 ]		471731	0					
ANR	471736	IdentifierDeclType	unsigned char		471731	0					
ANR	471737	Identifier	flg		471731	1					
ANR	471738	AssignmentExpression	flg = old [ 3 ]		471731	2		=			
ANR	471739	Identifier	flg		471731	0					
ANR	471740	ArrayIndexing	old [ 3 ]		471731	1					
ANR	471741	Identifier	old		471731	0					
ANR	471742	PrimaryExpression	3		471731	1					
ANR	471743	IdentifierDeclStatement	size_t data_start = 10 ;	334:1:8212:8234	471731	1	True				
ANR	471744	IdentifierDecl	data_start = 10		471731	0					
ANR	471745	IdentifierDeclType	size_t		471731	0					
ANR	471746	Identifier	data_start		471731	1					
ANR	471747	AssignmentExpression	data_start = 10		471731	2		=			
ANR	471748	Identifier	data_start		471731	0					
ANR	471749	PrimaryExpression	10		471731	1					
ANR	471750	IdentifierDeclStatement	z_stream z ;	335:1:8237:8247	471731	2	True				
ANR	471751	IdentifierDecl	z		471731	0					
ANR	471752	IdentifierDeclType	z_stream		471731	0					
ANR	471753	Identifier	z		471731	1					
ANR	471754	IdentifierDeclStatement	int rc ;	336:1:8250:8256	471731	3	True				
ANR	471755	IdentifierDecl	rc		471731	0					
ANR	471756	IdentifierDeclType	int		471731	0					
ANR	471757	Identifier	rc		471731	1					
ANR	471758	IfStatement	if ( flg & FEXTRA )		471731	4					
ANR	471759	Condition	flg & FEXTRA	338:5:8264:8275	471731	0	True				
ANR	471760	BitAndExpression	flg & FEXTRA		471731	0		&			
ANR	471761	Identifier	flg		471731	0					
ANR	471762	Identifier	FEXTRA		471731	1					
ANR	471763	CompoundStatement		7:19:97:97	471731	1					
ANR	471764	IfStatement	if ( data_start + 1 >= n )		471731	0					
ANR	471765	Condition	data_start + 1 >= n	339:6:8286:8302	471731	0	True				
ANR	471766	RelationalExpression	data_start + 1 >= n		471731	0		>=			
ANR	471767	AdditiveExpression	data_start + 1		471731	0		+			
ANR	471768	Identifier	data_start		471731	0					
ANR	471769	PrimaryExpression	1		471731	1					
ANR	471770	Identifier	n		471731	1					
ANR	471771	ReturnStatement	return 0 ;	340:3:8308:8316	471731	1	True				
ANR	471772	PrimaryExpression	0		471731	0					
ANR	471773	ExpressionStatement	data_start += 2 + old [ data_start ] + old [ data_start + 1 ] * 256	341:2:8320:8381	471731	1	True				
ANR	471774	AssignmentExpression	data_start += 2 + old [ data_start ] + old [ data_start + 1 ] * 256		471731	0		+=			
ANR	471775	Identifier	data_start		471731	0					
ANR	471776	AdditiveExpression	2 + old [ data_start ] + old [ data_start + 1 ] * 256		471731	1		+			
ANR	471777	PrimaryExpression	2		471731	0					
ANR	471778	AdditiveExpression	old [ data_start ] + old [ data_start + 1 ] * 256		471731	1		+			
ANR	471779	ArrayIndexing	old [ data_start ]		471731	0					
ANR	471780	Identifier	old		471731	0					
ANR	471781	Identifier	data_start		471731	1					
ANR	471782	MultiplicativeExpression	old [ data_start + 1 ] * 256		471731	1		*			
ANR	471783	ArrayIndexing	old [ data_start + 1 ]		471731	0					
ANR	471784	Identifier	old		471731	0					
ANR	471785	AdditiveExpression	data_start + 1		471731	1		+			
ANR	471786	Identifier	data_start		471731	0					
ANR	471787	PrimaryExpression	1		471731	1					
ANR	471788	PrimaryExpression	256		471731	1					
ANR	471789	IfStatement	if ( flg & FNAME )		471731	5					
ANR	471790	Condition	flg & FNAME	343:5:8391:8401	471731	0	True				
ANR	471791	BitAndExpression	flg & FNAME		471731	0		&			
ANR	471792	Identifier	flg		471731	0					
ANR	471793	Identifier	FNAME		471731	1					
ANR	471794	CompoundStatement		12:18:223:223	471731	1					
ANR	471795	WhileStatement	while ( data_start < n && old [ data_start ] )		471731	0					
ANR	471796	Condition	data_start < n && old [ data_start ]	344:8:8414:8446	471731	0	True				
ANR	471797	AndExpression	data_start < n && old [ data_start ]		471731	0		&&			
ANR	471798	RelationalExpression	data_start < n		471731	0		<			
ANR	471799	Identifier	data_start		471731	0					
ANR	471800	Identifier	n		471731	1					
ANR	471801	ArrayIndexing	old [ data_start ]		471731	1					
ANR	471802	Identifier	old		471731	0					
ANR	471803	Identifier	data_start		471731	1					
ANR	471804	ExpressionStatement	data_start ++	345:3:8452:8464	471731	1	True				
ANR	471805	PostIncDecOperationExpression	data_start ++		471731	0					
ANR	471806	Identifier	data_start		471731	0					
ANR	471807	IncDec	++		471731	1					
ANR	471808	ExpressionStatement	data_start ++	346:2:8468:8480	471731	1	True				
ANR	471809	PostIncDecOperationExpression	data_start ++		471731	0					
ANR	471810	Identifier	data_start		471731	0					
ANR	471811	IncDec	++		471731	1					
ANR	471812	IfStatement	if ( flg & FCOMMENT )		471731	6					
ANR	471813	Condition	flg & FCOMMENT	348:4:8489:8502	471731	0	True				
ANR	471814	BitAndExpression	flg & FCOMMENT		471731	0		&			
ANR	471815	Identifier	flg		471731	0					
ANR	471816	Identifier	FCOMMENT		471731	1					
ANR	471817	CompoundStatement		17:20:324:324	471731	1					
ANR	471818	WhileStatement	while ( data_start < n && old [ data_start ] )		471731	0					
ANR	471819	Condition	data_start < n && old [ data_start ]	349:8:8515:8547	471731	0	True				
ANR	471820	AndExpression	data_start < n && old [ data_start ]		471731	0		&&			
ANR	471821	RelationalExpression	data_start < n		471731	0		<			
ANR	471822	Identifier	data_start		471731	0					
ANR	471823	Identifier	n		471731	1					
ANR	471824	ArrayIndexing	old [ data_start ]		471731	1					
ANR	471825	Identifier	old		471731	0					
ANR	471826	Identifier	data_start		471731	1					
ANR	471827	ExpressionStatement	data_start ++	350:3:8553:8565	471731	1	True				
ANR	471828	PostIncDecOperationExpression	data_start ++		471731	0					
ANR	471829	Identifier	data_start		471731	0					
ANR	471830	IncDec	++		471731	1					
ANR	471831	ExpressionStatement	data_start ++	351:2:8569:8581	471731	1	True				
ANR	471832	PostIncDecOperationExpression	data_start ++		471731	0					
ANR	471833	Identifier	data_start		471731	0					
ANR	471834	IncDec	++		471731	1					
ANR	471835	IfStatement	if ( flg & FHCRC )		471731	7					
ANR	471836	Condition	flg & FHCRC	353:4:8590:8600	471731	0	True				
ANR	471837	BitAndExpression	flg & FHCRC		471731	0		&			
ANR	471838	Identifier	flg		471731	0					
ANR	471839	Identifier	FHCRC		471731	1					
ANR	471840	ExpressionStatement	data_start += 2	354:2:8605:8620	471731	1	True				
ANR	471841	AssignmentExpression	data_start += 2		471731	0		+=			
ANR	471842	Identifier	data_start		471731	0					
ANR	471843	PrimaryExpression	2		471731	1					
ANR	471844	IfStatement	if ( data_start >= n )		471731	8					
ANR	471845	Condition	data_start >= n	356:5:8628:8642	471731	0	True				
ANR	471846	RelationalExpression	data_start >= n		471731	0		>=			
ANR	471847	Identifier	data_start		471731	0					
ANR	471848	Identifier	n		471731	1					
ANR	471849	ReturnStatement	return 0 ;	357:2:8647:8655	471731	1	True				
ANR	471850	PrimaryExpression	0		471731	0					
ANR	471851	Statement	if	358:1:8658:8659	471731	9	True				
ANR	471852	Statement	(	358:4:8661:8661	471731	10	True				
ANR	471853	Statement	(	358:5:8662:8662	471731	11	True				
ANR	471854	Statement	*	358:6:8663:8663	471731	12	True				
ANR	471855	Statement	newch	358:7:8664:8668	471731	13	True				
ANR	471856	Statement	=	358:13:8670:8670	471731	14	True				
ANR	471857	Statement	CAST	358:15:8672:8675	471731	15	True				
ANR	471858	Statement	(	358:19:8676:8676	471731	16	True				
ANR	471859	Statement	unsigned	358:20:8677:8684	471731	17	True				
ANR	471860	Statement	char	358:29:8686:8689	471731	18	True				
ANR	471861	Statement	*	358:34:8691:8691	471731	19	True				
ANR	471862	Statement	","	358:35:8692:8692	471731	20	True				
ANR	471863	Statement	emalloc	358:37:8694:8700	471731	21	True				
ANR	471864	Statement	(	358:44:8701:8701	471731	22	True				
ANR	471865	Statement	HOWMANY	358:45:8702:8708	471731	23	True				
ANR	471866	Statement	+	358:53:8710:8710	471731	24	True				
ANR	471867	Statement	1	358:55:8712:8712	471731	25	True				
ANR	471868	Statement	)	358:56:8713:8713	471731	26	True				
ANR	471869	Statement	)	358:57:8714:8714	471731	27	True				
ANR	471870	Statement	)	358:58:8715:8715	471731	28	True				
ANR	471871	Statement	==	358:60:8717:8718	471731	29	True				
ANR	471872	Statement	NULL	358:63:8720:8723	471731	30	True				
ANR	471873	Statement	)	358:67:8724:8724	471731	31	True				
ANR	471874	CompoundStatement		27:69:545:545	471731	32					
ANR	471875	ReturnStatement	return 0 ;	359:2:8730:8738	471731	0	True				
ANR	471876	PrimaryExpression	0		471731	0					
ANR	471877	ExpressionStatement	"z . next_in = ( Bytef * ) strchr ( ( const char * ) old + data_start , old [ data_start ] )"	363:1:8785:8866	471731	33	True				
ANR	471878	AssignmentExpression	"z . next_in = ( Bytef * ) strchr ( ( const char * ) old + data_start , old [ data_start ] )"		471731	0		=			
ANR	471879	MemberAccess	z . next_in		471731	0					
ANR	471880	Identifier	z		471731	0					
ANR	471881	Identifier	next_in		471731	1					
ANR	471882	CastExpression	"( Bytef * ) strchr ( ( const char * ) old + data_start , old [ data_start ] )"		471731	1					
ANR	471883	CastTarget	Bytef *		471731	0					
ANR	471884	CallExpression	"strchr ( ( const char * ) old + data_start , old [ data_start ] )"		471731	1					
ANR	471885	Callee	strchr		471731	0					
ANR	471886	Identifier	strchr		471731	0					
ANR	471887	ArgumentList	( const char * ) old + data_start		471731	1					
ANR	471888	Argument	( const char * ) old + data_start		471731	0					
ANR	471889	AdditiveExpression	( const char * ) old + data_start		471731	0		+			
ANR	471890	CastExpression	( const char * ) old		471731	0					
ANR	471891	CastTarget	const char *		471731	0					
ANR	471892	Identifier	old		471731	1					
ANR	471893	Identifier	data_start		471731	1					
ANR	471894	Argument	old [ data_start ]		471731	1					
ANR	471895	ArrayIndexing	old [ data_start ]		471731	0					
ANR	471896	Identifier	old		471731	0					
ANR	471897	Identifier	data_start		471731	1					
ANR	471898	ExpressionStatement	"z . avail_in = CAST ( uint32_t , ( n - data_start ) )"	365:1:8869:8914	471731	34	True				
ANR	471899	AssignmentExpression	"z . avail_in = CAST ( uint32_t , ( n - data_start ) )"		471731	0		=			
ANR	471900	MemberAccess	z . avail_in		471731	0					
ANR	471901	Identifier	z		471731	0					
ANR	471902	Identifier	avail_in		471731	1					
ANR	471903	CallExpression	"CAST ( uint32_t , ( n - data_start ) )"		471731	1					
ANR	471904	Callee	CAST		471731	0					
ANR	471905	Identifier	CAST		471731	0					
ANR	471906	ArgumentList	uint32_t		471731	1					
ANR	471907	Argument	uint32_t		471731	0					
ANR	471908	Identifier	uint32_t		471731	0					
ANR	471909	Argument	n - data_start		471731	1					
ANR	471910	AdditiveExpression	n - data_start		471731	0		-			
ANR	471911	Identifier	n		471731	0					
ANR	471912	Identifier	data_start		471731	1					
ANR	471913	ExpressionStatement	z . next_out = * newch	366:1:8917:8936	471731	35	True				
ANR	471914	AssignmentExpression	z . next_out = * newch		471731	0		=			
ANR	471915	MemberAccess	z . next_out		471731	0					
ANR	471916	Identifier	z		471731	0					
ANR	471917	Identifier	next_out		471731	1					
ANR	471918	UnaryOperationExpression	* newch		471731	1					
ANR	471919	UnaryOperator	*		471731	0					
ANR	471920	Identifier	newch		471731	1					
ANR	471921	ExpressionStatement	z . avail_out = HOWMANY	367:1:8939:8960	471731	36	True				
ANR	471922	AssignmentExpression	z . avail_out = HOWMANY		471731	0		=			
ANR	471923	MemberAccess	z . avail_out		471731	0					
ANR	471924	Identifier	z		471731	0					
ANR	471925	Identifier	avail_out		471731	1					
ANR	471926	Identifier	HOWMANY		471731	1					
ANR	471927	ExpressionStatement	z . zalloc = Z_NULL	368:1:8963:8980	471731	37	True				
ANR	471928	AssignmentExpression	z . zalloc = Z_NULL		471731	0		=			
ANR	471929	MemberAccess	z . zalloc		471731	0					
ANR	471930	Identifier	z		471731	0					
ANR	471931	Identifier	zalloc		471731	1					
ANR	471932	Identifier	Z_NULL		471731	1					
ANR	471933	ExpressionStatement	z . zfree = Z_NULL	369:1:8983:8999	471731	38	True				
ANR	471934	AssignmentExpression	z . zfree = Z_NULL		471731	0		=			
ANR	471935	MemberAccess	z . zfree		471731	0					
ANR	471936	Identifier	z		471731	0					
ANR	471937	Identifier	zfree		471731	1					
ANR	471938	Identifier	Z_NULL		471731	1					
ANR	471939	ExpressionStatement	z . opaque = Z_NULL	370:1:9002:9019	471731	39	True				
ANR	471940	AssignmentExpression	z . opaque = Z_NULL		471731	0		=			
ANR	471941	MemberAccess	z . opaque		471731	0					
ANR	471942	Identifier	z		471731	0					
ANR	471943	Identifier	opaque		471731	1					
ANR	471944	Identifier	Z_NULL		471731	1					
ANR	471945	ExpressionStatement	"rc = inflateInit2 ( & z , - 15 )"	373:1:9057:9083	471731	40	True				
ANR	471946	AssignmentExpression	"rc = inflateInit2 ( & z , - 15 )"		471731	0		=			
ANR	471947	Identifier	rc		471731	0					
ANR	471948	CallExpression	"inflateInit2 ( & z , - 15 )"		471731	1					
ANR	471949	Callee	inflateInit2		471731	0					
ANR	471950	Identifier	inflateInit2		471731	0					
ANR	471951	ArgumentList	& z		471731	1					
ANR	471952	Argument	& z		471731	0					
ANR	471953	UnaryOperationExpression	& z		471731	0					
ANR	471954	UnaryOperator	&		471731	0					
ANR	471955	Identifier	z		471731	1					
ANR	471956	Argument	- 15		471731	1					
ANR	471957	UnaryOperationExpression	- 15		471731	0					
ANR	471958	UnaryOperator	-		471731	0					
ANR	471959	PrimaryExpression	15		471731	1					
ANR	471960	IfStatement	if ( rc != Z_OK )		471731	41					
ANR	471961	Condition	rc != Z_OK	374:5:9090:9099	471731	0	True				
ANR	471962	EqualityExpression	rc != Z_OK		471731	0		!=			
ANR	471963	Identifier	rc		471731	0					
ANR	471964	Identifier	Z_OK		471731	1					
ANR	471965	CompoundStatement		43:17:921:921	471731	1					
ANR	471966	ExpressionStatement	"file_error ( ms , 0 , ""zlib: %s"" , z . msg )"	375:2:9106:9142	471731	0	True				
ANR	471967	CallExpression	"file_error ( ms , 0 , ""zlib: %s"" , z . msg )"		471731	0					
ANR	471968	Callee	file_error		471731	0					
ANR	471969	Identifier	file_error		471731	0					
ANR	471970	ArgumentList	ms		471731	1					
ANR	471971	Argument	ms		471731	0					
ANR	471972	Identifier	ms		471731	0					
ANR	471973	Argument	0		471731	1					
ANR	471974	PrimaryExpression	0		471731	0					
ANR	471975	Argument	"""zlib: %s"""		471731	2					
ANR	471976	PrimaryExpression	"""zlib: %s"""		471731	0					
ANR	471977	Argument	z . msg		471731	3					
ANR	471978	MemberAccess	z . msg		471731	0					
ANR	471979	Identifier	z		471731	0					
ANR	471980	Identifier	msg		471731	1					
ANR	471981	ReturnStatement	return 0 ;	376:2:9146:9154	471731	1	True				
ANR	471982	PrimaryExpression	0		471731	0					
ANR	471983	ExpressionStatement	"rc = inflate ( & z , Z_SYNC_FLUSH )"	379:1:9161:9191	471731	42	True				
ANR	471984	AssignmentExpression	"rc = inflate ( & z , Z_SYNC_FLUSH )"		471731	0		=			
ANR	471985	Identifier	rc		471731	0					
ANR	471986	CallExpression	"inflate ( & z , Z_SYNC_FLUSH )"		471731	1					
ANR	471987	Callee	inflate		471731	0					
ANR	471988	Identifier	inflate		471731	0					
ANR	471989	ArgumentList	& z		471731	1					
ANR	471990	Argument	& z		471731	0					
ANR	471991	UnaryOperationExpression	& z		471731	0					
ANR	471992	UnaryOperator	&		471731	0					
ANR	471993	Identifier	z		471731	1					
ANR	471994	Argument	Z_SYNC_FLUSH		471731	1					
ANR	471995	Identifier	Z_SYNC_FLUSH		471731	0					
ANR	471996	IfStatement	if ( rc != Z_OK && rc != Z_STREAM_END )		471731	43					
ANR	471997	Condition	rc != Z_OK && rc != Z_STREAM_END	380:5:9198:9229	471731	0	True				
ANR	471998	AndExpression	rc != Z_OK && rc != Z_STREAM_END		471731	0		&&			
ANR	471999	EqualityExpression	rc != Z_OK		471731	0		!=			
ANR	472000	Identifier	rc		471731	0					
ANR	472001	Identifier	Z_OK		471731	1					
ANR	472002	EqualityExpression	rc != Z_STREAM_END		471731	1		!=			
ANR	472003	Identifier	rc		471731	0					
ANR	472004	Identifier	Z_STREAM_END		471731	1					
ANR	472005	CompoundStatement		49:39:1051:1051	471731	1					
ANR	472006	ExpressionStatement	"file_error ( ms , 0 , ""zlib: %s"" , z . msg )"	381:2:9236:9272	471731	0	True				
ANR	472007	CallExpression	"file_error ( ms , 0 , ""zlib: %s"" , z . msg )"		471731	0					
ANR	472008	Callee	file_error		471731	0					
ANR	472009	Identifier	file_error		471731	0					
ANR	472010	ArgumentList	ms		471731	1					
ANR	472011	Argument	ms		471731	0					
ANR	472012	Identifier	ms		471731	0					
ANR	472013	Argument	0		471731	1					
ANR	472014	PrimaryExpression	0		471731	0					
ANR	472015	Argument	"""zlib: %s"""		471731	2					
ANR	472016	PrimaryExpression	"""zlib: %s"""		471731	0					
ANR	472017	Argument	z . msg		471731	3					
ANR	472018	MemberAccess	z . msg		471731	0					
ANR	472019	Identifier	z		471731	0					
ANR	472020	Identifier	msg		471731	1					
ANR	472021	ReturnStatement	return 0 ;	382:2:9276:9284	471731	1	True				
ANR	472022	PrimaryExpression	0		471731	0					
ANR	472023	ExpressionStatement	n = ( size_t ) z . total_out	385:1:9291:9314	471731	44	True				
ANR	472024	AssignmentExpression	n = ( size_t ) z . total_out		471731	0		=			
ANR	472025	Identifier	n		471731	0					
ANR	472026	CastExpression	( size_t ) z . total_out		471731	1					
ANR	472027	CastTarget	size_t		471731	0					
ANR	472028	MemberAccess	z . total_out		471731	1					
ANR	472029	Identifier	z		471731	0					
ANR	472030	Identifier	total_out		471731	1					
ANR	472031	ExpressionStatement	( void ) inflateEnd ( & z )	386:1:9317:9337	471731	45	True				
ANR	472032	CastExpression	( void ) inflateEnd ( & z )		471731	0					
ANR	472033	CastTarget	void		471731	0					
ANR	472034	CallExpression	inflateEnd ( & z )		471731	1					
ANR	472035	Callee	inflateEnd		471731	0					
ANR	472036	Identifier	inflateEnd		471731	0					
ANR	472037	ArgumentList	& z		471731	1					
ANR	472038	Argument	& z		471731	0					
ANR	472039	UnaryOperationExpression	& z		471731	0					
ANR	472040	UnaryOperator	&		471731	0					
ANR	472041	Identifier	z		471731	1					
ANR	472042	ExpressionStatement	( * newch ) [ n ] = '\\0'	389:1:9388:9406	471731	46	True				
ANR	472043	AssignmentExpression	( * newch ) [ n ] = '\\0'		471731	0		=			
ANR	472044	ArrayIndexing	( * newch ) [ n ]		471731	0					
ANR	472045	UnaryOperationExpression	* newch		471731	0					
ANR	472046	UnaryOperator	*		471731	0					
ANR	472047	Identifier	newch		471731	1					
ANR	472048	Identifier	n		471731	1					
ANR	472049	PrimaryExpression	'\\0'		471731	1					
ANR	472050	ReturnStatement	return n ;	391:1:9410:9418	471731	47	True				
ANR	472051	Identifier	n		471731	0					
ANR	472052	ReturnType	size_t		471731	1					
ANR	472053	Identifier	uncompressgzipped		471731	2					
ANR	472054	ParameterList	"struct magic_set * ms , const unsigned char * old , unsigned char * * newch , size_t n"		471731	3					
ANR	472055	Parameter	struct magic_set * ms	330:18:8095:8114	471731	0	True				
ANR	472056	ParameterType	struct magic_set *		471731	0					
ANR	472057	Identifier	ms		471731	1					
ANR	472058	Parameter	const unsigned char * old	330:40:8117:8140	471731	1	True				
ANR	472059	ParameterType	const unsigned char *		471731	0					
ANR	472060	Identifier	old		471731	1					
ANR	472061	Parameter	unsigned char * * newch	331:4:8147:8167	471731	2	True				
ANR	472062	ParameterType	unsigned char * *		471731	0					
ANR	472063	Identifier	newch		471731	1					
ANR	472064	Parameter	size_t n	331:27:8170:8177	471731	3	True				
ANR	472065	ParameterType	size_t		471731	0					
ANR	472066	Identifier	n		471731	1					
ANR	472067	CFGEntryNode	ENTRY		471731		True				
ANR	472068	CFGExitNode	EXIT		471731		True				
ANR	472069	Symbol	& z		471731						
ANR	472070	Symbol	FEXTRA		471731						
ANR	472071	Symbol	z . msg		471731						
ANR	472072	Symbol	* data_start		471731						
ANR	472073	Symbol	data_start		471731						
ANR	472074	Symbol	strchr		471731						
ANR	472075	Symbol	z . avail_out		471731						
ANR	472076	Symbol	Z_OK		471731						
ANR	472077	Symbol	FHCRC		471731						
ANR	472078	Symbol	* old		471731						
ANR	472079	Symbol	* newch		471731						
ANR	472080	Symbol	z . zalloc		471731						
ANR	472081	Symbol	Z_STREAM_END		471731						
ANR	472082	Symbol	flg		471731						
ANR	472083	Symbol	CAST		471731						
ANR	472084	Symbol	inflateInit2		471731						
ANR	472085	Symbol	Z_SYNC_FLUSH		471731						
ANR	472086	Symbol	ms		471731						
ANR	472087	Symbol	old		471731						
ANR	472088	Symbol	* * newch		471731						
ANR	472089	Symbol	uint32_t		471731						
ANR	472090	Symbol	z . next_in		471731						
ANR	472091	Symbol	z . zfree		471731						
ANR	472092	Symbol	n		471731						
ANR	472093	Symbol	FNAME		471731						
ANR	472094	Symbol	rc		471731						
ANR	472095	Symbol	z . next_out		471731						
ANR	472096	Symbol	HOWMANY		471731						
ANR	472097	Symbol	z . total_out		471731						
ANR	472098	Symbol	z . opaque		471731						
ANR	472099	Symbol	inflate		471731						
ANR	472100	Symbol	newch		471731						
ANR	472101	Symbol	* n		471731						
ANR	472102	Symbol	z		471731						
ANR	472103	Symbol	FCOMMENT		471731						
ANR	472104	Symbol	z . avail_in		471731						
ANR	472105	Symbol	Z_NULL		471731						
ANR	472106	Function	uncompressbuf	395:8:9438:11955							
ANR	472107	FunctionDef	"uncompressbuf (struct magic_set * ms , int fd , size_t method , const unsigned char * old , unsigned char * * newch , size_t n)"		472106	0					
ANR	472108	CompoundStatement		398:0:9567:11955	472106	0					
ANR	472109	IdentifierDeclStatement	"int fdin [ 2 ] , fdout [ 2 ] ;"	399:1:9570:9591	472106	0	True				
ANR	472110	IdentifierDecl	fdin [ 2 ]		472106	0					
ANR	472111	IdentifierDeclType	int [ 2 ]		472106	0					
ANR	472112	Identifier	fdin		472106	1					
ANR	472113	PrimaryExpression	2		472106	2					
ANR	472114	IdentifierDecl	fdout [ 2 ]		472106	1					
ANR	472115	IdentifierDeclType	int [ 2 ]		472106	0					
ANR	472116	Identifier	fdout		472106	1					
ANR	472117	PrimaryExpression	2		472106	2					
ANR	472118	IdentifierDeclStatement	int status ;	400:1:9594:9604	472106	1	True				
ANR	472119	IdentifierDecl	status		472106	0					
ANR	472120	IdentifierDeclType	int		472106	0					
ANR	472121	Identifier	status		472106	1					
ANR	472122	IdentifierDeclStatement	ssize_t r ;	401:1:9607:9616	472106	2	True				
ANR	472123	IdentifierDecl	r		472106	0					
ANR	472124	IdentifierDeclType	ssize_t		472106	0					
ANR	472125	Identifier	r		472106	1					
ANR	472126	IfStatement	if ( method == 2 )		472106	3					
ANR	472127	Condition	method == 2	405:5:9700:9710	472106	0	True				
ANR	472128	EqualityExpression	method == 2		472106	0		==			
ANR	472129	Identifier	method		472106	0					
ANR	472130	PrimaryExpression	2		472106	1					
ANR	472131	ReturnStatement	"return uncompressgzipped ( ms , old , newch , n ) ;"	406:2:9715:9758	472106	1	True				
ANR	472132	CallExpression	"uncompressgzipped ( ms , old , newch , n )"		472106	0					
ANR	472133	Callee	uncompressgzipped		472106	0					
ANR	472134	Identifier	uncompressgzipped		472106	0					
ANR	472135	ArgumentList	ms		472106	1					
ANR	472136	Argument	ms		472106	0					
ANR	472137	Identifier	ms		472106	0					
ANR	472138	Argument	old		472106	1					
ANR	472139	Identifier	old		472106	0					
ANR	472140	Argument	newch		472106	2					
ANR	472141	Identifier	newch		472106	0					
ANR	472142	Argument	n		472106	3					
ANR	472143	Identifier	n		472106	0					
ANR	472144	ExpressionStatement	( void ) fflush ( stdout )	408:1:9768:9788	472106	4	True				
ANR	472145	CastExpression	( void ) fflush ( stdout )		472106	0					
ANR	472146	CastTarget	void		472106	0					
ANR	472147	CallExpression	fflush ( stdout )		472106	1					
ANR	472148	Callee	fflush		472106	0					
ANR	472149	Identifier	fflush		472106	0					
ANR	472150	ArgumentList	stdout		472106	1					
ANR	472151	Argument	stdout		472106	0					
ANR	472152	Identifier	stdout		472106	0					
ANR	472153	ExpressionStatement	( void ) fflush ( stderr )	409:1:9791:9811	472106	5	True				
ANR	472154	CastExpression	( void ) fflush ( stderr )		472106	0					
ANR	472155	CastTarget	void		472106	0					
ANR	472156	CallExpression	fflush ( stderr )		472106	1					
ANR	472157	Callee	fflush		472106	0					
ANR	472158	Identifier	fflush		472106	0					
ANR	472159	ArgumentList	stderr		472106	1					
ANR	472160	Argument	stderr		472106	0					
ANR	472161	Identifier	stderr		472106	0					
ANR	472162	IfStatement	if ( ( fd != - 1 && pipe ( fdin ) == - 1 ) || pipe ( fdout ) == - 1 )		472106	6					
ANR	472163	Condition	( fd != - 1 && pipe ( fdin ) == - 1 ) || pipe ( fdout ) == - 1	411:5:9819:9869	472106	0	True				
ANR	472164	OrExpression	( fd != - 1 && pipe ( fdin ) == - 1 ) || pipe ( fdout ) == - 1		472106	0		||			
ANR	472165	AndExpression	fd != - 1 && pipe ( fdin ) == - 1		472106	0		&&			
ANR	472166	EqualityExpression	fd != - 1		472106	0		!=			
ANR	472167	Identifier	fd		472106	0					
ANR	472168	UnaryOperationExpression	- 1		472106	1					
ANR	472169	UnaryOperator	-		472106	0					
ANR	472170	PrimaryExpression	1		472106	1					
ANR	472171	EqualityExpression	pipe ( fdin ) == - 1		472106	1		==			
ANR	472172	CallExpression	pipe ( fdin )		472106	0					
ANR	472173	Callee	pipe		472106	0					
ANR	472174	Identifier	pipe		472106	0					
ANR	472175	ArgumentList	fdin		472106	1					
ANR	472176	Argument	fdin		472106	0					
ANR	472177	Identifier	fdin		472106	0					
ANR	472178	UnaryOperationExpression	- 1		472106	1					
ANR	472179	UnaryOperator	-		472106	0					
ANR	472180	PrimaryExpression	1		472106	1					
ANR	472181	EqualityExpression	pipe ( fdout ) == - 1		472106	1		==			
ANR	472182	CallExpression	pipe ( fdout )		472106	0					
ANR	472183	Callee	pipe		472106	0					
ANR	472184	Identifier	pipe		472106	0					
ANR	472185	ArgumentList	fdout		472106	1					
ANR	472186	Argument	fdout		472106	0					
ANR	472187	Identifier	fdout		472106	0					
ANR	472188	UnaryOperationExpression	- 1		472106	1					
ANR	472189	UnaryOperator	-		472106	0					
ANR	472190	PrimaryExpression	1		472106	1					
ANR	472191	CompoundStatement		14:58:304:304	472106	1					
ANR	472192	ExpressionStatement	"file_error ( ms , errno , ""cannot create pipe"" )"	412:2:9876:9919	472106	0	True				
ANR	472193	CallExpression	"file_error ( ms , errno , ""cannot create pipe"" )"		472106	0					
ANR	472194	Callee	file_error		472106	0					
ANR	472195	Identifier	file_error		472106	0					
ANR	472196	ArgumentList	ms		472106	1					
ANR	472197	Argument	ms		472106	0					
ANR	472198	Identifier	ms		472106	0					
ANR	472199	Argument	errno		472106	1					
ANR	472200	Identifier	errno		472106	0					
ANR	472201	Argument	"""cannot create pipe"""		472106	2					
ANR	472202	PrimaryExpression	"""cannot create pipe"""		472106	0					
ANR	472203	ReturnStatement	return NODATA ;	413:2:9924:9937	472106	1	True				
ANR	472204	Identifier	NODATA		472106	0					
ANR	472205	SwitchStatement	switch ( fork ( ) )		472106	7					
ANR	472206	Condition	fork ( )	415:9:9951:9956	472106	0	True				
ANR	472207	CallExpression	fork ( )		472106	0					
ANR	472208	Callee	fork		472106	0					
ANR	472209	Identifier	fork		472106	0					
ANR	472210	ArgumentList			472106	1					
ANR	472211	CompoundStatement		18:17:391:391	472106	1					
ANR	472212	Label	case 0 :	416:1:9962:9968	472106	0	True				
ANR	472213	ExpressionStatement	( void ) close ( 0 )	417:2:9984:9999	472106	1	True				
ANR	472214	CastExpression	( void ) close ( 0 )		472106	0					
ANR	472215	CastTarget	void		472106	0					
ANR	472216	CallExpression	close ( 0 )		472106	1					
ANR	472217	Callee	close		472106	0					
ANR	472218	Identifier	close		472106	0					
ANR	472219	ArgumentList	0		472106	1					
ANR	472220	Argument	0		472106	0					
ANR	472221	PrimaryExpression	0		472106	0					
ANR	472222	IfStatement	if ( fd != - 1 )		472106	2					
ANR	472223	Condition	fd != - 1	418:6:10007:10014	472106	0	True				
ANR	472224	EqualityExpression	fd != - 1		472106	0		!=			
ANR	472225	Identifier	fd		472106	0					
ANR	472226	UnaryOperationExpression	- 1		472106	1					
ANR	472227	UnaryOperator	-		472106	0					
ANR	472228	PrimaryExpression	1		472106	1					
ANR	472229	CompoundStatement		21:16:449:449	472106	1					
ANR	472230	ExpressionStatement	( void ) dup ( fd )	419:6:10025:10039	472106	0	True				
ANR	472231	CastExpression	( void ) dup ( fd )		472106	0					
ANR	472232	CastTarget	void		472106	0					
ANR	472233	CallExpression	dup ( fd )		472106	1					
ANR	472234	Callee	dup		472106	0					
ANR	472235	Identifier	dup		472106	0					
ANR	472236	ArgumentList	fd		472106	1					
ANR	472237	Argument	fd		472106	0					
ANR	472238	Identifier	fd		472106	0					
ANR	472239	ExpressionStatement	"( void ) FINFO_LSEEK_FUNC ( 0 , ( zend_off_t ) 0 , SEEK_SET )"	420:6:10047:10098	472106	1	True				
ANR	472240	CastExpression	"( void ) FINFO_LSEEK_FUNC ( 0 , ( zend_off_t ) 0 , SEEK_SET )"		472106	0					
ANR	472241	CastTarget	void		472106	0					
ANR	472242	CallExpression	"FINFO_LSEEK_FUNC ( 0 , ( zend_off_t ) 0 , SEEK_SET )"		472106	1					
ANR	472243	Callee	FINFO_LSEEK_FUNC		472106	0					
ANR	472244	Identifier	FINFO_LSEEK_FUNC		472106	0					
ANR	472245	ArgumentList	0		472106	1					
ANR	472246	Argument	0		472106	0					
ANR	472247	PrimaryExpression	0		472106	0					
ANR	472248	Argument	( zend_off_t ) 0		472106	1					
ANR	472249	CastExpression	( zend_off_t ) 0		472106	0					
ANR	472250	CastTarget	zend_off_t		472106	0					
ANR	472251	PrimaryExpression	0		472106	1					
ANR	472252	Argument	SEEK_SET		472106	2					
ANR	472253	Identifier	SEEK_SET		472106	0					
ANR	472254	ElseStatement	else		472106	0					
ANR	472255	CompoundStatement		24:9:541:541	472106	0					
ANR	472256	ExpressionStatement	( void ) dup ( fdin [ 0 ] )	422:6:10117:10136	472106	0	True				
ANR	472257	CastExpression	( void ) dup ( fdin [ 0 ] )		472106	0					
ANR	472258	CastTarget	void		472106	0					
ANR	472259	CallExpression	dup ( fdin [ 0 ] )		472106	1					
ANR	472260	Callee	dup		472106	0					
ANR	472261	Identifier	dup		472106	0					
ANR	472262	ArgumentList	fdin [ 0 ]		472106	1					
ANR	472263	Argument	fdin [ 0 ]		472106	0					
ANR	472264	ArrayIndexing	fdin [ 0 ]		472106	0					
ANR	472265	Identifier	fdin		472106	0					
ANR	472266	PrimaryExpression	0		472106	1					
ANR	472267	ExpressionStatement	( void ) close ( fdin [ 0 ] )	423:6:10144:10165	472106	1	True				
ANR	472268	CastExpression	( void ) close ( fdin [ 0 ] )		472106	0					
ANR	472269	CastTarget	void		472106	0					
ANR	472270	CallExpression	close ( fdin [ 0 ] )		472106	1					
ANR	472271	Callee	close		472106	0					
ANR	472272	Identifier	close		472106	0					
ANR	472273	ArgumentList	fdin [ 0 ]		472106	1					
ANR	472274	Argument	fdin [ 0 ]		472106	0					
ANR	472275	ArrayIndexing	fdin [ 0 ]		472106	0					
ANR	472276	Identifier	fdin		472106	0					
ANR	472277	PrimaryExpression	0		472106	1					
ANR	472278	ExpressionStatement	( void ) close ( fdin [ 1 ] )	424:6:10173:10194	472106	2	True				
ANR	472279	CastExpression	( void ) close ( fdin [ 1 ] )		472106	0					
ANR	472280	CastTarget	void		472106	0					
ANR	472281	CallExpression	close ( fdin [ 1 ] )		472106	1					
ANR	472282	Callee	close		472106	0					
ANR	472283	Identifier	close		472106	0					
ANR	472284	ArgumentList	fdin [ 1 ]		472106	1					
ANR	472285	Argument	fdin [ 1 ]		472106	0					
ANR	472286	ArrayIndexing	fdin [ 1 ]		472106	0					
ANR	472287	Identifier	fdin		472106	0					
ANR	472288	PrimaryExpression	1		472106	1					
ANR	472289	ExpressionStatement	( void ) close ( 1 )	427:2:10203:10218	472106	3	True				
ANR	472290	CastExpression	( void ) close ( 1 )		472106	0					
ANR	472291	CastTarget	void		472106	0					
ANR	472292	CallExpression	close ( 1 )		472106	1					
ANR	472293	Callee	close		472106	0					
ANR	472294	Identifier	close		472106	0					
ANR	472295	ArgumentList	1		472106	1					
ANR	472296	Argument	1		472106	0					
ANR	472297	PrimaryExpression	1		472106	0					
ANR	472298	ExpressionStatement	( void ) dup ( fdout [ 1 ] )	428:2:10222:10242	472106	4	True				
ANR	472299	CastExpression	( void ) dup ( fdout [ 1 ] )		472106	0					
ANR	472300	CastTarget	void		472106	0					
ANR	472301	CallExpression	dup ( fdout [ 1 ] )		472106	1					
ANR	472302	Callee	dup		472106	0					
ANR	472303	Identifier	dup		472106	0					
ANR	472304	ArgumentList	fdout [ 1 ]		472106	1					
ANR	472305	Argument	fdout [ 1 ]		472106	0					
ANR	472306	ArrayIndexing	fdout [ 1 ]		472106	0					
ANR	472307	Identifier	fdout		472106	0					
ANR	472308	PrimaryExpression	1		472106	1					
ANR	472309	ExpressionStatement	( void ) close ( fdout [ 0 ] )	429:2:10246:10268	472106	5	True				
ANR	472310	CastExpression	( void ) close ( fdout [ 0 ] )		472106	0					
ANR	472311	CastTarget	void		472106	0					
ANR	472312	CallExpression	close ( fdout [ 0 ] )		472106	1					
ANR	472313	Callee	close		472106	0					
ANR	472314	Identifier	close		472106	0					
ANR	472315	ArgumentList	fdout [ 0 ]		472106	1					
ANR	472316	Argument	fdout [ 0 ]		472106	0					
ANR	472317	ArrayIndexing	fdout [ 0 ]		472106	0					
ANR	472318	Identifier	fdout		472106	0					
ANR	472319	PrimaryExpression	0		472106	1					
ANR	472320	ExpressionStatement	( void ) close ( fdout [ 1 ] )	430:2:10272:10294	472106	6	True				
ANR	472321	CastExpression	( void ) close ( fdout [ 1 ] )		472106	0					
ANR	472322	CastTarget	void		472106	0					
ANR	472323	CallExpression	close ( fdout [ 1 ] )		472106	1					
ANR	472324	Callee	close		472106	0					
ANR	472325	Identifier	close		472106	0					
ANR	472326	ArgumentList	fdout [ 1 ]		472106	1					
ANR	472327	Argument	fdout [ 1 ]		472106	0					
ANR	472328	ArrayIndexing	fdout [ 1 ]		472106	0					
ANR	472329	Identifier	fdout		472106	0					
ANR	472330	PrimaryExpression	1		472106	1					
ANR	472331	IfStatement	if ( compr [ method ] . silent )		472106	7					
ANR	472332	Condition	compr [ method ] . silent	432:6:10316:10335	472106	0	True				
ANR	472333	MemberAccess	compr [ method ] . silent		472106	0					
ANR	472334	ArrayIndexing	compr [ method ]		472106	0					
ANR	472335	Identifier	compr		472106	0					
ANR	472336	Identifier	method		472106	1					
ANR	472337	Identifier	silent		472106	1					
ANR	472338	ExpressionStatement	( void ) close ( 2 )	433:3:10341:10355	472106	1	True				
ANR	472339	CastExpression	( void ) close ( 2 )		472106	0					
ANR	472340	CastTarget	void		472106	0					
ANR	472341	CallExpression	close ( 2 )		472106	1					
ANR	472342	Callee	close		472106	0					
ANR	472343	Identifier	close		472106	0					
ANR	472344	ArgumentList	2		472106	1					
ANR	472345	Argument	2		472106	0					
ANR	472346	PrimaryExpression	2		472106	0					
ANR	472347	Statement	(	436:2:10367:10367	472106	8	True				
ANR	472348	Statement	void	436:3:10368:10371	472106	9	True				
ANR	472349	Statement	)	436:7:10372:10372	472106	10	True				
ANR	472350	Statement	execvp	436:8:10373:10378	472106	11	True				
ANR	472351	Statement	(	436:14:10379:10379	472106	12	True				
ANR	472352	Statement	compr	436:15:10380:10384	472106	13	True				
ANR	472353	Statement	[	436:20:10385:10385	472106	14	True				
ANR	472354	Statement	method	436:21:10386:10391	472106	15	True				
ANR	472355	Statement	]	436:27:10392:10392	472106	16	True				
ANR	472356	Statement	.	436:28:10393:10393	472106	17	True				
ANR	472357	Statement	argv	436:29:10394:10397	472106	18	True				
ANR	472358	Statement	[	436:33:10398:10398	472106	19	True				
ANR	472359	Statement	0	436:34:10399:10399	472106	20	True				
ANR	472360	Statement	]	436:35:10400:10400	472106	21	True				
ANR	472361	Statement	","	436:36:10401:10401	472106	22	True				
ANR	472362	Statement	(	437:6:10409:10409	472106	23	True				
ANR	472363	Statement	char	437:7:10410:10413	472106	24	True				
ANR	472364	Statement	*	437:12:10415:10415	472106	25	True				
ANR	472365	Statement	const	437:13:10416:10420	472106	26	True				
ANR	472366	Statement	*	437:19:10422:10422	472106	27	True				
ANR	472367	Statement	)	437:20:10423:10423	472106	28	True				
ANR	472368	Statement	(	437:21:10424:10424	472106	29	True				
ANR	472369	Statement	intptr_t	437:22:10425:10432	472106	30	True				
ANR	472370	Statement	)	437:30:10433:10433	472106	31	True				
ANR	472371	Statement	compr	437:31:10434:10438	472106	32	True				
ANR	472372	Statement	[	437:36:10439:10439	472106	33	True				
ANR	472373	Statement	method	437:37:10440:10445	472106	34	True				
ANR	472374	Statement	]	437:43:10446:10446	472106	35	True				
ANR	472375	Statement	.	437:44:10447:10447	472106	36	True				
ANR	472376	Statement	argv	437:45:10448:10451	472106	37	True				
ANR	472377	Statement	)	437:49:10452:10452	472106	38	True				
ANR	472378	ExpressionStatement		437:50:10453:10453	472106	39	True				
ANR	472379	ExpressionStatement	"( void ) fprintf ( stderr , ""exec `%s' failed (%s)\\n"" , compr [ method ] . argv [ 0 ] , strerror ( errno ) )"	439:2:10470:10564	472106	40	True				
ANR	472380	CastExpression	"( void ) fprintf ( stderr , ""exec `%s' failed (%s)\\n"" , compr [ method ] . argv [ 0 ] , strerror ( errno ) )"		472106	0					
ANR	472381	CastTarget	void		472106	0					
ANR	472382	CallExpression	"fprintf ( stderr , ""exec `%s' failed (%s)\\n"" , compr [ method ] . argv [ 0 ] , strerror ( errno ) )"		472106	1					
ANR	472383	Callee	fprintf		472106	0					
ANR	472384	Identifier	fprintf		472106	0					
ANR	472385	ArgumentList	stderr		472106	1					
ANR	472386	Argument	stderr		472106	0					
ANR	472387	Identifier	stderr		472106	0					
ANR	472388	Argument	"""exec `%s' failed (%s)\\n"""		472106	1					
ANR	472389	PrimaryExpression	"""exec `%s' failed (%s)\\n"""		472106	0					
ANR	472390	Argument	compr [ method ] . argv [ 0 ]		472106	2					
ANR	472391	ArrayIndexing	compr [ method ] . argv [ 0 ]		472106	0					
ANR	472392	MemberAccess	compr [ method ] . argv		472106	0					
ANR	472393	ArrayIndexing	compr [ method ]		472106	0					
ANR	472394	Identifier	compr		472106	0					
ANR	472395	Identifier	method		472106	1					
ANR	472396	Identifier	argv		472106	1					
ANR	472397	PrimaryExpression	0		472106	1					
ANR	472398	Argument	strerror ( errno )		472106	3					
ANR	472399	CallExpression	strerror ( errno )		472106	0					
ANR	472400	Callee	strerror		472106	0					
ANR	472401	Identifier	strerror		472106	0					
ANR	472402	ArgumentList	errno		472106	1					
ANR	472403	Argument	errno		472106	0					
ANR	472404	Identifier	errno		472106	0					
ANR	472405	ExpressionStatement	exit ( 1 )	442:2:10575:10582	472106	41	True				
ANR	472406	CallExpression	exit ( 1 )		472106	0					
ANR	472407	Callee	exit		472106	0					
ANR	472408	Identifier	exit		472106	0					
ANR	472409	ArgumentList	1		472106	1					
ANR	472410	Argument	1		472106	0					
ANR	472411	PrimaryExpression	1		472106	0					
ANR	472412	Statement	case	444:1:10602:10605	472106	42	True				
ANR	472413	Statement	-	444:6:10607:10607	472106	43	True				
ANR	472414	Label	1 :	444:7:10608:10609	472106	44	True				
ANR	472415	ExpressionStatement	"file_error ( ms , errno , ""could not fork"" )"	445:2:10613:10652	472106	45	True				
ANR	472416	CallExpression	"file_error ( ms , errno , ""could not fork"" )"		472106	0					
ANR	472417	Callee	file_error		472106	0					
ANR	472418	Identifier	file_error		472106	0					
ANR	472419	ArgumentList	ms		472106	1					
ANR	472420	Argument	ms		472106	0					
ANR	472421	Identifier	ms		472106	0					
ANR	472422	Argument	errno		472106	1					
ANR	472423	Identifier	errno		472106	0					
ANR	472424	Argument	"""could not fork"""		472106	2					
ANR	472425	PrimaryExpression	"""could not fork"""		472106	0					
ANR	472426	ReturnStatement	return NODATA ;	446:2:10656:10669	472106	46	True				
ANR	472427	Identifier	NODATA		472106	0					
ANR	472428	Label	default :	448:1:10673:10680	472106	47	True				
ANR	472429	Identifier	default		472106	0					
ANR	472430	ExpressionStatement	( void ) close ( fdout [ 1 ] )	449:2:10697:10719	472106	48	True				
ANR	472431	CastExpression	( void ) close ( fdout [ 1 ] )		472106	0					
ANR	472432	CastTarget	void		472106	0					
ANR	472433	CallExpression	close ( fdout [ 1 ] )		472106	1					
ANR	472434	Callee	close		472106	0					
ANR	472435	Identifier	close		472106	0					
ANR	472436	ArgumentList	fdout [ 1 ]		472106	1					
ANR	472437	Argument	fdout [ 1 ]		472106	0					
ANR	472438	ArrayIndexing	fdout [ 1 ]		472106	0					
ANR	472439	Identifier	fdout		472106	0					
ANR	472440	PrimaryExpression	1		472106	1					
ANR	472441	IfStatement	if ( fd == - 1 )		472106	49					
ANR	472442	Condition	fd == - 1	450:6:10727:10734	472106	0	True				
ANR	472443	EqualityExpression	fd == - 1		472106	0		==			
ANR	472444	Identifier	fd		472106	0					
ANR	472445	UnaryOperationExpression	- 1		472106	1					
ANR	472446	UnaryOperator	-		472106	0					
ANR	472447	PrimaryExpression	1		472106	1					
ANR	472448	CompoundStatement		53:16:1169:1169	472106	1					
ANR	472449	ExpressionStatement	( void ) close ( fdin [ 0 ] )	451:3:10742:10763	472106	0	True				
ANR	472450	CastExpression	( void ) close ( fdin [ 0 ] )		472106	0					
ANR	472451	CastTarget	void		472106	0					
ANR	472452	CallExpression	close ( fdin [ 0 ] )		472106	1					
ANR	472453	Callee	close		472106	0					
ANR	472454	Identifier	close		472106	0					
ANR	472455	ArgumentList	fdin [ 0 ]		472106	1					
ANR	472456	Argument	fdin [ 0 ]		472106	0					
ANR	472457	ArrayIndexing	fdin [ 0 ]		472106	0					
ANR	472458	Identifier	fdin		472106	0					
ANR	472459	PrimaryExpression	0		472106	1					
ANR	472460	SwitchStatement	switch ( fork ( ) )		472106	1					
ANR	472461	Condition	fork ( )	456:11:10858:10863	472106	0	True				
ANR	472462	CallExpression	fork ( )		472106	0					
ANR	472463	Callee	fork		472106	0					
ANR	472464	Identifier	fork		472106	0					
ANR	472465	ArgumentList			472106	1					
ANR	472466	CompoundStatement		59:19:1298:1298	472106	1					
ANR	472467	Label	case 0 :	457:3:10871:10877	472106	0	True				
ANR	472468	ExpressionStatement	( void ) close ( fdout [ 0 ] )	458:4:10895:10916	472106	1	True				
ANR	472469	CastExpression	( void ) close ( fdout [ 0 ] )		472106	0					
ANR	472470	CastTarget	void		472106	0					
ANR	472471	CallExpression	close ( fdout [ 0 ] )		472106	1					
ANR	472472	Callee	close		472106	0					
ANR	472473	Identifier	close		472106	0					
ANR	472474	ArgumentList	fdout [ 0 ]		472106	1					
ANR	472475	Argument	fdout [ 0 ]		472106	0					
ANR	472476	ArrayIndexing	fdout [ 0 ]		472106	0					
ANR	472477	Identifier	fdout		472106	0					
ANR	472478	PrimaryExpression	0		472106	1					
ANR	472479	IfStatement	"if ( swrite ( fdin [ 1 ] , old , n ) != ( ssize_t ) n )"		472106	2					
ANR	472480	Condition	"swrite ( fdin [ 1 ] , old , n ) != ( ssize_t ) n"	459:8:10926:10962	472106	0	True				
ANR	472481	EqualityExpression	"swrite ( fdin [ 1 ] , old , n ) != ( ssize_t ) n"		472106	0		!=			
ANR	472482	CallExpression	"swrite ( fdin [ 1 ] , old , n )"		472106	0					
ANR	472483	Callee	swrite		472106	0					
ANR	472484	Identifier	swrite		472106	0					
ANR	472485	ArgumentList	fdin [ 1 ]		472106	1					
ANR	472486	Argument	fdin [ 1 ]		472106	0					
ANR	472487	ArrayIndexing	fdin [ 1 ]		472106	0					
ANR	472488	Identifier	fdin		472106	0					
ANR	472489	PrimaryExpression	1		472106	1					
ANR	472490	Argument	old		472106	1					
ANR	472491	Identifier	old		472106	0					
ANR	472492	Argument	n		472106	2					
ANR	472493	Identifier	n		472106	0					
ANR	472494	CastExpression	( ssize_t ) n		472106	1					
ANR	472495	CastTarget	ssize_t		472106	0					
ANR	472496	Identifier	n		472106	1					
ANR	472497	CompoundStatement		62:47:1397:1397	472106	1					
ANR	472498	ExpressionStatement	"( void ) fprintf ( stderr , ""Write failed (%s)\\n"" , strerror ( errno ) )"	461:5:10985:11064	472106	0	True				
ANR	472499	CastExpression	"( void ) fprintf ( stderr , ""Write failed (%s)\\n"" , strerror ( errno ) )"		472106	0					
ANR	472500	CastTarget	void		472106	0					
ANR	472501	CallExpression	"fprintf ( stderr , ""Write failed (%s)\\n"" , strerror ( errno ) )"		472106	1					
ANR	472502	Callee	fprintf		472106	0					
ANR	472503	Identifier	fprintf		472106	0					
ANR	472504	ArgumentList	stderr		472106	1					
ANR	472505	Argument	stderr		472106	0					
ANR	472506	Identifier	stderr		472106	0					
ANR	472507	Argument	"""Write failed (%s)\\n"""		472106	1					
ANR	472508	PrimaryExpression	"""Write failed (%s)\\n"""		472106	0					
ANR	472509	Argument	strerror ( errno )		472106	2					
ANR	472510	CallExpression	strerror ( errno )		472106	0					
ANR	472511	Callee	strerror		472106	0					
ANR	472512	Identifier	strerror		472106	0					
ANR	472513	ArgumentList	errno		472106	1					
ANR	472514	Argument	errno		472106	0					
ANR	472515	Identifier	errno		472106	0					
ANR	472516	ExpressionStatement	exit ( 1 )	465:5:11078:11085	472106	1	True				
ANR	472517	CallExpression	exit ( 1 )		472106	0					
ANR	472518	Callee	exit		472106	0					
ANR	472519	Identifier	exit		472106	0					
ANR	472520	ArgumentList	1		472106	1					
ANR	472521	Argument	1		472106	0					
ANR	472522	PrimaryExpression	1		472106	0					
ANR	472523	ExpressionStatement	exit ( 0 )	467:4:11097:11104	472106	3	True				
ANR	472524	CallExpression	exit ( 0 )		472106	0					
ANR	472525	Callee	exit		472106	0					
ANR	472526	Identifier	exit		472106	0					
ANR	472527	ArgumentList	0		472106	1					
ANR	472528	Argument	0		472106	0					
ANR	472529	PrimaryExpression	0		472106	0					
ANR	472530	Statement	case	470:3:11129:11132	472106	4	True				
ANR	472531	Statement	-	470:8:11134:11134	472106	5	True				
ANR	472532	Label	1 :	470:9:11135:11136	472106	6	True				
ANR	472533	ExpressionStatement	"( void ) fprintf ( stderr , ""Fork failed (%s)\\n"" , strerror ( errno ) )"	472:4:11155:11223	472106	7	True				
ANR	472534	CastExpression	"( void ) fprintf ( stderr , ""Fork failed (%s)\\n"" , strerror ( errno ) )"		472106	0					
ANR	472535	CastTarget	void		472106	0					
ANR	472536	CallExpression	"fprintf ( stderr , ""Fork failed (%s)\\n"" , strerror ( errno ) )"		472106	1					
ANR	472537	Callee	fprintf		472106	0					
ANR	472538	Identifier	fprintf		472106	0					
ANR	472539	ArgumentList	stderr		472106	1					
ANR	472540	Argument	stderr		472106	0					
ANR	472541	Identifier	stderr		472106	0					
ANR	472542	Argument	"""Fork failed (%s)\\n"""		472106	1					
ANR	472543	PrimaryExpression	"""Fork failed (%s)\\n"""		472106	0					
ANR	472544	Argument	strerror ( errno )		472106	2					
ANR	472545	CallExpression	strerror ( errno )		472106	0					
ANR	472546	Callee	strerror		472106	0					
ANR	472547	Identifier	strerror		472106	0					
ANR	472548	ArgumentList	errno		472106	1					
ANR	472549	Argument	errno		472106	0					
ANR	472550	Identifier	errno		472106	0					
ANR	472551	ExpressionStatement	exit ( 1 )	475:4:11236:11243	472106	8	True				
ANR	472552	CallExpression	exit ( 1 )		472106	0					
ANR	472553	Callee	exit		472106	0					
ANR	472554	Identifier	exit		472106	0					
ANR	472555	ArgumentList	1		472106	1					
ANR	472556	Argument	1		472106	0					
ANR	472557	PrimaryExpression	1		472106	0					
ANR	472558	Label	default :	478:3:11268:11275	472106	9	True				
ANR	472559	Identifier	default		472106	0					
ANR	472560	BreakStatement	break ;	479:4:11295:11300	472106	10	True				
ANR	472561	ExpressionStatement	( void ) close ( fdin [ 1 ] )	481:3:11310:11331	472106	2	True				
ANR	472562	CastExpression	( void ) close ( fdin [ 1 ] )		472106	0					
ANR	472563	CastTarget	void		472106	0					
ANR	472564	CallExpression	close ( fdin [ 1 ] )		472106	1					
ANR	472565	Callee	close		472106	0					
ANR	472566	Identifier	close		472106	0					
ANR	472567	ArgumentList	fdin [ 1 ]		472106	1					
ANR	472568	Argument	fdin [ 1 ]		472106	0					
ANR	472569	ArrayIndexing	fdin [ 1 ]		472106	0					
ANR	472570	Identifier	fdin		472106	0					
ANR	472571	PrimaryExpression	1		472106	1					
ANR	472572	ExpressionStatement	fdin [ 1 ] = - 1	482:3:11336:11348	472106	3	True				
ANR	472573	AssignmentExpression	fdin [ 1 ] = - 1		472106	0		=			
ANR	472574	ArrayIndexing	fdin [ 1 ]		472106	0					
ANR	472575	Identifier	fdin		472106	0					
ANR	472576	PrimaryExpression	1		472106	1					
ANR	472577	UnaryOperationExpression	- 1		472106	1					
ANR	472578	UnaryOperator	-		472106	0					
ANR	472579	PrimaryExpression	1		472106	1					
ANR	472580	ExpressionStatement	* newch = ( unsigned char * ) emalloc ( HOWMANY + 1 )	485:2:11357:11404	472106	50	True				
ANR	472581	AssignmentExpression	* newch = ( unsigned char * ) emalloc ( HOWMANY + 1 )		472106	0		=			
ANR	472582	UnaryOperationExpression	* newch		472106	0					
ANR	472583	UnaryOperator	*		472106	0					
ANR	472584	Identifier	newch		472106	1					
ANR	472585	CastExpression	( unsigned char * ) emalloc ( HOWMANY + 1 )		472106	1					
ANR	472586	CastTarget	unsigned char *		472106	0					
ANR	472587	CallExpression	emalloc ( HOWMANY + 1 )		472106	1					
ANR	472588	Callee	emalloc		472106	0					
ANR	472589	Identifier	emalloc		472106	0					
ANR	472590	ArgumentList	HOWMANY + 1		472106	1					
ANR	472591	Argument	HOWMANY + 1		472106	0					
ANR	472592	AdditiveExpression	HOWMANY + 1		472106	0		+			
ANR	472593	Identifier	HOWMANY		472106	0					
ANR	472594	PrimaryExpression	1		472106	1					
ANR	472595	IfStatement	"if ( ( r = sread ( fdout [ 0 ] , * newch , HOWMANY , 0 ) ) <= 0 )"		472106	51					
ANR	472596	Condition	"( r = sread ( fdout [ 0 ] , * newch , HOWMANY , 0 ) ) <= 0"	487:6:11413:11458	472106	0	True				
ANR	472597	RelationalExpression	"( r = sread ( fdout [ 0 ] , * newch , HOWMANY , 0 ) ) <= 0"		472106	0		<=			
ANR	472598	AssignmentExpression	"r = sread ( fdout [ 0 ] , * newch , HOWMANY , 0 )"		472106	0		=			
ANR	472599	Identifier	r		472106	0					
ANR	472600	CallExpression	"sread ( fdout [ 0 ] , * newch , HOWMANY , 0 )"		472106	1					
ANR	472601	Callee	sread		472106	0					
ANR	472602	Identifier	sread		472106	0					
ANR	472603	ArgumentList	fdout [ 0 ]		472106	1					
ANR	472604	Argument	fdout [ 0 ]		472106	0					
ANR	472605	ArrayIndexing	fdout [ 0 ]		472106	0					
ANR	472606	Identifier	fdout		472106	0					
ANR	472607	PrimaryExpression	0		472106	1					
ANR	472608	Argument	* newch		472106	1					
ANR	472609	UnaryOperationExpression	* newch		472106	0					
ANR	472610	UnaryOperator	*		472106	0					
ANR	472611	Identifier	newch		472106	1					
ANR	472612	Argument	HOWMANY		472106	2					
ANR	472613	Identifier	HOWMANY		472106	0					
ANR	472614	Argument	0		472106	3					
ANR	472615	PrimaryExpression	0		472106	0					
ANR	472616	PrimaryExpression	0		472106	1					
ANR	472617	CompoundStatement		90:54:1893:1893	472106	1					
ANR	472618	ExpressionStatement	"( void ) fprintf ( stderr , ""Read failed (%s)\\n"" , strerror ( errno ) )"	489:3:11479:11546	472106	0	True				
ANR	472619	CastExpression	"( void ) fprintf ( stderr , ""Read failed (%s)\\n"" , strerror ( errno ) )"		472106	0					
ANR	472620	CastTarget	void		472106	0					
ANR	472621	CallExpression	"fprintf ( stderr , ""Read failed (%s)\\n"" , strerror ( errno ) )"		472106	1					
ANR	472622	Callee	fprintf		472106	0					
ANR	472623	Identifier	fprintf		472106	0					
ANR	472624	ArgumentList	stderr		472106	1					
ANR	472625	Argument	stderr		472106	0					
ANR	472626	Identifier	stderr		472106	0					
ANR	472627	Argument	"""Read failed (%s)\\n"""		472106	1					
ANR	472628	PrimaryExpression	"""Read failed (%s)\\n"""		472106	0					
ANR	472629	Argument	strerror ( errno )		472106	2					
ANR	472630	CallExpression	strerror ( errno )		472106	0					
ANR	472631	Callee	strerror		472106	0					
ANR	472632	Identifier	strerror		472106	0					
ANR	472633	ArgumentList	errno		472106	1					
ANR	472634	Argument	errno		472106	0					
ANR	472635	Identifier	errno		472106	0					
ANR	472636	ExpressionStatement	efree ( * newch )	492:3:11558:11571	472106	1	True				
ANR	472637	CallExpression	efree ( * newch )		472106	0					
ANR	472638	Callee	efree		472106	0					
ANR	472639	Identifier	efree		472106	0					
ANR	472640	ArgumentList	* newch		472106	1					
ANR	472641	Argument	* newch		472106	0					
ANR	472642	UnaryOperationExpression	* newch		472106	0					
ANR	472643	UnaryOperator	*		472106	0					
ANR	472644	Identifier	newch		472106	1					
ANR	472645	Statement	n	493:3:11576:11576	472106	2	True				
ANR	472646	Statement	=	493:5:11578:11578	472106	3	True				
ANR	472647	Statement	NODATA	493:7:11580:11585	472106	4	True				
ANR	472648	Statement	-	493:13:11586:11586	472106	5	True				
ANR	472649	ExpressionStatement		493:14:11587:11587	472106	6	True				
ANR	472650	ExpressionStatement	* newch = NULL	494:3:11592:11605	472106	7	True				
ANR	472651	AssignmentExpression	* newch = NULL		472106	0		=			
ANR	472652	UnaryOperationExpression	* newch		472106	0					
ANR	472653	UnaryOperator	*		472106	0					
ANR	472654	Identifier	newch		472106	1					
ANR	472655	Identifier	NULL		472106	1					
ANR	472656	GotoStatement	goto err ;	495:3:11610:11618	472106	8	True				
ANR	472657	Identifier	err		472106	0					
ANR	472658	ElseStatement	else		472106	0					
ANR	472659	CompoundStatement		99:9:2061:2061	472106	0					
ANR	472660	ExpressionStatement	n = r	497:3:11634:11639	472106	0	True				
ANR	472661	AssignmentExpression	n = r		472106	0		=			
ANR	472662	Identifier	n		472106	0					
ANR	472663	Identifier	r		472106	1					
ANR	472664	ExpressionStatement	( * newch ) [ n ] = '\\0'	500:3:11705:11723	472106	52	True				
ANR	472665	AssignmentExpression	( * newch ) [ n ] = '\\0'		472106	0		=			
ANR	472666	ArrayIndexing	( * newch ) [ n ]		472106	0					
ANR	472667	UnaryOperationExpression	* newch		472106	0					
ANR	472668	UnaryOperator	*		472106	0					
ANR	472669	Identifier	newch		472106	1					
ANR	472670	Identifier	n		472106	1					
ANR	472671	PrimaryExpression	'\\0'		472106	1					
ANR	472672	Label	err :	501:0:11725:11728	472106	53	True				
ANR	472673	Identifier	err		472106	0					
ANR	472674	IfStatement	if ( fdin [ 1 ] != - 1 )		472106	54					
ANR	472675	Condition	fdin [ 1 ] != - 1	502:6:11736:11748	472106	0	True				
ANR	472676	EqualityExpression	fdin [ 1 ] != - 1		472106	0		!=			
ANR	472677	ArrayIndexing	fdin [ 1 ]		472106	0					
ANR	472678	Identifier	fdin		472106	0					
ANR	472679	PrimaryExpression	1		472106	1					
ANR	472680	UnaryOperationExpression	- 1		472106	1					
ANR	472681	UnaryOperator	-		472106	0					
ANR	472682	PrimaryExpression	1		472106	1					
ANR	472683	ExpressionStatement	( void ) close ( fdin [ 1 ] )	503:3:11754:11775	472106	1	True				
ANR	472684	CastExpression	( void ) close ( fdin [ 1 ] )		472106	0					
ANR	472685	CastTarget	void		472106	0					
ANR	472686	CallExpression	close ( fdin [ 1 ] )		472106	1					
ANR	472687	Callee	close		472106	0					
ANR	472688	Identifier	close		472106	0					
ANR	472689	ArgumentList	fdin [ 1 ]		472106	1					
ANR	472690	Argument	fdin [ 1 ]		472106	0					
ANR	472691	ArrayIndexing	fdin [ 1 ]		472106	0					
ANR	472692	Identifier	fdin		472106	0					
ANR	472693	PrimaryExpression	1		472106	1					
ANR	472694	ExpressionStatement	( void ) close ( fdout [ 0 ] )	504:2:11779:11801	472106	55	True				
ANR	472695	CastExpression	( void ) close ( fdout [ 0 ] )		472106	0					
ANR	472696	CastTarget	void		472106	0					
ANR	472697	CallExpression	close ( fdout [ 0 ] )		472106	1					
ANR	472698	Callee	close		472106	0					
ANR	472699	Identifier	close		472106	0					
ANR	472700	ArgumentList	fdout [ 0 ]		472106	1					
ANR	472701	Argument	fdout [ 0 ]		472106	0					
ANR	472702	ArrayIndexing	fdout [ 0 ]		472106	0					
ANR	472703	Identifier	fdout		472106	0					
ANR	472704	PrimaryExpression	0		472106	1					
ANR	472705	WhileStatement	"while ( waitpid ( pid , NULL , WNOHANG ) != - 1 )"		472106	56					
ANR	472706	Condition	"waitpid ( pid , NULL , WNOHANG ) != - 1"	506:9:11827:11859	472106	0	True				
ANR	472707	EqualityExpression	"waitpid ( pid , NULL , WNOHANG ) != - 1"		472106	0		!=			
ANR	472708	CallExpression	"waitpid ( pid , NULL , WNOHANG )"		472106	0					
ANR	472709	Callee	waitpid		472106	0					
ANR	472710	Identifier	waitpid		472106	0					
ANR	472711	ArgumentList	pid		472106	1					
ANR	472712	Argument	pid		472106	0					
ANR	472713	Identifier	pid		472106	0					
ANR	472714	Argument	NULL		472106	1					
ANR	472715	Identifier	NULL		472106	0					
ANR	472716	Argument	WNOHANG		472106	2					
ANR	472717	Identifier	WNOHANG		472106	0					
ANR	472718	UnaryOperationExpression	- 1		472106	1					
ANR	472719	UnaryOperator	-		472106	0					
ANR	472720	PrimaryExpression	1		472106	1					
ANR	472721	ContinueStatement	continue ;	507:3:11865:11873	472106	1	True				
ANR	472722	ExpressionStatement	( void ) close ( fdin [ 0 ] )	512:2:11911:11932	472106	57	True				
ANR	472723	CastExpression	( void ) close ( fdin [ 0 ] )		472106	0					
ANR	472724	CastTarget	void		472106	0					
ANR	472725	CallExpression	close ( fdin [ 0 ] )		472106	1					
ANR	472726	Callee	close		472106	0					
ANR	472727	Identifier	close		472106	0					
ANR	472728	ArgumentList	fdin [ 0 ]		472106	1					
ANR	472729	Argument	fdin [ 0 ]		472106	0					
ANR	472730	ArrayIndexing	fdin [ 0 ]		472106	0					
ANR	472731	Identifier	fdin		472106	0					
ANR	472732	PrimaryExpression	0		472106	1					
ANR	472733	ReturnStatement	return n ;	514:2:11942:11950	472106	58	True				
ANR	472734	Identifier	n		472106	0					
ANR	472735	ReturnType	size_t		472106	1					
ANR	472736	Identifier	uncompressbuf		472106	2					
ANR	472737	ParameterList	"struct magic_set * ms , int fd , size_t method , const unsigned char * old , unsigned char * * newch , size_t n"		472106	3					
ANR	472738	Parameter	struct magic_set * ms	396:14:9459:9478	472106	0	True				
ANR	472739	ParameterType	struct magic_set *		472106	0					
ANR	472740	Identifier	ms		472106	1					
ANR	472741	Parameter	int fd	396:36:9481:9486	472106	1	True				
ANR	472742	ParameterType	int		472106	0					
ANR	472743	Identifier	fd		472106	1					
ANR	472744	Parameter	size_t method	396:44:9489:9501	472106	2	True				
ANR	472745	ParameterType	size_t		472106	0					
ANR	472746	Identifier	method		472106	1					
ANR	472747	Parameter	const unsigned char * old	397:4:9508:9531	472106	3	True				
ANR	472748	ParameterType	const unsigned char *		472106	0					
ANR	472749	Identifier	old		472106	1					
ANR	472750	Parameter	unsigned char * * newch	397:30:9534:9554	472106	4	True				
ANR	472751	ParameterType	unsigned char * *		472106	0					
ANR	472752	Identifier	newch		472106	1					
ANR	472753	Parameter	size_t n	397:53:9557:9564	472106	5	True				
ANR	472754	ParameterType	size_t		472106	0					
ANR	472755	Identifier	n		472106	1					
ANR	472756	CFGEntryNode	ENTRY		472106		True				
ANR	472757	CFGExitNode	EXIT		472106		True				
ANR	472758	Symbol	uncompressgzipped		472106						
ANR	472759	Symbol	sread		472106						
ANR	472760	Symbol	stdout		472106						
ANR	472761	Symbol	compr [ method ] . argv		472106						
ANR	472762	Symbol	* fdin		472106						
ANR	472763	Symbol	* compr		472106						
ANR	472764	Symbol	pid		472106						
ANR	472765	Symbol	fdin		472106						
ANR	472766	Symbol	* newch		472106						
ANR	472767	Symbol	emalloc		472106						
ANR	472768	Symbol	* * method		472106						
ANR	472769	Symbol	WNOHANG		472106						
ANR	472770	Symbol	pipe		472106						
ANR	472771	Symbol	fdout		472106						
ANR	472772	Symbol	SEEK_SET		472106						
ANR	472773	Symbol	errno		472106						
ANR	472774	Symbol	NULL		472106						
ANR	472775	Symbol	method		472106						
ANR	472776	Symbol	compr		472106						
ANR	472777	Symbol	ms		472106						
ANR	472778	Symbol	old		472106						
ANR	472779	Symbol	compr [ method ] . silent		472106						
ANR	472780	Symbol	* * newch		472106						
ANR	472781	Symbol	* method		472106						
ANR	472782	Symbol	stderr		472106						
ANR	472783	Symbol	n		472106						
ANR	472784	Symbol	* compr [ method ] . argv		472106						
ANR	472785	Symbol	strerror		472106						
ANR	472786	Symbol	* * compr		472106						
ANR	472787	Symbol	r		472106						
ANR	472788	Symbol	fork		472106						
ANR	472789	Symbol	HOWMANY		472106						
ANR	472790	Symbol	swrite		472106						
ANR	472791	Symbol	* fdout		472106						
ANR	472792	Symbol	newch		472106						
ANR	472793	Symbol	NODATA		472106						
ANR	472794	Symbol	* n		472106						
ANR	472795	Symbol	fd		472106						
ANR	472796	Symbol	status		472106						
ANR	472797	Symbol	waitpid		472106						
