command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	900978	File	data/converged/CVE-2015-8617_php-src/ext_gd_libgd_gdkanji.c								
ANR	900979	Function	debug	58:0:996:1220							
ANR	900980	FunctionDef	debug (const char * format)		900979	0					
ANR	900981	CompoundStatement		60:0:1039:1220	900979	0					
ANR	900982	IdentifierDeclStatement	va_list args ;	62:2:1056:1068	900979	0	True				
ANR	900983	IdentifierDecl	args		900979	0					
ANR	900984	IdentifierDeclType	va_list		900979	0					
ANR	900985	Identifier	args		900979	1					
ANR	900986	ExpressionStatement	"va_start ( args , format )"	64:2:1073:1096	900979	1	True				
ANR	900987	CallExpression	"va_start ( args , format )"		900979	0					
ANR	900988	Callee	va_start		900979	0					
ANR	900989	Identifier	va_start		900979	0					
ANR	900990	ArgumentList	args		900979	1					
ANR	900991	Argument	args		900979	0					
ANR	900992	Identifier	args		900979	0					
ANR	900993	Argument	format		900979	1					
ANR	900994	Identifier	format		900979	0					
ANR	900995	ExpressionStatement	"fprintf ( stdout , ""%s: "" , LIBNAME )"	65:2:1100:1133	900979	2	True				
ANR	900996	CallExpression	"fprintf ( stdout , ""%s: "" , LIBNAME )"		900979	0					
ANR	900997	Callee	fprintf		900979	0					
ANR	900998	Identifier	fprintf		900979	0					
ANR	900999	ArgumentList	stdout		900979	1					
ANR	901000	Argument	stdout		900979	0					
ANR	901001	Identifier	stdout		900979	0					
ANR	901002	Argument	"""%s: """		900979	1					
ANR	901003	PrimaryExpression	"""%s: """		900979	0					
ANR	901004	Argument	LIBNAME		900979	2					
ANR	901005	Identifier	LIBNAME		900979	0					
ANR	901006	ExpressionStatement	"vfprintf ( stdout , format , args )"	66:2:1137:1168	900979	3	True				
ANR	901007	CallExpression	"vfprintf ( stdout , format , args )"		900979	0					
ANR	901008	Callee	vfprintf		900979	0					
ANR	901009	Identifier	vfprintf		900979	0					
ANR	901010	ArgumentList	stdout		900979	1					
ANR	901011	Argument	stdout		900979	0					
ANR	901012	Identifier	stdout		900979	0					
ANR	901013	Argument	format		900979	1					
ANR	901014	Identifier	format		900979	0					
ANR	901015	Argument	args		900979	2					
ANR	901016	Identifier	args		900979	0					
ANR	901017	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	67:2:1172:1194	900979	4	True				
ANR	901018	CallExpression	"fprintf ( stdout , ""\\n"" )"		900979	0					
ANR	901019	Callee	fprintf		900979	0					
ANR	901020	Identifier	fprintf		900979	0					
ANR	901021	ArgumentList	stdout		900979	1					
ANR	901022	Argument	stdout		900979	0					
ANR	901023	Identifier	stdout		900979	0					
ANR	901024	Argument	"""\\n"""		900979	1					
ANR	901025	PrimaryExpression	"""\\n"""		900979	0					
ANR	901026	ExpressionStatement	va_end ( args )	68:2:1198:1211	900979	5	True				
ANR	901027	CallExpression	va_end ( args )		900979	0					
ANR	901028	Callee	va_end		900979	0					
ANR	901029	Identifier	va_end		900979	0					
ANR	901030	ArgumentList	args		900979	1					
ANR	901031	Argument	args		900979	0					
ANR	901032	Identifier	args		900979	0					
ANR	901033	ReturnType	static void		900979	1					
ANR	901034	Identifier	debug		900979	2					
ANR	901035	ParameterList	const char * format		900979	3					
ANR	901036	Parameter	const char * format	59:7:1015:1032	900979	0	True				
ANR	901037	ParameterType	const char *		900979	0					
ANR	901038	Identifier	format		900979	1					
ANR	901039	CFGEntryNode	ENTRY		900979		True				
ANR	901040	CFGExitNode	EXIT		900979		True				
ANR	901041	Symbol	args		900979						
ANR	901042	Symbol	LIBNAME		900979						
ANR	901043	Symbol	stdout		900979						
ANR	901044	Symbol	format		900979						
ANR	901045	Function	error	72:0:1223:1444							
ANR	901046	FunctionDef	error (const char * format)		901045	0					
ANR	901047	CompoundStatement		74:0:1266:1444	901045	0					
ANR	901048	IdentifierDeclStatement	va_list args ;	75:1:1269:1281	901045	0	True				
ANR	901049	IdentifierDecl	args		901045	0					
ANR	901050	IdentifierDeclType	va_list		901045	0					
ANR	901051	Identifier	args		901045	1					
ANR	901052	IdentifierDeclStatement	char * tmp ;	76:1:1284:1293	901045	1	True				
ANR	901053	IdentifierDecl	* tmp		901045	0					
ANR	901054	IdentifierDeclType	char *		901045	0					
ANR	901055	Identifier	tmp		901045	1					
ANR	901056	ExpressionStatement	"va_start ( args , format )"	78:1:1297:1319	901045	2	True				
ANR	901057	CallExpression	"va_start ( args , format )"		901045	0					
ANR	901058	Callee	va_start		901045	0					
ANR	901059	Identifier	va_start		901045	0					
ANR	901060	ArgumentList	args		901045	1					
ANR	901061	Argument	args		901045	0					
ANR	901062	Identifier	args		901045	0					
ANR	901063	Argument	format		901045	1					
ANR	901064	Identifier	format		901045	0					
ANR	901065	ExpressionStatement	"vspprintf ( & tmp , 0 , format , args )"	79:1:1322:1354	901045	3	True				
ANR	901066	CallExpression	"vspprintf ( & tmp , 0 , format , args )"		901045	0					
ANR	901067	Callee	vspprintf		901045	0					
ANR	901068	Identifier	vspprintf		901045	0					
ANR	901069	ArgumentList	& tmp		901045	1					
ANR	901070	Argument	& tmp		901045	0					
ANR	901071	UnaryOperationExpression	& tmp		901045	0					
ANR	901072	UnaryOperator	&		901045	0					
ANR	901073	Identifier	tmp		901045	1					
ANR	901074	Argument	0		901045	1					
ANR	901075	PrimaryExpression	0		901045	0					
ANR	901076	Argument	format		901045	2					
ANR	901077	Identifier	format		901045	0					
ANR	901078	Argument	args		901045	3					
ANR	901079	Identifier	args		901045	0					
ANR	901080	ExpressionStatement	va_end ( args )	80:1:1357:1369	901045	4	True				
ANR	901081	CallExpression	va_end ( args )		901045	0					
ANR	901082	Callee	va_end		901045	0					
ANR	901083	Identifier	va_end		901045	0					
ANR	901084	ArgumentList	args		901045	1					
ANR	901085	Argument	args		901045	0					
ANR	901086	Identifier	args		901045	0					
ANR	901087	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""%s: %s"" , LIBNAME , tmp )"	81:1:1372:1429	901045	5	True				
ANR	901088	CallExpression	"php_error_docref ( NULL , E_WARNING , ""%s: %s"" , LIBNAME , tmp )"		901045	0					
ANR	901089	Callee	php_error_docref		901045	0					
ANR	901090	Identifier	php_error_docref		901045	0					
ANR	901091	ArgumentList	NULL		901045	1					
ANR	901092	Argument	NULL		901045	0					
ANR	901093	Identifier	NULL		901045	0					
ANR	901094	Argument	E_WARNING		901045	1					
ANR	901095	Identifier	E_WARNING		901045	0					
ANR	901096	Argument	"""%s: %s"""		901045	2					
ANR	901097	PrimaryExpression	"""%s: %s"""		901045	0					
ANR	901098	Argument	LIBNAME		901045	3					
ANR	901099	Identifier	LIBNAME		901045	0					
ANR	901100	Argument	tmp		901045	4					
ANR	901101	Identifier	tmp		901045	0					
ANR	901102	ExpressionStatement	efree ( tmp )	82:1:1432:1442	901045	6	True				
ANR	901103	CallExpression	efree ( tmp )		901045	0					
ANR	901104	Callee	efree		901045	0					
ANR	901105	Identifier	efree		901045	0					
ANR	901106	ArgumentList	tmp		901045	1					
ANR	901107	Argument	tmp		901045	0					
ANR	901108	Identifier	tmp		901045	0					
ANR	901109	ReturnType	static void		901045	1					
ANR	901110	Identifier	error		901045	2					
ANR	901111	ParameterList	const char * format		901045	3					
ANR	901112	Parameter	const char * format	73:7:1242:1259	901045	0	True				
ANR	901113	ParameterType	const char *		901045	0					
ANR	901114	Identifier	format		901045	1					
ANR	901115	CFGEntryNode	ENTRY		901045		True				
ANR	901116	CFGExitNode	EXIT		901045		True				
ANR	901117	Symbol	args		901045						
ANR	901118	Symbol	E_WARNING		901045						
ANR	901119	Symbol	LIBNAME		901045						
ANR	901120	Symbol	NULL		901045						
ANR	901121	Symbol	tmp		901045						
ANR	901122	Symbol	format		901045						
ANR	901123	Symbol	& tmp		901045						
ANR	901124	Function	DetectKanjiCode	87:0:1516:4390							
ANR	901125	FunctionDef	DetectKanjiCode (unsigned char * str)		901124	0					
ANR	901126	CompoundStatement		89:0:1564:4390	901124	0					
ANR	901127	Statement	static	90:2:1568:1573	901124	0	True				
ANR	901128	IdentifierDeclStatement	int whatcode = ASCII ;	90:9:1575:1595	901124	1	True				
ANR	901129	IdentifierDecl	whatcode = ASCII		901124	0					
ANR	901130	IdentifierDeclType	int		901124	0					
ANR	901131	Identifier	whatcode		901124	1					
ANR	901132	AssignmentExpression	whatcode = ASCII		901124	2		=			
ANR	901133	Identifier	ASCII		901124	0					
ANR	901134	Identifier	ASCII		901124	1					
ANR	901135	IdentifierDeclStatement	int oldcode = ASCII ;	91:2:1599:1618	901124	2	True				
ANR	901136	IdentifierDecl	oldcode = ASCII		901124	0					
ANR	901137	IdentifierDeclType	int		901124	0					
ANR	901138	Identifier	oldcode		901124	1					
ANR	901139	AssignmentExpression	oldcode = ASCII		901124	2		=			
ANR	901140	Identifier	ASCII		901124	0					
ANR	901141	Identifier	ASCII		901124	1					
ANR	901142	IdentifierDeclStatement	"int c , i ;"	92:2:1622:1630	901124	3	True				
ANR	901143	IdentifierDecl	c		901124	0					
ANR	901144	IdentifierDeclType	int		901124	0					
ANR	901145	Identifier	c		901124	1					
ANR	901146	IdentifierDecl	i		901124	1					
ANR	901147	IdentifierDeclType	int		901124	0					
ANR	901148	Identifier	i		901124	1					
ANR	901149	IdentifierDeclStatement	char * lang = NULL ;	93:2:1634:1651	901124	4	True				
ANR	901150	IdentifierDecl	* lang = NULL		901124	0					
ANR	901151	IdentifierDeclType	char *		901124	0					
ANR	901152	Identifier	lang		901124	1					
ANR	901153	AssignmentExpression	* lang = NULL		901124	2		=			
ANR	901154	Identifier	NULL		901124	0					
ANR	901155	Identifier	NULL		901124	1					
ANR	901156	ExpressionStatement	c = '\\1'	95:2:1656:1664	901124	5	True				
ANR	901157	AssignmentExpression	c = '\\1'		901124	0		=			
ANR	901158	Identifier	c		901124	0					
ANR	901159	PrimaryExpression	'\\1'		901124	1					
ANR	901160	ExpressionStatement	i = 0	96:2:1668:1673	901124	6	True				
ANR	901161	AssignmentExpression	i = 0		901124	0		=			
ANR	901162	Identifier	i		901124	0					
ANR	901163	PrimaryExpression	0		901124	1					
ANR	901164	IfStatement	if ( whatcode != EUCORSJIS && whatcode != ASCII )		901124	7					
ANR	901165	Condition	whatcode != EUCORSJIS && whatcode != ASCII	98:6:1682:1723	901124	0	True				
ANR	901166	AndExpression	whatcode != EUCORSJIS && whatcode != ASCII		901124	0		&&			
ANR	901167	EqualityExpression	whatcode != EUCORSJIS		901124	0		!=			
ANR	901168	Identifier	whatcode		901124	0					
ANR	901169	Identifier	EUCORSJIS		901124	1					
ANR	901170	EqualityExpression	whatcode != ASCII		901124	1		!=			
ANR	901171	Identifier	whatcode		901124	0					
ANR	901172	Identifier	ASCII		901124	1					
ANR	901173	CompoundStatement		11:4:165:165	901124	1					
ANR	901174	ExpressionStatement	oldcode = whatcode	100:6:1738:1756	901124	0	True				
ANR	901175	AssignmentExpression	oldcode = whatcode		901124	0		=			
ANR	901176	Identifier	oldcode		901124	0					
ANR	901177	Identifier	whatcode		901124	1					
ANR	901178	ExpressionStatement	whatcode = ASCII	101:6:1764:1780	901124	1	True				
ANR	901179	AssignmentExpression	whatcode = ASCII		901124	0		=			
ANR	901180	Identifier	whatcode		901124	0					
ANR	901181	Identifier	ASCII		901124	1					
ANR	901182	WhileStatement	while ( ( whatcode == EUCORSJIS || whatcode == ASCII ) && c != '\\0' )		901124	8					
ANR	901183	Condition	( whatcode == EUCORSJIS || whatcode == ASCII ) && c != '\\0'	104:9:1798:1854	901124	0	True				
ANR	901184	AndExpression	( whatcode == EUCORSJIS || whatcode == ASCII ) && c != '\\0'		901124	0		&&			
ANR	901185	OrExpression	whatcode == EUCORSJIS || whatcode == ASCII		901124	0		||			
ANR	901186	EqualityExpression	whatcode == EUCORSJIS		901124	0		==			
ANR	901187	Identifier	whatcode		901124	0					
ANR	901188	Identifier	EUCORSJIS		901124	1					
ANR	901189	EqualityExpression	whatcode == ASCII		901124	1		==			
ANR	901190	Identifier	whatcode		901124	0					
ANR	901191	Identifier	ASCII		901124	1					
ANR	901192	EqualityExpression	c != '\\0'		901124	1		!=			
ANR	901193	Identifier	c		901124	0					
ANR	901194	PrimaryExpression	'\\0'		901124	1					
ANR	901195	CompoundStatement		17:4:296:296	901124	1					
ANR	901196	IfStatement	if ( ( c = str [ i ++ ] ) != '\\0' )		901124	0					
ANR	901197	Condition	( c = str [ i ++ ] ) != '\\0'	106:10:1873:1894	901124	0	True				
ANR	901198	EqualityExpression	( c = str [ i ++ ] ) != '\\0'		901124	0		!=			
ANR	901199	AssignmentExpression	c = str [ i ++ ]		901124	0		=			
ANR	901200	Identifier	c		901124	0					
ANR	901201	ArrayIndexing	str [ i ++ ]		901124	1					
ANR	901202	Identifier	str		901124	0					
ANR	901203	PostIncDecOperationExpression	i ++		901124	1					
ANR	901204	Identifier	i		901124	0					
ANR	901205	IncDec	++		901124	1					
ANR	901206	PrimaryExpression	'\\0'		901124	1					
ANR	901207	CompoundStatement		19:1:333:333	901124	1					
ANR	901208	IfStatement	if ( c == ESC )		901124	0					
ANR	901209	Condition	c == ESC	108:7:1907:1914	901124	0	True				
ANR	901210	EqualityExpression	c == ESC		901124	0		==			
ANR	901211	Identifier	c		901124	0					
ANR	901212	Identifier	ESC		901124	1					
ANR	901213	CompoundStatement		21:5:357:357	901124	1					
ANR	901214	ExpressionStatement	c = str [ i ++ ]	110:7:1931:1943	901124	0	True				
ANR	901215	AssignmentExpression	c = str [ i ++ ]		901124	0		=			
ANR	901216	Identifier	c		901124	0					
ANR	901217	ArrayIndexing	str [ i ++ ]		901124	1					
ANR	901218	Identifier	str		901124	0					
ANR	901219	PostIncDecOperationExpression	i ++		901124	1					
ANR	901220	Identifier	i		901124	0					
ANR	901221	IncDec	++		901124	1					
ANR	901222	IfStatement	if ( c == '$' )		901124	1					
ANR	901223	Condition	c == '$'	111:11:1956:1963	901124	0	True				
ANR	901224	EqualityExpression	c == '$'		901124	0		==			
ANR	901225	Identifier	c		901124	0					
ANR	901226	PrimaryExpression	'$'		901124	1					
ANR	901227	CompoundStatement		24:2:403:403	901124	1					
ANR	901228	ExpressionStatement	c = str [ i ++ ]	113:4:1974:1986	901124	0	True				
ANR	901229	AssignmentExpression	c = str [ i ++ ]		901124	0		=			
ANR	901230	Identifier	c		901124	0					
ANR	901231	ArrayIndexing	str [ i ++ ]		901124	1					
ANR	901232	Identifier	str		901124	0					
ANR	901233	PostIncDecOperationExpression	i ++		901124	1					
ANR	901234	Identifier	i		901124	0					
ANR	901235	IncDec	++		901124	1					
ANR	901236	IfStatement	if ( c == 'B' )		901124	1					
ANR	901237	Condition	c == 'B'	114:8:1996:2003	901124	0	True				
ANR	901238	EqualityExpression	c == 'B'		901124	0		==			
ANR	901239	Identifier	c		901124	0					
ANR	901240	PrimaryExpression	'B'		901124	1					
ANR	901241	ExpressionStatement	whatcode = NEW	115:6:2012:2026	901124	1	True				
ANR	901242	AssignmentExpression	whatcode = NEW		901124	0		=			
ANR	901243	Identifier	whatcode		901124	0					
ANR	901244	Identifier	NEW		901124	1					
ANR	901245	ElseStatement	else		901124	0					
ANR	901246	IfStatement	if ( c == '@' )		901124	0					
ANR	901247	Condition	c == '@'	116:13:2041:2048	901124	0	True				
ANR	901248	EqualityExpression	c == '@'		901124	0		==			
ANR	901249	Identifier	c		901124	0					
ANR	901250	PrimaryExpression	'@'		901124	1					
ANR	901251	ExpressionStatement	whatcode = OLD	117:6:2057:2071	901124	1	True				
ANR	901252	AssignmentExpression	whatcode = OLD		901124	0		=			
ANR	901253	Identifier	whatcode		901124	0					
ANR	901254	Identifier	OLD		901124	1					
ANR	901255	ElseStatement	else		901124	0					
ANR	901256	IfStatement	if ( c == '(' )		901124	0					
ANR	901257	Condition	c == '('	119:16:2093:2100	901124	0	True				
ANR	901258	EqualityExpression	c == '('		901124	0		==			
ANR	901259	Identifier	c		901124	0					
ANR	901260	PrimaryExpression	'('		901124	1					
ANR	901261	CompoundStatement		32:2:540:540	901124	1					
ANR	901262	ExpressionStatement	c = str [ i ++ ]	121:4:2111:2123	901124	0	True				
ANR	901263	AssignmentExpression	c = str [ i ++ ]		901124	0		=			
ANR	901264	Identifier	c		901124	0					
ANR	901265	ArrayIndexing	str [ i ++ ]		901124	1					
ANR	901266	Identifier	str		901124	0					
ANR	901267	PostIncDecOperationExpression	i ++		901124	1					
ANR	901268	Identifier	i		901124	0					
ANR	901269	IncDec	++		901124	1					
ANR	901270	IfStatement	if ( c == 'I' )		901124	1					
ANR	901271	Condition	c == 'I'	122:8:2133:2140	901124	0	True				
ANR	901272	EqualityExpression	c == 'I'		901124	0		==			
ANR	901273	Identifier	c		901124	0					
ANR	901274	PrimaryExpression	'I'		901124	1					
ANR	901275	ExpressionStatement	whatcode = ESCI	123:6:2149:2164	901124	1	True				
ANR	901276	AssignmentExpression	whatcode = ESCI		901124	0		=			
ANR	901277	Identifier	whatcode		901124	0					
ANR	901278	Identifier	ESCI		901124	1					
ANR	901279	ElseStatement	else		901124	0					
ANR	901280	IfStatement	if ( c == 'K' )		901124	0					
ANR	901281	Condition	c == 'K'	125:16:2186:2193	901124	0	True				
ANR	901282	EqualityExpression	c == 'K'		901124	0		==			
ANR	901283	Identifier	c		901124	0					
ANR	901284	PrimaryExpression	'K'		901124	1					
ANR	901285	ExpressionStatement	whatcode = NEC	126:2:2198:2212	901124	1	True				
ANR	901286	AssignmentExpression	whatcode = NEC		901124	0		=			
ANR	901287	Identifier	whatcode		901124	0					
ANR	901288	Identifier	NEC		901124	1					
ANR	901289	ElseStatement	else		901124	0					
ANR	901290	IfStatement	if ( ( c >= 129 && c <= 141 ) || ( c >= 143 && c <= 159 ) )		901124	0					
ANR	901291	Condition	( c >= 129 && c <= 141 ) || ( c >= 143 && c <= 159 )	128:12:2233:2280	901124	0	True				
ANR	901292	OrExpression	( c >= 129 && c <= 141 ) || ( c >= 143 && c <= 159 )		901124	0		||			
ANR	901293	AndExpression	c >= 129 && c <= 141		901124	0		&&			
ANR	901294	RelationalExpression	c >= 129		901124	0		>=			
ANR	901295	Identifier	c		901124	0					
ANR	901296	PrimaryExpression	129		901124	1					
ANR	901297	RelationalExpression	c <= 141		901124	1		<=			
ANR	901298	Identifier	c		901124	0					
ANR	901299	PrimaryExpression	141		901124	1					
ANR	901300	AndExpression	c >= 143 && c <= 159		901124	1		&&			
ANR	901301	RelationalExpression	c >= 143		901124	0		>=			
ANR	901302	Identifier	c		901124	0					
ANR	901303	PrimaryExpression	143		901124	1					
ANR	901304	RelationalExpression	c <= 159		901124	1		<=			
ANR	901305	Identifier	c		901124	0					
ANR	901306	PrimaryExpression	159		901124	1					
ANR	901307	ExpressionStatement	whatcode = SJIS	129:5:2288:2303	901124	1	True				
ANR	901308	AssignmentExpression	whatcode = SJIS		901124	0		=			
ANR	901309	Identifier	whatcode		901124	0					
ANR	901310	Identifier	SJIS		901124	1					
ANR	901311	ElseStatement	else		901124	0					
ANR	901312	IfStatement	if ( c == SS2 )		901124	0					
ANR	901313	Condition	c == SS2	130:12:2317:2324	901124	0	True				
ANR	901314	EqualityExpression	c == SS2		901124	0		==			
ANR	901315	Identifier	c		901124	0					
ANR	901316	Identifier	SS2		901124	1					
ANR	901317	CompoundStatement		43:5:767:767	901124	1					
ANR	901318	ExpressionStatement	c = str [ i ++ ]	132:7:2341:2353	901124	0	True				
ANR	901319	AssignmentExpression	c = str [ i ++ ]		901124	0		=			
ANR	901320	Identifier	c		901124	0					
ANR	901321	ArrayIndexing	str [ i ++ ]		901124	1					
ANR	901322	Identifier	str		901124	0					
ANR	901323	PostIncDecOperationExpression	i ++		901124	1					
ANR	901324	Identifier	i		901124	0					
ANR	901325	IncDec	++		901124	1					
ANR	901326	IfStatement	if ( ( c >= 64 && c <= 126 ) || ( c >= 128 && c <= 160 ) || ( c >= 224 && c <= 252 ) )		901124	1					
ANR	901327	Condition	( c >= 64 && c <= 126 ) || ( c >= 128 && c <= 160 ) || ( c >= 224 && c <= 252 )	133:11:2366:2438	901124	0	True				
ANR	901328	OrExpression	( c >= 64 && c <= 126 ) || ( c >= 128 && c <= 160 ) || ( c >= 224 && c <= 252 )		901124	0		||			
ANR	901329	AndExpression	c >= 64 && c <= 126		901124	0		&&			
ANR	901330	RelationalExpression	c >= 64		901124	0		>=			
ANR	901331	Identifier	c		901124	0					
ANR	901332	PrimaryExpression	64		901124	1					
ANR	901333	RelationalExpression	c <= 126		901124	1		<=			
ANR	901334	Identifier	c		901124	0					
ANR	901335	PrimaryExpression	126		901124	1					
ANR	901336	OrExpression	( c >= 128 && c <= 160 ) || ( c >= 224 && c <= 252 )		901124	1		||			
ANR	901337	AndExpression	c >= 128 && c <= 160		901124	0		&&			
ANR	901338	RelationalExpression	c >= 128		901124	0		>=			
ANR	901339	Identifier	c		901124	0					
ANR	901340	PrimaryExpression	128		901124	1					
ANR	901341	RelationalExpression	c <= 160		901124	1		<=			
ANR	901342	Identifier	c		901124	0					
ANR	901343	PrimaryExpression	160		901124	1					
ANR	901344	AndExpression	c >= 224 && c <= 252		901124	1		&&			
ANR	901345	RelationalExpression	c >= 224		901124	0		>=			
ANR	901346	Identifier	c		901124	0					
ANR	901347	PrimaryExpression	224		901124	1					
ANR	901348	RelationalExpression	c <= 252		901124	1		<=			
ANR	901349	Identifier	c		901124	0					
ANR	901350	PrimaryExpression	252		901124	1					
ANR	901351	ExpressionStatement	whatcode = SJIS	134:2:2443:2458	901124	1	True				
ANR	901352	AssignmentExpression	whatcode = SJIS		901124	0		=			
ANR	901353	Identifier	whatcode		901124	0					
ANR	901354	Identifier	SJIS		901124	1					
ANR	901355	ElseStatement	else		901124	0					
ANR	901356	IfStatement	if ( c >= 161 && c <= 223 )		901124	0					
ANR	901357	Condition	c >= 161 && c <= 223	135:16:2476:2495	901124	0	True				
ANR	901358	AndExpression	c >= 161 && c <= 223		901124	0		&&			
ANR	901359	RelationalExpression	c >= 161		901124	0		>=			
ANR	901360	Identifier	c		901124	0					
ANR	901361	PrimaryExpression	161		901124	1					
ANR	901362	RelationalExpression	c <= 223		901124	1		<=			
ANR	901363	Identifier	c		901124	0					
ANR	901364	PrimaryExpression	223		901124	1					
ANR	901365	ExpressionStatement	whatcode = EUCORSJIS	136:2:2500:2520	901124	1	True				
ANR	901366	AssignmentExpression	whatcode = EUCORSJIS		901124	0		=			
ANR	901367	Identifier	whatcode		901124	0					
ANR	901368	Identifier	EUCORSJIS		901124	1					
ANR	901369	ElseStatement	else		901124	0					
ANR	901370	IfStatement	if ( c >= 161 && c <= 223 )		901124	0					
ANR	901371	Condition	c >= 161 && c <= 223	138:12:2541:2560	901124	0	True				
ANR	901372	AndExpression	c >= 161 && c <= 223		901124	0		&&			
ANR	901373	RelationalExpression	c >= 161		901124	0		>=			
ANR	901374	Identifier	c		901124	0					
ANR	901375	PrimaryExpression	161		901124	1					
ANR	901376	RelationalExpression	c <= 223		901124	1		<=			
ANR	901377	Identifier	c		901124	0					
ANR	901378	PrimaryExpression	223		901124	1					
ANR	901379	CompoundStatement		51:5:1003:1003	901124	1					
ANR	901380	ExpressionStatement	c = str [ i ++ ]	140:7:2577:2589	901124	0	True				
ANR	901381	AssignmentExpression	c = str [ i ++ ]		901124	0		=			
ANR	901382	Identifier	c		901124	0					
ANR	901383	ArrayIndexing	str [ i ++ ]		901124	1					
ANR	901384	Identifier	str		901124	0					
ANR	901385	PostIncDecOperationExpression	i ++		901124	1					
ANR	901386	Identifier	i		901124	0					
ANR	901387	IncDec	++		901124	1					
ANR	901388	IfStatement	if ( c >= 240 && c <= 254 )		901124	1					
ANR	901389	Condition	c >= 240 && c <= 254	141:11:2602:2621	901124	0	True				
ANR	901390	AndExpression	c >= 240 && c <= 254		901124	0		&&			
ANR	901391	RelationalExpression	c >= 240		901124	0		>=			
ANR	901392	Identifier	c		901124	0					
ANR	901393	PrimaryExpression	240		901124	1					
ANR	901394	RelationalExpression	c <= 254		901124	1		<=			
ANR	901395	Identifier	c		901124	0					
ANR	901396	PrimaryExpression	254		901124	1					
ANR	901397	ExpressionStatement	whatcode = EUC	142:2:2626:2640	901124	1	True				
ANR	901398	AssignmentExpression	whatcode = EUC		901124	0		=			
ANR	901399	Identifier	whatcode		901124	0					
ANR	901400	Identifier	EUC		901124	1					
ANR	901401	ElseStatement	else		901124	0					
ANR	901402	IfStatement	if ( c >= 161 && c <= 223 )		901124	0					
ANR	901403	Condition	c >= 161 && c <= 223	143:16:2658:2677	901124	0	True				
ANR	901404	AndExpression	c >= 161 && c <= 223		901124	0		&&			
ANR	901405	RelationalExpression	c >= 161		901124	0		>=			
ANR	901406	Identifier	c		901124	0					
ANR	901407	PrimaryExpression	161		901124	1					
ANR	901408	RelationalExpression	c <= 223		901124	1		<=			
ANR	901409	Identifier	c		901124	0					
ANR	901410	PrimaryExpression	223		901124	1					
ANR	901411	ExpressionStatement	whatcode = EUCORSJIS	144:2:2682:2702	901124	1	True				
ANR	901412	AssignmentExpression	whatcode = EUCORSJIS		901124	0		=			
ANR	901413	Identifier	whatcode		901124	0					
ANR	901414	Identifier	EUCORSJIS		901124	1					
ANR	901415	ElseStatement	else		901124	0					
ANR	901416	IfStatement	if ( c >= 224 && c <= 239 )		901124	0					
ANR	901417	Condition	c >= 224 && c <= 239	145:16:2720:2739	901124	0	True				
ANR	901418	AndExpression	c >= 224 && c <= 239		901124	0		&&			
ANR	901419	RelationalExpression	c >= 224		901124	0		>=			
ANR	901420	Identifier	c		901124	0					
ANR	901421	PrimaryExpression	224		901124	1					
ANR	901422	RelationalExpression	c <= 239		901124	1		<=			
ANR	901423	Identifier	c		901124	0					
ANR	901424	PrimaryExpression	239		901124	1					
ANR	901425	CompoundStatement		58:2:1179:1179	901124	1					
ANR	901426	ExpressionStatement	whatcode = EUCORSJIS	147:4:2750:2770	901124	0	True				
ANR	901427	AssignmentExpression	whatcode = EUCORSJIS		901124	0		=			
ANR	901428	Identifier	whatcode		901124	0					
ANR	901429	Identifier	EUCORSJIS		901124	1					
ANR	901430	WhileStatement	while ( c >= 64 && c != '\\0' && whatcode == EUCORSJIS )		901124	1					
ANR	901431	Condition	c >= 64 && c != '\\0' && whatcode == EUCORSJIS	148:11:2783:2827	901124	0	True				
ANR	901432	AndExpression	c >= 64 && c != '\\0' && whatcode == EUCORSJIS		901124	0		&&			
ANR	901433	RelationalExpression	c >= 64		901124	0		>=			
ANR	901434	Identifier	c		901124	0					
ANR	901435	PrimaryExpression	64		901124	1					
ANR	901436	AndExpression	c != '\\0' && whatcode == EUCORSJIS		901124	1		&&			
ANR	901437	EqualityExpression	c != '\\0'		901124	0		!=			
ANR	901438	Identifier	c		901124	0					
ANR	901439	PrimaryExpression	'\\0'		901124	1					
ANR	901440	EqualityExpression	whatcode == EUCORSJIS		901124	1		==			
ANR	901441	Identifier	whatcode		901124	0					
ANR	901442	Identifier	EUCORSJIS		901124	1					
ANR	901443	CompoundStatement		61:6:1271:1271	901124	1					
ANR	901444	IfStatement	if ( c >= 129 )		901124	0					
ANR	901445	Condition	c >= 129	150:12:2850:2857	901124	0	True				
ANR	901446	RelationalExpression	c >= 129		901124	0		>=			
ANR	901447	Identifier	c		901124	0					
ANR	901448	PrimaryExpression	129		901124	1					
ANR	901449	CompoundStatement		63:3:1298:1298	901124	1					
ANR	901450	IfStatement	if ( c <= 141 || ( c >= 143 && c <= 159 ) )		901124	0					
ANR	901451	Condition	c <= 141 || ( c >= 143 && c <= 159 )	152:9:2874:2907	901124	0	True				
ANR	901452	OrExpression	c <= 141 || ( c >= 143 && c <= 159 )		901124	0		||			
ANR	901453	RelationalExpression	c <= 141		901124	0		<=			
ANR	901454	Identifier	c		901124	0					
ANR	901455	PrimaryExpression	141		901124	1					
ANR	901456	AndExpression	c >= 143 && c <= 159		901124	1		&&			
ANR	901457	RelationalExpression	c >= 143		901124	0		>=			
ANR	901458	Identifier	c		901124	0					
ANR	901459	PrimaryExpression	143		901124	1					
ANR	901460	RelationalExpression	c <= 159		901124	1		<=			
ANR	901461	Identifier	c		901124	0					
ANR	901462	PrimaryExpression	159		901124	1					
ANR	901463	ExpressionStatement	whatcode = SJIS	153:7:2917:2932	901124	1	True				
ANR	901464	AssignmentExpression	whatcode = SJIS		901124	0		=			
ANR	901465	Identifier	whatcode		901124	0					
ANR	901466	Identifier	SJIS		901124	1					
ANR	901467	ElseStatement	else		901124	0					
ANR	901468	IfStatement	if ( c >= 253 && c <= 254 )		901124	0					
ANR	901469	Condition	c >= 253 && c <= 254	154:14:2948:2967	901124	0	True				
ANR	901470	AndExpression	c >= 253 && c <= 254		901124	0		&&			
ANR	901471	RelationalExpression	c >= 253		901124	0		>=			
ANR	901472	Identifier	c		901124	0					
ANR	901473	PrimaryExpression	253		901124	1					
ANR	901474	RelationalExpression	c <= 254		901124	1		<=			
ANR	901475	Identifier	c		901124	0					
ANR	901476	PrimaryExpression	254		901124	1					
ANR	901477	ExpressionStatement	whatcode = EUC	155:7:2977:2991	901124	1	True				
ANR	901478	AssignmentExpression	whatcode = EUC		901124	0		=			
ANR	901479	Identifier	whatcode		901124	0					
ANR	901480	Identifier	EUC		901124	1					
ANR	901481	ExpressionStatement	c = str [ i ++ ]	157:8:3006:3018	901124	1	True				
ANR	901482	AssignmentExpression	c = str [ i ++ ]		901124	0		=			
ANR	901483	Identifier	c		901124	0					
ANR	901484	ArrayIndexing	str [ i ++ ]		901124	1					
ANR	901485	Identifier	str		901124	0					
ANR	901486	PostIncDecOperationExpression	i ++		901124	1					
ANR	901487	Identifier	i		901124	0					
ANR	901488	IncDec	++		901124	1					
ANR	901489	ElseStatement	else		901124	0					
ANR	901490	IfStatement	if ( c <= 159 )		901124	0					
ANR	901491	Condition	c <= 159	160:16:3048:3055	901124	0	True				
ANR	901492	RelationalExpression	c <= 159		901124	0		<=			
ANR	901493	Identifier	c		901124	0					
ANR	901494	PrimaryExpression	159		901124	1					
ANR	901495	ExpressionStatement	whatcode = SJIS	161:2:3060:3075	901124	1	True				
ANR	901496	AssignmentExpression	whatcode = SJIS		901124	0		=			
ANR	901497	Identifier	whatcode		901124	0					
ANR	901498	Identifier	SJIS		901124	1					
ANR	901499	ElseStatement	else		901124	0					
ANR	901500	IfStatement	if ( c >= 240 && c <= 254 )		901124	0					
ANR	901501	Condition	c >= 240 && c <= 254	163:12:3096:3115	901124	0	True				
ANR	901502	AndExpression	c >= 240 && c <= 254		901124	0		&&			
ANR	901503	RelationalExpression	c >= 240		901124	0		>=			
ANR	901504	Identifier	c		901124	0					
ANR	901505	PrimaryExpression	240		901124	1					
ANR	901506	RelationalExpression	c <= 254		901124	1		<=			
ANR	901507	Identifier	c		901124	0					
ANR	901508	PrimaryExpression	254		901124	1					
ANR	901509	ExpressionStatement	whatcode = EUC	164:5:3123:3137	901124	1	True				
ANR	901510	AssignmentExpression	whatcode = EUC		901124	0		=			
ANR	901511	Identifier	whatcode		901124	0					
ANR	901512	Identifier	EUC		901124	1					
ANR	901513	ElseStatement	else		901124	0					
ANR	901514	IfStatement	if ( c >= 224 && c <= 239 )		901124	0					
ANR	901515	Condition	c >= 224 && c <= 239	165:12:3151:3170	901124	0	True				
ANR	901516	AndExpression	c >= 224 && c <= 239		901124	0		&&			
ANR	901517	RelationalExpression	c >= 224		901124	0		>=			
ANR	901518	Identifier	c		901124	0					
ANR	901519	PrimaryExpression	224		901124	1					
ANR	901520	RelationalExpression	c <= 239		901124	1		<=			
ANR	901521	Identifier	c		901124	0					
ANR	901522	PrimaryExpression	239		901124	1					
ANR	901523	CompoundStatement		78:5:1613:1613	901124	1					
ANR	901524	ExpressionStatement	c = str [ i ++ ]	167:7:3187:3199	901124	0	True				
ANR	901525	AssignmentExpression	c = str [ i ++ ]		901124	0		=			
ANR	901526	Identifier	c		901124	0					
ANR	901527	ArrayIndexing	str [ i ++ ]		901124	1					
ANR	901528	Identifier	str		901124	0					
ANR	901529	PostIncDecOperationExpression	i ++		901124	1					
ANR	901530	Identifier	i		901124	0					
ANR	901531	IncDec	++		901124	1					
ANR	901532	IfStatement	if ( ( c >= 64 && c <= 126 ) || ( c >= 128 && c <= 160 ) )		901124	1					
ANR	901533	Condition	( c >= 64 && c <= 126 ) || ( c >= 128 && c <= 160 )	168:11:3212:3258	901124	0	True				
ANR	901534	OrExpression	( c >= 64 && c <= 126 ) || ( c >= 128 && c <= 160 )		901124	0		||			
ANR	901535	AndExpression	c >= 64 && c <= 126		901124	0		&&			
ANR	901536	RelationalExpression	c >= 64		901124	0		>=			
ANR	901537	Identifier	c		901124	0					
ANR	901538	PrimaryExpression	64		901124	1					
ANR	901539	RelationalExpression	c <= 126		901124	1		<=			
ANR	901540	Identifier	c		901124	0					
ANR	901541	PrimaryExpression	126		901124	1					
ANR	901542	AndExpression	c >= 128 && c <= 160		901124	1		&&			
ANR	901543	RelationalExpression	c >= 128		901124	0		>=			
ANR	901544	Identifier	c		901124	0					
ANR	901545	PrimaryExpression	128		901124	1					
ANR	901546	RelationalExpression	c <= 160		901124	1		<=			
ANR	901547	Identifier	c		901124	0					
ANR	901548	PrimaryExpression	160		901124	1					
ANR	901549	ExpressionStatement	whatcode = SJIS	169:2:3263:3278	901124	1	True				
ANR	901550	AssignmentExpression	whatcode = SJIS		901124	0		=			
ANR	901551	Identifier	whatcode		901124	0					
ANR	901552	Identifier	SJIS		901124	1					
ANR	901553	ElseStatement	else		901124	0					
ANR	901554	IfStatement	if ( c >= 253 && c <= 254 )		901124	0					
ANR	901555	Condition	c >= 253 && c <= 254	170:16:3296:3315	901124	0	True				
ANR	901556	AndExpression	c >= 253 && c <= 254		901124	0		&&			
ANR	901557	RelationalExpression	c >= 253		901124	0		>=			
ANR	901558	Identifier	c		901124	0					
ANR	901559	PrimaryExpression	253		901124	1					
ANR	901560	RelationalExpression	c <= 254		901124	1		<=			
ANR	901561	Identifier	c		901124	0					
ANR	901562	PrimaryExpression	254		901124	1					
ANR	901563	ExpressionStatement	whatcode = EUC	171:2:3320:3334	901124	1	True				
ANR	901564	AssignmentExpression	whatcode = EUC		901124	0		=			
ANR	901565	Identifier	whatcode		901124	0					
ANR	901566	Identifier	EUC		901124	1					
ANR	901567	ElseStatement	else		901124	0					
ANR	901568	IfStatement	if ( c >= 161 && c <= 252 )		901124	0					
ANR	901569	Condition	c >= 161 && c <= 252	172:16:3352:3371	901124	0	True				
ANR	901570	AndExpression	c >= 161 && c <= 252		901124	0		&&			
ANR	901571	RelationalExpression	c >= 161		901124	0		>=			
ANR	901572	Identifier	c		901124	0					
ANR	901573	PrimaryExpression	161		901124	1					
ANR	901574	RelationalExpression	c <= 252		901124	1		<=			
ANR	901575	Identifier	c		901124	0					
ANR	901576	PrimaryExpression	252		901124	1					
ANR	901577	ExpressionStatement	whatcode = EUCORSJIS	173:2:3376:3396	901124	1	True				
ANR	901578	AssignmentExpression	whatcode = EUCORSJIS		901124	0		=			
ANR	901579	Identifier	whatcode		901124	0					
ANR	901580	Identifier	EUCORSJIS		901124	1					
ANR	901581	IfStatement	if ( whatcode == ASCII )		901124	9					
ANR	901582	Condition	whatcode == ASCII	179:6:3434:3450	901124	0	True				
ANR	901583	EqualityExpression	whatcode == ASCII		901124	0		==			
ANR	901584	Identifier	whatcode		901124	0					
ANR	901585	Identifier	ASCII		901124	1					
ANR	901586	ExpressionStatement	"debug ( ""Kanji code not included."" )"	180:4:3457:3491	901124	1	True				
ANR	901587	CallExpression	"debug ( ""Kanji code not included."" )"		901124	0					
ANR	901588	Callee	debug		901124	0					
ANR	901589	Identifier	debug		901124	0					
ANR	901590	ArgumentList	"""Kanji code not included."""		901124	1					
ANR	901591	Argument	"""Kanji code not included."""		901124	0					
ANR	901592	PrimaryExpression	"""Kanji code not included."""		901124	0					
ANR	901593	ElseStatement	else		901124	0					
ANR	901594	IfStatement	if ( whatcode == EUCORSJIS )		901124	0					
ANR	901595	Condition	whatcode == EUCORSJIS	181:11:3504:3524	901124	0	True				
ANR	901596	EqualityExpression	whatcode == EUCORSJIS		901124	0		==			
ANR	901597	Identifier	whatcode		901124	0					
ANR	901598	Identifier	EUCORSJIS		901124	1					
ANR	901599	ExpressionStatement	"debug ( ""Kanji code not detected."" )"	182:4:3531:3565	901124	1	True				
ANR	901600	CallExpression	"debug ( ""Kanji code not detected."" )"		901124	0					
ANR	901601	Callee	debug		901124	0					
ANR	901602	Identifier	debug		901124	0					
ANR	901603	ArgumentList	"""Kanji code not detected."""		901124	1					
ANR	901604	Argument	"""Kanji code not detected."""		901124	0					
ANR	901605	PrimaryExpression	"""Kanji code not detected."""		901124	0					
ANR	901606	ElseStatement	else		901124	0					
ANR	901607	ExpressionStatement	"debug ( ""Kanji code detected at %d byte."" , i )"	184:4:3578:3622	901124	0	True				
ANR	901608	CallExpression	"debug ( ""Kanji code detected at %d byte."" , i )"		901124	0					
ANR	901609	Callee	debug		901124	0					
ANR	901610	Identifier	debug		901124	0					
ANR	901611	ArgumentList	"""Kanji code detected at %d byte."""		901124	1					
ANR	901612	Argument	"""Kanji code detected at %d byte."""		901124	0					
ANR	901613	PrimaryExpression	"""Kanji code detected at %d byte."""		901124	0					
ANR	901614	Argument	i		901124	1					
ANR	901615	Identifier	i		901124	0					
ANR	901616	IfStatement	if ( whatcode == EUCORSJIS && oldcode != ASCII )		901124	10					
ANR	901617	Condition	whatcode == EUCORSJIS && oldcode != ASCII	187:6:3638:3678	901124	0	True				
ANR	901618	AndExpression	whatcode == EUCORSJIS && oldcode != ASCII		901124	0		&&			
ANR	901619	EqualityExpression	whatcode == EUCORSJIS		901124	0		==			
ANR	901620	Identifier	whatcode		901124	0					
ANR	901621	Identifier	EUCORSJIS		901124	1					
ANR	901622	EqualityExpression	oldcode != ASCII		901124	1		!=			
ANR	901623	Identifier	oldcode		901124	0					
ANR	901624	Identifier	ASCII		901124	1					
ANR	901625	ExpressionStatement	whatcode = oldcode	188:4:3685:3703	901124	1	True				
ANR	901626	AssignmentExpression	whatcode = oldcode		901124	0		=			
ANR	901627	Identifier	whatcode		901124	0					
ANR	901628	Identifier	oldcode		901124	1					
ANR	901629	IfStatement	if ( whatcode == EUCORSJIS )		901124	11					
ANR	901630	Condition	whatcode == EUCORSJIS	190:6:3712:3732	901124	0	True				
ANR	901631	EqualityExpression	whatcode == EUCORSJIS		901124	0		==			
ANR	901632	Identifier	whatcode		901124	0					
ANR	901633	Identifier	EUCORSJIS		901124	1					
ANR	901634	CompoundStatement		103:4:2174:2174	901124	1					
ANR	901635	IfStatement	"if ( getenv ( ""LC_ALL"" ) )"		901124	0					
ANR	901636	Condition	"getenv ( ""LC_ALL"" )"	192:10:3751:3767	901124	0	True				
ANR	901637	CallExpression	"getenv ( ""LC_ALL"" )"		901124	0					
ANR	901638	Callee	getenv		901124	0					
ANR	901639	Identifier	getenv		901124	0					
ANR	901640	ArgumentList	"""LC_ALL"""		901124	1					
ANR	901641	Argument	"""LC_ALL"""		901124	0					
ANR	901642	PrimaryExpression	"""LC_ALL"""		901124	0					
ANR	901643	ExpressionStatement	"lang = getenv ( ""LC_ALL"" )"	193:1:3771:3795	901124	1	True				
ANR	901644	AssignmentExpression	"lang = getenv ( ""LC_ALL"" )"		901124	0		=			
ANR	901645	Identifier	lang		901124	0					
ANR	901646	CallExpression	"getenv ( ""LC_ALL"" )"		901124	1					
ANR	901647	Callee	getenv		901124	0					
ANR	901648	Identifier	getenv		901124	0					
ANR	901649	ArgumentList	"""LC_ALL"""		901124	1					
ANR	901650	Argument	"""LC_ALL"""		901124	0					
ANR	901651	PrimaryExpression	"""LC_ALL"""		901124	0					
ANR	901652	ElseStatement	else		901124	0					
ANR	901653	IfStatement	"if ( getenv ( ""LC_CTYPE"" ) )"		901124	0					
ANR	901654	Condition	"getenv ( ""LC_CTYPE"" )"	194:15:3812:3830	901124	0	True				
ANR	901655	CallExpression	"getenv ( ""LC_CTYPE"" )"		901124	0					
ANR	901656	Callee	getenv		901124	0					
ANR	901657	Identifier	getenv		901124	0					
ANR	901658	ArgumentList	"""LC_CTYPE"""		901124	1					
ANR	901659	Argument	"""LC_CTYPE"""		901124	0					
ANR	901660	PrimaryExpression	"""LC_CTYPE"""		901124	0					
ANR	901661	ExpressionStatement	"lang = getenv ( ""LC_CTYPE"" )"	195:1:3834:3860	901124	1	True				
ANR	901662	AssignmentExpression	"lang = getenv ( ""LC_CTYPE"" )"		901124	0		=			
ANR	901663	Identifier	lang		901124	0					
ANR	901664	CallExpression	"getenv ( ""LC_CTYPE"" )"		901124	1					
ANR	901665	Callee	getenv		901124	0					
ANR	901666	Identifier	getenv		901124	0					
ANR	901667	ArgumentList	"""LC_CTYPE"""		901124	1					
ANR	901668	Argument	"""LC_CTYPE"""		901124	0					
ANR	901669	PrimaryExpression	"""LC_CTYPE"""		901124	0					
ANR	901670	ElseStatement	else		901124	0					
ANR	901671	IfStatement	"if ( getenv ( ""LANG"" ) )"		901124	0					
ANR	901672	Condition	"getenv ( ""LANG"" )"	196:15:3877:3891	901124	0	True				
ANR	901673	CallExpression	"getenv ( ""LANG"" )"		901124	0					
ANR	901674	Callee	getenv		901124	0					
ANR	901675	Identifier	getenv		901124	0					
ANR	901676	ArgumentList	"""LANG"""		901124	1					
ANR	901677	Argument	"""LANG"""		901124	0					
ANR	901678	PrimaryExpression	"""LANG"""		901124	0					
ANR	901679	ExpressionStatement	"lang = getenv ( ""LANG"" )"	197:1:3895:3917	901124	1	True				
ANR	901680	AssignmentExpression	"lang = getenv ( ""LANG"" )"		901124	0		=			
ANR	901681	Identifier	lang		901124	0					
ANR	901682	CallExpression	"getenv ( ""LANG"" )"		901124	1					
ANR	901683	Callee	getenv		901124	0					
ANR	901684	Identifier	getenv		901124	0					
ANR	901685	ArgumentList	"""LANG"""		901124	1					
ANR	901686	Argument	"""LANG"""		901124	0					
ANR	901687	PrimaryExpression	"""LANG"""		901124	0					
ANR	901688	IfStatement	if ( lang )		901124	1					
ANR	901689	Condition	lang	199:10:3930:3933	901124	0	True				
ANR	901690	Identifier	lang		901124	0					
ANR	901691	CompoundStatement		112:1:2372:2372	901124	1					
ANR	901692	Statement	if	201:3:3942:3943	901124	0	True				
ANR	901693	Statement	(	201:6:3945:3945	901124	1	True				
ANR	901694	Statement	strcmp	201:7:3946:3951	901124	2	True				
ANR	901695	Statement	(	201:14:3953:3953	901124	3	True				
ANR	901696	Statement	lang	201:15:3954:3957	901124	4	True				
ANR	901697	Statement	","	201:19:3958:3958	901124	5	True				
ANR	901698	Statement	"""ja_JP.SJIS"""	201:21:3960:3971	901124	6	True				
ANR	901699	Statement	)	201:33:3972:3972	901124	7	True				
ANR	901700	Statement	==	201:35:3974:3975	901124	8	True				
ANR	901701	Statement	0	201:38:3977:3977	901124	9	True				
ANR	901702	Statement	||	201:40:3979:3980	901124	10	True				
ANR	901703	Statement	strcmp	203:7:4001:4006	901124	11	True				
ANR	901704	Statement	(	203:14:4008:4008	901124	12	True				
ANR	901705	Statement	lang	203:15:4009:4012	901124	13	True				
ANR	901706	Statement	","	203:19:4013:4013	901124	14	True				
ANR	901707	Statement	"""japanese"""	203:21:4015:4024	901124	15	True				
ANR	901708	Statement	)	203:31:4025:4025	901124	16	True				
ANR	901709	Statement	==	203:33:4027:4028	901124	17	True				
ANR	901710	Statement	0	203:36:4030:4030	901124	18	True				
ANR	901711	Statement	||	203:38:4032:4033	901124	19	True				
ANR	901712	Statement	strcmp	205:7:4049:4054	901124	20	True				
ANR	901713	Statement	(	205:14:4056:4056	901124	21	True				
ANR	901714	Statement	lang	205:15:4057:4060	901124	22	True				
ANR	901715	Statement	","	205:19:4061:4061	901124	23	True				
ANR	901716	Statement	"""ja_JP.mscode"""	205:21:4063:4076	901124	24	True				
ANR	901717	Statement	)	205:35:4077:4077	901124	25	True				
ANR	901718	Statement	==	205:37:4079:4080	901124	26	True				
ANR	901719	Statement	0	205:40:4082:4082	901124	27	True				
ANR	901720	Statement	||	205:42:4084:4085	901124	28	True				
ANR	901721	Statement	strcmp	206:7:4094:4099	901124	29	True				
ANR	901722	Statement	(	206:14:4101:4101	901124	30	True				
ANR	901723	Statement	lang	206:15:4102:4105	901124	31	True				
ANR	901724	Statement	","	206:19:4106:4106	901124	32	True				
ANR	901725	Statement	"""ja_JP.PCK"""	206:21:4108:4118	901124	33	True				
ANR	901726	Statement	)	206:32:4119:4119	901124	34	True				
ANR	901727	Statement	==	206:34:4121:4122	901124	35	True				
ANR	901728	Statement	0	206:37:4124:4124	901124	36	True				
ANR	901729	Statement	)	206:38:4125:4125	901124	37	True				
ANR	901730	ExpressionStatement	whatcode = SJIS	207:5:4132:4147	901124	38	True				
ANR	901731	AssignmentExpression	whatcode = SJIS		901124	0		=			
ANR	901732	Identifier	whatcode		901124	0					
ANR	901733	Identifier	SJIS		901124	1					
ANR	901734	ElseStatement	else		901124	0					
ANR	901735	IfStatement	"if ( strncmp ( lang , ""ja"" , 2 ) == 0 )"		901124	0					
ANR	901736	Condition	"strncmp ( lang , ""ja"" , 2 ) == 0"	208:12:4161:4188	901124	0	True				
ANR	901737	EqualityExpression	"strncmp ( lang , ""ja"" , 2 ) == 0"		901124	0		==			
ANR	901738	CallExpression	"strncmp ( lang , ""ja"" , 2 )"		901124	0					
ANR	901739	Callee	strncmp		901124	0					
ANR	901740	Identifier	strncmp		901124	0					
ANR	901741	ArgumentList	lang		901124	1					
ANR	901742	Argument	lang		901124	0					
ANR	901743	Identifier	lang		901124	0					
ANR	901744	Argument	"""ja"""		901124	1					
ANR	901745	PrimaryExpression	"""ja"""		901124	0					
ANR	901746	Argument	2		901124	2					
ANR	901747	PrimaryExpression	2		901124	0					
ANR	901748	PrimaryExpression	0		901124	1					
ANR	901749	ExpressionStatement	whatcode = SJIS	210:5:4211:4226	901124	1	True				
ANR	901750	AssignmentExpression	whatcode = SJIS		901124	0		=			
ANR	901751	Identifier	whatcode		901124	0					
ANR	901752	Identifier	SJIS		901124	1					
ANR	901753	IfStatement	if ( whatcode == EUCORSJIS )		901124	12					
ANR	901754	Condition	whatcode == EUCORSJIS	217:6:4278:4298	901124	0	True				
ANR	901755	EqualityExpression	whatcode == EUCORSJIS		901124	0		==			
ANR	901756	Identifier	whatcode		901124	0					
ANR	901757	Identifier	EUCORSJIS		901124	1					
ANR	901758	ExpressionStatement	whatcode = SJIS	219:4:4320:4335	901124	1	True				
ANR	901759	AssignmentExpression	whatcode = SJIS		901124	0		=			
ANR	901760	Identifier	whatcode		901124	0					
ANR	901761	Identifier	SJIS		901124	1					
ANR	901762	ReturnStatement	return whatcode ;	224:2:4373:4388	901124	13	True				
ANR	901763	Identifier	whatcode		901124	0					
ANR	901764	ReturnType	static int		901124	1					
ANR	901765	Identifier	DetectKanjiCode		901124	2					
ANR	901766	ParameterList	unsigned char * str		901124	3					
ANR	901767	Parameter	unsigned char * str	88:17:1544:1561	901124	0	True				
ANR	901768	ParameterType	unsigned char *		901124	0					
ANR	901769	Identifier	str		901124	1					
ANR	901770	CFGEntryNode	ENTRY		901124		True				
ANR	901771	CFGExitNode	EXIT		901124		True				
ANR	901772	Symbol	NEW		901124						
ANR	901773	Symbol	c		901124						
ANR	901774	Symbol	NULL		901124						
ANR	901775	Symbol	OLD		901124						
ANR	901776	Symbol	EUCORSJIS		901124						
ANR	901777	Symbol	SJIS		901124						
ANR	901778	Symbol	i		901124						
ANR	901779	Symbol	ASCII		901124						
ANR	901780	Symbol	NEC		901124						
ANR	901781	Symbol	str		901124						
ANR	901782	Symbol	strncmp		901124						
ANR	901783	Symbol	EUC		901124						
ANR	901784	Symbol	SS2		901124						
ANR	901785	Symbol	ESC		901124						
ANR	901786	Symbol	ESCI		901124						
ANR	901787	Symbol	whatcode		901124						
ANR	901788	Symbol	oldcode		901124						
ANR	901789	Symbol	* str		901124						
ANR	901790	Symbol	lang		901124						
ANR	901791	Symbol	getenv		901124						
ANR	901792	Function	SJIStoJIS	229:0:4440:4762							
ANR	901793	FunctionDef	"SJIStoJIS (int * p1 , int * p2)"		901792	0					
ANR	901794	CompoundStatement		231:0:4481:4762	901792	0					
ANR	901795	Statement	register	232:2:4485:4492	901792	0	True				
ANR	901796	IdentifierDeclStatement	unsigned char c1 = * p1 ;	232:11:4494:4516	901792	1	True				
ANR	901797	IdentifierDecl	c1 = * p1		901792	0					
ANR	901798	IdentifierDeclType	unsigned char		901792	0					
ANR	901799	Identifier	c1		901792	1					
ANR	901800	AssignmentExpression	c1 = * p1		901792	2		=			
ANR	901801	Identifier	c1		901792	0					
ANR	901802	UnaryOperationExpression	* p1		901792	1					
ANR	901803	UnaryOperator	*		901792	0					
ANR	901804	Identifier	p1		901792	1					
ANR	901805	Statement	register	233:2:4520:4527	901792	2	True				
ANR	901806	IdentifierDeclStatement	unsigned char c2 = * p2 ;	233:11:4529:4551	901792	3	True				
ANR	901807	IdentifierDecl	c2 = * p2		901792	0					
ANR	901808	IdentifierDeclType	unsigned char		901792	0					
ANR	901809	Identifier	c2		901792	1					
ANR	901810	AssignmentExpression	c2 = * p2		901792	2		=			
ANR	901811	Identifier	c2		901792	0					
ANR	901812	UnaryOperationExpression	* p2		901792	1					
ANR	901813	UnaryOperator	*		901792	0					
ANR	901814	Identifier	p2		901792	1					
ANR	901815	Statement	register	234:2:4555:4562	901792	4	True				
ANR	901816	IdentifierDeclStatement	int adjust = c2 < 159 ;	234:11:4564:4585	901792	5	True				
ANR	901817	IdentifierDecl	adjust = c2 < 159		901792	0					
ANR	901818	IdentifierDeclType	int		901792	0					
ANR	901819	Identifier	adjust		901792	1					
ANR	901820	AssignmentExpression	adjust = c2 < 159		901792	2		=			
ANR	901821	Identifier	adjust		901792	0					
ANR	901822	RelationalExpression	c2 < 159		901792	1		<			
ANR	901823	Identifier	c2		901792	0					
ANR	901824	PrimaryExpression	159		901792	1					
ANR	901825	Statement	register	235:2:4589:4596	901792	6	True				
ANR	901826	IdentifierDeclStatement	int rowOffset = c1 < 160 ? 112 : 176 ;	235:11:4598:4634	901792	7	True				
ANR	901827	IdentifierDecl	rowOffset = c1 < 160 ? 112 : 176		901792	0					
ANR	901828	IdentifierDeclType	int		901792	0					
ANR	901829	Identifier	rowOffset		901792	1					
ANR	901830	AssignmentExpression	rowOffset = c1 < 160 ? 112 : 176		901792	2		=			
ANR	901831	Identifier	rowOffset		901792	0					
ANR	901832	ConditionalExpression	c1 < 160 ? 112 : 176		901792	1					
ANR	901833	Condition	c1 < 160		901792	0					
ANR	901834	RelationalExpression	c1 < 160		901792	0		<			
ANR	901835	Identifier	c1		901792	0					
ANR	901836	PrimaryExpression	160		901792	1					
ANR	901837	PrimaryExpression	112		901792	1					
ANR	901838	PrimaryExpression	176		901792	2					
ANR	901839	Statement	register	236:2:4638:4645	901792	8	True				
ANR	901840	IdentifierDeclStatement	int cellOffset = adjust ? ( 31 + ( c2 > 127 ) ) : 126 ;	236:11:4647:4696	901792	9	True				
ANR	901841	IdentifierDecl	cellOffset = adjust ? ( 31 + ( c2 > 127 ) ) : 126		901792	0					
ANR	901842	IdentifierDeclType	int		901792	0					
ANR	901843	Identifier	cellOffset		901792	1					
ANR	901844	AssignmentExpression	cellOffset = adjust ? ( 31 + ( c2 > 127 ) ) : 126		901792	2		=			
ANR	901845	Identifier	cellOffset		901792	0					
ANR	901846	ConditionalExpression	adjust ? ( 31 + ( c2 > 127 ) ) : 126		901792	1					
ANR	901847	Condition	adjust		901792	0					
ANR	901848	Identifier	adjust		901792	0					
ANR	901849	AdditiveExpression	31 + ( c2 > 127 )		901792	1		+			
ANR	901850	PrimaryExpression	31		901792	0					
ANR	901851	RelationalExpression	c2 > 127		901792	1		>			
ANR	901852	Identifier	c2		901792	0					
ANR	901853	PrimaryExpression	127		901792	1					
ANR	901854	PrimaryExpression	126		901792	2					
ANR	901855	ExpressionStatement	* p1 = ( ( c1 - rowOffset ) << 1 ) - adjust	238:2:4701:4739	901792	10	True				
ANR	901856	AssignmentExpression	* p1 = ( ( c1 - rowOffset ) << 1 ) - adjust		901792	0		=			
ANR	901857	UnaryOperationExpression	* p1		901792	0					
ANR	901858	UnaryOperator	*		901792	0					
ANR	901859	Identifier	p1		901792	1					
ANR	901860	AdditiveExpression	( ( c1 - rowOffset ) << 1 ) - adjust		901792	1		-			
ANR	901861	ShiftExpression	( c1 - rowOffset ) << 1		901792	0		<<			
ANR	901862	AdditiveExpression	c1 - rowOffset		901792	0		-			
ANR	901863	Identifier	c1		901792	0					
ANR	901864	Identifier	rowOffset		901792	1					
ANR	901865	PrimaryExpression	1		901792	1					
ANR	901866	Identifier	adjust		901792	1					
ANR	901867	ExpressionStatement	* p2 -= cellOffset	239:2:4743:4760	901792	11	True				
ANR	901868	AssignmentExpression	* p2 -= cellOffset		901792	0		-=			
ANR	901869	UnaryOperationExpression	* p2		901792	0					
ANR	901870	UnaryOperator	*		901792	0					
ANR	901871	Identifier	p2		901792	1					
ANR	901872	Identifier	cellOffset		901792	1					
ANR	901873	ReturnType	static void		901792	1					
ANR	901874	Identifier	SJIStoJIS		901792	2					
ANR	901875	ParameterList	"int * p1 , int * p2"		901792	3					
ANR	901876	Parameter	int * p1	230:11:4463:4469	901792	0	True				
ANR	901877	ParameterType	int *		901792	0					
ANR	901878	Identifier	p1		901792	1					
ANR	901879	Parameter	int * p2	230:20:4472:4478	901792	1	True				
ANR	901880	ParameterType	int *		901792	0					
ANR	901881	Identifier	p2		901792	1					
ANR	901882	CFGEntryNode	ENTRY		901792		True				
ANR	901883	CFGExitNode	EXIT		901792		True				
ANR	901884	Symbol	rowOffset		901792						
ANR	901885	Symbol	p1		901792						
ANR	901886	Symbol	p2		901792						
ANR	901887	Symbol	* p1		901792						
ANR	901888	Symbol	adjust		901792						
ANR	901889	Symbol	cellOffset		901792						
ANR	901890	Symbol	* p2		901792						
ANR	901891	Symbol	c1		901792						
ANR	901892	Symbol	c2		901792						
ANR	901893	Function	han2zen	247:0:4961:6493							
ANR	901894	FunctionDef	"han2zen (int * p1 , int * p2)"		901893	0					
ANR	901895	CompoundStatement		249:0:5000:6493	901893	0					
ANR	901896	IdentifierDeclStatement	int c = * p1 ;	250:2:5004:5015	901893	0	True				
ANR	901897	IdentifierDecl	c = * p1		901893	0					
ANR	901898	IdentifierDeclType	int		901893	0					
ANR	901899	Identifier	c		901893	1					
ANR	901900	AssignmentExpression	c = * p1		901893	2		=			
ANR	901901	Identifier	c		901893	0					
ANR	901902	UnaryOperationExpression	* p1		901893	1					
ANR	901903	UnaryOperator	*		901893	0					
ANR	901904	Identifier	p1		901893	1					
ANR	901905	IdentifierDeclStatement	int daku = FALSE ;	251:2:5019:5035	901893	1	True				
ANR	901906	IdentifierDecl	daku = FALSE		901893	0					
ANR	901907	IdentifierDeclType	int		901893	0					
ANR	901908	Identifier	daku		901893	1					
ANR	901909	AssignmentExpression	daku = FALSE		901893	2		=			
ANR	901910	Identifier	FALSE		901893	0					
ANR	901911	Identifier	FALSE		901893	1					
ANR	901912	IdentifierDeclStatement	int handaku = FALSE ;	252:2:5039:5058	901893	2	True				
ANR	901913	IdentifierDecl	handaku = FALSE		901893	0					
ANR	901914	IdentifierDeclType	int		901893	0					
ANR	901915	Identifier	handaku		901893	1					
ANR	901916	AssignmentExpression	handaku = FALSE		901893	2		=			
ANR	901917	Identifier	FALSE		901893	0					
ANR	901918	Identifier	FALSE		901893	1					
ANR	901919	Statement	int	253:2:5062:5064	901893	3	True				
ANR	901920	Statement	mtable	253:6:5066:5071	901893	4	True				
ANR	901921	Statement	[	253:12:5072:5072	901893	5	True				
ANR	901922	Statement	]	253:13:5073:5073	901893	6	True				
ANR	901923	Statement	[	253:14:5074:5074	901893	7	True				
ANR	901924	Statement	2	253:15:5075:5075	901893	8	True				
ANR	901925	Statement	]	253:16:5076:5076	901893	9	True				
ANR	901926	Statement	=	253:18:5078:5078	901893	10	True				
ANR	901927	CompoundStatement		6:2:81:81	901893	11					
ANR	901928	CompoundStatement		7:4:87:87	901893	0					
ANR	901929	Statement	129	255:5:5089:5091	901893	0	True				
ANR	901930	Statement	","	255:8:5092:5092	901893	1	True				
ANR	901931	Statement	66	255:10:5094:5095	901893	2	True				
ANR	901932	Statement	","	255:13:5097:5097	901893	1	True				
ANR	901933	CompoundStatement		8:4:102:102	901893	2					
ANR	901934	Statement	129	256:5:5104:5106	901893	0	True				
ANR	901935	Statement	","	256:8:5107:5107	901893	1	True				
ANR	901936	Statement	117	256:10:5109:5111	901893	2	True				
ANR	901937	Statement	","	256:14:5113:5113	901893	3	True				
ANR	901938	CompoundStatement		9:4:118:118	901893	4					
ANR	901939	Statement	129	257:5:5120:5122	901893	0	True				
ANR	901940	Statement	","	257:8:5123:5123	901893	1	True				
ANR	901941	Statement	118	257:10:5125:5127	901893	2	True				
ANR	901942	Statement	","	257:14:5129:5129	901893	5	True				
ANR	901943	CompoundStatement		10:4:134:134	901893	6					
ANR	901944	Statement	129	258:5:5136:5138	901893	0	True				
ANR	901945	Statement	","	258:8:5139:5139	901893	1	True				
ANR	901946	Statement	65	258:10:5141:5142	901893	2	True				
ANR	901947	Statement	","	258:13:5144:5144	901893	7	True				
ANR	901948	CompoundStatement		11:4:149:149	901893	8					
ANR	901949	Statement	129	259:5:5151:5153	901893	0	True				
ANR	901950	Statement	","	259:8:5154:5154	901893	1	True				
ANR	901951	Statement	69	259:10:5156:5157	901893	2	True				
ANR	901952	Statement	","	259:13:5159:5159	901893	9	True				
ANR	901953	CompoundStatement		12:4:164:164	901893	10					
ANR	901954	Statement	131	260:5:5166:5168	901893	0	True				
ANR	901955	Statement	","	260:8:5169:5169	901893	1	True				
ANR	901956	Statement	146	260:10:5171:5173	901893	2	True				
ANR	901957	Statement	","	260:14:5175:5175	901893	11	True				
ANR	901958	CompoundStatement		13:4:180:180	901893	12					
ANR	901959	Statement	131	261:5:5182:5184	901893	0	True				
ANR	901960	Statement	","	261:8:5185:5185	901893	1	True				
ANR	901961	Statement	64	261:10:5187:5188	901893	2	True				
ANR	901962	Statement	","	261:13:5190:5190	901893	13	True				
ANR	901963	CompoundStatement		14:4:195:195	901893	14					
ANR	901964	Statement	131	262:5:5197:5199	901893	0	True				
ANR	901965	Statement	","	262:8:5200:5200	901893	1	True				
ANR	901966	Statement	66	262:10:5202:5203	901893	2	True				
ANR	901967	Statement	","	262:13:5205:5205	901893	15	True				
ANR	901968	CompoundStatement		15:4:210:210	901893	16					
ANR	901969	Statement	131	263:5:5212:5214	901893	0	True				
ANR	901970	Statement	","	263:8:5215:5215	901893	1	True				
ANR	901971	Statement	68	263:10:5217:5218	901893	2	True				
ANR	901972	Statement	","	263:13:5220:5220	901893	17	True				
ANR	901973	CompoundStatement		16:4:225:225	901893	18					
ANR	901974	Statement	131	264:5:5227:5229	901893	0	True				
ANR	901975	Statement	","	264:8:5230:5230	901893	1	True				
ANR	901976	Statement	70	264:10:5232:5233	901893	2	True				
ANR	901977	Statement	","	264:13:5235:5235	901893	19	True				
ANR	901978	CompoundStatement		17:4:240:240	901893	20					
ANR	901979	Statement	131	265:5:5242:5244	901893	0	True				
ANR	901980	Statement	","	265:8:5245:5245	901893	1	True				
ANR	901981	Statement	72	265:10:5247:5248	901893	2	True				
ANR	901982	Statement	","	265:13:5250:5250	901893	21	True				
ANR	901983	CompoundStatement		18:4:255:255	901893	22					
ANR	901984	Statement	131	266:5:5257:5259	901893	0	True				
ANR	901985	Statement	","	266:8:5260:5260	901893	1	True				
ANR	901986	Statement	131	266:10:5262:5264	901893	2	True				
ANR	901987	Statement	","	266:14:5266:5266	901893	23	True				
ANR	901988	CompoundStatement		19:4:271:271	901893	24					
ANR	901989	Statement	131	267:5:5273:5275	901893	0	True				
ANR	901990	Statement	","	267:8:5276:5276	901893	1	True				
ANR	901991	Statement	133	267:10:5278:5280	901893	2	True				
ANR	901992	Statement	","	267:14:5282:5282	901893	25	True				
ANR	901993	CompoundStatement		20:4:287:287	901893	26					
ANR	901994	Statement	131	268:5:5289:5291	901893	0	True				
ANR	901995	Statement	","	268:8:5292:5292	901893	1	True				
ANR	901996	Statement	135	268:10:5294:5296	901893	2	True				
ANR	901997	Statement	","	268:14:5298:5298	901893	27	True				
ANR	901998	CompoundStatement		21:4:303:303	901893	28					
ANR	901999	Statement	131	269:5:5305:5307	901893	0	True				
ANR	902000	Statement	","	269:8:5308:5308	901893	1	True				
ANR	902001	Statement	98	269:10:5310:5311	901893	2	True				
ANR	902002	Statement	","	269:13:5313:5313	901893	29	True				
ANR	902003	CompoundStatement		22:4:318:318	901893	30					
ANR	902004	Statement	129	270:5:5320:5322	901893	0	True				
ANR	902005	Statement	","	270:8:5323:5323	901893	1	True				
ANR	902006	Statement	91	270:10:5325:5326	901893	2	True				
ANR	902007	Statement	","	270:13:5328:5328	901893	31	True				
ANR	902008	CompoundStatement		23:4:333:333	901893	32					
ANR	902009	Statement	131	271:5:5335:5337	901893	0	True				
ANR	902010	Statement	","	271:8:5338:5338	901893	1	True				
ANR	902011	Statement	65	271:10:5340:5341	901893	2	True				
ANR	902012	Statement	","	271:13:5343:5343	901893	33	True				
ANR	902013	CompoundStatement		24:4:348:348	901893	34					
ANR	902014	Statement	131	272:5:5350:5352	901893	0	True				
ANR	902015	Statement	","	272:8:5353:5353	901893	1	True				
ANR	902016	Statement	67	272:10:5355:5356	901893	2	True				
ANR	902017	Statement	","	272:13:5358:5358	901893	35	True				
ANR	902018	CompoundStatement		25:4:363:363	901893	36					
ANR	902019	Statement	131	273:5:5365:5367	901893	0	True				
ANR	902020	Statement	","	273:8:5368:5368	901893	1	True				
ANR	902021	Statement	69	273:10:5370:5371	901893	2	True				
ANR	902022	Statement	","	273:13:5373:5373	901893	37	True				
ANR	902023	CompoundStatement		26:4:378:378	901893	38					
ANR	902024	Statement	131	274:5:5380:5382	901893	0	True				
ANR	902025	Statement	","	274:8:5383:5383	901893	1	True				
ANR	902026	Statement	71	274:10:5385:5386	901893	2	True				
ANR	902027	Statement	","	274:13:5388:5388	901893	39	True				
ANR	902028	CompoundStatement		27:4:393:393	901893	40					
ANR	902029	Statement	131	275:5:5395:5397	901893	0	True				
ANR	902030	Statement	","	275:8:5398:5398	901893	1	True				
ANR	902031	Statement	73	275:10:5400:5401	901893	2	True				
ANR	902032	Statement	","	275:13:5403:5403	901893	41	True				
ANR	902033	CompoundStatement		28:4:408:408	901893	42					
ANR	902034	Statement	131	276:5:5410:5412	901893	0	True				
ANR	902035	Statement	","	276:8:5413:5413	901893	1	True				
ANR	902036	Statement	74	276:10:5415:5416	901893	2	True				
ANR	902037	Statement	","	276:13:5418:5418	901893	43	True				
ANR	902038	CompoundStatement		29:4:423:423	901893	44					
ANR	902039	Statement	131	277:5:5425:5427	901893	0	True				
ANR	902040	Statement	","	277:8:5428:5428	901893	1	True				
ANR	902041	Statement	76	277:10:5430:5431	901893	2	True				
ANR	902042	Statement	","	277:13:5433:5433	901893	45	True				
ANR	902043	CompoundStatement		30:4:438:438	901893	46					
ANR	902044	Statement	131	278:5:5440:5442	901893	0	True				
ANR	902045	Statement	","	278:8:5443:5443	901893	1	True				
ANR	902046	Statement	78	278:10:5445:5446	901893	2	True				
ANR	902047	Statement	","	278:13:5448:5448	901893	47	True				
ANR	902048	CompoundStatement		31:4:453:453	901893	48					
ANR	902049	Statement	131	279:5:5455:5457	901893	0	True				
ANR	902050	Statement	","	279:8:5458:5458	901893	1	True				
ANR	902051	Statement	80	279:10:5460:5461	901893	2	True				
ANR	902052	Statement	","	279:13:5463:5463	901893	49	True				
ANR	902053	CompoundStatement		32:4:468:468	901893	50					
ANR	902054	Statement	131	280:5:5470:5472	901893	0	True				
ANR	902055	Statement	","	280:8:5473:5473	901893	1	True				
ANR	902056	Statement	82	280:10:5475:5476	901893	2	True				
ANR	902057	Statement	","	280:13:5478:5478	901893	51	True				
ANR	902058	CompoundStatement		33:4:483:483	901893	52					
ANR	902059	Statement	131	281:5:5485:5487	901893	0	True				
ANR	902060	Statement	","	281:8:5488:5488	901893	1	True				
ANR	902061	Statement	84	281:10:5490:5491	901893	2	True				
ANR	902062	Statement	","	281:13:5493:5493	901893	53	True				
ANR	902063	CompoundStatement		34:4:498:498	901893	54					
ANR	902064	Statement	131	282:5:5500:5502	901893	0	True				
ANR	902065	Statement	","	282:8:5503:5503	901893	1	True				
ANR	902066	Statement	86	282:10:5505:5506	901893	2	True				
ANR	902067	Statement	","	282:13:5508:5508	901893	55	True				
ANR	902068	CompoundStatement		35:4:513:513	901893	56					
ANR	902069	Statement	131	283:5:5515:5517	901893	0	True				
ANR	902070	Statement	","	283:8:5518:5518	901893	1	True				
ANR	902071	Statement	88	283:10:5520:5521	901893	2	True				
ANR	902072	Statement	","	283:13:5523:5523	901893	57	True				
ANR	902073	CompoundStatement		36:4:528:528	901893	58					
ANR	902074	Statement	131	284:5:5530:5532	901893	0	True				
ANR	902075	Statement	","	284:8:5533:5533	901893	1	True				
ANR	902076	Statement	90	284:10:5535:5536	901893	2	True				
ANR	902077	Statement	","	284:13:5538:5538	901893	59	True				
ANR	902078	CompoundStatement		37:4:543:543	901893	60					
ANR	902079	Statement	131	285:5:5545:5547	901893	0	True				
ANR	902080	Statement	","	285:8:5548:5548	901893	1	True				
ANR	902081	Statement	92	285:10:5550:5551	901893	2	True				
ANR	902082	Statement	","	285:13:5553:5553	901893	61	True				
ANR	902083	CompoundStatement		38:4:558:558	901893	62					
ANR	902084	Statement	131	286:5:5560:5562	901893	0	True				
ANR	902085	Statement	","	286:8:5563:5563	901893	1	True				
ANR	902086	Statement	94	286:10:5565:5566	901893	2	True				
ANR	902087	Statement	","	286:13:5568:5568	901893	63	True				
ANR	902088	CompoundStatement		39:4:573:573	901893	64					
ANR	902089	Statement	131	287:5:5575:5577	901893	0	True				
ANR	902090	Statement	","	287:8:5578:5578	901893	1	True				
ANR	902091	Statement	96	287:10:5580:5581	901893	2	True				
ANR	902092	Statement	","	287:13:5583:5583	901893	65	True				
ANR	902093	CompoundStatement		40:4:588:588	901893	66					
ANR	902094	Statement	131	288:5:5590:5592	901893	0	True				
ANR	902095	Statement	","	288:8:5593:5593	901893	1	True				
ANR	902096	Statement	99	288:10:5595:5596	901893	2	True				
ANR	902097	Statement	","	288:13:5598:5598	901893	67	True				
ANR	902098	CompoundStatement		41:4:603:603	901893	68					
ANR	902099	Statement	131	289:5:5605:5607	901893	0	True				
ANR	902100	Statement	","	289:8:5608:5608	901893	1	True				
ANR	902101	Statement	101	289:10:5610:5612	901893	2	True				
ANR	902102	Statement	","	289:14:5614:5614	901893	69	True				
ANR	902103	CompoundStatement		42:4:619:619	901893	70					
ANR	902104	Statement	131	290:5:5621:5623	901893	0	True				
ANR	902105	Statement	","	290:8:5624:5624	901893	1	True				
ANR	902106	Statement	103	290:10:5626:5628	901893	2	True				
ANR	902107	Statement	","	290:14:5630:5630	901893	71	True				
ANR	902108	CompoundStatement		43:4:635:635	901893	72					
ANR	902109	Statement	131	291:5:5637:5639	901893	0	True				
ANR	902110	Statement	","	291:8:5640:5640	901893	1	True				
ANR	902111	Statement	105	291:10:5642:5644	901893	2	True				
ANR	902112	Statement	","	291:14:5646:5646	901893	73	True				
ANR	902113	CompoundStatement		44:4:651:651	901893	74					
ANR	902114	Statement	131	292:5:5653:5655	901893	0	True				
ANR	902115	Statement	","	292:8:5656:5656	901893	1	True				
ANR	902116	Statement	106	292:10:5658:5660	901893	2	True				
ANR	902117	Statement	","	292:14:5662:5662	901893	75	True				
ANR	902118	CompoundStatement		45:4:667:667	901893	76					
ANR	902119	Statement	131	293:5:5669:5671	901893	0	True				
ANR	902120	Statement	","	293:8:5672:5672	901893	1	True				
ANR	902121	Statement	107	293:10:5674:5676	901893	2	True				
ANR	902122	Statement	","	293:14:5678:5678	901893	77	True				
ANR	902123	CompoundStatement		46:4:683:683	901893	78					
ANR	902124	Statement	131	294:5:5685:5687	901893	0	True				
ANR	902125	Statement	","	294:8:5688:5688	901893	1	True				
ANR	902126	Statement	108	294:10:5690:5692	901893	2	True				
ANR	902127	Statement	","	294:14:5694:5694	901893	79	True				
ANR	902128	CompoundStatement		47:4:699:699	901893	80					
ANR	902129	Statement	131	295:5:5701:5703	901893	0	True				
ANR	902130	Statement	","	295:8:5704:5704	901893	1	True				
ANR	902131	Statement	109	295:10:5706:5708	901893	2	True				
ANR	902132	Statement	","	295:14:5710:5710	901893	81	True				
ANR	902133	CompoundStatement		48:4:715:715	901893	82					
ANR	902134	Statement	131	296:5:5717:5719	901893	0	True				
ANR	902135	Statement	","	296:8:5720:5720	901893	1	True				
ANR	902136	Statement	110	296:10:5722:5724	901893	2	True				
ANR	902137	Statement	","	296:14:5726:5726	901893	83	True				
ANR	902138	CompoundStatement		49:4:731:731	901893	84					
ANR	902139	Statement	131	297:5:5733:5735	901893	0	True				
ANR	902140	Statement	","	297:8:5736:5736	901893	1	True				
ANR	902141	Statement	113	297:10:5738:5740	901893	2	True				
ANR	902142	Statement	","	297:14:5742:5742	901893	85	True				
ANR	902143	CompoundStatement		50:4:747:747	901893	86					
ANR	902144	Statement	131	298:5:5749:5751	901893	0	True				
ANR	902145	Statement	","	298:8:5752:5752	901893	1	True				
ANR	902146	Statement	116	298:10:5754:5756	901893	2	True				
ANR	902147	Statement	","	298:14:5758:5758	901893	87	True				
ANR	902148	CompoundStatement		51:4:763:763	901893	88					
ANR	902149	Statement	131	299:5:5765:5767	901893	0	True				
ANR	902150	Statement	","	299:8:5768:5768	901893	1	True				
ANR	902151	Statement	119	299:10:5770:5772	901893	2	True				
ANR	902152	Statement	","	299:14:5774:5774	901893	89	True				
ANR	902153	CompoundStatement		52:4:779:779	901893	90					
ANR	902154	Statement	131	300:5:5781:5783	901893	0	True				
ANR	902155	Statement	","	300:8:5784:5784	901893	1	True				
ANR	902156	Statement	122	300:10:5786:5788	901893	2	True				
ANR	902157	Statement	","	300:14:5790:5790	901893	91	True				
ANR	902158	CompoundStatement		53:4:795:795	901893	92					
ANR	902159	Statement	131	301:5:5797:5799	901893	0	True				
ANR	902160	Statement	","	301:8:5800:5800	901893	1	True				
ANR	902161	Statement	125	301:10:5802:5804	901893	2	True				
ANR	902162	Statement	","	301:14:5806:5806	901893	93	True				
ANR	902163	CompoundStatement		54:4:811:811	901893	94					
ANR	902164	Statement	131	302:5:5813:5815	901893	0	True				
ANR	902165	Statement	","	302:8:5816:5816	901893	1	True				
ANR	902166	Statement	126	302:10:5818:5820	901893	2	True				
ANR	902167	Statement	","	302:14:5822:5822	901893	95	True				
ANR	902168	CompoundStatement		55:4:827:827	901893	96					
ANR	902169	Statement	131	303:5:5829:5831	901893	0	True				
ANR	902170	Statement	","	303:8:5832:5832	901893	1	True				
ANR	902171	Statement	128	303:10:5834:5836	901893	2	True				
ANR	902172	Statement	","	303:14:5838:5838	901893	97	True				
ANR	902173	CompoundStatement		56:4:843:843	901893	98					
ANR	902174	Statement	131	304:5:5845:5847	901893	0	True				
ANR	902175	Statement	","	304:8:5848:5848	901893	1	True				
ANR	902176	Statement	129	304:10:5850:5852	901893	2	True				
ANR	902177	Statement	","	304:14:5854:5854	901893	99	True				
ANR	902178	CompoundStatement		57:4:859:859	901893	100					
ANR	902179	Statement	131	305:5:5861:5863	901893	0	True				
ANR	902180	Statement	","	305:8:5864:5864	901893	1	True				
ANR	902181	Statement	130	305:10:5866:5868	901893	2	True				
ANR	902182	Statement	","	305:14:5870:5870	901893	101	True				
ANR	902183	CompoundStatement		58:4:875:875	901893	102					
ANR	902184	Statement	131	306:5:5877:5879	901893	0	True				
ANR	902185	Statement	","	306:8:5880:5880	901893	1	True				
ANR	902186	Statement	132	306:10:5882:5884	901893	2	True				
ANR	902187	Statement	","	306:14:5886:5886	901893	103	True				
ANR	902188	CompoundStatement		59:4:891:891	901893	104					
ANR	902189	Statement	131	307:5:5893:5895	901893	0	True				
ANR	902190	Statement	","	307:8:5896:5896	901893	1	True				
ANR	902191	Statement	134	307:10:5898:5900	901893	2	True				
ANR	902192	Statement	","	307:14:5902:5902	901893	105	True				
ANR	902193	CompoundStatement		60:4:907:907	901893	106					
ANR	902194	Statement	131	308:5:5909:5911	901893	0	True				
ANR	902195	Statement	","	308:8:5912:5912	901893	1	True				
ANR	902196	Statement	136	308:10:5914:5916	901893	2	True				
ANR	902197	Statement	","	308:14:5918:5918	901893	107	True				
ANR	902198	CompoundStatement		61:4:923:923	901893	108					
ANR	902199	Statement	131	309:5:5925:5927	901893	0	True				
ANR	902200	Statement	","	309:8:5928:5928	901893	1	True				
ANR	902201	Statement	137	309:10:5930:5932	901893	2	True				
ANR	902202	Statement	","	309:14:5934:5934	901893	109	True				
ANR	902203	CompoundStatement		62:4:939:939	901893	110					
ANR	902204	Statement	131	310:5:5941:5943	901893	0	True				
ANR	902205	Statement	","	310:8:5944:5944	901893	1	True				
ANR	902206	Statement	138	310:10:5946:5948	901893	2	True				
ANR	902207	Statement	","	310:14:5950:5950	901893	111	True				
ANR	902208	CompoundStatement		63:4:955:955	901893	112					
ANR	902209	Statement	131	311:5:5957:5959	901893	0	True				
ANR	902210	Statement	","	311:8:5960:5960	901893	1	True				
ANR	902211	Statement	139	311:10:5962:5964	901893	2	True				
ANR	902212	Statement	","	311:14:5966:5966	901893	113	True				
ANR	902213	CompoundStatement		64:4:971:971	901893	114					
ANR	902214	Statement	131	312:5:5973:5975	901893	0	True				
ANR	902215	Statement	","	312:8:5976:5976	901893	1	True				
ANR	902216	Statement	140	312:10:5978:5980	901893	2	True				
ANR	902217	Statement	","	312:14:5982:5982	901893	115	True				
ANR	902218	CompoundStatement		65:4:987:987	901893	116					
ANR	902219	Statement	131	313:5:5989:5991	901893	0	True				
ANR	902220	Statement	","	313:8:5992:5992	901893	1	True				
ANR	902221	Statement	141	313:10:5994:5996	901893	2	True				
ANR	902222	Statement	","	313:14:5998:5998	901893	117	True				
ANR	902223	CompoundStatement		66:4:1003:1003	901893	118					
ANR	902224	Statement	131	314:5:6005:6007	901893	0	True				
ANR	902225	Statement	","	314:8:6008:6008	901893	1	True				
ANR	902226	Statement	143	314:10:6010:6012	901893	2	True				
ANR	902227	Statement	","	314:14:6014:6014	901893	119	True				
ANR	902228	CompoundStatement		67:4:1019:1019	901893	120					
ANR	902229	Statement	131	315:5:6021:6023	901893	0	True				
ANR	902230	Statement	","	315:8:6024:6024	901893	1	True				
ANR	902231	Statement	147	315:10:6026:6028	901893	2	True				
ANR	902232	Statement	","	315:14:6030:6030	901893	121	True				
ANR	902233	CompoundStatement		68:4:1035:1035	901893	122					
ANR	902234	Statement	129	316:5:6037:6039	901893	0	True				
ANR	902235	Statement	","	316:8:6040:6040	901893	1	True				
ANR	902236	Statement	74	316:10:6042:6043	901893	2	True				
ANR	902237	Statement	","	316:13:6045:6045	901893	123	True				
ANR	902238	CompoundStatement		69:4:1050:1050	901893	124					
ANR	902239	Statement	129	317:5:6052:6054	901893	0	True				
ANR	902240	Statement	","	317:8:6055:6055	901893	1	True				
ANR	902241	Statement	75	317:10:6057:6058	901893	2	True				
ANR	902242	ExpressionStatement		318:3:6064:6064	901893	12	True				
ANR	902243	IfStatement	if ( * p2 == 222 && IS_DAKU ( * p1 ) )		901893	13					
ANR	902244	Condition	* p2 == 222 && IS_DAKU ( * p1 )	320:6:6073:6099	901893	0	True				
ANR	902245	AndExpression	* p2 == 222 && IS_DAKU ( * p1 )		901893	0		&&			
ANR	902246	EqualityExpression	* p2 == 222		901893	0		==			
ANR	902247	UnaryOperationExpression	* p2		901893	0					
ANR	902248	UnaryOperator	*		901893	0					
ANR	902249	Identifier	p2		901893	1					
ANR	902250	PrimaryExpression	222		901893	1					
ANR	902251	CallExpression	IS_DAKU ( * p1 )		901893	1					
ANR	902252	Callee	IS_DAKU		901893	0					
ANR	902253	Identifier	IS_DAKU		901893	0					
ANR	902254	ArgumentList	* p1		901893	1					
ANR	902255	Argument	* p1		901893	0					
ANR	902256	UnaryOperationExpression	* p1		901893	0					
ANR	902257	UnaryOperator	*		901893	0					
ANR	902258	Identifier	p1		901893	1					
ANR	902259	ExpressionStatement	daku = TRUE	321:4:6106:6117	901893	1	True				
ANR	902260	AssignmentExpression	daku = TRUE		901893	0		=			
ANR	902261	Identifier	daku		901893	0					
ANR	902262	Identifier	TRUE		901893	1					
ANR	902263	ElseStatement	else		901893	0					
ANR	902264	IfStatement	if ( * p2 == 223 && IS_HANDAKU ( * p1 ) )		901893	0					
ANR	902265	Condition	* p2 == 223 && IS_HANDAKU ( * p1 )	322:11:6146:6175	901893	0	True				
ANR	902266	AndExpression	* p2 == 223 && IS_HANDAKU ( * p1 )		901893	0		&&			
ANR	902267	EqualityExpression	* p2 == 223		901893	0		==			
ANR	902268	UnaryOperationExpression	* p2		901893	0					
ANR	902269	UnaryOperator	*		901893	0					
ANR	902270	Identifier	p2		901893	1					
ANR	902271	PrimaryExpression	223		901893	1					
ANR	902272	CallExpression	IS_HANDAKU ( * p1 )		901893	1					
ANR	902273	Callee	IS_HANDAKU		901893	0					
ANR	902274	Identifier	IS_HANDAKU		901893	0					
ANR	902275	ArgumentList	* p1		901893	1					
ANR	902276	Argument	* p1		901893	0					
ANR	902277	UnaryOperationExpression	* p1		901893	0					
ANR	902278	UnaryOperator	*		901893	0					
ANR	902279	Identifier	p1		901893	1					
ANR	902280	ExpressionStatement	handaku = TRUE	323:4:6182:6196	901893	1	True				
ANR	902281	AssignmentExpression	handaku = TRUE		901893	0		=			
ANR	902282	Identifier	handaku		901893	0					
ANR	902283	Identifier	TRUE		901893	1					
ANR	902284	ExpressionStatement	* p1 = mtable [ c - 161 ] [ 0 ]	325:2:6221:6245	901893	14	True				
ANR	902285	AssignmentExpression	* p1 = mtable [ c - 161 ] [ 0 ]		901893	0		=			
ANR	902286	UnaryOperationExpression	* p1		901893	0					
ANR	902287	UnaryOperator	*		901893	0					
ANR	902288	Identifier	p1		901893	1					
ANR	902289	ArrayIndexing	mtable [ c - 161 ] [ 0 ]		901893	1					
ANR	902290	ArrayIndexing	mtable [ c - 161 ]		901893	0					
ANR	902291	Identifier	mtable		901893	0					
ANR	902292	AdditiveExpression	c - 161		901893	1		-			
ANR	902293	Identifier	c		901893	0					
ANR	902294	PrimaryExpression	161		901893	1					
ANR	902295	PrimaryExpression	0		901893	1					
ANR	902296	ExpressionStatement	* p2 = mtable [ c - 161 ] [ 1 ]	326:2:6249:6273	901893	15	True				
ANR	902297	AssignmentExpression	* p2 = mtable [ c - 161 ] [ 1 ]		901893	0		=			
ANR	902298	UnaryOperationExpression	* p2		901893	0					
ANR	902299	UnaryOperator	*		901893	0					
ANR	902300	Identifier	p2		901893	1					
ANR	902301	ArrayIndexing	mtable [ c - 161 ] [ 1 ]		901893	1					
ANR	902302	ArrayIndexing	mtable [ c - 161 ]		901893	0					
ANR	902303	Identifier	mtable		901893	0					
ANR	902304	AdditiveExpression	c - 161		901893	1		-			
ANR	902305	Identifier	c		901893	0					
ANR	902306	PrimaryExpression	161		901893	1					
ANR	902307	PrimaryExpression	1		901893	1					
ANR	902308	IfStatement	if ( daku )		901893	16					
ANR	902309	Condition	daku	328:6:6282:6285	901893	0	True				
ANR	902310	Identifier	daku		901893	0					
ANR	902311	CompoundStatement		81:4:1291:1291	901893	1					
ANR	902312	IfStatement	if ( ( * p2 >= 74 && * p2 <= 103 ) || ( * p2 >= 110 && * p2 <= 122 ) )		901893	0					
ANR	902313	Condition	( * p2 >= 74 && * p2 <= 103 ) || ( * p2 >= 110 && * p2 <= 122 )	330:10:6304:6358	901893	0	True				
ANR	902314	OrExpression	( * p2 >= 74 && * p2 <= 103 ) || ( * p2 >= 110 && * p2 <= 122 )		901893	0		||			
ANR	902315	AndExpression	* p2 >= 74 && * p2 <= 103		901893	0		&&			
ANR	902316	RelationalExpression	* p2 >= 74		901893	0		>=			
ANR	902317	UnaryOperationExpression	* p2		901893	0					
ANR	902318	UnaryOperator	*		901893	0					
ANR	902319	Identifier	p2		901893	1					
ANR	902320	PrimaryExpression	74		901893	1					
ANR	902321	RelationalExpression	* p2 <= 103		901893	1		<=			
ANR	902322	UnaryOperationExpression	* p2		901893	0					
ANR	902323	UnaryOperator	*		901893	0					
ANR	902324	Identifier	p2		901893	1					
ANR	902325	PrimaryExpression	103		901893	1					
ANR	902326	AndExpression	* p2 >= 110 && * p2 <= 122		901893	1		&&			
ANR	902327	RelationalExpression	* p2 >= 110		901893	0		>=			
ANR	902328	UnaryOperationExpression	* p2		901893	0					
ANR	902329	UnaryOperator	*		901893	0					
ANR	902330	Identifier	p2		901893	1					
ANR	902331	PrimaryExpression	110		901893	1					
ANR	902332	RelationalExpression	* p2 <= 122		901893	1		<=			
ANR	902333	UnaryOperationExpression	* p2		901893	0					
ANR	902334	UnaryOperator	*		901893	0					
ANR	902335	Identifier	p2		901893	1					
ANR	902336	PrimaryExpression	122		901893	1					
ANR	902337	ExpressionStatement	( * p2 ) ++	331:1:6362:6369	901893	1	True				
ANR	902338	PostIncDecOperationExpression	( * p2 ) ++		901893	0					
ANR	902339	UnaryOperationExpression	* p2		901893	0					
ANR	902340	UnaryOperator	*		901893	0					
ANR	902341	Identifier	p2		901893	1					
ANR	902342	IncDec	++		901893	1					
ANR	902343	ElseStatement	else		901893	0					
ANR	902344	IfStatement	if ( * p2 == 131 && * p2 == 69 )		901893	0					
ANR	902345	Condition	* p2 == 131 && * p2 == 69	332:15:6386:6408	901893	0	True				
ANR	902346	AndExpression	* p2 == 131 && * p2 == 69		901893	0		&&			
ANR	902347	EqualityExpression	* p2 == 131		901893	0		==			
ANR	902348	UnaryOperationExpression	* p2		901893	0					
ANR	902349	UnaryOperator	*		901893	0					
ANR	902350	Identifier	p2		901893	1					
ANR	902351	PrimaryExpression	131		901893	1					
ANR	902352	EqualityExpression	* p2 == 69		901893	1		==			
ANR	902353	UnaryOperationExpression	* p2		901893	0					
ANR	902354	UnaryOperator	*		901893	0					
ANR	902355	Identifier	p2		901893	1					
ANR	902356	PrimaryExpression	69		901893	1					
ANR	902357	ExpressionStatement	* p2 = 148	333:1:6412:6421	901893	1	True				
ANR	902358	AssignmentExpression	* p2 = 148		901893	0		=			
ANR	902359	UnaryOperationExpression	* p2		901893	0					
ANR	902360	UnaryOperator	*		901893	0					
ANR	902361	Identifier	p2		901893	1					
ANR	902362	PrimaryExpression	148		901893	1					
ANR	902363	ElseStatement	else		901893	0					
ANR	902364	IfStatement	if ( handaku && * p2 >= 110 && * p2 <= 122 )		901893	0					
ANR	902365	Condition	handaku && * p2 >= 110 && * p2 <= 122	335:11:6440:6474	901893	0	True				
ANR	902366	AndExpression	handaku && * p2 >= 110 && * p2 <= 122		901893	0		&&			
ANR	902367	Identifier	handaku		901893	0					
ANR	902368	AndExpression	* p2 >= 110 && * p2 <= 122		901893	1		&&			
ANR	902369	RelationalExpression	* p2 >= 110		901893	0		>=			
ANR	902370	UnaryOperationExpression	* p2		901893	0					
ANR	902371	UnaryOperator	*		901893	0					
ANR	902372	Identifier	p2		901893	1					
ANR	902373	PrimaryExpression	110		901893	1					
ANR	902374	RelationalExpression	* p2 <= 122		901893	1		<=			
ANR	902375	UnaryOperationExpression	* p2		901893	0					
ANR	902376	UnaryOperator	*		901893	0					
ANR	902377	Identifier	p2		901893	1					
ANR	902378	PrimaryExpression	122		901893	1					
ANR	902379	ExpressionStatement	( * p2 ) += 2	336:4:6481:6491	901893	1	True				
ANR	902380	AssignmentExpression	( * p2 ) += 2		901893	0		+=			
ANR	902381	UnaryOperationExpression	* p2		901893	0					
ANR	902382	UnaryOperator	*		901893	0					
ANR	902383	Identifier	p2		901893	1					
ANR	902384	PrimaryExpression	2		901893	1					
ANR	902385	ReturnType	static void		901893	1					
ANR	902386	Identifier	han2zen		901893	2					
ANR	902387	ParameterList	"int * p1 , int * p2"		901893	3					
ANR	902388	Parameter	int * p1	248:9:4982:4988	901893	0	True				
ANR	902389	ParameterType	int *		901893	0					
ANR	902390	Identifier	p1		901893	1					
ANR	902391	Parameter	int * p2	248:18:4991:4997	901893	1	True				
ANR	902392	ParameterType	int *		901893	0					
ANR	902393	Identifier	p2		901893	1					
ANR	902394	CFGEntryNode	ENTRY		901893		True				
ANR	902395	CFGExitNode	EXIT		901893		True				
ANR	902396	Symbol	IS_HANDAKU		901893						
ANR	902397	Symbol	p1		901893						
ANR	902398	Symbol	p2		901893						
ANR	902399	Symbol	c		901893						
ANR	902400	Symbol	* p1		901893						
ANR	902401	Symbol	* * c		901893						
ANR	902402	Symbol	daku		901893						
ANR	902403	Symbol	TRUE		901893						
ANR	902404	Symbol	* p2		901893						
ANR	902405	Symbol	* c		901893						
ANR	902406	Symbol	* * mtable		901893						
ANR	902407	Symbol	mtable		901893						
ANR	902408	Symbol	handaku		901893						
ANR	902409	Symbol	FALSE		901893						
ANR	902410	Symbol	* mtable		901893						
ANR	902411	Symbol	IS_DAKU		901893						
ANR	902412	Function	do_convert	342:0:6613:9027							
ANR	902413	FunctionDef	"do_convert (unsigned char * to , unsigned char * from , const char * code)"		902412	0					
ANR	902414	CompoundStatement		344:0:6695:9027	902412	0					
ANR	902415	IdentifierDeclStatement	iconv_t cd ;	346:2:6717:6727	902412	0	True				
ANR	902416	IdentifierDecl	cd		902412	0					
ANR	902417	IdentifierDeclType	iconv_t		902412	0					
ANR	902418	Identifier	cd		902412	1					
ANR	902419	IdentifierDeclStatement	"size_t from_len , to_len ;"	347:2:6731:6754	902412	1	True				
ANR	902420	IdentifierDecl	from_len		902412	0					
ANR	902421	IdentifierDeclType	size_t		902412	0					
ANR	902422	Identifier	from_len		902412	1					
ANR	902423	IdentifierDecl	to_len		902412	1					
ANR	902424	IdentifierDeclType	size_t		902412	0					
ANR	902425	Identifier	to_len		902412	1					
ANR	902426	IfStatement	"if ( ( cd = iconv_open ( EUCSTR , code ) ) == ( iconv_t ) - 1 )"		902412	2					
ANR	902427	Condition	"( cd = iconv_open ( EUCSTR , code ) ) == ( iconv_t ) - 1"	349:6:6763:6811	902412	0	True				
ANR	902428	EqualityExpression	"( cd = iconv_open ( EUCSTR , code ) ) == ( iconv_t ) - 1"		902412	0		==			
ANR	902429	AssignmentExpression	"cd = iconv_open ( EUCSTR , code )"		902412	0		=			
ANR	902430	Identifier	cd		902412	0					
ANR	902431	CallExpression	"iconv_open ( EUCSTR , code )"		902412	1					
ANR	902432	Callee	iconv_open		902412	0					
ANR	902433	Identifier	iconv_open		902412	0					
ANR	902434	ArgumentList	EUCSTR		902412	1					
ANR	902435	Argument	EUCSTR		902412	0					
ANR	902436	Identifier	EUCSTR		902412	0					
ANR	902437	Argument	code		902412	1					
ANR	902438	Identifier	code		902412	0					
ANR	902439	CastExpression	( iconv_t ) - 1		902412	1					
ANR	902440	CastTarget	iconv_t		902412	0					
ANR	902441	UnaryOperationExpression	- 1		902412	1					
ANR	902442	UnaryOperator	-		902412	0					
ANR	902443	PrimaryExpression	1		902412	1					
ANR	902444	CompoundStatement		7:4:122:122	902412	1					
ANR	902445	ExpressionStatement	"error ( ""iconv_open() error"" )"	351:6:6826:6854	902412	0	True				
ANR	902446	CallExpression	"error ( ""iconv_open() error"" )"		902412	0					
ANR	902447	Callee	error		902412	0					
ANR	902448	Identifier	error		902412	0					
ANR	902449	ArgumentList	"""iconv_open() error"""		902412	1					
ANR	902450	Argument	"""iconv_open() error"""		902412	0					
ANR	902451	PrimaryExpression	"""iconv_open() error"""		902412	0					
ANR	902452	IfStatement	if ( errno == EINVAL )		902412	1					
ANR	902453	Condition	errno == EINVAL	353:10:6886:6900	902412	0	True				
ANR	902454	EqualityExpression	errno == EINVAL		902412	0		==			
ANR	902455	Identifier	errno		902412	0					
ANR	902456	Identifier	EINVAL		902412	1					
ANR	902457	ExpressionStatement	"error ( ""invalid code specification: \\""%s\\"" or \\""%s\\"""" , EUCSTR , code )"	354:1:6904:6980	902412	1	True				
ANR	902458	CallExpression	"error ( ""invalid code specification: \\""%s\\"" or \\""%s\\"""" , EUCSTR , code )"		902412	0					
ANR	902459	Callee	error		902412	0					
ANR	902460	Identifier	error		902412	0					
ANR	902461	ArgumentList	"""invalid code specification: \\""%s\\"" or \\""%s\\"""""		902412	1					
ANR	902462	Argument	"""invalid code specification: \\""%s\\"" or \\""%s\\"""""		902412	0					
ANR	902463	PrimaryExpression	"""invalid code specification: \\""%s\\"" or \\""%s\\"""""		902412	0					
ANR	902464	Argument	EUCSTR		902412	1					
ANR	902465	Identifier	EUCSTR		902412	0					
ANR	902466	Argument	code		902412	2					
ANR	902467	Identifier	code		902412	0					
ANR	902468	ExpressionStatement	"strcpy ( ( char * ) to , ( const char * ) from )"	357:6:6995:7036	902412	2	True				
ANR	902469	CallExpression	"strcpy ( ( char * ) to , ( const char * ) from )"		902412	0					
ANR	902470	Callee	strcpy		902412	0					
ANR	902471	Identifier	strcpy		902412	0					
ANR	902472	ArgumentList	( char * ) to		902412	1					
ANR	902473	Argument	( char * ) to		902412	0					
ANR	902474	CastExpression	( char * ) to		902412	0					
ANR	902475	CastTarget	char *		902412	0					
ANR	902476	Identifier	to		902412	1					
ANR	902477	Argument	( const char * ) from		902412	1					
ANR	902478	CastExpression	( const char * ) from		902412	0					
ANR	902479	CastTarget	const char *		902412	0					
ANR	902480	Identifier	from		902412	1					
ANR	902481	ReturnStatement	return ;	358:6:7044:7050	902412	3	True				
ANR	902482	ExpressionStatement	from_len = strlen ( ( const char * ) from ) + 1	361:2:7061:7104	902412	3	True				
ANR	902483	AssignmentExpression	from_len = strlen ( ( const char * ) from ) + 1		902412	0		=			
ANR	902484	Identifier	from_len		902412	0					
ANR	902485	AdditiveExpression	strlen ( ( const char * ) from ) + 1		902412	1		+			
ANR	902486	CallExpression	strlen ( ( const char * ) from )		902412	0					
ANR	902487	Callee	strlen		902412	0					
ANR	902488	Identifier	strlen		902412	0					
ANR	902489	ArgumentList	( const char * ) from		902412	1					
ANR	902490	Argument	( const char * ) from		902412	0					
ANR	902491	CastExpression	( const char * ) from		902412	0					
ANR	902492	CastTarget	const char *		902412	0					
ANR	902493	Identifier	from		902412	1					
ANR	902494	PrimaryExpression	1		902412	1					
ANR	902495	ExpressionStatement	to_len = BUFSIZ	362:2:7108:7123	902412	4	True				
ANR	902496	AssignmentExpression	to_len = BUFSIZ		902412	0		=			
ANR	902497	Identifier	to_len		902412	0					
ANR	902498	Identifier	BUFSIZ		902412	1					
ANR	902499	IfStatement	"if ( ( int ) iconv ( cd , ( char * * ) & from , & from_len , ( char * * ) & to , & to_len ) == - 1 )"		902412	5					
ANR	902500	Condition	"( int ) iconv ( cd , ( char * * ) & from , & from_len , ( char * * ) & to , & to_len ) == - 1"	364:6:7132:7204	902412	0	True				
ANR	902501	EqualityExpression	"( int ) iconv ( cd , ( char * * ) & from , & from_len , ( char * * ) & to , & to_len ) == - 1"		902412	0		==			
ANR	902502	CastExpression	"( int ) iconv ( cd , ( char * * ) & from , & from_len , ( char * * ) & to , & to_len )"		902412	0					
ANR	902503	CastTarget	int		902412	0					
ANR	902504	CallExpression	"iconv ( cd , ( char * * ) & from , & from_len , ( char * * ) & to , & to_len )"		902412	1					
ANR	902505	Callee	iconv		902412	0					
ANR	902506	Identifier	iconv		902412	0					
ANR	902507	ArgumentList	cd		902412	1					
ANR	902508	Argument	cd		902412	0					
ANR	902509	Identifier	cd		902412	0					
ANR	902510	Argument	( char * * ) & from		902412	1					
ANR	902511	CastExpression	( char * * ) & from		902412	0					
ANR	902512	CastTarget	char * *		902412	0					
ANR	902513	UnaryOperationExpression	& from		902412	1					
ANR	902514	UnaryOperator	&		902412	0					
ANR	902515	Identifier	from		902412	1					
ANR	902516	Argument	& from_len		902412	2					
ANR	902517	UnaryOperationExpression	& from_len		902412	0					
ANR	902518	UnaryOperator	&		902412	0					
ANR	902519	Identifier	from_len		902412	1					
ANR	902520	Argument	( char * * ) & to		902412	3					
ANR	902521	CastExpression	( char * * ) & to		902412	0					
ANR	902522	CastTarget	char * *		902412	0					
ANR	902523	UnaryOperationExpression	& to		902412	1					
ANR	902524	UnaryOperator	&		902412	0					
ANR	902525	Identifier	to		902412	1					
ANR	902526	Argument	& to_len		902412	4					
ANR	902527	UnaryOperationExpression	& to_len		902412	0					
ANR	902528	UnaryOperator	&		902412	0					
ANR	902529	Identifier	to_len		902412	1					
ANR	902530	UnaryOperationExpression	- 1		902412	1					
ANR	902531	UnaryOperator	-		902412	0					
ANR	902532	PrimaryExpression	1		902412	1					
ANR	902533	CompoundStatement		22:4:515:515	902412	1					
ANR	902534	IfStatement	if ( errno == EINVAL )		902412	0					
ANR	902535	Condition	errno == EINVAL	367:10:7243:7257	902412	0	True				
ANR	902536	EqualityExpression	errno == EINVAL		902412	0		==			
ANR	902537	Identifier	errno		902412	0					
ANR	902538	Identifier	EINVAL		902412	1					
ANR	902539	ExpressionStatement	"error ( ""invalid end of input string"" )"	368:1:7261:7298	902412	1	True				
ANR	902540	CallExpression	"error ( ""invalid end of input string"" )"		902412	0					
ANR	902541	Callee	error		902412	0					
ANR	902542	Identifier	error		902412	0					
ANR	902543	ArgumentList	"""invalid end of input string"""		902412	1					
ANR	902544	Argument	"""invalid end of input string"""		902412	0					
ANR	902545	PrimaryExpression	"""invalid end of input string"""		902412	0					
ANR	902546	ElseStatement	else		902412	0					
ANR	902547	IfStatement	if ( errno == EILSEQ )		902412	0					
ANR	902548	Condition	errno == EILSEQ	369:15:7315:7329	902412	0	True				
ANR	902549	EqualityExpression	errno == EILSEQ		902412	0		==			
ANR	902550	Identifier	errno		902412	0					
ANR	902551	Identifier	EILSEQ		902412	1					
ANR	902552	ExpressionStatement	"error ( ""invalid code in input string"" )"	370:1:7333:7371	902412	1	True				
ANR	902553	CallExpression	"error ( ""invalid code in input string"" )"		902412	0					
ANR	902554	Callee	error		902412	0					
ANR	902555	Identifier	error		902412	0					
ANR	902556	ArgumentList	"""invalid code in input string"""		902412	1					
ANR	902557	Argument	"""invalid code in input string"""		902412	0					
ANR	902558	PrimaryExpression	"""invalid code in input string"""		902412	0					
ANR	902559	ElseStatement	else		902412	0					
ANR	902560	IfStatement	if ( errno == E2BIG )		902412	0					
ANR	902561	Condition	errno == E2BIG	371:15:7388:7401	902412	0	True				
ANR	902562	EqualityExpression	errno == E2BIG		902412	0		==			
ANR	902563	Identifier	errno		902412	0					
ANR	902564	Identifier	E2BIG		902412	1					
ANR	902565	ExpressionStatement	"error ( ""output buffer overflow at do_convert()"" )"	372:1:7405:7453	902412	1	True				
ANR	902566	CallExpression	"error ( ""output buffer overflow at do_convert()"" )"		902412	0					
ANR	902567	Callee	error		902412	0					
ANR	902568	Identifier	error		902412	0					
ANR	902569	ArgumentList	"""output buffer overflow at do_convert()"""		902412	1					
ANR	902570	Argument	"""output buffer overflow at do_convert()"""		902412	0					
ANR	902571	PrimaryExpression	"""output buffer overflow at do_convert()"""		902412	0					
ANR	902572	ElseStatement	else		902412	0					
ANR	902573	ExpressionStatement	"error ( ""something happen"" )"	375:1:7474:7500	902412	0	True				
ANR	902574	CallExpression	"error ( ""something happen"" )"		902412	0					
ANR	902575	Callee	error		902412	0					
ANR	902576	Identifier	error		902412	0					
ANR	902577	ArgumentList	"""something happen"""		902412	1					
ANR	902578	Argument	"""something happen"""		902412	0					
ANR	902579	PrimaryExpression	"""something happen"""		902412	0					
ANR	902580	ExpressionStatement	"strcpy ( ( char * ) to , ( const char * ) from )"	376:6:7508:7549	902412	1	True				
ANR	902581	CallExpression	"strcpy ( ( char * ) to , ( const char * ) from )"		902412	0					
ANR	902582	Callee	strcpy		902412	0					
ANR	902583	Identifier	strcpy		902412	0					
ANR	902584	ArgumentList	( char * ) to		902412	1					
ANR	902585	Argument	( char * ) to		902412	0					
ANR	902586	CastExpression	( char * ) to		902412	0					
ANR	902587	CastTarget	char *		902412	0					
ANR	902588	Identifier	to		902412	1					
ANR	902589	Argument	( const char * ) from		902412	1					
ANR	902590	CastExpression	( const char * ) from		902412	0					
ANR	902591	CastTarget	const char *		902412	0					
ANR	902592	Identifier	from		902412	1					
ANR	902593	ReturnStatement	return ;	377:6:7557:7563	902412	2	True				
ANR	902594	IfStatement	if ( iconv_close ( cd ) != 0 )		902412	6					
ANR	902595	Condition	iconv_close ( cd ) != 0	380:6:7578:7598	902412	0	True				
ANR	902596	EqualityExpression	iconv_close ( cd ) != 0		902412	0		!=			
ANR	902597	CallExpression	iconv_close ( cd )		902412	0					
ANR	902598	Callee	iconv_close		902412	0					
ANR	902599	Identifier	iconv_close		902412	0					
ANR	902600	ArgumentList	cd		902412	1					
ANR	902601	Argument	cd		902412	0					
ANR	902602	Identifier	cd		902412	0					
ANR	902603	PrimaryExpression	0		902412	1					
ANR	902604	CompoundStatement		38:4:909:909	902412	1					
ANR	902605	ExpressionStatement	"error ( ""iconv_close() error"" )"	382:6:7613:7642	902412	0	True				
ANR	902606	CallExpression	"error ( ""iconv_close() error"" )"		902412	0					
ANR	902607	Callee	error		902412	0					
ANR	902608	Identifier	error		902412	0					
ANR	902609	ArgumentList	"""iconv_close() error"""		902412	1					
ANR	902610	Argument	"""iconv_close() error"""		902412	0					
ANR	902611	PrimaryExpression	"""iconv_close() error"""		902412	0					
ANR	902612	ReturnType	static void		902412	1					
ANR	902613	Identifier	do_convert		902412	2					
ANR	902614	ParameterList	"unsigned char * to , unsigned char * from , const char * code"		902412	3					
ANR	902615	Parameter	unsigned char * to	343:12:6637:6653	902412	0	True				
ANR	902616	ParameterType	unsigned char *		902412	0					
ANR	902617	Identifier	to		902412	1					
ANR	902618	Parameter	unsigned char * from	343:31:6656:6674	902412	1	True				
ANR	902619	ParameterType	unsigned char *		902412	0					
ANR	902620	Identifier	from		902412	1					
ANR	902621	Parameter	const char * code	343:52:6677:6692	902412	2	True				
ANR	902622	ParameterType	const char *		902412	0					
ANR	902623	Identifier	code		902412	1					
ANR	902624	CFGEntryNode	ENTRY		902412		True				
ANR	902625	CFGExitNode	EXIT		902412		True				
ANR	902626	Symbol	cd		902412						
ANR	902627	Symbol	errno		902412						
ANR	902628	Symbol	code		902412						
ANR	902629	Symbol	& to		902412						
ANR	902630	Symbol	& to_len		902412						
ANR	902631	Symbol	to_len		902412						
ANR	902632	Symbol	iconv		902412						
ANR	902633	Symbol	& from		902412						
ANR	902634	Symbol	EINVAL		902412						
ANR	902635	Symbol	strlen		902412						
ANR	902636	Symbol	EILSEQ		902412						
ANR	902637	Symbol	& from_len		902412						
ANR	902638	Symbol	from_len		902412						
ANR	902639	Symbol	EUCSTR		902412						
ANR	902640	Symbol	iconv_close		902412						
ANR	902641	Symbol	E2BIG		902412						
ANR	902642	Symbol	from		902412						
ANR	902643	Symbol	to		902412						
ANR	902644	Symbol	iconv_open		902412						
ANR	902645	Symbol	BUFSIZ		902412						
ANR	902646	Function	do_check_and_conv	464:0:9030:10995							
ANR	902647	FunctionDef	"do_check_and_conv (unsigned char * to , unsigned char * from)"		902646	0					
ANR	902648	CompoundStatement		466:0:9100:10995	902646	0					
ANR	902649	Statement	static	467:2:9104:9109	902646	0	True				
ANR	902650	IdentifierDeclStatement	unsigned char tmp [ BUFSIZ ] ;	467:9:9111:9136	902646	1	True				
ANR	902651	IdentifierDecl	tmp [ BUFSIZ ]		902646	0					
ANR	902652	IdentifierDeclType	unsigned char [ BUFSIZ ]		902646	0					
ANR	902653	Identifier	tmp		902646	1					
ANR	902654	Identifier	BUFSIZ		902646	2					
ANR	902655	IdentifierDeclStatement	"int p1 , p2 , i , j ;"	468:2:9140:9156	902646	2	True				
ANR	902656	IdentifierDecl	p1		902646	0					
ANR	902657	IdentifierDeclType	int		902646	0					
ANR	902658	Identifier	p1		902646	1					
ANR	902659	IdentifierDecl	p2		902646	1					
ANR	902660	IdentifierDeclType	int		902646	0					
ANR	902661	Identifier	p2		902646	1					
ANR	902662	IdentifierDecl	i		902646	2					
ANR	902663	IdentifierDeclType	int		902646	0					
ANR	902664	Identifier	i		902646	1					
ANR	902665	IdentifierDecl	j		902646	3					
ANR	902666	IdentifierDeclType	int		902646	0					
ANR	902667	Identifier	j		902646	1					
ANR	902668	IdentifierDeclStatement	int kanji = TRUE ;	469:2:9160:9176	902646	3	True				
ANR	902669	IdentifierDecl	kanji = TRUE		902646	0					
ANR	902670	IdentifierDeclType	int		902646	0					
ANR	902671	Identifier	kanji		902646	1					
ANR	902672	AssignmentExpression	kanji = TRUE		902646	2		=			
ANR	902673	Identifier	TRUE		902646	0					
ANR	902674	Identifier	TRUE		902646	1					
ANR	902675	SwitchStatement	switch ( DetectKanjiCode ( from ) )		902646	4					
ANR	902676	Condition	DetectKanjiCode ( from )	471:10:9189:9210	902646	0	True				
ANR	902677	CallExpression	DetectKanjiCode ( from )		902646	0					
ANR	902678	Callee	DetectKanjiCode		902646	0					
ANR	902679	Identifier	DetectKanjiCode		902646	0					
ANR	902680	ArgumentList	from		902646	1					
ANR	902681	Argument	from		902646	0					
ANR	902682	Identifier	from		902646	0					
ANR	902683	CompoundStatement		7:4:116:116	902646	1					
ANR	902684	Label	case NEW :	473:4:9223:9231	902646	0	True				
ANR	902685	Identifier	NEW		902646	0					
ANR	902686	ExpressionStatement	"debug ( ""Kanji code is New JIS."" )"	474:6:9239:9271	902646	1	True				
ANR	902687	CallExpression	"debug ( ""Kanji code is New JIS."" )"		902646	0					
ANR	902688	Callee	debug		902646	0					
ANR	902689	Identifier	debug		902646	0					
ANR	902690	ArgumentList	"""Kanji code is New JIS."""		902646	1					
ANR	902691	Argument	"""Kanji code is New JIS."""		902646	0					
ANR	902692	PrimaryExpression	"""Kanji code is New JIS."""		902646	0					
ANR	902693	ExpressionStatement	"do_convert ( tmp , from , NEWJISSTR )"	475:6:9279:9312	902646	2	True				
ANR	902694	CallExpression	"do_convert ( tmp , from , NEWJISSTR )"		902646	0					
ANR	902695	Callee	do_convert		902646	0					
ANR	902696	Identifier	do_convert		902646	0					
ANR	902697	ArgumentList	tmp		902646	1					
ANR	902698	Argument	tmp		902646	0					
ANR	902699	Identifier	tmp		902646	0					
ANR	902700	Argument	from		902646	1					
ANR	902701	Identifier	from		902646	0					
ANR	902702	Argument	NEWJISSTR		902646	2					
ANR	902703	Identifier	NEWJISSTR		902646	0					
ANR	902704	BreakStatement	break ;	476:6:9320:9325	902646	3	True				
ANR	902705	Label	case OLD :	477:4:9331:9339	902646	4	True				
ANR	902706	Identifier	OLD		902646	0					
ANR	902707	ExpressionStatement	"debug ( ""Kanji code is Old JIS."" )"	478:6:9347:9379	902646	5	True				
ANR	902708	CallExpression	"debug ( ""Kanji code is Old JIS."" )"		902646	0					
ANR	902709	Callee	debug		902646	0					
ANR	902710	Identifier	debug		902646	0					
ANR	902711	ArgumentList	"""Kanji code is Old JIS."""		902646	1					
ANR	902712	Argument	"""Kanji code is Old JIS."""		902646	0					
ANR	902713	PrimaryExpression	"""Kanji code is Old JIS."""		902646	0					
ANR	902714	ExpressionStatement	"do_convert ( tmp , from , OLDJISSTR )"	479:6:9387:9420	902646	6	True				
ANR	902715	CallExpression	"do_convert ( tmp , from , OLDJISSTR )"		902646	0					
ANR	902716	Callee	do_convert		902646	0					
ANR	902717	Identifier	do_convert		902646	0					
ANR	902718	ArgumentList	tmp		902646	1					
ANR	902719	Argument	tmp		902646	0					
ANR	902720	Identifier	tmp		902646	0					
ANR	902721	Argument	from		902646	1					
ANR	902722	Identifier	from		902646	0					
ANR	902723	Argument	OLDJISSTR		902646	2					
ANR	902724	Identifier	OLDJISSTR		902646	0					
ANR	902725	BreakStatement	break ;	480:6:9428:9433	902646	7	True				
ANR	902726	Label	case ESCI :	481:4:9439:9448	902646	8	True				
ANR	902727	Identifier	ESCI		902646	0					
ANR	902728	ExpressionStatement	"debug ( ""This string includes Hankaku-Kana (jisx0201) escape sequence [ESC] + ( + I."" )"	482:6:9456:9541	902646	9	True				
ANR	902729	CallExpression	"debug ( ""This string includes Hankaku-Kana (jisx0201) escape sequence [ESC] + ( + I."" )"		902646	0					
ANR	902730	Callee	debug		902646	0					
ANR	902731	Identifier	debug		902646	0					
ANR	902732	ArgumentList	"""This string includes Hankaku-Kana (jisx0201) escape sequence [ESC] + ( + I."""		902646	1					
ANR	902733	Argument	"""This string includes Hankaku-Kana (jisx0201) escape sequence [ESC] + ( + I."""		902646	0					
ANR	902734	PrimaryExpression	"""This string includes Hankaku-Kana (jisx0201) escape sequence [ESC] + ( + I."""		902646	0					
ANR	902735	ExpressionStatement	"do_convert ( tmp , from , NEWJISSTR )"	483:6:9549:9582	902646	10	True				
ANR	902736	CallExpression	"do_convert ( tmp , from , NEWJISSTR )"		902646	0					
ANR	902737	Callee	do_convert		902646	0					
ANR	902738	Identifier	do_convert		902646	0					
ANR	902739	ArgumentList	tmp		902646	1					
ANR	902740	Argument	tmp		902646	0					
ANR	902741	Identifier	tmp		902646	0					
ANR	902742	Argument	from		902646	1					
ANR	902743	Identifier	from		902646	0					
ANR	902744	Argument	NEWJISSTR		902646	2					
ANR	902745	Identifier	NEWJISSTR		902646	0					
ANR	902746	BreakStatement	break ;	484:6:9590:9595	902646	11	True				
ANR	902747	Label	case NEC :	485:4:9601:9609	902646	12	True				
ANR	902748	Identifier	NEC		902646	0					
ANR	902749	ExpressionStatement	"debug ( ""Kanji code is NEC Kanji."" )"	486:6:9617:9651	902646	13	True				
ANR	902750	CallExpression	"debug ( ""Kanji code is NEC Kanji."" )"		902646	0					
ANR	902751	Callee	debug		902646	0					
ANR	902752	Identifier	debug		902646	0					
ANR	902753	ArgumentList	"""Kanji code is NEC Kanji."""		902646	1					
ANR	902754	Argument	"""Kanji code is NEC Kanji."""		902646	0					
ANR	902755	PrimaryExpression	"""Kanji code is NEC Kanji."""		902646	0					
ANR	902756	ExpressionStatement	"error ( ""cannot convert NEC Kanji."" )"	487:6:9659:9694	902646	14	True				
ANR	902757	CallExpression	"error ( ""cannot convert NEC Kanji."" )"		902646	0					
ANR	902758	Callee	error		902646	0					
ANR	902759	Identifier	error		902646	0					
ANR	902760	ArgumentList	"""cannot convert NEC Kanji."""		902646	1					
ANR	902761	Argument	"""cannot convert NEC Kanji."""		902646	0					
ANR	902762	PrimaryExpression	"""cannot convert NEC Kanji."""		902646	0					
ANR	902763	ExpressionStatement	"ustrcpy ( tmp , from )"	488:6:9702:9721	902646	15	True				
ANR	902764	CallExpression	"ustrcpy ( tmp , from )"		902646	0					
ANR	902765	Callee	ustrcpy		902646	0					
ANR	902766	Identifier	ustrcpy		902646	0					
ANR	902767	ArgumentList	tmp		902646	1					
ANR	902768	Argument	tmp		902646	0					
ANR	902769	Identifier	tmp		902646	0					
ANR	902770	Argument	from		902646	1					
ANR	902771	Identifier	from		902646	0					
ANR	902772	ExpressionStatement	kanji = FALSE	489:6:9729:9742	902646	16	True				
ANR	902773	AssignmentExpression	kanji = FALSE		902646	0		=			
ANR	902774	Identifier	kanji		902646	0					
ANR	902775	Identifier	FALSE		902646	1					
ANR	902776	BreakStatement	break ;	490:6:9750:9755	902646	17	True				
ANR	902777	Label	case EUC :	491:4:9761:9769	902646	18	True				
ANR	902778	Identifier	EUC		902646	0					
ANR	902779	ExpressionStatement	"debug ( ""Kanji code is EUC."" )"	492:6:9777:9805	902646	19	True				
ANR	902780	CallExpression	"debug ( ""Kanji code is EUC."" )"		902646	0					
ANR	902781	Callee	debug		902646	0					
ANR	902782	Identifier	debug		902646	0					
ANR	902783	ArgumentList	"""Kanji code is EUC."""		902646	1					
ANR	902784	Argument	"""Kanji code is EUC."""		902646	0					
ANR	902785	PrimaryExpression	"""Kanji code is EUC."""		902646	0					
ANR	902786	ExpressionStatement	"ustrcpy ( tmp , from )"	493:6:9813:9832	902646	20	True				
ANR	902787	CallExpression	"ustrcpy ( tmp , from )"		902646	0					
ANR	902788	Callee	ustrcpy		902646	0					
ANR	902789	Identifier	ustrcpy		902646	0					
ANR	902790	ArgumentList	tmp		902646	1					
ANR	902791	Argument	tmp		902646	0					
ANR	902792	Identifier	tmp		902646	0					
ANR	902793	Argument	from		902646	1					
ANR	902794	Identifier	from		902646	0					
ANR	902795	BreakStatement	break ;	494:6:9840:9845	902646	21	True				
ANR	902796	Label	case SJIS :	495:4:9851:9860	902646	22	True				
ANR	902797	Identifier	SJIS		902646	0					
ANR	902798	ExpressionStatement	"debug ( ""Kanji code is SJIS."" )"	496:6:9868:9897	902646	23	True				
ANR	902799	CallExpression	"debug ( ""Kanji code is SJIS."" )"		902646	0					
ANR	902800	Callee	debug		902646	0					
ANR	902801	Identifier	debug		902646	0					
ANR	902802	ArgumentList	"""Kanji code is SJIS."""		902646	1					
ANR	902803	Argument	"""Kanji code is SJIS."""		902646	0					
ANR	902804	PrimaryExpression	"""Kanji code is SJIS."""		902646	0					
ANR	902805	ExpressionStatement	"do_convert ( tmp , from , SJISSTR )"	497:6:9905:9936	902646	24	True				
ANR	902806	CallExpression	"do_convert ( tmp , from , SJISSTR )"		902646	0					
ANR	902807	Callee	do_convert		902646	0					
ANR	902808	Identifier	do_convert		902646	0					
ANR	902809	ArgumentList	tmp		902646	1					
ANR	902810	Argument	tmp		902646	0					
ANR	902811	Identifier	tmp		902646	0					
ANR	902812	Argument	from		902646	1					
ANR	902813	Identifier	from		902646	0					
ANR	902814	Argument	SJISSTR		902646	2					
ANR	902815	Identifier	SJISSTR		902646	0					
ANR	902816	BreakStatement	break ;	498:6:9944:9949	902646	25	True				
ANR	902817	Label	case EUCORSJIS :	499:4:9955:9969	902646	26	True				
ANR	902818	Identifier	EUCORSJIS		902646	0					
ANR	902819	ExpressionStatement	"debug ( ""Kanji code is EUC or SJIS."" )"	500:6:9977:10013	902646	27	True				
ANR	902820	CallExpression	"debug ( ""Kanji code is EUC or SJIS."" )"		902646	0					
ANR	902821	Callee	debug		902646	0					
ANR	902822	Identifier	debug		902646	0					
ANR	902823	ArgumentList	"""Kanji code is EUC or SJIS."""		902646	1					
ANR	902824	Argument	"""Kanji code is EUC or SJIS."""		902646	0					
ANR	902825	PrimaryExpression	"""Kanji code is EUC or SJIS."""		902646	0					
ANR	902826	ExpressionStatement	"ustrcpy ( tmp , from )"	501:6:10021:10040	902646	28	True				
ANR	902827	CallExpression	"ustrcpy ( tmp , from )"		902646	0					
ANR	902828	Callee	ustrcpy		902646	0					
ANR	902829	Identifier	ustrcpy		902646	0					
ANR	902830	ArgumentList	tmp		902646	1					
ANR	902831	Argument	tmp		902646	0					
ANR	902832	Identifier	tmp		902646	0					
ANR	902833	Argument	from		902646	1					
ANR	902834	Identifier	from		902646	0					
ANR	902835	ExpressionStatement	kanji = FALSE	502:6:10048:10061	902646	29	True				
ANR	902836	AssignmentExpression	kanji = FALSE		902646	0		=			
ANR	902837	Identifier	kanji		902646	0					
ANR	902838	Identifier	FALSE		902646	1					
ANR	902839	BreakStatement	break ;	503:6:10069:10074	902646	30	True				
ANR	902840	Label	case ASCII :	504:4:10080:10090	902646	31	True				
ANR	902841	Identifier	ASCII		902646	0					
ANR	902842	ExpressionStatement	"debug ( ""This is ASCII string."" )"	505:6:10098:10129	902646	32	True				
ANR	902843	CallExpression	"debug ( ""This is ASCII string."" )"		902646	0					
ANR	902844	Callee	debug		902646	0					
ANR	902845	Identifier	debug		902646	0					
ANR	902846	ArgumentList	"""This is ASCII string."""		902646	1					
ANR	902847	Argument	"""This is ASCII string."""		902646	0					
ANR	902848	PrimaryExpression	"""This is ASCII string."""		902646	0					
ANR	902849	ExpressionStatement	"ustrcpy ( tmp , from )"	506:6:10137:10156	902646	33	True				
ANR	902850	CallExpression	"ustrcpy ( tmp , from )"		902646	0					
ANR	902851	Callee	ustrcpy		902646	0					
ANR	902852	Identifier	ustrcpy		902646	0					
ANR	902853	ArgumentList	tmp		902646	1					
ANR	902854	Argument	tmp		902646	0					
ANR	902855	Identifier	tmp		902646	0					
ANR	902856	Argument	from		902646	1					
ANR	902857	Identifier	from		902646	0					
ANR	902858	ExpressionStatement	kanji = FALSE	507:6:10164:10177	902646	34	True				
ANR	902859	AssignmentExpression	kanji = FALSE		902646	0		=			
ANR	902860	Identifier	kanji		902646	0					
ANR	902861	Identifier	FALSE		902646	1					
ANR	902862	BreakStatement	break ;	508:6:10185:10190	902646	35	True				
ANR	902863	Label	default :	509:4:10196:10203	902646	36	True				
ANR	902864	Identifier	default		902646	0					
ANR	902865	ExpressionStatement	"debug ( ""This string includes unknown code."" )"	510:6:10211:10255	902646	37	True				
ANR	902866	CallExpression	"debug ( ""This string includes unknown code."" )"		902646	0					
ANR	902867	Callee	debug		902646	0					
ANR	902868	Identifier	debug		902646	0					
ANR	902869	ArgumentList	"""This string includes unknown code."""		902646	1					
ANR	902870	Argument	"""This string includes unknown code."""		902646	0					
ANR	902871	PrimaryExpression	"""This string includes unknown code."""		902646	0					
ANR	902872	ExpressionStatement	"ustrcpy ( tmp , from )"	511:6:10263:10282	902646	38	True				
ANR	902873	CallExpression	"ustrcpy ( tmp , from )"		902646	0					
ANR	902874	Callee	ustrcpy		902646	0					
ANR	902875	Identifier	ustrcpy		902646	0					
ANR	902876	ArgumentList	tmp		902646	1					
ANR	902877	Argument	tmp		902646	0					
ANR	902878	Identifier	tmp		902646	0					
ANR	902879	Argument	from		902646	1					
ANR	902880	Identifier	from		902646	0					
ANR	902881	ExpressionStatement	kanji = FALSE	512:6:10290:10303	902646	39	True				
ANR	902882	AssignmentExpression	kanji = FALSE		902646	0		=			
ANR	902883	Identifier	kanji		902646	0					
ANR	902884	Identifier	FALSE		902646	1					
ANR	902885	BreakStatement	break ;	513:6:10311:10316	902646	40	True				
ANR	902886	IfStatement	if ( kanji )		902646	5					
ANR	902887	Condition	kanji	517:6:10370:10374	902646	0	True				
ANR	902888	Identifier	kanji		902646	0					
ANR	902889	CompoundStatement		53:4:1280:1280	902646	1					
ANR	902890	ExpressionStatement	j = 0	519:6:10389:10394	902646	0	True				
ANR	902891	AssignmentExpression	j = 0		902646	0		=			
ANR	902892	Identifier	j		902646	0					
ANR	902893	PrimaryExpression	0		902646	1					
ANR	902894	ForStatement	for ( i = 0 ; tmp [ i ] != '\\0' && j < BUFSIZ ; i ++ )		902646	1					
ANR	902895	ForInit	i = 0 ;	520:11:10407:10412	902646	0	True				
ANR	902896	AssignmentExpression	i = 0		902646	0		=			
ANR	902897	Identifier	i		902646	0					
ANR	902898	PrimaryExpression	0		902646	1					
ANR	902899	Condition	tmp [ i ] != '\\0' && j < BUFSIZ	520:18:10414:10441	902646	1	True				
ANR	902900	AndExpression	tmp [ i ] != '\\0' && j < BUFSIZ		902646	0		&&			
ANR	902901	EqualityExpression	tmp [ i ] != '\\0'		902646	0		!=			
ANR	902902	ArrayIndexing	tmp [ i ]		902646	0					
ANR	902903	Identifier	tmp		902646	0					
ANR	902904	Identifier	i		902646	1					
ANR	902905	PrimaryExpression	'\\0'		902646	1					
ANR	902906	RelationalExpression	j < BUFSIZ		902646	1		<			
ANR	902907	Identifier	j		902646	0					
ANR	902908	Identifier	BUFSIZ		902646	1					
ANR	902909	PostIncDecOperationExpression	i ++	520:48:10444:10446	902646	2	True				
ANR	902910	Identifier	i		902646	0					
ANR	902911	IncDec	++		902646	1					
ANR	902912	CompoundStatement		56:1:1349:1349	902646	3					
ANR	902913	IfStatement	if ( tmp [ i ] == SS2 )		902646	0					
ANR	902914	Condition	tmp [ i ] == SS2	522:7:10459:10471	902646	0	True				
ANR	902915	EqualityExpression	tmp [ i ] == SS2		902646	0		==			
ANR	902916	ArrayIndexing	tmp [ i ]		902646	0					
ANR	902917	Identifier	tmp		902646	0					
ANR	902918	Identifier	i		902646	1					
ANR	902919	Identifier	SS2		902646	1					
ANR	902920	CompoundStatement		58:5:1378:1378	902646	1					
ANR	902921	ExpressionStatement	p1 = tmp [ ++ i ]	524:7:10488:10501	902646	0	True				
ANR	902922	AssignmentExpression	p1 = tmp [ ++ i ]		902646	0		=			
ANR	902923	Identifier	p1		902646	0					
ANR	902924	ArrayIndexing	tmp [ ++ i ]		902646	1					
ANR	902925	Identifier	tmp		902646	0					
ANR	902926	UnaryExpression	++ i		902646	1					
ANR	902927	IncDec	++		902646	0					
ANR	902928	Identifier	i		902646	1					
ANR	902929	IfStatement	if ( tmp [ i + 1 ] == SS2 )		902646	1					
ANR	902930	Condition	tmp [ i + 1 ] == SS2	525:11:10514:10530	902646	0	True				
ANR	902931	EqualityExpression	tmp [ i + 1 ] == SS2		902646	0		==			
ANR	902932	ArrayIndexing	tmp [ i + 1 ]		902646	0					
ANR	902933	Identifier	tmp		902646	0					
ANR	902934	AdditiveExpression	i + 1		902646	1		+			
ANR	902935	Identifier	i		902646	0					
ANR	902936	PrimaryExpression	1		902646	1					
ANR	902937	Identifier	SS2		902646	1					
ANR	902938	CompoundStatement		61:2:1434:1434	902646	1					
ANR	902939	ExpressionStatement	p2 = tmp [ i + 2 ]	527:4:10541:10556	902646	0	True				
ANR	902940	AssignmentExpression	p2 = tmp [ i + 2 ]		902646	0		=			
ANR	902941	Identifier	p2		902646	0					
ANR	902942	ArrayIndexing	tmp [ i + 2 ]		902646	1					
ANR	902943	Identifier	tmp		902646	0					
ANR	902944	AdditiveExpression	i + 2		902646	1		+			
ANR	902945	Identifier	i		902646	0					
ANR	902946	PrimaryExpression	2		902646	1					
ANR	902947	IfStatement	if ( p2 == 222 || p2 == 223 )		902646	1					
ANR	902948	Condition	p2 == 222 || p2 == 223	528:8:10566:10587	902646	0	True				
ANR	902949	OrExpression	p2 == 222 || p2 == 223		902646	0		||			
ANR	902950	EqualityExpression	p2 == 222		902646	0		==			
ANR	902951	Identifier	p2		902646	0					
ANR	902952	PrimaryExpression	222		902646	1					
ANR	902953	EqualityExpression	p2 == 223		902646	1		==			
ANR	902954	Identifier	p2		902646	0					
ANR	902955	PrimaryExpression	223		902646	1					
ANR	902956	ExpressionStatement	i += 2	529:6:10596:10602	902646	1	True				
ANR	902957	AssignmentExpression	i += 2		902646	0		+=			
ANR	902958	Identifier	i		902646	0					
ANR	902959	PrimaryExpression	2		902646	1					
ANR	902960	ElseStatement	else		902646	0					
ANR	902961	ExpressionStatement	p2 = 0	531:6:10619:10625	902646	0	True				
ANR	902962	AssignmentExpression	p2 = 0		902646	0		=			
ANR	902963	Identifier	p2		902646	0					
ANR	902964	PrimaryExpression	0		902646	1					
ANR	902965	ElseStatement	else		902646	0					
ANR	902966	ExpressionStatement	p2 = 0	534:2:10645:10651	902646	0	True				
ANR	902967	AssignmentExpression	p2 = 0		902646	0		=			
ANR	902968	Identifier	p2		902646	0					
ANR	902969	PrimaryExpression	0		902646	1					
ANR	902970	ExpressionStatement	"han2zen ( & p1 , & p2 )"	535:7:10660:10678	902646	2	True				
ANR	902971	CallExpression	"han2zen ( & p1 , & p2 )"		902646	0					
ANR	902972	Callee	han2zen		902646	0					
ANR	902973	Identifier	han2zen		902646	0					
ANR	902974	ArgumentList	& p1		902646	1					
ANR	902975	Argument	& p1		902646	0					
ANR	902976	UnaryOperationExpression	& p1		902646	0					
ANR	902977	UnaryOperator	&		902646	0					
ANR	902978	Identifier	p1		902646	1					
ANR	902979	Argument	& p2		902646	1					
ANR	902980	UnaryOperationExpression	& p2		902646	0					
ANR	902981	UnaryOperator	&		902646	0					
ANR	902982	Identifier	p2		902646	1					
ANR	902983	ExpressionStatement	"SJIStoJIS ( & p1 , & p2 )"	536:7:10687:10707	902646	3	True				
ANR	902984	CallExpression	"SJIStoJIS ( & p1 , & p2 )"		902646	0					
ANR	902985	Callee	SJIStoJIS		902646	0					
ANR	902986	Identifier	SJIStoJIS		902646	0					
ANR	902987	ArgumentList	& p1		902646	1					
ANR	902988	Argument	& p1		902646	0					
ANR	902989	UnaryOperationExpression	& p1		902646	0					
ANR	902990	UnaryOperator	&		902646	0					
ANR	902991	Identifier	p1		902646	1					
ANR	902992	Argument	& p2		902646	1					
ANR	902993	UnaryOperationExpression	& p2		902646	0					
ANR	902994	UnaryOperator	&		902646	0					
ANR	902995	Identifier	p2		902646	1					
ANR	902996	ExpressionStatement	to [ j ++ ] = p1 + 128	537:7:10716:10734	902646	4	True				
ANR	902997	AssignmentExpression	to [ j ++ ] = p1 + 128		902646	0		=			
ANR	902998	ArrayIndexing	to [ j ++ ]		902646	0					
ANR	902999	Identifier	to		902646	0					
ANR	903000	PostIncDecOperationExpression	j ++		902646	1					
ANR	903001	Identifier	j		902646	0					
ANR	903002	IncDec	++		902646	1					
ANR	903003	AdditiveExpression	p1 + 128		902646	1		+			
ANR	903004	Identifier	p1		902646	0					
ANR	903005	PrimaryExpression	128		902646	1					
ANR	903006	ExpressionStatement	to [ j ++ ] = p2 + 128	538:7:10743:10761	902646	5	True				
ANR	903007	AssignmentExpression	to [ j ++ ] = p2 + 128		902646	0		=			
ANR	903008	ArrayIndexing	to [ j ++ ]		902646	0					
ANR	903009	Identifier	to		902646	0					
ANR	903010	PostIncDecOperationExpression	j ++		902646	1					
ANR	903011	Identifier	j		902646	0					
ANR	903012	IncDec	++		902646	1					
ANR	903013	AdditiveExpression	p2 + 128		902646	1		+			
ANR	903014	Identifier	p2		902646	0					
ANR	903015	PrimaryExpression	128		902646	1					
ANR	903016	ElseStatement	else		902646	0					
ANR	903017	ExpressionStatement	to [ j ++ ] = tmp [ i ]	541:5:10783:10799	902646	0	True				
ANR	903018	AssignmentExpression	to [ j ++ ] = tmp [ i ]		902646	0		=			
ANR	903019	ArrayIndexing	to [ j ++ ]		902646	0					
ANR	903020	Identifier	to		902646	0					
ANR	903021	PostIncDecOperationExpression	j ++		902646	1					
ANR	903022	Identifier	j		902646	0					
ANR	903023	IncDec	++		902646	1					
ANR	903024	ArrayIndexing	tmp [ i ]		902646	1					
ANR	903025	Identifier	tmp		902646	0					
ANR	903026	Identifier	i		902646	1					
ANR	903027	IfStatement	if ( j >= BUFSIZ )		902646	2					
ANR	903028	Condition	j >= BUFSIZ	544:10:10815:10825	902646	0	True				
ANR	903029	RelationalExpression	j >= BUFSIZ		902646	0		>=			
ANR	903030	Identifier	j		902646	0					
ANR	903031	Identifier	BUFSIZ		902646	1					
ANR	903032	CompoundStatement		80:1:1728:1728	902646	1					
ANR	903033	ExpressionStatement	"error ( ""output buffer overflow at Hankaku --> Zenkaku"" )"	546:3:10834:10889	902646	0	True				
ANR	903034	CallExpression	"error ( ""output buffer overflow at Hankaku --> Zenkaku"" )"		902646	0					
ANR	903035	Callee	error		902646	0					
ANR	903036	Identifier	error		902646	0					
ANR	903037	ArgumentList	"""output buffer overflow at Hankaku --> Zenkaku"""		902646	1					
ANR	903038	Argument	"""output buffer overflow at Hankaku --> Zenkaku"""		902646	0					
ANR	903039	PrimaryExpression	"""output buffer overflow at Hankaku --> Zenkaku"""		902646	0					
ANR	903040	ExpressionStatement	"ustrcpy ( to , tmp )"	547:3:10894:10911	902646	1	True				
ANR	903041	CallExpression	"ustrcpy ( to , tmp )"		902646	0					
ANR	903042	Callee	ustrcpy		902646	0					
ANR	903043	Identifier	ustrcpy		902646	0					
ANR	903044	ArgumentList	to		902646	1					
ANR	903045	Argument	to		902646	0					
ANR	903046	Identifier	to		902646	0					
ANR	903047	Argument	tmp		902646	1					
ANR	903048	Identifier	tmp		902646	0					
ANR	903049	ElseStatement	else		902646	0					
ANR	903050	ExpressionStatement	to [ j ] = '\\0'	550:1:10928:10940	902646	0	True				
ANR	903051	AssignmentExpression	to [ j ] = '\\0'		902646	0		=			
ANR	903052	ArrayIndexing	to [ j ]		902646	0					
ANR	903053	Identifier	to		902646	0					
ANR	903054	Identifier	j		902646	1					
ANR	903055	PrimaryExpression	'\\0'		902646	1					
ANR	903056	ElseStatement	else		902646	0					
ANR	903057	ExpressionStatement	"ustrcpy ( to , tmp )"	553:4:10959:10976	902646	0	True				
ANR	903058	CallExpression	"ustrcpy ( to , tmp )"		902646	0					
ANR	903059	Callee	ustrcpy		902646	0					
ANR	903060	Identifier	ustrcpy		902646	0					
ANR	903061	ArgumentList	to		902646	1					
ANR	903062	Argument	to		902646	0					
ANR	903063	Identifier	to		902646	0					
ANR	903064	Argument	tmp		902646	1					
ANR	903065	Identifier	tmp		902646	0					
ANR	903066	ReturnStatement	return kanji ;	555:2:10981:10993	902646	6	True				
ANR	903067	Identifier	kanji		902646	0					
ANR	903068	ReturnType	static int		902646	1					
ANR	903069	Identifier	do_check_and_conv		902646	2					
ANR	903070	ParameterList	"unsigned char * to , unsigned char * from"		902646	3					
ANR	903071	Parameter	unsigned char * to	465:19:9060:9076	902646	0	True				
ANR	903072	ParameterType	unsigned char *		902646	0					
ANR	903073	Identifier	to		902646	1					
ANR	903074	Parameter	unsigned char * from	465:38:9079:9097	902646	1	True				
ANR	903075	ParameterType	unsigned char *		902646	0					
ANR	903076	Identifier	from		902646	1					
ANR	903077	CFGEntryNode	ENTRY		902646		True				
ANR	903078	CFGExitNode	EXIT		902646		True				
ANR	903079	Symbol	p1		902646						
ANR	903080	Symbol	* tmp		902646						
ANR	903081	Symbol	p2		902646						
ANR	903082	Symbol	* to		902646						
ANR	903083	Symbol	kanji		902646						
ANR	903084	Symbol	NEWJISSTR		902646						
ANR	903085	Symbol	SJISSTR		902646						
ANR	903086	Symbol	i		902646						
ANR	903087	Symbol	TRUE		902646						
ANR	903088	Symbol	j		902646						
ANR	903089	Symbol	DetectKanjiCode		902646						
ANR	903090	Symbol	& p1		902646						
ANR	903091	Symbol	& p2		902646						
ANR	903092	Symbol	* i		902646						
ANR	903093	Symbol	SS2		902646						
ANR	903094	Symbol	* j		902646						
ANR	903095	Symbol	OLDJISSTR		902646						
ANR	903096	Symbol	tmp		902646						
ANR	903097	Symbol	from		902646						
ANR	903098	Symbol	FALSE		902646						
ANR	903099	Symbol	to		902646						
ANR	903100	Symbol	BUFSIZ		902646						
ANR	903101	Function	any2eucjp	558:0:10998:11622							
ANR	903102	FunctionDef	"any2eucjp (unsigned char * dest , unsigned char * src , unsigned int dest_max)"		903101	0					
ANR	903103	CompoundStatement		560:0:11077:11622	903101	0					
ANR	903104	Statement	static	561:2:11081:11086	903101	0	True				
ANR	903105	IdentifierDeclStatement	unsigned char tmp_dest [ BUFSIZ ] ;	561:9:11088:11118	903101	1	True				
ANR	903106	IdentifierDecl	tmp_dest [ BUFSIZ ]		903101	0					
ANR	903107	IdentifierDeclType	unsigned char [ BUFSIZ ]		903101	0					
ANR	903108	Identifier	tmp_dest		903101	1					
ANR	903109	Identifier	BUFSIZ		903101	2					
ANR	903110	IdentifierDeclStatement	int ret ;	562:2:11122:11129	903101	2	True				
ANR	903111	IdentifierDecl	ret		903101	0					
ANR	903112	IdentifierDeclType	int		903101	0					
ANR	903113	Identifier	ret		903101	1					
ANR	903114	IfStatement	if ( strlen ( ( const char * ) src ) >= BUFSIZ )		903101	3					
ANR	903115	Condition	strlen ( ( const char * ) src ) >= BUFSIZ	564:6:11138:11174	903101	0	True				
ANR	903116	RelationalExpression	strlen ( ( const char * ) src ) >= BUFSIZ		903101	0		>=			
ANR	903117	CallExpression	strlen ( ( const char * ) src )		903101	0					
ANR	903118	Callee	strlen		903101	0					
ANR	903119	Identifier	strlen		903101	0					
ANR	903120	ArgumentList	( const char * ) src		903101	1					
ANR	903121	Argument	( const char * ) src		903101	0					
ANR	903122	CastExpression	( const char * ) src		903101	0					
ANR	903123	CastTarget	const char *		903101	0					
ANR	903124	Identifier	src		903101	1					
ANR	903125	Identifier	BUFSIZ		903101	1					
ANR	903126	CompoundStatement		6:4:103:103	903101	1					
ANR	903127	ExpressionStatement	"error ( ""input string too large"" )"	566:6:11189:11221	903101	0	True				
ANR	903128	CallExpression	"error ( ""input string too large"" )"		903101	0					
ANR	903129	Callee	error		903101	0					
ANR	903130	Identifier	error		903101	0					
ANR	903131	ArgumentList	"""input string too large"""		903101	1					
ANR	903132	Argument	"""input string too large"""		903101	0					
ANR	903133	PrimaryExpression	"""input string too large"""		903101	0					
ANR	903134	ReturnStatement	return - 1 ;	567:6:11229:11238	903101	1	True				
ANR	903135	UnaryOperationExpression	- 1		903101	0					
ANR	903136	UnaryOperator	-		903101	0					
ANR	903137	PrimaryExpression	1		903101	1					
ANR	903138	IfStatement	if ( dest_max > BUFSIZ )		903101	4					
ANR	903139	Condition	dest_max > BUFSIZ	569:6:11252:11268	903101	0	True				
ANR	903140	RelationalExpression	dest_max > BUFSIZ		903101	0		>			
ANR	903141	Identifier	dest_max		903101	0					
ANR	903142	Identifier	BUFSIZ		903101	1					
ANR	903143	CompoundStatement		11:4:197:197	903101	1					
ANR	903144	ExpressionStatement	"error ( ""invalid maximum size of destination\\nit should be less than %d."" , BUFSIZ )"	571:6:11283:11364	903101	0	True				
ANR	903145	CallExpression	"error ( ""invalid maximum size of destination\\nit should be less than %d."" , BUFSIZ )"		903101	0					
ANR	903146	Callee	error		903101	0					
ANR	903147	Identifier	error		903101	0					
ANR	903148	ArgumentList	"""invalid maximum size of destination\\nit should be less than %d."""		903101	1					
ANR	903149	Argument	"""invalid maximum size of destination\\nit should be less than %d."""		903101	0					
ANR	903150	PrimaryExpression	"""invalid maximum size of destination\\nit should be less than %d."""		903101	0					
ANR	903151	Argument	BUFSIZ		903101	1					
ANR	903152	Identifier	BUFSIZ		903101	0					
ANR	903153	ReturnStatement	return - 1 ;	572:6:11372:11381	903101	1	True				
ANR	903154	UnaryOperationExpression	- 1		903101	0					
ANR	903155	UnaryOperator	-		903101	0					
ANR	903156	PrimaryExpression	1		903101	1					
ANR	903157	ExpressionStatement	"ret = do_check_and_conv ( tmp_dest , src )"	574:2:11391:11430	903101	5	True				
ANR	903158	AssignmentExpression	"ret = do_check_and_conv ( tmp_dest , src )"		903101	0		=			
ANR	903159	Identifier	ret		903101	0					
ANR	903160	CallExpression	"do_check_and_conv ( tmp_dest , src )"		903101	1					
ANR	903161	Callee	do_check_and_conv		903101	0					
ANR	903162	Identifier	do_check_and_conv		903101	0					
ANR	903163	ArgumentList	tmp_dest		903101	1					
ANR	903164	Argument	tmp_dest		903101	0					
ANR	903165	Identifier	tmp_dest		903101	0					
ANR	903166	Argument	src		903101	1					
ANR	903167	Identifier	src		903101	0					
ANR	903168	IfStatement	if ( strlen ( ( const char * ) tmp_dest ) >= dest_max )		903101	6					
ANR	903169	Condition	strlen ( ( const char * ) tmp_dest ) >= dest_max	575:6:11438:11481	903101	0	True				
ANR	903170	RelationalExpression	strlen ( ( const char * ) tmp_dest ) >= dest_max		903101	0		>=			
ANR	903171	CallExpression	strlen ( ( const char * ) tmp_dest )		903101	0					
ANR	903172	Callee	strlen		903101	0					
ANR	903173	Identifier	strlen		903101	0					
ANR	903174	ArgumentList	( const char * ) tmp_dest		903101	1					
ANR	903175	Argument	( const char * ) tmp_dest		903101	0					
ANR	903176	CastExpression	( const char * ) tmp_dest		903101	0					
ANR	903177	CastTarget	const char *		903101	0					
ANR	903178	Identifier	tmp_dest		903101	1					
ANR	903179	Identifier	dest_max		903101	1					
ANR	903180	CompoundStatement		17:4:410:410	903101	1					
ANR	903181	ExpressionStatement	"error ( ""output buffer overflow"" )"	577:6:11496:11528	903101	0	True				
ANR	903182	CallExpression	"error ( ""output buffer overflow"" )"		903101	0					
ANR	903183	Callee	error		903101	0					
ANR	903184	Identifier	error		903101	0					
ANR	903185	ArgumentList	"""output buffer overflow"""		903101	1					
ANR	903186	Argument	"""output buffer overflow"""		903101	0					
ANR	903187	PrimaryExpression	"""output buffer overflow"""		903101	0					
ANR	903188	ExpressionStatement	"ustrcpy ( dest , src )"	578:6:11536:11555	903101	1	True				
ANR	903189	CallExpression	"ustrcpy ( dest , src )"		903101	0					
ANR	903190	Callee	ustrcpy		903101	0					
ANR	903191	Identifier	ustrcpy		903101	0					
ANR	903192	ArgumentList	dest		903101	1					
ANR	903193	Argument	dest		903101	0					
ANR	903194	Identifier	dest		903101	0					
ANR	903195	Argument	src		903101	1					
ANR	903196	Identifier	src		903101	0					
ANR	903197	ReturnStatement	return - 1 ;	579:6:11563:11572	903101	2	True				
ANR	903198	UnaryOperationExpression	- 1		903101	0					
ANR	903199	UnaryOperator	-		903101	0					
ANR	903200	PrimaryExpression	1		903101	1					
ANR	903201	ExpressionStatement	"ustrcpy ( dest , tmp_dest )"	581:2:11582:11606	903101	7	True				
ANR	903202	CallExpression	"ustrcpy ( dest , tmp_dest )"		903101	0					
ANR	903203	Callee	ustrcpy		903101	0					
ANR	903204	Identifier	ustrcpy		903101	0					
ANR	903205	ArgumentList	dest		903101	1					
ANR	903206	Argument	dest		903101	0					
ANR	903207	Identifier	dest		903101	0					
ANR	903208	Argument	tmp_dest		903101	1					
ANR	903209	Identifier	tmp_dest		903101	0					
ANR	903210	ReturnStatement	return ret ;	582:2:11610:11620	903101	8	True				
ANR	903211	Identifier	ret		903101	0					
ANR	903212	ReturnType	int		903101	1					
ANR	903213	Identifier	any2eucjp		903101	2					
ANR	903214	ParameterList	"unsigned char * dest , unsigned char * src , unsigned int dest_max"		903101	3					
ANR	903215	Parameter	unsigned char * dest	559:11:11013:11031	903101	0	True				
ANR	903216	ParameterType	unsigned char *		903101	0					
ANR	903217	Identifier	dest		903101	1					
ANR	903218	Parameter	unsigned char * src	559:32:11034:11051	903101	1	True				
ANR	903219	ParameterType	unsigned char *		903101	0					
ANR	903220	Identifier	src		903101	1					
ANR	903221	Parameter	unsigned int dest_max	559:52:11054:11074	903101	2	True				
ANR	903222	ParameterType	unsigned int		903101	0					
ANR	903223	Identifier	dest_max		903101	1					
ANR	903224	CFGEntryNode	ENTRY		903101		True				
ANR	903225	CFGExitNode	EXIT		903101		True				
ANR	903226	Symbol	dest_max		903101						
ANR	903227	Symbol	ret		903101						
ANR	903228	Symbol	strlen		903101						
ANR	903229	Symbol	tmp_dest		903101						
ANR	903230	Symbol	src		903101						
ANR	903231	Symbol	do_check_and_conv		903101						
ANR	903232	Symbol	dest		903101						
ANR	903233	Symbol	BUFSIZ		903101						
ANR	903234	Function	strwidth	586:0:11631:11828							
ANR	903235	FunctionDef	strwidth (unsigned char * s)		903234	0					
ANR	903236	CompoundStatement		588:0:11672:11828	903234	0					
ANR	903237	IdentifierDeclStatement	unsigned char * t ;	589:2:11676:11692	903234	0	True				
ANR	903238	IdentifierDecl	* t		903234	0					
ANR	903239	IdentifierDeclType	unsigned char *		903234	0					
ANR	903240	Identifier	t		903234	1					
ANR	903241	IdentifierDeclStatement	unsigned int i ;	590:2:11696:11710	903234	1	True				
ANR	903242	IdentifierDecl	i		903234	0					
ANR	903243	IdentifierDeclType	unsigned int		903234	0					
ANR	903244	Identifier	i		903234	1					
ANR	903245	ExpressionStatement	t = ( unsigned char * ) gdMalloc ( BUFSIZ )	592:2:11715:11754	903234	2	True				
ANR	903246	AssignmentExpression	t = ( unsigned char * ) gdMalloc ( BUFSIZ )		903234	0		=			
ANR	903247	Identifier	t		903234	0					
ANR	903248	CastExpression	( unsigned char * ) gdMalloc ( BUFSIZ )		903234	1					
ANR	903249	CastTarget	unsigned char *		903234	0					
ANR	903250	CallExpression	gdMalloc ( BUFSIZ )		903234	1					
ANR	903251	Callee	gdMalloc		903234	0					
ANR	903252	Identifier	gdMalloc		903234	0					
ANR	903253	ArgumentList	BUFSIZ		903234	1					
ANR	903254	Argument	BUFSIZ		903234	0					
ANR	903255	Identifier	BUFSIZ		903234	0					
ANR	903256	ExpressionStatement	"any2eucjp ( t , s , BUFSIZ )"	593:2:11758:11782	903234	3	True				
ANR	903257	CallExpression	"any2eucjp ( t , s , BUFSIZ )"		903234	0					
ANR	903258	Callee	any2eucjp		903234	0					
ANR	903259	Identifier	any2eucjp		903234	0					
ANR	903260	ArgumentList	t		903234	1					
ANR	903261	Argument	t		903234	0					
ANR	903262	Identifier	t		903234	0					
ANR	903263	Argument	s		903234	1					
ANR	903264	Identifier	s		903234	0					
ANR	903265	Argument	BUFSIZ		903234	2					
ANR	903266	Identifier	BUFSIZ		903234	0					
ANR	903267	ExpressionStatement	i = strlen ( t )	594:2:11786:11800	903234	4	True				
ANR	903268	AssignmentExpression	i = strlen ( t )		903234	0		=			
ANR	903269	Identifier	i		903234	0					
ANR	903270	CallExpression	strlen ( t )		903234	1					
ANR	903271	Callee	strlen		903234	0					
ANR	903272	Identifier	strlen		903234	0					
ANR	903273	ArgumentList	t		903234	1					
ANR	903274	Argument	t		903234	0					
ANR	903275	Identifier	t		903234	0					
ANR	903276	ExpressionStatement	gdFree ( t )	595:2:11804:11814	903234	5	True				
ANR	903277	CallExpression	gdFree ( t )		903234	0					
ANR	903278	Callee	gdFree		903234	0					
ANR	903279	Identifier	gdFree		903234	0					
ANR	903280	ArgumentList	t		903234	1					
ANR	903281	Argument	t		903234	0					
ANR	903282	Identifier	t		903234	0					
ANR	903283	ReturnStatement	return i ;	596:2:11818:11826	903234	6	True				
ANR	903284	Identifier	i		903234	0					
ANR	903285	ReturnType	unsigned int		903234	1					
ANR	903286	Identifier	strwidth		903234	2					
ANR	903287	ParameterList	unsigned char * s		903234	3					
ANR	903288	Parameter	unsigned char * s	587:10:11654:11669	903234	0	True				
ANR	903289	ParameterType	unsigned char *		903234	0					
ANR	903290	Identifier	s		903234	1					
ANR	903291	CFGEntryNode	ENTRY		903234		True				
ANR	903292	CFGExitNode	EXIT		903234		True				
ANR	903293	Symbol	strlen		903234						
ANR	903294	Symbol	s		903234						
ANR	903295	Symbol	gdMalloc		903234						
ANR	903296	Symbol	t		903234						
ANR	903297	Symbol	i		903234						
ANR	903298	Symbol	BUFSIZ		903234						
ANR	903299	Function	main	600:0:11844:12359							
ANR	903300	FunctionDef	main ()		903299	0					
ANR	903301	CompoundStatement		602:0:11856:12359	903299	0					
ANR	903302	IdentifierDeclStatement	unsigned char input [ BUFSIZ ] ;	603:2:11860:11887	903299	0	True				
ANR	903303	IdentifierDecl	input [ BUFSIZ ]		903299	0					
ANR	903304	IdentifierDeclType	unsigned char [ BUFSIZ ]		903299	0					
ANR	903305	Identifier	input		903299	1					
ANR	903306	Identifier	BUFSIZ		903299	2					
ANR	903307	IdentifierDeclStatement	unsigned char * output ;	604:2:11891:11912	903299	1	True				
ANR	903308	IdentifierDecl	* output		903299	0					
ANR	903309	IdentifierDeclType	unsigned char *		903299	0					
ANR	903310	Identifier	output		903299	1					
ANR	903311	IdentifierDeclStatement	unsigned char * str ;	605:2:11916:11934	903299	2	True				
ANR	903312	IdentifierDecl	* str		903299	0					
ANR	903313	IdentifierDeclType	unsigned char *		903299	0					
ANR	903314	Identifier	str		903299	1					
ANR	903315	IdentifierDeclStatement	"int c , i = 0 ;"	606:2:11938:11950	903299	3	True				
ANR	903316	IdentifierDecl	c		903299	0					
ANR	903317	IdentifierDeclType	int		903299	0					
ANR	903318	Identifier	c		903299	1					
ANR	903319	IdentifierDecl	i = 0		903299	1					
ANR	903320	IdentifierDeclType	int		903299	0					
ANR	903321	Identifier	i		903299	1					
ANR	903322	AssignmentExpression	i = 0		903299	2		=			
ANR	903323	Identifier	i		903299	0					
ANR	903324	PrimaryExpression	0		903299	1					
ANR	903325	WhileStatement	while ( ( c = fgetc ( stdin ) ) != '\\n' && i < BUFSIZ )		903299	4					
ANR	903326	Condition	( c = fgetc ( stdin ) ) != '\\n' && i < BUFSIZ	608:9:11962:12002	903299	0	True				
ANR	903327	AndExpression	( c = fgetc ( stdin ) ) != '\\n' && i < BUFSIZ		903299	0		&&			
ANR	903328	EqualityExpression	( c = fgetc ( stdin ) ) != '\\n'		903299	0		!=			
ANR	903329	AssignmentExpression	c = fgetc ( stdin )		903299	0		=			
ANR	903330	Identifier	c		903299	0					
ANR	903331	CallExpression	fgetc ( stdin )		903299	1					
ANR	903332	Callee	fgetc		903299	0					
ANR	903333	Identifier	fgetc		903299	0					
ANR	903334	ArgumentList	stdin		903299	1					
ANR	903335	Argument	stdin		903299	0					
ANR	903336	Identifier	stdin		903299	0					
ANR	903337	PrimaryExpression	'\\n'		903299	1					
ANR	903338	RelationalExpression	i < BUFSIZ		903299	1		<			
ANR	903339	Identifier	i		903299	0					
ANR	903340	Identifier	BUFSIZ		903299	1					
ANR	903341	ExpressionStatement	input [ i ++ ] = c	609:4:12009:12023	903299	1	True				
ANR	903342	AssignmentExpression	input [ i ++ ] = c		903299	0		=			
ANR	903343	ArrayIndexing	input [ i ++ ]		903299	0					
ANR	903344	Identifier	input		903299	0					
ANR	903345	PostIncDecOperationExpression	i ++		903299	1					
ANR	903346	Identifier	i		903299	0					
ANR	903347	IncDec	++		903299	1					
ANR	903348	Identifier	c		903299	1					
ANR	903349	ExpressionStatement	input [ i ] = '\\0'	610:2:12027:12042	903299	5	True				
ANR	903350	AssignmentExpression	input [ i ] = '\\0'		903299	0		=			
ANR	903351	ArrayIndexing	input [ i ]		903299	0					
ANR	903352	Identifier	input		903299	0					
ANR	903353	Identifier	i		903299	1					
ANR	903354	PrimaryExpression	'\\0'		903299	1					
ANR	903355	ExpressionStatement	"printf ( ""input : %d bytes\\n"" , strlen ( ( const char * ) input ) )"	612:2:12047:12107	903299	6	True				
ANR	903356	CallExpression	"printf ( ""input : %d bytes\\n"" , strlen ( ( const char * ) input ) )"		903299	0					
ANR	903357	Callee	printf		903299	0					
ANR	903358	Identifier	printf		903299	0					
ANR	903359	ArgumentList	"""input : %d bytes\\n"""		903299	1					
ANR	903360	Argument	"""input : %d bytes\\n"""		903299	0					
ANR	903361	PrimaryExpression	"""input : %d bytes\\n"""		903299	0					
ANR	903362	Argument	strlen ( ( const char * ) input )		903299	1					
ANR	903363	CallExpression	strlen ( ( const char * ) input )		903299	0					
ANR	903364	Callee	strlen		903299	0					
ANR	903365	Identifier	strlen		903299	0					
ANR	903366	ArgumentList	( const char * ) input		903299	1					
ANR	903367	Argument	( const char * ) input		903299	0					
ANR	903368	CastExpression	( const char * ) input		903299	0					
ANR	903369	CastTarget	const char *		903299	0					
ANR	903370	Identifier	input		903299	1					
ANR	903371	ExpressionStatement	"printf ( ""output: %d bytes\\n"" , strwidth ( input ) )"	613:2:12111:12158	903299	7	True				
ANR	903372	CallExpression	"printf ( ""output: %d bytes\\n"" , strwidth ( input ) )"		903299	0					
ANR	903373	Callee	printf		903299	0					
ANR	903374	Identifier	printf		903299	0					
ANR	903375	ArgumentList	"""output: %d bytes\\n"""		903299	1					
ANR	903376	Argument	"""output: %d bytes\\n"""		903299	0					
ANR	903377	PrimaryExpression	"""output: %d bytes\\n"""		903299	0					
ANR	903378	Argument	strwidth ( input )		903299	1					
ANR	903379	CallExpression	strwidth ( input )		903299	0					
ANR	903380	Callee	strwidth		903299	0					
ANR	903381	Identifier	strwidth		903299	0					
ANR	903382	ArgumentList	input		903299	1					
ANR	903383	Argument	input		903299	0					
ANR	903384	Identifier	input		903299	0					
ANR	903385	ExpressionStatement	output = ( unsigned char * ) gdMalloc ( BUFSIZ )	615:2:12163:12207	903299	8	True				
ANR	903386	AssignmentExpression	output = ( unsigned char * ) gdMalloc ( BUFSIZ )		903299	0		=			
ANR	903387	Identifier	output		903299	0					
ANR	903388	CastExpression	( unsigned char * ) gdMalloc ( BUFSIZ )		903299	1					
ANR	903389	CastTarget	unsigned char *		903299	0					
ANR	903390	CallExpression	gdMalloc ( BUFSIZ )		903299	1					
ANR	903391	Callee	gdMalloc		903299	0					
ANR	903392	Identifier	gdMalloc		903299	0					
ANR	903393	ArgumentList	BUFSIZ		903299	1					
ANR	903394	Argument	BUFSIZ		903299	0					
ANR	903395	Identifier	BUFSIZ		903299	0					
ANR	903396	ExpressionStatement	"any2eucjp ( output , input , BUFSIZ )"	616:2:12211:12244	903299	9	True				
ANR	903397	CallExpression	"any2eucjp ( output , input , BUFSIZ )"		903299	0					
ANR	903398	Callee	any2eucjp		903299	0					
ANR	903399	Identifier	any2eucjp		903299	0					
ANR	903400	ArgumentList	output		903299	1					
ANR	903401	Argument	output		903299	0					
ANR	903402	Identifier	output		903299	0					
ANR	903403	Argument	input		903299	1					
ANR	903404	Identifier	input		903299	0					
ANR	903405	Argument	BUFSIZ		903299	2					
ANR	903406	Identifier	BUFSIZ		903299	0					
ANR	903407	ExpressionStatement	str = output	617:2:12248:12260	903299	10	True				
ANR	903408	AssignmentExpression	str = output		903299	0		=			
ANR	903409	Identifier	str		903299	0					
ANR	903410	Identifier	output		903299	1					
ANR	903411	WhileStatement	while ( * str != '\\0' )		903299	11					
ANR	903412	Condition	* str != '\\0'	618:9:12271:12282	903299	0	True				
ANR	903413	EqualityExpression	* str != '\\0'		903299	0		!=			
ANR	903414	UnaryOperationExpression	* str		903299	0					
ANR	903415	UnaryOperator	*		903299	0					
ANR	903416	Identifier	str		903299	1					
ANR	903417	PrimaryExpression	'\\0'		903299	1					
ANR	903418	ExpressionStatement	putchar ( * ( str ++ ) )	619:4:12289:12307	903299	1	True				
ANR	903419	CallExpression	putchar ( * ( str ++ ) )		903299	0					
ANR	903420	Callee	putchar		903299	0					
ANR	903421	Identifier	putchar		903299	0					
ANR	903422	ArgumentList	* ( str ++ )		903299	1					
ANR	903423	Argument	* ( str ++ )		903299	0					
ANR	903424	UnaryOperationExpression	* ( str ++ )		903299	0					
ANR	903425	UnaryOperator	*		903299	0					
ANR	903426	PostIncDecOperationExpression	str ++		903299	1					
ANR	903427	Identifier	str		903299	0					
ANR	903428	IncDec	++		903299	1					
ANR	903429	ExpressionStatement	putchar ( '\\n' )	620:2:12311:12325	903299	12	True				
ANR	903430	CallExpression	putchar ( '\\n' )		903299	0					
ANR	903431	Callee	putchar		903299	0					
ANR	903432	Identifier	putchar		903299	0					
ANR	903433	ArgumentList	'\\n'		903299	1					
ANR	903434	Argument	'\\n'		903299	0					
ANR	903435	PrimaryExpression	'\\n'		903299	0					
ANR	903436	ExpressionStatement	gdFree ( output )	621:2:12329:12344	903299	13	True				
ANR	903437	CallExpression	gdFree ( output )		903299	0					
ANR	903438	Callee	gdFree		903299	0					
ANR	903439	Identifier	gdFree		903299	0					
ANR	903440	ArgumentList	output		903299	1					
ANR	903441	Argument	output		903299	0					
ANR	903442	Identifier	output		903299	0					
ANR	903443	ReturnStatement	return 0 ;	623:2:12349:12357	903299	14	True				
ANR	903444	PrimaryExpression	0		903299	0					
ANR	903445	ReturnType	int		903299	1					
ANR	903446	Identifier	main		903299	2					
ANR	903447	ParameterList			903299	3					
ANR	903448	CFGEntryNode	ENTRY		903299		True				
ANR	903449	CFGExitNode	EXIT		903299		True				
ANR	903450	Symbol	stdin		903299						
ANR	903451	Symbol	c		903299						
ANR	903452	Symbol	* input		903299						
ANR	903453	Symbol	i		903299						
ANR	903454	Symbol	output		903299						
ANR	903455	Symbol	str		903299						
ANR	903456	Symbol	input		903299						
ANR	903457	Symbol	strlen		903299						
ANR	903458	Symbol	* i		903299						
ANR	903459	Symbol	gdMalloc		903299						
ANR	903460	Symbol	strwidth		903299						
ANR	903461	Symbol	* ( str ++ )		903299						
ANR	903462	Symbol	* str		903299						
ANR	903463	Symbol	fgetc		903299						
ANR	903464	Symbol	BUFSIZ		903299						
