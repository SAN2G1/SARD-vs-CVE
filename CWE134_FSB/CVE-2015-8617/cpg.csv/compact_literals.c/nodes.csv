command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	467619	File	data/converged/CVE-2015-8617_php-src/compact_literals.c								
ANR	467620	ClassDef	_literal_info	56:8:2554:2725							
ANR	467621	DeclStmt									
ANR	467622	Decl							uint32_t	uint32_t	flags
ANR	467623	ClassDef	<unnamed>	58:1:2630:2709							
ANR	467624	DeclStmt									
ANR	467625	Decl							int	int	num
ANR	467626	DeclStmt									
ANR	467627	Decl									u
ANR	467628	DeclStmt									
ANR	467629	Decl							_literal_info	_literal_info	literal_info
ANR	467630	Function	optimizer_literal_obj_info	80:0:3457:4387							
ANR	467631	FunctionDef	"optimizer_literal_obj_info (literal_info * info , zend_uchar op_type , znode_op op , int constant , uint32_t kind , uint32_t slots , uint32_t related , zend_op_array * op_array)"		467630	0					
ANR	467632	CompoundStatement		88:0:3955:4387	467630	0					
ANR	467633	IfStatement	if ( Z_TYPE ( op_array -> literals [ constant ] ) == IS_STRING && op_type == IS_UNUSED )		467630	0					
ANR	467634	Condition	Z_TYPE ( op_array -> literals [ constant ] ) == IS_STRING && op_type == IS_UNUSED	93:5:4166:4243	467630	0	True				
ANR	467635	AndExpression	Z_TYPE ( op_array -> literals [ constant ] ) == IS_STRING && op_type == IS_UNUSED		467630	0		&&			
ANR	467636	EqualityExpression	Z_TYPE ( op_array -> literals [ constant ] ) == IS_STRING		467630	0		==			
ANR	467637	CallExpression	Z_TYPE ( op_array -> literals [ constant ] )		467630	0					
ANR	467638	Callee	Z_TYPE		467630	0					
ANR	467639	Identifier	Z_TYPE		467630	0					
ANR	467640	ArgumentList	op_array -> literals [ constant ]		467630	1					
ANR	467641	Argument	op_array -> literals [ constant ]		467630	0					
ANR	467642	ArrayIndexing	op_array -> literals [ constant ]		467630	0					
ANR	467643	PtrMemberAccess	op_array -> literals		467630	0					
ANR	467644	Identifier	op_array		467630	0					
ANR	467645	Identifier	literals		467630	1					
ANR	467646	Identifier	constant		467630	1					
ANR	467647	Identifier	IS_STRING		467630	1					
ANR	467648	EqualityExpression	op_type == IS_UNUSED		467630	1		==			
ANR	467649	Identifier	op_type		467630	0					
ANR	467650	Identifier	IS_UNUSED		467630	1					
ANR	467651	CompoundStatement		7:27:290:290	467630	1					
ANR	467652	ExpressionStatement	"LITERAL_INFO_OBJ ( constant , kind , 1 , slots , related , op_array -> this_var )"	95:2:4250:4321	467630	0	True				
ANR	467653	CallExpression	"LITERAL_INFO_OBJ ( constant , kind , 1 , slots , related , op_array -> this_var )"		467630	0					
ANR	467654	Callee	LITERAL_INFO_OBJ		467630	0					
ANR	467655	Identifier	LITERAL_INFO_OBJ		467630	0					
ANR	467656	ArgumentList	constant		467630	1					
ANR	467657	Argument	constant		467630	0					
ANR	467658	Identifier	constant		467630	0					
ANR	467659	Argument	kind		467630	1					
ANR	467660	Identifier	kind		467630	0					
ANR	467661	Argument	1		467630	2					
ANR	467662	PrimaryExpression	1		467630	0					
ANR	467663	Argument	slots		467630	3					
ANR	467664	Identifier	slots		467630	0					
ANR	467665	Argument	related		467630	4					
ANR	467666	Identifier	related		467630	0					
ANR	467667	Argument	op_array -> this_var		467630	5					
ANR	467668	PtrMemberAccess	op_array -> this_var		467630	0					
ANR	467669	Identifier	op_array		467630	0					
ANR	467670	Identifier	this_var		467630	1					
ANR	467671	ElseStatement	else		467630	0					
ANR	467672	CompoundStatement		9:8:375:375	467630	0					
ANR	467673	ExpressionStatement	"LITERAL_INFO ( constant , kind , 0 , slots , related )"	97:2:4335:4382	467630	0	True				
ANR	467674	CallExpression	"LITERAL_INFO ( constant , kind , 0 , slots , related )"		467630	0					
ANR	467675	Callee	LITERAL_INFO		467630	0					
ANR	467676	Identifier	LITERAL_INFO		467630	0					
ANR	467677	ArgumentList	constant		467630	1					
ANR	467678	Argument	constant		467630	0					
ANR	467679	Identifier	constant		467630	0					
ANR	467680	Argument	kind		467630	1					
ANR	467681	Identifier	kind		467630	0					
ANR	467682	Argument	0		467630	2					
ANR	467683	PrimaryExpression	0		467630	0					
ANR	467684	Argument	slots		467630	3					
ANR	467685	Identifier	slots		467630	0					
ANR	467686	Argument	related		467630	4					
ANR	467687	Identifier	related		467630	0					
ANR	467688	ReturnType	static void		467630	1					
ANR	467689	Identifier	optimizer_literal_obj_info		467630	2					
ANR	467690	ParameterList	"literal_info * info , zend_uchar op_type , znode_op op , int constant , uint32_t kind , uint32_t slots , uint32_t related , zend_op_array * op_array"		467630	3					
ANR	467691	Parameter	literal_info * info	80:39:3496:3515	467630	0	True				
ANR	467692	ParameterType	literal_info *		467630	0					
ANR	467693	Identifier	info		467630	1					
ANR	467694	Parameter	zend_uchar op_type	81:39:3557:3579	467630	1	True				
ANR	467695	ParameterType	zend_uchar		467630	0					
ANR	467696	Identifier	op_type		467630	1					
ANR	467697	Parameter	znode_op op	82:39:3621:3638	467630	2	True				
ANR	467698	ParameterType	znode_op		467630	0					
ANR	467699	Identifier	op		467630	1					
ANR	467700	Parameter	int constant	83:39:3680:3703	467630	3	True				
ANR	467701	ParameterType	int		467630	0					
ANR	467702	Identifier	constant		467630	1					
ANR	467703	Parameter	uint32_t kind	84:39:3745:3763	467630	4	True				
ANR	467704	ParameterType	uint32_t		467630	0					
ANR	467705	Identifier	kind		467630	1					
ANR	467706	Parameter	uint32_t slots	85:39:3805:3824	467630	5	True				
ANR	467707	ParameterType	uint32_t		467630	0					
ANR	467708	Identifier	slots		467630	1					
ANR	467709	Parameter	uint32_t related	86:39:3866:3887	467630	6	True				
ANR	467710	ParameterType	uint32_t		467630	0					
ANR	467711	Identifier	related		467630	1					
ANR	467712	Parameter	zend_op_array * op_array	87:39:3929:3952	467630	7	True				
ANR	467713	ParameterType	zend_op_array *		467630	0					
ANR	467714	Identifier	op_array		467630	1					
ANR	467715	CFGEntryNode	ENTRY		467630		True				
ANR	467716	CFGExitNode	EXIT		467630		True				
ANR	467717	Symbol	op		467630						
ANR	467718	Symbol	constant		467630						
ANR	467719	Symbol	kind		467630						
ANR	467720	Symbol	op_array -> this_var		467630						
ANR	467721	Symbol	Z_TYPE		467630						
ANR	467722	Symbol	* op_array -> literals		467630						
ANR	467723	Symbol	* op_array		467630						
ANR	467724	Symbol	slots		467630						
ANR	467725	Symbol	related		467630						
ANR	467726	Symbol	op_array -> literals		467630						
ANR	467727	Symbol	* constant		467630						
ANR	467728	Symbol	op_type		467630						
ANR	467729	Symbol	IS_STRING		467630						
ANR	467730	Symbol	* * op_array		467630						
ANR	467731	Symbol	op_array		467630						
ANR	467732	Symbol	info		467630						
ANR	467733	Symbol	IS_UNUSED		467630						
ANR	467734	Function	optimizer_literal_class_info	101:0:4390:5068							
ANR	467735	FunctionDef	"optimizer_literal_class_info (literal_info * info , zend_uchar op_type , znode_op op , int constant , uint32_t kind , uint32_t slots , uint32_t related , zend_op_array * op_array)"		467734	0					
ANR	467736	CompoundStatement		109:0:4904:5068	467734	0					
ANR	467737	IfStatement	if ( op_type == IS_CONST )		467734	0					
ANR	467738	Condition	op_type == IS_CONST	110:5:4911:4929	467734	0	True				
ANR	467739	EqualityExpression	op_type == IS_CONST		467734	0		==			
ANR	467740	Identifier	op_type		467734	0					
ANR	467741	Identifier	IS_CONST		467734	1					
ANR	467742	CompoundStatement		2:26:27:27	467734	1					
ANR	467743	ExpressionStatement	"LITERAL_INFO_CLASS ( constant , kind , 1 , slots , related , op . constant )"	111:2:4936:5002	467734	0	True				
ANR	467744	CallExpression	"LITERAL_INFO_CLASS ( constant , kind , 1 , slots , related , op . constant )"		467734	0					
ANR	467745	Callee	LITERAL_INFO_CLASS		467734	0					
ANR	467746	Identifier	LITERAL_INFO_CLASS		467734	0					
ANR	467747	ArgumentList	constant		467734	1					
ANR	467748	Argument	constant		467734	0					
ANR	467749	Identifier	constant		467734	0					
ANR	467750	Argument	kind		467734	1					
ANR	467751	Identifier	kind		467734	0					
ANR	467752	Argument	1		467734	2					
ANR	467753	PrimaryExpression	1		467734	0					
ANR	467754	Argument	slots		467734	3					
ANR	467755	Identifier	slots		467734	0					
ANR	467756	Argument	related		467734	4					
ANR	467757	Identifier	related		467734	0					
ANR	467758	Argument	op . constant		467734	5					
ANR	467759	MemberAccess	op . constant		467734	0					
ANR	467760	Identifier	op		467734	0					
ANR	467761	Identifier	constant		467734	1					
ANR	467762	ElseStatement	else		467734	0					
ANR	467763	CompoundStatement		4:8:107:107	467734	0					
ANR	467764	ExpressionStatement	"LITERAL_INFO ( constant , kind , 0 , slots , related )"	113:2:5016:5063	467734	0	True				
ANR	467765	CallExpression	"LITERAL_INFO ( constant , kind , 0 , slots , related )"		467734	0					
ANR	467766	Callee	LITERAL_INFO		467734	0					
ANR	467767	Identifier	LITERAL_INFO		467734	0					
ANR	467768	ArgumentList	constant		467734	1					
ANR	467769	Argument	constant		467734	0					
ANR	467770	Identifier	constant		467734	0					
ANR	467771	Argument	kind		467734	1					
ANR	467772	Identifier	kind		467734	0					
ANR	467773	Argument	0		467734	2					
ANR	467774	PrimaryExpression	0		467734	0					
ANR	467775	Argument	slots		467734	3					
ANR	467776	Identifier	slots		467734	0					
ANR	467777	Argument	related		467734	4					
ANR	467778	Identifier	related		467734	0					
ANR	467779	ReturnType	static void		467734	1					
ANR	467780	Identifier	optimizer_literal_class_info		467734	2					
ANR	467781	ParameterList	"literal_info * info , zend_uchar op_type , znode_op op , int constant , uint32_t kind , uint32_t slots , uint32_t related , zend_op_array * op_array"		467734	3					
ANR	467782	Parameter	literal_info * info	101:41:4431:4450	467734	0	True				
ANR	467783	ParameterType	literal_info *		467734	0					
ANR	467784	Identifier	info		467734	1					
ANR	467785	Parameter	zend_uchar op_type	102:41:4494:4516	467734	1	True				
ANR	467786	ParameterType	zend_uchar		467734	0					
ANR	467787	Identifier	op_type		467734	1					
ANR	467788	Parameter	znode_op op	103:41:4560:4577	467734	2	True				
ANR	467789	ParameterType	znode_op		467734	0					
ANR	467790	Identifier	op		467734	1					
ANR	467791	Parameter	int constant	104:41:4621:4644	467734	3	True				
ANR	467792	ParameterType	int		467734	0					
ANR	467793	Identifier	constant		467734	1					
ANR	467794	Parameter	uint32_t kind	105:41:4688:4706	467734	4	True				
ANR	467795	ParameterType	uint32_t		467734	0					
ANR	467796	Identifier	kind		467734	1					
ANR	467797	Parameter	uint32_t slots	106:41:4750:4769	467734	5	True				
ANR	467798	ParameterType	uint32_t		467734	0					
ANR	467799	Identifier	slots		467734	1					
ANR	467800	Parameter	uint32_t related	107:41:4813:4834	467734	6	True				
ANR	467801	ParameterType	uint32_t		467734	0					
ANR	467802	Identifier	related		467734	1					
ANR	467803	Parameter	zend_op_array * op_array	108:41:4878:4901	467734	7	True				
ANR	467804	ParameterType	zend_op_array *		467734	0					
ANR	467805	Identifier	op_array		467734	1					
ANR	467806	CFGEntryNode	ENTRY		467734		True				
ANR	467807	CFGExitNode	EXIT		467734		True				
ANR	467808	Symbol	op		467734						
ANR	467809	Symbol	slots		467734						
ANR	467810	Symbol	IS_CONST		467734						
ANR	467811	Symbol	constant		467734						
ANR	467812	Symbol	op . constant		467734						
ANR	467813	Symbol	related		467734						
ANR	467814	Symbol	kind		467734						
ANR	467815	Symbol	op_type		467734						
ANR	467816	Symbol	op_array		467734						
ANR	467817	Symbol	info		467734						
ANR	467818	Function	zend_optimizer_compact_literals	117:0:5071:17595							
ANR	467819	FunctionDef	"zend_optimizer_compact_literals (zend_op_array * op_array , zend_optimizer_ctx * ctx)"		467818	0					
ANR	467820	CompoundStatement		118:0:5158:17595	467818	0					
ANR	467821	IdentifierDeclStatement	"zend_op * opline , * end ;"	119:1:5161:5182	467818	0	True				
ANR	467822	IdentifierDecl	* opline		467818	0					
ANR	467823	IdentifierDeclType	zend_op *		467818	0					
ANR	467824	Identifier	opline		467818	1					
ANR	467825	IdentifierDecl	* end		467818	1					
ANR	467826	IdentifierDeclType	zend_op *		467818	0					
ANR	467827	Identifier	end		467818	1					
ANR	467828	IdentifierDeclStatement	"int i , j , n , * map , cache_size ;"	120:1:5185:5214	467818	1	True				
ANR	467829	IdentifierDecl	i		467818	0					
ANR	467830	IdentifierDeclType	int		467818	0					
ANR	467831	Identifier	i		467818	1					
ANR	467832	IdentifierDecl	j		467818	1					
ANR	467833	IdentifierDeclType	int		467818	0					
ANR	467834	Identifier	j		467818	1					
ANR	467835	IdentifierDecl	n		467818	2					
ANR	467836	IdentifierDeclType	int		467818	0					
ANR	467837	Identifier	n		467818	1					
ANR	467838	IdentifierDecl	* map		467818	3					
ANR	467839	IdentifierDeclType	int *		467818	0					
ANR	467840	Identifier	map		467818	1					
ANR	467841	IdentifierDecl	cache_size		467818	4					
ANR	467842	IdentifierDeclType	int		467818	0					
ANR	467843	Identifier	cache_size		467818	1					
ANR	467844	IdentifierDeclStatement	"zval zv , * pos ;"	121:1:5217:5230	467818	2	True				
ANR	467845	IdentifierDecl	zv		467818	0					
ANR	467846	IdentifierDeclType	zval		467818	0					
ANR	467847	Identifier	zv		467818	1					
ANR	467848	IdentifierDecl	* pos		467818	1					
ANR	467849	IdentifierDeclType	zval *		467818	0					
ANR	467850	Identifier	pos		467818	1					
ANR	467851	IdentifierDeclStatement	literal_info * info ;	122:1:5233:5251	467818	3	True				
ANR	467852	IdentifierDecl	* info		467818	0					
ANR	467853	IdentifierDeclType	literal_info *		467818	0					
ANR	467854	Identifier	info		467818	1					
ANR	467855	IdentifierDeclStatement	int l_null = - 1 ;	123:1:5254:5269	467818	4	True				
ANR	467856	IdentifierDecl	l_null = - 1		467818	0					
ANR	467857	IdentifierDeclType	int		467818	0					
ANR	467858	Identifier	l_null		467818	1					
ANR	467859	AssignmentExpression	l_null = - 1		467818	2		=			
ANR	467860	Identifier	l_null		467818	0					
ANR	467861	UnaryOperationExpression	- 1		467818	1					
ANR	467862	UnaryOperator	-		467818	0					
ANR	467863	PrimaryExpression	1		467818	1					
ANR	467864	IdentifierDeclStatement	int l_false = - 1 ;	124:1:5272:5288	467818	5	True				
ANR	467865	IdentifierDecl	l_false = - 1		467818	0					
ANR	467866	IdentifierDeclType	int		467818	0					
ANR	467867	Identifier	l_false		467818	1					
ANR	467868	AssignmentExpression	l_false = - 1		467818	2		=			
ANR	467869	Identifier	l_false		467818	0					
ANR	467870	UnaryOperationExpression	- 1		467818	1					
ANR	467871	UnaryOperator	-		467818	0					
ANR	467872	PrimaryExpression	1		467818	1					
ANR	467873	IdentifierDeclStatement	int l_true = - 1 ;	125:1:5291:5306	467818	6	True				
ANR	467874	IdentifierDecl	l_true = - 1		467818	0					
ANR	467875	IdentifierDeclType	int		467818	0					
ANR	467876	Identifier	l_true		467818	1					
ANR	467877	AssignmentExpression	l_true = - 1		467818	2		=			
ANR	467878	Identifier	l_true		467818	0					
ANR	467879	UnaryOperationExpression	- 1		467818	1					
ANR	467880	UnaryOperator	-		467818	0					
ANR	467881	PrimaryExpression	1		467818	1					
ANR	467882	IdentifierDeclStatement	HashTable hash ;	126:1:5309:5323	467818	7	True				
ANR	467883	IdentifierDecl	hash		467818	0					
ANR	467884	IdentifierDeclType	HashTable		467818	0					
ANR	467885	Identifier	hash		467818	1					
ANR	467886	IdentifierDeclStatement	zend_string * key = NULL ;	127:1:5326:5349	467818	8	True				
ANR	467887	IdentifierDecl	* key = NULL		467818	0					
ANR	467888	IdentifierDeclType	zend_string *		467818	0					
ANR	467889	Identifier	key		467818	1					
ANR	467890	AssignmentExpression	* key = NULL		467818	2		=			
ANR	467891	Identifier	NULL		467818	0					
ANR	467892	Identifier	NULL		467818	1					
ANR	467893	IdentifierDeclStatement	void * checkpoint = zend_arena_checkpoint ( ctx -> arena ) ;	128:1:5352:5404	467818	9	True				
ANR	467894	IdentifierDecl	* checkpoint = zend_arena_checkpoint ( ctx -> arena )		467818	0					
ANR	467895	IdentifierDeclType	void *		467818	0					
ANR	467896	Identifier	checkpoint		467818	1					
ANR	467897	AssignmentExpression	* checkpoint = zend_arena_checkpoint ( ctx -> arena )		467818	2		=			
ANR	467898	Identifier	checkpoint		467818	0					
ANR	467899	CallExpression	zend_arena_checkpoint ( ctx -> arena )		467818	1					
ANR	467900	Callee	zend_arena_checkpoint		467818	0					
ANR	467901	Identifier	zend_arena_checkpoint		467818	0					
ANR	467902	ArgumentList	ctx -> arena		467818	1					
ANR	467903	Argument	ctx -> arena		467818	0					
ANR	467904	PtrMemberAccess	ctx -> arena		467818	0					
ANR	467905	Identifier	ctx		467818	0					
ANR	467906	Identifier	arena		467818	1					
ANR	467907	IfStatement	if ( op_array -> last_literal )		467818	10					
ANR	467908	Condition	op_array -> last_literal	130:5:5412:5433	467818	0	True				
ANR	467909	PtrMemberAccess	op_array -> last_literal		467818	0					
ANR	467910	Identifier	op_array		467818	0					
ANR	467911	Identifier	last_literal		467818	1					
ANR	467912	CompoundStatement		13:29:277:277	467818	1					
ANR	467913	ExpressionStatement	cache_size = 0	131:2:5440:5454	467818	0	True				
ANR	467914	AssignmentExpression	cache_size = 0		467818	0		=			
ANR	467915	Identifier	cache_size		467818	0					
ANR	467916	PrimaryExpression	0		467818	1					
ANR	467917	ExpressionStatement	"info = ( literal_info * ) zend_arena_calloc ( & ctx -> arena , op_array -> last_literal , sizeof ( literal_info ) )"	132:2:5458:5556	467818	1	True				
ANR	467918	AssignmentExpression	"info = ( literal_info * ) zend_arena_calloc ( & ctx -> arena , op_array -> last_literal , sizeof ( literal_info ) )"		467818	0		=			
ANR	467919	Identifier	info		467818	0					
ANR	467920	CastExpression	"( literal_info * ) zend_arena_calloc ( & ctx -> arena , op_array -> last_literal , sizeof ( literal_info ) )"		467818	1					
ANR	467921	CastTarget	literal_info *		467818	0					
ANR	467922	CallExpression	"zend_arena_calloc ( & ctx -> arena , op_array -> last_literal , sizeof ( literal_info ) )"		467818	1					
ANR	467923	Callee	zend_arena_calloc		467818	0					
ANR	467924	Identifier	zend_arena_calloc		467818	0					
ANR	467925	ArgumentList	& ctx -> arena		467818	1					
ANR	467926	Argument	& ctx -> arena		467818	0					
ANR	467927	UnaryOperationExpression	& ctx -> arena		467818	0					
ANR	467928	UnaryOperator	&		467818	0					
ANR	467929	PtrMemberAccess	ctx -> arena		467818	1					
ANR	467930	Identifier	ctx		467818	0					
ANR	467931	Identifier	arena		467818	1					
ANR	467932	Argument	op_array -> last_literal		467818	1					
ANR	467933	PtrMemberAccess	op_array -> last_literal		467818	0					
ANR	467934	Identifier	op_array		467818	0					
ANR	467935	Identifier	last_literal		467818	1					
ANR	467936	Argument	sizeof ( literal_info )		467818	2					
ANR	467937	SizeofExpression	sizeof ( literal_info )		467818	0					
ANR	467938	Sizeof	sizeof		467818	0					
ANR	467939	SizeofOperand	literal_info		467818	1					
ANR	467940	ExpressionStatement	opline = op_array -> opcodes	135:2:5604:5630	467818	2	True				
ANR	467941	AssignmentExpression	opline = op_array -> opcodes		467818	0		=			
ANR	467942	Identifier	opline		467818	0					
ANR	467943	PtrMemberAccess	op_array -> opcodes		467818	1					
ANR	467944	Identifier	op_array		467818	0					
ANR	467945	Identifier	opcodes		467818	1					
ANR	467946	ExpressionStatement	end = opline + op_array -> last	136:2:5634:5663	467818	3	True				
ANR	467947	AssignmentExpression	end = opline + op_array -> last		467818	0		=			
ANR	467948	Identifier	end		467818	0					
ANR	467949	AdditiveExpression	opline + op_array -> last		467818	1		+			
ANR	467950	Identifier	opline		467818	0					
ANR	467951	PtrMemberAccess	op_array -> last		467818	1					
ANR	467952	Identifier	op_array		467818	0					
ANR	467953	Identifier	last		467818	1					
ANR	467954	WhileStatement	while ( opline < end )		467818	4					
ANR	467955	Condition	opline < end	137:9:5674:5685	467818	0	True				
ANR	467956	RelationalExpression	opline < end		467818	0		<			
ANR	467957	Identifier	opline		467818	0					
ANR	467958	Identifier	end		467818	1					
ANR	467959	CompoundStatement		20:23:529:529	467818	1					
ANR	467960	SwitchStatement	switch ( opline -> opcode )		467818	0					
ANR	467961	Condition	opline -> opcode	138:11:5701:5714	467818	0	True				
ANR	467962	PtrMemberAccess	opline -> opcode		467818	0					
ANR	467963	Identifier	opline		467818	0					
ANR	467964	Identifier	opcode		467818	1					
ANR	467965	CompoundStatement		21:27:558:558	467818	1					
ANR	467966	Label	case ZEND_INIT_FCALL :	139:4:5723:5743	467818	0	True				
ANR	467967	Identifier	ZEND_INIT_FCALL		467818	0					
ANR	467968	ExpressionStatement	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_FUNC , 1 , 1 , 1 )"	140:5:5750:5807	467818	1	True				
ANR	467969	CallExpression	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_FUNC , 1 , 1 , 1 )"		467818	0					
ANR	467970	Callee	LITERAL_INFO		467818	0					
ANR	467971	Identifier	LITERAL_INFO		467818	0					
ANR	467972	ArgumentList	opline -> op2 . constant		467818	1					
ANR	467973	Argument	opline -> op2 . constant		467818	0					
ANR	467974	MemberAccess	opline -> op2 . constant		467818	0					
ANR	467975	PtrMemberAccess	opline -> op2		467818	0					
ANR	467976	Identifier	opline		467818	0					
ANR	467977	Identifier	op2		467818	1					
ANR	467978	Identifier	constant		467818	1					
ANR	467979	Argument	LITERAL_FUNC		467818	1					
ANR	467980	Identifier	LITERAL_FUNC		467818	0					
ANR	467981	Argument	1		467818	2					
ANR	467982	PrimaryExpression	1		467818	0					
ANR	467983	Argument	1		467818	3					
ANR	467984	PrimaryExpression	1		467818	0					
ANR	467985	Argument	1		467818	4					
ANR	467986	PrimaryExpression	1		467818	0					
ANR	467987	BreakStatement	break ;	141:5:5814:5819	467818	2	True				
ANR	467988	Label	case ZEND_INIT_FCALL_BY_NAME :	142:4:5825:5853	467818	3	True				
ANR	467989	Identifier	ZEND_INIT_FCALL_BY_NAME		467818	0					
ANR	467990	ExpressionStatement	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_FUNC , 1 , 1 , 2 )"	143:5:5860:5917	467818	4	True				
ANR	467991	CallExpression	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_FUNC , 1 , 1 , 2 )"		467818	0					
ANR	467992	Callee	LITERAL_INFO		467818	0					
ANR	467993	Identifier	LITERAL_INFO		467818	0					
ANR	467994	ArgumentList	opline -> op2 . constant		467818	1					
ANR	467995	Argument	opline -> op2 . constant		467818	0					
ANR	467996	MemberAccess	opline -> op2 . constant		467818	0					
ANR	467997	PtrMemberAccess	opline -> op2		467818	0					
ANR	467998	Identifier	opline		467818	0					
ANR	467999	Identifier	op2		467818	1					
ANR	468000	Identifier	constant		467818	1					
ANR	468001	Argument	LITERAL_FUNC		467818	1					
ANR	468002	Identifier	LITERAL_FUNC		467818	0					
ANR	468003	Argument	1		467818	2					
ANR	468004	PrimaryExpression	1		467818	0					
ANR	468005	Argument	1		467818	3					
ANR	468006	PrimaryExpression	1		467818	0					
ANR	468007	Argument	2		467818	4					
ANR	468008	PrimaryExpression	2		467818	0					
ANR	468009	BreakStatement	break ;	144:5:5924:5929	467818	5	True				
ANR	468010	Label	case ZEND_INIT_NS_FCALL_BY_NAME :	145:4:5935:5966	467818	6	True				
ANR	468011	Identifier	ZEND_INIT_NS_FCALL_BY_NAME		467818	0					
ANR	468012	ExpressionStatement	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_FUNC , 1 , 1 , 3 )"	146:5:5973:6030	467818	7	True				
ANR	468013	CallExpression	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_FUNC , 1 , 1 , 3 )"		467818	0					
ANR	468014	Callee	LITERAL_INFO		467818	0					
ANR	468015	Identifier	LITERAL_INFO		467818	0					
ANR	468016	ArgumentList	opline -> op2 . constant		467818	1					
ANR	468017	Argument	opline -> op2 . constant		467818	0					
ANR	468018	MemberAccess	opline -> op2 . constant		467818	0					
ANR	468019	PtrMemberAccess	opline -> op2		467818	0					
ANR	468020	Identifier	opline		467818	0					
ANR	468021	Identifier	op2		467818	1					
ANR	468022	Identifier	constant		467818	1					
ANR	468023	Argument	LITERAL_FUNC		467818	1					
ANR	468024	Identifier	LITERAL_FUNC		467818	0					
ANR	468025	Argument	1		467818	2					
ANR	468026	PrimaryExpression	1		467818	0					
ANR	468027	Argument	1		467818	3					
ANR	468028	PrimaryExpression	1		467818	0					
ANR	468029	Argument	3		467818	4					
ANR	468030	PrimaryExpression	3		467818	0					
ANR	468031	BreakStatement	break ;	147:5:6037:6042	467818	8	True				
ANR	468032	Label	case ZEND_INIT_METHOD_CALL :	148:4:6048:6074	467818	9	True				
ANR	468033	Identifier	ZEND_INIT_METHOD_CALL		467818	0					
ANR	468034	IfStatement	if ( ZEND_OP2_TYPE ( opline ) == IS_CONST )		467818	10					
ANR	468035	Condition	ZEND_OP2_TYPE ( opline ) == IS_CONST	149:9:6085:6117	467818	0	True				
ANR	468036	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST		467818	0		==			
ANR	468037	CallExpression	ZEND_OP2_TYPE ( opline )		467818	0					
ANR	468038	Callee	ZEND_OP2_TYPE		467818	0					
ANR	468039	Identifier	ZEND_OP2_TYPE		467818	0					
ANR	468040	ArgumentList	opline		467818	1					
ANR	468041	Argument	opline		467818	0					
ANR	468042	Identifier	opline		467818	0					
ANR	468043	Identifier	IS_CONST		467818	1					
ANR	468044	CompoundStatement		32:44:961:961	467818	1					
ANR	468045	ExpressionStatement	"optimizer_literal_obj_info ( info , opline -> op1_type , opline -> op1 , opline -> op2 . constant , LITERAL_METHOD , 2 , 2 , op_array )"	150:6:6128:6288	467818	0	True				
ANR	468046	CallExpression	"optimizer_literal_obj_info ( info , opline -> op1_type , opline -> op1 , opline -> op2 . constant , LITERAL_METHOD , 2 , 2 , op_array )"		467818	0					
ANR	468047	Callee	optimizer_literal_obj_info		467818	0					
ANR	468048	Identifier	optimizer_literal_obj_info		467818	0					
ANR	468049	ArgumentList	info		467818	1					
ANR	468050	Argument	info		467818	0					
ANR	468051	Identifier	info		467818	0					
ANR	468052	Argument	opline -> op1_type		467818	1					
ANR	468053	PtrMemberAccess	opline -> op1_type		467818	0					
ANR	468054	Identifier	opline		467818	0					
ANR	468055	Identifier	op1_type		467818	1					
ANR	468056	Argument	opline -> op1		467818	2					
ANR	468057	PtrMemberAccess	opline -> op1		467818	0					
ANR	468058	Identifier	opline		467818	0					
ANR	468059	Identifier	op1		467818	1					
ANR	468060	Argument	opline -> op2 . constant		467818	3					
ANR	468061	MemberAccess	opline -> op2 . constant		467818	0					
ANR	468062	PtrMemberAccess	opline -> op2		467818	0					
ANR	468063	Identifier	opline		467818	0					
ANR	468064	Identifier	op2		467818	1					
ANR	468065	Identifier	constant		467818	1					
ANR	468066	Argument	LITERAL_METHOD		467818	4					
ANR	468067	Identifier	LITERAL_METHOD		467818	0					
ANR	468068	Argument	2		467818	5					
ANR	468069	PrimaryExpression	2		467818	0					
ANR	468070	Argument	2		467818	6					
ANR	468071	PrimaryExpression	2		467818	0					
ANR	468072	Argument	op_array		467818	7					
ANR	468073	Identifier	op_array		467818	0					
ANR	468074	BreakStatement	break ;	158:5:6302:6307	467818	11	True				
ANR	468075	Label	case ZEND_INIT_STATIC_METHOD_CALL :	159:4:6313:6346	467818	12	True				
ANR	468076	Identifier	ZEND_INIT_STATIC_METHOD_CALL		467818	0					
ANR	468077	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_CONST )		467818	13					
ANR	468078	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST	160:9:6357:6389	467818	0	True				
ANR	468079	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		467818	0		==			
ANR	468080	CallExpression	ZEND_OP1_TYPE ( opline )		467818	0					
ANR	468081	Callee	ZEND_OP1_TYPE		467818	0					
ANR	468082	Identifier	ZEND_OP1_TYPE		467818	0					
ANR	468083	ArgumentList	opline		467818	1					
ANR	468084	Argument	opline		467818	0					
ANR	468085	Identifier	opline		467818	0					
ANR	468086	Identifier	IS_CONST		467818	1					
ANR	468087	CompoundStatement		43:44:1233:1233	467818	1					
ANR	468088	ExpressionStatement	"LITERAL_INFO ( opline -> op1 . constant , LITERAL_CLASS , 1 , 1 , 2 )"	161:6:6400:6458	467818	0	True				
ANR	468089	CallExpression	"LITERAL_INFO ( opline -> op1 . constant , LITERAL_CLASS , 1 , 1 , 2 )"		467818	0					
ANR	468090	Callee	LITERAL_INFO		467818	0					
ANR	468091	Identifier	LITERAL_INFO		467818	0					
ANR	468092	ArgumentList	opline -> op1 . constant		467818	1					
ANR	468093	Argument	opline -> op1 . constant		467818	0					
ANR	468094	MemberAccess	opline -> op1 . constant		467818	0					
ANR	468095	PtrMemberAccess	opline -> op1		467818	0					
ANR	468096	Identifier	opline		467818	0					
ANR	468097	Identifier	op1		467818	1					
ANR	468098	Identifier	constant		467818	1					
ANR	468099	Argument	LITERAL_CLASS		467818	1					
ANR	468100	Identifier	LITERAL_CLASS		467818	0					
ANR	468101	Argument	1		467818	2					
ANR	468102	PrimaryExpression	1		467818	0					
ANR	468103	Argument	1		467818	3					
ANR	468104	PrimaryExpression	1		467818	0					
ANR	468105	Argument	2		467818	4					
ANR	468106	PrimaryExpression	2		467818	0					
ANR	468107	IfStatement	if ( ZEND_OP2_TYPE ( opline ) == IS_CONST )		467818	14					
ANR	468108	Condition	ZEND_OP2_TYPE ( opline ) == IS_CONST	163:9:6476:6508	467818	0	True				
ANR	468109	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST		467818	0		==			
ANR	468110	CallExpression	ZEND_OP2_TYPE ( opline )		467818	0					
ANR	468111	Callee	ZEND_OP2_TYPE		467818	0					
ANR	468112	Identifier	ZEND_OP2_TYPE		467818	0					
ANR	468113	ArgumentList	opline		467818	1					
ANR	468114	Argument	opline		467818	0					
ANR	468115	Identifier	opline		467818	0					
ANR	468116	Identifier	IS_CONST		467818	1					
ANR	468117	CompoundStatement		46:44:1352:1352	467818	1					
ANR	468118	ExpressionStatement	"optimizer_literal_class_info ( info , opline -> op1_type , opline -> op1 , opline -> op2 . constant , LITERAL_STATIC_METHOD , ( ZEND_OP1_TYPE ( opline ) == IS_CONST ) ? 1 : 2 , 2 , op_array )"	164:6:6519:6730	467818	0	True				
ANR	468119	CallExpression	"optimizer_literal_class_info ( info , opline -> op1_type , opline -> op1 , opline -> op2 . constant , LITERAL_STATIC_METHOD , ( ZEND_OP1_TYPE ( opline ) == IS_CONST ) ? 1 : 2 , 2 , op_array )"		467818	0					
ANR	468120	Callee	optimizer_literal_class_info		467818	0					
ANR	468121	Identifier	optimizer_literal_class_info		467818	0					
ANR	468122	ArgumentList	info		467818	1					
ANR	468123	Argument	info		467818	0					
ANR	468124	Identifier	info		467818	0					
ANR	468125	Argument	opline -> op1_type		467818	1					
ANR	468126	PtrMemberAccess	opline -> op1_type		467818	0					
ANR	468127	Identifier	opline		467818	0					
ANR	468128	Identifier	op1_type		467818	1					
ANR	468129	Argument	opline -> op1		467818	2					
ANR	468130	PtrMemberAccess	opline -> op1		467818	0					
ANR	468131	Identifier	opline		467818	0					
ANR	468132	Identifier	op1		467818	1					
ANR	468133	Argument	opline -> op2 . constant		467818	3					
ANR	468134	MemberAccess	opline -> op2 . constant		467818	0					
ANR	468135	PtrMemberAccess	opline -> op2		467818	0					
ANR	468136	Identifier	opline		467818	0					
ANR	468137	Identifier	op2		467818	1					
ANR	468138	Identifier	constant		467818	1					
ANR	468139	Argument	LITERAL_STATIC_METHOD		467818	4					
ANR	468140	Identifier	LITERAL_STATIC_METHOD		467818	0					
ANR	468141	Argument	( ZEND_OP1_TYPE ( opline ) == IS_CONST ) ? 1 : 2		467818	5					
ANR	468142	ConditionalExpression	( ZEND_OP1_TYPE ( opline ) == IS_CONST ) ? 1 : 2		467818	0					
ANR	468143	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST		467818	0					
ANR	468144	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		467818	0		==			
ANR	468145	CallExpression	ZEND_OP1_TYPE ( opline )		467818	0					
ANR	468146	Callee	ZEND_OP1_TYPE		467818	0					
ANR	468147	Identifier	ZEND_OP1_TYPE		467818	0					
ANR	468148	ArgumentList	opline		467818	1					
ANR	468149	Argument	opline		467818	0					
ANR	468150	Identifier	opline		467818	0					
ANR	468151	Identifier	IS_CONST		467818	1					
ANR	468152	PrimaryExpression	1		467818	1					
ANR	468153	PrimaryExpression	2		467818	2					
ANR	468154	Argument	2		467818	6					
ANR	468155	PrimaryExpression	2		467818	0					
ANR	468156	Argument	op_array		467818	7					
ANR	468157	Identifier	op_array		467818	0					
ANR	468158	BreakStatement	break ;	172:5:6744:6749	467818	15	True				
ANR	468159	Label	case ZEND_CATCH :	173:4:6755:6770	467818	16	True				
ANR	468160	Identifier	ZEND_CATCH		467818	0					
ANR	468161	ExpressionStatement	"LITERAL_INFO ( opline -> op1 . constant , LITERAL_CLASS , 1 , 1 , 2 )"	174:5:6777:6835	467818	17	True				
ANR	468162	CallExpression	"LITERAL_INFO ( opline -> op1 . constant , LITERAL_CLASS , 1 , 1 , 2 )"		467818	0					
ANR	468163	Callee	LITERAL_INFO		467818	0					
ANR	468164	Identifier	LITERAL_INFO		467818	0					
ANR	468165	ArgumentList	opline -> op1 . constant		467818	1					
ANR	468166	Argument	opline -> op1 . constant		467818	0					
ANR	468167	MemberAccess	opline -> op1 . constant		467818	0					
ANR	468168	PtrMemberAccess	opline -> op1		467818	0					
ANR	468169	Identifier	opline		467818	0					
ANR	468170	Identifier	op1		467818	1					
ANR	468171	Identifier	constant		467818	1					
ANR	468172	Argument	LITERAL_CLASS		467818	1					
ANR	468173	Identifier	LITERAL_CLASS		467818	0					
ANR	468174	Argument	1		467818	2					
ANR	468175	PrimaryExpression	1		467818	0					
ANR	468176	Argument	1		467818	3					
ANR	468177	PrimaryExpression	1		467818	0					
ANR	468178	Argument	2		467818	4					
ANR	468179	PrimaryExpression	2		467818	0					
ANR	468180	BreakStatement	break ;	175:5:6842:6847	467818	18	True				
ANR	468181	Label	case ZEND_DEFINED :	176:4:6853:6870	467818	19	True				
ANR	468182	Identifier	ZEND_DEFINED		467818	0					
ANR	468183	ExpressionStatement	"LITERAL_INFO ( opline -> op1 . constant , LITERAL_CONST , 1 , 1 , 2 )"	177:5:6877:6935	467818	20	True				
ANR	468184	CallExpression	"LITERAL_INFO ( opline -> op1 . constant , LITERAL_CONST , 1 , 1 , 2 )"		467818	0					
ANR	468185	Callee	LITERAL_INFO		467818	0					
ANR	468186	Identifier	LITERAL_INFO		467818	0					
ANR	468187	ArgumentList	opline -> op1 . constant		467818	1					
ANR	468188	Argument	opline -> op1 . constant		467818	0					
ANR	468189	MemberAccess	opline -> op1 . constant		467818	0					
ANR	468190	PtrMemberAccess	opline -> op1		467818	0					
ANR	468191	Identifier	opline		467818	0					
ANR	468192	Identifier	op1		467818	1					
ANR	468193	Identifier	constant		467818	1					
ANR	468194	Argument	LITERAL_CONST		467818	1					
ANR	468195	Identifier	LITERAL_CONST		467818	0					
ANR	468196	Argument	1		467818	2					
ANR	468197	PrimaryExpression	1		467818	0					
ANR	468198	Argument	1		467818	3					
ANR	468199	PrimaryExpression	1		467818	0					
ANR	468200	Argument	2		467818	4					
ANR	468201	PrimaryExpression	2		467818	0					
ANR	468202	BreakStatement	break ;	178:5:6942:6947	467818	21	True				
ANR	468203	Label	case ZEND_FETCH_CONSTANT :	179:4:6953:6977	467818	22	True				
ANR	468204	Identifier	ZEND_FETCH_CONSTANT		467818	0					
ANR	468205	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_UNUSED )		467818	23					
ANR	468206	Condition	ZEND_OP1_TYPE ( opline ) == IS_UNUSED	180:9:6988:7021	467818	0	True				
ANR	468207	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_UNUSED		467818	0		==			
ANR	468208	CallExpression	ZEND_OP1_TYPE ( opline )		467818	0					
ANR	468209	Callee	ZEND_OP1_TYPE		467818	0					
ANR	468210	Identifier	ZEND_OP1_TYPE		467818	0					
ANR	468211	ArgumentList	opline		467818	1					
ANR	468212	Argument	opline		467818	0					
ANR	468213	Identifier	opline		467818	0					
ANR	468214	Identifier	IS_UNUSED		467818	1					
ANR	468215	CompoundStatement		63:45:1865:1865	467818	1					
ANR	468216	IfStatement	if ( ( opline -> extended_value & ( IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED ) ) == ( IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED ) )		467818	0					
ANR	468217	Condition	( opline -> extended_value & ( IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED ) ) == ( IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED )	181:10:7036:7166	467818	0	True				
ANR	468218	EqualityExpression	( opline -> extended_value & ( IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED ) ) == ( IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED )		467818	0		==			
ANR	468219	BitAndExpression	opline -> extended_value & ( IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED )		467818	0		&			
ANR	468220	PtrMemberAccess	opline -> extended_value		467818	0					
ANR	468221	Identifier	opline		467818	0					
ANR	468222	Identifier	extended_value		467818	1					
ANR	468223	InclusiveOrExpression	IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED		467818	1		|			
ANR	468224	Identifier	IS_CONSTANT_IN_NAMESPACE		467818	0					
ANR	468225	Identifier	IS_CONSTANT_UNQUALIFIED		467818	1					
ANR	468226	InclusiveOrExpression	IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED		467818	1		|			
ANR	468227	Identifier	IS_CONSTANT_IN_NAMESPACE		467818	0					
ANR	468228	Identifier	IS_CONSTANT_UNQUALIFIED		467818	1					
ANR	468229	CompoundStatement		64:143:2010:2010	467818	1					
ANR	468230	ExpressionStatement	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_CONST , 1 , 1 , 5 )"	182:7:7178:7236	467818	0	True				
ANR	468231	CallExpression	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_CONST , 1 , 1 , 5 )"		467818	0					
ANR	468232	Callee	LITERAL_INFO		467818	0					
ANR	468233	Identifier	LITERAL_INFO		467818	0					
ANR	468234	ArgumentList	opline -> op2 . constant		467818	1					
ANR	468235	Argument	opline -> op2 . constant		467818	0					
ANR	468236	MemberAccess	opline -> op2 . constant		467818	0					
ANR	468237	PtrMemberAccess	opline -> op2		467818	0					
ANR	468238	Identifier	opline		467818	0					
ANR	468239	Identifier	op2		467818	1					
ANR	468240	Identifier	constant		467818	1					
ANR	468241	Argument	LITERAL_CONST		467818	1					
ANR	468242	Identifier	LITERAL_CONST		467818	0					
ANR	468243	Argument	1		467818	2					
ANR	468244	PrimaryExpression	1		467818	0					
ANR	468245	Argument	1		467818	3					
ANR	468246	PrimaryExpression	1		467818	0					
ANR	468247	Argument	5		467818	4					
ANR	468248	PrimaryExpression	5		467818	0					
ANR	468249	ElseStatement	else		467818	0					
ANR	468250	CompoundStatement		66:13:2092:2092	467818	0					
ANR	468251	ExpressionStatement	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_CONST , 1 , 1 , 3 )"	184:7:7260:7318	467818	0	True				
ANR	468252	CallExpression	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_CONST , 1 , 1 , 3 )"		467818	0					
ANR	468253	Callee	LITERAL_INFO		467818	0					
ANR	468254	Identifier	LITERAL_INFO		467818	0					
ANR	468255	ArgumentList	opline -> op2 . constant		467818	1					
ANR	468256	Argument	opline -> op2 . constant		467818	0					
ANR	468257	MemberAccess	opline -> op2 . constant		467818	0					
ANR	468258	PtrMemberAccess	opline -> op2		467818	0					
ANR	468259	Identifier	opline		467818	0					
ANR	468260	Identifier	op2		467818	1					
ANR	468261	Identifier	constant		467818	1					
ANR	468262	Argument	LITERAL_CONST		467818	1					
ANR	468263	Identifier	LITERAL_CONST		467818	0					
ANR	468264	Argument	1		467818	2					
ANR	468265	PrimaryExpression	1		467818	0					
ANR	468266	Argument	1		467818	3					
ANR	468267	PrimaryExpression	1		467818	0					
ANR	468268	Argument	3		467818	4					
ANR	468269	PrimaryExpression	3		467818	0					
ANR	468270	ElseStatement	else		467818	0					
ANR	468271	CompoundStatement		69:12:2181:2181	467818	0					
ANR	468272	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_CONST )		467818	0					
ANR	468273	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST	187:10:7352:7384	467818	0	True				
ANR	468274	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		467818	0		==			
ANR	468275	CallExpression	ZEND_OP1_TYPE ( opline )		467818	0					
ANR	468276	Callee	ZEND_OP1_TYPE		467818	0					
ANR	468277	Identifier	ZEND_OP1_TYPE		467818	0					
ANR	468278	ArgumentList	opline		467818	1					
ANR	468279	Argument	opline		467818	0					
ANR	468280	Identifier	opline		467818	0					
ANR	468281	Identifier	IS_CONST		467818	1					
ANR	468282	CompoundStatement		70:45:2228:2228	467818	1					
ANR	468283	ExpressionStatement	"LITERAL_INFO ( opline -> op1 . constant , LITERAL_CLASS , 1 , 1 , 2 )"	188:7:7396:7454	467818	0	True				
ANR	468284	CallExpression	"LITERAL_INFO ( opline -> op1 . constant , LITERAL_CLASS , 1 , 1 , 2 )"		467818	0					
ANR	468285	Callee	LITERAL_INFO		467818	0					
ANR	468286	Identifier	LITERAL_INFO		467818	0					
ANR	468287	ArgumentList	opline -> op1 . constant		467818	1					
ANR	468288	Argument	opline -> op1 . constant		467818	0					
ANR	468289	MemberAccess	opline -> op1 . constant		467818	0					
ANR	468290	PtrMemberAccess	opline -> op1		467818	0					
ANR	468291	Identifier	opline		467818	0					
ANR	468292	Identifier	op1		467818	1					
ANR	468293	Identifier	constant		467818	1					
ANR	468294	Argument	LITERAL_CLASS		467818	1					
ANR	468295	Identifier	LITERAL_CLASS		467818	0					
ANR	468296	Argument	1		467818	2					
ANR	468297	PrimaryExpression	1		467818	0					
ANR	468298	Argument	1		467818	3					
ANR	468299	PrimaryExpression	1		467818	0					
ANR	468300	Argument	2		467818	4					
ANR	468301	PrimaryExpression	2		467818	0					
ANR	468302	ExpressionStatement	"optimizer_literal_class_info ( info , opline -> op1_type , opline -> op1 , opline -> op2 . constant , LITERAL_CLASS_CONST , ( ZEND_OP1_TYPE ( opline ) == IS_CONST ) ? 1 : 2 , 1 , op_array )"	190:6:7470:7679	467818	1	True				
ANR	468303	CallExpression	"optimizer_literal_class_info ( info , opline -> op1_type , opline -> op1 , opline -> op2 . constant , LITERAL_CLASS_CONST , ( ZEND_OP1_TYPE ( opline ) == IS_CONST ) ? 1 : 2 , 1 , op_array )"		467818	0					
ANR	468304	Callee	optimizer_literal_class_info		467818	0					
ANR	468305	Identifier	optimizer_literal_class_info		467818	0					
ANR	468306	ArgumentList	info		467818	1					
ANR	468307	Argument	info		467818	0					
ANR	468308	Identifier	info		467818	0					
ANR	468309	Argument	opline -> op1_type		467818	1					
ANR	468310	PtrMemberAccess	opline -> op1_type		467818	0					
ANR	468311	Identifier	opline		467818	0					
ANR	468312	Identifier	op1_type		467818	1					
ANR	468313	Argument	opline -> op1		467818	2					
ANR	468314	PtrMemberAccess	opline -> op1		467818	0					
ANR	468315	Identifier	opline		467818	0					
ANR	468316	Identifier	op1		467818	1					
ANR	468317	Argument	opline -> op2 . constant		467818	3					
ANR	468318	MemberAccess	opline -> op2 . constant		467818	0					
ANR	468319	PtrMemberAccess	opline -> op2		467818	0					
ANR	468320	Identifier	opline		467818	0					
ANR	468321	Identifier	op2		467818	1					
ANR	468322	Identifier	constant		467818	1					
ANR	468323	Argument	LITERAL_CLASS_CONST		467818	4					
ANR	468324	Identifier	LITERAL_CLASS_CONST		467818	0					
ANR	468325	Argument	( ZEND_OP1_TYPE ( opline ) == IS_CONST ) ? 1 : 2		467818	5					
ANR	468326	ConditionalExpression	( ZEND_OP1_TYPE ( opline ) == IS_CONST ) ? 1 : 2		467818	0					
ANR	468327	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST		467818	0					
ANR	468328	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		467818	0		==			
ANR	468329	CallExpression	ZEND_OP1_TYPE ( opline )		467818	0					
ANR	468330	Callee	ZEND_OP1_TYPE		467818	0					
ANR	468331	Identifier	ZEND_OP1_TYPE		467818	0					
ANR	468332	ArgumentList	opline		467818	1					
ANR	468333	Argument	opline		467818	0					
ANR	468334	Identifier	opline		467818	0					
ANR	468335	Identifier	IS_CONST		467818	1					
ANR	468336	PrimaryExpression	1		467818	1					
ANR	468337	PrimaryExpression	2		467818	2					
ANR	468338	Argument	1		467818	6					
ANR	468339	PrimaryExpression	1		467818	0					
ANR	468340	Argument	op_array		467818	7					
ANR	468341	Identifier	op_array		467818	0					
ANR	468342	BreakStatement	break ;	198:5:7693:7698	467818	24	True				
ANR	468343	Label	case ZEND_FETCH_R :	199:4:7704:7721	467818	25	True				
ANR	468344	Identifier	ZEND_FETCH_R		467818	0					
ANR	468345	Label	case ZEND_FETCH_W :	200:4:7727:7744	467818	26	True				
ANR	468346	Identifier	ZEND_FETCH_W		467818	0					
ANR	468347	Label	case ZEND_FETCH_RW :	201:4:7750:7768	467818	27	True				
ANR	468348	Identifier	ZEND_FETCH_RW		467818	0					
ANR	468349	Label	case ZEND_FETCH_IS :	202:4:7774:7792	467818	28	True				
ANR	468350	Identifier	ZEND_FETCH_IS		467818	0					
ANR	468351	Label	case ZEND_FETCH_UNSET :	203:4:7798:7819	467818	29	True				
ANR	468352	Identifier	ZEND_FETCH_UNSET		467818	0					
ANR	468353	Label	case ZEND_FETCH_FUNC_ARG :	204:4:7825:7849	467818	30	True				
ANR	468354	Identifier	ZEND_FETCH_FUNC_ARG		467818	0					
ANR	468355	Label	case ZEND_UNSET_VAR :	205:4:7855:7874	467818	31	True				
ANR	468356	Identifier	ZEND_UNSET_VAR		467818	0					
ANR	468357	Label	case ZEND_ISSET_ISEMPTY_VAR :	206:4:7880:7907	467818	32	True				
ANR	468358	Identifier	ZEND_ISSET_ISEMPTY_VAR		467818	0					
ANR	468359	IfStatement	if ( ZEND_OP2_TYPE ( opline ) == IS_UNUSED )		467818	33					
ANR	468360	Condition	ZEND_OP2_TYPE ( opline ) == IS_UNUSED	207:9:7918:7951	467818	0	True				
ANR	468361	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_UNUSED		467818	0		==			
ANR	468362	CallExpression	ZEND_OP2_TYPE ( opline )		467818	0					
ANR	468363	Callee	ZEND_OP2_TYPE		467818	0					
ANR	468364	Identifier	ZEND_OP2_TYPE		467818	0					
ANR	468365	ArgumentList	opline		467818	1					
ANR	468366	Argument	opline		467818	0					
ANR	468367	Identifier	opline		467818	0					
ANR	468368	Identifier	IS_UNUSED		467818	1					
ANR	468369	CompoundStatement		90:45:2795:2795	467818	1					
ANR	468370	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_CONST )		467818	0					
ANR	468371	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST	208:10:7966:7998	467818	0	True				
ANR	468372	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		467818	0		==			
ANR	468373	CallExpression	ZEND_OP1_TYPE ( opline )		467818	0					
ANR	468374	Callee	ZEND_OP1_TYPE		467818	0					
ANR	468375	Identifier	ZEND_OP1_TYPE		467818	0					
ANR	468376	ArgumentList	opline		467818	1					
ANR	468377	Argument	opline		467818	0					
ANR	468378	Identifier	opline		467818	0					
ANR	468379	Identifier	IS_CONST		467818	1					
ANR	468380	CompoundStatement		91:45:2842:2842	467818	1					
ANR	468381	ExpressionStatement	"LITERAL_INFO ( opline -> op1 . constant , LITERAL_VALUE , 1 , 0 , 1 )"	209:7:8010:8068	467818	0	True				
ANR	468382	CallExpression	"LITERAL_INFO ( opline -> op1 . constant , LITERAL_VALUE , 1 , 0 , 1 )"		467818	0					
ANR	468383	Callee	LITERAL_INFO		467818	0					
ANR	468384	Identifier	LITERAL_INFO		467818	0					
ANR	468385	ArgumentList	opline -> op1 . constant		467818	1					
ANR	468386	Argument	opline -> op1 . constant		467818	0					
ANR	468387	MemberAccess	opline -> op1 . constant		467818	0					
ANR	468388	PtrMemberAccess	opline -> op1		467818	0					
ANR	468389	Identifier	opline		467818	0					
ANR	468390	Identifier	op1		467818	1					
ANR	468391	Identifier	constant		467818	1					
ANR	468392	Argument	LITERAL_VALUE		467818	1					
ANR	468393	Identifier	LITERAL_VALUE		467818	0					
ANR	468394	Argument	1		467818	2					
ANR	468395	PrimaryExpression	1		467818	0					
ANR	468396	Argument	0		467818	3					
ANR	468397	PrimaryExpression	0		467818	0					
ANR	468398	Argument	1		467818	4					
ANR	468399	PrimaryExpression	1		467818	0					
ANR	468400	ElseStatement	else		467818	0					
ANR	468401	CompoundStatement		94:12:2931:2931	467818	0					
ANR	468402	IfStatement	if ( ZEND_OP2_TYPE ( opline ) == IS_CONST )		467818	0					
ANR	468403	Condition	ZEND_OP2_TYPE ( opline ) == IS_CONST	212:10:8102:8134	467818	0	True				
ANR	468404	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST		467818	0		==			
ANR	468405	CallExpression	ZEND_OP2_TYPE ( opline )		467818	0					
ANR	468406	Callee	ZEND_OP2_TYPE		467818	0					
ANR	468407	Identifier	ZEND_OP2_TYPE		467818	0					
ANR	468408	ArgumentList	opline		467818	1					
ANR	468409	Argument	opline		467818	0					
ANR	468410	Identifier	opline		467818	0					
ANR	468411	Identifier	IS_CONST		467818	1					
ANR	468412	CompoundStatement		95:45:2978:2978	467818	1					
ANR	468413	ExpressionStatement	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_CLASS , 1 , 1 , 2 )"	213:7:8146:8204	467818	0	True				
ANR	468414	CallExpression	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_CLASS , 1 , 1 , 2 )"		467818	0					
ANR	468415	Callee	LITERAL_INFO		467818	0					
ANR	468416	Identifier	LITERAL_INFO		467818	0					
ANR	468417	ArgumentList	opline -> op2 . constant		467818	1					
ANR	468418	Argument	opline -> op2 . constant		467818	0					
ANR	468419	MemberAccess	opline -> op2 . constant		467818	0					
ANR	468420	PtrMemberAccess	opline -> op2		467818	0					
ANR	468421	Identifier	opline		467818	0					
ANR	468422	Identifier	op2		467818	1					
ANR	468423	Identifier	constant		467818	1					
ANR	468424	Argument	LITERAL_CLASS		467818	1					
ANR	468425	Identifier	LITERAL_CLASS		467818	0					
ANR	468426	Argument	1		467818	2					
ANR	468427	PrimaryExpression	1		467818	0					
ANR	468428	Argument	1		467818	3					
ANR	468429	PrimaryExpression	1		467818	0					
ANR	468430	Argument	2		467818	4					
ANR	468431	PrimaryExpression	2		467818	0					
ANR	468432	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_CONST )		467818	1					
ANR	468433	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST	215:10:8224:8256	467818	0	True				
ANR	468434	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		467818	0		==			
ANR	468435	CallExpression	ZEND_OP1_TYPE ( opline )		467818	0					
ANR	468436	Callee	ZEND_OP1_TYPE		467818	0					
ANR	468437	Identifier	ZEND_OP1_TYPE		467818	0					
ANR	468438	ArgumentList	opline		467818	1					
ANR	468439	Argument	opline		467818	0					
ANR	468440	Identifier	opline		467818	0					
ANR	468441	Identifier	IS_CONST		467818	1					
ANR	468442	CompoundStatement		98:45:3100:3100	467818	1					
ANR	468443	ExpressionStatement	"optimizer_literal_class_info ( info , opline -> op2_type , opline -> op2 , opline -> op1 . constant , LITERAL_STATIC_PROPERTY , 2 , 1 , op_array )"	216:7:8268:8445	467818	0	True				
ANR	468444	CallExpression	"optimizer_literal_class_info ( info , opline -> op2_type , opline -> op2 , opline -> op1 . constant , LITERAL_STATIC_PROPERTY , 2 , 1 , op_array )"		467818	0					
ANR	468445	Callee	optimizer_literal_class_info		467818	0					
ANR	468446	Identifier	optimizer_literal_class_info		467818	0					
ANR	468447	ArgumentList	info		467818	1					
ANR	468448	Argument	info		467818	0					
ANR	468449	Identifier	info		467818	0					
ANR	468450	Argument	opline -> op2_type		467818	1					
ANR	468451	PtrMemberAccess	opline -> op2_type		467818	0					
ANR	468452	Identifier	opline		467818	0					
ANR	468453	Identifier	op2_type		467818	1					
ANR	468454	Argument	opline -> op2		467818	2					
ANR	468455	PtrMemberAccess	opline -> op2		467818	0					
ANR	468456	Identifier	opline		467818	0					
ANR	468457	Identifier	op2		467818	1					
ANR	468458	Argument	opline -> op1 . constant		467818	3					
ANR	468459	MemberAccess	opline -> op1 . constant		467818	0					
ANR	468460	PtrMemberAccess	opline -> op1		467818	0					
ANR	468461	Identifier	opline		467818	0					
ANR	468462	Identifier	op1		467818	1					
ANR	468463	Identifier	constant		467818	1					
ANR	468464	Argument	LITERAL_STATIC_PROPERTY		467818	4					
ANR	468465	Identifier	LITERAL_STATIC_PROPERTY		467818	0					
ANR	468466	Argument	2		467818	5					
ANR	468467	PrimaryExpression	2		467818	0					
ANR	468468	Argument	1		467818	6					
ANR	468469	PrimaryExpression	1		467818	0					
ANR	468470	Argument	op_array		467818	7					
ANR	468471	Identifier	op_array		467818	0					
ANR	468472	BreakStatement	break ;	225:5:8467:8472	467818	34	True				
ANR	468473	Label	case ZEND_FETCH_CLASS :	226:4:8478:8499	467818	35	True				
ANR	468474	Identifier	ZEND_FETCH_CLASS		467818	0					
ANR	468475	Label	case ZEND_ADD_INTERFACE :	227:4:8505:8528	467818	36	True				
ANR	468476	Identifier	ZEND_ADD_INTERFACE		467818	0					
ANR	468477	Label	case ZEND_ADD_TRAIT :	228:4:8534:8553	467818	37	True				
ANR	468478	Identifier	ZEND_ADD_TRAIT		467818	0					
ANR	468479	Label	case ZEND_INSTANCEOF :	229:4:8559:8579	467818	38	True				
ANR	468480	Identifier	ZEND_INSTANCEOF		467818	0					
ANR	468481	IfStatement	if ( ZEND_OP2_TYPE ( opline ) == IS_CONST )		467818	39					
ANR	468482	Condition	ZEND_OP2_TYPE ( opline ) == IS_CONST	230:9:8590:8622	467818	0	True				
ANR	468483	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST		467818	0		==			
ANR	468484	CallExpression	ZEND_OP2_TYPE ( opline )		467818	0					
ANR	468485	Callee	ZEND_OP2_TYPE		467818	0					
ANR	468486	Identifier	ZEND_OP2_TYPE		467818	0					
ANR	468487	ArgumentList	opline		467818	1					
ANR	468488	Argument	opline		467818	0					
ANR	468489	Identifier	opline		467818	0					
ANR	468490	Identifier	IS_CONST		467818	1					
ANR	468491	CompoundStatement		113:44:3466:3466	467818	1					
ANR	468492	ExpressionStatement	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_CLASS , 1 , 1 , 2 )"	231:6:8633:8691	467818	0	True				
ANR	468493	CallExpression	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_CLASS , 1 , 1 , 2 )"		467818	0					
ANR	468494	Callee	LITERAL_INFO		467818	0					
ANR	468495	Identifier	LITERAL_INFO		467818	0					
ANR	468496	ArgumentList	opline -> op2 . constant		467818	1					
ANR	468497	Argument	opline -> op2 . constant		467818	0					
ANR	468498	MemberAccess	opline -> op2 . constant		467818	0					
ANR	468499	PtrMemberAccess	opline -> op2		467818	0					
ANR	468500	Identifier	opline		467818	0					
ANR	468501	Identifier	op2		467818	1					
ANR	468502	Identifier	constant		467818	1					
ANR	468503	Argument	LITERAL_CLASS		467818	1					
ANR	468504	Identifier	LITERAL_CLASS		467818	0					
ANR	468505	Argument	1		467818	2					
ANR	468506	PrimaryExpression	1		467818	0					
ANR	468507	Argument	1		467818	3					
ANR	468508	PrimaryExpression	1		467818	0					
ANR	468509	Argument	2		467818	4					
ANR	468510	PrimaryExpression	2		467818	0					
ANR	468511	BreakStatement	break ;	233:5:8705:8710	467818	40	True				
ANR	468512	Label	case ZEND_NEW :	234:4:8716:8729	467818	41	True				
ANR	468513	Identifier	ZEND_NEW		467818	0					
ANR	468514	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_CONST )		467818	42					
ANR	468515	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST	235:9:8740:8772	467818	0	True				
ANR	468516	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		467818	0		==			
ANR	468517	CallExpression	ZEND_OP1_TYPE ( opline )		467818	0					
ANR	468518	Callee	ZEND_OP1_TYPE		467818	0					
ANR	468519	Identifier	ZEND_OP1_TYPE		467818	0					
ANR	468520	ArgumentList	opline		467818	1					
ANR	468521	Argument	opline		467818	0					
ANR	468522	Identifier	opline		467818	0					
ANR	468523	Identifier	IS_CONST		467818	1					
ANR	468524	CompoundStatement		118:44:3616:3616	467818	1					
ANR	468525	ExpressionStatement	"LITERAL_INFO ( opline -> op1 . constant , LITERAL_CLASS , 1 , 1 , 2 )"	236:6:8783:8841	467818	0	True				
ANR	468526	CallExpression	"LITERAL_INFO ( opline -> op1 . constant , LITERAL_CLASS , 1 , 1 , 2 )"		467818	0					
ANR	468527	Callee	LITERAL_INFO		467818	0					
ANR	468528	Identifier	LITERAL_INFO		467818	0					
ANR	468529	ArgumentList	opline -> op1 . constant		467818	1					
ANR	468530	Argument	opline -> op1 . constant		467818	0					
ANR	468531	MemberAccess	opline -> op1 . constant		467818	0					
ANR	468532	PtrMemberAccess	opline -> op1		467818	0					
ANR	468533	Identifier	opline		467818	0					
ANR	468534	Identifier	op1		467818	1					
ANR	468535	Identifier	constant		467818	1					
ANR	468536	Argument	LITERAL_CLASS		467818	1					
ANR	468537	Identifier	LITERAL_CLASS		467818	0					
ANR	468538	Argument	1		467818	2					
ANR	468539	PrimaryExpression	1		467818	0					
ANR	468540	Argument	1		467818	3					
ANR	468541	PrimaryExpression	1		467818	0					
ANR	468542	Argument	2		467818	4					
ANR	468543	PrimaryExpression	2		467818	0					
ANR	468544	BreakStatement	break ;	238:5:8855:8860	467818	43	True				
ANR	468545	Label	case ZEND_ASSIGN_OBJ :	239:4:8866:8886	467818	44	True				
ANR	468546	Identifier	ZEND_ASSIGN_OBJ		467818	0					
ANR	468547	Label	case ZEND_FETCH_OBJ_R :	240:4:8892:8913	467818	45	True				
ANR	468548	Identifier	ZEND_FETCH_OBJ_R		467818	0					
ANR	468549	Label	case ZEND_FETCH_OBJ_W :	241:4:8919:8940	467818	46	True				
ANR	468550	Identifier	ZEND_FETCH_OBJ_W		467818	0					
ANR	468551	Label	case ZEND_FETCH_OBJ_RW :	242:4:8946:8968	467818	47	True				
ANR	468552	Identifier	ZEND_FETCH_OBJ_RW		467818	0					
ANR	468553	Label	case ZEND_FETCH_OBJ_IS :	243:4:8974:8996	467818	48	True				
ANR	468554	Identifier	ZEND_FETCH_OBJ_IS		467818	0					
ANR	468555	Label	case ZEND_FETCH_OBJ_UNSET :	244:4:9002:9027	467818	49	True				
ANR	468556	Identifier	ZEND_FETCH_OBJ_UNSET		467818	0					
ANR	468557	Label	case ZEND_FETCH_OBJ_FUNC_ARG :	245:4:9033:9061	467818	50	True				
ANR	468558	Identifier	ZEND_FETCH_OBJ_FUNC_ARG		467818	0					
ANR	468559	Label	case ZEND_UNSET_OBJ :	246:4:9067:9086	467818	51	True				
ANR	468560	Identifier	ZEND_UNSET_OBJ		467818	0					
ANR	468561	Label	case ZEND_PRE_INC_OBJ :	247:4:9092:9113	467818	52	True				
ANR	468562	Identifier	ZEND_PRE_INC_OBJ		467818	0					
ANR	468563	Label	case ZEND_PRE_DEC_OBJ :	248:4:9119:9140	467818	53	True				
ANR	468564	Identifier	ZEND_PRE_DEC_OBJ		467818	0					
ANR	468565	Label	case ZEND_POST_INC_OBJ :	249:4:9146:9168	467818	54	True				
ANR	468566	Identifier	ZEND_POST_INC_OBJ		467818	0					
ANR	468567	Label	case ZEND_POST_DEC_OBJ :	250:4:9174:9196	467818	55	True				
ANR	468568	Identifier	ZEND_POST_DEC_OBJ		467818	0					
ANR	468569	Label	case ZEND_ISSET_ISEMPTY_PROP_OBJ :	251:4:9202:9234	467818	56	True				
ANR	468570	Identifier	ZEND_ISSET_ISEMPTY_PROP_OBJ		467818	0					
ANR	468571	IfStatement	if ( ZEND_OP2_TYPE ( opline ) == IS_CONST )		467818	57					
ANR	468572	Condition	ZEND_OP2_TYPE ( opline ) == IS_CONST	252:9:9245:9277	467818	0	True				
ANR	468573	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST		467818	0		==			
ANR	468574	CallExpression	ZEND_OP2_TYPE ( opline )		467818	0					
ANR	468575	Callee	ZEND_OP2_TYPE		467818	0					
ANR	468576	Identifier	ZEND_OP2_TYPE		467818	0					
ANR	468577	ArgumentList	opline		467818	1					
ANR	468578	Argument	opline		467818	0					
ANR	468579	Identifier	opline		467818	0					
ANR	468580	Identifier	IS_CONST		467818	1					
ANR	468581	CompoundStatement		135:44:4121:4121	467818	1					
ANR	468582	ExpressionStatement	"optimizer_literal_obj_info ( info , opline -> op1_type , opline -> op1 , opline -> op2 . constant , LITERAL_PROPERTY , 2 , 1 , op_array )"	253:6:9288:9450	467818	0	True				
ANR	468583	CallExpression	"optimizer_literal_obj_info ( info , opline -> op1_type , opline -> op1 , opline -> op2 . constant , LITERAL_PROPERTY , 2 , 1 , op_array )"		467818	0					
ANR	468584	Callee	optimizer_literal_obj_info		467818	0					
ANR	468585	Identifier	optimizer_literal_obj_info		467818	0					
ANR	468586	ArgumentList	info		467818	1					
ANR	468587	Argument	info		467818	0					
ANR	468588	Identifier	info		467818	0					
ANR	468589	Argument	opline -> op1_type		467818	1					
ANR	468590	PtrMemberAccess	opline -> op1_type		467818	0					
ANR	468591	Identifier	opline		467818	0					
ANR	468592	Identifier	op1_type		467818	1					
ANR	468593	Argument	opline -> op1		467818	2					
ANR	468594	PtrMemberAccess	opline -> op1		467818	0					
ANR	468595	Identifier	opline		467818	0					
ANR	468596	Identifier	op1		467818	1					
ANR	468597	Argument	opline -> op2 . constant		467818	3					
ANR	468598	MemberAccess	opline -> op2 . constant		467818	0					
ANR	468599	PtrMemberAccess	opline -> op2		467818	0					
ANR	468600	Identifier	opline		467818	0					
ANR	468601	Identifier	op2		467818	1					
ANR	468602	Identifier	constant		467818	1					
ANR	468603	Argument	LITERAL_PROPERTY		467818	4					
ANR	468604	Identifier	LITERAL_PROPERTY		467818	0					
ANR	468605	Argument	2		467818	5					
ANR	468606	PrimaryExpression	2		467818	0					
ANR	468607	Argument	1		467818	6					
ANR	468608	PrimaryExpression	1		467818	0					
ANR	468609	Argument	op_array		467818	7					
ANR	468610	Identifier	op_array		467818	0					
ANR	468611	BreakStatement	break ;	261:5:9464:9469	467818	58	True				
ANR	468612	Label	case ZEND_ASSIGN_ADD :	262:4:9475:9495	467818	59	True				
ANR	468613	Identifier	ZEND_ASSIGN_ADD		467818	0					
ANR	468614	Label	case ZEND_ASSIGN_SUB :	263:4:9501:9521	467818	60	True				
ANR	468615	Identifier	ZEND_ASSIGN_SUB		467818	0					
ANR	468616	Label	case ZEND_ASSIGN_MUL :	264:4:9527:9547	467818	61	True				
ANR	468617	Identifier	ZEND_ASSIGN_MUL		467818	0					
ANR	468618	Label	case ZEND_ASSIGN_DIV :	265:4:9553:9573	467818	62	True				
ANR	468619	Identifier	ZEND_ASSIGN_DIV		467818	0					
ANR	468620	Label	case ZEND_ASSIGN_POW :	266:4:9579:9599	467818	63	True				
ANR	468621	Identifier	ZEND_ASSIGN_POW		467818	0					
ANR	468622	Label	case ZEND_ASSIGN_MOD :	267:4:9605:9625	467818	64	True				
ANR	468623	Identifier	ZEND_ASSIGN_MOD		467818	0					
ANR	468624	Label	case ZEND_ASSIGN_SL :	268:4:9631:9650	467818	65	True				
ANR	468625	Identifier	ZEND_ASSIGN_SL		467818	0					
ANR	468626	Label	case ZEND_ASSIGN_SR :	269:4:9656:9675	467818	66	True				
ANR	468627	Identifier	ZEND_ASSIGN_SR		467818	0					
ANR	468628	Label	case ZEND_ASSIGN_CONCAT :	270:4:9681:9704	467818	67	True				
ANR	468629	Identifier	ZEND_ASSIGN_CONCAT		467818	0					
ANR	468630	Label	case ZEND_ASSIGN_BW_OR :	271:4:9710:9732	467818	68	True				
ANR	468631	Identifier	ZEND_ASSIGN_BW_OR		467818	0					
ANR	468632	Label	case ZEND_ASSIGN_BW_AND :	272:4:9738:9761	467818	69	True				
ANR	468633	Identifier	ZEND_ASSIGN_BW_AND		467818	0					
ANR	468634	Label	case ZEND_ASSIGN_BW_XOR :	273:4:9767:9790	467818	70	True				
ANR	468635	Identifier	ZEND_ASSIGN_BW_XOR		467818	0					
ANR	468636	IfStatement	if ( ZEND_OP2_TYPE ( opline ) == IS_CONST )		467818	71					
ANR	468637	Condition	ZEND_OP2_TYPE ( opline ) == IS_CONST	274:9:9801:9833	467818	0	True				
ANR	468638	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST		467818	0		==			
ANR	468639	CallExpression	ZEND_OP2_TYPE ( opline )		467818	0					
ANR	468640	Callee	ZEND_OP2_TYPE		467818	0					
ANR	468641	Identifier	ZEND_OP2_TYPE		467818	0					
ANR	468642	ArgumentList	opline		467818	1					
ANR	468643	Argument	opline		467818	0					
ANR	468644	Identifier	opline		467818	0					
ANR	468645	Identifier	IS_CONST		467818	1					
ANR	468646	CompoundStatement		157:44:4677:4677	467818	1					
ANR	468647	IfStatement	if ( opline -> extended_value == ZEND_ASSIGN_OBJ )		467818	0					
ANR	468648	Condition	opline -> extended_value == ZEND_ASSIGN_OBJ	275:10:9848:9888	467818	0	True				
ANR	468649	EqualityExpression	opline -> extended_value == ZEND_ASSIGN_OBJ		467818	0		==			
ANR	468650	PtrMemberAccess	opline -> extended_value		467818	0					
ANR	468651	Identifier	opline		467818	0					
ANR	468652	Identifier	extended_value		467818	1					
ANR	468653	Identifier	ZEND_ASSIGN_OBJ		467818	1					
ANR	468654	CompoundStatement		158:53:4732:4732	467818	1					
ANR	468655	ExpressionStatement	"optimizer_literal_obj_info ( info , opline -> op1_type , opline -> op1 , opline -> op2 . constant , LITERAL_PROPERTY , 2 , 1 , op_array )"	276:7:9900:10068	467818	0	True				
ANR	468656	CallExpression	"optimizer_literal_obj_info ( info , opline -> op1_type , opline -> op1 , opline -> op2 . constant , LITERAL_PROPERTY , 2 , 1 , op_array )"		467818	0					
ANR	468657	Callee	optimizer_literal_obj_info		467818	0					
ANR	468658	Identifier	optimizer_literal_obj_info		467818	0					
ANR	468659	ArgumentList	info		467818	1					
ANR	468660	Argument	info		467818	0					
ANR	468661	Identifier	info		467818	0					
ANR	468662	Argument	opline -> op1_type		467818	1					
ANR	468663	PtrMemberAccess	opline -> op1_type		467818	0					
ANR	468664	Identifier	opline		467818	0					
ANR	468665	Identifier	op1_type		467818	1					
ANR	468666	Argument	opline -> op1		467818	2					
ANR	468667	PtrMemberAccess	opline -> op1		467818	0					
ANR	468668	Identifier	opline		467818	0					
ANR	468669	Identifier	op1		467818	1					
ANR	468670	Argument	opline -> op2 . constant		467818	3					
ANR	468671	MemberAccess	opline -> op2 . constant		467818	0					
ANR	468672	PtrMemberAccess	opline -> op2		467818	0					
ANR	468673	Identifier	opline		467818	0					
ANR	468674	Identifier	op2		467818	1					
ANR	468675	Identifier	constant		467818	1					
ANR	468676	Argument	LITERAL_PROPERTY		467818	4					
ANR	468677	Identifier	LITERAL_PROPERTY		467818	0					
ANR	468678	Argument	2		467818	5					
ANR	468679	PrimaryExpression	2		467818	0					
ANR	468680	Argument	1		467818	6					
ANR	468681	PrimaryExpression	1		467818	0					
ANR	468682	Argument	op_array		467818	7					
ANR	468683	Identifier	op_array		467818	0					
ANR	468684	ElseStatement	else		467818	0					
ANR	468685	CompoundStatement		166:13:4924:4924	467818	0					
ANR	468686	ExpressionStatement	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_VALUE , 1 , 0 , 1 )"	284:7:10092:10150	467818	0	True				
ANR	468687	CallExpression	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_VALUE , 1 , 0 , 1 )"		467818	0					
ANR	468688	Callee	LITERAL_INFO		467818	0					
ANR	468689	Identifier	LITERAL_INFO		467818	0					
ANR	468690	ArgumentList	opline -> op2 . constant		467818	1					
ANR	468691	Argument	opline -> op2 . constant		467818	0					
ANR	468692	MemberAccess	opline -> op2 . constant		467818	0					
ANR	468693	PtrMemberAccess	opline -> op2		467818	0					
ANR	468694	Identifier	opline		467818	0					
ANR	468695	Identifier	op2		467818	1					
ANR	468696	Identifier	constant		467818	1					
ANR	468697	Argument	LITERAL_VALUE		467818	1					
ANR	468698	Identifier	LITERAL_VALUE		467818	0					
ANR	468699	Argument	1		467818	2					
ANR	468700	PrimaryExpression	1		467818	0					
ANR	468701	Argument	0		467818	3					
ANR	468702	PrimaryExpression	0		467818	0					
ANR	468703	Argument	1		467818	4					
ANR	468704	PrimaryExpression	1		467818	0					
ANR	468705	BreakStatement	break ;	287:5:10172:10177	467818	72	True				
ANR	468706	Label	case ZEND_BIND_GLOBAL :	288:4:10183:10204	467818	73	True				
ANR	468707	Identifier	ZEND_BIND_GLOBAL		467818	0					
ANR	468708	ExpressionStatement	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_GLOBAL , 0 , 1 , 1 )"	289:5:10211:10270	467818	74	True				
ANR	468709	CallExpression	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_GLOBAL , 0 , 1 , 1 )"		467818	0					
ANR	468710	Callee	LITERAL_INFO		467818	0					
ANR	468711	Identifier	LITERAL_INFO		467818	0					
ANR	468712	ArgumentList	opline -> op2 . constant		467818	1					
ANR	468713	Argument	opline -> op2 . constant		467818	0					
ANR	468714	MemberAccess	opline -> op2 . constant		467818	0					
ANR	468715	PtrMemberAccess	opline -> op2		467818	0					
ANR	468716	Identifier	opline		467818	0					
ANR	468717	Identifier	op2		467818	1					
ANR	468718	Identifier	constant		467818	1					
ANR	468719	Argument	LITERAL_GLOBAL		467818	1					
ANR	468720	Identifier	LITERAL_GLOBAL		467818	0					
ANR	468721	Argument	0		467818	2					
ANR	468722	PrimaryExpression	0		467818	0					
ANR	468723	Argument	1		467818	3					
ANR	468724	PrimaryExpression	1		467818	0					
ANR	468725	Argument	1		467818	4					
ANR	468726	PrimaryExpression	1		467818	0					
ANR	468727	BreakStatement	break ;	290:5:10277:10282	467818	75	True				
ANR	468728	Label	case ZEND_RECV_INIT :	291:4:10288:10307	467818	76	True				
ANR	468729	Identifier	ZEND_RECV_INIT		467818	0					
ANR	468730	ExpressionStatement	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_VALUE , 0 , 0 , 1 )"	292:5:10314:10372	467818	77	True				
ANR	468731	CallExpression	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_VALUE , 0 , 0 , 1 )"		467818	0					
ANR	468732	Callee	LITERAL_INFO		467818	0					
ANR	468733	Identifier	LITERAL_INFO		467818	0					
ANR	468734	ArgumentList	opline -> op2 . constant		467818	1					
ANR	468735	Argument	opline -> op2 . constant		467818	0					
ANR	468736	MemberAccess	opline -> op2 . constant		467818	0					
ANR	468737	PtrMemberAccess	opline -> op2		467818	0					
ANR	468738	Identifier	opline		467818	0					
ANR	468739	Identifier	op2		467818	1					
ANR	468740	Identifier	constant		467818	1					
ANR	468741	Argument	LITERAL_VALUE		467818	1					
ANR	468742	Identifier	LITERAL_VALUE		467818	0					
ANR	468743	Argument	0		467818	2					
ANR	468744	PrimaryExpression	0		467818	0					
ANR	468745	Argument	0		467818	3					
ANR	468746	PrimaryExpression	0		467818	0					
ANR	468747	Argument	1		467818	4					
ANR	468748	PrimaryExpression	1		467818	0					
ANR	468749	IfStatement	if ( Z_CACHE_SLOT ( op_array -> literals [ opline -> op2 . constant ] ) != - 1 )		467818	78					
ANR	468750	Condition	Z_CACHE_SLOT ( op_array -> literals [ opline -> op2 . constant ] ) != - 1	293:9:10383:10442	467818	0	True				
ANR	468751	EqualityExpression	Z_CACHE_SLOT ( op_array -> literals [ opline -> op2 . constant ] ) != - 1		467818	0		!=			
ANR	468752	CallExpression	Z_CACHE_SLOT ( op_array -> literals [ opline -> op2 . constant ] )		467818	0					
ANR	468753	Callee	Z_CACHE_SLOT		467818	0					
ANR	468754	Identifier	Z_CACHE_SLOT		467818	0					
ANR	468755	ArgumentList	op_array -> literals [ opline -> op2 . constant ]		467818	1					
ANR	468756	Argument	op_array -> literals [ opline -> op2 . constant ]		467818	0					
ANR	468757	ArrayIndexing	op_array -> literals [ opline -> op2 . constant ]		467818	0					
ANR	468758	PtrMemberAccess	op_array -> literals		467818	0					
ANR	468759	Identifier	op_array		467818	0					
ANR	468760	Identifier	literals		467818	1					
ANR	468761	MemberAccess	opline -> op2 . constant		467818	1					
ANR	468762	PtrMemberAccess	opline -> op2		467818	0					
ANR	468763	Identifier	opline		467818	0					
ANR	468764	Identifier	op2		467818	1					
ANR	468765	Identifier	constant		467818	1					
ANR	468766	UnaryOperationExpression	- 1		467818	1					
ANR	468767	UnaryOperator	-		467818	0					
ANR	468768	PrimaryExpression	1		467818	1					
ANR	468769	CompoundStatement		176:71:5286:5286	467818	1					
ANR	468770	ExpressionStatement	Z_CACHE_SLOT ( op_array -> literals [ opline -> op2 . constant ] ) = cache_size	294:6:10453:10520	467818	0	True				
ANR	468771	AssignmentExpression	Z_CACHE_SLOT ( op_array -> literals [ opline -> op2 . constant ] ) = cache_size		467818	0		=			
ANR	468772	CallExpression	Z_CACHE_SLOT ( op_array -> literals [ opline -> op2 . constant ] )		467818	0					
ANR	468773	Callee	Z_CACHE_SLOT		467818	0					
ANR	468774	Identifier	Z_CACHE_SLOT		467818	0					
ANR	468775	ArgumentList	op_array -> literals [ opline -> op2 . constant ]		467818	1					
ANR	468776	Argument	op_array -> literals [ opline -> op2 . constant ]		467818	0					
ANR	468777	ArrayIndexing	op_array -> literals [ opline -> op2 . constant ]		467818	0					
ANR	468778	PtrMemberAccess	op_array -> literals		467818	0					
ANR	468779	Identifier	op_array		467818	0					
ANR	468780	Identifier	literals		467818	1					
ANR	468781	MemberAccess	opline -> op2 . constant		467818	1					
ANR	468782	PtrMemberAccess	opline -> op2		467818	0					
ANR	468783	Identifier	opline		467818	0					
ANR	468784	Identifier	op2		467818	1					
ANR	468785	Identifier	constant		467818	1					
ANR	468786	Identifier	cache_size		467818	1					
ANR	468787	ExpressionStatement	cache_size += sizeof ( void * )	295:6:10528:10556	467818	1	True				
ANR	468788	AssignmentExpression	cache_size += sizeof ( void * )		467818	0		+=			
ANR	468789	Identifier	cache_size		467818	0					
ANR	468790	SizeofExpression	sizeof ( void * )		467818	1					
ANR	468791	Sizeof	sizeof		467818	0					
ANR	468792	SizeofOperand	void *		467818	1					
ANR	468793	BreakStatement	break ;	297:5:10570:10575	467818	79	True				
ANR	468794	Label	case ZEND_RECV :	298:4:10581:10595	467818	80	True				
ANR	468795	Identifier	ZEND_RECV		467818	0					
ANR	468796	Label	case ZEND_RECV_VARIADIC :	299:4:10601:10624	467818	81	True				
ANR	468797	Identifier	ZEND_RECV_VARIADIC		467818	0					
ANR	468798	Label	case ZEND_VERIFY_RETURN_TYPE :	300:4:10630:10658	467818	82	True				
ANR	468799	Identifier	ZEND_VERIFY_RETURN_TYPE		467818	0					
ANR	468800	IfStatement	if ( opline -> op2 . num != - 1 )		467818	83					
ANR	468801	Condition	opline -> op2 . num != - 1	301:9:10669:10689	467818	0	True				
ANR	468802	EqualityExpression	opline -> op2 . num != - 1		467818	0		!=			
ANR	468803	MemberAccess	opline -> op2 . num		467818	0					
ANR	468804	PtrMemberAccess	opline -> op2		467818	0					
ANR	468805	Identifier	opline		467818	0					
ANR	468806	Identifier	op2		467818	1					
ANR	468807	Identifier	num		467818	1					
ANR	468808	UnaryOperationExpression	- 1		467818	1					
ANR	468809	UnaryOperator	-		467818	0					
ANR	468810	PrimaryExpression	1		467818	1					
ANR	468811	CompoundStatement		184:32:5533:5533	467818	1					
ANR	468812	ExpressionStatement	opline -> op2 . num = cache_size	302:6:10700:10728	467818	0	True				
ANR	468813	AssignmentExpression	opline -> op2 . num = cache_size		467818	0		=			
ANR	468814	MemberAccess	opline -> op2 . num		467818	0					
ANR	468815	PtrMemberAccess	opline -> op2		467818	0					
ANR	468816	Identifier	opline		467818	0					
ANR	468817	Identifier	op2		467818	1					
ANR	468818	Identifier	num		467818	1					
ANR	468819	Identifier	cache_size		467818	1					
ANR	468820	ExpressionStatement	cache_size += sizeof ( void * )	303:6:10736:10764	467818	1	True				
ANR	468821	AssignmentExpression	cache_size += sizeof ( void * )		467818	0		+=			
ANR	468822	Identifier	cache_size		467818	0					
ANR	468823	SizeofExpression	sizeof ( void * )		467818	1					
ANR	468824	Sizeof	sizeof		467818	0					
ANR	468825	SizeofOperand	void *		467818	1					
ANR	468826	Label	default :	305:4:10777:10784	467818	84	True				
ANR	468827	Identifier	default		467818	0					
ANR	468828	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_CONST )		467818	85					
ANR	468829	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST	306:9:10795:10827	467818	0	True				
ANR	468830	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		467818	0		==			
ANR	468831	CallExpression	ZEND_OP1_TYPE ( opline )		467818	0					
ANR	468832	Callee	ZEND_OP1_TYPE		467818	0					
ANR	468833	Identifier	ZEND_OP1_TYPE		467818	0					
ANR	468834	ArgumentList	opline		467818	1					
ANR	468835	Argument	opline		467818	0					
ANR	468836	Identifier	opline		467818	0					
ANR	468837	Identifier	IS_CONST		467818	1					
ANR	468838	CompoundStatement		189:44:5671:5671	467818	1					
ANR	468839	ExpressionStatement	"LITERAL_INFO ( opline -> op1 . constant , LITERAL_VALUE , 1 , 0 , 1 )"	307:6:10838:10896	467818	0	True				
ANR	468840	CallExpression	"LITERAL_INFO ( opline -> op1 . constant , LITERAL_VALUE , 1 , 0 , 1 )"		467818	0					
ANR	468841	Callee	LITERAL_INFO		467818	0					
ANR	468842	Identifier	LITERAL_INFO		467818	0					
ANR	468843	ArgumentList	opline -> op1 . constant		467818	1					
ANR	468844	Argument	opline -> op1 . constant		467818	0					
ANR	468845	MemberAccess	opline -> op1 . constant		467818	0					
ANR	468846	PtrMemberAccess	opline -> op1		467818	0					
ANR	468847	Identifier	opline		467818	0					
ANR	468848	Identifier	op1		467818	1					
ANR	468849	Identifier	constant		467818	1					
ANR	468850	Argument	LITERAL_VALUE		467818	1					
ANR	468851	Identifier	LITERAL_VALUE		467818	0					
ANR	468852	Argument	1		467818	2					
ANR	468853	PrimaryExpression	1		467818	0					
ANR	468854	Argument	0		467818	3					
ANR	468855	PrimaryExpression	0		467818	0					
ANR	468856	Argument	1		467818	4					
ANR	468857	PrimaryExpression	1		467818	0					
ANR	468858	IfStatement	if ( ZEND_OP2_TYPE ( opline ) == IS_CONST )		467818	86					
ANR	468859	Condition	ZEND_OP2_TYPE ( opline ) == IS_CONST	309:9:10914:10946	467818	0	True				
ANR	468860	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST		467818	0		==			
ANR	468861	CallExpression	ZEND_OP2_TYPE ( opline )		467818	0					
ANR	468862	Callee	ZEND_OP2_TYPE		467818	0					
ANR	468863	Identifier	ZEND_OP2_TYPE		467818	0					
ANR	468864	ArgumentList	opline		467818	1					
ANR	468865	Argument	opline		467818	0					
ANR	468866	Identifier	opline		467818	0					
ANR	468867	Identifier	IS_CONST		467818	1					
ANR	468868	CompoundStatement		192:44:5790:5790	467818	1					
ANR	468869	ExpressionStatement	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_VALUE , 1 , 0 , 1 )"	310:6:10957:11015	467818	0	True				
ANR	468870	CallExpression	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_VALUE , 1 , 0 , 1 )"		467818	0					
ANR	468871	Callee	LITERAL_INFO		467818	0					
ANR	468872	Identifier	LITERAL_INFO		467818	0					
ANR	468873	ArgumentList	opline -> op2 . constant		467818	1					
ANR	468874	Argument	opline -> op2 . constant		467818	0					
ANR	468875	MemberAccess	opline -> op2 . constant		467818	0					
ANR	468876	PtrMemberAccess	opline -> op2		467818	0					
ANR	468877	Identifier	opline		467818	0					
ANR	468878	Identifier	op2		467818	1					
ANR	468879	Identifier	constant		467818	1					
ANR	468880	Argument	LITERAL_VALUE		467818	1					
ANR	468881	Identifier	LITERAL_VALUE		467818	0					
ANR	468882	Argument	1		467818	2					
ANR	468883	PrimaryExpression	1		467818	0					
ANR	468884	Argument	0		467818	3					
ANR	468885	PrimaryExpression	0		467818	0					
ANR	468886	Argument	1		467818	4					
ANR	468887	PrimaryExpression	1		467818	0					
ANR	468888	BreakStatement	break ;	312:5:11029:11034	467818	87	True				
ANR	468889	ExpressionStatement	opline ++	314:3:11044:11052	467818	1	True				
ANR	468890	PostIncDecOperationExpression	opline ++		467818	0					
ANR	468891	Identifier	opline		467818	0					
ANR	468892	IncDec	++		467818	1					
ANR	468893	CompoundStatement		202:3:5934:5949	467818	5					
ANR	468894	IdentifierDeclStatement	"int i , use_copy ;"	319:3:11093:11108	467818	0	True				
ANR	468895	IdentifierDecl	i		467818	0					
ANR	468896	IdentifierDeclType	int		467818	0					
ANR	468897	Identifier	i		467818	1					
ANR	468898	IdentifierDecl	use_copy		467818	1					
ANR	468899	IdentifierDeclType	int		467818	0					
ANR	468900	Identifier	use_copy		467818	1					
ANR	468901	ExpressionStatement	"fprintf ( stderr , ""File %s func %s\\n"" , op_array -> filename -> val , op_array -> function_name ? op_array -> function_name -> val : ""main"" )"	320:3:11113:11244	467818	1	True				
ANR	468902	CallExpression	"fprintf ( stderr , ""File %s func %s\\n"" , op_array -> filename -> val , op_array -> function_name ? op_array -> function_name -> val : ""main"" )"		467818	0					
ANR	468903	Callee	fprintf		467818	0					
ANR	468904	Identifier	fprintf		467818	0					
ANR	468905	ArgumentList	stderr		467818	1					
ANR	468906	Argument	stderr		467818	0					
ANR	468907	Identifier	stderr		467818	0					
ANR	468908	Argument	"""File %s func %s\\n"""		467818	1					
ANR	468909	PrimaryExpression	"""File %s func %s\\n"""		467818	0					
ANR	468910	Argument	op_array -> filename -> val		467818	2					
ANR	468911	PtrMemberAccess	op_array -> filename -> val		467818	0					
ANR	468912	PtrMemberAccess	op_array -> filename		467818	0					
ANR	468913	Identifier	op_array		467818	0					
ANR	468914	Identifier	filename		467818	1					
ANR	468915	Identifier	val		467818	1					
ANR	468916	Argument	"op_array -> function_name ? op_array -> function_name -> val : ""main"""		467818	3					
ANR	468917	ConditionalExpression	"op_array -> function_name ? op_array -> function_name -> val : ""main"""		467818	0					
ANR	468918	Condition	op_array -> function_name		467818	0					
ANR	468919	PtrMemberAccess	op_array -> function_name		467818	0					
ANR	468920	Identifier	op_array		467818	0					
ANR	468921	Identifier	function_name		467818	1					
ANR	468922	PtrMemberAccess	op_array -> function_name -> val		467818	1					
ANR	468923	PtrMemberAccess	op_array -> function_name		467818	0					
ANR	468924	Identifier	op_array		467818	0					
ANR	468925	Identifier	function_name		467818	1					
ANR	468926	Identifier	val		467818	1					
ANR	468927	PrimaryExpression	"""main"""		467818	2					
ANR	468928	ExpressionStatement	"fprintf ( stderr , ""Literlas table size %d\\n"" , op_array -> last_literal )"	322:3:11249:11316	467818	2	True				
ANR	468929	CallExpression	"fprintf ( stderr , ""Literlas table size %d\\n"" , op_array -> last_literal )"		467818	0					
ANR	468930	Callee	fprintf		467818	0					
ANR	468931	Identifier	fprintf		467818	0					
ANR	468932	ArgumentList	stderr		467818	1					
ANR	468933	Argument	stderr		467818	0					
ANR	468934	Identifier	stderr		467818	0					
ANR	468935	Argument	"""Literlas table size %d\\n"""		467818	1					
ANR	468936	PrimaryExpression	"""Literlas table size %d\\n"""		467818	0					
ANR	468937	Argument	op_array -> last_literal		467818	2					
ANR	468938	PtrMemberAccess	op_array -> last_literal		467818	0					
ANR	468939	Identifier	op_array		467818	0					
ANR	468940	Identifier	last_literal		467818	1					
ANR	468941	ForStatement	for ( i = 0 ; i < op_array -> last_literal ; i ++ )		467818	3					
ANR	468942	ForInit	i = 0 ;	324:8:11327:11332	467818	0	True				
ANR	468943	AssignmentExpression	i = 0		467818	0		=			
ANR	468944	Identifier	i		467818	0					
ANR	468945	PrimaryExpression	0		467818	1					
ANR	468946	Condition	i < op_array -> last_literal	324:15:11334:11359	467818	1	True				
ANR	468947	RelationalExpression	i < op_array -> last_literal		467818	0		<			
ANR	468948	Identifier	i		467818	0					
ANR	468949	PtrMemberAccess	op_array -> last_literal		467818	1					
ANR	468950	Identifier	op_array		467818	0					
ANR	468951	Identifier	last_literal		467818	1					
ANR	468952	PostIncDecOperationExpression	i ++	324:43:11362:11364	467818	2	True				
ANR	468953	Identifier	i		467818	0					
ANR	468954	IncDec	++		467818	1					
ANR	468955	CompoundStatement		208:4:6214:6221	467818	3					
ANR	468956	IdentifierDeclStatement	zval zv ;	325:4:11373:11380	467818	0	True				
ANR	468957	IdentifierDecl	zv		467818	0					
ANR	468958	IdentifierDeclType	zval		467818	0					
ANR	468959	Identifier	zv		467818	1					
ANR	468960	ExpressionStatement	"ZVAL_COPY_VALUE ( & zv , op_array -> literals + i )"	326:4:11386:11430	467818	1	True				
ANR	468961	CallExpression	"ZVAL_COPY_VALUE ( & zv , op_array -> literals + i )"		467818	0					
ANR	468962	Callee	ZVAL_COPY_VALUE		467818	0					
ANR	468963	Identifier	ZVAL_COPY_VALUE		467818	0					
ANR	468964	ArgumentList	& zv		467818	1					
ANR	468965	Argument	& zv		467818	0					
ANR	468966	UnaryOperationExpression	& zv		467818	0					
ANR	468967	UnaryOperator	&		467818	0					
ANR	468968	Identifier	zv		467818	1					
ANR	468969	Argument	op_array -> literals + i		467818	1					
ANR	468970	AdditiveExpression	op_array -> literals + i		467818	0		+			
ANR	468971	PtrMemberAccess	op_array -> literals		467818	0					
ANR	468972	Identifier	op_array		467818	0					
ANR	468973	Identifier	literals		467818	1					
ANR	468974	Identifier	i		467818	1					
ANR	468975	ExpressionStatement	"use_copy = zend_make_printable_zval ( op_array -> literals + i , & zv )"	327:4:11436:11500	467818	2	True				
ANR	468976	AssignmentExpression	"use_copy = zend_make_printable_zval ( op_array -> literals + i , & zv )"		467818	0		=			
ANR	468977	Identifier	use_copy		467818	0					
ANR	468978	CallExpression	"zend_make_printable_zval ( op_array -> literals + i , & zv )"		467818	1					
ANR	468979	Callee	zend_make_printable_zval		467818	0					
ANR	468980	Identifier	zend_make_printable_zval		467818	0					
ANR	468981	ArgumentList	op_array -> literals + i		467818	1					
ANR	468982	Argument	op_array -> literals + i		467818	0					
ANR	468983	AdditiveExpression	op_array -> literals + i		467818	0		+			
ANR	468984	PtrMemberAccess	op_array -> literals		467818	0					
ANR	468985	Identifier	op_array		467818	0					
ANR	468986	Identifier	literals		467818	1					
ANR	468987	Identifier	i		467818	1					
ANR	468988	Argument	& zv		467818	1					
ANR	468989	UnaryOperationExpression	& zv		467818	0					
ANR	468990	UnaryOperator	&		467818	0					
ANR	468991	Identifier	zv		467818	1					
ANR	468992	ExpressionStatement	"fprintf ( stderr , ""Literal %d, val (%d):%s\\n"" , i , Z_STRLEN ( zv ) , Z_STRVAL ( zv ) )"	328:4:11506:11581	467818	3	True				
ANR	468993	CallExpression	"fprintf ( stderr , ""Literal %d, val (%d):%s\\n"" , i , Z_STRLEN ( zv ) , Z_STRVAL ( zv ) )"		467818	0					
ANR	468994	Callee	fprintf		467818	0					
ANR	468995	Identifier	fprintf		467818	0					
ANR	468996	ArgumentList	stderr		467818	1					
ANR	468997	Argument	stderr		467818	0					
ANR	468998	Identifier	stderr		467818	0					
ANR	468999	Argument	"""Literal %d, val (%d):%s\\n"""		467818	1					
ANR	469000	PrimaryExpression	"""Literal %d, val (%d):%s\\n"""		467818	0					
ANR	469001	Argument	i		467818	2					
ANR	469002	Identifier	i		467818	0					
ANR	469003	Argument	Z_STRLEN ( zv )		467818	3					
ANR	469004	CallExpression	Z_STRLEN ( zv )		467818	0					
ANR	469005	Callee	Z_STRLEN		467818	0					
ANR	469006	Identifier	Z_STRLEN		467818	0					
ANR	469007	ArgumentList	zv		467818	1					
ANR	469008	Argument	zv		467818	0					
ANR	469009	Identifier	zv		467818	0					
ANR	469010	Argument	Z_STRVAL ( zv )		467818	4					
ANR	469011	CallExpression	Z_STRVAL ( zv )		467818	0					
ANR	469012	Callee	Z_STRVAL		467818	0					
ANR	469013	Identifier	Z_STRVAL		467818	0					
ANR	469014	ArgumentList	zv		467818	1					
ANR	469015	Argument	zv		467818	0					
ANR	469016	Identifier	zv		467818	0					
ANR	469017	IfStatement	if ( use_copy )		467818	4					
ANR	469018	Condition	use_copy	329:8:11591:11598	467818	0	True				
ANR	469019	Identifier	use_copy		467818	0					
ANR	469020	CompoundStatement		212:18:6442:6442	467818	1					
ANR	469021	ExpressionStatement	zval_dtor ( & zv )	330:5:11608:11622	467818	0	True				
ANR	469022	CallExpression	zval_dtor ( & zv )		467818	0					
ANR	469023	Callee	zval_dtor		467818	0					
ANR	469024	Identifier	zval_dtor		467818	0					
ANR	469025	ArgumentList	& zv		467818	1					
ANR	469026	Argument	& zv		467818	0					
ANR	469027	UnaryOperationExpression	& zv		467818	0					
ANR	469028	UnaryOperator	&		467818	0					
ANR	469029	Identifier	zv		467818	1					
ANR	469030	ExpressionStatement	fflush ( stderr )	333:3:11638:11652	467818	4	True				
ANR	469031	CallExpression	fflush ( stderr )		467818	0					
ANR	469032	Callee	fflush		467818	0					
ANR	469033	Identifier	fflush		467818	0					
ANR	469034	ArgumentList	stderr		467818	1					
ANR	469035	Argument	stderr		467818	0					
ANR	469036	Identifier	stderr		467818	0					
ANR	469037	ExpressionStatement	j = 0	338:2:11698:11703	467818	6	True				
ANR	469038	AssignmentExpression	j = 0		467818	0		=			
ANR	469039	Identifier	j		467818	0					
ANR	469040	PrimaryExpression	0		467818	1					
ANR	469041	ExpressionStatement	"zend_hash_init ( & hash , op_array -> last_literal , NULL , NULL , 0 )"	339:2:11707:11767	467818	7	True				
ANR	469042	CallExpression	"zend_hash_init ( & hash , op_array -> last_literal , NULL , NULL , 0 )"		467818	0					
ANR	469043	Callee	zend_hash_init		467818	0					
ANR	469044	Identifier	zend_hash_init		467818	0					
ANR	469045	ArgumentList	& hash		467818	1					
ANR	469046	Argument	& hash		467818	0					
ANR	469047	UnaryOperationExpression	& hash		467818	0					
ANR	469048	UnaryOperator	&		467818	0					
ANR	469049	Identifier	hash		467818	1					
ANR	469050	Argument	op_array -> last_literal		467818	1					
ANR	469051	PtrMemberAccess	op_array -> last_literal		467818	0					
ANR	469052	Identifier	op_array		467818	0					
ANR	469053	Identifier	last_literal		467818	1					
ANR	469054	Argument	NULL		467818	2					
ANR	469055	Identifier	NULL		467818	0					
ANR	469056	Argument	NULL		467818	3					
ANR	469057	Identifier	NULL		467818	0					
ANR	469058	Argument	0		467818	4					
ANR	469059	PrimaryExpression	0		467818	0					
ANR	469060	ExpressionStatement	"map = ( int * ) zend_arena_alloc ( & ctx -> arena , op_array -> last_literal * sizeof ( int ) )"	340:2:11771:11850	467818	8	True				
ANR	469061	AssignmentExpression	"map = ( int * ) zend_arena_alloc ( & ctx -> arena , op_array -> last_literal * sizeof ( int ) )"		467818	0		=			
ANR	469062	Identifier	map		467818	0					
ANR	469063	CastExpression	"( int * ) zend_arena_alloc ( & ctx -> arena , op_array -> last_literal * sizeof ( int ) )"		467818	1					
ANR	469064	CastTarget	int *		467818	0					
ANR	469065	CallExpression	"zend_arena_alloc ( & ctx -> arena , op_array -> last_literal * sizeof ( int ) )"		467818	1					
ANR	469066	Callee	zend_arena_alloc		467818	0					
ANR	469067	Identifier	zend_arena_alloc		467818	0					
ANR	469068	ArgumentList	& ctx -> arena		467818	1					
ANR	469069	Argument	& ctx -> arena		467818	0					
ANR	469070	UnaryOperationExpression	& ctx -> arena		467818	0					
ANR	469071	UnaryOperator	&		467818	0					
ANR	469072	PtrMemberAccess	ctx -> arena		467818	1					
ANR	469073	Identifier	ctx		467818	0					
ANR	469074	Identifier	arena		467818	1					
ANR	469075	Argument	op_array -> last_literal * sizeof ( int )		467818	1					
ANR	469076	MultiplicativeExpression	op_array -> last_literal * sizeof ( int )		467818	0		*			
ANR	469077	PtrMemberAccess	op_array -> last_literal		467818	0					
ANR	469078	Identifier	op_array		467818	0					
ANR	469079	Identifier	last_literal		467818	1					
ANR	469080	SizeofExpression	sizeof ( int )		467818	1					
ANR	469081	Sizeof	sizeof		467818	0					
ANR	469082	SizeofOperand	int		467818	1					
ANR	469083	ExpressionStatement	"memset ( map , 0 , op_array -> last_literal * sizeof ( int ) )"	341:2:11854:11906	467818	9	True				
ANR	469084	CallExpression	"memset ( map , 0 , op_array -> last_literal * sizeof ( int ) )"		467818	0					
ANR	469085	Callee	memset		467818	0					
ANR	469086	Identifier	memset		467818	0					
ANR	469087	ArgumentList	map		467818	1					
ANR	469088	Argument	map		467818	0					
ANR	469089	Identifier	map		467818	0					
ANR	469090	Argument	0		467818	1					
ANR	469091	PrimaryExpression	0		467818	0					
ANR	469092	Argument	op_array -> last_literal * sizeof ( int )		467818	2					
ANR	469093	MultiplicativeExpression	op_array -> last_literal * sizeof ( int )		467818	0		*			
ANR	469094	PtrMemberAccess	op_array -> last_literal		467818	0					
ANR	469095	Identifier	op_array		467818	0					
ANR	469096	Identifier	last_literal		467818	1					
ANR	469097	SizeofExpression	sizeof ( int )		467818	1					
ANR	469098	Sizeof	sizeof		467818	0					
ANR	469099	SizeofOperand	int		467818	1					
ANR	469100	ForStatement	for ( i = 0 ; i < op_array -> last_literal ; i ++ )		467818	10					
ANR	469101	ForInit	i = 0 ;	342:7:11915:11920	467818	0	True				
ANR	469102	AssignmentExpression	i = 0		467818	0		=			
ANR	469103	Identifier	i		467818	0					
ANR	469104	PrimaryExpression	0		467818	1					
ANR	469105	Condition	i < op_array -> last_literal	342:14:11922:11947	467818	1	True				
ANR	469106	RelationalExpression	i < op_array -> last_literal		467818	0		<			
ANR	469107	Identifier	i		467818	0					
ANR	469108	PtrMemberAccess	op_array -> last_literal		467818	1					
ANR	469109	Identifier	op_array		467818	0					
ANR	469110	Identifier	last_literal		467818	1					
ANR	469111	PostIncDecOperationExpression	i ++	342:42:11950:11952	467818	2	True				
ANR	469112	Identifier	i		467818	0					
ANR	469113	IncDec	++		467818	1					
ANR	469114	CompoundStatement		225:47:6796:6796	467818	3					
ANR	469115	IfStatement	if ( ! info [ i ] . flags )		467818	0					
ANR	469116	Condition	! info [ i ] . flags	343:7:11964:11977	467818	0	True				
ANR	469117	UnaryOperationExpression	! info [ i ] . flags		467818	0					
ANR	469118	UnaryOperator	!		467818	0					
ANR	469119	MemberAccess	info [ i ] . flags		467818	1					
ANR	469120	ArrayIndexing	info [ i ]		467818	0					
ANR	469121	Identifier	info		467818	0					
ANR	469122	Identifier	i		467818	1					
ANR	469123	Identifier	flags		467818	1					
ANR	469124	CompoundStatement		226:23:6821:6821	467818	1					
ANR	469125	ExpressionStatement	zval_dtor ( & op_array -> literals [ i ] )	345:4:12010:12043	467818	0	True				
ANR	469126	CallExpression	zval_dtor ( & op_array -> literals [ i ] )		467818	0					
ANR	469127	Callee	zval_dtor		467818	0					
ANR	469128	Identifier	zval_dtor		467818	0					
ANR	469129	ArgumentList	& op_array -> literals [ i ]		467818	1					
ANR	469130	Argument	& op_array -> literals [ i ]		467818	0					
ANR	469131	UnaryOperationExpression	& op_array -> literals [ i ]		467818	0					
ANR	469132	UnaryOperator	&		467818	0					
ANR	469133	ArrayIndexing	op_array -> literals [ i ]		467818	1					
ANR	469134	PtrMemberAccess	op_array -> literals		467818	0					
ANR	469135	Identifier	op_array		467818	0					
ANR	469136	Identifier	literals		467818	1					
ANR	469137	Identifier	i		467818	1					
ANR	469138	ContinueStatement	continue ;	346:4:12049:12057	467818	1	True				
ANR	469139	SwitchStatement	switch ( Z_TYPE ( op_array -> literals [ i ] ) )		467818	1					
ANR	469140	Condition	Z_TYPE ( op_array -> literals [ i ] )	348:11:12075:12103	467818	0	True				
ANR	469141	CallExpression	Z_TYPE ( op_array -> literals [ i ] )		467818	0					
ANR	469142	Callee	Z_TYPE		467818	0					
ANR	469143	Identifier	Z_TYPE		467818	0					
ANR	469144	ArgumentList	op_array -> literals [ i ]		467818	1					
ANR	469145	Argument	op_array -> literals [ i ]		467818	0					
ANR	469146	ArrayIndexing	op_array -> literals [ i ]		467818	0					
ANR	469147	PtrMemberAccess	op_array -> literals		467818	0					
ANR	469148	Identifier	op_array		467818	0					
ANR	469149	Identifier	literals		467818	1					
ANR	469150	Identifier	i		467818	1					
ANR	469151	CompoundStatement		231:42:6947:6947	467818	1					
ANR	469152	Label	case IS_NULL :	349:4:12112:12124	467818	0	True				
ANR	469153	Identifier	IS_NULL		467818	0					
ANR	469154	IfStatement	if ( ( info [ i ] . flags & LITERAL_MAY_MERGE ) )		467818	1					
ANR	469155	Condition	info [ i ] . flags & LITERAL_MAY_MERGE	352:9:12276:12310	467818	0	True				
ANR	469156	BitAndExpression	info [ i ] . flags & LITERAL_MAY_MERGE		467818	0		&			
ANR	469157	MemberAccess	info [ i ] . flags		467818	0					
ANR	469158	ArrayIndexing	info [ i ]		467818	0					
ANR	469159	Identifier	info		467818	0					
ANR	469160	Identifier	i		467818	1					
ANR	469161	Identifier	flags		467818	1					
ANR	469162	Identifier	LITERAL_MAY_MERGE		467818	1					
ANR	469163	CompoundStatement		235:46:7154:7154	467818	1					
ANR	469164	IfStatement	if ( l_null < 0 )		467818	0					
ANR	469165	Condition	l_null < 0	353:10:12325:12334	467818	0	True				
ANR	469166	RelationalExpression	l_null < 0		467818	0		<			
ANR	469167	Identifier	l_null		467818	0					
ANR	469168	PrimaryExpression	0		467818	1					
ANR	469169	CompoundStatement		236:22:7178:7178	467818	1					
ANR	469170	ExpressionStatement	l_null = j	354:7:12346:12356	467818	0	True				
ANR	469171	AssignmentExpression	l_null = j		467818	0		=			
ANR	469172	Identifier	l_null		467818	0					
ANR	469173	Identifier	j		467818	1					
ANR	469174	IfStatement	if ( i != j )		467818	1					
ANR	469175	Condition	i != j	355:11:12369:12374	467818	0	True				
ANR	469176	EqualityExpression	i != j		467818	0		!=			
ANR	469177	Identifier	i		467818	0					
ANR	469178	Identifier	j		467818	1					
ANR	469179	CompoundStatement		238:19:7218:7218	467818	1					
ANR	469180	ExpressionStatement	op_array -> literals [ j ] = op_array -> literals [ i ]	356:8:12387:12432	467818	0	True				
ANR	469181	AssignmentExpression	op_array -> literals [ j ] = op_array -> literals [ i ]		467818	0		=			
ANR	469182	ArrayIndexing	op_array -> literals [ j ]		467818	0					
ANR	469183	PtrMemberAccess	op_array -> literals		467818	0					
ANR	469184	Identifier	op_array		467818	0					
ANR	469185	Identifier	literals		467818	1					
ANR	469186	Identifier	j		467818	1					
ANR	469187	ArrayIndexing	op_array -> literals [ i ]		467818	1					
ANR	469188	PtrMemberAccess	op_array -> literals		467818	0					
ANR	469189	Identifier	op_array		467818	0					
ANR	469190	Identifier	literals		467818	1					
ANR	469191	Identifier	i		467818	1					
ANR	469192	ExpressionStatement	info [ j ] = info [ i ]	357:8:12442:12459	467818	1	True				
ANR	469193	AssignmentExpression	info [ j ] = info [ i ]		467818	0		=			
ANR	469194	ArrayIndexing	info [ j ]		467818	0					
ANR	469195	Identifier	info		467818	0					
ANR	469196	Identifier	j		467818	1					
ANR	469197	ArrayIndexing	info [ i ]		467818	1					
ANR	469198	Identifier	info		467818	0					
ANR	469199	Identifier	i		467818	1					
ANR	469200	ExpressionStatement	j ++	359:7:12477:12480	467818	2	True				
ANR	469201	PostIncDecOperationExpression	j ++		467818	0					
ANR	469202	Identifier	j		467818	0					
ANR	469203	IncDec	++		467818	1					
ANR	469204	ExpressionStatement	map [ i ] = l_null	361:6:12496:12511	467818	1	True				
ANR	469205	AssignmentExpression	map [ i ] = l_null		467818	0		=			
ANR	469206	ArrayIndexing	map [ i ]		467818	0					
ANR	469207	Identifier	map		467818	0					
ANR	469208	Identifier	i		467818	1					
ANR	469209	Identifier	l_null		467818	1					
ANR	469210	ElseStatement	else		467818	0					
ANR	469211	CompoundStatement		245:12:7366:7366	467818	0					
ANR	469212	ExpressionStatement	map [ i ] = j	363:6:12533:12543	467818	0	True				
ANR	469213	AssignmentExpression	map [ i ] = j		467818	0		=			
ANR	469214	ArrayIndexing	map [ i ]		467818	0					
ANR	469215	Identifier	map		467818	0					
ANR	469216	Identifier	i		467818	1					
ANR	469217	Identifier	j		467818	1					
ANR	469218	IfStatement	if ( i != j )		467818	1					
ANR	469219	Condition	i != j	364:10:12555:12560	467818	0	True				
ANR	469220	EqualityExpression	i != j		467818	0		!=			
ANR	469221	Identifier	i		467818	0					
ANR	469222	Identifier	j		467818	1					
ANR	469223	CompoundStatement		247:18:7404:7404	467818	1					
ANR	469224	ExpressionStatement	op_array -> literals [ j ] = op_array -> literals [ i ]	365:7:12572:12617	467818	0	True				
ANR	469225	AssignmentExpression	op_array -> literals [ j ] = op_array -> literals [ i ]		467818	0		=			
ANR	469226	ArrayIndexing	op_array -> literals [ j ]		467818	0					
ANR	469227	PtrMemberAccess	op_array -> literals		467818	0					
ANR	469228	Identifier	op_array		467818	0					
ANR	469229	Identifier	literals		467818	1					
ANR	469230	Identifier	j		467818	1					
ANR	469231	ArrayIndexing	op_array -> literals [ i ]		467818	1					
ANR	469232	PtrMemberAccess	op_array -> literals		467818	0					
ANR	469233	Identifier	op_array		467818	0					
ANR	469234	Identifier	literals		467818	1					
ANR	469235	Identifier	i		467818	1					
ANR	469236	ExpressionStatement	info [ j ] = info [ i ]	366:7:12626:12643	467818	1	True				
ANR	469237	AssignmentExpression	info [ j ] = info [ i ]		467818	0		=			
ANR	469238	ArrayIndexing	info [ j ]		467818	0					
ANR	469239	Identifier	info		467818	0					
ANR	469240	Identifier	j		467818	1					
ANR	469241	ArrayIndexing	info [ i ]		467818	1					
ANR	469242	Identifier	info		467818	0					
ANR	469243	Identifier	i		467818	1					
ANR	469244	ExpressionStatement	j ++	368:6:12659:12662	467818	2	True				
ANR	469245	PostIncDecOperationExpression	j ++		467818	0					
ANR	469246	Identifier	j		467818	0					
ANR	469247	IncDec	++		467818	1					
ANR	469248	BreakStatement	break ;	370:5:12676:12681	467818	2	True				
ANR	469249	Label	case IS_FALSE :	371:4:12687:12700	467818	3	True				
ANR	469250	Identifier	IS_FALSE		467818	0					
ANR	469251	IfStatement	if ( l_false < 0 )		467818	4					
ANR	469252	Condition	l_false < 0	372:9:12711:12721	467818	0	True				
ANR	469253	RelationalExpression	l_false < 0		467818	0		<			
ANR	469254	Identifier	l_false		467818	0					
ANR	469255	PrimaryExpression	0		467818	1					
ANR	469256	CompoundStatement		255:22:7565:7565	467818	1					
ANR	469257	ExpressionStatement	l_false = j	373:6:12732:12743	467818	0	True				
ANR	469258	AssignmentExpression	l_false = j		467818	0		=			
ANR	469259	Identifier	l_false		467818	0					
ANR	469260	Identifier	j		467818	1					
ANR	469261	IfStatement	if ( i != j )		467818	1					
ANR	469262	Condition	i != j	374:10:12755:12760	467818	0	True				
ANR	469263	EqualityExpression	i != j		467818	0		!=			
ANR	469264	Identifier	i		467818	0					
ANR	469265	Identifier	j		467818	1					
ANR	469266	CompoundStatement		257:18:7604:7604	467818	1					
ANR	469267	ExpressionStatement	op_array -> literals [ j ] = op_array -> literals [ i ]	375:7:12772:12817	467818	0	True				
ANR	469268	AssignmentExpression	op_array -> literals [ j ] = op_array -> literals [ i ]		467818	0		=			
ANR	469269	ArrayIndexing	op_array -> literals [ j ]		467818	0					
ANR	469270	PtrMemberAccess	op_array -> literals		467818	0					
ANR	469271	Identifier	op_array		467818	0					
ANR	469272	Identifier	literals		467818	1					
ANR	469273	Identifier	j		467818	1					
ANR	469274	ArrayIndexing	op_array -> literals [ i ]		467818	1					
ANR	469275	PtrMemberAccess	op_array -> literals		467818	0					
ANR	469276	Identifier	op_array		467818	0					
ANR	469277	Identifier	literals		467818	1					
ANR	469278	Identifier	i		467818	1					
ANR	469279	ExpressionStatement	info [ j ] = info [ i ]	376:7:12826:12843	467818	1	True				
ANR	469280	AssignmentExpression	info [ j ] = info [ i ]		467818	0		=			
ANR	469281	ArrayIndexing	info [ j ]		467818	0					
ANR	469282	Identifier	info		467818	0					
ANR	469283	Identifier	j		467818	1					
ANR	469284	ArrayIndexing	info [ i ]		467818	1					
ANR	469285	Identifier	info		467818	0					
ANR	469286	Identifier	i		467818	1					
ANR	469287	ExpressionStatement	j ++	378:6:12859:12862	467818	2	True				
ANR	469288	PostIncDecOperationExpression	j ++		467818	0					
ANR	469289	Identifier	j		467818	0					
ANR	469290	IncDec	++		467818	1					
ANR	469291	ExpressionStatement	map [ i ] = l_false	380:5:12876:12892	467818	5	True				
ANR	469292	AssignmentExpression	map [ i ] = l_false		467818	0		=			
ANR	469293	ArrayIndexing	map [ i ]		467818	0					
ANR	469294	Identifier	map		467818	0					
ANR	469295	Identifier	i		467818	1					
ANR	469296	Identifier	l_false		467818	1					
ANR	469297	BreakStatement	break ;	381:5:12899:12904	467818	6	True				
ANR	469298	Label	case IS_TRUE :	382:4:12910:12922	467818	7	True				
ANR	469299	Identifier	IS_TRUE		467818	0					
ANR	469300	IfStatement	if ( l_true < 0 )		467818	8					
ANR	469301	Condition	l_true < 0	383:9:12933:12942	467818	0	True				
ANR	469302	RelationalExpression	l_true < 0		467818	0		<			
ANR	469303	Identifier	l_true		467818	0					
ANR	469304	PrimaryExpression	0		467818	1					
ANR	469305	CompoundStatement		266:21:7786:7786	467818	1					
ANR	469306	ExpressionStatement	l_true = j	384:6:12953:12963	467818	0	True				
ANR	469307	AssignmentExpression	l_true = j		467818	0		=			
ANR	469308	Identifier	l_true		467818	0					
ANR	469309	Identifier	j		467818	1					
ANR	469310	IfStatement	if ( i != j )		467818	1					
ANR	469311	Condition	i != j	385:10:12975:12980	467818	0	True				
ANR	469312	EqualityExpression	i != j		467818	0		!=			
ANR	469313	Identifier	i		467818	0					
ANR	469314	Identifier	j		467818	1					
ANR	469315	CompoundStatement		268:18:7824:7824	467818	1					
ANR	469316	ExpressionStatement	op_array -> literals [ j ] = op_array -> literals [ i ]	386:7:12992:13037	467818	0	True				
ANR	469317	AssignmentExpression	op_array -> literals [ j ] = op_array -> literals [ i ]		467818	0		=			
ANR	469318	ArrayIndexing	op_array -> literals [ j ]		467818	0					
ANR	469319	PtrMemberAccess	op_array -> literals		467818	0					
ANR	469320	Identifier	op_array		467818	0					
ANR	469321	Identifier	literals		467818	1					
ANR	469322	Identifier	j		467818	1					
ANR	469323	ArrayIndexing	op_array -> literals [ i ]		467818	1					
ANR	469324	PtrMemberAccess	op_array -> literals		467818	0					
ANR	469325	Identifier	op_array		467818	0					
ANR	469326	Identifier	literals		467818	1					
ANR	469327	Identifier	i		467818	1					
ANR	469328	ExpressionStatement	info [ j ] = info [ i ]	387:7:13046:13063	467818	1	True				
ANR	469329	AssignmentExpression	info [ j ] = info [ i ]		467818	0		=			
ANR	469330	ArrayIndexing	info [ j ]		467818	0					
ANR	469331	Identifier	info		467818	0					
ANR	469332	Identifier	j		467818	1					
ANR	469333	ArrayIndexing	info [ i ]		467818	1					
ANR	469334	Identifier	info		467818	0					
ANR	469335	Identifier	i		467818	1					
ANR	469336	ExpressionStatement	j ++	389:6:13079:13082	467818	2	True				
ANR	469337	PostIncDecOperationExpression	j ++		467818	0					
ANR	469338	Identifier	j		467818	0					
ANR	469339	IncDec	++		467818	1					
ANR	469340	ExpressionStatement	map [ i ] = l_true	391:5:13096:13111	467818	9	True				
ANR	469341	AssignmentExpression	map [ i ] = l_true		467818	0		=			
ANR	469342	ArrayIndexing	map [ i ]		467818	0					
ANR	469343	Identifier	map		467818	0					
ANR	469344	Identifier	i		467818	1					
ANR	469345	Identifier	l_true		467818	1					
ANR	469346	BreakStatement	break ;	392:5:13118:13123	467818	10	True				
ANR	469347	Label	case IS_LONG :	393:4:13129:13141	467818	11	True				
ANR	469348	Identifier	IS_LONG		467818	0					
ANR	469349	IfStatement	"if ( ( pos = zend_hash_index_find ( & hash , Z_LVAL ( op_array -> literals [ i ] ) ) ) != NULL )"		467818	12					
ANR	469350	Condition	"( pos = zend_hash_index_find ( & hash , Z_LVAL ( op_array -> literals [ i ] ) ) ) != NULL"	394:9:13152:13225	467818	0	True				
ANR	469351	EqualityExpression	"( pos = zend_hash_index_find ( & hash , Z_LVAL ( op_array -> literals [ i ] ) ) ) != NULL"		467818	0		!=			
ANR	469352	AssignmentExpression	"pos = zend_hash_index_find ( & hash , Z_LVAL ( op_array -> literals [ i ] ) )"		467818	0		=			
ANR	469353	Identifier	pos		467818	0					
ANR	469354	CallExpression	"zend_hash_index_find ( & hash , Z_LVAL ( op_array -> literals [ i ] ) )"		467818	1					
ANR	469355	Callee	zend_hash_index_find		467818	0					
ANR	469356	Identifier	zend_hash_index_find		467818	0					
ANR	469357	ArgumentList	& hash		467818	1					
ANR	469358	Argument	& hash		467818	0					
ANR	469359	UnaryOperationExpression	& hash		467818	0					
ANR	469360	UnaryOperator	&		467818	0					
ANR	469361	Identifier	hash		467818	1					
ANR	469362	Argument	Z_LVAL ( op_array -> literals [ i ] )		467818	1					
ANR	469363	CallExpression	Z_LVAL ( op_array -> literals [ i ] )		467818	0					
ANR	469364	Callee	Z_LVAL		467818	0					
ANR	469365	Identifier	Z_LVAL		467818	0					
ANR	469366	ArgumentList	op_array -> literals [ i ]		467818	1					
ANR	469367	Argument	op_array -> literals [ i ]		467818	0					
ANR	469368	ArrayIndexing	op_array -> literals [ i ]		467818	0					
ANR	469369	PtrMemberAccess	op_array -> literals		467818	0					
ANR	469370	Identifier	op_array		467818	0					
ANR	469371	Identifier	literals		467818	1					
ANR	469372	Identifier	i		467818	1					
ANR	469373	Identifier	NULL		467818	1					
ANR	469374	CompoundStatement		277:85:8069:8069	467818	1					
ANR	469375	ExpressionStatement	map [ i ] = Z_LVAL_P ( pos )	395:6:13236:13258	467818	0	True				
ANR	469376	AssignmentExpression	map [ i ] = Z_LVAL_P ( pos )		467818	0		=			
ANR	469377	ArrayIndexing	map [ i ]		467818	0					
ANR	469378	Identifier	map		467818	0					
ANR	469379	Identifier	i		467818	1					
ANR	469380	CallExpression	Z_LVAL_P ( pos )		467818	1					
ANR	469381	Callee	Z_LVAL_P		467818	0					
ANR	469382	Identifier	Z_LVAL_P		467818	0					
ANR	469383	ArgumentList	pos		467818	1					
ANR	469384	Argument	pos		467818	0					
ANR	469385	Identifier	pos		467818	0					
ANR	469386	ElseStatement	else		467818	0					
ANR	469387	CompoundStatement		279:12:8113:8113	467818	0					
ANR	469388	ExpressionStatement	map [ i ] = j	397:6:13280:13290	467818	0	True				
ANR	469389	AssignmentExpression	map [ i ] = j		467818	0		=			
ANR	469390	ArrayIndexing	map [ i ]		467818	0					
ANR	469391	Identifier	map		467818	0					
ANR	469392	Identifier	i		467818	1					
ANR	469393	Identifier	j		467818	1					
ANR	469394	ExpressionStatement	"ZVAL_LONG ( & zv , j )"	398:6:13298:13315	467818	1	True				
ANR	469395	CallExpression	"ZVAL_LONG ( & zv , j )"		467818	0					
ANR	469396	Callee	ZVAL_LONG		467818	0					
ANR	469397	Identifier	ZVAL_LONG		467818	0					
ANR	469398	ArgumentList	& zv		467818	1					
ANR	469399	Argument	& zv		467818	0					
ANR	469400	UnaryOperationExpression	& zv		467818	0					
ANR	469401	UnaryOperator	&		467818	0					
ANR	469402	Identifier	zv		467818	1					
ANR	469403	Argument	j		467818	1					
ANR	469404	Identifier	j		467818	0					
ANR	469405	ExpressionStatement	"zend_hash_index_add_new ( & hash , Z_LVAL ( op_array -> literals [ i ] ) , & zv )"	399:6:13323:13389	467818	2	True				
ANR	469406	CallExpression	"zend_hash_index_add_new ( & hash , Z_LVAL ( op_array -> literals [ i ] ) , & zv )"		467818	0					
ANR	469407	Callee	zend_hash_index_add_new		467818	0					
ANR	469408	Identifier	zend_hash_index_add_new		467818	0					
ANR	469409	ArgumentList	& hash		467818	1					
ANR	469410	Argument	& hash		467818	0					
ANR	469411	UnaryOperationExpression	& hash		467818	0					
ANR	469412	UnaryOperator	&		467818	0					
ANR	469413	Identifier	hash		467818	1					
ANR	469414	Argument	Z_LVAL ( op_array -> literals [ i ] )		467818	1					
ANR	469415	CallExpression	Z_LVAL ( op_array -> literals [ i ] )		467818	0					
ANR	469416	Callee	Z_LVAL		467818	0					
ANR	469417	Identifier	Z_LVAL		467818	0					
ANR	469418	ArgumentList	op_array -> literals [ i ]		467818	1					
ANR	469419	Argument	op_array -> literals [ i ]		467818	0					
ANR	469420	ArrayIndexing	op_array -> literals [ i ]		467818	0					
ANR	469421	PtrMemberAccess	op_array -> literals		467818	0					
ANR	469422	Identifier	op_array		467818	0					
ANR	469423	Identifier	literals		467818	1					
ANR	469424	Identifier	i		467818	1					
ANR	469425	Argument	& zv		467818	2					
ANR	469426	UnaryOperationExpression	& zv		467818	0					
ANR	469427	UnaryOperator	&		467818	0					
ANR	469428	Identifier	zv		467818	1					
ANR	469429	IfStatement	if ( i != j )		467818	3					
ANR	469430	Condition	i != j	400:10:13401:13406	467818	0	True				
ANR	469431	EqualityExpression	i != j		467818	0		!=			
ANR	469432	Identifier	i		467818	0					
ANR	469433	Identifier	j		467818	1					
ANR	469434	CompoundStatement		283:18:8250:8250	467818	1					
ANR	469435	ExpressionStatement	op_array -> literals [ j ] = op_array -> literals [ i ]	401:7:13418:13463	467818	0	True				
ANR	469436	AssignmentExpression	op_array -> literals [ j ] = op_array -> literals [ i ]		467818	0		=			
ANR	469437	ArrayIndexing	op_array -> literals [ j ]		467818	0					
ANR	469438	PtrMemberAccess	op_array -> literals		467818	0					
ANR	469439	Identifier	op_array		467818	0					
ANR	469440	Identifier	literals		467818	1					
ANR	469441	Identifier	j		467818	1					
ANR	469442	ArrayIndexing	op_array -> literals [ i ]		467818	1					
ANR	469443	PtrMemberAccess	op_array -> literals		467818	0					
ANR	469444	Identifier	op_array		467818	0					
ANR	469445	Identifier	literals		467818	1					
ANR	469446	Identifier	i		467818	1					
ANR	469447	ExpressionStatement	info [ j ] = info [ i ]	402:7:13472:13489	467818	1	True				
ANR	469448	AssignmentExpression	info [ j ] = info [ i ]		467818	0		=			
ANR	469449	ArrayIndexing	info [ j ]		467818	0					
ANR	469450	Identifier	info		467818	0					
ANR	469451	Identifier	j		467818	1					
ANR	469452	ArrayIndexing	info [ i ]		467818	1					
ANR	469453	Identifier	info		467818	0					
ANR	469454	Identifier	i		467818	1					
ANR	469455	ExpressionStatement	j ++	404:6:13505:13508	467818	4	True				
ANR	469456	PostIncDecOperationExpression	j ++		467818	0					
ANR	469457	Identifier	j		467818	0					
ANR	469458	IncDec	++		467818	1					
ANR	469459	BreakStatement	break ;	406:5:13522:13527	467818	13	True				
ANR	469460	Label	case IS_DOUBLE :	407:4:13533:13547	467818	14	True				
ANR	469461	Identifier	IS_DOUBLE		467818	0					
ANR	469462	IfStatement	"if ( ( pos = zend_hash_str_find ( & hash , ( char * ) & Z_DVAL ( op_array -> literals [ i ] ) , sizeof ( double ) ) ) != NULL )"		467818	15					
ANR	469463	Condition	"( pos = zend_hash_str_find ( & hash , ( char * ) & Z_DVAL ( op_array -> literals [ i ] ) , sizeof ( double ) ) ) != NULL"	408:9:13558:13653	467818	0	True				
ANR	469464	EqualityExpression	"( pos = zend_hash_str_find ( & hash , ( char * ) & Z_DVAL ( op_array -> literals [ i ] ) , sizeof ( double ) ) ) != NULL"		467818	0		!=			
ANR	469465	AssignmentExpression	"pos = zend_hash_str_find ( & hash , ( char * ) & Z_DVAL ( op_array -> literals [ i ] ) , sizeof ( double ) )"		467818	0		=			
ANR	469466	Identifier	pos		467818	0					
ANR	469467	CallExpression	"zend_hash_str_find ( & hash , ( char * ) & Z_DVAL ( op_array -> literals [ i ] ) , sizeof ( double ) )"		467818	1					
ANR	469468	Callee	zend_hash_str_find		467818	0					
ANR	469469	Identifier	zend_hash_str_find		467818	0					
ANR	469470	ArgumentList	& hash		467818	1					
ANR	469471	Argument	& hash		467818	0					
ANR	469472	UnaryOperationExpression	& hash		467818	0					
ANR	469473	UnaryOperator	&		467818	0					
ANR	469474	Identifier	hash		467818	1					
ANR	469475	Argument	( char * ) & Z_DVAL ( op_array -> literals [ i ] )		467818	1					
ANR	469476	CastExpression	( char * ) & Z_DVAL ( op_array -> literals [ i ] )		467818	0					
ANR	469477	CastTarget	char *		467818	0					
ANR	469478	UnaryOperationExpression	& Z_DVAL ( op_array -> literals [ i ] )		467818	1					
ANR	469479	UnaryOperator	&		467818	0					
ANR	469480	CallExpression	Z_DVAL ( op_array -> literals [ i ] )		467818	1					
ANR	469481	Callee	Z_DVAL		467818	0					
ANR	469482	Identifier	Z_DVAL		467818	0					
ANR	469483	ArgumentList	op_array -> literals [ i ]		467818	1					
ANR	469484	Argument	op_array -> literals [ i ]		467818	0					
ANR	469485	ArrayIndexing	op_array -> literals [ i ]		467818	0					
ANR	469486	PtrMemberAccess	op_array -> literals		467818	0					
ANR	469487	Identifier	op_array		467818	0					
ANR	469488	Identifier	literals		467818	1					
ANR	469489	Identifier	i		467818	1					
ANR	469490	Argument	sizeof ( double )		467818	2					
ANR	469491	SizeofExpression	sizeof ( double )		467818	0					
ANR	469492	Sizeof	sizeof		467818	0					
ANR	469493	SizeofOperand	double		467818	1					
ANR	469494	Identifier	NULL		467818	1					
ANR	469495	CompoundStatement		291:107:8497:8497	467818	1					
ANR	469496	ExpressionStatement	map [ i ] = Z_LVAL_P ( pos )	409:6:13664:13686	467818	0	True				
ANR	469497	AssignmentExpression	map [ i ] = Z_LVAL_P ( pos )		467818	0		=			
ANR	469498	ArrayIndexing	map [ i ]		467818	0					
ANR	469499	Identifier	map		467818	0					
ANR	469500	Identifier	i		467818	1					
ANR	469501	CallExpression	Z_LVAL_P ( pos )		467818	1					
ANR	469502	Callee	Z_LVAL_P		467818	0					
ANR	469503	Identifier	Z_LVAL_P		467818	0					
ANR	469504	ArgumentList	pos		467818	1					
ANR	469505	Argument	pos		467818	0					
ANR	469506	Identifier	pos		467818	0					
ANR	469507	ElseStatement	else		467818	0					
ANR	469508	CompoundStatement		293:12:8541:8541	467818	0					
ANR	469509	ExpressionStatement	map [ i ] = j	411:6:13708:13718	467818	0	True				
ANR	469510	AssignmentExpression	map [ i ] = j		467818	0		=			
ANR	469511	ArrayIndexing	map [ i ]		467818	0					
ANR	469512	Identifier	map		467818	0					
ANR	469513	Identifier	i		467818	1					
ANR	469514	Identifier	j		467818	1					
ANR	469515	ExpressionStatement	"ZVAL_LONG ( & zv , j )"	412:6:13726:13743	467818	1	True				
ANR	469516	CallExpression	"ZVAL_LONG ( & zv , j )"		467818	0					
ANR	469517	Callee	ZVAL_LONG		467818	0					
ANR	469518	Identifier	ZVAL_LONG		467818	0					
ANR	469519	ArgumentList	& zv		467818	1					
ANR	469520	Argument	& zv		467818	0					
ANR	469521	UnaryOperationExpression	& zv		467818	0					
ANR	469522	UnaryOperator	&		467818	0					
ANR	469523	Identifier	zv		467818	1					
ANR	469524	Argument	j		467818	1					
ANR	469525	Identifier	j		467818	0					
ANR	469526	ExpressionStatement	"zend_hash_str_add ( & hash , ( char * ) & Z_DVAL ( op_array -> literals [ i ] ) , sizeof ( double ) , & zv )"	413:6:13751:13835	467818	2	True				
ANR	469527	CallExpression	"zend_hash_str_add ( & hash , ( char * ) & Z_DVAL ( op_array -> literals [ i ] ) , sizeof ( double ) , & zv )"		467818	0					
ANR	469528	Callee	zend_hash_str_add		467818	0					
ANR	469529	Identifier	zend_hash_str_add		467818	0					
ANR	469530	ArgumentList	& hash		467818	1					
ANR	469531	Argument	& hash		467818	0					
ANR	469532	UnaryOperationExpression	& hash		467818	0					
ANR	469533	UnaryOperator	&		467818	0					
ANR	469534	Identifier	hash		467818	1					
ANR	469535	Argument	( char * ) & Z_DVAL ( op_array -> literals [ i ] )		467818	1					
ANR	469536	CastExpression	( char * ) & Z_DVAL ( op_array -> literals [ i ] )		467818	0					
ANR	469537	CastTarget	char *		467818	0					
ANR	469538	UnaryOperationExpression	& Z_DVAL ( op_array -> literals [ i ] )		467818	1					
ANR	469539	UnaryOperator	&		467818	0					
ANR	469540	CallExpression	Z_DVAL ( op_array -> literals [ i ] )		467818	1					
ANR	469541	Callee	Z_DVAL		467818	0					
ANR	469542	Identifier	Z_DVAL		467818	0					
ANR	469543	ArgumentList	op_array -> literals [ i ]		467818	1					
ANR	469544	Argument	op_array -> literals [ i ]		467818	0					
ANR	469545	ArrayIndexing	op_array -> literals [ i ]		467818	0					
ANR	469546	PtrMemberAccess	op_array -> literals		467818	0					
ANR	469547	Identifier	op_array		467818	0					
ANR	469548	Identifier	literals		467818	1					
ANR	469549	Identifier	i		467818	1					
ANR	469550	Argument	sizeof ( double )		467818	2					
ANR	469551	SizeofExpression	sizeof ( double )		467818	0					
ANR	469552	Sizeof	sizeof		467818	0					
ANR	469553	SizeofOperand	double		467818	1					
ANR	469554	Argument	& zv		467818	3					
ANR	469555	UnaryOperationExpression	& zv		467818	0					
ANR	469556	UnaryOperator	&		467818	0					
ANR	469557	Identifier	zv		467818	1					
ANR	469558	IfStatement	if ( i != j )		467818	3					
ANR	469559	Condition	i != j	414:10:13847:13852	467818	0	True				
ANR	469560	EqualityExpression	i != j		467818	0		!=			
ANR	469561	Identifier	i		467818	0					
ANR	469562	Identifier	j		467818	1					
ANR	469563	CompoundStatement		297:18:8696:8696	467818	1					
ANR	469564	ExpressionStatement	op_array -> literals [ j ] = op_array -> literals [ i ]	415:7:13864:13909	467818	0	True				
ANR	469565	AssignmentExpression	op_array -> literals [ j ] = op_array -> literals [ i ]		467818	0		=			
ANR	469566	ArrayIndexing	op_array -> literals [ j ]		467818	0					
ANR	469567	PtrMemberAccess	op_array -> literals		467818	0					
ANR	469568	Identifier	op_array		467818	0					
ANR	469569	Identifier	literals		467818	1					
ANR	469570	Identifier	j		467818	1					
ANR	469571	ArrayIndexing	op_array -> literals [ i ]		467818	1					
ANR	469572	PtrMemberAccess	op_array -> literals		467818	0					
ANR	469573	Identifier	op_array		467818	0					
ANR	469574	Identifier	literals		467818	1					
ANR	469575	Identifier	i		467818	1					
ANR	469576	ExpressionStatement	info [ j ] = info [ i ]	416:7:13918:13935	467818	1	True				
ANR	469577	AssignmentExpression	info [ j ] = info [ i ]		467818	0		=			
ANR	469578	ArrayIndexing	info [ j ]		467818	0					
ANR	469579	Identifier	info		467818	0					
ANR	469580	Identifier	j		467818	1					
ANR	469581	ArrayIndexing	info [ i ]		467818	1					
ANR	469582	Identifier	info		467818	0					
ANR	469583	Identifier	i		467818	1					
ANR	469584	ExpressionStatement	j ++	418:6:13951:13954	467818	4	True				
ANR	469585	PostIncDecOperationExpression	j ++		467818	0					
ANR	469586	Identifier	j		467818	0					
ANR	469587	IncDec	++		467818	1					
ANR	469588	BreakStatement	break ;	420:5:13968:13973	467818	16	True				
ANR	469589	Label	case IS_STRING :	421:4:13979:13993	467818	17	True				
ANR	469590	Identifier	IS_STRING		467818	0					
ANR	469591	Label	case IS_CONSTANT :	422:4:13999:14015	467818	18	True				
ANR	469592	Identifier	IS_CONSTANT		467818	0					
ANR	469593	IfStatement	if ( info [ i ] . flags & LITERAL_MAY_MERGE )		467818	19					
ANR	469594	Condition	info [ i ] . flags & LITERAL_MAY_MERGE	423:9:14026:14058	467818	0	True				
ANR	469595	BitAndExpression	info [ i ] . flags & LITERAL_MAY_MERGE		467818	0		&			
ANR	469596	MemberAccess	info [ i ] . flags		467818	0					
ANR	469597	ArrayIndexing	info [ i ]		467818	0					
ANR	469598	Identifier	info		467818	0					
ANR	469599	Identifier	i		467818	1					
ANR	469600	Identifier	flags		467818	1					
ANR	469601	Identifier	LITERAL_MAY_MERGE		467818	1					
ANR	469602	CompoundStatement		306:44:8902:8902	467818	1					
ANR	469603	IfStatement	if ( info [ i ] . flags & LITERAL_EX_OBJ )		467818	0					
ANR	469604	Condition	info [ i ] . flags & LITERAL_EX_OBJ	424:10:14073:14102	467818	0	True				
ANR	469605	BitAndExpression	info [ i ] . flags & LITERAL_EX_OBJ		467818	0		&			
ANR	469606	MemberAccess	info [ i ] . flags		467818	0					
ANR	469607	ArrayIndexing	info [ i ]		467818	0					
ANR	469608	Identifier	info		467818	0					
ANR	469609	Identifier	i		467818	1					
ANR	469610	Identifier	flags		467818	1					
ANR	469611	Identifier	LITERAL_EX_OBJ		467818	1					
ANR	469612	CompoundStatement		308:7:8955:9040	467818	1					
ANR	469613	IdentifierDeclStatement	"int key_len = MAX_LENGTH_OF_LONG + sizeof ( ""->"" ) - 1 + Z_STRLEN ( op_array -> literals [ i ] ) ;"	425:7:14114:14199	467818	0	True				
ANR	469614	IdentifierDecl	"key_len = MAX_LENGTH_OF_LONG + sizeof ( ""->"" ) - 1 + Z_STRLEN ( op_array -> literals [ i ] )"		467818	0					
ANR	469615	IdentifierDeclType	int		467818	0					
ANR	469616	Identifier	key_len		467818	1					
ANR	469617	AssignmentExpression	"key_len = MAX_LENGTH_OF_LONG + sizeof ( ""->"" ) - 1 + Z_STRLEN ( op_array -> literals [ i ] )"		467818	2		=			
ANR	469618	Identifier	key_len		467818	0					
ANR	469619	AdditiveExpression	"MAX_LENGTH_OF_LONG + sizeof ( ""->"" ) - 1 + Z_STRLEN ( op_array -> literals [ i ] )"		467818	1		+			
ANR	469620	Identifier	MAX_LENGTH_OF_LONG		467818	0					
ANR	469621	AdditiveExpression	"sizeof ( ""->"" ) - 1 + Z_STRLEN ( op_array -> literals [ i ] )"		467818	1		-			
ANR	469622	SizeofExpression	"sizeof ( ""->"" )"		467818	0					
ANR	469623	Sizeof	sizeof		467818	0					
ANR	469624	PrimaryExpression	"""->"""		467818	1					
ANR	469625	AdditiveExpression	1 + Z_STRLEN ( op_array -> literals [ i ] )		467818	1		+			
ANR	469626	PrimaryExpression	1		467818	0					
ANR	469627	CallExpression	Z_STRLEN ( op_array -> literals [ i ] )		467818	1					
ANR	469628	Callee	Z_STRLEN		467818	0					
ANR	469629	Identifier	Z_STRLEN		467818	0					
ANR	469630	ArgumentList	op_array -> literals [ i ]		467818	1					
ANR	469631	Argument	op_array -> literals [ i ]		467818	0					
ANR	469632	ArrayIndexing	op_array -> literals [ i ]		467818	0					
ANR	469633	PtrMemberAccess	op_array -> literals		467818	0					
ANR	469634	Identifier	op_array		467818	0					
ANR	469635	Identifier	literals		467818	1					
ANR	469636	Identifier	i		467818	1					
ANR	469637	ExpressionStatement	"key = zend_string_alloc ( key_len , 0 )"	426:7:14208:14243	467818	1	True				
ANR	469638	AssignmentExpression	"key = zend_string_alloc ( key_len , 0 )"		467818	0		=			
ANR	469639	Identifier	key		467818	0					
ANR	469640	CallExpression	"zend_string_alloc ( key_len , 0 )"		467818	1					
ANR	469641	Callee	zend_string_alloc		467818	0					
ANR	469642	Identifier	zend_string_alloc		467818	0					
ANR	469643	ArgumentList	key_len		467818	1					
ANR	469644	Argument	key_len		467818	0					
ANR	469645	Identifier	key_len		467818	0					
ANR	469646	Argument	0		467818	1					
ANR	469647	PrimaryExpression	0		467818	0					
ANR	469648	ExpressionStatement	"ZSTR_LEN ( key ) = snprintf ( ZSTR_VAL ( key ) , ZSTR_LEN ( key ) - 1 , ""%d->%s"" , info [ i ] . u . num , Z_STRVAL ( op_array -> literals [ i ] ) )"	427:7:14252:14366	467818	2	True				
ANR	469649	AssignmentExpression	"ZSTR_LEN ( key ) = snprintf ( ZSTR_VAL ( key ) , ZSTR_LEN ( key ) - 1 , ""%d->%s"" , info [ i ] . u . num , Z_STRVAL ( op_array -> literals [ i ] ) )"		467818	0		=			
ANR	469650	CallExpression	ZSTR_LEN ( key )		467818	0					
ANR	469651	Callee	ZSTR_LEN		467818	0					
ANR	469652	Identifier	ZSTR_LEN		467818	0					
ANR	469653	ArgumentList	key		467818	1					
ANR	469654	Argument	key		467818	0					
ANR	469655	Identifier	key		467818	0					
ANR	469656	CallExpression	"snprintf ( ZSTR_VAL ( key ) , ZSTR_LEN ( key ) - 1 , ""%d->%s"" , info [ i ] . u . num , Z_STRVAL ( op_array -> literals [ i ] ) )"		467818	1					
ANR	469657	Callee	snprintf		467818	0					
ANR	469658	Identifier	snprintf		467818	0					
ANR	469659	ArgumentList	ZSTR_VAL ( key )		467818	1					
ANR	469660	Argument	ZSTR_VAL ( key )		467818	0					
ANR	469661	CallExpression	ZSTR_VAL ( key )		467818	0					
ANR	469662	Callee	ZSTR_VAL		467818	0					
ANR	469663	Identifier	ZSTR_VAL		467818	0					
ANR	469664	ArgumentList	key		467818	1					
ANR	469665	Argument	key		467818	0					
ANR	469666	Identifier	key		467818	0					
ANR	469667	Argument	ZSTR_LEN ( key ) - 1		467818	1					
ANR	469668	AdditiveExpression	ZSTR_LEN ( key ) - 1		467818	0		-			
ANR	469669	CallExpression	ZSTR_LEN ( key )		467818	0					
ANR	469670	Callee	ZSTR_LEN		467818	0					
ANR	469671	Identifier	ZSTR_LEN		467818	0					
ANR	469672	ArgumentList	key		467818	1					
ANR	469673	Argument	key		467818	0					
ANR	469674	Identifier	key		467818	0					
ANR	469675	PrimaryExpression	1		467818	1					
ANR	469676	Argument	"""%d->%s"""		467818	2					
ANR	469677	PrimaryExpression	"""%d->%s"""		467818	0					
ANR	469678	Argument	info [ i ] . u . num		467818	3					
ANR	469679	MemberAccess	info [ i ] . u . num		467818	0					
ANR	469680	MemberAccess	info [ i ] . u		467818	0					
ANR	469681	ArrayIndexing	info [ i ]		467818	0					
ANR	469682	Identifier	info		467818	0					
ANR	469683	Identifier	i		467818	1					
ANR	469684	Identifier	u		467818	1					
ANR	469685	Identifier	num		467818	1					
ANR	469686	Argument	Z_STRVAL ( op_array -> literals [ i ] )		467818	4					
ANR	469687	CallExpression	Z_STRVAL ( op_array -> literals [ i ] )		467818	0					
ANR	469688	Callee	Z_STRVAL		467818	0					
ANR	469689	Identifier	Z_STRVAL		467818	0					
ANR	469690	ArgumentList	op_array -> literals [ i ]		467818	1					
ANR	469691	Argument	op_array -> literals [ i ]		467818	0					
ANR	469692	ArrayIndexing	op_array -> literals [ i ]		467818	0					
ANR	469693	PtrMemberAccess	op_array -> literals		467818	0					
ANR	469694	Identifier	op_array		467818	0					
ANR	469695	Identifier	literals		467818	1					
ANR	469696	Identifier	i		467818	1					
ANR	469697	ElseStatement	else		467818	0					
ANR	469698	IfStatement	if ( info [ i ] . flags & LITERAL_EX_CLASS )		467818	0					
ANR	469699	Condition	info [ i ] . flags & LITERAL_EX_CLASS	428:17:14385:14416	467818	0	True				
ANR	469700	BitAndExpression	info [ i ] . flags & LITERAL_EX_CLASS		467818	0		&			
ANR	469701	MemberAccess	info [ i ] . flags		467818	0					
ANR	469702	ArrayIndexing	info [ i ]		467818	0					
ANR	469703	Identifier	info		467818	0					
ANR	469704	Identifier	i		467818	1					
ANR	469705	Identifier	flags		467818	1					
ANR	469706	Identifier	LITERAL_EX_CLASS		467818	1					
ANR	469707	CompoundStatement		313:7:9289:9385	467818	1					
ANR	469708	IdentifierDeclStatement	int key_len ;	429:7:14428:14439	467818	0	True				
ANR	469709	IdentifierDecl	key_len		467818	0					
ANR	469710	IdentifierDeclType	int		467818	0					
ANR	469711	Identifier	key_len		467818	1					
ANR	469712	IdentifierDeclStatement	zval * class_name = & op_array -> literals [ ( info [ i ] . u . num < i ) ? map [ info [ i ] . u . num ] : info [ i ] . u . num ] ;	430:7:14448:14544	467818	1	True				
ANR	469713	IdentifierDecl	* class_name = & op_array -> literals [ ( info [ i ] . u . num < i ) ? map [ info [ i ] . u . num ] : info [ i ] . u . num ]		467818	0					
ANR	469714	IdentifierDeclType	zval *		467818	0					
ANR	469715	Identifier	class_name		467818	1					
ANR	469716	AssignmentExpression	* class_name = & op_array -> literals [ ( info [ i ] . u . num < i ) ? map [ info [ i ] . u . num ] : info [ i ] . u . num ]		467818	2		=			
ANR	469717	Identifier	class_name		467818	0					
ANR	469718	UnaryOperationExpression	& op_array -> literals [ ( info [ i ] . u . num < i ) ? map [ info [ i ] . u . num ] : info [ i ] . u . num ]		467818	1					
ANR	469719	UnaryOperator	&		467818	0					
ANR	469720	ArrayIndexing	op_array -> literals [ ( info [ i ] . u . num < i ) ? map [ info [ i ] . u . num ] : info [ i ] . u . num ]		467818	1					
ANR	469721	PtrMemberAccess	op_array -> literals		467818	0					
ANR	469722	Identifier	op_array		467818	0					
ANR	469723	Identifier	literals		467818	1					
ANR	469724	ConditionalExpression	( info [ i ] . u . num < i ) ? map [ info [ i ] . u . num ] : info [ i ] . u . num		467818	1					
ANR	469725	Condition	info [ i ] . u . num < i		467818	0					
ANR	469726	RelationalExpression	info [ i ] . u . num < i		467818	0		<			
ANR	469727	MemberAccess	info [ i ] . u . num		467818	0					
ANR	469728	MemberAccess	info [ i ] . u		467818	0					
ANR	469729	ArrayIndexing	info [ i ]		467818	0					
ANR	469730	Identifier	info		467818	0					
ANR	469731	Identifier	i		467818	1					
ANR	469732	Identifier	u		467818	1					
ANR	469733	Identifier	num		467818	1					
ANR	469734	Identifier	i		467818	1					
ANR	469735	ArrayIndexing	map [ info [ i ] . u . num ]		467818	1					
ANR	469736	Identifier	map		467818	0					
ANR	469737	MemberAccess	info [ i ] . u . num		467818	1					
ANR	469738	MemberAccess	info [ i ] . u		467818	0					
ANR	469739	ArrayIndexing	info [ i ]		467818	0					
ANR	469740	Identifier	info		467818	0					
ANR	469741	Identifier	i		467818	1					
ANR	469742	Identifier	u		467818	1					
ANR	469743	Identifier	num		467818	1					
ANR	469744	MemberAccess	info [ i ] . u . num		467818	2					
ANR	469745	MemberAccess	info [ i ] . u		467818	0					
ANR	469746	ArrayIndexing	info [ i ]		467818	0					
ANR	469747	Identifier	info		467818	0					
ANR	469748	Identifier	i		467818	1					
ANR	469749	Identifier	u		467818	1					
ANR	469750	Identifier	num		467818	1					
ANR	469751	ExpressionStatement	"key_len = Z_STRLEN_P ( class_name ) + sizeof ( ""::"" ) - 1 + Z_STRLEN ( op_array -> literals [ i ] )"	431:7:14553:14638	467818	2	True				
ANR	469752	AssignmentExpression	"key_len = Z_STRLEN_P ( class_name ) + sizeof ( ""::"" ) - 1 + Z_STRLEN ( op_array -> literals [ i ] )"		467818	0		=			
ANR	469753	Identifier	key_len		467818	0					
ANR	469754	AdditiveExpression	"Z_STRLEN_P ( class_name ) + sizeof ( ""::"" ) - 1 + Z_STRLEN ( op_array -> literals [ i ] )"		467818	1		+			
ANR	469755	CallExpression	Z_STRLEN_P ( class_name )		467818	0					
ANR	469756	Callee	Z_STRLEN_P		467818	0					
ANR	469757	Identifier	Z_STRLEN_P		467818	0					
ANR	469758	ArgumentList	class_name		467818	1					
ANR	469759	Argument	class_name		467818	0					
ANR	469760	Identifier	class_name		467818	0					
ANR	469761	AdditiveExpression	"sizeof ( ""::"" ) - 1 + Z_STRLEN ( op_array -> literals [ i ] )"		467818	1		-			
ANR	469762	SizeofExpression	"sizeof ( ""::"" )"		467818	0					
ANR	469763	Sizeof	sizeof		467818	0					
ANR	469764	PrimaryExpression	"""::"""		467818	1					
ANR	469765	AdditiveExpression	1 + Z_STRLEN ( op_array -> literals [ i ] )		467818	1		+			
ANR	469766	PrimaryExpression	1		467818	0					
ANR	469767	CallExpression	Z_STRLEN ( op_array -> literals [ i ] )		467818	1					
ANR	469768	Callee	Z_STRLEN		467818	0					
ANR	469769	Identifier	Z_STRLEN		467818	0					
ANR	469770	ArgumentList	op_array -> literals [ i ]		467818	1					
ANR	469771	Argument	op_array -> literals [ i ]		467818	0					
ANR	469772	ArrayIndexing	op_array -> literals [ i ]		467818	0					
ANR	469773	PtrMemberAccess	op_array -> literals		467818	0					
ANR	469774	Identifier	op_array		467818	0					
ANR	469775	Identifier	literals		467818	1					
ANR	469776	Identifier	i		467818	1					
ANR	469777	ExpressionStatement	"key = zend_string_alloc ( key_len , 0 )"	432:7:14647:14682	467818	3	True				
ANR	469778	AssignmentExpression	"key = zend_string_alloc ( key_len , 0 )"		467818	0		=			
ANR	469779	Identifier	key		467818	0					
ANR	469780	CallExpression	"zend_string_alloc ( key_len , 0 )"		467818	1					
ANR	469781	Callee	zend_string_alloc		467818	0					
ANR	469782	Identifier	zend_string_alloc		467818	0					
ANR	469783	ArgumentList	key_len		467818	1					
ANR	469784	Argument	key_len		467818	0					
ANR	469785	Identifier	key_len		467818	0					
ANR	469786	Argument	0		467818	1					
ANR	469787	PrimaryExpression	0		467818	0					
ANR	469788	ExpressionStatement	"memcpy ( ZSTR_VAL ( key ) , Z_STRVAL_P ( class_name ) , Z_STRLEN_P ( class_name ) )"	433:7:14691:14760	467818	4	True				
ANR	469789	CallExpression	"memcpy ( ZSTR_VAL ( key ) , Z_STRVAL_P ( class_name ) , Z_STRLEN_P ( class_name ) )"		467818	0					
ANR	469790	Callee	memcpy		467818	0					
ANR	469791	Identifier	memcpy		467818	0					
ANR	469792	ArgumentList	ZSTR_VAL ( key )		467818	1					
ANR	469793	Argument	ZSTR_VAL ( key )		467818	0					
ANR	469794	CallExpression	ZSTR_VAL ( key )		467818	0					
ANR	469795	Callee	ZSTR_VAL		467818	0					
ANR	469796	Identifier	ZSTR_VAL		467818	0					
ANR	469797	ArgumentList	key		467818	1					
ANR	469798	Argument	key		467818	0					
ANR	469799	Identifier	key		467818	0					
ANR	469800	Argument	Z_STRVAL_P ( class_name )		467818	1					
ANR	469801	CallExpression	Z_STRVAL_P ( class_name )		467818	0					
ANR	469802	Callee	Z_STRVAL_P		467818	0					
ANR	469803	Identifier	Z_STRVAL_P		467818	0					
ANR	469804	ArgumentList	class_name		467818	1					
ANR	469805	Argument	class_name		467818	0					
ANR	469806	Identifier	class_name		467818	0					
ANR	469807	Argument	Z_STRLEN_P ( class_name )		467818	2					
ANR	469808	CallExpression	Z_STRLEN_P ( class_name )		467818	0					
ANR	469809	Callee	Z_STRLEN_P		467818	0					
ANR	469810	Identifier	Z_STRLEN_P		467818	0					
ANR	469811	ArgumentList	class_name		467818	1					
ANR	469812	Argument	class_name		467818	0					
ANR	469813	Identifier	class_name		467818	0					
ANR	469814	ExpressionStatement	"memcpy ( ZSTR_VAL ( key ) + Z_STRLEN_P ( class_name ) , ""::"" , sizeof ( ""::"" ) - 1 )"	434:7:14769:14839	467818	5	True				
ANR	469815	CallExpression	"memcpy ( ZSTR_VAL ( key ) + Z_STRLEN_P ( class_name ) , ""::"" , sizeof ( ""::"" ) - 1 )"		467818	0					
ANR	469816	Callee	memcpy		467818	0					
ANR	469817	Identifier	memcpy		467818	0					
ANR	469818	ArgumentList	ZSTR_VAL ( key ) + Z_STRLEN_P ( class_name )		467818	1					
ANR	469819	Argument	ZSTR_VAL ( key ) + Z_STRLEN_P ( class_name )		467818	0					
ANR	469820	AdditiveExpression	ZSTR_VAL ( key ) + Z_STRLEN_P ( class_name )		467818	0		+			
ANR	469821	CallExpression	ZSTR_VAL ( key )		467818	0					
ANR	469822	Callee	ZSTR_VAL		467818	0					
ANR	469823	Identifier	ZSTR_VAL		467818	0					
ANR	469824	ArgumentList	key		467818	1					
ANR	469825	Argument	key		467818	0					
ANR	469826	Identifier	key		467818	0					
ANR	469827	CallExpression	Z_STRLEN_P ( class_name )		467818	1					
ANR	469828	Callee	Z_STRLEN_P		467818	0					
ANR	469829	Identifier	Z_STRLEN_P		467818	0					
ANR	469830	ArgumentList	class_name		467818	1					
ANR	469831	Argument	class_name		467818	0					
ANR	469832	Identifier	class_name		467818	0					
ANR	469833	Argument	"""::"""		467818	1					
ANR	469834	PrimaryExpression	"""::"""		467818	0					
ANR	469835	Argument	"sizeof ( ""::"" ) - 1"		467818	2					
ANR	469836	AdditiveExpression	"sizeof ( ""::"" ) - 1"		467818	0		-			
ANR	469837	SizeofExpression	"sizeof ( ""::"" )"		467818	0					
ANR	469838	Sizeof	sizeof		467818	0					
ANR	469839	PrimaryExpression	"""::"""		467818	1					
ANR	469840	PrimaryExpression	1		467818	1					
ANR	469841	ExpressionStatement	"memcpy ( ZSTR_VAL ( key ) + Z_STRLEN_P ( class_name ) + sizeof ( ""::"" ) - 1 , Z_STRVAL ( op_array -> literals [ i ] ) , Z_STRLEN ( op_array -> literals [ i ] ) + 1 )"	435:7:14848:14999	467818	6	True				
ANR	469842	CallExpression	"memcpy ( ZSTR_VAL ( key ) + Z_STRLEN_P ( class_name ) + sizeof ( ""::"" ) - 1 , Z_STRVAL ( op_array -> literals [ i ] ) , Z_STRLEN ( op_array -> literals [ i ] ) + 1 )"		467818	0					
ANR	469843	Callee	memcpy		467818	0					
ANR	469844	Identifier	memcpy		467818	0					
ANR	469845	ArgumentList	"ZSTR_VAL ( key ) + Z_STRLEN_P ( class_name ) + sizeof ( ""::"" ) - 1"		467818	1					
ANR	469846	Argument	"ZSTR_VAL ( key ) + Z_STRLEN_P ( class_name ) + sizeof ( ""::"" ) - 1"		467818	0					
ANR	469847	AdditiveExpression	"ZSTR_VAL ( key ) + Z_STRLEN_P ( class_name ) + sizeof ( ""::"" ) - 1"		467818	0		+			
ANR	469848	CallExpression	ZSTR_VAL ( key )		467818	0					
ANR	469849	Callee	ZSTR_VAL		467818	0					
ANR	469850	Identifier	ZSTR_VAL		467818	0					
ANR	469851	ArgumentList	key		467818	1					
ANR	469852	Argument	key		467818	0					
ANR	469853	Identifier	key		467818	0					
ANR	469854	AdditiveExpression	"Z_STRLEN_P ( class_name ) + sizeof ( ""::"" ) - 1"		467818	1		+			
ANR	469855	CallExpression	Z_STRLEN_P ( class_name )		467818	0					
ANR	469856	Callee	Z_STRLEN_P		467818	0					
ANR	469857	Identifier	Z_STRLEN_P		467818	0					
ANR	469858	ArgumentList	class_name		467818	1					
ANR	469859	Argument	class_name		467818	0					
ANR	469860	Identifier	class_name		467818	0					
ANR	469861	AdditiveExpression	"sizeof ( ""::"" ) - 1"		467818	1		-			
ANR	469862	SizeofExpression	"sizeof ( ""::"" )"		467818	0					
ANR	469863	Sizeof	sizeof		467818	0					
ANR	469864	PrimaryExpression	"""::"""		467818	1					
ANR	469865	PrimaryExpression	1		467818	1					
ANR	469866	Argument	Z_STRVAL ( op_array -> literals [ i ] )		467818	1					
ANR	469867	CallExpression	Z_STRVAL ( op_array -> literals [ i ] )		467818	0					
ANR	469868	Callee	Z_STRVAL		467818	0					
ANR	469869	Identifier	Z_STRVAL		467818	0					
ANR	469870	ArgumentList	op_array -> literals [ i ]		467818	1					
ANR	469871	Argument	op_array -> literals [ i ]		467818	0					
ANR	469872	ArrayIndexing	op_array -> literals [ i ]		467818	0					
ANR	469873	PtrMemberAccess	op_array -> literals		467818	0					
ANR	469874	Identifier	op_array		467818	0					
ANR	469875	Identifier	literals		467818	1					
ANR	469876	Identifier	i		467818	1					
ANR	469877	Argument	Z_STRLEN ( op_array -> literals [ i ] ) + 1		467818	2					
ANR	469878	AdditiveExpression	Z_STRLEN ( op_array -> literals [ i ] ) + 1		467818	0		+			
ANR	469879	CallExpression	Z_STRLEN ( op_array -> literals [ i ] )		467818	0					
ANR	469880	Callee	Z_STRLEN		467818	0					
ANR	469881	Identifier	Z_STRLEN		467818	0					
ANR	469882	ArgumentList	op_array -> literals [ i ]		467818	1					
ANR	469883	Argument	op_array -> literals [ i ]		467818	0					
ANR	469884	ArrayIndexing	op_array -> literals [ i ]		467818	0					
ANR	469885	PtrMemberAccess	op_array -> literals		467818	0					
ANR	469886	Identifier	op_array		467818	0					
ANR	469887	Identifier	literals		467818	1					
ANR	469888	Identifier	i		467818	1					
ANR	469889	PrimaryExpression	1		467818	1					
ANR	469890	ElseStatement	else		467818	0					
ANR	469891	CompoundStatement		321:13:9855:9855	467818	0					
ANR	469892	ExpressionStatement	"key = zend_string_init ( Z_STRVAL ( op_array -> literals [ i ] ) , Z_STRLEN ( op_array -> literals [ i ] ) , 0 )"	439:7:15023:15114	467818	0	True				
ANR	469893	AssignmentExpression	"key = zend_string_init ( Z_STRVAL ( op_array -> literals [ i ] ) , Z_STRLEN ( op_array -> literals [ i ] ) , 0 )"		467818	0		=			
ANR	469894	Identifier	key		467818	0					
ANR	469895	CallExpression	"zend_string_init ( Z_STRVAL ( op_array -> literals [ i ] ) , Z_STRLEN ( op_array -> literals [ i ] ) , 0 )"		467818	1					
ANR	469896	Callee	zend_string_init		467818	0					
ANR	469897	Identifier	zend_string_init		467818	0					
ANR	469898	ArgumentList	Z_STRVAL ( op_array -> literals [ i ] )		467818	1					
ANR	469899	Argument	Z_STRVAL ( op_array -> literals [ i ] )		467818	0					
ANR	469900	CallExpression	Z_STRVAL ( op_array -> literals [ i ] )		467818	0					
ANR	469901	Callee	Z_STRVAL		467818	0					
ANR	469902	Identifier	Z_STRVAL		467818	0					
ANR	469903	ArgumentList	op_array -> literals [ i ]		467818	1					
ANR	469904	Argument	op_array -> literals [ i ]		467818	0					
ANR	469905	ArrayIndexing	op_array -> literals [ i ]		467818	0					
ANR	469906	PtrMemberAccess	op_array -> literals		467818	0					
ANR	469907	Identifier	op_array		467818	0					
ANR	469908	Identifier	literals		467818	1					
ANR	469909	Identifier	i		467818	1					
ANR	469910	Argument	Z_STRLEN ( op_array -> literals [ i ] )		467818	1					
ANR	469911	CallExpression	Z_STRLEN ( op_array -> literals [ i ] )		467818	0					
ANR	469912	Callee	Z_STRLEN		467818	0					
ANR	469913	Identifier	Z_STRLEN		467818	0					
ANR	469914	ArgumentList	op_array -> literals [ i ]		467818	1					
ANR	469915	Argument	op_array -> literals [ i ]		467818	0					
ANR	469916	ArrayIndexing	op_array -> literals [ i ]		467818	0					
ANR	469917	PtrMemberAccess	op_array -> literals		467818	0					
ANR	469918	Identifier	op_array		467818	0					
ANR	469919	Identifier	literals		467818	1					
ANR	469920	Identifier	i		467818	1					
ANR	469921	Argument	0		467818	2					
ANR	469922	PrimaryExpression	0		467818	0					
ANR	469923	ExpressionStatement	"ZSTR_H ( key ) = zend_hash_func ( ZSTR_VAL ( key ) , ZSTR_LEN ( key ) )"	441:6:15130:15188	467818	1	True				
ANR	469924	AssignmentExpression	"ZSTR_H ( key ) = zend_hash_func ( ZSTR_VAL ( key ) , ZSTR_LEN ( key ) )"		467818	0		=			
ANR	469925	CallExpression	ZSTR_H ( key )		467818	0					
ANR	469926	Callee	ZSTR_H		467818	0					
ANR	469927	Identifier	ZSTR_H		467818	0					
ANR	469928	ArgumentList	key		467818	1					
ANR	469929	Argument	key		467818	0					
ANR	469930	Identifier	key		467818	0					
ANR	469931	CallExpression	"zend_hash_func ( ZSTR_VAL ( key ) , ZSTR_LEN ( key ) )"		467818	1					
ANR	469932	Callee	zend_hash_func		467818	0					
ANR	469933	Identifier	zend_hash_func		467818	0					
ANR	469934	ArgumentList	ZSTR_VAL ( key )		467818	1					
ANR	469935	Argument	ZSTR_VAL ( key )		467818	0					
ANR	469936	CallExpression	ZSTR_VAL ( key )		467818	0					
ANR	469937	Callee	ZSTR_VAL		467818	0					
ANR	469938	Identifier	ZSTR_VAL		467818	0					
ANR	469939	ArgumentList	key		467818	1					
ANR	469940	Argument	key		467818	0					
ANR	469941	Identifier	key		467818	0					
ANR	469942	Argument	ZSTR_LEN ( key )		467818	1					
ANR	469943	CallExpression	ZSTR_LEN ( key )		467818	0					
ANR	469944	Callee	ZSTR_LEN		467818	0					
ANR	469945	Identifier	ZSTR_LEN		467818	0					
ANR	469946	ArgumentList	key		467818	1					
ANR	469947	Argument	key		467818	0					
ANR	469948	Identifier	key		467818	0					
ANR	469949	ExpressionStatement	ZSTR_H ( key ) += info [ i ] . flags	442:6:15196:15224	467818	2	True				
ANR	469950	AssignmentExpression	ZSTR_H ( key ) += info [ i ] . flags		467818	0		+=			
ANR	469951	CallExpression	ZSTR_H ( key )		467818	0					
ANR	469952	Callee	ZSTR_H		467818	0					
ANR	469953	Identifier	ZSTR_H		467818	0					
ANR	469954	ArgumentList	key		467818	1					
ANR	469955	Argument	key		467818	0					
ANR	469956	Identifier	key		467818	0					
ANR	469957	MemberAccess	info [ i ] . flags		467818	1					
ANR	469958	ArrayIndexing	info [ i ]		467818	0					
ANR	469959	Identifier	info		467818	0					
ANR	469960	Identifier	i		467818	1					
ANR	469961	Identifier	flags		467818	1					
ANR	469962	IfStatement	"if ( ( info [ i ] . flags & LITERAL_MAY_MERGE ) && ( pos = zend_hash_find ( & hash , key ) ) != NULL && Z_TYPE ( op_array -> literals [ i ] ) == Z_TYPE ( op_array -> literals [ Z_LVAL_P ( pos ) ] ) && info [ i ] . flags == info [ Z_LVAL_P ( pos ) ] . flags )"		467818	20					
ANR	469963	Condition	"( info [ i ] . flags & LITERAL_MAY_MERGE ) && ( pos = zend_hash_find ( & hash , key ) ) != NULL && Z_TYPE ( op_array -> literals [ i ] ) == Z_TYPE ( op_array -> literals [ Z_LVAL_P ( pos ) ] ) && info [ i ] . flags == info [ Z_LVAL_P ( pos ) ] . flags"	444:9:15242:15467	467818	0	True				
ANR	469964	AndExpression	"( info [ i ] . flags & LITERAL_MAY_MERGE ) && ( pos = zend_hash_find ( & hash , key ) ) != NULL && Z_TYPE ( op_array -> literals [ i ] ) == Z_TYPE ( op_array -> literals [ Z_LVAL_P ( pos ) ] ) && info [ i ] . flags == info [ Z_LVAL_P ( pos ) ] . flags"		467818	0		&&			
ANR	469965	BitAndExpression	info [ i ] . flags & LITERAL_MAY_MERGE		467818	0		&			
ANR	469966	MemberAccess	info [ i ] . flags		467818	0					
ANR	469967	ArrayIndexing	info [ i ]		467818	0					
ANR	469968	Identifier	info		467818	0					
ANR	469969	Identifier	i		467818	1					
ANR	469970	Identifier	flags		467818	1					
ANR	469971	Identifier	LITERAL_MAY_MERGE		467818	1					
ANR	469972	AndExpression	"( pos = zend_hash_find ( & hash , key ) ) != NULL && Z_TYPE ( op_array -> literals [ i ] ) == Z_TYPE ( op_array -> literals [ Z_LVAL_P ( pos ) ] ) && info [ i ] . flags == info [ Z_LVAL_P ( pos ) ] . flags"		467818	1		&&			
ANR	469973	EqualityExpression	"( pos = zend_hash_find ( & hash , key ) ) != NULL"		467818	0		!=			
ANR	469974	AssignmentExpression	"pos = zend_hash_find ( & hash , key )"		467818	0		=			
ANR	469975	Identifier	pos		467818	0					
ANR	469976	CallExpression	"zend_hash_find ( & hash , key )"		467818	1					
ANR	469977	Callee	zend_hash_find		467818	0					
ANR	469978	Identifier	zend_hash_find		467818	0					
ANR	469979	ArgumentList	& hash		467818	1					
ANR	469980	Argument	& hash		467818	0					
ANR	469981	UnaryOperationExpression	& hash		467818	0					
ANR	469982	UnaryOperator	&		467818	0					
ANR	469983	Identifier	hash		467818	1					
ANR	469984	Argument	key		467818	1					
ANR	469985	Identifier	key		467818	0					
ANR	469986	Identifier	NULL		467818	1					
ANR	469987	AndExpression	Z_TYPE ( op_array -> literals [ i ] ) == Z_TYPE ( op_array -> literals [ Z_LVAL_P ( pos ) ] ) && info [ i ] . flags == info [ Z_LVAL_P ( pos ) ] . flags		467818	1		&&			
ANR	469988	EqualityExpression	Z_TYPE ( op_array -> literals [ i ] ) == Z_TYPE ( op_array -> literals [ Z_LVAL_P ( pos ) ] )		467818	0		==			
ANR	469989	CallExpression	Z_TYPE ( op_array -> literals [ i ] )		467818	0					
ANR	469990	Callee	Z_TYPE		467818	0					
ANR	469991	Identifier	Z_TYPE		467818	0					
ANR	469992	ArgumentList	op_array -> literals [ i ]		467818	1					
ANR	469993	Argument	op_array -> literals [ i ]		467818	0					
ANR	469994	ArrayIndexing	op_array -> literals [ i ]		467818	0					
ANR	469995	PtrMemberAccess	op_array -> literals		467818	0					
ANR	469996	Identifier	op_array		467818	0					
ANR	469997	Identifier	literals		467818	1					
ANR	469998	Identifier	i		467818	1					
ANR	469999	CallExpression	Z_TYPE ( op_array -> literals [ Z_LVAL_P ( pos ) ] )		467818	1					
ANR	470000	Callee	Z_TYPE		467818	0					
ANR	470001	Identifier	Z_TYPE		467818	0					
ANR	470002	ArgumentList	op_array -> literals [ Z_LVAL_P ( pos ) ]		467818	1					
ANR	470003	Argument	op_array -> literals [ Z_LVAL_P ( pos ) ]		467818	0					
ANR	470004	ArrayIndexing	op_array -> literals [ Z_LVAL_P ( pos ) ]		467818	0					
ANR	470005	PtrMemberAccess	op_array -> literals		467818	0					
ANR	470006	Identifier	op_array		467818	0					
ANR	470007	Identifier	literals		467818	1					
ANR	470008	CallExpression	Z_LVAL_P ( pos )		467818	1					
ANR	470009	Callee	Z_LVAL_P		467818	0					
ANR	470010	Identifier	Z_LVAL_P		467818	0					
ANR	470011	ArgumentList	pos		467818	1					
ANR	470012	Argument	pos		467818	0					
ANR	470013	Identifier	pos		467818	0					
ANR	470014	EqualityExpression	info [ i ] . flags == info [ Z_LVAL_P ( pos ) ] . flags		467818	1		==			
ANR	470015	MemberAccess	info [ i ] . flags		467818	0					
ANR	470016	ArrayIndexing	info [ i ]		467818	0					
ANR	470017	Identifier	info		467818	0					
ANR	470018	Identifier	i		467818	1					
ANR	470019	Identifier	flags		467818	1					
ANR	470020	MemberAccess	info [ Z_LVAL_P ( pos ) ] . flags		467818	1					
ANR	470021	ArrayIndexing	info [ Z_LVAL_P ( pos ) ]		467818	0					
ANR	470022	Identifier	info		467818	0					
ANR	470023	CallExpression	Z_LVAL_P ( pos )		467818	1					
ANR	470024	Callee	Z_LVAL_P		467818	0					
ANR	470025	Identifier	Z_LVAL_P		467818	0					
ANR	470026	ArgumentList	pos		467818	1					
ANR	470027	Argument	pos		467818	0					
ANR	470028	Identifier	pos		467818	0					
ANR	470029	Identifier	flags		467818	1					
ANR	470030	CompoundStatement		330:50:10311:10311	467818	1					
ANR	470031	ExpressionStatement	zend_string_release ( key )	449:6:15479:15503	467818	0	True				
ANR	470032	CallExpression	zend_string_release ( key )		467818	0					
ANR	470033	Callee	zend_string_release		467818	0					
ANR	470034	Identifier	zend_string_release		467818	0					
ANR	470035	ArgumentList	key		467818	1					
ANR	470036	Argument	key		467818	0					
ANR	470037	Identifier	key		467818	0					
ANR	470038	ExpressionStatement	map [ i ] = Z_LVAL_P ( pos )	450:6:15511:15533	467818	1	True				
ANR	470039	AssignmentExpression	map [ i ] = Z_LVAL_P ( pos )		467818	0		=			
ANR	470040	ArrayIndexing	map [ i ]		467818	0					
ANR	470041	Identifier	map		467818	0					
ANR	470042	Identifier	i		467818	1					
ANR	470043	CallExpression	Z_LVAL_P ( pos )		467818	1					
ANR	470044	Callee	Z_LVAL_P		467818	0					
ANR	470045	Identifier	Z_LVAL_P		467818	0					
ANR	470046	ArgumentList	pos		467818	1					
ANR	470047	Argument	pos		467818	0					
ANR	470048	Identifier	pos		467818	0					
ANR	470049	ExpressionStatement	zval_dtor ( & op_array -> literals [ i ] )	451:6:15541:15574	467818	2	True				
ANR	470050	CallExpression	zval_dtor ( & op_array -> literals [ i ] )		467818	0					
ANR	470051	Callee	zval_dtor		467818	0					
ANR	470052	Identifier	zval_dtor		467818	0					
ANR	470053	ArgumentList	& op_array -> literals [ i ]		467818	1					
ANR	470054	Argument	& op_array -> literals [ i ]		467818	0					
ANR	470055	UnaryOperationExpression	& op_array -> literals [ i ]		467818	0					
ANR	470056	UnaryOperator	&		467818	0					
ANR	470057	ArrayIndexing	op_array -> literals [ i ]		467818	1					
ANR	470058	PtrMemberAccess	op_array -> literals		467818	0					
ANR	470059	Identifier	op_array		467818	0					
ANR	470060	Identifier	literals		467818	1					
ANR	470061	Identifier	i		467818	1					
ANR	470062	ExpressionStatement	n = LITERAL_NUM_RELATED ( info [ i ] . flags )	452:6:15582:15620	467818	3	True				
ANR	470063	AssignmentExpression	n = LITERAL_NUM_RELATED ( info [ i ] . flags )		467818	0		=			
ANR	470064	Identifier	n		467818	0					
ANR	470065	CallExpression	LITERAL_NUM_RELATED ( info [ i ] . flags )		467818	1					
ANR	470066	Callee	LITERAL_NUM_RELATED		467818	0					
ANR	470067	Identifier	LITERAL_NUM_RELATED		467818	0					
ANR	470068	ArgumentList	info [ i ] . flags		467818	1					
ANR	470069	Argument	info [ i ] . flags		467818	0					
ANR	470070	MemberAccess	info [ i ] . flags		467818	0					
ANR	470071	ArrayIndexing	info [ i ]		467818	0					
ANR	470072	Identifier	info		467818	0					
ANR	470073	Identifier	i		467818	1					
ANR	470074	Identifier	flags		467818	1					
ANR	470075	WhileStatement	while ( n > 1 )		467818	4					
ANR	470076	Condition	n > 1	453:13:15635:15639	467818	0	True				
ANR	470077	RelationalExpression	n > 1		467818	0		>			
ANR	470078	Identifier	n		467818	0					
ANR	470079	PrimaryExpression	1		467818	1					
ANR	470080	CompoundStatement		336:20:10483:10483	467818	1					
ANR	470081	ExpressionStatement	i ++	454:7:15651:15654	467818	0	True				
ANR	470082	PostIncDecOperationExpression	i ++		467818	0					
ANR	470083	Identifier	i		467818	0					
ANR	470084	IncDec	++		467818	1					
ANR	470085	ExpressionStatement	zval_dtor ( & op_array -> literals [ i ] )	455:7:15663:15696	467818	1	True				
ANR	470086	CallExpression	zval_dtor ( & op_array -> literals [ i ] )		467818	0					
ANR	470087	Callee	zval_dtor		467818	0					
ANR	470088	Identifier	zval_dtor		467818	0					
ANR	470089	ArgumentList	& op_array -> literals [ i ]		467818	1					
ANR	470090	Argument	& op_array -> literals [ i ]		467818	0					
ANR	470091	UnaryOperationExpression	& op_array -> literals [ i ]		467818	0					
ANR	470092	UnaryOperator	&		467818	0					
ANR	470093	ArrayIndexing	op_array -> literals [ i ]		467818	1					
ANR	470094	PtrMemberAccess	op_array -> literals		467818	0					
ANR	470095	Identifier	op_array		467818	0					
ANR	470096	Identifier	literals		467818	1					
ANR	470097	Identifier	i		467818	1					
ANR	470098	ExpressionStatement	n --	456:7:15705:15708	467818	2	True				
ANR	470099	PostIncDecOperationExpression	n --		467818	0					
ANR	470100	Identifier	n		467818	0					
ANR	470101	IncDec	--		467818	1					
ANR	470102	ElseStatement	else		467818	0					
ANR	470103	CompoundStatement		341:12:10571:10571	467818	0					
ANR	470104	ExpressionStatement	map [ i ] = j	459:6:15738:15748	467818	0	True				
ANR	470105	AssignmentExpression	map [ i ] = j		467818	0		=			
ANR	470106	ArrayIndexing	map [ i ]		467818	0					
ANR	470107	Identifier	map		467818	0					
ANR	470108	Identifier	i		467818	1					
ANR	470109	Identifier	j		467818	1					
ANR	470110	IfStatement	if ( info [ i ] . flags & LITERAL_MAY_MERGE )		467818	1					
ANR	470111	Condition	info [ i ] . flags & LITERAL_MAY_MERGE	460:10:15760:15792	467818	0	True				
ANR	470112	BitAndExpression	info [ i ] . flags & LITERAL_MAY_MERGE		467818	0		&			
ANR	470113	MemberAccess	info [ i ] . flags		467818	0					
ANR	470114	ArrayIndexing	info [ i ]		467818	0					
ANR	470115	Identifier	info		467818	0					
ANR	470116	Identifier	i		467818	1					
ANR	470117	Identifier	flags		467818	1					
ANR	470118	Identifier	LITERAL_MAY_MERGE		467818	1					
ANR	470119	CompoundStatement		343:45:10636:10636	467818	1					
ANR	470120	ExpressionStatement	"ZVAL_LONG ( & zv , j )"	461:7:15804:15821	467818	0	True				
ANR	470121	CallExpression	"ZVAL_LONG ( & zv , j )"		467818	0					
ANR	470122	Callee	ZVAL_LONG		467818	0					
ANR	470123	Identifier	ZVAL_LONG		467818	0					
ANR	470124	ArgumentList	& zv		467818	1					
ANR	470125	Argument	& zv		467818	0					
ANR	470126	UnaryOperationExpression	& zv		467818	0					
ANR	470127	UnaryOperator	&		467818	0					
ANR	470128	Identifier	zv		467818	1					
ANR	470129	Argument	j		467818	1					
ANR	470130	Identifier	j		467818	0					
ANR	470131	ExpressionStatement	"zend_hash_add_new ( & hash , key , & zv )"	462:7:15830:15864	467818	1	True				
ANR	470132	CallExpression	"zend_hash_add_new ( & hash , key , & zv )"		467818	0					
ANR	470133	Callee	zend_hash_add_new		467818	0					
ANR	470134	Identifier	zend_hash_add_new		467818	0					
ANR	470135	ArgumentList	& hash		467818	1					
ANR	470136	Argument	& hash		467818	0					
ANR	470137	UnaryOperationExpression	& hash		467818	0					
ANR	470138	UnaryOperator	&		467818	0					
ANR	470139	Identifier	hash		467818	1					
ANR	470140	Argument	key		467818	1					
ANR	470141	Identifier	key		467818	0					
ANR	470142	Argument	& zv		467818	2					
ANR	470143	UnaryOperationExpression	& zv		467818	0					
ANR	470144	UnaryOperator	&		467818	0					
ANR	470145	Identifier	zv		467818	1					
ANR	470146	ExpressionStatement	zend_string_release ( key )	463:7:15873:15897	467818	2	True				
ANR	470147	CallExpression	zend_string_release ( key )		467818	0					
ANR	470148	Callee	zend_string_release		467818	0					
ANR	470149	Identifier	zend_string_release		467818	0					
ANR	470150	ArgumentList	key		467818	1					
ANR	470151	Argument	key		467818	0					
ANR	470152	Identifier	key		467818	0					
ANR	470153	IfStatement	if ( i != j )		467818	2					
ANR	470154	Condition	i != j	465:10:15917:15922	467818	0	True				
ANR	470155	EqualityExpression	i != j		467818	0		!=			
ANR	470156	Identifier	i		467818	0					
ANR	470157	Identifier	j		467818	1					
ANR	470158	CompoundStatement		348:18:10766:10766	467818	1					
ANR	470159	ExpressionStatement	op_array -> literals [ j ] = op_array -> literals [ i ]	466:7:15934:15979	467818	0	True				
ANR	470160	AssignmentExpression	op_array -> literals [ j ] = op_array -> literals [ i ]		467818	0		=			
ANR	470161	ArrayIndexing	op_array -> literals [ j ]		467818	0					
ANR	470162	PtrMemberAccess	op_array -> literals		467818	0					
ANR	470163	Identifier	op_array		467818	0					
ANR	470164	Identifier	literals		467818	1					
ANR	470165	Identifier	j		467818	1					
ANR	470166	ArrayIndexing	op_array -> literals [ i ]		467818	1					
ANR	470167	PtrMemberAccess	op_array -> literals		467818	0					
ANR	470168	Identifier	op_array		467818	0					
ANR	470169	Identifier	literals		467818	1					
ANR	470170	Identifier	i		467818	1					
ANR	470171	ExpressionStatement	info [ j ] = info [ i ]	467:7:15988:16005	467818	1	True				
ANR	470172	AssignmentExpression	info [ j ] = info [ i ]		467818	0		=			
ANR	470173	ArrayIndexing	info [ j ]		467818	0					
ANR	470174	Identifier	info		467818	0					
ANR	470175	Identifier	j		467818	1					
ANR	470176	ArrayIndexing	info [ i ]		467818	1					
ANR	470177	Identifier	info		467818	0					
ANR	470178	Identifier	i		467818	1					
ANR	470179	IfStatement	if ( LITERAL_NUM_SLOTS ( info [ i ] . flags ) )		467818	3					
ANR	470180	Condition	LITERAL_NUM_SLOTS ( info [ i ] . flags )	469:10:16025:16056	467818	0	True				
ANR	470181	CallExpression	LITERAL_NUM_SLOTS ( info [ i ] . flags )		467818	0					
ANR	470182	Callee	LITERAL_NUM_SLOTS		467818	0					
ANR	470183	Identifier	LITERAL_NUM_SLOTS		467818	0					
ANR	470184	ArgumentList	info [ i ] . flags		467818	1					
ANR	470185	Argument	info [ i ] . flags		467818	0					
ANR	470186	MemberAccess	info [ i ] . flags		467818	0					
ANR	470187	ArrayIndexing	info [ i ]		467818	0					
ANR	470188	Identifier	info		467818	0					
ANR	470189	Identifier	i		467818	1					
ANR	470190	Identifier	flags		467818	1					
ANR	470191	CompoundStatement		352:44:10900:10900	467818	1					
ANR	470192	ExpressionStatement	Z_CACHE_SLOT ( op_array -> literals [ j ] ) = cache_size	470:7:16068:16116	467818	0	True				
ANR	470193	AssignmentExpression	Z_CACHE_SLOT ( op_array -> literals [ j ] ) = cache_size		467818	0		=			
ANR	470194	CallExpression	Z_CACHE_SLOT ( op_array -> literals [ j ] )		467818	0					
ANR	470195	Callee	Z_CACHE_SLOT		467818	0					
ANR	470196	Identifier	Z_CACHE_SLOT		467818	0					
ANR	470197	ArgumentList	op_array -> literals [ j ]		467818	1					
ANR	470198	Argument	op_array -> literals [ j ]		467818	0					
ANR	470199	ArrayIndexing	op_array -> literals [ j ]		467818	0					
ANR	470200	PtrMemberAccess	op_array -> literals		467818	0					
ANR	470201	Identifier	op_array		467818	0					
ANR	470202	Identifier	literals		467818	1					
ANR	470203	Identifier	j		467818	1					
ANR	470204	Identifier	cache_size		467818	1					
ANR	470205	ExpressionStatement	cache_size += LITERAL_NUM_SLOTS ( info [ i ] . flags ) * sizeof ( void * )	471:7:16125:16187	467818	1	True				
ANR	470206	AssignmentExpression	cache_size += LITERAL_NUM_SLOTS ( info [ i ] . flags ) * sizeof ( void * )		467818	0		+=			
ANR	470207	Identifier	cache_size		467818	0					
ANR	470208	MultiplicativeExpression	LITERAL_NUM_SLOTS ( info [ i ] . flags ) * sizeof ( void * )		467818	1		*			
ANR	470209	CallExpression	LITERAL_NUM_SLOTS ( info [ i ] . flags )		467818	0					
ANR	470210	Callee	LITERAL_NUM_SLOTS		467818	0					
ANR	470211	Identifier	LITERAL_NUM_SLOTS		467818	0					
ANR	470212	ArgumentList	info [ i ] . flags		467818	1					
ANR	470213	Argument	info [ i ] . flags		467818	0					
ANR	470214	MemberAccess	info [ i ] . flags		467818	0					
ANR	470215	ArrayIndexing	info [ i ]		467818	0					
ANR	470216	Identifier	info		467818	0					
ANR	470217	Identifier	i		467818	1					
ANR	470218	Identifier	flags		467818	1					
ANR	470219	SizeofExpression	sizeof ( void * )		467818	1					
ANR	470220	Sizeof	sizeof		467818	0					
ANR	470221	SizeofOperand	void *		467818	1					
ANR	470222	ExpressionStatement	j ++	473:6:16203:16206	467818	4	True				
ANR	470223	PostIncDecOperationExpression	j ++		467818	0					
ANR	470224	Identifier	j		467818	0					
ANR	470225	IncDec	++		467818	1					
ANR	470226	ExpressionStatement	n = LITERAL_NUM_RELATED ( info [ i ] . flags )	474:6:16214:16252	467818	5	True				
ANR	470227	AssignmentExpression	n = LITERAL_NUM_RELATED ( info [ i ] . flags )		467818	0		=			
ANR	470228	Identifier	n		467818	0					
ANR	470229	CallExpression	LITERAL_NUM_RELATED ( info [ i ] . flags )		467818	1					
ANR	470230	Callee	LITERAL_NUM_RELATED		467818	0					
ANR	470231	Identifier	LITERAL_NUM_RELATED		467818	0					
ANR	470232	ArgumentList	info [ i ] . flags		467818	1					
ANR	470233	Argument	info [ i ] . flags		467818	0					
ANR	470234	MemberAccess	info [ i ] . flags		467818	0					
ANR	470235	ArrayIndexing	info [ i ]		467818	0					
ANR	470236	Identifier	info		467818	0					
ANR	470237	Identifier	i		467818	1					
ANR	470238	Identifier	flags		467818	1					
ANR	470239	WhileStatement	while ( n > 1 )		467818	6					
ANR	470240	Condition	n > 1	475:13:16267:16271	467818	0	True				
ANR	470241	RelationalExpression	n > 1		467818	0		>			
ANR	470242	Identifier	n		467818	0					
ANR	470243	PrimaryExpression	1		467818	1					
ANR	470244	CompoundStatement		358:20:11115:11115	467818	1					
ANR	470245	ExpressionStatement	i ++	476:7:16283:16286	467818	0	True				
ANR	470246	PostIncDecOperationExpression	i ++		467818	0					
ANR	470247	Identifier	i		467818	0					
ANR	470248	IncDec	++		467818	1					
ANR	470249	IfStatement	if ( i != j )		467818	1					
ANR	470250	Condition	i != j	477:11:16299:16304	467818	0	True				
ANR	470251	EqualityExpression	i != j		467818	0		!=			
ANR	470252	Identifier	i		467818	0					
ANR	470253	Identifier	j		467818	1					
ANR	470254	ExpressionStatement	op_array -> literals [ j ] = op_array -> literals [ i ]	477:19:16307:16352	467818	1	True				
ANR	470255	AssignmentExpression	op_array -> literals [ j ] = op_array -> literals [ i ]		467818	0		=			
ANR	470256	ArrayIndexing	op_array -> literals [ j ]		467818	0					
ANR	470257	PtrMemberAccess	op_array -> literals		467818	0					
ANR	470258	Identifier	op_array		467818	0					
ANR	470259	Identifier	literals		467818	1					
ANR	470260	Identifier	j		467818	1					
ANR	470261	ArrayIndexing	op_array -> literals [ i ]		467818	1					
ANR	470262	PtrMemberAccess	op_array -> literals		467818	0					
ANR	470263	Identifier	op_array		467818	0					
ANR	470264	Identifier	literals		467818	1					
ANR	470265	Identifier	i		467818	1					
ANR	470266	ExpressionStatement	j ++	478:7:16361:16364	467818	2	True				
ANR	470267	PostIncDecOperationExpression	j ++		467818	0					
ANR	470268	Identifier	j		467818	0					
ANR	470269	IncDec	++		467818	1					
ANR	470270	ExpressionStatement	n --	479:7:16373:16376	467818	3	True				
ANR	470271	PostIncDecOperationExpression	n --		467818	0					
ANR	470272	Identifier	n		467818	0					
ANR	470273	IncDec	--		467818	1					
ANR	470274	BreakStatement	break ;	482:5:16398:16403	467818	21	True				
ANR	470275	Label	default :	483:4:16409:16416	467818	22	True				
ANR	470276	Identifier	default		467818	0					
ANR	470277	ExpressionStatement	map [ i ] = j	485:5:16458:16468	467818	23	True				
ANR	470278	AssignmentExpression	map [ i ] = j		467818	0		=			
ANR	470279	ArrayIndexing	map [ i ]		467818	0					
ANR	470280	Identifier	map		467818	0					
ANR	470281	Identifier	i		467818	1					
ANR	470282	Identifier	j		467818	1					
ANR	470283	IfStatement	if ( i != j )		467818	24					
ANR	470284	Condition	i != j	486:9:16479:16484	467818	0	True				
ANR	470285	EqualityExpression	i != j		467818	0		!=			
ANR	470286	Identifier	i		467818	0					
ANR	470287	Identifier	j		467818	1					
ANR	470288	CompoundStatement		369:17:11328:11328	467818	1					
ANR	470289	ExpressionStatement	op_array -> literals [ j ] = op_array -> literals [ i ]	487:6:16495:16540	467818	0	True				
ANR	470290	AssignmentExpression	op_array -> literals [ j ] = op_array -> literals [ i ]		467818	0		=			
ANR	470291	ArrayIndexing	op_array -> literals [ j ]		467818	0					
ANR	470292	PtrMemberAccess	op_array -> literals		467818	0					
ANR	470293	Identifier	op_array		467818	0					
ANR	470294	Identifier	literals		467818	1					
ANR	470295	Identifier	j		467818	1					
ANR	470296	ArrayIndexing	op_array -> literals [ i ]		467818	1					
ANR	470297	PtrMemberAccess	op_array -> literals		467818	0					
ANR	470298	Identifier	op_array		467818	0					
ANR	470299	Identifier	literals		467818	1					
ANR	470300	Identifier	i		467818	1					
ANR	470301	ExpressionStatement	info [ j ] = info [ i ]	488:6:16548:16565	467818	1	True				
ANR	470302	AssignmentExpression	info [ j ] = info [ i ]		467818	0		=			
ANR	470303	ArrayIndexing	info [ j ]		467818	0					
ANR	470304	Identifier	info		467818	0					
ANR	470305	Identifier	j		467818	1					
ANR	470306	ArrayIndexing	info [ i ]		467818	1					
ANR	470307	Identifier	info		467818	0					
ANR	470308	Identifier	i		467818	1					
ANR	470309	ExpressionStatement	j ++	490:5:16579:16582	467818	25	True				
ANR	470310	PostIncDecOperationExpression	j ++		467818	0					
ANR	470311	Identifier	j		467818	0					
ANR	470312	IncDec	++		467818	1					
ANR	470313	BreakStatement	break ;	491:5:16589:16594	467818	26	True				
ANR	470314	ExpressionStatement	zend_hash_destroy ( & hash )	494:2:16607:16631	467818	11	True				
ANR	470315	CallExpression	zend_hash_destroy ( & hash )		467818	0					
ANR	470316	Callee	zend_hash_destroy		467818	0					
ANR	470317	Identifier	zend_hash_destroy		467818	0					
ANR	470318	ArgumentList	& hash		467818	1					
ANR	470319	Argument	& hash		467818	0					
ANR	470320	UnaryOperationExpression	& hash		467818	0					
ANR	470321	UnaryOperator	&		467818	0					
ANR	470322	Identifier	hash		467818	1					
ANR	470323	ExpressionStatement	op_array -> last_literal = j	495:2:16635:16661	467818	12	True				
ANR	470324	AssignmentExpression	op_array -> last_literal = j		467818	0		=			
ANR	470325	PtrMemberAccess	op_array -> last_literal		467818	0					
ANR	470326	Identifier	op_array		467818	0					
ANR	470327	Identifier	last_literal		467818	1					
ANR	470328	Identifier	j		467818	1					
ANR	470329	ExpressionStatement	op_array -> cache_size = cache_size	496:2:16665:16698	467818	13	True				
ANR	470330	AssignmentExpression	op_array -> cache_size = cache_size		467818	0		=			
ANR	470331	PtrMemberAccess	op_array -> cache_size		467818	0					
ANR	470332	Identifier	op_array		467818	0					
ANR	470333	Identifier	cache_size		467818	1					
ANR	470334	Identifier	cache_size		467818	1					
ANR	470335	ExpressionStatement	opline = op_array -> opcodes	499:2:16755:16781	467818	14	True				
ANR	470336	AssignmentExpression	opline = op_array -> opcodes		467818	0		=			
ANR	470337	Identifier	opline		467818	0					
ANR	470338	PtrMemberAccess	op_array -> opcodes		467818	1					
ANR	470339	Identifier	op_array		467818	0					
ANR	470340	Identifier	opcodes		467818	1					
ANR	470341	ExpressionStatement	end = opline + op_array -> last	500:2:16785:16814	467818	15	True				
ANR	470342	AssignmentExpression	end = opline + op_array -> last		467818	0		=			
ANR	470343	Identifier	end		467818	0					
ANR	470344	AdditiveExpression	opline + op_array -> last		467818	1		+			
ANR	470345	Identifier	opline		467818	0					
ANR	470346	PtrMemberAccess	op_array -> last		467818	1					
ANR	470347	Identifier	op_array		467818	0					
ANR	470348	Identifier	last		467818	1					
ANR	470349	WhileStatement	while ( opline < end )		467818	16					
ANR	470350	Condition	opline < end	501:9:16825:16836	467818	0	True				
ANR	470351	RelationalExpression	opline < end		467818	0		<			
ANR	470352	Identifier	opline		467818	0					
ANR	470353	Identifier	end		467818	1					
ANR	470354	CompoundStatement		384:23:11680:11680	467818	1					
ANR	470355	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_CONST )		467818	0					
ANR	470356	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST	502:7:16848:16880	467818	0	True				
ANR	470357	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		467818	0		==			
ANR	470358	CallExpression	ZEND_OP1_TYPE ( opline )		467818	0					
ANR	470359	Callee	ZEND_OP1_TYPE		467818	0					
ANR	470360	Identifier	ZEND_OP1_TYPE		467818	0					
ANR	470361	ArgumentList	opline		467818	1					
ANR	470362	Argument	opline		467818	0					
ANR	470363	Identifier	opline		467818	0					
ANR	470364	Identifier	IS_CONST		467818	1					
ANR	470365	CompoundStatement		385:42:11724:11724	467818	1					
ANR	470366	ExpressionStatement	opline -> op1 . constant = map [ opline -> op1 . constant ]	503:4:16889:16937	467818	0	True				
ANR	470367	AssignmentExpression	opline -> op1 . constant = map [ opline -> op1 . constant ]		467818	0		=			
ANR	470368	MemberAccess	opline -> op1 . constant		467818	0					
ANR	470369	PtrMemberAccess	opline -> op1		467818	0					
ANR	470370	Identifier	opline		467818	0					
ANR	470371	Identifier	op1		467818	1					
ANR	470372	Identifier	constant		467818	1					
ANR	470373	ArrayIndexing	map [ opline -> op1 . constant ]		467818	1					
ANR	470374	Identifier	map		467818	0					
ANR	470375	MemberAccess	opline -> op1 . constant		467818	1					
ANR	470376	PtrMemberAccess	opline -> op1		467818	0					
ANR	470377	Identifier	opline		467818	0					
ANR	470378	Identifier	op1		467818	1					
ANR	470379	Identifier	constant		467818	1					
ANR	470380	IfStatement	if ( ZEND_OP2_TYPE ( opline ) == IS_CONST )		467818	1					
ANR	470381	Condition	ZEND_OP2_TYPE ( opline ) == IS_CONST	505:7:16951:16983	467818	0	True				
ANR	470382	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST		467818	0		==			
ANR	470383	CallExpression	ZEND_OP2_TYPE ( opline )		467818	0					
ANR	470384	Callee	ZEND_OP2_TYPE		467818	0					
ANR	470385	Identifier	ZEND_OP2_TYPE		467818	0					
ANR	470386	ArgumentList	opline		467818	1					
ANR	470387	Argument	opline		467818	0					
ANR	470388	Identifier	opline		467818	0					
ANR	470389	Identifier	IS_CONST		467818	1					
ANR	470390	CompoundStatement		388:42:11827:11827	467818	1					
ANR	470391	ExpressionStatement	opline -> op2 . constant = map [ opline -> op2 . constant ]	506:4:16992:17040	467818	0	True				
ANR	470392	AssignmentExpression	opline -> op2 . constant = map [ opline -> op2 . constant ]		467818	0		=			
ANR	470393	MemberAccess	opline -> op2 . constant		467818	0					
ANR	470394	PtrMemberAccess	opline -> op2		467818	0					
ANR	470395	Identifier	opline		467818	0					
ANR	470396	Identifier	op2		467818	1					
ANR	470397	Identifier	constant		467818	1					
ANR	470398	ArrayIndexing	map [ opline -> op2 . constant ]		467818	1					
ANR	470399	Identifier	map		467818	0					
ANR	470400	MemberAccess	opline -> op2 . constant		467818	1					
ANR	470401	PtrMemberAccess	opline -> op2		467818	0					
ANR	470402	Identifier	opline		467818	0					
ANR	470403	Identifier	op2		467818	1					
ANR	470404	Identifier	constant		467818	1					
ANR	470405	ExpressionStatement	opline ++	508:3:17050:17058	467818	2	True				
ANR	470406	PostIncDecOperationExpression	opline ++		467818	0					
ANR	470407	Identifier	opline		467818	0					
ANR	470408	IncDec	++		467818	1					
ANR	470409	ExpressionStatement	"zend_arena_release ( & ctx -> arena , checkpoint )"	510:2:17066:17109	467818	17	True				
ANR	470410	CallExpression	"zend_arena_release ( & ctx -> arena , checkpoint )"		467818	0					
ANR	470411	Callee	zend_arena_release		467818	0					
ANR	470412	Identifier	zend_arena_release		467818	0					
ANR	470413	ArgumentList	& ctx -> arena		467818	1					
ANR	470414	Argument	& ctx -> arena		467818	0					
ANR	470415	UnaryOperationExpression	& ctx -> arena		467818	0					
ANR	470416	UnaryOperator	&		467818	0					
ANR	470417	PtrMemberAccess	ctx -> arena		467818	1					
ANR	470418	Identifier	ctx		467818	0					
ANR	470419	Identifier	arena		467818	1					
ANR	470420	Argument	checkpoint		467818	1					
ANR	470421	Identifier	checkpoint		467818	0					
ANR	470422	CompoundStatement		397:3:11987:12002	467818	18					
ANR	470423	IdentifierDeclStatement	"int i , use_copy ;"	514:3:17146:17161	467818	0	True				
ANR	470424	IdentifierDecl	i		467818	0					
ANR	470425	IdentifierDeclType	int		467818	0					
ANR	470426	Identifier	i		467818	1					
ANR	470427	IdentifierDecl	use_copy		467818	1					
ANR	470428	IdentifierDeclType	int		467818	0					
ANR	470429	Identifier	use_copy		467818	1					
ANR	470430	ExpressionStatement	"fprintf ( stderr , ""Optimized literlas table size %d\\n"" , op_array -> last_literal )"	515:3:17166:17243	467818	1	True				
ANR	470431	CallExpression	"fprintf ( stderr , ""Optimized literlas table size %d\\n"" , op_array -> last_literal )"		467818	0					
ANR	470432	Callee	fprintf		467818	0					
ANR	470433	Identifier	fprintf		467818	0					
ANR	470434	ArgumentList	stderr		467818	1					
ANR	470435	Argument	stderr		467818	0					
ANR	470436	Identifier	stderr		467818	0					
ANR	470437	Argument	"""Optimized literlas table size %d\\n"""		467818	1					
ANR	470438	PrimaryExpression	"""Optimized literlas table size %d\\n"""		467818	0					
ANR	470439	Argument	op_array -> last_literal		467818	2					
ANR	470440	PtrMemberAccess	op_array -> last_literal		467818	0					
ANR	470441	Identifier	op_array		467818	0					
ANR	470442	Identifier	last_literal		467818	1					
ANR	470443	ForStatement	for ( i = 0 ; i < op_array -> last_literal ; i ++ )		467818	2					
ANR	470444	ForInit	i = 0 ;	517:8:17254:17259	467818	0	True				
ANR	470445	AssignmentExpression	i = 0		467818	0		=			
ANR	470446	Identifier	i		467818	0					
ANR	470447	PrimaryExpression	0		467818	1					
ANR	470448	Condition	i < op_array -> last_literal	517:15:17261:17286	467818	1	True				
ANR	470449	RelationalExpression	i < op_array -> last_literal		467818	0		<			
ANR	470450	Identifier	i		467818	0					
ANR	470451	PtrMemberAccess	op_array -> last_literal		467818	1					
ANR	470452	Identifier	op_array		467818	0					
ANR	470453	Identifier	last_literal		467818	1					
ANR	470454	PostIncDecOperationExpression	i ++	517:43:17289:17291	467818	2	True				
ANR	470455	Identifier	i		467818	0					
ANR	470456	IncDec	++		467818	1					
ANR	470457	CompoundStatement		401:4:12141:12148	467818	3					
ANR	470458	IdentifierDeclStatement	zval zv ;	518:4:17300:17307	467818	0	True				
ANR	470459	IdentifierDecl	zv		467818	0					
ANR	470460	IdentifierDeclType	zval		467818	0					
ANR	470461	Identifier	zv		467818	1					
ANR	470462	ExpressionStatement	"ZVAL_COPY_VALUE ( & zv , op_array -> literals + i )"	519:4:17313:17357	467818	1	True				
ANR	470463	CallExpression	"ZVAL_COPY_VALUE ( & zv , op_array -> literals + i )"		467818	0					
ANR	470464	Callee	ZVAL_COPY_VALUE		467818	0					
ANR	470465	Identifier	ZVAL_COPY_VALUE		467818	0					
ANR	470466	ArgumentList	& zv		467818	1					
ANR	470467	Argument	& zv		467818	0					
ANR	470468	UnaryOperationExpression	& zv		467818	0					
ANR	470469	UnaryOperator	&		467818	0					
ANR	470470	Identifier	zv		467818	1					
ANR	470471	Argument	op_array -> literals + i		467818	1					
ANR	470472	AdditiveExpression	op_array -> literals + i		467818	0		+			
ANR	470473	PtrMemberAccess	op_array -> literals		467818	0					
ANR	470474	Identifier	op_array		467818	0					
ANR	470475	Identifier	literals		467818	1					
ANR	470476	Identifier	i		467818	1					
ANR	470477	ExpressionStatement	"use_copy = zend_make_printable_zval ( op_array -> literals + i , & zv )"	520:4:17363:17427	467818	2	True				
ANR	470478	AssignmentExpression	"use_copy = zend_make_printable_zval ( op_array -> literals + i , & zv )"		467818	0		=			
ANR	470479	Identifier	use_copy		467818	0					
ANR	470480	CallExpression	"zend_make_printable_zval ( op_array -> literals + i , & zv )"		467818	1					
ANR	470481	Callee	zend_make_printable_zval		467818	0					
ANR	470482	Identifier	zend_make_printable_zval		467818	0					
ANR	470483	ArgumentList	op_array -> literals + i		467818	1					
ANR	470484	Argument	op_array -> literals + i		467818	0					
ANR	470485	AdditiveExpression	op_array -> literals + i		467818	0		+			
ANR	470486	PtrMemberAccess	op_array -> literals		467818	0					
ANR	470487	Identifier	op_array		467818	0					
ANR	470488	Identifier	literals		467818	1					
ANR	470489	Identifier	i		467818	1					
ANR	470490	Argument	& zv		467818	1					
ANR	470491	UnaryOperationExpression	& zv		467818	0					
ANR	470492	UnaryOperator	&		467818	0					
ANR	470493	Identifier	zv		467818	1					
ANR	470494	ExpressionStatement	"fprintf ( stderr , ""Literal %d, val (%d):%s\\n"" , i , Z_STRLEN ( zv ) , Z_STRVAL ( zv ) )"	521:4:17433:17508	467818	3	True				
ANR	470495	CallExpression	"fprintf ( stderr , ""Literal %d, val (%d):%s\\n"" , i , Z_STRLEN ( zv ) , Z_STRVAL ( zv ) )"		467818	0					
ANR	470496	Callee	fprintf		467818	0					
ANR	470497	Identifier	fprintf		467818	0					
ANR	470498	ArgumentList	stderr		467818	1					
ANR	470499	Argument	stderr		467818	0					
ANR	470500	Identifier	stderr		467818	0					
ANR	470501	Argument	"""Literal %d, val (%d):%s\\n"""		467818	1					
ANR	470502	PrimaryExpression	"""Literal %d, val (%d):%s\\n"""		467818	0					
ANR	470503	Argument	i		467818	2					
ANR	470504	Identifier	i		467818	0					
ANR	470505	Argument	Z_STRLEN ( zv )		467818	3					
ANR	470506	CallExpression	Z_STRLEN ( zv )		467818	0					
ANR	470507	Callee	Z_STRLEN		467818	0					
ANR	470508	Identifier	Z_STRLEN		467818	0					
ANR	470509	ArgumentList	zv		467818	1					
ANR	470510	Argument	zv		467818	0					
ANR	470511	Identifier	zv		467818	0					
ANR	470512	Argument	Z_STRVAL ( zv )		467818	4					
ANR	470513	CallExpression	Z_STRVAL ( zv )		467818	0					
ANR	470514	Callee	Z_STRVAL		467818	0					
ANR	470515	Identifier	Z_STRVAL		467818	0					
ANR	470516	ArgumentList	zv		467818	1					
ANR	470517	Argument	zv		467818	0					
ANR	470518	Identifier	zv		467818	0					
ANR	470519	IfStatement	if ( use_copy )		467818	4					
ANR	470520	Condition	use_copy	522:8:17518:17525	467818	0	True				
ANR	470521	Identifier	use_copy		467818	0					
ANR	470522	CompoundStatement		405:18:12369:12369	467818	1					
ANR	470523	ExpressionStatement	zval_dtor ( & zv )	523:5:17535:17549	467818	0	True				
ANR	470524	CallExpression	zval_dtor ( & zv )		467818	0					
ANR	470525	Callee	zval_dtor		467818	0					
ANR	470526	Identifier	zval_dtor		467818	0					
ANR	470527	ArgumentList	& zv		467818	1					
ANR	470528	Argument	& zv		467818	0					
ANR	470529	UnaryOperationExpression	& zv		467818	0					
ANR	470530	UnaryOperator	&		467818	0					
ANR	470531	Identifier	zv		467818	1					
ANR	470532	ExpressionStatement	fflush ( stderr )	526:3:17565:17579	467818	3	True				
ANR	470533	CallExpression	fflush ( stderr )		467818	0					
ANR	470534	Callee	fflush		467818	0					
ANR	470535	Identifier	fflush		467818	0					
ANR	470536	ArgumentList	stderr		467818	1					
ANR	470537	Argument	stderr		467818	0					
ANR	470538	Identifier	stderr		467818	0					
ANR	470539	ReturnType	void		467818	1					
ANR	470540	Identifier	zend_optimizer_compact_literals		467818	2					
ANR	470541	ParameterList	"zend_op_array * op_array , zend_optimizer_ctx * ctx"		467818	3					
ANR	470542	Parameter	zend_op_array * op_array	117:37:5108:5130	467818	0	True				
ANR	470543	ParameterType	zend_op_array *		467818	0					
ANR	470544	Identifier	op_array		467818	1					
ANR	470545	Parameter	zend_optimizer_ctx * ctx	117:62:5133:5155	467818	1	True				
ANR	470546	ParameterType	zend_optimizer_ctx *		467818	0					
ANR	470547	Identifier	ctx		467818	1					
ANR	470548	CFGEntryNode	ENTRY		467818		True				
ANR	470549	CFGExitNode	EXIT		467818		True				
ANR	470550	Symbol	& hash		467818						
ANR	470551	Symbol	* map		467818						
ANR	470552	Symbol	Z_LVAL		467818						
ANR	470553	Symbol	Z_TYPE		467818						
ANR	470554	Symbol	zend_hash_func		467818						
ANR	470555	Symbol	* op_array -> function_name		467818						
ANR	470556	Symbol	ZEND_OP2_TYPE		467818						
ANR	470557	Symbol	LITERAL_PROPERTY		467818						
ANR	470558	Symbol	zend_string_init		467818						
ANR	470559	Symbol	zend_hash_find		467818						
ANR	470560	Symbol	* opline -> op2		467818						
ANR	470561	Symbol	IS_CONSTANT_UNQUALIFIED		467818						
ANR	470562	Symbol	* opline -> op1		467818						
ANR	470563	Symbol	op_array -> last_literal		467818						
ANR	470564	Symbol	& Z_DVAL		467818						
ANR	470565	Symbol	IS_CONST		467818						
ANR	470566	Symbol	cache_size		467818						
ANR	470567	Symbol	LITERAL_NUM_RELATED		467818						
ANR	470568	Symbol	ctx		467818						
ANR	470569	Symbol	* info [ i ] . u		467818						
ANR	470570	Symbol	* op_array		467818						
ANR	470571	Symbol	use_copy		467818						
ANR	470572	Symbol	LITERAL_METHOD		467818						
ANR	470573	Symbol	zv		467818						
ANR	470574	Symbol	* * op_array		467818						
ANR	470575	Symbol	l_true		467818						
ANR	470576	Symbol	hash		467818						
ANR	470577	Symbol	* Z_LVAL_P		467818						
ANR	470578	Symbol	zend_make_printable_zval		467818						
ANR	470579	Symbol	LITERAL_STATIC_PROPERTY		467818						
ANR	470580	Symbol	* opline -> op1 . constant		467818						
ANR	470581	Symbol	zend_hash_str_find		467818						
ANR	470582	Symbol	LITERAL_FUNC		467818						
ANR	470583	Symbol	LITERAL_CONST		467818						
ANR	470584	Symbol	pos		467818						
ANR	470585	Symbol	opline -> op1 . constant		467818						
ANR	470586	Symbol	Z_STRLEN_P		467818						
ANR	470587	Symbol	* * opline		467818						
ANR	470588	Symbol	map		467818						
ANR	470589	Symbol	* opline -> op2 . constant		467818						
ANR	470590	Symbol	class_name		467818						
ANR	470591	Symbol	key		467818						
ANR	470592	Symbol	key_len		467818						
ANR	470593	Symbol	ZEND_ASSIGN_OBJ		467818						
ANR	470594	Symbol	& zv		467818						
ANR	470595	Symbol	i		467818						
ANR	470596	Symbol	j		467818						
ANR	470597	Symbol	LITERAL_CLASS		467818						
ANR	470598	Symbol	LITERAL_VALUE		467818						
ANR	470599	Symbol	n		467818						
ANR	470600	Symbol	* ctx		467818						
ANR	470601	Symbol	Z_LVAL_P		467818						
ANR	470602	Symbol	& ctx -> arena		467818						
ANR	470603	Symbol	* opline		467818						
ANR	470604	Symbol	opline -> op2 . constant		467818						
ANR	470605	Symbol	info [ i ] . flags		467818						
ANR	470606	Symbol	Z_CACHE_SLOT		467818						
ANR	470607	Symbol	opline -> op2_type		467818						
ANR	470608	Symbol	* info		467818						
ANR	470609	Symbol	ctx -> arena		467818						
ANR	470610	Symbol	* op_array -> filename		467818						
ANR	470611	Symbol	op_array		467818						
ANR	470612	Symbol	checkpoint		467818						
ANR	470613	Symbol	zend_arena_calloc		467818						
ANR	470614	Symbol	info [ i ] . u		467818						
ANR	470615	Symbol	opline -> extended_value		467818						
ANR	470616	Symbol	* op_array -> literals		467818						
ANR	470617	Symbol	opline		467818						
ANR	470618	Symbol	l_false		467818						
ANR	470619	Symbol	LITERAL_EX_CLASS		467818						
ANR	470620	Symbol	LITERAL_GLOBAL		467818						
ANR	470621	Symbol	info		467818						
ANR	470622	Symbol	zend_hash_index_find		467818						
ANR	470623	Symbol	zend_string_alloc		467818						
ANR	470624	Symbol	* * i		467818						
ANR	470625	Symbol	NULL		467818						
ANR	470626	Symbol	zend_arena_alloc		467818						
ANR	470627	Symbol	LITERAL_MAY_MERGE		467818						
ANR	470628	Symbol	IS_CONSTANT_IN_NAMESPACE		467818						
ANR	470629	Symbol	LITERAL_CLASS_CONST		467818						
ANR	470630	Symbol	stderr		467818						
ANR	470631	Symbol	opline -> op1_type		467818						
ANR	470632	Symbol	op_array -> last		467818						
ANR	470633	Symbol	op_array -> literals		467818						
ANR	470634	Symbol	op_array -> cache_size		467818						
ANR	470635	Symbol	op_array -> filename		467818						
ANR	470636	Symbol	opline -> op1		467818						
ANR	470637	Symbol	opline -> op2		467818						
ANR	470638	Symbol	* * info		467818						
ANR	470639	Symbol	l_null		467818						
ANR	470640	Symbol	op_array -> filename -> val		467818						
ANR	470641	Symbol	* info [ i ] . u . num		467818						
ANR	470642	Symbol	Z_STRLEN		467818						
ANR	470643	Symbol	ZSTR_H		467818						
ANR	470644	Symbol	op_array -> opcodes		467818						
ANR	470645	Symbol	Z_STRVAL		467818						
ANR	470646	Symbol	end		467818						
ANR	470647	Symbol	op_array -> function_name -> val		467818						
ANR	470648	Symbol	snprintf		467818						
ANR	470649	Symbol	opline -> op2 . num		467818						
ANR	470650	Symbol	info [ i ] . u . num		467818						
ANR	470651	Symbol	zend_arena_checkpoint		467818						
ANR	470652	Symbol	MAX_LENGTH_OF_LONG		467818						
ANR	470653	Symbol	Z_STRVAL_P		467818						
ANR	470654	Symbol	LITERAL_EX_OBJ		467818						
ANR	470655	Symbol	op_array -> function_name		467818						
ANR	470656	Symbol	ZSTR_VAL		467818						
ANR	470657	Symbol	info [ Z_LVAL_P ( pos ) ] . flags		467818						
ANR	470658	Symbol	ZEND_OP1_TYPE		467818						
ANR	470659	Symbol	* i		467818						
ANR	470660	Symbol	* j		467818						
ANR	470661	Symbol	LITERAL_STATIC_METHOD		467818						
ANR	470662	Symbol	opline -> opcode		467818						
ANR	470663	Symbol	ZSTR_LEN		467818						
ANR	470664	Symbol	LITERAL_NUM_SLOTS		467818						
ANR	470665	Symbol	IS_UNUSED		467818						
