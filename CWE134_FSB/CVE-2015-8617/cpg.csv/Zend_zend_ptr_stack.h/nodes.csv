command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	338915	File	data/converged/CVE-2015-8617_php-src/Zend_zend_ptr_stack.h								
ANR	338916	ClassDef	_zend_ptr_stack	25:8:1294:1412							
ANR	338917	DeclStmt									
ANR	338918	Decl							int	int	top
ANR	338919	Decl							int	int	max
ANR	338920	DeclStmt									
ANR	338921	Decl							void	void * *	elements
ANR	338922	DeclStmt									
ANR	338923	Decl							void	void * *	top_element
ANR	338924	DeclStmt									
ANR	338925	Decl							zend_bool	zend_bool	persistent
ANR	338926	DeclStmt									
ANR	338927	Decl							_zend_ptr_stack	_zend_ptr_stack	zend_ptr_stack
ANR	338928	DeclStmt									
ANR	338929	Decl							ZEND_API void	ZEND_API void ( zend_ptr_stack * stack )	zend_ptr_stack_init
ANR	338930	DeclStmt									
ANR	338931	Decl							ZEND_API void	"ZEND_API void ( zend_ptr_stack * stack , zend_bool persistent )"	zend_ptr_stack_init_ex
ANR	338932	DeclStmt									
ANR	338933	Decl							ZEND_API void	ZEND_API void ( zend_ptr_stack * stack )	zend_ptr_stack_destroy
ANR	338934	DeclStmt									
ANR	338935	Decl							ZEND_API void	"ZEND_API void ( zend_ptr_stack * stack , void ( * func ) ( void * ) )"	zend_ptr_stack_apply
ANR	338936	DeclStmt									
ANR	338937	Decl							ZEND_API void	"ZEND_API void ( zend_ptr_stack * stack , void ( * func ) ( void * ) , zend_bool free_elements )"	zend_ptr_stack_clean
ANR	338938	DeclStmt									
ANR	338939	Decl							ZEND_API int	ZEND_API int ( zend_ptr_stack * stack )	zend_ptr_stack_num_elements
ANR	338940	Function	zend_ptr_stack_3_push	58:0:2664:3032							
ANR	338941	FunctionDef	"zend_ptr_stack_3_push (zend_ptr_stack * stack , void * a , void * b , void * c)"		338940	0					
ANR	338942	CompoundStatement		59:0:2767:3032	338940	0					
ANR	338943	Statement	define	60:1:2770:2775	338940	0	True				
ANR	338944	Statement	ZEND_PTR_STACK_NUM_ARGS	60:8:2777:2799	338940	1	True				
ANR	338945	Statement	3	60:32:2801:2801	338940	2	True				
ANR	338946	Statement	ZEND_PTR_STACK_RESIZE_IF_NEEDED	62:1:2805:2835	338940	3	True				
ANR	338947	Statement	(	62:32:2836:2836	338940	4	True				
ANR	338948	Statement	stack	62:33:2837:2841	338940	5	True				
ANR	338949	Statement	","	62:38:2842:2842	338940	6	True				
ANR	338950	Statement	ZEND_PTR_STACK_NUM_ARGS	62:40:2844:2866	338940	7	True				
ANR	338951	Statement	)	62:63:2867:2867	338940	8	True				
ANR	338952	ExpressionStatement	stack -> top += ZEND_PTR_STACK_NUM_ARGS	64:1:2871:2908	338940	9	True				
ANR	338953	AssignmentExpression	stack -> top += ZEND_PTR_STACK_NUM_ARGS		338940	0		+=			
ANR	338954	PtrMemberAccess	stack -> top		338940	0					
ANR	338955	Identifier	stack		338940	0					
ANR	338956	Identifier	top		338940	1					
ANR	338957	Identifier	ZEND_PTR_STACK_NUM_ARGS		338940	1					
ANR	338958	ExpressionStatement	* ( stack -> top_element ++ ) = a	65:1:2911:2938	338940	10	True				
ANR	338959	AssignmentExpression	* ( stack -> top_element ++ ) = a		338940	0		=			
ANR	338960	UnaryOperationExpression	* ( stack -> top_element ++ )		338940	0					
ANR	338961	UnaryOperator	*		338940	0					
ANR	338962	PostIncDecOperationExpression	stack -> top_element ++		338940	1					
ANR	338963	PtrMemberAccess	stack -> top_element		338940	0					
ANR	338964	Identifier	stack		338940	0					
ANR	338965	Identifier	top_element		338940	1					
ANR	338966	IncDec	++		338940	1					
ANR	338967	Identifier	a		338940	1					
ANR	338968	ExpressionStatement	* ( stack -> top_element ++ ) = b	66:1:2941:2968	338940	11	True				
ANR	338969	AssignmentExpression	* ( stack -> top_element ++ ) = b		338940	0		=			
ANR	338970	UnaryOperationExpression	* ( stack -> top_element ++ )		338940	0					
ANR	338971	UnaryOperator	*		338940	0					
ANR	338972	PostIncDecOperationExpression	stack -> top_element ++		338940	1					
ANR	338973	PtrMemberAccess	stack -> top_element		338940	0					
ANR	338974	Identifier	stack		338940	0					
ANR	338975	Identifier	top_element		338940	1					
ANR	338976	IncDec	++		338940	1					
ANR	338977	Identifier	b		338940	1					
ANR	338978	ExpressionStatement	* ( stack -> top_element ++ ) = c	67:1:2971:2998	338940	12	True				
ANR	338979	AssignmentExpression	* ( stack -> top_element ++ ) = c		338940	0		=			
ANR	338980	UnaryOperationExpression	* ( stack -> top_element ++ )		338940	0					
ANR	338981	UnaryOperator	*		338940	0					
ANR	338982	PostIncDecOperationExpression	stack -> top_element ++		338940	1					
ANR	338983	PtrMemberAccess	stack -> top_element		338940	0					
ANR	338984	Identifier	stack		338940	0					
ANR	338985	Identifier	top_element		338940	1					
ANR	338986	IncDec	++		338940	1					
ANR	338987	Identifier	c		338940	1					
ANR	338988	Statement	undef	69:1:3002:3006	338940	13	True				
ANR	338989	Statement	ZEND_PTR_STACK_NUM_ARGS	69:7:3008:3030	338940	14	True				
ANR	338990	ReturnType	static zend_always_inline void		338940	1					
ANR	338991	Identifier	zend_ptr_stack_3_push		338940	2					
ANR	338992	ParameterList	"zend_ptr_stack * stack , void * a , void * b , void * c"		338940	3					
ANR	338993	Parameter	zend_ptr_stack * stack	58:53:2717:2737	338940	0	True				
ANR	338994	ParameterType	zend_ptr_stack *		338940	0					
ANR	338995	Identifier	stack		338940	1					
ANR	338996	Parameter	void * a	58:76:2740:2746	338940	1	True				
ANR	338997	ParameterType	void *		338940	0					
ANR	338998	Identifier	a		338940	1					
ANR	338999	Parameter	void * b	58:85:2749:2755	338940	2	True				
ANR	339000	ParameterType	void *		338940	0					
ANR	339001	Identifier	b		338940	1					
ANR	339002	Parameter	void * c	58:94:2758:2764	338940	3	True				
ANR	339003	ParameterType	void *		338940	0					
ANR	339004	Identifier	c		338940	1					
ANR	339005	CFGEntryNode	ENTRY		338940		True				
ANR	339006	CFGExitNode	EXIT		338940		True				
ANR	339007	Symbol	a		338940						
ANR	339008	Symbol	stack		338940						
ANR	339009	Symbol	b		338940						
ANR	339010	Symbol	c		338940						
ANR	339011	Symbol	stack -> top_element		338940						
ANR	339012	Symbol	* ( stack -> top_element ++ )		338940						
ANR	339013	Symbol	* stack		338940						
ANR	339014	Symbol	ZEND_PTR_STACK_NUM_ARGS		338940						
ANR	339015	Symbol	stack -> top		338940						
ANR	339016	Function	zend_ptr_stack_2_push	72:0:3035:3364							
ANR	339017	FunctionDef	"zend_ptr_stack_2_push (zend_ptr_stack * stack , void * a , void * b)"		339016	0					
ANR	339018	CompoundStatement		73:0:3129:3364	339016	0					
ANR	339019	Statement	define	74:1:3132:3137	339016	0	True				
ANR	339020	Statement	ZEND_PTR_STACK_NUM_ARGS	74:8:3139:3161	339016	1	True				
ANR	339021	Statement	2	74:32:3163:3163	339016	2	True				
ANR	339022	Statement	ZEND_PTR_STACK_RESIZE_IF_NEEDED	76:1:3167:3197	339016	3	True				
ANR	339023	Statement	(	76:32:3198:3198	339016	4	True				
ANR	339024	Statement	stack	76:33:3199:3203	339016	5	True				
ANR	339025	Statement	","	76:38:3204:3204	339016	6	True				
ANR	339026	Statement	ZEND_PTR_STACK_NUM_ARGS	76:40:3206:3228	339016	7	True				
ANR	339027	Statement	)	76:63:3229:3229	339016	8	True				
ANR	339028	ExpressionStatement	stack -> top += ZEND_PTR_STACK_NUM_ARGS	78:1:3233:3270	339016	9	True				
ANR	339029	AssignmentExpression	stack -> top += ZEND_PTR_STACK_NUM_ARGS		339016	0		+=			
ANR	339030	PtrMemberAccess	stack -> top		339016	0					
ANR	339031	Identifier	stack		339016	0					
ANR	339032	Identifier	top		339016	1					
ANR	339033	Identifier	ZEND_PTR_STACK_NUM_ARGS		339016	1					
ANR	339034	ExpressionStatement	* ( stack -> top_element ++ ) = a	79:1:3273:3300	339016	10	True				
ANR	339035	AssignmentExpression	* ( stack -> top_element ++ ) = a		339016	0		=			
ANR	339036	UnaryOperationExpression	* ( stack -> top_element ++ )		339016	0					
ANR	339037	UnaryOperator	*		339016	0					
ANR	339038	PostIncDecOperationExpression	stack -> top_element ++		339016	1					
ANR	339039	PtrMemberAccess	stack -> top_element		339016	0					
ANR	339040	Identifier	stack		339016	0					
ANR	339041	Identifier	top_element		339016	1					
ANR	339042	IncDec	++		339016	1					
ANR	339043	Identifier	a		339016	1					
ANR	339044	ExpressionStatement	* ( stack -> top_element ++ ) = b	80:1:3303:3330	339016	11	True				
ANR	339045	AssignmentExpression	* ( stack -> top_element ++ ) = b		339016	0		=			
ANR	339046	UnaryOperationExpression	* ( stack -> top_element ++ )		339016	0					
ANR	339047	UnaryOperator	*		339016	0					
ANR	339048	PostIncDecOperationExpression	stack -> top_element ++		339016	1					
ANR	339049	PtrMemberAccess	stack -> top_element		339016	0					
ANR	339050	Identifier	stack		339016	0					
ANR	339051	Identifier	top_element		339016	1					
ANR	339052	IncDec	++		339016	1					
ANR	339053	Identifier	b		339016	1					
ANR	339054	Statement	undef	82:1:3334:3338	339016	12	True				
ANR	339055	Statement	ZEND_PTR_STACK_NUM_ARGS	82:7:3340:3362	339016	13	True				
ANR	339056	ReturnType	static zend_always_inline void		339016	1					
ANR	339057	Identifier	zend_ptr_stack_2_push		339016	2					
ANR	339058	ParameterList	"zend_ptr_stack * stack , void * a , void * b"		339016	3					
ANR	339059	Parameter	zend_ptr_stack * stack	72:53:3088:3108	339016	0	True				
ANR	339060	ParameterType	zend_ptr_stack *		339016	0					
ANR	339061	Identifier	stack		339016	1					
ANR	339062	Parameter	void * a	72:76:3111:3117	339016	1	True				
ANR	339063	ParameterType	void *		339016	0					
ANR	339064	Identifier	a		339016	1					
ANR	339065	Parameter	void * b	72:85:3120:3126	339016	2	True				
ANR	339066	ParameterType	void *		339016	0					
ANR	339067	Identifier	b		339016	1					
ANR	339068	CFGEntryNode	ENTRY		339016		True				
ANR	339069	CFGExitNode	EXIT		339016		True				
ANR	339070	Symbol	a		339016						
ANR	339071	Symbol	stack		339016						
ANR	339072	Symbol	b		339016						
ANR	339073	Symbol	stack -> top_element		339016						
ANR	339074	Symbol	* ( stack -> top_element ++ )		339016						
ANR	339075	Symbol	* stack		339016						
ANR	339076	Symbol	ZEND_PTR_STACK_NUM_ARGS		339016						
ANR	339077	Symbol	stack -> top		339016						
ANR	339078	Function	zend_ptr_stack_3_pop	85:0:3367:3585							
ANR	339079	FunctionDef	"zend_ptr_stack_3_pop (zend_ptr_stack * stack , void * * a , void * * b , void * * c)"		339078	0					
ANR	339080	CompoundStatement		86:0:3472:3585	339078	0					
ANR	339081	ExpressionStatement	* a = * ( -- stack -> top_element )	87:1:3475:3503	339078	0	True				
ANR	339082	AssignmentExpression	* a = * ( -- stack -> top_element )		339078	0		=			
ANR	339083	UnaryOperationExpression	* a		339078	0					
ANR	339084	UnaryOperator	*		339078	0					
ANR	339085	Identifier	a		339078	1					
ANR	339086	UnaryOperationExpression	* ( -- stack -> top_element )		339078	1					
ANR	339087	UnaryOperator	*		339078	0					
ANR	339088	UnaryExpression	-- stack -> top_element		339078	1					
ANR	339089	IncDec	--		339078	0					
ANR	339090	PtrMemberAccess	stack -> top_element		339078	1					
ANR	339091	Identifier	stack		339078	0					
ANR	339092	Identifier	top_element		339078	1					
ANR	339093	ExpressionStatement	* b = * ( -- stack -> top_element )	88:1:3506:3534	339078	1	True				
ANR	339094	AssignmentExpression	* b = * ( -- stack -> top_element )		339078	0		=			
ANR	339095	UnaryOperationExpression	* b		339078	0					
ANR	339096	UnaryOperator	*		339078	0					
ANR	339097	Identifier	b		339078	1					
ANR	339098	UnaryOperationExpression	* ( -- stack -> top_element )		339078	1					
ANR	339099	UnaryOperator	*		339078	0					
ANR	339100	UnaryExpression	-- stack -> top_element		339078	1					
ANR	339101	IncDec	--		339078	0					
ANR	339102	PtrMemberAccess	stack -> top_element		339078	1					
ANR	339103	Identifier	stack		339078	0					
ANR	339104	Identifier	top_element		339078	1					
ANR	339105	ExpressionStatement	* c = * ( -- stack -> top_element )	89:1:3537:3565	339078	2	True				
ANR	339106	AssignmentExpression	* c = * ( -- stack -> top_element )		339078	0		=			
ANR	339107	UnaryOperationExpression	* c		339078	0					
ANR	339108	UnaryOperator	*		339078	0					
ANR	339109	Identifier	c		339078	1					
ANR	339110	UnaryOperationExpression	* ( -- stack -> top_element )		339078	1					
ANR	339111	UnaryOperator	*		339078	0					
ANR	339112	UnaryExpression	-- stack -> top_element		339078	1					
ANR	339113	IncDec	--		339078	0					
ANR	339114	PtrMemberAccess	stack -> top_element		339078	1					
ANR	339115	Identifier	stack		339078	0					
ANR	339116	Identifier	top_element		339078	1					
ANR	339117	ExpressionStatement	stack -> top -= 3	90:1:3568:3583	339078	3	True				
ANR	339118	AssignmentExpression	stack -> top -= 3		339078	0		-=			
ANR	339119	PtrMemberAccess	stack -> top		339078	0					
ANR	339120	Identifier	stack		339078	0					
ANR	339121	Identifier	top		339078	1					
ANR	339122	PrimaryExpression	3		339078	1					
ANR	339123	ReturnType	static zend_always_inline void		339078	1					
ANR	339124	Identifier	zend_ptr_stack_3_pop		339078	2					
ANR	339125	ParameterList	"zend_ptr_stack * stack , void * * a , void * * b , void * * c"		339078	3					
ANR	339126	Parameter	zend_ptr_stack * stack	85:52:3419:3439	339078	0	True				
ANR	339127	ParameterType	zend_ptr_stack *		339078	0					
ANR	339128	Identifier	stack		339078	1					
ANR	339129	Parameter	void * * a	85:75:3442:3449	339078	1	True				
ANR	339130	ParameterType	void * *		339078	0					
ANR	339131	Identifier	a		339078	1					
ANR	339132	Parameter	void * * b	85:85:3452:3459	339078	2	True				
ANR	339133	ParameterType	void * *		339078	0					
ANR	339134	Identifier	b		339078	1					
ANR	339135	Parameter	void * * c	85:95:3462:3469	339078	3	True				
ANR	339136	ParameterType	void * *		339078	0					
ANR	339137	Identifier	c		339078	1					
ANR	339138	CFGEntryNode	ENTRY		339078		True				
ANR	339139	CFGExitNode	EXIT		339078		True				
ANR	339140	Symbol	a		339078						
ANR	339141	Symbol	stack		339078						
ANR	339142	Symbol	b		339078						
ANR	339143	Symbol	c		339078						
ANR	339144	Symbol	* a		339078						
ANR	339145	Symbol	* b		339078						
ANR	339146	Symbol	* stack -> top_element		339078						
ANR	339147	Symbol	* c		339078						
ANR	339148	Symbol	* ( -- stack -> top_element )		339078						
ANR	339149	Symbol	stack -> top_element		339078						
ANR	339150	Symbol	* * stack		339078						
ANR	339151	Symbol	* stack		339078						
ANR	339152	Symbol	stack -> top		339078						
ANR	339153	Function	zend_ptr_stack_2_pop	93:0:3588:3765							
ANR	339154	FunctionDef	"zend_ptr_stack_2_pop (zend_ptr_stack * stack , void * * a , void * * b)"		339153	0					
ANR	339155	CompoundStatement		94:0:3683:3765	339153	0					
ANR	339156	ExpressionStatement	* a = * ( -- stack -> top_element )	95:1:3686:3714	339153	0	True				
ANR	339157	AssignmentExpression	* a = * ( -- stack -> top_element )		339153	0		=			
ANR	339158	UnaryOperationExpression	* a		339153	0					
ANR	339159	UnaryOperator	*		339153	0					
ANR	339160	Identifier	a		339153	1					
ANR	339161	UnaryOperationExpression	* ( -- stack -> top_element )		339153	1					
ANR	339162	UnaryOperator	*		339153	0					
ANR	339163	UnaryExpression	-- stack -> top_element		339153	1					
ANR	339164	IncDec	--		339153	0					
ANR	339165	PtrMemberAccess	stack -> top_element		339153	1					
ANR	339166	Identifier	stack		339153	0					
ANR	339167	Identifier	top_element		339153	1					
ANR	339168	ExpressionStatement	* b = * ( -- stack -> top_element )	96:1:3717:3745	339153	1	True				
ANR	339169	AssignmentExpression	* b = * ( -- stack -> top_element )		339153	0		=			
ANR	339170	UnaryOperationExpression	* b		339153	0					
ANR	339171	UnaryOperator	*		339153	0					
ANR	339172	Identifier	b		339153	1					
ANR	339173	UnaryOperationExpression	* ( -- stack -> top_element )		339153	1					
ANR	339174	UnaryOperator	*		339153	0					
ANR	339175	UnaryExpression	-- stack -> top_element		339153	1					
ANR	339176	IncDec	--		339153	0					
ANR	339177	PtrMemberAccess	stack -> top_element		339153	1					
ANR	339178	Identifier	stack		339153	0					
ANR	339179	Identifier	top_element		339153	1					
ANR	339180	ExpressionStatement	stack -> top -= 2	97:1:3748:3763	339153	2	True				
ANR	339181	AssignmentExpression	stack -> top -= 2		339153	0		-=			
ANR	339182	PtrMemberAccess	stack -> top		339153	0					
ANR	339183	Identifier	stack		339153	0					
ANR	339184	Identifier	top		339153	1					
ANR	339185	PrimaryExpression	2		339153	1					
ANR	339186	ReturnType	static zend_always_inline void		339153	1					
ANR	339187	Identifier	zend_ptr_stack_2_pop		339153	2					
ANR	339188	ParameterList	"zend_ptr_stack * stack , void * * a , void * * b"		339153	3					
ANR	339189	Parameter	zend_ptr_stack * stack	93:52:3640:3660	339153	0	True				
ANR	339190	ParameterType	zend_ptr_stack *		339153	0					
ANR	339191	Identifier	stack		339153	1					
ANR	339192	Parameter	void * * a	93:75:3663:3670	339153	1	True				
ANR	339193	ParameterType	void * *		339153	0					
ANR	339194	Identifier	a		339153	1					
ANR	339195	Parameter	void * * b	93:85:3673:3680	339153	2	True				
ANR	339196	ParameterType	void * *		339153	0					
ANR	339197	Identifier	b		339153	1					
ANR	339198	CFGEntryNode	ENTRY		339153		True				
ANR	339199	CFGExitNode	EXIT		339153		True				
ANR	339200	Symbol	a		339153						
ANR	339201	Symbol	stack		339153						
ANR	339202	Symbol	b		339153						
ANR	339203	Symbol	* ( -- stack -> top_element )		339153						
ANR	339204	Symbol	stack -> top_element		339153						
ANR	339205	Symbol	* * stack		339153						
ANR	339206	Symbol	* stack		339153						
ANR	339207	Symbol	* a		339153						
ANR	339208	Symbol	* b		339153						
ANR	339209	Symbol	stack -> top		339153						
ANR	339210	Symbol	* stack -> top_element		339153						
ANR	339211	Function	zend_ptr_stack_push	100:0:3768:3946							
ANR	339212	FunctionDef	"zend_ptr_stack_push (zend_ptr_stack * stack , void * ptr)"		339211	0					
ANR	339213	CompoundStatement		101:0:3853:3946	339211	0					
ANR	339214	Statement	ZEND_PTR_STACK_RESIZE_IF_NEEDED	102:1:3856:3886	339211	0	True				
ANR	339215	Statement	(	102:32:3887:3887	339211	1	True				
ANR	339216	Statement	stack	102:33:3888:3892	339211	2	True				
ANR	339217	Statement	","	102:38:3893:3893	339211	3	True				
ANR	339218	Statement	1	102:40:3895:3895	339211	4	True				
ANR	339219	Statement	)	102:41:3896:3896	339211	5	True				
ANR	339220	ExpressionStatement	stack -> top ++	104:1:3900:3912	339211	6	True				
ANR	339221	PostIncDecOperationExpression	stack -> top ++		339211	0					
ANR	339222	PtrMemberAccess	stack -> top		339211	0					
ANR	339223	Identifier	stack		339211	0					
ANR	339224	Identifier	top		339211	1					
ANR	339225	IncDec	++		339211	1					
ANR	339226	ExpressionStatement	* ( stack -> top_element ++ ) = ptr	105:1:3915:3944	339211	7	True				
ANR	339227	AssignmentExpression	* ( stack -> top_element ++ ) = ptr		339211	0		=			
ANR	339228	UnaryOperationExpression	* ( stack -> top_element ++ )		339211	0					
ANR	339229	UnaryOperator	*		339211	0					
ANR	339230	PostIncDecOperationExpression	stack -> top_element ++		339211	1					
ANR	339231	PtrMemberAccess	stack -> top_element		339211	0					
ANR	339232	Identifier	stack		339211	0					
ANR	339233	Identifier	top_element		339211	1					
ANR	339234	IncDec	++		339211	1					
ANR	339235	Identifier	ptr		339211	1					
ANR	339236	ReturnType	static zend_always_inline void		339211	1					
ANR	339237	Identifier	zend_ptr_stack_push		339211	2					
ANR	339238	ParameterList	"zend_ptr_stack * stack , void * ptr"		339211	3					
ANR	339239	Parameter	zend_ptr_stack * stack	100:51:3819:3839	339211	0	True				
ANR	339240	ParameterType	zend_ptr_stack *		339211	0					
ANR	339241	Identifier	stack		339211	1					
ANR	339242	Parameter	void * ptr	100:74:3842:3850	339211	1	True				
ANR	339243	ParameterType	void *		339211	0					
ANR	339244	Identifier	ptr		339211	1					
ANR	339245	CFGEntryNode	ENTRY		339211		True				
ANR	339246	CFGExitNode	EXIT		339211		True				
ANR	339247	Symbol	stack		339211						
ANR	339248	Symbol	stack -> top_element		339211						
ANR	339249	Symbol	* ( stack -> top_element ++ )		339211						
ANR	339250	Symbol	* stack		339211						
ANR	339251	Symbol	stack -> top		339211						
ANR	339252	Symbol	ptr		339211						
ANR	339253	Function	zend_ptr_stack_pop	108:0:3949:4073							
ANR	339254	FunctionDef	zend_ptr_stack_pop (zend_ptr_stack * stack)		339253	0					
ANR	339255	CompoundStatement		109:0:4023:4073	339253	0					
ANR	339256	ExpressionStatement	stack -> top --	110:1:4026:4038	339253	0	True				
ANR	339257	PostIncDecOperationExpression	stack -> top --		339253	0					
ANR	339258	PtrMemberAccess	stack -> top		339253	0					
ANR	339259	Identifier	stack		339253	0					
ANR	339260	Identifier	top		339253	1					
ANR	339261	IncDec	--		339253	1					
ANR	339262	ReturnStatement	return * ( -- stack -> top_element ) ;	111:1:4041:4071	339253	1	True				
ANR	339263	UnaryOperationExpression	* ( -- stack -> top_element )		339253	0					
ANR	339264	UnaryOperator	*		339253	0					
ANR	339265	UnaryExpression	-- stack -> top_element		339253	1					
ANR	339266	IncDec	--		339253	0					
ANR	339267	PtrMemberAccess	stack -> top_element		339253	1					
ANR	339268	Identifier	stack		339253	0					
ANR	339269	Identifier	top_element		339253	1					
ANR	339270	ReturnType	static zend_always_inline void *		339253	1					
ANR	339271	Identifier	zend_ptr_stack_pop		339253	2					
ANR	339272	ParameterList	zend_ptr_stack * stack		339253	3					
ANR	339273	Parameter	zend_ptr_stack * stack	108:51:4000:4020	339253	0	True				
ANR	339274	ParameterType	zend_ptr_stack *		339253	0					
ANR	339275	Identifier	stack		339253	1					
ANR	339276	CFGEntryNode	ENTRY		339253		True				
ANR	339277	CFGExitNode	EXIT		339253		True				
ANR	339278	Symbol	stack		339253						
ANR	339279	Symbol	* ( -- stack -> top_element )		339253						
ANR	339280	Symbol	stack -> top_element		339253						
ANR	339281	Symbol	* * stack		339253						
ANR	339282	Symbol	* stack		339253						
ANR	339283	Symbol	stack -> top		339253						
ANR	339284	Symbol	* stack -> top_element		339253						
ANR	339285	Function	zend_ptr_stack_top	114:0:4076:4196							
ANR	339286	FunctionDef	zend_ptr_stack_top (zend_ptr_stack * stack)		339285	0					
ANR	339287	CompoundStatement		115:0:4150:4196	339285	0					
ANR	339288	ReturnStatement	return stack -> elements [ stack -> top - 1 ] ;	116:4:4156:4194	339285	0	True				
ANR	339289	ArrayIndexing	stack -> elements [ stack -> top - 1 ]		339285	0					
ANR	339290	PtrMemberAccess	stack -> elements		339285	0					
ANR	339291	Identifier	stack		339285	0					
ANR	339292	Identifier	elements		339285	1					
ANR	339293	AdditiveExpression	stack -> top - 1		339285	1		-			
ANR	339294	PtrMemberAccess	stack -> top		339285	0					
ANR	339295	Identifier	stack		339285	0					
ANR	339296	Identifier	top		339285	1					
ANR	339297	PrimaryExpression	1		339285	1					
ANR	339298	ReturnType	static zend_always_inline void *		339285	1					
ANR	339299	Identifier	zend_ptr_stack_top		339285	2					
ANR	339300	ParameterList	zend_ptr_stack * stack		339285	3					
ANR	339301	Parameter	zend_ptr_stack * stack	114:51:4127:4147	339285	0	True				
ANR	339302	ParameterType	zend_ptr_stack *		339285	0					
ANR	339303	Identifier	stack		339285	1					
ANR	339304	CFGEntryNode	ENTRY		339285		True				
ANR	339305	CFGExitNode	EXIT		339285		True				
ANR	339306	Symbol	stack		339285						
ANR	339307	Symbol	* stack -> top		339285						
ANR	339308	Symbol	* * stack		339285						
ANR	339309	Symbol	* stack		339285						
ANR	339310	Symbol	* stack -> elements		339285						
ANR	339311	Symbol	stack -> top		339285						
ANR	339312	Symbol	stack -> elements		339285						
