command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3090835	File	data/converged/CVE-2015-8617_php-src/mbfilter_ascii.c								
ANR	3090836	DeclStmt									
ANR	3090837	Decl							int	"int ( int c , mbfl_identify_filter * filter )"	mbfl_filt_ident_ascii
ANR	3090838	DeclStmt									
ANR	3090839	Decl							const char	const char * [ ]	mbfl_encoding_ascii_aliases
ANR	3090840	DeclStmt									
ANR	3090841	Decl							const mbfl_encoding	const mbfl_encoding	mbfl_encoding_ascii
ANR	3090842	DeclStmt									
ANR	3090843	Decl							const struct mbfl_identify_vtbl	const struct mbfl_identify_vtbl	vtbl_identify_ascii
ANR	3090844	DeclStmt									
ANR	3090845	Decl							const struct mbfl_convert_vtbl	const struct mbfl_convert_vtbl	vtbl_ascii_wchar
ANR	3090846	DeclStmt									
ANR	3090847	Decl							const struct mbfl_convert_vtbl	const struct mbfl_convert_vtbl	vtbl_wchar_ascii
ANR	3090848	Function	mbfl_filt_conv_ascii_wchar	81:0:2373:2495							
ANR	3090849	FunctionDef	"mbfl_filt_conv_ascii_wchar (int c , mbfl_convert_filter * filter)"		3090848	0					
ANR	3090850	CompoundStatement		82:0:2440:2495	3090848	0					
ANR	3090851	ReturnStatement	"return ( * filter -> output_function ) ( c , filter -> data ) ;"	83:1:2443:2493	3090848	0	True				
ANR	3090852	CallExpression	"( * filter -> output_function ) ( c , filter -> data )"		3090848	0					
ANR	3090853	Callee	* filter -> output_function		3090848	0					
ANR	3090854	UnaryOperationExpression	* filter -> output_function		3090848	0					
ANR	3090855	UnaryOperator	*		3090848	0					
ANR	3090856	PtrMemberAccess	filter -> output_function		3090848	1					
ANR	3090857	Identifier	filter		3090848	0					
ANR	3090858	Identifier	output_function		3090848	1					
ANR	3090859	ArgumentList	c		3090848	1					
ANR	3090860	Argument	c		3090848	0					
ANR	3090861	Identifier	c		3090848	0					
ANR	3090862	Argument	filter -> data		3090848	1					
ANR	3090863	PtrMemberAccess	filter -> data		3090848	0					
ANR	3090864	Identifier	filter		3090848	0					
ANR	3090865	Identifier	data		3090848	1					
ANR	3090866	ReturnType	int		3090848	1					
ANR	3090867	Identifier	mbfl_filt_conv_ascii_wchar		3090848	2					
ANR	3090868	ParameterList	"int c , mbfl_convert_filter * filter"		3090848	3					
ANR	3090869	Parameter	int c	81:31:2404:2408	3090848	0	True				
ANR	3090870	ParameterType	int		3090848	0					
ANR	3090871	Identifier	c		3090848	1					
ANR	3090872	Parameter	mbfl_convert_filter * filter	81:38:2411:2437	3090848	1	True				
ANR	3090873	ParameterType	mbfl_convert_filter *		3090848	0					
ANR	3090874	Identifier	filter		3090848	1					
ANR	3090875	CFGEntryNode	ENTRY		3090848		True				
ANR	3090876	CFGExitNode	EXIT		3090848		True				
ANR	3090877	Symbol	filter		3090848						
ANR	3090878	Symbol	c		3090848						
ANR	3090879	Symbol	filter -> output_function		3090848						
ANR	3090880	Symbol	* filter -> output_function		3090848						
ANR	3090881	Symbol	* * filter		3090848						
ANR	3090882	Symbol	filter -> data		3090848						
ANR	3090883	Symbol	* filter		3090848						
ANR	3090884	Function	mbfl_filt_conv_wchar_ascii	90:0:2524:2818							
ANR	3090885	FunctionDef	"mbfl_filt_conv_wchar_ascii (int c , mbfl_convert_filter * filter)"		3090884	0					
ANR	3090886	CompoundStatement		91:0:2591:2818	3090884	0					
ANR	3090887	IfStatement	if ( c >= 0 && c < 0x80 )		3090884	0					
ANR	3090888	Condition	c >= 0 && c < 0x80	92:5:2598:2615	3090884	0	True				
ANR	3090889	AndExpression	c >= 0 && c < 0x80		3090884	0		&&			
ANR	3090890	RelationalExpression	c >= 0		3090884	0		>=			
ANR	3090891	Identifier	c		3090884	0					
ANR	3090892	PrimaryExpression	0		3090884	1					
ANR	3090893	RelationalExpression	c < 0x80		3090884	1		<			
ANR	3090894	Identifier	c		3090884	0					
ANR	3090895	PrimaryExpression	0x80		3090884	1					
ANR	3090896	CompoundStatement		2:25:26:26	3090884	1					
ANR	3090897	ExpressionStatement	"CK ( ( * filter -> output_function ) ( c , filter -> data ) )"	93:2:2622:2669	3090884	0	True				
ANR	3090898	CallExpression	"CK ( ( * filter -> output_function ) ( c , filter -> data ) )"		3090884	0					
ANR	3090899	Callee	CK		3090884	0					
ANR	3090900	Identifier	CK		3090884	0					
ANR	3090901	ArgumentList	"( * filter -> output_function ) ( c , filter -> data )"		3090884	1					
ANR	3090902	Argument	"( * filter -> output_function ) ( c , filter -> data )"		3090884	0					
ANR	3090903	CallExpression	"( * filter -> output_function ) ( c , filter -> data )"		3090884	0					
ANR	3090904	Callee	* filter -> output_function		3090884	0					
ANR	3090905	UnaryOperationExpression	* filter -> output_function		3090884	0					
ANR	3090906	UnaryOperator	*		3090884	0					
ANR	3090907	PtrMemberAccess	filter -> output_function		3090884	1					
ANR	3090908	Identifier	filter		3090884	0					
ANR	3090909	Identifier	output_function		3090884	1					
ANR	3090910	ArgumentList	c		3090884	1					
ANR	3090911	Argument	c		3090884	0					
ANR	3090912	Identifier	c		3090884	0					
ANR	3090913	Argument	filter -> data		3090884	1					
ANR	3090914	PtrMemberAccess	filter -> data		3090884	0					
ANR	3090915	Identifier	filter		3090884	0					
ANR	3090916	Identifier	data		3090884	1					
ANR	3090917	ElseStatement	else		3090884	0					
ANR	3090918	CompoundStatement		4:8:87:87	3090884	0					
ANR	3090919	IfStatement	if ( filter -> illegal_mode != MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE )		3090884	0					
ANR	3090920	Condition	filter -> illegal_mode != MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE	95:6:2687:2745	3090884	0	True				
ANR	3090921	EqualityExpression	filter -> illegal_mode != MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE		3090884	0		!=			
ANR	3090922	PtrMemberAccess	filter -> illegal_mode		3090884	0					
ANR	3090923	Identifier	filter		3090884	0					
ANR	3090924	Identifier	illegal_mode		3090884	1					
ANR	3090925	Identifier	MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE		3090884	1					
ANR	3090926	CompoundStatement		5:67:156:156	3090884	1					
ANR	3090927	ExpressionStatement	"CK ( mbfl_filt_conv_illegal_output ( c , filter ) )"	96:3:2753:2797	3090884	0	True				
ANR	3090928	CallExpression	"CK ( mbfl_filt_conv_illegal_output ( c , filter ) )"		3090884	0					
ANR	3090929	Callee	CK		3090884	0					
ANR	3090930	Identifier	CK		3090884	0					
ANR	3090931	ArgumentList	"mbfl_filt_conv_illegal_output ( c , filter )"		3090884	1					
ANR	3090932	Argument	"mbfl_filt_conv_illegal_output ( c , filter )"		3090884	0					
ANR	3090933	CallExpression	"mbfl_filt_conv_illegal_output ( c , filter )"		3090884	0					
ANR	3090934	Callee	mbfl_filt_conv_illegal_output		3090884	0					
ANR	3090935	Identifier	mbfl_filt_conv_illegal_output		3090884	0					
ANR	3090936	ArgumentList	c		3090884	1					
ANR	3090937	Argument	c		3090884	0					
ANR	3090938	Identifier	c		3090884	0					
ANR	3090939	Argument	filter		3090884	1					
ANR	3090940	Identifier	filter		3090884	0					
ANR	3090941	ReturnStatement	return c ;	100:1:2808:2816	3090884	1	True				
ANR	3090942	Identifier	c		3090884	0					
ANR	3090943	ReturnType	int		3090884	1					
ANR	3090944	Identifier	mbfl_filt_conv_wchar_ascii		3090884	2					
ANR	3090945	ParameterList	"int c , mbfl_convert_filter * filter"		3090884	3					
ANR	3090946	Parameter	int c	90:31:2555:2559	3090884	0	True				
ANR	3090947	ParameterType	int		3090884	0					
ANR	3090948	Identifier	c		3090884	1					
ANR	3090949	Parameter	mbfl_convert_filter * filter	90:38:2562:2588	3090884	1	True				
ANR	3090950	ParameterType	mbfl_convert_filter *		3090884	0					
ANR	3090951	Identifier	filter		3090884	1					
ANR	3090952	CFGEntryNode	ENTRY		3090884		True				
ANR	3090953	CFGExitNode	EXIT		3090884		True				
ANR	3090954	Symbol	filter		3090884						
ANR	3090955	Symbol	c		3090884						
ANR	3090956	Symbol	filter -> output_function		3090884						
ANR	3090957	Symbol	mbfl_filt_conv_illegal_output		3090884						
ANR	3090958	Symbol	filter -> illegal_mode		3090884						
ANR	3090959	Symbol	* filter -> output_function		3090884						
ANR	3090960	Symbol	MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE		3090884						
ANR	3090961	Symbol	* * filter		3090884						
ANR	3090962	Symbol	filter -> data		3090884						
ANR	3090963	Symbol	* filter		3090884						
ANR	3090964	Function	mbfl_filt_ident_ascii	103:0:2821:3068							
ANR	3090965	FunctionDef	"mbfl_filt_ident_ascii (int c , mbfl_identify_filter * filter)"		3090964	0					
ANR	3090966	CompoundStatement		104:0:2891:3068	3090964	0					
ANR	3090967	IfStatement	if ( c >= 0x20 && c < 0x80 )		3090964	0					
ANR	3090968	Condition	c >= 0x20 && c < 0x80	105:5:2898:2918	3090964	0	True				
ANR	3090969	AndExpression	c >= 0x20 && c < 0x80		3090964	0		&&			
ANR	3090970	RelationalExpression	c >= 0x20		3090964	0		>=			
ANR	3090971	Identifier	c		3090964	0					
ANR	3090972	PrimaryExpression	0x20		3090964	1					
ANR	3090973	RelationalExpression	c < 0x80		3090964	1		<			
ANR	3090974	Identifier	c		3090964	0					
ANR	3090975	PrimaryExpression	0x80		3090964	1					
ANR	3090976	CompoundStatement		2:28:29:29	3090964	1					
ANR	3090977	ExpressionStatement		106:2:2925:2925	3090964	0	True				
ANR	3090978	ElseStatement	else		3090964	0					
ANR	3090979	IfStatement	if ( c == 0x0d || c == 0x0a || c == 0x09 || c == 0 )		3090964	0					
ANR	3090980	Condition	c == 0x0d || c == 0x0a || c == 0x09 || c == 0	107:12:2939:2983	3090964	0	True				
ANR	3090981	OrExpression	c == 0x0d || c == 0x0a || c == 0x09 || c == 0		3090964	0		||			
ANR	3090982	EqualityExpression	c == 0x0d		3090964	0		==			
ANR	3090983	Identifier	c		3090964	0					
ANR	3090984	PrimaryExpression	0x0d		3090964	1					
ANR	3090985	OrExpression	c == 0x0a || c == 0x09 || c == 0		3090964	1		||			
ANR	3090986	EqualityExpression	c == 0x0a		3090964	0		==			
ANR	3090987	Identifier	c		3090964	0					
ANR	3090988	PrimaryExpression	0x0a		3090964	1					
ANR	3090989	OrExpression	c == 0x09 || c == 0		3090964	1		||			
ANR	3090990	EqualityExpression	c == 0x09		3090964	0		==			
ANR	3090991	Identifier	c		3090964	0					
ANR	3090992	PrimaryExpression	0x09		3090964	1					
ANR	3090993	EqualityExpression	c == 0		3090964	1		==			
ANR	3090994	Identifier	c		3090964	0					
ANR	3090995	PrimaryExpression	0		3090964	1					
ANR	3090996	CompoundStatement		4:59:94:94	3090964	1					
ANR	3090997	ExpressionStatement		108:2:3021:3021	3090964	0	True				
ANR	3090998	ElseStatement	else		3090964	0					
ANR	3090999	CompoundStatement		6:8:139:139	3090964	0					
ANR	3091000	ExpressionStatement	filter -> flag = 1	110:2:3035:3051	3090964	0	True				
ANR	3091001	AssignmentExpression	filter -> flag = 1		3090964	0		=			
ANR	3091002	PtrMemberAccess	filter -> flag		3090964	0					
ANR	3091003	Identifier	filter		3090964	0					
ANR	3091004	Identifier	flag		3090964	1					
ANR	3091005	PrimaryExpression	1		3090964	1					
ANR	3091006	ReturnStatement	return c ;	113:1:3058:3066	3090964	1	True				
ANR	3091007	Identifier	c		3090964	0					
ANR	3091008	ReturnType	static int		3090964	1					
ANR	3091009	Identifier	mbfl_filt_ident_ascii		3090964	2					
ANR	3091010	ParameterList	"int c , mbfl_identify_filter * filter"		3090964	3					
ANR	3091011	Parameter	int c	103:33:2854:2858	3090964	0	True				
ANR	3091012	ParameterType	int		3090964	0					
ANR	3091013	Identifier	c		3090964	1					
ANR	3091014	Parameter	mbfl_identify_filter * filter	103:40:2861:2888	3090964	1	True				
ANR	3091015	ParameterType	mbfl_identify_filter *		3090964	0					
ANR	3091016	Identifier	filter		3090964	1					
ANR	3091017	CFGEntryNode	ENTRY		3090964		True				
ANR	3091018	CFGExitNode	EXIT		3090964		True				
ANR	3091019	Symbol	filter		3090964						
ANR	3091020	Symbol	c		3090964						
ANR	3091021	Symbol	filter -> flag		3090964						
ANR	3091022	Symbol	* filter		3090964						
