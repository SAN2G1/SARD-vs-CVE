command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3849	File	data/converged/CVE-2015-8617_php-src/TSRM_tsrm_win32.c								
ANR	3850	DeclStmt									
ANR	3851	Decl							ts_rsrc_id	ts_rsrc_id	win32_globals_id
ANR	3852	DeclStmt									
ANR	3853	Decl							tsrm_win32_globals	tsrm_win32_globals	win32_globals
ANR	3854	Function	tsrm_win32_ctor	43:0:1544:2190							
ANR	3855	FunctionDef	tsrm_win32_ctor (tsrm_win32_globals * globals)		3854	0					
ANR	3856	CompoundStatement		44:0:1601:2190	3854	0					
ANR	3857	ExpressionStatement	TSRMLS_CACHE_UPDATE ( )	46:0:1614:1635	3854	0	True				
ANR	3858	CallExpression	TSRMLS_CACHE_UPDATE ( )		3854	0					
ANR	3859	Callee	TSRMLS_CACHE_UPDATE		3854	0					
ANR	3860	Identifier	TSRMLS_CACHE_UPDATE		3854	0					
ANR	3861	ArgumentList			3854	1					
ANR	3862	ExpressionStatement	globals -> process = NULL	48:1:1645:1668	3854	1	True				
ANR	3863	AssignmentExpression	globals -> process = NULL		3854	0		=			
ANR	3864	PtrMemberAccess	globals -> process		3854	0					
ANR	3865	Identifier	globals		3854	0					
ANR	3866	Identifier	process		3854	1					
ANR	3867	Identifier	NULL		3854	1					
ANR	3868	ExpressionStatement	globals -> shm = NULL	49:1:1671:1691	3854	2	True				
ANR	3869	AssignmentExpression	globals -> shm = NULL		3854	0		=			
ANR	3870	PtrMemberAccess	globals -> shm		3854	0					
ANR	3871	Identifier	globals		3854	0					
ANR	3872	Identifier	shm		3854	1					
ANR	3873	Identifier	NULL		3854	1					
ANR	3874	ExpressionStatement	globals -> process_size = 0	50:1:1694:1719	3854	3	True				
ANR	3875	AssignmentExpression	globals -> process_size = 0		3854	0		=			
ANR	3876	PtrMemberAccess	globals -> process_size		3854	0					
ANR	3877	Identifier	globals		3854	0					
ANR	3878	Identifier	process_size		3854	1					
ANR	3879	PrimaryExpression	0		3854	1					
ANR	3880	ExpressionStatement	globals -> shm_size = 0	51:1:1722:1745	3854	4	True				
ANR	3881	AssignmentExpression	globals -> shm_size = 0		3854	0		=			
ANR	3882	PtrMemberAccess	globals -> shm_size		3854	0					
ANR	3883	Identifier	globals		3854	0					
ANR	3884	Identifier	shm_size		3854	1					
ANR	3885	PrimaryExpression	0		3854	1					
ANR	3886	ExpressionStatement	"globals -> comspec = _strdup ( ""cmd.exe"" )"	52:1:1748:1785	3854	5	True				
ANR	3887	AssignmentExpression	"globals -> comspec = _strdup ( ""cmd.exe"" )"		3854	0		=			
ANR	3888	PtrMemberAccess	globals -> comspec		3854	0					
ANR	3889	Identifier	globals		3854	0					
ANR	3890	Identifier	comspec		3854	1					
ANR	3891	CallExpression	"_strdup ( ""cmd.exe"" )"		3854	1					
ANR	3892	Callee	_strdup		3854	0					
ANR	3893	Identifier	_strdup		3854	0					
ANR	3894	ArgumentList	"""cmd.exe"""		3854	1					
ANR	3895	Argument	"""cmd.exe"""		3854	0					
ANR	3896	PrimaryExpression	"""cmd.exe"""		3854	0					
ANR	3897	ExpressionStatement	globals -> impersonation_token = INVALID_HANDLE_VALUE	61:1:2095:2146	3854	6	True				
ANR	3898	AssignmentExpression	globals -> impersonation_token = INVALID_HANDLE_VALUE		3854	0		=			
ANR	3899	PtrMemberAccess	globals -> impersonation_token		3854	0					
ANR	3900	Identifier	globals		3854	0					
ANR	3901	Identifier	impersonation_token		3854	1					
ANR	3902	Identifier	INVALID_HANDLE_VALUE		3854	1					
ANR	3903	ExpressionStatement	globals -> impersonation_token_sid = NULL	62:1:2149:2188	3854	7	True				
ANR	3904	AssignmentExpression	globals -> impersonation_token_sid = NULL		3854	0		=			
ANR	3905	PtrMemberAccess	globals -> impersonation_token_sid		3854	0					
ANR	3906	Identifier	globals		3854	0					
ANR	3907	Identifier	impersonation_token_sid		3854	1					
ANR	3908	Identifier	NULL		3854	1					
ANR	3909	ReturnType	static void		3854	1					
ANR	3910	Identifier	tsrm_win32_ctor		3854	2					
ANR	3911	ParameterList	tsrm_win32_globals * globals		3854	3					
ANR	3912	Parameter	tsrm_win32_globals * globals	43:28:1572:1598	3854	0	True				
ANR	3913	ParameterType	tsrm_win32_globals *		3854	0					
ANR	3914	Identifier	globals		3854	1					
ANR	3915	CFGEntryNode	ENTRY		3854		True				
ANR	3916	CFGExitNode	EXIT		3854		True				
ANR	3917	Symbol	globals -> shm_size		3854						
ANR	3918	Symbol	globals -> shm		3854						
ANR	3919	Symbol	NULL		3854						
ANR	3920	Symbol	globals -> process_size		3854						
ANR	3921	Symbol	globals -> impersonation_token_sid		3854						
ANR	3922	Symbol	globals		3854						
ANR	3923	Symbol	_strdup		3854						
ANR	3924	Symbol	globals -> comspec		3854						
ANR	3925	Symbol	globals -> process		3854						
ANR	3926	Symbol	globals -> impersonation_token		3854						
ANR	3927	Symbol	* globals		3854						
ANR	3928	Symbol	INVALID_HANDLE_VALUE		3854						
ANR	3929	Function	tsrm_win32_dtor	65:0:2193:2832							
ANR	3930	FunctionDef	tsrm_win32_dtor (tsrm_win32_globals * globals)		3929	0					
ANR	3931	CompoundStatement		66:0:2250:2832	3929	0					
ANR	3932	IdentifierDeclStatement	shm_pair * ptr ;	67:1:2253:2266	3929	0	True				
ANR	3933	IdentifierDecl	* ptr		3929	0					
ANR	3934	IdentifierDeclType	shm_pair *		3929	0					
ANR	3935	Identifier	ptr		3929	1					
ANR	3936	IfStatement	if ( globals -> process )		3929	1					
ANR	3937	Condition	globals -> process	69:5:2274:2289	3929	0	True				
ANR	3938	PtrMemberAccess	globals -> process		3929	0					
ANR	3939	Identifier	globals		3929	0					
ANR	3940	Identifier	process		3929	1					
ANR	3941	CompoundStatement		4:23:41:41	3929	1					
ANR	3942	ExpressionStatement	free ( globals -> process )	70:2:2296:2318	3929	0	True				
ANR	3943	CallExpression	free ( globals -> process )		3929	0					
ANR	3944	Callee	free		3929	0					
ANR	3945	Identifier	free		3929	0					
ANR	3946	ArgumentList	globals -> process		3929	1					
ANR	3947	Argument	globals -> process		3929	0					
ANR	3948	PtrMemberAccess	globals -> process		3929	0					
ANR	3949	Identifier	globals		3929	0					
ANR	3950	Identifier	process		3929	1					
ANR	3951	IfStatement	if ( globals -> shm )		3929	2					
ANR	3952	Condition	globals -> shm	73:5:2329:2340	3929	0	True				
ANR	3953	PtrMemberAccess	globals -> shm		3929	0					
ANR	3954	Identifier	globals		3929	0					
ANR	3955	Identifier	shm		3929	1					
ANR	3956	CompoundStatement		8:19:92:92	3929	1					
ANR	3957	ForStatement	for ( ptr = globals -> shm ; ptr < ( globals -> shm + globals -> shm_size ) ; ptr ++ )		3929	0					
ANR	3958	ForInit	ptr = globals -> shm ;	74:7:2352:2370	3929	0	True				
ANR	3959	AssignmentExpression	ptr = globals -> shm		3929	0		=			
ANR	3960	Identifier	ptr		3929	0					
ANR	3961	PtrMemberAccess	globals -> shm		3929	1					
ANR	3962	Identifier	globals		3929	0					
ANR	3963	Identifier	shm		3929	1					
ANR	3964	Condition	ptr < ( globals -> shm + globals -> shm_size )	74:27:2372:2411	3929	1	True				
ANR	3965	RelationalExpression	ptr < ( globals -> shm + globals -> shm_size )		3929	0		<			
ANR	3966	Identifier	ptr		3929	0					
ANR	3967	AdditiveExpression	globals -> shm + globals -> shm_size		3929	1		+			
ANR	3968	PtrMemberAccess	globals -> shm		3929	0					
ANR	3969	Identifier	globals		3929	0					
ANR	3970	Identifier	shm		3929	1					
ANR	3971	PtrMemberAccess	globals -> shm_size		3929	1					
ANR	3972	Identifier	globals		3929	0					
ANR	3973	Identifier	shm_size		3929	1					
ANR	3974	PostIncDecOperationExpression	ptr ++	74:69:2414:2418	3929	2	True				
ANR	3975	Identifier	ptr		3929	0					
ANR	3976	IncDec	++		3929	1					
ANR	3977	CompoundStatement		9:76:170:170	3929	3					
ANR	3978	ExpressionStatement	UnmapViewOfFile ( ptr -> addr )	75:3:2426:2452	3929	0	True				
ANR	3979	CallExpression	UnmapViewOfFile ( ptr -> addr )		3929	0					
ANR	3980	Callee	UnmapViewOfFile		3929	0					
ANR	3981	Identifier	UnmapViewOfFile		3929	0					
ANR	3982	ArgumentList	ptr -> addr		3929	1					
ANR	3983	Argument	ptr -> addr		3929	0					
ANR	3984	PtrMemberAccess	ptr -> addr		3929	0					
ANR	3985	Identifier	ptr		3929	0					
ANR	3986	Identifier	addr		3929	1					
ANR	3987	ExpressionStatement	CloseHandle ( ptr -> segment )	76:3:2457:2482	3929	1	True				
ANR	3988	CallExpression	CloseHandle ( ptr -> segment )		3929	0					
ANR	3989	Callee	CloseHandle		3929	0					
ANR	3990	Identifier	CloseHandle		3929	0					
ANR	3991	ArgumentList	ptr -> segment		3929	1					
ANR	3992	Argument	ptr -> segment		3929	0					
ANR	3993	PtrMemberAccess	ptr -> segment		3929	0					
ANR	3994	Identifier	ptr		3929	0					
ANR	3995	Identifier	segment		3929	1					
ANR	3996	ExpressionStatement	UnmapViewOfFile ( ptr -> descriptor )	77:3:2487:2519	3929	2	True				
ANR	3997	CallExpression	UnmapViewOfFile ( ptr -> descriptor )		3929	0					
ANR	3998	Callee	UnmapViewOfFile		3929	0					
ANR	3999	Identifier	UnmapViewOfFile		3929	0					
ANR	4000	ArgumentList	ptr -> descriptor		3929	1					
ANR	4001	Argument	ptr -> descriptor		3929	0					
ANR	4002	PtrMemberAccess	ptr -> descriptor		3929	0					
ANR	4003	Identifier	ptr		3929	0					
ANR	4004	Identifier	descriptor		3929	1					
ANR	4005	ExpressionStatement	CloseHandle ( ptr -> info )	78:3:2524:2546	3929	3	True				
ANR	4006	CallExpression	CloseHandle ( ptr -> info )		3929	0					
ANR	4007	Callee	CloseHandle		3929	0					
ANR	4008	Identifier	CloseHandle		3929	0					
ANR	4009	ArgumentList	ptr -> info		3929	1					
ANR	4010	Argument	ptr -> info		3929	0					
ANR	4011	PtrMemberAccess	ptr -> info		3929	0					
ANR	4012	Identifier	ptr		3929	0					
ANR	4013	Identifier	info		3929	1					
ANR	4014	ExpressionStatement	free ( globals -> shm )	80:2:2554:2572	3929	1	True				
ANR	4015	CallExpression	free ( globals -> shm )		3929	0					
ANR	4016	Callee	free		3929	0					
ANR	4017	Identifier	free		3929	0					
ANR	4018	ArgumentList	globals -> shm		3929	1					
ANR	4019	Argument	globals -> shm		3929	0					
ANR	4020	PtrMemberAccess	globals -> shm		3929	0					
ANR	4021	Identifier	globals		3929	0					
ANR	4022	Identifier	shm		3929	1					
ANR	4023	ExpressionStatement	free ( globals -> comspec )	83:1:2579:2601	3929	3	True				
ANR	4024	CallExpression	free ( globals -> comspec )		3929	0					
ANR	4025	Callee	free		3929	0					
ANR	4026	Identifier	free		3929	0					
ANR	4027	ArgumentList	globals -> comspec		3929	1					
ANR	4028	Argument	globals -> comspec		3929	0					
ANR	4029	PtrMemberAccess	globals -> comspec		3929	0					
ANR	4030	Identifier	globals		3929	0					
ANR	4031	Identifier	comspec		3929	1					
ANR	4032	IfStatement	if ( globals -> impersonation_token && globals -> impersonation_token != INVALID_HANDLE_VALUE )		3929	4					
ANR	4033	Condition	globals -> impersonation_token && globals -> impersonation_token != INVALID_HANDLE_VALUE	85:5:2609:2692	3929	0	True				
ANR	4034	AndExpression	globals -> impersonation_token && globals -> impersonation_token != INVALID_HANDLE_VALUE		3929	0		&&			
ANR	4035	PtrMemberAccess	globals -> impersonation_token		3929	0					
ANR	4036	Identifier	globals		3929	0					
ANR	4037	Identifier	impersonation_token		3929	1					
ANR	4038	EqualityExpression	globals -> impersonation_token != INVALID_HANDLE_VALUE		3929	1		!=			
ANR	4039	PtrMemberAccess	globals -> impersonation_token		3929	0					
ANR	4040	Identifier	globals		3929	0					
ANR	4041	Identifier	impersonation_token		3929	1					
ANR	4042	Identifier	INVALID_HANDLE_VALUE		3929	1					
ANR	4043	CompoundStatement		20:92:445:445	3929	1					
ANR	4044	ExpressionStatement	CloseHandle ( globals -> impersonation_token )	86:2:2700:2741	3929	0	True				
ANR	4045	CallExpression	CloseHandle ( globals -> impersonation_token )		3929	0					
ANR	4046	Callee	CloseHandle		3929	0					
ANR	4047	Identifier	CloseHandle		3929	0					
ANR	4048	ArgumentList	globals -> impersonation_token		3929	1					
ANR	4049	Argument	globals -> impersonation_token		3929	0					
ANR	4050	PtrMemberAccess	globals -> impersonation_token		3929	0					
ANR	4051	Identifier	globals		3929	0					
ANR	4052	Identifier	impersonation_token		3929	1					
ANR	4053	IfStatement	if ( globals -> impersonation_token_sid )		3929	5					
ANR	4054	Condition	globals -> impersonation_token_sid	88:5:2751:2782	3929	0	True				
ANR	4055	PtrMemberAccess	globals -> impersonation_token_sid		3929	0					
ANR	4056	Identifier	globals		3929	0					
ANR	4057	Identifier	impersonation_token_sid		3929	1					
ANR	4058	CompoundStatement		23:39:534:534	3929	1					
ANR	4059	ExpressionStatement	free ( globals -> impersonation_token_sid )	89:2:2789:2827	3929	0	True				
ANR	4060	CallExpression	free ( globals -> impersonation_token_sid )		3929	0					
ANR	4061	Callee	free		3929	0					
ANR	4062	Identifier	free		3929	0					
ANR	4063	ArgumentList	globals -> impersonation_token_sid		3929	1					
ANR	4064	Argument	globals -> impersonation_token_sid		3929	0					
ANR	4065	PtrMemberAccess	globals -> impersonation_token_sid		3929	0					
ANR	4066	Identifier	globals		3929	0					
ANR	4067	Identifier	impersonation_token_sid		3929	1					
ANR	4068	ReturnType	static void		3929	1					
ANR	4069	Identifier	tsrm_win32_dtor		3929	2					
ANR	4070	ParameterList	tsrm_win32_globals * globals		3929	3					
ANR	4071	Parameter	tsrm_win32_globals * globals	65:28:2221:2247	3929	0	True				
ANR	4072	ParameterType	tsrm_win32_globals *		3929	0					
ANR	4073	Identifier	globals		3929	1					
ANR	4074	CFGEntryNode	ENTRY		3929		True				
ANR	4075	CFGExitNode	EXIT		3929		True				
ANR	4076	Symbol	globals -> shm_size		3929						
ANR	4077	Symbol	globals -> shm		3929						
ANR	4078	Symbol	ptr -> info		3929						
ANR	4079	Symbol	globals -> impersonation_token_sid		3929						
ANR	4080	Symbol	globals		3929						
ANR	4081	Symbol	ptr -> addr		3929						
ANR	4082	Symbol	ptr -> segment		3929						
ANR	4083	Symbol	globals -> comspec		3929						
ANR	4084	Symbol	globals -> process		3929						
ANR	4085	Symbol	globals -> impersonation_token		3929						
ANR	4086	Symbol	* globals		3929						
ANR	4087	Symbol	ptr -> descriptor		3929						
ANR	4088	Symbol	INVALID_HANDLE_VALUE		3929						
ANR	4089	Symbol	ptr		3929						
ANR	4090	Symbol	* ptr		3929						
ANR	4091	Function	tsrm_win32_startup	93:0:2835:3068							
ANR	4092	FunctionDef	tsrm_win32_startup ()		4091	0					
ANR	4093	CompoundStatement		94:0:2874:3068	4091	0					
ANR	4094	ExpressionStatement	"ts_allocate_id ( & win32_globals_id , sizeof ( tsrm_win32_globals ) , ( ts_allocate_ctor ) tsrm_win32_ctor , ( ts_allocate_ctor ) tsrm_win32_dtor )"	96:1:2888:3019	4091	0	True				
ANR	4095	CallExpression	"ts_allocate_id ( & win32_globals_id , sizeof ( tsrm_win32_globals ) , ( ts_allocate_ctor ) tsrm_win32_ctor , ( ts_allocate_ctor ) tsrm_win32_dtor )"		4091	0					
ANR	4096	Callee	ts_allocate_id		4091	0					
ANR	4097	Identifier	ts_allocate_id		4091	0					
ANR	4098	ArgumentList	& win32_globals_id		4091	1					
ANR	4099	Argument	& win32_globals_id		4091	0					
ANR	4100	UnaryOperationExpression	& win32_globals_id		4091	0					
ANR	4101	UnaryOperator	&		4091	0					
ANR	4102	Identifier	win32_globals_id		4091	1					
ANR	4103	Argument	sizeof ( tsrm_win32_globals )		4091	1					
ANR	4104	SizeofExpression	sizeof ( tsrm_win32_globals )		4091	0					
ANR	4105	Sizeof	sizeof		4091	0					
ANR	4106	SizeofOperand	tsrm_win32_globals		4091	1					
ANR	4107	Argument	( ts_allocate_ctor ) tsrm_win32_ctor		4091	2					
ANR	4108	CastExpression	( ts_allocate_ctor ) tsrm_win32_ctor		4091	0					
ANR	4109	CastTarget	ts_allocate_ctor		4091	0					
ANR	4110	Identifier	tsrm_win32_ctor		4091	1					
ANR	4111	Argument	( ts_allocate_ctor ) tsrm_win32_dtor		4091	3					
ANR	4112	CastExpression	( ts_allocate_ctor ) tsrm_win32_dtor		4091	0					
ANR	4113	CastTarget	ts_allocate_ctor		4091	0					
ANR	4114	Identifier	tsrm_win32_dtor		4091	1					
ANR	4115	ReturnType	TSRM_API void		4091	1					
ANR	4116	Identifier	tsrm_win32_startup		4091	2					
ANR	4117	ParameterList			4091	3					
ANR	4118	CFGEntryNode	ENTRY		4091		True				
ANR	4119	CFGExitNode	EXIT		4091		True				
ANR	4120	Symbol	tsrm_win32_dtor		4091						
ANR	4121	Symbol	tsrm_win32_ctor		4091						
ANR	4122	Symbol	& win32_globals_id		4091						
ANR	4123	Function	tsrm_win32_shutdown	102:0:3071:3166							
ANR	4124	FunctionDef	tsrm_win32_shutdown ()		4123	0					
ANR	4125	CompoundStatement		103:0:3111:3166	4123	0					
ANR	4126	ExpressionStatement	tsrm_win32_dtor ( & win32_globals )	105:1:3126:3157	4123	0	True				
ANR	4127	CallExpression	tsrm_win32_dtor ( & win32_globals )		4123	0					
ANR	4128	Callee	tsrm_win32_dtor		4123	0					
ANR	4129	Identifier	tsrm_win32_dtor		4123	0					
ANR	4130	ArgumentList	& win32_globals		4123	1					
ANR	4131	Argument	& win32_globals		4123	0					
ANR	4132	UnaryOperationExpression	& win32_globals		4123	0					
ANR	4133	UnaryOperator	&		4123	0					
ANR	4134	Identifier	win32_globals		4123	1					
ANR	4135	ReturnType	TSRM_API void		4123	1					
ANR	4136	Identifier	tsrm_win32_shutdown		4123	2					
ANR	4137	ParameterList			4123	3					
ANR	4138	CFGEntryNode	ENTRY		4123		True				
ANR	4139	CFGExitNode	EXIT		4123		True				
ANR	4140	Symbol	& win32_globals		4123						
ANR	4141	Function	tsrm_win32_get_path_sid_key	109:0:3169:4009							
ANR	4142	FunctionDef	tsrm_win32_get_path_sid_key (const char * pathname)		4141	0					
ANR	4143	CompoundStatement		110:0:3226:4009	4141	0					
ANR	4144	IdentifierDeclStatement	PSID pSid = TWG ( impersonation_token_sid ) ;	111:1:3229:3269	4141	0	True				
ANR	4145	IdentifierDecl	pSid = TWG ( impersonation_token_sid )		4141	0					
ANR	4146	IdentifierDeclType	PSID		4141	0					
ANR	4147	Identifier	pSid		4141	1					
ANR	4148	AssignmentExpression	pSid = TWG ( impersonation_token_sid )		4141	2		=			
ANR	4149	Identifier	pSid		4141	0					
ANR	4150	CallExpression	TWG ( impersonation_token_sid )		4141	1					
ANR	4151	Callee	TWG		4141	0					
ANR	4152	Identifier	TWG		4141	0					
ANR	4153	ArgumentList	impersonation_token_sid		4141	1					
ANR	4154	Argument	impersonation_token_sid		4141	0					
ANR	4155	Identifier	impersonation_token_sid		4141	0					
ANR	4156	IdentifierDeclStatement	TCHAR * ptcSid = NULL ;	112:1:3272:3292	4141	1	True				
ANR	4157	IdentifierDecl	* ptcSid = NULL		4141	0					
ANR	4158	IdentifierDeclType	TCHAR *		4141	0					
ANR	4159	Identifier	ptcSid		4141	1					
ANR	4160	AssignmentExpression	* ptcSid = NULL		4141	2		=			
ANR	4161	Identifier	NULL		4141	0					
ANR	4162	Identifier	NULL		4141	1					
ANR	4163	IdentifierDeclStatement	char * bucket_key = NULL ;	113:1:3295:3318	4141	2	True				
ANR	4164	IdentifierDecl	* bucket_key = NULL		4141	0					
ANR	4165	IdentifierDeclType	char *		4141	0					
ANR	4166	Identifier	bucket_key		4141	1					
ANR	4167	AssignmentExpression	* bucket_key = NULL		4141	2		=			
ANR	4168	Identifier	NULL		4141	0					
ANR	4169	Identifier	NULL		4141	1					
ANR	4170	IdentifierDeclStatement	"size_t ptc_sid_len , pathname_len ;"	114:1:3321:3353	4141	3	True				
ANR	4171	IdentifierDecl	ptc_sid_len		4141	0					
ANR	4172	IdentifierDeclType	size_t		4141	0					
ANR	4173	Identifier	ptc_sid_len		4141	1					
ANR	4174	IdentifierDecl	pathname_len		4141	1					
ANR	4175	IdentifierDeclType	size_t		4141	0					
ANR	4176	Identifier	pathname_len		4141	1					
ANR	4177	ExpressionStatement	pathname_len = strlen ( pathname )	116:1:3357:3388	4141	4	True				
ANR	4178	AssignmentExpression	pathname_len = strlen ( pathname )		4141	0		=			
ANR	4179	Identifier	pathname_len		4141	0					
ANR	4180	CallExpression	strlen ( pathname )		4141	1					
ANR	4181	Callee	strlen		4141	0					
ANR	4182	Identifier	strlen		4141	0					
ANR	4183	ArgumentList	pathname		4141	1					
ANR	4184	Argument	pathname		4141	0					
ANR	4185	Identifier	pathname		4141	0					
ANR	4186	IfStatement	if ( ! pSid )		4141	5					
ANR	4187	Condition	! pSid	118:5:3396:3400	4141	0	True				
ANR	4188	UnaryOperationExpression	! pSid		4141	0					
ANR	4189	UnaryOperator	!		4141	0					
ANR	4190	Identifier	pSid		4141	1					
ANR	4191	CompoundStatement		9:12:176:176	4141	1					
ANR	4192	ExpressionStatement	"bucket_key = ( char * ) HeapAlloc ( GetProcessHeap ( ) , HEAP_ZERO_MEMORY , pathname_len + 1 )"	119:2:3407:3491	4141	0	True				
ANR	4193	AssignmentExpression	"bucket_key = ( char * ) HeapAlloc ( GetProcessHeap ( ) , HEAP_ZERO_MEMORY , pathname_len + 1 )"		4141	0		=			
ANR	4194	Identifier	bucket_key		4141	0					
ANR	4195	CastExpression	"( char * ) HeapAlloc ( GetProcessHeap ( ) , HEAP_ZERO_MEMORY , pathname_len + 1 )"		4141	1					
ANR	4196	CastTarget	char *		4141	0					
ANR	4197	CallExpression	"HeapAlloc ( GetProcessHeap ( ) , HEAP_ZERO_MEMORY , pathname_len + 1 )"		4141	1					
ANR	4198	Callee	HeapAlloc		4141	0					
ANR	4199	Identifier	HeapAlloc		4141	0					
ANR	4200	ArgumentList	GetProcessHeap ( )		4141	1					
ANR	4201	Argument	GetProcessHeap ( )		4141	0					
ANR	4202	CallExpression	GetProcessHeap ( )		4141	0					
ANR	4203	Callee	GetProcessHeap		4141	0					
ANR	4204	Identifier	GetProcessHeap		4141	0					
ANR	4205	ArgumentList			4141	1					
ANR	4206	Argument	HEAP_ZERO_MEMORY		4141	1					
ANR	4207	Identifier	HEAP_ZERO_MEMORY		4141	0					
ANR	4208	Argument	pathname_len + 1		4141	2					
ANR	4209	AdditiveExpression	pathname_len + 1		4141	0		+			
ANR	4210	Identifier	pathname_len		4141	0					
ANR	4211	PrimaryExpression	1		4141	1					
ANR	4212	IfStatement	if ( ! bucket_key )		4141	1					
ANR	4213	Condition	! bucket_key	120:6:3499:3509	4141	0	True				
ANR	4214	UnaryOperationExpression	! bucket_key		4141	0					
ANR	4215	UnaryOperator	!		4141	0					
ANR	4216	Identifier	bucket_key		4141	1					
ANR	4217	CompoundStatement		11:19:285:285	4141	1					
ANR	4218	ReturnStatement	return NULL ;	121:3:3517:3528	4141	0	True				
ANR	4219	Identifier	NULL		4141	0					
ANR	4220	ExpressionStatement	"memcpy ( bucket_key , pathname , pathname_len )"	123:2:3536:3578	4141	2	True				
ANR	4221	CallExpression	"memcpy ( bucket_key , pathname , pathname_len )"		4141	0					
ANR	4222	Callee	memcpy		4141	0					
ANR	4223	Identifier	memcpy		4141	0					
ANR	4224	ArgumentList	bucket_key		4141	1					
ANR	4225	Argument	bucket_key		4141	0					
ANR	4226	Identifier	bucket_key		4141	0					
ANR	4227	Argument	pathname		4141	1					
ANR	4228	Identifier	pathname		4141	0					
ANR	4229	Argument	pathname_len		4141	2					
ANR	4230	Identifier	pathname_len		4141	0					
ANR	4231	ReturnStatement	return bucket_key ;	124:2:3582:3599	4141	3	True				
ANR	4232	Identifier	bucket_key		4141	0					
ANR	4233	IfStatement	"if ( ! ConvertSidToStringSid ( pSid , & ptcSid ) )"		4141	6					
ANR	4234	Condition	"! ConvertSidToStringSid ( pSid , & ptcSid )"	127:5:3610:3646	4141	0	True				
ANR	4235	UnaryOperationExpression	"! ConvertSidToStringSid ( pSid , & ptcSid )"		4141	0					
ANR	4236	UnaryOperator	!		4141	0					
ANR	4237	CallExpression	"ConvertSidToStringSid ( pSid , & ptcSid )"		4141	1					
ANR	4238	Callee	ConvertSidToStringSid		4141	0					
ANR	4239	Identifier	ConvertSidToStringSid		4141	0					
ANR	4240	ArgumentList	pSid		4141	1					
ANR	4241	Argument	pSid		4141	0					
ANR	4242	Identifier	pSid		4141	0					
ANR	4243	Argument	& ptcSid		4141	1					
ANR	4244	UnaryOperationExpression	& ptcSid		4141	0					
ANR	4245	UnaryOperator	&		4141	0					
ANR	4246	Identifier	ptcSid		4141	1					
ANR	4247	CompoundStatement		18:44:422:422	4141	1					
ANR	4248	ReturnStatement	return NULL ;	128:2:3653:3664	4141	0	True				
ANR	4249	Identifier	NULL		4141	0					
ANR	4250	ExpressionStatement	ptc_sid_len = strlen ( ptcSid )	132:1:3672:3700	4141	7	True				
ANR	4251	AssignmentExpression	ptc_sid_len = strlen ( ptcSid )		4141	0		=			
ANR	4252	Identifier	ptc_sid_len		4141	0					
ANR	4253	CallExpression	strlen ( ptcSid )		4141	1					
ANR	4254	Callee	strlen		4141	0					
ANR	4255	Identifier	strlen		4141	0					
ANR	4256	ArgumentList	ptcSid		4141	1					
ANR	4257	Argument	ptcSid		4141	0					
ANR	4258	Identifier	ptcSid		4141	0					
ANR	4259	ExpressionStatement	"bucket_key = ( char * ) HeapAlloc ( GetProcessHeap ( ) , HEAP_ZERO_MEMORY , pathname_len + ptc_sid_len + 1 )"	133:1:3703:3801	4141	8	True				
ANR	4260	AssignmentExpression	"bucket_key = ( char * ) HeapAlloc ( GetProcessHeap ( ) , HEAP_ZERO_MEMORY , pathname_len + ptc_sid_len + 1 )"		4141	0		=			
ANR	4261	Identifier	bucket_key		4141	0					
ANR	4262	CastExpression	"( char * ) HeapAlloc ( GetProcessHeap ( ) , HEAP_ZERO_MEMORY , pathname_len + ptc_sid_len + 1 )"		4141	1					
ANR	4263	CastTarget	char *		4141	0					
ANR	4264	CallExpression	"HeapAlloc ( GetProcessHeap ( ) , HEAP_ZERO_MEMORY , pathname_len + ptc_sid_len + 1 )"		4141	1					
ANR	4265	Callee	HeapAlloc		4141	0					
ANR	4266	Identifier	HeapAlloc		4141	0					
ANR	4267	ArgumentList	GetProcessHeap ( )		4141	1					
ANR	4268	Argument	GetProcessHeap ( )		4141	0					
ANR	4269	CallExpression	GetProcessHeap ( )		4141	0					
ANR	4270	Callee	GetProcessHeap		4141	0					
ANR	4271	Identifier	GetProcessHeap		4141	0					
ANR	4272	ArgumentList			4141	1					
ANR	4273	Argument	HEAP_ZERO_MEMORY		4141	1					
ANR	4274	Identifier	HEAP_ZERO_MEMORY		4141	0					
ANR	4275	Argument	pathname_len + ptc_sid_len + 1		4141	2					
ANR	4276	AdditiveExpression	pathname_len + ptc_sid_len + 1		4141	0		+			
ANR	4277	Identifier	pathname_len		4141	0					
ANR	4278	AdditiveExpression	ptc_sid_len + 1		4141	1		+			
ANR	4279	Identifier	ptc_sid_len		4141	0					
ANR	4280	PrimaryExpression	1		4141	1					
ANR	4281	IfStatement	if ( ! bucket_key )		4141	9					
ANR	4282	Condition	! bucket_key	134:5:3808:3818	4141	0	True				
ANR	4283	UnaryOperationExpression	! bucket_key		4141	0					
ANR	4284	UnaryOperator	!		4141	0					
ANR	4285	Identifier	bucket_key		4141	1					
ANR	4286	CompoundStatement		25:18:594:594	4141	1					
ANR	4287	ExpressionStatement	LocalFree ( ptcSid )	135:2:3825:3842	4141	0	True				
ANR	4288	CallExpression	LocalFree ( ptcSid )		4141	0					
ANR	4289	Callee	LocalFree		4141	0					
ANR	4290	Identifier	LocalFree		4141	0					
ANR	4291	ArgumentList	ptcSid		4141	1					
ANR	4292	Argument	ptcSid		4141	0					
ANR	4293	Identifier	ptcSid		4141	0					
ANR	4294	ReturnStatement	return NULL ;	136:2:3846:3857	4141	1	True				
ANR	4295	Identifier	NULL		4141	0					
ANR	4296	ExpressionStatement	"memcpy ( bucket_key , ptcSid , ptc_sid_len )"	139:1:3864:3903	4141	10	True				
ANR	4297	CallExpression	"memcpy ( bucket_key , ptcSid , ptc_sid_len )"		4141	0					
ANR	4298	Callee	memcpy		4141	0					
ANR	4299	Identifier	memcpy		4141	0					
ANR	4300	ArgumentList	bucket_key		4141	1					
ANR	4301	Argument	bucket_key		4141	0					
ANR	4302	Identifier	bucket_key		4141	0					
ANR	4303	Argument	ptcSid		4141	1					
ANR	4304	Identifier	ptcSid		4141	0					
ANR	4305	Argument	ptc_sid_len		4141	2					
ANR	4306	Identifier	ptc_sid_len		4141	0					
ANR	4307	ExpressionStatement	"memcpy ( bucket_key + ptc_sid_len , pathname , pathname_len + 1 )"	140:1:3906:3966	4141	11	True				
ANR	4308	CallExpression	"memcpy ( bucket_key + ptc_sid_len , pathname , pathname_len + 1 )"		4141	0					
ANR	4309	Callee	memcpy		4141	0					
ANR	4310	Identifier	memcpy		4141	0					
ANR	4311	ArgumentList	bucket_key + ptc_sid_len		4141	1					
ANR	4312	Argument	bucket_key + ptc_sid_len		4141	0					
ANR	4313	AdditiveExpression	bucket_key + ptc_sid_len		4141	0		+			
ANR	4314	Identifier	bucket_key		4141	0					
ANR	4315	Identifier	ptc_sid_len		4141	1					
ANR	4316	Argument	pathname		4141	1					
ANR	4317	Identifier	pathname		4141	0					
ANR	4318	Argument	pathname_len + 1		4141	2					
ANR	4319	AdditiveExpression	pathname_len + 1		4141	0		+			
ANR	4320	Identifier	pathname_len		4141	0					
ANR	4321	PrimaryExpression	1		4141	1					
ANR	4322	ExpressionStatement	LocalFree ( ptcSid )	142:1:3970:3987	4141	12	True				
ANR	4323	CallExpression	LocalFree ( ptcSid )		4141	0					
ANR	4324	Callee	LocalFree		4141	0					
ANR	4325	Identifier	LocalFree		4141	0					
ANR	4326	ArgumentList	ptcSid		4141	1					
ANR	4327	Argument	ptcSid		4141	0					
ANR	4328	Identifier	ptcSid		4141	0					
ANR	4329	ReturnStatement	return bucket_key ;	143:1:3990:4007	4141	13	True				
ANR	4330	Identifier	bucket_key		4141	0					
ANR	4331	ReturnType	char *		4141	1					
ANR	4332	Identifier	tsrm_win32_get_path_sid_key		4141	2					
ANR	4333	ParameterList	const char * pathname		4141	3					
ANR	4334	Parameter	const char * pathname	109:35:3204:3223	4141	0	True				
ANR	4335	ParameterType	const char *		4141	0					
ANR	4336	Identifier	pathname		4141	1					
ANR	4337	CFGEntryNode	ENTRY		4141		True				
ANR	4338	CFGExitNode	EXIT		4141		True				
ANR	4339	Symbol	ptcSid		4141						
ANR	4340	Symbol	ConvertSidToStringSid		4141						
ANR	4341	Symbol	NULL		4141						
ANR	4342	Symbol	TWG		4141						
ANR	4343	Symbol	ptc_sid_len		4141						
ANR	4344	Symbol	pathname_len		4141						
ANR	4345	Symbol	pSid		4141						
ANR	4346	Symbol	& ptcSid		4141						
ANR	4347	Symbol	GetProcessHeap		4141						
ANR	4348	Symbol	pathname		4141						
ANR	4349	Symbol	impersonation_token_sid		4141						
ANR	4350	Symbol	strlen		4141						
ANR	4351	Symbol	bucket_key		4141						
ANR	4352	Symbol	HEAP_ZERO_MEMORY		4141						
ANR	4353	Symbol	HeapAlloc		4141						
ANR	4354	Function	tsrm_win32_get_token_sid	147:0:4013:5182							
ANR	4355	FunctionDef	tsrm_win32_get_token_sid (HANDLE hToken)		4354	0					
ANR	4356	CompoundStatement		148:0:4058:5182	4354	0					
ANR	4357	IdentifierDeclStatement	DWORD dwLength = 0 ;	149:1:4061:4079	4354	0	True				
ANR	4358	IdentifierDecl	dwLength = 0		4354	0					
ANR	4359	IdentifierDeclType	DWORD		4354	0					
ANR	4360	Identifier	dwLength		4354	1					
ANR	4361	AssignmentExpression	dwLength = 0		4354	2		=			
ANR	4362	Identifier	dwLength		4354	0					
ANR	4363	PrimaryExpression	0		4354	1					
ANR	4364	IdentifierDeclStatement	PTOKEN_USER pTokenUser = NULL ;	150:1:4082:4111	4354	1	True				
ANR	4365	IdentifierDecl	pTokenUser = NULL		4354	0					
ANR	4366	IdentifierDeclType	PTOKEN_USER		4354	0					
ANR	4367	Identifier	pTokenUser		4354	1					
ANR	4368	AssignmentExpression	pTokenUser = NULL		4354	2		=			
ANR	4369	Identifier	NULL		4354	0					
ANR	4370	Identifier	NULL		4354	1					
ANR	4371	IdentifierDeclStatement	DWORD sid_len ;	151:1:4114:4127	4354	2	True				
ANR	4372	IdentifierDecl	sid_len		4354	0					
ANR	4373	IdentifierDeclType	DWORD		4354	0					
ANR	4374	Identifier	sid_len		4354	1					
ANR	4375	IdentifierDeclStatement	PSID pResultSid = NULL ;	152:1:4130:4152	4354	3	True				
ANR	4376	IdentifierDecl	pResultSid = NULL		4354	0					
ANR	4377	IdentifierDeclType	PSID		4354	0					
ANR	4378	Identifier	pResultSid		4354	1					
ANR	4379	AssignmentExpression	pResultSid = NULL		4354	2		=			
ANR	4380	Identifier	NULL		4354	0					
ANR	4381	Identifier	NULL		4354	1					
ANR	4382	IfStatement	"if ( ! GetTokenInformation ( hToken , TokenUser , ( LPVOID ) pTokenUser , 0 , & dwLength ) )"		4354	4					
ANR	4383	Condition	"! GetTokenInformation ( hToken , TokenUser , ( LPVOID ) pTokenUser , 0 , & dwLength )"	155:5:4214:4291	4354	0	True				
ANR	4384	UnaryOperationExpression	"! GetTokenInformation ( hToken , TokenUser , ( LPVOID ) pTokenUser , 0 , & dwLength )"		4354	0					
ANR	4385	UnaryOperator	!		4354	0					
ANR	4386	CallExpression	"GetTokenInformation ( hToken , TokenUser , ( LPVOID ) pTokenUser , 0 , & dwLength )"		4354	1					
ANR	4387	Callee	GetTokenInformation		4354	0					
ANR	4388	Identifier	GetTokenInformation		4354	0					
ANR	4389	ArgumentList	hToken		4354	1					
ANR	4390	Argument	hToken		4354	0					
ANR	4391	Identifier	hToken		4354	0					
ANR	4392	Argument	TokenUser		4354	1					
ANR	4393	Identifier	TokenUser		4354	0					
ANR	4394	Argument	( LPVOID ) pTokenUser		4354	2					
ANR	4395	CastExpression	( LPVOID ) pTokenUser		4354	0					
ANR	4396	CastTarget	LPVOID		4354	0					
ANR	4397	Identifier	pTokenUser		4354	1					
ANR	4398	Argument	0		4354	3					
ANR	4399	PrimaryExpression	0		4354	0					
ANR	4400	Argument	& dwLength		4354	4					
ANR	4401	UnaryOperationExpression	& dwLength		4354	0					
ANR	4402	UnaryOperator	&		4354	0					
ANR	4403	Identifier	dwLength		4354	1					
ANR	4404	CompoundStatement		9:59:236:236	4354	1					
ANR	4405	IfStatement	if ( GetLastError ( ) != ERROR_INSUFFICIENT_BUFFER )		4354	0					
ANR	4406	Condition	GetLastError ( ) != ERROR_INSUFFICIENT_BUFFER	157:6:4303:4345	4354	0	True				
ANR	4407	EqualityExpression	GetLastError ( ) != ERROR_INSUFFICIENT_BUFFER		4354	0		!=			
ANR	4408	CallExpression	GetLastError ( )		4354	0					
ANR	4409	Callee	GetLastError		4354	0					
ANR	4410	Identifier	GetLastError		4354	0					
ANR	4411	ArgumentList			4354	1					
ANR	4412	Identifier	ERROR_INSUFFICIENT_BUFFER		4354	1					
ANR	4413	CompoundStatement		10:51:289:289	4354	1					
ANR	4414	GotoStatement	goto Finished ;	158:3:4353:4366	4354	0	True				
ANR	4415	Identifier	Finished		4354	0					
ANR	4416	ExpressionStatement	"pTokenUser = ( PTOKEN_USER ) HeapAlloc ( GetProcessHeap ( ) , HEAP_ZERO_MEMORY , dwLength )"	161:2:4375:4456	4354	1	True				
ANR	4417	AssignmentExpression	"pTokenUser = ( PTOKEN_USER ) HeapAlloc ( GetProcessHeap ( ) , HEAP_ZERO_MEMORY , dwLength )"		4354	0		=			
ANR	4418	Identifier	pTokenUser		4354	0					
ANR	4419	CastExpression	"( PTOKEN_USER ) HeapAlloc ( GetProcessHeap ( ) , HEAP_ZERO_MEMORY , dwLength )"		4354	1					
ANR	4420	CastTarget	PTOKEN_USER		4354	0					
ANR	4421	CallExpression	"HeapAlloc ( GetProcessHeap ( ) , HEAP_ZERO_MEMORY , dwLength )"		4354	1					
ANR	4422	Callee	HeapAlloc		4354	0					
ANR	4423	Identifier	HeapAlloc		4354	0					
ANR	4424	ArgumentList	GetProcessHeap ( )		4354	1					
ANR	4425	Argument	GetProcessHeap ( )		4354	0					
ANR	4426	CallExpression	GetProcessHeap ( )		4354	0					
ANR	4427	Callee	GetProcessHeap		4354	0					
ANR	4428	Identifier	GetProcessHeap		4354	0					
ANR	4429	ArgumentList			4354	1					
ANR	4430	Argument	HEAP_ZERO_MEMORY		4354	1					
ANR	4431	Identifier	HEAP_ZERO_MEMORY		4354	0					
ANR	4432	Argument	dwLength		4354	2					
ANR	4433	Identifier	dwLength		4354	0					
ANR	4434	IfStatement	if ( pTokenUser == NULL )		4354	2					
ANR	4435	Condition	pTokenUser == NULL	162:6:4464:4481	4354	0	True				
ANR	4436	EqualityExpression	pTokenUser == NULL		4354	0		==			
ANR	4437	Identifier	pTokenUser		4354	0					
ANR	4438	Identifier	NULL		4354	1					
ANR	4439	CompoundStatement		15:26:425:425	4354	1					
ANR	4440	GotoStatement	goto Finished ;	163:3:4489:4502	4354	0	True				
ANR	4441	Identifier	Finished		4354	0					
ANR	4442	IfStatement	"if ( ! GetTokenInformation ( hToken , TokenUser , ( LPVOID ) pTokenUser , dwLength , & dwLength ) )"		4354	5					
ANR	4443	Condition	"! GetTokenInformation ( hToken , TokenUser , ( LPVOID ) pTokenUser , dwLength , & dwLength )"	168:5:4541:4624	4354	0	True				
ANR	4444	UnaryOperationExpression	"! GetTokenInformation ( hToken , TokenUser , ( LPVOID ) pTokenUser , dwLength , & dwLength )"		4354	0					
ANR	4445	UnaryOperator	!		4354	0					
ANR	4446	CallExpression	"GetTokenInformation ( hToken , TokenUser , ( LPVOID ) pTokenUser , dwLength , & dwLength )"		4354	1					
ANR	4447	Callee	GetTokenInformation		4354	0					
ANR	4448	Identifier	GetTokenInformation		4354	0					
ANR	4449	ArgumentList	hToken		4354	1					
ANR	4450	Argument	hToken		4354	0					
ANR	4451	Identifier	hToken		4354	0					
ANR	4452	Argument	TokenUser		4354	1					
ANR	4453	Identifier	TokenUser		4354	0					
ANR	4454	Argument	( LPVOID ) pTokenUser		4354	2					
ANR	4455	CastExpression	( LPVOID ) pTokenUser		4354	0					
ANR	4456	CastTarget	LPVOID		4354	0					
ANR	4457	Identifier	pTokenUser		4354	1					
ANR	4458	Argument	dwLength		4354	3					
ANR	4459	Identifier	dwLength		4354	0					
ANR	4460	Argument	& dwLength		4354	4					
ANR	4461	UnaryOperationExpression	& dwLength		4354	0					
ANR	4462	UnaryOperator	&		4354	0					
ANR	4463	Identifier	dwLength		4354	1					
ANR	4464	CompoundStatement		22:64:568:568	4354	1					
ANR	4465	GotoStatement	goto Finished ;	170:2:4631:4644	4354	0	True				
ANR	4466	Identifier	Finished		4354	0					
ANR	4467	ExpressionStatement	sid_len = GetLengthSid ( pTokenUser -> User . Sid )	173:1:4651:4695	4354	6	True				
ANR	4468	AssignmentExpression	sid_len = GetLengthSid ( pTokenUser -> User . Sid )		4354	0		=			
ANR	4469	Identifier	sid_len		4354	0					
ANR	4470	CallExpression	GetLengthSid ( pTokenUser -> User . Sid )		4354	1					
ANR	4471	Callee	GetLengthSid		4354	0					
ANR	4472	Identifier	GetLengthSid		4354	0					
ANR	4473	ArgumentList	pTokenUser -> User . Sid		4354	1					
ANR	4474	Argument	pTokenUser -> User . Sid		4354	0					
ANR	4475	MemberAccess	pTokenUser -> User . Sid		4354	0					
ANR	4476	PtrMemberAccess	pTokenUser -> User		4354	0					
ANR	4477	Identifier	pTokenUser		4354	0					
ANR	4478	Identifier	User		4354	1					
ANR	4479	Identifier	Sid		4354	1					
ANR	4480	ExpressionStatement	pResultSid = malloc ( sid_len )	176:1:4765:4793	4354	7	True				
ANR	4481	AssignmentExpression	pResultSid = malloc ( sid_len )		4354	0		=			
ANR	4482	Identifier	pResultSid		4354	0					
ANR	4483	CallExpression	malloc ( sid_len )		4354	1					
ANR	4484	Callee	malloc		4354	0					
ANR	4485	Identifier	malloc		4354	0					
ANR	4486	ArgumentList	sid_len		4354	1					
ANR	4487	Argument	sid_len		4354	0					
ANR	4488	Identifier	sid_len		4354	0					
ANR	4489	IfStatement	if ( ! pResultSid )		4354	8					
ANR	4490	Condition	! pResultSid	177:5:4800:4810	4354	0	True				
ANR	4491	UnaryOperationExpression	! pResultSid		4354	0					
ANR	4492	UnaryOperator	!		4354	0					
ANR	4493	Identifier	pResultSid		4354	1					
ANR	4494	CompoundStatement		30:18:754:754	4354	1					
ANR	4495	GotoStatement	goto Finished ;	178:2:4817:4830	4354	0	True				
ANR	4496	Identifier	Finished		4354	0					
ANR	4497	IfStatement	"if ( ! CopySid ( sid_len , pResultSid , pTokenUser -> User . Sid ) )"		4354	9					
ANR	4498	Condition	"! CopySid ( sid_len , pResultSid , pTokenUser -> User . Sid )"	180:5:4840:4890	4354	0	True				
ANR	4499	UnaryOperationExpression	"! CopySid ( sid_len , pResultSid , pTokenUser -> User . Sid )"		4354	0					
ANR	4500	UnaryOperator	!		4354	0					
ANR	4501	CallExpression	"CopySid ( sid_len , pResultSid , pTokenUser -> User . Sid )"		4354	1					
ANR	4502	Callee	CopySid		4354	0					
ANR	4503	Identifier	CopySid		4354	0					
ANR	4504	ArgumentList	sid_len		4354	1					
ANR	4505	Argument	sid_len		4354	0					
ANR	4506	Identifier	sid_len		4354	0					
ANR	4507	Argument	pResultSid		4354	1					
ANR	4508	Identifier	pResultSid		4354	0					
ANR	4509	Argument	pTokenUser -> User . Sid		4354	2					
ANR	4510	MemberAccess	pTokenUser -> User . Sid		4354	0					
ANR	4511	PtrMemberAccess	pTokenUser -> User		4354	0					
ANR	4512	Identifier	pTokenUser		4354	0					
ANR	4513	Identifier	User		4354	1					
ANR	4514	Identifier	Sid		4354	1					
ANR	4515	CompoundStatement		33:58:834:834	4354	1					
ANR	4516	GotoStatement	goto Finished ;	181:2:4897:4910	4354	0	True				
ANR	4517	Identifier	Finished		4354	0					
ANR	4518	ExpressionStatement	"HeapFree ( GetProcessHeap ( ) , 0 , ( LPVOID ) pTokenUser )"	183:1:4916:4965	4354	10	True				
ANR	4519	CallExpression	"HeapFree ( GetProcessHeap ( ) , 0 , ( LPVOID ) pTokenUser )"		4354	0					
ANR	4520	Callee	HeapFree		4354	0					
ANR	4521	Identifier	HeapFree		4354	0					
ANR	4522	ArgumentList	GetProcessHeap ( )		4354	1					
ANR	4523	Argument	GetProcessHeap ( )		4354	0					
ANR	4524	CallExpression	GetProcessHeap ( )		4354	0					
ANR	4525	Callee	GetProcessHeap		4354	0					
ANR	4526	Identifier	GetProcessHeap		4354	0					
ANR	4527	ArgumentList			4354	1					
ANR	4528	Argument	0		4354	1					
ANR	4529	PrimaryExpression	0		4354	0					
ANR	4530	Argument	( LPVOID ) pTokenUser		4354	2					
ANR	4531	CastExpression	( LPVOID ) pTokenUser		4354	0					
ANR	4532	CastTarget	LPVOID		4354	0					
ANR	4533	Identifier	pTokenUser		4354	1					
ANR	4534	ReturnStatement	return pResultSid ;	184:1:4968:4985	4354	11	True				
ANR	4535	Identifier	pResultSid		4354	0					
ANR	4536	Label	Finished :	186:0:4988:4996	4354	12	True				
ANR	4537	Identifier	Finished		4354	0					
ANR	4538	IfStatement	if ( pResultSid )		4354	13					
ANR	4539	Condition	pResultSid	187:5:5003:5012	4354	0	True				
ANR	4540	Identifier	pResultSid		4354	0					
ANR	4541	CompoundStatement		40:17:956:956	4354	1					
ANR	4542	ExpressionStatement	free ( pResultSid )	188:2:5019:5035	4354	0	True				
ANR	4543	CallExpression	free ( pResultSid )		4354	0					
ANR	4544	Callee	free		4354	0					
ANR	4545	Identifier	free		4354	0					
ANR	4546	ArgumentList	pResultSid		4354	1					
ANR	4547	Argument	pResultSid		4354	0					
ANR	4548	Identifier	pResultSid		4354	0					
ANR	4549	IfStatement	if ( pTokenUser != NULL )		4354	14					
ANR	4550	Condition	pTokenUser != NULL	191:5:5090:5107	4354	0	True				
ANR	4551	EqualityExpression	pTokenUser != NULL		4354	0		!=			
ANR	4552	Identifier	pTokenUser		4354	0					
ANR	4553	Identifier	NULL		4354	1					
ANR	4554	CompoundStatement		44:25:1051:1051	4354	1					
ANR	4555	ExpressionStatement	"HeapFree ( GetProcessHeap ( ) , 0 , ( LPVOID ) pTokenUser )"	192:2:5114:5163	4354	0	True				
ANR	4556	CallExpression	"HeapFree ( GetProcessHeap ( ) , 0 , ( LPVOID ) pTokenUser )"		4354	0					
ANR	4557	Callee	HeapFree		4354	0					
ANR	4558	Identifier	HeapFree		4354	0					
ANR	4559	ArgumentList	GetProcessHeap ( )		4354	1					
ANR	4560	Argument	GetProcessHeap ( )		4354	0					
ANR	4561	CallExpression	GetProcessHeap ( )		4354	0					
ANR	4562	Callee	GetProcessHeap		4354	0					
ANR	4563	Identifier	GetProcessHeap		4354	0					
ANR	4564	ArgumentList			4354	1					
ANR	4565	Argument	0		4354	1					
ANR	4566	PrimaryExpression	0		4354	0					
ANR	4567	Argument	( LPVOID ) pTokenUser		4354	2					
ANR	4568	CastExpression	( LPVOID ) pTokenUser		4354	0					
ANR	4569	CastTarget	LPVOID		4354	0					
ANR	4570	Identifier	pTokenUser		4354	1					
ANR	4571	ReturnStatement	return NULL ;	194:1:5169:5180	4354	15	True				
ANR	4572	Identifier	NULL		4354	0					
ANR	4573	ReturnType	PSID		4354	1					
ANR	4574	Identifier	tsrm_win32_get_token_sid		4354	2					
ANR	4575	ParameterList	HANDLE hToken		4354	3					
ANR	4576	Parameter	HANDLE hToken	147:30:4043:4055	4354	0	True				
ANR	4577	ParameterType	HANDLE		4354	0					
ANR	4578	Identifier	hToken		4354	1					
ANR	4579	CFGEntryNode	ENTRY		4354		True				
ANR	4580	CFGExitNode	EXIT		4354		True				
ANR	4581	Symbol	GetLengthSid		4354						
ANR	4582	Symbol	malloc		4354						
ANR	4583	Symbol	NULL		4354						
ANR	4584	Symbol	sid_len		4354						
ANR	4585	Symbol	TokenUser		4354						
ANR	4586	Symbol	ERROR_INSUFFICIENT_BUFFER		4354						
ANR	4587	Symbol	GetTokenInformation		4354						
ANR	4588	Symbol	GetProcessHeap		4354						
ANR	4589	Symbol	& dwLength		4354						
ANR	4590	Symbol	* pTokenUser		4354						
ANR	4591	Symbol	CopySid		4354						
ANR	4592	Symbol	GetLastError		4354						
ANR	4593	Symbol	dwLength		4354						
ANR	4594	Symbol	pTokenUser		4354						
ANR	4595	Symbol	pTokenUser -> User . Sid		4354						
ANR	4596	Symbol	hToken		4354						
ANR	4597	Symbol	HEAP_ZERO_MEMORY		4354						
ANR	4598	Symbol	pTokenUser -> User		4354						
ANR	4599	Symbol	pResultSid		4354						
ANR	4600	Symbol	HeapAlloc		4354						
ANR	4601	Function	tsrm_win32_access	197:0:5185:10779							
ANR	4602	FunctionDef	"tsrm_win32_access (const char * pathname , int mode)"		4601	0					
ANR	4603	CompoundStatement		198:0:5248:10779	4601	0					
ANR	4604	IdentifierDeclStatement	time_t t ;	199:1:5251:5259	4601	0	True				
ANR	4605	IdentifierDecl	t		4601	0					
ANR	4606	IdentifierDeclType	time_t		4601	0					
ANR	4607	Identifier	t		4601	1					
ANR	4608	IdentifierDeclStatement	HANDLE thread_token = NULL ;	200:1:5262:5288	4601	1	True				
ANR	4609	IdentifierDecl	thread_token = NULL		4601	0					
ANR	4610	IdentifierDeclType	HANDLE		4601	0					
ANR	4611	Identifier	thread_token		4601	1					
ANR	4612	AssignmentExpression	thread_token = NULL		4601	2		=			
ANR	4613	Identifier	NULL		4601	0					
ANR	4614	Identifier	NULL		4601	1					
ANR	4615	IdentifierDeclStatement	PSID token_sid ;	201:1:5291:5305	4601	2	True				
ANR	4616	IdentifierDecl	token_sid		4601	0					
ANR	4617	IdentifierDeclType	PSID		4601	0					
ANR	4618	Identifier	token_sid		4601	1					
ANR	4619	IdentifierDeclStatement	SECURITY_INFORMATION sec_info = OWNER_SECURITY_INFORMATION | GROUP_SECURITY_INFORMATION | DACL_SECURITY_INFORMATION ;	202:1:5308:5423	4601	3	True				
ANR	4620	IdentifierDecl	sec_info = OWNER_SECURITY_INFORMATION | GROUP_SECURITY_INFORMATION | DACL_SECURITY_INFORMATION		4601	0					
ANR	4621	IdentifierDeclType	SECURITY_INFORMATION		4601	0					
ANR	4622	Identifier	sec_info		4601	1					
ANR	4623	AssignmentExpression	sec_info = OWNER_SECURITY_INFORMATION | GROUP_SECURITY_INFORMATION | DACL_SECURITY_INFORMATION		4601	2		=			
ANR	4624	Identifier	sec_info		4601	0					
ANR	4625	InclusiveOrExpression	OWNER_SECURITY_INFORMATION | GROUP_SECURITY_INFORMATION | DACL_SECURITY_INFORMATION		4601	1		|			
ANR	4626	Identifier	OWNER_SECURITY_INFORMATION		4601	0					
ANR	4627	InclusiveOrExpression	GROUP_SECURITY_INFORMATION | DACL_SECURITY_INFORMATION		4601	1		|			
ANR	4628	Identifier	GROUP_SECURITY_INFORMATION		4601	0					
ANR	4629	Identifier	DACL_SECURITY_INFORMATION		4601	1					
ANR	4630	IdentifierDeclStatement	"GENERIC_MAPPING gen_map = { FILE_GENERIC_READ , FILE_GENERIC_WRITE , FILE_GENERIC_EXECUTE , FILE_ALL_ACCESS } ;"	203:1:5426:5532	4601	4	True				
ANR	4631	IdentifierDecl	"gen_map = { FILE_GENERIC_READ , FILE_GENERIC_WRITE , FILE_GENERIC_EXECUTE , FILE_ALL_ACCESS }"		4601	0					
ANR	4632	IdentifierDeclType	GENERIC_MAPPING		4601	0					
ANR	4633	Identifier	gen_map		4601	1					
ANR	4634	AssignmentExpression	"gen_map = { FILE_GENERIC_READ , FILE_GENERIC_WRITE , FILE_GENERIC_EXECUTE , FILE_ALL_ACCESS }"		4601	2		=			
ANR	4635	Identifier	gen_map		4601	0					
ANR	4636	InitializerList	FILE_GENERIC_READ		4601	1					
ANR	4637	Identifier	FILE_GENERIC_READ		4601	0					
ANR	4638	Identifier	FILE_GENERIC_WRITE		4601	1					
ANR	4639	Identifier	FILE_GENERIC_EXECUTE		4601	2					
ANR	4640	Identifier	FILE_ALL_ACCESS		4601	3					
ANR	4641	IdentifierDeclStatement	DWORD priv_set_length = sizeof ( PRIVILEGE_SET ) ;	204:1:5535:5580	4601	5	True				
ANR	4642	IdentifierDecl	priv_set_length = sizeof ( PRIVILEGE_SET )		4601	0					
ANR	4643	IdentifierDeclType	DWORD		4601	0					
ANR	4644	Identifier	priv_set_length		4601	1					
ANR	4645	AssignmentExpression	priv_set_length = sizeof ( PRIVILEGE_SET )		4601	2		=			
ANR	4646	Identifier	priv_set_length		4601	0					
ANR	4647	SizeofExpression	sizeof ( PRIVILEGE_SET )		4601	1					
ANR	4648	Sizeof	sizeof		4601	0					
ANR	4649	SizeofOperand	PRIVILEGE_SET		4601	1					
ANR	4650	IdentifierDeclStatement	PRIVILEGE_SET privilege_set = { 0 } ;	206:1:5584:5617	4601	6	True				
ANR	4651	IdentifierDecl	privilege_set = { 0 }		4601	0					
ANR	4652	IdentifierDeclType	PRIVILEGE_SET		4601	0					
ANR	4653	Identifier	privilege_set		4601	1					
ANR	4654	AssignmentExpression	privilege_set = { 0 }		4601	2		=			
ANR	4655	Identifier	privilege_set		4601	0					
ANR	4656	InitializerList	0		4601	1					
ANR	4657	PrimaryExpression	0		4601	0					
ANR	4658	IdentifierDeclStatement	"DWORD sec_desc_length = 0 , desired_access = 0 , granted_access = 0 ;"	207:1:5620:5685	4601	7	True				
ANR	4659	IdentifierDecl	sec_desc_length = 0		4601	0					
ANR	4660	IdentifierDeclType	DWORD		4601	0					
ANR	4661	Identifier	sec_desc_length		4601	1					
ANR	4662	AssignmentExpression	sec_desc_length = 0		4601	2		=			
ANR	4663	Identifier	sec_desc_length		4601	0					
ANR	4664	PrimaryExpression	0		4601	1					
ANR	4665	IdentifierDecl	desired_access = 0		4601	1					
ANR	4666	IdentifierDeclType	DWORD		4601	0					
ANR	4667	Identifier	desired_access		4601	1					
ANR	4668	AssignmentExpression	desired_access = 0		4601	2		=			
ANR	4669	Identifier	desired_access		4601	0					
ANR	4670	PrimaryExpression	0		4601	1					
ANR	4671	IdentifierDecl	granted_access = 0		4601	2					
ANR	4672	IdentifierDeclType	DWORD		4601	0					
ANR	4673	Identifier	granted_access		4601	1					
ANR	4674	AssignmentExpression	granted_access = 0		4601	2		=			
ANR	4675	Identifier	granted_access		4601	0					
ANR	4676	PrimaryExpression	0		4601	1					
ANR	4677	IdentifierDeclStatement	BYTE * psec_desc = NULL ;	208:1:5688:5711	4601	8	True				
ANR	4678	IdentifierDecl	* psec_desc = NULL		4601	0					
ANR	4679	IdentifierDeclType	BYTE *		4601	0					
ANR	4680	Identifier	psec_desc		4601	1					
ANR	4681	AssignmentExpression	* psec_desc = NULL		4601	2		=			
ANR	4682	Identifier	NULL		4601	0					
ANR	4683	Identifier	NULL		4601	1					
ANR	4684	IdentifierDeclStatement	BOOL fAccess = FALSE ;	209:1:5714:5734	4601	9	True				
ANR	4685	IdentifierDecl	fAccess = FALSE		4601	0					
ANR	4686	IdentifierDeclType	BOOL		4601	0					
ANR	4687	Identifier	fAccess		4601	1					
ANR	4688	AssignmentExpression	fAccess = FALSE		4601	2		=			
ANR	4689	Identifier	FALSE		4601	0					
ANR	4690	Identifier	FALSE		4601	1					
ANR	4691	IdentifierDeclStatement	realpath_cache_bucket * bucket = NULL ;	211:1:5738:5775	4601	10	True				
ANR	4692	IdentifierDecl	* bucket = NULL		4601	0					
ANR	4693	IdentifierDeclType	realpath_cache_bucket *		4601	0					
ANR	4694	Identifier	bucket		4601	1					
ANR	4695	AssignmentExpression	* bucket = NULL		4601	2		=			
ANR	4696	Identifier	NULL		4601	0					
ANR	4697	Identifier	NULL		4601	1					
ANR	4698	IdentifierDeclStatement	char * real_path = NULL ;	212:1:5778:5801	4601	11	True				
ANR	4699	IdentifierDecl	* real_path = NULL		4601	0					
ANR	4700	IdentifierDeclType	char *		4601	0					
ANR	4701	Identifier	real_path		4601	1					
ANR	4702	AssignmentExpression	* real_path = NULL		4601	2		=			
ANR	4703	Identifier	NULL		4601	0					
ANR	4704	Identifier	NULL		4601	1					
ANR	4705	IfStatement	if ( mode == 1 )		4601	12					
ANR	4706	Condition	mode == 1	214:5:5809:5817	4601	0	True				
ANR	4707	EqualityExpression	mode == 1		4601	0		==			
ANR	4708	Identifier	mode		4601	0					
ANR	4709	PrimaryExpression	1		4601	1					
ANR	4710	CompoundStatement		18:2:584:594	4601	1					
ANR	4711	IdentifierDeclStatement	DWORD type ;	215:2:5833:5843	4601	0	True				
ANR	4712	IdentifierDecl	type		4601	0					
ANR	4713	IdentifierDeclType	DWORD		4601	0					
ANR	4714	Identifier	type		4601	1					
ANR	4715	ReturnStatement	"return GetBinaryType ( pathname , & type ) ? 0 : - 1 ;"	216:2:5847:5893	4601	1	True				
ANR	4716	ConditionalExpression	"GetBinaryType ( pathname , & type ) ? 0 : - 1"		4601	0					
ANR	4717	Condition	"GetBinaryType ( pathname , & type )"		4601	0					
ANR	4718	CallExpression	"GetBinaryType ( pathname , & type )"		4601	0					
ANR	4719	Callee	GetBinaryType		4601	0					
ANR	4720	Identifier	GetBinaryType		4601	0					
ANR	4721	ArgumentList	pathname		4601	1					
ANR	4722	Argument	pathname		4601	0					
ANR	4723	Identifier	pathname		4601	0					
ANR	4724	Argument	& type		4601	1					
ANR	4725	UnaryOperationExpression	& type		4601	0					
ANR	4726	UnaryOperator	&		4601	0					
ANR	4727	Identifier	type		4601	1					
ANR	4728	PrimaryExpression	0		4601	1					
ANR	4729	UnaryOperationExpression	- 1		4601	2					
ANR	4730	UnaryOperator	-		4601	0					
ANR	4731	PrimaryExpression	1		4601	1					
ANR	4732	ElseStatement	else		4601	0					
ANR	4733	CompoundStatement		20:8:654:654	4601	0					
ANR	4734	IfStatement	"if ( ! IS_ABSOLUTE_PATH ( pathname , strlen ( pathname ) + 1 ) )"		4601	0					
ANR	4735	Condition	"! IS_ABSOLUTE_PATH ( pathname , strlen ( pathname ) + 1 )"	218:5:5910:5956	4601	0	True				
ANR	4736	UnaryOperationExpression	"! IS_ABSOLUTE_PATH ( pathname , strlen ( pathname ) + 1 )"		4601	0					
ANR	4737	UnaryOperator	!		4601	0					
ANR	4738	CallExpression	"IS_ABSOLUTE_PATH ( pathname , strlen ( pathname ) + 1 )"		4601	1					
ANR	4739	Callee	IS_ABSOLUTE_PATH		4601	0					
ANR	4740	Identifier	IS_ABSOLUTE_PATH		4601	0					
ANR	4741	ArgumentList	pathname		4601	1					
ANR	4742	Argument	pathname		4601	0					
ANR	4743	Identifier	pathname		4601	0					
ANR	4744	Argument	strlen ( pathname ) + 1		4601	1					
ANR	4745	AdditiveExpression	strlen ( pathname ) + 1		4601	0		+			
ANR	4746	CallExpression	strlen ( pathname )		4601	0					
ANR	4747	Callee	strlen		4601	0					
ANR	4748	Identifier	strlen		4601	0					
ANR	4749	ArgumentList	pathname		4601	1					
ANR	4750	Argument	pathname		4601	0					
ANR	4751	Identifier	pathname		4601	0					
ANR	4752	PrimaryExpression	1		4601	1					
ANR	4753	CompoundStatement		21:54:710:710	4601	1					
ANR	4754	ExpressionStatement	real_path = ( char * ) malloc ( MAX_PATH )	219:3:5964:6000	4601	0	True				
ANR	4755	AssignmentExpression	real_path = ( char * ) malloc ( MAX_PATH )		4601	0		=			
ANR	4756	Identifier	real_path		4601	0					
ANR	4757	CastExpression	( char * ) malloc ( MAX_PATH )		4601	1					
ANR	4758	CastTarget	char *		4601	0					
ANR	4759	CallExpression	malloc ( MAX_PATH )		4601	1					
ANR	4760	Callee	malloc		4601	0					
ANR	4761	Identifier	malloc		4601	0					
ANR	4762	ArgumentList	MAX_PATH		4601	1					
ANR	4763	Argument	MAX_PATH		4601	0					
ANR	4764	Identifier	MAX_PATH		4601	0					
ANR	4765	IfStatement	"if ( tsrm_realpath ( pathname , real_path ) == NULL )"		4601	1					
ANR	4766	Condition	"tsrm_realpath ( pathname , real_path ) == NULL"	220:6:6008:6049	4601	0	True				
ANR	4767	EqualityExpression	"tsrm_realpath ( pathname , real_path ) == NULL"		4601	0		==			
ANR	4768	CallExpression	"tsrm_realpath ( pathname , real_path )"		4601	0					
ANR	4769	Callee	tsrm_realpath		4601	0					
ANR	4770	Identifier	tsrm_realpath		4601	0					
ANR	4771	ArgumentList	pathname		4601	1					
ANR	4772	Argument	pathname		4601	0					
ANR	4773	Identifier	pathname		4601	0					
ANR	4774	Argument	real_path		4601	1					
ANR	4775	Identifier	real_path		4601	0					
ANR	4776	Identifier	NULL		4601	1					
ANR	4777	CompoundStatement		23:50:803:803	4601	1					
ANR	4778	GotoStatement	goto Finished ;	221:4:6058:6071	4601	0	True				
ANR	4779	Identifier	Finished		4601	0					
ANR	4780	ExpressionStatement	pathname = real_path	223:3:6081:6101	4601	2	True				
ANR	4781	AssignmentExpression	pathname = real_path		4601	0		=			
ANR	4782	Identifier	pathname		4601	0					
ANR	4783	Identifier	real_path		4601	1					
ANR	4784	IfStatement	"if ( access ( pathname , mode ) )"		4601	1					
ANR	4785	Condition	"access ( pathname , mode )"	226:5:6114:6135	4601	0	True				
ANR	4786	CallExpression	"access ( pathname , mode )"		4601	0					
ANR	4787	Callee	access		4601	0					
ANR	4788	Identifier	access		4601	0					
ANR	4789	ArgumentList	pathname		4601	1					
ANR	4790	Argument	pathname		4601	0					
ANR	4791	Identifier	pathname		4601	0					
ANR	4792	Argument	mode		4601	1					
ANR	4793	Identifier	mode		4601	0					
ANR	4794	CompoundStatement		29:29:889:889	4601	1					
ANR	4795	ExpressionStatement	free ( real_path )	227:3:6143:6158	4601	0	True				
ANR	4796	CallExpression	free ( real_path )		4601	0					
ANR	4797	Callee	free		4601	0					
ANR	4798	Identifier	free		4601	0					
ANR	4799	ArgumentList	real_path		4601	1					
ANR	4800	Argument	real_path		4601	0					
ANR	4801	Identifier	real_path		4601	0					
ANR	4802	ReturnStatement	return errno ;	228:3:6163:6175	4601	1	True				
ANR	4803	Identifier	errno		4601	0					
ANR	4804	IfStatement	if ( mode == 0 )		4601	2					
ANR	4805	Condition	mode == 0	232:7:6242:6250	4601	0	True				
ANR	4806	EqualityExpression	mode == 0		4601	0		==			
ANR	4807	Identifier	mode		4601	0					
ANR	4808	PrimaryExpression	0		4601	1					
ANR	4809	CompoundStatement		35:18:1004:1004	4601	1					
ANR	4810	ExpressionStatement	free ( real_path )	233:3:6258:6273	4601	0	True				
ANR	4811	CallExpression	free ( real_path )		4601	0					
ANR	4812	Callee	free		4601	0					
ANR	4813	Identifier	free		4601	0					
ANR	4814	ArgumentList	real_path		4601	1					
ANR	4815	Argument	real_path		4601	0					
ANR	4816	Identifier	real_path		4601	0					
ANR	4817	ReturnStatement	return 0 ;	234:3:6278:6286	4601	1	True				
ANR	4818	PrimaryExpression	0		4601	0					
ANR	4819	IfStatement	"if ( ! OpenThreadToken ( GetCurrentThread ( ) , TOKEN_ALL_ACCESS , TRUE , & thread_token ) )"		4601	3					
ANR	4820	Condition	"! OpenThreadToken ( GetCurrentThread ( ) , TOKEN_ALL_ACCESS , TRUE , & thread_token )"	247:5:6788:6862	4601	0	True				
ANR	4821	UnaryOperationExpression	"! OpenThreadToken ( GetCurrentThread ( ) , TOKEN_ALL_ACCESS , TRUE , & thread_token )"		4601	0					
ANR	4822	UnaryOperator	!		4601	0					
ANR	4823	CallExpression	"OpenThreadToken ( GetCurrentThread ( ) , TOKEN_ALL_ACCESS , TRUE , & thread_token )"		4601	1					
ANR	4824	Callee	OpenThreadToken		4601	0					
ANR	4825	Identifier	OpenThreadToken		4601	0					
ANR	4826	ArgumentList	GetCurrentThread ( )		4601	1					
ANR	4827	Argument	GetCurrentThread ( )		4601	0					
ANR	4828	CallExpression	GetCurrentThread ( )		4601	0					
ANR	4829	Callee	GetCurrentThread		4601	0					
ANR	4830	Identifier	GetCurrentThread		4601	0					
ANR	4831	ArgumentList			4601	1					
ANR	4832	Argument	TOKEN_ALL_ACCESS		4601	1					
ANR	4833	Identifier	TOKEN_ALL_ACCESS		4601	0					
ANR	4834	Argument	TRUE		4601	2					
ANR	4835	Identifier	TRUE		4601	0					
ANR	4836	Argument	& thread_token		4601	3					
ANR	4837	UnaryOperationExpression	& thread_token		4601	0					
ANR	4838	UnaryOperator	&		4601	0					
ANR	4839	Identifier	thread_token		4601	1					
ANR	4840	CompoundStatement		50:82:1616:1616	4601	1					
ANR	4841	IfStatement	if ( GetLastError ( ) == ERROR_NO_TOKEN )		4601	0					
ANR	4842	Condition	GetLastError ( ) == ERROR_NO_TOKEN	248:7:6874:6905	4601	0	True				
ANR	4843	EqualityExpression	GetLastError ( ) == ERROR_NO_TOKEN		4601	0		==			
ANR	4844	CallExpression	GetLastError ( )		4601	0					
ANR	4845	Callee	GetLastError		4601	0					
ANR	4846	Identifier	GetLastError		4601	0					
ANR	4847	ArgumentList			4601	1					
ANR	4848	Identifier	ERROR_NO_TOKEN		4601	1					
ANR	4849	CompoundStatement		51:41:1659:1659	4601	1					
ANR	4850	IfStatement	"if ( ! OpenProcessToken ( GetCurrentProcess ( ) , TOKEN_ALL_ACCESS , & thread_token ) )"		4601	0					
ANR	4851	Condition	"! OpenProcessToken ( GetCurrentProcess ( ) , TOKEN_ALL_ACCESS , & thread_token )"	249:8:6918:6988	4601	0	True				
ANR	4852	UnaryOperationExpression	"! OpenProcessToken ( GetCurrentProcess ( ) , TOKEN_ALL_ACCESS , & thread_token )"		4601	0					
ANR	4853	UnaryOperator	!		4601	0					
ANR	4854	CallExpression	"OpenProcessToken ( GetCurrentProcess ( ) , TOKEN_ALL_ACCESS , & thread_token )"		4601	1					
ANR	4855	Callee	OpenProcessToken		4601	0					
ANR	4856	Identifier	OpenProcessToken		4601	0					
ANR	4857	ArgumentList	GetCurrentProcess ( )		4601	1					
ANR	4858	Argument	GetCurrentProcess ( )		4601	0					
ANR	4859	CallExpression	GetCurrentProcess ( )		4601	0					
ANR	4860	Callee	GetCurrentProcess		4601	0					
ANR	4861	Identifier	GetCurrentProcess		4601	0					
ANR	4862	ArgumentList			4601	1					
ANR	4863	Argument	TOKEN_ALL_ACCESS		4601	1					
ANR	4864	Identifier	TOKEN_ALL_ACCESS		4601	0					
ANR	4865	Argument	& thread_token		4601	2					
ANR	4866	UnaryOperationExpression	& thread_token		4601	0					
ANR	4867	UnaryOperator	&		4601	0					
ANR	4868	Identifier	thread_token		4601	1					
ANR	4869	CompoundStatement		52:81:1742:1742	4601	1					
ANR	4870	ExpressionStatement	TWG ( impersonation_token ) = NULL	250:6:6999:7030	4601	0	True				
ANR	4871	AssignmentExpression	TWG ( impersonation_token ) = NULL		4601	0		=			
ANR	4872	CallExpression	TWG ( impersonation_token )		4601	0					
ANR	4873	Callee	TWG		4601	0					
ANR	4874	Identifier	TWG		4601	0					
ANR	4875	ArgumentList	impersonation_token		4601	1					
ANR	4876	Argument	impersonation_token		4601	0					
ANR	4877	Identifier	impersonation_token		4601	0					
ANR	4878	Identifier	NULL		4601	1					
ANR	4879	GotoStatement	goto Finished ;	251:6:7038:7051	4601	1	True				
ANR	4880	Identifier	Finished		4601	0					
ANR	4881	ExpressionStatement	token_sid = tsrm_win32_get_token_sid ( thread_token )	257:2:7122:7172	4601	4	True				
ANR	4882	AssignmentExpression	token_sid = tsrm_win32_get_token_sid ( thread_token )		4601	0		=			
ANR	4883	Identifier	token_sid		4601	0					
ANR	4884	CallExpression	tsrm_win32_get_token_sid ( thread_token )		4601	1					
ANR	4885	Callee	tsrm_win32_get_token_sid		4601	0					
ANR	4886	Identifier	tsrm_win32_get_token_sid		4601	0					
ANR	4887	ArgumentList	thread_token		4601	1					
ANR	4888	Argument	thread_token		4601	0					
ANR	4889	Identifier	thread_token		4601	0					
ANR	4890	IfStatement	if ( ! token_sid )		4601	5					
ANR	4891	Condition	! token_sid	258:6:7180:7189	4601	0	True				
ANR	4892	UnaryOperationExpression	! token_sid		4601	0					
ANR	4893	UnaryOperator	!		4601	0					
ANR	4894	Identifier	token_sid		4601	1					
ANR	4895	CompoundStatement		61:18:1943:1943	4601	1					
ANR	4896	IfStatement	if ( TWG ( impersonation_token_sid ) )		4601	0					
ANR	4897	Condition	TWG ( impersonation_token_sid )	259:7:7201:7228	4601	0	True				
ANR	4898	CallExpression	TWG ( impersonation_token_sid )		4601	0					
ANR	4899	Callee	TWG		4601	0					
ANR	4900	Identifier	TWG		4601	0					
ANR	4901	ArgumentList	impersonation_token_sid		4601	1					
ANR	4902	Argument	impersonation_token_sid		4601	0					
ANR	4903	Identifier	impersonation_token_sid		4601	0					
ANR	4904	CompoundStatement		62:37:1982:1982	4601	1					
ANR	4905	ExpressionStatement	free ( TWG ( impersonation_token_sid ) )	260:4:7237:7271	4601	0	True				
ANR	4906	CallExpression	free ( TWG ( impersonation_token_sid ) )		4601	0					
ANR	4907	Callee	free		4601	0					
ANR	4908	Identifier	free		4601	0					
ANR	4909	ArgumentList	TWG ( impersonation_token_sid )		4601	1					
ANR	4910	Argument	TWG ( impersonation_token_sid )		4601	0					
ANR	4911	CallExpression	TWG ( impersonation_token_sid )		4601	0					
ANR	4912	Callee	TWG		4601	0					
ANR	4913	Identifier	TWG		4601	0					
ANR	4914	ArgumentList	impersonation_token_sid		4601	1					
ANR	4915	Argument	impersonation_token_sid		4601	0					
ANR	4916	Identifier	impersonation_token_sid		4601	0					
ANR	4917	ExpressionStatement	TWG ( impersonation_token_sid ) = NULL	262:3:7281:7316	4601	1	True				
ANR	4918	AssignmentExpression	TWG ( impersonation_token_sid ) = NULL		4601	0		=			
ANR	4919	CallExpression	TWG ( impersonation_token_sid )		4601	0					
ANR	4920	Callee	TWG		4601	0					
ANR	4921	Identifier	TWG		4601	0					
ANR	4922	ArgumentList	impersonation_token_sid		4601	1					
ANR	4923	Argument	impersonation_token_sid		4601	0					
ANR	4924	Identifier	impersonation_token_sid		4601	0					
ANR	4925	Identifier	NULL		4601	1					
ANR	4926	GotoStatement	goto Finished ;	263:3:7321:7334	4601	2	True				
ANR	4927	Identifier	Finished		4601	0					
ANR	4928	IfStatement	"if ( ! TWG ( impersonation_token_sid ) || ! EqualSid ( token_sid , TWG ( impersonation_token_sid ) ) )"		4601	6					
ANR	4929	Condition	"! TWG ( impersonation_token_sid ) || ! EqualSid ( token_sid , TWG ( impersonation_token_sid ) )"	267:6:7417:7499	4601	0	True				
ANR	4930	OrExpression	"! TWG ( impersonation_token_sid ) || ! EqualSid ( token_sid , TWG ( impersonation_token_sid ) )"		4601	0		||			
ANR	4931	UnaryOperationExpression	! TWG ( impersonation_token_sid )		4601	0					
ANR	4932	UnaryOperator	!		4601	0					
ANR	4933	CallExpression	TWG ( impersonation_token_sid )		4601	1					
ANR	4934	Callee	TWG		4601	0					
ANR	4935	Identifier	TWG		4601	0					
ANR	4936	ArgumentList	impersonation_token_sid		4601	1					
ANR	4937	Argument	impersonation_token_sid		4601	0					
ANR	4938	Identifier	impersonation_token_sid		4601	0					
ANR	4939	UnaryOperationExpression	"! EqualSid ( token_sid , TWG ( impersonation_token_sid ) )"		4601	1					
ANR	4940	UnaryOperator	!		4601	0					
ANR	4941	CallExpression	"EqualSid ( token_sid , TWG ( impersonation_token_sid ) )"		4601	1					
ANR	4942	Callee	EqualSid		4601	0					
ANR	4943	Identifier	EqualSid		4601	0					
ANR	4944	ArgumentList	token_sid		4601	1					
ANR	4945	Argument	token_sid		4601	0					
ANR	4946	Identifier	token_sid		4601	0					
ANR	4947	Argument	TWG ( impersonation_token_sid )		4601	1					
ANR	4948	CallExpression	TWG ( impersonation_token_sid )		4601	0					
ANR	4949	Callee	TWG		4601	0					
ANR	4950	Identifier	TWG		4601	0					
ANR	4951	ArgumentList	impersonation_token_sid		4601	1					
ANR	4952	Argument	impersonation_token_sid		4601	0					
ANR	4953	Identifier	impersonation_token_sid		4601	0					
ANR	4954	CompoundStatement		70:91:2253:2253	4601	1					
ANR	4955	IfStatement	if ( TWG ( impersonation_token_sid ) )		4601	0					
ANR	4956	Condition	TWG ( impersonation_token_sid )	268:7:7511:7538	4601	0	True				
ANR	4957	CallExpression	TWG ( impersonation_token_sid )		4601	0					
ANR	4958	Callee	TWG		4601	0					
ANR	4959	Identifier	TWG		4601	0					
ANR	4960	ArgumentList	impersonation_token_sid		4601	1					
ANR	4961	Argument	impersonation_token_sid		4601	0					
ANR	4962	Identifier	impersonation_token_sid		4601	0					
ANR	4963	CompoundStatement		71:37:2292:2292	4601	1					
ANR	4964	ExpressionStatement	free ( TWG ( impersonation_token_sid ) )	269:4:7547:7581	4601	0	True				
ANR	4965	CallExpression	free ( TWG ( impersonation_token_sid ) )		4601	0					
ANR	4966	Callee	free		4601	0					
ANR	4967	Identifier	free		4601	0					
ANR	4968	ArgumentList	TWG ( impersonation_token_sid )		4601	1					
ANR	4969	Argument	TWG ( impersonation_token_sid )		4601	0					
ANR	4970	CallExpression	TWG ( impersonation_token_sid )		4601	0					
ANR	4971	Callee	TWG		4601	0					
ANR	4972	Identifier	TWG		4601	0					
ANR	4973	ArgumentList	impersonation_token_sid		4601	1					
ANR	4974	Argument	impersonation_token_sid		4601	0					
ANR	4975	Identifier	impersonation_token_sid		4601	0					
ANR	4976	ExpressionStatement	TWG ( impersonation_token_sid ) = token_sid	271:3:7591:7631	4601	1	True				
ANR	4977	AssignmentExpression	TWG ( impersonation_token_sid ) = token_sid		4601	0		=			
ANR	4978	CallExpression	TWG ( impersonation_token_sid )		4601	0					
ANR	4979	Callee	TWG		4601	0					
ANR	4980	Identifier	TWG		4601	0					
ANR	4981	ArgumentList	impersonation_token_sid		4601	1					
ANR	4982	Argument	impersonation_token_sid		4601	0					
ANR	4983	Identifier	impersonation_token_sid		4601	0					
ANR	4984	Identifier	token_sid		4601	1					
ANR	4985	IfStatement	"if ( ! DuplicateToken ( thread_token , SecurityImpersonation , & TWG ( impersonation_token ) ) )"		4601	2					
ANR	4986	Condition	"! DuplicateToken ( thread_token , SecurityImpersonation , & TWG ( impersonation_token ) )"	274:7:7692:7770	4601	0	True				
ANR	4987	UnaryOperationExpression	"! DuplicateToken ( thread_token , SecurityImpersonation , & TWG ( impersonation_token ) )"		4601	0					
ANR	4988	UnaryOperator	!		4601	0					
ANR	4989	CallExpression	"DuplicateToken ( thread_token , SecurityImpersonation , & TWG ( impersonation_token ) )"		4601	1					
ANR	4990	Callee	DuplicateToken		4601	0					
ANR	4991	Identifier	DuplicateToken		4601	0					
ANR	4992	ArgumentList	thread_token		4601	1					
ANR	4993	Argument	thread_token		4601	0					
ANR	4994	Identifier	thread_token		4601	0					
ANR	4995	Argument	SecurityImpersonation		4601	1					
ANR	4996	Identifier	SecurityImpersonation		4601	0					
ANR	4997	Argument	& TWG ( impersonation_token )		4601	2					
ANR	4998	UnaryOperationExpression	& TWG ( impersonation_token )		4601	0					
ANR	4999	UnaryOperator	&		4601	0					
ANR	5000	CallExpression	TWG ( impersonation_token )		4601	1					
ANR	5001	Callee	TWG		4601	0					
ANR	5002	Identifier	TWG		4601	0					
ANR	5003	ArgumentList	impersonation_token		4601	1					
ANR	5004	Argument	impersonation_token		4601	0					
ANR	5005	Identifier	impersonation_token		4601	0					
ANR	5006	CompoundStatement		77:88:2524:2524	4601	1					
ANR	5007	GotoStatement	goto Finished ;	275:4:7779:7792	4601	0	True				
ANR	5008	Identifier	Finished		4601	0					
ANR	5009	ElseStatement	else		4601	0					
ANR	5010	CompoundStatement		80:9:2559:2559	4601	0					
ANR	5011	ExpressionStatement	free ( token_sid )	279:3:7855:7870	4601	0	True				
ANR	5012	CallExpression	free ( token_sid )		4601	0					
ANR	5013	Callee	free		4601	0					
ANR	5014	Identifier	free		4601	0					
ANR	5015	ArgumentList	token_sid		4601	1					
ANR	5016	Argument	token_sid		4601	0					
ANR	5017	Identifier	token_sid		4601	0					
ANR	5018	IfStatement	if ( CWDG ( realpath_cache_size_limit ) )		4601	7					
ANR	5019	Condition	CWDG ( realpath_cache_size_limit )	282:6:7883:7913	4601	0	True				
ANR	5020	CallExpression	CWDG ( realpath_cache_size_limit )		4601	0					
ANR	5021	Callee	CWDG		4601	0					
ANR	5022	Identifier	CWDG		4601	0					
ANR	5023	ArgumentList	realpath_cache_size_limit		4601	1					
ANR	5024	Argument	realpath_cache_size_limit		4601	0					
ANR	5025	Identifier	realpath_cache_size_limit		4601	0					
ANR	5026	CompoundStatement		85:39:2667:2667	4601	1					
ANR	5027	ExpressionStatement	t = time ( 0 )	283:3:7921:7932	4601	0	True				
ANR	5028	AssignmentExpression	t = time ( 0 )		4601	0		=			
ANR	5029	Identifier	t		4601	0					
ANR	5030	CallExpression	time ( 0 )		4601	1					
ANR	5031	Callee	time		4601	0					
ANR	5032	Identifier	time		4601	0					
ANR	5033	ArgumentList	0		4601	1					
ANR	5034	Argument	0		4601	0					
ANR	5035	PrimaryExpression	0		4601	0					
ANR	5036	ExpressionStatement	"bucket = realpath_cache_lookup ( pathname , ( int ) strlen ( pathname ) , t )"	284:3:7937:8003	4601	1	True				
ANR	5037	AssignmentExpression	"bucket = realpath_cache_lookup ( pathname , ( int ) strlen ( pathname ) , t )"		4601	0		=			
ANR	5038	Identifier	bucket		4601	0					
ANR	5039	CallExpression	"realpath_cache_lookup ( pathname , ( int ) strlen ( pathname ) , t )"		4601	1					
ANR	5040	Callee	realpath_cache_lookup		4601	0					
ANR	5041	Identifier	realpath_cache_lookup		4601	0					
ANR	5042	ArgumentList	pathname		4601	1					
ANR	5043	Argument	pathname		4601	0					
ANR	5044	Identifier	pathname		4601	0					
ANR	5045	Argument	( int ) strlen ( pathname )		4601	1					
ANR	5046	CastExpression	( int ) strlen ( pathname )		4601	0					
ANR	5047	CastTarget	int		4601	0					
ANR	5048	CallExpression	strlen ( pathname )		4601	1					
ANR	5049	Callee	strlen		4601	0					
ANR	5050	Identifier	strlen		4601	0					
ANR	5051	ArgumentList	pathname		4601	1					
ANR	5052	Argument	pathname		4601	0					
ANR	5053	Identifier	pathname		4601	0					
ANR	5054	Argument	t		4601	2					
ANR	5055	Identifier	t		4601	0					
ANR	5056	IfStatement	if ( bucket == NULL && real_path == NULL )		4601	2					
ANR	5057	Condition	bucket == NULL && real_path == NULL	285:6:8011:8045	4601	0	True				
ANR	5058	AndExpression	bucket == NULL && real_path == NULL		4601	0		&&			
ANR	5059	EqualityExpression	bucket == NULL		4601	0		==			
ANR	5060	Identifier	bucket		4601	0					
ANR	5061	Identifier	NULL		4601	1					
ANR	5062	EqualityExpression	real_path == NULL		4601	1		==			
ANR	5063	Identifier	real_path		4601	0					
ANR	5064	Identifier	NULL		4601	1					
ANR	5065	CompoundStatement		88:43:2799:2799	4601	1					
ANR	5066	ExpressionStatement	real_path = ( char * ) malloc ( MAX_PATH )	288:4:8167:8203	4601	0	True				
ANR	5067	AssignmentExpression	real_path = ( char * ) malloc ( MAX_PATH )		4601	0		=			
ANR	5068	Identifier	real_path		4601	0					
ANR	5069	CastExpression	( char * ) malloc ( MAX_PATH )		4601	1					
ANR	5070	CastTarget	char *		4601	0					
ANR	5071	CallExpression	malloc ( MAX_PATH )		4601	1					
ANR	5072	Callee	malloc		4601	0					
ANR	5073	Identifier	malloc		4601	0					
ANR	5074	ArgumentList	MAX_PATH		4601	1					
ANR	5075	Argument	MAX_PATH		4601	0					
ANR	5076	Identifier	MAX_PATH		4601	0					
ANR	5077	IfStatement	"if ( tsrm_realpath ( pathname , real_path ) != NULL )"		4601	1					
ANR	5078	Condition	"tsrm_realpath ( pathname , real_path ) != NULL"	289:7:8212:8253	4601	0	True				
ANR	5079	EqualityExpression	"tsrm_realpath ( pathname , real_path ) != NULL"		4601	0		!=			
ANR	5080	CallExpression	"tsrm_realpath ( pathname , real_path )"		4601	0					
ANR	5081	Callee	tsrm_realpath		4601	0					
ANR	5082	Identifier	tsrm_realpath		4601	0					
ANR	5083	ArgumentList	pathname		4601	1					
ANR	5084	Argument	pathname		4601	0					
ANR	5085	Identifier	pathname		4601	0					
ANR	5086	Argument	real_path		4601	1					
ANR	5087	Identifier	real_path		4601	0					
ANR	5088	Identifier	NULL		4601	1					
ANR	5089	CompoundStatement		92:51:3007:3007	4601	1					
ANR	5090	ExpressionStatement	pathname = real_path	290:5:8263:8283	4601	0	True				
ANR	5091	AssignmentExpression	pathname = real_path		4601	0		=			
ANR	5092	Identifier	pathname		4601	0					
ANR	5093	Identifier	real_path		4601	1					
ANR	5094	ExpressionStatement	"bucket = realpath_cache_lookup ( pathname , ( int ) strlen ( pathname ) , t )"	291:5:8290:8356	4601	1	True				
ANR	5095	AssignmentExpression	"bucket = realpath_cache_lookup ( pathname , ( int ) strlen ( pathname ) , t )"		4601	0		=			
ANR	5096	Identifier	bucket		4601	0					
ANR	5097	CallExpression	"realpath_cache_lookup ( pathname , ( int ) strlen ( pathname ) , t )"		4601	1					
ANR	5098	Callee	realpath_cache_lookup		4601	0					
ANR	5099	Identifier	realpath_cache_lookup		4601	0					
ANR	5100	ArgumentList	pathname		4601	1					
ANR	5101	Argument	pathname		4601	0					
ANR	5102	Identifier	pathname		4601	0					
ANR	5103	Argument	( int ) strlen ( pathname )		4601	1					
ANR	5104	CastExpression	( int ) strlen ( pathname )		4601	0					
ANR	5105	CastTarget	int		4601	0					
ANR	5106	CallExpression	strlen ( pathname )		4601	1					
ANR	5107	Callee	strlen		4601	0					
ANR	5108	Identifier	strlen		4601	0					
ANR	5109	ArgumentList	pathname		4601	1					
ANR	5110	Argument	pathname		4601	0					
ANR	5111	Identifier	pathname		4601	0					
ANR	5112	Argument	t		4601	2					
ANR	5113	Identifier	t		4601	0					
ANR	5114	IfStatement	if ( mode == 0 || mode > 6 )		4601	8					
ANR	5115	Condition	mode == 0 || mode > 6	297:6:8466:8486	4601	0	True				
ANR	5116	OrExpression	mode == 0 || mode > 6		4601	0		||			
ANR	5117	EqualityExpression	mode == 0		4601	0		==			
ANR	5118	Identifier	mode		4601	0					
ANR	5119	PrimaryExpression	0		4601	1					
ANR	5120	RelationalExpression	mode > 6		4601	1		>			
ANR	5121	Identifier	mode		4601	0					
ANR	5122	PrimaryExpression	6		4601	1					
ANR	5123	CompoundStatement		100:29:3240:3240	4601	1					
ANR	5124	IfStatement	if ( bucket != NULL && bucket -> is_rvalid )		4601	0					
ANR	5125	Condition	bucket != NULL && bucket -> is_rvalid	298:6:8497:8531	4601	0	True				
ANR	5126	AndExpression	bucket != NULL && bucket -> is_rvalid		4601	0		&&			
ANR	5127	EqualityExpression	bucket != NULL		4601	0		!=			
ANR	5128	Identifier	bucket		4601	0					
ANR	5129	Identifier	NULL		4601	1					
ANR	5130	PtrMemberAccess	bucket -> is_rvalid		4601	1					
ANR	5131	Identifier	bucket		4601	0					
ANR	5132	Identifier	is_rvalid		4601	1					
ANR	5133	CompoundStatement		101:43:3285:3285	4601	1					
ANR	5134	ExpressionStatement	fAccess = bucket -> is_readable	299:4:8540:8569	4601	0	True				
ANR	5135	AssignmentExpression	fAccess = bucket -> is_readable		4601	0		=			
ANR	5136	Identifier	fAccess		4601	0					
ANR	5137	PtrMemberAccess	bucket -> is_readable		4601	1					
ANR	5138	Identifier	bucket		4601	0					
ANR	5139	Identifier	is_readable		4601	1					
ANR	5140	GotoStatement	goto Finished ;	300:4:8575:8588	4601	1	True				
ANR	5141	Identifier	Finished		4601	0					
ANR	5142	ExpressionStatement	desired_access = FILE_GENERIC_READ	302:4:8599:8633	4601	1	True				
ANR	5143	AssignmentExpression	desired_access = FILE_GENERIC_READ		4601	0		=			
ANR	5144	Identifier	desired_access		4601	0					
ANR	5145	Identifier	FILE_GENERIC_READ		4601	1					
ANR	5146	ElseStatement	else		4601	0					
ANR	5147	IfStatement	if ( mode <= 2 )		4601	0					
ANR	5148	Condition	mode <= 2	303:13:8648:8656	4601	0	True				
ANR	5149	RelationalExpression	mode <= 2		4601	0		<=			
ANR	5150	Identifier	mode		4601	0					
ANR	5151	PrimaryExpression	2		4601	1					
ANR	5152	CompoundStatement		106:24:3410:3410	4601	1					
ANR	5153	IfStatement	if ( bucket != NULL && bucket -> is_wvalid )		4601	0					
ANR	5154	Condition	bucket != NULL && bucket -> is_wvalid	304:6:8667:8701	4601	0	True				
ANR	5155	AndExpression	bucket != NULL && bucket -> is_wvalid		4601	0		&&			
ANR	5156	EqualityExpression	bucket != NULL		4601	0		!=			
ANR	5157	Identifier	bucket		4601	0					
ANR	5158	Identifier	NULL		4601	1					
ANR	5159	PtrMemberAccess	bucket -> is_wvalid		4601	1					
ANR	5160	Identifier	bucket		4601	0					
ANR	5161	Identifier	is_wvalid		4601	1					
ANR	5162	CompoundStatement		107:43:3455:3455	4601	1					
ANR	5163	ExpressionStatement	fAccess = bucket -> is_writable	305:4:8710:8739	4601	0	True				
ANR	5164	AssignmentExpression	fAccess = bucket -> is_writable		4601	0		=			
ANR	5165	Identifier	fAccess		4601	0					
ANR	5166	PtrMemberAccess	bucket -> is_writable		4601	1					
ANR	5167	Identifier	bucket		4601	0					
ANR	5168	Identifier	is_writable		4601	1					
ANR	5169	GotoStatement	goto Finished ;	306:4:8745:8758	4601	1	True				
ANR	5170	Identifier	Finished		4601	0					
ANR	5171	ExpressionStatement	desired_access = FILE_GENERIC_WRITE	308:3:8768:8803	4601	1	True				
ANR	5172	AssignmentExpression	desired_access = FILE_GENERIC_WRITE		4601	0		=			
ANR	5173	Identifier	desired_access		4601	0					
ANR	5174	Identifier	FILE_GENERIC_WRITE		4601	1					
ANR	5175	ElseStatement	else		4601	0					
ANR	5176	IfStatement	if ( mode <= 4 )		4601	0					
ANR	5177	Condition	mode <= 4	309:13:8818:8826	4601	0	True				
ANR	5178	RelationalExpression	mode <= 4		4601	0		<=			
ANR	5179	Identifier	mode		4601	0					
ANR	5180	PrimaryExpression	4		4601	1					
ANR	5181	CompoundStatement		112:24:3580:3580	4601	1					
ANR	5182	IfStatement	if ( bucket != NULL && bucket -> is_rvalid )		4601	0					
ANR	5183	Condition	bucket != NULL && bucket -> is_rvalid	310:6:8837:8871	4601	0	True				
ANR	5184	AndExpression	bucket != NULL && bucket -> is_rvalid		4601	0		&&			
ANR	5185	EqualityExpression	bucket != NULL		4601	0		!=			
ANR	5186	Identifier	bucket		4601	0					
ANR	5187	Identifier	NULL		4601	1					
ANR	5188	PtrMemberAccess	bucket -> is_rvalid		4601	1					
ANR	5189	Identifier	bucket		4601	0					
ANR	5190	Identifier	is_rvalid		4601	1					
ANR	5191	CompoundStatement		113:43:3625:3625	4601	1					
ANR	5192	ExpressionStatement	fAccess = bucket -> is_readable	311:4:8880:8909	4601	0	True				
ANR	5193	AssignmentExpression	fAccess = bucket -> is_readable		4601	0		=			
ANR	5194	Identifier	fAccess		4601	0					
ANR	5195	PtrMemberAccess	bucket -> is_readable		4601	1					
ANR	5196	Identifier	bucket		4601	0					
ANR	5197	Identifier	is_readable		4601	1					
ANR	5198	GotoStatement	goto Finished ;	312:4:8915:8928	4601	1	True				
ANR	5199	Identifier	Finished		4601	0					
ANR	5200	ExpressionStatement	desired_access = FILE_GENERIC_READ | FILE_FLAG_BACKUP_SEMANTICS	314:3:8938:8999	4601	1	True				
ANR	5201	AssignmentExpression	desired_access = FILE_GENERIC_READ | FILE_FLAG_BACKUP_SEMANTICS		4601	0		=			
ANR	5202	Identifier	desired_access		4601	0					
ANR	5203	InclusiveOrExpression	FILE_GENERIC_READ | FILE_FLAG_BACKUP_SEMANTICS		4601	1		|			
ANR	5204	Identifier	FILE_GENERIC_READ		4601	0					
ANR	5205	Identifier	FILE_FLAG_BACKUP_SEMANTICS		4601	1					
ANR	5206	ElseStatement	else		4601	0					
ANR	5207	CompoundStatement		118:10:3762:3762	4601	0					
ANR	5208	IfStatement	if ( bucket != NULL && bucket -> is_rvalid && bucket -> is_wvalid )		4601	0					
ANR	5209	Condition	bucket != NULL && bucket -> is_rvalid && bucket -> is_wvalid	316:6:9036:9091	4601	0	True				
ANR	5210	AndExpression	bucket != NULL && bucket -> is_rvalid && bucket -> is_wvalid		4601	0		&&			
ANR	5211	EqualityExpression	bucket != NULL		4601	0		!=			
ANR	5212	Identifier	bucket		4601	0					
ANR	5213	Identifier	NULL		4601	1					
ANR	5214	AndExpression	bucket -> is_rvalid && bucket -> is_wvalid		4601	1		&&			
ANR	5215	PtrMemberAccess	bucket -> is_rvalid		4601	0					
ANR	5216	Identifier	bucket		4601	0					
ANR	5217	Identifier	is_rvalid		4601	1					
ANR	5218	PtrMemberAccess	bucket -> is_wvalid		4601	1					
ANR	5219	Identifier	bucket		4601	0					
ANR	5220	Identifier	is_wvalid		4601	1					
ANR	5221	CompoundStatement		119:64:3845:3845	4601	1					
ANR	5222	ExpressionStatement	fAccess = bucket -> is_readable & bucket -> is_writable	317:4:9100:9151	4601	0	True				
ANR	5223	AssignmentExpression	fAccess = bucket -> is_readable & bucket -> is_writable		4601	0		=			
ANR	5224	Identifier	fAccess		4601	0					
ANR	5225	BitAndExpression	bucket -> is_readable & bucket -> is_writable		4601	1		&			
ANR	5226	PtrMemberAccess	bucket -> is_readable		4601	0					
ANR	5227	Identifier	bucket		4601	0					
ANR	5228	Identifier	is_readable		4601	1					
ANR	5229	PtrMemberAccess	bucket -> is_writable		4601	1					
ANR	5230	Identifier	bucket		4601	0					
ANR	5231	Identifier	is_writable		4601	1					
ANR	5232	GotoStatement	goto Finished ;	318:4:9157:9170	4601	1	True				
ANR	5233	Identifier	Finished		4601	0					
ANR	5234	ExpressionStatement	desired_access = FILE_GENERIC_READ | FILE_GENERIC_WRITE	320:3:9180:9235	4601	1	True				
ANR	5235	AssignmentExpression	desired_access = FILE_GENERIC_READ | FILE_GENERIC_WRITE		4601	0		=			
ANR	5236	Identifier	desired_access		4601	0					
ANR	5237	InclusiveOrExpression	FILE_GENERIC_READ | FILE_GENERIC_WRITE		4601	1		|			
ANR	5238	Identifier	FILE_GENERIC_READ		4601	0					
ANR	5239	Identifier	FILE_GENERIC_WRITE		4601	1					
ANR	5240	IfStatement	if ( TWG ( impersonation_token ) == NULL )		4601	9					
ANR	5241	Condition	TWG ( impersonation_token ) == NULL	323:5:9248:9279	4601	0	True				
ANR	5242	EqualityExpression	TWG ( impersonation_token ) == NULL		4601	0		==			
ANR	5243	CallExpression	TWG ( impersonation_token )		4601	0					
ANR	5244	Callee	TWG		4601	0					
ANR	5245	Identifier	TWG		4601	0					
ANR	5246	ArgumentList	impersonation_token		4601	1					
ANR	5247	Argument	impersonation_token		4601	0					
ANR	5248	Identifier	impersonation_token		4601	0					
ANR	5249	Identifier	NULL		4601	1					
ANR	5250	CompoundStatement		126:39:4033:4033	4601	1					
ANR	5251	GotoStatement	goto Finished ;	324:3:9287:9300	4601	0	True				
ANR	5252	Identifier	Finished		4601	0					
ANR	5253	IfStatement	"if ( GetFileSecurity ( pathname , sec_info , NULL , 0 , & sec_desc_length ) )"		4601	10					
ANR	5254	Condition	"GetFileSecurity ( pathname , sec_info , NULL , 0 , & sec_desc_length )"	328:5:9374:9435	4601	0	True				
ANR	5255	CallExpression	"GetFileSecurity ( pathname , sec_info , NULL , 0 , & sec_desc_length )"		4601	0					
ANR	5256	Callee	GetFileSecurity		4601	0					
ANR	5257	Identifier	GetFileSecurity		4601	0					
ANR	5258	ArgumentList	pathname		4601	1					
ANR	5259	Argument	pathname		4601	0					
ANR	5260	Identifier	pathname		4601	0					
ANR	5261	Argument	sec_info		4601	1					
ANR	5262	Identifier	sec_info		4601	0					
ANR	5263	Argument	NULL		4601	2					
ANR	5264	Identifier	NULL		4601	0					
ANR	5265	Argument	0		4601	3					
ANR	5266	PrimaryExpression	0		4601	0					
ANR	5267	Argument	& sec_desc_length		4601	4					
ANR	5268	UnaryOperationExpression	& sec_desc_length		4601	0					
ANR	5269	UnaryOperator	&		4601	0					
ANR	5270	Identifier	sec_desc_length		4601	1					
ANR	5271	CompoundStatement		131:69:4189:4189	4601	1					
ANR	5272	GotoStatement	goto Finished ;	329:3:9443:9456	4601	0	True				
ANR	5273	Identifier	Finished		4601	0					
ANR	5274	ExpressionStatement	psec_desc = ( BYTE * ) malloc ( sec_desc_length )	332:2:9465:9508	4601	11	True				
ANR	5275	AssignmentExpression	psec_desc = ( BYTE * ) malloc ( sec_desc_length )		4601	0		=			
ANR	5276	Identifier	psec_desc		4601	0					
ANR	5277	CastExpression	( BYTE * ) malloc ( sec_desc_length )		4601	1					
ANR	5278	CastTarget	BYTE *		4601	0					
ANR	5279	CallExpression	malloc ( sec_desc_length )		4601	1					
ANR	5280	Callee	malloc		4601	0					
ANR	5281	Identifier	malloc		4601	0					
ANR	5282	ArgumentList	sec_desc_length		4601	1					
ANR	5283	Argument	sec_desc_length		4601	0					
ANR	5284	Identifier	sec_desc_length		4601	0					
ANR	5285	IfStatement	"if ( psec_desc == NULL || ! GetFileSecurity ( pathname , sec_info , ( PSECURITY_DESCRIPTOR ) psec_desc , sec_desc_length , & sec_desc_length ) )"		4601	12					
ANR	5286	Condition	"psec_desc == NULL || ! GetFileSecurity ( pathname , sec_info , ( PSECURITY_DESCRIPTOR ) psec_desc , sec_desc_length , & sec_desc_length )"	333:5:9515:9643	4601	0	True				
ANR	5287	OrExpression	"psec_desc == NULL || ! GetFileSecurity ( pathname , sec_info , ( PSECURITY_DESCRIPTOR ) psec_desc , sec_desc_length , & sec_desc_length )"		4601	0		||			
ANR	5288	EqualityExpression	psec_desc == NULL		4601	0		==			
ANR	5289	Identifier	psec_desc		4601	0					
ANR	5290	Identifier	NULL		4601	1					
ANR	5291	UnaryOperationExpression	"! GetFileSecurity ( pathname , sec_info , ( PSECURITY_DESCRIPTOR ) psec_desc , sec_desc_length , & sec_desc_length )"		4601	1					
ANR	5292	UnaryOperator	!		4601	0					
ANR	5293	CallExpression	"GetFileSecurity ( pathname , sec_info , ( PSECURITY_DESCRIPTOR ) psec_desc , sec_desc_length , & sec_desc_length )"		4601	1					
ANR	5294	Callee	GetFileSecurity		4601	0					
ANR	5295	Identifier	GetFileSecurity		4601	0					
ANR	5296	ArgumentList	pathname		4601	1					
ANR	5297	Argument	pathname		4601	0					
ANR	5298	Identifier	pathname		4601	0					
ANR	5299	Argument	sec_info		4601	1					
ANR	5300	Identifier	sec_info		4601	0					
ANR	5301	Argument	( PSECURITY_DESCRIPTOR ) psec_desc		4601	2					
ANR	5302	CastExpression	( PSECURITY_DESCRIPTOR ) psec_desc		4601	0					
ANR	5303	CastTarget	PSECURITY_DESCRIPTOR		4601	0					
ANR	5304	Identifier	psec_desc		4601	1					
ANR	5305	Argument	sec_desc_length		4601	3					
ANR	5306	Identifier	sec_desc_length		4601	0					
ANR	5307	Argument	& sec_desc_length		4601	4					
ANR	5308	UnaryOperationExpression	& sec_desc_length		4601	0					
ANR	5309	UnaryOperator	&		4601	0					
ANR	5310	Identifier	sec_desc_length		4601	1					
ANR	5311	CompoundStatement		137:110:4397:4397	4601	1					
ANR	5312	GotoStatement	goto Finished ;	335:3:9651:9664	4601	0	True				
ANR	5313	Identifier	Finished		4601	0					
ANR	5314	ExpressionStatement	"MapGenericMask ( & desired_access , & gen_map )"	338:2:9673:9714	4601	13	True				
ANR	5315	CallExpression	"MapGenericMask ( & desired_access , & gen_map )"		4601	0					
ANR	5316	Callee	MapGenericMask		4601	0					
ANR	5317	Identifier	MapGenericMask		4601	0					
ANR	5318	ArgumentList	& desired_access		4601	1					
ANR	5319	Argument	& desired_access		4601	0					
ANR	5320	UnaryOperationExpression	& desired_access		4601	0					
ANR	5321	UnaryOperator	&		4601	0					
ANR	5322	Identifier	desired_access		4601	1					
ANR	5323	Argument	& gen_map		4601	1					
ANR	5324	UnaryOperationExpression	& gen_map		4601	0					
ANR	5325	UnaryOperator	&		4601	0					
ANR	5326	Identifier	gen_map		4601	1					
ANR	5327	IfStatement	"if ( ! AccessCheck ( ( PSECURITY_DESCRIPTOR ) psec_desc , TWG ( impersonation_token ) , desired_access , & gen_map , & privilege_set , & priv_set_length , & granted_access , & fAccess ) )"		4601	14					
ANR	5328	Condition	"! AccessCheck ( ( PSECURITY_DESCRIPTOR ) psec_desc , TWG ( impersonation_token ) , desired_access , & gen_map , & privilege_set , & priv_set_length , & granted_access , & fAccess )"	340:5:9722:9879	4601	0	True				
ANR	5329	UnaryOperationExpression	"! AccessCheck ( ( PSECURITY_DESCRIPTOR ) psec_desc , TWG ( impersonation_token ) , desired_access , & gen_map , & privilege_set , & priv_set_length , & granted_access , & fAccess )"		4601	0					
ANR	5330	UnaryOperator	!		4601	0					
ANR	5331	CallExpression	"AccessCheck ( ( PSECURITY_DESCRIPTOR ) psec_desc , TWG ( impersonation_token ) , desired_access , & gen_map , & privilege_set , & priv_set_length , & granted_access , & fAccess )"		4601	1					
ANR	5332	Callee	AccessCheck		4601	0					
ANR	5333	Identifier	AccessCheck		4601	0					
ANR	5334	ArgumentList	( PSECURITY_DESCRIPTOR ) psec_desc		4601	1					
ANR	5335	Argument	( PSECURITY_DESCRIPTOR ) psec_desc		4601	0					
ANR	5336	CastExpression	( PSECURITY_DESCRIPTOR ) psec_desc		4601	0					
ANR	5337	CastTarget	PSECURITY_DESCRIPTOR		4601	0					
ANR	5338	Identifier	psec_desc		4601	1					
ANR	5339	Argument	TWG ( impersonation_token )		4601	1					
ANR	5340	CallExpression	TWG ( impersonation_token )		4601	0					
ANR	5341	Callee	TWG		4601	0					
ANR	5342	Identifier	TWG		4601	0					
ANR	5343	ArgumentList	impersonation_token		4601	1					
ANR	5344	Argument	impersonation_token		4601	0					
ANR	5345	Identifier	impersonation_token		4601	0					
ANR	5346	Argument	desired_access		4601	2					
ANR	5347	Identifier	desired_access		4601	0					
ANR	5348	Argument	& gen_map		4601	3					
ANR	5349	UnaryOperationExpression	& gen_map		4601	0					
ANR	5350	UnaryOperator	&		4601	0					
ANR	5351	Identifier	gen_map		4601	1					
ANR	5352	Argument	& privilege_set		4601	4					
ANR	5353	UnaryOperationExpression	& privilege_set		4601	0					
ANR	5354	UnaryOperator	&		4601	0					
ANR	5355	Identifier	privilege_set		4601	1					
ANR	5356	Argument	& priv_set_length		4601	5					
ANR	5357	UnaryOperationExpression	& priv_set_length		4601	0					
ANR	5358	UnaryOperator	&		4601	0					
ANR	5359	Identifier	priv_set_length		4601	1					
ANR	5360	Argument	& granted_access		4601	6					
ANR	5361	UnaryOperationExpression	& granted_access		4601	0					
ANR	5362	UnaryOperator	&		4601	0					
ANR	5363	Identifier	granted_access		4601	1					
ANR	5364	Argument	& fAccess		4601	7					
ANR	5365	UnaryOperationExpression	& fAccess		4601	0					
ANR	5366	UnaryOperator	&		4601	0					
ANR	5367	Identifier	fAccess		4601	1					
ANR	5368	CompoundStatement		143:165:4633:4633	4601	1					
ANR	5369	GotoStatement	goto Finished_Impersonate ;	341:3:9887:9912	4601	0	True				
ANR	5370	Identifier	Finished_Impersonate		4601	0					
ANR	5371	IfStatement	if ( bucket != NULL )		4601	15					
ANR	5372	Condition	bucket != NULL	345:5:9966:9979	4601	0	True				
ANR	5373	EqualityExpression	bucket != NULL		4601	0		!=			
ANR	5374	Identifier	bucket		4601	0					
ANR	5375	Identifier	NULL		4601	1					
ANR	5376	CompoundStatement		148:21:4733:4733	4601	1					
ANR	5377	IfStatement	if ( desired_access == ( FILE_GENERIC_READ | FILE_FLAG_BACKUP_SEMANTICS ) )		4601	0					
ANR	5378	Condition	desired_access == ( FILE_GENERIC_READ | FILE_FLAG_BACKUP_SEMANTICS )	346:6:9990:10053	4601	0	True				
ANR	5379	EqualityExpression	desired_access == ( FILE_GENERIC_READ | FILE_FLAG_BACKUP_SEMANTICS )		4601	0		==			
ANR	5380	Identifier	desired_access		4601	0					
ANR	5381	InclusiveOrExpression	FILE_GENERIC_READ | FILE_FLAG_BACKUP_SEMANTICS		4601	1		|			
ANR	5382	Identifier	FILE_GENERIC_READ		4601	0					
ANR	5383	Identifier	FILE_FLAG_BACKUP_SEMANTICS		4601	1					
ANR	5384	CompoundStatement		149:72:4807:4807	4601	1					
ANR	5385	ExpressionStatement	bucket -> is_rvalid = 1	347:4:10062:10083	4601	0	True				
ANR	5386	AssignmentExpression	bucket -> is_rvalid = 1		4601	0		=			
ANR	5387	PtrMemberAccess	bucket -> is_rvalid		4601	0					
ANR	5388	Identifier	bucket		4601	0					
ANR	5389	Identifier	is_rvalid		4601	1					
ANR	5390	PrimaryExpression	1		4601	1					
ANR	5391	ExpressionStatement	bucket -> is_readable = fAccess	348:4:10089:10118	4601	1	True				
ANR	5392	AssignmentExpression	bucket -> is_readable = fAccess		4601	0		=			
ANR	5393	PtrMemberAccess	bucket -> is_readable		4601	0					
ANR	5394	Identifier	bucket		4601	0					
ANR	5395	Identifier	is_readable		4601	1					
ANR	5396	Identifier	fAccess		4601	1					
ANR	5397	ElseStatement	else		4601	0					
ANR	5398	IfStatement	if ( desired_access == FILE_GENERIC_WRITE )		4601	0					
ANR	5399	Condition	desired_access == FILE_GENERIC_WRITE	350:11:10136:10171	4601	0	True				
ANR	5400	EqualityExpression	desired_access == FILE_GENERIC_WRITE		4601	0		==			
ANR	5401	Identifier	desired_access		4601	0					
ANR	5402	Identifier	FILE_GENERIC_WRITE		4601	1					
ANR	5403	CompoundStatement		153:49:4925:4925	4601	1					
ANR	5404	ExpressionStatement	bucket -> is_wvalid = 1	351:4:10180:10201	4601	0	True				
ANR	5405	AssignmentExpression	bucket -> is_wvalid = 1		4601	0		=			
ANR	5406	PtrMemberAccess	bucket -> is_wvalid		4601	0					
ANR	5407	Identifier	bucket		4601	0					
ANR	5408	Identifier	is_wvalid		4601	1					
ANR	5409	PrimaryExpression	1		4601	1					
ANR	5410	ExpressionStatement	bucket -> is_writable = fAccess	352:4:10207:10236	4601	1	True				
ANR	5411	AssignmentExpression	bucket -> is_writable = fAccess		4601	0		=			
ANR	5412	PtrMemberAccess	bucket -> is_writable		4601	0					
ANR	5413	Identifier	bucket		4601	0					
ANR	5414	Identifier	is_writable		4601	1					
ANR	5415	Identifier	fAccess		4601	1					
ANR	5416	ElseStatement	else		4601	0					
ANR	5417	IfStatement	if ( desired_access == ( FILE_GENERIC_READ | FILE_GENERIC_WRITE ) )		4601	0					
ANR	5418	Condition	desired_access == ( FILE_GENERIC_READ | FILE_GENERIC_WRITE )	353:14:10252:10309	4601	0	True				
ANR	5419	EqualityExpression	desired_access == ( FILE_GENERIC_READ | FILE_GENERIC_WRITE )		4601	0		==			
ANR	5420	Identifier	desired_access		4601	0					
ANR	5421	InclusiveOrExpression	FILE_GENERIC_READ | FILE_GENERIC_WRITE		4601	1		|			
ANR	5422	Identifier	FILE_GENERIC_READ		4601	0					
ANR	5423	Identifier	FILE_GENERIC_WRITE		4601	1					
ANR	5424	CompoundStatement		156:74:5063:5063	4601	1					
ANR	5425	ExpressionStatement	bucket -> is_rvalid = 1	354:4:10318:10339	4601	0	True				
ANR	5426	AssignmentExpression	bucket -> is_rvalid = 1		4601	0		=			
ANR	5427	PtrMemberAccess	bucket -> is_rvalid		4601	0					
ANR	5428	Identifier	bucket		4601	0					
ANR	5429	Identifier	is_rvalid		4601	1					
ANR	5430	PrimaryExpression	1		4601	1					
ANR	5431	ExpressionStatement	bucket -> is_readable = fAccess	355:4:10345:10374	4601	1	True				
ANR	5432	AssignmentExpression	bucket -> is_readable = fAccess		4601	0		=			
ANR	5433	PtrMemberAccess	bucket -> is_readable		4601	0					
ANR	5434	Identifier	bucket		4601	0					
ANR	5435	Identifier	is_readable		4601	1					
ANR	5436	Identifier	fAccess		4601	1					
ANR	5437	ExpressionStatement	bucket -> is_wvalid = 1	356:4:10380:10401	4601	2	True				
ANR	5438	AssignmentExpression	bucket -> is_wvalid = 1		4601	0		=			
ANR	5439	PtrMemberAccess	bucket -> is_wvalid		4601	0					
ANR	5440	Identifier	bucket		4601	0					
ANR	5441	Identifier	is_wvalid		4601	1					
ANR	5442	PrimaryExpression	1		4601	1					
ANR	5443	ExpressionStatement	bucket -> is_writable = fAccess	357:4:10407:10436	4601	3	True				
ANR	5444	AssignmentExpression	bucket -> is_writable = fAccess		4601	0		=			
ANR	5445	PtrMemberAccess	bucket -> is_writable		4601	0					
ANR	5446	Identifier	bucket		4601	0					
ANR	5447	Identifier	is_writable		4601	1					
ANR	5448	Identifier	fAccess		4601	1					
ANR	5449	Label	Finished_Impersonate :	361:0:10448:10468	4601	16	True				
ANR	5450	Identifier	Finished_Impersonate		4601	0					
ANR	5451	IfStatement	if ( psec_desc != NULL )		4601	17					
ANR	5452	Condition	psec_desc != NULL	362:5:10475:10491	4601	0	True				
ANR	5453	EqualityExpression	psec_desc != NULL		4601	0		!=			
ANR	5454	Identifier	psec_desc		4601	0					
ANR	5455	Identifier	NULL		4601	1					
ANR	5456	CompoundStatement		165:24:5245:5245	4601	1					
ANR	5457	ExpressionStatement	free ( psec_desc )	363:3:10499:10514	4601	0	True				
ANR	5458	CallExpression	free ( psec_desc )		4601	0					
ANR	5459	Callee	free		4601	0					
ANR	5460	Identifier	free		4601	0					
ANR	5461	ArgumentList	psec_desc		4601	1					
ANR	5462	Argument	psec_desc		4601	0					
ANR	5463	Identifier	psec_desc		4601	0					
ANR	5464	ExpressionStatement	psec_desc = NULL	364:3:10519:10535	4601	1	True				
ANR	5465	AssignmentExpression	psec_desc = NULL		4601	0		=			
ANR	5466	Identifier	psec_desc		4601	0					
ANR	5467	Identifier	NULL		4601	1					
ANR	5468	Label	Finished :	367:0:10542:10550	4601	18	True				
ANR	5469	Identifier	Finished		4601	0					
ANR	5470	IfStatement	if ( thread_token != NULL )		4601	19					
ANR	5471	Condition	thread_token != NULL	368:5:10557:10576	4601	0	True				
ANR	5472	EqualityExpression	thread_token != NULL		4601	0		!=			
ANR	5473	Identifier	thread_token		4601	0					
ANR	5474	Identifier	NULL		4601	1					
ANR	5475	CompoundStatement		171:27:5330:5330	4601	1					
ANR	5476	ExpressionStatement	CloseHandle ( thread_token )	369:3:10584:10609	4601	0	True				
ANR	5477	CallExpression	CloseHandle ( thread_token )		4601	0					
ANR	5478	Callee	CloseHandle		4601	0					
ANR	5479	Identifier	CloseHandle		4601	0					
ANR	5480	ArgumentList	thread_token		4601	1					
ANR	5481	Argument	thread_token		4601	0					
ANR	5482	Identifier	thread_token		4601	0					
ANR	5483	IfStatement	if ( real_path != NULL )		4601	20					
ANR	5484	Condition	real_path != NULL	371:5:10620:10636	4601	0	True				
ANR	5485	EqualityExpression	real_path != NULL		4601	0		!=			
ANR	5486	Identifier	real_path		4601	0					
ANR	5487	Identifier	NULL		4601	1					
ANR	5488	CompoundStatement		174:24:5390:5390	4601	1					
ANR	5489	ExpressionStatement	free ( real_path )	372:3:10644:10659	4601	0	True				
ANR	5490	CallExpression	free ( real_path )		4601	0					
ANR	5491	Callee	free		4601	0					
ANR	5492	Identifier	free		4601	0					
ANR	5493	ArgumentList	real_path		4601	1					
ANR	5494	Argument	real_path		4601	0					
ANR	5495	Identifier	real_path		4601	0					
ANR	5496	ExpressionStatement	real_path = NULL	373:3:10664:10680	4601	1	True				
ANR	5497	AssignmentExpression	real_path = NULL		4601	0		=			
ANR	5498	Identifier	real_path		4601	0					
ANR	5499	Identifier	NULL		4601	1					
ANR	5500	IfStatement	if ( fAccess == FALSE )		4601	21					
ANR	5501	Condition	fAccess == FALSE	376:5:10692:10707	4601	0	True				
ANR	5502	EqualityExpression	fAccess == FALSE		4601	0		==			
ANR	5503	Identifier	fAccess		4601	0					
ANR	5504	Identifier	FALSE		4601	1					
ANR	5505	CompoundStatement		179:23:5461:5461	4601	1					
ANR	5506	ExpressionStatement	errno = EACCES	377:3:10715:10729	4601	0	True				
ANR	5507	AssignmentExpression	errno = EACCES		4601	0		=			
ANR	5508	Identifier	errno		4601	0					
ANR	5509	Identifier	EACCES		4601	1					
ANR	5510	ReturnStatement	return errno ;	378:3:10734:10746	4601	1	True				
ANR	5511	Identifier	errno		4601	0					
ANR	5512	ElseStatement	else		4601	0					
ANR	5513	CompoundStatement		182:9:5508:5508	4601	0					
ANR	5514	ReturnStatement	return 0 ;	380:3:10762:10770	4601	0	True				
ANR	5515	PrimaryExpression	0		4601	0					
ANR	5516	ReturnType	TSRM_API int		4601	1					
ANR	5517	Identifier	tsrm_win32_access		4601	2					
ANR	5518	ParameterList	"const char * pathname , int mode"		4601	3					
ANR	5519	Parameter	const char * pathname	197:31:5216:5235	4601	0	True				
ANR	5520	ParameterType	const char *		4601	0					
ANR	5521	Identifier	pathname		4601	1					
ANR	5522	Parameter	int mode	197:53:5238:5245	4601	1	True				
ANR	5523	ParameterType	int		4601	0					
ANR	5524	Identifier	mode		4601	1					
ANR	5525	CFGEntryNode	ENTRY		4601		True				
ANR	5526	CFGExitNode	EXIT		4601		True				
ANR	5527	Symbol	GROUP_SECURITY_INFORMATION		4601						
ANR	5528	Symbol	FILE_GENERIC_WRITE		4601						
ANR	5529	Symbol	sec_info		4601						
ANR	5530	Symbol	impersonation_token		4601						
ANR	5531	Symbol	thread_token		4601						
ANR	5532	Symbol	type		4601						
ANR	5533	Symbol	tsrm_win32_get_token_sid		4601						
ANR	5534	Symbol	& TWG		4601						
ANR	5535	Symbol	impersonation_token_sid		4601						
ANR	5536	Symbol	mode		4601						
ANR	5537	Symbol	strlen		4601						
ANR	5538	Symbol	granted_access		4601						
ANR	5539	Symbol	desired_access		4601						
ANR	5540	Symbol	OpenProcessToken		4601						
ANR	5541	Symbol	EqualSid		4601						
ANR	5542	Symbol	& privilege_set		4601						
ANR	5543	Symbol	tsrm_realpath		4601						
ANR	5544	Symbol	OWNER_SECURITY_INFORMATION		4601						
ANR	5545	Symbol	fAccess		4601						
ANR	5546	Symbol	errno		4601						
ANR	5547	Symbol	NULL		4601						
ANR	5548	Symbol	& type		4601						
ANR	5549	Symbol	TWG		4601						
ANR	5550	Symbol	& desired_access		4601						
ANR	5551	Symbol	GetCurrentThread		4601						
ANR	5552	Symbol	TRUE		4601						
ANR	5553	Symbol	GetCurrentProcess		4601						
ANR	5554	Symbol	DuplicateToken		4601						
ANR	5555	Symbol	pathname		4601						
ANR	5556	Symbol	privilege_set		4601						
ANR	5557	Symbol	sec_desc_length		4601						
ANR	5558	Symbol	bucket		4601						
ANR	5559	Symbol	GetFileSecurity		4601						
ANR	5560	Symbol	IS_ABSOLUTE_PATH		4601						
ANR	5561	Symbol	* bucket		4601						
ANR	5562	Symbol	& granted_access		4601						
ANR	5563	Symbol	AccessCheck		4601						
ANR	5564	Symbol	bucket -> is_readable		4601						
ANR	5565	Symbol	GetLastError		4601						
ANR	5566	Symbol	priv_set_length		4601						
ANR	5567	Symbol	FILE_FLAG_BACKUP_SEMANTICS		4601						
ANR	5568	Symbol	access		4601						
ANR	5569	Symbol	FILE_GENERIC_EXECUTE		4601						
ANR	5570	Symbol	FILE_GENERIC_READ		4601						
ANR	5571	Symbol	& priv_set_length		4601						
ANR	5572	Symbol	bucket -> is_wvalid		4601						
ANR	5573	Symbol	GetBinaryType		4601						
ANR	5574	Symbol	& sec_desc_length		4601						
ANR	5575	Symbol	gen_map		4601						
ANR	5576	Symbol	FILE_ALL_ACCESS		4601						
ANR	5577	Symbol	EACCES		4601						
ANR	5578	Symbol	TOKEN_ALL_ACCESS		4601						
ANR	5579	Symbol	realpath_cache_size_limit		4601						
ANR	5580	Symbol	DACL_SECURITY_INFORMATION		4601						
ANR	5581	Symbol	real_path		4601						
ANR	5582	Symbol	malloc		4601						
ANR	5583	Symbol	& thread_token		4601						
ANR	5584	Symbol	SecurityImpersonation		4601						
ANR	5585	Symbol	bucket -> is_writable		4601						
ANR	5586	Symbol	& fAccess		4601						
ANR	5587	Symbol	CWDG		4601						
ANR	5588	Symbol	psec_desc		4601						
ANR	5589	Symbol	realpath_cache_lookup		4601						
ANR	5590	Symbol	bucket -> is_rvalid		4601						
ANR	5591	Symbol	OpenThreadToken		4601						
ANR	5592	Symbol	t		4601						
ANR	5593	Symbol	& gen_map		4601						
ANR	5594	Symbol	FALSE		4601						
ANR	5595	Symbol	MAX_PATH		4601						
ANR	5596	Symbol	time		4601						
ANR	5597	Symbol	token_sid		4601						
ANR	5598	Symbol	ERROR_NO_TOKEN		4601						
ANR	5599	Function	process_get	386:0:10783:11304							
ANR	5600	FunctionDef	process_get (FILE * stream)		5599	0					
ANR	5601	CompoundStatement		387:0:10830:11304	5599	0					
ANR	5602	IdentifierDeclStatement	process_pair * ptr ;	388:1:10833:10850	5599	0	True				
ANR	5603	IdentifierDecl	* ptr		5599	0					
ANR	5604	IdentifierDeclType	process_pair *		5599	0					
ANR	5605	Identifier	ptr		5599	1					
ANR	5606	IdentifierDeclStatement	process_pair * newptr ;	389:1:10853:10873	5599	1	True				
ANR	5607	IdentifierDecl	* newptr		5599	0					
ANR	5608	IdentifierDeclType	process_pair *		5599	0					
ANR	5609	Identifier	newptr		5599	1					
ANR	5610	ForStatement	for ( ptr = TWG ( process ) ; ptr < ( TWG ( process ) + TWG ( process_size ) ) ; ptr ++ )		5599	2					
ANR	5611	ForInit	ptr = TWG ( process ) ;	391:6:10882:10900	5599	0	True				
ANR	5612	AssignmentExpression	ptr = TWG ( process )		5599	0		=			
ANR	5613	Identifier	ptr		5599	0					
ANR	5614	CallExpression	TWG ( process )		5599	1					
ANR	5615	Callee	TWG		5599	0					
ANR	5616	Identifier	TWG		5599	0					
ANR	5617	ArgumentList	process		5599	1					
ANR	5618	Argument	process		5599	0					
ANR	5619	Identifier	process		5599	0					
ANR	5620	Condition	ptr < ( TWG ( process ) + TWG ( process_size ) )	391:26:10902:10941	5599	1	True				
ANR	5621	RelationalExpression	ptr < ( TWG ( process ) + TWG ( process_size ) )		5599	0		<			
ANR	5622	Identifier	ptr		5599	0					
ANR	5623	AdditiveExpression	TWG ( process ) + TWG ( process_size )		5599	1		+			
ANR	5624	CallExpression	TWG ( process )		5599	0					
ANR	5625	Callee	TWG		5599	0					
ANR	5626	Identifier	TWG		5599	0					
ANR	5627	ArgumentList	process		5599	1					
ANR	5628	Argument	process		5599	0					
ANR	5629	Identifier	process		5599	0					
ANR	5630	CallExpression	TWG ( process_size )		5599	1					
ANR	5631	Callee	TWG		5599	0					
ANR	5632	Identifier	TWG		5599	0					
ANR	5633	ArgumentList	process_size		5599	1					
ANR	5634	Argument	process_size		5599	0					
ANR	5635	Identifier	process_size		5599	0					
ANR	5636	PostIncDecOperationExpression	ptr ++	391:68:10944:10948	5599	2	True				
ANR	5637	Identifier	ptr		5599	0					
ANR	5638	IncDec	++		5599	1					
ANR	5639	CompoundStatement		5:75:120:120	5599	3					
ANR	5640	IfStatement	if ( ptr -> stream == stream )		5599	0					
ANR	5641	Condition	ptr -> stream == stream	392:6:10959:10979	5599	0	True				
ANR	5642	EqualityExpression	ptr -> stream == stream		5599	0		==			
ANR	5643	PtrMemberAccess	ptr -> stream		5599	0					
ANR	5644	Identifier	ptr		5599	0					
ANR	5645	Identifier	stream		5599	1					
ANR	5646	Identifier	stream		5599	1					
ANR	5647	CompoundStatement		6:29:151:151	5599	1					
ANR	5648	BreakStatement	break ;	393:3:10987:10992	5599	0	True				
ANR	5649	IfStatement	if ( ptr < ( TWG ( process ) + TWG ( process_size ) ) )		5599	3					
ANR	5650	Condition	ptr < ( TWG ( process ) + TWG ( process_size ) )	397:5:11007:11046	5599	0	True				
ANR	5651	RelationalExpression	ptr < ( TWG ( process ) + TWG ( process_size ) )		5599	0		<			
ANR	5652	Identifier	ptr		5599	0					
ANR	5653	AdditiveExpression	TWG ( process ) + TWG ( process_size )		5599	1		+			
ANR	5654	CallExpression	TWG ( process )		5599	0					
ANR	5655	Callee	TWG		5599	0					
ANR	5656	Identifier	TWG		5599	0					
ANR	5657	ArgumentList	process		5599	1					
ANR	5658	Argument	process		5599	0					
ANR	5659	Identifier	process		5599	0					
ANR	5660	CallExpression	TWG ( process_size )		5599	1					
ANR	5661	Callee	TWG		5599	0					
ANR	5662	Identifier	TWG		5599	0					
ANR	5663	ArgumentList	process_size		5599	1					
ANR	5664	Argument	process_size		5599	0					
ANR	5665	Identifier	process_size		5599	0					
ANR	5666	CompoundStatement		11:47:218:218	5599	1					
ANR	5667	ReturnStatement	return ptr ;	398:2:11053:11063	5599	0	True				
ANR	5668	Identifier	ptr		5599	0					
ANR	5669	ExpressionStatement	"newptr = ( process_pair * ) realloc ( ( void * ) TWG ( process ) , ( TWG ( process_size ) + 1 ) * sizeof ( process_pair ) )"	401:1:11070:11166	5599	4	True				
ANR	5670	AssignmentExpression	"newptr = ( process_pair * ) realloc ( ( void * ) TWG ( process ) , ( TWG ( process_size ) + 1 ) * sizeof ( process_pair ) )"		5599	0		=			
ANR	5671	Identifier	newptr		5599	0					
ANR	5672	CastExpression	"( process_pair * ) realloc ( ( void * ) TWG ( process ) , ( TWG ( process_size ) + 1 ) * sizeof ( process_pair ) )"		5599	1					
ANR	5673	CastTarget	process_pair *		5599	0					
ANR	5674	CallExpression	"realloc ( ( void * ) TWG ( process ) , ( TWG ( process_size ) + 1 ) * sizeof ( process_pair ) )"		5599	1					
ANR	5675	Callee	realloc		5599	0					
ANR	5676	Identifier	realloc		5599	0					
ANR	5677	ArgumentList	( void * ) TWG ( process )		5599	1					
ANR	5678	Argument	( void * ) TWG ( process )		5599	0					
ANR	5679	CastExpression	( void * ) TWG ( process )		5599	0					
ANR	5680	CastTarget	void *		5599	0					
ANR	5681	CallExpression	TWG ( process )		5599	1					
ANR	5682	Callee	TWG		5599	0					
ANR	5683	Identifier	TWG		5599	0					
ANR	5684	ArgumentList	process		5599	1					
ANR	5685	Argument	process		5599	0					
ANR	5686	Identifier	process		5599	0					
ANR	5687	Argument	( TWG ( process_size ) + 1 ) * sizeof ( process_pair )		5599	1					
ANR	5688	MultiplicativeExpression	( TWG ( process_size ) + 1 ) * sizeof ( process_pair )		5599	0		*			
ANR	5689	AdditiveExpression	TWG ( process_size ) + 1		5599	0		+			
ANR	5690	CallExpression	TWG ( process_size )		5599	0					
ANR	5691	Callee	TWG		5599	0					
ANR	5692	Identifier	TWG		5599	0					
ANR	5693	ArgumentList	process_size		5599	1					
ANR	5694	Argument	process_size		5599	0					
ANR	5695	Identifier	process_size		5599	0					
ANR	5696	PrimaryExpression	1		5599	1					
ANR	5697	SizeofExpression	sizeof ( process_pair )		5599	1					
ANR	5698	Sizeof	sizeof		5599	0					
ANR	5699	SizeofOperand	process_pair		5599	1					
ANR	5700	IfStatement	if ( newptr == NULL )		5599	5					
ANR	5701	Condition	newptr == NULL	402:5:11173:11186	5599	0	True				
ANR	5702	EqualityExpression	newptr == NULL		5599	0		==			
ANR	5703	Identifier	newptr		5599	0					
ANR	5704	Identifier	NULL		5599	1					
ANR	5705	CompoundStatement		16:21:358:358	5599	1					
ANR	5706	ReturnStatement	return NULL ;	403:2:11193:11204	5599	0	True				
ANR	5707	Identifier	NULL		5599	0					
ANR	5708	ExpressionStatement	TWG ( process ) = newptr	406:1:11211:11232	5599	6	True				
ANR	5709	AssignmentExpression	TWG ( process ) = newptr		5599	0		=			
ANR	5710	CallExpression	TWG ( process )		5599	0					
ANR	5711	Callee	TWG		5599	0					
ANR	5712	Identifier	TWG		5599	0					
ANR	5713	ArgumentList	process		5599	1					
ANR	5714	Argument	process		5599	0					
ANR	5715	Identifier	process		5599	0					
ANR	5716	Identifier	newptr		5599	1					
ANR	5717	ExpressionStatement	ptr = newptr + TWG ( process_size )	407:1:11235:11267	5599	7	True				
ANR	5718	AssignmentExpression	ptr = newptr + TWG ( process_size )		5599	0		=			
ANR	5719	Identifier	ptr		5599	0					
ANR	5720	AdditiveExpression	newptr + TWG ( process_size )		5599	1		+			
ANR	5721	Identifier	newptr		5599	0					
ANR	5722	CallExpression	TWG ( process_size )		5599	1					
ANR	5723	Callee	TWG		5599	0					
ANR	5724	Identifier	TWG		5599	0					
ANR	5725	ArgumentList	process_size		5599	1					
ANR	5726	Argument	process_size		5599	0					
ANR	5727	Identifier	process_size		5599	0					
ANR	5728	ExpressionStatement	TWG ( process_size ) ++	408:1:11270:11289	5599	8	True				
ANR	5729	PostIncDecOperationExpression	TWG ( process_size ) ++		5599	0					
ANR	5730	CallExpression	TWG ( process_size )		5599	0					
ANR	5731	Callee	TWG		5599	0					
ANR	5732	Identifier	TWG		5599	0					
ANR	5733	ArgumentList	process_size		5599	1					
ANR	5734	Argument	process_size		5599	0					
ANR	5735	Identifier	process_size		5599	0					
ANR	5736	IncDec	++		5599	1					
ANR	5737	ReturnStatement	return ptr ;	409:1:11292:11302	5599	9	True				
ANR	5738	Identifier	ptr		5599	0					
ANR	5739	ReturnType	static process_pair *		5599	1					
ANR	5740	Identifier	process_get		5599	2					
ANR	5741	ParameterList	FILE * stream		5599	3					
ANR	5742	Parameter	FILE * stream	386:33:10816:10827	5599	0	True				
ANR	5743	ParameterType	FILE *		5599	0					
ANR	5744	Identifier	stream		5599	1					
ANR	5745	CFGEntryNode	ENTRY		5599		True				
ANR	5746	CFGExitNode	EXIT		5599		True				
ANR	5747	Symbol	process_size		5599						
ANR	5748	Symbol	newptr		5599						
ANR	5749	Symbol	process		5599						
ANR	5750	Symbol	NULL		5599						
ANR	5751	Symbol	stream		5599						
ANR	5752	Symbol	TWG		5599						
ANR	5753	Symbol	* ptr		5599						
ANR	5754	Symbol	ptr -> stream		5599						
ANR	5755	Symbol	realloc		5599						
ANR	5756	Symbol	ptr		5599						
ANR	5757	Function	shm_get	412:0:11307:11913							
ANR	5758	FunctionDef	"shm_get (int key , void * addr)"		5757	0					
ANR	5759	CompoundStatement		413:0:11353:11913	5757	0					
ANR	5760	IdentifierDeclStatement	shm_pair * ptr ;	414:1:11356:11369	5757	0	True				
ANR	5761	IdentifierDecl	* ptr		5757	0					
ANR	5762	IdentifierDeclType	shm_pair *		5757	0					
ANR	5763	Identifier	ptr		5757	1					
ANR	5764	IdentifierDeclStatement	shm_pair * newptr ;	415:1:11372:11388	5757	1	True				
ANR	5765	IdentifierDecl	* newptr		5757	0					
ANR	5766	IdentifierDeclType	shm_pair *		5757	0					
ANR	5767	Identifier	newptr		5757	1					
ANR	5768	ForStatement	for ( ptr = TWG ( shm ) ; ptr < ( TWG ( shm ) + TWG ( shm_size ) ) ; ptr ++ )		5757	2					
ANR	5769	ForInit	ptr = TWG ( shm ) ;	417:6:11397:11411	5757	0	True				
ANR	5770	AssignmentExpression	ptr = TWG ( shm )		5757	0		=			
ANR	5771	Identifier	ptr		5757	0					
ANR	5772	CallExpression	TWG ( shm )		5757	1					
ANR	5773	Callee	TWG		5757	0					
ANR	5774	Identifier	TWG		5757	0					
ANR	5775	ArgumentList	shm		5757	1					
ANR	5776	Argument	shm		5757	0					
ANR	5777	Identifier	shm		5757	0					
ANR	5778	Condition	ptr < ( TWG ( shm ) + TWG ( shm_size ) )	417:22:11413:11444	5757	1	True				
ANR	5779	RelationalExpression	ptr < ( TWG ( shm ) + TWG ( shm_size ) )		5757	0		<			
ANR	5780	Identifier	ptr		5757	0					
ANR	5781	AdditiveExpression	TWG ( shm ) + TWG ( shm_size )		5757	1		+			
ANR	5782	CallExpression	TWG ( shm )		5757	0					
ANR	5783	Callee	TWG		5757	0					
ANR	5784	Identifier	TWG		5757	0					
ANR	5785	ArgumentList	shm		5757	1					
ANR	5786	Argument	shm		5757	0					
ANR	5787	Identifier	shm		5757	0					
ANR	5788	CallExpression	TWG ( shm_size )		5757	1					
ANR	5789	Callee	TWG		5757	0					
ANR	5790	Identifier	TWG		5757	0					
ANR	5791	ArgumentList	shm_size		5757	1					
ANR	5792	Argument	shm_size		5757	0					
ANR	5793	Identifier	shm_size		5757	0					
ANR	5794	PostIncDecOperationExpression	ptr ++	417:56:11447:11451	5757	2	True				
ANR	5795	Identifier	ptr		5757	0					
ANR	5796	IncDec	++		5757	1					
ANR	5797	CompoundStatement		5:63:100:100	5757	3					
ANR	5798	IfStatement	if ( ! ptr -> descriptor )		5757	0					
ANR	5799	Condition	! ptr -> descriptor	418:6:11462:11477	5757	0	True				
ANR	5800	UnaryOperationExpression	! ptr -> descriptor		5757	0					
ANR	5801	UnaryOperator	!		5757	0					
ANR	5802	PtrMemberAccess	ptr -> descriptor		5757	1					
ANR	5803	Identifier	ptr		5757	0					
ANR	5804	Identifier	descriptor		5757	1					
ANR	5805	CompoundStatement		6:24:126:126	5757	1					
ANR	5806	ContinueStatement	continue ;	419:3:11485:11493	5757	0	True				
ANR	5807	IfStatement	if ( ! addr && ptr -> descriptor -> shm_perm . key == key )		5757	1					
ANR	5808	Condition	! addr && ptr -> descriptor -> shm_perm . key == key	421:6:11505:11549	5757	0	True				
ANR	5809	AndExpression	! addr && ptr -> descriptor -> shm_perm . key == key		5757	0		&&			
ANR	5810	UnaryOperationExpression	! addr		5757	0					
ANR	5811	UnaryOperator	!		5757	0					
ANR	5812	Identifier	addr		5757	1					
ANR	5813	EqualityExpression	ptr -> descriptor -> shm_perm . key == key		5757	1		==			
ANR	5814	MemberAccess	ptr -> descriptor -> shm_perm . key		5757	0					
ANR	5815	PtrMemberAccess	ptr -> descriptor -> shm_perm		5757	0					
ANR	5816	PtrMemberAccess	ptr -> descriptor		5757	0					
ANR	5817	Identifier	ptr		5757	0					
ANR	5818	Identifier	descriptor		5757	1					
ANR	5819	Identifier	shm_perm		5757	1					
ANR	5820	Identifier	key		5757	1					
ANR	5821	Identifier	key		5757	1					
ANR	5822	CompoundStatement		9:53:198:198	5757	1					
ANR	5823	BreakStatement	break ;	422:3:11557:11562	5757	0	True				
ANR	5824	ElseStatement	else		5757	0					
ANR	5825	IfStatement	if ( ptr -> addr == addr )		5757	0					
ANR	5826	Condition	ptr -> addr == addr	423:13:11577:11593	5757	0	True				
ANR	5827	EqualityExpression	ptr -> addr == addr		5757	0		==			
ANR	5828	PtrMemberAccess	ptr -> addr		5757	0					
ANR	5829	Identifier	ptr		5757	0					
ANR	5830	Identifier	addr		5757	1					
ANR	5831	Identifier	addr		5757	1					
ANR	5832	CompoundStatement		11:32:242:242	5757	1					
ANR	5833	BreakStatement	break ;	424:3:11601:11606	5757	0	True				
ANR	5834	IfStatement	if ( ptr < ( TWG ( shm ) + TWG ( shm_size ) ) )		5757	3					
ANR	5835	Condition	ptr < ( TWG ( shm ) + TWG ( shm_size ) )	428:5:11621:11652	5757	0	True				
ANR	5836	RelationalExpression	ptr < ( TWG ( shm ) + TWG ( shm_size ) )		5757	0		<			
ANR	5837	Identifier	ptr		5757	0					
ANR	5838	AdditiveExpression	TWG ( shm ) + TWG ( shm_size )		5757	1		+			
ANR	5839	CallExpression	TWG ( shm )		5757	0					
ANR	5840	Callee	TWG		5757	0					
ANR	5841	Identifier	TWG		5757	0					
ANR	5842	ArgumentList	shm		5757	1					
ANR	5843	Argument	shm		5757	0					
ANR	5844	Identifier	shm		5757	0					
ANR	5845	CallExpression	TWG ( shm_size )		5757	1					
ANR	5846	Callee	TWG		5757	0					
ANR	5847	Identifier	TWG		5757	0					
ANR	5848	ArgumentList	shm_size		5757	1					
ANR	5849	Argument	shm_size		5757	0					
ANR	5850	Identifier	shm_size		5757	0					
ANR	5851	CompoundStatement		16:39:301:301	5757	1					
ANR	5852	ReturnStatement	return ptr ;	429:2:11659:11669	5757	0	True				
ANR	5853	Identifier	ptr		5757	0					
ANR	5854	ExpressionStatement	"newptr = ( shm_pair * ) realloc ( ( void * ) TWG ( shm ) , ( TWG ( shm_size ) + 1 ) * sizeof ( shm_pair ) )"	432:1:11676:11756	5757	4	True				
ANR	5855	AssignmentExpression	"newptr = ( shm_pair * ) realloc ( ( void * ) TWG ( shm ) , ( TWG ( shm_size ) + 1 ) * sizeof ( shm_pair ) )"		5757	0		=			
ANR	5856	Identifier	newptr		5757	0					
ANR	5857	CastExpression	"( shm_pair * ) realloc ( ( void * ) TWG ( shm ) , ( TWG ( shm_size ) + 1 ) * sizeof ( shm_pair ) )"		5757	1					
ANR	5858	CastTarget	shm_pair *		5757	0					
ANR	5859	CallExpression	"realloc ( ( void * ) TWG ( shm ) , ( TWG ( shm_size ) + 1 ) * sizeof ( shm_pair ) )"		5757	1					
ANR	5860	Callee	realloc		5757	0					
ANR	5861	Identifier	realloc		5757	0					
ANR	5862	ArgumentList	( void * ) TWG ( shm )		5757	1					
ANR	5863	Argument	( void * ) TWG ( shm )		5757	0					
ANR	5864	CastExpression	( void * ) TWG ( shm )		5757	0					
ANR	5865	CastTarget	void *		5757	0					
ANR	5866	CallExpression	TWG ( shm )		5757	1					
ANR	5867	Callee	TWG		5757	0					
ANR	5868	Identifier	TWG		5757	0					
ANR	5869	ArgumentList	shm		5757	1					
ANR	5870	Argument	shm		5757	0					
ANR	5871	Identifier	shm		5757	0					
ANR	5872	Argument	( TWG ( shm_size ) + 1 ) * sizeof ( shm_pair )		5757	1					
ANR	5873	MultiplicativeExpression	( TWG ( shm_size ) + 1 ) * sizeof ( shm_pair )		5757	0		*			
ANR	5874	AdditiveExpression	TWG ( shm_size ) + 1		5757	0		+			
ANR	5875	CallExpression	TWG ( shm_size )		5757	0					
ANR	5876	Callee	TWG		5757	0					
ANR	5877	Identifier	TWG		5757	0					
ANR	5878	ArgumentList	shm_size		5757	1					
ANR	5879	Argument	shm_size		5757	0					
ANR	5880	Identifier	shm_size		5757	0					
ANR	5881	PrimaryExpression	1		5757	1					
ANR	5882	SizeofExpression	sizeof ( shm_pair )		5757	1					
ANR	5883	Sizeof	sizeof		5757	0					
ANR	5884	SizeofOperand	shm_pair		5757	1					
ANR	5885	IfStatement	if ( newptr == NULL )		5757	5					
ANR	5886	Condition	newptr == NULL	433:5:11763:11776	5757	0	True				
ANR	5887	EqualityExpression	newptr == NULL		5757	0		==			
ANR	5888	Identifier	newptr		5757	0					
ANR	5889	Identifier	NULL		5757	1					
ANR	5890	CompoundStatement		21:21:425:425	5757	1					
ANR	5891	ReturnStatement	return NULL ;	434:2:11783:11794	5757	0	True				
ANR	5892	Identifier	NULL		5757	0					
ANR	5893	ExpressionStatement	TWG ( shm ) = newptr	437:1:11801:11818	5757	6	True				
ANR	5894	AssignmentExpression	TWG ( shm ) = newptr		5757	0		=			
ANR	5895	CallExpression	TWG ( shm )		5757	0					
ANR	5896	Callee	TWG		5757	0					
ANR	5897	Identifier	TWG		5757	0					
ANR	5898	ArgumentList	shm		5757	1					
ANR	5899	Argument	shm		5757	0					
ANR	5900	Identifier	shm		5757	0					
ANR	5901	Identifier	newptr		5757	1					
ANR	5902	ExpressionStatement	ptr = newptr + TWG ( shm_size )	438:1:11821:11849	5757	7	True				
ANR	5903	AssignmentExpression	ptr = newptr + TWG ( shm_size )		5757	0		=			
ANR	5904	Identifier	ptr		5757	0					
ANR	5905	AdditiveExpression	newptr + TWG ( shm_size )		5757	1		+			
ANR	5906	Identifier	newptr		5757	0					
ANR	5907	CallExpression	TWG ( shm_size )		5757	1					
ANR	5908	Callee	TWG		5757	0					
ANR	5909	Identifier	TWG		5757	0					
ANR	5910	ArgumentList	shm_size		5757	1					
ANR	5911	Argument	shm_size		5757	0					
ANR	5912	Identifier	shm_size		5757	0					
ANR	5913	ExpressionStatement	TWG ( shm_size ) ++	439:1:11852:11867	5757	8	True				
ANR	5914	PostIncDecOperationExpression	TWG ( shm_size ) ++		5757	0					
ANR	5915	CallExpression	TWG ( shm_size )		5757	0					
ANR	5916	Callee	TWG		5757	0					
ANR	5917	Identifier	TWG		5757	0					
ANR	5918	ArgumentList	shm_size		5757	1					
ANR	5919	Argument	shm_size		5757	0					
ANR	5920	Identifier	shm_size		5757	0					
ANR	5921	IncDec	++		5757	1					
ANR	5922	ExpressionStatement	"memset ( ptr , 0 , sizeof ( * ptr ) )"	440:1:11870:11898	5757	9	True				
ANR	5923	CallExpression	"memset ( ptr , 0 , sizeof ( * ptr ) )"		5757	0					
ANR	5924	Callee	memset		5757	0					
ANR	5925	Identifier	memset		5757	0					
ANR	5926	ArgumentList	ptr		5757	1					
ANR	5927	Argument	ptr		5757	0					
ANR	5928	Identifier	ptr		5757	0					
ANR	5929	Argument	0		5757	1					
ANR	5930	PrimaryExpression	0		5757	0					
ANR	5931	Argument	sizeof ( * ptr )		5757	2					
ANR	5932	SizeofExpression	sizeof ( * ptr )		5757	0					
ANR	5933	Sizeof	sizeof		5757	0					
ANR	5934	UnaryOperationExpression	* ptr		5757	1					
ANR	5935	UnaryOperator	*		5757	0					
ANR	5936	Identifier	ptr		5757	1					
ANR	5937	ReturnStatement	return ptr ;	441:1:11901:11911	5757	10	True				
ANR	5938	Identifier	ptr		5757	0					
ANR	5939	ReturnType	static shm_pair *		5757	1					
ANR	5940	Identifier	shm_get		5757	2					
ANR	5941	ParameterList	"int key , void * addr"		5757	3					
ANR	5942	Parameter	int key	412:25:11332:11338	5757	0	True				
ANR	5943	ParameterType	int		5757	0					
ANR	5944	Identifier	key		5757	1					
ANR	5945	Parameter	void * addr	412:34:11341:11350	5757	1	True				
ANR	5946	ParameterType	void *		5757	0					
ANR	5947	Identifier	addr		5757	1					
ANR	5948	CFGEntryNode	ENTRY		5757		True				
ANR	5949	CFGExitNode	EXIT		5757		True				
ANR	5950	Symbol	* * ptr		5757						
ANR	5951	Symbol	NULL		5757						
ANR	5952	Symbol	ptr -> descriptor -> shm_perm . key		5757						
ANR	5953	Symbol	TWG		5757						
ANR	5954	Symbol	* ptr -> descriptor		5757						
ANR	5955	Symbol	ptr -> addr		5757						
ANR	5956	Symbol	shm_size		5757						
ANR	5957	Symbol	realloc		5757						
ANR	5958	Symbol	ptr -> descriptor		5757						
ANR	5959	Symbol	ptr		5757						
ANR	5960	Symbol	newptr		5757						
ANR	5961	Symbol	* ptr		5757						
ANR	5962	Symbol	shm		5757						
ANR	5963	Symbol	addr		5757						
ANR	5964	Symbol	ptr -> descriptor -> shm_perm		5757						
ANR	5965	Symbol	key		5757						
ANR	5966	Function	dupHandle	444:0:11916:12147							
ANR	5967	FunctionDef	"dupHandle (HANDLE fh , BOOL inherit)"		5966	0					
ANR	5968	CompoundStatement		444:49:11965:12147	5966	0					
ANR	5969	IdentifierDeclStatement	"HANDLE copy , self = GetCurrentProcess ( ) ;"	445:1:11968:12007	5966	0	True				
ANR	5970	IdentifierDecl	copy		5966	0					
ANR	5971	IdentifierDeclType	HANDLE		5966	0					
ANR	5972	Identifier	copy		5966	1					
ANR	5973	IdentifierDecl	self = GetCurrentProcess ( )		5966	1					
ANR	5974	IdentifierDeclType	HANDLE		5966	0					
ANR	5975	Identifier	self		5966	1					
ANR	5976	AssignmentExpression	self = GetCurrentProcess ( )		5966	2		=			
ANR	5977	Identifier	self		5966	0					
ANR	5978	CallExpression	GetCurrentProcess ( )		5966	1					
ANR	5979	Callee	GetCurrentProcess		5966	0					
ANR	5980	Identifier	GetCurrentProcess		5966	0					
ANR	5981	ArgumentList			5966	1					
ANR	5982	IfStatement	"if ( ! DuplicateHandle ( self , fh , self , & copy , 0 , inherit , DUPLICATE_SAME_ACCESS | DUPLICATE_CLOSE_SOURCE ) )"		5966	1					
ANR	5983	Condition	"! DuplicateHandle ( self , fh , self , & copy , 0 , inherit , DUPLICATE_SAME_ACCESS | DUPLICATE_CLOSE_SOURCE )"	446:5:12014:12110	5966	0	True				
ANR	5984	UnaryOperationExpression	"! DuplicateHandle ( self , fh , self , & copy , 0 , inherit , DUPLICATE_SAME_ACCESS | DUPLICATE_CLOSE_SOURCE )"		5966	0					
ANR	5985	UnaryOperator	!		5966	0					
ANR	5986	CallExpression	"DuplicateHandle ( self , fh , self , & copy , 0 , inherit , DUPLICATE_SAME_ACCESS | DUPLICATE_CLOSE_SOURCE )"		5966	1					
ANR	5987	Callee	DuplicateHandle		5966	0					
ANR	5988	Identifier	DuplicateHandle		5966	0					
ANR	5989	ArgumentList	self		5966	1					
ANR	5990	Argument	self		5966	0					
ANR	5991	Identifier	self		5966	0					
ANR	5992	Argument	fh		5966	1					
ANR	5993	Identifier	fh		5966	0					
ANR	5994	Argument	self		5966	2					
ANR	5995	Identifier	self		5966	0					
ANR	5996	Argument	& copy		5966	3					
ANR	5997	UnaryOperationExpression	& copy		5966	0					
ANR	5998	UnaryOperator	&		5966	0					
ANR	5999	Identifier	copy		5966	1					
ANR	6000	Argument	0		5966	4					
ANR	6001	PrimaryExpression	0		5966	0					
ANR	6002	Argument	inherit		5966	5					
ANR	6003	Identifier	inherit		5966	0					
ANR	6004	Argument	DUPLICATE_SAME_ACCESS | DUPLICATE_CLOSE_SOURCE		5966	6					
ANR	6005	InclusiveOrExpression	DUPLICATE_SAME_ACCESS | DUPLICATE_CLOSE_SOURCE		5966	0		|			
ANR	6006	Identifier	DUPLICATE_SAME_ACCESS		5966	0					
ANR	6007	Identifier	DUPLICATE_CLOSE_SOURCE		5966	1					
ANR	6008	CompoundStatement		3:104:147:147	5966	1					
ANR	6009	ReturnStatement	return NULL ;	447:2:12117:12128	5966	0	True				
ANR	6010	Identifier	NULL		5966	0					
ANR	6011	ReturnStatement	return copy ;	449:1:12134:12145	5966	2	True				
ANR	6012	Identifier	copy		5966	0					
ANR	6013	ReturnType	static HANDLE		5966	1					
ANR	6014	Identifier	dupHandle		5966	2					
ANR	6015	ParameterList	"HANDLE fh , BOOL inherit"		5966	3					
ANR	6016	Parameter	HANDLE fh	444:24:11940:11948	5966	0	True				
ANR	6017	ParameterType	HANDLE		5966	0					
ANR	6018	Identifier	fh		5966	1					
ANR	6019	Parameter	BOOL inherit	444:35:11951:11962	5966	1	True				
ANR	6020	ParameterType	BOOL		5966	0					
ANR	6021	Identifier	inherit		5966	1					
ANR	6022	CFGEntryNode	ENTRY		5966		True				
ANR	6023	CFGExitNode	EXIT		5966		True				
ANR	6024	Symbol	DUPLICATE_CLOSE_SOURCE		5966						
ANR	6025	Symbol	fh		5966						
ANR	6026	Symbol	DuplicateHandle		5966						
ANR	6027	Symbol	NULL		5966						
ANR	6028	Symbol	& copy		5966						
ANR	6029	Symbol	inherit		5966						
ANR	6030	Symbol	DUPLICATE_SAME_ACCESS		5966						
ANR	6031	Symbol	self		5966						
ANR	6032	Symbol	GetCurrentProcess		5966						
ANR	6033	Symbol	copy		5966						
ANR	6034	Function	popen	452:0:12150:12258							
ANR	6035	FunctionDef	"popen (const char * command , const char * type)"		6034	0					
ANR	6036	CompoundStatement		453:0:12210:12258	6034	0					
ANR	6037	ReturnStatement	"return popen_ex ( command , type , NULL , NULL ) ;"	455:1:12214:12256	6034	0	True				
ANR	6038	CallExpression	"popen_ex ( command , type , NULL , NULL )"		6034	0					
ANR	6039	Callee	popen_ex		6034	0					
ANR	6040	Identifier	popen_ex		6034	0					
ANR	6041	ArgumentList	command		6034	1					
ANR	6042	Argument	command		6034	0					
ANR	6043	Identifier	command		6034	0					
ANR	6044	Argument	type		6034	1					
ANR	6045	Identifier	type		6034	0					
ANR	6046	Argument	NULL		6034	2					
ANR	6047	Identifier	NULL		6034	0					
ANR	6048	Argument	NULL		6034	3					
ANR	6049	Identifier	NULL		6034	0					
ANR	6050	ReturnType	TSRM_API FILE *		6034	1					
ANR	6051	Identifier	popen		6034	2					
ANR	6052	ParameterList	"const char * command , const char * type"		6034	3					
ANR	6053	Parameter	const char * command	452:21:12171:12189	6034	0	True				
ANR	6054	ParameterType	const char *		6034	0					
ANR	6055	Identifier	command		6034	1					
ANR	6056	Parameter	const char * type	452:42:12192:12207	6034	1	True				
ANR	6057	ParameterType	const char *		6034	0					
ANR	6058	Identifier	type		6034	1					
ANR	6059	CFGEntryNode	ENTRY		6034		True				
ANR	6060	CFGExitNode	EXIT		6034		True				
ANR	6061	Symbol	popen_ex		6034						
ANR	6062	Symbol	NULL		6034						
ANR	6063	Symbol	type		6034						
ANR	6064	Symbol	command		6034						
ANR	6065	Function	popen_ex	458:0:12261:15177							
ANR	6066	FunctionDef	"popen_ex (const char * command , const char * type , const char * cwd , char * env)"		6065	0					
ANR	6067	CompoundStatement		459:0:12352:15177	6065	0					
ANR	6068	IdentifierDeclStatement	FILE * stream = NULL ;	460:1:12355:12374	6065	0	True				
ANR	6069	IdentifierDecl	* stream = NULL		6065	0					
ANR	6070	IdentifierDeclType	FILE *		6065	0					
ANR	6071	Identifier	stream		6065	1					
ANR	6072	AssignmentExpression	* stream = NULL		6065	2		=			
ANR	6073	Identifier	NULL		6065	0					
ANR	6074	Identifier	NULL		6065	1					
ANR	6075	IdentifierDeclStatement	"int fno , type_len , read , mode ;"	461:1:12377:12406	6065	1	True				
ANR	6076	IdentifierDecl	fno		6065	0					
ANR	6077	IdentifierDeclType	int		6065	0					
ANR	6078	Identifier	fno		6065	1					
ANR	6079	IdentifierDecl	type_len		6065	1					
ANR	6080	IdentifierDeclType	int		6065	0					
ANR	6081	Identifier	type_len		6065	1					
ANR	6082	IdentifierDecl	read		6065	2					
ANR	6083	IdentifierDeclType	int		6065	0					
ANR	6084	Identifier	read		6065	1					
ANR	6085	IdentifierDecl	mode		6065	3					
ANR	6086	IdentifierDeclType	int		6065	0					
ANR	6087	Identifier	mode		6065	1					
ANR	6088	IdentifierDeclStatement	STARTUPINFO startup ;	462:1:12409:12428	6065	2	True				
ANR	6089	IdentifierDecl	startup		6065	0					
ANR	6090	IdentifierDeclType	STARTUPINFO		6065	0					
ANR	6091	Identifier	startup		6065	1					
ANR	6092	IdentifierDeclStatement	PROCESS_INFORMATION process ;	463:1:12431:12458	6065	3	True				
ANR	6093	IdentifierDecl	process		6065	0					
ANR	6094	IdentifierDeclType	PROCESS_INFORMATION		6065	0					
ANR	6095	Identifier	process		6065	1					
ANR	6096	IdentifierDeclStatement	SECURITY_ATTRIBUTES security ;	464:1:12461:12489	6065	4	True				
ANR	6097	IdentifierDecl	security		6065	0					
ANR	6098	IdentifierDeclType	SECURITY_ATTRIBUTES		6065	0					
ANR	6099	Identifier	security		6065	1					
ANR	6100	IdentifierDeclStatement	"HANDLE in , out ;"	465:1:12492:12506	6065	5	True				
ANR	6101	IdentifierDecl	in		6065	0					
ANR	6102	IdentifierDeclType	HANDLE		6065	0					
ANR	6103	Identifier	in		6065	1					
ANR	6104	IdentifierDecl	out		6065	1					
ANR	6105	IdentifierDeclType	HANDLE		6065	0					
ANR	6106	Identifier	out		6065	1					
ANR	6107	IdentifierDeclStatement	DWORD dwCreateFlags = 0 ;	466:1:12509:12532	6065	6	True				
ANR	6108	IdentifierDecl	dwCreateFlags = 0		6065	0					
ANR	6109	IdentifierDeclType	DWORD		6065	0					
ANR	6110	Identifier	dwCreateFlags		6065	1					
ANR	6111	AssignmentExpression	dwCreateFlags = 0		6065	2		=			
ANR	6112	Identifier	dwCreateFlags		6065	0					
ANR	6113	PrimaryExpression	0		6065	1					
ANR	6114	IdentifierDeclStatement	BOOL res ;	467:1:12535:12543	6065	7	True				
ANR	6115	IdentifierDecl	res		6065	0					
ANR	6116	IdentifierDeclType	BOOL		6065	0					
ANR	6117	Identifier	res		6065	1					
ANR	6118	IdentifierDeclStatement	process_pair * proc ;	468:1:12546:12564	6065	8	True				
ANR	6119	IdentifierDecl	* proc		6065	0					
ANR	6120	IdentifierDeclType	process_pair *		6065	0					
ANR	6121	Identifier	proc		6065	1					
ANR	6122	IdentifierDeclStatement	char * cmd ;	469:1:12567:12576	6065	9	True				
ANR	6123	IdentifierDecl	* cmd		6065	0					
ANR	6124	IdentifierDeclType	char *		6065	0					
ANR	6125	Identifier	cmd		6065	1					
ANR	6126	IdentifierDeclStatement	int i ;	470:1:12579:12584	6065	10	True				
ANR	6127	IdentifierDecl	i		6065	0					
ANR	6128	IdentifierDeclType	int		6065	0					
ANR	6129	Identifier	i		6065	1					
ANR	6130	IdentifierDeclStatement	char * ptype = ( char * ) type ;	471:1:12587:12613	6065	11	True				
ANR	6131	IdentifierDecl	* ptype = ( char * ) type		6065	0					
ANR	6132	IdentifierDeclType	char *		6065	0					
ANR	6133	Identifier	ptype		6065	1					
ANR	6134	AssignmentExpression	* ptype = ( char * ) type		6065	2		=			
ANR	6135	Identifier	ptype		6065	0					
ANR	6136	CastExpression	( char * ) type		6065	1					
ANR	6137	CastTarget	char *		6065	0					
ANR	6138	Identifier	type		6065	1					
ANR	6139	IdentifierDeclStatement	HANDLE thread_token = NULL ;	472:1:12616:12642	6065	12	True				
ANR	6140	IdentifierDecl	thread_token = NULL		6065	0					
ANR	6141	IdentifierDeclType	HANDLE		6065	0					
ANR	6142	Identifier	thread_token		6065	1					
ANR	6143	AssignmentExpression	thread_token = NULL		6065	2		=			
ANR	6144	Identifier	NULL		6065	0					
ANR	6145	Identifier	NULL		6065	1					
ANR	6146	IdentifierDeclStatement	HANDLE token_user = NULL ;	473:1:12645:12669	6065	13	True				
ANR	6147	IdentifierDecl	token_user = NULL		6065	0					
ANR	6148	IdentifierDeclType	HANDLE		6065	0					
ANR	6149	Identifier	token_user		6065	1					
ANR	6150	AssignmentExpression	token_user = NULL		6065	2		=			
ANR	6151	Identifier	NULL		6065	0					
ANR	6152	Identifier	NULL		6065	1					
ANR	6153	IdentifierDeclStatement	BOOL asuser = TRUE ;	474:1:12672:12690	6065	14	True				
ANR	6154	IdentifierDecl	asuser = TRUE		6065	0					
ANR	6155	IdentifierDeclType	BOOL		6065	0					
ANR	6156	Identifier	asuser		6065	1					
ANR	6157	AssignmentExpression	asuser = TRUE		6065	2		=			
ANR	6158	Identifier	TRUE		6065	0					
ANR	6159	Identifier	TRUE		6065	1					
ANR	6160	IfStatement	if ( ! type )		6065	15					
ANR	6161	Condition	! type	476:5:12698:12702	6065	0	True				
ANR	6162	UnaryOperationExpression	! type		6065	0					
ANR	6163	UnaryOperator	!		6065	0					
ANR	6164	Identifier	type		6065	1					
ANR	6165	CompoundStatement		18:12:352:352	6065	1					
ANR	6166	ReturnStatement	return NULL ;	477:2:12709:12720	6065	0	True				
ANR	6167	Identifier	NULL		6065	0					
ANR	6168	ExpressionStatement	type_len = ( int ) strlen ( type )	481:1:12797:12825	6065	16	True				
ANR	6169	AssignmentExpression	type_len = ( int ) strlen ( type )		6065	0		=			
ANR	6170	Identifier	type_len		6065	0					
ANR	6171	CastExpression	( int ) strlen ( type )		6065	1					
ANR	6172	CastTarget	int		6065	0					
ANR	6173	CallExpression	strlen ( type )		6065	1					
ANR	6174	Callee	strlen		6065	0					
ANR	6175	Identifier	strlen		6065	0					
ANR	6176	ArgumentList	type		6065	1					
ANR	6177	Argument	type		6065	0					
ANR	6178	Identifier	type		6065	0					
ANR	6179	IfStatement	if ( type_len < 1 || type_len > 2 )		6065	17					
ANR	6180	Condition	type_len < 1 || type_len > 2	482:5:12832:12858	6065	0	True				
ANR	6181	OrExpression	type_len < 1 || type_len > 2		6065	0		||			
ANR	6182	RelationalExpression	type_len < 1		6065	0		<			
ANR	6183	Identifier	type_len		6065	0					
ANR	6184	PrimaryExpression	1		6065	1					
ANR	6185	RelationalExpression	type_len > 2		6065	1		>			
ANR	6186	Identifier	type_len		6065	0					
ANR	6187	PrimaryExpression	2		6065	1					
ANR	6188	CompoundStatement		24:34:508:508	6065	1					
ANR	6189	ReturnStatement	return NULL ;	483:2:12865:12876	6065	0	True				
ANR	6190	Identifier	NULL		6065	0					
ANR	6191	ForStatement	for ( i = 0 ; i < type_len ; i ++ )		6065	18					
ANR	6192	ForInit	i = 0 ;	486:6:12888:12891	6065	0	True				
ANR	6193	AssignmentExpression	i = 0		6065	0		=			
ANR	6194	Identifier	i		6065	0					
ANR	6195	PrimaryExpression	0		6065	1					
ANR	6196	Condition	i < type_len	486:11:12893:12904	6065	1	True				
ANR	6197	RelationalExpression	i < type_len		6065	0		<			
ANR	6198	Identifier	i		6065	0					
ANR	6199	Identifier	type_len		6065	1					
ANR	6200	PostIncDecOperationExpression	i ++	486:25:12907:12909	6065	2	True				
ANR	6201	Identifier	i		6065	0					
ANR	6202	IncDec	++		6065	1					
ANR	6203	CompoundStatement		28:30:559:559	6065	3					
ANR	6204	IfStatement	if ( ! ( * ptype == 'r' || * ptype == 'w' || * ptype == 'b' || * ptype == 't' ) )		6065	0					
ANR	6205	Condition	! ( * ptype == 'r' || * ptype == 'w' || * ptype == 'b' || * ptype == 't' )	487:6:12920:12986	6065	0	True				
ANR	6206	UnaryOperationExpression	! ( * ptype == 'r' || * ptype == 'w' || * ptype == 'b' || * ptype == 't' )		6065	0					
ANR	6207	UnaryOperator	!		6065	0					
ANR	6208	OrExpression	* ptype == 'r' || * ptype == 'w' || * ptype == 'b' || * ptype == 't'		6065	1		||			
ANR	6209	EqualityExpression	* ptype == 'r'		6065	0		==			
ANR	6210	UnaryOperationExpression	* ptype		6065	0					
ANR	6211	UnaryOperator	*		6065	0					
ANR	6212	Identifier	ptype		6065	1					
ANR	6213	PrimaryExpression	'r'		6065	1					
ANR	6214	OrExpression	* ptype == 'w' || * ptype == 'b' || * ptype == 't'		6065	1		||			
ANR	6215	EqualityExpression	* ptype == 'w'		6065	0		==			
ANR	6216	UnaryOperationExpression	* ptype		6065	0					
ANR	6217	UnaryOperator	*		6065	0					
ANR	6218	Identifier	ptype		6065	1					
ANR	6219	PrimaryExpression	'w'		6065	1					
ANR	6220	OrExpression	* ptype == 'b' || * ptype == 't'		6065	1		||			
ANR	6221	EqualityExpression	* ptype == 'b'		6065	0		==			
ANR	6222	UnaryOperationExpression	* ptype		6065	0					
ANR	6223	UnaryOperator	*		6065	0					
ANR	6224	Identifier	ptype		6065	1					
ANR	6225	PrimaryExpression	'b'		6065	1					
ANR	6226	EqualityExpression	* ptype == 't'		6065	1		==			
ANR	6227	UnaryOperationExpression	* ptype		6065	0					
ANR	6228	UnaryOperator	*		6065	0					
ANR	6229	Identifier	ptype		6065	1					
ANR	6230	PrimaryExpression	't'		6065	1					
ANR	6231	CompoundStatement		29:75:636:636	6065	1					
ANR	6232	ReturnStatement	return NULL ;	488:3:12994:13005	6065	0	True				
ANR	6233	Identifier	NULL		6065	0					
ANR	6234	ExpressionStatement	ptype ++	490:2:13013:13020	6065	1	True				
ANR	6235	PostIncDecOperationExpression	ptype ++		6065	0					
ANR	6236	Identifier	ptype		6065	0					
ANR	6237	IncDec	++		6065	1					
ANR	6238	ExpressionStatement	security . nLength = sizeof ( SECURITY_ATTRIBUTES )	493:1:13027:13076	6065	19	True				
ANR	6239	AssignmentExpression	security . nLength = sizeof ( SECURITY_ATTRIBUTES )		6065	0		=			
ANR	6240	MemberAccess	security . nLength		6065	0					
ANR	6241	Identifier	security		6065	0					
ANR	6242	Identifier	nLength		6065	1					
ANR	6243	SizeofExpression	sizeof ( SECURITY_ATTRIBUTES )		6065	1					
ANR	6244	Sizeof	sizeof		6065	0					
ANR	6245	SizeofOperand	SECURITY_ATTRIBUTES		6065	1					
ANR	6246	ExpressionStatement	security . bInheritHandle = TRUE	494:1:13079:13111	6065	20	True				
ANR	6247	AssignmentExpression	security . bInheritHandle = TRUE		6065	0		=			
ANR	6248	MemberAccess	security . bInheritHandle		6065	0					
ANR	6249	Identifier	security		6065	0					
ANR	6250	Identifier	bInheritHandle		6065	1					
ANR	6251	Identifier	TRUE		6065	1					
ANR	6252	ExpressionStatement	security . lpSecurityDescriptor = NULL	495:1:13114:13150	6065	21	True				
ANR	6253	AssignmentExpression	security . lpSecurityDescriptor = NULL		6065	0		=			
ANR	6254	MemberAccess	security . lpSecurityDescriptor		6065	0					
ANR	6255	Identifier	security		6065	0					
ANR	6256	Identifier	lpSecurityDescriptor		6065	1					
ANR	6257	Identifier	NULL		6065	1					
ANR	6258	IfStatement	"if ( ! type_len || ! CreatePipe ( & in , & out , & security , 2048L ) )"		6065	22					
ANR	6259	Condition	"! type_len || ! CreatePipe ( & in , & out , & security , 2048L )"	497:5:13158:13210	6065	0	True				
ANR	6260	OrExpression	"! type_len || ! CreatePipe ( & in , & out , & security , 2048L )"		6065	0		||			
ANR	6261	UnaryOperationExpression	! type_len		6065	0					
ANR	6262	UnaryOperator	!		6065	0					
ANR	6263	Identifier	type_len		6065	1					
ANR	6264	UnaryOperationExpression	"! CreatePipe ( & in , & out , & security , 2048L )"		6065	1					
ANR	6265	UnaryOperator	!		6065	0					
ANR	6266	CallExpression	"CreatePipe ( & in , & out , & security , 2048L )"		6065	1					
ANR	6267	Callee	CreatePipe		6065	0					
ANR	6268	Identifier	CreatePipe		6065	0					
ANR	6269	ArgumentList	& in		6065	1					
ANR	6270	Argument	& in		6065	0					
ANR	6271	UnaryOperationExpression	& in		6065	0					
ANR	6272	UnaryOperator	&		6065	0					
ANR	6273	Identifier	in		6065	1					
ANR	6274	Argument	& out		6065	1					
ANR	6275	UnaryOperationExpression	& out		6065	0					
ANR	6276	UnaryOperator	&		6065	0					
ANR	6277	Identifier	out		6065	1					
ANR	6278	Argument	& security		6065	2					
ANR	6279	UnaryOperationExpression	& security		6065	0					
ANR	6280	UnaryOperator	&		6065	0					
ANR	6281	Identifier	security		6065	1					
ANR	6282	Argument	2048L		6065	3					
ANR	6283	PrimaryExpression	2048L		6065	0					
ANR	6284	CompoundStatement		39:60:860:860	6065	1					
ANR	6285	ReturnStatement	return NULL ;	498:2:13217:13228	6065	0	True				
ANR	6286	Identifier	NULL		6065	0					
ANR	6287	ExpressionStatement	"memset ( & startup , 0 , sizeof ( STARTUPINFO ) )"	501:1:13235:13275	6065	23	True				
ANR	6288	CallExpression	"memset ( & startup , 0 , sizeof ( STARTUPINFO ) )"		6065	0					
ANR	6289	Callee	memset		6065	0					
ANR	6290	Identifier	memset		6065	0					
ANR	6291	ArgumentList	& startup		6065	1					
ANR	6292	Argument	& startup		6065	0					
ANR	6293	UnaryOperationExpression	& startup		6065	0					
ANR	6294	UnaryOperator	&		6065	0					
ANR	6295	Identifier	startup		6065	1					
ANR	6296	Argument	0		6065	1					
ANR	6297	PrimaryExpression	0		6065	0					
ANR	6298	Argument	sizeof ( STARTUPINFO )		6065	2					
ANR	6299	SizeofExpression	sizeof ( STARTUPINFO )		6065	0					
ANR	6300	Sizeof	sizeof		6065	0					
ANR	6301	SizeofOperand	STARTUPINFO		6065	1					
ANR	6302	ExpressionStatement	"memset ( & process , 0 , sizeof ( PROCESS_INFORMATION ) )"	502:1:13278:13326	6065	24	True				
ANR	6303	CallExpression	"memset ( & process , 0 , sizeof ( PROCESS_INFORMATION ) )"		6065	0					
ANR	6304	Callee	memset		6065	0					
ANR	6305	Identifier	memset		6065	0					
ANR	6306	ArgumentList	& process		6065	1					
ANR	6307	Argument	& process		6065	0					
ANR	6308	UnaryOperationExpression	& process		6065	0					
ANR	6309	UnaryOperator	&		6065	0					
ANR	6310	Identifier	process		6065	1					
ANR	6311	Argument	0		6065	1					
ANR	6312	PrimaryExpression	0		6065	0					
ANR	6313	Argument	sizeof ( PROCESS_INFORMATION )		6065	2					
ANR	6314	SizeofExpression	sizeof ( PROCESS_INFORMATION )		6065	0					
ANR	6315	Sizeof	sizeof		6065	0					
ANR	6316	SizeofOperand	PROCESS_INFORMATION		6065	1					
ANR	6317	ExpressionStatement	startup . cb = sizeof ( STARTUPINFO )	504:1:13330:13364	6065	25	True				
ANR	6318	AssignmentExpression	startup . cb = sizeof ( STARTUPINFO )		6065	0		=			
ANR	6319	MemberAccess	startup . cb		6065	0					
ANR	6320	Identifier	startup		6065	0					
ANR	6321	Identifier	cb		6065	1					
ANR	6322	SizeofExpression	sizeof ( STARTUPINFO )		6065	1					
ANR	6323	Sizeof	sizeof		6065	0					
ANR	6324	SizeofOperand	STARTUPINFO		6065	1					
ANR	6325	ExpressionStatement	startup . dwFlags = STARTF_USESTDHANDLES	505:1:13367:13406	6065	26	True				
ANR	6326	AssignmentExpression	startup . dwFlags = STARTF_USESTDHANDLES		6065	0		=			
ANR	6327	MemberAccess	startup . dwFlags		6065	0					
ANR	6328	Identifier	startup		6065	0					
ANR	6329	Identifier	dwFlags		6065	1					
ANR	6330	Identifier	STARTF_USESTDHANDLES		6065	1					
ANR	6331	ExpressionStatement	startup . hStdError = GetStdHandle ( STD_ERROR_HANDLE )	506:1:13409:13459	6065	27	True				
ANR	6332	AssignmentExpression	startup . hStdError = GetStdHandle ( STD_ERROR_HANDLE )		6065	0		=			
ANR	6333	MemberAccess	startup . hStdError		6065	0					
ANR	6334	Identifier	startup		6065	0					
ANR	6335	Identifier	hStdError		6065	1					
ANR	6336	CallExpression	GetStdHandle ( STD_ERROR_HANDLE )		6065	1					
ANR	6337	Callee	GetStdHandle		6065	0					
ANR	6338	Identifier	GetStdHandle		6065	0					
ANR	6339	ArgumentList	STD_ERROR_HANDLE		6065	1					
ANR	6340	Argument	STD_ERROR_HANDLE		6065	0					
ANR	6341	Identifier	STD_ERROR_HANDLE		6065	0					
ANR	6342	ExpressionStatement	read = ( type [ 0 ] == 'r' ) ? TRUE : FALSE	508:1:13463:13501	6065	28	True				
ANR	6343	AssignmentExpression	read = ( type [ 0 ] == 'r' ) ? TRUE : FALSE		6065	0		=			
ANR	6344	Identifier	read		6065	0					
ANR	6345	ConditionalExpression	( type [ 0 ] == 'r' ) ? TRUE : FALSE		6065	1					
ANR	6346	Condition	type [ 0 ] == 'r'		6065	0					
ANR	6347	EqualityExpression	type [ 0 ] == 'r'		6065	0		==			
ANR	6348	ArrayIndexing	type [ 0 ]		6065	0					
ANR	6349	Identifier	type		6065	0					
ANR	6350	PrimaryExpression	0		6065	1					
ANR	6351	PrimaryExpression	'r'		6065	1					
ANR	6352	Identifier	TRUE		6065	1					
ANR	6353	Identifier	FALSE		6065	2					
ANR	6354	ExpressionStatement	mode = ( ( type_len == 2 ) && ( type [ 1 ] == 'b' ) ) ? O_BINARY : O_TEXT	509:1:13504:13568	6065	29	True				
ANR	6355	AssignmentExpression	mode = ( ( type_len == 2 ) && ( type [ 1 ] == 'b' ) ) ? O_BINARY : O_TEXT		6065	0		=			
ANR	6356	Identifier	mode		6065	0					
ANR	6357	ConditionalExpression	( ( type_len == 2 ) && ( type [ 1 ] == 'b' ) ) ? O_BINARY : O_TEXT		6065	1					
ANR	6358	Condition	( type_len == 2 ) && ( type [ 1 ] == 'b' )		6065	0					
ANR	6359	AndExpression	( type_len == 2 ) && ( type [ 1 ] == 'b' )		6065	0		&&			
ANR	6360	EqualityExpression	type_len == 2		6065	0		==			
ANR	6361	Identifier	type_len		6065	0					
ANR	6362	PrimaryExpression	2		6065	1					
ANR	6363	EqualityExpression	type [ 1 ] == 'b'		6065	1		==			
ANR	6364	ArrayIndexing	type [ 1 ]		6065	0					
ANR	6365	Identifier	type		6065	0					
ANR	6366	PrimaryExpression	1		6065	1					
ANR	6367	PrimaryExpression	'b'		6065	1					
ANR	6368	Identifier	O_BINARY		6065	1					
ANR	6369	Identifier	O_TEXT		6065	2					
ANR	6370	IfStatement	if ( read )		6065	30					
ANR	6371	Condition	read	511:5:13576:13579	6065	0	True				
ANR	6372	Identifier	read		6065	0					
ANR	6373	CompoundStatement		53:11:1229:1229	6065	1					
ANR	6374	ExpressionStatement	"in = dupHandle ( in , FALSE )"	512:2:13586:13611	6065	0	True				
ANR	6375	AssignmentExpression	"in = dupHandle ( in , FALSE )"		6065	0		=			
ANR	6376	Identifier	in		6065	0					
ANR	6377	CallExpression	"dupHandle ( in , FALSE )"		6065	1					
ANR	6378	Callee	dupHandle		6065	0					
ANR	6379	Identifier	dupHandle		6065	0					
ANR	6380	ArgumentList	in		6065	1					
ANR	6381	Argument	in		6065	0					
ANR	6382	Identifier	in		6065	0					
ANR	6383	Argument	FALSE		6065	1					
ANR	6384	Identifier	FALSE		6065	0					
ANR	6385	ExpressionStatement	startup . hStdInput = GetStdHandle ( STD_INPUT_HANDLE )	513:2:13615:13666	6065	1	True				
ANR	6386	AssignmentExpression	startup . hStdInput = GetStdHandle ( STD_INPUT_HANDLE )		6065	0		=			
ANR	6387	MemberAccess	startup . hStdInput		6065	0					
ANR	6388	Identifier	startup		6065	0					
ANR	6389	Identifier	hStdInput		6065	1					
ANR	6390	CallExpression	GetStdHandle ( STD_INPUT_HANDLE )		6065	1					
ANR	6391	Callee	GetStdHandle		6065	0					
ANR	6392	Identifier	GetStdHandle		6065	0					
ANR	6393	ArgumentList	STD_INPUT_HANDLE		6065	1					
ANR	6394	Argument	STD_INPUT_HANDLE		6065	0					
ANR	6395	Identifier	STD_INPUT_HANDLE		6065	0					
ANR	6396	ExpressionStatement	startup . hStdOutput = out	514:2:13670:13694	6065	2	True				
ANR	6397	AssignmentExpression	startup . hStdOutput = out		6065	0		=			
ANR	6398	MemberAccess	startup . hStdOutput		6065	0					
ANR	6399	Identifier	startup		6065	0					
ANR	6400	Identifier	hStdOutput		6065	1					
ANR	6401	Identifier	out		6065	1					
ANR	6402	ElseStatement	else		6065	0					
ANR	6403	CompoundStatement		57:8:1351:1351	6065	0					
ANR	6404	ExpressionStatement	"out = dupHandle ( out , FALSE )"	516:2:13708:13735	6065	0	True				
ANR	6405	AssignmentExpression	"out = dupHandle ( out , FALSE )"		6065	0		=			
ANR	6406	Identifier	out		6065	0					
ANR	6407	CallExpression	"dupHandle ( out , FALSE )"		6065	1					
ANR	6408	Callee	dupHandle		6065	0					
ANR	6409	Identifier	dupHandle		6065	0					
ANR	6410	ArgumentList	out		6065	1					
ANR	6411	Argument	out		6065	0					
ANR	6412	Identifier	out		6065	0					
ANR	6413	Argument	FALSE		6065	1					
ANR	6414	Identifier	FALSE		6065	0					
ANR	6415	ExpressionStatement	startup . hStdInput = in	517:2:13739:13762	6065	1	True				
ANR	6416	AssignmentExpression	startup . hStdInput = in		6065	0		=			
ANR	6417	MemberAccess	startup . hStdInput		6065	0					
ANR	6418	Identifier	startup		6065	0					
ANR	6419	Identifier	hStdInput		6065	1					
ANR	6420	Identifier	in		6065	1					
ANR	6421	ExpressionStatement	startup . hStdOutput = GetStdHandle ( STD_OUTPUT_HANDLE )	518:2:13766:13818	6065	2	True				
ANR	6422	AssignmentExpression	startup . hStdOutput = GetStdHandle ( STD_OUTPUT_HANDLE )		6065	0		=			
ANR	6423	MemberAccess	startup . hStdOutput		6065	0					
ANR	6424	Identifier	startup		6065	0					
ANR	6425	Identifier	hStdOutput		6065	1					
ANR	6426	CallExpression	GetStdHandle ( STD_OUTPUT_HANDLE )		6065	1					
ANR	6427	Callee	GetStdHandle		6065	0					
ANR	6428	Identifier	GetStdHandle		6065	0					
ANR	6429	ArgumentList	STD_OUTPUT_HANDLE		6065	1					
ANR	6430	Argument	STD_OUTPUT_HANDLE		6065	0					
ANR	6431	Identifier	STD_OUTPUT_HANDLE		6065	0					
ANR	6432	ExpressionStatement	dwCreateFlags = NORMAL_PRIORITY_CLASS	521:1:13825:13862	6065	31	True				
ANR	6433	AssignmentExpression	dwCreateFlags = NORMAL_PRIORITY_CLASS		6065	0		=			
ANR	6434	Identifier	dwCreateFlags		6065	0					
ANR	6435	Identifier	NORMAL_PRIORITY_CLASS		6065	1					
ANR	6436	IfStatement	"if ( strcmp ( sapi_module . name , ""cli"" ) != 0 )"		6065	32					
ANR	6437	Condition	"strcmp ( sapi_module . name , ""cli"" ) != 0"	522:5:13869:13904	6065	0	True				
ANR	6438	EqualityExpression	"strcmp ( sapi_module . name , ""cli"" ) != 0"		6065	0		!=			
ANR	6439	CallExpression	"strcmp ( sapi_module . name , ""cli"" )"		6065	0					
ANR	6440	Callee	strcmp		6065	0					
ANR	6441	Identifier	strcmp		6065	0					
ANR	6442	ArgumentList	sapi_module . name		6065	1					
ANR	6443	Argument	sapi_module . name		6065	0					
ANR	6444	MemberAccess	sapi_module . name		6065	0					
ANR	6445	Identifier	sapi_module		6065	0					
ANR	6446	Identifier	name		6065	1					
ANR	6447	Argument	"""cli"""		6065	1					
ANR	6448	PrimaryExpression	"""cli"""		6065	0					
ANR	6449	PrimaryExpression	0		6065	1					
ANR	6450	CompoundStatement		64:43:1554:1554	6065	1					
ANR	6451	ExpressionStatement	dwCreateFlags |= CREATE_NO_WINDOW	523:2:13911:13944	6065	0	True				
ANR	6452	AssignmentExpression	dwCreateFlags |= CREATE_NO_WINDOW		6065	0		|=			
ANR	6453	Identifier	dwCreateFlags		6065	0					
ANR	6454	Identifier	CREATE_NO_WINDOW		6065	1					
ANR	6455	IfStatement	"if ( OpenThreadToken ( GetCurrentThread ( ) , TOKEN_ALL_ACCESS , TRUE , & thread_token ) )"		6065	33					
ANR	6456	Condition	"OpenThreadToken ( GetCurrentThread ( ) , TOKEN_ALL_ACCESS , TRUE , & thread_token )"	527:4:14001:14074	6065	0	True				
ANR	6457	CallExpression	"OpenThreadToken ( GetCurrentThread ( ) , TOKEN_ALL_ACCESS , TRUE , & thread_token )"		6065	0					
ANR	6458	Callee	OpenThreadToken		6065	0					
ANR	6459	Identifier	OpenThreadToken		6065	0					
ANR	6460	ArgumentList	GetCurrentThread ( )		6065	1					
ANR	6461	Argument	GetCurrentThread ( )		6065	0					
ANR	6462	CallExpression	GetCurrentThread ( )		6065	0					
ANR	6463	Callee	GetCurrentThread		6065	0					
ANR	6464	Identifier	GetCurrentThread		6065	0					
ANR	6465	ArgumentList			6065	1					
ANR	6466	Argument	TOKEN_ALL_ACCESS		6065	1					
ANR	6467	Identifier	TOKEN_ALL_ACCESS		6065	0					
ANR	6468	Argument	TRUE		6065	2					
ANR	6469	Identifier	TRUE		6065	0					
ANR	6470	Argument	& thread_token		6065	3					
ANR	6471	UnaryOperationExpression	& thread_token		6065	0					
ANR	6472	UnaryOperator	&		6065	0					
ANR	6473	Identifier	thread_token		6065	1					
ANR	6474	CompoundStatement		69:80:1724:1724	6065	1					
ANR	6475	ExpressionStatement	"DuplicateTokenEx ( thread_token , MAXIMUM_ALLOWED , & security , SecurityImpersonation , TokenPrimary , & token_user )"	528:2:14081:14189	6065	0	True				
ANR	6476	CallExpression	"DuplicateTokenEx ( thread_token , MAXIMUM_ALLOWED , & security , SecurityImpersonation , TokenPrimary , & token_user )"		6065	0					
ANR	6477	Callee	DuplicateTokenEx		6065	0					
ANR	6478	Identifier	DuplicateTokenEx		6065	0					
ANR	6479	ArgumentList	thread_token		6065	1					
ANR	6480	Argument	thread_token		6065	0					
ANR	6481	Identifier	thread_token		6065	0					
ANR	6482	Argument	MAXIMUM_ALLOWED		6065	1					
ANR	6483	Identifier	MAXIMUM_ALLOWED		6065	0					
ANR	6484	Argument	& security		6065	2					
ANR	6485	UnaryOperationExpression	& security		6065	0					
ANR	6486	UnaryOperator	&		6065	0					
ANR	6487	Identifier	security		6065	1					
ANR	6488	Argument	SecurityImpersonation		6065	3					
ANR	6489	Identifier	SecurityImpersonation		6065	0					
ANR	6490	Argument	TokenPrimary		6065	4					
ANR	6491	Identifier	TokenPrimary		6065	0					
ANR	6492	Argument	& token_user		6065	5					
ANR	6493	UnaryOperationExpression	& token_user		6065	0					
ANR	6494	UnaryOperator	&		6065	0					
ANR	6495	Identifier	token_user		6065	1					
ANR	6496	ElseStatement	else		6065	0					
ANR	6497	CompoundStatement		72:2:1850:1876	6065	0					
ANR	6498	IdentifierDeclStatement	DWORD err = GetLastError ( ) ;	530:2:14203:14229	6065	0	True				
ANR	6499	IdentifierDecl	err = GetLastError ( )		6065	0					
ANR	6500	IdentifierDeclType	DWORD		6065	0					
ANR	6501	Identifier	err		6065	1					
ANR	6502	AssignmentExpression	err = GetLastError ( )		6065	2		=			
ANR	6503	Identifier	err		6065	0					
ANR	6504	CallExpression	GetLastError ( )		6065	1					
ANR	6505	Callee	GetLastError		6065	0					
ANR	6506	Identifier	GetLastError		6065	0					
ANR	6507	ArgumentList			6065	1					
ANR	6508	IfStatement	if ( err == ERROR_NO_TOKEN )		6065	1					
ANR	6509	Condition	err == ERROR_NO_TOKEN	531:6:14237:14257	6065	0	True				
ANR	6510	EqualityExpression	err == ERROR_NO_TOKEN		6065	0		==			
ANR	6511	Identifier	err		6065	0					
ANR	6512	Identifier	ERROR_NO_TOKEN		6065	1					
ANR	6513	CompoundStatement		73:29:1907:1907	6065	1					
ANR	6514	ExpressionStatement	asuser = FALSE	532:3:14265:14279	6065	0	True				
ANR	6515	AssignmentExpression	asuser = FALSE		6065	0		=			
ANR	6516	Identifier	asuser		6065	0					
ANR	6517	Identifier	FALSE		6065	1					
ANR	6518	ExpressionStatement	"cmd = ( char * ) malloc ( strlen ( command ) + strlen ( TWG ( comspec ) ) + sizeof ( "" /c "" ) + 2 )"	536:1:14290:14364	6065	34	True				
ANR	6519	AssignmentExpression	"cmd = ( char * ) malloc ( strlen ( command ) + strlen ( TWG ( comspec ) ) + sizeof ( "" /c "" ) + 2 )"		6065	0		=			
ANR	6520	Identifier	cmd		6065	0					
ANR	6521	CastExpression	"( char * ) malloc ( strlen ( command ) + strlen ( TWG ( comspec ) ) + sizeof ( "" /c "" ) + 2 )"		6065	1					
ANR	6522	CastTarget	char *		6065	0					
ANR	6523	CallExpression	"malloc ( strlen ( command ) + strlen ( TWG ( comspec ) ) + sizeof ( "" /c "" ) + 2 )"		6065	1					
ANR	6524	Callee	malloc		6065	0					
ANR	6525	Identifier	malloc		6065	0					
ANR	6526	ArgumentList	"strlen ( command ) + strlen ( TWG ( comspec ) ) + sizeof ( "" /c "" ) + 2"		6065	1					
ANR	6527	Argument	"strlen ( command ) + strlen ( TWG ( comspec ) ) + sizeof ( "" /c "" ) + 2"		6065	0					
ANR	6528	AdditiveExpression	"strlen ( command ) + strlen ( TWG ( comspec ) ) + sizeof ( "" /c "" ) + 2"		6065	0		+			
ANR	6529	CallExpression	strlen ( command )		6065	0					
ANR	6530	Callee	strlen		6065	0					
ANR	6531	Identifier	strlen		6065	0					
ANR	6532	ArgumentList	command		6065	1					
ANR	6533	Argument	command		6065	0					
ANR	6534	Identifier	command		6065	0					
ANR	6535	AdditiveExpression	"strlen ( TWG ( comspec ) ) + sizeof ( "" /c "" ) + 2"		6065	1		+			
ANR	6536	CallExpression	strlen ( TWG ( comspec ) )		6065	0					
ANR	6537	Callee	strlen		6065	0					
ANR	6538	Identifier	strlen		6065	0					
ANR	6539	ArgumentList	TWG ( comspec )		6065	1					
ANR	6540	Argument	TWG ( comspec )		6065	0					
ANR	6541	CallExpression	TWG ( comspec )		6065	0					
ANR	6542	Callee	TWG		6065	0					
ANR	6543	Identifier	TWG		6065	0					
ANR	6544	ArgumentList	comspec		6065	1					
ANR	6545	Argument	comspec		6065	0					
ANR	6546	Identifier	comspec		6065	0					
ANR	6547	AdditiveExpression	"sizeof ( "" /c "" ) + 2"		6065	1		+			
ANR	6548	SizeofExpression	"sizeof ( "" /c "" )"		6065	0					
ANR	6549	Sizeof	sizeof		6065	0					
ANR	6550	PrimaryExpression	""" /c """		6065	1					
ANR	6551	PrimaryExpression	2		6065	1					
ANR	6552	IfStatement	if ( ! cmd )		6065	35					
ANR	6553	Condition	! cmd	537:5:14371:14374	6065	0	True				
ANR	6554	UnaryOperationExpression	! cmd		6065	0					
ANR	6555	UnaryOperator	!		6065	0					
ANR	6556	Identifier	cmd		6065	1					
ANR	6557	CompoundStatement		79:11:2024:2024	6065	1					
ANR	6558	ReturnStatement	return NULL ;	538:2:14381:14392	6065	0	True				
ANR	6559	Identifier	NULL		6065	0					
ANR	6560	ExpressionStatement	"sprintf ( cmd , ""%s /c \\""%s\\"""" , TWG ( comspec ) , command )"	541:1:14399:14450	6065	36	True				
ANR	6561	CallExpression	"sprintf ( cmd , ""%s /c \\""%s\\"""" , TWG ( comspec ) , command )"		6065	0					
ANR	6562	Callee	sprintf		6065	0					
ANR	6563	Identifier	sprintf		6065	0					
ANR	6564	ArgumentList	cmd		6065	1					
ANR	6565	Argument	cmd		6065	0					
ANR	6566	Identifier	cmd		6065	0					
ANR	6567	Argument	"""%s /c \\""%s\\"""""		6065	1					
ANR	6568	PrimaryExpression	"""%s /c \\""%s\\"""""		6065	0					
ANR	6569	Argument	TWG ( comspec )		6065	2					
ANR	6570	CallExpression	TWG ( comspec )		6065	0					
ANR	6571	Callee	TWG		6065	0					
ANR	6572	Identifier	TWG		6065	0					
ANR	6573	ArgumentList	comspec		6065	1					
ANR	6574	Argument	comspec		6065	0					
ANR	6575	Identifier	comspec		6065	0					
ANR	6576	Argument	command		6065	3					
ANR	6577	Identifier	command		6065	0					
ANR	6578	IfStatement	if ( asuser )		6065	37					
ANR	6579	Condition	asuser	542:5:14457:14462	6065	0	True				
ANR	6580	Identifier	asuser		6065	0					
ANR	6581	CompoundStatement		84:13:2112:2112	6065	1					
ANR	6582	ExpressionStatement	"res = CreateProcessAsUser ( token_user , NULL , cmd , & security , & security , security . bInheritHandle , dwCreateFlags , env , cwd , & startup , & process )"	543:2:14469:14609	6065	0	True				
ANR	6583	AssignmentExpression	"res = CreateProcessAsUser ( token_user , NULL , cmd , & security , & security , security . bInheritHandle , dwCreateFlags , env , cwd , & startup , & process )"		6065	0		=			
ANR	6584	Identifier	res		6065	0					
ANR	6585	CallExpression	"CreateProcessAsUser ( token_user , NULL , cmd , & security , & security , security . bInheritHandle , dwCreateFlags , env , cwd , & startup , & process )"		6065	1					
ANR	6586	Callee	CreateProcessAsUser		6065	0					
ANR	6587	Identifier	CreateProcessAsUser		6065	0					
ANR	6588	ArgumentList	token_user		6065	1					
ANR	6589	Argument	token_user		6065	0					
ANR	6590	Identifier	token_user		6065	0					
ANR	6591	Argument	NULL		6065	1					
ANR	6592	Identifier	NULL		6065	0					
ANR	6593	Argument	cmd		6065	2					
ANR	6594	Identifier	cmd		6065	0					
ANR	6595	Argument	& security		6065	3					
ANR	6596	UnaryOperationExpression	& security		6065	0					
ANR	6597	UnaryOperator	&		6065	0					
ANR	6598	Identifier	security		6065	1					
ANR	6599	Argument	& security		6065	4					
ANR	6600	UnaryOperationExpression	& security		6065	0					
ANR	6601	UnaryOperator	&		6065	0					
ANR	6602	Identifier	security		6065	1					
ANR	6603	Argument	security . bInheritHandle		6065	5					
ANR	6604	MemberAccess	security . bInheritHandle		6065	0					
ANR	6605	Identifier	security		6065	0					
ANR	6606	Identifier	bInheritHandle		6065	1					
ANR	6607	Argument	dwCreateFlags		6065	6					
ANR	6608	Identifier	dwCreateFlags		6065	0					
ANR	6609	Argument	env		6065	7					
ANR	6610	Identifier	env		6065	0					
ANR	6611	Argument	cwd		6065	8					
ANR	6612	Identifier	cwd		6065	0					
ANR	6613	Argument	& startup		6065	9					
ANR	6614	UnaryOperationExpression	& startup		6065	0					
ANR	6615	UnaryOperator	&		6065	0					
ANR	6616	Identifier	startup		6065	1					
ANR	6617	Argument	& process		6065	10					
ANR	6618	UnaryOperationExpression	& process		6065	0					
ANR	6619	UnaryOperator	&		6065	0					
ANR	6620	Identifier	process		6065	1					
ANR	6621	ExpressionStatement	CloseHandle ( token_user )	544:2:14613:14636	6065	1	True				
ANR	6622	CallExpression	CloseHandle ( token_user )		6065	0					
ANR	6623	Callee	CloseHandle		6065	0					
ANR	6624	Identifier	CloseHandle		6065	0					
ANR	6625	ArgumentList	token_user		6065	1					
ANR	6626	Argument	token_user		6065	0					
ANR	6627	Identifier	token_user		6065	0					
ANR	6628	ElseStatement	else		6065	0					
ANR	6629	CompoundStatement		87:8:2293:2293	6065	0					
ANR	6630	ExpressionStatement	"res = CreateProcess ( NULL , cmd , & security , & security , security . bInheritHandle , dwCreateFlags , env , cwd , & startup , & process )"	546:2:14650:14772	6065	0	True				
ANR	6631	AssignmentExpression	"res = CreateProcess ( NULL , cmd , & security , & security , security . bInheritHandle , dwCreateFlags , env , cwd , & startup , & process )"		6065	0		=			
ANR	6632	Identifier	res		6065	0					
ANR	6633	CallExpression	"CreateProcess ( NULL , cmd , & security , & security , security . bInheritHandle , dwCreateFlags , env , cwd , & startup , & process )"		6065	1					
ANR	6634	Callee	CreateProcess		6065	0					
ANR	6635	Identifier	CreateProcess		6065	0					
ANR	6636	ArgumentList	NULL		6065	1					
ANR	6637	Argument	NULL		6065	0					
ANR	6638	Identifier	NULL		6065	0					
ANR	6639	Argument	cmd		6065	1					
ANR	6640	Identifier	cmd		6065	0					
ANR	6641	Argument	& security		6065	2					
ANR	6642	UnaryOperationExpression	& security		6065	0					
ANR	6643	UnaryOperator	&		6065	0					
ANR	6644	Identifier	security		6065	1					
ANR	6645	Argument	& security		6065	3					
ANR	6646	UnaryOperationExpression	& security		6065	0					
ANR	6647	UnaryOperator	&		6065	0					
ANR	6648	Identifier	security		6065	1					
ANR	6649	Argument	security . bInheritHandle		6065	4					
ANR	6650	MemberAccess	security . bInheritHandle		6065	0					
ANR	6651	Identifier	security		6065	0					
ANR	6652	Identifier	bInheritHandle		6065	1					
ANR	6653	Argument	dwCreateFlags		6065	5					
ANR	6654	Identifier	dwCreateFlags		6065	0					
ANR	6655	Argument	env		6065	6					
ANR	6656	Identifier	env		6065	0					
ANR	6657	Argument	cwd		6065	7					
ANR	6658	Identifier	cwd		6065	0					
ANR	6659	Argument	& startup		6065	8					
ANR	6660	UnaryOperationExpression	& startup		6065	0					
ANR	6661	UnaryOperator	&		6065	0					
ANR	6662	Identifier	startup		6065	1					
ANR	6663	Argument	& process		6065	9					
ANR	6664	UnaryOperationExpression	& process		6065	0					
ANR	6665	UnaryOperator	&		6065	0					
ANR	6666	Identifier	process		6065	1					
ANR	6667	ExpressionStatement	free ( cmd )	548:1:14778:14787	6065	38	True				
ANR	6668	CallExpression	free ( cmd )		6065	0					
ANR	6669	Callee	free		6065	0					
ANR	6670	Identifier	free		6065	0					
ANR	6671	ArgumentList	cmd		6065	1					
ANR	6672	Argument	cmd		6065	0					
ANR	6673	Identifier	cmd		6065	0					
ANR	6674	IfStatement	if ( ! res )		6065	39					
ANR	6675	Condition	! res	550:5:14795:14798	6065	0	True				
ANR	6676	UnaryOperationExpression	! res		6065	0					
ANR	6677	UnaryOperator	!		6065	0					
ANR	6678	Identifier	res		6065	1					
ANR	6679	CompoundStatement		92:11:2448:2448	6065	1					
ANR	6680	ReturnStatement	return NULL ;	551:2:14805:14816	6065	0	True				
ANR	6681	Identifier	NULL		6065	0					
ANR	6682	ExpressionStatement	CloseHandle ( process . hThread )	554:1:14823:14851	6065	40	True				
ANR	6683	CallExpression	CloseHandle ( process . hThread )		6065	0					
ANR	6684	Callee	CloseHandle		6065	0					
ANR	6685	Identifier	CloseHandle		6065	0					
ANR	6686	ArgumentList	process . hThread		6065	1					
ANR	6687	Argument	process . hThread		6065	0					
ANR	6688	MemberAccess	process . hThread		6065	0					
ANR	6689	Identifier	process		6065	0					
ANR	6690	Identifier	hThread		6065	1					
ANR	6691	ExpressionStatement	proc = process_get ( NULL )	555:1:14854:14878	6065	41	True				
ANR	6692	AssignmentExpression	proc = process_get ( NULL )		6065	0		=			
ANR	6693	Identifier	proc		6065	0					
ANR	6694	CallExpression	process_get ( NULL )		6065	1					
ANR	6695	Callee	process_get		6065	0					
ANR	6696	Identifier	process_get		6065	0					
ANR	6697	ArgumentList	NULL		6065	1					
ANR	6698	Argument	NULL		6065	0					
ANR	6699	Identifier	NULL		6065	0					
ANR	6700	IfStatement	if ( read )		6065	42					
ANR	6701	Condition	read	557:5:14886:14889	6065	0	True				
ANR	6702	Identifier	read		6065	0					
ANR	6703	CompoundStatement		99:11:2539:2539	6065	1					
ANR	6704	ExpressionStatement	"fno = _open_osfhandle ( ( tsrm_intptr_t ) in , _O_RDONLY | mode )"	558:2:14896:14954	6065	0	True				
ANR	6705	AssignmentExpression	"fno = _open_osfhandle ( ( tsrm_intptr_t ) in , _O_RDONLY | mode )"		6065	0		=			
ANR	6706	Identifier	fno		6065	0					
ANR	6707	CallExpression	"_open_osfhandle ( ( tsrm_intptr_t ) in , _O_RDONLY | mode )"		6065	1					
ANR	6708	Callee	_open_osfhandle		6065	0					
ANR	6709	Identifier	_open_osfhandle		6065	0					
ANR	6710	ArgumentList	( tsrm_intptr_t ) in		6065	1					
ANR	6711	Argument	( tsrm_intptr_t ) in		6065	0					
ANR	6712	CastExpression	( tsrm_intptr_t ) in		6065	0					
ANR	6713	CastTarget	tsrm_intptr_t		6065	0					
ANR	6714	Identifier	in		6065	1					
ANR	6715	Argument	_O_RDONLY | mode		6065	1					
ANR	6716	InclusiveOrExpression	_O_RDONLY | mode		6065	0		|			
ANR	6717	Identifier	_O_RDONLY		6065	0					
ANR	6718	Identifier	mode		6065	1					
ANR	6719	ExpressionStatement	CloseHandle ( out )	559:2:14958:14974	6065	1	True				
ANR	6720	CallExpression	CloseHandle ( out )		6065	0					
ANR	6721	Callee	CloseHandle		6065	0					
ANR	6722	Identifier	CloseHandle		6065	0					
ANR	6723	ArgumentList	out		6065	1					
ANR	6724	Argument	out		6065	0					
ANR	6725	Identifier	out		6065	0					
ANR	6726	ElseStatement	else		6065	0					
ANR	6727	CompoundStatement		102:8:2631:2631	6065	0					
ANR	6728	ExpressionStatement	"fno = _open_osfhandle ( ( tsrm_intptr_t ) out , _O_WRONLY | mode )"	561:2:14988:15047	6065	0	True				
ANR	6729	AssignmentExpression	"fno = _open_osfhandle ( ( tsrm_intptr_t ) out , _O_WRONLY | mode )"		6065	0		=			
ANR	6730	Identifier	fno		6065	0					
ANR	6731	CallExpression	"_open_osfhandle ( ( tsrm_intptr_t ) out , _O_WRONLY | mode )"		6065	1					
ANR	6732	Callee	_open_osfhandle		6065	0					
ANR	6733	Identifier	_open_osfhandle		6065	0					
ANR	6734	ArgumentList	( tsrm_intptr_t ) out		6065	1					
ANR	6735	Argument	( tsrm_intptr_t ) out		6065	0					
ANR	6736	CastExpression	( tsrm_intptr_t ) out		6065	0					
ANR	6737	CastTarget	tsrm_intptr_t		6065	0					
ANR	6738	Identifier	out		6065	1					
ANR	6739	Argument	_O_WRONLY | mode		6065	1					
ANR	6740	InclusiveOrExpression	_O_WRONLY | mode		6065	0		|			
ANR	6741	Identifier	_O_WRONLY		6065	0					
ANR	6742	Identifier	mode		6065	1					
ANR	6743	ExpressionStatement	CloseHandle ( in )	562:2:15051:15066	6065	1	True				
ANR	6744	CallExpression	CloseHandle ( in )		6065	0					
ANR	6745	Callee	CloseHandle		6065	0					
ANR	6746	Identifier	CloseHandle		6065	0					
ANR	6747	ArgumentList	in		6065	1					
ANR	6748	Argument	in		6065	0					
ANR	6749	Identifier	in		6065	0					
ANR	6750	ExpressionStatement	"stream = _fdopen ( fno , type )"	565:1:15073:15100	6065	43	True				
ANR	6751	AssignmentExpression	"stream = _fdopen ( fno , type )"		6065	0		=			
ANR	6752	Identifier	stream		6065	0					
ANR	6753	CallExpression	"_fdopen ( fno , type )"		6065	1					
ANR	6754	Callee	_fdopen		6065	0					
ANR	6755	Identifier	_fdopen		6065	0					
ANR	6756	ArgumentList	fno		6065	1					
ANR	6757	Argument	fno		6065	0					
ANR	6758	Identifier	fno		6065	0					
ANR	6759	Argument	type		6065	1					
ANR	6760	Identifier	type		6065	0					
ANR	6761	ExpressionStatement	proc -> prochnd = process . hProcess	566:1:15103:15135	6065	44	True				
ANR	6762	AssignmentExpression	proc -> prochnd = process . hProcess		6065	0		=			
ANR	6763	PtrMemberAccess	proc -> prochnd		6065	0					
ANR	6764	Identifier	proc		6065	0					
ANR	6765	Identifier	prochnd		6065	1					
ANR	6766	MemberAccess	process . hProcess		6065	1					
ANR	6767	Identifier	process		6065	0					
ANR	6768	Identifier	hProcess		6065	1					
ANR	6769	ExpressionStatement	proc -> stream = stream	567:1:15138:15159	6065	45	True				
ANR	6770	AssignmentExpression	proc -> stream = stream		6065	0		=			
ANR	6771	PtrMemberAccess	proc -> stream		6065	0					
ANR	6772	Identifier	proc		6065	0					
ANR	6773	Identifier	stream		6065	1					
ANR	6774	Identifier	stream		6065	1					
ANR	6775	ReturnStatement	return stream ;	568:1:15162:15175	6065	46	True				
ANR	6776	Identifier	stream		6065	0					
ANR	6777	ReturnType	TSRM_API FILE *		6065	1					
ANR	6778	Identifier	popen_ex		6065	2					
ANR	6779	ParameterList	"const char * command , const char * type , const char * cwd , char * env"		6065	3					
ANR	6780	Parameter	const char * command	458:24:12285:12303	6065	0	True				
ANR	6781	ParameterType	const char *		6065	0					
ANR	6782	Identifier	command		6065	1					
ANR	6783	Parameter	const char * type	458:45:12306:12321	6065	1	True				
ANR	6784	ParameterType	const char *		6065	0					
ANR	6785	Identifier	type		6065	1					
ANR	6786	Parameter	const char * cwd	458:63:12324:12338	6065	2	True				
ANR	6787	ParameterType	const char *		6065	0					
ANR	6788	Identifier	cwd		6065	1					
ANR	6789	Parameter	char * env	458:80:12341:12349	6065	3	True				
ANR	6790	ParameterType	char *		6065	0					
ANR	6791	Identifier	env		6065	1					
ANR	6792	CFGEntryNode	ENTRY		6065		True				
ANR	6793	CFGExitNode	EXIT		6065		True				
ANR	6794	Symbol	_open_osfhandle		6065						
ANR	6795	Symbol	dwCreateFlags		6065						
ANR	6796	Symbol	MAXIMUM_ALLOWED		6065						
ANR	6797	Symbol	CreatePipe		6065						
ANR	6798	Symbol	& token_user		6065						
ANR	6799	Symbol	thread_token		6065						
ANR	6800	Symbol	type		6065						
ANR	6801	Symbol	_O_RDONLY		6065						
ANR	6802	Symbol	mode		6065						
ANR	6803	Symbol	NORMAL_PRIORITY_CLASS		6065						
ANR	6804	Symbol	strlen		6065						
ANR	6805	Symbol	process_get		6065						
ANR	6806	Symbol	comspec		6065						
ANR	6807	Symbol	_fdopen		6065						
ANR	6808	Symbol	startup		6065						
ANR	6809	Symbol	startup . cb		6065						
ANR	6810	Symbol	strcmp		6065						
ANR	6811	Symbol	CreateProcess		6065						
ANR	6812	Symbol	res		6065						
ANR	6813	Symbol	NULL		6065						
ANR	6814	Symbol	read		6065						
ANR	6815	Symbol	STD_ERROR_HANDLE		6065						
ANR	6816	Symbol	STD_INPUT_HANDLE		6065						
ANR	6817	Symbol	type_len		6065						
ANR	6818	Symbol	in		6065						
ANR	6819	Symbol	TWG		6065						
ANR	6820	Symbol	fno		6065						
ANR	6821	Symbol	_O_WRONLY		6065						
ANR	6822	Symbol	GetCurrentThread		6065						
ANR	6823	Symbol	TRUE		6065						
ANR	6824	Symbol	proc -> prochnd		6065						
ANR	6825	Symbol	O_TEXT		6065						
ANR	6826	Symbol	& process		6065						
ANR	6827	Symbol	* proc		6065						
ANR	6828	Symbol	proc -> stream		6065						
ANR	6829	Symbol	TokenPrimary		6065						
ANR	6830	Symbol	GetLastError		6065						
ANR	6831	Symbol	& startup		6065						
ANR	6832	Symbol	cmd		6065						
ANR	6833	Symbol	process . hProcess		6065						
ANR	6834	Symbol	CREATE_NO_WINDOW		6065						
ANR	6835	Symbol	GetStdHandle		6065						
ANR	6836	Symbol	dupHandle		6065						
ANR	6837	Symbol	O_BINARY		6065						
ANR	6838	Symbol	startup . dwFlags		6065						
ANR	6839	Symbol	ptype		6065						
ANR	6840	Symbol	startup . hStdError		6065						
ANR	6841	Symbol	& in		6065						
ANR	6842	Symbol	out		6065						
ANR	6843	Symbol	startup . hStdInput		6065						
ANR	6844	Symbol	security		6065						
ANR	6845	Symbol	STARTF_USESTDHANDLES		6065						
ANR	6846	Symbol	stream		6065						
ANR	6847	Symbol	* type		6065						
ANR	6848	Symbol	sapi_module . name		6065						
ANR	6849	Symbol	token_user		6065						
ANR	6850	Symbol	TOKEN_ALL_ACCESS		6065						
ANR	6851	Symbol	startup . hStdOutput		6065						
ANR	6852	Symbol	malloc		6065						
ANR	6853	Symbol	process		6065						
ANR	6854	Symbol	proc		6065						
ANR	6855	Symbol	& thread_token		6065						
ANR	6856	Symbol	err		6065						
ANR	6857	Symbol	STD_OUTPUT_HANDLE		6065						
ANR	6858	Symbol	SecurityImpersonation		6065						
ANR	6859	Symbol	i		6065						
ANR	6860	Symbol	env		6065						
ANR	6861	Symbol	asuser		6065						
ANR	6862	Symbol	command		6065						
ANR	6863	Symbol	CreateProcessAsUser		6065						
ANR	6864	Symbol	OpenThreadToken		6065						
ANR	6865	Symbol	cwd		6065						
ANR	6866	Symbol	security . lpSecurityDescriptor		6065						
ANR	6867	Symbol	& out		6065						
ANR	6868	Symbol	sapi_module		6065						
ANR	6869	Symbol	security . nLength		6065						
ANR	6870	Symbol	* ptype		6065						
ANR	6871	Symbol	process . hThread		6065						
ANR	6872	Symbol	FALSE		6065						
ANR	6873	Symbol	ERROR_NO_TOKEN		6065						
ANR	6874	Symbol	& security		6065						
ANR	6875	Symbol	security . bInheritHandle		6065						
ANR	6876	Function	pclose	571:0:15180:15555							
ANR	6877	FunctionDef	pclose (FILE * stream)		6876	0					
ANR	6878	CompoundStatement		572:0:15214:15555	6876	0					
ANR	6879	IdentifierDeclStatement	DWORD termstat = 0 ;	573:1:15217:15235	6876	0	True				
ANR	6880	IdentifierDecl	termstat = 0		6876	0					
ANR	6881	IdentifierDeclType	DWORD		6876	0					
ANR	6882	Identifier	termstat		6876	1					
ANR	6883	AssignmentExpression	termstat = 0		6876	2		=			
ANR	6884	Identifier	termstat		6876	0					
ANR	6885	PrimaryExpression	0		6876	1					
ANR	6886	IdentifierDeclStatement	process_pair * process ;	574:1:15238:15259	6876	1	True				
ANR	6887	IdentifierDecl	* process		6876	0					
ANR	6888	IdentifierDeclType	process_pair *		6876	0					
ANR	6889	Identifier	process		6876	1					
ANR	6890	IfStatement	if ( ( process = process_get ( stream ) ) == NULL )		6876	2					
ANR	6891	Condition	( process = process_get ( stream ) ) == NULL	576:5:15267:15305	6876	0	True				
ANR	6892	EqualityExpression	( process = process_get ( stream ) ) == NULL		6876	0		==			
ANR	6893	AssignmentExpression	process = process_get ( stream )		6876	0		=			
ANR	6894	Identifier	process		6876	0					
ANR	6895	CallExpression	process_get ( stream )		6876	1					
ANR	6896	Callee	process_get		6876	0					
ANR	6897	Identifier	process_get		6876	0					
ANR	6898	ArgumentList	stream		6876	1					
ANR	6899	Argument	stream		6876	0					
ANR	6900	Identifier	stream		6876	0					
ANR	6901	Identifier	NULL		6876	1					
ANR	6902	CompoundStatement		5:46:93:93	6876	1					
ANR	6903	ReturnStatement	return 0 ;	577:2:15312:15320	6876	0	True				
ANR	6904	PrimaryExpression	0		6876	0					
ANR	6905	ExpressionStatement	fflush ( process -> stream )	580:1:15327:15350	6876	3	True				
ANR	6906	CallExpression	fflush ( process -> stream )		6876	0					
ANR	6907	Callee	fflush		6876	0					
ANR	6908	Identifier	fflush		6876	0					
ANR	6909	ArgumentList	process -> stream		6876	1					
ANR	6910	Argument	process -> stream		6876	0					
ANR	6911	PtrMemberAccess	process -> stream		6876	0					
ANR	6912	Identifier	process		6876	0					
ANR	6913	Identifier	stream		6876	1					
ANR	6914	ExpressionStatement	fclose ( process -> stream )	581:1:15353:15376	6876	4	True				
ANR	6915	CallExpression	fclose ( process -> stream )		6876	0					
ANR	6916	Callee	fclose		6876	0					
ANR	6917	Identifier	fclose		6876	0					
ANR	6918	ArgumentList	process -> stream		6876	1					
ANR	6919	Argument	process -> stream		6876	0					
ANR	6920	PtrMemberAccess	process -> stream		6876	0					
ANR	6921	Identifier	process		6876	0					
ANR	6922	Identifier	stream		6876	1					
ANR	6923	ExpressionStatement	"WaitForSingleObject ( process -> prochnd , INFINITE )"	583:1:15380:15427	6876	5	True				
ANR	6924	CallExpression	"WaitForSingleObject ( process -> prochnd , INFINITE )"		6876	0					
ANR	6925	Callee	WaitForSingleObject		6876	0					
ANR	6926	Identifier	WaitForSingleObject		6876	0					
ANR	6927	ArgumentList	process -> prochnd		6876	1					
ANR	6928	Argument	process -> prochnd		6876	0					
ANR	6929	PtrMemberAccess	process -> prochnd		6876	0					
ANR	6930	Identifier	process		6876	0					
ANR	6931	Identifier	prochnd		6876	1					
ANR	6932	Argument	INFINITE		6876	1					
ANR	6933	Identifier	INFINITE		6876	0					
ANR	6934	ExpressionStatement	"GetExitCodeProcess ( process -> prochnd , & termstat )"	584:1:15430:15477	6876	6	True				
ANR	6935	CallExpression	"GetExitCodeProcess ( process -> prochnd , & termstat )"		6876	0					
ANR	6936	Callee	GetExitCodeProcess		6876	0					
ANR	6937	Identifier	GetExitCodeProcess		6876	0					
ANR	6938	ArgumentList	process -> prochnd		6876	1					
ANR	6939	Argument	process -> prochnd		6876	0					
ANR	6940	PtrMemberAccess	process -> prochnd		6876	0					
ANR	6941	Identifier	process		6876	0					
ANR	6942	Identifier	prochnd		6876	1					
ANR	6943	Argument	& termstat		6876	1					
ANR	6944	UnaryOperationExpression	& termstat		6876	0					
ANR	6945	UnaryOperator	&		6876	0					
ANR	6946	Identifier	termstat		6876	1					
ANR	6947	ExpressionStatement	process -> stream = NULL	585:1:15480:15502	6876	7	True				
ANR	6948	AssignmentExpression	process -> stream = NULL		6876	0		=			
ANR	6949	PtrMemberAccess	process -> stream		6876	0					
ANR	6950	Identifier	process		6876	0					
ANR	6951	Identifier	stream		6876	1					
ANR	6952	Identifier	NULL		6876	1					
ANR	6953	ExpressionStatement	CloseHandle ( process -> prochnd )	586:1:15505:15534	6876	8	True				
ANR	6954	CallExpression	CloseHandle ( process -> prochnd )		6876	0					
ANR	6955	Callee	CloseHandle		6876	0					
ANR	6956	Identifier	CloseHandle		6876	0					
ANR	6957	ArgumentList	process -> prochnd		6876	1					
ANR	6958	Argument	process -> prochnd		6876	0					
ANR	6959	PtrMemberAccess	process -> prochnd		6876	0					
ANR	6960	Identifier	process		6876	0					
ANR	6961	Identifier	prochnd		6876	1					
ANR	6962	ReturnStatement	return termstat ;	588:1:15538:15553	6876	9	True				
ANR	6963	Identifier	termstat		6876	0					
ANR	6964	ReturnType	TSRM_API int		6876	1					
ANR	6965	Identifier	pclose		6876	2					
ANR	6966	ParameterList	FILE * stream		6876	3					
ANR	6967	Parameter	FILE * stream	571:20:15200:15211	6876	0	True				
ANR	6968	ParameterType	FILE *		6876	0					
ANR	6969	Identifier	stream		6876	1					
ANR	6970	CFGEntryNode	ENTRY		6876		True				
ANR	6971	CFGExitNode	EXIT		6876		True				
ANR	6972	Symbol	process_get		6876						
ANR	6973	Symbol	process		6876						
ANR	6974	Symbol	NULL		6876						
ANR	6975	Symbol	stream		6876						
ANR	6976	Symbol	* process		6876						
ANR	6977	Symbol	process -> prochnd		6876						
ANR	6978	Symbol	process -> stream		6876						
ANR	6979	Symbol	& termstat		6876						
ANR	6980	Symbol	termstat		6876						
ANR	6981	Symbol	INFINITE		6876						
ANR	6982	Function	shmget	591:0:15558:17679							
ANR	6983	FunctionDef	"shmget (int key , int size , int flags)"		6982	0					
ANR	6984	CompoundStatement		592:0:15608:17679	6982	0					
ANR	6985	IdentifierDeclStatement	shm_pair * shm ;	593:1:15611:15624	6982	0	True				
ANR	6986	IdentifierDecl	* shm		6982	0					
ANR	6987	IdentifierDeclType	shm_pair *		6982	0					
ANR	6988	Identifier	shm		6982	1					
ANR	6989	IdentifierDeclStatement	"char shm_segment [ 26 ] , shm_info [ 29 ] ;"	594:1:15627:15661	6982	1	True				
ANR	6990	IdentifierDecl	shm_segment [ 26 ]		6982	0					
ANR	6991	IdentifierDeclType	char [ 26 ]		6982	0					
ANR	6992	Identifier	shm_segment		6982	1					
ANR	6993	PrimaryExpression	26		6982	2					
ANR	6994	IdentifierDecl	shm_info [ 29 ]		6982	1					
ANR	6995	IdentifierDeclType	char [ 29 ]		6982	0					
ANR	6996	Identifier	shm_info		6982	1					
ANR	6997	PrimaryExpression	29		6982	2					
ANR	6998	IdentifierDeclStatement	"HANDLE shm_handle , info_handle ;"	595:1:15664:15694	6982	2	True				
ANR	6999	IdentifierDecl	shm_handle		6982	0					
ANR	7000	IdentifierDeclType	HANDLE		6982	0					
ANR	7001	Identifier	shm_handle		6982	1					
ANR	7002	IdentifierDecl	info_handle		6982	1					
ANR	7003	IdentifierDeclType	HANDLE		6982	0					
ANR	7004	Identifier	info_handle		6982	1					
ANR	7005	IdentifierDeclStatement	BOOL created = FALSE ;	596:1:15697:15717	6982	3	True				
ANR	7006	IdentifierDecl	created = FALSE		6982	0					
ANR	7007	IdentifierDeclType	BOOL		6982	0					
ANR	7008	Identifier	created		6982	1					
ANR	7009	AssignmentExpression	created = FALSE		6982	2		=			
ANR	7010	Identifier	FALSE		6982	0					
ANR	7011	Identifier	FALSE		6982	1					
ANR	7012	IfStatement	if ( size < 0 )		6982	4					
ANR	7013	Condition	size < 0	598:5:15725:15732	6982	0	True				
ANR	7014	RelationalExpression	size < 0		6982	0		<			
ANR	7015	Identifier	size		6982	0					
ANR	7016	PrimaryExpression	0		6982	1					
ANR	7017	CompoundStatement		7:15:126:126	6982	1					
ANR	7018	ReturnStatement	return - 1 ;	599:2:15739:15748	6982	0	True				
ANR	7019	UnaryOperationExpression	- 1		6982	0					
ANR	7020	UnaryOperator	-		6982	0					
ANR	7021	PrimaryExpression	1		6982	1					
ANR	7022	ExpressionStatement	"snprintf ( shm_segment , sizeof ( shm_segment ) , ""TSRM_SHM_SEGMENT:%d"" , key )"	602:1:15755:15825	6982	5	True				
ANR	7023	CallExpression	"snprintf ( shm_segment , sizeof ( shm_segment ) , ""TSRM_SHM_SEGMENT:%d"" , key )"		6982	0					
ANR	7024	Callee	snprintf		6982	0					
ANR	7025	Identifier	snprintf		6982	0					
ANR	7026	ArgumentList	shm_segment		6982	1					
ANR	7027	Argument	shm_segment		6982	0					
ANR	7028	Identifier	shm_segment		6982	0					
ANR	7029	Argument	sizeof ( shm_segment )		6982	1					
ANR	7030	SizeofExpression	sizeof ( shm_segment )		6982	0					
ANR	7031	Sizeof	sizeof		6982	0					
ANR	7032	SizeofOperand	shm_segment		6982	1					
ANR	7033	Argument	"""TSRM_SHM_SEGMENT:%d"""		6982	2					
ANR	7034	PrimaryExpression	"""TSRM_SHM_SEGMENT:%d"""		6982	0					
ANR	7035	Argument	key		6982	3					
ANR	7036	Identifier	key		6982	0					
ANR	7037	ExpressionStatement	"snprintf ( shm_info , sizeof ( shm_info ) , ""TSRM_SHM_DESCRIPTOR:%d"" , key )"	603:1:15828:15895	6982	6	True				
ANR	7038	CallExpression	"snprintf ( shm_info , sizeof ( shm_info ) , ""TSRM_SHM_DESCRIPTOR:%d"" , key )"		6982	0					
ANR	7039	Callee	snprintf		6982	0					
ANR	7040	Identifier	snprintf		6982	0					
ANR	7041	ArgumentList	shm_info		6982	1					
ANR	7042	Argument	shm_info		6982	0					
ANR	7043	Identifier	shm_info		6982	0					
ANR	7044	Argument	sizeof ( shm_info )		6982	1					
ANR	7045	SizeofExpression	sizeof ( shm_info )		6982	0					
ANR	7046	Sizeof	sizeof		6982	0					
ANR	7047	SizeofOperand	shm_info		6982	1					
ANR	7048	Argument	"""TSRM_SHM_DESCRIPTOR:%d"""		6982	2					
ANR	7049	PrimaryExpression	"""TSRM_SHM_DESCRIPTOR:%d"""		6982	0					
ANR	7050	Argument	key		6982	3					
ANR	7051	Identifier	key		6982	0					
ANR	7052	ExpressionStatement	"shm_handle = OpenFileMapping ( FILE_MAP_ALL_ACCESS , FALSE , shm_segment )"	605:1:15899:15969	6982	7	True				
ANR	7053	AssignmentExpression	"shm_handle = OpenFileMapping ( FILE_MAP_ALL_ACCESS , FALSE , shm_segment )"		6982	0		=			
ANR	7054	Identifier	shm_handle		6982	0					
ANR	7055	CallExpression	"OpenFileMapping ( FILE_MAP_ALL_ACCESS , FALSE , shm_segment )"		6982	1					
ANR	7056	Callee	OpenFileMapping		6982	0					
ANR	7057	Identifier	OpenFileMapping		6982	0					
ANR	7058	ArgumentList	FILE_MAP_ALL_ACCESS		6982	1					
ANR	7059	Argument	FILE_MAP_ALL_ACCESS		6982	0					
ANR	7060	Identifier	FILE_MAP_ALL_ACCESS		6982	0					
ANR	7061	Argument	FALSE		6982	1					
ANR	7062	Identifier	FALSE		6982	0					
ANR	7063	Argument	shm_segment		6982	2					
ANR	7064	Identifier	shm_segment		6982	0					
ANR	7065	ExpressionStatement	"info_handle = OpenFileMapping ( FILE_MAP_ALL_ACCESS , FALSE , shm_info )"	606:1:15972:16039	6982	8	True				
ANR	7066	AssignmentExpression	"info_handle = OpenFileMapping ( FILE_MAP_ALL_ACCESS , FALSE , shm_info )"		6982	0		=			
ANR	7067	Identifier	info_handle		6982	0					
ANR	7068	CallExpression	"OpenFileMapping ( FILE_MAP_ALL_ACCESS , FALSE , shm_info )"		6982	1					
ANR	7069	Callee	OpenFileMapping		6982	0					
ANR	7070	Identifier	OpenFileMapping		6982	0					
ANR	7071	ArgumentList	FILE_MAP_ALL_ACCESS		6982	1					
ANR	7072	Argument	FILE_MAP_ALL_ACCESS		6982	0					
ANR	7073	Identifier	FILE_MAP_ALL_ACCESS		6982	0					
ANR	7074	Argument	FALSE		6982	1					
ANR	7075	Identifier	FALSE		6982	0					
ANR	7076	Argument	shm_info		6982	2					
ANR	7077	Identifier	shm_info		6982	0					
ANR	7078	IfStatement	if ( ! shm_handle && ! info_handle )		6982	9					
ANR	7079	Condition	! shm_handle && ! info_handle	608:5:16047:16073	6982	0	True				
ANR	7080	AndExpression	! shm_handle && ! info_handle		6982	0		&&			
ANR	7081	UnaryOperationExpression	! shm_handle		6982	0					
ANR	7082	UnaryOperator	!		6982	0					
ANR	7083	Identifier	shm_handle		6982	1					
ANR	7084	UnaryOperationExpression	! info_handle		6982	1					
ANR	7085	UnaryOperator	!		6982	0					
ANR	7086	Identifier	info_handle		6982	1					
ANR	7087	CompoundStatement		17:34:467:467	6982	1					
ANR	7088	IfStatement	if ( flags & IPC_CREAT )		6982	0					
ANR	7089	Condition	flags & IPC_CREAT	609:6:16084:16100	6982	0	True				
ANR	7090	BitAndExpression	flags & IPC_CREAT		6982	0		&			
ANR	7091	Identifier	flags		6982	0					
ANR	7092	Identifier	IPC_CREAT		6982	1					
ANR	7093	CompoundStatement		18:25:494:494	6982	1					
ANR	7094	ExpressionStatement	"shm_handle = CreateFileMapping ( INVALID_HANDLE_VALUE , NULL , PAGE_READWRITE , 0 , size , shm_segment )"	610:3:16108:16204	6982	0	True				
ANR	7095	AssignmentExpression	"shm_handle = CreateFileMapping ( INVALID_HANDLE_VALUE , NULL , PAGE_READWRITE , 0 , size , shm_segment )"		6982	0		=			
ANR	7096	Identifier	shm_handle		6982	0					
ANR	7097	CallExpression	"CreateFileMapping ( INVALID_HANDLE_VALUE , NULL , PAGE_READWRITE , 0 , size , shm_segment )"		6982	1					
ANR	7098	Callee	CreateFileMapping		6982	0					
ANR	7099	Identifier	CreateFileMapping		6982	0					
ANR	7100	ArgumentList	INVALID_HANDLE_VALUE		6982	1					
ANR	7101	Argument	INVALID_HANDLE_VALUE		6982	0					
ANR	7102	Identifier	INVALID_HANDLE_VALUE		6982	0					
ANR	7103	Argument	NULL		6982	1					
ANR	7104	Identifier	NULL		6982	0					
ANR	7105	Argument	PAGE_READWRITE		6982	2					
ANR	7106	Identifier	PAGE_READWRITE		6982	0					
ANR	7107	Argument	0		6982	3					
ANR	7108	PrimaryExpression	0		6982	0					
ANR	7109	Argument	size		6982	4					
ANR	7110	Identifier	size		6982	0					
ANR	7111	Argument	shm_segment		6982	5					
ANR	7112	Identifier	shm_segment		6982	0					
ANR	7113	ExpressionStatement	"info_handle = CreateFileMapping ( INVALID_HANDLE_VALUE , NULL , PAGE_READWRITE , 0 , sizeof ( shm -> descriptor ) , shm_info )"	611:3:16209:16322	6982	1	True				
ANR	7114	AssignmentExpression	"info_handle = CreateFileMapping ( INVALID_HANDLE_VALUE , NULL , PAGE_READWRITE , 0 , sizeof ( shm -> descriptor ) , shm_info )"		6982	0		=			
ANR	7115	Identifier	info_handle		6982	0					
ANR	7116	CallExpression	"CreateFileMapping ( INVALID_HANDLE_VALUE , NULL , PAGE_READWRITE , 0 , sizeof ( shm -> descriptor ) , shm_info )"		6982	1					
ANR	7117	Callee	CreateFileMapping		6982	0					
ANR	7118	Identifier	CreateFileMapping		6982	0					
ANR	7119	ArgumentList	INVALID_HANDLE_VALUE		6982	1					
ANR	7120	Argument	INVALID_HANDLE_VALUE		6982	0					
ANR	7121	Identifier	INVALID_HANDLE_VALUE		6982	0					
ANR	7122	Argument	NULL		6982	1					
ANR	7123	Identifier	NULL		6982	0					
ANR	7124	Argument	PAGE_READWRITE		6982	2					
ANR	7125	Identifier	PAGE_READWRITE		6982	0					
ANR	7126	Argument	0		6982	3					
ANR	7127	PrimaryExpression	0		6982	0					
ANR	7128	Argument	sizeof ( shm -> descriptor )		6982	4					
ANR	7129	SizeofExpression	sizeof ( shm -> descriptor )		6982	0					
ANR	7130	Sizeof	sizeof		6982	0					
ANR	7131	PtrMemberAccess	shm -> descriptor		6982	1					
ANR	7132	Identifier	shm		6982	0					
ANR	7133	Identifier	descriptor		6982	1					
ANR	7134	Argument	shm_info		6982	5					
ANR	7135	Identifier	shm_info		6982	0					
ANR	7136	ExpressionStatement	created = TRUE	612:3:16327:16342	6982	2	True				
ANR	7137	AssignmentExpression	created = TRUE		6982	0		=			
ANR	7138	Identifier	created		6982	0					
ANR	7139	Identifier	TRUE		6982	1					
ANR	7140	IfStatement	if ( ! shm_handle || ! info_handle )		6982	1					
ANR	7141	Condition	! shm_handle || ! info_handle	614:6:16354:16380	6982	0	True				
ANR	7142	OrExpression	! shm_handle || ! info_handle		6982	0		||			
ANR	7143	UnaryOperationExpression	! shm_handle		6982	0					
ANR	7144	UnaryOperator	!		6982	0					
ANR	7145	Identifier	shm_handle		6982	1					
ANR	7146	UnaryOperationExpression	! info_handle		6982	1					
ANR	7147	UnaryOperator	!		6982	0					
ANR	7148	Identifier	info_handle		6982	1					
ANR	7149	CompoundStatement		23:35:774:774	6982	1					
ANR	7150	IfStatement	if ( shm_handle )		6982	0					
ANR	7151	Condition	shm_handle	615:7:16392:16401	6982	0	True				
ANR	7152	Identifier	shm_handle		6982	0					
ANR	7153	CompoundStatement		24:19:795:795	6982	1					
ANR	7154	ExpressionStatement	CloseHandle ( shm_handle )	616:4:16410:16433	6982	0	True				
ANR	7155	CallExpression	CloseHandle ( shm_handle )		6982	0					
ANR	7156	Callee	CloseHandle		6982	0					
ANR	7157	Identifier	CloseHandle		6982	0					
ANR	7158	ArgumentList	shm_handle		6982	1					
ANR	7159	Argument	shm_handle		6982	0					
ANR	7160	Identifier	shm_handle		6982	0					
ANR	7161	IfStatement	if ( info_handle )		6982	1					
ANR	7162	Condition	info_handle	618:7:16447:16457	6982	0	True				
ANR	7163	Identifier	info_handle		6982	0					
ANR	7164	CompoundStatement		27:20:851:851	6982	1					
ANR	7165	ExpressionStatement	CloseHandle ( info_handle )	619:4:16466:16490	6982	0	True				
ANR	7166	CallExpression	CloseHandle ( info_handle )		6982	0					
ANR	7167	Callee	CloseHandle		6982	0					
ANR	7168	Identifier	CloseHandle		6982	0					
ANR	7169	ArgumentList	info_handle		6982	1					
ANR	7170	Argument	info_handle		6982	0					
ANR	7171	Identifier	info_handle		6982	0					
ANR	7172	ReturnStatement	return - 1 ;	621:3:16500:16509	6982	2	True				
ANR	7173	UnaryOperationExpression	- 1		6982	0					
ANR	7174	UnaryOperator	-		6982	0					
ANR	7175	PrimaryExpression	1		6982	1					
ANR	7176	ElseStatement	else		6982	0					
ANR	7177	CompoundStatement		32:8:914:914	6982	0					
ANR	7178	IfStatement	if ( flags & IPC_EXCL )		6982	0					
ANR	7179	Condition	flags & IPC_EXCL	624:6:16531:16546	6982	0	True				
ANR	7180	BitAndExpression	flags & IPC_EXCL		6982	0		&			
ANR	7181	Identifier	flags		6982	0					
ANR	7182	Identifier	IPC_EXCL		6982	1					
ANR	7183	CompoundStatement		33:24:940:940	6982	1					
ANR	7184	ReturnStatement	return - 1 ;	625:3:16554:16563	6982	0	True				
ANR	7185	UnaryOperationExpression	- 1		6982	0					
ANR	7186	UnaryOperator	-		6982	0					
ANR	7187	PrimaryExpression	1		6982	1					
ANR	7188	ExpressionStatement	"shm = shm_get ( key , NULL )"	629:1:16574:16598	6982	10	True				
ANR	7189	AssignmentExpression	"shm = shm_get ( key , NULL )"		6982	0		=			
ANR	7190	Identifier	shm		6982	0					
ANR	7191	CallExpression	"shm_get ( key , NULL )"		6982	1					
ANR	7192	Callee	shm_get		6982	0					
ANR	7193	Identifier	shm_get		6982	0					
ANR	7194	ArgumentList	key		6982	1					
ANR	7195	Argument	key		6982	0					
ANR	7196	Identifier	key		6982	0					
ANR	7197	Argument	NULL		6982	1					
ANR	7198	Identifier	NULL		6982	0					
ANR	7199	IfStatement	if ( ! shm )		6982	11					
ANR	7200	Condition	! shm	630:5:16605:16608	6982	0	True				
ANR	7201	UnaryOperationExpression	! shm		6982	0					
ANR	7202	UnaryOperator	!		6982	0					
ANR	7203	Identifier	shm		6982	1					
ANR	7204	CompoundStatement		39:11:1002:1002	6982	1					
ANR	7205	ExpressionStatement	CloseHandle ( shm_handle )	631:2:16615:16638	6982	0	True				
ANR	7206	CallExpression	CloseHandle ( shm_handle )		6982	0					
ANR	7207	Callee	CloseHandle		6982	0					
ANR	7208	Identifier	CloseHandle		6982	0					
ANR	7209	ArgumentList	shm_handle		6982	1					
ANR	7210	Argument	shm_handle		6982	0					
ANR	7211	Identifier	shm_handle		6982	0					
ANR	7212	ExpressionStatement	CloseHandle ( info_handle )	632:2:16642:16666	6982	1	True				
ANR	7213	CallExpression	CloseHandle ( info_handle )		6982	0					
ANR	7214	Callee	CloseHandle		6982	0					
ANR	7215	Identifier	CloseHandle		6982	0					
ANR	7216	ArgumentList	info_handle		6982	1					
ANR	7217	Argument	info_handle		6982	0					
ANR	7218	Identifier	info_handle		6982	0					
ANR	7219	ReturnStatement	return - 1 ;	633:2:16670:16679	6982	2	True				
ANR	7220	UnaryOperationExpression	- 1		6982	0					
ANR	7221	UnaryOperator	-		6982	0					
ANR	7222	PrimaryExpression	1		6982	1					
ANR	7223	ExpressionStatement	shm -> segment = shm_handle	635:1:16685:16710	6982	12	True				
ANR	7224	AssignmentExpression	shm -> segment = shm_handle		6982	0		=			
ANR	7225	PtrMemberAccess	shm -> segment		6982	0					
ANR	7226	Identifier	shm		6982	0					
ANR	7227	Identifier	segment		6982	1					
ANR	7228	Identifier	shm_handle		6982	1					
ANR	7229	ExpressionStatement	shm -> info = info_handle	636:1:16713:16737	6982	13	True				
ANR	7230	AssignmentExpression	shm -> info = info_handle		6982	0		=			
ANR	7231	PtrMemberAccess	shm -> info		6982	0					
ANR	7232	Identifier	shm		6982	0					
ANR	7233	Identifier	info		6982	1					
ANR	7234	Identifier	info_handle		6982	1					
ANR	7235	ExpressionStatement	"shm -> descriptor = MapViewOfFileEx ( shm -> info , FILE_MAP_ALL_ACCESS , 0 , 0 , 0 , NULL )"	637:1:16740:16820	6982	14	True				
ANR	7236	AssignmentExpression	"shm -> descriptor = MapViewOfFileEx ( shm -> info , FILE_MAP_ALL_ACCESS , 0 , 0 , 0 , NULL )"		6982	0		=			
ANR	7237	PtrMemberAccess	shm -> descriptor		6982	0					
ANR	7238	Identifier	shm		6982	0					
ANR	7239	Identifier	descriptor		6982	1					
ANR	7240	CallExpression	"MapViewOfFileEx ( shm -> info , FILE_MAP_ALL_ACCESS , 0 , 0 , 0 , NULL )"		6982	1					
ANR	7241	Callee	MapViewOfFileEx		6982	0					
ANR	7242	Identifier	MapViewOfFileEx		6982	0					
ANR	7243	ArgumentList	shm -> info		6982	1					
ANR	7244	Argument	shm -> info		6982	0					
ANR	7245	PtrMemberAccess	shm -> info		6982	0					
ANR	7246	Identifier	shm		6982	0					
ANR	7247	Identifier	info		6982	1					
ANR	7248	Argument	FILE_MAP_ALL_ACCESS		6982	1					
ANR	7249	Identifier	FILE_MAP_ALL_ACCESS		6982	0					
ANR	7250	Argument	0		6982	2					
ANR	7251	PrimaryExpression	0		6982	0					
ANR	7252	Argument	0		6982	3					
ANR	7253	PrimaryExpression	0		6982	0					
ANR	7254	Argument	0		6982	4					
ANR	7255	PrimaryExpression	0		6982	0					
ANR	7256	Argument	NULL		6982	5					
ANR	7257	Identifier	NULL		6982	0					
ANR	7258	IfStatement	if ( NULL != shm -> descriptor && created )		6982	15					
ANR	7259	Condition	NULL != shm -> descriptor && created	639:5:16828:16861	6982	0	True				
ANR	7260	AndExpression	NULL != shm -> descriptor && created		6982	0		&&			
ANR	7261	EqualityExpression	NULL != shm -> descriptor		6982	0		!=			
ANR	7262	Identifier	NULL		6982	0					
ANR	7263	PtrMemberAccess	shm -> descriptor		6982	1					
ANR	7264	Identifier	shm		6982	0					
ANR	7265	Identifier	descriptor		6982	1					
ANR	7266	Identifier	created		6982	1					
ANR	7267	CompoundStatement		48:41:1255:1255	6982	1					
ANR	7268	ExpressionStatement	shm -> descriptor -> shm_perm . key = key	640:2:16868:16903	6982	0	True				
ANR	7269	AssignmentExpression	shm -> descriptor -> shm_perm . key = key		6982	0		=			
ANR	7270	MemberAccess	shm -> descriptor -> shm_perm . key		6982	0					
ANR	7271	PtrMemberAccess	shm -> descriptor -> shm_perm		6982	0					
ANR	7272	PtrMemberAccess	shm -> descriptor		6982	0					
ANR	7273	Identifier	shm		6982	0					
ANR	7274	Identifier	descriptor		6982	1					
ANR	7275	Identifier	shm_perm		6982	1					
ANR	7276	Identifier	key		6982	1					
ANR	7277	Identifier	key		6982	1					
ANR	7278	ExpressionStatement	shm -> descriptor -> shm_segsz = size	641:2:16907:16941	6982	1	True				
ANR	7279	AssignmentExpression	shm -> descriptor -> shm_segsz = size		6982	0		=			
ANR	7280	PtrMemberAccess	shm -> descriptor -> shm_segsz		6982	0					
ANR	7281	PtrMemberAccess	shm -> descriptor		6982	0					
ANR	7282	Identifier	shm		6982	0					
ANR	7283	Identifier	descriptor		6982	1					
ANR	7284	Identifier	shm_segsz		6982	1					
ANR	7285	Identifier	size		6982	1					
ANR	7286	ExpressionStatement	shm -> descriptor -> shm_ctime = time ( NULL )	642:2:16945:16985	6982	2	True				
ANR	7287	AssignmentExpression	shm -> descriptor -> shm_ctime = time ( NULL )		6982	0		=			
ANR	7288	PtrMemberAccess	shm -> descriptor -> shm_ctime		6982	0					
ANR	7289	PtrMemberAccess	shm -> descriptor		6982	0					
ANR	7290	Identifier	shm		6982	0					
ANR	7291	Identifier	descriptor		6982	1					
ANR	7292	Identifier	shm_ctime		6982	1					
ANR	7293	CallExpression	time ( NULL )		6982	1					
ANR	7294	Callee	time		6982	0					
ANR	7295	Identifier	time		6982	0					
ANR	7296	ArgumentList	NULL		6982	1					
ANR	7297	Argument	NULL		6982	0					
ANR	7298	Identifier	NULL		6982	0					
ANR	7299	ExpressionStatement	shm -> descriptor -> shm_cpid = getpid ( )	643:2:16989:17026	6982	3	True				
ANR	7300	AssignmentExpression	shm -> descriptor -> shm_cpid = getpid ( )		6982	0		=			
ANR	7301	PtrMemberAccess	shm -> descriptor -> shm_cpid		6982	0					
ANR	7302	PtrMemberAccess	shm -> descriptor		6982	0					
ANR	7303	Identifier	shm		6982	0					
ANR	7304	Identifier	descriptor		6982	1					
ANR	7305	Identifier	shm_cpid		6982	1					
ANR	7306	CallExpression	getpid ( )		6982	1					
ANR	7307	Callee	getpid		6982	0					
ANR	7308	Identifier	getpid		6982	0					
ANR	7309	ArgumentList			6982	1					
ANR	7310	ExpressionStatement	shm -> descriptor -> shm_perm . mode = flags	644:2:17030:17068	6982	4	True				
ANR	7311	AssignmentExpression	shm -> descriptor -> shm_perm . mode = flags		6982	0		=			
ANR	7312	MemberAccess	shm -> descriptor -> shm_perm . mode		6982	0					
ANR	7313	PtrMemberAccess	shm -> descriptor -> shm_perm		6982	0					
ANR	7314	PtrMemberAccess	shm -> descriptor		6982	0					
ANR	7315	Identifier	shm		6982	0					
ANR	7316	Identifier	descriptor		6982	1					
ANR	7317	Identifier	shm_perm		6982	1					
ANR	7318	Identifier	mode		6982	1					
ANR	7319	Identifier	flags		6982	1					
ANR	7320	ExpressionStatement	shm -> descriptor -> shm_perm . cuid = shm -> descriptor -> shm_perm . cgid = 0	646:2:17073:17139	6982	5	True				
ANR	7321	AssignmentExpression	shm -> descriptor -> shm_perm . cuid = shm -> descriptor -> shm_perm . cgid = 0		6982	0		=			
ANR	7322	MemberAccess	shm -> descriptor -> shm_perm . cuid		6982	0					
ANR	7323	PtrMemberAccess	shm -> descriptor -> shm_perm		6982	0					
ANR	7324	PtrMemberAccess	shm -> descriptor		6982	0					
ANR	7325	Identifier	shm		6982	0					
ANR	7326	Identifier	descriptor		6982	1					
ANR	7327	Identifier	shm_perm		6982	1					
ANR	7328	Identifier	cuid		6982	1					
ANR	7329	AssignmentExpression	shm -> descriptor -> shm_perm . cgid = 0		6982	1		=			
ANR	7330	MemberAccess	shm -> descriptor -> shm_perm . cgid		6982	0					
ANR	7331	PtrMemberAccess	shm -> descriptor -> shm_perm		6982	0					
ANR	7332	PtrMemberAccess	shm -> descriptor		6982	0					
ANR	7333	Identifier	shm		6982	0					
ANR	7334	Identifier	descriptor		6982	1					
ANR	7335	Identifier	shm_perm		6982	1					
ANR	7336	Identifier	cgid		6982	1					
ANR	7337	PrimaryExpression	0		6982	1					
ANR	7338	ExpressionStatement	shm -> descriptor -> shm_perm . gid = shm -> descriptor -> shm_perm . uid = 0	647:2:17143:17208	6982	6	True				
ANR	7339	AssignmentExpression	shm -> descriptor -> shm_perm . gid = shm -> descriptor -> shm_perm . uid = 0		6982	0		=			
ANR	7340	MemberAccess	shm -> descriptor -> shm_perm . gid		6982	0					
ANR	7341	PtrMemberAccess	shm -> descriptor -> shm_perm		6982	0					
ANR	7342	PtrMemberAccess	shm -> descriptor		6982	0					
ANR	7343	Identifier	shm		6982	0					
ANR	7344	Identifier	descriptor		6982	1					
ANR	7345	Identifier	shm_perm		6982	1					
ANR	7346	Identifier	gid		6982	1					
ANR	7347	AssignmentExpression	shm -> descriptor -> shm_perm . uid = 0		6982	1		=			
ANR	7348	MemberAccess	shm -> descriptor -> shm_perm . uid		6982	0					
ANR	7349	PtrMemberAccess	shm -> descriptor -> shm_perm		6982	0					
ANR	7350	PtrMemberAccess	shm -> descriptor		6982	0					
ANR	7351	Identifier	shm		6982	0					
ANR	7352	Identifier	descriptor		6982	1					
ANR	7353	Identifier	shm_perm		6982	1					
ANR	7354	Identifier	uid		6982	1					
ANR	7355	PrimaryExpression	0		6982	1					
ANR	7356	ExpressionStatement	shm -> descriptor -> shm_atime = shm -> descriptor -> shm_dtime = 0	648:2:17212:17272	6982	7	True				
ANR	7357	AssignmentExpression	shm -> descriptor -> shm_atime = shm -> descriptor -> shm_dtime = 0		6982	0		=			
ANR	7358	PtrMemberAccess	shm -> descriptor -> shm_atime		6982	0					
ANR	7359	PtrMemberAccess	shm -> descriptor		6982	0					
ANR	7360	Identifier	shm		6982	0					
ANR	7361	Identifier	descriptor		6982	1					
ANR	7362	Identifier	shm_atime		6982	1					
ANR	7363	AssignmentExpression	shm -> descriptor -> shm_dtime = 0		6982	1		=			
ANR	7364	PtrMemberAccess	shm -> descriptor -> shm_dtime		6982	0					
ANR	7365	PtrMemberAccess	shm -> descriptor		6982	0					
ANR	7366	Identifier	shm		6982	0					
ANR	7367	Identifier	descriptor		6982	1					
ANR	7368	Identifier	shm_dtime		6982	1					
ANR	7369	PrimaryExpression	0		6982	1					
ANR	7370	ExpressionStatement	shm -> descriptor -> shm_lpid = shm -> descriptor -> shm_nattch = 0	649:2:17276:17336	6982	8	True				
ANR	7371	AssignmentExpression	shm -> descriptor -> shm_lpid = shm -> descriptor -> shm_nattch = 0		6982	0		=			
ANR	7372	PtrMemberAccess	shm -> descriptor -> shm_lpid		6982	0					
ANR	7373	PtrMemberAccess	shm -> descriptor		6982	0					
ANR	7374	Identifier	shm		6982	0					
ANR	7375	Identifier	descriptor		6982	1					
ANR	7376	Identifier	shm_lpid		6982	1					
ANR	7377	AssignmentExpression	shm -> descriptor -> shm_nattch = 0		6982	1		=			
ANR	7378	PtrMemberAccess	shm -> descriptor -> shm_nattch		6982	0					
ANR	7379	PtrMemberAccess	shm -> descriptor		6982	0					
ANR	7380	Identifier	shm		6982	0					
ANR	7381	Identifier	descriptor		6982	1					
ANR	7382	Identifier	shm_nattch		6982	1					
ANR	7383	PrimaryExpression	0		6982	1					
ANR	7384	ExpressionStatement	shm -> descriptor -> shm_perm . mode = shm -> descriptor -> shm_perm . seq = 0	650:2:17340:17406	6982	9	True				
ANR	7385	AssignmentExpression	shm -> descriptor -> shm_perm . mode = shm -> descriptor -> shm_perm . seq = 0		6982	0		=			
ANR	7386	MemberAccess	shm -> descriptor -> shm_perm . mode		6982	0					
ANR	7387	PtrMemberAccess	shm -> descriptor -> shm_perm		6982	0					
ANR	7388	PtrMemberAccess	shm -> descriptor		6982	0					
ANR	7389	Identifier	shm		6982	0					
ANR	7390	Identifier	descriptor		6982	1					
ANR	7391	Identifier	shm_perm		6982	1					
ANR	7392	Identifier	mode		6982	1					
ANR	7393	AssignmentExpression	shm -> descriptor -> shm_perm . seq = 0		6982	1		=			
ANR	7394	MemberAccess	shm -> descriptor -> shm_perm . seq		6982	0					
ANR	7395	PtrMemberAccess	shm -> descriptor -> shm_perm		6982	0					
ANR	7396	PtrMemberAccess	shm -> descriptor		6982	0					
ANR	7397	Identifier	shm		6982	0					
ANR	7398	Identifier	descriptor		6982	1					
ANR	7399	Identifier	shm_perm		6982	1					
ANR	7400	Identifier	seq		6982	1					
ANR	7401	PrimaryExpression	0		6982	1					
ANR	7402	IfStatement	if ( NULL != shm -> descriptor && ( shm -> descriptor -> shm_perm . key != key || size > shm -> descriptor -> shm_segsz ) )		6982	16					
ANR	7403	Condition	NULL != shm -> descriptor && ( shm -> descriptor -> shm_perm . key != key || size > shm -> descriptor -> shm_segsz )	653:5:17417:17518	6982	0	True				
ANR	7404	AndExpression	NULL != shm -> descriptor && ( shm -> descriptor -> shm_perm . key != key || size > shm -> descriptor -> shm_segsz )		6982	0		&&			
ANR	7405	EqualityExpression	NULL != shm -> descriptor		6982	0		!=			
ANR	7406	Identifier	NULL		6982	0					
ANR	7407	PtrMemberAccess	shm -> descriptor		6982	1					
ANR	7408	Identifier	shm		6982	0					
ANR	7409	Identifier	descriptor		6982	1					
ANR	7410	OrExpression	shm -> descriptor -> shm_perm . key != key || size > shm -> descriptor -> shm_segsz		6982	1		||			
ANR	7411	EqualityExpression	shm -> descriptor -> shm_perm . key != key		6982	0		!=			
ANR	7412	MemberAccess	shm -> descriptor -> shm_perm . key		6982	0					
ANR	7413	PtrMemberAccess	shm -> descriptor -> shm_perm		6982	0					
ANR	7414	PtrMemberAccess	shm -> descriptor		6982	0					
ANR	7415	Identifier	shm		6982	0					
ANR	7416	Identifier	descriptor		6982	1					
ANR	7417	Identifier	shm_perm		6982	1					
ANR	7418	Identifier	key		6982	1					
ANR	7419	Identifier	key		6982	1					
ANR	7420	RelationalExpression	size > shm -> descriptor -> shm_segsz		6982	1		>			
ANR	7421	Identifier	size		6982	0					
ANR	7422	PtrMemberAccess	shm -> descriptor -> shm_segsz		6982	1					
ANR	7423	PtrMemberAccess	shm -> descriptor		6982	0					
ANR	7424	Identifier	shm		6982	0					
ANR	7425	Identifier	descriptor		6982	1					
ANR	7426	Identifier	shm_segsz		6982	1					
ANR	7427	CompoundStatement		62:109:1912:1912	6982	1					
ANR	7428	IfStatement	if ( NULL != shm -> segment )		6982	0					
ANR	7429	Condition	NULL != shm -> segment	654:6:17529:17548	6982	0	True				
ANR	7430	EqualityExpression	NULL != shm -> segment		6982	0		!=			
ANR	7431	Identifier	NULL		6982	0					
ANR	7432	PtrMemberAccess	shm -> segment		6982	1					
ANR	7433	Identifier	shm		6982	0					
ANR	7434	Identifier	segment		6982	1					
ANR	7435	CompoundStatement		63:28:1942:1942	6982	1					
ANR	7436	ExpressionStatement	CloseHandle ( shm -> segment )	655:3:17556:17581	6982	0	True				
ANR	7437	CallExpression	CloseHandle ( shm -> segment )		6982	0					
ANR	7438	Callee	CloseHandle		6982	0					
ANR	7439	Identifier	CloseHandle		6982	0					
ANR	7440	ArgumentList	shm -> segment		6982	1					
ANR	7441	Argument	shm -> segment		6982	0					
ANR	7442	PtrMemberAccess	shm -> segment		6982	0					
ANR	7443	Identifier	shm		6982	0					
ANR	7444	Identifier	segment		6982	1					
ANR	7445	ExpressionStatement	UnmapViewOfFile ( shm -> descriptor )	657:2:17589:17621	6982	1	True				
ANR	7446	CallExpression	UnmapViewOfFile ( shm -> descriptor )		6982	0					
ANR	7447	Callee	UnmapViewOfFile		6982	0					
ANR	7448	Identifier	UnmapViewOfFile		6982	0					
ANR	7449	ArgumentList	shm -> descriptor		6982	1					
ANR	7450	Argument	shm -> descriptor		6982	0					
ANR	7451	PtrMemberAccess	shm -> descriptor		6982	0					
ANR	7452	Identifier	shm		6982	0					
ANR	7453	Identifier	descriptor		6982	1					
ANR	7454	ExpressionStatement	CloseHandle ( shm -> info )	658:2:17625:17647	6982	2	True				
ANR	7455	CallExpression	CloseHandle ( shm -> info )		6982	0					
ANR	7456	Callee	CloseHandle		6982	0					
ANR	7457	Identifier	CloseHandle		6982	0					
ANR	7458	ArgumentList	shm -> info		6982	1					
ANR	7459	Argument	shm -> info		6982	0					
ANR	7460	PtrMemberAccess	shm -> info		6982	0					
ANR	7461	Identifier	shm		6982	0					
ANR	7462	Identifier	info		6982	1					
ANR	7463	ReturnStatement	return - 1 ;	659:2:17651:17660	6982	3	True				
ANR	7464	UnaryOperationExpression	- 1		6982	0					
ANR	7465	UnaryOperator	-		6982	0					
ANR	7466	PrimaryExpression	1		6982	1					
ANR	7467	ReturnStatement	return key ;	662:1:17667:17677	6982	17	True				
ANR	7468	Identifier	key		6982	0					
ANR	7469	ReturnType	TSRM_API int		6982	1					
ANR	7470	Identifier	shmget		6982	2					
ANR	7471	ParameterList	"int key , int size , int flags"		6982	3					
ANR	7472	Parameter	int key	591:20:15578:15584	6982	0	True				
ANR	7473	ParameterType	int		6982	0					
ANR	7474	Identifier	key		6982	1					
ANR	7475	Parameter	int size	591:29:15587:15594	6982	1	True				
ANR	7476	ParameterType	int		6982	0					
ANR	7477	Identifier	size		6982	1					
ANR	7478	Parameter	int flags	591:39:15597:15605	6982	2	True				
ANR	7479	ParameterType	int		6982	0					
ANR	7480	Identifier	flags		6982	1					
ANR	7481	CFGEntryNode	ENTRY		6982		True				
ANR	7482	CFGExitNode	EXIT		6982		True				
ANR	7483	Symbol	shm -> info		6982						
ANR	7484	Symbol	shm -> descriptor -> shm_cpid		6982						
ANR	7485	Symbol	shm_segment		6982						
ANR	7486	Symbol	flags		6982						
ANR	7487	Symbol	shm -> descriptor -> shm_perm . uid		6982						
ANR	7488	Symbol	shm -> descriptor -> shm_atime		6982						
ANR	7489	Symbol	* * shm		6982						
ANR	7490	Symbol	CreateFileMapping		6982						
ANR	7491	Symbol	shm_info		6982						
ANR	7492	Symbol	* shm -> descriptor		6982						
ANR	7493	Symbol	shm -> descriptor -> shm_segsz		6982						
ANR	7494	Symbol	shm_handle		6982						
ANR	7495	Symbol	shm -> descriptor -> shm_perm . cgid		6982						
ANR	7496	Symbol	FILE_MAP_ALL_ACCESS		6982						
ANR	7497	Symbol	shm -> descriptor -> shm_nattch		6982						
ANR	7498	Symbol	shm -> descriptor -> shm_perm . gid		6982						
ANR	7499	Symbol	key		6982						
ANR	7500	Symbol	shm_get		6982						
ANR	7501	Symbol	shm -> descriptor -> shm_perm		6982						
ANR	7502	Symbol	* shm		6982						
ANR	7503	Symbol	MapViewOfFileEx		6982						
ANR	7504	Symbol	shm -> descriptor -> shm_ctime		6982						
ANR	7505	Symbol	NULL		6982						
ANR	7506	Symbol	shm -> descriptor -> shm_perm . cuid		6982						
ANR	7507	Symbol	created		6982						
ANR	7508	Symbol	IPC_EXCL		6982						
ANR	7509	Symbol	shm -> descriptor		6982						
ANR	7510	Symbol	TRUE		6982						
ANR	7511	Symbol	info_handle		6982						
ANR	7512	Symbol	INVALID_HANDLE_VALUE		6982						
ANR	7513	Symbol	OpenFileMapping		6982						
ANR	7514	Symbol	IPC_CREAT		6982						
ANR	7515	Symbol	PAGE_READWRITE		6982						
ANR	7516	Symbol	shm -> descriptor -> shm_dtime		6982						
ANR	7517	Symbol	shm -> descriptor -> shm_lpid		6982						
ANR	7518	Symbol	shm -> descriptor -> shm_perm . mode		6982						
ANR	7519	Symbol	size		6982						
ANR	7520	Symbol	shm -> segment		6982						
ANR	7521	Symbol	shm -> descriptor -> shm_perm . key		6982						
ANR	7522	Symbol	shm -> descriptor -> shm_perm . seq		6982						
ANR	7523	Symbol	shm		6982						
ANR	7524	Symbol	FALSE		6982						
ANR	7525	Symbol	time		6982						
ANR	7526	Symbol	getpid		6982						
ANR	7527	Function	shmat	665:0:17682:18045							
ANR	7528	FunctionDef	"shmat (int key , const void * shmaddr , int flags)"		7527	0					
ANR	7529	CompoundStatement		666:0:17744:18045	7527	0					
ANR	7530	IdentifierDeclStatement	"shm_pair * shm = shm_get ( key , NULL ) ;"	667:1:17747:17781	7527	0	True				
ANR	7531	IdentifierDecl	"* shm = shm_get ( key , NULL )"		7527	0					
ANR	7532	IdentifierDeclType	shm_pair *		7527	0					
ANR	7533	Identifier	shm		7527	1					
ANR	7534	AssignmentExpression	"* shm = shm_get ( key , NULL )"		7527	2		=			
ANR	7535	Identifier	shm		7527	0					
ANR	7536	CallExpression	"shm_get ( key , NULL )"		7527	1					
ANR	7537	Callee	shm_get		7527	0					
ANR	7538	Identifier	shm_get		7527	0					
ANR	7539	ArgumentList	key		7527	1					
ANR	7540	Argument	key		7527	0					
ANR	7541	Identifier	key		7527	0					
ANR	7542	Argument	NULL		7527	1					
ANR	7543	Identifier	NULL		7527	0					
ANR	7544	IfStatement	if ( ! shm -> segment )		7527	1					
ANR	7545	Condition	! shm -> segment	669:5:17789:17801	7527	0	True				
ANR	7546	UnaryOperationExpression	! shm -> segment		7527	0					
ANR	7547	UnaryOperator	!		7527	0					
ANR	7548	PtrMemberAccess	shm -> segment		7527	1					
ANR	7549	Identifier	shm		7527	0					
ANR	7550	Identifier	segment		7527	1					
ANR	7551	CompoundStatement		4:20:59:59	7527	1					
ANR	7552	ReturnStatement	return ( void * ) - 1 ;	670:2:17808:17824	7527	0	True				
ANR	7553	CastExpression	( void * ) - 1		7527	0					
ANR	7554	CastTarget	void *		7527	0					
ANR	7555	UnaryOperationExpression	- 1		7527	1					
ANR	7556	UnaryOperator	-		7527	0					
ANR	7557	PrimaryExpression	1		7527	1					
ANR	7558	ExpressionStatement	shm -> descriptor -> shm_atime = time ( NULL )	673:1:17831:17870	7527	2	True				
ANR	7559	AssignmentExpression	shm -> descriptor -> shm_atime = time ( NULL )		7527	0		=			
ANR	7560	PtrMemberAccess	shm -> descriptor -> shm_atime		7527	0					
ANR	7561	PtrMemberAccess	shm -> descriptor		7527	0					
ANR	7562	Identifier	shm		7527	0					
ANR	7563	Identifier	descriptor		7527	1					
ANR	7564	Identifier	shm_atime		7527	1					
ANR	7565	CallExpression	time ( NULL )		7527	1					
ANR	7566	Callee	time		7527	0					
ANR	7567	Identifier	time		7527	0					
ANR	7568	ArgumentList	NULL		7527	1					
ANR	7569	Argument	NULL		7527	0					
ANR	7570	Identifier	NULL		7527	0					
ANR	7571	ExpressionStatement	shm -> descriptor -> shm_lpid = getpid ( )	674:1:17873:17910	7527	3	True				
ANR	7572	AssignmentExpression	shm -> descriptor -> shm_lpid = getpid ( )		7527	0		=			
ANR	7573	PtrMemberAccess	shm -> descriptor -> shm_lpid		7527	0					
ANR	7574	PtrMemberAccess	shm -> descriptor		7527	0					
ANR	7575	Identifier	shm		7527	0					
ANR	7576	Identifier	descriptor		7527	1					
ANR	7577	Identifier	shm_lpid		7527	1					
ANR	7578	CallExpression	getpid ( )		7527	1					
ANR	7579	Callee	getpid		7527	0					
ANR	7580	Identifier	getpid		7527	0					
ANR	7581	ArgumentList			7527	1					
ANR	7582	ExpressionStatement	shm -> descriptor -> shm_nattch ++	675:1:17913:17942	7527	4	True				
ANR	7583	PostIncDecOperationExpression	shm -> descriptor -> shm_nattch ++		7527	0					
ANR	7584	PtrMemberAccess	shm -> descriptor -> shm_nattch		7527	0					
ANR	7585	PtrMemberAccess	shm -> descriptor		7527	0					
ANR	7586	Identifier	shm		7527	0					
ANR	7587	Identifier	descriptor		7527	1					
ANR	7588	Identifier	shm_nattch		7527	1					
ANR	7589	IncDec	++		7527	1					
ANR	7590	ExpressionStatement	"shm -> addr = MapViewOfFileEx ( shm -> segment , FILE_MAP_ALL_ACCESS , 0 , 0 , 0 , NULL )"	677:1:17946:18023	7527	5	True				
ANR	7591	AssignmentExpression	"shm -> addr = MapViewOfFileEx ( shm -> segment , FILE_MAP_ALL_ACCESS , 0 , 0 , 0 , NULL )"		7527	0		=			
ANR	7592	PtrMemberAccess	shm -> addr		7527	0					
ANR	7593	Identifier	shm		7527	0					
ANR	7594	Identifier	addr		7527	1					
ANR	7595	CallExpression	"MapViewOfFileEx ( shm -> segment , FILE_MAP_ALL_ACCESS , 0 , 0 , 0 , NULL )"		7527	1					
ANR	7596	Callee	MapViewOfFileEx		7527	0					
ANR	7597	Identifier	MapViewOfFileEx		7527	0					
ANR	7598	ArgumentList	shm -> segment		7527	1					
ANR	7599	Argument	shm -> segment		7527	0					
ANR	7600	PtrMemberAccess	shm -> segment		7527	0					
ANR	7601	Identifier	shm		7527	0					
ANR	7602	Identifier	segment		7527	1					
ANR	7603	Argument	FILE_MAP_ALL_ACCESS		7527	1					
ANR	7604	Identifier	FILE_MAP_ALL_ACCESS		7527	0					
ANR	7605	Argument	0		7527	2					
ANR	7606	PrimaryExpression	0		7527	0					
ANR	7607	Argument	0		7527	3					
ANR	7608	PrimaryExpression	0		7527	0					
ANR	7609	Argument	0		7527	4					
ANR	7610	PrimaryExpression	0		7527	0					
ANR	7611	Argument	NULL		7527	5					
ANR	7612	Identifier	NULL		7527	0					
ANR	7613	ReturnStatement	return shm -> addr ;	679:1:18027:18043	7527	6	True				
ANR	7614	PtrMemberAccess	shm -> addr		7527	0					
ANR	7615	Identifier	shm		7527	0					
ANR	7616	Identifier	addr		7527	1					
ANR	7617	ReturnType	TSRM_API void *		7527	1					
ANR	7618	Identifier	shmat		7527	2					
ANR	7619	ParameterList	"int key , const void * shmaddr , int flags"		7527	3					
ANR	7620	Parameter	int key	665:21:17703:17709	7527	0	True				
ANR	7621	ParameterType	int		7527	0					
ANR	7622	Identifier	key		7527	1					
ANR	7623	Parameter	const void * shmaddr	665:30:17712:17730	7527	1	True				
ANR	7624	ParameterType	const void *		7527	0					
ANR	7625	Identifier	shmaddr		7527	1					
ANR	7626	Parameter	int flags	665:51:17733:17741	7527	2	True				
ANR	7627	ParameterType	int		7527	0					
ANR	7628	Identifier	flags		7527	1					
ANR	7629	CFGEntryNode	ENTRY		7527		True				
ANR	7630	CFGExitNode	EXIT		7527		True				
ANR	7631	Symbol	* shm		7527						
ANR	7632	Symbol	MapViewOfFileEx		7527						
ANR	7633	Symbol	NULL		7527						
ANR	7634	Symbol	flags		7527						
ANR	7635	Symbol	shm -> descriptor -> shm_atime		7527						
ANR	7636	Symbol	shm -> addr		7527						
ANR	7637	Symbol	shm -> descriptor		7527						
ANR	7638	Symbol	* * shm		7527						
ANR	7639	Symbol	* shm -> descriptor		7527						
ANR	7640	Symbol	shm -> descriptor -> shm_lpid		7527						
ANR	7641	Symbol	shm -> segment		7527						
ANR	7642	Symbol	shm		7527						
ANR	7643	Symbol	shm -> descriptor -> shm_nattch		7527						
ANR	7644	Symbol	FILE_MAP_ALL_ACCESS		7527						
ANR	7645	Symbol	shmaddr		7527						
ANR	7646	Symbol	time		7527						
ANR	7647	Symbol	getpid		7527						
ANR	7648	Symbol	key		7527						
ANR	7649	Symbol	shm_get		7527						
ANR	7650	Function	shmdt	682:0:18048:18335							
ANR	7651	FunctionDef	shmdt (const void * shmaddr)		7650	0					
ANR	7652	CompoundStatement		683:0:18088:18335	7650	0					
ANR	7653	IdentifierDeclStatement	"shm_pair * shm = shm_get ( 0 , ( void * ) shmaddr ) ;"	684:1:18091:18133	7650	0	True				
ANR	7654	IdentifierDecl	"* shm = shm_get ( 0 , ( void * ) shmaddr )"		7650	0					
ANR	7655	IdentifierDeclType	shm_pair *		7650	0					
ANR	7656	Identifier	shm		7650	1					
ANR	7657	AssignmentExpression	"* shm = shm_get ( 0 , ( void * ) shmaddr )"		7650	2		=			
ANR	7658	Identifier	shm		7650	0					
ANR	7659	CallExpression	"shm_get ( 0 , ( void * ) shmaddr )"		7650	1					
ANR	7660	Callee	shm_get		7650	0					
ANR	7661	Identifier	shm_get		7650	0					
ANR	7662	ArgumentList	0		7650	1					
ANR	7663	Argument	0		7650	0					
ANR	7664	PrimaryExpression	0		7650	0					
ANR	7665	Argument	( void * ) shmaddr		7650	1					
ANR	7666	CastExpression	( void * ) shmaddr		7650	0					
ANR	7667	CastTarget	void *		7650	0					
ANR	7668	Identifier	shmaddr		7650	1					
ANR	7669	IfStatement	if ( ! shm -> segment )		7650	1					
ANR	7670	Condition	! shm -> segment	686:5:18141:18153	7650	0	True				
ANR	7671	UnaryOperationExpression	! shm -> segment		7650	0					
ANR	7672	UnaryOperator	!		7650	0					
ANR	7673	PtrMemberAccess	shm -> segment		7650	1					
ANR	7674	Identifier	shm		7650	0					
ANR	7675	Identifier	segment		7650	1					
ANR	7676	CompoundStatement		4:20:67:67	7650	1					
ANR	7677	ReturnStatement	return - 1 ;	687:2:18160:18169	7650	0	True				
ANR	7678	UnaryOperationExpression	- 1		7650	0					
ANR	7679	UnaryOperator	-		7650	0					
ANR	7680	PrimaryExpression	1		7650	1					
ANR	7681	ExpressionStatement	shm -> descriptor -> shm_dtime = time ( NULL )	690:1:18176:18215	7650	2	True				
ANR	7682	AssignmentExpression	shm -> descriptor -> shm_dtime = time ( NULL )		7650	0		=			
ANR	7683	PtrMemberAccess	shm -> descriptor -> shm_dtime		7650	0					
ANR	7684	PtrMemberAccess	shm -> descriptor		7650	0					
ANR	7685	Identifier	shm		7650	0					
ANR	7686	Identifier	descriptor		7650	1					
ANR	7687	Identifier	shm_dtime		7650	1					
ANR	7688	CallExpression	time ( NULL )		7650	1					
ANR	7689	Callee	time		7650	0					
ANR	7690	Identifier	time		7650	0					
ANR	7691	ArgumentList	NULL		7650	1					
ANR	7692	Argument	NULL		7650	0					
ANR	7693	Identifier	NULL		7650	0					
ANR	7694	ExpressionStatement	shm -> descriptor -> shm_lpid = getpid ( )	691:1:18218:18255	7650	3	True				
ANR	7695	AssignmentExpression	shm -> descriptor -> shm_lpid = getpid ( )		7650	0		=			
ANR	7696	PtrMemberAccess	shm -> descriptor -> shm_lpid		7650	0					
ANR	7697	PtrMemberAccess	shm -> descriptor		7650	0					
ANR	7698	Identifier	shm		7650	0					
ANR	7699	Identifier	descriptor		7650	1					
ANR	7700	Identifier	shm_lpid		7650	1					
ANR	7701	CallExpression	getpid ( )		7650	1					
ANR	7702	Callee	getpid		7650	0					
ANR	7703	Identifier	getpid		7650	0					
ANR	7704	ArgumentList			7650	1					
ANR	7705	ExpressionStatement	shm -> descriptor -> shm_nattch --	692:1:18258:18287	7650	4	True				
ANR	7706	PostIncDecOperationExpression	shm -> descriptor -> shm_nattch --		7650	0					
ANR	7707	PtrMemberAccess	shm -> descriptor -> shm_nattch		7650	0					
ANR	7708	PtrMemberAccess	shm -> descriptor		7650	0					
ANR	7709	Identifier	shm		7650	0					
ANR	7710	Identifier	descriptor		7650	1					
ANR	7711	Identifier	shm_nattch		7650	1					
ANR	7712	IncDec	--		7650	1					
ANR	7713	ReturnStatement	return UnmapViewOfFile ( shm -> addr ) ? 0 : - 1 ;	694:1:18291:18333	7650	5	True				
ANR	7714	ConditionalExpression	UnmapViewOfFile ( shm -> addr ) ? 0 : - 1		7650	0					
ANR	7715	Condition	UnmapViewOfFile ( shm -> addr )		7650	0					
ANR	7716	CallExpression	UnmapViewOfFile ( shm -> addr )		7650	0					
ANR	7717	Callee	UnmapViewOfFile		7650	0					
ANR	7718	Identifier	UnmapViewOfFile		7650	0					
ANR	7719	ArgumentList	shm -> addr		7650	1					
ANR	7720	Argument	shm -> addr		7650	0					
ANR	7721	PtrMemberAccess	shm -> addr		7650	0					
ANR	7722	Identifier	shm		7650	0					
ANR	7723	Identifier	addr		7650	1					
ANR	7724	PrimaryExpression	0		7650	1					
ANR	7725	UnaryOperationExpression	- 1		7650	2					
ANR	7726	UnaryOperator	-		7650	0					
ANR	7727	PrimaryExpression	1		7650	1					
ANR	7728	ReturnType	TSRM_API int		7650	1					
ANR	7729	Identifier	shmdt		7650	2					
ANR	7730	ParameterList	const void * shmaddr		7650	3					
ANR	7731	Parameter	const void * shmaddr	682:19:18067:18085	7650	0	True				
ANR	7732	ParameterType	const void *		7650	0					
ANR	7733	Identifier	shmaddr		7650	1					
ANR	7734	CFGEntryNode	ENTRY		7650		True				
ANR	7735	CFGExitNode	EXIT		7650		True				
ANR	7736	Symbol	* shm		7650						
ANR	7737	Symbol	NULL		7650						
ANR	7738	Symbol	shm -> addr		7650						
ANR	7739	Symbol	shm -> descriptor		7650						
ANR	7740	Symbol	* * shm		7650						
ANR	7741	Symbol	UnmapViewOfFile		7650						
ANR	7742	Symbol	* shm -> descriptor		7650						
ANR	7743	Symbol	shm -> descriptor -> shm_dtime		7650						
ANR	7744	Symbol	shm -> descriptor -> shm_lpid		7650						
ANR	7745	Symbol	shm -> segment		7650						
ANR	7746	Symbol	shm		7650						
ANR	7747	Symbol	shm -> descriptor -> shm_nattch		7650						
ANR	7748	Symbol	shmaddr		7650						
ANR	7749	Symbol	time		7650						
ANR	7750	Symbol	getpid		7650						
ANR	7751	Symbol	shm_get		7650						
ANR	7752	Function	shmctl	697:0:18338:18967							
ANR	7753	FunctionDef	"shmctl (int key , int cmd , struct shmid_ds * buf)"		7752	0					
ANR	7754	CompoundStatement		697:60:18398:18967	7752	0					
ANR	7755	IdentifierDeclStatement	"shm_pair * shm = shm_get ( key , NULL ) ;"	698:1:18401:18435	7752	0	True				
ANR	7756	IdentifierDecl	"* shm = shm_get ( key , NULL )"		7752	0					
ANR	7757	IdentifierDeclType	shm_pair *		7752	0					
ANR	7758	Identifier	shm		7752	1					
ANR	7759	AssignmentExpression	"* shm = shm_get ( key , NULL )"		7752	2		=			
ANR	7760	Identifier	shm		7752	0					
ANR	7761	CallExpression	"shm_get ( key , NULL )"		7752	1					
ANR	7762	Callee	shm_get		7752	0					
ANR	7763	Identifier	shm_get		7752	0					
ANR	7764	ArgumentList	key		7752	1					
ANR	7765	Argument	key		7752	0					
ANR	7766	Identifier	key		7752	0					
ANR	7767	Argument	NULL		7752	1					
ANR	7768	Identifier	NULL		7752	0					
ANR	7769	IfStatement	if ( ! shm -> segment )		7752	1					
ANR	7770	Condition	! shm -> segment	700:5:18443:18455	7752	0	True				
ANR	7771	UnaryOperationExpression	! shm -> segment		7752	0					
ANR	7772	UnaryOperator	!		7752	0					
ANR	7773	PtrMemberAccess	shm -> segment		7752	1					
ANR	7774	Identifier	shm		7752	0					
ANR	7775	Identifier	segment		7752	1					
ANR	7776	CompoundStatement		4:20:59:59	7752	1					
ANR	7777	ReturnStatement	return - 1 ;	701:2:18462:18471	7752	0	True				
ANR	7778	UnaryOperationExpression	- 1		7752	0					
ANR	7779	UnaryOperator	-		7752	0					
ANR	7780	PrimaryExpression	1		7752	1					
ANR	7781	SwitchStatement	switch ( cmd )		7752	2					
ANR	7782	Condition	cmd	704:9:18486:18488	7752	0	True				
ANR	7783	Identifier	cmd		7752	0					
ANR	7784	CompoundStatement		8:14:92:92	7752	1					
ANR	7785	Label	case IPC_STAT :	705:2:18495:18508	7752	0	True				
ANR	7786	Identifier	IPC_STAT		7752	0					
ANR	7787	ExpressionStatement	"memcpy ( buf , shm -> descriptor , sizeof ( struct shmid_ds ) )"	706:3:18513:18566	7752	1	True				
ANR	7788	CallExpression	"memcpy ( buf , shm -> descriptor , sizeof ( struct shmid_ds ) )"		7752	0					
ANR	7789	Callee	memcpy		7752	0					
ANR	7790	Identifier	memcpy		7752	0					
ANR	7791	ArgumentList	buf		7752	1					
ANR	7792	Argument	buf		7752	0					
ANR	7793	Identifier	buf		7752	0					
ANR	7794	Argument	shm -> descriptor		7752	1					
ANR	7795	PtrMemberAccess	shm -> descriptor		7752	0					
ANR	7796	Identifier	shm		7752	0					
ANR	7797	Identifier	descriptor		7752	1					
ANR	7798	Argument	sizeof ( struct shmid_ds )		7752	2					
ANR	7799	SizeofExpression	sizeof ( struct shmid_ds )		7752	0					
ANR	7800	Sizeof	sizeof		7752	0					
ANR	7801	SizeofOperand	struct shmid_ds		7752	1					
ANR	7802	ReturnStatement	return 0 ;	707:3:18571:18579	7752	2	True				
ANR	7803	PrimaryExpression	0		7752	0					
ANR	7804	Label	case IPC_SET :	709:2:18584:18596	7752	3	True				
ANR	7805	Identifier	IPC_SET		7752	0					
ANR	7806	ExpressionStatement	shm -> descriptor -> shm_ctime = time ( NULL )	710:3:18601:18641	7752	4	True				
ANR	7807	AssignmentExpression	shm -> descriptor -> shm_ctime = time ( NULL )		7752	0		=			
ANR	7808	PtrMemberAccess	shm -> descriptor -> shm_ctime		7752	0					
ANR	7809	PtrMemberAccess	shm -> descriptor		7752	0					
ANR	7810	Identifier	shm		7752	0					
ANR	7811	Identifier	descriptor		7752	1					
ANR	7812	Identifier	shm_ctime		7752	1					
ANR	7813	CallExpression	time ( NULL )		7752	1					
ANR	7814	Callee	time		7752	0					
ANR	7815	Identifier	time		7752	0					
ANR	7816	ArgumentList	NULL		7752	1					
ANR	7817	Argument	NULL		7752	0					
ANR	7818	Identifier	NULL		7752	0					
ANR	7819	ExpressionStatement	shm -> descriptor -> shm_perm . uid = buf -> shm_perm . uid	711:3:18646:18695	7752	5	True				
ANR	7820	AssignmentExpression	shm -> descriptor -> shm_perm . uid = buf -> shm_perm . uid		7752	0		=			
ANR	7821	MemberAccess	shm -> descriptor -> shm_perm . uid		7752	0					
ANR	7822	PtrMemberAccess	shm -> descriptor -> shm_perm		7752	0					
ANR	7823	PtrMemberAccess	shm -> descriptor		7752	0					
ANR	7824	Identifier	shm		7752	0					
ANR	7825	Identifier	descriptor		7752	1					
ANR	7826	Identifier	shm_perm		7752	1					
ANR	7827	Identifier	uid		7752	1					
ANR	7828	MemberAccess	buf -> shm_perm . uid		7752	1					
ANR	7829	PtrMemberAccess	buf -> shm_perm		7752	0					
ANR	7830	Identifier	buf		7752	0					
ANR	7831	Identifier	shm_perm		7752	1					
ANR	7832	Identifier	uid		7752	1					
ANR	7833	ExpressionStatement	shm -> descriptor -> shm_perm . gid = buf -> shm_perm . gid	712:3:18700:18749	7752	6	True				
ANR	7834	AssignmentExpression	shm -> descriptor -> shm_perm . gid = buf -> shm_perm . gid		7752	0		=			
ANR	7835	MemberAccess	shm -> descriptor -> shm_perm . gid		7752	0					
ANR	7836	PtrMemberAccess	shm -> descriptor -> shm_perm		7752	0					
ANR	7837	PtrMemberAccess	shm -> descriptor		7752	0					
ANR	7838	Identifier	shm		7752	0					
ANR	7839	Identifier	descriptor		7752	1					
ANR	7840	Identifier	shm_perm		7752	1					
ANR	7841	Identifier	gid		7752	1					
ANR	7842	MemberAccess	buf -> shm_perm . gid		7752	1					
ANR	7843	PtrMemberAccess	buf -> shm_perm		7752	0					
ANR	7844	Identifier	buf		7752	0					
ANR	7845	Identifier	shm_perm		7752	1					
ANR	7846	Identifier	gid		7752	1					
ANR	7847	ExpressionStatement	shm -> descriptor -> shm_perm . mode = buf -> shm_perm . mode	713:3:18754:18805	7752	7	True				
ANR	7848	AssignmentExpression	shm -> descriptor -> shm_perm . mode = buf -> shm_perm . mode		7752	0		=			
ANR	7849	MemberAccess	shm -> descriptor -> shm_perm . mode		7752	0					
ANR	7850	PtrMemberAccess	shm -> descriptor -> shm_perm		7752	0					
ANR	7851	PtrMemberAccess	shm -> descriptor		7752	0					
ANR	7852	Identifier	shm		7752	0					
ANR	7853	Identifier	descriptor		7752	1					
ANR	7854	Identifier	shm_perm		7752	1					
ANR	7855	Identifier	mode		7752	1					
ANR	7856	MemberAccess	buf -> shm_perm . mode		7752	1					
ANR	7857	PtrMemberAccess	buf -> shm_perm		7752	0					
ANR	7858	Identifier	buf		7752	0					
ANR	7859	Identifier	shm_perm		7752	1					
ANR	7860	Identifier	mode		7752	1					
ANR	7861	ReturnStatement	return 0 ;	714:3:18810:18818	7752	8	True				
ANR	7862	PrimaryExpression	0		7752	0					
ANR	7863	Label	case IPC_RMID :	716:2:18823:18836	7752	9	True				
ANR	7864	Identifier	IPC_RMID		7752	0					
ANR	7865	IfStatement	if ( shm -> descriptor -> shm_nattch < 1 )		7752	10					
ANR	7866	Condition	shm -> descriptor -> shm_nattch < 1	717:7:18845:18875	7752	0	True				
ANR	7867	RelationalExpression	shm -> descriptor -> shm_nattch < 1		7752	0		<			
ANR	7868	PtrMemberAccess	shm -> descriptor -> shm_nattch		7752	0					
ANR	7869	PtrMemberAccess	shm -> descriptor		7752	0					
ANR	7870	Identifier	shm		7752	0					
ANR	7871	Identifier	descriptor		7752	1					
ANR	7872	Identifier	shm_nattch		7752	1					
ANR	7873	PrimaryExpression	1		7752	1					
ANR	7874	CompoundStatement		21:40:479:479	7752	1					
ANR	7875	ExpressionStatement	shm -> descriptor -> shm_perm . key = - 1	718:4:18884:18918	7752	0	True				
ANR	7876	AssignmentExpression	shm -> descriptor -> shm_perm . key = - 1		7752	0		=			
ANR	7877	MemberAccess	shm -> descriptor -> shm_perm . key		7752	0					
ANR	7878	PtrMemberAccess	shm -> descriptor -> shm_perm		7752	0					
ANR	7879	PtrMemberAccess	shm -> descriptor		7752	0					
ANR	7880	Identifier	shm		7752	0					
ANR	7881	Identifier	descriptor		7752	1					
ANR	7882	Identifier	shm_perm		7752	1					
ANR	7883	Identifier	key		7752	1					
ANR	7884	UnaryOperationExpression	- 1		7752	1					
ANR	7885	UnaryOperator	-		7752	0					
ANR	7886	PrimaryExpression	1		7752	1					
ANR	7887	ReturnStatement	return 0 ;	720:3:18928:18936	7752	11	True				
ANR	7888	PrimaryExpression	0		7752	0					
ANR	7889	Label	default :	722:2:18941:18948	7752	12	True				
ANR	7890	Identifier	default		7752	0					
ANR	7891	ReturnStatement	return - 1 ;	723:3:18953:18962	7752	13	True				
ANR	7892	UnaryOperationExpression	- 1		7752	0					
ANR	7893	UnaryOperator	-		7752	0					
ANR	7894	PrimaryExpression	1		7752	1					
ANR	7895	ReturnType	TSRM_API int		7752	1					
ANR	7896	Identifier	shmctl		7752	2					
ANR	7897	ParameterList	"int key , int cmd , struct shmid_ds * buf"		7752	3					
ANR	7898	Parameter	int key	697:20:18358:18364	7752	0	True				
ANR	7899	ParameterType	int		7752	0					
ANR	7900	Identifier	key		7752	1					
ANR	7901	Parameter	int cmd	697:29:18367:18373	7752	1	True				
ANR	7902	ParameterType	int		7752	0					
ANR	7903	Identifier	cmd		7752	1					
ANR	7904	Parameter	struct shmid_ds * buf	697:38:18376:18395	7752	2	True				
ANR	7905	ParameterType	struct shmid_ds *		7752	0					
ANR	7906	Identifier	buf		7752	1					
ANR	7907	CFGEntryNode	ENTRY		7752		True				
ANR	7908	CFGExitNode	EXIT		7752		True				
ANR	7909	Symbol	shm -> descriptor -> shm_perm		7752						
ANR	7910	Symbol	* shm		7752						
ANR	7911	Symbol	shm -> descriptor -> shm_ctime		7752						
ANR	7912	Symbol	* buf		7752						
ANR	7913	Symbol	NULL		7752						
ANR	7914	Symbol	shm -> descriptor -> shm_perm . uid		7752						
ANR	7915	Symbol	buf -> shm_perm . gid		7752						
ANR	7916	Symbol	shm -> descriptor		7752						
ANR	7917	Symbol	* * shm		7752						
ANR	7918	Symbol	* shm -> descriptor		7752						
ANR	7919	Symbol	buf		7752						
ANR	7920	Symbol	shm -> descriptor -> shm_perm . mode		7752						
ANR	7921	Symbol	buf -> shm_perm . uid		7752						
ANR	7922	Symbol	shm -> segment		7752						
ANR	7923	Symbol	buf -> shm_perm		7752						
ANR	7924	Symbol	buf -> shm_perm . mode		7752						
ANR	7925	Symbol	shm -> descriptor -> shm_perm . key		7752						
ANR	7926	Symbol	shm		7752						
ANR	7927	Symbol	shm -> descriptor -> shm_nattch		7752						
ANR	7928	Symbol	cmd		7752						
ANR	7929	Symbol	time		7752						
ANR	7930	Symbol	shm -> descriptor -> shm_perm . gid		7752						
ANR	7931	Symbol	key		7752						
ANR	7932	Symbol	shm_get		7752						
ANR	7933	Function	realpath	727:0:18970:19156							
ANR	7934	FunctionDef	"realpath (char * orig_path , char * buffer)"		7933	0					
ANR	7935	CompoundStatement		728:0:19025:19156	7933	0					
ANR	7936	IdentifierDeclStatement	"int ret = GetFullPathName ( orig_path , _MAX_PATH , buffer , NULL ) ;"	729:1:19028:19089	7933	0	True				
ANR	7937	IdentifierDecl	"ret = GetFullPathName ( orig_path , _MAX_PATH , buffer , NULL )"		7933	0					
ANR	7938	IdentifierDeclType	int		7933	0					
ANR	7939	Identifier	ret		7933	1					
ANR	7940	AssignmentExpression	"ret = GetFullPathName ( orig_path , _MAX_PATH , buffer , NULL )"		7933	2		=			
ANR	7941	Identifier	ret		7933	0					
ANR	7942	CallExpression	"GetFullPathName ( orig_path , _MAX_PATH , buffer , NULL )"		7933	1					
ANR	7943	Callee	GetFullPathName		7933	0					
ANR	7944	Identifier	GetFullPathName		7933	0					
ANR	7945	ArgumentList	orig_path		7933	1					
ANR	7946	Argument	orig_path		7933	0					
ANR	7947	Identifier	orig_path		7933	0					
ANR	7948	Argument	_MAX_PATH		7933	1					
ANR	7949	Identifier	_MAX_PATH		7933	0					
ANR	7950	Argument	buffer		7933	2					
ANR	7951	Identifier	buffer		7933	0					
ANR	7952	Argument	NULL		7933	3					
ANR	7953	Identifier	NULL		7933	0					
ANR	7954	IfStatement	if ( ! ret || ret > _MAX_PATH )		7933	1					
ANR	7955	Condition	! ret || ret > _MAX_PATH	730:4:19095:19117	7933	0	True				
ANR	7956	OrExpression	! ret || ret > _MAX_PATH		7933	0		||			
ANR	7957	UnaryOperationExpression	! ret		7933	0					
ANR	7958	UnaryOperator	!		7933	0					
ANR	7959	Identifier	ret		7933	1					
ANR	7960	RelationalExpression	ret > _MAX_PATH		7933	1		>			
ANR	7961	Identifier	ret		7933	0					
ANR	7962	Identifier	_MAX_PATH		7933	1					
ANR	7963	CompoundStatement		3:29:94:94	7933	1					
ANR	7964	ReturnStatement	return NULL ;	731:2:19124:19135	7933	0	True				
ANR	7965	Identifier	NULL		7933	0					
ANR	7966	ReturnStatement	return buffer ;	733:1:19141:19154	7933	2	True				
ANR	7967	Identifier	buffer		7933	0					
ANR	7968	ReturnType	TSRM_API char *		7933	1					
ANR	7969	Identifier	realpath		7933	2					
ANR	7970	ParameterList	"char * orig_path , char * buffer"		7933	3					
ANR	7971	Parameter	char * orig_path	727:24:18994:19008	7933	0	True				
ANR	7972	ParameterType	char *		7933	0					
ANR	7973	Identifier	orig_path		7933	1					
ANR	7974	Parameter	char * buffer	727:41:19011:19022	7933	1	True				
ANR	7975	ParameterType	char *		7933	0					
ANR	7976	Identifier	buffer		7933	1					
ANR	7977	CFGEntryNode	ENTRY		7933		True				
ANR	7978	CFGExitNode	EXIT		7933		True				
ANR	7979	Symbol	_MAX_PATH		7933						
ANR	7980	Symbol	ret		7933						
ANR	7981	Symbol	orig_path		7933						
ANR	7982	Symbol	NULL		7933						
ANR	7983	Symbol	buffer		7933						
ANR	7984	Symbol	GetFullPathName		7933						
ANR	7985	Function	UnixTimeToFileTime	737:0:19174:19438							
ANR	7986	FunctionDef	"UnixTimeToFileTime (time_t t , LPFILETIME pft)"		7985	0					
ANR	7987	CompoundStatement		738:0:19260:19438	7985	0					
ANR	7988	IdentifierDeclStatement	LONGLONG ll ;	740:1:19304:19315	7985	0	True				
ANR	7989	IdentifierDecl	ll		7985	0					
ANR	7990	IdentifierDeclType	LONGLONG		7985	0					
ANR	7991	Identifier	ll		7985	1					
ANR	7992	ExpressionStatement	"ll = Int32x32To64 ( t , 10000000 ) + 116444736000000000"	742:1:19319:19370	7985	1	True				
ANR	7993	AssignmentExpression	"ll = Int32x32To64 ( t , 10000000 ) + 116444736000000000"		7985	0		=			
ANR	7994	Identifier	ll		7985	0					
ANR	7995	AdditiveExpression	"Int32x32To64 ( t , 10000000 ) + 116444736000000000"		7985	1		+			
ANR	7996	CallExpression	"Int32x32To64 ( t , 10000000 )"		7985	0					
ANR	7997	Callee	Int32x32To64		7985	0					
ANR	7998	Identifier	Int32x32To64		7985	0					
ANR	7999	ArgumentList	t		7985	1					
ANR	8000	Argument	t		7985	0					
ANR	8001	Identifier	t		7985	0					
ANR	8002	Argument	10000000		7985	1					
ANR	8003	PrimaryExpression	10000000		7985	0					
ANR	8004	PrimaryExpression	116444736000000000		7985	1					
ANR	8005	ExpressionStatement	pft -> dwLowDateTime = ( DWORD ) ll	743:1:19373:19403	7985	2	True				
ANR	8006	AssignmentExpression	pft -> dwLowDateTime = ( DWORD ) ll		7985	0		=			
ANR	8007	PtrMemberAccess	pft -> dwLowDateTime		7985	0					
ANR	8008	Identifier	pft		7985	0					
ANR	8009	Identifier	dwLowDateTime		7985	1					
ANR	8010	CastExpression	( DWORD ) ll		7985	1					
ANR	8011	CastTarget	DWORD		7985	0					
ANR	8012	Identifier	ll		7985	1					
ANR	8013	ExpressionStatement	pft -> dwHighDateTime = ll >> 32	744:1:19406:19436	7985	3	True				
ANR	8014	AssignmentExpression	pft -> dwHighDateTime = ll >> 32		7985	0		=			
ANR	8015	PtrMemberAccess	pft -> dwHighDateTime		7985	0					
ANR	8016	Identifier	pft		7985	0					
ANR	8017	Identifier	dwHighDateTime		7985	1					
ANR	8018	ShiftExpression	ll >> 32		7985	1		>>			
ANR	8019	Identifier	ll		7985	0					
ANR	8020	PrimaryExpression	32		7985	1					
ANR	8021	ReturnType	static zend_always_inline void		7985	1					
ANR	8022	Identifier	UnixTimeToFileTime		7985	2					
ANR	8023	ParameterList	"time_t t , LPFILETIME pft"		7985	3					
ANR	8024	Parameter	time_t t	737:50:19224:19231	7985	0	True				
ANR	8025	ParameterType	time_t		7985	0					
ANR	8026	Identifier	t		7985	1					
ANR	8027	Parameter	LPFILETIME pft	737:60:19234:19247	7985	1	True				
ANR	8028	ParameterType	LPFILETIME		7985	0					
ANR	8029	Identifier	pft		7985	1					
ANR	8030	CFGEntryNode	ENTRY		7985		True				
ANR	8031	CFGExitNode	EXIT		7985		True				
ANR	8032	Symbol	ll		7985						
ANR	8033	Symbol	pft -> dwLowDateTime		7985						
ANR	8034	Symbol	t		7985						
ANR	8035	Symbol	* pft		7985						
ANR	8036	Symbol	Int32x32To64		7985						
ANR	8037	Symbol	pft		7985						
ANR	8038	Symbol	pft -> dwHighDateTime		7985						
ANR	8039	Function	win32_utime	748:0:19451:20273							
ANR	8040	FunctionDef	"win32_utime (const char * filename , struct utimbuf * buf)"		8039	0					
ANR	8041	CompoundStatement		749:0:19529:20273	8039	0					
ANR	8042	IdentifierDeclStatement	"FILETIME mtime , atime ;"	750:1:19532:19553	8039	0	True				
ANR	8043	IdentifierDecl	mtime		8039	0					
ANR	8044	IdentifierDeclType	FILETIME		8039	0					
ANR	8045	Identifier	mtime		8039	1					
ANR	8046	IdentifierDecl	atime		8039	1					
ANR	8047	IdentifierDeclType	FILETIME		8039	0					
ANR	8048	Identifier	atime		8039	1					
ANR	8049	IdentifierDeclStatement	HANDLE hFile ;	751:1:19556:19568	8039	1	True				
ANR	8050	IdentifierDecl	hFile		8039	0					
ANR	8051	IdentifierDeclType	HANDLE		8039	0					
ANR	8052	Identifier	hFile		8039	1					
ANR	8053	ExpressionStatement	"hFile = CreateFile ( filename , GENERIC_WRITE , FILE_SHARE_WRITE | FILE_SHARE_READ , NULL , OPEN_ALWAYS , FILE_FLAG_BACKUP_SEMANTICS , NULL )"	753:1:19572:19707	8039	2	True				
ANR	8054	AssignmentExpression	"hFile = CreateFile ( filename , GENERIC_WRITE , FILE_SHARE_WRITE | FILE_SHARE_READ , NULL , OPEN_ALWAYS , FILE_FLAG_BACKUP_SEMANTICS , NULL )"		8039	0		=			
ANR	8055	Identifier	hFile		8039	0					
ANR	8056	CallExpression	"CreateFile ( filename , GENERIC_WRITE , FILE_SHARE_WRITE | FILE_SHARE_READ , NULL , OPEN_ALWAYS , FILE_FLAG_BACKUP_SEMANTICS , NULL )"		8039	1					
ANR	8057	Callee	CreateFile		8039	0					
ANR	8058	Identifier	CreateFile		8039	0					
ANR	8059	ArgumentList	filename		8039	1					
ANR	8060	Argument	filename		8039	0					
ANR	8061	Identifier	filename		8039	0					
ANR	8062	Argument	GENERIC_WRITE		8039	1					
ANR	8063	Identifier	GENERIC_WRITE		8039	0					
ANR	8064	Argument	FILE_SHARE_WRITE | FILE_SHARE_READ		8039	2					
ANR	8065	InclusiveOrExpression	FILE_SHARE_WRITE | FILE_SHARE_READ		8039	0		|			
ANR	8066	Identifier	FILE_SHARE_WRITE		8039	0					
ANR	8067	Identifier	FILE_SHARE_READ		8039	1					
ANR	8068	Argument	NULL		8039	3					
ANR	8069	Identifier	NULL		8039	0					
ANR	8070	Argument	OPEN_ALWAYS		8039	4					
ANR	8071	Identifier	OPEN_ALWAYS		8039	0					
ANR	8072	Argument	FILE_FLAG_BACKUP_SEMANTICS		8039	5					
ANR	8073	Identifier	FILE_FLAG_BACKUP_SEMANTICS		8039	0					
ANR	8074	Argument	NULL		8039	6					
ANR	8075	Identifier	NULL		8039	0					
ANR	8076	IfStatement	if ( GetLastError ( ) == ERROR_ALREADY_EXISTS )		8039	3					
ANR	8077	Condition	GetLastError ( ) == ERROR_ALREADY_EXISTS	758:5:19825:19862	8039	0	True				
ANR	8078	EqualityExpression	GetLastError ( ) == ERROR_ALREADY_EXISTS		8039	0		==			
ANR	8079	CallExpression	GetLastError ( )		8039	0					
ANR	8080	Callee	GetLastError		8039	0					
ANR	8081	Identifier	GetLastError		8039	0					
ANR	8082	ArgumentList			8039	1					
ANR	8083	Identifier	ERROR_ALREADY_EXISTS		8039	1					
ANR	8084	CompoundStatement		10:45:335:335	8039	1					
ANR	8085	ExpressionStatement	SetLastError ( 0 )	759:2:19869:19884	8039	0	True				
ANR	8086	CallExpression	SetLastError ( 0 )		8039	0					
ANR	8087	Callee	SetLastError		8039	0					
ANR	8088	Identifier	SetLastError		8039	0					
ANR	8089	ArgumentList	0		8039	1					
ANR	8090	Argument	0		8039	0					
ANR	8091	PrimaryExpression	0		8039	0					
ANR	8092	IfStatement	if ( hFile == INVALID_HANDLE_VALUE )		8039	4					
ANR	8093	Condition	hFile == INVALID_HANDLE_VALUE	762:6:19896:19924	8039	0	True				
ANR	8094	EqualityExpression	hFile == INVALID_HANDLE_VALUE		8039	0		==			
ANR	8095	Identifier	hFile		8039	0					
ANR	8096	Identifier	INVALID_HANDLE_VALUE		8039	1					
ANR	8097	CompoundStatement		14:38:398:398	8039	1					
ANR	8098	ReturnStatement	return - 1 ;	763:2:19932:19941	8039	0	True				
ANR	8099	UnaryOperationExpression	- 1		8039	0					
ANR	8100	UnaryOperator	-		8039	0					
ANR	8101	PrimaryExpression	1		8039	1					
ANR	8102	IfStatement	if ( ! buf )		8039	5					
ANR	8103	Condition	! buf	766:5:19952:19955	8039	0	True				
ANR	8104	UnaryOperationExpression	! buf		8039	0					
ANR	8105	UnaryOperator	!		8039	0					
ANR	8106	Identifier	buf		8039	1					
ANR	8107	CompoundStatement		19:2:432:445	8039	1					
ANR	8108	IdentifierDeclStatement	SYSTEMTIME st ;	767:2:19962:19975	8039	0	True				
ANR	8109	IdentifierDecl	st		8039	0					
ANR	8110	IdentifierDeclType	SYSTEMTIME		8039	0					
ANR	8111	Identifier	st		8039	1					
ANR	8112	ExpressionStatement	GetSystemTime ( & st )	768:2:19979:19997	8039	1	True				
ANR	8113	CallExpression	GetSystemTime ( & st )		8039	0					
ANR	8114	Callee	GetSystemTime		8039	0					
ANR	8115	Identifier	GetSystemTime		8039	0					
ANR	8116	ArgumentList	& st		8039	1					
ANR	8117	Argument	& st		8039	0					
ANR	8118	UnaryOperationExpression	& st		8039	0					
ANR	8119	UnaryOperator	&		8039	0					
ANR	8120	Identifier	st		8039	1					
ANR	8121	ExpressionStatement	"SystemTimeToFileTime ( & st , & mtime )"	769:2:20001:20034	8039	2	True				
ANR	8122	CallExpression	"SystemTimeToFileTime ( & st , & mtime )"		8039	0					
ANR	8123	Callee	SystemTimeToFileTime		8039	0					
ANR	8124	Identifier	SystemTimeToFileTime		8039	0					
ANR	8125	ArgumentList	& st		8039	1					
ANR	8126	Argument	& st		8039	0					
ANR	8127	UnaryOperationExpression	& st		8039	0					
ANR	8128	UnaryOperator	&		8039	0					
ANR	8129	Identifier	st		8039	1					
ANR	8130	Argument	& mtime		8039	1					
ANR	8131	UnaryOperationExpression	& mtime		8039	0					
ANR	8132	UnaryOperator	&		8039	0					
ANR	8133	Identifier	mtime		8039	1					
ANR	8134	ExpressionStatement	atime = mtime	770:2:20038:20051	8039	3	True				
ANR	8135	AssignmentExpression	atime = mtime		8039	0		=			
ANR	8136	Identifier	atime		8039	0					
ANR	8137	Identifier	mtime		8039	1					
ANR	8138	ElseStatement	else		8039	0					
ANR	8139	CompoundStatement		23:8:531:531	8039	0					
ANR	8140	ExpressionStatement	"UnixTimeToFileTime ( buf -> modtime , & mtime )"	772:2:20065:20105	8039	0	True				
ANR	8141	CallExpression	"UnixTimeToFileTime ( buf -> modtime , & mtime )"		8039	0					
ANR	8142	Callee	UnixTimeToFileTime		8039	0					
ANR	8143	Identifier	UnixTimeToFileTime		8039	0					
ANR	8144	ArgumentList	buf -> modtime		8039	1					
ANR	8145	Argument	buf -> modtime		8039	0					
ANR	8146	PtrMemberAccess	buf -> modtime		8039	0					
ANR	8147	Identifier	buf		8039	0					
ANR	8148	Identifier	modtime		8039	1					
ANR	8149	Argument	& mtime		8039	1					
ANR	8150	UnaryOperationExpression	& mtime		8039	0					
ANR	8151	UnaryOperator	&		8039	0					
ANR	8152	Identifier	mtime		8039	1					
ANR	8153	ExpressionStatement	"UnixTimeToFileTime ( buf -> actime , & atime )"	773:2:20109:20148	8039	1	True				
ANR	8154	CallExpression	"UnixTimeToFileTime ( buf -> actime , & atime )"		8039	0					
ANR	8155	Callee	UnixTimeToFileTime		8039	0					
ANR	8156	Identifier	UnixTimeToFileTime		8039	0					
ANR	8157	ArgumentList	buf -> actime		8039	1					
ANR	8158	Argument	buf -> actime		8039	0					
ANR	8159	PtrMemberAccess	buf -> actime		8039	0					
ANR	8160	Identifier	buf		8039	0					
ANR	8161	Identifier	actime		8039	1					
ANR	8162	Argument	& atime		8039	1					
ANR	8163	UnaryOperationExpression	& atime		8039	0					
ANR	8164	UnaryOperator	&		8039	0					
ANR	8165	Identifier	atime		8039	1					
ANR	8166	IfStatement	"if ( ! SetFileTime ( hFile , NULL , & atime , & mtime ) )"		8039	6					
ANR	8167	Condition	"! SetFileTime ( hFile , NULL , & atime , & mtime )"	775:5:20158:20198	8039	0	True				
ANR	8168	UnaryOperationExpression	"! SetFileTime ( hFile , NULL , & atime , & mtime )"		8039	0					
ANR	8169	UnaryOperator	!		8039	0					
ANR	8170	CallExpression	"SetFileTime ( hFile , NULL , & atime , & mtime )"		8039	1					
ANR	8171	Callee	SetFileTime		8039	0					
ANR	8172	Identifier	SetFileTime		8039	0					
ANR	8173	ArgumentList	hFile		8039	1					
ANR	8174	Argument	hFile		8039	0					
ANR	8175	Identifier	hFile		8039	0					
ANR	8176	Argument	NULL		8039	1					
ANR	8177	Identifier	NULL		8039	0					
ANR	8178	Argument	& atime		8039	2					
ANR	8179	UnaryOperationExpression	& atime		8039	0					
ANR	8180	UnaryOperator	&		8039	0					
ANR	8181	Identifier	atime		8039	1					
ANR	8182	Argument	& mtime		8039	3					
ANR	8183	UnaryOperationExpression	& mtime		8039	0					
ANR	8184	UnaryOperator	&		8039	0					
ANR	8185	Identifier	mtime		8039	1					
ANR	8186	CompoundStatement		27:48:671:671	8039	1					
ANR	8187	ExpressionStatement	CloseHandle ( hFile )	776:2:20205:20223	8039	0	True				
ANR	8188	CallExpression	CloseHandle ( hFile )		8039	0					
ANR	8189	Callee	CloseHandle		8039	0					
ANR	8190	Identifier	CloseHandle		8039	0					
ANR	8191	ArgumentList	hFile		8039	1					
ANR	8192	Argument	hFile		8039	0					
ANR	8193	Identifier	hFile		8039	0					
ANR	8194	ReturnStatement	return - 1 ;	777:2:20227:20236	8039	1	True				
ANR	8195	UnaryOperationExpression	- 1		8039	0					
ANR	8196	UnaryOperator	-		8039	0					
ANR	8197	PrimaryExpression	1		8039	1					
ANR	8198	ExpressionStatement	CloseHandle ( hFile )	779:1:20242:20260	8039	7	True				
ANR	8199	CallExpression	CloseHandle ( hFile )		8039	0					
ANR	8200	Callee	CloseHandle		8039	0					
ANR	8201	Identifier	CloseHandle		8039	0					
ANR	8202	ArgumentList	hFile		8039	1					
ANR	8203	Argument	hFile		8039	0					
ANR	8204	Identifier	hFile		8039	0					
ANR	8205	ReturnStatement	return 1 ;	780:1:20263:20271	8039	8	True				
ANR	8206	PrimaryExpression	1		8039	0					
ANR	8207	ReturnType	TSRM_API int		8039	1					
ANR	8208	Identifier	win32_utime		8039	2					
ANR	8209	ParameterList	"const char * filename , struct utimbuf * buf"		8039	3					
ANR	8210	Parameter	const char * filename	748:25:19476:19495	8039	0	True				
ANR	8211	ParameterType	const char *		8039	0					
ANR	8212	Identifier	filename		8039	1					
ANR	8213	Parameter	struct utimbuf * buf	748:47:19498:19516	8039	1	True				
ANR	8214	ParameterType	struct utimbuf *		8039	0					
ANR	8215	Identifier	buf		8039	1					
ANR	8216	CFGEntryNode	ENTRY		8039		True				
ANR	8217	CFGExitNode	EXIT		8039		True				
ANR	8218	Symbol	st		8039						
ANR	8219	Symbol	& atime		8039						
ANR	8220	Symbol	OPEN_ALWAYS		8039						
ANR	8221	Symbol	* buf		8039						
ANR	8222	Symbol	atime		8039						
ANR	8223	Symbol	NULL		8039						
ANR	8224	Symbol	FILE_SHARE_READ		8039						
ANR	8225	Symbol	& st		8039						
ANR	8226	Symbol	mtime		8039						
ANR	8227	Symbol	INVALID_HANDLE_VALUE		8039						
ANR	8228	Symbol	FILE_SHARE_WRITE		8039						
ANR	8229	Symbol	SetFileTime		8039						
ANR	8230	Symbol	CreateFile		8039						
ANR	8231	Symbol	buf		8039						
ANR	8232	Symbol	filename		8039						
ANR	8233	Symbol	GENERIC_WRITE		8039						
ANR	8234	Symbol	GetLastError		8039						
ANR	8235	Symbol	ERROR_ALREADY_EXISTS		8039						
ANR	8236	Symbol	FILE_FLAG_BACKUP_SEMANTICS		8039						
ANR	8237	Symbol	buf -> modtime		8039						
ANR	8238	Symbol	buf -> actime		8039						
ANR	8239	Symbol	hFile		8039						
ANR	8240	Symbol	& mtime		8039						
