command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2821086	File	data/converged/CVE-2015-8617_php-src/ext_standard_var_unserializer.c								
ANR	2821087	ClassDef	<unnamed>	31:8:1421:1509							
ANR	2821088	DeclStmt									
ANR	2821089	Decl							zval	zval * [ VAR_ENTRIES_MAX ]	data
ANR	2821090	DeclStmt									
ANR	2821091	Decl							zend_long	zend_long	used_slots
ANR	2821092	DeclStmt									
ANR	2821093	Decl							void	void *	next
ANR	2821094	DeclStmt									
ANR	2821095	Decl									var_entries
ANR	2821096	ClassDef	<unnamed>	37:8:1520:1612							
ANR	2821097	DeclStmt									
ANR	2821098	Decl							zval	zval [ VAR_ENTRIES_MAX ]	data
ANR	2821099	DeclStmt									
ANR	2821100	Decl							zend_long	zend_long	used_slots
ANR	2821101	DeclStmt									
ANR	2821102	Decl							void	void *	next
ANR	2821103	DeclStmt									
ANR	2821104	Decl									var_dtor_entries
ANR	2821105	Function	var_push	43:0:1615:2237							
ANR	2821106	FunctionDef	"var_push (php_unserialize_data_t * var_hashx , zval * rval)"		2821105	0					
ANR	2821107	CompoundStatement		44:0:1690:2237	2821105	0					
ANR	2821108	IdentifierDeclStatement	var_entries * var_hash = ( * var_hashx ) -> last ;	45:1:1693:1735	2821105	0	True				
ANR	2821109	IdentifierDecl	* var_hash = ( * var_hashx ) -> last		2821105	0					
ANR	2821110	IdentifierDeclType	var_entries *		2821105	0					
ANR	2821111	Identifier	var_hash		2821105	1					
ANR	2821112	AssignmentExpression	* var_hash = ( * var_hashx ) -> last		2821105	2		=			
ANR	2821113	Identifier	var_hash		2821105	0					
ANR	2821114	PtrMemberAccess	( * var_hashx ) -> last		2821105	1					
ANR	2821115	UnaryOperationExpression	* var_hashx		2821105	0					
ANR	2821116	UnaryOperator	*		2821105	0					
ANR	2821117	Identifier	var_hashx		2821105	1					
ANR	2821118	Identifier	last		2821105	1					
ANR	2821119	ExpressionStatement	"fprintf ( stderr , ""var_push(%ld): %d\\n"" , var_hash ? var_hash -> used_slots : - 1L , Z_TYPE_PP ( rval ) )"	47:1:1758:1848	2821105	1	True				
ANR	2821120	CallExpression	"fprintf ( stderr , ""var_push(%ld): %d\\n"" , var_hash ? var_hash -> used_slots : - 1L , Z_TYPE_PP ( rval ) )"		2821105	0					
ANR	2821121	Callee	fprintf		2821105	0					
ANR	2821122	Identifier	fprintf		2821105	0					
ANR	2821123	ArgumentList	stderr		2821105	1					
ANR	2821124	Argument	stderr		2821105	0					
ANR	2821125	Identifier	stderr		2821105	0					
ANR	2821126	Argument	"""var_push(%ld): %d\\n"""		2821105	1					
ANR	2821127	PrimaryExpression	"""var_push(%ld): %d\\n"""		2821105	0					
ANR	2821128	Argument	var_hash ? var_hash -> used_slots : - 1L		2821105	2					
ANR	2821129	ConditionalExpression	var_hash ? var_hash -> used_slots : - 1L		2821105	0					
ANR	2821130	Condition	var_hash		2821105	0					
ANR	2821131	Identifier	var_hash		2821105	0					
ANR	2821132	PtrMemberAccess	var_hash -> used_slots		2821105	1					
ANR	2821133	Identifier	var_hash		2821105	0					
ANR	2821134	Identifier	used_slots		2821105	1					
ANR	2821135	UnaryOperationExpression	- 1L		2821105	2					
ANR	2821136	UnaryOperator	-		2821105	0					
ANR	2821137	PrimaryExpression	1L		2821105	1					
ANR	2821138	Argument	Z_TYPE_PP ( rval )		2821105	3					
ANR	2821139	CallExpression	Z_TYPE_PP ( rval )		2821105	0					
ANR	2821140	Callee	Z_TYPE_PP		2821105	0					
ANR	2821141	Identifier	Z_TYPE_PP		2821105	0					
ANR	2821142	ArgumentList	rval		2821105	1					
ANR	2821143	Argument	rval		2821105	0					
ANR	2821144	Identifier	rval		2821105	0					
ANR	2821145	IfStatement	if ( ! var_hash || var_hash -> used_slots == VAR_ENTRIES_MAX )		2821105	2					
ANR	2821146	Condition	! var_hash || var_hash -> used_slots == VAR_ENTRIES_MAX	50:5:1863:1914	2821105	0	True				
ANR	2821147	OrExpression	! var_hash || var_hash -> used_slots == VAR_ENTRIES_MAX		2821105	0		||			
ANR	2821148	UnaryOperationExpression	! var_hash		2821105	0					
ANR	2821149	UnaryOperator	!		2821105	0					
ANR	2821150	Identifier	var_hash		2821105	1					
ANR	2821151	EqualityExpression	var_hash -> used_slots == VAR_ENTRIES_MAX		2821105	1		==			
ANR	2821152	PtrMemberAccess	var_hash -> used_slots		2821105	0					
ANR	2821153	Identifier	var_hash		2821105	0					
ANR	2821154	Identifier	used_slots		2821105	1					
ANR	2821155	Identifier	VAR_ENTRIES_MAX		2821105	1					
ANR	2821156	CompoundStatement		7:59:226:226	2821105	1					
ANR	2821157	ExpressionStatement	var_hash = emalloc ( sizeof ( var_entries ) )	51:2:1921:1960	2821105	0	True				
ANR	2821158	AssignmentExpression	var_hash = emalloc ( sizeof ( var_entries ) )		2821105	0		=			
ANR	2821159	Identifier	var_hash		2821105	0					
ANR	2821160	CallExpression	emalloc ( sizeof ( var_entries ) )		2821105	1					
ANR	2821161	Callee	emalloc		2821105	0					
ANR	2821162	Identifier	emalloc		2821105	0					
ANR	2821163	ArgumentList	sizeof ( var_entries )		2821105	1					
ANR	2821164	Argument	sizeof ( var_entries )		2821105	0					
ANR	2821165	SizeofExpression	sizeof ( var_entries )		2821105	0					
ANR	2821166	Sizeof	sizeof		2821105	0					
ANR	2821167	SizeofOperand	var_entries		2821105	1					
ANR	2821168	ExpressionStatement	var_hash -> used_slots = 0	52:2:1964:1988	2821105	1	True				
ANR	2821169	AssignmentExpression	var_hash -> used_slots = 0		2821105	0		=			
ANR	2821170	PtrMemberAccess	var_hash -> used_slots		2821105	0					
ANR	2821171	Identifier	var_hash		2821105	0					
ANR	2821172	Identifier	used_slots		2821105	1					
ANR	2821173	PrimaryExpression	0		2821105	1					
ANR	2821174	ExpressionStatement	var_hash -> next = 0	53:2:1992:2010	2821105	2	True				
ANR	2821175	AssignmentExpression	var_hash -> next = 0		2821105	0		=			
ANR	2821176	PtrMemberAccess	var_hash -> next		2821105	0					
ANR	2821177	Identifier	var_hash		2821105	0					
ANR	2821178	Identifier	next		2821105	1					
ANR	2821179	PrimaryExpression	0		2821105	1					
ANR	2821180	IfStatement	if ( ! ( * var_hashx ) -> first )		2821105	3					
ANR	2821181	Condition	! ( * var_hashx ) -> first	55:6:2019:2038	2821105	0	True				
ANR	2821182	UnaryOperationExpression	! ( * var_hashx ) -> first		2821105	0					
ANR	2821183	UnaryOperator	!		2821105	0					
ANR	2821184	PtrMemberAccess	( * var_hashx ) -> first		2821105	1					
ANR	2821185	UnaryOperationExpression	* var_hashx		2821105	0					
ANR	2821186	UnaryOperator	*		2821105	0					
ANR	2821187	Identifier	var_hashx		2821105	1					
ANR	2821188	Identifier	first		2821105	1					
ANR	2821189	CompoundStatement		12:28:350:350	2821105	1					
ANR	2821190	ExpressionStatement	( * var_hashx ) -> first = var_hash	56:3:2046:2076	2821105	0	True				
ANR	2821191	AssignmentExpression	( * var_hashx ) -> first = var_hash		2821105	0		=			
ANR	2821192	PtrMemberAccess	( * var_hashx ) -> first		2821105	0					
ANR	2821193	UnaryOperationExpression	* var_hashx		2821105	0					
ANR	2821194	UnaryOperator	*		2821105	0					
ANR	2821195	Identifier	var_hashx		2821105	1					
ANR	2821196	Identifier	first		2821105	1					
ANR	2821197	Identifier	var_hash		2821105	1					
ANR	2821198	ElseStatement	else		2821105	0					
ANR	2821199	CompoundStatement		14:9:396:396	2821105	0					
ANR	2821200	ExpressionStatement	( ( var_entries * ) ( * var_hashx ) -> last ) -> next = var_hash	58:3:2092:2145	2821105	0	True				
ANR	2821201	AssignmentExpression	( ( var_entries * ) ( * var_hashx ) -> last ) -> next = var_hash		2821105	0		=			
ANR	2821202	PtrMemberAccess	( ( var_entries * ) ( * var_hashx ) -> last ) -> next		2821105	0					
ANR	2821203	CastExpression	( var_entries * ) ( * var_hashx ) -> last		2821105	0					
ANR	2821204	CastTarget	var_entries *		2821105	0					
ANR	2821205	PtrMemberAccess	( * var_hashx ) -> last		2821105	1					
ANR	2821206	UnaryOperationExpression	* var_hashx		2821105	0					
ANR	2821207	UnaryOperator	*		2821105	0					
ANR	2821208	Identifier	var_hashx		2821105	1					
ANR	2821209	Identifier	last		2821105	1					
ANR	2821210	Identifier	next		2821105	1					
ANR	2821211	Identifier	var_hash		2821105	1					
ANR	2821212	ExpressionStatement	( * var_hashx ) -> last = var_hash	61:2:2154:2183	2821105	4	True				
ANR	2821213	AssignmentExpression	( * var_hashx ) -> last = var_hash		2821105	0		=			
ANR	2821214	PtrMemberAccess	( * var_hashx ) -> last		2821105	0					
ANR	2821215	UnaryOperationExpression	* var_hashx		2821105	0					
ANR	2821216	UnaryOperator	*		2821105	0					
ANR	2821217	Identifier	var_hashx		2821105	1					
ANR	2821218	Identifier	last		2821105	1					
ANR	2821219	Identifier	var_hash		2821105	1					
ANR	2821220	ExpressionStatement	var_hash -> data [ var_hash -> used_slots ++ ] = rval	64:1:2190:2235	2821105	3	True				
ANR	2821221	AssignmentExpression	var_hash -> data [ var_hash -> used_slots ++ ] = rval		2821105	0		=			
ANR	2821222	ArrayIndexing	var_hash -> data [ var_hash -> used_slots ++ ]		2821105	0					
ANR	2821223	PtrMemberAccess	var_hash -> data		2821105	0					
ANR	2821224	Identifier	var_hash		2821105	0					
ANR	2821225	Identifier	data		2821105	1					
ANR	2821226	PostIncDecOperationExpression	var_hash -> used_slots ++		2821105	1					
ANR	2821227	PtrMemberAccess	var_hash -> used_slots		2821105	0					
ANR	2821228	Identifier	var_hash		2821105	0					
ANR	2821229	Identifier	used_slots		2821105	1					
ANR	2821230	IncDec	++		2821105	1					
ANR	2821231	Identifier	rval		2821105	1					
ANR	2821232	ReturnType	static inline void		2821105	1					
ANR	2821233	Identifier	var_push		2821105	2					
ANR	2821234	ParameterList	"php_unserialize_data_t * var_hashx , zval * rval"		2821105	3					
ANR	2821235	Parameter	php_unserialize_data_t * var_hashx	43:28:1643:1675	2821105	0	True				
ANR	2821236	ParameterType	php_unserialize_data_t *		2821105	0					
ANR	2821237	Identifier	var_hashx		2821105	1					
ANR	2821238	Parameter	zval * rval	43:63:1678:1687	2821105	1	True				
ANR	2821239	ParameterType	zval *		2821105	0					
ANR	2821240	Identifier	rval		2821105	1					
ANR	2821241	CFGEntryNode	ENTRY		2821105		True				
ANR	2821242	CFGExitNode	EXIT		2821105		True				
ANR	2821243	Symbol	* * var_hash		2821105						
ANR	2821244	Symbol	( ( var_entries * ) ( * var_hashx ) -> last ) -> next		2821105						
ANR	2821245	Symbol	var_hash -> data		2821105						
ANR	2821246	Symbol	* var_hashx		2821105						
ANR	2821247	Symbol	* * var_hashx		2821105						
ANR	2821248	Symbol	* var_hash		2821105						
ANR	2821249	Symbol	var_hash -> next		2821105						
ANR	2821250	Symbol	stderr		2821105						
ANR	2821251	Symbol	( * var_hashx ) -> first		2821105						
ANR	2821252	Symbol	var_hash -> used_slots		2821105						
ANR	2821253	Symbol	Z_TYPE_PP		2821105						
ANR	2821254	Symbol	emalloc		2821105						
ANR	2821255	Symbol	* var_hash -> data		2821105						
ANR	2821256	Symbol	var_hashx		2821105						
ANR	2821257	Symbol	* ( * var_hashx ) -> last		2821105						
ANR	2821258	Symbol	* * * var_hashx		2821105						
ANR	2821259	Symbol	( * var_hashx ) -> last		2821105						
ANR	2821260	Symbol	rval		2821105						
ANR	2821261	Symbol	VAR_ENTRIES_MAX		2821105						
ANR	2821262	Symbol	var_hash		2821105						
ANR	2821263	Function	var_push_dtor	67:0:2240:2425							
ANR	2821264	FunctionDef	"var_push_dtor (php_unserialize_data_t * var_hashx , zval * rval)"		2821263	0					
ANR	2821265	CompoundStatement		68:0:2313:2425	2821263	0					
ANR	2821266	IdentifierDeclStatement	zval * tmp_var = var_tmp_var ( var_hashx ) ;	69:1:2316:2354	2821263	0	True				
ANR	2821267	IdentifierDecl	* tmp_var = var_tmp_var ( var_hashx )		2821263	0					
ANR	2821268	IdentifierDeclType	zval *		2821263	0					
ANR	2821269	Identifier	tmp_var		2821263	1					
ANR	2821270	AssignmentExpression	* tmp_var = var_tmp_var ( var_hashx )		2821263	2		=			
ANR	2821271	Identifier	tmp_var		2821263	0					
ANR	2821272	CallExpression	var_tmp_var ( var_hashx )		2821263	1					
ANR	2821273	Callee	var_tmp_var		2821263	0					
ANR	2821274	Identifier	var_tmp_var		2821263	0					
ANR	2821275	ArgumentList	var_hashx		2821263	1					
ANR	2821276	Argument	var_hashx		2821263	0					
ANR	2821277	Identifier	var_hashx		2821263	0					
ANR	2821278	IfStatement	if ( ! tmp_var )		2821263	1					
ANR	2821279	Condition	! tmp_var	70:8:2364:2371	2821263	0	True				
ANR	2821280	UnaryOperationExpression	! tmp_var		2821263	0					
ANR	2821281	UnaryOperator	!		2821263	0					
ANR	2821282	Identifier	tmp_var		2821263	1					
ANR	2821283	CompoundStatement		3:18:60:60	2821263	1					
ANR	2821284	ReturnStatement	return ;	71:8:2384:2390	2821263	0	True				
ANR	2821285	ExpressionStatement	"ZVAL_COPY ( tmp_var , rval )"	73:1:2399:2423	2821263	2	True				
ANR	2821286	CallExpression	"ZVAL_COPY ( tmp_var , rval )"		2821263	0					
ANR	2821287	Callee	ZVAL_COPY		2821263	0					
ANR	2821288	Identifier	ZVAL_COPY		2821263	0					
ANR	2821289	ArgumentList	tmp_var		2821263	1					
ANR	2821290	Argument	tmp_var		2821263	0					
ANR	2821291	Identifier	tmp_var		2821263	0					
ANR	2821292	Argument	rval		2821263	1					
ANR	2821293	Identifier	rval		2821263	0					
ANR	2821294	ReturnType	PHPAPI void		2821263	1					
ANR	2821295	Identifier	var_push_dtor		2821263	2					
ANR	2821296	ParameterList	"php_unserialize_data_t * var_hashx , zval * rval"		2821263	3					
ANR	2821297	Parameter	php_unserialize_data_t * var_hashx	67:26:2266:2298	2821263	0	True				
ANR	2821298	ParameterType	php_unserialize_data_t *		2821263	0					
ANR	2821299	Identifier	var_hashx		2821263	1					
ANR	2821300	Parameter	zval * rval	67:61:2301:2310	2821263	1	True				
ANR	2821301	ParameterType	zval *		2821263	0					
ANR	2821302	Identifier	rval		2821263	1					
ANR	2821303	CFGEntryNode	ENTRY		2821263		True				
ANR	2821304	CFGExitNode	EXIT		2821263		True				
ANR	2821305	Symbol	var_hashx		2821263						
ANR	2821306	Symbol	tmp_var		2821263						
ANR	2821307	Symbol	var_tmp_var		2821263						
ANR	2821308	Symbol	rval		2821263						
ANR	2821309	Function	var_tmp_var	76:0:2428:3161							
ANR	2821310	FunctionDef	var_tmp_var (php_unserialize_data_t * var_hashx)		2821309	0					
ANR	2821311	CompoundStatement		77:0:2488:3161	2821309	0					
ANR	2821312	IdentifierDeclStatement	var_dtor_entries * var_hash ;	78:4:2494:2520	2821309	0	True				
ANR	2821313	IdentifierDecl	* var_hash		2821309	0					
ANR	2821314	IdentifierDeclType	var_dtor_entries *		2821309	0					
ANR	2821315	Identifier	var_hash		2821309	1					
ANR	2821316	IfStatement	if ( ! var_hashx || ! * var_hashx )		2821309	1					
ANR	2821317	Condition	! var_hashx || ! * var_hashx	80:8:2531:2555	2821309	0	True				
ANR	2821318	OrExpression	! var_hashx || ! * var_hashx		2821309	0		||			
ANR	2821319	UnaryOperationExpression	! var_hashx		2821309	0					
ANR	2821320	UnaryOperator	!		2821309	0					
ANR	2821321	Identifier	var_hashx		2821309	1					
ANR	2821322	UnaryOperationExpression	! * var_hashx		2821309	1					
ANR	2821323	UnaryOperator	!		2821309	0					
ANR	2821324	UnaryOperationExpression	* var_hashx		2821309	1					
ANR	2821325	UnaryOperator	*		2821309	0					
ANR	2821326	Identifier	var_hashx		2821309	1					
ANR	2821327	CompoundStatement		4:35:69:69	2821309	1					
ANR	2821328	ReturnStatement	return NULL ;	81:8:2568:2579	2821309	0	True				
ANR	2821329	Identifier	NULL		2821309	0					
ANR	2821330	ExpressionStatement	var_hash = ( * var_hashx ) -> last_dtor	84:4:2592:2626	2821309	2	True				
ANR	2821331	AssignmentExpression	var_hash = ( * var_hashx ) -> last_dtor		2821309	0		=			
ANR	2821332	Identifier	var_hash		2821309	0					
ANR	2821333	PtrMemberAccess	( * var_hashx ) -> last_dtor		2821309	1					
ANR	2821334	UnaryOperationExpression	* var_hashx		2821309	0					
ANR	2821335	UnaryOperator	*		2821309	0					
ANR	2821336	Identifier	var_hashx		2821309	1					
ANR	2821337	Identifier	last_dtor		2821309	1					
ANR	2821338	IfStatement	if ( ! var_hash || var_hash -> used_slots == VAR_ENTRIES_MAX )		2821309	3					
ANR	2821339	Condition	! var_hash || var_hash -> used_slots == VAR_ENTRIES_MAX	85:8:2636:2687	2821309	0	True				
ANR	2821340	OrExpression	! var_hash || var_hash -> used_slots == VAR_ENTRIES_MAX		2821309	0		||			
ANR	2821341	UnaryOperationExpression	! var_hash		2821309	0					
ANR	2821342	UnaryOperator	!		2821309	0					
ANR	2821343	Identifier	var_hash		2821309	1					
ANR	2821344	EqualityExpression	var_hash -> used_slots == VAR_ENTRIES_MAX		2821309	1		==			
ANR	2821345	PtrMemberAccess	var_hash -> used_slots		2821309	0					
ANR	2821346	Identifier	var_hash		2821309	0					
ANR	2821347	Identifier	used_slots		2821309	1					
ANR	2821348	Identifier	VAR_ENTRIES_MAX		2821309	1					
ANR	2821349	CompoundStatement		9:62:201:201	2821309	1					
ANR	2821350	ExpressionStatement	var_hash = emalloc ( sizeof ( var_dtor_entries ) )	86:8:2700:2744	2821309	0	True				
ANR	2821351	AssignmentExpression	var_hash = emalloc ( sizeof ( var_dtor_entries ) )		2821309	0		=			
ANR	2821352	Identifier	var_hash		2821309	0					
ANR	2821353	CallExpression	emalloc ( sizeof ( var_dtor_entries ) )		2821309	1					
ANR	2821354	Callee	emalloc		2821309	0					
ANR	2821355	Identifier	emalloc		2821309	0					
ANR	2821356	ArgumentList	sizeof ( var_dtor_entries )		2821309	1					
ANR	2821357	Argument	sizeof ( var_dtor_entries )		2821309	0					
ANR	2821358	SizeofExpression	sizeof ( var_dtor_entries )		2821309	0					
ANR	2821359	Sizeof	sizeof		2821309	0					
ANR	2821360	SizeofOperand	var_dtor_entries		2821309	1					
ANR	2821361	ExpressionStatement	var_hash -> used_slots = 0	87:8:2754:2778	2821309	1	True				
ANR	2821362	AssignmentExpression	var_hash -> used_slots = 0		2821309	0		=			
ANR	2821363	PtrMemberAccess	var_hash -> used_slots		2821309	0					
ANR	2821364	Identifier	var_hash		2821309	0					
ANR	2821365	Identifier	used_slots		2821309	1					
ANR	2821366	PrimaryExpression	0		2821309	1					
ANR	2821367	ExpressionStatement	var_hash -> next = 0	88:8:2788:2806	2821309	2	True				
ANR	2821368	AssignmentExpression	var_hash -> next = 0		2821309	0		=			
ANR	2821369	PtrMemberAccess	var_hash -> next		2821309	0					
ANR	2821370	Identifier	var_hash		2821309	0					
ANR	2821371	Identifier	next		2821309	1					
ANR	2821372	PrimaryExpression	0		2821309	1					
ANR	2821373	IfStatement	if ( ! ( * var_hashx ) -> first_dtor )		2821309	3					
ANR	2821374	Condition	! ( * var_hashx ) -> first_dtor	90:12:2821:2845	2821309	0	True				
ANR	2821375	UnaryOperationExpression	! ( * var_hashx ) -> first_dtor		2821309	0					
ANR	2821376	UnaryOperator	!		2821309	0					
ANR	2821377	PtrMemberAccess	( * var_hashx ) -> first_dtor		2821309	1					
ANR	2821378	UnaryOperationExpression	* var_hashx		2821309	0					
ANR	2821379	UnaryOperator	*		2821309	0					
ANR	2821380	Identifier	var_hashx		2821309	1					
ANR	2821381	Identifier	first_dtor		2821309	1					
ANR	2821382	CompoundStatement		14:39:359:359	2821309	1					
ANR	2821383	ExpressionStatement	( * var_hashx ) -> first_dtor = var_hash	91:12:2862:2897	2821309	0	True				
ANR	2821384	AssignmentExpression	( * var_hashx ) -> first_dtor = var_hash		2821309	0		=			
ANR	2821385	PtrMemberAccess	( * var_hashx ) -> first_dtor		2821309	0					
ANR	2821386	UnaryOperationExpression	* var_hashx		2821309	0					
ANR	2821387	UnaryOperator	*		2821309	0					
ANR	2821388	Identifier	var_hashx		2821309	1					
ANR	2821389	Identifier	first_dtor		2821309	1					
ANR	2821390	Identifier	var_hash		2821309	1					
ANR	2821391	ElseStatement	else		2821309	0					
ANR	2821392	CompoundStatement		16:15:425:425	2821309	0					
ANR	2821393	ExpressionStatement	( ( var_dtor_entries * ) ( * var_hashx ) -> last_dtor ) -> next = var_hash	93:12:2928:2991	2821309	0	True				
ANR	2821394	AssignmentExpression	( ( var_dtor_entries * ) ( * var_hashx ) -> last_dtor ) -> next = var_hash		2821309	0		=			
ANR	2821395	PtrMemberAccess	( ( var_dtor_entries * ) ( * var_hashx ) -> last_dtor ) -> next		2821309	0					
ANR	2821396	CastExpression	( var_dtor_entries * ) ( * var_hashx ) -> last_dtor		2821309	0					
ANR	2821397	CastTarget	var_dtor_entries *		2821309	0					
ANR	2821398	PtrMemberAccess	( * var_hashx ) -> last_dtor		2821309	1					
ANR	2821399	UnaryOperationExpression	* var_hashx		2821309	0					
ANR	2821400	UnaryOperator	*		2821309	0					
ANR	2821401	Identifier	var_hashx		2821309	1					
ANR	2821402	Identifier	last_dtor		2821309	1					
ANR	2821403	Identifier	next		2821309	1					
ANR	2821404	Identifier	var_hash		2821309	1					
ANR	2821405	ExpressionStatement	( * var_hashx ) -> last_dtor = var_hash	96:8:3012:3046	2821309	4	True				
ANR	2821406	AssignmentExpression	( * var_hashx ) -> last_dtor = var_hash		2821309	0		=			
ANR	2821407	PtrMemberAccess	( * var_hashx ) -> last_dtor		2821309	0					
ANR	2821408	UnaryOperationExpression	* var_hashx		2821309	0					
ANR	2821409	UnaryOperator	*		2821309	0					
ANR	2821410	Identifier	var_hashx		2821309	1					
ANR	2821411	Identifier	last_dtor		2821309	1					
ANR	2821412	Identifier	var_hash		2821309	1					
ANR	2821413	ExpressionStatement	ZVAL_UNDEF ( & var_hash -> data [ var_hash -> used_slots ] )	98:4:3058:3107	2821309	4	True				
ANR	2821414	CallExpression	ZVAL_UNDEF ( & var_hash -> data [ var_hash -> used_slots ] )		2821309	0					
ANR	2821415	Callee	ZVAL_UNDEF		2821309	0					
ANR	2821416	Identifier	ZVAL_UNDEF		2821309	0					
ANR	2821417	ArgumentList	& var_hash -> data [ var_hash -> used_slots ]		2821309	1					
ANR	2821418	Argument	& var_hash -> data [ var_hash -> used_slots ]		2821309	0					
ANR	2821419	UnaryOperationExpression	& var_hash -> data [ var_hash -> used_slots ]		2821309	0					
ANR	2821420	UnaryOperator	&		2821309	0					
ANR	2821421	ArrayIndexing	var_hash -> data [ var_hash -> used_slots ]		2821309	1					
ANR	2821422	PtrMemberAccess	var_hash -> data		2821309	0					
ANR	2821423	Identifier	var_hash		2821309	0					
ANR	2821424	Identifier	data		2821309	1					
ANR	2821425	PtrMemberAccess	var_hash -> used_slots		2821309	1					
ANR	2821426	Identifier	var_hash		2821309	0					
ANR	2821427	Identifier	used_slots		2821309	1					
ANR	2821428	ReturnStatement	return & var_hash -> data [ var_hash -> used_slots ++ ] ;	99:4:3113:3159	2821309	5	True				
ANR	2821429	UnaryOperationExpression	& var_hash -> data [ var_hash -> used_slots ++ ]		2821309	0					
ANR	2821430	UnaryOperator	&		2821309	0					
ANR	2821431	ArrayIndexing	var_hash -> data [ var_hash -> used_slots ++ ]		2821309	1					
ANR	2821432	PtrMemberAccess	var_hash -> data		2821309	0					
ANR	2821433	Identifier	var_hash		2821309	0					
ANR	2821434	Identifier	data		2821309	1					
ANR	2821435	PostIncDecOperationExpression	var_hash -> used_slots ++		2821309	1					
ANR	2821436	PtrMemberAccess	var_hash -> used_slots		2821309	0					
ANR	2821437	Identifier	var_hash		2821309	0					
ANR	2821438	Identifier	used_slots		2821309	1					
ANR	2821439	IncDec	++		2821309	1					
ANR	2821440	ReturnType	PHPAPI zval *		2821309	1					
ANR	2821441	Identifier	var_tmp_var		2821309	2					
ANR	2821442	ParameterList	php_unserialize_data_t * var_hashx		2821309	3					
ANR	2821443	Parameter	php_unserialize_data_t * var_hashx	76:25:2453:2485	2821309	0	True				
ANR	2821444	ParameterType	php_unserialize_data_t *		2821309	0					
ANR	2821445	Identifier	var_hashx		2821309	1					
ANR	2821446	CFGEntryNode	ENTRY		2821309		True				
ANR	2821447	CFGExitNode	EXIT		2821309		True				
ANR	2821448	Symbol	( * var_hashx ) -> last_dtor		2821309						
ANR	2821449	Symbol	NULL		2821309						
ANR	2821450	Symbol	var_hash -> data		2821309						
ANR	2821451	Symbol	* var_hashx		2821309						
ANR	2821452	Symbol	* ( * var_hashx ) -> last_dtor		2821309						
ANR	2821453	Symbol	* * var_hashx		2821309						
ANR	2821454	Symbol	* var_hash		2821309						
ANR	2821455	Symbol	var_hash -> next		2821309						
ANR	2821456	Symbol	var_hash -> used_slots		2821309						
ANR	2821457	Symbol	( ( var_dtor_entries * ) ( * var_hashx ) -> last_dtor ) -> next		2821309						
ANR	2821458	Symbol	emalloc		2821309						
ANR	2821459	Symbol	var_hashx		2821309						
ANR	2821460	Symbol	( * var_hashx ) -> first_dtor		2821309						
ANR	2821461	Symbol	* * * var_hashx		2821309						
ANR	2821462	Symbol	VAR_ENTRIES_MAX		2821309						
ANR	2821463	Symbol	var_hash		2821309						
ANR	2821464	Function	var_replace	102:0:3164:3640							
ANR	2821465	FunctionDef	"var_replace (php_unserialize_data_t * var_hashx , zval * ozval , zval * nzval)"		2821464	0					
ANR	2821466	CompoundStatement		103:0:3249:3640	2821464	0					
ANR	2821467	IdentifierDeclStatement	zend_long i ;	104:1:3252:3263	2821464	0	True				
ANR	2821468	IdentifierDecl	i		2821464	0					
ANR	2821469	IdentifierDeclType	zend_long		2821464	0					
ANR	2821470	Identifier	i		2821464	1					
ANR	2821471	IdentifierDeclStatement	var_entries * var_hash = ( * var_hashx ) -> first ;	105:1:3266:3309	2821464	1	True				
ANR	2821472	IdentifierDecl	* var_hash = ( * var_hashx ) -> first		2821464	0					
ANR	2821473	IdentifierDeclType	var_entries *		2821464	0					
ANR	2821474	Identifier	var_hash		2821464	1					
ANR	2821475	AssignmentExpression	* var_hash = ( * var_hashx ) -> first		2821464	2		=			
ANR	2821476	Identifier	var_hash		2821464	0					
ANR	2821477	PtrMemberAccess	( * var_hashx ) -> first		2821464	1					
ANR	2821478	UnaryOperationExpression	* var_hashx		2821464	0					
ANR	2821479	UnaryOperator	*		2821464	0					
ANR	2821480	Identifier	var_hashx		2821464	1					
ANR	2821481	Identifier	first		2821464	1					
ANR	2821482	ExpressionStatement	"fprintf ( stderr , ""var_replace(%ld): %d\\n"" , var_hash ? var_hash -> used_slots : - 1L , Z_TYPE_PP ( nzval ) )"	107:1:3332:3426	2821464	2	True				
ANR	2821483	CallExpression	"fprintf ( stderr , ""var_replace(%ld): %d\\n"" , var_hash ? var_hash -> used_slots : - 1L , Z_TYPE_PP ( nzval ) )"		2821464	0					
ANR	2821484	Callee	fprintf		2821464	0					
ANR	2821485	Identifier	fprintf		2821464	0					
ANR	2821486	ArgumentList	stderr		2821464	1					
ANR	2821487	Argument	stderr		2821464	0					
ANR	2821488	Identifier	stderr		2821464	0					
ANR	2821489	Argument	"""var_replace(%ld): %d\\n"""		2821464	1					
ANR	2821490	PrimaryExpression	"""var_replace(%ld): %d\\n"""		2821464	0					
ANR	2821491	Argument	var_hash ? var_hash -> used_slots : - 1L		2821464	2					
ANR	2821492	ConditionalExpression	var_hash ? var_hash -> used_slots : - 1L		2821464	0					
ANR	2821493	Condition	var_hash		2821464	0					
ANR	2821494	Identifier	var_hash		2821464	0					
ANR	2821495	PtrMemberAccess	var_hash -> used_slots		2821464	1					
ANR	2821496	Identifier	var_hash		2821464	0					
ANR	2821497	Identifier	used_slots		2821464	1					
ANR	2821498	UnaryOperationExpression	- 1L		2821464	2					
ANR	2821499	UnaryOperator	-		2821464	0					
ANR	2821500	PrimaryExpression	1L		2821464	1					
ANR	2821501	Argument	Z_TYPE_PP ( nzval )		2821464	3					
ANR	2821502	CallExpression	Z_TYPE_PP ( nzval )		2821464	0					
ANR	2821503	Callee	Z_TYPE_PP		2821464	0					
ANR	2821504	Identifier	Z_TYPE_PP		2821464	0					
ANR	2821505	ArgumentList	nzval		2821464	1					
ANR	2821506	Argument	nzval		2821464	0					
ANR	2821507	Identifier	nzval		2821464	0					
ANR	2821508	WhileStatement	while ( var_hash )		2821464	3					
ANR	2821509	Condition	var_hash	110:8:3444:3451	2821464	0	True				
ANR	2821510	Identifier	var_hash		2821464	0					
ANR	2821511	CompoundStatement		8:18:204:204	2821464	1					
ANR	2821512	ForStatement	for ( i = 0 ; i < var_hash -> used_slots ; i ++ )		2821464	0					
ANR	2821513	ForInit	i = 0 ;	111:7:3463:3468	2821464	0	True				
ANR	2821514	AssignmentExpression	i = 0		2821464	0		=			
ANR	2821515	Identifier	i		2821464	0					
ANR	2821516	PrimaryExpression	0		2821464	1					
ANR	2821517	Condition	i < var_hash -> used_slots	111:14:3470:3493	2821464	1	True				
ANR	2821518	RelationalExpression	i < var_hash -> used_slots		2821464	0		<			
ANR	2821519	Identifier	i		2821464	0					
ANR	2821520	PtrMemberAccess	var_hash -> used_slots		2821464	1					
ANR	2821521	Identifier	var_hash		2821464	0					
ANR	2821522	Identifier	used_slots		2821464	1					
ANR	2821523	PostIncDecOperationExpression	i ++	111:40:3496:3498	2821464	2	True				
ANR	2821524	Identifier	i		2821464	0					
ANR	2821525	IncDec	++		2821464	1					
ANR	2821526	CompoundStatement		9:45:251:251	2821464	3					
ANR	2821527	IfStatement	if ( var_hash -> data [ i ] == ozval )		2821464	0					
ANR	2821528	Condition	var_hash -> data [ i ] == ozval	112:7:3510:3535	2821464	0	True				
ANR	2821529	EqualityExpression	var_hash -> data [ i ] == ozval		2821464	0		==			
ANR	2821530	ArrayIndexing	var_hash -> data [ i ]		2821464	0					
ANR	2821531	PtrMemberAccess	var_hash -> data		2821464	0					
ANR	2821532	Identifier	var_hash		2821464	0					
ANR	2821533	Identifier	data		2821464	1					
ANR	2821534	Identifier	i		2821464	1					
ANR	2821535	Identifier	ozval		2821464	1					
ANR	2821536	CompoundStatement		10:35:288:288	2821464	1					
ANR	2821537	ExpressionStatement	var_hash -> data [ i ] = nzval	113:4:3544:3569	2821464	0	True				
ANR	2821538	AssignmentExpression	var_hash -> data [ i ] = nzval		2821464	0		=			
ANR	2821539	ArrayIndexing	var_hash -> data [ i ]		2821464	0					
ANR	2821540	PtrMemberAccess	var_hash -> data		2821464	0					
ANR	2821541	Identifier	var_hash		2821464	0					
ANR	2821542	Identifier	data		2821464	1					
ANR	2821543	Identifier	i		2821464	1					
ANR	2821544	Identifier	nzval		2821464	1					
ANR	2821545	ExpressionStatement	var_hash = var_hash -> next	117:2:3610:3635	2821464	1	True				
ANR	2821546	AssignmentExpression	var_hash = var_hash -> next		2821464	0		=			
ANR	2821547	Identifier	var_hash		2821464	0					
ANR	2821548	PtrMemberAccess	var_hash -> next		2821464	1					
ANR	2821549	Identifier	var_hash		2821464	0					
ANR	2821550	Identifier	next		2821464	1					
ANR	2821551	ReturnType	PHPAPI void		2821464	1					
ANR	2821552	Identifier	var_replace		2821464	2					
ANR	2821553	ParameterList	"php_unserialize_data_t * var_hashx , zval * ozval , zval * nzval"		2821464	3					
ANR	2821554	Parameter	php_unserialize_data_t * var_hashx	102:24:3188:3220	2821464	0	True				
ANR	2821555	ParameterType	php_unserialize_data_t *		2821464	0					
ANR	2821556	Identifier	var_hashx		2821464	1					
ANR	2821557	Parameter	zval * ozval	102:59:3223:3233	2821464	1	True				
ANR	2821558	ParameterType	zval *		2821464	0					
ANR	2821559	Identifier	ozval		2821464	1					
ANR	2821560	Parameter	zval * nzval	102:72:3236:3246	2821464	2	True				
ANR	2821561	ParameterType	zval *		2821464	0					
ANR	2821562	Identifier	nzval		2821464	1					
ANR	2821563	CFGEntryNode	ENTRY		2821464		True				
ANR	2821564	CFGExitNode	EXIT		2821464		True				
ANR	2821565	Symbol	* * var_hash		2821464						
ANR	2821566	Symbol	ozval		2821464						
ANR	2821567	Symbol	var_hash -> data		2821464						
ANR	2821568	Symbol	* var_hashx		2821464						
ANR	2821569	Symbol	* * var_hashx		2821464						
ANR	2821570	Symbol	i		2821464						
ANR	2821571	Symbol	* var_hash		2821464						
ANR	2821572	Symbol	var_hash -> next		2821464						
ANR	2821573	Symbol	( * var_hashx ) -> first		2821464						
ANR	2821574	Symbol	stderr		2821464						
ANR	2821575	Symbol	var_hash -> used_slots		2821464						
ANR	2821576	Symbol	Z_TYPE_PP		2821464						
ANR	2821577	Symbol	nzval		2821464						
ANR	2821578	Symbol	* var_hash -> data		2821464						
ANR	2821579	Symbol	* i		2821464						
ANR	2821580	Symbol	var_hashx		2821464						
ANR	2821581	Symbol	var_hash		2821464						
ANR	2821582	Function	var_access	121:0:3643:4136							
ANR	2821583	FunctionDef	"var_access (php_unserialize_data_t * var_hashx , zend_long id)"		2821582	0					
ANR	2821584	CompoundStatement		122:0:3716:4136	2821582	0					
ANR	2821585	IdentifierDeclStatement	var_entries * var_hash = ( * var_hashx ) -> first ;	123:1:3719:3762	2821582	0	True				
ANR	2821586	IdentifierDecl	* var_hash = ( * var_hashx ) -> first		2821582	0					
ANR	2821587	IdentifierDeclType	var_entries *		2821582	0					
ANR	2821588	Identifier	var_hash		2821582	1					
ANR	2821589	AssignmentExpression	* var_hash = ( * var_hashx ) -> first		2821582	2		=			
ANR	2821590	Identifier	var_hash		2821582	0					
ANR	2821591	PtrMemberAccess	( * var_hashx ) -> first		2821582	1					
ANR	2821592	UnaryOperationExpression	* var_hashx		2821582	0					
ANR	2821593	UnaryOperator	*		2821582	0					
ANR	2821594	Identifier	var_hashx		2821582	1					
ANR	2821595	Identifier	first		2821582	1					
ANR	2821596	ExpressionStatement	"fprintf ( stderr , ""var_access(%ld): %ld\\n"" , var_hash ? var_hash -> used_slots : - 1L , id )"	125:1:3785:3865	2821582	1	True				
ANR	2821597	CallExpression	"fprintf ( stderr , ""var_access(%ld): %ld\\n"" , var_hash ? var_hash -> used_slots : - 1L , id )"		2821582	0					
ANR	2821598	Callee	fprintf		2821582	0					
ANR	2821599	Identifier	fprintf		2821582	0					
ANR	2821600	ArgumentList	stderr		2821582	1					
ANR	2821601	Argument	stderr		2821582	0					
ANR	2821602	Identifier	stderr		2821582	0					
ANR	2821603	Argument	"""var_access(%ld): %ld\\n"""		2821582	1					
ANR	2821604	PrimaryExpression	"""var_access(%ld): %ld\\n"""		2821582	0					
ANR	2821605	Argument	var_hash ? var_hash -> used_slots : - 1L		2821582	2					
ANR	2821606	ConditionalExpression	var_hash ? var_hash -> used_slots : - 1L		2821582	0					
ANR	2821607	Condition	var_hash		2821582	0					
ANR	2821608	Identifier	var_hash		2821582	0					
ANR	2821609	PtrMemberAccess	var_hash -> used_slots		2821582	1					
ANR	2821610	Identifier	var_hash		2821582	0					
ANR	2821611	Identifier	used_slots		2821582	1					
ANR	2821612	UnaryOperationExpression	- 1L		2821582	2					
ANR	2821613	UnaryOperator	-		2821582	0					
ANR	2821614	PrimaryExpression	1L		2821582	1					
ANR	2821615	Argument	id		2821582	3					
ANR	2821616	Identifier	id		2821582	0					
ANR	2821617	WhileStatement	while ( id >= VAR_ENTRIES_MAX && var_hash && var_hash -> used_slots == VAR_ENTRIES_MAX )		2821582	2					
ANR	2821618	Condition	id >= VAR_ENTRIES_MAX && var_hash && var_hash -> used_slots == VAR_ENTRIES_MAX	128:8:3883:3958	2821582	0	True				
ANR	2821619	AndExpression	id >= VAR_ENTRIES_MAX && var_hash && var_hash -> used_slots == VAR_ENTRIES_MAX		2821582	0		&&			
ANR	2821620	RelationalExpression	id >= VAR_ENTRIES_MAX		2821582	0		>=			
ANR	2821621	Identifier	id		2821582	0					
ANR	2821622	Identifier	VAR_ENTRIES_MAX		2821582	1					
ANR	2821623	AndExpression	var_hash && var_hash -> used_slots == VAR_ENTRIES_MAX		2821582	1		&&			
ANR	2821624	Identifier	var_hash		2821582	0					
ANR	2821625	EqualityExpression	var_hash -> used_slots == VAR_ENTRIES_MAX		2821582	1		==			
ANR	2821626	PtrMemberAccess	var_hash -> used_slots		2821582	0					
ANR	2821627	Identifier	var_hash		2821582	0					
ANR	2821628	Identifier	used_slots		2821582	1					
ANR	2821629	Identifier	VAR_ENTRIES_MAX		2821582	1					
ANR	2821630	CompoundStatement		7:86:244:244	2821582	1					
ANR	2821631	ExpressionStatement	var_hash = var_hash -> next	129:2:3965:3990	2821582	0	True				
ANR	2821632	AssignmentExpression	var_hash = var_hash -> next		2821582	0		=			
ANR	2821633	Identifier	var_hash		2821582	0					
ANR	2821634	PtrMemberAccess	var_hash -> next		2821582	1					
ANR	2821635	Identifier	var_hash		2821582	0					
ANR	2821636	Identifier	next		2821582	1					
ANR	2821637	ExpressionStatement	id -= VAR_ENTRIES_MAX	130:2:3994:4015	2821582	1	True				
ANR	2821638	AssignmentExpression	id -= VAR_ENTRIES_MAX		2821582	0		-=			
ANR	2821639	Identifier	id		2821582	0					
ANR	2821640	Identifier	VAR_ENTRIES_MAX		2821582	1					
ANR	2821641	IfStatement	if ( ! var_hash )		2821582	3					
ANR	2821642	Condition	! var_hash	133:5:4026:4034	2821582	0	True				
ANR	2821643	UnaryOperationExpression	! var_hash		2821582	0					
ANR	2821644	UnaryOperator	!		2821582	0					
ANR	2821645	Identifier	var_hash		2821582	1					
ANR	2821646	ReturnStatement	return NULL ;	133:16:4037:4048	2821582	1	True				
ANR	2821647	Identifier	NULL		2821582	0					
ANR	2821648	IfStatement	if ( id < 0 || id >= var_hash -> used_slots )		2821582	4					
ANR	2821649	Condition	id < 0 || id >= var_hash -> used_slots	135:5:4056:4091	2821582	0	True				
ANR	2821650	OrExpression	id < 0 || id >= var_hash -> used_slots		2821582	0		||			
ANR	2821651	RelationalExpression	id < 0		2821582	0		<			
ANR	2821652	Identifier	id		2821582	0					
ANR	2821653	PrimaryExpression	0		2821582	1					
ANR	2821654	RelationalExpression	id >= var_hash -> used_slots		2821582	1		>=			
ANR	2821655	Identifier	id		2821582	0					
ANR	2821656	PtrMemberAccess	var_hash -> used_slots		2821582	1					
ANR	2821657	Identifier	var_hash		2821582	0					
ANR	2821658	Identifier	used_slots		2821582	1					
ANR	2821659	ReturnStatement	return NULL ;	135:43:4094:4105	2821582	1	True				
ANR	2821660	Identifier	NULL		2821582	0					
ANR	2821661	ReturnStatement	return var_hash -> data [ id ] ;	137:1:4109:4134	2821582	5	True				
ANR	2821662	ArrayIndexing	var_hash -> data [ id ]		2821582	0					
ANR	2821663	PtrMemberAccess	var_hash -> data		2821582	0					
ANR	2821664	Identifier	var_hash		2821582	0					
ANR	2821665	Identifier	data		2821582	1					
ANR	2821666	Identifier	id		2821582	1					
ANR	2821667	ReturnType	static zval *		2821582	1					
ANR	2821668	Identifier	var_access		2821582	2					
ANR	2821669	ParameterList	"php_unserialize_data_t * var_hashx , zend_long id"		2821582	3					
ANR	2821670	Parameter	php_unserialize_data_t * var_hashx	121:24:3667:3699	2821582	0	True				
ANR	2821671	ParameterType	php_unserialize_data_t *		2821582	0					
ANR	2821672	Identifier	var_hashx		2821582	1					
ANR	2821673	Parameter	zend_long id	121:59:3702:3713	2821582	1	True				
ANR	2821674	ParameterType	zend_long		2821582	0					
ANR	2821675	Identifier	id		2821582	1					
ANR	2821676	CFGEntryNode	ENTRY		2821582		True				
ANR	2821677	CFGExitNode	EXIT		2821582		True				
ANR	2821678	Symbol	* id		2821582						
ANR	2821679	Symbol	* * var_hash		2821582						
ANR	2821680	Symbol	NULL		2821582						
ANR	2821681	Symbol	var_hash -> data		2821582						
ANR	2821682	Symbol	* var_hashx		2821582						
ANR	2821683	Symbol	* * var_hashx		2821582						
ANR	2821684	Symbol	* var_hash		2821582						
ANR	2821685	Symbol	var_hash -> next		2821582						
ANR	2821686	Symbol	( * var_hashx ) -> first		2821582						
ANR	2821687	Symbol	stderr		2821582						
ANR	2821688	Symbol	var_hash -> used_slots		2821582						
ANR	2821689	Symbol	* var_hash -> data		2821582						
ANR	2821690	Symbol	var_hashx		2821582						
ANR	2821691	Symbol	VAR_ENTRIES_MAX		2821582						
ANR	2821692	Symbol	id		2821582						
ANR	2821693	Symbol	var_hash		2821582						
ANR	2821694	Function	var_destroy	140:0:4139:4926							
ANR	2821695	FunctionDef	var_destroy (php_unserialize_data_t * var_hashx)		2821694	0					
ANR	2821696	CompoundStatement		141:0:4198:4926	2821694	0					
ANR	2821697	IdentifierDeclStatement	void * next ;	142:1:4201:4211	2821694	0	True				
ANR	2821698	IdentifierDecl	* next		2821694	0					
ANR	2821699	IdentifierDeclType	void *		2821694	0					
ANR	2821700	Identifier	next		2821694	1					
ANR	2821701	IdentifierDeclStatement	zend_long i ;	143:1:4214:4225	2821694	1	True				
ANR	2821702	IdentifierDecl	i		2821694	0					
ANR	2821703	IdentifierDeclType	zend_long		2821694	0					
ANR	2821704	Identifier	i		2821694	1					
ANR	2821705	IdentifierDeclStatement	var_entries * var_hash = ( * var_hashx ) -> first ;	144:1:4228:4271	2821694	2	True				
ANR	2821706	IdentifierDecl	* var_hash = ( * var_hashx ) -> first		2821694	0					
ANR	2821707	IdentifierDeclType	var_entries *		2821694	0					
ANR	2821708	Identifier	var_hash		2821694	1					
ANR	2821709	AssignmentExpression	* var_hash = ( * var_hashx ) -> first		2821694	2		=			
ANR	2821710	Identifier	var_hash		2821694	0					
ANR	2821711	PtrMemberAccess	( * var_hashx ) -> first		2821694	1					
ANR	2821712	UnaryOperationExpression	* var_hashx		2821694	0					
ANR	2821713	UnaryOperator	*		2821694	0					
ANR	2821714	Identifier	var_hashx		2821694	1					
ANR	2821715	Identifier	first		2821694	1					
ANR	2821716	IdentifierDeclStatement	var_dtor_entries * var_dtor_hash = ( * var_hashx ) -> first_dtor ;	145:1:4274:4332	2821694	3	True				
ANR	2821717	IdentifierDecl	* var_dtor_hash = ( * var_hashx ) -> first_dtor		2821694	0					
ANR	2821718	IdentifierDeclType	var_dtor_entries *		2821694	0					
ANR	2821719	Identifier	var_dtor_hash		2821694	1					
ANR	2821720	AssignmentExpression	* var_dtor_hash = ( * var_hashx ) -> first_dtor		2821694	2		=			
ANR	2821721	Identifier	var_dtor_hash		2821694	0					
ANR	2821722	PtrMemberAccess	( * var_hashx ) -> first_dtor		2821694	1					
ANR	2821723	UnaryOperationExpression	* var_hashx		2821694	0					
ANR	2821724	UnaryOperator	*		2821694	0					
ANR	2821725	Identifier	var_hashx		2821694	1					
ANR	2821726	Identifier	first_dtor		2821694	1					
ANR	2821727	ExpressionStatement	"fprintf ( stderr , ""var_destroy(%ld)\\n"" , var_hash ? var_hash -> used_slots : - 1L )"	147:1:4355:4427	2821694	4	True				
ANR	2821728	CallExpression	"fprintf ( stderr , ""var_destroy(%ld)\\n"" , var_hash ? var_hash -> used_slots : - 1L )"		2821694	0					
ANR	2821729	Callee	fprintf		2821694	0					
ANR	2821730	Identifier	fprintf		2821694	0					
ANR	2821731	ArgumentList	stderr		2821694	1					
ANR	2821732	Argument	stderr		2821694	0					
ANR	2821733	Identifier	stderr		2821694	0					
ANR	2821734	Argument	"""var_destroy(%ld)\\n"""		2821694	1					
ANR	2821735	PrimaryExpression	"""var_destroy(%ld)\\n"""		2821694	0					
ANR	2821736	Argument	var_hash ? var_hash -> used_slots : - 1L		2821694	2					
ANR	2821737	ConditionalExpression	var_hash ? var_hash -> used_slots : - 1L		2821694	0					
ANR	2821738	Condition	var_hash		2821694	0					
ANR	2821739	Identifier	var_hash		2821694	0					
ANR	2821740	PtrMemberAccess	var_hash -> used_slots		2821694	1					
ANR	2821741	Identifier	var_hash		2821694	0					
ANR	2821742	Identifier	used_slots		2821694	1					
ANR	2821743	UnaryOperationExpression	- 1L		2821694	2					
ANR	2821744	UnaryOperator	-		2821694	0					
ANR	2821745	PrimaryExpression	1L		2821694	1					
ANR	2821746	WhileStatement	while ( var_hash )		2821694	5					
ANR	2821747	Condition	var_hash	150:8:4445:4452	2821694	0	True				
ANR	2821748	Identifier	var_hash		2821694	0					
ANR	2821749	CompoundStatement		10:18:256:256	2821694	1					
ANR	2821750	ExpressionStatement	next = var_hash -> next	151:2:4459:4480	2821694	0	True				
ANR	2821751	AssignmentExpression	next = var_hash -> next		2821694	0		=			
ANR	2821752	Identifier	next		2821694	0					
ANR	2821753	PtrMemberAccess	var_hash -> next		2821694	1					
ANR	2821754	Identifier	var_hash		2821694	0					
ANR	2821755	Identifier	next		2821694	1					
ANR	2821756	ExpressionStatement	"efree_size ( var_hash , sizeof ( var_entries ) )"	152:2:4484:4525	2821694	1	True				
ANR	2821757	CallExpression	"efree_size ( var_hash , sizeof ( var_entries ) )"		2821694	0					
ANR	2821758	Callee	efree_size		2821694	0					
ANR	2821759	Identifier	efree_size		2821694	0					
ANR	2821760	ArgumentList	var_hash		2821694	1					
ANR	2821761	Argument	var_hash		2821694	0					
ANR	2821762	Identifier	var_hash		2821694	0					
ANR	2821763	Argument	sizeof ( var_entries )		2821694	1					
ANR	2821764	SizeofExpression	sizeof ( var_entries )		2821694	0					
ANR	2821765	Sizeof	sizeof		2821694	0					
ANR	2821766	SizeofOperand	var_entries		2821694	1					
ANR	2821767	ExpressionStatement	var_hash = next	153:2:4529:4544	2821694	2	True				
ANR	2821768	AssignmentExpression	var_hash = next		2821694	0		=			
ANR	2821769	Identifier	var_hash		2821694	0					
ANR	2821770	Identifier	next		2821694	1					
ANR	2821771	WhileStatement	while ( var_dtor_hash )		2821694	6					
ANR	2821772	Condition	var_dtor_hash	156:8:4558:4570	2821694	0	True				
ANR	2821773	Identifier	var_dtor_hash		2821694	0					
ANR	2821774	CompoundStatement		16:23:374:374	2821694	1					
ANR	2821775	ForStatement	for ( i = 0 ; i < var_dtor_hash -> used_slots ; i ++ )		2821694	0					
ANR	2821776	ForInit	i = 0 ;	157:7:4582:4587	2821694	0	True				
ANR	2821777	AssignmentExpression	i = 0		2821694	0		=			
ANR	2821778	Identifier	i		2821694	0					
ANR	2821779	PrimaryExpression	0		2821694	1					
ANR	2821780	Condition	i < var_dtor_hash -> used_slots	157:14:4589:4617	2821694	1	True				
ANR	2821781	RelationalExpression	i < var_dtor_hash -> used_slots		2821694	0		<			
ANR	2821782	Identifier	i		2821694	0					
ANR	2821783	PtrMemberAccess	var_dtor_hash -> used_slots		2821694	1					
ANR	2821784	Identifier	var_dtor_hash		2821694	0					
ANR	2821785	Identifier	used_slots		2821694	1					
ANR	2821786	PostIncDecOperationExpression	i ++	157:45:4620:4622	2821694	2	True				
ANR	2821787	Identifier	i		2821694	0					
ANR	2821788	IncDec	++		2821694	1					
ANR	2821789	CompoundStatement		17:50:426:426	2821694	3					
ANR	2821790	ExpressionStatement	"fprintf ( stderr , ""var_destroy dtor(%p, %ld)\\n"" , var_dtor_hash -> data [ i ] , Z_REFCOUNT_P ( var_dtor_hash -> data [ i ] ) )"	159:3:4650:4758	2821694	0	True				
ANR	2821791	CallExpression	"fprintf ( stderr , ""var_destroy dtor(%p, %ld)\\n"" , var_dtor_hash -> data [ i ] , Z_REFCOUNT_P ( var_dtor_hash -> data [ i ] ) )"		2821694	0					
ANR	2821792	Callee	fprintf		2821694	0					
ANR	2821793	Identifier	fprintf		2821694	0					
ANR	2821794	ArgumentList	stderr		2821694	1					
ANR	2821795	Argument	stderr		2821694	0					
ANR	2821796	Identifier	stderr		2821694	0					
ANR	2821797	Argument	"""var_destroy dtor(%p, %ld)\\n"""		2821694	1					
ANR	2821798	PrimaryExpression	"""var_destroy dtor(%p, %ld)\\n"""		2821694	0					
ANR	2821799	Argument	var_dtor_hash -> data [ i ]		2821694	2					
ANR	2821800	ArrayIndexing	var_dtor_hash -> data [ i ]		2821694	0					
ANR	2821801	PtrMemberAccess	var_dtor_hash -> data		2821694	0					
ANR	2821802	Identifier	var_dtor_hash		2821694	0					
ANR	2821803	Identifier	data		2821694	1					
ANR	2821804	Identifier	i		2821694	1					
ANR	2821805	Argument	Z_REFCOUNT_P ( var_dtor_hash -> data [ i ] )		2821694	3					
ANR	2821806	CallExpression	Z_REFCOUNT_P ( var_dtor_hash -> data [ i ] )		2821694	0					
ANR	2821807	Callee	Z_REFCOUNT_P		2821694	0					
ANR	2821808	Identifier	Z_REFCOUNT_P		2821694	0					
ANR	2821809	ArgumentList	var_dtor_hash -> data [ i ]		2821694	1					
ANR	2821810	Argument	var_dtor_hash -> data [ i ]		2821694	0					
ANR	2821811	ArrayIndexing	var_dtor_hash -> data [ i ]		2821694	0					
ANR	2821812	PtrMemberAccess	var_dtor_hash -> data		2821694	0					
ANR	2821813	Identifier	var_dtor_hash		2821694	0					
ANR	2821814	Identifier	data		2821694	1					
ANR	2821815	Identifier	i		2821694	1					
ANR	2821816	ExpressionStatement	zval_ptr_dtor ( & var_dtor_hash -> data [ i ] )	161:3:4770:4808	2821694	1	True				
ANR	2821817	CallExpression	zval_ptr_dtor ( & var_dtor_hash -> data [ i ] )		2821694	0					
ANR	2821818	Callee	zval_ptr_dtor		2821694	0					
ANR	2821819	Identifier	zval_ptr_dtor		2821694	0					
ANR	2821820	ArgumentList	& var_dtor_hash -> data [ i ]		2821694	1					
ANR	2821821	Argument	& var_dtor_hash -> data [ i ]		2821694	0					
ANR	2821822	UnaryOperationExpression	& var_dtor_hash -> data [ i ]		2821694	0					
ANR	2821823	UnaryOperator	&		2821694	0					
ANR	2821824	ArrayIndexing	var_dtor_hash -> data [ i ]		2821694	1					
ANR	2821825	PtrMemberAccess	var_dtor_hash -> data		2821694	0					
ANR	2821826	Identifier	var_dtor_hash		2821694	0					
ANR	2821827	Identifier	data		2821694	1					
ANR	2821828	Identifier	i		2821694	1					
ANR	2821829	ExpressionStatement	next = var_dtor_hash -> next	163:2:4816:4842	2821694	1	True				
ANR	2821830	AssignmentExpression	next = var_dtor_hash -> next		2821694	0		=			
ANR	2821831	Identifier	next		2821694	0					
ANR	2821832	PtrMemberAccess	var_dtor_hash -> next		2821694	1					
ANR	2821833	Identifier	var_dtor_hash		2821694	0					
ANR	2821834	Identifier	next		2821694	1					
ANR	2821835	ExpressionStatement	"efree_size ( var_dtor_hash , sizeof ( var_dtor_entries ) )"	164:2:4846:4897	2821694	2	True				
ANR	2821836	CallExpression	"efree_size ( var_dtor_hash , sizeof ( var_dtor_entries ) )"		2821694	0					
ANR	2821837	Callee	efree_size		2821694	0					
ANR	2821838	Identifier	efree_size		2821694	0					
ANR	2821839	ArgumentList	var_dtor_hash		2821694	1					
ANR	2821840	Argument	var_dtor_hash		2821694	0					
ANR	2821841	Identifier	var_dtor_hash		2821694	0					
ANR	2821842	Argument	sizeof ( var_dtor_entries )		2821694	1					
ANR	2821843	SizeofExpression	sizeof ( var_dtor_entries )		2821694	0					
ANR	2821844	Sizeof	sizeof		2821694	0					
ANR	2821845	SizeofOperand	var_dtor_entries		2821694	1					
ANR	2821846	ExpressionStatement	var_dtor_hash = next	165:2:4901:4921	2821694	3	True				
ANR	2821847	AssignmentExpression	var_dtor_hash = next		2821694	0		=			
ANR	2821848	Identifier	var_dtor_hash		2821694	0					
ANR	2821849	Identifier	next		2821694	1					
ANR	2821850	ReturnType	PHPAPI void		2821694	1					
ANR	2821851	Identifier	var_destroy		2821694	2					
ANR	2821852	ParameterList	php_unserialize_data_t * var_hashx		2821694	3					
ANR	2821853	Parameter	php_unserialize_data_t * var_hashx	140:24:4163:4195	2821694	0	True				
ANR	2821854	ParameterType	php_unserialize_data_t *		2821694	0					
ANR	2821855	Identifier	var_hashx		2821694	1					
ANR	2821856	CFGEntryNode	ENTRY		2821694		True				
ANR	2821857	CFGExitNode	EXIT		2821694		True				
ANR	2821858	Symbol	next		2821694						
ANR	2821859	Symbol	* var_dtor_hash -> data		2821694						
ANR	2821860	Symbol	* var_hashx		2821694						
ANR	2821861	Symbol	var_dtor_hash -> used_slots		2821694						
ANR	2821862	Symbol	* * var_hashx		2821694						
ANR	2821863	Symbol	i		2821694						
ANR	2821864	Symbol	* var_hash		2821694						
ANR	2821865	Symbol	var_hash -> next		2821694						
ANR	2821866	Symbol	var_dtor_hash -> next		2821694						
ANR	2821867	Symbol	( * var_hashx ) -> first		2821694						
ANR	2821868	Symbol	stderr		2821694						
ANR	2821869	Symbol	var_hash -> used_slots		2821694						
ANR	2821870	Symbol	Z_REFCOUNT_P		2821694						
ANR	2821871	Symbol	var_dtor_hash -> data		2821694						
ANR	2821872	Symbol	* i		2821694						
ANR	2821873	Symbol	var_hashx		2821694						
ANR	2821874	Symbol	( * var_hashx ) -> first_dtor		2821694						
ANR	2821875	Symbol	var_dtor_hash		2821694						
ANR	2821876	Symbol	var_hash		2821694						
ANR	2821877	Symbol	* var_dtor_hash		2821694						
ANR	2821878	Symbol	* * var_dtor_hash		2821694						
ANR	2821879	Function	unserialize_str	171:0:4940:5835							
ANR	2821880	FunctionDef	"unserialize_str (const unsigned char * * p , size_t len , size_t maxlen)"		2821879	0					
ANR	2821881	CompoundStatement		172:0:5028:5835	2821879	0					
ANR	2821882	IdentifierDeclStatement	"size_t i , j ;"	173:1:5031:5042	2821879	0	True				
ANR	2821883	IdentifierDecl	i		2821879	0					
ANR	2821884	IdentifierDeclType	size_t		2821879	0					
ANR	2821885	Identifier	i		2821879	1					
ANR	2821886	IdentifierDecl	j		2821879	1					
ANR	2821887	IdentifierDeclType	size_t		2821879	0					
ANR	2821888	Identifier	j		2821879	1					
ANR	2821889	IdentifierDeclStatement	"zend_string * str = zend_string_alloc ( len , 0 ) ;"	174:1:5045:5089	2821879	1	True				
ANR	2821890	IdentifierDecl	"* str = zend_string_alloc ( len , 0 )"		2821879	0					
ANR	2821891	IdentifierDeclType	zend_string *		2821879	0					
ANR	2821892	Identifier	str		2821879	1					
ANR	2821893	AssignmentExpression	"* str = zend_string_alloc ( len , 0 )"		2821879	2		=			
ANR	2821894	Identifier	str		2821879	0					
ANR	2821895	CallExpression	"zend_string_alloc ( len , 0 )"		2821879	1					
ANR	2821896	Callee	zend_string_alloc		2821879	0					
ANR	2821897	Identifier	zend_string_alloc		2821879	0					
ANR	2821898	ArgumentList	len		2821879	1					
ANR	2821899	Argument	len		2821879	0					
ANR	2821900	Identifier	len		2821879	0					
ANR	2821901	Argument	0		2821879	1					
ANR	2821902	PrimaryExpression	0		2821879	0					
ANR	2821903	IdentifierDeclStatement	unsigned char * end = * ( unsigned char * * ) p + maxlen ;	175:1:5092:5140	2821879	2	True				
ANR	2821904	IdentifierDecl	* end = * ( unsigned char * * ) p + maxlen		2821879	0					
ANR	2821905	IdentifierDeclType	unsigned char *		2821879	0					
ANR	2821906	Identifier	end		2821879	1					
ANR	2821907	AssignmentExpression	* end = * ( unsigned char * * ) p + maxlen		2821879	2		=			
ANR	2821908	Identifier	end		2821879	0					
ANR	2821909	AdditiveExpression	* ( unsigned char * * ) p + maxlen		2821879	1		+			
ANR	2821910	UnaryOperationExpression	* ( unsigned char * * ) p		2821879	0					
ANR	2821911	UnaryOperator	*		2821879	0					
ANR	2821912	CastExpression	( unsigned char * * ) p		2821879	1					
ANR	2821913	CastTarget	unsigned char * *		2821879	0					
ANR	2821914	Identifier	p		2821879	1					
ANR	2821915	Identifier	maxlen		2821879	1					
ANR	2821916	IfStatement	if ( end < * p )		2821879	3					
ANR	2821917	Condition	end < * p	177:5:5148:5155	2821879	0	True				
ANR	2821918	RelationalExpression	end < * p		2821879	0		<			
ANR	2821919	Identifier	end		2821879	0					
ANR	2821920	UnaryOperationExpression	* p		2821879	1					
ANR	2821921	UnaryOperator	*		2821879	0					
ANR	2821922	Identifier	p		2821879	1					
ANR	2821923	CompoundStatement		6:15:129:129	2821879	1					
ANR	2821924	ExpressionStatement	zend_string_free ( str )	178:2:5162:5183	2821879	0	True				
ANR	2821925	CallExpression	zend_string_free ( str )		2821879	0					
ANR	2821926	Callee	zend_string_free		2821879	0					
ANR	2821927	Identifier	zend_string_free		2821879	0					
ANR	2821928	ArgumentList	str		2821879	1					
ANR	2821929	Argument	str		2821879	0					
ANR	2821930	Identifier	str		2821879	0					
ANR	2821931	ReturnStatement	return NULL ;	179:2:5187:5198	2821879	1	True				
ANR	2821932	Identifier	NULL		2821879	0					
ANR	2821933	ForStatement	for ( i = 0 ; i < len ; i ++ )		2821879	4					
ANR	2821934	ForInit	i = 0 ;	182:6:5210:5215	2821879	0	True				
ANR	2821935	AssignmentExpression	i = 0		2821879	0		=			
ANR	2821936	Identifier	i		2821879	0					
ANR	2821937	PrimaryExpression	0		2821879	1					
ANR	2821938	Condition	i < len	182:13:5217:5223	2821879	1	True				
ANR	2821939	RelationalExpression	i < len		2821879	0		<			
ANR	2821940	Identifier	i		2821879	0					
ANR	2821941	Identifier	len		2821879	1					
ANR	2821942	PostIncDecOperationExpression	i ++	182:22:5226:5228	2821879	2	True				
ANR	2821943	Identifier	i		2821879	0					
ANR	2821944	IncDec	++		2821879	1					
ANR	2821945	CompoundStatement		11:27:202:202	2821879	3					
ANR	2821946	IfStatement	if ( * p >= end )		2821879	0					
ANR	2821947	Condition	* p >= end	183:6:5239:5247	2821879	0	True				
ANR	2821948	RelationalExpression	* p >= end		2821879	0		>=			
ANR	2821949	UnaryOperationExpression	* p		2821879	0					
ANR	2821950	UnaryOperator	*		2821879	0					
ANR	2821951	Identifier	p		2821879	1					
ANR	2821952	Identifier	end		2821879	1					
ANR	2821953	CompoundStatement		12:17:221:221	2821879	1					
ANR	2821954	ExpressionStatement	zend_string_free ( str )	184:3:5255:5276	2821879	0	True				
ANR	2821955	CallExpression	zend_string_free ( str )		2821879	0					
ANR	2821956	Callee	zend_string_free		2821879	0					
ANR	2821957	Identifier	zend_string_free		2821879	0					
ANR	2821958	ArgumentList	str		2821879	1					
ANR	2821959	Argument	str		2821879	0					
ANR	2821960	Identifier	str		2821879	0					
ANR	2821961	ReturnStatement	return NULL ;	185:3:5281:5292	2821879	1	True				
ANR	2821962	Identifier	NULL		2821879	0					
ANR	2821963	IfStatement	if ( * * p != '\\\\' )		2821879	1					
ANR	2821964	Condition	* * p != '\\\\'	187:6:5304:5314	2821879	0	True				
ANR	2821965	EqualityExpression	* * p != '\\\\'		2821879	0		!=			
ANR	2821966	UnaryOperationExpression	* * p		2821879	0					
ANR	2821967	UnaryOperator	*		2821879	0					
ANR	2821968	UnaryOperationExpression	* p		2821879	1					
ANR	2821969	UnaryOperator	*		2821879	0					
ANR	2821970	Identifier	p		2821879	1					
ANR	2821971	PrimaryExpression	'\\\\'		2821879	1					
ANR	2821972	CompoundStatement		16:19:288:288	2821879	1					
ANR	2821973	ExpressionStatement	ZSTR_VAL ( str ) [ i ] = ( char ) * * p	188:3:5322:5350	2821879	0	True				
ANR	2821974	AssignmentExpression	ZSTR_VAL ( str ) [ i ] = ( char ) * * p		2821879	0		=			
ANR	2821975	ArrayIndexing	ZSTR_VAL ( str ) [ i ]		2821879	0					
ANR	2821976	CallExpression	ZSTR_VAL ( str )		2821879	0					
ANR	2821977	Callee	ZSTR_VAL		2821879	0					
ANR	2821978	Identifier	ZSTR_VAL		2821879	0					
ANR	2821979	ArgumentList	str		2821879	1					
ANR	2821980	Argument	str		2821879	0					
ANR	2821981	Identifier	str		2821879	0					
ANR	2821982	Identifier	i		2821879	1					
ANR	2821983	CastExpression	( char ) * * p		2821879	1					
ANR	2821984	CastTarget	char		2821879	0					
ANR	2821985	UnaryOperationExpression	* * p		2821879	1					
ANR	2821986	UnaryOperator	*		2821879	0					
ANR	2821987	UnaryOperationExpression	* p		2821879	1					
ANR	2821988	UnaryOperator	*		2821879	0					
ANR	2821989	Identifier	p		2821879	1					
ANR	2821990	ElseStatement	else		2821879	0					
ANR	2821991	CompoundStatement		19:3:337:357	2821879	0					
ANR	2821992	IdentifierDeclStatement	unsigned char ch = 0 ;	190:3:5366:5386	2821879	0	True				
ANR	2821993	IdentifierDecl	ch = 0		2821879	0					
ANR	2821994	IdentifierDeclType	unsigned char		2821879	0					
ANR	2821995	Identifier	ch		2821879	1					
ANR	2821996	AssignmentExpression	ch = 0		2821879	2		=			
ANR	2821997	Identifier	ch		2821879	0					
ANR	2821998	PrimaryExpression	0		2821879	1					
ANR	2821999	ForStatement	for ( j = 0 ; j < 2 ; j ++ )		2821879	1					
ANR	2822000	ForInit	j = 0 ;	192:8:5397:5402	2821879	0	True				
ANR	2822001	AssignmentExpression	j = 0		2821879	0		=			
ANR	2822002	Identifier	j		2821879	0					
ANR	2822003	PrimaryExpression	0		2821879	1					
ANR	2822004	Condition	j < 2	192:15:5404:5408	2821879	1	True				
ANR	2822005	RelationalExpression	j < 2		2821879	0		<			
ANR	2822006	Identifier	j		2821879	0					
ANR	2822007	PrimaryExpression	2		2821879	1					
ANR	2822008	PostIncDecOperationExpression	j ++	192:22:5411:5413	2821879	2	True				
ANR	2822009	Identifier	j		2821879	0					
ANR	2822010	IncDec	++		2821879	1					
ANR	2822011	CompoundStatement		21:27:387:387	2821879	3					
ANR	2822012	ExpressionStatement	( * p ) ++	193:4:5422:5428	2821879	0	True				
ANR	2822013	PostIncDecOperationExpression	( * p ) ++		2821879	0					
ANR	2822014	UnaryOperationExpression	* p		2821879	0					
ANR	2822015	UnaryOperator	*		2821879	0					
ANR	2822016	Identifier	p		2821879	1					
ANR	2822017	IncDec	++		2821879	1					
ANR	2822018	IfStatement	if ( * * p >= '0' && * * p <= '9' )		2821879	1					
ANR	2822019	Condition	* * p >= '0' && * * p <= '9'	194:8:5438:5461	2821879	0	True				
ANR	2822020	AndExpression	* * p >= '0' && * * p <= '9'		2821879	0		&&			
ANR	2822021	RelationalExpression	* * p >= '0'		2821879	0		>=			
ANR	2822022	UnaryOperationExpression	* * p		2821879	0					
ANR	2822023	UnaryOperator	*		2821879	0					
ANR	2822024	UnaryOperationExpression	* p		2821879	1					
ANR	2822025	UnaryOperator	*		2821879	0					
ANR	2822026	Identifier	p		2821879	1					
ANR	2822027	PrimaryExpression	'0'		2821879	1					
ANR	2822028	RelationalExpression	* * p <= '9'		2821879	1		<=			
ANR	2822029	UnaryOperationExpression	* * p		2821879	0					
ANR	2822030	UnaryOperator	*		2821879	0					
ANR	2822031	UnaryOperationExpression	* p		2821879	1					
ANR	2822032	UnaryOperator	*		2821879	0					
ANR	2822033	Identifier	p		2821879	1					
ANR	2822034	PrimaryExpression	'9'		2821879	1					
ANR	2822035	CompoundStatement		23:34:435:435	2821879	1					
ANR	2822036	ExpressionStatement	ch = ( ch << 4 ) + ( * * p - '0' )	195:5:5471:5498	2821879	0	True				
ANR	2822037	AssignmentExpression	ch = ( ch << 4 ) + ( * * p - '0' )		2821879	0		=			
ANR	2822038	Identifier	ch		2821879	0					
ANR	2822039	AdditiveExpression	( ch << 4 ) + ( * * p - '0' )		2821879	1		+			
ANR	2822040	ShiftExpression	ch << 4		2821879	0		<<			
ANR	2822041	Identifier	ch		2821879	0					
ANR	2822042	PrimaryExpression	4		2821879	1					
ANR	2822043	AdditiveExpression	* * p - '0'		2821879	1		-			
ANR	2822044	UnaryOperationExpression	* * p		2821879	0					
ANR	2822045	UnaryOperator	*		2821879	0					
ANR	2822046	UnaryOperationExpression	* p		2821879	1					
ANR	2822047	UnaryOperator	*		2821879	0					
ANR	2822048	Identifier	p		2821879	1					
ANR	2822049	PrimaryExpression	'0'		2821879	1					
ANR	2822050	ElseStatement	else		2821879	0					
ANR	2822051	IfStatement	if ( * * p >= 'a' && * * p <= 'f' )		2821879	0					
ANR	2822052	Condition	* * p >= 'a' && * * p <= 'f'	196:15:5515:5538	2821879	0	True				
ANR	2822053	AndExpression	* * p >= 'a' && * * p <= 'f'		2821879	0		&&			
ANR	2822054	RelationalExpression	* * p >= 'a'		2821879	0		>=			
ANR	2822055	UnaryOperationExpression	* * p		2821879	0					
ANR	2822056	UnaryOperator	*		2821879	0					
ANR	2822057	UnaryOperationExpression	* p		2821879	1					
ANR	2822058	UnaryOperator	*		2821879	0					
ANR	2822059	Identifier	p		2821879	1					
ANR	2822060	PrimaryExpression	'a'		2821879	1					
ANR	2822061	RelationalExpression	* * p <= 'f'		2821879	1		<=			
ANR	2822062	UnaryOperationExpression	* * p		2821879	0					
ANR	2822063	UnaryOperator	*		2821879	0					
ANR	2822064	UnaryOperationExpression	* p		2821879	1					
ANR	2822065	UnaryOperator	*		2821879	0					
ANR	2822066	Identifier	p		2821879	1					
ANR	2822067	PrimaryExpression	'f'		2821879	1					
ANR	2822068	CompoundStatement		25:41:512:512	2821879	1					
ANR	2822069	ExpressionStatement	ch = ( ch << 4 ) + ( * * p - 'a' + 10 )	197:5:5548:5578	2821879	0	True				
ANR	2822070	AssignmentExpression	ch = ( ch << 4 ) + ( * * p - 'a' + 10 )		2821879	0		=			
ANR	2822071	Identifier	ch		2821879	0					
ANR	2822072	AdditiveExpression	( ch << 4 ) + ( * * p - 'a' + 10 )		2821879	1		+			
ANR	2822073	ShiftExpression	ch << 4		2821879	0		<<			
ANR	2822074	Identifier	ch		2821879	0					
ANR	2822075	PrimaryExpression	4		2821879	1					
ANR	2822076	AdditiveExpression	* * p - 'a' + 10		2821879	1		-			
ANR	2822077	UnaryOperationExpression	* * p		2821879	0					
ANR	2822078	UnaryOperator	*		2821879	0					
ANR	2822079	UnaryOperationExpression	* p		2821879	1					
ANR	2822080	UnaryOperator	*		2821879	0					
ANR	2822081	Identifier	p		2821879	1					
ANR	2822082	AdditiveExpression	'a' + 10		2821879	1		+			
ANR	2822083	PrimaryExpression	'a'		2821879	0					
ANR	2822084	PrimaryExpression	10		2821879	1					
ANR	2822085	ElseStatement	else		2821879	0					
ANR	2822086	IfStatement	if ( * * p >= 'A' && * * p <= 'F' )		2821879	0					
ANR	2822087	Condition	* * p >= 'A' && * * p <= 'F'	198:15:5595:5618	2821879	0	True				
ANR	2822088	AndExpression	* * p >= 'A' && * * p <= 'F'		2821879	0		&&			
ANR	2822089	RelationalExpression	* * p >= 'A'		2821879	0		>=			
ANR	2822090	UnaryOperationExpression	* * p		2821879	0					
ANR	2822091	UnaryOperator	*		2821879	0					
ANR	2822092	UnaryOperationExpression	* p		2821879	1					
ANR	2822093	UnaryOperator	*		2821879	0					
ANR	2822094	Identifier	p		2821879	1					
ANR	2822095	PrimaryExpression	'A'		2821879	1					
ANR	2822096	RelationalExpression	* * p <= 'F'		2821879	1		<=			
ANR	2822097	UnaryOperationExpression	* * p		2821879	0					
ANR	2822098	UnaryOperator	*		2821879	0					
ANR	2822099	UnaryOperationExpression	* p		2821879	1					
ANR	2822100	UnaryOperator	*		2821879	0					
ANR	2822101	Identifier	p		2821879	1					
ANR	2822102	PrimaryExpression	'F'		2821879	1					
ANR	2822103	CompoundStatement		27:41:592:592	2821879	1					
ANR	2822104	ExpressionStatement	ch = ( ch << 4 ) + ( * * p - 'A' + 10 )	199:5:5628:5658	2821879	0	True				
ANR	2822105	AssignmentExpression	ch = ( ch << 4 ) + ( * * p - 'A' + 10 )		2821879	0		=			
ANR	2822106	Identifier	ch		2821879	0					
ANR	2822107	AdditiveExpression	( ch << 4 ) + ( * * p - 'A' + 10 )		2821879	1		+			
ANR	2822108	ShiftExpression	ch << 4		2821879	0		<<			
ANR	2822109	Identifier	ch		2821879	0					
ANR	2822110	PrimaryExpression	4		2821879	1					
ANR	2822111	AdditiveExpression	* * p - 'A' + 10		2821879	1		-			
ANR	2822112	UnaryOperationExpression	* * p		2821879	0					
ANR	2822113	UnaryOperator	*		2821879	0					
ANR	2822114	UnaryOperationExpression	* p		2821879	1					
ANR	2822115	UnaryOperator	*		2821879	0					
ANR	2822116	Identifier	p		2821879	1					
ANR	2822117	AdditiveExpression	'A' + 10		2821879	1		+			
ANR	2822118	PrimaryExpression	'A'		2821879	0					
ANR	2822119	PrimaryExpression	10		2821879	1					
ANR	2822120	ElseStatement	else		2821879	0					
ANR	2822121	CompoundStatement		29:11:642:642	2821879	0					
ANR	2822122	ExpressionStatement	zend_string_free ( str )	201:5:5678:5699	2821879	0	True				
ANR	2822123	CallExpression	zend_string_free ( str )		2821879	0					
ANR	2822124	Callee	zend_string_free		2821879	0					
ANR	2822125	Identifier	zend_string_free		2821879	0					
ANR	2822126	ArgumentList	str		2821879	1					
ANR	2822127	Argument	str		2821879	0					
ANR	2822128	Identifier	str		2821879	0					
ANR	2822129	ReturnStatement	return NULL ;	202:5:5706:5717	2821879	1	True				
ANR	2822130	Identifier	NULL		2821879	0					
ANR	2822131	ExpressionStatement	ZSTR_VAL ( str ) [ i ] = ( char ) ch	205:3:5733:5760	2821879	2	True				
ANR	2822132	AssignmentExpression	ZSTR_VAL ( str ) [ i ] = ( char ) ch		2821879	0		=			
ANR	2822133	ArrayIndexing	ZSTR_VAL ( str ) [ i ]		2821879	0					
ANR	2822134	CallExpression	ZSTR_VAL ( str )		2821879	0					
ANR	2822135	Callee	ZSTR_VAL		2821879	0					
ANR	2822136	Identifier	ZSTR_VAL		2821879	0					
ANR	2822137	ArgumentList	str		2821879	1					
ANR	2822138	Argument	str		2821879	0					
ANR	2822139	Identifier	str		2821879	0					
ANR	2822140	Identifier	i		2821879	1					
ANR	2822141	CastExpression	( char ) ch		2821879	1					
ANR	2822142	CastTarget	char		2821879	0					
ANR	2822143	Identifier	ch		2821879	1					
ANR	2822144	ExpressionStatement	( * p ) ++	207:2:5768:5774	2821879	2	True				
ANR	2822145	PostIncDecOperationExpression	( * p ) ++		2821879	0					
ANR	2822146	UnaryOperationExpression	* p		2821879	0					
ANR	2822147	UnaryOperator	*		2821879	0					
ANR	2822148	Identifier	p		2821879	1					
ANR	2822149	IncDec	++		2821879	1					
ANR	2822150	ExpressionStatement	ZSTR_VAL ( str ) [ i ] = 0	209:1:5780:5800	2821879	5	True				
ANR	2822151	AssignmentExpression	ZSTR_VAL ( str ) [ i ] = 0		2821879	0		=			
ANR	2822152	ArrayIndexing	ZSTR_VAL ( str ) [ i ]		2821879	0					
ANR	2822153	CallExpression	ZSTR_VAL ( str )		2821879	0					
ANR	2822154	Callee	ZSTR_VAL		2821879	0					
ANR	2822155	Identifier	ZSTR_VAL		2821879	0					
ANR	2822156	ArgumentList	str		2821879	1					
ANR	2822157	Argument	str		2821879	0					
ANR	2822158	Identifier	str		2821879	0					
ANR	2822159	Identifier	i		2821879	1					
ANR	2822160	PrimaryExpression	0		2821879	1					
ANR	2822161	ExpressionStatement	ZSTR_LEN ( str ) = i	210:1:5803:5820	2821879	6	True				
ANR	2822162	AssignmentExpression	ZSTR_LEN ( str ) = i		2821879	0		=			
ANR	2822163	CallExpression	ZSTR_LEN ( str )		2821879	0					
ANR	2822164	Callee	ZSTR_LEN		2821879	0					
ANR	2822165	Identifier	ZSTR_LEN		2821879	0					
ANR	2822166	ArgumentList	str		2821879	1					
ANR	2822167	Argument	str		2821879	0					
ANR	2822168	Identifier	str		2821879	0					
ANR	2822169	Identifier	i		2821879	1					
ANR	2822170	ReturnStatement	return str ;	211:1:5823:5833	2821879	7	True				
ANR	2822171	Identifier	str		2821879	0					
ANR	2822172	ReturnType	static zend_string *		2821879	1					
ANR	2822173	Identifier	unserialize_str		2821879	2					
ANR	2822174	ParameterList	"const unsigned char * * p , size_t len , size_t maxlen"		2821879	3					
ANR	2822175	Parameter	const unsigned char * * p	171:36:4976:4998	2821879	0	True				
ANR	2822176	ParameterType	const unsigned char * *		2821879	0					
ANR	2822177	Identifier	p		2821879	1					
ANR	2822178	Parameter	size_t len	171:61:5001:5010	2821879	1	True				
ANR	2822179	ParameterType	size_t		2821879	0					
ANR	2822180	Identifier	len		2821879	1					
ANR	2822181	Parameter	size_t maxlen	171:73:5013:5025	2821879	2	True				
ANR	2822182	ParameterType	size_t		2821879	0					
ANR	2822183	Identifier	maxlen		2821879	1					
ANR	2822184	CFGEntryNode	ENTRY		2821879		True				
ANR	2822185	CFGExitNode	EXIT		2821879		True				
ANR	2822186	Symbol	zend_string_alloc		2821879						
ANR	2822187	Symbol	NULL		2821879						
ANR	2822188	Symbol	ch		2821879						
ANR	2822189	Symbol	i		2821879						
ANR	2822190	Symbol	j		2821879						
ANR	2822191	Symbol	ZSTR_VAL		2821879						
ANR	2822192	Symbol	p		2821879						
ANR	2822193	Symbol	str		2821879						
ANR	2822194	Symbol	* ( unsigned char * * ) p		2821879						
ANR	2822195	Symbol	* i		2821879						
ANR	2822196	Symbol	len		2821879						
ANR	2822197	Symbol	ZSTR_LEN		2821879						
ANR	2822198	Symbol	end		2821879						
ANR	2822199	Symbol	* p		2821879						
ANR	2822200	Symbol	* * p		2821879						
ANR	2822201	Symbol	maxlen		2821879						
ANR	2822202	Symbol	* ZSTR_VAL		2821879						
ANR	2822203	Function	unserialize_allowed_class	214:0:5838:6317							
ANR	2822204	FunctionDef	"unserialize_allowed_class (zend_string * class_name , HashTable * classes)"		2822203	0					
ANR	2822205	CompoundStatement		215:0:5927:6317	2822203	0					
ANR	2822206	IdentifierDeclStatement	zend_string * lcname ;	216:1:5930:5949	2822203	0	True				
ANR	2822207	IdentifierDecl	* lcname		2822203	0					
ANR	2822208	IdentifierDeclType	zend_string *		2822203	0					
ANR	2822209	Identifier	lcname		2822203	1					
ANR	2822210	IdentifierDeclStatement	int res ;	217:1:5952:5959	2822203	1	True				
ANR	2822211	IdentifierDecl	res		2822203	0					
ANR	2822212	IdentifierDeclType	int		2822203	0					
ANR	2822213	Identifier	res		2822203	1					
ANR	2822214	Statement	ALLOCA_FLAG	218:1:5962:5972	2822203	2	True				
ANR	2822215	Statement	(	218:12:5973:5973	2822203	3	True				
ANR	2822216	Statement	use_heap	218:13:5974:5981	2822203	4	True				
ANR	2822217	Statement	)	218:21:5982:5982	2822203	5	True				
ANR	2822218	IfStatement	if ( classes == NULL )		2822203	6					
ANR	2822219	Condition	classes == NULL	220:4:5989:6003	2822203	0	True				
ANR	2822220	EqualityExpression	classes == NULL		2822203	0		==			
ANR	2822221	Identifier	classes		2822203	0					
ANR	2822222	Identifier	NULL		2822203	1					
ANR	2822223	CompoundStatement		6:21:78:78	2822203	1					
ANR	2822224	ReturnStatement	return 1 ;	221:2:6010:6018	2822203	0	True				
ANR	2822225	PrimaryExpression	1		2822203	0					
ANR	2822226	IfStatement	if ( ! zend_hash_num_elements ( classes ) )		2822203	7					
ANR	2822227	Condition	! zend_hash_num_elements ( classes )	223:4:6027:6058	2822203	0	True				
ANR	2822228	UnaryOperationExpression	! zend_hash_num_elements ( classes )		2822203	0					
ANR	2822229	UnaryOperator	!		2822203	0					
ANR	2822230	CallExpression	zend_hash_num_elements ( classes )		2822203	1					
ANR	2822231	Callee	zend_hash_num_elements		2822203	0					
ANR	2822232	Identifier	zend_hash_num_elements		2822203	0					
ANR	2822233	ArgumentList	classes		2822203	1					
ANR	2822234	Argument	classes		2822203	0					
ANR	2822235	Identifier	classes		2822203	0					
ANR	2822236	CompoundStatement		9:38:133:133	2822203	1					
ANR	2822237	ReturnStatement	return 0 ;	224:2:6065:6073	2822203	0	True				
ANR	2822238	PrimaryExpression	0		2822203	0					
ANR	2822239	ExpressionStatement	"ZSTR_ALLOCA_ALLOC ( lcname , ZSTR_LEN ( class_name ) , use_heap )"	227:1:6080:6137	2822203	8	True				
ANR	2822240	CallExpression	"ZSTR_ALLOCA_ALLOC ( lcname , ZSTR_LEN ( class_name ) , use_heap )"		2822203	0					
ANR	2822241	Callee	ZSTR_ALLOCA_ALLOC		2822203	0					
ANR	2822242	Identifier	ZSTR_ALLOCA_ALLOC		2822203	0					
ANR	2822243	ArgumentList	lcname		2822203	1					
ANR	2822244	Argument	lcname		2822203	0					
ANR	2822245	Identifier	lcname		2822203	0					
ANR	2822246	Argument	ZSTR_LEN ( class_name )		2822203	1					
ANR	2822247	CallExpression	ZSTR_LEN ( class_name )		2822203	0					
ANR	2822248	Callee	ZSTR_LEN		2822203	0					
ANR	2822249	Identifier	ZSTR_LEN		2822203	0					
ANR	2822250	ArgumentList	class_name		2822203	1					
ANR	2822251	Argument	class_name		2822203	0					
ANR	2822252	Identifier	class_name		2822203	0					
ANR	2822253	Argument	use_heap		2822203	2					
ANR	2822254	Identifier	use_heap		2822203	0					
ANR	2822255	ExpressionStatement	"zend_str_tolower_copy ( ZSTR_VAL ( lcname ) , ZSTR_VAL ( class_name ) , ZSTR_LEN ( class_name ) )"	228:1:6140:6223	2822203	9	True				
ANR	2822256	CallExpression	"zend_str_tolower_copy ( ZSTR_VAL ( lcname ) , ZSTR_VAL ( class_name ) , ZSTR_LEN ( class_name ) )"		2822203	0					
ANR	2822257	Callee	zend_str_tolower_copy		2822203	0					
ANR	2822258	Identifier	zend_str_tolower_copy		2822203	0					
ANR	2822259	ArgumentList	ZSTR_VAL ( lcname )		2822203	1					
ANR	2822260	Argument	ZSTR_VAL ( lcname )		2822203	0					
ANR	2822261	CallExpression	ZSTR_VAL ( lcname )		2822203	0					
ANR	2822262	Callee	ZSTR_VAL		2822203	0					
ANR	2822263	Identifier	ZSTR_VAL		2822203	0					
ANR	2822264	ArgumentList	lcname		2822203	1					
ANR	2822265	Argument	lcname		2822203	0					
ANR	2822266	Identifier	lcname		2822203	0					
ANR	2822267	Argument	ZSTR_VAL ( class_name )		2822203	1					
ANR	2822268	CallExpression	ZSTR_VAL ( class_name )		2822203	0					
ANR	2822269	Callee	ZSTR_VAL		2822203	0					
ANR	2822270	Identifier	ZSTR_VAL		2822203	0					
ANR	2822271	ArgumentList	class_name		2822203	1					
ANR	2822272	Argument	class_name		2822203	0					
ANR	2822273	Identifier	class_name		2822203	0					
ANR	2822274	Argument	ZSTR_LEN ( class_name )		2822203	2					
ANR	2822275	CallExpression	ZSTR_LEN ( class_name )		2822203	0					
ANR	2822276	Callee	ZSTR_LEN		2822203	0					
ANR	2822277	Identifier	ZSTR_LEN		2822203	0					
ANR	2822278	ArgumentList	class_name		2822203	1					
ANR	2822279	Argument	class_name		2822203	0					
ANR	2822280	Identifier	class_name		2822203	0					
ANR	2822281	ExpressionStatement	"res = zend_hash_exists ( classes , lcname )"	229:1:6226:6265	2822203	10	True				
ANR	2822282	AssignmentExpression	"res = zend_hash_exists ( classes , lcname )"		2822203	0		=			
ANR	2822283	Identifier	res		2822203	0					
ANR	2822284	CallExpression	"zend_hash_exists ( classes , lcname )"		2822203	1					
ANR	2822285	Callee	zend_hash_exists		2822203	0					
ANR	2822286	Identifier	zend_hash_exists		2822203	0					
ANR	2822287	ArgumentList	classes		2822203	1					
ANR	2822288	Argument	classes		2822203	0					
ANR	2822289	Identifier	classes		2822203	0					
ANR	2822290	Argument	lcname		2822203	1					
ANR	2822291	Identifier	lcname		2822203	0					
ANR	2822292	ExpressionStatement	"ZSTR_ALLOCA_FREE ( lcname , use_heap )"	230:1:6268:6302	2822203	11	True				
ANR	2822293	CallExpression	"ZSTR_ALLOCA_FREE ( lcname , use_heap )"		2822203	0					
ANR	2822294	Callee	ZSTR_ALLOCA_FREE		2822203	0					
ANR	2822295	Identifier	ZSTR_ALLOCA_FREE		2822203	0					
ANR	2822296	ArgumentList	lcname		2822203	1					
ANR	2822297	Argument	lcname		2822203	0					
ANR	2822298	Identifier	lcname		2822203	0					
ANR	2822299	Argument	use_heap		2822203	1					
ANR	2822300	Identifier	use_heap		2822203	0					
ANR	2822301	ReturnStatement	return res ;	231:1:6305:6315	2822203	12	True				
ANR	2822302	Identifier	res		2822203	0					
ANR	2822303	ReturnType	static inline int		2822203	1					
ANR	2822304	Identifier	unserialize_allowed_class		2822203	2					
ANR	2822305	ParameterList	"zend_string * class_name , HashTable * classes"		2822203	3					
ANR	2822306	Parameter	zend_string * class_name	214:44:5882:5904	2822203	0	True				
ANR	2822307	ParameterType	zend_string *		2822203	0					
ANR	2822308	Identifier	class_name		2822203	1					
ANR	2822309	Parameter	HashTable * classes	214:69:5907:5924	2822203	1	True				
ANR	2822310	ParameterType	HashTable *		2822203	0					
ANR	2822311	Identifier	classes		2822203	1					
ANR	2822312	CFGEntryNode	ENTRY		2822203		True				
ANR	2822313	CFGExitNode	EXIT		2822203		True				
ANR	2822314	Symbol	res		2822203						
ANR	2822315	Symbol	lcname		2822203						
ANR	2822316	Symbol	NULL		2822203						
ANR	2822317	Symbol	zend_hash_num_elements		2822203						
ANR	2822318	Symbol	classes		2822203						
ANR	2822319	Symbol	ZSTR_LEN		2822203						
ANR	2822320	Symbol	zend_hash_exists		2822203						
ANR	2822321	Symbol	class_name		2822203						
ANR	2822322	Symbol	use_heap		2822203						
ANR	2822323	Symbol	ZSTR_VAL		2822203						
ANR	2822324	Function	parse_iv2	246:0:6506:6958							
ANR	2822325	FunctionDef	"parse_iv2 (const unsigned char * p , const unsigned char * * q)"		2822324	0					
ANR	2822326	CompoundStatement		247:0:6589:6958	2822324	0					
ANR	2822327	IdentifierDeclStatement	char cursor ;	248:1:6592:6603	2822324	0	True				
ANR	2822328	IdentifierDecl	cursor		2822324	0					
ANR	2822329	IdentifierDeclType	char		2822324	0					
ANR	2822330	Identifier	cursor		2822324	1					
ANR	2822331	IdentifierDeclStatement	zend_long result = 0 ;	249:1:6606:6626	2822324	1	True				
ANR	2822332	IdentifierDecl	result = 0		2822324	0					
ANR	2822333	IdentifierDeclType	zend_long		2822324	0					
ANR	2822334	Identifier	result		2822324	1					
ANR	2822335	AssignmentExpression	result = 0		2822324	2		=			
ANR	2822336	Identifier	result		2822324	0					
ANR	2822337	PrimaryExpression	0		2822324	1					
ANR	2822338	IdentifierDeclStatement	int neg = 0 ;	250:1:6629:6640	2822324	2	True				
ANR	2822339	IdentifierDecl	neg = 0		2822324	0					
ANR	2822340	IdentifierDeclType	int		2822324	0					
ANR	2822341	Identifier	neg		2822324	1					
ANR	2822342	AssignmentExpression	neg = 0		2822324	2		=			
ANR	2822343	Identifier	neg		2822324	0					
ANR	2822344	PrimaryExpression	0		2822324	1					
ANR	2822345	SwitchStatement	switch ( * p )		2822324	3					
ANR	2822346	Condition	* p	252:9:6652:6653	2822324	0	True				
ANR	2822347	UnaryOperationExpression	* p		2822324	0					
ANR	2822348	UnaryOperator	*		2822324	0					
ANR	2822349	Identifier	p		2822324	1					
ANR	2822350	CompoundStatement		6:13:66:66	2822324	1					
ANR	2822351	Label	case '-' :	253:2:6660:6668	2822324	0	True				
ANR	2822352	ExpressionStatement	neg ++	254:3:6673:6678	2822324	1	True				
ANR	2822353	PostIncDecOperationExpression	neg ++		2822324	0					
ANR	2822354	Identifier	neg		2822324	0					
ANR	2822355	IncDec	++		2822324	1					
ANR	2822356	Label	case '+' :	256:2:6704:6712	2822324	2	True				
ANR	2822357	ExpressionStatement	p ++	257:3:6717:6720	2822324	3	True				
ANR	2822358	PostIncDecOperationExpression	p ++		2822324	0					
ANR	2822359	Identifier	p		2822324	0					
ANR	2822360	IncDec	++		2822324	1					
ANR	2822361	WhileStatement	while ( 1 )		2822324	4					
ANR	2822362	Condition	1	260:8:6734:6734	2822324	0	True				
ANR	2822363	PrimaryExpression	1		2822324	0					
ANR	2822364	CompoundStatement		14:11:147:147	2822324	1					
ANR	2822365	ExpressionStatement	cursor = ( char ) * p	261:2:6741:6758	2822324	0	True				
ANR	2822366	AssignmentExpression	cursor = ( char ) * p		2822324	0		=			
ANR	2822367	Identifier	cursor		2822324	0					
ANR	2822368	CastExpression	( char ) * p		2822324	1					
ANR	2822369	CastTarget	char		2822324	0					
ANR	2822370	UnaryOperationExpression	* p		2822324	1					
ANR	2822371	UnaryOperator	*		2822324	0					
ANR	2822372	Identifier	p		2822324	1					
ANR	2822373	IfStatement	if ( cursor >= '0' && cursor <= '9' )		2822324	1					
ANR	2822374	Condition	cursor >= '0' && cursor <= '9'	262:6:6766:6795	2822324	0	True				
ANR	2822375	AndExpression	cursor >= '0' && cursor <= '9'		2822324	0		&&			
ANR	2822376	RelationalExpression	cursor >= '0'		2822324	0		>=			
ANR	2822377	Identifier	cursor		2822324	0					
ANR	2822378	PrimaryExpression	'0'		2822324	1					
ANR	2822379	RelationalExpression	cursor <= '9'		2822324	1		<=			
ANR	2822380	Identifier	cursor		2822324	0					
ANR	2822381	PrimaryExpression	'9'		2822324	1					
ANR	2822382	CompoundStatement		16:38:208:208	2822324	1					
ANR	2822383	ExpressionStatement	result = result * 10 + ( size_t ) ( cursor - ( unsigned char ) '0' )	263:3:6803:6863	2822324	0	True				
ANR	2822384	AssignmentExpression	result = result * 10 + ( size_t ) ( cursor - ( unsigned char ) '0' )		2822324	0		=			
ANR	2822385	Identifier	result		2822324	0					
ANR	2822386	AdditiveExpression	result * 10 + ( size_t ) ( cursor - ( unsigned char ) '0' )		2822324	1		+			
ANR	2822387	MultiplicativeExpression	result * 10		2822324	0		*			
ANR	2822388	Identifier	result		2822324	0					
ANR	2822389	PrimaryExpression	10		2822324	1					
ANR	2822390	CastExpression	( size_t ) ( cursor - ( unsigned char ) '0' )		2822324	1					
ANR	2822391	CastTarget	size_t		2822324	0					
ANR	2822392	AdditiveExpression	cursor - ( unsigned char ) '0'		2822324	1		-			
ANR	2822393	Identifier	cursor		2822324	0					
ANR	2822394	CastExpression	( unsigned char ) '0'		2822324	1					
ANR	2822395	CastTarget	unsigned char		2822324	0					
ANR	2822396	PrimaryExpression	'0'		2822324	1					
ANR	2822397	ElseStatement	else		2822324	0					
ANR	2822398	CompoundStatement		18:9:284:284	2822324	0					
ANR	2822399	BreakStatement	break ;	265:3:6879:6884	2822324	0	True				
ANR	2822400	ExpressionStatement	p ++	267:2:6892:6895	2822324	2	True				
ANR	2822401	PostIncDecOperationExpression	p ++		2822324	0					
ANR	2822402	Identifier	p		2822324	0					
ANR	2822403	IncDec	++		2822324	1					
ANR	2822404	IfStatement	if ( q )		2822324	5					
ANR	2822405	Condition	q	269:5:6905:6905	2822324	0	True				
ANR	2822406	Identifier	q		2822324	0					
ANR	2822407	ExpressionStatement	* q = p	269:8:6908:6914	2822324	1	True				
ANR	2822408	AssignmentExpression	* q = p		2822324	0		=			
ANR	2822409	UnaryOperationExpression	* q		2822324	0					
ANR	2822410	UnaryOperator	*		2822324	0					
ANR	2822411	Identifier	q		2822324	1					
ANR	2822412	Identifier	p		2822324	1					
ANR	2822413	IfStatement	if ( neg )		2822324	6					
ANR	2822414	Condition	neg	270:5:6921:6923	2822324	0	True				
ANR	2822415	Identifier	neg		2822324	0					
ANR	2822416	ReturnStatement	return - result ;	270:10:6926:6940	2822324	1	True				
ANR	2822417	UnaryOperationExpression	- result		2822324	0					
ANR	2822418	UnaryOperator	-		2822324	0					
ANR	2822419	Identifier	result		2822324	1					
ANR	2822420	ReturnStatement	return result ;	271:1:6943:6956	2822324	7	True				
ANR	2822421	Identifier	result		2822324	0					
ANR	2822422	ReturnType	static inline zend_long		2822324	1					
ANR	2822423	Identifier	parse_iv2		2822324	2					
ANR	2822424	ParameterList	"const unsigned char * p , const unsigned char * * q"		2822324	3					
ANR	2822425	Parameter	const unsigned char * p	246:34:6540:6561	2822324	0	True				
ANR	2822426	ParameterType	const unsigned char *		2822324	0					
ANR	2822427	Identifier	p		2822324	1					
ANR	2822428	Parameter	const unsigned char * * q	246:58:6564:6586	2822324	1	True				
ANR	2822429	ParameterType	const unsigned char * *		2822324	0					
ANR	2822430	Identifier	q		2822324	1					
ANR	2822431	CFGEntryNode	ENTRY		2822324		True				
ANR	2822432	CFGExitNode	EXIT		2822324		True				
ANR	2822433	Symbol	p		2822324						
ANR	2822434	Symbol	cursor		2822324						
ANR	2822435	Symbol	result		2822324						
ANR	2822436	Symbol	q		2822324						
ANR	2822437	Symbol	neg		2822324						
ANR	2822438	Symbol	* p		2822324						
ANR	2822439	Symbol	* q		2822324						
ANR	2822440	Function	parse_iv	274:0:6961:7048							
ANR	2822441	FunctionDef	parse_iv (const unsigned char * p)		2822440	0					
ANR	2822442	CompoundStatement		275:0:7018:7048	2822440	0					
ANR	2822443	ReturnStatement	"return parse_iv2 ( p , NULL ) ;"	276:1:7021:7046	2822440	0	True				
ANR	2822444	CallExpression	"parse_iv2 ( p , NULL )"		2822440	0					
ANR	2822445	Callee	parse_iv2		2822440	0					
ANR	2822446	Identifier	parse_iv2		2822440	0					
ANR	2822447	ArgumentList	p		2822440	1					
ANR	2822448	Argument	p		2822440	0					
ANR	2822449	Identifier	p		2822440	0					
ANR	2822450	Argument	NULL		2822440	1					
ANR	2822451	Identifier	NULL		2822440	0					
ANR	2822452	ReturnType	static inline zend_long		2822440	1					
ANR	2822453	Identifier	parse_iv		2822440	2					
ANR	2822454	ParameterList	const unsigned char * p		2822440	3					
ANR	2822455	Parameter	const unsigned char * p	274:33:6994:7015	2822440	0	True				
ANR	2822456	ParameterType	const unsigned char *		2822440	0					
ANR	2822457	Identifier	p		2822440	1					
ANR	2822458	CFGEntryNode	ENTRY		2822440		True				
ANR	2822459	CFGExitNode	EXIT		2822440		True				
ANR	2822460	Symbol	p		2822440						
ANR	2822461	Symbol	NULL		2822440						
ANR	2822462	Symbol	parse_iv2		2822440						
ANR	2822463	Function	parse_uiv	280:0:7104:7418							
ANR	2822464	FunctionDef	parse_uiv (const unsigned char * p)		2822463	0					
ANR	2822465	CompoundStatement		281:0:7159:7418	2822463	0					
ANR	2822466	IdentifierDeclStatement	unsigned char cursor ;	282:1:7162:7182	2822463	0	True				
ANR	2822467	IdentifierDecl	cursor		2822463	0					
ANR	2822468	IdentifierDeclType	unsigned char		2822463	0					
ANR	2822469	Identifier	cursor		2822463	1					
ANR	2822470	IdentifierDeclStatement	size_t result = 0 ;	283:1:7185:7202	2822463	1	True				
ANR	2822471	IdentifierDecl	result = 0		2822463	0					
ANR	2822472	IdentifierDeclType	size_t		2822463	0					
ANR	2822473	Identifier	result		2822463	1					
ANR	2822474	AssignmentExpression	result = 0		2822463	2		=			
ANR	2822475	Identifier	result		2822463	0					
ANR	2822476	PrimaryExpression	0		2822463	1					
ANR	2822477	IfStatement	if ( * p == '+' )		2822463	2					
ANR	2822478	Condition	* p == '+'	285:5:7210:7218	2822463	0	True				
ANR	2822479	EqualityExpression	* p == '+'		2822463	0		==			
ANR	2822480	UnaryOperationExpression	* p		2822463	0					
ANR	2822481	UnaryOperator	*		2822463	0					
ANR	2822482	Identifier	p		2822463	1					
ANR	2822483	PrimaryExpression	'+'		2822463	1					
ANR	2822484	CompoundStatement		5:16:61:61	2822463	1					
ANR	2822485	ExpressionStatement	p ++	286:2:7225:7228	2822463	0	True				
ANR	2822486	PostIncDecOperationExpression	p ++		2822463	0					
ANR	2822487	Identifier	p		2822463	0					
ANR	2822488	IncDec	++		2822463	1					
ANR	2822489	WhileStatement	while ( 1 )		2822463	3					
ANR	2822490	Condition	1	289:8:7242:7242	2822463	0	True				
ANR	2822491	PrimaryExpression	1		2822463	0					
ANR	2822492	CompoundStatement		9:11:85:85	2822463	1					
ANR	2822493	ExpressionStatement	cursor = * p	290:2:7249:7260	2822463	0	True				
ANR	2822494	AssignmentExpression	cursor = * p		2822463	0		=			
ANR	2822495	Identifier	cursor		2822463	0					
ANR	2822496	UnaryOperationExpression	* p		2822463	1					
ANR	2822497	UnaryOperator	*		2822463	0					
ANR	2822498	Identifier	p		2822463	1					
ANR	2822499	IfStatement	if ( cursor >= '0' && cursor <= '9' )		2822463	1					
ANR	2822500	Condition	cursor >= '0' && cursor <= '9'	291:6:7268:7297	2822463	0	True				
ANR	2822501	AndExpression	cursor >= '0' && cursor <= '9'		2822463	0		&&			
ANR	2822502	RelationalExpression	cursor >= '0'		2822463	0		>=			
ANR	2822503	Identifier	cursor		2822463	0					
ANR	2822504	PrimaryExpression	'0'		2822463	1					
ANR	2822505	RelationalExpression	cursor <= '9'		2822463	1		<=			
ANR	2822506	Identifier	cursor		2822463	0					
ANR	2822507	PrimaryExpression	'9'		2822463	1					
ANR	2822508	CompoundStatement		11:38:140:140	2822463	1					
ANR	2822509	ExpressionStatement	result = result * 10 + ( size_t ) ( cursor - ( unsigned char ) '0' )	292:3:7305:7365	2822463	0	True				
ANR	2822510	AssignmentExpression	result = result * 10 + ( size_t ) ( cursor - ( unsigned char ) '0' )		2822463	0		=			
ANR	2822511	Identifier	result		2822463	0					
ANR	2822512	AdditiveExpression	result * 10 + ( size_t ) ( cursor - ( unsigned char ) '0' )		2822463	1		+			
ANR	2822513	MultiplicativeExpression	result * 10		2822463	0		*			
ANR	2822514	Identifier	result		2822463	0					
ANR	2822515	PrimaryExpression	10		2822463	1					
ANR	2822516	CastExpression	( size_t ) ( cursor - ( unsigned char ) '0' )		2822463	1					
ANR	2822517	CastTarget	size_t		2822463	0					
ANR	2822518	AdditiveExpression	cursor - ( unsigned char ) '0'		2822463	1		-			
ANR	2822519	Identifier	cursor		2822463	0					
ANR	2822520	CastExpression	( unsigned char ) '0'		2822463	1					
ANR	2822521	CastTarget	unsigned char		2822463	0					
ANR	2822522	PrimaryExpression	'0'		2822463	1					
ANR	2822523	ElseStatement	else		2822463	0					
ANR	2822524	CompoundStatement		13:9:216:216	2822463	0					
ANR	2822525	BreakStatement	break ;	294:3:7381:7386	2822463	0	True				
ANR	2822526	ExpressionStatement	p ++	296:2:7394:7397	2822463	2	True				
ANR	2822527	PostIncDecOperationExpression	p ++		2822463	0					
ANR	2822528	Identifier	p		2822463	0					
ANR	2822529	IncDec	++		2822463	1					
ANR	2822530	ReturnStatement	return result ;	298:1:7403:7416	2822463	4	True				
ANR	2822531	Identifier	result		2822463	0					
ANR	2822532	ReturnType	static inline size_t		2822463	1					
ANR	2822533	Identifier	parse_uiv		2822463	2					
ANR	2822534	ParameterList	const unsigned char * p		2822463	3					
ANR	2822535	Parameter	const unsigned char * p	280:31:7135:7156	2822463	0	True				
ANR	2822536	ParameterType	const unsigned char *		2822463	0					
ANR	2822537	Identifier	p		2822463	1					
ANR	2822538	CFGEntryNode	ENTRY		2822463		True				
ANR	2822539	CFGExitNode	EXIT		2822463		True				
ANR	2822540	Symbol	p		2822463						
ANR	2822541	Symbol	cursor		2822463						
ANR	2822542	Symbol	result		2822463						
ANR	2822543	Symbol	* p		2822463						
ANR	2822544	DeclStmt									
ANR	2822545	Decl							zval	zval	key
ANR	2822546	Decl							zval	zval *	data
ANR	2822547	Decl							zval	zval	d
ANR	2822548	Decl							zval	zval *	old_data
ANR	2822549	DeclStmt									
ANR	2822550	Decl							zend_ulong	zend_ulong	idx
ANR	2822551	DeclStmt									
ANR	2822552	Decl							zend_long	zend_long	datalen
ANR	2822553	DeclStmt									
ANR	2822554	Decl							zend_long	zend_long	elements
ANR	2822555	DeclStmt									
ANR	2822556	Decl							zval	zval	retval
ANR	2822557	DeclStmt									
ANR	2822558	Decl							zval	zval	fname
ANR	2822559	DeclStmt									
ANR	2822560	Decl							HashTable	HashTable *	ht
ANR	2822561	Function	php_var_unserialize	491:0:12182:12394							
ANR	2822562	FunctionDef	"php_var_unserialize (zval * rval , const unsigned char * * p , const unsigned char * max , php_unserialize_data_t * var_hash)"		2822561	0					
ANR	2822563	CompoundStatement		492:0:12310:12394	2822561	0					
ANR	2822564	IdentifierDeclStatement	HashTable * classes = NULL ;	493:1:12313:12338	2822561	0	True				
ANR	2822565	IdentifierDecl	* classes = NULL		2822561	0					
ANR	2822566	IdentifierDeclType	HashTable *		2822561	0					
ANR	2822567	Identifier	classes		2822561	1					
ANR	2822568	AssignmentExpression	* classes = NULL		2822561	2		=			
ANR	2822569	Identifier	NULL		2822561	0					
ANR	2822570	Identifier	NULL		2822561	1					
ANR	2822571	ReturnStatement	return php_var_unserialize_ex ( UNSERIALIZE_PASSTHRU ) ;	494:1:12341:12392	2822561	1	True				
ANR	2822572	CallExpression	php_var_unserialize_ex ( UNSERIALIZE_PASSTHRU )		2822561	0					
ANR	2822573	Callee	php_var_unserialize_ex		2822561	0					
ANR	2822574	Identifier	php_var_unserialize_ex		2822561	0					
ANR	2822575	ArgumentList	UNSERIALIZE_PASSTHRU		2822561	1					
ANR	2822576	Argument	UNSERIALIZE_PASSTHRU		2822561	0					
ANR	2822577	Identifier	UNSERIALIZE_PASSTHRU		2822561	0					
ANR	2822578	ReturnType	PHPAPI int		2822561	1					
ANR	2822579	Identifier	php_var_unserialize		2822561	2					
ANR	2822580	ParameterList	"zval * rval , const unsigned char * * p , const unsigned char * max , php_unserialize_data_t * var_hash"		2822561	3					
ANR	2822581	Parameter	zval * rval	491:31:12213:12222	2822561	0	True				
ANR	2822582	ParameterType	zval *		2822561	0					
ANR	2822583	Identifier	rval		2822561	1					
ANR	2822584	Parameter	const unsigned char * * p	491:43:12225:12247	2822561	1	True				
ANR	2822585	ParameterType	const unsigned char * *		2822561	0					
ANR	2822586	Identifier	p		2822561	1					
ANR	2822587	Parameter	const unsigned char * max	491:68:12250:12273	2822561	2	True				
ANR	2822588	ParameterType	const unsigned char *		2822561	0					
ANR	2822589	Identifier	max		2822561	1					
ANR	2822590	Parameter	php_unserialize_data_t * var_hash	491:94:12276:12307	2822561	3	True				
ANR	2822591	ParameterType	php_unserialize_data_t *		2822561	0					
ANR	2822592	Identifier	var_hash		2822561	1					
ANR	2822593	CFGEntryNode	ENTRY		2822561		True				
ANR	2822594	CFGExitNode	EXIT		2822561		True				
ANR	2822595	Symbol	p		2822561						
ANR	2822596	Symbol	php_var_unserialize_ex		2822561						
ANR	2822597	Symbol	NULL		2822561						
ANR	2822598	Symbol	max		2822561						
ANR	2822599	Symbol	classes		2822561						
ANR	2822600	Symbol	UNSERIALIZE_PASSTHRU		2822561						
ANR	2822601	Symbol	rval		2822561						
ANR	2822602	Symbol	var_hash		2822561						
ANR	2822603	DeclStmt									
ANR	2822604	Decl							const unsigned char	const unsigned char *	cursor
ANR	2822605	Decl							const unsigned char	const unsigned char *	limit
ANR	2822606	Decl							const unsigned char	const unsigned char *	marker
ANR	2822607	Decl							const unsigned char	const unsigned char *	start
ANR	2822608	DeclStmt									
ANR	2822609	Decl							zval	zval *	rval_ref
ANR	2822610	DeclStmt									
ANR	2822611	Decl							YYCTYPE	YYCTYPE	yych
ANR	2822612	DeclStmt									
ANR	2822613	Decl							const unsigned char	const unsigned char [ ]	yybm
ANR	2822614	DeclStmt									
ANR	2822615	Decl							size_t	size_t	len
ANR	2822616	Decl							size_t	size_t	len2
ANR	2822617	Decl							size_t	size_t	len3
ANR	2822618	Decl							size_t	size_t	maxlen
ANR	2822619	DeclStmt									
ANR	2822620	Decl							zend_long	zend_long	elements
ANR	2822621	DeclStmt									
ANR	2822622	Decl							char	char *	str
ANR	2822623	DeclStmt									
ANR	2822624	Decl							zend_string	zend_string *	class_name
ANR	2822625	DeclStmt									
ANR	2822626	Decl							zend_class_entry	zend_class_entry *	ce
ANR	2822627	DeclStmt									
ANR	2822628	Decl							int	int	incomplete_class
ANR	2822629	DeclStmt									
ANR	2822630	Decl							int	int	custom_object
ANR	2822631	DeclStmt									
ANR	2822632	Decl							zval	zval	user_func
ANR	2822633	DeclStmt									
ANR	2822634	Decl							zval	zval	retval
ANR	2822635	DeclStmt									
ANR	2822636	Decl							zval	zval [ 1 ]	args
ANR	2822637	DeclStmt									
ANR	2822638	Decl							int	int	ret
ANR	2822639	DeclStmt									
ANR	2822640	Decl							zend_long	zend_long	elements
ANR	2822641	DeclStmt									
ANR	2822642	Decl							size_t	size_t	len
ANR	2822643	Decl							size_t	size_t	maxlen
ANR	2822644	DeclStmt									
ANR	2822645	Decl							zend_string	zend_string *	str
ANR	2822646	DeclStmt									
ANR	2822647	Decl							size_t	size_t	len
ANR	2822648	Decl							size_t	size_t	maxlen
ANR	2822649	DeclStmt									
ANR	2822650	Decl							char	char *	str
ANR	2822651	DeclStmt									
ANR	2822652	Decl							int	int	digits
ANR	2822653	DeclStmt									
ANR	2822654	Decl							int	int	cmp
ANR	2822655	DeclStmt									
ANR	2822656	Decl							zend_long	zend_long	id
ANR	2822657	DeclStmt									
ANR	2822658	Decl							zend_long	zend_long	id
