command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2965605	File	data/converged/CVE-2015-8617_php-src/iso8859_3.c								
ANR	2965606	DeclStmt									
ANR	2965607	Decl							const UChar	const UChar [ 256 ]	EncISO_8859_3_ToLowerCaseTable
ANR	2965608	DeclStmt									
ANR	2965609	Decl							const unsigned short	const unsigned short [ 256 ]	EncISO_8859_3_CtypeTable
ANR	2965610	DeclStmt									
ANR	2965611	Decl							const UChar	const UChar *	p
ANR	2965612	Function	is_mbc_ambiguous	125:0:6514:7046							
ANR	2965613	FunctionDef	"is_mbc_ambiguous (OnigCaseFoldType flag , const UChar * * pp , const UChar * end)"		2965612	0					
ANR	2965614	CompoundStatement		127:0:6601:7046	2965612	0					
ANR	2965615	IdentifierDeclStatement	int v ;	128:2:6605:6610	2965612	0	True				
ANR	2965616	IdentifierDecl	v		2965612	0					
ANR	2965617	IdentifierDeclType	int		2965612	0					
ANR	2965618	Identifier	v		2965612	1					
ANR	2965619	IdentifierDeclStatement	const UChar * p = * pp ;	129:2:6614:6634	2965612	1	True				
ANR	2965620	IdentifierDecl	* p = * pp		2965612	0					
ANR	2965621	IdentifierDeclType	const UChar *		2965612	0					
ANR	2965622	Identifier	p		2965612	1					
ANR	2965623	AssignmentExpression	* p = * pp		2965612	2		=			
ANR	2965624	Identifier	p		2965612	0					
ANR	2965625	UnaryOperationExpression	* pp		2965612	1					
ANR	2965626	UnaryOperator	*		2965612	0					
ANR	2965627	Identifier	pp		2965612	1					
ANR	2965628	IfStatement	if ( * p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0 )		2965612	2					
ANR	2965629	Condition	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0	131:6:6643:6707	2965612	0	True				
ANR	2965630	AndExpression	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		2965612	0		&&			
ANR	2965631	EqualityExpression	* p == 0xdf		2965612	0		==			
ANR	2965632	UnaryOperationExpression	* p		2965612	0					
ANR	2965633	UnaryOperator	*		2965612	0					
ANR	2965634	Identifier	p		2965612	1					
ANR	2965635	PrimaryExpression	0xdf		2965612	1					
ANR	2965636	EqualityExpression	( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		2965612	1		!=			
ANR	2965637	BitAndExpression	flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		2965612	0		&			
ANR	2965638	Identifier	flag		2965612	0					
ANR	2965639	Identifier	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		2965612	1					
ANR	2965640	PrimaryExpression	0		2965612	1					
ANR	2965641	CompoundStatement		5:73:108:108	2965612	1					
ANR	2965642	ExpressionStatement	( * pp ) ++	132:4:6716:6723	2965612	0	True				
ANR	2965643	PostIncDecOperationExpression	( * pp ) ++		2965612	0					
ANR	2965644	UnaryOperationExpression	* pp		2965612	0					
ANR	2965645	UnaryOperator	*		2965612	0					
ANR	2965646	Identifier	pp		2965612	1					
ANR	2965647	IncDec	++		2965612	1					
ANR	2965648	ReturnStatement	return TRUE ;	133:4:6729:6740	2965612	1	True				
ANR	2965649	Identifier	TRUE		2965612	0					
ANR	2965650	ExpressionStatement	( * pp ) ++	136:2:6749:6756	2965612	3	True				
ANR	2965651	PostIncDecOperationExpression	( * pp ) ++		2965612	0					
ANR	2965652	UnaryOperationExpression	* pp		2965612	0					
ANR	2965653	UnaryOperator	*		2965612	0					
ANR	2965654	Identifier	pp		2965612	1					
ANR	2965655	IncDec	++		2965612	1					
ANR	2965656	ExpressionStatement	v = ( EncISO_8859_3_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )	137:2:6760:6832	2965612	4	True				
ANR	2965657	AssignmentExpression	v = ( EncISO_8859_3_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )		2965612	0		=			
ANR	2965658	Identifier	v		2965612	0					
ANR	2965659	BitAndExpression	EncISO_8859_3_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER )		2965612	1		&			
ANR	2965660	ArrayIndexing	EncISO_8859_3_CtypeTable [ * p ]		2965612	0					
ANR	2965661	Identifier	EncISO_8859_3_CtypeTable		2965612	0					
ANR	2965662	UnaryOperationExpression	* p		2965612	1					
ANR	2965663	UnaryOperator	*		2965612	0					
ANR	2965664	Identifier	p		2965612	1					
ANR	2965665	InclusiveOrExpression	BIT_CTYPE_UPPER | BIT_CTYPE_LOWER		2965612	1		|			
ANR	2965666	Identifier	BIT_CTYPE_UPPER		2965612	0					
ANR	2965667	Identifier	BIT_CTYPE_LOWER		2965612	1					
ANR	2965668	IfStatement	if ( ( v | BIT_CTYPE_LOWER ) != 0 )		2965612	5					
ANR	2965669	Condition	( v | BIT_CTYPE_LOWER ) != 0	138:6:6840:6865	2965612	0	True				
ANR	2965670	EqualityExpression	( v | BIT_CTYPE_LOWER ) != 0		2965612	0		!=			
ANR	2965671	InclusiveOrExpression	v | BIT_CTYPE_LOWER		2965612	0		|			
ANR	2965672	Identifier	v		2965612	0					
ANR	2965673	Identifier	BIT_CTYPE_LOWER		2965612	1					
ANR	2965674	PrimaryExpression	0		2965612	1					
ANR	2965675	CompoundStatement		12:34:266:266	2965612	1					
ANR	2965676	IfStatement	if ( * p == 0xb5 )		2965612	0					
ANR	2965677	Condition	* p == 0xb5	140:8:6947:6956	2965612	0	True				
ANR	2965678	EqualityExpression	* p == 0xb5		2965612	0		==			
ANR	2965679	UnaryOperationExpression	* p		2965612	0					
ANR	2965680	UnaryOperator	*		2965612	0					
ANR	2965681	Identifier	p		2965612	1					
ANR	2965682	PrimaryExpression	0xb5		2965612	1					
ANR	2965683	ReturnStatement	return FALSE ;	141:6:6965:6977	2965612	1	True				
ANR	2965684	Identifier	FALSE		2965612	0					
ANR	2965685	ElseStatement	else		2965612	0					
ANR	2965686	ReturnStatement	return TRUE ;	143:6:6994:7005	2965612	0	True				
ANR	2965687	Identifier	TRUE		2965612	0					
ANR	2965688	ReturnStatement	return ( v != 0 ? TRUE : FALSE ) ;	146:2:7014:7044	2965612	6	True				
ANR	2965689	ConditionalExpression	v != 0 ? TRUE : FALSE		2965612	0					
ANR	2965690	Condition	v != 0		2965612	0					
ANR	2965691	EqualityExpression	v != 0		2965612	0		!=			
ANR	2965692	Identifier	v		2965612	0					
ANR	2965693	PrimaryExpression	0		2965612	1					
ANR	2965694	Identifier	TRUE		2965612	1					
ANR	2965695	Identifier	FALSE		2965612	2					
ANR	2965696	ReturnType	static int		2965612	1					
ANR	2965697	Identifier	is_mbc_ambiguous		2965612	2					
ANR	2965698	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end"		2965612	3					
ANR	2965699	Parameter	OnigCaseFoldType flag	126:17:6542:6562	2965612	0	True				
ANR	2965700	ParameterType	OnigCaseFoldType		2965612	0					
ANR	2965701	Identifier	flag		2965612	1					
ANR	2965702	Parameter	const UChar * * pp	126:40:6565:6580	2965612	1	True				
ANR	2965703	ParameterType	const UChar * *		2965612	0					
ANR	2965704	Identifier	pp		2965612	1					
ANR	2965705	Parameter	const UChar * end	126:58:6583:6598	2965612	2	True				
ANR	2965706	ParameterType	const UChar *		2965612	0					
ANR	2965707	Identifier	end		2965612	1					
ANR	2965708	CFGEntryNode	ENTRY		2965612		True				
ANR	2965709	CFGExitNode	EXIT		2965612		True				
ANR	2965710	Symbol	pp		2965612						
ANR	2965711	Symbol	flag		2965612						
ANR	2965712	Symbol	* pp		2965612						
ANR	2965713	Symbol	* EncISO_8859_3_CtypeTable		2965612						
ANR	2965714	Symbol	TRUE		2965612						
ANR	2965715	Symbol	EncISO_8859_3_CtypeTable		2965612						
ANR	2965716	Symbol	p		2965612						
ANR	2965717	Symbol	v		2965612						
ANR	2965718	Symbol	BIT_CTYPE_LOWER		2965612						
ANR	2965719	Symbol	end		2965612						
ANR	2965720	Symbol	* p		2965612						
ANR	2965721	Symbol	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		2965612						
ANR	2965722	Symbol	BIT_CTYPE_UPPER		2965612						
ANR	2965723	Symbol	FALSE		2965612						
ANR	2965724	Symbol	* * p		2965612						
ANR	2965725	Function	is_code_ctype	150:0:7056:7215							
ANR	2965726	FunctionDef	"is_code_ctype (OnigCodePoint code , unsigned int ctype)"		2965725	0					
ANR	2965727	CompoundStatement		152:0:7121:7215	2965725	0					
ANR	2965728	IfStatement	if ( code < 256 )		2965725	0					
ANR	2965729	Condition	code < 256	153:6:7129:7138	2965725	0	True				
ANR	2965730	RelationalExpression	code < 256		2965725	0		<			
ANR	2965731	Identifier	code		2965725	0					
ANR	2965732	PrimaryExpression	256		2965725	1					
ANR	2965733	ReturnStatement	"return ENC_IS_ISO_8859_3_CTYPE ( code , ctype ) ;"	154:4:7145:7188	2965725	1	True				
ANR	2965734	CallExpression	"ENC_IS_ISO_8859_3_CTYPE ( code , ctype )"		2965725	0					
ANR	2965735	Callee	ENC_IS_ISO_8859_3_CTYPE		2965725	0					
ANR	2965736	Identifier	ENC_IS_ISO_8859_3_CTYPE		2965725	0					
ANR	2965737	ArgumentList	code		2965725	1					
ANR	2965738	Argument	code		2965725	0					
ANR	2965739	Identifier	code		2965725	0					
ANR	2965740	Argument	ctype		2965725	1					
ANR	2965741	Identifier	ctype		2965725	0					
ANR	2965742	ElseStatement	else		2965725	0					
ANR	2965743	ReturnStatement	return FALSE ;	156:4:7201:7213	2965725	0	True				
ANR	2965744	Identifier	FALSE		2965725	0					
ANR	2965745	ReturnType	static int		2965725	1					
ANR	2965746	Identifier	is_code_ctype		2965725	2					
ANR	2965747	ParameterList	"OnigCodePoint code , unsigned int ctype"		2965725	3					
ANR	2965748	Parameter	OnigCodePoint code	151:14:7081:7098	2965725	0	True				
ANR	2965749	ParameterType	OnigCodePoint		2965725	0					
ANR	2965750	Identifier	code		2965725	1					
ANR	2965751	Parameter	unsigned int ctype	151:34:7101:7118	2965725	1	True				
ANR	2965752	ParameterType	unsigned int		2965725	0					
ANR	2965753	Identifier	ctype		2965725	1					
ANR	2965754	CFGEntryNode	ENTRY		2965725		True				
ANR	2965755	CFGExitNode	EXIT		2965725		True				
ANR	2965756	Symbol	ENC_IS_ISO_8859_3_CTYPE		2965725						
ANR	2965757	Symbol	code		2965725						
ANR	2965758	Symbol	ctype		2965725						
ANR	2965759	Symbol	FALSE		2965725						
ANR	2965760	DeclStmt									
ANR	2965761	Decl							const OnigPairCaseFoldCodes	const OnigPairCaseFoldCodes [ ]	CaseFoldMap
ANR	2965762	Function	apply_all_case_fold	200:0:7872:8128							
ANR	2965763	FunctionDef	"apply_all_case_fold (OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg)"		2965762	0					
ANR	2965764	CompoundStatement		203:0:7971:8128	2965762	0					
ANR	2965765	ReturnStatement	"return onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg ) ;"	204:2:7975:8126	2965762	0	True				
ANR	2965766	CallExpression	"onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg )"		2965762	0					
ANR	2965767	Callee	onigenc_apply_all_case_fold_with_map		2965762	0					
ANR	2965768	Identifier	onigenc_apply_all_case_fold_with_map		2965762	0					
ANR	2965769	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2965762	1					
ANR	2965770	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2965762	0					
ANR	2965771	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2965762	0		/			
ANR	2965772	SizeofExpression	sizeof ( CaseFoldMap )		2965762	0					
ANR	2965773	Sizeof	sizeof		2965762	0					
ANR	2965774	SizeofOperand	CaseFoldMap		2965762	1					
ANR	2965775	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		2965762	1					
ANR	2965776	Sizeof	sizeof		2965762	0					
ANR	2965777	SizeofOperand	OnigPairCaseFoldCodes		2965762	1					
ANR	2965778	Argument	CaseFoldMap		2965762	1					
ANR	2965779	Identifier	CaseFoldMap		2965762	0					
ANR	2965780	Argument	1		2965762	2					
ANR	2965781	PrimaryExpression	1		2965762	0					
ANR	2965782	Argument	flag		2965762	3					
ANR	2965783	Identifier	flag		2965762	0					
ANR	2965784	Argument	f		2965762	4					
ANR	2965785	Identifier	f		2965762	0					
ANR	2965786	Argument	arg		2965762	5					
ANR	2965787	Identifier	arg		2965762	0					
ANR	2965788	ReturnType	static int		2965762	1					
ANR	2965789	Identifier	apply_all_case_fold		2965762	2					
ANR	2965790	ParameterList	"OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg"		2965762	3					
ANR	2965791	Parameter	OnigCaseFoldType flag	201:20:7903:7923	2965762	0	True				
ANR	2965792	ParameterType	OnigCaseFoldType		2965762	0					
ANR	2965793	Identifier	flag		2965762	1					
ANR	2965794	Parameter	OnigApplyAllCaseFoldFunc f	202:6:7932:7957	2965762	1	True				
ANR	2965795	ParameterType	OnigApplyAllCaseFoldFunc		2965762	0					
ANR	2965796	Identifier	f		2965762	1					
ANR	2965797	Parameter	void * arg	202:34:7960:7968	2965762	2	True				
ANR	2965798	ParameterType	void *		2965762	0					
ANR	2965799	Identifier	arg		2965762	1					
ANR	2965800	CFGEntryNode	ENTRY		2965762		True				
ANR	2965801	CFGExitNode	EXIT		2965762		True				
ANR	2965802	Symbol	flag		2965762						
ANR	2965803	Symbol	f		2965762						
ANR	2965804	Symbol	arg		2965762						
ANR	2965805	Symbol	CaseFoldMap		2965762						
ANR	2965806	Symbol	onigenc_apply_all_case_fold_with_map		2965762						
ANR	2965807	Function	get_case_fold_codes_by_str	209:0:8131:8424							
ANR	2965808	FunctionDef	"get_case_fold_codes_by_str (OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ])"		2965807	0					
ANR	2965809	CompoundStatement		212:0:8267:8424	2965807	0					
ANR	2965810	ReturnStatement	"return onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items ) ;"	213:2:8271:8422	2965807	0	True				
ANR	2965811	CallExpression	"onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items )"		2965807	0					
ANR	2965812	Callee	onigenc_get_case_fold_codes_by_str_with_map		2965807	0					
ANR	2965813	Identifier	onigenc_get_case_fold_codes_by_str_with_map		2965807	0					
ANR	2965814	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2965807	1					
ANR	2965815	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2965807	0					
ANR	2965816	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2965807	0		/			
ANR	2965817	SizeofExpression	sizeof ( CaseFoldMap )		2965807	0					
ANR	2965818	Sizeof	sizeof		2965807	0					
ANR	2965819	SizeofOperand	CaseFoldMap		2965807	1					
ANR	2965820	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		2965807	1					
ANR	2965821	Sizeof	sizeof		2965807	0					
ANR	2965822	SizeofOperand	OnigPairCaseFoldCodes		2965807	1					
ANR	2965823	Argument	CaseFoldMap		2965807	1					
ANR	2965824	Identifier	CaseFoldMap		2965807	0					
ANR	2965825	Argument	1		2965807	2					
ANR	2965826	PrimaryExpression	1		2965807	0					
ANR	2965827	Argument	flag		2965807	3					
ANR	2965828	Identifier	flag		2965807	0					
ANR	2965829	Argument	p		2965807	4					
ANR	2965830	Identifier	p		2965807	0					
ANR	2965831	Argument	end		2965807	5					
ANR	2965832	Identifier	end		2965807	0					
ANR	2965833	Argument	items		2965807	6					
ANR	2965834	Identifier	items		2965807	0					
ANR	2965835	ReturnType	static int		2965807	1					
ANR	2965836	Identifier	get_case_fold_codes_by_str		2965807	2					
ANR	2965837	ParameterList	"OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ]"		2965807	3					
ANR	2965838	Parameter	OnigCaseFoldType flag	210:27:8169:8189	2965807	0	True				
ANR	2965839	ParameterType	OnigCaseFoldType		2965807	0					
ANR	2965840	Identifier	flag		2965807	1					
ANR	2965841	Parameter	const OnigUChar * p	211:3:8195:8212	2965807	1	True				
ANR	2965842	ParameterType	const OnigUChar *		2965807	0					
ANR	2965843	Identifier	p		2965807	1					
ANR	2965844	Parameter	const OnigUChar * end	211:23:8215:8234	2965807	2	True				
ANR	2965845	ParameterType	const OnigUChar *		2965807	0					
ANR	2965846	Identifier	end		2965807	1					
ANR	2965847	Parameter	OnigCaseFoldCodeItem items [ ]	211:45:8237:8264	2965807	3	True				
ANR	2965848	ParameterType	OnigCaseFoldCodeItem [ ]		2965807	0					
ANR	2965849	Identifier	items		2965807	1					
ANR	2965850	CFGEntryNode	ENTRY		2965807		True				
ANR	2965851	CFGExitNode	EXIT		2965807		True				
ANR	2965852	Symbol	p		2965807						
ANR	2965853	Symbol	flag		2965807						
ANR	2965854	Symbol	end		2965807						
ANR	2965855	Symbol	CaseFoldMap		2965807						
ANR	2965856	Symbol	onigenc_get_case_fold_codes_by_str_with_map		2965807						
ANR	2965857	Symbol	items		2965807						
ANR	2965858	DeclStmt									
ANR	2965859	Decl							OnigEncodingType	OnigEncodingType	OnigEncodingISO_8859_3
