command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3904154	File	data/converged/CVE-2015-8617_php-src/zend_builtin_functions.c								
ANR	3904155	DeclStmt									
ANR	3904156	Decl							const zend_function_entry	const zend_function_entry [ ]	builtin_functions
ANR	3904157	DeclStmt									
ANR	3904158	Decl							zend_class_entry	zend_class_entry	class_entry
ANR	3904159	DeclStmt									
ANR	3904160	Decl							zend_module_entry	zend_module_entry	zend_builtin_module
ANR	3904161	Function	zend_startup_builtin_functions	360:0:11550:11796							
ANR	3904162	FunctionDef	zend_startup_builtin_functions ()		3904161	0					
ANR	3904163	CompoundStatement		361:0:11601:11796	3904161	0					
ANR	3904164	ExpressionStatement	zend_builtin_module . module_number = 0	362:1:11604:11641	3904161	0	True				
ANR	3904165	AssignmentExpression	zend_builtin_module . module_number = 0		3904161	0		=			
ANR	3904166	MemberAccess	zend_builtin_module . module_number		3904161	0					
ANR	3904167	Identifier	zend_builtin_module		3904161	0					
ANR	3904168	Identifier	module_number		3904161	1					
ANR	3904169	PrimaryExpression	0		3904161	1					
ANR	3904170	ExpressionStatement	zend_builtin_module . type = MODULE_PERSISTENT	363:1:11644:11688	3904161	1	True				
ANR	3904171	AssignmentExpression	zend_builtin_module . type = MODULE_PERSISTENT		3904161	0		=			
ANR	3904172	MemberAccess	zend_builtin_module . type		3904161	0					
ANR	3904173	Identifier	zend_builtin_module		3904161	0					
ANR	3904174	Identifier	type		3904161	1					
ANR	3904175	Identifier	MODULE_PERSISTENT		3904161	1					
ANR	3904176	ReturnStatement	return ( EG ( current_module ) = zend_register_module_ex ( & zend_builtin_module ) ) == NULL ? FAILURE : SUCCESS ;	364:1:11691:11794	3904161	2	True				
ANR	3904177	ConditionalExpression	( EG ( current_module ) = zend_register_module_ex ( & zend_builtin_module ) ) == NULL ? FAILURE : SUCCESS		3904161	0					
ANR	3904178	Condition	( EG ( current_module ) = zend_register_module_ex ( & zend_builtin_module ) ) == NULL		3904161	0					
ANR	3904179	EqualityExpression	( EG ( current_module ) = zend_register_module_ex ( & zend_builtin_module ) ) == NULL		3904161	0		==			
ANR	3904180	AssignmentExpression	EG ( current_module ) = zend_register_module_ex ( & zend_builtin_module )		3904161	0		=			
ANR	3904181	CallExpression	EG ( current_module )		3904161	0					
ANR	3904182	Callee	EG		3904161	0					
ANR	3904183	Identifier	EG		3904161	0					
ANR	3904184	ArgumentList	current_module		3904161	1					
ANR	3904185	Argument	current_module		3904161	0					
ANR	3904186	Identifier	current_module		3904161	0					
ANR	3904187	CallExpression	zend_register_module_ex ( & zend_builtin_module )		3904161	1					
ANR	3904188	Callee	zend_register_module_ex		3904161	0					
ANR	3904189	Identifier	zend_register_module_ex		3904161	0					
ANR	3904190	ArgumentList	& zend_builtin_module		3904161	1					
ANR	3904191	Argument	& zend_builtin_module		3904161	0					
ANR	3904192	UnaryOperationExpression	& zend_builtin_module		3904161	0					
ANR	3904193	UnaryOperator	&		3904161	0					
ANR	3904194	Identifier	zend_builtin_module		3904161	1					
ANR	3904195	Identifier	NULL		3904161	1					
ANR	3904196	Identifier	FAILURE		3904161	1					
ANR	3904197	Identifier	SUCCESS		3904161	2					
ANR	3904198	ReturnType	int		3904161	1					
ANR	3904199	Identifier	zend_startup_builtin_functions		3904161	2					
ANR	3904200	ParameterList			3904161	3					
ANR	3904201	CFGEntryNode	ENTRY		3904161		True				
ANR	3904202	CFGExitNode	EXIT		3904161		True				
ANR	3904203	Symbol	EG		3904161						
ANR	3904204	Symbol	SUCCESS		3904161						
ANR	3904205	Symbol	NULL		3904161						
ANR	3904206	Symbol	& zend_builtin_module		3904161						
ANR	3904207	Symbol	MODULE_PERSISTENT		3904161						
ANR	3904208	Symbol	zend_builtin_module		3904161						
ANR	3904209	Symbol	zend_builtin_module . type		3904161						
ANR	3904210	Symbol	zend_builtin_module . module_number		3904161						
ANR	3904211	Symbol	current_module		3904161						
ANR	3904212	Symbol	FAILURE		3904161						
ANR	3904213	Symbol	zend_register_module_ex		3904161						
ANR	3904214	DeclStmt									
ANR	3904215	Decl							zend_string	zend_string *	key
ANR	3904216	DeclStmt									
ANR	3904217	Decl							zend_string	zend_string *	key
ANR	3904218	DeclStmt									
ANR	3904219	Decl							zend_execute_data	zend_execute_data *	ex
ANR	3904220	DeclStmt									
ANR	3904221	Decl							uint32_t	uint32_t	arg_count
ANR	3904222	Decl							uint32_t	uint32_t	first_extra_arg
ANR	3904223	DeclStmt									
ANR	3904224	Decl							zval	zval *	arg
ANR	3904225	DeclStmt									
ANR	3904226	Decl							zend_long	zend_long	requested_offset
ANR	3904227	DeclStmt									
ANR	3904228	Decl							zend_execute_data	zend_execute_data *	ex
ANR	3904229	DeclStmt									
ANR	3904230	Decl							zval	zval *	p
ANR	3904231	Decl							zval	zval *	q
ANR	3904232	DeclStmt									
ANR	3904233	Decl							uint32_t	uint32_t	arg_count
ANR	3904234	Decl							uint32_t	uint32_t	first_extra_arg
ANR	3904235	DeclStmt									
ANR	3904236	Decl							uint32_t	uint32_t	i
ANR	3904237	Decl							uint32_t	uint32_t	n
ANR	3904238	DeclStmt									
ANR	3904239	Decl							zend_execute_data	zend_execute_data *	ex
ANR	3904240	Function	ZEND_HASH_FILL_PACKED	501:2:15551:16271							
ANR	3904241	FunctionDef	ZEND_HASH_FILL_PACKED (Z_ARRVAL_P ( return_value ))		3904240	0					
ANR	3904242	CompoundStatement		501:50:15599:16271	3904240	0					
ANR	3904243	ExpressionStatement	i = 0	502:3:15604:15609	3904240	0	True				
ANR	3904244	AssignmentExpression	i = 0		3904240	0		=			
ANR	3904245	Identifier	i		3904240	0					
ANR	3904246	PrimaryExpression	0		3904240	1					
ANR	3904247	ExpressionStatement	n = 0	503:3:15614:15619	3904240	1	True				
ANR	3904248	AssignmentExpression	n = 0		3904240	0		=			
ANR	3904249	Identifier	n		3904240	0					
ANR	3904250	PrimaryExpression	0		3904240	1					
ANR	3904251	ExpressionStatement	"p = ZEND_CALL_ARG ( ex , 1 )"	504:3:15624:15648	3904240	2	True				
ANR	3904252	AssignmentExpression	"p = ZEND_CALL_ARG ( ex , 1 )"		3904240	0		=			
ANR	3904253	Identifier	p		3904240	0					
ANR	3904254	CallExpression	"ZEND_CALL_ARG ( ex , 1 )"		3904240	1					
ANR	3904255	Callee	ZEND_CALL_ARG		3904240	0					
ANR	3904256	Identifier	ZEND_CALL_ARG		3904240	0					
ANR	3904257	ArgumentList	ex		3904240	1					
ANR	3904258	Argument	ex		3904240	0					
ANR	3904259	Identifier	ex		3904240	0					
ANR	3904260	Argument	1		3904240	1					
ANR	3904261	PrimaryExpression	1		3904240	0					
ANR	3904262	IfStatement	if ( arg_count > first_extra_arg )		3904240	3					
ANR	3904263	Condition	arg_count > first_extra_arg	505:7:15657:15683	3904240	0	True				
ANR	3904264	RelationalExpression	arg_count > first_extra_arg		3904240	0		>			
ANR	3904265	Identifier	arg_count		3904240	0					
ANR	3904266	Identifier	first_extra_arg		3904240	1					
ANR	3904267	CompoundStatement		5:36:86:86	3904240	1					
ANR	3904268	WhileStatement	while ( i < first_extra_arg )		3904240	0					
ANR	3904269	Condition	i < first_extra_arg	506:11:15699:15717	3904240	0	True				
ANR	3904270	RelationalExpression	i < first_extra_arg		3904240	0		<			
ANR	3904271	Identifier	i		3904240	0					
ANR	3904272	Identifier	first_extra_arg		3904240	1					
ANR	3904273	CompoundStatement		6:32:120:120	3904240	1					
ANR	3904274	ExpressionStatement	q = p	507:5:15727:15732	3904240	0	True				
ANR	3904275	AssignmentExpression	q = p		3904240	0		=			
ANR	3904276	Identifier	q		3904240	0					
ANR	3904277	Identifier	p		3904240	1					
ANR	3904278	IfStatement	if ( EXPECTED ( Z_TYPE_INFO_P ( q ) != IS_UNDEF ) )		3904240	1					
ANR	3904279	Condition	EXPECTED ( Z_TYPE_INFO_P ( q ) != IS_UNDEF )	508:9:15743:15780	3904240	0	True				
ANR	3904280	CallExpression	EXPECTED ( Z_TYPE_INFO_P ( q ) != IS_UNDEF )		3904240	0					
ANR	3904281	Callee	EXPECTED		3904240	0					
ANR	3904282	Identifier	EXPECTED		3904240	0					
ANR	3904283	ArgumentList	Z_TYPE_INFO_P ( q ) != IS_UNDEF		3904240	1					
ANR	3904284	Argument	Z_TYPE_INFO_P ( q ) != IS_UNDEF		3904240	0					
ANR	3904285	EqualityExpression	Z_TYPE_INFO_P ( q ) != IS_UNDEF		3904240	0		!=			
ANR	3904286	CallExpression	Z_TYPE_INFO_P ( q )		3904240	0					
ANR	3904287	Callee	Z_TYPE_INFO_P		3904240	0					
ANR	3904288	Identifier	Z_TYPE_INFO_P		3904240	0					
ANR	3904289	ArgumentList	q		3904240	1					
ANR	3904290	Argument	q		3904240	0					
ANR	3904291	Identifier	q		3904240	0					
ANR	3904292	Identifier	IS_UNDEF		3904240	1					
ANR	3904293	CompoundStatement		8:49:183:183	3904240	1					
ANR	3904294	ExpressionStatement	ZVAL_DEREF ( q )	509:6:15791:15804	3904240	0	True				
ANR	3904295	CallExpression	ZVAL_DEREF ( q )		3904240	0					
ANR	3904296	Callee	ZVAL_DEREF		3904240	0					
ANR	3904297	Identifier	ZVAL_DEREF		3904240	0					
ANR	3904298	ArgumentList	q		3904240	1					
ANR	3904299	Argument	q		3904240	0					
ANR	3904300	Identifier	q		3904240	0					
ANR	3904301	IfStatement	if ( Z_OPT_REFCOUNTED_P ( q ) )		3904240	1					
ANR	3904302	Condition	Z_OPT_REFCOUNTED_P ( q )	510:10:15816:15836	3904240	0	True				
ANR	3904303	CallExpression	Z_OPT_REFCOUNTED_P ( q )		3904240	0					
ANR	3904304	Callee	Z_OPT_REFCOUNTED_P		3904240	0					
ANR	3904305	Identifier	Z_OPT_REFCOUNTED_P		3904240	0					
ANR	3904306	ArgumentList	q		3904240	1					
ANR	3904307	Argument	q		3904240	0					
ANR	3904308	Identifier	q		3904240	0					
ANR	3904309	CompoundStatement		10:33:239:239	3904240	1					
ANR	3904310	ExpressionStatement	Z_ADDREF_P ( q )	511:7:15849:15862	3904240	0	True				
ANR	3904311	CallExpression	Z_ADDREF_P ( q )		3904240	0					
ANR	3904312	Callee	Z_ADDREF_P		3904240	0					
ANR	3904313	Identifier	Z_ADDREF_P		3904240	0					
ANR	3904314	ArgumentList	q		3904240	1					
ANR	3904315	Argument	q		3904240	0					
ANR	3904316	Identifier	q		3904240	0					
ANR	3904317	ExpressionStatement	n ++	513:6:15878:15881	3904240	2	True				
ANR	3904318	PostIncDecOperationExpression	n ++		3904240	0					
ANR	3904319	Identifier	n		3904240	0					
ANR	3904320	IncDec	++		3904240	1					
ANR	3904321	ExpressionStatement	ZEND_HASH_FILL_ADD ( q )	515:5:15895:15916	3904240	2	True				
ANR	3904322	CallExpression	ZEND_HASH_FILL_ADD ( q )		3904240	0					
ANR	3904323	Callee	ZEND_HASH_FILL_ADD		3904240	0					
ANR	3904324	Identifier	ZEND_HASH_FILL_ADD		3904240	0					
ANR	3904325	ArgumentList	q		3904240	1					
ANR	3904326	Argument	q		3904240	0					
ANR	3904327	Identifier	q		3904240	0					
ANR	3904328	ExpressionStatement	p ++	516:5:15923:15926	3904240	3	True				
ANR	3904329	PostIncDecOperationExpression	p ++		3904240	0					
ANR	3904330	Identifier	p		3904240	0					
ANR	3904331	IncDec	++		3904240	1					
ANR	3904332	ExpressionStatement	i ++	517:5:15933:15936	3904240	4	True				
ANR	3904333	PostIncDecOperationExpression	i ++		3904240	0					
ANR	3904334	Identifier	i		3904240	0					
ANR	3904335	IncDec	++		3904240	1					
ANR	3904336	ExpressionStatement	"p = ZEND_CALL_VAR_NUM ( ex , ex -> func -> op_array . last_var + ex -> func -> op_array . T )"	519:4:15948:16025	3904240	1	True				
ANR	3904337	AssignmentExpression	"p = ZEND_CALL_VAR_NUM ( ex , ex -> func -> op_array . last_var + ex -> func -> op_array . T )"		3904240	0		=			
ANR	3904338	Identifier	p		3904240	0					
ANR	3904339	CallExpression	"ZEND_CALL_VAR_NUM ( ex , ex -> func -> op_array . last_var + ex -> func -> op_array . T )"		3904240	1					
ANR	3904340	Callee	ZEND_CALL_VAR_NUM		3904240	0					
ANR	3904341	Identifier	ZEND_CALL_VAR_NUM		3904240	0					
ANR	3904342	ArgumentList	ex		3904240	1					
ANR	3904343	Argument	ex		3904240	0					
ANR	3904344	Identifier	ex		3904240	0					
ANR	3904345	Argument	ex -> func -> op_array . last_var + ex -> func -> op_array . T		3904240	1					
ANR	3904346	AdditiveExpression	ex -> func -> op_array . last_var + ex -> func -> op_array . T		3904240	0		+			
ANR	3904347	MemberAccess	ex -> func -> op_array . last_var		3904240	0					
ANR	3904348	PtrMemberAccess	ex -> func -> op_array		3904240	0					
ANR	3904349	PtrMemberAccess	ex -> func		3904240	0					
ANR	3904350	Identifier	ex		3904240	0					
ANR	3904351	Identifier	func		3904240	1					
ANR	3904352	Identifier	op_array		3904240	1					
ANR	3904353	Identifier	last_var		3904240	1					
ANR	3904354	MemberAccess	ex -> func -> op_array . T		3904240	1					
ANR	3904355	PtrMemberAccess	ex -> func -> op_array		3904240	0					
ANR	3904356	PtrMemberAccess	ex -> func		3904240	0					
ANR	3904357	Identifier	ex		3904240	0					
ANR	3904358	Identifier	func		3904240	1					
ANR	3904359	Identifier	op_array		3904240	1					
ANR	3904360	Identifier	T		3904240	1					
ANR	3904361	WhileStatement	while ( i < arg_count )		3904240	4					
ANR	3904362	Condition	i < arg_count	521:10:16042:16054	3904240	0	True				
ANR	3904363	RelationalExpression	i < arg_count		3904240	0		<			
ANR	3904364	Identifier	i		3904240	0					
ANR	3904365	Identifier	arg_count		3904240	1					
ANR	3904366	CompoundStatement		21:25:457:457	3904240	1					
ANR	3904367	ExpressionStatement	q = p	522:4:16063:16068	3904240	0	True				
ANR	3904368	AssignmentExpression	q = p		3904240	0		=			
ANR	3904369	Identifier	q		3904240	0					
ANR	3904370	Identifier	p		3904240	1					
ANR	3904371	IfStatement	if ( EXPECTED ( Z_TYPE_INFO_P ( q ) != IS_UNDEF ) )		3904240	1					
ANR	3904372	Condition	EXPECTED ( Z_TYPE_INFO_P ( q ) != IS_UNDEF )	523:8:16078:16115	3904240	0	True				
ANR	3904373	CallExpression	EXPECTED ( Z_TYPE_INFO_P ( q ) != IS_UNDEF )		3904240	0					
ANR	3904374	Callee	EXPECTED		3904240	0					
ANR	3904375	Identifier	EXPECTED		3904240	0					
ANR	3904376	ArgumentList	Z_TYPE_INFO_P ( q ) != IS_UNDEF		3904240	1					
ANR	3904377	Argument	Z_TYPE_INFO_P ( q ) != IS_UNDEF		3904240	0					
ANR	3904378	EqualityExpression	Z_TYPE_INFO_P ( q ) != IS_UNDEF		3904240	0		!=			
ANR	3904379	CallExpression	Z_TYPE_INFO_P ( q )		3904240	0					
ANR	3904380	Callee	Z_TYPE_INFO_P		3904240	0					
ANR	3904381	Identifier	Z_TYPE_INFO_P		3904240	0					
ANR	3904382	ArgumentList	q		3904240	1					
ANR	3904383	Argument	q		3904240	0					
ANR	3904384	Identifier	q		3904240	0					
ANR	3904385	Identifier	IS_UNDEF		3904240	1					
ANR	3904386	CompoundStatement		23:48:518:518	3904240	1					
ANR	3904387	ExpressionStatement	ZVAL_DEREF ( q )	524:5:16125:16138	3904240	0	True				
ANR	3904388	CallExpression	ZVAL_DEREF ( q )		3904240	0					
ANR	3904389	Callee	ZVAL_DEREF		3904240	0					
ANR	3904390	Identifier	ZVAL_DEREF		3904240	0					
ANR	3904391	ArgumentList	q		3904240	1					
ANR	3904392	Argument	q		3904240	0					
ANR	3904393	Identifier	q		3904240	0					
ANR	3904394	IfStatement	if ( Z_OPT_REFCOUNTED_P ( q ) )		3904240	1					
ANR	3904395	Condition	Z_OPT_REFCOUNTED_P ( q )	525:9:16149:16169	3904240	0	True				
ANR	3904396	CallExpression	Z_OPT_REFCOUNTED_P ( q )		3904240	0					
ANR	3904397	Callee	Z_OPT_REFCOUNTED_P		3904240	0					
ANR	3904398	Identifier	Z_OPT_REFCOUNTED_P		3904240	0					
ANR	3904399	ArgumentList	q		3904240	1					
ANR	3904400	Argument	q		3904240	0					
ANR	3904401	Identifier	q		3904240	0					
ANR	3904402	CompoundStatement		25:32:572:572	3904240	1					
ANR	3904403	ExpressionStatement	Z_ADDREF_P ( q )	526:6:16181:16194	3904240	0	True				
ANR	3904404	CallExpression	Z_ADDREF_P ( q )		3904240	0					
ANR	3904405	Callee	Z_ADDREF_P		3904240	0					
ANR	3904406	Identifier	Z_ADDREF_P		3904240	0					
ANR	3904407	ArgumentList	q		3904240	1					
ANR	3904408	Argument	q		3904240	0					
ANR	3904409	Identifier	q		3904240	0					
ANR	3904410	ExpressionStatement	n ++	528:5:16208:16211	3904240	2	True				
ANR	3904411	PostIncDecOperationExpression	n ++		3904240	0					
ANR	3904412	Identifier	n		3904240	0					
ANR	3904413	IncDec	++		3904240	1					
ANR	3904414	ExpressionStatement	ZEND_HASH_FILL_ADD ( q )	530:4:16223:16244	3904240	2	True				
ANR	3904415	CallExpression	ZEND_HASH_FILL_ADD ( q )		3904240	0					
ANR	3904416	Callee	ZEND_HASH_FILL_ADD		3904240	0					
ANR	3904417	Identifier	ZEND_HASH_FILL_ADD		3904240	0					
ANR	3904418	ArgumentList	q		3904240	1					
ANR	3904419	Argument	q		3904240	0					
ANR	3904420	Identifier	q		3904240	0					
ANR	3904421	ExpressionStatement	p ++	531:4:16250:16253	3904240	3	True				
ANR	3904422	PostIncDecOperationExpression	p ++		3904240	0					
ANR	3904423	Identifier	p		3904240	0					
ANR	3904424	IncDec	++		3904240	1					
ANR	3904425	ExpressionStatement	i ++	532:4:16259:16262	3904240	4	True				
ANR	3904426	PostIncDecOperationExpression	i ++		3904240	0					
ANR	3904427	Identifier	i		3904240	0					
ANR	3904428	IncDec	++		3904240	1					
ANR	3904429	Identifier	ZEND_HASH_FILL_PACKED		3904240	1					
ANR	3904430	ParameterList	Z_ARRVAL_P ( return_value )		3904240	2					
ANR	3904431	Parameter	Z_ARRVAL_P ( return_value )	501:24:15573:15596	3904240	0	True				
ANR	3904432	ParameterType	(Z_ARRVAL_P)		3904240	0					
ANR	3904433	Identifier	return_value		3904240	1					
ANR	3904434	CFGEntryNode	ENTRY		3904240		True				
ANR	3904435	CFGExitNode	EXIT		3904240		True				
ANR	3904436	Symbol	return_value		3904240						
ANR	3904437	Symbol	Z_OPT_REFCOUNTED_P		3904240						
ANR	3904438	Symbol	ZEND_CALL_ARG		3904240						
ANR	3904439	Symbol	ex -> func -> op_array		3904240						
ANR	3904440	Symbol	i		3904240						
ANR	3904441	Symbol	ex -> func -> op_array . T		3904240						
ANR	3904442	Symbol	ex -> func		3904240						
ANR	3904443	Symbol	n		3904240						
ANR	3904444	Symbol	Z_TYPE_INFO_P		3904240						
ANR	3904445	Symbol	first_extra_arg		3904240						
ANR	3904446	Symbol	p		3904240						
ANR	3904447	Symbol	q		3904240						
ANR	3904448	Symbol	ex		3904240						
ANR	3904449	Symbol	ex -> func -> op_array . last_var		3904240						
ANR	3904450	Symbol	ZEND_CALL_VAR_NUM		3904240						
ANR	3904451	Symbol	* ex -> func		3904240						
ANR	3904452	Symbol	* ex		3904240						
ANR	3904453	Symbol	EXPECTED		3904240						
ANR	3904454	Symbol	* * ex		3904240						
ANR	3904455	Symbol	IS_UNDEF		3904240						
ANR	3904456	Symbol	arg_count		3904240						
ANR	3904457	DeclStmt									
ANR	3904458	Decl							zend_string	zend_string *	s
ANR	3904459	DeclStmt									
ANR	3904460	Decl							zend_string	zend_string *	s1
ANR	3904461	Decl							zend_string	zend_string *	s2
ANR	3904462	DeclStmt									
ANR	3904463	Decl							zend_string	zend_string *	s1
ANR	3904464	Decl							zend_string	zend_string *	s2
ANR	3904465	DeclStmt									
ANR	3904466	Decl							zend_long	zend_long	len
ANR	3904467	DeclStmt									
ANR	3904468	Decl							zend_string	zend_string *	s1
ANR	3904469	Decl							zend_string	zend_string *	s2
ANR	3904470	DeclStmt									
ANR	3904471	Decl							zend_string	zend_string *	s1
ANR	3904472	Decl							zend_string	zend_string *	s2
ANR	3904473	DeclStmt									
ANR	3904474	Decl							zend_long	zend_long	len
ANR	3904475	DeclStmt									
ANR	3904476	Decl							zval	zval *	array
ANR	3904477	Decl							zval	zval *	entry
ANR	3904478	Decl							zval	zval	tmp
ANR	3904479	DeclStmt									
ANR	3904480	Decl							zend_ulong	zend_ulong	num_key
ANR	3904481	DeclStmt									
ANR	3904482	Decl							HashTable	HashTable *	target_hash
ANR	3904483	DeclStmt									
ANR	3904484	Decl							zend_string	zend_string *	key
ANR	3904485	DeclStmt									
ANR	3904486	Decl							zval	zval *	err
ANR	3904487	DeclStmt									
ANR	3904488	Decl							int	int	old_error_reporting
ANR	3904489	DeclStmt									
ANR	3904490	Decl							zend_ini_entry	zend_ini_entry *	p
ANR	3904491	Function	validate_constant_array	746:0:21696:22469							
ANR	3904492	FunctionDef	validate_constant_array (HashTable * ht)		3904491	0					
ANR	3904493	CompoundStatement		747:0:21756:22469	3904491	0					
ANR	3904494	IdentifierDeclStatement	int ret = 1 ;	748:1:21759:21770	3904491	0	True				
ANR	3904495	IdentifierDecl	ret = 1		3904491	0					
ANR	3904496	IdentifierDeclType	int		3904491	0					
ANR	3904497	Identifier	ret		3904491	1					
ANR	3904498	AssignmentExpression	ret = 1		3904491	2		=			
ANR	3904499	Identifier	ret		3904491	0					
ANR	3904500	PrimaryExpression	1		3904491	1					
ANR	3904501	IdentifierDeclStatement	zval * val ;	749:1:21773:21782	3904491	1	True				
ANR	3904502	IdentifierDecl	* val		3904491	0					
ANR	3904503	IdentifierDeclType	zval *		3904491	0					
ANR	3904504	Identifier	val		3904491	1					
ANR	3904505	ExpressionStatement	ht -> u . v . nApplyCount ++	751:1:21786:21807	3904491	2	True				
ANR	3904506	PostIncDecOperationExpression	ht -> u . v . nApplyCount ++		3904491	0					
ANR	3904507	MemberAccess	ht -> u . v . nApplyCount		3904491	0					
ANR	3904508	MemberAccess	ht -> u . v		3904491	0					
ANR	3904509	PtrMemberAccess	ht -> u		3904491	0					
ANR	3904510	Identifier	ht		3904491	0					
ANR	3904511	Identifier	u		3904491	1					
ANR	3904512	Identifier	v		3904491	1					
ANR	3904513	Identifier	nApplyCount		3904491	1					
ANR	3904514	IncDec	++		3904491	1					
ANR	3904515	Statement	ZEND_HASH_FOREACH_VAL_IND	752:1:21810:21834	3904491	3	True				
ANR	3904516	Statement	(	752:26:21835:21835	3904491	4	True				
ANR	3904517	Statement	ht	752:27:21836:21837	3904491	5	True				
ANR	3904518	Statement	","	752:29:21838:21838	3904491	6	True				
ANR	3904519	Statement	val	752:31:21840:21842	3904491	7	True				
ANR	3904520	Statement	)	752:34:21843:21843	3904491	8	True				
ANR	3904521	CompoundStatement		6:36:88:88	3904491	9					
ANR	3904522	ExpressionStatement	ZVAL_DEREF ( val )	753:2:21849:21864	3904491	0	True				
ANR	3904523	CallExpression	ZVAL_DEREF ( val )		3904491	0					
ANR	3904524	Callee	ZVAL_DEREF		3904491	0					
ANR	3904525	Identifier	ZVAL_DEREF		3904491	0					
ANR	3904526	ArgumentList	val		3904491	1					
ANR	3904527	Argument	val		3904491	0					
ANR	3904528	Identifier	val		3904491	0					
ANR	3904529	IfStatement	if ( Z_REFCOUNTED_P ( val ) )		3904491	1					
ANR	3904530	Condition	Z_REFCOUNTED_P ( val )	754:6:21872:21890	3904491	0	True				
ANR	3904531	CallExpression	Z_REFCOUNTED_P ( val )		3904491	0					
ANR	3904532	Callee	Z_REFCOUNTED_P		3904491	0					
ANR	3904533	Identifier	Z_REFCOUNTED_P		3904491	0					
ANR	3904534	ArgumentList	val		3904491	1					
ANR	3904535	Argument	val		3904491	0					
ANR	3904536	Identifier	val		3904491	0					
ANR	3904537	CompoundStatement		8:27:136:136	3904491	1					
ANR	3904538	IfStatement	if ( Z_TYPE_P ( val ) == IS_ARRAY )		3904491	0					
ANR	3904539	Condition	Z_TYPE_P ( val ) == IS_ARRAY	755:7:21902:21926	3904491	0	True				
ANR	3904540	EqualityExpression	Z_TYPE_P ( val ) == IS_ARRAY		3904491	0		==			
ANR	3904541	CallExpression	Z_TYPE_P ( val )		3904491	0					
ANR	3904542	Callee	Z_TYPE_P		3904491	0					
ANR	3904543	Identifier	Z_TYPE_P		3904491	0					
ANR	3904544	ArgumentList	val		3904491	1					
ANR	3904545	Argument	val		3904491	0					
ANR	3904546	Identifier	val		3904491	0					
ANR	3904547	Identifier	IS_ARRAY		3904491	1					
ANR	3904548	CompoundStatement		9:34:172:172	3904491	1					
ANR	3904549	IfStatement	if ( ! Z_IMMUTABLE_P ( val ) )		3904491	0					
ANR	3904550	Condition	! Z_IMMUTABLE_P ( val )	756:8:21939:21957	3904491	0	True				
ANR	3904551	UnaryOperationExpression	! Z_IMMUTABLE_P ( val )		3904491	0					
ANR	3904552	UnaryOperator	!		3904491	0					
ANR	3904553	CallExpression	Z_IMMUTABLE_P ( val )		3904491	1					
ANR	3904554	Callee	Z_IMMUTABLE_P		3904491	0					
ANR	3904555	Identifier	Z_IMMUTABLE_P		3904491	0					
ANR	3904556	ArgumentList	val		3904491	1					
ANR	3904557	Argument	val		3904491	0					
ANR	3904558	Identifier	val		3904491	0					
ANR	3904559	CompoundStatement		10:29:203:203	3904491	1					
ANR	3904560	IfStatement	if ( Z_ARRVAL_P ( val ) -> u . v . nApplyCount > 0 )		3904491	0					
ANR	3904561	Condition	Z_ARRVAL_P ( val ) -> u . v . nApplyCount > 0	757:9:21971:22006	3904491	0	True				
ANR	3904562	RelationalExpression	Z_ARRVAL_P ( val ) -> u . v . nApplyCount > 0		3904491	0		>			
ANR	3904563	MemberAccess	Z_ARRVAL_P ( val ) -> u . v . nApplyCount		3904491	0					
ANR	3904564	MemberAccess	Z_ARRVAL_P ( val ) -> u . v		3904491	0					
ANR	3904565	PtrMemberAccess	Z_ARRVAL_P ( val ) -> u		3904491	0					
ANR	3904566	CallExpression	Z_ARRVAL_P ( val )		3904491	0					
ANR	3904567	Callee	Z_ARRVAL_P		3904491	0					
ANR	3904568	Identifier	Z_ARRVAL_P		3904491	0					
ANR	3904569	ArgumentList	val		3904491	1					
ANR	3904570	Argument	val		3904491	0					
ANR	3904571	Identifier	val		3904491	0					
ANR	3904572	Identifier	u		3904491	1					
ANR	3904573	Identifier	v		3904491	1					
ANR	3904574	Identifier	nApplyCount		3904491	1					
ANR	3904575	PrimaryExpression	0		3904491	1					
ANR	3904576	CompoundStatement		11:47:252:252	3904491	1					
ANR	3904577	ExpressionStatement	"zend_error ( E_WARNING , ""Constants cannot be recursive arrays"" )"	758:6:22017:22078	3904491	0	True				
ANR	3904578	CallExpression	"zend_error ( E_WARNING , ""Constants cannot be recursive arrays"" )"		3904491	0					
ANR	3904579	Callee	zend_error		3904491	0					
ANR	3904580	Identifier	zend_error		3904491	0					
ANR	3904581	ArgumentList	E_WARNING		3904491	1					
ANR	3904582	Argument	E_WARNING		3904491	0					
ANR	3904583	Identifier	E_WARNING		3904491	0					
ANR	3904584	Argument	"""Constants cannot be recursive arrays"""		3904491	1					
ANR	3904585	PrimaryExpression	"""Constants cannot be recursive arrays"""		3904491	0					
ANR	3904586	ExpressionStatement	ret = 0	759:6:22086:22093	3904491	1	True				
ANR	3904587	AssignmentExpression	ret = 0		3904491	0		=			
ANR	3904588	Identifier	ret		3904491	0					
ANR	3904589	PrimaryExpression	0		3904491	1					
ANR	3904590	BreakStatement	break ;	760:6:22101:22106	3904491	2	True				
ANR	3904591	ElseStatement	else		3904491	0					
ANR	3904592	IfStatement	if ( ! validate_constant_array ( Z_ARRVAL_P ( val ) ) )		3904491	0					
ANR	3904593	Condition	! validate_constant_array ( Z_ARRVAL_P ( val ) )	761:16:22124:22164	3904491	0	True				
ANR	3904594	UnaryOperationExpression	! validate_constant_array ( Z_ARRVAL_P ( val ) )		3904491	0					
ANR	3904595	UnaryOperator	!		3904491	0					
ANR	3904596	CallExpression	validate_constant_array ( Z_ARRVAL_P ( val ) )		3904491	1					
ANR	3904597	Callee	validate_constant_array		3904491	0					
ANR	3904598	Identifier	validate_constant_array		3904491	0					
ANR	3904599	ArgumentList	Z_ARRVAL_P ( val )		3904491	1					
ANR	3904600	Argument	Z_ARRVAL_P ( val )		3904491	0					
ANR	3904601	CallExpression	Z_ARRVAL_P ( val )		3904491	0					
ANR	3904602	Callee	Z_ARRVAL_P		3904491	0					
ANR	3904603	Identifier	Z_ARRVAL_P		3904491	0					
ANR	3904604	ArgumentList	val		3904491	1					
ANR	3904605	Argument	val		3904491	0					
ANR	3904606	Identifier	val		3904491	0					
ANR	3904607	CompoundStatement		15:59:410:410	3904491	1					
ANR	3904608	ExpressionStatement	ret = 0	762:6:22175:22182	3904491	0	True				
ANR	3904609	AssignmentExpression	ret = 0		3904491	0		=			
ANR	3904610	Identifier	ret		3904491	0					
ANR	3904611	PrimaryExpression	0		3904491	1					
ANR	3904612	BreakStatement	break ;	763:6:22190:22195	3904491	1	True				
ANR	3904613	ElseStatement	else		3904491	0					
ANR	3904614	IfStatement	if ( Z_TYPE_P ( val ) != IS_STRING && Z_TYPE_P ( val ) != IS_RESOURCE )		3904491	0					
ANR	3904615	Condition	Z_TYPE_P ( val ) != IS_STRING && Z_TYPE_P ( val ) != IS_RESOURCE	766:14:22224:22281	3904491	0	True				
ANR	3904616	AndExpression	Z_TYPE_P ( val ) != IS_STRING && Z_TYPE_P ( val ) != IS_RESOURCE		3904491	0		&&			
ANR	3904617	EqualityExpression	Z_TYPE_P ( val ) != IS_STRING		3904491	0		!=			
ANR	3904618	CallExpression	Z_TYPE_P ( val )		3904491	0					
ANR	3904619	Callee	Z_TYPE_P		3904491	0					
ANR	3904620	Identifier	Z_TYPE_P		3904491	0					
ANR	3904621	ArgumentList	val		3904491	1					
ANR	3904622	Argument	val		3904491	0					
ANR	3904623	Identifier	val		3904491	0					
ANR	3904624	Identifier	IS_STRING		3904491	1					
ANR	3904625	EqualityExpression	Z_TYPE_P ( val ) != IS_RESOURCE		3904491	1		!=			
ANR	3904626	CallExpression	Z_TYPE_P ( val )		3904491	0					
ANR	3904627	Callee	Z_TYPE_P		3904491	0					
ANR	3904628	Identifier	Z_TYPE_P		3904491	0					
ANR	3904629	ArgumentList	val		3904491	1					
ANR	3904630	Argument	val		3904491	0					
ANR	3904631	Identifier	val		3904491	0					
ANR	3904632	Identifier	IS_RESOURCE		3904491	1					
ANR	3904633	CompoundStatement		20:74:527:527	3904491	1					
ANR	3904634	ExpressionStatement	"zend_error ( E_WARNING , ""Constants may only evaluate to scalar values or arrays"" )"	767:4:22290:22369	3904491	0	True				
ANR	3904635	CallExpression	"zend_error ( E_WARNING , ""Constants may only evaluate to scalar values or arrays"" )"		3904491	0					
ANR	3904636	Callee	zend_error		3904491	0					
ANR	3904637	Identifier	zend_error		3904491	0					
ANR	3904638	ArgumentList	E_WARNING		3904491	1					
ANR	3904639	Argument	E_WARNING		3904491	0					
ANR	3904640	Identifier	E_WARNING		3904491	0					
ANR	3904641	Argument	"""Constants may only evaluate to scalar values or arrays"""		3904491	1					
ANR	3904642	PrimaryExpression	"""Constants may only evaluate to scalar values or arrays"""		3904491	0					
ANR	3904643	ExpressionStatement	ret = 0	768:4:22375:22382	3904491	1	True				
ANR	3904644	AssignmentExpression	ret = 0		3904491	0		=			
ANR	3904645	Identifier	ret		3904491	0					
ANR	3904646	PrimaryExpression	0		3904491	1					
ANR	3904647	BreakStatement	break ;	769:4:22388:22393	3904491	2	True				
ANR	3904648	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	772:3:22407:22430	3904491	10	True				
ANR	3904649	CallExpression	ZEND_HASH_FOREACH_END ( )		3904491	0					
ANR	3904650	Callee	ZEND_HASH_FOREACH_END		3904491	0					
ANR	3904651	Identifier	ZEND_HASH_FOREACH_END		3904491	0					
ANR	3904652	ArgumentList			3904491	1					
ANR	3904653	ExpressionStatement	ht -> u . v . nApplyCount --	773:1:22433:22454	3904491	11	True				
ANR	3904654	PostIncDecOperationExpression	ht -> u . v . nApplyCount --		3904491	0					
ANR	3904655	MemberAccess	ht -> u . v . nApplyCount		3904491	0					
ANR	3904656	MemberAccess	ht -> u . v		3904491	0					
ANR	3904657	PtrMemberAccess	ht -> u		3904491	0					
ANR	3904658	Identifier	ht		3904491	0					
ANR	3904659	Identifier	u		3904491	1					
ANR	3904660	Identifier	v		3904491	1					
ANR	3904661	Identifier	nApplyCount		3904491	1					
ANR	3904662	IncDec	--		3904491	1					
ANR	3904663	ReturnStatement	return ret ;	774:1:22457:22467	3904491	12	True				
ANR	3904664	Identifier	ret		3904491	0					
ANR	3904665	ReturnType	static int		3904491	1					
ANR	3904666	Identifier	validate_constant_array		3904491	2					
ANR	3904667	ParameterList	HashTable * ht		3904491	3					
ANR	3904668	Parameter	HashTable * ht	746:35:21731:21743	3904491	0	True				
ANR	3904669	ParameterType	HashTable *		3904491	0					
ANR	3904670	Identifier	ht		3904491	1					
ANR	3904671	CFGEntryNode	ENTRY		3904491		True				
ANR	3904672	CFGExitNode	EXIT		3904491		True				
ANR	3904673	CFGErrorNode	ERROR		3904491		True				
ANR	3904674	Symbol	ret		3904491						
ANR	3904675	Symbol	val		3904491						
ANR	3904676	Symbol	ht -> u		3904491						
ANR	3904677	Symbol	validate_constant_array		3904491						
ANR	3904678	Symbol	* Z_ARRVAL_P		3904491						
ANR	3904679	Symbol	Z_ARRVAL_P ( val ) -> u . v		3904491						
ANR	3904680	Symbol	ht		3904491						
ANR	3904681	Symbol	Z_TYPE_P		3904491						
ANR	3904682	Symbol	Z_ARRVAL_P ( val ) -> u		3904491						
ANR	3904683	Symbol	ht -> u . v		3904491						
ANR	3904684	Symbol	Z_IMMUTABLE_P		3904491						
ANR	3904685	Symbol	E_WARNING		3904491						
ANR	3904686	Symbol	* ht		3904491						
ANR	3904687	Symbol	IS_ARRAY		3904491						
ANR	3904688	Symbol	Z_REFCOUNTED_P		3904491						
ANR	3904689	Symbol	Z_ARRVAL_P ( val ) -> u . v . nApplyCount		3904491						
ANR	3904690	Symbol	IS_STRING		3904491						
ANR	3904691	Symbol	Z_ARRVAL_P		3904491						
ANR	3904692	Symbol	ht -> u . v . nApplyCount		3904491						
ANR	3904693	Symbol	IS_RESOURCE		3904491						
ANR	3904694	Function	copy_constant_array	778:0:22482:23292							
ANR	3904695	FunctionDef	"copy_constant_array (zval * dst , zval * src)"		3904694	0					
ANR	3904696	CompoundStatement		779:0:22546:23292	3904694	0					
ANR	3904697	IdentifierDeclStatement	zend_string * key ;	780:1:22549:22565	3904694	0	True				
ANR	3904698	IdentifierDecl	* key		3904694	0					
ANR	3904699	IdentifierDeclType	zend_string *		3904694	0					
ANR	3904700	Identifier	key		3904694	1					
ANR	3904701	IdentifierDeclStatement	zend_ulong idx ;	781:1:22568:22582	3904694	1	True				
ANR	3904702	IdentifierDecl	idx		3904694	0					
ANR	3904703	IdentifierDeclType	zend_ulong		3904694	0					
ANR	3904704	Identifier	idx		3904694	1					
ANR	3904705	IdentifierDeclStatement	"zval * new_val , * val ;"	782:1:22585:22604	3904694	2	True				
ANR	3904706	IdentifierDecl	* new_val		3904694	0					
ANR	3904707	IdentifierDeclType	zval *		3904694	0					
ANR	3904708	Identifier	new_val		3904694	1					
ANR	3904709	IdentifierDecl	* val		3904694	1					
ANR	3904710	IdentifierDeclType	zval *		3904694	0					
ANR	3904711	Identifier	val		3904694	1					
ANR	3904712	ExpressionStatement	"array_init_size ( dst , zend_hash_num_elements ( Z_ARRVAL_P ( src ) ) )"	784:1:22608:22669	3904694	3	True				
ANR	3904713	CallExpression	"array_init_size ( dst , zend_hash_num_elements ( Z_ARRVAL_P ( src ) ) )"		3904694	0					
ANR	3904714	Callee	array_init_size		3904694	0					
ANR	3904715	Identifier	array_init_size		3904694	0					
ANR	3904716	ArgumentList	dst		3904694	1					
ANR	3904717	Argument	dst		3904694	0					
ANR	3904718	Identifier	dst		3904694	0					
ANR	3904719	Argument	zend_hash_num_elements ( Z_ARRVAL_P ( src ) )		3904694	1					
ANR	3904720	CallExpression	zend_hash_num_elements ( Z_ARRVAL_P ( src ) )		3904694	0					
ANR	3904721	Callee	zend_hash_num_elements		3904694	0					
ANR	3904722	Identifier	zend_hash_num_elements		3904694	0					
ANR	3904723	ArgumentList	Z_ARRVAL_P ( src )		3904694	1					
ANR	3904724	Argument	Z_ARRVAL_P ( src )		3904694	0					
ANR	3904725	CallExpression	Z_ARRVAL_P ( src )		3904694	0					
ANR	3904726	Callee	Z_ARRVAL_P		3904694	0					
ANR	3904727	Identifier	Z_ARRVAL_P		3904694	0					
ANR	3904728	ArgumentList	src		3904694	1					
ANR	3904729	Argument	src		3904694	0					
ANR	3904730	Identifier	src		3904694	0					
ANR	3904731	Statement	ZEND_HASH_FOREACH_KEY_VAL_IND	785:1:22672:22700	3904694	4	True				
ANR	3904732	Statement	(	785:30:22701:22701	3904694	5	True				
ANR	3904733	Statement	Z_ARRVAL_P	785:31:22702:22711	3904694	6	True				
ANR	3904734	Statement	(	785:41:22712:22712	3904694	7	True				
ANR	3904735	Statement	src	785:42:22713:22715	3904694	8	True				
ANR	3904736	Statement	)	785:45:22716:22716	3904694	9	True				
ANR	3904737	Statement	","	785:46:22717:22717	3904694	10	True				
ANR	3904738	Statement	idx	785:48:22719:22721	3904694	11	True				
ANR	3904739	Statement	","	785:51:22722:22722	3904694	12	True				
ANR	3904740	Statement	key	785:53:22724:22726	3904694	13	True				
ANR	3904741	Statement	","	785:56:22727:22727	3904694	14	True				
ANR	3904742	Statement	val	785:58:22729:22731	3904694	15	True				
ANR	3904743	Statement	)	785:61:22732:22732	3904694	16	True				
ANR	3904744	CompoundStatement		7:63:187:187	3904694	17					
ANR	3904745	ExpressionStatement	ZVAL_DEREF ( val )	787:2:22787:22802	3904694	0	True				
ANR	3904746	CallExpression	ZVAL_DEREF ( val )		3904694	0					
ANR	3904747	Callee	ZVAL_DEREF		3904694	0					
ANR	3904748	Identifier	ZVAL_DEREF		3904694	0					
ANR	3904749	ArgumentList	val		3904694	1					
ANR	3904750	Argument	val		3904694	0					
ANR	3904751	Identifier	val		3904694	0					
ANR	3904752	IfStatement	if ( key )		3904694	1					
ANR	3904753	Condition	key	788:6:22810:22812	3904694	0	True				
ANR	3904754	Identifier	key		3904694	0					
ANR	3904755	CompoundStatement		10:11:268:268	3904694	1					
ANR	3904756	ExpressionStatement	"new_val = zend_hash_add_new ( Z_ARRVAL_P ( dst ) , key , val )"	789:3:22820:22874	3904694	0	True				
ANR	3904757	AssignmentExpression	"new_val = zend_hash_add_new ( Z_ARRVAL_P ( dst ) , key , val )"		3904694	0		=			
ANR	3904758	Identifier	new_val		3904694	0					
ANR	3904759	CallExpression	"zend_hash_add_new ( Z_ARRVAL_P ( dst ) , key , val )"		3904694	1					
ANR	3904760	Callee	zend_hash_add_new		3904694	0					
ANR	3904761	Identifier	zend_hash_add_new		3904694	0					
ANR	3904762	ArgumentList	Z_ARRVAL_P ( dst )		3904694	1					
ANR	3904763	Argument	Z_ARRVAL_P ( dst )		3904694	0					
ANR	3904764	CallExpression	Z_ARRVAL_P ( dst )		3904694	0					
ANR	3904765	Callee	Z_ARRVAL_P		3904694	0					
ANR	3904766	Identifier	Z_ARRVAL_P		3904694	0					
ANR	3904767	ArgumentList	dst		3904694	1					
ANR	3904768	Argument	dst		3904694	0					
ANR	3904769	Identifier	dst		3904694	0					
ANR	3904770	Argument	key		3904694	1					
ANR	3904771	Identifier	key		3904694	0					
ANR	3904772	Argument	val		3904694	2					
ANR	3904773	Identifier	val		3904694	0					
ANR	3904774	ElseStatement	else		3904694	0					
ANR	3904775	CompoundStatement		12:9:338:338	3904694	0					
ANR	3904776	ExpressionStatement	"new_val = zend_hash_index_add_new ( Z_ARRVAL_P ( dst ) , idx , val )"	791:3:22890:22950	3904694	0	True				
ANR	3904777	AssignmentExpression	"new_val = zend_hash_index_add_new ( Z_ARRVAL_P ( dst ) , idx , val )"		3904694	0		=			
ANR	3904778	Identifier	new_val		3904694	0					
ANR	3904779	CallExpression	"zend_hash_index_add_new ( Z_ARRVAL_P ( dst ) , idx , val )"		3904694	1					
ANR	3904780	Callee	zend_hash_index_add_new		3904694	0					
ANR	3904781	Identifier	zend_hash_index_add_new		3904694	0					
ANR	3904782	ArgumentList	Z_ARRVAL_P ( dst )		3904694	1					
ANR	3904783	Argument	Z_ARRVAL_P ( dst )		3904694	0					
ANR	3904784	CallExpression	Z_ARRVAL_P ( dst )		3904694	0					
ANR	3904785	Callee	Z_ARRVAL_P		3904694	0					
ANR	3904786	Identifier	Z_ARRVAL_P		3904694	0					
ANR	3904787	ArgumentList	dst		3904694	1					
ANR	3904788	Argument	dst		3904694	0					
ANR	3904789	Identifier	dst		3904694	0					
ANR	3904790	Argument	idx		3904694	1					
ANR	3904791	Identifier	idx		3904694	0					
ANR	3904792	Argument	val		3904694	2					
ANR	3904793	Identifier	val		3904694	0					
ANR	3904794	IfStatement	if ( Z_TYPE_P ( val ) == IS_ARRAY )		3904694	2					
ANR	3904795	Condition	Z_TYPE_P ( val ) == IS_ARRAY	793:6:22962:22986	3904694	0	True				
ANR	3904796	EqualityExpression	Z_TYPE_P ( val ) == IS_ARRAY		3904694	0		==			
ANR	3904797	CallExpression	Z_TYPE_P ( val )		3904694	0					
ANR	3904798	Callee	Z_TYPE_P		3904694	0					
ANR	3904799	Identifier	Z_TYPE_P		3904694	0					
ANR	3904800	ArgumentList	val		3904694	1					
ANR	3904801	Argument	val		3904694	0					
ANR	3904802	Identifier	val		3904694	0					
ANR	3904803	Identifier	IS_ARRAY		3904694	1					
ANR	3904804	CompoundStatement		15:33:442:442	3904694	1					
ANR	3904805	IfStatement	if ( ! Z_IMMUTABLE_P ( val ) )		3904694	0					
ANR	3904806	Condition	! Z_IMMUTABLE_P ( val )	794:7:22998:23016	3904694	0	True				
ANR	3904807	UnaryOperationExpression	! Z_IMMUTABLE_P ( val )		3904694	0					
ANR	3904808	UnaryOperator	!		3904694	0					
ANR	3904809	CallExpression	Z_IMMUTABLE_P ( val )		3904694	1					
ANR	3904810	Callee	Z_IMMUTABLE_P		3904694	0					
ANR	3904811	Identifier	Z_IMMUTABLE_P		3904694	0					
ANR	3904812	ArgumentList	val		3904694	1					
ANR	3904813	Argument	val		3904694	0					
ANR	3904814	Identifier	val		3904694	0					
ANR	3904815	CompoundStatement		16:28:472:472	3904694	1					
ANR	3904816	ExpressionStatement	"copy_constant_array ( new_val , val )"	795:4:23025:23058	3904694	0	True				
ANR	3904817	CallExpression	"copy_constant_array ( new_val , val )"		3904694	0					
ANR	3904818	Callee	copy_constant_array		3904694	0					
ANR	3904819	Identifier	copy_constant_array		3904694	0					
ANR	3904820	ArgumentList	new_val		3904694	1					
ANR	3904821	Argument	new_val		3904694	0					
ANR	3904822	Identifier	new_val		3904694	0					
ANR	3904823	Argument	val		3904694	1					
ANR	3904824	Identifier	val		3904694	0					
ANR	3904825	ElseStatement	else		3904694	0					
ANR	3904826	IfStatement	if ( Z_REFCOUNTED_P ( val ) )		3904694	0					
ANR	3904827	Condition	Z_REFCOUNTED_P ( val )	797:13:23078:23096	3904694	0	True				
ANR	3904828	CallExpression	Z_REFCOUNTED_P ( val )		3904694	0					
ANR	3904829	Callee	Z_REFCOUNTED_P		3904694	0					
ANR	3904830	Identifier	Z_REFCOUNTED_P		3904694	0					
ANR	3904831	ArgumentList	val		3904694	1					
ANR	3904832	Argument	val		3904694	0					
ANR	3904833	Identifier	val		3904694	0					
ANR	3904834	CompoundStatement		19:34:552:552	3904694	1					
ANR	3904835	ExpressionStatement	Z_ADDREF_P ( val )	798:3:23104:23119	3904694	0	True				
ANR	3904836	CallExpression	Z_ADDREF_P ( val )		3904694	0					
ANR	3904837	Callee	Z_ADDREF_P		3904694	0					
ANR	3904838	Identifier	Z_ADDREF_P		3904694	0					
ANR	3904839	ArgumentList	val		3904694	1					
ANR	3904840	Argument	val		3904694	0					
ANR	3904841	Identifier	val		3904694	0					
ANR	3904842	IfStatement	if ( UNEXPECTED ( Z_TYPE_INFO_P ( val ) == IS_RESOURCE_EX ) )		3904694	1					
ANR	3904843	Condition	UNEXPECTED ( Z_TYPE_INFO_P ( val ) == IS_RESOURCE_EX )	799:7:23128:23175	3904694	0	True				
ANR	3904844	CallExpression	UNEXPECTED ( Z_TYPE_INFO_P ( val ) == IS_RESOURCE_EX )		3904694	0					
ANR	3904845	Callee	UNEXPECTED		3904694	0					
ANR	3904846	Identifier	UNEXPECTED		3904694	0					
ANR	3904847	ArgumentList	Z_TYPE_INFO_P ( val ) == IS_RESOURCE_EX		3904694	1					
ANR	3904848	Argument	Z_TYPE_INFO_P ( val ) == IS_RESOURCE_EX		3904694	0					
ANR	3904849	EqualityExpression	Z_TYPE_INFO_P ( val ) == IS_RESOURCE_EX		3904694	0		==			
ANR	3904850	CallExpression	Z_TYPE_INFO_P ( val )		3904694	0					
ANR	3904851	Callee	Z_TYPE_INFO_P		3904694	0					
ANR	3904852	Identifier	Z_TYPE_INFO_P		3904694	0					
ANR	3904853	ArgumentList	val		3904694	1					
ANR	3904854	Argument	val		3904694	0					
ANR	3904855	Identifier	val		3904694	0					
ANR	3904856	Identifier	IS_RESOURCE_EX		3904694	1					
ANR	3904857	CompoundStatement		21:57:631:631	3904694	1					
ANR	3904858	ExpressionStatement	Z_TYPE_INFO_P ( new_val ) &= ~ ( IS_TYPE_REFCOUNTED << Z_TYPE_FLAGS_SHIFT )	800:4:23184:23253	3904694	0	True				
ANR	3904859	AssignmentExpression	Z_TYPE_INFO_P ( new_val ) &= ~ ( IS_TYPE_REFCOUNTED << Z_TYPE_FLAGS_SHIFT )		3904694	0		&=			
ANR	3904860	CallExpression	Z_TYPE_INFO_P ( new_val )		3904694	0					
ANR	3904861	Callee	Z_TYPE_INFO_P		3904694	0					
ANR	3904862	Identifier	Z_TYPE_INFO_P		3904694	0					
ANR	3904863	ArgumentList	new_val		3904694	1					
ANR	3904864	Argument	new_val		3904694	0					
ANR	3904865	Identifier	new_val		3904694	0					
ANR	3904866	UnaryOperationExpression	~ ( IS_TYPE_REFCOUNTED << Z_TYPE_FLAGS_SHIFT )		3904694	1					
ANR	3904867	UnaryOperator	~		3904694	0					
ANR	3904868	ShiftExpression	IS_TYPE_REFCOUNTED << Z_TYPE_FLAGS_SHIFT		3904694	1		<<			
ANR	3904869	Identifier	IS_TYPE_REFCOUNTED		3904694	0					
ANR	3904870	Identifier	Z_TYPE_FLAGS_SHIFT		3904694	1					
ANR	3904871	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	803:3:23267:23290	3904694	18	True				
ANR	3904872	CallExpression	ZEND_HASH_FOREACH_END ( )		3904694	0					
ANR	3904873	Callee	ZEND_HASH_FOREACH_END		3904694	0					
ANR	3904874	Identifier	ZEND_HASH_FOREACH_END		3904694	0					
ANR	3904875	ArgumentList			3904694	1					
ANR	3904876	ReturnType	static void		3904694	1					
ANR	3904877	Identifier	copy_constant_array		3904694	2					
ANR	3904878	ParameterList	"zval * dst , zval * src"		3904694	3					
ANR	3904879	Parameter	zval * dst	778:32:22514:22522	3904694	0	True				
ANR	3904880	ParameterType	zval *		3904694	0					
ANR	3904881	Identifier	dst		3904694	1					
ANR	3904882	Parameter	zval * src	778:43:22525:22533	3904694	1	True				
ANR	3904883	ParameterType	zval *		3904694	0					
ANR	3904884	Identifier	src		3904694	1					
ANR	3904885	CFGEntryNode	ENTRY		3904694		True				
ANR	3904886	CFGExitNode	EXIT		3904694		True				
ANR	3904887	Symbol	val		3904694						
ANR	3904888	Symbol	IS_RESOURCE_EX		3904694						
ANR	3904889	Symbol	new_val		3904694						
ANR	3904890	Symbol	dst		3904694						
ANR	3904891	Symbol	src		3904694						
ANR	3904892	Symbol	zend_hash_num_elements		3904694						
ANR	3904893	Symbol	Z_TYPE_FLAGS_SHIFT		3904694						
ANR	3904894	Symbol	zend_hash_add_new		3904694						
ANR	3904895	Symbol	Z_TYPE_P		3904694						
ANR	3904896	Symbol	IS_TYPE_REFCOUNTED		3904694						
ANR	3904897	Symbol	Z_IMMUTABLE_P		3904694						
ANR	3904898	Symbol	Z_TYPE_INFO_P		3904694						
ANR	3904899	Symbol	UNEXPECTED		3904694						
ANR	3904900	Symbol	IS_ARRAY		3904694						
ANR	3904901	Symbol	Z_REFCOUNTED_P		3904694						
ANR	3904902	Symbol	idx		3904694						
ANR	3904903	Symbol	Z_ARRVAL_P		3904694						
ANR	3904904	Symbol	zend_hash_index_add_new		3904694						
ANR	3904905	Symbol	key		3904694						
ANR	3904906	DeclStmt									
ANR	3904907	Decl							zend_string	zend_string *	name
ANR	3904908	DeclStmt									
ANR	3904909	Decl							zval	zval *	val
ANR	3904910	Decl							zval	zval	val_free
ANR	3904911	DeclStmt									
ANR	3904912	Decl							zend_bool	zend_bool	non_cs
ANR	3904913	DeclStmt									
ANR	3904914	Decl							int	int	case_sensitive
ANR	3904915	DeclStmt									
ANR	3904916	Decl							zend_constant	zend_constant	c
ANR	3904917	DeclStmt									
ANR	3904918	Decl							zval	zval	rv
ANR	3904919	DeclStmt									
ANR	3904920	Decl							zend_string	zend_string *	name
ANR	3904921	DeclStmt									
ANR	3904922	Decl							zval	zval *	obj
ANR	3904923	DeclStmt									
ANR	3904924	Decl							zend_class_entry	zend_class_entry *	called_scope
ANR	3904925	DeclStmt									
ANR	3904926	Decl							zval	zval *	arg
ANR	3904927	DeclStmt									
ANR	3904928	Decl							zend_class_entry	zend_class_entry *	ce
ANR	3904929	DeclStmt									
ANR	3904930	Decl							zval	zval *	obj
ANR	3904931	DeclStmt									
ANR	3904932	Decl							zend_string	zend_string *	class_name
ANR	3904933	DeclStmt									
ANR	3904934	Decl							zend_class_entry	zend_class_entry *	instance_ce
ANR	3904935	DeclStmt									
ANR	3904936	Decl							zend_class_entry	zend_class_entry *	ce
ANR	3904937	DeclStmt									
ANR	3904938	Decl							zend_bool	zend_bool	allow_string
ANR	3904939	DeclStmt									
ANR	3904940	Decl							zend_bool	zend_bool	retval
ANR	3904941	Function	add_class_vars	1079:0:29830:31246							
ANR	3904942	FunctionDef	"add_class_vars (zend_class_entry * ce , int statics , zval * return_value)"		3904941	0					
ANR	3904943	CompoundStatement		1080:0:29912:31246	3904941	0					
ANR	3904944	IdentifierDeclStatement	zend_property_info * prop_info ;	1081:1:29915:29944	3904941	0	True				
ANR	3904945	IdentifierDecl	* prop_info		3904941	0					
ANR	3904946	IdentifierDeclType	zend_property_info *		3904941	0					
ANR	3904947	Identifier	prop_info		3904941	1					
ANR	3904948	IdentifierDeclStatement	"zval * prop , prop_copy ;"	1082:1:29947:29968	3904941	1	True				
ANR	3904949	IdentifierDecl	* prop		3904941	0					
ANR	3904950	IdentifierDeclType	zval *		3904941	0					
ANR	3904951	Identifier	prop		3904941	1					
ANR	3904952	IdentifierDecl	prop_copy		3904941	1					
ANR	3904953	IdentifierDeclType	zval		3904941	0					
ANR	3904954	Identifier	prop_copy		3904941	1					
ANR	3904955	IdentifierDeclStatement	zend_string * key ;	1083:1:29971:29987	3904941	2	True				
ANR	3904956	IdentifierDecl	* key		3904941	0					
ANR	3904957	IdentifierDeclType	zend_string *		3904941	0					
ANR	3904958	Identifier	key		3904941	1					
ANR	3904959	Statement	ZEND_HASH_FOREACH_STR_KEY_PTR	1085:1:29991:30019	3904941	3	True				
ANR	3904960	Statement	(	1085:30:30020:30020	3904941	4	True				
ANR	3904961	Statement	&	1085:31:30021:30021	3904941	5	True				
ANR	3904962	Statement	ce	1085:32:30022:30023	3904941	6	True				
ANR	3904963	Statement	->	1085:34:30024:30025	3904941	7	True				
ANR	3904964	Statement	properties_info	1085:36:30026:30040	3904941	8	True				
ANR	3904965	Statement	","	1085:51:30041:30041	3904941	9	True				
ANR	3904966	Statement	key	1085:53:30043:30045	3904941	10	True				
ANR	3904967	Statement	","	1085:56:30046:30046	3904941	11	True				
ANR	3904968	Statement	prop_info	1085:58:30048:30056	3904941	12	True				
ANR	3904969	Statement	)	1085:67:30057:30057	3904941	13	True				
ANR	3904970	CompoundStatement		6:69:146:146	3904941	14					
ANR	3904971	IfStatement	"if ( ( ( prop_info -> flags & ZEND_ACC_SHADOW ) && prop_info -> ce != EG ( scope ) ) || ( ( prop_info -> flags & ZEND_ACC_PROTECTED ) && ! zend_check_protected ( prop_info -> ce , EG ( scope ) ) ) || ( ( prop_info -> flags & ZEND_ACC_PRIVATE ) && ce != EG ( scope ) && prop_info -> ce != EG ( scope ) ) )"		3904941	0					
ANR	3904972	Condition	"( ( prop_info -> flags & ZEND_ACC_SHADOW ) && prop_info -> ce != EG ( scope ) ) || ( ( prop_info -> flags & ZEND_ACC_PROTECTED ) && ! zend_check_protected ( prop_info -> ce , EG ( scope ) ) ) || ( ( prop_info -> flags & ZEND_ACC_PRIVATE ) && ce != EG ( scope ) && prop_info -> ce != EG ( scope ) )"	1086:6:30067:30361	3904941	0	True				
ANR	3904973	OrExpression	"( ( prop_info -> flags & ZEND_ACC_SHADOW ) && prop_info -> ce != EG ( scope ) ) || ( ( prop_info -> flags & ZEND_ACC_PROTECTED ) && ! zend_check_protected ( prop_info -> ce , EG ( scope ) ) ) || ( ( prop_info -> flags & ZEND_ACC_PRIVATE ) && ce != EG ( scope ) && prop_info -> ce != EG ( scope ) )"		3904941	0		||			
ANR	3904974	AndExpression	( prop_info -> flags & ZEND_ACC_SHADOW ) && prop_info -> ce != EG ( scope )		3904941	0		&&			
ANR	3904975	BitAndExpression	prop_info -> flags & ZEND_ACC_SHADOW		3904941	0		&			
ANR	3904976	PtrMemberAccess	prop_info -> flags		3904941	0					
ANR	3904977	Identifier	prop_info		3904941	0					
ANR	3904978	Identifier	flags		3904941	1					
ANR	3904979	Identifier	ZEND_ACC_SHADOW		3904941	1					
ANR	3904980	EqualityExpression	prop_info -> ce != EG ( scope )		3904941	1		!=			
ANR	3904981	PtrMemberAccess	prop_info -> ce		3904941	0					
ANR	3904982	Identifier	prop_info		3904941	0					
ANR	3904983	Identifier	ce		3904941	1					
ANR	3904984	CallExpression	EG ( scope )		3904941	1					
ANR	3904985	Callee	EG		3904941	0					
ANR	3904986	Identifier	EG		3904941	0					
ANR	3904987	ArgumentList	scope		3904941	1					
ANR	3904988	Argument	scope		3904941	0					
ANR	3904989	Identifier	scope		3904941	0					
ANR	3904990	OrExpression	"( ( prop_info -> flags & ZEND_ACC_PROTECTED ) && ! zend_check_protected ( prop_info -> ce , EG ( scope ) ) ) || ( ( prop_info -> flags & ZEND_ACC_PRIVATE ) && ce != EG ( scope ) && prop_info -> ce != EG ( scope ) )"		3904941	1		||			
ANR	3904991	AndExpression	"( prop_info -> flags & ZEND_ACC_PROTECTED ) && ! zend_check_protected ( prop_info -> ce , EG ( scope ) )"		3904941	0		&&			
ANR	3904992	BitAndExpression	prop_info -> flags & ZEND_ACC_PROTECTED		3904941	0		&			
ANR	3904993	PtrMemberAccess	prop_info -> flags		3904941	0					
ANR	3904994	Identifier	prop_info		3904941	0					
ANR	3904995	Identifier	flags		3904941	1					
ANR	3904996	Identifier	ZEND_ACC_PROTECTED		3904941	1					
ANR	3904997	UnaryOperationExpression	"! zend_check_protected ( prop_info -> ce , EG ( scope ) )"		3904941	1					
ANR	3904998	UnaryOperator	!		3904941	0					
ANR	3904999	CallExpression	"zend_check_protected ( prop_info -> ce , EG ( scope ) )"		3904941	1					
ANR	3905000	Callee	zend_check_protected		3904941	0					
ANR	3905001	Identifier	zend_check_protected		3904941	0					
ANR	3905002	ArgumentList	prop_info -> ce		3904941	1					
ANR	3905003	Argument	prop_info -> ce		3904941	0					
ANR	3905004	PtrMemberAccess	prop_info -> ce		3904941	0					
ANR	3905005	Identifier	prop_info		3904941	0					
ANR	3905006	Identifier	ce		3904941	1					
ANR	3905007	Argument	EG ( scope )		3904941	1					
ANR	3905008	CallExpression	EG ( scope )		3904941	0					
ANR	3905009	Callee	EG		3904941	0					
ANR	3905010	Identifier	EG		3904941	0					
ANR	3905011	ArgumentList	scope		3904941	1					
ANR	3905012	Argument	scope		3904941	0					
ANR	3905013	Identifier	scope		3904941	0					
ANR	3905014	AndExpression	( prop_info -> flags & ZEND_ACC_PRIVATE ) && ce != EG ( scope ) && prop_info -> ce != EG ( scope )		3904941	1		&&			
ANR	3905015	BitAndExpression	prop_info -> flags & ZEND_ACC_PRIVATE		3904941	0		&			
ANR	3905016	PtrMemberAccess	prop_info -> flags		3904941	0					
ANR	3905017	Identifier	prop_info		3904941	0					
ANR	3905018	Identifier	flags		3904941	1					
ANR	3905019	Identifier	ZEND_ACC_PRIVATE		3904941	1					
ANR	3905020	AndExpression	ce != EG ( scope ) && prop_info -> ce != EG ( scope )		3904941	1		&&			
ANR	3905021	EqualityExpression	ce != EG ( scope )		3904941	0		!=			
ANR	3905022	Identifier	ce		3904941	0					
ANR	3905023	CallExpression	EG ( scope )		3904941	1					
ANR	3905024	Callee	EG		3904941	0					
ANR	3905025	Identifier	EG		3904941	0					
ANR	3905026	ArgumentList	scope		3904941	1					
ANR	3905027	Argument	scope		3904941	0					
ANR	3905028	Identifier	scope		3904941	0					
ANR	3905029	EqualityExpression	prop_info -> ce != EG ( scope )		3904941	1		!=			
ANR	3905030	PtrMemberAccess	prop_info -> ce		3904941	0					
ANR	3905031	Identifier	prop_info		3904941	0					
ANR	3905032	Identifier	ce		3904941	1					
ANR	3905033	CallExpression	EG ( scope )		3904941	1					
ANR	3905034	Callee	EG		3904941	0					
ANR	3905035	Identifier	EG		3904941	0					
ANR	3905036	ArgumentList	scope		3904941	1					
ANR	3905037	Argument	scope		3904941	0					
ANR	3905038	Identifier	scope		3904941	0					
ANR	3905039	CompoundStatement		13:34:451:451	3904941	1					
ANR	3905040	ContinueStatement	continue ;	1093:3:30369:30377	3904941	0	True				
ANR	3905041	ExpressionStatement	prop = NULL	1095:2:30385:30396	3904941	1	True				
ANR	3905042	AssignmentExpression	prop = NULL		3904941	0		=			
ANR	3905043	Identifier	prop		3904941	0					
ANR	3905044	Identifier	NULL		3904941	1					
ANR	3905045	IfStatement	if ( statics && ( prop_info -> flags & ZEND_ACC_STATIC ) != 0 )		3904941	2					
ANR	3905046	Condition	statics && ( prop_info -> flags & ZEND_ACC_STATIC ) != 0	1096:6:30404:30455	3904941	0	True				
ANR	3905047	AndExpression	statics && ( prop_info -> flags & ZEND_ACC_STATIC ) != 0		3904941	0		&&			
ANR	3905048	Identifier	statics		3904941	0					
ANR	3905049	EqualityExpression	( prop_info -> flags & ZEND_ACC_STATIC ) != 0		3904941	1		!=			
ANR	3905050	BitAndExpression	prop_info -> flags & ZEND_ACC_STATIC		3904941	0		&			
ANR	3905051	PtrMemberAccess	prop_info -> flags		3904941	0					
ANR	3905052	Identifier	prop_info		3904941	0					
ANR	3905053	Identifier	flags		3904941	1					
ANR	3905054	Identifier	ZEND_ACC_STATIC		3904941	1					
ANR	3905055	PrimaryExpression	0		3904941	1					
ANR	3905056	CompoundStatement		17:60:545:545	3904941	1					
ANR	3905057	ExpressionStatement	prop = & ce -> default_static_members_table [ prop_info -> offset ]	1097:3:30463:30522	3904941	0	True				
ANR	3905058	AssignmentExpression	prop = & ce -> default_static_members_table [ prop_info -> offset ]		3904941	0		=			
ANR	3905059	Identifier	prop		3904941	0					
ANR	3905060	UnaryOperationExpression	& ce -> default_static_members_table [ prop_info -> offset ]		3904941	1					
ANR	3905061	UnaryOperator	&		3904941	0					
ANR	3905062	ArrayIndexing	ce -> default_static_members_table [ prop_info -> offset ]		3904941	1					
ANR	3905063	PtrMemberAccess	ce -> default_static_members_table		3904941	0					
ANR	3905064	Identifier	ce		3904941	0					
ANR	3905065	Identifier	default_static_members_table		3904941	1					
ANR	3905066	PtrMemberAccess	prop_info -> offset		3904941	1					
ANR	3905067	Identifier	prop_info		3904941	0					
ANR	3905068	Identifier	offset		3904941	1					
ANR	3905069	ElseStatement	else		3904941	0					
ANR	3905070	IfStatement	if ( ! statics && ( prop_info -> flags & ZEND_ACC_STATIC ) == 0 )		3904941	0					
ANR	3905071	Condition	! statics && ( prop_info -> flags & ZEND_ACC_STATIC ) == 0	1098:13:30537:30589	3904941	0	True				
ANR	3905072	AndExpression	! statics && ( prop_info -> flags & ZEND_ACC_STATIC ) == 0		3904941	0		&&			
ANR	3905073	UnaryOperationExpression	! statics		3904941	0					
ANR	3905074	UnaryOperator	!		3904941	0					
ANR	3905075	Identifier	statics		3904941	1					
ANR	3905076	EqualityExpression	( prop_info -> flags & ZEND_ACC_STATIC ) == 0		3904941	1		==			
ANR	3905077	BitAndExpression	prop_info -> flags & ZEND_ACC_STATIC		3904941	0		&			
ANR	3905078	PtrMemberAccess	prop_info -> flags		3904941	0					
ANR	3905079	Identifier	prop_info		3904941	0					
ANR	3905080	Identifier	flags		3904941	1					
ANR	3905081	Identifier	ZEND_ACC_STATIC		3904941	1					
ANR	3905082	PrimaryExpression	0		3904941	1					
ANR	3905083	CompoundStatement		19:68:679:679	3904941	1					
ANR	3905084	ExpressionStatement	prop = & ce -> default_properties_table [ OBJ_PROP_TO_NUM ( prop_info -> offset ) ]	1099:3:30597:30669	3904941	0	True				
ANR	3905085	AssignmentExpression	prop = & ce -> default_properties_table [ OBJ_PROP_TO_NUM ( prop_info -> offset ) ]		3904941	0		=			
ANR	3905086	Identifier	prop		3904941	0					
ANR	3905087	UnaryOperationExpression	& ce -> default_properties_table [ OBJ_PROP_TO_NUM ( prop_info -> offset ) ]		3904941	1					
ANR	3905088	UnaryOperator	&		3904941	0					
ANR	3905089	ArrayIndexing	ce -> default_properties_table [ OBJ_PROP_TO_NUM ( prop_info -> offset ) ]		3904941	1					
ANR	3905090	PtrMemberAccess	ce -> default_properties_table		3904941	0					
ANR	3905091	Identifier	ce		3904941	0					
ANR	3905092	Identifier	default_properties_table		3904941	1					
ANR	3905093	CallExpression	OBJ_PROP_TO_NUM ( prop_info -> offset )		3904941	1					
ANR	3905094	Callee	OBJ_PROP_TO_NUM		3904941	0					
ANR	3905095	Identifier	OBJ_PROP_TO_NUM		3904941	0					
ANR	3905096	ArgumentList	prop_info -> offset		3904941	1					
ANR	3905097	Argument	prop_info -> offset		3904941	0					
ANR	3905098	PtrMemberAccess	prop_info -> offset		3904941	0					
ANR	3905099	Identifier	prop_info		3904941	0					
ANR	3905100	Identifier	offset		3904941	1					
ANR	3905101	IfStatement	if ( ! prop || Z_TYPE_P ( prop ) == IS_UNDEF )		3904941	3					
ANR	3905102	Condition	! prop || Z_TYPE_P ( prop ) == IS_UNDEF	1101:6:30681:30715	3904941	0	True				
ANR	3905103	OrExpression	! prop || Z_TYPE_P ( prop ) == IS_UNDEF		3904941	0		||			
ANR	3905104	UnaryOperationExpression	! prop		3904941	0					
ANR	3905105	UnaryOperator	!		3904941	0					
ANR	3905106	Identifier	prop		3904941	1					
ANR	3905107	EqualityExpression	Z_TYPE_P ( prop ) == IS_UNDEF		3904941	1		==			
ANR	3905108	CallExpression	Z_TYPE_P ( prop )		3904941	0					
ANR	3905109	Callee	Z_TYPE_P		3904941	0					
ANR	3905110	Identifier	Z_TYPE_P		3904941	0					
ANR	3905111	ArgumentList	prop		3904941	1					
ANR	3905112	Argument	prop		3904941	0					
ANR	3905113	Identifier	prop		3904941	0					
ANR	3905114	Identifier	IS_UNDEF		3904941	1					
ANR	3905115	CompoundStatement		22:43:805:805	3904941	1					
ANR	3905116	ContinueStatement	continue ;	1102:3:30723:30731	3904941	0	True				
ANR	3905117	ExpressionStatement	ZVAL_DEREF ( prop )	1106:2:30779:30795	3904941	4	True				
ANR	3905118	CallExpression	ZVAL_DEREF ( prop )		3904941	0					
ANR	3905119	Callee	ZVAL_DEREF		3904941	0					
ANR	3905120	Identifier	ZVAL_DEREF		3904941	0					
ANR	3905121	ArgumentList	prop		3904941	1					
ANR	3905122	Argument	prop		3904941	0					
ANR	3905123	Identifier	prop		3904941	0					
ANR	3905124	IfStatement	if ( UNEXPECTED ( Z_COPYABLE_P ( prop ) ) )		3904941	5					
ANR	3905125	Condition	UNEXPECTED ( Z_COPYABLE_P ( prop ) )	1107:6:30803:30832	3904941	0	True				
ANR	3905126	CallExpression	UNEXPECTED ( Z_COPYABLE_P ( prop ) )		3904941	0					
ANR	3905127	Callee	UNEXPECTED		3904941	0					
ANR	3905128	Identifier	UNEXPECTED		3904941	0					
ANR	3905129	ArgumentList	Z_COPYABLE_P ( prop )		3904941	1					
ANR	3905130	Argument	Z_COPYABLE_P ( prop )		3904941	0					
ANR	3905131	CallExpression	Z_COPYABLE_P ( prop )		3904941	0					
ANR	3905132	Callee	Z_COPYABLE_P		3904941	0					
ANR	3905133	Identifier	Z_COPYABLE_P		3904941	0					
ANR	3905134	ArgumentList	prop		3904941	1					
ANR	3905135	Argument	prop		3904941	0					
ANR	3905136	Identifier	prop		3904941	0					
ANR	3905137	CompoundStatement		28:38:922:922	3904941	1					
ANR	3905138	ExpressionStatement	"ZVAL_DUP ( & prop_copy , prop )"	1108:3:30840:30866	3904941	0	True				
ANR	3905139	CallExpression	"ZVAL_DUP ( & prop_copy , prop )"		3904941	0					
ANR	3905140	Callee	ZVAL_DUP		3904941	0					
ANR	3905141	Identifier	ZVAL_DUP		3904941	0					
ANR	3905142	ArgumentList	& prop_copy		3904941	1					
ANR	3905143	Argument	& prop_copy		3904941	0					
ANR	3905144	UnaryOperationExpression	& prop_copy		3904941	0					
ANR	3905145	UnaryOperator	&		3904941	0					
ANR	3905146	Identifier	prop_copy		3904941	1					
ANR	3905147	Argument	prop		3904941	1					
ANR	3905148	Identifier	prop		3904941	0					
ANR	3905149	ExpressionStatement	prop = & prop_copy	1109:3:30871:30888	3904941	1	True				
ANR	3905150	AssignmentExpression	prop = & prop_copy		3904941	0		=			
ANR	3905151	Identifier	prop		3904941	0					
ANR	3905152	UnaryOperationExpression	& prop_copy		3904941	1					
ANR	3905153	UnaryOperator	&		3904941	0					
ANR	3905154	Identifier	prop_copy		3904941	1					
ANR	3905155	ElseStatement	else		3904941	0					
ANR	3905156	CompoundStatement		31:9:986:986	3904941	0					
ANR	3905157	ExpressionStatement	Z_TRY_ADDREF_P ( prop )	1111:3:30904:30924	3904941	0	True				
ANR	3905158	CallExpression	Z_TRY_ADDREF_P ( prop )		3904941	0					
ANR	3905159	Callee	Z_TRY_ADDREF_P		3904941	0					
ANR	3905160	Identifier	Z_TRY_ADDREF_P		3904941	0					
ANR	3905161	ArgumentList	prop		3904941	1					
ANR	3905162	Argument	prop		3904941	0					
ANR	3905163	Identifier	prop		3904941	0					
ANR	3905164	IfStatement	if ( Z_OPT_CONSTANT_P ( prop ) )		3904941	6					
ANR	3905165	Condition	Z_OPT_CONSTANT_P ( prop )	1116:6:31040:31061	3904941	0	True				
ANR	3905166	CallExpression	Z_OPT_CONSTANT_P ( prop )		3904941	0					
ANR	3905167	Callee	Z_OPT_CONSTANT_P		3904941	0					
ANR	3905168	Identifier	Z_OPT_CONSTANT_P		3904941	0					
ANR	3905169	ArgumentList	prop		3904941	1					
ANR	3905170	Argument	prop		3904941	0					
ANR	3905171	Identifier	prop		3904941	0					
ANR	3905172	CompoundStatement		37:30:1151:1151	3904941	1					
ANR	3905173	IfStatement	"if ( UNEXPECTED ( zval_update_constant_ex ( prop , 0 , NULL ) != SUCCESS ) )"		3904941	0					
ANR	3905174	Condition	"UNEXPECTED ( zval_update_constant_ex ( prop , 0 , NULL ) != SUCCESS )"	1117:7:31073:31133	3904941	0	True				
ANR	3905175	CallExpression	"UNEXPECTED ( zval_update_constant_ex ( prop , 0 , NULL ) != SUCCESS )"		3904941	0					
ANR	3905176	Callee	UNEXPECTED		3904941	0					
ANR	3905177	Identifier	UNEXPECTED		3904941	0					
ANR	3905178	ArgumentList	"zval_update_constant_ex ( prop , 0 , NULL ) != SUCCESS"		3904941	1					
ANR	3905179	Argument	"zval_update_constant_ex ( prop , 0 , NULL ) != SUCCESS"		3904941	0					
ANR	3905180	EqualityExpression	"zval_update_constant_ex ( prop , 0 , NULL ) != SUCCESS"		3904941	0		!=			
ANR	3905181	CallExpression	"zval_update_constant_ex ( prop , 0 , NULL )"		3904941	0					
ANR	3905182	Callee	zval_update_constant_ex		3904941	0					
ANR	3905183	Identifier	zval_update_constant_ex		3904941	0					
ANR	3905184	ArgumentList	prop		3904941	1					
ANR	3905185	Argument	prop		3904941	0					
ANR	3905186	Identifier	prop		3904941	0					
ANR	3905187	Argument	0		3904941	1					
ANR	3905188	PrimaryExpression	0		3904941	0					
ANR	3905189	Argument	NULL		3904941	2					
ANR	3905190	Identifier	NULL		3904941	0					
ANR	3905191	Identifier	SUCCESS		3904941	1					
ANR	3905192	CompoundStatement		38:70:1223:1223	3904941	1					
ANR	3905193	ReturnStatement	return ;	1118:4:31142:31148	3904941	0	True				
ANR	3905194	ExpressionStatement	"zend_hash_add_new ( Z_ARRVAL_P ( return_value ) , key , prop )"	1122:2:31162:31216	3904941	7	True				
ANR	3905195	CallExpression	"zend_hash_add_new ( Z_ARRVAL_P ( return_value ) , key , prop )"		3904941	0					
ANR	3905196	Callee	zend_hash_add_new		3904941	0					
ANR	3905197	Identifier	zend_hash_add_new		3904941	0					
ANR	3905198	ArgumentList	Z_ARRVAL_P ( return_value )		3904941	1					
ANR	3905199	Argument	Z_ARRVAL_P ( return_value )		3904941	0					
ANR	3905200	CallExpression	Z_ARRVAL_P ( return_value )		3904941	0					
ANR	3905201	Callee	Z_ARRVAL_P		3904941	0					
ANR	3905202	Identifier	Z_ARRVAL_P		3904941	0					
ANR	3905203	ArgumentList	return_value		3904941	1					
ANR	3905204	Argument	return_value		3904941	0					
ANR	3905205	Identifier	return_value		3904941	0					
ANR	3905206	Argument	key		3904941	1					
ANR	3905207	Identifier	key		3904941	0					
ANR	3905208	Argument	prop		3904941	2					
ANR	3905209	Identifier	prop		3904941	0					
ANR	3905210	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1123:3:31221:31244	3904941	15	True				
ANR	3905211	CallExpression	ZEND_HASH_FOREACH_END ( )		3904941	0					
ANR	3905212	Callee	ZEND_HASH_FOREACH_END		3904941	0					
ANR	3905213	Identifier	ZEND_HASH_FOREACH_END		3904941	0					
ANR	3905214	ArgumentList			3904941	1					
ANR	3905215	ReturnType	static void		3904941	1					
ANR	3905216	Identifier	add_class_vars		3904941	2					
ANR	3905217	ParameterList	"zend_class_entry * ce , int statics , zval * return_value"		3904941	3					
ANR	3905218	Parameter	zend_class_entry * ce	1079:27:29857:29876	3904941	0	True				
ANR	3905219	ParameterType	zend_class_entry *		3904941	0					
ANR	3905220	Identifier	ce		3904941	1					
ANR	3905221	Parameter	int statics	1079:49:29879:29889	3904941	1	True				
ANR	3905222	ParameterType	int		3904941	0					
ANR	3905223	Identifier	statics		3904941	1					
ANR	3905224	Parameter	zval * return_value	1079:62:29892:29909	3904941	2	True				
ANR	3905225	ParameterType	zval *		3904941	0					
ANR	3905226	Identifier	return_value		3904941	1					
ANR	3905227	CFGEntryNode	ENTRY		3904941		True				
ANR	3905228	CFGExitNode	EXIT		3904941		True				
ANR	3905229	CFGErrorNode	ERROR		3904941		True				
ANR	3905230	Symbol	Z_OPT_CONSTANT_P		3904941						
ANR	3905231	Symbol	return_value		3904941						
ANR	3905232	Symbol	prop_copy		3904941						
ANR	3905233	Symbol	* ce		3904941						
ANR	3905234	Symbol	UNEXPECTED		3904941						
ANR	3905235	Symbol	ZEND_ACC_SHADOW		3904941						
ANR	3905236	Symbol	prop_info -> offset		3904941						
ANR	3905237	Symbol	prop		3904941						
ANR	3905238	Symbol	scope		3904941						
ANR	3905239	Symbol	ZEND_ACC_PROTECTED		3904941						
ANR	3905240	Symbol	ZEND_ACC_STATIC		3904941						
ANR	3905241	Symbol	* prop_info		3904941						
ANR	3905242	Symbol	Z_ARRVAL_P		3904941						
ANR	3905243	Symbol	key		3904941						
ANR	3905244	Symbol	IS_UNDEF		3904941						
ANR	3905245	Symbol	prop_info		3904941						
ANR	3905246	Symbol	OBJ_PROP_TO_NUM		3904941						
ANR	3905247	Symbol	ce		3904941						
ANR	3905248	Symbol	EG		3904941						
ANR	3905249	Symbol	NULL		3904941						
ANR	3905250	Symbol	SUCCESS		3904941						
ANR	3905251	Symbol	& prop_copy		3904941						
ANR	3905252	Symbol	Z_COPYABLE_P		3904941						
ANR	3905253	Symbol	ce -> default_properties_table		3904941						
ANR	3905254	Symbol	Z_TYPE_P		3904941						
ANR	3905255	Symbol	ce -> default_static_members_table		3904941						
ANR	3905256	Symbol	statics		3904941						
ANR	3905257	Symbol	ZEND_ACC_PRIVATE		3904941						
ANR	3905258	Symbol	prop_info -> flags		3904941						
ANR	3905259	Symbol	prop_info -> ce		3904941						
ANR	3905260	Symbol	zend_check_protected		3904941						
ANR	3905261	Symbol	zval_update_constant_ex		3904941						
ANR	3905262	DeclStmt									
ANR	3905263	Decl							zend_string	zend_string *	class_name
ANR	3905264	DeclStmt									
ANR	3905265	Decl							zend_class_entry	zend_class_entry *	ce
ANR	3905266	DeclStmt									
ANR	3905267	Decl							zval	zval *	obj
ANR	3905268	DeclStmt									
ANR	3905269	Decl							zval	zval *	value
ANR	3905270	DeclStmt									
ANR	3905271	Decl							HashTable	HashTable *	properties
ANR	3905272	DeclStmt									
ANR	3905273	Decl							zend_string	zend_string *	key
ANR	3905274	DeclStmt									
ANR	3905275	Decl							zend_object	zend_object *	zobj
ANR	3905276	DeclStmt									
ANR	3905277	Decl							const char	const char *	prop_name
ANR	3905278	Decl							const char	const char *	class_name
ANR	3905279	DeclStmt									
ANR	3905280	Decl							size_t	size_t	prop_len
ANR	3905281	Function	same_name	1218:0:33530:33871							
ANR	3905282	FunctionDef	"same_name (zend_string * key , zend_string * name)"		3905281	0					
ANR	3905283	CompoundStatement		1219:0:33598:33871	3905281	0					
ANR	3905284	IdentifierDeclStatement	zend_string * lcname ;	1220:1:33601:33620	3905281	0	True				
ANR	3905285	IdentifierDecl	* lcname		3905281	0					
ANR	3905286	IdentifierDeclType	zend_string *		3905281	0					
ANR	3905287	Identifier	lcname		3905281	1					
ANR	3905288	IdentifierDeclStatement	int ret ;	1221:1:33623:33630	3905281	1	True				
ANR	3905289	IdentifierDecl	ret		3905281	0					
ANR	3905290	IdentifierDeclType	int		3905281	0					
ANR	3905291	Identifier	ret		3905281	1					
ANR	3905292	IfStatement	if ( key == name )		3905281	2					
ANR	3905293	Condition	key == name	1223:5:33638:33648	3905281	0	True				
ANR	3905294	EqualityExpression	key == name		3905281	0		==			
ANR	3905295	Identifier	key		3905281	0					
ANR	3905296	Identifier	name		3905281	1					
ANR	3905297	CompoundStatement		5:18:52:52	3905281	1					
ANR	3905298	ReturnStatement	return 1 ;	1224:2:33655:33663	3905281	0	True				
ANR	3905299	PrimaryExpression	1		3905281	0					
ANR	3905300	IfStatement	if ( ZSTR_LEN ( key ) != ZSTR_LEN ( name ) )		3905281	3					
ANR	3905301	Condition	ZSTR_LEN ( key ) != ZSTR_LEN ( name )	1226:5:33673:33703	3905281	0	True				
ANR	3905302	EqualityExpression	ZSTR_LEN ( key ) != ZSTR_LEN ( name )		3905281	0		!=			
ANR	3905303	CallExpression	ZSTR_LEN ( key )		3905281	0					
ANR	3905304	Callee	ZSTR_LEN		3905281	0					
ANR	3905305	Identifier	ZSTR_LEN		3905281	0					
ANR	3905306	ArgumentList	key		3905281	1					
ANR	3905307	Argument	key		3905281	0					
ANR	3905308	Identifier	key		3905281	0					
ANR	3905309	CallExpression	ZSTR_LEN ( name )		3905281	1					
ANR	3905310	Callee	ZSTR_LEN		3905281	0					
ANR	3905311	Identifier	ZSTR_LEN		3905281	0					
ANR	3905312	ArgumentList	name		3905281	1					
ANR	3905313	Argument	name		3905281	0					
ANR	3905314	Identifier	name		3905281	0					
ANR	3905315	CompoundStatement		8:38:107:107	3905281	1					
ANR	3905316	ReturnStatement	return 0 ;	1227:2:33710:33718	3905281	0	True				
ANR	3905317	PrimaryExpression	0		3905281	0					
ANR	3905318	ExpressionStatement	lcname = zend_string_tolower ( name )	1229:1:33724:33758	3905281	4	True				
ANR	3905319	AssignmentExpression	lcname = zend_string_tolower ( name )		3905281	0		=			
ANR	3905320	Identifier	lcname		3905281	0					
ANR	3905321	CallExpression	zend_string_tolower ( name )		3905281	1					
ANR	3905322	Callee	zend_string_tolower		3905281	0					
ANR	3905323	Identifier	zend_string_tolower		3905281	0					
ANR	3905324	ArgumentList	name		3905281	1					
ANR	3905325	Argument	name		3905281	0					
ANR	3905326	Identifier	name		3905281	0					
ANR	3905327	ExpressionStatement	"ret = memcmp ( ZSTR_VAL ( lcname ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) ) == 0"	1230:1:33761:33826	3905281	5	True				
ANR	3905328	AssignmentExpression	"ret = memcmp ( ZSTR_VAL ( lcname ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) ) == 0"		3905281	0		=			
ANR	3905329	Identifier	ret		3905281	0					
ANR	3905330	EqualityExpression	"memcmp ( ZSTR_VAL ( lcname ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) ) == 0"		3905281	1		==			
ANR	3905331	CallExpression	"memcmp ( ZSTR_VAL ( lcname ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) )"		3905281	0					
ANR	3905332	Callee	memcmp		3905281	0					
ANR	3905333	Identifier	memcmp		3905281	0					
ANR	3905334	ArgumentList	ZSTR_VAL ( lcname )		3905281	1					
ANR	3905335	Argument	ZSTR_VAL ( lcname )		3905281	0					
ANR	3905336	CallExpression	ZSTR_VAL ( lcname )		3905281	0					
ANR	3905337	Callee	ZSTR_VAL		3905281	0					
ANR	3905338	Identifier	ZSTR_VAL		3905281	0					
ANR	3905339	ArgumentList	lcname		3905281	1					
ANR	3905340	Argument	lcname		3905281	0					
ANR	3905341	Identifier	lcname		3905281	0					
ANR	3905342	Argument	ZSTR_VAL ( key )		3905281	1					
ANR	3905343	CallExpression	ZSTR_VAL ( key )		3905281	0					
ANR	3905344	Callee	ZSTR_VAL		3905281	0					
ANR	3905345	Identifier	ZSTR_VAL		3905281	0					
ANR	3905346	ArgumentList	key		3905281	1					
ANR	3905347	Argument	key		3905281	0					
ANR	3905348	Identifier	key		3905281	0					
ANR	3905349	Argument	ZSTR_LEN ( key )		3905281	2					
ANR	3905350	CallExpression	ZSTR_LEN ( key )		3905281	0					
ANR	3905351	Callee	ZSTR_LEN		3905281	0					
ANR	3905352	Identifier	ZSTR_LEN		3905281	0					
ANR	3905353	ArgumentList	key		3905281	1					
ANR	3905354	Argument	key		3905281	0					
ANR	3905355	Identifier	key		3905281	0					
ANR	3905356	PrimaryExpression	0		3905281	1					
ANR	3905357	ExpressionStatement	zend_string_release ( lcname )	1231:1:33829:33856	3905281	6	True				
ANR	3905358	CallExpression	zend_string_release ( lcname )		3905281	0					
ANR	3905359	Callee	zend_string_release		3905281	0					
ANR	3905360	Identifier	zend_string_release		3905281	0					
ANR	3905361	ArgumentList	lcname		3905281	1					
ANR	3905362	Argument	lcname		3905281	0					
ANR	3905363	Identifier	lcname		3905281	0					
ANR	3905364	ReturnStatement	return ret ;	1232:1:33859:33869	3905281	7	True				
ANR	3905365	Identifier	ret		3905281	0					
ANR	3905366	ReturnType	static int		3905281	1					
ANR	3905367	Identifier	same_name		3905281	2					
ANR	3905368	ParameterList	"zend_string * key , zend_string * name"		3905281	3					
ANR	3905369	Parameter	zend_string * key	1218:21:33551:33566	3905281	0	True				
ANR	3905370	ParameterType	zend_string *		3905281	0					
ANR	3905371	Identifier	key		3905281	1					
ANR	3905372	Parameter	zend_string * name	1218:39:33569:33585	3905281	1	True				
ANR	3905373	ParameterType	zend_string *		3905281	0					
ANR	3905374	Identifier	name		3905281	1					
ANR	3905375	CFGEntryNode	ENTRY		3905281		True				
ANR	3905376	CFGExitNode	EXIT		3905281		True				
ANR	3905377	Symbol	ret		3905281						
ANR	3905378	Symbol	lcname		3905281						
ANR	3905379	Symbol	memcmp		3905281						
ANR	3905380	Symbol	name		3905281						
ANR	3905381	Symbol	ZSTR_LEN		3905281						
ANR	3905382	Symbol	key		3905281						
ANR	3905383	Symbol	zend_string_tolower		3905281						
ANR	3905384	Symbol	ZSTR_VAL		3905281						
ANR	3905385	DeclStmt									
ANR	3905386	Decl							zval	zval *	klass
ANR	3905387	DeclStmt									
ANR	3905388	Decl							zval	zval	method_name
ANR	3905389	DeclStmt									
ANR	3905390	Decl							zend_class_entry	zend_class_entry *	ce
ANR	3905391	DeclStmt									
ANR	3905392	Decl							zend_function	zend_function *	mptr
ANR	3905393	DeclStmt									
ANR	3905394	Decl							zend_string	zend_string *	key
ANR	3905395	DeclStmt									
ANR	3905396	Decl							size_t	size_t	len
ANR	3905397	DeclStmt									
ANR	3905398	Decl							zval	zval *	klass
ANR	3905399	DeclStmt									
ANR	3905400	Decl							zend_string	zend_string *	method_name
ANR	3905401	DeclStmt									
ANR	3905402	Decl							zend_string	zend_string *	lcname
ANR	3905403	DeclStmt									
ANR	3905404	Decl							zend_class_entry	zend_class_entry *	ce
ANR	3905405	DeclStmt									
ANR	3905406	Decl							union _zend_function	union _zend_function *	func
ANR	3905407	DeclStmt									
ANR	3905408	Decl							zval	zval *	object
ANR	3905409	DeclStmt									
ANR	3905410	Decl							zend_string	zend_string *	property
ANR	3905411	DeclStmt									
ANR	3905412	Decl							zend_class_entry	zend_class_entry *	ce
ANR	3905413	DeclStmt									
ANR	3905414	Decl							zend_property_info	zend_property_info *	property_info
ANR	3905415	DeclStmt									
ANR	3905416	Decl							zval	zval	property_z
ANR	3905417	DeclStmt									
ANR	3905418	Decl							zend_string	zend_string *	class_name
ANR	3905419	DeclStmt									
ANR	3905420	Decl							zend_string	zend_string *	lc_name
ANR	3905421	DeclStmt									
ANR	3905422	Decl							zend_class_entry	zend_class_entry *	ce
ANR	3905423	DeclStmt									
ANR	3905424	Decl							zend_bool	zend_bool	autoload
ANR	3905425	DeclStmt									
ANR	3905426	Decl							zend_string	zend_string *	iface_name
ANR	3905427	Decl							zend_string	zend_string *	lc_name
ANR	3905428	DeclStmt									
ANR	3905429	Decl							zend_class_entry	zend_class_entry *	ce
ANR	3905430	DeclStmt									
ANR	3905431	Decl							zend_bool	zend_bool	autoload
ANR	3905432	DeclStmt									
ANR	3905433	Decl							zend_string	zend_string *	trait_name
ANR	3905434	Decl							zend_string	zend_string *	lc_name
ANR	3905435	DeclStmt									
ANR	3905436	Decl							zend_class_entry	zend_class_entry *	ce
ANR	3905437	DeclStmt									
ANR	3905438	Decl							zend_bool	zend_bool	autoload
ANR	3905439	DeclStmt									
ANR	3905440	Decl							zend_string	zend_string *	name
ANR	3905441	DeclStmt									
ANR	3905442	Decl							zend_function	zend_function *	func
ANR	3905443	DeclStmt									
ANR	3905444	Decl							zend_string	zend_string *	lcname
ANR	3905445	DeclStmt									
ANR	3905446	Decl							zend_string	zend_string *	class_name
ANR	3905447	DeclStmt									
ANR	3905448	Decl							char	char *	alias_name
ANR	3905449	DeclStmt									
ANR	3905450	Decl							zend_class_entry	zend_class_entry *	ce
ANR	3905451	DeclStmt									
ANR	3905452	Decl							size_t	size_t	alias_name_len
ANR	3905453	DeclStmt									
ANR	3905454	Decl							zend_bool	zend_bool	autoload
ANR	3905455	DeclStmt									
ANR	3905456	Decl							zend_long	zend_long	leakbytes
ANR	3905457	DeclStmt									
ANR	3905458	Decl							zval	zval *	zv
ANR	3905459	DeclStmt									
ANR	3905460	Decl							zend_bool	zend_bool	leak_data
ANR	3905461	DeclStmt									
ANR	3905462	Decl							char	char *	nowhere
ANR	3905463	DeclStmt									
ANR	3905464	Decl							zend_string	zend_string *	entry
ANR	3905465	DeclStmt									
ANR	3905466	Decl							zend_long	zend_long	error_type
ANR	3905467	DeclStmt									
ANR	3905468	Decl							char	char *	message
ANR	3905469	DeclStmt									
ANR	3905470	Decl							size_t	size_t	message_len
ANR	3905471	DeclStmt									
ANR	3905472	Decl							zval	zval *	error_handler
ANR	3905473	DeclStmt									
ANR	3905474	Decl							zend_string	zend_string *	error_handler_name
ANR	3905475	DeclStmt									
ANR	3905476	Decl							zend_long	zend_long	error_type
ANR	3905477	DeclStmt									
ANR	3905478	Decl							zval	zval	zeh
ANR	3905479	DeclStmt									
ANR	3905480	Decl							zval	zval *	tmp
ANR	3905481	DeclStmt									
ANR	3905482	Decl							zval	zval *	exception_handler
ANR	3905483	DeclStmt									
ANR	3905484	Decl							zend_string	zend_string *	exception_handler_name
ANR	3905485	DeclStmt									
ANR	3905486	Decl							zval	zval *	tmp
ANR	3905487	Function	copy_class_or_interface_name	1834:0:50061:50740							
ANR	3905488	FunctionDef	"copy_class_or_interface_name (zval * el , int num_args , va_list args , zend_hash_key * hash_key)"		3905487	0					
ANR	3905489	CompoundStatement		1835:0:50174:50740	3905487	0					
ANR	3905490	IdentifierDeclStatement	zend_class_entry * ce = ( zend_class_entry * ) Z_PTR_P ( el ) ;	1836:1:50177:50231	3905487	0	True				
ANR	3905491	IdentifierDecl	* ce = ( zend_class_entry * ) Z_PTR_P ( el )		3905487	0					
ANR	3905492	IdentifierDeclType	zend_class_entry *		3905487	0					
ANR	3905493	Identifier	ce		3905487	1					
ANR	3905494	AssignmentExpression	* ce = ( zend_class_entry * ) Z_PTR_P ( el )		3905487	2		=			
ANR	3905495	Identifier	ce		3905487	0					
ANR	3905496	CastExpression	( zend_class_entry * ) Z_PTR_P ( el )		3905487	1					
ANR	3905497	CastTarget	zend_class_entry *		3905487	0					
ANR	3905498	CallExpression	Z_PTR_P ( el )		3905487	1					
ANR	3905499	Callee	Z_PTR_P		3905487	0					
ANR	3905500	Identifier	Z_PTR_P		3905487	0					
ANR	3905501	ArgumentList	el		3905487	1					
ANR	3905502	Argument	el		3905487	0					
ANR	3905503	Identifier	el		3905487	0					
ANR	3905504	Statement	zval	1837:1:50234:50237	3905487	1	True				
ANR	3905505	Statement	*	1837:6:50239:50239	3905487	2	True				
ANR	3905506	Statement	array	1837:7:50240:50244	3905487	3	True				
ANR	3905507	Statement	=	1837:13:50246:50246	3905487	4	True				
ANR	3905508	Statement	va_arg	1837:15:50248:50253	3905487	5	True				
ANR	3905509	Statement	(	1837:21:50254:50254	3905487	6	True				
ANR	3905510	Statement	args	1837:22:50255:50258	3905487	7	True				
ANR	3905511	Statement	","	1837:26:50259:50259	3905487	8	True				
ANR	3905512	Statement	zval	1837:28:50261:50264	3905487	9	True				
ANR	3905513	Statement	*	1837:33:50266:50266	3905487	10	True				
ANR	3905514	Statement	)	1837:34:50267:50267	3905487	11	True				
ANR	3905515	ExpressionStatement		1837:35:50268:50268	3905487	12	True				
ANR	3905516	IdentifierDeclStatement	"uint32_t mask = va_arg ( args , uint32_t ) ;"	1838:1:50271:50309	3905487	13	True				
ANR	3905517	IdentifierDecl	"mask = va_arg ( args , uint32_t )"		3905487	0					
ANR	3905518	IdentifierDeclType	uint32_t		3905487	0					
ANR	3905519	Identifier	mask		3905487	1					
ANR	3905520	AssignmentExpression	"mask = va_arg ( args , uint32_t )"		3905487	2		=			
ANR	3905521	Identifier	mask		3905487	0					
ANR	3905522	CallExpression	"va_arg ( args , uint32_t )"		3905487	1					
ANR	3905523	Callee	va_arg		3905487	0					
ANR	3905524	Identifier	va_arg		3905487	0					
ANR	3905525	ArgumentList	args		3905487	1					
ANR	3905526	Argument	args		3905487	0					
ANR	3905527	Identifier	args		3905487	0					
ANR	3905528	Argument	uint32_t		3905487	1					
ANR	3905529	Identifier	uint32_t		3905487	0					
ANR	3905530	IdentifierDeclStatement	"uint32_t comply = va_arg ( args , uint32_t ) ;"	1839:1:50312:50352	3905487	14	True				
ANR	3905531	IdentifierDecl	"comply = va_arg ( args , uint32_t )"		3905487	0					
ANR	3905532	IdentifierDeclType	uint32_t		3905487	0					
ANR	3905533	Identifier	comply		3905487	1					
ANR	3905534	AssignmentExpression	"comply = va_arg ( args , uint32_t )"		3905487	2		=			
ANR	3905535	Identifier	comply		3905487	0					
ANR	3905536	CallExpression	"va_arg ( args , uint32_t )"		3905487	1					
ANR	3905537	Callee	va_arg		3905487	0					
ANR	3905538	Identifier	va_arg		3905487	0					
ANR	3905539	ArgumentList	args		3905487	1					
ANR	3905540	Argument	args		3905487	0					
ANR	3905541	Identifier	args		3905487	0					
ANR	3905542	Argument	uint32_t		3905487	1					
ANR	3905543	Identifier	uint32_t		3905487	0					
ANR	3905544	IdentifierDeclStatement	uint32_t comply_mask = ( comply ) ? mask : 0 ;	1840:1:50355:50394	3905487	15	True				
ANR	3905545	IdentifierDecl	comply_mask = ( comply ) ? mask : 0		3905487	0					
ANR	3905546	IdentifierDeclType	uint32_t		3905487	0					
ANR	3905547	Identifier	comply_mask		3905487	1					
ANR	3905548	AssignmentExpression	comply_mask = ( comply ) ? mask : 0		3905487	2		=			
ANR	3905549	Identifier	comply_mask		3905487	0					
ANR	3905550	ConditionalExpression	( comply ) ? mask : 0		3905487	1					
ANR	3905551	Condition	comply		3905487	0					
ANR	3905552	Identifier	comply		3905487	0					
ANR	3905553	Identifier	mask		3905487	1					
ANR	3905554	PrimaryExpression	0		3905487	2					
ANR	3905555	IfStatement	if ( ( hash_key -> key && ZSTR_VAL ( hash_key -> key ) [ 0 ] != 0 ) && ( comply_mask == ( ce -> ce_flags & mask ) ) )		3905487	16					
ANR	3905556	Condition	( hash_key -> key && ZSTR_VAL ( hash_key -> key ) [ 0 ] != 0 ) && ( comply_mask == ( ce -> ce_flags & mask ) )	1842:5:50402:50495	3905487	0	True				
ANR	3905557	AndExpression	( hash_key -> key && ZSTR_VAL ( hash_key -> key ) [ 0 ] != 0 ) && ( comply_mask == ( ce -> ce_flags & mask ) )		3905487	0		&&			
ANR	3905558	AndExpression	hash_key -> key && ZSTR_VAL ( hash_key -> key ) [ 0 ] != 0		3905487	0		&&			
ANR	3905559	PtrMemberAccess	hash_key -> key		3905487	0					
ANR	3905560	Identifier	hash_key		3905487	0					
ANR	3905561	Identifier	key		3905487	1					
ANR	3905562	EqualityExpression	ZSTR_VAL ( hash_key -> key ) [ 0 ] != 0		3905487	1		!=			
ANR	3905563	ArrayIndexing	ZSTR_VAL ( hash_key -> key ) [ 0 ]		3905487	0					
ANR	3905564	CallExpression	ZSTR_VAL ( hash_key -> key )		3905487	0					
ANR	3905565	Callee	ZSTR_VAL		3905487	0					
ANR	3905566	Identifier	ZSTR_VAL		3905487	0					
ANR	3905567	ArgumentList	hash_key -> key		3905487	1					
ANR	3905568	Argument	hash_key -> key		3905487	0					
ANR	3905569	PtrMemberAccess	hash_key -> key		3905487	0					
ANR	3905570	Identifier	hash_key		3905487	0					
ANR	3905571	Identifier	key		3905487	1					
ANR	3905572	PrimaryExpression	0		3905487	1					
ANR	3905573	PrimaryExpression	0		3905487	1					
ANR	3905574	EqualityExpression	comply_mask == ( ce -> ce_flags & mask )		3905487	1		==			
ANR	3905575	Identifier	comply_mask		3905487	0					
ANR	3905576	BitAndExpression	ce -> ce_flags & mask		3905487	1		&			
ANR	3905577	PtrMemberAccess	ce -> ce_flags		3905487	0					
ANR	3905578	Identifier	ce		3905487	0					
ANR	3905579	Identifier	ce_flags		3905487	1					
ANR	3905580	Identifier	mask		3905487	1					
ANR	3905581	CompoundStatement		9:45:323:323	3905487	1					
ANR	3905582	IfStatement	"if ( ce -> refcount > 1 && ! same_name ( hash_key -> key , ce -> name ) )"		3905487	0					
ANR	3905583	Condition	"ce -> refcount > 1 && ! same_name ( hash_key -> key , ce -> name )"	1844:6:50506:50566	3905487	0	True				
ANR	3905584	AndExpression	"ce -> refcount > 1 && ! same_name ( hash_key -> key , ce -> name )"		3905487	0		&&			
ANR	3905585	RelationalExpression	ce -> refcount > 1		3905487	0		>			
ANR	3905586	PtrMemberAccess	ce -> refcount		3905487	0					
ANR	3905587	Identifier	ce		3905487	0					
ANR	3905588	Identifier	refcount		3905487	1					
ANR	3905589	PrimaryExpression	1		3905487	1					
ANR	3905590	UnaryOperationExpression	"! same_name ( hash_key -> key , ce -> name )"		3905487	1					
ANR	3905591	UnaryOperator	!		3905487	0					
ANR	3905592	CallExpression	"same_name ( hash_key -> key , ce -> name )"		3905487	1					
ANR	3905593	Callee	same_name		3905487	0					
ANR	3905594	Identifier	same_name		3905487	0					
ANR	3905595	ArgumentList	hash_key -> key		3905487	1					
ANR	3905596	Argument	hash_key -> key		3905487	0					
ANR	3905597	PtrMemberAccess	hash_key -> key		3905487	0					
ANR	3905598	Identifier	hash_key		3905487	0					
ANR	3905599	Identifier	key		3905487	1					
ANR	3905600	Argument	ce -> name		3905487	1					
ANR	3905601	PtrMemberAccess	ce -> name		3905487	0					
ANR	3905602	Identifier	ce		3905487	0					
ANR	3905603	Identifier	name		3905487	1					
ANR	3905604	CompoundStatement		11:43:394:394	3905487	1					
ANR	3905605	ExpressionStatement	"add_next_index_str ( array , zend_string_copy ( hash_key -> key ) )"	1846:3:50574:50632	3905487	0	True				
ANR	3905606	CallExpression	"add_next_index_str ( array , zend_string_copy ( hash_key -> key ) )"		3905487	0					
ANR	3905607	Callee	add_next_index_str		3905487	0					
ANR	3905608	Identifier	add_next_index_str		3905487	0					
ANR	3905609	ArgumentList	array		3905487	1					
ANR	3905610	Argument	array		3905487	0					
ANR	3905611	Identifier	array		3905487	0					
ANR	3905612	Argument	zend_string_copy ( hash_key -> key )		3905487	1					
ANR	3905613	CallExpression	zend_string_copy ( hash_key -> key )		3905487	0					
ANR	3905614	Callee	zend_string_copy		3905487	0					
ANR	3905615	Identifier	zend_string_copy		3905487	0					
ANR	3905616	ArgumentList	hash_key -> key		3905487	1					
ANR	3905617	Argument	hash_key -> key		3905487	0					
ANR	3905618	PtrMemberAccess	hash_key -> key		3905487	0					
ANR	3905619	Identifier	hash_key		3905487	0					
ANR	3905620	Identifier	key		3905487	1					
ANR	3905621	ElseStatement	else		3905487	0					
ANR	3905622	CompoundStatement		13:9:468:468	3905487	0					
ANR	3905623	ExpressionStatement	"add_next_index_str ( array , zend_string_copy ( ce -> name ) )"	1848:3:50648:50701	3905487	0	True				
ANR	3905624	CallExpression	"add_next_index_str ( array , zend_string_copy ( ce -> name ) )"		3905487	0					
ANR	3905625	Callee	add_next_index_str		3905487	0					
ANR	3905626	Identifier	add_next_index_str		3905487	0					
ANR	3905627	ArgumentList	array		3905487	1					
ANR	3905628	Argument	array		3905487	0					
ANR	3905629	Identifier	array		3905487	0					
ANR	3905630	Argument	zend_string_copy ( ce -> name )		3905487	1					
ANR	3905631	CallExpression	zend_string_copy ( ce -> name )		3905487	0					
ANR	3905632	Callee	zend_string_copy		3905487	0					
ANR	3905633	Identifier	zend_string_copy		3905487	0					
ANR	3905634	ArgumentList	ce -> name		3905487	1					
ANR	3905635	Argument	ce -> name		3905487	0					
ANR	3905636	PtrMemberAccess	ce -> name		3905487	0					
ANR	3905637	Identifier	ce		3905487	0					
ANR	3905638	Identifier	name		3905487	1					
ANR	3905639	ReturnStatement	return ZEND_HASH_APPLY_KEEP ;	1851:1:50711:50738	3905487	17	True				
ANR	3905640	Identifier	ZEND_HASH_APPLY_KEEP		3905487	0					
ANR	3905641	ReturnType	static int		3905487	1					
ANR	3905642	Identifier	copy_class_or_interface_name		3905487	2					
ANR	3905643	ParameterList	"zval * el , int num_args , va_list args , zend_hash_key * hash_key"		3905487	3					
ANR	3905644	Parameter	zval * el	1834:40:50101:50108	3905487	0	True				
ANR	3905645	ParameterType	zval *		3905487	0					
ANR	3905646	Identifier	el		3905487	1					
ANR	3905647	Parameter	int num_args	1834:50:50111:50122	3905487	1	True				
ANR	3905648	ParameterType	int		3905487	0					
ANR	3905649	Identifier	num_args		3905487	1					
ANR	3905650	Parameter	va_list args	1834:64:50125:50136	3905487	2	True				
ANR	3905651	ParameterType	va_list		3905487	0					
ANR	3905652	Identifier	args		3905487	1					
ANR	3905653	Parameter	zend_hash_key * hash_key	1834:78:50139:50161	3905487	3	True				
ANR	3905654	ParameterType	zend_hash_key *		3905487	0					
ANR	3905655	Identifier	hash_key		3905487	1					
ANR	3905656	CFGEntryNode	ENTRY		3905487		True				
ANR	3905657	CFGExitNode	EXIT		3905487		True				
ANR	3905658	Symbol	Z_PTR_P		3905487						
ANR	3905659	Symbol	ce		3905487						
ANR	3905660	Symbol	comply		3905487						
ANR	3905661	Symbol	el		3905487						
ANR	3905662	Symbol	uint32_t		3905487						
ANR	3905663	Symbol	* ce		3905487						
ANR	3905664	Symbol	ce -> refcount		3905487						
ANR	3905665	Symbol	zend_string_copy		3905487						
ANR	3905666	Symbol	ZSTR_VAL		3905487						
ANR	3905667	Symbol	args		3905487						
ANR	3905668	Symbol	* hash_key		3905487						
ANR	3905669	Symbol	ce -> ce_flags		3905487						
ANR	3905670	Symbol	ZEND_HASH_APPLY_KEEP		3905487						
ANR	3905671	Symbol	hash_key		3905487						
ANR	3905672	Symbol	num_args		3905487						
ANR	3905673	Symbol	array		3905487						
ANR	3905674	Symbol	comply_mask		3905487						
ANR	3905675	Symbol	same_name		3905487						
ANR	3905676	Symbol	ce -> name		3905487						
ANR	3905677	Symbol	va_arg		3905487						
ANR	3905678	Symbol	mask		3905487						
ANR	3905679	Symbol	hash_key -> key		3905487						
ANR	3905680	Symbol	* ZSTR_VAL		3905487						
ANR	3905681	DeclStmt									
ANR	3905682	Decl							uint32_t	uint32_t	mask
ANR	3905683	DeclStmt									
ANR	3905684	Decl							uint32_t	uint32_t	comply
ANR	3905685	DeclStmt									
ANR	3905686	Decl							uint32_t	uint32_t	mask
ANR	3905687	DeclStmt									
ANR	3905688	Decl							uint32_t	uint32_t	comply
ANR	3905689	DeclStmt									
ANR	3905690	Decl							uint32_t	uint32_t	mask
ANR	3905691	DeclStmt									
ANR	3905692	Decl							uint32_t	uint32_t	comply
ANR	3905693	Function	copy_function_name	1903:0:51975:52524							
ANR	3905694	FunctionDef	"copy_function_name (zval * zv , int num_args , va_list args , zend_hash_key * hash_key)"		3905693	0					
ANR	3905695	CompoundStatement		1904:0:52078:52524	3905693	0					
ANR	3905696	IdentifierDeclStatement	zend_function * func = Z_PTR_P ( zv ) ;	1905:1:52081:52114	3905693	0	True				
ANR	3905697	IdentifierDecl	* func = Z_PTR_P ( zv )		3905693	0					
ANR	3905698	IdentifierDeclType	zend_function *		3905693	0					
ANR	3905699	Identifier	func		3905693	1					
ANR	3905700	AssignmentExpression	* func = Z_PTR_P ( zv )		3905693	2		=			
ANR	3905701	Identifier	func		3905693	0					
ANR	3905702	CallExpression	Z_PTR_P ( zv )		3905693	1					
ANR	3905703	Callee	Z_PTR_P		3905693	0					
ANR	3905704	Identifier	Z_PTR_P		3905693	0					
ANR	3905705	ArgumentList	zv		3905693	1					
ANR	3905706	Argument	zv		3905693	0					
ANR	3905707	Identifier	zv		3905693	0					
ANR	3905708	Statement	zval	1906:1:52117:52120	3905693	1	True				
ANR	3905709	Statement	*	1906:6:52122:52122	3905693	2	True				
ANR	3905710	Statement	internal_ar	1906:7:52123:52133	3905693	3	True				
ANR	3905711	Statement	=	1906:19:52135:52135	3905693	4	True				
ANR	3905712	Statement	va_arg	1906:21:52137:52142	3905693	5	True				
ANR	3905713	Statement	(	1906:27:52143:52143	3905693	6	True				
ANR	3905714	Statement	args	1906:28:52144:52147	3905693	7	True				
ANR	3905715	Statement	","	1906:32:52148:52148	3905693	8	True				
ANR	3905716	Statement	zval	1906:34:52150:52153	3905693	9	True				
ANR	3905717	Statement	*	1906:39:52155:52155	3905693	10	True				
ANR	3905718	Statement	)	1906:40:52156:52156	3905693	11	True				
ANR	3905719	Statement	","	1906:41:52157:52157	3905693	12	True				
ANR	3905720	Statement	*	1907:6:52165:52165	3905693	13	True				
ANR	3905721	Statement	user_ar	1907:7:52166:52172	3905693	14	True				
ANR	3905722	Statement	=	1907:19:52178:52178	3905693	15	True				
ANR	3905723	Statement	va_arg	1907:21:52180:52185	3905693	16	True				
ANR	3905724	Statement	(	1907:27:52186:52186	3905693	17	True				
ANR	3905725	Statement	args	1907:28:52187:52190	3905693	18	True				
ANR	3905726	Statement	","	1907:32:52191:52191	3905693	19	True				
ANR	3905727	Statement	zval	1907:34:52193:52196	3905693	20	True				
ANR	3905728	Statement	*	1907:39:52198:52198	3905693	21	True				
ANR	3905729	Statement	)	1907:40:52199:52199	3905693	22	True				
ANR	3905730	ExpressionStatement		1907:41:52200:52200	3905693	23	True				
ANR	3905731	IfStatement	if ( hash_key -> key == NULL || ZSTR_VAL ( hash_key -> key ) [ 0 ] == 0 )		3905693	24					
ANR	3905732	Condition	hash_key -> key == NULL || ZSTR_VAL ( hash_key -> key ) [ 0 ] == 0	1909:5:52208:52263	3905693	0	True				
ANR	3905733	OrExpression	hash_key -> key == NULL || ZSTR_VAL ( hash_key -> key ) [ 0 ] == 0		3905693	0		||			
ANR	3905734	EqualityExpression	hash_key -> key == NULL		3905693	0		==			
ANR	3905735	PtrMemberAccess	hash_key -> key		3905693	0					
ANR	3905736	Identifier	hash_key		3905693	0					
ANR	3905737	Identifier	key		3905693	1					
ANR	3905738	Identifier	NULL		3905693	1					
ANR	3905739	EqualityExpression	ZSTR_VAL ( hash_key -> key ) [ 0 ] == 0		3905693	1		==			
ANR	3905740	ArrayIndexing	ZSTR_VAL ( hash_key -> key ) [ 0 ]		3905693	0					
ANR	3905741	CallExpression	ZSTR_VAL ( hash_key -> key )		3905693	0					
ANR	3905742	Callee	ZSTR_VAL		3905693	0					
ANR	3905743	Identifier	ZSTR_VAL		3905693	0					
ANR	3905744	ArgumentList	hash_key -> key		3905693	1					
ANR	3905745	Argument	hash_key -> key		3905693	0					
ANR	3905746	PtrMemberAccess	hash_key -> key		3905693	0					
ANR	3905747	Identifier	hash_key		3905693	0					
ANR	3905748	Identifier	key		3905693	1					
ANR	3905749	PrimaryExpression	0		3905693	1					
ANR	3905750	PrimaryExpression	0		3905693	1					
ANR	3905751	CompoundStatement		6:63:187:187	3905693	1					
ANR	3905752	ReturnStatement	return 0 ;	1910:2:52270:52278	3905693	0	True				
ANR	3905753	PrimaryExpression	0		3905693	0					
ANR	3905754	IfStatement	if ( func -> type == ZEND_INTERNAL_FUNCTION )		3905693	25					
ANR	3905755	Condition	func -> type == ZEND_INTERNAL_FUNCTION	1913:5:52289:52324	3905693	0	True				
ANR	3905756	EqualityExpression	func -> type == ZEND_INTERNAL_FUNCTION		3905693	0		==			
ANR	3905757	PtrMemberAccess	func -> type		3905693	0					
ANR	3905758	Identifier	func		3905693	0					
ANR	3905759	Identifier	type		3905693	1					
ANR	3905760	Identifier	ZEND_INTERNAL_FUNCTION		3905693	1					
ANR	3905761	CompoundStatement		10:43:248:248	3905693	1					
ANR	3905762	ExpressionStatement	"add_next_index_str ( internal_ar , zend_string_copy ( hash_key -> key ) )"	1914:2:52331:52395	3905693	0	True				
ANR	3905763	CallExpression	"add_next_index_str ( internal_ar , zend_string_copy ( hash_key -> key ) )"		3905693	0					
ANR	3905764	Callee	add_next_index_str		3905693	0					
ANR	3905765	Identifier	add_next_index_str		3905693	0					
ANR	3905766	ArgumentList	internal_ar		3905693	1					
ANR	3905767	Argument	internal_ar		3905693	0					
ANR	3905768	Identifier	internal_ar		3905693	0					
ANR	3905769	Argument	zend_string_copy ( hash_key -> key )		3905693	1					
ANR	3905770	CallExpression	zend_string_copy ( hash_key -> key )		3905693	0					
ANR	3905771	Callee	zend_string_copy		3905693	0					
ANR	3905772	Identifier	zend_string_copy		3905693	0					
ANR	3905773	ArgumentList	hash_key -> key		3905693	1					
ANR	3905774	Argument	hash_key -> key		3905693	0					
ANR	3905775	PtrMemberAccess	hash_key -> key		3905693	0					
ANR	3905776	Identifier	hash_key		3905693	0					
ANR	3905777	Identifier	key		3905693	1					
ANR	3905778	ElseStatement	else		3905693	0					
ANR	3905779	IfStatement	if ( func -> type == ZEND_USER_FUNCTION )		3905693	0					
ANR	3905780	Condition	func -> type == ZEND_USER_FUNCTION	1915:12:52409:52440	3905693	0	True				
ANR	3905781	EqualityExpression	func -> type == ZEND_USER_FUNCTION		3905693	0		==			
ANR	3905782	PtrMemberAccess	func -> type		3905693	0					
ANR	3905783	Identifier	func		3905693	0					
ANR	3905784	Identifier	type		3905693	1					
ANR	3905785	Identifier	ZEND_USER_FUNCTION		3905693	1					
ANR	3905786	CompoundStatement		12:46:364:364	3905693	1					
ANR	3905787	ExpressionStatement	"add_next_index_str ( user_ar , zend_string_copy ( hash_key -> key ) )"	1916:2:52447:52507	3905693	0	True				
ANR	3905788	CallExpression	"add_next_index_str ( user_ar , zend_string_copy ( hash_key -> key ) )"		3905693	0					
ANR	3905789	Callee	add_next_index_str		3905693	0					
ANR	3905790	Identifier	add_next_index_str		3905693	0					
ANR	3905791	ArgumentList	user_ar		3905693	1					
ANR	3905792	Argument	user_ar		3905693	0					
ANR	3905793	Identifier	user_ar		3905693	0					
ANR	3905794	Argument	zend_string_copy ( hash_key -> key )		3905693	1					
ANR	3905795	CallExpression	zend_string_copy ( hash_key -> key )		3905693	0					
ANR	3905796	Callee	zend_string_copy		3905693	0					
ANR	3905797	Identifier	zend_string_copy		3905693	0					
ANR	3905798	ArgumentList	hash_key -> key		3905693	1					
ANR	3905799	Argument	hash_key -> key		3905693	0					
ANR	3905800	PtrMemberAccess	hash_key -> key		3905693	0					
ANR	3905801	Identifier	hash_key		3905693	0					
ANR	3905802	Identifier	key		3905693	1					
ANR	3905803	ReturnStatement	return 0 ;	1919:1:52514:52522	3905693	26	True				
ANR	3905804	PrimaryExpression	0		3905693	0					
ANR	3905805	ReturnType	static int		3905693	1					
ANR	3905806	Identifier	copy_function_name		3905693	2					
ANR	3905807	ParameterList	"zval * zv , int num_args , va_list args , zend_hash_key * hash_key"		3905693	3					
ANR	3905808	Parameter	zval * zv	1903:30:52005:52012	3905693	0	True				
ANR	3905809	ParameterType	zval *		3905693	0					
ANR	3905810	Identifier	zv		3905693	1					
ANR	3905811	Parameter	int num_args	1903:40:52015:52026	3905693	1	True				
ANR	3905812	ParameterType	int		3905693	0					
ANR	3905813	Identifier	num_args		3905693	1					
ANR	3905814	Parameter	va_list args	1903:54:52029:52040	3905693	2	True				
ANR	3905815	ParameterType	va_list		3905693	0					
ANR	3905816	Identifier	args		3905693	1					
ANR	3905817	Parameter	zend_hash_key * hash_key	1903:68:52043:52065	3905693	3	True				
ANR	3905818	ParameterType	zend_hash_key *		3905693	0					
ANR	3905819	Identifier	hash_key		3905693	1					
ANR	3905820	CFGEntryNode	ENTRY		3905693		True				
ANR	3905821	CFGExitNode	EXIT		3905693		True				
ANR	3905822	Symbol	Z_PTR_P		3905693						
ANR	3905823	Symbol	NULL		3905693						
ANR	3905824	Symbol	* func		3905693						
ANR	3905825	Symbol	internal_ar		3905693						
ANR	3905826	Symbol	zend_string_copy		3905693						
ANR	3905827	Symbol	ZSTR_VAL		3905693						
ANR	3905828	Symbol	args		3905693						
ANR	3905829	Symbol	* hash_key		3905693						
ANR	3905830	Symbol	ZEND_INTERNAL_FUNCTION		3905693						
ANR	3905831	Symbol	hash_key		3905693						
ANR	3905832	Symbol	func		3905693						
ANR	3905833	Symbol	num_args		3905693						
ANR	3905834	Symbol	ZEND_USER_FUNCTION		3905693						
ANR	3905835	Symbol	func -> type		3905693						
ANR	3905836	Symbol	zv		3905693						
ANR	3905837	Symbol	hash_key -> key		3905693						
ANR	3905838	Symbol	* ZSTR_VAL		3905693						
ANR	3905839	Symbol	user_ar		3905693						
ANR	3905840	DeclStmt									
ANR	3905841	Decl							zval	zval	internal
ANR	3905842	Decl							zval	zval	user
ANR	3905843	DeclStmt									
ANR	3905844	Decl							zend_array	zend_array *	symbol_table
ANR	3905845	DeclStmt									
ANR	3905846	Decl							zend_string	zend_string *	function_name
ANR	3905847	DeclStmt									
ANR	3905848	Decl							char	char *	eval_code
ANR	3905849	Decl							char	char *	function_args
ANR	3905850	Decl							char	char *	function_code
ANR	3905851	DeclStmt									
ANR	3905852	Decl							size_t	size_t	eval_code_length
ANR	3905853	Decl							size_t	size_t	function_args_len
ANR	3905854	Decl							size_t	size_t	function_code_len
ANR	3905855	DeclStmt									
ANR	3905856	Decl							int	int	retval
ANR	3905857	DeclStmt									
ANR	3905858	Decl							char	char *	eval_name
ANR	3905859	DeclStmt									
ANR	3905860	Decl							zend_op_array	zend_op_array *	func
ANR	3905861	DeclStmt									
ANR	3905862	Decl							HashTable	HashTable *	static_variables
ANR	3905863	DeclStmt									
ANR	3905864	Decl							zval	zval *	arg1
ANR	3905865	Decl							zval	zval *	arg2
ANR	3905866	DeclStmt									
ANR	3905867	Decl							zval	zval *	arg1
ANR	3905868	Decl							zval	zval *	arg2
ANR	3905869	DeclStmt									
ANR	3905870	Decl							const char	const char *	resource_type
ANR	3905871	DeclStmt									
ANR	3905872	Decl							zval	zval *	z_resource_type
ANR	3905873	DeclStmt									
ANR	3905874	Decl							zend_string	zend_string *	type
ANR	3905875	DeclStmt									
ANR	3905876	Decl							zend_string	zend_string *	key
ANR	3905877	DeclStmt									
ANR	3905878	Decl							zend_ulong	zend_ulong	index
ANR	3905879	DeclStmt									
ANR	3905880	Decl							zval	zval *	val
ANR	3905881	DeclStmt									
ANR	3905882	Decl							int	int	id
ANR	3905883	Function	add_extension_info	2118:0:58114:58337							
ANR	3905884	FunctionDef	"add_extension_info (zval * item , void * arg)"		3905883	0					
ANR	3905885	CompoundStatement		2119:0:58177:58337	3905883	0					
ANR	3905886	IdentifierDeclStatement	zval * name_array = ( zval * ) arg ;	2120:1:58180:58210	3905883	0	True				
ANR	3905887	IdentifierDecl	* name_array = ( zval * ) arg		3905883	0					
ANR	3905888	IdentifierDeclType	zval *		3905883	0					
ANR	3905889	Identifier	name_array		3905883	1					
ANR	3905890	AssignmentExpression	* name_array = ( zval * ) arg		3905883	2		=			
ANR	3905891	Identifier	name_array		3905883	0					
ANR	3905892	CastExpression	( zval * ) arg		3905883	1					
ANR	3905893	CastTarget	zval *		3905883	0					
ANR	3905894	Identifier	arg		3905883	1					
ANR	3905895	IdentifierDeclStatement	zend_module_entry * module = ( zend_module_entry * ) Z_PTR_P ( item ) ;	2121:1:58213:58274	3905883	1	True				
ANR	3905896	IdentifierDecl	* module = ( zend_module_entry * ) Z_PTR_P ( item )		3905883	0					
ANR	3905897	IdentifierDeclType	zend_module_entry *		3905883	0					
ANR	3905898	Identifier	module		3905883	1					
ANR	3905899	AssignmentExpression	* module = ( zend_module_entry * ) Z_PTR_P ( item )		3905883	2		=			
ANR	3905900	Identifier	module		3905883	0					
ANR	3905901	CastExpression	( zend_module_entry * ) Z_PTR_P ( item )		3905883	1					
ANR	3905902	CastTarget	zend_module_entry *		3905883	0					
ANR	3905903	CallExpression	Z_PTR_P ( item )		3905883	1					
ANR	3905904	Callee	Z_PTR_P		3905883	0					
ANR	3905905	Identifier	Z_PTR_P		3905883	0					
ANR	3905906	ArgumentList	item		3905883	1					
ANR	3905907	Argument	item		3905883	0					
ANR	3905908	Identifier	item		3905883	0					
ANR	3905909	ExpressionStatement	"add_next_index_string ( name_array , module -> name )"	2122:1:58277:58324	3905883	2	True				
ANR	3905910	CallExpression	"add_next_index_string ( name_array , module -> name )"		3905883	0					
ANR	3905911	Callee	add_next_index_string		3905883	0					
ANR	3905912	Identifier	add_next_index_string		3905883	0					
ANR	3905913	ArgumentList	name_array		3905883	1					
ANR	3905914	Argument	name_array		3905883	0					
ANR	3905915	Identifier	name_array		3905883	0					
ANR	3905916	Argument	module -> name		3905883	1					
ANR	3905917	PtrMemberAccess	module -> name		3905883	0					
ANR	3905918	Identifier	module		3905883	0					
ANR	3905919	Identifier	name		3905883	1					
ANR	3905920	ReturnStatement	return 0 ;	2123:1:58327:58335	3905883	3	True				
ANR	3905921	PrimaryExpression	0		3905883	0					
ANR	3905922	ReturnType	static int		3905883	1					
ANR	3905923	Identifier	add_extension_info		3905883	2					
ANR	3905924	ParameterList	"zval * item , void * arg"		3905883	3					
ANR	3905925	Parameter	zval * item	2118:30:58144:58153	3905883	0	True				
ANR	3905926	ParameterType	zval *		3905883	0					
ANR	3905927	Identifier	item		3905883	1					
ANR	3905928	Parameter	void * arg	2118:42:58156:58164	3905883	1	True				
ANR	3905929	ParameterType	void *		3905883	0					
ANR	3905930	Identifier	arg		3905883	1					
ANR	3905931	CFGEntryNode	ENTRY		3905883		True				
ANR	3905932	CFGExitNode	EXIT		3905883		True				
ANR	3905933	Symbol	Z_PTR_P		3905883						
ANR	3905934	Symbol	item		3905883						
ANR	3905935	Symbol	module -> name		3905883						
ANR	3905936	Symbol	* module		3905883						
ANR	3905937	Symbol	arg		3905883						
ANR	3905938	Symbol	module		3905883						
ANR	3905939	Symbol	name_array		3905883						
ANR	3905940	Function	add_zendext_info	2127:0:58350:58513							
ANR	3905941	FunctionDef	"add_zendext_info (zend_extension * ext , void * arg)"		3905940	0					
ANR	3905942	CompoundStatement		2128:0:58420:58513	3905940	0					
ANR	3905943	IdentifierDeclStatement	zval * name_array = ( zval * ) arg ;	2129:1:58423:58453	3905940	0	True				
ANR	3905944	IdentifierDecl	* name_array = ( zval * ) arg		3905940	0					
ANR	3905945	IdentifierDeclType	zval *		3905940	0					
ANR	3905946	Identifier	name_array		3905940	1					
ANR	3905947	AssignmentExpression	* name_array = ( zval * ) arg		3905940	2		=			
ANR	3905948	Identifier	name_array		3905940	0					
ANR	3905949	CastExpression	( zval * ) arg		3905940	1					
ANR	3905950	CastTarget	zval *		3905940	0					
ANR	3905951	Identifier	arg		3905940	1					
ANR	3905952	ExpressionStatement	"add_next_index_string ( name_array , ext -> name )"	2130:1:58456:58500	3905940	1	True				
ANR	3905953	CallExpression	"add_next_index_string ( name_array , ext -> name )"		3905940	0					
ANR	3905954	Callee	add_next_index_string		3905940	0					
ANR	3905955	Identifier	add_next_index_string		3905940	0					
ANR	3905956	ArgumentList	name_array		3905940	1					
ANR	3905957	Argument	name_array		3905940	0					
ANR	3905958	Identifier	name_array		3905940	0					
ANR	3905959	Argument	ext -> name		3905940	1					
ANR	3905960	PtrMemberAccess	ext -> name		3905940	0					
ANR	3905961	Identifier	ext		3905940	0					
ANR	3905962	Identifier	name		3905940	1					
ANR	3905963	ReturnStatement	return 0 ;	2131:1:58503:58511	3905940	2	True				
ANR	3905964	PrimaryExpression	0		3905940	0					
ANR	3905965	ReturnType	static int		3905940	1					
ANR	3905966	Identifier	add_zendext_info		3905940	2					
ANR	3905967	ParameterList	"zend_extension * ext , void * arg"		3905940	3					
ANR	3905968	Parameter	zend_extension * ext	2127:28:58378:58396	3905940	0	True				
ANR	3905969	ParameterType	zend_extension *		3905940	0					
ANR	3905970	Identifier	ext		3905940	1					
ANR	3905971	Parameter	void * arg	2127:49:58399:58407	3905940	1	True				
ANR	3905972	ParameterType	void *		3905940	0					
ANR	3905973	Identifier	arg		3905940	1					
ANR	3905974	CFGEntryNode	ENTRY		3905940		True				
ANR	3905975	CFGExitNode	EXIT		3905940		True				
ANR	3905976	Symbol	ext		3905940						
ANR	3905977	Symbol	ext -> name		3905940						
ANR	3905978	Symbol	* ext		3905940						
ANR	3905979	Symbol	arg		3905940						
ANR	3905980	Symbol	name_array		3905940						
ANR	3905981	Function	add_constant_info	2135:0:58526:58894							
ANR	3905982	FunctionDef	"add_constant_info (zval * item , void * arg)"		3905981	0					
ANR	3905983	CompoundStatement		2136:0:58588:58894	3905981	0					
ANR	3905984	IdentifierDeclStatement	zval * name_array = ( zval * ) arg ;	2137:1:58591:58621	3905981	0	True				
ANR	3905985	IdentifierDecl	* name_array = ( zval * ) arg		3905981	0					
ANR	3905986	IdentifierDeclType	zval *		3905981	0					
ANR	3905987	Identifier	name_array		3905981	1					
ANR	3905988	AssignmentExpression	* name_array = ( zval * ) arg		3905981	2		=			
ANR	3905989	Identifier	name_array		3905981	0					
ANR	3905990	CastExpression	( zval * ) arg		3905981	1					
ANR	3905991	CastTarget	zval *		3905981	0					
ANR	3905992	Identifier	arg		3905981	1					
ANR	3905993	IdentifierDeclStatement	zend_constant * constant = ( zend_constant * ) Z_PTR_P ( item ) ;	2138:1:58624:58679	3905981	1	True				
ANR	3905994	IdentifierDecl	* constant = ( zend_constant * ) Z_PTR_P ( item )		3905981	0					
ANR	3905995	IdentifierDeclType	zend_constant *		3905981	0					
ANR	3905996	Identifier	constant		3905981	1					
ANR	3905997	AssignmentExpression	* constant = ( zend_constant * ) Z_PTR_P ( item )		3905981	2		=			
ANR	3905998	Identifier	constant		3905981	0					
ANR	3905999	CastExpression	( zend_constant * ) Z_PTR_P ( item )		3905981	1					
ANR	3906000	CastTarget	zend_constant *		3905981	0					
ANR	3906001	CallExpression	Z_PTR_P ( item )		3905981	1					
ANR	3906002	Callee	Z_PTR_P		3905981	0					
ANR	3906003	Identifier	Z_PTR_P		3905981	0					
ANR	3906004	ArgumentList	item		3905981	1					
ANR	3906005	Argument	item		3905981	0					
ANR	3906006	Identifier	item		3905981	0					
ANR	3906007	IdentifierDeclStatement	zval const_val ;	2139:1:58682:58696	3905981	2	True				
ANR	3906008	IdentifierDecl	const_val		3905981	0					
ANR	3906009	IdentifierDeclType	zval		3905981	0					
ANR	3906010	Identifier	const_val		3905981	1					
ANR	3906011	IfStatement	if ( ! constant -> name )		3905981	3					
ANR	3906012	Condition	! constant -> name	2141:5:58704:58718	3905981	0	True				
ANR	3906013	UnaryOperationExpression	! constant -> name		3905981	0					
ANR	3906014	UnaryOperator	!		3905981	0					
ANR	3906015	PtrMemberAccess	constant -> name		3905981	1					
ANR	3906016	Identifier	constant		3905981	0					
ANR	3906017	Identifier	name		3905981	1					
ANR	3906018	CompoundStatement		6:22:132:132	3905981	1					
ANR	3906019	ReturnStatement	return 0 ;	2143:2:58756:58764	3905981	0	True				
ANR	3906020	PrimaryExpression	0		3905981	0					
ANR	3906021	ExpressionStatement	"ZVAL_DUP ( & const_val , & constant -> value )"	2146:1:58771:58809	3905981	4	True				
ANR	3906022	CallExpression	"ZVAL_DUP ( & const_val , & constant -> value )"		3905981	0					
ANR	3906023	Callee	ZVAL_DUP		3905981	0					
ANR	3906024	Identifier	ZVAL_DUP		3905981	0					
ANR	3906025	ArgumentList	& const_val		3905981	1					
ANR	3906026	Argument	& const_val		3905981	0					
ANR	3906027	UnaryOperationExpression	& const_val		3905981	0					
ANR	3906028	UnaryOperator	&		3905981	0					
ANR	3906029	Identifier	const_val		3905981	1					
ANR	3906030	Argument	& constant -> value		3905981	1					
ANR	3906031	UnaryOperationExpression	& constant -> value		3905981	0					
ANR	3906032	UnaryOperator	&		3905981	0					
ANR	3906033	PtrMemberAccess	constant -> value		3905981	1					
ANR	3906034	Identifier	constant		3905981	0					
ANR	3906035	Identifier	value		3905981	1					
ANR	3906036	ExpressionStatement	"zend_hash_add_new ( Z_ARRVAL_P ( name_array ) , constant -> name , & const_val )"	2147:1:58812:58881	3905981	5	True				
ANR	3906037	CallExpression	"zend_hash_add_new ( Z_ARRVAL_P ( name_array ) , constant -> name , & const_val )"		3905981	0					
ANR	3906038	Callee	zend_hash_add_new		3905981	0					
ANR	3906039	Identifier	zend_hash_add_new		3905981	0					
ANR	3906040	ArgumentList	Z_ARRVAL_P ( name_array )		3905981	1					
ANR	3906041	Argument	Z_ARRVAL_P ( name_array )		3905981	0					
ANR	3906042	CallExpression	Z_ARRVAL_P ( name_array )		3905981	0					
ANR	3906043	Callee	Z_ARRVAL_P		3905981	0					
ANR	3906044	Identifier	Z_ARRVAL_P		3905981	0					
ANR	3906045	ArgumentList	name_array		3905981	1					
ANR	3906046	Argument	name_array		3905981	0					
ANR	3906047	Identifier	name_array		3905981	0					
ANR	3906048	Argument	constant -> name		3905981	1					
ANR	3906049	PtrMemberAccess	constant -> name		3905981	0					
ANR	3906050	Identifier	constant		3905981	0					
ANR	3906051	Identifier	name		3905981	1					
ANR	3906052	Argument	& const_val		3905981	2					
ANR	3906053	UnaryOperationExpression	& const_val		3905981	0					
ANR	3906054	UnaryOperator	&		3905981	0					
ANR	3906055	Identifier	const_val		3905981	1					
ANR	3906056	ReturnStatement	return 0 ;	2148:1:58884:58892	3905981	6	True				
ANR	3906057	PrimaryExpression	0		3905981	0					
ANR	3906058	ReturnType	static int		3905981	1					
ANR	3906059	Identifier	add_constant_info		3905981	2					
ANR	3906060	ParameterList	"zval * item , void * arg"		3905981	3					
ANR	3906061	Parameter	zval * item	2135:29:58555:58564	3905981	0	True				
ANR	3906062	ParameterType	zval *		3905981	0					
ANR	3906063	Identifier	item		3905981	1					
ANR	3906064	Parameter	void * arg	2135:41:58567:58575	3905981	1	True				
ANR	3906065	ParameterType	void *		3905981	0					
ANR	3906066	Identifier	arg		3905981	1					
ANR	3906067	CFGEntryNode	ENTRY		3905981		True				
ANR	3906068	CFGExitNode	EXIT		3905981		True				
ANR	3906069	Symbol	Z_PTR_P		3905981						
ANR	3906070	Symbol	item		3905981						
ANR	3906071	Symbol	constant -> name		3905981						
ANR	3906072	Symbol	constant		3905981						
ANR	3906073	Symbol	& constant -> value		3905981						
ANR	3906074	Symbol	const_val		3905981						
ANR	3906075	Symbol	arg		3905981						
ANR	3906076	Symbol	* constant		3905981						
ANR	3906077	Symbol	Z_ARRVAL_P		3905981						
ANR	3906078	Symbol	name_array		3905981						
ANR	3906079	Symbol	& const_val		3905981						
ANR	3906080	DeclStmt									
ANR	3906081	Decl							zend_bool	zend_bool	zendext
ANR	3906082	DeclStmt									
ANR	3906083	Decl							zend_bool	zend_bool	categorize
ANR	3906084	DeclStmt									
ANR	3906085	Decl							zend_constant	zend_constant *	val
ANR	3906086	DeclStmt									
ANR	3906087	Decl							int	int	module_number
ANR	3906088	DeclStmt									
ANR	3906089	Decl							zval	zval *	modules
ANR	3906090	Decl							zval	zval	const_val
ANR	3906091	DeclStmt									
ANR	3906092	Decl							char	char * *	module_names
ANR	3906093	DeclStmt									
ANR	3906094	Decl							zend_module_entry	zend_module_entry *	module
ANR	3906095	DeclStmt									
ANR	3906096	Decl							int	int	i
ANR	3906097	Function	debug_backtrace_get_args	2234:0:61171:62316							
ANR	3906098	FunctionDef	"debug_backtrace_get_args (zend_execute_data * call , zval * arg_array)"		3906097	0					
ANR	3906099	CompoundStatement		2235:0:61260:62316	3906097	0					
ANR	3906100	IdentifierDeclStatement	uint32_t num_args = ZEND_CALL_NUM_ARGS ( call ) ;	2236:1:61263:61307	3906097	0	True				
ANR	3906101	IdentifierDecl	num_args = ZEND_CALL_NUM_ARGS ( call )		3906097	0					
ANR	3906102	IdentifierDeclType	uint32_t		3906097	0					
ANR	3906103	Identifier	num_args		3906097	1					
ANR	3906104	AssignmentExpression	num_args = ZEND_CALL_NUM_ARGS ( call )		3906097	2		=			
ANR	3906105	Identifier	num_args		3906097	0					
ANR	3906106	CallExpression	ZEND_CALL_NUM_ARGS ( call )		3906097	1					
ANR	3906107	Callee	ZEND_CALL_NUM_ARGS		3906097	0					
ANR	3906108	Identifier	ZEND_CALL_NUM_ARGS		3906097	0					
ANR	3906109	ArgumentList	call		3906097	1					
ANR	3906110	Argument	call		3906097	0					
ANR	3906111	Identifier	call		3906097	0					
ANR	3906112	ExpressionStatement	"array_init_size ( arg_array , num_args )"	2238:1:61311:61347	3906097	1	True				
ANR	3906113	CallExpression	"array_init_size ( arg_array , num_args )"		3906097	0					
ANR	3906114	Callee	array_init_size		3906097	0					
ANR	3906115	Identifier	array_init_size		3906097	0					
ANR	3906116	ArgumentList	arg_array		3906097	1					
ANR	3906117	Argument	arg_array		3906097	0					
ANR	3906118	Identifier	arg_array		3906097	0					
ANR	3906119	Argument	num_args		3906097	1					
ANR	3906120	Identifier	num_args		3906097	0					
ANR	3906121	IfStatement	if ( num_args )		3906097	2					
ANR	3906122	Condition	num_args	2239:5:61354:61361	3906097	0	True				
ANR	3906123	Identifier	num_args		3906097	0					
ANR	3906124	CompoundStatement		8:2:143:175	3906097	1					
ANR	3906125	IdentifierDeclStatement	uint32_t i = 0 ;	2240:2:61368:61382	3906097	0	True				
ANR	3906126	IdentifierDecl	i = 0		3906097	0					
ANR	3906127	IdentifierDeclType	uint32_t		3906097	0					
ANR	3906128	Identifier	i		3906097	1					
ANR	3906129	AssignmentExpression	i = 0		3906097	2		=			
ANR	3906130	Identifier	i		3906097	0					
ANR	3906131	PrimaryExpression	0		3906097	1					
ANR	3906132	IdentifierDeclStatement	uint32_t n = 0 ;	2241:2:61386:61400	3906097	1	True				
ANR	3906133	IdentifierDecl	n = 0		3906097	0					
ANR	3906134	IdentifierDeclType	uint32_t		3906097	0					
ANR	3906135	Identifier	n		3906097	1					
ANR	3906136	AssignmentExpression	n = 0		3906097	2		=			
ANR	3906137	Identifier	n		3906097	0					
ANR	3906138	PrimaryExpression	0		3906097	1					
ANR	3906139	IdentifierDeclStatement	"zval * p = ZEND_CALL_ARG ( call , 1 ) ;"	2242:2:61404:61436	3906097	2	True				
ANR	3906140	IdentifierDecl	"* p = ZEND_CALL_ARG ( call , 1 )"		3906097	0					
ANR	3906141	IdentifierDeclType	zval *		3906097	0					
ANR	3906142	Identifier	p		3906097	1					
ANR	3906143	AssignmentExpression	"* p = ZEND_CALL_ARG ( call , 1 )"		3906097	2		=			
ANR	3906144	Identifier	p		3906097	0					
ANR	3906145	CallExpression	"ZEND_CALL_ARG ( call , 1 )"		3906097	1					
ANR	3906146	Callee	ZEND_CALL_ARG		3906097	0					
ANR	3906147	Identifier	ZEND_CALL_ARG		3906097	0					
ANR	3906148	ArgumentList	call		3906097	1					
ANR	3906149	Argument	call		3906097	0					
ANR	3906150	Identifier	call		3906097	0					
ANR	3906151	Argument	1		3906097	1					
ANR	3906152	PrimaryExpression	1		3906097	0					
ANR	3906153	ExpressionStatement	"zend_hash_real_init ( Z_ARRVAL_P ( arg_array ) , 1 )"	2244:2:61441:61486	3906097	3	True				
ANR	3906154	CallExpression	"zend_hash_real_init ( Z_ARRVAL_P ( arg_array ) , 1 )"		3906097	0					
ANR	3906155	Callee	zend_hash_real_init		3906097	0					
ANR	3906156	Identifier	zend_hash_real_init		3906097	0					
ANR	3906157	ArgumentList	Z_ARRVAL_P ( arg_array )		3906097	1					
ANR	3906158	Argument	Z_ARRVAL_P ( arg_array )		3906097	0					
ANR	3906159	CallExpression	Z_ARRVAL_P ( arg_array )		3906097	0					
ANR	3906160	Callee	Z_ARRVAL_P		3906097	0					
ANR	3906161	Identifier	Z_ARRVAL_P		3906097	0					
ANR	3906162	ArgumentList	arg_array		3906097	1					
ANR	3906163	Argument	arg_array		3906097	0					
ANR	3906164	Identifier	arg_array		3906097	0					
ANR	3906165	Argument	1		3906097	1					
ANR	3906166	PrimaryExpression	1		3906097	0					
ANR	3906167	Statement	ZEND_HASH_FILL_PACKED	2245:2:61490:61510	3906097	4	True				
ANR	3906168	Statement	(	2245:23:61511:61511	3906097	5	True				
ANR	3906169	Statement	Z_ARRVAL_P	2245:24:61512:61521	3906097	6	True				
ANR	3906170	Statement	(	2245:34:61522:61522	3906097	7	True				
ANR	3906171	Statement	arg_array	2245:35:61523:61531	3906097	8	True				
ANR	3906172	Statement	)	2245:44:61532:61532	3906097	9	True				
ANR	3906173	Statement	)	2245:45:61533:61533	3906097	10	True				
ANR	3906174	CompoundStatement		11:47:274:274	3906097	11					
ANR	3906175	IfStatement	if ( call -> func -> type == ZEND_USER_FUNCTION )		3906097	0					
ANR	3906176	Condition	call -> func -> type == ZEND_USER_FUNCTION	2246:7:61544:61581	3906097	0	True				
ANR	3906177	EqualityExpression	call -> func -> type == ZEND_USER_FUNCTION		3906097	0		==			
ANR	3906178	PtrMemberAccess	call -> func -> type		3906097	0					
ANR	3906179	PtrMemberAccess	call -> func		3906097	0					
ANR	3906180	Identifier	call		3906097	0					
ANR	3906181	Identifier	func		3906097	1					
ANR	3906182	Identifier	type		3906097	1					
ANR	3906183	Identifier	ZEND_USER_FUNCTION		3906097	1					
ANR	3906184	CompoundStatement		13:4:329:385	3906097	1					
ANR	3906185	IdentifierDeclStatement	uint32_t first_extra_arg = call -> func -> op_array . num_args ;	2247:4:61590:61646	3906097	0	True				
ANR	3906186	IdentifierDecl	first_extra_arg = call -> func -> op_array . num_args		3906097	0					
ANR	3906187	IdentifierDeclType	uint32_t		3906097	0					
ANR	3906188	Identifier	first_extra_arg		3906097	1					
ANR	3906189	AssignmentExpression	first_extra_arg = call -> func -> op_array . num_args		3906097	2		=			
ANR	3906190	Identifier	first_extra_arg		3906097	0					
ANR	3906191	MemberAccess	call -> func -> op_array . num_args		3906097	1					
ANR	3906192	PtrMemberAccess	call -> func -> op_array		3906097	0					
ANR	3906193	PtrMemberAccess	call -> func		3906097	0					
ANR	3906194	Identifier	call		3906097	0					
ANR	3906195	Identifier	func		3906097	1					
ANR	3906196	Identifier	op_array		3906097	1					
ANR	3906197	Identifier	num_args		3906097	1					
ANR	3906198	IfStatement	if ( ZEND_CALL_NUM_ARGS ( call ) > first_extra_arg )		3906097	1					
ANR	3906199	Condition	ZEND_CALL_NUM_ARGS ( call ) > first_extra_arg	2249:8:61657:61698	3906097	0	True				
ANR	3906200	RelationalExpression	ZEND_CALL_NUM_ARGS ( call ) > first_extra_arg		3906097	0		>			
ANR	3906201	CallExpression	ZEND_CALL_NUM_ARGS ( call )		3906097	0					
ANR	3906202	Callee	ZEND_CALL_NUM_ARGS		3906097	0					
ANR	3906203	Identifier	ZEND_CALL_NUM_ARGS		3906097	0					
ANR	3906204	ArgumentList	call		3906097	1					
ANR	3906205	Argument	call		3906097	0					
ANR	3906206	Identifier	call		3906097	0					
ANR	3906207	Identifier	first_extra_arg		3906097	1					
ANR	3906208	CompoundStatement		15:52:440:440	3906097	1					
ANR	3906209	WhileStatement	while ( i < first_extra_arg )		3906097	0					
ANR	3906210	Condition	i < first_extra_arg	2250:12:61715:61733	3906097	0	True				
ANR	3906211	RelationalExpression	i < first_extra_arg		3906097	0		<			
ANR	3906212	Identifier	i		3906097	0					
ANR	3906213	Identifier	first_extra_arg		3906097	1					
ANR	3906214	CompoundStatement		16:33:475:475	3906097	1					
ANR	3906215	IfStatement	if ( EXPECTED ( Z_TYPE_INFO_P ( p ) != IS_UNDEF ) )		3906097	0					
ANR	3906216	Condition	EXPECTED ( Z_TYPE_INFO_P ( p ) != IS_UNDEF )	2251:10:61748:61785	3906097	0	True				
ANR	3906217	CallExpression	EXPECTED ( Z_TYPE_INFO_P ( p ) != IS_UNDEF )		3906097	0					
ANR	3906218	Callee	EXPECTED		3906097	0					
ANR	3906219	Identifier	EXPECTED		3906097	0					
ANR	3906220	ArgumentList	Z_TYPE_INFO_P ( p ) != IS_UNDEF		3906097	1					
ANR	3906221	Argument	Z_TYPE_INFO_P ( p ) != IS_UNDEF		3906097	0					
ANR	3906222	EqualityExpression	Z_TYPE_INFO_P ( p ) != IS_UNDEF		3906097	0		!=			
ANR	3906223	CallExpression	Z_TYPE_INFO_P ( p )		3906097	0					
ANR	3906224	Callee	Z_TYPE_INFO_P		3906097	0					
ANR	3906225	Identifier	Z_TYPE_INFO_P		3906097	0					
ANR	3906226	ArgumentList	p		3906097	1					
ANR	3906227	Argument	p		3906097	0					
ANR	3906228	Identifier	p		3906097	0					
ANR	3906229	Identifier	IS_UNDEF		3906097	1					
ANR	3906230	CompoundStatement		17:50:527:527	3906097	1					
ANR	3906231	IfStatement	if ( Z_OPT_REFCOUNTED_P ( p ) )		3906097	0					
ANR	3906232	Condition	Z_OPT_REFCOUNTED_P ( p )	2252:11:61801:61821	3906097	0	True				
ANR	3906233	CallExpression	Z_OPT_REFCOUNTED_P ( p )		3906097	0					
ANR	3906234	Callee	Z_OPT_REFCOUNTED_P		3906097	0					
ANR	3906235	Identifier	Z_OPT_REFCOUNTED_P		3906097	0					
ANR	3906236	ArgumentList	p		3906097	1					
ANR	3906237	Argument	p		3906097	0					
ANR	3906238	Identifier	p		3906097	0					
ANR	3906239	CompoundStatement		18:34:563:563	3906097	1					
ANR	3906240	ExpressionStatement	Z_ADDREF_P ( p )	2253:8:61834:61847	3906097	0	True				
ANR	3906241	CallExpression	Z_ADDREF_P ( p )		3906097	0					
ANR	3906242	Callee	Z_ADDREF_P		3906097	0					
ANR	3906243	Identifier	Z_ADDREF_P		3906097	0					
ANR	3906244	ArgumentList	p		3906097	1					
ANR	3906245	Argument	p		3906097	0					
ANR	3906246	Identifier	p		3906097	0					
ANR	3906247	ExpressionStatement	n ++	2255:7:61865:61868	3906097	1	True				
ANR	3906248	PostIncDecOperationExpression	n ++		3906097	0					
ANR	3906249	Identifier	n		3906097	0					
ANR	3906250	IncDec	++		3906097	1					
ANR	3906251	ExpressionStatement	ZEND_HASH_FILL_ADD ( p )	2257:6:61884:61905	3906097	1	True				
ANR	3906252	CallExpression	ZEND_HASH_FILL_ADD ( p )		3906097	0					
ANR	3906253	Callee	ZEND_HASH_FILL_ADD		3906097	0					
ANR	3906254	Identifier	ZEND_HASH_FILL_ADD		3906097	0					
ANR	3906255	ArgumentList	p		3906097	1					
ANR	3906256	Argument	p		3906097	0					
ANR	3906257	Identifier	p		3906097	0					
ANR	3906258	ExpressionStatement	p ++	2258:6:61913:61916	3906097	2	True				
ANR	3906259	PostIncDecOperationExpression	p ++		3906097	0					
ANR	3906260	Identifier	p		3906097	0					
ANR	3906261	IncDec	++		3906097	1					
ANR	3906262	ExpressionStatement	i ++	2259:6:61924:61927	3906097	3	True				
ANR	3906263	PostIncDecOperationExpression	i ++		3906097	0					
ANR	3906264	Identifier	i		3906097	0					
ANR	3906265	IncDec	++		3906097	1					
ANR	3906266	ExpressionStatement	"p = ZEND_CALL_VAR_NUM ( call , call -> func -> op_array . last_var + call -> func -> op_array . T )"	2261:5:61941:62024	3906097	1	True				
ANR	3906267	AssignmentExpression	"p = ZEND_CALL_VAR_NUM ( call , call -> func -> op_array . last_var + call -> func -> op_array . T )"		3906097	0		=			
ANR	3906268	Identifier	p		3906097	0					
ANR	3906269	CallExpression	"ZEND_CALL_VAR_NUM ( call , call -> func -> op_array . last_var + call -> func -> op_array . T )"		3906097	1					
ANR	3906270	Callee	ZEND_CALL_VAR_NUM		3906097	0					
ANR	3906271	Identifier	ZEND_CALL_VAR_NUM		3906097	0					
ANR	3906272	ArgumentList	call		3906097	1					
ANR	3906273	Argument	call		3906097	0					
ANR	3906274	Identifier	call		3906097	0					
ANR	3906275	Argument	call -> func -> op_array . last_var + call -> func -> op_array . T		3906097	1					
ANR	3906276	AdditiveExpression	call -> func -> op_array . last_var + call -> func -> op_array . T		3906097	0		+			
ANR	3906277	MemberAccess	call -> func -> op_array . last_var		3906097	0					
ANR	3906278	PtrMemberAccess	call -> func -> op_array		3906097	0					
ANR	3906279	PtrMemberAccess	call -> func		3906097	0					
ANR	3906280	Identifier	call		3906097	0					
ANR	3906281	Identifier	func		3906097	1					
ANR	3906282	Identifier	op_array		3906097	1					
ANR	3906283	Identifier	last_var		3906097	1					
ANR	3906284	MemberAccess	call -> func -> op_array . T		3906097	1					
ANR	3906285	PtrMemberAccess	call -> func -> op_array		3906097	0					
ANR	3906286	PtrMemberAccess	call -> func		3906097	0					
ANR	3906287	Identifier	call		3906097	0					
ANR	3906288	Identifier	func		3906097	1					
ANR	3906289	Identifier	op_array		3906097	1					
ANR	3906290	Identifier	T		3906097	1					
ANR	3906291	WhileStatement	while ( i < num_args )		3906097	1					
ANR	3906292	Condition	i < num_args	2265:10:62048:62059	3906097	0	True				
ANR	3906293	RelationalExpression	i < num_args		3906097	0		<			
ANR	3906294	Identifier	i		3906097	0					
ANR	3906295	Identifier	num_args		3906097	1					
ANR	3906296	CompoundStatement		31:24:801:801	3906097	1					
ANR	3906297	IfStatement	if ( EXPECTED ( Z_TYPE_INFO_P ( p ) != IS_UNDEF ) )		3906097	0					
ANR	3906298	Condition	EXPECTED ( Z_TYPE_INFO_P ( p ) != IS_UNDEF )	2266:8:62072:62109	3906097	0	True				
ANR	3906299	CallExpression	EXPECTED ( Z_TYPE_INFO_P ( p ) != IS_UNDEF )		3906097	0					
ANR	3906300	Callee	EXPECTED		3906097	0					
ANR	3906301	Identifier	EXPECTED		3906097	0					
ANR	3906302	ArgumentList	Z_TYPE_INFO_P ( p ) != IS_UNDEF		3906097	1					
ANR	3906303	Argument	Z_TYPE_INFO_P ( p ) != IS_UNDEF		3906097	0					
ANR	3906304	EqualityExpression	Z_TYPE_INFO_P ( p ) != IS_UNDEF		3906097	0		!=			
ANR	3906305	CallExpression	Z_TYPE_INFO_P ( p )		3906097	0					
ANR	3906306	Callee	Z_TYPE_INFO_P		3906097	0					
ANR	3906307	Identifier	Z_TYPE_INFO_P		3906097	0					
ANR	3906308	ArgumentList	p		3906097	1					
ANR	3906309	Argument	p		3906097	0					
ANR	3906310	Identifier	p		3906097	0					
ANR	3906311	Identifier	IS_UNDEF		3906097	1					
ANR	3906312	CompoundStatement		32:48:851:851	3906097	1					
ANR	3906313	IfStatement	if ( Z_OPT_REFCOUNTED_P ( p ) )		3906097	0					
ANR	3906314	Condition	Z_OPT_REFCOUNTED_P ( p )	2267:9:62123:62143	3906097	0	True				
ANR	3906315	CallExpression	Z_OPT_REFCOUNTED_P ( p )		3906097	0					
ANR	3906316	Callee	Z_OPT_REFCOUNTED_P		3906097	0					
ANR	3906317	Identifier	Z_OPT_REFCOUNTED_P		3906097	0					
ANR	3906318	ArgumentList	p		3906097	1					
ANR	3906319	Argument	p		3906097	0					
ANR	3906320	Identifier	p		3906097	0					
ANR	3906321	CompoundStatement		33:32:885:885	3906097	1					
ANR	3906322	ExpressionStatement	Z_ADDREF_P ( p )	2268:6:62154:62167	3906097	0	True				
ANR	3906323	CallExpression	Z_ADDREF_P ( p )		3906097	0					
ANR	3906324	Callee	Z_ADDREF_P		3906097	0					
ANR	3906325	Identifier	Z_ADDREF_P		3906097	0					
ANR	3906326	ArgumentList	p		3906097	1					
ANR	3906327	Argument	p		3906097	0					
ANR	3906328	Identifier	p		3906097	0					
ANR	3906329	ExpressionStatement	n ++	2270:5:62181:62184	3906097	1	True				
ANR	3906330	PostIncDecOperationExpression	n ++		3906097	0					
ANR	3906331	Identifier	n		3906097	0					
ANR	3906332	IncDec	++		3906097	1					
ANR	3906333	ExpressionStatement	ZEND_HASH_FILL_ADD ( p )	2272:4:62196:62217	3906097	1	True				
ANR	3906334	CallExpression	ZEND_HASH_FILL_ADD ( p )		3906097	0					
ANR	3906335	Callee	ZEND_HASH_FILL_ADD		3906097	0					
ANR	3906336	Identifier	ZEND_HASH_FILL_ADD		3906097	0					
ANR	3906337	ArgumentList	p		3906097	1					
ANR	3906338	Argument	p		3906097	0					
ANR	3906339	Identifier	p		3906097	0					
ANR	3906340	ExpressionStatement	p ++	2273:4:62223:62226	3906097	2	True				
ANR	3906341	PostIncDecOperationExpression	p ++		3906097	0					
ANR	3906342	Identifier	p		3906097	0					
ANR	3906343	IncDec	++		3906097	1					
ANR	3906344	ExpressionStatement	i ++	2274:4:62232:62235	3906097	3	True				
ANR	3906345	PostIncDecOperationExpression	i ++		3906097	0					
ANR	3906346	Identifier	i		3906097	0					
ANR	3906347	IncDec	++		3906097	1					
ANR	3906348	ExpressionStatement	ZEND_HASH_FILL_END ( )	2276:4:62246:62266	3906097	12	True				
ANR	3906349	CallExpression	ZEND_HASH_FILL_END ( )		3906097	0					
ANR	3906350	Callee	ZEND_HASH_FILL_END		3906097	0					
ANR	3906351	Identifier	ZEND_HASH_FILL_END		3906097	0					
ANR	3906352	ArgumentList			3906097	1					
ANR	3906353	ExpressionStatement	Z_ARRVAL_P ( arg_array ) -> nNumOfElements = n	2277:2:62270:62311	3906097	13	True				
ANR	3906354	AssignmentExpression	Z_ARRVAL_P ( arg_array ) -> nNumOfElements = n		3906097	0		=			
ANR	3906355	PtrMemberAccess	Z_ARRVAL_P ( arg_array ) -> nNumOfElements		3906097	0					
ANR	3906356	CallExpression	Z_ARRVAL_P ( arg_array )		3906097	0					
ANR	3906357	Callee	Z_ARRVAL_P		3906097	0					
ANR	3906358	Identifier	Z_ARRVAL_P		3906097	0					
ANR	3906359	ArgumentList	arg_array		3906097	1					
ANR	3906360	Argument	arg_array		3906097	0					
ANR	3906361	Identifier	arg_array		3906097	0					
ANR	3906362	Identifier	nNumOfElements		3906097	1					
ANR	3906363	Identifier	n		3906097	1					
ANR	3906364	ReturnType	static void		3906097	1					
ANR	3906365	Identifier	debug_backtrace_get_args		3906097	2					
ANR	3906366	ParameterList	"zend_execute_data * call , zval * arg_array"		3906097	3					
ANR	3906367	Parameter	zend_execute_data * call	2234:37:61208:61230	3906097	0	True				
ANR	3906368	ParameterType	zend_execute_data *		3906097	0					
ANR	3906369	Identifier	call		3906097	1					
ANR	3906370	Parameter	zval * arg_array	2234:62:61233:61247	3906097	1	True				
ANR	3906371	ParameterType	zval *		3906097	0					
ANR	3906372	Identifier	arg_array		3906097	1					
ANR	3906373	CFGEntryNode	ENTRY		3906097		True				
ANR	3906374	CFGExitNode	EXIT		3906097		True				
ANR	3906375	Symbol	call -> func		3906097						
ANR	3906376	Symbol	call -> func -> op_array		3906097						
ANR	3906377	Symbol	call -> func -> op_array . num_args		3906097						
ANR	3906378	Symbol	ZEND_CALL_ARG		3906097						
ANR	3906379	Symbol	* call		3906097						
ANR	3906380	Symbol	* Z_ARRVAL_P		3906097						
ANR	3906381	Symbol	call -> func -> op_array . T		3906097						
ANR	3906382	Symbol	call -> func -> type		3906097						
ANR	3906383	Symbol	arg_array		3906097						
ANR	3906384	Symbol	first_extra_arg		3906097						
ANR	3906385	Symbol	* call -> func		3906097						
ANR	3906386	Symbol	num_args		3906097						
ANR	3906387	Symbol	ZEND_USER_FUNCTION		3906097						
ANR	3906388	Symbol	ZEND_CALL_NUM_ARGS		3906097						
ANR	3906389	Symbol	Z_ARRVAL_P		3906097						
ANR	3906390	Symbol	IS_UNDEF		3906097						
ANR	3906391	Symbol	* * call		3906097						
ANR	3906392	Symbol	Z_OPT_REFCOUNTED_P		3906097						
ANR	3906393	Symbol	call -> func -> op_array . last_var		3906097						
ANR	3906394	Symbol	i		3906097						
ANR	3906395	Symbol	n		3906097						
ANR	3906396	Symbol	Z_TYPE_INFO_P		3906097						
ANR	3906397	Symbol	call		3906097						
ANR	3906398	Symbol	p		3906097						
ANR	3906399	Symbol	Z_ARRVAL_P ( arg_array ) -> nNumOfElements		3906097						
ANR	3906400	Symbol	ZEND_CALL_VAR_NUM		3906097						
ANR	3906401	Symbol	EXPECTED		3906097						
ANR	3906402	Function	debug_print_backtrace_args	2282:0:62329:62564							
ANR	3906403	FunctionDef	debug_print_backtrace_args (zval * arg_array)		3906402	0					
ANR	3906404	CompoundStatement		2283:0:62388:62564	3906402	0					
ANR	3906405	IdentifierDeclStatement	zval * tmp ;	2284:1:62391:62400	3906402	0	True				
ANR	3906406	IdentifierDecl	* tmp		3906402	0					
ANR	3906407	IdentifierDeclType	zval *		3906402	0					
ANR	3906408	Identifier	tmp		3906402	1					
ANR	3906409	IdentifierDeclStatement	int i = 0 ;	2285:1:62403:62412	3906402	1	True				
ANR	3906410	IdentifierDecl	i = 0		3906402	0					
ANR	3906411	IdentifierDeclType	int		3906402	0					
ANR	3906412	Identifier	i		3906402	1					
ANR	3906413	AssignmentExpression	i = 0		3906402	2		=			
ANR	3906414	Identifier	i		3906402	0					
ANR	3906415	PrimaryExpression	0		3906402	1					
ANR	3906416	Statement	ZEND_HASH_FOREACH_VAL	2287:1:62416:62436	3906402	2	True				
ANR	3906417	Statement	(	2287:22:62437:62437	3906402	3	True				
ANR	3906418	Statement	Z_ARRVAL_P	2287:23:62438:62447	3906402	4	True				
ANR	3906419	Statement	(	2287:33:62448:62448	3906402	5	True				
ANR	3906420	Statement	arg_array	2287:34:62449:62457	3906402	6	True				
ANR	3906421	Statement	)	2287:43:62458:62458	3906402	7	True				
ANR	3906422	Statement	","	2287:44:62459:62459	3906402	8	True				
ANR	3906423	Statement	tmp	2287:46:62461:62463	3906402	9	True				
ANR	3906424	Statement	)	2287:49:62464:62464	3906402	10	True				
ANR	3906425	CompoundStatement		5:51:77:77	3906402	11					
ANR	3906426	IfStatement	if ( i ++ )		3906402	0					
ANR	3906427	Condition	i ++	2288:6:62474:62476	3906402	0	True				
ANR	3906428	PostIncDecOperationExpression	i ++		3906402	0					
ANR	3906429	Identifier	i		3906402	0					
ANR	3906430	IncDec	++		3906402	1					
ANR	3906431	CompoundStatement		6:11:90:90	3906402	1					
ANR	3906432	ExpressionStatement	"ZEND_PUTS ( "", "" )"	2289:3:62484:62499	3906402	0	True				
ANR	3906433	CallExpression	"ZEND_PUTS ( "", "" )"		3906402	0					
ANR	3906434	Callee	ZEND_PUTS		3906402	0					
ANR	3906435	Identifier	ZEND_PUTS		3906402	0					
ANR	3906436	ArgumentList	""", """		3906402	1					
ANR	3906437	Argument	""", """		3906402	0					
ANR	3906438	PrimaryExpression	""", """		3906402	0					
ANR	3906439	ExpressionStatement	zend_print_flat_zval_r ( tmp )	2291:2:62507:62534	3906402	1	True				
ANR	3906440	CallExpression	zend_print_flat_zval_r ( tmp )		3906402	0					
ANR	3906441	Callee	zend_print_flat_zval_r		3906402	0					
ANR	3906442	Identifier	zend_print_flat_zval_r		3906402	0					
ANR	3906443	ArgumentList	tmp		3906402	1					
ANR	3906444	Argument	tmp		3906402	0					
ANR	3906445	Identifier	tmp		3906402	0					
ANR	3906446	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	2292:3:62539:62562	3906402	12	True				
ANR	3906447	CallExpression	ZEND_HASH_FOREACH_END ( )		3906402	0					
ANR	3906448	Callee	ZEND_HASH_FOREACH_END		3906402	0					
ANR	3906449	Identifier	ZEND_HASH_FOREACH_END		3906402	0					
ANR	3906450	ArgumentList			3906402	1					
ANR	3906451	ReturnType	void		3906402	1					
ANR	3906452	Identifier	debug_print_backtrace_args		3906402	2					
ANR	3906453	ParameterList	zval * arg_array		3906402	3					
ANR	3906454	Parameter	zval * arg_array	2282:32:62361:62375	3906402	0	True				
ANR	3906455	ParameterType	zval *		3906402	0					
ANR	3906456	Identifier	arg_array		3906402	1					
ANR	3906457	CFGEntryNode	ENTRY		3906402		True				
ANR	3906458	CFGExitNode	EXIT		3906402		True				
ANR	3906459	Symbol	tmp		3906402						
ANR	3906460	Symbol	i		3906402						
ANR	3906461	Symbol	arg_array		3906402						
ANR	3906462	DeclStmt									
ANR	3906463	Decl							zend_execute_data	zend_execute_data *	call
ANR	3906464	Decl							zend_execute_data	zend_execute_data *	ptr
ANR	3906465	Decl							zend_execute_data	zend_execute_data *	skip
ANR	3906466	DeclStmt									
ANR	3906467	Decl							zend_object	zend_object *	object
ANR	3906468	DeclStmt									
ANR	3906469	Decl							int	int	lineno
ANR	3906470	Decl							int	int	frameno
ANR	3906471	DeclStmt									
ANR	3906472	Decl							zend_function	zend_function *	func
ANR	3906473	DeclStmt									
ANR	3906474	Decl							const char	const char *	function_name
ANR	3906475	DeclStmt									
ANR	3906476	Decl							const char	const char *	filename
ANR	3906477	DeclStmt									
ANR	3906478	Decl							zend_string	zend_string *	class_name
ANR	3906479	DeclStmt									
ANR	3906480	Decl							char	char *	call_type
ANR	3906481	DeclStmt									
ANR	3906482	Decl							const char	const char *	include_filename
ANR	3906483	DeclStmt									
ANR	3906484	Decl							zval	zval	arg_array
ANR	3906485	DeclStmt									
ANR	3906486	Decl							int	int	indent
ANR	3906487	DeclStmt									
ANR	3906488	Decl							zend_long	zend_long	options
ANR	3906489	DeclStmt									
ANR	3906490	Decl							zend_long	zend_long	limit
ANR	3906491	DeclStmt									
ANR	3906492	Decl							zend_bool	zend_bool	build_filename_arg
ANR	3906493	DeclStmt									
ANR	3906494	Decl							zend_execute_data	zend_execute_data *	prev_call
ANR	3906495	DeclStmt									
ANR	3906496	Decl							zend_execute_data	zend_execute_data *	prev
ANR	3906497	Function	zend_fetch_debug_backtrace	2482:0:67688:74221							
ANR	3906498	FunctionDef	"zend_fetch_debug_backtrace (zval * return_value , int skip_last , int options , int limit)"		3906497	0					
ANR	3906499	CompoundStatement		2483:0:67798:74221	3906497	0					
ANR	3906500	IdentifierDeclStatement	"zend_execute_data * ptr , * skip , * call = NULL ;"	2484:1:67801:67844	3906497	0	True				
ANR	3906501	IdentifierDecl	* ptr		3906497	0					
ANR	3906502	IdentifierDeclType	zend_execute_data *		3906497	0					
ANR	3906503	Identifier	ptr		3906497	1					
ANR	3906504	IdentifierDecl	* skip		3906497	1					
ANR	3906505	IdentifierDeclType	zend_execute_data *		3906497	0					
ANR	3906506	Identifier	skip		3906497	1					
ANR	3906507	IdentifierDecl	* call = NULL		3906497	2					
ANR	3906508	IdentifierDeclType	zend_execute_data *		3906497	0					
ANR	3906509	Identifier	call		3906497	1					
ANR	3906510	AssignmentExpression	* call = NULL		3906497	2		=			
ANR	3906511	Identifier	NULL		3906497	0					
ANR	3906512	Identifier	NULL		3906497	1					
ANR	3906513	IdentifierDeclStatement	zend_object * object ;	2485:1:67847:67866	3906497	1	True				
ANR	3906514	IdentifierDecl	* object		3906497	0					
ANR	3906515	IdentifierDeclType	zend_object *		3906497	0					
ANR	3906516	Identifier	object		3906497	1					
ANR	3906517	IdentifierDeclStatement	"int lineno , frameno = 0 ;"	2486:1:67869:67892	3906497	2	True				
ANR	3906518	IdentifierDecl	lineno		3906497	0					
ANR	3906519	IdentifierDeclType	int		3906497	0					
ANR	3906520	Identifier	lineno		3906497	1					
ANR	3906521	IdentifierDecl	frameno = 0		3906497	1					
ANR	3906522	IdentifierDeclType	int		3906497	0					
ANR	3906523	Identifier	frameno		3906497	1					
ANR	3906524	AssignmentExpression	frameno = 0		3906497	2		=			
ANR	3906525	Identifier	frameno		3906497	0					
ANR	3906526	PrimaryExpression	0		3906497	1					
ANR	3906527	IdentifierDeclStatement	zend_function * func ;	2487:1:67895:67914	3906497	3	True				
ANR	3906528	IdentifierDecl	* func		3906497	0					
ANR	3906529	IdentifierDeclType	zend_function *		3906497	0					
ANR	3906530	Identifier	func		3906497	1					
ANR	3906531	IdentifierDeclStatement	zend_string * function_name ;	2488:1:67917:67943	3906497	4	True				
ANR	3906532	IdentifierDecl	* function_name		3906497	0					
ANR	3906533	IdentifierDeclType	zend_string *		3906497	0					
ANR	3906534	Identifier	function_name		3906497	1					
ANR	3906535	IdentifierDeclStatement	zend_string * filename ;	2489:1:67946:67967	3906497	5	True				
ANR	3906536	IdentifierDecl	* filename		3906497	0					
ANR	3906537	IdentifierDeclType	zend_string *		3906497	0					
ANR	3906538	Identifier	filename		3906497	1					
ANR	3906539	IdentifierDeclStatement	zend_string * include_filename = NULL ;	2490:1:67970:68006	3906497	6	True				
ANR	3906540	IdentifierDecl	* include_filename = NULL		3906497	0					
ANR	3906541	IdentifierDeclType	zend_string *		3906497	0					
ANR	3906542	Identifier	include_filename		3906497	1					
ANR	3906543	AssignmentExpression	* include_filename = NULL		3906497	2		=			
ANR	3906544	Identifier	NULL		3906497	0					
ANR	3906545	Identifier	NULL		3906497	1					
ANR	3906546	IdentifierDeclStatement	zval stack_frame ;	2491:1:68009:68025	3906497	7	True				
ANR	3906547	IdentifierDecl	stack_frame		3906497	0					
ANR	3906548	IdentifierDeclType	zval		3906497	0					
ANR	3906549	Identifier	stack_frame		3906497	1					
ANR	3906550	ExpressionStatement	array_init ( return_value )	2493:1:68029:68053	3906497	8	True				
ANR	3906551	CallExpression	array_init ( return_value )		3906497	0					
ANR	3906552	Callee	array_init		3906497	0					
ANR	3906553	Identifier	array_init		3906497	0					
ANR	3906554	ArgumentList	return_value		3906497	1					
ANR	3906555	Argument	return_value		3906497	0					
ANR	3906556	Identifier	return_value		3906497	0					
ANR	3906557	IfStatement	if ( ! ( ptr = EG ( current_execute_data ) ) )		3906497	9					
ANR	3906558	Condition	! ( ptr = EG ( current_execute_data ) )	2495:5:68061:68093	3906497	0	True				
ANR	3906559	UnaryOperationExpression	! ( ptr = EG ( current_execute_data ) )		3906497	0					
ANR	3906560	UnaryOperator	!		3906497	0					
ANR	3906561	AssignmentExpression	ptr = EG ( current_execute_data )		3906497	1		=			
ANR	3906562	Identifier	ptr		3906497	0					
ANR	3906563	CallExpression	EG ( current_execute_data )		3906497	1					
ANR	3906564	Callee	EG		3906497	0					
ANR	3906565	Identifier	EG		3906497	0					
ANR	3906566	ArgumentList	current_execute_data		3906497	1					
ANR	3906567	Argument	current_execute_data		3906497	0					
ANR	3906568	Identifier	current_execute_data		3906497	0					
ANR	3906569	CompoundStatement		13:40:297:297	3906497	1					
ANR	3906570	ReturnStatement	return ;	2496:2:68100:68106	3906497	0	True				
ANR	3906571	IfStatement	if ( ! ptr -> func || ! ZEND_USER_CODE ( ptr -> func -> common . type ) )		3906497	10					
ANR	3906572	Condition	! ptr -> func || ! ZEND_USER_CODE ( ptr -> func -> common . type )	2499:5:68117:68169	3906497	0	True				
ANR	3906573	OrExpression	! ptr -> func || ! ZEND_USER_CODE ( ptr -> func -> common . type )		3906497	0		||			
ANR	3906574	UnaryOperationExpression	! ptr -> func		3906497	0					
ANR	3906575	UnaryOperator	!		3906497	0					
ANR	3906576	PtrMemberAccess	ptr -> func		3906497	1					
ANR	3906577	Identifier	ptr		3906497	0					
ANR	3906578	Identifier	func		3906497	1					
ANR	3906579	UnaryOperationExpression	! ZEND_USER_CODE ( ptr -> func -> common . type )		3906497	1					
ANR	3906580	UnaryOperator	!		3906497	0					
ANR	3906581	CallExpression	ZEND_USER_CODE ( ptr -> func -> common . type )		3906497	1					
ANR	3906582	Callee	ZEND_USER_CODE		3906497	0					
ANR	3906583	Identifier	ZEND_USER_CODE		3906497	0					
ANR	3906584	ArgumentList	ptr -> func -> common . type		3906497	1					
ANR	3906585	Argument	ptr -> func -> common . type		3906497	0					
ANR	3906586	MemberAccess	ptr -> func -> common . type		3906497	0					
ANR	3906587	PtrMemberAccess	ptr -> func -> common		3906497	0					
ANR	3906588	PtrMemberAccess	ptr -> func		3906497	0					
ANR	3906589	Identifier	ptr		3906497	0					
ANR	3906590	Identifier	func		3906497	1					
ANR	3906591	Identifier	common		3906497	1					
ANR	3906592	Identifier	type		3906497	1					
ANR	3906593	CompoundStatement		17:60:373:373	3906497	1					
ANR	3906594	ExpressionStatement	call = ptr	2500:2:68176:68186	3906497	0	True				
ANR	3906595	AssignmentExpression	call = ptr		3906497	0		=			
ANR	3906596	Identifier	call		3906497	0					
ANR	3906597	Identifier	ptr		3906497	1					
ANR	3906598	ExpressionStatement	ptr = ptr -> prev_execute_data	2501:2:68190:68218	3906497	1	True				
ANR	3906599	AssignmentExpression	ptr = ptr -> prev_execute_data		3906497	0		=			
ANR	3906600	Identifier	ptr		3906497	0					
ANR	3906601	PtrMemberAccess	ptr -> prev_execute_data		3906497	1					
ANR	3906602	Identifier	ptr		3906497	0					
ANR	3906603	Identifier	prev_execute_data		3906497	1					
ANR	3906604	IfStatement	if ( ptr )		3906497	11					
ANR	3906605	Condition	ptr	2504:5:68229:68231	3906497	0	True				
ANR	3906606	Identifier	ptr		3906497	0					
ANR	3906607	CompoundStatement		22:10:435:435	3906497	1					
ANR	3906608	IfStatement	if ( skip_last )		3906497	0					
ANR	3906609	Condition	skip_last	2505:6:68242:68250	3906497	0	True				
ANR	3906610	Identifier	skip_last		3906497	0					
ANR	3906611	CompoundStatement		23:17:454:454	3906497	1					
ANR	3906612	ExpressionStatement	call = ptr	2507:3:68290:68300	3906497	0	True				
ANR	3906613	AssignmentExpression	call = ptr		3906497	0		=			
ANR	3906614	Identifier	call		3906497	0					
ANR	3906615	Identifier	ptr		3906497	1					
ANR	3906616	ExpressionStatement	ptr = ptr -> prev_execute_data	2508:3:68305:68333	3906497	1	True				
ANR	3906617	AssignmentExpression	ptr = ptr -> prev_execute_data		3906497	0		=			
ANR	3906618	Identifier	ptr		3906497	0					
ANR	3906619	PtrMemberAccess	ptr -> prev_execute_data		3906497	1					
ANR	3906620	Identifier	ptr		3906497	0					
ANR	3906621	Identifier	prev_execute_data		3906497	1					
ANR	3906622	ElseStatement	else		3906497	0					
ANR	3906623	CompoundStatement		27:9:545:545	3906497	0					
ANR	3906624	IfStatement	if ( ptr -> func && ZEND_USER_CODE ( ptr -> func -> common . type ) && ( ptr -> opline -> opcode == ZEND_NEW ) )		3906497	0					
ANR	3906625	Condition	ptr -> func && ZEND_USER_CODE ( ptr -> func -> common . type ) && ( ptr -> opline -> opcode == ZEND_NEW )	2511:7:68385:68472	3906497	0	True				
ANR	3906626	AndExpression	ptr -> func && ZEND_USER_CODE ( ptr -> func -> common . type ) && ( ptr -> opline -> opcode == ZEND_NEW )		3906497	0		&&			
ANR	3906627	PtrMemberAccess	ptr -> func		3906497	0					
ANR	3906628	Identifier	ptr		3906497	0					
ANR	3906629	Identifier	func		3906497	1					
ANR	3906630	AndExpression	ZEND_USER_CODE ( ptr -> func -> common . type ) && ( ptr -> opline -> opcode == ZEND_NEW )		3906497	1		&&			
ANR	3906631	CallExpression	ZEND_USER_CODE ( ptr -> func -> common . type )		3906497	0					
ANR	3906632	Callee	ZEND_USER_CODE		3906497	0					
ANR	3906633	Identifier	ZEND_USER_CODE		3906497	0					
ANR	3906634	ArgumentList	ptr -> func -> common . type		3906497	1					
ANR	3906635	Argument	ptr -> func -> common . type		3906497	0					
ANR	3906636	MemberAccess	ptr -> func -> common . type		3906497	0					
ANR	3906637	PtrMemberAccess	ptr -> func -> common		3906497	0					
ANR	3906638	PtrMemberAccess	ptr -> func		3906497	0					
ANR	3906639	Identifier	ptr		3906497	0					
ANR	3906640	Identifier	func		3906497	1					
ANR	3906641	Identifier	common		3906497	1					
ANR	3906642	Identifier	type		3906497	1					
ANR	3906643	EqualityExpression	ptr -> opline -> opcode == ZEND_NEW		3906497	1		==			
ANR	3906644	PtrMemberAccess	ptr -> opline -> opcode		3906497	0					
ANR	3906645	PtrMemberAccess	ptr -> opline		3906497	0					
ANR	3906646	Identifier	ptr		3906497	0					
ANR	3906647	Identifier	opline		3906497	1					
ANR	3906648	Identifier	opcode		3906497	1					
ANR	3906649	Identifier	ZEND_NEW		3906497	1					
ANR	3906650	CompoundStatement		29:97:676:676	3906497	1					
ANR	3906651	ExpressionStatement	call = ptr	2512:4:68481:68491	3906497	0	True				
ANR	3906652	AssignmentExpression	call = ptr		3906497	0		=			
ANR	3906653	Identifier	call		3906497	0					
ANR	3906654	Identifier	ptr		3906497	1					
ANR	3906655	ExpressionStatement	ptr = ptr -> prev_execute_data	2513:4:68497:68525	3906497	1	True				
ANR	3906656	AssignmentExpression	ptr = ptr -> prev_execute_data		3906497	0		=			
ANR	3906657	Identifier	ptr		3906497	0					
ANR	3906658	PtrMemberAccess	ptr -> prev_execute_data		3906497	1					
ANR	3906659	Identifier	ptr		3906497	0					
ANR	3906660	Identifier	prev_execute_data		3906497	1					
ANR	3906661	IfStatement	if ( ! call )		3906497	1					
ANR	3906662	Condition	! call	2516:6:68542:68546	3906497	0	True				
ANR	3906663	UnaryOperationExpression	! call		3906497	0					
ANR	3906664	UnaryOperator	!		3906497	0					
ANR	3906665	Identifier	call		3906497	1					
ANR	3906666	CompoundStatement		34:13:750:750	3906497	1					
ANR	3906667	ExpressionStatement	call = ptr	2517:3:68554:68564	3906497	0	True				
ANR	3906668	AssignmentExpression	call = ptr		3906497	0		=			
ANR	3906669	Identifier	call		3906497	0					
ANR	3906670	Identifier	ptr		3906497	1					
ANR	3906671	ExpressionStatement	ptr = ptr -> prev_execute_data	2518:3:68569:68597	3906497	1	True				
ANR	3906672	AssignmentExpression	ptr = ptr -> prev_execute_data		3906497	0		=			
ANR	3906673	Identifier	ptr		3906497	0					
ANR	3906674	PtrMemberAccess	ptr -> prev_execute_data		3906497	1					
ANR	3906675	Identifier	ptr		3906497	0					
ANR	3906676	Identifier	prev_execute_data		3906497	1					
ANR	3906677	WhileStatement	while ( ptr && ( limit == 0 || frameno < limit ) )		3906497	12					
ANR	3906678	Condition	ptr && ( limit == 0 || frameno < limit )	2522:8:68615:68652	3906497	0	True				
ANR	3906679	AndExpression	ptr && ( limit == 0 || frameno < limit )		3906497	0		&&			
ANR	3906680	Identifier	ptr		3906497	0					
ANR	3906681	OrExpression	limit == 0 || frameno < limit		3906497	1		||			
ANR	3906682	EqualityExpression	limit == 0		3906497	0		==			
ANR	3906683	Identifier	limit		3906497	0					
ANR	3906684	PrimaryExpression	0		3906497	1					
ANR	3906685	RelationalExpression	frameno < limit		3906497	1		<			
ANR	3906686	Identifier	frameno		3906497	0					
ANR	3906687	Identifier	limit		3906497	1					
ANR	3906688	CompoundStatement		40:48:856:856	3906497	1					
ANR	3906689	ExpressionStatement	frameno ++	2523:2:68659:68668	3906497	0	True				
ANR	3906690	PostIncDecOperationExpression	frameno ++		3906497	0					
ANR	3906691	Identifier	frameno		3906497	0					
ANR	3906692	IncDec	++		3906497	1					
ANR	3906693	ExpressionStatement	array_init ( & stack_frame )	2524:2:68672:68696	3906497	1	True				
ANR	3906694	CallExpression	array_init ( & stack_frame )		3906497	0					
ANR	3906695	Callee	array_init		3906497	0					
ANR	3906696	Identifier	array_init		3906497	0					
ANR	3906697	ArgumentList	& stack_frame		3906497	1					
ANR	3906698	Argument	& stack_frame		3906497	0					
ANR	3906699	UnaryOperationExpression	& stack_frame		3906497	0					
ANR	3906700	UnaryOperator	&		3906497	0					
ANR	3906701	Identifier	stack_frame		3906497	1					
ANR	3906702	ExpressionStatement	ptr = zend_generator_check_placeholder_frame ( ptr )	2526:2:68701:68750	3906497	2	True				
ANR	3906703	AssignmentExpression	ptr = zend_generator_check_placeholder_frame ( ptr )		3906497	0		=			
ANR	3906704	Identifier	ptr		3906497	0					
ANR	3906705	CallExpression	zend_generator_check_placeholder_frame ( ptr )		3906497	1					
ANR	3906706	Callee	zend_generator_check_placeholder_frame		3906497	0					
ANR	3906707	Identifier	zend_generator_check_placeholder_frame		3906497	0					
ANR	3906708	ArgumentList	ptr		3906497	1					
ANR	3906709	Argument	ptr		3906497	0					
ANR	3906710	Identifier	ptr		3906497	0					
ANR	3906711	ExpressionStatement	skip = ptr	2528:2:68755:68765	3906497	3	True				
ANR	3906712	AssignmentExpression	skip = ptr		3906497	0		=			
ANR	3906713	Identifier	skip		3906497	0					
ANR	3906714	Identifier	ptr		3906497	1					
ANR	3906715	IfStatement	if ( ( ! skip -> func || ! ZEND_USER_CODE ( skip -> func -> common . type ) ) && skip -> prev_execute_data && skip -> prev_execute_data -> func && ZEND_USER_CODE ( skip -> prev_execute_data -> func -> common . type ) && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_FCALL && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_ICALL && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_UCALL && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_FCALL_BY_NAME && skip -> prev_execute_data -> opline -> opcode != ZEND_INCLUDE_OR_EVAL )		3906497	4					
ANR	3906716	Condition	( ! skip -> func || ! ZEND_USER_CODE ( skip -> func -> common . type ) ) && skip -> prev_execute_data && skip -> prev_execute_data -> func && ZEND_USER_CODE ( skip -> prev_execute_data -> func -> common . type ) && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_FCALL && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_ICALL && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_UCALL && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_FCALL_BY_NAME && skip -> prev_execute_data -> opline -> opcode != ZEND_INCLUDE_OR_EVAL	2530:6:68803:69344	3906497	0	True				
ANR	3906717	AndExpression	( ! skip -> func || ! ZEND_USER_CODE ( skip -> func -> common . type ) ) && skip -> prev_execute_data && skip -> prev_execute_data -> func && ZEND_USER_CODE ( skip -> prev_execute_data -> func -> common . type ) && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_FCALL && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_ICALL && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_UCALL && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_FCALL_BY_NAME && skip -> prev_execute_data -> opline -> opcode != ZEND_INCLUDE_OR_EVAL		3906497	0		&&			
ANR	3906718	OrExpression	! skip -> func || ! ZEND_USER_CODE ( skip -> func -> common . type )		3906497	0		||			
ANR	3906719	UnaryOperationExpression	! skip -> func		3906497	0					
ANR	3906720	UnaryOperator	!		3906497	0					
ANR	3906721	PtrMemberAccess	skip -> func		3906497	1					
ANR	3906722	Identifier	skip		3906497	0					
ANR	3906723	Identifier	func		3906497	1					
ANR	3906724	UnaryOperationExpression	! ZEND_USER_CODE ( skip -> func -> common . type )		3906497	1					
ANR	3906725	UnaryOperator	!		3906497	0					
ANR	3906726	CallExpression	ZEND_USER_CODE ( skip -> func -> common . type )		3906497	1					
ANR	3906727	Callee	ZEND_USER_CODE		3906497	0					
ANR	3906728	Identifier	ZEND_USER_CODE		3906497	0					
ANR	3906729	ArgumentList	skip -> func -> common . type		3906497	1					
ANR	3906730	Argument	skip -> func -> common . type		3906497	0					
ANR	3906731	MemberAccess	skip -> func -> common . type		3906497	0					
ANR	3906732	PtrMemberAccess	skip -> func -> common		3906497	0					
ANR	3906733	PtrMemberAccess	skip -> func		3906497	0					
ANR	3906734	Identifier	skip		3906497	0					
ANR	3906735	Identifier	func		3906497	1					
ANR	3906736	Identifier	common		3906497	1					
ANR	3906737	Identifier	type		3906497	1					
ANR	3906738	AndExpression	skip -> prev_execute_data && skip -> prev_execute_data -> func && ZEND_USER_CODE ( skip -> prev_execute_data -> func -> common . type ) && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_FCALL && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_ICALL && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_UCALL && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_FCALL_BY_NAME && skip -> prev_execute_data -> opline -> opcode != ZEND_INCLUDE_OR_EVAL		3906497	1		&&			
ANR	3906739	PtrMemberAccess	skip -> prev_execute_data		3906497	0					
ANR	3906740	Identifier	skip		3906497	0					
ANR	3906741	Identifier	prev_execute_data		3906497	1					
ANR	3906742	AndExpression	skip -> prev_execute_data -> func && ZEND_USER_CODE ( skip -> prev_execute_data -> func -> common . type ) && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_FCALL && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_ICALL && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_UCALL && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_FCALL_BY_NAME && skip -> prev_execute_data -> opline -> opcode != ZEND_INCLUDE_OR_EVAL		3906497	1		&&			
ANR	3906743	PtrMemberAccess	skip -> prev_execute_data -> func		3906497	0					
ANR	3906744	PtrMemberAccess	skip -> prev_execute_data		3906497	0					
ANR	3906745	Identifier	skip		3906497	0					
ANR	3906746	Identifier	prev_execute_data		3906497	1					
ANR	3906747	Identifier	func		3906497	1					
ANR	3906748	AndExpression	ZEND_USER_CODE ( skip -> prev_execute_data -> func -> common . type ) && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_FCALL && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_ICALL && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_UCALL && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_FCALL_BY_NAME && skip -> prev_execute_data -> opline -> opcode != ZEND_INCLUDE_OR_EVAL		3906497	1		&&			
ANR	3906749	CallExpression	ZEND_USER_CODE ( skip -> prev_execute_data -> func -> common . type )		3906497	0					
ANR	3906750	Callee	ZEND_USER_CODE		3906497	0					
ANR	3906751	Identifier	ZEND_USER_CODE		3906497	0					
ANR	3906752	ArgumentList	skip -> prev_execute_data -> func -> common . type		3906497	1					
ANR	3906753	Argument	skip -> prev_execute_data -> func -> common . type		3906497	0					
ANR	3906754	MemberAccess	skip -> prev_execute_data -> func -> common . type		3906497	0					
ANR	3906755	PtrMemberAccess	skip -> prev_execute_data -> func -> common		3906497	0					
ANR	3906756	PtrMemberAccess	skip -> prev_execute_data -> func		3906497	0					
ANR	3906757	PtrMemberAccess	skip -> prev_execute_data		3906497	0					
ANR	3906758	Identifier	skip		3906497	0					
ANR	3906759	Identifier	prev_execute_data		3906497	1					
ANR	3906760	Identifier	func		3906497	1					
ANR	3906761	Identifier	common		3906497	1					
ANR	3906762	Identifier	type		3906497	1					
ANR	3906763	AndExpression	skip -> prev_execute_data -> opline -> opcode != ZEND_DO_FCALL && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_ICALL && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_UCALL && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_FCALL_BY_NAME && skip -> prev_execute_data -> opline -> opcode != ZEND_INCLUDE_OR_EVAL		3906497	1		&&			
ANR	3906764	EqualityExpression	skip -> prev_execute_data -> opline -> opcode != ZEND_DO_FCALL		3906497	0		!=			
ANR	3906765	PtrMemberAccess	skip -> prev_execute_data -> opline -> opcode		3906497	0					
ANR	3906766	PtrMemberAccess	skip -> prev_execute_data -> opline		3906497	0					
ANR	3906767	PtrMemberAccess	skip -> prev_execute_data		3906497	0					
ANR	3906768	Identifier	skip		3906497	0					
ANR	3906769	Identifier	prev_execute_data		3906497	1					
ANR	3906770	Identifier	opline		3906497	1					
ANR	3906771	Identifier	opcode		3906497	1					
ANR	3906772	Identifier	ZEND_DO_FCALL		3906497	1					
ANR	3906773	AndExpression	skip -> prev_execute_data -> opline -> opcode != ZEND_DO_ICALL && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_UCALL && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_FCALL_BY_NAME && skip -> prev_execute_data -> opline -> opcode != ZEND_INCLUDE_OR_EVAL		3906497	1		&&			
ANR	3906774	EqualityExpression	skip -> prev_execute_data -> opline -> opcode != ZEND_DO_ICALL		3906497	0		!=			
ANR	3906775	PtrMemberAccess	skip -> prev_execute_data -> opline -> opcode		3906497	0					
ANR	3906776	PtrMemberAccess	skip -> prev_execute_data -> opline		3906497	0					
ANR	3906777	PtrMemberAccess	skip -> prev_execute_data		3906497	0					
ANR	3906778	Identifier	skip		3906497	0					
ANR	3906779	Identifier	prev_execute_data		3906497	1					
ANR	3906780	Identifier	opline		3906497	1					
ANR	3906781	Identifier	opcode		3906497	1					
ANR	3906782	Identifier	ZEND_DO_ICALL		3906497	1					
ANR	3906783	AndExpression	skip -> prev_execute_data -> opline -> opcode != ZEND_DO_UCALL && skip -> prev_execute_data -> opline -> opcode != ZEND_DO_FCALL_BY_NAME && skip -> prev_execute_data -> opline -> opcode != ZEND_INCLUDE_OR_EVAL		3906497	1		&&			
ANR	3906784	EqualityExpression	skip -> prev_execute_data -> opline -> opcode != ZEND_DO_UCALL		3906497	0		!=			
ANR	3906785	PtrMemberAccess	skip -> prev_execute_data -> opline -> opcode		3906497	0					
ANR	3906786	PtrMemberAccess	skip -> prev_execute_data -> opline		3906497	0					
ANR	3906787	PtrMemberAccess	skip -> prev_execute_data		3906497	0					
ANR	3906788	Identifier	skip		3906497	0					
ANR	3906789	Identifier	prev_execute_data		3906497	1					
ANR	3906790	Identifier	opline		3906497	1					
ANR	3906791	Identifier	opcode		3906497	1					
ANR	3906792	Identifier	ZEND_DO_UCALL		3906497	1					
ANR	3906793	AndExpression	skip -> prev_execute_data -> opline -> opcode != ZEND_DO_FCALL_BY_NAME && skip -> prev_execute_data -> opline -> opcode != ZEND_INCLUDE_OR_EVAL		3906497	1		&&			
ANR	3906794	EqualityExpression	skip -> prev_execute_data -> opline -> opcode != ZEND_DO_FCALL_BY_NAME		3906497	0		!=			
ANR	3906795	PtrMemberAccess	skip -> prev_execute_data -> opline -> opcode		3906497	0					
ANR	3906796	PtrMemberAccess	skip -> prev_execute_data -> opline		3906497	0					
ANR	3906797	PtrMemberAccess	skip -> prev_execute_data		3906497	0					
ANR	3906798	Identifier	skip		3906497	0					
ANR	3906799	Identifier	prev_execute_data		3906497	1					
ANR	3906800	Identifier	opline		3906497	1					
ANR	3906801	Identifier	opcode		3906497	1					
ANR	3906802	Identifier	ZEND_DO_FCALL_BY_NAME		3906497	1					
ANR	3906803	EqualityExpression	skip -> prev_execute_data -> opline -> opcode != ZEND_INCLUDE_OR_EVAL		3906497	1		!=			
ANR	3906804	PtrMemberAccess	skip -> prev_execute_data -> opline -> opcode		3906497	0					
ANR	3906805	PtrMemberAccess	skip -> prev_execute_data -> opline		3906497	0					
ANR	3906806	PtrMemberAccess	skip -> prev_execute_data		3906497	0					
ANR	3906807	Identifier	skip		3906497	0					
ANR	3906808	Identifier	prev_execute_data		3906497	1					
ANR	3906809	Identifier	opline		3906497	1					
ANR	3906810	Identifier	opcode		3906497	1					
ANR	3906811	Identifier	ZEND_INCLUDE_OR_EVAL		3906497	1					
ANR	3906812	CompoundStatement		56:71:1548:1548	3906497	1					
ANR	3906813	ExpressionStatement	skip = skip -> prev_execute_data	2539:3:69352:69382	3906497	0	True				
ANR	3906814	AssignmentExpression	skip = skip -> prev_execute_data		3906497	0		=			
ANR	3906815	Identifier	skip		3906497	0					
ANR	3906816	PtrMemberAccess	skip -> prev_execute_data		3906497	1					
ANR	3906817	Identifier	skip		3906497	0					
ANR	3906818	Identifier	prev_execute_data		3906497	1					
ANR	3906819	IfStatement	if ( skip -> func && ZEND_USER_CODE ( skip -> func -> common . type ) )		3906497	5					
ANR	3906820	Condition	skip -> func && ZEND_USER_CODE ( skip -> func -> common . type )	2542:6:69395:69447	3906497	0	True				
ANR	3906821	AndExpression	skip -> func && ZEND_USER_CODE ( skip -> func -> common . type )		3906497	0		&&			
ANR	3906822	PtrMemberAccess	skip -> func		3906497	0					
ANR	3906823	Identifier	skip		3906497	0					
ANR	3906824	Identifier	func		3906497	1					
ANR	3906825	CallExpression	ZEND_USER_CODE ( skip -> func -> common . type )		3906497	1					
ANR	3906826	Callee	ZEND_USER_CODE		3906497	0					
ANR	3906827	Identifier	ZEND_USER_CODE		3906497	0					
ANR	3906828	ArgumentList	skip -> func -> common . type		3906497	1					
ANR	3906829	Argument	skip -> func -> common . type		3906497	0					
ANR	3906830	MemberAccess	skip -> func -> common . type		3906497	0					
ANR	3906831	PtrMemberAccess	skip -> func -> common		3906497	0					
ANR	3906832	PtrMemberAccess	skip -> func		3906497	0					
ANR	3906833	Identifier	skip		3906497	0					
ANR	3906834	Identifier	func		3906497	1					
ANR	3906835	Identifier	common		3906497	1					
ANR	3906836	Identifier	type		3906497	1					
ANR	3906837	CompoundStatement		60:61:1651:1651	3906497	1					
ANR	3906838	ExpressionStatement	filename = skip -> func -> op_array . filename	2543:3:69455:69495	3906497	0	True				
ANR	3906839	AssignmentExpression	filename = skip -> func -> op_array . filename		3906497	0		=			
ANR	3906840	Identifier	filename		3906497	0					
ANR	3906841	MemberAccess	skip -> func -> op_array . filename		3906497	1					
ANR	3906842	PtrMemberAccess	skip -> func -> op_array		3906497	0					
ANR	3906843	PtrMemberAccess	skip -> func		3906497	0					
ANR	3906844	Identifier	skip		3906497	0					
ANR	3906845	Identifier	func		3906497	1					
ANR	3906846	Identifier	op_array		3906497	1					
ANR	3906847	Identifier	filename		3906497	1					
ANR	3906848	IfStatement	if ( skip -> opline -> opcode == ZEND_HANDLE_EXCEPTION )		3906497	1					
ANR	3906849	Condition	skip -> opline -> opcode == ZEND_HANDLE_EXCEPTION	2544:7:69504:69548	3906497	0	True				
ANR	3906850	EqualityExpression	skip -> opline -> opcode == ZEND_HANDLE_EXCEPTION		3906497	0		==			
ANR	3906851	PtrMemberAccess	skip -> opline -> opcode		3906497	0					
ANR	3906852	PtrMemberAccess	skip -> opline		3906497	0					
ANR	3906853	Identifier	skip		3906497	0					
ANR	3906854	Identifier	opline		3906497	1					
ANR	3906855	Identifier	opcode		3906497	1					
ANR	3906856	Identifier	ZEND_HANDLE_EXCEPTION		3906497	1					
ANR	3906857	CompoundStatement		62:54:1752:1752	3906497	1					
ANR	3906858	IfStatement	if ( EG ( opline_before_exception ) )		3906497	0					
ANR	3906859	Condition	EG ( opline_before_exception )	2545:8:69561:69587	3906497	0	True				
ANR	3906860	CallExpression	EG ( opline_before_exception )		3906497	0					
ANR	3906861	Callee	EG		3906497	0					
ANR	3906862	Identifier	EG		3906497	0					
ANR	3906863	ArgumentList	opline_before_exception		3906497	1					
ANR	3906864	Argument	opline_before_exception		3906497	0					
ANR	3906865	Identifier	opline_before_exception		3906497	0					
ANR	3906866	CompoundStatement		63:37:1791:1791	3906497	1					
ANR	3906867	ExpressionStatement	lineno = EG ( opline_before_exception ) -> lineno	2546:5:69597:69641	3906497	0	True				
ANR	3906868	AssignmentExpression	lineno = EG ( opline_before_exception ) -> lineno		3906497	0		=			
ANR	3906869	Identifier	lineno		3906497	0					
ANR	3906870	PtrMemberAccess	EG ( opline_before_exception ) -> lineno		3906497	1					
ANR	3906871	CallExpression	EG ( opline_before_exception )		3906497	0					
ANR	3906872	Callee	EG		3906497	0					
ANR	3906873	Identifier	EG		3906497	0					
ANR	3906874	ArgumentList	opline_before_exception		3906497	1					
ANR	3906875	Argument	opline_before_exception		3906497	0					
ANR	3906876	Identifier	opline_before_exception		3906497	0					
ANR	3906877	Identifier	lineno		3906497	1					
ANR	3906878	ElseStatement	else		3906497	0					
ANR	3906879	CompoundStatement		65:11:1855:1855	3906497	0					
ANR	3906880	ExpressionStatement	lineno = skip -> func -> op_array . line_end	2548:5:69661:69699	3906497	0	True				
ANR	3906881	AssignmentExpression	lineno = skip -> func -> op_array . line_end		3906497	0		=			
ANR	3906882	Identifier	lineno		3906497	0					
ANR	3906883	MemberAccess	skip -> func -> op_array . line_end		3906497	1					
ANR	3906884	PtrMemberAccess	skip -> func -> op_array		3906497	0					
ANR	3906885	PtrMemberAccess	skip -> func		3906497	0					
ANR	3906886	Identifier	skip		3906497	0					
ANR	3906887	Identifier	func		3906497	1					
ANR	3906888	Identifier	op_array		3906497	1					
ANR	3906889	Identifier	line_end		3906497	1					
ANR	3906890	ElseStatement	else		3906497	0					
ANR	3906891	CompoundStatement		68:10:1918:1918	3906497	0					
ANR	3906892	ExpressionStatement	lineno = skip -> opline -> lineno	2551:4:69723:69752	3906497	0	True				
ANR	3906893	AssignmentExpression	lineno = skip -> opline -> lineno		3906497	0		=			
ANR	3906894	Identifier	lineno		3906497	0					
ANR	3906895	PtrMemberAccess	skip -> opline -> lineno		3906497	1					
ANR	3906896	PtrMemberAccess	skip -> opline		3906497	0					
ANR	3906897	Identifier	skip		3906497	0					
ANR	3906898	Identifier	opline		3906497	1					
ANR	3906899	Identifier	lineno		3906497	1					
ANR	3906900	ExpressionStatement	"add_assoc_str_ex ( & stack_frame , ""file"" , sizeof ( ""file"" ) - 1 , zend_string_copy ( filename ) )"	2553:3:69762:69846	3906497	2	True				
ANR	3906901	CallExpression	"add_assoc_str_ex ( & stack_frame , ""file"" , sizeof ( ""file"" ) - 1 , zend_string_copy ( filename ) )"		3906497	0					
ANR	3906902	Callee	add_assoc_str_ex		3906497	0					
ANR	3906903	Identifier	add_assoc_str_ex		3906497	0					
ANR	3906904	ArgumentList	& stack_frame		3906497	1					
ANR	3906905	Argument	& stack_frame		3906497	0					
ANR	3906906	UnaryOperationExpression	& stack_frame		3906497	0					
ANR	3906907	UnaryOperator	&		3906497	0					
ANR	3906908	Identifier	stack_frame		3906497	1					
ANR	3906909	Argument	"""file"""		3906497	1					
ANR	3906910	PrimaryExpression	"""file"""		3906497	0					
ANR	3906911	Argument	"sizeof ( ""file"" ) - 1"		3906497	2					
ANR	3906912	AdditiveExpression	"sizeof ( ""file"" ) - 1"		3906497	0		-			
ANR	3906913	SizeofExpression	"sizeof ( ""file"" )"		3906497	0					
ANR	3906914	Sizeof	sizeof		3906497	0					
ANR	3906915	PrimaryExpression	"""file"""		3906497	1					
ANR	3906916	PrimaryExpression	1		3906497	1					
ANR	3906917	Argument	zend_string_copy ( filename )		3906497	3					
ANR	3906918	CallExpression	zend_string_copy ( filename )		3906497	0					
ANR	3906919	Callee	zend_string_copy		3906497	0					
ANR	3906920	Identifier	zend_string_copy		3906497	0					
ANR	3906921	ArgumentList	filename		3906497	1					
ANR	3906922	Argument	filename		3906497	0					
ANR	3906923	Identifier	filename		3906497	0					
ANR	3906924	ExpressionStatement	"add_assoc_long_ex ( & stack_frame , ""line"" , sizeof ( ""line"" ) - 1 , lineno )"	2554:3:69851:69916	3906497	3	True				
ANR	3906925	CallExpression	"add_assoc_long_ex ( & stack_frame , ""line"" , sizeof ( ""line"" ) - 1 , lineno )"		3906497	0					
ANR	3906926	Callee	add_assoc_long_ex		3906497	0					
ANR	3906927	Identifier	add_assoc_long_ex		3906497	0					
ANR	3906928	ArgumentList	& stack_frame		3906497	1					
ANR	3906929	Argument	& stack_frame		3906497	0					
ANR	3906930	UnaryOperationExpression	& stack_frame		3906497	0					
ANR	3906931	UnaryOperator	&		3906497	0					
ANR	3906932	Identifier	stack_frame		3906497	1					
ANR	3906933	Argument	"""line"""		3906497	1					
ANR	3906934	PrimaryExpression	"""line"""		3906497	0					
ANR	3906935	Argument	"sizeof ( ""line"" ) - 1"		3906497	2					
ANR	3906936	AdditiveExpression	"sizeof ( ""line"" ) - 1"		3906497	0		-			
ANR	3906937	SizeofExpression	"sizeof ( ""line"" )"		3906497	0					
ANR	3906938	Sizeof	sizeof		3906497	0					
ANR	3906939	PrimaryExpression	"""line"""		3906497	1					
ANR	3906940	PrimaryExpression	1		3906497	1					
ANR	3906941	Argument	lineno		3906497	3					
ANR	3906942	Identifier	lineno		3906497	0					
ANR	3906943	ElseStatement	else		3906497	0					
ANR	3906944	CompoundStatement		79:3:2420:2469	3906497	0					
ANR	3906945	IdentifierDeclStatement	zend_execute_data * prev_call = skip ;	2560:3:70179:70214	3906497	0	True				
ANR	3906946	IdentifierDecl	* prev_call = skip		3906497	0					
ANR	3906947	IdentifierDeclType	zend_execute_data *		3906497	0					
ANR	3906948	Identifier	prev_call		3906497	1					
ANR	3906949	AssignmentExpression	* prev_call = skip		3906497	2		=			
ANR	3906950	Identifier	skip		3906497	0					
ANR	3906951	Identifier	skip		3906497	1					
ANR	3906952	IdentifierDeclStatement	zend_execute_data * prev = skip -> prev_execute_data ;	2561:3:70219:70268	3906497	1	True				
ANR	3906953	IdentifierDecl	* prev = skip -> prev_execute_data		3906497	0					
ANR	3906954	IdentifierDeclType	zend_execute_data *		3906497	0					
ANR	3906955	Identifier	prev		3906497	1					
ANR	3906956	AssignmentExpression	* prev = skip -> prev_execute_data		3906497	2		=			
ANR	3906957	Identifier	prev		3906497	0					
ANR	3906958	PtrMemberAccess	skip -> prev_execute_data		3906497	1					
ANR	3906959	Identifier	skip		3906497	0					
ANR	3906960	Identifier	prev_execute_data		3906497	1					
ANR	3906961	WhileStatement	while ( prev )		3906497	2					
ANR	3906962	Condition	prev	2563:10:70281:70284	3906497	0	True				
ANR	3906963	Identifier	prev		3906497	0					
ANR	3906964	CompoundStatement		81:16:2488:2488	3906497	1					
ANR	3906965	IfStatement	if ( prev_call && prev_call -> func && ! ZEND_USER_CODE ( prev_call -> func -> common . type ) && ! ( prev_call -> func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) )		3906497	0					
ANR	3906966	Condition	prev_call && prev_call -> func && ! ZEND_USER_CODE ( prev_call -> func -> common . type ) && ! ( prev_call -> func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE )	2564:8:70297:70461	3906497	0	True				
ANR	3906967	AndExpression	prev_call && prev_call -> func && ! ZEND_USER_CODE ( prev_call -> func -> common . type ) && ! ( prev_call -> func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE )		3906497	0		&&			
ANR	3906968	Identifier	prev_call		3906497	0					
ANR	3906969	AndExpression	prev_call -> func && ! ZEND_USER_CODE ( prev_call -> func -> common . type ) && ! ( prev_call -> func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE )		3906497	1		&&			
ANR	3906970	PtrMemberAccess	prev_call -> func		3906497	0					
ANR	3906971	Identifier	prev_call		3906497	0					
ANR	3906972	Identifier	func		3906497	1					
ANR	3906973	AndExpression	! ZEND_USER_CODE ( prev_call -> func -> common . type ) && ! ( prev_call -> func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE )		3906497	1		&&			
ANR	3906974	UnaryOperationExpression	! ZEND_USER_CODE ( prev_call -> func -> common . type )		3906497	0					
ANR	3906975	UnaryOperator	!		3906497	0					
ANR	3906976	CallExpression	ZEND_USER_CODE ( prev_call -> func -> common . type )		3906497	1					
ANR	3906977	Callee	ZEND_USER_CODE		3906497	0					
ANR	3906978	Identifier	ZEND_USER_CODE		3906497	0					
ANR	3906979	ArgumentList	prev_call -> func -> common . type		3906497	1					
ANR	3906980	Argument	prev_call -> func -> common . type		3906497	0					
ANR	3906981	MemberAccess	prev_call -> func -> common . type		3906497	0					
ANR	3906982	PtrMemberAccess	prev_call -> func -> common		3906497	0					
ANR	3906983	PtrMemberAccess	prev_call -> func		3906497	0					
ANR	3906984	Identifier	prev_call		3906497	0					
ANR	3906985	Identifier	func		3906497	1					
ANR	3906986	Identifier	common		3906497	1					
ANR	3906987	Identifier	type		3906497	1					
ANR	3906988	UnaryOperationExpression	! ( prev_call -> func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE )		3906497	1					
ANR	3906989	UnaryOperator	!		3906497	0					
ANR	3906990	BitAndExpression	prev_call -> func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE		3906497	1		&			
ANR	3906991	MemberAccess	prev_call -> func -> common . fn_flags		3906497	0					
ANR	3906992	PtrMemberAccess	prev_call -> func -> common		3906497	0					
ANR	3906993	PtrMemberAccess	prev_call -> func		3906497	0					
ANR	3906994	Identifier	prev_call		3906497	0					
ANR	3906995	Identifier	func		3906497	1					
ANR	3906996	Identifier	common		3906497	1					
ANR	3906997	Identifier	fn_flags		3906497	1					
ANR	3906998	Identifier	ZEND_ACC_CALL_VIA_TRAMPOLINE		3906497	1					
ANR	3906999	CompoundStatement		85:73:2665:2665	3906497	1					
ANR	3907000	BreakStatement	break ;	2568:5:70471:70476	3906497	0	True				
ANR	3907001	IfStatement	if ( prev -> func && ZEND_USER_CODE ( prev -> func -> common . type ) )		3906497	1					
ANR	3907002	Condition	prev -> func && ZEND_USER_CODE ( prev -> func -> common . type )	2570:8:70492:70544	3906497	0	True				
ANR	3907003	AndExpression	prev -> func && ZEND_USER_CODE ( prev -> func -> common . type )		3906497	0		&&			
ANR	3907004	PtrMemberAccess	prev -> func		3906497	0					
ANR	3907005	Identifier	prev		3906497	0					
ANR	3907006	Identifier	func		3906497	1					
ANR	3907007	CallExpression	ZEND_USER_CODE ( prev -> func -> common . type )		3906497	1					
ANR	3907008	Callee	ZEND_USER_CODE		3906497	0					
ANR	3907009	Identifier	ZEND_USER_CODE		3906497	0					
ANR	3907010	ArgumentList	prev -> func -> common . type		3906497	1					
ANR	3907011	Argument	prev -> func -> common . type		3906497	0					
ANR	3907012	MemberAccess	prev -> func -> common . type		3906497	0					
ANR	3907013	PtrMemberAccess	prev -> func -> common		3906497	0					
ANR	3907014	PtrMemberAccess	prev -> func		3906497	0					
ANR	3907015	Identifier	prev		3906497	0					
ANR	3907016	Identifier	func		3906497	1					
ANR	3907017	Identifier	common		3906497	1					
ANR	3907018	Identifier	type		3906497	1					
ANR	3907019	CompoundStatement		88:63:2748:2748	3906497	1					
ANR	3907020	ExpressionStatement	"add_assoc_str_ex ( & stack_frame , ""file"" , sizeof ( ""file"" ) - 1 , zend_string_copy ( prev -> func -> op_array . filename ) )"	2571:5:70554:70659	3906497	0	True				
ANR	3907021	CallExpression	"add_assoc_str_ex ( & stack_frame , ""file"" , sizeof ( ""file"" ) - 1 , zend_string_copy ( prev -> func -> op_array . filename ) )"		3906497	0					
ANR	3907022	Callee	add_assoc_str_ex		3906497	0					
ANR	3907023	Identifier	add_assoc_str_ex		3906497	0					
ANR	3907024	ArgumentList	& stack_frame		3906497	1					
ANR	3907025	Argument	& stack_frame		3906497	0					
ANR	3907026	UnaryOperationExpression	& stack_frame		3906497	0					
ANR	3907027	UnaryOperator	&		3906497	0					
ANR	3907028	Identifier	stack_frame		3906497	1					
ANR	3907029	Argument	"""file"""		3906497	1					
ANR	3907030	PrimaryExpression	"""file"""		3906497	0					
ANR	3907031	Argument	"sizeof ( ""file"" ) - 1"		3906497	2					
ANR	3907032	AdditiveExpression	"sizeof ( ""file"" ) - 1"		3906497	0		-			
ANR	3907033	SizeofExpression	"sizeof ( ""file"" )"		3906497	0					
ANR	3907034	Sizeof	sizeof		3906497	0					
ANR	3907035	PrimaryExpression	"""file"""		3906497	1					
ANR	3907036	PrimaryExpression	1		3906497	1					
ANR	3907037	Argument	zend_string_copy ( prev -> func -> op_array . filename )		3906497	3					
ANR	3907038	CallExpression	zend_string_copy ( prev -> func -> op_array . filename )		3906497	0					
ANR	3907039	Callee	zend_string_copy		3906497	0					
ANR	3907040	Identifier	zend_string_copy		3906497	0					
ANR	3907041	ArgumentList	prev -> func -> op_array . filename		3906497	1					
ANR	3907042	Argument	prev -> func -> op_array . filename		3906497	0					
ANR	3907043	MemberAccess	prev -> func -> op_array . filename		3906497	0					
ANR	3907044	PtrMemberAccess	prev -> func -> op_array		3906497	0					
ANR	3907045	PtrMemberAccess	prev -> func		3906497	0					
ANR	3907046	Identifier	prev		3906497	0					
ANR	3907047	Identifier	func		3906497	1					
ANR	3907048	Identifier	op_array		3906497	1					
ANR	3907049	Identifier	filename		3906497	1					
ANR	3907050	ExpressionStatement	"add_assoc_long_ex ( & stack_frame , ""line"" , sizeof ( ""line"" ) - 1 , prev -> opline -> lineno )"	2572:5:70666:70745	3906497	1	True				
ANR	3907051	CallExpression	"add_assoc_long_ex ( & stack_frame , ""line"" , sizeof ( ""line"" ) - 1 , prev -> opline -> lineno )"		3906497	0					
ANR	3907052	Callee	add_assoc_long_ex		3906497	0					
ANR	3907053	Identifier	add_assoc_long_ex		3906497	0					
ANR	3907054	ArgumentList	& stack_frame		3906497	1					
ANR	3907055	Argument	& stack_frame		3906497	0					
ANR	3907056	UnaryOperationExpression	& stack_frame		3906497	0					
ANR	3907057	UnaryOperator	&		3906497	0					
ANR	3907058	Identifier	stack_frame		3906497	1					
ANR	3907059	Argument	"""line"""		3906497	1					
ANR	3907060	PrimaryExpression	"""line"""		3906497	0					
ANR	3907061	Argument	"sizeof ( ""line"" ) - 1"		3906497	2					
ANR	3907062	AdditiveExpression	"sizeof ( ""line"" ) - 1"		3906497	0		-			
ANR	3907063	SizeofExpression	"sizeof ( ""line"" )"		3906497	0					
ANR	3907064	Sizeof	sizeof		3906497	0					
ANR	3907065	PrimaryExpression	"""line"""		3906497	1					
ANR	3907066	PrimaryExpression	1		3906497	1					
ANR	3907067	Argument	prev -> opline -> lineno		3906497	3					
ANR	3907068	PtrMemberAccess	prev -> opline -> lineno		3906497	0					
ANR	3907069	PtrMemberAccess	prev -> opline		3906497	0					
ANR	3907070	Identifier	prev		3906497	0					
ANR	3907071	Identifier	opline		3906497	1					
ANR	3907072	Identifier	lineno		3906497	1					
ANR	3907073	BreakStatement	break ;	2573:5:70752:70757	3906497	2	True				
ANR	3907074	ExpressionStatement	prev_call = prev	2575:4:70769:70785	3906497	2	True				
ANR	3907075	AssignmentExpression	prev_call = prev		3906497	0		=			
ANR	3907076	Identifier	prev_call		3906497	0					
ANR	3907077	Identifier	prev		3906497	1					
ANR	3907078	ExpressionStatement	prev = prev -> prev_execute_data	2576:4:70791:70821	3906497	3	True				
ANR	3907079	AssignmentExpression	prev = prev -> prev_execute_data		3906497	0		=			
ANR	3907080	Identifier	prev		3906497	0					
ANR	3907081	PtrMemberAccess	prev -> prev_execute_data		3906497	1					
ANR	3907082	Identifier	prev		3906497	0					
ANR	3907083	Identifier	prev_execute_data		3906497	1					
ANR	3907084	ExpressionStatement	filename = NULL	2578:3:70831:70846	3906497	3	True				
ANR	3907085	AssignmentExpression	filename = NULL		3906497	0		=			
ANR	3907086	Identifier	filename		3906497	0					
ANR	3907087	Identifier	NULL		3906497	1					
ANR	3907088	ExpressionStatement	object = call ? Z_OBJ ( call -> This ) : NULL	2582:2:70915:70955	3906497	6	True				
ANR	3907089	AssignmentExpression	object = call ? Z_OBJ ( call -> This ) : NULL		3906497	0		=			
ANR	3907090	Identifier	object		3906497	0					
ANR	3907091	ConditionalExpression	call ? Z_OBJ ( call -> This ) : NULL		3906497	1					
ANR	3907092	Condition	call		3906497	0					
ANR	3907093	Identifier	call		3906497	0					
ANR	3907094	CallExpression	Z_OBJ ( call -> This )		3906497	1					
ANR	3907095	Callee	Z_OBJ		3906497	0					
ANR	3907096	Identifier	Z_OBJ		3906497	0					
ANR	3907097	ArgumentList	call -> This		3906497	1					
ANR	3907098	Argument	call -> This		3906497	0					
ANR	3907099	PtrMemberAccess	call -> This		3906497	0					
ANR	3907100	Identifier	call		3906497	0					
ANR	3907101	Identifier	This		3906497	1					
ANR	3907102	Identifier	NULL		3906497	2					
ANR	3907103	IfStatement	if ( call && call -> func )		3906497	7					
ANR	3907104	Condition	call && call -> func	2584:6:70964:70981	3906497	0	True				
ANR	3907105	AndExpression	call && call -> func		3906497	0		&&			
ANR	3907106	Identifier	call		3906497	0					
ANR	3907107	PtrMemberAccess	call -> func		3906497	1					
ANR	3907108	Identifier	call		3906497	0					
ANR	3907109	Identifier	func		3906497	1					
ANR	3907110	CompoundStatement		102:26:3185:3185	3906497	1					
ANR	3907111	ExpressionStatement	func = call -> func	2585:3:70989:71006	3906497	0	True				
ANR	3907112	AssignmentExpression	func = call -> func		3906497	0		=			
ANR	3907113	Identifier	func		3906497	0					
ANR	3907114	PtrMemberAccess	call -> func		3906497	1					
ANR	3907115	Identifier	call		3906497	0					
ANR	3907116	Identifier	func		3906497	1					
ANR	3907117	ExpressionStatement	"function_name = ( func -> common . scope && func -> common . scope -> trait_aliases ) ? zend_resolve_method_name ( ( object ? object -> ce : func -> common . scope ) , func ) : func -> common . function_name"	2586:3:71011:71224	3906497	1	True				
ANR	3907118	AssignmentExpression	"function_name = ( func -> common . scope && func -> common . scope -> trait_aliases ) ? zend_resolve_method_name ( ( object ? object -> ce : func -> common . scope ) , func ) : func -> common . function_name"		3906497	0		=			
ANR	3907119	Identifier	function_name		3906497	0					
ANR	3907120	ConditionalExpression	"( func -> common . scope && func -> common . scope -> trait_aliases ) ? zend_resolve_method_name ( ( object ? object -> ce : func -> common . scope ) , func ) : func -> common . function_name"		3906497	1					
ANR	3907121	Condition	func -> common . scope && func -> common . scope -> trait_aliases		3906497	0					
ANR	3907122	AndExpression	func -> common . scope && func -> common . scope -> trait_aliases		3906497	0		&&			
ANR	3907123	MemberAccess	func -> common . scope		3906497	0					
ANR	3907124	PtrMemberAccess	func -> common		3906497	0					
ANR	3907125	Identifier	func		3906497	0					
ANR	3907126	Identifier	common		3906497	1					
ANR	3907127	Identifier	scope		3906497	1					
ANR	3907128	PtrMemberAccess	func -> common . scope -> trait_aliases		3906497	1					
ANR	3907129	MemberAccess	func -> common . scope		3906497	0					
ANR	3907130	PtrMemberAccess	func -> common		3906497	0					
ANR	3907131	Identifier	func		3906497	0					
ANR	3907132	Identifier	common		3906497	1					
ANR	3907133	Identifier	scope		3906497	1					
ANR	3907134	Identifier	trait_aliases		3906497	1					
ANR	3907135	CallExpression	"zend_resolve_method_name ( ( object ? object -> ce : func -> common . scope ) , func )"		3906497	1					
ANR	3907136	Callee	zend_resolve_method_name		3906497	0					
ANR	3907137	Identifier	zend_resolve_method_name		3906497	0					
ANR	3907138	ArgumentList	object ? object -> ce : func -> common . scope		3906497	1					
ANR	3907139	Argument	object ? object -> ce : func -> common . scope		3906497	0					
ANR	3907140	ConditionalExpression	object ? object -> ce : func -> common . scope		3906497	0					
ANR	3907141	Condition	object		3906497	0					
ANR	3907142	Identifier	object		3906497	0					
ANR	3907143	PtrMemberAccess	object -> ce		3906497	1					
ANR	3907144	Identifier	object		3906497	0					
ANR	3907145	Identifier	ce		3906497	1					
ANR	3907146	MemberAccess	func -> common . scope		3906497	2					
ANR	3907147	PtrMemberAccess	func -> common		3906497	0					
ANR	3907148	Identifier	func		3906497	0					
ANR	3907149	Identifier	common		3906497	1					
ANR	3907150	Identifier	scope		3906497	1					
ANR	3907151	Argument	func		3906497	1					
ANR	3907152	Identifier	func		3906497	0					
ANR	3907153	MemberAccess	func -> common . function_name		3906497	2					
ANR	3907154	PtrMemberAccess	func -> common		3906497	0					
ANR	3907155	Identifier	func		3906497	0					
ANR	3907156	Identifier	common		3906497	1					
ANR	3907157	Identifier	function_name		3906497	1					
ANR	3907158	ElseStatement	else		3906497	0					
ANR	3907159	CompoundStatement		109:9:3436:3436	3906497	0					
ANR	3907160	ExpressionStatement	func = NULL	2592:3:71240:71251	3906497	0	True				
ANR	3907161	AssignmentExpression	func = NULL		3906497	0		=			
ANR	3907162	Identifier	func		3906497	0					
ANR	3907163	Identifier	NULL		3906497	1					
ANR	3907164	ExpressionStatement	function_name = NULL	2593:3:71256:71276	3906497	1	True				
ANR	3907165	AssignmentExpression	function_name = NULL		3906497	0		=			
ANR	3907166	Identifier	function_name		3906497	0					
ANR	3907167	Identifier	NULL		3906497	1					
ANR	3907168	IfStatement	if ( function_name )		3906497	8					
ANR	3907169	Condition	function_name	2596:6:71289:71301	3906497	0	True				
ANR	3907170	Identifier	function_name		3906497	0					
ANR	3907171	CompoundStatement		114:21:3505:3505	3906497	1					
ANR	3907172	ExpressionStatement	"add_assoc_str_ex ( & stack_frame , ""function"" , sizeof ( ""function"" ) - 1 , zend_string_copy ( function_name ) )"	2597:3:71309:71406	3906497	0	True				
ANR	3907173	CallExpression	"add_assoc_str_ex ( & stack_frame , ""function"" , sizeof ( ""function"" ) - 1 , zend_string_copy ( function_name ) )"		3906497	0					
ANR	3907174	Callee	add_assoc_str_ex		3906497	0					
ANR	3907175	Identifier	add_assoc_str_ex		3906497	0					
ANR	3907176	ArgumentList	& stack_frame		3906497	1					
ANR	3907177	Argument	& stack_frame		3906497	0					
ANR	3907178	UnaryOperationExpression	& stack_frame		3906497	0					
ANR	3907179	UnaryOperator	&		3906497	0					
ANR	3907180	Identifier	stack_frame		3906497	1					
ANR	3907181	Argument	"""function"""		3906497	1					
ANR	3907182	PrimaryExpression	"""function"""		3906497	0					
ANR	3907183	Argument	"sizeof ( ""function"" ) - 1"		3906497	2					
ANR	3907184	AdditiveExpression	"sizeof ( ""function"" ) - 1"		3906497	0		-			
ANR	3907185	SizeofExpression	"sizeof ( ""function"" )"		3906497	0					
ANR	3907186	Sizeof	sizeof		3906497	0					
ANR	3907187	PrimaryExpression	"""function"""		3906497	1					
ANR	3907188	PrimaryExpression	1		3906497	1					
ANR	3907189	Argument	zend_string_copy ( function_name )		3906497	3					
ANR	3907190	CallExpression	zend_string_copy ( function_name )		3906497	0					
ANR	3907191	Callee	zend_string_copy		3906497	0					
ANR	3907192	Identifier	zend_string_copy		3906497	0					
ANR	3907193	ArgumentList	function_name		3906497	1					
ANR	3907194	Argument	function_name		3906497	0					
ANR	3907195	Identifier	function_name		3906497	0					
ANR	3907196	IfStatement	if ( object )		3906497	1					
ANR	3907197	Condition	object	2599:7:71416:71421	3906497	0	True				
ANR	3907198	Identifier	object		3906497	0					
ANR	3907199	CompoundStatement		117:15:3625:3625	3906497	1					
ANR	3907200	IfStatement	if ( func -> common . scope )		3906497	0					
ANR	3907201	Condition	func -> common . scope	2600:8:71434:71451	3906497	0	True				
ANR	3907202	MemberAccess	func -> common . scope		3906497	0					
ANR	3907203	PtrMemberAccess	func -> common		3906497	0					
ANR	3907204	Identifier	func		3906497	0					
ANR	3907205	Identifier	common		3906497	1					
ANR	3907206	Identifier	scope		3906497	1					
ANR	3907207	CompoundStatement		118:28:3655:3655	3906497	1					
ANR	3907208	ExpressionStatement	"add_assoc_str_ex ( & stack_frame , ""class"" , sizeof ( ""class"" ) - 1 , zend_string_copy ( func -> common . scope -> name ) )"	2601:5:71461:71563	3906497	0	True				
ANR	3907209	CallExpression	"add_assoc_str_ex ( & stack_frame , ""class"" , sizeof ( ""class"" ) - 1 , zend_string_copy ( func -> common . scope -> name ) )"		3906497	0					
ANR	3907210	Callee	add_assoc_str_ex		3906497	0					
ANR	3907211	Identifier	add_assoc_str_ex		3906497	0					
ANR	3907212	ArgumentList	& stack_frame		3906497	1					
ANR	3907213	Argument	& stack_frame		3906497	0					
ANR	3907214	UnaryOperationExpression	& stack_frame		3906497	0					
ANR	3907215	UnaryOperator	&		3906497	0					
ANR	3907216	Identifier	stack_frame		3906497	1					
ANR	3907217	Argument	"""class"""		3906497	1					
ANR	3907218	PrimaryExpression	"""class"""		3906497	0					
ANR	3907219	Argument	"sizeof ( ""class"" ) - 1"		3906497	2					
ANR	3907220	AdditiveExpression	"sizeof ( ""class"" ) - 1"		3906497	0		-			
ANR	3907221	SizeofExpression	"sizeof ( ""class"" )"		3906497	0					
ANR	3907222	Sizeof	sizeof		3906497	0					
ANR	3907223	PrimaryExpression	"""class"""		3906497	1					
ANR	3907224	PrimaryExpression	1		3906497	1					
ANR	3907225	Argument	zend_string_copy ( func -> common . scope -> name )		3906497	3					
ANR	3907226	CallExpression	zend_string_copy ( func -> common . scope -> name )		3906497	0					
ANR	3907227	Callee	zend_string_copy		3906497	0					
ANR	3907228	Identifier	zend_string_copy		3906497	0					
ANR	3907229	ArgumentList	func -> common . scope -> name		3906497	1					
ANR	3907230	Argument	func -> common . scope -> name		3906497	0					
ANR	3907231	PtrMemberAccess	func -> common . scope -> name		3906497	0					
ANR	3907232	MemberAccess	func -> common . scope		3906497	0					
ANR	3907233	PtrMemberAccess	func -> common		3906497	0					
ANR	3907234	Identifier	func		3906497	0					
ANR	3907235	Identifier	common		3906497	1					
ANR	3907236	Identifier	scope		3906497	1					
ANR	3907237	Identifier	name		3906497	1					
ANR	3907238	ElseStatement	else		3906497	0					
ANR	3907239	CompoundStatement		120:11:3777:3777	3906497	0					
ANR	3907240	ExpressionStatement	"add_assoc_str_ex ( & stack_frame , ""class"" , sizeof ( ""class"" ) - 1 , zend_string_copy ( object -> ce -> name ) )"	2603:5:71583:71677	3906497	0	True				
ANR	3907241	CallExpression	"add_assoc_str_ex ( & stack_frame , ""class"" , sizeof ( ""class"" ) - 1 , zend_string_copy ( object -> ce -> name ) )"		3906497	0					
ANR	3907242	Callee	add_assoc_str_ex		3906497	0					
ANR	3907243	Identifier	add_assoc_str_ex		3906497	0					
ANR	3907244	ArgumentList	& stack_frame		3906497	1					
ANR	3907245	Argument	& stack_frame		3906497	0					
ANR	3907246	UnaryOperationExpression	& stack_frame		3906497	0					
ANR	3907247	UnaryOperator	&		3906497	0					
ANR	3907248	Identifier	stack_frame		3906497	1					
ANR	3907249	Argument	"""class"""		3906497	1					
ANR	3907250	PrimaryExpression	"""class"""		3906497	0					
ANR	3907251	Argument	"sizeof ( ""class"" ) - 1"		3906497	2					
ANR	3907252	AdditiveExpression	"sizeof ( ""class"" ) - 1"		3906497	0		-			
ANR	3907253	SizeofExpression	"sizeof ( ""class"" )"		3906497	0					
ANR	3907254	Sizeof	sizeof		3906497	0					
ANR	3907255	PrimaryExpression	"""class"""		3906497	1					
ANR	3907256	PrimaryExpression	1		3906497	1					
ANR	3907257	Argument	zend_string_copy ( object -> ce -> name )		3906497	3					
ANR	3907258	CallExpression	zend_string_copy ( object -> ce -> name )		3906497	0					
ANR	3907259	Callee	zend_string_copy		3906497	0					
ANR	3907260	Identifier	zend_string_copy		3906497	0					
ANR	3907261	ArgumentList	object -> ce -> name		3906497	1					
ANR	3907262	Argument	object -> ce -> name		3906497	0					
ANR	3907263	PtrMemberAccess	object -> ce -> name		3906497	0					
ANR	3907264	PtrMemberAccess	object -> ce		3906497	0					
ANR	3907265	Identifier	object		3906497	0					
ANR	3907266	Identifier	ce		3906497	1					
ANR	3907267	Identifier	name		3906497	1					
ANR	3907268	IfStatement	if ( ( options & DEBUG_BACKTRACE_PROVIDE_OBJECT ) != 0 )		3906497	1					
ANR	3907269	Condition	( options & DEBUG_BACKTRACE_PROVIDE_OBJECT ) != 0	2606:8:71694:71740	3906497	0	True				
ANR	3907270	EqualityExpression	( options & DEBUG_BACKTRACE_PROVIDE_OBJECT ) != 0		3906497	0		!=			
ANR	3907271	BitAndExpression	options & DEBUG_BACKTRACE_PROVIDE_OBJECT		3906497	0		&			
ANR	3907272	Identifier	options		3906497	0					
ANR	3907273	Identifier	DEBUG_BACKTRACE_PROVIDE_OBJECT		3906497	1					
ANR	3907274	PrimaryExpression	0		3906497	1					
ANR	3907275	CompoundStatement		125:5:3951:3958	3906497	1					
ANR	3907276	IdentifierDeclStatement	zval zv ;	2607:5:71750:71757	3906497	0	True				
ANR	3907277	IdentifierDecl	zv		3906497	0					
ANR	3907278	IdentifierDeclType	zval		3906497	0					
ANR	3907279	Identifier	zv		3906497	1					
ANR	3907280	ExpressionStatement	"ZVAL_OBJ ( & zv , object )"	2608:5:71764:71785	3906497	1	True				
ANR	3907281	CallExpression	"ZVAL_OBJ ( & zv , object )"		3906497	0					
ANR	3907282	Callee	ZVAL_OBJ		3906497	0					
ANR	3907283	Identifier	ZVAL_OBJ		3906497	0					
ANR	3907284	ArgumentList	& zv		3906497	1					
ANR	3907285	Argument	& zv		3906497	0					
ANR	3907286	UnaryOperationExpression	& zv		3906497	0					
ANR	3907287	UnaryOperator	&		3906497	0					
ANR	3907288	Identifier	zv		3906497	1					
ANR	3907289	Argument	object		3906497	1					
ANR	3907290	Identifier	object		3906497	0					
ANR	3907291	ExpressionStatement	"add_assoc_zval_ex ( & stack_frame , ""object"" , sizeof ( ""object"" ) - 1 , & zv )"	2609:5:71792:71858	3906497	2	True				
ANR	3907292	CallExpression	"add_assoc_zval_ex ( & stack_frame , ""object"" , sizeof ( ""object"" ) - 1 , & zv )"		3906497	0					
ANR	3907293	Callee	add_assoc_zval_ex		3906497	0					
ANR	3907294	Identifier	add_assoc_zval_ex		3906497	0					
ANR	3907295	ArgumentList	& stack_frame		3906497	1					
ANR	3907296	Argument	& stack_frame		3906497	0					
ANR	3907297	UnaryOperationExpression	& stack_frame		3906497	0					
ANR	3907298	UnaryOperator	&		3906497	0					
ANR	3907299	Identifier	stack_frame		3906497	1					
ANR	3907300	Argument	"""object"""		3906497	1					
ANR	3907301	PrimaryExpression	"""object"""		3906497	0					
ANR	3907302	Argument	"sizeof ( ""object"" ) - 1"		3906497	2					
ANR	3907303	AdditiveExpression	"sizeof ( ""object"" ) - 1"		3906497	0		-			
ANR	3907304	SizeofExpression	"sizeof ( ""object"" )"		3906497	0					
ANR	3907305	Sizeof	sizeof		3906497	0					
ANR	3907306	PrimaryExpression	"""object"""		3906497	1					
ANR	3907307	PrimaryExpression	1		3906497	1					
ANR	3907308	Argument	& zv		3906497	3					
ANR	3907309	UnaryOperationExpression	& zv		3906497	0					
ANR	3907310	UnaryOperator	&		3906497	0					
ANR	3907311	Identifier	zv		3906497	1					
ANR	3907312	ExpressionStatement	Z_ADDREF ( zv )	2610:5:71865:71877	3906497	3	True				
ANR	3907313	CallExpression	Z_ADDREF ( zv )		3906497	0					
ANR	3907314	Callee	Z_ADDREF		3906497	0					
ANR	3907315	Identifier	Z_ADDREF		3906497	0					
ANR	3907316	ArgumentList	zv		3906497	1					
ANR	3907317	Argument	zv		3906497	0					
ANR	3907318	Identifier	zv		3906497	0					
ANR	3907319	ExpressionStatement	"add_assoc_string_ex ( & stack_frame , ""type"" , sizeof ( ""type"" ) - 1 , ""->"" )"	2613:4:71890:71955	3906497	2	True				
ANR	3907320	CallExpression	"add_assoc_string_ex ( & stack_frame , ""type"" , sizeof ( ""type"" ) - 1 , ""->"" )"		3906497	0					
ANR	3907321	Callee	add_assoc_string_ex		3906497	0					
ANR	3907322	Identifier	add_assoc_string_ex		3906497	0					
ANR	3907323	ArgumentList	& stack_frame		3906497	1					
ANR	3907324	Argument	& stack_frame		3906497	0					
ANR	3907325	UnaryOperationExpression	& stack_frame		3906497	0					
ANR	3907326	UnaryOperator	&		3906497	0					
ANR	3907327	Identifier	stack_frame		3906497	1					
ANR	3907328	Argument	"""type"""		3906497	1					
ANR	3907329	PrimaryExpression	"""type"""		3906497	0					
ANR	3907330	Argument	"sizeof ( ""type"" ) - 1"		3906497	2					
ANR	3907331	AdditiveExpression	"sizeof ( ""type"" ) - 1"		3906497	0		-			
ANR	3907332	SizeofExpression	"sizeof ( ""type"" )"		3906497	0					
ANR	3907333	Sizeof	sizeof		3906497	0					
ANR	3907334	PrimaryExpression	"""type"""		3906497	1					
ANR	3907335	PrimaryExpression	1		3906497	1					
ANR	3907336	Argument	"""->"""		3906497	3					
ANR	3907337	PrimaryExpression	"""->"""		3906497	0					
ANR	3907338	ElseStatement	else		3906497	0					
ANR	3907339	IfStatement	if ( func -> common . scope )		3906497	0					
ANR	3907340	Condition	func -> common . scope	2614:14:71971:71988	3906497	0	True				
ANR	3907341	MemberAccess	func -> common . scope		3906497	0					
ANR	3907342	PtrMemberAccess	func -> common		3906497	0					
ANR	3907343	Identifier	func		3906497	0					
ANR	3907344	Identifier	common		3906497	1					
ANR	3907345	Identifier	scope		3906497	1					
ANR	3907346	CompoundStatement		132:34:4192:4192	3906497	1					
ANR	3907347	ExpressionStatement	"add_assoc_str_ex ( & stack_frame , ""class"" , sizeof ( ""class"" ) - 1 , zend_string_copy ( func -> common . scope -> name ) )"	2615:4:71997:72099	3906497	0	True				
ANR	3907348	CallExpression	"add_assoc_str_ex ( & stack_frame , ""class"" , sizeof ( ""class"" ) - 1 , zend_string_copy ( func -> common . scope -> name ) )"		3906497	0					
ANR	3907349	Callee	add_assoc_str_ex		3906497	0					
ANR	3907350	Identifier	add_assoc_str_ex		3906497	0					
ANR	3907351	ArgumentList	& stack_frame		3906497	1					
ANR	3907352	Argument	& stack_frame		3906497	0					
ANR	3907353	UnaryOperationExpression	& stack_frame		3906497	0					
ANR	3907354	UnaryOperator	&		3906497	0					
ANR	3907355	Identifier	stack_frame		3906497	1					
ANR	3907356	Argument	"""class"""		3906497	1					
ANR	3907357	PrimaryExpression	"""class"""		3906497	0					
ANR	3907358	Argument	"sizeof ( ""class"" ) - 1"		3906497	2					
ANR	3907359	AdditiveExpression	"sizeof ( ""class"" ) - 1"		3906497	0		-			
ANR	3907360	SizeofExpression	"sizeof ( ""class"" )"		3906497	0					
ANR	3907361	Sizeof	sizeof		3906497	0					
ANR	3907362	PrimaryExpression	"""class"""		3906497	1					
ANR	3907363	PrimaryExpression	1		3906497	1					
ANR	3907364	Argument	zend_string_copy ( func -> common . scope -> name )		3906497	3					
ANR	3907365	CallExpression	zend_string_copy ( func -> common . scope -> name )		3906497	0					
ANR	3907366	Callee	zend_string_copy		3906497	0					
ANR	3907367	Identifier	zend_string_copy		3906497	0					
ANR	3907368	ArgumentList	func -> common . scope -> name		3906497	1					
ANR	3907369	Argument	func -> common . scope -> name		3906497	0					
ANR	3907370	PtrMemberAccess	func -> common . scope -> name		3906497	0					
ANR	3907371	MemberAccess	func -> common . scope		3906497	0					
ANR	3907372	PtrMemberAccess	func -> common		3906497	0					
ANR	3907373	Identifier	func		3906497	0					
ANR	3907374	Identifier	common		3906497	1					
ANR	3907375	Identifier	scope		3906497	1					
ANR	3907376	Identifier	name		3906497	1					
ANR	3907377	ExpressionStatement	"add_assoc_string_ex ( & stack_frame , ""type"" , sizeof ( ""type"" ) - 1 , ""::"" )"	2616:4:72105:72170	3906497	1	True				
ANR	3907378	CallExpression	"add_assoc_string_ex ( & stack_frame , ""type"" , sizeof ( ""type"" ) - 1 , ""::"" )"		3906497	0					
ANR	3907379	Callee	add_assoc_string_ex		3906497	0					
ANR	3907380	Identifier	add_assoc_string_ex		3906497	0					
ANR	3907381	ArgumentList	& stack_frame		3906497	1					
ANR	3907382	Argument	& stack_frame		3906497	0					
ANR	3907383	UnaryOperationExpression	& stack_frame		3906497	0					
ANR	3907384	UnaryOperator	&		3906497	0					
ANR	3907385	Identifier	stack_frame		3906497	1					
ANR	3907386	Argument	"""type"""		3906497	1					
ANR	3907387	PrimaryExpression	"""type"""		3906497	0					
ANR	3907388	Argument	"sizeof ( ""type"" ) - 1"		3906497	2					
ANR	3907389	AdditiveExpression	"sizeof ( ""type"" ) - 1"		3906497	0		-			
ANR	3907390	SizeofExpression	"sizeof ( ""type"" )"		3906497	0					
ANR	3907391	Sizeof	sizeof		3906497	0					
ANR	3907392	PrimaryExpression	"""type"""		3906497	1					
ANR	3907393	PrimaryExpression	1		3906497	1					
ANR	3907394	Argument	"""::"""		3906497	3					
ANR	3907395	PrimaryExpression	"""::"""		3906497	0					
ANR	3907396	IfStatement	if ( ( options & DEBUG_BACKTRACE_IGNORE_ARGS ) == 0 && func -> type != ZEND_EVAL_CODE )		3906497	2					
ANR	3907397	Condition	( options & DEBUG_BACKTRACE_IGNORE_ARGS ) == 0 && func -> type != ZEND_EVAL_CODE	2619:7:72185:72264	3906497	0	True				
ANR	3907398	AndExpression	( options & DEBUG_BACKTRACE_IGNORE_ARGS ) == 0 && func -> type != ZEND_EVAL_CODE		3906497	0		&&			
ANR	3907399	EqualityExpression	( options & DEBUG_BACKTRACE_IGNORE_ARGS ) == 0		3906497	0		==			
ANR	3907400	BitAndExpression	options & DEBUG_BACKTRACE_IGNORE_ARGS		3906497	0		&			
ANR	3907401	Identifier	options		3906497	0					
ANR	3907402	Identifier	DEBUG_BACKTRACE_IGNORE_ARGS		3906497	1					
ANR	3907403	PrimaryExpression	0		3906497	1					
ANR	3907404	EqualityExpression	func -> type != ZEND_EVAL_CODE		3906497	1		!=			
ANR	3907405	PtrMemberAccess	func -> type		3906497	0					
ANR	3907406	Identifier	func		3906497	0					
ANR	3907407	Identifier	type		3906497	1					
ANR	3907408	Identifier	ZEND_EVAL_CODE		3906497	1					
ANR	3907409	CompoundStatement		139:4:4474:4483	3906497	1					
ANR	3907410	IdentifierDeclStatement	zval args ;	2621:4:72273:72282	3906497	0	True				
ANR	3907411	IdentifierDecl	args		3906497	0					
ANR	3907412	IdentifierDeclType	zval		3906497	0					
ANR	3907413	Identifier	args		3906497	1					
ANR	3907414	ExpressionStatement	"debug_backtrace_get_args ( call , & args )"	2623:4:72289:72326	3906497	1	True				
ANR	3907415	CallExpression	"debug_backtrace_get_args ( call , & args )"		3906497	0					
ANR	3907416	Callee	debug_backtrace_get_args		3906497	0					
ANR	3907417	Identifier	debug_backtrace_get_args		3906497	0					
ANR	3907418	ArgumentList	call		3906497	1					
ANR	3907419	Argument	call		3906497	0					
ANR	3907420	Identifier	call		3906497	0					
ANR	3907421	Argument	& args		3906497	1					
ANR	3907422	UnaryOperationExpression	& args		3906497	0					
ANR	3907423	UnaryOperator	&		3906497	0					
ANR	3907424	Identifier	args		3906497	1					
ANR	3907425	ExpressionStatement	"add_assoc_zval_ex ( & stack_frame , ""args"" , sizeof ( ""args"" ) - 1 , & args )"	2624:4:72332:72396	3906497	2	True				
ANR	3907426	CallExpression	"add_assoc_zval_ex ( & stack_frame , ""args"" , sizeof ( ""args"" ) - 1 , & args )"		3906497	0					
ANR	3907427	Callee	add_assoc_zval_ex		3906497	0					
ANR	3907428	Identifier	add_assoc_zval_ex		3906497	0					
ANR	3907429	ArgumentList	& stack_frame		3906497	1					
ANR	3907430	Argument	& stack_frame		3906497	0					
ANR	3907431	UnaryOperationExpression	& stack_frame		3906497	0					
ANR	3907432	UnaryOperator	&		3906497	0					
ANR	3907433	Identifier	stack_frame		3906497	1					
ANR	3907434	Argument	"""args"""		3906497	1					
ANR	3907435	PrimaryExpression	"""args"""		3906497	0					
ANR	3907436	Argument	"sizeof ( ""args"" ) - 1"		3906497	2					
ANR	3907437	AdditiveExpression	"sizeof ( ""args"" ) - 1"		3906497	0		-			
ANR	3907438	SizeofExpression	"sizeof ( ""args"" )"		3906497	0					
ANR	3907439	Sizeof	sizeof		3906497	0					
ANR	3907440	PrimaryExpression	"""args"""		3906497	1					
ANR	3907441	PrimaryExpression	1		3906497	1					
ANR	3907442	Argument	& args		3906497	3					
ANR	3907443	UnaryOperationExpression	& args		3906497	0					
ANR	3907444	UnaryOperator	&		3906497	0					
ANR	3907445	Identifier	args		3906497	1					
ANR	3907446	ElseStatement	else		3906497	0					
ANR	3907447	CompoundStatement		147:3:4755:4787	3906497	0					
ANR	3907448	IdentifierDeclStatement	zend_bool build_filename_arg = 1 ;	2628:3:72517:72549	3906497	0	True				
ANR	3907449	IdentifierDecl	build_filename_arg = 1		3906497	0					
ANR	3907450	IdentifierDeclType	zend_bool		3906497	0					
ANR	3907451	Identifier	build_filename_arg		3906497	1					
ANR	3907452	AssignmentExpression	build_filename_arg = 1		3906497	2		=			
ANR	3907453	Identifier	build_filename_arg		3906497	0					
ANR	3907454	PrimaryExpression	1		3906497	1					
ANR	3907455	IdentifierDeclStatement	const char * pseudo_function_name ;	2629:3:72554:72586	3906497	1	True				
ANR	3907456	IdentifierDecl	* pseudo_function_name		3906497	0					
ANR	3907457	IdentifierDeclType	const char *		3906497	0					
ANR	3907458	Identifier	pseudo_function_name		3906497	1					
ANR	3907459	IfStatement	if ( ! ptr -> func || ! ZEND_USER_CODE ( ptr -> func -> common . type ) || ptr -> opline -> opcode != ZEND_INCLUDE_OR_EVAL )		3906497	2					
ANR	3907460	Condition	! ptr -> func || ! ZEND_USER_CODE ( ptr -> func -> common . type ) || ptr -> opline -> opcode != ZEND_INCLUDE_OR_EVAL	2631:7:72596:72695	3906497	0	True				
ANR	3907461	OrExpression	! ptr -> func || ! ZEND_USER_CODE ( ptr -> func -> common . type ) || ptr -> opline -> opcode != ZEND_INCLUDE_OR_EVAL		3906497	0		||			
ANR	3907462	UnaryOperationExpression	! ptr -> func		3906497	0					
ANR	3907463	UnaryOperator	!		3906497	0					
ANR	3907464	PtrMemberAccess	ptr -> func		3906497	1					
ANR	3907465	Identifier	ptr		3906497	0					
ANR	3907466	Identifier	func		3906497	1					
ANR	3907467	OrExpression	! ZEND_USER_CODE ( ptr -> func -> common . type ) || ptr -> opline -> opcode != ZEND_INCLUDE_OR_EVAL		3906497	1		||			
ANR	3907468	UnaryOperationExpression	! ZEND_USER_CODE ( ptr -> func -> common . type )		3906497	0					
ANR	3907469	UnaryOperator	!		3906497	0					
ANR	3907470	CallExpression	ZEND_USER_CODE ( ptr -> func -> common . type )		3906497	1					
ANR	3907471	Callee	ZEND_USER_CODE		3906497	0					
ANR	3907472	Identifier	ZEND_USER_CODE		3906497	0					
ANR	3907473	ArgumentList	ptr -> func -> common . type		3906497	1					
ANR	3907474	Argument	ptr -> func -> common . type		3906497	0					
ANR	3907475	MemberAccess	ptr -> func -> common . type		3906497	0					
ANR	3907476	PtrMemberAccess	ptr -> func -> common		3906497	0					
ANR	3907477	PtrMemberAccess	ptr -> func		3906497	0					
ANR	3907478	Identifier	ptr		3906497	0					
ANR	3907479	Identifier	func		3906497	1					
ANR	3907480	Identifier	common		3906497	1					
ANR	3907481	Identifier	type		3906497	1					
ANR	3907482	EqualityExpression	ptr -> opline -> opcode != ZEND_INCLUDE_OR_EVAL		3906497	1		!=			
ANR	3907483	PtrMemberAccess	ptr -> opline -> opcode		3906497	0					
ANR	3907484	PtrMemberAccess	ptr -> opline		3906497	0					
ANR	3907485	Identifier	ptr		3906497	0					
ANR	3907486	Identifier	opline		3906497	1					
ANR	3907487	Identifier	opcode		3906497	1					
ANR	3907488	Identifier	ZEND_INCLUDE_OR_EVAL		3906497	1					
ANR	3907489	CompoundStatement		149:109:4899:4899	3906497	1					
ANR	3907490	ExpressionStatement	"pseudo_function_name = ""unknown"""	2633:4:72762:72794	3906497	0	True				
ANR	3907491	AssignmentExpression	"pseudo_function_name = ""unknown"""		3906497	0		=			
ANR	3907492	Identifier	pseudo_function_name		3906497	0					
ANR	3907493	PrimaryExpression	"""unknown"""		3906497	1					
ANR	3907494	ExpressionStatement	build_filename_arg = 0	2634:4:72800:72822	3906497	1	True				
ANR	3907495	AssignmentExpression	build_filename_arg = 0		3906497	0		=			
ANR	3907496	Identifier	build_filename_arg		3906497	0					
ANR	3907497	PrimaryExpression	0		3906497	1					
ANR	3907498	ElseStatement	else		3906497	0					
ANR	3907499	SwitchStatement	switch ( ptr -> opline -> extended_value )		3906497	0					
ANR	3907500	Condition	ptr -> opline -> extended_value	2636:11:72845:72871	3906497	0	True				
ANR	3907501	PtrMemberAccess	ptr -> opline -> extended_value		3906497	0					
ANR	3907502	PtrMemberAccess	ptr -> opline		3906497	0					
ANR	3907503	Identifier	ptr		3906497	0					
ANR	3907504	Identifier	opline		3906497	1					
ANR	3907505	Identifier	extended_value		3906497	1					
ANR	3907506	CompoundStatement		154:40:5075:5075	3906497	1					
ANR	3907507	Label	case ZEND_EVAL :	2637:4:72880:72894	3906497	0	True				
ANR	3907508	Identifier	ZEND_EVAL		3906497	0					
ANR	3907509	ExpressionStatement	"pseudo_function_name = ""eval"""	2638:5:72901:72930	3906497	1	True				
ANR	3907510	AssignmentExpression	"pseudo_function_name = ""eval"""		3906497	0		=			
ANR	3907511	Identifier	pseudo_function_name		3906497	0					
ANR	3907512	PrimaryExpression	"""eval"""		3906497	1					
ANR	3907513	ExpressionStatement	build_filename_arg = 0	2639:5:72937:72959	3906497	2	True				
ANR	3907514	AssignmentExpression	build_filename_arg = 0		3906497	0		=			
ANR	3907515	Identifier	build_filename_arg		3906497	0					
ANR	3907516	PrimaryExpression	0		3906497	1					
ANR	3907517	BreakStatement	break ;	2640:5:72966:72971	3906497	3	True				
ANR	3907518	Label	case ZEND_INCLUDE :	2641:4:72977:72994	3906497	4	True				
ANR	3907519	Identifier	ZEND_INCLUDE		3906497	0					
ANR	3907520	ExpressionStatement	"pseudo_function_name = ""include"""	2642:5:73001:73033	3906497	5	True				
ANR	3907521	AssignmentExpression	"pseudo_function_name = ""include"""		3906497	0		=			
ANR	3907522	Identifier	pseudo_function_name		3906497	0					
ANR	3907523	PrimaryExpression	"""include"""		3906497	1					
ANR	3907524	BreakStatement	break ;	2643:5:73040:73045	3906497	6	True				
ANR	3907525	Label	case ZEND_REQUIRE :	2644:4:73051:73068	3906497	7	True				
ANR	3907526	Identifier	ZEND_REQUIRE		3906497	0					
ANR	3907527	ExpressionStatement	"pseudo_function_name = ""require"""	2645:5:73075:73107	3906497	8	True				
ANR	3907528	AssignmentExpression	"pseudo_function_name = ""require"""		3906497	0		=			
ANR	3907529	Identifier	pseudo_function_name		3906497	0					
ANR	3907530	PrimaryExpression	"""require"""		3906497	1					
ANR	3907531	BreakStatement	break ;	2646:5:73114:73119	3906497	9	True				
ANR	3907532	Label	case ZEND_INCLUDE_ONCE :	2647:4:73125:73147	3906497	10	True				
ANR	3907533	Identifier	ZEND_INCLUDE_ONCE		3906497	0					
ANR	3907534	ExpressionStatement	"pseudo_function_name = ""include_once"""	2648:5:73154:73191	3906497	11	True				
ANR	3907535	AssignmentExpression	"pseudo_function_name = ""include_once"""		3906497	0		=			
ANR	3907536	Identifier	pseudo_function_name		3906497	0					
ANR	3907537	PrimaryExpression	"""include_once"""		3906497	1					
ANR	3907538	BreakStatement	break ;	2649:5:73198:73203	3906497	12	True				
ANR	3907539	Label	case ZEND_REQUIRE_ONCE :	2650:4:73209:73231	3906497	13	True				
ANR	3907540	Identifier	ZEND_REQUIRE_ONCE		3906497	0					
ANR	3907541	ExpressionStatement	"pseudo_function_name = ""require_once"""	2651:5:73238:73275	3906497	14	True				
ANR	3907542	AssignmentExpression	"pseudo_function_name = ""require_once"""		3906497	0		=			
ANR	3907543	Identifier	pseudo_function_name		3906497	0					
ANR	3907544	PrimaryExpression	"""require_once"""		3906497	1					
ANR	3907545	BreakStatement	break ;	2652:5:73282:73287	3906497	15	True				
ANR	3907546	Label	default :	2653:4:73293:73300	3906497	16	True				
ANR	3907547	Identifier	default		3906497	0					
ANR	3907548	ExpressionStatement	"pseudo_function_name = ""unknown"""	2656:5:73430:73462	3906497	17	True				
ANR	3907549	AssignmentExpression	"pseudo_function_name = ""unknown"""		3906497	0		=			
ANR	3907550	Identifier	pseudo_function_name		3906497	0					
ANR	3907551	PrimaryExpression	"""unknown"""		3906497	1					
ANR	3907552	ExpressionStatement	build_filename_arg = 0	2657:5:73469:73491	3906497	18	True				
ANR	3907553	AssignmentExpression	build_filename_arg = 0		3906497	0		=			
ANR	3907554	Identifier	build_filename_arg		3906497	0					
ANR	3907555	PrimaryExpression	0		3906497	1					
ANR	3907556	BreakStatement	break ;	2658:5:73498:73503	3906497	19	True				
ANR	3907557	IfStatement	if ( build_filename_arg && include_filename )		3906497	3					
ANR	3907558	Condition	build_filename_arg && include_filename	2661:7:73518:73555	3906497	0	True				
ANR	3907559	AndExpression	build_filename_arg && include_filename		3906497	0		&&			
ANR	3907560	Identifier	build_filename_arg		3906497	0					
ANR	3907561	Identifier	include_filename		3906497	1					
ANR	3907562	CompoundStatement		180:4:5765:5779	3906497	1					
ANR	3907563	IdentifierDeclStatement	zval arg_array ;	2662:4:73564:73578	3906497	0	True				
ANR	3907564	IdentifierDecl	arg_array		3906497	0					
ANR	3907565	IdentifierDeclType	zval		3906497	0					
ANR	3907566	Identifier	arg_array		3906497	1					
ANR	3907567	ExpressionStatement	array_init ( & arg_array )	2664:4:73585:73607	3906497	1	True				
ANR	3907568	CallExpression	array_init ( & arg_array )		3906497	0					
ANR	3907569	Callee	array_init		3906497	0					
ANR	3907570	Identifier	array_init		3906497	0					
ANR	3907571	ArgumentList	& arg_array		3906497	1					
ANR	3907572	Argument	& arg_array		3906497	0					
ANR	3907573	UnaryOperationExpression	& arg_array		3906497	0					
ANR	3907574	UnaryOperator	&		3906497	0					
ANR	3907575	Identifier	arg_array		3906497	1					
ANR	3907576	ExpressionStatement	"add_next_index_str ( & arg_array , zend_string_copy ( include_filename ) )"	2670:4:73805:73871	3906497	2	True				
ANR	3907577	CallExpression	"add_next_index_str ( & arg_array , zend_string_copy ( include_filename ) )"		3906497	0					
ANR	3907578	Callee	add_next_index_str		3906497	0					
ANR	3907579	Identifier	add_next_index_str		3906497	0					
ANR	3907580	ArgumentList	& arg_array		3906497	1					
ANR	3907581	Argument	& arg_array		3906497	0					
ANR	3907582	UnaryOperationExpression	& arg_array		3906497	0					
ANR	3907583	UnaryOperator	&		3906497	0					
ANR	3907584	Identifier	arg_array		3906497	1					
ANR	3907585	Argument	zend_string_copy ( include_filename )		3906497	1					
ANR	3907586	CallExpression	zend_string_copy ( include_filename )		3906497	0					
ANR	3907587	Callee	zend_string_copy		3906497	0					
ANR	3907588	Identifier	zend_string_copy		3906497	0					
ANR	3907589	ArgumentList	include_filename		3906497	1					
ANR	3907590	Argument	include_filename		3906497	0					
ANR	3907591	Identifier	include_filename		3906497	0					
ANR	3907592	ExpressionStatement	"add_assoc_zval_ex ( & stack_frame , ""args"" , sizeof ( ""args"" ) - 1 , & arg_array )"	2671:4:73877:73946	3906497	3	True				
ANR	3907593	CallExpression	"add_assoc_zval_ex ( & stack_frame , ""args"" , sizeof ( ""args"" ) - 1 , & arg_array )"		3906497	0					
ANR	3907594	Callee	add_assoc_zval_ex		3906497	0					
ANR	3907595	Identifier	add_assoc_zval_ex		3906497	0					
ANR	3907596	ArgumentList	& stack_frame		3906497	1					
ANR	3907597	Argument	& stack_frame		3906497	0					
ANR	3907598	UnaryOperationExpression	& stack_frame		3906497	0					
ANR	3907599	UnaryOperator	&		3906497	0					
ANR	3907600	Identifier	stack_frame		3906497	1					
ANR	3907601	Argument	"""args"""		3906497	1					
ANR	3907602	PrimaryExpression	"""args"""		3906497	0					
ANR	3907603	Argument	"sizeof ( ""args"" ) - 1"		3906497	2					
ANR	3907604	AdditiveExpression	"sizeof ( ""args"" ) - 1"		3906497	0		-			
ANR	3907605	SizeofExpression	"sizeof ( ""args"" )"		3906497	0					
ANR	3907606	Sizeof	sizeof		3906497	0					
ANR	3907607	PrimaryExpression	"""args"""		3906497	1					
ANR	3907608	PrimaryExpression	1		3906497	1					
ANR	3907609	Argument	& arg_array		3906497	3					
ANR	3907610	UnaryOperationExpression	& arg_array		3906497	0					
ANR	3907611	UnaryOperator	&		3906497	0					
ANR	3907612	Identifier	arg_array		3906497	1					
ANR	3907613	ExpressionStatement	"add_assoc_string_ex ( & stack_frame , ""function"" , sizeof ( ""function"" ) - 1 , ( char * ) pseudo_function_name )"	2674:3:73957:74055	3906497	4	True				
ANR	3907614	CallExpression	"add_assoc_string_ex ( & stack_frame , ""function"" , sizeof ( ""function"" ) - 1 , ( char * ) pseudo_function_name )"		3906497	0					
ANR	3907615	Callee	add_assoc_string_ex		3906497	0					
ANR	3907616	Identifier	add_assoc_string_ex		3906497	0					
ANR	3907617	ArgumentList	& stack_frame		3906497	1					
ANR	3907618	Argument	& stack_frame		3906497	0					
ANR	3907619	UnaryOperationExpression	& stack_frame		3906497	0					
ANR	3907620	UnaryOperator	&		3906497	0					
ANR	3907621	Identifier	stack_frame		3906497	1					
ANR	3907622	Argument	"""function"""		3906497	1					
ANR	3907623	PrimaryExpression	"""function"""		3906497	0					
ANR	3907624	Argument	"sizeof ( ""function"" ) - 1"		3906497	2					
ANR	3907625	AdditiveExpression	"sizeof ( ""function"" ) - 1"		3906497	0		-			
ANR	3907626	SizeofExpression	"sizeof ( ""function"" )"		3906497	0					
ANR	3907627	Sizeof	sizeof		3906497	0					
ANR	3907628	PrimaryExpression	"""function"""		3906497	1					
ANR	3907629	PrimaryExpression	1		3906497	1					
ANR	3907630	Argument	( char * ) pseudo_function_name		3906497	3					
ANR	3907631	CastExpression	( char * ) pseudo_function_name		3906497	0					
ANR	3907632	CastTarget	char *		3906497	0					
ANR	3907633	Identifier	pseudo_function_name		3906497	1					
ANR	3907634	ExpressionStatement	"zend_hash_next_index_insert_new ( Z_ARRVAL_P ( return_value ) , & stack_frame )"	2677:2:74064:74135	3906497	9	True				
ANR	3907635	CallExpression	"zend_hash_next_index_insert_new ( Z_ARRVAL_P ( return_value ) , & stack_frame )"		3906497	0					
ANR	3907636	Callee	zend_hash_next_index_insert_new		3906497	0					
ANR	3907637	Identifier	zend_hash_next_index_insert_new		3906497	0					
ANR	3907638	ArgumentList	Z_ARRVAL_P ( return_value )		3906497	1					
ANR	3907639	Argument	Z_ARRVAL_P ( return_value )		3906497	0					
ANR	3907640	CallExpression	Z_ARRVAL_P ( return_value )		3906497	0					
ANR	3907641	Callee	Z_ARRVAL_P		3906497	0					
ANR	3907642	Identifier	Z_ARRVAL_P		3906497	0					
ANR	3907643	ArgumentList	return_value		3906497	1					
ANR	3907644	Argument	return_value		3906497	0					
ANR	3907645	Identifier	return_value		3906497	0					
ANR	3907646	Argument	& stack_frame		3906497	1					
ANR	3907647	UnaryOperationExpression	& stack_frame		3906497	0					
ANR	3907648	UnaryOperator	&		3906497	0					
ANR	3907649	Identifier	stack_frame		3906497	1					
ANR	3907650	ExpressionStatement	include_filename = filename	2679:2:74140:74167	3906497	10	True				
ANR	3907651	AssignmentExpression	include_filename = filename		3906497	0		=			
ANR	3907652	Identifier	include_filename		3906497	0					
ANR	3907653	Identifier	filename		3906497	1					
ANR	3907654	ExpressionStatement	call = skip	2681:2:74172:74183	3906497	11	True				
ANR	3907655	AssignmentExpression	call = skip		3906497	0		=			
ANR	3907656	Identifier	call		3906497	0					
ANR	3907657	Identifier	skip		3906497	1					
ANR	3907658	ExpressionStatement	ptr = skip -> prev_execute_data	2682:2:74187:74216	3906497	12	True				
ANR	3907659	AssignmentExpression	ptr = skip -> prev_execute_data		3906497	0		=			
ANR	3907660	Identifier	ptr		3906497	0					
ANR	3907661	PtrMemberAccess	skip -> prev_execute_data		3906497	1					
ANR	3907662	Identifier	skip		3906497	0					
ANR	3907663	Identifier	prev_execute_data		3906497	1					
ANR	3907664	ReturnType	ZEND_API void		3906497	1					
ANR	3907665	Identifier	zend_fetch_debug_backtrace		3906497	2					
ANR	3907666	ParameterList	"zval * return_value , int skip_last , int options , int limit"		3906497	3					
ANR	3907667	Parameter	zval * return_value	2482:41:67729:67746	3906497	0	True				
ANR	3907668	ParameterType	zval *		3906497	0					
ANR	3907669	Identifier	return_value		3906497	1					
ANR	3907670	Parameter	int skip_last	2482:61:67749:67761	3906497	1	True				
ANR	3907671	ParameterType	int		3906497	0					
ANR	3907672	Identifier	skip_last		3906497	1					
ANR	3907673	Parameter	int options	2482:76:67764:67774	3906497	2	True				
ANR	3907674	ParameterType	int		3906497	0					
ANR	3907675	Identifier	options		3906497	1					
ANR	3907676	Parameter	int limit	2482:89:67777:67785	3906497	3	True				
ANR	3907677	ParameterType	int		3906497	0					
ANR	3907678	Identifier	limit		3906497	1					
ANR	3907679	CFGEntryNode	ENTRY		3906497		True				
ANR	3907680	CFGExitNode	EXIT		3906497		True				
ANR	3907681	Symbol	* skip -> opline		3906497						
ANR	3907682	Symbol	ptr -> opline		3906497						
ANR	3907683	Symbol	ZEND_DO_FCALL_BY_NAME		3906497						
ANR	3907684	Symbol	prev_call -> func -> common . type		3906497						
ANR	3907685	Symbol	prev		3906497						
ANR	3907686	Symbol	skip -> func -> op_array		3906497						
ANR	3907687	Symbol	* call		3906497						
ANR	3907688	Symbol	ZEND_HANDLE_EXCEPTION		3906497						
ANR	3907689	Symbol	prev -> func -> common . type		3906497						
ANR	3907690	Symbol	opline_before_exception		3906497						
ANR	3907691	Symbol	* skip		3906497						
ANR	3907692	Symbol	ZEND_EVAL_CODE		3906497						
ANR	3907693	Symbol	func -> common . scope -> name		3906497						
ANR	3907694	Symbol	func -> common		3906497						
ANR	3907695	Symbol	options		3906497						
ANR	3907696	Symbol	* object -> ce		3906497						
ANR	3907697	Symbol	frameno		3906497						
ANR	3907698	Symbol	skip -> prev_execute_data -> func -> common		3906497						
ANR	3907699	Symbol	build_filename_arg		3906497						
ANR	3907700	Symbol	prev -> func -> common		3906497						
ANR	3907701	Symbol	* prev -> opline		3906497						
ANR	3907702	Symbol	& arg_array		3906497						
ANR	3907703	Symbol	skip -> func -> common . type		3906497						
ANR	3907704	Symbol	* prev -> func		3906497						
ANR	3907705	Symbol	& stack_frame		3906497						
ANR	3907706	Symbol	skip -> func -> op_array . line_end		3906497						
ANR	3907707	Symbol	* func -> common . scope		3906497						
ANR	3907708	Symbol	ptr -> prev_execute_data		3906497						
ANR	3907709	Symbol	filename		3906497						
ANR	3907710	Symbol	ZEND_DO_FCALL		3906497						
ANR	3907711	Symbol	skip -> prev_execute_data -> opline		3906497						
ANR	3907712	Symbol	* * skip		3906497						
ANR	3907713	Symbol	func -> common . scope -> trait_aliases		3906497						
ANR	3907714	Symbol	ZEND_USER_CODE		3906497						
ANR	3907715	Symbol	prev -> func -> op_array		3906497						
ANR	3907716	Symbol	prev_call		3906497						
ANR	3907717	Symbol	zv		3906497						
ANR	3907718	Symbol	object		3906497						
ANR	3907719	Symbol	object -> ce -> name		3906497						
ANR	3907720	Symbol	return_value		3906497						
ANR	3907721	Symbol	* * ptr		3906497						
ANR	3907722	Symbol	* * prev		3906497						
ANR	3907723	Symbol	* * prev_call		3906497						
ANR	3907724	Symbol	skip		3906497						
ANR	3907725	Symbol	* ptr -> func		3906497						
ANR	3907726	Symbol	* EG		3906497						
ANR	3907727	Symbol	* object		3906497						
ANR	3907728	Symbol	arg_array		3906497						
ANR	3907729	Symbol	Z_OBJ		3906497						
ANR	3907730	Symbol	func -> common . scope		3906497						
ANR	3907731	Symbol	* prev_call -> func		3906497						
ANR	3907732	Symbol	* * * skip		3906497						
ANR	3907733	Symbol	skip -> opline -> opcode		3906497						
ANR	3907734	Symbol	func -> type		3906497						
ANR	3907735	Symbol	prev -> prev_execute_data		3906497						
ANR	3907736	Symbol	ZEND_NEW		3906497						
ANR	3907737	Symbol	skip -> func -> common		3906497						
ANR	3907738	Symbol	& args		3906497						
ANR	3907739	Symbol	ptr -> opline -> opcode		3906497						
ANR	3907740	Symbol	* func		3906497						
ANR	3907741	Symbol	& zv		3906497						
ANR	3907742	Symbol	call		3906497						
ANR	3907743	Symbol	DEBUG_BACKTRACE_IGNORE_ARGS		3906497						
ANR	3907744	Symbol	ZEND_DO_ICALL		3906497						
ANR	3907745	Symbol	* * object		3906497						
ANR	3907746	Symbol	ptr -> func -> common . type		3906497						
ANR	3907747	Symbol	call -> This		3906497						
ANR	3907748	Symbol	skip_last		3906497						
ANR	3907749	Symbol	call -> func		3906497						
ANR	3907750	Symbol	object -> ce		3906497						
ANR	3907751	Symbol	current_execute_data		3906497						
ANR	3907752	Symbol	pseudo_function_name		3906497						
ANR	3907753	Symbol	ptr -> func		3906497						
ANR	3907754	Symbol	zend_resolve_method_name		3906497						
ANR	3907755	Symbol	* skip -> prev_execute_data -> func		3906497						
ANR	3907756	Symbol	ZEND_DO_UCALL		3906497						
ANR	3907757	Symbol	prev_call -> func -> common		3906497						
ANR	3907758	Symbol	prev -> func		3906497						
ANR	3907759	Symbol	limit		3906497						
ANR	3907760	Symbol	* ptr		3906497						
ANR	3907761	Symbol	EG		3906497						
ANR	3907762	Symbol	NULL		3906497						
ANR	3907763	Symbol	EG ( opline_before_exception ) -> lineno		3906497						
ANR	3907764	Symbol	zend_string_copy		3906497						
ANR	3907765	Symbol	ZEND_ACC_CALL_VIA_TRAMPOLINE		3906497						
ANR	3907766	Symbol	* skip -> prev_execute_data -> opline		3906497						
ANR	3907767	Symbol	* func -> common		3906497						
ANR	3907768	Symbol	prev -> opline -> lineno		3906497						
ANR	3907769	Symbol	* skip -> prev_execute_data		3906497						
ANR	3907770	Symbol	zend_generator_check_placeholder_frame		3906497						
ANR	3907771	Symbol	skip -> prev_execute_data		3906497						
ANR	3907772	Symbol	skip -> opline -> lineno		3906497						
ANR	3907773	Symbol	ptr -> func -> common		3906497						
ANR	3907774	Symbol	* * skip -> prev_execute_data		3906497						
ANR	3907775	Symbol	skip -> prev_execute_data -> func -> common . type		3906497						
ANR	3907776	Symbol	* prev		3906497						
ANR	3907777	Symbol	prev -> func -> op_array . filename		3906497						
ANR	3907778	Symbol	* ptr -> opline		3906497						
ANR	3907779	Symbol	stack_frame		3906497						
ANR	3907780	Symbol	prev -> opline		3906497						
ANR	3907781	Symbol	ZEND_INCLUDE_OR_EVAL		3906497						
ANR	3907782	Symbol	ptr -> opline -> extended_value		3906497						
ANR	3907783	Symbol	Z_ARRVAL_P		3906497						
ANR	3907784	Symbol	skip -> opline		3906497						
ANR	3907785	Symbol	prev_call -> func		3906497						
ANR	3907786	Symbol	skip -> func		3906497						
ANR	3907787	Symbol	* * func		3906497						
ANR	3907788	Symbol	func -> common . function_name		3906497						
ANR	3907789	Symbol	skip -> prev_execute_data -> opline -> opcode		3906497						
ANR	3907790	Symbol	DEBUG_BACKTRACE_PROVIDE_OBJECT		3906497						
ANR	3907791	Symbol	ptr		3906497						
ANR	3907792	Symbol	* prev_call		3906497						
ANR	3907793	Symbol	args		3906497						
ANR	3907794	Symbol	lineno		3906497						
ANR	3907795	Symbol	func		3906497						
ANR	3907796	Symbol	function_name		3906497						
ANR	3907797	Symbol	prev_call -> func -> common . fn_flags		3906497						
ANR	3907798	Symbol	skip -> prev_execute_data -> func		3906497						
ANR	3907799	Symbol	* skip -> func		3906497						
ANR	3907800	Symbol	include_filename		3906497						
ANR	3907801	Symbol	skip -> func -> op_array . filename		3906497						
ANR	3907802	DeclStmt									
ANR	3907803	Decl							zend_long	zend_long	options
ANR	3907804	DeclStmt									
ANR	3907805	Decl							zend_long	zend_long	limit
ANR	3907806	DeclStmt									
ANR	3907807	Decl							zend_string	zend_string *	extension_name
ANR	3907808	DeclStmt									
ANR	3907809	Decl							zend_string	zend_string *	lcname
ANR	3907810	DeclStmt									
ANR	3907811	Decl							zend_string	zend_string *	extension_name
ANR	3907812	DeclStmt									
ANR	3907813	Decl							zend_string	zend_string *	lcname
ANR	3907814	DeclStmt									
ANR	3907815	Decl							int	int	array
ANR	3907816	DeclStmt									
ANR	3907817	Decl							zend_module_entry	zend_module_entry *	module
ANR	3907818	DeclStmt									
ANR	3907819	Decl							zend_function	zend_function *	zif
