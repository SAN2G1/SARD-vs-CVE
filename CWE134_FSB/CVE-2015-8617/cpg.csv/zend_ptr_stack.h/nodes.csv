command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4179959	File	data/converged/CVE-2015-8617_php-src/zend_ptr_stack.h								
ANR	4179960	ClassDef	_zend_ptr_stack	25:8:1294:1412							
ANR	4179961	DeclStmt									
ANR	4179962	Decl							int	int	top
ANR	4179963	Decl							int	int	max
ANR	4179964	DeclStmt									
ANR	4179965	Decl							void	void * *	elements
ANR	4179966	DeclStmt									
ANR	4179967	Decl							void	void * *	top_element
ANR	4179968	DeclStmt									
ANR	4179969	Decl							zend_bool	zend_bool	persistent
ANR	4179970	DeclStmt									
ANR	4179971	Decl							_zend_ptr_stack	_zend_ptr_stack	zend_ptr_stack
ANR	4179972	DeclStmt									
ANR	4179973	Decl							ZEND_API void	ZEND_API void ( zend_ptr_stack * stack )	zend_ptr_stack_init
ANR	4179974	DeclStmt									
ANR	4179975	Decl							ZEND_API void	"ZEND_API void ( zend_ptr_stack * stack , zend_bool persistent )"	zend_ptr_stack_init_ex
ANR	4179976	DeclStmt									
ANR	4179977	Decl							ZEND_API void	ZEND_API void ( zend_ptr_stack * stack )	zend_ptr_stack_destroy
ANR	4179978	DeclStmt									
ANR	4179979	Decl							ZEND_API void	"ZEND_API void ( zend_ptr_stack * stack , void ( * func ) ( void * ) )"	zend_ptr_stack_apply
ANR	4179980	DeclStmt									
ANR	4179981	Decl							ZEND_API void	"ZEND_API void ( zend_ptr_stack * stack , void ( * func ) ( void * ) , zend_bool free_elements )"	zend_ptr_stack_clean
ANR	4179982	DeclStmt									
ANR	4179983	Decl							ZEND_API int	ZEND_API int ( zend_ptr_stack * stack )	zend_ptr_stack_num_elements
ANR	4179984	Function	zend_ptr_stack_3_push	58:0:2664:3032							
ANR	4179985	FunctionDef	"zend_ptr_stack_3_push (zend_ptr_stack * stack , void * a , void * b , void * c)"		4179984	0					
ANR	4179986	CompoundStatement		59:0:2767:3032	4179984	0					
ANR	4179987	Statement	define	60:1:2770:2775	4179984	0	True				
ANR	4179988	Statement	ZEND_PTR_STACK_NUM_ARGS	60:8:2777:2799	4179984	1	True				
ANR	4179989	Statement	3	60:32:2801:2801	4179984	2	True				
ANR	4179990	Statement	ZEND_PTR_STACK_RESIZE_IF_NEEDED	62:1:2805:2835	4179984	3	True				
ANR	4179991	Statement	(	62:32:2836:2836	4179984	4	True				
ANR	4179992	Statement	stack	62:33:2837:2841	4179984	5	True				
ANR	4179993	Statement	","	62:38:2842:2842	4179984	6	True				
ANR	4179994	Statement	ZEND_PTR_STACK_NUM_ARGS	62:40:2844:2866	4179984	7	True				
ANR	4179995	Statement	)	62:63:2867:2867	4179984	8	True				
ANR	4179996	ExpressionStatement	stack -> top += ZEND_PTR_STACK_NUM_ARGS	64:1:2871:2908	4179984	9	True				
ANR	4179997	AssignmentExpression	stack -> top += ZEND_PTR_STACK_NUM_ARGS		4179984	0		+=			
ANR	4179998	PtrMemberAccess	stack -> top		4179984	0					
ANR	4179999	Identifier	stack		4179984	0					
ANR	4180000	Identifier	top		4179984	1					
ANR	4180001	Identifier	ZEND_PTR_STACK_NUM_ARGS		4179984	1					
ANR	4180002	ExpressionStatement	* ( stack -> top_element ++ ) = a	65:1:2911:2938	4179984	10	True				
ANR	4180003	AssignmentExpression	* ( stack -> top_element ++ ) = a		4179984	0		=			
ANR	4180004	UnaryOperationExpression	* ( stack -> top_element ++ )		4179984	0					
ANR	4180005	UnaryOperator	*		4179984	0					
ANR	4180006	PostIncDecOperationExpression	stack -> top_element ++		4179984	1					
ANR	4180007	PtrMemberAccess	stack -> top_element		4179984	0					
ANR	4180008	Identifier	stack		4179984	0					
ANR	4180009	Identifier	top_element		4179984	1					
ANR	4180010	IncDec	++		4179984	1					
ANR	4180011	Identifier	a		4179984	1					
ANR	4180012	ExpressionStatement	* ( stack -> top_element ++ ) = b	66:1:2941:2968	4179984	11	True				
ANR	4180013	AssignmentExpression	* ( stack -> top_element ++ ) = b		4179984	0		=			
ANR	4180014	UnaryOperationExpression	* ( stack -> top_element ++ )		4179984	0					
ANR	4180015	UnaryOperator	*		4179984	0					
ANR	4180016	PostIncDecOperationExpression	stack -> top_element ++		4179984	1					
ANR	4180017	PtrMemberAccess	stack -> top_element		4179984	0					
ANR	4180018	Identifier	stack		4179984	0					
ANR	4180019	Identifier	top_element		4179984	1					
ANR	4180020	IncDec	++		4179984	1					
ANR	4180021	Identifier	b		4179984	1					
ANR	4180022	ExpressionStatement	* ( stack -> top_element ++ ) = c	67:1:2971:2998	4179984	12	True				
ANR	4180023	AssignmentExpression	* ( stack -> top_element ++ ) = c		4179984	0		=			
ANR	4180024	UnaryOperationExpression	* ( stack -> top_element ++ )		4179984	0					
ANR	4180025	UnaryOperator	*		4179984	0					
ANR	4180026	PostIncDecOperationExpression	stack -> top_element ++		4179984	1					
ANR	4180027	PtrMemberAccess	stack -> top_element		4179984	0					
ANR	4180028	Identifier	stack		4179984	0					
ANR	4180029	Identifier	top_element		4179984	1					
ANR	4180030	IncDec	++		4179984	1					
ANR	4180031	Identifier	c		4179984	1					
ANR	4180032	Statement	undef	69:1:3002:3006	4179984	13	True				
ANR	4180033	Statement	ZEND_PTR_STACK_NUM_ARGS	69:7:3008:3030	4179984	14	True				
ANR	4180034	ReturnType	static zend_always_inline void		4179984	1					
ANR	4180035	Identifier	zend_ptr_stack_3_push		4179984	2					
ANR	4180036	ParameterList	"zend_ptr_stack * stack , void * a , void * b , void * c"		4179984	3					
ANR	4180037	Parameter	zend_ptr_stack * stack	58:53:2717:2737	4179984	0	True				
ANR	4180038	ParameterType	zend_ptr_stack *		4179984	0					
ANR	4180039	Identifier	stack		4179984	1					
ANR	4180040	Parameter	void * a	58:76:2740:2746	4179984	1	True				
ANR	4180041	ParameterType	void *		4179984	0					
ANR	4180042	Identifier	a		4179984	1					
ANR	4180043	Parameter	void * b	58:85:2749:2755	4179984	2	True				
ANR	4180044	ParameterType	void *		4179984	0					
ANR	4180045	Identifier	b		4179984	1					
ANR	4180046	Parameter	void * c	58:94:2758:2764	4179984	3	True				
ANR	4180047	ParameterType	void *		4179984	0					
ANR	4180048	Identifier	c		4179984	1					
ANR	4180049	CFGEntryNode	ENTRY		4179984		True				
ANR	4180050	CFGExitNode	EXIT		4179984		True				
ANR	4180051	Symbol	a		4179984						
ANR	4180052	Symbol	stack		4179984						
ANR	4180053	Symbol	b		4179984						
ANR	4180054	Symbol	c		4179984						
ANR	4180055	Symbol	stack -> top_element		4179984						
ANR	4180056	Symbol	* ( stack -> top_element ++ )		4179984						
ANR	4180057	Symbol	* stack		4179984						
ANR	4180058	Symbol	ZEND_PTR_STACK_NUM_ARGS		4179984						
ANR	4180059	Symbol	stack -> top		4179984						
ANR	4180060	Function	zend_ptr_stack_2_push	72:0:3035:3364							
ANR	4180061	FunctionDef	"zend_ptr_stack_2_push (zend_ptr_stack * stack , void * a , void * b)"		4180060	0					
ANR	4180062	CompoundStatement		73:0:3129:3364	4180060	0					
ANR	4180063	Statement	define	74:1:3132:3137	4180060	0	True				
ANR	4180064	Statement	ZEND_PTR_STACK_NUM_ARGS	74:8:3139:3161	4180060	1	True				
ANR	4180065	Statement	2	74:32:3163:3163	4180060	2	True				
ANR	4180066	Statement	ZEND_PTR_STACK_RESIZE_IF_NEEDED	76:1:3167:3197	4180060	3	True				
ANR	4180067	Statement	(	76:32:3198:3198	4180060	4	True				
ANR	4180068	Statement	stack	76:33:3199:3203	4180060	5	True				
ANR	4180069	Statement	","	76:38:3204:3204	4180060	6	True				
ANR	4180070	Statement	ZEND_PTR_STACK_NUM_ARGS	76:40:3206:3228	4180060	7	True				
ANR	4180071	Statement	)	76:63:3229:3229	4180060	8	True				
ANR	4180072	ExpressionStatement	stack -> top += ZEND_PTR_STACK_NUM_ARGS	78:1:3233:3270	4180060	9	True				
ANR	4180073	AssignmentExpression	stack -> top += ZEND_PTR_STACK_NUM_ARGS		4180060	0		+=			
ANR	4180074	PtrMemberAccess	stack -> top		4180060	0					
ANR	4180075	Identifier	stack		4180060	0					
ANR	4180076	Identifier	top		4180060	1					
ANR	4180077	Identifier	ZEND_PTR_STACK_NUM_ARGS		4180060	1					
ANR	4180078	ExpressionStatement	* ( stack -> top_element ++ ) = a	79:1:3273:3300	4180060	10	True				
ANR	4180079	AssignmentExpression	* ( stack -> top_element ++ ) = a		4180060	0		=			
ANR	4180080	UnaryOperationExpression	* ( stack -> top_element ++ )		4180060	0					
ANR	4180081	UnaryOperator	*		4180060	0					
ANR	4180082	PostIncDecOperationExpression	stack -> top_element ++		4180060	1					
ANR	4180083	PtrMemberAccess	stack -> top_element		4180060	0					
ANR	4180084	Identifier	stack		4180060	0					
ANR	4180085	Identifier	top_element		4180060	1					
ANR	4180086	IncDec	++		4180060	1					
ANR	4180087	Identifier	a		4180060	1					
ANR	4180088	ExpressionStatement	* ( stack -> top_element ++ ) = b	80:1:3303:3330	4180060	11	True				
ANR	4180089	AssignmentExpression	* ( stack -> top_element ++ ) = b		4180060	0		=			
ANR	4180090	UnaryOperationExpression	* ( stack -> top_element ++ )		4180060	0					
ANR	4180091	UnaryOperator	*		4180060	0					
ANR	4180092	PostIncDecOperationExpression	stack -> top_element ++		4180060	1					
ANR	4180093	PtrMemberAccess	stack -> top_element		4180060	0					
ANR	4180094	Identifier	stack		4180060	0					
ANR	4180095	Identifier	top_element		4180060	1					
ANR	4180096	IncDec	++		4180060	1					
ANR	4180097	Identifier	b		4180060	1					
ANR	4180098	Statement	undef	82:1:3334:3338	4180060	12	True				
ANR	4180099	Statement	ZEND_PTR_STACK_NUM_ARGS	82:7:3340:3362	4180060	13	True				
ANR	4180100	ReturnType	static zend_always_inline void		4180060	1					
ANR	4180101	Identifier	zend_ptr_stack_2_push		4180060	2					
ANR	4180102	ParameterList	"zend_ptr_stack * stack , void * a , void * b"		4180060	3					
ANR	4180103	Parameter	zend_ptr_stack * stack	72:53:3088:3108	4180060	0	True				
ANR	4180104	ParameterType	zend_ptr_stack *		4180060	0					
ANR	4180105	Identifier	stack		4180060	1					
ANR	4180106	Parameter	void * a	72:76:3111:3117	4180060	1	True				
ANR	4180107	ParameterType	void *		4180060	0					
ANR	4180108	Identifier	a		4180060	1					
ANR	4180109	Parameter	void * b	72:85:3120:3126	4180060	2	True				
ANR	4180110	ParameterType	void *		4180060	0					
ANR	4180111	Identifier	b		4180060	1					
ANR	4180112	CFGEntryNode	ENTRY		4180060		True				
ANR	4180113	CFGExitNode	EXIT		4180060		True				
ANR	4180114	Symbol	a		4180060						
ANR	4180115	Symbol	stack		4180060						
ANR	4180116	Symbol	b		4180060						
ANR	4180117	Symbol	stack -> top_element		4180060						
ANR	4180118	Symbol	* ( stack -> top_element ++ )		4180060						
ANR	4180119	Symbol	* stack		4180060						
ANR	4180120	Symbol	ZEND_PTR_STACK_NUM_ARGS		4180060						
ANR	4180121	Symbol	stack -> top		4180060						
ANR	4180122	Function	zend_ptr_stack_3_pop	85:0:3367:3585							
ANR	4180123	FunctionDef	"zend_ptr_stack_3_pop (zend_ptr_stack * stack , void * * a , void * * b , void * * c)"		4180122	0					
ANR	4180124	CompoundStatement		86:0:3472:3585	4180122	0					
ANR	4180125	ExpressionStatement	* a = * ( -- stack -> top_element )	87:1:3475:3503	4180122	0	True				
ANR	4180126	AssignmentExpression	* a = * ( -- stack -> top_element )		4180122	0		=			
ANR	4180127	UnaryOperationExpression	* a		4180122	0					
ANR	4180128	UnaryOperator	*		4180122	0					
ANR	4180129	Identifier	a		4180122	1					
ANR	4180130	UnaryOperationExpression	* ( -- stack -> top_element )		4180122	1					
ANR	4180131	UnaryOperator	*		4180122	0					
ANR	4180132	UnaryExpression	-- stack -> top_element		4180122	1					
ANR	4180133	IncDec	--		4180122	0					
ANR	4180134	PtrMemberAccess	stack -> top_element		4180122	1					
ANR	4180135	Identifier	stack		4180122	0					
ANR	4180136	Identifier	top_element		4180122	1					
ANR	4180137	ExpressionStatement	* b = * ( -- stack -> top_element )	88:1:3506:3534	4180122	1	True				
ANR	4180138	AssignmentExpression	* b = * ( -- stack -> top_element )		4180122	0		=			
ANR	4180139	UnaryOperationExpression	* b		4180122	0					
ANR	4180140	UnaryOperator	*		4180122	0					
ANR	4180141	Identifier	b		4180122	1					
ANR	4180142	UnaryOperationExpression	* ( -- stack -> top_element )		4180122	1					
ANR	4180143	UnaryOperator	*		4180122	0					
ANR	4180144	UnaryExpression	-- stack -> top_element		4180122	1					
ANR	4180145	IncDec	--		4180122	0					
ANR	4180146	PtrMemberAccess	stack -> top_element		4180122	1					
ANR	4180147	Identifier	stack		4180122	0					
ANR	4180148	Identifier	top_element		4180122	1					
ANR	4180149	ExpressionStatement	* c = * ( -- stack -> top_element )	89:1:3537:3565	4180122	2	True				
ANR	4180150	AssignmentExpression	* c = * ( -- stack -> top_element )		4180122	0		=			
ANR	4180151	UnaryOperationExpression	* c		4180122	0					
ANR	4180152	UnaryOperator	*		4180122	0					
ANR	4180153	Identifier	c		4180122	1					
ANR	4180154	UnaryOperationExpression	* ( -- stack -> top_element )		4180122	1					
ANR	4180155	UnaryOperator	*		4180122	0					
ANR	4180156	UnaryExpression	-- stack -> top_element		4180122	1					
ANR	4180157	IncDec	--		4180122	0					
ANR	4180158	PtrMemberAccess	stack -> top_element		4180122	1					
ANR	4180159	Identifier	stack		4180122	0					
ANR	4180160	Identifier	top_element		4180122	1					
ANR	4180161	ExpressionStatement	stack -> top -= 3	90:1:3568:3583	4180122	3	True				
ANR	4180162	AssignmentExpression	stack -> top -= 3		4180122	0		-=			
ANR	4180163	PtrMemberAccess	stack -> top		4180122	0					
ANR	4180164	Identifier	stack		4180122	0					
ANR	4180165	Identifier	top		4180122	1					
ANR	4180166	PrimaryExpression	3		4180122	1					
ANR	4180167	ReturnType	static zend_always_inline void		4180122	1					
ANR	4180168	Identifier	zend_ptr_stack_3_pop		4180122	2					
ANR	4180169	ParameterList	"zend_ptr_stack * stack , void * * a , void * * b , void * * c"		4180122	3					
ANR	4180170	Parameter	zend_ptr_stack * stack	85:52:3419:3439	4180122	0	True				
ANR	4180171	ParameterType	zend_ptr_stack *		4180122	0					
ANR	4180172	Identifier	stack		4180122	1					
ANR	4180173	Parameter	void * * a	85:75:3442:3449	4180122	1	True				
ANR	4180174	ParameterType	void * *		4180122	0					
ANR	4180175	Identifier	a		4180122	1					
ANR	4180176	Parameter	void * * b	85:85:3452:3459	4180122	2	True				
ANR	4180177	ParameterType	void * *		4180122	0					
ANR	4180178	Identifier	b		4180122	1					
ANR	4180179	Parameter	void * * c	85:95:3462:3469	4180122	3	True				
ANR	4180180	ParameterType	void * *		4180122	0					
ANR	4180181	Identifier	c		4180122	1					
ANR	4180182	CFGEntryNode	ENTRY		4180122		True				
ANR	4180183	CFGExitNode	EXIT		4180122		True				
ANR	4180184	Symbol	a		4180122						
ANR	4180185	Symbol	stack		4180122						
ANR	4180186	Symbol	b		4180122						
ANR	4180187	Symbol	c		4180122						
ANR	4180188	Symbol	* a		4180122						
ANR	4180189	Symbol	* b		4180122						
ANR	4180190	Symbol	* stack -> top_element		4180122						
ANR	4180191	Symbol	* c		4180122						
ANR	4180192	Symbol	* ( -- stack -> top_element )		4180122						
ANR	4180193	Symbol	stack -> top_element		4180122						
ANR	4180194	Symbol	* * stack		4180122						
ANR	4180195	Symbol	* stack		4180122						
ANR	4180196	Symbol	stack -> top		4180122						
ANR	4180197	Function	zend_ptr_stack_2_pop	93:0:3588:3765							
ANR	4180198	FunctionDef	"zend_ptr_stack_2_pop (zend_ptr_stack * stack , void * * a , void * * b)"		4180197	0					
ANR	4180199	CompoundStatement		94:0:3683:3765	4180197	0					
ANR	4180200	ExpressionStatement	* a = * ( -- stack -> top_element )	95:1:3686:3714	4180197	0	True				
ANR	4180201	AssignmentExpression	* a = * ( -- stack -> top_element )		4180197	0		=			
ANR	4180202	UnaryOperationExpression	* a		4180197	0					
ANR	4180203	UnaryOperator	*		4180197	0					
ANR	4180204	Identifier	a		4180197	1					
ANR	4180205	UnaryOperationExpression	* ( -- stack -> top_element )		4180197	1					
ANR	4180206	UnaryOperator	*		4180197	0					
ANR	4180207	UnaryExpression	-- stack -> top_element		4180197	1					
ANR	4180208	IncDec	--		4180197	0					
ANR	4180209	PtrMemberAccess	stack -> top_element		4180197	1					
ANR	4180210	Identifier	stack		4180197	0					
ANR	4180211	Identifier	top_element		4180197	1					
ANR	4180212	ExpressionStatement	* b = * ( -- stack -> top_element )	96:1:3717:3745	4180197	1	True				
ANR	4180213	AssignmentExpression	* b = * ( -- stack -> top_element )		4180197	0		=			
ANR	4180214	UnaryOperationExpression	* b		4180197	0					
ANR	4180215	UnaryOperator	*		4180197	0					
ANR	4180216	Identifier	b		4180197	1					
ANR	4180217	UnaryOperationExpression	* ( -- stack -> top_element )		4180197	1					
ANR	4180218	UnaryOperator	*		4180197	0					
ANR	4180219	UnaryExpression	-- stack -> top_element		4180197	1					
ANR	4180220	IncDec	--		4180197	0					
ANR	4180221	PtrMemberAccess	stack -> top_element		4180197	1					
ANR	4180222	Identifier	stack		4180197	0					
ANR	4180223	Identifier	top_element		4180197	1					
ANR	4180224	ExpressionStatement	stack -> top -= 2	97:1:3748:3763	4180197	2	True				
ANR	4180225	AssignmentExpression	stack -> top -= 2		4180197	0		-=			
ANR	4180226	PtrMemberAccess	stack -> top		4180197	0					
ANR	4180227	Identifier	stack		4180197	0					
ANR	4180228	Identifier	top		4180197	1					
ANR	4180229	PrimaryExpression	2		4180197	1					
ANR	4180230	ReturnType	static zend_always_inline void		4180197	1					
ANR	4180231	Identifier	zend_ptr_stack_2_pop		4180197	2					
ANR	4180232	ParameterList	"zend_ptr_stack * stack , void * * a , void * * b"		4180197	3					
ANR	4180233	Parameter	zend_ptr_stack * stack	93:52:3640:3660	4180197	0	True				
ANR	4180234	ParameterType	zend_ptr_stack *		4180197	0					
ANR	4180235	Identifier	stack		4180197	1					
ANR	4180236	Parameter	void * * a	93:75:3663:3670	4180197	1	True				
ANR	4180237	ParameterType	void * *		4180197	0					
ANR	4180238	Identifier	a		4180197	1					
ANR	4180239	Parameter	void * * b	93:85:3673:3680	4180197	2	True				
ANR	4180240	ParameterType	void * *		4180197	0					
ANR	4180241	Identifier	b		4180197	1					
ANR	4180242	CFGEntryNode	ENTRY		4180197		True				
ANR	4180243	CFGExitNode	EXIT		4180197		True				
ANR	4180244	Symbol	a		4180197						
ANR	4180245	Symbol	stack		4180197						
ANR	4180246	Symbol	b		4180197						
ANR	4180247	Symbol	* ( -- stack -> top_element )		4180197						
ANR	4180248	Symbol	stack -> top_element		4180197						
ANR	4180249	Symbol	* * stack		4180197						
ANR	4180250	Symbol	* stack		4180197						
ANR	4180251	Symbol	* a		4180197						
ANR	4180252	Symbol	* b		4180197						
ANR	4180253	Symbol	stack -> top		4180197						
ANR	4180254	Symbol	* stack -> top_element		4180197						
ANR	4180255	Function	zend_ptr_stack_push	100:0:3768:3946							
ANR	4180256	FunctionDef	"zend_ptr_stack_push (zend_ptr_stack * stack , void * ptr)"		4180255	0					
ANR	4180257	CompoundStatement		101:0:3853:3946	4180255	0					
ANR	4180258	Statement	ZEND_PTR_STACK_RESIZE_IF_NEEDED	102:1:3856:3886	4180255	0	True				
ANR	4180259	Statement	(	102:32:3887:3887	4180255	1	True				
ANR	4180260	Statement	stack	102:33:3888:3892	4180255	2	True				
ANR	4180261	Statement	","	102:38:3893:3893	4180255	3	True				
ANR	4180262	Statement	1	102:40:3895:3895	4180255	4	True				
ANR	4180263	Statement	)	102:41:3896:3896	4180255	5	True				
ANR	4180264	ExpressionStatement	stack -> top ++	104:1:3900:3912	4180255	6	True				
ANR	4180265	PostIncDecOperationExpression	stack -> top ++		4180255	0					
ANR	4180266	PtrMemberAccess	stack -> top		4180255	0					
ANR	4180267	Identifier	stack		4180255	0					
ANR	4180268	Identifier	top		4180255	1					
ANR	4180269	IncDec	++		4180255	1					
ANR	4180270	ExpressionStatement	* ( stack -> top_element ++ ) = ptr	105:1:3915:3944	4180255	7	True				
ANR	4180271	AssignmentExpression	* ( stack -> top_element ++ ) = ptr		4180255	0		=			
ANR	4180272	UnaryOperationExpression	* ( stack -> top_element ++ )		4180255	0					
ANR	4180273	UnaryOperator	*		4180255	0					
ANR	4180274	PostIncDecOperationExpression	stack -> top_element ++		4180255	1					
ANR	4180275	PtrMemberAccess	stack -> top_element		4180255	0					
ANR	4180276	Identifier	stack		4180255	0					
ANR	4180277	Identifier	top_element		4180255	1					
ANR	4180278	IncDec	++		4180255	1					
ANR	4180279	Identifier	ptr		4180255	1					
ANR	4180280	ReturnType	static zend_always_inline void		4180255	1					
ANR	4180281	Identifier	zend_ptr_stack_push		4180255	2					
ANR	4180282	ParameterList	"zend_ptr_stack * stack , void * ptr"		4180255	3					
ANR	4180283	Parameter	zend_ptr_stack * stack	100:51:3819:3839	4180255	0	True				
ANR	4180284	ParameterType	zend_ptr_stack *		4180255	0					
ANR	4180285	Identifier	stack		4180255	1					
ANR	4180286	Parameter	void * ptr	100:74:3842:3850	4180255	1	True				
ANR	4180287	ParameterType	void *		4180255	0					
ANR	4180288	Identifier	ptr		4180255	1					
ANR	4180289	CFGEntryNode	ENTRY		4180255		True				
ANR	4180290	CFGExitNode	EXIT		4180255		True				
ANR	4180291	Symbol	stack		4180255						
ANR	4180292	Symbol	stack -> top_element		4180255						
ANR	4180293	Symbol	* ( stack -> top_element ++ )		4180255						
ANR	4180294	Symbol	* stack		4180255						
ANR	4180295	Symbol	stack -> top		4180255						
ANR	4180296	Symbol	ptr		4180255						
ANR	4180297	Function	zend_ptr_stack_pop	108:0:3949:4073							
ANR	4180298	FunctionDef	zend_ptr_stack_pop (zend_ptr_stack * stack)		4180297	0					
ANR	4180299	CompoundStatement		109:0:4023:4073	4180297	0					
ANR	4180300	ExpressionStatement	stack -> top --	110:1:4026:4038	4180297	0	True				
ANR	4180301	PostIncDecOperationExpression	stack -> top --		4180297	0					
ANR	4180302	PtrMemberAccess	stack -> top		4180297	0					
ANR	4180303	Identifier	stack		4180297	0					
ANR	4180304	Identifier	top		4180297	1					
ANR	4180305	IncDec	--		4180297	1					
ANR	4180306	ReturnStatement	return * ( -- stack -> top_element ) ;	111:1:4041:4071	4180297	1	True				
ANR	4180307	UnaryOperationExpression	* ( -- stack -> top_element )		4180297	0					
ANR	4180308	UnaryOperator	*		4180297	0					
ANR	4180309	UnaryExpression	-- stack -> top_element		4180297	1					
ANR	4180310	IncDec	--		4180297	0					
ANR	4180311	PtrMemberAccess	stack -> top_element		4180297	1					
ANR	4180312	Identifier	stack		4180297	0					
ANR	4180313	Identifier	top_element		4180297	1					
ANR	4180314	ReturnType	static zend_always_inline void *		4180297	1					
ANR	4180315	Identifier	zend_ptr_stack_pop		4180297	2					
ANR	4180316	ParameterList	zend_ptr_stack * stack		4180297	3					
ANR	4180317	Parameter	zend_ptr_stack * stack	108:51:4000:4020	4180297	0	True				
ANR	4180318	ParameterType	zend_ptr_stack *		4180297	0					
ANR	4180319	Identifier	stack		4180297	1					
ANR	4180320	CFGEntryNode	ENTRY		4180297		True				
ANR	4180321	CFGExitNode	EXIT		4180297		True				
ANR	4180322	Symbol	stack		4180297						
ANR	4180323	Symbol	* ( -- stack -> top_element )		4180297						
ANR	4180324	Symbol	stack -> top_element		4180297						
ANR	4180325	Symbol	* * stack		4180297						
ANR	4180326	Symbol	* stack		4180297						
ANR	4180327	Symbol	stack -> top		4180297						
ANR	4180328	Symbol	* stack -> top_element		4180297						
ANR	4180329	Function	zend_ptr_stack_top	114:0:4076:4196							
ANR	4180330	FunctionDef	zend_ptr_stack_top (zend_ptr_stack * stack)		4180329	0					
ANR	4180331	CompoundStatement		115:0:4150:4196	4180329	0					
ANR	4180332	ReturnStatement	return stack -> elements [ stack -> top - 1 ] ;	116:4:4156:4194	4180329	0	True				
ANR	4180333	ArrayIndexing	stack -> elements [ stack -> top - 1 ]		4180329	0					
ANR	4180334	PtrMemberAccess	stack -> elements		4180329	0					
ANR	4180335	Identifier	stack		4180329	0					
ANR	4180336	Identifier	elements		4180329	1					
ANR	4180337	AdditiveExpression	stack -> top - 1		4180329	1		-			
ANR	4180338	PtrMemberAccess	stack -> top		4180329	0					
ANR	4180339	Identifier	stack		4180329	0					
ANR	4180340	Identifier	top		4180329	1					
ANR	4180341	PrimaryExpression	1		4180329	1					
ANR	4180342	ReturnType	static zend_always_inline void *		4180329	1					
ANR	4180343	Identifier	zend_ptr_stack_top		4180329	2					
ANR	4180344	ParameterList	zend_ptr_stack * stack		4180329	3					
ANR	4180345	Parameter	zend_ptr_stack * stack	114:51:4127:4147	4180329	0	True				
ANR	4180346	ParameterType	zend_ptr_stack *		4180329	0					
ANR	4180347	Identifier	stack		4180329	1					
ANR	4180348	CFGEntryNode	ENTRY		4180329		True				
ANR	4180349	CFGExitNode	EXIT		4180329		True				
ANR	4180350	Symbol	stack		4180329						
ANR	4180351	Symbol	* stack -> top		4180329						
ANR	4180352	Symbol	* * stack		4180329						
ANR	4180353	Symbol	* stack		4180329						
ANR	4180354	Symbol	* stack -> elements		4180329						
ANR	4180355	Symbol	stack -> top		4180329						
ANR	4180356	Symbol	stack -> elements		4180329						
