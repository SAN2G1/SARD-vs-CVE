command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3821750	File	data/converged/CVE-2015-8617_php-src/utf8.c								
ANR	3821751	DeclStmt									
ANR	3821752	Decl							const int	const int [ ]	EncLen_UTF8
ANR	3821753	Function	mbc_enc_len	62:0:2757:2824							
ANR	3821754	FunctionDef	mbc_enc_len (const UChar * p)		3821753	0					
ANR	3821755	CompoundStatement		64:0:2796:2824	3821753	0					
ANR	3821756	ReturnStatement	return EncLen_UTF8 [ * p ] ;	65:2:2800:2822	3821753	0	True				
ANR	3821757	ArrayIndexing	EncLen_UTF8 [ * p ]		3821753	0					
ANR	3821758	Identifier	EncLen_UTF8		3821753	0					
ANR	3821759	UnaryOperationExpression	* p		3821753	1					
ANR	3821760	UnaryOperator	*		3821753	0					
ANR	3821761	Identifier	p		3821753	1					
ANR	3821762	ReturnType	static int		3821753	1					
ANR	3821763	Identifier	mbc_enc_len		3821753	2					
ANR	3821764	ParameterList	const UChar * p		3821753	3					
ANR	3821765	Parameter	const UChar * p	63:12:2780:2793	3821753	0	True				
ANR	3821766	ParameterType	const UChar *		3821753	0					
ANR	3821767	Identifier	p		3821753	1					
ANR	3821768	CFGEntryNode	ENTRY		3821753		True				
ANR	3821769	CFGExitNode	EXIT		3821753		True				
ANR	3821770	Symbol	p		3821753						
ANR	3821771	Symbol	EncLen_UTF8		3821753						
ANR	3821772	Symbol	* p		3821753						
ANR	3821773	Symbol	* * p		3821753						
ANR	3821774	Symbol	* EncLen_UTF8		3821753						
ANR	3821775	Function	is_mbc_newline	68:0:2827:3313							
ANR	3821776	FunctionDef	"is_mbc_newline (const UChar * p , const UChar * end)"		3821775	0					
ANR	3821777	CompoundStatement		70:0:2887:3313	3821775	0					
ANR	3821778	IfStatement	if ( p < end )		3821775	0					
ANR	3821779	Condition	p < end	71:6:2895:2901	3821775	0	True				
ANR	3821780	RelationalExpression	p < end		3821775	0		<			
ANR	3821781	Identifier	p		3821775	0					
ANR	3821782	Identifier	end		3821775	1					
ANR	3821783	CompoundStatement		2:15:16:16	3821775	1					
ANR	3821784	IfStatement	if ( * p == 0x0a )		3821775	0					
ANR	3821785	Condition	* p == 0x0a	72:8:2914:2923	3821775	0	True				
ANR	3821786	EqualityExpression	* p == 0x0a		3821775	0		==			
ANR	3821787	UnaryOperationExpression	* p		3821775	0					
ANR	3821788	UnaryOperator	*		3821775	0					
ANR	3821789	Identifier	p		3821775	1					
ANR	3821790	PrimaryExpression	0x0a		3821775	1					
ANR	3821791	ReturnStatement	return 1 ;	72:20:2926:2934	3821775	1	True				
ANR	3821792	PrimaryExpression	1		3821775	0					
ANR	3821793	IfStatement	if ( * p == 0x0d )		3821775	1					
ANR	3821794	Condition	* p == 0x0d	76:8:3021:3030	3821775	0	True				
ANR	3821795	EqualityExpression	* p == 0x0d		3821775	0		==			
ANR	3821796	UnaryOperationExpression	* p		3821775	0					
ANR	3821797	UnaryOperator	*		3821775	0					
ANR	3821798	Identifier	p		3821775	1					
ANR	3821799	PrimaryExpression	0x0d		3821775	1					
ANR	3821800	ReturnStatement	return 1 ;	76:20:3033:3041	3821775	1	True				
ANR	3821801	PrimaryExpression	1		3821775	0					
ANR	3821802	IfStatement	if ( p + 1 < end )		3821775	2					
ANR	3821803	Condition	p + 1 < end	78:8:3058:3068	3821775	0	True				
ANR	3821804	RelationalExpression	p + 1 < end		3821775	0		<			
ANR	3821805	AdditiveExpression	p + 1		3821775	0		+			
ANR	3821806	Identifier	p		3821775	0					
ANR	3821807	PrimaryExpression	1		3821775	1					
ANR	3821808	Identifier	end		3821775	1					
ANR	3821809	CompoundStatement		9:21:183:183	3821775	1					
ANR	3821810	IfStatement	if ( * ( p + 1 ) == 0x85 && * p == 0xc2 )		3821775	0					
ANR	3821811	Condition	* ( p + 1 ) == 0x85 && * p == 0xc2	79:10:3083:3110	3821775	0	True				
ANR	3821812	AndExpression	* ( p + 1 ) == 0x85 && * p == 0xc2		3821775	0		&&			
ANR	3821813	EqualityExpression	* ( p + 1 ) == 0x85		3821775	0		==			
ANR	3821814	UnaryOperationExpression	* ( p + 1 )		3821775	0					
ANR	3821815	UnaryOperator	*		3821775	0					
ANR	3821816	AdditiveExpression	p + 1		3821775	1		+			
ANR	3821817	Identifier	p		3821775	0					
ANR	3821818	PrimaryExpression	1		3821775	1					
ANR	3821819	PrimaryExpression	0x85		3821775	1					
ANR	3821820	EqualityExpression	* p == 0xc2		3821775	1		==			
ANR	3821821	UnaryOperationExpression	* p		3821775	0					
ANR	3821822	UnaryOperator	*		3821775	0					
ANR	3821823	Identifier	p		3821775	1					
ANR	3821824	PrimaryExpression	0xc2		3821775	1					
ANR	3821825	ReturnStatement	return 1 ;	80:1:3127:3135	3821775	1	True				
ANR	3821826	PrimaryExpression	1		3821775	0					
ANR	3821827	IfStatement	if ( p + 2 < end )		3821775	1					
ANR	3821828	Condition	p + 2 < end	81:10:3147:3157	3821775	0	True				
ANR	3821829	RelationalExpression	p + 2 < end		3821775	0		<			
ANR	3821830	AdditiveExpression	p + 2		3821775	0		+			
ANR	3821831	Identifier	p		3821775	0					
ANR	3821832	PrimaryExpression	2		3821775	1					
ANR	3821833	Identifier	end		3821775	1					
ANR	3821834	CompoundStatement		12:23:272:272	3821775	1					
ANR	3821835	IfStatement	if ( ( * ( p + 2 ) == 0xa8 || * ( p + 2 ) == 0xa9 ) && * ( p + 1 ) == 0x80 && * p == 0xe2 )		3821775	0					
ANR	3821836	Condition	( * ( p + 2 ) == 0xa8 || * ( p + 2 ) == 0xa9 ) && * ( p + 1 ) == 0x80 && * p == 0xe2	82:5:3167:3237	3821775	0	True				
ANR	3821837	AndExpression	( * ( p + 2 ) == 0xa8 || * ( p + 2 ) == 0xa9 ) && * ( p + 1 ) == 0x80 && * p == 0xe2		3821775	0		&&			
ANR	3821838	OrExpression	* ( p + 2 ) == 0xa8 || * ( p + 2 ) == 0xa9		3821775	0		||			
ANR	3821839	EqualityExpression	* ( p + 2 ) == 0xa8		3821775	0		==			
ANR	3821840	UnaryOperationExpression	* ( p + 2 )		3821775	0					
ANR	3821841	UnaryOperator	*		3821775	0					
ANR	3821842	AdditiveExpression	p + 2		3821775	1		+			
ANR	3821843	Identifier	p		3821775	0					
ANR	3821844	PrimaryExpression	2		3821775	1					
ANR	3821845	PrimaryExpression	0xa8		3821775	1					
ANR	3821846	EqualityExpression	* ( p + 2 ) == 0xa9		3821775	1		==			
ANR	3821847	UnaryOperationExpression	* ( p + 2 )		3821775	0					
ANR	3821848	UnaryOperator	*		3821775	0					
ANR	3821849	AdditiveExpression	p + 2		3821775	1		+			
ANR	3821850	Identifier	p		3821775	0					
ANR	3821851	PrimaryExpression	2		3821775	1					
ANR	3821852	PrimaryExpression	0xa9		3821775	1					
ANR	3821853	AndExpression	* ( p + 1 ) == 0x80 && * p == 0xe2		3821775	1		&&			
ANR	3821854	EqualityExpression	* ( p + 1 ) == 0x80		3821775	0		==			
ANR	3821855	UnaryOperationExpression	* ( p + 1 )		3821775	0					
ANR	3821856	UnaryOperator	*		3821775	0					
ANR	3821857	AdditiveExpression	p + 1		3821775	1		+			
ANR	3821858	Identifier	p		3821775	0					
ANR	3821859	PrimaryExpression	1		3821775	1					
ANR	3821860	PrimaryExpression	0x80		3821775	1					
ANR	3821861	EqualityExpression	* p == 0xe2		3821775	1		==			
ANR	3821862	UnaryOperationExpression	* p		3821775	0					
ANR	3821863	UnaryOperator	*		3821775	0					
ANR	3821864	Identifier	p		3821775	1					
ANR	3821865	PrimaryExpression	0xe2		3821775	1					
ANR	3821866	ReturnStatement	return 1 ;	84:3:3265:3273	3821775	1	True				
ANR	3821867	PrimaryExpression	1		3821775	0					
ANR	3821868	ReturnStatement	return 0 ;	90:2:3303:3311	3821775	1	True				
ANR	3821869	PrimaryExpression	0		3821775	0					
ANR	3821870	ReturnType	static int		3821775	1					
ANR	3821871	Identifier	is_mbc_newline		3821775	2					
ANR	3821872	ParameterList	"const UChar * p , const UChar * end"		3821775	3					
ANR	3821873	Parameter	const UChar * p	69:15:2853:2866	3821775	0	True				
ANR	3821874	ParameterType	const UChar *		3821775	0					
ANR	3821875	Identifier	p		3821775	1					
ANR	3821876	Parameter	const UChar * end	69:31:2869:2884	3821775	1	True				
ANR	3821877	ParameterType	const UChar *		3821775	0					
ANR	3821878	Identifier	end		3821775	1					
ANR	3821879	CFGEntryNode	ENTRY		3821775		True				
ANR	3821880	CFGExitNode	EXIT		3821775		True				
ANR	3821881	Symbol	p		3821775						
ANR	3821882	Symbol	* ( p + 2 )		3821775						
ANR	3821883	Symbol	end		3821775						
ANR	3821884	Symbol	* p		3821775						
ANR	3821885	Symbol	* ( p + 1 )		3821775						
ANR	3821886	DeclStmt									
ANR	3821887	Decl							int	int	c
ANR	3821888	Decl							int	int	len
ANR	3821889	DeclStmt									
ANR	3821890	Decl							OnigCodePoint	OnigCodePoint	n
ANR	3821891	Function	code_to_mbclen	120:0:3822:4334							
ANR	3821892	FunctionDef	code_to_mbclen (OnigCodePoint code)		3821891	0					
ANR	3821893	CompoundStatement		122:0:3868:4334	3821891	0					
ANR	3821894	IfStatement	if ( ( code & 0xffffff80 ) == 0 )		3821891	0					
ANR	3821895	Condition	( code & 0xffffff80 ) == 0	123:11:3881:3904	3821891	0	True				
ANR	3821896	EqualityExpression	( code & 0xffffff80 ) == 0		3821891	0		==			
ANR	3821897	BitAndExpression	code & 0xffffff80		3821891	0		&			
ANR	3821898	Identifier	code		3821891	0					
ANR	3821899	PrimaryExpression	0xffffff80		3821891	1					
ANR	3821900	PrimaryExpression	0		3821891	1					
ANR	3821901	ReturnStatement	return 1 ;	123:37:3907:3915	3821891	1	True				
ANR	3821902	PrimaryExpression	1		3821891	0					
ANR	3821903	ElseStatement	else		3821891	0					
ANR	3821904	IfStatement	if ( ( code & 0xfffff800 ) == 0 )		3821891	0					
ANR	3821905	Condition	( code & 0xfffff800 ) == 0	124:11:3928:3951	3821891	0	True				
ANR	3821906	EqualityExpression	( code & 0xfffff800 ) == 0		3821891	0		==			
ANR	3821907	BitAndExpression	code & 0xfffff800		3821891	0		&			
ANR	3821908	Identifier	code		3821891	0					
ANR	3821909	PrimaryExpression	0xfffff800		3821891	1					
ANR	3821910	PrimaryExpression	0		3821891	1					
ANR	3821911	ReturnStatement	return 2 ;	124:37:3954:3962	3821891	1	True				
ANR	3821912	PrimaryExpression	2		3821891	0					
ANR	3821913	ElseStatement	else		3821891	0					
ANR	3821914	IfStatement	if ( ( code & 0xffff0000 ) == 0 )		3821891	0					
ANR	3821915	Condition	( code & 0xffff0000 ) == 0	125:11:3975:3998	3821891	0	True				
ANR	3821916	EqualityExpression	( code & 0xffff0000 ) == 0		3821891	0		==			
ANR	3821917	BitAndExpression	code & 0xffff0000		3821891	0		&			
ANR	3821918	Identifier	code		3821891	0					
ANR	3821919	PrimaryExpression	0xffff0000		3821891	1					
ANR	3821920	PrimaryExpression	0		3821891	1					
ANR	3821921	ReturnStatement	return 3 ;	125:37:4001:4009	3821891	1	True				
ANR	3821922	PrimaryExpression	3		3821891	0					
ANR	3821923	ElseStatement	else		3821891	0					
ANR	3821924	IfStatement	if ( ( code & 0xffe00000 ) == 0 )		3821891	0					
ANR	3821925	Condition	( code & 0xffe00000 ) == 0	126:11:4022:4045	3821891	0	True				
ANR	3821926	EqualityExpression	( code & 0xffe00000 ) == 0		3821891	0		==			
ANR	3821927	BitAndExpression	code & 0xffe00000		3821891	0		&			
ANR	3821928	Identifier	code		3821891	0					
ANR	3821929	PrimaryExpression	0xffe00000		3821891	1					
ANR	3821930	PrimaryExpression	0		3821891	1					
ANR	3821931	ReturnStatement	return 4 ;	126:37:4048:4056	3821891	1	True				
ANR	3821932	PrimaryExpression	4		3821891	0					
ANR	3821933	ElseStatement	else		3821891	0					
ANR	3821934	IfStatement	if ( ( code & 0xfc000000 ) == 0 )		3821891	0					
ANR	3821935	Condition	( code & 0xfc000000 ) == 0	127:11:4069:4092	3821891	0	True				
ANR	3821936	EqualityExpression	( code & 0xfc000000 ) == 0		3821891	0		==			
ANR	3821937	BitAndExpression	code & 0xfc000000		3821891	0		&			
ANR	3821938	Identifier	code		3821891	0					
ANR	3821939	PrimaryExpression	0xfc000000		3821891	1					
ANR	3821940	PrimaryExpression	0		3821891	1					
ANR	3821941	ReturnStatement	return 5 ;	127:37:4095:4103	3821891	1	True				
ANR	3821942	PrimaryExpression	5		3821891	0					
ANR	3821943	ElseStatement	else		3821891	0					
ANR	3821944	IfStatement	if ( ( code & 0x80000000 ) == 0 )		3821891	0					
ANR	3821945	Condition	( code & 0x80000000 ) == 0	128:11:4116:4139	3821891	0	True				
ANR	3821946	EqualityExpression	( code & 0x80000000 ) == 0		3821891	0		==			
ANR	3821947	BitAndExpression	code & 0x80000000		3821891	0		&			
ANR	3821948	Identifier	code		3821891	0					
ANR	3821949	PrimaryExpression	0x80000000		3821891	1					
ANR	3821950	PrimaryExpression	0		3821891	1					
ANR	3821951	ReturnStatement	return 6 ;	128:37:4142:4150	3821891	1	True				
ANR	3821952	PrimaryExpression	6		3821891	0					
ANR	3821953	ElseStatement	else		3821891	0					
ANR	3821954	IfStatement	if ( code == INVALID_CODE_FE )		3821891	0					
ANR	3821955	Condition	code == INVALID_CODE_FE	130:11:4194:4216	3821891	0	True				
ANR	3821956	EqualityExpression	code == INVALID_CODE_FE		3821891	0		==			
ANR	3821957	Identifier	code		3821891	0					
ANR	3821958	Identifier	INVALID_CODE_FE		3821891	1					
ANR	3821959	ReturnStatement	return 1 ;	130:36:4219:4227	3821891	1	True				
ANR	3821960	PrimaryExpression	1		3821891	0					
ANR	3821961	ElseStatement	else		3821891	0					
ANR	3821962	IfStatement	if ( code == INVALID_CODE_FF )		3821891	0					
ANR	3821963	Condition	code == INVALID_CODE_FF	131:11:4240:4262	3821891	0	True				
ANR	3821964	EqualityExpression	code == INVALID_CODE_FF		3821891	0		==			
ANR	3821965	Identifier	code		3821891	0					
ANR	3821966	Identifier	INVALID_CODE_FF		3821891	1					
ANR	3821967	ReturnStatement	return 1 ;	131:36:4265:4273	3821891	1	True				
ANR	3821968	PrimaryExpression	1		3821891	0					
ANR	3821969	ElseStatement	else		3821891	0					
ANR	3821970	ReturnStatement	return ONIGERR_INVALID_CODE_POINT_VALUE ;	134:4:4293:4332	3821891	0	True				
ANR	3821971	Identifier	ONIGERR_INVALID_CODE_POINT_VALUE		3821891	0					
ANR	3821972	ReturnType	static int		3821891	1					
ANR	3821973	Identifier	code_to_mbclen		3821891	2					
ANR	3821974	ParameterList	OnigCodePoint code		3821891	3					
ANR	3821975	Parameter	OnigCodePoint code	121:15:3848:3865	3821891	0	True				
ANR	3821976	ParameterType	OnigCodePoint		3821891	0					
ANR	3821977	Identifier	code		3821891	1					
ANR	3821978	CFGEntryNode	ENTRY		3821891		True				
ANR	3821979	CFGExitNode	EXIT		3821891		True				
ANR	3821980	Symbol	code		3821891						
ANR	3821981	Symbol	ONIGERR_INVALID_CODE_POINT_VALUE		3821891						
ANR	3821982	Symbol	INVALID_CODE_FF		3821891						
ANR	3821983	Symbol	INVALID_CODE_FE		3821891						
ANR	3821984	Function	code_to_mbc	137:0:4337:5803							
ANR	3821985	FunctionDef	"code_to_mbc (OnigCodePoint code , UChar * buf)"		3821984	0					
ANR	3821986	CompoundStatement		139:0:4392:5803	3821984	0					
ANR	3821987	Statement	define	140:1:4395:4400	3821984	0	True				
ANR	3821988	Statement	UTF8_TRAILS	140:8:4402:4412	3821984	1	True				
ANR	3821989	Statement	(	140:19:4413:4413	3821984	2	True				
ANR	3821990	Statement	code	140:20:4414:4417	3821984	3	True				
ANR	3821991	Statement	","	140:24:4418:4418	3821984	4	True				
ANR	3821992	Statement	shift	140:26:4420:4424	3821984	5	True				
ANR	3821993	Statement	)	140:31:4425:4425	3821984	6	True				
ANR	3821994	Statement	(	140:33:4427:4427	3821984	7	True				
ANR	3821995	Statement	UChar	140:34:4428:4432	3821984	8	True				
ANR	3821996	Statement	)	140:40:4434:4434	3821984	9	True				
ANR	3821997	Statement	(	140:41:4435:4435	3821984	10	True				
ANR	3821998	Statement	(	140:42:4436:4436	3821984	11	True				
ANR	3821999	Statement	(	140:43:4437:4437	3821984	12	True				
ANR	3822000	Statement	(	140:44:4438:4438	3821984	13	True				
ANR	3822001	Statement	code	140:45:4439:4442	3821984	14	True				
ANR	3822002	Statement	)	140:49:4443:4443	3821984	15	True				
ANR	3822003	Statement	>>	140:51:4445:4446	3821984	16	True				
ANR	3822004	Statement	(	140:54:4448:4448	3821984	17	True				
ANR	3822005	Statement	shift	140:55:4449:4453	3821984	18	True				
ANR	3822006	Statement	)	140:60:4454:4454	3821984	19	True				
ANR	3822007	Statement	)	140:61:4455:4455	3821984	20	True				
ANR	3822008	Statement	&	140:63:4457:4457	3821984	21	True				
ANR	3822009	Statement	0x3f	140:65:4459:4462	3821984	22	True				
ANR	3822010	Statement	)	140:69:4463:4463	3821984	23	True				
ANR	3822011	Statement	|	140:71:4465:4465	3821984	24	True				
ANR	3822012	Statement	0x80	140:73:4467:4470	3821984	25	True				
ANR	3822013	Statement	)	140:77:4471:4471	3821984	26	True				
ANR	3822014	Statement	define	141:1:4474:4479	3821984	27	True				
ANR	3822015	Statement	UTF8_TRAIL0	141:8:4481:4491	3821984	28	True				
ANR	3822016	Statement	(	141:19:4492:4492	3821984	29	True				
ANR	3822017	Statement	code	141:20:4493:4496	3821984	30	True				
ANR	3822018	Statement	)	141:24:4497:4497	3821984	31	True				
ANR	3822019	Statement	(	141:33:4506:4506	3821984	32	True				
ANR	3822020	Statement	UChar	141:34:4507:4511	3821984	33	True				
ANR	3822021	Statement	)	141:40:4513:4513	3821984	34	True				
ANR	3822022	Statement	(	141:41:4514:4514	3821984	35	True				
ANR	3822023	Statement	(	141:42:4515:4515	3821984	36	True				
ANR	3822024	Statement	(	141:43:4516:4516	3821984	37	True				
ANR	3822025	Statement	code	141:44:4517:4520	3821984	38	True				
ANR	3822026	Statement	)	141:48:4521:4521	3821984	39	True				
ANR	3822027	Statement	&	141:50:4523:4523	3821984	40	True				
ANR	3822028	Statement	0x3f	141:52:4525:4528	3821984	41	True				
ANR	3822029	Statement	)	141:56:4529:4529	3821984	42	True				
ANR	3822030	Statement	|	141:58:4531:4531	3821984	43	True				
ANR	3822031	Statement	0x80	141:60:4533:4536	3821984	44	True				
ANR	3822032	Statement	)	141:64:4537:4537	3821984	45	True				
ANR	3822033	IfStatement	if ( ( code & 0xffffff80 ) == 0 )		3821984	46					
ANR	3822034	Condition	( code & 0xffffff80 ) == 0	143:6:4546:4569	3821984	0	True				
ANR	3822035	EqualityExpression	( code & 0xffffff80 ) == 0		3821984	0		==			
ANR	3822036	BitAndExpression	code & 0xffffff80		3821984	0		&			
ANR	3822037	Identifier	code		3821984	0					
ANR	3822038	PrimaryExpression	0xffffff80		3821984	1					
ANR	3822039	PrimaryExpression	0		3821984	1					
ANR	3822040	CompoundStatement		5:32:179:179	3821984	1					
ANR	3822041	ExpressionStatement	* buf = ( UChar ) code	144:4:4578:4597	3821984	0	True				
ANR	3822042	AssignmentExpression	* buf = ( UChar ) code		3821984	0		=			
ANR	3822043	UnaryOperationExpression	* buf		3821984	0					
ANR	3822044	UnaryOperator	*		3821984	0					
ANR	3822045	Identifier	buf		3821984	1					
ANR	3822046	CastExpression	( UChar ) code		3821984	1					
ANR	3822047	CastTarget	UChar		3821984	0					
ANR	3822048	Identifier	code		3821984	1					
ANR	3822049	ReturnStatement	return 1 ;	145:4:4603:4611	3821984	1	True				
ANR	3822050	PrimaryExpression	1		3821984	0					
ANR	3822051	ElseStatement	else		3821984	0					
ANR	3822052	CompoundStatement		10:4:237:251	3821984	0					
ANR	3822053	IdentifierDeclStatement	UChar * p = buf ;	148:4:4630:4644	3821984	0	True				
ANR	3822054	IdentifierDecl	* p = buf		3821984	0					
ANR	3822055	IdentifierDeclType	UChar *		3821984	0					
ANR	3822056	Identifier	p		3821984	1					
ANR	3822057	AssignmentExpression	* p = buf		3821984	2		=			
ANR	3822058	Identifier	buf		3821984	0					
ANR	3822059	Identifier	buf		3821984	1					
ANR	3822060	IfStatement	if ( ( code & 0xfffff800 ) == 0 )		3821984	1					
ANR	3822061	Condition	( code & 0xfffff800 ) == 0	150:8:4655:4678	3821984	0	True				
ANR	3822062	EqualityExpression	( code & 0xfffff800 ) == 0		3821984	0		==			
ANR	3822063	BitAndExpression	code & 0xfffff800		3821984	0		&			
ANR	3822064	Identifier	code		3821984	0					
ANR	3822065	PrimaryExpression	0xfffff800		3821984	1					
ANR	3822066	PrimaryExpression	0		3821984	1					
ANR	3822067	CompoundStatement		12:34:288:288	3821984	1					
ANR	3822068	ExpressionStatement	* p ++ = ( UChar ) ( ( ( code >> 6 ) & 0x1f ) | 0xc0 )	151:6:4689:4730	3821984	0	True				
ANR	3822069	AssignmentExpression	* p ++ = ( UChar ) ( ( ( code >> 6 ) & 0x1f ) | 0xc0 )		3821984	0		=			
ANR	3822070	UnaryOperationExpression	* p ++		3821984	0					
ANR	3822071	UnaryOperator	*		3821984	0					
ANR	3822072	PostIncDecOperationExpression	p ++		3821984	1					
ANR	3822073	Identifier	p		3821984	0					
ANR	3822074	IncDec	++		3821984	1					
ANR	3822075	CastExpression	( UChar ) ( ( ( code >> 6 ) & 0x1f ) | 0xc0 )		3821984	1					
ANR	3822076	CastTarget	UChar		3821984	0					
ANR	3822077	InclusiveOrExpression	( ( code >> 6 ) & 0x1f ) | 0xc0		3821984	1		|			
ANR	3822078	BitAndExpression	( code >> 6 ) & 0x1f		3821984	0		&			
ANR	3822079	ShiftExpression	code >> 6		3821984	0		>>			
ANR	3822080	Identifier	code		3821984	0					
ANR	3822081	PrimaryExpression	6		3821984	1					
ANR	3822082	PrimaryExpression	0x1f		3821984	1					
ANR	3822083	PrimaryExpression	0xc0		3821984	1					
ANR	3822084	ElseStatement	else		3821984	0					
ANR	3822085	IfStatement	if ( ( code & 0xffff0000 ) == 0 )		3821984	0					
ANR	3822086	Condition	( code & 0xffff0000 ) == 0	153:13:4751:4774	3821984	0	True				
ANR	3822087	EqualityExpression	( code & 0xffff0000 ) == 0		3821984	0		==			
ANR	3822088	BitAndExpression	code & 0xffff0000		3821984	0		&			
ANR	3822089	Identifier	code		3821984	0					
ANR	3822090	PrimaryExpression	0xffff0000		3821984	1					
ANR	3822091	PrimaryExpression	0		3821984	1					
ANR	3822092	CompoundStatement		15:39:384:384	3821984	1					
ANR	3822093	ExpressionStatement	* p ++ = ( UChar ) ( ( ( code >> 12 ) & 0x0f ) | 0xe0 )	154:6:4785:4828	3821984	0	True				
ANR	3822094	AssignmentExpression	* p ++ = ( UChar ) ( ( ( code >> 12 ) & 0x0f ) | 0xe0 )		3821984	0		=			
ANR	3822095	UnaryOperationExpression	* p ++		3821984	0					
ANR	3822096	UnaryOperator	*		3821984	0					
ANR	3822097	PostIncDecOperationExpression	p ++		3821984	1					
ANR	3822098	Identifier	p		3821984	0					
ANR	3822099	IncDec	++		3821984	1					
ANR	3822100	CastExpression	( UChar ) ( ( ( code >> 12 ) & 0x0f ) | 0xe0 )		3821984	1					
ANR	3822101	CastTarget	UChar		3821984	0					
ANR	3822102	InclusiveOrExpression	( ( code >> 12 ) & 0x0f ) | 0xe0		3821984	1		|			
ANR	3822103	BitAndExpression	( code >> 12 ) & 0x0f		3821984	0		&			
ANR	3822104	ShiftExpression	code >> 12		3821984	0		>>			
ANR	3822105	Identifier	code		3821984	0					
ANR	3822106	PrimaryExpression	12		3821984	1					
ANR	3822107	PrimaryExpression	0x0f		3821984	1					
ANR	3822108	PrimaryExpression	0xe0		3821984	1					
ANR	3822109	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 6 )"	155:6:4836:4863	3821984	1	True				
ANR	3822110	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 6 )"		3821984	0		=			
ANR	3822111	UnaryOperationExpression	* p ++		3821984	0					
ANR	3822112	UnaryOperator	*		3821984	0					
ANR	3822113	PostIncDecOperationExpression	p ++		3821984	1					
ANR	3822114	Identifier	p		3821984	0					
ANR	3822115	IncDec	++		3821984	1					
ANR	3822116	CallExpression	"UTF8_TRAILS ( code , 6 )"		3821984	1					
ANR	3822117	Callee	UTF8_TRAILS		3821984	0					
ANR	3822118	Identifier	UTF8_TRAILS		3821984	0					
ANR	3822119	ArgumentList	code		3821984	1					
ANR	3822120	Argument	code		3821984	0					
ANR	3822121	Identifier	code		3821984	0					
ANR	3822122	Argument	6		3821984	1					
ANR	3822123	PrimaryExpression	6		3821984	0					
ANR	3822124	ElseStatement	else		3821984	0					
ANR	3822125	IfStatement	if ( ( code & 0xffe00000 ) == 0 )		3821984	0					
ANR	3822126	Condition	( code & 0xffe00000 ) == 0	157:13:4884:4907	3821984	0	True				
ANR	3822127	EqualityExpression	( code & 0xffe00000 ) == 0		3821984	0		==			
ANR	3822128	BitAndExpression	code & 0xffe00000		3821984	0		&			
ANR	3822129	Identifier	code		3821984	0					
ANR	3822130	PrimaryExpression	0xffe00000		3821984	1					
ANR	3822131	PrimaryExpression	0		3821984	1					
ANR	3822132	CompoundStatement		19:39:517:517	3821984	1					
ANR	3822133	ExpressionStatement	* p ++ = ( UChar ) ( ( ( code >> 18 ) & 0x07 ) | 0xf0 )	158:6:4918:4961	3821984	0	True				
ANR	3822134	AssignmentExpression	* p ++ = ( UChar ) ( ( ( code >> 18 ) & 0x07 ) | 0xf0 )		3821984	0		=			
ANR	3822135	UnaryOperationExpression	* p ++		3821984	0					
ANR	3822136	UnaryOperator	*		3821984	0					
ANR	3822137	PostIncDecOperationExpression	p ++		3821984	1					
ANR	3822138	Identifier	p		3821984	0					
ANR	3822139	IncDec	++		3821984	1					
ANR	3822140	CastExpression	( UChar ) ( ( ( code >> 18 ) & 0x07 ) | 0xf0 )		3821984	1					
ANR	3822141	CastTarget	UChar		3821984	0					
ANR	3822142	InclusiveOrExpression	( ( code >> 18 ) & 0x07 ) | 0xf0		3821984	1		|			
ANR	3822143	BitAndExpression	( code >> 18 ) & 0x07		3821984	0		&			
ANR	3822144	ShiftExpression	code >> 18		3821984	0		>>			
ANR	3822145	Identifier	code		3821984	0					
ANR	3822146	PrimaryExpression	18		3821984	1					
ANR	3822147	PrimaryExpression	0x07		3821984	1					
ANR	3822148	PrimaryExpression	0xf0		3821984	1					
ANR	3822149	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 12 )"	159:6:4969:4997	3821984	1	True				
ANR	3822150	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 12 )"		3821984	0		=			
ANR	3822151	UnaryOperationExpression	* p ++		3821984	0					
ANR	3822152	UnaryOperator	*		3821984	0					
ANR	3822153	PostIncDecOperationExpression	p ++		3821984	1					
ANR	3822154	Identifier	p		3821984	0					
ANR	3822155	IncDec	++		3821984	1					
ANR	3822156	CallExpression	"UTF8_TRAILS ( code , 12 )"		3821984	1					
ANR	3822157	Callee	UTF8_TRAILS		3821984	0					
ANR	3822158	Identifier	UTF8_TRAILS		3821984	0					
ANR	3822159	ArgumentList	code		3821984	1					
ANR	3822160	Argument	code		3821984	0					
ANR	3822161	Identifier	code		3821984	0					
ANR	3822162	Argument	12		3821984	1					
ANR	3822163	PrimaryExpression	12		3821984	0					
ANR	3822164	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 6 )"	160:6:5005:5033	3821984	2	True				
ANR	3822165	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 6 )"		3821984	0		=			
ANR	3822166	UnaryOperationExpression	* p ++		3821984	0					
ANR	3822167	UnaryOperator	*		3821984	0					
ANR	3822168	PostIncDecOperationExpression	p ++		3821984	1					
ANR	3822169	Identifier	p		3821984	0					
ANR	3822170	IncDec	++		3821984	1					
ANR	3822171	CallExpression	"UTF8_TRAILS ( code , 6 )"		3821984	1					
ANR	3822172	Callee	UTF8_TRAILS		3821984	0					
ANR	3822173	Identifier	UTF8_TRAILS		3821984	0					
ANR	3822174	ArgumentList	code		3821984	1					
ANR	3822175	Argument	code		3821984	0					
ANR	3822176	Identifier	code		3821984	0					
ANR	3822177	Argument	6		3821984	1					
ANR	3822178	PrimaryExpression	6		3821984	0					
ANR	3822179	ElseStatement	else		3821984	0					
ANR	3822180	IfStatement	if ( ( code & 0xfc000000 ) == 0 )		3821984	0					
ANR	3822181	Condition	( code & 0xfc000000 ) == 0	162:13:5054:5077	3821984	0	True				
ANR	3822182	EqualityExpression	( code & 0xfc000000 ) == 0		3821984	0		==			
ANR	3822183	BitAndExpression	code & 0xfc000000		3821984	0		&			
ANR	3822184	Identifier	code		3821984	0					
ANR	3822185	PrimaryExpression	0xfc000000		3821984	1					
ANR	3822186	PrimaryExpression	0		3821984	1					
ANR	3822187	CompoundStatement		24:39:687:687	3821984	1					
ANR	3822188	ExpressionStatement	* p ++ = ( UChar ) ( ( ( code >> 24 ) & 0x03 ) | 0xf8 )	163:6:5088:5131	3821984	0	True				
ANR	3822189	AssignmentExpression	* p ++ = ( UChar ) ( ( ( code >> 24 ) & 0x03 ) | 0xf8 )		3821984	0		=			
ANR	3822190	UnaryOperationExpression	* p ++		3821984	0					
ANR	3822191	UnaryOperator	*		3821984	0					
ANR	3822192	PostIncDecOperationExpression	p ++		3821984	1					
ANR	3822193	Identifier	p		3821984	0					
ANR	3822194	IncDec	++		3821984	1					
ANR	3822195	CastExpression	( UChar ) ( ( ( code >> 24 ) & 0x03 ) | 0xf8 )		3821984	1					
ANR	3822196	CastTarget	UChar		3821984	0					
ANR	3822197	InclusiveOrExpression	( ( code >> 24 ) & 0x03 ) | 0xf8		3821984	1		|			
ANR	3822198	BitAndExpression	( code >> 24 ) & 0x03		3821984	0		&			
ANR	3822199	ShiftExpression	code >> 24		3821984	0		>>			
ANR	3822200	Identifier	code		3821984	0					
ANR	3822201	PrimaryExpression	24		3821984	1					
ANR	3822202	PrimaryExpression	0x03		3821984	1					
ANR	3822203	PrimaryExpression	0xf8		3821984	1					
ANR	3822204	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 18 )"	164:6:5139:5167	3821984	1	True				
ANR	3822205	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 18 )"		3821984	0		=			
ANR	3822206	UnaryOperationExpression	* p ++		3821984	0					
ANR	3822207	UnaryOperator	*		3821984	0					
ANR	3822208	PostIncDecOperationExpression	p ++		3821984	1					
ANR	3822209	Identifier	p		3821984	0					
ANR	3822210	IncDec	++		3821984	1					
ANR	3822211	CallExpression	"UTF8_TRAILS ( code , 18 )"		3821984	1					
ANR	3822212	Callee	UTF8_TRAILS		3821984	0					
ANR	3822213	Identifier	UTF8_TRAILS		3821984	0					
ANR	3822214	ArgumentList	code		3821984	1					
ANR	3822215	Argument	code		3821984	0					
ANR	3822216	Identifier	code		3821984	0					
ANR	3822217	Argument	18		3821984	1					
ANR	3822218	PrimaryExpression	18		3821984	0					
ANR	3822219	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 12 )"	165:6:5175:5203	3821984	2	True				
ANR	3822220	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 12 )"		3821984	0		=			
ANR	3822221	UnaryOperationExpression	* p ++		3821984	0					
ANR	3822222	UnaryOperator	*		3821984	0					
ANR	3822223	PostIncDecOperationExpression	p ++		3821984	1					
ANR	3822224	Identifier	p		3821984	0					
ANR	3822225	IncDec	++		3821984	1					
ANR	3822226	CallExpression	"UTF8_TRAILS ( code , 12 )"		3821984	1					
ANR	3822227	Callee	UTF8_TRAILS		3821984	0					
ANR	3822228	Identifier	UTF8_TRAILS		3821984	0					
ANR	3822229	ArgumentList	code		3821984	1					
ANR	3822230	Argument	code		3821984	0					
ANR	3822231	Identifier	code		3821984	0					
ANR	3822232	Argument	12		3821984	1					
ANR	3822233	PrimaryExpression	12		3821984	0					
ANR	3822234	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 6 )"	166:6:5211:5239	3821984	3	True				
ANR	3822235	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 6 )"		3821984	0		=			
ANR	3822236	UnaryOperationExpression	* p ++		3821984	0					
ANR	3822237	UnaryOperator	*		3821984	0					
ANR	3822238	PostIncDecOperationExpression	p ++		3821984	1					
ANR	3822239	Identifier	p		3821984	0					
ANR	3822240	IncDec	++		3821984	1					
ANR	3822241	CallExpression	"UTF8_TRAILS ( code , 6 )"		3821984	1					
ANR	3822242	Callee	UTF8_TRAILS		3821984	0					
ANR	3822243	Identifier	UTF8_TRAILS		3821984	0					
ANR	3822244	ArgumentList	code		3821984	1					
ANR	3822245	Argument	code		3821984	0					
ANR	3822246	Identifier	code		3821984	0					
ANR	3822247	Argument	6		3821984	1					
ANR	3822248	PrimaryExpression	6		3821984	0					
ANR	3822249	ElseStatement	else		3821984	0					
ANR	3822250	IfStatement	if ( ( code & 0x80000000 ) == 0 )		3821984	0					
ANR	3822251	Condition	( code & 0x80000000 ) == 0	168:13:5260:5283	3821984	0	True				
ANR	3822252	EqualityExpression	( code & 0x80000000 ) == 0		3821984	0		==			
ANR	3822253	BitAndExpression	code & 0x80000000		3821984	0		&			
ANR	3822254	Identifier	code		3821984	0					
ANR	3822255	PrimaryExpression	0x80000000		3821984	1					
ANR	3822256	PrimaryExpression	0		3821984	1					
ANR	3822257	CompoundStatement		30:39:893:893	3821984	1					
ANR	3822258	ExpressionStatement	* p ++ = ( UChar ) ( ( ( code >> 30 ) & 0x01 ) | 0xfc )	169:6:5294:5337	3821984	0	True				
ANR	3822259	AssignmentExpression	* p ++ = ( UChar ) ( ( ( code >> 30 ) & 0x01 ) | 0xfc )		3821984	0		=			
ANR	3822260	UnaryOperationExpression	* p ++		3821984	0					
ANR	3822261	UnaryOperator	*		3821984	0					
ANR	3822262	PostIncDecOperationExpression	p ++		3821984	1					
ANR	3822263	Identifier	p		3821984	0					
ANR	3822264	IncDec	++		3821984	1					
ANR	3822265	CastExpression	( UChar ) ( ( ( code >> 30 ) & 0x01 ) | 0xfc )		3821984	1					
ANR	3822266	CastTarget	UChar		3821984	0					
ANR	3822267	InclusiveOrExpression	( ( code >> 30 ) & 0x01 ) | 0xfc		3821984	1		|			
ANR	3822268	BitAndExpression	( code >> 30 ) & 0x01		3821984	0		&			
ANR	3822269	ShiftExpression	code >> 30		3821984	0		>>			
ANR	3822270	Identifier	code		3821984	0					
ANR	3822271	PrimaryExpression	30		3821984	1					
ANR	3822272	PrimaryExpression	0x01		3821984	1					
ANR	3822273	PrimaryExpression	0xfc		3821984	1					
ANR	3822274	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 24 )"	170:6:5345:5373	3821984	1	True				
ANR	3822275	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 24 )"		3821984	0		=			
ANR	3822276	UnaryOperationExpression	* p ++		3821984	0					
ANR	3822277	UnaryOperator	*		3821984	0					
ANR	3822278	PostIncDecOperationExpression	p ++		3821984	1					
ANR	3822279	Identifier	p		3821984	0					
ANR	3822280	IncDec	++		3821984	1					
ANR	3822281	CallExpression	"UTF8_TRAILS ( code , 24 )"		3821984	1					
ANR	3822282	Callee	UTF8_TRAILS		3821984	0					
ANR	3822283	Identifier	UTF8_TRAILS		3821984	0					
ANR	3822284	ArgumentList	code		3821984	1					
ANR	3822285	Argument	code		3821984	0					
ANR	3822286	Identifier	code		3821984	0					
ANR	3822287	Argument	24		3821984	1					
ANR	3822288	PrimaryExpression	24		3821984	0					
ANR	3822289	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 18 )"	171:6:5381:5409	3821984	2	True				
ANR	3822290	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 18 )"		3821984	0		=			
ANR	3822291	UnaryOperationExpression	* p ++		3821984	0					
ANR	3822292	UnaryOperator	*		3821984	0					
ANR	3822293	PostIncDecOperationExpression	p ++		3821984	1					
ANR	3822294	Identifier	p		3821984	0					
ANR	3822295	IncDec	++		3821984	1					
ANR	3822296	CallExpression	"UTF8_TRAILS ( code , 18 )"		3821984	1					
ANR	3822297	Callee	UTF8_TRAILS		3821984	0					
ANR	3822298	Identifier	UTF8_TRAILS		3821984	0					
ANR	3822299	ArgumentList	code		3821984	1					
ANR	3822300	Argument	code		3821984	0					
ANR	3822301	Identifier	code		3821984	0					
ANR	3822302	Argument	18		3821984	1					
ANR	3822303	PrimaryExpression	18		3821984	0					
ANR	3822304	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 12 )"	172:6:5417:5445	3821984	3	True				
ANR	3822305	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 12 )"		3821984	0		=			
ANR	3822306	UnaryOperationExpression	* p ++		3821984	0					
ANR	3822307	UnaryOperator	*		3821984	0					
ANR	3822308	PostIncDecOperationExpression	p ++		3821984	1					
ANR	3822309	Identifier	p		3821984	0					
ANR	3822310	IncDec	++		3821984	1					
ANR	3822311	CallExpression	"UTF8_TRAILS ( code , 12 )"		3821984	1					
ANR	3822312	Callee	UTF8_TRAILS		3821984	0					
ANR	3822313	Identifier	UTF8_TRAILS		3821984	0					
ANR	3822314	ArgumentList	code		3821984	1					
ANR	3822315	Argument	code		3821984	0					
ANR	3822316	Identifier	code		3821984	0					
ANR	3822317	Argument	12		3821984	1					
ANR	3822318	PrimaryExpression	12		3821984	0					
ANR	3822319	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 6 )"	173:6:5453:5481	3821984	4	True				
ANR	3822320	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 6 )"		3821984	0		=			
ANR	3822321	UnaryOperationExpression	* p ++		3821984	0					
ANR	3822322	UnaryOperator	*		3821984	0					
ANR	3822323	PostIncDecOperationExpression	p ++		3821984	1					
ANR	3822324	Identifier	p		3821984	0					
ANR	3822325	IncDec	++		3821984	1					
ANR	3822326	CallExpression	"UTF8_TRAILS ( code , 6 )"		3821984	1					
ANR	3822327	Callee	UTF8_TRAILS		3821984	0					
ANR	3822328	Identifier	UTF8_TRAILS		3821984	0					
ANR	3822329	ArgumentList	code		3821984	1					
ANR	3822330	Argument	code		3821984	0					
ANR	3822331	Identifier	code		3821984	0					
ANR	3822332	Argument	6		3821984	1					
ANR	3822333	PrimaryExpression	6		3821984	0					
ANR	3822334	ElseStatement	else		3821984	0					
ANR	3822335	IfStatement	if ( code == INVALID_CODE_FE )		3821984	0					
ANR	3822336	Condition	code == INVALID_CODE_FE	176:13:5533:5555	3821984	0	True				
ANR	3822337	EqualityExpression	code == INVALID_CODE_FE		3821984	0		==			
ANR	3822338	Identifier	code		3821984	0					
ANR	3822339	Identifier	INVALID_CODE_FE		3821984	1					
ANR	3822340	CompoundStatement		38:38:1165:1165	3821984	1					
ANR	3822341	ExpressionStatement	* p = 0xfe	177:6:5566:5575	3821984	0	True				
ANR	3822342	AssignmentExpression	* p = 0xfe		3821984	0		=			
ANR	3822343	UnaryOperationExpression	* p		3821984	0					
ANR	3822344	UnaryOperator	*		3821984	0					
ANR	3822345	Identifier	p		3821984	1					
ANR	3822346	PrimaryExpression	0xfe		3821984	1					
ANR	3822347	ReturnStatement	return 1 ;	178:6:5583:5591	3821984	1	True				
ANR	3822348	PrimaryExpression	1		3821984	0					
ANR	3822349	ElseStatement	else		3821984	0					
ANR	3822350	IfStatement	if ( code == INVALID_CODE_FF )		3821984	0					
ANR	3822351	Condition	code == INVALID_CODE_FF	180:13:5612:5634	3821984	0	True				
ANR	3822352	EqualityExpression	code == INVALID_CODE_FF		3821984	0		==			
ANR	3822353	Identifier	code		3821984	0					
ANR	3822354	Identifier	INVALID_CODE_FF		3821984	1					
ANR	3822355	CompoundStatement		42:38:1244:1244	3821984	1					
ANR	3822356	ExpressionStatement	* p = 0xff	181:6:5645:5654	3821984	0	True				
ANR	3822357	AssignmentExpression	* p = 0xff		3821984	0		=			
ANR	3822358	UnaryOperationExpression	* p		3821984	0					
ANR	3822359	UnaryOperator	*		3821984	0					
ANR	3822360	Identifier	p		3821984	1					
ANR	3822361	PrimaryExpression	0xff		3821984	1					
ANR	3822362	ReturnStatement	return 1 ;	182:6:5662:5670	3821984	1	True				
ANR	3822363	PrimaryExpression	1		3821984	0					
ANR	3822364	ElseStatement	else		3821984	0					
ANR	3822365	CompoundStatement		47:9:1301:1301	3821984	0					
ANR	3822366	ReturnStatement	return ONIGERR_TOO_BIG_WIDE_CHAR_VALUE ;	186:6:5702:5740	3821984	0	True				
ANR	3822367	Identifier	ONIGERR_TOO_BIG_WIDE_CHAR_VALUE		3821984	0					
ANR	3822368	ExpressionStatement	* p ++ = UTF8_TRAIL0 ( code )	189:4:5753:5777	3821984	2	True				
ANR	3822369	AssignmentExpression	* p ++ = UTF8_TRAIL0 ( code )		3821984	0		=			
ANR	3822370	UnaryOperationExpression	* p ++		3821984	0					
ANR	3822371	UnaryOperator	*		3821984	0					
ANR	3822372	PostIncDecOperationExpression	p ++		3821984	1					
ANR	3822373	Identifier	p		3821984	0					
ANR	3822374	IncDec	++		3821984	1					
ANR	3822375	CallExpression	UTF8_TRAIL0 ( code )		3821984	1					
ANR	3822376	Callee	UTF8_TRAIL0		3821984	0					
ANR	3822377	Identifier	UTF8_TRAIL0		3821984	0					
ANR	3822378	ArgumentList	code		3821984	1					
ANR	3822379	Argument	code		3821984	0					
ANR	3822380	Identifier	code		3821984	0					
ANR	3822381	ReturnStatement	return p - buf ;	190:4:5783:5797	3821984	3	True				
ANR	3822382	AdditiveExpression	p - buf		3821984	0		-			
ANR	3822383	Identifier	p		3821984	0					
ANR	3822384	Identifier	buf		3821984	1					
ANR	3822385	ReturnType	static int		3821984	1					
ANR	3822386	Identifier	code_to_mbc		3821984	2					
ANR	3822387	ParameterList	"OnigCodePoint code , UChar * buf"		3821984	3					
ANR	3822388	Parameter	OnigCodePoint code	138:12:4360:4377	3821984	0	True				
ANR	3822389	ParameterType	OnigCodePoint		3821984	0					
ANR	3822390	Identifier	code		3821984	1					
ANR	3822391	Parameter	UChar * buf	138:32:4380:4389	3821984	1	True				
ANR	3822392	ParameterType	UChar *		3821984	0					
ANR	3822393	Identifier	buf		3821984	1					
ANR	3822394	CFGEntryNode	ENTRY		3821984		True				
ANR	3822395	CFGExitNode	EXIT		3821984		True				
ANR	3822396	Symbol	p		3821984						
ANR	3822397	Symbol	UTF8_TRAIL0		3821984						
ANR	3822398	Symbol	buf		3821984						
ANR	3822399	Symbol	* buf		3821984						
ANR	3822400	Symbol	UTF8_TRAILS		3821984						
ANR	3822401	Symbol	code		3821984						
ANR	3822402	Symbol	* p ++		3821984						
ANR	3822403	Symbol	* p		3821984						
ANR	3822404	Symbol	INVALID_CODE_FF		3821984						
ANR	3822405	Symbol	ONIGERR_TOO_BIG_WIDE_CHAR_VALUE		3821984						
ANR	3822406	Symbol	INVALID_CODE_FE		3821984						
ANR	3822407	Function	mbc_case_fold	194:0:5806:6406							
ANR	3822408	FunctionDef	"mbc_case_fold (OnigCaseFoldType flag , const UChar * * pp , const UChar * end , UChar * fold)"		3822407	0					
ANR	3822409	CompoundStatement		197:0:5910:6406	3822407	0					
ANR	3822410	IdentifierDeclStatement	const UChar * p = * pp ;	198:2:5914:5934	3822407	0	True				
ANR	3822411	IdentifierDecl	* p = * pp		3822407	0					
ANR	3822412	IdentifierDeclType	const UChar *		3822407	0					
ANR	3822413	Identifier	p		3822407	1					
ANR	3822414	AssignmentExpression	* p = * pp		3822407	2		=			
ANR	3822415	Identifier	p		3822407	0					
ANR	3822416	UnaryOperationExpression	* pp		3822407	1					
ANR	3822417	UnaryOperator	*		3822407	0					
ANR	3822418	Identifier	pp		3822407	1					
ANR	3822419	IfStatement	if ( ONIGENC_IS_MBC_ASCII ( p ) )		3822407	1					
ANR	3822420	Condition	ONIGENC_IS_MBC_ASCII ( p )	200:6:5943:5965	3822407	0	True				
ANR	3822421	CallExpression	ONIGENC_IS_MBC_ASCII ( p )		3822407	0					
ANR	3822422	Callee	ONIGENC_IS_MBC_ASCII		3822407	0					
ANR	3822423	Identifier	ONIGENC_IS_MBC_ASCII		3822407	0					
ANR	3822424	ArgumentList	p		3822407	1					
ANR	3822425	Argument	p		3822407	0					
ANR	3822426	Identifier	p		3822407	0					
ANR	3822427	CompoundStatement		4:31:57:57	3822407	1					
ANR	3822428	IfStatement	if ( ( flag & ONIGENC_CASE_FOLD_TURKISH_AZERI ) != 0 )		3822407	0					
ANR	3822429	Condition	( flag & ONIGENC_CASE_FOLD_TURKISH_AZERI ) != 0	202:8:6021:6065	3822407	0	True				
ANR	3822430	EqualityExpression	( flag & ONIGENC_CASE_FOLD_TURKISH_AZERI ) != 0		3822407	0		!=			
ANR	3822431	BitAndExpression	flag & ONIGENC_CASE_FOLD_TURKISH_AZERI		3822407	0		&			
ANR	3822432	Identifier	flag		3822407	0					
ANR	3822433	Identifier	ONIGENC_CASE_FOLD_TURKISH_AZERI		3822407	1					
ANR	3822434	PrimaryExpression	0		3822407	1					
ANR	3822435	CompoundStatement		6:55:157:157	3822407	1					
ANR	3822436	IfStatement	if ( * p == 0x49 )		3822407	0					
ANR	3822437	Condition	* p == 0x49	203:10:6080:6089	3822407	0	True				
ANR	3822438	EqualityExpression	* p == 0x49		3822407	0		==			
ANR	3822439	UnaryOperationExpression	* p		3822407	0					
ANR	3822440	UnaryOperator	*		3822407	0					
ANR	3822441	Identifier	p		3822407	1					
ANR	3822442	PrimaryExpression	0x49		3822407	1					
ANR	3822443	CompoundStatement		7:22:181:181	3822407	1					
ANR	3822444	ExpressionStatement	* fold ++ = 0xc4	204:1:6095:6109	3822407	0	True				
ANR	3822445	AssignmentExpression	* fold ++ = 0xc4		3822407	0		=			
ANR	3822446	UnaryOperationExpression	* fold ++		3822407	0					
ANR	3822447	UnaryOperator	*		3822407	0					
ANR	3822448	PostIncDecOperationExpression	fold ++		3822407	1					
ANR	3822449	Identifier	fold		3822407	0					
ANR	3822450	IncDec	++		3822407	1					
ANR	3822451	PrimaryExpression	0xc4		3822407	1					
ANR	3822452	ExpressionStatement	* fold = 0xb1	205:1:6112:6126	3822407	1	True				
ANR	3822453	AssignmentExpression	* fold = 0xb1		3822407	0		=			
ANR	3822454	UnaryOperationExpression	* fold		3822407	0					
ANR	3822455	UnaryOperator	*		3822407	0					
ANR	3822456	Identifier	fold		3822407	1					
ANR	3822457	PrimaryExpression	0xb1		3822407	1					
ANR	3822458	ExpressionStatement	( * pp ) ++	206:1:6129:6136	3822407	2	True				
ANR	3822459	PostIncDecOperationExpression	( * pp ) ++		3822407	0					
ANR	3822460	UnaryOperationExpression	* pp		3822407	0					
ANR	3822461	UnaryOperator	*		3822407	0					
ANR	3822462	Identifier	pp		3822407	1					
ANR	3822463	IncDec	++		3822407	1					
ANR	3822464	ReturnStatement	return 2 ;	207:1:6139:6147	3822407	3	True				
ANR	3822465	PrimaryExpression	2		3822407	0					
ANR	3822466	ExpressionStatement	* fold = ONIGENC_ASCII_CODE_TO_LOWER_CASE ( * p )	212:4:6175:6219	3822407	1	True				
ANR	3822467	AssignmentExpression	* fold = ONIGENC_ASCII_CODE_TO_LOWER_CASE ( * p )		3822407	0		=			
ANR	3822468	UnaryOperationExpression	* fold		3822407	0					
ANR	3822469	UnaryOperator	*		3822407	0					
ANR	3822470	Identifier	fold		3822407	1					
ANR	3822471	CallExpression	ONIGENC_ASCII_CODE_TO_LOWER_CASE ( * p )		3822407	1					
ANR	3822472	Callee	ONIGENC_ASCII_CODE_TO_LOWER_CASE		3822407	0					
ANR	3822473	Identifier	ONIGENC_ASCII_CODE_TO_LOWER_CASE		3822407	0					
ANR	3822474	ArgumentList	* p		3822407	1					
ANR	3822475	Argument	* p		3822407	0					
ANR	3822476	UnaryOperationExpression	* p		3822407	0					
ANR	3822477	UnaryOperator	*		3822407	0					
ANR	3822478	Identifier	p		3822407	1					
ANR	3822479	ExpressionStatement	( * pp ) ++	213:4:6225:6232	3822407	2	True				
ANR	3822480	PostIncDecOperationExpression	( * pp ) ++		3822407	0					
ANR	3822481	UnaryOperationExpression	* pp		3822407	0					
ANR	3822482	UnaryOperator	*		3822407	0					
ANR	3822483	Identifier	pp		3822407	1					
ANR	3822484	IncDec	++		3822407	1					
ANR	3822485	ReturnStatement	return 1 ;	214:4:6238:6246	3822407	3	True				
ANR	3822486	PrimaryExpression	1		3822407	0					
ANR	3822487	ElseStatement	else		3822407	0					
ANR	3822488	CompoundStatement		20:7:400:400	3822407	0					
ANR	3822489	ReturnStatement	"return onigenc_unicode_mbc_case_fold ( ONIG_ENCODING_UTF8 , flag , pp , end , fold ) ;"	217:4:6317:6400	3822407	0	True				
ANR	3822490	CallExpression	"onigenc_unicode_mbc_case_fold ( ONIG_ENCODING_UTF8 , flag , pp , end , fold )"		3822407	0					
ANR	3822491	Callee	onigenc_unicode_mbc_case_fold		3822407	0					
ANR	3822492	Identifier	onigenc_unicode_mbc_case_fold		3822407	0					
ANR	3822493	ArgumentList	ONIG_ENCODING_UTF8		3822407	1					
ANR	3822494	Argument	ONIG_ENCODING_UTF8		3822407	0					
ANR	3822495	Identifier	ONIG_ENCODING_UTF8		3822407	0					
ANR	3822496	Argument	flag		3822407	1					
ANR	3822497	Identifier	flag		3822407	0					
ANR	3822498	Argument	pp		3822407	2					
ANR	3822499	Identifier	pp		3822407	0					
ANR	3822500	Argument	end		3822407	3					
ANR	3822501	Identifier	end		3822407	0					
ANR	3822502	Argument	fold		3822407	4					
ANR	3822503	Identifier	fold		3822407	0					
ANR	3822504	ReturnType	static int		3822407	1					
ANR	3822505	Identifier	mbc_case_fold		3822407	2					
ANR	3822506	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end , UChar * fold"		3822407	3					
ANR	3822507	Parameter	OnigCaseFoldType flag	195:14:5831:5851	3822407	0	True				
ANR	3822508	ParameterType	OnigCaseFoldType		3822407	0					
ANR	3822509	Identifier	flag		3822407	1					
ANR	3822510	Parameter	const UChar * * pp	195:37:5854:5869	3822407	1	True				
ANR	3822511	ParameterType	const UChar * *		3822407	0					
ANR	3822512	Identifier	pp		3822407	1					
ANR	3822513	Parameter	const UChar * end	196:7:5879:5894	3822407	2	True				
ANR	3822514	ParameterType	const UChar *		3822407	0					
ANR	3822515	Identifier	end		3822407	1					
ANR	3822516	Parameter	UChar * fold	196:25:5897:5907	3822407	3	True				
ANR	3822517	ParameterType	UChar *		3822407	0					
ANR	3822518	Identifier	fold		3822407	1					
ANR	3822519	CFGEntryNode	ENTRY		3822407		True				
ANR	3822520	CFGExitNode	EXIT		3822407		True				
ANR	3822521	Symbol	pp		3822407						
ANR	3822522	Symbol	flag		3822407						
ANR	3822523	Symbol	* pp		3822407						
ANR	3822524	Symbol	* fold		3822407						
ANR	3822525	Symbol	ONIG_ENCODING_UTF8		3822407						
ANR	3822526	Symbol	* fold ++		3822407						
ANR	3822527	Symbol	p		3822407						
ANR	3822528	Symbol	fold		3822407						
ANR	3822529	Symbol	ONIGENC_ASCII_CODE_TO_LOWER_CASE		3822407						
ANR	3822530	Symbol	ONIGENC_CASE_FOLD_TURKISH_AZERI		3822407						
ANR	3822531	Symbol	end		3822407						
ANR	3822532	Symbol	* p		3822407						
ANR	3822533	Symbol	ONIGENC_IS_MBC_ASCII		3822407						
ANR	3822534	Symbol	onigenc_unicode_mbc_case_fold		3822407						
ANR	3822535	Function	is_mbc_ambiguous	223:0:6415:7144							
ANR	3822536	FunctionDef	"is_mbc_ambiguous (OnigCaseFoldType flag , const UChar * * pp , const UChar * end)"		3822535	0					
ANR	3822537	CompoundStatement		225:0:6502:7144	3822535	0					
ANR	3822538	IdentifierDeclStatement	const UChar * p = * pp ;	226:2:6506:6526	3822535	0	True				
ANR	3822539	IdentifierDecl	* p = * pp		3822535	0					
ANR	3822540	IdentifierDeclType	const UChar *		3822535	0					
ANR	3822541	Identifier	p		3822535	1					
ANR	3822542	AssignmentExpression	* p = * pp		3822535	2		=			
ANR	3822543	Identifier	p		3822535	0					
ANR	3822544	UnaryOperationExpression	* pp		3822535	1					
ANR	3822545	UnaryOperator	*		3822535	0					
ANR	3822546	Identifier	pp		3822535	1					
ANR	3822547	IfStatement	if ( ONIGENC_IS_MBC_ASCII ( p ) )		3822535	1					
ANR	3822548	Condition	ONIGENC_IS_MBC_ASCII ( p )	228:6:6535:6557	3822535	0	True				
ANR	3822549	CallExpression	ONIGENC_IS_MBC_ASCII ( p )		3822535	0					
ANR	3822550	Callee	ONIGENC_IS_MBC_ASCII		3822535	0					
ANR	3822551	Identifier	ONIGENC_IS_MBC_ASCII		3822535	0					
ANR	3822552	ArgumentList	p		3822535	1					
ANR	3822553	Argument	p		3822535	0					
ANR	3822554	Identifier	p		3822535	0					
ANR	3822555	CompoundStatement		4:31:57:57	3822535	1					
ANR	3822556	ExpressionStatement	( * pp ) ++	229:4:6566:6573	3822535	0	True				
ANR	3822557	PostIncDecOperationExpression	( * pp ) ++		3822535	0					
ANR	3822558	UnaryOperationExpression	* pp		3822535	0					
ANR	3822559	UnaryOperator	*		3822535	0					
ANR	3822560	Identifier	pp		3822535	1					
ANR	3822561	IncDec	++		3822535	1					
ANR	3822562	ReturnStatement	return ONIGENC_IS_ASCII_CODE_CASE_AMBIG ( * p ) ;	230:4:6579:6622	3822535	1	True				
ANR	3822563	CallExpression	ONIGENC_IS_ASCII_CODE_CASE_AMBIG ( * p )		3822535	0					
ANR	3822564	Callee	ONIGENC_IS_ASCII_CODE_CASE_AMBIG		3822535	0					
ANR	3822565	Identifier	ONIGENC_IS_ASCII_CODE_CASE_AMBIG		3822535	0					
ANR	3822566	ArgumentList	* p		3822535	1					
ANR	3822567	Argument	* p		3822535	0					
ANR	3822568	UnaryOperationExpression	* p		3822535	0					
ANR	3822569	UnaryOperator	*		3822535	0					
ANR	3822570	Identifier	p		3822535	1					
ANR	3822571	ElseStatement	else		3822535	0					
ANR	3822572	CompoundStatement		8:7:132:132	3822535	0					
ANR	3822573	ExpressionStatement	"( * pp ) += enclen ( ONIG_ENCODING_UTF8 , p )"	233:4:6641:6679	3822535	0	True				
ANR	3822574	AssignmentExpression	"( * pp ) += enclen ( ONIG_ENCODING_UTF8 , p )"		3822535	0		+=			
ANR	3822575	UnaryOperationExpression	* pp		3822535	0					
ANR	3822576	UnaryOperator	*		3822535	0					
ANR	3822577	Identifier	pp		3822535	1					
ANR	3822578	CallExpression	"enclen ( ONIG_ENCODING_UTF8 , p )"		3822535	1					
ANR	3822579	Callee	enclen		3822535	0					
ANR	3822580	Identifier	enclen		3822535	0					
ANR	3822581	ArgumentList	ONIG_ENCODING_UTF8		3822535	1					
ANR	3822582	Argument	ONIG_ENCODING_UTF8		3822535	0					
ANR	3822583	Identifier	ONIG_ENCODING_UTF8		3822535	0					
ANR	3822584	Argument	p		3822535	1					
ANR	3822585	Identifier	p		3822535	0					
ANR	3822586	IfStatement	if ( * p == 0xc3 )		3822535	1					
ANR	3822587	Condition	* p == 0xc3	235:8:6690:6699	3822535	0	True				
ANR	3822588	EqualityExpression	* p == 0xc3		3822535	0		==			
ANR	3822589	UnaryOperationExpression	* p		3822535	0					
ANR	3822590	UnaryOperator	*		3822535	0					
ANR	3822591	Identifier	p		3822535	1					
ANR	3822592	PrimaryExpression	0xc3		3822535	1					
ANR	3822593	CompoundStatement		12:6:207:223	3822535	1					
ANR	3822594	IdentifierDeclStatement	int c = * ( p + 1 ) ;	236:6:6710:6726	3822535	0	True				
ANR	3822595	IdentifierDecl	c = * ( p + 1 )		3822535	0					
ANR	3822596	IdentifierDeclType	int		3822535	0					
ANR	3822597	Identifier	c		3822535	1					
ANR	3822598	AssignmentExpression	c = * ( p + 1 )		3822535	2		=			
ANR	3822599	Identifier	c		3822535	0					
ANR	3822600	UnaryOperationExpression	* ( p + 1 )		3822535	1					
ANR	3822601	UnaryOperator	*		3822535	0					
ANR	3822602	AdditiveExpression	p + 1		3822535	1		+			
ANR	3822603	Identifier	p		3822535	0					
ANR	3822604	PrimaryExpression	1		3822535	1					
ANR	3822605	IfStatement	if ( c >= 0x80 )		3822535	1					
ANR	3822606	Condition	c >= 0x80	237:10:6738:6746	3822535	0	True				
ANR	3822607	RelationalExpression	c >= 0x80		3822535	0		>=			
ANR	3822608	Identifier	c		3822535	0					
ANR	3822609	PrimaryExpression	0x80		3822535	1					
ANR	3822610	CompoundStatement		13:21:246:246	3822535	1					
ANR	3822611	IfStatement	if ( c <= ( UChar ) 0x9e )		3822535	0					
ANR	3822612	Condition	c <= ( UChar ) 0x9e	238:5:6756:6772	3822535	0	True				
ANR	3822613	RelationalExpression	c <= ( UChar ) 0x9e		3822535	0		<=			
ANR	3822614	Identifier	c		3822535	0					
ANR	3822615	CastExpression	( UChar ) 0x9e		3822535	1					
ANR	3822616	CastTarget	UChar		3822535	0					
ANR	3822617	PrimaryExpression	0x9e		3822535	1					
ANR	3822618	CompoundStatement		14:24:272:272	3822535	1					
ANR	3822619	IfStatement	if ( c == ( UChar ) 0x97 )		3822535	0					
ANR	3822620	Condition	c == ( UChar ) 0x97	239:7:6796:6812	3822535	0	True				
ANR	3822621	EqualityExpression	c == ( UChar ) 0x97		3822535	0		==			
ANR	3822622	Identifier	c		3822535	0					
ANR	3822623	CastExpression	( UChar ) 0x97		3822535	1					
ANR	3822624	CastTarget	UChar		3822535	0					
ANR	3822625	PrimaryExpression	0x97		3822535	1					
ANR	3822626	ReturnStatement	return FALSE ;	239:26:6815:6827	3822535	1	True				
ANR	3822627	Identifier	FALSE		3822535	0					
ANR	3822628	ReturnStatement	return TRUE ;	240:3:6832:6843	3822535	1	True				
ANR	3822629	Identifier	TRUE		3822535	0					
ANR	3822630	ElseStatement	else		3822535	0					
ANR	3822631	IfStatement	if ( c >= ( UChar ) 0xa0 && c <= ( UChar ) 0xbe )		3822535	0					
ANR	3822632	Condition	c >= ( UChar ) 0xa0 && c <= ( UChar ) 0xbe	242:10:6858:6895	3822535	0	True				
ANR	3822633	AndExpression	c >= ( UChar ) 0xa0 && c <= ( UChar ) 0xbe		3822535	0		&&			
ANR	3822634	RelationalExpression	c >= ( UChar ) 0xa0		3822535	0		>=			
ANR	3822635	Identifier	c		3822535	0					
ANR	3822636	CastExpression	( UChar ) 0xa0		3822535	1					
ANR	3822637	CastTarget	UChar		3822535	0					
ANR	3822638	PrimaryExpression	0xa0		3822535	1					
ANR	3822639	RelationalExpression	c <= ( UChar ) 0xbe		3822535	1		<=			
ANR	3822640	Identifier	c		3822535	0					
ANR	3822641	CastExpression	( UChar ) 0xbe		3822535	1					
ANR	3822642	CastTarget	UChar		3822535	0					
ANR	3822643	PrimaryExpression	0xbe		3822535	1					
ANR	3822644	CompoundStatement		18:50:395:395	3822535	1					
ANR	3822645	IfStatement	if ( c == ( UChar ) '\\267' )		3822535	0					
ANR	3822646	Condition	c == ( UChar ) '\\267'	243:7:6919:6937	3822535	0	True				
ANR	3822647	EqualityExpression	c == ( UChar ) '\\267'		3822535	0		==			
ANR	3822648	Identifier	c		3822535	0					
ANR	3822649	CastExpression	( UChar ) '\\267'		3822535	1					
ANR	3822650	CastTarget	UChar		3822535	0					
ANR	3822651	PrimaryExpression	'\\267'		3822535	1					
ANR	3822652	ReturnStatement	return FALSE ;	243:28:6940:6952	3822535	1	True				
ANR	3822653	Identifier	FALSE		3822535	0					
ANR	3822654	ReturnStatement	return TRUE ;	244:3:6957:6968	3822535	1	True				
ANR	3822655	Identifier	TRUE		3822535	0					
ANR	3822656	ElseStatement	else		3822535	0					
ANR	3822657	IfStatement	if ( c == ( UChar ) 0x9f && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0 )		3822535	0					
ANR	3822658	Condition	c == ( UChar ) 0x9f && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0	246:17:6990:7078	3822535	0	True				
ANR	3822659	AndExpression	c == ( UChar ) 0x9f && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		3822535	0		&&			
ANR	3822660	EqualityExpression	c == ( UChar ) 0x9f		3822535	0		==			
ANR	3822661	Identifier	c		3822535	0					
ANR	3822662	CastExpression	( UChar ) 0x9f		3822535	1					
ANR	3822663	CastTarget	UChar		3822535	0					
ANR	3822664	PrimaryExpression	0x9f		3822535	1					
ANR	3822665	EqualityExpression	( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		3822535	1		!=			
ANR	3822666	BitAndExpression	flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		3822535	0		&			
ANR	3822667	Identifier	flag		3822535	0					
ANR	3822668	Identifier	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		3822535	1					
ANR	3822669	PrimaryExpression	0		3822535	1					
ANR	3822670	CompoundStatement		23:70:578:578	3822535	1					
ANR	3822671	ReturnStatement	return TRUE ;	248:3:7086:7097	3822535	0	True				
ANR	3822672	Identifier	TRUE		3822535	0					
ANR	3822673	ReturnStatement	return FALSE ;	254:2:7130:7142	3822535	2	True				
ANR	3822674	Identifier	FALSE		3822535	0					
ANR	3822675	ReturnType	static int		3822535	1					
ANR	3822676	Identifier	is_mbc_ambiguous		3822535	2					
ANR	3822677	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end"		3822535	3					
ANR	3822678	Parameter	OnigCaseFoldType flag	224:17:6443:6463	3822535	0	True				
ANR	3822679	ParameterType	OnigCaseFoldType		3822535	0					
ANR	3822680	Identifier	flag		3822535	1					
ANR	3822681	Parameter	const UChar * * pp	224:40:6466:6481	3822535	1	True				
ANR	3822682	ParameterType	const UChar * *		3822535	0					
ANR	3822683	Identifier	pp		3822535	1					
ANR	3822684	Parameter	const UChar * end	224:58:6484:6499	3822535	2	True				
ANR	3822685	ParameterType	const UChar *		3822535	0					
ANR	3822686	Identifier	end		3822535	1					
ANR	3822687	CFGEntryNode	ENTRY		3822535		True				
ANR	3822688	CFGExitNode	EXIT		3822535		True				
ANR	3822689	Symbol	pp		3822535						
ANR	3822690	Symbol	flag		3822535						
ANR	3822691	Symbol	c		3822535						
ANR	3822692	Symbol	* pp		3822535						
ANR	3822693	Symbol	TRUE		3822535						
ANR	3822694	Symbol	ONIG_ENCODING_UTF8		3822535						
ANR	3822695	Symbol	* ( p + 1 )		3822535						
ANR	3822696	Symbol	enclen		3822535						
ANR	3822697	Symbol	p		3822535						
ANR	3822698	Symbol	ONIGENC_IS_ASCII_CODE_CASE_AMBIG		3822535						
ANR	3822699	Symbol	end		3822535						
ANR	3822700	Symbol	* p		3822535						
ANR	3822701	Symbol	FALSE		3822535						
ANR	3822702	Symbol	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		3822535						
ANR	3822703	Symbol	ONIGENC_IS_MBC_ASCII		3822535						
ANR	3822704	Function	get_ctype_code_range	259:0:7155:7343							
ANR	3822705	FunctionDef	"get_ctype_code_range (OnigCtype ctype , OnigCodePoint * sb_out , const OnigCodePoint * ranges [ ])"		3822704	0					
ANR	3822706	CompoundStatement		262:0:7265:7343	3822704	0					
ANR	3822707	ExpressionStatement	* sb_out = 0x80	263:2:7269:7283	3822704	0	True				
ANR	3822708	AssignmentExpression	* sb_out = 0x80		3822704	0		=			
ANR	3822709	UnaryOperationExpression	* sb_out		3822704	0					
ANR	3822710	UnaryOperator	*		3822704	0					
ANR	3822711	Identifier	sb_out		3822704	1					
ANR	3822712	PrimaryExpression	0x80		3822704	1					
ANR	3822713	ReturnStatement	"return onigenc_unicode_ctype_code_range ( ctype , ranges ) ;"	264:2:7287:7341	3822704	1	True				
ANR	3822714	CallExpression	"onigenc_unicode_ctype_code_range ( ctype , ranges )"		3822704	0					
ANR	3822715	Callee	onigenc_unicode_ctype_code_range		3822704	0					
ANR	3822716	Identifier	onigenc_unicode_ctype_code_range		3822704	0					
ANR	3822717	ArgumentList	ctype		3822704	1					
ANR	3822718	Argument	ctype		3822704	0					
ANR	3822719	Identifier	ctype		3822704	0					
ANR	3822720	Argument	ranges		3822704	1					
ANR	3822721	Identifier	ranges		3822704	0					
ANR	3822722	ReturnType	static int		3822704	1					
ANR	3822723	Identifier	get_ctype_code_range		3822704	2					
ANR	3822724	ParameterList	"OnigCtype ctype , OnigCodePoint * sb_out , const OnigCodePoint * ranges [ ]"		3822704	3					
ANR	3822725	Parameter	OnigCtype ctype	260:21:7187:7201	3822704	0	True				
ANR	3822726	ParameterType	OnigCtype		3822704	0					
ANR	3822727	Identifier	ctype		3822704	1					
ANR	3822728	Parameter	OnigCodePoint * sb_out	260:38:7204:7224	3822704	1	True				
ANR	3822729	ParameterType	OnigCodePoint *		3822704	0					
ANR	3822730	Identifier	sb_out		3822704	1					
ANR	3822731	Parameter	const OnigCodePoint * ranges [ ]	261:7:7234:7262	3822704	2	True				
ANR	3822732	ParameterType	const OnigCodePoint * [ ]		3822704	0					
ANR	3822733	Identifier	ranges		3822704	1					
ANR	3822734	CFGEntryNode	ENTRY		3822704		True				
ANR	3822735	CFGExitNode	EXIT		3822704		True				
ANR	3822736	Symbol	sb_out		3822704						
ANR	3822737	Symbol	* sb_out		3822704						
ANR	3822738	Symbol	ctype		3822704						
ANR	3822739	Symbol	ranges		3822704						
ANR	3822740	Symbol	onigenc_unicode_ctype_code_range		3822704						
ANR	3822741	Function	left_adjust_char_head	268:0:7347:7553							
ANR	3822742	FunctionDef	"left_adjust_char_head (const UChar * start , const UChar * s)"		3822741	0					
ANR	3822743	CompoundStatement		270:0:7419:7553	3822741	0					
ANR	3822744	IdentifierDeclStatement	const UChar * p ;	271:2:7423:7437	3822741	0	True				
ANR	3822745	IdentifierDecl	* p		3822741	0					
ANR	3822746	IdentifierDeclType	const UChar *		3822741	0					
ANR	3822747	Identifier	p		3822741	1					
ANR	3822748	IfStatement	if ( s <= start )		3822741	1					
ANR	3822749	Condition	s <= start	273:6:7446:7455	3822741	0	True				
ANR	3822750	RelationalExpression	s <= start		3822741	0		<=			
ANR	3822751	Identifier	s		3822741	0					
ANR	3822752	Identifier	start		3822741	1					
ANR	3822753	ReturnStatement	return ( UChar * ) s ;	273:18:7458:7475	3822741	1	True				
ANR	3822754	CastExpression	( UChar * ) s		3822741	0					
ANR	3822755	CastTarget	UChar *		3822741	0					
ANR	3822756	Identifier	s		3822741	1					
ANR	3822757	ExpressionStatement	p = s	274:2:7479:7484	3822741	2	True				
ANR	3822758	AssignmentExpression	p = s		3822741	0		=			
ANR	3822759	Identifier	p		3822741	0					
ANR	3822760	Identifier	s		3822741	1					
ANR	3822761	WhileStatement	while ( ! utf8_islead ( * p ) && p > start )		3822741	3					
ANR	3822762	Condition	! utf8_islead ( * p ) && p > start	276:9:7496:7524	3822741	0	True				
ANR	3822763	AndExpression	! utf8_islead ( * p ) && p > start		3822741	0		&&			
ANR	3822764	UnaryOperationExpression	! utf8_islead ( * p )		3822741	0					
ANR	3822765	UnaryOperator	!		3822741	0					
ANR	3822766	CallExpression	utf8_islead ( * p )		3822741	1					
ANR	3822767	Callee	utf8_islead		3822741	0					
ANR	3822768	Identifier	utf8_islead		3822741	0					
ANR	3822769	ArgumentList	* p		3822741	1					
ANR	3822770	Argument	* p		3822741	0					
ANR	3822771	UnaryOperationExpression	* p		3822741	0					
ANR	3822772	UnaryOperator	*		3822741	0					
ANR	3822773	Identifier	p		3822741	1					
ANR	3822774	RelationalExpression	p > start		3822741	1		>			
ANR	3822775	Identifier	p		3822741	0					
ANR	3822776	Identifier	start		3822741	1					
ANR	3822777	ExpressionStatement	p --	276:40:7527:7530	3822741	1	True				
ANR	3822778	PostIncDecOperationExpression	p --		3822741	0					
ANR	3822779	Identifier	p		3822741	0					
ANR	3822780	IncDec	--		3822741	1					
ANR	3822781	ReturnStatement	return ( UChar * ) p ;	277:2:7534:7551	3822741	4	True				
ANR	3822782	CastExpression	( UChar * ) p		3822741	0					
ANR	3822783	CastTarget	UChar *		3822741	0					
ANR	3822784	Identifier	p		3822741	1					
ANR	3822785	ReturnType	static UChar *		3822741	1					
ANR	3822786	Identifier	left_adjust_char_head		3822741	2					
ANR	3822787	ParameterList	"const UChar * start , const UChar * s"		3822741	3					
ANR	3822788	Parameter	const UChar * start	269:22:7383:7400	3822741	0	True				
ANR	3822789	ParameterType	const UChar *		3822741	0					
ANR	3822790	Identifier	start		3822741	1					
ANR	3822791	Parameter	const UChar * s	269:42:7403:7416	3822741	1	True				
ANR	3822792	ParameterType	const UChar *		3822741	0					
ANR	3822793	Identifier	s		3822741	1					
ANR	3822794	CFGEntryNode	ENTRY		3822741		True				
ANR	3822795	CFGExitNode	EXIT		3822741		True				
ANR	3822796	Symbol	p		3822741						
ANR	3822797	Symbol	s		3822741						
ANR	3822798	Symbol	utf8_islead		3822741						
ANR	3822799	Symbol	start		3822741						
ANR	3822800	Symbol	* p		3822741						
ANR	3822801	Function	get_case_fold_codes_by_str	280:0:7556:7799							
ANR	3822802	FunctionDef	"get_case_fold_codes_by_str (OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ])"		3822801	0					
ANR	3822803	CompoundStatement		283:0:7693:7799	3822801	0					
ANR	3822804	ReturnStatement	"return onigenc_unicode_get_case_fold_codes_by_str ( ONIG_ENCODING_UTF8 , flag , p , end , items ) ;"	284:2:7697:7797	3822801	0	True				
ANR	3822805	CallExpression	"onigenc_unicode_get_case_fold_codes_by_str ( ONIG_ENCODING_UTF8 , flag , p , end , items )"		3822801	0					
ANR	3822806	Callee	onigenc_unicode_get_case_fold_codes_by_str		3822801	0					
ANR	3822807	Identifier	onigenc_unicode_get_case_fold_codes_by_str		3822801	0					
ANR	3822808	ArgumentList	ONIG_ENCODING_UTF8		3822801	1					
ANR	3822809	Argument	ONIG_ENCODING_UTF8		3822801	0					
ANR	3822810	Identifier	ONIG_ENCODING_UTF8		3822801	0					
ANR	3822811	Argument	flag		3822801	1					
ANR	3822812	Identifier	flag		3822801	0					
ANR	3822813	Argument	p		3822801	2					
ANR	3822814	Identifier	p		3822801	0					
ANR	3822815	Argument	end		3822801	3					
ANR	3822816	Identifier	end		3822801	0					
ANR	3822817	Argument	items		3822801	4					
ANR	3822818	Identifier	items		3822801	0					
ANR	3822819	ReturnType	static int		3822801	1					
ANR	3822820	Identifier	get_case_fold_codes_by_str		3822801	2					
ANR	3822821	ParameterList	"OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ]"		3822801	3					
ANR	3822822	Parameter	OnigCaseFoldType flag	281:27:7594:7614	3822801	0	True				
ANR	3822823	ParameterType	OnigCaseFoldType		3822801	0					
ANR	3822824	Identifier	flag		3822801	1					
ANR	3822825	Parameter	const OnigUChar * p	282:4:7621:7638	3822801	1	True				
ANR	3822826	ParameterType	const OnigUChar *		3822801	0					
ANR	3822827	Identifier	p		3822801	1					
ANR	3822828	Parameter	const OnigUChar * end	282:24:7641:7660	3822801	2	True				
ANR	3822829	ParameterType	const OnigUChar *		3822801	0					
ANR	3822830	Identifier	end		3822801	1					
ANR	3822831	Parameter	OnigCaseFoldCodeItem items [ ]	282:46:7663:7690	3822801	3	True				
ANR	3822832	ParameterType	OnigCaseFoldCodeItem [ ]		3822801	0					
ANR	3822833	Identifier	items		3822801	1					
ANR	3822834	CFGEntryNode	ENTRY		3822801		True				
ANR	3822835	CFGExitNode	EXIT		3822801		True				
ANR	3822836	Symbol	p		3822801						
ANR	3822837	Symbol	flag		3822801						
ANR	3822838	Symbol	onigenc_unicode_get_case_fold_codes_by_str		3822801						
ANR	3822839	Symbol	end		3822801						
ANR	3822840	Symbol	ONIG_ENCODING_UTF8		3822801						
ANR	3822841	Symbol	items		3822801						
ANR	3822842	DeclStmt									
ANR	3822843	Decl							OnigEncodingType	OnigEncodingType	OnigEncodingUTF8
