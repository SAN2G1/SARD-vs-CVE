command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	342290	File	data/converged/CVE-2015-8617_php-src/Zend_zend_sort.c								
ANR	342291	Function	zend_qsort	28:0:1351:2697							
ANR	342292	FunctionDef	"zend_qsort (void * base , size_t nmemb , size_t siz , compare_func_t compare , swap_func_t swp)"		342291	0					
ANR	342293	CompoundStatement		29:0:1465:2697	342291	0					
ANR	342294	IdentifierDeclStatement	void * begin_stack [ QSORT_STACK_SIZE ] ;	30:1:1468:1513	342291	0	True				
ANR	342295	IdentifierDecl	* begin_stack [ QSORT_STACK_SIZE ]		342291	0					
ANR	342296	IdentifierDeclType	void * [ QSORT_STACK_SIZE ]		342291	0					
ANR	342297	Identifier	begin_stack		342291	1					
ANR	342298	Identifier	QSORT_STACK_SIZE		342291	2					
ANR	342299	IdentifierDeclStatement	void * end_stack [ QSORT_STACK_SIZE ] ;	31:1:1516:1559	342291	1	True				
ANR	342300	IdentifierDecl	* end_stack [ QSORT_STACK_SIZE ]		342291	0					
ANR	342301	IdentifierDeclType	void * [ QSORT_STACK_SIZE ]		342291	0					
ANR	342302	Identifier	end_stack		342291	1					
ANR	342303	Identifier	QSORT_STACK_SIZE		342291	2					
ANR	342304	Statement	register	32:1:1562:1569	342291	2	True				
ANR	342305	IdentifierDeclStatement	char * begin ;	32:10:1571:1583	342291	3	True				
ANR	342306	IdentifierDecl	* begin		342291	0					
ANR	342307	IdentifierDeclType	char *		342291	0					
ANR	342308	Identifier	begin		342291	1					
ANR	342309	Statement	register	33:1:1586:1593	342291	4	True				
ANR	342310	IdentifierDeclStatement	char * end ;	33:10:1595:1605	342291	5	True				
ANR	342311	IdentifierDecl	* end		342291	0					
ANR	342312	IdentifierDeclType	char *		342291	0					
ANR	342313	Identifier	end		342291	1					
ANR	342314	Statement	register	34:1:1608:1615	342291	6	True				
ANR	342315	IdentifierDeclStatement	char * seg1 ;	34:10:1617:1628	342291	7	True				
ANR	342316	IdentifierDecl	* seg1		342291	0					
ANR	342317	IdentifierDeclType	char *		342291	0					
ANR	342318	Identifier	seg1		342291	1					
ANR	342319	Statement	register	35:1:1631:1638	342291	8	True				
ANR	342320	IdentifierDeclStatement	char * seg2 ;	35:10:1640:1651	342291	9	True				
ANR	342321	IdentifierDecl	* seg2		342291	0					
ANR	342322	IdentifierDeclType	char *		342291	0					
ANR	342323	Identifier	seg2		342291	1					
ANR	342324	Statement	register	36:1:1654:1661	342291	10	True				
ANR	342325	IdentifierDeclStatement	char * seg2p ;	36:10:1663:1675	342291	11	True				
ANR	342326	IdentifierDecl	* seg2p		342291	0					
ANR	342327	IdentifierDeclType	char *		342291	0					
ANR	342328	Identifier	seg2p		342291	1					
ANR	342329	Statement	register	37:1:1678:1685	342291	12	True				
ANR	342330	IdentifierDeclStatement	int loop ;	37:10:1687:1698	342291	13	True				
ANR	342331	IdentifierDecl	loop		342291	0					
ANR	342332	IdentifierDeclType	int		342291	0					
ANR	342333	Identifier	loop		342291	1					
ANR	342334	IdentifierDeclStatement	size_t offset ;	38:1:1701:1723	342291	14	True				
ANR	342335	IdentifierDecl	offset		342291	0					
ANR	342336	IdentifierDeclType	size_t		342291	0					
ANR	342337	Identifier	offset		342291	1					
ANR	342338	ExpressionStatement	begin_stack [ 0 ] = ( char * ) base	40:1:1727:1757	342291	15	True				
ANR	342339	AssignmentExpression	begin_stack [ 0 ] = ( char * ) base		342291	0		=			
ANR	342340	ArrayIndexing	begin_stack [ 0 ]		342291	0					
ANR	342341	Identifier	begin_stack		342291	0					
ANR	342342	PrimaryExpression	0		342291	1					
ANR	342343	CastExpression	( char * ) base		342291	1					
ANR	342344	CastTarget	char *		342291	0					
ANR	342345	Identifier	base		342291	1					
ANR	342346	ExpressionStatement	end_stack [ 0 ] = ( char * ) base + ( ( nmemb - 1 ) * siz )	41:1:1760:1812	342291	16	True				
ANR	342347	AssignmentExpression	end_stack [ 0 ] = ( char * ) base + ( ( nmemb - 1 ) * siz )		342291	0		=			
ANR	342348	ArrayIndexing	end_stack [ 0 ]		342291	0					
ANR	342349	Identifier	end_stack		342291	0					
ANR	342350	PrimaryExpression	0		342291	1					
ANR	342351	AdditiveExpression	( char * ) base + ( ( nmemb - 1 ) * siz )		342291	1		+			
ANR	342352	CastExpression	( char * ) base		342291	0					
ANR	342353	CastTarget	char *		342291	0					
ANR	342354	Identifier	base		342291	1					
ANR	342355	MultiplicativeExpression	( nmemb - 1 ) * siz		342291	1		*			
ANR	342356	AdditiveExpression	nmemb - 1		342291	0		-			
ANR	342357	Identifier	nmemb		342291	0					
ANR	342358	PrimaryExpression	1		342291	1					
ANR	342359	Identifier	siz		342291	1					
ANR	342360	ForStatement	for ( loop = 0 ; loop >= 0 ; -- loop )		342291	17					
ANR	342361	ForInit	loop = 0 ;	43:6:1821:1829	342291	0	True				
ANR	342362	AssignmentExpression	loop = 0		342291	0		=			
ANR	342363	Identifier	loop		342291	0					
ANR	342364	PrimaryExpression	0		342291	1					
ANR	342365	Condition	loop >= 0	43:16:1831:1839	342291	1	True				
ANR	342366	RelationalExpression	loop >= 0		342291	0		>=			
ANR	342367	Identifier	loop		342291	0					
ANR	342368	PrimaryExpression	0		342291	1					
ANR	342369	UnaryExpression	-- loop	43:27:1842:1847	342291	2	True				
ANR	342370	IncDec	--		342291	0					
ANR	342371	Identifier	loop		342291	1					
ANR	342372	CompoundStatement		15:35:384:384	342291	3					
ANR	342373	ExpressionStatement	begin = begin_stack [ loop ]	44:2:1854:1879	342291	0	True				
ANR	342374	AssignmentExpression	begin = begin_stack [ loop ]		342291	0		=			
ANR	342375	Identifier	begin		342291	0					
ANR	342376	ArrayIndexing	begin_stack [ loop ]		342291	1					
ANR	342377	Identifier	begin_stack		342291	0					
ANR	342378	Identifier	loop		342291	1					
ANR	342379	ExpressionStatement	end = end_stack [ loop ]	45:2:1883:1906	342291	1	True				
ANR	342380	AssignmentExpression	end = end_stack [ loop ]		342291	0		=			
ANR	342381	Identifier	end		342291	0					
ANR	342382	ArrayIndexing	end_stack [ loop ]		342291	1					
ANR	342383	Identifier	end_stack		342291	0					
ANR	342384	Identifier	loop		342291	1					
ANR	342385	WhileStatement	while ( begin < end )		342291	2					
ANR	342386	Condition	begin < end	47:9:1918:1928	342291	0	True				
ANR	342387	RelationalExpression	begin < end		342291	0		<			
ANR	342388	Identifier	begin		342291	0					
ANR	342389	Identifier	end		342291	1					
ANR	342390	CompoundStatement		19:22:465:465	342291	1					
ANR	342391	ExpressionStatement	offset = ( end - begin ) >> Z_L ( 1 )	48:3:1936:1968	342291	0	True				
ANR	342392	AssignmentExpression	offset = ( end - begin ) >> Z_L ( 1 )		342291	0		=			
ANR	342393	Identifier	offset		342291	0					
ANR	342394	ShiftExpression	( end - begin ) >> Z_L ( 1 )		342291	1		>>			
ANR	342395	AdditiveExpression	end - begin		342291	0		-			
ANR	342396	Identifier	end		342291	0					
ANR	342397	Identifier	begin		342291	1					
ANR	342398	CallExpression	Z_L ( 1 )		342291	1					
ANR	342399	Callee	Z_L		342291	0					
ANR	342400	Identifier	Z_L		342291	0					
ANR	342401	ArgumentList	1		342291	1					
ANR	342402	Argument	1		342291	0					
ANR	342403	PrimaryExpression	1		342291	0					
ANR	342404	ExpressionStatement	"swp ( begin , begin + ( offset - ( offset % siz ) ) )"	49:3:1973:2018	342291	1	True				
ANR	342405	CallExpression	"swp ( begin , begin + ( offset - ( offset % siz ) ) )"		342291	0					
ANR	342406	Callee	swp		342291	0					
ANR	342407	Identifier	swp		342291	0					
ANR	342408	ArgumentList	begin		342291	1					
ANR	342409	Argument	begin		342291	0					
ANR	342410	Identifier	begin		342291	0					
ANR	342411	Argument	begin + ( offset - ( offset % siz ) )		342291	1					
ANR	342412	AdditiveExpression	begin + ( offset - ( offset % siz ) )		342291	0		+			
ANR	342413	Identifier	begin		342291	0					
ANR	342414	AdditiveExpression	offset - ( offset % siz )		342291	1		-			
ANR	342415	Identifier	offset		342291	0					
ANR	342416	MultiplicativeExpression	offset % siz		342291	1		%			
ANR	342417	Identifier	offset		342291	0					
ANR	342418	Identifier	siz		342291	1					
ANR	342419	ExpressionStatement	seg1 = begin + siz	51:3:2024:2042	342291	2	True				
ANR	342420	AssignmentExpression	seg1 = begin + siz		342291	0		=			
ANR	342421	Identifier	seg1		342291	0					
ANR	342422	AdditiveExpression	begin + siz		342291	1		+			
ANR	342423	Identifier	begin		342291	0					
ANR	342424	Identifier	siz		342291	1					
ANR	342425	ExpressionStatement	seg2 = end	52:3:2047:2057	342291	3	True				
ANR	342426	AssignmentExpression	seg2 = end		342291	0		=			
ANR	342427	Identifier	seg2		342291	0					
ANR	342428	Identifier	end		342291	1					
ANR	342429	WhileStatement	while ( 1 )		342291	4					
ANR	342430	Condition	1	54:10:2070:2070	342291	0	True				
ANR	342431	PrimaryExpression	1		342291	0					
ANR	342432	CompoundStatement		26:13:607:607	342291	1					
ANR	342433	ForStatement	"for ( ; seg1 < seg2 && compare ( begin , seg1 ) > 0 ; seg1 += siz )"		342291	0					
ANR	342434	Condition	"seg1 < seg2 && compare ( begin , seg1 ) > 0"	55:11:2086:2124	342291	0	True				
ANR	342435	AndExpression	"seg1 < seg2 && compare ( begin , seg1 ) > 0"		342291	0		&&			
ANR	342436	RelationalExpression	seg1 < seg2		342291	0		<			
ANR	342437	Identifier	seg1		342291	0					
ANR	342438	Identifier	seg2		342291	1					
ANR	342439	RelationalExpression	"compare ( begin , seg1 ) > 0"		342291	1		>			
ANR	342440	CallExpression	"compare ( begin , seg1 )"		342291	0					
ANR	342441	Callee	compare		342291	0					
ANR	342442	Identifier	compare		342291	0					
ANR	342443	ArgumentList	begin		342291	1					
ANR	342444	Argument	begin		342291	0					
ANR	342445	Identifier	begin		342291	0					
ANR	342446	Argument	seg1		342291	1					
ANR	342447	Identifier	seg1		342291	0					
ANR	342448	PrimaryExpression	0		342291	1					
ANR	342449	AssignmentExpression	seg1 += siz	56:9:2136:2146	342291	1	True	+=			
ANR	342450	Identifier	seg1		342291	0					
ANR	342451	Identifier	siz		342291	1					
ANR	342452	ExpressionStatement		56:21:2148:2148	342291	2	True				
ANR	342453	ForStatement	"for ( ; seg2 >= seg1 && compare ( seg2 , begin ) > 0 ; seg2 -= siz )"		342291	1					
ANR	342454	Condition	"seg2 >= seg1 && compare ( seg2 , begin ) > 0"	58:11:2162:2201	342291	0	True				
ANR	342455	AndExpression	"seg2 >= seg1 && compare ( seg2 , begin ) > 0"		342291	0		&&			
ANR	342456	RelationalExpression	seg2 >= seg1		342291	0		>=			
ANR	342457	Identifier	seg2		342291	0					
ANR	342458	Identifier	seg1		342291	1					
ANR	342459	RelationalExpression	"compare ( seg2 , begin ) > 0"		342291	1		>			
ANR	342460	CallExpression	"compare ( seg2 , begin )"		342291	0					
ANR	342461	Callee	compare		342291	0					
ANR	342462	Identifier	compare		342291	0					
ANR	342463	ArgumentList	seg2		342291	1					
ANR	342464	Argument	seg2		342291	0					
ANR	342465	Identifier	seg2		342291	0					
ANR	342466	Argument	begin		342291	1					
ANR	342467	Identifier	begin		342291	0					
ANR	342468	PrimaryExpression	0		342291	1					
ANR	342469	AssignmentExpression	seg2 -= siz	59:9:2213:2223	342291	1	True	-=			
ANR	342470	Identifier	seg2		342291	0					
ANR	342471	Identifier	siz		342291	1					
ANR	342472	ExpressionStatement		59:21:2225:2225	342291	2	True				
ANR	342473	IfStatement	if ( seg1 >= seg2 )		342291	2					
ANR	342474	Condition	seg1 >= seg2	61:8:2236:2247	342291	0	True				
ANR	342475	RelationalExpression	seg1 >= seg2		342291	0		>=			
ANR	342476	Identifier	seg1		342291	0					
ANR	342477	Identifier	seg2		342291	1					
ANR	342478	BreakStatement	break ;	62:5:2255:2260	342291	1	True				
ANR	342479	ExpressionStatement	"swp ( seg1 , seg2 )"	64:4:2267:2282	342291	3	True				
ANR	342480	CallExpression	"swp ( seg1 , seg2 )"		342291	0					
ANR	342481	Callee	swp		342291	0					
ANR	342482	Identifier	swp		342291	0					
ANR	342483	ArgumentList	seg1		342291	1					
ANR	342484	Argument	seg1		342291	0					
ANR	342485	Identifier	seg1		342291	0					
ANR	342486	Argument	seg2		342291	1					
ANR	342487	Identifier	seg2		342291	0					
ANR	342488	ExpressionStatement	seg1 += siz	66:4:2289:2300	342291	4	True				
ANR	342489	AssignmentExpression	seg1 += siz		342291	0		+=			
ANR	342490	Identifier	seg1		342291	0					
ANR	342491	Identifier	siz		342291	1					
ANR	342492	ExpressionStatement	seg2 -= siz	67:4:2306:2317	342291	5	True				
ANR	342493	AssignmentExpression	seg2 -= siz		342291	0		-=			
ANR	342494	Identifier	seg2		342291	0					
ANR	342495	Identifier	siz		342291	1					
ANR	342496	ExpressionStatement	"swp ( begin , seg2 )"	70:3:2328:2344	342291	5	True				
ANR	342497	CallExpression	"swp ( begin , seg2 )"		342291	0					
ANR	342498	Callee	swp		342291	0					
ANR	342499	Identifier	swp		342291	0					
ANR	342500	ArgumentList	begin		342291	1					
ANR	342501	Argument	begin		342291	0					
ANR	342502	Identifier	begin		342291	0					
ANR	342503	Argument	seg2		342291	1					
ANR	342504	Identifier	seg2		342291	0					
ANR	342505	ExpressionStatement	seg2p = seg2	72:3:2350:2362	342291	6	True				
ANR	342506	AssignmentExpression	seg2p = seg2		342291	0		=			
ANR	342507	Identifier	seg2p		342291	0					
ANR	342508	Identifier	seg2		342291	1					
ANR	342509	IfStatement	if ( ( seg2p - begin ) <= ( end - seg2p ) )		342291	7					
ANR	342510	Condition	( seg2p - begin ) <= ( end - seg2p )	74:7:2372:2403	342291	0	True				
ANR	342511	RelationalExpression	( seg2p - begin ) <= ( end - seg2p )		342291	0		<=			
ANR	342512	AdditiveExpression	seg2p - begin		342291	0		-			
ANR	342513	Identifier	seg2p		342291	0					
ANR	342514	Identifier	begin		342291	1					
ANR	342515	AdditiveExpression	end - seg2p		342291	1		-			
ANR	342516	Identifier	end		342291	0					
ANR	342517	Identifier	seg2p		342291	1					
ANR	342518	CompoundStatement		46:41:940:940	342291	1					
ANR	342519	IfStatement	if ( ( seg2p + siz ) < end )		342291	0					
ANR	342520	Condition	( seg2p + siz ) < end	75:8:2416:2434	342291	0	True				
ANR	342521	RelationalExpression	( seg2p + siz ) < end		342291	0		<			
ANR	342522	AdditiveExpression	seg2p + siz		342291	0		+			
ANR	342523	Identifier	seg2p		342291	0					
ANR	342524	Identifier	siz		342291	1					
ANR	342525	Identifier	end		342291	1					
ANR	342526	CompoundStatement		47:29:971:971	342291	1					
ANR	342527	ExpressionStatement	begin_stack [ loop ] = seg2p + siz	76:5:2444:2475	342291	0	True				
ANR	342528	AssignmentExpression	begin_stack [ loop ] = seg2p + siz		342291	0		=			
ANR	342529	ArrayIndexing	begin_stack [ loop ]		342291	0					
ANR	342530	Identifier	begin_stack		342291	0					
ANR	342531	Identifier	loop		342291	1					
ANR	342532	AdditiveExpression	seg2p + siz		342291	1		+			
ANR	342533	Identifier	seg2p		342291	0					
ANR	342534	Identifier	siz		342291	1					
ANR	342535	ExpressionStatement	end_stack [ loop ++ ] = end	77:5:2482:2505	342291	1	True				
ANR	342536	AssignmentExpression	end_stack [ loop ++ ] = end		342291	0		=			
ANR	342537	ArrayIndexing	end_stack [ loop ++ ]		342291	0					
ANR	342538	Identifier	end_stack		342291	0					
ANR	342539	PostIncDecOperationExpression	loop ++		342291	1					
ANR	342540	Identifier	loop		342291	0					
ANR	342541	IncDec	++		342291	1					
ANR	342542	Identifier	end		342291	1					
ANR	342543	ExpressionStatement	end = seg2p - siz	79:4:2517:2534	342291	1	True				
ANR	342544	AssignmentExpression	end = seg2p - siz		342291	0		=			
ANR	342545	Identifier	end		342291	0					
ANR	342546	AdditiveExpression	seg2p - siz		342291	1		-			
ANR	342547	Identifier	seg2p		342291	0					
ANR	342548	Identifier	siz		342291	1					
ANR	342549	ElseStatement	else		342291	0					
ANR	342550	CompoundStatement		53:8:1083:1083	342291	0					
ANR	342551	IfStatement	if ( ( seg2p - siz ) > begin )		342291	0					
ANR	342552	Condition	( seg2p - siz ) > begin	82:8:2559:2579	342291	0	True				
ANR	342553	RelationalExpression	( seg2p - siz ) > begin		342291	0		>			
ANR	342554	AdditiveExpression	seg2p - siz		342291	0		-			
ANR	342555	Identifier	seg2p		342291	0					
ANR	342556	Identifier	siz		342291	1					
ANR	342557	Identifier	begin		342291	1					
ANR	342558	CompoundStatement		54:31:1116:1116	342291	1					
ANR	342559	ExpressionStatement	begin_stack [ loop ] = begin	83:5:2589:2614	342291	0	True				
ANR	342560	AssignmentExpression	begin_stack [ loop ] = begin		342291	0		=			
ANR	342561	ArrayIndexing	begin_stack [ loop ]		342291	0					
ANR	342562	Identifier	begin_stack		342291	0					
ANR	342563	Identifier	loop		342291	1					
ANR	342564	Identifier	begin		342291	1					
ANR	342565	ExpressionStatement	end_stack [ loop ++ ] = seg2p - siz	84:5:2621:2652	342291	1	True				
ANR	342566	AssignmentExpression	end_stack [ loop ++ ] = seg2p - siz		342291	0		=			
ANR	342567	ArrayIndexing	end_stack [ loop ++ ]		342291	0					
ANR	342568	Identifier	end_stack		342291	0					
ANR	342569	PostIncDecOperationExpression	loop ++		342291	1					
ANR	342570	Identifier	loop		342291	0					
ANR	342571	IncDec	++		342291	1					
ANR	342572	AdditiveExpression	seg2p - siz		342291	1		-			
ANR	342573	Identifier	seg2p		342291	0					
ANR	342574	Identifier	siz		342291	1					
ANR	342575	ExpressionStatement	begin = seg2p + siz	86:4:2664:2683	342291	1	True				
ANR	342576	AssignmentExpression	begin = seg2p + siz		342291	0		=			
ANR	342577	Identifier	begin		342291	0					
ANR	342578	AdditiveExpression	seg2p + siz		342291	1		+			
ANR	342579	Identifier	seg2p		342291	0					
ANR	342580	Identifier	siz		342291	1					
ANR	342581	ReturnType	ZEND_API void		342291	1					
ANR	342582	Identifier	zend_qsort		342291	2					
ANR	342583	ParameterList	"void * base , size_t nmemb , size_t siz , compare_func_t compare , swap_func_t swp"		342291	3					
ANR	342584	Parameter	void * base	28:25:1376:1385	342291	0	True				
ANR	342585	ParameterType	void *		342291	0					
ANR	342586	Identifier	base		342291	1					
ANR	342587	Parameter	size_t nmemb	28:37:1388:1399	342291	1	True				
ANR	342588	ParameterType	size_t		342291	0					
ANR	342589	Identifier	nmemb		342291	1					
ANR	342590	Parameter	size_t siz	28:51:1402:1411	342291	2	True				
ANR	342591	ParameterType	size_t		342291	0					
ANR	342592	Identifier	siz		342291	1					
ANR	342593	Parameter	compare_func_t compare	28:63:1414:1435	342291	3	True				
ANR	342594	ParameterType	compare_func_t		342291	0					
ANR	342595	Identifier	compare		342291	1					
ANR	342596	Parameter	swap_func_t swp	28:87:1438:1452	342291	4	True				
ANR	342597	ParameterType	swap_func_t		342291	0					
ANR	342598	Identifier	swp		342291	1					
ANR	342599	CFGEntryNode	ENTRY		342291		True				
ANR	342600	CFGExitNode	EXIT		342291		True				
ANR	342601	Symbol	compare		342291						
ANR	342602	Symbol	offset		342291						
ANR	342603	Symbol	* end_stack		342291						
ANR	342604	Symbol	siz		342291						
ANR	342605	Symbol	Z_L		342291						
ANR	342606	Symbol	seg2		342291						
ANR	342607	Symbol	seg1		342291						
ANR	342608	Symbol	begin_stack		342291						
ANR	342609	Symbol	swp		342291						
ANR	342610	Symbol	* begin_stack		342291						
ANR	342611	Symbol	end_stack		342291						
ANR	342612	Symbol	loop		342291						
ANR	342613	Symbol	seg2p		342291						
ANR	342614	Symbol	nmemb		342291						
ANR	342615	Symbol	end		342291						
ANR	342616	Symbol	* loop		342291						
ANR	342617	Symbol	begin		342291						
ANR	342618	Symbol	base		342291						
ANR	342619	Function	zend_sort_2	93:0:2710:2846							
ANR	342620	FunctionDef	"zend_sort_2 (void * a , void * b , compare_func_t cmp , swap_func_t swp)"		342619	0					
ANR	342621	CompoundStatement		93:96:2806:2846	342619	0					
ANR	342622	IfStatement	"if ( cmp ( a , b ) > 0 )"		342619	0					
ANR	342623	Condition	"cmp ( a , b ) > 0"	94:5:2813:2825	342619	0	True				
ANR	342624	RelationalExpression	"cmp ( a , b ) > 0"		342619	0		>			
ANR	342625	CallExpression	"cmp ( a , b )"		342619	0					
ANR	342626	Callee	cmp		342619	0					
ANR	342627	Identifier	cmp		342619	0					
ANR	342628	ArgumentList	a		342619	1					
ANR	342629	Argument	a		342619	0					
ANR	342630	Identifier	a		342619	0					
ANR	342631	Argument	b		342619	1					
ANR	342632	Identifier	b		342619	0					
ANR	342633	PrimaryExpression	0		342619	1					
ANR	342634	CompoundStatement		2:20:21:21	342619	1					
ANR	342635	ExpressionStatement	"swp ( a , b )"	95:2:2832:2841	342619	0	True				
ANR	342636	CallExpression	"swp ( a , b )"		342619	0					
ANR	342637	Callee	swp		342619	0					
ANR	342638	Identifier	swp		342619	0					
ANR	342639	ArgumentList	a		342619	1					
ANR	342640	Argument	a		342619	0					
ANR	342641	Identifier	a		342619	0					
ANR	342642	Argument	b		342619	1					
ANR	342643	Identifier	b		342619	0					
ANR	342644	ReturnType	static inline void		342619	1					
ANR	342645	Identifier	zend_sort_2		342619	2					
ANR	342646	ParameterList	"void * a , void * b , compare_func_t cmp , swap_func_t swp"		342619	3					
ANR	342647	Parameter	void * a	93:31:2741:2747	342619	0	True				
ANR	342648	ParameterType	void *		342619	0					
ANR	342649	Identifier	a		342619	1					
ANR	342650	Parameter	void * b	93:40:2750:2756	342619	1	True				
ANR	342651	ParameterType	void *		342619	0					
ANR	342652	Identifier	b		342619	1					
ANR	342653	Parameter	compare_func_t cmp	93:49:2759:2776	342619	2	True				
ANR	342654	ParameterType	compare_func_t		342619	0					
ANR	342655	Identifier	cmp		342619	1					
ANR	342656	Parameter	swap_func_t swp	93:69:2779:2793	342619	3	True				
ANR	342657	ParameterType	swap_func_t		342619	0					
ANR	342658	Identifier	swp		342619	1					
ANR	342659	CFGEntryNode	ENTRY		342619		True				
ANR	342660	CFGExitNode	EXIT		342619		True				
ANR	342661	Symbol	a		342619						
ANR	342662	Symbol	b		342619						
ANR	342663	Symbol	cmp		342619						
ANR	342664	Symbol	swp		342619						
ANR	342665	Function	zend_sort_3	100:0:2859:3200							
ANR	342666	FunctionDef	"zend_sort_3 (void * a , void * b , void * c , compare_func_t cmp , swap_func_t swp)"		342665	0					
ANR	342667	CompoundStatement		100:105:2964:3200	342665	0					
ANR	342668	IfStatement	"if ( ! ( cmp ( a , b ) > 0 ) )"		342665	0					
ANR	342669	Condition	"! ( cmp ( a , b ) > 0 )"	101:5:2971:2986	342665	0	True				
ANR	342670	UnaryOperationExpression	"! ( cmp ( a , b ) > 0 )"		342665	0					
ANR	342671	UnaryOperator	!		342665	0					
ANR	342672	RelationalExpression	"cmp ( a , b ) > 0"		342665	1		>			
ANR	342673	CallExpression	"cmp ( a , b )"		342665	0					
ANR	342674	Callee	cmp		342665	0					
ANR	342675	Identifier	cmp		342665	0					
ANR	342676	ArgumentList	a		342665	1					
ANR	342677	Argument	a		342665	0					
ANR	342678	Identifier	a		342665	0					
ANR	342679	Argument	b		342665	1					
ANR	342680	Identifier	b		342665	0					
ANR	342681	PrimaryExpression	0		342665	1					
ANR	342682	CompoundStatement		2:23:24:24	342665	1					
ANR	342683	IfStatement	"if ( ! ( cmp ( b , c ) > 0 ) )"		342665	0					
ANR	342684	Condition	"! ( cmp ( b , c ) > 0 )"	102:6:2997:3012	342665	0	True				
ANR	342685	UnaryOperationExpression	"! ( cmp ( b , c ) > 0 )"		342665	0					
ANR	342686	UnaryOperator	!		342665	0					
ANR	342687	RelationalExpression	"cmp ( b , c ) > 0"		342665	1		>			
ANR	342688	CallExpression	"cmp ( b , c )"		342665	0					
ANR	342689	Callee	cmp		342665	0					
ANR	342690	Identifier	cmp		342665	0					
ANR	342691	ArgumentList	b		342665	1					
ANR	342692	Argument	b		342665	0					
ANR	342693	Identifier	b		342665	0					
ANR	342694	Argument	c		342665	1					
ANR	342695	Identifier	c		342665	0					
ANR	342696	PrimaryExpression	0		342665	1					
ANR	342697	CompoundStatement		3:24:50:50	342665	1					
ANR	342698	ReturnStatement	return ;	103:3:3020:3026	342665	0	True				
ANR	342699	ExpressionStatement	"swp ( b , c )"	105:2:3034:3043	342665	1	True				
ANR	342700	CallExpression	"swp ( b , c )"		342665	0					
ANR	342701	Callee	swp		342665	0					
ANR	342702	Identifier	swp		342665	0					
ANR	342703	ArgumentList	b		342665	1					
ANR	342704	Argument	b		342665	0					
ANR	342705	Identifier	b		342665	0					
ANR	342706	Argument	c		342665	1					
ANR	342707	Identifier	c		342665	0					
ANR	342708	IfStatement	"if ( cmp ( a , b ) > 0 )"		342665	2					
ANR	342709	Condition	"cmp ( a , b ) > 0"	106:6:3051:3063	342665	0	True				
ANR	342710	RelationalExpression	"cmp ( a , b ) > 0"		342665	0		>			
ANR	342711	CallExpression	"cmp ( a , b )"		342665	0					
ANR	342712	Callee	cmp		342665	0					
ANR	342713	Identifier	cmp		342665	0					
ANR	342714	ArgumentList	a		342665	1					
ANR	342715	Argument	a		342665	0					
ANR	342716	Identifier	a		342665	0					
ANR	342717	Argument	b		342665	1					
ANR	342718	Identifier	b		342665	0					
ANR	342719	PrimaryExpression	0		342665	1					
ANR	342720	CompoundStatement		7:21:101:101	342665	1					
ANR	342721	ExpressionStatement	"swp ( a , b )"	107:3:3071:3080	342665	0	True				
ANR	342722	CallExpression	"swp ( a , b )"		342665	0					
ANR	342723	Callee	swp		342665	0					
ANR	342724	Identifier	swp		342665	0					
ANR	342725	ArgumentList	a		342665	1					
ANR	342726	Argument	a		342665	0					
ANR	342727	Identifier	a		342665	0					
ANR	342728	Argument	b		342665	1					
ANR	342729	Identifier	b		342665	0					
ANR	342730	ReturnStatement	return ;	109:2:3088:3094	342665	3	True				
ANR	342731	IfStatement	"if ( ! ( cmp ( c , b ) > 0 ) )"		342665	1					
ANR	342732	Condition	"! ( cmp ( c , b ) > 0 )"	111:5:3104:3119	342665	0	True				
ANR	342733	UnaryOperationExpression	"! ( cmp ( c , b ) > 0 )"		342665	0					
ANR	342734	UnaryOperator	!		342665	0					
ANR	342735	RelationalExpression	"cmp ( c , b ) > 0"		342665	1		>			
ANR	342736	CallExpression	"cmp ( c , b )"		342665	0					
ANR	342737	Callee	cmp		342665	0					
ANR	342738	Identifier	cmp		342665	0					
ANR	342739	ArgumentList	c		342665	1					
ANR	342740	Argument	c		342665	0					
ANR	342741	Identifier	c		342665	0					
ANR	342742	Argument	b		342665	1					
ANR	342743	Identifier	b		342665	0					
ANR	342744	PrimaryExpression	0		342665	1					
ANR	342745	CompoundStatement		12:23:157:157	342665	1					
ANR	342746	ExpressionStatement	"swp ( a , c )"	112:2:3126:3135	342665	0	True				
ANR	342747	CallExpression	"swp ( a , c )"		342665	0					
ANR	342748	Callee	swp		342665	0					
ANR	342749	Identifier	swp		342665	0					
ANR	342750	ArgumentList	a		342665	1					
ANR	342751	Argument	a		342665	0					
ANR	342752	Identifier	a		342665	0					
ANR	342753	Argument	c		342665	1					
ANR	342754	Identifier	c		342665	0					
ANR	342755	ReturnStatement	return ;	113:2:3139:3145	342665	1	True				
ANR	342756	ExpressionStatement	"swp ( a , b )"	115:1:3151:3160	342665	2	True				
ANR	342757	CallExpression	"swp ( a , b )"		342665	0					
ANR	342758	Callee	swp		342665	0					
ANR	342759	Identifier	swp		342665	0					
ANR	342760	ArgumentList	a		342665	1					
ANR	342761	Argument	a		342665	0					
ANR	342762	Identifier	a		342665	0					
ANR	342763	Argument	b		342665	1					
ANR	342764	Identifier	b		342665	0					
ANR	342765	IfStatement	"if ( cmp ( b , c ) > 0 )"		342665	3					
ANR	342766	Condition	"cmp ( b , c ) > 0"	116:5:3167:3179	342665	0	True				
ANR	342767	RelationalExpression	"cmp ( b , c ) > 0"		342665	0		>			
ANR	342768	CallExpression	"cmp ( b , c )"		342665	0					
ANR	342769	Callee	cmp		342665	0					
ANR	342770	Identifier	cmp		342665	0					
ANR	342771	ArgumentList	b		342665	1					
ANR	342772	Argument	b		342665	0					
ANR	342773	Identifier	b		342665	0					
ANR	342774	Argument	c		342665	1					
ANR	342775	Identifier	c		342665	0					
ANR	342776	PrimaryExpression	0		342665	1					
ANR	342777	CompoundStatement		17:20:217:217	342665	1					
ANR	342778	ExpressionStatement	"swp ( b , c )"	117:2:3186:3195	342665	0	True				
ANR	342779	CallExpression	"swp ( b , c )"		342665	0					
ANR	342780	Callee	swp		342665	0					
ANR	342781	Identifier	swp		342665	0					
ANR	342782	ArgumentList	b		342665	1					
ANR	342783	Argument	b		342665	0					
ANR	342784	Identifier	b		342665	0					
ANR	342785	Argument	c		342665	1					
ANR	342786	Identifier	c		342665	0					
ANR	342787	ReturnType	static inline void		342665	1					
ANR	342788	Identifier	zend_sort_3		342665	2					
ANR	342789	ParameterList	"void * a , void * b , void * c , compare_func_t cmp , swap_func_t swp"		342665	3					
ANR	342790	Parameter	void * a	100:31:2890:2896	342665	0	True				
ANR	342791	ParameterType	void *		342665	0					
ANR	342792	Identifier	a		342665	1					
ANR	342793	Parameter	void * b	100:40:2899:2905	342665	1	True				
ANR	342794	ParameterType	void *		342665	0					
ANR	342795	Identifier	b		342665	1					
ANR	342796	Parameter	void * c	100:49:2908:2914	342665	2	True				
ANR	342797	ParameterType	void *		342665	0					
ANR	342798	Identifier	c		342665	1					
ANR	342799	Parameter	compare_func_t cmp	100:58:2917:2934	342665	3	True				
ANR	342800	ParameterType	compare_func_t		342665	0					
ANR	342801	Identifier	cmp		342665	1					
ANR	342802	Parameter	swap_func_t swp	100:78:2937:2951	342665	4	True				
ANR	342803	ParameterType	swap_func_t		342665	0					
ANR	342804	Identifier	swp		342665	1					
ANR	342805	CFGEntryNode	ENTRY		342665		True				
ANR	342806	CFGExitNode	EXIT		342665		True				
ANR	342807	Symbol	a		342665						
ANR	342808	Symbol	b		342665						
ANR	342809	Symbol	c		342665						
ANR	342810	Symbol	cmp		342665						
ANR	342811	Symbol	swp		342665						
ANR	342812	Function	zend_sort_4	122:0:3213:3478							
ANR	342813	FunctionDef	"zend_sort_4 (void * a , void * b , void * c , void * d , compare_func_t cmp , swap_func_t swp)"		342812	0					
ANR	342814	CompoundStatement		122:107:3320:3478	342812	0					
ANR	342815	ExpressionStatement	"zend_sort_3 ( a , b , c , cmp , swp )"	123:1:3323:3353	342812	0	True				
ANR	342816	CallExpression	"zend_sort_3 ( a , b , c , cmp , swp )"		342812	0					
ANR	342817	Callee	zend_sort_3		342812	0					
ANR	342818	Identifier	zend_sort_3		342812	0					
ANR	342819	ArgumentList	a		342812	1					
ANR	342820	Argument	a		342812	0					
ANR	342821	Identifier	a		342812	0					
ANR	342822	Argument	b		342812	1					
ANR	342823	Identifier	b		342812	0					
ANR	342824	Argument	c		342812	2					
ANR	342825	Identifier	c		342812	0					
ANR	342826	Argument	cmp		342812	3					
ANR	342827	Identifier	cmp		342812	0					
ANR	342828	Argument	swp		342812	4					
ANR	342829	Identifier	swp		342812	0					
ANR	342830	IfStatement	"if ( cmp ( c , d ) > 0 )"		342812	1					
ANR	342831	Condition	"cmp ( c , d ) > 0"	124:5:3360:3372	342812	0	True				
ANR	342832	RelationalExpression	"cmp ( c , d ) > 0"		342812	0		>			
ANR	342833	CallExpression	"cmp ( c , d )"		342812	0					
ANR	342834	Callee	cmp		342812	0					
ANR	342835	Identifier	cmp		342812	0					
ANR	342836	ArgumentList	c		342812	1					
ANR	342837	Argument	c		342812	0					
ANR	342838	Identifier	c		342812	0					
ANR	342839	Argument	d		342812	1					
ANR	342840	Identifier	d		342812	0					
ANR	342841	PrimaryExpression	0		342812	1					
ANR	342842	CompoundStatement		3:20:54:54	342812	1					
ANR	342843	ExpressionStatement	"swp ( c , d )"	125:2:3379:3388	342812	0	True				
ANR	342844	CallExpression	"swp ( c , d )"		342812	0					
ANR	342845	Callee	swp		342812	0					
ANR	342846	Identifier	swp		342812	0					
ANR	342847	ArgumentList	c		342812	1					
ANR	342848	Argument	c		342812	0					
ANR	342849	Identifier	c		342812	0					
ANR	342850	Argument	d		342812	1					
ANR	342851	Identifier	d		342812	0					
ANR	342852	IfStatement	"if ( cmp ( b , c ) > 0 )"		342812	1					
ANR	342853	Condition	"cmp ( b , c ) > 0"	126:6:3396:3408	342812	0	True				
ANR	342854	RelationalExpression	"cmp ( b , c ) > 0"		342812	0		>			
ANR	342855	CallExpression	"cmp ( b , c )"		342812	0					
ANR	342856	Callee	cmp		342812	0					
ANR	342857	Identifier	cmp		342812	0					
ANR	342858	ArgumentList	b		342812	1					
ANR	342859	Argument	b		342812	0					
ANR	342860	Identifier	b		342812	0					
ANR	342861	Argument	c		342812	1					
ANR	342862	Identifier	c		342812	0					
ANR	342863	PrimaryExpression	0		342812	1					
ANR	342864	CompoundStatement		5:21:90:90	342812	1					
ANR	342865	ExpressionStatement	"swp ( b , c )"	127:3:3416:3425	342812	0	True				
ANR	342866	CallExpression	"swp ( b , c )"		342812	0					
ANR	342867	Callee	swp		342812	0					
ANR	342868	Identifier	swp		342812	0					
ANR	342869	ArgumentList	b		342812	1					
ANR	342870	Argument	b		342812	0					
ANR	342871	Identifier	b		342812	0					
ANR	342872	Argument	c		342812	1					
ANR	342873	Identifier	c		342812	0					
ANR	342874	IfStatement	"if ( cmp ( a , b ) > 0 )"		342812	1					
ANR	342875	Condition	"cmp ( a , b ) > 0"	128:7:3434:3446	342812	0	True				
ANR	342876	RelationalExpression	"cmp ( a , b ) > 0"		342812	0		>			
ANR	342877	CallExpression	"cmp ( a , b )"		342812	0					
ANR	342878	Callee	cmp		342812	0					
ANR	342879	Identifier	cmp		342812	0					
ANR	342880	ArgumentList	a		342812	1					
ANR	342881	Argument	a		342812	0					
ANR	342882	Identifier	a		342812	0					
ANR	342883	Argument	b		342812	1					
ANR	342884	Identifier	b		342812	0					
ANR	342885	PrimaryExpression	0		342812	1					
ANR	342886	CompoundStatement		7:22:128:128	342812	1					
ANR	342887	ExpressionStatement	"swp ( a , b )"	129:4:3455:3464	342812	0	True				
ANR	342888	CallExpression	"swp ( a , b )"		342812	0					
ANR	342889	Callee	swp		342812	0					
ANR	342890	Identifier	swp		342812	0					
ANR	342891	ArgumentList	a		342812	1					
ANR	342892	Argument	a		342812	0					
ANR	342893	Identifier	a		342812	0					
ANR	342894	Argument	b		342812	1					
ANR	342895	Identifier	b		342812	0					
ANR	342896	ReturnType	static void		342812	1					
ANR	342897	Identifier	zend_sort_4		342812	2					
ANR	342898	ParameterList	"void * a , void * b , void * c , void * d , compare_func_t cmp , swap_func_t swp"		342812	3					
ANR	342899	Parameter	void * a	122:24:3237:3243	342812	0	True				
ANR	342900	ParameterType	void *		342812	0					
ANR	342901	Identifier	a		342812	1					
ANR	342902	Parameter	void * b	122:33:3246:3252	342812	1	True				
ANR	342903	ParameterType	void *		342812	0					
ANR	342904	Identifier	b		342812	1					
ANR	342905	Parameter	void * c	122:42:3255:3261	342812	2	True				
ANR	342906	ParameterType	void *		342812	0					
ANR	342907	Identifier	c		342812	1					
ANR	342908	Parameter	void * d	122:51:3264:3270	342812	3	True				
ANR	342909	ParameterType	void *		342812	0					
ANR	342910	Identifier	d		342812	1					
ANR	342911	Parameter	compare_func_t cmp	122:60:3273:3290	342812	4	True				
ANR	342912	ParameterType	compare_func_t		342812	0					
ANR	342913	Identifier	cmp		342812	1					
ANR	342914	Parameter	swap_func_t swp	122:80:3293:3307	342812	5	True				
ANR	342915	ParameterType	swap_func_t		342812	0					
ANR	342916	Identifier	swp		342812	1					
ANR	342917	CFGEntryNode	ENTRY		342812		True				
ANR	342918	CFGExitNode	EXIT		342812		True				
ANR	342919	Symbol	a		342812						
ANR	342920	Symbol	b		342812						
ANR	342921	Symbol	c		342812						
ANR	342922	Symbol	d		342812						
ANR	342923	Symbol	cmp		342812						
ANR	342924	Symbol	swp		342812						
ANR	342925	Function	zend_sort_5	136:0:3491:3815							
ANR	342926	FunctionDef	"zend_sort_5 (void * a , void * b , void * c , void * d , void * e , compare_func_t cmp , swap_func_t swp)"		342925	0					
ANR	342927	CompoundStatement		136:116:3607:3815	342925	0					
ANR	342928	ExpressionStatement	"zend_sort_4 ( a , b , c , d , cmp , swp )"	137:1:3610:3643	342925	0	True				
ANR	342929	CallExpression	"zend_sort_4 ( a , b , c , d , cmp , swp )"		342925	0					
ANR	342930	Callee	zend_sort_4		342925	0					
ANR	342931	Identifier	zend_sort_4		342925	0					
ANR	342932	ArgumentList	a		342925	1					
ANR	342933	Argument	a		342925	0					
ANR	342934	Identifier	a		342925	0					
ANR	342935	Argument	b		342925	1					
ANR	342936	Identifier	b		342925	0					
ANR	342937	Argument	c		342925	2					
ANR	342938	Identifier	c		342925	0					
ANR	342939	Argument	d		342925	3					
ANR	342940	Identifier	d		342925	0					
ANR	342941	Argument	cmp		342925	4					
ANR	342942	Identifier	cmp		342925	0					
ANR	342943	Argument	swp		342925	5					
ANR	342944	Identifier	swp		342925	0					
ANR	342945	IfStatement	"if ( cmp ( d , e ) > 0 )"		342925	1					
ANR	342946	Condition	"cmp ( d , e ) > 0"	138:5:3650:3662	342925	0	True				
ANR	342947	RelationalExpression	"cmp ( d , e ) > 0"		342925	0		>			
ANR	342948	CallExpression	"cmp ( d , e )"		342925	0					
ANR	342949	Callee	cmp		342925	0					
ANR	342950	Identifier	cmp		342925	0					
ANR	342951	ArgumentList	d		342925	1					
ANR	342952	Argument	d		342925	0					
ANR	342953	Identifier	d		342925	0					
ANR	342954	Argument	e		342925	1					
ANR	342955	Identifier	e		342925	0					
ANR	342956	PrimaryExpression	0		342925	1					
ANR	342957	CompoundStatement		3:20:57:57	342925	1					
ANR	342958	ExpressionStatement	"swp ( d , e )"	139:2:3669:3678	342925	0	True				
ANR	342959	CallExpression	"swp ( d , e )"		342925	0					
ANR	342960	Callee	swp		342925	0					
ANR	342961	Identifier	swp		342925	0					
ANR	342962	ArgumentList	d		342925	1					
ANR	342963	Argument	d		342925	0					
ANR	342964	Identifier	d		342925	0					
ANR	342965	Argument	e		342925	1					
ANR	342966	Identifier	e		342925	0					
ANR	342967	IfStatement	"if ( cmp ( c , d ) > 0 )"		342925	1					
ANR	342968	Condition	"cmp ( c , d ) > 0"	140:6:3686:3698	342925	0	True				
ANR	342969	RelationalExpression	"cmp ( c , d ) > 0"		342925	0		>			
ANR	342970	CallExpression	"cmp ( c , d )"		342925	0					
ANR	342971	Callee	cmp		342925	0					
ANR	342972	Identifier	cmp		342925	0					
ANR	342973	ArgumentList	c		342925	1					
ANR	342974	Argument	c		342925	0					
ANR	342975	Identifier	c		342925	0					
ANR	342976	Argument	d		342925	1					
ANR	342977	Identifier	d		342925	0					
ANR	342978	PrimaryExpression	0		342925	1					
ANR	342979	CompoundStatement		5:21:93:93	342925	1					
ANR	342980	ExpressionStatement	"swp ( c , d )"	141:3:3706:3715	342925	0	True				
ANR	342981	CallExpression	"swp ( c , d )"		342925	0					
ANR	342982	Callee	swp		342925	0					
ANR	342983	Identifier	swp		342925	0					
ANR	342984	ArgumentList	c		342925	1					
ANR	342985	Argument	c		342925	0					
ANR	342986	Identifier	c		342925	0					
ANR	342987	Argument	d		342925	1					
ANR	342988	Identifier	d		342925	0					
ANR	342989	IfStatement	"if ( cmp ( b , c ) > 0 )"		342925	1					
ANR	342990	Condition	"cmp ( b , c ) > 0"	142:7:3724:3736	342925	0	True				
ANR	342991	RelationalExpression	"cmp ( b , c ) > 0"		342925	0		>			
ANR	342992	CallExpression	"cmp ( b , c )"		342925	0					
ANR	342993	Callee	cmp		342925	0					
ANR	342994	Identifier	cmp		342925	0					
ANR	342995	ArgumentList	b		342925	1					
ANR	342996	Argument	b		342925	0					
ANR	342997	Identifier	b		342925	0					
ANR	342998	Argument	c		342925	1					
ANR	342999	Identifier	c		342925	0					
ANR	343000	PrimaryExpression	0		342925	1					
ANR	343001	CompoundStatement		7:22:131:131	342925	1					
ANR	343002	ExpressionStatement	"swp ( b , c )"	143:4:3745:3754	342925	0	True				
ANR	343003	CallExpression	"swp ( b , c )"		342925	0					
ANR	343004	Callee	swp		342925	0					
ANR	343005	Identifier	swp		342925	0					
ANR	343006	ArgumentList	b		342925	1					
ANR	343007	Argument	b		342925	0					
ANR	343008	Identifier	b		342925	0					
ANR	343009	Argument	c		342925	1					
ANR	343010	Identifier	c		342925	0					
ANR	343011	IfStatement	"if ( cmp ( a , b ) > 0 )"		342925	1					
ANR	343012	Condition	"cmp ( a , b ) > 0"	144:8:3764:3776	342925	0	True				
ANR	343013	RelationalExpression	"cmp ( a , b ) > 0"		342925	0		>			
ANR	343014	CallExpression	"cmp ( a , b )"		342925	0					
ANR	343015	Callee	cmp		342925	0					
ANR	343016	Identifier	cmp		342925	0					
ANR	343017	ArgumentList	a		342925	1					
ANR	343018	Argument	a		342925	0					
ANR	343019	Identifier	a		342925	0					
ANR	343020	Argument	b		342925	1					
ANR	343021	Identifier	b		342925	0					
ANR	343022	PrimaryExpression	0		342925	1					
ANR	343023	CompoundStatement		9:23:171:171	342925	1					
ANR	343024	ExpressionStatement	"swp ( a , b )"	145:5:3786:3795	342925	0	True				
ANR	343025	CallExpression	"swp ( a , b )"		342925	0					
ANR	343026	Callee	swp		342925	0					
ANR	343027	Identifier	swp		342925	0					
ANR	343028	ArgumentList	a		342925	1					
ANR	343029	Argument	a		342925	0					
ANR	343030	Identifier	a		342925	0					
ANR	343031	Argument	b		342925	1					
ANR	343032	Identifier	b		342925	0					
ANR	343033	ReturnType	static void		342925	1					
ANR	343034	Identifier	zend_sort_5		342925	2					
ANR	343035	ParameterList	"void * a , void * b , void * c , void * d , void * e , compare_func_t cmp , swap_func_t swp"		342925	3					
ANR	343036	Parameter	void * a	136:24:3515:3521	342925	0	True				
ANR	343037	ParameterType	void *		342925	0					
ANR	343038	Identifier	a		342925	1					
ANR	343039	Parameter	void * b	136:33:3524:3530	342925	1	True				
ANR	343040	ParameterType	void *		342925	0					
ANR	343041	Identifier	b		342925	1					
ANR	343042	Parameter	void * c	136:42:3533:3539	342925	2	True				
ANR	343043	ParameterType	void *		342925	0					
ANR	343044	Identifier	c		342925	1					
ANR	343045	Parameter	void * d	136:51:3542:3548	342925	3	True				
ANR	343046	ParameterType	void *		342925	0					
ANR	343047	Identifier	d		342925	1					
ANR	343048	Parameter	void * e	136:60:3551:3557	342925	4	True				
ANR	343049	ParameterType	void *		342925	0					
ANR	343050	Identifier	e		342925	1					
ANR	343051	Parameter	compare_func_t cmp	136:69:3560:3577	342925	5	True				
ANR	343052	ParameterType	compare_func_t		342925	0					
ANR	343053	Identifier	cmp		342925	1					
ANR	343054	Parameter	swap_func_t swp	136:89:3580:3594	342925	6	True				
ANR	343055	ParameterType	swap_func_t		342925	0					
ANR	343056	Identifier	swp		342925	1					
ANR	343057	CFGEntryNode	ENTRY		342925		True				
ANR	343058	CFGExitNode	EXIT		342925		True				
ANR	343059	Symbol	a		342925						
ANR	343060	Symbol	b		342925						
ANR	343061	Symbol	c		342925						
ANR	343062	Symbol	d		342925						
ANR	343063	Symbol	e		342925						
ANR	343064	Symbol	cmp		342925						
ANR	343065	Symbol	swp		342925						
ANR	343066	Function	zend_insert_sort	153:0:3828:5539							
ANR	343067	FunctionDef	"zend_insert_sort (void * base , size_t nmemb , size_t siz , compare_func_t cmp , swap_func_t swp)"		343066	0					
ANR	343068	CompoundStatement		153:115:3943:5539	343066	0					
ANR	343069	SwitchStatement	switch ( nmemb )		343066	0					
ANR	343070	Condition	nmemb	154:9:3954:3958	343066	0	True				
ANR	343071	Identifier	nmemb		343066	0					
ANR	343072	CompoundStatement		2:16:17:17	343066	1					
ANR	343073	Label	case 0 :	155:2:3965:3971	343066	0	True				
ANR	343074	Label	case 1 :	156:2:3975:3981	343066	1	True				
ANR	343075	BreakStatement	break ;	157:3:3986:3991	343066	2	True				
ANR	343076	Label	case 2 :	158:2:3995:4001	343066	3	True				
ANR	343077	ExpressionStatement	"zend_sort_2 ( base , ( char * ) base + siz , cmp , swp )"	159:3:4006:4053	343066	4	True				
ANR	343078	CallExpression	"zend_sort_2 ( base , ( char * ) base + siz , cmp , swp )"		343066	0					
ANR	343079	Callee	zend_sort_2		343066	0					
ANR	343080	Identifier	zend_sort_2		343066	0					
ANR	343081	ArgumentList	base		343066	1					
ANR	343082	Argument	base		343066	0					
ANR	343083	Identifier	base		343066	0					
ANR	343084	Argument	( char * ) base + siz		343066	1					
ANR	343085	AdditiveExpression	( char * ) base + siz		343066	0		+			
ANR	343086	CastExpression	( char * ) base		343066	0					
ANR	343087	CastTarget	char *		343066	0					
ANR	343088	Identifier	base		343066	1					
ANR	343089	Identifier	siz		343066	1					
ANR	343090	Argument	cmp		343066	2					
ANR	343091	Identifier	cmp		343066	0					
ANR	343092	Argument	swp		343066	3					
ANR	343093	Identifier	swp		343066	0					
ANR	343094	BreakStatement	break ;	160:3:4058:4063	343066	5	True				
ANR	343095	Label	case 3 :	161:2:4067:4073	343066	6	True				
ANR	343096	ExpressionStatement	"zend_sort_3 ( base , ( char * ) base + siz , ( char * ) base + siz + siz , cmp , swp )"	162:3:4078:4151	343066	7	True				
ANR	343097	CallExpression	"zend_sort_3 ( base , ( char * ) base + siz , ( char * ) base + siz + siz , cmp , swp )"		343066	0					
ANR	343098	Callee	zend_sort_3		343066	0					
ANR	343099	Identifier	zend_sort_3		343066	0					
ANR	343100	ArgumentList	base		343066	1					
ANR	343101	Argument	base		343066	0					
ANR	343102	Identifier	base		343066	0					
ANR	343103	Argument	( char * ) base + siz		343066	1					
ANR	343104	AdditiveExpression	( char * ) base + siz		343066	0		+			
ANR	343105	CastExpression	( char * ) base		343066	0					
ANR	343106	CastTarget	char *		343066	0					
ANR	343107	Identifier	base		343066	1					
ANR	343108	Identifier	siz		343066	1					
ANR	343109	Argument	( char * ) base + siz + siz		343066	2					
ANR	343110	AdditiveExpression	( char * ) base + siz + siz		343066	0		+			
ANR	343111	CastExpression	( char * ) base		343066	0					
ANR	343112	CastTarget	char *		343066	0					
ANR	343113	Identifier	base		343066	1					
ANR	343114	AdditiveExpression	siz + siz		343066	1		+			
ANR	343115	Identifier	siz		343066	0					
ANR	343116	Identifier	siz		343066	1					
ANR	343117	Argument	cmp		343066	3					
ANR	343118	Identifier	cmp		343066	0					
ANR	343119	Argument	swp		343066	4					
ANR	343120	Identifier	swp		343066	0					
ANR	343121	BreakStatement	break ;	163:3:4156:4161	343066	8	True				
ANR	343122	Label	case 4 :	164:2:4165:4171	343066	9	True				
ANR	343123	CompoundStatement		14:4:238:261	343066	10					
ANR	343124	IdentifierDeclStatement	size_t siz2 = siz + siz ;	166:4:4182:4205	343066	0	True				
ANR	343125	IdentifierDecl	siz2 = siz + siz		343066	0					
ANR	343126	IdentifierDeclType	size_t		343066	0					
ANR	343127	Identifier	siz2		343066	1					
ANR	343128	AssignmentExpression	siz2 = siz + siz		343066	2		=			
ANR	343129	Identifier	siz2		343066	0					
ANR	343130	AdditiveExpression	siz + siz		343066	1		+			
ANR	343131	Identifier	siz		343066	0					
ANR	343132	Identifier	siz		343066	1					
ANR	343133	ExpressionStatement	"zend_sort_4 ( base , ( char * ) base + siz , ( char * ) base + siz2 , ( char * ) base + siz + siz2 , cmp , swp )"	167:4:4211:4306	343066	1	True				
ANR	343134	CallExpression	"zend_sort_4 ( base , ( char * ) base + siz , ( char * ) base + siz2 , ( char * ) base + siz + siz2 , cmp , swp )"		343066	0					
ANR	343135	Callee	zend_sort_4		343066	0					
ANR	343136	Identifier	zend_sort_4		343066	0					
ANR	343137	ArgumentList	base		343066	1					
ANR	343138	Argument	base		343066	0					
ANR	343139	Identifier	base		343066	0					
ANR	343140	Argument	( char * ) base + siz		343066	1					
ANR	343141	AdditiveExpression	( char * ) base + siz		343066	0		+			
ANR	343142	CastExpression	( char * ) base		343066	0					
ANR	343143	CastTarget	char *		343066	0					
ANR	343144	Identifier	base		343066	1					
ANR	343145	Identifier	siz		343066	1					
ANR	343146	Argument	( char * ) base + siz2		343066	2					
ANR	343147	AdditiveExpression	( char * ) base + siz2		343066	0		+			
ANR	343148	CastExpression	( char * ) base		343066	0					
ANR	343149	CastTarget	char *		343066	0					
ANR	343150	Identifier	base		343066	1					
ANR	343151	Identifier	siz2		343066	1					
ANR	343152	Argument	( char * ) base + siz + siz2		343066	3					
ANR	343153	AdditiveExpression	( char * ) base + siz + siz2		343066	0		+			
ANR	343154	CastExpression	( char * ) base		343066	0					
ANR	343155	CastTarget	char *		343066	0					
ANR	343156	Identifier	base		343066	1					
ANR	343157	AdditiveExpression	siz + siz2		343066	1		+			
ANR	343158	Identifier	siz		343066	0					
ANR	343159	Identifier	siz2		343066	1					
ANR	343160	Argument	cmp		343066	4					
ANR	343161	Identifier	cmp		343066	0					
ANR	343162	Argument	swp		343066	5					
ANR	343163	Identifier	swp		343066	0					
ANR	343164	BreakStatement	break ;	169:3:4316:4321	343066	11	True				
ANR	343165	Label	case 5 :	170:2:4325:4331	343066	12	True				
ANR	343166	CompoundStatement		20:4:398:421	343066	13					
ANR	343167	IdentifierDeclStatement	size_t siz2 = siz + siz ;	172:4:4342:4365	343066	0	True				
ANR	343168	IdentifierDecl	siz2 = siz + siz		343066	0					
ANR	343169	IdentifierDeclType	size_t		343066	0					
ANR	343170	Identifier	siz2		343066	1					
ANR	343171	AssignmentExpression	siz2 = siz + siz		343066	2		=			
ANR	343172	Identifier	siz2		343066	0					
ANR	343173	AdditiveExpression	siz + siz		343066	1		+			
ANR	343174	Identifier	siz		343066	0					
ANR	343175	Identifier	siz		343066	1					
ANR	343176	ExpressionStatement	"zend_sort_5 ( base , ( char * ) base + siz , ( char * ) base + siz2 , ( char * ) base + siz + siz2 , ( char * ) base + siz2 + siz2 , cmp , swp )"	173:4:4371:4494	343066	1	True				
ANR	343177	CallExpression	"zend_sort_5 ( base , ( char * ) base + siz , ( char * ) base + siz2 , ( char * ) base + siz + siz2 , ( char * ) base + siz2 + siz2 , cmp , swp )"		343066	0					
ANR	343178	Callee	zend_sort_5		343066	0					
ANR	343179	Identifier	zend_sort_5		343066	0					
ANR	343180	ArgumentList	base		343066	1					
ANR	343181	Argument	base		343066	0					
ANR	343182	Identifier	base		343066	0					
ANR	343183	Argument	( char * ) base + siz		343066	1					
ANR	343184	AdditiveExpression	( char * ) base + siz		343066	0		+			
ANR	343185	CastExpression	( char * ) base		343066	0					
ANR	343186	CastTarget	char *		343066	0					
ANR	343187	Identifier	base		343066	1					
ANR	343188	Identifier	siz		343066	1					
ANR	343189	Argument	( char * ) base + siz2		343066	2					
ANR	343190	AdditiveExpression	( char * ) base + siz2		343066	0		+			
ANR	343191	CastExpression	( char * ) base		343066	0					
ANR	343192	CastTarget	char *		343066	0					
ANR	343193	Identifier	base		343066	1					
ANR	343194	Identifier	siz2		343066	1					
ANR	343195	Argument	( char * ) base + siz + siz2		343066	3					
ANR	343196	AdditiveExpression	( char * ) base + siz + siz2		343066	0		+			
ANR	343197	CastExpression	( char * ) base		343066	0					
ANR	343198	CastTarget	char *		343066	0					
ANR	343199	Identifier	base		343066	1					
ANR	343200	AdditiveExpression	siz + siz2		343066	1		+			
ANR	343201	Identifier	siz		343066	0					
ANR	343202	Identifier	siz2		343066	1					
ANR	343203	Argument	( char * ) base + siz2 + siz2		343066	4					
ANR	343204	AdditiveExpression	( char * ) base + siz2 + siz2		343066	0		+			
ANR	343205	CastExpression	( char * ) base		343066	0					
ANR	343206	CastTarget	char *		343066	0					
ANR	343207	Identifier	base		343066	1					
ANR	343208	AdditiveExpression	siz2 + siz2		343066	1		+			
ANR	343209	Identifier	siz2		343066	0					
ANR	343210	Identifier	siz2		343066	1					
ANR	343211	Argument	cmp		343066	5					
ANR	343212	Identifier	cmp		343066	0					
ANR	343213	Argument	swp		343066	6					
ANR	343214	Identifier	swp		343066	0					
ANR	343215	BreakStatement	break ;	175:3:4504:4509	343066	14	True				
ANR	343216	Label	default :	176:2:4513:4520	343066	15	True				
ANR	343217	Identifier	default		343066	0					
ANR	343218	CompoundStatement		30:4:707:739	343066	16					
ANR	343219	IdentifierDeclStatement	"char * i , * j , * k ;"	178:4:4531:4546	343066	0	True				
ANR	343220	IdentifierDecl	* i		343066	0					
ANR	343221	IdentifierDeclType	char *		343066	0					
ANR	343222	Identifier	i		343066	1					
ANR	343223	IdentifierDecl	* j		343066	1					
ANR	343224	IdentifierDeclType	char *		343066	0					
ANR	343225	Identifier	j		343066	1					
ANR	343226	IdentifierDecl	* k		343066	2					
ANR	343227	IdentifierDeclType	char *		343066	0					
ANR	343228	Identifier	k		343066	1					
ANR	343229	IdentifierDeclStatement	char * start = ( char * ) base ;	179:4:4552:4578	343066	1	True				
ANR	343230	IdentifierDecl	* start = ( char * ) base		343066	0					
ANR	343231	IdentifierDeclType	char *		343066	0					
ANR	343232	Identifier	start		343066	1					
ANR	343233	AssignmentExpression	* start = ( char * ) base		343066	2		=			
ANR	343234	Identifier	start		343066	0					
ANR	343235	CastExpression	( char * ) base		343066	1					
ANR	343236	CastTarget	char *		343066	0					
ANR	343237	Identifier	base		343066	1					
ANR	343238	IdentifierDeclStatement	char * end = start + ( nmemb * siz ) ;	180:4:4584:4617	343066	2	True				
ANR	343239	IdentifierDecl	* end = start + ( nmemb * siz )		343066	0					
ANR	343240	IdentifierDeclType	char *		343066	0					
ANR	343241	Identifier	end		343066	1					
ANR	343242	AssignmentExpression	* end = start + ( nmemb * siz )		343066	2		=			
ANR	343243	Identifier	end		343066	0					
ANR	343244	AdditiveExpression	start + ( nmemb * siz )		343066	1		+			
ANR	343245	Identifier	start		343066	0					
ANR	343246	MultiplicativeExpression	nmemb * siz		343066	1		*			
ANR	343247	Identifier	nmemb		343066	0					
ANR	343248	Identifier	siz		343066	1					
ANR	343249	IdentifierDeclStatement	size_t siz2 = siz + siz ;	181:4:4623:4645	343066	3	True				
ANR	343250	IdentifierDecl	siz2 = siz + siz		343066	0					
ANR	343251	IdentifierDeclType	size_t		343066	0					
ANR	343252	Identifier	siz2		343066	1					
ANR	343253	AssignmentExpression	siz2 = siz + siz		343066	2		=			
ANR	343254	Identifier	siz2		343066	0					
ANR	343255	AdditiveExpression	siz + siz		343066	1		+			
ANR	343256	Identifier	siz		343066	0					
ANR	343257	Identifier	siz		343066	1					
ANR	343258	IdentifierDeclStatement	char * sentry = start + ( 6 * siz ) ;	182:4:4651:4683	343066	4	True				
ANR	343259	IdentifierDecl	* sentry = start + ( 6 * siz )		343066	0					
ANR	343260	IdentifierDeclType	char *		343066	0					
ANR	343261	Identifier	sentry		343066	1					
ANR	343262	AssignmentExpression	* sentry = start + ( 6 * siz )		343066	2		=			
ANR	343263	Identifier	sentry		343066	0					
ANR	343264	AdditiveExpression	start + ( 6 * siz )		343066	1		+			
ANR	343265	Identifier	start		343066	0					
ANR	343266	MultiplicativeExpression	6 * siz		343066	1		*			
ANR	343267	PrimaryExpression	6		343066	0					
ANR	343268	Identifier	siz		343066	1					
ANR	343269	ForStatement	for ( i = start + siz ; i < sentry ; i += siz )		343066	5					
ANR	343270	ForInit	i = start + siz ;	183:9:4694:4709	343066	0	True				
ANR	343271	AssignmentExpression	i = start + siz		343066	0		=			
ANR	343272	Identifier	i		343066	0					
ANR	343273	AdditiveExpression	start + siz		343066	1		+			
ANR	343274	Identifier	start		343066	0					
ANR	343275	Identifier	siz		343066	1					
ANR	343276	Condition	i < sentry	183:26:4711:4720	343066	1	True				
ANR	343277	RelationalExpression	i < sentry		343066	0		<			
ANR	343278	Identifier	i		343066	0					
ANR	343279	Identifier	sentry		343066	1					
ANR	343280	AssignmentExpression	i += siz	183:38:4723:4730	343066	2	True	+=			
ANR	343281	Identifier	i		343066	0					
ANR	343282	Identifier	siz		343066	1					
ANR	343283	CompoundStatement		31:48:789:789	343066	3					
ANR	343284	ExpressionStatement	j = i - siz	184:5:4740:4751	343066	0	True				
ANR	343285	AssignmentExpression	j = i - siz		343066	0		=			
ANR	343286	Identifier	j		343066	0					
ANR	343287	AdditiveExpression	i - siz		343066	1		-			
ANR	343288	Identifier	i		343066	0					
ANR	343289	Identifier	siz		343066	1					
ANR	343290	IfStatement	"if ( ! ( cmp ( j , i ) > 0 ) )"		343066	1					
ANR	343291	Condition	"! ( cmp ( j , i ) > 0 )"	185:9:4762:4777	343066	0	True				
ANR	343292	UnaryOperationExpression	"! ( cmp ( j , i ) > 0 )"		343066	0					
ANR	343293	UnaryOperator	!		343066	0					
ANR	343294	RelationalExpression	"cmp ( j , i ) > 0"		343066	1		>			
ANR	343295	CallExpression	"cmp ( j , i )"		343066	0					
ANR	343296	Callee	cmp		343066	0					
ANR	343297	Identifier	cmp		343066	0					
ANR	343298	ArgumentList	j		343066	1					
ANR	343299	Argument	j		343066	0					
ANR	343300	Identifier	j		343066	0					
ANR	343301	Argument	i		343066	1					
ANR	343302	Identifier	i		343066	0					
ANR	343303	PrimaryExpression	0		343066	1					
ANR	343304	CompoundStatement		33:27:836:836	343066	1					
ANR	343305	ContinueStatement	continue ;	186:6:4788:4796	343066	0	True				
ANR	343306	WhileStatement	while ( j != start )		343066	2					
ANR	343307	Condition	j != start	188:12:4817:4826	343066	0	True				
ANR	343308	EqualityExpression	j != start		343066	0		!=			
ANR	343309	Identifier	j		343066	0					
ANR	343310	Identifier	start		343066	1					
ANR	343311	CompoundStatement		36:24:885:885	343066	1					
ANR	343312	ExpressionStatement	j -= siz	189:6:4837:4845	343066	0	True				
ANR	343313	AssignmentExpression	j -= siz		343066	0		-=			
ANR	343314	Identifier	j		343066	0					
ANR	343315	Identifier	siz		343066	1					
ANR	343316	IfStatement	"if ( ! ( cmp ( j , i ) > 0 ) )"		343066	1					
ANR	343317	Condition	"! ( cmp ( j , i ) > 0 )"	190:10:4857:4872	343066	0	True				
ANR	343318	UnaryOperationExpression	"! ( cmp ( j , i ) > 0 )"		343066	0					
ANR	343319	UnaryOperator	!		343066	0					
ANR	343320	RelationalExpression	"cmp ( j , i ) > 0"		343066	1		>			
ANR	343321	CallExpression	"cmp ( j , i )"		343066	0					
ANR	343322	Callee	cmp		343066	0					
ANR	343323	Identifier	cmp		343066	0					
ANR	343324	ArgumentList	j		343066	1					
ANR	343325	Argument	j		343066	0					
ANR	343326	Identifier	j		343066	0					
ANR	343327	Argument	i		343066	1					
ANR	343328	Identifier	i		343066	0					
ANR	343329	PrimaryExpression	0		343066	1					
ANR	343330	CompoundStatement		38:28:931:931	343066	1					
ANR	343331	ExpressionStatement	j += siz	191:7:4884:4892	343066	0	True				
ANR	343332	AssignmentExpression	j += siz		343066	0		+=			
ANR	343333	Identifier	j		343066	0					
ANR	343334	Identifier	siz		343066	1					
ANR	343335	BreakStatement	break ;	192:7:4901:4906	343066	1	True				
ANR	343336	ForStatement	for ( k = i ; k > j ; k -= siz )		343066	3					
ANR	343337	ForInit	k = i ;	195:10:4933:4938	343066	0	True				
ANR	343338	AssignmentExpression	k = i		343066	0		=			
ANR	343339	Identifier	k		343066	0					
ANR	343340	Identifier	i		343066	1					
ANR	343341	Condition	k > j	195:17:4940:4944	343066	1	True				
ANR	343342	RelationalExpression	k > j		343066	0		>			
ANR	343343	Identifier	k		343066	0					
ANR	343344	Identifier	j		343066	1					
ANR	343345	AssignmentExpression	k -= siz	195:24:4947:4954	343066	2	True	-=			
ANR	343346	Identifier	k		343066	0					
ANR	343347	Identifier	siz		343066	1					
ANR	343348	CompoundStatement		43:34:1013:1013	343066	3					
ANR	343349	ExpressionStatement	"swp ( k , k - siz )"	196:6:4965:4980	343066	0	True				
ANR	343350	CallExpression	"swp ( k , k - siz )"		343066	0					
ANR	343351	Callee	swp		343066	0					
ANR	343352	Identifier	swp		343066	0					
ANR	343353	ArgumentList	k		343066	1					
ANR	343354	Argument	k		343066	0					
ANR	343355	Identifier	k		343066	0					
ANR	343356	Argument	k - siz		343066	1					
ANR	343357	AdditiveExpression	k - siz		343066	0		-			
ANR	343358	Identifier	k		343066	0					
ANR	343359	Identifier	siz		343066	1					
ANR	343360	ForStatement	for ( i = sentry ; i < end ; i += siz )		343066	6					
ANR	343361	ForInit	i = sentry ;	199:9:5004:5014	343066	0	True				
ANR	343362	AssignmentExpression	i = sentry		343066	0		=			
ANR	343363	Identifier	i		343066	0					
ANR	343364	Identifier	sentry		343066	1					
ANR	343365	Condition	i < end	199:21:5016:5022	343066	1	True				
ANR	343366	RelationalExpression	i < end		343066	0		<			
ANR	343367	Identifier	i		343066	0					
ANR	343368	Identifier	end		343066	1					
ANR	343369	AssignmentExpression	i += siz	199:30:5025:5032	343066	2	True	+=			
ANR	343370	Identifier	i		343066	0					
ANR	343371	Identifier	siz		343066	1					
ANR	343372	CompoundStatement		47:40:1091:1091	343066	3					
ANR	343373	ExpressionStatement	j = i - siz	200:5:5042:5053	343066	0	True				
ANR	343374	AssignmentExpression	j = i - siz		343066	0		=			
ANR	343375	Identifier	j		343066	0					
ANR	343376	AdditiveExpression	i - siz		343066	1		-			
ANR	343377	Identifier	i		343066	0					
ANR	343378	Identifier	siz		343066	1					
ANR	343379	IfStatement	"if ( ! ( cmp ( j , i ) > 0 ) )"		343066	1					
ANR	343380	Condition	"! ( cmp ( j , i ) > 0 )"	201:9:5064:5079	343066	0	True				
ANR	343381	UnaryOperationExpression	"! ( cmp ( j , i ) > 0 )"		343066	0					
ANR	343382	UnaryOperator	!		343066	0					
ANR	343383	RelationalExpression	"cmp ( j , i ) > 0"		343066	1		>			
ANR	343384	CallExpression	"cmp ( j , i )"		343066	0					
ANR	343385	Callee	cmp		343066	0					
ANR	343386	Identifier	cmp		343066	0					
ANR	343387	ArgumentList	j		343066	1					
ANR	343388	Argument	j		343066	0					
ANR	343389	Identifier	j		343066	0					
ANR	343390	Argument	i		343066	1					
ANR	343391	Identifier	i		343066	0					
ANR	343392	PrimaryExpression	0		343066	1					
ANR	343393	CompoundStatement		49:27:1138:1138	343066	1					
ANR	343394	ContinueStatement	continue ;	202:6:5090:5098	343066	0	True				
ANR	343395	DoStatement	do		343066	2					
ANR	343396	CompoundStatement		52:8:1171:1171	343066	0					
ANR	343397	ExpressionStatement	j -= siz2	205:6:5123:5132	343066	0	True				
ANR	343398	AssignmentExpression	j -= siz2		343066	0		-=			
ANR	343399	Identifier	j		343066	0					
ANR	343400	Identifier	siz2		343066	1					
ANR	343401	IfStatement	"if ( ! ( cmp ( j , i ) > 0 ) )"		343066	1					
ANR	343402	Condition	"! ( cmp ( j , i ) > 0 )"	206:10:5144:5159	343066	0	True				
ANR	343403	UnaryOperationExpression	"! ( cmp ( j , i ) > 0 )"		343066	0					
ANR	343404	UnaryOperator	!		343066	0					
ANR	343405	RelationalExpression	"cmp ( j , i ) > 0"		343066	1		>			
ANR	343406	CallExpression	"cmp ( j , i )"		343066	0					
ANR	343407	Callee	cmp		343066	0					
ANR	343408	Identifier	cmp		343066	0					
ANR	343409	ArgumentList	j		343066	1					
ANR	343410	Argument	j		343066	0					
ANR	343411	Identifier	j		343066	0					
ANR	343412	Argument	i		343066	1					
ANR	343413	Identifier	i		343066	0					
ANR	343414	PrimaryExpression	0		343066	1					
ANR	343415	CompoundStatement		54:28:1218:1218	343066	1					
ANR	343416	ExpressionStatement	j += siz	207:7:5171:5179	343066	0	True				
ANR	343417	AssignmentExpression	j += siz		343066	0		+=			
ANR	343418	Identifier	j		343066	0					
ANR	343419	Identifier	siz		343066	1					
ANR	343420	IfStatement	"if ( ! ( cmp ( j , i ) > 0 ) )"		343066	1					
ANR	343421	Condition	"! ( cmp ( j , i ) > 0 )"	208:11:5192:5207	343066	0	True				
ANR	343422	UnaryOperationExpression	"! ( cmp ( j , i ) > 0 )"		343066	0					
ANR	343423	UnaryOperator	!		343066	0					
ANR	343424	RelationalExpression	"cmp ( j , i ) > 0"		343066	1		>			
ANR	343425	CallExpression	"cmp ( j , i )"		343066	0					
ANR	343426	Callee	cmp		343066	0					
ANR	343427	Identifier	cmp		343066	0					
ANR	343428	ArgumentList	j		343066	1					
ANR	343429	Argument	j		343066	0					
ANR	343430	Identifier	j		343066	0					
ANR	343431	Argument	i		343066	1					
ANR	343432	Identifier	i		343066	0					
ANR	343433	PrimaryExpression	0		343066	1					
ANR	343434	CompoundStatement		56:29:1266:1266	343066	1					
ANR	343435	ExpressionStatement	j += siz	209:8:5220:5228	343066	0	True				
ANR	343436	AssignmentExpression	j += siz		343066	0		+=			
ANR	343437	Identifier	j		343066	0					
ANR	343438	Identifier	siz		343066	1					
ANR	343439	BreakStatement	break ;	211:7:5246:5251	343066	2	True				
ANR	343440	IfStatement	if ( j == start )		343066	2					
ANR	343441	Condition	j == start	213:10:5271:5280	343066	0	True				
ANR	343442	EqualityExpression	j == start		343066	0		==			
ANR	343443	Identifier	j		343066	0					
ANR	343444	Identifier	start		343066	1					
ANR	343445	CompoundStatement		61:22:1339:1339	343066	1					
ANR	343446	BreakStatement	break ;	214:7:5292:5297	343066	0	True				
ANR	343447	IfStatement	if ( j == start + siz )		343066	3					
ANR	343448	Condition	j == start + siz	216:10:5317:5332	343066	0	True				
ANR	343449	EqualityExpression	j == start + siz		343066	0		==			
ANR	343450	Identifier	j		343066	0					
ANR	343451	AdditiveExpression	start + siz		343066	1		+			
ANR	343452	Identifier	start		343066	0					
ANR	343453	Identifier	siz		343066	1					
ANR	343454	CompoundStatement		64:28:1391:1391	343066	1					
ANR	343455	ExpressionStatement	j -= siz	217:7:5344:5352	343066	0	True				
ANR	343456	AssignmentExpression	j -= siz		343066	0		-=			
ANR	343457	Identifier	j		343066	0					
ANR	343458	Identifier	siz		343066	1					
ANR	343459	IfStatement	"if ( cmp ( i , j ) > 0 )"		343066	1					
ANR	343460	Condition	"cmp ( i , j ) > 0"	218:11:5365:5377	343066	0	True				
ANR	343461	RelationalExpression	"cmp ( i , j ) > 0"		343066	0		>			
ANR	343462	CallExpression	"cmp ( i , j )"		343066	0					
ANR	343463	Callee	cmp		343066	0					
ANR	343464	Identifier	cmp		343066	0					
ANR	343465	ArgumentList	i		343066	1					
ANR	343466	Argument	i		343066	0					
ANR	343467	Identifier	i		343066	0					
ANR	343468	Argument	j		343066	1					
ANR	343469	Identifier	j		343066	0					
ANR	343470	PrimaryExpression	0		343066	1					
ANR	343471	CompoundStatement		66:26:1436:1436	343066	1					
ANR	343472	ExpressionStatement	j += siz	219:8:5390:5398	343066	0	True				
ANR	343473	AssignmentExpression	j += siz		343066	0		+=			
ANR	343474	Identifier	j		343066	0					
ANR	343475	Identifier	siz		343066	1					
ANR	343476	BreakStatement	break ;	221:7:5416:5421	343066	2	True				
ANR	343477	Condition	1	223:14:5445:5445	343066	1	True				
ANR	343478	PrimaryExpression	1		343066	0					
ANR	343479	ForStatement	for ( k = i ; k > j ; k -= siz )		343066	3					
ANR	343480	ForInit	k = i ;	224:10:5459:5464	343066	0	True				
ANR	343481	AssignmentExpression	k = i		343066	0		=			
ANR	343482	Identifier	k		343066	0					
ANR	343483	Identifier	i		343066	1					
ANR	343484	Condition	k > j	224:17:5466:5470	343066	1	True				
ANR	343485	RelationalExpression	k > j		343066	0		>			
ANR	343486	Identifier	k		343066	0					
ANR	343487	Identifier	j		343066	1					
ANR	343488	AssignmentExpression	k -= siz	224:24:5473:5480	343066	2	True	-=			
ANR	343489	Identifier	k		343066	0					
ANR	343490	Identifier	siz		343066	1					
ANR	343491	CompoundStatement		72:34:1539:1539	343066	3					
ANR	343492	ExpressionStatement	"swp ( k , k - siz )"	225:6:5491:5506	343066	0	True				
ANR	343493	CallExpression	"swp ( k , k - siz )"		343066	0					
ANR	343494	Callee	swp		343066	0					
ANR	343495	Identifier	swp		343066	0					
ANR	343496	ArgumentList	k		343066	1					
ANR	343497	Argument	k		343066	0					
ANR	343498	Identifier	k		343066	0					
ANR	343499	Argument	k - siz		343066	1					
ANR	343500	AdditiveExpression	k - siz		343066	0		-			
ANR	343501	Identifier	k		343066	0					
ANR	343502	Identifier	siz		343066	1					
ANR	343503	BreakStatement	break ;	229:3:5529:5534	343066	17	True				
ANR	343504	ReturnType	ZEND_API void		343066	1					
ANR	343505	Identifier	zend_insert_sort		343066	2					
ANR	343506	ParameterList	"void * base , size_t nmemb , size_t siz , compare_func_t cmp , swap_func_t swp"		343066	3					
ANR	343507	Parameter	void * base	153:31:3859:3868	343066	0	True				
ANR	343508	ParameterType	void *		343066	0					
ANR	343509	Identifier	base		343066	1					
ANR	343510	Parameter	size_t nmemb	153:43:3871:3882	343066	1	True				
ANR	343511	ParameterType	size_t		343066	0					
ANR	343512	Identifier	nmemb		343066	1					
ANR	343513	Parameter	size_t siz	153:57:3885:3894	343066	2	True				
ANR	343514	ParameterType	size_t		343066	0					
ANR	343515	Identifier	siz		343066	1					
ANR	343516	Parameter	compare_func_t cmp	153:69:3897:3914	343066	3	True				
ANR	343517	ParameterType	compare_func_t		343066	0					
ANR	343518	Identifier	cmp		343066	1					
ANR	343519	Parameter	swap_func_t swp	153:89:3917:3931	343066	4	True				
ANR	343520	ParameterType	swap_func_t		343066	0					
ANR	343521	Identifier	swp		343066	1					
ANR	343522	CFGEntryNode	ENTRY		343066		True				
ANR	343523	CFGExitNode	EXIT		343066		True				
ANR	343524	Symbol	siz		343066						
ANR	343525	Symbol	cmp		343066						
ANR	343526	Symbol	start		343066						
ANR	343527	Symbol	i		343066						
ANR	343528	Symbol	nmemb		343066						
ANR	343529	Symbol	j		343066						
ANR	343530	Symbol	end		343066						
ANR	343531	Symbol	siz2		343066						
ANR	343532	Symbol	k		343066						
ANR	343533	Symbol	swp		343066						
ANR	343534	Symbol	base		343066						
ANR	343535	Symbol	sentry		343066						
ANR	343536	Function	zend_sort	317:0:9532:10873							
ANR	343537	FunctionDef	"zend_sort (void * base , size_t nmemb , size_t siz , compare_func_t cmp , swap_func_t swp)"		343536	0					
ANR	343538	CompoundStatement		318:0:9631:10873	343536	0					
ANR	343539	WhileStatement	while ( 1 )		343536	0					
ANR	343540	Condition	1	319:8:9641:9641	343536	0	True				
ANR	343541	PrimaryExpression	1		343536	0					
ANR	343542	CompoundStatement		2:11:12:12	343536	1					
ANR	343543	IfStatement	if ( nmemb <= 16 )		343536	0					
ANR	343544	Condition	nmemb <= 16	320:6:9652:9662	343536	0	True				
ANR	343545	RelationalExpression	nmemb <= 16		343536	0		<=			
ANR	343546	Identifier	nmemb		343536	0					
ANR	343547	PrimaryExpression	16		343536	1					
ANR	343548	CompoundStatement		3:19:33:33	343536	1					
ANR	343549	ExpressionStatement	"zend_insert_sort ( base , nmemb , siz , cmp , swp )"	321:3:9670:9714	343536	0	True				
ANR	343550	CallExpression	"zend_insert_sort ( base , nmemb , siz , cmp , swp )"		343536	0					
ANR	343551	Callee	zend_insert_sort		343536	0					
ANR	343552	Identifier	zend_insert_sort		343536	0					
ANR	343553	ArgumentList	base		343536	1					
ANR	343554	Argument	base		343536	0					
ANR	343555	Identifier	base		343536	0					
ANR	343556	Argument	nmemb		343536	1					
ANR	343557	Identifier	nmemb		343536	0					
ANR	343558	Argument	siz		343536	2					
ANR	343559	Identifier	siz		343536	0					
ANR	343560	Argument	cmp		343536	3					
ANR	343561	Identifier	cmp		343536	0					
ANR	343562	Argument	swp		343536	4					
ANR	343563	Identifier	swp		343536	0					
ANR	343564	ReturnStatement	return ;	322:3:9719:9725	343536	1	True				
ANR	343565	ElseStatement	else		343536	0					
ANR	343566	CompoundStatement		11:3:232:268	343536	0					
ANR	343567	IdentifierDeclStatement	"char * i , * j ;"	324:3:9741:9752	343536	0	True				
ANR	343568	IdentifierDecl	* i		343536	0					
ANR	343569	IdentifierDeclType	char *		343536	0					
ANR	343570	Identifier	i		343536	1					
ANR	343571	IdentifierDecl	* j		343536	1					
ANR	343572	IdentifierDeclType	char *		343536	0					
ANR	343573	Identifier	j		343536	1					
ANR	343574	IdentifierDeclStatement	char * start = ( char * ) base ;	325:3:9757:9783	343536	1	True				
ANR	343575	IdentifierDecl	* start = ( char * ) base		343536	0					
ANR	343576	IdentifierDeclType	char *		343536	0					
ANR	343577	Identifier	start		343536	1					
ANR	343578	AssignmentExpression	* start = ( char * ) base		343536	2		=			
ANR	343579	Identifier	start		343536	0					
ANR	343580	CastExpression	( char * ) base		343536	1					
ANR	343581	CastTarget	char *		343536	0					
ANR	343582	Identifier	base		343536	1					
ANR	343583	IdentifierDeclStatement	char * end = start + ( nmemb * siz ) ;	326:3:9788:9821	343536	2	True				
ANR	343584	IdentifierDecl	* end = start + ( nmemb * siz )		343536	0					
ANR	343585	IdentifierDeclType	char *		343536	0					
ANR	343586	Identifier	end		343536	1					
ANR	343587	AssignmentExpression	* end = start + ( nmemb * siz )		343536	2		=			
ANR	343588	Identifier	end		343536	0					
ANR	343589	AdditiveExpression	start + ( nmemb * siz )		343536	1		+			
ANR	343590	Identifier	start		343536	0					
ANR	343591	MultiplicativeExpression	nmemb * siz		343536	1		*			
ANR	343592	Identifier	nmemb		343536	0					
ANR	343593	Identifier	siz		343536	1					
ANR	343594	IdentifierDeclStatement	size_t offset = ( nmemb >> Z_L ( 1 ) ) ;	327:3:9826:9859	343536	3	True				
ANR	343595	IdentifierDecl	offset = ( nmemb >> Z_L ( 1 ) )		343536	0					
ANR	343596	IdentifierDeclType	size_t		343536	0					
ANR	343597	Identifier	offset		343536	1					
ANR	343598	AssignmentExpression	offset = ( nmemb >> Z_L ( 1 ) )		343536	2		=			
ANR	343599	Identifier	offset		343536	0					
ANR	343600	ShiftExpression	nmemb >> Z_L ( 1 )		343536	1		>>			
ANR	343601	Identifier	nmemb		343536	0					
ANR	343602	CallExpression	Z_L ( 1 )		343536	1					
ANR	343603	Callee	Z_L		343536	0					
ANR	343604	Identifier	Z_L		343536	0					
ANR	343605	ArgumentList	1		343536	1					
ANR	343606	Argument	1		343536	0					
ANR	343607	PrimaryExpression	1		343536	0					
ANR	343608	IdentifierDeclStatement	char * pivot = start + ( offset * siz ) ;	328:3:9864:9900	343536	4	True				
ANR	343609	IdentifierDecl	* pivot = start + ( offset * siz )		343536	0					
ANR	343610	IdentifierDeclType	char *		343536	0					
ANR	343611	Identifier	pivot		343536	1					
ANR	343612	AssignmentExpression	* pivot = start + ( offset * siz )		343536	2		=			
ANR	343613	Identifier	pivot		343536	0					
ANR	343614	AdditiveExpression	start + ( offset * siz )		343536	1		+			
ANR	343615	Identifier	start		343536	0					
ANR	343616	MultiplicativeExpression	offset * siz		343536	1		*			
ANR	343617	Identifier	offset		343536	0					
ANR	343618	Identifier	siz		343536	1					
ANR	343619	IfStatement	if ( ( nmemb >> Z_L ( 10 ) ) )		343536	5					
ANR	343620	Condition	nmemb >> Z_L ( 10 )	330:7:9910:9927	343536	0	True				
ANR	343621	ShiftExpression	nmemb >> Z_L ( 10 )		343536	0		>>			
ANR	343622	Identifier	nmemb		343536	0					
ANR	343623	CallExpression	Z_L ( 10 )		343536	1					
ANR	343624	Callee	Z_L		343536	0					
ANR	343625	Identifier	Z_L		343536	0					
ANR	343626	ArgumentList	10		343536	1					
ANR	343627	Argument	10		343536	0					
ANR	343628	PrimaryExpression	10		343536	0					
ANR	343629	CompoundStatement		14:4:304:343	343536	1					
ANR	343630	IdentifierDeclStatement	size_t delta = ( offset >> Z_L ( 1 ) ) * siz ;	331:4:9936:9975	343536	0	True				
ANR	343631	IdentifierDecl	delta = ( offset >> Z_L ( 1 ) ) * siz		343536	0					
ANR	343632	IdentifierDeclType	size_t		343536	0					
ANR	343633	Identifier	delta		343536	1					
ANR	343634	AssignmentExpression	delta = ( offset >> Z_L ( 1 ) ) * siz		343536	2		=			
ANR	343635	Identifier	delta		343536	0					
ANR	343636	MultiplicativeExpression	( offset >> Z_L ( 1 ) ) * siz		343536	1		*			
ANR	343637	ShiftExpression	offset >> Z_L ( 1 )		343536	0		>>			
ANR	343638	Identifier	offset		343536	0					
ANR	343639	CallExpression	Z_L ( 1 )		343536	1					
ANR	343640	Callee	Z_L		343536	0					
ANR	343641	Identifier	Z_L		343536	0					
ANR	343642	ArgumentList	1		343536	1					
ANR	343643	Argument	1		343536	0					
ANR	343644	PrimaryExpression	1		343536	0					
ANR	343645	Identifier	siz		343536	1					
ANR	343646	ExpressionStatement	"zend_sort_5 ( start , start + delta , pivot , pivot + delta , end - siz , cmp , swp )"	332:4:9981:10057	343536	1	True				
ANR	343647	CallExpression	"zend_sort_5 ( start , start + delta , pivot , pivot + delta , end - siz , cmp , swp )"		343536	0					
ANR	343648	Callee	zend_sort_5		343536	0					
ANR	343649	Identifier	zend_sort_5		343536	0					
ANR	343650	ArgumentList	start		343536	1					
ANR	343651	Argument	start		343536	0					
ANR	343652	Identifier	start		343536	0					
ANR	343653	Argument	start + delta		343536	1					
ANR	343654	AdditiveExpression	start + delta		343536	0		+			
ANR	343655	Identifier	start		343536	0					
ANR	343656	Identifier	delta		343536	1					
ANR	343657	Argument	pivot		343536	2					
ANR	343658	Identifier	pivot		343536	0					
ANR	343659	Argument	pivot + delta		343536	3					
ANR	343660	AdditiveExpression	pivot + delta		343536	0		+			
ANR	343661	Identifier	pivot		343536	0					
ANR	343662	Identifier	delta		343536	1					
ANR	343663	Argument	end - siz		343536	4					
ANR	343664	AdditiveExpression	end - siz		343536	0		-			
ANR	343665	Identifier	end		343536	0					
ANR	343666	Identifier	siz		343536	1					
ANR	343667	Argument	cmp		343536	5					
ANR	343668	Identifier	cmp		343536	0					
ANR	343669	Argument	swp		343536	6					
ANR	343670	Identifier	swp		343536	0					
ANR	343671	ElseStatement	else		343536	0					
ANR	343672	CompoundStatement		16:10:437:437	343536	0					
ANR	343673	ExpressionStatement	"zend_sort_3 ( start , pivot , end - siz , cmp , swp )"	334:4:10075:10121	343536	0	True				
ANR	343674	CallExpression	"zend_sort_3 ( start , pivot , end - siz , cmp , swp )"		343536	0					
ANR	343675	Callee	zend_sort_3		343536	0					
ANR	343676	Identifier	zend_sort_3		343536	0					
ANR	343677	ArgumentList	start		343536	1					
ANR	343678	Argument	start		343536	0					
ANR	343679	Identifier	start		343536	0					
ANR	343680	Argument	pivot		343536	1					
ANR	343681	Identifier	pivot		343536	0					
ANR	343682	Argument	end - siz		343536	2					
ANR	343683	AdditiveExpression	end - siz		343536	0		-			
ANR	343684	Identifier	end		343536	0					
ANR	343685	Identifier	siz		343536	1					
ANR	343686	Argument	cmp		343536	3					
ANR	343687	Identifier	cmp		343536	0					
ANR	343688	Argument	swp		343536	4					
ANR	343689	Identifier	swp		343536	0					
ANR	343690	ExpressionStatement	"swp ( start + siz , pivot )"	336:3:10131:10154	343536	6	True				
ANR	343691	CallExpression	"swp ( start + siz , pivot )"		343536	0					
ANR	343692	Callee	swp		343536	0					
ANR	343693	Identifier	swp		343536	0					
ANR	343694	ArgumentList	start + siz		343536	1					
ANR	343695	Argument	start + siz		343536	0					
ANR	343696	AdditiveExpression	start + siz		343536	0		+			
ANR	343697	Identifier	start		343536	0					
ANR	343698	Identifier	siz		343536	1					
ANR	343699	Argument	pivot		343536	1					
ANR	343700	Identifier	pivot		343536	0					
ANR	343701	ExpressionStatement	pivot = start + siz	337:3:10159:10178	343536	7	True				
ANR	343702	AssignmentExpression	pivot = start + siz		343536	0		=			
ANR	343703	Identifier	pivot		343536	0					
ANR	343704	AdditiveExpression	start + siz		343536	1		+			
ANR	343705	Identifier	start		343536	0					
ANR	343706	Identifier	siz		343536	1					
ANR	343707	ExpressionStatement	i = pivot + siz	338:3:10183:10198	343536	8	True				
ANR	343708	AssignmentExpression	i = pivot + siz		343536	0		=			
ANR	343709	Identifier	i		343536	0					
ANR	343710	AdditiveExpression	pivot + siz		343536	1		+			
ANR	343711	Identifier	pivot		343536	0					
ANR	343712	Identifier	siz		343536	1					
ANR	343713	ExpressionStatement	j = end - siz	339:3:10203:10216	343536	9	True				
ANR	343714	AssignmentExpression	j = end - siz		343536	0		=			
ANR	343715	Identifier	j		343536	0					
ANR	343716	AdditiveExpression	end - siz		343536	1		-			
ANR	343717	Identifier	end		343536	0					
ANR	343718	Identifier	siz		343536	1					
ANR	343719	WhileStatement	while ( 1 )		343536	10					
ANR	343720	Condition	1	340:10:10228:10228	343536	0	True				
ANR	343721	PrimaryExpression	1		343536	0					
ANR	343722	CompoundStatement		23:13:599:599	343536	1					
ANR	343723	WhileStatement	"while ( cmp ( pivot , i ) > 0 )"		343536	0					
ANR	343724	Condition	"cmp ( pivot , i ) > 0"	341:11:10244:10260	343536	0	True				
ANR	343725	RelationalExpression	"cmp ( pivot , i ) > 0"		343536	0		>			
ANR	343726	CallExpression	"cmp ( pivot , i )"		343536	0					
ANR	343727	Callee	cmp		343536	0					
ANR	343728	Identifier	cmp		343536	0					
ANR	343729	ArgumentList	pivot		343536	1					
ANR	343730	Argument	pivot		343536	0					
ANR	343731	Identifier	pivot		343536	0					
ANR	343732	Argument	i		343536	1					
ANR	343733	Identifier	i		343536	0					
ANR	343734	PrimaryExpression	0		343536	1					
ANR	343735	CompoundStatement		24:30:631:631	343536	1					
ANR	343736	ExpressionStatement	i += siz	342:5:10270:10278	343536	0	True				
ANR	343737	AssignmentExpression	i += siz		343536	0		+=			
ANR	343738	Identifier	i		343536	0					
ANR	343739	Identifier	siz		343536	1					
ANR	343740	IfStatement	if ( UNEXPECTED ( i == j ) )		343536	1					
ANR	343741	Condition	UNEXPECTED ( i == j )	343:9:10289:10306	343536	0	True				
ANR	343742	CallExpression	UNEXPECTED ( i == j )		343536	0					
ANR	343743	Callee	UNEXPECTED		343536	0					
ANR	343744	Identifier	UNEXPECTED		343536	0					
ANR	343745	ArgumentList	i == j		343536	1					
ANR	343746	Argument	i == j		343536	0					
ANR	343747	EqualityExpression	i == j		343536	0		==			
ANR	343748	Identifier	i		343536	0					
ANR	343749	Identifier	j		343536	1					
ANR	343750	CompoundStatement		26:29:677:677	343536	1					
ANR	343751	GotoStatement	goto done ;	344:6:10317:10326	343536	0	True				
ANR	343752	Identifier	done		343536	0					
ANR	343753	ExpressionStatement	j -= siz	347:4:10345:10353	343536	1	True				
ANR	343754	AssignmentExpression	j -= siz		343536	0		-=			
ANR	343755	Identifier	j		343536	0					
ANR	343756	Identifier	siz		343536	1					
ANR	343757	IfStatement	if ( UNEXPECTED ( j == i ) )		343536	2					
ANR	343758	Condition	UNEXPECTED ( j == i )	348:8:10363:10380	343536	0	True				
ANR	343759	CallExpression	UNEXPECTED ( j == i )		343536	0					
ANR	343760	Callee	UNEXPECTED		343536	0					
ANR	343761	Identifier	UNEXPECTED		343536	0					
ANR	343762	ArgumentList	j == i		343536	1					
ANR	343763	Argument	j == i		343536	0					
ANR	343764	EqualityExpression	j == i		343536	0		==			
ANR	343765	Identifier	j		343536	0					
ANR	343766	Identifier	i		343536	1					
ANR	343767	CompoundStatement		31:28:751:751	343536	1					
ANR	343768	GotoStatement	goto done ;	349:5:10390:10399	343536	0	True				
ANR	343769	Identifier	done		343536	0					
ANR	343770	WhileStatement	"while ( cmp ( j , pivot ) > 0 )"		343536	3					
ANR	343771	Condition	"cmp ( j , pivot ) > 0"	351:11:10418:10434	343536	0	True				
ANR	343772	RelationalExpression	"cmp ( j , pivot ) > 0"		343536	0		>			
ANR	343773	CallExpression	"cmp ( j , pivot )"		343536	0					
ANR	343774	Callee	cmp		343536	0					
ANR	343775	Identifier	cmp		343536	0					
ANR	343776	ArgumentList	j		343536	1					
ANR	343777	Argument	j		343536	0					
ANR	343778	Identifier	j		343536	0					
ANR	343779	Argument	pivot		343536	1					
ANR	343780	Identifier	pivot		343536	0					
ANR	343781	PrimaryExpression	0		343536	1					
ANR	343782	CompoundStatement		34:30:805:805	343536	1					
ANR	343783	ExpressionStatement	j -= siz	352:5:10444:10452	343536	0	True				
ANR	343784	AssignmentExpression	j -= siz		343536	0		-=			
ANR	343785	Identifier	j		343536	0					
ANR	343786	Identifier	siz		343536	1					
ANR	343787	IfStatement	if ( UNEXPECTED ( j == i ) )		343536	1					
ANR	343788	Condition	UNEXPECTED ( j == i )	353:9:10463:10480	343536	0	True				
ANR	343789	CallExpression	UNEXPECTED ( j == i )		343536	0					
ANR	343790	Callee	UNEXPECTED		343536	0					
ANR	343791	Identifier	UNEXPECTED		343536	0					
ANR	343792	ArgumentList	j == i		343536	1					
ANR	343793	Argument	j == i		343536	0					
ANR	343794	EqualityExpression	j == i		343536	0		==			
ANR	343795	Identifier	j		343536	0					
ANR	343796	Identifier	i		343536	1					
ANR	343797	CompoundStatement		36:29:851:851	343536	1					
ANR	343798	GotoStatement	goto done ;	354:6:10491:10500	343536	0	True				
ANR	343799	Identifier	done		343536	0					
ANR	343800	ExpressionStatement	"swp ( i , j )"	357:4:10519:10528	343536	4	True				
ANR	343801	CallExpression	"swp ( i , j )"		343536	0					
ANR	343802	Callee	swp		343536	0					
ANR	343803	Identifier	swp		343536	0					
ANR	343804	ArgumentList	i		343536	1					
ANR	343805	Argument	i		343536	0					
ANR	343806	Identifier	i		343536	0					
ANR	343807	Argument	j		343536	1					
ANR	343808	Identifier	j		343536	0					
ANR	343809	ExpressionStatement	i += siz	358:4:10534:10542	343536	5	True				
ANR	343810	AssignmentExpression	i += siz		343536	0		+=			
ANR	343811	Identifier	i		343536	0					
ANR	343812	Identifier	siz		343536	1					
ANR	343813	IfStatement	if ( UNEXPECTED ( i == j ) )		343536	6					
ANR	343814	Condition	UNEXPECTED ( i == j )	359:8:10552:10569	343536	0	True				
ANR	343815	CallExpression	UNEXPECTED ( i == j )		343536	0					
ANR	343816	Callee	UNEXPECTED		343536	0					
ANR	343817	Identifier	UNEXPECTED		343536	0					
ANR	343818	ArgumentList	i == j		343536	1					
ANR	343819	Argument	i == j		343536	0					
ANR	343820	EqualityExpression	i == j		343536	0		==			
ANR	343821	Identifier	i		343536	0					
ANR	343822	Identifier	j		343536	1					
ANR	343823	CompoundStatement		42:28:940:940	343536	1					
ANR	343824	GotoStatement	goto done ;	360:5:10579:10588	343536	0	True				
ANR	343825	Identifier	done		343536	0					
ANR	343826	Label	done :	363:0:10601:10605	343536	11	True				
ANR	343827	Identifier	done		343536	0					
ANR	343828	ExpressionStatement	"swp ( pivot , i - siz )"	364:3:10610:10629	343536	12	True				
ANR	343829	CallExpression	"swp ( pivot , i - siz )"		343536	0					
ANR	343830	Callee	swp		343536	0					
ANR	343831	Identifier	swp		343536	0					
ANR	343832	ArgumentList	pivot		343536	1					
ANR	343833	Argument	pivot		343536	0					
ANR	343834	Identifier	pivot		343536	0					
ANR	343835	Argument	i - siz		343536	1					
ANR	343836	AdditiveExpression	i - siz		343536	0		-			
ANR	343837	Identifier	i		343536	0					
ANR	343838	Identifier	siz		343536	1					
ANR	343839	IfStatement	if ( ( i - siz ) - start < end - i )		343536	13					
ANR	343840	Condition	( i - siz ) - start < end - i	365:7:10638:10664	343536	0	True				
ANR	343841	RelationalExpression	( i - siz ) - start < end - i		343536	0		<			
ANR	343842	AdditiveExpression	( i - siz ) - start		343536	0		-			
ANR	343843	AdditiveExpression	i - siz		343536	0		-			
ANR	343844	Identifier	i		343536	0					
ANR	343845	Identifier	siz		343536	1					
ANR	343846	Identifier	start		343536	1					
ANR	343847	AdditiveExpression	end - i		343536	1		-			
ANR	343848	Identifier	end		343536	0					
ANR	343849	Identifier	i		343536	1					
ANR	343850	CompoundStatement		48:36:1035:1035	343536	1					
ANR	343851	ExpressionStatement	"zend_sort ( start , ( i - start ) / siz - 1 , siz , cmp , swp )"	366:4:10673:10725	343536	0	True				
ANR	343852	CallExpression	"zend_sort ( start , ( i - start ) / siz - 1 , siz , cmp , swp )"		343536	0					
ANR	343853	Callee	zend_sort		343536	0					
ANR	343854	Identifier	zend_sort		343536	0					
ANR	343855	ArgumentList	start		343536	1					
ANR	343856	Argument	start		343536	0					
ANR	343857	Identifier	start		343536	0					
ANR	343858	Argument	( i - start ) / siz - 1		343536	1					
ANR	343859	AdditiveExpression	( i - start ) / siz - 1		343536	0		-			
ANR	343860	MultiplicativeExpression	( i - start ) / siz		343536	0		/			
ANR	343861	AdditiveExpression	i - start		343536	0		-			
ANR	343862	Identifier	i		343536	0					
ANR	343863	Identifier	start		343536	1					
ANR	343864	Identifier	siz		343536	1					
ANR	343865	PrimaryExpression	1		343536	1					
ANR	343866	Argument	siz		343536	2					
ANR	343867	Identifier	siz		343536	0					
ANR	343868	Argument	cmp		343536	3					
ANR	343869	Identifier	cmp		343536	0					
ANR	343870	Argument	swp		343536	4					
ANR	343871	Identifier	swp		343536	0					
ANR	343872	ExpressionStatement	base = i	367:4:10731:10739	343536	1	True				
ANR	343873	AssignmentExpression	base = i		343536	0		=			
ANR	343874	Identifier	base		343536	0					
ANR	343875	Identifier	i		343536	1					
ANR	343876	ExpressionStatement	nmemb = ( end - i ) / siz	368:4:10745:10766	343536	2	True				
ANR	343877	AssignmentExpression	nmemb = ( end - i ) / siz		343536	0		=			
ANR	343878	Identifier	nmemb		343536	0					
ANR	343879	MultiplicativeExpression	( end - i ) / siz		343536	1		/			
ANR	343880	AdditiveExpression	end - i		343536	0		-			
ANR	343881	Identifier	end		343536	0					
ANR	343882	Identifier	i		343536	1					
ANR	343883	Identifier	siz		343536	1					
ANR	343884	ElseStatement	else		343536	0					
ANR	343885	CompoundStatement		52:10:1146:1146	343536	0					
ANR	343886	ExpressionStatement	"zend_sort ( i , ( end - i ) / siz , siz , cmp , swp )"	370:4:10784:10826	343536	0	True				
ANR	343887	CallExpression	"zend_sort ( i , ( end - i ) / siz , siz , cmp , swp )"		343536	0					
ANR	343888	Callee	zend_sort		343536	0					
ANR	343889	Identifier	zend_sort		343536	0					
ANR	343890	ArgumentList	i		343536	1					
ANR	343891	Argument	i		343536	0					
ANR	343892	Identifier	i		343536	0					
ANR	343893	Argument	( end - i ) / siz		343536	1					
ANR	343894	MultiplicativeExpression	( end - i ) / siz		343536	0		/			
ANR	343895	AdditiveExpression	end - i		343536	0		-			
ANR	343896	Identifier	end		343536	0					
ANR	343897	Identifier	i		343536	1					
ANR	343898	Identifier	siz		343536	1					
ANR	343899	Argument	siz		343536	2					
ANR	343900	Identifier	siz		343536	0					
ANR	343901	Argument	cmp		343536	3					
ANR	343902	Identifier	cmp		343536	0					
ANR	343903	Argument	swp		343536	4					
ANR	343904	Identifier	swp		343536	0					
ANR	343905	ExpressionStatement	nmemb = ( i - start ) / siz - 1	371:4:10832:10859	343536	1	True				
ANR	343906	AssignmentExpression	nmemb = ( i - start ) / siz - 1		343536	0		=			
ANR	343907	Identifier	nmemb		343536	0					
ANR	343908	AdditiveExpression	( i - start ) / siz - 1		343536	1		-			
ANR	343909	MultiplicativeExpression	( i - start ) / siz		343536	0		/			
ANR	343910	AdditiveExpression	i - start		343536	0		-			
ANR	343911	Identifier	i		343536	0					
ANR	343912	Identifier	start		343536	1					
ANR	343913	Identifier	siz		343536	1					
ANR	343914	PrimaryExpression	1		343536	1					
ANR	343915	ReturnType	ZEND_API void		343536	1					
ANR	343916	Identifier	zend_sort		343536	2					
ANR	343917	ParameterList	"void * base , size_t nmemb , size_t siz , compare_func_t cmp , swap_func_t swp"		343536	3					
ANR	343918	Parameter	void * base	317:24:9556:9565	343536	0	True				
ANR	343919	ParameterType	void *		343536	0					
ANR	343920	Identifier	base		343536	1					
ANR	343921	Parameter	size_t nmemb	317:36:9568:9579	343536	1	True				
ANR	343922	ParameterType	size_t		343536	0					
ANR	343923	Identifier	nmemb		343536	1					
ANR	343924	Parameter	size_t siz	317:50:9582:9591	343536	2	True				
ANR	343925	ParameterType	size_t		343536	0					
ANR	343926	Identifier	siz		343536	1					
ANR	343927	Parameter	compare_func_t cmp	317:62:9594:9611	343536	3	True				
ANR	343928	ParameterType	compare_func_t		343536	0					
ANR	343929	Identifier	cmp		343536	1					
ANR	343930	Parameter	swap_func_t swp	317:82:9614:9628	343536	4	True				
ANR	343931	ParameterType	swap_func_t		343536	0					
ANR	343932	Identifier	swp		343536	1					
ANR	343933	CFGEntryNode	ENTRY		343536		True				
ANR	343934	CFGExitNode	EXIT		343536		True				
ANR	343935	Symbol	offset		343536						
ANR	343936	Symbol	siz		343536						
ANR	343937	Symbol	Z_L		343536						
ANR	343938	Symbol	cmp		343536						
ANR	343939	Symbol	start		343536						
ANR	343940	Symbol	delta		343536						
ANR	343941	Symbol	i		343536						
ANR	343942	Symbol	j		343536						
ANR	343943	Symbol	swp		343536						
ANR	343944	Symbol	UNEXPECTED		343536						
ANR	343945	Symbol	pivot		343536						
ANR	343946	Symbol	nmemb		343536						
ANR	343947	Symbol	end		343536						
ANR	343948	Symbol	base		343536						
