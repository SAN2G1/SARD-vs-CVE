command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1631120	File	data/converged/CVE-2015-8617_php-src/ext_pcre_pcrelib_sljit_sljitNativePPC_32.c								
ANR	1631121	Function	load_immediate	29:0:1499:1958							
ANR	1631122	FunctionDef	"load_immediate (struct sljit_compiler * compiler , sljit_si reg , sljit_sw imm)"		1631121	0					
ANR	1631123	CompoundStatement		30:0:1591:1958	1631121	0					
ANR	1631124	IfStatement	if ( imm <= SIMM_MAX && imm >= SIMM_MIN )		1631121	0					
ANR	1631125	Condition	imm <= SIMM_MAX && imm >= SIMM_MIN	31:5:1598:1631	1631121	0	True				
ANR	1631126	AndExpression	imm <= SIMM_MAX && imm >= SIMM_MIN		1631121	0		&&			
ANR	1631127	RelationalExpression	imm <= SIMM_MAX		1631121	0		<=			
ANR	1631128	Identifier	imm		1631121	0					
ANR	1631129	Identifier	SIMM_MAX		1631121	1					
ANR	1631130	RelationalExpression	imm >= SIMM_MIN		1631121	1		>=			
ANR	1631131	Identifier	imm		1631121	0					
ANR	1631132	Identifier	SIMM_MIN		1631121	1					
ANR	1631133	ReturnStatement	"return push_inst ( compiler , ADDI | D ( reg ) | A ( 0 ) | IMM ( imm ) ) ;"	32:2:1636:1695	1631121	1	True				
ANR	1631134	CallExpression	"push_inst ( compiler , ADDI | D ( reg ) | A ( 0 ) | IMM ( imm ) )"		1631121	0					
ANR	1631135	Callee	push_inst		1631121	0					
ANR	1631136	Identifier	push_inst		1631121	0					
ANR	1631137	ArgumentList	compiler		1631121	1					
ANR	1631138	Argument	compiler		1631121	0					
ANR	1631139	Identifier	compiler		1631121	0					
ANR	1631140	Argument	ADDI | D ( reg ) | A ( 0 ) | IMM ( imm )		1631121	1					
ANR	1631141	InclusiveOrExpression	ADDI | D ( reg ) | A ( 0 ) | IMM ( imm )		1631121	0		|			
ANR	1631142	Identifier	ADDI		1631121	0					
ANR	1631143	InclusiveOrExpression	D ( reg ) | A ( 0 ) | IMM ( imm )		1631121	1		|			
ANR	1631144	CallExpression	D ( reg )		1631121	0					
ANR	1631145	Callee	D		1631121	0					
ANR	1631146	Identifier	D		1631121	0					
ANR	1631147	ArgumentList	reg		1631121	1					
ANR	1631148	Argument	reg		1631121	0					
ANR	1631149	Identifier	reg		1631121	0					
ANR	1631150	InclusiveOrExpression	A ( 0 ) | IMM ( imm )		1631121	1		|			
ANR	1631151	CallExpression	A ( 0 )		1631121	0					
ANR	1631152	Callee	A		1631121	0					
ANR	1631153	Identifier	A		1631121	0					
ANR	1631154	ArgumentList	0		1631121	1					
ANR	1631155	Argument	0		1631121	0					
ANR	1631156	PrimaryExpression	0		1631121	0					
ANR	1631157	CallExpression	IMM ( imm )		1631121	1					
ANR	1631158	Callee	IMM		1631121	0					
ANR	1631159	Identifier	IMM		1631121	0					
ANR	1631160	ArgumentList	imm		1631121	1					
ANR	1631161	Argument	imm		1631121	0					
ANR	1631162	Identifier	imm		1631121	0					
ANR	1631163	IfStatement	if ( ! ( imm & ~0xffff ) )		1631121	1					
ANR	1631164	Condition	! ( imm & ~0xffff )	34:5:1703:1718	1631121	0	True				
ANR	1631165	UnaryOperationExpression	! ( imm & ~0xffff )		1631121	0					
ANR	1631166	UnaryOperator	!		1631121	0					
ANR	1631167	BitAndExpression	imm & ~0xffff		1631121	1		&			
ANR	1631168	Identifier	imm		1631121	0					
ANR	1631169	Identifier	~0xffff		1631121	1					
ANR	1631170	ReturnStatement	"return push_inst ( compiler , ORI | S ( TMP_ZERO ) | A ( reg ) | IMM ( imm ) ) ;"	35:2:1723:1788	1631121	1	True				
ANR	1631171	CallExpression	"push_inst ( compiler , ORI | S ( TMP_ZERO ) | A ( reg ) | IMM ( imm ) )"		1631121	0					
ANR	1631172	Callee	push_inst		1631121	0					
ANR	1631173	Identifier	push_inst		1631121	0					
ANR	1631174	ArgumentList	compiler		1631121	1					
ANR	1631175	Argument	compiler		1631121	0					
ANR	1631176	Identifier	compiler		1631121	0					
ANR	1631177	Argument	ORI | S ( TMP_ZERO ) | A ( reg ) | IMM ( imm )		1631121	1					
ANR	1631178	InclusiveOrExpression	ORI | S ( TMP_ZERO ) | A ( reg ) | IMM ( imm )		1631121	0		|			
ANR	1631179	Identifier	ORI		1631121	0					
ANR	1631180	InclusiveOrExpression	S ( TMP_ZERO ) | A ( reg ) | IMM ( imm )		1631121	1		|			
ANR	1631181	CallExpression	S ( TMP_ZERO )		1631121	0					
ANR	1631182	Callee	S		1631121	0					
ANR	1631183	Identifier	S		1631121	0					
ANR	1631184	ArgumentList	TMP_ZERO		1631121	1					
ANR	1631185	Argument	TMP_ZERO		1631121	0					
ANR	1631186	Identifier	TMP_ZERO		1631121	0					
ANR	1631187	InclusiveOrExpression	A ( reg ) | IMM ( imm )		1631121	1		|			
ANR	1631188	CallExpression	A ( reg )		1631121	0					
ANR	1631189	Callee	A		1631121	0					
ANR	1631190	Identifier	A		1631121	0					
ANR	1631191	ArgumentList	reg		1631121	1					
ANR	1631192	Argument	reg		1631121	0					
ANR	1631193	Identifier	reg		1631121	0					
ANR	1631194	CallExpression	IMM ( imm )		1631121	1					
ANR	1631195	Callee	IMM		1631121	0					
ANR	1631196	Identifier	IMM		1631121	0					
ANR	1631197	ArgumentList	imm		1631121	1					
ANR	1631198	Argument	imm		1631121	0					
ANR	1631199	Identifier	imm		1631121	0					
ANR	1631200	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDIS | D ( reg ) | A ( 0 ) | IMM ( imm >> 16 ) ) )"	37:1:1792:1860	1631121	2	True				
ANR	1631201	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDIS | D ( reg ) | A ( 0 ) | IMM ( imm >> 16 ) ) )"		1631121	0					
ANR	1631202	Callee	FAIL_IF		1631121	0					
ANR	1631203	Identifier	FAIL_IF		1631121	0					
ANR	1631204	ArgumentList	"push_inst ( compiler , ADDIS | D ( reg ) | A ( 0 ) | IMM ( imm >> 16 ) )"		1631121	1					
ANR	1631205	Argument	"push_inst ( compiler , ADDIS | D ( reg ) | A ( 0 ) | IMM ( imm >> 16 ) )"		1631121	0					
ANR	1631206	CallExpression	"push_inst ( compiler , ADDIS | D ( reg ) | A ( 0 ) | IMM ( imm >> 16 ) )"		1631121	0					
ANR	1631207	Callee	push_inst		1631121	0					
ANR	1631208	Identifier	push_inst		1631121	0					
ANR	1631209	ArgumentList	compiler		1631121	1					
ANR	1631210	Argument	compiler		1631121	0					
ANR	1631211	Identifier	compiler		1631121	0					
ANR	1631212	Argument	ADDIS | D ( reg ) | A ( 0 ) | IMM ( imm >> 16 )		1631121	1					
ANR	1631213	InclusiveOrExpression	ADDIS | D ( reg ) | A ( 0 ) | IMM ( imm >> 16 )		1631121	0		|			
ANR	1631214	Identifier	ADDIS		1631121	0					
ANR	1631215	InclusiveOrExpression	D ( reg ) | A ( 0 ) | IMM ( imm >> 16 )		1631121	1		|			
ANR	1631216	CallExpression	D ( reg )		1631121	0					
ANR	1631217	Callee	D		1631121	0					
ANR	1631218	Identifier	D		1631121	0					
ANR	1631219	ArgumentList	reg		1631121	1					
ANR	1631220	Argument	reg		1631121	0					
ANR	1631221	Identifier	reg		1631121	0					
ANR	1631222	InclusiveOrExpression	A ( 0 ) | IMM ( imm >> 16 )		1631121	1		|			
ANR	1631223	CallExpression	A ( 0 )		1631121	0					
ANR	1631224	Callee	A		1631121	0					
ANR	1631225	Identifier	A		1631121	0					
ANR	1631226	ArgumentList	0		1631121	1					
ANR	1631227	Argument	0		1631121	0					
ANR	1631228	PrimaryExpression	0		1631121	0					
ANR	1631229	CallExpression	IMM ( imm >> 16 )		1631121	1					
ANR	1631230	Callee	IMM		1631121	0					
ANR	1631231	Identifier	IMM		1631121	0					
ANR	1631232	ArgumentList	imm >> 16		1631121	1					
ANR	1631233	Argument	imm >> 16		1631121	0					
ANR	1631234	ShiftExpression	imm >> 16		1631121	0		>>			
ANR	1631235	Identifier	imm		1631121	0					
ANR	1631236	PrimaryExpression	16		1631121	1					
ANR	1631237	ReturnStatement	"return ( imm & 0xffff ) ? push_inst ( compiler , ORI | S ( reg ) | A ( reg ) | IMM ( imm ) ) : SLJIT_SUCCESS ;"	38:1:1863:1956	1631121	3	True				
ANR	1631238	ConditionalExpression	"( imm & 0xffff ) ? push_inst ( compiler , ORI | S ( reg ) | A ( reg ) | IMM ( imm ) ) : SLJIT_SUCCESS"		1631121	0					
ANR	1631239	Condition	imm & 0xffff		1631121	0					
ANR	1631240	BitAndExpression	imm & 0xffff		1631121	0		&			
ANR	1631241	Identifier	imm		1631121	0					
ANR	1631242	PrimaryExpression	0xffff		1631121	1					
ANR	1631243	CallExpression	"push_inst ( compiler , ORI | S ( reg ) | A ( reg ) | IMM ( imm ) )"		1631121	1					
ANR	1631244	Callee	push_inst		1631121	0					
ANR	1631245	Identifier	push_inst		1631121	0					
ANR	1631246	ArgumentList	compiler		1631121	1					
ANR	1631247	Argument	compiler		1631121	0					
ANR	1631248	Identifier	compiler		1631121	0					
ANR	1631249	Argument	ORI | S ( reg ) | A ( reg ) | IMM ( imm )		1631121	1					
ANR	1631250	InclusiveOrExpression	ORI | S ( reg ) | A ( reg ) | IMM ( imm )		1631121	0		|			
ANR	1631251	Identifier	ORI		1631121	0					
ANR	1631252	InclusiveOrExpression	S ( reg ) | A ( reg ) | IMM ( imm )		1631121	1		|			
ANR	1631253	CallExpression	S ( reg )		1631121	0					
ANR	1631254	Callee	S		1631121	0					
ANR	1631255	Identifier	S		1631121	0					
ANR	1631256	ArgumentList	reg		1631121	1					
ANR	1631257	Argument	reg		1631121	0					
ANR	1631258	Identifier	reg		1631121	0					
ANR	1631259	InclusiveOrExpression	A ( reg ) | IMM ( imm )		1631121	1		|			
ANR	1631260	CallExpression	A ( reg )		1631121	0					
ANR	1631261	Callee	A		1631121	0					
ANR	1631262	Identifier	A		1631121	0					
ANR	1631263	ArgumentList	reg		1631121	1					
ANR	1631264	Argument	reg		1631121	0					
ANR	1631265	Identifier	reg		1631121	0					
ANR	1631266	CallExpression	IMM ( imm )		1631121	1					
ANR	1631267	Callee	IMM		1631121	0					
ANR	1631268	Identifier	IMM		1631121	0					
ANR	1631269	ArgumentList	imm		1631121	1					
ANR	1631270	Argument	imm		1631121	0					
ANR	1631271	Identifier	imm		1631121	0					
ANR	1631272	Identifier	SLJIT_SUCCESS		1631121	2					
ANR	1631273	ReturnType	static sljit_si		1631121	1					
ANR	1631274	Identifier	load_immediate		1631121	2					
ANR	1631275	ParameterList	"struct sljit_compiler * compiler , sljit_si reg , sljit_sw imm"		1631121	3					
ANR	1631276	Parameter	struct sljit_compiler * compiler	29:31:1530:1560	1631121	0	True				
ANR	1631277	ParameterType	struct sljit_compiler *		1631121	0					
ANR	1631278	Identifier	compiler		1631121	1					
ANR	1631279	Parameter	sljit_si reg	29:64:1563:1574	1631121	1	True				
ANR	1631280	ParameterType	sljit_si		1631121	0					
ANR	1631281	Identifier	reg		1631121	1					
ANR	1631282	Parameter	sljit_sw imm	29:78:1577:1588	1631121	2	True				
ANR	1631283	ParameterType	sljit_sw		1631121	0					
ANR	1631284	Identifier	imm		1631121	1					
ANR	1631285	CFGEntryNode	ENTRY		1631121		True				
ANR	1631286	CFGExitNode	EXIT		1631121		True				
ANR	1631287	Symbol	A		1631121						
ANR	1631288	Symbol	push_inst		1631121						
ANR	1631289	Symbol	~0xffff		1631121						
ANR	1631290	Symbol	D		1631121						
ANR	1631291	Symbol	ORI		1631121						
ANR	1631292	Symbol	imm		1631121						
ANR	1631293	Symbol	IMM		1631121						
ANR	1631294	Symbol	SLJIT_SUCCESS		1631121						
ANR	1631295	Symbol	SIMM_MAX		1631121						
ANR	1631296	Symbol	S		1631121						
ANR	1631297	Symbol	reg		1631121						
ANR	1631298	Symbol	ADDI		1631121						
ANR	1631299	Symbol	ADDIS		1631121						
ANR	1631300	Symbol	TMP_ZERO		1631121						
ANR	1631301	Symbol	compiler		1631121						
ANR	1631302	Symbol	SIMM_MIN		1631121						
ANR	1631303	Function	emit_single_op	44:0:2059:9224							
ANR	1631304	FunctionDef	"emit_single_op (struct sljit_compiler * compiler , sljit_si op , sljit_si flags , sljit_si dst , sljit_si src1 , sljit_si src2)"		1631303	0					
ANR	1631305	CompoundStatement		46:0:2210:9224	1631303	0					
ANR	1631306	SwitchStatement	switch ( op )		1631303	0					
ANR	1631307	Condition	op	47:9:2221:2222	1631303	0	True				
ANR	1631308	Identifier	op		1631303	0					
ANR	1631309	CompoundStatement		2:13:14:14	1631303	1					
ANR	1631310	Label	case SLJIT_MOV :	48:1:2228:2242	1631303	0	True				
ANR	1631311	Identifier	SLJIT_MOV		1631303	0					
ANR	1631312	Label	case SLJIT_MOV_UI :	49:1:2245:2262	1631303	1	True				
ANR	1631313	Identifier	SLJIT_MOV_UI		1631303	0					
ANR	1631314	Label	case SLJIT_MOV_SI :	50:1:2265:2282	1631303	2	True				
ANR	1631315	Identifier	SLJIT_MOV_SI		1631303	0					
ANR	1631316	Label	case SLJIT_MOV_P :	51:1:2285:2301	1631303	3	True				
ANR	1631317	Identifier	SLJIT_MOV_P		1631303	0					
ANR	1631318	ExpressionStatement	SLJIT_ASSERT ( src1 == TMP_REG1 )	52:2:2305:2335	1631303	4	True				
ANR	1631319	CallExpression	SLJIT_ASSERT ( src1 == TMP_REG1 )		1631303	0					
ANR	1631320	Callee	SLJIT_ASSERT		1631303	0					
ANR	1631321	Identifier	SLJIT_ASSERT		1631303	0					
ANR	1631322	ArgumentList	src1 == TMP_REG1		1631303	1					
ANR	1631323	Argument	src1 == TMP_REG1		1631303	0					
ANR	1631324	EqualityExpression	src1 == TMP_REG1		1631303	0		==			
ANR	1631325	Identifier	src1		1631303	0					
ANR	1631326	Identifier	TMP_REG1		1631303	1					
ANR	1631327	IfStatement	if ( dst != src2 )		1631303	5					
ANR	1631328	Condition	dst != src2	53:6:2343:2353	1631303	0	True				
ANR	1631329	EqualityExpression	dst != src2		1631303	0		!=			
ANR	1631330	Identifier	dst		1631303	0					
ANR	1631331	Identifier	src2		1631303	1					
ANR	1631332	ReturnStatement	"return push_inst ( compiler , OR | S ( src2 ) | A ( dst ) | B ( src2 ) ) ;"	54:3:2359:2418	1631303	1	True				
ANR	1631333	CallExpression	"push_inst ( compiler , OR | S ( src2 ) | A ( dst ) | B ( src2 ) )"		1631303	0					
ANR	1631334	Callee	push_inst		1631303	0					
ANR	1631335	Identifier	push_inst		1631303	0					
ANR	1631336	ArgumentList	compiler		1631303	1					
ANR	1631337	Argument	compiler		1631303	0					
ANR	1631338	Identifier	compiler		1631303	0					
ANR	1631339	Argument	OR | S ( src2 ) | A ( dst ) | B ( src2 )		1631303	1					
ANR	1631340	InclusiveOrExpression	OR | S ( src2 ) | A ( dst ) | B ( src2 )		1631303	0		|			
ANR	1631341	Identifier	OR		1631303	0					
ANR	1631342	InclusiveOrExpression	S ( src2 ) | A ( dst ) | B ( src2 )		1631303	1		|			
ANR	1631343	CallExpression	S ( src2 )		1631303	0					
ANR	1631344	Callee	S		1631303	0					
ANR	1631345	Identifier	S		1631303	0					
ANR	1631346	ArgumentList	src2		1631303	1					
ANR	1631347	Argument	src2		1631303	0					
ANR	1631348	Identifier	src2		1631303	0					
ANR	1631349	InclusiveOrExpression	A ( dst ) | B ( src2 )		1631303	1		|			
ANR	1631350	CallExpression	A ( dst )		1631303	0					
ANR	1631351	Callee	A		1631303	0					
ANR	1631352	Identifier	A		1631303	0					
ANR	1631353	ArgumentList	dst		1631303	1					
ANR	1631354	Argument	dst		1631303	0					
ANR	1631355	Identifier	dst		1631303	0					
ANR	1631356	CallExpression	B ( src2 )		1631303	1					
ANR	1631357	Callee	B		1631303	0					
ANR	1631358	Identifier	B		1631303	0					
ANR	1631359	ArgumentList	src2		1631303	1					
ANR	1631360	Argument	src2		1631303	0					
ANR	1631361	Identifier	src2		1631303	0					
ANR	1631362	ReturnStatement	return SLJIT_SUCCESS ;	55:2:2422:2442	1631303	6	True				
ANR	1631363	Identifier	SLJIT_SUCCESS		1631303	0					
ANR	1631364	Label	case SLJIT_MOV_UB :	57:1:2446:2463	1631303	7	True				
ANR	1631365	Identifier	SLJIT_MOV_UB		1631303	0					
ANR	1631366	Label	case SLJIT_MOV_SB :	58:1:2466:2483	1631303	8	True				
ANR	1631367	Identifier	SLJIT_MOV_SB		1631303	0					
ANR	1631368	ExpressionStatement	SLJIT_ASSERT ( src1 == TMP_REG1 )	59:2:2487:2517	1631303	9	True				
ANR	1631369	CallExpression	SLJIT_ASSERT ( src1 == TMP_REG1 )		1631303	0					
ANR	1631370	Callee	SLJIT_ASSERT		1631303	0					
ANR	1631371	Identifier	SLJIT_ASSERT		1631303	0					
ANR	1631372	ArgumentList	src1 == TMP_REG1		1631303	1					
ANR	1631373	Argument	src1 == TMP_REG1		1631303	0					
ANR	1631374	EqualityExpression	src1 == TMP_REG1		1631303	0		==			
ANR	1631375	Identifier	src1		1631303	0					
ANR	1631376	Identifier	TMP_REG1		1631303	1					
ANR	1631377	IfStatement	if ( ( flags & ( REG_DEST | REG2_SOURCE ) ) == ( REG_DEST | REG2_SOURCE ) )		1631303	10					
ANR	1631378	Condition	( flags & ( REG_DEST | REG2_SOURCE ) ) == ( REG_DEST | REG2_SOURCE )	60:6:2525:2586	1631303	0	True				
ANR	1631379	EqualityExpression	( flags & ( REG_DEST | REG2_SOURCE ) ) == ( REG_DEST | REG2_SOURCE )		1631303	0		==			
ANR	1631380	BitAndExpression	flags & ( REG_DEST | REG2_SOURCE )		1631303	0		&			
ANR	1631381	Identifier	flags		1631303	0					
ANR	1631382	InclusiveOrExpression	REG_DEST | REG2_SOURCE		1631303	1		|			
ANR	1631383	Identifier	REG_DEST		1631303	0					
ANR	1631384	Identifier	REG2_SOURCE		1631303	1					
ANR	1631385	InclusiveOrExpression	REG_DEST | REG2_SOURCE		1631303	1		|			
ANR	1631386	Identifier	REG_DEST		1631303	0					
ANR	1631387	Identifier	REG2_SOURCE		1631303	1					
ANR	1631388	CompoundStatement		15:70:378:378	1631303	1					
ANR	1631389	IfStatement	if ( op == SLJIT_MOV_SB )		1631303	0					
ANR	1631390	Condition	op == SLJIT_MOV_SB	61:7:2598:2615	1631303	0	True				
ANR	1631391	EqualityExpression	op == SLJIT_MOV_SB		1631303	0		==			
ANR	1631392	Identifier	op		1631303	0					
ANR	1631393	Identifier	SLJIT_MOV_SB		1631303	1					
ANR	1631394	ReturnStatement	"return push_inst ( compiler , EXTSB | S ( src2 ) | A ( dst ) ) ;"	62:4:2622:2674	1631303	1	True				
ANR	1631395	CallExpression	"push_inst ( compiler , EXTSB | S ( src2 ) | A ( dst ) )"		1631303	0					
ANR	1631396	Callee	push_inst		1631303	0					
ANR	1631397	Identifier	push_inst		1631303	0					
ANR	1631398	ArgumentList	compiler		1631303	1					
ANR	1631399	Argument	compiler		1631303	0					
ANR	1631400	Identifier	compiler		1631303	0					
ANR	1631401	Argument	EXTSB | S ( src2 ) | A ( dst )		1631303	1					
ANR	1631402	InclusiveOrExpression	EXTSB | S ( src2 ) | A ( dst )		1631303	0		|			
ANR	1631403	Identifier	EXTSB		1631303	0					
ANR	1631404	InclusiveOrExpression	S ( src2 ) | A ( dst )		1631303	1		|			
ANR	1631405	CallExpression	S ( src2 )		1631303	0					
ANR	1631406	Callee	S		1631303	0					
ANR	1631407	Identifier	S		1631303	0					
ANR	1631408	ArgumentList	src2		1631303	1					
ANR	1631409	Argument	src2		1631303	0					
ANR	1631410	Identifier	src2		1631303	0					
ANR	1631411	CallExpression	A ( dst )		1631303	1					
ANR	1631412	Callee	A		1631303	0					
ANR	1631413	Identifier	A		1631303	0					
ANR	1631414	ArgumentList	dst		1631303	1					
ANR	1631415	Argument	dst		1631303	0					
ANR	1631416	Identifier	dst		1631303	0					
ANR	1631417	ReturnStatement	"return push_inst ( compiler , INS_CLEAR_LEFT ( dst , src2 , 24 ) ) ;"	63:3:2679:2736	1631303	1	True				
ANR	1631418	CallExpression	"push_inst ( compiler , INS_CLEAR_LEFT ( dst , src2 , 24 ) )"		1631303	0					
ANR	1631419	Callee	push_inst		1631303	0					
ANR	1631420	Identifier	push_inst		1631303	0					
ANR	1631421	ArgumentList	compiler		1631303	1					
ANR	1631422	Argument	compiler		1631303	0					
ANR	1631423	Identifier	compiler		1631303	0					
ANR	1631424	Argument	"INS_CLEAR_LEFT ( dst , src2 , 24 )"		1631303	1					
ANR	1631425	CallExpression	"INS_CLEAR_LEFT ( dst , src2 , 24 )"		1631303	0					
ANR	1631426	Callee	INS_CLEAR_LEFT		1631303	0					
ANR	1631427	Identifier	INS_CLEAR_LEFT		1631303	0					
ANR	1631428	ArgumentList	dst		1631303	1					
ANR	1631429	Argument	dst		1631303	0					
ANR	1631430	Identifier	dst		1631303	0					
ANR	1631431	Argument	src2		1631303	1					
ANR	1631432	Identifier	src2		1631303	0					
ANR	1631433	Argument	24		1631303	2					
ANR	1631434	PrimaryExpression	24		1631303	0					
ANR	1631435	ElseStatement	else		1631303	0					
ANR	1631436	IfStatement	if ( ( flags & REG_DEST ) && op == SLJIT_MOV_SB )		1631303	0					
ANR	1631437	Condition	( flags & REG_DEST ) && op == SLJIT_MOV_SB	65:11:2753:2792	1631303	0	True				
ANR	1631438	AndExpression	( flags & REG_DEST ) && op == SLJIT_MOV_SB		1631303	0		&&			
ANR	1631439	BitAndExpression	flags & REG_DEST		1631303	0		&			
ANR	1631440	Identifier	flags		1631303	0					
ANR	1631441	Identifier	REG_DEST		1631303	1					
ANR	1631442	EqualityExpression	op == SLJIT_MOV_SB		1631303	1		==			
ANR	1631443	Identifier	op		1631303	0					
ANR	1631444	Identifier	SLJIT_MOV_SB		1631303	1					
ANR	1631445	ReturnStatement	"return push_inst ( compiler , EXTSB | S ( src2 ) | A ( dst ) ) ;"	66:3:2798:2850	1631303	1	True				
ANR	1631446	CallExpression	"push_inst ( compiler , EXTSB | S ( src2 ) | A ( dst ) )"		1631303	0					
ANR	1631447	Callee	push_inst		1631303	0					
ANR	1631448	Identifier	push_inst		1631303	0					
ANR	1631449	ArgumentList	compiler		1631303	1					
ANR	1631450	Argument	compiler		1631303	0					
ANR	1631451	Identifier	compiler		1631303	0					
ANR	1631452	Argument	EXTSB | S ( src2 ) | A ( dst )		1631303	1					
ANR	1631453	InclusiveOrExpression	EXTSB | S ( src2 ) | A ( dst )		1631303	0		|			
ANR	1631454	Identifier	EXTSB		1631303	0					
ANR	1631455	InclusiveOrExpression	S ( src2 ) | A ( dst )		1631303	1		|			
ANR	1631456	CallExpression	S ( src2 )		1631303	0					
ANR	1631457	Callee	S		1631303	0					
ANR	1631458	Identifier	S		1631303	0					
ANR	1631459	ArgumentList	src2		1631303	1					
ANR	1631460	Argument	src2		1631303	0					
ANR	1631461	Identifier	src2		1631303	0					
ANR	1631462	CallExpression	A ( dst )		1631303	1					
ANR	1631463	Callee	A		1631303	0					
ANR	1631464	Identifier	A		1631303	0					
ANR	1631465	ArgumentList	dst		1631303	1					
ANR	1631466	Argument	dst		1631303	0					
ANR	1631467	Identifier	dst		1631303	0					
ANR	1631468	ElseStatement	else		1631303	0					
ANR	1631469	CompoundStatement		22:7:648:648	1631303	0					
ANR	1631470	ExpressionStatement	SLJIT_ASSERT ( dst == src2 )	68:3:2864:2889	1631303	0	True				
ANR	1631471	CallExpression	SLJIT_ASSERT ( dst == src2 )		1631303	0					
ANR	1631472	Callee	SLJIT_ASSERT		1631303	0					
ANR	1631473	Identifier	SLJIT_ASSERT		1631303	0					
ANR	1631474	ArgumentList	dst == src2		1631303	1					
ANR	1631475	Argument	dst == src2		1631303	0					
ANR	1631476	EqualityExpression	dst == src2		1631303	0		==			
ANR	1631477	Identifier	dst		1631303	0					
ANR	1631478	Identifier	src2		1631303	1					
ANR	1631479	ReturnStatement	return SLJIT_SUCCESS ;	70:2:2897:2917	1631303	11	True				
ANR	1631480	Identifier	SLJIT_SUCCESS		1631303	0					
ANR	1631481	Label	case SLJIT_MOV_UH :	72:1:2921:2938	1631303	12	True				
ANR	1631482	Identifier	SLJIT_MOV_UH		1631303	0					
ANR	1631483	Label	case SLJIT_MOV_SH :	73:1:2941:2958	1631303	13	True				
ANR	1631484	Identifier	SLJIT_MOV_SH		1631303	0					
ANR	1631485	ExpressionStatement	SLJIT_ASSERT ( src1 == TMP_REG1 )	74:2:2962:2992	1631303	14	True				
ANR	1631486	CallExpression	SLJIT_ASSERT ( src1 == TMP_REG1 )		1631303	0					
ANR	1631487	Callee	SLJIT_ASSERT		1631303	0					
ANR	1631488	Identifier	SLJIT_ASSERT		1631303	0					
ANR	1631489	ArgumentList	src1 == TMP_REG1		1631303	1					
ANR	1631490	Argument	src1 == TMP_REG1		1631303	0					
ANR	1631491	EqualityExpression	src1 == TMP_REG1		1631303	0		==			
ANR	1631492	Identifier	src1		1631303	0					
ANR	1631493	Identifier	TMP_REG1		1631303	1					
ANR	1631494	IfStatement	if ( ( flags & ( REG_DEST | REG2_SOURCE ) ) == ( REG_DEST | REG2_SOURCE ) )		1631303	15					
ANR	1631495	Condition	( flags & ( REG_DEST | REG2_SOURCE ) ) == ( REG_DEST | REG2_SOURCE )	75:6:3000:3061	1631303	0	True				
ANR	1631496	EqualityExpression	( flags & ( REG_DEST | REG2_SOURCE ) ) == ( REG_DEST | REG2_SOURCE )		1631303	0		==			
ANR	1631497	BitAndExpression	flags & ( REG_DEST | REG2_SOURCE )		1631303	0		&			
ANR	1631498	Identifier	flags		1631303	0					
ANR	1631499	InclusiveOrExpression	REG_DEST | REG2_SOURCE		1631303	1		|			
ANR	1631500	Identifier	REG_DEST		1631303	0					
ANR	1631501	Identifier	REG2_SOURCE		1631303	1					
ANR	1631502	InclusiveOrExpression	REG_DEST | REG2_SOURCE		1631303	1		|			
ANR	1631503	Identifier	REG_DEST		1631303	0					
ANR	1631504	Identifier	REG2_SOURCE		1631303	1					
ANR	1631505	CompoundStatement		30:70:853:853	1631303	1					
ANR	1631506	IfStatement	if ( op == SLJIT_MOV_SH )		1631303	0					
ANR	1631507	Condition	op == SLJIT_MOV_SH	76:7:3073:3090	1631303	0	True				
ANR	1631508	EqualityExpression	op == SLJIT_MOV_SH		1631303	0		==			
ANR	1631509	Identifier	op		1631303	0					
ANR	1631510	Identifier	SLJIT_MOV_SH		1631303	1					
ANR	1631511	ReturnStatement	"return push_inst ( compiler , EXTSH | S ( src2 ) | A ( dst ) ) ;"	77:4:3097:3149	1631303	1	True				
ANR	1631512	CallExpression	"push_inst ( compiler , EXTSH | S ( src2 ) | A ( dst ) )"		1631303	0					
ANR	1631513	Callee	push_inst		1631303	0					
ANR	1631514	Identifier	push_inst		1631303	0					
ANR	1631515	ArgumentList	compiler		1631303	1					
ANR	1631516	Argument	compiler		1631303	0					
ANR	1631517	Identifier	compiler		1631303	0					
ANR	1631518	Argument	EXTSH | S ( src2 ) | A ( dst )		1631303	1					
ANR	1631519	InclusiveOrExpression	EXTSH | S ( src2 ) | A ( dst )		1631303	0		|			
ANR	1631520	Identifier	EXTSH		1631303	0					
ANR	1631521	InclusiveOrExpression	S ( src2 ) | A ( dst )		1631303	1		|			
ANR	1631522	CallExpression	S ( src2 )		1631303	0					
ANR	1631523	Callee	S		1631303	0					
ANR	1631524	Identifier	S		1631303	0					
ANR	1631525	ArgumentList	src2		1631303	1					
ANR	1631526	Argument	src2		1631303	0					
ANR	1631527	Identifier	src2		1631303	0					
ANR	1631528	CallExpression	A ( dst )		1631303	1					
ANR	1631529	Callee	A		1631303	0					
ANR	1631530	Identifier	A		1631303	0					
ANR	1631531	ArgumentList	dst		1631303	1					
ANR	1631532	Argument	dst		1631303	0					
ANR	1631533	Identifier	dst		1631303	0					
ANR	1631534	ReturnStatement	"return push_inst ( compiler , INS_CLEAR_LEFT ( dst , src2 , 16 ) ) ;"	78:3:3154:3211	1631303	1	True				
ANR	1631535	CallExpression	"push_inst ( compiler , INS_CLEAR_LEFT ( dst , src2 , 16 ) )"		1631303	0					
ANR	1631536	Callee	push_inst		1631303	0					
ANR	1631537	Identifier	push_inst		1631303	0					
ANR	1631538	ArgumentList	compiler		1631303	1					
ANR	1631539	Argument	compiler		1631303	0					
ANR	1631540	Identifier	compiler		1631303	0					
ANR	1631541	Argument	"INS_CLEAR_LEFT ( dst , src2 , 16 )"		1631303	1					
ANR	1631542	CallExpression	"INS_CLEAR_LEFT ( dst , src2 , 16 )"		1631303	0					
ANR	1631543	Callee	INS_CLEAR_LEFT		1631303	0					
ANR	1631544	Identifier	INS_CLEAR_LEFT		1631303	0					
ANR	1631545	ArgumentList	dst		1631303	1					
ANR	1631546	Argument	dst		1631303	0					
ANR	1631547	Identifier	dst		1631303	0					
ANR	1631548	Argument	src2		1631303	1					
ANR	1631549	Identifier	src2		1631303	0					
ANR	1631550	Argument	16		1631303	2					
ANR	1631551	PrimaryExpression	16		1631303	0					
ANR	1631552	ElseStatement	else		1631303	0					
ANR	1631553	CompoundStatement		35:7:1013:1013	1631303	0					
ANR	1631554	ExpressionStatement	SLJIT_ASSERT ( dst == src2 )	81:3:3229:3254	1631303	0	True				
ANR	1631555	CallExpression	SLJIT_ASSERT ( dst == src2 )		1631303	0					
ANR	1631556	Callee	SLJIT_ASSERT		1631303	0					
ANR	1631557	Identifier	SLJIT_ASSERT		1631303	0					
ANR	1631558	ArgumentList	dst == src2		1631303	1					
ANR	1631559	Argument	dst == src2		1631303	0					
ANR	1631560	EqualityExpression	dst == src2		1631303	0		==			
ANR	1631561	Identifier	dst		1631303	0					
ANR	1631562	Identifier	src2		1631303	1					
ANR	1631563	ReturnStatement	return SLJIT_SUCCESS ;	83:2:3262:3282	1631303	16	True				
ANR	1631564	Identifier	SLJIT_SUCCESS		1631303	0					
ANR	1631565	Label	case SLJIT_NOT :	85:1:3286:3300	1631303	17	True				
ANR	1631566	Identifier	SLJIT_NOT		1631303	0					
ANR	1631567	ExpressionStatement	SLJIT_ASSERT ( src1 == TMP_REG1 )	86:2:3304:3334	1631303	18	True				
ANR	1631568	CallExpression	SLJIT_ASSERT ( src1 == TMP_REG1 )		1631303	0					
ANR	1631569	Callee	SLJIT_ASSERT		1631303	0					
ANR	1631570	Identifier	SLJIT_ASSERT		1631303	0					
ANR	1631571	ArgumentList	src1 == TMP_REG1		1631303	1					
ANR	1631572	Argument	src1 == TMP_REG1		1631303	0					
ANR	1631573	EqualityExpression	src1 == TMP_REG1		1631303	0		==			
ANR	1631574	Identifier	src1		1631303	0					
ANR	1631575	Identifier	TMP_REG1		1631303	1					
ANR	1631576	ReturnStatement	"return push_inst ( compiler , NOR | RC ( flags ) | S ( src2 ) | A ( dst ) | B ( src2 ) ) ;"	87:2:3338:3410	1631303	19	True				
ANR	1631577	CallExpression	"push_inst ( compiler , NOR | RC ( flags ) | S ( src2 ) | A ( dst ) | B ( src2 ) )"		1631303	0					
ANR	1631578	Callee	push_inst		1631303	0					
ANR	1631579	Identifier	push_inst		1631303	0					
ANR	1631580	ArgumentList	compiler		1631303	1					
ANR	1631581	Argument	compiler		1631303	0					
ANR	1631582	Identifier	compiler		1631303	0					
ANR	1631583	Argument	NOR | RC ( flags ) | S ( src2 ) | A ( dst ) | B ( src2 )		1631303	1					
ANR	1631584	InclusiveOrExpression	NOR | RC ( flags ) | S ( src2 ) | A ( dst ) | B ( src2 )		1631303	0		|			
ANR	1631585	Identifier	NOR		1631303	0					
ANR	1631586	InclusiveOrExpression	RC ( flags ) | S ( src2 ) | A ( dst ) | B ( src2 )		1631303	1		|			
ANR	1631587	CallExpression	RC ( flags )		1631303	0					
ANR	1631588	Callee	RC		1631303	0					
ANR	1631589	Identifier	RC		1631303	0					
ANR	1631590	ArgumentList	flags		1631303	1					
ANR	1631591	Argument	flags		1631303	0					
ANR	1631592	Identifier	flags		1631303	0					
ANR	1631593	InclusiveOrExpression	S ( src2 ) | A ( dst ) | B ( src2 )		1631303	1		|			
ANR	1631594	CallExpression	S ( src2 )		1631303	0					
ANR	1631595	Callee	S		1631303	0					
ANR	1631596	Identifier	S		1631303	0					
ANR	1631597	ArgumentList	src2		1631303	1					
ANR	1631598	Argument	src2		1631303	0					
ANR	1631599	Identifier	src2		1631303	0					
ANR	1631600	InclusiveOrExpression	A ( dst ) | B ( src2 )		1631303	1		|			
ANR	1631601	CallExpression	A ( dst )		1631303	0					
ANR	1631602	Callee	A		1631303	0					
ANR	1631603	Identifier	A		1631303	0					
ANR	1631604	ArgumentList	dst		1631303	1					
ANR	1631605	Argument	dst		1631303	0					
ANR	1631606	Identifier	dst		1631303	0					
ANR	1631607	CallExpression	B ( src2 )		1631303	1					
ANR	1631608	Callee	B		1631303	0					
ANR	1631609	Identifier	B		1631303	0					
ANR	1631610	ArgumentList	src2		1631303	1					
ANR	1631611	Argument	src2		1631303	0					
ANR	1631612	Identifier	src2		1631303	0					
ANR	1631613	Label	case SLJIT_NEG :	89:1:3414:3428	1631303	20	True				
ANR	1631614	Identifier	SLJIT_NEG		1631303	0					
ANR	1631615	ExpressionStatement	SLJIT_ASSERT ( src1 == TMP_REG1 )	90:2:3432:3462	1631303	21	True				
ANR	1631616	CallExpression	SLJIT_ASSERT ( src1 == TMP_REG1 )		1631303	0					
ANR	1631617	Callee	SLJIT_ASSERT		1631303	0					
ANR	1631618	Identifier	SLJIT_ASSERT		1631303	0					
ANR	1631619	ArgumentList	src1 == TMP_REG1		1631303	1					
ANR	1631620	Argument	src1 == TMP_REG1		1631303	0					
ANR	1631621	EqualityExpression	src1 == TMP_REG1		1631303	0		==			
ANR	1631622	Identifier	src1		1631303	0					
ANR	1631623	Identifier	TMP_REG1		1631303	1					
ANR	1631624	ReturnStatement	"return push_inst ( compiler , NEG | OERC ( flags ) | D ( dst ) | A ( src2 ) ) ;"	91:2:3466:3530	1631303	22	True				
ANR	1631625	CallExpression	"push_inst ( compiler , NEG | OERC ( flags ) | D ( dst ) | A ( src2 ) )"		1631303	0					
ANR	1631626	Callee	push_inst		1631303	0					
ANR	1631627	Identifier	push_inst		1631303	0					
ANR	1631628	ArgumentList	compiler		1631303	1					
ANR	1631629	Argument	compiler		1631303	0					
ANR	1631630	Identifier	compiler		1631303	0					
ANR	1631631	Argument	NEG | OERC ( flags ) | D ( dst ) | A ( src2 )		1631303	1					
ANR	1631632	InclusiveOrExpression	NEG | OERC ( flags ) | D ( dst ) | A ( src2 )		1631303	0		|			
ANR	1631633	Identifier	NEG		1631303	0					
ANR	1631634	InclusiveOrExpression	OERC ( flags ) | D ( dst ) | A ( src2 )		1631303	1		|			
ANR	1631635	CallExpression	OERC ( flags )		1631303	0					
ANR	1631636	Callee	OERC		1631303	0					
ANR	1631637	Identifier	OERC		1631303	0					
ANR	1631638	ArgumentList	flags		1631303	1					
ANR	1631639	Argument	flags		1631303	0					
ANR	1631640	Identifier	flags		1631303	0					
ANR	1631641	InclusiveOrExpression	D ( dst ) | A ( src2 )		1631303	1		|			
ANR	1631642	CallExpression	D ( dst )		1631303	0					
ANR	1631643	Callee	D		1631303	0					
ANR	1631644	Identifier	D		1631303	0					
ANR	1631645	ArgumentList	dst		1631303	1					
ANR	1631646	Argument	dst		1631303	0					
ANR	1631647	Identifier	dst		1631303	0					
ANR	1631648	CallExpression	A ( src2 )		1631303	1					
ANR	1631649	Callee	A		1631303	0					
ANR	1631650	Identifier	A		1631303	0					
ANR	1631651	ArgumentList	src2		1631303	1					
ANR	1631652	Argument	src2		1631303	0					
ANR	1631653	Identifier	src2		1631303	0					
ANR	1631654	Label	case SLJIT_CLZ :	93:1:3534:3548	1631303	23	True				
ANR	1631655	Identifier	SLJIT_CLZ		1631303	0					
ANR	1631656	ExpressionStatement	SLJIT_ASSERT ( src1 == TMP_REG1 )	94:2:3552:3582	1631303	24	True				
ANR	1631657	CallExpression	SLJIT_ASSERT ( src1 == TMP_REG1 )		1631303	0					
ANR	1631658	Callee	SLJIT_ASSERT		1631303	0					
ANR	1631659	Identifier	SLJIT_ASSERT		1631303	0					
ANR	1631660	ArgumentList	src1 == TMP_REG1		1631303	1					
ANR	1631661	Argument	src1 == TMP_REG1		1631303	0					
ANR	1631662	EqualityExpression	src1 == TMP_REG1		1631303	0		==			
ANR	1631663	Identifier	src1		1631303	0					
ANR	1631664	Identifier	TMP_REG1		1631303	1					
ANR	1631665	ReturnStatement	"return push_inst ( compiler , CNTLZW | RC ( flags ) | S ( src2 ) | A ( dst ) ) ;"	95:2:3586:3651	1631303	25	True				
ANR	1631666	CallExpression	"push_inst ( compiler , CNTLZW | RC ( flags ) | S ( src2 ) | A ( dst ) )"		1631303	0					
ANR	1631667	Callee	push_inst		1631303	0					
ANR	1631668	Identifier	push_inst		1631303	0					
ANR	1631669	ArgumentList	compiler		1631303	1					
ANR	1631670	Argument	compiler		1631303	0					
ANR	1631671	Identifier	compiler		1631303	0					
ANR	1631672	Argument	CNTLZW | RC ( flags ) | S ( src2 ) | A ( dst )		1631303	1					
ANR	1631673	InclusiveOrExpression	CNTLZW | RC ( flags ) | S ( src2 ) | A ( dst )		1631303	0		|			
ANR	1631674	Identifier	CNTLZW		1631303	0					
ANR	1631675	InclusiveOrExpression	RC ( flags ) | S ( src2 ) | A ( dst )		1631303	1		|			
ANR	1631676	CallExpression	RC ( flags )		1631303	0					
ANR	1631677	Callee	RC		1631303	0					
ANR	1631678	Identifier	RC		1631303	0					
ANR	1631679	ArgumentList	flags		1631303	1					
ANR	1631680	Argument	flags		1631303	0					
ANR	1631681	Identifier	flags		1631303	0					
ANR	1631682	InclusiveOrExpression	S ( src2 ) | A ( dst )		1631303	1		|			
ANR	1631683	CallExpression	S ( src2 )		1631303	0					
ANR	1631684	Callee	S		1631303	0					
ANR	1631685	Identifier	S		1631303	0					
ANR	1631686	ArgumentList	src2		1631303	1					
ANR	1631687	Argument	src2		1631303	0					
ANR	1631688	Identifier	src2		1631303	0					
ANR	1631689	CallExpression	A ( dst )		1631303	1					
ANR	1631690	Callee	A		1631303	0					
ANR	1631691	Identifier	A		1631303	0					
ANR	1631692	ArgumentList	dst		1631303	1					
ANR	1631693	Argument	dst		1631303	0					
ANR	1631694	Identifier	dst		1631303	0					
ANR	1631695	Label	case SLJIT_ADD :	97:1:3655:3669	1631303	26	True				
ANR	1631696	Identifier	SLJIT_ADD		1631303	0					
ANR	1631697	IfStatement	if ( flags & ALT_FORM1 )		1631303	27					
ANR	1631698	Condition	flags & ALT_FORM1	98:6:3677:3693	1631303	0	True				
ANR	1631699	BitAndExpression	flags & ALT_FORM1		1631303	0		&			
ANR	1631700	Identifier	flags		1631303	0					
ANR	1631701	Identifier	ALT_FORM1		1631303	1					
ANR	1631702	CompoundStatement		53:25:1485:1485	1631303	1					
ANR	1631703	ExpressionStatement	SLJIT_ASSERT ( src2 == TMP_REG2 )	100:3:3756:3786	1631303	0	True				
ANR	1631704	CallExpression	SLJIT_ASSERT ( src2 == TMP_REG2 )		1631303	0					
ANR	1631705	Callee	SLJIT_ASSERT		1631303	0					
ANR	1631706	Identifier	SLJIT_ASSERT		1631303	0					
ANR	1631707	ArgumentList	src2 == TMP_REG2		1631303	1					
ANR	1631708	Argument	src2 == TMP_REG2		1631303	0					
ANR	1631709	EqualityExpression	src2 == TMP_REG2		1631303	0		==			
ANR	1631710	Identifier	src2		1631303	0					
ANR	1631711	Identifier	TMP_REG2		1631303	1					
ANR	1631712	ReturnStatement	"return push_inst ( compiler , ADDI | D ( dst ) | A ( src1 ) | compiler -> imm ) ;"	101:3:3791:3858	1631303	1	True				
ANR	1631713	CallExpression	"push_inst ( compiler , ADDI | D ( dst ) | A ( src1 ) | compiler -> imm )"		1631303	0					
ANR	1631714	Callee	push_inst		1631303	0					
ANR	1631715	Identifier	push_inst		1631303	0					
ANR	1631716	ArgumentList	compiler		1631303	1					
ANR	1631717	Argument	compiler		1631303	0					
ANR	1631718	Identifier	compiler		1631303	0					
ANR	1631719	Argument	ADDI | D ( dst ) | A ( src1 ) | compiler -> imm		1631303	1					
ANR	1631720	InclusiveOrExpression	ADDI | D ( dst ) | A ( src1 ) | compiler -> imm		1631303	0		|			
ANR	1631721	Identifier	ADDI		1631303	0					
ANR	1631722	InclusiveOrExpression	D ( dst ) | A ( src1 ) | compiler -> imm		1631303	1		|			
ANR	1631723	CallExpression	D ( dst )		1631303	0					
ANR	1631724	Callee	D		1631303	0					
ANR	1631725	Identifier	D		1631303	0					
ANR	1631726	ArgumentList	dst		1631303	1					
ANR	1631727	Argument	dst		1631303	0					
ANR	1631728	Identifier	dst		1631303	0					
ANR	1631729	InclusiveOrExpression	A ( src1 ) | compiler -> imm		1631303	1		|			
ANR	1631730	CallExpression	A ( src1 )		1631303	0					
ANR	1631731	Callee	A		1631303	0					
ANR	1631732	Identifier	A		1631303	0					
ANR	1631733	ArgumentList	src1		1631303	1					
ANR	1631734	Argument	src1		1631303	0					
ANR	1631735	Identifier	src1		1631303	0					
ANR	1631736	PtrMemberAccess	compiler -> imm		1631303	1					
ANR	1631737	Identifier	compiler		1631303	0					
ANR	1631738	Identifier	imm		1631303	1					
ANR	1631739	IfStatement	if ( flags & ALT_FORM2 )		1631303	28					
ANR	1631740	Condition	flags & ALT_FORM2	103:6:3870:3886	1631303	0	True				
ANR	1631741	BitAndExpression	flags & ALT_FORM2		1631303	0		&			
ANR	1631742	Identifier	flags		1631303	0					
ANR	1631743	Identifier	ALT_FORM2		1631303	1					
ANR	1631744	CompoundStatement		58:25:1678:1678	1631303	1					
ANR	1631745	ExpressionStatement	SLJIT_ASSERT ( src2 == TMP_REG2 )	105:3:3949:3979	1631303	0	True				
ANR	1631746	CallExpression	SLJIT_ASSERT ( src2 == TMP_REG2 )		1631303	0					
ANR	1631747	Callee	SLJIT_ASSERT		1631303	0					
ANR	1631748	Identifier	SLJIT_ASSERT		1631303	0					
ANR	1631749	ArgumentList	src2 == TMP_REG2		1631303	1					
ANR	1631750	Argument	src2 == TMP_REG2		1631303	0					
ANR	1631751	EqualityExpression	src2 == TMP_REG2		1631303	0		==			
ANR	1631752	Identifier	src2		1631303	0					
ANR	1631753	Identifier	TMP_REG2		1631303	1					
ANR	1631754	ReturnStatement	"return push_inst ( compiler , ADDIS | D ( dst ) | A ( src1 ) | compiler -> imm ) ;"	106:3:3984:4052	1631303	1	True				
ANR	1631755	CallExpression	"push_inst ( compiler , ADDIS | D ( dst ) | A ( src1 ) | compiler -> imm )"		1631303	0					
ANR	1631756	Callee	push_inst		1631303	0					
ANR	1631757	Identifier	push_inst		1631303	0					
ANR	1631758	ArgumentList	compiler		1631303	1					
ANR	1631759	Argument	compiler		1631303	0					
ANR	1631760	Identifier	compiler		1631303	0					
ANR	1631761	Argument	ADDIS | D ( dst ) | A ( src1 ) | compiler -> imm		1631303	1					
ANR	1631762	InclusiveOrExpression	ADDIS | D ( dst ) | A ( src1 ) | compiler -> imm		1631303	0		|			
ANR	1631763	Identifier	ADDIS		1631303	0					
ANR	1631764	InclusiveOrExpression	D ( dst ) | A ( src1 ) | compiler -> imm		1631303	1		|			
ANR	1631765	CallExpression	D ( dst )		1631303	0					
ANR	1631766	Callee	D		1631303	0					
ANR	1631767	Identifier	D		1631303	0					
ANR	1631768	ArgumentList	dst		1631303	1					
ANR	1631769	Argument	dst		1631303	0					
ANR	1631770	Identifier	dst		1631303	0					
ANR	1631771	InclusiveOrExpression	A ( src1 ) | compiler -> imm		1631303	1		|			
ANR	1631772	CallExpression	A ( src1 )		1631303	0					
ANR	1631773	Callee	A		1631303	0					
ANR	1631774	Identifier	A		1631303	0					
ANR	1631775	ArgumentList	src1		1631303	1					
ANR	1631776	Argument	src1		1631303	0					
ANR	1631777	Identifier	src1		1631303	0					
ANR	1631778	PtrMemberAccess	compiler -> imm		1631303	1					
ANR	1631779	Identifier	compiler		1631303	0					
ANR	1631780	Identifier	imm		1631303	1					
ANR	1631781	IfStatement	if ( flags & ALT_FORM3 )		1631303	29					
ANR	1631782	Condition	flags & ALT_FORM3	108:6:4064:4080	1631303	0	True				
ANR	1631783	BitAndExpression	flags & ALT_FORM3		1631303	0		&			
ANR	1631784	Identifier	flags		1631303	0					
ANR	1631785	Identifier	ALT_FORM3		1631303	1					
ANR	1631786	CompoundStatement		63:25:1872:1872	1631303	1					
ANR	1631787	ExpressionStatement	SLJIT_ASSERT ( src2 == TMP_REG2 )	109:3:4088:4118	1631303	0	True				
ANR	1631788	CallExpression	SLJIT_ASSERT ( src2 == TMP_REG2 )		1631303	0					
ANR	1631789	Callee	SLJIT_ASSERT		1631303	0					
ANR	1631790	Identifier	SLJIT_ASSERT		1631303	0					
ANR	1631791	ArgumentList	src2 == TMP_REG2		1631303	1					
ANR	1631792	Argument	src2 == TMP_REG2		1631303	0					
ANR	1631793	EqualityExpression	src2 == TMP_REG2		1631303	0		==			
ANR	1631794	Identifier	src2		1631303	0					
ANR	1631795	Identifier	TMP_REG2		1631303	1					
ANR	1631796	ReturnStatement	"return push_inst ( compiler , ADDIC | D ( dst ) | A ( src1 ) | compiler -> imm ) ;"	110:3:4123:4191	1631303	1	True				
ANR	1631797	CallExpression	"push_inst ( compiler , ADDIC | D ( dst ) | A ( src1 ) | compiler -> imm )"		1631303	0					
ANR	1631798	Callee	push_inst		1631303	0					
ANR	1631799	Identifier	push_inst		1631303	0					
ANR	1631800	ArgumentList	compiler		1631303	1					
ANR	1631801	Argument	compiler		1631303	0					
ANR	1631802	Identifier	compiler		1631303	0					
ANR	1631803	Argument	ADDIC | D ( dst ) | A ( src1 ) | compiler -> imm		1631303	1					
ANR	1631804	InclusiveOrExpression	ADDIC | D ( dst ) | A ( src1 ) | compiler -> imm		1631303	0		|			
ANR	1631805	Identifier	ADDIC		1631303	0					
ANR	1631806	InclusiveOrExpression	D ( dst ) | A ( src1 ) | compiler -> imm		1631303	1		|			
ANR	1631807	CallExpression	D ( dst )		1631303	0					
ANR	1631808	Callee	D		1631303	0					
ANR	1631809	Identifier	D		1631303	0					
ANR	1631810	ArgumentList	dst		1631303	1					
ANR	1631811	Argument	dst		1631303	0					
ANR	1631812	Identifier	dst		1631303	0					
ANR	1631813	InclusiveOrExpression	A ( src1 ) | compiler -> imm		1631303	1		|			
ANR	1631814	CallExpression	A ( src1 )		1631303	0					
ANR	1631815	Callee	A		1631303	0					
ANR	1631816	Identifier	A		1631303	0					
ANR	1631817	ArgumentList	src1		1631303	1					
ANR	1631818	Argument	src1		1631303	0					
ANR	1631819	Identifier	src1		1631303	0					
ANR	1631820	PtrMemberAccess	compiler -> imm		1631303	1					
ANR	1631821	Identifier	compiler		1631303	0					
ANR	1631822	Identifier	imm		1631303	1					
ANR	1631823	IfStatement	if ( flags & ALT_FORM4 )		1631303	30					
ANR	1631824	Condition	flags & ALT_FORM4	112:6:4203:4219	1631303	0	True				
ANR	1631825	BitAndExpression	flags & ALT_FORM4		1631303	0		&			
ANR	1631826	Identifier	flags		1631303	0					
ANR	1631827	Identifier	ALT_FORM4		1631303	1					
ANR	1631828	CompoundStatement		67:25:2011:2011	1631303	1					
ANR	1631829	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDI | D ( dst ) | A ( src1 ) | ( compiler -> imm & 0xffff ) ) )"	114:3:4282:4362	1631303	0	True				
ANR	1631830	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDI | D ( dst ) | A ( src1 ) | ( compiler -> imm & 0xffff ) ) )"		1631303	0					
ANR	1631831	Callee	FAIL_IF		1631303	0					
ANR	1631832	Identifier	FAIL_IF		1631303	0					
ANR	1631833	ArgumentList	"push_inst ( compiler , ADDI | D ( dst ) | A ( src1 ) | ( compiler -> imm & 0xffff ) )"		1631303	1					
ANR	1631834	Argument	"push_inst ( compiler , ADDI | D ( dst ) | A ( src1 ) | ( compiler -> imm & 0xffff ) )"		1631303	0					
ANR	1631835	CallExpression	"push_inst ( compiler , ADDI | D ( dst ) | A ( src1 ) | ( compiler -> imm & 0xffff ) )"		1631303	0					
ANR	1631836	Callee	push_inst		1631303	0					
ANR	1631837	Identifier	push_inst		1631303	0					
ANR	1631838	ArgumentList	compiler		1631303	1					
ANR	1631839	Argument	compiler		1631303	0					
ANR	1631840	Identifier	compiler		1631303	0					
ANR	1631841	Argument	ADDI | D ( dst ) | A ( src1 ) | ( compiler -> imm & 0xffff )		1631303	1					
ANR	1631842	InclusiveOrExpression	ADDI | D ( dst ) | A ( src1 ) | ( compiler -> imm & 0xffff )		1631303	0		|			
ANR	1631843	Identifier	ADDI		1631303	0					
ANR	1631844	InclusiveOrExpression	D ( dst ) | A ( src1 ) | ( compiler -> imm & 0xffff )		1631303	1		|			
ANR	1631845	CallExpression	D ( dst )		1631303	0					
ANR	1631846	Callee	D		1631303	0					
ANR	1631847	Identifier	D		1631303	0					
ANR	1631848	ArgumentList	dst		1631303	1					
ANR	1631849	Argument	dst		1631303	0					
ANR	1631850	Identifier	dst		1631303	0					
ANR	1631851	InclusiveOrExpression	A ( src1 ) | ( compiler -> imm & 0xffff )		1631303	1		|			
ANR	1631852	CallExpression	A ( src1 )		1631303	0					
ANR	1631853	Callee	A		1631303	0					
ANR	1631854	Identifier	A		1631303	0					
ANR	1631855	ArgumentList	src1		1631303	1					
ANR	1631856	Argument	src1		1631303	0					
ANR	1631857	Identifier	src1		1631303	0					
ANR	1631858	BitAndExpression	compiler -> imm & 0xffff		1631303	1		&			
ANR	1631859	PtrMemberAccess	compiler -> imm		1631303	0					
ANR	1631860	Identifier	compiler		1631303	0					
ANR	1631861	Identifier	imm		1631303	1					
ANR	1631862	PrimaryExpression	0xffff		1631303	1					
ANR	1631863	ReturnStatement	"return push_inst ( compiler , ADDIS | D ( dst ) | A ( dst ) | ( ( ( compiler -> imm >> 16 ) & 0xffff ) + ( ( compiler -> imm >> 15 ) & 0x1 ) ) ) ;"	115:3:4367:4487	1631303	1	True				
ANR	1631864	CallExpression	"push_inst ( compiler , ADDIS | D ( dst ) | A ( dst ) | ( ( ( compiler -> imm >> 16 ) & 0xffff ) + ( ( compiler -> imm >> 15 ) & 0x1 ) ) )"		1631303	0					
ANR	1631865	Callee	push_inst		1631303	0					
ANR	1631866	Identifier	push_inst		1631303	0					
ANR	1631867	ArgumentList	compiler		1631303	1					
ANR	1631868	Argument	compiler		1631303	0					
ANR	1631869	Identifier	compiler		1631303	0					
ANR	1631870	Argument	ADDIS | D ( dst ) | A ( dst ) | ( ( ( compiler -> imm >> 16 ) & 0xffff ) + ( ( compiler -> imm >> 15 ) & 0x1 ) )		1631303	1					
ANR	1631871	InclusiveOrExpression	ADDIS | D ( dst ) | A ( dst ) | ( ( ( compiler -> imm >> 16 ) & 0xffff ) + ( ( compiler -> imm >> 15 ) & 0x1 ) )		1631303	0		|			
ANR	1631872	Identifier	ADDIS		1631303	0					
ANR	1631873	InclusiveOrExpression	D ( dst ) | A ( dst ) | ( ( ( compiler -> imm >> 16 ) & 0xffff ) + ( ( compiler -> imm >> 15 ) & 0x1 ) )		1631303	1		|			
ANR	1631874	CallExpression	D ( dst )		1631303	0					
ANR	1631875	Callee	D		1631303	0					
ANR	1631876	Identifier	D		1631303	0					
ANR	1631877	ArgumentList	dst		1631303	1					
ANR	1631878	Argument	dst		1631303	0					
ANR	1631879	Identifier	dst		1631303	0					
ANR	1631880	InclusiveOrExpression	A ( dst ) | ( ( ( compiler -> imm >> 16 ) & 0xffff ) + ( ( compiler -> imm >> 15 ) & 0x1 ) )		1631303	1		|			
ANR	1631881	CallExpression	A ( dst )		1631303	0					
ANR	1631882	Callee	A		1631303	0					
ANR	1631883	Identifier	A		1631303	0					
ANR	1631884	ArgumentList	dst		1631303	1					
ANR	1631885	Argument	dst		1631303	0					
ANR	1631886	Identifier	dst		1631303	0					
ANR	1631887	AdditiveExpression	( ( compiler -> imm >> 16 ) & 0xffff ) + ( ( compiler -> imm >> 15 ) & 0x1 )		1631303	1		+			
ANR	1631888	BitAndExpression	( compiler -> imm >> 16 ) & 0xffff		1631303	0		&			
ANR	1631889	ShiftExpression	compiler -> imm >> 16		1631303	0		>>			
ANR	1631890	PtrMemberAccess	compiler -> imm		1631303	0					
ANR	1631891	Identifier	compiler		1631303	0					
ANR	1631892	Identifier	imm		1631303	1					
ANR	1631893	PrimaryExpression	16		1631303	1					
ANR	1631894	PrimaryExpression	0xffff		1631303	1					
ANR	1631895	BitAndExpression	( compiler -> imm >> 15 ) & 0x1		1631303	1		&			
ANR	1631896	ShiftExpression	compiler -> imm >> 15		1631303	0		>>			
ANR	1631897	PtrMemberAccess	compiler -> imm		1631303	0					
ANR	1631898	Identifier	compiler		1631303	0					
ANR	1631899	Identifier	imm		1631303	1					
ANR	1631900	PrimaryExpression	15		1631303	1					
ANR	1631901	PrimaryExpression	0x1		1631303	1					
ANR	1631902	IfStatement	if ( ! ( flags & ALT_SET_FLAGS ) )		1631303	31					
ANR	1631903	Condition	! ( flags & ALT_SET_FLAGS )	117:6:4499:4522	1631303	0	True				
ANR	1631904	UnaryOperationExpression	! ( flags & ALT_SET_FLAGS )		1631303	0					
ANR	1631905	UnaryOperator	!		1631303	0					
ANR	1631906	BitAndExpression	flags & ALT_SET_FLAGS		1631303	1		&			
ANR	1631907	Identifier	flags		1631303	0					
ANR	1631908	Identifier	ALT_SET_FLAGS		1631303	1					
ANR	1631909	ReturnStatement	"return push_inst ( compiler , ADD | D ( dst ) | A ( src1 ) | B ( src2 ) ) ;"	118:3:4528:4588	1631303	1	True				
ANR	1631910	CallExpression	"push_inst ( compiler , ADD | D ( dst ) | A ( src1 ) | B ( src2 ) )"		1631303	0					
ANR	1631911	Callee	push_inst		1631303	0					
ANR	1631912	Identifier	push_inst		1631303	0					
ANR	1631913	ArgumentList	compiler		1631303	1					
ANR	1631914	Argument	compiler		1631303	0					
ANR	1631915	Identifier	compiler		1631303	0					
ANR	1631916	Argument	ADD | D ( dst ) | A ( src1 ) | B ( src2 )		1631303	1					
ANR	1631917	InclusiveOrExpression	ADD | D ( dst ) | A ( src1 ) | B ( src2 )		1631303	0		|			
ANR	1631918	Identifier	ADD		1631303	0					
ANR	1631919	InclusiveOrExpression	D ( dst ) | A ( src1 ) | B ( src2 )		1631303	1		|			
ANR	1631920	CallExpression	D ( dst )		1631303	0					
ANR	1631921	Callee	D		1631303	0					
ANR	1631922	Identifier	D		1631303	0					
ANR	1631923	ArgumentList	dst		1631303	1					
ANR	1631924	Argument	dst		1631303	0					
ANR	1631925	Identifier	dst		1631303	0					
ANR	1631926	InclusiveOrExpression	A ( src1 ) | B ( src2 )		1631303	1		|			
ANR	1631927	CallExpression	A ( src1 )		1631303	0					
ANR	1631928	Callee	A		1631303	0					
ANR	1631929	Identifier	A		1631303	0					
ANR	1631930	ArgumentList	src1		1631303	1					
ANR	1631931	Argument	src1		1631303	0					
ANR	1631932	Identifier	src1		1631303	0					
ANR	1631933	CallExpression	B ( src2 )		1631303	1					
ANR	1631934	Callee	B		1631303	0					
ANR	1631935	Identifier	B		1631303	0					
ANR	1631936	ArgumentList	src2		1631303	1					
ANR	1631937	Argument	src2		1631303	0					
ANR	1631938	Identifier	src2		1631303	0					
ANR	1631939	ReturnStatement	"return push_inst ( compiler , ADDC | OERC ( ALT_SET_FLAGS ) | D ( dst ) | A ( src1 ) | B ( src2 ) ) ;"	119:2:4592:4675	1631303	32	True				
ANR	1631940	CallExpression	"push_inst ( compiler , ADDC | OERC ( ALT_SET_FLAGS ) | D ( dst ) | A ( src1 ) | B ( src2 ) )"		1631303	0					
ANR	1631941	Callee	push_inst		1631303	0					
ANR	1631942	Identifier	push_inst		1631303	0					
ANR	1631943	ArgumentList	compiler		1631303	1					
ANR	1631944	Argument	compiler		1631303	0					
ANR	1631945	Identifier	compiler		1631303	0					
ANR	1631946	Argument	ADDC | OERC ( ALT_SET_FLAGS ) | D ( dst ) | A ( src1 ) | B ( src2 )		1631303	1					
ANR	1631947	InclusiveOrExpression	ADDC | OERC ( ALT_SET_FLAGS ) | D ( dst ) | A ( src1 ) | B ( src2 )		1631303	0		|			
ANR	1631948	Identifier	ADDC		1631303	0					
ANR	1631949	InclusiveOrExpression	OERC ( ALT_SET_FLAGS ) | D ( dst ) | A ( src1 ) | B ( src2 )		1631303	1		|			
ANR	1631950	CallExpression	OERC ( ALT_SET_FLAGS )		1631303	0					
ANR	1631951	Callee	OERC		1631303	0					
ANR	1631952	Identifier	OERC		1631303	0					
ANR	1631953	ArgumentList	ALT_SET_FLAGS		1631303	1					
ANR	1631954	Argument	ALT_SET_FLAGS		1631303	0					
ANR	1631955	Identifier	ALT_SET_FLAGS		1631303	0					
ANR	1631956	InclusiveOrExpression	D ( dst ) | A ( src1 ) | B ( src2 )		1631303	1		|			
ANR	1631957	CallExpression	D ( dst )		1631303	0					
ANR	1631958	Callee	D		1631303	0					
ANR	1631959	Identifier	D		1631303	0					
ANR	1631960	ArgumentList	dst		1631303	1					
ANR	1631961	Argument	dst		1631303	0					
ANR	1631962	Identifier	dst		1631303	0					
ANR	1631963	InclusiveOrExpression	A ( src1 ) | B ( src2 )		1631303	1		|			
ANR	1631964	CallExpression	A ( src1 )		1631303	0					
ANR	1631965	Callee	A		1631303	0					
ANR	1631966	Identifier	A		1631303	0					
ANR	1631967	ArgumentList	src1		1631303	1					
ANR	1631968	Argument	src1		1631303	0					
ANR	1631969	Identifier	src1		1631303	0					
ANR	1631970	CallExpression	B ( src2 )		1631303	1					
ANR	1631971	Callee	B		1631303	0					
ANR	1631972	Identifier	B		1631303	0					
ANR	1631973	ArgumentList	src2		1631303	1					
ANR	1631974	Argument	src2		1631303	0					
ANR	1631975	Identifier	src2		1631303	0					
ANR	1631976	Label	case SLJIT_ADDC :	121:1:4679:4694	1631303	33	True				
ANR	1631977	Identifier	SLJIT_ADDC		1631303	0					
ANR	1631978	IfStatement	if ( flags & ALT_FORM1 )		1631303	34					
ANR	1631979	Condition	flags & ALT_FORM1	122:6:4702:4718	1631303	0	True				
ANR	1631980	BitAndExpression	flags & ALT_FORM1		1631303	0		&			
ANR	1631981	Identifier	flags		1631303	0					
ANR	1631982	Identifier	ALT_FORM1		1631303	1					
ANR	1631983	CompoundStatement		77:25:2510:2510	1631303	1					
ANR	1631984	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MFXER | D ( 0 ) ) )"	123:3:4726:4768	1631303	0	True				
ANR	1631985	CallExpression	"FAIL_IF ( push_inst ( compiler , MFXER | D ( 0 ) ) )"		1631303	0					
ANR	1631986	Callee	FAIL_IF		1631303	0					
ANR	1631987	Identifier	FAIL_IF		1631303	0					
ANR	1631988	ArgumentList	"push_inst ( compiler , MFXER | D ( 0 ) )"		1631303	1					
ANR	1631989	Argument	"push_inst ( compiler , MFXER | D ( 0 ) )"		1631303	0					
ANR	1631990	CallExpression	"push_inst ( compiler , MFXER | D ( 0 ) )"		1631303	0					
ANR	1631991	Callee	push_inst		1631303	0					
ANR	1631992	Identifier	push_inst		1631303	0					
ANR	1631993	ArgumentList	compiler		1631303	1					
ANR	1631994	Argument	compiler		1631303	0					
ANR	1631995	Identifier	compiler		1631303	0					
ANR	1631996	Argument	MFXER | D ( 0 )		1631303	1					
ANR	1631997	InclusiveOrExpression	MFXER | D ( 0 )		1631303	0		|			
ANR	1631998	Identifier	MFXER		1631303	0					
ANR	1631999	CallExpression	D ( 0 )		1631303	1					
ANR	1632000	Callee	D		1631303	0					
ANR	1632001	Identifier	D		1631303	0					
ANR	1632002	ArgumentList	0		1631303	1					
ANR	1632003	Argument	0		1631303	0					
ANR	1632004	PrimaryExpression	0		1631303	0					
ANR	1632005	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDE | D ( dst ) | A ( src1 ) | B ( src2 ) ) )"	124:3:4773:4836	1631303	1	True				
ANR	1632006	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDE | D ( dst ) | A ( src1 ) | B ( src2 ) ) )"		1631303	0					
ANR	1632007	Callee	FAIL_IF		1631303	0					
ANR	1632008	Identifier	FAIL_IF		1631303	0					
ANR	1632009	ArgumentList	"push_inst ( compiler , ADDE | D ( dst ) | A ( src1 ) | B ( src2 ) )"		1631303	1					
ANR	1632010	Argument	"push_inst ( compiler , ADDE | D ( dst ) | A ( src1 ) | B ( src2 ) )"		1631303	0					
ANR	1632011	CallExpression	"push_inst ( compiler , ADDE | D ( dst ) | A ( src1 ) | B ( src2 ) )"		1631303	0					
ANR	1632012	Callee	push_inst		1631303	0					
ANR	1632013	Identifier	push_inst		1631303	0					
ANR	1632014	ArgumentList	compiler		1631303	1					
ANR	1632015	Argument	compiler		1631303	0					
ANR	1632016	Identifier	compiler		1631303	0					
ANR	1632017	Argument	ADDE | D ( dst ) | A ( src1 ) | B ( src2 )		1631303	1					
ANR	1632018	InclusiveOrExpression	ADDE | D ( dst ) | A ( src1 ) | B ( src2 )		1631303	0		|			
ANR	1632019	Identifier	ADDE		1631303	0					
ANR	1632020	InclusiveOrExpression	D ( dst ) | A ( src1 ) | B ( src2 )		1631303	1		|			
ANR	1632021	CallExpression	D ( dst )		1631303	0					
ANR	1632022	Callee	D		1631303	0					
ANR	1632023	Identifier	D		1631303	0					
ANR	1632024	ArgumentList	dst		1631303	1					
ANR	1632025	Argument	dst		1631303	0					
ANR	1632026	Identifier	dst		1631303	0					
ANR	1632027	InclusiveOrExpression	A ( src1 ) | B ( src2 )		1631303	1		|			
ANR	1632028	CallExpression	A ( src1 )		1631303	0					
ANR	1632029	Callee	A		1631303	0					
ANR	1632030	Identifier	A		1631303	0					
ANR	1632031	ArgumentList	src1		1631303	1					
ANR	1632032	Argument	src1		1631303	0					
ANR	1632033	Identifier	src1		1631303	0					
ANR	1632034	CallExpression	B ( src2 )		1631303	1					
ANR	1632035	Callee	B		1631303	0					
ANR	1632036	Identifier	B		1631303	0					
ANR	1632037	ArgumentList	src2		1631303	1					
ANR	1632038	Argument	src2		1631303	0					
ANR	1632039	Identifier	src2		1631303	0					
ANR	1632040	ReturnStatement	"return push_inst ( compiler , MTXER | S ( 0 ) ) ;"	125:3:4841:4881	1631303	2	True				
ANR	1632041	CallExpression	"push_inst ( compiler , MTXER | S ( 0 ) )"		1631303	0					
ANR	1632042	Callee	push_inst		1631303	0					
ANR	1632043	Identifier	push_inst		1631303	0					
ANR	1632044	ArgumentList	compiler		1631303	1					
ANR	1632045	Argument	compiler		1631303	0					
ANR	1632046	Identifier	compiler		1631303	0					
ANR	1632047	Argument	MTXER | S ( 0 )		1631303	1					
ANR	1632048	InclusiveOrExpression	MTXER | S ( 0 )		1631303	0		|			
ANR	1632049	Identifier	MTXER		1631303	0					
ANR	1632050	CallExpression	S ( 0 )		1631303	1					
ANR	1632051	Callee	S		1631303	0					
ANR	1632052	Identifier	S		1631303	0					
ANR	1632053	ArgumentList	0		1631303	1					
ANR	1632054	Argument	0		1631303	0					
ANR	1632055	PrimaryExpression	0		1631303	0					
ANR	1632056	ReturnStatement	"return push_inst ( compiler , ADDE | D ( dst ) | A ( src1 ) | B ( src2 ) ) ;"	127:2:4889:4950	1631303	35	True				
ANR	1632057	CallExpression	"push_inst ( compiler , ADDE | D ( dst ) | A ( src1 ) | B ( src2 ) )"		1631303	0					
ANR	1632058	Callee	push_inst		1631303	0					
ANR	1632059	Identifier	push_inst		1631303	0					
ANR	1632060	ArgumentList	compiler		1631303	1					
ANR	1632061	Argument	compiler		1631303	0					
ANR	1632062	Identifier	compiler		1631303	0					
ANR	1632063	Argument	ADDE | D ( dst ) | A ( src1 ) | B ( src2 )		1631303	1					
ANR	1632064	InclusiveOrExpression	ADDE | D ( dst ) | A ( src1 ) | B ( src2 )		1631303	0		|			
ANR	1632065	Identifier	ADDE		1631303	0					
ANR	1632066	InclusiveOrExpression	D ( dst ) | A ( src1 ) | B ( src2 )		1631303	1		|			
ANR	1632067	CallExpression	D ( dst )		1631303	0					
ANR	1632068	Callee	D		1631303	0					
ANR	1632069	Identifier	D		1631303	0					
ANR	1632070	ArgumentList	dst		1631303	1					
ANR	1632071	Argument	dst		1631303	0					
ANR	1632072	Identifier	dst		1631303	0					
ANR	1632073	InclusiveOrExpression	A ( src1 ) | B ( src2 )		1631303	1		|			
ANR	1632074	CallExpression	A ( src1 )		1631303	0					
ANR	1632075	Callee	A		1631303	0					
ANR	1632076	Identifier	A		1631303	0					
ANR	1632077	ArgumentList	src1		1631303	1					
ANR	1632078	Argument	src1		1631303	0					
ANR	1632079	Identifier	src1		1631303	0					
ANR	1632080	CallExpression	B ( src2 )		1631303	1					
ANR	1632081	Callee	B		1631303	0					
ANR	1632082	Identifier	B		1631303	0					
ANR	1632083	ArgumentList	src2		1631303	1					
ANR	1632084	Argument	src2		1631303	0					
ANR	1632085	Identifier	src2		1631303	0					
ANR	1632086	Label	case SLJIT_SUB :	129:1:4954:4968	1631303	36	True				
ANR	1632087	Identifier	SLJIT_SUB		1631303	0					
ANR	1632088	IfStatement	if ( flags & ALT_FORM1 )		1631303	37					
ANR	1632089	Condition	flags & ALT_FORM1	130:6:4976:4992	1631303	0	True				
ANR	1632090	BitAndExpression	flags & ALT_FORM1		1631303	0		&			
ANR	1632091	Identifier	flags		1631303	0					
ANR	1632092	Identifier	ALT_FORM1		1631303	1					
ANR	1632093	CompoundStatement		85:25:2784:2784	1631303	1					
ANR	1632094	ExpressionStatement	SLJIT_ASSERT ( src2 == TMP_REG2 )	132:3:5055:5085	1631303	0	True				
ANR	1632095	CallExpression	SLJIT_ASSERT ( src2 == TMP_REG2 )		1631303	0					
ANR	1632096	Callee	SLJIT_ASSERT		1631303	0					
ANR	1632097	Identifier	SLJIT_ASSERT		1631303	0					
ANR	1632098	ArgumentList	src2 == TMP_REG2		1631303	1					
ANR	1632099	Argument	src2 == TMP_REG2		1631303	0					
ANR	1632100	EqualityExpression	src2 == TMP_REG2		1631303	0		==			
ANR	1632101	Identifier	src2		1631303	0					
ANR	1632102	Identifier	TMP_REG2		1631303	1					
ANR	1632103	ReturnStatement	"return push_inst ( compiler , SUBFIC | D ( dst ) | A ( src1 ) | compiler -> imm ) ;"	133:3:5090:5159	1631303	1	True				
ANR	1632104	CallExpression	"push_inst ( compiler , SUBFIC | D ( dst ) | A ( src1 ) | compiler -> imm )"		1631303	0					
ANR	1632105	Callee	push_inst		1631303	0					
ANR	1632106	Identifier	push_inst		1631303	0					
ANR	1632107	ArgumentList	compiler		1631303	1					
ANR	1632108	Argument	compiler		1631303	0					
ANR	1632109	Identifier	compiler		1631303	0					
ANR	1632110	Argument	SUBFIC | D ( dst ) | A ( src1 ) | compiler -> imm		1631303	1					
ANR	1632111	InclusiveOrExpression	SUBFIC | D ( dst ) | A ( src1 ) | compiler -> imm		1631303	0		|			
ANR	1632112	Identifier	SUBFIC		1631303	0					
ANR	1632113	InclusiveOrExpression	D ( dst ) | A ( src1 ) | compiler -> imm		1631303	1		|			
ANR	1632114	CallExpression	D ( dst )		1631303	0					
ANR	1632115	Callee	D		1631303	0					
ANR	1632116	Identifier	D		1631303	0					
ANR	1632117	ArgumentList	dst		1631303	1					
ANR	1632118	Argument	dst		1631303	0					
ANR	1632119	Identifier	dst		1631303	0					
ANR	1632120	InclusiveOrExpression	A ( src1 ) | compiler -> imm		1631303	1		|			
ANR	1632121	CallExpression	A ( src1 )		1631303	0					
ANR	1632122	Callee	A		1631303	0					
ANR	1632123	Identifier	A		1631303	0					
ANR	1632124	ArgumentList	src1		1631303	1					
ANR	1632125	Argument	src1		1631303	0					
ANR	1632126	Identifier	src1		1631303	0					
ANR	1632127	PtrMemberAccess	compiler -> imm		1631303	1					
ANR	1632128	Identifier	compiler		1631303	0					
ANR	1632129	Identifier	imm		1631303	1					
ANR	1632130	IfStatement	if ( flags & ( ALT_FORM2 | ALT_FORM3 ) )		1631303	38					
ANR	1632131	Condition	flags & ( ALT_FORM2 | ALT_FORM3 )	135:6:5171:5201	1631303	0	True				
ANR	1632132	BitAndExpression	flags & ( ALT_FORM2 | ALT_FORM3 )		1631303	0		&			
ANR	1632133	Identifier	flags		1631303	0					
ANR	1632134	InclusiveOrExpression	ALT_FORM2 | ALT_FORM3		1631303	1		|			
ANR	1632135	Identifier	ALT_FORM2		1631303	0					
ANR	1632136	Identifier	ALT_FORM3		1631303	1					
ANR	1632137	CompoundStatement		90:39:2993:2993	1631303	1					
ANR	1632138	ExpressionStatement	SLJIT_ASSERT ( src2 == TMP_REG2 )	136:3:5209:5239	1631303	0	True				
ANR	1632139	CallExpression	SLJIT_ASSERT ( src2 == TMP_REG2 )		1631303	0					
ANR	1632140	Callee	SLJIT_ASSERT		1631303	0					
ANR	1632141	Identifier	SLJIT_ASSERT		1631303	0					
ANR	1632142	ArgumentList	src2 == TMP_REG2		1631303	1					
ANR	1632143	Argument	src2 == TMP_REG2		1631303	0					
ANR	1632144	EqualityExpression	src2 == TMP_REG2		1631303	0		==			
ANR	1632145	Identifier	src2		1631303	0					
ANR	1632146	Identifier	TMP_REG2		1631303	1					
ANR	1632147	IfStatement	if ( flags & ALT_FORM2 )		1631303	1					
ANR	1632148	Condition	flags & ALT_FORM2	137:7:5248:5264	1631303	0	True				
ANR	1632149	BitAndExpression	flags & ALT_FORM2		1631303	0		&			
ANR	1632150	Identifier	flags		1631303	0					
ANR	1632151	Identifier	ALT_FORM2		1631303	1					
ANR	1632152	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , CMPI | CRD ( 0 ) | A ( src1 ) | compiler -> imm ) )"	138:4:5271:5340	1631303	1	True				
ANR	1632153	CallExpression	"FAIL_IF ( push_inst ( compiler , CMPI | CRD ( 0 ) | A ( src1 ) | compiler -> imm ) )"		1631303	0					
ANR	1632154	Callee	FAIL_IF		1631303	0					
ANR	1632155	Identifier	FAIL_IF		1631303	0					
ANR	1632156	ArgumentList	"push_inst ( compiler , CMPI | CRD ( 0 ) | A ( src1 ) | compiler -> imm )"		1631303	1					
ANR	1632157	Argument	"push_inst ( compiler , CMPI | CRD ( 0 ) | A ( src1 ) | compiler -> imm )"		1631303	0					
ANR	1632158	CallExpression	"push_inst ( compiler , CMPI | CRD ( 0 ) | A ( src1 ) | compiler -> imm )"		1631303	0					
ANR	1632159	Callee	push_inst		1631303	0					
ANR	1632160	Identifier	push_inst		1631303	0					
ANR	1632161	ArgumentList	compiler		1631303	1					
ANR	1632162	Argument	compiler		1631303	0					
ANR	1632163	Identifier	compiler		1631303	0					
ANR	1632164	Argument	CMPI | CRD ( 0 ) | A ( src1 ) | compiler -> imm		1631303	1					
ANR	1632165	InclusiveOrExpression	CMPI | CRD ( 0 ) | A ( src1 ) | compiler -> imm		1631303	0		|			
ANR	1632166	Identifier	CMPI		1631303	0					
ANR	1632167	InclusiveOrExpression	CRD ( 0 ) | A ( src1 ) | compiler -> imm		1631303	1		|			
ANR	1632168	CallExpression	CRD ( 0 )		1631303	0					
ANR	1632169	Callee	CRD		1631303	0					
ANR	1632170	Identifier	CRD		1631303	0					
ANR	1632171	ArgumentList	0		1631303	1					
ANR	1632172	Argument	0		1631303	0					
ANR	1632173	PrimaryExpression	0		1631303	0					
ANR	1632174	InclusiveOrExpression	A ( src1 ) | compiler -> imm		1631303	1		|			
ANR	1632175	CallExpression	A ( src1 )		1631303	0					
ANR	1632176	Callee	A		1631303	0					
ANR	1632177	Identifier	A		1631303	0					
ANR	1632178	ArgumentList	src1		1631303	1					
ANR	1632179	Argument	src1		1631303	0					
ANR	1632180	Identifier	src1		1631303	0					
ANR	1632181	PtrMemberAccess	compiler -> imm		1631303	1					
ANR	1632182	Identifier	compiler		1631303	0					
ANR	1632183	Identifier	imm		1631303	1					
ANR	1632184	IfStatement	if ( flags & ALT_FORM3 )		1631303	2					
ANR	1632185	Condition	flags & ALT_FORM3	139:7:5349:5365	1631303	0	True				
ANR	1632186	BitAndExpression	flags & ALT_FORM3		1631303	0		&			
ANR	1632187	Identifier	flags		1631303	0					
ANR	1632188	Identifier	ALT_FORM3		1631303	1					
ANR	1632189	ReturnStatement	"return push_inst ( compiler , CMPLI | CRD ( 4 ) | A ( src1 ) | compiler -> imm ) ;"	140:4:5372:5440	1631303	1	True				
ANR	1632190	CallExpression	"push_inst ( compiler , CMPLI | CRD ( 4 ) | A ( src1 ) | compiler -> imm )"		1631303	0					
ANR	1632191	Callee	push_inst		1631303	0					
ANR	1632192	Identifier	push_inst		1631303	0					
ANR	1632193	ArgumentList	compiler		1631303	1					
ANR	1632194	Argument	compiler		1631303	0					
ANR	1632195	Identifier	compiler		1631303	0					
ANR	1632196	Argument	CMPLI | CRD ( 4 ) | A ( src1 ) | compiler -> imm		1631303	1					
ANR	1632197	InclusiveOrExpression	CMPLI | CRD ( 4 ) | A ( src1 ) | compiler -> imm		1631303	0		|			
ANR	1632198	Identifier	CMPLI		1631303	0					
ANR	1632199	InclusiveOrExpression	CRD ( 4 ) | A ( src1 ) | compiler -> imm		1631303	1		|			
ANR	1632200	CallExpression	CRD ( 4 )		1631303	0					
ANR	1632201	Callee	CRD		1631303	0					
ANR	1632202	Identifier	CRD		1631303	0					
ANR	1632203	ArgumentList	4		1631303	1					
ANR	1632204	Argument	4		1631303	0					
ANR	1632205	PrimaryExpression	4		1631303	0					
ANR	1632206	InclusiveOrExpression	A ( src1 ) | compiler -> imm		1631303	1		|			
ANR	1632207	CallExpression	A ( src1 )		1631303	0					
ANR	1632208	Callee	A		1631303	0					
ANR	1632209	Identifier	A		1631303	0					
ANR	1632210	ArgumentList	src1		1631303	1					
ANR	1632211	Argument	src1		1631303	0					
ANR	1632212	Identifier	src1		1631303	0					
ANR	1632213	PtrMemberAccess	compiler -> imm		1631303	1					
ANR	1632214	Identifier	compiler		1631303	0					
ANR	1632215	Identifier	imm		1631303	1					
ANR	1632216	ReturnStatement	return SLJIT_SUCCESS ;	141:3:5445:5465	1631303	3	True				
ANR	1632217	Identifier	SLJIT_SUCCESS		1631303	0					
ANR	1632218	IfStatement	if ( flags & ( ALT_FORM4 | ALT_FORM5 ) )		1631303	39					
ANR	1632219	Condition	flags & ( ALT_FORM4 | ALT_FORM5 )	143:6:5477:5507	1631303	0	True				
ANR	1632220	BitAndExpression	flags & ( ALT_FORM4 | ALT_FORM5 )		1631303	0		&			
ANR	1632221	Identifier	flags		1631303	0					
ANR	1632222	InclusiveOrExpression	ALT_FORM4 | ALT_FORM5		1631303	1		|			
ANR	1632223	Identifier	ALT_FORM4		1631303	0					
ANR	1632224	Identifier	ALT_FORM5		1631303	1					
ANR	1632225	CompoundStatement		98:39:3299:3299	1631303	1					
ANR	1632226	IfStatement	if ( flags & ALT_FORM4 )		1631303	0					
ANR	1632227	Condition	flags & ALT_FORM4	144:7:5519:5535	1631303	0	True				
ANR	1632228	BitAndExpression	flags & ALT_FORM4		1631303	0		&			
ANR	1632229	Identifier	flags		1631303	0					
ANR	1632230	Identifier	ALT_FORM4		1631303	1					
ANR	1632231	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , CMPL | CRD ( 4 ) | A ( src1 ) | B ( src2 ) ) )"	145:4:5542:5605	1631303	1	True				
ANR	1632232	CallExpression	"FAIL_IF ( push_inst ( compiler , CMPL | CRD ( 4 ) | A ( src1 ) | B ( src2 ) ) )"		1631303	0					
ANR	1632233	Callee	FAIL_IF		1631303	0					
ANR	1632234	Identifier	FAIL_IF		1631303	0					
ANR	1632235	ArgumentList	"push_inst ( compiler , CMPL | CRD ( 4 ) | A ( src1 ) | B ( src2 ) )"		1631303	1					
ANR	1632236	Argument	"push_inst ( compiler , CMPL | CRD ( 4 ) | A ( src1 ) | B ( src2 ) )"		1631303	0					
ANR	1632237	CallExpression	"push_inst ( compiler , CMPL | CRD ( 4 ) | A ( src1 ) | B ( src2 ) )"		1631303	0					
ANR	1632238	Callee	push_inst		1631303	0					
ANR	1632239	Identifier	push_inst		1631303	0					
ANR	1632240	ArgumentList	compiler		1631303	1					
ANR	1632241	Argument	compiler		1631303	0					
ANR	1632242	Identifier	compiler		1631303	0					
ANR	1632243	Argument	CMPL | CRD ( 4 ) | A ( src1 ) | B ( src2 )		1631303	1					
ANR	1632244	InclusiveOrExpression	CMPL | CRD ( 4 ) | A ( src1 ) | B ( src2 )		1631303	0		|			
ANR	1632245	Identifier	CMPL		1631303	0					
ANR	1632246	InclusiveOrExpression	CRD ( 4 ) | A ( src1 ) | B ( src2 )		1631303	1		|			
ANR	1632247	CallExpression	CRD ( 4 )		1631303	0					
ANR	1632248	Callee	CRD		1631303	0					
ANR	1632249	Identifier	CRD		1631303	0					
ANR	1632250	ArgumentList	4		1631303	1					
ANR	1632251	Argument	4		1631303	0					
ANR	1632252	PrimaryExpression	4		1631303	0					
ANR	1632253	InclusiveOrExpression	A ( src1 ) | B ( src2 )		1631303	1		|			
ANR	1632254	CallExpression	A ( src1 )		1631303	0					
ANR	1632255	Callee	A		1631303	0					
ANR	1632256	Identifier	A		1631303	0					
ANR	1632257	ArgumentList	src1		1631303	1					
ANR	1632258	Argument	src1		1631303	0					
ANR	1632259	Identifier	src1		1631303	0					
ANR	1632260	CallExpression	B ( src2 )		1631303	1					
ANR	1632261	Callee	B		1631303	0					
ANR	1632262	Identifier	B		1631303	0					
ANR	1632263	ArgumentList	src2		1631303	1					
ANR	1632264	Argument	src2		1631303	0					
ANR	1632265	Identifier	src2		1631303	0					
ANR	1632266	IfStatement	if ( flags & ALT_FORM5 )		1631303	1					
ANR	1632267	Condition	flags & ALT_FORM5	146:7:5614:5630	1631303	0	True				
ANR	1632268	BitAndExpression	flags & ALT_FORM5		1631303	0		&			
ANR	1632269	Identifier	flags		1631303	0					
ANR	1632270	Identifier	ALT_FORM5		1631303	1					
ANR	1632271	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , CMP | CRD ( 0 ) | A ( src1 ) | B ( src2 ) ) )"	147:4:5637:5699	1631303	1	True				
ANR	1632272	CallExpression	"FAIL_IF ( push_inst ( compiler , CMP | CRD ( 0 ) | A ( src1 ) | B ( src2 ) ) )"		1631303	0					
ANR	1632273	Callee	FAIL_IF		1631303	0					
ANR	1632274	Identifier	FAIL_IF		1631303	0					
ANR	1632275	ArgumentList	"push_inst ( compiler , CMP | CRD ( 0 ) | A ( src1 ) | B ( src2 ) )"		1631303	1					
ANR	1632276	Argument	"push_inst ( compiler , CMP | CRD ( 0 ) | A ( src1 ) | B ( src2 ) )"		1631303	0					
ANR	1632277	CallExpression	"push_inst ( compiler , CMP | CRD ( 0 ) | A ( src1 ) | B ( src2 ) )"		1631303	0					
ANR	1632278	Callee	push_inst		1631303	0					
ANR	1632279	Identifier	push_inst		1631303	0					
ANR	1632280	ArgumentList	compiler		1631303	1					
ANR	1632281	Argument	compiler		1631303	0					
ANR	1632282	Identifier	compiler		1631303	0					
ANR	1632283	Argument	CMP | CRD ( 0 ) | A ( src1 ) | B ( src2 )		1631303	1					
ANR	1632284	InclusiveOrExpression	CMP | CRD ( 0 ) | A ( src1 ) | B ( src2 )		1631303	0		|			
ANR	1632285	Identifier	CMP		1631303	0					
ANR	1632286	InclusiveOrExpression	CRD ( 0 ) | A ( src1 ) | B ( src2 )		1631303	1		|			
ANR	1632287	CallExpression	CRD ( 0 )		1631303	0					
ANR	1632288	Callee	CRD		1631303	0					
ANR	1632289	Identifier	CRD		1631303	0					
ANR	1632290	ArgumentList	0		1631303	1					
ANR	1632291	Argument	0		1631303	0					
ANR	1632292	PrimaryExpression	0		1631303	0					
ANR	1632293	InclusiveOrExpression	A ( src1 ) | B ( src2 )		1631303	1		|			
ANR	1632294	CallExpression	A ( src1 )		1631303	0					
ANR	1632295	Callee	A		1631303	0					
ANR	1632296	Identifier	A		1631303	0					
ANR	1632297	ArgumentList	src1		1631303	1					
ANR	1632298	Argument	src1		1631303	0					
ANR	1632299	Identifier	src1		1631303	0					
ANR	1632300	CallExpression	B ( src2 )		1631303	1					
ANR	1632301	Callee	B		1631303	0					
ANR	1632302	Identifier	B		1631303	0					
ANR	1632303	ArgumentList	src2		1631303	1					
ANR	1632304	Argument	src2		1631303	0					
ANR	1632305	Identifier	src2		1631303	0					
ANR	1632306	ReturnStatement	return SLJIT_SUCCESS ;	148:3:5704:5724	1631303	2	True				
ANR	1632307	Identifier	SLJIT_SUCCESS		1631303	0					
ANR	1632308	IfStatement	if ( ! ( flags & ALT_SET_FLAGS ) )		1631303	40					
ANR	1632309	Condition	! ( flags & ALT_SET_FLAGS )	150:6:5736:5759	1631303	0	True				
ANR	1632310	UnaryOperationExpression	! ( flags & ALT_SET_FLAGS )		1631303	0					
ANR	1632311	UnaryOperator	!		1631303	0					
ANR	1632312	BitAndExpression	flags & ALT_SET_FLAGS		1631303	1		&			
ANR	1632313	Identifier	flags		1631303	0					
ANR	1632314	Identifier	ALT_SET_FLAGS		1631303	1					
ANR	1632315	ReturnStatement	"return push_inst ( compiler , SUBF | D ( dst ) | A ( src2 ) | B ( src1 ) ) ;"	151:3:5765:5826	1631303	1	True				
ANR	1632316	CallExpression	"push_inst ( compiler , SUBF | D ( dst ) | A ( src2 ) | B ( src1 ) )"		1631303	0					
ANR	1632317	Callee	push_inst		1631303	0					
ANR	1632318	Identifier	push_inst		1631303	0					
ANR	1632319	ArgumentList	compiler		1631303	1					
ANR	1632320	Argument	compiler		1631303	0					
ANR	1632321	Identifier	compiler		1631303	0					
ANR	1632322	Argument	SUBF | D ( dst ) | A ( src2 ) | B ( src1 )		1631303	1					
ANR	1632323	InclusiveOrExpression	SUBF | D ( dst ) | A ( src2 ) | B ( src1 )		1631303	0		|			
ANR	1632324	Identifier	SUBF		1631303	0					
ANR	1632325	InclusiveOrExpression	D ( dst ) | A ( src2 ) | B ( src1 )		1631303	1		|			
ANR	1632326	CallExpression	D ( dst )		1631303	0					
ANR	1632327	Callee	D		1631303	0					
ANR	1632328	Identifier	D		1631303	0					
ANR	1632329	ArgumentList	dst		1631303	1					
ANR	1632330	Argument	dst		1631303	0					
ANR	1632331	Identifier	dst		1631303	0					
ANR	1632332	InclusiveOrExpression	A ( src2 ) | B ( src1 )		1631303	1		|			
ANR	1632333	CallExpression	A ( src2 )		1631303	0					
ANR	1632334	Callee	A		1631303	0					
ANR	1632335	Identifier	A		1631303	0					
ANR	1632336	ArgumentList	src2		1631303	1					
ANR	1632337	Argument	src2		1631303	0					
ANR	1632338	Identifier	src2		1631303	0					
ANR	1632339	CallExpression	B ( src1 )		1631303	1					
ANR	1632340	Callee	B		1631303	0					
ANR	1632341	Identifier	B		1631303	0					
ANR	1632342	ArgumentList	src1		1631303	1					
ANR	1632343	Argument	src1		1631303	0					
ANR	1632344	Identifier	src1		1631303	0					
ANR	1632345	IfStatement	if ( flags & ALT_FORM6 )		1631303	41					
ANR	1632346	Condition	flags & ALT_FORM6	152:6:5834:5850	1631303	0	True				
ANR	1632347	BitAndExpression	flags & ALT_FORM6		1631303	0		&			
ANR	1632348	Identifier	flags		1631303	0					
ANR	1632349	Identifier	ALT_FORM6		1631303	1					
ANR	1632350	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , CMPL | CRD ( 4 ) | A ( src1 ) | B ( src2 ) ) )"	153:3:5856:5919	1631303	1	True				
ANR	1632351	CallExpression	"FAIL_IF ( push_inst ( compiler , CMPL | CRD ( 4 ) | A ( src1 ) | B ( src2 ) ) )"		1631303	0					
ANR	1632352	Callee	FAIL_IF		1631303	0					
ANR	1632353	Identifier	FAIL_IF		1631303	0					
ANR	1632354	ArgumentList	"push_inst ( compiler , CMPL | CRD ( 4 ) | A ( src1 ) | B ( src2 ) )"		1631303	1					
ANR	1632355	Argument	"push_inst ( compiler , CMPL | CRD ( 4 ) | A ( src1 ) | B ( src2 ) )"		1631303	0					
ANR	1632356	CallExpression	"push_inst ( compiler , CMPL | CRD ( 4 ) | A ( src1 ) | B ( src2 ) )"		1631303	0					
ANR	1632357	Callee	push_inst		1631303	0					
ANR	1632358	Identifier	push_inst		1631303	0					
ANR	1632359	ArgumentList	compiler		1631303	1					
ANR	1632360	Argument	compiler		1631303	0					
ANR	1632361	Identifier	compiler		1631303	0					
ANR	1632362	Argument	CMPL | CRD ( 4 ) | A ( src1 ) | B ( src2 )		1631303	1					
ANR	1632363	InclusiveOrExpression	CMPL | CRD ( 4 ) | A ( src1 ) | B ( src2 )		1631303	0		|			
ANR	1632364	Identifier	CMPL		1631303	0					
ANR	1632365	InclusiveOrExpression	CRD ( 4 ) | A ( src1 ) | B ( src2 )		1631303	1		|			
ANR	1632366	CallExpression	CRD ( 4 )		1631303	0					
ANR	1632367	Callee	CRD		1631303	0					
ANR	1632368	Identifier	CRD		1631303	0					
ANR	1632369	ArgumentList	4		1631303	1					
ANR	1632370	Argument	4		1631303	0					
ANR	1632371	PrimaryExpression	4		1631303	0					
ANR	1632372	InclusiveOrExpression	A ( src1 ) | B ( src2 )		1631303	1		|			
ANR	1632373	CallExpression	A ( src1 )		1631303	0					
ANR	1632374	Callee	A		1631303	0					
ANR	1632375	Identifier	A		1631303	0					
ANR	1632376	ArgumentList	src1		1631303	1					
ANR	1632377	Argument	src1		1631303	0					
ANR	1632378	Identifier	src1		1631303	0					
ANR	1632379	CallExpression	B ( src2 )		1631303	1					
ANR	1632380	Callee	B		1631303	0					
ANR	1632381	Identifier	B		1631303	0					
ANR	1632382	ArgumentList	src2		1631303	1					
ANR	1632383	Argument	src2		1631303	0					
ANR	1632384	Identifier	src2		1631303	0					
ANR	1632385	ReturnStatement	"return push_inst ( compiler , SUBFC | OERC ( ALT_SET_FLAGS ) | D ( dst ) | A ( src2 ) | B ( src1 ) ) ;"	154:2:5923:6007	1631303	42	True				
ANR	1632386	CallExpression	"push_inst ( compiler , SUBFC | OERC ( ALT_SET_FLAGS ) | D ( dst ) | A ( src2 ) | B ( src1 ) )"		1631303	0					
ANR	1632387	Callee	push_inst		1631303	0					
ANR	1632388	Identifier	push_inst		1631303	0					
ANR	1632389	ArgumentList	compiler		1631303	1					
ANR	1632390	Argument	compiler		1631303	0					
ANR	1632391	Identifier	compiler		1631303	0					
ANR	1632392	Argument	SUBFC | OERC ( ALT_SET_FLAGS ) | D ( dst ) | A ( src2 ) | B ( src1 )		1631303	1					
ANR	1632393	InclusiveOrExpression	SUBFC | OERC ( ALT_SET_FLAGS ) | D ( dst ) | A ( src2 ) | B ( src1 )		1631303	0		|			
ANR	1632394	Identifier	SUBFC		1631303	0					
ANR	1632395	InclusiveOrExpression	OERC ( ALT_SET_FLAGS ) | D ( dst ) | A ( src2 ) | B ( src1 )		1631303	1		|			
ANR	1632396	CallExpression	OERC ( ALT_SET_FLAGS )		1631303	0					
ANR	1632397	Callee	OERC		1631303	0					
ANR	1632398	Identifier	OERC		1631303	0					
ANR	1632399	ArgumentList	ALT_SET_FLAGS		1631303	1					
ANR	1632400	Argument	ALT_SET_FLAGS		1631303	0					
ANR	1632401	Identifier	ALT_SET_FLAGS		1631303	0					
ANR	1632402	InclusiveOrExpression	D ( dst ) | A ( src2 ) | B ( src1 )		1631303	1		|			
ANR	1632403	CallExpression	D ( dst )		1631303	0					
ANR	1632404	Callee	D		1631303	0					
ANR	1632405	Identifier	D		1631303	0					
ANR	1632406	ArgumentList	dst		1631303	1					
ANR	1632407	Argument	dst		1631303	0					
ANR	1632408	Identifier	dst		1631303	0					
ANR	1632409	InclusiveOrExpression	A ( src2 ) | B ( src1 )		1631303	1		|			
ANR	1632410	CallExpression	A ( src2 )		1631303	0					
ANR	1632411	Callee	A		1631303	0					
ANR	1632412	Identifier	A		1631303	0					
ANR	1632413	ArgumentList	src2		1631303	1					
ANR	1632414	Argument	src2		1631303	0					
ANR	1632415	Identifier	src2		1631303	0					
ANR	1632416	CallExpression	B ( src1 )		1631303	1					
ANR	1632417	Callee	B		1631303	0					
ANR	1632418	Identifier	B		1631303	0					
ANR	1632419	ArgumentList	src1		1631303	1					
ANR	1632420	Argument	src1		1631303	0					
ANR	1632421	Identifier	src1		1631303	0					
ANR	1632422	Label	case SLJIT_SUBC :	156:1:6011:6026	1631303	43	True				
ANR	1632423	Identifier	SLJIT_SUBC		1631303	0					
ANR	1632424	IfStatement	if ( flags & ALT_FORM1 )		1631303	44					
ANR	1632425	Condition	flags & ALT_FORM1	157:6:6034:6050	1631303	0	True				
ANR	1632426	BitAndExpression	flags & ALT_FORM1		1631303	0		&			
ANR	1632427	Identifier	flags		1631303	0					
ANR	1632428	Identifier	ALT_FORM1		1631303	1					
ANR	1632429	CompoundStatement		112:25:3842:3842	1631303	1					
ANR	1632430	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MFXER | D ( 0 ) ) )"	158:3:6058:6100	1631303	0	True				
ANR	1632431	CallExpression	"FAIL_IF ( push_inst ( compiler , MFXER | D ( 0 ) ) )"		1631303	0					
ANR	1632432	Callee	FAIL_IF		1631303	0					
ANR	1632433	Identifier	FAIL_IF		1631303	0					
ANR	1632434	ArgumentList	"push_inst ( compiler , MFXER | D ( 0 ) )"		1631303	1					
ANR	1632435	Argument	"push_inst ( compiler , MFXER | D ( 0 ) )"		1631303	0					
ANR	1632436	CallExpression	"push_inst ( compiler , MFXER | D ( 0 ) )"		1631303	0					
ANR	1632437	Callee	push_inst		1631303	0					
ANR	1632438	Identifier	push_inst		1631303	0					
ANR	1632439	ArgumentList	compiler		1631303	1					
ANR	1632440	Argument	compiler		1631303	0					
ANR	1632441	Identifier	compiler		1631303	0					
ANR	1632442	Argument	MFXER | D ( 0 )		1631303	1					
ANR	1632443	InclusiveOrExpression	MFXER | D ( 0 )		1631303	0		|			
ANR	1632444	Identifier	MFXER		1631303	0					
ANR	1632445	CallExpression	D ( 0 )		1631303	1					
ANR	1632446	Callee	D		1631303	0					
ANR	1632447	Identifier	D		1631303	0					
ANR	1632448	ArgumentList	0		1631303	1					
ANR	1632449	Argument	0		1631303	0					
ANR	1632450	PrimaryExpression	0		1631303	0					
ANR	1632451	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SUBFE | D ( dst ) | A ( src2 ) | B ( src1 ) ) )"	159:3:6105:6169	1631303	1	True				
ANR	1632452	CallExpression	"FAIL_IF ( push_inst ( compiler , SUBFE | D ( dst ) | A ( src2 ) | B ( src1 ) ) )"		1631303	0					
ANR	1632453	Callee	FAIL_IF		1631303	0					
ANR	1632454	Identifier	FAIL_IF		1631303	0					
ANR	1632455	ArgumentList	"push_inst ( compiler , SUBFE | D ( dst ) | A ( src2 ) | B ( src1 ) )"		1631303	1					
ANR	1632456	Argument	"push_inst ( compiler , SUBFE | D ( dst ) | A ( src2 ) | B ( src1 ) )"		1631303	0					
ANR	1632457	CallExpression	"push_inst ( compiler , SUBFE | D ( dst ) | A ( src2 ) | B ( src1 ) )"		1631303	0					
ANR	1632458	Callee	push_inst		1631303	0					
ANR	1632459	Identifier	push_inst		1631303	0					
ANR	1632460	ArgumentList	compiler		1631303	1					
ANR	1632461	Argument	compiler		1631303	0					
ANR	1632462	Identifier	compiler		1631303	0					
ANR	1632463	Argument	SUBFE | D ( dst ) | A ( src2 ) | B ( src1 )		1631303	1					
ANR	1632464	InclusiveOrExpression	SUBFE | D ( dst ) | A ( src2 ) | B ( src1 )		1631303	0		|			
ANR	1632465	Identifier	SUBFE		1631303	0					
ANR	1632466	InclusiveOrExpression	D ( dst ) | A ( src2 ) | B ( src1 )		1631303	1		|			
ANR	1632467	CallExpression	D ( dst )		1631303	0					
ANR	1632468	Callee	D		1631303	0					
ANR	1632469	Identifier	D		1631303	0					
ANR	1632470	ArgumentList	dst		1631303	1					
ANR	1632471	Argument	dst		1631303	0					
ANR	1632472	Identifier	dst		1631303	0					
ANR	1632473	InclusiveOrExpression	A ( src2 ) | B ( src1 )		1631303	1		|			
ANR	1632474	CallExpression	A ( src2 )		1631303	0					
ANR	1632475	Callee	A		1631303	0					
ANR	1632476	Identifier	A		1631303	0					
ANR	1632477	ArgumentList	src2		1631303	1					
ANR	1632478	Argument	src2		1631303	0					
ANR	1632479	Identifier	src2		1631303	0					
ANR	1632480	CallExpression	B ( src1 )		1631303	1					
ANR	1632481	Callee	B		1631303	0					
ANR	1632482	Identifier	B		1631303	0					
ANR	1632483	ArgumentList	src1		1631303	1					
ANR	1632484	Argument	src1		1631303	0					
ANR	1632485	Identifier	src1		1631303	0					
ANR	1632486	ReturnStatement	"return push_inst ( compiler , MTXER | S ( 0 ) ) ;"	160:3:6174:6214	1631303	2	True				
ANR	1632487	CallExpression	"push_inst ( compiler , MTXER | S ( 0 ) )"		1631303	0					
ANR	1632488	Callee	push_inst		1631303	0					
ANR	1632489	Identifier	push_inst		1631303	0					
ANR	1632490	ArgumentList	compiler		1631303	1					
ANR	1632491	Argument	compiler		1631303	0					
ANR	1632492	Identifier	compiler		1631303	0					
ANR	1632493	Argument	MTXER | S ( 0 )		1631303	1					
ANR	1632494	InclusiveOrExpression	MTXER | S ( 0 )		1631303	0		|			
ANR	1632495	Identifier	MTXER		1631303	0					
ANR	1632496	CallExpression	S ( 0 )		1631303	1					
ANR	1632497	Callee	S		1631303	0					
ANR	1632498	Identifier	S		1631303	0					
ANR	1632499	ArgumentList	0		1631303	1					
ANR	1632500	Argument	0		1631303	0					
ANR	1632501	PrimaryExpression	0		1631303	0					
ANR	1632502	ReturnStatement	"return push_inst ( compiler , SUBFE | D ( dst ) | A ( src2 ) | B ( src1 ) ) ;"	162:2:6222:6284	1631303	45	True				
ANR	1632503	CallExpression	"push_inst ( compiler , SUBFE | D ( dst ) | A ( src2 ) | B ( src1 ) )"		1631303	0					
ANR	1632504	Callee	push_inst		1631303	0					
ANR	1632505	Identifier	push_inst		1631303	0					
ANR	1632506	ArgumentList	compiler		1631303	1					
ANR	1632507	Argument	compiler		1631303	0					
ANR	1632508	Identifier	compiler		1631303	0					
ANR	1632509	Argument	SUBFE | D ( dst ) | A ( src2 ) | B ( src1 )		1631303	1					
ANR	1632510	InclusiveOrExpression	SUBFE | D ( dst ) | A ( src2 ) | B ( src1 )		1631303	0		|			
ANR	1632511	Identifier	SUBFE		1631303	0					
ANR	1632512	InclusiveOrExpression	D ( dst ) | A ( src2 ) | B ( src1 )		1631303	1		|			
ANR	1632513	CallExpression	D ( dst )		1631303	0					
ANR	1632514	Callee	D		1631303	0					
ANR	1632515	Identifier	D		1631303	0					
ANR	1632516	ArgumentList	dst		1631303	1					
ANR	1632517	Argument	dst		1631303	0					
ANR	1632518	Identifier	dst		1631303	0					
ANR	1632519	InclusiveOrExpression	A ( src2 ) | B ( src1 )		1631303	1		|			
ANR	1632520	CallExpression	A ( src2 )		1631303	0					
ANR	1632521	Callee	A		1631303	0					
ANR	1632522	Identifier	A		1631303	0					
ANR	1632523	ArgumentList	src2		1631303	1					
ANR	1632524	Argument	src2		1631303	0					
ANR	1632525	Identifier	src2		1631303	0					
ANR	1632526	CallExpression	B ( src1 )		1631303	1					
ANR	1632527	Callee	B		1631303	0					
ANR	1632528	Identifier	B		1631303	0					
ANR	1632529	ArgumentList	src1		1631303	1					
ANR	1632530	Argument	src1		1631303	0					
ANR	1632531	Identifier	src1		1631303	0					
ANR	1632532	Label	case SLJIT_MUL :	164:1:6288:6302	1631303	46	True				
ANR	1632533	Identifier	SLJIT_MUL		1631303	0					
ANR	1632534	IfStatement	if ( flags & ALT_FORM1 )		1631303	47					
ANR	1632535	Condition	flags & ALT_FORM1	165:6:6310:6326	1631303	0	True				
ANR	1632536	BitAndExpression	flags & ALT_FORM1		1631303	0		&			
ANR	1632537	Identifier	flags		1631303	0					
ANR	1632538	Identifier	ALT_FORM1		1631303	1					
ANR	1632539	CompoundStatement		120:25:4118:4118	1631303	1					
ANR	1632540	ExpressionStatement	SLJIT_ASSERT ( src2 == TMP_REG2 )	166:3:6334:6364	1631303	0	True				
ANR	1632541	CallExpression	SLJIT_ASSERT ( src2 == TMP_REG2 )		1631303	0					
ANR	1632542	Callee	SLJIT_ASSERT		1631303	0					
ANR	1632543	Identifier	SLJIT_ASSERT		1631303	0					
ANR	1632544	ArgumentList	src2 == TMP_REG2		1631303	1					
ANR	1632545	Argument	src2 == TMP_REG2		1631303	0					
ANR	1632546	EqualityExpression	src2 == TMP_REG2		1631303	0		==			
ANR	1632547	Identifier	src2		1631303	0					
ANR	1632548	Identifier	TMP_REG2		1631303	1					
ANR	1632549	ReturnStatement	"return push_inst ( compiler , MULLI | D ( dst ) | A ( src1 ) | compiler -> imm ) ;"	167:3:6369:6437	1631303	1	True				
ANR	1632550	CallExpression	"push_inst ( compiler , MULLI | D ( dst ) | A ( src1 ) | compiler -> imm )"		1631303	0					
ANR	1632551	Callee	push_inst		1631303	0					
ANR	1632552	Identifier	push_inst		1631303	0					
ANR	1632553	ArgumentList	compiler		1631303	1					
ANR	1632554	Argument	compiler		1631303	0					
ANR	1632555	Identifier	compiler		1631303	0					
ANR	1632556	Argument	MULLI | D ( dst ) | A ( src1 ) | compiler -> imm		1631303	1					
ANR	1632557	InclusiveOrExpression	MULLI | D ( dst ) | A ( src1 ) | compiler -> imm		1631303	0		|			
ANR	1632558	Identifier	MULLI		1631303	0					
ANR	1632559	InclusiveOrExpression	D ( dst ) | A ( src1 ) | compiler -> imm		1631303	1		|			
ANR	1632560	CallExpression	D ( dst )		1631303	0					
ANR	1632561	Callee	D		1631303	0					
ANR	1632562	Identifier	D		1631303	0					
ANR	1632563	ArgumentList	dst		1631303	1					
ANR	1632564	Argument	dst		1631303	0					
ANR	1632565	Identifier	dst		1631303	0					
ANR	1632566	InclusiveOrExpression	A ( src1 ) | compiler -> imm		1631303	1		|			
ANR	1632567	CallExpression	A ( src1 )		1631303	0					
ANR	1632568	Callee	A		1631303	0					
ANR	1632569	Identifier	A		1631303	0					
ANR	1632570	ArgumentList	src1		1631303	1					
ANR	1632571	Argument	src1		1631303	0					
ANR	1632572	Identifier	src1		1631303	0					
ANR	1632573	PtrMemberAccess	compiler -> imm		1631303	1					
ANR	1632574	Identifier	compiler		1631303	0					
ANR	1632575	Identifier	imm		1631303	1					
ANR	1632576	ReturnStatement	"return push_inst ( compiler , MULLW | OERC ( flags ) | D ( dst ) | A ( src2 ) | B ( src1 ) ) ;"	169:2:6445:6521	1631303	48	True				
ANR	1632577	CallExpression	"push_inst ( compiler , MULLW | OERC ( flags ) | D ( dst ) | A ( src2 ) | B ( src1 ) )"		1631303	0					
ANR	1632578	Callee	push_inst		1631303	0					
ANR	1632579	Identifier	push_inst		1631303	0					
ANR	1632580	ArgumentList	compiler		1631303	1					
ANR	1632581	Argument	compiler		1631303	0					
ANR	1632582	Identifier	compiler		1631303	0					
ANR	1632583	Argument	MULLW | OERC ( flags ) | D ( dst ) | A ( src2 ) | B ( src1 )		1631303	1					
ANR	1632584	InclusiveOrExpression	MULLW | OERC ( flags ) | D ( dst ) | A ( src2 ) | B ( src1 )		1631303	0		|			
ANR	1632585	Identifier	MULLW		1631303	0					
ANR	1632586	InclusiveOrExpression	OERC ( flags ) | D ( dst ) | A ( src2 ) | B ( src1 )		1631303	1		|			
ANR	1632587	CallExpression	OERC ( flags )		1631303	0					
ANR	1632588	Callee	OERC		1631303	0					
ANR	1632589	Identifier	OERC		1631303	0					
ANR	1632590	ArgumentList	flags		1631303	1					
ANR	1632591	Argument	flags		1631303	0					
ANR	1632592	Identifier	flags		1631303	0					
ANR	1632593	InclusiveOrExpression	D ( dst ) | A ( src2 ) | B ( src1 )		1631303	1		|			
ANR	1632594	CallExpression	D ( dst )		1631303	0					
ANR	1632595	Callee	D		1631303	0					
ANR	1632596	Identifier	D		1631303	0					
ANR	1632597	ArgumentList	dst		1631303	1					
ANR	1632598	Argument	dst		1631303	0					
ANR	1632599	Identifier	dst		1631303	0					
ANR	1632600	InclusiveOrExpression	A ( src2 ) | B ( src1 )		1631303	1		|			
ANR	1632601	CallExpression	A ( src2 )		1631303	0					
ANR	1632602	Callee	A		1631303	0					
ANR	1632603	Identifier	A		1631303	0					
ANR	1632604	ArgumentList	src2		1631303	1					
ANR	1632605	Argument	src2		1631303	0					
ANR	1632606	Identifier	src2		1631303	0					
ANR	1632607	CallExpression	B ( src1 )		1631303	1					
ANR	1632608	Callee	B		1631303	0					
ANR	1632609	Identifier	B		1631303	0					
ANR	1632610	ArgumentList	src1		1631303	1					
ANR	1632611	Argument	src1		1631303	0					
ANR	1632612	Identifier	src1		1631303	0					
ANR	1632613	Label	case SLJIT_AND :	171:1:6525:6539	1631303	49	True				
ANR	1632614	Identifier	SLJIT_AND		1631303	0					
ANR	1632615	IfStatement	if ( flags & ALT_FORM1 )		1631303	50					
ANR	1632616	Condition	flags & ALT_FORM1	172:6:6547:6563	1631303	0	True				
ANR	1632617	BitAndExpression	flags & ALT_FORM1		1631303	0		&			
ANR	1632618	Identifier	flags		1631303	0					
ANR	1632619	Identifier	ALT_FORM1		1631303	1					
ANR	1632620	CompoundStatement		127:25:4355:4355	1631303	1					
ANR	1632621	ExpressionStatement	SLJIT_ASSERT ( src2 == TMP_REG2 )	173:3:6571:6601	1631303	0	True				
ANR	1632622	CallExpression	SLJIT_ASSERT ( src2 == TMP_REG2 )		1631303	0					
ANR	1632623	Callee	SLJIT_ASSERT		1631303	0					
ANR	1632624	Identifier	SLJIT_ASSERT		1631303	0					
ANR	1632625	ArgumentList	src2 == TMP_REG2		1631303	1					
ANR	1632626	Argument	src2 == TMP_REG2		1631303	0					
ANR	1632627	EqualityExpression	src2 == TMP_REG2		1631303	0		==			
ANR	1632628	Identifier	src2		1631303	0					
ANR	1632629	Identifier	TMP_REG2		1631303	1					
ANR	1632630	ReturnStatement	"return push_inst ( compiler , ANDI | S ( src1 ) | A ( dst ) | compiler -> imm ) ;"	174:3:6606:6673	1631303	1	True				
ANR	1632631	CallExpression	"push_inst ( compiler , ANDI | S ( src1 ) | A ( dst ) | compiler -> imm )"		1631303	0					
ANR	1632632	Callee	push_inst		1631303	0					
ANR	1632633	Identifier	push_inst		1631303	0					
ANR	1632634	ArgumentList	compiler		1631303	1					
ANR	1632635	Argument	compiler		1631303	0					
ANR	1632636	Identifier	compiler		1631303	0					
ANR	1632637	Argument	ANDI | S ( src1 ) | A ( dst ) | compiler -> imm		1631303	1					
ANR	1632638	InclusiveOrExpression	ANDI | S ( src1 ) | A ( dst ) | compiler -> imm		1631303	0		|			
ANR	1632639	Identifier	ANDI		1631303	0					
ANR	1632640	InclusiveOrExpression	S ( src1 ) | A ( dst ) | compiler -> imm		1631303	1		|			
ANR	1632641	CallExpression	S ( src1 )		1631303	0					
ANR	1632642	Callee	S		1631303	0					
ANR	1632643	Identifier	S		1631303	0					
ANR	1632644	ArgumentList	src1		1631303	1					
ANR	1632645	Argument	src1		1631303	0					
ANR	1632646	Identifier	src1		1631303	0					
ANR	1632647	InclusiveOrExpression	A ( dst ) | compiler -> imm		1631303	1		|			
ANR	1632648	CallExpression	A ( dst )		1631303	0					
ANR	1632649	Callee	A		1631303	0					
ANR	1632650	Identifier	A		1631303	0					
ANR	1632651	ArgumentList	dst		1631303	1					
ANR	1632652	Argument	dst		1631303	0					
ANR	1632653	Identifier	dst		1631303	0					
ANR	1632654	PtrMemberAccess	compiler -> imm		1631303	1					
ANR	1632655	Identifier	compiler		1631303	0					
ANR	1632656	Identifier	imm		1631303	1					
ANR	1632657	IfStatement	if ( flags & ALT_FORM2 )		1631303	51					
ANR	1632658	Condition	flags & ALT_FORM2	176:6:6685:6701	1631303	0	True				
ANR	1632659	BitAndExpression	flags & ALT_FORM2		1631303	0		&			
ANR	1632660	Identifier	flags		1631303	0					
ANR	1632661	Identifier	ALT_FORM2		1631303	1					
ANR	1632662	CompoundStatement		131:25:4493:4493	1631303	1					
ANR	1632663	ExpressionStatement	SLJIT_ASSERT ( src2 == TMP_REG2 )	177:3:6709:6739	1631303	0	True				
ANR	1632664	CallExpression	SLJIT_ASSERT ( src2 == TMP_REG2 )		1631303	0					
ANR	1632665	Callee	SLJIT_ASSERT		1631303	0					
ANR	1632666	Identifier	SLJIT_ASSERT		1631303	0					
ANR	1632667	ArgumentList	src2 == TMP_REG2		1631303	1					
ANR	1632668	Argument	src2 == TMP_REG2		1631303	0					
ANR	1632669	EqualityExpression	src2 == TMP_REG2		1631303	0		==			
ANR	1632670	Identifier	src2		1631303	0					
ANR	1632671	Identifier	TMP_REG2		1631303	1					
ANR	1632672	ReturnStatement	"return push_inst ( compiler , ANDIS | S ( src1 ) | A ( dst ) | compiler -> imm ) ;"	178:3:6744:6812	1631303	1	True				
ANR	1632673	CallExpression	"push_inst ( compiler , ANDIS | S ( src1 ) | A ( dst ) | compiler -> imm )"		1631303	0					
ANR	1632674	Callee	push_inst		1631303	0					
ANR	1632675	Identifier	push_inst		1631303	0					
ANR	1632676	ArgumentList	compiler		1631303	1					
ANR	1632677	Argument	compiler		1631303	0					
ANR	1632678	Identifier	compiler		1631303	0					
ANR	1632679	Argument	ANDIS | S ( src1 ) | A ( dst ) | compiler -> imm		1631303	1					
ANR	1632680	InclusiveOrExpression	ANDIS | S ( src1 ) | A ( dst ) | compiler -> imm		1631303	0		|			
ANR	1632681	Identifier	ANDIS		1631303	0					
ANR	1632682	InclusiveOrExpression	S ( src1 ) | A ( dst ) | compiler -> imm		1631303	1		|			
ANR	1632683	CallExpression	S ( src1 )		1631303	0					
ANR	1632684	Callee	S		1631303	0					
ANR	1632685	Identifier	S		1631303	0					
ANR	1632686	ArgumentList	src1		1631303	1					
ANR	1632687	Argument	src1		1631303	0					
ANR	1632688	Identifier	src1		1631303	0					
ANR	1632689	InclusiveOrExpression	A ( dst ) | compiler -> imm		1631303	1		|			
ANR	1632690	CallExpression	A ( dst )		1631303	0					
ANR	1632691	Callee	A		1631303	0					
ANR	1632692	Identifier	A		1631303	0					
ANR	1632693	ArgumentList	dst		1631303	1					
ANR	1632694	Argument	dst		1631303	0					
ANR	1632695	Identifier	dst		1631303	0					
ANR	1632696	PtrMemberAccess	compiler -> imm		1631303	1					
ANR	1632697	Identifier	compiler		1631303	0					
ANR	1632698	Identifier	imm		1631303	1					
ANR	1632699	ReturnStatement	"return push_inst ( compiler , AND | RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 ) ) ;"	180:2:6820:6892	1631303	52	True				
ANR	1632700	CallExpression	"push_inst ( compiler , AND | RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 ) )"		1631303	0					
ANR	1632701	Callee	push_inst		1631303	0					
ANR	1632702	Identifier	push_inst		1631303	0					
ANR	1632703	ArgumentList	compiler		1631303	1					
ANR	1632704	Argument	compiler		1631303	0					
ANR	1632705	Identifier	compiler		1631303	0					
ANR	1632706	Argument	AND | RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 )		1631303	1					
ANR	1632707	InclusiveOrExpression	AND | RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 )		1631303	0		|			
ANR	1632708	Identifier	AND		1631303	0					
ANR	1632709	InclusiveOrExpression	RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 )		1631303	1		|			
ANR	1632710	CallExpression	RC ( flags )		1631303	0					
ANR	1632711	Callee	RC		1631303	0					
ANR	1632712	Identifier	RC		1631303	0					
ANR	1632713	ArgumentList	flags		1631303	1					
ANR	1632714	Argument	flags		1631303	0					
ANR	1632715	Identifier	flags		1631303	0					
ANR	1632716	InclusiveOrExpression	S ( src1 ) | A ( dst ) | B ( src2 )		1631303	1		|			
ANR	1632717	CallExpression	S ( src1 )		1631303	0					
ANR	1632718	Callee	S		1631303	0					
ANR	1632719	Identifier	S		1631303	0					
ANR	1632720	ArgumentList	src1		1631303	1					
ANR	1632721	Argument	src1		1631303	0					
ANR	1632722	Identifier	src1		1631303	0					
ANR	1632723	InclusiveOrExpression	A ( dst ) | B ( src2 )		1631303	1		|			
ANR	1632724	CallExpression	A ( dst )		1631303	0					
ANR	1632725	Callee	A		1631303	0					
ANR	1632726	Identifier	A		1631303	0					
ANR	1632727	ArgumentList	dst		1631303	1					
ANR	1632728	Argument	dst		1631303	0					
ANR	1632729	Identifier	dst		1631303	0					
ANR	1632730	CallExpression	B ( src2 )		1631303	1					
ANR	1632731	Callee	B		1631303	0					
ANR	1632732	Identifier	B		1631303	0					
ANR	1632733	ArgumentList	src2		1631303	1					
ANR	1632734	Argument	src2		1631303	0					
ANR	1632735	Identifier	src2		1631303	0					
ANR	1632736	Label	case SLJIT_OR :	182:1:6896:6909	1631303	53	True				
ANR	1632737	Identifier	SLJIT_OR		1631303	0					
ANR	1632738	IfStatement	if ( flags & ALT_FORM1 )		1631303	54					
ANR	1632739	Condition	flags & ALT_FORM1	183:6:6917:6933	1631303	0	True				
ANR	1632740	BitAndExpression	flags & ALT_FORM1		1631303	0		&			
ANR	1632741	Identifier	flags		1631303	0					
ANR	1632742	Identifier	ALT_FORM1		1631303	1					
ANR	1632743	CompoundStatement		138:25:4725:4725	1631303	1					
ANR	1632744	ExpressionStatement	SLJIT_ASSERT ( src2 == TMP_REG2 )	184:3:6941:6971	1631303	0	True				
ANR	1632745	CallExpression	SLJIT_ASSERT ( src2 == TMP_REG2 )		1631303	0					
ANR	1632746	Callee	SLJIT_ASSERT		1631303	0					
ANR	1632747	Identifier	SLJIT_ASSERT		1631303	0					
ANR	1632748	ArgumentList	src2 == TMP_REG2		1631303	1					
ANR	1632749	Argument	src2 == TMP_REG2		1631303	0					
ANR	1632750	EqualityExpression	src2 == TMP_REG2		1631303	0		==			
ANR	1632751	Identifier	src2		1631303	0					
ANR	1632752	Identifier	TMP_REG2		1631303	1					
ANR	1632753	ReturnStatement	"return push_inst ( compiler , ORI | S ( src1 ) | A ( dst ) | compiler -> imm ) ;"	185:3:6976:7042	1631303	1	True				
ANR	1632754	CallExpression	"push_inst ( compiler , ORI | S ( src1 ) | A ( dst ) | compiler -> imm )"		1631303	0					
ANR	1632755	Callee	push_inst		1631303	0					
ANR	1632756	Identifier	push_inst		1631303	0					
ANR	1632757	ArgumentList	compiler		1631303	1					
ANR	1632758	Argument	compiler		1631303	0					
ANR	1632759	Identifier	compiler		1631303	0					
ANR	1632760	Argument	ORI | S ( src1 ) | A ( dst ) | compiler -> imm		1631303	1					
ANR	1632761	InclusiveOrExpression	ORI | S ( src1 ) | A ( dst ) | compiler -> imm		1631303	0		|			
ANR	1632762	Identifier	ORI		1631303	0					
ANR	1632763	InclusiveOrExpression	S ( src1 ) | A ( dst ) | compiler -> imm		1631303	1		|			
ANR	1632764	CallExpression	S ( src1 )		1631303	0					
ANR	1632765	Callee	S		1631303	0					
ANR	1632766	Identifier	S		1631303	0					
ANR	1632767	ArgumentList	src1		1631303	1					
ANR	1632768	Argument	src1		1631303	0					
ANR	1632769	Identifier	src1		1631303	0					
ANR	1632770	InclusiveOrExpression	A ( dst ) | compiler -> imm		1631303	1		|			
ANR	1632771	CallExpression	A ( dst )		1631303	0					
ANR	1632772	Callee	A		1631303	0					
ANR	1632773	Identifier	A		1631303	0					
ANR	1632774	ArgumentList	dst		1631303	1					
ANR	1632775	Argument	dst		1631303	0					
ANR	1632776	Identifier	dst		1631303	0					
ANR	1632777	PtrMemberAccess	compiler -> imm		1631303	1					
ANR	1632778	Identifier	compiler		1631303	0					
ANR	1632779	Identifier	imm		1631303	1					
ANR	1632780	IfStatement	if ( flags & ALT_FORM2 )		1631303	55					
ANR	1632781	Condition	flags & ALT_FORM2	187:6:7054:7070	1631303	0	True				
ANR	1632782	BitAndExpression	flags & ALT_FORM2		1631303	0		&			
ANR	1632783	Identifier	flags		1631303	0					
ANR	1632784	Identifier	ALT_FORM2		1631303	1					
ANR	1632785	CompoundStatement		142:25:4862:4862	1631303	1					
ANR	1632786	ExpressionStatement	SLJIT_ASSERT ( src2 == TMP_REG2 )	188:3:7078:7108	1631303	0	True				
ANR	1632787	CallExpression	SLJIT_ASSERT ( src2 == TMP_REG2 )		1631303	0					
ANR	1632788	Callee	SLJIT_ASSERT		1631303	0					
ANR	1632789	Identifier	SLJIT_ASSERT		1631303	0					
ANR	1632790	ArgumentList	src2 == TMP_REG2		1631303	1					
ANR	1632791	Argument	src2 == TMP_REG2		1631303	0					
ANR	1632792	EqualityExpression	src2 == TMP_REG2		1631303	0		==			
ANR	1632793	Identifier	src2		1631303	0					
ANR	1632794	Identifier	TMP_REG2		1631303	1					
ANR	1632795	ReturnStatement	"return push_inst ( compiler , ORIS | S ( src1 ) | A ( dst ) | compiler -> imm ) ;"	189:3:7113:7180	1631303	1	True				
ANR	1632796	CallExpression	"push_inst ( compiler , ORIS | S ( src1 ) | A ( dst ) | compiler -> imm )"		1631303	0					
ANR	1632797	Callee	push_inst		1631303	0					
ANR	1632798	Identifier	push_inst		1631303	0					
ANR	1632799	ArgumentList	compiler		1631303	1					
ANR	1632800	Argument	compiler		1631303	0					
ANR	1632801	Identifier	compiler		1631303	0					
ANR	1632802	Argument	ORIS | S ( src1 ) | A ( dst ) | compiler -> imm		1631303	1					
ANR	1632803	InclusiveOrExpression	ORIS | S ( src1 ) | A ( dst ) | compiler -> imm		1631303	0		|			
ANR	1632804	Identifier	ORIS		1631303	0					
ANR	1632805	InclusiveOrExpression	S ( src1 ) | A ( dst ) | compiler -> imm		1631303	1		|			
ANR	1632806	CallExpression	S ( src1 )		1631303	0					
ANR	1632807	Callee	S		1631303	0					
ANR	1632808	Identifier	S		1631303	0					
ANR	1632809	ArgumentList	src1		1631303	1					
ANR	1632810	Argument	src1		1631303	0					
ANR	1632811	Identifier	src1		1631303	0					
ANR	1632812	InclusiveOrExpression	A ( dst ) | compiler -> imm		1631303	1		|			
ANR	1632813	CallExpression	A ( dst )		1631303	0					
ANR	1632814	Callee	A		1631303	0					
ANR	1632815	Identifier	A		1631303	0					
ANR	1632816	ArgumentList	dst		1631303	1					
ANR	1632817	Argument	dst		1631303	0					
ANR	1632818	Identifier	dst		1631303	0					
ANR	1632819	PtrMemberAccess	compiler -> imm		1631303	1					
ANR	1632820	Identifier	compiler		1631303	0					
ANR	1632821	Identifier	imm		1631303	1					
ANR	1632822	IfStatement	if ( flags & ALT_FORM3 )		1631303	56					
ANR	1632823	Condition	flags & ALT_FORM3	191:6:7192:7208	1631303	0	True				
ANR	1632824	BitAndExpression	flags & ALT_FORM3		1631303	0		&			
ANR	1632825	Identifier	flags		1631303	0					
ANR	1632826	Identifier	ALT_FORM3		1631303	1					
ANR	1632827	CompoundStatement		146:25:5000:5000	1631303	1					
ANR	1632828	ExpressionStatement	SLJIT_ASSERT ( src2 == TMP_REG2 )	192:3:7216:7246	1631303	0	True				
ANR	1632829	CallExpression	SLJIT_ASSERT ( src2 == TMP_REG2 )		1631303	0					
ANR	1632830	Callee	SLJIT_ASSERT		1631303	0					
ANR	1632831	Identifier	SLJIT_ASSERT		1631303	0					
ANR	1632832	ArgumentList	src2 == TMP_REG2		1631303	1					
ANR	1632833	Argument	src2 == TMP_REG2		1631303	0					
ANR	1632834	EqualityExpression	src2 == TMP_REG2		1631303	0		==			
ANR	1632835	Identifier	src2		1631303	0					
ANR	1632836	Identifier	TMP_REG2		1631303	1					
ANR	1632837	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ORI | S ( src1 ) | A ( dst ) | IMM ( compiler -> imm ) ) )"	193:3:7251:7324	1631303	1	True				
ANR	1632838	CallExpression	"FAIL_IF ( push_inst ( compiler , ORI | S ( src1 ) | A ( dst ) | IMM ( compiler -> imm ) ) )"		1631303	0					
ANR	1632839	Callee	FAIL_IF		1631303	0					
ANR	1632840	Identifier	FAIL_IF		1631303	0					
ANR	1632841	ArgumentList	"push_inst ( compiler , ORI | S ( src1 ) | A ( dst ) | IMM ( compiler -> imm ) )"		1631303	1					
ANR	1632842	Argument	"push_inst ( compiler , ORI | S ( src1 ) | A ( dst ) | IMM ( compiler -> imm ) )"		1631303	0					
ANR	1632843	CallExpression	"push_inst ( compiler , ORI | S ( src1 ) | A ( dst ) | IMM ( compiler -> imm ) )"		1631303	0					
ANR	1632844	Callee	push_inst		1631303	0					
ANR	1632845	Identifier	push_inst		1631303	0					
ANR	1632846	ArgumentList	compiler		1631303	1					
ANR	1632847	Argument	compiler		1631303	0					
ANR	1632848	Identifier	compiler		1631303	0					
ANR	1632849	Argument	ORI | S ( src1 ) | A ( dst ) | IMM ( compiler -> imm )		1631303	1					
ANR	1632850	InclusiveOrExpression	ORI | S ( src1 ) | A ( dst ) | IMM ( compiler -> imm )		1631303	0		|			
ANR	1632851	Identifier	ORI		1631303	0					
ANR	1632852	InclusiveOrExpression	S ( src1 ) | A ( dst ) | IMM ( compiler -> imm )		1631303	1		|			
ANR	1632853	CallExpression	S ( src1 )		1631303	0					
ANR	1632854	Callee	S		1631303	0					
ANR	1632855	Identifier	S		1631303	0					
ANR	1632856	ArgumentList	src1		1631303	1					
ANR	1632857	Argument	src1		1631303	0					
ANR	1632858	Identifier	src1		1631303	0					
ANR	1632859	InclusiveOrExpression	A ( dst ) | IMM ( compiler -> imm )		1631303	1		|			
ANR	1632860	CallExpression	A ( dst )		1631303	0					
ANR	1632861	Callee	A		1631303	0					
ANR	1632862	Identifier	A		1631303	0					
ANR	1632863	ArgumentList	dst		1631303	1					
ANR	1632864	Argument	dst		1631303	0					
ANR	1632865	Identifier	dst		1631303	0					
ANR	1632866	CallExpression	IMM ( compiler -> imm )		1631303	1					
ANR	1632867	Callee	IMM		1631303	0					
ANR	1632868	Identifier	IMM		1631303	0					
ANR	1632869	ArgumentList	compiler -> imm		1631303	1					
ANR	1632870	Argument	compiler -> imm		1631303	0					
ANR	1632871	PtrMemberAccess	compiler -> imm		1631303	0					
ANR	1632872	Identifier	compiler		1631303	0					
ANR	1632873	Identifier	imm		1631303	1					
ANR	1632874	ReturnStatement	"return push_inst ( compiler , ORIS | S ( dst ) | A ( dst ) | IMM ( compiler -> imm >> 16 ) ) ;"	194:3:7329:7406	1631303	2	True				
ANR	1632875	CallExpression	"push_inst ( compiler , ORIS | S ( dst ) | A ( dst ) | IMM ( compiler -> imm >> 16 ) )"		1631303	0					
ANR	1632876	Callee	push_inst		1631303	0					
ANR	1632877	Identifier	push_inst		1631303	0					
ANR	1632878	ArgumentList	compiler		1631303	1					
ANR	1632879	Argument	compiler		1631303	0					
ANR	1632880	Identifier	compiler		1631303	0					
ANR	1632881	Argument	ORIS | S ( dst ) | A ( dst ) | IMM ( compiler -> imm >> 16 )		1631303	1					
ANR	1632882	InclusiveOrExpression	ORIS | S ( dst ) | A ( dst ) | IMM ( compiler -> imm >> 16 )		1631303	0		|			
ANR	1632883	Identifier	ORIS		1631303	0					
ANR	1632884	InclusiveOrExpression	S ( dst ) | A ( dst ) | IMM ( compiler -> imm >> 16 )		1631303	1		|			
ANR	1632885	CallExpression	S ( dst )		1631303	0					
ANR	1632886	Callee	S		1631303	0					
ANR	1632887	Identifier	S		1631303	0					
ANR	1632888	ArgumentList	dst		1631303	1					
ANR	1632889	Argument	dst		1631303	0					
ANR	1632890	Identifier	dst		1631303	0					
ANR	1632891	InclusiveOrExpression	A ( dst ) | IMM ( compiler -> imm >> 16 )		1631303	1		|			
ANR	1632892	CallExpression	A ( dst )		1631303	0					
ANR	1632893	Callee	A		1631303	0					
ANR	1632894	Identifier	A		1631303	0					
ANR	1632895	ArgumentList	dst		1631303	1					
ANR	1632896	Argument	dst		1631303	0					
ANR	1632897	Identifier	dst		1631303	0					
ANR	1632898	CallExpression	IMM ( compiler -> imm >> 16 )		1631303	1					
ANR	1632899	Callee	IMM		1631303	0					
ANR	1632900	Identifier	IMM		1631303	0					
ANR	1632901	ArgumentList	compiler -> imm >> 16		1631303	1					
ANR	1632902	Argument	compiler -> imm >> 16		1631303	0					
ANR	1632903	ShiftExpression	compiler -> imm >> 16		1631303	0		>>			
ANR	1632904	PtrMemberAccess	compiler -> imm		1631303	0					
ANR	1632905	Identifier	compiler		1631303	0					
ANR	1632906	Identifier	imm		1631303	1					
ANR	1632907	PrimaryExpression	16		1631303	1					
ANR	1632908	ReturnStatement	"return push_inst ( compiler , OR | RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 ) ) ;"	196:2:7414:7485	1631303	57	True				
ANR	1632909	CallExpression	"push_inst ( compiler , OR | RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 ) )"		1631303	0					
ANR	1632910	Callee	push_inst		1631303	0					
ANR	1632911	Identifier	push_inst		1631303	0					
ANR	1632912	ArgumentList	compiler		1631303	1					
ANR	1632913	Argument	compiler		1631303	0					
ANR	1632914	Identifier	compiler		1631303	0					
ANR	1632915	Argument	OR | RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 )		1631303	1					
ANR	1632916	InclusiveOrExpression	OR | RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 )		1631303	0		|			
ANR	1632917	Identifier	OR		1631303	0					
ANR	1632918	InclusiveOrExpression	RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 )		1631303	1		|			
ANR	1632919	CallExpression	RC ( flags )		1631303	0					
ANR	1632920	Callee	RC		1631303	0					
ANR	1632921	Identifier	RC		1631303	0					
ANR	1632922	ArgumentList	flags		1631303	1					
ANR	1632923	Argument	flags		1631303	0					
ANR	1632924	Identifier	flags		1631303	0					
ANR	1632925	InclusiveOrExpression	S ( src1 ) | A ( dst ) | B ( src2 )		1631303	1		|			
ANR	1632926	CallExpression	S ( src1 )		1631303	0					
ANR	1632927	Callee	S		1631303	0					
ANR	1632928	Identifier	S		1631303	0					
ANR	1632929	ArgumentList	src1		1631303	1					
ANR	1632930	Argument	src1		1631303	0					
ANR	1632931	Identifier	src1		1631303	0					
ANR	1632932	InclusiveOrExpression	A ( dst ) | B ( src2 )		1631303	1		|			
ANR	1632933	CallExpression	A ( dst )		1631303	0					
ANR	1632934	Callee	A		1631303	0					
ANR	1632935	Identifier	A		1631303	0					
ANR	1632936	ArgumentList	dst		1631303	1					
ANR	1632937	Argument	dst		1631303	0					
ANR	1632938	Identifier	dst		1631303	0					
ANR	1632939	CallExpression	B ( src2 )		1631303	1					
ANR	1632940	Callee	B		1631303	0					
ANR	1632941	Identifier	B		1631303	0					
ANR	1632942	ArgumentList	src2		1631303	1					
ANR	1632943	Argument	src2		1631303	0					
ANR	1632944	Identifier	src2		1631303	0					
ANR	1632945	Label	case SLJIT_XOR :	198:1:7489:7503	1631303	58	True				
ANR	1632946	Identifier	SLJIT_XOR		1631303	0					
ANR	1632947	IfStatement	if ( flags & ALT_FORM1 )		1631303	59					
ANR	1632948	Condition	flags & ALT_FORM1	199:6:7511:7527	1631303	0	True				
ANR	1632949	BitAndExpression	flags & ALT_FORM1		1631303	0		&			
ANR	1632950	Identifier	flags		1631303	0					
ANR	1632951	Identifier	ALT_FORM1		1631303	1					
ANR	1632952	CompoundStatement		154:25:5319:5319	1631303	1					
ANR	1632953	ExpressionStatement	SLJIT_ASSERT ( src2 == TMP_REG2 )	200:3:7535:7565	1631303	0	True				
ANR	1632954	CallExpression	SLJIT_ASSERT ( src2 == TMP_REG2 )		1631303	0					
ANR	1632955	Callee	SLJIT_ASSERT		1631303	0					
ANR	1632956	Identifier	SLJIT_ASSERT		1631303	0					
ANR	1632957	ArgumentList	src2 == TMP_REG2		1631303	1					
ANR	1632958	Argument	src2 == TMP_REG2		1631303	0					
ANR	1632959	EqualityExpression	src2 == TMP_REG2		1631303	0		==			
ANR	1632960	Identifier	src2		1631303	0					
ANR	1632961	Identifier	TMP_REG2		1631303	1					
ANR	1632962	ReturnStatement	"return push_inst ( compiler , XORI | S ( src1 ) | A ( dst ) | compiler -> imm ) ;"	201:3:7570:7637	1631303	1	True				
ANR	1632963	CallExpression	"push_inst ( compiler , XORI | S ( src1 ) | A ( dst ) | compiler -> imm )"		1631303	0					
ANR	1632964	Callee	push_inst		1631303	0					
ANR	1632965	Identifier	push_inst		1631303	0					
ANR	1632966	ArgumentList	compiler		1631303	1					
ANR	1632967	Argument	compiler		1631303	0					
ANR	1632968	Identifier	compiler		1631303	0					
ANR	1632969	Argument	XORI | S ( src1 ) | A ( dst ) | compiler -> imm		1631303	1					
ANR	1632970	InclusiveOrExpression	XORI | S ( src1 ) | A ( dst ) | compiler -> imm		1631303	0		|			
ANR	1632971	Identifier	XORI		1631303	0					
ANR	1632972	InclusiveOrExpression	S ( src1 ) | A ( dst ) | compiler -> imm		1631303	1		|			
ANR	1632973	CallExpression	S ( src1 )		1631303	0					
ANR	1632974	Callee	S		1631303	0					
ANR	1632975	Identifier	S		1631303	0					
ANR	1632976	ArgumentList	src1		1631303	1					
ANR	1632977	Argument	src1		1631303	0					
ANR	1632978	Identifier	src1		1631303	0					
ANR	1632979	InclusiveOrExpression	A ( dst ) | compiler -> imm		1631303	1		|			
ANR	1632980	CallExpression	A ( dst )		1631303	0					
ANR	1632981	Callee	A		1631303	0					
ANR	1632982	Identifier	A		1631303	0					
ANR	1632983	ArgumentList	dst		1631303	1					
ANR	1632984	Argument	dst		1631303	0					
ANR	1632985	Identifier	dst		1631303	0					
ANR	1632986	PtrMemberAccess	compiler -> imm		1631303	1					
ANR	1632987	Identifier	compiler		1631303	0					
ANR	1632988	Identifier	imm		1631303	1					
ANR	1632989	IfStatement	if ( flags & ALT_FORM2 )		1631303	60					
ANR	1632990	Condition	flags & ALT_FORM2	203:6:7649:7665	1631303	0	True				
ANR	1632991	BitAndExpression	flags & ALT_FORM2		1631303	0		&			
ANR	1632992	Identifier	flags		1631303	0					
ANR	1632993	Identifier	ALT_FORM2		1631303	1					
ANR	1632994	CompoundStatement		158:25:5457:5457	1631303	1					
ANR	1632995	ExpressionStatement	SLJIT_ASSERT ( src2 == TMP_REG2 )	204:3:7673:7703	1631303	0	True				
ANR	1632996	CallExpression	SLJIT_ASSERT ( src2 == TMP_REG2 )		1631303	0					
ANR	1632997	Callee	SLJIT_ASSERT		1631303	0					
ANR	1632998	Identifier	SLJIT_ASSERT		1631303	0					
ANR	1632999	ArgumentList	src2 == TMP_REG2		1631303	1					
ANR	1633000	Argument	src2 == TMP_REG2		1631303	0					
ANR	1633001	EqualityExpression	src2 == TMP_REG2		1631303	0		==			
ANR	1633002	Identifier	src2		1631303	0					
ANR	1633003	Identifier	TMP_REG2		1631303	1					
ANR	1633004	ReturnStatement	"return push_inst ( compiler , XORIS | S ( src1 ) | A ( dst ) | compiler -> imm ) ;"	205:3:7708:7776	1631303	1	True				
ANR	1633005	CallExpression	"push_inst ( compiler , XORIS | S ( src1 ) | A ( dst ) | compiler -> imm )"		1631303	0					
ANR	1633006	Callee	push_inst		1631303	0					
ANR	1633007	Identifier	push_inst		1631303	0					
ANR	1633008	ArgumentList	compiler		1631303	1					
ANR	1633009	Argument	compiler		1631303	0					
ANR	1633010	Identifier	compiler		1631303	0					
ANR	1633011	Argument	XORIS | S ( src1 ) | A ( dst ) | compiler -> imm		1631303	1					
ANR	1633012	InclusiveOrExpression	XORIS | S ( src1 ) | A ( dst ) | compiler -> imm		1631303	0		|			
ANR	1633013	Identifier	XORIS		1631303	0					
ANR	1633014	InclusiveOrExpression	S ( src1 ) | A ( dst ) | compiler -> imm		1631303	1		|			
ANR	1633015	CallExpression	S ( src1 )		1631303	0					
ANR	1633016	Callee	S		1631303	0					
ANR	1633017	Identifier	S		1631303	0					
ANR	1633018	ArgumentList	src1		1631303	1					
ANR	1633019	Argument	src1		1631303	0					
ANR	1633020	Identifier	src1		1631303	0					
ANR	1633021	InclusiveOrExpression	A ( dst ) | compiler -> imm		1631303	1		|			
ANR	1633022	CallExpression	A ( dst )		1631303	0					
ANR	1633023	Callee	A		1631303	0					
ANR	1633024	Identifier	A		1631303	0					
ANR	1633025	ArgumentList	dst		1631303	1					
ANR	1633026	Argument	dst		1631303	0					
ANR	1633027	Identifier	dst		1631303	0					
ANR	1633028	PtrMemberAccess	compiler -> imm		1631303	1					
ANR	1633029	Identifier	compiler		1631303	0					
ANR	1633030	Identifier	imm		1631303	1					
ANR	1633031	IfStatement	if ( flags & ALT_FORM3 )		1631303	61					
ANR	1633032	Condition	flags & ALT_FORM3	207:6:7788:7804	1631303	0	True				
ANR	1633033	BitAndExpression	flags & ALT_FORM3		1631303	0		&			
ANR	1633034	Identifier	flags		1631303	0					
ANR	1633035	Identifier	ALT_FORM3		1631303	1					
ANR	1633036	CompoundStatement		162:25:5596:5596	1631303	1					
ANR	1633037	ExpressionStatement	SLJIT_ASSERT ( src2 == TMP_REG2 )	208:3:7812:7842	1631303	0	True				
ANR	1633038	CallExpression	SLJIT_ASSERT ( src2 == TMP_REG2 )		1631303	0					
ANR	1633039	Callee	SLJIT_ASSERT		1631303	0					
ANR	1633040	Identifier	SLJIT_ASSERT		1631303	0					
ANR	1633041	ArgumentList	src2 == TMP_REG2		1631303	1					
ANR	1633042	Argument	src2 == TMP_REG2		1631303	0					
ANR	1633043	EqualityExpression	src2 == TMP_REG2		1631303	0		==			
ANR	1633044	Identifier	src2		1631303	0					
ANR	1633045	Identifier	TMP_REG2		1631303	1					
ANR	1633046	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , XORI | S ( src1 ) | A ( dst ) | IMM ( compiler -> imm ) ) )"	209:3:7847:7921	1631303	1	True				
ANR	1633047	CallExpression	"FAIL_IF ( push_inst ( compiler , XORI | S ( src1 ) | A ( dst ) | IMM ( compiler -> imm ) ) )"		1631303	0					
ANR	1633048	Callee	FAIL_IF		1631303	0					
ANR	1633049	Identifier	FAIL_IF		1631303	0					
ANR	1633050	ArgumentList	"push_inst ( compiler , XORI | S ( src1 ) | A ( dst ) | IMM ( compiler -> imm ) )"		1631303	1					
ANR	1633051	Argument	"push_inst ( compiler , XORI | S ( src1 ) | A ( dst ) | IMM ( compiler -> imm ) )"		1631303	0					
ANR	1633052	CallExpression	"push_inst ( compiler , XORI | S ( src1 ) | A ( dst ) | IMM ( compiler -> imm ) )"		1631303	0					
ANR	1633053	Callee	push_inst		1631303	0					
ANR	1633054	Identifier	push_inst		1631303	0					
ANR	1633055	ArgumentList	compiler		1631303	1					
ANR	1633056	Argument	compiler		1631303	0					
ANR	1633057	Identifier	compiler		1631303	0					
ANR	1633058	Argument	XORI | S ( src1 ) | A ( dst ) | IMM ( compiler -> imm )		1631303	1					
ANR	1633059	InclusiveOrExpression	XORI | S ( src1 ) | A ( dst ) | IMM ( compiler -> imm )		1631303	0		|			
ANR	1633060	Identifier	XORI		1631303	0					
ANR	1633061	InclusiveOrExpression	S ( src1 ) | A ( dst ) | IMM ( compiler -> imm )		1631303	1		|			
ANR	1633062	CallExpression	S ( src1 )		1631303	0					
ANR	1633063	Callee	S		1631303	0					
ANR	1633064	Identifier	S		1631303	0					
ANR	1633065	ArgumentList	src1		1631303	1					
ANR	1633066	Argument	src1		1631303	0					
ANR	1633067	Identifier	src1		1631303	0					
ANR	1633068	InclusiveOrExpression	A ( dst ) | IMM ( compiler -> imm )		1631303	1		|			
ANR	1633069	CallExpression	A ( dst )		1631303	0					
ANR	1633070	Callee	A		1631303	0					
ANR	1633071	Identifier	A		1631303	0					
ANR	1633072	ArgumentList	dst		1631303	1					
ANR	1633073	Argument	dst		1631303	0					
ANR	1633074	Identifier	dst		1631303	0					
ANR	1633075	CallExpression	IMM ( compiler -> imm )		1631303	1					
ANR	1633076	Callee	IMM		1631303	0					
ANR	1633077	Identifier	IMM		1631303	0					
ANR	1633078	ArgumentList	compiler -> imm		1631303	1					
ANR	1633079	Argument	compiler -> imm		1631303	0					
ANR	1633080	PtrMemberAccess	compiler -> imm		1631303	0					
ANR	1633081	Identifier	compiler		1631303	0					
ANR	1633082	Identifier	imm		1631303	1					
ANR	1633083	ReturnStatement	"return push_inst ( compiler , XORIS | S ( dst ) | A ( dst ) | IMM ( compiler -> imm >> 16 ) ) ;"	210:3:7926:8004	1631303	2	True				
ANR	1633084	CallExpression	"push_inst ( compiler , XORIS | S ( dst ) | A ( dst ) | IMM ( compiler -> imm >> 16 ) )"		1631303	0					
ANR	1633085	Callee	push_inst		1631303	0					
ANR	1633086	Identifier	push_inst		1631303	0					
ANR	1633087	ArgumentList	compiler		1631303	1					
ANR	1633088	Argument	compiler		1631303	0					
ANR	1633089	Identifier	compiler		1631303	0					
ANR	1633090	Argument	XORIS | S ( dst ) | A ( dst ) | IMM ( compiler -> imm >> 16 )		1631303	1					
ANR	1633091	InclusiveOrExpression	XORIS | S ( dst ) | A ( dst ) | IMM ( compiler -> imm >> 16 )		1631303	0		|			
ANR	1633092	Identifier	XORIS		1631303	0					
ANR	1633093	InclusiveOrExpression	S ( dst ) | A ( dst ) | IMM ( compiler -> imm >> 16 )		1631303	1		|			
ANR	1633094	CallExpression	S ( dst )		1631303	0					
ANR	1633095	Callee	S		1631303	0					
ANR	1633096	Identifier	S		1631303	0					
ANR	1633097	ArgumentList	dst		1631303	1					
ANR	1633098	Argument	dst		1631303	0					
ANR	1633099	Identifier	dst		1631303	0					
ANR	1633100	InclusiveOrExpression	A ( dst ) | IMM ( compiler -> imm >> 16 )		1631303	1		|			
ANR	1633101	CallExpression	A ( dst )		1631303	0					
ANR	1633102	Callee	A		1631303	0					
ANR	1633103	Identifier	A		1631303	0					
ANR	1633104	ArgumentList	dst		1631303	1					
ANR	1633105	Argument	dst		1631303	0					
ANR	1633106	Identifier	dst		1631303	0					
ANR	1633107	CallExpression	IMM ( compiler -> imm >> 16 )		1631303	1					
ANR	1633108	Callee	IMM		1631303	0					
ANR	1633109	Identifier	IMM		1631303	0					
ANR	1633110	ArgumentList	compiler -> imm >> 16		1631303	1					
ANR	1633111	Argument	compiler -> imm >> 16		1631303	0					
ANR	1633112	ShiftExpression	compiler -> imm >> 16		1631303	0		>>			
ANR	1633113	PtrMemberAccess	compiler -> imm		1631303	0					
ANR	1633114	Identifier	compiler		1631303	0					
ANR	1633115	Identifier	imm		1631303	1					
ANR	1633116	PrimaryExpression	16		1631303	1					
ANR	1633117	ReturnStatement	"return push_inst ( compiler , XOR | RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 ) ) ;"	212:2:8012:8084	1631303	62	True				
ANR	1633118	CallExpression	"push_inst ( compiler , XOR | RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 ) )"		1631303	0					
ANR	1633119	Callee	push_inst		1631303	0					
ANR	1633120	Identifier	push_inst		1631303	0					
ANR	1633121	ArgumentList	compiler		1631303	1					
ANR	1633122	Argument	compiler		1631303	0					
ANR	1633123	Identifier	compiler		1631303	0					
ANR	1633124	Argument	XOR | RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 )		1631303	1					
ANR	1633125	InclusiveOrExpression	XOR | RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 )		1631303	0		|			
ANR	1633126	Identifier	XOR		1631303	0					
ANR	1633127	InclusiveOrExpression	RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 )		1631303	1		|			
ANR	1633128	CallExpression	RC ( flags )		1631303	0					
ANR	1633129	Callee	RC		1631303	0					
ANR	1633130	Identifier	RC		1631303	0					
ANR	1633131	ArgumentList	flags		1631303	1					
ANR	1633132	Argument	flags		1631303	0					
ANR	1633133	Identifier	flags		1631303	0					
ANR	1633134	InclusiveOrExpression	S ( src1 ) | A ( dst ) | B ( src2 )		1631303	1		|			
ANR	1633135	CallExpression	S ( src1 )		1631303	0					
ANR	1633136	Callee	S		1631303	0					
ANR	1633137	Identifier	S		1631303	0					
ANR	1633138	ArgumentList	src1		1631303	1					
ANR	1633139	Argument	src1		1631303	0					
ANR	1633140	Identifier	src1		1631303	0					
ANR	1633141	InclusiveOrExpression	A ( dst ) | B ( src2 )		1631303	1		|			
ANR	1633142	CallExpression	A ( dst )		1631303	0					
ANR	1633143	Callee	A		1631303	0					
ANR	1633144	Identifier	A		1631303	0					
ANR	1633145	ArgumentList	dst		1631303	1					
ANR	1633146	Argument	dst		1631303	0					
ANR	1633147	Identifier	dst		1631303	0					
ANR	1633148	CallExpression	B ( src2 )		1631303	1					
ANR	1633149	Callee	B		1631303	0					
ANR	1633150	Identifier	B		1631303	0					
ANR	1633151	ArgumentList	src2		1631303	1					
ANR	1633152	Argument	src2		1631303	0					
ANR	1633153	Identifier	src2		1631303	0					
ANR	1633154	Label	case SLJIT_SHL :	214:1:8088:8102	1631303	63	True				
ANR	1633155	Identifier	SLJIT_SHL		1631303	0					
ANR	1633156	IfStatement	if ( flags & ALT_FORM1 )		1631303	64					
ANR	1633157	Condition	flags & ALT_FORM1	215:6:8110:8126	1631303	0	True				
ANR	1633158	BitAndExpression	flags & ALT_FORM1		1631303	0		&			
ANR	1633159	Identifier	flags		1631303	0					
ANR	1633160	Identifier	ALT_FORM1		1631303	1					
ANR	1633161	CompoundStatement		170:25:5918:5918	1631303	1					
ANR	1633162	ExpressionStatement	SLJIT_ASSERT ( src2 == TMP_REG2 )	216:3:8134:8164	1631303	0	True				
ANR	1633163	CallExpression	SLJIT_ASSERT ( src2 == TMP_REG2 )		1631303	0					
ANR	1633164	Callee	SLJIT_ASSERT		1631303	0					
ANR	1633165	Identifier	SLJIT_ASSERT		1631303	0					
ANR	1633166	ArgumentList	src2 == TMP_REG2		1631303	1					
ANR	1633167	Argument	src2 == TMP_REG2		1631303	0					
ANR	1633168	EqualityExpression	src2 == TMP_REG2		1631303	0		==			
ANR	1633169	Identifier	src2		1631303	0					
ANR	1633170	Identifier	TMP_REG2		1631303	1					
ANR	1633171	ExpressionStatement	compiler -> imm &= 0x1f	217:3:8169:8190	1631303	1	True				
ANR	1633172	AssignmentExpression	compiler -> imm &= 0x1f		1631303	0		&=			
ANR	1633173	PtrMemberAccess	compiler -> imm		1631303	0					
ANR	1633174	Identifier	compiler		1631303	0					
ANR	1633175	Identifier	imm		1631303	1					
ANR	1633176	PrimaryExpression	0x1f		1631303	1					
ANR	1633177	ReturnStatement	"return push_inst ( compiler , RLWINM | RC ( flags ) | S ( src1 ) | A ( dst ) | ( compiler -> imm << 11 ) | ( ( 31 - compiler -> imm ) << 1 ) ) ;"	218:3:8195:8314	1631303	2	True				
ANR	1633178	CallExpression	"push_inst ( compiler , RLWINM | RC ( flags ) | S ( src1 ) | A ( dst ) | ( compiler -> imm << 11 ) | ( ( 31 - compiler -> imm ) << 1 ) )"		1631303	0					
ANR	1633179	Callee	push_inst		1631303	0					
ANR	1633180	Identifier	push_inst		1631303	0					
ANR	1633181	ArgumentList	compiler		1631303	1					
ANR	1633182	Argument	compiler		1631303	0					
ANR	1633183	Identifier	compiler		1631303	0					
ANR	1633184	Argument	RLWINM | RC ( flags ) | S ( src1 ) | A ( dst ) | ( compiler -> imm << 11 ) | ( ( 31 - compiler -> imm ) << 1 )		1631303	1					
ANR	1633185	InclusiveOrExpression	RLWINM | RC ( flags ) | S ( src1 ) | A ( dst ) | ( compiler -> imm << 11 ) | ( ( 31 - compiler -> imm ) << 1 )		1631303	0		|			
ANR	1633186	Identifier	RLWINM		1631303	0					
ANR	1633187	InclusiveOrExpression	RC ( flags ) | S ( src1 ) | A ( dst ) | ( compiler -> imm << 11 ) | ( ( 31 - compiler -> imm ) << 1 )		1631303	1		|			
ANR	1633188	CallExpression	RC ( flags )		1631303	0					
ANR	1633189	Callee	RC		1631303	0					
ANR	1633190	Identifier	RC		1631303	0					
ANR	1633191	ArgumentList	flags		1631303	1					
ANR	1633192	Argument	flags		1631303	0					
ANR	1633193	Identifier	flags		1631303	0					
ANR	1633194	InclusiveOrExpression	S ( src1 ) | A ( dst ) | ( compiler -> imm << 11 ) | ( ( 31 - compiler -> imm ) << 1 )		1631303	1		|			
ANR	1633195	CallExpression	S ( src1 )		1631303	0					
ANR	1633196	Callee	S		1631303	0					
ANR	1633197	Identifier	S		1631303	0					
ANR	1633198	ArgumentList	src1		1631303	1					
ANR	1633199	Argument	src1		1631303	0					
ANR	1633200	Identifier	src1		1631303	0					
ANR	1633201	InclusiveOrExpression	A ( dst ) | ( compiler -> imm << 11 ) | ( ( 31 - compiler -> imm ) << 1 )		1631303	1		|			
ANR	1633202	CallExpression	A ( dst )		1631303	0					
ANR	1633203	Callee	A		1631303	0					
ANR	1633204	Identifier	A		1631303	0					
ANR	1633205	ArgumentList	dst		1631303	1					
ANR	1633206	Argument	dst		1631303	0					
ANR	1633207	Identifier	dst		1631303	0					
ANR	1633208	InclusiveOrExpression	( compiler -> imm << 11 ) | ( ( 31 - compiler -> imm ) << 1 )		1631303	1		|			
ANR	1633209	ShiftExpression	compiler -> imm << 11		1631303	0		<<			
ANR	1633210	PtrMemberAccess	compiler -> imm		1631303	0					
ANR	1633211	Identifier	compiler		1631303	0					
ANR	1633212	Identifier	imm		1631303	1					
ANR	1633213	PrimaryExpression	11		1631303	1					
ANR	1633214	ShiftExpression	( 31 - compiler -> imm ) << 1		1631303	1		<<			
ANR	1633215	AdditiveExpression	31 - compiler -> imm		1631303	0		-			
ANR	1633216	PrimaryExpression	31		1631303	0					
ANR	1633217	PtrMemberAccess	compiler -> imm		1631303	1					
ANR	1633218	Identifier	compiler		1631303	0					
ANR	1633219	Identifier	imm		1631303	1					
ANR	1633220	PrimaryExpression	1		1631303	1					
ANR	1633221	ReturnStatement	"return push_inst ( compiler , SLW | RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 ) ) ;"	220:2:8322:8394	1631303	65	True				
ANR	1633222	CallExpression	"push_inst ( compiler , SLW | RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 ) )"		1631303	0					
ANR	1633223	Callee	push_inst		1631303	0					
ANR	1633224	Identifier	push_inst		1631303	0					
ANR	1633225	ArgumentList	compiler		1631303	1					
ANR	1633226	Argument	compiler		1631303	0					
ANR	1633227	Identifier	compiler		1631303	0					
ANR	1633228	Argument	SLW | RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 )		1631303	1					
ANR	1633229	InclusiveOrExpression	SLW | RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 )		1631303	0		|			
ANR	1633230	Identifier	SLW		1631303	0					
ANR	1633231	InclusiveOrExpression	RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 )		1631303	1		|			
ANR	1633232	CallExpression	RC ( flags )		1631303	0					
ANR	1633233	Callee	RC		1631303	0					
ANR	1633234	Identifier	RC		1631303	0					
ANR	1633235	ArgumentList	flags		1631303	1					
ANR	1633236	Argument	flags		1631303	0					
ANR	1633237	Identifier	flags		1631303	0					
ANR	1633238	InclusiveOrExpression	S ( src1 ) | A ( dst ) | B ( src2 )		1631303	1		|			
ANR	1633239	CallExpression	S ( src1 )		1631303	0					
ANR	1633240	Callee	S		1631303	0					
ANR	1633241	Identifier	S		1631303	0					
ANR	1633242	ArgumentList	src1		1631303	1					
ANR	1633243	Argument	src1		1631303	0					
ANR	1633244	Identifier	src1		1631303	0					
ANR	1633245	InclusiveOrExpression	A ( dst ) | B ( src2 )		1631303	1		|			
ANR	1633246	CallExpression	A ( dst )		1631303	0					
ANR	1633247	Callee	A		1631303	0					
ANR	1633248	Identifier	A		1631303	0					
ANR	1633249	ArgumentList	dst		1631303	1					
ANR	1633250	Argument	dst		1631303	0					
ANR	1633251	Identifier	dst		1631303	0					
ANR	1633252	CallExpression	B ( src2 )		1631303	1					
ANR	1633253	Callee	B		1631303	0					
ANR	1633254	Identifier	B		1631303	0					
ANR	1633255	ArgumentList	src2		1631303	1					
ANR	1633256	Argument	src2		1631303	0					
ANR	1633257	Identifier	src2		1631303	0					
ANR	1633258	Label	case SLJIT_LSHR :	222:1:8398:8413	1631303	66	True				
ANR	1633259	Identifier	SLJIT_LSHR		1631303	0					
ANR	1633260	IfStatement	if ( flags & ALT_FORM1 )		1631303	67					
ANR	1633261	Condition	flags & ALT_FORM1	223:6:8421:8437	1631303	0	True				
ANR	1633262	BitAndExpression	flags & ALT_FORM1		1631303	0		&			
ANR	1633263	Identifier	flags		1631303	0					
ANR	1633264	Identifier	ALT_FORM1		1631303	1					
ANR	1633265	CompoundStatement		178:25:6229:6229	1631303	1					
ANR	1633266	ExpressionStatement	SLJIT_ASSERT ( src2 == TMP_REG2 )	224:3:8445:8475	1631303	0	True				
ANR	1633267	CallExpression	SLJIT_ASSERT ( src2 == TMP_REG2 )		1631303	0					
ANR	1633268	Callee	SLJIT_ASSERT		1631303	0					
ANR	1633269	Identifier	SLJIT_ASSERT		1631303	0					
ANR	1633270	ArgumentList	src2 == TMP_REG2		1631303	1					
ANR	1633271	Argument	src2 == TMP_REG2		1631303	0					
ANR	1633272	EqualityExpression	src2 == TMP_REG2		1631303	0		==			
ANR	1633273	Identifier	src2		1631303	0					
ANR	1633274	Identifier	TMP_REG2		1631303	1					
ANR	1633275	ExpressionStatement	compiler -> imm &= 0x1f	225:3:8480:8501	1631303	1	True				
ANR	1633276	AssignmentExpression	compiler -> imm &= 0x1f		1631303	0		&=			
ANR	1633277	PtrMemberAccess	compiler -> imm		1631303	0					
ANR	1633278	Identifier	compiler		1631303	0					
ANR	1633279	Identifier	imm		1631303	1					
ANR	1633280	PrimaryExpression	0x1f		1631303	1					
ANR	1633281	ReturnStatement	"return push_inst ( compiler , RLWINM | RC ( flags ) | S ( src1 ) | A ( dst ) | ( ( ( 32 - compiler -> imm ) & 0x1f ) << 11 ) | ( compiler -> imm << 6 ) | ( 31 << 1 ) ) ;"	226:3:8506:8646	1631303	2	True				
ANR	1633282	CallExpression	"push_inst ( compiler , RLWINM | RC ( flags ) | S ( src1 ) | A ( dst ) | ( ( ( 32 - compiler -> imm ) & 0x1f ) << 11 ) | ( compiler -> imm << 6 ) | ( 31 << 1 ) )"		1631303	0					
ANR	1633283	Callee	push_inst		1631303	0					
ANR	1633284	Identifier	push_inst		1631303	0					
ANR	1633285	ArgumentList	compiler		1631303	1					
ANR	1633286	Argument	compiler		1631303	0					
ANR	1633287	Identifier	compiler		1631303	0					
ANR	1633288	Argument	RLWINM | RC ( flags ) | S ( src1 ) | A ( dst ) | ( ( ( 32 - compiler -> imm ) & 0x1f ) << 11 ) | ( compiler -> imm << 6 ) | ( 31 << 1 )		1631303	1					
ANR	1633289	InclusiveOrExpression	RLWINM | RC ( flags ) | S ( src1 ) | A ( dst ) | ( ( ( 32 - compiler -> imm ) & 0x1f ) << 11 ) | ( compiler -> imm << 6 ) | ( 31 << 1 )		1631303	0		|			
ANR	1633290	Identifier	RLWINM		1631303	0					
ANR	1633291	InclusiveOrExpression	RC ( flags ) | S ( src1 ) | A ( dst ) | ( ( ( 32 - compiler -> imm ) & 0x1f ) << 11 ) | ( compiler -> imm << 6 ) | ( 31 << 1 )		1631303	1		|			
ANR	1633292	CallExpression	RC ( flags )		1631303	0					
ANR	1633293	Callee	RC		1631303	0					
ANR	1633294	Identifier	RC		1631303	0					
ANR	1633295	ArgumentList	flags		1631303	1					
ANR	1633296	Argument	flags		1631303	0					
ANR	1633297	Identifier	flags		1631303	0					
ANR	1633298	InclusiveOrExpression	S ( src1 ) | A ( dst ) | ( ( ( 32 - compiler -> imm ) & 0x1f ) << 11 ) | ( compiler -> imm << 6 ) | ( 31 << 1 )		1631303	1		|			
ANR	1633299	CallExpression	S ( src1 )		1631303	0					
ANR	1633300	Callee	S		1631303	0					
ANR	1633301	Identifier	S		1631303	0					
ANR	1633302	ArgumentList	src1		1631303	1					
ANR	1633303	Argument	src1		1631303	0					
ANR	1633304	Identifier	src1		1631303	0					
ANR	1633305	InclusiveOrExpression	A ( dst ) | ( ( ( 32 - compiler -> imm ) & 0x1f ) << 11 ) | ( compiler -> imm << 6 ) | ( 31 << 1 )		1631303	1		|			
ANR	1633306	CallExpression	A ( dst )		1631303	0					
ANR	1633307	Callee	A		1631303	0					
ANR	1633308	Identifier	A		1631303	0					
ANR	1633309	ArgumentList	dst		1631303	1					
ANR	1633310	Argument	dst		1631303	0					
ANR	1633311	Identifier	dst		1631303	0					
ANR	1633312	InclusiveOrExpression	( ( ( 32 - compiler -> imm ) & 0x1f ) << 11 ) | ( compiler -> imm << 6 ) | ( 31 << 1 )		1631303	1		|			
ANR	1633313	ShiftExpression	( ( 32 - compiler -> imm ) & 0x1f ) << 11		1631303	0		<<			
ANR	1633314	BitAndExpression	( 32 - compiler -> imm ) & 0x1f		1631303	0		&			
ANR	1633315	AdditiveExpression	32 - compiler -> imm		1631303	0		-			
ANR	1633316	PrimaryExpression	32		1631303	0					
ANR	1633317	PtrMemberAccess	compiler -> imm		1631303	1					
ANR	1633318	Identifier	compiler		1631303	0					
ANR	1633319	Identifier	imm		1631303	1					
ANR	1633320	PrimaryExpression	0x1f		1631303	1					
ANR	1633321	PrimaryExpression	11		1631303	1					
ANR	1633322	InclusiveOrExpression	( compiler -> imm << 6 ) | ( 31 << 1 )		1631303	1		|			
ANR	1633323	ShiftExpression	compiler -> imm << 6		1631303	0		<<			
ANR	1633324	PtrMemberAccess	compiler -> imm		1631303	0					
ANR	1633325	Identifier	compiler		1631303	0					
ANR	1633326	Identifier	imm		1631303	1					
ANR	1633327	PrimaryExpression	6		1631303	1					
ANR	1633328	ShiftExpression	31 << 1		1631303	1		<<			
ANR	1633329	PrimaryExpression	31		1631303	0					
ANR	1633330	PrimaryExpression	1		1631303	1					
ANR	1633331	ReturnStatement	"return push_inst ( compiler , SRW | RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 ) ) ;"	228:2:8654:8726	1631303	68	True				
ANR	1633332	CallExpression	"push_inst ( compiler , SRW | RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 ) )"		1631303	0					
ANR	1633333	Callee	push_inst		1631303	0					
ANR	1633334	Identifier	push_inst		1631303	0					
ANR	1633335	ArgumentList	compiler		1631303	1					
ANR	1633336	Argument	compiler		1631303	0					
ANR	1633337	Identifier	compiler		1631303	0					
ANR	1633338	Argument	SRW | RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 )		1631303	1					
ANR	1633339	InclusiveOrExpression	SRW | RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 )		1631303	0		|			
ANR	1633340	Identifier	SRW		1631303	0					
ANR	1633341	InclusiveOrExpression	RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 )		1631303	1		|			
ANR	1633342	CallExpression	RC ( flags )		1631303	0					
ANR	1633343	Callee	RC		1631303	0					
ANR	1633344	Identifier	RC		1631303	0					
ANR	1633345	ArgumentList	flags		1631303	1					
ANR	1633346	Argument	flags		1631303	0					
ANR	1633347	Identifier	flags		1631303	0					
ANR	1633348	InclusiveOrExpression	S ( src1 ) | A ( dst ) | B ( src2 )		1631303	1		|			
ANR	1633349	CallExpression	S ( src1 )		1631303	0					
ANR	1633350	Callee	S		1631303	0					
ANR	1633351	Identifier	S		1631303	0					
ANR	1633352	ArgumentList	src1		1631303	1					
ANR	1633353	Argument	src1		1631303	0					
ANR	1633354	Identifier	src1		1631303	0					
ANR	1633355	InclusiveOrExpression	A ( dst ) | B ( src2 )		1631303	1		|			
ANR	1633356	CallExpression	A ( dst )		1631303	0					
ANR	1633357	Callee	A		1631303	0					
ANR	1633358	Identifier	A		1631303	0					
ANR	1633359	ArgumentList	dst		1631303	1					
ANR	1633360	Argument	dst		1631303	0					
ANR	1633361	Identifier	dst		1631303	0					
ANR	1633362	CallExpression	B ( src2 )		1631303	1					
ANR	1633363	Callee	B		1631303	0					
ANR	1633364	Identifier	B		1631303	0					
ANR	1633365	ArgumentList	src2		1631303	1					
ANR	1633366	Argument	src2		1631303	0					
ANR	1633367	Identifier	src2		1631303	0					
ANR	1633368	Label	case SLJIT_ASHR :	230:1:8730:8745	1631303	69	True				
ANR	1633369	Identifier	SLJIT_ASHR		1631303	0					
ANR	1633370	IfStatement	if ( flags & ALT_FORM3 )		1631303	70					
ANR	1633371	Condition	flags & ALT_FORM3	231:6:8753:8769	1631303	0	True				
ANR	1633372	BitAndExpression	flags & ALT_FORM3		1631303	0		&			
ANR	1633373	Identifier	flags		1631303	0					
ANR	1633374	Identifier	ALT_FORM3		1631303	1					
ANR	1633375	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MFXER | D ( 0 ) ) )"	232:3:8775:8817	1631303	1	True				
ANR	1633376	CallExpression	"FAIL_IF ( push_inst ( compiler , MFXER | D ( 0 ) ) )"		1631303	0					
ANR	1633377	Callee	FAIL_IF		1631303	0					
ANR	1633378	Identifier	FAIL_IF		1631303	0					
ANR	1633379	ArgumentList	"push_inst ( compiler , MFXER | D ( 0 ) )"		1631303	1					
ANR	1633380	Argument	"push_inst ( compiler , MFXER | D ( 0 ) )"		1631303	0					
ANR	1633381	CallExpression	"push_inst ( compiler , MFXER | D ( 0 ) )"		1631303	0					
ANR	1633382	Callee	push_inst		1631303	0					
ANR	1633383	Identifier	push_inst		1631303	0					
ANR	1633384	ArgumentList	compiler		1631303	1					
ANR	1633385	Argument	compiler		1631303	0					
ANR	1633386	Identifier	compiler		1631303	0					
ANR	1633387	Argument	MFXER | D ( 0 )		1631303	1					
ANR	1633388	InclusiveOrExpression	MFXER | D ( 0 )		1631303	0		|			
ANR	1633389	Identifier	MFXER		1631303	0					
ANR	1633390	CallExpression	D ( 0 )		1631303	1					
ANR	1633391	Callee	D		1631303	0					
ANR	1633392	Identifier	D		1631303	0					
ANR	1633393	ArgumentList	0		1631303	1					
ANR	1633394	Argument	0		1631303	0					
ANR	1633395	PrimaryExpression	0		1631303	0					
ANR	1633396	IfStatement	if ( flags & ALT_FORM1 )		1631303	71					
ANR	1633397	Condition	flags & ALT_FORM1	233:6:8825:8841	1631303	0	True				
ANR	1633398	BitAndExpression	flags & ALT_FORM1		1631303	0		&			
ANR	1633399	Identifier	flags		1631303	0					
ANR	1633400	Identifier	ALT_FORM1		1631303	1					
ANR	1633401	CompoundStatement		188:25:6633:6633	1631303	1					
ANR	1633402	ExpressionStatement	SLJIT_ASSERT ( src2 == TMP_REG2 )	234:3:8849:8879	1631303	0	True				
ANR	1633403	CallExpression	SLJIT_ASSERT ( src2 == TMP_REG2 )		1631303	0					
ANR	1633404	Callee	SLJIT_ASSERT		1631303	0					
ANR	1633405	Identifier	SLJIT_ASSERT		1631303	0					
ANR	1633406	ArgumentList	src2 == TMP_REG2		1631303	1					
ANR	1633407	Argument	src2 == TMP_REG2		1631303	0					
ANR	1633408	EqualityExpression	src2 == TMP_REG2		1631303	0		==			
ANR	1633409	Identifier	src2		1631303	0					
ANR	1633410	Identifier	TMP_REG2		1631303	1					
ANR	1633411	ExpressionStatement	compiler -> imm &= 0x1f	235:3:8884:8905	1631303	1	True				
ANR	1633412	AssignmentExpression	compiler -> imm &= 0x1f		1631303	0		&=			
ANR	1633413	PtrMemberAccess	compiler -> imm		1631303	0					
ANR	1633414	Identifier	compiler		1631303	0					
ANR	1633415	Identifier	imm		1631303	1					
ANR	1633416	PrimaryExpression	0x1f		1631303	1					
ANR	1633417	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SRAWI | RC ( flags ) | S ( src1 ) | A ( dst ) | ( compiler -> imm << 11 ) ) )"	236:3:8910:9000	1631303	2	True				
ANR	1633418	CallExpression	"FAIL_IF ( push_inst ( compiler , SRAWI | RC ( flags ) | S ( src1 ) | A ( dst ) | ( compiler -> imm << 11 ) ) )"		1631303	0					
ANR	1633419	Callee	FAIL_IF		1631303	0					
ANR	1633420	Identifier	FAIL_IF		1631303	0					
ANR	1633421	ArgumentList	"push_inst ( compiler , SRAWI | RC ( flags ) | S ( src1 ) | A ( dst ) | ( compiler -> imm << 11 ) )"		1631303	1					
ANR	1633422	Argument	"push_inst ( compiler , SRAWI | RC ( flags ) | S ( src1 ) | A ( dst ) | ( compiler -> imm << 11 ) )"		1631303	0					
ANR	1633423	CallExpression	"push_inst ( compiler , SRAWI | RC ( flags ) | S ( src1 ) | A ( dst ) | ( compiler -> imm << 11 ) )"		1631303	0					
ANR	1633424	Callee	push_inst		1631303	0					
ANR	1633425	Identifier	push_inst		1631303	0					
ANR	1633426	ArgumentList	compiler		1631303	1					
ANR	1633427	Argument	compiler		1631303	0					
ANR	1633428	Identifier	compiler		1631303	0					
ANR	1633429	Argument	SRAWI | RC ( flags ) | S ( src1 ) | A ( dst ) | ( compiler -> imm << 11 )		1631303	1					
ANR	1633430	InclusiveOrExpression	SRAWI | RC ( flags ) | S ( src1 ) | A ( dst ) | ( compiler -> imm << 11 )		1631303	0		|			
ANR	1633431	Identifier	SRAWI		1631303	0					
ANR	1633432	InclusiveOrExpression	RC ( flags ) | S ( src1 ) | A ( dst ) | ( compiler -> imm << 11 )		1631303	1		|			
ANR	1633433	CallExpression	RC ( flags )		1631303	0					
ANR	1633434	Callee	RC		1631303	0					
ANR	1633435	Identifier	RC		1631303	0					
ANR	1633436	ArgumentList	flags		1631303	1					
ANR	1633437	Argument	flags		1631303	0					
ANR	1633438	Identifier	flags		1631303	0					
ANR	1633439	InclusiveOrExpression	S ( src1 ) | A ( dst ) | ( compiler -> imm << 11 )		1631303	1		|			
ANR	1633440	CallExpression	S ( src1 )		1631303	0					
ANR	1633441	Callee	S		1631303	0					
ANR	1633442	Identifier	S		1631303	0					
ANR	1633443	ArgumentList	src1		1631303	1					
ANR	1633444	Argument	src1		1631303	0					
ANR	1633445	Identifier	src1		1631303	0					
ANR	1633446	InclusiveOrExpression	A ( dst ) | ( compiler -> imm << 11 )		1631303	1		|			
ANR	1633447	CallExpression	A ( dst )		1631303	0					
ANR	1633448	Callee	A		1631303	0					
ANR	1633449	Identifier	A		1631303	0					
ANR	1633450	ArgumentList	dst		1631303	1					
ANR	1633451	Argument	dst		1631303	0					
ANR	1633452	Identifier	dst		1631303	0					
ANR	1633453	ShiftExpression	compiler -> imm << 11		1631303	1		<<			
ANR	1633454	PtrMemberAccess	compiler -> imm		1631303	0					
ANR	1633455	Identifier	compiler		1631303	0					
ANR	1633456	Identifier	imm		1631303	1					
ANR	1633457	PrimaryExpression	11		1631303	1					
ANR	1633458	ElseStatement	else		1631303	0					
ANR	1633459	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SRAW | RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 ) ) )"	239:3:9016:9091	1631303	0	True				
ANR	1633460	CallExpression	"FAIL_IF ( push_inst ( compiler , SRAW | RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 ) ) )"		1631303	0					
ANR	1633461	Callee	FAIL_IF		1631303	0					
ANR	1633462	Identifier	FAIL_IF		1631303	0					
ANR	1633463	ArgumentList	"push_inst ( compiler , SRAW | RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 ) )"		1631303	1					
ANR	1633464	Argument	"push_inst ( compiler , SRAW | RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 ) )"		1631303	0					
ANR	1633465	CallExpression	"push_inst ( compiler , SRAW | RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 ) )"		1631303	0					
ANR	1633466	Callee	push_inst		1631303	0					
ANR	1633467	Identifier	push_inst		1631303	0					
ANR	1633468	ArgumentList	compiler		1631303	1					
ANR	1633469	Argument	compiler		1631303	0					
ANR	1633470	Identifier	compiler		1631303	0					
ANR	1633471	Argument	SRAW | RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 )		1631303	1					
ANR	1633472	InclusiveOrExpression	SRAW | RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 )		1631303	0		|			
ANR	1633473	Identifier	SRAW		1631303	0					
ANR	1633474	InclusiveOrExpression	RC ( flags ) | S ( src1 ) | A ( dst ) | B ( src2 )		1631303	1		|			
ANR	1633475	CallExpression	RC ( flags )		1631303	0					
ANR	1633476	Callee	RC		1631303	0					
ANR	1633477	Identifier	RC		1631303	0					
ANR	1633478	ArgumentList	flags		1631303	1					
ANR	1633479	Argument	flags		1631303	0					
ANR	1633480	Identifier	flags		1631303	0					
ANR	1633481	InclusiveOrExpression	S ( src1 ) | A ( dst ) | B ( src2 )		1631303	1		|			
ANR	1633482	CallExpression	S ( src1 )		1631303	0					
ANR	1633483	Callee	S		1631303	0					
ANR	1633484	Identifier	S		1631303	0					
ANR	1633485	ArgumentList	src1		1631303	1					
ANR	1633486	Argument	src1		1631303	0					
ANR	1633487	Identifier	src1		1631303	0					
ANR	1633488	InclusiveOrExpression	A ( dst ) | B ( src2 )		1631303	1		|			
ANR	1633489	CallExpression	A ( dst )		1631303	0					
ANR	1633490	Callee	A		1631303	0					
ANR	1633491	Identifier	A		1631303	0					
ANR	1633492	ArgumentList	dst		1631303	1					
ANR	1633493	Argument	dst		1631303	0					
ANR	1633494	Identifier	dst		1631303	0					
ANR	1633495	CallExpression	B ( src2 )		1631303	1					
ANR	1633496	Callee	B		1631303	0					
ANR	1633497	Identifier	B		1631303	0					
ANR	1633498	ArgumentList	src2		1631303	1					
ANR	1633499	Argument	src2		1631303	0					
ANR	1633500	Identifier	src2		1631303	0					
ANR	1633501	ReturnStatement	"return ( flags & ALT_FORM3 ) ? push_inst ( compiler , MTXER | S ( 0 ) ) : SLJIT_SUCCESS ;"	240:2:9095:9173	1631303	72	True				
ANR	1633502	ConditionalExpression	"( flags & ALT_FORM3 ) ? push_inst ( compiler , MTXER | S ( 0 ) ) : SLJIT_SUCCESS"		1631303	0					
ANR	1633503	Condition	flags & ALT_FORM3		1631303	0					
ANR	1633504	BitAndExpression	flags & ALT_FORM3		1631303	0		&			
ANR	1633505	Identifier	flags		1631303	0					
ANR	1633506	Identifier	ALT_FORM3		1631303	1					
ANR	1633507	CallExpression	"push_inst ( compiler , MTXER | S ( 0 ) )"		1631303	1					
ANR	1633508	Callee	push_inst		1631303	0					
ANR	1633509	Identifier	push_inst		1631303	0					
ANR	1633510	ArgumentList	compiler		1631303	1					
ANR	1633511	Argument	compiler		1631303	0					
ANR	1633512	Identifier	compiler		1631303	0					
ANR	1633513	Argument	MTXER | S ( 0 )		1631303	1					
ANR	1633514	InclusiveOrExpression	MTXER | S ( 0 )		1631303	0		|			
ANR	1633515	Identifier	MTXER		1631303	0					
ANR	1633516	CallExpression	S ( 0 )		1631303	1					
ANR	1633517	Callee	S		1631303	0					
ANR	1633518	Identifier	S		1631303	0					
ANR	1633519	ArgumentList	0		1631303	1					
ANR	1633520	Argument	0		1631303	0					
ANR	1633521	PrimaryExpression	0		1631303	0					
ANR	1633522	Identifier	SLJIT_SUCCESS		1631303	2					
ANR	1633523	ExpressionStatement	SLJIT_ASSERT_STOP ( )	243:1:9180:9199	1631303	1	True				
ANR	1633524	CallExpression	SLJIT_ASSERT_STOP ( )		1631303	0					
ANR	1633525	Callee	SLJIT_ASSERT_STOP		1631303	0					
ANR	1633526	Identifier	SLJIT_ASSERT_STOP		1631303	0					
ANR	1633527	ArgumentList			1631303	1					
ANR	1633528	ReturnStatement	return SLJIT_SUCCESS ;	244:1:9202:9222	1631303	2	True				
ANR	1633529	Identifier	SLJIT_SUCCESS		1631303	0					
ANR	1633530	ReturnType	static SLJIT_INLINE sljit_si		1631303	1					
ANR	1633531	Identifier	emit_single_op		1631303	2					
ANR	1633532	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si flags , sljit_si dst , sljit_si src1 , sljit_si src2"		1631303	3					
ANR	1633533	Parameter	struct sljit_compiler * compiler	44:44:2103:2133	1631303	0	True				
ANR	1633534	ParameterType	struct sljit_compiler *		1631303	0					
ANR	1633535	Identifier	compiler		1631303	1					
ANR	1633536	Parameter	sljit_si op	44:77:2136:2146	1631303	1	True				
ANR	1633537	ParameterType	sljit_si		1631303	0					
ANR	1633538	Identifier	op		1631303	1					
ANR	1633539	Parameter	sljit_si flags	44:90:2149:2162	1631303	2	True				
ANR	1633540	ParameterType	sljit_si		1631303	0					
ANR	1633541	Identifier	flags		1631303	1					
ANR	1633542	Parameter	sljit_si dst	45:1:2166:2177	1631303	3	True				
ANR	1633543	ParameterType	sljit_si		1631303	0					
ANR	1633544	Identifier	dst		1631303	1					
ANR	1633545	Parameter	sljit_si src1	45:15:2180:2192	1631303	4	True				
ANR	1633546	ParameterType	sljit_si		1631303	0					
ANR	1633547	Identifier	src1		1631303	1					
ANR	1633548	Parameter	sljit_si src2	45:30:2195:2207	1631303	5	True				
ANR	1633549	ParameterType	sljit_si		1631303	0					
ANR	1633550	Identifier	src2		1631303	1					
ANR	1633551	CFGEntryNode	ENTRY		1631303		True				
ANR	1633552	CFGExitNode	EXIT		1631303		True				
ANR	1633553	Symbol	TMP_REG2		1631303						
ANR	1633554	Symbol	ADD		1631303						
ANR	1633555	Symbol	SUBF		1631303						
ANR	1633556	Symbol	TMP_REG1		1631303						
ANR	1633557	Symbol	* compiler		1631303						
ANR	1633558	Symbol	RLWINM		1631303						
ANR	1633559	Symbol	MFXER		1631303						
ANR	1633560	Symbol	ANDIS		1631303						
ANR	1633561	Symbol	MTXER		1631303						
ANR	1633562	Symbol	SLW		1631303						
ANR	1633563	Symbol	ALT_SET_FLAGS		1631303						
ANR	1633564	Symbol	OERC		1631303						
ANR	1633565	Symbol	SRAWI		1631303						
ANR	1633566	Symbol	CMP		1631303						
ANR	1633567	Symbol	IMM		1631303						
ANR	1633568	Symbol	REG2_SOURCE		1631303						
ANR	1633569	Symbol	SUBFIC		1631303						
ANR	1633570	Symbol	NOR		1631303						
ANR	1633571	Symbol	RC		1631303						
ANR	1633572	Symbol	CRD		1631303						
ANR	1633573	Symbol	AND		1631303						
ANR	1633574	Symbol	XOR		1631303						
ANR	1633575	Symbol	REG_DEST		1631303						
ANR	1633576	Symbol	A		1631303						
ANR	1633577	Symbol	B		1631303						
ANR	1633578	Symbol	dst		1631303						
ANR	1633579	Symbol	D		1631303						
ANR	1633580	Symbol	MULLI		1631303						
ANR	1633581	Symbol	ORI		1631303						
ANR	1633582	Symbol	XORI		1631303						
ANR	1633583	Symbol	flags		1631303						
ANR	1633584	Symbol	MULLW		1631303						
ANR	1633585	Symbol	S		1631303						
ANR	1633586	Symbol	SLJIT_MOV_SH		1631303						
ANR	1633587	Symbol	ALT_FORM1		1631303						
ANR	1633588	Symbol	ALT_FORM2		1631303						
ANR	1633589	Symbol	ADDIS		1631303						
ANR	1633590	Symbol	XORIS		1631303						
ANR	1633591	Symbol	ALT_FORM3		1631303						
ANR	1633592	Symbol	SRW		1631303						
ANR	1633593	Symbol	ALT_FORM4		1631303						
ANR	1633594	Symbol	compiler -> imm		1631303						
ANR	1633595	Symbol	ALT_FORM5		1631303						
ANR	1633596	Symbol	compiler		1631303						
ANR	1633597	Symbol	ALT_FORM6		1631303						
ANR	1633598	Symbol	op		1631303						
ANR	1633599	Symbol	push_inst		1631303						
ANR	1633600	Symbol	OR		1631303						
ANR	1633601	Symbol	EXTSH		1631303						
ANR	1633602	Symbol	SUBFC		1631303						
ANR	1633603	Symbol	EXTSB		1631303						
ANR	1633604	Symbol	SUBFE		1631303						
ANR	1633605	Symbol	CNTLZW		1631303						
ANR	1633606	Symbol	SLJIT_MOV_SB		1631303						
ANR	1633607	Symbol	ADDIC		1631303						
ANR	1633608	Symbol	ORIS		1631303						
ANR	1633609	Symbol	SLJIT_SUCCESS		1631303						
ANR	1633610	Symbol	ANDI		1631303						
ANR	1633611	Symbol	NEG		1631303						
ANR	1633612	Symbol	SRAW		1631303						
ANR	1633613	Symbol	INS_CLEAR_LEFT		1631303						
ANR	1633614	Symbol	ADDI		1631303						
ANR	1633615	Symbol	CMPLI		1631303						
ANR	1633616	Symbol	src1		1631303						
ANR	1633617	Symbol	CMPL		1631303						
ANR	1633618	Symbol	ADDE		1631303						
ANR	1633619	Symbol	src2		1631303						
ANR	1633620	Symbol	ADDC		1631303						
ANR	1633621	Symbol	CMPI		1631303						
ANR	1633622	Function	emit_const	247:0:9227:9485							
ANR	1633623	FunctionDef	"emit_const (struct sljit_compiler * compiler , sljit_si reg , sljit_sw init_value)"		1633622	0					
ANR	1633624	CompoundStatement		248:0:9335:9485	1633622	0					
ANR	1633625	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDIS | D ( reg ) | A ( 0 ) | IMM ( init_value >> 16 ) ) )"	249:1:9338:9413	1633622	0	True				
ANR	1633626	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDIS | D ( reg ) | A ( 0 ) | IMM ( init_value >> 16 ) ) )"		1633622	0					
ANR	1633627	Callee	FAIL_IF		1633622	0					
ANR	1633628	Identifier	FAIL_IF		1633622	0					
ANR	1633629	ArgumentList	"push_inst ( compiler , ADDIS | D ( reg ) | A ( 0 ) | IMM ( init_value >> 16 ) )"		1633622	1					
ANR	1633630	Argument	"push_inst ( compiler , ADDIS | D ( reg ) | A ( 0 ) | IMM ( init_value >> 16 ) )"		1633622	0					
ANR	1633631	CallExpression	"push_inst ( compiler , ADDIS | D ( reg ) | A ( 0 ) | IMM ( init_value >> 16 ) )"		1633622	0					
ANR	1633632	Callee	push_inst		1633622	0					
ANR	1633633	Identifier	push_inst		1633622	0					
ANR	1633634	ArgumentList	compiler		1633622	1					
ANR	1633635	Argument	compiler		1633622	0					
ANR	1633636	Identifier	compiler		1633622	0					
ANR	1633637	Argument	ADDIS | D ( reg ) | A ( 0 ) | IMM ( init_value >> 16 )		1633622	1					
ANR	1633638	InclusiveOrExpression	ADDIS | D ( reg ) | A ( 0 ) | IMM ( init_value >> 16 )		1633622	0		|			
ANR	1633639	Identifier	ADDIS		1633622	0					
ANR	1633640	InclusiveOrExpression	D ( reg ) | A ( 0 ) | IMM ( init_value >> 16 )		1633622	1		|			
ANR	1633641	CallExpression	D ( reg )		1633622	0					
ANR	1633642	Callee	D		1633622	0					
ANR	1633643	Identifier	D		1633622	0					
ANR	1633644	ArgumentList	reg		1633622	1					
ANR	1633645	Argument	reg		1633622	0					
ANR	1633646	Identifier	reg		1633622	0					
ANR	1633647	InclusiveOrExpression	A ( 0 ) | IMM ( init_value >> 16 )		1633622	1		|			
ANR	1633648	CallExpression	A ( 0 )		1633622	0					
ANR	1633649	Callee	A		1633622	0					
ANR	1633650	Identifier	A		1633622	0					
ANR	1633651	ArgumentList	0		1633622	1					
ANR	1633652	Argument	0		1633622	0					
ANR	1633653	PrimaryExpression	0		1633622	0					
ANR	1633654	CallExpression	IMM ( init_value >> 16 )		1633622	1					
ANR	1633655	Callee	IMM		1633622	0					
ANR	1633656	Identifier	IMM		1633622	0					
ANR	1633657	ArgumentList	init_value >> 16		1633622	1					
ANR	1633658	Argument	init_value >> 16		1633622	0					
ANR	1633659	ShiftExpression	init_value >> 16		1633622	0		>>			
ANR	1633660	Identifier	init_value		1633622	0					
ANR	1633661	PrimaryExpression	16		1633622	1					
ANR	1633662	ReturnStatement	"return push_inst ( compiler , ORI | S ( reg ) | A ( reg ) | IMM ( init_value ) ) ;"	250:1:9416:9483	1633622	1	True				
ANR	1633663	CallExpression	"push_inst ( compiler , ORI | S ( reg ) | A ( reg ) | IMM ( init_value ) )"		1633622	0					
ANR	1633664	Callee	push_inst		1633622	0					
ANR	1633665	Identifier	push_inst		1633622	0					
ANR	1633666	ArgumentList	compiler		1633622	1					
ANR	1633667	Argument	compiler		1633622	0					
ANR	1633668	Identifier	compiler		1633622	0					
ANR	1633669	Argument	ORI | S ( reg ) | A ( reg ) | IMM ( init_value )		1633622	1					
ANR	1633670	InclusiveOrExpression	ORI | S ( reg ) | A ( reg ) | IMM ( init_value )		1633622	0		|			
ANR	1633671	Identifier	ORI		1633622	0					
ANR	1633672	InclusiveOrExpression	S ( reg ) | A ( reg ) | IMM ( init_value )		1633622	1		|			
ANR	1633673	CallExpression	S ( reg )		1633622	0					
ANR	1633674	Callee	S		1633622	0					
ANR	1633675	Identifier	S		1633622	0					
ANR	1633676	ArgumentList	reg		1633622	1					
ANR	1633677	Argument	reg		1633622	0					
ANR	1633678	Identifier	reg		1633622	0					
ANR	1633679	InclusiveOrExpression	A ( reg ) | IMM ( init_value )		1633622	1		|			
ANR	1633680	CallExpression	A ( reg )		1633622	0					
ANR	1633681	Callee	A		1633622	0					
ANR	1633682	Identifier	A		1633622	0					
ANR	1633683	ArgumentList	reg		1633622	1					
ANR	1633684	Argument	reg		1633622	0					
ANR	1633685	Identifier	reg		1633622	0					
ANR	1633686	CallExpression	IMM ( init_value )		1633622	1					
ANR	1633687	Callee	IMM		1633622	0					
ANR	1633688	Identifier	IMM		1633622	0					
ANR	1633689	ArgumentList	init_value		1633622	1					
ANR	1633690	Argument	init_value		1633622	0					
ANR	1633691	Identifier	init_value		1633622	0					
ANR	1633692	ReturnType	static SLJIT_INLINE sljit_si		1633622	1					
ANR	1633693	Identifier	emit_const		1633622	2					
ANR	1633694	ParameterList	"struct sljit_compiler * compiler , sljit_si reg , sljit_sw init_value"		1633622	3					
ANR	1633695	Parameter	struct sljit_compiler * compiler	247:40:9267:9297	1633622	0	True				
ANR	1633696	ParameterType	struct sljit_compiler *		1633622	0					
ANR	1633697	Identifier	compiler		1633622	1					
ANR	1633698	Parameter	sljit_si reg	247:73:9300:9311	1633622	1	True				
ANR	1633699	ParameterType	sljit_si		1633622	0					
ANR	1633700	Identifier	reg		1633622	1					
ANR	1633701	Parameter	sljit_sw init_value	247:87:9314:9332	1633622	2	True				
ANR	1633702	ParameterType	sljit_sw		1633622	0					
ANR	1633703	Identifier	init_value		1633622	1					
ANR	1633704	CFGEntryNode	ENTRY		1633622		True				
ANR	1633705	CFGExitNode	EXIT		1633622		True				
ANR	1633706	Symbol	push_inst		1633622						
ANR	1633707	Symbol	A		1633622						
ANR	1633708	Symbol	S		1633622						
ANR	1633709	Symbol	D		1633622						
ANR	1633710	Symbol	reg		1633622						
ANR	1633711	Symbol	ORI		1633622						
ANR	1633712	Symbol	ADDIS		1633622						
ANR	1633713	Symbol	IMM		1633622						
ANR	1633714	Symbol	compiler		1633622						
ANR	1633715	Symbol	init_value		1633622						
ANR	1633716	Function	sljit_set_jump_addr	253:0:9488:9770							
ANR	1633717	FunctionDef	"sljit_set_jump_addr (sljit_uw addr , sljit_uw new_addr)"		1633716	0					
ANR	1633718	CompoundStatement		254:0:9572:9770	1633716	0					
ANR	1633719	IdentifierDeclStatement	sljit_ins * inst = ( sljit_ins * ) addr ;	255:1:9575:9609	1633716	0	True				
ANR	1633720	IdentifierDecl	* inst = ( sljit_ins * ) addr		1633716	0					
ANR	1633721	IdentifierDeclType	sljit_ins *		1633716	0					
ANR	1633722	Identifier	inst		1633716	1					
ANR	1633723	AssignmentExpression	* inst = ( sljit_ins * ) addr		1633716	2		=			
ANR	1633724	Identifier	inst		1633716	0					
ANR	1633725	CastExpression	( sljit_ins * ) addr		1633716	1					
ANR	1633726	CastTarget	sljit_ins *		1633716	0					
ANR	1633727	Identifier	addr		1633716	1					
ANR	1633728	ExpressionStatement	inst [ 0 ] = ( inst [ 0 ] & 0xffff0000 ) | ( ( new_addr >> 16 ) & 0xffff )	257:1:9613:9675	1633716	1	True				
ANR	1633729	AssignmentExpression	inst [ 0 ] = ( inst [ 0 ] & 0xffff0000 ) | ( ( new_addr >> 16 ) & 0xffff )		1633716	0		=			
ANR	1633730	ArrayIndexing	inst [ 0 ]		1633716	0					
ANR	1633731	Identifier	inst		1633716	0					
ANR	1633732	PrimaryExpression	0		1633716	1					
ANR	1633733	InclusiveOrExpression	( inst [ 0 ] & 0xffff0000 ) | ( ( new_addr >> 16 ) & 0xffff )		1633716	1		|			
ANR	1633734	BitAndExpression	inst [ 0 ] & 0xffff0000		1633716	0		&			
ANR	1633735	ArrayIndexing	inst [ 0 ]		1633716	0					
ANR	1633736	Identifier	inst		1633716	0					
ANR	1633737	PrimaryExpression	0		1633716	1					
ANR	1633738	PrimaryExpression	0xffff0000		1633716	1					
ANR	1633739	BitAndExpression	( new_addr >> 16 ) & 0xffff		1633716	1		&			
ANR	1633740	ShiftExpression	new_addr >> 16		1633716	0		>>			
ANR	1633741	Identifier	new_addr		1633716	0					
ANR	1633742	PrimaryExpression	16		1633716	1					
ANR	1633743	PrimaryExpression	0xffff		1633716	1					
ANR	1633744	ExpressionStatement	inst [ 1 ] = ( inst [ 1 ] & 0xffff0000 ) | ( new_addr & 0xffff )	258:1:9678:9732	1633716	2	True				
ANR	1633745	AssignmentExpression	inst [ 1 ] = ( inst [ 1 ] & 0xffff0000 ) | ( new_addr & 0xffff )		1633716	0		=			
ANR	1633746	ArrayIndexing	inst [ 1 ]		1633716	0					
ANR	1633747	Identifier	inst		1633716	0					
ANR	1633748	PrimaryExpression	1		1633716	1					
ANR	1633749	InclusiveOrExpression	( inst [ 1 ] & 0xffff0000 ) | ( new_addr & 0xffff )		1633716	1		|			
ANR	1633750	BitAndExpression	inst [ 1 ] & 0xffff0000		1633716	0		&			
ANR	1633751	ArrayIndexing	inst [ 1 ]		1633716	0					
ANR	1633752	Identifier	inst		1633716	0					
ANR	1633753	PrimaryExpression	1		1633716	1					
ANR	1633754	PrimaryExpression	0xffff0000		1633716	1					
ANR	1633755	BitAndExpression	new_addr & 0xffff		1633716	1		&			
ANR	1633756	Identifier	new_addr		1633716	0					
ANR	1633757	PrimaryExpression	0xffff		1633716	1					
ANR	1633758	ExpressionStatement	"SLJIT_CACHE_FLUSH ( inst , inst + 2 )"	259:1:9735:9768	1633716	3	True				
ANR	1633759	CallExpression	"SLJIT_CACHE_FLUSH ( inst , inst + 2 )"		1633716	0					
ANR	1633760	Callee	SLJIT_CACHE_FLUSH		1633716	0					
ANR	1633761	Identifier	SLJIT_CACHE_FLUSH		1633716	0					
ANR	1633762	ArgumentList	inst		1633716	1					
ANR	1633763	Argument	inst		1633716	0					
ANR	1633764	Identifier	inst		1633716	0					
ANR	1633765	Argument	inst + 2		1633716	1					
ANR	1633766	AdditiveExpression	inst + 2		1633716	0		+			
ANR	1633767	Identifier	inst		1633716	0					
ANR	1633768	PrimaryExpression	2		1633716	1					
ANR	1633769	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1633716	1					
ANR	1633770	Identifier	sljit_set_jump_addr		1633716	2					
ANR	1633771	ParameterList	"sljit_uw addr , sljit_uw new_addr"		1633716	3					
ANR	1633772	Parameter	sljit_uw addr	253:50:9538:9550	1633716	0	True				
ANR	1633773	ParameterType	sljit_uw		1633716	0					
ANR	1633774	Identifier	addr		1633716	1					
ANR	1633775	Parameter	sljit_uw new_addr	253:65:9553:9569	1633716	1	True				
ANR	1633776	ParameterType	sljit_uw		1633716	0					
ANR	1633777	Identifier	new_addr		1633716	1					
ANR	1633778	CFGEntryNode	ENTRY		1633716		True				
ANR	1633779	CFGExitNode	EXIT		1633716		True				
ANR	1633780	Symbol	* inst		1633716						
ANR	1633781	Symbol	inst		1633716						
ANR	1633782	Symbol	addr		1633716						
ANR	1633783	Symbol	new_addr		1633716						
ANR	1633784	Function	sljit_set_const	262:0:9773:10063							
ANR	1633785	FunctionDef	"sljit_set_const (sljit_uw addr , sljit_sw new_constant)"		1633784	0					
ANR	1633786	CompoundStatement		263:0:9857:10063	1633784	0					
ANR	1633787	IdentifierDeclStatement	sljit_ins * inst = ( sljit_ins * ) addr ;	264:1:9860:9894	1633784	0	True				
ANR	1633788	IdentifierDecl	* inst = ( sljit_ins * ) addr		1633784	0					
ANR	1633789	IdentifierDeclType	sljit_ins *		1633784	0					
ANR	1633790	Identifier	inst		1633784	1					
ANR	1633791	AssignmentExpression	* inst = ( sljit_ins * ) addr		1633784	2		=			
ANR	1633792	Identifier	inst		1633784	0					
ANR	1633793	CastExpression	( sljit_ins * ) addr		1633784	1					
ANR	1633794	CastTarget	sljit_ins *		1633784	0					
ANR	1633795	Identifier	addr		1633784	1					
ANR	1633796	ExpressionStatement	inst [ 0 ] = ( inst [ 0 ] & 0xffff0000 ) | ( ( new_constant >> 16 ) & 0xffff )	266:1:9898:9964	1633784	1	True				
ANR	1633797	AssignmentExpression	inst [ 0 ] = ( inst [ 0 ] & 0xffff0000 ) | ( ( new_constant >> 16 ) & 0xffff )		1633784	0		=			
ANR	1633798	ArrayIndexing	inst [ 0 ]		1633784	0					
ANR	1633799	Identifier	inst		1633784	0					
ANR	1633800	PrimaryExpression	0		1633784	1					
ANR	1633801	InclusiveOrExpression	( inst [ 0 ] & 0xffff0000 ) | ( ( new_constant >> 16 ) & 0xffff )		1633784	1		|			
ANR	1633802	BitAndExpression	inst [ 0 ] & 0xffff0000		1633784	0		&			
ANR	1633803	ArrayIndexing	inst [ 0 ]		1633784	0					
ANR	1633804	Identifier	inst		1633784	0					
ANR	1633805	PrimaryExpression	0		1633784	1					
ANR	1633806	PrimaryExpression	0xffff0000		1633784	1					
ANR	1633807	BitAndExpression	( new_constant >> 16 ) & 0xffff		1633784	1		&			
ANR	1633808	ShiftExpression	new_constant >> 16		1633784	0		>>			
ANR	1633809	Identifier	new_constant		1633784	0					
ANR	1633810	PrimaryExpression	16		1633784	1					
ANR	1633811	PrimaryExpression	0xffff		1633784	1					
ANR	1633812	ExpressionStatement	inst [ 1 ] = ( inst [ 1 ] & 0xffff0000 ) | ( new_constant & 0xffff )	267:1:9967:10025	1633784	2	True				
ANR	1633813	AssignmentExpression	inst [ 1 ] = ( inst [ 1 ] & 0xffff0000 ) | ( new_constant & 0xffff )		1633784	0		=			
ANR	1633814	ArrayIndexing	inst [ 1 ]		1633784	0					
ANR	1633815	Identifier	inst		1633784	0					
ANR	1633816	PrimaryExpression	1		1633784	1					
ANR	1633817	InclusiveOrExpression	( inst [ 1 ] & 0xffff0000 ) | ( new_constant & 0xffff )		1633784	1		|			
ANR	1633818	BitAndExpression	inst [ 1 ] & 0xffff0000		1633784	0		&			
ANR	1633819	ArrayIndexing	inst [ 1 ]		1633784	0					
ANR	1633820	Identifier	inst		1633784	0					
ANR	1633821	PrimaryExpression	1		1633784	1					
ANR	1633822	PrimaryExpression	0xffff0000		1633784	1					
ANR	1633823	BitAndExpression	new_constant & 0xffff		1633784	1		&			
ANR	1633824	Identifier	new_constant		1633784	0					
ANR	1633825	PrimaryExpression	0xffff		1633784	1					
ANR	1633826	ExpressionStatement	"SLJIT_CACHE_FLUSH ( inst , inst + 2 )"	268:1:10028:10061	1633784	3	True				
ANR	1633827	CallExpression	"SLJIT_CACHE_FLUSH ( inst , inst + 2 )"		1633784	0					
ANR	1633828	Callee	SLJIT_CACHE_FLUSH		1633784	0					
ANR	1633829	Identifier	SLJIT_CACHE_FLUSH		1633784	0					
ANR	1633830	ArgumentList	inst		1633784	1					
ANR	1633831	Argument	inst		1633784	0					
ANR	1633832	Identifier	inst		1633784	0					
ANR	1633833	Argument	inst + 2		1633784	1					
ANR	1633834	AdditiveExpression	inst + 2		1633784	0		+			
ANR	1633835	Identifier	inst		1633784	0					
ANR	1633836	PrimaryExpression	2		1633784	1					
ANR	1633837	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1633784	1					
ANR	1633838	Identifier	sljit_set_const		1633784	2					
ANR	1633839	ParameterList	"sljit_uw addr , sljit_sw new_constant"		1633784	3					
ANR	1633840	Parameter	sljit_uw addr	262:46:9819:9831	1633784	0	True				
ANR	1633841	ParameterType	sljit_uw		1633784	0					
ANR	1633842	Identifier	addr		1633784	1					
ANR	1633843	Parameter	sljit_sw new_constant	262:61:9834:9854	1633784	1	True				
ANR	1633844	ParameterType	sljit_sw		1633784	0					
ANR	1633845	Identifier	new_constant		1633784	1					
ANR	1633846	CFGEntryNode	ENTRY		1633784		True				
ANR	1633847	CFGExitNode	EXIT		1633784		True				
ANR	1633848	Symbol	new_constant		1633784						
ANR	1633849	Symbol	* inst		1633784						
ANR	1633850	Symbol	inst		1633784						
ANR	1633851	Symbol	addr		1633784						
