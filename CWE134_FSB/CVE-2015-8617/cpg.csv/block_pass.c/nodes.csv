command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	427334	File	data/converged/CVE-2015-8617_php-src/block_pass.c								
ANR	427335	Function	zend_optimizer_get_persistent_constant	34:0:1697:2520							
ANR	427336	FunctionDef	"zend_optimizer_get_persistent_constant (zend_string * name , zval * result , int copy)"		427335	0					
ANR	427337	CompoundStatement		35:0:1783:2520	427335	0					
ANR	427338	IdentifierDeclStatement	zend_constant * c ;	36:1:1786:1802	427335	0	True				
ANR	427339	IdentifierDecl	* c		427335	0					
ANR	427340	IdentifierDeclType	zend_constant *		427335	0					
ANR	427341	Identifier	c		427335	1					
ANR	427342	IdentifierDeclStatement	char * lookup_name ;	37:1:1805:1822	427335	1	True				
ANR	427343	IdentifierDecl	* lookup_name		427335	0					
ANR	427344	IdentifierDeclType	char *		427335	0					
ANR	427345	Identifier	lookup_name		427335	1					
ANR	427346	IdentifierDeclStatement	int retval = 1 ;	38:1:1825:1839	427335	2	True				
ANR	427347	IdentifierDecl	retval = 1		427335	0					
ANR	427348	IdentifierDeclType	int		427335	0					
ANR	427349	Identifier	retval		427335	1					
ANR	427350	AssignmentExpression	retval = 1		427335	2		=			
ANR	427351	Identifier	retval		427335	0					
ANR	427352	PrimaryExpression	1		427335	1					
ANR	427353	ExpressionStatement	ALLOCA_FLAG ( use_heap )	39:1:1842:1863	427335	3	True				
ANR	427354	CallExpression	ALLOCA_FLAG ( use_heap )		427335	0					
ANR	427355	Callee	ALLOCA_FLAG		427335	0					
ANR	427356	Identifier	ALLOCA_FLAG		427335	0					
ANR	427357	ArgumentList	use_heap		427335	1					
ANR	427358	Argument	use_heap		427335	0					
ANR	427359	Identifier	use_heap		427335	0					
ANR	427360	IfStatement	"if ( ( c = zend_hash_find_ptr ( EG ( zend_constants ) , name ) ) == NULL )"		427335	4					
ANR	427361	Condition	"( c = zend_hash_find_ptr ( EG ( zend_constants ) , name ) ) == NULL"	41:5:1871:1928	427335	0	True				
ANR	427362	EqualityExpression	"( c = zend_hash_find_ptr ( EG ( zend_constants ) , name ) ) == NULL"		427335	0		==			
ANR	427363	AssignmentExpression	"c = zend_hash_find_ptr ( EG ( zend_constants ) , name )"		427335	0		=			
ANR	427364	Identifier	c		427335	0					
ANR	427365	CallExpression	"zend_hash_find_ptr ( EG ( zend_constants ) , name )"		427335	1					
ANR	427366	Callee	zend_hash_find_ptr		427335	0					
ANR	427367	Identifier	zend_hash_find_ptr		427335	0					
ANR	427368	ArgumentList	EG ( zend_constants )		427335	1					
ANR	427369	Argument	EG ( zend_constants )		427335	0					
ANR	427370	CallExpression	EG ( zend_constants )		427335	0					
ANR	427371	Callee	EG		427335	0					
ANR	427372	Identifier	EG		427335	0					
ANR	427373	ArgumentList	zend_constants		427335	1					
ANR	427374	Argument	zend_constants		427335	0					
ANR	427375	Identifier	zend_constants		427335	0					
ANR	427376	Argument	name		427335	1					
ANR	427377	Identifier	name		427335	0					
ANR	427378	Identifier	NULL		427335	1					
ANR	427379	CompoundStatement		7:65:147:147	427335	1					
ANR	427380	ExpressionStatement	lookup_name = DO_ALLOCA ( ZSTR_LEN ( name ) + 1 )	42:2:1935:1978	427335	0	True				
ANR	427381	AssignmentExpression	lookup_name = DO_ALLOCA ( ZSTR_LEN ( name ) + 1 )		427335	0		=			
ANR	427382	Identifier	lookup_name		427335	0					
ANR	427383	CallExpression	DO_ALLOCA ( ZSTR_LEN ( name ) + 1 )		427335	1					
ANR	427384	Callee	DO_ALLOCA		427335	0					
ANR	427385	Identifier	DO_ALLOCA		427335	0					
ANR	427386	ArgumentList	ZSTR_LEN ( name ) + 1		427335	1					
ANR	427387	Argument	ZSTR_LEN ( name ) + 1		427335	0					
ANR	427388	AdditiveExpression	ZSTR_LEN ( name ) + 1		427335	0		+			
ANR	427389	CallExpression	ZSTR_LEN ( name )		427335	0					
ANR	427390	Callee	ZSTR_LEN		427335	0					
ANR	427391	Identifier	ZSTR_LEN		427335	0					
ANR	427392	ArgumentList	name		427335	1					
ANR	427393	Argument	name		427335	0					
ANR	427394	Identifier	name		427335	0					
ANR	427395	PrimaryExpression	1		427335	1					
ANR	427396	ExpressionStatement	"memcpy ( lookup_name , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) + 1 )"	43:2:1982:2037	427335	1	True				
ANR	427397	CallExpression	"memcpy ( lookup_name , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) + 1 )"		427335	0					
ANR	427398	Callee	memcpy		427335	0					
ANR	427399	Identifier	memcpy		427335	0					
ANR	427400	ArgumentList	lookup_name		427335	1					
ANR	427401	Argument	lookup_name		427335	0					
ANR	427402	Identifier	lookup_name		427335	0					
ANR	427403	Argument	ZSTR_VAL ( name )		427335	1					
ANR	427404	CallExpression	ZSTR_VAL ( name )		427335	0					
ANR	427405	Callee	ZSTR_VAL		427335	0					
ANR	427406	Identifier	ZSTR_VAL		427335	0					
ANR	427407	ArgumentList	name		427335	1					
ANR	427408	Argument	name		427335	0					
ANR	427409	Identifier	name		427335	0					
ANR	427410	Argument	ZSTR_LEN ( name ) + 1		427335	2					
ANR	427411	AdditiveExpression	ZSTR_LEN ( name ) + 1		427335	0		+			
ANR	427412	CallExpression	ZSTR_LEN ( name )		427335	0					
ANR	427413	Callee	ZSTR_LEN		427335	0					
ANR	427414	Identifier	ZSTR_LEN		427335	0					
ANR	427415	ArgumentList	name		427335	1					
ANR	427416	Argument	name		427335	0					
ANR	427417	Identifier	name		427335	0					
ANR	427418	PrimaryExpression	1		427335	1					
ANR	427419	ExpressionStatement	"zend_str_tolower ( lookup_name , ZSTR_LEN ( name ) )"	44:2:2041:2086	427335	2	True				
ANR	427420	CallExpression	"zend_str_tolower ( lookup_name , ZSTR_LEN ( name ) )"		427335	0					
ANR	427421	Callee	zend_str_tolower		427335	0					
ANR	427422	Identifier	zend_str_tolower		427335	0					
ANR	427423	ArgumentList	lookup_name		427335	1					
ANR	427424	Argument	lookup_name		427335	0					
ANR	427425	Identifier	lookup_name		427335	0					
ANR	427426	Argument	ZSTR_LEN ( name )		427335	1					
ANR	427427	CallExpression	ZSTR_LEN ( name )		427335	0					
ANR	427428	Callee	ZSTR_LEN		427335	0					
ANR	427429	Identifier	ZSTR_LEN		427335	0					
ANR	427430	ArgumentList	name		427335	1					
ANR	427431	Argument	name		427335	0					
ANR	427432	Identifier	name		427335	0					
ANR	427433	IfStatement	"if ( ( c = zend_hash_str_find_ptr ( EG ( zend_constants ) , lookup_name , ZSTR_LEN ( name ) ) ) != NULL )"		427335	3					
ANR	427434	Condition	"( c = zend_hash_str_find_ptr ( EG ( zend_constants ) , lookup_name , ZSTR_LEN ( name ) ) ) != NULL"	46:6:2095:2179	427335	0	True				
ANR	427435	EqualityExpression	"( c = zend_hash_str_find_ptr ( EG ( zend_constants ) , lookup_name , ZSTR_LEN ( name ) ) ) != NULL"		427335	0		!=			
ANR	427436	AssignmentExpression	"c = zend_hash_str_find_ptr ( EG ( zend_constants ) , lookup_name , ZSTR_LEN ( name ) )"		427335	0		=			
ANR	427437	Identifier	c		427335	0					
ANR	427438	CallExpression	"zend_hash_str_find_ptr ( EG ( zend_constants ) , lookup_name , ZSTR_LEN ( name ) )"		427335	1					
ANR	427439	Callee	zend_hash_str_find_ptr		427335	0					
ANR	427440	Identifier	zend_hash_str_find_ptr		427335	0					
ANR	427441	ArgumentList	EG ( zend_constants )		427335	1					
ANR	427442	Argument	EG ( zend_constants )		427335	0					
ANR	427443	CallExpression	EG ( zend_constants )		427335	0					
ANR	427444	Callee	EG		427335	0					
ANR	427445	Identifier	EG		427335	0					
ANR	427446	ArgumentList	zend_constants		427335	1					
ANR	427447	Argument	zend_constants		427335	0					
ANR	427448	Identifier	zend_constants		427335	0					
ANR	427449	Argument	lookup_name		427335	1					
ANR	427450	Identifier	lookup_name		427335	0					
ANR	427451	Argument	ZSTR_LEN ( name )		427335	2					
ANR	427452	CallExpression	ZSTR_LEN ( name )		427335	0					
ANR	427453	Callee	ZSTR_LEN		427335	0					
ANR	427454	Identifier	ZSTR_LEN		427335	0					
ANR	427455	ArgumentList	name		427335	1					
ANR	427456	Argument	name		427335	0					
ANR	427457	Identifier	name		427335	0					
ANR	427458	Identifier	NULL		427335	1					
ANR	427459	CompoundStatement		12:93:398:398	427335	1					
ANR	427460	IfStatement	if ( ! ( c -> flags & CONST_CT_SUBST ) || ( c -> flags & CONST_CS ) )		427335	0					
ANR	427461	Condition	! ( c -> flags & CONST_CT_SUBST ) || ( c -> flags & CONST_CS )	47:7:2191:2243	427335	0	True				
ANR	427462	OrExpression	! ( c -> flags & CONST_CT_SUBST ) || ( c -> flags & CONST_CS )		427335	0		||			
ANR	427463	UnaryOperationExpression	! ( c -> flags & CONST_CT_SUBST )		427335	0					
ANR	427464	UnaryOperator	!		427335	0					
ANR	427465	BitAndExpression	c -> flags & CONST_CT_SUBST		427335	1		&			
ANR	427466	PtrMemberAccess	c -> flags		427335	0					
ANR	427467	Identifier	c		427335	0					
ANR	427468	Identifier	flags		427335	1					
ANR	427469	Identifier	CONST_CT_SUBST		427335	1					
ANR	427470	BitAndExpression	c -> flags & CONST_CS		427335	1		&			
ANR	427471	PtrMemberAccess	c -> flags		427335	0					
ANR	427472	Identifier	c		427335	0					
ANR	427473	Identifier	flags		427335	1					
ANR	427474	Identifier	CONST_CS		427335	1					
ANR	427475	CompoundStatement		13:62:462:462	427335	1					
ANR	427476	ExpressionStatement	retval = 0	48:4:2252:2262	427335	0	True				
ANR	427477	AssignmentExpression	retval = 0		427335	0		=			
ANR	427478	Identifier	retval		427335	0					
ANR	427479	PrimaryExpression	0		427335	1					
ANR	427480	ElseStatement	else		427335	0					
ANR	427481	CompoundStatement		16:9:494:494	427335	0					
ANR	427482	ExpressionStatement	retval = 0	51:3:2283:2293	427335	0	True				
ANR	427483	AssignmentExpression	retval = 0		427335	0		=			
ANR	427484	Identifier	retval		427335	0					
ANR	427485	PrimaryExpression	0		427335	1					
ANR	427486	ExpressionStatement	FREE_ALLOCA ( lookup_name )	53:2:2301:2325	427335	4	True				
ANR	427487	CallExpression	FREE_ALLOCA ( lookup_name )		427335	0					
ANR	427488	Callee	FREE_ALLOCA		427335	0					
ANR	427489	Identifier	FREE_ALLOCA		427335	0					
ANR	427490	ArgumentList	lookup_name		427335	1					
ANR	427491	Argument	lookup_name		427335	0					
ANR	427492	Identifier	lookup_name		427335	0					
ANR	427493	IfStatement	if ( retval )		427335	5					
ANR	427494	Condition	retval	56:5:2336:2341	427335	0	True				
ANR	427495	Identifier	retval		427335	0					
ANR	427496	CompoundStatement		22:13:560:560	427335	1					
ANR	427497	IfStatement	if ( c -> flags & CONST_PERSISTENT )		427335	0					
ANR	427498	Condition	c -> flags & CONST_PERSISTENT	57:6:2352:2378	427335	0	True				
ANR	427499	BitAndExpression	c -> flags & CONST_PERSISTENT		427335	0		&			
ANR	427500	PtrMemberAccess	c -> flags		427335	0					
ANR	427501	Identifier	c		427335	0					
ANR	427502	Identifier	flags		427335	1					
ANR	427503	Identifier	CONST_PERSISTENT		427335	1					
ANR	427504	CompoundStatement		23:35:597:597	427335	1					
ANR	427505	ExpressionStatement	"ZVAL_COPY_VALUE ( result , & c -> value )"	58:3:2386:2420	427335	0	True				
ANR	427506	CallExpression	"ZVAL_COPY_VALUE ( result , & c -> value )"		427335	0					
ANR	427507	Callee	ZVAL_COPY_VALUE		427335	0					
ANR	427508	Identifier	ZVAL_COPY_VALUE		427335	0					
ANR	427509	ArgumentList	result		427335	1					
ANR	427510	Argument	result		427335	0					
ANR	427511	Identifier	result		427335	0					
ANR	427512	Argument	& c -> value		427335	1					
ANR	427513	UnaryOperationExpression	& c -> value		427335	0					
ANR	427514	UnaryOperator	&		427335	0					
ANR	427515	PtrMemberAccess	c -> value		427335	1					
ANR	427516	Identifier	c		427335	0					
ANR	427517	Identifier	value		427335	1					
ANR	427518	IfStatement	if ( copy )		427335	1					
ANR	427519	Condition	copy	59:7:2429:2432	427335	0	True				
ANR	427520	Identifier	copy		427335	0					
ANR	427521	CompoundStatement		25:13:651:651	427335	1					
ANR	427522	ExpressionStatement	zval_copy_ctor ( result )	60:4:2441:2463	427335	0	True				
ANR	427523	CallExpression	zval_copy_ctor ( result )		427335	0					
ANR	427524	Callee	zval_copy_ctor		427335	0					
ANR	427525	Identifier	zval_copy_ctor		427335	0					
ANR	427526	ArgumentList	result		427335	1					
ANR	427527	Argument	result		427335	0					
ANR	427528	Identifier	result		427335	0					
ANR	427529	ElseStatement	else		427335	0					
ANR	427530	CompoundStatement		28:9:695:695	427335	0					
ANR	427531	ExpressionStatement	retval = 0	63:3:2484:2494	427335	0	True				
ANR	427532	AssignmentExpression	retval = 0		427335	0		=			
ANR	427533	Identifier	retval		427335	0					
ANR	427534	PrimaryExpression	0		427335	1					
ANR	427535	ReturnStatement	return retval ;	67:1:2505:2518	427335	6	True				
ANR	427536	Identifier	retval		427335	0					
ANR	427537	ReturnType	int		427335	1					
ANR	427538	Identifier	zend_optimizer_get_persistent_constant		427335	2					
ANR	427539	ParameterList	"zend_string * name , zval * result , int copy"		427335	3					
ANR	427540	Parameter	zend_string * name	34:43:1740:1756	427335	0	True				
ANR	427541	ParameterType	zend_string *		427335	0					
ANR	427542	Identifier	name		427335	1					
ANR	427543	Parameter	zval * result	34:62:1759:1770	427335	1	True				
ANR	427544	ParameterType	zval *		427335	0					
ANR	427545	Identifier	result		427335	1					
ANR	427546	Parameter	int copy	34:76:1773:1780	427335	2	True				
ANR	427547	ParameterType	int		427335	0					
ANR	427548	Identifier	copy		427335	1					
ANR	427549	CFGEntryNode	ENTRY		427335		True				
ANR	427550	CFGExitNode	EXIT		427335		True				
ANR	427551	Symbol	CONST_CT_SUBST		427335						
ANR	427552	Symbol	EG		427335						
ANR	427553	Symbol	CONST_CS		427335						
ANR	427554	Symbol	c		427335						
ANR	427555	Symbol	NULL		427335						
ANR	427556	Symbol	c -> flags		427335						
ANR	427557	Symbol	* c		427335						
ANR	427558	Symbol	retval		427335						
ANR	427559	Symbol	ZSTR_VAL		427335						
ANR	427560	Symbol	result		427335						
ANR	427561	Symbol	& c -> value		427335						
ANR	427562	Symbol	lookup_name		427335						
ANR	427563	Symbol	zend_constants		427335						
ANR	427564	Symbol	name		427335						
ANR	427565	Symbol	DO_ALLOCA		427335						
ANR	427566	Symbol	ZSTR_LEN		427335						
ANR	427567	Symbol	zend_hash_str_find_ptr		427335						
ANR	427568	Symbol	copy		427335						
ANR	427569	Symbol	CONST_PERSISTENT		427335						
ANR	427570	Symbol	zend_hash_find_ptr		427335						
ANR	427571	Symbol	use_heap		427335						
ANR	427572	Function	print_block	73:0:2605:3497							
ANR	427573	FunctionDef	"print_block (zend_code_block * block , zend_op * opcodes , char * txt)"		427572	0					
ANR	427574	CompoundStatement		74:0:2689:3497	427572	0					
ANR	427575	ExpressionStatement	"fprintf ( stderr , ""%sBlock: %d-%d (%d)"" , txt , block -> start_opline - opcodes , block -> start_opline - opcodes + block -> len - 1 , block -> len )"	75:1:2692:2826	427572	0	True				
ANR	427576	CallExpression	"fprintf ( stderr , ""%sBlock: %d-%d (%d)"" , txt , block -> start_opline - opcodes , block -> start_opline - opcodes + block -> len - 1 , block -> len )"		427572	0					
ANR	427577	Callee	fprintf		427572	0					
ANR	427578	Identifier	fprintf		427572	0					
ANR	427579	ArgumentList	stderr		427572	1					
ANR	427580	Argument	stderr		427572	0					
ANR	427581	Identifier	stderr		427572	0					
ANR	427582	Argument	"""%sBlock: %d-%d (%d)"""		427572	1					
ANR	427583	PrimaryExpression	"""%sBlock: %d-%d (%d)"""		427572	0					
ANR	427584	Argument	txt		427572	2					
ANR	427585	Identifier	txt		427572	0					
ANR	427586	Argument	block -> start_opline - opcodes		427572	3					
ANR	427587	AdditiveExpression	block -> start_opline - opcodes		427572	0		-			
ANR	427588	PtrMemberAccess	block -> start_opline		427572	0					
ANR	427589	Identifier	block		427572	0					
ANR	427590	Identifier	start_opline		427572	1					
ANR	427591	Identifier	opcodes		427572	1					
ANR	427592	Argument	block -> start_opline - opcodes + block -> len - 1		427572	4					
ANR	427593	AdditiveExpression	block -> start_opline - opcodes + block -> len - 1		427572	0		-			
ANR	427594	PtrMemberAccess	block -> start_opline		427572	0					
ANR	427595	Identifier	block		427572	0					
ANR	427596	Identifier	start_opline		427572	1					
ANR	427597	AdditiveExpression	opcodes + block -> len - 1		427572	1		+			
ANR	427598	Identifier	opcodes		427572	0					
ANR	427599	AdditiveExpression	block -> len - 1		427572	1		-			
ANR	427600	PtrMemberAccess	block -> len		427572	0					
ANR	427601	Identifier	block		427572	0					
ANR	427602	Identifier	len		427572	1					
ANR	427603	PrimaryExpression	1		427572	1					
ANR	427604	Argument	block -> len		427572	5					
ANR	427605	PtrMemberAccess	block -> len		427572	0					
ANR	427606	Identifier	block		427572	0					
ANR	427607	Identifier	len		427572	1					
ANR	427608	IfStatement	if ( ! block -> access )		427572	1					
ANR	427609	Condition	! block -> access	76:5:2833:2846	427572	0	True				
ANR	427610	UnaryOperationExpression	! block -> access		427572	0					
ANR	427611	UnaryOperator	!		427572	0					
ANR	427612	PtrMemberAccess	block -> access		427572	1					
ANR	427613	Identifier	block		427572	0					
ANR	427614	Identifier	access		427572	1					
ANR	427615	CompoundStatement		3:21:159:159	427572	1					
ANR	427616	ExpressionStatement	"fprintf ( stderr , "" unused"" )"	77:2:2853:2879	427572	0	True				
ANR	427617	CallExpression	"fprintf ( stderr , "" unused"" )"		427572	0					
ANR	427618	Callee	fprintf		427572	0					
ANR	427619	Identifier	fprintf		427572	0					
ANR	427620	ArgumentList	stderr		427572	1					
ANR	427621	Argument	stderr		427572	0					
ANR	427622	Identifier	stderr		427572	0					
ANR	427623	Argument	""" unused"""		427572	1					
ANR	427624	PrimaryExpression	""" unused"""		427572	0					
ANR	427625	IfStatement	if ( block -> op1_to )		427572	2					
ANR	427626	Condition	block -> op1_to	79:5:2889:2901	427572	0	True				
ANR	427627	PtrMemberAccess	block -> op1_to		427572	0					
ANR	427628	Identifier	block		427572	0					
ANR	427629	Identifier	op1_to		427572	1					
ANR	427630	CompoundStatement		6:20:214:214	427572	1					
ANR	427631	ExpressionStatement	"fprintf ( stderr , "" 1: %d"" , block -> op1_to -> start_opline - opcodes )"	80:2:2908:2972	427572	0	True				
ANR	427632	CallExpression	"fprintf ( stderr , "" 1: %d"" , block -> op1_to -> start_opline - opcodes )"		427572	0					
ANR	427633	Callee	fprintf		427572	0					
ANR	427634	Identifier	fprintf		427572	0					
ANR	427635	ArgumentList	stderr		427572	1					
ANR	427636	Argument	stderr		427572	0					
ANR	427637	Identifier	stderr		427572	0					
ANR	427638	Argument	""" 1: %d"""		427572	1					
ANR	427639	PrimaryExpression	""" 1: %d"""		427572	0					
ANR	427640	Argument	block -> op1_to -> start_opline - opcodes		427572	2					
ANR	427641	AdditiveExpression	block -> op1_to -> start_opline - opcodes		427572	0		-			
ANR	427642	PtrMemberAccess	block -> op1_to -> start_opline		427572	0					
ANR	427643	PtrMemberAccess	block -> op1_to		427572	0					
ANR	427644	Identifier	block		427572	0					
ANR	427645	Identifier	op1_to		427572	1					
ANR	427646	Identifier	start_opline		427572	1					
ANR	427647	Identifier	opcodes		427572	1					
ANR	427648	IfStatement	if ( block -> op2_to )		427572	3					
ANR	427649	Condition	block -> op2_to	82:5:2982:2994	427572	0	True				
ANR	427650	PtrMemberAccess	block -> op2_to		427572	0					
ANR	427651	Identifier	block		427572	0					
ANR	427652	Identifier	op2_to		427572	1					
ANR	427653	CompoundStatement		9:20:307:307	427572	1					
ANR	427654	ExpressionStatement	"fprintf ( stderr , "" 2: %d"" , block -> op2_to -> start_opline - opcodes )"	83:2:3001:3065	427572	0	True				
ANR	427655	CallExpression	"fprintf ( stderr , "" 2: %d"" , block -> op2_to -> start_opline - opcodes )"		427572	0					
ANR	427656	Callee	fprintf		427572	0					
ANR	427657	Identifier	fprintf		427572	0					
ANR	427658	ArgumentList	stderr		427572	1					
ANR	427659	Argument	stderr		427572	0					
ANR	427660	Identifier	stderr		427572	0					
ANR	427661	Argument	""" 2: %d"""		427572	1					
ANR	427662	PrimaryExpression	""" 2: %d"""		427572	0					
ANR	427663	Argument	block -> op2_to -> start_opline - opcodes		427572	2					
ANR	427664	AdditiveExpression	block -> op2_to -> start_opline - opcodes		427572	0		-			
ANR	427665	PtrMemberAccess	block -> op2_to -> start_opline		427572	0					
ANR	427666	PtrMemberAccess	block -> op2_to		427572	0					
ANR	427667	Identifier	block		427572	0					
ANR	427668	Identifier	op2_to		427572	1					
ANR	427669	Identifier	start_opline		427572	1					
ANR	427670	Identifier	opcodes		427572	1					
ANR	427671	IfStatement	if ( block -> ext_to )		427572	4					
ANR	427672	Condition	block -> ext_to	85:5:3075:3087	427572	0	True				
ANR	427673	PtrMemberAccess	block -> ext_to		427572	0					
ANR	427674	Identifier	block		427572	0					
ANR	427675	Identifier	ext_to		427572	1					
ANR	427676	CompoundStatement		12:20:400:400	427572	1					
ANR	427677	ExpressionStatement	"fprintf ( stderr , "" e: %d"" , block -> ext_to -> start_opline - opcodes )"	86:2:3094:3158	427572	0	True				
ANR	427678	CallExpression	"fprintf ( stderr , "" e: %d"" , block -> ext_to -> start_opline - opcodes )"		427572	0					
ANR	427679	Callee	fprintf		427572	0					
ANR	427680	Identifier	fprintf		427572	0					
ANR	427681	ArgumentList	stderr		427572	1					
ANR	427682	Argument	stderr		427572	0					
ANR	427683	Identifier	stderr		427572	0					
ANR	427684	Argument	""" e: %d"""		427572	1					
ANR	427685	PrimaryExpression	""" e: %d"""		427572	0					
ANR	427686	Argument	block -> ext_to -> start_opline - opcodes		427572	2					
ANR	427687	AdditiveExpression	block -> ext_to -> start_opline - opcodes		427572	0		-			
ANR	427688	PtrMemberAccess	block -> ext_to -> start_opline		427572	0					
ANR	427689	PtrMemberAccess	block -> ext_to		427572	0					
ANR	427690	Identifier	block		427572	0					
ANR	427691	Identifier	ext_to		427572	1					
ANR	427692	Identifier	start_opline		427572	1					
ANR	427693	Identifier	opcodes		427572	1					
ANR	427694	IfStatement	if ( block -> follow_to )		427572	5					
ANR	427695	Condition	block -> follow_to	88:5:3168:3183	427572	0	True				
ANR	427696	PtrMemberAccess	block -> follow_to		427572	0					
ANR	427697	Identifier	block		427572	0					
ANR	427698	Identifier	follow_to		427572	1					
ANR	427699	CompoundStatement		15:23:496:496	427572	1					
ANR	427700	ExpressionStatement	"fprintf ( stderr , "" f: %d"" , block -> follow_to -> start_opline - opcodes )"	89:2:3190:3257	427572	0	True				
ANR	427701	CallExpression	"fprintf ( stderr , "" f: %d"" , block -> follow_to -> start_opline - opcodes )"		427572	0					
ANR	427702	Callee	fprintf		427572	0					
ANR	427703	Identifier	fprintf		427572	0					
ANR	427704	ArgumentList	stderr		427572	1					
ANR	427705	Argument	stderr		427572	0					
ANR	427706	Identifier	stderr		427572	0					
ANR	427707	Argument	""" f: %d"""		427572	1					
ANR	427708	PrimaryExpression	""" f: %d"""		427572	0					
ANR	427709	Argument	block -> follow_to -> start_opline - opcodes		427572	2					
ANR	427710	AdditiveExpression	block -> follow_to -> start_opline - opcodes		427572	0		-			
ANR	427711	PtrMemberAccess	block -> follow_to -> start_opline		427572	0					
ANR	427712	PtrMemberAccess	block -> follow_to		427572	0					
ANR	427713	Identifier	block		427572	0					
ANR	427714	Identifier	follow_to		427572	1					
ANR	427715	Identifier	start_opline		427572	1					
ANR	427716	Identifier	opcodes		427572	1					
ANR	427717	IfStatement	if ( block -> sources )		427572	6					
ANR	427718	Condition	block -> sources	92:5:3268:3281	427572	0	True				
ANR	427719	PtrMemberAccess	block -> sources		427572	0					
ANR	427720	Identifier	block		427572	0					
ANR	427721	Identifier	sources		427572	1					
ANR	427722	CompoundStatement		20:2:598:636	427572	1					
ANR	427723	IdentifierDeclStatement	zend_block_source * bs = block -> sources ;	93:2:3288:3326	427572	0	True				
ANR	427724	IdentifierDecl	* bs = block -> sources		427572	0					
ANR	427725	IdentifierDeclType	zend_block_source *		427572	0					
ANR	427726	Identifier	bs		427572	1					
ANR	427727	AssignmentExpression	* bs = block -> sources		427572	2		=			
ANR	427728	Identifier	bs		427572	0					
ANR	427729	PtrMemberAccess	block -> sources		427572	1					
ANR	427730	Identifier	block		427572	0					
ANR	427731	Identifier	sources		427572	1					
ANR	427732	ExpressionStatement	"fprintf ( stderr , "" s:"" )"	94:2:3330:3352	427572	1	True				
ANR	427733	CallExpression	"fprintf ( stderr , "" s:"" )"		427572	0					
ANR	427734	Callee	fprintf		427572	0					
ANR	427735	Identifier	fprintf		427572	0					
ANR	427736	ArgumentList	stderr		427572	1					
ANR	427737	Argument	stderr		427572	0					
ANR	427738	Identifier	stderr		427572	0					
ANR	427739	Argument	""" s:"""		427572	1					
ANR	427740	PrimaryExpression	""" s:"""		427572	0					
ANR	427741	WhileStatement	while ( bs )		427572	2					
ANR	427742	Condition	bs	95:9:3363:3364	427572	0	True				
ANR	427743	Identifier	bs		427572	0					
ANR	427744	CompoundStatement		22:13:677:677	427572	1					
ANR	427745	ExpressionStatement	"fprintf ( stderr , "" %d"" , bs -> from -> start_opline - opcodes )"	96:3:3372:3428	427572	0	True				
ANR	427746	CallExpression	"fprintf ( stderr , "" %d"" , bs -> from -> start_opline - opcodes )"		427572	0					
ANR	427747	Callee	fprintf		427572	0					
ANR	427748	Identifier	fprintf		427572	0					
ANR	427749	ArgumentList	stderr		427572	1					
ANR	427750	Argument	stderr		427572	0					
ANR	427751	Identifier	stderr		427572	0					
ANR	427752	Argument	""" %d"""		427572	1					
ANR	427753	PrimaryExpression	""" %d"""		427572	0					
ANR	427754	Argument	bs -> from -> start_opline - opcodes		427572	2					
ANR	427755	AdditiveExpression	bs -> from -> start_opline - opcodes		427572	0		-			
ANR	427756	PtrMemberAccess	bs -> from -> start_opline		427572	0					
ANR	427757	PtrMemberAccess	bs -> from		427572	0					
ANR	427758	Identifier	bs		427572	0					
ANR	427759	Identifier	from		427572	1					
ANR	427760	Identifier	start_opline		427572	1					
ANR	427761	Identifier	opcodes		427572	1					
ANR	427762	ExpressionStatement	bs = bs -> next	97:3:3433:3446	427572	1	True				
ANR	427763	AssignmentExpression	bs = bs -> next		427572	0		=			
ANR	427764	Identifier	bs		427572	0					
ANR	427765	PtrMemberAccess	bs -> next		427572	1					
ANR	427766	Identifier	bs		427572	0					
ANR	427767	Identifier	next		427572	1					
ANR	427768	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	101:1:3457:3478	427572	7	True				
ANR	427769	CallExpression	"fprintf ( stderr , ""\\n"" )"		427572	0					
ANR	427770	Callee	fprintf		427572	0					
ANR	427771	Identifier	fprintf		427572	0					
ANR	427772	ArgumentList	stderr		427572	1					
ANR	427773	Argument	stderr		427572	0					
ANR	427774	Identifier	stderr		427572	0					
ANR	427775	Argument	"""\\n"""		427572	1					
ANR	427776	PrimaryExpression	"""\\n"""		427572	0					
ANR	427777	ExpressionStatement	fflush ( stderr )	102:1:3481:3495	427572	8	True				
ANR	427778	CallExpression	fflush ( stderr )		427572	0					
ANR	427779	Callee	fflush		427572	0					
ANR	427780	Identifier	fflush		427572	0					
ANR	427781	ArgumentList	stderr		427572	1					
ANR	427782	Argument	stderr		427572	0					
ANR	427783	Identifier	stderr		427572	0					
ANR	427784	ReturnType	static inline void		427572	1					
ANR	427785	Identifier	print_block		427572	2					
ANR	427786	ParameterList	"zend_code_block * block , zend_op * opcodes , char * txt"		427572	3					
ANR	427787	Parameter	zend_code_block * block	73:31:2636:2657	427572	0	True				
ANR	427788	ParameterType	zend_code_block *		427572	0					
ANR	427789	Identifier	block		427572	1					
ANR	427790	Parameter	zend_op * opcodes	73:55:2660:2675	427572	1	True				
ANR	427791	ParameterType	zend_op *		427572	0					
ANR	427792	Identifier	opcodes		427572	1					
ANR	427793	Parameter	char * txt	73:73:2678:2686	427572	2	True				
ANR	427794	ParameterType	char *		427572	0					
ANR	427795	Identifier	txt		427572	1					
ANR	427796	CFGEntryNode	ENTRY		427572		True				
ANR	427797	CFGExitNode	EXIT		427572		True				
ANR	427798	Symbol	* block -> op1_to		427572						
ANR	427799	Symbol	block -> ext_to		427572						
ANR	427800	Symbol	block -> sources		427572						
ANR	427801	Symbol	bs -> next		427572						
ANR	427802	Symbol	bs		427572						
ANR	427803	Symbol	bs -> from		427572						
ANR	427804	Symbol	* bs		427572						
ANR	427805	Symbol	* bs -> from		427572						
ANR	427806	Symbol	block		427572						
ANR	427807	Symbol	block -> op2_to		427572						
ANR	427808	Symbol	block -> ext_to -> start_opline		427572						
ANR	427809	Symbol	stderr		427572						
ANR	427810	Symbol	* block -> ext_to		427572						
ANR	427811	Symbol	block -> follow_to		427572						
ANR	427812	Symbol	block -> len		427572						
ANR	427813	Symbol	block -> op2_to -> start_opline		427572						
ANR	427814	Symbol	block -> op1_to -> start_opline		427572						
ANR	427815	Symbol	* block		427572						
ANR	427816	Symbol	block -> start_opline		427572						
ANR	427817	Symbol	txt		427572						
ANR	427818	Symbol	block -> follow_to -> start_opline		427572						
ANR	427819	Symbol	bs -> from -> start_opline		427572						
ANR	427820	Symbol	block -> access		427572						
ANR	427821	Symbol	* block -> follow_to		427572						
ANR	427822	Symbol	* * block		427572						
ANR	427823	Symbol	* block -> op2_to		427572						
ANR	427824	Symbol	opcodes		427572						
ANR	427825	Symbol	block -> op1_to		427572						
ANR	427826	Symbol	* * bs		427572						
ANR	427827	Function	find_code_blocks	113:0:3820:11702							
ANR	427828	FunctionDef	"find_code_blocks (zend_op_array * op_array , zend_cfg * cfg , zend_optimizer_ctx * ctx)"		427827	0					
ANR	427829	CompoundStatement		114:0:3913:11702	427827	0					
ANR	427830	IdentifierDeclStatement	zend_op * opline ;	115:1:3916:3931	427827	0	True				
ANR	427831	IdentifierDecl	* opline		427827	0					
ANR	427832	IdentifierDeclType	zend_op *		427827	0					
ANR	427833	Identifier	opline		427827	1					
ANR	427834	IdentifierDeclStatement	zend_op * end = op_array -> opcodes + op_array -> last ;	116:1:3934:3983	427827	1	True				
ANR	427835	IdentifierDecl	* end = op_array -> opcodes + op_array -> last		427827	0					
ANR	427836	IdentifierDeclType	zend_op *		427827	0					
ANR	427837	Identifier	end		427827	1					
ANR	427838	AssignmentExpression	* end = op_array -> opcodes + op_array -> last		427827	2		=			
ANR	427839	Identifier	end		427827	0					
ANR	427840	AdditiveExpression	op_array -> opcodes + op_array -> last		427827	1		+			
ANR	427841	PtrMemberAccess	op_array -> opcodes		427827	0					
ANR	427842	Identifier	op_array		427827	0					
ANR	427843	Identifier	opcodes		427827	1					
ANR	427844	PtrMemberAccess	op_array -> last		427827	1					
ANR	427845	Identifier	op_array		427827	0					
ANR	427846	Identifier	last		427827	1					
ANR	427847	IdentifierDeclStatement	"zend_code_block * blocks , * cur_block ;"	117:1:3986:4021	427827	2	True				
ANR	427848	IdentifierDecl	* blocks		427827	0					
ANR	427849	IdentifierDeclType	zend_code_block *		427827	0					
ANR	427850	Identifier	blocks		427827	1					
ANR	427851	IdentifierDecl	* cur_block		427827	1					
ANR	427852	IdentifierDeclType	zend_code_block *		427827	0					
ANR	427853	Identifier	cur_block		427827	1					
ANR	427854	IdentifierDeclStatement	uint32_t opno = 0 ;	118:1:4024:4041	427827	3	True				
ANR	427855	IdentifierDecl	opno = 0		427827	0					
ANR	427856	IdentifierDeclType	uint32_t		427827	0					
ANR	427857	Identifier	opno		427827	1					
ANR	427858	AssignmentExpression	opno = 0		427827	2		=			
ANR	427859	Identifier	opno		427827	0					
ANR	427860	PrimaryExpression	0		427827	1					
ANR	427861	ExpressionStatement	"memset ( cfg , 0 , sizeof ( zend_cfg ) )"	120:1:4045:4077	427827	4	True				
ANR	427862	CallExpression	"memset ( cfg , 0 , sizeof ( zend_cfg ) )"		427827	0					
ANR	427863	Callee	memset		427827	0					
ANR	427864	Identifier	memset		427827	0					
ANR	427865	ArgumentList	cfg		427827	1					
ANR	427866	Argument	cfg		427827	0					
ANR	427867	Identifier	cfg		427827	0					
ANR	427868	Argument	0		427827	1					
ANR	427869	PrimaryExpression	0		427827	0					
ANR	427870	Argument	sizeof ( zend_cfg )		427827	2					
ANR	427871	SizeofExpression	sizeof ( zend_cfg )		427827	0					
ANR	427872	Sizeof	sizeof		427827	0					
ANR	427873	SizeofOperand	zend_cfg		427827	1					
ANR	427874	ExpressionStatement	"blocks = cfg -> blocks = zend_arena_calloc ( & ctx -> arena , op_array -> last + 2 , sizeof ( zend_code_block ) )"	121:1:4080:4178	427827	5	True				
ANR	427875	AssignmentExpression	"blocks = cfg -> blocks = zend_arena_calloc ( & ctx -> arena , op_array -> last + 2 , sizeof ( zend_code_block ) )"		427827	0		=			
ANR	427876	Identifier	blocks		427827	0					
ANR	427877	AssignmentExpression	"cfg -> blocks = zend_arena_calloc ( & ctx -> arena , op_array -> last + 2 , sizeof ( zend_code_block ) )"		427827	1		=			
ANR	427878	PtrMemberAccess	cfg -> blocks		427827	0					
ANR	427879	Identifier	cfg		427827	0					
ANR	427880	Identifier	blocks		427827	1					
ANR	427881	CallExpression	"zend_arena_calloc ( & ctx -> arena , op_array -> last + 2 , sizeof ( zend_code_block ) )"		427827	1					
ANR	427882	Callee	zend_arena_calloc		427827	0					
ANR	427883	Identifier	zend_arena_calloc		427827	0					
ANR	427884	ArgumentList	& ctx -> arena		427827	1					
ANR	427885	Argument	& ctx -> arena		427827	0					
ANR	427886	UnaryOperationExpression	& ctx -> arena		427827	0					
ANR	427887	UnaryOperator	&		427827	0					
ANR	427888	PtrMemberAccess	ctx -> arena		427827	1					
ANR	427889	Identifier	ctx		427827	0					
ANR	427890	Identifier	arena		427827	1					
ANR	427891	Argument	op_array -> last + 2		427827	1					
ANR	427892	AdditiveExpression	op_array -> last + 2		427827	0		+			
ANR	427893	PtrMemberAccess	op_array -> last		427827	0					
ANR	427894	Identifier	op_array		427827	0					
ANR	427895	Identifier	last		427827	1					
ANR	427896	PrimaryExpression	2		427827	1					
ANR	427897	Argument	sizeof ( zend_code_block )		427827	2					
ANR	427898	SizeofExpression	sizeof ( zend_code_block )		427827	0					
ANR	427899	Sizeof	sizeof		427827	0					
ANR	427900	SizeofOperand	zend_code_block		427827	1					
ANR	427901	ExpressionStatement	opline = op_array -> opcodes	122:1:4181:4207	427827	6	True				
ANR	427902	AssignmentExpression	opline = op_array -> opcodes		427827	0		=			
ANR	427903	Identifier	opline		427827	0					
ANR	427904	PtrMemberAccess	op_array -> opcodes		427827	1					
ANR	427905	Identifier	op_array		427827	0					
ANR	427906	Identifier	opcodes		427827	1					
ANR	427907	ExpressionStatement	blocks [ 0 ] . start_opline = opline	123:1:4210:4241	427827	7	True				
ANR	427908	AssignmentExpression	blocks [ 0 ] . start_opline = opline		427827	0		=			
ANR	427909	MemberAccess	blocks [ 0 ] . start_opline		427827	0					
ANR	427910	ArrayIndexing	blocks [ 0 ]		427827	0					
ANR	427911	Identifier	blocks		427827	0					
ANR	427912	PrimaryExpression	0		427827	1					
ANR	427913	Identifier	start_opline		427827	1					
ANR	427914	Identifier	opline		427827	1					
ANR	427915	ExpressionStatement	blocks [ 0 ] . start_opline_no = 0	124:1:4244:4273	427827	8	True				
ANR	427916	AssignmentExpression	blocks [ 0 ] . start_opline_no = 0		427827	0		=			
ANR	427917	MemberAccess	blocks [ 0 ] . start_opline_no		427827	0					
ANR	427918	ArrayIndexing	blocks [ 0 ]		427827	0					
ANR	427919	Identifier	blocks		427827	0					
ANR	427920	PrimaryExpression	0		427827	1					
ANR	427921	Identifier	start_opline_no		427827	1					
ANR	427922	PrimaryExpression	0		427827	1					
ANR	427923	WhileStatement	while ( opline < end )		427827	9					
ANR	427924	Condition	opline < end	125:8:4283:4294	427827	0	True				
ANR	427925	RelationalExpression	opline < end		427827	0		<			
ANR	427926	Identifier	opline		427827	0					
ANR	427927	Identifier	end		427827	1					
ANR	427928	CompoundStatement		12:22:383:383	427827	1					
ANR	427929	SwitchStatement	switch ( ( unsigned ) opline -> opcode )		427827	0					
ANR	427930	Condition	( unsigned ) opline -> opcode	126:9:4308:4331	427827	0	True				
ANR	427931	CastExpression	( unsigned ) opline -> opcode		427827	0					
ANR	427932	CastTarget	unsigned		427827	0					
ANR	427933	PtrMemberAccess	opline -> opcode		427827	1					
ANR	427934	Identifier	opline		427827	0					
ANR	427935	Identifier	opcode		427827	1					
ANR	427936	CompoundStatement		13:35:420:420	427827	1					
ANR	427937	Label	case ZEND_FAST_CALL :	127:3:4339:4358	427827	0	True				
ANR	427938	Identifier	ZEND_FAST_CALL		427827	0					
ANR	427939	ExpressionStatement	START_BLOCK_OP ( ZEND_OP1 ( opline ) . opline_num )	128:4:4364:4407	427827	1	True				
ANR	427940	CallExpression	START_BLOCK_OP ( ZEND_OP1 ( opline ) . opline_num )		427827	0					
ANR	427941	Callee	START_BLOCK_OP		427827	0					
ANR	427942	Identifier	START_BLOCK_OP		427827	0					
ANR	427943	ArgumentList	ZEND_OP1 ( opline ) . opline_num		427827	1					
ANR	427944	Argument	ZEND_OP1 ( opline ) . opline_num		427827	0					
ANR	427945	MemberAccess	ZEND_OP1 ( opline ) . opline_num		427827	0					
ANR	427946	CallExpression	ZEND_OP1 ( opline )		427827	0					
ANR	427947	Callee	ZEND_OP1		427827	0					
ANR	427948	Identifier	ZEND_OP1		427827	0					
ANR	427949	ArgumentList	opline		427827	1					
ANR	427950	Argument	opline		427827	0					
ANR	427951	Identifier	opline		427827	0					
ANR	427952	Identifier	opline_num		427827	1					
ANR	427953	IfStatement	if ( opline -> extended_value )		427827	2					
ANR	427954	Condition	opline -> extended_value	129:8:4417:4438	427827	0	True				
ANR	427955	PtrMemberAccess	opline -> extended_value		427827	0					
ANR	427956	Identifier	opline		427827	0					
ANR	427957	Identifier	extended_value		427827	1					
ANR	427958	CompoundStatement		16:32:527:527	427827	1					
ANR	427959	ExpressionStatement	START_BLOCK_OP ( ZEND_OP2 ( opline ) . opline_num )	130:5:4448:4491	427827	0	True				
ANR	427960	CallExpression	START_BLOCK_OP ( ZEND_OP2 ( opline ) . opline_num )		427827	0					
ANR	427961	Callee	START_BLOCK_OP		427827	0					
ANR	427962	Identifier	START_BLOCK_OP		427827	0					
ANR	427963	ArgumentList	ZEND_OP2 ( opline ) . opline_num		427827	1					
ANR	427964	Argument	ZEND_OP2 ( opline ) . opline_num		427827	0					
ANR	427965	MemberAccess	ZEND_OP2 ( opline ) . opline_num		427827	0					
ANR	427966	CallExpression	ZEND_OP2 ( opline )		427827	0					
ANR	427967	Callee	ZEND_OP2		427827	0					
ANR	427968	Identifier	ZEND_OP2		427827	0					
ANR	427969	ArgumentList	opline		427827	1					
ANR	427970	Argument	opline		427827	0					
ANR	427971	Identifier	opline		427827	0					
ANR	427972	Identifier	opline_num		427827	1					
ANR	427973	ExpressionStatement	START_BLOCK_OP ( opno + 1 )	132:4:4503:4527	427827	3	True				
ANR	427974	CallExpression	START_BLOCK_OP ( opno + 1 )		427827	0					
ANR	427975	Callee	START_BLOCK_OP		427827	0					
ANR	427976	Identifier	START_BLOCK_OP		427827	0					
ANR	427977	ArgumentList	opno + 1		427827	1					
ANR	427978	Argument	opno + 1		427827	0					
ANR	427979	AdditiveExpression	opno + 1		427827	0		+			
ANR	427980	Identifier	opno		427827	0					
ANR	427981	PrimaryExpression	1		427827	1					
ANR	427982	BreakStatement	break ;	133:4:4533:4538	427827	4	True				
ANR	427983	Label	case ZEND_FAST_RET :	134:3:4543:4561	427827	5	True				
ANR	427984	Identifier	ZEND_FAST_RET		427827	0					
ANR	427985	IfStatement	if ( opline -> extended_value )		427827	6					
ANR	427986	Condition	opline -> extended_value	135:8:4571:4592	427827	0	True				
ANR	427987	PtrMemberAccess	opline -> extended_value		427827	0					
ANR	427988	Identifier	opline		427827	0					
ANR	427989	Identifier	extended_value		427827	1					
ANR	427990	CompoundStatement		22:32:681:681	427827	1					
ANR	427991	ExpressionStatement	START_BLOCK_OP ( ZEND_OP2 ( opline ) . opline_num )	136:5:4602:4645	427827	0	True				
ANR	427992	CallExpression	START_BLOCK_OP ( ZEND_OP2 ( opline ) . opline_num )		427827	0					
ANR	427993	Callee	START_BLOCK_OP		427827	0					
ANR	427994	Identifier	START_BLOCK_OP		427827	0					
ANR	427995	ArgumentList	ZEND_OP2 ( opline ) . opline_num		427827	1					
ANR	427996	Argument	ZEND_OP2 ( opline ) . opline_num		427827	0					
ANR	427997	MemberAccess	ZEND_OP2 ( opline ) . opline_num		427827	0					
ANR	427998	CallExpression	ZEND_OP2 ( opline )		427827	0					
ANR	427999	Callee	ZEND_OP2		427827	0					
ANR	428000	Identifier	ZEND_OP2		427827	0					
ANR	428001	ArgumentList	opline		427827	1					
ANR	428002	Argument	opline		427827	0					
ANR	428003	Identifier	opline		427827	0					
ANR	428004	Identifier	opline_num		427827	1					
ANR	428005	ExpressionStatement	START_BLOCK_OP ( opno + 1 )	138:4:4657:4681	427827	7	True				
ANR	428006	CallExpression	START_BLOCK_OP ( opno + 1 )		427827	0					
ANR	428007	Callee	START_BLOCK_OP		427827	0					
ANR	428008	Identifier	START_BLOCK_OP		427827	0					
ANR	428009	ArgumentList	opno + 1		427827	1					
ANR	428010	Argument	opno + 1		427827	0					
ANR	428011	AdditiveExpression	opno + 1		427827	0		+			
ANR	428012	Identifier	opno		427827	0					
ANR	428013	PrimaryExpression	1		427827	1					
ANR	428014	BreakStatement	break ;	139:4:4687:4692	427827	8	True				
ANR	428015	Label	case ZEND_JMP :	140:3:4697:4710	427827	9	True				
ANR	428016	Identifier	ZEND_JMP		427827	0					
ANR	428017	Label	case ZEND_DECLARE_ANON_CLASS :	141:3:4715:4743	427827	10	True				
ANR	428018	Identifier	ZEND_DECLARE_ANON_CLASS		427827	0					
ANR	428019	Label	case ZEND_DECLARE_ANON_INHERITED_CLASS :	142:3:4748:4786	427827	11	True				
ANR	428020	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS		427827	0					
ANR	428021	ExpressionStatement	START_BLOCK_OP ( ZEND_OP1 ( opline ) . opline_num )	143:4:4792:4835	427827	12	True				
ANR	428022	CallExpression	START_BLOCK_OP ( ZEND_OP1 ( opline ) . opline_num )		427827	0					
ANR	428023	Callee	START_BLOCK_OP		427827	0					
ANR	428024	Identifier	START_BLOCK_OP		427827	0					
ANR	428025	ArgumentList	ZEND_OP1 ( opline ) . opline_num		427827	1					
ANR	428026	Argument	ZEND_OP1 ( opline ) . opline_num		427827	0					
ANR	428027	MemberAccess	ZEND_OP1 ( opline ) . opline_num		427827	0					
ANR	428028	CallExpression	ZEND_OP1 ( opline )		427827	0					
ANR	428029	Callee	ZEND_OP1		427827	0					
ANR	428030	Identifier	ZEND_OP1		427827	0					
ANR	428031	ArgumentList	opline		427827	1					
ANR	428032	Argument	opline		427827	0					
ANR	428033	Identifier	opline		427827	0					
ANR	428034	Identifier	opline_num		427827	1					
ANR	428035	Label	case ZEND_RETURN :	145:3:4878:4894	427827	13	True				
ANR	428036	Identifier	ZEND_RETURN		427827	0					
ANR	428037	Label	case ZEND_RETURN_BY_REF :	146:3:4899:4922	427827	14	True				
ANR	428038	Identifier	ZEND_RETURN_BY_REF		427827	0					
ANR	428039	Label	case ZEND_GENERATOR_RETURN :	147:3:4927:4953	427827	15	True				
ANR	428040	Identifier	ZEND_GENERATOR_RETURN		427827	0					
ANR	428041	Label	case ZEND_EXIT :	148:3:4958:4972	427827	16	True				
ANR	428042	Identifier	ZEND_EXIT		427827	0					
ANR	428043	Label	case ZEND_THROW :	149:3:4977:4992	427827	17	True				
ANR	428044	Identifier	ZEND_THROW		427827	0					
ANR	428045	ExpressionStatement	START_BLOCK_OP ( opno + 1 )	151:4:5036:5060	427827	18	True				
ANR	428046	CallExpression	START_BLOCK_OP ( opno + 1 )		427827	0					
ANR	428047	Callee	START_BLOCK_OP		427827	0					
ANR	428048	Identifier	START_BLOCK_OP		427827	0					
ANR	428049	ArgumentList	opno + 1		427827	1					
ANR	428050	Argument	opno + 1		427827	0					
ANR	428051	AdditiveExpression	opno + 1		427827	0		+			
ANR	428052	Identifier	opno		427827	0					
ANR	428053	PrimaryExpression	1		427827	1					
ANR	428054	BreakStatement	break ;	152:4:5066:5071	427827	19	True				
ANR	428055	Label	case ZEND_CATCH :	155:3:5180:5195	427827	20	True				
ANR	428056	Identifier	ZEND_CATCH		427827	0					
ANR	428057	ExpressionStatement	START_BLOCK_OP ( opline -> extended_value )	156:4:5201:5239	427827	21	True				
ANR	428058	CallExpression	START_BLOCK_OP ( opline -> extended_value )		427827	0					
ANR	428059	Callee	START_BLOCK_OP		427827	0					
ANR	428060	Identifier	START_BLOCK_OP		427827	0					
ANR	428061	ArgumentList	opline -> extended_value		427827	1					
ANR	428062	Argument	opline -> extended_value		427827	0					
ANR	428063	PtrMemberAccess	opline -> extended_value		427827	0					
ANR	428064	Identifier	opline		427827	0					
ANR	428065	Identifier	extended_value		427827	1					
ANR	428066	ExpressionStatement	START_BLOCK_OP ( opno + 1 )	157:4:5245:5269	427827	22	True				
ANR	428067	CallExpression	START_BLOCK_OP ( opno + 1 )		427827	0					
ANR	428068	Callee	START_BLOCK_OP		427827	0					
ANR	428069	Identifier	START_BLOCK_OP		427827	0					
ANR	428070	ArgumentList	opno + 1		427827	1					
ANR	428071	Argument	opno + 1		427827	0					
ANR	428072	AdditiveExpression	opno + 1		427827	0		+			
ANR	428073	Identifier	opno		427827	0					
ANR	428074	PrimaryExpression	1		427827	1					
ANR	428075	BreakStatement	break ;	158:4:5275:5280	427827	23	True				
ANR	428076	Label	case ZEND_JMPZNZ :	159:3:5285:5301	427827	24	True				
ANR	428077	Identifier	ZEND_JMPZNZ		427827	0					
ANR	428078	ExpressionStatement	START_BLOCK_OP ( opline -> extended_value )	160:4:5307:5345	427827	25	True				
ANR	428079	CallExpression	START_BLOCK_OP ( opline -> extended_value )		427827	0					
ANR	428080	Callee	START_BLOCK_OP		427827	0					
ANR	428081	Identifier	START_BLOCK_OP		427827	0					
ANR	428082	ArgumentList	opline -> extended_value		427827	1					
ANR	428083	Argument	opline -> extended_value		427827	0					
ANR	428084	PtrMemberAccess	opline -> extended_value		427827	0					
ANR	428085	Identifier	opline		427827	0					
ANR	428086	Identifier	extended_value		427827	1					
ANR	428087	Label	case ZEND_JMPZ :	161:3:5350:5364	427827	26	True				
ANR	428088	Identifier	ZEND_JMPZ		427827	0					
ANR	428089	Label	case ZEND_JMPNZ :	162:3:5369:5384	427827	27	True				
ANR	428090	Identifier	ZEND_JMPNZ		427827	0					
ANR	428091	Label	case ZEND_JMPZ_EX :	163:3:5389:5406	427827	28	True				
ANR	428092	Identifier	ZEND_JMPZ_EX		427827	0					
ANR	428093	Label	case ZEND_JMPNZ_EX :	164:3:5411:5429	427827	29	True				
ANR	428094	Identifier	ZEND_JMPNZ_EX		427827	0					
ANR	428095	Label	case ZEND_FE_RESET_R :	165:3:5434:5454	427827	30	True				
ANR	428096	Identifier	ZEND_FE_RESET_R		427827	0					
ANR	428097	Label	case ZEND_FE_RESET_RW :	166:3:5459:5480	427827	31	True				
ANR	428098	Identifier	ZEND_FE_RESET_RW		427827	0					
ANR	428099	Label	case ZEND_NEW :	167:3:5485:5498	427827	32	True				
ANR	428100	Identifier	ZEND_NEW		427827	0					
ANR	428101	Label	case ZEND_JMP_SET :	168:3:5503:5520	427827	33	True				
ANR	428102	Identifier	ZEND_JMP_SET		427827	0					
ANR	428103	Label	case ZEND_COALESCE :	169:3:5525:5543	427827	34	True				
ANR	428104	Identifier	ZEND_COALESCE		427827	0					
ANR	428105	Label	case ZEND_ASSERT_CHECK :	170:3:5548:5570	427827	35	True				
ANR	428106	Identifier	ZEND_ASSERT_CHECK		427827	0					
ANR	428107	ExpressionStatement	START_BLOCK_OP ( ZEND_OP2 ( opline ) . opline_num )	171:4:5576:5619	427827	36	True				
ANR	428108	CallExpression	START_BLOCK_OP ( ZEND_OP2 ( opline ) . opline_num )		427827	0					
ANR	428109	Callee	START_BLOCK_OP		427827	0					
ANR	428110	Identifier	START_BLOCK_OP		427827	0					
ANR	428111	ArgumentList	ZEND_OP2 ( opline ) . opline_num		427827	1					
ANR	428112	Argument	ZEND_OP2 ( opline ) . opline_num		427827	0					
ANR	428113	MemberAccess	ZEND_OP2 ( opline ) . opline_num		427827	0					
ANR	428114	CallExpression	ZEND_OP2 ( opline )		427827	0					
ANR	428115	Callee	ZEND_OP2		427827	0					
ANR	428116	Identifier	ZEND_OP2		427827	0					
ANR	428117	ArgumentList	opline		427827	1					
ANR	428118	Argument	opline		427827	0					
ANR	428119	Identifier	opline		427827	0					
ANR	428120	Identifier	opline_num		427827	1					
ANR	428121	ExpressionStatement	START_BLOCK_OP ( opno + 1 )	172:4:5625:5649	427827	37	True				
ANR	428122	CallExpression	START_BLOCK_OP ( opno + 1 )		427827	0					
ANR	428123	Callee	START_BLOCK_OP		427827	0					
ANR	428124	Identifier	START_BLOCK_OP		427827	0					
ANR	428125	ArgumentList	opno + 1		427827	1					
ANR	428126	Argument	opno + 1		427827	0					
ANR	428127	AdditiveExpression	opno + 1		427827	0		+			
ANR	428128	Identifier	opno		427827	0					
ANR	428129	PrimaryExpression	1		427827	1					
ANR	428130	BreakStatement	break ;	173:4:5655:5660	427827	38	True				
ANR	428131	Label	case ZEND_FE_FETCH_R :	174:3:5665:5685	427827	39	True				
ANR	428132	Identifier	ZEND_FE_FETCH_R		427827	0					
ANR	428133	Label	case ZEND_FE_FETCH_RW :	175:3:5690:5711	427827	40	True				
ANR	428134	Identifier	ZEND_FE_FETCH_RW		427827	0					
ANR	428135	ExpressionStatement	START_BLOCK_OP ( opline -> extended_value )	176:4:5717:5755	427827	41	True				
ANR	428136	CallExpression	START_BLOCK_OP ( opline -> extended_value )		427827	0					
ANR	428137	Callee	START_BLOCK_OP		427827	0					
ANR	428138	Identifier	START_BLOCK_OP		427827	0					
ANR	428139	ArgumentList	opline -> extended_value		427827	1					
ANR	428140	Argument	opline -> extended_value		427827	0					
ANR	428141	PtrMemberAccess	opline -> extended_value		427827	0					
ANR	428142	Identifier	opline		427827	0					
ANR	428143	Identifier	extended_value		427827	1					
ANR	428144	ExpressionStatement	START_BLOCK_OP ( opno + 1 )	177:4:5761:5785	427827	42	True				
ANR	428145	CallExpression	START_BLOCK_OP ( opno + 1 )		427827	0					
ANR	428146	Callee	START_BLOCK_OP		427827	0					
ANR	428147	Identifier	START_BLOCK_OP		427827	0					
ANR	428148	ArgumentList	opno + 1		427827	1					
ANR	428149	Argument	opno + 1		427827	0					
ANR	428150	AdditiveExpression	opno + 1		427827	0		+			
ANR	428151	Identifier	opno		427827	0					
ANR	428152	PrimaryExpression	1		427827	1					
ANR	428153	BreakStatement	break ;	178:4:5791:5796	427827	43	True				
ANR	428154	ExpressionStatement	opno ++	180:2:5804:5810	427827	1	True				
ANR	428155	PostIncDecOperationExpression	opno ++		427827	0					
ANR	428156	Identifier	opno		427827	0					
ANR	428157	IncDec	++		427827	1					
ANR	428158	ExpressionStatement	opline ++	181:2:5814:5822	427827	2	True				
ANR	428159	PostIncDecOperationExpression	opline ++		427827	0					
ANR	428160	Identifier	opline		427827	0					
ANR	428161	IncDec	++		427827	1					
ANR	428162	IfStatement	if ( op_array -> last_try_catch )		427827	10					
ANR	428163	Condition	op_array -> last_try_catch	185:5:5870:5893	427827	0	True				
ANR	428164	PtrMemberAccess	op_array -> last_try_catch		427827	0					
ANR	428165	Identifier	op_array		427827	0					
ANR	428166	Identifier	last_try_catch		427827	1					
ANR	428167	CompoundStatement		73:2:1986:1991	427827	1					
ANR	428168	IdentifierDeclStatement	int i ;	186:2:5900:5905	427827	0	True				
ANR	428169	IdentifierDecl	i		427827	0					
ANR	428170	IdentifierDeclType	int		427827	0					
ANR	428171	Identifier	i		427827	1					
ANR	428172	Statement	cfg	187:2:5909:5911	427827	1	True				
ANR	428173	Statement	->	187:5:5912:5913	427827	2	True				
ANR	428174	TryStatement	try		427827	3					
ANR	428175	Statement	=		427827	0					
ANR	428176	ExpressionStatement	"zend_arena_calloc ( & ctx -> arena , op_array -> last_try_catch , sizeof ( zend_code_block * ) )"	187:13:5920:6003	427827	4	True				
ANR	428177	CallExpression	"zend_arena_calloc ( & ctx -> arena , op_array -> last_try_catch , sizeof ( zend_code_block * ) )"		427827	0					
ANR	428178	Callee	zend_arena_calloc		427827	0					
ANR	428179	Identifier	zend_arena_calloc		427827	0					
ANR	428180	ArgumentList	& ctx -> arena		427827	1					
ANR	428181	Argument	& ctx -> arena		427827	0					
ANR	428182	UnaryOperationExpression	& ctx -> arena		427827	0					
ANR	428183	UnaryOperator	&		427827	0					
ANR	428184	PtrMemberAccess	ctx -> arena		427827	1					
ANR	428185	Identifier	ctx		427827	0					
ANR	428186	Identifier	arena		427827	1					
ANR	428187	Argument	op_array -> last_try_catch		427827	1					
ANR	428188	PtrMemberAccess	op_array -> last_try_catch		427827	0					
ANR	428189	Identifier	op_array		427827	0					
ANR	428190	Identifier	last_try_catch		427827	1					
ANR	428191	Argument	sizeof ( zend_code_block * )		427827	2					
ANR	428192	SizeofExpression	sizeof ( zend_code_block * )		427827	0					
ANR	428193	Sizeof	sizeof		427827	0					
ANR	428194	SizeofOperand	zend_code_block *		427827	1					
ANR	428195	Statement	cfg	188:2:6007:6009	427827	5	True				
ANR	428196	Statement	->	188:5:6010:6011	427827	6	True				
ANR	428197	Statement	catch	188:7:6012:6016	427827	7	True				
ANR	428198	Statement	=	188:13:6018:6018	427827	8	True				
ANR	428199	ExpressionStatement	"zend_arena_calloc ( & ctx -> arena , op_array -> last_try_catch , sizeof ( zend_code_block * ) )"	188:15:6020:6103	427827	9	True				
ANR	428200	CallExpression	"zend_arena_calloc ( & ctx -> arena , op_array -> last_try_catch , sizeof ( zend_code_block * ) )"		427827	0					
ANR	428201	Callee	zend_arena_calloc		427827	0					
ANR	428202	Identifier	zend_arena_calloc		427827	0					
ANR	428203	ArgumentList	& ctx -> arena		427827	1					
ANR	428204	Argument	& ctx -> arena		427827	0					
ANR	428205	UnaryOperationExpression	& ctx -> arena		427827	0					
ANR	428206	UnaryOperator	&		427827	0					
ANR	428207	PtrMemberAccess	ctx -> arena		427827	1					
ANR	428208	Identifier	ctx		427827	0					
ANR	428209	Identifier	arena		427827	1					
ANR	428210	Argument	op_array -> last_try_catch		427827	1					
ANR	428211	PtrMemberAccess	op_array -> last_try_catch		427827	0					
ANR	428212	Identifier	op_array		427827	0					
ANR	428213	Identifier	last_try_catch		427827	1					
ANR	428214	Argument	sizeof ( zend_code_block * )		427827	2					
ANR	428215	SizeofExpression	sizeof ( zend_code_block * )		427827	0					
ANR	428216	Sizeof	sizeof		427827	0					
ANR	428217	SizeofOperand	zend_code_block *		427827	1					
ANR	428218	ForStatement	for ( i = 0 ; i < op_array -> last_try_catch ; i ++ )		427827	10					
ANR	428219	ForInit	i = 0 ;	189:7:6112:6117	427827	0	True				
ANR	428220	AssignmentExpression	i = 0		427827	0		=			
ANR	428221	Identifier	i		427827	0					
ANR	428222	PrimaryExpression	0		427827	1					
ANR	428223	Condition	i < op_array -> last_try_catch	189:14:6119:6145	427827	1	True				
ANR	428224	RelationalExpression	i < op_array -> last_try_catch		427827	0		<			
ANR	428225	Identifier	i		427827	0					
ANR	428226	PtrMemberAccess	op_array -> last_try_catch		427827	1					
ANR	428227	Identifier	op_array		427827	0					
ANR	428228	Identifier	last_try_catch		427827	1					
ANR	428229	PostIncDecOperationExpression	i ++	189:43:6148:6150	427827	2	True				
ANR	428230	Identifier	i		427827	0					
ANR	428231	IncDec	++		427827	1					
ANR	428232	CompoundStatement		76:48:2239:2239	427827	3					
ANR	428233	Statement	cfg	190:3:6158:6160	427827	0	True				
ANR	428234	Statement	->	190:6:6161:6162	427827	1	True				
ANR	428235	TryStatement	try		427827	2					
ANR	428236	Statement	[		427827	0					
ANR	428237	Statement	i	190:12:6167:6167	427827	3	True				
ANR	428238	Statement	]	190:13:6168:6168	427827	4	True				
ANR	428239	Statement	=	190:15:6170:6170	427827	5	True				
ANR	428240	ExpressionStatement	& blocks [ op_array -> try_catch_array [ i ] . try_op ]	190:17:6172:6216	427827	6	True				
ANR	428241	UnaryOperationExpression	& blocks [ op_array -> try_catch_array [ i ] . try_op ]		427827	0					
ANR	428242	UnaryOperator	&		427827	0					
ANR	428243	ArrayIndexing	blocks [ op_array -> try_catch_array [ i ] . try_op ]		427827	1					
ANR	428244	Identifier	blocks		427827	0					
ANR	428245	MemberAccess	op_array -> try_catch_array [ i ] . try_op		427827	1					
ANR	428246	ArrayIndexing	op_array -> try_catch_array [ i ]		427827	0					
ANR	428247	PtrMemberAccess	op_array -> try_catch_array		427827	0					
ANR	428248	Identifier	op_array		427827	0					
ANR	428249	Identifier	try_catch_array		427827	1					
ANR	428250	Identifier	i		427827	1					
ANR	428251	Identifier	try_op		427827	1					
ANR	428252	Statement	cfg	191:3:6221:6223	427827	7	True				
ANR	428253	Statement	->	191:6:6224:6225	427827	8	True				
ANR	428254	Statement	catch	191:8:6226:6230	427827	9	True				
ANR	428255	Statement	[	191:13:6231:6231	427827	10	True				
ANR	428256	Statement	i	191:14:6232:6232	427827	11	True				
ANR	428257	Statement	]	191:15:6233:6233	427827	12	True				
ANR	428258	Statement	=	191:17:6235:6235	427827	13	True				
ANR	428259	ExpressionStatement	& blocks [ op_array -> try_catch_array [ i ] . catch_op ]	191:19:6237:6283	427827	14	True				
ANR	428260	UnaryOperationExpression	& blocks [ op_array -> try_catch_array [ i ] . catch_op ]		427827	0					
ANR	428261	UnaryOperator	&		427827	0					
ANR	428262	ArrayIndexing	blocks [ op_array -> try_catch_array [ i ] . catch_op ]		427827	1					
ANR	428263	Identifier	blocks		427827	0					
ANR	428264	MemberAccess	op_array -> try_catch_array [ i ] . catch_op		427827	1					
ANR	428265	ArrayIndexing	op_array -> try_catch_array [ i ]		427827	0					
ANR	428266	PtrMemberAccess	op_array -> try_catch_array		427827	0					
ANR	428267	Identifier	op_array		427827	0					
ANR	428268	Identifier	try_catch_array		427827	1					
ANR	428269	Identifier	i		427827	1					
ANR	428270	Identifier	catch_op		427827	1					
ANR	428271	ExpressionStatement	START_BLOCK_OP ( op_array -> try_catch_array [ i ] . try_op )	192:3:6288:6339	427827	15	True				
ANR	428272	CallExpression	START_BLOCK_OP ( op_array -> try_catch_array [ i ] . try_op )		427827	0					
ANR	428273	Callee	START_BLOCK_OP		427827	0					
ANR	428274	Identifier	START_BLOCK_OP		427827	0					
ANR	428275	ArgumentList	op_array -> try_catch_array [ i ] . try_op		427827	1					
ANR	428276	Argument	op_array -> try_catch_array [ i ] . try_op		427827	0					
ANR	428277	MemberAccess	op_array -> try_catch_array [ i ] . try_op		427827	0					
ANR	428278	ArrayIndexing	op_array -> try_catch_array [ i ]		427827	0					
ANR	428279	PtrMemberAccess	op_array -> try_catch_array		427827	0					
ANR	428280	Identifier	op_array		427827	0					
ANR	428281	Identifier	try_catch_array		427827	1					
ANR	428282	Identifier	i		427827	1					
ANR	428283	Identifier	try_op		427827	1					
ANR	428284	ExpressionStatement	START_BLOCK_OP ( op_array -> try_catch_array [ i ] . catch_op )	193:3:6344:6397	427827	16	True				
ANR	428285	CallExpression	START_BLOCK_OP ( op_array -> try_catch_array [ i ] . catch_op )		427827	0					
ANR	428286	Callee	START_BLOCK_OP		427827	0					
ANR	428287	Identifier	START_BLOCK_OP		427827	0					
ANR	428288	ArgumentList	op_array -> try_catch_array [ i ] . catch_op		427827	1					
ANR	428289	Argument	op_array -> try_catch_array [ i ] . catch_op		427827	0					
ANR	428290	MemberAccess	op_array -> try_catch_array [ i ] . catch_op		427827	0					
ANR	428291	ArrayIndexing	op_array -> try_catch_array [ i ]		427827	0					
ANR	428292	PtrMemberAccess	op_array -> try_catch_array		427827	0					
ANR	428293	Identifier	op_array		427827	0					
ANR	428294	Identifier	try_catch_array		427827	1					
ANR	428295	Identifier	i		427827	1					
ANR	428296	Identifier	catch_op		427827	1					
ANR	428297	ExpressionStatement	blocks [ op_array -> try_catch_array [ i ] . try_op ] . protected = 1	194:3:6402:6459	427827	17	True				
ANR	428298	AssignmentExpression	blocks [ op_array -> try_catch_array [ i ] . try_op ] . protected = 1		427827	0		=			
ANR	428299	MemberAccess	blocks [ op_array -> try_catch_array [ i ] . try_op ] . protected		427827	0					
ANR	428300	ArrayIndexing	blocks [ op_array -> try_catch_array [ i ] . try_op ]		427827	0					
ANR	428301	Identifier	blocks		427827	0					
ANR	428302	MemberAccess	op_array -> try_catch_array [ i ] . try_op		427827	1					
ANR	428303	ArrayIndexing	op_array -> try_catch_array [ i ]		427827	0					
ANR	428304	PtrMemberAccess	op_array -> try_catch_array		427827	0					
ANR	428305	Identifier	op_array		427827	0					
ANR	428306	Identifier	try_catch_array		427827	1					
ANR	428307	Identifier	i		427827	1					
ANR	428308	Identifier	try_op		427827	1					
ANR	428309	Identifier	protected		427827	1					
ANR	428310	PrimaryExpression	1		427827	1					
ANR	428311	IfStatement	if ( op_array -> last_brk_cont )		427827	11					
ANR	428312	Condition	op_array -> last_brk_cont	200:5:6639:6661	427827	0	True				
ANR	428313	PtrMemberAccess	op_array -> last_brk_cont		427827	0					
ANR	428314	Identifier	op_array		427827	0					
ANR	428315	Identifier	last_brk_cont		427827	1					
ANR	428316	CompoundStatement		88:2:2754:2762	427827	1					
ANR	428317	IdentifierDeclStatement	"int i , j ;"	201:2:6668:6676	427827	0	True				
ANR	428318	IdentifierDecl	i		427827	0					
ANR	428319	IdentifierDeclType	int		427827	0					
ANR	428320	Identifier	i		427827	1					
ANR	428321	IdentifierDecl	j		427827	1					
ANR	428322	IdentifierDeclType	int		427827	0					
ANR	428323	Identifier	j		427827	1					
ANR	428324	ExpressionStatement	j = 0	203:2:6681:6686	427827	1	True				
ANR	428325	AssignmentExpression	j = 0		427827	0		=			
ANR	428326	Identifier	j		427827	0					
ANR	428327	PrimaryExpression	0		427827	1					
ANR	428328	ForStatement	for ( i = 0 ; i < op_array -> last_brk_cont ; i ++ )		427827	2					
ANR	428329	ForInit	i = 0 ;	204:7:6695:6700	427827	0	True				
ANR	428330	AssignmentExpression	i = 0		427827	0		=			
ANR	428331	Identifier	i		427827	0					
ANR	428332	PrimaryExpression	0		427827	1					
ANR	428333	Condition	i < op_array -> last_brk_cont	204:14:6702:6727	427827	1	True				
ANR	428334	RelationalExpression	i < op_array -> last_brk_cont		427827	0		<			
ANR	428335	Identifier	i		427827	0					
ANR	428336	PtrMemberAccess	op_array -> last_brk_cont		427827	1					
ANR	428337	Identifier	op_array		427827	0					
ANR	428338	Identifier	last_brk_cont		427827	1					
ANR	428339	PostIncDecOperationExpression	i ++	204:42:6730:6732	427827	2	True				
ANR	428340	Identifier	i		427827	0					
ANR	428341	IncDec	++		427827	1					
ANR	428342	CompoundStatement		91:47:2821:2821	427827	3					
ANR	428343	IfStatement	if ( op_array -> brk_cont_array [ i ] . start >= 0 && ( op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_FREE || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_FE_FREE || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_ROPE_END || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_END_SILENCE ) )		427827	0					
ANR	428344	Condition	op_array -> brk_cont_array [ i ] . start >= 0 && ( op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_FREE || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_FE_FREE || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_ROPE_END || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_END_SILENCE )	205:7:6744:7124	427827	0	True				
ANR	428345	AndExpression	op_array -> brk_cont_array [ i ] . start >= 0 && ( op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_FREE || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_FE_FREE || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_ROPE_END || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_END_SILENCE )		427827	0		&&			
ANR	428346	RelationalExpression	op_array -> brk_cont_array [ i ] . start >= 0		427827	0		>=			
ANR	428347	MemberAccess	op_array -> brk_cont_array [ i ] . start		427827	0					
ANR	428348	ArrayIndexing	op_array -> brk_cont_array [ i ]		427827	0					
ANR	428349	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428350	Identifier	op_array		427827	0					
ANR	428351	Identifier	brk_cont_array		427827	1					
ANR	428352	Identifier	i		427827	1					
ANR	428353	Identifier	start		427827	1					
ANR	428354	PrimaryExpression	0		427827	1					
ANR	428355	OrExpression	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_FREE || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_FE_FREE || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_ROPE_END || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_END_SILENCE		427827	1		||			
ANR	428356	EqualityExpression	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_FREE		427827	0		==			
ANR	428357	MemberAccess	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode		427827	0					
ANR	428358	ArrayIndexing	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ]		427827	0					
ANR	428359	PtrMemberAccess	op_array -> opcodes		427827	0					
ANR	428360	Identifier	op_array		427827	0					
ANR	428361	Identifier	opcodes		427827	1					
ANR	428362	MemberAccess	op_array -> brk_cont_array [ i ] . brk		427827	1					
ANR	428363	ArrayIndexing	op_array -> brk_cont_array [ i ]		427827	0					
ANR	428364	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428365	Identifier	op_array		427827	0					
ANR	428366	Identifier	brk_cont_array		427827	1					
ANR	428367	Identifier	i		427827	1					
ANR	428368	Identifier	brk		427827	1					
ANR	428369	Identifier	opcode		427827	1					
ANR	428370	Identifier	ZEND_FREE		427827	1					
ANR	428371	OrExpression	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_FE_FREE || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_ROPE_END || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_END_SILENCE		427827	1		||			
ANR	428372	EqualityExpression	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_FE_FREE		427827	0		==			
ANR	428373	MemberAccess	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode		427827	0					
ANR	428374	ArrayIndexing	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ]		427827	0					
ANR	428375	PtrMemberAccess	op_array -> opcodes		427827	0					
ANR	428376	Identifier	op_array		427827	0					
ANR	428377	Identifier	opcodes		427827	1					
ANR	428378	MemberAccess	op_array -> brk_cont_array [ i ] . brk		427827	1					
ANR	428379	ArrayIndexing	op_array -> brk_cont_array [ i ]		427827	0					
ANR	428380	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428381	Identifier	op_array		427827	0					
ANR	428382	Identifier	brk_cont_array		427827	1					
ANR	428383	Identifier	i		427827	1					
ANR	428384	Identifier	brk		427827	1					
ANR	428385	Identifier	opcode		427827	1					
ANR	428386	Identifier	ZEND_FE_FREE		427827	1					
ANR	428387	OrExpression	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_ROPE_END || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_END_SILENCE		427827	1		||			
ANR	428388	EqualityExpression	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_ROPE_END		427827	0		==			
ANR	428389	MemberAccess	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode		427827	0					
ANR	428390	ArrayIndexing	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ]		427827	0					
ANR	428391	PtrMemberAccess	op_array -> opcodes		427827	0					
ANR	428392	Identifier	op_array		427827	0					
ANR	428393	Identifier	opcodes		427827	1					
ANR	428394	MemberAccess	op_array -> brk_cont_array [ i ] . brk		427827	1					
ANR	428395	ArrayIndexing	op_array -> brk_cont_array [ i ]		427827	0					
ANR	428396	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428397	Identifier	op_array		427827	0					
ANR	428398	Identifier	brk_cont_array		427827	1					
ANR	428399	Identifier	i		427827	1					
ANR	428400	Identifier	brk		427827	1					
ANR	428401	Identifier	opcode		427827	1					
ANR	428402	Identifier	ZEND_ROPE_END		427827	1					
ANR	428403	EqualityExpression	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_END_SILENCE		427827	1		==			
ANR	428404	MemberAccess	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode		427827	0					
ANR	428405	ArrayIndexing	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ]		427827	0					
ANR	428406	PtrMemberAccess	op_array -> opcodes		427827	0					
ANR	428407	Identifier	op_array		427827	0					
ANR	428408	Identifier	opcodes		427827	1					
ANR	428409	MemberAccess	op_array -> brk_cont_array [ i ] . brk		427827	1					
ANR	428410	ArrayIndexing	op_array -> brk_cont_array [ i ]		427827	0					
ANR	428411	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428412	Identifier	op_array		427827	0					
ANR	428413	Identifier	brk_cont_array		427827	1					
ANR	428414	Identifier	i		427827	1					
ANR	428415	Identifier	brk		427827	1					
ANR	428416	Identifier	opcode		427827	1					
ANR	428417	Identifier	ZEND_END_SILENCE		427827	1					
ANR	428418	CompoundStatement		97:4:3219:3266	427827	1					
ANR	428419	IdentifierDeclStatement	int parent = op_array -> brk_cont_array [ i ] . parent ;	210:4:7133:7180	427827	0	True				
ANR	428420	IdentifierDecl	parent = op_array -> brk_cont_array [ i ] . parent		427827	0					
ANR	428421	IdentifierDeclType	int		427827	0					
ANR	428422	Identifier	parent		427827	1					
ANR	428423	AssignmentExpression	parent = op_array -> brk_cont_array [ i ] . parent		427827	2		=			
ANR	428424	Identifier	parent		427827	0					
ANR	428425	MemberAccess	op_array -> brk_cont_array [ i ] . parent		427827	1					
ANR	428426	ArrayIndexing	op_array -> brk_cont_array [ i ]		427827	0					
ANR	428427	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428428	Identifier	op_array		427827	0					
ANR	428429	Identifier	brk_cont_array		427827	1					
ANR	428430	Identifier	i		427827	1					
ANR	428431	Identifier	parent		427827	1					
ANR	428432	WhileStatement	while ( parent >= 0 && op_array -> brk_cont_array [ parent ] . start < 0 && ( op_array -> opcodes [ op_array -> brk_cont_array [ parent ] . brk ] . opcode != ZEND_FREE || op_array -> opcodes [ op_array -> brk_cont_array [ parent ] . brk ] . opcode != ZEND_FE_FREE || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode != ZEND_ROPE_END || op_array -> opcodes [ op_array -> brk_cont_array [ parent ] . brk ] . opcode != ZEND_END_SILENCE ) )		427827	1					
ANR	428433	Condition	parent >= 0 && op_array -> brk_cont_array [ parent ] . start < 0 && ( op_array -> opcodes [ op_array -> brk_cont_array [ parent ] . brk ] . opcode != ZEND_FREE || op_array -> opcodes [ op_array -> brk_cont_array [ parent ] . brk ] . opcode != ZEND_FE_FREE || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode != ZEND_ROPE_END || op_array -> opcodes [ op_array -> brk_cont_array [ parent ] . brk ] . opcode != ZEND_END_SILENCE )	212:11:7194:7633	427827	0	True				
ANR	428434	AndExpression	parent >= 0 && op_array -> brk_cont_array [ parent ] . start < 0 && ( op_array -> opcodes [ op_array -> brk_cont_array [ parent ] . brk ] . opcode != ZEND_FREE || op_array -> opcodes [ op_array -> brk_cont_array [ parent ] . brk ] . opcode != ZEND_FE_FREE || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode != ZEND_ROPE_END || op_array -> opcodes [ op_array -> brk_cont_array [ parent ] . brk ] . opcode != ZEND_END_SILENCE )		427827	0		&&			
ANR	428435	RelationalExpression	parent >= 0		427827	0		>=			
ANR	428436	Identifier	parent		427827	0					
ANR	428437	PrimaryExpression	0		427827	1					
ANR	428438	AndExpression	op_array -> brk_cont_array [ parent ] . start < 0 && ( op_array -> opcodes [ op_array -> brk_cont_array [ parent ] . brk ] . opcode != ZEND_FREE || op_array -> opcodes [ op_array -> brk_cont_array [ parent ] . brk ] . opcode != ZEND_FE_FREE || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode != ZEND_ROPE_END || op_array -> opcodes [ op_array -> brk_cont_array [ parent ] . brk ] . opcode != ZEND_END_SILENCE )		427827	1		&&			
ANR	428439	RelationalExpression	op_array -> brk_cont_array [ parent ] . start < 0		427827	0		<			
ANR	428440	MemberAccess	op_array -> brk_cont_array [ parent ] . start		427827	0					
ANR	428441	ArrayIndexing	op_array -> brk_cont_array [ parent ]		427827	0					
ANR	428442	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428443	Identifier	op_array		427827	0					
ANR	428444	Identifier	brk_cont_array		427827	1					
ANR	428445	Identifier	parent		427827	1					
ANR	428446	Identifier	start		427827	1					
ANR	428447	PrimaryExpression	0		427827	1					
ANR	428448	OrExpression	op_array -> opcodes [ op_array -> brk_cont_array [ parent ] . brk ] . opcode != ZEND_FREE || op_array -> opcodes [ op_array -> brk_cont_array [ parent ] . brk ] . opcode != ZEND_FE_FREE || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode != ZEND_ROPE_END || op_array -> opcodes [ op_array -> brk_cont_array [ parent ] . brk ] . opcode != ZEND_END_SILENCE		427827	1		||			
ANR	428449	EqualityExpression	op_array -> opcodes [ op_array -> brk_cont_array [ parent ] . brk ] . opcode != ZEND_FREE		427827	0		!=			
ANR	428450	MemberAccess	op_array -> opcodes [ op_array -> brk_cont_array [ parent ] . brk ] . opcode		427827	0					
ANR	428451	ArrayIndexing	op_array -> opcodes [ op_array -> brk_cont_array [ parent ] . brk ]		427827	0					
ANR	428452	PtrMemberAccess	op_array -> opcodes		427827	0					
ANR	428453	Identifier	op_array		427827	0					
ANR	428454	Identifier	opcodes		427827	1					
ANR	428455	MemberAccess	op_array -> brk_cont_array [ parent ] . brk		427827	1					
ANR	428456	ArrayIndexing	op_array -> brk_cont_array [ parent ]		427827	0					
ANR	428457	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428458	Identifier	op_array		427827	0					
ANR	428459	Identifier	brk_cont_array		427827	1					
ANR	428460	Identifier	parent		427827	1					
ANR	428461	Identifier	brk		427827	1					
ANR	428462	Identifier	opcode		427827	1					
ANR	428463	Identifier	ZEND_FREE		427827	1					
ANR	428464	OrExpression	op_array -> opcodes [ op_array -> brk_cont_array [ parent ] . brk ] . opcode != ZEND_FE_FREE || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode != ZEND_ROPE_END || op_array -> opcodes [ op_array -> brk_cont_array [ parent ] . brk ] . opcode != ZEND_END_SILENCE		427827	1		||			
ANR	428465	EqualityExpression	op_array -> opcodes [ op_array -> brk_cont_array [ parent ] . brk ] . opcode != ZEND_FE_FREE		427827	0		!=			
ANR	428466	MemberAccess	op_array -> opcodes [ op_array -> brk_cont_array [ parent ] . brk ] . opcode		427827	0					
ANR	428467	ArrayIndexing	op_array -> opcodes [ op_array -> brk_cont_array [ parent ] . brk ]		427827	0					
ANR	428468	PtrMemberAccess	op_array -> opcodes		427827	0					
ANR	428469	Identifier	op_array		427827	0					
ANR	428470	Identifier	opcodes		427827	1					
ANR	428471	MemberAccess	op_array -> brk_cont_array [ parent ] . brk		427827	1					
ANR	428472	ArrayIndexing	op_array -> brk_cont_array [ parent ]		427827	0					
ANR	428473	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428474	Identifier	op_array		427827	0					
ANR	428475	Identifier	brk_cont_array		427827	1					
ANR	428476	Identifier	parent		427827	1					
ANR	428477	Identifier	brk		427827	1					
ANR	428478	Identifier	opcode		427827	1					
ANR	428479	Identifier	ZEND_FE_FREE		427827	1					
ANR	428480	OrExpression	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode != ZEND_ROPE_END || op_array -> opcodes [ op_array -> brk_cont_array [ parent ] . brk ] . opcode != ZEND_END_SILENCE		427827	1		||			
ANR	428481	EqualityExpression	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode != ZEND_ROPE_END		427827	0		!=			
ANR	428482	MemberAccess	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode		427827	0					
ANR	428483	ArrayIndexing	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ]		427827	0					
ANR	428484	PtrMemberAccess	op_array -> opcodes		427827	0					
ANR	428485	Identifier	op_array		427827	0					
ANR	428486	Identifier	opcodes		427827	1					
ANR	428487	MemberAccess	op_array -> brk_cont_array [ i ] . brk		427827	1					
ANR	428488	ArrayIndexing	op_array -> brk_cont_array [ i ]		427827	0					
ANR	428489	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428490	Identifier	op_array		427827	0					
ANR	428491	Identifier	brk_cont_array		427827	1					
ANR	428492	Identifier	i		427827	1					
ANR	428493	Identifier	brk		427827	1					
ANR	428494	Identifier	opcode		427827	1					
ANR	428495	Identifier	ZEND_ROPE_END		427827	1					
ANR	428496	EqualityExpression	op_array -> opcodes [ op_array -> brk_cont_array [ parent ] . brk ] . opcode != ZEND_END_SILENCE		427827	1		!=			
ANR	428497	MemberAccess	op_array -> opcodes [ op_array -> brk_cont_array [ parent ] . brk ] . opcode		427827	0					
ANR	428498	ArrayIndexing	op_array -> opcodes [ op_array -> brk_cont_array [ parent ] . brk ]		427827	0					
ANR	428499	PtrMemberAccess	op_array -> opcodes		427827	0					
ANR	428500	Identifier	op_array		427827	0					
ANR	428501	Identifier	opcodes		427827	1					
ANR	428502	MemberAccess	op_array -> brk_cont_array [ parent ] . brk		427827	1					
ANR	428503	ArrayIndexing	op_array -> brk_cont_array [ parent ]		427827	0					
ANR	428504	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428505	Identifier	op_array		427827	0					
ANR	428506	Identifier	brk_cont_array		427827	1					
ANR	428507	Identifier	parent		427827	1					
ANR	428508	Identifier	brk		427827	1					
ANR	428509	Identifier	opcode		427827	1					
ANR	428510	Identifier	ZEND_END_SILENCE		427827	1					
ANR	428511	CompoundStatement		104:97:3722:3722	427827	1					
ANR	428512	ExpressionStatement	parent = op_array -> brk_cont_array [ parent ] . parent	218:5:7643:7691	427827	0	True				
ANR	428513	AssignmentExpression	parent = op_array -> brk_cont_array [ parent ] . parent		427827	0		=			
ANR	428514	Identifier	parent		427827	0					
ANR	428515	MemberAccess	op_array -> brk_cont_array [ parent ] . parent		427827	1					
ANR	428516	ArrayIndexing	op_array -> brk_cont_array [ parent ]		427827	0					
ANR	428517	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428518	Identifier	op_array		427827	0					
ANR	428519	Identifier	brk_cont_array		427827	1					
ANR	428520	Identifier	parent		427827	1					
ANR	428521	Identifier	parent		427827	1					
ANR	428522	ExpressionStatement	op_array -> brk_cont_array [ i ] . parent = parent	220:4:7703:7746	427827	2	True				
ANR	428523	AssignmentExpression	op_array -> brk_cont_array [ i ] . parent = parent		427827	0		=			
ANR	428524	MemberAccess	op_array -> brk_cont_array [ i ] . parent		427827	0					
ANR	428525	ArrayIndexing	op_array -> brk_cont_array [ i ]		427827	0					
ANR	428526	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428527	Identifier	op_array		427827	0					
ANR	428528	Identifier	brk_cont_array		427827	1					
ANR	428529	Identifier	i		427827	1					
ANR	428530	Identifier	parent		427827	1					
ANR	428531	Identifier	parent		427827	1					
ANR	428532	ExpressionStatement	j ++	221:4:7752:7755	427827	3	True				
ANR	428533	PostIncDecOperationExpression	j ++		427827	0					
ANR	428534	Identifier	j		427827	0					
ANR	428535	IncDec	++		427827	1					
ANR	428536	IfStatement	if ( j )		427827	3					
ANR	428537	Condition	j	224:6:7772:7772	427827	0	True				
ANR	428538	Identifier	j		427827	0					
ANR	428539	CompoundStatement		111:9:3861:3861	427827	1					
ANR	428540	ExpressionStatement	"cfg -> loop_start = zend_arena_calloc ( & ctx -> arena , op_array -> last_brk_cont , sizeof ( zend_code_block * ) )"	225:3:7780:7880	427827	0	True				
ANR	428541	AssignmentExpression	"cfg -> loop_start = zend_arena_calloc ( & ctx -> arena , op_array -> last_brk_cont , sizeof ( zend_code_block * ) )"		427827	0		=			
ANR	428542	PtrMemberAccess	cfg -> loop_start		427827	0					
ANR	428543	Identifier	cfg		427827	0					
ANR	428544	Identifier	loop_start		427827	1					
ANR	428545	CallExpression	"zend_arena_calloc ( & ctx -> arena , op_array -> last_brk_cont , sizeof ( zend_code_block * ) )"		427827	1					
ANR	428546	Callee	zend_arena_calloc		427827	0					
ANR	428547	Identifier	zend_arena_calloc		427827	0					
ANR	428548	ArgumentList	& ctx -> arena		427827	1					
ANR	428549	Argument	& ctx -> arena		427827	0					
ANR	428550	UnaryOperationExpression	& ctx -> arena		427827	0					
ANR	428551	UnaryOperator	&		427827	0					
ANR	428552	PtrMemberAccess	ctx -> arena		427827	1					
ANR	428553	Identifier	ctx		427827	0					
ANR	428554	Identifier	arena		427827	1					
ANR	428555	Argument	op_array -> last_brk_cont		427827	1					
ANR	428556	PtrMemberAccess	op_array -> last_brk_cont		427827	0					
ANR	428557	Identifier	op_array		427827	0					
ANR	428558	Identifier	last_brk_cont		427827	1					
ANR	428559	Argument	sizeof ( zend_code_block * )		427827	2					
ANR	428560	SizeofExpression	sizeof ( zend_code_block * )		427827	0					
ANR	428561	Sizeof	sizeof		427827	0					
ANR	428562	SizeofOperand	zend_code_block *		427827	1					
ANR	428563	ExpressionStatement	"cfg -> loop_cont = zend_arena_calloc ( & ctx -> arena , op_array -> last_brk_cont , sizeof ( zend_code_block * ) )"	226:3:7885:7985	427827	1	True				
ANR	428564	AssignmentExpression	"cfg -> loop_cont = zend_arena_calloc ( & ctx -> arena , op_array -> last_brk_cont , sizeof ( zend_code_block * ) )"		427827	0		=			
ANR	428565	PtrMemberAccess	cfg -> loop_cont		427827	0					
ANR	428566	Identifier	cfg		427827	0					
ANR	428567	Identifier	loop_cont		427827	1					
ANR	428568	CallExpression	"zend_arena_calloc ( & ctx -> arena , op_array -> last_brk_cont , sizeof ( zend_code_block * ) )"		427827	1					
ANR	428569	Callee	zend_arena_calloc		427827	0					
ANR	428570	Identifier	zend_arena_calloc		427827	0					
ANR	428571	ArgumentList	& ctx -> arena		427827	1					
ANR	428572	Argument	& ctx -> arena		427827	0					
ANR	428573	UnaryOperationExpression	& ctx -> arena		427827	0					
ANR	428574	UnaryOperator	&		427827	0					
ANR	428575	PtrMemberAccess	ctx -> arena		427827	1					
ANR	428576	Identifier	ctx		427827	0					
ANR	428577	Identifier	arena		427827	1					
ANR	428578	Argument	op_array -> last_brk_cont		427827	1					
ANR	428579	PtrMemberAccess	op_array -> last_brk_cont		427827	0					
ANR	428580	Identifier	op_array		427827	0					
ANR	428581	Identifier	last_brk_cont		427827	1					
ANR	428582	Argument	sizeof ( zend_code_block * )		427827	2					
ANR	428583	SizeofExpression	sizeof ( zend_code_block * )		427827	0					
ANR	428584	Sizeof	sizeof		427827	0					
ANR	428585	SizeofOperand	zend_code_block *		427827	1					
ANR	428586	ExpressionStatement	"cfg -> loop_brk = zend_arena_calloc ( & ctx -> arena , op_array -> last_brk_cont , sizeof ( zend_code_block * ) )"	227:3:7990:8090	427827	2	True				
ANR	428587	AssignmentExpression	"cfg -> loop_brk = zend_arena_calloc ( & ctx -> arena , op_array -> last_brk_cont , sizeof ( zend_code_block * ) )"		427827	0		=			
ANR	428588	PtrMemberAccess	cfg -> loop_brk		427827	0					
ANR	428589	Identifier	cfg		427827	0					
ANR	428590	Identifier	loop_brk		427827	1					
ANR	428591	CallExpression	"zend_arena_calloc ( & ctx -> arena , op_array -> last_brk_cont , sizeof ( zend_code_block * ) )"		427827	1					
ANR	428592	Callee	zend_arena_calloc		427827	0					
ANR	428593	Identifier	zend_arena_calloc		427827	0					
ANR	428594	ArgumentList	& ctx -> arena		427827	1					
ANR	428595	Argument	& ctx -> arena		427827	0					
ANR	428596	UnaryOperationExpression	& ctx -> arena		427827	0					
ANR	428597	UnaryOperator	&		427827	0					
ANR	428598	PtrMemberAccess	ctx -> arena		427827	1					
ANR	428599	Identifier	ctx		427827	0					
ANR	428600	Identifier	arena		427827	1					
ANR	428601	Argument	op_array -> last_brk_cont		427827	1					
ANR	428602	PtrMemberAccess	op_array -> last_brk_cont		427827	0					
ANR	428603	Identifier	op_array		427827	0					
ANR	428604	Identifier	last_brk_cont		427827	1					
ANR	428605	Argument	sizeof ( zend_code_block * )		427827	2					
ANR	428606	SizeofExpression	sizeof ( zend_code_block * )		427827	0					
ANR	428607	Sizeof	sizeof		427827	0					
ANR	428608	SizeofOperand	zend_code_block *		427827	1					
ANR	428609	ExpressionStatement	j = 0	228:3:8095:8100	427827	3	True				
ANR	428610	AssignmentExpression	j = 0		427827	0		=			
ANR	428611	Identifier	j		427827	0					
ANR	428612	PrimaryExpression	0		427827	1					
ANR	428613	ForStatement	for ( i = 0 ; i < op_array -> last_brk_cont ; i ++ )		427827	4					
ANR	428614	ForInit	i = 0 ;	229:8:8110:8115	427827	0	True				
ANR	428615	AssignmentExpression	i = 0		427827	0		=			
ANR	428616	Identifier	i		427827	0					
ANR	428617	PrimaryExpression	0		427827	1					
ANR	428618	Condition	i < op_array -> last_brk_cont	229:15:8117:8142	427827	1	True				
ANR	428619	RelationalExpression	i < op_array -> last_brk_cont		427827	0		<			
ANR	428620	Identifier	i		427827	0					
ANR	428621	PtrMemberAccess	op_array -> last_brk_cont		427827	1					
ANR	428622	Identifier	op_array		427827	0					
ANR	428623	Identifier	last_brk_cont		427827	1					
ANR	428624	PostIncDecOperationExpression	i ++	229:43:8145:8147	427827	2	True				
ANR	428625	Identifier	i		427827	0					
ANR	428626	IncDec	++		427827	1					
ANR	428627	CompoundStatement		116:48:4236:4236	427827	3					
ANR	428628	IfStatement	if ( op_array -> brk_cont_array [ i ] . start >= 0 && ( op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_FREE || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_FE_FREE || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_ROPE_END || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_END_SILENCE ) )		427827	0					
ANR	428629	Condition	op_array -> brk_cont_array [ i ] . start >= 0 && ( op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_FREE || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_FE_FREE || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_ROPE_END || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_END_SILENCE )	230:8:8160:8544	427827	0	True				
ANR	428630	AndExpression	op_array -> brk_cont_array [ i ] . start >= 0 && ( op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_FREE || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_FE_FREE || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_ROPE_END || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_END_SILENCE )		427827	0		&&			
ANR	428631	RelationalExpression	op_array -> brk_cont_array [ i ] . start >= 0		427827	0		>=			
ANR	428632	MemberAccess	op_array -> brk_cont_array [ i ] . start		427827	0					
ANR	428633	ArrayIndexing	op_array -> brk_cont_array [ i ]		427827	0					
ANR	428634	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428635	Identifier	op_array		427827	0					
ANR	428636	Identifier	brk_cont_array		427827	1					
ANR	428637	Identifier	i		427827	1					
ANR	428638	Identifier	start		427827	1					
ANR	428639	PrimaryExpression	0		427827	1					
ANR	428640	OrExpression	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_FREE || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_FE_FREE || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_ROPE_END || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_END_SILENCE		427827	1		||			
ANR	428641	EqualityExpression	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_FREE		427827	0		==			
ANR	428642	MemberAccess	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode		427827	0					
ANR	428643	ArrayIndexing	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ]		427827	0					
ANR	428644	PtrMemberAccess	op_array -> opcodes		427827	0					
ANR	428645	Identifier	op_array		427827	0					
ANR	428646	Identifier	opcodes		427827	1					
ANR	428647	MemberAccess	op_array -> brk_cont_array [ i ] . brk		427827	1					
ANR	428648	ArrayIndexing	op_array -> brk_cont_array [ i ]		427827	0					
ANR	428649	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428650	Identifier	op_array		427827	0					
ANR	428651	Identifier	brk_cont_array		427827	1					
ANR	428652	Identifier	i		427827	1					
ANR	428653	Identifier	brk		427827	1					
ANR	428654	Identifier	opcode		427827	1					
ANR	428655	Identifier	ZEND_FREE		427827	1					
ANR	428656	OrExpression	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_FE_FREE || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_ROPE_END || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_END_SILENCE		427827	1		||			
ANR	428657	EqualityExpression	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_FE_FREE		427827	0		==			
ANR	428658	MemberAccess	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode		427827	0					
ANR	428659	ArrayIndexing	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ]		427827	0					
ANR	428660	PtrMemberAccess	op_array -> opcodes		427827	0					
ANR	428661	Identifier	op_array		427827	0					
ANR	428662	Identifier	opcodes		427827	1					
ANR	428663	MemberAccess	op_array -> brk_cont_array [ i ] . brk		427827	1					
ANR	428664	ArrayIndexing	op_array -> brk_cont_array [ i ]		427827	0					
ANR	428665	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428666	Identifier	op_array		427827	0					
ANR	428667	Identifier	brk_cont_array		427827	1					
ANR	428668	Identifier	i		427827	1					
ANR	428669	Identifier	brk		427827	1					
ANR	428670	Identifier	opcode		427827	1					
ANR	428671	Identifier	ZEND_FE_FREE		427827	1					
ANR	428672	OrExpression	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_ROPE_END || op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_END_SILENCE		427827	1		||			
ANR	428673	EqualityExpression	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_ROPE_END		427827	0		==			
ANR	428674	MemberAccess	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode		427827	0					
ANR	428675	ArrayIndexing	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ]		427827	0					
ANR	428676	PtrMemberAccess	op_array -> opcodes		427827	0					
ANR	428677	Identifier	op_array		427827	0					
ANR	428678	Identifier	opcodes		427827	1					
ANR	428679	MemberAccess	op_array -> brk_cont_array [ i ] . brk		427827	1					
ANR	428680	ArrayIndexing	op_array -> brk_cont_array [ i ]		427827	0					
ANR	428681	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428682	Identifier	op_array		427827	0					
ANR	428683	Identifier	brk_cont_array		427827	1					
ANR	428684	Identifier	i		427827	1					
ANR	428685	Identifier	brk		427827	1					
ANR	428686	Identifier	opcode		427827	1					
ANR	428687	Identifier	ZEND_ROPE_END		427827	1					
ANR	428688	EqualityExpression	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode == ZEND_END_SILENCE		427827	1		==			
ANR	428689	MemberAccess	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode		427827	0					
ANR	428690	ArrayIndexing	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ]		427827	0					
ANR	428691	PtrMemberAccess	op_array -> opcodes		427827	0					
ANR	428692	Identifier	op_array		427827	0					
ANR	428693	Identifier	opcodes		427827	1					
ANR	428694	MemberAccess	op_array -> brk_cont_array [ i ] . brk		427827	1					
ANR	428695	ArrayIndexing	op_array -> brk_cont_array [ i ]		427827	0					
ANR	428696	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428697	Identifier	op_array		427827	0					
ANR	428698	Identifier	brk_cont_array		427827	1					
ANR	428699	Identifier	i		427827	1					
ANR	428700	Identifier	brk		427827	1					
ANR	428701	Identifier	opcode		427827	1					
ANR	428702	Identifier	ZEND_END_SILENCE		427827	1					
ANR	428703	CompoundStatement		121:89:4633:4633	427827	1					
ANR	428704	IfStatement	if ( i != j )		427827	0					
ANR	428705	Condition	i != j	235:9:8558:8563	427827	0	True				
ANR	428706	EqualityExpression	i != j		427827	0		!=			
ANR	428707	Identifier	i		427827	0					
ANR	428708	Identifier	j		427827	1					
ANR	428709	CompoundStatement		122:17:4652:4652	427827	1					
ANR	428710	ExpressionStatement	op_array -> brk_cont_array [ j ] = op_array -> brk_cont_array [ i ]	236:6:8574:8631	427827	0	True				
ANR	428711	AssignmentExpression	op_array -> brk_cont_array [ j ] = op_array -> brk_cont_array [ i ]		427827	0		=			
ANR	428712	ArrayIndexing	op_array -> brk_cont_array [ j ]		427827	0					
ANR	428713	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428714	Identifier	op_array		427827	0					
ANR	428715	Identifier	brk_cont_array		427827	1					
ANR	428716	Identifier	j		427827	1					
ANR	428717	ArrayIndexing	op_array -> brk_cont_array [ i ]		427827	1					
ANR	428718	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428719	Identifier	op_array		427827	0					
ANR	428720	Identifier	brk_cont_array		427827	1					
ANR	428721	Identifier	i		427827	1					
ANR	428722	ExpressionStatement	cfg -> loop_start [ j ] = & blocks [ op_array -> brk_cont_array [ j ] . start ]	238:5:8645:8708	427827	1	True				
ANR	428723	AssignmentExpression	cfg -> loop_start [ j ] = & blocks [ op_array -> brk_cont_array [ j ] . start ]		427827	0		=			
ANR	428724	ArrayIndexing	cfg -> loop_start [ j ]		427827	0					
ANR	428725	PtrMemberAccess	cfg -> loop_start		427827	0					
ANR	428726	Identifier	cfg		427827	0					
ANR	428727	Identifier	loop_start		427827	1					
ANR	428728	Identifier	j		427827	1					
ANR	428729	UnaryOperationExpression	& blocks [ op_array -> brk_cont_array [ j ] . start ]		427827	1					
ANR	428730	UnaryOperator	&		427827	0					
ANR	428731	ArrayIndexing	blocks [ op_array -> brk_cont_array [ j ] . start ]		427827	1					
ANR	428732	Identifier	blocks		427827	0					
ANR	428733	MemberAccess	op_array -> brk_cont_array [ j ] . start		427827	1					
ANR	428734	ArrayIndexing	op_array -> brk_cont_array [ j ]		427827	0					
ANR	428735	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428736	Identifier	op_array		427827	0					
ANR	428737	Identifier	brk_cont_array		427827	1					
ANR	428738	Identifier	j		427827	1					
ANR	428739	Identifier	start		427827	1					
ANR	428740	ExpressionStatement	cfg -> loop_cont [ j ] = & blocks [ op_array -> brk_cont_array [ j ] . cont ]	239:5:8715:8777	427827	2	True				
ANR	428741	AssignmentExpression	cfg -> loop_cont [ j ] = & blocks [ op_array -> brk_cont_array [ j ] . cont ]		427827	0		=			
ANR	428742	ArrayIndexing	cfg -> loop_cont [ j ]		427827	0					
ANR	428743	PtrMemberAccess	cfg -> loop_cont		427827	0					
ANR	428744	Identifier	cfg		427827	0					
ANR	428745	Identifier	loop_cont		427827	1					
ANR	428746	Identifier	j		427827	1					
ANR	428747	UnaryOperationExpression	& blocks [ op_array -> brk_cont_array [ j ] . cont ]		427827	1					
ANR	428748	UnaryOperator	&		427827	0					
ANR	428749	ArrayIndexing	blocks [ op_array -> brk_cont_array [ j ] . cont ]		427827	1					
ANR	428750	Identifier	blocks		427827	0					
ANR	428751	MemberAccess	op_array -> brk_cont_array [ j ] . cont		427827	1					
ANR	428752	ArrayIndexing	op_array -> brk_cont_array [ j ]		427827	0					
ANR	428753	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428754	Identifier	op_array		427827	0					
ANR	428755	Identifier	brk_cont_array		427827	1					
ANR	428756	Identifier	j		427827	1					
ANR	428757	Identifier	cont		427827	1					
ANR	428758	ExpressionStatement	cfg -> loop_brk [ j ] = & blocks [ op_array -> brk_cont_array [ j ] . brk ]	240:5:8784:8845	427827	3	True				
ANR	428759	AssignmentExpression	cfg -> loop_brk [ j ] = & blocks [ op_array -> brk_cont_array [ j ] . brk ]		427827	0		=			
ANR	428760	ArrayIndexing	cfg -> loop_brk [ j ]		427827	0					
ANR	428761	PtrMemberAccess	cfg -> loop_brk		427827	0					
ANR	428762	Identifier	cfg		427827	0					
ANR	428763	Identifier	loop_brk		427827	1					
ANR	428764	Identifier	j		427827	1					
ANR	428765	UnaryOperationExpression	& blocks [ op_array -> brk_cont_array [ j ] . brk ]		427827	1					
ANR	428766	UnaryOperator	&		427827	0					
ANR	428767	ArrayIndexing	blocks [ op_array -> brk_cont_array [ j ] . brk ]		427827	1					
ANR	428768	Identifier	blocks		427827	0					
ANR	428769	MemberAccess	op_array -> brk_cont_array [ j ] . brk		427827	1					
ANR	428770	ArrayIndexing	op_array -> brk_cont_array [ j ]		427827	0					
ANR	428771	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428772	Identifier	op_array		427827	0					
ANR	428773	Identifier	brk_cont_array		427827	1					
ANR	428774	Identifier	j		427827	1					
ANR	428775	Identifier	brk		427827	1					
ANR	428776	ExpressionStatement	START_BLOCK_OP ( op_array -> brk_cont_array [ j ] . start )	241:5:8852:8901	427827	4	True				
ANR	428777	CallExpression	START_BLOCK_OP ( op_array -> brk_cont_array [ j ] . start )		427827	0					
ANR	428778	Callee	START_BLOCK_OP		427827	0					
ANR	428779	Identifier	START_BLOCK_OP		427827	0					
ANR	428780	ArgumentList	op_array -> brk_cont_array [ j ] . start		427827	1					
ANR	428781	Argument	op_array -> brk_cont_array [ j ] . start		427827	0					
ANR	428782	MemberAccess	op_array -> brk_cont_array [ j ] . start		427827	0					
ANR	428783	ArrayIndexing	op_array -> brk_cont_array [ j ]		427827	0					
ANR	428784	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428785	Identifier	op_array		427827	0					
ANR	428786	Identifier	brk_cont_array		427827	1					
ANR	428787	Identifier	j		427827	1					
ANR	428788	Identifier	start		427827	1					
ANR	428789	ExpressionStatement	START_BLOCK_OP ( op_array -> brk_cont_array [ j ] . cont )	242:5:8908:8956	427827	5	True				
ANR	428790	CallExpression	START_BLOCK_OP ( op_array -> brk_cont_array [ j ] . cont )		427827	0					
ANR	428791	Callee	START_BLOCK_OP		427827	0					
ANR	428792	Identifier	START_BLOCK_OP		427827	0					
ANR	428793	ArgumentList	op_array -> brk_cont_array [ j ] . cont		427827	1					
ANR	428794	Argument	op_array -> brk_cont_array [ j ] . cont		427827	0					
ANR	428795	MemberAccess	op_array -> brk_cont_array [ j ] . cont		427827	0					
ANR	428796	ArrayIndexing	op_array -> brk_cont_array [ j ]		427827	0					
ANR	428797	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428798	Identifier	op_array		427827	0					
ANR	428799	Identifier	brk_cont_array		427827	1					
ANR	428800	Identifier	j		427827	1					
ANR	428801	Identifier	cont		427827	1					
ANR	428802	ExpressionStatement	START_BLOCK_OP ( op_array -> brk_cont_array [ j ] . brk )	243:5:8963:9010	427827	6	True				
ANR	428803	CallExpression	START_BLOCK_OP ( op_array -> brk_cont_array [ j ] . brk )		427827	0					
ANR	428804	Callee	START_BLOCK_OP		427827	0					
ANR	428805	Identifier	START_BLOCK_OP		427827	0					
ANR	428806	ArgumentList	op_array -> brk_cont_array [ j ] . brk		427827	1					
ANR	428807	Argument	op_array -> brk_cont_array [ j ] . brk		427827	0					
ANR	428808	MemberAccess	op_array -> brk_cont_array [ j ] . brk		427827	0					
ANR	428809	ArrayIndexing	op_array -> brk_cont_array [ j ]		427827	0					
ANR	428810	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428811	Identifier	op_array		427827	0					
ANR	428812	Identifier	brk_cont_array		427827	1					
ANR	428813	Identifier	j		427827	1					
ANR	428814	Identifier	brk		427827	1					
ANR	428815	ExpressionStatement	blocks [ op_array -> brk_cont_array [ j ] . start ] . protected = 1	244:5:9017:9072	427827	7	True				
ANR	428816	AssignmentExpression	blocks [ op_array -> brk_cont_array [ j ] . start ] . protected = 1		427827	0		=			
ANR	428817	MemberAccess	blocks [ op_array -> brk_cont_array [ j ] . start ] . protected		427827	0					
ANR	428818	ArrayIndexing	blocks [ op_array -> brk_cont_array [ j ] . start ]		427827	0					
ANR	428819	Identifier	blocks		427827	0					
ANR	428820	MemberAccess	op_array -> brk_cont_array [ j ] . start		427827	1					
ANR	428821	ArrayIndexing	op_array -> brk_cont_array [ j ]		427827	0					
ANR	428822	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428823	Identifier	op_array		427827	0					
ANR	428824	Identifier	brk_cont_array		427827	1					
ANR	428825	Identifier	j		427827	1					
ANR	428826	Identifier	start		427827	1					
ANR	428827	Identifier	protected		427827	1					
ANR	428828	PrimaryExpression	1		427827	1					
ANR	428829	ExpressionStatement	blocks [ op_array -> brk_cont_array [ j ] . brk ] . protected = 1	245:5:9079:9132	427827	8	True				
ANR	428830	AssignmentExpression	blocks [ op_array -> brk_cont_array [ j ] . brk ] . protected = 1		427827	0		=			
ANR	428831	MemberAccess	blocks [ op_array -> brk_cont_array [ j ] . brk ] . protected		427827	0					
ANR	428832	ArrayIndexing	blocks [ op_array -> brk_cont_array [ j ] . brk ]		427827	0					
ANR	428833	Identifier	blocks		427827	0					
ANR	428834	MemberAccess	op_array -> brk_cont_array [ j ] . brk		427827	1					
ANR	428835	ArrayIndexing	op_array -> brk_cont_array [ j ]		427827	0					
ANR	428836	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428837	Identifier	op_array		427827	0					
ANR	428838	Identifier	brk_cont_array		427827	1					
ANR	428839	Identifier	j		427827	1					
ANR	428840	Identifier	brk		427827	1					
ANR	428841	Identifier	protected		427827	1					
ANR	428842	PrimaryExpression	1		427827	1					
ANR	428843	ExpressionStatement	j ++	246:5:9139:9142	427827	9	True				
ANR	428844	PostIncDecOperationExpression	j ++		427827	0					
ANR	428845	Identifier	j		427827	0					
ANR	428846	IncDec	++		427827	1					
ANR	428847	ExpressionStatement	op_array -> last_brk_cont = j	249:3:9158:9185	427827	5	True				
ANR	428848	AssignmentExpression	op_array -> last_brk_cont = j		427827	0		=			
ANR	428849	PtrMemberAccess	op_array -> last_brk_cont		427827	0					
ANR	428850	Identifier	op_array		427827	0					
ANR	428851	Identifier	last_brk_cont		427827	1					
ANR	428852	Identifier	j		427827	1					
ANR	428853	ElseStatement	else		427827	0					
ANR	428854	CompoundStatement		137:9:5282:5282	427827	0					
ANR	428855	ExpressionStatement	efree ( op_array -> brk_cont_array )	251:3:9201:9232	427827	0	True				
ANR	428856	CallExpression	efree ( op_array -> brk_cont_array )		427827	0					
ANR	428857	Callee	efree		427827	0					
ANR	428858	Identifier	efree		427827	0					
ANR	428859	ArgumentList	op_array -> brk_cont_array		427827	1					
ANR	428860	Argument	op_array -> brk_cont_array		427827	0					
ANR	428861	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428862	Identifier	op_array		427827	0					
ANR	428863	Identifier	brk_cont_array		427827	1					
ANR	428864	ExpressionStatement	op_array -> brk_cont_array = NULL	252:3:9237:9268	427827	1	True				
ANR	428865	AssignmentExpression	op_array -> brk_cont_array = NULL		427827	0		=			
ANR	428866	PtrMemberAccess	op_array -> brk_cont_array		427827	0					
ANR	428867	Identifier	op_array		427827	0					
ANR	428868	Identifier	brk_cont_array		427827	1					
ANR	428869	Identifier	NULL		427827	1					
ANR	428870	ExpressionStatement	op_array -> last_brk_cont = 0	253:3:9273:9300	427827	2	True				
ANR	428871	AssignmentExpression	op_array -> last_brk_cont = 0		427827	0		=			
ANR	428872	PtrMemberAccess	op_array -> last_brk_cont		427827	0					
ANR	428873	Identifier	op_array		427827	0					
ANR	428874	Identifier	last_brk_cont		427827	1					
ANR	428875	PrimaryExpression	0		427827	1					
ANR	428876	ExpressionStatement	cur_block = blocks	258:1:9349:9367	427827	12	True				
ANR	428877	AssignmentExpression	cur_block = blocks		427827	0		=			
ANR	428878	Identifier	cur_block		427827	0					
ANR	428879	Identifier	blocks		427827	1					
ANR	428880	ForStatement	for ( opno = 1 ; opno < op_array -> last ; opno ++ )		427827	13					
ANR	428881	ForInit	opno = 1 ;	259:6:9375:9383	427827	0	True				
ANR	428882	AssignmentExpression	opno = 1		427827	0		=			
ANR	428883	Identifier	opno		427827	0					
ANR	428884	PrimaryExpression	1		427827	1					
ANR	428885	Condition	opno < op_array -> last	259:16:9385:9405	427827	1	True				
ANR	428886	RelationalExpression	opno < op_array -> last		427827	0		<			
ANR	428887	Identifier	opno		427827	0					
ANR	428888	PtrMemberAccess	op_array -> last		427827	1					
ANR	428889	Identifier	op_array		427827	0					
ANR	428890	Identifier	last		427827	1					
ANR	428891	PostIncDecOperationExpression	opno ++	259:39:9408:9413	427827	2	True				
ANR	428892	Identifier	opno		427827	0					
ANR	428893	IncDec	++		427827	1					
ANR	428894	CompoundStatement		146:47:5502:5502	427827	3					
ANR	428895	IfStatement	if ( blocks [ opno ] . start_opline )		427827	0					
ANR	428896	Condition	blocks [ opno ] . start_opline	260:6:9424:9448	427827	0	True				
ANR	428897	MemberAccess	blocks [ opno ] . start_opline		427827	0					
ANR	428898	ArrayIndexing	blocks [ opno ]		427827	0					
ANR	428899	Identifier	blocks		427827	0					
ANR	428900	Identifier	opno		427827	1					
ANR	428901	Identifier	start_opline		427827	1					
ANR	428902	CompoundStatement		147:33:5537:5537	427827	1					
ANR	428903	ExpressionStatement	cur_block -> len = blocks [ opno ] . start_opline - cur_block -> start_opline	262:3:9487:9555	427827	0	True				
ANR	428904	AssignmentExpression	cur_block -> len = blocks [ opno ] . start_opline - cur_block -> start_opline		427827	0		=			
ANR	428905	PtrMemberAccess	cur_block -> len		427827	0					
ANR	428906	Identifier	cur_block		427827	0					
ANR	428907	Identifier	len		427827	1					
ANR	428908	AdditiveExpression	blocks [ opno ] . start_opline - cur_block -> start_opline		427827	1		-			
ANR	428909	MemberAccess	blocks [ opno ] . start_opline		427827	0					
ANR	428910	ArrayIndexing	blocks [ opno ]		427827	0					
ANR	428911	Identifier	blocks		427827	0					
ANR	428912	Identifier	opno		427827	1					
ANR	428913	Identifier	start_opline		427827	1					
ANR	428914	PtrMemberAccess	cur_block -> start_opline		427827	1					
ANR	428915	Identifier	cur_block		427827	0					
ANR	428916	Identifier	start_opline		427827	1					
ANR	428917	ExpressionStatement	cur_block -> next = & blocks [ opno ]	263:3:9560:9591	427827	1	True				
ANR	428918	AssignmentExpression	cur_block -> next = & blocks [ opno ]		427827	0		=			
ANR	428919	PtrMemberAccess	cur_block -> next		427827	0					
ANR	428920	Identifier	cur_block		427827	0					
ANR	428921	Identifier	next		427827	1					
ANR	428922	UnaryOperationExpression	& blocks [ opno ]		427827	1					
ANR	428923	UnaryOperator	&		427827	0					
ANR	428924	ArrayIndexing	blocks [ opno ]		427827	1					
ANR	428925	Identifier	blocks		427827	0					
ANR	428926	Identifier	opno		427827	1					
ANR	428927	ExpressionStatement	opline = blocks [ opno ] . start_opline - 1	265:3:9644:9682	427827	2	True				
ANR	428928	AssignmentExpression	opline = blocks [ opno ] . start_opline - 1		427827	0		=			
ANR	428929	Identifier	opline		427827	0					
ANR	428930	AdditiveExpression	blocks [ opno ] . start_opline - 1		427827	1		-			
ANR	428931	MemberAccess	blocks [ opno ] . start_opline		427827	0					
ANR	428932	ArrayIndexing	blocks [ opno ]		427827	0					
ANR	428933	Identifier	blocks		427827	0					
ANR	428934	Identifier	opno		427827	1					
ANR	428935	Identifier	start_opline		427827	1					
ANR	428936	PrimaryExpression	1		427827	1					
ANR	428937	IfStatement	if ( opline -> opcode == ZEND_OP_DATA )		427827	3					
ANR	428938	Condition	opline -> opcode == ZEND_OP_DATA	266:7:9691:9720	427827	0	True				
ANR	428939	EqualityExpression	opline -> opcode == ZEND_OP_DATA		427827	0		==			
ANR	428940	PtrMemberAccess	opline -> opcode		427827	0					
ANR	428941	Identifier	opline		427827	0					
ANR	428942	Identifier	opcode		427827	1					
ANR	428943	Identifier	ZEND_OP_DATA		427827	1					
ANR	428944	CompoundStatement		153:39:5809:5809	427827	1					
ANR	428945	ExpressionStatement	opline --	267:4:9729:9737	427827	0	True				
ANR	428946	PostIncDecOperationExpression	opline --		427827	0					
ANR	428947	Identifier	opline		427827	0					
ANR	428948	IncDec	--		427827	1					
ANR	428949	SwitchStatement	switch ( ( unsigned ) opline -> opcode )		427827	4					
ANR	428950	Condition	( unsigned ) opline -> opcode	269:10:9754:9777	427827	0	True				
ANR	428951	CastExpression	( unsigned ) opline -> opcode		427827	0					
ANR	428952	CastTarget	unsigned		427827	0					
ANR	428953	PtrMemberAccess	opline -> opcode		427827	1					
ANR	428954	Identifier	opline		427827	0					
ANR	428955	Identifier	opcode		427827	1					
ANR	428956	CompoundStatement		156:36:5866:5866	427827	1					
ANR	428957	Label	case ZEND_RETURN :	270:4:9786:9802	427827	0	True				
ANR	428958	Identifier	ZEND_RETURN		427827	0					
ANR	428959	Label	case ZEND_RETURN_BY_REF :	271:4:9808:9831	427827	1	True				
ANR	428960	Identifier	ZEND_RETURN_BY_REF		427827	0					
ANR	428961	Label	case ZEND_GENERATOR_RETURN :	272:4:9837:9863	427827	2	True				
ANR	428962	Identifier	ZEND_GENERATOR_RETURN		427827	0					
ANR	428963	Label	case ZEND_EXIT :	273:4:9869:9883	427827	3	True				
ANR	428964	Identifier	ZEND_EXIT		427827	0					
ANR	428965	Label	case ZEND_THROW :	274:4:9889:9904	427827	4	True				
ANR	428966	Identifier	ZEND_THROW		427827	0					
ANR	428967	BreakStatement	break ;	275:5:9911:9916	427827	5	True				
ANR	428968	Label	case ZEND_FAST_CALL :	276:4:9922:9941	427827	6	True				
ANR	428969	Identifier	ZEND_FAST_CALL		427827	0					
ANR	428970	IfStatement	if ( opline -> extended_value )		427827	7					
ANR	428971	Condition	opline -> extended_value	277:9:9952:9973	427827	0	True				
ANR	428972	PtrMemberAccess	opline -> extended_value		427827	0					
ANR	428973	Identifier	opline		427827	0					
ANR	428974	Identifier	extended_value		427827	1					
ANR	428975	CompoundStatement		164:33:6062:6062	427827	1					
ANR	428976	ExpressionStatement	cur_block -> op2_to = & blocks [ ZEND_OP2 ( opline ) . opline_num ]	278:6:9984:10040	427827	0	True				
ANR	428977	AssignmentExpression	cur_block -> op2_to = & blocks [ ZEND_OP2 ( opline ) . opline_num ]		427827	0		=			
ANR	428978	PtrMemberAccess	cur_block -> op2_to		427827	0					
ANR	428979	Identifier	cur_block		427827	0					
ANR	428980	Identifier	op2_to		427827	1					
ANR	428981	UnaryOperationExpression	& blocks [ ZEND_OP2 ( opline ) . opline_num ]		427827	1					
ANR	428982	UnaryOperator	&		427827	0					
ANR	428983	ArrayIndexing	blocks [ ZEND_OP2 ( opline ) . opline_num ]		427827	1					
ANR	428984	Identifier	blocks		427827	0					
ANR	428985	MemberAccess	ZEND_OP2 ( opline ) . opline_num		427827	1					
ANR	428986	CallExpression	ZEND_OP2 ( opline )		427827	0					
ANR	428987	Callee	ZEND_OP2		427827	0					
ANR	428988	Identifier	ZEND_OP2		427827	0					
ANR	428989	ArgumentList	opline		427827	1					
ANR	428990	Argument	opline		427827	0					
ANR	428991	Identifier	opline		427827	0					
ANR	428992	Identifier	opline_num		427827	1					
ANR	428993	ExpressionStatement	cur_block -> op1_to = & blocks [ ZEND_OP1 ( opline ) . opline_num ]	280:5:10054:10110	427827	8	True				
ANR	428994	AssignmentExpression	cur_block -> op1_to = & blocks [ ZEND_OP1 ( opline ) . opline_num ]		427827	0		=			
ANR	428995	PtrMemberAccess	cur_block -> op1_to		427827	0					
ANR	428996	Identifier	cur_block		427827	0					
ANR	428997	Identifier	op1_to		427827	1					
ANR	428998	UnaryOperationExpression	& blocks [ ZEND_OP1 ( opline ) . opline_num ]		427827	1					
ANR	428999	UnaryOperator	&		427827	0					
ANR	429000	ArrayIndexing	blocks [ ZEND_OP1 ( opline ) . opline_num ]		427827	1					
ANR	429001	Identifier	blocks		427827	0					
ANR	429002	MemberAccess	ZEND_OP1 ( opline ) . opline_num		427827	1					
ANR	429003	CallExpression	ZEND_OP1 ( opline )		427827	0					
ANR	429004	Callee	ZEND_OP1		427827	0					
ANR	429005	Identifier	ZEND_OP1		427827	0					
ANR	429006	ArgumentList	opline		427827	1					
ANR	429007	Argument	opline		427827	0					
ANR	429008	Identifier	opline		427827	0					
ANR	429009	Identifier	opline_num		427827	1					
ANR	429010	BreakStatement	break ;	281:5:10117:10122	427827	9	True				
ANR	429011	Label	case ZEND_FAST_RET :	282:4:10128:10146	427827	10	True				
ANR	429012	Identifier	ZEND_FAST_RET		427827	0					
ANR	429013	IfStatement	if ( opline -> extended_value )		427827	11					
ANR	429014	Condition	opline -> extended_value	283:9:10157:10178	427827	0	True				
ANR	429015	PtrMemberAccess	opline -> extended_value		427827	0					
ANR	429016	Identifier	opline		427827	0					
ANR	429017	Identifier	extended_value		427827	1					
ANR	429018	CompoundStatement		170:33:6267:6267	427827	1					
ANR	429019	ExpressionStatement	cur_block -> op2_to = & blocks [ ZEND_OP2 ( opline ) . opline_num ]	284:6:10189:10245	427827	0	True				
ANR	429020	AssignmentExpression	cur_block -> op2_to = & blocks [ ZEND_OP2 ( opline ) . opline_num ]		427827	0		=			
ANR	429021	PtrMemberAccess	cur_block -> op2_to		427827	0					
ANR	429022	Identifier	cur_block		427827	0					
ANR	429023	Identifier	op2_to		427827	1					
ANR	429024	UnaryOperationExpression	& blocks [ ZEND_OP2 ( opline ) . opline_num ]		427827	1					
ANR	429025	UnaryOperator	&		427827	0					
ANR	429026	ArrayIndexing	blocks [ ZEND_OP2 ( opline ) . opline_num ]		427827	1					
ANR	429027	Identifier	blocks		427827	0					
ANR	429028	MemberAccess	ZEND_OP2 ( opline ) . opline_num		427827	1					
ANR	429029	CallExpression	ZEND_OP2 ( opline )		427827	0					
ANR	429030	Callee	ZEND_OP2		427827	0					
ANR	429031	Identifier	ZEND_OP2		427827	0					
ANR	429032	ArgumentList	opline		427827	1					
ANR	429033	Argument	opline		427827	0					
ANR	429034	Identifier	opline		427827	0					
ANR	429035	Identifier	opline_num		427827	1					
ANR	429036	BreakStatement	break ;	286:5:10259:10264	427827	12	True				
ANR	429037	Label	case ZEND_JMP :	287:4:10270:10283	427827	13	True				
ANR	429038	Identifier	ZEND_JMP		427827	0					
ANR	429039	ExpressionStatement	cur_block -> op1_to = & blocks [ ZEND_OP1 ( opline ) . opline_num ]	288:5:10290:10346	427827	14	True				
ANR	429040	AssignmentExpression	cur_block -> op1_to = & blocks [ ZEND_OP1 ( opline ) . opline_num ]		427827	0		=			
ANR	429041	PtrMemberAccess	cur_block -> op1_to		427827	0					
ANR	429042	Identifier	cur_block		427827	0					
ANR	429043	Identifier	op1_to		427827	1					
ANR	429044	UnaryOperationExpression	& blocks [ ZEND_OP1 ( opline ) . opline_num ]		427827	1					
ANR	429045	UnaryOperator	&		427827	0					
ANR	429046	ArrayIndexing	blocks [ ZEND_OP1 ( opline ) . opline_num ]		427827	1					
ANR	429047	Identifier	blocks		427827	0					
ANR	429048	MemberAccess	ZEND_OP1 ( opline ) . opline_num		427827	1					
ANR	429049	CallExpression	ZEND_OP1 ( opline )		427827	0					
ANR	429050	Callee	ZEND_OP1		427827	0					
ANR	429051	Identifier	ZEND_OP1		427827	0					
ANR	429052	ArgumentList	opline		427827	1					
ANR	429053	Argument	opline		427827	0					
ANR	429054	Identifier	opline		427827	0					
ANR	429055	Identifier	opline_num		427827	1					
ANR	429056	BreakStatement	break ;	289:5:10353:10358	427827	15	True				
ANR	429057	Label	case ZEND_DECLARE_ANON_CLASS :	290:4:10364:10392	427827	16	True				
ANR	429058	Identifier	ZEND_DECLARE_ANON_CLASS		427827	0					
ANR	429059	Label	case ZEND_DECLARE_ANON_INHERITED_CLASS :	291:4:10398:10436	427827	17	True				
ANR	429060	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS		427827	0					
ANR	429061	ExpressionStatement	cur_block -> op1_to = & blocks [ ZEND_OP1 ( opline ) . opline_num ]	292:5:10443:10499	427827	18	True				
ANR	429062	AssignmentExpression	cur_block -> op1_to = & blocks [ ZEND_OP1 ( opline ) . opline_num ]		427827	0		=			
ANR	429063	PtrMemberAccess	cur_block -> op1_to		427827	0					
ANR	429064	Identifier	cur_block		427827	0					
ANR	429065	Identifier	op1_to		427827	1					
ANR	429066	UnaryOperationExpression	& blocks [ ZEND_OP1 ( opline ) . opline_num ]		427827	1					
ANR	429067	UnaryOperator	&		427827	0					
ANR	429068	ArrayIndexing	blocks [ ZEND_OP1 ( opline ) . opline_num ]		427827	1					
ANR	429069	Identifier	blocks		427827	0					
ANR	429070	MemberAccess	ZEND_OP1 ( opline ) . opline_num		427827	1					
ANR	429071	CallExpression	ZEND_OP1 ( opline )		427827	0					
ANR	429072	Callee	ZEND_OP1		427827	0					
ANR	429073	Identifier	ZEND_OP1		427827	0					
ANR	429074	ArgumentList	opline		427827	1					
ANR	429075	Argument	opline		427827	0					
ANR	429076	Identifier	opline		427827	0					
ANR	429077	Identifier	opline_num		427827	1					
ANR	429078	ExpressionStatement	cur_block -> follow_to = & blocks [ opno ]	293:5:10506:10542	427827	19	True				
ANR	429079	AssignmentExpression	cur_block -> follow_to = & blocks [ opno ]		427827	0		=			
ANR	429080	PtrMemberAccess	cur_block -> follow_to		427827	0					
ANR	429081	Identifier	cur_block		427827	0					
ANR	429082	Identifier	follow_to		427827	1					
ANR	429083	UnaryOperationExpression	& blocks [ opno ]		427827	1					
ANR	429084	UnaryOperator	&		427827	0					
ANR	429085	ArrayIndexing	blocks [ opno ]		427827	1					
ANR	429086	Identifier	blocks		427827	0					
ANR	429087	Identifier	opno		427827	1					
ANR	429088	BreakStatement	break ;	294:5:10549:10554	427827	20	True				
ANR	429089	Label	case ZEND_JMPZNZ :	295:4:10560:10576	427827	21	True				
ANR	429090	Identifier	ZEND_JMPZNZ		427827	0					
ANR	429091	ExpressionStatement	cur_block -> op2_to = & blocks [ ZEND_OP2 ( opline ) . opline_num ]	296:5:10583:10639	427827	22	True				
ANR	429092	AssignmentExpression	cur_block -> op2_to = & blocks [ ZEND_OP2 ( opline ) . opline_num ]		427827	0		=			
ANR	429093	PtrMemberAccess	cur_block -> op2_to		427827	0					
ANR	429094	Identifier	cur_block		427827	0					
ANR	429095	Identifier	op2_to		427827	1					
ANR	429096	UnaryOperationExpression	& blocks [ ZEND_OP2 ( opline ) . opline_num ]		427827	1					
ANR	429097	UnaryOperator	&		427827	0					
ANR	429098	ArrayIndexing	blocks [ ZEND_OP2 ( opline ) . opline_num ]		427827	1					
ANR	429099	Identifier	blocks		427827	0					
ANR	429100	MemberAccess	ZEND_OP2 ( opline ) . opline_num		427827	1					
ANR	429101	CallExpression	ZEND_OP2 ( opline )		427827	0					
ANR	429102	Callee	ZEND_OP2		427827	0					
ANR	429103	Identifier	ZEND_OP2		427827	0					
ANR	429104	ArgumentList	opline		427827	1					
ANR	429105	Argument	opline		427827	0					
ANR	429106	Identifier	opline		427827	0					
ANR	429107	Identifier	opline_num		427827	1					
ANR	429108	ExpressionStatement	cur_block -> ext_to = & blocks [ opline -> extended_value ]	297:5:10646:10697	427827	23	True				
ANR	429109	AssignmentExpression	cur_block -> ext_to = & blocks [ opline -> extended_value ]		427827	0		=			
ANR	429110	PtrMemberAccess	cur_block -> ext_to		427827	0					
ANR	429111	Identifier	cur_block		427827	0					
ANR	429112	Identifier	ext_to		427827	1					
ANR	429113	UnaryOperationExpression	& blocks [ opline -> extended_value ]		427827	1					
ANR	429114	UnaryOperator	&		427827	0					
ANR	429115	ArrayIndexing	blocks [ opline -> extended_value ]		427827	1					
ANR	429116	Identifier	blocks		427827	0					
ANR	429117	PtrMemberAccess	opline -> extended_value		427827	1					
ANR	429118	Identifier	opline		427827	0					
ANR	429119	Identifier	extended_value		427827	1					
ANR	429120	BreakStatement	break ;	298:5:10704:10709	427827	24	True				
ANR	429121	Label	case ZEND_CATCH :	299:4:10715:10730	427827	25	True				
ANR	429122	Identifier	ZEND_CATCH		427827	0					
ANR	429123	ExpressionStatement	cur_block -> ext_to = & blocks [ opline -> extended_value ]	300:5:10737:10788	427827	26	True				
ANR	429124	AssignmentExpression	cur_block -> ext_to = & blocks [ opline -> extended_value ]		427827	0		=			
ANR	429125	PtrMemberAccess	cur_block -> ext_to		427827	0					
ANR	429126	Identifier	cur_block		427827	0					
ANR	429127	Identifier	ext_to		427827	1					
ANR	429128	UnaryOperationExpression	& blocks [ opline -> extended_value ]		427827	1					
ANR	429129	UnaryOperator	&		427827	0					
ANR	429130	ArrayIndexing	blocks [ opline -> extended_value ]		427827	1					
ANR	429131	Identifier	blocks		427827	0					
ANR	429132	PtrMemberAccess	opline -> extended_value		427827	1					
ANR	429133	Identifier	opline		427827	0					
ANR	429134	Identifier	extended_value		427827	1					
ANR	429135	ExpressionStatement	cur_block -> follow_to = & blocks [ opno ]	301:5:10795:10831	427827	27	True				
ANR	429136	AssignmentExpression	cur_block -> follow_to = & blocks [ opno ]		427827	0		=			
ANR	429137	PtrMemberAccess	cur_block -> follow_to		427827	0					
ANR	429138	Identifier	cur_block		427827	0					
ANR	429139	Identifier	follow_to		427827	1					
ANR	429140	UnaryOperationExpression	& blocks [ opno ]		427827	1					
ANR	429141	UnaryOperator	&		427827	0					
ANR	429142	ArrayIndexing	blocks [ opno ]		427827	1					
ANR	429143	Identifier	blocks		427827	0					
ANR	429144	Identifier	opno		427827	1					
ANR	429145	BreakStatement	break ;	302:5:10838:10843	427827	28	True				
ANR	429146	Label	case ZEND_FE_FETCH_R :	303:4:10849:10869	427827	29	True				
ANR	429147	Identifier	ZEND_FE_FETCH_R		427827	0					
ANR	429148	Label	case ZEND_FE_FETCH_RW :	304:4:10875:10896	427827	30	True				
ANR	429149	Identifier	ZEND_FE_FETCH_RW		427827	0					
ANR	429150	ExpressionStatement	cur_block -> ext_to = & blocks [ opline -> extended_value ]	305:5:10903:10954	427827	31	True				
ANR	429151	AssignmentExpression	cur_block -> ext_to = & blocks [ opline -> extended_value ]		427827	0		=			
ANR	429152	PtrMemberAccess	cur_block -> ext_to		427827	0					
ANR	429153	Identifier	cur_block		427827	0					
ANR	429154	Identifier	ext_to		427827	1					
ANR	429155	UnaryOperationExpression	& blocks [ opline -> extended_value ]		427827	1					
ANR	429156	UnaryOperator	&		427827	0					
ANR	429157	ArrayIndexing	blocks [ opline -> extended_value ]		427827	1					
ANR	429158	Identifier	blocks		427827	0					
ANR	429159	PtrMemberAccess	opline -> extended_value		427827	1					
ANR	429160	Identifier	opline		427827	0					
ANR	429161	Identifier	extended_value		427827	1					
ANR	429162	ExpressionStatement	cur_block -> follow_to = & blocks [ opno ]	306:5:10961:10997	427827	32	True				
ANR	429163	AssignmentExpression	cur_block -> follow_to = & blocks [ opno ]		427827	0		=			
ANR	429164	PtrMemberAccess	cur_block -> follow_to		427827	0					
ANR	429165	Identifier	cur_block		427827	0					
ANR	429166	Identifier	follow_to		427827	1					
ANR	429167	UnaryOperationExpression	& blocks [ opno ]		427827	1					
ANR	429168	UnaryOperator	&		427827	0					
ANR	429169	ArrayIndexing	blocks [ opno ]		427827	1					
ANR	429170	Identifier	blocks		427827	0					
ANR	429171	Identifier	opno		427827	1					
ANR	429172	BreakStatement	break ;	307:5:11004:11009	427827	33	True				
ANR	429173	Label	case ZEND_JMPZ :	308:4:11015:11029	427827	34	True				
ANR	429174	Identifier	ZEND_JMPZ		427827	0					
ANR	429175	Label	case ZEND_JMPNZ :	309:4:11035:11050	427827	35	True				
ANR	429176	Identifier	ZEND_JMPNZ		427827	0					
ANR	429177	Label	case ZEND_JMPZ_EX :	310:4:11056:11073	427827	36	True				
ANR	429178	Identifier	ZEND_JMPZ_EX		427827	0					
ANR	429179	Label	case ZEND_JMPNZ_EX :	311:4:11079:11097	427827	37	True				
ANR	429180	Identifier	ZEND_JMPNZ_EX		427827	0					
ANR	429181	Label	case ZEND_FE_RESET_R :	312:4:11103:11123	427827	38	True				
ANR	429182	Identifier	ZEND_FE_RESET_R		427827	0					
ANR	429183	Label	case ZEND_FE_RESET_RW :	313:4:11129:11150	427827	39	True				
ANR	429184	Identifier	ZEND_FE_RESET_RW		427827	0					
ANR	429185	Label	case ZEND_NEW :	314:4:11156:11169	427827	40	True				
ANR	429186	Identifier	ZEND_NEW		427827	0					
ANR	429187	Label	case ZEND_JMP_SET :	315:4:11175:11192	427827	41	True				
ANR	429188	Identifier	ZEND_JMP_SET		427827	0					
ANR	429189	Label	case ZEND_COALESCE :	316:4:11198:11216	427827	42	True				
ANR	429190	Identifier	ZEND_COALESCE		427827	0					
ANR	429191	Label	case ZEND_ASSERT_CHECK :	317:4:11222:11244	427827	43	True				
ANR	429192	Identifier	ZEND_ASSERT_CHECK		427827	0					
ANR	429193	ExpressionStatement	cur_block -> op2_to = & blocks [ ZEND_OP2 ( opline ) . opline_num ]	318:5:11251:11307	427827	44	True				
ANR	429194	AssignmentExpression	cur_block -> op2_to = & blocks [ ZEND_OP2 ( opline ) . opline_num ]		427827	0		=			
ANR	429195	PtrMemberAccess	cur_block -> op2_to		427827	0					
ANR	429196	Identifier	cur_block		427827	0					
ANR	429197	Identifier	op2_to		427827	1					
ANR	429198	UnaryOperationExpression	& blocks [ ZEND_OP2 ( opline ) . opline_num ]		427827	1					
ANR	429199	UnaryOperator	&		427827	0					
ANR	429200	ArrayIndexing	blocks [ ZEND_OP2 ( opline ) . opline_num ]		427827	1					
ANR	429201	Identifier	blocks		427827	0					
ANR	429202	MemberAccess	ZEND_OP2 ( opline ) . opline_num		427827	1					
ANR	429203	CallExpression	ZEND_OP2 ( opline )		427827	0					
ANR	429204	Callee	ZEND_OP2		427827	0					
ANR	429205	Identifier	ZEND_OP2		427827	0					
ANR	429206	ArgumentList	opline		427827	1					
ANR	429207	Argument	opline		427827	0					
ANR	429208	Identifier	opline		427827	0					
ANR	429209	Identifier	opline_num		427827	1					
ANR	429210	Label	default :	320:4:11352:11359	427827	45	True				
ANR	429211	Identifier	default		427827	0					
ANR	429212	ExpressionStatement	cur_block -> follow_to = & blocks [ opno ]	322:5:11401:11437	427827	46	True				
ANR	429213	AssignmentExpression	cur_block -> follow_to = & blocks [ opno ]		427827	0		=			
ANR	429214	PtrMemberAccess	cur_block -> follow_to		427827	0					
ANR	429215	Identifier	cur_block		427827	0					
ANR	429216	Identifier	follow_to		427827	1					
ANR	429217	UnaryOperationExpression	& blocks [ opno ]		427827	1					
ANR	429218	UnaryOperator	&		427827	0					
ANR	429219	ArrayIndexing	blocks [ opno ]		427827	1					
ANR	429220	Identifier	blocks		427827	0					
ANR	429221	Identifier	opno		427827	1					
ANR	429222	BreakStatement	break ;	323:5:11444:11449	427827	47	True				
ANR	429223	ExpressionStatement	"print_block ( cur_block , op_array -> opcodes , """" )"	325:3:11459:11504	427827	5	True				
ANR	429224	CallExpression	"print_block ( cur_block , op_array -> opcodes , """" )"		427827	0					
ANR	429225	Callee	print_block		427827	0					
ANR	429226	Identifier	print_block		427827	0					
ANR	429227	ArgumentList	cur_block		427827	1					
ANR	429228	Argument	cur_block		427827	0					
ANR	429229	Identifier	cur_block		427827	0					
ANR	429230	Argument	op_array -> opcodes		427827	1					
ANR	429231	PtrMemberAccess	op_array -> opcodes		427827	0					
ANR	429232	Identifier	op_array		427827	0					
ANR	429233	Identifier	opcodes		427827	1					
ANR	429234	Argument	""""""		427827	2					
ANR	429235	PrimaryExpression	""""""		427827	0					
ANR	429236	ExpressionStatement	cur_block = cur_block -> next	326:3:11509:11536	427827	6	True				
ANR	429237	AssignmentExpression	cur_block = cur_block -> next		427827	0		=			
ANR	429238	Identifier	cur_block		427827	0					
ANR	429239	PtrMemberAccess	cur_block -> next		427827	1					
ANR	429240	Identifier	cur_block		427827	0					
ANR	429241	Identifier	next		427827	1					
ANR	429242	ExpressionStatement	cur_block -> len = end - cur_block -> start_opline	329:1:11546:11592	427827	14	True				
ANR	429243	AssignmentExpression	cur_block -> len = end - cur_block -> start_opline		427827	0		=			
ANR	429244	PtrMemberAccess	cur_block -> len		427827	0					
ANR	429245	Identifier	cur_block		427827	0					
ANR	429246	Identifier	len		427827	1					
ANR	429247	AdditiveExpression	end - cur_block -> start_opline		427827	1		-			
ANR	429248	Identifier	end		427827	0					
ANR	429249	PtrMemberAccess	cur_block -> start_opline		427827	1					
ANR	429250	Identifier	cur_block		427827	0					
ANR	429251	Identifier	start_opline		427827	1					
ANR	429252	ExpressionStatement	cur_block -> next = & blocks [ op_array -> last + 1 ]	330:1:11595:11640	427827	15	True				
ANR	429253	AssignmentExpression	cur_block -> next = & blocks [ op_array -> last + 1 ]		427827	0		=			
ANR	429254	PtrMemberAccess	cur_block -> next		427827	0					
ANR	429255	Identifier	cur_block		427827	0					
ANR	429256	Identifier	next		427827	1					
ANR	429257	UnaryOperationExpression	& blocks [ op_array -> last + 1 ]		427827	1					
ANR	429258	UnaryOperator	&		427827	0					
ANR	429259	ArrayIndexing	blocks [ op_array -> last + 1 ]		427827	1					
ANR	429260	Identifier	blocks		427827	0					
ANR	429261	AdditiveExpression	op_array -> last + 1		427827	1		+			
ANR	429262	PtrMemberAccess	op_array -> last		427827	0					
ANR	429263	Identifier	op_array		427827	0					
ANR	429264	Identifier	last		427827	1					
ANR	429265	PrimaryExpression	1		427827	1					
ANR	429266	ExpressionStatement	"print_block ( cur_block , op_array -> opcodes , """" )"	331:1:11643:11688	427827	16	True				
ANR	429267	CallExpression	"print_block ( cur_block , op_array -> opcodes , """" )"		427827	0					
ANR	429268	Callee	print_block		427827	0					
ANR	429269	Identifier	print_block		427827	0					
ANR	429270	ArgumentList	cur_block		427827	1					
ANR	429271	Argument	cur_block		427827	0					
ANR	429272	Identifier	cur_block		427827	0					
ANR	429273	Argument	op_array -> opcodes		427827	1					
ANR	429274	PtrMemberAccess	op_array -> opcodes		427827	0					
ANR	429275	Identifier	op_array		427827	0					
ANR	429276	Identifier	opcodes		427827	1					
ANR	429277	Argument	""""""		427827	2					
ANR	429278	PrimaryExpression	""""""		427827	0					
ANR	429279	ReturnStatement	return 1 ;	333:1:11692:11700	427827	17	True				
ANR	429280	PrimaryExpression	1		427827	0					
ANR	429281	ReturnType	static int		427827	1					
ANR	429282	Identifier	find_code_blocks		427827	2					
ANR	429283	ParameterList	"zend_op_array * op_array , zend_cfg * cfg , zend_optimizer_ctx * ctx"		427827	3					
ANR	429284	Parameter	zend_op_array * op_array	113:28:3848:3870	427827	0	True				
ANR	429285	ParameterType	zend_op_array *		427827	0					
ANR	429286	Identifier	op_array		427827	1					
ANR	429287	Parameter	zend_cfg * cfg	113:53:3873:3885	427827	1	True				
ANR	429288	ParameterType	zend_cfg *		427827	0					
ANR	429289	Identifier	cfg		427827	1					
ANR	429290	Parameter	zend_optimizer_ctx * ctx	113:68:3888:3910	427827	2	True				
ANR	429291	ParameterType	zend_optimizer_ctx *		427827	0					
ANR	429292	Identifier	ctx		427827	1					
ANR	429293	CFGEntryNode	ENTRY		427827		True				
ANR	429294	CFGExitNode	EXIT		427827		True				
ANR	429295	CFGErrorNode	ERROR		427827		True				
ANR	429296	CFGErrorNode	ERROR		427827		True				
ANR	429297	Symbol	* * op_array -> brk_cont_array		427827						
ANR	429298	Symbol	op_array -> brk_cont_array [ parent ] . parent		427827						
ANR	429299	Symbol	* cfg -> loop_brk		427827						
ANR	429300	Symbol	ZEND_FREE		427827						
ANR	429301	Symbol	parent		427827						
ANR	429302	Symbol	* * * op_array		427827						
ANR	429303	Symbol	* parent		427827						
ANR	429304	Symbol	ZEND_OP1 ( opline ) . opline_num		427827						
ANR	429305	Symbol	* * op_array -> try_catch_array		427827						
ANR	429306	Symbol	zend_arena_calloc		427827						
ANR	429307	Symbol	ZEND_FE_FREE		427827						
ANR	429308	Symbol	ZEND_OP_DATA		427827						
ANR	429309	Symbol	opline -> extended_value		427827						
ANR	429310	Symbol	op_array -> brk_cont_array [ j ] . brk		427827						
ANR	429311	Symbol	cfg -> loop_brk		427827						
ANR	429312	Symbol	blocks [ op_array -> brk_cont_array [ j ] . start ] . protected		427827						
ANR	429313	Symbol	opline		427827						
ANR	429314	Symbol	* cur_block		427827						
ANR	429315	Symbol	cur_block -> start_opline		427827						
ANR	429316	Symbol	cur_block -> op1_to		427827						
ANR	429317	Symbol	op_array -> try_catch_array		427827						
ANR	429318	Symbol	op_array -> brk_cont_array [ parent ] . start		427827						
ANR	429319	Symbol	* * j		427827						
ANR	429320	Symbol	cur_block -> follow_to		427827						
ANR	429321	Symbol	* * i		427827						
ANR	429322	Symbol	NULL		427827						
ANR	429323	Symbol	blocks [ op_array -> try_catch_array [ i ] . try_op ] . protected		427827						
ANR	429324	Symbol	* blocks		427827						
ANR	429325	Symbol	ctx		427827						
ANR	429326	Symbol	op_array -> opcodes [ op_array -> brk_cont_array [ i ] . brk ] . opcode		427827						
ANR	429327	Symbol	* op_array		427827						
ANR	429328	Symbol	op_array -> last		427827						
ANR	429329	Symbol	cur_block -> len		427827						
ANR	429330	Symbol	* cfg		427827						
ANR	429331	Symbol	ZEND_OP2 ( opline ) . opline_num		427827						
ANR	429332	Symbol	* op_array -> brk_cont_array [ i ] . brk		427827						
ANR	429333	Symbol	op_array -> brk_cont_array [ parent ] . brk		427827						
ANR	429334	Symbol	cur_block -> next		427827						
ANR	429335	Symbol	cur_block -> op2_to		427827						
ANR	429336	Symbol	* * cfg		427827						
ANR	429337	Symbol	* op_array -> brk_cont_array [ parent ] . brk		427827						
ANR	429338	Symbol	op_array -> try_catch_array [ i ] . catch_op		427827						
ANR	429339	Symbol	cfg -> loop_start		427827						
ANR	429340	Symbol	* opno		427827						
ANR	429341	Symbol	* * op_array		427827						
ANR	429342	Symbol	op_array -> brk_cont_array [ i ] . brk		427827						
ANR	429343	Symbol	cfg -> blocks		427827						
ANR	429344	Symbol	op_array -> try_catch_array [ i ] . try_op		427827						
ANR	429345	Symbol	blocks [ op_array -> brk_cont_array [ j ] . brk ] . protected		427827						
ANR	429346	Symbol	* op_array -> try_catch_array		427827						
ANR	429347	Symbol	op_array -> brk_cont_array [ j ] . cont		427827						
ANR	429348	Symbol	op_array -> brk_cont_array		427827						
ANR	429349	Symbol	op_array -> opcodes		427827						
ANR	429350	Symbol	op_array -> brk_cont_array [ i ] . parent		427827						
ANR	429351	Symbol	cur_block		427827						
ANR	429352	Symbol	opno		427827						
ANR	429353	Symbol	blocks [ opno ] . start_opline		427827						
ANR	429354	Symbol	end		427827						
ANR	429355	Symbol	blocks [ 0 ] . start_opline_no		427827						
ANR	429356	Symbol	ZEND_END_SILENCE		427827						
ANR	429357	Symbol	op_array -> brk_cont_array [ j ] . start		427827						
ANR	429358	Symbol	cfg -> loop_cont		427827						
ANR	429359	Symbol	cfg		427827						
ANR	429360	Symbol	op_array -> brk_cont_array [ i ] . start		427827						
ANR	429361	Symbol	* op_array -> brk_cont_array		427827						
ANR	429362	Symbol	blocks		427827						
ANR	429363	Symbol	cur_block -> ext_to		427827						
ANR	429364	Symbol	* * parent		427827						
ANR	429365	Symbol	i		427827						
ANR	429366	Symbol	* op_array -> brk_cont_array [ j ] . brk		427827						
ANR	429367	Symbol	j		427827						
ANR	429368	Symbol	ZEND_OP1		427827						
ANR	429369	Symbol	blocks [ 0 ] . start_opline		427827						
ANR	429370	Symbol	ZEND_OP2		427827						
ANR	429371	Symbol	op_array -> last_try_catch		427827						
ANR	429372	Symbol	op_array -> last_brk_cont		427827						
ANR	429373	Symbol	* op_array -> brk_cont_array [ j ] . start		427827						
ANR	429374	Symbol	& ctx -> arena		427827						
ANR	429375	Symbol	* i		427827						
ANR	429376	Symbol	* opline		427827						
ANR	429377	Symbol	* j		427827						
ANR	429378	Symbol	* cfg -> loop_start		427827						
ANR	429379	Symbol	* cfg -> loop_cont		427827						
ANR	429380	Symbol	opline -> opcode		427827						
ANR	429381	Symbol	op_array -> opcodes [ op_array -> brk_cont_array [ parent ] . brk ] . opcode		427827						
ANR	429382	Symbol	* op_array -> try_catch_array [ i ] . try_op		427827						
ANR	429383	Symbol	ZEND_ROPE_END		427827						
ANR	429384	Symbol	op_array		427827						
ANR	429385	Symbol	* op_array -> opcodes		427827						
ANR	429386	DeclStmt									
ANR	429387	Decl							zend_block_source	zend_block_source *	__s
ANR	429388	DeclStmt									
ANR	429389	Decl							zend_block_source	zend_block_source *	__t
ANR	429390	DeclStmt									
ANR	429391	Decl							zend_block_source	zend_block_source * *	cs
ANR	429392	DeclStmt									
ANR	429393	Decl							int	int	found
ANR	429394	Function	del_source	380:0:12626:14402							
ANR	429395	FunctionDef	"del_source (zend_code_block * from , zend_code_block * to)"		429394	0					
ANR	429396	CompoundStatement		381:0:12700:14402	429394	0					
ANR	429397	IdentifierDeclStatement	zend_block_source * * cs = & to -> sources ;	383:1:12756:12793	429394	0	True				
ANR	429398	IdentifierDecl	* * cs = & to -> sources		429394	0					
ANR	429399	IdentifierDeclType	zend_block_source * *		429394	0					
ANR	429400	Identifier	cs		429394	1					
ANR	429401	AssignmentExpression	* * cs = & to -> sources		429394	2		=			
ANR	429402	Identifier	cs		429394	0					
ANR	429403	UnaryOperationExpression	& to -> sources		429394	1					
ANR	429404	UnaryOperator	&		429394	0					
ANR	429405	PtrMemberAccess	to -> sources		429394	1					
ANR	429406	Identifier	to		429394	0					
ANR	429407	Identifier	sources		429394	1					
ANR	429408	IfStatement	if ( to -> sources == NULL )		429394	1					
ANR	429409	Condition	to -> sources == NULL	385:5:12801:12819	429394	0	True				
ANR	429410	EqualityExpression	to -> sources == NULL		429394	0		==			
ANR	429411	PtrMemberAccess	to -> sources		429394	0					
ANR	429412	Identifier	to		429394	0					
ANR	429413	Identifier	sources		429394	1					
ANR	429414	Identifier	NULL		429394	1					
ANR	429415	CompoundStatement		5:26:121:121	429394	1					
ANR	429416	ExpressionStatement	to -> access = 0	386:2:12826:12840	429394	0	True				
ANR	429417	AssignmentExpression	to -> access = 0		429394	0		=			
ANR	429418	PtrMemberAccess	to -> access		429394	0					
ANR	429419	Identifier	to		429394	0					
ANR	429420	Identifier	access		429394	1					
ANR	429421	PrimaryExpression	0		429394	1					
ANR	429422	ReturnStatement	return ;	387:2:12844:12850	429394	1	True				
ANR	429423	IfStatement	if ( from == to )		429394	2					
ANR	429424	Condition	from == to	390:5:12861:12870	429394	0	True				
ANR	429425	EqualityExpression	from == to		429394	0		==			
ANR	429426	Identifier	from		429394	0					
ANR	429427	Identifier	to		429394	1					
ANR	429428	CompoundStatement		10:17:172:172	429394	1					
ANR	429429	ReturnStatement	return ;	391:2:12877:12883	429394	0	True				
ANR	429430	WhileStatement	while ( * cs )		429394	3					
ANR	429431	Condition	* cs	394:8:12897:12899	429394	0	True				
ANR	429432	UnaryOperationExpression	* cs		429394	0					
ANR	429433	UnaryOperator	*		429394	0					
ANR	429434	Identifier	cs		429394	1					
ANR	429435	CompoundStatement		14:13:201:201	429394	1					
ANR	429436	IfStatement	if ( ( * cs ) -> from == from )		429394	0					
ANR	429437	Condition	( * cs ) -> from == from	395:6:12910:12928	429394	0	True				
ANR	429438	EqualityExpression	( * cs ) -> from == from		429394	0		==			
ANR	429439	PtrMemberAccess	( * cs ) -> from		429394	0					
ANR	429440	UnaryOperationExpression	* cs		429394	0					
ANR	429441	UnaryOperator	*		429394	0					
ANR	429442	Identifier	cs		429394	1					
ANR	429443	Identifier	from		429394	1					
ANR	429444	Identifier	from		429394	1					
ANR	429445	CompoundStatement		15:27:230:230	429394	1					
ANR	429446	ExpressionStatement	DEL_SOURCE ( cs )	396:4:12937:12951	429394	0	True				
ANR	429447	CallExpression	DEL_SOURCE ( cs )		429394	0					
ANR	429448	Callee	DEL_SOURCE		429394	0					
ANR	429449	Identifier	DEL_SOURCE		429394	0					
ANR	429450	ArgumentList	cs		429394	1					
ANR	429451	Argument	cs		429394	0					
ANR	429452	Identifier	cs		429394	0					
ANR	429453	BreakStatement	break ;	397:3:12956:12961	429394	1	True				
ANR	429454	ExpressionStatement	cs = & ( ( * cs ) -> next )	399:2:12969:12988	429394	1	True				
ANR	429455	AssignmentExpression	cs = & ( ( * cs ) -> next )		429394	0		=			
ANR	429456	Identifier	cs		429394	0					
ANR	429457	UnaryOperationExpression	& ( ( * cs ) -> next )		429394	1					
ANR	429458	UnaryOperator	&		429394	0					
ANR	429459	PtrMemberAccess	( * cs ) -> next		429394	1					
ANR	429460	UnaryOperationExpression	* cs		429394	0					
ANR	429461	UnaryOperator	*		429394	0					
ANR	429462	Identifier	cs		429394	1					
ANR	429463	Identifier	next		429394	1					
ANR	429464	IfStatement	if ( to -> sources == NULL )		429394	4					
ANR	429465	Condition	to -> sources == NULL	402:5:12999:13017	429394	0	True				
ANR	429466	EqualityExpression	to -> sources == NULL		429394	0		==			
ANR	429467	PtrMemberAccess	to -> sources		429394	0					
ANR	429468	Identifier	to		429394	0					
ANR	429469	Identifier	sources		429394	1					
ANR	429470	Identifier	NULL		429394	1					
ANR	429471	CompoundStatement		22:26:319:319	429394	1					
ANR	429472	ExpressionStatement	to -> access = 0	404:2:13089:13103	429394	0	True				
ANR	429473	AssignmentExpression	to -> access = 0		429394	0		=			
ANR	429474	PtrMemberAccess	to -> access		429394	0					
ANR	429475	Identifier	to		429394	0					
ANR	429476	Identifier	access		429394	1					
ANR	429477	PrimaryExpression	0		429394	1					
ANR	429478	ReturnStatement	return ;	405:2:13107:13113	429394	1	True				
ANR	429479	IfStatement	if ( ! to -> protected && to -> sources -> next == NULL )		429394	5					
ANR	429480	Condition	! to -> protected && to -> sources -> next == NULL	408:5:13124:13166	429394	0	True				
ANR	429481	AndExpression	! to -> protected && to -> sources -> next == NULL		429394	0		&&			
ANR	429482	UnaryOperationExpression	! to -> protected		429394	0					
ANR	429483	UnaryOperator	!		429394	0					
ANR	429484	PtrMemberAccess	to -> protected		429394	1					
ANR	429485	Identifier	to		429394	0					
ANR	429486	Identifier	protected		429394	1					
ANR	429487	EqualityExpression	to -> sources -> next == NULL		429394	1		==			
ANR	429488	PtrMemberAccess	to -> sources -> next		429394	0					
ANR	429489	PtrMemberAccess	to -> sources		429394	0					
ANR	429490	Identifier	to		429394	0					
ANR	429491	Identifier	sources		429394	1					
ANR	429492	Identifier	next		429394	1					
ANR	429493	Identifier	NULL		429394	1					
ANR	429494	CompoundStatement		30:2:505:552	429394	1					
ANR	429495	IdentifierDeclStatement	zend_code_block * from_block = to -> sources -> from ;	410:2:13206:13253	429394	0	True				
ANR	429496	IdentifierDecl	* from_block = to -> sources -> from		429394	0					
ANR	429497	IdentifierDeclType	zend_code_block *		429394	0					
ANR	429498	Identifier	from_block		429394	1					
ANR	429499	AssignmentExpression	* from_block = to -> sources -> from		429394	2		=			
ANR	429500	Identifier	from_block		429394	0					
ANR	429501	PtrMemberAccess	to -> sources -> from		429394	1					
ANR	429502	PtrMemberAccess	to -> sources		429394	0					
ANR	429503	Identifier	to		429394	0					
ANR	429504	Identifier	sources		429394	1					
ANR	429505	Identifier	from		429394	1					
ANR	429506	IfStatement	if ( from_block -> access && from_block -> follow_to == to && from_block -> op1_to == NULL && from_block -> op2_to == NULL && from_block -> ext_to == NULL )		429394	1					
ANR	429507	Condition	from_block -> access && from_block -> follow_to == to && from_block -> op1_to == NULL && from_block -> op2_to == NULL && from_block -> ext_to == NULL	412:6:13262:13418	429394	0	True				
ANR	429508	AndExpression	from_block -> access && from_block -> follow_to == to && from_block -> op1_to == NULL && from_block -> op2_to == NULL && from_block -> ext_to == NULL		429394	0		&&			
ANR	429509	PtrMemberAccess	from_block -> access		429394	0					
ANR	429510	Identifier	from_block		429394	0					
ANR	429511	Identifier	access		429394	1					
ANR	429512	AndExpression	from_block -> follow_to == to && from_block -> op1_to == NULL && from_block -> op2_to == NULL && from_block -> ext_to == NULL		429394	1		&&			
ANR	429513	EqualityExpression	from_block -> follow_to == to		429394	0		==			
ANR	429514	PtrMemberAccess	from_block -> follow_to		429394	0					
ANR	429515	Identifier	from_block		429394	0					
ANR	429516	Identifier	follow_to		429394	1					
ANR	429517	Identifier	to		429394	1					
ANR	429518	AndExpression	from_block -> op1_to == NULL && from_block -> op2_to == NULL && from_block -> ext_to == NULL		429394	1		&&			
ANR	429519	EqualityExpression	from_block -> op1_to == NULL		429394	0		==			
ANR	429520	PtrMemberAccess	from_block -> op1_to		429394	0					
ANR	429521	Identifier	from_block		429394	0					
ANR	429522	Identifier	op1_to		429394	1					
ANR	429523	Identifier	NULL		429394	1					
ANR	429524	AndExpression	from_block -> op2_to == NULL && from_block -> ext_to == NULL		429394	1		&&			
ANR	429525	EqualityExpression	from_block -> op2_to == NULL		429394	0		==			
ANR	429526	PtrMemberAccess	from_block -> op2_to		429394	0					
ANR	429527	Identifier	from_block		429394	0					
ANR	429528	Identifier	op2_to		429394	1					
ANR	429529	Identifier	NULL		429394	1					
ANR	429530	EqualityExpression	from_block -> ext_to == NULL		429394	1		==			
ANR	429531	PtrMemberAccess	from_block -> ext_to		429394	0					
ANR	429532	Identifier	from_block		429394	0					
ANR	429533	Identifier	ext_to		429394	1					
ANR	429534	Identifier	NULL		429394	1					
ANR	429535	CompoundStatement		37:3:794:854	429394	1					
ANR	429536	IdentifierDeclStatement	zend_op * new_to = from_block -> start_opline + from_block -> len ;	417:3:13495:13555	429394	0	True				
ANR	429537	IdentifierDecl	* new_to = from_block -> start_opline + from_block -> len		429394	0					
ANR	429538	IdentifierDeclType	zend_op *		429394	0					
ANR	429539	Identifier	new_to		429394	1					
ANR	429540	AssignmentExpression	* new_to = from_block -> start_opline + from_block -> len		429394	2		=			
ANR	429541	Identifier	new_to		429394	0					
ANR	429542	AdditiveExpression	from_block -> start_opline + from_block -> len		429394	1		+			
ANR	429543	PtrMemberAccess	from_block -> start_opline		429394	0					
ANR	429544	Identifier	from_block		429394	0					
ANR	429545	Identifier	start_opline		429394	1					
ANR	429546	PtrMemberAccess	from_block -> len		429394	1					
ANR	429547	Identifier	from_block		429394	0					
ANR	429548	Identifier	len		429394	1					
ANR	429549	IfStatement	if ( new_to != to -> start_opline )		429394	1					
ANR	429550	Condition	new_to != to -> start_opline	418:7:13564:13589	429394	0	True				
ANR	429551	EqualityExpression	new_to != to -> start_opline		429394	0		!=			
ANR	429552	Identifier	new_to		429394	0					
ANR	429553	PtrMemberAccess	to -> start_opline		429394	1					
ANR	429554	Identifier	to		429394	0					
ANR	429555	Identifier	start_opline		429394	1					
ANR	429556	CompoundStatement		38:35:891:891	429394	1					
ANR	429557	ExpressionStatement	"memmove ( new_to , to -> start_opline , sizeof ( zend_op ) * to -> len )"	420:4:13635:13693	429394	0	True				
ANR	429558	CallExpression	"memmove ( new_to , to -> start_opline , sizeof ( zend_op ) * to -> len )"		429394	0					
ANR	429559	Callee	memmove		429394	0					
ANR	429560	Identifier	memmove		429394	0					
ANR	429561	ArgumentList	new_to		429394	1					
ANR	429562	Argument	new_to		429394	0					
ANR	429563	Identifier	new_to		429394	0					
ANR	429564	Argument	to -> start_opline		429394	1					
ANR	429565	PtrMemberAccess	to -> start_opline		429394	0					
ANR	429566	Identifier	to		429394	0					
ANR	429567	Identifier	start_opline		429394	1					
ANR	429568	Argument	sizeof ( zend_op ) * to -> len		429394	2					
ANR	429569	MultiplicativeExpression	sizeof ( zend_op ) * to -> len		429394	0		*			
ANR	429570	SizeofExpression	sizeof ( zend_op )		429394	0					
ANR	429571	Sizeof	sizeof		429394	0					
ANR	429572	SizeofOperand	zend_op		429394	1					
ANR	429573	PtrMemberAccess	to -> len		429394	1					
ANR	429574	Identifier	to		429394	0					
ANR	429575	Identifier	len		429394	1					
ANR	429576	ExpressionStatement	from_block -> len += to -> len	423:3:13733:13759	429394	2	True				
ANR	429577	AssignmentExpression	from_block -> len += to -> len		429394	0		+=			
ANR	429578	PtrMemberAccess	from_block -> len		429394	0					
ANR	429579	Identifier	from_block		429394	0					
ANR	429580	Identifier	len		429394	1					
ANR	429581	PtrMemberAccess	to -> len		429394	1					
ANR	429582	Identifier	to		429394	0					
ANR	429583	Identifier	len		429394	1					
ANR	429584	ExpressionStatement	to -> start_opline = NULL	425:3:13806:13829	429394	3	True				
ANR	429585	AssignmentExpression	to -> start_opline = NULL		429394	0		=			
ANR	429586	PtrMemberAccess	to -> start_opline		429394	0					
ANR	429587	Identifier	to		429394	0					
ANR	429588	Identifier	start_opline		429394	1					
ANR	429589	Identifier	NULL		429394	1					
ANR	429590	ExpressionStatement	to -> access = 0	426:3:13834:13848	429394	4	True				
ANR	429591	AssignmentExpression	to -> access = 0		429394	0		=			
ANR	429592	PtrMemberAccess	to -> access		429394	0					
ANR	429593	Identifier	to		429394	0					
ANR	429594	Identifier	access		429394	1					
ANR	429595	PrimaryExpression	0		429394	1					
ANR	429596	ExpressionStatement	to -> sources = NULL	427:3:13853:13871	429394	5	True				
ANR	429597	AssignmentExpression	to -> sources = NULL		429394	0		=			
ANR	429598	PtrMemberAccess	to -> sources		429394	0					
ANR	429599	Identifier	to		429394	0					
ANR	429600	Identifier	sources		429394	1					
ANR	429601	Identifier	NULL		429394	1					
ANR	429602	ExpressionStatement	from_block -> follow_to = to -> follow_to	428:3:13876:13913	429394	6	True				
ANR	429603	AssignmentExpression	from_block -> follow_to = to -> follow_to		429394	0		=			
ANR	429604	PtrMemberAccess	from_block -> follow_to		429394	0					
ANR	429605	Identifier	from_block		429394	0					
ANR	429606	Identifier	follow_to		429394	1					
ANR	429607	PtrMemberAccess	to -> follow_to		429394	1					
ANR	429608	Identifier	to		429394	0					
ANR	429609	Identifier	follow_to		429394	1					
ANR	429610	IfStatement	if ( to -> op1_to )		429394	7					
ANR	429611	Condition	to -> op1_to	429:7:13922:13931	429394	0	True				
ANR	429612	PtrMemberAccess	to -> op1_to		429394	0					
ANR	429613	Identifier	to		429394	0					
ANR	429614	Identifier	op1_to		429394	1					
ANR	429615	CompoundStatement		49:19:1233:1233	429394	1					
ANR	429616	ExpressionStatement	from_block -> op1_to = to -> op1_to	430:4:13940:13971	429394	0	True				
ANR	429617	AssignmentExpression	from_block -> op1_to = to -> op1_to		429394	0		=			
ANR	429618	PtrMemberAccess	from_block -> op1_to		429394	0					
ANR	429619	Identifier	from_block		429394	0					
ANR	429620	Identifier	op1_to		429394	1					
ANR	429621	PtrMemberAccess	to -> op1_to		429394	1					
ANR	429622	Identifier	to		429394	0					
ANR	429623	Identifier	op1_to		429394	1					
ANR	429624	ExpressionStatement	"replace_source ( to -> op1_to -> sources , to , from_block )"	431:4:13977:14028	429394	1	True				
ANR	429625	CallExpression	"replace_source ( to -> op1_to -> sources , to , from_block )"		429394	0					
ANR	429626	Callee	replace_source		429394	0					
ANR	429627	Identifier	replace_source		429394	0					
ANR	429628	ArgumentList	to -> op1_to -> sources		429394	1					
ANR	429629	Argument	to -> op1_to -> sources		429394	0					
ANR	429630	PtrMemberAccess	to -> op1_to -> sources		429394	0					
ANR	429631	PtrMemberAccess	to -> op1_to		429394	0					
ANR	429632	Identifier	to		429394	0					
ANR	429633	Identifier	op1_to		429394	1					
ANR	429634	Identifier	sources		429394	1					
ANR	429635	Argument	to		429394	1					
ANR	429636	Identifier	to		429394	0					
ANR	429637	Argument	from_block		429394	2					
ANR	429638	Identifier	from_block		429394	0					
ANR	429639	IfStatement	if ( to -> op2_to )		429394	8					
ANR	429640	Condition	to -> op2_to	433:7:14042:14051	429394	0	True				
ANR	429641	PtrMemberAccess	to -> op2_to		429394	0					
ANR	429642	Identifier	to		429394	0					
ANR	429643	Identifier	op2_to		429394	1					
ANR	429644	CompoundStatement		53:19:1353:1353	429394	1					
ANR	429645	ExpressionStatement	from_block -> op2_to = to -> op2_to	434:4:14060:14091	429394	0	True				
ANR	429646	AssignmentExpression	from_block -> op2_to = to -> op2_to		429394	0		=			
ANR	429647	PtrMemberAccess	from_block -> op2_to		429394	0					
ANR	429648	Identifier	from_block		429394	0					
ANR	429649	Identifier	op2_to		429394	1					
ANR	429650	PtrMemberAccess	to -> op2_to		429394	1					
ANR	429651	Identifier	to		429394	0					
ANR	429652	Identifier	op2_to		429394	1					
ANR	429653	ExpressionStatement	"replace_source ( to -> op2_to -> sources , to , from_block )"	435:4:14097:14148	429394	1	True				
ANR	429654	CallExpression	"replace_source ( to -> op2_to -> sources , to , from_block )"		429394	0					
ANR	429655	Callee	replace_source		429394	0					
ANR	429656	Identifier	replace_source		429394	0					
ANR	429657	ArgumentList	to -> op2_to -> sources		429394	1					
ANR	429658	Argument	to -> op2_to -> sources		429394	0					
ANR	429659	PtrMemberAccess	to -> op2_to -> sources		429394	0					
ANR	429660	PtrMemberAccess	to -> op2_to		429394	0					
ANR	429661	Identifier	to		429394	0					
ANR	429662	Identifier	op2_to		429394	1					
ANR	429663	Identifier	sources		429394	1					
ANR	429664	Argument	to		429394	1					
ANR	429665	Identifier	to		429394	0					
ANR	429666	Argument	from_block		429394	2					
ANR	429667	Identifier	from_block		429394	0					
ANR	429668	IfStatement	if ( to -> ext_to )		429394	9					
ANR	429669	Condition	to -> ext_to	437:7:14162:14171	429394	0	True				
ANR	429670	PtrMemberAccess	to -> ext_to		429394	0					
ANR	429671	Identifier	to		429394	0					
ANR	429672	Identifier	ext_to		429394	1					
ANR	429673	CompoundStatement		57:19:1473:1473	429394	1					
ANR	429674	ExpressionStatement	from_block -> ext_to = to -> ext_to	438:4:14180:14211	429394	0	True				
ANR	429675	AssignmentExpression	from_block -> ext_to = to -> ext_to		429394	0		=			
ANR	429676	PtrMemberAccess	from_block -> ext_to		429394	0					
ANR	429677	Identifier	from_block		429394	0					
ANR	429678	Identifier	ext_to		429394	1					
ANR	429679	PtrMemberAccess	to -> ext_to		429394	1					
ANR	429680	Identifier	to		429394	0					
ANR	429681	Identifier	ext_to		429394	1					
ANR	429682	ExpressionStatement	"replace_source ( to -> ext_to -> sources , to , from_block )"	439:4:14217:14268	429394	1	True				
ANR	429683	CallExpression	"replace_source ( to -> ext_to -> sources , to , from_block )"		429394	0					
ANR	429684	Callee	replace_source		429394	0					
ANR	429685	Identifier	replace_source		429394	0					
ANR	429686	ArgumentList	to -> ext_to -> sources		429394	1					
ANR	429687	Argument	to -> ext_to -> sources		429394	0					
ANR	429688	PtrMemberAccess	to -> ext_to -> sources		429394	0					
ANR	429689	PtrMemberAccess	to -> ext_to		429394	0					
ANR	429690	Identifier	to		429394	0					
ANR	429691	Identifier	ext_to		429394	1					
ANR	429692	Identifier	sources		429394	1					
ANR	429693	Argument	to		429394	1					
ANR	429694	Identifier	to		429394	0					
ANR	429695	Argument	from_block		429394	2					
ANR	429696	Identifier	from_block		429394	0					
ANR	429697	IfStatement	if ( to -> follow_to )		429394	10					
ANR	429698	Condition	to -> follow_to	441:7:14282:14294	429394	0	True				
ANR	429699	PtrMemberAccess	to -> follow_to		429394	0					
ANR	429700	Identifier	to		429394	0					
ANR	429701	Identifier	follow_to		429394	1					
ANR	429702	CompoundStatement		61:22:1596:1596	429394	1					
ANR	429703	ExpressionStatement	"replace_source ( to -> follow_to -> sources , to , from_block )"	442:4:14303:14357	429394	0	True				
ANR	429704	CallExpression	"replace_source ( to -> follow_to -> sources , to , from_block )"		429394	0					
ANR	429705	Callee	replace_source		429394	0					
ANR	429706	Identifier	replace_source		429394	0					
ANR	429707	ArgumentList	to -> follow_to -> sources		429394	1					
ANR	429708	Argument	to -> follow_to -> sources		429394	0					
ANR	429709	PtrMemberAccess	to -> follow_to -> sources		429394	0					
ANR	429710	PtrMemberAccess	to -> follow_to		429394	0					
ANR	429711	Identifier	to		429394	0					
ANR	429712	Identifier	follow_to		429394	1					
ANR	429713	Identifier	sources		429394	1					
ANR	429714	Argument	to		429394	1					
ANR	429715	Identifier	to		429394	0					
ANR	429716	Argument	from_block		429394	2					
ANR	429717	Identifier	from_block		429394	0					
ANR	429718	ReturnType	static inline void		429394	1					
ANR	429719	Identifier	del_source		429394	2					
ANR	429720	ParameterList	"zend_code_block * from , zend_code_block * to"		429394	3					
ANR	429721	Parameter	zend_code_block * from	380:30:12656:12676	429394	0	True				
ANR	429722	ParameterType	zend_code_block *		429394	0					
ANR	429723	Identifier	from		429394	1					
ANR	429724	Parameter	zend_code_block * to	380:53:12679:12697	429394	1	True				
ANR	429725	ParameterType	zend_code_block *		429394	0					
ANR	429726	Identifier	to		429394	1					
ANR	429727	CFGEntryNode	ENTRY		429394		True				
ANR	429728	CFGExitNode	EXIT		429394		True				
ANR	429729	Symbol	new_to		429394						
ANR	429730	Symbol	from_block -> len		429394						
ANR	429731	Symbol	* to -> sources		429394						
ANR	429732	Symbol	to -> op1_to		429394						
ANR	429733	Symbol	& ( * cs ) -> next		429394						
ANR	429734	Symbol	* to -> op1_to		429394						
ANR	429735	Symbol	to -> sources		429394						
ANR	429736	Symbol	to -> op2_to -> sources		429394						
ANR	429737	Symbol	to -> access		429394						
ANR	429738	Symbol	from		429394						
ANR	429739	Symbol	to -> ext_to		429394						
ANR	429740	Symbol	to -> len		429394						
ANR	429741	Symbol	from_block -> op2_to		429394						
ANR	429742	Symbol	to -> start_opline		429394						
ANR	429743	Symbol	* * cs		429394						
ANR	429744	Symbol	* to		429394						
ANR	429745	Symbol	from_block		429394						
ANR	429746	Symbol	NULL		429394						
ANR	429747	Symbol	* * to		429394						
ANR	429748	Symbol	from_block -> follow_to		429394						
ANR	429749	Symbol	* to -> ext_to		429394						
ANR	429750	Symbol	to -> follow_to -> sources		429394						
ANR	429751	Symbol	to -> op2_to		429394						
ANR	429752	Symbol	from_block -> ext_to		429394						
ANR	429753	Symbol	* to -> follow_to		429394						
ANR	429754	Symbol	( * cs ) -> from		429394						
ANR	429755	Symbol	from_block -> access		429394						
ANR	429756	Symbol	to -> sources -> from		429394						
ANR	429757	Symbol	cs		429394						
ANR	429758	Symbol	& to -> sources		429394						
ANR	429759	Symbol	to -> op1_to -> sources		429394						
ANR	429760	Symbol	* cs		429394						
ANR	429761	Symbol	to -> follow_to		429394						
ANR	429762	Symbol	* to -> op2_to		429394						
ANR	429763	Symbol	to -> protected		429394						
ANR	429764	Symbol	to -> ext_to -> sources		429394						
ANR	429765	Symbol	from_block -> op1_to		429394						
ANR	429766	Symbol	from_block -> start_opline		429394						
ANR	429767	Symbol	to		429394						
ANR	429768	Symbol	* from_block		429394						
ANR	429769	Symbol	to -> sources -> next		429394						
ANR	429770	Function	delete_code_block	449:0:14405:15159							
ANR	429771	FunctionDef	"delete_code_block (zend_code_block * block , zend_optimizer_ctx * ctx)"		429770	0					
ANR	429772	CompoundStatement		450:0:14484:15159	429770	0					
ANR	429773	IfStatement	if ( block -> protected )		429770	0					
ANR	429774	Condition	block -> protected	451:5:14491:14506	429770	0	True				
ANR	429775	PtrMemberAccess	block -> protected		429770	0					
ANR	429776	Identifier	block		429770	0					
ANR	429777	Identifier	protected		429770	1					
ANR	429778	CompoundStatement		2:23:24:24	429770	1					
ANR	429779	ReturnStatement	return ;	452:2:14513:14519	429770	0	True				
ANR	429780	IfStatement	if ( block -> follow_to )		429770	1					
ANR	429781	Condition	block -> follow_to	454:5:14529:14544	429770	0	True				
ANR	429782	PtrMemberAccess	block -> follow_to		429770	0					
ANR	429783	Identifier	block		429770	0					
ANR	429784	Identifier	follow_to		429770	1					
ANR	429785	CompoundStatement		6:2:66:104	429770	1					
ANR	429786	IdentifierDeclStatement	zend_block_source * bs = block -> sources ;	455:2:14551:14589	429770	0	True				
ANR	429787	IdentifierDecl	* bs = block -> sources		429770	0					
ANR	429788	IdentifierDeclType	zend_block_source *		429770	0					
ANR	429789	Identifier	bs		429770	1					
ANR	429790	AssignmentExpression	* bs = block -> sources		429770	2		=			
ANR	429791	Identifier	bs		429770	0					
ANR	429792	PtrMemberAccess	block -> sources		429770	1					
ANR	429793	Identifier	block		429770	0					
ANR	429794	Identifier	sources		429770	1					
ANR	429795	WhileStatement	while ( bs )		429770	1					
ANR	429796	Condition	bs	456:9:14600:14601	429770	0	True				
ANR	429797	Identifier	bs		429770	0					
ANR	429798	CompoundStatement		9:3:167:205	429770	1					
ANR	429799	IdentifierDeclStatement	zend_code_block * from_block = bs -> from ;	457:3:14609:14647	429770	0	True				
ANR	429800	IdentifierDecl	* from_block = bs -> from		429770	0					
ANR	429801	IdentifierDeclType	zend_code_block *		429770	0					
ANR	429802	Identifier	from_block		429770	1					
ANR	429803	AssignmentExpression	* from_block = bs -> from		429770	2		=			
ANR	429804	Identifier	from_block		429770	0					
ANR	429805	PtrMemberAccess	bs -> from		429770	1					
ANR	429806	Identifier	bs		429770	0					
ANR	429807	Identifier	from		429770	1					
ANR	429808	IdentifierDeclStatement	zend_code_block * to = block -> follow_to ;	458:3:14652:14690	429770	1	True				
ANR	429809	IdentifierDecl	* to = block -> follow_to		429770	0					
ANR	429810	IdentifierDeclType	zend_code_block *		429770	0					
ANR	429811	Identifier	to		429770	1					
ANR	429812	AssignmentExpression	* to = block -> follow_to		429770	2		=			
ANR	429813	Identifier	to		429770	0					
ANR	429814	PtrMemberAccess	block -> follow_to		429770	1					
ANR	429815	Identifier	block		429770	0					
ANR	429816	Identifier	follow_to		429770	1					
ANR	429817	IfStatement	if ( from_block -> op1_to == block )		429770	2					
ANR	429818	Condition	from_block -> op1_to == block	459:7:14699:14725	429770	0	True				
ANR	429819	EqualityExpression	from_block -> op1_to == block		429770	0		==			
ANR	429820	PtrMemberAccess	from_block -> op1_to		429770	0					
ANR	429821	Identifier	from_block		429770	0					
ANR	429822	Identifier	op1_to		429770	1					
ANR	429823	Identifier	block		429770	1					
ANR	429824	CompoundStatement		10:36:243:243	429770	1					
ANR	429825	ExpressionStatement	from_block -> op1_to = to	460:4:14734:14757	429770	0	True				
ANR	429826	AssignmentExpression	from_block -> op1_to = to		429770	0		=			
ANR	429827	PtrMemberAccess	from_block -> op1_to		429770	0					
ANR	429828	Identifier	from_block		429770	0					
ANR	429829	Identifier	op1_to		429770	1					
ANR	429830	Identifier	to		429770	1					
ANR	429831	ExpressionStatement	"ADD_SOURCE ( from_block , to )"	461:4:14763:14789	429770	1	True				
ANR	429832	CallExpression	"ADD_SOURCE ( from_block , to )"		429770	0					
ANR	429833	Callee	ADD_SOURCE		429770	0					
ANR	429834	Identifier	ADD_SOURCE		429770	0					
ANR	429835	ArgumentList	from_block		429770	1					
ANR	429836	Argument	from_block		429770	0					
ANR	429837	Identifier	from_block		429770	0					
ANR	429838	Argument	to		429770	1					
ANR	429839	Identifier	to		429770	0					
ANR	429840	IfStatement	if ( from_block -> op2_to == block )		429770	3					
ANR	429841	Condition	from_block -> op2_to == block	463:7:14803:14829	429770	0	True				
ANR	429842	EqualityExpression	from_block -> op2_to == block		429770	0		==			
ANR	429843	PtrMemberAccess	from_block -> op2_to		429770	0					
ANR	429844	Identifier	from_block		429770	0					
ANR	429845	Identifier	op2_to		429770	1					
ANR	429846	Identifier	block		429770	1					
ANR	429847	CompoundStatement		14:36:347:347	429770	1					
ANR	429848	ExpressionStatement	from_block -> op2_to = to	464:4:14838:14861	429770	0	True				
ANR	429849	AssignmentExpression	from_block -> op2_to = to		429770	0		=			
ANR	429850	PtrMemberAccess	from_block -> op2_to		429770	0					
ANR	429851	Identifier	from_block		429770	0					
ANR	429852	Identifier	op2_to		429770	1					
ANR	429853	Identifier	to		429770	1					
ANR	429854	ExpressionStatement	"ADD_SOURCE ( from_block , to )"	465:4:14867:14893	429770	1	True				
ANR	429855	CallExpression	"ADD_SOURCE ( from_block , to )"		429770	0					
ANR	429856	Callee	ADD_SOURCE		429770	0					
ANR	429857	Identifier	ADD_SOURCE		429770	0					
ANR	429858	ArgumentList	from_block		429770	1					
ANR	429859	Argument	from_block		429770	0					
ANR	429860	Identifier	from_block		429770	0					
ANR	429861	Argument	to		429770	1					
ANR	429862	Identifier	to		429770	0					
ANR	429863	IfStatement	if ( from_block -> ext_to == block )		429770	4					
ANR	429864	Condition	from_block -> ext_to == block	467:7:14907:14933	429770	0	True				
ANR	429865	EqualityExpression	from_block -> ext_to == block		429770	0		==			
ANR	429866	PtrMemberAccess	from_block -> ext_to		429770	0					
ANR	429867	Identifier	from_block		429770	0					
ANR	429868	Identifier	ext_to		429770	1					
ANR	429869	Identifier	block		429770	1					
ANR	429870	CompoundStatement		18:36:451:451	429770	1					
ANR	429871	ExpressionStatement	from_block -> ext_to = to	468:4:14942:14965	429770	0	True				
ANR	429872	AssignmentExpression	from_block -> ext_to = to		429770	0		=			
ANR	429873	PtrMemberAccess	from_block -> ext_to		429770	0					
ANR	429874	Identifier	from_block		429770	0					
ANR	429875	Identifier	ext_to		429770	1					
ANR	429876	Identifier	to		429770	1					
ANR	429877	ExpressionStatement	"ADD_SOURCE ( from_block , to )"	469:4:14971:14997	429770	1	True				
ANR	429878	CallExpression	"ADD_SOURCE ( from_block , to )"		429770	0					
ANR	429879	Callee	ADD_SOURCE		429770	0					
ANR	429880	Identifier	ADD_SOURCE		429770	0					
ANR	429881	ArgumentList	from_block		429770	1					
ANR	429882	Argument	from_block		429770	0					
ANR	429883	Identifier	from_block		429770	0					
ANR	429884	Argument	to		429770	1					
ANR	429885	Identifier	to		429770	0					
ANR	429886	IfStatement	if ( from_block -> follow_to == block )		429770	5					
ANR	429887	Condition	from_block -> follow_to == block	471:7:15011:15040	429770	0	True				
ANR	429888	EqualityExpression	from_block -> follow_to == block		429770	0		==			
ANR	429889	PtrMemberAccess	from_block -> follow_to		429770	0					
ANR	429890	Identifier	from_block		429770	0					
ANR	429891	Identifier	follow_to		429770	1					
ANR	429892	Identifier	block		429770	1					
ANR	429893	CompoundStatement		22:39:558:558	429770	1					
ANR	429894	ExpressionStatement	from_block -> follow_to = to	472:4:15049:15075	429770	0	True				
ANR	429895	AssignmentExpression	from_block -> follow_to = to		429770	0		=			
ANR	429896	PtrMemberAccess	from_block -> follow_to		429770	0					
ANR	429897	Identifier	from_block		429770	0					
ANR	429898	Identifier	follow_to		429770	1					
ANR	429899	Identifier	to		429770	1					
ANR	429900	ExpressionStatement	"ADD_SOURCE ( from_block , to )"	473:4:15081:15107	429770	1	True				
ANR	429901	CallExpression	"ADD_SOURCE ( from_block , to )"		429770	0					
ANR	429902	Callee	ADD_SOURCE		429770	0					
ANR	429903	Identifier	ADD_SOURCE		429770	0					
ANR	429904	ArgumentList	from_block		429770	1					
ANR	429905	Argument	from_block		429770	0					
ANR	429906	Identifier	from_block		429770	0					
ANR	429907	Argument	to		429770	1					
ANR	429908	Identifier	to		429770	0					
ANR	429909	ExpressionStatement	bs = bs -> next	475:3:15117:15130	429770	6	True				
ANR	429910	AssignmentExpression	bs = bs -> next		429770	0		=			
ANR	429911	Identifier	bs		429770	0					
ANR	429912	PtrMemberAccess	bs -> next		429770	1					
ANR	429913	Identifier	bs		429770	0					
ANR	429914	Identifier	next		429770	1					
ANR	429915	ExpressionStatement	block -> access = 0	478:1:15140:15157	429770	2	True				
ANR	429916	AssignmentExpression	block -> access = 0		429770	0		=			
ANR	429917	PtrMemberAccess	block -> access		429770	0					
ANR	429918	Identifier	block		429770	0					
ANR	429919	Identifier	access		429770	1					
ANR	429920	PrimaryExpression	0		429770	1					
ANR	429921	ReturnType	static void		429770	1					
ANR	429922	Identifier	delete_code_block		429770	2					
ANR	429923	ParameterList	"zend_code_block * block , zend_optimizer_ctx * ctx"		429770	3					
ANR	429924	Parameter	zend_code_block * block	449:30:14435:14456	429770	0	True				
ANR	429925	ParameterType	zend_code_block *		429770	0					
ANR	429926	Identifier	block		429770	1					
ANR	429927	Parameter	zend_optimizer_ctx * ctx	449:54:14459:14481	429770	1	True				
ANR	429928	ParameterType	zend_optimizer_ctx *		429770	0					
ANR	429929	Identifier	ctx		429770	1					
ANR	429930	CFGEntryNode	ENTRY		429770		True				
ANR	429931	CFGExitNode	EXIT		429770		True				
ANR	429932	Symbol	from_block		429770						
ANR	429933	Symbol	from_block -> follow_to		429770						
ANR	429934	Symbol	ctx		429770						
ANR	429935	Symbol	block -> protected		429770						
ANR	429936	Symbol	from_block -> ext_to		429770						
ANR	429937	Symbol	block -> follow_to		429770						
ANR	429938	Symbol	block -> sources		429770						
ANR	429939	Symbol	* block		429770						
ANR	429940	Symbol	bs -> next		429770						
ANR	429941	Symbol	bs		429770						
ANR	429942	Symbol	bs -> from		429770						
ANR	429943	Symbol	* bs		429770						
ANR	429944	Symbol	block -> access		429770						
ANR	429945	Symbol	block		429770						
ANR	429946	Symbol	from_block -> op1_to		429770						
ANR	429947	Symbol	to		429770						
ANR	429948	Symbol	* from_block		429770						
ANR	429949	Symbol	from_block -> op2_to		429770						
ANR	429950	Function	zend_access_path	481:0:15162:15711							
ANR	429951	FunctionDef	"zend_access_path (zend_code_block * block , zend_optimizer_ctx * ctx)"		429950	0					
ANR	429952	CompoundStatement		482:0:15240:15711	429950	0					
ANR	429953	IfStatement	if ( block -> access )		429950	0					
ANR	429954	Condition	block -> access	483:5:15247:15259	429950	0	True				
ANR	429955	PtrMemberAccess	block -> access		429950	0					
ANR	429956	Identifier	block		429950	0					
ANR	429957	Identifier	access		429950	1					
ANR	429958	CompoundStatement		2:20:21:21	429950	1					
ANR	429959	ReturnStatement	return ;	484:2:15266:15272	429950	0	True				
ANR	429960	ExpressionStatement	block -> access = 1	487:1:15279:15296	429950	1	True				
ANR	429961	AssignmentExpression	block -> access = 1		429950	0		=			
ANR	429962	PtrMemberAccess	block -> access		429950	0					
ANR	429963	Identifier	block		429950	0					
ANR	429964	Identifier	access		429950	1					
ANR	429965	PrimaryExpression	1		429950	1					
ANR	429966	IfStatement	if ( block -> op1_to )		429950	2					
ANR	429967	Condition	block -> op1_to	488:5:15303:15315	429950	0	True				
ANR	429968	PtrMemberAccess	block -> op1_to		429950	0					
ANR	429969	Identifier	block		429950	0					
ANR	429970	Identifier	op1_to		429950	1					
ANR	429971	CompoundStatement		7:20:77:77	429950	1					
ANR	429972	ExpressionStatement	"zend_access_path ( block -> op1_to , ctx )"	489:2:15322:15358	429950	0	True				
ANR	429973	CallExpression	"zend_access_path ( block -> op1_to , ctx )"		429950	0					
ANR	429974	Callee	zend_access_path		429950	0					
ANR	429975	Identifier	zend_access_path		429950	0					
ANR	429976	ArgumentList	block -> op1_to		429950	1					
ANR	429977	Argument	block -> op1_to		429950	0					
ANR	429978	PtrMemberAccess	block -> op1_to		429950	0					
ANR	429979	Identifier	block		429950	0					
ANR	429980	Identifier	op1_to		429950	1					
ANR	429981	Argument	ctx		429950	1					
ANR	429982	Identifier	ctx		429950	0					
ANR	429983	ExpressionStatement	"ADD_SOURCE ( block , block -> op1_to )"	490:2:15362:15394	429950	1	True				
ANR	429984	CallExpression	"ADD_SOURCE ( block , block -> op1_to )"		429950	0					
ANR	429985	Callee	ADD_SOURCE		429950	0					
ANR	429986	Identifier	ADD_SOURCE		429950	0					
ANR	429987	ArgumentList	block		429950	1					
ANR	429988	Argument	block		429950	0					
ANR	429989	Identifier	block		429950	0					
ANR	429990	Argument	block -> op1_to		429950	1					
ANR	429991	PtrMemberAccess	block -> op1_to		429950	0					
ANR	429992	Identifier	block		429950	0					
ANR	429993	Identifier	op1_to		429950	1					
ANR	429994	IfStatement	if ( block -> op2_to )		429950	3					
ANR	429995	Condition	block -> op2_to	492:5:15404:15416	429950	0	True				
ANR	429996	PtrMemberAccess	block -> op2_to		429950	0					
ANR	429997	Identifier	block		429950	0					
ANR	429998	Identifier	op2_to		429950	1					
ANR	429999	CompoundStatement		11:20:178:178	429950	1					
ANR	430000	ExpressionStatement	"zend_access_path ( block -> op2_to , ctx )"	493:2:15423:15459	429950	0	True				
ANR	430001	CallExpression	"zend_access_path ( block -> op2_to , ctx )"		429950	0					
ANR	430002	Callee	zend_access_path		429950	0					
ANR	430003	Identifier	zend_access_path		429950	0					
ANR	430004	ArgumentList	block -> op2_to		429950	1					
ANR	430005	Argument	block -> op2_to		429950	0					
ANR	430006	PtrMemberAccess	block -> op2_to		429950	0					
ANR	430007	Identifier	block		429950	0					
ANR	430008	Identifier	op2_to		429950	1					
ANR	430009	Argument	ctx		429950	1					
ANR	430010	Identifier	ctx		429950	0					
ANR	430011	ExpressionStatement	"ADD_SOURCE ( block , block -> op2_to )"	494:2:15463:15495	429950	1	True				
ANR	430012	CallExpression	"ADD_SOURCE ( block , block -> op2_to )"		429950	0					
ANR	430013	Callee	ADD_SOURCE		429950	0					
ANR	430014	Identifier	ADD_SOURCE		429950	0					
ANR	430015	ArgumentList	block		429950	1					
ANR	430016	Argument	block		429950	0					
ANR	430017	Identifier	block		429950	0					
ANR	430018	Argument	block -> op2_to		429950	1					
ANR	430019	PtrMemberAccess	block -> op2_to		429950	0					
ANR	430020	Identifier	block		429950	0					
ANR	430021	Identifier	op2_to		429950	1					
ANR	430022	IfStatement	if ( block -> ext_to )		429950	4					
ANR	430023	Condition	block -> ext_to	496:5:15505:15517	429950	0	True				
ANR	430024	PtrMemberAccess	block -> ext_to		429950	0					
ANR	430025	Identifier	block		429950	0					
ANR	430026	Identifier	ext_to		429950	1					
ANR	430027	CompoundStatement		15:20:279:279	429950	1					
ANR	430028	ExpressionStatement	"zend_access_path ( block -> ext_to , ctx )"	497:2:15524:15560	429950	0	True				
ANR	430029	CallExpression	"zend_access_path ( block -> ext_to , ctx )"		429950	0					
ANR	430030	Callee	zend_access_path		429950	0					
ANR	430031	Identifier	zend_access_path		429950	0					
ANR	430032	ArgumentList	block -> ext_to		429950	1					
ANR	430033	Argument	block -> ext_to		429950	0					
ANR	430034	PtrMemberAccess	block -> ext_to		429950	0					
ANR	430035	Identifier	block		429950	0					
ANR	430036	Identifier	ext_to		429950	1					
ANR	430037	Argument	ctx		429950	1					
ANR	430038	Identifier	ctx		429950	0					
ANR	430039	ExpressionStatement	"ADD_SOURCE ( block , block -> ext_to )"	498:2:15564:15596	429950	1	True				
ANR	430040	CallExpression	"ADD_SOURCE ( block , block -> ext_to )"		429950	0					
ANR	430041	Callee	ADD_SOURCE		429950	0					
ANR	430042	Identifier	ADD_SOURCE		429950	0					
ANR	430043	ArgumentList	block		429950	1					
ANR	430044	Argument	block		429950	0					
ANR	430045	Identifier	block		429950	0					
ANR	430046	Argument	block -> ext_to		429950	1					
ANR	430047	PtrMemberAccess	block -> ext_to		429950	0					
ANR	430048	Identifier	block		429950	0					
ANR	430049	Identifier	ext_to		429950	1					
ANR	430050	IfStatement	if ( block -> follow_to )		429950	5					
ANR	430051	Condition	block -> follow_to	500:5:15606:15621	429950	0	True				
ANR	430052	PtrMemberAccess	block -> follow_to		429950	0					
ANR	430053	Identifier	block		429950	0					
ANR	430054	Identifier	follow_to		429950	1					
ANR	430055	CompoundStatement		19:23:383:383	429950	1					
ANR	430056	ExpressionStatement	"zend_access_path ( block -> follow_to , ctx )"	501:2:15628:15667	429950	0	True				
ANR	430057	CallExpression	"zend_access_path ( block -> follow_to , ctx )"		429950	0					
ANR	430058	Callee	zend_access_path		429950	0					
ANR	430059	Identifier	zend_access_path		429950	0					
ANR	430060	ArgumentList	block -> follow_to		429950	1					
ANR	430061	Argument	block -> follow_to		429950	0					
ANR	430062	PtrMemberAccess	block -> follow_to		429950	0					
ANR	430063	Identifier	block		429950	0					
ANR	430064	Identifier	follow_to		429950	1					
ANR	430065	Argument	ctx		429950	1					
ANR	430066	Identifier	ctx		429950	0					
ANR	430067	ExpressionStatement	"ADD_SOURCE ( block , block -> follow_to )"	502:2:15671:15706	429950	1	True				
ANR	430068	CallExpression	"ADD_SOURCE ( block , block -> follow_to )"		429950	0					
ANR	430069	Callee	ADD_SOURCE		429950	0					
ANR	430070	Identifier	ADD_SOURCE		429950	0					
ANR	430071	ArgumentList	block		429950	1					
ANR	430072	Argument	block		429950	0					
ANR	430073	Identifier	block		429950	0					
ANR	430074	Argument	block -> follow_to		429950	1					
ANR	430075	PtrMemberAccess	block -> follow_to		429950	0					
ANR	430076	Identifier	block		429950	0					
ANR	430077	Identifier	follow_to		429950	1					
ANR	430078	ReturnType	static void		429950	1					
ANR	430079	Identifier	zend_access_path		429950	2					
ANR	430080	ParameterList	"zend_code_block * block , zend_optimizer_ctx * ctx"		429950	3					
ANR	430081	Parameter	zend_code_block * block	481:29:15191:15212	429950	0	True				
ANR	430082	ParameterType	zend_code_block *		429950	0					
ANR	430083	Identifier	block		429950	1					
ANR	430084	Parameter	zend_optimizer_ctx * ctx	481:53:15215:15237	429950	1	True				
ANR	430085	ParameterType	zend_optimizer_ctx *		429950	0					
ANR	430086	Identifier	ctx		429950	1					
ANR	430087	CFGEntryNode	ENTRY		429950		True				
ANR	430088	CFGExitNode	EXIT		429950		True				
ANR	430089	Symbol	ctx		429950						
ANR	430090	Symbol	block -> access		429950						
ANR	430091	Symbol	block		429950						
ANR	430092	Symbol	block -> ext_to		429950						
ANR	430093	Symbol	block -> follow_to		429950						
ANR	430094	Symbol	block -> op1_to		429950						
ANR	430095	Symbol	block -> op2_to		429950						
ANR	430096	Symbol	* block		429950						
ANR	430097	Function	zend_rebuild_access_path	507:0:15788:16752							
ANR	430098	FunctionDef	"zend_rebuild_access_path (zend_cfg * cfg , zend_op_array * op_array , int find_start , zend_optimizer_ctx * ctx)"		430097	0					
ANR	430099	CompoundStatement		508:0:15906:16752	430097	0					
ANR	430100	IdentifierDeclStatement	zend_code_block * blocks = cfg -> blocks ;	509:1:15909:15946	430097	0	True				
ANR	430101	IdentifierDecl	* blocks = cfg -> blocks		430097	0					
ANR	430102	IdentifierDeclType	zend_code_block *		430097	0					
ANR	430103	Identifier	blocks		430097	1					
ANR	430104	AssignmentExpression	* blocks = cfg -> blocks		430097	2		=			
ANR	430105	Identifier	blocks		430097	0					
ANR	430106	PtrMemberAccess	cfg -> blocks		430097	1					
ANR	430107	Identifier	cfg		430097	0					
ANR	430108	Identifier	blocks		430097	1					
ANR	430109	IdentifierDeclStatement	zend_code_block * start = find_start ? NULL : blocks ;	510:1:15949:15999	430097	1	True				
ANR	430110	IdentifierDecl	* start = find_start ? NULL : blocks		430097	0					
ANR	430111	IdentifierDeclType	zend_code_block *		430097	0					
ANR	430112	Identifier	start		430097	1					
ANR	430113	AssignmentExpression	* start = find_start ? NULL : blocks		430097	2		=			
ANR	430114	Identifier	start		430097	0					
ANR	430115	ConditionalExpression	find_start ? NULL : blocks		430097	1					
ANR	430116	Condition	find_start		430097	0					
ANR	430117	Identifier	find_start		430097	0					
ANR	430118	Identifier	NULL		430097	1					
ANR	430119	Identifier	blocks		430097	2					
ANR	430120	IdentifierDeclStatement	zend_code_block * b ;	511:1:16002:16020	430097	2	True				
ANR	430121	IdentifierDecl	* b		430097	0					
ANR	430122	IdentifierDeclType	zend_code_block *		430097	0					
ANR	430123	Identifier	b		430097	1					
ANR	430124	ExpressionStatement	b = blocks	514:1:16091:16101	430097	3	True				
ANR	430125	AssignmentExpression	b = blocks		430097	0		=			
ANR	430126	Identifier	b		430097	0					
ANR	430127	Identifier	blocks		430097	1					
ANR	430128	WhileStatement	while ( b != NULL )		430097	4					
ANR	430129	Condition	b != NULL	515:8:16111:16119	430097	0	True				
ANR	430130	EqualityExpression	b != NULL		430097	0		!=			
ANR	430131	Identifier	b		430097	0					
ANR	430132	Identifier	NULL		430097	1					
ANR	430133	CompoundStatement		8:19:215:215	430097	1					
ANR	430134	IfStatement	if ( ! start && b -> access )		430097	0					
ANR	430135	Condition	! start && b -> access	516:6:16130:16148	430097	0	True				
ANR	430136	AndExpression	! start && b -> access		430097	0		&&			
ANR	430137	UnaryOperationExpression	! start		430097	0					
ANR	430138	UnaryOperator	!		430097	0					
ANR	430139	Identifier	start		430097	1					
ANR	430140	PtrMemberAccess	b -> access		430097	1					
ANR	430141	Identifier	b		430097	0					
ANR	430142	Identifier	access		430097	1					
ANR	430143	CompoundStatement		9:27:244:244	430097	1					
ANR	430144	ExpressionStatement	start = b	517:3:16156:16165	430097	0	True				
ANR	430145	AssignmentExpression	start = b		430097	0		=			
ANR	430146	Identifier	start		430097	0					
ANR	430147	Identifier	b		430097	1					
ANR	430148	ExpressionStatement	b -> access = 0	519:2:16173:16186	430097	1	True				
ANR	430149	AssignmentExpression	b -> access = 0		430097	0		=			
ANR	430150	PtrMemberAccess	b -> access		430097	0					
ANR	430151	Identifier	b		430097	0					
ANR	430152	Identifier	access		430097	1					
ANR	430153	PrimaryExpression	0		430097	1					
ANR	430154	ExpressionStatement	b -> sources = NULL	520:2:16190:16207	430097	2	True				
ANR	430155	AssignmentExpression	b -> sources = NULL		430097	0		=			
ANR	430156	PtrMemberAccess	b -> sources		430097	0					
ANR	430157	Identifier	b		430097	0					
ANR	430158	Identifier	sources		430097	1					
ANR	430159	Identifier	NULL		430097	1					
ANR	430160	ExpressionStatement	b = b -> next	521:2:16211:16222	430097	3	True				
ANR	430161	AssignmentExpression	b = b -> next		430097	0		=			
ANR	430162	Identifier	b		430097	0					
ANR	430163	PtrMemberAccess	b -> next		430097	1					
ANR	430164	Identifier	b		430097	0					
ANR	430165	Identifier	next		430097	1					
ANR	430166	ExpressionStatement	"zend_access_path ( start , ctx )"	525:1:16260:16288	430097	5	True				
ANR	430167	CallExpression	"zend_access_path ( start , ctx )"		430097	0					
ANR	430168	Callee	zend_access_path		430097	0					
ANR	430169	Identifier	zend_access_path		430097	0					
ANR	430170	ArgumentList	start		430097	1					
ANR	430171	Argument	start		430097	0					
ANR	430172	Identifier	start		430097	0					
ANR	430173	Argument	ctx		430097	1					
ANR	430174	Identifier	ctx		430097	0					
ANR	430175	IfStatement	if ( op_array -> last_brk_cont )		430097	6					
ANR	430176	Condition	op_array -> last_brk_cont	528:5:16322:16344	430097	0	True				
ANR	430177	PtrMemberAccess	op_array -> last_brk_cont		430097	0					
ANR	430178	Identifier	op_array		430097	0					
ANR	430179	Identifier	last_brk_cont		430097	1					
ANR	430180	CompoundStatement		22:2:444:449	430097	1					
ANR	430181	IdentifierDeclStatement	int i ;	529:2:16351:16356	430097	0	True				
ANR	430182	IdentifierDecl	i		430097	0					
ANR	430183	IdentifierDeclType	int		430097	0					
ANR	430184	Identifier	i		430097	1					
ANR	430185	ForStatement	for ( i = 0 ; i < op_array -> last_brk_cont ; i ++ )		430097	1					
ANR	430186	ForInit	i = 0 ;	530:7:16365:16368	430097	0	True				
ANR	430187	AssignmentExpression	i = 0		430097	0		=			
ANR	430188	Identifier	i		430097	0					
ANR	430189	PrimaryExpression	0		430097	1					
ANR	430190	Condition	i < op_array -> last_brk_cont	530:12:16370:16395	430097	1	True				
ANR	430191	RelationalExpression	i < op_array -> last_brk_cont		430097	0		<			
ANR	430192	Identifier	i		430097	0					
ANR	430193	PtrMemberAccess	op_array -> last_brk_cont		430097	1					
ANR	430194	Identifier	op_array		430097	0					
ANR	430195	Identifier	last_brk_cont		430097	1					
ANR	430196	PostIncDecOperationExpression	i ++	530:40:16398:16400	430097	2	True				
ANR	430197	Identifier	i		430097	0					
ANR	430198	IncDec	++		430097	1					
ANR	430199	CompoundStatement		23:45:496:496	430097	3					
ANR	430200	ExpressionStatement	"zend_access_path ( cfg -> loop_start [ i ] , ctx )"	531:3:16408:16449	430097	0	True				
ANR	430201	CallExpression	"zend_access_path ( cfg -> loop_start [ i ] , ctx )"		430097	0					
ANR	430202	Callee	zend_access_path		430097	0					
ANR	430203	Identifier	zend_access_path		430097	0					
ANR	430204	ArgumentList	cfg -> loop_start [ i ]		430097	1					
ANR	430205	Argument	cfg -> loop_start [ i ]		430097	0					
ANR	430206	ArrayIndexing	cfg -> loop_start [ i ]		430097	0					
ANR	430207	PtrMemberAccess	cfg -> loop_start		430097	0					
ANR	430208	Identifier	cfg		430097	0					
ANR	430209	Identifier	loop_start		430097	1					
ANR	430210	Identifier	i		430097	1					
ANR	430211	Argument	ctx		430097	1					
ANR	430212	Identifier	ctx		430097	0					
ANR	430213	ExpressionStatement	"zend_access_path ( cfg -> loop_cont [ i ] , ctx )"	532:3:16454:16494	430097	1	True				
ANR	430214	CallExpression	"zend_access_path ( cfg -> loop_cont [ i ] , ctx )"		430097	0					
ANR	430215	Callee	zend_access_path		430097	0					
ANR	430216	Identifier	zend_access_path		430097	0					
ANR	430217	ArgumentList	cfg -> loop_cont [ i ]		430097	1					
ANR	430218	Argument	cfg -> loop_cont [ i ]		430097	0					
ANR	430219	ArrayIndexing	cfg -> loop_cont [ i ]		430097	0					
ANR	430220	PtrMemberAccess	cfg -> loop_cont		430097	0					
ANR	430221	Identifier	cfg		430097	0					
ANR	430222	Identifier	loop_cont		430097	1					
ANR	430223	Identifier	i		430097	1					
ANR	430224	Argument	ctx		430097	1					
ANR	430225	Identifier	ctx		430097	0					
ANR	430226	ExpressionStatement	"zend_access_path ( cfg -> loop_brk [ i ] , ctx )"	533:3:16499:16538	430097	2	True				
ANR	430227	CallExpression	"zend_access_path ( cfg -> loop_brk [ i ] , ctx )"		430097	0					
ANR	430228	Callee	zend_access_path		430097	0					
ANR	430229	Identifier	zend_access_path		430097	0					
ANR	430230	ArgumentList	cfg -> loop_brk [ i ]		430097	1					
ANR	430231	Argument	cfg -> loop_brk [ i ]		430097	0					
ANR	430232	ArrayIndexing	cfg -> loop_brk [ i ]		430097	0					
ANR	430233	PtrMemberAccess	cfg -> loop_brk		430097	0					
ANR	430234	Identifier	cfg		430097	0					
ANR	430235	Identifier	loop_brk		430097	1					
ANR	430236	Identifier	i		430097	1					
ANR	430237	Argument	ctx		430097	1					
ANR	430238	Identifier	ctx		430097	0					
ANR	430239	IfStatement	if ( op_array -> last_try_catch )		430097	7					
ANR	430240	Condition	op_array -> last_try_catch	538:5:16580:16603	430097	0	True				
ANR	430241	PtrMemberAccess	op_array -> last_try_catch		430097	0					
ANR	430242	Identifier	op_array		430097	0					
ANR	430243	Identifier	last_try_catch		430097	1					
ANR	430244	CompoundStatement		32:2:703:708	430097	1					
ANR	430245	IdentifierDeclStatement	int i ;	539:2:16610:16615	430097	0	True				
ANR	430246	IdentifierDecl	i		430097	0					
ANR	430247	IdentifierDeclType	int		430097	0					
ANR	430248	Identifier	i		430097	1					
ANR	430249	ForStatement	for ( i = 0 ; i < op_array -> last_try_catch ; i ++ )		430097	1					
ANR	430250	ForInit	i = 0 ;	540:7:16624:16627	430097	0	True				
ANR	430251	AssignmentExpression	i = 0		430097	0		=			
ANR	430252	Identifier	i		430097	0					
ANR	430253	PrimaryExpression	0		430097	1					
ANR	430254	Condition	i < op_array -> last_try_catch	540:12:16629:16655	430097	1	True				
ANR	430255	RelationalExpression	i < op_array -> last_try_catch		430097	0		<			
ANR	430256	Identifier	i		430097	0					
ANR	430257	PtrMemberAccess	op_array -> last_try_catch		430097	1					
ANR	430258	Identifier	op_array		430097	0					
ANR	430259	Identifier	last_try_catch		430097	1					
ANR	430260	PostIncDecOperationExpression	i ++	540:41:16658:16660	430097	2	True				
ANR	430261	Identifier	i		430097	0					
ANR	430262	IncDec	++		430097	1					
ANR	430263	CompoundStatement		33:46:756:756	430097	3					
ANR	430264	Statement	if	541:3:16668:16669	430097	0	True				
ANR	430265	Statement	(	541:6:16671:16671	430097	1	True				
ANR	430266	Statement	!	541:7:16672:16672	430097	2	True				
ANR	430267	Statement	cfg	541:8:16673:16675	430097	3	True				
ANR	430268	Statement	->	541:11:16676:16677	430097	4	True				
ANR	430269	Statement	catch	541:13:16678:16682	430097	5	True				
ANR	430270	Statement	[	541:18:16683:16683	430097	6	True				
ANR	430271	Statement	i	541:19:16684:16684	430097	7	True				
ANR	430272	Statement	]	541:20:16685:16685	430097	8	True				
ANR	430273	Statement	->	541:21:16686:16687	430097	9	True				
ANR	430274	Statement	access	541:23:16688:16693	430097	10	True				
ANR	430275	Statement	)	541:29:16694:16694	430097	11	True				
ANR	430276	CompoundStatement		34:31:789:789	430097	12					
ANR	430277	Statement	zend_access_path	542:4:16702:16717	430097	0	True				
ANR	430278	Statement	(	542:20:16718:16718	430097	1	True				
ANR	430279	Statement	cfg	542:21:16719:16721	430097	2	True				
ANR	430280	Statement	->	542:24:16722:16723	430097	3	True				
ANR	430281	Statement	catch	542:26:16724:16728	430097	4	True				
ANR	430282	Statement	[	542:31:16729:16729	430097	5	True				
ANR	430283	Statement	i	542:32:16730:16730	430097	6	True				
ANR	430284	Statement	]	542:33:16731:16731	430097	7	True				
ANR	430285	Statement	","	542:34:16732:16732	430097	8	True				
ANR	430286	Statement	ctx	542:36:16734:16736	430097	9	True				
ANR	430287	Statement	)	542:39:16737:16737	430097	10	True				
ANR	430288	ExpressionStatement		542:40:16738:16738	430097	11	True				
ANR	430289	ReturnType	static void		430097	1					
ANR	430290	Identifier	zend_rebuild_access_path		430097	2					
ANR	430291	ParameterList	"zend_cfg * cfg , zend_op_array * op_array , int find_start , zend_optimizer_ctx * ctx"		430097	3					
ANR	430292	Parameter	zend_cfg * cfg	507:37:15825:15837	430097	0	True				
ANR	430293	ParameterType	zend_cfg *		430097	0					
ANR	430294	Identifier	cfg		430097	1					
ANR	430295	Parameter	zend_op_array * op_array	507:52:15840:15862	430097	1	True				
ANR	430296	ParameterType	zend_op_array *		430097	0					
ANR	430297	Identifier	op_array		430097	1					
ANR	430298	Parameter	int find_start	507:77:15865:15878	430097	2	True				
ANR	430299	ParameterType	int		430097	0					
ANR	430300	Identifier	find_start		430097	1					
ANR	430301	Parameter	zend_optimizer_ctx * ctx	507:93:15881:15903	430097	3	True				
ANR	430302	ParameterType	zend_optimizer_ctx *		430097	0					
ANR	430303	Identifier	ctx		430097	1					
ANR	430304	CFGEntryNode	ENTRY		430097		True				
ANR	430305	CFGExitNode	EXIT		430097		True				
ANR	430306	Symbol	* cfg -> loop_brk		430097						
ANR	430307	Symbol	cfg -> blocks		430097						
ANR	430308	Symbol	b -> access		430097						
ANR	430309	Symbol	cfg -> loop_brk		430097						
ANR	430310	Symbol	b -> next		430097						
ANR	430311	Symbol	cfg -> loop_cont		430097						
ANR	430312	Symbol	b		430097						
ANR	430313	Symbol	NULL		430097						
ANR	430314	Symbol	cfg		430097						
ANR	430315	Symbol	ctx		430097						
ANR	430316	Symbol	blocks		430097						
ANR	430317	Symbol	start		430097						
ANR	430318	Symbol	i		430097						
ANR	430319	Symbol	* b		430097						
ANR	430320	Symbol	* op_array		430097						
ANR	430321	Symbol	op_array -> last_brk_cont		430097						
ANR	430322	Symbol	op_array -> last_try_catch		430097						
ANR	430323	Symbol	find_start		430097						
ANR	430324	Symbol	* cfg		430097						
ANR	430325	Symbol	b -> sources		430097						
ANR	430326	Symbol	* i		430097						
ANR	430327	Symbol	* cfg -> loop_start		430097						
ANR	430328	Symbol	* cfg -> loop_cont		430097						
ANR	430329	Symbol	* * cfg		430097						
ANR	430330	Symbol	cfg -> loop_start		430097						
ANR	430331	Symbol	op_array		430097						
ANR	430332	Function	strip_nop	564:0:17203:18161							
ANR	430333	FunctionDef	"strip_nop (zend_code_block * block , zend_optimizer_ctx * ctx)"		430332	0					
ANR	430334	CompoundStatement		565:0:17274:18161	430332	0					
ANR	430335	IdentifierDeclStatement	zend_op * opline = block -> start_opline ;	566:1:17277:17314	430332	0	True				
ANR	430336	IdentifierDecl	* opline = block -> start_opline		430332	0					
ANR	430337	IdentifierDeclType	zend_op *		430332	0					
ANR	430338	Identifier	opline		430332	1					
ANR	430339	AssignmentExpression	* opline = block -> start_opline		430332	2		=			
ANR	430340	Identifier	opline		430332	0					
ANR	430341	PtrMemberAccess	block -> start_opline		430332	1					
ANR	430342	Identifier	block		430332	0					
ANR	430343	Identifier	start_opline		430332	1					
ANR	430344	IdentifierDeclStatement	"zend_op * end , * new_end ;"	567:1:17317:17339	430332	1	True				
ANR	430345	IdentifierDecl	* end		430332	0					
ANR	430346	IdentifierDeclType	zend_op *		430332	0					
ANR	430347	Identifier	end		430332	1					
ANR	430348	IdentifierDecl	* new_end		430332	1					
ANR	430349	IdentifierDeclType	zend_op *		430332	0					
ANR	430350	Identifier	new_end		430332	1					
ANR	430351	WhileStatement	while ( block -> len > 0 && block -> start_opline -> opcode == ZEND_NOP )		430332	2					
ANR	430352	Condition	block -> len > 0 && block -> start_opline -> opcode == ZEND_NOP	570:8:17377:17433	430332	0	True				
ANR	430353	AndExpression	block -> len > 0 && block -> start_opline -> opcode == ZEND_NOP		430332	0		&&			
ANR	430354	RelationalExpression	block -> len > 0		430332	0		>			
ANR	430355	PtrMemberAccess	block -> len		430332	0					
ANR	430356	Identifier	block		430332	0					
ANR	430357	Identifier	len		430332	1					
ANR	430358	PrimaryExpression	0		430332	1					
ANR	430359	EqualityExpression	block -> start_opline -> opcode == ZEND_NOP		430332	1		==			
ANR	430360	PtrMemberAccess	block -> start_opline -> opcode		430332	0					
ANR	430361	PtrMemberAccess	block -> start_opline		430332	0					
ANR	430362	Identifier	block		430332	0					
ANR	430363	Identifier	start_opline		430332	1					
ANR	430364	Identifier	opcode		430332	1					
ANR	430365	Identifier	ZEND_NOP		430332	1					
ANR	430366	CompoundStatement		6:67:161:161	430332	1					
ANR	430367	IfStatement	if ( block -> len == 1 )		430332	0					
ANR	430368	Condition	block -> len == 1	571:6:17444:17458	430332	0	True				
ANR	430369	EqualityExpression	block -> len == 1		430332	0		==			
ANR	430370	PtrMemberAccess	block -> len		430332	0					
ANR	430371	Identifier	block		430332	0					
ANR	430372	Identifier	len		430332	1					
ANR	430373	PrimaryExpression	1		430332	1					
ANR	430374	CompoundStatement		7:23:186:186	430332	1					
ANR	430375	IfStatement	if ( block -> follow_to )		430332	0					
ANR	430376	Condition	block -> follow_to	573:7:17529:17544	430332	0	True				
ANR	430377	PtrMemberAccess	block -> follow_to		430332	0					
ANR	430378	Identifier	block		430332	0					
ANR	430379	Identifier	follow_to		430332	1					
ANR	430380	CompoundStatement		9:25:272:272	430332	1					
ANR	430381	ExpressionStatement	"delete_code_block ( block , ctx )"	574:4:17553:17582	430332	0	True				
ANR	430382	CallExpression	"delete_code_block ( block , ctx )"		430332	0					
ANR	430383	Callee	delete_code_block		430332	0					
ANR	430384	Identifier	delete_code_block		430332	0					
ANR	430385	ArgumentList	block		430332	1					
ANR	430386	Argument	block		430332	0					
ANR	430387	Identifier	block		430332	0					
ANR	430388	Argument	ctx		430332	1					
ANR	430389	Identifier	ctx		430332	0					
ANR	430390	ReturnStatement	return ;	576:3:17592:17598	430332	1	True				
ANR	430391	ExpressionStatement	block -> start_opline ++	578:2:17606:17627	430332	1	True				
ANR	430392	PostIncDecOperationExpression	block -> start_opline ++		430332	0					
ANR	430393	PtrMemberAccess	block -> start_opline		430332	0					
ANR	430394	Identifier	block		430332	0					
ANR	430395	Identifier	start_opline		430332	1					
ANR	430396	IncDec	++		430332	1					
ANR	430397	ExpressionStatement	block -> start_opline_no ++	579:2:17631:17655	430332	2	True				
ANR	430398	PostIncDecOperationExpression	block -> start_opline_no ++		430332	0					
ANR	430399	PtrMemberAccess	block -> start_opline_no		430332	0					
ANR	430400	Identifier	block		430332	0					
ANR	430401	Identifier	start_opline_no		430332	1					
ANR	430402	IncDec	++		430332	1					
ANR	430403	ExpressionStatement	block -> len --	580:2:17659:17671	430332	3	True				
ANR	430404	PostIncDecOperationExpression	block -> len --		430332	0					
ANR	430405	PtrMemberAccess	block -> len		430332	0					
ANR	430406	Identifier	block		430332	0					
ANR	430407	Identifier	len		430332	1					
ANR	430408	IncDec	--		430332	1					
ANR	430409	ExpressionStatement	opline = new_end = block -> start_opline	584:1:17707:17745	430332	3	True				
ANR	430410	AssignmentExpression	opline = new_end = block -> start_opline		430332	0		=			
ANR	430411	Identifier	opline		430332	0					
ANR	430412	AssignmentExpression	new_end = block -> start_opline		430332	1		=			
ANR	430413	Identifier	new_end		430332	0					
ANR	430414	PtrMemberAccess	block -> start_opline		430332	1					
ANR	430415	Identifier	block		430332	0					
ANR	430416	Identifier	start_opline		430332	1					
ANR	430417	ExpressionStatement	end = opline + block -> len	585:1:17748:17773	430332	4	True				
ANR	430418	AssignmentExpression	end = opline + block -> len		430332	0		=			
ANR	430419	Identifier	end		430332	0					
ANR	430420	AdditiveExpression	opline + block -> len		430332	1		+			
ANR	430421	Identifier	opline		430332	0					
ANR	430422	PtrMemberAccess	block -> len		430332	1					
ANR	430423	Identifier	block		430332	0					
ANR	430424	Identifier	len		430332	1					
ANR	430425	WhileStatement	while ( opline < end )		430332	5					
ANR	430426	Condition	opline < end	587:8:17784:17795	430332	0	True				
ANR	430427	RelationalExpression	opline < end		430332	0		<			
ANR	430428	Identifier	opline		430332	0					
ANR	430429	Identifier	end		430332	1					
ANR	430430	CompoundStatement		25:2:543:554	430332	1					
ANR	430431	IdentifierDeclStatement	zend_op * src ;	588:2:17802:17814	430332	0	True				
ANR	430432	IdentifierDecl	* src		430332	0					
ANR	430433	IdentifierDeclType	zend_op *		430332	0					
ANR	430434	Identifier	src		430332	1					
ANR	430435	IdentifierDeclStatement	int len = 0 ;	589:2:17818:17829	430332	1	True				
ANR	430436	IdentifierDecl	len = 0		430332	0					
ANR	430437	IdentifierDeclType	int		430332	0					
ANR	430438	Identifier	len		430332	1					
ANR	430439	AssignmentExpression	len = 0		430332	2		=			
ANR	430440	Identifier	len		430332	0					
ANR	430441	PrimaryExpression	0		430332	1					
ANR	430442	WhileStatement	while ( opline < end && opline -> opcode == ZEND_NOP )		430332	2					
ANR	430443	Condition	opline < end && opline -> opcode == ZEND_NOP	591:9:17841:17882	430332	0	True				
ANR	430444	AndExpression	opline < end && opline -> opcode == ZEND_NOP		430332	0		&&			
ANR	430445	RelationalExpression	opline < end		430332	0		<			
ANR	430446	Identifier	opline		430332	0					
ANR	430447	Identifier	end		430332	1					
ANR	430448	EqualityExpression	opline -> opcode == ZEND_NOP		430332	1		==			
ANR	430449	PtrMemberAccess	opline -> opcode		430332	0					
ANR	430450	Identifier	opline		430332	0					
ANR	430451	Identifier	opcode		430332	1					
ANR	430452	Identifier	ZEND_NOP		430332	1					
ANR	430453	CompoundStatement		27:53:610:610	430332	1					
ANR	430454	ExpressionStatement	opline ++	592:3:17890:17898	430332	0	True				
ANR	430455	PostIncDecOperationExpression	opline ++		430332	0					
ANR	430456	Identifier	opline		430332	0					
ANR	430457	IncDec	++		430332	1					
ANR	430458	ExpressionStatement	src = opline	594:2:17906:17918	430332	3	True				
ANR	430459	AssignmentExpression	src = opline		430332	0		=			
ANR	430460	Identifier	src		430332	0					
ANR	430461	Identifier	opline		430332	1					
ANR	430462	WhileStatement	while ( opline < end && opline -> opcode != ZEND_NOP )		430332	4					
ANR	430463	Condition	opline < end && opline -> opcode != ZEND_NOP	596:9:17930:17971	430332	0	True				
ANR	430464	AndExpression	opline < end && opline -> opcode != ZEND_NOP		430332	0		&&			
ANR	430465	RelationalExpression	opline < end		430332	0		<			
ANR	430466	Identifier	opline		430332	0					
ANR	430467	Identifier	end		430332	1					
ANR	430468	EqualityExpression	opline -> opcode != ZEND_NOP		430332	1		!=			
ANR	430469	PtrMemberAccess	opline -> opcode		430332	0					
ANR	430470	Identifier	opline		430332	0					
ANR	430471	Identifier	opcode		430332	1					
ANR	430472	Identifier	ZEND_NOP		430332	1					
ANR	430473	CompoundStatement		32:53:699:699	430332	1					
ANR	430474	ExpressionStatement	opline ++	597:3:17979:17987	430332	0	True				
ANR	430475	PostIncDecOperationExpression	opline ++		430332	0					
ANR	430476	Identifier	opline		430332	0					
ANR	430477	IncDec	++		430332	1					
ANR	430478	ExpressionStatement	len = opline - src	599:2:17995:18013	430332	5	True				
ANR	430479	AssignmentExpression	len = opline - src		430332	0		=			
ANR	430480	Identifier	len		430332	0					
ANR	430481	AdditiveExpression	opline - src		430332	1		-			
ANR	430482	Identifier	opline		430332	0					
ANR	430483	Identifier	src		430332	1					
ANR	430484	ExpressionStatement	"memmove ( new_end , src , len * sizeof ( zend_op ) )"	602:2:18050:18092	430332	6	True				
ANR	430485	CallExpression	"memmove ( new_end , src , len * sizeof ( zend_op ) )"		430332	0					
ANR	430486	Callee	memmove		430332	0					
ANR	430487	Identifier	memmove		430332	0					
ANR	430488	ArgumentList	new_end		430332	1					
ANR	430489	Argument	new_end		430332	0					
ANR	430490	Identifier	new_end		430332	0					
ANR	430491	Argument	src		430332	1					
ANR	430492	Identifier	src		430332	0					
ANR	430493	Argument	len * sizeof ( zend_op )		430332	2					
ANR	430494	MultiplicativeExpression	len * sizeof ( zend_op )		430332	0		*			
ANR	430495	Identifier	len		430332	0					
ANR	430496	SizeofExpression	sizeof ( zend_op )		430332	1					
ANR	430497	Sizeof	sizeof		430332	0					
ANR	430498	SizeofOperand	zend_op		430332	1					
ANR	430499	ExpressionStatement	new_end += len	604:2:18097:18111	430332	7	True				
ANR	430500	AssignmentExpression	new_end += len		430332	0		+=			
ANR	430501	Identifier	new_end		430332	0					
ANR	430502	Identifier	len		430332	1					
ANR	430503	ExpressionStatement	block -> len = new_end - block -> start_opline	606:1:18117:18159	430332	6	True				
ANR	430504	AssignmentExpression	block -> len = new_end - block -> start_opline		430332	0		=			
ANR	430505	PtrMemberAccess	block -> len		430332	0					
ANR	430506	Identifier	block		430332	0					
ANR	430507	Identifier	len		430332	1					
ANR	430508	AdditiveExpression	new_end - block -> start_opline		430332	1		-			
ANR	430509	Identifier	new_end		430332	0					
ANR	430510	PtrMemberAccess	block -> start_opline		430332	1					
ANR	430511	Identifier	block		430332	0					
ANR	430512	Identifier	start_opline		430332	1					
ANR	430513	ReturnType	static void		430332	1					
ANR	430514	Identifier	strip_nop		430332	2					
ANR	430515	ParameterList	"zend_code_block * block , zend_optimizer_ctx * ctx"		430332	3					
ANR	430516	Parameter	zend_code_block * block	564:22:17225:17246	430332	0	True				
ANR	430517	ParameterType	zend_code_block *		430332	0					
ANR	430518	Identifier	block		430332	1					
ANR	430519	Parameter	zend_optimizer_ctx * ctx	564:46:17249:17271	430332	1	True				
ANR	430520	ParameterType	zend_optimizer_ctx *		430332	0					
ANR	430521	Identifier	ctx		430332	1					
ANR	430522	CFGEntryNode	ENTRY		430332		True				
ANR	430523	CFGExitNode	EXIT		430332		True				
ANR	430524	Symbol	* block -> start_opline		430332						
ANR	430525	Symbol	block -> start_opline -> opcode		430332						
ANR	430526	Symbol	src		430332						
ANR	430527	Symbol	ctx		430332						
ANR	430528	Symbol	block -> follow_to		430332						
ANR	430529	Symbol	ZEND_NOP		430332						
ANR	430530	Symbol	block -> len		430332						
ANR	430531	Symbol	* block		430332						
ANR	430532	Symbol	block -> start_opline		430332						
ANR	430533	Symbol	opline		430332						
ANR	430534	Symbol	len		430332						
ANR	430535	Symbol	* opline		430332						
ANR	430536	Symbol	opline -> opcode		430332						
ANR	430537	Symbol	* * block		430332						
ANR	430538	Symbol	block -> start_opline_no		430332						
ANR	430539	Symbol	block		430332						
ANR	430540	Symbol	end		430332						
ANR	430541	Symbol	new_end		430332						
ANR	430542	Function	zend_optimize_block	609:0:18164:38875							
ANR	430543	FunctionDef	"zend_optimize_block (zend_code_block * block , zend_op_array * op_array , zend_bitset used_ext , zend_cfg * cfg , zend_optimizer_ctx * ctx)"		430542	0					
ANR	430544	CompoundStatement		610:0:18307:38875	430542	0					
ANR	430545	IdentifierDeclStatement	zend_op * opline = block -> start_opline ;	611:1:18310:18347	430542	0	True				
ANR	430546	IdentifierDecl	* opline = block -> start_opline		430542	0					
ANR	430547	IdentifierDeclType	zend_op *		430542	0					
ANR	430548	Identifier	opline		430542	1					
ANR	430549	AssignmentExpression	* opline = block -> start_opline		430542	2		=			
ANR	430550	Identifier	opline		430542	0					
ANR	430551	PtrMemberAccess	block -> start_opline		430542	1					
ANR	430552	Identifier	block		430542	0					
ANR	430553	Identifier	start_opline		430542	1					
ANR	430554	IdentifierDeclStatement	"zend_op * end , * last_op = NULL ;"	612:1:18350:18379	430542	1	True				
ANR	430555	IdentifierDecl	* end		430542	0					
ANR	430556	IdentifierDeclType	zend_op *		430542	0					
ANR	430557	Identifier	end		430542	1					
ANR	430558	IdentifierDecl	* last_op = NULL		430542	1					
ANR	430559	IdentifierDeclType	zend_op *		430542	0					
ANR	430560	Identifier	last_op		430542	1					
ANR	430561	AssignmentExpression	* last_op = NULL		430542	2		=			
ANR	430562	Identifier	NULL		430542	0					
ANR	430563	Identifier	NULL		430542	1					
ANR	430564	IdentifierDeclStatement	zend_op * * Tsource = cfg -> Tsource ;	613:1:18382:18414	430542	2	True				
ANR	430565	IdentifierDecl	* * Tsource = cfg -> Tsource		430542	0					
ANR	430566	IdentifierDeclType	zend_op * *		430542	0					
ANR	430567	Identifier	Tsource		430542	1					
ANR	430568	AssignmentExpression	* * Tsource = cfg -> Tsource		430542	2		=			
ANR	430569	Identifier	Tsource		430542	0					
ANR	430570	PtrMemberAccess	cfg -> Tsource		430542	1					
ANR	430571	Identifier	cfg		430542	0					
ANR	430572	Identifier	Tsource		430542	1					
ANR	430573	ExpressionStatement	"print_block ( block , op_array -> opcodes , ""Opt "" )"	615:1:18418:18463	430542	3	True				
ANR	430574	CallExpression	"print_block ( block , op_array -> opcodes , ""Opt "" )"		430542	0					
ANR	430575	Callee	print_block		430542	0					
ANR	430576	Identifier	print_block		430542	0					
ANR	430577	ArgumentList	block		430542	1					
ANR	430578	Argument	block		430542	0					
ANR	430579	Identifier	block		430542	0					
ANR	430580	Argument	op_array -> opcodes		430542	1					
ANR	430581	PtrMemberAccess	op_array -> opcodes		430542	0					
ANR	430582	Identifier	op_array		430542	0					
ANR	430583	Identifier	opcodes		430542	1					
ANR	430584	Argument	"""Opt """		430542	2					
ANR	430585	PrimaryExpression	"""Opt """		430542	0					
ANR	430586	WhileStatement	while ( block -> len > 0 && block -> start_opline -> opcode == ZEND_NOP )		430542	4					
ANR	430587	Condition	block -> len > 0 && block -> start_opline -> opcode == ZEND_NOP	618:8:18501:18557	430542	0	True				
ANR	430588	AndExpression	block -> len > 0 && block -> start_opline -> opcode == ZEND_NOP		430542	0		&&			
ANR	430589	RelationalExpression	block -> len > 0		430542	0		>			
ANR	430590	PtrMemberAccess	block -> len		430542	0					
ANR	430591	Identifier	block		430542	0					
ANR	430592	Identifier	len		430542	1					
ANR	430593	PrimaryExpression	0		430542	1					
ANR	430594	EqualityExpression	block -> start_opline -> opcode == ZEND_NOP		430542	1		==			
ANR	430595	PtrMemberAccess	block -> start_opline -> opcode		430542	0					
ANR	430596	PtrMemberAccess	block -> start_opline		430542	0					
ANR	430597	Identifier	block		430542	0					
ANR	430598	Identifier	start_opline		430542	1					
ANR	430599	Identifier	opcode		430542	1					
ANR	430600	Identifier	ZEND_NOP		430542	1					
ANR	430601	CompoundStatement		9:67:252:252	430542	1					
ANR	430602	IfStatement	if ( block -> len == 1 )		430542	0					
ANR	430603	Condition	block -> len == 1	619:6:18568:18582	430542	0	True				
ANR	430604	EqualityExpression	block -> len == 1		430542	0		==			
ANR	430605	PtrMemberAccess	block -> len		430542	0					
ANR	430606	Identifier	block		430542	0					
ANR	430607	Identifier	len		430542	1					
ANR	430608	PrimaryExpression	1		430542	1					
ANR	430609	CompoundStatement		10:23:277:277	430542	1					
ANR	430610	IfStatement	if ( block -> follow_to )		430542	0					
ANR	430611	Condition	block -> follow_to	621:7:18653:18668	430542	0	True				
ANR	430612	PtrMemberAccess	block -> follow_to		430542	0					
ANR	430613	Identifier	block		430542	0					
ANR	430614	Identifier	follow_to		430542	1					
ANR	430615	CompoundStatement		12:25:363:363	430542	1					
ANR	430616	ExpressionStatement	"delete_code_block ( block , ctx )"	622:4:18677:18706	430542	0	True				
ANR	430617	CallExpression	"delete_code_block ( block , ctx )"		430542	0					
ANR	430618	Callee	delete_code_block		430542	0					
ANR	430619	Identifier	delete_code_block		430542	0					
ANR	430620	ArgumentList	block		430542	1					
ANR	430621	Argument	block		430542	0					
ANR	430622	Identifier	block		430542	0					
ANR	430623	Argument	ctx		430542	1					
ANR	430624	Identifier	ctx		430542	0					
ANR	430625	ReturnStatement	return ;	624:3:18716:18722	430542	1	True				
ANR	430626	ExpressionStatement	block -> start_opline ++	626:2:18730:18751	430542	1	True				
ANR	430627	PostIncDecOperationExpression	block -> start_opline ++		430542	0					
ANR	430628	PtrMemberAccess	block -> start_opline		430542	0					
ANR	430629	Identifier	block		430542	0					
ANR	430630	Identifier	start_opline		430542	1					
ANR	430631	IncDec	++		430542	1					
ANR	430632	ExpressionStatement	block -> start_opline_no ++	627:2:18755:18779	430542	2	True				
ANR	430633	PostIncDecOperationExpression	block -> start_opline_no ++		430542	0					
ANR	430634	PtrMemberAccess	block -> start_opline_no		430542	0					
ANR	430635	Identifier	block		430542	0					
ANR	430636	Identifier	start_opline_no		430542	1					
ANR	430637	IncDec	++		430542	1					
ANR	430638	ExpressionStatement	block -> len --	628:2:18783:18795	430542	3	True				
ANR	430639	PostIncDecOperationExpression	block -> len --		430542	0					
ANR	430640	PtrMemberAccess	block -> len		430542	0					
ANR	430641	Identifier	block		430542	0					
ANR	430642	Identifier	len		430542	1					
ANR	430643	IncDec	--		430542	1					
ANR	430644	ExpressionStatement	"memset ( Tsource , 0 , ( op_array -> last_var + op_array -> T ) * sizeof ( zend_op * ) )"	632:1:18870:18944	430542	5	True				
ANR	430645	CallExpression	"memset ( Tsource , 0 , ( op_array -> last_var + op_array -> T ) * sizeof ( zend_op * ) )"		430542	0					
ANR	430646	Callee	memset		430542	0					
ANR	430647	Identifier	memset		430542	0					
ANR	430648	ArgumentList	Tsource		430542	1					
ANR	430649	Argument	Tsource		430542	0					
ANR	430650	Identifier	Tsource		430542	0					
ANR	430651	Argument	0		430542	1					
ANR	430652	PrimaryExpression	0		430542	0					
ANR	430653	Argument	( op_array -> last_var + op_array -> T ) * sizeof ( zend_op * )		430542	2					
ANR	430654	MultiplicativeExpression	( op_array -> last_var + op_array -> T ) * sizeof ( zend_op * )		430542	0		*			
ANR	430655	AdditiveExpression	op_array -> last_var + op_array -> T		430542	0		+			
ANR	430656	PtrMemberAccess	op_array -> last_var		430542	0					
ANR	430657	Identifier	op_array		430542	0					
ANR	430658	Identifier	last_var		430542	1					
ANR	430659	PtrMemberAccess	op_array -> T		430542	1					
ANR	430660	Identifier	op_array		430542	0					
ANR	430661	Identifier	T		430542	1					
ANR	430662	SizeofExpression	sizeof ( zend_op * )		430542	1					
ANR	430663	Sizeof	sizeof		430542	0					
ANR	430664	SizeofOperand	zend_op *		430542	1					
ANR	430665	ExpressionStatement	opline = block -> start_opline	633:1:18947:18975	430542	6	True				
ANR	430666	AssignmentExpression	opline = block -> start_opline		430542	0		=			
ANR	430667	Identifier	opline		430542	0					
ANR	430668	PtrMemberAccess	block -> start_opline		430542	1					
ANR	430669	Identifier	block		430542	0					
ANR	430670	Identifier	start_opline		430542	1					
ANR	430671	ExpressionStatement	end = opline + block -> len	634:1:18978:19003	430542	7	True				
ANR	430672	AssignmentExpression	end = opline + block -> len		430542	0		=			
ANR	430673	Identifier	end		430542	0					
ANR	430674	AdditiveExpression	opline + block -> len		430542	1		+			
ANR	430675	Identifier	opline		430542	0					
ANR	430676	PtrMemberAccess	block -> len		430542	1					
ANR	430677	Identifier	block		430542	0					
ANR	430678	Identifier	len		430542	1					
ANR	430679	WhileStatement	while ( ( op_array -> T ) && ( opline < end ) )		430542	8					
ANR	430680	Condition	( op_array -> T ) && ( opline < end )	635:8:19013:19043	430542	0	True				
ANR	430681	AndExpression	( op_array -> T ) && ( opline < end )		430542	0		&&			
ANR	430682	PtrMemberAccess	op_array -> T		430542	0					
ANR	430683	Identifier	op_array		430542	0					
ANR	430684	Identifier	T		430542	1					
ANR	430685	RelationalExpression	opline < end		430542	1		<			
ANR	430686	Identifier	opline		430542	0					
ANR	430687	Identifier	end		430542	1					
ANR	430688	CompoundStatement		26:41:738:738	430542	1					
ANR	430689	IfStatement	if ( ( ZEND_OP1_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) ) && VAR_SOURCE ( opline -> op1 ) && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_QM_ASSIGN && ZEND_OP1_TYPE ( VAR_SOURCE ( opline -> op1 ) ) == IS_CONST && opline -> opcode != ZEND_CASE && opline -> opcode != ZEND_FETCH_LIST && ( opline -> opcode != ZEND_FE_RESET_R || opline -> opcode != ZEND_FE_RESET_RW ) && opline -> opcode != ZEND_FREE )		430542	0					
ANR	430690	Condition	( ZEND_OP1_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) ) && VAR_SOURCE ( opline -> op1 ) && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_QM_ASSIGN && ZEND_OP1_TYPE ( VAR_SOURCE ( opline -> op1 ) ) == IS_CONST && opline -> opcode != ZEND_CASE && opline -> opcode != ZEND_FETCH_LIST && ( opline -> opcode != ZEND_FE_RESET_R || opline -> opcode != ZEND_FE_RESET_RW ) && opline -> opcode != ZEND_FREE	637:6:19089:19509	430542	0	True				
ANR	430691	AndExpression	( ZEND_OP1_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) ) && VAR_SOURCE ( opline -> op1 ) && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_QM_ASSIGN && ZEND_OP1_TYPE ( VAR_SOURCE ( opline -> op1 ) ) == IS_CONST && opline -> opcode != ZEND_CASE && opline -> opcode != ZEND_FETCH_LIST && ( opline -> opcode != ZEND_FE_RESET_R || opline -> opcode != ZEND_FE_RESET_RW ) && opline -> opcode != ZEND_FREE		430542	0		&&			
ANR	430692	BitAndExpression	ZEND_OP1_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR )		430542	0		&			
ANR	430693	CallExpression	ZEND_OP1_TYPE ( opline )		430542	0					
ANR	430694	Callee	ZEND_OP1_TYPE		430542	0					
ANR	430695	Identifier	ZEND_OP1_TYPE		430542	0					
ANR	430696	ArgumentList	opline		430542	1					
ANR	430697	Argument	opline		430542	0					
ANR	430698	Identifier	opline		430542	0					
ANR	430699	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		430542	1		|			
ANR	430700	Identifier	IS_TMP_VAR		430542	0					
ANR	430701	Identifier	IS_VAR		430542	1					
ANR	430702	AndExpression	VAR_SOURCE ( opline -> op1 ) && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_QM_ASSIGN && ZEND_OP1_TYPE ( VAR_SOURCE ( opline -> op1 ) ) == IS_CONST && opline -> opcode != ZEND_CASE && opline -> opcode != ZEND_FETCH_LIST && ( opline -> opcode != ZEND_FE_RESET_R || opline -> opcode != ZEND_FE_RESET_RW ) && opline -> opcode != ZEND_FREE		430542	1		&&			
ANR	430703	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	430704	Callee	VAR_SOURCE		430542	0					
ANR	430705	Identifier	VAR_SOURCE		430542	0					
ANR	430706	ArgumentList	opline -> op1		430542	1					
ANR	430707	Argument	opline -> op1		430542	0					
ANR	430708	PtrMemberAccess	opline -> op1		430542	0					
ANR	430709	Identifier	opline		430542	0					
ANR	430710	Identifier	op1		430542	1					
ANR	430711	AndExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_QM_ASSIGN && ZEND_OP1_TYPE ( VAR_SOURCE ( opline -> op1 ) ) == IS_CONST && opline -> opcode != ZEND_CASE && opline -> opcode != ZEND_FETCH_LIST && ( opline -> opcode != ZEND_FE_RESET_R || opline -> opcode != ZEND_FE_RESET_RW ) && opline -> opcode != ZEND_FREE		430542	1		&&			
ANR	430712	EqualityExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_QM_ASSIGN		430542	0		==			
ANR	430713	PtrMemberAccess	VAR_SOURCE ( opline -> op1 ) -> opcode		430542	0					
ANR	430714	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	430715	Callee	VAR_SOURCE		430542	0					
ANR	430716	Identifier	VAR_SOURCE		430542	0					
ANR	430717	ArgumentList	opline -> op1		430542	1					
ANR	430718	Argument	opline -> op1		430542	0					
ANR	430719	PtrMemberAccess	opline -> op1		430542	0					
ANR	430720	Identifier	opline		430542	0					
ANR	430721	Identifier	op1		430542	1					
ANR	430722	Identifier	opcode		430542	1					
ANR	430723	Identifier	ZEND_QM_ASSIGN		430542	1					
ANR	430724	AndExpression	ZEND_OP1_TYPE ( VAR_SOURCE ( opline -> op1 ) ) == IS_CONST && opline -> opcode != ZEND_CASE && opline -> opcode != ZEND_FETCH_LIST && ( opline -> opcode != ZEND_FE_RESET_R || opline -> opcode != ZEND_FE_RESET_RW ) && opline -> opcode != ZEND_FREE		430542	1		&&			
ANR	430725	EqualityExpression	ZEND_OP1_TYPE ( VAR_SOURCE ( opline -> op1 ) ) == IS_CONST		430542	0		==			
ANR	430726	CallExpression	ZEND_OP1_TYPE ( VAR_SOURCE ( opline -> op1 ) )		430542	0					
ANR	430727	Callee	ZEND_OP1_TYPE		430542	0					
ANR	430728	Identifier	ZEND_OP1_TYPE		430542	0					
ANR	430729	ArgumentList	VAR_SOURCE ( opline -> op1 )		430542	1					
ANR	430730	Argument	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	430731	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	430732	Callee	VAR_SOURCE		430542	0					
ANR	430733	Identifier	VAR_SOURCE		430542	0					
ANR	430734	ArgumentList	opline -> op1		430542	1					
ANR	430735	Argument	opline -> op1		430542	0					
ANR	430736	PtrMemberAccess	opline -> op1		430542	0					
ANR	430737	Identifier	opline		430542	0					
ANR	430738	Identifier	op1		430542	1					
ANR	430739	Identifier	IS_CONST		430542	1					
ANR	430740	AndExpression	opline -> opcode != ZEND_CASE && opline -> opcode != ZEND_FETCH_LIST && ( opline -> opcode != ZEND_FE_RESET_R || opline -> opcode != ZEND_FE_RESET_RW ) && opline -> opcode != ZEND_FREE		430542	1		&&			
ANR	430741	EqualityExpression	opline -> opcode != ZEND_CASE		430542	0		!=			
ANR	430742	PtrMemberAccess	opline -> opcode		430542	0					
ANR	430743	Identifier	opline		430542	0					
ANR	430744	Identifier	opcode		430542	1					
ANR	430745	Identifier	ZEND_CASE		430542	1					
ANR	430746	AndExpression	opline -> opcode != ZEND_FETCH_LIST && ( opline -> opcode != ZEND_FE_RESET_R || opline -> opcode != ZEND_FE_RESET_RW ) && opline -> opcode != ZEND_FREE		430542	1		&&			
ANR	430747	EqualityExpression	opline -> opcode != ZEND_FETCH_LIST		430542	0		!=			
ANR	430748	PtrMemberAccess	opline -> opcode		430542	0					
ANR	430749	Identifier	opline		430542	0					
ANR	430750	Identifier	opcode		430542	1					
ANR	430751	Identifier	ZEND_FETCH_LIST		430542	1					
ANR	430752	AndExpression	( opline -> opcode != ZEND_FE_RESET_R || opline -> opcode != ZEND_FE_RESET_RW ) && opline -> opcode != ZEND_FREE		430542	1		&&			
ANR	430753	OrExpression	opline -> opcode != ZEND_FE_RESET_R || opline -> opcode != ZEND_FE_RESET_RW		430542	0		||			
ANR	430754	EqualityExpression	opline -> opcode != ZEND_FE_RESET_R		430542	0		!=			
ANR	430755	PtrMemberAccess	opline -> opcode		430542	0					
ANR	430756	Identifier	opline		430542	0					
ANR	430757	Identifier	opcode		430542	1					
ANR	430758	Identifier	ZEND_FE_RESET_R		430542	1					
ANR	430759	EqualityExpression	opline -> opcode != ZEND_FE_RESET_RW		430542	1		!=			
ANR	430760	PtrMemberAccess	opline -> opcode		430542	0					
ANR	430761	Identifier	opline		430542	0					
ANR	430762	Identifier	opcode		430542	1					
ANR	430763	Identifier	ZEND_FE_RESET_RW		430542	1					
ANR	430764	EqualityExpression	opline -> opcode != ZEND_FREE		430542	1		!=			
ANR	430765	PtrMemberAccess	opline -> opcode		430542	0					
ANR	430766	Identifier	opline		430542	0					
ANR	430767	Identifier	opcode		430542	1					
ANR	430768	Identifier	ZEND_FREE		430542	1					
ANR	430769	CompoundStatement		39:3:1279:1309	430542	1					
ANR	430770	IdentifierDeclStatement	znode_op op1 = opline -> op1 ;	646:3:19521:19547	430542	0	True				
ANR	430771	IdentifierDecl	op1 = opline -> op1		430542	0					
ANR	430772	IdentifierDeclType	znode_op		430542	0					
ANR	430773	Identifier	op1		430542	1					
ANR	430774	AssignmentExpression	op1 = opline -> op1		430542	2		=			
ANR	430775	Identifier	op1		430542	0					
ANR	430776	PtrMemberAccess	opline -> op1		430542	1					
ANR	430777	Identifier	opline		430542	0					
ANR	430778	Identifier	op1		430542	1					
ANR	430779	IdentifierDeclStatement	zend_op * src = VAR_SOURCE ( op1 ) ;	647:3:19552:19582	430542	1	True				
ANR	430780	IdentifierDecl	* src = VAR_SOURCE ( op1 )		430542	0					
ANR	430781	IdentifierDeclType	zend_op *		430542	0					
ANR	430782	Identifier	src		430542	1					
ANR	430783	AssignmentExpression	* src = VAR_SOURCE ( op1 )		430542	2		=			
ANR	430784	Identifier	src		430542	0					
ANR	430785	CallExpression	VAR_SOURCE ( op1 )		430542	1					
ANR	430786	Callee	VAR_SOURCE		430542	0					
ANR	430787	Identifier	VAR_SOURCE		430542	0					
ANR	430788	ArgumentList	op1		430542	1					
ANR	430789	Argument	op1		430542	0					
ANR	430790	Identifier	op1		430542	0					
ANR	430791	IdentifierDeclStatement	zval c = ZEND_OP1_LITERAL ( src ) ;	648:3:19587:19617	430542	2	True				
ANR	430792	IdentifierDecl	c = ZEND_OP1_LITERAL ( src )		430542	0					
ANR	430793	IdentifierDeclType	zval		430542	0					
ANR	430794	Identifier	c		430542	1					
ANR	430795	AssignmentExpression	c = ZEND_OP1_LITERAL ( src )		430542	2		=			
ANR	430796	Identifier	c		430542	0					
ANR	430797	CallExpression	ZEND_OP1_LITERAL ( src )		430542	1					
ANR	430798	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	430799	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	430800	ArgumentList	src		430542	1					
ANR	430801	Argument	src		430542	0					
ANR	430802	Identifier	src		430542	0					
ANR	430803	ExpressionStatement	zval_copy_ctor ( & c )	649:3:19622:19640	430542	3	True				
ANR	430804	CallExpression	zval_copy_ctor ( & c )		430542	0					
ANR	430805	Callee	zval_copy_ctor		430542	0					
ANR	430806	Identifier	zval_copy_ctor		430542	0					
ANR	430807	ArgumentList	& c		430542	1					
ANR	430808	Argument	& c		430542	0					
ANR	430809	UnaryOperationExpression	& c		430542	0					
ANR	430810	UnaryOperator	&		430542	0					
ANR	430811	Identifier	c		430542	1					
ANR	430812	IfStatement	"if ( zend_optimizer_update_op1_const ( op_array , opline , & c ) )"		430542	4					
ANR	430813	Condition	"zend_optimizer_update_op1_const ( op_array , opline , & c )"	650:7:19649:19701	430542	0	True				
ANR	430814	CallExpression	"zend_optimizer_update_op1_const ( op_array , opline , & c )"		430542	0					
ANR	430815	Callee	zend_optimizer_update_op1_const		430542	0					
ANR	430816	Identifier	zend_optimizer_update_op1_const		430542	0					
ANR	430817	ArgumentList	op_array		430542	1					
ANR	430818	Argument	op_array		430542	0					
ANR	430819	Identifier	op_array		430542	0					
ANR	430820	Argument	opline		430542	1					
ANR	430821	Identifier	opline		430542	0					
ANR	430822	Argument	& c		430542	2					
ANR	430823	UnaryOperationExpression	& c		430542	0					
ANR	430824	UnaryOperator	&		430542	0					
ANR	430825	Identifier	c		430542	1					
ANR	430826	CompoundStatement		41:62:1396:1396	430542	1					
ANR	430827	ExpressionStatement	VAR_SOURCE ( op1 ) = NULL	651:4:19710:19732	430542	0	True				
ANR	430828	AssignmentExpression	VAR_SOURCE ( op1 ) = NULL		430542	0		=			
ANR	430829	CallExpression	VAR_SOURCE ( op1 )		430542	0					
ANR	430830	Callee	VAR_SOURCE		430542	0					
ANR	430831	Identifier	VAR_SOURCE		430542	0					
ANR	430832	ArgumentList	op1		430542	1					
ANR	430833	Argument	op1		430542	0					
ANR	430834	Identifier	op1		430542	0					
ANR	430835	Identifier	NULL		430542	1					
ANR	430836	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( src ) )	652:4:19738:19774	430542	1	True				
ANR	430837	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( src ) )		430542	0					
ANR	430838	Callee	literal_dtor		430542	0					
ANR	430839	Identifier	literal_dtor		430542	0					
ANR	430840	ArgumentList	& ZEND_OP1_LITERAL ( src )		430542	1					
ANR	430841	Argument	& ZEND_OP1_LITERAL ( src )		430542	0					
ANR	430842	UnaryOperationExpression	& ZEND_OP1_LITERAL ( src )		430542	0					
ANR	430843	UnaryOperator	&		430542	0					
ANR	430844	CallExpression	ZEND_OP1_LITERAL ( src )		430542	1					
ANR	430845	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	430846	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	430847	ArgumentList	src		430542	1					
ANR	430848	Argument	src		430542	0					
ANR	430849	Identifier	src		430542	0					
ANR	430850	ExpressionStatement	MAKE_NOP ( src )	653:4:19780:19793	430542	2	True				
ANR	430851	CallExpression	MAKE_NOP ( src )		430542	0					
ANR	430852	Callee	MAKE_NOP		430542	0					
ANR	430853	Identifier	MAKE_NOP		430542	0					
ANR	430854	ArgumentList	src		430542	1					
ANR	430855	Argument	src		430542	0					
ANR	430856	Identifier	src		430542	0					
ANR	430857	IfStatement	if ( ( ZEND_OP2_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) ) && VAR_SOURCE ( opline -> op2 ) && VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_QM_ASSIGN && ZEND_OP1_TYPE ( VAR_SOURCE ( opline -> op2 ) ) == IS_CONST )		430542	1					
ANR	430858	Condition	( ZEND_OP2_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) ) && VAR_SOURCE ( opline -> op2 ) && VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_QM_ASSIGN && ZEND_OP1_TYPE ( VAR_SOURCE ( opline -> op2 ) ) == IS_CONST	658:6:19855:20042	430542	0	True				
ANR	430859	AndExpression	( ZEND_OP2_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) ) && VAR_SOURCE ( opline -> op2 ) && VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_QM_ASSIGN && ZEND_OP1_TYPE ( VAR_SOURCE ( opline -> op2 ) ) == IS_CONST		430542	0		&&			
ANR	430860	BitAndExpression	ZEND_OP2_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR )		430542	0		&			
ANR	430861	CallExpression	ZEND_OP2_TYPE ( opline )		430542	0					
ANR	430862	Callee	ZEND_OP2_TYPE		430542	0					
ANR	430863	Identifier	ZEND_OP2_TYPE		430542	0					
ANR	430864	ArgumentList	opline		430542	1					
ANR	430865	Argument	opline		430542	0					
ANR	430866	Identifier	opline		430542	0					
ANR	430867	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		430542	1		|			
ANR	430868	Identifier	IS_TMP_VAR		430542	0					
ANR	430869	Identifier	IS_VAR		430542	1					
ANR	430870	AndExpression	VAR_SOURCE ( opline -> op2 ) && VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_QM_ASSIGN && ZEND_OP1_TYPE ( VAR_SOURCE ( opline -> op2 ) ) == IS_CONST		430542	1		&&			
ANR	430871	CallExpression	VAR_SOURCE ( opline -> op2 )		430542	0					
ANR	430872	Callee	VAR_SOURCE		430542	0					
ANR	430873	Identifier	VAR_SOURCE		430542	0					
ANR	430874	ArgumentList	opline -> op2		430542	1					
ANR	430875	Argument	opline -> op2		430542	0					
ANR	430876	PtrMemberAccess	opline -> op2		430542	0					
ANR	430877	Identifier	opline		430542	0					
ANR	430878	Identifier	op2		430542	1					
ANR	430879	AndExpression	VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_QM_ASSIGN && ZEND_OP1_TYPE ( VAR_SOURCE ( opline -> op2 ) ) == IS_CONST		430542	1		&&			
ANR	430880	EqualityExpression	VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_QM_ASSIGN		430542	0		==			
ANR	430881	PtrMemberAccess	VAR_SOURCE ( opline -> op2 ) -> opcode		430542	0					
ANR	430882	CallExpression	VAR_SOURCE ( opline -> op2 )		430542	0					
ANR	430883	Callee	VAR_SOURCE		430542	0					
ANR	430884	Identifier	VAR_SOURCE		430542	0					
ANR	430885	ArgumentList	opline -> op2		430542	1					
ANR	430886	Argument	opline -> op2		430542	0					
ANR	430887	PtrMemberAccess	opline -> op2		430542	0					
ANR	430888	Identifier	opline		430542	0					
ANR	430889	Identifier	op2		430542	1					
ANR	430890	Identifier	opcode		430542	1					
ANR	430891	Identifier	ZEND_QM_ASSIGN		430542	1					
ANR	430892	EqualityExpression	ZEND_OP1_TYPE ( VAR_SOURCE ( opline -> op2 ) ) == IS_CONST		430542	1		==			
ANR	430893	CallExpression	ZEND_OP1_TYPE ( VAR_SOURCE ( opline -> op2 ) )		430542	0					
ANR	430894	Callee	ZEND_OP1_TYPE		430542	0					
ANR	430895	Identifier	ZEND_OP1_TYPE		430542	0					
ANR	430896	ArgumentList	VAR_SOURCE ( opline -> op2 )		430542	1					
ANR	430897	Argument	VAR_SOURCE ( opline -> op2 )		430542	0					
ANR	430898	CallExpression	VAR_SOURCE ( opline -> op2 )		430542	0					
ANR	430899	Callee	VAR_SOURCE		430542	0					
ANR	430900	Identifier	VAR_SOURCE		430542	0					
ANR	430901	ArgumentList	opline -> op2		430542	1					
ANR	430902	Argument	opline -> op2		430542	0					
ANR	430903	PtrMemberAccess	opline -> op2		430542	0					
ANR	430904	Identifier	opline		430542	0					
ANR	430905	Identifier	op2		430542	1					
ANR	430906	Identifier	IS_CONST		430542	1					
ANR	430907	CompoundStatement		55:3:1808:1838	430542	1					
ANR	430908	IdentifierDeclStatement	znode_op op2 = opline -> op2 ;	662:3:20050:20076	430542	0	True				
ANR	430909	IdentifierDecl	op2 = opline -> op2		430542	0					
ANR	430910	IdentifierDeclType	znode_op		430542	0					
ANR	430911	Identifier	op2		430542	1					
ANR	430912	AssignmentExpression	op2 = opline -> op2		430542	2		=			
ANR	430913	Identifier	op2		430542	0					
ANR	430914	PtrMemberAccess	opline -> op2		430542	1					
ANR	430915	Identifier	opline		430542	0					
ANR	430916	Identifier	op2		430542	1					
ANR	430917	IdentifierDeclStatement	zend_op * src = VAR_SOURCE ( op2 ) ;	663:3:20081:20111	430542	1	True				
ANR	430918	IdentifierDecl	* src = VAR_SOURCE ( op2 )		430542	0					
ANR	430919	IdentifierDeclType	zend_op *		430542	0					
ANR	430920	Identifier	src		430542	1					
ANR	430921	AssignmentExpression	* src = VAR_SOURCE ( op2 )		430542	2		=			
ANR	430922	Identifier	src		430542	0					
ANR	430923	CallExpression	VAR_SOURCE ( op2 )		430542	1					
ANR	430924	Callee	VAR_SOURCE		430542	0					
ANR	430925	Identifier	VAR_SOURCE		430542	0					
ANR	430926	ArgumentList	op2		430542	1					
ANR	430927	Argument	op2		430542	0					
ANR	430928	Identifier	op2		430542	0					
ANR	430929	IdentifierDeclStatement	zval c = ZEND_OP1_LITERAL ( src ) ;	664:3:20116:20146	430542	2	True				
ANR	430930	IdentifierDecl	c = ZEND_OP1_LITERAL ( src )		430542	0					
ANR	430931	IdentifierDeclType	zval		430542	0					
ANR	430932	Identifier	c		430542	1					
ANR	430933	AssignmentExpression	c = ZEND_OP1_LITERAL ( src )		430542	2		=			
ANR	430934	Identifier	c		430542	0					
ANR	430935	CallExpression	ZEND_OP1_LITERAL ( src )		430542	1					
ANR	430936	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	430937	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	430938	ArgumentList	src		430542	1					
ANR	430939	Argument	src		430542	0					
ANR	430940	Identifier	src		430542	0					
ANR	430941	ExpressionStatement	zval_copy_ctor ( & c )	665:3:20151:20169	430542	3	True				
ANR	430942	CallExpression	zval_copy_ctor ( & c )		430542	0					
ANR	430943	Callee	zval_copy_ctor		430542	0					
ANR	430944	Identifier	zval_copy_ctor		430542	0					
ANR	430945	ArgumentList	& c		430542	1					
ANR	430946	Argument	& c		430542	0					
ANR	430947	UnaryOperationExpression	& c		430542	0					
ANR	430948	UnaryOperator	&		430542	0					
ANR	430949	Identifier	c		430542	1					
ANR	430950	IfStatement	"if ( zend_optimizer_update_op2_const ( op_array , opline , & c ) )"		430542	4					
ANR	430951	Condition	"zend_optimizer_update_op2_const ( op_array , opline , & c )"	666:7:20178:20230	430542	0	True				
ANR	430952	CallExpression	"zend_optimizer_update_op2_const ( op_array , opline , & c )"		430542	0					
ANR	430953	Callee	zend_optimizer_update_op2_const		430542	0					
ANR	430954	Identifier	zend_optimizer_update_op2_const		430542	0					
ANR	430955	ArgumentList	op_array		430542	1					
ANR	430956	Argument	op_array		430542	0					
ANR	430957	Identifier	op_array		430542	0					
ANR	430958	Argument	opline		430542	1					
ANR	430959	Identifier	opline		430542	0					
ANR	430960	Argument	& c		430542	2					
ANR	430961	UnaryOperationExpression	& c		430542	0					
ANR	430962	UnaryOperator	&		430542	0					
ANR	430963	Identifier	c		430542	1					
ANR	430964	CompoundStatement		57:62:1925:1925	430542	1					
ANR	430965	ExpressionStatement	VAR_SOURCE ( op2 ) = NULL	667:4:20239:20261	430542	0	True				
ANR	430966	AssignmentExpression	VAR_SOURCE ( op2 ) = NULL		430542	0		=			
ANR	430967	CallExpression	VAR_SOURCE ( op2 )		430542	0					
ANR	430968	Callee	VAR_SOURCE		430542	0					
ANR	430969	Identifier	VAR_SOURCE		430542	0					
ANR	430970	ArgumentList	op2		430542	1					
ANR	430971	Argument	op2		430542	0					
ANR	430972	Identifier	op2		430542	0					
ANR	430973	Identifier	NULL		430542	1					
ANR	430974	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( src ) )	668:4:20267:20303	430542	1	True				
ANR	430975	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( src ) )		430542	0					
ANR	430976	Callee	literal_dtor		430542	0					
ANR	430977	Identifier	literal_dtor		430542	0					
ANR	430978	ArgumentList	& ZEND_OP1_LITERAL ( src )		430542	1					
ANR	430979	Argument	& ZEND_OP1_LITERAL ( src )		430542	0					
ANR	430980	UnaryOperationExpression	& ZEND_OP1_LITERAL ( src )		430542	0					
ANR	430981	UnaryOperator	&		430542	0					
ANR	430982	CallExpression	ZEND_OP1_LITERAL ( src )		430542	1					
ANR	430983	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	430984	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	430985	ArgumentList	src		430542	1					
ANR	430986	Argument	src		430542	0					
ANR	430987	Identifier	src		430542	0					
ANR	430988	ExpressionStatement	MAKE_NOP ( src )	669:4:20309:20322	430542	2	True				
ANR	430989	CallExpression	MAKE_NOP ( src )		430542	0					
ANR	430990	Callee	MAKE_NOP		430542	0					
ANR	430991	Identifier	MAKE_NOP		430542	0					
ANR	430992	ArgumentList	src		430542	1					
ANR	430993	Argument	src		430542	0					
ANR	430994	Identifier	src		430542	0					
ANR	430995	IfStatement	if ( opline -> opcode == ZEND_ECHO && ZEND_OP1_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) && VAR_SOURCE ( opline -> op1 ) && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_CAST && VAR_SOURCE ( opline -> op1 ) -> extended_value == IS_STRING )		430542	2					
ANR	430996	Condition	opline -> opcode == ZEND_ECHO && ZEND_OP1_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) && VAR_SOURCE ( opline -> op1 ) && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_CAST && VAR_SOURCE ( opline -> op1 ) -> extended_value == IS_STRING	674:6:20393:20609	430542	0	True				
ANR	430997	AndExpression	opline -> opcode == ZEND_ECHO && ZEND_OP1_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) && VAR_SOURCE ( opline -> op1 ) && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_CAST && VAR_SOURCE ( opline -> op1 ) -> extended_value == IS_STRING		430542	0		&&			
ANR	430998	EqualityExpression	opline -> opcode == ZEND_ECHO		430542	0		==			
ANR	430999	PtrMemberAccess	opline -> opcode		430542	0					
ANR	431000	Identifier	opline		430542	0					
ANR	431001	Identifier	opcode		430542	1					
ANR	431002	Identifier	ZEND_ECHO		430542	1					
ANR	431003	AndExpression	ZEND_OP1_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) && VAR_SOURCE ( opline -> op1 ) && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_CAST && VAR_SOURCE ( opline -> op1 ) -> extended_value == IS_STRING		430542	1		&&			
ANR	431004	BitAndExpression	ZEND_OP1_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR )		430542	0		&			
ANR	431005	CallExpression	ZEND_OP1_TYPE ( opline )		430542	0					
ANR	431006	Callee	ZEND_OP1_TYPE		430542	0					
ANR	431007	Identifier	ZEND_OP1_TYPE		430542	0					
ANR	431008	ArgumentList	opline		430542	1					
ANR	431009	Argument	opline		430542	0					
ANR	431010	Identifier	opline		430542	0					
ANR	431011	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		430542	1		|			
ANR	431012	Identifier	IS_TMP_VAR		430542	0					
ANR	431013	Identifier	IS_VAR		430542	1					
ANR	431014	AndExpression	VAR_SOURCE ( opline -> op1 ) && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_CAST && VAR_SOURCE ( opline -> op1 ) -> extended_value == IS_STRING		430542	1		&&			
ANR	431015	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	431016	Callee	VAR_SOURCE		430542	0					
ANR	431017	Identifier	VAR_SOURCE		430542	0					
ANR	431018	ArgumentList	opline -> op1		430542	1					
ANR	431019	Argument	opline -> op1		430542	0					
ANR	431020	PtrMemberAccess	opline -> op1		430542	0					
ANR	431021	Identifier	opline		430542	0					
ANR	431022	Identifier	op1		430542	1					
ANR	431023	AndExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_CAST && VAR_SOURCE ( opline -> op1 ) -> extended_value == IS_STRING		430542	1		&&			
ANR	431024	EqualityExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_CAST		430542	0		==			
ANR	431025	PtrMemberAccess	VAR_SOURCE ( opline -> op1 ) -> opcode		430542	0					
ANR	431026	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	431027	Callee	VAR_SOURCE		430542	0					
ANR	431028	Identifier	VAR_SOURCE		430542	0					
ANR	431029	ArgumentList	opline -> op1		430542	1					
ANR	431030	Argument	opline -> op1		430542	0					
ANR	431031	PtrMemberAccess	opline -> op1		430542	0					
ANR	431032	Identifier	opline		430542	0					
ANR	431033	Identifier	op1		430542	1					
ANR	431034	Identifier	opcode		430542	1					
ANR	431035	Identifier	ZEND_CAST		430542	1					
ANR	431036	EqualityExpression	VAR_SOURCE ( opline -> op1 ) -> extended_value == IS_STRING		430542	1		==			
ANR	431037	PtrMemberAccess	VAR_SOURCE ( opline -> op1 ) -> extended_value		430542	0					
ANR	431038	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	431039	Callee	VAR_SOURCE		430542	0					
ANR	431040	Identifier	VAR_SOURCE		430542	0					
ANR	431041	ArgumentList	opline -> op1		430542	1					
ANR	431042	Argument	opline -> op1		430542	0					
ANR	431043	PtrMemberAccess	opline -> op1		430542	0					
ANR	431044	Identifier	opline		430542	0					
ANR	431045	Identifier	op1		430542	1					
ANR	431046	Identifier	extended_value		430542	1					
ANR	431047	Identifier	IS_STRING		430542	1					
ANR	431048	CompoundStatement		70:3:2309:2347	430542	1					
ANR	431049	IdentifierDeclStatement	zend_op * src = VAR_SOURCE ( opline -> op1 ) ;	679:3:20617:20655	430542	0	True				
ANR	431050	IdentifierDecl	* src = VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	431051	IdentifierDeclType	zend_op *		430542	0					
ANR	431052	Identifier	src		430542	1					
ANR	431053	AssignmentExpression	* src = VAR_SOURCE ( opline -> op1 )		430542	2		=			
ANR	431054	Identifier	src		430542	0					
ANR	431055	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	1					
ANR	431056	Callee	VAR_SOURCE		430542	0					
ANR	431057	Identifier	VAR_SOURCE		430542	0					
ANR	431058	ArgumentList	opline -> op1		430542	1					
ANR	431059	Argument	opline -> op1		430542	0					
ANR	431060	PtrMemberAccess	opline -> op1		430542	0					
ANR	431061	Identifier	opline		430542	0					
ANR	431062	Identifier	op1		430542	1					
ANR	431063	ExpressionStatement	"COPY_NODE ( opline -> op1 , src -> op1 )"	680:3:20660:20692	430542	1	True				
ANR	431064	CallExpression	"COPY_NODE ( opline -> op1 , src -> op1 )"		430542	0					
ANR	431065	Callee	COPY_NODE		430542	0					
ANR	431066	Identifier	COPY_NODE		430542	0					
ANR	431067	ArgumentList	opline -> op1		430542	1					
ANR	431068	Argument	opline -> op1		430542	0					
ANR	431069	PtrMemberAccess	opline -> op1		430542	0					
ANR	431070	Identifier	opline		430542	0					
ANR	431071	Identifier	op1		430542	1					
ANR	431072	Argument	src -> op1		430542	1					
ANR	431073	PtrMemberAccess	src -> op1		430542	0					
ANR	431074	Identifier	src		430542	0					
ANR	431075	Identifier	op1		430542	1					
ANR	431076	ExpressionStatement	MAKE_NOP ( src )	681:3:20697:20710	430542	2	True				
ANR	431077	CallExpression	MAKE_NOP ( src )		430542	0					
ANR	431078	Callee	MAKE_NOP		430542	0					
ANR	431079	Identifier	MAKE_NOP		430542	0					
ANR	431080	ArgumentList	src		430542	1					
ANR	431081	Argument	src		430542	0					
ANR	431082	Identifier	src		430542	0					
ANR	431083	IfStatement	if ( opline -> opcode == ZEND_FREE && ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR && VAR_SOURCE ( opline -> op1 ) )		430542	3					
ANR	431084	Condition	opline -> opcode == ZEND_FREE && ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR && VAR_SOURCE ( opline -> op1 )	685:6:20764:20862	430542	0	True				
ANR	431085	AndExpression	opline -> opcode == ZEND_FREE && ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR && VAR_SOURCE ( opline -> op1 )		430542	0		&&			
ANR	431086	EqualityExpression	opline -> opcode == ZEND_FREE		430542	0		==			
ANR	431087	PtrMemberAccess	opline -> opcode		430542	0					
ANR	431088	Identifier	opline		430542	0					
ANR	431089	Identifier	opcode		430542	1					
ANR	431090	Identifier	ZEND_FREE		430542	1					
ANR	431091	AndExpression	ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR && VAR_SOURCE ( opline -> op1 )		430542	1		&&			
ANR	431092	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR		430542	0		==			
ANR	431093	CallExpression	ZEND_OP1_TYPE ( opline )		430542	0					
ANR	431094	Callee	ZEND_OP1_TYPE		430542	0					
ANR	431095	Identifier	ZEND_OP1_TYPE		430542	0					
ANR	431096	ArgumentList	opline		430542	1					
ANR	431097	Argument	opline		430542	0					
ANR	431098	Identifier	opline		430542	0					
ANR	431099	Identifier	IS_TMP_VAR		430542	1					
ANR	431100	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	1					
ANR	431101	Callee	VAR_SOURCE		430542	0					
ANR	431102	Identifier	VAR_SOURCE		430542	0					
ANR	431103	ArgumentList	opline -> op1		430542	1					
ANR	431104	Argument	opline -> op1		430542	0					
ANR	431105	PtrMemberAccess	opline -> op1		430542	0					
ANR	431106	Identifier	opline		430542	0					
ANR	431107	Identifier	op1		430542	1					
ANR	431108	CompoundStatement		79:3:2562:2600	430542	1					
ANR	431109	IdentifierDeclStatement	zend_op * src = VAR_SOURCE ( opline -> op1 ) ;	688:3:20870:20908	430542	0	True				
ANR	431110	IdentifierDecl	* src = VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	431111	IdentifierDeclType	zend_op *		430542	0					
ANR	431112	Identifier	src		430542	1					
ANR	431113	AssignmentExpression	* src = VAR_SOURCE ( opline -> op1 )		430542	2		=			
ANR	431114	Identifier	src		430542	0					
ANR	431115	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	1					
ANR	431116	Callee	VAR_SOURCE		430542	0					
ANR	431117	Identifier	VAR_SOURCE		430542	0					
ANR	431118	ArgumentList	opline -> op1		430542	1					
ANR	431119	Argument	opline -> op1		430542	0					
ANR	431120	PtrMemberAccess	opline -> op1		430542	0					
ANR	431121	Identifier	opline		430542	0					
ANR	431122	Identifier	op1		430542	1					
ANR	431123	IfStatement	if ( src -> opcode == ZEND_BOOL )		430542	1					
ANR	431124	Condition	src -> opcode == ZEND_BOOL	689:7:20917:20940	430542	0	True				
ANR	431125	EqualityExpression	src -> opcode == ZEND_BOOL		430542	0		==			
ANR	431126	PtrMemberAccess	src -> opcode		430542	0					
ANR	431127	Identifier	src		430542	0					
ANR	431128	Identifier	opcode		430542	1					
ANR	431129	Identifier	ZEND_BOOL		430542	1					
ANR	431130	CompoundStatement		80:33:2635:2635	430542	1					
ANR	431131	IfStatement	if ( ZEND_OP1_TYPE ( src ) == IS_CONST )		430542	0					
ANR	431132	Condition	ZEND_OP1_TYPE ( src ) == IS_CONST	690:8:20953:20982	430542	0	True				
ANR	431133	EqualityExpression	ZEND_OP1_TYPE ( src ) == IS_CONST		430542	0		==			
ANR	431134	CallExpression	ZEND_OP1_TYPE ( src )		430542	0					
ANR	431135	Callee	ZEND_OP1_TYPE		430542	0					
ANR	431136	Identifier	ZEND_OP1_TYPE		430542	0					
ANR	431137	ArgumentList	src		430542	1					
ANR	431138	Argument	src		430542	0					
ANR	431139	Identifier	src		430542	0					
ANR	431140	Identifier	IS_CONST		430542	1					
ANR	431141	CompoundStatement		81:40:2677:2677	430542	1					
ANR	431142	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( src ) )	691:5:20992:21028	430542	0	True				
ANR	431143	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( src ) )		430542	0					
ANR	431144	Callee	literal_dtor		430542	0					
ANR	431145	Identifier	literal_dtor		430542	0					
ANR	431146	ArgumentList	& ZEND_OP1_LITERAL ( src )		430542	1					
ANR	431147	Argument	& ZEND_OP1_LITERAL ( src )		430542	0					
ANR	431148	UnaryOperationExpression	& ZEND_OP1_LITERAL ( src )		430542	0					
ANR	431149	UnaryOperator	&		430542	0					
ANR	431150	CallExpression	ZEND_OP1_LITERAL ( src )		430542	1					
ANR	431151	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	431152	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	431153	ArgumentList	src		430542	1					
ANR	431154	Argument	src		430542	0					
ANR	431155	Identifier	src		430542	0					
ANR	431156	ExpressionStatement	MAKE_NOP ( src )	693:4:21040:21053	430542	1	True				
ANR	431157	CallExpression	MAKE_NOP ( src )		430542	0					
ANR	431158	Callee	MAKE_NOP		430542	0					
ANR	431159	Identifier	MAKE_NOP		430542	0					
ANR	431160	ArgumentList	src		430542	1					
ANR	431161	Argument	src		430542	0					
ANR	431162	Identifier	src		430542	0					
ANR	431163	ExpressionStatement	MAKE_NOP ( opline )	694:4:21059:21075	430542	2	True				
ANR	431164	CallExpression	MAKE_NOP ( opline )		430542	0					
ANR	431165	Callee	MAKE_NOP		430542	0					
ANR	431166	Identifier	MAKE_NOP		430542	0					
ANR	431167	ArgumentList	opline		430542	1					
ANR	431168	Argument	opline		430542	0					
ANR	431169	Identifier	opline		430542	0					
ANR	431170	IfStatement	if ( ( ZEND_OP1_TYPE ( opline ) & IS_VAR ) && VAR_SOURCE ( opline -> op1 ) && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_DO_CF_FCALL && VAR_SOURCE ( opline -> op1 ) -> extended_value == 1 )		430542	4					
ANR	431171	Condition	( ZEND_OP1_TYPE ( opline ) & IS_VAR ) && VAR_SOURCE ( opline -> op1 ) && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_DO_CF_FCALL && VAR_SOURCE ( opline -> op1 ) -> extended_value == 1	706:5:21257:21428	430542	0	True				
ANR	431172	AndExpression	( ZEND_OP1_TYPE ( opline ) & IS_VAR ) && VAR_SOURCE ( opline -> op1 ) && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_DO_CF_FCALL && VAR_SOURCE ( opline -> op1 ) -> extended_value == 1		430542	0		&&			
ANR	431173	BitAndExpression	ZEND_OP1_TYPE ( opline ) & IS_VAR		430542	0		&			
ANR	431174	CallExpression	ZEND_OP1_TYPE ( opline )		430542	0					
ANR	431175	Callee	ZEND_OP1_TYPE		430542	0					
ANR	431176	Identifier	ZEND_OP1_TYPE		430542	0					
ANR	431177	ArgumentList	opline		430542	1					
ANR	431178	Argument	opline		430542	0					
ANR	431179	Identifier	opline		430542	0					
ANR	431180	Identifier	IS_VAR		430542	1					
ANR	431181	AndExpression	VAR_SOURCE ( opline -> op1 ) && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_DO_CF_FCALL && VAR_SOURCE ( opline -> op1 ) -> extended_value == 1		430542	1		&&			
ANR	431182	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	431183	Callee	VAR_SOURCE		430542	0					
ANR	431184	Identifier	VAR_SOURCE		430542	0					
ANR	431185	ArgumentList	opline -> op1		430542	1					
ANR	431186	Argument	opline -> op1		430542	0					
ANR	431187	PtrMemberAccess	opline -> op1		430542	0					
ANR	431188	Identifier	opline		430542	0					
ANR	431189	Identifier	op1		430542	1					
ANR	431190	AndExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_DO_CF_FCALL && VAR_SOURCE ( opline -> op1 ) -> extended_value == 1		430542	1		&&			
ANR	431191	EqualityExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_DO_CF_FCALL		430542	0		==			
ANR	431192	PtrMemberAccess	VAR_SOURCE ( opline -> op1 ) -> opcode		430542	0					
ANR	431193	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	431194	Callee	VAR_SOURCE		430542	0					
ANR	431195	Identifier	VAR_SOURCE		430542	0					
ANR	431196	ArgumentList	opline -> op1		430542	1					
ANR	431197	Argument	opline -> op1		430542	0					
ANR	431198	PtrMemberAccess	opline -> op1		430542	0					
ANR	431199	Identifier	opline		430542	0					
ANR	431200	Identifier	op1		430542	1					
ANR	431201	Identifier	opcode		430542	1					
ANR	431202	Identifier	ZEND_DO_CF_FCALL		430542	1					
ANR	431203	EqualityExpression	VAR_SOURCE ( opline -> op1 ) -> extended_value == 1		430542	1		==			
ANR	431204	PtrMemberAccess	VAR_SOURCE ( opline -> op1 ) -> extended_value		430542	0					
ANR	431205	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	431206	Callee	VAR_SOURCE		430542	0					
ANR	431207	Identifier	VAR_SOURCE		430542	0					
ANR	431208	ArgumentList	opline -> op1		430542	1					
ANR	431209	Argument	opline -> op1		430542	0					
ANR	431210	PtrMemberAccess	opline -> op1		430542	0					
ANR	431211	Identifier	opline		430542	0					
ANR	431212	Identifier	op1		430542	1					
ANR	431213	Identifier	extended_value		430542	1					
ANR	431214	PrimaryExpression	1		430542	1					
ANR	431215	CompoundStatement		101:3:3173:3194	430542	1					
ANR	431216	IdentifierDeclStatement	zend_op * fcall = VAR_SOURCE ( opline -> op1 ) ;	709:3:21436:21476	430542	0	True				
ANR	431217	IdentifierDecl	* fcall = VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	431218	IdentifierDeclType	zend_op *		430542	0					
ANR	431219	Identifier	fcall		430542	1					
ANR	431220	AssignmentExpression	* fcall = VAR_SOURCE ( opline -> op1 )		430542	2		=			
ANR	431221	Identifier	fcall		430542	0					
ANR	431222	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	1					
ANR	431223	Callee	VAR_SOURCE		430542	0					
ANR	431224	Identifier	VAR_SOURCE		430542	0					
ANR	431225	ArgumentList	opline -> op1		430542	1					
ANR	431226	Argument	opline -> op1		430542	0					
ANR	431227	PtrMemberAccess	opline -> op1		430542	0					
ANR	431228	Identifier	opline		430542	0					
ANR	431229	Identifier	op1		430542	1					
ANR	431230	IdentifierDeclStatement	zend_op * sv = fcall - 1 ;	710:3:21481:21502	430542	1	True				
ANR	431231	IdentifierDecl	* sv = fcall - 1		430542	0					
ANR	431232	IdentifierDeclType	zend_op *		430542	0					
ANR	431233	Identifier	sv		430542	1					
ANR	431234	AssignmentExpression	* sv = fcall - 1		430542	2		=			
ANR	431235	Identifier	sv		430542	0					
ANR	431236	AdditiveExpression	fcall - 1		430542	1		-			
ANR	431237	Identifier	fcall		430542	0					
ANR	431238	PrimaryExpression	1		430542	1					
ANR	431239	IfStatement	if ( sv >= block -> start_opline && sv -> opcode == ZEND_SEND_VAL && ZEND_OP1_TYPE ( sv ) == IS_CONST && Z_TYPE ( OPLINE_OP1_LITERAL ( sv ) ) == IS_STRING && Z_LVAL ( OPLINE_OP2_LITERAL ( sv ) ) == 1 )		430542	2					
ANR	431240	Condition	sv >= block -> start_opline && sv -> opcode == ZEND_SEND_VAL && ZEND_OP1_TYPE ( sv ) == IS_CONST && Z_TYPE ( OPLINE_OP1_LITERAL ( sv ) ) == IS_STRING && Z_LVAL ( OPLINE_OP2_LITERAL ( sv ) ) == 1	711:6:21510:21696	430542	0	True				
ANR	431241	AndExpression	sv >= block -> start_opline && sv -> opcode == ZEND_SEND_VAL && ZEND_OP1_TYPE ( sv ) == IS_CONST && Z_TYPE ( OPLINE_OP1_LITERAL ( sv ) ) == IS_STRING && Z_LVAL ( OPLINE_OP2_LITERAL ( sv ) ) == 1		430542	0		&&			
ANR	431242	RelationalExpression	sv >= block -> start_opline		430542	0		>=			
ANR	431243	Identifier	sv		430542	0					
ANR	431244	PtrMemberAccess	block -> start_opline		430542	1					
ANR	431245	Identifier	block		430542	0					
ANR	431246	Identifier	start_opline		430542	1					
ANR	431247	AndExpression	sv -> opcode == ZEND_SEND_VAL && ZEND_OP1_TYPE ( sv ) == IS_CONST && Z_TYPE ( OPLINE_OP1_LITERAL ( sv ) ) == IS_STRING && Z_LVAL ( OPLINE_OP2_LITERAL ( sv ) ) == 1		430542	1		&&			
ANR	431248	EqualityExpression	sv -> opcode == ZEND_SEND_VAL		430542	0		==			
ANR	431249	PtrMemberAccess	sv -> opcode		430542	0					
ANR	431250	Identifier	sv		430542	0					
ANR	431251	Identifier	opcode		430542	1					
ANR	431252	Identifier	ZEND_SEND_VAL		430542	1					
ANR	431253	AndExpression	ZEND_OP1_TYPE ( sv ) == IS_CONST && Z_TYPE ( OPLINE_OP1_LITERAL ( sv ) ) == IS_STRING && Z_LVAL ( OPLINE_OP2_LITERAL ( sv ) ) == 1		430542	1		&&			
ANR	431254	EqualityExpression	ZEND_OP1_TYPE ( sv ) == IS_CONST		430542	0		==			
ANR	431255	CallExpression	ZEND_OP1_TYPE ( sv )		430542	0					
ANR	431256	Callee	ZEND_OP1_TYPE		430542	0					
ANR	431257	Identifier	ZEND_OP1_TYPE		430542	0					
ANR	431258	ArgumentList	sv		430542	1					
ANR	431259	Argument	sv		430542	0					
ANR	431260	Identifier	sv		430542	0					
ANR	431261	Identifier	IS_CONST		430542	1					
ANR	431262	AndExpression	Z_TYPE ( OPLINE_OP1_LITERAL ( sv ) ) == IS_STRING && Z_LVAL ( OPLINE_OP2_LITERAL ( sv ) ) == 1		430542	1		&&			
ANR	431263	EqualityExpression	Z_TYPE ( OPLINE_OP1_LITERAL ( sv ) ) == IS_STRING		430542	0		==			
ANR	431264	CallExpression	Z_TYPE ( OPLINE_OP1_LITERAL ( sv ) )		430542	0					
ANR	431265	Callee	Z_TYPE		430542	0					
ANR	431266	Identifier	Z_TYPE		430542	0					
ANR	431267	ArgumentList	OPLINE_OP1_LITERAL ( sv )		430542	1					
ANR	431268	Argument	OPLINE_OP1_LITERAL ( sv )		430542	0					
ANR	431269	CallExpression	OPLINE_OP1_LITERAL ( sv )		430542	0					
ANR	431270	Callee	OPLINE_OP1_LITERAL		430542	0					
ANR	431271	Identifier	OPLINE_OP1_LITERAL		430542	0					
ANR	431272	ArgumentList	sv		430542	1					
ANR	431273	Argument	sv		430542	0					
ANR	431274	Identifier	sv		430542	0					
ANR	431275	Identifier	IS_STRING		430542	1					
ANR	431276	EqualityExpression	Z_LVAL ( OPLINE_OP2_LITERAL ( sv ) ) == 1		430542	1		==			
ANR	431277	CallExpression	Z_LVAL ( OPLINE_OP2_LITERAL ( sv ) )		430542	0					
ANR	431278	Callee	Z_LVAL		430542	0					
ANR	431279	Identifier	Z_LVAL		430542	0					
ANR	431280	ArgumentList	OPLINE_OP2_LITERAL ( sv )		430542	1					
ANR	431281	Argument	OPLINE_OP2_LITERAL ( sv )		430542	0					
ANR	431282	CallExpression	OPLINE_OP2_LITERAL ( sv )		430542	0					
ANR	431283	Callee	OPLINE_OP2_LITERAL		430542	0					
ANR	431284	Identifier	OPLINE_OP2_LITERAL		430542	0					
ANR	431285	ArgumentList	sv		430542	1					
ANR	431286	Argument	sv		430542	0					
ANR	431287	Identifier	sv		430542	0					
ANR	431288	PrimaryExpression	1		430542	1					
ANR	431289	CompoundStatement		108:4:3533:3607	430542	1					
ANR	431290	IdentifierDeclStatement	zval * arg = & OPLINE_OP1_LITERAL ( sv ) ;	715:4:21712:21747	430542	0	True				
ANR	431291	IdentifierDecl	* arg = & OPLINE_OP1_LITERAL ( sv )		430542	0					
ANR	431292	IdentifierDeclType	zval *		430542	0					
ANR	431293	Identifier	arg		430542	1					
ANR	431294	AssignmentExpression	* arg = & OPLINE_OP1_LITERAL ( sv )		430542	2		=			
ANR	431295	Identifier	arg		430542	0					
ANR	431296	UnaryOperationExpression	& OPLINE_OP1_LITERAL ( sv )		430542	1					
ANR	431297	UnaryOperator	&		430542	0					
ANR	431298	CallExpression	OPLINE_OP1_LITERAL ( sv )		430542	1					
ANR	431299	Callee	OPLINE_OP1_LITERAL		430542	0					
ANR	431300	Identifier	OPLINE_OP1_LITERAL		430542	0					
ANR	431301	ArgumentList	sv		430542	1					
ANR	431302	Argument	sv		430542	0					
ANR	431303	Identifier	sv		430542	0					
ANR	431304	IdentifierDeclStatement	char * fname = FUNCTION_CACHE -> funcs [ Z_LVAL ( ZEND_OP1_LITERAL ( fcall ) ) ] . function_name ;	716:4:21753:21835	430542	1	True				
ANR	431305	IdentifierDecl	* fname = FUNCTION_CACHE -> funcs [ Z_LVAL ( ZEND_OP1_LITERAL ( fcall ) ) ] . function_name		430542	0					
ANR	431306	IdentifierDeclType	char *		430542	0					
ANR	431307	Identifier	fname		430542	1					
ANR	431308	AssignmentExpression	* fname = FUNCTION_CACHE -> funcs [ Z_LVAL ( ZEND_OP1_LITERAL ( fcall ) ) ] . function_name		430542	2		=			
ANR	431309	Identifier	fname		430542	0					
ANR	431310	MemberAccess	FUNCTION_CACHE -> funcs [ Z_LVAL ( ZEND_OP1_LITERAL ( fcall ) ) ] . function_name		430542	1					
ANR	431311	ArrayIndexing	FUNCTION_CACHE -> funcs [ Z_LVAL ( ZEND_OP1_LITERAL ( fcall ) ) ]		430542	0					
ANR	431312	PtrMemberAccess	FUNCTION_CACHE -> funcs		430542	0					
ANR	431313	Identifier	FUNCTION_CACHE		430542	0					
ANR	431314	Identifier	funcs		430542	1					
ANR	431315	CallExpression	Z_LVAL ( ZEND_OP1_LITERAL ( fcall ) )		430542	1					
ANR	431316	Callee	Z_LVAL		430542	0					
ANR	431317	Identifier	Z_LVAL		430542	0					
ANR	431318	ArgumentList	ZEND_OP1_LITERAL ( fcall )		430542	1					
ANR	431319	Argument	ZEND_OP1_LITERAL ( fcall )		430542	0					
ANR	431320	CallExpression	ZEND_OP1_LITERAL ( fcall )		430542	0					
ANR	431321	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	431322	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	431323	ArgumentList	fcall		430542	1					
ANR	431324	Argument	fcall		430542	0					
ANR	431325	Identifier	fcall		430542	0					
ANR	431326	Identifier	function_name		430542	1					
ANR	431327	IdentifierDeclStatement	int flen = FUNCTION_CACHE -> funcs [ Z_LVAL ( ZEND_OP1_LITERAL ( fcall ) ) ] . name_len ;	717:4:21841:21915	430542	2	True				
ANR	431328	IdentifierDecl	flen = FUNCTION_CACHE -> funcs [ Z_LVAL ( ZEND_OP1_LITERAL ( fcall ) ) ] . name_len		430542	0					
ANR	431329	IdentifierDeclType	int		430542	0					
ANR	431330	Identifier	flen		430542	1					
ANR	431331	AssignmentExpression	flen = FUNCTION_CACHE -> funcs [ Z_LVAL ( ZEND_OP1_LITERAL ( fcall ) ) ] . name_len		430542	2		=			
ANR	431332	Identifier	flen		430542	0					
ANR	431333	MemberAccess	FUNCTION_CACHE -> funcs [ Z_LVAL ( ZEND_OP1_LITERAL ( fcall ) ) ] . name_len		430542	1					
ANR	431334	ArrayIndexing	FUNCTION_CACHE -> funcs [ Z_LVAL ( ZEND_OP1_LITERAL ( fcall ) ) ]		430542	0					
ANR	431335	PtrMemberAccess	FUNCTION_CACHE -> funcs		430542	0					
ANR	431336	Identifier	FUNCTION_CACHE		430542	0					
ANR	431337	Identifier	funcs		430542	1					
ANR	431338	CallExpression	Z_LVAL ( ZEND_OP1_LITERAL ( fcall ) )		430542	1					
ANR	431339	Callee	Z_LVAL		430542	0					
ANR	431340	Identifier	Z_LVAL		430542	0					
ANR	431341	ArgumentList	ZEND_OP1_LITERAL ( fcall )		430542	1					
ANR	431342	Argument	ZEND_OP1_LITERAL ( fcall )		430542	0					
ANR	431343	CallExpression	ZEND_OP1_LITERAL ( fcall )		430542	0					
ANR	431344	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	431345	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	431346	ArgumentList	fcall		430542	1					
ANR	431347	Argument	fcall		430542	0					
ANR	431348	Identifier	fcall		430542	0					
ANR	431349	Identifier	name_len		430542	1					
ANR	431350	IfStatement	"if ( flen == sizeof ( ""defined"" ) - 1 && zend_binary_strcasecmp ( fname , flen , ""defined"" , sizeof ( ""defined"" ) - 1 ) == 0 )"		430542	3					
ANR	431351	Condition	"flen == sizeof ( ""defined"" ) - 1 && zend_binary_strcasecmp ( fname , flen , ""defined"" , sizeof ( ""defined"" ) - 1 ) == 0"	718:7:21924:22026	430542	0	True				
ANR	431352	AndExpression	"flen == sizeof ( ""defined"" ) - 1 && zend_binary_strcasecmp ( fname , flen , ""defined"" , sizeof ( ""defined"" ) - 1 ) == 0"		430542	0		&&			
ANR	431353	EqualityExpression	"flen == sizeof ( ""defined"" ) - 1"		430542	0		==			
ANR	431354	Identifier	flen		430542	0					
ANR	431355	AdditiveExpression	"sizeof ( ""defined"" ) - 1"		430542	1		-			
ANR	431356	SizeofExpression	"sizeof ( ""defined"" )"		430542	0					
ANR	431357	Sizeof	sizeof		430542	0					
ANR	431358	PrimaryExpression	"""defined"""		430542	1					
ANR	431359	PrimaryExpression	1		430542	1					
ANR	431360	EqualityExpression	"zend_binary_strcasecmp ( fname , flen , ""defined"" , sizeof ( ""defined"" ) - 1 ) == 0"		430542	1		==			
ANR	431361	CallExpression	"zend_binary_strcasecmp ( fname , flen , ""defined"" , sizeof ( ""defined"" ) - 1 )"		430542	0					
ANR	431362	Callee	zend_binary_strcasecmp		430542	0					
ANR	431363	Identifier	zend_binary_strcasecmp		430542	0					
ANR	431364	ArgumentList	fname		430542	1					
ANR	431365	Argument	fname		430542	0					
ANR	431366	Identifier	fname		430542	0					
ANR	431367	Argument	flen		430542	1					
ANR	431368	Identifier	flen		430542	0					
ANR	431369	Argument	"""defined"""		430542	2					
ANR	431370	PrimaryExpression	"""defined"""		430542	0					
ANR	431371	Argument	"sizeof ( ""defined"" ) - 1"		430542	3					
ANR	431372	AdditiveExpression	"sizeof ( ""defined"" ) - 1"		430542	0		-			
ANR	431373	SizeofExpression	"sizeof ( ""defined"" )"		430542	0					
ANR	431374	Sizeof	sizeof		430542	0					
ANR	431375	PrimaryExpression	"""defined"""		430542	1					
ANR	431376	PrimaryExpression	1		430542	1					
ANR	431377	PrimaryExpression	0		430542	1					
ANR	431378	CompoundStatement		110:5:3728:3734	430542	1					
ANR	431379	IdentifierDeclStatement	zval c ;	719:5:22036:22042	430542	0	True				
ANR	431380	IdentifierDecl	c		430542	0					
ANR	431381	IdentifierDeclType	zval		430542	0					
ANR	431382	Identifier	c		430542	1					
ANR	431383	Statement	if	720:5:22049:22050	430542	1	True				
ANR	431384	Statement	(	720:7:22051:22051	430542	2	True				
ANR	431385	Statement	zend_optimizer_get_persistent_constant	720:8:22052:22089	430542	3	True				
ANR	431386	Statement	(	720:46:22090:22090	430542	4	True				
ANR	431387	Statement	Z_STR_P	720:47:22091:22097	430542	5	True				
ANR	431388	Statement	(	720:54:22098:22098	430542	6	True				
ANR	431389	Statement	arg	720:55:22099:22101	430542	7	True				
ANR	431390	Statement	)	720:58:22102:22102	430542	8	True				
ANR	431391	Statement	","	720:59:22103:22103	430542	9	True				
ANR	431392	Statement	&	720:61:22105:22105	430542	10	True				
ANR	431393	Statement	c	720:62:22106:22106	430542	11	True				
ANR	431394	Statement	","	720:63:22107:22107	430542	12	True				
ANR	431395	Statement	0	720:65:22109:22109	430542	13	True				
ANR	431396	Statement	ELS_CC	720:67:22111:22116	430542	14	True				
ANR	431397	Statement	)	720:73:22117:22117	430542	15	True				
ANR	431398	Statement	!=	720:75:22119:22120	430542	16	True				
ANR	431399	Statement	0	720:78:22122:22122	430542	17	True				
ANR	431400	Statement	)	720:79:22123:22123	430542	18	True				
ANR	431401	CompoundStatement		111:81:3817:3817	430542	19					
ANR	431402	ExpressionStatement	literal_dtor ( arg )	721:6:22133:22150	430542	0	True				
ANR	431403	CallExpression	literal_dtor ( arg )		430542	0					
ANR	431404	Callee	literal_dtor		430542	0					
ANR	431405	Identifier	literal_dtor		430542	0					
ANR	431406	ArgumentList	arg		430542	1					
ANR	431407	Argument	arg		430542	0					
ANR	431408	Identifier	arg		430542	0					
ANR	431409	ExpressionStatement	MAKE_NOP ( sv )	722:6:22158:22170	430542	1	True				
ANR	431410	CallExpression	MAKE_NOP ( sv )		430542	0					
ANR	431411	Callee	MAKE_NOP		430542	0					
ANR	431412	Identifier	MAKE_NOP		430542	0					
ANR	431413	ArgumentList	sv		430542	1					
ANR	431414	Argument	sv		430542	0					
ANR	431415	Identifier	sv		430542	0					
ANR	431416	ExpressionStatement	MAKE_NOP ( fcall )	723:6:22178:22193	430542	2	True				
ANR	431417	CallExpression	MAKE_NOP ( fcall )		430542	0					
ANR	431418	Callee	MAKE_NOP		430542	0					
ANR	431419	Identifier	MAKE_NOP		430542	0					
ANR	431420	ArgumentList	fcall		430542	1					
ANR	431421	Argument	fcall		430542	0					
ANR	431422	Identifier	fcall		430542	0					
ANR	431423	ExpressionStatement	"LITERAL_BOOL ( opline -> op1 , 1 )"	724:6:22201:22229	430542	3	True				
ANR	431424	CallExpression	"LITERAL_BOOL ( opline -> op1 , 1 )"		430542	0					
ANR	431425	Callee	LITERAL_BOOL		430542	0					
ANR	431426	Identifier	LITERAL_BOOL		430542	0					
ANR	431427	ArgumentList	opline -> op1		430542	1					
ANR	431428	Argument	opline -> op1		430542	0					
ANR	431429	PtrMemberAccess	opline -> op1		430542	0					
ANR	431430	Identifier	opline		430542	0					
ANR	431431	Identifier	op1		430542	1					
ANR	431432	Argument	1		430542	1					
ANR	431433	PrimaryExpression	1		430542	0					
ANR	431434	ExpressionStatement	ZEND_OP1_TYPE ( opline ) = IS_CONST	725:6:22237:22269	430542	4	True				
ANR	431435	AssignmentExpression	ZEND_OP1_TYPE ( opline ) = IS_CONST		430542	0		=			
ANR	431436	CallExpression	ZEND_OP1_TYPE ( opline )		430542	0					
ANR	431437	Callee	ZEND_OP1_TYPE		430542	0					
ANR	431438	Identifier	ZEND_OP1_TYPE		430542	0					
ANR	431439	ArgumentList	opline		430542	1					
ANR	431440	Argument	opline		430542	0					
ANR	431441	Identifier	opline		430542	0					
ANR	431442	Identifier	IS_CONST		430542	1					
ANR	431443	ElseStatement	else		430542	0					
ANR	431444	IfStatement	"if ( ( flen == sizeof ( ""function_exists"" ) - 1 && zend_binary_strcasecmp ( fname , flen , ""function_exists"" , sizeof ( ""function_exists"" ) - 1 ) == 0 ) || ( flen == sizeof ( ""is_callable"" ) - 1 && zend_binary_strcasecmp ( fname , flen , ""is_callable"" , sizeof ( ""is_callable"" ) - 1 ) == 0 ) )"		430542	0					
ANR	431445	Condition	"( flen == sizeof ( ""function_exists"" ) - 1 && zend_binary_strcasecmp ( fname , flen , ""function_exists"" , sizeof ( ""function_exists"" ) - 1 ) == 0 ) || ( flen == sizeof ( ""is_callable"" ) - 1 && zend_binary_strcasecmp ( fname , flen , ""is_callable"" , sizeof ( ""is_callable"" ) - 1 ) == 0 )"	727:14:22292:22549	430542	0	True				
ANR	431446	OrExpression	"( flen == sizeof ( ""function_exists"" ) - 1 && zend_binary_strcasecmp ( fname , flen , ""function_exists"" , sizeof ( ""function_exists"" ) - 1 ) == 0 ) || ( flen == sizeof ( ""is_callable"" ) - 1 && zend_binary_strcasecmp ( fname , flen , ""is_callable"" , sizeof ( ""is_callable"" ) - 1 ) == 0 )"		430542	0		||			
ANR	431447	AndExpression	"flen == sizeof ( ""function_exists"" ) - 1 && zend_binary_strcasecmp ( fname , flen , ""function_exists"" , sizeof ( ""function_exists"" ) - 1 ) == 0"		430542	0		&&			
ANR	431448	EqualityExpression	"flen == sizeof ( ""function_exists"" ) - 1"		430542	0		==			
ANR	431449	Identifier	flen		430542	0					
ANR	431450	AdditiveExpression	"sizeof ( ""function_exists"" ) - 1"		430542	1		-			
ANR	431451	SizeofExpression	"sizeof ( ""function_exists"" )"		430542	0					
ANR	431452	Sizeof	sizeof		430542	0					
ANR	431453	PrimaryExpression	"""function_exists"""		430542	1					
ANR	431454	PrimaryExpression	1		430542	1					
ANR	431455	EqualityExpression	"zend_binary_strcasecmp ( fname , flen , ""function_exists"" , sizeof ( ""function_exists"" ) - 1 ) == 0"		430542	1		==			
ANR	431456	CallExpression	"zend_binary_strcasecmp ( fname , flen , ""function_exists"" , sizeof ( ""function_exists"" ) - 1 )"		430542	0					
ANR	431457	Callee	zend_binary_strcasecmp		430542	0					
ANR	431458	Identifier	zend_binary_strcasecmp		430542	0					
ANR	431459	ArgumentList	fname		430542	1					
ANR	431460	Argument	fname		430542	0					
ANR	431461	Identifier	fname		430542	0					
ANR	431462	Argument	flen		430542	1					
ANR	431463	Identifier	flen		430542	0					
ANR	431464	Argument	"""function_exists"""		430542	2					
ANR	431465	PrimaryExpression	"""function_exists"""		430542	0					
ANR	431466	Argument	"sizeof ( ""function_exists"" ) - 1"		430542	3					
ANR	431467	AdditiveExpression	"sizeof ( ""function_exists"" ) - 1"		430542	0		-			
ANR	431468	SizeofExpression	"sizeof ( ""function_exists"" )"		430542	0					
ANR	431469	Sizeof	sizeof		430542	0					
ANR	431470	PrimaryExpression	"""function_exists"""		430542	1					
ANR	431471	PrimaryExpression	1		430542	1					
ANR	431472	PrimaryExpression	0		430542	1					
ANR	431473	AndExpression	"flen == sizeof ( ""is_callable"" ) - 1 && zend_binary_strcasecmp ( fname , flen , ""is_callable"" , sizeof ( ""is_callable"" ) - 1 ) == 0"		430542	1		&&			
ANR	431474	EqualityExpression	"flen == sizeof ( ""is_callable"" ) - 1"		430542	0		==			
ANR	431475	Identifier	flen		430542	0					
ANR	431476	AdditiveExpression	"sizeof ( ""is_callable"" ) - 1"		430542	1		-			
ANR	431477	SizeofExpression	"sizeof ( ""is_callable"" )"		430542	0					
ANR	431478	Sizeof	sizeof		430542	0					
ANR	431479	PrimaryExpression	"""is_callable"""		430542	1					
ANR	431480	PrimaryExpression	1		430542	1					
ANR	431481	EqualityExpression	"zend_binary_strcasecmp ( fname , flen , ""is_callable"" , sizeof ( ""is_callable"" ) - 1 ) == 0"		430542	1		==			
ANR	431482	CallExpression	"zend_binary_strcasecmp ( fname , flen , ""is_callable"" , sizeof ( ""is_callable"" ) - 1 )"		430542	0					
ANR	431483	Callee	zend_binary_strcasecmp		430542	0					
ANR	431484	Identifier	zend_binary_strcasecmp		430542	0					
ANR	431485	ArgumentList	fname		430542	1					
ANR	431486	Argument	fname		430542	0					
ANR	431487	Identifier	fname		430542	0					
ANR	431488	Argument	flen		430542	1					
ANR	431489	Identifier	flen		430542	0					
ANR	431490	Argument	"""is_callable"""		430542	2					
ANR	431491	PrimaryExpression	"""is_callable"""		430542	0					
ANR	431492	Argument	"sizeof ( ""is_callable"" ) - 1"		430542	3					
ANR	431493	AdditiveExpression	"sizeof ( ""is_callable"" ) - 1"		430542	0		-			
ANR	431494	SizeofExpression	"sizeof ( ""is_callable"" )"		430542	0					
ANR	431495	Sizeof	sizeof		430542	0					
ANR	431496	PrimaryExpression	"""is_callable"""		430542	1					
ANR	431497	PrimaryExpression	1		430542	1					
ANR	431498	PrimaryExpression	0		430542	1					
ANR	431499	CompoundStatement		121:5:4260:4283	430542	1					
ANR	431500	IdentifierDeclStatement	zend_function * function ;	730:5:22568:22591	430542	0	True				
ANR	431501	IdentifierDecl	* function		430542	0					
ANR	431502	IdentifierDeclType	zend_function *		430542	0					
ANR	431503	Identifier	function		430542	1					
ANR	431504	IfStatement	"if ( ( function = zend_hash_find_ptr ( EG ( function_table ) , Z_STR_P ( arg ) ) ) != NULL )"		430542	1					
ANR	431505	Condition	"( function = zend_hash_find_ptr ( EG ( function_table ) , Z_STR_P ( arg ) ) ) != NULL"	731:8:22601:22673	430542	0	True				
ANR	431506	EqualityExpression	"( function = zend_hash_find_ptr ( EG ( function_table ) , Z_STR_P ( arg ) ) ) != NULL"		430542	0		!=			
ANR	431507	AssignmentExpression	"function = zend_hash_find_ptr ( EG ( function_table ) , Z_STR_P ( arg ) )"		430542	0		=			
ANR	431508	Identifier	function		430542	0					
ANR	431509	CallExpression	"zend_hash_find_ptr ( EG ( function_table ) , Z_STR_P ( arg ) )"		430542	1					
ANR	431510	Callee	zend_hash_find_ptr		430542	0					
ANR	431511	Identifier	zend_hash_find_ptr		430542	0					
ANR	431512	ArgumentList	EG ( function_table )		430542	1					
ANR	431513	Argument	EG ( function_table )		430542	0					
ANR	431514	CallExpression	EG ( function_table )		430542	0					
ANR	431515	Callee	EG		430542	0					
ANR	431516	Identifier	EG		430542	0					
ANR	431517	ArgumentList	function_table		430542	1					
ANR	431518	Argument	function_table		430542	0					
ANR	431519	Identifier	function_table		430542	0					
ANR	431520	Argument	Z_STR_P ( arg )		430542	1					
ANR	431521	CallExpression	Z_STR_P ( arg )		430542	0					
ANR	431522	Callee	Z_STR_P		430542	0					
ANR	431523	Identifier	Z_STR_P		430542	0					
ANR	431524	ArgumentList	arg		430542	1					
ANR	431525	Argument	arg		430542	0					
ANR	431526	Identifier	arg		430542	0					
ANR	431527	Identifier	NULL		430542	1					
ANR	431528	CompoundStatement		122:83:4368:4368	430542	1					
ANR	431529	ExpressionStatement	literal_dtor ( arg )	732:6:22684:22701	430542	0	True				
ANR	431530	CallExpression	literal_dtor ( arg )		430542	0					
ANR	431531	Callee	literal_dtor		430542	0					
ANR	431532	Identifier	literal_dtor		430542	0					
ANR	431533	ArgumentList	arg		430542	1					
ANR	431534	Argument	arg		430542	0					
ANR	431535	Identifier	arg		430542	0					
ANR	431536	ExpressionStatement	MAKE_NOP ( sv )	733:6:22709:22721	430542	1	True				
ANR	431537	CallExpression	MAKE_NOP ( sv )		430542	0					
ANR	431538	Callee	MAKE_NOP		430542	0					
ANR	431539	Identifier	MAKE_NOP		430542	0					
ANR	431540	ArgumentList	sv		430542	1					
ANR	431541	Argument	sv		430542	0					
ANR	431542	Identifier	sv		430542	0					
ANR	431543	ExpressionStatement	MAKE_NOP ( fcall )	734:6:22729:22744	430542	2	True				
ANR	431544	CallExpression	MAKE_NOP ( fcall )		430542	0					
ANR	431545	Callee	MAKE_NOP		430542	0					
ANR	431546	Identifier	MAKE_NOP		430542	0					
ANR	431547	ArgumentList	fcall		430542	1					
ANR	431548	Argument	fcall		430542	0					
ANR	431549	Identifier	fcall		430542	0					
ANR	431550	ExpressionStatement	"LITERAL_BOOL ( opline -> op1 , 1 )"	735:6:22752:22780	430542	3	True				
ANR	431551	CallExpression	"LITERAL_BOOL ( opline -> op1 , 1 )"		430542	0					
ANR	431552	Callee	LITERAL_BOOL		430542	0					
ANR	431553	Identifier	LITERAL_BOOL		430542	0					
ANR	431554	ArgumentList	opline -> op1		430542	1					
ANR	431555	Argument	opline -> op1		430542	0					
ANR	431556	PtrMemberAccess	opline -> op1		430542	0					
ANR	431557	Identifier	opline		430542	0					
ANR	431558	Identifier	op1		430542	1					
ANR	431559	Argument	1		430542	1					
ANR	431560	PrimaryExpression	1		430542	0					
ANR	431561	ExpressionStatement	ZEND_OP1_TYPE ( opline ) = IS_CONST	736:6:22788:22820	430542	4	True				
ANR	431562	AssignmentExpression	ZEND_OP1_TYPE ( opline ) = IS_CONST		430542	0		=			
ANR	431563	CallExpression	ZEND_OP1_TYPE ( opline )		430542	0					
ANR	431564	Callee	ZEND_OP1_TYPE		430542	0					
ANR	431565	Identifier	ZEND_OP1_TYPE		430542	0					
ANR	431566	ArgumentList	opline		430542	1					
ANR	431567	Argument	opline		430542	0					
ANR	431568	Identifier	opline		430542	0					
ANR	431569	Identifier	IS_CONST		430542	1					
ANR	431570	ElseStatement	else		430542	0					
ANR	431571	IfStatement	"if ( flen == sizeof ( ""constant"" ) - 1 && zend_binary_strcasecmp ( fname , flen , ""constant"" , sizeof ( ""constant"" ) - 1 ) == 0 )"		430542	0					
ANR	431572	Condition	"flen == sizeof ( ""constant"" ) - 1 && zend_binary_strcasecmp ( fname , flen , ""constant"" , sizeof ( ""constant"" ) - 1 ) == 0"	738:14:22843:22948	430542	0	True				
ANR	431573	AndExpression	"flen == sizeof ( ""constant"" ) - 1 && zend_binary_strcasecmp ( fname , flen , ""constant"" , sizeof ( ""constant"" ) - 1 ) == 0"		430542	0		&&			
ANR	431574	EqualityExpression	"flen == sizeof ( ""constant"" ) - 1"		430542	0		==			
ANR	431575	Identifier	flen		430542	0					
ANR	431576	AdditiveExpression	"sizeof ( ""constant"" ) - 1"		430542	1		-			
ANR	431577	SizeofExpression	"sizeof ( ""constant"" )"		430542	0					
ANR	431578	Sizeof	sizeof		430542	0					
ANR	431579	PrimaryExpression	"""constant"""		430542	1					
ANR	431580	PrimaryExpression	1		430542	1					
ANR	431581	EqualityExpression	"zend_binary_strcasecmp ( fname , flen , ""constant"" , sizeof ( ""constant"" ) - 1 ) == 0"		430542	1		==			
ANR	431582	CallExpression	"zend_binary_strcasecmp ( fname , flen , ""constant"" , sizeof ( ""constant"" ) - 1 )"		430542	0					
ANR	431583	Callee	zend_binary_strcasecmp		430542	0					
ANR	431584	Identifier	zend_binary_strcasecmp		430542	0					
ANR	431585	ArgumentList	fname		430542	1					
ANR	431586	Argument	fname		430542	0					
ANR	431587	Identifier	fname		430542	0					
ANR	431588	Argument	flen		430542	1					
ANR	431589	Identifier	flen		430542	0					
ANR	431590	Argument	"""constant"""		430542	2					
ANR	431591	PrimaryExpression	"""constant"""		430542	0					
ANR	431592	Argument	"sizeof ( ""constant"" ) - 1"		430542	3					
ANR	431593	AdditiveExpression	"sizeof ( ""constant"" ) - 1"		430542	0		-			
ANR	431594	SizeofExpression	"sizeof ( ""constant"" )"		430542	0					
ANR	431595	Sizeof	sizeof		430542	0					
ANR	431596	PrimaryExpression	"""constant"""		430542	1					
ANR	431597	PrimaryExpression	1		430542	1					
ANR	431598	PrimaryExpression	0		430542	1					
ANR	431599	CompoundStatement		130:5:4650:4656	430542	1					
ANR	431600	IdentifierDeclStatement	zval c ;	739:5:22958:22964	430542	0	True				
ANR	431601	IdentifierDecl	c		430542	0					
ANR	431602	IdentifierDeclType	zval		430542	0					
ANR	431603	Identifier	c		430542	1					
ANR	431604	Statement	if	740:5:22971:22972	430542	1	True				
ANR	431605	Statement	(	740:7:22973:22973	430542	2	True				
ANR	431606	Statement	zend_optimizer_get_persistent_constant	740:8:22974:23011	430542	3	True				
ANR	431607	Statement	(	740:46:23012:23012	430542	4	True				
ANR	431608	Statement	Z_STR_P	740:47:23013:23019	430542	5	True				
ANR	431609	Statement	(	740:54:23020:23020	430542	6	True				
ANR	431610	Statement	arg	740:55:23021:23023	430542	7	True				
ANR	431611	Statement	)	740:58:23024:23024	430542	8	True				
ANR	431612	Statement	","	740:59:23025:23025	430542	9	True				
ANR	431613	Statement	&	740:61:23027:23027	430542	10	True				
ANR	431614	Statement	c	740:62:23028:23028	430542	11	True				
ANR	431615	Statement	","	740:63:23029:23029	430542	12	True				
ANR	431616	Statement	1	740:65:23031:23031	430542	13	True				
ANR	431617	Statement	ELS_CC	740:67:23033:23038	430542	14	True				
ANR	431618	Statement	)	740:73:23039:23039	430542	15	True				
ANR	431619	Statement	!=	740:75:23041:23042	430542	16	True				
ANR	431620	Statement	0	740:78:23044:23044	430542	17	True				
ANR	431621	Statement	)	740:79:23045:23045	430542	18	True				
ANR	431622	CompoundStatement		131:81:4739:4739	430542	19					
ANR	431623	ExpressionStatement	literal_dtor ( arg )	741:6:23055:23072	430542	0	True				
ANR	431624	CallExpression	literal_dtor ( arg )		430542	0					
ANR	431625	Callee	literal_dtor		430542	0					
ANR	431626	Identifier	literal_dtor		430542	0					
ANR	431627	ArgumentList	arg		430542	1					
ANR	431628	Argument	arg		430542	0					
ANR	431629	Identifier	arg		430542	0					
ANR	431630	ExpressionStatement	MAKE_NOP ( sv )	742:6:23080:23092	430542	1	True				
ANR	431631	CallExpression	MAKE_NOP ( sv )		430542	0					
ANR	431632	Callee	MAKE_NOP		430542	0					
ANR	431633	Identifier	MAKE_NOP		430542	0					
ANR	431634	ArgumentList	sv		430542	1					
ANR	431635	Argument	sv		430542	0					
ANR	431636	Identifier	sv		430542	0					
ANR	431637	ExpressionStatement	MAKE_NOP ( fcall )	743:6:23100:23115	430542	2	True				
ANR	431638	CallExpression	MAKE_NOP ( fcall )		430542	0					
ANR	431639	Callee	MAKE_NOP		430542	0					
ANR	431640	Identifier	MAKE_NOP		430542	0					
ANR	431641	ArgumentList	fcall		430542	1					
ANR	431642	Argument	fcall		430542	0					
ANR	431643	Identifier	fcall		430542	0					
ANR	431644	ExpressionStatement	"ZEND_OP1_LITERAL ( opline ) = zend_optimizer_add_literal ( op_array , & c )"	744:6:23123:23190	430542	3	True				
ANR	431645	AssignmentExpression	"ZEND_OP1_LITERAL ( opline ) = zend_optimizer_add_literal ( op_array , & c )"		430542	0		=			
ANR	431646	CallExpression	ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	431647	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	431648	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	431649	ArgumentList	opline		430542	1					
ANR	431650	Argument	opline		430542	0					
ANR	431651	Identifier	opline		430542	0					
ANR	431652	CallExpression	"zend_optimizer_add_literal ( op_array , & c )"		430542	1					
ANR	431653	Callee	zend_optimizer_add_literal		430542	0					
ANR	431654	Identifier	zend_optimizer_add_literal		430542	0					
ANR	431655	ArgumentList	op_array		430542	1					
ANR	431656	Argument	op_array		430542	0					
ANR	431657	Identifier	op_array		430542	0					
ANR	431658	Argument	& c		430542	1					
ANR	431659	UnaryOperationExpression	& c		430542	0					
ANR	431660	UnaryOperator	&		430542	0					
ANR	431661	Identifier	c		430542	1					
ANR	431662	ExpressionStatement	ZEND_OP1_TYPE ( opline ) = IS_CONST	746:6:23247:23279	430542	4	True				
ANR	431663	AssignmentExpression	ZEND_OP1_TYPE ( opline ) = IS_CONST		430542	0		=			
ANR	431664	CallExpression	ZEND_OP1_TYPE ( opline )		430542	0					
ANR	431665	Callee	ZEND_OP1_TYPE		430542	0					
ANR	431666	Identifier	ZEND_OP1_TYPE		430542	0					
ANR	431667	ArgumentList	opline		430542	1					
ANR	431668	Argument	opline		430542	0					
ANR	431669	Identifier	opline		430542	0					
ANR	431670	Identifier	IS_CONST		430542	1					
ANR	431671	ElseStatement	else		430542	0					
ANR	431672	IfStatement	"if ( flen == sizeof ( ""extension_loaded"" ) - 1 && zend_binary_strcasecmp ( fname , flen , ""extension_loaded"" , sizeof ( ""extension_loaded"" ) - 1 ) == 0 )"		430542	0					
ANR	431673	Condition	"flen == sizeof ( ""extension_loaded"" ) - 1 && zend_binary_strcasecmp ( fname , flen , ""extension_loaded"" , sizeof ( ""extension_loaded"" ) - 1 ) == 0"	748:14:23302:23431	430542	0	True				
ANR	431674	AndExpression	"flen == sizeof ( ""extension_loaded"" ) - 1 && zend_binary_strcasecmp ( fname , flen , ""extension_loaded"" , sizeof ( ""extension_loaded"" ) - 1 ) == 0"		430542	0		&&			
ANR	431675	EqualityExpression	"flen == sizeof ( ""extension_loaded"" ) - 1"		430542	0		==			
ANR	431676	Identifier	flen		430542	0					
ANR	431677	AdditiveExpression	"sizeof ( ""extension_loaded"" ) - 1"		430542	1		-			
ANR	431678	SizeofExpression	"sizeof ( ""extension_loaded"" )"		430542	0					
ANR	431679	Sizeof	sizeof		430542	0					
ANR	431680	PrimaryExpression	"""extension_loaded"""		430542	1					
ANR	431681	PrimaryExpression	1		430542	1					
ANR	431682	EqualityExpression	"zend_binary_strcasecmp ( fname , flen , ""extension_loaded"" , sizeof ( ""extension_loaded"" ) - 1 ) == 0"		430542	1		==			
ANR	431683	CallExpression	"zend_binary_strcasecmp ( fname , flen , ""extension_loaded"" , sizeof ( ""extension_loaded"" ) - 1 )"		430542	0					
ANR	431684	Callee	zend_binary_strcasecmp		430542	0					
ANR	431685	Identifier	zend_binary_strcasecmp		430542	0					
ANR	431686	ArgumentList	fname		430542	1					
ANR	431687	Argument	fname		430542	0					
ANR	431688	Identifier	fname		430542	0					
ANR	431689	Argument	flen		430542	1					
ANR	431690	Identifier	flen		430542	0					
ANR	431691	Argument	"""extension_loaded"""		430542	2					
ANR	431692	PrimaryExpression	"""extension_loaded"""		430542	0					
ANR	431693	Argument	"sizeof ( ""extension_loaded"" ) - 1"		430542	3					
ANR	431694	AdditiveExpression	"sizeof ( ""extension_loaded"" ) - 1"		430542	0		-			
ANR	431695	SizeofExpression	"sizeof ( ""extension_loaded"" )"		430542	0					
ANR	431696	Sizeof	sizeof		430542	0					
ANR	431697	PrimaryExpression	"""extension_loaded"""		430542	1					
ANR	431698	PrimaryExpression	1		430542	1					
ANR	431699	PrimaryExpression	0		430542	1					
ANR	431700	CompoundStatement		139:146:5126:5126	430542	1					
ANR	431701	IfStatement	"if ( zend_hash_exists ( & module_registry , Z_STR_P ( arg ) ) )"		430542	0					
ANR	431702	Condition	"zend_hash_exists ( & module_registry , Z_STR_P ( arg ) )"	749:8:23444:23491	430542	0	True				
ANR	431703	CallExpression	"zend_hash_exists ( & module_registry , Z_STR_P ( arg ) )"		430542	0					
ANR	431704	Callee	zend_hash_exists		430542	0					
ANR	431705	Identifier	zend_hash_exists		430542	0					
ANR	431706	ArgumentList	& module_registry		430542	1					
ANR	431707	Argument	& module_registry		430542	0					
ANR	431708	UnaryOperationExpression	& module_registry		430542	0					
ANR	431709	UnaryOperator	&		430542	0					
ANR	431710	Identifier	module_registry		430542	1					
ANR	431711	Argument	Z_STR_P ( arg )		430542	1					
ANR	431712	CallExpression	Z_STR_P ( arg )		430542	0					
ANR	431713	Callee	Z_STR_P		430542	0					
ANR	431714	Identifier	Z_STR_P		430542	0					
ANR	431715	ArgumentList	arg		430542	1					
ANR	431716	Argument	arg		430542	0					
ANR	431717	Identifier	arg		430542	0					
ANR	431718	CompoundStatement		140:58:5186:5186	430542	1					
ANR	431719	ExpressionStatement	literal_dtor ( arg )	750:6:23502:23519	430542	0	True				
ANR	431720	CallExpression	literal_dtor ( arg )		430542	0					
ANR	431721	Callee	literal_dtor		430542	0					
ANR	431722	Identifier	literal_dtor		430542	0					
ANR	431723	ArgumentList	arg		430542	1					
ANR	431724	Argument	arg		430542	0					
ANR	431725	Identifier	arg		430542	0					
ANR	431726	ExpressionStatement	MAKE_NOP ( sv )	751:6:23527:23539	430542	1	True				
ANR	431727	CallExpression	MAKE_NOP ( sv )		430542	0					
ANR	431728	Callee	MAKE_NOP		430542	0					
ANR	431729	Identifier	MAKE_NOP		430542	0					
ANR	431730	ArgumentList	sv		430542	1					
ANR	431731	Argument	sv		430542	0					
ANR	431732	Identifier	sv		430542	0					
ANR	431733	ExpressionStatement	MAKE_NOP ( fcall )	752:6:23547:23562	430542	2	True				
ANR	431734	CallExpression	MAKE_NOP ( fcall )		430542	0					
ANR	431735	Callee	MAKE_NOP		430542	0					
ANR	431736	Identifier	MAKE_NOP		430542	0					
ANR	431737	ArgumentList	fcall		430542	1					
ANR	431738	Argument	fcall		430542	0					
ANR	431739	Identifier	fcall		430542	0					
ANR	431740	ExpressionStatement	"LITERAL_BOOL ( opline -> op1 , 1 )"	753:6:23570:23598	430542	3	True				
ANR	431741	CallExpression	"LITERAL_BOOL ( opline -> op1 , 1 )"		430542	0					
ANR	431742	Callee	LITERAL_BOOL		430542	0					
ANR	431743	Identifier	LITERAL_BOOL		430542	0					
ANR	431744	ArgumentList	opline -> op1		430542	1					
ANR	431745	Argument	opline -> op1		430542	0					
ANR	431746	PtrMemberAccess	opline -> op1		430542	0					
ANR	431747	Identifier	opline		430542	0					
ANR	431748	Identifier	op1		430542	1					
ANR	431749	Argument	1		430542	1					
ANR	431750	PrimaryExpression	1		430542	0					
ANR	431751	ExpressionStatement	ZEND_OP1_TYPE ( opline ) = IS_CONST	754:6:23606:23638	430542	4	True				
ANR	431752	AssignmentExpression	ZEND_OP1_TYPE ( opline ) = IS_CONST		430542	0		=			
ANR	431753	CallExpression	ZEND_OP1_TYPE ( opline )		430542	0					
ANR	431754	Callee	ZEND_OP1_TYPE		430542	0					
ANR	431755	Identifier	ZEND_OP1_TYPE		430542	0					
ANR	431756	ArgumentList	opline		430542	1					
ANR	431757	Argument	opline		430542	0					
ANR	431758	Identifier	opline		430542	0					
ANR	431759	Identifier	IS_CONST		430542	1					
ANR	431760	IfStatement	if ( opline -> opcode == ZEND_IS_EQUAL || opline -> opcode == ZEND_IS_NOT_EQUAL || ( opline -> opcode == ZEND_CASE && ( ZEND_OP1_TYPE ( opline ) & ( IS_CONST | IS_CV ) ) ) )		430542	5					
ANR	431761	Condition	opline -> opcode == ZEND_IS_EQUAL || opline -> opcode == ZEND_IS_NOT_EQUAL || ( opline -> opcode == ZEND_CASE && ( ZEND_OP1_TYPE ( opline ) & ( IS_CONST | IS_CV ) ) )	768:6:23952:24184	430542	0	True				
ANR	431762	OrExpression	opline -> opcode == ZEND_IS_EQUAL || opline -> opcode == ZEND_IS_NOT_EQUAL || ( opline -> opcode == ZEND_CASE && ( ZEND_OP1_TYPE ( opline ) & ( IS_CONST | IS_CV ) ) )		430542	0		||			
ANR	431763	EqualityExpression	opline -> opcode == ZEND_IS_EQUAL		430542	0		==			
ANR	431764	PtrMemberAccess	opline -> opcode		430542	0					
ANR	431765	Identifier	opline		430542	0					
ANR	431766	Identifier	opcode		430542	1					
ANR	431767	Identifier	ZEND_IS_EQUAL		430542	1					
ANR	431768	OrExpression	opline -> opcode == ZEND_IS_NOT_EQUAL || ( opline -> opcode == ZEND_CASE && ( ZEND_OP1_TYPE ( opline ) & ( IS_CONST | IS_CV ) ) )		430542	1		||			
ANR	431769	EqualityExpression	opline -> opcode == ZEND_IS_NOT_EQUAL		430542	0		==			
ANR	431770	PtrMemberAccess	opline -> opcode		430542	0					
ANR	431771	Identifier	opline		430542	0					
ANR	431772	Identifier	opcode		430542	1					
ANR	431773	Identifier	ZEND_IS_NOT_EQUAL		430542	1					
ANR	431774	AndExpression	opline -> opcode == ZEND_CASE && ( ZEND_OP1_TYPE ( opline ) & ( IS_CONST | IS_CV ) )		430542	1		&&			
ANR	431775	EqualityExpression	opline -> opcode == ZEND_CASE		430542	0		==			
ANR	431776	PtrMemberAccess	opline -> opcode		430542	0					
ANR	431777	Identifier	opline		430542	0					
ANR	431778	Identifier	opcode		430542	1					
ANR	431779	Identifier	ZEND_CASE		430542	1					
ANR	431780	BitAndExpression	ZEND_OP1_TYPE ( opline ) & ( IS_CONST | IS_CV )		430542	1		&			
ANR	431781	CallExpression	ZEND_OP1_TYPE ( opline )		430542	0					
ANR	431782	Callee	ZEND_OP1_TYPE		430542	0					
ANR	431783	Identifier	ZEND_OP1_TYPE		430542	0					
ANR	431784	ArgumentList	opline		430542	1					
ANR	431785	Argument	opline		430542	0					
ANR	431786	Identifier	opline		430542	0					
ANR	431787	InclusiveOrExpression	IS_CONST | IS_CV		430542	1		|			
ANR	431788	Identifier	IS_CONST		430542	0					
ANR	431789	Identifier	IS_CV		430542	1					
ANR	431790	CompoundStatement		162:80:5879:5879	430542	1					
ANR	431791	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_CONST && ( Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_FALSE || Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_TRUE ) )		430542	0					
ANR	431792	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST && ( Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_FALSE || Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_TRUE )	772:7:24196:24334	430542	0	True				
ANR	431793	AndExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST && ( Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_FALSE || Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_TRUE )		430542	0		&&			
ANR	431794	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		430542	0		==			
ANR	431795	CallExpression	ZEND_OP1_TYPE ( opline )		430542	0					
ANR	431796	Callee	ZEND_OP1_TYPE		430542	0					
ANR	431797	Identifier	ZEND_OP1_TYPE		430542	0					
ANR	431798	ArgumentList	opline		430542	1					
ANR	431799	Argument	opline		430542	0					
ANR	431800	Identifier	opline		430542	0					
ANR	431801	Identifier	IS_CONST		430542	1					
ANR	431802	OrExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_FALSE || Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_TRUE		430542	1		||			
ANR	431803	EqualityExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_FALSE		430542	0		==			
ANR	431804	CallExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) )		430542	0					
ANR	431805	Callee	Z_TYPE		430542	0					
ANR	431806	Identifier	Z_TYPE		430542	0					
ANR	431807	ArgumentList	ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	431808	Argument	ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	431809	CallExpression	ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	431810	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	431811	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	431812	ArgumentList	opline		430542	1					
ANR	431813	Argument	opline		430542	0					
ANR	431814	Identifier	opline		430542	0					
ANR	431815	Identifier	IS_FALSE		430542	1					
ANR	431816	EqualityExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_TRUE		430542	1		==			
ANR	431817	CallExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) )		430542	0					
ANR	431818	Callee	Z_TYPE		430542	0					
ANR	431819	Identifier	Z_TYPE		430542	0					
ANR	431820	ArgumentList	ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	431821	Argument	ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	431822	CallExpression	ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	431823	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	431824	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	431825	ArgumentList	opline		430542	1					
ANR	431826	Argument	opline		430542	0					
ANR	431827	Identifier	opline		430542	0					
ANR	431828	Identifier	IS_TRUE		430542	1					
ANR	431829	CompoundStatement		165:51:6029:6029	430542	1					
ANR	431830	ExpressionStatement	opline -> opcode = ( ( opline -> opcode != ZEND_IS_NOT_EQUAL ) == ( ( Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) ) == IS_TRUE ) ) ? ZEND_BOOL : ZEND_BOOL_NOT	782:4:24678:24823	430542	0	True				
ANR	431831	AssignmentExpression	opline -> opcode = ( ( opline -> opcode != ZEND_IS_NOT_EQUAL ) == ( ( Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) ) == IS_TRUE ) ) ? ZEND_BOOL : ZEND_BOOL_NOT		430542	0		=			
ANR	431832	PtrMemberAccess	opline -> opcode		430542	0					
ANR	431833	Identifier	opline		430542	0					
ANR	431834	Identifier	opcode		430542	1					
ANR	431835	ConditionalExpression	( ( opline -> opcode != ZEND_IS_NOT_EQUAL ) == ( ( Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) ) == IS_TRUE ) ) ? ZEND_BOOL : ZEND_BOOL_NOT		430542	1					
ANR	431836	Condition	( opline -> opcode != ZEND_IS_NOT_EQUAL ) == ( ( Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) ) == IS_TRUE )		430542	0					
ANR	431837	EqualityExpression	( opline -> opcode != ZEND_IS_NOT_EQUAL ) == ( ( Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) ) == IS_TRUE )		430542	0		==			
ANR	431838	EqualityExpression	opline -> opcode != ZEND_IS_NOT_EQUAL		430542	0		!=			
ANR	431839	PtrMemberAccess	opline -> opcode		430542	0					
ANR	431840	Identifier	opline		430542	0					
ANR	431841	Identifier	opcode		430542	1					
ANR	431842	Identifier	ZEND_IS_NOT_EQUAL		430542	1					
ANR	431843	EqualityExpression	( Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) ) == IS_TRUE		430542	1		==			
ANR	431844	CallExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) )		430542	0					
ANR	431845	Callee	Z_TYPE		430542	0					
ANR	431846	Identifier	Z_TYPE		430542	0					
ANR	431847	ArgumentList	ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	431848	Argument	ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	431849	CallExpression	ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	431850	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	431851	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	431852	ArgumentList	opline		430542	1					
ANR	431853	Argument	opline		430542	0					
ANR	431854	Identifier	opline		430542	0					
ANR	431855	Identifier	IS_TRUE		430542	1					
ANR	431856	Identifier	ZEND_BOOL		430542	1					
ANR	431857	Identifier	ZEND_BOOL_NOT		430542	2					
ANR	431858	ExpressionStatement	"COPY_NODE ( opline -> op1 , opline -> op2 )"	785:4:24829:24864	430542	1	True				
ANR	431859	CallExpression	"COPY_NODE ( opline -> op1 , opline -> op2 )"		430542	0					
ANR	431860	Callee	COPY_NODE		430542	0					
ANR	431861	Identifier	COPY_NODE		430542	0					
ANR	431862	ArgumentList	opline -> op1		430542	1					
ANR	431863	Argument	opline -> op1		430542	0					
ANR	431864	PtrMemberAccess	opline -> op1		430542	0					
ANR	431865	Identifier	opline		430542	0					
ANR	431866	Identifier	op1		430542	1					
ANR	431867	Argument	opline -> op2		430542	1					
ANR	431868	PtrMemberAccess	opline -> op2		430542	0					
ANR	431869	Identifier	opline		430542	0					
ANR	431870	Identifier	op2		430542	1					
ANR	431871	ExpressionStatement	SET_UNUSED ( opline -> op2 )	786:4:24870:24893	430542	2	True				
ANR	431872	CallExpression	SET_UNUSED ( opline -> op2 )		430542	0					
ANR	431873	Callee	SET_UNUSED		430542	0					
ANR	431874	Identifier	SET_UNUSED		430542	0					
ANR	431875	ArgumentList	opline -> op2		430542	1					
ANR	431876	Argument	opline -> op2		430542	0					
ANR	431877	PtrMemberAccess	opline -> op2		430542	0					
ANR	431878	Identifier	opline		430542	0					
ANR	431879	Identifier	op2		430542	1					
ANR	431880	ElseStatement	else		430542	0					
ANR	431881	IfStatement	if ( ZEND_OP2_TYPE ( opline ) == IS_CONST && ( Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_FALSE || Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_TRUE ) )		430542	0					
ANR	431882	Condition	ZEND_OP2_TYPE ( opline ) == IS_CONST && ( Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_FALSE || Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_TRUE )	787:14:24909:25055	430542	0	True				
ANR	431883	AndExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST && ( Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_FALSE || Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_TRUE )		430542	0		&&			
ANR	431884	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST		430542	0		==			
ANR	431885	CallExpression	ZEND_OP2_TYPE ( opline )		430542	0					
ANR	431886	Callee	ZEND_OP2_TYPE		430542	0					
ANR	431887	Identifier	ZEND_OP2_TYPE		430542	0					
ANR	431888	ArgumentList	opline		430542	1					
ANR	431889	Argument	opline		430542	0					
ANR	431890	Identifier	opline		430542	0					
ANR	431891	Identifier	IS_CONST		430542	1					
ANR	431892	OrExpression	Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_FALSE || Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_TRUE		430542	1		||			
ANR	431893	EqualityExpression	Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_FALSE		430542	0		==			
ANR	431894	CallExpression	Z_TYPE ( ZEND_OP2_LITERAL ( opline ) )		430542	0					
ANR	431895	Callee	Z_TYPE		430542	0					
ANR	431896	Identifier	Z_TYPE		430542	0					
ANR	431897	ArgumentList	ZEND_OP2_LITERAL ( opline )		430542	1					
ANR	431898	Argument	ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	431899	CallExpression	ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	431900	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	431901	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	431902	ArgumentList	opline		430542	1					
ANR	431903	Argument	opline		430542	0					
ANR	431904	Identifier	opline		430542	0					
ANR	431905	Identifier	IS_FALSE		430542	1					
ANR	431906	EqualityExpression	Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_TRUE		430542	1		==			
ANR	431907	CallExpression	Z_TYPE ( ZEND_OP2_LITERAL ( opline ) )		430542	0					
ANR	431908	Callee	Z_TYPE		430542	0					
ANR	431909	Identifier	Z_TYPE		430542	0					
ANR	431910	ArgumentList	ZEND_OP2_LITERAL ( opline )		430542	1					
ANR	431911	Argument	ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	431912	CallExpression	ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	431913	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	431914	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	431915	ArgumentList	opline		430542	1					
ANR	431916	Argument	opline		430542	0					
ANR	431917	Identifier	opline		430542	0					
ANR	431918	Identifier	IS_TRUE		430542	1					
ANR	431919	CompoundStatement		180:55:6750:6750	430542	1					
ANR	431920	ExpressionStatement	opline -> opcode = ( ( opline -> opcode != ZEND_IS_NOT_EQUAL ) == ( ( Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) ) == IS_TRUE ) ) ? ZEND_BOOL : ZEND_BOOL_NOT	797:4:25399:25544	430542	0	True				
ANR	431921	AssignmentExpression	opline -> opcode = ( ( opline -> opcode != ZEND_IS_NOT_EQUAL ) == ( ( Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) ) == IS_TRUE ) ) ? ZEND_BOOL : ZEND_BOOL_NOT		430542	0		=			
ANR	431922	PtrMemberAccess	opline -> opcode		430542	0					
ANR	431923	Identifier	opline		430542	0					
ANR	431924	Identifier	opcode		430542	1					
ANR	431925	ConditionalExpression	( ( opline -> opcode != ZEND_IS_NOT_EQUAL ) == ( ( Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) ) == IS_TRUE ) ) ? ZEND_BOOL : ZEND_BOOL_NOT		430542	1					
ANR	431926	Condition	( opline -> opcode != ZEND_IS_NOT_EQUAL ) == ( ( Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) ) == IS_TRUE )		430542	0					
ANR	431927	EqualityExpression	( opline -> opcode != ZEND_IS_NOT_EQUAL ) == ( ( Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) ) == IS_TRUE )		430542	0		==			
ANR	431928	EqualityExpression	opline -> opcode != ZEND_IS_NOT_EQUAL		430542	0		!=			
ANR	431929	PtrMemberAccess	opline -> opcode		430542	0					
ANR	431930	Identifier	opline		430542	0					
ANR	431931	Identifier	opcode		430542	1					
ANR	431932	Identifier	ZEND_IS_NOT_EQUAL		430542	1					
ANR	431933	EqualityExpression	( Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) ) == IS_TRUE		430542	1		==			
ANR	431934	CallExpression	Z_TYPE ( ZEND_OP2_LITERAL ( opline ) )		430542	0					
ANR	431935	Callee	Z_TYPE		430542	0					
ANR	431936	Identifier	Z_TYPE		430542	0					
ANR	431937	ArgumentList	ZEND_OP2_LITERAL ( opline )		430542	1					
ANR	431938	Argument	ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	431939	CallExpression	ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	431940	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	431941	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	431942	ArgumentList	opline		430542	1					
ANR	431943	Argument	opline		430542	0					
ANR	431944	Identifier	opline		430542	0					
ANR	431945	Identifier	IS_TRUE		430542	1					
ANR	431946	Identifier	ZEND_BOOL		430542	1					
ANR	431947	Identifier	ZEND_BOOL_NOT		430542	2					
ANR	431948	ExpressionStatement	SET_UNUSED ( opline -> op2 )	800:4:25550:25573	430542	1	True				
ANR	431949	CallExpression	SET_UNUSED ( opline -> op2 )		430542	0					
ANR	431950	Callee	SET_UNUSED		430542	0					
ANR	431951	Identifier	SET_UNUSED		430542	0					
ANR	431952	ArgumentList	opline -> op2		430542	1					
ANR	431953	Argument	opline -> op2		430542	0					
ANR	431954	PtrMemberAccess	opline -> op2		430542	0					
ANR	431955	Identifier	opline		430542	0					
ANR	431956	Identifier	op2		430542	1					
ANR	431957	IfStatement	"if ( ( opline -> opcode == ZEND_BOOL || opline -> opcode == ZEND_BOOL_NOT || opline -> opcode == ZEND_JMPZ || opline -> opcode == ZEND_JMPNZ || opline -> opcode == ZEND_JMPZNZ ) && ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR && VAR_SOURCE ( opline -> op1 ) != NULL && ! zend_bitset_in ( used_ext , VAR_NUM ( ZEND_OP1 ( opline ) . var ) ) && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL_NOT )"		430542	6					
ANR	431958	Condition	"( opline -> opcode == ZEND_BOOL || opline -> opcode == ZEND_BOOL_NOT || opline -> opcode == ZEND_JMPZ || opline -> opcode == ZEND_JMPNZ || opline -> opcode == ZEND_JMPZNZ ) && ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR && VAR_SOURCE ( opline -> op1 ) != NULL && ! zend_bitset_in ( used_ext , VAR_NUM ( ZEND_OP1 ( opline ) . var ) ) && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL_NOT"	804:6:25591:25960	430542	0	True				
ANR	431959	AndExpression	"( opline -> opcode == ZEND_BOOL || opline -> opcode == ZEND_BOOL_NOT || opline -> opcode == ZEND_JMPZ || opline -> opcode == ZEND_JMPNZ || opline -> opcode == ZEND_JMPZNZ ) && ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR && VAR_SOURCE ( opline -> op1 ) != NULL && ! zend_bitset_in ( used_ext , VAR_NUM ( ZEND_OP1 ( opline ) . var ) ) && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL_NOT"		430542	0		&&			
ANR	431960	OrExpression	opline -> opcode == ZEND_BOOL || opline -> opcode == ZEND_BOOL_NOT || opline -> opcode == ZEND_JMPZ || opline -> opcode == ZEND_JMPNZ || opline -> opcode == ZEND_JMPZNZ		430542	0		||			
ANR	431961	EqualityExpression	opline -> opcode == ZEND_BOOL		430542	0		==			
ANR	431962	PtrMemberAccess	opline -> opcode		430542	0					
ANR	431963	Identifier	opline		430542	0					
ANR	431964	Identifier	opcode		430542	1					
ANR	431965	Identifier	ZEND_BOOL		430542	1					
ANR	431966	OrExpression	opline -> opcode == ZEND_BOOL_NOT || opline -> opcode == ZEND_JMPZ || opline -> opcode == ZEND_JMPNZ || opline -> opcode == ZEND_JMPZNZ		430542	1		||			
ANR	431967	EqualityExpression	opline -> opcode == ZEND_BOOL_NOT		430542	0		==			
ANR	431968	PtrMemberAccess	opline -> opcode		430542	0					
ANR	431969	Identifier	opline		430542	0					
ANR	431970	Identifier	opcode		430542	1					
ANR	431971	Identifier	ZEND_BOOL_NOT		430542	1					
ANR	431972	OrExpression	opline -> opcode == ZEND_JMPZ || opline -> opcode == ZEND_JMPNZ || opline -> opcode == ZEND_JMPZNZ		430542	1		||			
ANR	431973	EqualityExpression	opline -> opcode == ZEND_JMPZ		430542	0		==			
ANR	431974	PtrMemberAccess	opline -> opcode		430542	0					
ANR	431975	Identifier	opline		430542	0					
ANR	431976	Identifier	opcode		430542	1					
ANR	431977	Identifier	ZEND_JMPZ		430542	1					
ANR	431978	OrExpression	opline -> opcode == ZEND_JMPNZ || opline -> opcode == ZEND_JMPZNZ		430542	1		||			
ANR	431979	EqualityExpression	opline -> opcode == ZEND_JMPNZ		430542	0		==			
ANR	431980	PtrMemberAccess	opline -> opcode		430542	0					
ANR	431981	Identifier	opline		430542	0					
ANR	431982	Identifier	opcode		430542	1					
ANR	431983	Identifier	ZEND_JMPNZ		430542	1					
ANR	431984	EqualityExpression	opline -> opcode == ZEND_JMPZNZ		430542	1		==			
ANR	431985	PtrMemberAccess	opline -> opcode		430542	0					
ANR	431986	Identifier	opline		430542	0					
ANR	431987	Identifier	opcode		430542	1					
ANR	431988	Identifier	ZEND_JMPZNZ		430542	1					
ANR	431989	AndExpression	"ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR && VAR_SOURCE ( opline -> op1 ) != NULL && ! zend_bitset_in ( used_ext , VAR_NUM ( ZEND_OP1 ( opline ) . var ) ) && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL_NOT"		430542	1		&&			
ANR	431990	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR		430542	0		==			
ANR	431991	CallExpression	ZEND_OP1_TYPE ( opline )		430542	0					
ANR	431992	Callee	ZEND_OP1_TYPE		430542	0					
ANR	431993	Identifier	ZEND_OP1_TYPE		430542	0					
ANR	431994	ArgumentList	opline		430542	1					
ANR	431995	Argument	opline		430542	0					
ANR	431996	Identifier	opline		430542	0					
ANR	431997	Identifier	IS_TMP_VAR		430542	1					
ANR	431998	AndExpression	"VAR_SOURCE ( opline -> op1 ) != NULL && ! zend_bitset_in ( used_ext , VAR_NUM ( ZEND_OP1 ( opline ) . var ) ) && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL_NOT"		430542	1		&&			
ANR	431999	EqualityExpression	VAR_SOURCE ( opline -> op1 ) != NULL		430542	0		!=			
ANR	432000	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	432001	Callee	VAR_SOURCE		430542	0					
ANR	432002	Identifier	VAR_SOURCE		430542	0					
ANR	432003	ArgumentList	opline -> op1		430542	1					
ANR	432004	Argument	opline -> op1		430542	0					
ANR	432005	PtrMemberAccess	opline -> op1		430542	0					
ANR	432006	Identifier	opline		430542	0					
ANR	432007	Identifier	op1		430542	1					
ANR	432008	Identifier	NULL		430542	1					
ANR	432009	AndExpression	"! zend_bitset_in ( used_ext , VAR_NUM ( ZEND_OP1 ( opline ) . var ) ) && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL_NOT"		430542	1		&&			
ANR	432010	UnaryOperationExpression	"! zend_bitset_in ( used_ext , VAR_NUM ( ZEND_OP1 ( opline ) . var ) )"		430542	0					
ANR	432011	UnaryOperator	!		430542	0					
ANR	432012	CallExpression	"zend_bitset_in ( used_ext , VAR_NUM ( ZEND_OP1 ( opline ) . var ) )"		430542	1					
ANR	432013	Callee	zend_bitset_in		430542	0					
ANR	432014	Identifier	zend_bitset_in		430542	0					
ANR	432015	ArgumentList	used_ext		430542	1					
ANR	432016	Argument	used_ext		430542	0					
ANR	432017	Identifier	used_ext		430542	0					
ANR	432018	Argument	VAR_NUM ( ZEND_OP1 ( opline ) . var )		430542	1					
ANR	432019	CallExpression	VAR_NUM ( ZEND_OP1 ( opline ) . var )		430542	0					
ANR	432020	Callee	VAR_NUM		430542	0					
ANR	432021	Identifier	VAR_NUM		430542	0					
ANR	432022	ArgumentList	ZEND_OP1 ( opline ) . var		430542	1					
ANR	432023	Argument	ZEND_OP1 ( opline ) . var		430542	0					
ANR	432024	MemberAccess	ZEND_OP1 ( opline ) . var		430542	0					
ANR	432025	CallExpression	ZEND_OP1 ( opline )		430542	0					
ANR	432026	Callee	ZEND_OP1		430542	0					
ANR	432027	Identifier	ZEND_OP1		430542	0					
ANR	432028	ArgumentList	opline		430542	1					
ANR	432029	Argument	opline		430542	0					
ANR	432030	Identifier	opline		430542	0					
ANR	432031	Identifier	var		430542	1					
ANR	432032	EqualityExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL_NOT		430542	1		==			
ANR	432033	PtrMemberAccess	VAR_SOURCE ( opline -> op1 ) -> opcode		430542	0					
ANR	432034	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	432035	Callee	VAR_SOURCE		430542	0					
ANR	432036	Identifier	VAR_SOURCE		430542	0					
ANR	432037	ArgumentList	opline -> op1		430542	1					
ANR	432038	Argument	opline -> op1		430542	0					
ANR	432039	PtrMemberAccess	opline -> op1		430542	0					
ANR	432040	Identifier	opline		430542	0					
ANR	432041	Identifier	op1		430542	1					
ANR	432042	Identifier	opcode		430542	1					
ANR	432043	Identifier	ZEND_BOOL_NOT		430542	1					
ANR	432044	CompoundStatement		205:3:7712:7750	430542	1					
ANR	432045	IdentifierDeclStatement	zend_op * src = VAR_SOURCE ( opline -> op1 ) ;	814:3:26020:26058	430542	0	True				
ANR	432046	IdentifierDecl	* src = VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	432047	IdentifierDeclType	zend_op *		430542	0					
ANR	432048	Identifier	src		430542	1					
ANR	432049	AssignmentExpression	* src = VAR_SOURCE ( opline -> op1 )		430542	2		=			
ANR	432050	Identifier	src		430542	0					
ANR	432051	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	1					
ANR	432052	Callee	VAR_SOURCE		430542	0					
ANR	432053	Identifier	VAR_SOURCE		430542	0					
ANR	432054	ArgumentList	opline -> op1		430542	1					
ANR	432055	Argument	opline -> op1		430542	0					
ANR	432056	PtrMemberAccess	opline -> op1		430542	0					
ANR	432057	Identifier	opline		430542	0					
ANR	432058	Identifier	op1		430542	1					
ANR	432059	ExpressionStatement	"COPY_NODE ( opline -> op1 , src -> op1 )"	816:3:26064:26096	430542	1	True				
ANR	432060	CallExpression	"COPY_NODE ( opline -> op1 , src -> op1 )"		430542	0					
ANR	432061	Callee	COPY_NODE		430542	0					
ANR	432062	Identifier	COPY_NODE		430542	0					
ANR	432063	ArgumentList	opline -> op1		430542	1					
ANR	432064	Argument	opline -> op1		430542	0					
ANR	432065	PtrMemberAccess	opline -> op1		430542	0					
ANR	432066	Identifier	opline		430542	0					
ANR	432067	Identifier	op1		430542	1					
ANR	432068	Argument	src -> op1		430542	1					
ANR	432069	PtrMemberAccess	src -> op1		430542	0					
ANR	432070	Identifier	src		430542	0					
ANR	432071	Identifier	op1		430542	1					
ANR	432072	SwitchStatement	switch ( opline -> opcode )		430542	2					
ANR	432073	Condition	opline -> opcode	818:11:26110:26123	430542	0	True				
ANR	432074	PtrMemberAccess	opline -> opcode		430542	0					
ANR	432075	Identifier	opline		430542	0					
ANR	432076	Identifier	opcode		430542	1					
ANR	432077	CompoundStatement		209:27:7818:7818	430542	1					
ANR	432078	Label	case ZEND_BOOL :	819:4:26132:26146	430542	0	True				
ANR	432079	Identifier	ZEND_BOOL		430542	0					
ANR	432080	ExpressionStatement	opline -> opcode = ZEND_BOOL_NOT	821:5:26210:26240	430542	1	True				
ANR	432081	AssignmentExpression	opline -> opcode = ZEND_BOOL_NOT		430542	0		=			
ANR	432082	PtrMemberAccess	opline -> opcode		430542	0					
ANR	432083	Identifier	opline		430542	0					
ANR	432084	Identifier	opcode		430542	1					
ANR	432085	Identifier	ZEND_BOOL_NOT		430542	1					
ANR	432086	BreakStatement	break ;	822:5:26247:26252	430542	2	True				
ANR	432087	Label	case ZEND_BOOL_NOT :	823:4:26258:26276	430542	3	True				
ANR	432088	Identifier	ZEND_BOOL_NOT		430542	0					
ANR	432089	ExpressionStatement	opline -> opcode = ZEND_BOOL	825:5:26341:26367	430542	4	True				
ANR	432090	AssignmentExpression	opline -> opcode = ZEND_BOOL		430542	0		=			
ANR	432091	PtrMemberAccess	opline -> opcode		430542	0					
ANR	432092	Identifier	opline		430542	0					
ANR	432093	Identifier	opcode		430542	1					
ANR	432094	Identifier	ZEND_BOOL		430542	1					
ANR	432095	BreakStatement	break ;	826:5:26374:26379	430542	5	True				
ANR	432096	Label	case ZEND_JMPZ :	827:4:26385:26399	430542	6	True				
ANR	432097	Identifier	ZEND_JMPZ		430542	0					
ANR	432098	ExpressionStatement	opline -> opcode = ZEND_JMPNZ	829:5:26464:26491	430542	7	True				
ANR	432099	AssignmentExpression	opline -> opcode = ZEND_JMPNZ		430542	0		=			
ANR	432100	PtrMemberAccess	opline -> opcode		430542	0					
ANR	432101	Identifier	opline		430542	0					
ANR	432102	Identifier	opcode		430542	1					
ANR	432103	Identifier	ZEND_JMPNZ		430542	1					
ANR	432104	BreakStatement	break ;	830:5:26498:26503	430542	8	True				
ANR	432105	Label	case ZEND_JMPNZ :	831:4:26509:26524	430542	9	True				
ANR	432106	Identifier	ZEND_JMPNZ		430542	0					
ANR	432107	ExpressionStatement	opline -> opcode = ZEND_JMPZ	833:5:26589:26615	430542	10	True				
ANR	432108	AssignmentExpression	opline -> opcode = ZEND_JMPZ		430542	0		=			
ANR	432109	PtrMemberAccess	opline -> opcode		430542	0					
ANR	432110	Identifier	opline		430542	0					
ANR	432111	Identifier	opcode		430542	1					
ANR	432112	Identifier	ZEND_JMPZ		430542	1					
ANR	432113	BreakStatement	break ;	834:5:26622:26627	430542	11	True				
ANR	432114	Label	case ZEND_JMPZNZ :	835:4:26633:26649	430542	12	True				
ANR	432115	Identifier	ZEND_JMPZNZ		430542	0					
ANR	432116	CompoundStatement		230:5:8438:8459	430542	13					
ANR	432117	IdentifierDeclStatement	int op_t ;	838:5:26731:26739	430542	0	True				
ANR	432118	IdentifierDecl	op_t		430542	0					
ANR	432119	IdentifierDeclType	int		430542	0					
ANR	432120	Identifier	op_t		430542	1					
ANR	432121	IdentifierDeclStatement	zend_code_block * op_b ;	839:5:26746:26767	430542	1	True				
ANR	432122	IdentifierDecl	* op_b		430542	0					
ANR	432123	IdentifierDeclType	zend_code_block *		430542	0					
ANR	432124	Identifier	op_b		430542	1					
ANR	432125	ExpressionStatement	op_t = opline -> extended_value	841:5:26775:26804	430542	2	True				
ANR	432126	AssignmentExpression	op_t = opline -> extended_value		430542	0		=			
ANR	432127	Identifier	op_t		430542	0					
ANR	432128	PtrMemberAccess	opline -> extended_value		430542	1					
ANR	432129	Identifier	opline		430542	0					
ANR	432130	Identifier	extended_value		430542	1					
ANR	432131	ExpressionStatement	opline -> extended_value = ZEND_OP2 ( opline ) . opline_num	842:5:26811:26863	430542	3	True				
ANR	432132	AssignmentExpression	opline -> extended_value = ZEND_OP2 ( opline ) . opline_num		430542	0		=			
ANR	432133	PtrMemberAccess	opline -> extended_value		430542	0					
ANR	432134	Identifier	opline		430542	0					
ANR	432135	Identifier	extended_value		430542	1					
ANR	432136	MemberAccess	ZEND_OP2 ( opline ) . opline_num		430542	1					
ANR	432137	CallExpression	ZEND_OP2 ( opline )		430542	0					
ANR	432138	Callee	ZEND_OP2		430542	0					
ANR	432139	Identifier	ZEND_OP2		430542	0					
ANR	432140	ArgumentList	opline		430542	1					
ANR	432141	Argument	opline		430542	0					
ANR	432142	Identifier	opline		430542	0					
ANR	432143	Identifier	opline_num		430542	1					
ANR	432144	ExpressionStatement	ZEND_OP2 ( opline ) . opline_num = op_t	843:5:26870:26904	430542	4	True				
ANR	432145	AssignmentExpression	ZEND_OP2 ( opline ) . opline_num = op_t		430542	0		=			
ANR	432146	MemberAccess	ZEND_OP2 ( opline ) . opline_num		430542	0					
ANR	432147	CallExpression	ZEND_OP2 ( opline )		430542	0					
ANR	432148	Callee	ZEND_OP2		430542	0					
ANR	432149	Identifier	ZEND_OP2		430542	0					
ANR	432150	ArgumentList	opline		430542	1					
ANR	432151	Argument	opline		430542	0					
ANR	432152	Identifier	opline		430542	0					
ANR	432153	Identifier	opline_num		430542	1					
ANR	432154	Identifier	op_t		430542	1					
ANR	432155	ExpressionStatement	op_b = block -> ext_to	845:5:26912:26932	430542	5	True				
ANR	432156	AssignmentExpression	op_b = block -> ext_to		430542	0		=			
ANR	432157	Identifier	op_b		430542	0					
ANR	432158	PtrMemberAccess	block -> ext_to		430542	1					
ANR	432159	Identifier	block		430542	0					
ANR	432160	Identifier	ext_to		430542	1					
ANR	432161	ExpressionStatement	block -> ext_to = block -> op2_to	846:5:26939:26968	430542	6	True				
ANR	432162	AssignmentExpression	block -> ext_to = block -> op2_to		430542	0		=			
ANR	432163	PtrMemberAccess	block -> ext_to		430542	0					
ANR	432164	Identifier	block		430542	0					
ANR	432165	Identifier	ext_to		430542	1					
ANR	432166	PtrMemberAccess	block -> op2_to		430542	1					
ANR	432167	Identifier	block		430542	0					
ANR	432168	Identifier	op2_to		430542	1					
ANR	432169	ExpressionStatement	block -> op2_to = op_b	847:5:26975:26995	430542	7	True				
ANR	432170	AssignmentExpression	block -> op2_to = op_b		430542	0		=			
ANR	432171	PtrMemberAccess	block -> op2_to		430542	0					
ANR	432172	Identifier	block		430542	0					
ANR	432173	Identifier	op2_to		430542	1					
ANR	432174	Identifier	op_b		430542	1					
ANR	432175	BreakStatement	break ;	849:4:27007:27012	430542	14	True				
ANR	432176	ExpressionStatement	VAR_UNSET ( opline -> op1 )	852:3:27023:27045	430542	3	True				
ANR	432177	CallExpression	VAR_UNSET ( opline -> op1 )		430542	0					
ANR	432178	Callee	VAR_UNSET		430542	0					
ANR	432179	Identifier	VAR_UNSET		430542	0					
ANR	432180	ArgumentList	opline -> op1		430542	1					
ANR	432181	Argument	opline -> op1		430542	0					
ANR	432182	PtrMemberAccess	opline -> op1		430542	0					
ANR	432183	Identifier	opline		430542	0					
ANR	432184	Identifier	op1		430542	1					
ANR	432185	ExpressionStatement	MAKE_NOP ( src )	853:3:27050:27063	430542	4	True				
ANR	432186	CallExpression	MAKE_NOP ( src )		430542	0					
ANR	432187	Callee	MAKE_NOP		430542	0					
ANR	432188	Identifier	MAKE_NOP		430542	0					
ANR	432189	ArgumentList	src		430542	1					
ANR	432190	Argument	src		430542	0					
ANR	432191	Identifier	src		430542	0					
ANR	432192	ContinueStatement	continue ;	854:3:27068:27076	430542	5	True				
ANR	432193	ElseStatement	else		430542	0					
ANR	432194	IfStatement	if ( 0 && ( opline -> opcode == ZEND_JMPZ_EX || opline -> opcode == ZEND_JMPNZ_EX ) && ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR && VAR_SOURCE ( opline -> op1 ) != NULL && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL_NOT && ZEND_OP1 ( opline ) . var == ZEND_RESULT ( opline ) . var )		430542	0					
ANR	432195	Condition	0 && ( opline -> opcode == ZEND_JMPZ_EX || opline -> opcode == ZEND_JMPNZ_EX ) && ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR && VAR_SOURCE ( opline -> op1 ) != NULL && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL_NOT && ZEND_OP1 ( opline ) . var == ZEND_RESULT ( opline ) . var	858:5:27171:27442	430542	0	True				
ANR	432196	AndExpression	0 && ( opline -> opcode == ZEND_JMPZ_EX || opline -> opcode == ZEND_JMPNZ_EX ) && ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR && VAR_SOURCE ( opline -> op1 ) != NULL && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL_NOT && ZEND_OP1 ( opline ) . var == ZEND_RESULT ( opline ) . var		430542	0		&&			
ANR	432197	PrimaryExpression	0		430542	0					
ANR	432198	AndExpression	( opline -> opcode == ZEND_JMPZ_EX || opline -> opcode == ZEND_JMPNZ_EX ) && ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR && VAR_SOURCE ( opline -> op1 ) != NULL && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL_NOT && ZEND_OP1 ( opline ) . var == ZEND_RESULT ( opline ) . var		430542	1		&&			
ANR	432199	OrExpression	opline -> opcode == ZEND_JMPZ_EX || opline -> opcode == ZEND_JMPNZ_EX		430542	0		||			
ANR	432200	EqualityExpression	opline -> opcode == ZEND_JMPZ_EX		430542	0		==			
ANR	432201	PtrMemberAccess	opline -> opcode		430542	0					
ANR	432202	Identifier	opline		430542	0					
ANR	432203	Identifier	opcode		430542	1					
ANR	432204	Identifier	ZEND_JMPZ_EX		430542	1					
ANR	432205	EqualityExpression	opline -> opcode == ZEND_JMPNZ_EX		430542	1		==			
ANR	432206	PtrMemberAccess	opline -> opcode		430542	0					
ANR	432207	Identifier	opline		430542	0					
ANR	432208	Identifier	opcode		430542	1					
ANR	432209	Identifier	ZEND_JMPNZ_EX		430542	1					
ANR	432210	AndExpression	ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR && VAR_SOURCE ( opline -> op1 ) != NULL && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL_NOT && ZEND_OP1 ( opline ) . var == ZEND_RESULT ( opline ) . var		430542	1		&&			
ANR	432211	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR		430542	0		==			
ANR	432212	CallExpression	ZEND_OP1_TYPE ( opline )		430542	0					
ANR	432213	Callee	ZEND_OP1_TYPE		430542	0					
ANR	432214	Identifier	ZEND_OP1_TYPE		430542	0					
ANR	432215	ArgumentList	opline		430542	1					
ANR	432216	Argument	opline		430542	0					
ANR	432217	Identifier	opline		430542	0					
ANR	432218	Identifier	IS_TMP_VAR		430542	1					
ANR	432219	AndExpression	VAR_SOURCE ( opline -> op1 ) != NULL && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL_NOT && ZEND_OP1 ( opline ) . var == ZEND_RESULT ( opline ) . var		430542	1		&&			
ANR	432220	EqualityExpression	VAR_SOURCE ( opline -> op1 ) != NULL		430542	0		!=			
ANR	432221	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	432222	Callee	VAR_SOURCE		430542	0					
ANR	432223	Identifier	VAR_SOURCE		430542	0					
ANR	432224	ArgumentList	opline -> op1		430542	1					
ANR	432225	Argument	opline -> op1		430542	0					
ANR	432226	PtrMemberAccess	opline -> op1		430542	0					
ANR	432227	Identifier	opline		430542	0					
ANR	432228	Identifier	op1		430542	1					
ANR	432229	Identifier	NULL		430542	1					
ANR	432230	AndExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL_NOT && ZEND_OP1 ( opline ) . var == ZEND_RESULT ( opline ) . var		430542	1		&&			
ANR	432231	EqualityExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL_NOT		430542	0		==			
ANR	432232	PtrMemberAccess	VAR_SOURCE ( opline -> op1 ) -> opcode		430542	0					
ANR	432233	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	432234	Callee	VAR_SOURCE		430542	0					
ANR	432235	Identifier	VAR_SOURCE		430542	0					
ANR	432236	ArgumentList	opline -> op1		430542	1					
ANR	432237	Argument	opline -> op1		430542	0					
ANR	432238	PtrMemberAccess	opline -> op1		430542	0					
ANR	432239	Identifier	opline		430542	0					
ANR	432240	Identifier	op1		430542	1					
ANR	432241	Identifier	opcode		430542	1					
ANR	432242	Identifier	ZEND_BOOL_NOT		430542	1					
ANR	432243	EqualityExpression	ZEND_OP1 ( opline ) . var == ZEND_RESULT ( opline ) . var		430542	1		==			
ANR	432244	MemberAccess	ZEND_OP1 ( opline ) . var		430542	0					
ANR	432245	CallExpression	ZEND_OP1 ( opline )		430542	0					
ANR	432246	Callee	ZEND_OP1		430542	0					
ANR	432247	Identifier	ZEND_OP1		430542	0					
ANR	432248	ArgumentList	opline		430542	1					
ANR	432249	Argument	opline		430542	0					
ANR	432250	Identifier	opline		430542	0					
ANR	432251	Identifier	var		430542	1					
ANR	432252	MemberAccess	ZEND_RESULT ( opline ) . var		430542	1					
ANR	432253	CallExpression	ZEND_RESULT ( opline )		430542	0					
ANR	432254	Callee	ZEND_RESULT		430542	0					
ANR	432255	Identifier	ZEND_RESULT		430542	0					
ANR	432256	ArgumentList	opline		430542	1					
ANR	432257	Argument	opline		430542	0					
ANR	432258	Identifier	opline		430542	0					
ANR	432259	Identifier	var		430542	1					
ANR	432260	CompoundStatement		256:3:9148:9186	430542	1					
ANR	432261	IdentifierDeclStatement	zend_op * src = VAR_SOURCE ( opline -> op1 ) ;	865:3:27456:27494	430542	0	True				
ANR	432262	IdentifierDecl	* src = VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	432263	IdentifierDeclType	zend_op *		430542	0					
ANR	432264	Identifier	src		430542	1					
ANR	432265	AssignmentExpression	* src = VAR_SOURCE ( opline -> op1 )		430542	2		=			
ANR	432266	Identifier	src		430542	0					
ANR	432267	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	1					
ANR	432268	Callee	VAR_SOURCE		430542	0					
ANR	432269	Identifier	VAR_SOURCE		430542	0					
ANR	432270	ArgumentList	opline -> op1		430542	1					
ANR	432271	Argument	opline -> op1		430542	0					
ANR	432272	PtrMemberAccess	opline -> op1		430542	0					
ANR	432273	Identifier	opline		430542	0					
ANR	432274	Identifier	op1		430542	1					
ANR	432275	IfStatement	if ( opline -> opcode == ZEND_JMPZ_EX )		430542	1					
ANR	432276	Condition	opline -> opcode == ZEND_JMPZ_EX	866:6:27502:27531	430542	0	True				
ANR	432277	EqualityExpression	opline -> opcode == ZEND_JMPZ_EX		430542	0		==			
ANR	432278	PtrMemberAccess	opline -> opcode		430542	0					
ANR	432279	Identifier	opline		430542	0					
ANR	432280	Identifier	opcode		430542	1					
ANR	432281	Identifier	ZEND_JMPZ_EX		430542	1					
ANR	432282	CompoundStatement		257:38:9226:9226	430542	1					
ANR	432283	ExpressionStatement	opline -> opcode = ZEND_JMPNZ	867:4:27540:27567	430542	0	True				
ANR	432284	AssignmentExpression	opline -> opcode = ZEND_JMPNZ		430542	0		=			
ANR	432285	PtrMemberAccess	opline -> opcode		430542	0					
ANR	432286	Identifier	opline		430542	0					
ANR	432287	Identifier	opcode		430542	1					
ANR	432288	Identifier	ZEND_JMPNZ		430542	1					
ANR	432289	ElseStatement	else		430542	0					
ANR	432290	CompoundStatement		259:10:9271:9271	430542	0					
ANR	432291	ExpressionStatement	opline -> opcode = ZEND_JMPZ	869:4:27585:27611	430542	0	True				
ANR	432292	AssignmentExpression	opline -> opcode = ZEND_JMPZ		430542	0		=			
ANR	432293	PtrMemberAccess	opline -> opcode		430542	0					
ANR	432294	Identifier	opline		430542	0					
ANR	432295	Identifier	opcode		430542	1					
ANR	432296	Identifier	ZEND_JMPZ		430542	1					
ANR	432297	ExpressionStatement	"COPY_NODE ( opline -> op1 , src -> op1 )"	871:3:27621:27653	430542	2	True				
ANR	432298	CallExpression	"COPY_NODE ( opline -> op1 , src -> op1 )"		430542	0					
ANR	432299	Callee	COPY_NODE		430542	0					
ANR	432300	Identifier	COPY_NODE		430542	0					
ANR	432301	ArgumentList	opline -> op1		430542	1					
ANR	432302	Argument	opline -> op1		430542	0					
ANR	432303	PtrMemberAccess	opline -> op1		430542	0					
ANR	432304	Identifier	opline		430542	0					
ANR	432305	Identifier	op1		430542	1					
ANR	432306	Argument	src -> op1		430542	1					
ANR	432307	PtrMemberAccess	src -> op1		430542	0					
ANR	432308	Identifier	src		430542	0					
ANR	432309	Identifier	op1		430542	1					
ANR	432310	ExpressionStatement	SET_UNUSED ( opline -> result )	872:3:27658:27684	430542	3	True				
ANR	432311	CallExpression	SET_UNUSED ( opline -> result )		430542	0					
ANR	432312	Callee	SET_UNUSED		430542	0					
ANR	432313	Identifier	SET_UNUSED		430542	0					
ANR	432314	ArgumentList	opline -> result		430542	1					
ANR	432315	Argument	opline -> result		430542	0					
ANR	432316	PtrMemberAccess	opline -> result		430542	0					
ANR	432317	Identifier	opline		430542	0					
ANR	432318	Identifier	result		430542	1					
ANR	432319	ContinueStatement	continue ;	873:3:27689:27697	430542	4	True				
ANR	432320	ElseStatement	else		430542	0					
ANR	432321	IfStatement	"if ( ( opline -> opcode == ZEND_BOOL || opline -> opcode == ZEND_BOOL_NOT || opline -> opcode == ZEND_JMPZ || opline -> opcode == ZEND_JMPZ_EX || opline -> opcode == ZEND_JMPNZ_EX || opline -> opcode == ZEND_JMPNZ || opline -> opcode == ZEND_JMPZNZ ) && ( ZEND_OP1_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) ) && VAR_SOURCE ( opline -> op1 ) != NULL && ( ! zend_bitset_in ( used_ext , VAR_NUM ( ZEND_OP1 ( opline ) . var ) ) || ( ( ZEND_RESULT_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) ) && ZEND_RESULT ( opline ) . var == ZEND_OP1 ( opline ) . var ) ) && ( VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_QM_ASSIGN ) )"		430542	0					
ANR	432322	Condition	"( opline -> opcode == ZEND_BOOL || opline -> opcode == ZEND_BOOL_NOT || opline -> opcode == ZEND_JMPZ || opline -> opcode == ZEND_JMPZ_EX || opline -> opcode == ZEND_JMPNZ_EX || opline -> opcode == ZEND_JMPNZ || opline -> opcode == ZEND_JMPZNZ ) && ( ZEND_OP1_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) ) && VAR_SOURCE ( opline -> op1 ) != NULL && ( ! zend_bitset_in ( used_ext , VAR_NUM ( ZEND_OP1 ( opline ) . var ) ) || ( ( ZEND_RESULT_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) ) && ZEND_RESULT ( opline ) . var == ZEND_OP1 ( opline ) . var ) ) && ( VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_QM_ASSIGN )"	877:6:27767:28389	430542	0	True				
ANR	432323	AndExpression	"( opline -> opcode == ZEND_BOOL || opline -> opcode == ZEND_BOOL_NOT || opline -> opcode == ZEND_JMPZ || opline -> opcode == ZEND_JMPZ_EX || opline -> opcode == ZEND_JMPNZ_EX || opline -> opcode == ZEND_JMPNZ || opline -> opcode == ZEND_JMPZNZ ) && ( ZEND_OP1_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) ) && VAR_SOURCE ( opline -> op1 ) != NULL && ( ! zend_bitset_in ( used_ext , VAR_NUM ( ZEND_OP1 ( opline ) . var ) ) || ( ( ZEND_RESULT_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) ) && ZEND_RESULT ( opline ) . var == ZEND_OP1 ( opline ) . var ) ) && ( VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_QM_ASSIGN )"		430542	0		&&			
ANR	432324	OrExpression	opline -> opcode == ZEND_BOOL || opline -> opcode == ZEND_BOOL_NOT || opline -> opcode == ZEND_JMPZ || opline -> opcode == ZEND_JMPZ_EX || opline -> opcode == ZEND_JMPNZ_EX || opline -> opcode == ZEND_JMPNZ || opline -> opcode == ZEND_JMPZNZ		430542	0		||			
ANR	432325	EqualityExpression	opline -> opcode == ZEND_BOOL		430542	0		==			
ANR	432326	PtrMemberAccess	opline -> opcode		430542	0					
ANR	432327	Identifier	opline		430542	0					
ANR	432328	Identifier	opcode		430542	1					
ANR	432329	Identifier	ZEND_BOOL		430542	1					
ANR	432330	OrExpression	opline -> opcode == ZEND_BOOL_NOT || opline -> opcode == ZEND_JMPZ || opline -> opcode == ZEND_JMPZ_EX || opline -> opcode == ZEND_JMPNZ_EX || opline -> opcode == ZEND_JMPNZ || opline -> opcode == ZEND_JMPZNZ		430542	1		||			
ANR	432331	EqualityExpression	opline -> opcode == ZEND_BOOL_NOT		430542	0		==			
ANR	432332	PtrMemberAccess	opline -> opcode		430542	0					
ANR	432333	Identifier	opline		430542	0					
ANR	432334	Identifier	opcode		430542	1					
ANR	432335	Identifier	ZEND_BOOL_NOT		430542	1					
ANR	432336	OrExpression	opline -> opcode == ZEND_JMPZ || opline -> opcode == ZEND_JMPZ_EX || opline -> opcode == ZEND_JMPNZ_EX || opline -> opcode == ZEND_JMPNZ || opline -> opcode == ZEND_JMPZNZ		430542	1		||			
ANR	432337	EqualityExpression	opline -> opcode == ZEND_JMPZ		430542	0		==			
ANR	432338	PtrMemberAccess	opline -> opcode		430542	0					
ANR	432339	Identifier	opline		430542	0					
ANR	432340	Identifier	opcode		430542	1					
ANR	432341	Identifier	ZEND_JMPZ		430542	1					
ANR	432342	OrExpression	opline -> opcode == ZEND_JMPZ_EX || opline -> opcode == ZEND_JMPNZ_EX || opline -> opcode == ZEND_JMPNZ || opline -> opcode == ZEND_JMPZNZ		430542	1		||			
ANR	432343	EqualityExpression	opline -> opcode == ZEND_JMPZ_EX		430542	0		==			
ANR	432344	PtrMemberAccess	opline -> opcode		430542	0					
ANR	432345	Identifier	opline		430542	0					
ANR	432346	Identifier	opcode		430542	1					
ANR	432347	Identifier	ZEND_JMPZ_EX		430542	1					
ANR	432348	OrExpression	opline -> opcode == ZEND_JMPNZ_EX || opline -> opcode == ZEND_JMPNZ || opline -> opcode == ZEND_JMPZNZ		430542	1		||			
ANR	432349	EqualityExpression	opline -> opcode == ZEND_JMPNZ_EX		430542	0		==			
ANR	432350	PtrMemberAccess	opline -> opcode		430542	0					
ANR	432351	Identifier	opline		430542	0					
ANR	432352	Identifier	opcode		430542	1					
ANR	432353	Identifier	ZEND_JMPNZ_EX		430542	1					
ANR	432354	OrExpression	opline -> opcode == ZEND_JMPNZ || opline -> opcode == ZEND_JMPZNZ		430542	1		||			
ANR	432355	EqualityExpression	opline -> opcode == ZEND_JMPNZ		430542	0		==			
ANR	432356	PtrMemberAccess	opline -> opcode		430542	0					
ANR	432357	Identifier	opline		430542	0					
ANR	432358	Identifier	opcode		430542	1					
ANR	432359	Identifier	ZEND_JMPNZ		430542	1					
ANR	432360	EqualityExpression	opline -> opcode == ZEND_JMPZNZ		430542	1		==			
ANR	432361	PtrMemberAccess	opline -> opcode		430542	0					
ANR	432362	Identifier	opline		430542	0					
ANR	432363	Identifier	opcode		430542	1					
ANR	432364	Identifier	ZEND_JMPZNZ		430542	1					
ANR	432365	AndExpression	"( ZEND_OP1_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) ) && VAR_SOURCE ( opline -> op1 ) != NULL && ( ! zend_bitset_in ( used_ext , VAR_NUM ( ZEND_OP1 ( opline ) . var ) ) || ( ( ZEND_RESULT_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) ) && ZEND_RESULT ( opline ) . var == ZEND_OP1 ( opline ) . var ) ) && ( VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_QM_ASSIGN )"		430542	1		&&			
ANR	432366	BitAndExpression	ZEND_OP1_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR )		430542	0		&			
ANR	432367	CallExpression	ZEND_OP1_TYPE ( opline )		430542	0					
ANR	432368	Callee	ZEND_OP1_TYPE		430542	0					
ANR	432369	Identifier	ZEND_OP1_TYPE		430542	0					
ANR	432370	ArgumentList	opline		430542	1					
ANR	432371	Argument	opline		430542	0					
ANR	432372	Identifier	opline		430542	0					
ANR	432373	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		430542	1		|			
ANR	432374	Identifier	IS_TMP_VAR		430542	0					
ANR	432375	Identifier	IS_VAR		430542	1					
ANR	432376	AndExpression	"VAR_SOURCE ( opline -> op1 ) != NULL && ( ! zend_bitset_in ( used_ext , VAR_NUM ( ZEND_OP1 ( opline ) . var ) ) || ( ( ZEND_RESULT_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) ) && ZEND_RESULT ( opline ) . var == ZEND_OP1 ( opline ) . var ) ) && ( VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_QM_ASSIGN )"		430542	1		&&			
ANR	432377	EqualityExpression	VAR_SOURCE ( opline -> op1 ) != NULL		430542	0		!=			
ANR	432378	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	432379	Callee	VAR_SOURCE		430542	0					
ANR	432380	Identifier	VAR_SOURCE		430542	0					
ANR	432381	ArgumentList	opline -> op1		430542	1					
ANR	432382	Argument	opline -> op1		430542	0					
ANR	432383	PtrMemberAccess	opline -> op1		430542	0					
ANR	432384	Identifier	opline		430542	0					
ANR	432385	Identifier	op1		430542	1					
ANR	432386	Identifier	NULL		430542	1					
ANR	432387	AndExpression	"( ! zend_bitset_in ( used_ext , VAR_NUM ( ZEND_OP1 ( opline ) . var ) ) || ( ( ZEND_RESULT_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) ) && ZEND_RESULT ( opline ) . var == ZEND_OP1 ( opline ) . var ) ) && ( VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_QM_ASSIGN )"		430542	1		&&			
ANR	432388	OrExpression	"! zend_bitset_in ( used_ext , VAR_NUM ( ZEND_OP1 ( opline ) . var ) ) || ( ( ZEND_RESULT_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) ) && ZEND_RESULT ( opline ) . var == ZEND_OP1 ( opline ) . var )"		430542	0		||			
ANR	432389	UnaryOperationExpression	"! zend_bitset_in ( used_ext , VAR_NUM ( ZEND_OP1 ( opline ) . var ) )"		430542	0					
ANR	432390	UnaryOperator	!		430542	0					
ANR	432391	CallExpression	"zend_bitset_in ( used_ext , VAR_NUM ( ZEND_OP1 ( opline ) . var ) )"		430542	1					
ANR	432392	Callee	zend_bitset_in		430542	0					
ANR	432393	Identifier	zend_bitset_in		430542	0					
ANR	432394	ArgumentList	used_ext		430542	1					
ANR	432395	Argument	used_ext		430542	0					
ANR	432396	Identifier	used_ext		430542	0					
ANR	432397	Argument	VAR_NUM ( ZEND_OP1 ( opline ) . var )		430542	1					
ANR	432398	CallExpression	VAR_NUM ( ZEND_OP1 ( opline ) . var )		430542	0					
ANR	432399	Callee	VAR_NUM		430542	0					
ANR	432400	Identifier	VAR_NUM		430542	0					
ANR	432401	ArgumentList	ZEND_OP1 ( opline ) . var		430542	1					
ANR	432402	Argument	ZEND_OP1 ( opline ) . var		430542	0					
ANR	432403	MemberAccess	ZEND_OP1 ( opline ) . var		430542	0					
ANR	432404	CallExpression	ZEND_OP1 ( opline )		430542	0					
ANR	432405	Callee	ZEND_OP1		430542	0					
ANR	432406	Identifier	ZEND_OP1		430542	0					
ANR	432407	ArgumentList	opline		430542	1					
ANR	432408	Argument	opline		430542	0					
ANR	432409	Identifier	opline		430542	0					
ANR	432410	Identifier	var		430542	1					
ANR	432411	AndExpression	( ZEND_RESULT_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) ) && ZEND_RESULT ( opline ) . var == ZEND_OP1 ( opline ) . var		430542	1		&&			
ANR	432412	BitAndExpression	ZEND_RESULT_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR )		430542	0		&			
ANR	432413	CallExpression	ZEND_RESULT_TYPE ( opline )		430542	0					
ANR	432414	Callee	ZEND_RESULT_TYPE		430542	0					
ANR	432415	Identifier	ZEND_RESULT_TYPE		430542	0					
ANR	432416	ArgumentList	opline		430542	1					
ANR	432417	Argument	opline		430542	0					
ANR	432418	Identifier	opline		430542	0					
ANR	432419	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		430542	1		|			
ANR	432420	Identifier	IS_TMP_VAR		430542	0					
ANR	432421	Identifier	IS_VAR		430542	1					
ANR	432422	EqualityExpression	ZEND_RESULT ( opline ) . var == ZEND_OP1 ( opline ) . var		430542	1		==			
ANR	432423	MemberAccess	ZEND_RESULT ( opline ) . var		430542	0					
ANR	432424	CallExpression	ZEND_RESULT ( opline )		430542	0					
ANR	432425	Callee	ZEND_RESULT		430542	0					
ANR	432426	Identifier	ZEND_RESULT		430542	0					
ANR	432427	ArgumentList	opline		430542	1					
ANR	432428	Argument	opline		430542	0					
ANR	432429	Identifier	opline		430542	0					
ANR	432430	Identifier	var		430542	1					
ANR	432431	MemberAccess	ZEND_OP1 ( opline ) . var		430542	1					
ANR	432432	CallExpression	ZEND_OP1 ( opline )		430542	0					
ANR	432433	Callee	ZEND_OP1		430542	0					
ANR	432434	Identifier	ZEND_OP1		430542	0					
ANR	432435	ArgumentList	opline		430542	1					
ANR	432436	Argument	opline		430542	0					
ANR	432437	Identifier	opline		430542	0					
ANR	432438	Identifier	var		430542	1					
ANR	432439	OrExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_QM_ASSIGN		430542	1		||			
ANR	432440	EqualityExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL		430542	0		==			
ANR	432441	PtrMemberAccess	VAR_SOURCE ( opline -> op1 ) -> opcode		430542	0					
ANR	432442	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	432443	Callee	VAR_SOURCE		430542	0					
ANR	432444	Identifier	VAR_SOURCE		430542	0					
ANR	432445	ArgumentList	opline -> op1		430542	1					
ANR	432446	Argument	opline -> op1		430542	0					
ANR	432447	PtrMemberAccess	opline -> op1		430542	0					
ANR	432448	Identifier	opline		430542	0					
ANR	432449	Identifier	op1		430542	1					
ANR	432450	Identifier	opcode		430542	1					
ANR	432451	Identifier	ZEND_BOOL		430542	1					
ANR	432452	EqualityExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_QM_ASSIGN		430542	1		==			
ANR	432453	PtrMemberAccess	VAR_SOURCE ( opline -> op1 ) -> opcode		430542	0					
ANR	432454	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	432455	Callee	VAR_SOURCE		430542	0					
ANR	432456	Identifier	VAR_SOURCE		430542	0					
ANR	432457	ArgumentList	opline -> op1		430542	1					
ANR	432458	Argument	opline -> op1		430542	0					
ANR	432459	PtrMemberAccess	opline -> op1		430542	0					
ANR	432460	Identifier	opline		430542	0					
ANR	432461	Identifier	op1		430542	1					
ANR	432462	Identifier	opcode		430542	1					
ANR	432463	Identifier	ZEND_QM_ASSIGN		430542	1					
ANR	432464	CompoundStatement		282:3:10089:10127	430542	1					
ANR	432465	IdentifierDeclStatement	zend_op * src = VAR_SOURCE ( opline -> op1 ) ;	891:3:28397:28435	430542	0	True				
ANR	432466	IdentifierDecl	* src = VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	432467	IdentifierDeclType	zend_op *		430542	0					
ANR	432468	Identifier	src		430542	1					
ANR	432469	AssignmentExpression	* src = VAR_SOURCE ( opline -> op1 )		430542	2		=			
ANR	432470	Identifier	src		430542	0					
ANR	432471	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	1					
ANR	432472	Callee	VAR_SOURCE		430542	0					
ANR	432473	Identifier	VAR_SOURCE		430542	0					
ANR	432474	ArgumentList	opline -> op1		430542	1					
ANR	432475	Argument	opline -> op1		430542	0					
ANR	432476	PtrMemberAccess	opline -> op1		430542	0					
ANR	432477	Identifier	opline		430542	0					
ANR	432478	Identifier	op1		430542	1					
ANR	432479	ExpressionStatement	"COPY_NODE ( opline -> op1 , src -> op1 )"	892:3:28440:28472	430542	1	True				
ANR	432480	CallExpression	"COPY_NODE ( opline -> op1 , src -> op1 )"		430542	0					
ANR	432481	Callee	COPY_NODE		430542	0					
ANR	432482	Identifier	COPY_NODE		430542	0					
ANR	432483	ArgumentList	opline -> op1		430542	1					
ANR	432484	Argument	opline -> op1		430542	0					
ANR	432485	PtrMemberAccess	opline -> op1		430542	0					
ANR	432486	Identifier	opline		430542	0					
ANR	432487	Identifier	op1		430542	1					
ANR	432488	Argument	src -> op1		430542	1					
ANR	432489	PtrMemberAccess	src -> op1		430542	0					
ANR	432490	Identifier	src		430542	0					
ANR	432491	Identifier	op1		430542	1					
ANR	432492	ExpressionStatement	VAR_UNSET ( opline -> op1 )	894:3:28478:28500	430542	2	True				
ANR	432493	CallExpression	VAR_UNSET ( opline -> op1 )		430542	0					
ANR	432494	Callee	VAR_UNSET		430542	0					
ANR	432495	Identifier	VAR_UNSET		430542	0					
ANR	432496	ArgumentList	opline -> op1		430542	1					
ANR	432497	Argument	opline -> op1		430542	0					
ANR	432498	PtrMemberAccess	opline -> op1		430542	0					
ANR	432499	Identifier	opline		430542	0					
ANR	432500	Identifier	op1		430542	1					
ANR	432501	ExpressionStatement	MAKE_NOP ( src )	895:3:28505:28518	430542	3	True				
ANR	432502	CallExpression	MAKE_NOP ( src )		430542	0					
ANR	432503	Callee	MAKE_NOP		430542	0					
ANR	432504	Identifier	MAKE_NOP		430542	0					
ANR	432505	ArgumentList	src		430542	1					
ANR	432506	Argument	src		430542	0					
ANR	432507	Identifier	src		430542	0					
ANR	432508	ContinueStatement	continue ;	896:3:28523:28531	430542	4	True				
ANR	432509	ElseStatement	else		430542	0					
ANR	432510	IfStatement	if ( last_op && opline -> opcode == ZEND_ECHO && last_op -> opcode == ZEND_ECHO && ZEND_OP1_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) != IS_DOUBLE && ZEND_OP1_TYPE ( last_op ) == IS_CONST && Z_TYPE ( ZEND_OP1_LITERAL ( last_op ) ) != IS_DOUBLE )		430542	0					
ANR	432511	Condition	last_op && opline -> opcode == ZEND_ECHO && last_op -> opcode == ZEND_ECHO && ZEND_OP1_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) != IS_DOUBLE && ZEND_OP1_TYPE ( last_op ) == IS_CONST && Z_TYPE ( ZEND_OP1_LITERAL ( last_op ) ) != IS_DOUBLE	897:13:28546:28819	430542	0	True				
ANR	432512	AndExpression	last_op && opline -> opcode == ZEND_ECHO && last_op -> opcode == ZEND_ECHO && ZEND_OP1_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) != IS_DOUBLE && ZEND_OP1_TYPE ( last_op ) == IS_CONST && Z_TYPE ( ZEND_OP1_LITERAL ( last_op ) ) != IS_DOUBLE		430542	0		&&			
ANR	432513	Identifier	last_op		430542	0					
ANR	432514	AndExpression	opline -> opcode == ZEND_ECHO && last_op -> opcode == ZEND_ECHO && ZEND_OP1_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) != IS_DOUBLE && ZEND_OP1_TYPE ( last_op ) == IS_CONST && Z_TYPE ( ZEND_OP1_LITERAL ( last_op ) ) != IS_DOUBLE		430542	1		&&			
ANR	432515	EqualityExpression	opline -> opcode == ZEND_ECHO		430542	0		==			
ANR	432516	PtrMemberAccess	opline -> opcode		430542	0					
ANR	432517	Identifier	opline		430542	0					
ANR	432518	Identifier	opcode		430542	1					
ANR	432519	Identifier	ZEND_ECHO		430542	1					
ANR	432520	AndExpression	last_op -> opcode == ZEND_ECHO && ZEND_OP1_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) != IS_DOUBLE && ZEND_OP1_TYPE ( last_op ) == IS_CONST && Z_TYPE ( ZEND_OP1_LITERAL ( last_op ) ) != IS_DOUBLE		430542	1		&&			
ANR	432521	EqualityExpression	last_op -> opcode == ZEND_ECHO		430542	0		==			
ANR	432522	PtrMemberAccess	last_op -> opcode		430542	0					
ANR	432523	Identifier	last_op		430542	0					
ANR	432524	Identifier	opcode		430542	1					
ANR	432525	Identifier	ZEND_ECHO		430542	1					
ANR	432526	AndExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) != IS_DOUBLE && ZEND_OP1_TYPE ( last_op ) == IS_CONST && Z_TYPE ( ZEND_OP1_LITERAL ( last_op ) ) != IS_DOUBLE		430542	1		&&			
ANR	432527	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		430542	0		==			
ANR	432528	CallExpression	ZEND_OP1_TYPE ( opline )		430542	0					
ANR	432529	Callee	ZEND_OP1_TYPE		430542	0					
ANR	432530	Identifier	ZEND_OP1_TYPE		430542	0					
ANR	432531	ArgumentList	opline		430542	1					
ANR	432532	Argument	opline		430542	0					
ANR	432533	Identifier	opline		430542	0					
ANR	432534	Identifier	IS_CONST		430542	1					
ANR	432535	AndExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) != IS_DOUBLE && ZEND_OP1_TYPE ( last_op ) == IS_CONST && Z_TYPE ( ZEND_OP1_LITERAL ( last_op ) ) != IS_DOUBLE		430542	1		&&			
ANR	432536	EqualityExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) != IS_DOUBLE		430542	0		!=			
ANR	432537	CallExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) )		430542	0					
ANR	432538	Callee	Z_TYPE		430542	0					
ANR	432539	Identifier	Z_TYPE		430542	0					
ANR	432540	ArgumentList	ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	432541	Argument	ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	432542	CallExpression	ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	432543	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	432544	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	432545	ArgumentList	opline		430542	1					
ANR	432546	Argument	opline		430542	0					
ANR	432547	Identifier	opline		430542	0					
ANR	432548	Identifier	IS_DOUBLE		430542	1					
ANR	432549	AndExpression	ZEND_OP1_TYPE ( last_op ) == IS_CONST && Z_TYPE ( ZEND_OP1_LITERAL ( last_op ) ) != IS_DOUBLE		430542	1		&&			
ANR	432550	EqualityExpression	ZEND_OP1_TYPE ( last_op ) == IS_CONST		430542	0		==			
ANR	432551	CallExpression	ZEND_OP1_TYPE ( last_op )		430542	0					
ANR	432552	Callee	ZEND_OP1_TYPE		430542	0					
ANR	432553	Identifier	ZEND_OP1_TYPE		430542	0					
ANR	432554	ArgumentList	last_op		430542	1					
ANR	432555	Argument	last_op		430542	0					
ANR	432556	Identifier	last_op		430542	0					
ANR	432557	Identifier	IS_CONST		430542	1					
ANR	432558	EqualityExpression	Z_TYPE ( ZEND_OP1_LITERAL ( last_op ) ) != IS_DOUBLE		430542	1		!=			
ANR	432559	CallExpression	Z_TYPE ( ZEND_OP1_LITERAL ( last_op ) )		430542	0					
ANR	432560	Callee	Z_TYPE		430542	0					
ANR	432561	Identifier	Z_TYPE		430542	0					
ANR	432562	ArgumentList	ZEND_OP1_LITERAL ( last_op )		430542	1					
ANR	432563	Argument	ZEND_OP1_LITERAL ( last_op )		430542	0					
ANR	432564	CallExpression	ZEND_OP1_LITERAL ( last_op )		430542	0					
ANR	432565	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	432566	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	432567	ArgumentList	last_op		430542	1					
ANR	432568	Argument	last_op		430542	0					
ANR	432569	Identifier	last_op		430542	0					
ANR	432570	Identifier	IS_DOUBLE		430542	1					
ANR	432571	CompoundStatement		298:3:10643:10657	430542	1					
ANR	432572	IdentifierDeclStatement	"int l , old_len ;"	907:3:28951:28965	430542	0	True				
ANR	432573	IdentifierDecl	l		430542	0					
ANR	432574	IdentifierDeclType	int		430542	0					
ANR	432575	Identifier	l		430542	1					
ANR	432576	IdentifierDecl	old_len		430542	1					
ANR	432577	IdentifierDeclType	int		430542	0					
ANR	432578	Identifier	old_len		430542	1					
ANR	432579	IfStatement	if ( Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) != IS_STRING )		430542	1					
ANR	432580	Condition	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) != IS_STRING	909:7:28975:29019	430542	0	True				
ANR	432581	EqualityExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) != IS_STRING		430542	0		!=			
ANR	432582	CallExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) )		430542	0					
ANR	432583	Callee	Z_TYPE		430542	0					
ANR	432584	Identifier	Z_TYPE		430542	0					
ANR	432585	ArgumentList	ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	432586	Argument	ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	432587	CallExpression	ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	432588	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	432589	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	432590	ArgumentList	opline		430542	1					
ANR	432591	Argument	opline		430542	0					
ANR	432592	Identifier	opline		430542	0					
ANR	432593	Identifier	IS_STRING		430542	1					
ANR	432594	CompoundStatement		300:54:10714:10714	430542	1					
ANR	432595	ExpressionStatement	convert_to_string_safe ( & ZEND_OP1_LITERAL ( opline ) )	910:4:29028:29077	430542	0	True				
ANR	432596	CallExpression	convert_to_string_safe ( & ZEND_OP1_LITERAL ( opline ) )		430542	0					
ANR	432597	Callee	convert_to_string_safe		430542	0					
ANR	432598	Identifier	convert_to_string_safe		430542	0					
ANR	432599	ArgumentList	& ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	432600	Argument	& ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	432601	UnaryOperationExpression	& ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	432602	UnaryOperator	&		430542	0					
ANR	432603	CallExpression	ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	432604	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	432605	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	432606	ArgumentList	opline		430542	1					
ANR	432607	Argument	opline		430542	0					
ANR	432608	Identifier	opline		430542	0					
ANR	432609	IfStatement	if ( Z_TYPE ( ZEND_OP1_LITERAL ( last_op ) ) != IS_STRING )		430542	2					
ANR	432610	Condition	Z_TYPE ( ZEND_OP1_LITERAL ( last_op ) ) != IS_STRING	912:7:29091:29136	430542	0	True				
ANR	432611	EqualityExpression	Z_TYPE ( ZEND_OP1_LITERAL ( last_op ) ) != IS_STRING		430542	0		!=			
ANR	432612	CallExpression	Z_TYPE ( ZEND_OP1_LITERAL ( last_op ) )		430542	0					
ANR	432613	Callee	Z_TYPE		430542	0					
ANR	432614	Identifier	Z_TYPE		430542	0					
ANR	432615	ArgumentList	ZEND_OP1_LITERAL ( last_op )		430542	1					
ANR	432616	Argument	ZEND_OP1_LITERAL ( last_op )		430542	0					
ANR	432617	CallExpression	ZEND_OP1_LITERAL ( last_op )		430542	0					
ANR	432618	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	432619	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	432620	ArgumentList	last_op		430542	1					
ANR	432621	Argument	last_op		430542	0					
ANR	432622	Identifier	last_op		430542	0					
ANR	432623	Identifier	IS_STRING		430542	1					
ANR	432624	CompoundStatement		303:55:10831:10831	430542	1					
ANR	432625	ExpressionStatement	convert_to_string_safe ( & ZEND_OP1_LITERAL ( last_op ) )	913:4:29145:29195	430542	0	True				
ANR	432626	CallExpression	convert_to_string_safe ( & ZEND_OP1_LITERAL ( last_op ) )		430542	0					
ANR	432627	Callee	convert_to_string_safe		430542	0					
ANR	432628	Identifier	convert_to_string_safe		430542	0					
ANR	432629	ArgumentList	& ZEND_OP1_LITERAL ( last_op )		430542	1					
ANR	432630	Argument	& ZEND_OP1_LITERAL ( last_op )		430542	0					
ANR	432631	UnaryOperationExpression	& ZEND_OP1_LITERAL ( last_op )		430542	0					
ANR	432632	UnaryOperator	&		430542	0					
ANR	432633	CallExpression	ZEND_OP1_LITERAL ( last_op )		430542	1					
ANR	432634	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	432635	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	432636	ArgumentList	last_op		430542	1					
ANR	432637	Argument	last_op		430542	0					
ANR	432638	Identifier	last_op		430542	0					
ANR	432639	ExpressionStatement	old_len = Z_STRLEN ( ZEND_OP1_LITERAL ( last_op ) )	915:3:29205:29250	430542	3	True				
ANR	432640	AssignmentExpression	old_len = Z_STRLEN ( ZEND_OP1_LITERAL ( last_op ) )		430542	0		=			
ANR	432641	Identifier	old_len		430542	0					
ANR	432642	CallExpression	Z_STRLEN ( ZEND_OP1_LITERAL ( last_op ) )		430542	1					
ANR	432643	Callee	Z_STRLEN		430542	0					
ANR	432644	Identifier	Z_STRLEN		430542	0					
ANR	432645	ArgumentList	ZEND_OP1_LITERAL ( last_op )		430542	1					
ANR	432646	Argument	ZEND_OP1_LITERAL ( last_op )		430542	0					
ANR	432647	CallExpression	ZEND_OP1_LITERAL ( last_op )		430542	0					
ANR	432648	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	432649	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	432650	ArgumentList	last_op		430542	1					
ANR	432651	Argument	last_op		430542	0					
ANR	432652	Identifier	last_op		430542	0					
ANR	432653	ExpressionStatement	l = old_len + Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) )	916:3:29255:29303	430542	4	True				
ANR	432654	AssignmentExpression	l = old_len + Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) )		430542	0		=			
ANR	432655	Identifier	l		430542	0					
ANR	432656	AdditiveExpression	old_len + Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) )		430542	1		+			
ANR	432657	Identifier	old_len		430542	0					
ANR	432658	CallExpression	Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) )		430542	1					
ANR	432659	Callee	Z_STRLEN		430542	0					
ANR	432660	Identifier	Z_STRLEN		430542	0					
ANR	432661	ArgumentList	ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	432662	Argument	ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	432663	CallExpression	ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	432664	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	432665	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	432666	ArgumentList	opline		430542	1					
ANR	432667	Argument	opline		430542	0					
ANR	432668	Identifier	opline		430542	0					
ANR	432669	IfStatement	if ( ! Z_REFCOUNTED ( ZEND_OP1_LITERAL ( last_op ) ) )		430542	5					
ANR	432670	Condition	! Z_REFCOUNTED ( ZEND_OP1_LITERAL ( last_op ) )	917:7:29312:29351	430542	0	True				
ANR	432671	UnaryOperationExpression	! Z_REFCOUNTED ( ZEND_OP1_LITERAL ( last_op ) )		430542	0					
ANR	432672	UnaryOperator	!		430542	0					
ANR	432673	CallExpression	Z_REFCOUNTED ( ZEND_OP1_LITERAL ( last_op ) )		430542	1					
ANR	432674	Callee	Z_REFCOUNTED		430542	0					
ANR	432675	Identifier	Z_REFCOUNTED		430542	0					
ANR	432676	ArgumentList	ZEND_OP1_LITERAL ( last_op )		430542	1					
ANR	432677	Argument	ZEND_OP1_LITERAL ( last_op )		430542	0					
ANR	432678	CallExpression	ZEND_OP1_LITERAL ( last_op )		430542	0					
ANR	432679	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	432680	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	432681	ArgumentList	last_op		430542	1					
ANR	432682	Argument	last_op		430542	0					
ANR	432683	Identifier	last_op		430542	0					
ANR	432684	CompoundStatement		309:4:11052:11094	430542	1					
ANR	432685	IdentifierDeclStatement	"zend_string * tmp = zend_string_alloc ( l , 0 ) ;"	918:4:29360:29402	430542	0	True				
ANR	432686	IdentifierDecl	"* tmp = zend_string_alloc ( l , 0 )"		430542	0					
ANR	432687	IdentifierDeclType	zend_string *		430542	0					
ANR	432688	Identifier	tmp		430542	1					
ANR	432689	AssignmentExpression	"* tmp = zend_string_alloc ( l , 0 )"		430542	2		=			
ANR	432690	Identifier	tmp		430542	0					
ANR	432691	CallExpression	"zend_string_alloc ( l , 0 )"		430542	1					
ANR	432692	Callee	zend_string_alloc		430542	0					
ANR	432693	Identifier	zend_string_alloc		430542	0					
ANR	432694	ArgumentList	l		430542	1					
ANR	432695	Argument	l		430542	0					
ANR	432696	Identifier	l		430542	0					
ANR	432697	Argument	0		430542	1					
ANR	432698	PrimaryExpression	0		430542	0					
ANR	432699	ExpressionStatement	"memcpy ( ZSTR_VAL ( tmp ) , Z_STRVAL ( ZEND_OP1_LITERAL ( last_op ) ) , old_len )"	919:4:29408:29475	430542	1	True				
ANR	432700	CallExpression	"memcpy ( ZSTR_VAL ( tmp ) , Z_STRVAL ( ZEND_OP1_LITERAL ( last_op ) ) , old_len )"		430542	0					
ANR	432701	Callee	memcpy		430542	0					
ANR	432702	Identifier	memcpy		430542	0					
ANR	432703	ArgumentList	ZSTR_VAL ( tmp )		430542	1					
ANR	432704	Argument	ZSTR_VAL ( tmp )		430542	0					
ANR	432705	CallExpression	ZSTR_VAL ( tmp )		430542	0					
ANR	432706	Callee	ZSTR_VAL		430542	0					
ANR	432707	Identifier	ZSTR_VAL		430542	0					
ANR	432708	ArgumentList	tmp		430542	1					
ANR	432709	Argument	tmp		430542	0					
ANR	432710	Identifier	tmp		430542	0					
ANR	432711	Argument	Z_STRVAL ( ZEND_OP1_LITERAL ( last_op ) )		430542	1					
ANR	432712	CallExpression	Z_STRVAL ( ZEND_OP1_LITERAL ( last_op ) )		430542	0					
ANR	432713	Callee	Z_STRVAL		430542	0					
ANR	432714	Identifier	Z_STRVAL		430542	0					
ANR	432715	ArgumentList	ZEND_OP1_LITERAL ( last_op )		430542	1					
ANR	432716	Argument	ZEND_OP1_LITERAL ( last_op )		430542	0					
ANR	432717	CallExpression	ZEND_OP1_LITERAL ( last_op )		430542	0					
ANR	432718	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	432719	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	432720	ArgumentList	last_op		430542	1					
ANR	432721	Argument	last_op		430542	0					
ANR	432722	Identifier	last_op		430542	0					
ANR	432723	Argument	old_len		430542	2					
ANR	432724	Identifier	old_len		430542	0					
ANR	432725	ExpressionStatement	Z_STR ( ZEND_OP1_LITERAL ( last_op ) ) = tmp	920:4:29481:29519	430542	2	True				
ANR	432726	AssignmentExpression	Z_STR ( ZEND_OP1_LITERAL ( last_op ) ) = tmp		430542	0		=			
ANR	432727	CallExpression	Z_STR ( ZEND_OP1_LITERAL ( last_op ) )		430542	0					
ANR	432728	Callee	Z_STR		430542	0					
ANR	432729	Identifier	Z_STR		430542	0					
ANR	432730	ArgumentList	ZEND_OP1_LITERAL ( last_op )		430542	1					
ANR	432731	Argument	ZEND_OP1_LITERAL ( last_op )		430542	0					
ANR	432732	CallExpression	ZEND_OP1_LITERAL ( last_op )		430542	0					
ANR	432733	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	432734	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	432735	ArgumentList	last_op		430542	1					
ANR	432736	Argument	last_op		430542	0					
ANR	432737	Identifier	last_op		430542	0					
ANR	432738	Identifier	tmp		430542	1					
ANR	432739	ElseStatement	else		430542	0					
ANR	432740	CompoundStatement		312:10:11223:11223	430542	0					
ANR	432741	ExpressionStatement	"Z_STR ( ZEND_OP1_LITERAL ( last_op ) ) = zend_string_extend ( Z_STR ( ZEND_OP1_LITERAL ( last_op ) ) , l , 0 )"	922:4:29537:29630	430542	0	True				
ANR	432742	AssignmentExpression	"Z_STR ( ZEND_OP1_LITERAL ( last_op ) ) = zend_string_extend ( Z_STR ( ZEND_OP1_LITERAL ( last_op ) ) , l , 0 )"		430542	0		=			
ANR	432743	CallExpression	Z_STR ( ZEND_OP1_LITERAL ( last_op ) )		430542	0					
ANR	432744	Callee	Z_STR		430542	0					
ANR	432745	Identifier	Z_STR		430542	0					
ANR	432746	ArgumentList	ZEND_OP1_LITERAL ( last_op )		430542	1					
ANR	432747	Argument	ZEND_OP1_LITERAL ( last_op )		430542	0					
ANR	432748	CallExpression	ZEND_OP1_LITERAL ( last_op )		430542	0					
ANR	432749	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	432750	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	432751	ArgumentList	last_op		430542	1					
ANR	432752	Argument	last_op		430542	0					
ANR	432753	Identifier	last_op		430542	0					
ANR	432754	CallExpression	"zend_string_extend ( Z_STR ( ZEND_OP1_LITERAL ( last_op ) ) , l , 0 )"		430542	1					
ANR	432755	Callee	zend_string_extend		430542	0					
ANR	432756	Identifier	zend_string_extend		430542	0					
ANR	432757	ArgumentList	Z_STR ( ZEND_OP1_LITERAL ( last_op ) )		430542	1					
ANR	432758	Argument	Z_STR ( ZEND_OP1_LITERAL ( last_op ) )		430542	0					
ANR	432759	CallExpression	Z_STR ( ZEND_OP1_LITERAL ( last_op ) )		430542	0					
ANR	432760	Callee	Z_STR		430542	0					
ANR	432761	Identifier	Z_STR		430542	0					
ANR	432762	ArgumentList	ZEND_OP1_LITERAL ( last_op )		430542	1					
ANR	432763	Argument	ZEND_OP1_LITERAL ( last_op )		430542	0					
ANR	432764	CallExpression	ZEND_OP1_LITERAL ( last_op )		430542	0					
ANR	432765	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	432766	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	432767	ArgumentList	last_op		430542	1					
ANR	432768	Argument	last_op		430542	0					
ANR	432769	Identifier	last_op		430542	0					
ANR	432770	Argument	l		430542	1					
ANR	432771	Identifier	l		430542	0					
ANR	432772	Argument	0		430542	2					
ANR	432773	PrimaryExpression	0		430542	0					
ANR	432774	ExpressionStatement	Z_TYPE_INFO ( ZEND_OP1_LITERAL ( last_op ) ) = IS_STRING_EX	924:3:29640:29693	430542	6	True				
ANR	432775	AssignmentExpression	Z_TYPE_INFO ( ZEND_OP1_LITERAL ( last_op ) ) = IS_STRING_EX		430542	0		=			
ANR	432776	CallExpression	Z_TYPE_INFO ( ZEND_OP1_LITERAL ( last_op ) )		430542	0					
ANR	432777	Callee	Z_TYPE_INFO		430542	0					
ANR	432778	Identifier	Z_TYPE_INFO		430542	0					
ANR	432779	ArgumentList	ZEND_OP1_LITERAL ( last_op )		430542	1					
ANR	432780	Argument	ZEND_OP1_LITERAL ( last_op )		430542	0					
ANR	432781	CallExpression	ZEND_OP1_LITERAL ( last_op )		430542	0					
ANR	432782	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	432783	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	432784	ArgumentList	last_op		430542	1					
ANR	432785	Argument	last_op		430542	0					
ANR	432786	Identifier	last_op		430542	0					
ANR	432787	Identifier	IS_STRING_EX		430542	1					
ANR	432788	ExpressionStatement	"memcpy ( Z_STRVAL ( ZEND_OP1_LITERAL ( last_op ) ) + old_len , Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) )"	925:3:29698:29823	430542	7	True				
ANR	432789	CallExpression	"memcpy ( Z_STRVAL ( ZEND_OP1_LITERAL ( last_op ) ) + old_len , Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) )"		430542	0					
ANR	432790	Callee	memcpy		430542	0					
ANR	432791	Identifier	memcpy		430542	0					
ANR	432792	ArgumentList	Z_STRVAL ( ZEND_OP1_LITERAL ( last_op ) ) + old_len		430542	1					
ANR	432793	Argument	Z_STRVAL ( ZEND_OP1_LITERAL ( last_op ) ) + old_len		430542	0					
ANR	432794	AdditiveExpression	Z_STRVAL ( ZEND_OP1_LITERAL ( last_op ) ) + old_len		430542	0		+			
ANR	432795	CallExpression	Z_STRVAL ( ZEND_OP1_LITERAL ( last_op ) )		430542	0					
ANR	432796	Callee	Z_STRVAL		430542	0					
ANR	432797	Identifier	Z_STRVAL		430542	0					
ANR	432798	ArgumentList	ZEND_OP1_LITERAL ( last_op )		430542	1					
ANR	432799	Argument	ZEND_OP1_LITERAL ( last_op )		430542	0					
ANR	432800	CallExpression	ZEND_OP1_LITERAL ( last_op )		430542	0					
ANR	432801	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	432802	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	432803	ArgumentList	last_op		430542	1					
ANR	432804	Argument	last_op		430542	0					
ANR	432805	Identifier	last_op		430542	0					
ANR	432806	Identifier	old_len		430542	1					
ANR	432807	Argument	Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) )		430542	1					
ANR	432808	CallExpression	Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) )		430542	0					
ANR	432809	Callee	Z_STRVAL		430542	0					
ANR	432810	Identifier	Z_STRVAL		430542	0					
ANR	432811	ArgumentList	ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	432812	Argument	ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	432813	CallExpression	ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	432814	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	432815	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	432816	ArgumentList	opline		430542	1					
ANR	432817	Argument	opline		430542	0					
ANR	432818	Identifier	opline		430542	0					
ANR	432819	Argument	Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) )		430542	2					
ANR	432820	CallExpression	Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) )		430542	0					
ANR	432821	Callee	Z_STRLEN		430542	0					
ANR	432822	Identifier	Z_STRLEN		430542	0					
ANR	432823	ArgumentList	ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	432824	Argument	ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	432825	CallExpression	ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	432826	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	432827	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	432828	ArgumentList	opline		430542	1					
ANR	432829	Argument	opline		430542	0					
ANR	432830	Identifier	opline		430542	0					
ANR	432831	ExpressionStatement	Z_STRVAL ( ZEND_OP1_LITERAL ( last_op ) ) [ l ] = '\\0'	926:3:29828:29873	430542	8	True				
ANR	432832	AssignmentExpression	Z_STRVAL ( ZEND_OP1_LITERAL ( last_op ) ) [ l ] = '\\0'		430542	0		=			
ANR	432833	ArrayIndexing	Z_STRVAL ( ZEND_OP1_LITERAL ( last_op ) ) [ l ]		430542	0					
ANR	432834	CallExpression	Z_STRVAL ( ZEND_OP1_LITERAL ( last_op ) )		430542	0					
ANR	432835	Callee	Z_STRVAL		430542	0					
ANR	432836	Identifier	Z_STRVAL		430542	0					
ANR	432837	ArgumentList	ZEND_OP1_LITERAL ( last_op )		430542	1					
ANR	432838	Argument	ZEND_OP1_LITERAL ( last_op )		430542	0					
ANR	432839	CallExpression	ZEND_OP1_LITERAL ( last_op )		430542	0					
ANR	432840	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	432841	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	432842	ArgumentList	last_op		430542	1					
ANR	432843	Argument	last_op		430542	0					
ANR	432844	Identifier	last_op		430542	0					
ANR	432845	Identifier	l		430542	1					
ANR	432846	PrimaryExpression	'\\0'		430542	1					
ANR	432847	ExpressionStatement	zval_dtor ( & ZEND_OP1_LITERAL ( opline ) )	927:3:29878:29914	430542	9	True				
ANR	432848	CallExpression	zval_dtor ( & ZEND_OP1_LITERAL ( opline ) )		430542	0					
ANR	432849	Callee	zval_dtor		430542	0					
ANR	432850	Identifier	zval_dtor		430542	0					
ANR	432851	ArgumentList	& ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	432852	Argument	& ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	432853	UnaryOperationExpression	& ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	432854	UnaryOperator	&		430542	0					
ANR	432855	CallExpression	ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	432856	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	432857	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	432858	ArgumentList	opline		430542	1					
ANR	432859	Argument	opline		430542	0					
ANR	432860	Identifier	opline		430542	0					
ANR	432861	ExpressionStatement	Z_STR ( ZEND_OP1_LITERAL ( opline ) ) = zend_new_interned_string ( Z_STR ( ZEND_OP1_LITERAL ( last_op ) ) )	928:3:29919:30011	430542	10	True				
ANR	432862	AssignmentExpression	Z_STR ( ZEND_OP1_LITERAL ( opline ) ) = zend_new_interned_string ( Z_STR ( ZEND_OP1_LITERAL ( last_op ) ) )		430542	0		=			
ANR	432863	CallExpression	Z_STR ( ZEND_OP1_LITERAL ( opline ) )		430542	0					
ANR	432864	Callee	Z_STR		430542	0					
ANR	432865	Identifier	Z_STR		430542	0					
ANR	432866	ArgumentList	ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	432867	Argument	ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	432868	CallExpression	ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	432869	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	432870	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	432871	ArgumentList	opline		430542	1					
ANR	432872	Argument	opline		430542	0					
ANR	432873	Identifier	opline		430542	0					
ANR	432874	CallExpression	zend_new_interned_string ( Z_STR ( ZEND_OP1_LITERAL ( last_op ) ) )		430542	1					
ANR	432875	Callee	zend_new_interned_string		430542	0					
ANR	432876	Identifier	zend_new_interned_string		430542	0					
ANR	432877	ArgumentList	Z_STR ( ZEND_OP1_LITERAL ( last_op ) )		430542	1					
ANR	432878	Argument	Z_STR ( ZEND_OP1_LITERAL ( last_op ) )		430542	0					
ANR	432879	CallExpression	Z_STR ( ZEND_OP1_LITERAL ( last_op ) )		430542	0					
ANR	432880	Callee	Z_STR		430542	0					
ANR	432881	Identifier	Z_STR		430542	0					
ANR	432882	ArgumentList	ZEND_OP1_LITERAL ( last_op )		430542	1					
ANR	432883	Argument	ZEND_OP1_LITERAL ( last_op )		430542	0					
ANR	432884	CallExpression	ZEND_OP1_LITERAL ( last_op )		430542	0					
ANR	432885	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	432886	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	432887	ArgumentList	last_op		430542	1					
ANR	432888	Argument	last_op		430542	0					
ANR	432889	Identifier	last_op		430542	0					
ANR	432890	IfStatement	if ( ! Z_REFCOUNTED ( ZEND_OP1_LITERAL ( opline ) ) )		430542	11					
ANR	432891	Condition	! Z_REFCOUNTED ( ZEND_OP1_LITERAL ( opline ) )	929:7:30020:30058	430542	0	True				
ANR	432892	UnaryOperationExpression	! Z_REFCOUNTED ( ZEND_OP1_LITERAL ( opline ) )		430542	0					
ANR	432893	UnaryOperator	!		430542	0					
ANR	432894	CallExpression	Z_REFCOUNTED ( ZEND_OP1_LITERAL ( opline ) )		430542	1					
ANR	432895	Callee	Z_REFCOUNTED		430542	0					
ANR	432896	Identifier	Z_REFCOUNTED		430542	0					
ANR	432897	ArgumentList	ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	432898	Argument	ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	432899	CallExpression	ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	432900	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	432901	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	432902	ArgumentList	opline		430542	1					
ANR	432903	Argument	opline		430542	0					
ANR	432904	Identifier	opline		430542	0					
ANR	432905	CompoundStatement		320:48:11753:11753	430542	1					
ANR	432906	ExpressionStatement	Z_TYPE_FLAGS ( ZEND_OP1_LITERAL ( opline ) ) &= ~ ( IS_TYPE_REFCOUNTED | IS_TYPE_COPYABLE )	930:4:30067:30150	430542	0	True				
ANR	432907	AssignmentExpression	Z_TYPE_FLAGS ( ZEND_OP1_LITERAL ( opline ) ) &= ~ ( IS_TYPE_REFCOUNTED | IS_TYPE_COPYABLE )		430542	0		&=			
ANR	432908	CallExpression	Z_TYPE_FLAGS ( ZEND_OP1_LITERAL ( opline ) )		430542	0					
ANR	432909	Callee	Z_TYPE_FLAGS		430542	0					
ANR	432910	Identifier	Z_TYPE_FLAGS		430542	0					
ANR	432911	ArgumentList	ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	432912	Argument	ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	432913	CallExpression	ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	432914	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	432915	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	432916	ArgumentList	opline		430542	1					
ANR	432917	Argument	opline		430542	0					
ANR	432918	Identifier	opline		430542	0					
ANR	432919	UnaryOperationExpression	~ ( IS_TYPE_REFCOUNTED | IS_TYPE_COPYABLE )		430542	1					
ANR	432920	UnaryOperator	~		430542	0					
ANR	432921	InclusiveOrExpression	IS_TYPE_REFCOUNTED | IS_TYPE_COPYABLE		430542	1		|			
ANR	432922	Identifier	IS_TYPE_REFCOUNTED		430542	0					
ANR	432923	Identifier	IS_TYPE_COPYABLE		430542	1					
ANR	432924	ExpressionStatement	ZVAL_NULL ( & ZEND_OP1_LITERAL ( last_op ) )	932:3:30160:30197	430542	12	True				
ANR	432925	CallExpression	ZVAL_NULL ( & ZEND_OP1_LITERAL ( last_op ) )		430542	0					
ANR	432926	Callee	ZVAL_NULL		430542	0					
ANR	432927	Identifier	ZVAL_NULL		430542	0					
ANR	432928	ArgumentList	& ZEND_OP1_LITERAL ( last_op )		430542	1					
ANR	432929	Argument	& ZEND_OP1_LITERAL ( last_op )		430542	0					
ANR	432930	UnaryOperationExpression	& ZEND_OP1_LITERAL ( last_op )		430542	0					
ANR	432931	UnaryOperator	&		430542	0					
ANR	432932	CallExpression	ZEND_OP1_LITERAL ( last_op )		430542	1					
ANR	432933	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	432934	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	432935	ArgumentList	last_op		430542	1					
ANR	432936	Argument	last_op		430542	0					
ANR	432937	Identifier	last_op		430542	0					
ANR	432938	ExpressionStatement	MAKE_NOP ( last_op )	933:3:30202:30219	430542	13	True				
ANR	432939	CallExpression	MAKE_NOP ( last_op )		430542	0					
ANR	432940	Callee	MAKE_NOP		430542	0					
ANR	432941	Identifier	MAKE_NOP		430542	0					
ANR	432942	ArgumentList	last_op		430542	1					
ANR	432943	Argument	last_op		430542	0					
ANR	432944	Identifier	last_op		430542	0					
ANR	432945	ElseStatement	else		430542	0					
ANR	432946	IfStatement	if ( ( opline -> opcode == ZEND_CONCAT ) && ZEND_OP2_TYPE ( opline ) == IS_CONST && ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR && VAR_SOURCE ( opline -> op1 ) && ( VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_CONCAT || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_FAST_CONCAT ) && ZEND_OP2_TYPE ( VAR_SOURCE ( opline -> op1 ) ) == IS_CONST && ZEND_RESULT ( VAR_SOURCE ( opline -> op1 ) ) . var == ZEND_OP1 ( opline ) . var )		430542	0					
ANR	432947	Condition	( opline -> opcode == ZEND_CONCAT ) && ZEND_OP2_TYPE ( opline ) == IS_CONST && ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR && VAR_SOURCE ( opline -> op1 ) && ( VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_CONCAT || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_FAST_CONCAT ) && ZEND_OP2_TYPE ( VAR_SOURCE ( opline -> op1 ) ) == IS_CONST && ZEND_RESULT ( VAR_SOURCE ( opline -> op1 ) ) . var == ZEND_OP1 ( opline ) . var	934:13:30234:30639	430542	0	True				
ANR	432948	AndExpression	( opline -> opcode == ZEND_CONCAT ) && ZEND_OP2_TYPE ( opline ) == IS_CONST && ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR && VAR_SOURCE ( opline -> op1 ) && ( VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_CONCAT || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_FAST_CONCAT ) && ZEND_OP2_TYPE ( VAR_SOURCE ( opline -> op1 ) ) == IS_CONST && ZEND_RESULT ( VAR_SOURCE ( opline -> op1 ) ) . var == ZEND_OP1 ( opline ) . var		430542	0		&&			
ANR	432949	EqualityExpression	opline -> opcode == ZEND_CONCAT		430542	0		==			
ANR	432950	PtrMemberAccess	opline -> opcode		430542	0					
ANR	432951	Identifier	opline		430542	0					
ANR	432952	Identifier	opcode		430542	1					
ANR	432953	Identifier	ZEND_CONCAT		430542	1					
ANR	432954	AndExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST && ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR && VAR_SOURCE ( opline -> op1 ) && ( VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_CONCAT || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_FAST_CONCAT ) && ZEND_OP2_TYPE ( VAR_SOURCE ( opline -> op1 ) ) == IS_CONST && ZEND_RESULT ( VAR_SOURCE ( opline -> op1 ) ) . var == ZEND_OP1 ( opline ) . var		430542	1		&&			
ANR	432955	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST		430542	0		==			
ANR	432956	CallExpression	ZEND_OP2_TYPE ( opline )		430542	0					
ANR	432957	Callee	ZEND_OP2_TYPE		430542	0					
ANR	432958	Identifier	ZEND_OP2_TYPE		430542	0					
ANR	432959	ArgumentList	opline		430542	1					
ANR	432960	Argument	opline		430542	0					
ANR	432961	Identifier	opline		430542	0					
ANR	432962	Identifier	IS_CONST		430542	1					
ANR	432963	AndExpression	ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR && VAR_SOURCE ( opline -> op1 ) && ( VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_CONCAT || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_FAST_CONCAT ) && ZEND_OP2_TYPE ( VAR_SOURCE ( opline -> op1 ) ) == IS_CONST && ZEND_RESULT ( VAR_SOURCE ( opline -> op1 ) ) . var == ZEND_OP1 ( opline ) . var		430542	1		&&			
ANR	432964	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR		430542	0		==			
ANR	432965	CallExpression	ZEND_OP1_TYPE ( opline )		430542	0					
ANR	432966	Callee	ZEND_OP1_TYPE		430542	0					
ANR	432967	Identifier	ZEND_OP1_TYPE		430542	0					
ANR	432968	ArgumentList	opline		430542	1					
ANR	432969	Argument	opline		430542	0					
ANR	432970	Identifier	opline		430542	0					
ANR	432971	Identifier	IS_TMP_VAR		430542	1					
ANR	432972	AndExpression	VAR_SOURCE ( opline -> op1 ) && ( VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_CONCAT || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_FAST_CONCAT ) && ZEND_OP2_TYPE ( VAR_SOURCE ( opline -> op1 ) ) == IS_CONST && ZEND_RESULT ( VAR_SOURCE ( opline -> op1 ) ) . var == ZEND_OP1 ( opline ) . var		430542	1		&&			
ANR	432973	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	432974	Callee	VAR_SOURCE		430542	0					
ANR	432975	Identifier	VAR_SOURCE		430542	0					
ANR	432976	ArgumentList	opline -> op1		430542	1					
ANR	432977	Argument	opline -> op1		430542	0					
ANR	432978	PtrMemberAccess	opline -> op1		430542	0					
ANR	432979	Identifier	opline		430542	0					
ANR	432980	Identifier	op1		430542	1					
ANR	432981	AndExpression	( VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_CONCAT || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_FAST_CONCAT ) && ZEND_OP2_TYPE ( VAR_SOURCE ( opline -> op1 ) ) == IS_CONST && ZEND_RESULT ( VAR_SOURCE ( opline -> op1 ) ) . var == ZEND_OP1 ( opline ) . var		430542	1		&&			
ANR	432982	OrExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_CONCAT || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_FAST_CONCAT		430542	0		||			
ANR	432983	EqualityExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_CONCAT		430542	0		==			
ANR	432984	PtrMemberAccess	VAR_SOURCE ( opline -> op1 ) -> opcode		430542	0					
ANR	432985	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	432986	Callee	VAR_SOURCE		430542	0					
ANR	432987	Identifier	VAR_SOURCE		430542	0					
ANR	432988	ArgumentList	opline -> op1		430542	1					
ANR	432989	Argument	opline -> op1		430542	0					
ANR	432990	PtrMemberAccess	opline -> op1		430542	0					
ANR	432991	Identifier	opline		430542	0					
ANR	432992	Identifier	op1		430542	1					
ANR	432993	Identifier	opcode		430542	1					
ANR	432994	Identifier	ZEND_CONCAT		430542	1					
ANR	432995	EqualityExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_FAST_CONCAT		430542	1		==			
ANR	432996	PtrMemberAccess	VAR_SOURCE ( opline -> op1 ) -> opcode		430542	0					
ANR	432997	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	432998	Callee	VAR_SOURCE		430542	0					
ANR	432999	Identifier	VAR_SOURCE		430542	0					
ANR	433000	ArgumentList	opline -> op1		430542	1					
ANR	433001	Argument	opline -> op1		430542	0					
ANR	433002	PtrMemberAccess	opline -> op1		430542	0					
ANR	433003	Identifier	opline		430542	0					
ANR	433004	Identifier	op1		430542	1					
ANR	433005	Identifier	opcode		430542	1					
ANR	433006	Identifier	ZEND_FAST_CONCAT		430542	1					
ANR	433007	AndExpression	ZEND_OP2_TYPE ( VAR_SOURCE ( opline -> op1 ) ) == IS_CONST && ZEND_RESULT ( VAR_SOURCE ( opline -> op1 ) ) . var == ZEND_OP1 ( opline ) . var		430542	1		&&			
ANR	433008	EqualityExpression	ZEND_OP2_TYPE ( VAR_SOURCE ( opline -> op1 ) ) == IS_CONST		430542	0		==			
ANR	433009	CallExpression	ZEND_OP2_TYPE ( VAR_SOURCE ( opline -> op1 ) )		430542	0					
ANR	433010	Callee	ZEND_OP2_TYPE		430542	0					
ANR	433011	Identifier	ZEND_OP2_TYPE		430542	0					
ANR	433012	ArgumentList	VAR_SOURCE ( opline -> op1 )		430542	1					
ANR	433013	Argument	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	433014	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	433015	Callee	VAR_SOURCE		430542	0					
ANR	433016	Identifier	VAR_SOURCE		430542	0					
ANR	433017	ArgumentList	opline -> op1		430542	1					
ANR	433018	Argument	opline -> op1		430542	0					
ANR	433019	PtrMemberAccess	opline -> op1		430542	0					
ANR	433020	Identifier	opline		430542	0					
ANR	433021	Identifier	op1		430542	1					
ANR	433022	Identifier	IS_CONST		430542	1					
ANR	433023	EqualityExpression	ZEND_RESULT ( VAR_SOURCE ( opline -> op1 ) ) . var == ZEND_OP1 ( opline ) . var		430542	1		==			
ANR	433024	MemberAccess	ZEND_RESULT ( VAR_SOURCE ( opline -> op1 ) ) . var		430542	0					
ANR	433025	CallExpression	ZEND_RESULT ( VAR_SOURCE ( opline -> op1 ) )		430542	0					
ANR	433026	Callee	ZEND_RESULT		430542	0					
ANR	433027	Identifier	ZEND_RESULT		430542	0					
ANR	433028	ArgumentList	VAR_SOURCE ( opline -> op1 )		430542	1					
ANR	433029	Argument	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	433030	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	433031	Callee	VAR_SOURCE		430542	0					
ANR	433032	Identifier	VAR_SOURCE		430542	0					
ANR	433033	ArgumentList	opline -> op1		430542	1					
ANR	433034	Argument	opline -> op1		430542	0					
ANR	433035	PtrMemberAccess	opline -> op1		430542	0					
ANR	433036	Identifier	opline		430542	0					
ANR	433037	Identifier	op1		430542	1					
ANR	433038	Identifier	var		430542	1					
ANR	433039	MemberAccess	ZEND_OP1 ( opline ) . var		430542	1					
ANR	433040	CallExpression	ZEND_OP1 ( opline )		430542	0					
ANR	433041	Callee	ZEND_OP1		430542	0					
ANR	433042	Identifier	ZEND_OP1		430542	0					
ANR	433043	ArgumentList	opline		430542	1					
ANR	433044	Argument	opline		430542	0					
ANR	433045	Identifier	opline		430542	0					
ANR	433046	Identifier	var		430542	1					
ANR	433047	CompoundStatement		335:3:12440:12454	430542	1					
ANR	433048	IdentifierDeclStatement	zend_op * src = VAR_SOURCE ( opline -> op1 ) ;	943:3:30705:30743	430542	0	True				
ANR	433049	IdentifierDecl	* src = VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	433050	IdentifierDeclType	zend_op *		430542	0					
ANR	433051	Identifier	src		430542	1					
ANR	433052	AssignmentExpression	* src = VAR_SOURCE ( opline -> op1 )		430542	2		=			
ANR	433053	Identifier	src		430542	0					
ANR	433054	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	1					
ANR	433055	Callee	VAR_SOURCE		430542	0					
ANR	433056	Identifier	VAR_SOURCE		430542	0					
ANR	433057	ArgumentList	opline -> op1		430542	1					
ANR	433058	Argument	opline -> op1		430542	0					
ANR	433059	PtrMemberAccess	opline -> op1		430542	0					
ANR	433060	Identifier	opline		430542	0					
ANR	433061	Identifier	op1		430542	1					
ANR	433062	IdentifierDeclStatement	"int l , old_len ;"	944:3:30748:30762	430542	1	True				
ANR	433063	IdentifierDecl	l		430542	0					
ANR	433064	IdentifierDeclType	int		430542	0					
ANR	433065	Identifier	l		430542	1					
ANR	433066	IdentifierDecl	old_len		430542	1					
ANR	433067	IdentifierDeclType	int		430542	0					
ANR	433068	Identifier	old_len		430542	1					
ANR	433069	IfStatement	if ( Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) != IS_STRING )		430542	2					
ANR	433070	Condition	Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) != IS_STRING	946:7:30772:30816	430542	0	True				
ANR	433071	EqualityExpression	Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) != IS_STRING		430542	0		!=			
ANR	433072	CallExpression	Z_TYPE ( ZEND_OP2_LITERAL ( opline ) )		430542	0					
ANR	433073	Callee	Z_TYPE		430542	0					
ANR	433074	Identifier	Z_TYPE		430542	0					
ANR	433075	ArgumentList	ZEND_OP2_LITERAL ( opline )		430542	1					
ANR	433076	Argument	ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	433077	CallExpression	ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	433078	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	433079	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	433080	ArgumentList	opline		430542	1					
ANR	433081	Argument	opline		430542	0					
ANR	433082	Identifier	opline		430542	0					
ANR	433083	Identifier	IS_STRING		430542	1					
ANR	433084	CompoundStatement		337:54:12511:12511	430542	1					
ANR	433085	ExpressionStatement	convert_to_string_safe ( & ZEND_OP2_LITERAL ( opline ) )	947:4:30825:30874	430542	0	True				
ANR	433086	CallExpression	convert_to_string_safe ( & ZEND_OP2_LITERAL ( opline ) )		430542	0					
ANR	433087	Callee	convert_to_string_safe		430542	0					
ANR	433088	Identifier	convert_to_string_safe		430542	0					
ANR	433089	ArgumentList	& ZEND_OP2_LITERAL ( opline )		430542	1					
ANR	433090	Argument	& ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	433091	UnaryOperationExpression	& ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	433092	UnaryOperator	&		430542	0					
ANR	433093	CallExpression	ZEND_OP2_LITERAL ( opline )		430542	1					
ANR	433094	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	433095	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	433096	ArgumentList	opline		430542	1					
ANR	433097	Argument	opline		430542	0					
ANR	433098	Identifier	opline		430542	0					
ANR	433099	IfStatement	if ( Z_TYPE ( ZEND_OP2_LITERAL ( src ) ) != IS_STRING )		430542	3					
ANR	433100	Condition	Z_TYPE ( ZEND_OP2_LITERAL ( src ) ) != IS_STRING	949:7:30888:30929	430542	0	True				
ANR	433101	EqualityExpression	Z_TYPE ( ZEND_OP2_LITERAL ( src ) ) != IS_STRING		430542	0		!=			
ANR	433102	CallExpression	Z_TYPE ( ZEND_OP2_LITERAL ( src ) )		430542	0					
ANR	433103	Callee	Z_TYPE		430542	0					
ANR	433104	Identifier	Z_TYPE		430542	0					
ANR	433105	ArgumentList	ZEND_OP2_LITERAL ( src )		430542	1					
ANR	433106	Argument	ZEND_OP2_LITERAL ( src )		430542	0					
ANR	433107	CallExpression	ZEND_OP2_LITERAL ( src )		430542	0					
ANR	433108	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	433109	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	433110	ArgumentList	src		430542	1					
ANR	433111	Argument	src		430542	0					
ANR	433112	Identifier	src		430542	0					
ANR	433113	Identifier	IS_STRING		430542	1					
ANR	433114	CompoundStatement		340:51:12624:12624	430542	1					
ANR	433115	ExpressionStatement	convert_to_string_safe ( & ZEND_OP2_LITERAL ( src ) )	950:4:30938:30984	430542	0	True				
ANR	433116	CallExpression	convert_to_string_safe ( & ZEND_OP2_LITERAL ( src ) )		430542	0					
ANR	433117	Callee	convert_to_string_safe		430542	0					
ANR	433118	Identifier	convert_to_string_safe		430542	0					
ANR	433119	ArgumentList	& ZEND_OP2_LITERAL ( src )		430542	1					
ANR	433120	Argument	& ZEND_OP2_LITERAL ( src )		430542	0					
ANR	433121	UnaryOperationExpression	& ZEND_OP2_LITERAL ( src )		430542	0					
ANR	433122	UnaryOperator	&		430542	0					
ANR	433123	CallExpression	ZEND_OP2_LITERAL ( src )		430542	1					
ANR	433124	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	433125	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	433126	ArgumentList	src		430542	1					
ANR	433127	Argument	src		430542	0					
ANR	433128	Identifier	src		430542	0					
ANR	433129	ExpressionStatement	VAR_UNSET ( opline -> op1 )	953:3:30995:31017	430542	4	True				
ANR	433130	CallExpression	VAR_UNSET ( opline -> op1 )		430542	0					
ANR	433131	Callee	VAR_UNSET		430542	0					
ANR	433132	Identifier	VAR_UNSET		430542	0					
ANR	433133	ArgumentList	opline -> op1		430542	1					
ANR	433134	Argument	opline -> op1		430542	0					
ANR	433135	PtrMemberAccess	opline -> op1		430542	0					
ANR	433136	Identifier	opline		430542	0					
ANR	433137	Identifier	op1		430542	1					
ANR	433138	ExpressionStatement	"COPY_NODE ( opline -> op1 , src -> op1 )"	954:3:31022:31054	430542	5	True				
ANR	433139	CallExpression	"COPY_NODE ( opline -> op1 , src -> op1 )"		430542	0					
ANR	433140	Callee	COPY_NODE		430542	0					
ANR	433141	Identifier	COPY_NODE		430542	0					
ANR	433142	ArgumentList	opline -> op1		430542	1					
ANR	433143	Argument	opline -> op1		430542	0					
ANR	433144	PtrMemberAccess	opline -> op1		430542	0					
ANR	433145	Identifier	opline		430542	0					
ANR	433146	Identifier	op1		430542	1					
ANR	433147	Argument	src -> op1		430542	1					
ANR	433148	PtrMemberAccess	src -> op1		430542	0					
ANR	433149	Identifier	src		430542	0					
ANR	433150	Identifier	op1		430542	1					
ANR	433151	ExpressionStatement	old_len = Z_STRLEN ( ZEND_OP2_LITERAL ( src ) )	955:3:31059:31100	430542	6	True				
ANR	433152	AssignmentExpression	old_len = Z_STRLEN ( ZEND_OP2_LITERAL ( src ) )		430542	0		=			
ANR	433153	Identifier	old_len		430542	0					
ANR	433154	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( src ) )		430542	1					
ANR	433155	Callee	Z_STRLEN		430542	0					
ANR	433156	Identifier	Z_STRLEN		430542	0					
ANR	433157	ArgumentList	ZEND_OP2_LITERAL ( src )		430542	1					
ANR	433158	Argument	ZEND_OP2_LITERAL ( src )		430542	0					
ANR	433159	CallExpression	ZEND_OP2_LITERAL ( src )		430542	0					
ANR	433160	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	433161	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	433162	ArgumentList	src		430542	1					
ANR	433163	Argument	src		430542	0					
ANR	433164	Identifier	src		430542	0					
ANR	433165	ExpressionStatement	l = old_len + Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) )	956:3:31105:31153	430542	7	True				
ANR	433166	AssignmentExpression	l = old_len + Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) )		430542	0		=			
ANR	433167	Identifier	l		430542	0					
ANR	433168	AdditiveExpression	old_len + Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) )		430542	1		+			
ANR	433169	Identifier	old_len		430542	0					
ANR	433170	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) )		430542	1					
ANR	433171	Callee	Z_STRLEN		430542	0					
ANR	433172	Identifier	Z_STRLEN		430542	0					
ANR	433173	ArgumentList	ZEND_OP2_LITERAL ( opline )		430542	1					
ANR	433174	Argument	ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	433175	CallExpression	ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	433176	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	433177	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	433178	ArgumentList	opline		430542	1					
ANR	433179	Argument	opline		430542	0					
ANR	433180	Identifier	opline		430542	0					
ANR	433181	IfStatement	if ( ! Z_REFCOUNTED ( ZEND_OP2_LITERAL ( src ) ) )		430542	8					
ANR	433182	Condition	! Z_REFCOUNTED ( ZEND_OP2_LITERAL ( src ) )	957:7:31162:31197	430542	0	True				
ANR	433183	UnaryOperationExpression	! Z_REFCOUNTED ( ZEND_OP2_LITERAL ( src ) )		430542	0					
ANR	433184	UnaryOperator	!		430542	0					
ANR	433185	CallExpression	Z_REFCOUNTED ( ZEND_OP2_LITERAL ( src ) )		430542	1					
ANR	433186	Callee	Z_REFCOUNTED		430542	0					
ANR	433187	Identifier	Z_REFCOUNTED		430542	0					
ANR	433188	ArgumentList	ZEND_OP2_LITERAL ( src )		430542	1					
ANR	433189	Argument	ZEND_OP2_LITERAL ( src )		430542	0					
ANR	433190	CallExpression	ZEND_OP2_LITERAL ( src )		430542	0					
ANR	433191	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	433192	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	433193	ArgumentList	src		430542	1					
ANR	433194	Argument	src		430542	0					
ANR	433195	Identifier	src		430542	0					
ANR	433196	CompoundStatement		349:4:12898:12940	430542	1					
ANR	433197	IdentifierDeclStatement	"zend_string * tmp = zend_string_alloc ( l , 0 ) ;"	958:4:31206:31248	430542	0	True				
ANR	433198	IdentifierDecl	"* tmp = zend_string_alloc ( l , 0 )"		430542	0					
ANR	433199	IdentifierDeclType	zend_string *		430542	0					
ANR	433200	Identifier	tmp		430542	1					
ANR	433201	AssignmentExpression	"* tmp = zend_string_alloc ( l , 0 )"		430542	2		=			
ANR	433202	Identifier	tmp		430542	0					
ANR	433203	CallExpression	"zend_string_alloc ( l , 0 )"		430542	1					
ANR	433204	Callee	zend_string_alloc		430542	0					
ANR	433205	Identifier	zend_string_alloc		430542	0					
ANR	433206	ArgumentList	l		430542	1					
ANR	433207	Argument	l		430542	0					
ANR	433208	Identifier	l		430542	0					
ANR	433209	Argument	0		430542	1					
ANR	433210	PrimaryExpression	0		430542	0					
ANR	433211	ExpressionStatement	"memcpy ( ZSTR_VAL ( tmp ) , Z_STRVAL ( ZEND_OP2_LITERAL ( src ) ) , old_len )"	959:4:31254:31317	430542	1	True				
ANR	433212	CallExpression	"memcpy ( ZSTR_VAL ( tmp ) , Z_STRVAL ( ZEND_OP2_LITERAL ( src ) ) , old_len )"		430542	0					
ANR	433213	Callee	memcpy		430542	0					
ANR	433214	Identifier	memcpy		430542	0					
ANR	433215	ArgumentList	ZSTR_VAL ( tmp )		430542	1					
ANR	433216	Argument	ZSTR_VAL ( tmp )		430542	0					
ANR	433217	CallExpression	ZSTR_VAL ( tmp )		430542	0					
ANR	433218	Callee	ZSTR_VAL		430542	0					
ANR	433219	Identifier	ZSTR_VAL		430542	0					
ANR	433220	ArgumentList	tmp		430542	1					
ANR	433221	Argument	tmp		430542	0					
ANR	433222	Identifier	tmp		430542	0					
ANR	433223	Argument	Z_STRVAL ( ZEND_OP2_LITERAL ( src ) )		430542	1					
ANR	433224	CallExpression	Z_STRVAL ( ZEND_OP2_LITERAL ( src ) )		430542	0					
ANR	433225	Callee	Z_STRVAL		430542	0					
ANR	433226	Identifier	Z_STRVAL		430542	0					
ANR	433227	ArgumentList	ZEND_OP2_LITERAL ( src )		430542	1					
ANR	433228	Argument	ZEND_OP2_LITERAL ( src )		430542	0					
ANR	433229	CallExpression	ZEND_OP2_LITERAL ( src )		430542	0					
ANR	433230	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	433231	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	433232	ArgumentList	src		430542	1					
ANR	433233	Argument	src		430542	0					
ANR	433234	Identifier	src		430542	0					
ANR	433235	Argument	old_len		430542	2					
ANR	433236	Identifier	old_len		430542	0					
ANR	433237	ExpressionStatement	Z_STR ( ZEND_OP2_LITERAL ( last_op ) ) = tmp	960:4:31323:31361	430542	2	True				
ANR	433238	AssignmentExpression	Z_STR ( ZEND_OP2_LITERAL ( last_op ) ) = tmp		430542	0		=			
ANR	433239	CallExpression	Z_STR ( ZEND_OP2_LITERAL ( last_op ) )		430542	0					
ANR	433240	Callee	Z_STR		430542	0					
ANR	433241	Identifier	Z_STR		430542	0					
ANR	433242	ArgumentList	ZEND_OP2_LITERAL ( last_op )		430542	1					
ANR	433243	Argument	ZEND_OP2_LITERAL ( last_op )		430542	0					
ANR	433244	CallExpression	ZEND_OP2_LITERAL ( last_op )		430542	0					
ANR	433245	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	433246	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	433247	ArgumentList	last_op		430542	1					
ANR	433248	Argument	last_op		430542	0					
ANR	433249	Identifier	last_op		430542	0					
ANR	433250	Identifier	tmp		430542	1					
ANR	433251	ElseStatement	else		430542	0					
ANR	433252	CompoundStatement		352:10:13065:13065	430542	0					
ANR	433253	ExpressionStatement	"Z_STR ( ZEND_OP2_LITERAL ( src ) ) = zend_string_extend ( Z_STR ( ZEND_OP2_LITERAL ( src ) ) , l , 0 )"	962:4:31379:31464	430542	0	True				
ANR	433254	AssignmentExpression	"Z_STR ( ZEND_OP2_LITERAL ( src ) ) = zend_string_extend ( Z_STR ( ZEND_OP2_LITERAL ( src ) ) , l , 0 )"		430542	0		=			
ANR	433255	CallExpression	Z_STR ( ZEND_OP2_LITERAL ( src ) )		430542	0					
ANR	433256	Callee	Z_STR		430542	0					
ANR	433257	Identifier	Z_STR		430542	0					
ANR	433258	ArgumentList	ZEND_OP2_LITERAL ( src )		430542	1					
ANR	433259	Argument	ZEND_OP2_LITERAL ( src )		430542	0					
ANR	433260	CallExpression	ZEND_OP2_LITERAL ( src )		430542	0					
ANR	433261	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	433262	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	433263	ArgumentList	src		430542	1					
ANR	433264	Argument	src		430542	0					
ANR	433265	Identifier	src		430542	0					
ANR	433266	CallExpression	"zend_string_extend ( Z_STR ( ZEND_OP2_LITERAL ( src ) ) , l , 0 )"		430542	1					
ANR	433267	Callee	zend_string_extend		430542	0					
ANR	433268	Identifier	zend_string_extend		430542	0					
ANR	433269	ArgumentList	Z_STR ( ZEND_OP2_LITERAL ( src ) )		430542	1					
ANR	433270	Argument	Z_STR ( ZEND_OP2_LITERAL ( src ) )		430542	0					
ANR	433271	CallExpression	Z_STR ( ZEND_OP2_LITERAL ( src ) )		430542	0					
ANR	433272	Callee	Z_STR		430542	0					
ANR	433273	Identifier	Z_STR		430542	0					
ANR	433274	ArgumentList	ZEND_OP2_LITERAL ( src )		430542	1					
ANR	433275	Argument	ZEND_OP2_LITERAL ( src )		430542	0					
ANR	433276	CallExpression	ZEND_OP2_LITERAL ( src )		430542	0					
ANR	433277	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	433278	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	433279	ArgumentList	src		430542	1					
ANR	433280	Argument	src		430542	0					
ANR	433281	Identifier	src		430542	0					
ANR	433282	Argument	l		430542	1					
ANR	433283	Identifier	l		430542	0					
ANR	433284	Argument	0		430542	2					
ANR	433285	PrimaryExpression	0		430542	0					
ANR	433286	ExpressionStatement	Z_TYPE_INFO ( ZEND_OP2_LITERAL ( last_op ) ) = IS_STRING_EX	964:3:31474:31527	430542	9	True				
ANR	433287	AssignmentExpression	Z_TYPE_INFO ( ZEND_OP2_LITERAL ( last_op ) ) = IS_STRING_EX		430542	0		=			
ANR	433288	CallExpression	Z_TYPE_INFO ( ZEND_OP2_LITERAL ( last_op ) )		430542	0					
ANR	433289	Callee	Z_TYPE_INFO		430542	0					
ANR	433290	Identifier	Z_TYPE_INFO		430542	0					
ANR	433291	ArgumentList	ZEND_OP2_LITERAL ( last_op )		430542	1					
ANR	433292	Argument	ZEND_OP2_LITERAL ( last_op )		430542	0					
ANR	433293	CallExpression	ZEND_OP2_LITERAL ( last_op )		430542	0					
ANR	433294	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	433295	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	433296	ArgumentList	last_op		430542	1					
ANR	433297	Argument	last_op		430542	0					
ANR	433298	Identifier	last_op		430542	0					
ANR	433299	Identifier	IS_STRING_EX		430542	1					
ANR	433300	ExpressionStatement	"memcpy ( Z_STRVAL ( ZEND_OP2_LITERAL ( src ) ) + old_len , Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) ) , Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) ) )"	965:3:31532:31653	430542	10	True				
ANR	433301	CallExpression	"memcpy ( Z_STRVAL ( ZEND_OP2_LITERAL ( src ) ) + old_len , Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) ) , Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) ) )"		430542	0					
ANR	433302	Callee	memcpy		430542	0					
ANR	433303	Identifier	memcpy		430542	0					
ANR	433304	ArgumentList	Z_STRVAL ( ZEND_OP2_LITERAL ( src ) ) + old_len		430542	1					
ANR	433305	Argument	Z_STRVAL ( ZEND_OP2_LITERAL ( src ) ) + old_len		430542	0					
ANR	433306	AdditiveExpression	Z_STRVAL ( ZEND_OP2_LITERAL ( src ) ) + old_len		430542	0		+			
ANR	433307	CallExpression	Z_STRVAL ( ZEND_OP2_LITERAL ( src ) )		430542	0					
ANR	433308	Callee	Z_STRVAL		430542	0					
ANR	433309	Identifier	Z_STRVAL		430542	0					
ANR	433310	ArgumentList	ZEND_OP2_LITERAL ( src )		430542	1					
ANR	433311	Argument	ZEND_OP2_LITERAL ( src )		430542	0					
ANR	433312	CallExpression	ZEND_OP2_LITERAL ( src )		430542	0					
ANR	433313	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	433314	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	433315	ArgumentList	src		430542	1					
ANR	433316	Argument	src		430542	0					
ANR	433317	Identifier	src		430542	0					
ANR	433318	Identifier	old_len		430542	1					
ANR	433319	Argument	Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) )		430542	1					
ANR	433320	CallExpression	Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) )		430542	0					
ANR	433321	Callee	Z_STRVAL		430542	0					
ANR	433322	Identifier	Z_STRVAL		430542	0					
ANR	433323	ArgumentList	ZEND_OP2_LITERAL ( opline )		430542	1					
ANR	433324	Argument	ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	433325	CallExpression	ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	433326	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	433327	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	433328	ArgumentList	opline		430542	1					
ANR	433329	Argument	opline		430542	0					
ANR	433330	Identifier	opline		430542	0					
ANR	433331	Argument	Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) )		430542	2					
ANR	433332	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) )		430542	0					
ANR	433333	Callee	Z_STRLEN		430542	0					
ANR	433334	Identifier	Z_STRLEN		430542	0					
ANR	433335	ArgumentList	ZEND_OP2_LITERAL ( opline )		430542	1					
ANR	433336	Argument	ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	433337	CallExpression	ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	433338	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	433339	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	433340	ArgumentList	opline		430542	1					
ANR	433341	Argument	opline		430542	0					
ANR	433342	Identifier	opline		430542	0					
ANR	433343	ExpressionStatement	Z_STRVAL ( ZEND_OP2_LITERAL ( src ) ) [ l ] = '\\0'	966:3:31658:31699	430542	11	True				
ANR	433344	AssignmentExpression	Z_STRVAL ( ZEND_OP2_LITERAL ( src ) ) [ l ] = '\\0'		430542	0		=			
ANR	433345	ArrayIndexing	Z_STRVAL ( ZEND_OP2_LITERAL ( src ) ) [ l ]		430542	0					
ANR	433346	CallExpression	Z_STRVAL ( ZEND_OP2_LITERAL ( src ) )		430542	0					
ANR	433347	Callee	Z_STRVAL		430542	0					
ANR	433348	Identifier	Z_STRVAL		430542	0					
ANR	433349	ArgumentList	ZEND_OP2_LITERAL ( src )		430542	1					
ANR	433350	Argument	ZEND_OP2_LITERAL ( src )		430542	0					
ANR	433351	CallExpression	ZEND_OP2_LITERAL ( src )		430542	0					
ANR	433352	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	433353	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	433354	ArgumentList	src		430542	1					
ANR	433355	Argument	src		430542	0					
ANR	433356	Identifier	src		430542	0					
ANR	433357	Identifier	l		430542	1					
ANR	433358	PrimaryExpression	'\\0'		430542	1					
ANR	433359	ExpressionStatement	zend_string_release ( Z_STR ( ZEND_OP2_LITERAL ( opline ) ) )	967:3:31704:31756	430542	12	True				
ANR	433360	CallExpression	zend_string_release ( Z_STR ( ZEND_OP2_LITERAL ( opline ) ) )		430542	0					
ANR	433361	Callee	zend_string_release		430542	0					
ANR	433362	Identifier	zend_string_release		430542	0					
ANR	433363	ArgumentList	Z_STR ( ZEND_OP2_LITERAL ( opline ) )		430542	1					
ANR	433364	Argument	Z_STR ( ZEND_OP2_LITERAL ( opline ) )		430542	0					
ANR	433365	CallExpression	Z_STR ( ZEND_OP2_LITERAL ( opline ) )		430542	0					
ANR	433366	Callee	Z_STR		430542	0					
ANR	433367	Identifier	Z_STR		430542	0					
ANR	433368	ArgumentList	ZEND_OP2_LITERAL ( opline )		430542	1					
ANR	433369	Argument	ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	433370	CallExpression	ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	433371	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	433372	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	433373	ArgumentList	opline		430542	1					
ANR	433374	Argument	opline		430542	0					
ANR	433375	Identifier	opline		430542	0					
ANR	433376	ExpressionStatement	Z_STR ( ZEND_OP2_LITERAL ( opline ) ) = zend_new_interned_string ( Z_STR ( ZEND_OP2_LITERAL ( src ) ) )	968:3:31761:31849	430542	13	True				
ANR	433377	AssignmentExpression	Z_STR ( ZEND_OP2_LITERAL ( opline ) ) = zend_new_interned_string ( Z_STR ( ZEND_OP2_LITERAL ( src ) ) )		430542	0		=			
ANR	433378	CallExpression	Z_STR ( ZEND_OP2_LITERAL ( opline ) )		430542	0					
ANR	433379	Callee	Z_STR		430542	0					
ANR	433380	Identifier	Z_STR		430542	0					
ANR	433381	ArgumentList	ZEND_OP2_LITERAL ( opline )		430542	1					
ANR	433382	Argument	ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	433383	CallExpression	ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	433384	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	433385	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	433386	ArgumentList	opline		430542	1					
ANR	433387	Argument	opline		430542	0					
ANR	433388	Identifier	opline		430542	0					
ANR	433389	CallExpression	zend_new_interned_string ( Z_STR ( ZEND_OP2_LITERAL ( src ) ) )		430542	1					
ANR	433390	Callee	zend_new_interned_string		430542	0					
ANR	433391	Identifier	zend_new_interned_string		430542	0					
ANR	433392	ArgumentList	Z_STR ( ZEND_OP2_LITERAL ( src ) )		430542	1					
ANR	433393	Argument	Z_STR ( ZEND_OP2_LITERAL ( src ) )		430542	0					
ANR	433394	CallExpression	Z_STR ( ZEND_OP2_LITERAL ( src ) )		430542	0					
ANR	433395	Callee	Z_STR		430542	0					
ANR	433396	Identifier	Z_STR		430542	0					
ANR	433397	ArgumentList	ZEND_OP2_LITERAL ( src )		430542	1					
ANR	433398	Argument	ZEND_OP2_LITERAL ( src )		430542	0					
ANR	433399	CallExpression	ZEND_OP2_LITERAL ( src )		430542	0					
ANR	433400	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	433401	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	433402	ArgumentList	src		430542	1					
ANR	433403	Argument	src		430542	0					
ANR	433404	Identifier	src		430542	0					
ANR	433405	IfStatement	if ( ! Z_REFCOUNTED ( ZEND_OP2_LITERAL ( opline ) ) )		430542	14					
ANR	433406	Condition	! Z_REFCOUNTED ( ZEND_OP2_LITERAL ( opline ) )	969:7:31858:31896	430542	0	True				
ANR	433407	UnaryOperationExpression	! Z_REFCOUNTED ( ZEND_OP2_LITERAL ( opline ) )		430542	0					
ANR	433408	UnaryOperator	!		430542	0					
ANR	433409	CallExpression	Z_REFCOUNTED ( ZEND_OP2_LITERAL ( opline ) )		430542	1					
ANR	433410	Callee	Z_REFCOUNTED		430542	0					
ANR	433411	Identifier	Z_REFCOUNTED		430542	0					
ANR	433412	ArgumentList	ZEND_OP2_LITERAL ( opline )		430542	1					
ANR	433413	Argument	ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	433414	CallExpression	ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	433415	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	433416	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	433417	ArgumentList	opline		430542	1					
ANR	433418	Argument	opline		430542	0					
ANR	433419	Identifier	opline		430542	0					
ANR	433420	CompoundStatement		360:48:13591:13591	430542	1					
ANR	433421	ExpressionStatement	Z_TYPE_FLAGS ( ZEND_OP2_LITERAL ( opline ) ) &= ~ ( IS_TYPE_REFCOUNTED | IS_TYPE_COPYABLE )	970:4:31905:31988	430542	0	True				
ANR	433422	AssignmentExpression	Z_TYPE_FLAGS ( ZEND_OP2_LITERAL ( opline ) ) &= ~ ( IS_TYPE_REFCOUNTED | IS_TYPE_COPYABLE )		430542	0		&=			
ANR	433423	CallExpression	Z_TYPE_FLAGS ( ZEND_OP2_LITERAL ( opline ) )		430542	0					
ANR	433424	Callee	Z_TYPE_FLAGS		430542	0					
ANR	433425	Identifier	Z_TYPE_FLAGS		430542	0					
ANR	433426	ArgumentList	ZEND_OP2_LITERAL ( opline )		430542	1					
ANR	433427	Argument	ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	433428	CallExpression	ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	433429	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	433430	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	433431	ArgumentList	opline		430542	1					
ANR	433432	Argument	opline		430542	0					
ANR	433433	Identifier	opline		430542	0					
ANR	433434	UnaryOperationExpression	~ ( IS_TYPE_REFCOUNTED | IS_TYPE_COPYABLE )		430542	1					
ANR	433435	UnaryOperator	~		430542	0					
ANR	433436	InclusiveOrExpression	IS_TYPE_REFCOUNTED | IS_TYPE_COPYABLE		430542	1		|			
ANR	433437	Identifier	IS_TYPE_REFCOUNTED		430542	0					
ANR	433438	Identifier	IS_TYPE_COPYABLE		430542	1					
ANR	433439	ExpressionStatement	ZVAL_NULL ( & ZEND_OP2_LITERAL ( src ) )	972:3:31998:32031	430542	15	True				
ANR	433440	CallExpression	ZVAL_NULL ( & ZEND_OP2_LITERAL ( src ) )		430542	0					
ANR	433441	Callee	ZVAL_NULL		430542	0					
ANR	433442	Identifier	ZVAL_NULL		430542	0					
ANR	433443	ArgumentList	& ZEND_OP2_LITERAL ( src )		430542	1					
ANR	433444	Argument	& ZEND_OP2_LITERAL ( src )		430542	0					
ANR	433445	UnaryOperationExpression	& ZEND_OP2_LITERAL ( src )		430542	0					
ANR	433446	UnaryOperator	&		430542	0					
ANR	433447	CallExpression	ZEND_OP2_LITERAL ( src )		430542	1					
ANR	433448	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	433449	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	433450	ArgumentList	src		430542	1					
ANR	433451	Argument	src		430542	0					
ANR	433452	Identifier	src		430542	0					
ANR	433453	ExpressionStatement	MAKE_NOP ( src )	973:3:32036:32049	430542	16	True				
ANR	433454	CallExpression	MAKE_NOP ( src )		430542	0					
ANR	433455	Callee	MAKE_NOP		430542	0					
ANR	433456	Identifier	MAKE_NOP		430542	0					
ANR	433457	ArgumentList	src		430542	1					
ANR	433458	Argument	src		430542	0					
ANR	433459	Identifier	src		430542	0					
ANR	433460	ElseStatement	else		430542	0					
ANR	433461	IfStatement	if ( ( opline -> opcode == ZEND_ADD || opline -> opcode == ZEND_SUB || opline -> opcode == ZEND_MUL || opline -> opcode == ZEND_DIV || opline -> opcode == ZEND_MOD || opline -> opcode == ZEND_SL || opline -> opcode == ZEND_SR || opline -> opcode == ZEND_CONCAT || opline -> opcode == ZEND_FAST_CONCAT || opline -> opcode == ZEND_IS_EQUAL || opline -> opcode == ZEND_IS_NOT_EQUAL || opline -> opcode == ZEND_IS_SMALLER || opline -> opcode == ZEND_IS_SMALLER_OR_EQUAL || opline -> opcode == ZEND_IS_IDENTICAL || opline -> opcode == ZEND_IS_NOT_IDENTICAL || opline -> opcode == ZEND_BOOL_XOR || opline -> opcode == ZEND_BW_OR || opline -> opcode == ZEND_BW_AND || opline -> opcode == ZEND_BW_XOR ) && ZEND_OP1_TYPE ( opline ) == IS_CONST && ZEND_OP2_TYPE ( opline ) == IS_CONST )		430542	0					
ANR	433462	Condition	( opline -> opcode == ZEND_ADD || opline -> opcode == ZEND_SUB || opline -> opcode == ZEND_MUL || opline -> opcode == ZEND_DIV || opline -> opcode == ZEND_MOD || opline -> opcode == ZEND_SL || opline -> opcode == ZEND_SR || opline -> opcode == ZEND_CONCAT || opline -> opcode == ZEND_FAST_CONCAT || opline -> opcode == ZEND_IS_EQUAL || opline -> opcode == ZEND_IS_NOT_EQUAL || opline -> opcode == ZEND_IS_SMALLER || opline -> opcode == ZEND_IS_SMALLER_OR_EQUAL || opline -> opcode == ZEND_IS_IDENTICAL || opline -> opcode == ZEND_IS_NOT_IDENTICAL || opline -> opcode == ZEND_BOOL_XOR || opline -> opcode == ZEND_BW_OR || opline -> opcode == ZEND_BW_AND || opline -> opcode == ZEND_BW_XOR ) && ZEND_OP1_TYPE ( opline ) == IS_CONST && ZEND_OP2_TYPE ( opline ) == IS_CONST	974:13:32064:32882	430542	0	True				
ANR	433463	AndExpression	( opline -> opcode == ZEND_ADD || opline -> opcode == ZEND_SUB || opline -> opcode == ZEND_MUL || opline -> opcode == ZEND_DIV || opline -> opcode == ZEND_MOD || opline -> opcode == ZEND_SL || opline -> opcode == ZEND_SR || opline -> opcode == ZEND_CONCAT || opline -> opcode == ZEND_FAST_CONCAT || opline -> opcode == ZEND_IS_EQUAL || opline -> opcode == ZEND_IS_NOT_EQUAL || opline -> opcode == ZEND_IS_SMALLER || opline -> opcode == ZEND_IS_SMALLER_OR_EQUAL || opline -> opcode == ZEND_IS_IDENTICAL || opline -> opcode == ZEND_IS_NOT_IDENTICAL || opline -> opcode == ZEND_BOOL_XOR || opline -> opcode == ZEND_BW_OR || opline -> opcode == ZEND_BW_AND || opline -> opcode == ZEND_BW_XOR ) && ZEND_OP1_TYPE ( opline ) == IS_CONST && ZEND_OP2_TYPE ( opline ) == IS_CONST		430542	0		&&			
ANR	433464	OrExpression	opline -> opcode == ZEND_ADD || opline -> opcode == ZEND_SUB || opline -> opcode == ZEND_MUL || opline -> opcode == ZEND_DIV || opline -> opcode == ZEND_MOD || opline -> opcode == ZEND_SL || opline -> opcode == ZEND_SR || opline -> opcode == ZEND_CONCAT || opline -> opcode == ZEND_FAST_CONCAT || opline -> opcode == ZEND_IS_EQUAL || opline -> opcode == ZEND_IS_NOT_EQUAL || opline -> opcode == ZEND_IS_SMALLER || opline -> opcode == ZEND_IS_SMALLER_OR_EQUAL || opline -> opcode == ZEND_IS_IDENTICAL || opline -> opcode == ZEND_IS_NOT_IDENTICAL || opline -> opcode == ZEND_BOOL_XOR || opline -> opcode == ZEND_BW_OR || opline -> opcode == ZEND_BW_AND || opline -> opcode == ZEND_BW_XOR		430542	0		||			
ANR	433465	EqualityExpression	opline -> opcode == ZEND_ADD		430542	0		==			
ANR	433466	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433467	Identifier	opline		430542	0					
ANR	433468	Identifier	opcode		430542	1					
ANR	433469	Identifier	ZEND_ADD		430542	1					
ANR	433470	OrExpression	opline -> opcode == ZEND_SUB || opline -> opcode == ZEND_MUL || opline -> opcode == ZEND_DIV || opline -> opcode == ZEND_MOD || opline -> opcode == ZEND_SL || opline -> opcode == ZEND_SR || opline -> opcode == ZEND_CONCAT || opline -> opcode == ZEND_FAST_CONCAT || opline -> opcode == ZEND_IS_EQUAL || opline -> opcode == ZEND_IS_NOT_EQUAL || opline -> opcode == ZEND_IS_SMALLER || opline -> opcode == ZEND_IS_SMALLER_OR_EQUAL || opline -> opcode == ZEND_IS_IDENTICAL || opline -> opcode == ZEND_IS_NOT_IDENTICAL || opline -> opcode == ZEND_BOOL_XOR || opline -> opcode == ZEND_BW_OR || opline -> opcode == ZEND_BW_AND || opline -> opcode == ZEND_BW_XOR		430542	1		||			
ANR	433471	EqualityExpression	opline -> opcode == ZEND_SUB		430542	0		==			
ANR	433472	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433473	Identifier	opline		430542	0					
ANR	433474	Identifier	opcode		430542	1					
ANR	433475	Identifier	ZEND_SUB		430542	1					
ANR	433476	OrExpression	opline -> opcode == ZEND_MUL || opline -> opcode == ZEND_DIV || opline -> opcode == ZEND_MOD || opline -> opcode == ZEND_SL || opline -> opcode == ZEND_SR || opline -> opcode == ZEND_CONCAT || opline -> opcode == ZEND_FAST_CONCAT || opline -> opcode == ZEND_IS_EQUAL || opline -> opcode == ZEND_IS_NOT_EQUAL || opline -> opcode == ZEND_IS_SMALLER || opline -> opcode == ZEND_IS_SMALLER_OR_EQUAL || opline -> opcode == ZEND_IS_IDENTICAL || opline -> opcode == ZEND_IS_NOT_IDENTICAL || opline -> opcode == ZEND_BOOL_XOR || opline -> opcode == ZEND_BW_OR || opline -> opcode == ZEND_BW_AND || opline -> opcode == ZEND_BW_XOR		430542	1		||			
ANR	433477	EqualityExpression	opline -> opcode == ZEND_MUL		430542	0		==			
ANR	433478	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433479	Identifier	opline		430542	0					
ANR	433480	Identifier	opcode		430542	1					
ANR	433481	Identifier	ZEND_MUL		430542	1					
ANR	433482	OrExpression	opline -> opcode == ZEND_DIV || opline -> opcode == ZEND_MOD || opline -> opcode == ZEND_SL || opline -> opcode == ZEND_SR || opline -> opcode == ZEND_CONCAT || opline -> opcode == ZEND_FAST_CONCAT || opline -> opcode == ZEND_IS_EQUAL || opline -> opcode == ZEND_IS_NOT_EQUAL || opline -> opcode == ZEND_IS_SMALLER || opline -> opcode == ZEND_IS_SMALLER_OR_EQUAL || opline -> opcode == ZEND_IS_IDENTICAL || opline -> opcode == ZEND_IS_NOT_IDENTICAL || opline -> opcode == ZEND_BOOL_XOR || opline -> opcode == ZEND_BW_OR || opline -> opcode == ZEND_BW_AND || opline -> opcode == ZEND_BW_XOR		430542	1		||			
ANR	433483	EqualityExpression	opline -> opcode == ZEND_DIV		430542	0		==			
ANR	433484	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433485	Identifier	opline		430542	0					
ANR	433486	Identifier	opcode		430542	1					
ANR	433487	Identifier	ZEND_DIV		430542	1					
ANR	433488	OrExpression	opline -> opcode == ZEND_MOD || opline -> opcode == ZEND_SL || opline -> opcode == ZEND_SR || opline -> opcode == ZEND_CONCAT || opline -> opcode == ZEND_FAST_CONCAT || opline -> opcode == ZEND_IS_EQUAL || opline -> opcode == ZEND_IS_NOT_EQUAL || opline -> opcode == ZEND_IS_SMALLER || opline -> opcode == ZEND_IS_SMALLER_OR_EQUAL || opline -> opcode == ZEND_IS_IDENTICAL || opline -> opcode == ZEND_IS_NOT_IDENTICAL || opline -> opcode == ZEND_BOOL_XOR || opline -> opcode == ZEND_BW_OR || opline -> opcode == ZEND_BW_AND || opline -> opcode == ZEND_BW_XOR		430542	1		||			
ANR	433489	EqualityExpression	opline -> opcode == ZEND_MOD		430542	0		==			
ANR	433490	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433491	Identifier	opline		430542	0					
ANR	433492	Identifier	opcode		430542	1					
ANR	433493	Identifier	ZEND_MOD		430542	1					
ANR	433494	OrExpression	opline -> opcode == ZEND_SL || opline -> opcode == ZEND_SR || opline -> opcode == ZEND_CONCAT || opline -> opcode == ZEND_FAST_CONCAT || opline -> opcode == ZEND_IS_EQUAL || opline -> opcode == ZEND_IS_NOT_EQUAL || opline -> opcode == ZEND_IS_SMALLER || opline -> opcode == ZEND_IS_SMALLER_OR_EQUAL || opline -> opcode == ZEND_IS_IDENTICAL || opline -> opcode == ZEND_IS_NOT_IDENTICAL || opline -> opcode == ZEND_BOOL_XOR || opline -> opcode == ZEND_BW_OR || opline -> opcode == ZEND_BW_AND || opline -> opcode == ZEND_BW_XOR		430542	1		||			
ANR	433495	EqualityExpression	opline -> opcode == ZEND_SL		430542	0		==			
ANR	433496	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433497	Identifier	opline		430542	0					
ANR	433498	Identifier	opcode		430542	1					
ANR	433499	Identifier	ZEND_SL		430542	1					
ANR	433500	OrExpression	opline -> opcode == ZEND_SR || opline -> opcode == ZEND_CONCAT || opline -> opcode == ZEND_FAST_CONCAT || opline -> opcode == ZEND_IS_EQUAL || opline -> opcode == ZEND_IS_NOT_EQUAL || opline -> opcode == ZEND_IS_SMALLER || opline -> opcode == ZEND_IS_SMALLER_OR_EQUAL || opline -> opcode == ZEND_IS_IDENTICAL || opline -> opcode == ZEND_IS_NOT_IDENTICAL || opline -> opcode == ZEND_BOOL_XOR || opline -> opcode == ZEND_BW_OR || opline -> opcode == ZEND_BW_AND || opline -> opcode == ZEND_BW_XOR		430542	1		||			
ANR	433501	EqualityExpression	opline -> opcode == ZEND_SR		430542	0		==			
ANR	433502	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433503	Identifier	opline		430542	0					
ANR	433504	Identifier	opcode		430542	1					
ANR	433505	Identifier	ZEND_SR		430542	1					
ANR	433506	OrExpression	opline -> opcode == ZEND_CONCAT || opline -> opcode == ZEND_FAST_CONCAT || opline -> opcode == ZEND_IS_EQUAL || opline -> opcode == ZEND_IS_NOT_EQUAL || opline -> opcode == ZEND_IS_SMALLER || opline -> opcode == ZEND_IS_SMALLER_OR_EQUAL || opline -> opcode == ZEND_IS_IDENTICAL || opline -> opcode == ZEND_IS_NOT_IDENTICAL || opline -> opcode == ZEND_BOOL_XOR || opline -> opcode == ZEND_BW_OR || opline -> opcode == ZEND_BW_AND || opline -> opcode == ZEND_BW_XOR		430542	1		||			
ANR	433507	EqualityExpression	opline -> opcode == ZEND_CONCAT		430542	0		==			
ANR	433508	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433509	Identifier	opline		430542	0					
ANR	433510	Identifier	opcode		430542	1					
ANR	433511	Identifier	ZEND_CONCAT		430542	1					
ANR	433512	OrExpression	opline -> opcode == ZEND_FAST_CONCAT || opline -> opcode == ZEND_IS_EQUAL || opline -> opcode == ZEND_IS_NOT_EQUAL || opline -> opcode == ZEND_IS_SMALLER || opline -> opcode == ZEND_IS_SMALLER_OR_EQUAL || opline -> opcode == ZEND_IS_IDENTICAL || opline -> opcode == ZEND_IS_NOT_IDENTICAL || opline -> opcode == ZEND_BOOL_XOR || opline -> opcode == ZEND_BW_OR || opline -> opcode == ZEND_BW_AND || opline -> opcode == ZEND_BW_XOR		430542	1		||			
ANR	433513	EqualityExpression	opline -> opcode == ZEND_FAST_CONCAT		430542	0		==			
ANR	433514	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433515	Identifier	opline		430542	0					
ANR	433516	Identifier	opcode		430542	1					
ANR	433517	Identifier	ZEND_FAST_CONCAT		430542	1					
ANR	433518	OrExpression	opline -> opcode == ZEND_IS_EQUAL || opline -> opcode == ZEND_IS_NOT_EQUAL || opline -> opcode == ZEND_IS_SMALLER || opline -> opcode == ZEND_IS_SMALLER_OR_EQUAL || opline -> opcode == ZEND_IS_IDENTICAL || opline -> opcode == ZEND_IS_NOT_IDENTICAL || opline -> opcode == ZEND_BOOL_XOR || opline -> opcode == ZEND_BW_OR || opline -> opcode == ZEND_BW_AND || opline -> opcode == ZEND_BW_XOR		430542	1		||			
ANR	433519	EqualityExpression	opline -> opcode == ZEND_IS_EQUAL		430542	0		==			
ANR	433520	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433521	Identifier	opline		430542	0					
ANR	433522	Identifier	opcode		430542	1					
ANR	433523	Identifier	ZEND_IS_EQUAL		430542	1					
ANR	433524	OrExpression	opline -> opcode == ZEND_IS_NOT_EQUAL || opline -> opcode == ZEND_IS_SMALLER || opline -> opcode == ZEND_IS_SMALLER_OR_EQUAL || opline -> opcode == ZEND_IS_IDENTICAL || opline -> opcode == ZEND_IS_NOT_IDENTICAL || opline -> opcode == ZEND_BOOL_XOR || opline -> opcode == ZEND_BW_OR || opline -> opcode == ZEND_BW_AND || opline -> opcode == ZEND_BW_XOR		430542	1		||			
ANR	433525	EqualityExpression	opline -> opcode == ZEND_IS_NOT_EQUAL		430542	0		==			
ANR	433526	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433527	Identifier	opline		430542	0					
ANR	433528	Identifier	opcode		430542	1					
ANR	433529	Identifier	ZEND_IS_NOT_EQUAL		430542	1					
ANR	433530	OrExpression	opline -> opcode == ZEND_IS_SMALLER || opline -> opcode == ZEND_IS_SMALLER_OR_EQUAL || opline -> opcode == ZEND_IS_IDENTICAL || opline -> opcode == ZEND_IS_NOT_IDENTICAL || opline -> opcode == ZEND_BOOL_XOR || opline -> opcode == ZEND_BW_OR || opline -> opcode == ZEND_BW_AND || opline -> opcode == ZEND_BW_XOR		430542	1		||			
ANR	433531	EqualityExpression	opline -> opcode == ZEND_IS_SMALLER		430542	0		==			
ANR	433532	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433533	Identifier	opline		430542	0					
ANR	433534	Identifier	opcode		430542	1					
ANR	433535	Identifier	ZEND_IS_SMALLER		430542	1					
ANR	433536	OrExpression	opline -> opcode == ZEND_IS_SMALLER_OR_EQUAL || opline -> opcode == ZEND_IS_IDENTICAL || opline -> opcode == ZEND_IS_NOT_IDENTICAL || opline -> opcode == ZEND_BOOL_XOR || opline -> opcode == ZEND_BW_OR || opline -> opcode == ZEND_BW_AND || opline -> opcode == ZEND_BW_XOR		430542	1		||			
ANR	433537	EqualityExpression	opline -> opcode == ZEND_IS_SMALLER_OR_EQUAL		430542	0		==			
ANR	433538	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433539	Identifier	opline		430542	0					
ANR	433540	Identifier	opcode		430542	1					
ANR	433541	Identifier	ZEND_IS_SMALLER_OR_EQUAL		430542	1					
ANR	433542	OrExpression	opline -> opcode == ZEND_IS_IDENTICAL || opline -> opcode == ZEND_IS_NOT_IDENTICAL || opline -> opcode == ZEND_BOOL_XOR || opline -> opcode == ZEND_BW_OR || opline -> opcode == ZEND_BW_AND || opline -> opcode == ZEND_BW_XOR		430542	1		||			
ANR	433543	EqualityExpression	opline -> opcode == ZEND_IS_IDENTICAL		430542	0		==			
ANR	433544	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433545	Identifier	opline		430542	0					
ANR	433546	Identifier	opcode		430542	1					
ANR	433547	Identifier	ZEND_IS_IDENTICAL		430542	1					
ANR	433548	OrExpression	opline -> opcode == ZEND_IS_NOT_IDENTICAL || opline -> opcode == ZEND_BOOL_XOR || opline -> opcode == ZEND_BW_OR || opline -> opcode == ZEND_BW_AND || opline -> opcode == ZEND_BW_XOR		430542	1		||			
ANR	433549	EqualityExpression	opline -> opcode == ZEND_IS_NOT_IDENTICAL		430542	0		==			
ANR	433550	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433551	Identifier	opline		430542	0					
ANR	433552	Identifier	opcode		430542	1					
ANR	433553	Identifier	ZEND_IS_NOT_IDENTICAL		430542	1					
ANR	433554	OrExpression	opline -> opcode == ZEND_BOOL_XOR || opline -> opcode == ZEND_BW_OR || opline -> opcode == ZEND_BW_AND || opline -> opcode == ZEND_BW_XOR		430542	1		||			
ANR	433555	EqualityExpression	opline -> opcode == ZEND_BOOL_XOR		430542	0		==			
ANR	433556	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433557	Identifier	opline		430542	0					
ANR	433558	Identifier	opcode		430542	1					
ANR	433559	Identifier	ZEND_BOOL_XOR		430542	1					
ANR	433560	OrExpression	opline -> opcode == ZEND_BW_OR || opline -> opcode == ZEND_BW_AND || opline -> opcode == ZEND_BW_XOR		430542	1		||			
ANR	433561	EqualityExpression	opline -> opcode == ZEND_BW_OR		430542	0		==			
ANR	433562	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433563	Identifier	opline		430542	0					
ANR	433564	Identifier	opcode		430542	1					
ANR	433565	Identifier	ZEND_BW_OR		430542	1					
ANR	433566	OrExpression	opline -> opcode == ZEND_BW_AND || opline -> opcode == ZEND_BW_XOR		430542	1		||			
ANR	433567	EqualityExpression	opline -> opcode == ZEND_BW_AND		430542	0		==			
ANR	433568	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433569	Identifier	opline		430542	0					
ANR	433570	Identifier	opcode		430542	1					
ANR	433571	Identifier	ZEND_BW_AND		430542	1					
ANR	433572	EqualityExpression	opline -> opcode == ZEND_BW_XOR		430542	1		==			
ANR	433573	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433574	Identifier	opline		430542	0					
ANR	433575	Identifier	opcode		430542	1					
ANR	433576	Identifier	ZEND_BW_XOR		430542	1					
ANR	433577	AndExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST && ZEND_OP2_TYPE ( opline ) == IS_CONST		430542	1		&&			
ANR	433578	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		430542	0		==			
ANR	433579	CallExpression	ZEND_OP1_TYPE ( opline )		430542	0					
ANR	433580	Callee	ZEND_OP1_TYPE		430542	0					
ANR	433581	Identifier	ZEND_OP1_TYPE		430542	0					
ANR	433582	ArgumentList	opline		430542	1					
ANR	433583	Argument	opline		430542	0					
ANR	433584	Identifier	opline		430542	0					
ANR	433585	Identifier	IS_CONST		430542	1					
ANR	433586	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST		430542	1		==			
ANR	433587	CallExpression	ZEND_OP2_TYPE ( opline )		430542	0					
ANR	433588	Callee	ZEND_OP2_TYPE		430542	0					
ANR	433589	Identifier	ZEND_OP2_TYPE		430542	0					
ANR	433590	ArgumentList	opline		430542	1					
ANR	433591	Argument	opline		430542	0					
ANR	433592	Identifier	opline		430542	0					
ANR	433593	Identifier	IS_CONST		430542	1					
ANR	433594	CompoundStatement		389:3:14698:14704	430542	1					
ANR	433595	IdentifierDeclStatement	binary_op_type binary_op = get_binary_op ( opline -> opcode ) ;	996:3:32929:32985	430542	0	True				
ANR	433596	IdentifierDecl	binary_op = get_binary_op ( opline -> opcode )		430542	0					
ANR	433597	IdentifierDeclType	binary_op_type		430542	0					
ANR	433598	Identifier	binary_op		430542	1					
ANR	433599	AssignmentExpression	binary_op = get_binary_op ( opline -> opcode )		430542	2		=			
ANR	433600	Identifier	binary_op		430542	0					
ANR	433601	CallExpression	get_binary_op ( opline -> opcode )		430542	1					
ANR	433602	Callee	get_binary_op		430542	0					
ANR	433603	Identifier	get_binary_op		430542	0					
ANR	433604	ArgumentList	opline -> opcode		430542	1					
ANR	433605	Argument	opline -> opcode		430542	0					
ANR	433606	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433607	Identifier	opline		430542	0					
ANR	433608	Identifier	opcode		430542	1					
ANR	433609	IdentifierDeclStatement	zval result ;	997:3:32990:33001	430542	1	True				
ANR	433610	IdentifierDecl	result		430542	0					
ANR	433611	IdentifierDeclType	zval		430542	0					
ANR	433612	Identifier	result		430542	1					
ANR	433613	IdentifierDeclStatement	int er ;	998:3:33006:33012	430542	2	True				
ANR	433614	IdentifierDecl	er		430542	0					
ANR	433615	IdentifierDeclType	int		430542	0					
ANR	433616	Identifier	er		430542	1					
ANR	433617	IfStatement	if ( ( opline -> opcode == ZEND_DIV || opline -> opcode == ZEND_MOD ) && zval_get_long ( & ZEND_OP2_LITERAL ( opline ) ) == 0 )		430542	3					
ANR	433618	Condition	( opline -> opcode == ZEND_DIV || opline -> opcode == ZEND_MOD ) && zval_get_long ( & ZEND_OP2_LITERAL ( opline ) ) == 0	1000:16:33031:33153	430542	0	True				
ANR	433619	AndExpression	( opline -> opcode == ZEND_DIV || opline -> opcode == ZEND_MOD ) && zval_get_long ( & ZEND_OP2_LITERAL ( opline ) ) == 0		430542	0		&&			
ANR	433620	OrExpression	opline -> opcode == ZEND_DIV || opline -> opcode == ZEND_MOD		430542	0		||			
ANR	433621	EqualityExpression	opline -> opcode == ZEND_DIV		430542	0		==			
ANR	433622	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433623	Identifier	opline		430542	0					
ANR	433624	Identifier	opcode		430542	1					
ANR	433625	Identifier	ZEND_DIV		430542	1					
ANR	433626	EqualityExpression	opline -> opcode == ZEND_MOD		430542	1		==			
ANR	433627	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433628	Identifier	opline		430542	0					
ANR	433629	Identifier	opcode		430542	1					
ANR	433630	Identifier	ZEND_MOD		430542	1					
ANR	433631	EqualityExpression	zval_get_long ( & ZEND_OP2_LITERAL ( opline ) ) == 0		430542	1		==			
ANR	433632	CallExpression	zval_get_long ( & ZEND_OP2_LITERAL ( opline ) )		430542	0					
ANR	433633	Callee	zval_get_long		430542	0					
ANR	433634	Identifier	zval_get_long		430542	0					
ANR	433635	ArgumentList	& ZEND_OP2_LITERAL ( opline )		430542	1					
ANR	433636	Argument	& ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	433637	UnaryOperationExpression	& ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	433638	UnaryOperator	&		430542	0					
ANR	433639	CallExpression	ZEND_OP2_LITERAL ( opline )		430542	1					
ANR	433640	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	433641	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	433642	ArgumentList	opline		430542	1					
ANR	433643	Argument	opline		430542	0					
ANR	433644	Identifier	opline		430542	0					
ANR	433645	PrimaryExpression	0		430542	1					
ANR	433646	CompoundStatement		392:63:14848:14848	430542	1					
ANR	433647	IfStatement	if ( RESULT_USED ( opline ) )		430542	0					
ANR	433648	Condition	RESULT_USED ( opline )	1002:8:33166:33184	430542	0	True				
ANR	433649	CallExpression	RESULT_USED ( opline )		430542	0					
ANR	433650	Callee	RESULT_USED		430542	0					
ANR	433651	Identifier	RESULT_USED		430542	0					
ANR	433652	ArgumentList	opline		430542	1					
ANR	433653	Argument	opline		430542	0					
ANR	433654	Identifier	opline		430542	0					
ANR	433655	CompoundStatement		393:29:14879:14879	430542	1					
ANR	433656	ExpressionStatement	SET_VAR_SOURCE ( opline )	1003:5:33194:33216	430542	0	True				
ANR	433657	CallExpression	SET_VAR_SOURCE ( opline )		430542	0					
ANR	433658	Callee	SET_VAR_SOURCE		430542	0					
ANR	433659	Identifier	SET_VAR_SOURCE		430542	0					
ANR	433660	ArgumentList	opline		430542	1					
ANR	433661	Argument	opline		430542	0					
ANR	433662	Identifier	opline		430542	0					
ANR	433663	ExpressionStatement	opline ++	1005:16:33240:33248	430542	1	True				
ANR	433664	PostIncDecOperationExpression	opline ++		430542	0					
ANR	433665	Identifier	opline		430542	0					
ANR	433666	IncDec	++		430542	1					
ANR	433667	ContinueStatement	continue ;	1006:4:33254:33262	430542	2	True				
ANR	433668	ElseStatement	else		430542	0					
ANR	433669	IfStatement	if ( ( opline -> opcode == ZEND_SL || opline -> opcode == ZEND_SR ) && zval_get_long ( & ZEND_OP2_LITERAL ( opline ) ) < 0 )		430542	0					
ANR	433670	Condition	( opline -> opcode == ZEND_SL || opline -> opcode == ZEND_SR ) && zval_get_long ( & ZEND_OP2_LITERAL ( opline ) ) < 0	1007:23:33287:33406	430542	0	True				
ANR	433671	AndExpression	( opline -> opcode == ZEND_SL || opline -> opcode == ZEND_SR ) && zval_get_long ( & ZEND_OP2_LITERAL ( opline ) ) < 0		430542	0		&&			
ANR	433672	OrExpression	opline -> opcode == ZEND_SL || opline -> opcode == ZEND_SR		430542	0		||			
ANR	433673	EqualityExpression	opline -> opcode == ZEND_SL		430542	0		==			
ANR	433674	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433675	Identifier	opline		430542	0					
ANR	433676	Identifier	opcode		430542	1					
ANR	433677	Identifier	ZEND_SL		430542	1					
ANR	433678	EqualityExpression	opline -> opcode == ZEND_SR		430542	1		==			
ANR	433679	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433680	Identifier	opline		430542	0					
ANR	433681	Identifier	opcode		430542	1					
ANR	433682	Identifier	ZEND_SR		430542	1					
ANR	433683	RelationalExpression	zval_get_long ( & ZEND_OP2_LITERAL ( opline ) ) < 0		430542	1		<			
ANR	433684	CallExpression	zval_get_long ( & ZEND_OP2_LITERAL ( opline ) )		430542	0					
ANR	433685	Callee	zval_get_long		430542	0					
ANR	433686	Identifier	zval_get_long		430542	0					
ANR	433687	ArgumentList	& ZEND_OP2_LITERAL ( opline )		430542	1					
ANR	433688	Argument	& ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	433689	UnaryOperationExpression	& ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	433690	UnaryOperator	&		430542	0					
ANR	433691	CallExpression	ZEND_OP2_LITERAL ( opline )		430542	1					
ANR	433692	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	433693	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	433694	ArgumentList	opline		430542	1					
ANR	433695	Argument	opline		430542	0					
ANR	433696	Identifier	opline		430542	0					
ANR	433697	PrimaryExpression	0		430542	1					
ANR	433698	CompoundStatement		399:62:15101:15101	430542	1					
ANR	433699	IfStatement	if ( RESULT_USED ( opline ) )		430542	0					
ANR	433700	Condition	RESULT_USED ( opline )	1009:8:33419:33437	430542	0	True				
ANR	433701	CallExpression	RESULT_USED ( opline )		430542	0					
ANR	433702	Callee	RESULT_USED		430542	0					
ANR	433703	Identifier	RESULT_USED		430542	0					
ANR	433704	ArgumentList	opline		430542	1					
ANR	433705	Argument	opline		430542	0					
ANR	433706	Identifier	opline		430542	0					
ANR	433707	CompoundStatement		400:29:15132:15132	430542	1					
ANR	433708	ExpressionStatement	SET_VAR_SOURCE ( opline )	1010:5:33447:33469	430542	0	True				
ANR	433709	CallExpression	SET_VAR_SOURCE ( opline )		430542	0					
ANR	433710	Callee	SET_VAR_SOURCE		430542	0					
ANR	433711	Identifier	SET_VAR_SOURCE		430542	0					
ANR	433712	ArgumentList	opline		430542	1					
ANR	433713	Argument	opline		430542	0					
ANR	433714	Identifier	opline		430542	0					
ANR	433715	ExpressionStatement	opline ++	1012:16:33493:33501	430542	1	True				
ANR	433716	PostIncDecOperationExpression	opline ++		430542	0					
ANR	433717	Identifier	opline		430542	0					
ANR	433718	IncDec	++		430542	1					
ANR	433719	ContinueStatement	continue ;	1013:4:33507:33515	430542	2	True				
ANR	433720	ExpressionStatement	er = EG ( error_reporting )	1015:3:33525:33549	430542	4	True				
ANR	433721	AssignmentExpression	er = EG ( error_reporting )		430542	0		=			
ANR	433722	Identifier	er		430542	0					
ANR	433723	CallExpression	EG ( error_reporting )		430542	1					
ANR	433724	Callee	EG		430542	0					
ANR	433725	Identifier	EG		430542	0					
ANR	433726	ArgumentList	error_reporting		430542	1					
ANR	433727	Argument	error_reporting		430542	0					
ANR	433728	Identifier	error_reporting		430542	0					
ANR	433729	ExpressionStatement	EG ( error_reporting ) = 0	1016:3:33554:33577	430542	5	True				
ANR	433730	AssignmentExpression	EG ( error_reporting ) = 0		430542	0		=			
ANR	433731	CallExpression	EG ( error_reporting )		430542	0					
ANR	433732	Callee	EG		430542	0					
ANR	433733	Identifier	EG		430542	0					
ANR	433734	ArgumentList	error_reporting		430542	1					
ANR	433735	Argument	error_reporting		430542	0					
ANR	433736	Identifier	error_reporting		430542	0					
ANR	433737	PrimaryExpression	0		430542	1					
ANR	433738	IfStatement	"if ( binary_op ( & result , & ZEND_OP1_LITERAL ( opline ) , & ZEND_OP2_LITERAL ( opline ) ) == SUCCESS )"		430542	6					
ANR	433739	Condition	"binary_op ( & result , & ZEND_OP1_LITERAL ( opline ) , & ZEND_OP2_LITERAL ( opline ) ) == SUCCESS"	1017:7:33586:33668	430542	0	True				
ANR	433740	EqualityExpression	"binary_op ( & result , & ZEND_OP1_LITERAL ( opline ) , & ZEND_OP2_LITERAL ( opline ) ) == SUCCESS"		430542	0		==			
ANR	433741	CallExpression	"binary_op ( & result , & ZEND_OP1_LITERAL ( opline ) , & ZEND_OP2_LITERAL ( opline ) )"		430542	0					
ANR	433742	Callee	binary_op		430542	0					
ANR	433743	Identifier	binary_op		430542	0					
ANR	433744	ArgumentList	& result		430542	1					
ANR	433745	Argument	& result		430542	0					
ANR	433746	UnaryOperationExpression	& result		430542	0					
ANR	433747	UnaryOperator	&		430542	0					
ANR	433748	Identifier	result		430542	1					
ANR	433749	Argument	& ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	433750	UnaryOperationExpression	& ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	433751	UnaryOperator	&		430542	0					
ANR	433752	CallExpression	ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	433753	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	433754	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	433755	ArgumentList	opline		430542	1					
ANR	433756	Argument	opline		430542	0					
ANR	433757	Identifier	opline		430542	0					
ANR	433758	Argument	& ZEND_OP2_LITERAL ( opline )		430542	2					
ANR	433759	UnaryOperationExpression	& ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	433760	UnaryOperator	&		430542	0					
ANR	433761	CallExpression	ZEND_OP2_LITERAL ( opline )		430542	1					
ANR	433762	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	433763	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	433764	ArgumentList	opline		430542	1					
ANR	433765	Argument	opline		430542	0					
ANR	433766	Identifier	opline		430542	0					
ANR	433767	Identifier	SUCCESS		430542	1					
ANR	433768	CompoundStatement		408:92:15363:15363	430542	1					
ANR	433769	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )	1018:4:33677:33716	430542	0	True				
ANR	433770	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )		430542	0					
ANR	433771	Callee	literal_dtor		430542	0					
ANR	433772	Identifier	literal_dtor		430542	0					
ANR	433773	ArgumentList	& ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	433774	Argument	& ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	433775	UnaryOperationExpression	& ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	433776	UnaryOperator	&		430542	0					
ANR	433777	CallExpression	ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	433778	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	433779	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	433780	ArgumentList	opline		430542	1					
ANR	433781	Argument	opline		430542	0					
ANR	433782	Identifier	opline		430542	0					
ANR	433783	ExpressionStatement	literal_dtor ( & ZEND_OP2_LITERAL ( opline ) )	1019:4:33722:33761	430542	1	True				
ANR	433784	CallExpression	literal_dtor ( & ZEND_OP2_LITERAL ( opline ) )		430542	0					
ANR	433785	Callee	literal_dtor		430542	0					
ANR	433786	Identifier	literal_dtor		430542	0					
ANR	433787	ArgumentList	& ZEND_OP2_LITERAL ( opline )		430542	1					
ANR	433788	Argument	& ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	433789	UnaryOperationExpression	& ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	433790	UnaryOperator	&		430542	0					
ANR	433791	CallExpression	ZEND_OP2_LITERAL ( opline )		430542	1					
ANR	433792	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	433793	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	433794	ArgumentList	opline		430542	1					
ANR	433795	Argument	opline		430542	0					
ANR	433796	Identifier	opline		430542	0					
ANR	433797	ExpressionStatement	opline -> opcode = ZEND_QM_ASSIGN	1020:4:33767:33798	430542	2	True				
ANR	433798	AssignmentExpression	opline -> opcode = ZEND_QM_ASSIGN		430542	0		=			
ANR	433799	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433800	Identifier	opline		430542	0					
ANR	433801	Identifier	opcode		430542	1					
ANR	433802	Identifier	ZEND_QM_ASSIGN		430542	1					
ANR	433803	ExpressionStatement	SET_UNUSED ( opline -> op2 )	1021:4:33804:33827	430542	3	True				
ANR	433804	CallExpression	SET_UNUSED ( opline -> op2 )		430542	0					
ANR	433805	Callee	SET_UNUSED		430542	0					
ANR	433806	Identifier	SET_UNUSED		430542	0					
ANR	433807	ArgumentList	opline -> op2		430542	1					
ANR	433808	Argument	opline -> op2		430542	0					
ANR	433809	PtrMemberAccess	opline -> op2		430542	0					
ANR	433810	Identifier	opline		430542	0					
ANR	433811	Identifier	op2		430542	1					
ANR	433812	ExpressionStatement	"zend_optimizer_update_op1_const ( op_array , opline , & result )"	1022:4:33833:33891	430542	4	True				
ANR	433813	CallExpression	"zend_optimizer_update_op1_const ( op_array , opline , & result )"		430542	0					
ANR	433814	Callee	zend_optimizer_update_op1_const		430542	0					
ANR	433815	Identifier	zend_optimizer_update_op1_const		430542	0					
ANR	433816	ArgumentList	op_array		430542	1					
ANR	433817	Argument	op_array		430542	0					
ANR	433818	Identifier	op_array		430542	0					
ANR	433819	Argument	opline		430542	1					
ANR	433820	Identifier	opline		430542	0					
ANR	433821	Argument	& result		430542	2					
ANR	433822	UnaryOperationExpression	& result		430542	0					
ANR	433823	UnaryOperator	&		430542	0					
ANR	433824	Identifier	result		430542	1					
ANR	433825	ExpressionStatement	EG ( error_reporting ) = er	1024:3:33901:33925	430542	7	True				
ANR	433826	AssignmentExpression	EG ( error_reporting ) = er		430542	0		=			
ANR	433827	CallExpression	EG ( error_reporting )		430542	0					
ANR	433828	Callee	EG		430542	0					
ANR	433829	Identifier	EG		430542	0					
ANR	433830	ArgumentList	error_reporting		430542	1					
ANR	433831	Argument	error_reporting		430542	0					
ANR	433832	Identifier	error_reporting		430542	0					
ANR	433833	Identifier	er		430542	1					
ANR	433834	ElseStatement	else		430542	0					
ANR	433835	IfStatement	if ( ( opline -> opcode == ZEND_BOOL || opline -> opcode == ZEND_BOOL_NOT || opline -> opcode == ZEND_BW_NOT ) && ZEND_OP1_TYPE ( opline ) == IS_CONST )		430542	0					
ANR	433836	Condition	( opline -> opcode == ZEND_BOOL || opline -> opcode == ZEND_BOOL_NOT || opline -> opcode == ZEND_BW_NOT ) && ZEND_OP1_TYPE ( opline ) == IS_CONST	1025:13:33940:34088	430542	0	True				
ANR	433837	AndExpression	( opline -> opcode == ZEND_BOOL || opline -> opcode == ZEND_BOOL_NOT || opline -> opcode == ZEND_BW_NOT ) && ZEND_OP1_TYPE ( opline ) == IS_CONST		430542	0		&&			
ANR	433838	OrExpression	opline -> opcode == ZEND_BOOL || opline -> opcode == ZEND_BOOL_NOT || opline -> opcode == ZEND_BW_NOT		430542	0		||			
ANR	433839	EqualityExpression	opline -> opcode == ZEND_BOOL		430542	0		==			
ANR	433840	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433841	Identifier	opline		430542	0					
ANR	433842	Identifier	opcode		430542	1					
ANR	433843	Identifier	ZEND_BOOL		430542	1					
ANR	433844	OrExpression	opline -> opcode == ZEND_BOOL_NOT || opline -> opcode == ZEND_BW_NOT		430542	1		||			
ANR	433845	EqualityExpression	opline -> opcode == ZEND_BOOL_NOT		430542	0		==			
ANR	433846	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433847	Identifier	opline		430542	0					
ANR	433848	Identifier	opcode		430542	1					
ANR	433849	Identifier	ZEND_BOOL_NOT		430542	1					
ANR	433850	EqualityExpression	opline -> opcode == ZEND_BW_NOT		430542	1		==			
ANR	433851	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433852	Identifier	opline		430542	0					
ANR	433853	Identifier	opcode		430542	1					
ANR	433854	Identifier	ZEND_BW_NOT		430542	1					
ANR	433855	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		430542	1		==			
ANR	433856	CallExpression	ZEND_OP1_TYPE ( opline )		430542	0					
ANR	433857	Callee	ZEND_OP1_TYPE		430542	0					
ANR	433858	Identifier	ZEND_OP1_TYPE		430542	0					
ANR	433859	ArgumentList	opline		430542	1					
ANR	433860	Argument	opline		430542	0					
ANR	433861	Identifier	opline		430542	0					
ANR	433862	Identifier	IS_CONST		430542	1					
ANR	433863	CompoundStatement		421:3:15883:15894	430542	1					
ANR	433864	IdentifierDeclStatement	unary_op_type unary_op = get_unary_op ( opline -> opcode ) ;	1029:3:34133:34186	430542	0	True				
ANR	433865	IdentifierDecl	unary_op = get_unary_op ( opline -> opcode )		430542	0					
ANR	433866	IdentifierDeclType	unary_op_type		430542	0					
ANR	433867	Identifier	unary_op		430542	1					
ANR	433868	AssignmentExpression	unary_op = get_unary_op ( opline -> opcode )		430542	2		=			
ANR	433869	Identifier	unary_op		430542	0					
ANR	433870	CallExpression	get_unary_op ( opline -> opcode )		430542	1					
ANR	433871	Callee	get_unary_op		430542	0					
ANR	433872	Identifier	get_unary_op		430542	0					
ANR	433873	ArgumentList	opline -> opcode		430542	1					
ANR	433874	Argument	opline -> opcode		430542	0					
ANR	433875	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433876	Identifier	opline		430542	0					
ANR	433877	Identifier	opcode		430542	1					
ANR	433878	IdentifierDeclStatement	zval result ;	1030:3:34191:34202	430542	1	True				
ANR	433879	IdentifierDecl	result		430542	0					
ANR	433880	IdentifierDeclType	zval		430542	0					
ANR	433881	Identifier	result		430542	1					
ANR	433882	IfStatement	if ( unary_op )		430542	2					
ANR	433883	Condition	unary_op	1032:7:34212:34219	430542	0	True				
ANR	433884	Identifier	unary_op		430542	0					
ANR	433885	CompoundStatement		423:17:15914:15914	430542	1					
ANR	433886	ExpressionStatement	"unary_op ( & result , & ZEND_OP1_LITERAL ( opline ) )"	1033:4:34228:34272	430542	0	True				
ANR	433887	CallExpression	"unary_op ( & result , & ZEND_OP1_LITERAL ( opline ) )"		430542	0					
ANR	433888	Callee	unary_op		430542	0					
ANR	433889	Identifier	unary_op		430542	0					
ANR	433890	ArgumentList	& result		430542	1					
ANR	433891	Argument	& result		430542	0					
ANR	433892	UnaryOperationExpression	& result		430542	0					
ANR	433893	UnaryOperator	&		430542	0					
ANR	433894	Identifier	result		430542	1					
ANR	433895	Argument	& ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	433896	UnaryOperationExpression	& ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	433897	UnaryOperator	&		430542	0					
ANR	433898	CallExpression	ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	433899	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	433900	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	433901	ArgumentList	opline		430542	1					
ANR	433902	Argument	opline		430542	0					
ANR	433903	Identifier	opline		430542	0					
ANR	433904	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )	1034:4:34278:34317	430542	1	True				
ANR	433905	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )		430542	0					
ANR	433906	Callee	literal_dtor		430542	0					
ANR	433907	Identifier	literal_dtor		430542	0					
ANR	433908	ArgumentList	& ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	433909	Argument	& ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	433910	UnaryOperationExpression	& ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	433911	UnaryOperator	&		430542	0					
ANR	433912	CallExpression	ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	433913	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	433914	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	433915	ArgumentList	opline		430542	1					
ANR	433916	Argument	opline		430542	0					
ANR	433917	Identifier	opline		430542	0					
ANR	433918	ElseStatement	else		430542	0					
ANR	433919	CompoundStatement		426:10:16021:16021	430542	0					
ANR	433920	ExpressionStatement	result = ZEND_OP1_LITERAL ( opline )	1037:4:34350:34383	430542	0	True				
ANR	433921	AssignmentExpression	result = ZEND_OP1_LITERAL ( opline )		430542	0		=			
ANR	433922	Identifier	result		430542	0					
ANR	433923	CallExpression	ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	433924	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	433925	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	433926	ArgumentList	opline		430542	1					
ANR	433927	Argument	opline		430542	0					
ANR	433928	Identifier	opline		430542	0					
ANR	433929	ExpressionStatement	convert_to_boolean ( & result )	1038:4:34389:34416	430542	1	True				
ANR	433930	CallExpression	convert_to_boolean ( & result )		430542	0					
ANR	433931	Callee	convert_to_boolean		430542	0					
ANR	433932	Identifier	convert_to_boolean		430542	0					
ANR	433933	ArgumentList	& result		430542	1					
ANR	433934	Argument	& result		430542	0					
ANR	433935	UnaryOperationExpression	& result		430542	0					
ANR	433936	UnaryOperator	&		430542	0					
ANR	433937	Identifier	result		430542	1					
ANR	433938	ExpressionStatement	ZVAL_NULL ( & ZEND_OP1_LITERAL ( opline ) )	1039:4:34422:34458	430542	2	True				
ANR	433939	CallExpression	ZVAL_NULL ( & ZEND_OP1_LITERAL ( opline ) )		430542	0					
ANR	433940	Callee	ZVAL_NULL		430542	0					
ANR	433941	Identifier	ZVAL_NULL		430542	0					
ANR	433942	ArgumentList	& ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	433943	Argument	& ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	433944	UnaryOperationExpression	& ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	433945	UnaryOperator	&		430542	0					
ANR	433946	CallExpression	ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	433947	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	433948	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	433949	ArgumentList	opline		430542	1					
ANR	433950	Argument	opline		430542	0					
ANR	433951	Identifier	opline		430542	0					
ANR	433952	ExpressionStatement	opline -> opcode = ZEND_QM_ASSIGN	1041:3:34468:34499	430542	3	True				
ANR	433953	AssignmentExpression	opline -> opcode = ZEND_QM_ASSIGN		430542	0		=			
ANR	433954	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433955	Identifier	opline		430542	0					
ANR	433956	Identifier	opcode		430542	1					
ANR	433957	Identifier	ZEND_QM_ASSIGN		430542	1					
ANR	433958	ExpressionStatement	"zend_optimizer_update_op1_const ( op_array , opline , & result )"	1042:3:34504:34562	430542	4	True				
ANR	433959	CallExpression	"zend_optimizer_update_op1_const ( op_array , opline , & result )"		430542	0					
ANR	433960	Callee	zend_optimizer_update_op1_const		430542	0					
ANR	433961	Identifier	zend_optimizer_update_op1_const		430542	0					
ANR	433962	ArgumentList	op_array		430542	1					
ANR	433963	Argument	op_array		430542	0					
ANR	433964	Identifier	op_array		430542	0					
ANR	433965	Argument	opline		430542	1					
ANR	433966	Identifier	opline		430542	0					
ANR	433967	Argument	& result		430542	2					
ANR	433968	UnaryOperationExpression	& result		430542	0					
ANR	433969	UnaryOperator	&		430542	0					
ANR	433970	Identifier	result		430542	1					
ANR	433971	ElseStatement	else		430542	0					
ANR	433972	IfStatement	if ( ( opline -> opcode == ZEND_RETURN || opline -> opcode == ZEND_EXIT ) && ( ZEND_OP1_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) ) && VAR_SOURCE ( opline -> op1 ) && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_QM_ASSIGN )		430542	0					
ANR	433973	Condition	( opline -> opcode == ZEND_RETURN || opline -> opcode == ZEND_EXIT ) && ( ZEND_OP1_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) ) && VAR_SOURCE ( opline -> op1 ) && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_QM_ASSIGN	1043:13:34577:34788	430542	0	True				
ANR	433974	AndExpression	( opline -> opcode == ZEND_RETURN || opline -> opcode == ZEND_EXIT ) && ( ZEND_OP1_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) ) && VAR_SOURCE ( opline -> op1 ) && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_QM_ASSIGN		430542	0		&&			
ANR	433975	OrExpression	opline -> opcode == ZEND_RETURN || opline -> opcode == ZEND_EXIT		430542	0		||			
ANR	433976	EqualityExpression	opline -> opcode == ZEND_RETURN		430542	0		==			
ANR	433977	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433978	Identifier	opline		430542	0					
ANR	433979	Identifier	opcode		430542	1					
ANR	433980	Identifier	ZEND_RETURN		430542	1					
ANR	433981	EqualityExpression	opline -> opcode == ZEND_EXIT		430542	1		==			
ANR	433982	PtrMemberAccess	opline -> opcode		430542	0					
ANR	433983	Identifier	opline		430542	0					
ANR	433984	Identifier	opcode		430542	1					
ANR	433985	Identifier	ZEND_EXIT		430542	1					
ANR	433986	AndExpression	( ZEND_OP1_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) ) && VAR_SOURCE ( opline -> op1 ) && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_QM_ASSIGN		430542	1		&&			
ANR	433987	BitAndExpression	ZEND_OP1_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR )		430542	0		&			
ANR	433988	CallExpression	ZEND_OP1_TYPE ( opline )		430542	0					
ANR	433989	Callee	ZEND_OP1_TYPE		430542	0					
ANR	433990	Identifier	ZEND_OP1_TYPE		430542	0					
ANR	433991	ArgumentList	opline		430542	1					
ANR	433992	Argument	opline		430542	0					
ANR	433993	Identifier	opline		430542	0					
ANR	433994	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		430542	1		|			
ANR	433995	Identifier	IS_TMP_VAR		430542	0					
ANR	433996	Identifier	IS_VAR		430542	1					
ANR	433997	AndExpression	VAR_SOURCE ( opline -> op1 ) && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_QM_ASSIGN		430542	1		&&			
ANR	433998	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	433999	Callee	VAR_SOURCE		430542	0					
ANR	434000	Identifier	VAR_SOURCE		430542	0					
ANR	434001	ArgumentList	opline -> op1		430542	1					
ANR	434002	Argument	opline -> op1		430542	0					
ANR	434003	PtrMemberAccess	opline -> op1		430542	0					
ANR	434004	Identifier	opline		430542	0					
ANR	434005	Identifier	op1		430542	1					
ANR	434006	EqualityExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_QM_ASSIGN		430542	1		==			
ANR	434007	PtrMemberAccess	VAR_SOURCE ( opline -> op1 ) -> opcode		430542	0					
ANR	434008	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	434009	Callee	VAR_SOURCE		430542	0					
ANR	434010	Identifier	VAR_SOURCE		430542	0					
ANR	434011	ArgumentList	opline -> op1		430542	1					
ANR	434012	Argument	opline -> op1		430542	0					
ANR	434013	PtrMemberAccess	opline -> op1		430542	0					
ANR	434014	Identifier	opline		430542	0					
ANR	434015	Identifier	op1		430542	1					
ANR	434016	Identifier	opcode		430542	1					
ANR	434017	Identifier	ZEND_QM_ASSIGN		430542	1					
ANR	434018	CompoundStatement		439:3:16538:16576	430542	1					
ANR	434019	IdentifierDeclStatement	zend_op * src = VAR_SOURCE ( opline -> op1 ) ;	1048:3:34846:34884	430542	0	True				
ANR	434020	IdentifierDecl	* src = VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	434021	IdentifierDeclType	zend_op *		430542	0					
ANR	434022	Identifier	src		430542	1					
ANR	434023	AssignmentExpression	* src = VAR_SOURCE ( opline -> op1 )		430542	2		=			
ANR	434024	Identifier	src		430542	0					
ANR	434025	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	1					
ANR	434026	Callee	VAR_SOURCE		430542	0					
ANR	434027	Identifier	VAR_SOURCE		430542	0					
ANR	434028	ArgumentList	opline -> op1		430542	1					
ANR	434029	Argument	opline -> op1		430542	0					
ANR	434030	PtrMemberAccess	opline -> op1		430542	0					
ANR	434031	Identifier	opline		430542	0					
ANR	434032	Identifier	op1		430542	1					
ANR	434033	ExpressionStatement	VAR_UNSET ( opline -> op1 )	1049:3:34889:34911	430542	1	True				
ANR	434034	CallExpression	VAR_UNSET ( opline -> op1 )		430542	0					
ANR	434035	Callee	VAR_UNSET		430542	0					
ANR	434036	Identifier	VAR_UNSET		430542	0					
ANR	434037	ArgumentList	opline -> op1		430542	1					
ANR	434038	Argument	opline -> op1		430542	0					
ANR	434039	PtrMemberAccess	opline -> op1		430542	0					
ANR	434040	Identifier	opline		430542	0					
ANR	434041	Identifier	op1		430542	1					
ANR	434042	ExpressionStatement	"COPY_NODE ( opline -> op1 , src -> op1 )"	1050:3:34916:34948	430542	2	True				
ANR	434043	CallExpression	"COPY_NODE ( opline -> op1 , src -> op1 )"		430542	0					
ANR	434044	Callee	COPY_NODE		430542	0					
ANR	434045	Identifier	COPY_NODE		430542	0					
ANR	434046	ArgumentList	opline -> op1		430542	1					
ANR	434047	Argument	opline -> op1		430542	0					
ANR	434048	PtrMemberAccess	opline -> op1		430542	0					
ANR	434049	Identifier	opline		430542	0					
ANR	434050	Identifier	op1		430542	1					
ANR	434051	Argument	src -> op1		430542	1					
ANR	434052	PtrMemberAccess	src -> op1		430542	0					
ANR	434053	Identifier	src		430542	0					
ANR	434054	Identifier	op1		430542	1					
ANR	434055	ExpressionStatement	MAKE_NOP ( src )	1051:3:34953:34966	430542	3	True				
ANR	434056	CallExpression	MAKE_NOP ( src )		430542	0					
ANR	434057	Callee	MAKE_NOP		430542	0					
ANR	434058	Identifier	MAKE_NOP		430542	0					
ANR	434059	ArgumentList	src		430542	1					
ANR	434060	Argument	src		430542	0					
ANR	434061	Identifier	src		430542	0					
ANR	434062	ElseStatement	else		430542	0					
ANR	434063	IfStatement	if ( opline -> opcode == ZEND_CONCAT || opline -> opcode == ZEND_FAST_CONCAT )		430542	0					
ANR	434064	Condition	opline -> opcode == ZEND_CONCAT || opline -> opcode == ZEND_FAST_CONCAT	1052:13:34981:35047	430542	0	True				
ANR	434065	OrExpression	opline -> opcode == ZEND_CONCAT || opline -> opcode == ZEND_FAST_CONCAT		430542	0		||			
ANR	434066	EqualityExpression	opline -> opcode == ZEND_CONCAT		430542	0		==			
ANR	434067	PtrMemberAccess	opline -> opcode		430542	0					
ANR	434068	Identifier	opline		430542	0					
ANR	434069	Identifier	opcode		430542	1					
ANR	434070	Identifier	ZEND_CONCAT		430542	1					
ANR	434071	EqualityExpression	opline -> opcode == ZEND_FAST_CONCAT		430542	1		==			
ANR	434072	PtrMemberAccess	opline -> opcode		430542	0					
ANR	434073	Identifier	opline		430542	0					
ANR	434074	Identifier	opcode		430542	1					
ANR	434075	Identifier	ZEND_FAST_CONCAT		430542	1					
ANR	434076	CompoundStatement		443:82:16742:16742	430542	1					
ANR	434077	IfStatement	if ( ( ZEND_OP1_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) ) && VAR_SOURCE ( opline -> op1 ) && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_CAST && VAR_SOURCE ( opline -> op1 ) -> extended_value == IS_STRING )		430542	0					
ANR	434078	Condition	( ZEND_OP1_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) ) && VAR_SOURCE ( opline -> op1 ) && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_CAST && VAR_SOURCE ( opline -> op1 ) -> extended_value == IS_STRING	1053:7:35059:35246	430542	0	True				
ANR	434079	AndExpression	( ZEND_OP1_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) ) && VAR_SOURCE ( opline -> op1 ) && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_CAST && VAR_SOURCE ( opline -> op1 ) -> extended_value == IS_STRING		430542	0		&&			
ANR	434080	BitAndExpression	ZEND_OP1_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR )		430542	0		&			
ANR	434081	CallExpression	ZEND_OP1_TYPE ( opline )		430542	0					
ANR	434082	Callee	ZEND_OP1_TYPE		430542	0					
ANR	434083	Identifier	ZEND_OP1_TYPE		430542	0					
ANR	434084	ArgumentList	opline		430542	1					
ANR	434085	Argument	opline		430542	0					
ANR	434086	Identifier	opline		430542	0					
ANR	434087	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		430542	1		|			
ANR	434088	Identifier	IS_TMP_VAR		430542	0					
ANR	434089	Identifier	IS_VAR		430542	1					
ANR	434090	AndExpression	VAR_SOURCE ( opline -> op1 ) && VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_CAST && VAR_SOURCE ( opline -> op1 ) -> extended_value == IS_STRING		430542	1		&&			
ANR	434091	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	434092	Callee	VAR_SOURCE		430542	0					
ANR	434093	Identifier	VAR_SOURCE		430542	0					
ANR	434094	ArgumentList	opline -> op1		430542	1					
ANR	434095	Argument	opline -> op1		430542	0					
ANR	434096	PtrMemberAccess	opline -> op1		430542	0					
ANR	434097	Identifier	opline		430542	0					
ANR	434098	Identifier	op1		430542	1					
ANR	434099	AndExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_CAST && VAR_SOURCE ( opline -> op1 ) -> extended_value == IS_STRING		430542	1		&&			
ANR	434100	EqualityExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_CAST		430542	0		==			
ANR	434101	PtrMemberAccess	VAR_SOURCE ( opline -> op1 ) -> opcode		430542	0					
ANR	434102	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	434103	Callee	VAR_SOURCE		430542	0					
ANR	434104	Identifier	VAR_SOURCE		430542	0					
ANR	434105	ArgumentList	opline -> op1		430542	1					
ANR	434106	Argument	opline -> op1		430542	0					
ANR	434107	PtrMemberAccess	opline -> op1		430542	0					
ANR	434108	Identifier	opline		430542	0					
ANR	434109	Identifier	op1		430542	1					
ANR	434110	Identifier	opcode		430542	1					
ANR	434111	Identifier	ZEND_CAST		430542	1					
ANR	434112	EqualityExpression	VAR_SOURCE ( opline -> op1 ) -> extended_value == IS_STRING		430542	1		==			
ANR	434113	PtrMemberAccess	VAR_SOURCE ( opline -> op1 ) -> extended_value		430542	0					
ANR	434114	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	434115	Callee	VAR_SOURCE		430542	0					
ANR	434116	Identifier	VAR_SOURCE		430542	0					
ANR	434117	ArgumentList	opline -> op1		430542	1					
ANR	434118	Argument	opline -> op1		430542	0					
ANR	434119	PtrMemberAccess	opline -> op1		430542	0					
ANR	434120	Identifier	opline		430542	0					
ANR	434121	Identifier	op1		430542	1					
ANR	434122	Identifier	extended_value		430542	1					
ANR	434123	Identifier	IS_STRING		430542	1					
ANR	434124	CompoundStatement		449:4:17026:17064	430542	1					
ANR	434125	IdentifierDeclStatement	zend_op * src = VAR_SOURCE ( opline -> op1 ) ;	1058:4:35334:35372	430542	0	True				
ANR	434126	IdentifierDecl	* src = VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	434127	IdentifierDeclType	zend_op *		430542	0					
ANR	434128	Identifier	src		430542	1					
ANR	434129	AssignmentExpression	* src = VAR_SOURCE ( opline -> op1 )		430542	2		=			
ANR	434130	Identifier	src		430542	0					
ANR	434131	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	1					
ANR	434132	Callee	VAR_SOURCE		430542	0					
ANR	434133	Identifier	VAR_SOURCE		430542	0					
ANR	434134	ArgumentList	opline -> op1		430542	1					
ANR	434135	Argument	opline -> op1		430542	0					
ANR	434136	PtrMemberAccess	opline -> op1		430542	0					
ANR	434137	Identifier	opline		430542	0					
ANR	434138	Identifier	op1		430542	1					
ANR	434139	ExpressionStatement	VAR_UNSET ( opline -> op1 )	1059:4:35378:35400	430542	1	True				
ANR	434140	CallExpression	VAR_UNSET ( opline -> op1 )		430542	0					
ANR	434141	Callee	VAR_UNSET		430542	0					
ANR	434142	Identifier	VAR_UNSET		430542	0					
ANR	434143	ArgumentList	opline -> op1		430542	1					
ANR	434144	Argument	opline -> op1		430542	0					
ANR	434145	PtrMemberAccess	opline -> op1		430542	0					
ANR	434146	Identifier	opline		430542	0					
ANR	434147	Identifier	op1		430542	1					
ANR	434148	ExpressionStatement	"COPY_NODE ( opline -> op1 , src -> op1 )"	1060:4:35406:35438	430542	2	True				
ANR	434149	CallExpression	"COPY_NODE ( opline -> op1 , src -> op1 )"		430542	0					
ANR	434150	Callee	COPY_NODE		430542	0					
ANR	434151	Identifier	COPY_NODE		430542	0					
ANR	434152	ArgumentList	opline -> op1		430542	1					
ANR	434153	Argument	opline -> op1		430542	0					
ANR	434154	PtrMemberAccess	opline -> op1		430542	0					
ANR	434155	Identifier	opline		430542	0					
ANR	434156	Identifier	op1		430542	1					
ANR	434157	Argument	src -> op1		430542	1					
ANR	434158	PtrMemberAccess	src -> op1		430542	0					
ANR	434159	Identifier	src		430542	0					
ANR	434160	Identifier	op1		430542	1					
ANR	434161	ExpressionStatement	MAKE_NOP ( src )	1061:4:35444:35457	430542	3	True				
ANR	434162	CallExpression	MAKE_NOP ( src )		430542	0					
ANR	434163	Callee	MAKE_NOP		430542	0					
ANR	434164	Identifier	MAKE_NOP		430542	0					
ANR	434165	ArgumentList	src		430542	1					
ANR	434166	Argument	src		430542	0					
ANR	434167	Identifier	src		430542	0					
ANR	434168	IfStatement	if ( ( ZEND_OP2_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) ) && VAR_SOURCE ( opline -> op2 ) && VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_CAST && VAR_SOURCE ( opline -> op2 ) -> extended_value == IS_STRING )		430542	1					
ANR	434169	Condition	( ZEND_OP2_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) ) && VAR_SOURCE ( opline -> op2 ) && VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_CAST && VAR_SOURCE ( opline -> op2 ) -> extended_value == IS_STRING	1063:7:35471:35658	430542	0	True				
ANR	434170	AndExpression	( ZEND_OP2_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR ) ) && VAR_SOURCE ( opline -> op2 ) && VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_CAST && VAR_SOURCE ( opline -> op2 ) -> extended_value == IS_STRING		430542	0		&&			
ANR	434171	BitAndExpression	ZEND_OP2_TYPE ( opline ) & ( IS_TMP_VAR | IS_VAR )		430542	0		&			
ANR	434172	CallExpression	ZEND_OP2_TYPE ( opline )		430542	0					
ANR	434173	Callee	ZEND_OP2_TYPE		430542	0					
ANR	434174	Identifier	ZEND_OP2_TYPE		430542	0					
ANR	434175	ArgumentList	opline		430542	1					
ANR	434176	Argument	opline		430542	0					
ANR	434177	Identifier	opline		430542	0					
ANR	434178	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		430542	1		|			
ANR	434179	Identifier	IS_TMP_VAR		430542	0					
ANR	434180	Identifier	IS_VAR		430542	1					
ANR	434181	AndExpression	VAR_SOURCE ( opline -> op2 ) && VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_CAST && VAR_SOURCE ( opline -> op2 ) -> extended_value == IS_STRING		430542	1		&&			
ANR	434182	CallExpression	VAR_SOURCE ( opline -> op2 )		430542	0					
ANR	434183	Callee	VAR_SOURCE		430542	0					
ANR	434184	Identifier	VAR_SOURCE		430542	0					
ANR	434185	ArgumentList	opline -> op2		430542	1					
ANR	434186	Argument	opline -> op2		430542	0					
ANR	434187	PtrMemberAccess	opline -> op2		430542	0					
ANR	434188	Identifier	opline		430542	0					
ANR	434189	Identifier	op2		430542	1					
ANR	434190	AndExpression	VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_CAST && VAR_SOURCE ( opline -> op2 ) -> extended_value == IS_STRING		430542	1		&&			
ANR	434191	EqualityExpression	VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_CAST		430542	0		==			
ANR	434192	PtrMemberAccess	VAR_SOURCE ( opline -> op2 ) -> opcode		430542	0					
ANR	434193	CallExpression	VAR_SOURCE ( opline -> op2 )		430542	0					
ANR	434194	Callee	VAR_SOURCE		430542	0					
ANR	434195	Identifier	VAR_SOURCE		430542	0					
ANR	434196	ArgumentList	opline -> op2		430542	1					
ANR	434197	Argument	opline -> op2		430542	0					
ANR	434198	PtrMemberAccess	opline -> op2		430542	0					
ANR	434199	Identifier	opline		430542	0					
ANR	434200	Identifier	op2		430542	1					
ANR	434201	Identifier	opcode		430542	1					
ANR	434202	Identifier	ZEND_CAST		430542	1					
ANR	434203	EqualityExpression	VAR_SOURCE ( opline -> op2 ) -> extended_value == IS_STRING		430542	1		==			
ANR	434204	PtrMemberAccess	VAR_SOURCE ( opline -> op2 ) -> extended_value		430542	0					
ANR	434205	CallExpression	VAR_SOURCE ( opline -> op2 )		430542	0					
ANR	434206	Callee	VAR_SOURCE		430542	0					
ANR	434207	Identifier	VAR_SOURCE		430542	0					
ANR	434208	ArgumentList	opline -> op2		430542	1					
ANR	434209	Argument	opline -> op2		430542	0					
ANR	434210	PtrMemberAccess	opline -> op2		430542	0					
ANR	434211	Identifier	opline		430542	0					
ANR	434212	Identifier	op2		430542	1					
ANR	434213	Identifier	extended_value		430542	1					
ANR	434214	Identifier	IS_STRING		430542	1					
ANR	434215	CompoundStatement		459:4:17438:17476	430542	1					
ANR	434216	IdentifierDeclStatement	zend_op * src = VAR_SOURCE ( opline -> op2 ) ;	1068:4:35746:35784	430542	0	True				
ANR	434217	IdentifierDecl	* src = VAR_SOURCE ( opline -> op2 )		430542	0					
ANR	434218	IdentifierDeclType	zend_op *		430542	0					
ANR	434219	Identifier	src		430542	1					
ANR	434220	AssignmentExpression	* src = VAR_SOURCE ( opline -> op2 )		430542	2		=			
ANR	434221	Identifier	src		430542	0					
ANR	434222	CallExpression	VAR_SOURCE ( opline -> op2 )		430542	1					
ANR	434223	Callee	VAR_SOURCE		430542	0					
ANR	434224	Identifier	VAR_SOURCE		430542	0					
ANR	434225	ArgumentList	opline -> op2		430542	1					
ANR	434226	Argument	opline -> op2		430542	0					
ANR	434227	PtrMemberAccess	opline -> op2		430542	0					
ANR	434228	Identifier	opline		430542	0					
ANR	434229	Identifier	op2		430542	1					
ANR	434230	ExpressionStatement	VAR_UNSET ( opline -> op2 )	1069:4:35790:35812	430542	1	True				
ANR	434231	CallExpression	VAR_UNSET ( opline -> op2 )		430542	0					
ANR	434232	Callee	VAR_UNSET		430542	0					
ANR	434233	Identifier	VAR_UNSET		430542	0					
ANR	434234	ArgumentList	opline -> op2		430542	1					
ANR	434235	Argument	opline -> op2		430542	0					
ANR	434236	PtrMemberAccess	opline -> op2		430542	0					
ANR	434237	Identifier	opline		430542	0					
ANR	434238	Identifier	op2		430542	1					
ANR	434239	ExpressionStatement	"COPY_NODE ( opline -> op2 , src -> op1 )"	1070:4:35818:35850	430542	2	True				
ANR	434240	CallExpression	"COPY_NODE ( opline -> op2 , src -> op1 )"		430542	0					
ANR	434241	Callee	COPY_NODE		430542	0					
ANR	434242	Identifier	COPY_NODE		430542	0					
ANR	434243	ArgumentList	opline -> op2		430542	1					
ANR	434244	Argument	opline -> op2		430542	0					
ANR	434245	PtrMemberAccess	opline -> op2		430542	0					
ANR	434246	Identifier	opline		430542	0					
ANR	434247	Identifier	op2		430542	1					
ANR	434248	Argument	src -> op1		430542	1					
ANR	434249	PtrMemberAccess	src -> op1		430542	0					
ANR	434250	Identifier	src		430542	0					
ANR	434251	Identifier	op1		430542	1					
ANR	434252	ExpressionStatement	MAKE_NOP ( src )	1071:4:35856:35869	430542	3	True				
ANR	434253	CallExpression	MAKE_NOP ( src )		430542	0					
ANR	434254	Callee	MAKE_NOP		430542	0					
ANR	434255	Identifier	MAKE_NOP		430542	0					
ANR	434256	ArgumentList	src		430542	1					
ANR	434257	Argument	src		430542	0					
ANR	434258	Identifier	src		430542	0					
ANR	434259	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING && Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) == 0 )		430542	2					
ANR	434260	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING && Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) == 0	1073:7:35883:36021	430542	0	True				
ANR	434261	AndExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING && Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) == 0		430542	0		&&			
ANR	434262	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		430542	0		==			
ANR	434263	CallExpression	ZEND_OP1_TYPE ( opline )		430542	0					
ANR	434264	Callee	ZEND_OP1_TYPE		430542	0					
ANR	434265	Identifier	ZEND_OP1_TYPE		430542	0					
ANR	434266	ArgumentList	opline		430542	1					
ANR	434267	Argument	opline		430542	0					
ANR	434268	Identifier	opline		430542	0					
ANR	434269	Identifier	IS_CONST		430542	1					
ANR	434270	AndExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING && Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) == 0		430542	1		&&			
ANR	434271	EqualityExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING		430542	0		==			
ANR	434272	CallExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) )		430542	0					
ANR	434273	Callee	Z_TYPE		430542	0					
ANR	434274	Identifier	Z_TYPE		430542	0					
ANR	434275	ArgumentList	ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	434276	Argument	ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	434277	CallExpression	ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	434278	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	434279	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	434280	ArgumentList	opline		430542	1					
ANR	434281	Argument	opline		430542	0					
ANR	434282	Identifier	opline		430542	0					
ANR	434283	Identifier	IS_STRING		430542	1					
ANR	434284	EqualityExpression	Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) == 0		430542	1		==			
ANR	434285	CallExpression	Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) )		430542	0					
ANR	434286	Callee	Z_STRLEN		430542	0					
ANR	434287	Identifier	Z_STRLEN		430542	0					
ANR	434288	ArgumentList	ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	434289	Argument	ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	434290	CallExpression	ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	434291	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	434292	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	434293	ArgumentList	opline		430542	1					
ANR	434294	Argument	opline		430542	0					
ANR	434295	Identifier	opline		430542	0					
ANR	434296	PrimaryExpression	0		430542	1					
ANR	434297	CompoundStatement		466:48:17716:17716	430542	1					
ANR	434298	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )	1077:4:36081:36120	430542	0	True				
ANR	434299	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )		430542	0					
ANR	434300	Callee	literal_dtor		430542	0					
ANR	434301	Identifier	literal_dtor		430542	0					
ANR	434302	ArgumentList	& ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	434303	Argument	& ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	434304	UnaryOperationExpression	& ZEND_OP1_LITERAL ( opline )		430542	0					
ANR	434305	UnaryOperator	&		430542	0					
ANR	434306	CallExpression	ZEND_OP1_LITERAL ( opline )		430542	1					
ANR	434307	Callee	ZEND_OP1_LITERAL		430542	0					
ANR	434308	Identifier	ZEND_OP1_LITERAL		430542	0					
ANR	434309	ArgumentList	opline		430542	1					
ANR	434310	Argument	opline		430542	0					
ANR	434311	Identifier	opline		430542	0					
ANR	434312	ExpressionStatement	opline -> opcode = ZEND_CAST	1078:4:36126:36152	430542	1	True				
ANR	434313	AssignmentExpression	opline -> opcode = ZEND_CAST		430542	0		=			
ANR	434314	PtrMemberAccess	opline -> opcode		430542	0					
ANR	434315	Identifier	opline		430542	0					
ANR	434316	Identifier	opcode		430542	1					
ANR	434317	Identifier	ZEND_CAST		430542	1					
ANR	434318	ExpressionStatement	opline -> extended_value = IS_STRING	1079:4:36158:36192	430542	2	True				
ANR	434319	AssignmentExpression	opline -> extended_value = IS_STRING		430542	0		=			
ANR	434320	PtrMemberAccess	opline -> extended_value		430542	0					
ANR	434321	Identifier	opline		430542	0					
ANR	434322	Identifier	extended_value		430542	1					
ANR	434323	Identifier	IS_STRING		430542	1					
ANR	434324	ExpressionStatement	"COPY_NODE ( opline -> op1 , opline -> op2 )"	1080:4:36198:36233	430542	3	True				
ANR	434325	CallExpression	"COPY_NODE ( opline -> op1 , opline -> op2 )"		430542	0					
ANR	434326	Callee	COPY_NODE		430542	0					
ANR	434327	Identifier	COPY_NODE		430542	0					
ANR	434328	ArgumentList	opline -> op1		430542	1					
ANR	434329	Argument	opline -> op1		430542	0					
ANR	434330	PtrMemberAccess	opline -> op1		430542	0					
ANR	434331	Identifier	opline		430542	0					
ANR	434332	Identifier	op1		430542	1					
ANR	434333	Argument	opline -> op2		430542	1					
ANR	434334	PtrMemberAccess	opline -> op2		430542	0					
ANR	434335	Identifier	opline		430542	0					
ANR	434336	Identifier	op2		430542	1					
ANR	434337	ExpressionStatement	opline -> op2_type = IS_UNUSED	1081:4:36239:36267	430542	4	True				
ANR	434338	AssignmentExpression	opline -> op2_type = IS_UNUSED		430542	0		=			
ANR	434339	PtrMemberAccess	opline -> op2_type		430542	0					
ANR	434340	Identifier	opline		430542	0					
ANR	434341	Identifier	op2_type		430542	1					
ANR	434342	Identifier	IS_UNUSED		430542	1					
ANR	434343	ExpressionStatement	opline -> op2 . var = 0	1082:4:36273:36292	430542	5	True				
ANR	434344	AssignmentExpression	opline -> op2 . var = 0		430542	0		=			
ANR	434345	MemberAccess	opline -> op2 . var		430542	0					
ANR	434346	PtrMemberAccess	opline -> op2		430542	0					
ANR	434347	Identifier	opline		430542	0					
ANR	434348	Identifier	op2		430542	1					
ANR	434349	Identifier	var		430542	1					
ANR	434350	PrimaryExpression	0		430542	1					
ANR	434351	ElseStatement	else		430542	0					
ANR	434352	IfStatement	if ( ZEND_OP2_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING && Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) ) == 0 )		430542	0					
ANR	434353	Condition	ZEND_OP2_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING && Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) ) == 0	1083:14:36308:36460	430542	0	True				
ANR	434354	AndExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING && Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) ) == 0		430542	0		&&			
ANR	434355	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST		430542	0		==			
ANR	434356	CallExpression	ZEND_OP2_TYPE ( opline )		430542	0					
ANR	434357	Callee	ZEND_OP2_TYPE		430542	0					
ANR	434358	Identifier	ZEND_OP2_TYPE		430542	0					
ANR	434359	ArgumentList	opline		430542	1					
ANR	434360	Argument	opline		430542	0					
ANR	434361	Identifier	opline		430542	0					
ANR	434362	Identifier	IS_CONST		430542	1					
ANR	434363	AndExpression	Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING && Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) ) == 0		430542	1		&&			
ANR	434364	EqualityExpression	Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING		430542	0		==			
ANR	434365	CallExpression	Z_TYPE ( ZEND_OP2_LITERAL ( opline ) )		430542	0					
ANR	434366	Callee	Z_TYPE		430542	0					
ANR	434367	Identifier	Z_TYPE		430542	0					
ANR	434368	ArgumentList	ZEND_OP2_LITERAL ( opline )		430542	1					
ANR	434369	Argument	ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	434370	CallExpression	ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	434371	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	434372	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	434373	ArgumentList	opline		430542	1					
ANR	434374	Argument	opline		430542	0					
ANR	434375	Identifier	opline		430542	0					
ANR	434376	Identifier	IS_STRING		430542	1					
ANR	434377	EqualityExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) ) == 0		430542	1		==			
ANR	434378	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) )		430542	0					
ANR	434379	Callee	Z_STRLEN		430542	0					
ANR	434380	Identifier	Z_STRLEN		430542	0					
ANR	434381	ArgumentList	ZEND_OP2_LITERAL ( opline )		430542	1					
ANR	434382	Argument	ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	434383	CallExpression	ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	434384	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	434385	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	434386	ArgumentList	opline		430542	1					
ANR	434387	Argument	opline		430542	0					
ANR	434388	Identifier	opline		430542	0					
ANR	434389	PrimaryExpression	0		430542	1					
ANR	434390	CompoundStatement		476:55:18155:18155	430542	1					
ANR	434391	ExpressionStatement	literal_dtor ( & ZEND_OP2_LITERAL ( opline ) )	1087:4:36520:36559	430542	0	True				
ANR	434392	CallExpression	literal_dtor ( & ZEND_OP2_LITERAL ( opline ) )		430542	0					
ANR	434393	Callee	literal_dtor		430542	0					
ANR	434394	Identifier	literal_dtor		430542	0					
ANR	434395	ArgumentList	& ZEND_OP2_LITERAL ( opline )		430542	1					
ANR	434396	Argument	& ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	434397	UnaryOperationExpression	& ZEND_OP2_LITERAL ( opline )		430542	0					
ANR	434398	UnaryOperator	&		430542	0					
ANR	434399	CallExpression	ZEND_OP2_LITERAL ( opline )		430542	1					
ANR	434400	Callee	ZEND_OP2_LITERAL		430542	0					
ANR	434401	Identifier	ZEND_OP2_LITERAL		430542	0					
ANR	434402	ArgumentList	opline		430542	1					
ANR	434403	Argument	opline		430542	0					
ANR	434404	Identifier	opline		430542	0					
ANR	434405	ExpressionStatement	opline -> opcode = ZEND_CAST	1088:4:36565:36591	430542	1	True				
ANR	434406	AssignmentExpression	opline -> opcode = ZEND_CAST		430542	0		=			
ANR	434407	PtrMemberAccess	opline -> opcode		430542	0					
ANR	434408	Identifier	opline		430542	0					
ANR	434409	Identifier	opcode		430542	1					
ANR	434410	Identifier	ZEND_CAST		430542	1					
ANR	434411	ExpressionStatement	opline -> extended_value = IS_STRING	1089:4:36597:36631	430542	2	True				
ANR	434412	AssignmentExpression	opline -> extended_value = IS_STRING		430542	0		=			
ANR	434413	PtrMemberAccess	opline -> extended_value		430542	0					
ANR	434414	Identifier	opline		430542	0					
ANR	434415	Identifier	extended_value		430542	1					
ANR	434416	Identifier	IS_STRING		430542	1					
ANR	434417	ExpressionStatement	opline -> op2_type = IS_UNUSED	1090:4:36637:36665	430542	3	True				
ANR	434418	AssignmentExpression	opline -> op2_type = IS_UNUSED		430542	0		=			
ANR	434419	PtrMemberAccess	opline -> op2_type		430542	0					
ANR	434420	Identifier	opline		430542	0					
ANR	434421	Identifier	op2_type		430542	1					
ANR	434422	Identifier	IS_UNUSED		430542	1					
ANR	434423	ExpressionStatement	opline -> op2 . var = 0	1091:4:36671:36690	430542	4	True				
ANR	434424	AssignmentExpression	opline -> op2 . var = 0		430542	0		=			
ANR	434425	MemberAccess	opline -> op2 . var		430542	0					
ANR	434426	PtrMemberAccess	opline -> op2		430542	0					
ANR	434427	Identifier	opline		430542	0					
ANR	434428	Identifier	op2		430542	1					
ANR	434429	Identifier	var		430542	1					
ANR	434430	PrimaryExpression	0		430542	1					
ANR	434431	ElseStatement	else		430542	0					
ANR	434432	IfStatement	if ( opline -> opcode == ZEND_CONCAT && ( opline -> op1_type == IS_CONST || ( opline -> op1_type == IS_TMP_VAR && VAR_SOURCE ( opline -> op1 ) && ( VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_FAST_CONCAT || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ROPE_END || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_FETCH_CONSTANT ) ) ) && ( opline -> op2_type == IS_CONST || ( opline -> op2_type == IS_TMP_VAR && VAR_SOURCE ( opline -> op2 ) && ( VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_FAST_CONCAT || VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_ROPE_END || VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_FETCH_CONSTANT ) ) ) )		430542	0					
ANR	434433	Condition	opline -> opcode == ZEND_CONCAT && ( opline -> op1_type == IS_CONST || ( opline -> op1_type == IS_TMP_VAR && VAR_SOURCE ( opline -> op1 ) && ( VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_FAST_CONCAT || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ROPE_END || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_FETCH_CONSTANT ) ) ) && ( opline -> op2_type == IS_CONST || ( opline -> op2_type == IS_TMP_VAR && VAR_SOURCE ( opline -> op2 ) && ( VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_FAST_CONCAT || VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_ROPE_END || VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_FETCH_CONSTANT ) ) )	1092:14:36706:37452	430542	0	True				
ANR	434434	AndExpression	opline -> opcode == ZEND_CONCAT && ( opline -> op1_type == IS_CONST || ( opline -> op1_type == IS_TMP_VAR && VAR_SOURCE ( opline -> op1 ) && ( VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_FAST_CONCAT || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ROPE_END || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_FETCH_CONSTANT ) ) ) && ( opline -> op2_type == IS_CONST || ( opline -> op2_type == IS_TMP_VAR && VAR_SOURCE ( opline -> op2 ) && ( VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_FAST_CONCAT || VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_ROPE_END || VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_FETCH_CONSTANT ) ) )		430542	0		&&			
ANR	434435	EqualityExpression	opline -> opcode == ZEND_CONCAT		430542	0		==			
ANR	434436	PtrMemberAccess	opline -> opcode		430542	0					
ANR	434437	Identifier	opline		430542	0					
ANR	434438	Identifier	opcode		430542	1					
ANR	434439	Identifier	ZEND_CONCAT		430542	1					
ANR	434440	AndExpression	( opline -> op1_type == IS_CONST || ( opline -> op1_type == IS_TMP_VAR && VAR_SOURCE ( opline -> op1 ) && ( VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_FAST_CONCAT || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ROPE_END || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_FETCH_CONSTANT ) ) ) && ( opline -> op2_type == IS_CONST || ( opline -> op2_type == IS_TMP_VAR && VAR_SOURCE ( opline -> op2 ) && ( VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_FAST_CONCAT || VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_ROPE_END || VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_FETCH_CONSTANT ) ) )		430542	1		&&			
ANR	434441	OrExpression	opline -> op1_type == IS_CONST || ( opline -> op1_type == IS_TMP_VAR && VAR_SOURCE ( opline -> op1 ) && ( VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_FAST_CONCAT || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ROPE_END || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_FETCH_CONSTANT ) )		430542	0		||			
ANR	434442	EqualityExpression	opline -> op1_type == IS_CONST		430542	0		==			
ANR	434443	PtrMemberAccess	opline -> op1_type		430542	0					
ANR	434444	Identifier	opline		430542	0					
ANR	434445	Identifier	op1_type		430542	1					
ANR	434446	Identifier	IS_CONST		430542	1					
ANR	434447	AndExpression	opline -> op1_type == IS_TMP_VAR && VAR_SOURCE ( opline -> op1 ) && ( VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_FAST_CONCAT || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ROPE_END || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_FETCH_CONSTANT )		430542	1		&&			
ANR	434448	EqualityExpression	opline -> op1_type == IS_TMP_VAR		430542	0		==			
ANR	434449	PtrMemberAccess	opline -> op1_type		430542	0					
ANR	434450	Identifier	opline		430542	0					
ANR	434451	Identifier	op1_type		430542	1					
ANR	434452	Identifier	IS_TMP_VAR		430542	1					
ANR	434453	AndExpression	VAR_SOURCE ( opline -> op1 ) && ( VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_FAST_CONCAT || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ROPE_END || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_FETCH_CONSTANT )		430542	1		&&			
ANR	434454	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	434455	Callee	VAR_SOURCE		430542	0					
ANR	434456	Identifier	VAR_SOURCE		430542	0					
ANR	434457	ArgumentList	opline -> op1		430542	1					
ANR	434458	Argument	opline -> op1		430542	0					
ANR	434459	PtrMemberAccess	opline -> op1		430542	0					
ANR	434460	Identifier	opline		430542	0					
ANR	434461	Identifier	op1		430542	1					
ANR	434462	OrExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_FAST_CONCAT || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ROPE_END || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_FETCH_CONSTANT		430542	1		||			
ANR	434463	EqualityExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_FAST_CONCAT		430542	0		==			
ANR	434464	PtrMemberAccess	VAR_SOURCE ( opline -> op1 ) -> opcode		430542	0					
ANR	434465	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	434466	Callee	VAR_SOURCE		430542	0					
ANR	434467	Identifier	VAR_SOURCE		430542	0					
ANR	434468	ArgumentList	opline -> op1		430542	1					
ANR	434469	Argument	opline -> op1		430542	0					
ANR	434470	PtrMemberAccess	opline -> op1		430542	0					
ANR	434471	Identifier	opline		430542	0					
ANR	434472	Identifier	op1		430542	1					
ANR	434473	Identifier	opcode		430542	1					
ANR	434474	Identifier	ZEND_FAST_CONCAT		430542	1					
ANR	434475	OrExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ROPE_END || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_FETCH_CONSTANT		430542	1		||			
ANR	434476	EqualityExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ROPE_END		430542	0		==			
ANR	434477	PtrMemberAccess	VAR_SOURCE ( opline -> op1 ) -> opcode		430542	0					
ANR	434478	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	434479	Callee	VAR_SOURCE		430542	0					
ANR	434480	Identifier	VAR_SOURCE		430542	0					
ANR	434481	ArgumentList	opline -> op1		430542	1					
ANR	434482	Argument	opline -> op1		430542	0					
ANR	434483	PtrMemberAccess	opline -> op1		430542	0					
ANR	434484	Identifier	opline		430542	0					
ANR	434485	Identifier	op1		430542	1					
ANR	434486	Identifier	opcode		430542	1					
ANR	434487	Identifier	ZEND_ROPE_END		430542	1					
ANR	434488	EqualityExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_FETCH_CONSTANT		430542	1		==			
ANR	434489	PtrMemberAccess	VAR_SOURCE ( opline -> op1 ) -> opcode		430542	0					
ANR	434490	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	434491	Callee	VAR_SOURCE		430542	0					
ANR	434492	Identifier	VAR_SOURCE		430542	0					
ANR	434493	ArgumentList	opline -> op1		430542	1					
ANR	434494	Argument	opline -> op1		430542	0					
ANR	434495	PtrMemberAccess	opline -> op1		430542	0					
ANR	434496	Identifier	opline		430542	0					
ANR	434497	Identifier	op1		430542	1					
ANR	434498	Identifier	opcode		430542	1					
ANR	434499	Identifier	ZEND_FETCH_CONSTANT		430542	1					
ANR	434500	OrExpression	opline -> op2_type == IS_CONST || ( opline -> op2_type == IS_TMP_VAR && VAR_SOURCE ( opline -> op2 ) && ( VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_FAST_CONCAT || VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_ROPE_END || VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_FETCH_CONSTANT ) )		430542	1		||			
ANR	434501	EqualityExpression	opline -> op2_type == IS_CONST		430542	0		==			
ANR	434502	PtrMemberAccess	opline -> op2_type		430542	0					
ANR	434503	Identifier	opline		430542	0					
ANR	434504	Identifier	op2_type		430542	1					
ANR	434505	Identifier	IS_CONST		430542	1					
ANR	434506	AndExpression	opline -> op2_type == IS_TMP_VAR && VAR_SOURCE ( opline -> op2 ) && ( VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_FAST_CONCAT || VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_ROPE_END || VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_FETCH_CONSTANT )		430542	1		&&			
ANR	434507	EqualityExpression	opline -> op2_type == IS_TMP_VAR		430542	0		==			
ANR	434508	PtrMemberAccess	opline -> op2_type		430542	0					
ANR	434509	Identifier	opline		430542	0					
ANR	434510	Identifier	op2_type		430542	1					
ANR	434511	Identifier	IS_TMP_VAR		430542	1					
ANR	434512	AndExpression	VAR_SOURCE ( opline -> op2 ) && ( VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_FAST_CONCAT || VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_ROPE_END || VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_FETCH_CONSTANT )		430542	1		&&			
ANR	434513	CallExpression	VAR_SOURCE ( opline -> op2 )		430542	0					
ANR	434514	Callee	VAR_SOURCE		430542	0					
ANR	434515	Identifier	VAR_SOURCE		430542	0					
ANR	434516	ArgumentList	opline -> op2		430542	1					
ANR	434517	Argument	opline -> op2		430542	0					
ANR	434518	PtrMemberAccess	opline -> op2		430542	0					
ANR	434519	Identifier	opline		430542	0					
ANR	434520	Identifier	op2		430542	1					
ANR	434521	OrExpression	VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_FAST_CONCAT || VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_ROPE_END || VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_FETCH_CONSTANT		430542	1		||			
ANR	434522	EqualityExpression	VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_FAST_CONCAT		430542	0		==			
ANR	434523	PtrMemberAccess	VAR_SOURCE ( opline -> op2 ) -> opcode		430542	0					
ANR	434524	CallExpression	VAR_SOURCE ( opline -> op2 )		430542	0					
ANR	434525	Callee	VAR_SOURCE		430542	0					
ANR	434526	Identifier	VAR_SOURCE		430542	0					
ANR	434527	ArgumentList	opline -> op2		430542	1					
ANR	434528	Argument	opline -> op2		430542	0					
ANR	434529	PtrMemberAccess	opline -> op2		430542	0					
ANR	434530	Identifier	opline		430542	0					
ANR	434531	Identifier	op2		430542	1					
ANR	434532	Identifier	opcode		430542	1					
ANR	434533	Identifier	ZEND_FAST_CONCAT		430542	1					
ANR	434534	OrExpression	VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_ROPE_END || VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_FETCH_CONSTANT		430542	1		||			
ANR	434535	EqualityExpression	VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_ROPE_END		430542	0		==			
ANR	434536	PtrMemberAccess	VAR_SOURCE ( opline -> op2 ) -> opcode		430542	0					
ANR	434537	CallExpression	VAR_SOURCE ( opline -> op2 )		430542	0					
ANR	434538	Callee	VAR_SOURCE		430542	0					
ANR	434539	Identifier	VAR_SOURCE		430542	0					
ANR	434540	ArgumentList	opline -> op2		430542	1					
ANR	434541	Argument	opline -> op2		430542	0					
ANR	434542	PtrMemberAccess	opline -> op2		430542	0					
ANR	434543	Identifier	opline		430542	0					
ANR	434544	Identifier	op2		430542	1					
ANR	434545	Identifier	opcode		430542	1					
ANR	434546	Identifier	ZEND_ROPE_END		430542	1					
ANR	434547	EqualityExpression	VAR_SOURCE ( opline -> op2 ) -> opcode == ZEND_FETCH_CONSTANT		430542	1		==			
ANR	434548	PtrMemberAccess	VAR_SOURCE ( opline -> op2 ) -> opcode		430542	0					
ANR	434549	CallExpression	VAR_SOURCE ( opline -> op2 )		430542	0					
ANR	434550	Callee	VAR_SOURCE		430542	0					
ANR	434551	Identifier	VAR_SOURCE		430542	0					
ANR	434552	ArgumentList	opline -> op2		430542	1					
ANR	434553	Argument	opline -> op2		430542	0					
ANR	434554	PtrMemberAccess	opline -> op2		430542	0					
ANR	434555	Identifier	opline		430542	0					
ANR	434556	Identifier	op2		430542	1					
ANR	434557	Identifier	opcode		430542	1					
ANR	434558	Identifier	ZEND_FETCH_CONSTANT		430542	1					
ANR	434559	CompoundStatement		495:76:19147:19147	430542	1					
ANR	434560	ExpressionStatement	opline -> opcode = ZEND_FAST_CONCAT	1105:4:37461:37494	430542	0	True				
ANR	434561	AssignmentExpression	opline -> opcode = ZEND_FAST_CONCAT		430542	0		=			
ANR	434562	PtrMemberAccess	opline -> opcode		430542	0					
ANR	434563	Identifier	opline		430542	0					
ANR	434564	Identifier	opcode		430542	1					
ANR	434565	Identifier	ZEND_FAST_CONCAT		430542	1					
ANR	434566	ElseStatement	else		430542	0					
ANR	434567	IfStatement	if ( opline -> opcode == ZEND_QM_ASSIGN && ZEND_OP1_TYPE ( opline ) == ZEND_RESULT_TYPE ( opline ) && ZEND_OP1 ( opline ) . var == ZEND_RESULT ( opline ) . var )		430542	0					
ANR	434568	Condition	opline -> opcode == ZEND_QM_ASSIGN && ZEND_OP1_TYPE ( opline ) == ZEND_RESULT_TYPE ( opline ) && ZEND_OP1 ( opline ) . var == ZEND_RESULT ( opline ) . var	1107:13:37514:37659	430542	0	True				
ANR	434569	AndExpression	opline -> opcode == ZEND_QM_ASSIGN && ZEND_OP1_TYPE ( opline ) == ZEND_RESULT_TYPE ( opline ) && ZEND_OP1 ( opline ) . var == ZEND_RESULT ( opline ) . var		430542	0		&&			
ANR	434570	EqualityExpression	opline -> opcode == ZEND_QM_ASSIGN		430542	0		==			
ANR	434571	PtrMemberAccess	opline -> opcode		430542	0					
ANR	434572	Identifier	opline		430542	0					
ANR	434573	Identifier	opcode		430542	1					
ANR	434574	Identifier	ZEND_QM_ASSIGN		430542	1					
ANR	434575	AndExpression	ZEND_OP1_TYPE ( opline ) == ZEND_RESULT_TYPE ( opline ) && ZEND_OP1 ( opline ) . var == ZEND_RESULT ( opline ) . var		430542	1		&&			
ANR	434576	EqualityExpression	ZEND_OP1_TYPE ( opline ) == ZEND_RESULT_TYPE ( opline )		430542	0		==			
ANR	434577	CallExpression	ZEND_OP1_TYPE ( opline )		430542	0					
ANR	434578	Callee	ZEND_OP1_TYPE		430542	0					
ANR	434579	Identifier	ZEND_OP1_TYPE		430542	0					
ANR	434580	ArgumentList	opline		430542	1					
ANR	434581	Argument	opline		430542	0					
ANR	434582	Identifier	opline		430542	0					
ANR	434583	CallExpression	ZEND_RESULT_TYPE ( opline )		430542	1					
ANR	434584	Callee	ZEND_RESULT_TYPE		430542	0					
ANR	434585	Identifier	ZEND_RESULT_TYPE		430542	0					
ANR	434586	ArgumentList	opline		430542	1					
ANR	434587	Argument	opline		430542	0					
ANR	434588	Identifier	opline		430542	0					
ANR	434589	EqualityExpression	ZEND_OP1 ( opline ) . var == ZEND_RESULT ( opline ) . var		430542	1		==			
ANR	434590	MemberAccess	ZEND_OP1 ( opline ) . var		430542	0					
ANR	434591	CallExpression	ZEND_OP1 ( opline )		430542	0					
ANR	434592	Callee	ZEND_OP1		430542	0					
ANR	434593	Identifier	ZEND_OP1		430542	0					
ANR	434594	ArgumentList	opline		430542	1					
ANR	434595	Argument	opline		430542	0					
ANR	434596	Identifier	opline		430542	0					
ANR	434597	Identifier	var		430542	1					
ANR	434598	MemberAccess	ZEND_RESULT ( opline ) . var		430542	1					
ANR	434599	CallExpression	ZEND_RESULT ( opline )		430542	0					
ANR	434600	Callee	ZEND_RESULT		430542	0					
ANR	434601	Identifier	ZEND_RESULT		430542	0					
ANR	434602	ArgumentList	opline		430542	1					
ANR	434603	Argument	opline		430542	0					
ANR	434604	Identifier	opline		430542	0					
ANR	434605	Identifier	var		430542	1					
ANR	434606	CompoundStatement		500:54:19354:19354	430542	1					
ANR	434607	ExpressionStatement	MAKE_NOP ( opline )	1111:3:37699:37715	430542	0	True				
ANR	434608	CallExpression	MAKE_NOP ( opline )		430542	0					
ANR	434609	Callee	MAKE_NOP		430542	0					
ANR	434610	Identifier	MAKE_NOP		430542	0					
ANR	434611	ArgumentList	opline		430542	1					
ANR	434612	Argument	opline		430542	0					
ANR	434613	Identifier	opline		430542	0					
ANR	434614	ElseStatement	else		430542	0					
ANR	434615	IfStatement	"if ( opline -> opcode == ZEND_BOOL && ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR && VAR_SOURCE ( opline -> op1 ) && ( VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_EQUAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_NOT_EQUAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_SMALLER || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_SMALLER_OR_EQUAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_IDENTICAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_NOT_IDENTICAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_VAR || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_DIM_OBJ ) && ! zend_bitset_in ( used_ext , VAR_NUM ( ZEND_OP1 ( opline ) . var ) ) )"		430542	0					
ANR	434616	Condition	"opline -> opcode == ZEND_BOOL && ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR && VAR_SOURCE ( opline -> op1 ) && ( VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_EQUAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_NOT_EQUAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_SMALLER || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_SMALLER_OR_EQUAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_IDENTICAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_NOT_IDENTICAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_VAR || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_DIM_OBJ ) && ! zend_bitset_in ( used_ext , VAR_NUM ( ZEND_OP1 ( opline ) . var ) )"	1112:13:37730:38459	430542	0	True				
ANR	434617	AndExpression	"opline -> opcode == ZEND_BOOL && ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR && VAR_SOURCE ( opline -> op1 ) && ( VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_EQUAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_NOT_EQUAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_SMALLER || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_SMALLER_OR_EQUAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_IDENTICAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_NOT_IDENTICAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_VAR || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_DIM_OBJ ) && ! zend_bitset_in ( used_ext , VAR_NUM ( ZEND_OP1 ( opline ) . var ) )"		430542	0		&&			
ANR	434618	EqualityExpression	opline -> opcode == ZEND_BOOL		430542	0		==			
ANR	434619	PtrMemberAccess	opline -> opcode		430542	0					
ANR	434620	Identifier	opline		430542	0					
ANR	434621	Identifier	opcode		430542	1					
ANR	434622	Identifier	ZEND_BOOL		430542	1					
ANR	434623	AndExpression	"ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR && VAR_SOURCE ( opline -> op1 ) && ( VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_EQUAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_NOT_EQUAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_SMALLER || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_SMALLER_OR_EQUAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_IDENTICAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_NOT_IDENTICAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_VAR || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_DIM_OBJ ) && ! zend_bitset_in ( used_ext , VAR_NUM ( ZEND_OP1 ( opline ) . var ) )"		430542	1		&&			
ANR	434624	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR		430542	0		==			
ANR	434625	CallExpression	ZEND_OP1_TYPE ( opline )		430542	0					
ANR	434626	Callee	ZEND_OP1_TYPE		430542	0					
ANR	434627	Identifier	ZEND_OP1_TYPE		430542	0					
ANR	434628	ArgumentList	opline		430542	1					
ANR	434629	Argument	opline		430542	0					
ANR	434630	Identifier	opline		430542	0					
ANR	434631	Identifier	IS_TMP_VAR		430542	1					
ANR	434632	AndExpression	"VAR_SOURCE ( opline -> op1 ) && ( VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_EQUAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_NOT_EQUAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_SMALLER || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_SMALLER_OR_EQUAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_IDENTICAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_NOT_IDENTICAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_VAR || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_DIM_OBJ ) && ! zend_bitset_in ( used_ext , VAR_NUM ( ZEND_OP1 ( opline ) . var ) )"		430542	1		&&			
ANR	434633	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	434634	Callee	VAR_SOURCE		430542	0					
ANR	434635	Identifier	VAR_SOURCE		430542	0					
ANR	434636	ArgumentList	opline -> op1		430542	1					
ANR	434637	Argument	opline -> op1		430542	0					
ANR	434638	PtrMemberAccess	opline -> op1		430542	0					
ANR	434639	Identifier	opline		430542	0					
ANR	434640	Identifier	op1		430542	1					
ANR	434641	AndExpression	"( VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_EQUAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_NOT_EQUAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_SMALLER || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_SMALLER_OR_EQUAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_IDENTICAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_NOT_IDENTICAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_VAR || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_DIM_OBJ ) && ! zend_bitset_in ( used_ext , VAR_NUM ( ZEND_OP1 ( opline ) . var ) )"		430542	1		&&			
ANR	434642	OrExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_EQUAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_NOT_EQUAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_SMALLER || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_SMALLER_OR_EQUAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_IDENTICAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_NOT_IDENTICAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_VAR || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_DIM_OBJ		430542	0		||			
ANR	434643	EqualityExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_EQUAL		430542	0		==			
ANR	434644	PtrMemberAccess	VAR_SOURCE ( opline -> op1 ) -> opcode		430542	0					
ANR	434645	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	434646	Callee	VAR_SOURCE		430542	0					
ANR	434647	Identifier	VAR_SOURCE		430542	0					
ANR	434648	ArgumentList	opline -> op1		430542	1					
ANR	434649	Argument	opline -> op1		430542	0					
ANR	434650	PtrMemberAccess	opline -> op1		430542	0					
ANR	434651	Identifier	opline		430542	0					
ANR	434652	Identifier	op1		430542	1					
ANR	434653	Identifier	opcode		430542	1					
ANR	434654	Identifier	ZEND_IS_EQUAL		430542	1					
ANR	434655	OrExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_NOT_EQUAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_SMALLER || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_SMALLER_OR_EQUAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_IDENTICAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_NOT_IDENTICAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_VAR || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_DIM_OBJ		430542	1		||			
ANR	434656	EqualityExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_NOT_EQUAL		430542	0		==			
ANR	434657	PtrMemberAccess	VAR_SOURCE ( opline -> op1 ) -> opcode		430542	0					
ANR	434658	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	434659	Callee	VAR_SOURCE		430542	0					
ANR	434660	Identifier	VAR_SOURCE		430542	0					
ANR	434661	ArgumentList	opline -> op1		430542	1					
ANR	434662	Argument	opline -> op1		430542	0					
ANR	434663	PtrMemberAccess	opline -> op1		430542	0					
ANR	434664	Identifier	opline		430542	0					
ANR	434665	Identifier	op1		430542	1					
ANR	434666	Identifier	opcode		430542	1					
ANR	434667	Identifier	ZEND_IS_NOT_EQUAL		430542	1					
ANR	434668	OrExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_SMALLER || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_SMALLER_OR_EQUAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_IDENTICAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_NOT_IDENTICAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_VAR || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_DIM_OBJ		430542	1		||			
ANR	434669	EqualityExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_SMALLER		430542	0		==			
ANR	434670	PtrMemberAccess	VAR_SOURCE ( opline -> op1 ) -> opcode		430542	0					
ANR	434671	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	434672	Callee	VAR_SOURCE		430542	0					
ANR	434673	Identifier	VAR_SOURCE		430542	0					
ANR	434674	ArgumentList	opline -> op1		430542	1					
ANR	434675	Argument	opline -> op1		430542	0					
ANR	434676	PtrMemberAccess	opline -> op1		430542	0					
ANR	434677	Identifier	opline		430542	0					
ANR	434678	Identifier	op1		430542	1					
ANR	434679	Identifier	opcode		430542	1					
ANR	434680	Identifier	ZEND_IS_SMALLER		430542	1					
ANR	434681	OrExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_SMALLER_OR_EQUAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_IDENTICAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_NOT_IDENTICAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_VAR || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_DIM_OBJ		430542	1		||			
ANR	434682	EqualityExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_SMALLER_OR_EQUAL		430542	0		==			
ANR	434683	PtrMemberAccess	VAR_SOURCE ( opline -> op1 ) -> opcode		430542	0					
ANR	434684	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	434685	Callee	VAR_SOURCE		430542	0					
ANR	434686	Identifier	VAR_SOURCE		430542	0					
ANR	434687	ArgumentList	opline -> op1		430542	1					
ANR	434688	Argument	opline -> op1		430542	0					
ANR	434689	PtrMemberAccess	opline -> op1		430542	0					
ANR	434690	Identifier	opline		430542	0					
ANR	434691	Identifier	op1		430542	1					
ANR	434692	Identifier	opcode		430542	1					
ANR	434693	Identifier	ZEND_IS_SMALLER_OR_EQUAL		430542	1					
ANR	434694	OrExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_IDENTICAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_NOT_IDENTICAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_VAR || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_DIM_OBJ		430542	1		||			
ANR	434695	EqualityExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_BOOL		430542	0		==			
ANR	434696	PtrMemberAccess	VAR_SOURCE ( opline -> op1 ) -> opcode		430542	0					
ANR	434697	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	434698	Callee	VAR_SOURCE		430542	0					
ANR	434699	Identifier	VAR_SOURCE		430542	0					
ANR	434700	ArgumentList	opline -> op1		430542	1					
ANR	434701	Argument	opline -> op1		430542	0					
ANR	434702	PtrMemberAccess	opline -> op1		430542	0					
ANR	434703	Identifier	opline		430542	0					
ANR	434704	Identifier	op1		430542	1					
ANR	434705	Identifier	opcode		430542	1					
ANR	434706	Identifier	ZEND_BOOL		430542	1					
ANR	434707	OrExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_IDENTICAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_NOT_IDENTICAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_VAR || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_DIM_OBJ		430542	1		||			
ANR	434708	EqualityExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_IDENTICAL		430542	0		==			
ANR	434709	PtrMemberAccess	VAR_SOURCE ( opline -> op1 ) -> opcode		430542	0					
ANR	434710	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	434711	Callee	VAR_SOURCE		430542	0					
ANR	434712	Identifier	VAR_SOURCE		430542	0					
ANR	434713	ArgumentList	opline -> op1		430542	1					
ANR	434714	Argument	opline -> op1		430542	0					
ANR	434715	PtrMemberAccess	opline -> op1		430542	0					
ANR	434716	Identifier	opline		430542	0					
ANR	434717	Identifier	op1		430542	1					
ANR	434718	Identifier	opcode		430542	1					
ANR	434719	Identifier	ZEND_IS_IDENTICAL		430542	1					
ANR	434720	OrExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_NOT_IDENTICAL || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_VAR || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_DIM_OBJ		430542	1		||			
ANR	434721	EqualityExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_IS_NOT_IDENTICAL		430542	0		==			
ANR	434722	PtrMemberAccess	VAR_SOURCE ( opline -> op1 ) -> opcode		430542	0					
ANR	434723	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	434724	Callee	VAR_SOURCE		430542	0					
ANR	434725	Identifier	VAR_SOURCE		430542	0					
ANR	434726	ArgumentList	opline -> op1		430542	1					
ANR	434727	Argument	opline -> op1		430542	0					
ANR	434728	PtrMemberAccess	opline -> op1		430542	0					
ANR	434729	Identifier	opline		430542	0					
ANR	434730	Identifier	op1		430542	1					
ANR	434731	Identifier	opcode		430542	1					
ANR	434732	Identifier	ZEND_IS_NOT_IDENTICAL		430542	1					
ANR	434733	OrExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_VAR || VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_DIM_OBJ		430542	1		||			
ANR	434734	EqualityExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_VAR		430542	0		==			
ANR	434735	PtrMemberAccess	VAR_SOURCE ( opline -> op1 ) -> opcode		430542	0					
ANR	434736	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	434737	Callee	VAR_SOURCE		430542	0					
ANR	434738	Identifier	VAR_SOURCE		430542	0					
ANR	434739	ArgumentList	opline -> op1		430542	1					
ANR	434740	Argument	opline -> op1		430542	0					
ANR	434741	PtrMemberAccess	opline -> op1		430542	0					
ANR	434742	Identifier	opline		430542	0					
ANR	434743	Identifier	op1		430542	1					
ANR	434744	Identifier	opcode		430542	1					
ANR	434745	Identifier	ZEND_ISSET_ISEMPTY_VAR		430542	1					
ANR	434746	EqualityExpression	VAR_SOURCE ( opline -> op1 ) -> opcode == ZEND_ISSET_ISEMPTY_DIM_OBJ		430542	1		==			
ANR	434747	PtrMemberAccess	VAR_SOURCE ( opline -> op1 ) -> opcode		430542	0					
ANR	434748	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	434749	Callee	VAR_SOURCE		430542	0					
ANR	434750	Identifier	VAR_SOURCE		430542	0					
ANR	434751	ArgumentList	opline -> op1		430542	1					
ANR	434752	Argument	opline -> op1		430542	0					
ANR	434753	PtrMemberAccess	opline -> op1		430542	0					
ANR	434754	Identifier	opline		430542	0					
ANR	434755	Identifier	op1		430542	1					
ANR	434756	Identifier	opcode		430542	1					
ANR	434757	Identifier	ZEND_ISSET_ISEMPTY_DIM_OBJ		430542	1					
ANR	434758	UnaryOperationExpression	"! zend_bitset_in ( used_ext , VAR_NUM ( ZEND_OP1 ( opline ) . var ) )"		430542	1					
ANR	434759	UnaryOperator	!		430542	0					
ANR	434760	CallExpression	"zend_bitset_in ( used_ext , VAR_NUM ( ZEND_OP1 ( opline ) . var ) )"		430542	1					
ANR	434761	Callee	zend_bitset_in		430542	0					
ANR	434762	Identifier	zend_bitset_in		430542	0					
ANR	434763	ArgumentList	used_ext		430542	1					
ANR	434764	Argument	used_ext		430542	0					
ANR	434765	Identifier	used_ext		430542	0					
ANR	434766	Argument	VAR_NUM ( ZEND_OP1 ( opline ) . var )		430542	1					
ANR	434767	CallExpression	VAR_NUM ( ZEND_OP1 ( opline ) . var )		430542	0					
ANR	434768	Callee	VAR_NUM		430542	0					
ANR	434769	Identifier	VAR_NUM		430542	0					
ANR	434770	ArgumentList	ZEND_OP1 ( opline ) . var		430542	1					
ANR	434771	Argument	ZEND_OP1 ( opline ) . var		430542	0					
ANR	434772	MemberAccess	ZEND_OP1 ( opline ) . var		430542	0					
ANR	434773	CallExpression	ZEND_OP1 ( opline )		430542	0					
ANR	434774	Callee	ZEND_OP1		430542	0					
ANR	434775	Identifier	ZEND_OP1		430542	0					
ANR	434776	ArgumentList	opline		430542	1					
ANR	434777	Argument	opline		430542	0					
ANR	434778	Identifier	opline		430542	0					
ANR	434779	Identifier	var		430542	1					
ANR	434780	CompoundStatement		517:3:20246:20284	430542	1					
ANR	434781	IdentifierDeclStatement	zend_op * src = VAR_SOURCE ( opline -> op1 ) ;	1126:3:38554:38592	430542	0	True				
ANR	434782	IdentifierDecl	* src = VAR_SOURCE ( opline -> op1 )		430542	0					
ANR	434783	IdentifierDeclType	zend_op *		430542	0					
ANR	434784	Identifier	src		430542	1					
ANR	434785	AssignmentExpression	* src = VAR_SOURCE ( opline -> op1 )		430542	2		=			
ANR	434786	Identifier	src		430542	0					
ANR	434787	CallExpression	VAR_SOURCE ( opline -> op1 )		430542	1					
ANR	434788	Callee	VAR_SOURCE		430542	0					
ANR	434789	Identifier	VAR_SOURCE		430542	0					
ANR	434790	ArgumentList	opline -> op1		430542	1					
ANR	434791	Argument	opline -> op1		430542	0					
ANR	434792	PtrMemberAccess	opline -> op1		430542	0					
ANR	434793	Identifier	opline		430542	0					
ANR	434794	Identifier	op1		430542	1					
ANR	434795	ExpressionStatement	"COPY_NODE ( src -> result , opline -> result )"	1127:3:38597:38635	430542	1	True				
ANR	434796	CallExpression	"COPY_NODE ( src -> result , opline -> result )"		430542	0					
ANR	434797	Callee	COPY_NODE		430542	0					
ANR	434798	Identifier	COPY_NODE		430542	0					
ANR	434799	ArgumentList	src -> result		430542	1					
ANR	434800	Argument	src -> result		430542	0					
ANR	434801	PtrMemberAccess	src -> result		430542	0					
ANR	434802	Identifier	src		430542	0					
ANR	434803	Identifier	result		430542	1					
ANR	434804	Argument	opline -> result		430542	1					
ANR	434805	PtrMemberAccess	opline -> result		430542	0					
ANR	434806	Identifier	opline		430542	0					
ANR	434807	Identifier	result		430542	1					
ANR	434808	ExpressionStatement	SET_VAR_SOURCE ( src )	1128:3:38640:38659	430542	2	True				
ANR	434809	CallExpression	SET_VAR_SOURCE ( src )		430542	0					
ANR	434810	Callee	SET_VAR_SOURCE		430542	0					
ANR	434811	Identifier	SET_VAR_SOURCE		430542	0					
ANR	434812	ArgumentList	src		430542	1					
ANR	434813	Argument	src		430542	0					
ANR	434814	Identifier	src		430542	0					
ANR	434815	ExpressionStatement	MAKE_NOP ( opline )	1129:3:38664:38680	430542	3	True				
ANR	434816	CallExpression	MAKE_NOP ( opline )		430542	0					
ANR	434817	Callee	MAKE_NOP		430542	0					
ANR	434818	Identifier	MAKE_NOP		430542	0					
ANR	434819	ArgumentList	opline		430542	1					
ANR	434820	Argument	opline		430542	0					
ANR	434821	Identifier	opline		430542	0					
ANR	434822	IfStatement	if ( RESULT_USED ( opline ) )		430542	7					
ANR	434823	Condition	RESULT_USED ( opline )	1132:6:38720:38738	430542	0	True				
ANR	434824	CallExpression	RESULT_USED ( opline )		430542	0					
ANR	434825	Callee	RESULT_USED		430542	0					
ANR	434826	Identifier	RESULT_USED		430542	0					
ANR	434827	ArgumentList	opline		430542	1					
ANR	434828	Argument	opline		430542	0					
ANR	434829	Identifier	opline		430542	0					
ANR	434830	CompoundStatement		523:27:20433:20433	430542	1					
ANR	434831	ExpressionStatement	SET_VAR_SOURCE ( opline )	1133:3:38746:38768	430542	0	True				
ANR	434832	CallExpression	SET_VAR_SOURCE ( opline )		430542	0					
ANR	434833	Callee	SET_VAR_SOURCE		430542	0					
ANR	434834	Identifier	SET_VAR_SOURCE		430542	0					
ANR	434835	ArgumentList	opline		430542	1					
ANR	434836	Argument	opline		430542	0					
ANR	434837	Identifier	opline		430542	0					
ANR	434838	IfStatement	if ( opline -> opcode != ZEND_NOP )		430542	8					
ANR	434839	Condition	opline -> opcode != ZEND_NOP	1135:6:38780:38805	430542	0	True				
ANR	434840	EqualityExpression	opline -> opcode != ZEND_NOP		430542	0		!=			
ANR	434841	PtrMemberAccess	opline -> opcode		430542	0					
ANR	434842	Identifier	opline		430542	0					
ANR	434843	Identifier	opcode		430542	1					
ANR	434844	Identifier	ZEND_NOP		430542	1					
ANR	434845	CompoundStatement		526:34:20500:20500	430542	1					
ANR	434846	ExpressionStatement	last_op = opline	1136:3:38813:38829	430542	0	True				
ANR	434847	AssignmentExpression	last_op = opline		430542	0		=			
ANR	434848	Identifier	last_op		430542	0					
ANR	434849	Identifier	opline		430542	1					
ANR	434850	ExpressionStatement	opline ++	1138:2:38837:38845	430542	9	True				
ANR	434851	PostIncDecOperationExpression	opline ++		430542	0					
ANR	434852	Identifier	opline		430542	0					
ANR	434853	IncDec	++		430542	1					
ANR	434854	ExpressionStatement	"strip_nop ( block , ctx )"	1141:1:38852:38873	430542	9	True				
ANR	434855	CallExpression	"strip_nop ( block , ctx )"		430542	0					
ANR	434856	Callee	strip_nop		430542	0					
ANR	434857	Identifier	strip_nop		430542	0					
ANR	434858	ArgumentList	block		430542	1					
ANR	434859	Argument	block		430542	0					
ANR	434860	Identifier	block		430542	0					
ANR	434861	Argument	ctx		430542	1					
ANR	434862	Identifier	ctx		430542	0					
ANR	434863	ReturnType	static void		430542	1					
ANR	434864	Identifier	zend_optimize_block		430542	2					
ANR	434865	ParameterList	"zend_code_block * block , zend_op_array * op_array , zend_bitset used_ext , zend_cfg * cfg , zend_optimizer_ctx * ctx"		430542	3					
ANR	434866	Parameter	zend_code_block * block	609:32:18196:18217	430542	0	True				
ANR	434867	ParameterType	zend_code_block *		430542	0					
ANR	434868	Identifier	block		430542	1					
ANR	434869	Parameter	zend_op_array * op_array	609:56:18220:18242	430542	1	True				
ANR	434870	ParameterType	zend_op_array *		430542	0					
ANR	434871	Identifier	op_array		430542	1					
ANR	434872	Parameter	zend_bitset used_ext	609:81:18245:18264	430542	2	True				
ANR	434873	ParameterType	zend_bitset		430542	0					
ANR	434874	Identifier	used_ext		430542	1					
ANR	434875	Parameter	zend_cfg * cfg	609:103:18267:18279	430542	3	True				
ANR	434876	ParameterType	zend_cfg *		430542	0					
ANR	434877	Identifier	cfg		430542	1					
ANR	434878	Parameter	zend_optimizer_ctx * ctx	609:118:18282:18304	430542	4	True				
ANR	434879	ParameterType	zend_optimizer_ctx *		430542	0					
ANR	434880	Identifier	ctx		430542	1					
ANR	434881	CFGEntryNode	ENTRY		430542		True				
ANR	434882	CFGExitNode	EXIT		430542		True				
ANR	434883	Symbol	* block -> start_opline		430542						
ANR	434884	Symbol	ZEND_BOOL		430542						
ANR	434885	Symbol	ZEND_JMPNZ		430542						
ANR	434886	Symbol	ZEND_ISSET_ISEMPTY_DIM_OBJ		430542						
ANR	434887	Symbol	ZEND_JMPZNZ		430542						
ANR	434888	Symbol	FUNCTION_CACHE -> funcs [ Z_LVAL ( ZEND_OP1_LITERAL ( fcall ) ) ] . function_name		430542						
ANR	434889	Symbol	ZEND_FAST_CONCAT		430542						
ANR	434890	Symbol	get_binary_op		430542						
ANR	434891	Symbol	Z_LVAL		430542						
ANR	434892	Symbol	Z_TYPE		430542						
ANR	434893	Symbol	* sv		430542						
ANR	434894	Symbol	error_reporting		430542						
ANR	434895	Symbol	ZEND_QM_ASSIGN		430542						
ANR	434896	Symbol	src -> result		430542						
ANR	434897	Symbol	ZEND_OP2_TYPE		430542						
ANR	434898	Symbol	FUNCTION_CACHE -> funcs [ Z_LVAL ( ZEND_OP1_LITERAL ( fcall ) ) ] . name_len		430542						
ANR	434899	Symbol	IS_TYPE_REFCOUNTED		430542						
ANR	434900	Symbol	fcall		430542						
ANR	434901	Symbol	ZEND_BOOL_XOR		430542						
ANR	434902	Symbol	ZEND_RESULT ( opline ) . var		430542						
ANR	434903	Symbol	IS_STRING_EX		430542						
ANR	434904	Symbol	tmp		430542						
ANR	434905	Symbol	block		430542						
ANR	434906	Symbol	last_op		430542						
ANR	434907	Symbol	* Z_LVAL		430542						
ANR	434908	Symbol	zend_optimizer_add_literal		430542						
ANR	434909	Symbol	fname		430542						
ANR	434910	Symbol	IS_CONST		430542						
ANR	434911	Symbol	ZEND_RETURN		430542						
ANR	434912	Symbol	ctx		430542						
ANR	434913	Symbol	zend_binary_strcasecmp		430542						
ANR	434914	Symbol	ZEND_SR		430542						
ANR	434915	Symbol	IS_TRUE		430542						
ANR	434916	Symbol	unary_op		430542						
ANR	434917	Symbol	& ZEND_OP1_LITERAL		430542						
ANR	434918	Symbol	ZEND_SL		430542						
ANR	434919	Symbol	* op_array		430542						
ANR	434920	Symbol	old_len		430542						
ANR	434921	Symbol	* cfg		430542						
ANR	434922	Symbol	ZEND_RESULT_TYPE		430542						
ANR	434923	Symbol	ZEND_OP2 ( opline ) . opline_num		430542						
ANR	434924	Symbol	ZEND_OP1_LITERAL		430542						
ANR	434925	Symbol	ZEND_EXIT		430542						
ANR	434926	Symbol	function_table		430542						
ANR	434927	Symbol	IS_VAR		430542						
ANR	434928	Symbol	OPLINE_OP2_LITERAL		430542						
ANR	434929	Symbol	ZEND_JMPZ_EX		430542						
ANR	434930	Symbol	ZEND_SUB		430542						
ANR	434931	Symbol	zend_string_extend		430542						
ANR	434932	Symbol	ZEND_BW_NOT		430542						
ANR	434933	Symbol	ZEND_IS_SMALLER_OR_EQUAL		430542						
ANR	434934	Symbol	ZEND_BW_AND		430542						
ANR	434935	Symbol	VAR_SOURCE ( opline -> op2 ) -> extended_value		430542						
ANR	434936	Symbol	result		430542						
ANR	434937	Symbol	* FUNCTION_CACHE		430542						
ANR	434938	Symbol	arg		430542						
ANR	434939	Symbol	* FUNCTION_CACHE -> funcs		430542						
ANR	434940	Symbol	block -> start_opline_no		430542						
ANR	434941	Symbol	ZEND_DO_CF_FCALL		430542						
ANR	434942	Symbol	IS_FALSE		430542						
ANR	434943	Symbol	block -> op2_to		430542						
ANR	434944	Symbol	ZEND_ADD		430542						
ANR	434945	Symbol	binary_op		430542						
ANR	434946	Symbol	c		430542						
ANR	434947	Symbol	sv		430542						
ANR	434948	Symbol	SUCCESS		430542						
ANR	434949	Symbol	cfg		430542						
ANR	434950	Symbol	ZEND_IS_EQUAL		430542						
ANR	434951	Symbol	l		430542						
ANR	434952	Symbol	ZEND_RESULT ( VAR_SOURCE ( opline -> op1 ) ) . var		430542						
ANR	434953	Symbol	ZEND_OP1		430542						
ANR	434954	Symbol	ZEND_OP2		430542						
ANR	434955	Symbol	ZEND_DIV		430542						
ANR	434956	Symbol	op2		430542						
ANR	434957	Symbol	op1		430542						
ANR	434958	Symbol	* VAR_SOURCE		430542						
ANR	434959	Symbol	OPLINE_OP1_LITERAL		430542						
ANR	434960	Symbol	Tsource		430542						
ANR	434961	Symbol	* opline		430542						
ANR	434962	Symbol	VAR_SOURCE ( opline -> op1 ) -> opcode		430542						
ANR	434963	Symbol	VAR_SOURCE ( opline -> op2 ) -> opcode		430542						
ANR	434964	Symbol	FUNCTION_CACHE		430542						
ANR	434965	Symbol	* * block		430542						
ANR	434966	Symbol	ZEND_IS_NOT_IDENTICAL		430542						
ANR	434967	Symbol	ZEND_OP2_LITERAL		430542						
ANR	434968	Symbol	opline -> op2_type		430542						
ANR	434969	Symbol	ZEND_ROPE_END		430542						
ANR	434970	Symbol	ZEND_IS_NOT_EQUAL		430542						
ANR	434971	Symbol	op_array		430542						
ANR	434972	Symbol	ZEND_FE_RESET_RW		430542						
ANR	434973	Symbol	ZEND_FREE		430542						
ANR	434974	Symbol	ZEND_BW_OR		430542						
ANR	434975	Symbol	opline -> op2 . var		430542						
ANR	434976	Symbol	IS_CV		430542						
ANR	434977	Symbol	get_unary_op		430542						
ANR	434978	Symbol	zend_hash_exists		430542						
ANR	434979	Symbol	ZEND_FE_RESET_R		430542						
ANR	434980	Symbol	block -> ext_to		430542						
ANR	434981	Symbol	Z_STR		430542						
ANR	434982	Symbol	RESULT_USED		430542						
ANR	434983	Symbol	* src		430542						
ANR	434984	Symbol	opline -> extended_value		430542						
ANR	434985	Symbol	opline -> result		430542						
ANR	434986	Symbol	opline		430542						
ANR	434987	Symbol	function		430542						
ANR	434988	Symbol	* Z_STRVAL		430542						
ANR	434989	Symbol	ZEND_ISSET_ISEMPTY_VAR		430542						
ANR	434990	Symbol	IS_STRING		430542						
ANR	434991	Symbol	Z_TYPE_FLAGS		430542						
ANR	434992	Symbol	Z_TYPE_INFO		430542						
ANR	434993	Symbol	ZEND_FETCH_CONSTANT		430542						
ANR	434994	Symbol	zend_hash_find_ptr		430542						
ANR	434995	Symbol	IS_TMP_VAR		430542						
ANR	434996	Symbol	sv -> opcode		430542						
ANR	434997	Symbol	op_array -> T		430542						
ANR	434998	Symbol	zend_optimizer_update_op2_const		430542						
ANR	434999	Symbol	EG		430542						
ANR	435000	Symbol	op_t		430542						
ANR	435001	Symbol	zend_string_alloc		430542						
ANR	435002	Symbol	NULL		430542						
ANR	435003	Symbol	* last_op		430542						
ANR	435004	Symbol	VAR_SOURCE ( opline -> op1 ) -> extended_value		430542						
ANR	435005	Symbol	ZEND_JMPZ		430542						
ANR	435006	Symbol	ZEND_IS_IDENTICAL		430542						
ANR	435007	Symbol	& module_registry		430542						
ANR	435008	Symbol	IS_TYPE_COPYABLE		430542						
ANR	435009	Symbol	src -> op1		430542						
ANR	435010	Symbol	ZEND_NOP		430542						
ANR	435011	Symbol	er		430542						
ANR	435012	Symbol	opline -> op1_type		430542						
ANR	435013	Symbol	block -> start_opline		430542						
ANR	435014	Symbol	op_b		430542						
ANR	435015	Symbol	ZEND_SEND_VAL		430542						
ANR	435016	Symbol	zval_get_long		430542						
ANR	435017	Symbol	ZEND_MUL		430542						
ANR	435018	Symbol	Z_STR_P		430542						
ANR	435019	Symbol	FUNCTION_CACHE -> funcs		430542						
ANR	435020	Symbol	Z_REFCOUNTED		430542						
ANR	435021	Symbol	opline -> op1		430542						
ANR	435022	Symbol	flen		430542						
ANR	435023	Symbol	ZEND_JMPNZ_EX		430542						
ANR	435024	Symbol	opline -> op2		430542						
ANR	435025	Symbol	used_ext		430542						
ANR	435026	Symbol	ZEND_CASE		430542						
ANR	435027	Symbol	op_array -> last_var		430542						
ANR	435028	Symbol	ZEND_ECHO		430542						
ANR	435029	Symbol	ZEND_FETCH_LIST		430542						
ANR	435030	Symbol	ZEND_IS_SMALLER		430542						
ANR	435031	Symbol	Z_STRLEN		430542						
ANR	435032	Symbol	ZEND_BW_XOR		430542						
ANR	435033	Symbol	src -> opcode		430542						
ANR	435034	Symbol	op_array -> opcodes		430542						
ANR	435035	Symbol	ZEND_CAST		430542						
ANR	435036	Symbol	& result		430542						
ANR	435037	Symbol	ZEND_RESULT		430542						
ANR	435038	Symbol	Z_STRVAL		430542						
ANR	435039	Symbol	end		430542						
ANR	435040	Symbol	VAR_NUM		430542						
ANR	435041	Symbol	last_op -> opcode		430542						
ANR	435042	Symbol	& ZEND_OP2_LITERAL		430542						
ANR	435043	Symbol	block -> start_opline -> opcode		430542						
ANR	435044	Symbol	zend_bitset_in		430542						
ANR	435045	Symbol	src		430542						
ANR	435046	Symbol	ZEND_OP1 ( opline ) . var		430542						
ANR	435047	Symbol	& OPLINE_OP1_LITERAL		430542						
ANR	435048	Symbol	& c		430542						
ANR	435049	Symbol	block -> follow_to		430542						
ANR	435050	Symbol	VAR_SOURCE		430542						
ANR	435051	Symbol	ZEND_CONCAT		430542						
ANR	435052	Symbol	block -> len		430542						
ANR	435053	Symbol	* block		430542						
ANR	435054	Symbol	ZSTR_VAL		430542						
ANR	435055	Symbol	ZEND_OP1_TYPE		430542						
ANR	435056	Symbol	zend_new_interned_string		430542						
ANR	435057	Symbol	* * FUNCTION_CACHE		430542						
ANR	435058	Symbol	opline -> opcode		430542						
ANR	435059	Symbol	* l		430542						
ANR	435060	Symbol	ZEND_BOOL_NOT		430542						
ANR	435061	Symbol	zend_optimizer_update_op1_const		430542						
ANR	435062	Symbol	ZEND_MOD		430542						
ANR	435063	Symbol	IS_DOUBLE		430542						
ANR	435064	Symbol	cfg -> Tsource		430542						
ANR	435065	Symbol	IS_UNUSED		430542						
ANR	435066	Function	assemble_code_blocks	1145:0:38928:42295							
ANR	435067	FunctionDef	"assemble_code_blocks (zend_cfg * cfg , zend_op_array * op_array)"		435066	0					
ANR	435068	CompoundStatement		1146:0:39001:42295	435066	0					
ANR	435069	IdentifierDeclStatement	zend_code_block * blocks = cfg -> blocks ;	1147:1:39004:39041	435066	0	True				
ANR	435070	IdentifierDecl	* blocks = cfg -> blocks		435066	0					
ANR	435071	IdentifierDeclType	zend_code_block *		435066	0					
ANR	435072	Identifier	blocks		435066	1					
ANR	435073	AssignmentExpression	* blocks = cfg -> blocks		435066	2		=			
ANR	435074	Identifier	blocks		435066	0					
ANR	435075	PtrMemberAccess	cfg -> blocks		435066	1					
ANR	435076	Identifier	cfg		435066	0					
ANR	435077	Identifier	blocks		435066	1					
ANR	435078	IdentifierDeclStatement	zend_op * new_opcodes = emalloc ( op_array -> last * sizeof ( zend_op ) ) ;	1148:1:39044:39108	435066	1	True				
ANR	435079	IdentifierDecl	* new_opcodes = emalloc ( op_array -> last * sizeof ( zend_op ) )		435066	0					
ANR	435080	IdentifierDeclType	zend_op *		435066	0					
ANR	435081	Identifier	new_opcodes		435066	1					
ANR	435082	AssignmentExpression	* new_opcodes = emalloc ( op_array -> last * sizeof ( zend_op ) )		435066	2		=			
ANR	435083	Identifier	new_opcodes		435066	0					
ANR	435084	CallExpression	emalloc ( op_array -> last * sizeof ( zend_op ) )		435066	1					
ANR	435085	Callee	emalloc		435066	0					
ANR	435086	Identifier	emalloc		435066	0					
ANR	435087	ArgumentList	op_array -> last * sizeof ( zend_op )		435066	1					
ANR	435088	Argument	op_array -> last * sizeof ( zend_op )		435066	0					
ANR	435089	MultiplicativeExpression	op_array -> last * sizeof ( zend_op )		435066	0		*			
ANR	435090	PtrMemberAccess	op_array -> last		435066	0					
ANR	435091	Identifier	op_array		435066	0					
ANR	435092	Identifier	last		435066	1					
ANR	435093	SizeofExpression	sizeof ( zend_op )		435066	1					
ANR	435094	Sizeof	sizeof		435066	0					
ANR	435095	SizeofOperand	zend_op		435066	1					
ANR	435096	IdentifierDeclStatement	zend_op * opline = new_opcodes ;	1149:1:39111:39140	435066	2	True				
ANR	435097	IdentifierDecl	* opline = new_opcodes		435066	0					
ANR	435098	IdentifierDeclType	zend_op *		435066	0					
ANR	435099	Identifier	opline		435066	1					
ANR	435100	AssignmentExpression	* opline = new_opcodes		435066	2		=			
ANR	435101	Identifier	new_opcodes		435066	0					
ANR	435102	Identifier	new_opcodes		435066	1					
ANR	435103	IdentifierDeclStatement	zend_code_block * cur_block = blocks ;	1150:1:39143:39178	435066	3	True				
ANR	435104	IdentifierDecl	* cur_block = blocks		435066	0					
ANR	435105	IdentifierDeclType	zend_code_block *		435066	0					
ANR	435106	Identifier	cur_block		435066	1					
ANR	435107	AssignmentExpression	* cur_block = blocks		435066	2		=			
ANR	435108	Identifier	blocks		435066	0					
ANR	435109	Identifier	blocks		435066	1					
ANR	435110	WhileStatement	while ( cur_block )		435066	4					
ANR	435111	Condition	cur_block	1153:8:39247:39255	435066	0	True				
ANR	435112	Identifier	cur_block		435066	0					
ANR	435113	CompoundStatement		8:19:256:256	435066	1					
ANR	435114	IfStatement	if ( cur_block -> access )		435066	0					
ANR	435115	Condition	cur_block -> access	1154:6:39266:39282	435066	0	True				
ANR	435116	PtrMemberAccess	cur_block -> access		435066	0					
ANR	435117	Identifier	cur_block		435066	0					
ANR	435118	Identifier	access		435066	1					
ANR	435119	CompoundStatement		9:25:283:283	435066	1					
ANR	435120	ExpressionStatement	"memcpy ( opline , cur_block -> start_opline , cur_block -> len * sizeof ( zend_op ) )"	1155:3:39290:39363	435066	0	True				
ANR	435121	CallExpression	"memcpy ( opline , cur_block -> start_opline , cur_block -> len * sizeof ( zend_op ) )"		435066	0					
ANR	435122	Callee	memcpy		435066	0					
ANR	435123	Identifier	memcpy		435066	0					
ANR	435124	ArgumentList	opline		435066	1					
ANR	435125	Argument	opline		435066	0					
ANR	435126	Identifier	opline		435066	0					
ANR	435127	Argument	cur_block -> start_opline		435066	1					
ANR	435128	PtrMemberAccess	cur_block -> start_opline		435066	0					
ANR	435129	Identifier	cur_block		435066	0					
ANR	435130	Identifier	start_opline		435066	1					
ANR	435131	Argument	cur_block -> len * sizeof ( zend_op )		435066	2					
ANR	435132	MultiplicativeExpression	cur_block -> len * sizeof ( zend_op )		435066	0		*			
ANR	435133	PtrMemberAccess	cur_block -> len		435066	0					
ANR	435134	Identifier	cur_block		435066	0					
ANR	435135	Identifier	len		435066	1					
ANR	435136	SizeofExpression	sizeof ( zend_op )		435066	1					
ANR	435137	Sizeof	sizeof		435066	0					
ANR	435138	SizeofOperand	zend_op		435066	1					
ANR	435139	ExpressionStatement	cur_block -> start_opline = opline	1156:3:39368:39400	435066	1	True				
ANR	435140	AssignmentExpression	cur_block -> start_opline = opline		435066	0		=			
ANR	435141	PtrMemberAccess	cur_block -> start_opline		435066	0					
ANR	435142	Identifier	cur_block		435066	0					
ANR	435143	Identifier	start_opline		435066	1					
ANR	435144	Identifier	opline		435066	1					
ANR	435145	ExpressionStatement	opline += cur_block -> len	1157:3:39405:39429	435066	2	True				
ANR	435146	AssignmentExpression	opline += cur_block -> len		435066	0		+=			
ANR	435147	Identifier	opline		435066	0					
ANR	435148	PtrMemberAccess	cur_block -> len		435066	1					
ANR	435149	Identifier	cur_block		435066	0					
ANR	435150	Identifier	len		435066	1					
ANR	435151	IfStatement	if ( ( opline - 1 ) -> opcode == ZEND_JMP )		435066	3					
ANR	435152	Condition	( opline - 1 ) -> opcode == ZEND_JMP	1158:7:39438:39469	435066	0	True				
ANR	435153	EqualityExpression	( opline - 1 ) -> opcode == ZEND_JMP		435066	0		==			
ANR	435154	PtrMemberAccess	( opline - 1 ) -> opcode		435066	0					
ANR	435155	AdditiveExpression	opline - 1		435066	0		-			
ANR	435156	Identifier	opline		435066	0					
ANR	435157	PrimaryExpression	1		435066	1					
ANR	435158	Identifier	opcode		435066	1					
ANR	435159	Identifier	ZEND_JMP		435066	1					
ANR	435160	CompoundStatement		14:4:476:497	435066	1					
ANR	435161	IdentifierDeclStatement	zend_code_block * next ;	1159:4:39478:39499	435066	0	True				
ANR	435162	IdentifierDecl	* next		435066	0					
ANR	435163	IdentifierDeclType	zend_code_block *		435066	0					
ANR	435164	Identifier	next		435066	1					
ANR	435165	ExpressionStatement	next = cur_block -> next	1160:4:39505:39527	435066	1	True				
ANR	435166	AssignmentExpression	next = cur_block -> next		435066	0		=			
ANR	435167	Identifier	next		435066	0					
ANR	435168	PtrMemberAccess	cur_block -> next		435066	1					
ANR	435169	Identifier	cur_block		435066	0					
ANR	435170	Identifier	next		435066	1					
ANR	435171	WhileStatement	while ( next && ! next -> access )		435066	2					
ANR	435172	Condition	next && ! next -> access	1161:11:39540:39560	435066	0	True				
ANR	435173	AndExpression	next && ! next -> access		435066	0		&&			
ANR	435174	Identifier	next		435066	0					
ANR	435175	UnaryOperationExpression	! next -> access		435066	1					
ANR	435176	UnaryOperator	!		435066	0					
ANR	435177	PtrMemberAccess	next -> access		435066	1					
ANR	435178	Identifier	next		435066	0					
ANR	435179	Identifier	access		435066	1					
ANR	435180	CompoundStatement		16:34:561:561	435066	1					
ANR	435181	ExpressionStatement	next = next -> next	1162:5:39570:39587	435066	0	True				
ANR	435182	AssignmentExpression	next = next -> next		435066	0		=			
ANR	435183	Identifier	next		435066	0					
ANR	435184	PtrMemberAccess	next -> next		435066	1					
ANR	435185	Identifier	next		435066	0					
ANR	435186	Identifier	next		435066	1					
ANR	435187	IfStatement	if ( next && next == cur_block -> op1_to )		435066	3					
ANR	435188	Condition	next && next == cur_block -> op1_to	1164:8:39603:39635	435066	0	True				
ANR	435189	AndExpression	next && next == cur_block -> op1_to		435066	0		&&			
ANR	435190	Identifier	next		435066	0					
ANR	435191	EqualityExpression	next == cur_block -> op1_to		435066	1		==			
ANR	435192	Identifier	next		435066	0					
ANR	435193	PtrMemberAccess	cur_block -> op1_to		435066	1					
ANR	435194	Identifier	cur_block		435066	0					
ANR	435195	Identifier	op1_to		435066	1					
ANR	435196	CompoundStatement		19:43:636:636	435066	1					
ANR	435197	ExpressionStatement	cur_block -> follow_to = cur_block -> op1_to	1166:5:39689:39729	435066	0	True				
ANR	435198	AssignmentExpression	cur_block -> follow_to = cur_block -> op1_to		435066	0		=			
ANR	435199	PtrMemberAccess	cur_block -> follow_to		435066	0					
ANR	435200	Identifier	cur_block		435066	0					
ANR	435201	Identifier	follow_to		435066	1					
ANR	435202	PtrMemberAccess	cur_block -> op1_to		435066	1					
ANR	435203	Identifier	cur_block		435066	0					
ANR	435204	Identifier	op1_to		435066	1					
ANR	435205	ExpressionStatement	cur_block -> op1_to = NULL	1167:5:39736:39760	435066	1	True				
ANR	435206	AssignmentExpression	cur_block -> op1_to = NULL		435066	0		=			
ANR	435207	PtrMemberAccess	cur_block -> op1_to		435066	0					
ANR	435208	Identifier	cur_block		435066	0					
ANR	435209	Identifier	op1_to		435066	1					
ANR	435210	Identifier	NULL		435066	1					
ANR	435211	ExpressionStatement	MAKE_NOP ( ( opline - 1 ) )	1168:5:39767:39789	435066	2	True				
ANR	435212	CallExpression	MAKE_NOP ( ( opline - 1 ) )		435066	0					
ANR	435213	Callee	MAKE_NOP		435066	0					
ANR	435214	Identifier	MAKE_NOP		435066	0					
ANR	435215	ArgumentList	opline - 1		435066	1					
ANR	435216	Argument	opline - 1		435066	0					
ANR	435217	AdditiveExpression	opline - 1		435066	0		-			
ANR	435218	Identifier	opline		435066	0					
ANR	435219	PrimaryExpression	1		435066	1					
ANR	435220	ExpressionStatement	opline --	1169:5:39796:39804	435066	3	True				
ANR	435221	PostIncDecOperationExpression	opline --		435066	0					
ANR	435222	Identifier	opline		435066	0					
ANR	435223	IncDec	--		435066	1					
ANR	435224	ExpressionStatement	cur_block -> len --	1170:5:39811:39827	435066	4	True				
ANR	435225	PostIncDecOperationExpression	cur_block -> len --		435066	0					
ANR	435226	PtrMemberAccess	cur_block -> len		435066	0					
ANR	435227	Identifier	cur_block		435066	0					
ANR	435228	Identifier	len		435066	1					
ANR	435229	IncDec	--		435066	1					
ANR	435230	ElseStatement	else		435066	0					
ANR	435231	CompoundStatement		31:3:935:990	435066	0					
ANR	435232	IdentifierDeclStatement	zend_op * _opl ;	1175:3:39919:39932	435066	0	True				
ANR	435233	IdentifierDecl	* _opl		435066	0					
ANR	435234	IdentifierDeclType	zend_op *		435066	0					
ANR	435235	Identifier	_opl		435066	1					
ANR	435236	IdentifierDeclStatement	zend_op * end = cur_block -> start_opline + cur_block -> len ;	1176:3:39937:39992	435066	1	True				
ANR	435237	IdentifierDecl	* end = cur_block -> start_opline + cur_block -> len		435066	0					
ANR	435238	IdentifierDeclType	zend_op *		435066	0					
ANR	435239	Identifier	end		435066	1					
ANR	435240	AssignmentExpression	* end = cur_block -> start_opline + cur_block -> len		435066	2		=			
ANR	435241	Identifier	end		435066	0					
ANR	435242	AdditiveExpression	cur_block -> start_opline + cur_block -> len		435066	1		+			
ANR	435243	PtrMemberAccess	cur_block -> start_opline		435066	0					
ANR	435244	Identifier	cur_block		435066	0					
ANR	435245	Identifier	start_opline		435066	1					
ANR	435246	PtrMemberAccess	cur_block -> len		435066	1					
ANR	435247	Identifier	cur_block		435066	0					
ANR	435248	Identifier	len		435066	1					
ANR	435249	ForStatement	for ( _opl = cur_block -> start_opline ; _opl && _opl < end ; _opl ++ )		435066	2					
ANR	435250	ForInit	_opl = cur_block -> start_opline ;	1177:8:40002:40032	435066	0	True				
ANR	435251	AssignmentExpression	_opl = cur_block -> start_opline		435066	0		=			
ANR	435252	Identifier	_opl		435066	0					
ANR	435253	PtrMemberAccess	cur_block -> start_opline		435066	1					
ANR	435254	Identifier	cur_block		435066	0					
ANR	435255	Identifier	start_opline		435066	1					
ANR	435256	Condition	_opl && _opl < end	1177:40:40034:40051	435066	1	True				
ANR	435257	AndExpression	_opl && _opl < end		435066	0		&&			
ANR	435258	Identifier	_opl		435066	0					
ANR	435259	RelationalExpression	_opl < end		435066	1		<			
ANR	435260	Identifier	_opl		435066	0					
ANR	435261	Identifier	end		435066	1					
ANR	435262	PostIncDecOperationExpression	_opl ++	1177:60:40054:40059	435066	2	True				
ANR	435263	Identifier	_opl		435066	0					
ANR	435264	IncDec	++		435066	1					
ANR	435265	CompoundStatement		32:68:1060:1060	435066	3					
ANR	435266	IfStatement	if ( ZEND_OP1_TYPE ( _opl ) == IS_CONST )		435066	0					
ANR	435267	Condition	ZEND_OP1_TYPE ( _opl ) == IS_CONST	1178:8:40072:40102	435066	0	True				
ANR	435268	EqualityExpression	ZEND_OP1_TYPE ( _opl ) == IS_CONST		435066	0		==			
ANR	435269	CallExpression	ZEND_OP1_TYPE ( _opl )		435066	0					
ANR	435270	Callee	ZEND_OP1_TYPE		435066	0					
ANR	435271	Identifier	ZEND_OP1_TYPE		435066	0					
ANR	435272	ArgumentList	_opl		435066	1					
ANR	435273	Argument	_opl		435066	0					
ANR	435274	Identifier	_opl		435066	0					
ANR	435275	Identifier	IS_CONST		435066	1					
ANR	435276	CompoundStatement		33:41:1103:1103	435066	1					
ANR	435277	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( _opl ) )	1179:5:40112:40149	435066	0	True				
ANR	435278	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( _opl ) )		435066	0					
ANR	435279	Callee	literal_dtor		435066	0					
ANR	435280	Identifier	literal_dtor		435066	0					
ANR	435281	ArgumentList	& ZEND_OP1_LITERAL ( _opl )		435066	1					
ANR	435282	Argument	& ZEND_OP1_LITERAL ( _opl )		435066	0					
ANR	435283	UnaryOperationExpression	& ZEND_OP1_LITERAL ( _opl )		435066	0					
ANR	435284	UnaryOperator	&		435066	0					
ANR	435285	CallExpression	ZEND_OP1_LITERAL ( _opl )		435066	1					
ANR	435286	Callee	ZEND_OP1_LITERAL		435066	0					
ANR	435287	Identifier	ZEND_OP1_LITERAL		435066	0					
ANR	435288	ArgumentList	_opl		435066	1					
ANR	435289	Argument	_opl		435066	0					
ANR	435290	Identifier	_opl		435066	0					
ANR	435291	IfStatement	if ( ZEND_OP2_TYPE ( _opl ) == IS_CONST )		435066	1					
ANR	435292	Condition	ZEND_OP2_TYPE ( _opl ) == IS_CONST	1181:8:40165:40195	435066	0	True				
ANR	435293	EqualityExpression	ZEND_OP2_TYPE ( _opl ) == IS_CONST		435066	0		==			
ANR	435294	CallExpression	ZEND_OP2_TYPE ( _opl )		435066	0					
ANR	435295	Callee	ZEND_OP2_TYPE		435066	0					
ANR	435296	Identifier	ZEND_OP2_TYPE		435066	0					
ANR	435297	ArgumentList	_opl		435066	1					
ANR	435298	Argument	_opl		435066	0					
ANR	435299	Identifier	_opl		435066	0					
ANR	435300	Identifier	IS_CONST		435066	1					
ANR	435301	CompoundStatement		36:41:1196:1196	435066	1					
ANR	435302	ExpressionStatement	literal_dtor ( & ZEND_OP2_LITERAL ( _opl ) )	1182:5:40205:40242	435066	0	True				
ANR	435303	CallExpression	literal_dtor ( & ZEND_OP2_LITERAL ( _opl ) )		435066	0					
ANR	435304	Callee	literal_dtor		435066	0					
ANR	435305	Identifier	literal_dtor		435066	0					
ANR	435306	ArgumentList	& ZEND_OP2_LITERAL ( _opl )		435066	1					
ANR	435307	Argument	& ZEND_OP2_LITERAL ( _opl )		435066	0					
ANR	435308	UnaryOperationExpression	& ZEND_OP2_LITERAL ( _opl )		435066	0					
ANR	435309	UnaryOperator	&		435066	0					
ANR	435310	CallExpression	ZEND_OP2_LITERAL ( _opl )		435066	1					
ANR	435311	Callee	ZEND_OP2_LITERAL		435066	0					
ANR	435312	Identifier	ZEND_OP2_LITERAL		435066	0					
ANR	435313	ArgumentList	_opl		435066	1					
ANR	435314	Argument	_opl		435066	0					
ANR	435315	Identifier	_opl		435066	0					
ANR	435316	ExpressionStatement	cur_block = cur_block -> next	1186:2:40261:40288	435066	1	True				
ANR	435317	AssignmentExpression	cur_block = cur_block -> next		435066	0		=			
ANR	435318	Identifier	cur_block		435066	0					
ANR	435319	PtrMemberAccess	cur_block -> next		435066	1					
ANR	435320	Identifier	cur_block		435066	0					
ANR	435321	Identifier	next		435066	1					
ANR	435322	ExpressionStatement	op_array -> last = opline - new_opcodes	1189:1:40295:40330	435066	5	True				
ANR	435323	AssignmentExpression	op_array -> last = opline - new_opcodes		435066	0		=			
ANR	435324	PtrMemberAccess	op_array -> last		435066	0					
ANR	435325	Identifier	op_array		435066	0					
ANR	435326	Identifier	last		435066	1					
ANR	435327	AdditiveExpression	opline - new_opcodes		435066	1		-			
ANR	435328	Identifier	opline		435066	0					
ANR	435329	Identifier	new_opcodes		435066	1					
ANR	435330	IfStatement	if ( op_array -> last_try_catch )		435066	6					
ANR	435331	Condition	op_array -> last_try_catch	1192:5:40375:40398	435066	0	True				
ANR	435332	PtrMemberAccess	op_array -> last_try_catch		435066	0					
ANR	435333	Identifier	op_array		435066	0					
ANR	435334	Identifier	last_try_catch		435066	1					
ANR	435335	CompoundStatement		48:2:1403:1411	435066	1					
ANR	435336	IdentifierDeclStatement	"int i , j ;"	1193:2:40405:40413	435066	0	True				
ANR	435337	IdentifierDecl	i		435066	0					
ANR	435338	IdentifierDeclType	int		435066	0					
ANR	435339	Identifier	i		435066	1					
ANR	435340	IdentifierDecl	j		435066	1					
ANR	435341	IdentifierDeclType	int		435066	0					
ANR	435342	Identifier	j		435066	1					
ANR	435343	ForStatement	"for ( i = 0 , j = 0 ; i < op_array -> last_try_catch ; i ++ )"		435066	1					
ANR	435344	ForInit	"i = 0 , j = 0 ;"	1194:7:40422:40434	435066	0	True				
ANR	435345	Expression	"i = 0 , j = 0"		435066	0					
ANR	435346	AssignmentExpression	i = 0		435066	0		=			
ANR	435347	Identifier	i		435066	0					
ANR	435348	PrimaryExpression	0		435066	1					
ANR	435349	AssignmentExpression	j = 0		435066	1		=			
ANR	435350	Identifier	j		435066	0					
ANR	435351	PrimaryExpression	0		435066	1					
ANR	435352	Condition	i < op_array -> last_try_catch	1194:21:40436:40462	435066	1	True				
ANR	435353	RelationalExpression	i < op_array -> last_try_catch		435066	0		<			
ANR	435354	Identifier	i		435066	0					
ANR	435355	PtrMemberAccess	op_array -> last_try_catch		435066	1					
ANR	435356	Identifier	op_array		435066	0					
ANR	435357	Identifier	last_try_catch		435066	1					
ANR	435358	PostIncDecOperationExpression	i ++	1194:50:40465:40467	435066	2	True				
ANR	435359	Identifier	i		435066	0					
ANR	435360	IncDec	++		435066	1					
ANR	435361	CompoundStatement		49:55:1468:1468	435066	3					
ANR	435362	Statement	if	1195:3:40475:40476	435066	0	True				
ANR	435363	Statement	(	1195:6:40478:40478	435066	1	True				
ANR	435364	Statement	cfg	1195:7:40479:40481	435066	2	True				
ANR	435365	Statement	->	1195:10:40482:40483	435066	3	True				
ANR	435366	TryStatement	try		435066	4					
ANR	435367	Statement	[		435066	0					
ANR	435368	Statement	i	1195:16:40488:40488	435066	5	True				
ANR	435369	Statement	]	1195:17:40489:40489	435066	6	True				
ANR	435370	Statement	->	1195:18:40490:40491	435066	7	True				
ANR	435371	Statement	access	1195:20:40492:40497	435066	8	True				
ANR	435372	Statement	)	1195:26:40498:40498	435066	9	True				
ANR	435373	CompoundStatement		50:28:1498:1498	435066	10					
ANR	435374	Statement	op_array	1196:4:40506:40513	435066	0	True				
ANR	435375	Statement	->	1196:12:40514:40515	435066	1	True				
ANR	435376	Statement	try_catch_array	1196:14:40516:40530	435066	2	True				
ANR	435377	Statement	[	1196:29:40531:40531	435066	3	True				
ANR	435378	Statement	j	1196:30:40532:40532	435066	4	True				
ANR	435379	Statement	]	1196:31:40533:40533	435066	5	True				
ANR	435380	Statement	.	1196:32:40534:40534	435066	6	True				
ANR	435381	Statement	try_op	1196:33:40535:40540	435066	7	True				
ANR	435382	Statement	=	1196:40:40542:40542	435066	8	True				
ANR	435383	Statement	cfg	1196:42:40544:40546	435066	9	True				
ANR	435384	Statement	->	1196:45:40547:40548	435066	10	True				
ANR	435385	TryStatement	try		435066	11					
ANR	435386	Statement	[		435066	0					
ANR	435387	Statement	i	1196:51:40553:40553	435066	12	True				
ANR	435388	Statement	]	1196:52:40554:40554	435066	13	True				
ANR	435389	Statement	->	1196:53:40555:40556	435066	14	True				
ANR	435390	ExpressionStatement	start_opline - new_opcodes	1196:55:40557:40583	435066	15	True				
ANR	435391	AdditiveExpression	start_opline - new_opcodes		435066	0		-			
ANR	435392	Identifier	start_opline		435066	0					
ANR	435393	Identifier	new_opcodes		435066	1					
ANR	435394	Statement	op_array	1197:4:40589:40596	435066	16	True				
ANR	435395	Statement	->	1197:12:40597:40598	435066	17	True				
ANR	435396	Statement	try_catch_array	1197:14:40599:40613	435066	18	True				
ANR	435397	Statement	[	1197:29:40614:40614	435066	19	True				
ANR	435398	Statement	j	1197:30:40615:40615	435066	20	True				
ANR	435399	Statement	]	1197:31:40616:40616	435066	21	True				
ANR	435400	Statement	.	1197:32:40617:40617	435066	22	True				
ANR	435401	Statement	catch_op	1197:33:40618:40625	435066	23	True				
ANR	435402	Statement	=	1197:42:40627:40627	435066	24	True				
ANR	435403	Statement	cfg	1197:44:40629:40631	435066	25	True				
ANR	435404	Statement	->	1197:47:40632:40633	435066	26	True				
ANR	435405	Statement	catch	1197:49:40634:40638	435066	27	True				
ANR	435406	Statement	[	1197:54:40639:40639	435066	28	True				
ANR	435407	Statement	i	1197:55:40640:40640	435066	29	True				
ANR	435408	Statement	]	1197:56:40641:40641	435066	30	True				
ANR	435409	Statement	->	1197:57:40642:40643	435066	31	True				
ANR	435410	ExpressionStatement	start_opline - new_opcodes	1197:59:40644:40670	435066	32	True				
ANR	435411	AdditiveExpression	start_opline - new_opcodes		435066	0		-			
ANR	435412	Identifier	start_opline		435066	0					
ANR	435413	Identifier	new_opcodes		435066	1					
ANR	435414	ExpressionStatement	j ++	1198:4:40676:40679	435066	33	True				
ANR	435415	PostIncDecOperationExpression	j ++		435066	0					
ANR	435416	Identifier	j		435066	0					
ANR	435417	IncDec	++		435066	1					
ANR	435418	ExpressionStatement	op_array -> last_try_catch = j	1201:2:40692:40720	435066	2	True				
ANR	435419	AssignmentExpression	op_array -> last_try_catch = j		435066	0		=			
ANR	435420	PtrMemberAccess	op_array -> last_try_catch		435066	0					
ANR	435421	Identifier	op_array		435066	0					
ANR	435422	Identifier	last_try_catch		435066	1					
ANR	435423	Identifier	j		435066	1					
ANR	435424	IfStatement	if ( op_array -> last_brk_cont )		435066	7					
ANR	435425	Condition	op_array -> last_brk_cont	1205:5:40763:40785	435066	0	True				
ANR	435426	PtrMemberAccess	op_array -> last_brk_cont		435066	0					
ANR	435427	Identifier	op_array		435066	0					
ANR	435428	Identifier	last_brk_cont		435066	1					
ANR	435429	CompoundStatement		61:2:1790:1795	435066	1					
ANR	435430	IdentifierDeclStatement	int i ;	1206:2:40792:40797	435066	0	True				
ANR	435431	IdentifierDecl	i		435066	0					
ANR	435432	IdentifierDeclType	int		435066	0					
ANR	435433	Identifier	i		435066	1					
ANR	435434	ForStatement	for ( i = 0 ; i < op_array -> last_brk_cont ; i ++ )		435066	1					
ANR	435435	ForInit	i = 0 ;	1207:7:40806:40811	435066	0	True				
ANR	435436	AssignmentExpression	i = 0		435066	0		=			
ANR	435437	Identifier	i		435066	0					
ANR	435438	PrimaryExpression	0		435066	1					
ANR	435439	Condition	i < op_array -> last_brk_cont	1207:14:40813:40838	435066	1	True				
ANR	435440	RelationalExpression	i < op_array -> last_brk_cont		435066	0		<			
ANR	435441	Identifier	i		435066	0					
ANR	435442	PtrMemberAccess	op_array -> last_brk_cont		435066	1					
ANR	435443	Identifier	op_array		435066	0					
ANR	435444	Identifier	last_brk_cont		435066	1					
ANR	435445	PostIncDecOperationExpression	i ++	1207:42:40841:40843	435066	2	True				
ANR	435446	Identifier	i		435066	0					
ANR	435447	IncDec	++		435066	1					
ANR	435448	CompoundStatement		62:47:1844:1844	435066	3					
ANR	435449	ExpressionStatement	op_array -> brk_cont_array [ i ] . start = cfg -> loop_start [ i ] -> start_opline - new_opcodes	1208:3:40851:40933	435066	0	True				
ANR	435450	AssignmentExpression	op_array -> brk_cont_array [ i ] . start = cfg -> loop_start [ i ] -> start_opline - new_opcodes		435066	0		=			
ANR	435451	MemberAccess	op_array -> brk_cont_array [ i ] . start		435066	0					
ANR	435452	ArrayIndexing	op_array -> brk_cont_array [ i ]		435066	0					
ANR	435453	PtrMemberAccess	op_array -> brk_cont_array		435066	0					
ANR	435454	Identifier	op_array		435066	0					
ANR	435455	Identifier	brk_cont_array		435066	1					
ANR	435456	Identifier	i		435066	1					
ANR	435457	Identifier	start		435066	1					
ANR	435458	AdditiveExpression	cfg -> loop_start [ i ] -> start_opline - new_opcodes		435066	1		-			
ANR	435459	PtrMemberAccess	cfg -> loop_start [ i ] -> start_opline		435066	0					
ANR	435460	ArrayIndexing	cfg -> loop_start [ i ]		435066	0					
ANR	435461	PtrMemberAccess	cfg -> loop_start		435066	0					
ANR	435462	Identifier	cfg		435066	0					
ANR	435463	Identifier	loop_start		435066	1					
ANR	435464	Identifier	i		435066	1					
ANR	435465	Identifier	start_opline		435066	1					
ANR	435466	Identifier	new_opcodes		435066	1					
ANR	435467	ExpressionStatement	op_array -> brk_cont_array [ i ] . cont = cfg -> loop_cont [ i ] -> start_opline - new_opcodes	1209:3:40938:41018	435066	1	True				
ANR	435468	AssignmentExpression	op_array -> brk_cont_array [ i ] . cont = cfg -> loop_cont [ i ] -> start_opline - new_opcodes		435066	0		=			
ANR	435469	MemberAccess	op_array -> brk_cont_array [ i ] . cont		435066	0					
ANR	435470	ArrayIndexing	op_array -> brk_cont_array [ i ]		435066	0					
ANR	435471	PtrMemberAccess	op_array -> brk_cont_array		435066	0					
ANR	435472	Identifier	op_array		435066	0					
ANR	435473	Identifier	brk_cont_array		435066	1					
ANR	435474	Identifier	i		435066	1					
ANR	435475	Identifier	cont		435066	1					
ANR	435476	AdditiveExpression	cfg -> loop_cont [ i ] -> start_opline - new_opcodes		435066	1		-			
ANR	435477	PtrMemberAccess	cfg -> loop_cont [ i ] -> start_opline		435066	0					
ANR	435478	ArrayIndexing	cfg -> loop_cont [ i ]		435066	0					
ANR	435479	PtrMemberAccess	cfg -> loop_cont		435066	0					
ANR	435480	Identifier	cfg		435066	0					
ANR	435481	Identifier	loop_cont		435066	1					
ANR	435482	Identifier	i		435066	1					
ANR	435483	Identifier	start_opline		435066	1					
ANR	435484	Identifier	new_opcodes		435066	1					
ANR	435485	ExpressionStatement	op_array -> brk_cont_array [ i ] . brk = cfg -> loop_brk [ i ] -> start_opline - new_opcodes	1210:3:41023:41101	435066	2	True				
ANR	435486	AssignmentExpression	op_array -> brk_cont_array [ i ] . brk = cfg -> loop_brk [ i ] -> start_opline - new_opcodes		435066	0		=			
ANR	435487	MemberAccess	op_array -> brk_cont_array [ i ] . brk		435066	0					
ANR	435488	ArrayIndexing	op_array -> brk_cont_array [ i ]		435066	0					
ANR	435489	PtrMemberAccess	op_array -> brk_cont_array		435066	0					
ANR	435490	Identifier	op_array		435066	0					
ANR	435491	Identifier	brk_cont_array		435066	1					
ANR	435492	Identifier	i		435066	1					
ANR	435493	Identifier	brk		435066	1					
ANR	435494	AdditiveExpression	cfg -> loop_brk [ i ] -> start_opline - new_opcodes		435066	1		-			
ANR	435495	PtrMemberAccess	cfg -> loop_brk [ i ] -> start_opline		435066	0					
ANR	435496	ArrayIndexing	cfg -> loop_brk [ i ]		435066	0					
ANR	435497	PtrMemberAccess	cfg -> loop_brk		435066	0					
ANR	435498	Identifier	cfg		435066	0					
ANR	435499	Identifier	loop_brk		435066	1					
ANR	435500	Identifier	i		435066	1					
ANR	435501	Identifier	start_opline		435066	1					
ANR	435502	Identifier	new_opcodes		435066	1					
ANR	435503	ForStatement	for ( cur_block = blocks ; cur_block ; cur_block = cur_block -> next )		435066	8					
ANR	435504	ForInit	cur_block = blocks ;	1215:6:41147:41165	435066	0	True				
ANR	435505	AssignmentExpression	cur_block = blocks		435066	0		=			
ANR	435506	Identifier	cur_block		435066	0					
ANR	435507	Identifier	blocks		435066	1					
ANR	435508	Condition	cur_block	1215:26:41167:41175	435066	1	True				
ANR	435509	Identifier	cur_block		435066	0					
ANR	435510	AssignmentExpression	cur_block = cur_block -> next	1215:37:41178:41204	435066	2	True	=			
ANR	435511	Identifier	cur_block		435066	0					
ANR	435512	PtrMemberAccess	cur_block -> next		435066	1					
ANR	435513	Identifier	cur_block		435066	0					
ANR	435514	Identifier	next		435066	1					
ANR	435515	CompoundStatement		70:66:2205:2205	435066	3					
ANR	435516	IfStatement	if ( ! cur_block -> access )		435066	0					
ANR	435517	Condition	! cur_block -> access	1216:6:41215:41232	435066	0	True				
ANR	435518	UnaryOperationExpression	! cur_block -> access		435066	0					
ANR	435519	UnaryOperator	!		435066	0					
ANR	435520	PtrMemberAccess	cur_block -> access		435066	1					
ANR	435521	Identifier	cur_block		435066	0					
ANR	435522	Identifier	access		435066	1					
ANR	435523	CompoundStatement		71:26:2233:2233	435066	1					
ANR	435524	ContinueStatement	continue ;	1217:3:41240:41248	435066	0	True				
ANR	435525	ExpressionStatement	opline = cur_block -> start_opline + cur_block -> len - 1	1219:2:41256:41309	435066	1	True				
ANR	435526	AssignmentExpression	opline = cur_block -> start_opline + cur_block -> len - 1		435066	0		=			
ANR	435527	Identifier	opline		435066	0					
ANR	435528	AdditiveExpression	cur_block -> start_opline + cur_block -> len - 1		435066	1		+			
ANR	435529	PtrMemberAccess	cur_block -> start_opline		435066	0					
ANR	435530	Identifier	cur_block		435066	0					
ANR	435531	Identifier	start_opline		435066	1					
ANR	435532	AdditiveExpression	cur_block -> len - 1		435066	1		-			
ANR	435533	PtrMemberAccess	cur_block -> len		435066	0					
ANR	435534	Identifier	cur_block		435066	0					
ANR	435535	Identifier	len		435066	1					
ANR	435536	PrimaryExpression	1		435066	1					
ANR	435537	IfStatement	if ( opline -> opcode == ZEND_OP_DATA )		435066	2					
ANR	435538	Condition	opline -> opcode == ZEND_OP_DATA	1220:6:41317:41346	435066	0	True				
ANR	435539	EqualityExpression	opline -> opcode == ZEND_OP_DATA		435066	0		==			
ANR	435540	PtrMemberAccess	opline -> opcode		435066	0					
ANR	435541	Identifier	opline		435066	0					
ANR	435542	Identifier	opcode		435066	1					
ANR	435543	Identifier	ZEND_OP_DATA		435066	1					
ANR	435544	CompoundStatement		75:38:2347:2347	435066	1					
ANR	435545	ExpressionStatement	opline --	1221:3:41354:41362	435066	0	True				
ANR	435546	PostIncDecOperationExpression	opline --		435066	0					
ANR	435547	Identifier	opline		435066	0					
ANR	435548	IncDec	--		435066	1					
ANR	435549	IfStatement	if ( cur_block -> op1_to )		435066	3					
ANR	435550	Condition	cur_block -> op1_to	1223:6:41374:41390	435066	0	True				
ANR	435551	PtrMemberAccess	cur_block -> op1_to		435066	0					
ANR	435552	Identifier	cur_block		435066	0					
ANR	435553	Identifier	op1_to		435066	1					
ANR	435554	CompoundStatement		78:25:2391:2391	435066	1					
ANR	435555	ExpressionStatement	ZEND_OP1 ( opline ) . opline_num = cur_block -> op1_to -> start_opline - new_opcodes	1224:3:41398:41473	435066	0	True				
ANR	435556	AssignmentExpression	ZEND_OP1 ( opline ) . opline_num = cur_block -> op1_to -> start_opline - new_opcodes		435066	0		=			
ANR	435557	MemberAccess	ZEND_OP1 ( opline ) . opline_num		435066	0					
ANR	435558	CallExpression	ZEND_OP1 ( opline )		435066	0					
ANR	435559	Callee	ZEND_OP1		435066	0					
ANR	435560	Identifier	ZEND_OP1		435066	0					
ANR	435561	ArgumentList	opline		435066	1					
ANR	435562	Argument	opline		435066	0					
ANR	435563	Identifier	opline		435066	0					
ANR	435564	Identifier	opline_num		435066	1					
ANR	435565	AdditiveExpression	cur_block -> op1_to -> start_opline - new_opcodes		435066	1		-			
ANR	435566	PtrMemberAccess	cur_block -> op1_to -> start_opline		435066	0					
ANR	435567	PtrMemberAccess	cur_block -> op1_to		435066	0					
ANR	435568	Identifier	cur_block		435066	0					
ANR	435569	Identifier	op1_to		435066	1					
ANR	435570	Identifier	start_opline		435066	1					
ANR	435571	Identifier	new_opcodes		435066	1					
ANR	435572	IfStatement	if ( cur_block -> op2_to )		435066	4					
ANR	435573	Condition	cur_block -> op2_to	1226:6:41485:41501	435066	0	True				
ANR	435574	PtrMemberAccess	cur_block -> op2_to		435066	0					
ANR	435575	Identifier	cur_block		435066	0					
ANR	435576	Identifier	op2_to		435066	1					
ANR	435577	CompoundStatement		81:25:2502:2502	435066	1					
ANR	435578	ExpressionStatement	ZEND_OP2 ( opline ) . opline_num = cur_block -> op2_to -> start_opline - new_opcodes	1227:3:41509:41584	435066	0	True				
ANR	435579	AssignmentExpression	ZEND_OP2 ( opline ) . opline_num = cur_block -> op2_to -> start_opline - new_opcodes		435066	0		=			
ANR	435580	MemberAccess	ZEND_OP2 ( opline ) . opline_num		435066	0					
ANR	435581	CallExpression	ZEND_OP2 ( opline )		435066	0					
ANR	435582	Callee	ZEND_OP2		435066	0					
ANR	435583	Identifier	ZEND_OP2		435066	0					
ANR	435584	ArgumentList	opline		435066	1					
ANR	435585	Argument	opline		435066	0					
ANR	435586	Identifier	opline		435066	0					
ANR	435587	Identifier	opline_num		435066	1					
ANR	435588	AdditiveExpression	cur_block -> op2_to -> start_opline - new_opcodes		435066	1		-			
ANR	435589	PtrMemberAccess	cur_block -> op2_to -> start_opline		435066	0					
ANR	435590	PtrMemberAccess	cur_block -> op2_to		435066	0					
ANR	435591	Identifier	cur_block		435066	0					
ANR	435592	Identifier	op2_to		435066	1					
ANR	435593	Identifier	start_opline		435066	1					
ANR	435594	Identifier	new_opcodes		435066	1					
ANR	435595	IfStatement	if ( cur_block -> ext_to )		435066	5					
ANR	435596	Condition	cur_block -> ext_to	1229:6:41596:41612	435066	0	True				
ANR	435597	PtrMemberAccess	cur_block -> ext_to		435066	0					
ANR	435598	Identifier	cur_block		435066	0					
ANR	435599	Identifier	ext_to		435066	1					
ANR	435600	CompoundStatement		84:25:2613:2613	435066	1					
ANR	435601	ExpressionStatement	opline -> extended_value = cur_block -> ext_to -> start_opline - new_opcodes	1230:3:41620:41690	435066	0	True				
ANR	435602	AssignmentExpression	opline -> extended_value = cur_block -> ext_to -> start_opline - new_opcodes		435066	0		=			
ANR	435603	PtrMemberAccess	opline -> extended_value		435066	0					
ANR	435604	Identifier	opline		435066	0					
ANR	435605	Identifier	extended_value		435066	1					
ANR	435606	AdditiveExpression	cur_block -> ext_to -> start_opline - new_opcodes		435066	1		-			
ANR	435607	PtrMemberAccess	cur_block -> ext_to -> start_opline		435066	0					
ANR	435608	PtrMemberAccess	cur_block -> ext_to		435066	0					
ANR	435609	Identifier	cur_block		435066	0					
ANR	435610	Identifier	ext_to		435066	1					
ANR	435611	Identifier	start_opline		435066	1					
ANR	435612	Identifier	new_opcodes		435066	1					
ANR	435613	ExpressionStatement	"print_block ( cur_block , new_opcodes , ""Out "" )"	1232:2:41698:41741	435066	6	True				
ANR	435614	CallExpression	"print_block ( cur_block , new_opcodes , ""Out "" )"		435066	0					
ANR	435615	Callee	print_block		435066	0					
ANR	435616	Identifier	print_block		435066	0					
ANR	435617	ArgumentList	cur_block		435066	1					
ANR	435618	Argument	cur_block		435066	0					
ANR	435619	Identifier	cur_block		435066	0					
ANR	435620	Argument	new_opcodes		435066	1					
ANR	435621	Identifier	new_opcodes		435066	0					
ANR	435622	Argument	"""Out """		435066	2					
ANR	435623	PrimaryExpression	"""Out """		435066	0					
ANR	435624	ExpressionStatement	efree ( op_array -> opcodes )	1234:1:41747:41771	435066	9	True				
ANR	435625	CallExpression	efree ( op_array -> opcodes )		435066	0					
ANR	435626	Callee	efree		435066	0					
ANR	435627	Identifier	efree		435066	0					
ANR	435628	ArgumentList	op_array -> opcodes		435066	1					
ANR	435629	Argument	op_array -> opcodes		435066	0					
ANR	435630	PtrMemberAccess	op_array -> opcodes		435066	0					
ANR	435631	Identifier	op_array		435066	0					
ANR	435632	Identifier	opcodes		435066	1					
ANR	435633	ExpressionStatement	"op_array -> opcodes = erealloc ( new_opcodes , op_array -> last * sizeof ( zend_op ) )"	1235:1:41774:41849	435066	10	True				
ANR	435634	AssignmentExpression	"op_array -> opcodes = erealloc ( new_opcodes , op_array -> last * sizeof ( zend_op ) )"		435066	0		=			
ANR	435635	PtrMemberAccess	op_array -> opcodes		435066	0					
ANR	435636	Identifier	op_array		435066	0					
ANR	435637	Identifier	opcodes		435066	1					
ANR	435638	CallExpression	"erealloc ( new_opcodes , op_array -> last * sizeof ( zend_op ) )"		435066	1					
ANR	435639	Callee	erealloc		435066	0					
ANR	435640	Identifier	erealloc		435066	0					
ANR	435641	ArgumentList	new_opcodes		435066	1					
ANR	435642	Argument	new_opcodes		435066	0					
ANR	435643	Identifier	new_opcodes		435066	0					
ANR	435644	Argument	op_array -> last * sizeof ( zend_op )		435066	1					
ANR	435645	MultiplicativeExpression	op_array -> last * sizeof ( zend_op )		435066	0		*			
ANR	435646	PtrMemberAccess	op_array -> last		435066	0					
ANR	435647	Identifier	op_array		435066	0					
ANR	435648	Identifier	last		435066	1					
ANR	435649	SizeofExpression	sizeof ( zend_op )		435066	1					
ANR	435650	Sizeof	sizeof		435066	0					
ANR	435651	SizeofOperand	zend_op		435066	1					
ANR	435652	IfStatement	if ( op_array -> early_binding != ( uint32_t ) - 1 )		435066	11					
ANR	435653	Condition	op_array -> early_binding != ( uint32_t ) - 1	1238:5:41890:41928	435066	0	True				
ANR	435654	EqualityExpression	op_array -> early_binding != ( uint32_t ) - 1		435066	0		!=			
ANR	435655	PtrMemberAccess	op_array -> early_binding		435066	0					
ANR	435656	Identifier	op_array		435066	0					
ANR	435657	Identifier	early_binding		435066	1					
ANR	435658	CastExpression	( uint32_t ) - 1		435066	1					
ANR	435659	CastTarget	uint32_t		435066	0					
ANR	435660	UnaryOperationExpression	- 1		435066	1					
ANR	435661	UnaryOperator	-		435066	0					
ANR	435662	PrimaryExpression	1		435066	1					
ANR	435663	CompoundStatement		95:2:2984:2996	435066	1					
ANR	435664	IdentifierDeclStatement	uint32_t * opline_num = & op_array -> early_binding ;	1239:2:41935:41982	435066	0	True				
ANR	435665	IdentifierDecl	* opline_num = & op_array -> early_binding		435066	0					
ANR	435666	IdentifierDeclType	uint32_t *		435066	0					
ANR	435667	Identifier	opline_num		435066	1					
ANR	435668	AssignmentExpression	* opline_num = & op_array -> early_binding		435066	2		=			
ANR	435669	Identifier	opline_num		435066	0					
ANR	435670	UnaryOperationExpression	& op_array -> early_binding		435066	1					
ANR	435671	UnaryOperator	&		435066	0					
ANR	435672	PtrMemberAccess	op_array -> early_binding		435066	1					
ANR	435673	Identifier	op_array		435066	0					
ANR	435674	Identifier	early_binding		435066	1					
ANR	435675	IdentifierDeclStatement	zend_op * end ;	1240:2:41986:41998	435066	1	True				
ANR	435676	IdentifierDecl	* end		435066	0					
ANR	435677	IdentifierDeclType	zend_op *		435066	0					
ANR	435678	Identifier	end		435066	1					
ANR	435679	ExpressionStatement	opline = op_array -> opcodes	1242:2:42003:42029	435066	2	True				
ANR	435680	AssignmentExpression	opline = op_array -> opcodes		435066	0		=			
ANR	435681	Identifier	opline		435066	0					
ANR	435682	PtrMemberAccess	op_array -> opcodes		435066	1					
ANR	435683	Identifier	op_array		435066	0					
ANR	435684	Identifier	opcodes		435066	1					
ANR	435685	ExpressionStatement	end = opline + op_array -> last	1243:2:42033:42062	435066	3	True				
ANR	435686	AssignmentExpression	end = opline + op_array -> last		435066	0		=			
ANR	435687	Identifier	end		435066	0					
ANR	435688	AdditiveExpression	opline + op_array -> last		435066	1		+			
ANR	435689	Identifier	opline		435066	0					
ANR	435690	PtrMemberAccess	op_array -> last		435066	1					
ANR	435691	Identifier	op_array		435066	0					
ANR	435692	Identifier	last		435066	1					
ANR	435693	WhileStatement	while ( opline < end )		435066	4					
ANR	435694	Condition	opline < end	1244:9:42073:42084	435066	0	True				
ANR	435695	RelationalExpression	opline < end		435066	0		<			
ANR	435696	Identifier	opline		435066	0					
ANR	435697	Identifier	end		435066	1					
ANR	435698	CompoundStatement		99:23:3085:3085	435066	1					
ANR	435699	IfStatement	if ( opline -> opcode == ZEND_DECLARE_INHERITED_CLASS_DELAYED )		435066	0					
ANR	435700	Condition	opline -> opcode == ZEND_DECLARE_INHERITED_CLASS_DELAYED	1245:7:42096:42149	435066	0	True				
ANR	435701	EqualityExpression	opline -> opcode == ZEND_DECLARE_INHERITED_CLASS_DELAYED		435066	0		==			
ANR	435702	PtrMemberAccess	opline -> opcode		435066	0					
ANR	435703	Identifier	opline		435066	0					
ANR	435704	Identifier	opcode		435066	1					
ANR	435705	Identifier	ZEND_DECLARE_INHERITED_CLASS_DELAYED		435066	1					
ANR	435706	CompoundStatement		100:63:3150:3150	435066	1					
ANR	435707	ExpressionStatement	* opline_num = opline - op_array -> opcodes	1246:4:42158:42198	435066	0	True				
ANR	435708	AssignmentExpression	* opline_num = opline - op_array -> opcodes		435066	0		=			
ANR	435709	UnaryOperationExpression	* opline_num		435066	0					
ANR	435710	UnaryOperator	*		435066	0					
ANR	435711	Identifier	opline_num		435066	1					
ANR	435712	AdditiveExpression	opline - op_array -> opcodes		435066	1		-			
ANR	435713	Identifier	opline		435066	0					
ANR	435714	PtrMemberAccess	op_array -> opcodes		435066	1					
ANR	435715	Identifier	op_array		435066	0					
ANR	435716	Identifier	opcodes		435066	1					
ANR	435717	ExpressionStatement	opline_num = & ZEND_RESULT ( opline ) . opline_num	1247:4:42204:42248	435066	1	True				
ANR	435718	AssignmentExpression	opline_num = & ZEND_RESULT ( opline ) . opline_num		435066	0		=			
ANR	435719	Identifier	opline_num		435066	0					
ANR	435720	UnaryOperationExpression	& ZEND_RESULT ( opline ) . opline_num		435066	1					
ANR	435721	UnaryOperator	&		435066	0					
ANR	435722	MemberAccess	ZEND_RESULT ( opline ) . opline_num		435066	1					
ANR	435723	CallExpression	ZEND_RESULT ( opline )		435066	0					
ANR	435724	Callee	ZEND_RESULT		435066	0					
ANR	435725	Identifier	ZEND_RESULT		435066	0					
ANR	435726	ArgumentList	opline		435066	1					
ANR	435727	Argument	opline		435066	0					
ANR	435728	Identifier	opline		435066	0					
ANR	435729	Identifier	opline_num		435066	1					
ANR	435730	ExpressionStatement	++ opline	1249:3:42258:42266	435066	1	True				
ANR	435731	UnaryExpression	++ opline		435066	0					
ANR	435732	IncDec	++		435066	0					
ANR	435733	Identifier	opline		435066	1					
ANR	435734	ExpressionStatement	* opline_num = - 1	1251:2:42274:42290	435066	5	True				
ANR	435735	AssignmentExpression	* opline_num = - 1		435066	0		=			
ANR	435736	UnaryOperationExpression	* opline_num		435066	0					
ANR	435737	UnaryOperator	*		435066	0					
ANR	435738	Identifier	opline_num		435066	1					
ANR	435739	UnaryOperationExpression	- 1		435066	1					
ANR	435740	UnaryOperator	-		435066	0					
ANR	435741	PrimaryExpression	1		435066	1					
ANR	435742	ReturnType	static void		435066	1					
ANR	435743	Identifier	assemble_code_blocks		435066	2					
ANR	435744	ParameterList	"zend_cfg * cfg , zend_op_array * op_array"		435066	3					
ANR	435745	Parameter	zend_cfg * cfg	1145:33:38961:38973	435066	0	True				
ANR	435746	ParameterType	zend_cfg *		435066	0					
ANR	435747	Identifier	cfg		435066	1					
ANR	435748	Parameter	zend_op_array * op_array	1145:48:38976:38998	435066	1	True				
ANR	435749	ParameterType	zend_op_array *		435066	0					
ANR	435750	Identifier	op_array		435066	1					
ANR	435751	CFGEntryNode	ENTRY		435066		True				
ANR	435752	CFGExitNode	EXIT		435066		True				
ANR	435753	CFGErrorNode	ERROR		435066		True				
ANR	435754	CFGErrorNode	ERROR		435066		True				
ANR	435755	Symbol	* cfg -> loop_brk		435066						
ANR	435756	Symbol	ZEND_OP1 ( opline ) . opline_num		435066						
ANR	435757	Symbol	next -> next		435066						
ANR	435758	Symbol	ZEND_OP_DATA		435066						
ANR	435759	Symbol	* next		435066						
ANR	435760	Symbol	ZEND_OP2_TYPE		435066						
ANR	435761	Symbol	* * cfg -> loop_start		435066						
ANR	435762	Symbol	opline -> extended_value		435066						
ANR	435763	Symbol	cfg -> loop_brk		435066						
ANR	435764	Symbol	opline		435066						
ANR	435765	Symbol	* cur_block -> op2_to		435066						
ANR	435766	Symbol	cur_block -> ext_to -> start_opline		435066						
ANR	435767	Symbol	op_array -> early_binding		435066						
ANR	435768	Symbol	* cur_block		435066						
ANR	435769	Symbol	cur_block -> start_opline		435066						
ANR	435770	Symbol	cur_block -> op1_to		435066						
ANR	435771	Symbol	op_array -> brk_cont_array [ i ] . cont		435066						
ANR	435772	Symbol	& ZEND_RESULT ( opline ) . opline_num		435066						
ANR	435773	Symbol	& op_array -> early_binding		435066						
ANR	435774	Symbol	erealloc		435066						
ANR	435775	Symbol	( opline - 1 ) -> opcode		435066						
ANR	435776	Symbol	cur_block -> follow_to		435066						
ANR	435777	Symbol	IS_CONST		435066						
ANR	435778	Symbol	* * i		435066						
ANR	435779	Symbol	* * * cfg		435066						
ANR	435780	Symbol	NULL		435066						
ANR	435781	Symbol	cfg -> loop_cont [ i ] -> start_opline		435066						
ANR	435782	Symbol	& ZEND_OP1_LITERAL		435066						
ANR	435783	Symbol	* op_array		435066						
ANR	435784	Symbol	op_array -> last		435066						
ANR	435785	Symbol	cur_block -> len		435066						
ANR	435786	Symbol	* opline_num		435066						
ANR	435787	Symbol	* cfg		435066						
ANR	435788	Symbol	cur_block -> next		435066						
ANR	435789	Symbol	ZEND_OP2 ( opline ) . opline_num		435066						
ANR	435790	Symbol	* cur_block -> op1_to		435066						
ANR	435791	Symbol	cur_block -> op2_to		435066						
ANR	435792	Symbol	* * cfg		435066						
ANR	435793	Symbol	cfg -> loop_start		435066						
ANR	435794	Symbol	opline_num		435066						
ANR	435795	Symbol	* * op_array		435066						
ANR	435796	Symbol	next		435066						
ANR	435797	Symbol	_opl		435066						
ANR	435798	Symbol	op_array -> brk_cont_array [ i ] . brk		435066						
ANR	435799	Symbol	cfg -> blocks		435066						
ANR	435800	Symbol	cur_block -> access		435066						
ANR	435801	Symbol	emalloc		435066						
ANR	435802	Symbol	op_array -> brk_cont_array		435066						
ANR	435803	Symbol	op_array -> opcodes		435066						
ANR	435804	Symbol	cur_block		435066						
ANR	435805	Symbol	next -> access		435066						
ANR	435806	Symbol	cfg -> loop_start [ i ] -> start_opline		435066						
ANR	435807	Symbol	& ZEND_RESULT		435066						
ANR	435808	Symbol	ZEND_RESULT		435066						
ANR	435809	Symbol	end		435066						
ANR	435810	Symbol	ZEND_DECLARE_INHERITED_CLASS_DELAYED		435066						
ANR	435811	Symbol	cfg -> loop_cont		435066						
ANR	435812	Symbol	* * cur_block		435066						
ANR	435813	Symbol	& ZEND_OP2_LITERAL		435066						
ANR	435814	Symbol	* cur_block -> ext_to		435066						
ANR	435815	Symbol	cfg		435066						
ANR	435816	Symbol	* op_array -> brk_cont_array		435066						
ANR	435817	Symbol	op_array -> brk_cont_array [ i ] . start		435066						
ANR	435818	Symbol	blocks		435066						
ANR	435819	Symbol	cur_block -> ext_to		435066						
ANR	435820	Symbol	i		435066						
ANR	435821	Symbol	j		435066						
ANR	435822	Symbol	* * cfg -> loop_brk		435066						
ANR	435823	Symbol	ZEND_OP1		435066						
ANR	435824	Symbol	op_array -> last_try_catch		435066						
ANR	435825	Symbol	op_array -> last_brk_cont		435066						
ANR	435826	Symbol	ZEND_OP2		435066						
ANR	435827	Symbol	new_opcodes		435066						
ANR	435828	Symbol	ZEND_OP1_TYPE		435066						
ANR	435829	Symbol	cfg -> loop_brk [ i ] -> start_opline		435066						
ANR	435830	Symbol	cur_block -> op1_to -> start_opline		435066						
ANR	435831	Symbol	ZEND_JMP		435066						
ANR	435832	Symbol	* i		435066						
ANR	435833	Symbol	* opline		435066						
ANR	435834	Symbol	* cfg -> loop_start		435066						
ANR	435835	Symbol	* cfg -> loop_cont		435066						
ANR	435836	Symbol	opline -> opcode		435066						
ANR	435837	Symbol	* * cfg -> loop_cont		435066						
ANR	435838	Symbol	cur_block -> op2_to -> start_opline		435066						
ANR	435839	Symbol	op_array		435066						
ANR	435840	Function	zend_jmp_optimization	1255:0:42298:59957							
ANR	435841	FunctionDef	"zend_jmp_optimization (zend_code_block * block , zend_op_array * op_array , zend_code_block * blocks , zend_cfg * cfg , zend_optimizer_ctx * ctx)"		435840	0					
ANR	435842	CompoundStatement		1256:0:42446:59957	435840	0					
ANR	435843	IdentifierDeclStatement	zend_op * last_op = ( block -> start_opline + block -> len - 1 ) ;	1258:1:42504:42561	435840	0	True				
ANR	435844	IdentifierDecl	* last_op = ( block -> start_opline + block -> len - 1 )		435840	0					
ANR	435845	IdentifierDeclType	zend_op *		435840	0					
ANR	435846	Identifier	last_op		435840	1					
ANR	435847	AssignmentExpression	* last_op = ( block -> start_opline + block -> len - 1 )		435840	2		=			
ANR	435848	Identifier	last_op		435840	0					
ANR	435849	AdditiveExpression	block -> start_opline + block -> len - 1		435840	1		+			
ANR	435850	PtrMemberAccess	block -> start_opline		435840	0					
ANR	435851	Identifier	block		435840	0					
ANR	435852	Identifier	start_opline		435840	1					
ANR	435853	AdditiveExpression	block -> len - 1		435840	1		-			
ANR	435854	PtrMemberAccess	block -> len		435840	0					
ANR	435855	Identifier	block		435840	0					
ANR	435856	Identifier	len		435840	1					
ANR	435857	PrimaryExpression	1		435840	1					
ANR	435858	IfStatement	if ( ! block -> len )		435840	1					
ANR	435859	Condition	! block -> len	1260:5:42569:42579	435840	0	True				
ANR	435860	UnaryOperationExpression	! block -> len		435840	0					
ANR	435861	UnaryOperator	!		435840	0					
ANR	435862	PtrMemberAccess	block -> len		435840	1					
ANR	435863	Identifier	block		435840	0					
ANR	435864	Identifier	len		435840	1					
ANR	435865	CompoundStatement		5:18:135:135	435840	1					
ANR	435866	ReturnStatement	return ;	1261:2:42586:42592	435840	0	True				
ANR	435867	SwitchStatement	switch ( last_op -> opcode )		435840	2					
ANR	435868	Condition	last_op -> opcode	1263:9:42606:42620	435840	0	True				
ANR	435869	PtrMemberAccess	last_op -> opcode		435840	0					
ANR	435870	Identifier	last_op		435840	0					
ANR	435871	Identifier	opcode		435840	1					
ANR	435872	CompoundStatement		8:26:176:176	435840	1					
ANR	435873	Label	case ZEND_JMP :	1264:2:42627:42640	435840	0	True				
ANR	435874	Identifier	ZEND_JMP		435840	0					
ANR	435875	CompoundStatement		12:4:255:290	435840	1					
ANR	435876	IdentifierDeclStatement	zend_op * target = block -> op1_to -> start_opline ;	1266:4:42651:42696	435840	0	True				
ANR	435877	IdentifierDecl	* target = block -> op1_to -> start_opline		435840	0					
ANR	435878	IdentifierDeclType	zend_op *		435840	0					
ANR	435879	Identifier	target		435840	1					
ANR	435880	AssignmentExpression	* target = block -> op1_to -> start_opline		435840	2		=			
ANR	435881	Identifier	target		435840	0					
ANR	435882	PtrMemberAccess	block -> op1_to -> start_opline		435840	1					
ANR	435883	PtrMemberAccess	block -> op1_to		435840	0					
ANR	435884	Identifier	block		435840	0					
ANR	435885	Identifier	op1_to		435840	1					
ANR	435886	Identifier	start_opline		435840	1					
ANR	435887	IdentifierDeclStatement	zend_code_block * next = block -> next ;	1267:4:42702:42737	435840	1	True				
ANR	435888	IdentifierDecl	* next = block -> next		435840	0					
ANR	435889	IdentifierDeclType	zend_code_block *		435840	0					
ANR	435890	Identifier	next		435840	1					
ANR	435891	AssignmentExpression	* next = block -> next		435840	2		=			
ANR	435892	Identifier	next		435840	0					
ANR	435893	PtrMemberAccess	block -> next		435840	1					
ANR	435894	Identifier	block		435840	0					
ANR	435895	Identifier	next		435840	1					
ANR	435896	WhileStatement	while ( next && ! next -> access )		435840	2					
ANR	435897	Condition	next && ! next -> access	1269:11:42751:42771	435840	0	True				
ANR	435898	AndExpression	next && ! next -> access		435840	0		&&			
ANR	435899	Identifier	next		435840	0					
ANR	435900	UnaryOperationExpression	! next -> access		435840	1					
ANR	435901	UnaryOperator	!		435840	0					
ANR	435902	PtrMemberAccess	next -> access		435840	1					
ANR	435903	Identifier	next		435840	0					
ANR	435904	Identifier	access		435840	1					
ANR	435905	CompoundStatement		14:34:327:327	435840	1					
ANR	435906	ExpressionStatement	next = next -> next	1271:5:42806:42823	435840	0	True				
ANR	435907	AssignmentExpression	next = next -> next		435840	0		=			
ANR	435908	Identifier	next		435840	0					
ANR	435909	PtrMemberAccess	next -> next		435840	1					
ANR	435910	Identifier	next		435840	0					
ANR	435911	Identifier	next		435840	1					
ANR	435912	IfStatement	if ( block -> op1_to == next )		435840	3					
ANR	435913	Condition	block -> op1_to == next	1275:8:42867:42887	435840	0	True				
ANR	435914	EqualityExpression	block -> op1_to == next		435840	0		==			
ANR	435915	PtrMemberAccess	block -> op1_to		435840	0					
ANR	435916	Identifier	block		435840	0					
ANR	435917	Identifier	op1_to		435840	1					
ANR	435918	Identifier	next		435840	1					
ANR	435919	CompoundStatement		20:31:443:443	435840	1					
ANR	435920	ExpressionStatement	block -> follow_to = block -> op1_to	1276:5:42897:42929	435840	0	True				
ANR	435921	AssignmentExpression	block -> follow_to = block -> op1_to		435840	0		=			
ANR	435922	PtrMemberAccess	block -> follow_to		435840	0					
ANR	435923	Identifier	block		435840	0					
ANR	435924	Identifier	follow_to		435840	1					
ANR	435925	PtrMemberAccess	block -> op1_to		435840	1					
ANR	435926	Identifier	block		435840	0					
ANR	435927	Identifier	op1_to		435840	1					
ANR	435928	ExpressionStatement	block -> op1_to = NULL	1277:5:42936:42956	435840	1	True				
ANR	435929	AssignmentExpression	block -> op1_to = NULL		435840	0		=			
ANR	435930	PtrMemberAccess	block -> op1_to		435840	0					
ANR	435931	Identifier	block		435840	0					
ANR	435932	Identifier	op1_to		435840	1					
ANR	435933	Identifier	NULL		435840	1					
ANR	435934	ExpressionStatement	MAKE_NOP ( last_op )	1278:5:42963:42980	435840	2	True				
ANR	435935	CallExpression	MAKE_NOP ( last_op )		435840	0					
ANR	435936	Callee	MAKE_NOP		435840	0					
ANR	435937	Identifier	MAKE_NOP		435840	0					
ANR	435938	ArgumentList	last_op		435840	1					
ANR	435939	Argument	last_op		435840	0					
ANR	435940	Identifier	last_op		435840	0					
ANR	435941	ExpressionStatement	block -> len --	1279:5:42987:42999	435840	3	True				
ANR	435942	PostIncDecOperationExpression	block -> len --		435840	0					
ANR	435943	PtrMemberAccess	block -> len		435840	0					
ANR	435944	Identifier	block		435840	0					
ANR	435945	Identifier	len		435840	1					
ANR	435946	IncDec	--		435840	1					
ANR	435947	IfStatement	if ( block -> len == 0 )		435840	4					
ANR	435948	Condition	block -> len == 0	1280:9:43010:43024	435840	0	True				
ANR	435949	EqualityExpression	block -> len == 0		435840	0		==			
ANR	435950	PtrMemberAccess	block -> len		435840	0					
ANR	435951	Identifier	block		435840	0					
ANR	435952	Identifier	len		435840	1					
ANR	435953	PrimaryExpression	0		435840	1					
ANR	435954	CompoundStatement		25:26:580:580	435840	1					
ANR	435955	ExpressionStatement	"delete_code_block ( block , ctx )"	1282:6:43081:43110	435840	0	True				
ANR	435956	CallExpression	"delete_code_block ( block , ctx )"		435840	0					
ANR	435957	Callee	delete_code_block		435840	0					
ANR	435958	Identifier	delete_code_block		435840	0					
ANR	435959	ArgumentList	block		435840	1					
ANR	435960	Argument	block		435840	0					
ANR	435961	Identifier	block		435840	0					
ANR	435962	Argument	ctx		435840	1					
ANR	435963	Identifier	ctx		435840	0					
ANR	435964	BreakStatement	break ;	1284:5:43124:43129	435840	5	True				
ANR	435965	IfStatement	if ( ( ( target -> opcode == ZEND_JMP && block -> op1_to != block -> op1_to -> op1_to ) || target -> opcode == ZEND_JMPZNZ ) && ! block -> op1_to -> protected )		435840	4					
ANR	435966	Condition	( ( target -> opcode == ZEND_JMP && block -> op1_to != block -> op1_to -> op1_to ) || target -> opcode == ZEND_JMPZNZ ) && ! block -> op1_to -> protected	1287:8:43146:43294	435840	0	True				
ANR	435967	AndExpression	( ( target -> opcode == ZEND_JMP && block -> op1_to != block -> op1_to -> op1_to ) || target -> opcode == ZEND_JMPZNZ ) && ! block -> op1_to -> protected		435840	0		&&			
ANR	435968	OrExpression	( target -> opcode == ZEND_JMP && block -> op1_to != block -> op1_to -> op1_to ) || target -> opcode == ZEND_JMPZNZ		435840	0		||			
ANR	435969	AndExpression	target -> opcode == ZEND_JMP && block -> op1_to != block -> op1_to -> op1_to		435840	0		&&			
ANR	435970	EqualityExpression	target -> opcode == ZEND_JMP		435840	0		==			
ANR	435971	PtrMemberAccess	target -> opcode		435840	0					
ANR	435972	Identifier	target		435840	0					
ANR	435973	Identifier	opcode		435840	1					
ANR	435974	Identifier	ZEND_JMP		435840	1					
ANR	435975	EqualityExpression	block -> op1_to != block -> op1_to -> op1_to		435840	1		!=			
ANR	435976	PtrMemberAccess	block -> op1_to		435840	0					
ANR	435977	Identifier	block		435840	0					
ANR	435978	Identifier	op1_to		435840	1					
ANR	435979	PtrMemberAccess	block -> op1_to -> op1_to		435840	1					
ANR	435980	PtrMemberAccess	block -> op1_to		435840	0					
ANR	435981	Identifier	block		435840	0					
ANR	435982	Identifier	op1_to		435840	1					
ANR	435983	Identifier	op1_to		435840	1					
ANR	435984	EqualityExpression	target -> opcode == ZEND_JMPZNZ		435840	1		==			
ANR	435985	PtrMemberAccess	target -> opcode		435840	0					
ANR	435986	Identifier	target		435840	0					
ANR	435987	Identifier	opcode		435840	1					
ANR	435988	Identifier	ZEND_JMPZNZ		435840	1					
ANR	435989	UnaryOperationExpression	! block -> op1_to -> protected		435840	1					
ANR	435990	UnaryOperator	!		435840	0					
ANR	435991	PtrMemberAccess	block -> op1_to -> protected		435840	1					
ANR	435992	PtrMemberAccess	block -> op1_to		435840	0					
ANR	435993	Identifier	block		435840	0					
ANR	435994	Identifier	op1_to		435840	1					
ANR	435995	Identifier	protected		435840	1					
ANR	435996	CompoundStatement		35:32:850:850	435840	1					
ANR	435997	ExpressionStatement	* last_op = * target	1293:5:43392:43410	435840	0	True				
ANR	435998	AssignmentExpression	* last_op = * target		435840	0		=			
ANR	435999	UnaryOperationExpression	* last_op		435840	0					
ANR	436000	UnaryOperator	*		435840	0					
ANR	436001	Identifier	last_op		435840	1					
ANR	436002	UnaryOperationExpression	* target		435840	1					
ANR	436003	UnaryOperator	*		435840	0					
ANR	436004	Identifier	target		435840	1					
ANR	436005	IfStatement	if ( ZEND_OP1_TYPE ( last_op ) == IS_CONST )		435840	1					
ANR	436006	Condition	ZEND_OP1_TYPE ( last_op ) == IS_CONST	1294:9:43421:43454	435840	0	True				
ANR	436007	EqualityExpression	ZEND_OP1_TYPE ( last_op ) == IS_CONST		435840	0		==			
ANR	436008	CallExpression	ZEND_OP1_TYPE ( last_op )		435840	0					
ANR	436009	Callee	ZEND_OP1_TYPE		435840	0					
ANR	436010	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	436011	ArgumentList	last_op		435840	1					
ANR	436012	Argument	last_op		435840	0					
ANR	436013	Identifier	last_op		435840	0					
ANR	436014	Identifier	IS_CONST		435840	1					
ANR	436015	CompoundStatement		40:6:1018:1053	435840	1					
ANR	436016	IdentifierDeclStatement	zval zv = ZEND_OP1_LITERAL ( last_op ) ;	1295:6:43465:43500	435840	0	True				
ANR	436017	IdentifierDecl	zv = ZEND_OP1_LITERAL ( last_op )		435840	0					
ANR	436018	IdentifierDeclType	zval		435840	0					
ANR	436019	Identifier	zv		435840	1					
ANR	436020	AssignmentExpression	zv = ZEND_OP1_LITERAL ( last_op )		435840	2		=			
ANR	436021	Identifier	zv		435840	0					
ANR	436022	CallExpression	ZEND_OP1_LITERAL ( last_op )		435840	1					
ANR	436023	Callee	ZEND_OP1_LITERAL		435840	0					
ANR	436024	Identifier	ZEND_OP1_LITERAL		435840	0					
ANR	436025	ArgumentList	last_op		435840	1					
ANR	436026	Argument	last_op		435840	0					
ANR	436027	Identifier	last_op		435840	0					
ANR	436028	ExpressionStatement	zval_copy_ctor ( & zv )	1296:6:43508:43527	435840	1	True				
ANR	436029	CallExpression	zval_copy_ctor ( & zv )		435840	0					
ANR	436030	Callee	zval_copy_ctor		435840	0					
ANR	436031	Identifier	zval_copy_ctor		435840	0					
ANR	436032	ArgumentList	& zv		435840	1					
ANR	436033	Argument	& zv		435840	0					
ANR	436034	UnaryOperationExpression	& zv		435840	0					
ANR	436035	UnaryOperator	&		435840	0					
ANR	436036	Identifier	zv		435840	1					
ANR	436037	ExpressionStatement	"last_op -> op1 . constant = zend_optimizer_add_literal ( op_array , & zv )"	1297:6:43535:43600	435840	2	True				
ANR	436038	AssignmentExpression	"last_op -> op1 . constant = zend_optimizer_add_literal ( op_array , & zv )"		435840	0		=			
ANR	436039	MemberAccess	last_op -> op1 . constant		435840	0					
ANR	436040	PtrMemberAccess	last_op -> op1		435840	0					
ANR	436041	Identifier	last_op		435840	0					
ANR	436042	Identifier	op1		435840	1					
ANR	436043	Identifier	constant		435840	1					
ANR	436044	CallExpression	"zend_optimizer_add_literal ( op_array , & zv )"		435840	1					
ANR	436045	Callee	zend_optimizer_add_literal		435840	0					
ANR	436046	Identifier	zend_optimizer_add_literal		435840	0					
ANR	436047	ArgumentList	op_array		435840	1					
ANR	436048	Argument	op_array		435840	0					
ANR	436049	Identifier	op_array		435840	0					
ANR	436050	Argument	& zv		435840	1					
ANR	436051	UnaryOperationExpression	& zv		435840	0					
ANR	436052	UnaryOperator	&		435840	0					
ANR	436053	Identifier	zv		435840	1					
ANR	436054	ExpressionStatement	"del_source ( block , block -> op1_to )"	1299:5:43614:43646	435840	2	True				
ANR	436055	CallExpression	"del_source ( block , block -> op1_to )"		435840	0					
ANR	436056	Callee	del_source		435840	0					
ANR	436057	Identifier	del_source		435840	0					
ANR	436058	ArgumentList	block		435840	1					
ANR	436059	Argument	block		435840	0					
ANR	436060	Identifier	block		435840	0					
ANR	436061	Argument	block -> op1_to		435840	1					
ANR	436062	PtrMemberAccess	block -> op1_to		435840	0					
ANR	436063	Identifier	block		435840	0					
ANR	436064	Identifier	op1_to		435840	1					
ANR	436065	IfStatement	if ( block -> op1_to -> op2_to )		435840	3					
ANR	436066	Condition	block -> op1_to -> op2_to	1300:9:43657:43677	435840	0	True				
ANR	436067	PtrMemberAccess	block -> op1_to -> op2_to		435840	0					
ANR	436068	PtrMemberAccess	block -> op1_to		435840	0					
ANR	436069	Identifier	block		435840	0					
ANR	436070	Identifier	op1_to		435840	1					
ANR	436071	Identifier	op2_to		435840	1					
ANR	436072	CompoundStatement		45:32:1233:1233	435840	1					
ANR	436073	ExpressionStatement	block -> op2_to = block -> op1_to -> op2_to	1301:6:43688:43725	435840	0	True				
ANR	436074	AssignmentExpression	block -> op2_to = block -> op1_to -> op2_to		435840	0		=			
ANR	436075	PtrMemberAccess	block -> op2_to		435840	0					
ANR	436076	Identifier	block		435840	0					
ANR	436077	Identifier	op2_to		435840	1					
ANR	436078	PtrMemberAccess	block -> op1_to -> op2_to		435840	1					
ANR	436079	PtrMemberAccess	block -> op1_to		435840	0					
ANR	436080	Identifier	block		435840	0					
ANR	436081	Identifier	op1_to		435840	1					
ANR	436082	Identifier	op2_to		435840	1					
ANR	436083	ExpressionStatement	"ADD_SOURCE ( block , block -> op2_to )"	1302:6:43733:43765	435840	1	True				
ANR	436084	CallExpression	"ADD_SOURCE ( block , block -> op2_to )"		435840	0					
ANR	436085	Callee	ADD_SOURCE		435840	0					
ANR	436086	Identifier	ADD_SOURCE		435840	0					
ANR	436087	ArgumentList	block		435840	1					
ANR	436088	Argument	block		435840	0					
ANR	436089	Identifier	block		435840	0					
ANR	436090	Argument	block -> op2_to		435840	1					
ANR	436091	PtrMemberAccess	block -> op2_to		435840	0					
ANR	436092	Identifier	block		435840	0					
ANR	436093	Identifier	op2_to		435840	1					
ANR	436094	IfStatement	if ( block -> op1_to -> ext_to )		435840	4					
ANR	436095	Condition	block -> op1_to -> ext_to	1304:9:43783:43803	435840	0	True				
ANR	436096	PtrMemberAccess	block -> op1_to -> ext_to		435840	0					
ANR	436097	PtrMemberAccess	block -> op1_to		435840	0					
ANR	436098	Identifier	block		435840	0					
ANR	436099	Identifier	op1_to		435840	1					
ANR	436100	Identifier	ext_to		435840	1					
ANR	436101	CompoundStatement		49:32:1359:1359	435840	1					
ANR	436102	ExpressionStatement	block -> ext_to = block -> op1_to -> ext_to	1305:6:43814:43851	435840	0	True				
ANR	436103	AssignmentExpression	block -> ext_to = block -> op1_to -> ext_to		435840	0		=			
ANR	436104	PtrMemberAccess	block -> ext_to		435840	0					
ANR	436105	Identifier	block		435840	0					
ANR	436106	Identifier	ext_to		435840	1					
ANR	436107	PtrMemberAccess	block -> op1_to -> ext_to		435840	1					
ANR	436108	PtrMemberAccess	block -> op1_to		435840	0					
ANR	436109	Identifier	block		435840	0					
ANR	436110	Identifier	op1_to		435840	1					
ANR	436111	Identifier	ext_to		435840	1					
ANR	436112	ExpressionStatement	"ADD_SOURCE ( block , block -> ext_to )"	1306:6:43859:43891	435840	1	True				
ANR	436113	CallExpression	"ADD_SOURCE ( block , block -> ext_to )"		435840	0					
ANR	436114	Callee	ADD_SOURCE		435840	0					
ANR	436115	Identifier	ADD_SOURCE		435840	0					
ANR	436116	ArgumentList	block		435840	1					
ANR	436117	Argument	block		435840	0					
ANR	436118	Identifier	block		435840	0					
ANR	436119	Argument	block -> ext_to		435840	1					
ANR	436120	PtrMemberAccess	block -> ext_to		435840	0					
ANR	436121	Identifier	block		435840	0					
ANR	436122	Identifier	ext_to		435840	1					
ANR	436123	IfStatement	if ( block -> op1_to -> op1_to )		435840	5					
ANR	436124	Condition	block -> op1_to -> op1_to	1308:9:43909:43929	435840	0	True				
ANR	436125	PtrMemberAccess	block -> op1_to -> op1_to		435840	0					
ANR	436126	PtrMemberAccess	block -> op1_to		435840	0					
ANR	436127	Identifier	block		435840	0					
ANR	436128	Identifier	op1_to		435840	1					
ANR	436129	Identifier	op1_to		435840	1					
ANR	436130	CompoundStatement		53:32:1485:1485	435840	1					
ANR	436131	ExpressionStatement	block -> op1_to = block -> op1_to -> op1_to	1309:6:43940:43977	435840	0	True				
ANR	436132	AssignmentExpression	block -> op1_to = block -> op1_to -> op1_to		435840	0		=			
ANR	436133	PtrMemberAccess	block -> op1_to		435840	0					
ANR	436134	Identifier	block		435840	0					
ANR	436135	Identifier	op1_to		435840	1					
ANR	436136	PtrMemberAccess	block -> op1_to -> op1_to		435840	1					
ANR	436137	PtrMemberAccess	block -> op1_to		435840	0					
ANR	436138	Identifier	block		435840	0					
ANR	436139	Identifier	op1_to		435840	1					
ANR	436140	Identifier	op1_to		435840	1					
ANR	436141	ExpressionStatement	"ADD_SOURCE ( block , block -> op1_to )"	1310:6:43985:44017	435840	1	True				
ANR	436142	CallExpression	"ADD_SOURCE ( block , block -> op1_to )"		435840	0					
ANR	436143	Callee	ADD_SOURCE		435840	0					
ANR	436144	Identifier	ADD_SOURCE		435840	0					
ANR	436145	ArgumentList	block		435840	1					
ANR	436146	Argument	block		435840	0					
ANR	436147	Identifier	block		435840	0					
ANR	436148	Argument	block -> op1_to		435840	1					
ANR	436149	PtrMemberAccess	block -> op1_to		435840	0					
ANR	436150	Identifier	block		435840	0					
ANR	436151	Identifier	op1_to		435840	1					
ANR	436152	ElseStatement	else		435840	0					
ANR	436153	CompoundStatement		56:12:1584:1584	435840	0					
ANR	436154	ExpressionStatement	block -> op1_to = NULL	1312:6:44039:44059	435840	0	True				
ANR	436155	AssignmentExpression	block -> op1_to = NULL		435840	0		=			
ANR	436156	PtrMemberAccess	block -> op1_to		435840	0					
ANR	436157	Identifier	block		435840	0					
ANR	436158	Identifier	op1_to		435840	1					
ANR	436159	Identifier	NULL		435840	1					
ANR	436160	ElseStatement	else		435840	0					
ANR	436161	IfStatement	if ( target -> opcode == ZEND_RETURN || target -> opcode == ZEND_RETURN_BY_REF || target -> opcode == ZEND_FAST_RET || target -> opcode == ZEND_EXIT )		435840	0					
ANR	436162	Condition	target -> opcode == ZEND_RETURN || target -> opcode == ZEND_RETURN_BY_REF || target -> opcode == ZEND_FAST_RET || target -> opcode == ZEND_EXIT	1314:15:44083:44268	435840	0	True				
ANR	436163	OrExpression	target -> opcode == ZEND_RETURN || target -> opcode == ZEND_RETURN_BY_REF || target -> opcode == ZEND_FAST_RET || target -> opcode == ZEND_EXIT		435840	0		||			
ANR	436164	EqualityExpression	target -> opcode == ZEND_RETURN		435840	0		==			
ANR	436165	PtrMemberAccess	target -> opcode		435840	0					
ANR	436166	Identifier	target		435840	0					
ANR	436167	Identifier	opcode		435840	1					
ANR	436168	Identifier	ZEND_RETURN		435840	1					
ANR	436169	OrExpression	target -> opcode == ZEND_RETURN_BY_REF || target -> opcode == ZEND_FAST_RET || target -> opcode == ZEND_EXIT		435840	1		||			
ANR	436170	EqualityExpression	target -> opcode == ZEND_RETURN_BY_REF		435840	0		==			
ANR	436171	PtrMemberAccess	target -> opcode		435840	0					
ANR	436172	Identifier	target		435840	0					
ANR	436173	Identifier	opcode		435840	1					
ANR	436174	Identifier	ZEND_RETURN_BY_REF		435840	1					
ANR	436175	OrExpression	target -> opcode == ZEND_FAST_RET || target -> opcode == ZEND_EXIT		435840	1		||			
ANR	436176	EqualityExpression	target -> opcode == ZEND_FAST_RET		435840	0		==			
ANR	436177	PtrMemberAccess	target -> opcode		435840	0					
ANR	436178	Identifier	target		435840	0					
ANR	436179	Identifier	opcode		435840	1					
ANR	436180	Identifier	ZEND_FAST_RET		435840	1					
ANR	436181	EqualityExpression	target -> opcode == ZEND_EXIT		435840	1		==			
ANR	436182	PtrMemberAccess	target -> opcode		435840	0					
ANR	436183	Identifier	target		435840	0					
ANR	436184	Identifier	opcode		435840	1					
ANR	436185	Identifier	ZEND_EXIT		435840	1					
ANR	436186	CompoundStatement		62:43:1824:1824	435840	1					
ANR	436187	ExpressionStatement	* last_op = * target	1319:5:44326:44344	435840	0	True				
ANR	436188	AssignmentExpression	* last_op = * target		435840	0		=			
ANR	436189	UnaryOperationExpression	* last_op		435840	0					
ANR	436190	UnaryOperator	*		435840	0					
ANR	436191	Identifier	last_op		435840	1					
ANR	436192	UnaryOperationExpression	* target		435840	1					
ANR	436193	UnaryOperator	*		435840	0					
ANR	436194	Identifier	target		435840	1					
ANR	436195	IfStatement	if ( ZEND_OP1_TYPE ( last_op ) == IS_CONST )		435840	1					
ANR	436196	Condition	ZEND_OP1_TYPE ( last_op ) == IS_CONST	1320:9:44355:44388	435840	0	True				
ANR	436197	EqualityExpression	ZEND_OP1_TYPE ( last_op ) == IS_CONST		435840	0		==			
ANR	436198	CallExpression	ZEND_OP1_TYPE ( last_op )		435840	0					
ANR	436199	Callee	ZEND_OP1_TYPE		435840	0					
ANR	436200	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	436201	ArgumentList	last_op		435840	1					
ANR	436202	Argument	last_op		435840	0					
ANR	436203	Identifier	last_op		435840	0					
ANR	436204	Identifier	IS_CONST		435840	1					
ANR	436205	CompoundStatement		66:6:1952:1987	435840	1					
ANR	436206	IdentifierDeclStatement	zval zv = ZEND_OP1_LITERAL ( last_op ) ;	1321:6:44399:44434	435840	0	True				
ANR	436207	IdentifierDecl	zv = ZEND_OP1_LITERAL ( last_op )		435840	0					
ANR	436208	IdentifierDeclType	zval		435840	0					
ANR	436209	Identifier	zv		435840	1					
ANR	436210	AssignmentExpression	zv = ZEND_OP1_LITERAL ( last_op )		435840	2		=			
ANR	436211	Identifier	zv		435840	0					
ANR	436212	CallExpression	ZEND_OP1_LITERAL ( last_op )		435840	1					
ANR	436213	Callee	ZEND_OP1_LITERAL		435840	0					
ANR	436214	Identifier	ZEND_OP1_LITERAL		435840	0					
ANR	436215	ArgumentList	last_op		435840	1					
ANR	436216	Argument	last_op		435840	0					
ANR	436217	Identifier	last_op		435840	0					
ANR	436218	ExpressionStatement	zval_copy_ctor ( & zv )	1322:6:44442:44461	435840	1	True				
ANR	436219	CallExpression	zval_copy_ctor ( & zv )		435840	0					
ANR	436220	Callee	zval_copy_ctor		435840	0					
ANR	436221	Identifier	zval_copy_ctor		435840	0					
ANR	436222	ArgumentList	& zv		435840	1					
ANR	436223	Argument	& zv		435840	0					
ANR	436224	UnaryOperationExpression	& zv		435840	0					
ANR	436225	UnaryOperator	&		435840	0					
ANR	436226	Identifier	zv		435840	1					
ANR	436227	ExpressionStatement	"last_op -> op1 . constant = zend_optimizer_add_literal ( op_array , & zv )"	1323:6:44469:44534	435840	2	True				
ANR	436228	AssignmentExpression	"last_op -> op1 . constant = zend_optimizer_add_literal ( op_array , & zv )"		435840	0		=			
ANR	436229	MemberAccess	last_op -> op1 . constant		435840	0					
ANR	436230	PtrMemberAccess	last_op -> op1		435840	0					
ANR	436231	Identifier	last_op		435840	0					
ANR	436232	Identifier	op1		435840	1					
ANR	436233	Identifier	constant		435840	1					
ANR	436234	CallExpression	"zend_optimizer_add_literal ( op_array , & zv )"		435840	1					
ANR	436235	Callee	zend_optimizer_add_literal		435840	0					
ANR	436236	Identifier	zend_optimizer_add_literal		435840	0					
ANR	436237	ArgumentList	op_array		435840	1					
ANR	436238	Argument	op_array		435840	0					
ANR	436239	Identifier	op_array		435840	0					
ANR	436240	Argument	& zv		435840	1					
ANR	436241	UnaryOperationExpression	& zv		435840	0					
ANR	436242	UnaryOperator	&		435840	0					
ANR	436243	Identifier	zv		435840	1					
ANR	436244	ExpressionStatement	"del_source ( block , block -> op1_to )"	1325:5:44548:44580	435840	2	True				
ANR	436245	CallExpression	"del_source ( block , block -> op1_to )"		435840	0					
ANR	436246	Callee	del_source		435840	0					
ANR	436247	Identifier	del_source		435840	0					
ANR	436248	ArgumentList	block		435840	1					
ANR	436249	Argument	block		435840	0					
ANR	436250	Identifier	block		435840	0					
ANR	436251	Argument	block -> op1_to		435840	1					
ANR	436252	PtrMemberAccess	block -> op1_to		435840	0					
ANR	436253	Identifier	block		435840	0					
ANR	436254	Identifier	op1_to		435840	1					
ANR	436255	ExpressionStatement	block -> op1_to = NULL	1326:5:44587:44607	435840	3	True				
ANR	436256	AssignmentExpression	block -> op1_to = NULL		435840	0		=			
ANR	436257	PtrMemberAccess	block -> op1_to		435840	0					
ANR	436258	Identifier	block		435840	0					
ANR	436259	Identifier	op1_to		435840	1					
ANR	436260	Identifier	NULL		435840	1					
ANR	436261	ElseStatement	else		435840	0					
ANR	436262	IfStatement	if ( 0 && block -> op1_to != block && block -> op1_to != blocks && op_array -> last_try_catch == 0 && target -> opcode != ZEND_FREE )		435840	0					
ANR	436263	Condition	0 && block -> op1_to != block && block -> op1_to != blocks && op_array -> last_try_catch == 0 && target -> opcode != ZEND_FREE	1329:15:44680:44834	435840	0	True				
ANR	436264	AndExpression	0 && block -> op1_to != block && block -> op1_to != blocks && op_array -> last_try_catch == 0 && target -> opcode != ZEND_FREE		435840	0		&&			
ANR	436265	PrimaryExpression	0		435840	0					
ANR	436266	AndExpression	block -> op1_to != block && block -> op1_to != blocks && op_array -> last_try_catch == 0 && target -> opcode != ZEND_FREE		435840	1		&&			
ANR	436267	EqualityExpression	block -> op1_to != block		435840	0		!=			
ANR	436268	PtrMemberAccess	block -> op1_to		435840	0					
ANR	436269	Identifier	block		435840	0					
ANR	436270	Identifier	op1_to		435840	1					
ANR	436271	Identifier	block		435840	1					
ANR	436272	AndExpression	block -> op1_to != blocks && op_array -> last_try_catch == 0 && target -> opcode != ZEND_FREE		435840	1		&&			
ANR	436273	EqualityExpression	block -> op1_to != blocks		435840	0		!=			
ANR	436274	PtrMemberAccess	block -> op1_to		435840	0					
ANR	436275	Identifier	block		435840	0					
ANR	436276	Identifier	op1_to		435840	1					
ANR	436277	Identifier	blocks		435840	1					
ANR	436278	AndExpression	op_array -> last_try_catch == 0 && target -> opcode != ZEND_FREE		435840	1		&&			
ANR	436279	EqualityExpression	op_array -> last_try_catch == 0		435840	0		==			
ANR	436280	PtrMemberAccess	op_array -> last_try_catch		435840	0					
ANR	436281	Identifier	op_array		435840	0					
ANR	436282	Identifier	last_try_catch		435840	1					
ANR	436283	PrimaryExpression	0		435840	1					
ANR	436284	EqualityExpression	target -> opcode != ZEND_FREE		435840	1		!=			
ANR	436285	PtrMemberAccess	target -> opcode		435840	0					
ANR	436286	Identifier	target		435840	0					
ANR	436287	Identifier	opcode		435840	1					
ANR	436288	Identifier	ZEND_FREE		435840	1					
ANR	436289	CompoundStatement		83:5:2624:2670	435840	1					
ANR	436290	IdentifierDeclStatement	zend_bool can_reorder = 0 ;	1337:5:45039:45064	435840	0	True				
ANR	436291	IdentifierDecl	can_reorder = 0		435840	0					
ANR	436292	IdentifierDeclType	zend_bool		435840	0					
ANR	436293	Identifier	can_reorder		435840	1					
ANR	436294	AssignmentExpression	can_reorder = 0		435840	2		=			
ANR	436295	Identifier	can_reorder		435840	0					
ANR	436296	PrimaryExpression	0		435840	1					
ANR	436297	IdentifierDeclStatement	zend_block_source * cs = block -> op1_to -> sources ;	1338:5:45071:45117	435840	1	True				
ANR	436298	IdentifierDecl	* cs = block -> op1_to -> sources		435840	0					
ANR	436299	IdentifierDeclType	zend_block_source *		435840	0					
ANR	436300	Identifier	cs		435840	1					
ANR	436301	AssignmentExpression	* cs = block -> op1_to -> sources		435840	2		=			
ANR	436302	Identifier	cs		435840	0					
ANR	436303	PtrMemberAccess	block -> op1_to -> sources		435840	1					
ANR	436304	PtrMemberAccess	block -> op1_to		435840	0					
ANR	436305	Identifier	block		435840	0					
ANR	436306	Identifier	op1_to		435840	1					
ANR	436307	Identifier	sources		435840	1					
ANR	436308	WhileStatement	while ( cs )		435840	2					
ANR	436309	Condition	cs	1341:11:45192:45193	435840	0	True				
ANR	436310	Identifier	cs		435840	0					
ANR	436311	CompoundStatement		86:15:2749:2749	435840	1					
ANR	436312	IfStatement	if ( cs -> from -> follow_to == block -> op1_to )		435840	0					
ANR	436313	Condition	cs -> from -> follow_to == block -> op1_to	1342:10:45208:45243	435840	0	True				
ANR	436314	EqualityExpression	cs -> from -> follow_to == block -> op1_to		435840	0		==			
ANR	436315	PtrMemberAccess	cs -> from -> follow_to		435840	0					
ANR	436316	PtrMemberAccess	cs -> from		435840	0					
ANR	436317	Identifier	cs		435840	0					
ANR	436318	Identifier	from		435840	1					
ANR	436319	Identifier	follow_to		435840	1					
ANR	436320	PtrMemberAccess	block -> op1_to		435840	1					
ANR	436321	Identifier	block		435840	0					
ANR	436322	Identifier	op1_to		435840	1					
ANR	436323	CompoundStatement		87:48:2799:2799	435840	1					
ANR	436324	ExpressionStatement	can_reorder = 0	1343:7:45255:45270	435840	0	True				
ANR	436325	AssignmentExpression	can_reorder = 0		435840	0		=			
ANR	436326	Identifier	can_reorder		435840	0					
ANR	436327	PrimaryExpression	0		435840	1					
ANR	436328	BreakStatement	break ;	1344:7:45279:45284	435840	1	True				
ANR	436329	ExpressionStatement	cs = cs -> next	1346:6:45300:45313	435840	1	True				
ANR	436330	AssignmentExpression	cs = cs -> next		435840	0		=			
ANR	436331	Identifier	cs		435840	0					
ANR	436332	PtrMemberAccess	cs -> next		435840	1					
ANR	436333	Identifier	cs		435840	0					
ANR	436334	Identifier	next		435840	1					
ANR	436335	IfStatement	if ( can_reorder )		435840	3					
ANR	436336	Condition	can_reorder	1348:9:45331:45341	435840	0	True				
ANR	436337	Identifier	can_reorder		435840	0					
ANR	436338	CompoundStatement		93:22:2897:2897	435840	1					
ANR	436339	ExpressionStatement	next = block -> op1_to	1349:6:45352:45372	435840	0	True				
ANR	436340	AssignmentExpression	next = block -> op1_to		435840	0		=			
ANR	436341	Identifier	next		435840	0					
ANR	436342	PtrMemberAccess	block -> op1_to		435840	1					
ANR	436343	Identifier	block		435840	0					
ANR	436344	Identifier	op1_to		435840	1					
ANR	436345	WhileStatement	while ( next -> follow_to != NULL )		435840	1					
ANR	436346	Condition	next -> follow_to != NULL	1351:13:45453:45475	435840	0	True				
ANR	436347	EqualityExpression	next -> follow_to != NULL		435840	0		!=			
ANR	436348	PtrMemberAccess	next -> follow_to		435840	0					
ANR	436349	Identifier	next		435840	0					
ANR	436350	Identifier	follow_to		435840	1					
ANR	436351	Identifier	NULL		435840	1					
ANR	436352	CompoundStatement		96:38:3031:3031	435840	1					
ANR	436353	IfStatement	if ( next -> follow_to == block )		435840	0					
ANR	436354	Condition	next -> follow_to == block	1352:11:45491:45514	435840	0	True				
ANR	436355	EqualityExpression	next -> follow_to == block		435840	0		==			
ANR	436356	PtrMemberAccess	next -> follow_to		435840	0					
ANR	436357	Identifier	next		435840	0					
ANR	436358	Identifier	follow_to		435840	1					
ANR	436359	Identifier	block		435840	1					
ANR	436360	CompoundStatement		97:37:3070:3070	435840	1					
ANR	436361	ExpressionStatement	can_reorder = 0	1353:8:45527:45542	435840	0	True				
ANR	436362	AssignmentExpression	can_reorder = 0		435840	0		=			
ANR	436363	Identifier	can_reorder		435840	0					
ANR	436364	PrimaryExpression	0		435840	1					
ANR	436365	BreakStatement	break ;	1354:8:45552:45557	435840	1	True				
ANR	436366	ExpressionStatement	next = next -> follow_to	1356:7:45575:45597	435840	1	True				
ANR	436367	AssignmentExpression	next = next -> follow_to		435840	0		=			
ANR	436368	Identifier	next		435840	0					
ANR	436369	PtrMemberAccess	next -> follow_to		435840	1					
ANR	436370	Identifier	next		435840	0					
ANR	436371	Identifier	follow_to		435840	1					
ANR	436372	IfStatement	if ( can_reorder )		435840	2					
ANR	436373	Condition	can_reorder	1358:10:45617:45627	435840	0	True				
ANR	436374	Identifier	can_reorder		435840	0					
ANR	436375	CompoundStatement		104:7:3192:3222	435840	1					
ANR	436376	IdentifierDeclStatement	zend_code_block * prev = blocks ;	1359:7:45639:45669	435840	0	True				
ANR	436377	IdentifierDecl	* prev = blocks		435840	0					
ANR	436378	IdentifierDeclType	zend_code_block *		435840	0					
ANR	436379	Identifier	prev		435840	1					
ANR	436380	AssignmentExpression	* prev = blocks		435840	2		=			
ANR	436381	Identifier	blocks		435840	0					
ANR	436382	Identifier	blocks		435840	1					
ANR	436383	WhileStatement	while ( prev -> next != block -> op1_to )		435840	1					
ANR	436384	Condition	prev -> next != block -> op1_to	1361:14:45686:45712	435840	0	True				
ANR	436385	EqualityExpression	prev -> next != block -> op1_to		435840	0		!=			
ANR	436386	PtrMemberAccess	prev -> next		435840	0					
ANR	436387	Identifier	prev		435840	0					
ANR	436388	Identifier	next		435840	1					
ANR	436389	PtrMemberAccess	block -> op1_to		435840	1					
ANR	436390	Identifier	block		435840	0					
ANR	436391	Identifier	op1_to		435840	1					
ANR	436392	CompoundStatement		106:43:3268:3268	435840	1					
ANR	436393	ExpressionStatement	prev = prev -> next	1362:8:45725:45742	435840	0	True				
ANR	436394	AssignmentExpression	prev = prev -> next		435840	0		=			
ANR	436395	Identifier	prev		435840	0					
ANR	436396	PtrMemberAccess	prev -> next		435840	1					
ANR	436397	Identifier	prev		435840	0					
ANR	436398	Identifier	next		435840	1					
ANR	436399	ExpressionStatement	prev -> next = next -> next	1364:7:45760:45783	435840	2	True				
ANR	436400	AssignmentExpression	prev -> next = next -> next		435840	0		=			
ANR	436401	PtrMemberAccess	prev -> next		435840	0					
ANR	436402	Identifier	prev		435840	0					
ANR	436403	Identifier	next		435840	1					
ANR	436404	PtrMemberAccess	next -> next		435840	1					
ANR	436405	Identifier	next		435840	0					
ANR	436406	Identifier	next		435840	1					
ANR	436407	ExpressionStatement	next -> next = block -> next	1365:7:45792:45816	435840	3	True				
ANR	436408	AssignmentExpression	next -> next = block -> next		435840	0		=			
ANR	436409	PtrMemberAccess	next -> next		435840	0					
ANR	436410	Identifier	next		435840	0					
ANR	436411	Identifier	next		435840	1					
ANR	436412	PtrMemberAccess	block -> next		435840	1					
ANR	436413	Identifier	block		435840	0					
ANR	436414	Identifier	next		435840	1					
ANR	436415	ExpressionStatement	block -> next = block -> op1_to	1366:7:45825:45852	435840	4	True				
ANR	436416	AssignmentExpression	block -> next = block -> op1_to		435840	0		=			
ANR	436417	PtrMemberAccess	block -> next		435840	0					
ANR	436418	Identifier	block		435840	0					
ANR	436419	Identifier	next		435840	1					
ANR	436420	PtrMemberAccess	block -> op1_to		435840	1					
ANR	436421	Identifier	block		435840	0					
ANR	436422	Identifier	op1_to		435840	1					
ANR	436423	ExpressionStatement	block -> follow_to = block -> op1_to	1368:7:45862:45894	435840	5	True				
ANR	436424	AssignmentExpression	block -> follow_to = block -> op1_to		435840	0		=			
ANR	436425	PtrMemberAccess	block -> follow_to		435840	0					
ANR	436426	Identifier	block		435840	0					
ANR	436427	Identifier	follow_to		435840	1					
ANR	436428	PtrMemberAccess	block -> op1_to		435840	1					
ANR	436429	Identifier	block		435840	0					
ANR	436430	Identifier	op1_to		435840	1					
ANR	436431	ExpressionStatement	block -> op1_to = NULL	1369:7:45903:45923	435840	6	True				
ANR	436432	AssignmentExpression	block -> op1_to = NULL		435840	0		=			
ANR	436433	PtrMemberAccess	block -> op1_to		435840	0					
ANR	436434	Identifier	block		435840	0					
ANR	436435	Identifier	op1_to		435840	1					
ANR	436436	Identifier	NULL		435840	1					
ANR	436437	ExpressionStatement	MAKE_NOP ( last_op )	1370:7:45932:45949	435840	7	True				
ANR	436438	CallExpression	MAKE_NOP ( last_op )		435840	0					
ANR	436439	Callee	MAKE_NOP		435840	0					
ANR	436440	Identifier	MAKE_NOP		435840	0					
ANR	436441	ArgumentList	last_op		435840	1					
ANR	436442	Argument	last_op		435840	0					
ANR	436443	Identifier	last_op		435840	0					
ANR	436444	ExpressionStatement	block -> len --	1371:7:45958:45970	435840	8	True				
ANR	436445	PostIncDecOperationExpression	block -> len --		435840	0					
ANR	436446	PtrMemberAccess	block -> len		435840	0					
ANR	436447	Identifier	block		435840	0					
ANR	436448	Identifier	len		435840	1					
ANR	436449	IncDec	--		435840	1					
ANR	436450	IfStatement	if ( block -> len == 0 )		435840	9					
ANR	436451	Condition	block -> len == 0	1372:10:45982:45996	435840	0	True				
ANR	436452	EqualityExpression	block -> len == 0		435840	0		==			
ANR	436453	PtrMemberAccess	block -> len		435840	0					
ANR	436454	Identifier	block		435840	0					
ANR	436455	Identifier	len		435840	1					
ANR	436456	PrimaryExpression	0		435840	1					
ANR	436457	CompoundStatement		117:27:3552:3552	435840	1					
ANR	436458	ExpressionStatement	"delete_code_block ( block , ctx )"	1374:8:46057:46086	435840	0	True				
ANR	436459	CallExpression	"delete_code_block ( block , ctx )"		435840	0					
ANR	436460	Callee	delete_code_block		435840	0					
ANR	436461	Identifier	delete_code_block		435840	0					
ANR	436462	ArgumentList	block		435840	1					
ANR	436463	Argument	block		435840	0					
ANR	436464	Identifier	block		435840	0					
ANR	436465	Argument	ctx		435840	1					
ANR	436466	Identifier	ctx		435840	0					
ANR	436467	BreakStatement	break ;	1376:7:46104:46109	435840	10	True				
ANR	436468	BreakStatement	break ;	1382:3:46147:46152	435840	2	True				
ANR	436469	Label	case ZEND_JMPZ :	1384:2:46157:46171	435840	3	True				
ANR	436470	Identifier	ZEND_JMPZ		435840	0					
ANR	436471	Label	case ZEND_JMPNZ :	1385:2:46175:46190	435840	4	True				
ANR	436472	Identifier	ZEND_JMPNZ		435840	0					
ANR	436473	IfStatement	if ( ZEND_OP1_TYPE ( last_op ) == IS_CONST )		435840	5					
ANR	436474	Condition	ZEND_OP1_TYPE ( last_op ) == IS_CONST	1387:7:46234:46267	435840	0	True				
ANR	436475	EqualityExpression	ZEND_OP1_TYPE ( last_op ) == IS_CONST		435840	0		==			
ANR	436476	CallExpression	ZEND_OP1_TYPE ( last_op )		435840	0					
ANR	436477	Callee	ZEND_OP1_TYPE		435840	0					
ANR	436478	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	436479	ArgumentList	last_op		435840	1					
ANR	436480	Argument	last_op		435840	0					
ANR	436481	Identifier	last_op		435840	0					
ANR	436482	Identifier	IS_CONST		435840	1					
ANR	436483	CompoundStatement		133:4:3829:3886	435840	1					
ANR	436484	IdentifierDeclStatement	int should_jmp = zend_is_true ( & ZEND_OP1_LITERAL ( last_op ) ) ;	1388:4:46276:46333	435840	0	True				
ANR	436485	IdentifierDecl	should_jmp = zend_is_true ( & ZEND_OP1_LITERAL ( last_op ) )		435840	0					
ANR	436486	IdentifierDeclType	int		435840	0					
ANR	436487	Identifier	should_jmp		435840	1					
ANR	436488	AssignmentExpression	should_jmp = zend_is_true ( & ZEND_OP1_LITERAL ( last_op ) )		435840	2		=			
ANR	436489	Identifier	should_jmp		435840	0					
ANR	436490	CallExpression	zend_is_true ( & ZEND_OP1_LITERAL ( last_op ) )		435840	1					
ANR	436491	Callee	zend_is_true		435840	0					
ANR	436492	Identifier	zend_is_true		435840	0					
ANR	436493	ArgumentList	& ZEND_OP1_LITERAL ( last_op )		435840	1					
ANR	436494	Argument	& ZEND_OP1_LITERAL ( last_op )		435840	0					
ANR	436495	UnaryOperationExpression	& ZEND_OP1_LITERAL ( last_op )		435840	0					
ANR	436496	UnaryOperator	&		435840	0					
ANR	436497	CallExpression	ZEND_OP1_LITERAL ( last_op )		435840	1					
ANR	436498	Callee	ZEND_OP1_LITERAL		435840	0					
ANR	436499	Identifier	ZEND_OP1_LITERAL		435840	0					
ANR	436500	ArgumentList	last_op		435840	1					
ANR	436501	Argument	last_op		435840	0					
ANR	436502	Identifier	last_op		435840	0					
ANR	436503	IfStatement	if ( last_op -> opcode == ZEND_JMPZ )		435840	1					
ANR	436504	Condition	last_op -> opcode == ZEND_JMPZ	1390:8:46344:46371	435840	0	True				
ANR	436505	EqualityExpression	last_op -> opcode == ZEND_JMPZ		435840	0		==			
ANR	436506	PtrMemberAccess	last_op -> opcode		435840	0					
ANR	436507	Identifier	last_op		435840	0					
ANR	436508	Identifier	opcode		435840	1					
ANR	436509	Identifier	ZEND_JMPZ		435840	1					
ANR	436510	CompoundStatement		135:38:3927:3927	435840	1					
ANR	436511	ExpressionStatement	should_jmp = ! should_jmp	1391:5:46381:46405	435840	0	True				
ANR	436512	AssignmentExpression	should_jmp = ! should_jmp		435840	0		=			
ANR	436513	Identifier	should_jmp		435840	0					
ANR	436514	UnaryOperationExpression	! should_jmp		435840	1					
ANR	436515	UnaryOperator	!		435840	0					
ANR	436516	Identifier	should_jmp		435840	1					
ANR	436517	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( last_op ) )	1393:4:46417:46457	435840	2	True				
ANR	436518	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( last_op ) )		435840	0					
ANR	436519	Callee	literal_dtor		435840	0					
ANR	436520	Identifier	literal_dtor		435840	0					
ANR	436521	ArgumentList	& ZEND_OP1_LITERAL ( last_op )		435840	1					
ANR	436522	Argument	& ZEND_OP1_LITERAL ( last_op )		435840	0					
ANR	436523	UnaryOperationExpression	& ZEND_OP1_LITERAL ( last_op )		435840	0					
ANR	436524	UnaryOperator	&		435840	0					
ANR	436525	CallExpression	ZEND_OP1_LITERAL ( last_op )		435840	1					
ANR	436526	Callee	ZEND_OP1_LITERAL		435840	0					
ANR	436527	Identifier	ZEND_OP1_LITERAL		435840	0					
ANR	436528	ArgumentList	last_op		435840	1					
ANR	436529	Argument	last_op		435840	0					
ANR	436530	Identifier	last_op		435840	0					
ANR	436531	ExpressionStatement	ZEND_OP1_TYPE ( last_op ) = IS_UNUSED	1394:4:46463:46497	435840	3	True				
ANR	436532	AssignmentExpression	ZEND_OP1_TYPE ( last_op ) = IS_UNUSED		435840	0		=			
ANR	436533	CallExpression	ZEND_OP1_TYPE ( last_op )		435840	0					
ANR	436534	Callee	ZEND_OP1_TYPE		435840	0					
ANR	436535	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	436536	ArgumentList	last_op		435840	1					
ANR	436537	Argument	last_op		435840	0					
ANR	436538	Identifier	last_op		435840	0					
ANR	436539	Identifier	IS_UNUSED		435840	1					
ANR	436540	IfStatement	if ( should_jmp )		435840	4					
ANR	436541	Condition	should_jmp	1395:8:46507:46516	435840	0	True				
ANR	436542	Identifier	should_jmp		435840	0					
ANR	436543	CompoundStatement		140:20:4072:4072	435840	1					
ANR	436544	ExpressionStatement	last_op -> opcode = ZEND_JMP	1397:5:46556:46582	435840	0	True				
ANR	436545	AssignmentExpression	last_op -> opcode = ZEND_JMP		435840	0		=			
ANR	436546	PtrMemberAccess	last_op -> opcode		435840	0					
ANR	436547	Identifier	last_op		435840	0					
ANR	436548	Identifier	opcode		435840	1					
ANR	436549	Identifier	ZEND_JMP		435840	1					
ANR	436550	ExpressionStatement	"COPY_NODE ( last_op -> op1 , last_op -> op2 )"	1398:5:46589:46626	435840	1	True				
ANR	436551	CallExpression	"COPY_NODE ( last_op -> op1 , last_op -> op2 )"		435840	0					
ANR	436552	Callee	COPY_NODE		435840	0					
ANR	436553	Identifier	COPY_NODE		435840	0					
ANR	436554	ArgumentList	last_op -> op1		435840	1					
ANR	436555	Argument	last_op -> op1		435840	0					
ANR	436556	PtrMemberAccess	last_op -> op1		435840	0					
ANR	436557	Identifier	last_op		435840	0					
ANR	436558	Identifier	op1		435840	1					
ANR	436559	Argument	last_op -> op2		435840	1					
ANR	436560	PtrMemberAccess	last_op -> op2		435840	0					
ANR	436561	Identifier	last_op		435840	0					
ANR	436562	Identifier	op2		435840	1					
ANR	436563	ExpressionStatement	block -> op1_to = block -> op2_to	1399:5:46633:46662	435840	2	True				
ANR	436564	AssignmentExpression	block -> op1_to = block -> op2_to		435840	0		=			
ANR	436565	PtrMemberAccess	block -> op1_to		435840	0					
ANR	436566	Identifier	block		435840	0					
ANR	436567	Identifier	op1_to		435840	1					
ANR	436568	PtrMemberAccess	block -> op2_to		435840	1					
ANR	436569	Identifier	block		435840	0					
ANR	436570	Identifier	op2_to		435840	1					
ANR	436571	ExpressionStatement	"del_source ( block , block -> follow_to )"	1400:5:46669:46704	435840	3	True				
ANR	436572	CallExpression	"del_source ( block , block -> follow_to )"		435840	0					
ANR	436573	Callee	del_source		435840	0					
ANR	436574	Identifier	del_source		435840	0					
ANR	436575	ArgumentList	block		435840	1					
ANR	436576	Argument	block		435840	0					
ANR	436577	Identifier	block		435840	0					
ANR	436578	Argument	block -> follow_to		435840	1					
ANR	436579	PtrMemberAccess	block -> follow_to		435840	0					
ANR	436580	Identifier	block		435840	0					
ANR	436581	Identifier	follow_to		435840	1					
ANR	436582	ExpressionStatement	block -> op2_to = NULL	1401:5:46711:46731	435840	4	True				
ANR	436583	AssignmentExpression	block -> op2_to = NULL		435840	0		=			
ANR	436584	PtrMemberAccess	block -> op2_to		435840	0					
ANR	436585	Identifier	block		435840	0					
ANR	436586	Identifier	op2_to		435840	1					
ANR	436587	Identifier	NULL		435840	1					
ANR	436588	ExpressionStatement	block -> follow_to = NULL	1402:5:46738:46761	435840	5	True				
ANR	436589	AssignmentExpression	block -> follow_to = NULL		435840	0		=			
ANR	436590	PtrMemberAccess	block -> follow_to		435840	0					
ANR	436591	Identifier	block		435840	0					
ANR	436592	Identifier	follow_to		435840	1					
ANR	436593	Identifier	NULL		435840	1					
ANR	436594	ElseStatement	else		435840	0					
ANR	436595	CompoundStatement		148:11:4327:4327	435840	0					
ANR	436596	ExpressionStatement	MAKE_NOP ( last_op )	1405:5:46812:46829	435840	0	True				
ANR	436597	CallExpression	MAKE_NOP ( last_op )		435840	0					
ANR	436598	Callee	MAKE_NOP		435840	0					
ANR	436599	Identifier	MAKE_NOP		435840	0					
ANR	436600	ArgumentList	last_op		435840	1					
ANR	436601	Argument	last_op		435840	0					
ANR	436602	Identifier	last_op		435840	0					
ANR	436603	ExpressionStatement	"del_source ( block , block -> op2_to )"	1406:5:46836:46868	435840	1	True				
ANR	436604	CallExpression	"del_source ( block , block -> op2_to )"		435840	0					
ANR	436605	Callee	del_source		435840	0					
ANR	436606	Identifier	del_source		435840	0					
ANR	436607	ArgumentList	block		435840	1					
ANR	436608	Argument	block		435840	0					
ANR	436609	Identifier	block		435840	0					
ANR	436610	Argument	block -> op2_to		435840	1					
ANR	436611	PtrMemberAccess	block -> op2_to		435840	0					
ANR	436612	Identifier	block		435840	0					
ANR	436613	Identifier	op2_to		435840	1					
ANR	436614	ExpressionStatement	block -> op2_to = NULL	1407:5:46875:46895	435840	2	True				
ANR	436615	AssignmentExpression	block -> op2_to = NULL		435840	0		=			
ANR	436616	PtrMemberAccess	block -> op2_to		435840	0					
ANR	436617	Identifier	block		435840	0					
ANR	436618	Identifier	op2_to		435840	1					
ANR	436619	Identifier	NULL		435840	1					
ANR	436620	BreakStatement	break ;	1409:4:46907:46912	435840	5	True				
ANR	436621	IfStatement	if ( block -> op2_to == block -> follow_to )		435840	6					
ANR	436622	Condition	block -> op2_to == block -> follow_to	1412:7:46927:46959	435840	0	True				
ANR	436623	EqualityExpression	block -> op2_to == block -> follow_to		435840	0		==			
ANR	436624	PtrMemberAccess	block -> op2_to		435840	0					
ANR	436625	Identifier	block		435840	0					
ANR	436626	Identifier	op2_to		435840	1					
ANR	436627	PtrMemberAccess	block -> follow_to		435840	1					
ANR	436628	Identifier	block		435840	0					
ANR	436629	Identifier	follow_to		435840	1					
ANR	436630	CompoundStatement		157:42:4515:4515	435840	1					
ANR	436631	IfStatement	if ( last_op -> op1_type == IS_VAR )		435840	0					
ANR	436632	Condition	last_op -> op1_type == IS_VAR	1415:8:47017:47043	435840	0	True				
ANR	436633	EqualityExpression	last_op -> op1_type == IS_VAR		435840	0		==			
ANR	436634	PtrMemberAccess	last_op -> op1_type		435840	0					
ANR	436635	Identifier	last_op		435840	0					
ANR	436636	Identifier	op1_type		435840	1					
ANR	436637	Identifier	IS_VAR		435840	1					
ANR	436638	CompoundStatement		162:5:4645:4684	435840	1					
ANR	436639	IdentifierDeclStatement	zend_op * * Tsource = cfg -> Tsource ;	1416:5:47053:47085	435840	0	True				
ANR	436640	IdentifierDecl	* * Tsource = cfg -> Tsource		435840	0					
ANR	436641	IdentifierDeclType	zend_op * *		435840	0					
ANR	436642	Identifier	Tsource		435840	1					
ANR	436643	AssignmentExpression	* * Tsource = cfg -> Tsource		435840	2		=			
ANR	436644	Identifier	Tsource		435840	0					
ANR	436645	PtrMemberAccess	cfg -> Tsource		435840	1					
ANR	436646	Identifier	cfg		435840	0					
ANR	436647	Identifier	Tsource		435840	1					
ANR	436648	IdentifierDeclStatement	zend_op * src = VAR_SOURCE ( last_op -> op1 ) ;	1417:5:47092:47131	435840	1	True				
ANR	436649	IdentifierDecl	* src = VAR_SOURCE ( last_op -> op1 )		435840	0					
ANR	436650	IdentifierDeclType	zend_op *		435840	0					
ANR	436651	Identifier	src		435840	1					
ANR	436652	AssignmentExpression	* src = VAR_SOURCE ( last_op -> op1 )		435840	2		=			
ANR	436653	Identifier	src		435840	0					
ANR	436654	CallExpression	VAR_SOURCE ( last_op -> op1 )		435840	1					
ANR	436655	Callee	VAR_SOURCE		435840	0					
ANR	436656	Identifier	VAR_SOURCE		435840	0					
ANR	436657	ArgumentList	last_op -> op1		435840	1					
ANR	436658	Argument	last_op -> op1		435840	0					
ANR	436659	PtrMemberAccess	last_op -> op1		435840	0					
ANR	436660	Identifier	last_op		435840	0					
ANR	436661	Identifier	op1		435840	1					
ANR	436662	IfStatement	if ( src && src -> opcode != ZEND_FETCH_R && src -> opcode != ZEND_FETCH_DIM_R && src -> opcode != ZEND_FETCH_OBJ_R )		435840	2					
ANR	436663	Condition	src && src -> opcode != ZEND_FETCH_R && src -> opcode != ZEND_FETCH_DIM_R && src -> opcode != ZEND_FETCH_OBJ_R	1419:9:47143:47273	435840	0	True				
ANR	436664	AndExpression	src && src -> opcode != ZEND_FETCH_R && src -> opcode != ZEND_FETCH_DIM_R && src -> opcode != ZEND_FETCH_OBJ_R		435840	0		&&			
ANR	436665	Identifier	src		435840	0					
ANR	436666	AndExpression	src -> opcode != ZEND_FETCH_R && src -> opcode != ZEND_FETCH_DIM_R && src -> opcode != ZEND_FETCH_OBJ_R		435840	1		&&			
ANR	436667	EqualityExpression	src -> opcode != ZEND_FETCH_R		435840	0		!=			
ANR	436668	PtrMemberAccess	src -> opcode		435840	0					
ANR	436669	Identifier	src		435840	0					
ANR	436670	Identifier	opcode		435840	1					
ANR	436671	Identifier	ZEND_FETCH_R		435840	1					
ANR	436672	AndExpression	src -> opcode != ZEND_FETCH_DIM_R && src -> opcode != ZEND_FETCH_OBJ_R		435840	1		&&			
ANR	436673	EqualityExpression	src -> opcode != ZEND_FETCH_DIM_R		435840	0		!=			
ANR	436674	PtrMemberAccess	src -> opcode		435840	0					
ANR	436675	Identifier	src		435840	0					
ANR	436676	Identifier	opcode		435840	1					
ANR	436677	Identifier	ZEND_FETCH_DIM_R		435840	1					
ANR	436678	EqualityExpression	src -> opcode != ZEND_FETCH_OBJ_R		435840	1		!=			
ANR	436679	PtrMemberAccess	src -> opcode		435840	0					
ANR	436680	Identifier	src		435840	0					
ANR	436681	Identifier	opcode		435840	1					
ANR	436682	Identifier	ZEND_FETCH_OBJ_R		435840	1					
ANR	436683	CompoundStatement		167:42:4829:4829	435840	1					
ANR	436684	ExpressionStatement	ZEND_RESULT_TYPE ( src ) |= EXT_TYPE_UNUSED	1423:6:47284:47324	435840	0	True				
ANR	436685	AssignmentExpression	ZEND_RESULT_TYPE ( src ) |= EXT_TYPE_UNUSED		435840	0		|=			
ANR	436686	CallExpression	ZEND_RESULT_TYPE ( src )		435840	0					
ANR	436687	Callee	ZEND_RESULT_TYPE		435840	0					
ANR	436688	Identifier	ZEND_RESULT_TYPE		435840	0					
ANR	436689	ArgumentList	src		435840	1					
ANR	436690	Argument	src		435840	0					
ANR	436691	Identifier	src		435840	0					
ANR	436692	Identifier	EXT_TYPE_UNUSED		435840	1					
ANR	436693	ExpressionStatement	MAKE_NOP ( last_op )	1424:6:47332:47349	435840	1	True				
ANR	436694	CallExpression	MAKE_NOP ( last_op )		435840	0					
ANR	436695	Callee	MAKE_NOP		435840	0					
ANR	436696	Identifier	MAKE_NOP		435840	0					
ANR	436697	ArgumentList	last_op		435840	1					
ANR	436698	Argument	last_op		435840	0					
ANR	436699	Identifier	last_op		435840	0					
ANR	436700	ExpressionStatement	block -> op2_to = NULL	1425:6:47357:47377	435840	2	True				
ANR	436701	AssignmentExpression	block -> op2_to = NULL		435840	0		=			
ANR	436702	PtrMemberAccess	block -> op2_to		435840	0					
ANR	436703	Identifier	block		435840	0					
ANR	436704	Identifier	op2_to		435840	1					
ANR	436705	Identifier	NULL		435840	1					
ANR	436706	BreakStatement	break ;	1426:6:47385:47390	435840	3	True				
ANR	436707	IfStatement	if ( last_op -> op1_type & ( IS_VAR | IS_TMP_VAR ) )		435840	1					
ANR	436708	Condition	last_op -> op1_type & ( IS_VAR | IS_TMP_VAR )	1429:8:47413:47451	435840	0	True				
ANR	436709	BitAndExpression	last_op -> op1_type & ( IS_VAR | IS_TMP_VAR )		435840	0		&			
ANR	436710	PtrMemberAccess	last_op -> op1_type		435840	0					
ANR	436711	Identifier	last_op		435840	0					
ANR	436712	Identifier	op1_type		435840	1					
ANR	436713	InclusiveOrExpression	IS_VAR | IS_TMP_VAR		435840	1		|			
ANR	436714	Identifier	IS_VAR		435840	0					
ANR	436715	Identifier	IS_TMP_VAR		435840	1					
ANR	436716	CompoundStatement		174:49:5007:5007	435840	1					
ANR	436717	ExpressionStatement	last_op -> opcode = ZEND_FREE	1430:5:47461:47488	435840	0	True				
ANR	436718	AssignmentExpression	last_op -> opcode = ZEND_FREE		435840	0		=			
ANR	436719	PtrMemberAccess	last_op -> opcode		435840	0					
ANR	436720	Identifier	last_op		435840	0					
ANR	436721	Identifier	opcode		435840	1					
ANR	436722	Identifier	ZEND_FREE		435840	1					
ANR	436723	ExpressionStatement	last_op -> op2 . num = 0	1431:5:47495:47515	435840	1	True				
ANR	436724	AssignmentExpression	last_op -> op2 . num = 0		435840	0		=			
ANR	436725	MemberAccess	last_op -> op2 . num		435840	0					
ANR	436726	PtrMemberAccess	last_op -> op2		435840	0					
ANR	436727	Identifier	last_op		435840	0					
ANR	436728	Identifier	op2		435840	1					
ANR	436729	Identifier	num		435840	1					
ANR	436730	PrimaryExpression	0		435840	1					
ANR	436731	ExpressionStatement	block -> op2_to = NULL	1432:5:47522:47542	435840	2	True				
ANR	436732	AssignmentExpression	block -> op2_to = NULL		435840	0		=			
ANR	436733	PtrMemberAccess	block -> op2_to		435840	0					
ANR	436734	Identifier	block		435840	0					
ANR	436735	Identifier	op2_to		435840	1					
ANR	436736	Identifier	NULL		435840	1					
ANR	436737	ElseStatement	else		435840	0					
ANR	436738	CompoundStatement		178:11:5108:5108	435840	0					
ANR	436739	ExpressionStatement	MAKE_NOP ( last_op )	1434:5:47562:47579	435840	0	True				
ANR	436740	CallExpression	MAKE_NOP ( last_op )		435840	0					
ANR	436741	Callee	MAKE_NOP		435840	0					
ANR	436742	Identifier	MAKE_NOP		435840	0					
ANR	436743	ArgumentList	last_op		435840	1					
ANR	436744	Argument	last_op		435840	0					
ANR	436745	Identifier	last_op		435840	0					
ANR	436746	ExpressionStatement	block -> op2_to = NULL	1435:5:47586:47606	435840	1	True				
ANR	436747	AssignmentExpression	block -> op2_to = NULL		435840	0		=			
ANR	436748	PtrMemberAccess	block -> op2_to		435840	0					
ANR	436749	Identifier	block		435840	0					
ANR	436750	Identifier	op2_to		435840	1					
ANR	436751	Identifier	NULL		435840	1					
ANR	436752	BreakStatement	break ;	1437:4:47618:47623	435840	2	True				
ANR	436753	IfStatement	if ( block -> op2_to )		435840	7					
ANR	436754	Condition	block -> op2_to	1440:7:47638:47650	435840	0	True				
ANR	436755	PtrMemberAccess	block -> op2_to		435840	0					
ANR	436756	Identifier	block		435840	0					
ANR	436757	Identifier	op2_to		435840	1					
ANR	436758	CompoundStatement		190:4:5359:5404	435840	1					
ANR	436759	IdentifierDeclStatement	zend_uchar same_type = ZEND_OP1_TYPE ( last_op ) ;	1441:4:47659:47704	435840	0	True				
ANR	436760	IdentifierDecl	same_type = ZEND_OP1_TYPE ( last_op )		435840	0					
ANR	436761	IdentifierDeclType	zend_uchar		435840	0					
ANR	436762	Identifier	same_type		435840	1					
ANR	436763	AssignmentExpression	same_type = ZEND_OP1_TYPE ( last_op )		435840	2		=			
ANR	436764	Identifier	same_type		435840	0					
ANR	436765	CallExpression	ZEND_OP1_TYPE ( last_op )		435840	1					
ANR	436766	Callee	ZEND_OP1_TYPE		435840	0					
ANR	436767	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	436768	ArgumentList	last_op		435840	1					
ANR	436769	Argument	last_op		435840	0					
ANR	436770	Identifier	last_op		435840	0					
ANR	436771	IdentifierDeclStatement	uint32_t same_var = VAR_NUM_EX ( last_op -> op1 ) ;	1442:4:47710:47754	435840	1	True				
ANR	436772	IdentifierDecl	same_var = VAR_NUM_EX ( last_op -> op1 )		435840	0					
ANR	436773	IdentifierDeclType	uint32_t		435840	0					
ANR	436774	Identifier	same_var		435840	1					
ANR	436775	AssignmentExpression	same_var = VAR_NUM_EX ( last_op -> op1 )		435840	2		=			
ANR	436776	Identifier	same_var		435840	0					
ANR	436777	CallExpression	VAR_NUM_EX ( last_op -> op1 )		435840	1					
ANR	436778	Callee	VAR_NUM_EX		435840	0					
ANR	436779	Identifier	VAR_NUM_EX		435840	0					
ANR	436780	ArgumentList	last_op -> op1		435840	1					
ANR	436781	Argument	last_op -> op1		435840	0					
ANR	436782	PtrMemberAccess	last_op -> op1		435840	0					
ANR	436783	Identifier	last_op		435840	0					
ANR	436784	Identifier	op1		435840	1					
ANR	436785	IdentifierDeclStatement	zend_op * target ;	1443:4:47760:47775	435840	2	True				
ANR	436786	IdentifierDecl	* target		435840	0					
ANR	436787	IdentifierDeclType	zend_op *		435840	0					
ANR	436788	Identifier	target		435840	1					
ANR	436789	IdentifierDeclStatement	zend_op * target_end ;	1444:4:47781:47800	435840	3	True				
ANR	436790	IdentifierDecl	* target_end		435840	0					
ANR	436791	IdentifierDeclType	zend_op *		435840	0					
ANR	436792	Identifier	target_end		435840	1					
ANR	436793	IdentifierDeclStatement	zend_code_block * target_block = block -> op2_to ;	1445:4:47806:47851	435840	4	True				
ANR	436794	IdentifierDecl	* target_block = block -> op2_to		435840	0					
ANR	436795	IdentifierDeclType	zend_code_block *		435840	0					
ANR	436796	Identifier	target_block		435840	1					
ANR	436797	AssignmentExpression	* target_block = block -> op2_to		435840	2		=			
ANR	436798	Identifier	target_block		435840	0					
ANR	436799	PtrMemberAccess	block -> op2_to		435840	1					
ANR	436800	Identifier	block		435840	0					
ANR	436801	Identifier	op2_to		435840	1					
ANR	436802	ExpressionStatement		1445:50:47852:47852	435840	5	True				
ANR	436803	Label	next_target :	1447:0:47855:47866	435840	6	True				
ANR	436804	Identifier	next_target		435840	0					
ANR	436805	ExpressionStatement	target = target_block -> start_opline	1448:4:47872:47907	435840	7	True				
ANR	436806	AssignmentExpression	target = target_block -> start_opline		435840	0		=			
ANR	436807	Identifier	target		435840	0					
ANR	436808	PtrMemberAccess	target_block -> start_opline		435840	1					
ANR	436809	Identifier	target_block		435840	0					
ANR	436810	Identifier	start_opline		435840	1					
ANR	436811	ExpressionStatement	target_end = target_block -> start_opline + target_block -> len	1449:4:47913:47972	435840	8	True				
ANR	436812	AssignmentExpression	target_end = target_block -> start_opline + target_block -> len		435840	0		=			
ANR	436813	Identifier	target_end		435840	0					
ANR	436814	AdditiveExpression	target_block -> start_opline + target_block -> len		435840	1		+			
ANR	436815	PtrMemberAccess	target_block -> start_opline		435840	0					
ANR	436816	Identifier	target_block		435840	0					
ANR	436817	Identifier	start_opline		435840	1					
ANR	436818	PtrMemberAccess	target_block -> len		435840	1					
ANR	436819	Identifier	target_block		435840	0					
ANR	436820	Identifier	len		435840	1					
ANR	436821	WhileStatement	while ( target < target_end && target -> opcode == ZEND_NOP )		435840	9					
ANR	436822	Condition	target < target_end && target -> opcode == ZEND_NOP	1450:11:47985:48033	435840	0	True				
ANR	436823	AndExpression	target < target_end && target -> opcode == ZEND_NOP		435840	0		&&			
ANR	436824	RelationalExpression	target < target_end		435840	0		<			
ANR	436825	Identifier	target		435840	0					
ANR	436826	Identifier	target_end		435840	1					
ANR	436827	EqualityExpression	target -> opcode == ZEND_NOP		435840	1		==			
ANR	436828	PtrMemberAccess	target -> opcode		435840	0					
ANR	436829	Identifier	target		435840	0					
ANR	436830	Identifier	opcode		435840	1					
ANR	436831	Identifier	ZEND_NOP		435840	1					
ANR	436832	CompoundStatement		195:62:5589:5589	435840	1					
ANR	436833	ExpressionStatement	target ++	1451:5:48043:48051	435840	0	True				
ANR	436834	PostIncDecOperationExpression	target ++		435840	0					
ANR	436835	Identifier	target		435840	0					
ANR	436836	IncDec	++		435840	1					
ANR	436837	IfStatement	if ( target == target_end )		435840	10					
ANR	436838	Condition	target == target_end	1455:8:48103:48122	435840	0	True				
ANR	436839	EqualityExpression	target == target_end		435840	0		==			
ANR	436840	Identifier	target		435840	0					
ANR	436841	Identifier	target_end		435840	1					
ANR	436842	CompoundStatement		200:30:5678:5678	435840	1					
ANR	436843	ExpressionStatement	target_block = target_block -> follow_to	1456:5:48132:48170	435840	0	True				
ANR	436844	AssignmentExpression	target_block = target_block -> follow_to		435840	0		=			
ANR	436845	Identifier	target_block		435840	0					
ANR	436846	PtrMemberAccess	target_block -> follow_to		435840	1					
ANR	436847	Identifier	target_block		435840	0					
ANR	436848	Identifier	follow_to		435840	1					
ANR	436849	GotoStatement	goto next_target ;	1457:5:48177:48193	435840	1	True				
ANR	436850	Identifier	next_target		435840	0					
ANR	436851	ElseStatement	else		435840	0					
ANR	436852	IfStatement	if ( target -> opcode == INV_COND ( last_op -> opcode ) && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && target_block -> follow_to && ! target_block -> protected )		435840	0					
ANR	436853	Condition	target -> opcode == INV_COND ( last_op -> opcode ) && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && target_block -> follow_to && ! target_block -> protected	1458:15:48210:48522	435840	0	True				
ANR	436854	AndExpression	target -> opcode == INV_COND ( last_op -> opcode ) && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && target_block -> follow_to && ! target_block -> protected		435840	0		&&			
ANR	436855	EqualityExpression	target -> opcode == INV_COND ( last_op -> opcode )		435840	0		==			
ANR	436856	PtrMemberAccess	target -> opcode		435840	0					
ANR	436857	Identifier	target		435840	0					
ANR	436858	Identifier	opcode		435840	1					
ANR	436859	CallExpression	INV_COND ( last_op -> opcode )		435840	1					
ANR	436860	Callee	INV_COND		435840	0					
ANR	436861	Identifier	INV_COND		435840	0					
ANR	436862	ArgumentList	last_op -> opcode		435840	1					
ANR	436863	Argument	last_op -> opcode		435840	0					
ANR	436864	PtrMemberAccess	last_op -> opcode		435840	0					
ANR	436865	Identifier	last_op		435840	0					
ANR	436866	Identifier	opcode		435840	1					
ANR	436867	AndExpression	( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && target_block -> follow_to && ! target_block -> protected		435840	1		&&			
ANR	436868	BitAndExpression	ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV )		435840	0		&			
ANR	436869	CallExpression	ZEND_OP1_TYPE ( target )		435840	0					
ANR	436870	Callee	ZEND_OP1_TYPE		435840	0					
ANR	436871	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	436872	ArgumentList	target		435840	1					
ANR	436873	Argument	target		435840	0					
ANR	436874	Identifier	target		435840	0					
ANR	436875	InclusiveOrExpression	IS_TMP_VAR | IS_CV		435840	1		|			
ANR	436876	Identifier	IS_TMP_VAR		435840	0					
ANR	436877	Identifier	IS_CV		435840	1					
ANR	436878	AndExpression	same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && target_block -> follow_to && ! target_block -> protected		435840	1		&&			
ANR	436879	EqualityExpression	same_type == ZEND_OP1_TYPE ( target )		435840	0		==			
ANR	436880	Identifier	same_type		435840	0					
ANR	436881	CallExpression	ZEND_OP1_TYPE ( target )		435840	1					
ANR	436882	Callee	ZEND_OP1_TYPE		435840	0					
ANR	436883	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	436884	ArgumentList	target		435840	1					
ANR	436885	Argument	target		435840	0					
ANR	436886	Identifier	target		435840	0					
ANR	436887	AndExpression	same_var == VAR_NUM_EX ( target -> op1 ) && target_block -> follow_to && ! target_block -> protected		435840	1		&&			
ANR	436888	EqualityExpression	same_var == VAR_NUM_EX ( target -> op1 )		435840	0		==			
ANR	436889	Identifier	same_var		435840	0					
ANR	436890	CallExpression	VAR_NUM_EX ( target -> op1 )		435840	1					
ANR	436891	Callee	VAR_NUM_EX		435840	0					
ANR	436892	Identifier	VAR_NUM_EX		435840	0					
ANR	436893	ArgumentList	target -> op1		435840	1					
ANR	436894	Argument	target -> op1		435840	0					
ANR	436895	PtrMemberAccess	target -> op1		435840	0					
ANR	436896	Identifier	target		435840	0					
ANR	436897	Identifier	op1		435840	1					
ANR	436898	AndExpression	target_block -> follow_to && ! target_block -> protected		435840	1		&&			
ANR	436899	PtrMemberAccess	target_block -> follow_to		435840	0					
ANR	436900	Identifier	target_block		435840	0					
ANR	436901	Identifier	follow_to		435840	1					
ANR	436902	UnaryOperationExpression	! target_block -> protected		435840	1					
ANR	436903	UnaryOperator	!		435840	0					
ANR	436904	PtrMemberAccess	target_block -> protected		435840	1					
ANR	436905	Identifier	target_block		435840	0					
ANR	436906	Identifier	protected		435840	1					
ANR	436907	CompoundStatement		210:9:6086:6086	435840	1					
ANR	436908	ExpressionStatement	"del_source ( block , block -> op2_to )"	1466:5:48540:48572	435840	0	True				
ANR	436909	CallExpression	"del_source ( block , block -> op2_to )"		435840	0					
ANR	436910	Callee	del_source		435840	0					
ANR	436911	Identifier	del_source		435840	0					
ANR	436912	ArgumentList	block		435840	1					
ANR	436913	Argument	block		435840	0					
ANR	436914	Identifier	block		435840	0					
ANR	436915	Argument	block -> op2_to		435840	1					
ANR	436916	PtrMemberAccess	block -> op2_to		435840	0					
ANR	436917	Identifier	block		435840	0					
ANR	436918	Identifier	op2_to		435840	1					
ANR	436919	ExpressionStatement	block -> op2_to = target_block -> follow_to	1467:5:48579:48618	435840	1	True				
ANR	436920	AssignmentExpression	block -> op2_to = target_block -> follow_to		435840	0		=			
ANR	436921	PtrMemberAccess	block -> op2_to		435840	0					
ANR	436922	Identifier	block		435840	0					
ANR	436923	Identifier	op2_to		435840	1					
ANR	436924	PtrMemberAccess	target_block -> follow_to		435840	1					
ANR	436925	Identifier	target_block		435840	0					
ANR	436926	Identifier	follow_to		435840	1					
ANR	436927	ExpressionStatement	"ADD_SOURCE ( block , block -> op2_to )"	1468:5:48625:48657	435840	2	True				
ANR	436928	CallExpression	"ADD_SOURCE ( block , block -> op2_to )"		435840	0					
ANR	436929	Callee	ADD_SOURCE		435840	0					
ANR	436930	Identifier	ADD_SOURCE		435840	0					
ANR	436931	ArgumentList	block		435840	1					
ANR	436932	Argument	block		435840	0					
ANR	436933	Identifier	block		435840	0					
ANR	436934	Argument	block -> op2_to		435840	1					
ANR	436935	PtrMemberAccess	block -> op2_to		435840	0					
ANR	436936	Identifier	block		435840	0					
ANR	436937	Identifier	op2_to		435840	1					
ANR	436938	ElseStatement	else		435840	0					
ANR	436939	IfStatement	if ( target -> opcode == INV_COND_EX ( last_op -> opcode ) && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && target_block -> follow_to && ! target_block -> protected )		435840	0					
ANR	436940	Condition	target -> opcode == INV_COND_EX ( last_op -> opcode ) && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && target_block -> follow_to && ! target_block -> protected	1469:15:48674:48940	435840	0	True				
ANR	436941	AndExpression	target -> opcode == INV_COND_EX ( last_op -> opcode ) && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && target_block -> follow_to && ! target_block -> protected		435840	0		&&			
ANR	436942	EqualityExpression	target -> opcode == INV_COND_EX ( last_op -> opcode )		435840	0		==			
ANR	436943	PtrMemberAccess	target -> opcode		435840	0					
ANR	436944	Identifier	target		435840	0					
ANR	436945	Identifier	opcode		435840	1					
ANR	436946	CallExpression	INV_COND_EX ( last_op -> opcode )		435840	1					
ANR	436947	Callee	INV_COND_EX		435840	0					
ANR	436948	Identifier	INV_COND_EX		435840	0					
ANR	436949	ArgumentList	last_op -> opcode		435840	1					
ANR	436950	Argument	last_op -> opcode		435840	0					
ANR	436951	PtrMemberAccess	last_op -> opcode		435840	0					
ANR	436952	Identifier	last_op		435840	0					
ANR	436953	Identifier	opcode		435840	1					
ANR	436954	AndExpression	( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && target_block -> follow_to && ! target_block -> protected		435840	1		&&			
ANR	436955	BitAndExpression	ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV )		435840	0		&			
ANR	436956	CallExpression	ZEND_OP1_TYPE ( target )		435840	0					
ANR	436957	Callee	ZEND_OP1_TYPE		435840	0					
ANR	436958	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	436959	ArgumentList	target		435840	1					
ANR	436960	Argument	target		435840	0					
ANR	436961	Identifier	target		435840	0					
ANR	436962	InclusiveOrExpression	IS_TMP_VAR | IS_CV		435840	1		|			
ANR	436963	Identifier	IS_TMP_VAR		435840	0					
ANR	436964	Identifier	IS_CV		435840	1					
ANR	436965	AndExpression	same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && target_block -> follow_to && ! target_block -> protected		435840	1		&&			
ANR	436966	EqualityExpression	same_type == ZEND_OP1_TYPE ( target )		435840	0		==			
ANR	436967	Identifier	same_type		435840	0					
ANR	436968	CallExpression	ZEND_OP1_TYPE ( target )		435840	1					
ANR	436969	Callee	ZEND_OP1_TYPE		435840	0					
ANR	436970	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	436971	ArgumentList	target		435840	1					
ANR	436972	Argument	target		435840	0					
ANR	436973	Identifier	target		435840	0					
ANR	436974	AndExpression	same_var == VAR_NUM_EX ( target -> op1 ) && target_block -> follow_to && ! target_block -> protected		435840	1		&&			
ANR	436975	EqualityExpression	same_var == VAR_NUM_EX ( target -> op1 )		435840	0		==			
ANR	436976	Identifier	same_var		435840	0					
ANR	436977	CallExpression	VAR_NUM_EX ( target -> op1 )		435840	1					
ANR	436978	Callee	VAR_NUM_EX		435840	0					
ANR	436979	Identifier	VAR_NUM_EX		435840	0					
ANR	436980	ArgumentList	target -> op1		435840	1					
ANR	436981	Argument	target -> op1		435840	0					
ANR	436982	PtrMemberAccess	target -> op1		435840	0					
ANR	436983	Identifier	target		435840	0					
ANR	436984	Identifier	op1		435840	1					
ANR	436985	AndExpression	target_block -> follow_to && ! target_block -> protected		435840	1		&&			
ANR	436986	PtrMemberAccess	target_block -> follow_to		435840	0					
ANR	436987	Identifier	target_block		435840	0					
ANR	436988	Identifier	follow_to		435840	1					
ANR	436989	UnaryOperationExpression	! target_block -> protected		435840	1					
ANR	436990	UnaryOperator	!		435840	0					
ANR	436991	PtrMemberAccess	target_block -> protected		435840	1					
ANR	436992	Identifier	target_block		435840	0					
ANR	436993	Identifier	protected		435840	1					
ANR	436994	CompoundStatement		219:33:6496:6496	435840	1					
ANR	436995	ExpressionStatement	last_op -> opcode += 3	1476:5:49012:49032	435840	0	True				
ANR	436996	AssignmentExpression	last_op -> opcode += 3		435840	0		+=			
ANR	436997	PtrMemberAccess	last_op -> opcode		435840	0					
ANR	436998	Identifier	last_op		435840	0					
ANR	436999	Identifier	opcode		435840	1					
ANR	437000	PrimaryExpression	3		435840	1					
ANR	437001	ExpressionStatement	last_op -> result = target -> result	1477:5:49039:49071	435840	1	True				
ANR	437002	AssignmentExpression	last_op -> result = target -> result		435840	0		=			
ANR	437003	PtrMemberAccess	last_op -> result		435840	0					
ANR	437004	Identifier	last_op		435840	0					
ANR	437005	Identifier	result		435840	1					
ANR	437006	PtrMemberAccess	target -> result		435840	1					
ANR	437007	Identifier	target		435840	0					
ANR	437008	Identifier	result		435840	1					
ANR	437009	ExpressionStatement	"del_source ( block , block -> op2_to )"	1478:5:49078:49110	435840	2	True				
ANR	437010	CallExpression	"del_source ( block , block -> op2_to )"		435840	0					
ANR	437011	Callee	del_source		435840	0					
ANR	437012	Identifier	del_source		435840	0					
ANR	437013	ArgumentList	block		435840	1					
ANR	437014	Argument	block		435840	0					
ANR	437015	Identifier	block		435840	0					
ANR	437016	Argument	block -> op2_to		435840	1					
ANR	437017	PtrMemberAccess	block -> op2_to		435840	0					
ANR	437018	Identifier	block		435840	0					
ANR	437019	Identifier	op2_to		435840	1					
ANR	437020	ExpressionStatement	block -> op2_to = target_block -> follow_to	1479:5:49117:49156	435840	3	True				
ANR	437021	AssignmentExpression	block -> op2_to = target_block -> follow_to		435840	0		=			
ANR	437022	PtrMemberAccess	block -> op2_to		435840	0					
ANR	437023	Identifier	block		435840	0					
ANR	437024	Identifier	op2_to		435840	1					
ANR	437025	PtrMemberAccess	target_block -> follow_to		435840	1					
ANR	437026	Identifier	target_block		435840	0					
ANR	437027	Identifier	follow_to		435840	1					
ANR	437028	ExpressionStatement	"ADD_SOURCE ( block , block -> op2_to )"	1480:5:49163:49195	435840	4	True				
ANR	437029	CallExpression	"ADD_SOURCE ( block , block -> op2_to )"		435840	0					
ANR	437030	Callee	ADD_SOURCE		435840	0					
ANR	437031	Identifier	ADD_SOURCE		435840	0					
ANR	437032	ArgumentList	block		435840	1					
ANR	437033	Argument	block		435840	0					
ANR	437034	Identifier	block		435840	0					
ANR	437035	Argument	block -> op2_to		435840	1					
ANR	437036	PtrMemberAccess	block -> op2_to		435840	0					
ANR	437037	Identifier	block		435840	0					
ANR	437038	Identifier	op2_to		435840	1					
ANR	437039	ElseStatement	else		435840	0					
ANR	437040	IfStatement	if ( target_block -> op2_to && target -> opcode == last_op -> opcode && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && ! target_block -> protected )		435840	0					
ANR	437041	Condition	target_block -> op2_to && target -> opcode == last_op -> opcode && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && ! target_block -> protected	1481:15:49212:49466	435840	0	True				
ANR	437042	AndExpression	target_block -> op2_to && target -> opcode == last_op -> opcode && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && ! target_block -> protected		435840	0		&&			
ANR	437043	PtrMemberAccess	target_block -> op2_to		435840	0					
ANR	437044	Identifier	target_block		435840	0					
ANR	437045	Identifier	op2_to		435840	1					
ANR	437046	AndExpression	target -> opcode == last_op -> opcode && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && ! target_block -> protected		435840	1		&&			
ANR	437047	EqualityExpression	target -> opcode == last_op -> opcode		435840	0		==			
ANR	437048	PtrMemberAccess	target -> opcode		435840	0					
ANR	437049	Identifier	target		435840	0					
ANR	437050	Identifier	opcode		435840	1					
ANR	437051	PtrMemberAccess	last_op -> opcode		435840	1					
ANR	437052	Identifier	last_op		435840	0					
ANR	437053	Identifier	opcode		435840	1					
ANR	437054	AndExpression	( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && ! target_block -> protected		435840	1		&&			
ANR	437055	BitAndExpression	ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV )		435840	0		&			
ANR	437056	CallExpression	ZEND_OP1_TYPE ( target )		435840	0					
ANR	437057	Callee	ZEND_OP1_TYPE		435840	0					
ANR	437058	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	437059	ArgumentList	target		435840	1					
ANR	437060	Argument	target		435840	0					
ANR	437061	Identifier	target		435840	0					
ANR	437062	InclusiveOrExpression	IS_TMP_VAR | IS_CV		435840	1		|			
ANR	437063	Identifier	IS_TMP_VAR		435840	0					
ANR	437064	Identifier	IS_CV		435840	1					
ANR	437065	AndExpression	same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && ! target_block -> protected		435840	1		&&			
ANR	437066	EqualityExpression	same_type == ZEND_OP1_TYPE ( target )		435840	0		==			
ANR	437067	Identifier	same_type		435840	0					
ANR	437068	CallExpression	ZEND_OP1_TYPE ( target )		435840	1					
ANR	437069	Callee	ZEND_OP1_TYPE		435840	0					
ANR	437070	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	437071	ArgumentList	target		435840	1					
ANR	437072	Argument	target		435840	0					
ANR	437073	Identifier	target		435840	0					
ANR	437074	AndExpression	same_var == VAR_NUM_EX ( target -> op1 ) && ! target_block -> protected		435840	1		&&			
ANR	437075	EqualityExpression	same_var == VAR_NUM_EX ( target -> op1 )		435840	0		==			
ANR	437076	Identifier	same_var		435840	0					
ANR	437077	CallExpression	VAR_NUM_EX ( target -> op1 )		435840	1					
ANR	437078	Callee	VAR_NUM_EX		435840	0					
ANR	437079	Identifier	VAR_NUM_EX		435840	0					
ANR	437080	ArgumentList	target -> op1		435840	1					
ANR	437081	Argument	target -> op1		435840	0					
ANR	437082	PtrMemberAccess	target -> op1		435840	0					
ANR	437083	Identifier	target		435840	0					
ANR	437084	Identifier	op1		435840	1					
ANR	437085	UnaryOperationExpression	! target_block -> protected		435840	1					
ANR	437086	UnaryOperator	!		435840	0					
ANR	437087	PtrMemberAccess	target_block -> protected		435840	1					
ANR	437088	Identifier	target_block		435840	0					
ANR	437089	Identifier	protected		435840	1					
ANR	437090	CompoundStatement		231:35:7022:7022	435840	1					
ANR	437091	ExpressionStatement	"del_source ( block , block -> op2_to )"	1488:5:49529:49561	435840	0	True				
ANR	437092	CallExpression	"del_source ( block , block -> op2_to )"		435840	0					
ANR	437093	Callee	del_source		435840	0					
ANR	437094	Identifier	del_source		435840	0					
ANR	437095	ArgumentList	block		435840	1					
ANR	437096	Argument	block		435840	0					
ANR	437097	Identifier	block		435840	0					
ANR	437098	Argument	block -> op2_to		435840	1					
ANR	437099	PtrMemberAccess	block -> op2_to		435840	0					
ANR	437100	Identifier	block		435840	0					
ANR	437101	Identifier	op2_to		435840	1					
ANR	437102	ExpressionStatement	block -> op2_to = target_block -> op2_to	1489:5:49568:49604	435840	1	True				
ANR	437103	AssignmentExpression	block -> op2_to = target_block -> op2_to		435840	0		=			
ANR	437104	PtrMemberAccess	block -> op2_to		435840	0					
ANR	437105	Identifier	block		435840	0					
ANR	437106	Identifier	op2_to		435840	1					
ANR	437107	PtrMemberAccess	target_block -> op2_to		435840	1					
ANR	437108	Identifier	target_block		435840	0					
ANR	437109	Identifier	op2_to		435840	1					
ANR	437110	ExpressionStatement	"ADD_SOURCE ( block , block -> op2_to )"	1490:5:49611:49643	435840	2	True				
ANR	437111	CallExpression	"ADD_SOURCE ( block , block -> op2_to )"		435840	0					
ANR	437112	Callee	ADD_SOURCE		435840	0					
ANR	437113	Identifier	ADD_SOURCE		435840	0					
ANR	437114	ArgumentList	block		435840	1					
ANR	437115	Argument	block		435840	0					
ANR	437116	Identifier	block		435840	0					
ANR	437117	Argument	block -> op2_to		435840	1					
ANR	437118	PtrMemberAccess	block -> op2_to		435840	0					
ANR	437119	Identifier	block		435840	0					
ANR	437120	Identifier	op2_to		435840	1					
ANR	437121	ElseStatement	else		435840	0					
ANR	437122	IfStatement	if ( target_block -> op1_to && target -> opcode == ZEND_JMP && ! target_block -> protected )		435840	0					
ANR	437123	Condition	target_block -> op1_to && target -> opcode == ZEND_JMP && ! target_block -> protected	1491:15:49660:49751	435840	0	True				
ANR	437124	AndExpression	target_block -> op1_to && target -> opcode == ZEND_JMP && ! target_block -> protected		435840	0		&&			
ANR	437125	PtrMemberAccess	target_block -> op1_to		435840	0					
ANR	437126	Identifier	target_block		435840	0					
ANR	437127	Identifier	op1_to		435840	1					
ANR	437128	AndExpression	target -> opcode == ZEND_JMP && ! target_block -> protected		435840	1		&&			
ANR	437129	EqualityExpression	target -> opcode == ZEND_JMP		435840	0		==			
ANR	437130	PtrMemberAccess	target -> opcode		435840	0					
ANR	437131	Identifier	target		435840	0					
ANR	437132	Identifier	opcode		435840	1					
ANR	437133	Identifier	ZEND_JMP		435840	1					
ANR	437134	UnaryOperationExpression	! target_block -> protected		435840	1					
ANR	437135	UnaryOperator	!		435840	0					
ANR	437136	PtrMemberAccess	target_block -> protected		435840	1					
ANR	437137	Identifier	target_block		435840	0					
ANR	437138	Identifier	protected		435840	1					
ANR	437139	CompoundStatement		238:33:7307:7307	435840	1					
ANR	437140	ExpressionStatement	"del_source ( block , block -> op2_to )"	1495:5:49810:49842	435840	0	True				
ANR	437141	CallExpression	"del_source ( block , block -> op2_to )"		435840	0					
ANR	437142	Callee	del_source		435840	0					
ANR	437143	Identifier	del_source		435840	0					
ANR	437144	ArgumentList	block		435840	1					
ANR	437145	Argument	block		435840	0					
ANR	437146	Identifier	block		435840	0					
ANR	437147	Argument	block -> op2_to		435840	1					
ANR	437148	PtrMemberAccess	block -> op2_to		435840	0					
ANR	437149	Identifier	block		435840	0					
ANR	437150	Identifier	op2_to		435840	1					
ANR	437151	ExpressionStatement	block -> op2_to = target_block -> op1_to	1496:5:49849:49885	435840	1	True				
ANR	437152	AssignmentExpression	block -> op2_to = target_block -> op1_to		435840	0		=			
ANR	437153	PtrMemberAccess	block -> op2_to		435840	0					
ANR	437154	Identifier	block		435840	0					
ANR	437155	Identifier	op2_to		435840	1					
ANR	437156	PtrMemberAccess	target_block -> op1_to		435840	1					
ANR	437157	Identifier	target_block		435840	0					
ANR	437158	Identifier	op1_to		435840	1					
ANR	437159	ExpressionStatement	"ADD_SOURCE ( block , block -> op2_to )"	1497:5:49892:49924	435840	2	True				
ANR	437160	CallExpression	"ADD_SOURCE ( block , block -> op2_to )"		435840	0					
ANR	437161	Callee	ADD_SOURCE		435840	0					
ANR	437162	Identifier	ADD_SOURCE		435840	0					
ANR	437163	ArgumentList	block		435840	1					
ANR	437164	Argument	block		435840	0					
ANR	437165	Identifier	block		435840	0					
ANR	437166	Argument	block -> op2_to		435840	1					
ANR	437167	PtrMemberAccess	block -> op2_to		435840	0					
ANR	437168	Identifier	block		435840	0					
ANR	437169	Identifier	op2_to		435840	1					
ANR	437170	ElseStatement	else		435840	0					
ANR	437171	IfStatement	if ( target_block -> op2_to && target_block -> ext_to && target -> opcode == ZEND_JMPZNZ && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && ! target_block -> protected )		435840	0					
ANR	437172	Condition	target_block -> op2_to && target_block -> ext_to && target -> opcode == ZEND_JMPZNZ && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && ! target_block -> protected	1498:15:49941:50224	435840	0	True				
ANR	437173	AndExpression	target_block -> op2_to && target_block -> ext_to && target -> opcode == ZEND_JMPZNZ && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && ! target_block -> protected		435840	0		&&			
ANR	437174	PtrMemberAccess	target_block -> op2_to		435840	0					
ANR	437175	Identifier	target_block		435840	0					
ANR	437176	Identifier	op2_to		435840	1					
ANR	437177	AndExpression	target_block -> ext_to && target -> opcode == ZEND_JMPZNZ && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && ! target_block -> protected		435840	1		&&			
ANR	437178	PtrMemberAccess	target_block -> ext_to		435840	0					
ANR	437179	Identifier	target_block		435840	0					
ANR	437180	Identifier	ext_to		435840	1					
ANR	437181	AndExpression	target -> opcode == ZEND_JMPZNZ && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && ! target_block -> protected		435840	1		&&			
ANR	437182	EqualityExpression	target -> opcode == ZEND_JMPZNZ		435840	0		==			
ANR	437183	PtrMemberAccess	target -> opcode		435840	0					
ANR	437184	Identifier	target		435840	0					
ANR	437185	Identifier	opcode		435840	1					
ANR	437186	Identifier	ZEND_JMPZNZ		435840	1					
ANR	437187	AndExpression	( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && ! target_block -> protected		435840	1		&&			
ANR	437188	BitAndExpression	ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV )		435840	0		&			
ANR	437189	CallExpression	ZEND_OP1_TYPE ( target )		435840	0					
ANR	437190	Callee	ZEND_OP1_TYPE		435840	0					
ANR	437191	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	437192	ArgumentList	target		435840	1					
ANR	437193	Argument	target		435840	0					
ANR	437194	Identifier	target		435840	0					
ANR	437195	InclusiveOrExpression	IS_TMP_VAR | IS_CV		435840	1		|			
ANR	437196	Identifier	IS_TMP_VAR		435840	0					
ANR	437197	Identifier	IS_CV		435840	1					
ANR	437198	AndExpression	same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && ! target_block -> protected		435840	1		&&			
ANR	437199	EqualityExpression	same_type == ZEND_OP1_TYPE ( target )		435840	0		==			
ANR	437200	Identifier	same_type		435840	0					
ANR	437201	CallExpression	ZEND_OP1_TYPE ( target )		435840	1					
ANR	437202	Callee	ZEND_OP1_TYPE		435840	0					
ANR	437203	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	437204	ArgumentList	target		435840	1					
ANR	437205	Argument	target		435840	0					
ANR	437206	Identifier	target		435840	0					
ANR	437207	AndExpression	same_var == VAR_NUM_EX ( target -> op1 ) && ! target_block -> protected		435840	1		&&			
ANR	437208	EqualityExpression	same_var == VAR_NUM_EX ( target -> op1 )		435840	0		==			
ANR	437209	Identifier	same_var		435840	0					
ANR	437210	CallExpression	VAR_NUM_EX ( target -> op1 )		435840	1					
ANR	437211	Callee	VAR_NUM_EX		435840	0					
ANR	437212	Identifier	VAR_NUM_EX		435840	0					
ANR	437213	ArgumentList	target -> op1		435840	1					
ANR	437214	Argument	target -> op1		435840	0					
ANR	437215	PtrMemberAccess	target -> op1		435840	0					
ANR	437216	Identifier	target		435840	0					
ANR	437217	Identifier	op1		435840	1					
ANR	437218	UnaryOperationExpression	! target_block -> protected		435840	1					
ANR	437219	UnaryOperator	!		435840	0					
ANR	437220	PtrMemberAccess	target_block -> protected		435840	1					
ANR	437221	Identifier	target_block		435840	0					
ANR	437222	Identifier	protected		435840	1					
ANR	437223	CompoundStatement		249:33:7780:7780	435840	1					
ANR	437224	ExpressionStatement	"del_source ( block , block -> op2_to )"	1506:5:50293:50325	435840	0	True				
ANR	437225	CallExpression	"del_source ( block , block -> op2_to )"		435840	0					
ANR	437226	Callee	del_source		435840	0					
ANR	437227	Identifier	del_source		435840	0					
ANR	437228	ArgumentList	block		435840	1					
ANR	437229	Argument	block		435840	0					
ANR	437230	Identifier	block		435840	0					
ANR	437231	Argument	block -> op2_to		435840	1					
ANR	437232	PtrMemberAccess	block -> op2_to		435840	0					
ANR	437233	Identifier	block		435840	0					
ANR	437234	Identifier	op2_to		435840	1					
ANR	437235	IfStatement	if ( last_op -> opcode == ZEND_JMPZ )		435840	1					
ANR	437236	Condition	last_op -> opcode == ZEND_JMPZ	1507:9:50336:50363	435840	0	True				
ANR	437237	EqualityExpression	last_op -> opcode == ZEND_JMPZ		435840	0		==			
ANR	437238	PtrMemberAccess	last_op -> opcode		435840	0					
ANR	437239	Identifier	last_op		435840	0					
ANR	437240	Identifier	opcode		435840	1					
ANR	437241	Identifier	ZEND_JMPZ		435840	1					
ANR	437242	CompoundStatement		252:39:7919:7919	435840	1					
ANR	437243	ExpressionStatement	block -> op2_to = target_block -> op2_to	1508:6:50374:50410	435840	0	True				
ANR	437244	AssignmentExpression	block -> op2_to = target_block -> op2_to		435840	0		=			
ANR	437245	PtrMemberAccess	block -> op2_to		435840	0					
ANR	437246	Identifier	block		435840	0					
ANR	437247	Identifier	op2_to		435840	1					
ANR	437248	PtrMemberAccess	target_block -> op2_to		435840	1					
ANR	437249	Identifier	target_block		435840	0					
ANR	437250	Identifier	op2_to		435840	1					
ANR	437251	ElseStatement	else		435840	0					
ANR	437252	CompoundStatement		254:12:7977:7977	435840	0					
ANR	437253	ExpressionStatement	block -> op2_to = target_block -> ext_to	1510:6:50432:50468	435840	0	True				
ANR	437254	AssignmentExpression	block -> op2_to = target_block -> ext_to		435840	0		=			
ANR	437255	PtrMemberAccess	block -> op2_to		435840	0					
ANR	437256	Identifier	block		435840	0					
ANR	437257	Identifier	op2_to		435840	1					
ANR	437258	PtrMemberAccess	target_block -> ext_to		435840	1					
ANR	437259	Identifier	target_block		435840	0					
ANR	437260	Identifier	ext_to		435840	1					
ANR	437261	ExpressionStatement	"ADD_SOURCE ( block , block -> op2_to )"	1512:5:50482:50514	435840	2	True				
ANR	437262	CallExpression	"ADD_SOURCE ( block , block -> op2_to )"		435840	0					
ANR	437263	Callee	ADD_SOURCE		435840	0					
ANR	437264	Identifier	ADD_SOURCE		435840	0					
ANR	437265	ArgumentList	block		435840	1					
ANR	437266	Argument	block		435840	0					
ANR	437267	Identifier	block		435840	0					
ANR	437268	Argument	block -> op2_to		435840	1					
ANR	437269	PtrMemberAccess	block -> op2_to		435840	0					
ANR	437270	Identifier	block		435840	0					
ANR	437271	Identifier	op2_to		435840	1					
ANR	437272	IfStatement	if ( block -> follow_to && ( last_op -> opcode == ZEND_JMPZ || last_op -> opcode == ZEND_JMPNZ ) )		435840	8					
ANR	437273	Condition	block -> follow_to && ( last_op -> opcode == ZEND_JMPZ || last_op -> opcode == ZEND_JMPNZ )	1516:7:50535:50624	435840	0	True				
ANR	437274	AndExpression	block -> follow_to && ( last_op -> opcode == ZEND_JMPZ || last_op -> opcode == ZEND_JMPNZ )		435840	0		&&			
ANR	437275	PtrMemberAccess	block -> follow_to		435840	0					
ANR	437276	Identifier	block		435840	0					
ANR	437277	Identifier	follow_to		435840	1					
ANR	437278	OrExpression	last_op -> opcode == ZEND_JMPZ || last_op -> opcode == ZEND_JMPNZ		435840	1		||			
ANR	437279	EqualityExpression	last_op -> opcode == ZEND_JMPZ		435840	0		==			
ANR	437280	PtrMemberAccess	last_op -> opcode		435840	0					
ANR	437281	Identifier	last_op		435840	0					
ANR	437282	Identifier	opcode		435840	1					
ANR	437283	Identifier	ZEND_JMPZ		435840	1					
ANR	437284	EqualityExpression	last_op -> opcode == ZEND_JMPNZ		435840	1		==			
ANR	437285	PtrMemberAccess	last_op -> opcode		435840	0					
ANR	437286	Identifier	last_op		435840	0					
ANR	437287	Identifier	opcode		435840	1					
ANR	437288	Identifier	ZEND_JMPNZ		435840	1					
ANR	437289	CompoundStatement		264:4:8207:8226	435840	1					
ANR	437290	IdentifierDeclStatement	zend_op * target ;	1518:4:50633:50648	435840	0	True				
ANR	437291	IdentifierDecl	* target		435840	0					
ANR	437292	IdentifierDeclType	zend_op *		435840	0					
ANR	437293	Identifier	target		435840	1					
ANR	437294	IdentifierDeclStatement	zend_op * target_end ;	1519:4:50654:50673	435840	1	True				
ANR	437295	IdentifierDecl	* target_end		435840	0					
ANR	437296	IdentifierDeclType	zend_op *		435840	0					
ANR	437297	Identifier	target_end		435840	1					
ANR	437298	WhileStatement	while ( 1 )		435840	2					
ANR	437299	Condition	1	1521:11:50687:50687	435840	0	True				
ANR	437300	PrimaryExpression	1		435840	0					
ANR	437301	CompoundStatement		266:14:8243:8243	435840	1					
ANR	437302	ExpressionStatement	target = block -> follow_to -> start_opline	1522:5:50697:50736	435840	0	True				
ANR	437303	AssignmentExpression	target = block -> follow_to -> start_opline		435840	0		=			
ANR	437304	Identifier	target		435840	0					
ANR	437305	PtrMemberAccess	block -> follow_to -> start_opline		435840	1					
ANR	437306	PtrMemberAccess	block -> follow_to		435840	0					
ANR	437307	Identifier	block		435840	0					
ANR	437308	Identifier	follow_to		435840	1					
ANR	437309	Identifier	start_opline		435840	1					
ANR	437310	ExpressionStatement	target_end = block -> follow_to -> start_opline + block -> follow_to -> len	1523:5:50743:50810	435840	1	True				
ANR	437311	AssignmentExpression	target_end = block -> follow_to -> start_opline + block -> follow_to -> len		435840	0		=			
ANR	437312	Identifier	target_end		435840	0					
ANR	437313	AdditiveExpression	block -> follow_to -> start_opline + block -> follow_to -> len		435840	1		+			
ANR	437314	PtrMemberAccess	block -> follow_to -> start_opline		435840	0					
ANR	437315	PtrMemberAccess	block -> follow_to		435840	0					
ANR	437316	Identifier	block		435840	0					
ANR	437317	Identifier	follow_to		435840	1					
ANR	437318	Identifier	start_opline		435840	1					
ANR	437319	PtrMemberAccess	block -> follow_to -> len		435840	1					
ANR	437320	PtrMemberAccess	block -> follow_to		435840	0					
ANR	437321	Identifier	block		435840	0					
ANR	437322	Identifier	follow_to		435840	1					
ANR	437323	Identifier	len		435840	1					
ANR	437324	WhileStatement	while ( target < target_end && target -> opcode == ZEND_NOP )		435840	2					
ANR	437325	Condition	target < target_end && target -> opcode == ZEND_NOP	1524:12:50824:50872	435840	0	True				
ANR	437326	AndExpression	target < target_end && target -> opcode == ZEND_NOP		435840	0		&&			
ANR	437327	RelationalExpression	target < target_end		435840	0		<			
ANR	437328	Identifier	target		435840	0					
ANR	437329	Identifier	target_end		435840	1					
ANR	437330	EqualityExpression	target -> opcode == ZEND_NOP		435840	1		==			
ANR	437331	PtrMemberAccess	target -> opcode		435840	0					
ANR	437332	Identifier	target		435840	0					
ANR	437333	Identifier	opcode		435840	1					
ANR	437334	Identifier	ZEND_NOP		435840	1					
ANR	437335	CompoundStatement		269:63:8428:8428	435840	1					
ANR	437336	ExpressionStatement	target ++	1525:6:50883:50891	435840	0	True				
ANR	437337	PostIncDecOperationExpression	target ++		435840	0					
ANR	437338	Identifier	target		435840	0					
ANR	437339	IncDec	++		435840	1					
ANR	437340	IfStatement	if ( target == target_end && ! block -> follow_to -> protected )		435840	3					
ANR	437341	Condition	target == target_end && ! block -> follow_to -> protected	1529:9:50946:50998	435840	0	True				
ANR	437342	AndExpression	target == target_end && ! block -> follow_to -> protected		435840	0		&&			
ANR	437343	EqualityExpression	target == target_end		435840	0		==			
ANR	437344	Identifier	target		435840	0					
ANR	437345	Identifier	target_end		435840	1					
ANR	437346	UnaryOperationExpression	! block -> follow_to -> protected		435840	1					
ANR	437347	UnaryOperator	!		435840	0					
ANR	437348	PtrMemberAccess	block -> follow_to -> protected		435840	1					
ANR	437349	PtrMemberAccess	block -> follow_to		435840	0					
ANR	437350	Identifier	block		435840	0					
ANR	437351	Identifier	follow_to		435840	1					
ANR	437352	Identifier	protected		435840	1					
ANR	437353	CompoundStatement		274:64:8554:8554	435840	1					
ANR	437354	ExpressionStatement	"del_source ( block , block -> follow_to )"	1530:6:51009:51044	435840	0	True				
ANR	437355	CallExpression	"del_source ( block , block -> follow_to )"		435840	0					
ANR	437356	Callee	del_source		435840	0					
ANR	437357	Identifier	del_source		435840	0					
ANR	437358	ArgumentList	block		435840	1					
ANR	437359	Argument	block		435840	0					
ANR	437360	Identifier	block		435840	0					
ANR	437361	Argument	block -> follow_to		435840	1					
ANR	437362	PtrMemberAccess	block -> follow_to		435840	0					
ANR	437363	Identifier	block		435840	0					
ANR	437364	Identifier	follow_to		435840	1					
ANR	437365	ExpressionStatement	block -> follow_to = block -> follow_to -> follow_to	1531:6:51052:51098	435840	1	True				
ANR	437366	AssignmentExpression	block -> follow_to = block -> follow_to -> follow_to		435840	0		=			
ANR	437367	PtrMemberAccess	block -> follow_to		435840	0					
ANR	437368	Identifier	block		435840	0					
ANR	437369	Identifier	follow_to		435840	1					
ANR	437370	PtrMemberAccess	block -> follow_to -> follow_to		435840	1					
ANR	437371	PtrMemberAccess	block -> follow_to		435840	0					
ANR	437372	Identifier	block		435840	0					
ANR	437373	Identifier	follow_to		435840	1					
ANR	437374	Identifier	follow_to		435840	1					
ANR	437375	ExpressionStatement	"ADD_SOURCE ( block , block -> follow_to )"	1532:6:51106:51141	435840	2	True				
ANR	437376	CallExpression	"ADD_SOURCE ( block , block -> follow_to )"		435840	0					
ANR	437377	Callee	ADD_SOURCE		435840	0					
ANR	437378	Identifier	ADD_SOURCE		435840	0					
ANR	437379	ArgumentList	block		435840	1					
ANR	437380	Argument	block		435840	0					
ANR	437381	Identifier	block		435840	0					
ANR	437382	Argument	block -> follow_to		435840	1					
ANR	437383	PtrMemberAccess	block -> follow_to		435840	0					
ANR	437384	Identifier	block		435840	0					
ANR	437385	Identifier	follow_to		435840	1					
ANR	437386	ElseStatement	else		435840	0					
ANR	437387	CompoundStatement		278:12:8708:8708	435840	0					
ANR	437388	BreakStatement	break ;	1534:6:51163:51168	435840	0	True				
ANR	437389	IfStatement	if ( target -> opcode == ZEND_JMP && block -> follow_to -> op1_to && ! block -> follow_to -> protected )		435840	3					
ANR	437390	Condition	target -> opcode == ZEND_JMP && block -> follow_to -> op1_to && ! block -> follow_to -> protected	1538:8:51240:51335	435840	0	True				
ANR	437391	AndExpression	target -> opcode == ZEND_JMP && block -> follow_to -> op1_to && ! block -> follow_to -> protected		435840	0		&&			
ANR	437392	EqualityExpression	target -> opcode == ZEND_JMP		435840	0		==			
ANR	437393	PtrMemberAccess	target -> opcode		435840	0					
ANR	437394	Identifier	target		435840	0					
ANR	437395	Identifier	opcode		435840	1					
ANR	437396	Identifier	ZEND_JMP		435840	1					
ANR	437397	AndExpression	block -> follow_to -> op1_to && ! block -> follow_to -> protected		435840	1		&&			
ANR	437398	PtrMemberAccess	block -> follow_to -> op1_to		435840	0					
ANR	437399	PtrMemberAccess	block -> follow_to		435840	0					
ANR	437400	Identifier	block		435840	0					
ANR	437401	Identifier	follow_to		435840	1					
ANR	437402	Identifier	op1_to		435840	1					
ANR	437403	UnaryOperationExpression	! block -> follow_to -> protected		435840	1					
ANR	437404	UnaryOperator	!		435840	0					
ANR	437405	PtrMemberAccess	block -> follow_to -> protected		435840	1					
ANR	437406	PtrMemberAccess	block -> follow_to		435840	0					
ANR	437407	Identifier	block		435840	0					
ANR	437408	Identifier	follow_to		435840	1					
ANR	437409	Identifier	protected		435840	1					
ANR	437410	CompoundStatement		285:35:8891:8891	435840	1					
ANR	437411	ExpressionStatement	"del_source ( block , block -> follow_to )"	1541:5:51345:51380	435840	0	True				
ANR	437412	CallExpression	"del_source ( block , block -> follow_to )"		435840	0					
ANR	437413	Callee	del_source		435840	0					
ANR	437414	Identifier	del_source		435840	0					
ANR	437415	ArgumentList	block		435840	1					
ANR	437416	Argument	block		435840	0					
ANR	437417	Identifier	block		435840	0					
ANR	437418	Argument	block -> follow_to		435840	1					
ANR	437419	PtrMemberAccess	block -> follow_to		435840	0					
ANR	437420	Identifier	block		435840	0					
ANR	437421	Identifier	follow_to		435840	1					
ANR	437422	IfStatement	if ( last_op -> opcode == ZEND_JMPZ )		435840	1					
ANR	437423	Condition	last_op -> opcode == ZEND_JMPZ	1542:9:51391:51418	435840	0	True				
ANR	437424	EqualityExpression	last_op -> opcode == ZEND_JMPZ		435840	0		==			
ANR	437425	PtrMemberAccess	last_op -> opcode		435840	0					
ANR	437426	Identifier	last_op		435840	0					
ANR	437427	Identifier	opcode		435840	1					
ANR	437428	Identifier	ZEND_JMPZ		435840	1					
ANR	437429	CompoundStatement		287:39:8974:8974	435840	1					
ANR	437430	ExpressionStatement	block -> ext_to = block -> follow_to -> op1_to	1543:6:51429:51469	435840	0	True				
ANR	437431	AssignmentExpression	block -> ext_to = block -> follow_to -> op1_to		435840	0		=			
ANR	437432	PtrMemberAccess	block -> ext_to		435840	0					
ANR	437433	Identifier	block		435840	0					
ANR	437434	Identifier	ext_to		435840	1					
ANR	437435	PtrMemberAccess	block -> follow_to -> op1_to		435840	1					
ANR	437436	PtrMemberAccess	block -> follow_to		435840	0					
ANR	437437	Identifier	block		435840	0					
ANR	437438	Identifier	follow_to		435840	1					
ANR	437439	Identifier	op1_to		435840	1					
ANR	437440	ExpressionStatement	"ADD_SOURCE ( block , block -> ext_to )"	1544:6:51477:51509	435840	1	True				
ANR	437441	CallExpression	"ADD_SOURCE ( block , block -> ext_to )"		435840	0					
ANR	437442	Callee	ADD_SOURCE		435840	0					
ANR	437443	Identifier	ADD_SOURCE		435840	0					
ANR	437444	ArgumentList	block		435840	1					
ANR	437445	Argument	block		435840	0					
ANR	437446	Identifier	block		435840	0					
ANR	437447	Argument	block -> ext_to		435840	1					
ANR	437448	PtrMemberAccess	block -> ext_to		435840	0					
ANR	437449	Identifier	block		435840	0					
ANR	437450	Identifier	ext_to		435840	1					
ANR	437451	ElseStatement	else		435840	0					
ANR	437452	CompoundStatement		290:12:9076:9076	435840	0					
ANR	437453	ExpressionStatement	block -> ext_to = block -> op2_to	1546:6:51531:51560	435840	0	True				
ANR	437454	AssignmentExpression	block -> ext_to = block -> op2_to		435840	0		=			
ANR	437455	PtrMemberAccess	block -> ext_to		435840	0					
ANR	437456	Identifier	block		435840	0					
ANR	437457	Identifier	ext_to		435840	1					
ANR	437458	PtrMemberAccess	block -> op2_to		435840	1					
ANR	437459	Identifier	block		435840	0					
ANR	437460	Identifier	op2_to		435840	1					
ANR	437461	ExpressionStatement	block -> op2_to = block -> follow_to -> op1_to	1547:6:51568:51608	435840	1	True				
ANR	437462	AssignmentExpression	block -> op2_to = block -> follow_to -> op1_to		435840	0		=			
ANR	437463	PtrMemberAccess	block -> op2_to		435840	0					
ANR	437464	Identifier	block		435840	0					
ANR	437465	Identifier	op2_to		435840	1					
ANR	437466	PtrMemberAccess	block -> follow_to -> op1_to		435840	1					
ANR	437467	PtrMemberAccess	block -> follow_to		435840	0					
ANR	437468	Identifier	block		435840	0					
ANR	437469	Identifier	follow_to		435840	1					
ANR	437470	Identifier	op1_to		435840	1					
ANR	437471	ExpressionStatement	"ADD_SOURCE ( block , block -> op2_to )"	1548:6:51616:51648	435840	2	True				
ANR	437472	CallExpression	"ADD_SOURCE ( block , block -> op2_to )"		435840	0					
ANR	437473	Callee	ADD_SOURCE		435840	0					
ANR	437474	Identifier	ADD_SOURCE		435840	0					
ANR	437475	ArgumentList	block		435840	1					
ANR	437476	Argument	block		435840	0					
ANR	437477	Identifier	block		435840	0					
ANR	437478	Argument	block -> op2_to		435840	1					
ANR	437479	PtrMemberAccess	block -> op2_to		435840	0					
ANR	437480	Identifier	block		435840	0					
ANR	437481	Identifier	op2_to		435840	1					
ANR	437482	ExpressionStatement	block -> follow_to = NULL	1550:5:51662:51685	435840	2	True				
ANR	437483	AssignmentExpression	block -> follow_to = NULL		435840	0		=			
ANR	437484	PtrMemberAccess	block -> follow_to		435840	0					
ANR	437485	Identifier	block		435840	0					
ANR	437486	Identifier	follow_to		435840	1					
ANR	437487	Identifier	NULL		435840	1					
ANR	437488	ExpressionStatement	last_op -> opcode = ZEND_JMPZNZ	1551:5:51692:51721	435840	3	True				
ANR	437489	AssignmentExpression	last_op -> opcode = ZEND_JMPZNZ		435840	0		=			
ANR	437490	PtrMemberAccess	last_op -> opcode		435840	0					
ANR	437491	Identifier	last_op		435840	0					
ANR	437492	Identifier	opcode		435840	1					
ANR	437493	Identifier	ZEND_JMPZNZ		435840	1					
ANR	437494	BreakStatement	break ;	1554:3:51737:51742	435840	9	True				
ANR	437495	Label	case ZEND_JMPNZ_EX :	1556:2:51747:51765	435840	10	True				
ANR	437496	Identifier	ZEND_JMPNZ_EX		435840	0					
ANR	437497	Label	case ZEND_JMPZ_EX :	1557:2:51769:51786	435840	11	True				
ANR	437498	Identifier	ZEND_JMPZ_EX		435840	0					
ANR	437499	IfStatement	if ( ZEND_OP1_TYPE ( last_op ) == IS_CONST )		435840	12					
ANR	437500	Condition	ZEND_OP1_TYPE ( last_op ) == IS_CONST	1559:7:51830:51863	435840	0	True				
ANR	437501	EqualityExpression	ZEND_OP1_TYPE ( last_op ) == IS_CONST		435840	0		==			
ANR	437502	CallExpression	ZEND_OP1_TYPE ( last_op )		435840	0					
ANR	437503	Callee	ZEND_OP1_TYPE		435840	0					
ANR	437504	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	437505	ArgumentList	last_op		435840	1					
ANR	437506	Argument	last_op		435840	0					
ANR	437507	Identifier	last_op		435840	0					
ANR	437508	Identifier	IS_CONST		435840	1					
ANR	437509	CompoundStatement		305:4:9425:9482	435840	1					
ANR	437510	IdentifierDeclStatement	int should_jmp = zend_is_true ( & ZEND_OP1_LITERAL ( last_op ) ) ;	1560:4:51872:51929	435840	0	True				
ANR	437511	IdentifierDecl	should_jmp = zend_is_true ( & ZEND_OP1_LITERAL ( last_op ) )		435840	0					
ANR	437512	IdentifierDeclType	int		435840	0					
ANR	437513	Identifier	should_jmp		435840	1					
ANR	437514	AssignmentExpression	should_jmp = zend_is_true ( & ZEND_OP1_LITERAL ( last_op ) )		435840	2		=			
ANR	437515	Identifier	should_jmp		435840	0					
ANR	437516	CallExpression	zend_is_true ( & ZEND_OP1_LITERAL ( last_op ) )		435840	1					
ANR	437517	Callee	zend_is_true		435840	0					
ANR	437518	Identifier	zend_is_true		435840	0					
ANR	437519	ArgumentList	& ZEND_OP1_LITERAL ( last_op )		435840	1					
ANR	437520	Argument	& ZEND_OP1_LITERAL ( last_op )		435840	0					
ANR	437521	UnaryOperationExpression	& ZEND_OP1_LITERAL ( last_op )		435840	0					
ANR	437522	UnaryOperator	&		435840	0					
ANR	437523	CallExpression	ZEND_OP1_LITERAL ( last_op )		435840	1					
ANR	437524	Callee	ZEND_OP1_LITERAL		435840	0					
ANR	437525	Identifier	ZEND_OP1_LITERAL		435840	0					
ANR	437526	ArgumentList	last_op		435840	1					
ANR	437527	Argument	last_op		435840	0					
ANR	437528	Identifier	last_op		435840	0					
ANR	437529	IfStatement	if ( last_op -> opcode == ZEND_JMPZ_EX )		435840	1					
ANR	437530	Condition	last_op -> opcode == ZEND_JMPZ_EX	1562:8:51940:51970	435840	0	True				
ANR	437531	EqualityExpression	last_op -> opcode == ZEND_JMPZ_EX		435840	0		==			
ANR	437532	PtrMemberAccess	last_op -> opcode		435840	0					
ANR	437533	Identifier	last_op		435840	0					
ANR	437534	Identifier	opcode		435840	1					
ANR	437535	Identifier	ZEND_JMPZ_EX		435840	1					
ANR	437536	CompoundStatement		307:41:9526:9526	435840	1					
ANR	437537	ExpressionStatement	should_jmp = ! should_jmp	1563:5:51980:52004	435840	0	True				
ANR	437538	AssignmentExpression	should_jmp = ! should_jmp		435840	0		=			
ANR	437539	Identifier	should_jmp		435840	0					
ANR	437540	UnaryOperationExpression	! should_jmp		435840	1					
ANR	437541	UnaryOperator	!		435840	0					
ANR	437542	Identifier	should_jmp		435840	1					
ANR	437543	IfStatement	if ( ! should_jmp )		435840	2					
ANR	437544	Condition	! should_jmp	1565:8:52020:52030	435840	0	True				
ANR	437545	UnaryOperationExpression	! should_jmp		435840	0					
ANR	437546	UnaryOperator	!		435840	0					
ANR	437547	Identifier	should_jmp		435840	1					
ANR	437548	CompoundStatement		310:21:9586:9586	435840	1					
ANR	437549	ExpressionStatement	last_op -> opcode = ZEND_QM_ASSIGN	1569:5:52156:52188	435840	0	True				
ANR	437550	AssignmentExpression	last_op -> opcode = ZEND_QM_ASSIGN		435840	0		=			
ANR	437551	PtrMemberAccess	last_op -> opcode		435840	0					
ANR	437552	Identifier	last_op		435840	0					
ANR	437553	Identifier	opcode		435840	1					
ANR	437554	Identifier	ZEND_QM_ASSIGN		435840	1					
ANR	437555	ExpressionStatement	SET_UNUSED ( last_op -> op2 )	1570:5:52195:52219	435840	1	True				
ANR	437556	CallExpression	SET_UNUSED ( last_op -> op2 )		435840	0					
ANR	437557	Callee	SET_UNUSED		435840	0					
ANR	437558	Identifier	SET_UNUSED		435840	0					
ANR	437559	ArgumentList	last_op -> op2		435840	1					
ANR	437560	Argument	last_op -> op2		435840	0					
ANR	437561	PtrMemberAccess	last_op -> op2		435840	0					
ANR	437562	Identifier	last_op		435840	0					
ANR	437563	Identifier	op2		435840	1					
ANR	437564	ExpressionStatement	"del_source ( block , block -> op2_to )"	1571:5:52226:52258	435840	2	True				
ANR	437565	CallExpression	"del_source ( block , block -> op2_to )"		435840	0					
ANR	437566	Callee	del_source		435840	0					
ANR	437567	Identifier	del_source		435840	0					
ANR	437568	ArgumentList	block		435840	1					
ANR	437569	Argument	block		435840	0					
ANR	437570	Identifier	block		435840	0					
ANR	437571	Argument	block -> op2_to		435840	1					
ANR	437572	PtrMemberAccess	block -> op2_to		435840	0					
ANR	437573	Identifier	block		435840	0					
ANR	437574	Identifier	op2_to		435840	1					
ANR	437575	ExpressionStatement	block -> op2_to = NULL	1572:5:52265:52285	435840	3	True				
ANR	437576	AssignmentExpression	block -> op2_to = NULL		435840	0		=			
ANR	437577	PtrMemberAccess	block -> op2_to		435840	0					
ANR	437578	Identifier	block		435840	0					
ANR	437579	Identifier	op2_to		435840	1					
ANR	437580	Identifier	NULL		435840	1					
ANR	437581	BreakStatement	break ;	1574:4:52297:52302	435840	3	True				
ANR	437582	IfStatement	if ( block -> op2_to )		435840	13					
ANR	437583	Condition	block -> op2_to	1577:7:52317:52329	435840	0	True				
ANR	437584	PtrMemberAccess	block -> op2_to		435840	0					
ANR	437585	Identifier	block		435840	0					
ANR	437586	Identifier	op2_to		435840	1					
ANR	437587	CompoundStatement		326:4:9983:10029	435840	1					
ANR	437588	IdentifierDeclStatement	"zend_op * target , * target_end ;"	1578:4:52338:52366	435840	0	True				
ANR	437589	IdentifierDecl	* target		435840	0					
ANR	437590	IdentifierDeclType	zend_op *		435840	0					
ANR	437591	Identifier	target		435840	1					
ANR	437592	IdentifierDecl	* target_end		435840	1					
ANR	437593	IdentifierDeclType	zend_op *		435840	0					
ANR	437594	Identifier	target_end		435840	1					
ANR	437595	IdentifierDeclStatement	char * same_t = NULL ;	1579:4:52372:52389	435840	1	True				
ANR	437596	IdentifierDecl	* same_t = NULL		435840	0					
ANR	437597	IdentifierDeclType	char *		435840	0					
ANR	437598	Identifier	same_t		435840	1					
ANR	437599	AssignmentExpression	* same_t = NULL		435840	2		=			
ANR	437600	Identifier	NULL		435840	0					
ANR	437601	Identifier	NULL		435840	1					
ANR	437602	IdentifierDeclStatement	zend_code_block * target_block ;	1580:4:52395:52424	435840	2	True				
ANR	437603	IdentifierDecl	* target_block		435840	0					
ANR	437604	IdentifierDeclType	zend_code_block *		435840	0					
ANR	437605	Identifier	target_block		435840	1					
ANR	437606	IdentifierDeclStatement	int var_num = op_array -> last_var + op_array -> T ;	1581:4:52430:52476	435840	3	True				
ANR	437607	IdentifierDecl	var_num = op_array -> last_var + op_array -> T		435840	0					
ANR	437608	IdentifierDeclType	int		435840	0					
ANR	437609	Identifier	var_num		435840	1					
ANR	437610	AssignmentExpression	var_num = op_array -> last_var + op_array -> T		435840	2		=			
ANR	437611	Identifier	var_num		435840	0					
ANR	437612	AdditiveExpression	op_array -> last_var + op_array -> T		435840	1		+			
ANR	437613	PtrMemberAccess	op_array -> last_var		435840	0					
ANR	437614	Identifier	op_array		435840	0					
ANR	437615	Identifier	last_var		435840	1					
ANR	437616	PtrMemberAccess	op_array -> T		435840	1					
ANR	437617	Identifier	op_array		435840	0					
ANR	437618	Identifier	T		435840	1					
ANR	437619	IfStatement	if ( var_num <= 0 )		435840	4					
ANR	437620	Condition	var_num <= 0	1583:8:52487:52498	435840	0	True				
ANR	437621	RelationalExpression	var_num <= 0		435840	0		<=			
ANR	437622	Identifier	var_num		435840	0					
ANR	437623	PrimaryExpression	0		435840	1					
ANR	437624	CompoundStatement		328:22:10054:10054	435840	1					
ANR	437625	ReturnStatement	return ;	1584:8:52511:52517	435840	0	True				
ANR	437626	ExpressionStatement	same_t = cfg -> same_t	1586:4:52529:52549	435840	5	True				
ANR	437627	AssignmentExpression	same_t = cfg -> same_t		435840	0		=			
ANR	437628	Identifier	same_t		435840	0					
ANR	437629	PtrMemberAccess	cfg -> same_t		435840	1					
ANR	437630	Identifier	cfg		435840	0					
ANR	437631	Identifier	same_t		435840	1					
ANR	437632	ExpressionStatement	"memset ( same_t , 0 , var_num )"	1587:4:52555:52581	435840	6	True				
ANR	437633	CallExpression	"memset ( same_t , 0 , var_num )"		435840	0					
ANR	437634	Callee	memset		435840	0					
ANR	437635	Identifier	memset		435840	0					
ANR	437636	ArgumentList	same_t		435840	1					
ANR	437637	Argument	same_t		435840	0					
ANR	437638	Identifier	same_t		435840	0					
ANR	437639	Argument	0		435840	1					
ANR	437640	PrimaryExpression	0		435840	0					
ANR	437641	Argument	var_num		435840	2					
ANR	437642	Identifier	var_num		435840	0					
ANR	437643	ExpressionStatement	same_t [ VAR_NUM_EX ( last_op -> op1 ) ] |= ZEND_OP1_TYPE ( last_op )	1588:4:52587:52645	435840	7	True				
ANR	437644	AssignmentExpression	same_t [ VAR_NUM_EX ( last_op -> op1 ) ] |= ZEND_OP1_TYPE ( last_op )		435840	0		|=			
ANR	437645	ArrayIndexing	same_t [ VAR_NUM_EX ( last_op -> op1 ) ]		435840	0					
ANR	437646	Identifier	same_t		435840	0					
ANR	437647	CallExpression	VAR_NUM_EX ( last_op -> op1 )		435840	1					
ANR	437648	Callee	VAR_NUM_EX		435840	0					
ANR	437649	Identifier	VAR_NUM_EX		435840	0					
ANR	437650	ArgumentList	last_op -> op1		435840	1					
ANR	437651	Argument	last_op -> op1		435840	0					
ANR	437652	PtrMemberAccess	last_op -> op1		435840	0					
ANR	437653	Identifier	last_op		435840	0					
ANR	437654	Identifier	op1		435840	1					
ANR	437655	CallExpression	ZEND_OP1_TYPE ( last_op )		435840	1					
ANR	437656	Callee	ZEND_OP1_TYPE		435840	0					
ANR	437657	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	437658	ArgumentList	last_op		435840	1					
ANR	437659	Argument	last_op		435840	0					
ANR	437660	Identifier	last_op		435840	0					
ANR	437661	ExpressionStatement	same_t [ VAR_NUM_EX ( last_op -> result ) ] |= ZEND_RESULT_TYPE ( last_op )	1589:4:52651:52715	435840	8	True				
ANR	437662	AssignmentExpression	same_t [ VAR_NUM_EX ( last_op -> result ) ] |= ZEND_RESULT_TYPE ( last_op )		435840	0		|=			
ANR	437663	ArrayIndexing	same_t [ VAR_NUM_EX ( last_op -> result ) ]		435840	0					
ANR	437664	Identifier	same_t		435840	0					
ANR	437665	CallExpression	VAR_NUM_EX ( last_op -> result )		435840	1					
ANR	437666	Callee	VAR_NUM_EX		435840	0					
ANR	437667	Identifier	VAR_NUM_EX		435840	0					
ANR	437668	ArgumentList	last_op -> result		435840	1					
ANR	437669	Argument	last_op -> result		435840	0					
ANR	437670	PtrMemberAccess	last_op -> result		435840	0					
ANR	437671	Identifier	last_op		435840	0					
ANR	437672	Identifier	result		435840	1					
ANR	437673	CallExpression	ZEND_RESULT_TYPE ( last_op )		435840	1					
ANR	437674	Callee	ZEND_RESULT_TYPE		435840	0					
ANR	437675	Identifier	ZEND_RESULT_TYPE		435840	0					
ANR	437676	ArgumentList	last_op		435840	1					
ANR	437677	Argument	last_op		435840	0					
ANR	437678	Identifier	last_op		435840	0					
ANR	437679	ExpressionStatement	target_block = block -> op2_to	1590:4:52721:52749	435840	9	True				
ANR	437680	AssignmentExpression	target_block = block -> op2_to		435840	0		=			
ANR	437681	Identifier	target_block		435840	0					
ANR	437682	PtrMemberAccess	block -> op2_to		435840	1					
ANR	437683	Identifier	block		435840	0					
ANR	437684	Identifier	op2_to		435840	1					
ANR	437685	Label	next_target_ex :	1591:0:52751:52765	435840	10	True				
ANR	437686	Identifier	next_target_ex		435840	0					
ANR	437687	ExpressionStatement	target = target_block -> start_opline	1592:4:52771:52806	435840	11	True				
ANR	437688	AssignmentExpression	target = target_block -> start_opline		435840	0		=			
ANR	437689	Identifier	target		435840	0					
ANR	437690	PtrMemberAccess	target_block -> start_opline		435840	1					
ANR	437691	Identifier	target_block		435840	0					
ANR	437692	Identifier	start_opline		435840	1					
ANR	437693	ExpressionStatement	target_end = target_block -> start_opline + target_block -> len	1593:4:52812:52871	435840	12	True				
ANR	437694	AssignmentExpression	target_end = target_block -> start_opline + target_block -> len		435840	0		=			
ANR	437695	Identifier	target_end		435840	0					
ANR	437696	AdditiveExpression	target_block -> start_opline + target_block -> len		435840	1		+			
ANR	437697	PtrMemberAccess	target_block -> start_opline		435840	0					
ANR	437698	Identifier	target_block		435840	0					
ANR	437699	Identifier	start_opline		435840	1					
ANR	437700	PtrMemberAccess	target_block -> len		435840	1					
ANR	437701	Identifier	target_block		435840	0					
ANR	437702	Identifier	len		435840	1					
ANR	437703	WhileStatement	while ( target < target_end && target -> opcode == ZEND_NOP )		435840	13					
ANR	437704	Condition	target < target_end && target -> opcode == ZEND_NOP	1594:11:52884:52932	435840	0	True				
ANR	437705	AndExpression	target < target_end && target -> opcode == ZEND_NOP		435840	0		&&			
ANR	437706	RelationalExpression	target < target_end		435840	0		<			
ANR	437707	Identifier	target		435840	0					
ANR	437708	Identifier	target_end		435840	1					
ANR	437709	EqualityExpression	target -> opcode == ZEND_NOP		435840	1		==			
ANR	437710	PtrMemberAccess	target -> opcode		435840	0					
ANR	437711	Identifier	target		435840	0					
ANR	437712	Identifier	opcode		435840	1					
ANR	437713	Identifier	ZEND_NOP		435840	1					
ANR	437714	CompoundStatement		339:62:10488:10488	435840	1					
ANR	437715	ExpressionStatement	target ++	1595:5:52942:52950	435840	0	True				
ANR	437716	PostIncDecOperationExpression	target ++		435840	0					
ANR	437717	Identifier	target		435840	0					
ANR	437718	IncDec	++		435840	1					
ANR	437719	IfStatement	if ( target == target_end )		435840	14					
ANR	437720	Condition	target == target_end	1598:8:53002:53021	435840	0	True				
ANR	437721	EqualityExpression	target == target_end		435840	0		==			
ANR	437722	Identifier	target		435840	0					
ANR	437723	Identifier	target_end		435840	1					
ANR	437724	CompoundStatement		343:30:10577:10577	435840	1					
ANR	437725	ExpressionStatement	target_block = target_block -> follow_to	1599:5:53031:53069	435840	0	True				
ANR	437726	AssignmentExpression	target_block = target_block -> follow_to		435840	0		=			
ANR	437727	Identifier	target_block		435840	0					
ANR	437728	PtrMemberAccess	target_block -> follow_to		435840	1					
ANR	437729	Identifier	target_block		435840	0					
ANR	437730	Identifier	follow_to		435840	1					
ANR	437731	GotoStatement	goto next_target_ex ;	1600:5:53076:53095	435840	1	True				
ANR	437732	Identifier	next_target_ex		435840	0					
ANR	437733	ElseStatement	else		435840	0					
ANR	437734	IfStatement	if ( target_block -> op2_to && target -> opcode == last_op -> opcode - 3 && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && ( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ! target_block -> protected )		435840	0					
ANR	437735	Condition	target_block -> op2_to && target -> opcode == last_op -> opcode - 3 && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && ( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ! target_block -> protected	1601:15:53112:53348	435840	0	True				
ANR	437736	AndExpression	target_block -> op2_to && target -> opcode == last_op -> opcode - 3 && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && ( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ! target_block -> protected		435840	0		&&			
ANR	437737	PtrMemberAccess	target_block -> op2_to		435840	0					
ANR	437738	Identifier	target_block		435840	0					
ANR	437739	Identifier	op2_to		435840	1					
ANR	437740	AndExpression	target -> opcode == last_op -> opcode - 3 && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && ( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ! target_block -> protected		435840	1		&&			
ANR	437741	EqualityExpression	target -> opcode == last_op -> opcode - 3		435840	0		==			
ANR	437742	PtrMemberAccess	target -> opcode		435840	0					
ANR	437743	Identifier	target		435840	0					
ANR	437744	Identifier	opcode		435840	1					
ANR	437745	AdditiveExpression	last_op -> opcode - 3		435840	1		-			
ANR	437746	PtrMemberAccess	last_op -> opcode		435840	0					
ANR	437747	Identifier	last_op		435840	0					
ANR	437748	Identifier	opcode		435840	1					
ANR	437749	PrimaryExpression	3		435840	1					
ANR	437750	AndExpression	( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && ( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ! target_block -> protected		435840	1		&&			
ANR	437751	BitAndExpression	ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV )		435840	0		&			
ANR	437752	CallExpression	ZEND_OP1_TYPE ( target )		435840	0					
ANR	437753	Callee	ZEND_OP1_TYPE		435840	0					
ANR	437754	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	437755	ArgumentList	target		435840	1					
ANR	437756	Argument	target		435840	0					
ANR	437757	Identifier	target		435840	0					
ANR	437758	InclusiveOrExpression	IS_TMP_VAR | IS_CV		435840	1		|			
ANR	437759	Identifier	IS_TMP_VAR		435840	0					
ANR	437760	Identifier	IS_CV		435840	1					
ANR	437761	AndExpression	( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ! target_block -> protected		435840	1		&&			
ANR	437762	EqualityExpression	( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0		435840	0		!=			
ANR	437763	BitAndExpression	same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target )		435840	0		&			
ANR	437764	ArrayIndexing	same_t [ VAR_NUM_EX ( target -> op1 ) ]		435840	0					
ANR	437765	Identifier	same_t		435840	0					
ANR	437766	CallExpression	VAR_NUM_EX ( target -> op1 )		435840	1					
ANR	437767	Callee	VAR_NUM_EX		435840	0					
ANR	437768	Identifier	VAR_NUM_EX		435840	0					
ANR	437769	ArgumentList	target -> op1		435840	1					
ANR	437770	Argument	target -> op1		435840	0					
ANR	437771	PtrMemberAccess	target -> op1		435840	0					
ANR	437772	Identifier	target		435840	0					
ANR	437773	Identifier	op1		435840	1					
ANR	437774	CallExpression	ZEND_OP1_TYPE ( target )		435840	1					
ANR	437775	Callee	ZEND_OP1_TYPE		435840	0					
ANR	437776	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	437777	ArgumentList	target		435840	1					
ANR	437778	Argument	target		435840	0					
ANR	437779	Identifier	target		435840	0					
ANR	437780	PrimaryExpression	0		435840	1					
ANR	437781	UnaryOperationExpression	! target_block -> protected		435840	1					
ANR	437782	UnaryOperator	!		435840	0					
ANR	437783	PtrMemberAccess	target_block -> protected		435840	1					
ANR	437784	Identifier	target_block		435840	0					
ANR	437785	Identifier	protected		435840	1					
ANR	437786	CompoundStatement		350:35:10904:10904	435840	1					
ANR	437787	ExpressionStatement	"del_source ( block , block -> op2_to )"	1607:5:53431:53463	435840	0	True				
ANR	437788	CallExpression	"del_source ( block , block -> op2_to )"		435840	0					
ANR	437789	Callee	del_source		435840	0					
ANR	437790	Identifier	del_source		435840	0					
ANR	437791	ArgumentList	block		435840	1					
ANR	437792	Argument	block		435840	0					
ANR	437793	Identifier	block		435840	0					
ANR	437794	Argument	block -> op2_to		435840	1					
ANR	437795	PtrMemberAccess	block -> op2_to		435840	0					
ANR	437796	Identifier	block		435840	0					
ANR	437797	Identifier	op2_to		435840	1					
ANR	437798	ExpressionStatement	block -> op2_to = target_block -> op2_to	1608:5:53470:53506	435840	1	True				
ANR	437799	AssignmentExpression	block -> op2_to = target_block -> op2_to		435840	0		=			
ANR	437800	PtrMemberAccess	block -> op2_to		435840	0					
ANR	437801	Identifier	block		435840	0					
ANR	437802	Identifier	op2_to		435840	1					
ANR	437803	PtrMemberAccess	target_block -> op2_to		435840	1					
ANR	437804	Identifier	target_block		435840	0					
ANR	437805	Identifier	op2_to		435840	1					
ANR	437806	ExpressionStatement	"ADD_SOURCE ( block , block -> op2_to )"	1609:5:53513:53545	435840	2	True				
ANR	437807	CallExpression	"ADD_SOURCE ( block , block -> op2_to )"		435840	0					
ANR	437808	Callee	ADD_SOURCE		435840	0					
ANR	437809	Identifier	ADD_SOURCE		435840	0					
ANR	437810	ArgumentList	block		435840	1					
ANR	437811	Argument	block		435840	0					
ANR	437812	Identifier	block		435840	0					
ANR	437813	Argument	block -> op2_to		435840	1					
ANR	437814	PtrMemberAccess	block -> op2_to		435840	0					
ANR	437815	Identifier	block		435840	0					
ANR	437816	Identifier	op2_to		435840	1					
ANR	437817	ElseStatement	else		435840	0					
ANR	437818	IfStatement	if ( target_block -> op2_to && target -> opcode == INV_EX_COND ( last_op -> opcode ) && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && ( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ! target_block -> protected )		435840	0					
ANR	437819	Condition	target_block -> op2_to && target -> opcode == INV_EX_COND ( last_op -> opcode ) && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && ( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ! target_block -> protected	1610:15:53562:53812	435840	0	True				
ANR	437820	AndExpression	target_block -> op2_to && target -> opcode == INV_EX_COND ( last_op -> opcode ) && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && ( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ! target_block -> protected		435840	0		&&			
ANR	437821	PtrMemberAccess	target_block -> op2_to		435840	0					
ANR	437822	Identifier	target_block		435840	0					
ANR	437823	Identifier	op2_to		435840	1					
ANR	437824	AndExpression	target -> opcode == INV_EX_COND ( last_op -> opcode ) && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && ( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ! target_block -> protected		435840	1		&&			
ANR	437825	EqualityExpression	target -> opcode == INV_EX_COND ( last_op -> opcode )		435840	0		==			
ANR	437826	PtrMemberAccess	target -> opcode		435840	0					
ANR	437827	Identifier	target		435840	0					
ANR	437828	Identifier	opcode		435840	1					
ANR	437829	CallExpression	INV_EX_COND ( last_op -> opcode )		435840	1					
ANR	437830	Callee	INV_EX_COND		435840	0					
ANR	437831	Identifier	INV_EX_COND		435840	0					
ANR	437832	ArgumentList	last_op -> opcode		435840	1					
ANR	437833	Argument	last_op -> opcode		435840	0					
ANR	437834	PtrMemberAccess	last_op -> opcode		435840	0					
ANR	437835	Identifier	last_op		435840	0					
ANR	437836	Identifier	opcode		435840	1					
ANR	437837	AndExpression	( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && ( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ! target_block -> protected		435840	1		&&			
ANR	437838	BitAndExpression	ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV )		435840	0		&			
ANR	437839	CallExpression	ZEND_OP1_TYPE ( target )		435840	0					
ANR	437840	Callee	ZEND_OP1_TYPE		435840	0					
ANR	437841	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	437842	ArgumentList	target		435840	1					
ANR	437843	Argument	target		435840	0					
ANR	437844	Identifier	target		435840	0					
ANR	437845	InclusiveOrExpression	IS_TMP_VAR | IS_CV		435840	1		|			
ANR	437846	Identifier	IS_TMP_VAR		435840	0					
ANR	437847	Identifier	IS_CV		435840	1					
ANR	437848	AndExpression	( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ! target_block -> protected		435840	1		&&			
ANR	437849	EqualityExpression	( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0		435840	0		!=			
ANR	437850	BitAndExpression	same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target )		435840	0		&			
ANR	437851	ArrayIndexing	same_t [ VAR_NUM_EX ( target -> op1 ) ]		435840	0					
ANR	437852	Identifier	same_t		435840	0					
ANR	437853	CallExpression	VAR_NUM_EX ( target -> op1 )		435840	1					
ANR	437854	Callee	VAR_NUM_EX		435840	0					
ANR	437855	Identifier	VAR_NUM_EX		435840	0					
ANR	437856	ArgumentList	target -> op1		435840	1					
ANR	437857	Argument	target -> op1		435840	0					
ANR	437858	PtrMemberAccess	target -> op1		435840	0					
ANR	437859	Identifier	target		435840	0					
ANR	437860	Identifier	op1		435840	1					
ANR	437861	CallExpression	ZEND_OP1_TYPE ( target )		435840	1					
ANR	437862	Callee	ZEND_OP1_TYPE		435840	0					
ANR	437863	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	437864	ArgumentList	target		435840	1					
ANR	437865	Argument	target		435840	0					
ANR	437866	Identifier	target		435840	0					
ANR	437867	PrimaryExpression	0		435840	1					
ANR	437868	UnaryOperationExpression	! target_block -> protected		435840	1					
ANR	437869	UnaryOperator	!		435840	0					
ANR	437870	PtrMemberAccess	target_block -> protected		435840	1					
ANR	437871	Identifier	target_block		435840	0					
ANR	437872	Identifier	protected		435840	1					
ANR	437873	CompoundStatement		359:35:11368:11368	435840	1					
ANR	437874	ExpressionStatement	"del_source ( block , block -> op2_to )"	1616:5:53899:53931	435840	0	True				
ANR	437875	CallExpression	"del_source ( block , block -> op2_to )"		435840	0					
ANR	437876	Callee	del_source		435840	0					
ANR	437877	Identifier	del_source		435840	0					
ANR	437878	ArgumentList	block		435840	1					
ANR	437879	Argument	block		435840	0					
ANR	437880	Identifier	block		435840	0					
ANR	437881	Argument	block -> op2_to		435840	1					
ANR	437882	PtrMemberAccess	block -> op2_to		435840	0					
ANR	437883	Identifier	block		435840	0					
ANR	437884	Identifier	op2_to		435840	1					
ANR	437885	ExpressionStatement	block -> op2_to = target_block -> follow_to	1617:5:53938:53977	435840	1	True				
ANR	437886	AssignmentExpression	block -> op2_to = target_block -> follow_to		435840	0		=			
ANR	437887	PtrMemberAccess	block -> op2_to		435840	0					
ANR	437888	Identifier	block		435840	0					
ANR	437889	Identifier	op2_to		435840	1					
ANR	437890	PtrMemberAccess	target_block -> follow_to		435840	1					
ANR	437891	Identifier	target_block		435840	0					
ANR	437892	Identifier	follow_to		435840	1					
ANR	437893	ExpressionStatement	"ADD_SOURCE ( block , block -> op2_to )"	1618:5:53984:54016	435840	2	True				
ANR	437894	CallExpression	"ADD_SOURCE ( block , block -> op2_to )"		435840	0					
ANR	437895	Callee	ADD_SOURCE		435840	0					
ANR	437896	Identifier	ADD_SOURCE		435840	0					
ANR	437897	ArgumentList	block		435840	1					
ANR	437898	Argument	block		435840	0					
ANR	437899	Identifier	block		435840	0					
ANR	437900	Argument	block -> op2_to		435840	1					
ANR	437901	PtrMemberAccess	block -> op2_to		435840	0					
ANR	437902	Identifier	block		435840	0					
ANR	437903	Identifier	op2_to		435840	1					
ANR	437904	ElseStatement	else		435840	0					
ANR	437905	IfStatement	if ( target_block -> op2_to && target -> opcode == INV_EX_COND_EX ( last_op -> opcode ) && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && ( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ( same_t [ VAR_NUM_EX ( target -> result ) ] & ZEND_RESULT_TYPE ( target ) ) != 0 && ! target_block -> protected )		435840	0					
ANR	437906	Condition	target_block -> op2_to && target -> opcode == INV_EX_COND_EX ( last_op -> opcode ) && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && ( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ( same_t [ VAR_NUM_EX ( target -> result ) ] & ZEND_RESULT_TYPE ( target ) ) != 0 && ! target_block -> protected	1619:15:54033:54367	435840	0	True				
ANR	437907	AndExpression	target_block -> op2_to && target -> opcode == INV_EX_COND_EX ( last_op -> opcode ) && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && ( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ( same_t [ VAR_NUM_EX ( target -> result ) ] & ZEND_RESULT_TYPE ( target ) ) != 0 && ! target_block -> protected		435840	0		&&			
ANR	437908	PtrMemberAccess	target_block -> op2_to		435840	0					
ANR	437909	Identifier	target_block		435840	0					
ANR	437910	Identifier	op2_to		435840	1					
ANR	437911	AndExpression	target -> opcode == INV_EX_COND_EX ( last_op -> opcode ) && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && ( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ( same_t [ VAR_NUM_EX ( target -> result ) ] & ZEND_RESULT_TYPE ( target ) ) != 0 && ! target_block -> protected		435840	1		&&			
ANR	437912	EqualityExpression	target -> opcode == INV_EX_COND_EX ( last_op -> opcode )		435840	0		==			
ANR	437913	PtrMemberAccess	target -> opcode		435840	0					
ANR	437914	Identifier	target		435840	0					
ANR	437915	Identifier	opcode		435840	1					
ANR	437916	CallExpression	INV_EX_COND_EX ( last_op -> opcode )		435840	1					
ANR	437917	Callee	INV_EX_COND_EX		435840	0					
ANR	437918	Identifier	INV_EX_COND_EX		435840	0					
ANR	437919	ArgumentList	last_op -> opcode		435840	1					
ANR	437920	Argument	last_op -> opcode		435840	0					
ANR	437921	PtrMemberAccess	last_op -> opcode		435840	0					
ANR	437922	Identifier	last_op		435840	0					
ANR	437923	Identifier	opcode		435840	1					
ANR	437924	AndExpression	( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && ( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ( same_t [ VAR_NUM_EX ( target -> result ) ] & ZEND_RESULT_TYPE ( target ) ) != 0 && ! target_block -> protected		435840	1		&&			
ANR	437925	BitAndExpression	ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV )		435840	0		&			
ANR	437926	CallExpression	ZEND_OP1_TYPE ( target )		435840	0					
ANR	437927	Callee	ZEND_OP1_TYPE		435840	0					
ANR	437928	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	437929	ArgumentList	target		435840	1					
ANR	437930	Argument	target		435840	0					
ANR	437931	Identifier	target		435840	0					
ANR	437932	InclusiveOrExpression	IS_TMP_VAR | IS_CV		435840	1		|			
ANR	437933	Identifier	IS_TMP_VAR		435840	0					
ANR	437934	Identifier	IS_CV		435840	1					
ANR	437935	AndExpression	( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ( same_t [ VAR_NUM_EX ( target -> result ) ] & ZEND_RESULT_TYPE ( target ) ) != 0 && ! target_block -> protected		435840	1		&&			
ANR	437936	EqualityExpression	( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0		435840	0		!=			
ANR	437937	BitAndExpression	same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target )		435840	0		&			
ANR	437938	ArrayIndexing	same_t [ VAR_NUM_EX ( target -> op1 ) ]		435840	0					
ANR	437939	Identifier	same_t		435840	0					
ANR	437940	CallExpression	VAR_NUM_EX ( target -> op1 )		435840	1					
ANR	437941	Callee	VAR_NUM_EX		435840	0					
ANR	437942	Identifier	VAR_NUM_EX		435840	0					
ANR	437943	ArgumentList	target -> op1		435840	1					
ANR	437944	Argument	target -> op1		435840	0					
ANR	437945	PtrMemberAccess	target -> op1		435840	0					
ANR	437946	Identifier	target		435840	0					
ANR	437947	Identifier	op1		435840	1					
ANR	437948	CallExpression	ZEND_OP1_TYPE ( target )		435840	1					
ANR	437949	Callee	ZEND_OP1_TYPE		435840	0					
ANR	437950	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	437951	ArgumentList	target		435840	1					
ANR	437952	Argument	target		435840	0					
ANR	437953	Identifier	target		435840	0					
ANR	437954	PrimaryExpression	0		435840	1					
ANR	437955	AndExpression	( same_t [ VAR_NUM_EX ( target -> result ) ] & ZEND_RESULT_TYPE ( target ) ) != 0 && ! target_block -> protected		435840	1		&&			
ANR	437956	EqualityExpression	( same_t [ VAR_NUM_EX ( target -> result ) ] & ZEND_RESULT_TYPE ( target ) ) != 0		435840	0		!=			
ANR	437957	BitAndExpression	same_t [ VAR_NUM_EX ( target -> result ) ] & ZEND_RESULT_TYPE ( target )		435840	0		&			
ANR	437958	ArrayIndexing	same_t [ VAR_NUM_EX ( target -> result ) ]		435840	0					
ANR	437959	Identifier	same_t		435840	0					
ANR	437960	CallExpression	VAR_NUM_EX ( target -> result )		435840	1					
ANR	437961	Callee	VAR_NUM_EX		435840	0					
ANR	437962	Identifier	VAR_NUM_EX		435840	0					
ANR	437963	ArgumentList	target -> result		435840	1					
ANR	437964	Argument	target -> result		435840	0					
ANR	437965	PtrMemberAccess	target -> result		435840	0					
ANR	437966	Identifier	target		435840	0					
ANR	437967	Identifier	result		435840	1					
ANR	437968	CallExpression	ZEND_RESULT_TYPE ( target )		435840	1					
ANR	437969	Callee	ZEND_RESULT_TYPE		435840	0					
ANR	437970	Identifier	ZEND_RESULT_TYPE		435840	0					
ANR	437971	ArgumentList	target		435840	1					
ANR	437972	Argument	target		435840	0					
ANR	437973	Identifier	target		435840	0					
ANR	437974	PrimaryExpression	0		435840	1					
ANR	437975	UnaryOperationExpression	! target_block -> protected		435840	1					
ANR	437976	UnaryOperator	!		435840	0					
ANR	437977	PtrMemberAccess	target_block -> protected		435840	1					
ANR	437978	Identifier	target_block		435840	0					
ANR	437979	Identifier	protected		435840	1					
ANR	437980	CompoundStatement		369:35:11923:11923	435840	1					
ANR	437981	ExpressionStatement	"del_source ( block , block -> op2_to )"	1626:5:54456:54488	435840	0	True				
ANR	437982	CallExpression	"del_source ( block , block -> op2_to )"		435840	0					
ANR	437983	Callee	del_source		435840	0					
ANR	437984	Identifier	del_source		435840	0					
ANR	437985	ArgumentList	block		435840	1					
ANR	437986	Argument	block		435840	0					
ANR	437987	Identifier	block		435840	0					
ANR	437988	Argument	block -> op2_to		435840	1					
ANR	437989	PtrMemberAccess	block -> op2_to		435840	0					
ANR	437990	Identifier	block		435840	0					
ANR	437991	Identifier	op2_to		435840	1					
ANR	437992	ExpressionStatement	block -> op2_to = target_block -> follow_to	1627:5:54495:54534	435840	1	True				
ANR	437993	AssignmentExpression	block -> op2_to = target_block -> follow_to		435840	0		=			
ANR	437994	PtrMemberAccess	block -> op2_to		435840	0					
ANR	437995	Identifier	block		435840	0					
ANR	437996	Identifier	op2_to		435840	1					
ANR	437997	PtrMemberAccess	target_block -> follow_to		435840	1					
ANR	437998	Identifier	target_block		435840	0					
ANR	437999	Identifier	follow_to		435840	1					
ANR	438000	ExpressionStatement	"ADD_SOURCE ( block , block -> op2_to )"	1628:5:54541:54573	435840	2	True				
ANR	438001	CallExpression	"ADD_SOURCE ( block , block -> op2_to )"		435840	0					
ANR	438002	Callee	ADD_SOURCE		435840	0					
ANR	438003	Identifier	ADD_SOURCE		435840	0					
ANR	438004	ArgumentList	block		435840	1					
ANR	438005	Argument	block		435840	0					
ANR	438006	Identifier	block		435840	0					
ANR	438007	Argument	block -> op2_to		435840	1					
ANR	438008	PtrMemberAccess	block -> op2_to		435840	0					
ANR	438009	Identifier	block		435840	0					
ANR	438010	Identifier	op2_to		435840	1					
ANR	438011	ElseStatement	else		435840	0					
ANR	438012	IfStatement	if ( target_block -> op2_to && target -> opcode == last_op -> opcode && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && ( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ( same_t [ VAR_NUM_EX ( target -> result ) ] & ZEND_RESULT_TYPE ( target ) ) != 0 && ! target_block -> protected )		435840	0					
ANR	438013	Condition	target_block -> op2_to && target -> opcode == last_op -> opcode && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && ( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ( same_t [ VAR_NUM_EX ( target -> result ) ] & ZEND_RESULT_TYPE ( target ) ) != 0 && ! target_block -> protected	1629:15:54590:54905	435840	0	True				
ANR	438014	AndExpression	target_block -> op2_to && target -> opcode == last_op -> opcode && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && ( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ( same_t [ VAR_NUM_EX ( target -> result ) ] & ZEND_RESULT_TYPE ( target ) ) != 0 && ! target_block -> protected		435840	0		&&			
ANR	438015	PtrMemberAccess	target_block -> op2_to		435840	0					
ANR	438016	Identifier	target_block		435840	0					
ANR	438017	Identifier	op2_to		435840	1					
ANR	438018	AndExpression	target -> opcode == last_op -> opcode && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && ( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ( same_t [ VAR_NUM_EX ( target -> result ) ] & ZEND_RESULT_TYPE ( target ) ) != 0 && ! target_block -> protected		435840	1		&&			
ANR	438019	EqualityExpression	target -> opcode == last_op -> opcode		435840	0		==			
ANR	438020	PtrMemberAccess	target -> opcode		435840	0					
ANR	438021	Identifier	target		435840	0					
ANR	438022	Identifier	opcode		435840	1					
ANR	438023	PtrMemberAccess	last_op -> opcode		435840	1					
ANR	438024	Identifier	last_op		435840	0					
ANR	438025	Identifier	opcode		435840	1					
ANR	438026	AndExpression	( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && ( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ( same_t [ VAR_NUM_EX ( target -> result ) ] & ZEND_RESULT_TYPE ( target ) ) != 0 && ! target_block -> protected		435840	1		&&			
ANR	438027	BitAndExpression	ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV )		435840	0		&			
ANR	438028	CallExpression	ZEND_OP1_TYPE ( target )		435840	0					
ANR	438029	Callee	ZEND_OP1_TYPE		435840	0					
ANR	438030	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	438031	ArgumentList	target		435840	1					
ANR	438032	Argument	target		435840	0					
ANR	438033	Identifier	target		435840	0					
ANR	438034	InclusiveOrExpression	IS_TMP_VAR | IS_CV		435840	1		|			
ANR	438035	Identifier	IS_TMP_VAR		435840	0					
ANR	438036	Identifier	IS_CV		435840	1					
ANR	438037	AndExpression	( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ( same_t [ VAR_NUM_EX ( target -> result ) ] & ZEND_RESULT_TYPE ( target ) ) != 0 && ! target_block -> protected		435840	1		&&			
ANR	438038	EqualityExpression	( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0		435840	0		!=			
ANR	438039	BitAndExpression	same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target )		435840	0		&			
ANR	438040	ArrayIndexing	same_t [ VAR_NUM_EX ( target -> op1 ) ]		435840	0					
ANR	438041	Identifier	same_t		435840	0					
ANR	438042	CallExpression	VAR_NUM_EX ( target -> op1 )		435840	1					
ANR	438043	Callee	VAR_NUM_EX		435840	0					
ANR	438044	Identifier	VAR_NUM_EX		435840	0					
ANR	438045	ArgumentList	target -> op1		435840	1					
ANR	438046	Argument	target -> op1		435840	0					
ANR	438047	PtrMemberAccess	target -> op1		435840	0					
ANR	438048	Identifier	target		435840	0					
ANR	438049	Identifier	op1		435840	1					
ANR	438050	CallExpression	ZEND_OP1_TYPE ( target )		435840	1					
ANR	438051	Callee	ZEND_OP1_TYPE		435840	0					
ANR	438052	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	438053	ArgumentList	target		435840	1					
ANR	438054	Argument	target		435840	0					
ANR	438055	Identifier	target		435840	0					
ANR	438056	PrimaryExpression	0		435840	1					
ANR	438057	AndExpression	( same_t [ VAR_NUM_EX ( target -> result ) ] & ZEND_RESULT_TYPE ( target ) ) != 0 && ! target_block -> protected		435840	1		&&			
ANR	438058	EqualityExpression	( same_t [ VAR_NUM_EX ( target -> result ) ] & ZEND_RESULT_TYPE ( target ) ) != 0		435840	0		!=			
ANR	438059	BitAndExpression	same_t [ VAR_NUM_EX ( target -> result ) ] & ZEND_RESULT_TYPE ( target )		435840	0		&			
ANR	438060	ArrayIndexing	same_t [ VAR_NUM_EX ( target -> result ) ]		435840	0					
ANR	438061	Identifier	same_t		435840	0					
ANR	438062	CallExpression	VAR_NUM_EX ( target -> result )		435840	1					
ANR	438063	Callee	VAR_NUM_EX		435840	0					
ANR	438064	Identifier	VAR_NUM_EX		435840	0					
ANR	438065	ArgumentList	target -> result		435840	1					
ANR	438066	Argument	target -> result		435840	0					
ANR	438067	PtrMemberAccess	target -> result		435840	0					
ANR	438068	Identifier	target		435840	0					
ANR	438069	Identifier	result		435840	1					
ANR	438070	CallExpression	ZEND_RESULT_TYPE ( target )		435840	1					
ANR	438071	Callee	ZEND_RESULT_TYPE		435840	0					
ANR	438072	Identifier	ZEND_RESULT_TYPE		435840	0					
ANR	438073	ArgumentList	target		435840	1					
ANR	438074	Argument	target		435840	0					
ANR	438075	Identifier	target		435840	0					
ANR	438076	PrimaryExpression	0		435840	1					
ANR	438077	UnaryOperationExpression	! target_block -> protected		435840	1					
ANR	438078	UnaryOperator	!		435840	0					
ANR	438079	PtrMemberAccess	target_block -> protected		435840	1					
ANR	438080	Identifier	target_block		435840	0					
ANR	438081	Identifier	protected		435840	1					
ANR	438082	CompoundStatement		379:35:12461:12461	435840	1					
ANR	438083	ExpressionStatement	"del_source ( block , block -> op2_to )"	1636:5:54992:55024	435840	0	True				
ANR	438084	CallExpression	"del_source ( block , block -> op2_to )"		435840	0					
ANR	438085	Callee	del_source		435840	0					
ANR	438086	Identifier	del_source		435840	0					
ANR	438087	ArgumentList	block		435840	1					
ANR	438088	Argument	block		435840	0					
ANR	438089	Identifier	block		435840	0					
ANR	438090	Argument	block -> op2_to		435840	1					
ANR	438091	PtrMemberAccess	block -> op2_to		435840	0					
ANR	438092	Identifier	block		435840	0					
ANR	438093	Identifier	op2_to		435840	1					
ANR	438094	ExpressionStatement	block -> op2_to = target_block -> op2_to	1637:5:55031:55067	435840	1	True				
ANR	438095	AssignmentExpression	block -> op2_to = target_block -> op2_to		435840	0		=			
ANR	438096	PtrMemberAccess	block -> op2_to		435840	0					
ANR	438097	Identifier	block		435840	0					
ANR	438098	Identifier	op2_to		435840	1					
ANR	438099	PtrMemberAccess	target_block -> op2_to		435840	1					
ANR	438100	Identifier	target_block		435840	0					
ANR	438101	Identifier	op2_to		435840	1					
ANR	438102	ExpressionStatement	"ADD_SOURCE ( block , block -> op2_to )"	1638:5:55074:55106	435840	2	True				
ANR	438103	CallExpression	"ADD_SOURCE ( block , block -> op2_to )"		435840	0					
ANR	438104	Callee	ADD_SOURCE		435840	0					
ANR	438105	Identifier	ADD_SOURCE		435840	0					
ANR	438106	ArgumentList	block		435840	1					
ANR	438107	Argument	block		435840	0					
ANR	438108	Identifier	block		435840	0					
ANR	438109	Argument	block -> op2_to		435840	1					
ANR	438110	PtrMemberAccess	block -> op2_to		435840	0					
ANR	438111	Identifier	block		435840	0					
ANR	438112	Identifier	op2_to		435840	1					
ANR	438113	ElseStatement	else		435840	0					
ANR	438114	IfStatement	if ( target_block -> op1_to && target -> opcode == ZEND_JMP && ! target_block -> protected )		435840	0					
ANR	438115	Condition	target_block -> op1_to && target -> opcode == ZEND_JMP && ! target_block -> protected	1639:15:55123:55218	435840	0	True				
ANR	438116	AndExpression	target_block -> op1_to && target -> opcode == ZEND_JMP && ! target_block -> protected		435840	0		&&			
ANR	438117	PtrMemberAccess	target_block -> op1_to		435840	0					
ANR	438118	Identifier	target_block		435840	0					
ANR	438119	Identifier	op1_to		435840	1					
ANR	438120	AndExpression	target -> opcode == ZEND_JMP && ! target_block -> protected		435840	1		&&			
ANR	438121	EqualityExpression	target -> opcode == ZEND_JMP		435840	0		==			
ANR	438122	PtrMemberAccess	target -> opcode		435840	0					
ANR	438123	Identifier	target		435840	0					
ANR	438124	Identifier	opcode		435840	1					
ANR	438125	Identifier	ZEND_JMP		435840	1					
ANR	438126	UnaryOperationExpression	! target_block -> protected		435840	1					
ANR	438127	UnaryOperator	!		435840	0					
ANR	438128	PtrMemberAccess	target_block -> protected		435840	1					
ANR	438129	Identifier	target_block		435840	0					
ANR	438130	Identifier	protected		435840	1					
ANR	438131	CompoundStatement		386:35:12774:12774	435840	1					
ANR	438132	ExpressionStatement	"del_source ( block , block -> op2_to )"	1643:5:55288:55320	435840	0	True				
ANR	438133	CallExpression	"del_source ( block , block -> op2_to )"		435840	0					
ANR	438134	Callee	del_source		435840	0					
ANR	438135	Identifier	del_source		435840	0					
ANR	438136	ArgumentList	block		435840	1					
ANR	438137	Argument	block		435840	0					
ANR	438138	Identifier	block		435840	0					
ANR	438139	Argument	block -> op2_to		435840	1					
ANR	438140	PtrMemberAccess	block -> op2_to		435840	0					
ANR	438141	Identifier	block		435840	0					
ANR	438142	Identifier	op2_to		435840	1					
ANR	438143	ExpressionStatement	block -> op2_to = target_block -> op1_to	1644:5:55327:55363	435840	1	True				
ANR	438144	AssignmentExpression	block -> op2_to = target_block -> op1_to		435840	0		=			
ANR	438145	PtrMemberAccess	block -> op2_to		435840	0					
ANR	438146	Identifier	block		435840	0					
ANR	438147	Identifier	op2_to		435840	1					
ANR	438148	PtrMemberAccess	target_block -> op1_to		435840	1					
ANR	438149	Identifier	target_block		435840	0					
ANR	438150	Identifier	op1_to		435840	1					
ANR	438151	ExpressionStatement	"ADD_SOURCE ( block , block -> op2_to )"	1645:5:55370:55402	435840	2	True				
ANR	438152	CallExpression	"ADD_SOURCE ( block , block -> op2_to )"		435840	0					
ANR	438153	Callee	ADD_SOURCE		435840	0					
ANR	438154	Identifier	ADD_SOURCE		435840	0					
ANR	438155	ArgumentList	block		435840	1					
ANR	438156	Argument	block		435840	0					
ANR	438157	Identifier	block		435840	0					
ANR	438158	Argument	block -> op2_to		435840	1					
ANR	438159	PtrMemberAccess	block -> op2_to		435840	0					
ANR	438160	Identifier	block		435840	0					
ANR	438161	Identifier	op2_to		435840	1					
ANR	438162	ElseStatement	else		435840	0					
ANR	438163	IfStatement	if ( target_block -> op2_to && target_block -> ext_to && target -> opcode == ZEND_JMPZNZ && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && ( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ! target_block -> protected )		435840	0					
ANR	438164	Condition	target_block -> op2_to && target_block -> ext_to && target -> opcode == ZEND_JMPZNZ && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && ( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ! target_block -> protected	1646:15:55419:55682	435840	0	True				
ANR	438165	AndExpression	target_block -> op2_to && target_block -> ext_to && target -> opcode == ZEND_JMPZNZ && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && ( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ! target_block -> protected		435840	0		&&			
ANR	438166	PtrMemberAccess	target_block -> op2_to		435840	0					
ANR	438167	Identifier	target_block		435840	0					
ANR	438168	Identifier	op2_to		435840	1					
ANR	438169	AndExpression	target_block -> ext_to && target -> opcode == ZEND_JMPZNZ && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && ( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ! target_block -> protected		435840	1		&&			
ANR	438170	PtrMemberAccess	target_block -> ext_to		435840	0					
ANR	438171	Identifier	target_block		435840	0					
ANR	438172	Identifier	ext_to		435840	1					
ANR	438173	AndExpression	target -> opcode == ZEND_JMPZNZ && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && ( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ! target_block -> protected		435840	1		&&			
ANR	438174	EqualityExpression	target -> opcode == ZEND_JMPZNZ		435840	0		==			
ANR	438175	PtrMemberAccess	target -> opcode		435840	0					
ANR	438176	Identifier	target		435840	0					
ANR	438177	Identifier	opcode		435840	1					
ANR	438178	Identifier	ZEND_JMPZNZ		435840	1					
ANR	438179	AndExpression	( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && ( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ! target_block -> protected		435840	1		&&			
ANR	438180	BitAndExpression	ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV )		435840	0		&			
ANR	438181	CallExpression	ZEND_OP1_TYPE ( target )		435840	0					
ANR	438182	Callee	ZEND_OP1_TYPE		435840	0					
ANR	438183	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	438184	ArgumentList	target		435840	1					
ANR	438185	Argument	target		435840	0					
ANR	438186	Identifier	target		435840	0					
ANR	438187	InclusiveOrExpression	IS_TMP_VAR | IS_CV		435840	1		|			
ANR	438188	Identifier	IS_TMP_VAR		435840	0					
ANR	438189	Identifier	IS_CV		435840	1					
ANR	438190	AndExpression	( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0 && ! target_block -> protected		435840	1		&&			
ANR	438191	EqualityExpression	( same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target ) ) != 0		435840	0		!=			
ANR	438192	BitAndExpression	same_t [ VAR_NUM_EX ( target -> op1 ) ] & ZEND_OP1_TYPE ( target )		435840	0		&			
ANR	438193	ArrayIndexing	same_t [ VAR_NUM_EX ( target -> op1 ) ]		435840	0					
ANR	438194	Identifier	same_t		435840	0					
ANR	438195	CallExpression	VAR_NUM_EX ( target -> op1 )		435840	1					
ANR	438196	Callee	VAR_NUM_EX		435840	0					
ANR	438197	Identifier	VAR_NUM_EX		435840	0					
ANR	438198	ArgumentList	target -> op1		435840	1					
ANR	438199	Argument	target -> op1		435840	0					
ANR	438200	PtrMemberAccess	target -> op1		435840	0					
ANR	438201	Identifier	target		435840	0					
ANR	438202	Identifier	op1		435840	1					
ANR	438203	CallExpression	ZEND_OP1_TYPE ( target )		435840	1					
ANR	438204	Callee	ZEND_OP1_TYPE		435840	0					
ANR	438205	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	438206	ArgumentList	target		435840	1					
ANR	438207	Argument	target		435840	0					
ANR	438208	Identifier	target		435840	0					
ANR	438209	PrimaryExpression	0		435840	1					
ANR	438210	UnaryOperationExpression	! target_block -> protected		435840	1					
ANR	438211	UnaryOperator	!		435840	0					
ANR	438212	PtrMemberAccess	target_block -> protected		435840	1					
ANR	438213	Identifier	target_block		435840	0					
ANR	438214	Identifier	protected		435840	1					
ANR	438215	CompoundStatement		396:35:13238:13238	435840	1					
ANR	438216	ExpressionStatement	"del_source ( block , block -> op2_to )"	1653:5:55769:55801	435840	0	True				
ANR	438217	CallExpression	"del_source ( block , block -> op2_to )"		435840	0					
ANR	438218	Callee	del_source		435840	0					
ANR	438219	Identifier	del_source		435840	0					
ANR	438220	ArgumentList	block		435840	1					
ANR	438221	Argument	block		435840	0					
ANR	438222	Identifier	block		435840	0					
ANR	438223	Argument	block -> op2_to		435840	1					
ANR	438224	PtrMemberAccess	block -> op2_to		435840	0					
ANR	438225	Identifier	block		435840	0					
ANR	438226	Identifier	op2_to		435840	1					
ANR	438227	IfStatement	if ( last_op -> opcode == ZEND_JMPZ_EX )		435840	1					
ANR	438228	Condition	last_op -> opcode == ZEND_JMPZ_EX	1654:9:55812:55842	435840	0	True				
ANR	438229	EqualityExpression	last_op -> opcode == ZEND_JMPZ_EX		435840	0		==			
ANR	438230	PtrMemberAccess	last_op -> opcode		435840	0					
ANR	438231	Identifier	last_op		435840	0					
ANR	438232	Identifier	opcode		435840	1					
ANR	438233	Identifier	ZEND_JMPZ_EX		435840	1					
ANR	438234	CompoundStatement		399:42:13398:13398	435840	1					
ANR	438235	ExpressionStatement	block -> op2_to = target_block -> op2_to	1655:6:55853:55889	435840	0	True				
ANR	438236	AssignmentExpression	block -> op2_to = target_block -> op2_to		435840	0		=			
ANR	438237	PtrMemberAccess	block -> op2_to		435840	0					
ANR	438238	Identifier	block		435840	0					
ANR	438239	Identifier	op2_to		435840	1					
ANR	438240	PtrMemberAccess	target_block -> op2_to		435840	1					
ANR	438241	Identifier	target_block		435840	0					
ANR	438242	Identifier	op2_to		435840	1					
ANR	438243	ElseStatement	else		435840	0					
ANR	438244	CompoundStatement		401:12:13456:13456	435840	0					
ANR	438245	ExpressionStatement	block -> op2_to = target_block -> ext_to	1657:6:55911:55947	435840	0	True				
ANR	438246	AssignmentExpression	block -> op2_to = target_block -> ext_to		435840	0		=			
ANR	438247	PtrMemberAccess	block -> op2_to		435840	0					
ANR	438248	Identifier	block		435840	0					
ANR	438249	Identifier	op2_to		435840	1					
ANR	438250	PtrMemberAccess	target_block -> ext_to		435840	1					
ANR	438251	Identifier	target_block		435840	0					
ANR	438252	Identifier	ext_to		435840	1					
ANR	438253	ExpressionStatement	"ADD_SOURCE ( block , block -> op2_to )"	1659:5:55961:55993	435840	2	True				
ANR	438254	CallExpression	"ADD_SOURCE ( block , block -> op2_to )"		435840	0					
ANR	438255	Callee	ADD_SOURCE		435840	0					
ANR	438256	Identifier	ADD_SOURCE		435840	0					
ANR	438257	ArgumentList	block		435840	1					
ANR	438258	Argument	block		435840	0					
ANR	438259	Identifier	block		435840	0					
ANR	438260	Argument	block -> op2_to		435840	1					
ANR	438261	PtrMemberAccess	block -> op2_to		435840	0					
ANR	438262	Identifier	block		435840	0					
ANR	438263	Identifier	op2_to		435840	1					
ANR	438264	BreakStatement	break ;	1662:3:56009:56014	435840	14	True				
ANR	438265	Label	case ZEND_JMPZNZ :	1664:2:56019:56035	435840	15	True				
ANR	438266	Identifier	ZEND_JMPZNZ		435840	0					
ANR	438267	CompoundStatement		410:3:13595:13630	435840	16					
ANR	438268	IdentifierDeclStatement	zend_code_block * next = block -> next ;	1665:3:56042:56077	435840	0	True				
ANR	438269	IdentifierDecl	* next = block -> next		435840	0					
ANR	438270	IdentifierDeclType	zend_code_block *		435840	0					
ANR	438271	Identifier	next		435840	1					
ANR	438272	AssignmentExpression	* next = block -> next		435840	2		=			
ANR	438273	Identifier	next		435840	0					
ANR	438274	PtrMemberAccess	block -> next		435840	1					
ANR	438275	Identifier	block		435840	0					
ANR	438276	Identifier	next		435840	1					
ANR	438277	WhileStatement	while ( next && ! next -> access )		435840	1					
ANR	438278	Condition	next && ! next -> access	1667:10:56090:56110	435840	0	True				
ANR	438279	AndExpression	next && ! next -> access		435840	0		&&			
ANR	438280	Identifier	next		435840	0					
ANR	438281	UnaryOperationExpression	! next -> access		435840	1					
ANR	438282	UnaryOperator	!		435840	0					
ANR	438283	PtrMemberAccess	next -> access		435840	1					
ANR	438284	Identifier	next		435840	0					
ANR	438285	Identifier	access		435840	1					
ANR	438286	CompoundStatement		412:33:13666:13666	435840	1					
ANR	438287	ExpressionStatement	next = next -> next	1669:4:56153:56170	435840	0	True				
ANR	438288	AssignmentExpression	next = next -> next		435840	0		=			
ANR	438289	Identifier	next		435840	0					
ANR	438290	PtrMemberAccess	next -> next		435840	1					
ANR	438291	Identifier	next		435840	0					
ANR	438292	Identifier	next		435840	1					
ANR	438293	IfStatement	if ( ZEND_OP1_TYPE ( last_op ) == IS_CONST )		435840	2					
ANR	438294	Condition	ZEND_OP1_TYPE ( last_op ) == IS_CONST	1672:7:56185:56218	435840	0	True				
ANR	438295	EqualityExpression	ZEND_OP1_TYPE ( last_op ) == IS_CONST		435840	0		==			
ANR	438296	CallExpression	ZEND_OP1_TYPE ( last_op )		435840	0					
ANR	438297	Callee	ZEND_OP1_TYPE		435840	0					
ANR	438298	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	438299	ArgumentList	last_op		435840	1					
ANR	438300	Argument	last_op		435840	0					
ANR	438301	Identifier	last_op		435840	0					
ANR	438302	Identifier	IS_CONST		435840	1					
ANR	438303	CompoundStatement		417:43:13774:13774	435840	1					
ANR	438304	IfStatement	if ( ! zend_is_true ( & ZEND_OP1_LITERAL ( last_op ) ) )		435840	0					
ANR	438305	Condition	! zend_is_true ( & ZEND_OP1_LITERAL ( last_op ) )	1673:8:56231:56271	435840	0	True				
ANR	438306	UnaryOperationExpression	! zend_is_true ( & ZEND_OP1_LITERAL ( last_op ) )		435840	0					
ANR	438307	UnaryOperator	!		435840	0					
ANR	438308	CallExpression	zend_is_true ( & ZEND_OP1_LITERAL ( last_op ) )		435840	1					
ANR	438309	Callee	zend_is_true		435840	0					
ANR	438310	Identifier	zend_is_true		435840	0					
ANR	438311	ArgumentList	& ZEND_OP1_LITERAL ( last_op )		435840	1					
ANR	438312	Argument	& ZEND_OP1_LITERAL ( last_op )		435840	0					
ANR	438313	UnaryOperationExpression	& ZEND_OP1_LITERAL ( last_op )		435840	0					
ANR	438314	UnaryOperator	&		435840	0					
ANR	438315	CallExpression	ZEND_OP1_LITERAL ( last_op )		435840	1					
ANR	438316	Callee	ZEND_OP1_LITERAL		435840	0					
ANR	438317	Identifier	ZEND_OP1_LITERAL		435840	0					
ANR	438318	ArgumentList	last_op		435840	1					
ANR	438319	Argument	last_op		435840	0					
ANR	438320	Identifier	last_op		435840	0					
ANR	438321	CompoundStatement		420:5:13876:13898	435840	1					
ANR	438322	IdentifierDeclStatement	zend_code_block * todel ;	1675:5:56323:56345	435840	0	True				
ANR	438323	IdentifierDecl	* todel		435840	0					
ANR	438324	IdentifierDeclType	zend_code_block *		435840	0					
ANR	438325	Identifier	todel		435840	1					
ANR	438326	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( last_op ) )	1677:5:56353:56393	435840	1	True				
ANR	438327	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( last_op ) )		435840	0					
ANR	438328	Callee	literal_dtor		435840	0					
ANR	438329	Identifier	literal_dtor		435840	0					
ANR	438330	ArgumentList	& ZEND_OP1_LITERAL ( last_op )		435840	1					
ANR	438331	Argument	& ZEND_OP1_LITERAL ( last_op )		435840	0					
ANR	438332	UnaryOperationExpression	& ZEND_OP1_LITERAL ( last_op )		435840	0					
ANR	438333	UnaryOperator	&		435840	0					
ANR	438334	CallExpression	ZEND_OP1_LITERAL ( last_op )		435840	1					
ANR	438335	Callee	ZEND_OP1_LITERAL		435840	0					
ANR	438336	Identifier	ZEND_OP1_LITERAL		435840	0					
ANR	438337	ArgumentList	last_op		435840	1					
ANR	438338	Argument	last_op		435840	0					
ANR	438339	Identifier	last_op		435840	0					
ANR	438340	ExpressionStatement	last_op -> opcode = ZEND_JMP	1678:5:56400:56426	435840	2	True				
ANR	438341	AssignmentExpression	last_op -> opcode = ZEND_JMP		435840	0		=			
ANR	438342	PtrMemberAccess	last_op -> opcode		435840	0					
ANR	438343	Identifier	last_op		435840	0					
ANR	438344	Identifier	opcode		435840	1					
ANR	438345	Identifier	ZEND_JMP		435840	1					
ANR	438346	ExpressionStatement	SET_UNUSED ( last_op -> op1 )	1679:5:56433:56457	435840	3	True				
ANR	438347	CallExpression	SET_UNUSED ( last_op -> op1 )		435840	0					
ANR	438348	Callee	SET_UNUSED		435840	0					
ANR	438349	Identifier	SET_UNUSED		435840	0					
ANR	438350	ArgumentList	last_op -> op1		435840	1					
ANR	438351	Argument	last_op -> op1		435840	0					
ANR	438352	PtrMemberAccess	last_op -> op1		435840	0					
ANR	438353	Identifier	last_op		435840	0					
ANR	438354	Identifier	op1		435840	1					
ANR	438355	ExpressionStatement	SET_UNUSED ( last_op -> op2 )	1680:5:56464:56488	435840	4	True				
ANR	438356	CallExpression	SET_UNUSED ( last_op -> op2 )		435840	0					
ANR	438357	Callee	SET_UNUSED		435840	0					
ANR	438358	Identifier	SET_UNUSED		435840	0					
ANR	438359	ArgumentList	last_op -> op2		435840	1					
ANR	438360	Argument	last_op -> op2		435840	0					
ANR	438361	PtrMemberAccess	last_op -> op2		435840	0					
ANR	438362	Identifier	last_op		435840	0					
ANR	438363	Identifier	op2		435840	1					
ANR	438364	ExpressionStatement	block -> op1_to = block -> op2_to	1681:5:56495:56524	435840	5	True				
ANR	438365	AssignmentExpression	block -> op1_to = block -> op2_to		435840	0		=			
ANR	438366	PtrMemberAccess	block -> op1_to		435840	0					
ANR	438367	Identifier	block		435840	0					
ANR	438368	Identifier	op1_to		435840	1					
ANR	438369	PtrMemberAccess	block -> op2_to		435840	1					
ANR	438370	Identifier	block		435840	0					
ANR	438371	Identifier	op2_to		435840	1					
ANR	438372	ExpressionStatement	todel = block -> ext_to	1682:5:56531:56552	435840	6	True				
ANR	438373	AssignmentExpression	todel = block -> ext_to		435840	0		=			
ANR	438374	Identifier	todel		435840	0					
ANR	438375	PtrMemberAccess	block -> ext_to		435840	1					
ANR	438376	Identifier	block		435840	0					
ANR	438377	Identifier	ext_to		435840	1					
ANR	438378	ExpressionStatement	block -> op2_to = NULL	1683:5:56559:56579	435840	7	True				
ANR	438379	AssignmentExpression	block -> op2_to = NULL		435840	0		=			
ANR	438380	PtrMemberAccess	block -> op2_to		435840	0					
ANR	438381	Identifier	block		435840	0					
ANR	438382	Identifier	op2_to		435840	1					
ANR	438383	Identifier	NULL		435840	1					
ANR	438384	ExpressionStatement	block -> ext_to = NULL	1684:5:56586:56606	435840	8	True				
ANR	438385	AssignmentExpression	block -> ext_to = NULL		435840	0		=			
ANR	438386	PtrMemberAccess	block -> ext_to		435840	0					
ANR	438387	Identifier	block		435840	0					
ANR	438388	Identifier	ext_to		435840	1					
ANR	438389	Identifier	NULL		435840	1					
ANR	438390	ExpressionStatement	"del_source ( block , todel )"	1685:5:56613:56637	435840	9	True				
ANR	438391	CallExpression	"del_source ( block , todel )"		435840	0					
ANR	438392	Callee	del_source		435840	0					
ANR	438393	Identifier	del_source		435840	0					
ANR	438394	ArgumentList	block		435840	1					
ANR	438395	Argument	block		435840	0					
ANR	438396	Identifier	block		435840	0					
ANR	438397	Argument	todel		435840	1					
ANR	438398	Identifier	todel		435840	0					
ANR	438399	ElseStatement	else		435840	0					
ANR	438400	CompoundStatement		433:5:14251:14273	435840	0					
ANR	438401	IdentifierDeclStatement	zend_code_block * todel ;	1688:5:56698:56720	435840	0	True				
ANR	438402	IdentifierDecl	* todel		435840	0					
ANR	438403	IdentifierDeclType	zend_code_block *		435840	0					
ANR	438404	Identifier	todel		435840	1					
ANR	438405	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( last_op ) )	1690:5:56728:56768	435840	1	True				
ANR	438406	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( last_op ) )		435840	0					
ANR	438407	Callee	literal_dtor		435840	0					
ANR	438408	Identifier	literal_dtor		435840	0					
ANR	438409	ArgumentList	& ZEND_OP1_LITERAL ( last_op )		435840	1					
ANR	438410	Argument	& ZEND_OP1_LITERAL ( last_op )		435840	0					
ANR	438411	UnaryOperationExpression	& ZEND_OP1_LITERAL ( last_op )		435840	0					
ANR	438412	UnaryOperator	&		435840	0					
ANR	438413	CallExpression	ZEND_OP1_LITERAL ( last_op )		435840	1					
ANR	438414	Callee	ZEND_OP1_LITERAL		435840	0					
ANR	438415	Identifier	ZEND_OP1_LITERAL		435840	0					
ANR	438416	ArgumentList	last_op		435840	1					
ANR	438417	Argument	last_op		435840	0					
ANR	438418	Identifier	last_op		435840	0					
ANR	438419	ExpressionStatement	last_op -> opcode = ZEND_JMP	1691:5:56775:56801	435840	2	True				
ANR	438420	AssignmentExpression	last_op -> opcode = ZEND_JMP		435840	0		=			
ANR	438421	PtrMemberAccess	last_op -> opcode		435840	0					
ANR	438422	Identifier	last_op		435840	0					
ANR	438423	Identifier	opcode		435840	1					
ANR	438424	Identifier	ZEND_JMP		435840	1					
ANR	438425	ExpressionStatement	SET_UNUSED ( last_op -> op1 )	1692:5:56808:56832	435840	3	True				
ANR	438426	CallExpression	SET_UNUSED ( last_op -> op1 )		435840	0					
ANR	438427	Callee	SET_UNUSED		435840	0					
ANR	438428	Identifier	SET_UNUSED		435840	0					
ANR	438429	ArgumentList	last_op -> op1		435840	1					
ANR	438430	Argument	last_op -> op1		435840	0					
ANR	438431	PtrMemberAccess	last_op -> op1		435840	0					
ANR	438432	Identifier	last_op		435840	0					
ANR	438433	Identifier	op1		435840	1					
ANR	438434	ExpressionStatement	SET_UNUSED ( last_op -> op2 )	1693:5:56839:56863	435840	4	True				
ANR	438435	CallExpression	SET_UNUSED ( last_op -> op2 )		435840	0					
ANR	438436	Callee	SET_UNUSED		435840	0					
ANR	438437	Identifier	SET_UNUSED		435840	0					
ANR	438438	ArgumentList	last_op -> op2		435840	1					
ANR	438439	Argument	last_op -> op2		435840	0					
ANR	438440	PtrMemberAccess	last_op -> op2		435840	0					
ANR	438441	Identifier	last_op		435840	0					
ANR	438442	Identifier	op2		435840	1					
ANR	438443	ExpressionStatement	block -> op1_to = block -> ext_to	1694:5:56870:56899	435840	5	True				
ANR	438444	AssignmentExpression	block -> op1_to = block -> ext_to		435840	0		=			
ANR	438445	PtrMemberAccess	block -> op1_to		435840	0					
ANR	438446	Identifier	block		435840	0					
ANR	438447	Identifier	op1_to		435840	1					
ANR	438448	PtrMemberAccess	block -> ext_to		435840	1					
ANR	438449	Identifier	block		435840	0					
ANR	438450	Identifier	ext_to		435840	1					
ANR	438451	ExpressionStatement	todel = block -> op2_to	1695:5:56906:56928	435840	6	True				
ANR	438452	AssignmentExpression	todel = block -> op2_to		435840	0		=			
ANR	438453	Identifier	todel		435840	0					
ANR	438454	PtrMemberAccess	block -> op2_to		435840	1					
ANR	438455	Identifier	block		435840	0					
ANR	438456	Identifier	op2_to		435840	1					
ANR	438457	ExpressionStatement	block -> op2_to = NULL	1696:5:56935:56955	435840	7	True				
ANR	438458	AssignmentExpression	block -> op2_to = NULL		435840	0		=			
ANR	438459	PtrMemberAccess	block -> op2_to		435840	0					
ANR	438460	Identifier	block		435840	0					
ANR	438461	Identifier	op2_to		435840	1					
ANR	438462	Identifier	NULL		435840	1					
ANR	438463	ExpressionStatement	block -> ext_to = NULL	1697:5:56962:56982	435840	8	True				
ANR	438464	AssignmentExpression	block -> ext_to = NULL		435840	0		=			
ANR	438465	PtrMemberAccess	block -> ext_to		435840	0					
ANR	438466	Identifier	block		435840	0					
ANR	438467	Identifier	ext_to		435840	1					
ANR	438468	Identifier	NULL		435840	1					
ANR	438469	ExpressionStatement	"del_source ( block , todel )"	1698:5:56989:57013	435840	9	True				
ANR	438470	CallExpression	"del_source ( block , todel )"		435840	0					
ANR	438471	Callee	del_source		435840	0					
ANR	438472	Identifier	del_source		435840	0					
ANR	438473	ArgumentList	block		435840	1					
ANR	438474	Argument	block		435840	0					
ANR	438475	Identifier	block		435840	0					
ANR	438476	Argument	todel		435840	1					
ANR	438477	Identifier	todel		435840	0					
ANR	438478	ElseStatement	else		435840	0					
ANR	438479	IfStatement	if ( block -> op2_to == block -> ext_to )		435840	0					
ANR	438480	Condition	block -> op2_to == block -> ext_to	1700:14:57035:57064	435840	0	True				
ANR	438481	EqualityExpression	block -> op2_to == block -> ext_to		435840	0		==			
ANR	438482	PtrMemberAccess	block -> op2_to		435840	0					
ANR	438483	Identifier	block		435840	0					
ANR	438484	Identifier	op2_to		435840	1					
ANR	438485	PtrMemberAccess	block -> ext_to		435840	1					
ANR	438486	Identifier	block		435840	0					
ANR	438487	Identifier	ext_to		435840	1					
ANR	438488	CompoundStatement		445:46:14620:14620	435840	1					
ANR	438489	IfStatement	if ( ! ( last_op -> op1_type & ( IS_VAR | IS_TMP_VAR ) ) )		435840	0					
ANR	438490	Condition	! ( last_op -> op1_type & ( IS_VAR | IS_TMP_VAR ) )	1702:8:57121:57162	435840	0	True				
ANR	438491	UnaryOperationExpression	! ( last_op -> op1_type & ( IS_VAR | IS_TMP_VAR ) )		435840	0					
ANR	438492	UnaryOperator	!		435840	0					
ANR	438493	BitAndExpression	last_op -> op1_type & ( IS_VAR | IS_TMP_VAR )		435840	1		&			
ANR	438494	PtrMemberAccess	last_op -> op1_type		435840	0					
ANR	438495	Identifier	last_op		435840	0					
ANR	438496	Identifier	op1_type		435840	1					
ANR	438497	InclusiveOrExpression	IS_VAR | IS_TMP_VAR		435840	1		|			
ANR	438498	Identifier	IS_VAR		435840	0					
ANR	438499	Identifier	IS_TMP_VAR		435840	1					
ANR	438500	CompoundStatement		447:52:14718:14718	435840	1					
ANR	438501	ExpressionStatement	last_op -> opcode = ZEND_JMP	1704:5:57207:57233	435840	0	True				
ANR	438502	AssignmentExpression	last_op -> opcode = ZEND_JMP		435840	0		=			
ANR	438503	PtrMemberAccess	last_op -> opcode		435840	0					
ANR	438504	Identifier	last_op		435840	0					
ANR	438505	Identifier	opcode		435840	1					
ANR	438506	Identifier	ZEND_JMP		435840	1					
ANR	438507	ExpressionStatement	SET_UNUSED ( last_op -> op1 )	1705:5:57240:57264	435840	1	True				
ANR	438508	CallExpression	SET_UNUSED ( last_op -> op1 )		435840	0					
ANR	438509	Callee	SET_UNUSED		435840	0					
ANR	438510	Identifier	SET_UNUSED		435840	0					
ANR	438511	ArgumentList	last_op -> op1		435840	1					
ANR	438512	Argument	last_op -> op1		435840	0					
ANR	438513	PtrMemberAccess	last_op -> op1		435840	0					
ANR	438514	Identifier	last_op		435840	0					
ANR	438515	Identifier	op1		435840	1					
ANR	438516	ExpressionStatement	SET_UNUSED ( last_op -> op2 )	1706:5:57271:57295	435840	2	True				
ANR	438517	CallExpression	SET_UNUSED ( last_op -> op2 )		435840	0					
ANR	438518	Callee	SET_UNUSED		435840	0					
ANR	438519	Identifier	SET_UNUSED		435840	0					
ANR	438520	ArgumentList	last_op -> op2		435840	1					
ANR	438521	Argument	last_op -> op2		435840	0					
ANR	438522	PtrMemberAccess	last_op -> op2		435840	0					
ANR	438523	Identifier	last_op		435840	0					
ANR	438524	Identifier	op2		435840	1					
ANR	438525	ExpressionStatement	block -> op1_to = block -> op2_to	1707:5:57302:57331	435840	3	True				
ANR	438526	AssignmentExpression	block -> op1_to = block -> op2_to		435840	0		=			
ANR	438527	PtrMemberAccess	block -> op1_to		435840	0					
ANR	438528	Identifier	block		435840	0					
ANR	438529	Identifier	op1_to		435840	1					
ANR	438530	PtrMemberAccess	block -> op2_to		435840	1					
ANR	438531	Identifier	block		435840	0					
ANR	438532	Identifier	op2_to		435840	1					
ANR	438533	ExpressionStatement	block -> op2_to = NULL	1708:5:57338:57358	435840	4	True				
ANR	438534	AssignmentExpression	block -> op2_to = NULL		435840	0		=			
ANR	438535	PtrMemberAccess	block -> op2_to		435840	0					
ANR	438536	Identifier	block		435840	0					
ANR	438537	Identifier	op2_to		435840	1					
ANR	438538	Identifier	NULL		435840	1					
ANR	438539	ExpressionStatement	block -> ext_to = NULL	1709:5:57365:57385	435840	5	True				
ANR	438540	AssignmentExpression	block -> ext_to = NULL		435840	0		=			
ANR	438541	PtrMemberAccess	block -> ext_to		435840	0					
ANR	438542	Identifier	block		435840	0					
ANR	438543	Identifier	ext_to		435840	1					
ANR	438544	Identifier	NULL		435840	1					
ANR	438545	ElseStatement	else		435840	0					
ANR	438546	IfStatement	if ( block -> op2_to == next )		435840	0					
ANR	438547	Condition	block -> op2_to == next	1711:14:57407:57427	435840	0	True				
ANR	438548	EqualityExpression	block -> op2_to == next		435840	0		==			
ANR	438549	PtrMemberAccess	block -> op2_to		435840	0					
ANR	438550	Identifier	block		435840	0					
ANR	438551	Identifier	op2_to		435840	1					
ANR	438552	Identifier	next		435840	1					
ANR	438553	CompoundStatement		456:37:14983:14983	435840	1					
ANR	438554	ExpressionStatement	last_op -> opcode = ZEND_JMPNZ	1714:4:57551:57579	435840	0	True				
ANR	438555	AssignmentExpression	last_op -> opcode = ZEND_JMPNZ		435840	0		=			
ANR	438556	PtrMemberAccess	last_op -> opcode		435840	0					
ANR	438557	Identifier	last_op		435840	0					
ANR	438558	Identifier	opcode		435840	1					
ANR	438559	Identifier	ZEND_JMPNZ		435840	1					
ANR	438560	ExpressionStatement	block -> op2_to = block -> ext_to	1715:4:57585:57614	435840	1	True				
ANR	438561	AssignmentExpression	block -> op2_to = block -> ext_to		435840	0		=			
ANR	438562	PtrMemberAccess	block -> op2_to		435840	0					
ANR	438563	Identifier	block		435840	0					
ANR	438564	Identifier	op2_to		435840	1					
ANR	438565	PtrMemberAccess	block -> ext_to		435840	1					
ANR	438566	Identifier	block		435840	0					
ANR	438567	Identifier	ext_to		435840	1					
ANR	438568	ExpressionStatement	block -> follow_to = next	1716:4:57620:57643	435840	2	True				
ANR	438569	AssignmentExpression	block -> follow_to = next		435840	0		=			
ANR	438570	PtrMemberAccess	block -> follow_to		435840	0					
ANR	438571	Identifier	block		435840	0					
ANR	438572	Identifier	follow_to		435840	1					
ANR	438573	Identifier	next		435840	1					
ANR	438574	ExpressionStatement	block -> ext_to = NULL	1717:4:57649:57669	435840	3	True				
ANR	438575	AssignmentExpression	block -> ext_to = NULL		435840	0		=			
ANR	438576	PtrMemberAccess	block -> ext_to		435840	0					
ANR	438577	Identifier	block		435840	0					
ANR	438578	Identifier	ext_to		435840	1					
ANR	438579	Identifier	NULL		435840	1					
ANR	438580	ElseStatement	else		435840	0					
ANR	438581	IfStatement	if ( block -> ext_to == next )		435840	0					
ANR	438582	Condition	block -> ext_to == next	1719:14:57738:57758	435840	0	True				
ANR	438583	EqualityExpression	block -> ext_to == next		435840	0		==			
ANR	438584	PtrMemberAccess	block -> ext_to		435840	0					
ANR	438585	Identifier	block		435840	0					
ANR	438586	Identifier	ext_to		435840	1					
ANR	438587	Identifier	next		435840	1					
ANR	438588	CompoundStatement		464:37:15314:15314	435840	1					
ANR	438589	ExpressionStatement	last_op -> opcode = ZEND_JMPZ	1722:4:57881:57908	435840	0	True				
ANR	438590	AssignmentExpression	last_op -> opcode = ZEND_JMPZ		435840	0		=			
ANR	438591	PtrMemberAccess	last_op -> opcode		435840	0					
ANR	438592	Identifier	last_op		435840	0					
ANR	438593	Identifier	opcode		435840	1					
ANR	438594	Identifier	ZEND_JMPZ		435840	1					
ANR	438595	ExpressionStatement	block -> follow_to = next	1723:4:57914:57937	435840	1	True				
ANR	438596	AssignmentExpression	block -> follow_to = next		435840	0		=			
ANR	438597	PtrMemberAccess	block -> follow_to		435840	0					
ANR	438598	Identifier	block		435840	0					
ANR	438599	Identifier	follow_to		435840	1					
ANR	438600	Identifier	next		435840	1					
ANR	438601	ExpressionStatement	block -> ext_to = NULL	1724:4:57943:57963	435840	2	True				
ANR	438602	AssignmentExpression	block -> ext_to = NULL		435840	0		=			
ANR	438603	PtrMemberAccess	block -> ext_to		435840	0					
ANR	438604	Identifier	block		435840	0					
ANR	438605	Identifier	ext_to		435840	1					
ANR	438606	Identifier	NULL		435840	1					
ANR	438607	IfStatement	if ( last_op -> opcode == ZEND_JMPZNZ && block -> op2_to )		435840	3					
ANR	438608	Condition	last_op -> opcode == ZEND_JMPZNZ && block -> op2_to	1728:7:58031:58077	435840	0	True				
ANR	438609	AndExpression	last_op -> opcode == ZEND_JMPZNZ && block -> op2_to		435840	0		&&			
ANR	438610	EqualityExpression	last_op -> opcode == ZEND_JMPZNZ		435840	0		==			
ANR	438611	PtrMemberAccess	last_op -> opcode		435840	0					
ANR	438612	Identifier	last_op		435840	0					
ANR	438613	Identifier	opcode		435840	1					
ANR	438614	Identifier	ZEND_JMPZNZ		435840	1					
ANR	438615	PtrMemberAccess	block -> op2_to		435840	1					
ANR	438616	Identifier	block		435840	0					
ANR	438617	Identifier	op2_to		435840	1					
ANR	438618	CompoundStatement		478:4:15788:15833	435840	1					
ANR	438619	IdentifierDeclStatement	zend_uchar same_type = ZEND_OP1_TYPE ( last_op ) ;	1729:4:58086:58131	435840	0	True				
ANR	438620	IdentifierDecl	same_type = ZEND_OP1_TYPE ( last_op )		435840	0					
ANR	438621	IdentifierDeclType	zend_uchar		435840	0					
ANR	438622	Identifier	same_type		435840	1					
ANR	438623	AssignmentExpression	same_type = ZEND_OP1_TYPE ( last_op )		435840	2		=			
ANR	438624	Identifier	same_type		435840	0					
ANR	438625	CallExpression	ZEND_OP1_TYPE ( last_op )		435840	1					
ANR	438626	Callee	ZEND_OP1_TYPE		435840	0					
ANR	438627	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	438628	ArgumentList	last_op		435840	1					
ANR	438629	Argument	last_op		435840	0					
ANR	438630	Identifier	last_op		435840	0					
ANR	438631	IdentifierDeclStatement	zend_uchar same_var = VAR_NUM_EX ( last_op -> op1 ) ;	1730:4:58137:58183	435840	1	True				
ANR	438632	IdentifierDecl	same_var = VAR_NUM_EX ( last_op -> op1 )		435840	0					
ANR	438633	IdentifierDeclType	zend_uchar		435840	0					
ANR	438634	Identifier	same_var		435840	1					
ANR	438635	AssignmentExpression	same_var = VAR_NUM_EX ( last_op -> op1 )		435840	2		=			
ANR	438636	Identifier	same_var		435840	0					
ANR	438637	CallExpression	VAR_NUM_EX ( last_op -> op1 )		435840	1					
ANR	438638	Callee	VAR_NUM_EX		435840	0					
ANR	438639	Identifier	VAR_NUM_EX		435840	0					
ANR	438640	ArgumentList	last_op -> op1		435840	1					
ANR	438641	Argument	last_op -> op1		435840	0					
ANR	438642	PtrMemberAccess	last_op -> op1		435840	0					
ANR	438643	Identifier	last_op		435840	0					
ANR	438644	Identifier	op1		435840	1					
ANR	438645	IdentifierDeclStatement	zend_op * target ;	1731:4:58189:58204	435840	2	True				
ANR	438646	IdentifierDecl	* target		435840	0					
ANR	438647	IdentifierDeclType	zend_op *		435840	0					
ANR	438648	Identifier	target		435840	1					
ANR	438649	IdentifierDeclStatement	zend_op * target_end ;	1732:4:58210:58229	435840	3	True				
ANR	438650	IdentifierDecl	* target_end		435840	0					
ANR	438651	IdentifierDeclType	zend_op *		435840	0					
ANR	438652	Identifier	target_end		435840	1					
ANR	438653	IdentifierDeclStatement	zend_code_block * target_block = block -> op2_to ;	1733:4:58235:58280	435840	4	True				
ANR	438654	IdentifierDecl	* target_block = block -> op2_to		435840	0					
ANR	438655	IdentifierDeclType	zend_code_block *		435840	0					
ANR	438656	Identifier	target_block		435840	1					
ANR	438657	AssignmentExpression	* target_block = block -> op2_to		435840	2		=			
ANR	438658	Identifier	target_block		435840	0					
ANR	438659	PtrMemberAccess	block -> op2_to		435840	1					
ANR	438660	Identifier	block		435840	0					
ANR	438661	Identifier	op2_to		435840	1					
ANR	438662	Label	next_target_znz :	1735:0:58283:58298	435840	5	True				
ANR	438663	Identifier	next_target_znz		435840	0					
ANR	438664	ExpressionStatement	target = target_block -> start_opline	1736:4:58304:58339	435840	6	True				
ANR	438665	AssignmentExpression	target = target_block -> start_opline		435840	0		=			
ANR	438666	Identifier	target		435840	0					
ANR	438667	PtrMemberAccess	target_block -> start_opline		435840	1					
ANR	438668	Identifier	target_block		435840	0					
ANR	438669	Identifier	start_opline		435840	1					
ANR	438670	ExpressionStatement	target_end = target_block -> start_opline + target_block -> len	1737:4:58345:58404	435840	7	True				
ANR	438671	AssignmentExpression	target_end = target_block -> start_opline + target_block -> len		435840	0		=			
ANR	438672	Identifier	target_end		435840	0					
ANR	438673	AdditiveExpression	target_block -> start_opline + target_block -> len		435840	1		+			
ANR	438674	PtrMemberAccess	target_block -> start_opline		435840	0					
ANR	438675	Identifier	target_block		435840	0					
ANR	438676	Identifier	start_opline		435840	1					
ANR	438677	PtrMemberAccess	target_block -> len		435840	1					
ANR	438678	Identifier	target_block		435840	0					
ANR	438679	Identifier	len		435840	1					
ANR	438680	WhileStatement	while ( target < target_end && target -> opcode == ZEND_NOP )		435840	8					
ANR	438681	Condition	target < target_end && target -> opcode == ZEND_NOP	1738:11:58417:58465	435840	0	True				
ANR	438682	AndExpression	target < target_end && target -> opcode == ZEND_NOP		435840	0		&&			
ANR	438683	RelationalExpression	target < target_end		435840	0		<			
ANR	438684	Identifier	target		435840	0					
ANR	438685	Identifier	target_end		435840	1					
ANR	438686	EqualityExpression	target -> opcode == ZEND_NOP		435840	1		==			
ANR	438687	PtrMemberAccess	target -> opcode		435840	0					
ANR	438688	Identifier	target		435840	0					
ANR	438689	Identifier	opcode		435840	1					
ANR	438690	Identifier	ZEND_NOP		435840	1					
ANR	438691	CompoundStatement		483:62:16021:16021	435840	1					
ANR	438692	ExpressionStatement	target ++	1739:5:58475:58483	435840	0	True				
ANR	438693	PostIncDecOperationExpression	target ++		435840	0					
ANR	438694	Identifier	target		435840	0					
ANR	438695	IncDec	++		435840	1					
ANR	438696	IfStatement	if ( target == target_end )		435840	9					
ANR	438697	Condition	target == target_end	1742:8:58534:58553	435840	0	True				
ANR	438698	EqualityExpression	target == target_end		435840	0		==			
ANR	438699	Identifier	target		435840	0					
ANR	438700	Identifier	target_end		435840	1					
ANR	438701	CompoundStatement		487:30:16109:16109	435840	1					
ANR	438702	ExpressionStatement	target_block = target_block -> follow_to	1743:5:58563:58601	435840	0	True				
ANR	438703	AssignmentExpression	target_block = target_block -> follow_to		435840	0		=			
ANR	438704	Identifier	target_block		435840	0					
ANR	438705	PtrMemberAccess	target_block -> follow_to		435840	1					
ANR	438706	Identifier	target_block		435840	0					
ANR	438707	Identifier	follow_to		435840	1					
ANR	438708	GotoStatement	goto next_target_znz ;	1744:5:58608:58628	435840	1	True				
ANR	438709	Identifier	next_target_znz		435840	0					
ANR	438710	ElseStatement	else		435840	0					
ANR	438711	IfStatement	if ( target_block -> op2_to && ( target -> opcode == ZEND_JMPZ || target -> opcode == ZEND_JMPZNZ ) && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && ! target_block -> protected )		435840	0					
ANR	438712	Condition	target_block -> op2_to && ( target -> opcode == ZEND_JMPZ || target -> opcode == ZEND_JMPZNZ ) && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && ! target_block -> protected	1745:15:58645:58928	435840	0	True				
ANR	438713	AndExpression	target_block -> op2_to && ( target -> opcode == ZEND_JMPZ || target -> opcode == ZEND_JMPZNZ ) && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && ! target_block -> protected		435840	0		&&			
ANR	438714	PtrMemberAccess	target_block -> op2_to		435840	0					
ANR	438715	Identifier	target_block		435840	0					
ANR	438716	Identifier	op2_to		435840	1					
ANR	438717	AndExpression	( target -> opcode == ZEND_JMPZ || target -> opcode == ZEND_JMPZNZ ) && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && ! target_block -> protected		435840	1		&&			
ANR	438718	OrExpression	target -> opcode == ZEND_JMPZ || target -> opcode == ZEND_JMPZNZ		435840	0		||			
ANR	438719	EqualityExpression	target -> opcode == ZEND_JMPZ		435840	0		==			
ANR	438720	PtrMemberAccess	target -> opcode		435840	0					
ANR	438721	Identifier	target		435840	0					
ANR	438722	Identifier	opcode		435840	1					
ANR	438723	Identifier	ZEND_JMPZ		435840	1					
ANR	438724	EqualityExpression	target -> opcode == ZEND_JMPZNZ		435840	1		==			
ANR	438725	PtrMemberAccess	target -> opcode		435840	0					
ANR	438726	Identifier	target		435840	0					
ANR	438727	Identifier	opcode		435840	1					
ANR	438728	Identifier	ZEND_JMPZNZ		435840	1					
ANR	438729	AndExpression	( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && ! target_block -> protected		435840	1		&&			
ANR	438730	BitAndExpression	ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV )		435840	0		&			
ANR	438731	CallExpression	ZEND_OP1_TYPE ( target )		435840	0					
ANR	438732	Callee	ZEND_OP1_TYPE		435840	0					
ANR	438733	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	438734	ArgumentList	target		435840	1					
ANR	438735	Argument	target		435840	0					
ANR	438736	Identifier	target		435840	0					
ANR	438737	InclusiveOrExpression	IS_TMP_VAR | IS_CV		435840	1		|			
ANR	438738	Identifier	IS_TMP_VAR		435840	0					
ANR	438739	Identifier	IS_CV		435840	1					
ANR	438740	AndExpression	same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && ! target_block -> protected		435840	1		&&			
ANR	438741	EqualityExpression	same_type == ZEND_OP1_TYPE ( target )		435840	0		==			
ANR	438742	Identifier	same_type		435840	0					
ANR	438743	CallExpression	ZEND_OP1_TYPE ( target )		435840	1					
ANR	438744	Callee	ZEND_OP1_TYPE		435840	0					
ANR	438745	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	438746	ArgumentList	target		435840	1					
ANR	438747	Argument	target		435840	0					
ANR	438748	Identifier	target		435840	0					
ANR	438749	AndExpression	same_var == VAR_NUM_EX ( target -> op1 ) && ! target_block -> protected		435840	1		&&			
ANR	438750	EqualityExpression	same_var == VAR_NUM_EX ( target -> op1 )		435840	0		==			
ANR	438751	Identifier	same_var		435840	0					
ANR	438752	CallExpression	VAR_NUM_EX ( target -> op1 )		435840	1					
ANR	438753	Callee	VAR_NUM_EX		435840	0					
ANR	438754	Identifier	VAR_NUM_EX		435840	0					
ANR	438755	ArgumentList	target -> op1		435840	1					
ANR	438756	Argument	target -> op1		435840	0					
ANR	438757	PtrMemberAccess	target -> op1		435840	0					
ANR	438758	Identifier	target		435840	0					
ANR	438759	Identifier	op1		435840	1					
ANR	438760	UnaryOperationExpression	! target_block -> protected		435840	1					
ANR	438761	UnaryOperator	!		435840	0					
ANR	438762	PtrMemberAccess	target_block -> protected		435840	1					
ANR	438763	Identifier	target_block		435840	0					
ANR	438764	Identifier	protected		435840	1					
ANR	438765	CompoundStatement		495:35:16484:16484	435840	1					
ANR	438766	ExpressionStatement	"del_source ( block , block -> op2_to )"	1752:5:59008:59040	435840	0	True				
ANR	438767	CallExpression	"del_source ( block , block -> op2_to )"		435840	0					
ANR	438768	Callee	del_source		435840	0					
ANR	438769	Identifier	del_source		435840	0					
ANR	438770	ArgumentList	block		435840	1					
ANR	438771	Argument	block		435840	0					
ANR	438772	Identifier	block		435840	0					
ANR	438773	Argument	block -> op2_to		435840	1					
ANR	438774	PtrMemberAccess	block -> op2_to		435840	0					
ANR	438775	Identifier	block		435840	0					
ANR	438776	Identifier	op2_to		435840	1					
ANR	438777	ExpressionStatement	block -> op2_to = target_block -> op2_to	1753:5:59047:59083	435840	1	True				
ANR	438778	AssignmentExpression	block -> op2_to = target_block -> op2_to		435840	0		=			
ANR	438779	PtrMemberAccess	block -> op2_to		435840	0					
ANR	438780	Identifier	block		435840	0					
ANR	438781	Identifier	op2_to		435840	1					
ANR	438782	PtrMemberAccess	target_block -> op2_to		435840	1					
ANR	438783	Identifier	target_block		435840	0					
ANR	438784	Identifier	op2_to		435840	1					
ANR	438785	ExpressionStatement	"ADD_SOURCE ( block , block -> op2_to )"	1754:5:59090:59122	435840	2	True				
ANR	438786	CallExpression	"ADD_SOURCE ( block , block -> op2_to )"		435840	0					
ANR	438787	Callee	ADD_SOURCE		435840	0					
ANR	438788	Identifier	ADD_SOURCE		435840	0					
ANR	438789	ArgumentList	block		435840	1					
ANR	438790	Argument	block		435840	0					
ANR	438791	Identifier	block		435840	0					
ANR	438792	Argument	block -> op2_to		435840	1					
ANR	438793	PtrMemberAccess	block -> op2_to		435840	0					
ANR	438794	Identifier	block		435840	0					
ANR	438795	Identifier	op2_to		435840	1					
ANR	438796	ElseStatement	else		435840	0					
ANR	438797	IfStatement	if ( target -> opcode == ZEND_JMPNZ && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && target_block -> follow_to && ! target_block -> protected )		435840	0					
ANR	438798	Condition	target -> opcode == ZEND_JMPNZ && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && target_block -> follow_to && ! target_block -> protected	1755:15:59139:59391	435840	0	True				
ANR	438799	AndExpression	target -> opcode == ZEND_JMPNZ && ( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && target_block -> follow_to && ! target_block -> protected		435840	0		&&			
ANR	438800	EqualityExpression	target -> opcode == ZEND_JMPNZ		435840	0		==			
ANR	438801	PtrMemberAccess	target -> opcode		435840	0					
ANR	438802	Identifier	target		435840	0					
ANR	438803	Identifier	opcode		435840	1					
ANR	438804	Identifier	ZEND_JMPNZ		435840	1					
ANR	438805	AndExpression	( ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV ) ) && same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && target_block -> follow_to && ! target_block -> protected		435840	1		&&			
ANR	438806	BitAndExpression	ZEND_OP1_TYPE ( target ) & ( IS_TMP_VAR | IS_CV )		435840	0		&			
ANR	438807	CallExpression	ZEND_OP1_TYPE ( target )		435840	0					
ANR	438808	Callee	ZEND_OP1_TYPE		435840	0					
ANR	438809	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	438810	ArgumentList	target		435840	1					
ANR	438811	Argument	target		435840	0					
ANR	438812	Identifier	target		435840	0					
ANR	438813	InclusiveOrExpression	IS_TMP_VAR | IS_CV		435840	1		|			
ANR	438814	Identifier	IS_TMP_VAR		435840	0					
ANR	438815	Identifier	IS_CV		435840	1					
ANR	438816	AndExpression	same_type == ZEND_OP1_TYPE ( target ) && same_var == VAR_NUM_EX ( target -> op1 ) && target_block -> follow_to && ! target_block -> protected		435840	1		&&			
ANR	438817	EqualityExpression	same_type == ZEND_OP1_TYPE ( target )		435840	0		==			
ANR	438818	Identifier	same_type		435840	0					
ANR	438819	CallExpression	ZEND_OP1_TYPE ( target )		435840	1					
ANR	438820	Callee	ZEND_OP1_TYPE		435840	0					
ANR	438821	Identifier	ZEND_OP1_TYPE		435840	0					
ANR	438822	ArgumentList	target		435840	1					
ANR	438823	Argument	target		435840	0					
ANR	438824	Identifier	target		435840	0					
ANR	438825	AndExpression	same_var == VAR_NUM_EX ( target -> op1 ) && target_block -> follow_to && ! target_block -> protected		435840	1		&&			
ANR	438826	EqualityExpression	same_var == VAR_NUM_EX ( target -> op1 )		435840	0		==			
ANR	438827	Identifier	same_var		435840	0					
ANR	438828	CallExpression	VAR_NUM_EX ( target -> op1 )		435840	1					
ANR	438829	Callee	VAR_NUM_EX		435840	0					
ANR	438830	Identifier	VAR_NUM_EX		435840	0					
ANR	438831	ArgumentList	target -> op1		435840	1					
ANR	438832	Argument	target -> op1		435840	0					
ANR	438833	PtrMemberAccess	target -> op1		435840	0					
ANR	438834	Identifier	target		435840	0					
ANR	438835	Identifier	op1		435840	1					
ANR	438836	AndExpression	target_block -> follow_to && ! target_block -> protected		435840	1		&&			
ANR	438837	PtrMemberAccess	target_block -> follow_to		435840	0					
ANR	438838	Identifier	target_block		435840	0					
ANR	438839	Identifier	follow_to		435840	1					
ANR	438840	UnaryOperationExpression	! target_block -> protected		435840	1					
ANR	438841	UnaryOperator	!		435840	0					
ANR	438842	PtrMemberAccess	target_block -> protected		435840	1					
ANR	438843	Identifier	target_block		435840	0					
ANR	438844	Identifier	protected		435840	1					
ANR	438845	CompoundStatement		505:35:16947:16947	435840	1					
ANR	438846	ExpressionStatement	"del_source ( block , block -> op2_to )"	1762:5:59490:59522	435840	0	True				
ANR	438847	CallExpression	"del_source ( block , block -> op2_to )"		435840	0					
ANR	438848	Callee	del_source		435840	0					
ANR	438849	Identifier	del_source		435840	0					
ANR	438850	ArgumentList	block		435840	1					
ANR	438851	Argument	block		435840	0					
ANR	438852	Identifier	block		435840	0					
ANR	438853	Argument	block -> op2_to		435840	1					
ANR	438854	PtrMemberAccess	block -> op2_to		435840	0					
ANR	438855	Identifier	block		435840	0					
ANR	438856	Identifier	op2_to		435840	1					
ANR	438857	ExpressionStatement	block -> op2_to = target_block -> follow_to	1763:5:59529:59568	435840	1	True				
ANR	438858	AssignmentExpression	block -> op2_to = target_block -> follow_to		435840	0		=			
ANR	438859	PtrMemberAccess	block -> op2_to		435840	0					
ANR	438860	Identifier	block		435840	0					
ANR	438861	Identifier	op2_to		435840	1					
ANR	438862	PtrMemberAccess	target_block -> follow_to		435840	1					
ANR	438863	Identifier	target_block		435840	0					
ANR	438864	Identifier	follow_to		435840	1					
ANR	438865	ExpressionStatement	"ADD_SOURCE ( block , block -> op2_to )"	1764:5:59575:59607	435840	2	True				
ANR	438866	CallExpression	"ADD_SOURCE ( block , block -> op2_to )"		435840	0					
ANR	438867	Callee	ADD_SOURCE		435840	0					
ANR	438868	Identifier	ADD_SOURCE		435840	0					
ANR	438869	ArgumentList	block		435840	1					
ANR	438870	Argument	block		435840	0					
ANR	438871	Identifier	block		435840	0					
ANR	438872	Argument	block -> op2_to		435840	1					
ANR	438873	PtrMemberAccess	block -> op2_to		435840	0					
ANR	438874	Identifier	block		435840	0					
ANR	438875	Identifier	op2_to		435840	1					
ANR	438876	ElseStatement	else		435840	0					
ANR	438877	IfStatement	if ( target_block -> op1_to && target -> opcode == ZEND_JMP && ! target_block -> protected )		435840	0					
ANR	438878	Condition	target_block -> op1_to && target -> opcode == ZEND_JMP && ! target_block -> protected	1765:15:59624:59725	435840	0	True				
ANR	438879	AndExpression	target_block -> op1_to && target -> opcode == ZEND_JMP && ! target_block -> protected		435840	0		&&			
ANR	438880	PtrMemberAccess	target_block -> op1_to		435840	0					
ANR	438881	Identifier	target_block		435840	0					
ANR	438882	Identifier	op1_to		435840	1					
ANR	438883	AndExpression	target -> opcode == ZEND_JMP && ! target_block -> protected		435840	1		&&			
ANR	438884	EqualityExpression	target -> opcode == ZEND_JMP		435840	0		==			
ANR	438885	PtrMemberAccess	target -> opcode		435840	0					
ANR	438886	Identifier	target		435840	0					
ANR	438887	Identifier	opcode		435840	1					
ANR	438888	Identifier	ZEND_JMP		435840	1					
ANR	438889	UnaryOperationExpression	! target_block -> protected		435840	1					
ANR	438890	UnaryOperator	!		435840	0					
ANR	438891	PtrMemberAccess	target_block -> protected		435840	1					
ANR	438892	Identifier	target_block		435840	0					
ANR	438893	Identifier	protected		435840	1					
ANR	438894	CompoundStatement		512:38:17281:17281	435840	1					
ANR	438895	ExpressionStatement	"del_source ( block , block -> op2_to )"	1769:5:59813:59845	435840	0	True				
ANR	438896	CallExpression	"del_source ( block , block -> op2_to )"		435840	0					
ANR	438897	Callee	del_source		435840	0					
ANR	438898	Identifier	del_source		435840	0					
ANR	438899	ArgumentList	block		435840	1					
ANR	438900	Argument	block		435840	0					
ANR	438901	Identifier	block		435840	0					
ANR	438902	Argument	block -> op2_to		435840	1					
ANR	438903	PtrMemberAccess	block -> op2_to		435840	0					
ANR	438904	Identifier	block		435840	0					
ANR	438905	Identifier	op2_to		435840	1					
ANR	438906	ExpressionStatement	block -> op2_to = target_block -> op1_to	1770:5:59852:59888	435840	1	True				
ANR	438907	AssignmentExpression	block -> op2_to = target_block -> op1_to		435840	0		=			
ANR	438908	PtrMemberAccess	block -> op2_to		435840	0					
ANR	438909	Identifier	block		435840	0					
ANR	438910	Identifier	op2_to		435840	1					
ANR	438911	PtrMemberAccess	target_block -> op1_to		435840	1					
ANR	438912	Identifier	target_block		435840	0					
ANR	438913	Identifier	op1_to		435840	1					
ANR	438914	ExpressionStatement	"ADD_SOURCE ( block , block -> op2_to )"	1771:5:59895:59927	435840	2	True				
ANR	438915	CallExpression	"ADD_SOURCE ( block , block -> op2_to )"		435840	0					
ANR	438916	Callee	ADD_SOURCE		435840	0					
ANR	438917	Identifier	ADD_SOURCE		435840	0					
ANR	438918	ArgumentList	block		435840	1					
ANR	438919	Argument	block		435840	0					
ANR	438920	Identifier	block		435840	0					
ANR	438921	Argument	block -> op2_to		435840	1					
ANR	438922	PtrMemberAccess	block -> op2_to		435840	0					
ANR	438923	Identifier	block		435840	0					
ANR	438924	Identifier	op2_to		435840	1					
ANR	438925	BreakStatement	break ;	1774:3:59943:59948	435840	4	True				
ANR	438926	ReturnType	static void		435840	1					
ANR	438927	Identifier	zend_jmp_optimization		435840	2					
ANR	438928	ParameterList	"zend_code_block * block , zend_op_array * op_array , zend_code_block * blocks , zend_cfg * cfg , zend_optimizer_ctx * ctx"		435840	3					
ANR	438929	Parameter	zend_code_block * block	1255:34:42332:42353	435840	0	True				
ANR	438930	ParameterType	zend_code_block *		435840	0					
ANR	438931	Identifier	block		435840	1					
ANR	438932	Parameter	zend_op_array * op_array	1255:58:42356:42378	435840	1	True				
ANR	438933	ParameterType	zend_op_array *		435840	0					
ANR	438934	Identifier	op_array		435840	1					
ANR	438935	Parameter	zend_code_block * blocks	1255:83:42381:42403	435840	2	True				
ANR	438936	ParameterType	zend_code_block *		435840	0					
ANR	438937	Identifier	blocks		435840	1					
ANR	438938	Parameter	zend_cfg * cfg	1255:108:42406:42418	435840	3	True				
ANR	438939	ParameterType	zend_cfg *		435840	0					
ANR	438940	Identifier	cfg		435840	1					
ANR	438941	Parameter	zend_optimizer_ctx * ctx	1255:123:42421:42443	435840	4	True				
ANR	438942	ParameterType	zend_optimizer_ctx *		435840	0					
ANR	438943	Identifier	ctx		435840	1					
ANR	438944	CFGEntryNode	ENTRY		435840		True				
ANR	438945	CFGExitNode	EXIT		435840		True				
ANR	438946	Symbol	ZEND_JMPNZ		435840						
ANR	438947	Symbol	ZEND_JMPZNZ		435840						
ANR	438948	Symbol	prev		435840						
ANR	438949	Symbol	target_block -> ext_to		435840						
ANR	438950	Symbol	ZEND_QM_ASSIGN		435840						
ANR	438951	Symbol	* same_t		435840						
ANR	438952	Symbol	ZEND_FETCH_DIM_R		435840						
ANR	438953	Symbol	last_op -> op1		435840						
ANR	438954	Symbol	last_op -> op2		435840						
ANR	438955	Symbol	block		435840						
ANR	438956	Symbol	last_op		435840						
ANR	438957	Symbol	same_t		435840						
ANR	438958	Symbol	target_block		435840						
ANR	438959	Symbol	zend_optimizer_add_literal		435840						
ANR	438960	Symbol	block -> op1_to -> protected		435840						
ANR	438961	Symbol	ZEND_FETCH_OBJ_R		435840						
ANR	438962	Symbol	IS_CONST		435840						
ANR	438963	Symbol	INV_COND_EX		435840						
ANR	438964	Symbol	ZEND_RETURN		435840						
ANR	438965	Symbol	ctx		435840						
ANR	438966	Symbol	todel		435840						
ANR	438967	Symbol	target_end		435840						
ANR	438968	Symbol	& ZEND_OP1_LITERAL		435840						
ANR	438969	Symbol	* op_array		435840						
ANR	438970	Symbol	* cfg		435840						
ANR	438971	Symbol	ZEND_RESULT_TYPE		435840						
ANR	438972	Symbol	* cs		435840						
ANR	438973	Symbol	ZEND_OP1_LITERAL		435840						
ANR	438974	Symbol	ZEND_EXIT		435840						
ANR	438975	Symbol	zv		435840						
ANR	438976	Symbol	IS_VAR		435840						
ANR	438977	Symbol	ZEND_JMPZ_EX		435840						
ANR	438978	Symbol	block -> op1_to -> op1_to		435840						
ANR	438979	Symbol	target_block -> follow_to		435840						
ANR	438980	Symbol	next -> access		435840						
ANR	438981	Symbol	block -> follow_to -> protected		435840						
ANR	438982	Symbol	target_block -> protected		435840						
ANR	438983	Symbol	block -> op2_to		435840						
ANR	438984	Symbol	* VAR_NUM_EX		435840						
ANR	438985	Symbol	prev -> next		435840						
ANR	438986	Symbol	cfg		435840						
ANR	438987	Symbol	& zv		435840						
ANR	438988	Symbol	target_block -> op2_to		435840						
ANR	438989	Symbol	ZEND_FETCH_R		435840						
ANR	438990	Symbol	op_array -> last_try_catch		435840						
ANR	438991	Symbol	* target		435840						
ANR	438992	Symbol	cs		435840						
ANR	438993	Symbol	last_op -> result		435840						
ANR	438994	Symbol	ZEND_JMP		435840						
ANR	438995	Symbol	target_block -> len		435840						
ANR	438996	Symbol	Tsource		435840						
ANR	438997	Symbol	var_num		435840						
ANR	438998	Symbol	INV_EX_COND		435840						
ANR	438999	Symbol	* block -> follow_to		435840						
ANR	439000	Symbol	* * block		435840						
ANR	439001	Symbol	target -> opcode		435840						
ANR	439002	Symbol	target_block -> start_opline		435840						
ANR	439003	Symbol	op_array		435840						
ANR	439004	Symbol	ZEND_FAST_RET		435840						
ANR	439005	Symbol	ZEND_FREE		435840						
ANR	439006	Symbol	INV_EX_COND_EX		435840						
ANR	439007	Symbol	* cs -> from		435840						
ANR	439008	Symbol	IS_CV		435840						
ANR	439009	Symbol	last_op -> op2 . num		435840						
ANR	439010	Symbol	next -> next		435840						
ANR	439011	Symbol	* next		435840						
ANR	439012	Symbol	cs -> from -> follow_to		435840						
ANR	439013	Symbol	cs -> from		435840						
ANR	439014	Symbol	block -> ext_to		435840						
ANR	439015	Symbol	* src		435840						
ANR	439016	Symbol	* target_block		435840						
ANR	439017	Symbol	next -> follow_to		435840						
ANR	439018	Symbol	same_type		435840						
ANR	439019	Symbol	block -> op1_to -> ext_to		435840						
ANR	439020	Symbol	block -> follow_to -> follow_to		435840						
ANR	439021	Symbol	should_jmp		435840						
ANR	439022	Symbol	IS_TMP_VAR		435840						
ANR	439023	Symbol	op_array -> T		435840						
ANR	439024	Symbol	NULL		435840						
ANR	439025	Symbol	* last_op		435840						
ANR	439026	Symbol	ZEND_JMPZ		435840						
ANR	439027	Symbol	INV_COND		435840						
ANR	439028	Symbol	block -> follow_to -> op1_to		435840						
ANR	439029	Symbol	cfg -> same_t		435840						
ANR	439030	Symbol	ZEND_NOP		435840						
ANR	439031	Symbol	block -> op1_to -> start_opline		435840						
ANR	439032	Symbol	block -> start_opline		435840						
ANR	439033	Symbol	block -> follow_to -> len		435840						
ANR	439034	Symbol	zend_is_true		435840						
ANR	439035	Symbol	next		435840						
ANR	439036	Symbol	block -> op1_to -> sources		435840						
ANR	439037	Symbol	* block -> op1_to		435840						
ANR	439038	Symbol	op_array -> last_var		435840						
ANR	439039	Symbol	block -> next		435840						
ANR	439040	Symbol	* prev		435840						
ANR	439041	Symbol	src -> opcode		435840						
ANR	439042	Symbol	ZEND_RETURN_BY_REF		435840						
ANR	439043	Symbol	target -> op1		435840						
ANR	439044	Symbol	cs -> next		435840						
ANR	439045	Symbol	target_block -> op1_to		435840						
ANR	439046	Symbol	last_op -> opcode		435840						
ANR	439047	Symbol	EXT_TYPE_UNUSED		435840						
ANR	439048	Symbol	* * cs		435840						
ANR	439049	Symbol	target -> result		435840						
ANR	439050	Symbol	can_reorder		435840						
ANR	439051	Symbol	last_op -> op1_type		435840						
ANR	439052	Symbol	src		435840						
ANR	439053	Symbol	blocks		435840						
ANR	439054	Symbol	block -> op1_to -> op2_to		435840						
ANR	439055	Symbol	block -> follow_to		435840						
ANR	439056	Symbol	VAR_SOURCE		435840						
ANR	439057	Symbol	VAR_NUM_EX		435840						
ANR	439058	Symbol	block -> len		435840						
ANR	439059	Symbol	same_var		435840						
ANR	439060	Symbol	* block		435840						
ANR	439061	Symbol	target		435840						
ANR	439062	Symbol	ZEND_OP1_TYPE		435840						
ANR	439063	Symbol	block -> follow_to -> start_opline		435840						
ANR	439064	Symbol	last_op -> op1 . constant		435840						
ANR	439065	Symbol	cfg -> Tsource		435840						
ANR	439066	Symbol	block -> op1_to		435840						
ANR	439067	Symbol	IS_UNUSED		435840						
ANR	439068	Function	zend_t_usage	1793:0:60650:64870							
ANR	439069	FunctionDef	"zend_t_usage (zend_code_block * block , zend_op_array * op_array , zend_bitset used_ext , zend_optimizer_ctx * ctx)"		439068	0					
ANR	439070	CompoundStatement		1794:0:60771:64870	439068	0					
ANR	439071	IdentifierDeclStatement	zend_code_block * next_block = block -> next ;	1795:1:60774:60815	439068	0	True				
ANR	439072	IdentifierDecl	* next_block = block -> next		439068	0					
ANR	439073	IdentifierDeclType	zend_code_block *		439068	0					
ANR	439074	Identifier	next_block		439068	1					
ANR	439075	AssignmentExpression	* next_block = block -> next		439068	2		=			
ANR	439076	Identifier	next_block		439068	0					
ANR	439077	PtrMemberAccess	block -> next		439068	1					
ANR	439078	Identifier	block		439068	0					
ANR	439079	Identifier	next		439068	1					
ANR	439080	IdentifierDeclStatement	uint32_t bitset_len ;	1796:1:60818:60837	439068	1	True				
ANR	439081	IdentifierDecl	bitset_len		439068	0					
ANR	439082	IdentifierDeclType	uint32_t		439068	0					
ANR	439083	Identifier	bitset_len		439068	1					
ANR	439084	IdentifierDeclStatement	zend_bitset usage ;	1797:1:60840:60857	439068	2	True				
ANR	439085	IdentifierDecl	usage		439068	0					
ANR	439086	IdentifierDeclType	zend_bitset		439068	0					
ANR	439087	Identifier	usage		439068	1					
ANR	439088	IdentifierDeclStatement	zend_bitset defined_here ;	1798:1:60860:60884	439068	3	True				
ANR	439089	IdentifierDecl	defined_here		439068	0					
ANR	439090	IdentifierDeclType	zend_bitset		439068	0					
ANR	439091	Identifier	defined_here		439068	1					
ANR	439092	IdentifierDeclStatement	void * checkpoint ;	1799:1:60887:60903	439068	4	True				
ANR	439093	IdentifierDecl	* checkpoint		439068	0					
ANR	439094	IdentifierDeclType	void *		439068	0					
ANR	439095	Identifier	checkpoint		439068	1					
ANR	439096	IfStatement	if ( op_array -> T == 0 )		439068	5					
ANR	439097	Condition	op_array -> T == 0	1801:5:60911:60926	439068	0	True				
ANR	439098	EqualityExpression	op_array -> T == 0		439068	0		==			
ANR	439099	PtrMemberAccess	op_array -> T		439068	0					
ANR	439100	Identifier	op_array		439068	0					
ANR	439101	Identifier	T		439068	1					
ANR	439102	PrimaryExpression	0		439068	1					
ANR	439103	CompoundStatement		8:23:157:157	439068	1					
ANR	439104	ReturnStatement	return ;	1803:2:60976:60982	439068	0	True				
ANR	439105	ExpressionStatement	checkpoint = zend_arena_checkpoint ( ctx -> arena )	1806:1:60989:61035	439068	6	True				
ANR	439106	AssignmentExpression	checkpoint = zend_arena_checkpoint ( ctx -> arena )		439068	0		=			
ANR	439107	Identifier	checkpoint		439068	0					
ANR	439108	CallExpression	zend_arena_checkpoint ( ctx -> arena )		439068	1					
ANR	439109	Callee	zend_arena_checkpoint		439068	0					
ANR	439110	Identifier	zend_arena_checkpoint		439068	0					
ANR	439111	ArgumentList	ctx -> arena		439068	1					
ANR	439112	Argument	ctx -> arena		439068	0					
ANR	439113	PtrMemberAccess	ctx -> arena		439068	0					
ANR	439114	Identifier	ctx		439068	0					
ANR	439115	Identifier	arena		439068	1					
ANR	439116	ExpressionStatement	bitset_len = zend_bitset_len ( op_array -> last_var + op_array -> T )	1807:1:61038:61100	439068	7	True				
ANR	439117	AssignmentExpression	bitset_len = zend_bitset_len ( op_array -> last_var + op_array -> T )		439068	0		=			
ANR	439118	Identifier	bitset_len		439068	0					
ANR	439119	CallExpression	zend_bitset_len ( op_array -> last_var + op_array -> T )		439068	1					
ANR	439120	Callee	zend_bitset_len		439068	0					
ANR	439121	Identifier	zend_bitset_len		439068	0					
ANR	439122	ArgumentList	op_array -> last_var + op_array -> T		439068	1					
ANR	439123	Argument	op_array -> last_var + op_array -> T		439068	0					
ANR	439124	AdditiveExpression	op_array -> last_var + op_array -> T		439068	0		+			
ANR	439125	PtrMemberAccess	op_array -> last_var		439068	0					
ANR	439126	Identifier	op_array		439068	0					
ANR	439127	Identifier	last_var		439068	1					
ANR	439128	PtrMemberAccess	op_array -> T		439068	1					
ANR	439129	Identifier	op_array		439068	0					
ANR	439130	Identifier	T		439068	1					
ANR	439131	ExpressionStatement	"usage = zend_arena_alloc ( & ctx -> arena , bitset_len * ZEND_BITSET_ELM_SIZE )"	1808:1:61103:61175	439068	8	True				
ANR	439132	AssignmentExpression	"usage = zend_arena_alloc ( & ctx -> arena , bitset_len * ZEND_BITSET_ELM_SIZE )"		439068	0		=			
ANR	439133	Identifier	usage		439068	0					
ANR	439134	CallExpression	"zend_arena_alloc ( & ctx -> arena , bitset_len * ZEND_BITSET_ELM_SIZE )"		439068	1					
ANR	439135	Callee	zend_arena_alloc		439068	0					
ANR	439136	Identifier	zend_arena_alloc		439068	0					
ANR	439137	ArgumentList	& ctx -> arena		439068	1					
ANR	439138	Argument	& ctx -> arena		439068	0					
ANR	439139	UnaryOperationExpression	& ctx -> arena		439068	0					
ANR	439140	UnaryOperator	&		439068	0					
ANR	439141	PtrMemberAccess	ctx -> arena		439068	1					
ANR	439142	Identifier	ctx		439068	0					
ANR	439143	Identifier	arena		439068	1					
ANR	439144	Argument	bitset_len * ZEND_BITSET_ELM_SIZE		439068	1					
ANR	439145	MultiplicativeExpression	bitset_len * ZEND_BITSET_ELM_SIZE		439068	0		*			
ANR	439146	Identifier	bitset_len		439068	0					
ANR	439147	Identifier	ZEND_BITSET_ELM_SIZE		439068	1					
ANR	439148	ExpressionStatement	"zend_bitset_clear ( usage , bitset_len )"	1809:1:61178:61214	439068	9	True				
ANR	439149	CallExpression	"zend_bitset_clear ( usage , bitset_len )"		439068	0					
ANR	439150	Callee	zend_bitset_clear		439068	0					
ANR	439151	Identifier	zend_bitset_clear		439068	0					
ANR	439152	ArgumentList	usage		439068	1					
ANR	439153	Argument	usage		439068	0					
ANR	439154	Identifier	usage		439068	0					
ANR	439155	Argument	bitset_len		439068	1					
ANR	439156	Identifier	bitset_len		439068	0					
ANR	439157	ExpressionStatement	"defined_here = zend_arena_alloc ( & ctx -> arena , bitset_len * ZEND_BITSET_ELM_SIZE )"	1810:1:61217:61296	439068	10	True				
ANR	439158	AssignmentExpression	"defined_here = zend_arena_alloc ( & ctx -> arena , bitset_len * ZEND_BITSET_ELM_SIZE )"		439068	0		=			
ANR	439159	Identifier	defined_here		439068	0					
ANR	439160	CallExpression	"zend_arena_alloc ( & ctx -> arena , bitset_len * ZEND_BITSET_ELM_SIZE )"		439068	1					
ANR	439161	Callee	zend_arena_alloc		439068	0					
ANR	439162	Identifier	zend_arena_alloc		439068	0					
ANR	439163	ArgumentList	& ctx -> arena		439068	1					
ANR	439164	Argument	& ctx -> arena		439068	0					
ANR	439165	UnaryOperationExpression	& ctx -> arena		439068	0					
ANR	439166	UnaryOperator	&		439068	0					
ANR	439167	PtrMemberAccess	ctx -> arena		439068	1					
ANR	439168	Identifier	ctx		439068	0					
ANR	439169	Identifier	arena		439068	1					
ANR	439170	Argument	bitset_len * ZEND_BITSET_ELM_SIZE		439068	1					
ANR	439171	MultiplicativeExpression	bitset_len * ZEND_BITSET_ELM_SIZE		439068	0		*			
ANR	439172	Identifier	bitset_len		439068	0					
ANR	439173	Identifier	ZEND_BITSET_ELM_SIZE		439068	1					
ANR	439174	WhileStatement	while ( next_block )		439068	11					
ANR	439175	Condition	next_block	1812:8:61307:61316	439068	0	True				
ANR	439176	Identifier	next_block		439068	0					
ANR	439177	CompoundStatement		21:2:597:636	439068	1					
ANR	439178	IdentifierDeclStatement	zend_op * opline = next_block -> start_opline ;	1813:2:61323:61365	439068	0	True				
ANR	439179	IdentifierDecl	* opline = next_block -> start_opline		439068	0					
ANR	439180	IdentifierDeclType	zend_op *		439068	0					
ANR	439181	Identifier	opline		439068	1					
ANR	439182	AssignmentExpression	* opline = next_block -> start_opline		439068	2		=			
ANR	439183	Identifier	opline		439068	0					
ANR	439184	PtrMemberAccess	next_block -> start_opline		439068	1					
ANR	439185	Identifier	next_block		439068	0					
ANR	439186	Identifier	start_opline		439068	1					
ANR	439187	IdentifierDeclStatement	zend_op * end = opline + next_block -> len ;	1814:2:61369:61408	439068	1	True				
ANR	439188	IdentifierDecl	* end = opline + next_block -> len		439068	0					
ANR	439189	IdentifierDeclType	zend_op *		439068	0					
ANR	439190	Identifier	end		439068	1					
ANR	439191	AssignmentExpression	* end = opline + next_block -> len		439068	2		=			
ANR	439192	Identifier	end		439068	0					
ANR	439193	AdditiveExpression	opline + next_block -> len		439068	1		+			
ANR	439194	Identifier	opline		439068	0					
ANR	439195	PtrMemberAccess	next_block -> len		439068	1					
ANR	439196	Identifier	next_block		439068	0					
ANR	439197	Identifier	len		439068	1					
ANR	439198	IfStatement	if ( ! next_block -> access )		439068	2					
ANR	439199	Condition	! next_block -> access	1816:6:61417:61435	439068	0	True				
ANR	439200	UnaryOperationExpression	! next_block -> access		439068	0					
ANR	439201	UnaryOperator	!		439068	0					
ANR	439202	PtrMemberAccess	next_block -> access		439068	1					
ANR	439203	Identifier	next_block		439068	0					
ANR	439204	Identifier	access		439068	1					
ANR	439205	CompoundStatement		23:27:666:666	439068	1					
ANR	439206	ExpressionStatement	next_block = next_block -> next	1817:3:61443:61472	439068	0	True				
ANR	439207	AssignmentExpression	next_block = next_block -> next		439068	0		=			
ANR	439208	Identifier	next_block		439068	0					
ANR	439209	PtrMemberAccess	next_block -> next		439068	1					
ANR	439210	Identifier	next_block		439068	0					
ANR	439211	Identifier	next		439068	1					
ANR	439212	ContinueStatement	continue ;	1818:3:61477:61485	439068	1	True				
ANR	439213	ExpressionStatement	"zend_bitset_clear ( defined_here , bitset_len )"	1820:2:61493:61536	439068	3	True				
ANR	439214	CallExpression	"zend_bitset_clear ( defined_here , bitset_len )"		439068	0					
ANR	439215	Callee	zend_bitset_clear		439068	0					
ANR	439216	Identifier	zend_bitset_clear		439068	0					
ANR	439217	ArgumentList	defined_here		439068	1					
ANR	439218	Argument	defined_here		439068	0					
ANR	439219	Identifier	defined_here		439068	0					
ANR	439220	Argument	bitset_len		439068	1					
ANR	439221	Identifier	bitset_len		439068	0					
ANR	439222	WhileStatement	while ( opline < end )		439068	4					
ANR	439223	Condition	opline < end	1822:9:61548:61557	439068	0	True				
ANR	439224	RelationalExpression	opline < end		439068	0		<			
ANR	439225	Identifier	opline		439068	0					
ANR	439226	Identifier	end		439068	1					
ANR	439227	CompoundStatement		29:21:788:788	439068	1					
ANR	439228	ExpressionStatement	T_USAGE ( opline -> op1 )	1823:3:61565:61585	439068	0	True				
ANR	439229	CallExpression	T_USAGE ( opline -> op1 )		439068	0					
ANR	439230	Callee	T_USAGE		439068	0					
ANR	439231	Identifier	T_USAGE		439068	0					
ANR	439232	ArgumentList	opline -> op1		439068	1					
ANR	439233	Argument	opline -> op1		439068	0					
ANR	439234	PtrMemberAccess	opline -> op1		439068	0					
ANR	439235	Identifier	opline		439068	0					
ANR	439236	Identifier	op1		439068	1					
ANR	439237	IfStatement	if ( opline -> op2_type & ( IS_VAR | IS_TMP_VAR ) )		439068	1					
ANR	439238	Condition	opline -> op2_type & ( IS_VAR | IS_TMP_VAR )	1824:7:61594:61633	439068	0	True				
ANR	439239	BitAndExpression	opline -> op2_type & ( IS_VAR | IS_TMP_VAR )		439068	0		&			
ANR	439240	PtrMemberAccess	opline -> op2_type		439068	0					
ANR	439241	Identifier	opline		439068	0					
ANR	439242	Identifier	op2_type		439068	1					
ANR	439243	InclusiveOrExpression	IS_VAR | IS_TMP_VAR		439068	1		|			
ANR	439244	Identifier	IS_VAR		439068	0					
ANR	439245	Identifier	IS_TMP_VAR		439068	1					
ANR	439246	CompoundStatement		31:49:864:864	439068	1					
ANR	439247	IfStatement	if ( opline -> opcode == ZEND_FE_FETCH_R || opline -> opcode == ZEND_FE_FETCH_RW )		439068	0					
ANR	439248	Condition	opline -> opcode == ZEND_FE_FETCH_R || opline -> opcode == ZEND_FE_FETCH_RW	1825:8:61646:61716	439068	0	True				
ANR	439249	OrExpression	opline -> opcode == ZEND_FE_FETCH_R || opline -> opcode == ZEND_FE_FETCH_RW		439068	0		||			
ANR	439250	EqualityExpression	opline -> opcode == ZEND_FE_FETCH_R		439068	0		==			
ANR	439251	PtrMemberAccess	opline -> opcode		439068	0					
ANR	439252	Identifier	opline		439068	0					
ANR	439253	Identifier	opcode		439068	1					
ANR	439254	Identifier	ZEND_FE_FETCH_R		439068	1					
ANR	439255	EqualityExpression	opline -> opcode == ZEND_FE_FETCH_RW		439068	1		==			
ANR	439256	PtrMemberAccess	opline -> opcode		439068	0					
ANR	439257	Identifier	opline		439068	0					
ANR	439258	Identifier	opcode		439068	1					
ANR	439259	Identifier	ZEND_FE_FETCH_RW		439068	1					
ANR	439260	CompoundStatement		32:81:947:947	439068	1					
ANR	439261	ExpressionStatement	"zend_bitset_incl ( defined_here , VAR_NUM ( ZEND_OP2 ( opline ) . var ) )"	1827:5:61772:61833	439068	0	True				
ANR	439262	CallExpression	"zend_bitset_incl ( defined_here , VAR_NUM ( ZEND_OP2 ( opline ) . var ) )"		439068	0					
ANR	439263	Callee	zend_bitset_incl		439068	0					
ANR	439264	Identifier	zend_bitset_incl		439068	0					
ANR	439265	ArgumentList	defined_here		439068	1					
ANR	439266	Argument	defined_here		439068	0					
ANR	439267	Identifier	defined_here		439068	0					
ANR	439268	Argument	VAR_NUM ( ZEND_OP2 ( opline ) . var )		439068	1					
ANR	439269	CallExpression	VAR_NUM ( ZEND_OP2 ( opline ) . var )		439068	0					
ANR	439270	Callee	VAR_NUM		439068	0					
ANR	439271	Identifier	VAR_NUM		439068	0					
ANR	439272	ArgumentList	ZEND_OP2 ( opline ) . var		439068	1					
ANR	439273	Argument	ZEND_OP2 ( opline ) . var		439068	0					
ANR	439274	MemberAccess	ZEND_OP2 ( opline ) . var		439068	0					
ANR	439275	CallExpression	ZEND_OP2 ( opline )		439068	0					
ANR	439276	Callee	ZEND_OP2		439068	0					
ANR	439277	Identifier	ZEND_OP2		439068	0					
ANR	439278	ArgumentList	opline		439068	1					
ANR	439279	Argument	opline		439068	0					
ANR	439280	Identifier	opline		439068	0					
ANR	439281	Identifier	var		439068	1					
ANR	439282	ElseStatement	else		439068	0					
ANR	439283	CompoundStatement		35:11:1074:1074	439068	0					
ANR	439284	ExpressionStatement	T_USAGE ( opline -> op2 )	1829:5:61853:61873	439068	0	True				
ANR	439285	CallExpression	T_USAGE ( opline -> op2 )		439068	0					
ANR	439286	Callee	T_USAGE		439068	0					
ANR	439287	Identifier	T_USAGE		439068	0					
ANR	439288	ArgumentList	opline -> op2		439068	1					
ANR	439289	Argument	opline -> op2		439068	0					
ANR	439290	PtrMemberAccess	opline -> op2		439068	0					
ANR	439291	Identifier	opline		439068	0					
ANR	439292	Identifier	op2		439068	1					
ANR	439293	IfStatement	if ( RESULT_USED ( opline ) )		439068	2					
ANR	439294	Condition	RESULT_USED ( opline )	1833:7:61894:61912	439068	0	True				
ANR	439295	CallExpression	RESULT_USED ( opline )		439068	0					
ANR	439296	Callee	RESULT_USED		439068	0					
ANR	439297	Identifier	RESULT_USED		439068	0					
ANR	439298	ArgumentList	opline		439068	1					
ANR	439299	Argument	opline		439068	0					
ANR	439300	Identifier	opline		439068	0					
ANR	439301	CompoundStatement		40:28:1143:1143	439068	1					
ANR	439302	IfStatement	"if ( ! zend_bitset_in ( defined_here , VAR_NUM ( ZEND_RESULT ( opline ) . var ) ) && ! zend_bitset_in ( used_ext , VAR_NUM ( ZEND_RESULT ( opline ) . var ) ) && opline -> opcode == ZEND_ADD_ARRAY_ELEMENT )"		439068	0					
ANR	439303	Condition	"! zend_bitset_in ( defined_here , VAR_NUM ( ZEND_RESULT ( opline ) . var ) ) && ! zend_bitset_in ( used_ext , VAR_NUM ( ZEND_RESULT ( opline ) . var ) ) && opline -> opcode == ZEND_ADD_ARRAY_ELEMENT"	1834:8:61925:62099	439068	0	True				
ANR	439304	AndExpression	"! zend_bitset_in ( defined_here , VAR_NUM ( ZEND_RESULT ( opline ) . var ) ) && ! zend_bitset_in ( used_ext , VAR_NUM ( ZEND_RESULT ( opline ) . var ) ) && opline -> opcode == ZEND_ADD_ARRAY_ELEMENT"		439068	0		&&			
ANR	439305	UnaryOperationExpression	"! zend_bitset_in ( defined_here , VAR_NUM ( ZEND_RESULT ( opline ) . var ) )"		439068	0					
ANR	439306	UnaryOperator	!		439068	0					
ANR	439307	CallExpression	"zend_bitset_in ( defined_here , VAR_NUM ( ZEND_RESULT ( opline ) . var ) )"		439068	1					
ANR	439308	Callee	zend_bitset_in		439068	0					
ANR	439309	Identifier	zend_bitset_in		439068	0					
ANR	439310	ArgumentList	defined_here		439068	1					
ANR	439311	Argument	defined_here		439068	0					
ANR	439312	Identifier	defined_here		439068	0					
ANR	439313	Argument	VAR_NUM ( ZEND_RESULT ( opline ) . var )		439068	1					
ANR	439314	CallExpression	VAR_NUM ( ZEND_RESULT ( opline ) . var )		439068	0					
ANR	439315	Callee	VAR_NUM		439068	0					
ANR	439316	Identifier	VAR_NUM		439068	0					
ANR	439317	ArgumentList	ZEND_RESULT ( opline ) . var		439068	1					
ANR	439318	Argument	ZEND_RESULT ( opline ) . var		439068	0					
ANR	439319	MemberAccess	ZEND_RESULT ( opline ) . var		439068	0					
ANR	439320	CallExpression	ZEND_RESULT ( opline )		439068	0					
ANR	439321	Callee	ZEND_RESULT		439068	0					
ANR	439322	Identifier	ZEND_RESULT		439068	0					
ANR	439323	ArgumentList	opline		439068	1					
ANR	439324	Argument	opline		439068	0					
ANR	439325	Identifier	opline		439068	0					
ANR	439326	Identifier	var		439068	1					
ANR	439327	AndExpression	"! zend_bitset_in ( used_ext , VAR_NUM ( ZEND_RESULT ( opline ) . var ) ) && opline -> opcode == ZEND_ADD_ARRAY_ELEMENT"		439068	1		&&			
ANR	439328	UnaryOperationExpression	"! zend_bitset_in ( used_ext , VAR_NUM ( ZEND_RESULT ( opline ) . var ) )"		439068	0					
ANR	439329	UnaryOperator	!		439068	0					
ANR	439330	CallExpression	"zend_bitset_in ( used_ext , VAR_NUM ( ZEND_RESULT ( opline ) . var ) )"		439068	1					
ANR	439331	Callee	zend_bitset_in		439068	0					
ANR	439332	Identifier	zend_bitset_in		439068	0					
ANR	439333	ArgumentList	used_ext		439068	1					
ANR	439334	Argument	used_ext		439068	0					
ANR	439335	Identifier	used_ext		439068	0					
ANR	439336	Argument	VAR_NUM ( ZEND_RESULT ( opline ) . var )		439068	1					
ANR	439337	CallExpression	VAR_NUM ( ZEND_RESULT ( opline ) . var )		439068	0					
ANR	439338	Callee	VAR_NUM		439068	0					
ANR	439339	Identifier	VAR_NUM		439068	0					
ANR	439340	ArgumentList	ZEND_RESULT ( opline ) . var		439068	1					
ANR	439341	Argument	ZEND_RESULT ( opline ) . var		439068	0					
ANR	439342	MemberAccess	ZEND_RESULT ( opline ) . var		439068	0					
ANR	439343	CallExpression	ZEND_RESULT ( opline )		439068	0					
ANR	439344	Callee	ZEND_RESULT		439068	0					
ANR	439345	Identifier	ZEND_RESULT		439068	0					
ANR	439346	ArgumentList	opline		439068	1					
ANR	439347	Argument	opline		439068	0					
ANR	439348	Identifier	opline		439068	0					
ANR	439349	Identifier	var		439068	1					
ANR	439350	EqualityExpression	opline -> opcode == ZEND_ADD_ARRAY_ELEMENT		439068	1		==			
ANR	439351	PtrMemberAccess	opline -> opcode		439068	0					
ANR	439352	Identifier	opline		439068	0					
ANR	439353	Identifier	opcode		439068	1					
ANR	439354	Identifier	ZEND_ADD_ARRAY_ELEMENT		439068	1					
ANR	439355	CompoundStatement		42:47:1330:1330	439068	1					
ANR	439356	ExpressionStatement	"zend_bitset_incl ( used_ext , VAR_NUM ( ZEND_RESULT ( opline ) . var ) )"	1837:5:62160:62220	439068	0	True				
ANR	439357	CallExpression	"zend_bitset_incl ( used_ext , VAR_NUM ( ZEND_RESULT ( opline ) . var ) )"		439068	0					
ANR	439358	Callee	zend_bitset_incl		439068	0					
ANR	439359	Identifier	zend_bitset_incl		439068	0					
ANR	439360	ArgumentList	used_ext		439068	1					
ANR	439361	Argument	used_ext		439068	0					
ANR	439362	Identifier	used_ext		439068	0					
ANR	439363	Argument	VAR_NUM ( ZEND_RESULT ( opline ) . var )		439068	1					
ANR	439364	CallExpression	VAR_NUM ( ZEND_RESULT ( opline ) . var )		439068	0					
ANR	439365	Callee	VAR_NUM		439068	0					
ANR	439366	Identifier	VAR_NUM		439068	0					
ANR	439367	ArgumentList	ZEND_RESULT ( opline ) . var		439068	1					
ANR	439368	Argument	ZEND_RESULT ( opline ) . var		439068	0					
ANR	439369	MemberAccess	ZEND_RESULT ( opline ) . var		439068	0					
ANR	439370	CallExpression	ZEND_RESULT ( opline )		439068	0					
ANR	439371	Callee	ZEND_RESULT		439068	0					
ANR	439372	Identifier	ZEND_RESULT		439068	0					
ANR	439373	ArgumentList	opline		439068	1					
ANR	439374	Argument	opline		439068	0					
ANR	439375	Identifier	opline		439068	0					
ANR	439376	Identifier	var		439068	1					
ANR	439377	ExpressionStatement	"zend_bitset_incl ( defined_here , VAR_NUM ( ZEND_RESULT ( opline ) . var ) )"	1839:4:62232:62296	439068	1	True				
ANR	439378	CallExpression	"zend_bitset_incl ( defined_here , VAR_NUM ( ZEND_RESULT ( opline ) . var ) )"		439068	0					
ANR	439379	Callee	zend_bitset_incl		439068	0					
ANR	439380	Identifier	zend_bitset_incl		439068	0					
ANR	439381	ArgumentList	defined_here		439068	1					
ANR	439382	Argument	defined_here		439068	0					
ANR	439383	Identifier	defined_here		439068	0					
ANR	439384	Argument	VAR_NUM ( ZEND_RESULT ( opline ) . var )		439068	1					
ANR	439385	CallExpression	VAR_NUM ( ZEND_RESULT ( opline ) . var )		439068	0					
ANR	439386	Callee	VAR_NUM		439068	0					
ANR	439387	Identifier	VAR_NUM		439068	0					
ANR	439388	ArgumentList	ZEND_RESULT ( opline ) . var		439068	1					
ANR	439389	Argument	ZEND_RESULT ( opline ) . var		439068	0					
ANR	439390	MemberAccess	ZEND_RESULT ( opline ) . var		439068	0					
ANR	439391	CallExpression	ZEND_RESULT ( opline )		439068	0					
ANR	439392	Callee	ZEND_RESULT		439068	0					
ANR	439393	Identifier	ZEND_RESULT		439068	0					
ANR	439394	ArgumentList	opline		439068	1					
ANR	439395	Argument	opline		439068	0					
ANR	439396	Identifier	opline		439068	0					
ANR	439397	Identifier	var		439068	1					
ANR	439398	ExpressionStatement	opline ++	1841:3:62306:62314	439068	3	True				
ANR	439399	PostIncDecOperationExpression	opline ++		439068	0					
ANR	439400	Identifier	opline		439068	0					
ANR	439401	IncDec	++		439068	1					
ANR	439402	ExpressionStatement	next_block = next_block -> next	1843:2:62322:62351	439068	5	True				
ANR	439403	AssignmentExpression	next_block = next_block -> next		439068	0		=			
ANR	439404	Identifier	next_block		439068	0					
ANR	439405	PtrMemberAccess	next_block -> next		439068	1					
ANR	439406	Identifier	next_block		439068	0					
ANR	439407	Identifier	next		439068	1					
ANR	439408	CompoundStatement		55:2:1610:1615	439068	12					
ANR	439409	IdentifierDeclStatement	int i ;	1848:2:62382:62387	439068	0	True				
ANR	439410	IdentifierDecl	i		439068	0					
ANR	439411	IdentifierDeclType	int		439068	0					
ANR	439412	Identifier	i		439068	1					
ANR	439413	ForStatement	for ( i = op_array -> last_var ; i < op_array -> T ; i ++ )		439068	1					
ANR	439414	ForInit	i = op_array -> last_var ;	1849:7:62396:62418	439068	0	True				
ANR	439415	AssignmentExpression	i = op_array -> last_var		439068	0		=			
ANR	439416	Identifier	i		439068	0					
ANR	439417	PtrMemberAccess	op_array -> last_var		439068	1					
ANR	439418	Identifier	op_array		439068	0					
ANR	439419	Identifier	last_var		439068	1					
ANR	439420	Condition	i < op_array -> T	1849:31:62420:62433	439068	1	True				
ANR	439421	RelationalExpression	i < op_array -> T		439068	0		<			
ANR	439422	Identifier	i		439068	0					
ANR	439423	PtrMemberAccess	op_array -> T		439068	1					
ANR	439424	Identifier	op_array		439068	0					
ANR	439425	Identifier	T		439068	1					
ANR	439426	PostIncDecOperationExpression	i ++	1849:47:62436:62438	439068	2	True				
ANR	439427	Identifier	i		439068	0					
ANR	439428	IncDec	++		439068	1					
ANR	439429	CompoundStatement		56:52:1669:1669	439068	3					
ANR	439430	ExpressionStatement	"fprintf ( stderr , ""T%d: %c\\n"" , i , zend_bitset_in ( used_ext , i ) + '0' )"	1850:3:62446:62512	439068	0	True				
ANR	439431	CallExpression	"fprintf ( stderr , ""T%d: %c\\n"" , i , zend_bitset_in ( used_ext , i ) + '0' )"		439068	0					
ANR	439432	Callee	fprintf		439068	0					
ANR	439433	Identifier	fprintf		439068	0					
ANR	439434	ArgumentList	stderr		439068	1					
ANR	439435	Argument	stderr		439068	0					
ANR	439436	Identifier	stderr		439068	0					
ANR	439437	Argument	"""T%d: %c\\n"""		439068	1					
ANR	439438	PrimaryExpression	"""T%d: %c\\n"""		439068	0					
ANR	439439	Argument	i		439068	2					
ANR	439440	Identifier	i		439068	0					
ANR	439441	Argument	"zend_bitset_in ( used_ext , i ) + '0'"		439068	3					
ANR	439442	AdditiveExpression	"zend_bitset_in ( used_ext , i ) + '0'"		439068	0		+			
ANR	439443	CallExpression	"zend_bitset_in ( used_ext , i )"		439068	0					
ANR	439444	Callee	zend_bitset_in		439068	0					
ANR	439445	Identifier	zend_bitset_in		439068	0					
ANR	439446	ArgumentList	used_ext		439068	1					
ANR	439447	Argument	used_ext		439068	0					
ANR	439448	Identifier	used_ext		439068	0					
ANR	439449	Argument	i		439068	1					
ANR	439450	Identifier	i		439068	0					
ANR	439451	PrimaryExpression	'0'		439068	1					
ANR	439452	WhileStatement	while ( block )		439068	13					
ANR	439453	Condition	block	1855:8:62537:62541	439068	0	True				
ANR	439454	Identifier	block		439068	0					
ANR	439455	CompoundStatement		63:2:1776:1830	439068	1					
ANR	439456	IdentifierDeclStatement	zend_op * opline = block -> start_opline + block -> len - 1 ;	1856:2:62548:62602	439068	0	True				
ANR	439457	IdentifierDecl	* opline = block -> start_opline + block -> len - 1		439068	0					
ANR	439458	IdentifierDeclType	zend_op *		439068	0					
ANR	439459	Identifier	opline		439068	1					
ANR	439460	AssignmentExpression	* opline = block -> start_opline + block -> len - 1		439068	2		=			
ANR	439461	Identifier	opline		439068	0					
ANR	439462	AdditiveExpression	block -> start_opline + block -> len - 1		439068	1		+			
ANR	439463	PtrMemberAccess	block -> start_opline		439068	0					
ANR	439464	Identifier	block		439068	0					
ANR	439465	Identifier	start_opline		439068	1					
ANR	439466	AdditiveExpression	block -> len - 1		439068	1		-			
ANR	439467	PtrMemberAccess	block -> len		439068	0					
ANR	439468	Identifier	block		439068	0					
ANR	439469	Identifier	len		439068	1					
ANR	439470	PrimaryExpression	1		439068	1					
ANR	439471	IfStatement	if ( ! block -> access )		439068	1					
ANR	439472	Condition	! block -> access	1858:6:62611:62624	439068	0	True				
ANR	439473	UnaryOperationExpression	! block -> access		439068	0					
ANR	439474	UnaryOperator	!		439068	0					
ANR	439475	PtrMemberAccess	block -> access		439068	1					
ANR	439476	Identifier	block		439068	0					
ANR	439477	Identifier	access		439068	1					
ANR	439478	CompoundStatement		65:22:1855:1855	439068	1					
ANR	439479	ExpressionStatement	block = block -> next	1859:3:62632:62651	439068	0	True				
ANR	439480	AssignmentExpression	block = block -> next		439068	0		=			
ANR	439481	Identifier	block		439068	0					
ANR	439482	PtrMemberAccess	block -> next		439068	1					
ANR	439483	Identifier	block		439068	0					
ANR	439484	Identifier	next		439068	1					
ANR	439485	ContinueStatement	continue ;	1860:3:62656:62664	439068	1	True				
ANR	439486	ExpressionStatement	"zend_bitset_copy ( usage , used_ext , bitset_len )"	1863:2:62673:62718	439068	2	True				
ANR	439487	CallExpression	"zend_bitset_copy ( usage , used_ext , bitset_len )"		439068	0					
ANR	439488	Callee	zend_bitset_copy		439068	0					
ANR	439489	Identifier	zend_bitset_copy		439068	0					
ANR	439490	ArgumentList	usage		439068	1					
ANR	439491	Argument	usage		439068	0					
ANR	439492	Identifier	usage		439068	0					
ANR	439493	Argument	used_ext		439068	1					
ANR	439494	Identifier	used_ext		439068	0					
ANR	439495	Argument	bitset_len		439068	2					
ANR	439496	Identifier	bitset_len		439068	0					
ANR	439497	WhileStatement	while ( opline >= block -> start_opline )		439068	3					
ANR	439498	Condition	opline >= block -> start_opline	1865:9:62730:62758	439068	0	True				
ANR	439499	RelationalExpression	opline >= block -> start_opline		439068	0		>=			
ANR	439500	Identifier	opline		439068	0					
ANR	439501	PtrMemberAccess	block -> start_opline		439068	1					
ANR	439502	Identifier	block		439068	0					
ANR	439503	Identifier	start_opline		439068	1					
ANR	439504	CompoundStatement		72:40:1989:1989	439068	1					
ANR	439505	IfStatement	if ( RES_NEVER_USED ( opline ) )		439068	0					
ANR	439506	Condition	RES_NEVER_USED ( opline )	1867:7:62792:62813	439068	0	True				
ANR	439507	CallExpression	RES_NEVER_USED ( opline )		439068	0					
ANR	439508	Callee	RES_NEVER_USED		439068	0					
ANR	439509	Identifier	RES_NEVER_USED		439068	0					
ANR	439510	ArgumentList	opline		439068	1					
ANR	439511	Argument	opline		439068	0					
ANR	439512	Identifier	opline		439068	0					
ANR	439513	CompoundStatement		74:31:2044:2044	439068	1					
ANR	439514	SwitchStatement	switch ( opline -> opcode )		439068	0					
ANR	439515	Condition	opline -> opcode	1868:12:62830:62843	439068	0	True				
ANR	439516	PtrMemberAccess	opline -> opcode		439068	0					
ANR	439517	Identifier	opline		439068	0					
ANR	439518	Identifier	opcode		439068	1					
ANR	439519	CompoundStatement		75:28:2074:2074	439068	1					
ANR	439520	Label	case ZEND_ASSIGN_ADD :	1869:5:62853:62873	439068	0	True				
ANR	439521	Identifier	ZEND_ASSIGN_ADD		439068	0					
ANR	439522	Label	case ZEND_ASSIGN_SUB :	1870:5:62880:62900	439068	1	True				
ANR	439523	Identifier	ZEND_ASSIGN_SUB		439068	0					
ANR	439524	Label	case ZEND_ASSIGN_MUL :	1871:5:62907:62927	439068	2	True				
ANR	439525	Identifier	ZEND_ASSIGN_MUL		439068	0					
ANR	439526	Label	case ZEND_ASSIGN_DIV :	1872:5:62934:62954	439068	3	True				
ANR	439527	Identifier	ZEND_ASSIGN_DIV		439068	0					
ANR	439528	Label	case ZEND_ASSIGN_POW :	1873:5:62961:62981	439068	4	True				
ANR	439529	Identifier	ZEND_ASSIGN_POW		439068	0					
ANR	439530	Label	case ZEND_ASSIGN_MOD :	1874:5:62988:63008	439068	5	True				
ANR	439531	Identifier	ZEND_ASSIGN_MOD		439068	0					
ANR	439532	Label	case ZEND_ASSIGN_SL :	1875:5:63015:63034	439068	6	True				
ANR	439533	Identifier	ZEND_ASSIGN_SL		439068	0					
ANR	439534	Label	case ZEND_ASSIGN_SR :	1876:5:63041:63060	439068	7	True				
ANR	439535	Identifier	ZEND_ASSIGN_SR		439068	0					
ANR	439536	Label	case ZEND_ASSIGN_CONCAT :	1877:5:63067:63090	439068	8	True				
ANR	439537	Identifier	ZEND_ASSIGN_CONCAT		439068	0					
ANR	439538	Label	case ZEND_ASSIGN_BW_OR :	1878:5:63097:63119	439068	9	True				
ANR	439539	Identifier	ZEND_ASSIGN_BW_OR		439068	0					
ANR	439540	Label	case ZEND_ASSIGN_BW_AND :	1879:5:63126:63149	439068	10	True				
ANR	439541	Identifier	ZEND_ASSIGN_BW_AND		439068	0					
ANR	439542	Label	case ZEND_ASSIGN_BW_XOR :	1880:5:63156:63179	439068	11	True				
ANR	439543	Identifier	ZEND_ASSIGN_BW_XOR		439068	0					
ANR	439544	Label	case ZEND_PRE_INC :	1881:5:63186:63203	439068	12	True				
ANR	439545	Identifier	ZEND_PRE_INC		439068	0					
ANR	439546	Label	case ZEND_PRE_DEC :	1882:5:63210:63227	439068	13	True				
ANR	439547	Identifier	ZEND_PRE_DEC		439068	0					
ANR	439548	Label	case ZEND_POST_INC :	1883:5:63234:63252	439068	14	True				
ANR	439549	Identifier	ZEND_POST_INC		439068	0					
ANR	439550	Label	case ZEND_POST_DEC :	1884:5:63259:63277	439068	15	True				
ANR	439551	Identifier	ZEND_POST_DEC		439068	0					
ANR	439552	Label	case ZEND_ASSIGN :	1885:5:63284:63300	439068	16	True				
ANR	439553	Identifier	ZEND_ASSIGN		439068	0					
ANR	439554	Label	case ZEND_ASSIGN_REF :	1886:5:63307:63327	439068	17	True				
ANR	439555	Identifier	ZEND_ASSIGN_REF		439068	0					
ANR	439556	Label	case ZEND_DO_FCALL :	1887:5:63334:63352	439068	18	True				
ANR	439557	Identifier	ZEND_DO_FCALL		439068	0					
ANR	439558	Label	case ZEND_DO_ICALL :	1888:5:63359:63377	439068	19	True				
ANR	439559	Identifier	ZEND_DO_ICALL		439068	0					
ANR	439560	Label	case ZEND_DO_UCALL :	1889:5:63384:63402	439068	20	True				
ANR	439561	Identifier	ZEND_DO_UCALL		439068	0					
ANR	439562	Label	case ZEND_DO_FCALL_BY_NAME :	1890:5:63409:63435	439068	21	True				
ANR	439563	Identifier	ZEND_DO_FCALL_BY_NAME		439068	0					
ANR	439564	IfStatement	if ( ZEND_RESULT_TYPE ( opline ) == IS_VAR )		439068	22					
ANR	439565	Condition	ZEND_RESULT_TYPE ( opline ) == IS_VAR	1891:10:63447:63480	439068	0	True				
ANR	439566	EqualityExpression	ZEND_RESULT_TYPE ( opline ) == IS_VAR		439068	0		==			
ANR	439567	CallExpression	ZEND_RESULT_TYPE ( opline )		439068	0					
ANR	439568	Callee	ZEND_RESULT_TYPE		439068	0					
ANR	439569	Identifier	ZEND_RESULT_TYPE		439068	0					
ANR	439570	ArgumentList	opline		439068	1					
ANR	439571	Argument	opline		439068	0					
ANR	439572	Identifier	opline		439068	0					
ANR	439573	Identifier	IS_VAR		439068	1					
ANR	439574	CompoundStatement		98:46:2711:2711	439068	1					
ANR	439575	ExpressionStatement	ZEND_RESULT_TYPE ( opline ) |= EXT_TYPE_UNUSED	1892:7:63492:63535	439068	0	True				
ANR	439576	AssignmentExpression	ZEND_RESULT_TYPE ( opline ) |= EXT_TYPE_UNUSED		439068	0		|=			
ANR	439577	CallExpression	ZEND_RESULT_TYPE ( opline )		439068	0					
ANR	439578	Callee	ZEND_RESULT_TYPE		439068	0					
ANR	439579	Identifier	ZEND_RESULT_TYPE		439068	0					
ANR	439580	ArgumentList	opline		439068	1					
ANR	439581	Argument	opline		439068	0					
ANR	439582	Identifier	opline		439068	0					
ANR	439583	Identifier	EXT_TYPE_UNUSED		439068	1					
ANR	439584	BreakStatement	break ;	1894:6:63551:63556	439068	23	True				
ANR	439585	Label	case ZEND_QM_ASSIGN :	1895:5:63563:63582	439068	24	True				
ANR	439586	Identifier	ZEND_QM_ASSIGN		439068	0					
ANR	439587	Label	case ZEND_BOOL :	1896:5:63589:63603	439068	25	True				
ANR	439588	Identifier	ZEND_BOOL		439068	0					
ANR	439589	Label	case ZEND_BOOL_NOT :	1897:5:63610:63628	439068	26	True				
ANR	439590	Identifier	ZEND_BOOL_NOT		439068	0					
ANR	439591	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_CONST )		439068	27					
ANR	439592	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST	1898:10:63640:63672	439068	0	True				
ANR	439593	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		439068	0		==			
ANR	439594	CallExpression	ZEND_OP1_TYPE ( opline )		439068	0					
ANR	439595	Callee	ZEND_OP1_TYPE		439068	0					
ANR	439596	Identifier	ZEND_OP1_TYPE		439068	0					
ANR	439597	ArgumentList	opline		439068	1					
ANR	439598	Argument	opline		439068	0					
ANR	439599	Identifier	opline		439068	0					
ANR	439600	Identifier	IS_CONST		439068	1					
ANR	439601	CompoundStatement		105:45:2903:2903	439068	1					
ANR	439602	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )	1899:7:63684:63723	439068	0	True				
ANR	439603	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )		439068	0					
ANR	439604	Callee	literal_dtor		439068	0					
ANR	439605	Identifier	literal_dtor		439068	0					
ANR	439606	ArgumentList	& ZEND_OP1_LITERAL ( opline )		439068	1					
ANR	439607	Argument	& ZEND_OP1_LITERAL ( opline )		439068	0					
ANR	439608	UnaryOperationExpression	& ZEND_OP1_LITERAL ( opline )		439068	0					
ANR	439609	UnaryOperator	&		439068	0					
ANR	439610	CallExpression	ZEND_OP1_LITERAL ( opline )		439068	1					
ANR	439611	Callee	ZEND_OP1_LITERAL		439068	0					
ANR	439612	Identifier	ZEND_OP1_LITERAL		439068	0					
ANR	439613	ArgumentList	opline		439068	1					
ANR	439614	Argument	opline		439068	0					
ANR	439615	Identifier	opline		439068	0					
ANR	439616	ExpressionStatement	MAKE_NOP ( opline )	1901:6:63739:63755	439068	28	True				
ANR	439617	CallExpression	MAKE_NOP ( opline )		439068	0					
ANR	439618	Callee	MAKE_NOP		439068	0					
ANR	439619	Identifier	MAKE_NOP		439068	0					
ANR	439620	ArgumentList	opline		439068	1					
ANR	439621	Argument	opline		439068	0					
ANR	439622	Identifier	opline		439068	0					
ANR	439623	BreakStatement	break ;	1902:6:63763:63768	439068	29	True				
ANR	439624	Label	case ZEND_JMPZ_EX :	1903:5:63775:63792	439068	30	True				
ANR	439625	Identifier	ZEND_JMPZ_EX		439068	0					
ANR	439626	Label	case ZEND_JMPNZ_EX :	1904:5:63799:63817	439068	31	True				
ANR	439627	Identifier	ZEND_JMPNZ_EX		439068	0					
ANR	439628	ExpressionStatement	opline -> opcode -= 3	1905:6:63825:63844	439068	32	True				
ANR	439629	AssignmentExpression	opline -> opcode -= 3		439068	0		-=			
ANR	439630	PtrMemberAccess	opline -> opcode		439068	0					
ANR	439631	Identifier	opline		439068	0					
ANR	439632	Identifier	opcode		439068	1					
ANR	439633	PrimaryExpression	3		439068	1					
ANR	439634	ExpressionStatement	SET_UNUSED ( opline -> result )	1906:6:63852:63878	439068	33	True				
ANR	439635	CallExpression	SET_UNUSED ( opline -> result )		439068	0					
ANR	439636	Callee	SET_UNUSED		439068	0					
ANR	439637	Identifier	SET_UNUSED		439068	0					
ANR	439638	ArgumentList	opline -> result		439068	1					
ANR	439639	Argument	opline -> result		439068	0					
ANR	439640	PtrMemberAccess	opline -> result		439068	0					
ANR	439641	Identifier	opline		439068	0					
ANR	439642	Identifier	result		439068	1					
ANR	439643	BreakStatement	break ;	1907:6:63886:63891	439068	34	True				
ANR	439644	IfStatement	if ( opline -> opcode == ZEND_ADD_ARRAY_ELEMENT )		439068	1					
ANR	439645	Condition	opline -> opcode == ZEND_ADD_ARRAY_ELEMENT	1911:7:63912:63951	439068	0	True				
ANR	439646	EqualityExpression	opline -> opcode == ZEND_ADD_ARRAY_ELEMENT		439068	0		==			
ANR	439647	PtrMemberAccess	opline -> opcode		439068	0					
ANR	439648	Identifier	opline		439068	0					
ANR	439649	Identifier	opcode		439068	1					
ANR	439650	Identifier	ZEND_ADD_ARRAY_ELEMENT		439068	1					
ANR	439651	CompoundStatement		118:49:3182:3182	439068	1					
ANR	439652	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_VAR || ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR )		439068	0					
ANR	439653	Condition	ZEND_OP1_TYPE ( opline ) == IS_VAR || ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR	1912:8:63964:64033	439068	0	True				
ANR	439654	OrExpression	ZEND_OP1_TYPE ( opline ) == IS_VAR || ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR		439068	0		||			
ANR	439655	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_VAR		439068	0		==			
ANR	439656	CallExpression	ZEND_OP1_TYPE ( opline )		439068	0					
ANR	439657	Callee	ZEND_OP1_TYPE		439068	0					
ANR	439658	Identifier	ZEND_OP1_TYPE		439068	0					
ANR	439659	ArgumentList	opline		439068	1					
ANR	439660	Argument	opline		439068	0					
ANR	439661	Identifier	opline		439068	0					
ANR	439662	Identifier	IS_VAR		439068	1					
ANR	439663	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR		439068	1		==			
ANR	439664	CallExpression	ZEND_OP1_TYPE ( opline )		439068	0					
ANR	439665	Callee	ZEND_OP1_TYPE		439068	0					
ANR	439666	Identifier	ZEND_OP1_TYPE		439068	0					
ANR	439667	ArgumentList	opline		439068	1					
ANR	439668	Argument	opline		439068	0					
ANR	439669	Identifier	opline		439068	0					
ANR	439670	Identifier	IS_TMP_VAR		439068	1					
ANR	439671	CompoundStatement		119:80:3264:3264	439068	1					
ANR	439672	ExpressionStatement	"zend_bitset_incl ( usage , VAR_NUM ( ZEND_RESULT ( opline ) . var ) )"	1913:5:64043:64100	439068	0	True				
ANR	439673	CallExpression	"zend_bitset_incl ( usage , VAR_NUM ( ZEND_RESULT ( opline ) . var ) )"		439068	0					
ANR	439674	Callee	zend_bitset_incl		439068	0					
ANR	439675	Identifier	zend_bitset_incl		439068	0					
ANR	439676	ArgumentList	usage		439068	1					
ANR	439677	Argument	usage		439068	0					
ANR	439678	Identifier	usage		439068	0					
ANR	439679	Argument	VAR_NUM ( ZEND_RESULT ( opline ) . var )		439068	1					
ANR	439680	CallExpression	VAR_NUM ( ZEND_RESULT ( opline ) . var )		439068	0					
ANR	439681	Callee	VAR_NUM		439068	0					
ANR	439682	Identifier	VAR_NUM		439068	0					
ANR	439683	ArgumentList	ZEND_RESULT ( opline ) . var		439068	1					
ANR	439684	Argument	ZEND_RESULT ( opline ) . var		439068	0					
ANR	439685	MemberAccess	ZEND_RESULT ( opline ) . var		439068	0					
ANR	439686	CallExpression	ZEND_RESULT ( opline )		439068	0					
ANR	439687	Callee	ZEND_RESULT		439068	0					
ANR	439688	Identifier	ZEND_RESULT		439068	0					
ANR	439689	ArgumentList	opline		439068	1					
ANR	439690	Argument	opline		439068	0					
ANR	439691	Identifier	opline		439068	0					
ANR	439692	Identifier	var		439068	1					
ANR	439693	ElseStatement	else		439068	0					
ANR	439694	CompoundStatement		122:10:3346:3346	439068	0					
ANR	439695	IfStatement	if ( RESULT_USED ( opline ) )		439068	0					
ANR	439696	Condition	RESULT_USED ( opline )	1916:8:64128:64146	439068	0	True				
ANR	439697	CallExpression	RESULT_USED ( opline )		439068	0					
ANR	439698	Callee	RESULT_USED		439068	0					
ANR	439699	Identifier	RESULT_USED		439068	0					
ANR	439700	ArgumentList	opline		439068	1					
ANR	439701	Argument	opline		439068	0					
ANR	439702	Identifier	opline		439068	0					
ANR	439703	CompoundStatement		123:29:3377:3377	439068	1					
ANR	439704	ExpressionStatement	"zend_bitset_excl ( usage , VAR_NUM ( ZEND_RESULT ( opline ) . var ) )"	1917:5:64156:64213	439068	0	True				
ANR	439705	CallExpression	"zend_bitset_excl ( usage , VAR_NUM ( ZEND_RESULT ( opline ) . var ) )"		439068	0					
ANR	439706	Callee	zend_bitset_excl		439068	0					
ANR	439707	Identifier	zend_bitset_excl		439068	0					
ANR	439708	ArgumentList	usage		439068	1					
ANR	439709	Argument	usage		439068	0					
ANR	439710	Identifier	usage		439068	0					
ANR	439711	Argument	VAR_NUM ( ZEND_RESULT ( opline ) . var )		439068	1					
ANR	439712	CallExpression	VAR_NUM ( ZEND_RESULT ( opline ) . var )		439068	0					
ANR	439713	Callee	VAR_NUM		439068	0					
ANR	439714	Identifier	VAR_NUM		439068	0					
ANR	439715	ArgumentList	ZEND_RESULT ( opline ) . var		439068	1					
ANR	439716	Argument	ZEND_RESULT ( opline ) . var		439068	0					
ANR	439717	MemberAccess	ZEND_RESULT ( opline ) . var		439068	0					
ANR	439718	CallExpression	ZEND_RESULT ( opline )		439068	0					
ANR	439719	Callee	ZEND_RESULT		439068	0					
ANR	439720	Identifier	ZEND_RESULT		439068	0					
ANR	439721	ArgumentList	opline		439068	1					
ANR	439722	Argument	opline		439068	0					
ANR	439723	Identifier	opline		439068	0					
ANR	439724	Identifier	var		439068	1					
ANR	439725	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_VAR || ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR )		439068	2					
ANR	439726	Condition	ZEND_OP1_TYPE ( opline ) == IS_VAR || ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR	1921:7:64234:64303	439068	0	True				
ANR	439727	OrExpression	ZEND_OP1_TYPE ( opline ) == IS_VAR || ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR		439068	0		||			
ANR	439728	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_VAR		439068	0		==			
ANR	439729	CallExpression	ZEND_OP1_TYPE ( opline )		439068	0					
ANR	439730	Callee	ZEND_OP1_TYPE		439068	0					
ANR	439731	Identifier	ZEND_OP1_TYPE		439068	0					
ANR	439732	ArgumentList	opline		439068	1					
ANR	439733	Argument	opline		439068	0					
ANR	439734	Identifier	opline		439068	0					
ANR	439735	Identifier	IS_VAR		439068	1					
ANR	439736	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_TMP_VAR		439068	1		==			
ANR	439737	CallExpression	ZEND_OP1_TYPE ( opline )		439068	0					
ANR	439738	Callee	ZEND_OP1_TYPE		439068	0					
ANR	439739	Identifier	ZEND_OP1_TYPE		439068	0					
ANR	439740	ArgumentList	opline		439068	1					
ANR	439741	Argument	opline		439068	0					
ANR	439742	Identifier	opline		439068	0					
ANR	439743	Identifier	IS_TMP_VAR		439068	1					
ANR	439744	CompoundStatement		128:79:3534:3534	439068	1					
ANR	439745	ExpressionStatement	"zend_bitset_incl ( usage , VAR_NUM ( ZEND_OP1 ( opline ) . var ) )"	1922:4:64312:64366	439068	0	True				
ANR	439746	CallExpression	"zend_bitset_incl ( usage , VAR_NUM ( ZEND_OP1 ( opline ) . var ) )"		439068	0					
ANR	439747	Callee	zend_bitset_incl		439068	0					
ANR	439748	Identifier	zend_bitset_incl		439068	0					
ANR	439749	ArgumentList	usage		439068	1					
ANR	439750	Argument	usage		439068	0					
ANR	439751	Identifier	usage		439068	0					
ANR	439752	Argument	VAR_NUM ( ZEND_OP1 ( opline ) . var )		439068	1					
ANR	439753	CallExpression	VAR_NUM ( ZEND_OP1 ( opline ) . var )		439068	0					
ANR	439754	Callee	VAR_NUM		439068	0					
ANR	439755	Identifier	VAR_NUM		439068	0					
ANR	439756	ArgumentList	ZEND_OP1 ( opline ) . var		439068	1					
ANR	439757	Argument	ZEND_OP1 ( opline ) . var		439068	0					
ANR	439758	MemberAccess	ZEND_OP1 ( opline ) . var		439068	0					
ANR	439759	CallExpression	ZEND_OP1 ( opline )		439068	0					
ANR	439760	Callee	ZEND_OP1		439068	0					
ANR	439761	Identifier	ZEND_OP1		439068	0					
ANR	439762	ArgumentList	opline		439068	1					
ANR	439763	Argument	opline		439068	0					
ANR	439764	Identifier	opline		439068	0					
ANR	439765	Identifier	var		439068	1					
ANR	439766	IfStatement	if ( ZEND_OP2_TYPE ( opline ) == IS_VAR || ZEND_OP2_TYPE ( opline ) == IS_TMP_VAR )		439068	3					
ANR	439767	Condition	ZEND_OP2_TYPE ( opline ) == IS_VAR || ZEND_OP2_TYPE ( opline ) == IS_TMP_VAR	1925:7:64381:64450	439068	0	True				
ANR	439768	OrExpression	ZEND_OP2_TYPE ( opline ) == IS_VAR || ZEND_OP2_TYPE ( opline ) == IS_TMP_VAR		439068	0		||			
ANR	439769	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_VAR		439068	0		==			
ANR	439770	CallExpression	ZEND_OP2_TYPE ( opline )		439068	0					
ANR	439771	Callee	ZEND_OP2_TYPE		439068	0					
ANR	439772	Identifier	ZEND_OP2_TYPE		439068	0					
ANR	439773	ArgumentList	opline		439068	1					
ANR	439774	Argument	opline		439068	0					
ANR	439775	Identifier	opline		439068	0					
ANR	439776	Identifier	IS_VAR		439068	1					
ANR	439777	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_TMP_VAR		439068	1		==			
ANR	439778	CallExpression	ZEND_OP2_TYPE ( opline )		439068	0					
ANR	439779	Callee	ZEND_OP2_TYPE		439068	0					
ANR	439780	Identifier	ZEND_OP2_TYPE		439068	0					
ANR	439781	ArgumentList	opline		439068	1					
ANR	439782	Argument	opline		439068	0					
ANR	439783	Identifier	opline		439068	0					
ANR	439784	Identifier	IS_TMP_VAR		439068	1					
ANR	439785	CompoundStatement		132:79:3681:3681	439068	1					
ANR	439786	ExpressionStatement	"zend_bitset_incl ( usage , VAR_NUM ( ZEND_OP2 ( opline ) . var ) )"	1926:4:64459:64513	439068	0	True				
ANR	439787	CallExpression	"zend_bitset_incl ( usage , VAR_NUM ( ZEND_OP2 ( opline ) . var ) )"		439068	0					
ANR	439788	Callee	zend_bitset_incl		439068	0					
ANR	439789	Identifier	zend_bitset_incl		439068	0					
ANR	439790	ArgumentList	usage		439068	1					
ANR	439791	Argument	usage		439068	0					
ANR	439792	Identifier	usage		439068	0					
ANR	439793	Argument	VAR_NUM ( ZEND_OP2 ( opline ) . var )		439068	1					
ANR	439794	CallExpression	VAR_NUM ( ZEND_OP2 ( opline ) . var )		439068	0					
ANR	439795	Callee	VAR_NUM		439068	0					
ANR	439796	Identifier	VAR_NUM		439068	0					
ANR	439797	ArgumentList	ZEND_OP2 ( opline ) . var		439068	1					
ANR	439798	Argument	ZEND_OP2 ( opline ) . var		439068	0					
ANR	439799	MemberAccess	ZEND_OP2 ( opline ) . var		439068	0					
ANR	439800	CallExpression	ZEND_OP2 ( opline )		439068	0					
ANR	439801	Callee	ZEND_OP2		439068	0					
ANR	439802	Identifier	ZEND_OP2		439068	0					
ANR	439803	ArgumentList	opline		439068	1					
ANR	439804	Argument	opline		439068	0					
ANR	439805	Identifier	opline		439068	0					
ANR	439806	Identifier	var		439068	1					
ANR	439807	IfStatement	"if ( ( ZEND_RESULT_TYPE ( opline ) & IS_VAR ) && ( ZEND_RESULT_TYPE ( opline ) & EXT_TYPE_UNUSED ) && zend_bitset_in ( usage , VAR_NUM ( ZEND_RESULT ( opline ) . var ) ) )"		439068	4					
ANR	439808	Condition	"( ZEND_RESULT_TYPE ( opline ) & IS_VAR ) && ( ZEND_RESULT_TYPE ( opline ) & EXT_TYPE_UNUSED ) && zend_bitset_in ( usage , VAR_NUM ( ZEND_RESULT ( opline ) . var ) )"	1929:7:64528:64701	439068	0	True				
ANR	439809	AndExpression	"( ZEND_RESULT_TYPE ( opline ) & IS_VAR ) && ( ZEND_RESULT_TYPE ( opline ) & EXT_TYPE_UNUSED ) && zend_bitset_in ( usage , VAR_NUM ( ZEND_RESULT ( opline ) . var ) )"		439068	0		&&			
ANR	439810	BitAndExpression	ZEND_RESULT_TYPE ( opline ) & IS_VAR		439068	0		&			
ANR	439811	CallExpression	ZEND_RESULT_TYPE ( opline )		439068	0					
ANR	439812	Callee	ZEND_RESULT_TYPE		439068	0					
ANR	439813	Identifier	ZEND_RESULT_TYPE		439068	0					
ANR	439814	ArgumentList	opline		439068	1					
ANR	439815	Argument	opline		439068	0					
ANR	439816	Identifier	opline		439068	0					
ANR	439817	Identifier	IS_VAR		439068	1					
ANR	439818	AndExpression	"( ZEND_RESULT_TYPE ( opline ) & EXT_TYPE_UNUSED ) && zend_bitset_in ( usage , VAR_NUM ( ZEND_RESULT ( opline ) . var ) )"		439068	1		&&			
ANR	439819	BitAndExpression	ZEND_RESULT_TYPE ( opline ) & EXT_TYPE_UNUSED		439068	0		&			
ANR	439820	CallExpression	ZEND_RESULT_TYPE ( opline )		439068	0					
ANR	439821	Callee	ZEND_RESULT_TYPE		439068	0					
ANR	439822	Identifier	ZEND_RESULT_TYPE		439068	0					
ANR	439823	ArgumentList	opline		439068	1					
ANR	439824	Argument	opline		439068	0					
ANR	439825	Identifier	opline		439068	0					
ANR	439826	Identifier	EXT_TYPE_UNUSED		439068	1					
ANR	439827	CallExpression	"zend_bitset_in ( usage , VAR_NUM ( ZEND_RESULT ( opline ) . var ) )"		439068	1					
ANR	439828	Callee	zend_bitset_in		439068	0					
ANR	439829	Identifier	zend_bitset_in		439068	0					
ANR	439830	ArgumentList	usage		439068	1					
ANR	439831	Argument	usage		439068	0					
ANR	439832	Identifier	usage		439068	0					
ANR	439833	Argument	VAR_NUM ( ZEND_RESULT ( opline ) . var )		439068	1					
ANR	439834	CallExpression	VAR_NUM ( ZEND_RESULT ( opline ) . var )		439068	0					
ANR	439835	Callee	VAR_NUM		439068	0					
ANR	439836	Identifier	VAR_NUM		439068	0					
ANR	439837	ArgumentList	ZEND_RESULT ( opline ) . var		439068	1					
ANR	439838	Argument	ZEND_RESULT ( opline ) . var		439068	0					
ANR	439839	MemberAccess	ZEND_RESULT ( opline ) . var		439068	0					
ANR	439840	CallExpression	ZEND_RESULT ( opline )		439068	0					
ANR	439841	Callee	ZEND_RESULT		439068	0					
ANR	439842	Identifier	ZEND_RESULT		439068	0					
ANR	439843	ArgumentList	opline		439068	1					
ANR	439844	Argument	opline		439068	0					
ANR	439845	Identifier	opline		439068	0					
ANR	439846	Identifier	var		439068	1					
ANR	439847	CompoundStatement		138:73:3932:3932	439068	1					
ANR	439848	ExpressionStatement	ZEND_RESULT_TYPE ( opline ) &= ~EXT_TYPE_UNUSED	1932:4:64710:64754	439068	0	True				
ANR	439849	AssignmentExpression	ZEND_RESULT_TYPE ( opline ) &= ~EXT_TYPE_UNUSED		439068	0		&=			
ANR	439850	CallExpression	ZEND_RESULT_TYPE ( opline )		439068	0					
ANR	439851	Callee	ZEND_RESULT_TYPE		439068	0					
ANR	439852	Identifier	ZEND_RESULT_TYPE		439068	0					
ANR	439853	ArgumentList	opline		439068	1					
ANR	439854	Argument	opline		439068	0					
ANR	439855	Identifier	opline		439068	0					
ANR	439856	Identifier	~EXT_TYPE_UNUSED		439068	1					
ANR	439857	ExpressionStatement	opline --	1935:3:64766:64774	439068	5	True				
ANR	439858	PostIncDecOperationExpression	opline --		439068	0					
ANR	439859	Identifier	opline		439068	0					
ANR	439860	IncDec	--		439068	1					
ANR	439861	ExpressionStatement	block = block -> next	1937:2:64782:64801	439068	4	True				
ANR	439862	AssignmentExpression	block = block -> next		439068	0		=			
ANR	439863	Identifier	block		439068	0					
ANR	439864	PtrMemberAccess	block -> next		439068	1					
ANR	439865	Identifier	block		439068	0					
ANR	439866	Identifier	next		439068	1					
ANR	439867	ExpressionStatement	"zend_arena_release ( & ctx -> arena , checkpoint )"	1940:1:64825:64868	439068	14	True				
ANR	439868	CallExpression	"zend_arena_release ( & ctx -> arena , checkpoint )"		439068	0					
ANR	439869	Callee	zend_arena_release		439068	0					
ANR	439870	Identifier	zend_arena_release		439068	0					
ANR	439871	ArgumentList	& ctx -> arena		439068	1					
ANR	439872	Argument	& ctx -> arena		439068	0					
ANR	439873	UnaryOperationExpression	& ctx -> arena		439068	0					
ANR	439874	UnaryOperator	&		439068	0					
ANR	439875	PtrMemberAccess	ctx -> arena		439068	1					
ANR	439876	Identifier	ctx		439068	0					
ANR	439877	Identifier	arena		439068	1					
ANR	439878	Argument	checkpoint		439068	1					
ANR	439879	Identifier	checkpoint		439068	0					
ANR	439880	ReturnType	static void		439068	1					
ANR	439881	Identifier	zend_t_usage		439068	2					
ANR	439882	ParameterList	"zend_code_block * block , zend_op_array * op_array , zend_bitset used_ext , zend_optimizer_ctx * ctx"		439068	3					
ANR	439883	Parameter	zend_code_block * block	1793:25:60675:60696	439068	0	True				
ANR	439884	ParameterType	zend_code_block *		439068	0					
ANR	439885	Identifier	block		439068	1					
ANR	439886	Parameter	zend_op_array * op_array	1793:49:60699:60721	439068	1	True				
ANR	439887	ParameterType	zend_op_array *		439068	0					
ANR	439888	Identifier	op_array		439068	1					
ANR	439889	Parameter	zend_bitset used_ext	1793:74:60724:60743	439068	2	True				
ANR	439890	ParameterType	zend_bitset		439068	0					
ANR	439891	Identifier	used_ext		439068	1					
ANR	439892	Parameter	zend_optimizer_ctx * ctx	1793:96:60746:60768	439068	3	True				
ANR	439893	ParameterType	zend_optimizer_ctx *		439068	0					
ANR	439894	Identifier	ctx		439068	1					
ANR	439895	CFGEntryNode	ENTRY		439068		True				
ANR	439896	CFGExitNode	EXIT		439068		True				
ANR	439897	Symbol	checkpoint		439068						
ANR	439898	Symbol	next_block -> access		439068						
ANR	439899	Symbol	bitset_len		439068						
ANR	439900	Symbol	usage		439068						
ANR	439901	Symbol	RESULT_USED		439068						
ANR	439902	Symbol	ZEND_OP2_TYPE		439068						
ANR	439903	Symbol	opline -> result		439068						
ANR	439904	Symbol	next_block -> len		439068						
ANR	439905	Symbol	ZEND_RESULT ( opline ) . var		439068						
ANR	439906	Symbol	opline		439068						
ANR	439907	Symbol	ZEND_BITSET_ELM_SIZE		439068						
ANR	439908	Symbol	block		439068						
ANR	439909	Symbol	IS_TMP_VAR		439068						
ANR	439910	Symbol	op_array -> T		439068						
ANR	439911	Symbol	IS_CONST		439068						
ANR	439912	Symbol	zend_arena_alloc		439068						
ANR	439913	Symbol	ctx		439068						
ANR	439914	Symbol	ZEND_FE_FETCH_R		439068						
ANR	439915	Symbol	ZEND_OP2 ( opline ) . var		439068						
ANR	439916	Symbol	* next_block		439068						
ANR	439917	Symbol	& ZEND_OP1_LITERAL		439068						
ANR	439918	Symbol	stderr		439068						
ANR	439919	Symbol	* op_array		439068						
ANR	439920	Symbol	block -> start_opline		439068						
ANR	439921	Symbol	ZEND_RESULT_TYPE		439068						
ANR	439922	Symbol	block -> access		439068						
ANR	439923	Symbol	IS_VAR		439068						
ANR	439924	Symbol	opline -> op1		439068						
ANR	439925	Symbol	next_block -> start_opline		439068						
ANR	439926	Symbol	opline -> op2		439068						
ANR	439927	Symbol	used_ext		439068						
ANR	439928	Symbol	zend_bitset_len		439068						
ANR	439929	Symbol	op_array -> last_var		439068						
ANR	439930	Symbol	block -> next		439068						
ANR	439931	Symbol	next_block -> next		439068						
ANR	439932	Symbol	ZEND_FE_FETCH_RW		439068						
ANR	439933	Symbol	~EXT_TYPE_UNUSED		439068						
ANR	439934	Symbol	ZEND_RESULT		439068						
ANR	439935	Symbol	end		439068						
ANR	439936	Symbol	VAR_NUM		439068						
ANR	439937	Symbol	EXT_TYPE_UNUSED		439068						
ANR	439938	Symbol	zend_bitset_in		439068						
ANR	439939	Symbol	next_block		439068						
ANR	439940	Symbol	zend_arena_checkpoint		439068						
ANR	439941	Symbol	ZEND_OP1 ( opline ) . var		439068						
ANR	439942	Symbol	RES_NEVER_USED		439068						
ANR	439943	Symbol	i		439068						
ANR	439944	Symbol	block -> len		439068						
ANR	439945	Symbol	* ctx		439068						
ANR	439946	Symbol	ZEND_OP1		439068						
ANR	439947	Symbol	* block		439068						
ANR	439948	Symbol	ZEND_OP2		439068						
ANR	439949	Symbol	& ctx -> arena		439068						
ANR	439950	Symbol	ZEND_OP1_TYPE		439068						
ANR	439951	Symbol	* opline		439068						
ANR	439952	Symbol	opline -> opcode		439068						
ANR	439953	Symbol	ZEND_ADD_ARRAY_ELEMENT		439068						
ANR	439954	Symbol	opline -> op2_type		439068						
ANR	439955	Symbol	defined_here		439068						
ANR	439956	Symbol	ctx -> arena		439068						
ANR	439957	Symbol	op_array		439068						
ANR	439958	Function	optimize_cfg	1945:0:64891:66976							
ANR	439959	FunctionDef	"optimize_cfg (zend_op_array * op_array , zend_optimizer_ctx * ctx)"		439958	0					
ANR	439960	CompoundStatement		1946:0:64959:66976	439958	0					
ANR	439961	IdentifierDeclStatement	zend_cfg cfg ;	1947:1:64962:64974	439958	0	True				
ANR	439962	IdentifierDecl	cfg		439958	0					
ANR	439963	IdentifierDeclType	zend_cfg		439958	0					
ANR	439964	Identifier	cfg		439958	1					
ANR	439965	IdentifierDeclStatement	zend_code_block * cur_block ;	1948:1:64977:65003	439958	1	True				
ANR	439966	IdentifierDecl	* cur_block		439958	0					
ANR	439967	IdentifierDeclType	zend_code_block *		439958	0					
ANR	439968	Identifier	cur_block		439958	1					
ANR	439969	IdentifierDeclStatement	int pass ;	1949:1:65006:65014	439958	2	True				
ANR	439970	IdentifierDecl	pass		439958	0					
ANR	439971	IdentifierDeclType	int		439958	0					
ANR	439972	Identifier	pass		439958	1					
ANR	439973	IdentifierDeclStatement	uint32_t bitset_len ;	1950:1:65017:65036	439958	3	True				
ANR	439974	IdentifierDecl	bitset_len		439958	0					
ANR	439975	IdentifierDeclType	uint32_t		439958	0					
ANR	439976	Identifier	bitset_len		439958	1					
ANR	439977	IdentifierDeclStatement	zend_bitset usage ;	1951:1:65039:65056	439958	4	True				
ANR	439978	IdentifierDecl	usage		439958	0					
ANR	439979	IdentifierDeclType	zend_bitset		439958	0					
ANR	439980	Identifier	usage		439958	1					
ANR	439981	IdentifierDeclStatement	void * checkpoint ;	1952:1:65059:65075	439958	5	True				
ANR	439982	IdentifierDecl	* checkpoint		439958	0					
ANR	439983	IdentifierDeclType	void *		439958	0					
ANR	439984	Identifier	checkpoint		439958	1					
ANR	439985	ExpressionStatement	"fprintf ( stderr , ""File %s func %s\\n"" , op_array -> filename , op_array -> function_name ? op_array -> function_name : ""main"" )"	1955:1:65099:65214	439958	6	True				
ANR	439986	CallExpression	"fprintf ( stderr , ""File %s func %s\\n"" , op_array -> filename , op_array -> function_name ? op_array -> function_name : ""main"" )"		439958	0					
ANR	439987	Callee	fprintf		439958	0					
ANR	439988	Identifier	fprintf		439958	0					
ANR	439989	ArgumentList	stderr		439958	1					
ANR	439990	Argument	stderr		439958	0					
ANR	439991	Identifier	stderr		439958	0					
ANR	439992	Argument	"""File %s func %s\\n"""		439958	1					
ANR	439993	PrimaryExpression	"""File %s func %s\\n"""		439958	0					
ANR	439994	Argument	op_array -> filename		439958	2					
ANR	439995	PtrMemberAccess	op_array -> filename		439958	0					
ANR	439996	Identifier	op_array		439958	0					
ANR	439997	Identifier	filename		439958	1					
ANR	439998	Argument	"op_array -> function_name ? op_array -> function_name : ""main"""		439958	3					
ANR	439999	ConditionalExpression	"op_array -> function_name ? op_array -> function_name : ""main"""		439958	0					
ANR	440000	Condition	op_array -> function_name		439958	0					
ANR	440001	PtrMemberAccess	op_array -> function_name		439958	0					
ANR	440002	Identifier	op_array		439958	0					
ANR	440003	Identifier	function_name		439958	1					
ANR	440004	PtrMemberAccess	op_array -> function_name		439958	1					
ANR	440005	Identifier	op_array		439958	0					
ANR	440006	Identifier	function_name		439958	1					
ANR	440007	PrimaryExpression	"""main"""		439958	2					
ANR	440008	ExpressionStatement	fflush ( stderr )	1956:1:65217:65231	439958	7	True				
ANR	440009	CallExpression	fflush ( stderr )		439958	0					
ANR	440010	Callee	fflush		439958	0					
ANR	440011	Identifier	fflush		439958	0					
ANR	440012	ArgumentList	stderr		439958	1					
ANR	440013	Argument	stderr		439958	0					
ANR	440014	Identifier	stderr		439958	0					
ANR	440015	IfStatement	if ( op_array -> fn_flags & ZEND_ACC_HAS_FINALLY_BLOCK )		439958	8					
ANR	440016	Condition	op_array -> fn_flags & ZEND_ACC_HAS_FINALLY_BLOCK	1959:5:65246:65292	439958	0	True				
ANR	440017	BitAndExpression	op_array -> fn_flags & ZEND_ACC_HAS_FINALLY_BLOCK		439958	0		&			
ANR	440018	PtrMemberAccess	op_array -> fn_flags		439958	0					
ANR	440019	Identifier	op_array		439958	0					
ANR	440020	Identifier	fn_flags		439958	1					
ANR	440021	Identifier	ZEND_ACC_HAS_FINALLY_BLOCK		439958	1					
ANR	440022	CompoundStatement		14:54:335:335	439958	1					
ANR	440023	ReturnStatement	return ;	1960:2:65299:65305	439958	0	True				
ANR	440024	ExpressionStatement	checkpoint = zend_arena_checkpoint ( ctx -> arena )	1964:1:65332:65378	439958	9	True				
ANR	440025	AssignmentExpression	checkpoint = zend_arena_checkpoint ( ctx -> arena )		439958	0		=			
ANR	440026	Identifier	checkpoint		439958	0					
ANR	440027	CallExpression	zend_arena_checkpoint ( ctx -> arena )		439958	1					
ANR	440028	Callee	zend_arena_checkpoint		439958	0					
ANR	440029	Identifier	zend_arena_checkpoint		439958	0					
ANR	440030	ArgumentList	ctx -> arena		439958	1					
ANR	440031	Argument	ctx -> arena		439958	0					
ANR	440032	PtrMemberAccess	ctx -> arena		439958	0					
ANR	440033	Identifier	ctx		439958	0					
ANR	440034	Identifier	arena		439958	1					
ANR	440035	IfStatement	"if ( ! find_code_blocks ( op_array , & cfg , ctx ) )"		439958	10					
ANR	440036	Condition	"! find_code_blocks ( op_array , & cfg , ctx )"	1965:5:65385:65422	439958	0	True				
ANR	440037	UnaryOperationExpression	"! find_code_blocks ( op_array , & cfg , ctx )"		439958	0					
ANR	440038	UnaryOperator	!		439958	0					
ANR	440039	CallExpression	"find_code_blocks ( op_array , & cfg , ctx )"		439958	1					
ANR	440040	Callee	find_code_blocks		439958	0					
ANR	440041	Identifier	find_code_blocks		439958	0					
ANR	440042	ArgumentList	op_array		439958	1					
ANR	440043	Argument	op_array		439958	0					
ANR	440044	Identifier	op_array		439958	0					
ANR	440045	Argument	& cfg		439958	1					
ANR	440046	UnaryOperationExpression	& cfg		439958	0					
ANR	440047	UnaryOperator	&		439958	0					
ANR	440048	Identifier	cfg		439958	1					
ANR	440049	Argument	ctx		439958	2					
ANR	440050	Identifier	ctx		439958	0					
ANR	440051	CompoundStatement		20:45:465:465	439958	1					
ANR	440052	ExpressionStatement	"zend_arena_release ( & ctx -> arena , checkpoint )"	1966:2:65429:65472	439958	0	True				
ANR	440053	CallExpression	"zend_arena_release ( & ctx -> arena , checkpoint )"		439958	0					
ANR	440054	Callee	zend_arena_release		439958	0					
ANR	440055	Identifier	zend_arena_release		439958	0					
ANR	440056	ArgumentList	& ctx -> arena		439958	1					
ANR	440057	Argument	& ctx -> arena		439958	0					
ANR	440058	UnaryOperationExpression	& ctx -> arena		439958	0					
ANR	440059	UnaryOperator	&		439958	0					
ANR	440060	PtrMemberAccess	ctx -> arena		439958	1					
ANR	440061	Identifier	ctx		439958	0					
ANR	440062	Identifier	arena		439958	1					
ANR	440063	Argument	checkpoint		439958	1					
ANR	440064	Identifier	checkpoint		439958	0					
ANR	440065	ReturnStatement	return ;	1967:2:65476:65482	439958	1	True				
ANR	440066	ExpressionStatement	"zend_rebuild_access_path ( & cfg , op_array , 0 , ctx )"	1970:1:65489:65537	439958	11	True				
ANR	440067	CallExpression	"zend_rebuild_access_path ( & cfg , op_array , 0 , ctx )"		439958	0					
ANR	440068	Callee	zend_rebuild_access_path		439958	0					
ANR	440069	Identifier	zend_rebuild_access_path		439958	0					
ANR	440070	ArgumentList	& cfg		439958	1					
ANR	440071	Argument	& cfg		439958	0					
ANR	440072	UnaryOperationExpression	& cfg		439958	0					
ANR	440073	UnaryOperator	&		439958	0					
ANR	440074	Identifier	cfg		439958	1					
ANR	440075	Argument	op_array		439958	1					
ANR	440076	Identifier	op_array		439958	0					
ANR	440077	Argument	0		439958	2					
ANR	440078	PrimaryExpression	0		439958	0					
ANR	440079	Argument	ctx		439958	3					
ANR	440080	Identifier	ctx		439958	0					
ANR	440081	IfStatement	if ( op_array -> last_var || op_array -> T )		439958	12					
ANR	440082	Condition	op_array -> last_var || op_array -> T	1972:5:65597:65629	439958	0	True				
ANR	440083	OrExpression	op_array -> last_var || op_array -> T		439958	0		||			
ANR	440084	PtrMemberAccess	op_array -> last_var		439958	0					
ANR	440085	Identifier	op_array		439958	0					
ANR	440086	Identifier	last_var		439958	1					
ANR	440087	PtrMemberAccess	op_array -> T		439958	1					
ANR	440088	Identifier	op_array		439958	0					
ANR	440089	Identifier	T		439958	1					
ANR	440090	CompoundStatement		27:40:672:672	439958	1					
ANR	440091	ExpressionStatement	bitset_len = zend_bitset_len ( op_array -> last_var + op_array -> T )	1973:2:65636:65698	439958	0	True				
ANR	440092	AssignmentExpression	bitset_len = zend_bitset_len ( op_array -> last_var + op_array -> T )		439958	0		=			
ANR	440093	Identifier	bitset_len		439958	0					
ANR	440094	CallExpression	zend_bitset_len ( op_array -> last_var + op_array -> T )		439958	1					
ANR	440095	Callee	zend_bitset_len		439958	0					
ANR	440096	Identifier	zend_bitset_len		439958	0					
ANR	440097	ArgumentList	op_array -> last_var + op_array -> T		439958	1					
ANR	440098	Argument	op_array -> last_var + op_array -> T		439958	0					
ANR	440099	AdditiveExpression	op_array -> last_var + op_array -> T		439958	0		+			
ANR	440100	PtrMemberAccess	op_array -> last_var		439958	0					
ANR	440101	Identifier	op_array		439958	0					
ANR	440102	Identifier	last_var		439958	1					
ANR	440103	PtrMemberAccess	op_array -> T		439958	1					
ANR	440104	Identifier	op_array		439958	0					
ANR	440105	Identifier	T		439958	1					
ANR	440106	ExpressionStatement	"cfg . Tsource = zend_arena_calloc ( & ctx -> arena , op_array -> last_var + op_array -> T , sizeof ( zend_op * ) )"	1974:2:65702:65799	439958	1	True				
ANR	440107	AssignmentExpression	"cfg . Tsource = zend_arena_calloc ( & ctx -> arena , op_array -> last_var + op_array -> T , sizeof ( zend_op * ) )"		439958	0		=			
ANR	440108	MemberAccess	cfg . Tsource		439958	0					
ANR	440109	Identifier	cfg		439958	0					
ANR	440110	Identifier	Tsource		439958	1					
ANR	440111	CallExpression	"zend_arena_calloc ( & ctx -> arena , op_array -> last_var + op_array -> T , sizeof ( zend_op * ) )"		439958	1					
ANR	440112	Callee	zend_arena_calloc		439958	0					
ANR	440113	Identifier	zend_arena_calloc		439958	0					
ANR	440114	ArgumentList	& ctx -> arena		439958	1					
ANR	440115	Argument	& ctx -> arena		439958	0					
ANR	440116	UnaryOperationExpression	& ctx -> arena		439958	0					
ANR	440117	UnaryOperator	&		439958	0					
ANR	440118	PtrMemberAccess	ctx -> arena		439958	1					
ANR	440119	Identifier	ctx		439958	0					
ANR	440120	Identifier	arena		439958	1					
ANR	440121	Argument	op_array -> last_var + op_array -> T		439958	1					
ANR	440122	AdditiveExpression	op_array -> last_var + op_array -> T		439958	0		+			
ANR	440123	PtrMemberAccess	op_array -> last_var		439958	0					
ANR	440124	Identifier	op_array		439958	0					
ANR	440125	Identifier	last_var		439958	1					
ANR	440126	PtrMemberAccess	op_array -> T		439958	1					
ANR	440127	Identifier	op_array		439958	0					
ANR	440128	Identifier	T		439958	1					
ANR	440129	Argument	sizeof ( zend_op * )		439958	2					
ANR	440130	SizeofExpression	sizeof ( zend_op * )		439958	0					
ANR	440131	Sizeof	sizeof		439958	0					
ANR	440132	SizeofOperand	zend_op *		439958	1					
ANR	440133	ExpressionStatement	"cfg . same_t = zend_arena_alloc ( & ctx -> arena , op_array -> last_var + op_array -> T )"	1975:2:65803:65879	439958	2	True				
ANR	440134	AssignmentExpression	"cfg . same_t = zend_arena_alloc ( & ctx -> arena , op_array -> last_var + op_array -> T )"		439958	0		=			
ANR	440135	MemberAccess	cfg . same_t		439958	0					
ANR	440136	Identifier	cfg		439958	0					
ANR	440137	Identifier	same_t		439958	1					
ANR	440138	CallExpression	"zend_arena_alloc ( & ctx -> arena , op_array -> last_var + op_array -> T )"		439958	1					
ANR	440139	Callee	zend_arena_alloc		439958	0					
ANR	440140	Identifier	zend_arena_alloc		439958	0					
ANR	440141	ArgumentList	& ctx -> arena		439958	1					
ANR	440142	Argument	& ctx -> arena		439958	0					
ANR	440143	UnaryOperationExpression	& ctx -> arena		439958	0					
ANR	440144	UnaryOperator	&		439958	0					
ANR	440145	PtrMemberAccess	ctx -> arena		439958	1					
ANR	440146	Identifier	ctx		439958	0					
ANR	440147	Identifier	arena		439958	1					
ANR	440148	Argument	op_array -> last_var + op_array -> T		439958	1					
ANR	440149	AdditiveExpression	op_array -> last_var + op_array -> T		439958	0		+			
ANR	440150	PtrMemberAccess	op_array -> last_var		439958	0					
ANR	440151	Identifier	op_array		439958	0					
ANR	440152	Identifier	last_var		439958	1					
ANR	440153	PtrMemberAccess	op_array -> T		439958	1					
ANR	440154	Identifier	op_array		439958	0					
ANR	440155	Identifier	T		439958	1					
ANR	440156	ExpressionStatement	"usage = zend_arena_alloc ( & ctx -> arena , bitset_len * ZEND_BITSET_ELM_SIZE )"	1976:2:65883:65955	439958	3	True				
ANR	440157	AssignmentExpression	"usage = zend_arena_alloc ( & ctx -> arena , bitset_len * ZEND_BITSET_ELM_SIZE )"		439958	0		=			
ANR	440158	Identifier	usage		439958	0					
ANR	440159	CallExpression	"zend_arena_alloc ( & ctx -> arena , bitset_len * ZEND_BITSET_ELM_SIZE )"		439958	1					
ANR	440160	Callee	zend_arena_alloc		439958	0					
ANR	440161	Identifier	zend_arena_alloc		439958	0					
ANR	440162	ArgumentList	& ctx -> arena		439958	1					
ANR	440163	Argument	& ctx -> arena		439958	0					
ANR	440164	UnaryOperationExpression	& ctx -> arena		439958	0					
ANR	440165	UnaryOperator	&		439958	0					
ANR	440166	PtrMemberAccess	ctx -> arena		439958	1					
ANR	440167	Identifier	ctx		439958	0					
ANR	440168	Identifier	arena		439958	1					
ANR	440169	Argument	bitset_len * ZEND_BITSET_ELM_SIZE		439958	1					
ANR	440170	MultiplicativeExpression	bitset_len * ZEND_BITSET_ELM_SIZE		439958	0		*			
ANR	440171	Identifier	bitset_len		439958	0					
ANR	440172	Identifier	ZEND_BITSET_ELM_SIZE		439958	1					
ANR	440173	ElseStatement	else		439958	0					
ANR	440174	CompoundStatement		32:8:1005:1005	439958	0					
ANR	440175	ExpressionStatement	bitset_len = 0	1978:2:65969:65983	439958	0	True				
ANR	440176	AssignmentExpression	bitset_len = 0		439958	0		=			
ANR	440177	Identifier	bitset_len		439958	0					
ANR	440178	PrimaryExpression	0		439958	1					
ANR	440179	ExpressionStatement	cfg . Tsource = NULL	1979:2:65987:66005	439958	1	True				
ANR	440180	AssignmentExpression	cfg . Tsource = NULL		439958	0		=			
ANR	440181	MemberAccess	cfg . Tsource		439958	0					
ANR	440182	Identifier	cfg		439958	0					
ANR	440183	Identifier	Tsource		439958	1					
ANR	440184	Identifier	NULL		439958	1					
ANR	440185	ExpressionStatement	cfg . same_t = NULL	1980:2:66009:66026	439958	2	True				
ANR	440186	AssignmentExpression	cfg . same_t = NULL		439958	0		=			
ANR	440187	MemberAccess	cfg . same_t		439958	0					
ANR	440188	Identifier	cfg		439958	0					
ANR	440189	Identifier	same_t		439958	1					
ANR	440190	Identifier	NULL		439958	1					
ANR	440191	ExpressionStatement	usage = NULL	1981:2:66030:66042	439958	3	True				
ANR	440192	AssignmentExpression	usage = NULL		439958	0		=			
ANR	440193	Identifier	usage		439958	0					
ANR	440194	Identifier	NULL		439958	1					
ANR	440195	ForStatement	for ( pass = 0 ; pass < PASSES ; pass ++ )		439958	13					
ANR	440196	ForInit	pass = 0 ;	1983:6:66053:66061	439958	0	True				
ANR	440197	AssignmentExpression	pass = 0		439958	0		=			
ANR	440198	Identifier	pass		439958	0					
ANR	440199	PrimaryExpression	0		439958	1					
ANR	440200	Condition	pass < PASSES	1983:16:66063:66075	439958	1	True				
ANR	440201	RelationalExpression	pass < PASSES		439958	0		<			
ANR	440202	Identifier	pass		439958	0					
ANR	440203	Identifier	PASSES		439958	1					
ANR	440204	PostIncDecOperationExpression	pass ++	1983:31:66078:66083	439958	2	True				
ANR	440205	Identifier	pass		439958	0					
ANR	440206	IncDec	++		439958	1					
ANR	440207	CompoundStatement		38:39:1126:1126	439958	3					
ANR	440208	ExpressionStatement	"zend_bitset_clear ( usage , bitset_len )"	1985:2:66124:66160	439958	0	True				
ANR	440209	CallExpression	"zend_bitset_clear ( usage , bitset_len )"		439958	0					
ANR	440210	Callee	zend_bitset_clear		439958	0					
ANR	440211	Identifier	zend_bitset_clear		439958	0					
ANR	440212	ArgumentList	usage		439958	1					
ANR	440213	Argument	usage		439958	0					
ANR	440214	Identifier	usage		439958	0					
ANR	440215	Argument	bitset_len		439958	1					
ANR	440216	Identifier	bitset_len		439958	0					
ANR	440217	ExpressionStatement	"zend_t_usage ( cfg . blocks , op_array , usage , ctx )"	1986:2:66164:66210	439958	1	True				
ANR	440218	CallExpression	"zend_t_usage ( cfg . blocks , op_array , usage , ctx )"		439958	0					
ANR	440219	Callee	zend_t_usage		439958	0					
ANR	440220	Identifier	zend_t_usage		439958	0					
ANR	440221	ArgumentList	cfg . blocks		439958	1					
ANR	440222	Argument	cfg . blocks		439958	0					
ANR	440223	MemberAccess	cfg . blocks		439958	0					
ANR	440224	Identifier	cfg		439958	0					
ANR	440225	Identifier	blocks		439958	1					
ANR	440226	Argument	op_array		439958	1					
ANR	440227	Identifier	op_array		439958	0					
ANR	440228	Argument	usage		439958	2					
ANR	440229	Identifier	usage		439958	0					
ANR	440230	Argument	ctx		439958	3					
ANR	440231	Identifier	ctx		439958	0					
ANR	440232	ForStatement	for ( cur_block = cfg . blocks ; cur_block ; cur_block = cur_block -> next )		439958	2					
ANR	440233	ForInit	cur_block = cfg . blocks ;	1989:7:66265:66287	439958	0	True				
ANR	440234	AssignmentExpression	cur_block = cfg . blocks		439958	0		=			
ANR	440235	Identifier	cur_block		439958	0					
ANR	440236	MemberAccess	cfg . blocks		439958	1					
ANR	440237	Identifier	cfg		439958	0					
ANR	440238	Identifier	blocks		439958	1					
ANR	440239	Condition	cur_block	1989:31:66289:66297	439958	1	True				
ANR	440240	Identifier	cur_block		439958	0					
ANR	440241	AssignmentExpression	cur_block = cur_block -> next	1989:42:66300:66326	439958	2	True	=			
ANR	440242	Identifier	cur_block		439958	0					
ANR	440243	PtrMemberAccess	cur_block -> next		439958	1					
ANR	440244	Identifier	cur_block		439958	0					
ANR	440245	Identifier	next		439958	1					
ANR	440246	CompoundStatement		44:71:1369:1369	439958	3					
ANR	440247	IfStatement	if ( ! cur_block -> access )		439958	0					
ANR	440248	Condition	! cur_block -> access	1990:7:66338:66355	439958	0	True				
ANR	440249	UnaryOperationExpression	! cur_block -> access		439958	0					
ANR	440250	UnaryOperator	!		439958	0					
ANR	440251	PtrMemberAccess	cur_block -> access		439958	1					
ANR	440252	Identifier	cur_block		439958	0					
ANR	440253	Identifier	access		439958	1					
ANR	440254	CompoundStatement		45:27:1398:1398	439958	1					
ANR	440255	ContinueStatement	continue ;	1991:4:66364:66372	439958	0	True				
ANR	440256	ExpressionStatement	"zend_optimize_block ( cur_block , op_array , usage , & cfg , ctx )"	1993:3:66382:66440	439958	1	True				
ANR	440257	CallExpression	"zend_optimize_block ( cur_block , op_array , usage , & cfg , ctx )"		439958	0					
ANR	440258	Callee	zend_optimize_block		439958	0					
ANR	440259	Identifier	zend_optimize_block		439958	0					
ANR	440260	ArgumentList	cur_block		439958	1					
ANR	440261	Argument	cur_block		439958	0					
ANR	440262	Identifier	cur_block		439958	0					
ANR	440263	Argument	op_array		439958	1					
ANR	440264	Identifier	op_array		439958	0					
ANR	440265	Argument	usage		439958	2					
ANR	440266	Identifier	usage		439958	0					
ANR	440267	Argument	& cfg		439958	3					
ANR	440268	UnaryOperationExpression	& cfg		439958	0					
ANR	440269	UnaryOperator	&		439958	0					
ANR	440270	Identifier	cfg		439958	1					
ANR	440271	Argument	ctx		439958	4					
ANR	440272	Identifier	ctx		439958	0					
ANR	440273	ForStatement	for ( cur_block = cfg . blocks ; cur_block ; cur_block = cur_block -> next )		439958	3					
ANR	440274	ForInit	cur_block = cfg . blocks ;	1997:7:66495:66517	439958	0	True				
ANR	440275	AssignmentExpression	cur_block = cfg . blocks		439958	0		=			
ANR	440276	Identifier	cur_block		439958	0					
ANR	440277	MemberAccess	cfg . blocks		439958	1					
ANR	440278	Identifier	cfg		439958	0					
ANR	440279	Identifier	blocks		439958	1					
ANR	440280	Condition	cur_block	1997:31:66519:66527	439958	1	True				
ANR	440281	Identifier	cur_block		439958	0					
ANR	440282	AssignmentExpression	cur_block = cur_block -> next	1997:42:66530:66556	439958	2	True	=			
ANR	440283	Identifier	cur_block		439958	0					
ANR	440284	PtrMemberAccess	cur_block -> next		439958	1					
ANR	440285	Identifier	cur_block		439958	0					
ANR	440286	Identifier	next		439958	1					
ANR	440287	CompoundStatement		52:71:1599:1599	439958	3					
ANR	440288	IfStatement	if ( ! cur_block -> access )		439958	0					
ANR	440289	Condition	! cur_block -> access	1998:7:66568:66585	439958	0	True				
ANR	440290	UnaryOperationExpression	! cur_block -> access		439958	0					
ANR	440291	UnaryOperator	!		439958	0					
ANR	440292	PtrMemberAccess	cur_block -> access		439958	1					
ANR	440293	Identifier	cur_block		439958	0					
ANR	440294	Identifier	access		439958	1					
ANR	440295	CompoundStatement		53:27:1628:1628	439958	1					
ANR	440296	ContinueStatement	continue ;	1999:4:66594:66602	439958	0	True				
ANR	440297	ExpressionStatement	"zend_jmp_optimization ( cur_block , op_array , cfg . blocks , & cfg , ctx )"	2001:3:66612:66677	439958	1	True				
ANR	440298	CallExpression	"zend_jmp_optimization ( cur_block , op_array , cfg . blocks , & cfg , ctx )"		439958	0					
ANR	440299	Callee	zend_jmp_optimization		439958	0					
ANR	440300	Identifier	zend_jmp_optimization		439958	0					
ANR	440301	ArgumentList	cur_block		439958	1					
ANR	440302	Argument	cur_block		439958	0					
ANR	440303	Identifier	cur_block		439958	0					
ANR	440304	Argument	op_array		439958	1					
ANR	440305	Identifier	op_array		439958	0					
ANR	440306	Argument	cfg . blocks		439958	2					
ANR	440307	MemberAccess	cfg . blocks		439958	0					
ANR	440308	Identifier	cfg		439958	0					
ANR	440309	Identifier	blocks		439958	1					
ANR	440310	Argument	& cfg		439958	3					
ANR	440311	UnaryOperationExpression	& cfg		439958	0					
ANR	440312	UnaryOperator	&		439958	0					
ANR	440313	Identifier	cfg		439958	1					
ANR	440314	Argument	ctx		439958	4					
ANR	440315	Identifier	ctx		439958	0					
ANR	440316	ExpressionStatement	"zend_rebuild_access_path ( & cfg , op_array , 1 , ctx )"	2005:2:66729:66777	439958	4	True				
ANR	440317	CallExpression	"zend_rebuild_access_path ( & cfg , op_array , 1 , ctx )"		439958	0					
ANR	440318	Callee	zend_rebuild_access_path		439958	0					
ANR	440319	Identifier	zend_rebuild_access_path		439958	0					
ANR	440320	ArgumentList	& cfg		439958	1					
ANR	440321	Argument	& cfg		439958	0					
ANR	440322	UnaryOperationExpression	& cfg		439958	0					
ANR	440323	UnaryOperator	&		439958	0					
ANR	440324	Identifier	cfg		439958	1					
ANR	440325	Argument	op_array		439958	1					
ANR	440326	Identifier	op_array		439958	0					
ANR	440327	Argument	1		439958	2					
ANR	440328	PrimaryExpression	1		439958	0					
ANR	440329	Argument	ctx		439958	3					
ANR	440330	Identifier	ctx		439958	0					
ANR	440331	ExpressionStatement	"zend_bitset_clear ( usage , bitset_len )"	2008:1:66784:66820	439958	14	True				
ANR	440332	CallExpression	"zend_bitset_clear ( usage , bitset_len )"		439958	0					
ANR	440333	Callee	zend_bitset_clear		439958	0					
ANR	440334	Identifier	zend_bitset_clear		439958	0					
ANR	440335	ArgumentList	usage		439958	1					
ANR	440336	Argument	usage		439958	0					
ANR	440337	Identifier	usage		439958	0					
ANR	440338	Argument	bitset_len		439958	1					
ANR	440339	Identifier	bitset_len		439958	0					
ANR	440340	ExpressionStatement	"zend_t_usage ( cfg . blocks , op_array , usage , ctx )"	2009:1:66823:66869	439958	15	True				
ANR	440341	CallExpression	"zend_t_usage ( cfg . blocks , op_array , usage , ctx )"		439958	0					
ANR	440342	Callee	zend_t_usage		439958	0					
ANR	440343	Identifier	zend_t_usage		439958	0					
ANR	440344	ArgumentList	cfg . blocks		439958	1					
ANR	440345	Argument	cfg . blocks		439958	0					
ANR	440346	MemberAccess	cfg . blocks		439958	0					
ANR	440347	Identifier	cfg		439958	0					
ANR	440348	Identifier	blocks		439958	1					
ANR	440349	Argument	op_array		439958	1					
ANR	440350	Identifier	op_array		439958	0					
ANR	440351	Argument	usage		439958	2					
ANR	440352	Identifier	usage		439958	0					
ANR	440353	Argument	ctx		439958	3					
ANR	440354	Identifier	ctx		439958	0					
ANR	440355	ExpressionStatement	"assemble_code_blocks ( & cfg , op_array )"	2010:1:66872:66908	439958	16	True				
ANR	440356	CallExpression	"assemble_code_blocks ( & cfg , op_array )"		439958	0					
ANR	440357	Callee	assemble_code_blocks		439958	0					
ANR	440358	Identifier	assemble_code_blocks		439958	0					
ANR	440359	ArgumentList	& cfg		439958	1					
ANR	440360	Argument	& cfg		439958	0					
ANR	440361	UnaryOperationExpression	& cfg		439958	0					
ANR	440362	UnaryOperator	&		439958	0					
ANR	440363	Identifier	cfg		439958	1					
ANR	440364	Argument	op_array		439958	1					
ANR	440365	Identifier	op_array		439958	0					
ANR	440366	ExpressionStatement	"zend_arena_release ( & ctx -> arena , checkpoint )"	2013:1:66931:66974	439958	17	True				
ANR	440367	CallExpression	"zend_arena_release ( & ctx -> arena , checkpoint )"		439958	0					
ANR	440368	Callee	zend_arena_release		439958	0					
ANR	440369	Identifier	zend_arena_release		439958	0					
ANR	440370	ArgumentList	& ctx -> arena		439958	1					
ANR	440371	Argument	& ctx -> arena		439958	0					
ANR	440372	UnaryOperationExpression	& ctx -> arena		439958	0					
ANR	440373	UnaryOperator	&		439958	0					
ANR	440374	PtrMemberAccess	ctx -> arena		439958	1					
ANR	440375	Identifier	ctx		439958	0					
ANR	440376	Identifier	arena		439958	1					
ANR	440377	Argument	checkpoint		439958	1					
ANR	440378	Identifier	checkpoint		439958	0					
ANR	440379	ReturnType	void		439958	1					
ANR	440380	Identifier	optimize_cfg		439958	2					
ANR	440381	ParameterList	"zend_op_array * op_array , zend_optimizer_ctx * ctx"		439958	3					
ANR	440382	Parameter	zend_op_array * op_array	1945:18:64909:64931	439958	0	True				
ANR	440383	ParameterType	zend_op_array *		439958	0					
ANR	440384	Identifier	op_array		439958	1					
ANR	440385	Parameter	zend_optimizer_ctx * ctx	1945:43:64934:64956	439958	1	True				
ANR	440386	ParameterType	zend_optimizer_ctx *		439958	0					
ANR	440387	Identifier	ctx		439958	1					
ANR	440388	CFGEntryNode	ENTRY		439958		True				
ANR	440389	CFGExitNode	EXIT		439958		True				
ANR	440390	Symbol	checkpoint		439958						
ANR	440391	Symbol	PASSES		439958						
ANR	440392	Symbol	zend_bitset_len		439958						
ANR	440393	Symbol	zend_arena_calloc		439958						
ANR	440394	Symbol	bitset_len		439958						
ANR	440395	Symbol	usage		439958						
ANR	440396	Symbol	op_array -> last_var		439958						
ANR	440397	Symbol	cur_block -> access		439958						
ANR	440398	Symbol	& cfg		439958						
ANR	440399	Symbol	op_array -> fn_flags		439958						
ANR	440400	Symbol	cur_block		439958						
ANR	440401	Symbol	ZEND_ACC_HAS_FINALLY_BLOCK		439958						
ANR	440402	Symbol	* cur_block		439958						
ANR	440403	Symbol	ZEND_BITSET_ELM_SIZE		439958						
ANR	440404	Symbol	find_code_blocks		439958						
ANR	440405	Symbol	op_array -> T		439958						
ANR	440406	Symbol	NULL		439958						
ANR	440407	Symbol	zend_arena_alloc		439958						
ANR	440408	Symbol	cfg		439958						
ANR	440409	Symbol	pass		439958						
ANR	440410	Symbol	ctx		439958						
ANR	440411	Symbol	zend_arena_checkpoint		439958						
ANR	440412	Symbol	stderr		439958						
ANR	440413	Symbol	* op_array		439958						
ANR	440414	Symbol	* ctx		439958						
ANR	440415	Symbol	op_array -> function_name		439958						
ANR	440416	Symbol	& ctx -> arena		439958						
ANR	440417	Symbol	cfg . Tsource		439958						
ANR	440418	Symbol	cur_block -> next		439958						
ANR	440419	Symbol	cfg . same_t		439958						
ANR	440420	Symbol	ctx -> arena		439958						
ANR	440421	Symbol	op_array -> filename		439958						
ANR	440422	Symbol	op_array		439958						
ANR	440423	Symbol	cfg . blocks		439958						
