command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2964348	File	data/converged/CVE-2015-8617_php-src/iso8859_13.c								
ANR	2964349	DeclStmt									
ANR	2964350	Decl							const UChar	const UChar [ 256 ]	EncISO_8859_13_ToLowerCaseTable
ANR	2964351	DeclStmt									
ANR	2964352	Decl							const unsigned short	const unsigned short [ 256 ]	EncISO_8859_13_CtypeTable
ANR	2964353	DeclStmt									
ANR	2964354	Decl							const UChar	const UChar *	p
ANR	2964355	Function	is_mbc_ambiguous	125:0:6522:7049							
ANR	2964356	FunctionDef	"is_mbc_ambiguous (OnigCaseFoldType flag , const UChar * * pp , const UChar * end)"		2964355	0					
ANR	2964357	CompoundStatement		127:0:6609:7049	2964355	0					
ANR	2964358	IdentifierDeclStatement	int v ;	128:2:6613:6618	2964355	0	True				
ANR	2964359	IdentifierDecl	v		2964355	0					
ANR	2964360	IdentifierDeclType	int		2964355	0					
ANR	2964361	Identifier	v		2964355	1					
ANR	2964362	IdentifierDeclStatement	const UChar * p = * pp ;	129:2:6622:6642	2964355	1	True				
ANR	2964363	IdentifierDecl	* p = * pp		2964355	0					
ANR	2964364	IdentifierDeclType	const UChar *		2964355	0					
ANR	2964365	Identifier	p		2964355	1					
ANR	2964366	AssignmentExpression	* p = * pp		2964355	2		=			
ANR	2964367	Identifier	p		2964355	0					
ANR	2964368	UnaryOperationExpression	* pp		2964355	1					
ANR	2964369	UnaryOperator	*		2964355	0					
ANR	2964370	Identifier	pp		2964355	1					
ANR	2964371	IfStatement	if ( * p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0 )		2964355	2					
ANR	2964372	Condition	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0	131:6:6651:6715	2964355	0	True				
ANR	2964373	AndExpression	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		2964355	0		&&			
ANR	2964374	EqualityExpression	* p == 0xdf		2964355	0		==			
ANR	2964375	UnaryOperationExpression	* p		2964355	0					
ANR	2964376	UnaryOperator	*		2964355	0					
ANR	2964377	Identifier	p		2964355	1					
ANR	2964378	PrimaryExpression	0xdf		2964355	1					
ANR	2964379	EqualityExpression	( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		2964355	1		!=			
ANR	2964380	BitAndExpression	flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		2964355	0		&			
ANR	2964381	Identifier	flag		2964355	0					
ANR	2964382	Identifier	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		2964355	1					
ANR	2964383	PrimaryExpression	0		2964355	1					
ANR	2964384	CompoundStatement		5:73:108:108	2964355	1					
ANR	2964385	ExpressionStatement	( * pp ) ++	132:4:6724:6731	2964355	0	True				
ANR	2964386	PostIncDecOperationExpression	( * pp ) ++		2964355	0					
ANR	2964387	UnaryOperationExpression	* pp		2964355	0					
ANR	2964388	UnaryOperator	*		2964355	0					
ANR	2964389	Identifier	pp		2964355	1					
ANR	2964390	IncDec	++		2964355	1					
ANR	2964391	ReturnStatement	return TRUE ;	133:4:6737:6748	2964355	1	True				
ANR	2964392	Identifier	TRUE		2964355	0					
ANR	2964393	ExpressionStatement	( * pp ) ++	136:2:6757:6764	2964355	3	True				
ANR	2964394	PostIncDecOperationExpression	( * pp ) ++		2964355	0					
ANR	2964395	UnaryOperationExpression	* pp		2964355	0					
ANR	2964396	UnaryOperator	*		2964355	0					
ANR	2964397	Identifier	pp		2964355	1					
ANR	2964398	IncDec	++		2964355	1					
ANR	2964399	ExpressionStatement	v = ( EncISO_8859_13_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )	137:2:6768:6841	2964355	4	True				
ANR	2964400	AssignmentExpression	v = ( EncISO_8859_13_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )		2964355	0		=			
ANR	2964401	Identifier	v		2964355	0					
ANR	2964402	BitAndExpression	EncISO_8859_13_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER )		2964355	1		&			
ANR	2964403	ArrayIndexing	EncISO_8859_13_CtypeTable [ * p ]		2964355	0					
ANR	2964404	Identifier	EncISO_8859_13_CtypeTable		2964355	0					
ANR	2964405	UnaryOperationExpression	* p		2964355	1					
ANR	2964406	UnaryOperator	*		2964355	0					
ANR	2964407	Identifier	p		2964355	1					
ANR	2964408	InclusiveOrExpression	BIT_CTYPE_UPPER | BIT_CTYPE_LOWER		2964355	1		|			
ANR	2964409	Identifier	BIT_CTYPE_UPPER		2964355	0					
ANR	2964410	Identifier	BIT_CTYPE_LOWER		2964355	1					
ANR	2964411	IfStatement	if ( ( v | BIT_CTYPE_LOWER ) != 0 )		2964355	5					
ANR	2964412	Condition	( v | BIT_CTYPE_LOWER ) != 0	138:6:6849:6874	2964355	0	True				
ANR	2964413	EqualityExpression	( v | BIT_CTYPE_LOWER ) != 0		2964355	0		!=			
ANR	2964414	InclusiveOrExpression	v | BIT_CTYPE_LOWER		2964355	0		|			
ANR	2964415	Identifier	v		2964355	0					
ANR	2964416	Identifier	BIT_CTYPE_LOWER		2964355	1					
ANR	2964417	PrimaryExpression	0		2964355	1					
ANR	2964418	CompoundStatement		12:34:267:267	2964355	1					
ANR	2964419	IfStatement	if ( * p == 0xb5 )		2964355	0					
ANR	2964420	Condition	* p == 0xb5	140:8:6950:6959	2964355	0	True				
ANR	2964421	EqualityExpression	* p == 0xb5		2964355	0		==			
ANR	2964422	UnaryOperationExpression	* p		2964355	0					
ANR	2964423	UnaryOperator	*		2964355	0					
ANR	2964424	Identifier	p		2964355	1					
ANR	2964425	PrimaryExpression	0xb5		2964355	1					
ANR	2964426	ReturnStatement	return FALSE ;	141:6:6968:6980	2964355	1	True				
ANR	2964427	Identifier	FALSE		2964355	0					
ANR	2964428	ElseStatement	else		2964355	0					
ANR	2964429	ReturnStatement	return TRUE ;	143:6:6997:7008	2964355	0	True				
ANR	2964430	Identifier	TRUE		2964355	0					
ANR	2964431	ReturnStatement	return ( v != 0 ? TRUE : FALSE ) ;	146:2:7017:7047	2964355	6	True				
ANR	2964432	ConditionalExpression	v != 0 ? TRUE : FALSE		2964355	0					
ANR	2964433	Condition	v != 0		2964355	0					
ANR	2964434	EqualityExpression	v != 0		2964355	0		!=			
ANR	2964435	Identifier	v		2964355	0					
ANR	2964436	PrimaryExpression	0		2964355	1					
ANR	2964437	Identifier	TRUE		2964355	1					
ANR	2964438	Identifier	FALSE		2964355	2					
ANR	2964439	ReturnType	static int		2964355	1					
ANR	2964440	Identifier	is_mbc_ambiguous		2964355	2					
ANR	2964441	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end"		2964355	3					
ANR	2964442	Parameter	OnigCaseFoldType flag	126:17:6550:6570	2964355	0	True				
ANR	2964443	ParameterType	OnigCaseFoldType		2964355	0					
ANR	2964444	Identifier	flag		2964355	1					
ANR	2964445	Parameter	const UChar * * pp	126:40:6573:6588	2964355	1	True				
ANR	2964446	ParameterType	const UChar * *		2964355	0					
ANR	2964447	Identifier	pp		2964355	1					
ANR	2964448	Parameter	const UChar * end	126:58:6591:6606	2964355	2	True				
ANR	2964449	ParameterType	const UChar *		2964355	0					
ANR	2964450	Identifier	end		2964355	1					
ANR	2964451	CFGEntryNode	ENTRY		2964355		True				
ANR	2964452	CFGExitNode	EXIT		2964355		True				
ANR	2964453	Symbol	pp		2964355						
ANR	2964454	Symbol	flag		2964355						
ANR	2964455	Symbol	* pp		2964355						
ANR	2964456	Symbol	TRUE		2964355						
ANR	2964457	Symbol	p		2964355						
ANR	2964458	Symbol	v		2964355						
ANR	2964459	Symbol	EncISO_8859_13_CtypeTable		2964355						
ANR	2964460	Symbol	BIT_CTYPE_LOWER		2964355						
ANR	2964461	Symbol	* EncISO_8859_13_CtypeTable		2964355						
ANR	2964462	Symbol	end		2964355						
ANR	2964463	Symbol	* p		2964355						
ANR	2964464	Symbol	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		2964355						
ANR	2964465	Symbol	BIT_CTYPE_UPPER		2964355						
ANR	2964466	Symbol	FALSE		2964355						
ANR	2964467	Symbol	* * p		2964355						
ANR	2964468	Function	is_code_ctype	150:0:7059:7219							
ANR	2964469	FunctionDef	"is_code_ctype (OnigCodePoint code , unsigned int ctype)"		2964468	0					
ANR	2964470	CompoundStatement		152:0:7124:7219	2964468	0					
ANR	2964471	IfStatement	if ( code < 256 )		2964468	0					
ANR	2964472	Condition	code < 256	153:6:7132:7141	2964468	0	True				
ANR	2964473	RelationalExpression	code < 256		2964468	0		<			
ANR	2964474	Identifier	code		2964468	0					
ANR	2964475	PrimaryExpression	256		2964468	1					
ANR	2964476	ReturnStatement	"return ENC_IS_ISO_8859_13_CTYPE ( code , ctype ) ;"	154:4:7148:7192	2964468	1	True				
ANR	2964477	CallExpression	"ENC_IS_ISO_8859_13_CTYPE ( code , ctype )"		2964468	0					
ANR	2964478	Callee	ENC_IS_ISO_8859_13_CTYPE		2964468	0					
ANR	2964479	Identifier	ENC_IS_ISO_8859_13_CTYPE		2964468	0					
ANR	2964480	ArgumentList	code		2964468	1					
ANR	2964481	Argument	code		2964468	0					
ANR	2964482	Identifier	code		2964468	0					
ANR	2964483	Argument	ctype		2964468	1					
ANR	2964484	Identifier	ctype		2964468	0					
ANR	2964485	ElseStatement	else		2964468	0					
ANR	2964486	ReturnStatement	return FALSE ;	156:4:7205:7217	2964468	0	True				
ANR	2964487	Identifier	FALSE		2964468	0					
ANR	2964488	ReturnType	static int		2964468	1					
ANR	2964489	Identifier	is_code_ctype		2964468	2					
ANR	2964490	ParameterList	"OnigCodePoint code , unsigned int ctype"		2964468	3					
ANR	2964491	Parameter	OnigCodePoint code	151:14:7084:7101	2964468	0	True				
ANR	2964492	ParameterType	OnigCodePoint		2964468	0					
ANR	2964493	Identifier	code		2964468	1					
ANR	2964494	Parameter	unsigned int ctype	151:34:7104:7121	2964468	1	True				
ANR	2964495	ParameterType	unsigned int		2964468	0					
ANR	2964496	Identifier	ctype		2964468	1					
ANR	2964497	CFGEntryNode	ENTRY		2964468		True				
ANR	2964498	CFGExitNode	EXIT		2964468		True				
ANR	2964499	Symbol	code		2964468						
ANR	2964500	Symbol	ctype		2964468						
ANR	2964501	Symbol	FALSE		2964468						
ANR	2964502	Symbol	ENC_IS_ISO_8859_13_CTYPE		2964468						
ANR	2964503	DeclStmt									
ANR	2964504	Decl							const OnigPairCaseFoldCodes	const OnigPairCaseFoldCodes [ ]	CaseFoldMap
ANR	2964505	Function	apply_all_case_fold	193:0:7789:8045							
ANR	2964506	FunctionDef	"apply_all_case_fold (OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg)"		2964505	0					
ANR	2964507	CompoundStatement		196:0:7888:8045	2964505	0					
ANR	2964508	ReturnStatement	"return onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg ) ;"	197:2:7892:8043	2964505	0	True				
ANR	2964509	CallExpression	"onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg )"		2964505	0					
ANR	2964510	Callee	onigenc_apply_all_case_fold_with_map		2964505	0					
ANR	2964511	Identifier	onigenc_apply_all_case_fold_with_map		2964505	0					
ANR	2964512	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2964505	1					
ANR	2964513	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2964505	0					
ANR	2964514	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2964505	0		/			
ANR	2964515	SizeofExpression	sizeof ( CaseFoldMap )		2964505	0					
ANR	2964516	Sizeof	sizeof		2964505	0					
ANR	2964517	SizeofOperand	CaseFoldMap		2964505	1					
ANR	2964518	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		2964505	1					
ANR	2964519	Sizeof	sizeof		2964505	0					
ANR	2964520	SizeofOperand	OnigPairCaseFoldCodes		2964505	1					
ANR	2964521	Argument	CaseFoldMap		2964505	1					
ANR	2964522	Identifier	CaseFoldMap		2964505	0					
ANR	2964523	Argument	1		2964505	2					
ANR	2964524	PrimaryExpression	1		2964505	0					
ANR	2964525	Argument	flag		2964505	3					
ANR	2964526	Identifier	flag		2964505	0					
ANR	2964527	Argument	f		2964505	4					
ANR	2964528	Identifier	f		2964505	0					
ANR	2964529	Argument	arg		2964505	5					
ANR	2964530	Identifier	arg		2964505	0					
ANR	2964531	ReturnType	static int		2964505	1					
ANR	2964532	Identifier	apply_all_case_fold		2964505	2					
ANR	2964533	ParameterList	"OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg"		2964505	3					
ANR	2964534	Parameter	OnigCaseFoldType flag	194:20:7820:7840	2964505	0	True				
ANR	2964535	ParameterType	OnigCaseFoldType		2964505	0					
ANR	2964536	Identifier	flag		2964505	1					
ANR	2964537	Parameter	OnigApplyAllCaseFoldFunc f	195:6:7849:7874	2964505	1	True				
ANR	2964538	ParameterType	OnigApplyAllCaseFoldFunc		2964505	0					
ANR	2964539	Identifier	f		2964505	1					
ANR	2964540	Parameter	void * arg	195:34:7877:7885	2964505	2	True				
ANR	2964541	ParameterType	void *		2964505	0					
ANR	2964542	Identifier	arg		2964505	1					
ANR	2964543	CFGEntryNode	ENTRY		2964505		True				
ANR	2964544	CFGExitNode	EXIT		2964505		True				
ANR	2964545	Symbol	flag		2964505						
ANR	2964546	Symbol	f		2964505						
ANR	2964547	Symbol	arg		2964505						
ANR	2964548	Symbol	CaseFoldMap		2964505						
ANR	2964549	Symbol	onigenc_apply_all_case_fold_with_map		2964505						
ANR	2964550	Function	get_case_fold_codes_by_str	202:0:8048:8341							
ANR	2964551	FunctionDef	"get_case_fold_codes_by_str (OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ])"		2964550	0					
ANR	2964552	CompoundStatement		205:0:8184:8341	2964550	0					
ANR	2964553	ReturnStatement	"return onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items ) ;"	206:2:8188:8339	2964550	0	True				
ANR	2964554	CallExpression	"onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items )"		2964550	0					
ANR	2964555	Callee	onigenc_get_case_fold_codes_by_str_with_map		2964550	0					
ANR	2964556	Identifier	onigenc_get_case_fold_codes_by_str_with_map		2964550	0					
ANR	2964557	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2964550	1					
ANR	2964558	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2964550	0					
ANR	2964559	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2964550	0		/			
ANR	2964560	SizeofExpression	sizeof ( CaseFoldMap )		2964550	0					
ANR	2964561	Sizeof	sizeof		2964550	0					
ANR	2964562	SizeofOperand	CaseFoldMap		2964550	1					
ANR	2964563	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		2964550	1					
ANR	2964564	Sizeof	sizeof		2964550	0					
ANR	2964565	SizeofOperand	OnigPairCaseFoldCodes		2964550	1					
ANR	2964566	Argument	CaseFoldMap		2964550	1					
ANR	2964567	Identifier	CaseFoldMap		2964550	0					
ANR	2964568	Argument	1		2964550	2					
ANR	2964569	PrimaryExpression	1		2964550	0					
ANR	2964570	Argument	flag		2964550	3					
ANR	2964571	Identifier	flag		2964550	0					
ANR	2964572	Argument	p		2964550	4					
ANR	2964573	Identifier	p		2964550	0					
ANR	2964574	Argument	end		2964550	5					
ANR	2964575	Identifier	end		2964550	0					
ANR	2964576	Argument	items		2964550	6					
ANR	2964577	Identifier	items		2964550	0					
ANR	2964578	ReturnType	static int		2964550	1					
ANR	2964579	Identifier	get_case_fold_codes_by_str		2964550	2					
ANR	2964580	ParameterList	"OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ]"		2964550	3					
ANR	2964581	Parameter	OnigCaseFoldType flag	203:27:8086:8106	2964550	0	True				
ANR	2964582	ParameterType	OnigCaseFoldType		2964550	0					
ANR	2964583	Identifier	flag		2964550	1					
ANR	2964584	Parameter	const OnigUChar * p	204:3:8112:8129	2964550	1	True				
ANR	2964585	ParameterType	const OnigUChar *		2964550	0					
ANR	2964586	Identifier	p		2964550	1					
ANR	2964587	Parameter	const OnigUChar * end	204:23:8132:8151	2964550	2	True				
ANR	2964588	ParameterType	const OnigUChar *		2964550	0					
ANR	2964589	Identifier	end		2964550	1					
ANR	2964590	Parameter	OnigCaseFoldCodeItem items [ ]	204:45:8154:8181	2964550	3	True				
ANR	2964591	ParameterType	OnigCaseFoldCodeItem [ ]		2964550	0					
ANR	2964592	Identifier	items		2964550	1					
ANR	2964593	CFGEntryNode	ENTRY		2964550		True				
ANR	2964594	CFGExitNode	EXIT		2964550		True				
ANR	2964595	Symbol	p		2964550						
ANR	2964596	Symbol	flag		2964550						
ANR	2964597	Symbol	end		2964550						
ANR	2964598	Symbol	CaseFoldMap		2964550						
ANR	2964599	Symbol	onigenc_get_case_fold_codes_by_str_with_map		2964550						
ANR	2964600	Symbol	items		2964550						
ANR	2964601	DeclStmt									
ANR	2964602	Decl							OnigEncodingType	OnigEncodingType	OnigEncodingISO_8859_13
