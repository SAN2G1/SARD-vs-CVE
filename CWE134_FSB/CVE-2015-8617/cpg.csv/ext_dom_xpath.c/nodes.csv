command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	726101	File	data/converged/CVE-2015-8617_php-src/ext_dom_xpath.c								
ANR	726102	DeclStmt									
ANR	726103	Decl							const zend_function_entry	const zend_function_entry [ ]	php_dom_xpath_class_functions
ANR	726104	Function	dom_xpath_ext_function_php	75:0:2703:7862							
ANR	726105	FunctionDef	"dom_xpath_ext_function_php (xmlXPathParserContextPtr ctxt , int nargs , int type)"		726104	0					
ANR	726106	CompoundStatement		76:0:2804:7862	726104	0					
ANR	726107	IdentifierDeclStatement	zval retval ;	77:1:2807:2818	726104	0	True				
ANR	726108	IdentifierDecl	retval		726104	0					
ANR	726109	IdentifierDeclType	zval		726104	0					
ANR	726110	Identifier	retval		726104	1					
ANR	726111	IdentifierDeclStatement	"int result , i ;"	78:1:2821:2834	726104	1	True				
ANR	726112	IdentifierDecl	result		726104	0					
ANR	726113	IdentifierDeclType	int		726104	0					
ANR	726114	Identifier	result		726104	1					
ANR	726115	IdentifierDecl	i		726104	1					
ANR	726116	IdentifierDeclType	int		726104	0					
ANR	726117	Identifier	i		726104	1					
ANR	726118	IdentifierDeclStatement	int error = 0 ;	79:1:2837:2850	726104	2	True				
ANR	726119	IdentifierDecl	error = 0		726104	0					
ANR	726120	IdentifierDeclType	int		726104	0					
ANR	726121	Identifier	error		726104	1					
ANR	726122	AssignmentExpression	error = 0		726104	2		=			
ANR	726123	Identifier	error		726104	0					
ANR	726124	PrimaryExpression	0		726104	1					
ANR	726125	IdentifierDeclStatement	zend_fcall_info fci ;	80:1:2853:2872	726104	3	True				
ANR	726126	IdentifierDecl	fci		726104	0					
ANR	726127	IdentifierDeclType	zend_fcall_info		726104	0					
ANR	726128	Identifier	fci		726104	1					
ANR	726129	IdentifierDeclStatement	xmlXPathObjectPtr obj ;	81:1:2875:2896	726104	4	True				
ANR	726130	IdentifierDecl	obj		726104	0					
ANR	726131	IdentifierDeclType	xmlXPathObjectPtr		726104	0					
ANR	726132	Identifier	obj		726104	1					
ANR	726133	IdentifierDeclStatement	char * str ;	82:1:2899:2908	726104	5	True				
ANR	726134	IdentifierDecl	* str		726104	0					
ANR	726135	IdentifierDeclType	char *		726104	0					
ANR	726136	Identifier	str		726104	1					
ANR	726137	IdentifierDeclStatement	zend_string * callable = NULL ;	83:1:2911:2939	726104	6	True				
ANR	726138	IdentifierDecl	* callable = NULL		726104	0					
ANR	726139	IdentifierDeclType	zend_string *		726104	0					
ANR	726140	Identifier	callable		726104	1					
ANR	726141	AssignmentExpression	* callable = NULL		726104	2		=			
ANR	726142	Identifier	NULL		726104	0					
ANR	726143	Identifier	NULL		726104	1					
ANR	726144	IdentifierDeclStatement	dom_xpath_object * intern ;	84:1:2942:2966	726104	7	True				
ANR	726145	IdentifierDecl	* intern		726104	0					
ANR	726146	IdentifierDeclType	dom_xpath_object *		726104	0					
ANR	726147	Identifier	intern		726104	1					
ANR	726148	IfStatement	if ( ! zend_is_executing ( ) )		726104	8					
ANR	726149	Condition	! zend_is_executing ( )	87:5:2975:2995	726104	0	True				
ANR	726150	UnaryOperationExpression	! zend_is_executing ( )		726104	0					
ANR	726151	UnaryOperator	!		726104	0					
ANR	726152	CallExpression	zend_is_executing ( )		726104	1					
ANR	726153	Callee	zend_is_executing		726104	0					
ANR	726154	Identifier	zend_is_executing		726104	0					
ANR	726155	ArgumentList			726104	1					
ANR	726156	CompoundStatement		12:28:193:193	726104	1					
ANR	726157	ExpressionStatement	"xmlGenericError ( xmlGenericErrorContext , ""xmlExtFunctionTest: Function called from outside of PHP\\n"" )"	88:2:3002:3104	726104	0	True				
ANR	726158	CallExpression	"xmlGenericError ( xmlGenericErrorContext , ""xmlExtFunctionTest: Function called from outside of PHP\\n"" )"		726104	0					
ANR	726159	Callee	xmlGenericError		726104	0					
ANR	726160	Identifier	xmlGenericError		726104	0					
ANR	726161	ArgumentList	xmlGenericErrorContext		726104	1					
ANR	726162	Argument	xmlGenericErrorContext		726104	0					
ANR	726163	Identifier	xmlGenericErrorContext		726104	0					
ANR	726164	Argument	"""xmlExtFunctionTest: Function called from outside of PHP\\n"""		726104	1					
ANR	726165	PrimaryExpression	"""xmlExtFunctionTest: Function called from outside of PHP\\n"""		726104	0					
ANR	726166	ExpressionStatement	error = 1	90:2:3108:3117	726104	1	True				
ANR	726167	AssignmentExpression	error = 1		726104	0		=			
ANR	726168	Identifier	error		726104	0					
ANR	726169	PrimaryExpression	1		726104	1					
ANR	726170	ElseStatement	else		726104	0					
ANR	726171	CompoundStatement		16:8:322:322	726104	0					
ANR	726172	ExpressionStatement	intern = ( dom_xpath_object * ) ctxt -> context -> userData	92:2:3131:3184	726104	0	True				
ANR	726173	AssignmentExpression	intern = ( dom_xpath_object * ) ctxt -> context -> userData		726104	0		=			
ANR	726174	Identifier	intern		726104	0					
ANR	726175	CastExpression	( dom_xpath_object * ) ctxt -> context -> userData		726104	1					
ANR	726176	CastTarget	dom_xpath_object *		726104	0					
ANR	726177	PtrMemberAccess	ctxt -> context -> userData		726104	1					
ANR	726178	PtrMemberAccess	ctxt -> context		726104	0					
ANR	726179	Identifier	ctxt		726104	0					
ANR	726180	Identifier	context		726104	1					
ANR	726181	Identifier	userData		726104	1					
ANR	726182	IfStatement	if ( intern == NULL )		726104	1					
ANR	726183	Condition	intern == NULL	93:6:3192:3205	726104	0	True				
ANR	726184	EqualityExpression	intern == NULL		726104	0		==			
ANR	726185	Identifier	intern		726104	0					
ANR	726186	Identifier	NULL		726104	1					
ANR	726187	CompoundStatement		18:22:403:403	726104	1					
ANR	726188	ExpressionStatement	"xmlGenericError ( xmlGenericErrorContext , ""xmlExtFunctionTest: failed to get the internal object\\n"" )"	94:3:3213:3314	726104	0	True				
ANR	726189	CallExpression	"xmlGenericError ( xmlGenericErrorContext , ""xmlExtFunctionTest: failed to get the internal object\\n"" )"		726104	0					
ANR	726190	Callee	xmlGenericError		726104	0					
ANR	726191	Identifier	xmlGenericError		726104	0					
ANR	726192	ArgumentList	xmlGenericErrorContext		726104	1					
ANR	726193	Argument	xmlGenericErrorContext		726104	0					
ANR	726194	Identifier	xmlGenericErrorContext		726104	0					
ANR	726195	Argument	"""xmlExtFunctionTest: failed to get the internal object\\n"""		726104	1					
ANR	726196	PrimaryExpression	"""xmlExtFunctionTest: failed to get the internal object\\n"""		726104	0					
ANR	726197	ExpressionStatement	error = 1	96:3:3319:3328	726104	1	True				
ANR	726198	AssignmentExpression	error = 1		726104	0		=			
ANR	726199	Identifier	error		726104	0					
ANR	726200	PrimaryExpression	1		726104	1					
ANR	726201	ElseStatement	else		726104	0					
ANR	726202	IfStatement	if ( intern -> registerPhpFunctions == 0 )		726104	0					
ANR	726203	Condition	intern -> registerPhpFunctions == 0	98:11:3345:3377	726104	0	True				
ANR	726204	EqualityExpression	intern -> registerPhpFunctions == 0		726104	0		==			
ANR	726205	PtrMemberAccess	intern -> registerPhpFunctions		726104	0					
ANR	726206	Identifier	intern		726104	0					
ANR	726207	Identifier	registerPhpFunctions		726104	1					
ANR	726208	PrimaryExpression	0		726104	1					
ANR	726209	CompoundStatement		23:46:575:575	726104	1					
ANR	726210	ExpressionStatement	"xmlGenericError ( xmlGenericErrorContext , ""xmlExtFunctionTest: PHP Object did not register PHP functions\\n"" )"	99:3:3385:3494	726104	0	True				
ANR	726211	CallExpression	"xmlGenericError ( xmlGenericErrorContext , ""xmlExtFunctionTest: PHP Object did not register PHP functions\\n"" )"		726104	0					
ANR	726212	Callee	xmlGenericError		726104	0					
ANR	726213	Identifier	xmlGenericError		726104	0					
ANR	726214	ArgumentList	xmlGenericErrorContext		726104	1					
ANR	726215	Argument	xmlGenericErrorContext		726104	0					
ANR	726216	Identifier	xmlGenericErrorContext		726104	0					
ANR	726217	Argument	"""xmlExtFunctionTest: PHP Object did not register PHP functions\\n"""		726104	1					
ANR	726218	PrimaryExpression	"""xmlExtFunctionTest: PHP Object did not register PHP functions\\n"""		726104	0					
ANR	726219	ExpressionStatement	error = 1	101:3:3499:3508	726104	1	True				
ANR	726220	AssignmentExpression	error = 1		726104	0		=			
ANR	726221	Identifier	error		726104	0					
ANR	726222	PrimaryExpression	1		726104	1					
ANR	726223	IfStatement	if ( error == 1 )		726104	9					
ANR	726224	Condition	error == 1	105:5:3523:3532	726104	0	True				
ANR	726225	EqualityExpression	error == 1		726104	0		==			
ANR	726226	Identifier	error		726104	0					
ANR	726227	PrimaryExpression	1		726104	1					
ANR	726228	CompoundStatement		30:17:730:730	726104	1					
ANR	726229	ForStatement	for ( i = nargs - 1 ; i >= 0 ; i -- )		726104	0					
ANR	726230	ForInit	i = nargs - 1 ;	106:7:3544:3557	726104	0	True				
ANR	726231	AssignmentExpression	i = nargs - 1		726104	0		=			
ANR	726232	Identifier	i		726104	0					
ANR	726233	AdditiveExpression	nargs - 1		726104	1		-			
ANR	726234	Identifier	nargs		726104	0					
ANR	726235	PrimaryExpression	1		726104	1					
ANR	726236	Condition	i >= 0	106:22:3559:3564	726104	1	True				
ANR	726237	RelationalExpression	i >= 0		726104	0		>=			
ANR	726238	Identifier	i		726104	0					
ANR	726239	PrimaryExpression	0		726104	1					
ANR	726240	PostIncDecOperationExpression	i --	106:30:3567:3569	726104	2	True				
ANR	726241	Identifier	i		726104	0					
ANR	726242	IncDec	--		726104	1					
ANR	726243	CompoundStatement		31:35:767:767	726104	3					
ANR	726244	ExpressionStatement	obj = valuePop ( ctxt )	107:3:3577:3597	726104	0	True				
ANR	726245	AssignmentExpression	obj = valuePop ( ctxt )		726104	0		=			
ANR	726246	Identifier	obj		726104	0					
ANR	726247	CallExpression	valuePop ( ctxt )		726104	1					
ANR	726248	Callee	valuePop		726104	0					
ANR	726249	Identifier	valuePop		726104	0					
ANR	726250	ArgumentList	ctxt		726104	1					
ANR	726251	Argument	ctxt		726104	0					
ANR	726252	Identifier	ctxt		726104	0					
ANR	726253	ExpressionStatement	xmlXPathFreeObject ( obj )	108:3:3602:3625	726104	1	True				
ANR	726254	CallExpression	xmlXPathFreeObject ( obj )		726104	0					
ANR	726255	Callee	xmlXPathFreeObject		726104	0					
ANR	726256	Identifier	xmlXPathFreeObject		726104	0					
ANR	726257	ArgumentList	obj		726104	1					
ANR	726258	Argument	obj		726104	0					
ANR	726259	Identifier	obj		726104	0					
ANR	726260	ReturnStatement	return ;	110:2:3633:3639	726104	1	True				
ANR	726261	ExpressionStatement	fci . param_count = nargs - 1	113:1:3646:3673	726104	10	True				
ANR	726262	AssignmentExpression	fci . param_count = nargs - 1		726104	0		=			
ANR	726263	MemberAccess	fci . param_count		726104	0					
ANR	726264	Identifier	fci		726104	0					
ANR	726265	Identifier	param_count		726104	1					
ANR	726266	AdditiveExpression	nargs - 1		726104	1		-			
ANR	726267	Identifier	nargs		726104	0					
ANR	726268	PrimaryExpression	1		726104	1					
ANR	726269	IfStatement	if ( fci . param_count > 0 )		726104	11					
ANR	726270	Condition	fci . param_count > 0	114:5:3680:3698	726104	0	True				
ANR	726271	RelationalExpression	fci . param_count > 0		726104	0		>			
ANR	726272	MemberAccess	fci . param_count		726104	0					
ANR	726273	Identifier	fci		726104	0					
ANR	726274	Identifier	param_count		726104	1					
ANR	726275	PrimaryExpression	0		726104	1					
ANR	726276	CompoundStatement		39:26:896:896	726104	1					
ANR	726277	ExpressionStatement	"fci . params = safe_emalloc ( fci . param_count , sizeof ( zval ) , 0 )"	115:2:3705:3764	726104	0	True				
ANR	726278	AssignmentExpression	"fci . params = safe_emalloc ( fci . param_count , sizeof ( zval ) , 0 )"		726104	0		=			
ANR	726279	MemberAccess	fci . params		726104	0					
ANR	726280	Identifier	fci		726104	0					
ANR	726281	Identifier	params		726104	1					
ANR	726282	CallExpression	"safe_emalloc ( fci . param_count , sizeof ( zval ) , 0 )"		726104	1					
ANR	726283	Callee	safe_emalloc		726104	0					
ANR	726284	Identifier	safe_emalloc		726104	0					
ANR	726285	ArgumentList	fci . param_count		726104	1					
ANR	726286	Argument	fci . param_count		726104	0					
ANR	726287	MemberAccess	fci . param_count		726104	0					
ANR	726288	Identifier	fci		726104	0					
ANR	726289	Identifier	param_count		726104	1					
ANR	726290	Argument	sizeof ( zval )		726104	1					
ANR	726291	SizeofExpression	sizeof ( zval )		726104	0					
ANR	726292	Sizeof	sizeof		726104	0					
ANR	726293	SizeofOperand	zval		726104	1					
ANR	726294	Argument	0		726104	2					
ANR	726295	PrimaryExpression	0		726104	0					
ANR	726296	ForStatement	for ( i = nargs - 2 ; i >= 0 ; i -- )		726104	12					
ANR	726297	ForInit	i = nargs - 2 ;	118:6:3825:3838	726104	0	True				
ANR	726298	AssignmentExpression	i = nargs - 2		726104	0		=			
ANR	726299	Identifier	i		726104	0					
ANR	726300	AdditiveExpression	nargs - 2		726104	1		-			
ANR	726301	Identifier	nargs		726104	0					
ANR	726302	PrimaryExpression	2		726104	1					
ANR	726303	Condition	i >= 0	118:21:3840:3845	726104	1	True				
ANR	726304	RelationalExpression	i >= 0		726104	0		>=			
ANR	726305	Identifier	i		726104	0					
ANR	726306	PrimaryExpression	0		726104	1					
ANR	726307	PostIncDecOperationExpression	i --	118:29:3848:3850	726104	2	True				
ANR	726308	Identifier	i		726104	0					
ANR	726309	IncDec	--		726104	1					
ANR	726310	CompoundStatement		43:34:1048:1048	726104	3					
ANR	726311	ExpressionStatement	obj = valuePop ( ctxt )	119:2:3857:3877	726104	0	True				
ANR	726312	AssignmentExpression	obj = valuePop ( ctxt )		726104	0		=			
ANR	726313	Identifier	obj		726104	0					
ANR	726314	CallExpression	valuePop ( ctxt )		726104	1					
ANR	726315	Callee	valuePop		726104	0					
ANR	726316	Identifier	valuePop		726104	0					
ANR	726317	ArgumentList	ctxt		726104	1					
ANR	726318	Argument	ctxt		726104	0					
ANR	726319	Identifier	ctxt		726104	0					
ANR	726320	SwitchStatement	switch ( obj -> type )		726104	1					
ANR	726321	Condition	obj -> type	120:10:3889:3897	726104	0	True				
ANR	726322	PtrMemberAccess	obj -> type		726104	0					
ANR	726323	Identifier	obj		726104	0					
ANR	726324	Identifier	type		726104	1					
ANR	726325	CompoundStatement		45:21:1095:1095	726104	1					
ANR	726326	Label	case XPATH_STRING :	121:3:3905:3922	726104	0	True				
ANR	726327	Identifier	XPATH_STRING		726104	0					
ANR	726328	ExpressionStatement	"ZVAL_STRING ( & fci . params [ i ] , ( char * ) obj -> stringval )"	122:4:3928:3980	726104	1	True				
ANR	726329	CallExpression	"ZVAL_STRING ( & fci . params [ i ] , ( char * ) obj -> stringval )"		726104	0					
ANR	726330	Callee	ZVAL_STRING		726104	0					
ANR	726331	Identifier	ZVAL_STRING		726104	0					
ANR	726332	ArgumentList	& fci . params [ i ]		726104	1					
ANR	726333	Argument	& fci . params [ i ]		726104	0					
ANR	726334	UnaryOperationExpression	& fci . params [ i ]		726104	0					
ANR	726335	UnaryOperator	&		726104	0					
ANR	726336	ArrayIndexing	fci . params [ i ]		726104	1					
ANR	726337	MemberAccess	fci . params		726104	0					
ANR	726338	Identifier	fci		726104	0					
ANR	726339	Identifier	params		726104	1					
ANR	726340	Identifier	i		726104	1					
ANR	726341	Argument	( char * ) obj -> stringval		726104	1					
ANR	726342	CastExpression	( char * ) obj -> stringval		726104	0					
ANR	726343	CastTarget	char *		726104	0					
ANR	726344	PtrMemberAccess	obj -> stringval		726104	1					
ANR	726345	Identifier	obj		726104	0					
ANR	726346	Identifier	stringval		726104	1					
ANR	726347	BreakStatement	break ;	123:4:3986:3991	726104	2	True				
ANR	726348	Label	case XPATH_BOOLEAN :	124:3:3996:4014	726104	3	True				
ANR	726349	Identifier	XPATH_BOOLEAN		726104	0					
ANR	726350	ExpressionStatement	"ZVAL_BOOL ( & fci . params [ i ] , obj -> boolval )"	125:4:4020:4060	726104	4	True				
ANR	726351	CallExpression	"ZVAL_BOOL ( & fci . params [ i ] , obj -> boolval )"		726104	0					
ANR	726352	Callee	ZVAL_BOOL		726104	0					
ANR	726353	Identifier	ZVAL_BOOL		726104	0					
ANR	726354	ArgumentList	& fci . params [ i ]		726104	1					
ANR	726355	Argument	& fci . params [ i ]		726104	0					
ANR	726356	UnaryOperationExpression	& fci . params [ i ]		726104	0					
ANR	726357	UnaryOperator	&		726104	0					
ANR	726358	ArrayIndexing	fci . params [ i ]		726104	1					
ANR	726359	MemberAccess	fci . params		726104	0					
ANR	726360	Identifier	fci		726104	0					
ANR	726361	Identifier	params		726104	1					
ANR	726362	Identifier	i		726104	1					
ANR	726363	Argument	obj -> boolval		726104	1					
ANR	726364	PtrMemberAccess	obj -> boolval		726104	0					
ANR	726365	Identifier	obj		726104	0					
ANR	726366	Identifier	boolval		726104	1					
ANR	726367	BreakStatement	break ;	126:4:4066:4071	726104	5	True				
ANR	726368	Label	case XPATH_NUMBER :	127:3:4076:4093	726104	6	True				
ANR	726369	Identifier	XPATH_NUMBER		726104	0					
ANR	726370	ExpressionStatement	"ZVAL_DOUBLE ( & fci . params [ i ] , obj -> floatval )"	128:4:4099:4141	726104	7	True				
ANR	726371	CallExpression	"ZVAL_DOUBLE ( & fci . params [ i ] , obj -> floatval )"		726104	0					
ANR	726372	Callee	ZVAL_DOUBLE		726104	0					
ANR	726373	Identifier	ZVAL_DOUBLE		726104	0					
ANR	726374	ArgumentList	& fci . params [ i ]		726104	1					
ANR	726375	Argument	& fci . params [ i ]		726104	0					
ANR	726376	UnaryOperationExpression	& fci . params [ i ]		726104	0					
ANR	726377	UnaryOperator	&		726104	0					
ANR	726378	ArrayIndexing	fci . params [ i ]		726104	1					
ANR	726379	MemberAccess	fci . params		726104	0					
ANR	726380	Identifier	fci		726104	0					
ANR	726381	Identifier	params		726104	1					
ANR	726382	Identifier	i		726104	1					
ANR	726383	Argument	obj -> floatval		726104	1					
ANR	726384	PtrMemberAccess	obj -> floatval		726104	0					
ANR	726385	Identifier	obj		726104	0					
ANR	726386	Identifier	floatval		726104	1					
ANR	726387	BreakStatement	break ;	129:4:4147:4152	726104	8	True				
ANR	726388	Label	case XPATH_NODESET :	130:3:4157:4175	726104	9	True				
ANR	726389	Identifier	XPATH_NODESET		726104	0					
ANR	726390	IfStatement	if ( type == 1 )		726104	10					
ANR	726391	Condition	type == 1	131:8:4185:4193	726104	0	True				
ANR	726392	EqualityExpression	type == 1		726104	0		==			
ANR	726393	Identifier	type		726104	0					
ANR	726394	PrimaryExpression	1		726104	1					
ANR	726395	CompoundStatement		56:19:1391:1391	726104	1					
ANR	726396	ExpressionStatement	str = ( char * ) xmlXPathCastToString ( obj )	132:5:4203:4242	726104	0	True				
ANR	726397	AssignmentExpression	str = ( char * ) xmlXPathCastToString ( obj )		726104	0		=			
ANR	726398	Identifier	str		726104	0					
ANR	726399	CastExpression	( char * ) xmlXPathCastToString ( obj )		726104	1					
ANR	726400	CastTarget	char *		726104	0					
ANR	726401	CallExpression	xmlXPathCastToString ( obj )		726104	1					
ANR	726402	Callee	xmlXPathCastToString		726104	0					
ANR	726403	Identifier	xmlXPathCastToString		726104	0					
ANR	726404	ArgumentList	obj		726104	1					
ANR	726405	Argument	obj		726104	0					
ANR	726406	Identifier	obj		726104	0					
ANR	726407	ExpressionStatement	"ZVAL_STRING ( & fci . params [ i ] , str )"	133:5:4249:4281	726104	1	True				
ANR	726408	CallExpression	"ZVAL_STRING ( & fci . params [ i ] , str )"		726104	0					
ANR	726409	Callee	ZVAL_STRING		726104	0					
ANR	726410	Identifier	ZVAL_STRING		726104	0					
ANR	726411	ArgumentList	& fci . params [ i ]		726104	1					
ANR	726412	Argument	& fci . params [ i ]		726104	0					
ANR	726413	UnaryOperationExpression	& fci . params [ i ]		726104	0					
ANR	726414	UnaryOperator	&		726104	0					
ANR	726415	ArrayIndexing	fci . params [ i ]		726104	1					
ANR	726416	MemberAccess	fci . params		726104	0					
ANR	726417	Identifier	fci		726104	0					
ANR	726418	Identifier	params		726104	1					
ANR	726419	Identifier	i		726104	1					
ANR	726420	Argument	str		726104	1					
ANR	726421	Identifier	str		726104	0					
ANR	726422	ExpressionStatement	xmlFree ( str )	134:5:4288:4300	726104	2	True				
ANR	726423	CallExpression	xmlFree ( str )		726104	0					
ANR	726424	Callee	xmlFree		726104	0					
ANR	726425	Identifier	xmlFree		726104	0					
ANR	726426	ArgumentList	str		726104	1					
ANR	726427	Argument	str		726104	0					
ANR	726428	Identifier	str		726104	0					
ANR	726429	ElseStatement	else		726104	0					
ANR	726430	IfStatement	if ( type == 2 )		726104	0					
ANR	726431	Condition	type == 2	135:15:4317:4325	726104	0	True				
ANR	726432	EqualityExpression	type == 2		726104	0		==			
ANR	726433	Identifier	type		726104	0					
ANR	726434	PrimaryExpression	2		726104	1					
ANR	726435	CompoundStatement		61:5:1530:1535	726104	1					
ANR	726436	IdentifierDeclStatement	int j ;	136:5:4335:4340	726104	0	True				
ANR	726437	IdentifierDecl	j		726104	0					
ANR	726438	IdentifierDeclType	int		726104	0					
ANR	726439	Identifier	j		726104	1					
ANR	726440	ExpressionStatement	array_init ( & fci . params [ i ] )	137:5:4347:4373	726104	1	True				
ANR	726441	CallExpression	array_init ( & fci . params [ i ] )		726104	0					
ANR	726442	Callee	array_init		726104	0					
ANR	726443	Identifier	array_init		726104	0					
ANR	726444	ArgumentList	& fci . params [ i ]		726104	1					
ANR	726445	Argument	& fci . params [ i ]		726104	0					
ANR	726446	UnaryOperationExpression	& fci . params [ i ]		726104	0					
ANR	726447	UnaryOperator	&		726104	0					
ANR	726448	ArrayIndexing	fci . params [ i ]		726104	1					
ANR	726449	MemberAccess	fci . params		726104	0					
ANR	726450	Identifier	fci		726104	0					
ANR	726451	Identifier	params		726104	1					
ANR	726452	Identifier	i		726104	1					
ANR	726453	IfStatement	if ( obj -> nodesetval && obj -> nodesetval -> nodeNr > 0 )		726104	2					
ANR	726454	Condition	obj -> nodesetval && obj -> nodesetval -> nodeNr > 0	138:9:4384:4429	726104	0	True				
ANR	726455	AndExpression	obj -> nodesetval && obj -> nodesetval -> nodeNr > 0		726104	0		&&			
ANR	726456	PtrMemberAccess	obj -> nodesetval		726104	0					
ANR	726457	Identifier	obj		726104	0					
ANR	726458	Identifier	nodesetval		726104	1					
ANR	726459	RelationalExpression	obj -> nodesetval -> nodeNr > 0		726104	1		>			
ANR	726460	PtrMemberAccess	obj -> nodesetval -> nodeNr		726104	0					
ANR	726461	PtrMemberAccess	obj -> nodesetval		726104	0					
ANR	726462	Identifier	obj		726104	0					
ANR	726463	Identifier	nodesetval		726104	1					
ANR	726464	Identifier	nodeNr		726104	1					
ANR	726465	PrimaryExpression	0		726104	1					
ANR	726466	CompoundStatement		63:57:1627:1627	726104	1					
ANR	726467	ForStatement	for ( j = 0 ; j < obj -> nodesetval -> nodeNr ; j ++ )		726104	0					
ANR	726468	ForInit	j = 0 ;	139:11:4445:4450	726104	0	True				
ANR	726469	AssignmentExpression	j = 0		726104	0		=			
ANR	726470	Identifier	j		726104	0					
ANR	726471	PrimaryExpression	0		726104	1					
ANR	726472	Condition	j < obj -> nodesetval -> nodeNr	139:18:4452:4478	726104	1	True				
ANR	726473	RelationalExpression	j < obj -> nodesetval -> nodeNr		726104	0		<			
ANR	726474	Identifier	j		726104	0					
ANR	726475	PtrMemberAccess	obj -> nodesetval -> nodeNr		726104	1					
ANR	726476	PtrMemberAccess	obj -> nodesetval		726104	0					
ANR	726477	Identifier	obj		726104	0					
ANR	726478	Identifier	nodesetval		726104	1					
ANR	726479	Identifier	nodeNr		726104	1					
ANR	726480	PostIncDecOperationExpression	j ++	139:47:4481:4483	726104	2	True				
ANR	726481	Identifier	j		726104	0					
ANR	726482	IncDec	++		726104	1					
ANR	726483	CompoundStatement		66:7:1744:1754	726104	3					
ANR	726484	IdentifierDeclStatement	xmlNodePtr node = obj -> nodesetval -> nodeTab [ j ] ;	140:7:4495:4540	726104	0	True				
ANR	726485	IdentifierDecl	node = obj -> nodesetval -> nodeTab [ j ]		726104	0					
ANR	726486	IdentifierDeclType	xmlNodePtr		726104	0					
ANR	726487	Identifier	node		726104	1					
ANR	726488	AssignmentExpression	node = obj -> nodesetval -> nodeTab [ j ]		726104	2		=			
ANR	726489	Identifier	node		726104	0					
ANR	726490	ArrayIndexing	obj -> nodesetval -> nodeTab [ j ]		726104	1					
ANR	726491	PtrMemberAccess	obj -> nodesetval -> nodeTab		726104	0					
ANR	726492	PtrMemberAccess	obj -> nodesetval		726104	0					
ANR	726493	Identifier	obj		726104	0					
ANR	726494	Identifier	nodesetval		726104	1					
ANR	726495	Identifier	nodeTab		726104	1					
ANR	726496	Identifier	j		726104	1					
ANR	726497	IdentifierDeclStatement	zval child ;	141:7:4549:4559	726104	1	True				
ANR	726498	IdentifierDecl	child		726104	0					
ANR	726499	IdentifierDeclType	zval		726104	0					
ANR	726500	Identifier	child		726104	1					
ANR	726501	IfStatement	if ( node -> type == XML_NAMESPACE_DECL )		726104	2					
ANR	726502	Condition	node -> type == XML_NAMESPACE_DECL	143:11:4639:4670	726104	0	True				
ANR	726503	EqualityExpression	node -> type == XML_NAMESPACE_DECL		726104	0		==			
ANR	726504	PtrMemberAccess	node -> type		726104	0					
ANR	726505	Identifier	node		726104	0					
ANR	726506	Identifier	type		726104	1					
ANR	726507	Identifier	XML_NAMESPACE_DECL		726104	1					
ANR	726508	CompoundStatement		70:8:1902:1921	726104	1					
ANR	726509	IdentifierDeclStatement	xmlNsPtr curns ;	144:8:4683:4697	726104	0	True				
ANR	726510	IdentifierDecl	curns		726104	0					
ANR	726511	IdentifierDeclType	xmlNsPtr		726104	0					
ANR	726512	Identifier	curns		726104	1					
ANR	726513	IdentifierDeclStatement	xmlNodePtr nsparent ;	145:8:4707:4726	726104	1	True				
ANR	726514	IdentifierDecl	nsparent		726104	0					
ANR	726515	IdentifierDeclType	xmlNodePtr		726104	0					
ANR	726516	Identifier	nsparent		726104	1					
ANR	726517	ExpressionStatement	nsparent = node -> _private	147:8:4737:4762	726104	2	True				
ANR	726518	AssignmentExpression	nsparent = node -> _private		726104	0		=			
ANR	726519	Identifier	nsparent		726104	0					
ANR	726520	PtrMemberAccess	node -> _private		726104	1					
ANR	726521	Identifier	node		726104	0					
ANR	726522	Identifier	_private		726104	1					
ANR	726523	ExpressionStatement	"curns = xmlNewNs ( NULL , node -> name , NULL )"	148:8:4772:4812	726104	3	True				
ANR	726524	AssignmentExpression	"curns = xmlNewNs ( NULL , node -> name , NULL )"		726104	0		=			
ANR	726525	Identifier	curns		726104	0					
ANR	726526	CallExpression	"xmlNewNs ( NULL , node -> name , NULL )"		726104	1					
ANR	726527	Callee	xmlNewNs		726104	0					
ANR	726528	Identifier	xmlNewNs		726104	0					
ANR	726529	ArgumentList	NULL		726104	1					
ANR	726530	Argument	NULL		726104	0					
ANR	726531	Identifier	NULL		726104	0					
ANR	726532	Argument	node -> name		726104	1					
ANR	726533	PtrMemberAccess	node -> name		726104	0					
ANR	726534	Identifier	node		726104	0					
ANR	726535	Identifier	name		726104	1					
ANR	726536	Argument	NULL		726104	2					
ANR	726537	Identifier	NULL		726104	0					
ANR	726538	IfStatement	if ( node -> children )		726104	4					
ANR	726539	Condition	node -> children	149:12:4826:4839	726104	0	True				
ANR	726540	PtrMemberAccess	node -> children		726104	0					
ANR	726541	Identifier	node		726104	0					
ANR	726542	Identifier	children		726104	1					
ANR	726543	CompoundStatement		74:28:2037:2037	726104	1					
ANR	726544	ExpressionStatement	curns -> prefix = xmlStrdup ( ( xmlChar * ) node -> children )	150:9:4853:4906	726104	0	True				
ANR	726545	AssignmentExpression	curns -> prefix = xmlStrdup ( ( xmlChar * ) node -> children )		726104	0		=			
ANR	726546	PtrMemberAccess	curns -> prefix		726104	0					
ANR	726547	Identifier	curns		726104	0					
ANR	726548	Identifier	prefix		726104	1					
ANR	726549	CallExpression	xmlStrdup ( ( xmlChar * ) node -> children )		726104	1					
ANR	726550	Callee	xmlStrdup		726104	0					
ANR	726551	Identifier	xmlStrdup		726104	0					
ANR	726552	ArgumentList	( xmlChar * ) node -> children		726104	1					
ANR	726553	Argument	( xmlChar * ) node -> children		726104	0					
ANR	726554	CastExpression	( xmlChar * ) node -> children		726104	0					
ANR	726555	CastTarget	xmlChar *		726104	0					
ANR	726556	PtrMemberAccess	node -> children		726104	1					
ANR	726557	Identifier	node		726104	0					
ANR	726558	Identifier	children		726104	1					
ANR	726559	IfStatement	if ( node -> children )		726104	5					
ANR	726560	Condition	node -> children	152:12:4930:4943	726104	0	True				
ANR	726561	PtrMemberAccess	node -> children		726104	0					
ANR	726562	Identifier	node		726104	0					
ANR	726563	Identifier	children		726104	1					
ANR	726564	CompoundStatement		77:28:2141:2141	726104	1					
ANR	726565	ExpressionStatement	"node = xmlNewDocNode ( node -> doc , NULL , ( xmlChar * ) node -> children , node -> name )"	153:9:4957:5034	726104	0	True				
ANR	726566	AssignmentExpression	"node = xmlNewDocNode ( node -> doc , NULL , ( xmlChar * ) node -> children , node -> name )"		726104	0		=			
ANR	726567	Identifier	node		726104	0					
ANR	726568	CallExpression	"xmlNewDocNode ( node -> doc , NULL , ( xmlChar * ) node -> children , node -> name )"		726104	1					
ANR	726569	Callee	xmlNewDocNode		726104	0					
ANR	726570	Identifier	xmlNewDocNode		726104	0					
ANR	726571	ArgumentList	node -> doc		726104	1					
ANR	726572	Argument	node -> doc		726104	0					
ANR	726573	PtrMemberAccess	node -> doc		726104	0					
ANR	726574	Identifier	node		726104	0					
ANR	726575	Identifier	doc		726104	1					
ANR	726576	Argument	NULL		726104	1					
ANR	726577	Identifier	NULL		726104	0					
ANR	726578	Argument	( xmlChar * ) node -> children		726104	2					
ANR	726579	CastExpression	( xmlChar * ) node -> children		726104	0					
ANR	726580	CastTarget	xmlChar *		726104	0					
ANR	726581	PtrMemberAccess	node -> children		726104	1					
ANR	726582	Identifier	node		726104	0					
ANR	726583	Identifier	children		726104	1					
ANR	726584	Argument	node -> name		726104	3					
ANR	726585	PtrMemberAccess	node -> name		726104	0					
ANR	726586	Identifier	node		726104	0					
ANR	726587	Identifier	name		726104	1					
ANR	726588	ElseStatement	else		726104	0					
ANR	726589	CompoundStatement		79:15:2246:2246	726104	0					
ANR	726590	ExpressionStatement	"node = xmlNewDocNode ( node -> doc , NULL , ( xmlChar * ) ""xmlns"" , node -> name )"	155:9:5062:5132	726104	0	True				
ANR	726591	AssignmentExpression	"node = xmlNewDocNode ( node -> doc , NULL , ( xmlChar * ) ""xmlns"" , node -> name )"		726104	0		=			
ANR	726592	Identifier	node		726104	0					
ANR	726593	CallExpression	"xmlNewDocNode ( node -> doc , NULL , ( xmlChar * ) ""xmlns"" , node -> name )"		726104	1					
ANR	726594	Callee	xmlNewDocNode		726104	0					
ANR	726595	Identifier	xmlNewDocNode		726104	0					
ANR	726596	ArgumentList	node -> doc		726104	1					
ANR	726597	Argument	node -> doc		726104	0					
ANR	726598	PtrMemberAccess	node -> doc		726104	0					
ANR	726599	Identifier	node		726104	0					
ANR	726600	Identifier	doc		726104	1					
ANR	726601	Argument	NULL		726104	1					
ANR	726602	Identifier	NULL		726104	0					
ANR	726603	Argument	"( xmlChar * ) ""xmlns"""		726104	2					
ANR	726604	CastExpression	"( xmlChar * ) ""xmlns"""		726104	0					
ANR	726605	CastTarget	xmlChar *		726104	0					
ANR	726606	PrimaryExpression	"""xmlns"""		726104	1					
ANR	726607	Argument	node -> name		726104	3					
ANR	726608	PtrMemberAccess	node -> name		726104	0					
ANR	726609	Identifier	node		726104	0					
ANR	726610	Identifier	name		726104	1					
ANR	726611	ExpressionStatement	node -> type = XML_NAMESPACE_DECL	157:8:5152:5183	726104	6	True				
ANR	726612	AssignmentExpression	node -> type = XML_NAMESPACE_DECL		726104	0		=			
ANR	726613	PtrMemberAccess	node -> type		726104	0					
ANR	726614	Identifier	node		726104	0					
ANR	726615	Identifier	type		726104	1					
ANR	726616	Identifier	XML_NAMESPACE_DECL		726104	1					
ANR	726617	ExpressionStatement	node -> parent = nsparent	158:8:5193:5216	726104	7	True				
ANR	726618	AssignmentExpression	node -> parent = nsparent		726104	0		=			
ANR	726619	PtrMemberAccess	node -> parent		726104	0					
ANR	726620	Identifier	node		726104	0					
ANR	726621	Identifier	parent		726104	1					
ANR	726622	Identifier	nsparent		726104	1					
ANR	726623	ExpressionStatement	node -> ns = curns	159:8:5226:5242	726104	8	True				
ANR	726624	AssignmentExpression	node -> ns = curns		726104	0		=			
ANR	726625	PtrMemberAccess	node -> ns		726104	0					
ANR	726626	Identifier	node		726104	0					
ANR	726627	Identifier	ns		726104	1					
ANR	726628	Identifier	curns		726104	1					
ANR	726629	ExpressionStatement	"php_dom_create_object ( node , & child , & intern -> dom )"	161:7:5260:5309	726104	3	True				
ANR	726630	CallExpression	"php_dom_create_object ( node , & child , & intern -> dom )"		726104	0					
ANR	726631	Callee	php_dom_create_object		726104	0					
ANR	726632	Identifier	php_dom_create_object		726104	0					
ANR	726633	ArgumentList	node		726104	1					
ANR	726634	Argument	node		726104	0					
ANR	726635	Identifier	node		726104	0					
ANR	726636	Argument	& child		726104	1					
ANR	726637	UnaryOperationExpression	& child		726104	0					
ANR	726638	UnaryOperator	&		726104	0					
ANR	726639	Identifier	child		726104	1					
ANR	726640	Argument	& intern -> dom		726104	2					
ANR	726641	UnaryOperationExpression	& intern -> dom		726104	0					
ANR	726642	UnaryOperator	&		726104	0					
ANR	726643	PtrMemberAccess	intern -> dom		726104	1					
ANR	726644	Identifier	intern		726104	0					
ANR	726645	Identifier	dom		726104	1					
ANR	726646	ExpressionStatement	"add_next_index_zval ( & fci . params [ i ] , & child )"	162:7:5318:5361	726104	4	True				
ANR	726647	CallExpression	"add_next_index_zval ( & fci . params [ i ] , & child )"		726104	0					
ANR	726648	Callee	add_next_index_zval		726104	0					
ANR	726649	Identifier	add_next_index_zval		726104	0					
ANR	726650	ArgumentList	& fci . params [ i ]		726104	1					
ANR	726651	Argument	& fci . params [ i ]		726104	0					
ANR	726652	UnaryOperationExpression	& fci . params [ i ]		726104	0					
ANR	726653	UnaryOperator	&		726104	0					
ANR	726654	ArrayIndexing	fci . params [ i ]		726104	1					
ANR	726655	MemberAccess	fci . params		726104	0					
ANR	726656	Identifier	fci		726104	0					
ANR	726657	Identifier	params		726104	1					
ANR	726658	Identifier	i		726104	1					
ANR	726659	Argument	& child		726104	1					
ANR	726660	UnaryOperationExpression	& child		726104	0					
ANR	726661	UnaryOperator	&		726104	0					
ANR	726662	Identifier	child		726104	1					
ANR	726663	BreakStatement	break ;	166:4:5388:5393	726104	11	True				
ANR	726664	Label	default :	167:3:5398:5405	726104	12	True				
ANR	726665	Identifier	default		726104	0					
ANR	726666	ExpressionStatement	"ZVAL_STRING ( & fci . params [ i ] , ( char * ) xmlXPathCastToString ( obj ) )"	168:3:5410:5472	726104	13	True				
ANR	726667	CallExpression	"ZVAL_STRING ( & fci . params [ i ] , ( char * ) xmlXPathCastToString ( obj ) )"		726104	0					
ANR	726668	Callee	ZVAL_STRING		726104	0					
ANR	726669	Identifier	ZVAL_STRING		726104	0					
ANR	726670	ArgumentList	& fci . params [ i ]		726104	1					
ANR	726671	Argument	& fci . params [ i ]		726104	0					
ANR	726672	UnaryOperationExpression	& fci . params [ i ]		726104	0					
ANR	726673	UnaryOperator	&		726104	0					
ANR	726674	ArrayIndexing	fci . params [ i ]		726104	1					
ANR	726675	MemberAccess	fci . params		726104	0					
ANR	726676	Identifier	fci		726104	0					
ANR	726677	Identifier	params		726104	1					
ANR	726678	Identifier	i		726104	1					
ANR	726679	Argument	( char * ) xmlXPathCastToString ( obj )		726104	1					
ANR	726680	CastExpression	( char * ) xmlXPathCastToString ( obj )		726104	0					
ANR	726681	CastTarget	char *		726104	0					
ANR	726682	CallExpression	xmlXPathCastToString ( obj )		726104	1					
ANR	726683	Callee	xmlXPathCastToString		726104	0					
ANR	726684	Identifier	xmlXPathCastToString		726104	0					
ANR	726685	ArgumentList	obj		726104	1					
ANR	726686	Argument	obj		726104	0					
ANR	726687	Identifier	obj		726104	0					
ANR	726688	ExpressionStatement	xmlXPathFreeObject ( obj )	170:2:5480:5503	726104	2	True				
ANR	726689	CallExpression	xmlXPathFreeObject ( obj )		726104	0					
ANR	726690	Callee	xmlXPathFreeObject		726104	0					
ANR	726691	Identifier	xmlXPathFreeObject		726104	0					
ANR	726692	ArgumentList	obj		726104	1					
ANR	726693	Argument	obj		726104	0					
ANR	726694	Identifier	obj		726104	0					
ANR	726695	ExpressionStatement	fci . size = sizeof ( fci )	173:1:5510:5532	726104	13	True				
ANR	726696	AssignmentExpression	fci . size = sizeof ( fci )		726104	0		=			
ANR	726697	MemberAccess	fci . size		726104	0					
ANR	726698	Identifier	fci		726104	0					
ANR	726699	Identifier	size		726104	1					
ANR	726700	SizeofExpression	sizeof ( fci )		726104	1					
ANR	726701	Sizeof	sizeof		726104	0					
ANR	726702	SizeofOperand	fci		726104	1					
ANR	726703	ExpressionStatement	fci . function_table = EG ( function_table )	174:1:5535:5574	726104	14	True				
ANR	726704	AssignmentExpression	fci . function_table = EG ( function_table )		726104	0		=			
ANR	726705	MemberAccess	fci . function_table		726104	0					
ANR	726706	Identifier	fci		726104	0					
ANR	726707	Identifier	function_table		726104	1					
ANR	726708	CallExpression	EG ( function_table )		726104	1					
ANR	726709	Callee	EG		726104	0					
ANR	726710	Identifier	EG		726104	0					
ANR	726711	ArgumentList	function_table		726104	1					
ANR	726712	Argument	function_table		726104	0					
ANR	726713	Identifier	function_table		726104	0					
ANR	726714	ExpressionStatement	obj = valuePop ( ctxt )	176:1:5578:5598	726104	15	True				
ANR	726715	AssignmentExpression	obj = valuePop ( ctxt )		726104	0		=			
ANR	726716	Identifier	obj		726104	0					
ANR	726717	CallExpression	valuePop ( ctxt )		726104	1					
ANR	726718	Callee	valuePop		726104	0					
ANR	726719	Identifier	valuePop		726104	0					
ANR	726720	ArgumentList	ctxt		726104	1					
ANR	726721	Argument	ctxt		726104	0					
ANR	726722	Identifier	ctxt		726104	0					
ANR	726723	IfStatement	if ( obj -> stringval == NULL )		726104	16					
ANR	726724	Condition	obj -> stringval == NULL	177:5:5605:5626	726104	0	True				
ANR	726725	EqualityExpression	obj -> stringval == NULL		726104	0		==			
ANR	726726	PtrMemberAccess	obj -> stringval		726104	0					
ANR	726727	Identifier	obj		726104	0					
ANR	726728	Identifier	stringval		726104	1					
ANR	726729	Identifier	NULL		726104	1					
ANR	726730	CompoundStatement		102:29:2824:2824	726104	1					
ANR	726731	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Handler name must be a string"" )"	178:2:5633:5699	726104	0	True				
ANR	726732	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Handler name must be a string"" )"		726104	0					
ANR	726733	Callee	php_error_docref		726104	0					
ANR	726734	Identifier	php_error_docref		726104	0					
ANR	726735	ArgumentList	NULL		726104	1					
ANR	726736	Argument	NULL		726104	0					
ANR	726737	Identifier	NULL		726104	0					
ANR	726738	Argument	E_WARNING		726104	1					
ANR	726739	Identifier	E_WARNING		726104	0					
ANR	726740	Argument	"""Handler name must be a string"""		726104	2					
ANR	726741	PrimaryExpression	"""Handler name must be a string"""		726104	0					
ANR	726742	ExpressionStatement	xmlXPathFreeObject ( obj )	179:2:5703:5726	726104	1	True				
ANR	726743	CallExpression	xmlXPathFreeObject ( obj )		726104	0					
ANR	726744	Callee	xmlXPathFreeObject		726104	0					
ANR	726745	Identifier	xmlXPathFreeObject		726104	0					
ANR	726746	ArgumentList	obj		726104	1					
ANR	726747	Argument	obj		726104	0					
ANR	726748	Identifier	obj		726104	0					
ANR	726749	IfStatement	if ( fci . param_count > 0 )		726104	2					
ANR	726750	Condition	fci . param_count > 0	180:6:5734:5752	726104	0	True				
ANR	726751	RelationalExpression	fci . param_count > 0		726104	0		>			
ANR	726752	MemberAccess	fci . param_count		726104	0					
ANR	726753	Identifier	fci		726104	0					
ANR	726754	Identifier	param_count		726104	1					
ANR	726755	PrimaryExpression	0		726104	1					
ANR	726756	CompoundStatement		105:27:2950:2950	726104	1					
ANR	726757	ForStatement	for ( i = 0 ; i < nargs - 1 ; i ++ )		726104	0					
ANR	726758	ForInit	i = 0 ;	181:8:5765:5770	726104	0	True				
ANR	726759	AssignmentExpression	i = 0		726104	0		=			
ANR	726760	Identifier	i		726104	0					
ANR	726761	PrimaryExpression	0		726104	1					
ANR	726762	Condition	i < nargs - 1	181:15:5772:5784	726104	1	True				
ANR	726763	RelationalExpression	i < nargs - 1		726104	0		<			
ANR	726764	Identifier	i		726104	0					
ANR	726765	AdditiveExpression	nargs - 1		726104	1		-			
ANR	726766	Identifier	nargs		726104	0					
ANR	726767	PrimaryExpression	1		726104	1					
ANR	726768	PostIncDecOperationExpression	i ++	181:30:5787:5789	726104	2	True				
ANR	726769	Identifier	i		726104	0					
ANR	726770	IncDec	++		726104	1					
ANR	726771	CompoundStatement		106:35:2987:2987	726104	3					
ANR	726772	ExpressionStatement	zval_ptr_dtor ( & fci . params [ i ] )	182:4:5798:5827	726104	0	True				
ANR	726773	CallExpression	zval_ptr_dtor ( & fci . params [ i ] )		726104	0					
ANR	726774	Callee	zval_ptr_dtor		726104	0					
ANR	726775	Identifier	zval_ptr_dtor		726104	0					
ANR	726776	ArgumentList	& fci . params [ i ]		726104	1					
ANR	726777	Argument	& fci . params [ i ]		726104	0					
ANR	726778	UnaryOperationExpression	& fci . params [ i ]		726104	0					
ANR	726779	UnaryOperator	&		726104	0					
ANR	726780	ArrayIndexing	fci . params [ i ]		726104	1					
ANR	726781	MemberAccess	fci . params		726104	0					
ANR	726782	Identifier	fci		726104	0					
ANR	726783	Identifier	params		726104	1					
ANR	726784	Identifier	i		726104	1					
ANR	726785	ExpressionStatement	efree ( fci . params )	184:3:5837:5854	726104	1	True				
ANR	726786	CallExpression	efree ( fci . params )		726104	0					
ANR	726787	Callee	efree		726104	0					
ANR	726788	Identifier	efree		726104	0					
ANR	726789	ArgumentList	fci . params		726104	1					
ANR	726790	Argument	fci . params		726104	0					
ANR	726791	MemberAccess	fci . params		726104	0					
ANR	726792	Identifier	fci		726104	0					
ANR	726793	Identifier	params		726104	1					
ANR	726794	ReturnStatement	return ;	186:2:5862:5868	726104	3	True				
ANR	726795	ExpressionStatement	"ZVAL_STRING ( & fci . function_name , ( char * ) obj -> stringval )"	188:1:5874:5930	726104	17	True				
ANR	726796	CallExpression	"ZVAL_STRING ( & fci . function_name , ( char * ) obj -> stringval )"		726104	0					
ANR	726797	Callee	ZVAL_STRING		726104	0					
ANR	726798	Identifier	ZVAL_STRING		726104	0					
ANR	726799	ArgumentList	& fci . function_name		726104	1					
ANR	726800	Argument	& fci . function_name		726104	0					
ANR	726801	UnaryOperationExpression	& fci . function_name		726104	0					
ANR	726802	UnaryOperator	&		726104	0					
ANR	726803	MemberAccess	fci . function_name		726104	1					
ANR	726804	Identifier	fci		726104	0					
ANR	726805	Identifier	function_name		726104	1					
ANR	726806	Argument	( char * ) obj -> stringval		726104	1					
ANR	726807	CastExpression	( char * ) obj -> stringval		726104	0					
ANR	726808	CastTarget	char *		726104	0					
ANR	726809	PtrMemberAccess	obj -> stringval		726104	1					
ANR	726810	Identifier	obj		726104	0					
ANR	726811	Identifier	stringval		726104	1					
ANR	726812	ExpressionStatement	xmlXPathFreeObject ( obj )	189:1:5933:5956	726104	18	True				
ANR	726813	CallExpression	xmlXPathFreeObject ( obj )		726104	0					
ANR	726814	Callee	xmlXPathFreeObject		726104	0					
ANR	726815	Identifier	xmlXPathFreeObject		726104	0					
ANR	726816	ArgumentList	obj		726104	1					
ANR	726817	Argument	obj		726104	0					
ANR	726818	Identifier	obj		726104	0					
ANR	726819	ExpressionStatement	fci . symbol_table = NULL	191:1:5960:5983	726104	19	True				
ANR	726820	AssignmentExpression	fci . symbol_table = NULL		726104	0		=			
ANR	726821	MemberAccess	fci . symbol_table		726104	0					
ANR	726822	Identifier	fci		726104	0					
ANR	726823	Identifier	symbol_table		726104	1					
ANR	726824	Identifier	NULL		726104	1					
ANR	726825	ExpressionStatement	fci . object = NULL	192:1:5986:6003	726104	20	True				
ANR	726826	AssignmentExpression	fci . object = NULL		726104	0		=			
ANR	726827	MemberAccess	fci . object		726104	0					
ANR	726828	Identifier	fci		726104	0					
ANR	726829	Identifier	object		726104	1					
ANR	726830	Identifier	NULL		726104	1					
ANR	726831	ExpressionStatement	fci . retval = & retval	193:1:6006:6026	726104	21	True				
ANR	726832	AssignmentExpression	fci . retval = & retval		726104	0		=			
ANR	726833	MemberAccess	fci . retval		726104	0					
ANR	726834	Identifier	fci		726104	0					
ANR	726835	Identifier	retval		726104	1					
ANR	726836	UnaryOperationExpression	& retval		726104	1					
ANR	726837	UnaryOperator	&		726104	0					
ANR	726838	Identifier	retval		726104	1					
ANR	726839	ExpressionStatement	fci . no_separation = 0	194:1:6029:6050	726104	22	True				
ANR	726840	AssignmentExpression	fci . no_separation = 0		726104	0		=			
ANR	726841	MemberAccess	fci . no_separation		726104	0					
ANR	726842	Identifier	fci		726104	0					
ANR	726843	Identifier	no_separation		726104	1					
ANR	726844	PrimaryExpression	0		726104	1					
ANR	726845	IfStatement	"if ( ! zend_make_callable ( & fci . function_name , & callable ) )"		726104	23					
ANR	726846	Condition	"! zend_make_callable ( & fci . function_name , & callable )"	196:5:6058:6107	726104	0	True				
ANR	726847	UnaryOperationExpression	"! zend_make_callable ( & fci . function_name , & callable )"		726104	0					
ANR	726848	UnaryOperator	!		726104	0					
ANR	726849	CallExpression	"zend_make_callable ( & fci . function_name , & callable )"		726104	1					
ANR	726850	Callee	zend_make_callable		726104	0					
ANR	726851	Identifier	zend_make_callable		726104	0					
ANR	726852	ArgumentList	& fci . function_name		726104	1					
ANR	726853	Argument	& fci . function_name		726104	0					
ANR	726854	UnaryOperationExpression	& fci . function_name		726104	0					
ANR	726855	UnaryOperator	&		726104	0					
ANR	726856	MemberAccess	fci . function_name		726104	1					
ANR	726857	Identifier	fci		726104	0					
ANR	726858	Identifier	function_name		726104	1					
ANR	726859	Argument	& callable		726104	1					
ANR	726860	UnaryOperationExpression	& callable		726104	0					
ANR	726861	UnaryOperator	&		726104	0					
ANR	726862	Identifier	callable		726104	1					
ANR	726863	CompoundStatement		121:57:3305:3305	726104	1					
ANR	726864	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Unable to call handler %s()"" , ZSTR_VAL ( callable ) )"	197:2:6114:6198	726104	0	True				
ANR	726865	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Unable to call handler %s()"" , ZSTR_VAL ( callable ) )"		726104	0					
ANR	726866	Callee	php_error_docref		726104	0					
ANR	726867	Identifier	php_error_docref		726104	0					
ANR	726868	ArgumentList	NULL		726104	1					
ANR	726869	Argument	NULL		726104	0					
ANR	726870	Identifier	NULL		726104	0					
ANR	726871	Argument	E_WARNING		726104	1					
ANR	726872	Identifier	E_WARNING		726104	0					
ANR	726873	Argument	"""Unable to call handler %s()"""		726104	2					
ANR	726874	PrimaryExpression	"""Unable to call handler %s()"""		726104	0					
ANR	726875	Argument	ZSTR_VAL ( callable )		726104	3					
ANR	726876	CallExpression	ZSTR_VAL ( callable )		726104	0					
ANR	726877	Callee	ZSTR_VAL		726104	0					
ANR	726878	Identifier	ZSTR_VAL		726104	0					
ANR	726879	ArgumentList	callable		726104	1					
ANR	726880	Argument	callable		726104	0					
ANR	726881	Identifier	callable		726104	0					
ANR	726882	ElseStatement	else		726104	0					
ANR	726883	IfStatement	"if ( intern -> registerPhpFunctions == 2 && zend_hash_exists ( intern -> registered_phpfunctions , callable ) == 0 )"		726104	0					
ANR	726884	Condition	"intern -> registerPhpFunctions == 2 && zend_hash_exists ( intern -> registered_phpfunctions , callable ) == 0"	198:12:6212:6312	726104	0	True				
ANR	726885	AndExpression	"intern -> registerPhpFunctions == 2 && zend_hash_exists ( intern -> registered_phpfunctions , callable ) == 0"		726104	0		&&			
ANR	726886	EqualityExpression	intern -> registerPhpFunctions == 2		726104	0		==			
ANR	726887	PtrMemberAccess	intern -> registerPhpFunctions		726104	0					
ANR	726888	Identifier	intern		726104	0					
ANR	726889	Identifier	registerPhpFunctions		726104	1					
ANR	726890	PrimaryExpression	2		726104	1					
ANR	726891	EqualityExpression	"zend_hash_exists ( intern -> registered_phpfunctions , callable ) == 0"		726104	1		==			
ANR	726892	CallExpression	"zend_hash_exists ( intern -> registered_phpfunctions , callable )"		726104	0					
ANR	726893	Callee	zend_hash_exists		726104	0					
ANR	726894	Identifier	zend_hash_exists		726104	0					
ANR	726895	ArgumentList	intern -> registered_phpfunctions		726104	1					
ANR	726896	Argument	intern -> registered_phpfunctions		726104	0					
ANR	726897	PtrMemberAccess	intern -> registered_phpfunctions		726104	0					
ANR	726898	Identifier	intern		726104	0					
ANR	726899	Identifier	registered_phpfunctions		726104	1					
ANR	726900	Argument	callable		726104	1					
ANR	726901	Identifier	callable		726104	0					
ANR	726902	PrimaryExpression	0		726104	1					
ANR	726903	CompoundStatement		123:115:3510:3510	726104	1					
ANR	726904	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Not allowed to call handler '%s()'."" , ZSTR_VAL ( callable ) )"	199:2:6319:6411	726104	0	True				
ANR	726905	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Not allowed to call handler '%s()'."" , ZSTR_VAL ( callable ) )"		726104	0					
ANR	726906	Callee	php_error_docref		726104	0					
ANR	726907	Identifier	php_error_docref		726104	0					
ANR	726908	ArgumentList	NULL		726104	1					
ANR	726909	Argument	NULL		726104	0					
ANR	726910	Identifier	NULL		726104	0					
ANR	726911	Argument	E_WARNING		726104	1					
ANR	726912	Identifier	E_WARNING		726104	0					
ANR	726913	Argument	"""Not allowed to call handler '%s()'."""		726104	2					
ANR	726914	PrimaryExpression	"""Not allowed to call handler '%s()'."""		726104	0					
ANR	726915	Argument	ZSTR_VAL ( callable )		726104	3					
ANR	726916	CallExpression	ZSTR_VAL ( callable )		726104	0					
ANR	726917	Callee	ZSTR_VAL		726104	0					
ANR	726918	Identifier	ZSTR_VAL		726104	0					
ANR	726919	ArgumentList	callable		726104	1					
ANR	726920	Argument	callable		726104	0					
ANR	726921	Identifier	callable		726104	0					
ANR	726922	ExpressionStatement	"valuePush ( ctxt , xmlXPathNewString ( ( xmlChar * ) """" ) )"	201:2:6488:6537	726104	1	True				
ANR	726923	CallExpression	"valuePush ( ctxt , xmlXPathNewString ( ( xmlChar * ) """" ) )"		726104	0					
ANR	726924	Callee	valuePush		726104	0					
ANR	726925	Identifier	valuePush		726104	0					
ANR	726926	ArgumentList	ctxt		726104	1					
ANR	726927	Argument	ctxt		726104	0					
ANR	726928	Identifier	ctxt		726104	0					
ANR	726929	Argument	"xmlXPathNewString ( ( xmlChar * ) """" )"		726104	1					
ANR	726930	CallExpression	"xmlXPathNewString ( ( xmlChar * ) """" )"		726104	0					
ANR	726931	Callee	xmlXPathNewString		726104	0					
ANR	726932	Identifier	xmlXPathNewString		726104	0					
ANR	726933	ArgumentList	"( xmlChar * ) """""		726104	1					
ANR	726934	Argument	"( xmlChar * ) """""		726104	0					
ANR	726935	CastExpression	"( xmlChar * ) """""		726104	0					
ANR	726936	CastTarget	xmlChar *		726104	0					
ANR	726937	PrimaryExpression	""""""		726104	1					
ANR	726938	ElseStatement	else		726104	0					
ANR	726939	CompoundStatement		127:8:3742:3742	726104	0					
ANR	726940	ExpressionStatement	"result = zend_call_function ( & fci , NULL )"	203:2:6551:6590	726104	0	True				
ANR	726941	AssignmentExpression	"result = zend_call_function ( & fci , NULL )"		726104	0		=			
ANR	726942	Identifier	result		726104	0					
ANR	726943	CallExpression	"zend_call_function ( & fci , NULL )"		726104	1					
ANR	726944	Callee	zend_call_function		726104	0					
ANR	726945	Identifier	zend_call_function		726104	0					
ANR	726946	ArgumentList	& fci		726104	1					
ANR	726947	Argument	& fci		726104	0					
ANR	726948	UnaryOperationExpression	& fci		726104	0					
ANR	726949	UnaryOperator	&		726104	0					
ANR	726950	Identifier	fci		726104	1					
ANR	726951	Argument	NULL		726104	1					
ANR	726952	Identifier	NULL		726104	0					
ANR	726953	IfStatement	if ( result == SUCCESS && Z_TYPE ( retval ) != IS_UNDEF )		726104	1					
ANR	726954	Condition	result == SUCCESS && Z_TYPE ( retval ) != IS_UNDEF	204:6:6598:6644	726104	0	True				
ANR	726955	AndExpression	result == SUCCESS && Z_TYPE ( retval ) != IS_UNDEF		726104	0		&&			
ANR	726956	EqualityExpression	result == SUCCESS		726104	0		==			
ANR	726957	Identifier	result		726104	0					
ANR	726958	Identifier	SUCCESS		726104	1					
ANR	726959	EqualityExpression	Z_TYPE ( retval ) != IS_UNDEF		726104	1		!=			
ANR	726960	CallExpression	Z_TYPE ( retval )		726104	0					
ANR	726961	Callee	Z_TYPE		726104	0					
ANR	726962	Identifier	Z_TYPE		726104	0					
ANR	726963	ArgumentList	retval		726104	1					
ANR	726964	Argument	retval		726104	0					
ANR	726965	Identifier	retval		726104	0					
ANR	726966	Identifier	IS_UNDEF		726104	1					
ANR	726967	CompoundStatement		129:55:3842:3842	726104	1					
ANR	726968	IfStatement	"if ( Z_TYPE ( retval ) == IS_OBJECT && instanceof_function ( Z_OBJCE ( retval ) , dom_node_class_entry ) )"		726104	0					
ANR	726969	Condition	"Z_TYPE ( retval ) == IS_OBJECT && instanceof_function ( Z_OBJCE ( retval ) , dom_node_class_entry )"	205:7:6656:6744	726104	0	True				
ANR	726970	AndExpression	"Z_TYPE ( retval ) == IS_OBJECT && instanceof_function ( Z_OBJCE ( retval ) , dom_node_class_entry )"		726104	0		&&			
ANR	726971	EqualityExpression	Z_TYPE ( retval ) == IS_OBJECT		726104	0		==			
ANR	726972	CallExpression	Z_TYPE ( retval )		726104	0					
ANR	726973	Callee	Z_TYPE		726104	0					
ANR	726974	Identifier	Z_TYPE		726104	0					
ANR	726975	ArgumentList	retval		726104	1					
ANR	726976	Argument	retval		726104	0					
ANR	726977	Identifier	retval		726104	0					
ANR	726978	Identifier	IS_OBJECT		726104	1					
ANR	726979	CallExpression	"instanceof_function ( Z_OBJCE ( retval ) , dom_node_class_entry )"		726104	1					
ANR	726980	Callee	instanceof_function		726104	0					
ANR	726981	Identifier	instanceof_function		726104	0					
ANR	726982	ArgumentList	Z_OBJCE ( retval )		726104	1					
ANR	726983	Argument	Z_OBJCE ( retval )		726104	0					
ANR	726984	CallExpression	Z_OBJCE ( retval )		726104	0					
ANR	726985	Callee	Z_OBJCE		726104	0					
ANR	726986	Identifier	Z_OBJCE		726104	0					
ANR	726987	ArgumentList	retval		726104	1					
ANR	726988	Argument	retval		726104	0					
ANR	726989	Identifier	retval		726104	0					
ANR	726990	Argument	dom_node_class_entry		726104	1					
ANR	726991	Identifier	dom_node_class_entry		726104	0					
ANR	726992	CompoundStatement		132:4:3968:3983	726104	1					
ANR	726993	IdentifierDeclStatement	xmlNode * nodep ;	206:4:6753:6767	726104	0	True				
ANR	726994	IdentifierDecl	* nodep		726104	0					
ANR	726995	IdentifierDeclType	xmlNode *		726104	0					
ANR	726996	Identifier	nodep		726104	1					
ANR	726997	IdentifierDeclStatement	dom_object * obj ;	207:4:6773:6788	726104	1	True				
ANR	726998	IdentifierDecl	* obj		726104	0					
ANR	726999	IdentifierDeclType	dom_object *		726104	0					
ANR	727000	Identifier	obj		726104	1					
ANR	727001	IfStatement	if ( intern -> node_list == NULL )		726104	2					
ANR	727002	Condition	intern -> node_list == NULL	208:8:6798:6822	726104	0	True				
ANR	727003	EqualityExpression	intern -> node_list == NULL		726104	0		==			
ANR	727004	PtrMemberAccess	intern -> node_list		726104	0					
ANR	727005	Identifier	intern		726104	0					
ANR	727006	Identifier	node_list		726104	1					
ANR	727007	Identifier	NULL		726104	1					
ANR	727008	CompoundStatement		133:35:4020:4020	726104	1					
ANR	727009	ExpressionStatement	ALLOC_HASHTABLE ( intern -> node_list )	209:5:6832:6866	726104	0	True				
ANR	727010	CallExpression	ALLOC_HASHTABLE ( intern -> node_list )		726104	0					
ANR	727011	Callee	ALLOC_HASHTABLE		726104	0					
ANR	727012	Identifier	ALLOC_HASHTABLE		726104	0					
ANR	727013	ArgumentList	intern -> node_list		726104	1					
ANR	727014	Argument	intern -> node_list		726104	0					
ANR	727015	PtrMemberAccess	intern -> node_list		726104	0					
ANR	727016	Identifier	intern		726104	0					
ANR	727017	Identifier	node_list		726104	1					
ANR	727018	ExpressionStatement	"zend_hash_init ( intern -> node_list , 0 , NULL , ZVAL_PTR_DTOR , 0 )"	210:5:6873:6933	726104	1	True				
ANR	727019	CallExpression	"zend_hash_init ( intern -> node_list , 0 , NULL , ZVAL_PTR_DTOR , 0 )"		726104	0					
ANR	727020	Callee	zend_hash_init		726104	0					
ANR	727021	Identifier	zend_hash_init		726104	0					
ANR	727022	ArgumentList	intern -> node_list		726104	1					
ANR	727023	Argument	intern -> node_list		726104	0					
ANR	727024	PtrMemberAccess	intern -> node_list		726104	0					
ANR	727025	Identifier	intern		726104	0					
ANR	727026	Identifier	node_list		726104	1					
ANR	727027	Argument	0		726104	1					
ANR	727028	PrimaryExpression	0		726104	0					
ANR	727029	Argument	NULL		726104	2					
ANR	727030	Identifier	NULL		726104	0					
ANR	727031	Argument	ZVAL_PTR_DTOR		726104	3					
ANR	727032	Identifier	ZVAL_PTR_DTOR		726104	0					
ANR	727033	Argument	0		726104	4					
ANR	727034	PrimaryExpression	0		726104	0					
ANR	727035	ExpressionStatement	Z_ADDREF ( retval )	212:4:6945:6961	726104	3	True				
ANR	727036	CallExpression	Z_ADDREF ( retval )		726104	0					
ANR	727037	Callee	Z_ADDREF		726104	0					
ANR	727038	Identifier	Z_ADDREF		726104	0					
ANR	727039	ArgumentList	retval		726104	1					
ANR	727040	Argument	retval		726104	0					
ANR	727041	Identifier	retval		726104	0					
ANR	727042	ExpressionStatement	"zend_hash_next_index_insert ( intern -> node_list , & retval )"	213:4:6967:7022	726104	4	True				
ANR	727043	CallExpression	"zend_hash_next_index_insert ( intern -> node_list , & retval )"		726104	0					
ANR	727044	Callee	zend_hash_next_index_insert		726104	0					
ANR	727045	Identifier	zend_hash_next_index_insert		726104	0					
ANR	727046	ArgumentList	intern -> node_list		726104	1					
ANR	727047	Argument	intern -> node_list		726104	0					
ANR	727048	PtrMemberAccess	intern -> node_list		726104	0					
ANR	727049	Identifier	intern		726104	0					
ANR	727050	Identifier	node_list		726104	1					
ANR	727051	Argument	& retval		726104	1					
ANR	727052	UnaryOperationExpression	& retval		726104	0					
ANR	727053	UnaryOperator	&		726104	0					
ANR	727054	Identifier	retval		726104	1					
ANR	727055	ExpressionStatement	obj = Z_DOMOBJ_P ( & retval )	214:4:7028:7053	726104	5	True				
ANR	727056	AssignmentExpression	obj = Z_DOMOBJ_P ( & retval )		726104	0		=			
ANR	727057	Identifier	obj		726104	0					
ANR	727058	CallExpression	Z_DOMOBJ_P ( & retval )		726104	1					
ANR	727059	Callee	Z_DOMOBJ_P		726104	0					
ANR	727060	Identifier	Z_DOMOBJ_P		726104	0					
ANR	727061	ArgumentList	& retval		726104	1					
ANR	727062	Argument	& retval		726104	0					
ANR	727063	UnaryOperationExpression	& retval		726104	0					
ANR	727064	UnaryOperator	&		726104	0					
ANR	727065	Identifier	retval		726104	1					
ANR	727066	ExpressionStatement	nodep = dom_object_get_node ( obj )	215:4:7059:7091	726104	6	True				
ANR	727067	AssignmentExpression	nodep = dom_object_get_node ( obj )		726104	0		=			
ANR	727068	Identifier	nodep		726104	0					
ANR	727069	CallExpression	dom_object_get_node ( obj )		726104	1					
ANR	727070	Callee	dom_object_get_node		726104	0					
ANR	727071	Identifier	dom_object_get_node		726104	0					
ANR	727072	ArgumentList	obj		726104	1					
ANR	727073	Argument	obj		726104	0					
ANR	727074	Identifier	obj		726104	0					
ANR	727075	ExpressionStatement	"valuePush ( ctxt , xmlXPathNewNodeSet ( nodep ) )"	216:4:7097:7139	726104	7	True				
ANR	727076	CallExpression	"valuePush ( ctxt , xmlXPathNewNodeSet ( nodep ) )"		726104	0					
ANR	727077	Callee	valuePush		726104	0					
ANR	727078	Identifier	valuePush		726104	0					
ANR	727079	ArgumentList	ctxt		726104	1					
ANR	727080	Argument	ctxt		726104	0					
ANR	727081	Identifier	ctxt		726104	0					
ANR	727082	Argument	xmlXPathNewNodeSet ( nodep )		726104	1					
ANR	727083	CallExpression	xmlXPathNewNodeSet ( nodep )		726104	0					
ANR	727084	Callee	xmlXPathNewNodeSet		726104	0					
ANR	727085	Identifier	xmlXPathNewNodeSet		726104	0					
ANR	727086	ArgumentList	nodep		726104	1					
ANR	727087	Argument	nodep		726104	0					
ANR	727088	Identifier	nodep		726104	0					
ANR	727089	ElseStatement	else		726104	0					
ANR	727090	IfStatement	if ( Z_TYPE ( retval ) == IS_FALSE || Z_TYPE ( retval ) == IS_TRUE )		726104	0					
ANR	727091	Condition	Z_TYPE ( retval ) == IS_FALSE || Z_TYPE ( retval ) == IS_TRUE	217:14:7155:7209	726104	0	True				
ANR	727092	OrExpression	Z_TYPE ( retval ) == IS_FALSE || Z_TYPE ( retval ) == IS_TRUE		726104	0		||			
ANR	727093	EqualityExpression	Z_TYPE ( retval ) == IS_FALSE		726104	0		==			
ANR	727094	CallExpression	Z_TYPE ( retval )		726104	0					
ANR	727095	Callee	Z_TYPE		726104	0					
ANR	727096	Identifier	Z_TYPE		726104	0					
ANR	727097	ArgumentList	retval		726104	1					
ANR	727098	Argument	retval		726104	0					
ANR	727099	Identifier	retval		726104	0					
ANR	727100	Identifier	IS_FALSE		726104	1					
ANR	727101	EqualityExpression	Z_TYPE ( retval ) == IS_TRUE		726104	1		==			
ANR	727102	CallExpression	Z_TYPE ( retval )		726104	0					
ANR	727103	Callee	Z_TYPE		726104	0					
ANR	727104	Identifier	Z_TYPE		726104	0					
ANR	727105	ArgumentList	retval		726104	1					
ANR	727106	Argument	retval		726104	0					
ANR	727107	Identifier	retval		726104	0					
ANR	727108	Identifier	IS_TRUE		726104	1					
ANR	727109	CompoundStatement		142:71:4407:4407	726104	1					
ANR	727110	ExpressionStatement	"valuePush ( ctxt , xmlXPathNewBoolean ( Z_TYPE ( retval ) == IS_TRUE ) )"	218:4:7218:7280	726104	0	True				
ANR	727111	CallExpression	"valuePush ( ctxt , xmlXPathNewBoolean ( Z_TYPE ( retval ) == IS_TRUE ) )"		726104	0					
ANR	727112	Callee	valuePush		726104	0					
ANR	727113	Identifier	valuePush		726104	0					
ANR	727114	ArgumentList	ctxt		726104	1					
ANR	727115	Argument	ctxt		726104	0					
ANR	727116	Identifier	ctxt		726104	0					
ANR	727117	Argument	xmlXPathNewBoolean ( Z_TYPE ( retval ) == IS_TRUE )		726104	1					
ANR	727118	CallExpression	xmlXPathNewBoolean ( Z_TYPE ( retval ) == IS_TRUE )		726104	0					
ANR	727119	Callee	xmlXPathNewBoolean		726104	0					
ANR	727120	Identifier	xmlXPathNewBoolean		726104	0					
ANR	727121	ArgumentList	Z_TYPE ( retval ) == IS_TRUE		726104	1					
ANR	727122	Argument	Z_TYPE ( retval ) == IS_TRUE		726104	0					
ANR	727123	EqualityExpression	Z_TYPE ( retval ) == IS_TRUE		726104	0		==			
ANR	727124	CallExpression	Z_TYPE ( retval )		726104	0					
ANR	727125	Callee	Z_TYPE		726104	0					
ANR	727126	Identifier	Z_TYPE		726104	0					
ANR	727127	ArgumentList	retval		726104	1					
ANR	727128	Argument	retval		726104	0					
ANR	727129	Identifier	retval		726104	0					
ANR	727130	Identifier	IS_TRUE		726104	1					
ANR	727131	ElseStatement	else		726104	0					
ANR	727132	IfStatement	if ( Z_TYPE ( retval ) == IS_OBJECT )		726104	0					
ANR	727133	Condition	Z_TYPE ( retval ) == IS_OBJECT	219:14:7296:7322	726104	0	True				
ANR	727134	EqualityExpression	Z_TYPE ( retval ) == IS_OBJECT		726104	0		==			
ANR	727135	CallExpression	Z_TYPE ( retval )		726104	0					
ANR	727136	Callee	Z_TYPE		726104	0					
ANR	727137	Identifier	Z_TYPE		726104	0					
ANR	727138	ArgumentList	retval		726104	1					
ANR	727139	Argument	retval		726104	0					
ANR	727140	Identifier	retval		726104	0					
ANR	727141	Identifier	IS_OBJECT		726104	1					
ANR	727142	CompoundStatement		144:43:4520:4520	726104	1					
ANR	727143	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""A PHP Object cannot be converted to a XPath-string"" )"	220:4:7331:7418	726104	0	True				
ANR	727144	CallExpression	"php_error_docref ( NULL , E_WARNING , ""A PHP Object cannot be converted to a XPath-string"" )"		726104	0					
ANR	727145	Callee	php_error_docref		726104	0					
ANR	727146	Identifier	php_error_docref		726104	0					
ANR	727147	ArgumentList	NULL		726104	1					
ANR	727148	Argument	NULL		726104	0					
ANR	727149	Identifier	NULL		726104	0					
ANR	727150	Argument	E_WARNING		726104	1					
ANR	727151	Identifier	E_WARNING		726104	0					
ANR	727152	Argument	"""A PHP Object cannot be converted to a XPath-string"""		726104	2					
ANR	727153	PrimaryExpression	"""A PHP Object cannot be converted to a XPath-string"""		726104	0					
ANR	727154	ExpressionStatement	"valuePush ( ctxt , xmlXPathNewString ( ( xmlChar * ) """" ) )"	221:4:7424:7473	726104	1	True				
ANR	727155	CallExpression	"valuePush ( ctxt , xmlXPathNewString ( ( xmlChar * ) """" ) )"		726104	0					
ANR	727156	Callee	valuePush		726104	0					
ANR	727157	Identifier	valuePush		726104	0					
ANR	727158	ArgumentList	ctxt		726104	1					
ANR	727159	Argument	ctxt		726104	0					
ANR	727160	Identifier	ctxt		726104	0					
ANR	727161	Argument	"xmlXPathNewString ( ( xmlChar * ) """" )"		726104	1					
ANR	727162	CallExpression	"xmlXPathNewString ( ( xmlChar * ) """" )"		726104	0					
ANR	727163	Callee	xmlXPathNewString		726104	0					
ANR	727164	Identifier	xmlXPathNewString		726104	0					
ANR	727165	ArgumentList	"( xmlChar * ) """""		726104	1					
ANR	727166	Argument	"( xmlChar * ) """""		726104	0					
ANR	727167	CastExpression	"( xmlChar * ) """""		726104	0					
ANR	727168	CastTarget	xmlChar *		726104	0					
ANR	727169	PrimaryExpression	""""""		726104	1					
ANR	727170	ElseStatement	else		726104	0					
ANR	727171	CompoundStatement		148:4:4686:4729	726104	0					
ANR	727172	IdentifierDeclStatement	zend_string * str = zval_get_string ( & retval ) ;	223:4:7491:7534	726104	0	True				
ANR	727173	IdentifierDecl	* str = zval_get_string ( & retval )		726104	0					
ANR	727174	IdentifierDeclType	zend_string *		726104	0					
ANR	727175	Identifier	str		726104	1					
ANR	727176	AssignmentExpression	* str = zval_get_string ( & retval )		726104	2		=			
ANR	727177	Identifier	str		726104	0					
ANR	727178	CallExpression	zval_get_string ( & retval )		726104	1					
ANR	727179	Callee	zval_get_string		726104	0					
ANR	727180	Identifier	zval_get_string		726104	0					
ANR	727181	ArgumentList	& retval		726104	1					
ANR	727182	Argument	& retval		726104	0					
ANR	727183	UnaryOperationExpression	& retval		726104	0					
ANR	727184	UnaryOperator	&		726104	0					
ANR	727185	Identifier	retval		726104	1					
ANR	727186	ExpressionStatement	"valuePush ( ctxt , xmlXPathNewString ( ( xmlChar * ) ZSTR_VAL ( str ) ) )"	224:4:7540:7601	726104	1	True				
ANR	727187	CallExpression	"valuePush ( ctxt , xmlXPathNewString ( ( xmlChar * ) ZSTR_VAL ( str ) ) )"		726104	0					
ANR	727188	Callee	valuePush		726104	0					
ANR	727189	Identifier	valuePush		726104	0					
ANR	727190	ArgumentList	ctxt		726104	1					
ANR	727191	Argument	ctxt		726104	0					
ANR	727192	Identifier	ctxt		726104	0					
ANR	727193	Argument	xmlXPathNewString ( ( xmlChar * ) ZSTR_VAL ( str ) )		726104	1					
ANR	727194	CallExpression	xmlXPathNewString ( ( xmlChar * ) ZSTR_VAL ( str ) )		726104	0					
ANR	727195	Callee	xmlXPathNewString		726104	0					
ANR	727196	Identifier	xmlXPathNewString		726104	0					
ANR	727197	ArgumentList	( xmlChar * ) ZSTR_VAL ( str )		726104	1					
ANR	727198	Argument	( xmlChar * ) ZSTR_VAL ( str )		726104	0					
ANR	727199	CastExpression	( xmlChar * ) ZSTR_VAL ( str )		726104	0					
ANR	727200	CastTarget	xmlChar *		726104	0					
ANR	727201	CallExpression	ZSTR_VAL ( str )		726104	1					
ANR	727202	Callee	ZSTR_VAL		726104	0					
ANR	727203	Identifier	ZSTR_VAL		726104	0					
ANR	727204	ArgumentList	str		726104	1					
ANR	727205	Argument	str		726104	0					
ANR	727206	Identifier	str		726104	0					
ANR	727207	ExpressionStatement	zend_string_release ( str )	225:4:7607:7631	726104	2	True				
ANR	727208	CallExpression	zend_string_release ( str )		726104	0					
ANR	727209	Callee	zend_string_release		726104	0					
ANR	727210	Identifier	zend_string_release		726104	0					
ANR	727211	ArgumentList	str		726104	1					
ANR	727212	Argument	str		726104	0					
ANR	727213	Identifier	str		726104	0					
ANR	727214	ExpressionStatement	zval_ptr_dtor ( & retval )	227:3:7641:7663	726104	1	True				
ANR	727215	CallExpression	zval_ptr_dtor ( & retval )		726104	0					
ANR	727216	Callee	zval_ptr_dtor		726104	0					
ANR	727217	Identifier	zval_ptr_dtor		726104	0					
ANR	727218	ArgumentList	& retval		726104	1					
ANR	727219	Argument	& retval		726104	0					
ANR	727220	UnaryOperationExpression	& retval		726104	0					
ANR	727221	UnaryOperator	&		726104	0					
ANR	727222	Identifier	retval		726104	1					
ANR	727223	ExpressionStatement	zend_string_release ( callable )	230:1:7673:7702	726104	24	True				
ANR	727224	CallExpression	zend_string_release ( callable )		726104	0					
ANR	727225	Callee	zend_string_release		726104	0					
ANR	727226	Identifier	zend_string_release		726104	0					
ANR	727227	ArgumentList	callable		726104	1					
ANR	727228	Argument	callable		726104	0					
ANR	727229	Identifier	callable		726104	0					
ANR	727230	ExpressionStatement	zval_dtor ( & fci . function_name )	231:1:7705:7734	726104	25	True				
ANR	727231	CallExpression	zval_dtor ( & fci . function_name )		726104	0					
ANR	727232	Callee	zval_dtor		726104	0					
ANR	727233	Identifier	zval_dtor		726104	0					
ANR	727234	ArgumentList	& fci . function_name		726104	1					
ANR	727235	Argument	& fci . function_name		726104	0					
ANR	727236	UnaryOperationExpression	& fci . function_name		726104	0					
ANR	727237	UnaryOperator	&		726104	0					
ANR	727238	MemberAccess	fci . function_name		726104	1					
ANR	727239	Identifier	fci		726104	0					
ANR	727240	Identifier	function_name		726104	1					
ANR	727241	IfStatement	if ( fci . param_count > 0 )		726104	26					
ANR	727242	Condition	fci . param_count > 0	232:5:7741:7759	726104	0	True				
ANR	727243	RelationalExpression	fci . param_count > 0		726104	0		>			
ANR	727244	MemberAccess	fci . param_count		726104	0					
ANR	727245	Identifier	fci		726104	0					
ANR	727246	Identifier	param_count		726104	1					
ANR	727247	PrimaryExpression	0		726104	1					
ANR	727248	CompoundStatement		157:26:4957:4957	726104	1					
ANR	727249	ForStatement	for ( i = 0 ; i < nargs - 1 ; i ++ )		726104	0					
ANR	727250	ForInit	i = 0 ;	233:7:7771:7776	726104	0	True				
ANR	727251	AssignmentExpression	i = 0		726104	0		=			
ANR	727252	Identifier	i		726104	0					
ANR	727253	PrimaryExpression	0		726104	1					
ANR	727254	Condition	i < nargs - 1	233:14:7778:7790	726104	1	True				
ANR	727255	RelationalExpression	i < nargs - 1		726104	0		<			
ANR	727256	Identifier	i		726104	0					
ANR	727257	AdditiveExpression	nargs - 1		726104	1		-			
ANR	727258	Identifier	nargs		726104	0					
ANR	727259	PrimaryExpression	1		726104	1					
ANR	727260	PostIncDecOperationExpression	i ++	233:29:7793:7795	726104	2	True				
ANR	727261	Identifier	i		726104	0					
ANR	727262	IncDec	++		726104	1					
ANR	727263	CompoundStatement		158:34:4993:4993	726104	3					
ANR	727264	ExpressionStatement	zval_ptr_dtor ( & fci . params [ i ] )	234:3:7803:7832	726104	0	True				
ANR	727265	CallExpression	zval_ptr_dtor ( & fci . params [ i ] )		726104	0					
ANR	727266	Callee	zval_ptr_dtor		726104	0					
ANR	727267	Identifier	zval_ptr_dtor		726104	0					
ANR	727268	ArgumentList	& fci . params [ i ]		726104	1					
ANR	727269	Argument	& fci . params [ i ]		726104	0					
ANR	727270	UnaryOperationExpression	& fci . params [ i ]		726104	0					
ANR	727271	UnaryOperator	&		726104	0					
ANR	727272	ArrayIndexing	fci . params [ i ]		726104	1					
ANR	727273	MemberAccess	fci . params		726104	0					
ANR	727274	Identifier	fci		726104	0					
ANR	727275	Identifier	params		726104	1					
ANR	727276	Identifier	i		726104	1					
ANR	727277	ExpressionStatement	efree ( fci . params )	236:2:7840:7857	726104	1	True				
ANR	727278	CallExpression	efree ( fci . params )		726104	0					
ANR	727279	Callee	efree		726104	0					
ANR	727280	Identifier	efree		726104	0					
ANR	727281	ArgumentList	fci . params		726104	1					
ANR	727282	Argument	fci . params		726104	0					
ANR	727283	MemberAccess	fci . params		726104	0					
ANR	727284	Identifier	fci		726104	0					
ANR	727285	Identifier	params		726104	1					
ANR	727286	ReturnType	static void		726104	1					
ANR	727287	Identifier	dom_xpath_ext_function_php		726104	2					
ANR	727288	ParameterList	"xmlXPathParserContextPtr ctxt , int nargs , int type"		726104	3					
ANR	727289	Parameter	xmlXPathParserContextPtr ctxt	75:39:2742:2770	726104	0	True				
ANR	727290	ParameterType	xmlXPathParserContextPtr		726104	0					
ANR	727291	Identifier	ctxt		726104	1					
ANR	727292	Parameter	int nargs	75:70:2773:2781	726104	1	True				
ANR	727293	ParameterType	int		726104	0					
ANR	727294	Identifier	nargs		726104	1					
ANR	727295	Parameter	int type	75:81:2784:2791	726104	2	True				
ANR	727296	ParameterType	int		726104	0					
ANR	727297	Identifier	type		726104	1					
ANR	727298	CFGEntryNode	ENTRY		726104		True				
ANR	727299	CFGExitNode	EXIT		726104		True				
ANR	727300	Symbol	node -> _private		726104						
ANR	727301	Symbol	ctxt		726104						
ANR	727302	Symbol	callable		726104						
ANR	727303	Symbol	ctxt -> context -> userData		726104						
ANR	727304	Symbol	Z_TYPE		726104						
ANR	727305	Symbol	type		726104						
ANR	727306	Symbol	* obj -> nodesetval -> nodeTab		726104						
ANR	727307	Symbol	fci . param_count		726104						
ANR	727308	Symbol	obj -> nodesetval -> nodeTab		726104						
ANR	727309	Symbol	fci . retval		726104						
ANR	727310	Symbol	intern -> registered_phpfunctions		726104						
ANR	727311	Symbol	* obj -> nodesetval		726104						
ANR	727312	Symbol	obj -> type		726104						
ANR	727313	Symbol	ctxt -> context		726104						
ANR	727314	Symbol	IS_TRUE		726104						
ANR	727315	Symbol	ZVAL_PTR_DTOR		726104						
ANR	727316	Symbol	str		726104						
ANR	727317	Symbol	xmlXPathCastToString		726104						
ANR	727318	Symbol	node		726104						
ANR	727319	Symbol	curns -> prefix		726104						
ANR	727320	Symbol	function_table		726104						
ANR	727321	Symbol	obj -> nodesetval -> nodeNr		726104						
ANR	727322	Symbol	& callable		726104						
ANR	727323	Symbol	* * obj		726104						
ANR	727324	Symbol	fci		726104						
ANR	727325	Symbol	zend_make_callable		726104						
ANR	727326	Symbol	* * ctxt		726104						
ANR	727327	Symbol	result		726104						
ANR	727328	Symbol	E_WARNING		726104						
ANR	727329	Symbol	* ctxt -> context		726104						
ANR	727330	Symbol	fci . size		726104						
ANR	727331	Symbol	fci . no_separation		726104						
ANR	727332	Symbol	intern -> node_list		726104						
ANR	727333	Symbol	IS_FALSE		726104						
ANR	727334	Symbol	* obj		726104						
ANR	727335	Symbol	intern		726104						
ANR	727336	Symbol	SUCCESS		726104						
ANR	727337	Symbol	i		726104						
ANR	727338	Symbol	j		726104						
ANR	727339	Symbol	xmlStrdup		726104						
ANR	727340	Symbol	nargs		726104						
ANR	727341	Symbol	xmlGenericErrorContext		726104						
ANR	727342	Symbol	& fci		726104						
ANR	727343	Symbol	nsparent		726104						
ANR	727344	Symbol	fci . symbol_table		726104						
ANR	727345	Symbol	IS_OBJECT		726104						
ANR	727346	Symbol	safe_emalloc		726104						
ANR	727347	Symbol	fci . function_table		726104						
ANR	727348	Symbol	* curns		726104						
ANR	727349	Symbol	zend_hash_exists		726104						
ANR	727350	Symbol	xmlXPathNewNodeSet		726104						
ANR	727351	Symbol	dom_node_class_entry		726104						
ANR	727352	Symbol	& retval		726104						
ANR	727353	Symbol	& intern -> dom		726104						
ANR	727354	Symbol	* node		726104						
ANR	727355	Symbol	zend_call_function		726104						
ANR	727356	Symbol	node -> doc		726104						
ANR	727357	Symbol	IS_UNDEF		726104						
ANR	727358	Symbol	EG		726104						
ANR	727359	Symbol	NULL		726104						
ANR	727360	Symbol	obj -> boolval		726104						
ANR	727361	Symbol	zend_is_executing		726104						
ANR	727362	Symbol	intern -> registerPhpFunctions		726104						
ANR	727363	Symbol	retval		726104						
ANR	727364	Symbol	xmlNewDocNode		726104						
ANR	727365	Symbol	curns		726104						
ANR	727366	Symbol	* * * obj		726104						
ANR	727367	Symbol	node -> parent		726104						
ANR	727368	Symbol	* * obj -> nodesetval		726104						
ANR	727369	Symbol	node -> type		726104						
ANR	727370	Symbol	xmlXPathNewString		726104						
ANR	727371	Symbol	Z_DOMOBJ_P		726104						
ANR	727372	Symbol	obj -> stringval		726104						
ANR	727373	Symbol	node -> children		726104						
ANR	727374	Symbol	child		726104						
ANR	727375	Symbol	instanceof_function		726104						
ANR	727376	Symbol	node -> ns		726104						
ANR	727377	Symbol	fci . params		726104						
ANR	727378	Symbol	& child		726104						
ANR	727379	Symbol	xmlXPathNewBoolean		726104						
ANR	727380	Symbol	error		726104						
ANR	727381	Symbol	Z_OBJCE		726104						
ANR	727382	Symbol	valuePop		726104						
ANR	727383	Symbol	obj -> nodesetval		726104						
ANR	727384	Symbol	dom_object_get_node		726104						
ANR	727385	Symbol	* intern		726104						
ANR	727386	Symbol	fci . object		726104						
ANR	727387	Symbol	& fci . function_name		726104						
ANR	727388	Symbol	zval_get_string		726104						
ANR	727389	Symbol	XML_NAMESPACE_DECL		726104						
ANR	727390	Symbol	nodep		726104						
ANR	727391	Symbol	ZSTR_VAL		726104						
ANR	727392	Symbol	obj -> floatval		726104						
ANR	727393	Symbol	node -> name		726104						
ANR	727394	Symbol	* j		726104						
ANR	727395	Symbol	xmlNewNs		726104						
ANR	727396	Symbol	obj		726104						
ANR	727397	Symbol	* ctxt		726104						
ANR	727398	Function	dom_xpath_ext_function_string_php	241:0:7875:8020							
ANR	727399	FunctionDef	"dom_xpath_ext_function_string_php (xmlXPathParserContextPtr ctxt , int nargs)"		727398	0					
ANR	727400	CompoundStatement		242:0:7973:8020	727398	0					
ANR	727401	ExpressionStatement	"dom_xpath_ext_function_php ( ctxt , nargs , 1 )"	243:1:7976:8018	727398	0	True				
ANR	727402	CallExpression	"dom_xpath_ext_function_php ( ctxt , nargs , 1 )"		727398	0					
ANR	727403	Callee	dom_xpath_ext_function_php		727398	0					
ANR	727404	Identifier	dom_xpath_ext_function_php		727398	0					
ANR	727405	ArgumentList	ctxt		727398	1					
ANR	727406	Argument	ctxt		727398	0					
ANR	727407	Identifier	ctxt		727398	0					
ANR	727408	Argument	nargs		727398	1					
ANR	727409	Identifier	nargs		727398	0					
ANR	727410	Argument	1		727398	2					
ANR	727411	PrimaryExpression	1		727398	0					
ANR	727412	ReturnType	static void		727398	1					
ANR	727413	Identifier	dom_xpath_ext_function_string_php		727398	2					
ANR	727414	ParameterList	"xmlXPathParserContextPtr ctxt , int nargs"		727398	3					
ANR	727415	Parameter	xmlXPathParserContextPtr ctxt	241:46:7921:7949	727398	0	True				
ANR	727416	ParameterType	xmlXPathParserContextPtr		727398	0					
ANR	727417	Identifier	ctxt		727398	1					
ANR	727418	Parameter	int nargs	241:77:7952:7960	727398	1	True				
ANR	727419	ParameterType	int		727398	0					
ANR	727420	Identifier	nargs		727398	1					
ANR	727421	CFGEntryNode	ENTRY		727398		True				
ANR	727422	CFGExitNode	EXIT		727398		True				
ANR	727423	Symbol	nargs		727398						
ANR	727424	Symbol	ctxt		727398						
ANR	727425	Function	dom_xpath_ext_function_object_php	247:0:8033:8178							
ANR	727426	FunctionDef	"dom_xpath_ext_function_object_php (xmlXPathParserContextPtr ctxt , int nargs)"		727425	0					
ANR	727427	CompoundStatement		248:0:8131:8178	727425	0					
ANR	727428	ExpressionStatement	"dom_xpath_ext_function_php ( ctxt , nargs , 2 )"	249:1:8134:8176	727425	0	True				
ANR	727429	CallExpression	"dom_xpath_ext_function_php ( ctxt , nargs , 2 )"		727425	0					
ANR	727430	Callee	dom_xpath_ext_function_php		727425	0					
ANR	727431	Identifier	dom_xpath_ext_function_php		727425	0					
ANR	727432	ArgumentList	ctxt		727425	1					
ANR	727433	Argument	ctxt		727425	0					
ANR	727434	Identifier	ctxt		727425	0					
ANR	727435	Argument	nargs		727425	1					
ANR	727436	Identifier	nargs		727425	0					
ANR	727437	Argument	2		727425	2					
ANR	727438	PrimaryExpression	2		727425	0					
ANR	727439	ReturnType	static void		727425	1					
ANR	727440	Identifier	dom_xpath_ext_function_object_php		727425	2					
ANR	727441	ParameterList	"xmlXPathParserContextPtr ctxt , int nargs"		727425	3					
ANR	727442	Parameter	xmlXPathParserContextPtr ctxt	247:46:8079:8107	727425	0	True				
ANR	727443	ParameterType	xmlXPathParserContextPtr		727425	0					
ANR	727444	Identifier	ctxt		727425	1					
ANR	727445	Parameter	int nargs	247:77:8110:8118	727425	1	True				
ANR	727446	ParameterType	int		727425	0					
ANR	727447	Identifier	nargs		727425	1					
ANR	727448	CFGEntryNode	ENTRY		727425		True				
ANR	727449	CFGExitNode	EXIT		727425		True				
ANR	727450	Symbol	nargs		727425						
ANR	727451	Symbol	ctxt		727425						
ANR	727452	DeclStmt									
ANR	727453	Decl							zval	zval *	id
ANR	727454	Decl							zval	zval *	doc
ANR	727455	DeclStmt									
ANR	727456	Decl							xmlDocPtr	xmlDocPtr	docp
ANR	727457	DeclStmt									
ANR	727458	Decl							dom_object	dom_object *	docobj
ANR	727459	DeclStmt									
ANR	727460	Decl							dom_xpath_object	dom_xpath_object *	intern
ANR	727461	DeclStmt									
ANR	727462	Decl							xmlXPathContextPtr	xmlXPathContextPtr	ctx
ANR	727463	Decl							xmlXPathContextPtr	xmlXPathContextPtr	oldctx
ANR	727464	Function	dom_xpath_document_read	298:0:9506:9767							
ANR	727465	FunctionDef	"dom_xpath_document_read (dom_object * obj , zval * retval)"		727464	0					
ANR	727466	CompoundStatement		299:0:9565:9767	727464	0					
ANR	727467	IdentifierDeclStatement	xmlDoc * docp = NULL ;	300:1:9568:9587	727464	0	True				
ANR	727468	IdentifierDecl	* docp = NULL		727464	0					
ANR	727469	IdentifierDeclType	xmlDoc *		727464	0					
ANR	727470	Identifier	docp		727464	1					
ANR	727471	AssignmentExpression	* docp = NULL		727464	2		=			
ANR	727472	Identifier	NULL		727464	0					
ANR	727473	Identifier	NULL		727464	1					
ANR	727474	IdentifierDeclStatement	xmlXPathContextPtr ctx = ( xmlXPathContextPtr ) obj -> ptr ;	301:1:9590:9644	727464	1	True				
ANR	727475	IdentifierDecl	ctx = ( xmlXPathContextPtr ) obj -> ptr		727464	0					
ANR	727476	IdentifierDeclType	xmlXPathContextPtr		727464	0					
ANR	727477	Identifier	ctx		727464	1					
ANR	727478	AssignmentExpression	ctx = ( xmlXPathContextPtr ) obj -> ptr		727464	2		=			
ANR	727479	Identifier	ctx		727464	0					
ANR	727480	CastExpression	( xmlXPathContextPtr ) obj -> ptr		727464	1					
ANR	727481	CastTarget	xmlXPathContextPtr		727464	0					
ANR	727482	PtrMemberAccess	obj -> ptr		727464	1					
ANR	727483	Identifier	obj		727464	0					
ANR	727484	Identifier	ptr		727464	1					
ANR	727485	IfStatement	if ( ctx )		727464	2					
ANR	727486	Condition	ctx	303:5:9652:9654	727464	0	True				
ANR	727487	Identifier	ctx		727464	0					
ANR	727488	CompoundStatement		5:10:91:91	727464	1					
ANR	727489	ExpressionStatement	docp = ( xmlDocPtr ) ctx -> doc	304:2:9661:9688	727464	0	True				
ANR	727490	AssignmentExpression	docp = ( xmlDocPtr ) ctx -> doc		727464	0		=			
ANR	727491	Identifier	docp		727464	0					
ANR	727492	CastExpression	( xmlDocPtr ) ctx -> doc		727464	1					
ANR	727493	CastTarget	xmlDocPtr		727464	0					
ANR	727494	PtrMemberAccess	ctx -> doc		727464	1					
ANR	727495	Identifier	ctx		727464	0					
ANR	727496	Identifier	doc		727464	1					
ANR	727497	ExpressionStatement	"php_dom_create_object ( ( xmlNodePtr ) docp , retval , obj )"	307:1:9695:9748	727464	3	True				
ANR	727498	CallExpression	"php_dom_create_object ( ( xmlNodePtr ) docp , retval , obj )"		727464	0					
ANR	727499	Callee	php_dom_create_object		727464	0					
ANR	727500	Identifier	php_dom_create_object		727464	0					
ANR	727501	ArgumentList	( xmlNodePtr ) docp		727464	1					
ANR	727502	Argument	( xmlNodePtr ) docp		727464	0					
ANR	727503	CastExpression	( xmlNodePtr ) docp		727464	0					
ANR	727504	CastTarget	xmlNodePtr		727464	0					
ANR	727505	Identifier	docp		727464	1					
ANR	727506	Argument	retval		727464	1					
ANR	727507	Identifier	retval		727464	0					
ANR	727508	Argument	obj		727464	2					
ANR	727509	Identifier	obj		727464	0					
ANR	727510	ReturnStatement	return SUCCESS ;	308:1:9751:9765	727464	4	True				
ANR	727511	Identifier	SUCCESS		727464	0					
ANR	727512	ReturnType	int		727464	1					
ANR	727513	Identifier	dom_xpath_document_read		727464	2					
ANR	727514	ParameterList	"dom_object * obj , zval * retval"		727464	3					
ANR	727515	Parameter	dom_object * obj	298:28:9534:9548	727464	0	True				
ANR	727516	ParameterType	dom_object *		727464	0					
ANR	727517	Identifier	obj		727464	1					
ANR	727518	Parameter	zval * retval	298:45:9551:9562	727464	1	True				
ANR	727519	ParameterType	zval *		727464	0					
ANR	727520	Identifier	retval		727464	1					
ANR	727521	CFGEntryNode	ENTRY		727464		True				
ANR	727522	CFGExitNode	EXIT		727464		True				
ANR	727523	Symbol	* obj		727464						
ANR	727524	Symbol	NULL		727464						
ANR	727525	Symbol	ctx -> doc		727464						
ANR	727526	Symbol	SUCCESS		727464						
ANR	727527	Symbol	obj		727464						
ANR	727528	Symbol	ctx		727464						
ANR	727529	Symbol	docp		727464						
ANR	727530	Symbol	obj -> ptr		727464						
ANR	727531	Symbol	retval		727464						
ANR	727532	Symbol	* ctx		727464						
ANR	727533	DeclStmt									
ANR	727534	Decl							zval	zval *	id
ANR	727535	DeclStmt									
ANR	727536	Decl							xmlXPathContextPtr	xmlXPathContextPtr	ctxp
ANR	727537	DeclStmt									
ANR	727538	Decl							size_t	size_t	prefix_len
ANR	727539	Decl							size_t	size_t	ns_uri_len
ANR	727540	DeclStmt									
ANR	727541	Decl							dom_xpath_object	dom_xpath_object *	intern
ANR	727542	DeclStmt									
ANR	727543	Decl							unsigned char	unsigned char *	prefix
ANR	727544	Decl							unsigned char	unsigned char *	ns_uri
ANR	727545	Function	dom_xpath_iter	340:0:10467:10691							
ANR	727546	FunctionDef	"dom_xpath_iter (zval * baseobj , dom_object * intern)"		727545	0					
ANR	727547	CompoundStatement		341:0:10539:10691	727545	0					
ANR	727548	IdentifierDeclStatement	dom_nnodemap_object * mapptr = ( dom_nnodemap_object * ) intern -> ptr ;	342:1:10542:10607	727545	0	True				
ANR	727549	IdentifierDecl	* mapptr = ( dom_nnodemap_object * ) intern -> ptr		727545	0					
ANR	727550	IdentifierDeclType	dom_nnodemap_object *		727545	0					
ANR	727551	Identifier	mapptr		727545	1					
ANR	727552	AssignmentExpression	* mapptr = ( dom_nnodemap_object * ) intern -> ptr		727545	2		=			
ANR	727553	Identifier	mapptr		727545	0					
ANR	727554	CastExpression	( dom_nnodemap_object * ) intern -> ptr		727545	1					
ANR	727555	CastTarget	dom_nnodemap_object *		727545	0					
ANR	727556	PtrMemberAccess	intern -> ptr		727545	1					
ANR	727557	Identifier	intern		727545	0					
ANR	727558	Identifier	ptr		727545	1					
ANR	727559	ExpressionStatement	"ZVAL_COPY_VALUE ( & mapptr -> baseobj_zv , baseobj )"	344:1:10611:10656	727545	1	True				
ANR	727560	CallExpression	"ZVAL_COPY_VALUE ( & mapptr -> baseobj_zv , baseobj )"		727545	0					
ANR	727561	Callee	ZVAL_COPY_VALUE		727545	0					
ANR	727562	Identifier	ZVAL_COPY_VALUE		727545	0					
ANR	727563	ArgumentList	& mapptr -> baseobj_zv		727545	1					
ANR	727564	Argument	& mapptr -> baseobj_zv		727545	0					
ANR	727565	UnaryOperationExpression	& mapptr -> baseobj_zv		727545	0					
ANR	727566	UnaryOperator	&		727545	0					
ANR	727567	PtrMemberAccess	mapptr -> baseobj_zv		727545	1					
ANR	727568	Identifier	mapptr		727545	0					
ANR	727569	Identifier	baseobj_zv		727545	1					
ANR	727570	Argument	baseobj		727545	1					
ANR	727571	Identifier	baseobj		727545	0					
ANR	727572	ExpressionStatement	mapptr -> nodetype = DOM_NODESET	345:1:10659:10689	727545	2	True				
ANR	727573	AssignmentExpression	mapptr -> nodetype = DOM_NODESET		727545	0		=			
ANR	727574	PtrMemberAccess	mapptr -> nodetype		727545	0					
ANR	727575	Identifier	mapptr		727545	0					
ANR	727576	Identifier	nodetype		727545	1					
ANR	727577	Identifier	DOM_NODESET		727545	1					
ANR	727578	ReturnType	static void		727545	1					
ANR	727579	Identifier	dom_xpath_iter		727545	2					
ANR	727580	ParameterList	"zval * baseobj , dom_object * intern"		727545	3					
ANR	727581	Parameter	zval * baseobj	340:27:10494:10506	727545	0	True				
ANR	727582	ParameterType	zval *		727545	0					
ANR	727583	Identifier	baseobj		727545	1					
ANR	727584	Parameter	dom_object * intern	340:42:10509:10526	727545	1	True				
ANR	727585	ParameterType	dom_object *		727545	0					
ANR	727586	Identifier	intern		727545	1					
ANR	727587	CFGEntryNode	ENTRY		727545		True				
ANR	727588	CFGExitNode	EXIT		727545		True				
ANR	727589	Symbol	* intern		727545						
ANR	727590	Symbol	DOM_NODESET		727545						
ANR	727591	Symbol	intern		727545						
ANR	727592	Symbol	& mapptr -> baseobj_zv		727545						
ANR	727593	Symbol	mapptr		727545						
ANR	727594	Symbol	baseobj		727545						
ANR	727595	Symbol	* mapptr		727545						
ANR	727596	Symbol	mapptr -> nodetype		727545						
ANR	727597	Symbol	intern -> ptr		727545						
ANR	727598	DeclStmt									
ANR	727599	Decl							zval	zval *	id
ANR	727600	Decl							zval	zval	retval
ANR	727601	Decl							zval	zval *	context
ANR	727602	DeclStmt									
ANR	727603	Decl							xmlXPathContextPtr	xmlXPathContextPtr	ctxp
ANR	727604	DeclStmt									
ANR	727605	Decl							xmlNodePtr	xmlNodePtr	nodep
ANR	727606	DeclStmt									
ANR	727607	Decl							xmlXPathObjectPtr	xmlXPathObjectPtr	xpathobjp
ANR	727608	DeclStmt									
ANR	727609	Decl							size_t	size_t	expr_len
ANR	727610	Decl							size_t	size_t	nsnbr
ANR	727611	Decl							size_t	size_t	xpath_type
ANR	727612	DeclStmt									
ANR	727613	Decl							dom_xpath_object	dom_xpath_object *	intern
ANR	727614	DeclStmt									
ANR	727615	Decl							dom_object	dom_object *	nodeobj
ANR	727616	DeclStmt									
ANR	727617	Decl							char	char *	expr
ANR	727618	DeclStmt									
ANR	727619	Decl							xmlDoc	xmlDoc *	docp
ANR	727620	DeclStmt									
ANR	727621	Decl							xmlNsPtr	xmlNsPtr *	ns
ANR	727622	DeclStmt									
ANR	727623	Decl							zend_bool	zend_bool	register_node_ns
ANR	727624	DeclStmt									
ANR	727625	Decl							int	int	i
ANR	727626	DeclStmt									
ANR	727627	Decl							xmlNodeSetPtr	xmlNodeSetPtr	nodesetp
ANR	727628	DeclStmt									
ANR	727629	Decl							xmlNodePtr	xmlNodePtr	node
ANR	727630	DeclStmt									
ANR	727631	Decl							zval	zval	child
ANR	727632	DeclStmt									
ANR	727633	Decl							xmlNsPtr	xmlNsPtr	curns
ANR	727634	DeclStmt									
ANR	727635	Decl							xmlNodePtr	xmlNodePtr	nsparent
ANR	727636	DeclStmt									
ANR	727637	Decl							zval	zval *	id
ANR	727638	DeclStmt									
ANR	727639	Decl							dom_xpath_object	dom_xpath_object *	intern
ANR	727640	DeclStmt									
ANR	727641	Decl							zval	zval *	array_value
ANR	727642	Decl							zval	zval *	entry
ANR	727643	Decl							zval	zval	new_string
ANR	727644	DeclStmt									
ANR	727645	Decl							zend_string	zend_string *	name
ANR	727646	DeclStmt									
ANR	727647	Decl							zend_string	zend_string *	str
