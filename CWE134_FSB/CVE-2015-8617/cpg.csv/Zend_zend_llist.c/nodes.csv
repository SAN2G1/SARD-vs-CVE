command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	298486	File	data/converged/CVE-2015-8617_php-src/Zend_zend_llist.c								
ANR	298487	Function	zend_llist_init	26:0:1301:1527							
ANR	298488	FunctionDef	"zend_llist_init (zend_llist * l , size_t size , llist_dtor_func_t dtor , unsigned char persistent)"		298487	0					
ANR	298489	CompoundStatement		27:0:1409:1527	298487	0					
ANR	298490	ExpressionStatement	l -> head = NULL	28:1:1412:1427	298487	0	True				
ANR	298491	AssignmentExpression	l -> head = NULL		298487	0		=			
ANR	298492	PtrMemberAccess	l -> head		298487	0					
ANR	298493	Identifier	l		298487	0					
ANR	298494	Identifier	head		298487	1					
ANR	298495	Identifier	NULL		298487	1					
ANR	298496	ExpressionStatement	l -> tail = NULL	29:1:1430:1445	298487	1	True				
ANR	298497	AssignmentExpression	l -> tail = NULL		298487	0		=			
ANR	298498	PtrMemberAccess	l -> tail		298487	0					
ANR	298499	Identifier	l		298487	0					
ANR	298500	Identifier	tail		298487	1					
ANR	298501	Identifier	NULL		298487	1					
ANR	298502	ExpressionStatement	l -> count = 0	30:1:1448:1460	298487	2	True				
ANR	298503	AssignmentExpression	l -> count = 0		298487	0		=			
ANR	298504	PtrMemberAccess	l -> count		298487	0					
ANR	298505	Identifier	l		298487	0					
ANR	298506	Identifier	count		298487	1					
ANR	298507	PrimaryExpression	0		298487	1					
ANR	298508	ExpressionStatement	l -> size = size	31:1:1463:1478	298487	3	True				
ANR	298509	AssignmentExpression	l -> size = size		298487	0		=			
ANR	298510	PtrMemberAccess	l -> size		298487	0					
ANR	298511	Identifier	l		298487	0					
ANR	298512	Identifier	size		298487	1					
ANR	298513	Identifier	size		298487	1					
ANR	298514	ExpressionStatement	l -> dtor = dtor	32:1:1481:1496	298487	4	True				
ANR	298515	AssignmentExpression	l -> dtor = dtor		298487	0		=			
ANR	298516	PtrMemberAccess	l -> dtor		298487	0					
ANR	298517	Identifier	l		298487	0					
ANR	298518	Identifier	dtor		298487	1					
ANR	298519	Identifier	dtor		298487	1					
ANR	298520	ExpressionStatement	l -> persistent = persistent	33:1:1499:1525	298487	5	True				
ANR	298521	AssignmentExpression	l -> persistent = persistent		298487	0		=			
ANR	298522	PtrMemberAccess	l -> persistent		298487	0					
ANR	298523	Identifier	l		298487	0					
ANR	298524	Identifier	persistent		298487	1					
ANR	298525	Identifier	persistent		298487	1					
ANR	298526	ReturnType	ZEND_API void		298487	1					
ANR	298527	Identifier	zend_llist_init		298487	2					
ANR	298528	ParameterList	"zend_llist * l , size_t size , llist_dtor_func_t dtor , unsigned char persistent"		298487	3					
ANR	298529	Parameter	zend_llist * l	26:30:1331:1343	298487	0	True				
ANR	298530	ParameterType	zend_llist *		298487	0					
ANR	298531	Identifier	l		298487	1					
ANR	298532	Parameter	size_t size	26:45:1346:1356	298487	1	True				
ANR	298533	ParameterType	size_t		298487	0					
ANR	298534	Identifier	size		298487	1					
ANR	298535	Parameter	llist_dtor_func_t dtor	26:58:1359:1380	298487	2	True				
ANR	298536	ParameterType	llist_dtor_func_t		298487	0					
ANR	298537	Identifier	dtor		298487	1					
ANR	298538	Parameter	unsigned char persistent	26:82:1383:1406	298487	3	True				
ANR	298539	ParameterType	unsigned char		298487	0					
ANR	298540	Identifier	persistent		298487	1					
ANR	298541	CFGEntryNode	ENTRY		298487		True				
ANR	298542	CFGExitNode	EXIT		298487		True				
ANR	298543	Symbol	NULL		298487						
ANR	298544	Symbol	size		298487						
ANR	298545	Symbol	l -> dtor		298487						
ANR	298546	Symbol	l -> head		298487						
ANR	298547	Symbol	* l		298487						
ANR	298548	Symbol	l -> count		298487						
ANR	298549	Symbol	l -> persistent		298487						
ANR	298550	Symbol	l -> tail		298487						
ANR	298551	Symbol	l		298487						
ANR	298552	Symbol	dtor		298487						
ANR	298553	Symbol	persistent		298487						
ANR	298554	Symbol	l -> size		298487						
ANR	298555	Function	zend_llist_add_element	36:0:1530:1868							
ANR	298556	FunctionDef	"zend_llist_add_element (zend_llist * l , void * element)"		298555	0					
ANR	298557	CompoundStatement		37:0:1597:1868	298555	0					
ANR	298558	IdentifierDeclStatement	"zend_llist_element * tmp = pemalloc ( sizeof ( zend_llist_element ) + l -> size - 1 , l -> persistent ) ;"	38:1:1600:1687	298555	0	True				
ANR	298559	IdentifierDecl	"* tmp = pemalloc ( sizeof ( zend_llist_element ) + l -> size - 1 , l -> persistent )"		298555	0					
ANR	298560	IdentifierDeclType	zend_llist_element *		298555	0					
ANR	298561	Identifier	tmp		298555	1					
ANR	298562	AssignmentExpression	"* tmp = pemalloc ( sizeof ( zend_llist_element ) + l -> size - 1 , l -> persistent )"		298555	2		=			
ANR	298563	Identifier	tmp		298555	0					
ANR	298564	CallExpression	"pemalloc ( sizeof ( zend_llist_element ) + l -> size - 1 , l -> persistent )"		298555	1					
ANR	298565	Callee	pemalloc		298555	0					
ANR	298566	Identifier	pemalloc		298555	0					
ANR	298567	ArgumentList	sizeof ( zend_llist_element ) + l -> size - 1		298555	1					
ANR	298568	Argument	sizeof ( zend_llist_element ) + l -> size - 1		298555	0					
ANR	298569	AdditiveExpression	sizeof ( zend_llist_element ) + l -> size - 1		298555	0		+			
ANR	298570	SizeofExpression	sizeof ( zend_llist_element )		298555	0					
ANR	298571	Sizeof	sizeof		298555	0					
ANR	298572	SizeofOperand	zend_llist_element		298555	1					
ANR	298573	AdditiveExpression	l -> size - 1		298555	1		-			
ANR	298574	PtrMemberAccess	l -> size		298555	0					
ANR	298575	Identifier	l		298555	0					
ANR	298576	Identifier	size		298555	1					
ANR	298577	PrimaryExpression	1		298555	1					
ANR	298578	Argument	l -> persistent		298555	1					
ANR	298579	PtrMemberAccess	l -> persistent		298555	0					
ANR	298580	Identifier	l		298555	0					
ANR	298581	Identifier	persistent		298555	1					
ANR	298582	ExpressionStatement	tmp -> prev = l -> tail	40:1:1691:1710	298555	1	True				
ANR	298583	AssignmentExpression	tmp -> prev = l -> tail		298555	0		=			
ANR	298584	PtrMemberAccess	tmp -> prev		298555	0					
ANR	298585	Identifier	tmp		298555	0					
ANR	298586	Identifier	prev		298555	1					
ANR	298587	PtrMemberAccess	l -> tail		298555	1					
ANR	298588	Identifier	l		298555	0					
ANR	298589	Identifier	tail		298555	1					
ANR	298590	ExpressionStatement	tmp -> next = NULL	41:1:1713:1729	298555	2	True				
ANR	298591	AssignmentExpression	tmp -> next = NULL		298555	0		=			
ANR	298592	PtrMemberAccess	tmp -> next		298555	0					
ANR	298593	Identifier	tmp		298555	0					
ANR	298594	Identifier	next		298555	1					
ANR	298595	Identifier	NULL		298555	1					
ANR	298596	IfStatement	if ( l -> tail )		298555	3					
ANR	298597	Condition	l -> tail	42:5:1736:1742	298555	0	True				
ANR	298598	PtrMemberAccess	l -> tail		298555	0					
ANR	298599	Identifier	l		298555	0					
ANR	298600	Identifier	tail		298555	1					
ANR	298601	CompoundStatement		6:14:147:147	298555	1					
ANR	298602	ExpressionStatement	l -> tail -> next = tmp	43:2:1749:1768	298555	0	True				
ANR	298603	AssignmentExpression	l -> tail -> next = tmp		298555	0		=			
ANR	298604	PtrMemberAccess	l -> tail -> next		298555	0					
ANR	298605	PtrMemberAccess	l -> tail		298555	0					
ANR	298606	Identifier	l		298555	0					
ANR	298607	Identifier	tail		298555	1					
ANR	298608	Identifier	next		298555	1					
ANR	298609	Identifier	tmp		298555	1					
ANR	298610	ElseStatement	else		298555	0					
ANR	298611	CompoundStatement		8:8:180:180	298555	0					
ANR	298612	ExpressionStatement	l -> head = tmp	45:2:1782:1795	298555	0	True				
ANR	298613	AssignmentExpression	l -> head = tmp		298555	0		=			
ANR	298614	PtrMemberAccess	l -> head		298555	0					
ANR	298615	Identifier	l		298555	0					
ANR	298616	Identifier	head		298555	1					
ANR	298617	Identifier	tmp		298555	1					
ANR	298618	ExpressionStatement	l -> tail = tmp	47:1:1801:1814	298555	4	True				
ANR	298619	AssignmentExpression	l -> tail = tmp		298555	0		=			
ANR	298620	PtrMemberAccess	l -> tail		298555	0					
ANR	298621	Identifier	l		298555	0					
ANR	298622	Identifier	tail		298555	1					
ANR	298623	Identifier	tmp		298555	1					
ANR	298624	ExpressionStatement	"memcpy ( tmp -> data , element , l -> size )"	48:1:1817:1852	298555	5	True				
ANR	298625	CallExpression	"memcpy ( tmp -> data , element , l -> size )"		298555	0					
ANR	298626	Callee	memcpy		298555	0					
ANR	298627	Identifier	memcpy		298555	0					
ANR	298628	ArgumentList	tmp -> data		298555	1					
ANR	298629	Argument	tmp -> data		298555	0					
ANR	298630	PtrMemberAccess	tmp -> data		298555	0					
ANR	298631	Identifier	tmp		298555	0					
ANR	298632	Identifier	data		298555	1					
ANR	298633	Argument	element		298555	1					
ANR	298634	Identifier	element		298555	0					
ANR	298635	Argument	l -> size		298555	2					
ANR	298636	PtrMemberAccess	l -> size		298555	0					
ANR	298637	Identifier	l		298555	0					
ANR	298638	Identifier	size		298555	1					
ANR	298639	ExpressionStatement	++ l -> count	50:1:1856:1866	298555	6	True				
ANR	298640	UnaryExpression	++ l -> count		298555	0					
ANR	298641	IncDec	++		298555	0					
ANR	298642	PtrMemberAccess	l -> count		298555	1					
ANR	298643	Identifier	l		298555	0					
ANR	298644	Identifier	count		298555	1					
ANR	298645	ReturnType	ZEND_API void		298555	1					
ANR	298646	Identifier	zend_llist_add_element		298555	2					
ANR	298647	ParameterList	"zend_llist * l , void * element"		298555	3					
ANR	298648	Parameter	zend_llist * l	36:37:1567:1579	298555	0	True				
ANR	298649	ParameterType	zend_llist *		298555	0					
ANR	298650	Identifier	l		298555	1					
ANR	298651	Parameter	void * element	36:52:1582:1594	298555	1	True				
ANR	298652	ParameterType	void *		298555	0					
ANR	298653	Identifier	element		298555	1					
ANR	298654	CFGEntryNode	ENTRY		298555		True				
ANR	298655	CFGExitNode	EXIT		298555		True				
ANR	298656	Symbol	* l -> tail		298555						
ANR	298657	Symbol	* tmp		298555						
ANR	298658	Symbol	tmp -> prev		298555						
ANR	298659	Symbol	NULL		298555						
ANR	298660	Symbol	tmp -> data		298555						
ANR	298661	Symbol	l -> head		298555						
ANR	298662	Symbol	l -> persistent		298555						
ANR	298663	Symbol	l -> tail		298555						
ANR	298664	Symbol	l		298555						
ANR	298665	Symbol	tmp -> next		298555						
ANR	298666	Symbol	tmp		298555						
ANR	298667	Symbol	* l		298555						
ANR	298668	Symbol	l -> tail -> next		298555						
ANR	298669	Symbol	l -> size		298555						
ANR	298670	Symbol	element		298555						
ANR	298671	Symbol	pemalloc		298555						
ANR	298672	Symbol	* * l		298555						
ANR	298673	Function	zend_llist_prepend_element	54:0:1872:2214							
ANR	298674	FunctionDef	"zend_llist_prepend_element (zend_llist * l , void * element)"		298673	0					
ANR	298675	CompoundStatement		55:0:1943:2214	298673	0					
ANR	298676	IdentifierDeclStatement	"zend_llist_element * tmp = pemalloc ( sizeof ( zend_llist_element ) + l -> size - 1 , l -> persistent ) ;"	56:1:1946:2033	298673	0	True				
ANR	298677	IdentifierDecl	"* tmp = pemalloc ( sizeof ( zend_llist_element ) + l -> size - 1 , l -> persistent )"		298673	0					
ANR	298678	IdentifierDeclType	zend_llist_element *		298673	0					
ANR	298679	Identifier	tmp		298673	1					
ANR	298680	AssignmentExpression	"* tmp = pemalloc ( sizeof ( zend_llist_element ) + l -> size - 1 , l -> persistent )"		298673	2		=			
ANR	298681	Identifier	tmp		298673	0					
ANR	298682	CallExpression	"pemalloc ( sizeof ( zend_llist_element ) + l -> size - 1 , l -> persistent )"		298673	1					
ANR	298683	Callee	pemalloc		298673	0					
ANR	298684	Identifier	pemalloc		298673	0					
ANR	298685	ArgumentList	sizeof ( zend_llist_element ) + l -> size - 1		298673	1					
ANR	298686	Argument	sizeof ( zend_llist_element ) + l -> size - 1		298673	0					
ANR	298687	AdditiveExpression	sizeof ( zend_llist_element ) + l -> size - 1		298673	0		+			
ANR	298688	SizeofExpression	sizeof ( zend_llist_element )		298673	0					
ANR	298689	Sizeof	sizeof		298673	0					
ANR	298690	SizeofOperand	zend_llist_element		298673	1					
ANR	298691	AdditiveExpression	l -> size - 1		298673	1		-			
ANR	298692	PtrMemberAccess	l -> size		298673	0					
ANR	298693	Identifier	l		298673	0					
ANR	298694	Identifier	size		298673	1					
ANR	298695	PrimaryExpression	1		298673	1					
ANR	298696	Argument	l -> persistent		298673	1					
ANR	298697	PtrMemberAccess	l -> persistent		298673	0					
ANR	298698	Identifier	l		298673	0					
ANR	298699	Identifier	persistent		298673	1					
ANR	298700	ExpressionStatement	tmp -> next = l -> head	58:1:2037:2056	298673	1	True				
ANR	298701	AssignmentExpression	tmp -> next = l -> head		298673	0		=			
ANR	298702	PtrMemberAccess	tmp -> next		298673	0					
ANR	298703	Identifier	tmp		298673	0					
ANR	298704	Identifier	next		298673	1					
ANR	298705	PtrMemberAccess	l -> head		298673	1					
ANR	298706	Identifier	l		298673	0					
ANR	298707	Identifier	head		298673	1					
ANR	298708	ExpressionStatement	tmp -> prev = NULL	59:1:2059:2075	298673	2	True				
ANR	298709	AssignmentExpression	tmp -> prev = NULL		298673	0		=			
ANR	298710	PtrMemberAccess	tmp -> prev		298673	0					
ANR	298711	Identifier	tmp		298673	0					
ANR	298712	Identifier	prev		298673	1					
ANR	298713	Identifier	NULL		298673	1					
ANR	298714	IfStatement	if ( l -> head )		298673	3					
ANR	298715	Condition	l -> head	60:5:2082:2088	298673	0	True				
ANR	298716	PtrMemberAccess	l -> head		298673	0					
ANR	298717	Identifier	l		298673	0					
ANR	298718	Identifier	head		298673	1					
ANR	298719	CompoundStatement		6:14:147:147	298673	1					
ANR	298720	ExpressionStatement	l -> head -> prev = tmp	61:2:2095:2114	298673	0	True				
ANR	298721	AssignmentExpression	l -> head -> prev = tmp		298673	0		=			
ANR	298722	PtrMemberAccess	l -> head -> prev		298673	0					
ANR	298723	PtrMemberAccess	l -> head		298673	0					
ANR	298724	Identifier	l		298673	0					
ANR	298725	Identifier	head		298673	1					
ANR	298726	Identifier	prev		298673	1					
ANR	298727	Identifier	tmp		298673	1					
ANR	298728	ElseStatement	else		298673	0					
ANR	298729	CompoundStatement		8:8:180:180	298673	0					
ANR	298730	ExpressionStatement	l -> tail = tmp	63:2:2128:2141	298673	0	True				
ANR	298731	AssignmentExpression	l -> tail = tmp		298673	0		=			
ANR	298732	PtrMemberAccess	l -> tail		298673	0					
ANR	298733	Identifier	l		298673	0					
ANR	298734	Identifier	tail		298673	1					
ANR	298735	Identifier	tmp		298673	1					
ANR	298736	ExpressionStatement	l -> head = tmp	65:1:2147:2160	298673	4	True				
ANR	298737	AssignmentExpression	l -> head = tmp		298673	0		=			
ANR	298738	PtrMemberAccess	l -> head		298673	0					
ANR	298739	Identifier	l		298673	0					
ANR	298740	Identifier	head		298673	1					
ANR	298741	Identifier	tmp		298673	1					
ANR	298742	ExpressionStatement	"memcpy ( tmp -> data , element , l -> size )"	66:1:2163:2198	298673	5	True				
ANR	298743	CallExpression	"memcpy ( tmp -> data , element , l -> size )"		298673	0					
ANR	298744	Callee	memcpy		298673	0					
ANR	298745	Identifier	memcpy		298673	0					
ANR	298746	ArgumentList	tmp -> data		298673	1					
ANR	298747	Argument	tmp -> data		298673	0					
ANR	298748	PtrMemberAccess	tmp -> data		298673	0					
ANR	298749	Identifier	tmp		298673	0					
ANR	298750	Identifier	data		298673	1					
ANR	298751	Argument	element		298673	1					
ANR	298752	Identifier	element		298673	0					
ANR	298753	Argument	l -> size		298673	2					
ANR	298754	PtrMemberAccess	l -> size		298673	0					
ANR	298755	Identifier	l		298673	0					
ANR	298756	Identifier	size		298673	1					
ANR	298757	ExpressionStatement	++ l -> count	68:1:2202:2212	298673	6	True				
ANR	298758	UnaryExpression	++ l -> count		298673	0					
ANR	298759	IncDec	++		298673	0					
ANR	298760	PtrMemberAccess	l -> count		298673	1					
ANR	298761	Identifier	l		298673	0					
ANR	298762	Identifier	count		298673	1					
ANR	298763	ReturnType	ZEND_API void		298673	1					
ANR	298764	Identifier	zend_llist_prepend_element		298673	2					
ANR	298765	ParameterList	"zend_llist * l , void * element"		298673	3					
ANR	298766	Parameter	zend_llist * l	54:41:1913:1925	298673	0	True				
ANR	298767	ParameterType	zend_llist *		298673	0					
ANR	298768	Identifier	l		298673	1					
ANR	298769	Parameter	void * element	54:56:1928:1940	298673	1	True				
ANR	298770	ParameterType	void *		298673	0					
ANR	298771	Identifier	element		298673	1					
ANR	298772	CFGEntryNode	ENTRY		298673		True				
ANR	298773	CFGExitNode	EXIT		298673		True				
ANR	298774	Symbol	* tmp		298673						
ANR	298775	Symbol	tmp -> prev		298673						
ANR	298776	Symbol	NULL		298673						
ANR	298777	Symbol	tmp -> data		298673						
ANR	298778	Symbol	l -> head		298673						
ANR	298779	Symbol	l -> persistent		298673						
ANR	298780	Symbol	l -> tail		298673						
ANR	298781	Symbol	l		298673						
ANR	298782	Symbol	tmp -> next		298673						
ANR	298783	Symbol	* l -> head		298673						
ANR	298784	Symbol	tmp		298673						
ANR	298785	Symbol	* l		298673						
ANR	298786	Symbol	l -> head -> prev		298673						
ANR	298787	Symbol	l -> size		298673						
ANR	298788	Symbol	element		298673						
ANR	298789	Symbol	pemalloc		298673						
ANR	298790	Symbol	* * l		298673						
ANR	298791	Function	zend_llist_del_element	90:0:2627:2921							
ANR	298792	FunctionDef	"zend_llist_del_element (zend_llist * l , void * element , int ( * compare ) ( void * element1 , void * element2 ))"		298791	0					
ANR	298793	CompoundStatement		91:0:2742:2921	298791	0					
ANR	298794	IdentifierDeclStatement	zend_llist_element * current = l -> head ;	92:1:2745:2780	298791	0	True				
ANR	298795	IdentifierDecl	* current = l -> head		298791	0					
ANR	298796	IdentifierDeclType	zend_llist_element *		298791	0					
ANR	298797	Identifier	current		298791	1					
ANR	298798	AssignmentExpression	* current = l -> head		298791	2		=			
ANR	298799	Identifier	current		298791	0					
ANR	298800	PtrMemberAccess	l -> head		298791	1					
ANR	298801	Identifier	l		298791	0					
ANR	298802	Identifier	head		298791	1					
ANR	298803	WhileStatement	while ( current )		298791	1					
ANR	298804	Condition	current	94:8:2791:2797	298791	0	True				
ANR	298805	Identifier	current		298791	0					
ANR	298806	CompoundStatement		4:17:57:57	298791	1					
ANR	298807	IfStatement	"if ( compare ( current -> data , element ) )"		298791	0					
ANR	298808	Condition	"compare ( current -> data , element )"	95:6:2808:2838	298791	0	True				
ANR	298809	CallExpression	"compare ( current -> data , element )"		298791	0					
ANR	298810	Callee	compare		298791	0					
ANR	298811	Identifier	compare		298791	0					
ANR	298812	ArgumentList	current -> data		298791	1					
ANR	298813	Argument	current -> data		298791	0					
ANR	298814	PtrMemberAccess	current -> data		298791	0					
ANR	298815	Identifier	current		298791	0					
ANR	298816	Identifier	data		298791	1					
ANR	298817	Argument	element		298791	1					
ANR	298818	Identifier	element		298791	0					
ANR	298819	CompoundStatement		5:39:98:98	298791	1					
ANR	298820	ExpressionStatement	"DEL_LLIST_ELEMENT ( current , l )"	96:3:2846:2875	298791	0	True				
ANR	298821	CallExpression	"DEL_LLIST_ELEMENT ( current , l )"		298791	0					
ANR	298822	Callee	DEL_LLIST_ELEMENT		298791	0					
ANR	298823	Identifier	DEL_LLIST_ELEMENT		298791	0					
ANR	298824	ArgumentList	current		298791	1					
ANR	298825	Argument	current		298791	0					
ANR	298826	Identifier	current		298791	0					
ANR	298827	Argument	l		298791	1					
ANR	298828	Identifier	l		298791	0					
ANR	298829	BreakStatement	break ;	97:3:2880:2885	298791	1	True				
ANR	298830	ExpressionStatement	current = current -> next	99:2:2893:2916	298791	1	True				
ANR	298831	AssignmentExpression	current = current -> next		298791	0		=			
ANR	298832	Identifier	current		298791	0					
ANR	298833	PtrMemberAccess	current -> next		298791	1					
ANR	298834	Identifier	current		298791	0					
ANR	298835	Identifier	next		298791	1					
ANR	298836	ReturnType	ZEND_API void		298791	1					
ANR	298837	Identifier	zend_llist_del_element		298791	2					
ANR	298838	ParameterList	"zend_llist * l , void * element , int ( * compare ) ( void * element1 , void * element2 )"		298791	3					
ANR	298839	Parameter	zend_llist * l	90:37:2664:2676	298791	0	True				
ANR	298840	ParameterType	zend_llist *		298791	0					
ANR	298841	Identifier	l		298791	1					
ANR	298842	Parameter	void * element	90:52:2679:2691	298791	1	True				
ANR	298843	ParameterType	void *		298791	0					
ANR	298844	Identifier	element		298791	1					
ANR	298845	Parameter	"int ( * compare ) ( void * element1 , void * element2 )"	90:67:2694:2739	298791	2	True				
ANR	298846	ParameterType	"(( void * element1 , void * element2 ) int) *"		298791	0					
ANR	298847	Identifier	compare		298791	1					
ANR	298848	CFGEntryNode	ENTRY		298791		True				
ANR	298849	CFGExitNode	EXIT		298791		True				
ANR	298850	Symbol	current -> data		298791						
ANR	298851	Symbol	compare		298791						
ANR	298852	Symbol	current		298791						
ANR	298853	Symbol	current -> next		298791						
ANR	298854	Symbol	* l		298791						
ANR	298855	Symbol	l -> head		298791						
ANR	298856	Symbol	* current		298791						
ANR	298857	Symbol	l		298791						
ANR	298858	Symbol	element		298791						
ANR	298859	Function	zend_llist_destroy	104:0:2925:3183							
ANR	298860	FunctionDef	zend_llist_destroy (zend_llist * l)		298859	0					
ANR	298861	CompoundStatement		105:0:2973:3183	298859	0					
ANR	298862	IdentifierDeclStatement	"zend_llist_element * current = l -> head , * next ;"	106:1:2976:3018	298859	0	True				
ANR	298863	IdentifierDecl	* current = l -> head		298859	0					
ANR	298864	IdentifierDeclType	zend_llist_element *		298859	0					
ANR	298865	Identifier	current		298859	1					
ANR	298866	AssignmentExpression	* current = l -> head		298859	2		=			
ANR	298867	Identifier	current		298859	0					
ANR	298868	PtrMemberAccess	l -> head		298859	1					
ANR	298869	Identifier	l		298859	0					
ANR	298870	Identifier	head		298859	1					
ANR	298871	IdentifierDecl	* next		298859	1					
ANR	298872	IdentifierDeclType	zend_llist_element *		298859	0					
ANR	298873	Identifier	next		298859	1					
ANR	298874	WhileStatement	while ( current )		298859	1					
ANR	298875	Condition	current	108:8:3029:3035	298859	0	True				
ANR	298876	Identifier	current		298859	0					
ANR	298877	CompoundStatement		4:17:64:64	298859	1					
ANR	298878	ExpressionStatement	next = current -> next	109:2:3042:3062	298859	0	True				
ANR	298879	AssignmentExpression	next = current -> next		298859	0		=			
ANR	298880	Identifier	next		298859	0					
ANR	298881	PtrMemberAccess	current -> next		298859	1					
ANR	298882	Identifier	current		298859	0					
ANR	298883	Identifier	next		298859	1					
ANR	298884	IfStatement	if ( l -> dtor )		298859	1					
ANR	298885	Condition	l -> dtor	110:6:3070:3076	298859	0	True				
ANR	298886	PtrMemberAccess	l -> dtor		298859	0					
ANR	298887	Identifier	l		298859	0					
ANR	298888	Identifier	dtor		298859	1					
ANR	298889	CompoundStatement		6:15:105:105	298859	1					
ANR	298890	ExpressionStatement	l -> dtor ( current -> data )	111:3:3084:3106	298859	0	True				
ANR	298891	CallExpression	l -> dtor ( current -> data )		298859	0					
ANR	298892	Callee	l -> dtor		298859	0					
ANR	298893	PtrMemberAccess	l -> dtor		298859	0					
ANR	298894	Identifier	l		298859	0					
ANR	298895	Identifier	dtor		298859	1					
ANR	298896	ArgumentList	current -> data		298859	1					
ANR	298897	Argument	current -> data		298859	0					
ANR	298898	PtrMemberAccess	current -> data		298859	0					
ANR	298899	Identifier	current		298859	0					
ANR	298900	Identifier	data		298859	1					
ANR	298901	ExpressionStatement	"pefree ( current , l -> persistent )"	113:2:3114:3144	298859	2	True				
ANR	298902	CallExpression	"pefree ( current , l -> persistent )"		298859	0					
ANR	298903	Callee	pefree		298859	0					
ANR	298904	Identifier	pefree		298859	0					
ANR	298905	ArgumentList	current		298859	1					
ANR	298906	Argument	current		298859	0					
ANR	298907	Identifier	current		298859	0					
ANR	298908	Argument	l -> persistent		298859	1					
ANR	298909	PtrMemberAccess	l -> persistent		298859	0					
ANR	298910	Identifier	l		298859	0					
ANR	298911	Identifier	persistent		298859	1					
ANR	298912	ExpressionStatement	current = next	114:2:3148:3162	298859	3	True				
ANR	298913	AssignmentExpression	current = next		298859	0		=			
ANR	298914	Identifier	current		298859	0					
ANR	298915	Identifier	next		298859	1					
ANR	298916	ExpressionStatement	l -> count = 0	117:1:3169:3181	298859	2	True				
ANR	298917	AssignmentExpression	l -> count = 0		298859	0		=			
ANR	298918	PtrMemberAccess	l -> count		298859	0					
ANR	298919	Identifier	l		298859	0					
ANR	298920	Identifier	count		298859	1					
ANR	298921	PrimaryExpression	0		298859	1					
ANR	298922	ReturnType	ZEND_API void		298859	1					
ANR	298923	Identifier	zend_llist_destroy		298859	2					
ANR	298924	ParameterList	zend_llist * l		298859	3					
ANR	298925	Parameter	zend_llist * l	104:33:2958:2970	298859	0	True				
ANR	298926	ParameterType	zend_llist *		298859	0					
ANR	298927	Identifier	l		298859	1					
ANR	298928	CFGEntryNode	ENTRY		298859		True				
ANR	298929	CFGExitNode	EXIT		298859		True				
ANR	298930	Symbol	next		298859						
ANR	298931	Symbol	current -> data		298859						
ANR	298932	Symbol	current		298859						
ANR	298933	Symbol	current -> next		298859						
ANR	298934	Symbol	l -> dtor		298859						
ANR	298935	Symbol	* l		298859						
ANR	298936	Symbol	l -> head		298859						
ANR	298937	Symbol	l -> count		298859						
ANR	298938	Symbol	* current		298859						
ANR	298939	Symbol	l -> persistent		298859						
ANR	298940	Symbol	l		298859						
ANR	298941	Function	zend_llist_clean	121:0:3187:3286							
ANR	298942	FunctionDef	zend_llist_clean (zend_llist * l)		298941	0					
ANR	298943	CompoundStatement		122:0:3233:3286	298941	0					
ANR	298944	ExpressionStatement	zend_llist_destroy ( l )	123:1:3236:3257	298941	0	True				
ANR	298945	CallExpression	zend_llist_destroy ( l )		298941	0					
ANR	298946	Callee	zend_llist_destroy		298941	0					
ANR	298947	Identifier	zend_llist_destroy		298941	0					
ANR	298948	ArgumentList	l		298941	1					
ANR	298949	Argument	l		298941	0					
ANR	298950	Identifier	l		298941	0					
ANR	298951	ExpressionStatement	l -> head = l -> tail = NULL	124:1:3260:3284	298941	1	True				
ANR	298952	AssignmentExpression	l -> head = l -> tail = NULL		298941	0		=			
ANR	298953	PtrMemberAccess	l -> head		298941	0					
ANR	298954	Identifier	l		298941	0					
ANR	298955	Identifier	head		298941	1					
ANR	298956	AssignmentExpression	l -> tail = NULL		298941	1		=			
ANR	298957	PtrMemberAccess	l -> tail		298941	0					
ANR	298958	Identifier	l		298941	0					
ANR	298959	Identifier	tail		298941	1					
ANR	298960	Identifier	NULL		298941	1					
ANR	298961	ReturnType	ZEND_API void		298941	1					
ANR	298962	Identifier	zend_llist_clean		298941	2					
ANR	298963	ParameterList	zend_llist * l		298941	3					
ANR	298964	Parameter	zend_llist * l	121:31:3218:3230	298941	0	True				
ANR	298965	ParameterType	zend_llist *		298941	0					
ANR	298966	Identifier	l		298941	1					
ANR	298967	CFGEntryNode	ENTRY		298941		True				
ANR	298968	CFGExitNode	EXIT		298941		True				
ANR	298969	Symbol	NULL		298941						
ANR	298970	Symbol	* l		298941						
ANR	298971	Symbol	l -> head		298941						
ANR	298972	Symbol	l -> tail		298941						
ANR	298973	Symbol	l		298941						
ANR	298974	Function	zend_llist_remove_tail	128:0:3290:3624							
ANR	298975	FunctionDef	zend_llist_remove_tail (zend_llist * l)		298974	0					
ANR	298976	CompoundStatement		129:0:3342:3624	298974	0					
ANR	298977	IdentifierDeclStatement	zend_llist_element * old_tail = l -> tail ;	130:1:3345:3383	298974	0	True				
ANR	298978	IdentifierDecl	* old_tail = l -> tail		298974	0					
ANR	298979	IdentifierDeclType	zend_llist_element *		298974	0					
ANR	298980	Identifier	old_tail		298974	1					
ANR	298981	AssignmentExpression	* old_tail = l -> tail		298974	2		=			
ANR	298982	Identifier	old_tail		298974	0					
ANR	298983	PtrMemberAccess	l -> tail		298974	1					
ANR	298984	Identifier	l		298974	0					
ANR	298985	Identifier	tail		298974	1					
ANR	298986	IfStatement	if ( ! old_tail )		298974	1					
ANR	298987	Condition	! old_tail	131:5:3390:3398	298974	0	True				
ANR	298988	UnaryOperationExpression	! old_tail		298974	0					
ANR	298989	UnaryOperator	!		298974	0					
ANR	298990	Identifier	old_tail		298974	1					
ANR	298991	CompoundStatement		3:16:58:58	298974	1					
ANR	298992	ReturnStatement	return ;	132:2:3405:3411	298974	0	True				
ANR	298993	IfStatement	if ( old_tail -> prev )		298974	2					
ANR	298994	Condition	old_tail -> prev	135:5:3422:3435	298974	0	True				
ANR	298995	PtrMemberAccess	old_tail -> prev		298974	0					
ANR	298996	Identifier	old_tail		298974	0					
ANR	298997	Identifier	prev		298974	1					
ANR	298998	CompoundStatement		7:21:95:95	298974	1					
ANR	298999	ExpressionStatement	old_tail -> prev -> next = NULL	136:2:3442:3469	298974	0	True				
ANR	299000	AssignmentExpression	old_tail -> prev -> next = NULL		298974	0		=			
ANR	299001	PtrMemberAccess	old_tail -> prev -> next		298974	0					
ANR	299002	PtrMemberAccess	old_tail -> prev		298974	0					
ANR	299003	Identifier	old_tail		298974	0					
ANR	299004	Identifier	prev		298974	1					
ANR	299005	Identifier	next		298974	1					
ANR	299006	Identifier	NULL		298974	1					
ANR	299007	ElseStatement	else		298974	0					
ANR	299008	CompoundStatement		9:8:136:136	298974	0					
ANR	299009	ExpressionStatement	l -> head = NULL	138:2:3483:3497	298974	0	True				
ANR	299010	AssignmentExpression	l -> head = NULL		298974	0		=			
ANR	299011	PtrMemberAccess	l -> head		298974	0					
ANR	299012	Identifier	l		298974	0					
ANR	299013	Identifier	head		298974	1					
ANR	299014	Identifier	NULL		298974	1					
ANR	299015	ExpressionStatement	l -> tail = old_tail -> prev	141:1:3504:3528	298974	3	True				
ANR	299016	AssignmentExpression	l -> tail = old_tail -> prev		298974	0		=			
ANR	299017	PtrMemberAccess	l -> tail		298974	0					
ANR	299018	Identifier	l		298974	0					
ANR	299019	Identifier	tail		298974	1					
ANR	299020	PtrMemberAccess	old_tail -> prev		298974	1					
ANR	299021	Identifier	old_tail		298974	0					
ANR	299022	Identifier	prev		298974	1					
ANR	299023	ExpressionStatement	-- l -> count	142:1:3531:3541	298974	4	True				
ANR	299024	UnaryExpression	-- l -> count		298974	0					
ANR	299025	IncDec	--		298974	0					
ANR	299026	PtrMemberAccess	l -> count		298974	1					
ANR	299027	Identifier	l		298974	0					
ANR	299028	Identifier	count		298974	1					
ANR	299029	IfStatement	if ( l -> dtor )		298974	5					
ANR	299030	Condition	l -> dtor	144:5:3549:3555	298974	0	True				
ANR	299031	PtrMemberAccess	l -> dtor		298974	0					
ANR	299032	Identifier	l		298974	0					
ANR	299033	Identifier	dtor		298974	1					
ANR	299034	CompoundStatement		16:14:215:215	298974	1					
ANR	299035	ExpressionStatement	l -> dtor ( old_tail -> data )	145:2:3562:3585	298974	0	True				
ANR	299036	CallExpression	l -> dtor ( old_tail -> data )		298974	0					
ANR	299037	Callee	l -> dtor		298974	0					
ANR	299038	PtrMemberAccess	l -> dtor		298974	0					
ANR	299039	Identifier	l		298974	0					
ANR	299040	Identifier	dtor		298974	1					
ANR	299041	ArgumentList	old_tail -> data		298974	1					
ANR	299042	Argument	old_tail -> data		298974	0					
ANR	299043	PtrMemberAccess	old_tail -> data		298974	0					
ANR	299044	Identifier	old_tail		298974	0					
ANR	299045	Identifier	data		298974	1					
ANR	299046	ExpressionStatement	"pefree ( old_tail , l -> persistent )"	147:1:3591:3622	298974	6	True				
ANR	299047	CallExpression	"pefree ( old_tail , l -> persistent )"		298974	0					
ANR	299048	Callee	pefree		298974	0					
ANR	299049	Identifier	pefree		298974	0					
ANR	299050	ArgumentList	old_tail		298974	1					
ANR	299051	Argument	old_tail		298974	0					
ANR	299052	Identifier	old_tail		298974	0					
ANR	299053	Argument	l -> persistent		298974	1					
ANR	299054	PtrMemberAccess	l -> persistent		298974	0					
ANR	299055	Identifier	l		298974	0					
ANR	299056	Identifier	persistent		298974	1					
ANR	299057	ReturnType	ZEND_API void		298974	1					
ANR	299058	Identifier	zend_llist_remove_tail		298974	2					
ANR	299059	ParameterList	zend_llist * l		298974	3					
ANR	299060	Parameter	zend_llist * l	128:37:3327:3339	298974	0	True				
ANR	299061	ParameterType	zend_llist *		298974	0					
ANR	299062	Identifier	l		298974	1					
ANR	299063	CFGEntryNode	ENTRY		298974		True				
ANR	299064	CFGExitNode	EXIT		298974		True				
ANR	299065	Symbol	NULL		298974						
ANR	299066	Symbol	* old_tail -> prev		298974						
ANR	299067	Symbol	l -> head		298974						
ANR	299068	Symbol	l -> persistent		298974						
ANR	299069	Symbol	l -> tail		298974						
ANR	299070	Symbol	l		298974						
ANR	299071	Symbol	* old_tail		298974						
ANR	299072	Symbol	old_tail		298974						
ANR	299073	Symbol	old_tail -> data		298974						
ANR	299074	Symbol	old_tail -> prev		298974						
ANR	299075	Symbol	l -> dtor		298974						
ANR	299076	Symbol	* l		298974						
ANR	299077	Symbol	* * old_tail		298974						
ANR	299078	Symbol	old_tail -> prev -> next		298974						
ANR	299079	Function	zend_llist_copy	151:0:3628:3880							
ANR	299080	FunctionDef	"zend_llist_copy (zend_llist * dst , zend_llist * src)"		299079	0					
ANR	299081	CompoundStatement		152:0:3692:3880	299079	0					
ANR	299082	IdentifierDeclStatement	zend_llist_element * ptr ;	153:1:3695:3718	299079	0	True				
ANR	299083	IdentifierDecl	* ptr		299079	0					
ANR	299084	IdentifierDeclType	zend_llist_element *		299079	0					
ANR	299085	Identifier	ptr		299079	1					
ANR	299086	ExpressionStatement	"zend_llist_init ( dst , src -> size , src -> dtor , src -> persistent )"	155:1:3722:3781	299079	1	True				
ANR	299087	CallExpression	"zend_llist_init ( dst , src -> size , src -> dtor , src -> persistent )"		299079	0					
ANR	299088	Callee	zend_llist_init		299079	0					
ANR	299089	Identifier	zend_llist_init		299079	0					
ANR	299090	ArgumentList	dst		299079	1					
ANR	299091	Argument	dst		299079	0					
ANR	299092	Identifier	dst		299079	0					
ANR	299093	Argument	src -> size		299079	1					
ANR	299094	PtrMemberAccess	src -> size		299079	0					
ANR	299095	Identifier	src		299079	0					
ANR	299096	Identifier	size		299079	1					
ANR	299097	Argument	src -> dtor		299079	2					
ANR	299098	PtrMemberAccess	src -> dtor		299079	0					
ANR	299099	Identifier	src		299079	0					
ANR	299100	Identifier	dtor		299079	1					
ANR	299101	Argument	src -> persistent		299079	3					
ANR	299102	PtrMemberAccess	src -> persistent		299079	0					
ANR	299103	Identifier	src		299079	0					
ANR	299104	Identifier	persistent		299079	1					
ANR	299105	ExpressionStatement	ptr = src -> head	156:1:3784:3799	299079	2	True				
ANR	299106	AssignmentExpression	ptr = src -> head		299079	0		=			
ANR	299107	Identifier	ptr		299079	0					
ANR	299108	PtrMemberAccess	src -> head		299079	1					
ANR	299109	Identifier	src		299079	0					
ANR	299110	Identifier	head		299079	1					
ANR	299111	WhileStatement	while ( ptr )		299079	3					
ANR	299112	Condition	ptr	157:8:3809:3811	299079	0	True				
ANR	299113	Identifier	ptr		299079	0					
ANR	299114	CompoundStatement		6:13:121:121	299079	1					
ANR	299115	ExpressionStatement	"zend_llist_add_element ( dst , ptr -> data )"	158:2:3818:3856	299079	0	True				
ANR	299116	CallExpression	"zend_llist_add_element ( dst , ptr -> data )"		299079	0					
ANR	299117	Callee	zend_llist_add_element		299079	0					
ANR	299118	Identifier	zend_llist_add_element		299079	0					
ANR	299119	ArgumentList	dst		299079	1					
ANR	299120	Argument	dst		299079	0					
ANR	299121	Identifier	dst		299079	0					
ANR	299122	Argument	ptr -> data		299079	1					
ANR	299123	PtrMemberAccess	ptr -> data		299079	0					
ANR	299124	Identifier	ptr		299079	0					
ANR	299125	Identifier	data		299079	1					
ANR	299126	ExpressionStatement	ptr = ptr -> next	159:2:3860:3875	299079	1	True				
ANR	299127	AssignmentExpression	ptr = ptr -> next		299079	0		=			
ANR	299128	Identifier	ptr		299079	0					
ANR	299129	PtrMemberAccess	ptr -> next		299079	1					
ANR	299130	Identifier	ptr		299079	0					
ANR	299131	Identifier	next		299079	1					
ANR	299132	ReturnType	ZEND_API void		299079	1					
ANR	299133	Identifier	zend_llist_copy		299079	2					
ANR	299134	ParameterList	"zend_llist * dst , zend_llist * src"		299079	3					
ANR	299135	Parameter	zend_llist * dst	151:30:3658:3672	299079	0	True				
ANR	299136	ParameterType	zend_llist *		299079	0					
ANR	299137	Identifier	dst		299079	1					
ANR	299138	Parameter	zend_llist * src	151:47:3675:3689	299079	1	True				
ANR	299139	ParameterType	zend_llist *		299079	0					
ANR	299140	Identifier	src		299079	1					
ANR	299141	CFGEntryNode	ENTRY		299079		True				
ANR	299142	CFGExitNode	EXIT		299079		True				
ANR	299143	Symbol	src -> dtor		299079						
ANR	299144	Symbol	dst		299079						
ANR	299145	Symbol	src		299079						
ANR	299146	Symbol	src -> head		299079						
ANR	299147	Symbol	* ptr		299079						
ANR	299148	Symbol	src -> persistent		299079						
ANR	299149	Symbol	ptr -> data		299079						
ANR	299150	Symbol	* src		299079						
ANR	299151	Symbol	src -> size		299079						
ANR	299152	Symbol	ptr		299079						
ANR	299153	Symbol	ptr -> next		299079						
ANR	299154	Function	zend_llist_apply_with_del	164:0:3884:4153							
ANR	299155	FunctionDef	"zend_llist_apply_with_del (zend_llist * l , int ( * func ) ( void * data ))"		299154	0					
ANR	299156	CompoundStatement		165:0:3964:4153	299154	0					
ANR	299157	IdentifierDeclStatement	"zend_llist_element * element , * next ;"	166:1:3967:4001	299154	0	True				
ANR	299158	IdentifierDecl	* element		299154	0					
ANR	299159	IdentifierDeclType	zend_llist_element *		299154	0					
ANR	299160	Identifier	element		299154	1					
ANR	299161	IdentifierDecl	* next		299154	1					
ANR	299162	IdentifierDeclType	zend_llist_element *		299154	0					
ANR	299163	Identifier	next		299154	1					
ANR	299164	ExpressionStatement	element = l -> head	168:1:4005:4020	299154	1	True				
ANR	299165	AssignmentExpression	element = l -> head		299154	0		=			
ANR	299166	Identifier	element		299154	0					
ANR	299167	PtrMemberAccess	l -> head		299154	1					
ANR	299168	Identifier	l		299154	0					
ANR	299169	Identifier	head		299154	1					
ANR	299170	WhileStatement	while ( element )		299154	2					
ANR	299171	Condition	element	169:8:4030:4036	299154	0	True				
ANR	299172	Identifier	element		299154	0					
ANR	299173	CompoundStatement		5:17:74:74	299154	1					
ANR	299174	ExpressionStatement	next = element -> next	170:2:4043:4063	299154	0	True				
ANR	299175	AssignmentExpression	next = element -> next		299154	0		=			
ANR	299176	Identifier	next		299154	0					
ANR	299177	PtrMemberAccess	element -> next		299154	1					
ANR	299178	Identifier	element		299154	0					
ANR	299179	Identifier	next		299154	1					
ANR	299180	IfStatement	if ( func ( element -> data ) )		299154	1					
ANR	299181	Condition	func ( element -> data )	171:6:4071:4089	299154	0	True				
ANR	299182	CallExpression	func ( element -> data )		299154	0					
ANR	299183	Callee	func		299154	0					
ANR	299184	Identifier	func		299154	0					
ANR	299185	ArgumentList	element -> data		299154	1					
ANR	299186	Argument	element -> data		299154	0					
ANR	299187	PtrMemberAccess	element -> data		299154	0					
ANR	299188	Identifier	element		299154	0					
ANR	299189	Identifier	data		299154	1					
ANR	299190	CompoundStatement		7:27:127:127	299154	1					
ANR	299191	ExpressionStatement	"DEL_LLIST_ELEMENT ( element , l )"	172:3:4097:4126	299154	0	True				
ANR	299192	CallExpression	"DEL_LLIST_ELEMENT ( element , l )"		299154	0					
ANR	299193	Callee	DEL_LLIST_ELEMENT		299154	0					
ANR	299194	Identifier	DEL_LLIST_ELEMENT		299154	0					
ANR	299195	ArgumentList	element		299154	1					
ANR	299196	Argument	element		299154	0					
ANR	299197	Identifier	element		299154	0					
ANR	299198	Argument	l		299154	1					
ANR	299199	Identifier	l		299154	0					
ANR	299200	ExpressionStatement	element = next	174:2:4134:4148	299154	2	True				
ANR	299201	AssignmentExpression	element = next		299154	0		=			
ANR	299202	Identifier	element		299154	0					
ANR	299203	Identifier	next		299154	1					
ANR	299204	ReturnType	ZEND_API void		299154	1					
ANR	299205	Identifier	zend_llist_apply_with_del		299154	2					
ANR	299206	ParameterList	"zend_llist * l , int ( * func ) ( void * data )"		299154	3					
ANR	299207	Parameter	zend_llist * l	164:40:3924:3936	299154	0	True				
ANR	299208	ParameterType	zend_llist *		299154	0					
ANR	299209	Identifier	l		299154	1					
ANR	299210	Parameter	int ( * func ) ( void * data )	164:55:3939:3961	299154	1	True				
ANR	299211	ParameterType	(( void * data ) int) *		299154	0					
ANR	299212	Identifier	func		299154	1					
ANR	299213	CFGEntryNode	ENTRY		299154		True				
ANR	299214	CFGExitNode	EXIT		299154		True				
ANR	299215	Symbol	next		299154						
ANR	299216	Symbol	func		299154						
ANR	299217	Symbol	* element		299154						
ANR	299218	Symbol	l -> head		299154						
ANR	299219	Symbol	* l		299154						
ANR	299220	Symbol	element -> data		299154						
ANR	299221	Symbol	l		299154						
ANR	299222	Symbol	element -> next		299154						
ANR	299223	Symbol	element		299154						
ANR	299224	Function	zend_llist_apply	179:0:4157:4344							
ANR	299225	FunctionDef	"zend_llist_apply (zend_llist * l , llist_apply_func_t func)"		299224	0					
ANR	299226	CompoundStatement		180:0:4228:4344	299224	0					
ANR	299227	IdentifierDeclStatement	zend_llist_element * element ;	181:1:4231:4258	299224	0	True				
ANR	299228	IdentifierDecl	* element		299224	0					
ANR	299229	IdentifierDeclType	zend_llist_element *		299224	0					
ANR	299230	Identifier	element		299224	1					
ANR	299231	ForStatement	for ( element = l -> head ; element ; element = element -> next )		299224	1					
ANR	299232	ForInit	element = l -> head ;	183:6:4267:4282	299224	0	True				
ANR	299233	AssignmentExpression	element = l -> head		299224	0		=			
ANR	299234	Identifier	element		299224	0					
ANR	299235	PtrMemberAccess	l -> head		299224	1					
ANR	299236	Identifier	l		299224	0					
ANR	299237	Identifier	head		299224	1					
ANR	299238	Condition	element	183:23:4284:4290	299224	1	True				
ANR	299239	Identifier	element		299224	0					
ANR	299240	AssignmentExpression	element = element -> next	183:32:4293:4313	299224	2	True	=			
ANR	299241	Identifier	element		299224	0					
ANR	299242	PtrMemberAccess	element -> next		299224	1					
ANR	299243	Identifier	element		299224	0					
ANR	299244	Identifier	next		299224	1					
ANR	299245	CompoundStatement		4:55:87:87	299224	3					
ANR	299246	ExpressionStatement	func ( element -> data )	184:2:4320:4339	299224	0	True				
ANR	299247	CallExpression	func ( element -> data )		299224	0					
ANR	299248	Callee	func		299224	0					
ANR	299249	Identifier	func		299224	0					
ANR	299250	ArgumentList	element -> data		299224	1					
ANR	299251	Argument	element -> data		299224	0					
ANR	299252	PtrMemberAccess	element -> data		299224	0					
ANR	299253	Identifier	element		299224	0					
ANR	299254	Identifier	data		299224	1					
ANR	299255	ReturnType	ZEND_API void		299224	1					
ANR	299256	Identifier	zend_llist_apply		299224	2					
ANR	299257	ParameterList	"zend_llist * l , llist_apply_func_t func"		299224	3					
ANR	299258	Parameter	zend_llist * l	179:31:4188:4200	299224	0	True				
ANR	299259	ParameterType	zend_llist *		299224	0					
ANR	299260	Identifier	l		299224	1					
ANR	299261	Parameter	llist_apply_func_t func	179:46:4203:4225	299224	1	True				
ANR	299262	ParameterType	llist_apply_func_t		299224	0					
ANR	299263	Identifier	func		299224	1					
ANR	299264	CFGEntryNode	ENTRY		299224		True				
ANR	299265	CFGExitNode	EXIT		299224		True				
ANR	299266	Symbol	func		299224						
ANR	299267	Symbol	* element		299224						
ANR	299268	Symbol	* l		299224						
ANR	299269	Symbol	l -> head		299224						
ANR	299270	Symbol	element -> data		299224						
ANR	299271	Symbol	l		299224						
ANR	299272	Symbol	element -> next		299224						
ANR	299273	Symbol	element		299224						
ANR	299274	Function	zend_llist_swap	188:0:4347:4477							
ANR	299275	FunctionDef	"zend_llist_swap (zend_llist_element * * p , zend_llist_element * * q)"		299274	0					
ANR	299276	CompoundStatement		189:0:4423:4477	299274	0					
ANR	299277	IdentifierDeclStatement	zend_llist_element * t ;	190:1:4426:4447	299274	0	True				
ANR	299278	IdentifierDecl	* t		299274	0					
ANR	299279	IdentifierDeclType	zend_llist_element *		299274	0					
ANR	299280	Identifier	t		299274	1					
ANR	299281	ExpressionStatement	t = * p	191:1:4450:4456	299274	1	True				
ANR	299282	AssignmentExpression	t = * p		299274	0		=			
ANR	299283	Identifier	t		299274	0					
ANR	299284	UnaryOperationExpression	* p		299274	1					
ANR	299285	UnaryOperator	*		299274	0					
ANR	299286	Identifier	p		299274	1					
ANR	299287	ExpressionStatement	* p = * q	192:1:4459:4466	299274	2	True				
ANR	299288	AssignmentExpression	* p = * q		299274	0		=			
ANR	299289	UnaryOperationExpression	* p		299274	0					
ANR	299290	UnaryOperator	*		299274	0					
ANR	299291	Identifier	p		299274	1					
ANR	299292	UnaryOperationExpression	* q		299274	1					
ANR	299293	UnaryOperator	*		299274	0					
ANR	299294	Identifier	q		299274	1					
ANR	299295	ExpressionStatement	* q = t	193:1:4469:4475	299274	3	True				
ANR	299296	AssignmentExpression	* q = t		299274	0		=			
ANR	299297	UnaryOperationExpression	* q		299274	0					
ANR	299298	UnaryOperator	*		299274	0					
ANR	299299	Identifier	q		299274	1					
ANR	299300	Identifier	t		299274	1					
ANR	299301	ReturnType	static void		299274	1					
ANR	299302	Identifier	zend_llist_swap		299274	2					
ANR	299303	ParameterList	"zend_llist_element * * p , zend_llist_element * * q"		299274	3					
ANR	299304	Parameter	zend_llist_element * * p	188:28:4375:4396	299274	0	True				
ANR	299305	ParameterType	zend_llist_element * *		299274	0					
ANR	299306	Identifier	p		299274	1					
ANR	299307	Parameter	zend_llist_element * * q	188:52:4399:4420	299274	1	True				
ANR	299308	ParameterType	zend_llist_element * *		299274	0					
ANR	299309	Identifier	q		299274	1					
ANR	299310	CFGEntryNode	ENTRY		299274		True				
ANR	299311	CFGExitNode	EXIT		299274		True				
ANR	299312	Symbol	p		299274						
ANR	299313	Symbol	q		299274						
ANR	299314	Symbol	t		299274						
ANR	299315	Symbol	* p		299274						
ANR	299316	Symbol	* q		299274						
ANR	299317	Function	zend_llist_sort	196:0:4480:5228							
ANR	299318	FunctionDef	"zend_llist_sort (zend_llist * l , llist_compare_func_t comp_func)"		299317	0					
ANR	299319	CompoundStatement		197:0:4557:5228	299317	0					
ANR	299320	IdentifierDeclStatement	size_t i ;	198:1:4560:4568	299317	0	True				
ANR	299321	IdentifierDecl	i		299317	0					
ANR	299322	IdentifierDeclType	size_t		299317	0					
ANR	299323	Identifier	i		299317	1					
ANR	299324	IdentifierDeclStatement	zend_llist_element * * elements ;	200:1:4572:4601	299317	1	True				
ANR	299325	IdentifierDecl	* * elements		299317	0					
ANR	299326	IdentifierDeclType	zend_llist_element * *		299317	0					
ANR	299327	Identifier	elements		299317	1					
ANR	299328	IdentifierDeclStatement	"zend_llist_element * element , * * ptr ;"	201:1:4604:4638	299317	2	True				
ANR	299329	IdentifierDecl	* element		299317	0					
ANR	299330	IdentifierDeclType	zend_llist_element *		299317	0					
ANR	299331	Identifier	element		299317	1					
ANR	299332	IdentifierDecl	* * ptr		299317	1					
ANR	299333	IdentifierDeclType	zend_llist_element * *		299317	0					
ANR	299334	Identifier	ptr		299317	1					
ANR	299335	IfStatement	if ( l -> count <= 0 )		299317	3					
ANR	299336	Condition	l -> count <= 0	203:5:4646:4658	299317	0	True				
ANR	299337	RelationalExpression	l -> count <= 0		299317	0		<=			
ANR	299338	PtrMemberAccess	l -> count		299317	0					
ANR	299339	Identifier	l		299317	0					
ANR	299340	Identifier	count		299317	1					
ANR	299341	PrimaryExpression	0		299317	1					
ANR	299342	CompoundStatement		7:20:103:103	299317	1					
ANR	299343	ReturnStatement	return ;	204:2:4665:4671	299317	0	True				
ANR	299344	ExpressionStatement	elements = ( zend_llist_element * * ) emalloc ( l -> count * sizeof ( zend_llist_element * ) )	207:1:4678:4761	299317	4	True				
ANR	299345	AssignmentExpression	elements = ( zend_llist_element * * ) emalloc ( l -> count * sizeof ( zend_llist_element * ) )		299317	0		=			
ANR	299346	Identifier	elements		299317	0					
ANR	299347	CastExpression	( zend_llist_element * * ) emalloc ( l -> count * sizeof ( zend_llist_element * ) )		299317	1					
ANR	299348	CastTarget	zend_llist_element * *		299317	0					
ANR	299349	CallExpression	emalloc ( l -> count * sizeof ( zend_llist_element * ) )		299317	1					
ANR	299350	Callee	emalloc		299317	0					
ANR	299351	Identifier	emalloc		299317	0					
ANR	299352	ArgumentList	l -> count * sizeof ( zend_llist_element * )		299317	1					
ANR	299353	Argument	l -> count * sizeof ( zend_llist_element * )		299317	0					
ANR	299354	MultiplicativeExpression	l -> count * sizeof ( zend_llist_element * )		299317	0		*			
ANR	299355	PtrMemberAccess	l -> count		299317	0					
ANR	299356	Identifier	l		299317	0					
ANR	299357	Identifier	count		299317	1					
ANR	299358	SizeofExpression	sizeof ( zend_llist_element * )		299317	1					
ANR	299359	Sizeof	sizeof		299317	0					
ANR	299360	SizeofOperand	zend_llist_element *		299317	1					
ANR	299361	ExpressionStatement	ptr = & elements [ 0 ]	209:1:4765:4783	299317	5	True				
ANR	299362	AssignmentExpression	ptr = & elements [ 0 ]		299317	0		=			
ANR	299363	Identifier	ptr		299317	0					
ANR	299364	UnaryOperationExpression	& elements [ 0 ]		299317	1					
ANR	299365	UnaryOperator	&		299317	0					
ANR	299366	ArrayIndexing	elements [ 0 ]		299317	1					
ANR	299367	Identifier	elements		299317	0					
ANR	299368	PrimaryExpression	0		299317	1					
ANR	299369	ForStatement	for ( element = l -> head ; element ; element = element -> next )		299317	6					
ANR	299370	ForInit	element = l -> head ;	211:6:4792:4807	299317	0	True				
ANR	299371	AssignmentExpression	element = l -> head		299317	0		=			
ANR	299372	Identifier	element		299317	0					
ANR	299373	PtrMemberAccess	l -> head		299317	1					
ANR	299374	Identifier	l		299317	0					
ANR	299375	Identifier	head		299317	1					
ANR	299376	Condition	element	211:23:4809:4815	299317	1	True				
ANR	299377	Identifier	element		299317	0					
ANR	299378	AssignmentExpression	element = element -> next	211:32:4818:4838	299317	2	True	=			
ANR	299379	Identifier	element		299317	0					
ANR	299380	PtrMemberAccess	element -> next		299317	1					
ANR	299381	Identifier	element		299317	0					
ANR	299382	Identifier	next		299317	1					
ANR	299383	CompoundStatement		15:55:283:283	299317	3					
ANR	299384	ExpressionStatement	* ptr ++ = element	212:2:4845:4861	299317	0	True				
ANR	299385	AssignmentExpression	* ptr ++ = element		299317	0		=			
ANR	299386	UnaryOperationExpression	* ptr ++		299317	0					
ANR	299387	UnaryOperator	*		299317	0					
ANR	299388	PostIncDecOperationExpression	ptr ++		299317	1					
ANR	299389	Identifier	ptr		299317	0					
ANR	299390	IncDec	++		299317	1					
ANR	299391	Identifier	element		299317	1					
ANR	299392	ExpressionStatement	"zend_sort ( elements , l -> count , sizeof ( zend_llist_element * ) , ( compare_func_t ) comp_func , ( swap_func_t ) zend_llist_swap )"	215:1:4868:4989	299317	7	True				
ANR	299393	CallExpression	"zend_sort ( elements , l -> count , sizeof ( zend_llist_element * ) , ( compare_func_t ) comp_func , ( swap_func_t ) zend_llist_swap )"		299317	0					
ANR	299394	Callee	zend_sort		299317	0					
ANR	299395	Identifier	zend_sort		299317	0					
ANR	299396	ArgumentList	elements		299317	1					
ANR	299397	Argument	elements		299317	0					
ANR	299398	Identifier	elements		299317	0					
ANR	299399	Argument	l -> count		299317	1					
ANR	299400	PtrMemberAccess	l -> count		299317	0					
ANR	299401	Identifier	l		299317	0					
ANR	299402	Identifier	count		299317	1					
ANR	299403	Argument	sizeof ( zend_llist_element * )		299317	2					
ANR	299404	SizeofExpression	sizeof ( zend_llist_element * )		299317	0					
ANR	299405	Sizeof	sizeof		299317	0					
ANR	299406	SizeofOperand	zend_llist_element *		299317	1					
ANR	299407	Argument	( compare_func_t ) comp_func		299317	3					
ANR	299408	CastExpression	( compare_func_t ) comp_func		299317	0					
ANR	299409	CastTarget	compare_func_t		299317	0					
ANR	299410	Identifier	comp_func		299317	1					
ANR	299411	Argument	( swap_func_t ) zend_llist_swap		299317	4					
ANR	299412	CastExpression	( swap_func_t ) zend_llist_swap		299317	0					
ANR	299413	CastTarget	swap_func_t		299317	0					
ANR	299414	Identifier	zend_llist_swap		299317	1					
ANR	299415	ExpressionStatement	l -> head = elements [ 0 ]	218:1:4993:5014	299317	8	True				
ANR	299416	AssignmentExpression	l -> head = elements [ 0 ]		299317	0		=			
ANR	299417	PtrMemberAccess	l -> head		299317	0					
ANR	299418	Identifier	l		299317	0					
ANR	299419	Identifier	head		299317	1					
ANR	299420	ArrayIndexing	elements [ 0 ]		299317	1					
ANR	299421	Identifier	elements		299317	0					
ANR	299422	PrimaryExpression	0		299317	1					
ANR	299423	ExpressionStatement	elements [ 0 ] -> prev = NULL	219:1:5017:5041	299317	9	True				
ANR	299424	AssignmentExpression	elements [ 0 ] -> prev = NULL		299317	0		=			
ANR	299425	PtrMemberAccess	elements [ 0 ] -> prev		299317	0					
ANR	299426	ArrayIndexing	elements [ 0 ]		299317	0					
ANR	299427	Identifier	elements		299317	0					
ANR	299428	PrimaryExpression	0		299317	1					
ANR	299429	Identifier	prev		299317	1					
ANR	299430	Identifier	NULL		299317	1					
ANR	299431	ForStatement	for ( i = 1 ; i < l -> count ; i ++ )		299317	10					
ANR	299432	ForInit	i = 1 ;	221:6:5050:5055	299317	0	True				
ANR	299433	AssignmentExpression	i = 1		299317	0		=			
ANR	299434	Identifier	i		299317	0					
ANR	299435	PrimaryExpression	1		299317	1					
ANR	299436	Condition	i < l -> count	221:13:5057:5068	299317	1	True				
ANR	299437	RelationalExpression	i < l -> count		299317	0		<			
ANR	299438	Identifier	i		299317	0					
ANR	299439	PtrMemberAccess	l -> count		299317	1					
ANR	299440	Identifier	l		299317	0					
ANR	299441	Identifier	count		299317	1					
ANR	299442	PostIncDecOperationExpression	i ++	221:27:5071:5073	299317	2	True				
ANR	299443	Identifier	i		299317	0					
ANR	299444	IncDec	++		299317	1					
ANR	299445	CompoundStatement		25:32:518:518	299317	3					
ANR	299446	ExpressionStatement	elements [ i ] -> prev = elements [ i - 1 ]	222:2:5080:5113	299317	0	True				
ANR	299447	AssignmentExpression	elements [ i ] -> prev = elements [ i - 1 ]		299317	0		=			
ANR	299448	PtrMemberAccess	elements [ i ] -> prev		299317	0					
ANR	299449	ArrayIndexing	elements [ i ]		299317	0					
ANR	299450	Identifier	elements		299317	0					
ANR	299451	Identifier	i		299317	1					
ANR	299452	Identifier	prev		299317	1					
ANR	299453	ArrayIndexing	elements [ i - 1 ]		299317	1					
ANR	299454	Identifier	elements		299317	0					
ANR	299455	AdditiveExpression	i - 1		299317	1		-			
ANR	299456	Identifier	i		299317	0					
ANR	299457	PrimaryExpression	1		299317	1					
ANR	299458	ExpressionStatement	elements [ i - 1 ] -> next = elements [ i ]	223:2:5117:5150	299317	1	True				
ANR	299459	AssignmentExpression	elements [ i - 1 ] -> next = elements [ i ]		299317	0		=			
ANR	299460	PtrMemberAccess	elements [ i - 1 ] -> next		299317	0					
ANR	299461	ArrayIndexing	elements [ i - 1 ]		299317	0					
ANR	299462	Identifier	elements		299317	0					
ANR	299463	AdditiveExpression	i - 1		299317	1		-			
ANR	299464	Identifier	i		299317	0					
ANR	299465	PrimaryExpression	1		299317	1					
ANR	299466	Identifier	next		299317	1					
ANR	299467	ArrayIndexing	elements [ i ]		299317	1					
ANR	299468	Identifier	elements		299317	0					
ANR	299469	Identifier	i		299317	1					
ANR	299470	ExpressionStatement	elements [ i - 1 ] -> next = NULL	225:1:5156:5182	299317	11	True				
ANR	299471	AssignmentExpression	elements [ i - 1 ] -> next = NULL		299317	0		=			
ANR	299472	PtrMemberAccess	elements [ i - 1 ] -> next		299317	0					
ANR	299473	ArrayIndexing	elements [ i - 1 ]		299317	0					
ANR	299474	Identifier	elements		299317	0					
ANR	299475	AdditiveExpression	i - 1		299317	1		-			
ANR	299476	Identifier	i		299317	0					
ANR	299477	PrimaryExpression	1		299317	1					
ANR	299478	Identifier	next		299317	1					
ANR	299479	Identifier	NULL		299317	1					
ANR	299480	ExpressionStatement	l -> tail = elements [ i - 1 ]	226:1:5185:5208	299317	12	True				
ANR	299481	AssignmentExpression	l -> tail = elements [ i - 1 ]		299317	0		=			
ANR	299482	PtrMemberAccess	l -> tail		299317	0					
ANR	299483	Identifier	l		299317	0					
ANR	299484	Identifier	tail		299317	1					
ANR	299485	ArrayIndexing	elements [ i - 1 ]		299317	1					
ANR	299486	Identifier	elements		299317	0					
ANR	299487	AdditiveExpression	i - 1		299317	1		-			
ANR	299488	Identifier	i		299317	0					
ANR	299489	PrimaryExpression	1		299317	1					
ANR	299490	ExpressionStatement	efree ( elements )	227:1:5211:5226	299317	13	True				
ANR	299491	CallExpression	efree ( elements )		299317	0					
ANR	299492	Callee	efree		299317	0					
ANR	299493	Identifier	efree		299317	0					
ANR	299494	ArgumentList	elements		299317	1					
ANR	299495	Argument	elements		299317	0					
ANR	299496	Identifier	elements		299317	0					
ANR	299497	ReturnType	ZEND_API void		299317	1					
ANR	299498	Identifier	zend_llist_sort		299317	2					
ANR	299499	ParameterList	"zend_llist * l , llist_compare_func_t comp_func"		299317	3					
ANR	299500	Parameter	zend_llist * l	196:30:4510:4522	299317	0	True				
ANR	299501	ParameterType	zend_llist *		299317	0					
ANR	299502	Identifier	l		299317	1					
ANR	299503	Parameter	llist_compare_func_t comp_func	196:45:4525:4554	299317	1	True				
ANR	299504	ParameterType	llist_compare_func_t		299317	0					
ANR	299505	Identifier	comp_func		299317	1					
ANR	299506	CFGEntryNode	ENTRY		299317		True				
ANR	299507	CFGExitNode	EXIT		299317		True				
ANR	299508	Symbol	zend_llist_swap		299317						
ANR	299509	Symbol	* * i		299317						
ANR	299510	Symbol	NULL		299317						
ANR	299511	Symbol	* element		299317						
ANR	299512	Symbol	elements [ i ] -> prev		299317						
ANR	299513	Symbol	l -> head		299317						
ANR	299514	Symbol	* ptr ++		299317						
ANR	299515	Symbol	i		299317						
ANR	299516	Symbol	l -> tail		299317						
ANR	299517	Symbol	l		299317						
ANR	299518	Symbol	elements [ i - 1 ] -> next		299317						
ANR	299519	Symbol	ptr		299317						
ANR	299520	Symbol	emalloc		299317						
ANR	299521	Symbol	elements [ 0 ] -> prev		299317						
ANR	299522	Symbol	* i		299317						
ANR	299523	Symbol	* * elements		299317						
ANR	299524	Symbol	* l		299317						
ANR	299525	Symbol	* elements		299317						
ANR	299526	Symbol	elements		299317						
ANR	299527	Symbol	l -> count		299317						
ANR	299528	Symbol	element -> next		299317						
ANR	299529	Symbol	comp_func		299317						
ANR	299530	Symbol	element		299317						
ANR	299531	Function	zend_llist_apply_with_argument	231:0:5232:5458							
ANR	299532	FunctionDef	"zend_llist_apply_with_argument (zend_llist * l , llist_apply_with_arg_func_t func , void * arg)"		299531	0					
ANR	299533	CompoundStatement		232:0:5337:5458	299531	0					
ANR	299534	IdentifierDeclStatement	zend_llist_element * element ;	233:1:5340:5367	299531	0	True				
ANR	299535	IdentifierDecl	* element		299531	0					
ANR	299536	IdentifierDeclType	zend_llist_element *		299531	0					
ANR	299537	Identifier	element		299531	1					
ANR	299538	ForStatement	for ( element = l -> head ; element ; element = element -> next )		299531	1					
ANR	299539	ForInit	element = l -> head ;	235:6:5376:5391	299531	0	True				
ANR	299540	AssignmentExpression	element = l -> head		299531	0		=			
ANR	299541	Identifier	element		299531	0					
ANR	299542	PtrMemberAccess	l -> head		299531	1					
ANR	299543	Identifier	l		299531	0					
ANR	299544	Identifier	head		299531	1					
ANR	299545	Condition	element	235:23:5393:5399	299531	1	True				
ANR	299546	Identifier	element		299531	0					
ANR	299547	AssignmentExpression	element = element -> next	235:32:5402:5422	299531	2	True	=			
ANR	299548	Identifier	element		299531	0					
ANR	299549	PtrMemberAccess	element -> next		299531	1					
ANR	299550	Identifier	element		299531	0					
ANR	299551	Identifier	next		299531	1					
ANR	299552	CompoundStatement		4:55:87:87	299531	3					
ANR	299553	ExpressionStatement	"func ( element -> data , arg )"	236:2:5429:5453	299531	0	True				
ANR	299554	CallExpression	"func ( element -> data , arg )"		299531	0					
ANR	299555	Callee	func		299531	0					
ANR	299556	Identifier	func		299531	0					
ANR	299557	ArgumentList	element -> data		299531	1					
ANR	299558	Argument	element -> data		299531	0					
ANR	299559	PtrMemberAccess	element -> data		299531	0					
ANR	299560	Identifier	element		299531	0					
ANR	299561	Identifier	data		299531	1					
ANR	299562	Argument	arg		299531	1					
ANR	299563	Identifier	arg		299531	0					
ANR	299564	ReturnType	ZEND_API void		299531	1					
ANR	299565	Identifier	zend_llist_apply_with_argument		299531	2					
ANR	299566	ParameterList	"zend_llist * l , llist_apply_with_arg_func_t func , void * arg"		299531	3					
ANR	299567	Parameter	zend_llist * l	231:45:5277:5289	299531	0	True				
ANR	299568	ParameterType	zend_llist *		299531	0					
ANR	299569	Identifier	l		299531	1					
ANR	299570	Parameter	llist_apply_with_arg_func_t func	231:60:5292:5323	299531	1	True				
ANR	299571	ParameterType	llist_apply_with_arg_func_t		299531	0					
ANR	299572	Identifier	func		299531	1					
ANR	299573	Parameter	void * arg	231:94:5326:5334	299531	2	True				
ANR	299574	ParameterType	void *		299531	0					
ANR	299575	Identifier	arg		299531	1					
ANR	299576	CFGEntryNode	ENTRY		299531		True				
ANR	299577	CFGExitNode	EXIT		299531		True				
ANR	299578	Symbol	func		299531						
ANR	299579	Symbol	* element		299531						
ANR	299580	Symbol	* l		299531						
ANR	299581	Symbol	l -> head		299531						
ANR	299582	Symbol	arg		299531						
ANR	299583	Symbol	element -> data		299531						
ANR	299584	Symbol	l		299531						
ANR	299585	Symbol	element -> next		299531						
ANR	299586	Symbol	element		299531						
ANR	299587	Function	zend_llist_apply_with_arguments	241:0:5462:5766							
ANR	299588	FunctionDef	"zend_llist_apply_with_arguments (zend_llist * l , llist_apply_with_args_func_t func , int num_args)"		299587	0					
ANR	299589	CompoundStatement		242:0:5577:5766	299587	0					
ANR	299590	IdentifierDeclStatement	zend_llist_element * element ;	243:1:5580:5607	299587	0	True				
ANR	299591	IdentifierDecl	* element		299587	0					
ANR	299592	IdentifierDeclType	zend_llist_element *		299587	0					
ANR	299593	Identifier	element		299587	1					
ANR	299594	IdentifierDeclStatement	va_list args ;	244:1:5610:5622	299587	1	True				
ANR	299595	IdentifierDecl	args		299587	0					
ANR	299596	IdentifierDeclType	va_list		299587	0					
ANR	299597	Identifier	args		299587	1					
ANR	299598	ExpressionStatement	"va_start ( args , num_args )"	246:1:5626:5650	299587	2	True				
ANR	299599	CallExpression	"va_start ( args , num_args )"		299587	0					
ANR	299600	Callee	va_start		299587	0					
ANR	299601	Identifier	va_start		299587	0					
ANR	299602	ArgumentList	args		299587	1					
ANR	299603	Argument	args		299587	0					
ANR	299604	Identifier	args		299587	0					
ANR	299605	Argument	num_args		299587	1					
ANR	299606	Identifier	num_args		299587	0					
ANR	299607	ForStatement	for ( element = l -> head ; element ; element = element -> next )		299587	3					
ANR	299608	ForInit	element = l -> head ;	247:6:5658:5673	299587	0	True				
ANR	299609	AssignmentExpression	element = l -> head		299587	0		=			
ANR	299610	Identifier	element		299587	0					
ANR	299611	PtrMemberAccess	l -> head		299587	1					
ANR	299612	Identifier	l		299587	0					
ANR	299613	Identifier	head		299587	1					
ANR	299614	Condition	element	247:23:5675:5681	299587	1	True				
ANR	299615	Identifier	element		299587	0					
ANR	299616	AssignmentExpression	element = element -> next	247:32:5684:5704	299587	2	True	=			
ANR	299617	Identifier	element		299587	0					
ANR	299618	PtrMemberAccess	element -> next		299587	1					
ANR	299619	Identifier	element		299587	0					
ANR	299620	Identifier	next		299587	1					
ANR	299621	CompoundStatement		6:55:129:129	299587	3					
ANR	299622	ExpressionStatement	"func ( element -> data , num_args , args )"	248:2:5711:5746	299587	0	True				
ANR	299623	CallExpression	"func ( element -> data , num_args , args )"		299587	0					
ANR	299624	Callee	func		299587	0					
ANR	299625	Identifier	func		299587	0					
ANR	299626	ArgumentList	element -> data		299587	1					
ANR	299627	Argument	element -> data		299587	0					
ANR	299628	PtrMemberAccess	element -> data		299587	0					
ANR	299629	Identifier	element		299587	0					
ANR	299630	Identifier	data		299587	1					
ANR	299631	Argument	num_args		299587	1					
ANR	299632	Identifier	num_args		299587	0					
ANR	299633	Argument	args		299587	2					
ANR	299634	Identifier	args		299587	0					
ANR	299635	ExpressionStatement	va_end ( args )	250:1:5752:5764	299587	4	True				
ANR	299636	CallExpression	va_end ( args )		299587	0					
ANR	299637	Callee	va_end		299587	0					
ANR	299638	Identifier	va_end		299587	0					
ANR	299639	ArgumentList	args		299587	1					
ANR	299640	Argument	args		299587	0					
ANR	299641	Identifier	args		299587	0					
ANR	299642	ReturnType	ZEND_API void		299587	1					
ANR	299643	Identifier	zend_llist_apply_with_arguments		299587	2					
ANR	299644	ParameterList	"zend_llist * l , llist_apply_with_args_func_t func , int num_args"		299587	3					
ANR	299645	Parameter	zend_llist * l	241:46:5508:5520	299587	0	True				
ANR	299646	ParameterType	zend_llist *		299587	0					
ANR	299647	Identifier	l		299587	1					
ANR	299648	Parameter	llist_apply_with_args_func_t func	241:61:5523:5555	299587	1	True				
ANR	299649	ParameterType	llist_apply_with_args_func_t		299587	0					
ANR	299650	Identifier	func		299587	1					
ANR	299651	Parameter	int num_args	241:96:5558:5569	299587	2	True				
ANR	299652	ParameterType	int		299587	0					
ANR	299653	Identifier	num_args		299587	1					
ANR	299654	CFGEntryNode	ENTRY		299587		True				
ANR	299655	CFGExitNode	EXIT		299587		True				
ANR	299656	Symbol	args		299587						
ANR	299657	Symbol	func		299587						
ANR	299658	Symbol	* element		299587						
ANR	299659	Symbol	num_args		299587						
ANR	299660	Symbol	* l		299587						
ANR	299661	Symbol	l -> head		299587						
ANR	299662	Symbol	element -> data		299587						
ANR	299663	Symbol	l		299587						
ANR	299664	Symbol	element -> next		299587						
ANR	299665	Symbol	element		299587						
ANR	299666	Function	zend_llist_count	254:0:5770:5838							
ANR	299667	FunctionDef	zend_llist_count (zend_llist * l)		299666	0					
ANR	299668	CompoundStatement		255:0:5818:5838	299666	0					
ANR	299669	ReturnStatement	return l -> count ;	256:1:5821:5836	299666	0	True				
ANR	299670	PtrMemberAccess	l -> count		299666	0					
ANR	299671	Identifier	l		299666	0					
ANR	299672	Identifier	count		299666	1					
ANR	299673	ReturnType	ZEND_API size_t		299666	1					
ANR	299674	Identifier	zend_llist_count		299666	2					
ANR	299675	ParameterList	zend_llist * l		299666	3					
ANR	299676	Parameter	zend_llist * l	254:33:5803:5815	299666	0	True				
ANR	299677	ParameterType	zend_llist *		299666	0					
ANR	299678	Identifier	l		299666	1					
ANR	299679	CFGEntryNode	ENTRY		299666		True				
ANR	299680	CFGExitNode	EXIT		299666		True				
ANR	299681	Symbol	* l		299666						
ANR	299682	Symbol	l -> count		299666						
ANR	299683	Symbol	l		299666						
ANR	299684	Function	zend_llist_get_first_ex	260:0:5842:6080							
ANR	299685	FunctionDef	"zend_llist_get_first_ex (zend_llist * l , zend_llist_position * pos)"		299684	0					
ANR	299686	CompoundStatement		261:0:5922:6080	299684	0					
ANR	299687	IdentifierDeclStatement	zend_llist_position * current = pos ? pos : & l -> traverse_ptr ;	262:1:5925:5984	299684	0	True				
ANR	299688	IdentifierDecl	* current = pos ? pos : & l -> traverse_ptr		299684	0					
ANR	299689	IdentifierDeclType	zend_llist_position *		299684	0					
ANR	299690	Identifier	current		299684	1					
ANR	299691	AssignmentExpression	* current = pos ? pos : & l -> traverse_ptr		299684	2		=			
ANR	299692	Identifier	current		299684	0					
ANR	299693	ConditionalExpression	pos ? pos : & l -> traverse_ptr		299684	1					
ANR	299694	Condition	pos		299684	0					
ANR	299695	Identifier	pos		299684	0					
ANR	299696	Identifier	pos		299684	1					
ANR	299697	UnaryOperationExpression	& l -> traverse_ptr		299684	2					
ANR	299698	UnaryOperator	&		299684	0					
ANR	299699	PtrMemberAccess	l -> traverse_ptr		299684	1					
ANR	299700	Identifier	l		299684	0					
ANR	299701	Identifier	traverse_ptr		299684	1					
ANR	299702	ExpressionStatement	* current = l -> head	264:1:5988:6006	299684	1	True				
ANR	299703	AssignmentExpression	* current = l -> head		299684	0		=			
ANR	299704	UnaryOperationExpression	* current		299684	0					
ANR	299705	UnaryOperator	*		299684	0					
ANR	299706	Identifier	current		299684	1					
ANR	299707	PtrMemberAccess	l -> head		299684	1					
ANR	299708	Identifier	l		299684	0					
ANR	299709	Identifier	head		299684	1					
ANR	299710	IfStatement	if ( * current )		299684	2					
ANR	299711	Condition	* current	265:5:6013:6020	299684	0	True				
ANR	299712	UnaryOperationExpression	* current		299684	0					
ANR	299713	UnaryOperator	*		299684	0					
ANR	299714	Identifier	current		299684	1					
ANR	299715	CompoundStatement		5:15:100:100	299684	1					
ANR	299716	ReturnStatement	return ( * current ) -> data ;	266:2:6027:6050	299684	0	True				
ANR	299717	PtrMemberAccess	( * current ) -> data		299684	0					
ANR	299718	UnaryOperationExpression	* current		299684	0					
ANR	299719	UnaryOperator	*		299684	0					
ANR	299720	Identifier	current		299684	1					
ANR	299721	Identifier	data		299684	1					
ANR	299722	ElseStatement	else		299684	0					
ANR	299723	CompoundStatement		7:8:137:137	299684	0					
ANR	299724	ReturnStatement	return NULL ;	268:2:6064:6075	299684	0	True				
ANR	299725	Identifier	NULL		299684	0					
ANR	299726	ReturnType	ZEND_API void *		299684	1					
ANR	299727	Identifier	zend_llist_get_first_ex		299684	2					
ANR	299728	ParameterList	"zend_llist * l , zend_llist_position * pos"		299684	3					
ANR	299729	Parameter	zend_llist * l	260:39:5881:5893	299684	0	True				
ANR	299730	ParameterType	zend_llist *		299684	0					
ANR	299731	Identifier	l		299684	1					
ANR	299732	Parameter	zend_llist_position * pos	260:54:5896:5919	299684	1	True				
ANR	299733	ParameterType	zend_llist_position *		299684	0					
ANR	299734	Identifier	pos		299684	1					
ANR	299735	CFGEntryNode	ENTRY		299684		True				
ANR	299736	CFGExitNode	EXIT		299684		True				
ANR	299737	Symbol	( * current ) -> data		299684						
ANR	299738	Symbol	current		299684						
ANR	299739	Symbol	* * current		299684						
ANR	299740	Symbol	& l -> traverse_ptr		299684						
ANR	299741	Symbol	NULL		299684						
ANR	299742	Symbol	pos		299684						
ANR	299743	Symbol	* l		299684						
ANR	299744	Symbol	l -> head		299684						
ANR	299745	Symbol	* current		299684						
ANR	299746	Symbol	l		299684						
ANR	299747	Function	zend_llist_get_last_ex	273:0:6084:6321							
ANR	299748	FunctionDef	"zend_llist_get_last_ex (zend_llist * l , zend_llist_position * pos)"		299747	0					
ANR	299749	CompoundStatement		274:0:6163:6321	299747	0					
ANR	299750	IdentifierDeclStatement	zend_llist_position * current = pos ? pos : & l -> traverse_ptr ;	275:1:6166:6225	299747	0	True				
ANR	299751	IdentifierDecl	* current = pos ? pos : & l -> traverse_ptr		299747	0					
ANR	299752	IdentifierDeclType	zend_llist_position *		299747	0					
ANR	299753	Identifier	current		299747	1					
ANR	299754	AssignmentExpression	* current = pos ? pos : & l -> traverse_ptr		299747	2		=			
ANR	299755	Identifier	current		299747	0					
ANR	299756	ConditionalExpression	pos ? pos : & l -> traverse_ptr		299747	1					
ANR	299757	Condition	pos		299747	0					
ANR	299758	Identifier	pos		299747	0					
ANR	299759	Identifier	pos		299747	1					
ANR	299760	UnaryOperationExpression	& l -> traverse_ptr		299747	2					
ANR	299761	UnaryOperator	&		299747	0					
ANR	299762	PtrMemberAccess	l -> traverse_ptr		299747	1					
ANR	299763	Identifier	l		299747	0					
ANR	299764	Identifier	traverse_ptr		299747	1					
ANR	299765	ExpressionStatement	* current = l -> tail	277:1:6229:6247	299747	1	True				
ANR	299766	AssignmentExpression	* current = l -> tail		299747	0		=			
ANR	299767	UnaryOperationExpression	* current		299747	0					
ANR	299768	UnaryOperator	*		299747	0					
ANR	299769	Identifier	current		299747	1					
ANR	299770	PtrMemberAccess	l -> tail		299747	1					
ANR	299771	Identifier	l		299747	0					
ANR	299772	Identifier	tail		299747	1					
ANR	299773	IfStatement	if ( * current )		299747	2					
ANR	299774	Condition	* current	278:5:6254:6261	299747	0	True				
ANR	299775	UnaryOperationExpression	* current		299747	0					
ANR	299776	UnaryOperator	*		299747	0					
ANR	299777	Identifier	current		299747	1					
ANR	299778	CompoundStatement		5:15:100:100	299747	1					
ANR	299779	ReturnStatement	return ( * current ) -> data ;	279:2:6268:6291	299747	0	True				
ANR	299780	PtrMemberAccess	( * current ) -> data		299747	0					
ANR	299781	UnaryOperationExpression	* current		299747	0					
ANR	299782	UnaryOperator	*		299747	0					
ANR	299783	Identifier	current		299747	1					
ANR	299784	Identifier	data		299747	1					
ANR	299785	ElseStatement	else		299747	0					
ANR	299786	CompoundStatement		7:8:137:137	299747	0					
ANR	299787	ReturnStatement	return NULL ;	281:2:6305:6316	299747	0	True				
ANR	299788	Identifier	NULL		299747	0					
ANR	299789	ReturnType	ZEND_API void *		299747	1					
ANR	299790	Identifier	zend_llist_get_last_ex		299747	2					
ANR	299791	ParameterList	"zend_llist * l , zend_llist_position * pos"		299747	3					
ANR	299792	Parameter	zend_llist * l	273:38:6122:6134	299747	0	True				
ANR	299793	ParameterType	zend_llist *		299747	0					
ANR	299794	Identifier	l		299747	1					
ANR	299795	Parameter	zend_llist_position * pos	273:53:6137:6160	299747	1	True				
ANR	299796	ParameterType	zend_llist_position *		299747	0					
ANR	299797	Identifier	pos		299747	1					
ANR	299798	CFGEntryNode	ENTRY		299747		True				
ANR	299799	CFGExitNode	EXIT		299747		True				
ANR	299800	Symbol	( * current ) -> data		299747						
ANR	299801	Symbol	current		299747						
ANR	299802	Symbol	* * current		299747						
ANR	299803	Symbol	& l -> traverse_ptr		299747						
ANR	299804	Symbol	NULL		299747						
ANR	299805	Symbol	pos		299747						
ANR	299806	Symbol	* l		299747						
ANR	299807	Symbol	* current		299747						
ANR	299808	Symbol	l -> tail		299747						
ANR	299809	Symbol	l		299747						
ANR	299810	Function	zend_llist_get_next_ex	286:0:6325:6584							
ANR	299811	FunctionDef	"zend_llist_get_next_ex (zend_llist * l , zend_llist_position * pos)"		299810	0					
ANR	299812	CompoundStatement		287:0:6404:6584	299810	0					
ANR	299813	IdentifierDeclStatement	zend_llist_position * current = pos ? pos : & l -> traverse_ptr ;	288:1:6407:6466	299810	0	True				
ANR	299814	IdentifierDecl	* current = pos ? pos : & l -> traverse_ptr		299810	0					
ANR	299815	IdentifierDeclType	zend_llist_position *		299810	0					
ANR	299816	Identifier	current		299810	1					
ANR	299817	AssignmentExpression	* current = pos ? pos : & l -> traverse_ptr		299810	2		=			
ANR	299818	Identifier	current		299810	0					
ANR	299819	ConditionalExpression	pos ? pos : & l -> traverse_ptr		299810	1					
ANR	299820	Condition	pos		299810	0					
ANR	299821	Identifier	pos		299810	0					
ANR	299822	Identifier	pos		299810	1					
ANR	299823	UnaryOperationExpression	& l -> traverse_ptr		299810	2					
ANR	299824	UnaryOperator	&		299810	0					
ANR	299825	PtrMemberAccess	l -> traverse_ptr		299810	1					
ANR	299826	Identifier	l		299810	0					
ANR	299827	Identifier	traverse_ptr		299810	1					
ANR	299828	IfStatement	if ( * current )		299810	1					
ANR	299829	Condition	* current	290:5:6474:6481	299810	0	True				
ANR	299830	UnaryOperationExpression	* current		299810	0					
ANR	299831	UnaryOperator	*		299810	0					
ANR	299832	Identifier	current		299810	1					
ANR	299833	CompoundStatement		4:15:79:79	299810	1					
ANR	299834	ExpressionStatement	* current = ( * current ) -> next	291:2:6488:6515	299810	0	True				
ANR	299835	AssignmentExpression	* current = ( * current ) -> next		299810	0		=			
ANR	299836	UnaryOperationExpression	* current		299810	0					
ANR	299837	UnaryOperator	*		299810	0					
ANR	299838	Identifier	current		299810	1					
ANR	299839	PtrMemberAccess	( * current ) -> next		299810	1					
ANR	299840	UnaryOperationExpression	* current		299810	0					
ANR	299841	UnaryOperator	*		299810	0					
ANR	299842	Identifier	current		299810	1					
ANR	299843	Identifier	next		299810	1					
ANR	299844	IfStatement	if ( * current )		299810	1					
ANR	299845	Condition	* current	292:6:6523:6530	299810	0	True				
ANR	299846	UnaryOperationExpression	* current		299810	0					
ANR	299847	UnaryOperator	*		299810	0					
ANR	299848	Identifier	current		299810	1					
ANR	299849	CompoundStatement		6:16:128:128	299810	1					
ANR	299850	ReturnStatement	return ( * current ) -> data ;	293:3:6538:6561	299810	0	True				
ANR	299851	PtrMemberAccess	( * current ) -> data		299810	0					
ANR	299852	UnaryOperationExpression	* current		299810	0					
ANR	299853	UnaryOperator	*		299810	0					
ANR	299854	Identifier	current		299810	1					
ANR	299855	Identifier	data		299810	1					
ANR	299856	ReturnStatement	return NULL ;	296:1:6571:6582	299810	2	True				
ANR	299857	Identifier	NULL		299810	0					
ANR	299858	ReturnType	ZEND_API void *		299810	1					
ANR	299859	Identifier	zend_llist_get_next_ex		299810	2					
ANR	299860	ParameterList	"zend_llist * l , zend_llist_position * pos"		299810	3					
ANR	299861	Parameter	zend_llist * l	286:38:6363:6375	299810	0	True				
ANR	299862	ParameterType	zend_llist *		299810	0					
ANR	299863	Identifier	l		299810	1					
ANR	299864	Parameter	zend_llist_position * pos	286:53:6378:6401	299810	1	True				
ANR	299865	ParameterType	zend_llist_position *		299810	0					
ANR	299866	Identifier	pos		299810	1					
ANR	299867	CFGEntryNode	ENTRY		299810		True				
ANR	299868	CFGExitNode	EXIT		299810		True				
ANR	299869	Symbol	( * current ) -> data		299810						
ANR	299870	Symbol	current		299810						
ANR	299871	Symbol	* * current		299810						
ANR	299872	Symbol	& l -> traverse_ptr		299810						
ANR	299873	Symbol	NULL		299810						
ANR	299874	Symbol	( * current ) -> next		299810						
ANR	299875	Symbol	pos		299810						
ANR	299876	Symbol	* current		299810						
ANR	299877	Symbol	l		299810						
ANR	299878	Function	zend_llist_get_prev_ex	300:0:6588:6847							
ANR	299879	FunctionDef	"zend_llist_get_prev_ex (zend_llist * l , zend_llist_position * pos)"		299878	0					
ANR	299880	CompoundStatement		301:0:6667:6847	299878	0					
ANR	299881	IdentifierDeclStatement	zend_llist_position * current = pos ? pos : & l -> traverse_ptr ;	302:1:6670:6729	299878	0	True				
ANR	299882	IdentifierDecl	* current = pos ? pos : & l -> traverse_ptr		299878	0					
ANR	299883	IdentifierDeclType	zend_llist_position *		299878	0					
ANR	299884	Identifier	current		299878	1					
ANR	299885	AssignmentExpression	* current = pos ? pos : & l -> traverse_ptr		299878	2		=			
ANR	299886	Identifier	current		299878	0					
ANR	299887	ConditionalExpression	pos ? pos : & l -> traverse_ptr		299878	1					
ANR	299888	Condition	pos		299878	0					
ANR	299889	Identifier	pos		299878	0					
ANR	299890	Identifier	pos		299878	1					
ANR	299891	UnaryOperationExpression	& l -> traverse_ptr		299878	2					
ANR	299892	UnaryOperator	&		299878	0					
ANR	299893	PtrMemberAccess	l -> traverse_ptr		299878	1					
ANR	299894	Identifier	l		299878	0					
ANR	299895	Identifier	traverse_ptr		299878	1					
ANR	299896	IfStatement	if ( * current )		299878	1					
ANR	299897	Condition	* current	304:5:6737:6744	299878	0	True				
ANR	299898	UnaryOperationExpression	* current		299878	0					
ANR	299899	UnaryOperator	*		299878	0					
ANR	299900	Identifier	current		299878	1					
ANR	299901	CompoundStatement		4:15:79:79	299878	1					
ANR	299902	ExpressionStatement	* current = ( * current ) -> prev	305:2:6751:6778	299878	0	True				
ANR	299903	AssignmentExpression	* current = ( * current ) -> prev		299878	0		=			
ANR	299904	UnaryOperationExpression	* current		299878	0					
ANR	299905	UnaryOperator	*		299878	0					
ANR	299906	Identifier	current		299878	1					
ANR	299907	PtrMemberAccess	( * current ) -> prev		299878	1					
ANR	299908	UnaryOperationExpression	* current		299878	0					
ANR	299909	UnaryOperator	*		299878	0					
ANR	299910	Identifier	current		299878	1					
ANR	299911	Identifier	prev		299878	1					
ANR	299912	IfStatement	if ( * current )		299878	1					
ANR	299913	Condition	* current	306:6:6786:6793	299878	0	True				
ANR	299914	UnaryOperationExpression	* current		299878	0					
ANR	299915	UnaryOperator	*		299878	0					
ANR	299916	Identifier	current		299878	1					
ANR	299917	CompoundStatement		6:16:128:128	299878	1					
ANR	299918	ReturnStatement	return ( * current ) -> data ;	307:3:6801:6824	299878	0	True				
ANR	299919	PtrMemberAccess	( * current ) -> data		299878	0					
ANR	299920	UnaryOperationExpression	* current		299878	0					
ANR	299921	UnaryOperator	*		299878	0					
ANR	299922	Identifier	current		299878	1					
ANR	299923	Identifier	data		299878	1					
ANR	299924	ReturnStatement	return NULL ;	310:1:6834:6845	299878	2	True				
ANR	299925	Identifier	NULL		299878	0					
ANR	299926	ReturnType	ZEND_API void *		299878	1					
ANR	299927	Identifier	zend_llist_get_prev_ex		299878	2					
ANR	299928	ParameterList	"zend_llist * l , zend_llist_position * pos"		299878	3					
ANR	299929	Parameter	zend_llist * l	300:38:6626:6638	299878	0	True				
ANR	299930	ParameterType	zend_llist *		299878	0					
ANR	299931	Identifier	l		299878	1					
ANR	299932	Parameter	zend_llist_position * pos	300:53:6641:6664	299878	1	True				
ANR	299933	ParameterType	zend_llist_position *		299878	0					
ANR	299934	Identifier	pos		299878	1					
ANR	299935	CFGEntryNode	ENTRY		299878		True				
ANR	299936	CFGExitNode	EXIT		299878		True				
ANR	299937	Symbol	( * current ) -> data		299878						
ANR	299938	Symbol	current		299878						
ANR	299939	Symbol	* * current		299878						
ANR	299940	Symbol	& l -> traverse_ptr		299878						
ANR	299941	Symbol	NULL		299878						
ANR	299942	Symbol	pos		299878						
ANR	299943	Symbol	( * current ) -> prev		299878						
ANR	299944	Symbol	* current		299878						
ANR	299945	Symbol	l		299878						
