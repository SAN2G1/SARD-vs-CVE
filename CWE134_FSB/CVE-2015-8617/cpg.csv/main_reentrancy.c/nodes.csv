command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3026155	File	data/converged/CVE-2015-8617_php-src/main_reentrancy.c								
ANR	3026156	ClassDef	<unnamed>	31:0:1376:1459							
ANR	3026157	DeclStmt									
ANR	3026158	Decl							MUTEX_T	MUTEX_T [ NUMBER_OF_LOCKS ]	reentrant_locks
ANR	3026159	Function	php_ctime_r	61:0:1828:1952							
ANR	3026160	FunctionDef	"php_ctime_r (const time_t * clock , char * buf)"		3026159	0					
ANR	3026161	CompoundStatement		62:0:1885:1952	3026159	0					
ANR	3026162	IfStatement	"if ( ctime_r ( clock , buf ) == buf )"		3026159	0					
ANR	3026163	Condition	"ctime_r ( clock , buf ) == buf"	63:5:1892:1917	3026159	0	True				
ANR	3026164	EqualityExpression	"ctime_r ( clock , buf ) == buf"		3026159	0		==			
ANR	3026165	CallExpression	"ctime_r ( clock , buf )"		3026159	0					
ANR	3026166	Callee	ctime_r		3026159	0					
ANR	3026167	Identifier	ctime_r		3026159	0					
ANR	3026168	ArgumentList	clock		3026159	1					
ANR	3026169	Argument	clock		3026159	0					
ANR	3026170	Identifier	clock		3026159	0					
ANR	3026171	Argument	buf		3026159	1					
ANR	3026172	Identifier	buf		3026159	0					
ANR	3026173	Identifier	buf		3026159	1					
ANR	3026174	ReturnStatement	return ( buf ) ;	64:2:1922:1934	3026159	1	True				
ANR	3026175	Identifier	buf		3026159	0					
ANR	3026176	ReturnStatement	return ( NULL ) ;	65:1:1937:1950	3026159	1	True				
ANR	3026177	Identifier	NULL		3026159	0					
ANR	3026178	ReturnType	PHPAPI char *		3026159	1					
ANR	3026179	Identifier	php_ctime_r		3026159	2					
ANR	3026180	ParameterList	"const time_t * clock , char * buf"		3026159	3					
ANR	3026181	Parameter	const time_t * clock	61:25:1853:1871	3026159	0	True				
ANR	3026182	ParameterType	const time_t *		3026159	0					
ANR	3026183	Identifier	clock		3026159	1					
ANR	3026184	Parameter	char * buf	61:46:1874:1882	3026159	1	True				
ANR	3026185	ParameterType	char *		3026159	0					
ANR	3026186	Identifier	buf		3026159	1					
ANR	3026187	CFGEntryNode	ENTRY		3026159		True				
ANR	3026188	CFGExitNode	EXIT		3026159		True				
ANR	3026189	Symbol	buf		3026159						
ANR	3026190	Symbol	NULL		3026159						
ANR	3026191	Symbol	ctime_r		3026159						
ANR	3026192	Symbol	clock		3026159						
ANR	3026193	Function	php_asctime_r	68:0:1955:2080							
ANR	3026194	FunctionDef	"php_asctime_r (const struct tm * tm , char * buf)"		3026193	0					
ANR	3026195	CompoundStatement		69:0:2014:2080	3026193	0					
ANR	3026196	IfStatement	"if ( asctime_r ( tm , buf ) == buf )"		3026193	0					
ANR	3026197	Condition	"asctime_r ( tm , buf ) == buf"	70:5:2021:2045	3026193	0	True				
ANR	3026198	EqualityExpression	"asctime_r ( tm , buf ) == buf"		3026193	0		==			
ANR	3026199	CallExpression	"asctime_r ( tm , buf )"		3026193	0					
ANR	3026200	Callee	asctime_r		3026193	0					
ANR	3026201	Identifier	asctime_r		3026193	0					
ANR	3026202	ArgumentList	tm		3026193	1					
ANR	3026203	Argument	tm		3026193	0					
ANR	3026204	Identifier	tm		3026193	0					
ANR	3026205	Argument	buf		3026193	1					
ANR	3026206	Identifier	buf		3026193	0					
ANR	3026207	Identifier	buf		3026193	1					
ANR	3026208	ReturnStatement	return ( buf ) ;	71:2:2050:2062	3026193	1	True				
ANR	3026209	Identifier	buf		3026193	0					
ANR	3026210	ReturnStatement	return ( NULL ) ;	72:1:2065:2078	3026193	1	True				
ANR	3026211	Identifier	NULL		3026193	0					
ANR	3026212	ReturnType	PHPAPI char *		3026193	1					
ANR	3026213	Identifier	php_asctime_r		3026193	2					
ANR	3026214	ParameterList	"const struct tm * tm , char * buf"		3026193	3					
ANR	3026215	Parameter	const struct tm * tm	68:27:1982:2000	3026193	0	True				
ANR	3026216	ParameterType	const struct tm *		3026193	0					
ANR	3026217	Identifier	tm		3026193	1					
ANR	3026218	Parameter	char * buf	68:48:2003:2011	3026193	1	True				
ANR	3026219	ParameterType	char *		3026193	0					
ANR	3026220	Identifier	buf		3026193	1					
ANR	3026221	CFGEntryNode	ENTRY		3026193		True				
ANR	3026222	CFGExitNode	EXIT		3026193		True				
ANR	3026223	Symbol	buf		3026193						
ANR	3026224	Symbol	NULL		3026193						
ANR	3026225	Symbol	tm		3026193						
ANR	3026226	Symbol	asctime_r		3026193						
ANR	3026227	Function	php_ctime_r	91:0:2373:2500							
ANR	3026228	FunctionDef	"php_ctime_r (const time_t * clock , char * buf)"		3026227	0					
ANR	3026229	CompoundStatement		92:0:2430:2500	3026227	0					
ANR	3026230	IfStatement	"if ( ctime_r ( clock , buf , 26 ) != - 1 )"		3026227	0					
ANR	3026231	Condition	"ctime_r ( clock , buf , 26 ) != - 1"	93:5:2437:2465	3026227	0	True				
ANR	3026232	EqualityExpression	"ctime_r ( clock , buf , 26 ) != - 1"		3026227	0		!=			
ANR	3026233	CallExpression	"ctime_r ( clock , buf , 26 )"		3026227	0					
ANR	3026234	Callee	ctime_r		3026227	0					
ANR	3026235	Identifier	ctime_r		3026227	0					
ANR	3026236	ArgumentList	clock		3026227	1					
ANR	3026237	Argument	clock		3026227	0					
ANR	3026238	Identifier	clock		3026227	0					
ANR	3026239	Argument	buf		3026227	1					
ANR	3026240	Identifier	buf		3026227	0					
ANR	3026241	Argument	26		3026227	2					
ANR	3026242	PrimaryExpression	26		3026227	0					
ANR	3026243	UnaryOperationExpression	- 1		3026227	1					
ANR	3026244	UnaryOperator	-		3026227	0					
ANR	3026245	PrimaryExpression	1		3026227	1					
ANR	3026246	ReturnStatement	return ( buf ) ;	94:2:2470:2482	3026227	1	True				
ANR	3026247	Identifier	buf		3026227	0					
ANR	3026248	ReturnStatement	return ( NULL ) ;	95:1:2485:2498	3026227	1	True				
ANR	3026249	Identifier	NULL		3026227	0					
ANR	3026250	ReturnType	PHPAPI char *		3026227	1					
ANR	3026251	Identifier	php_ctime_r		3026227	2					
ANR	3026252	ParameterList	"const time_t * clock , char * buf"		3026227	3					
ANR	3026253	Parameter	const time_t * clock	91:25:2398:2416	3026227	0	True				
ANR	3026254	ParameterType	const time_t *		3026227	0					
ANR	3026255	Identifier	clock		3026227	1					
ANR	3026256	Parameter	char * buf	91:46:2419:2427	3026227	1	True				
ANR	3026257	ParameterType	char *		3026227	0					
ANR	3026258	Identifier	buf		3026227	1					
ANR	3026259	CFGEntryNode	ENTRY		3026227		True				
ANR	3026260	CFGExitNode	EXIT		3026227		True				
ANR	3026261	Symbol	buf		3026227						
ANR	3026262	Symbol	NULL		3026227						
ANR	3026263	Symbol	ctime_r		3026227						
ANR	3026264	Symbol	clock		3026227						
ANR	3026265	Function	php_asctime_r	98:0:2503:2631							
ANR	3026266	FunctionDef	"php_asctime_r (const struct tm * tm , char * buf)"		3026265	0					
ANR	3026267	CompoundStatement		99:0:2562:2631	3026265	0					
ANR	3026268	IfStatement	"if ( asctime_r ( tm , buf , 26 ) != - 1 )"		3026265	0					
ANR	3026269	Condition	"asctime_r ( tm , buf , 26 ) != - 1"	100:5:2569:2596	3026265	0	True				
ANR	3026270	EqualityExpression	"asctime_r ( tm , buf , 26 ) != - 1"		3026265	0		!=			
ANR	3026271	CallExpression	"asctime_r ( tm , buf , 26 )"		3026265	0					
ANR	3026272	Callee	asctime_r		3026265	0					
ANR	3026273	Identifier	asctime_r		3026265	0					
ANR	3026274	ArgumentList	tm		3026265	1					
ANR	3026275	Argument	tm		3026265	0					
ANR	3026276	Identifier	tm		3026265	0					
ANR	3026277	Argument	buf		3026265	1					
ANR	3026278	Identifier	buf		3026265	0					
ANR	3026279	Argument	26		3026265	2					
ANR	3026280	PrimaryExpression	26		3026265	0					
ANR	3026281	UnaryOperationExpression	- 1		3026265	1					
ANR	3026282	UnaryOperator	-		3026265	0					
ANR	3026283	PrimaryExpression	1		3026265	1					
ANR	3026284	ReturnStatement	return ( buf ) ;	101:2:2601:2613	3026265	1	True				
ANR	3026285	Identifier	buf		3026265	0					
ANR	3026286	ReturnStatement	return ( NULL ) ;	102:1:2616:2629	3026265	1	True				
ANR	3026287	Identifier	NULL		3026265	0					
ANR	3026288	ReturnType	PHPAPI char *		3026265	1					
ANR	3026289	Identifier	php_asctime_r		3026265	2					
ANR	3026290	ParameterList	"const struct tm * tm , char * buf"		3026265	3					
ANR	3026291	Parameter	const struct tm * tm	98:27:2530:2548	3026265	0	True				
ANR	3026292	ParameterType	const struct tm *		3026265	0					
ANR	3026293	Identifier	tm		3026265	1					
ANR	3026294	Parameter	char * buf	98:48:2551:2559	3026265	1	True				
ANR	3026295	ParameterType	char *		3026265	0					
ANR	3026296	Identifier	buf		3026265	1					
ANR	3026297	CFGEntryNode	ENTRY		3026265		True				
ANR	3026298	CFGExitNode	EXIT		3026265		True				
ANR	3026299	Symbol	buf		3026265						
ANR	3026300	Symbol	NULL		3026265						
ANR	3026301	Symbol	tm		3026265						
ANR	3026302	Symbol	asctime_r		3026265						
ANR	3026303	Function	php_readdir_r	128:0:3105:3822							
ANR	3026304	FunctionDef	"php_readdir_r (DIR * dirp , struct dirent * entry , struct dirent * * result)"		3026303	0					
ANR	3026305	CompoundStatement		130:0:3189:3822	3026303	0					
ANR	3026306	IdentifierDeclStatement	int ret = 0 ;	132:1:3224:3235	3026303	0	True				
ANR	3026307	IdentifierDecl	ret = 0		3026303	0					
ANR	3026308	IdentifierDeclType	int		3026303	0					
ANR	3026309	Identifier	ret		3026303	1					
ANR	3026310	AssignmentExpression	ret = 0		3026303	2		=			
ANR	3026311	Identifier	ret		3026303	0					
ANR	3026312	PrimaryExpression	0		3026303	1					
ANR	3026313	ExpressionStatement	entry -> d_name [ 0 ] = '\\0'	138:1:3405:3428	3026303	1	True				
ANR	3026314	AssignmentExpression	entry -> d_name [ 0 ] = '\\0'		3026303	0		=			
ANR	3026315	ArrayIndexing	entry -> d_name [ 0 ]		3026303	0					
ANR	3026316	PtrMemberAccess	entry -> d_name		3026303	0					
ANR	3026317	Identifier	entry		3026303	0					
ANR	3026318	Identifier	d_name		3026303	1					
ANR	3026319	PrimaryExpression	0		3026303	1					
ANR	3026320	PrimaryExpression	'\\0'		3026303	1					
ANR	3026321	ExpressionStatement	"readdir_r ( dirp , entry )"	139:1:3431:3453	3026303	2	True				
ANR	3026322	CallExpression	"readdir_r ( dirp , entry )"		3026303	0					
ANR	3026323	Callee	readdir_r		3026303	0					
ANR	3026324	Identifier	readdir_r		3026303	0					
ANR	3026325	ArgumentList	dirp		3026303	1					
ANR	3026326	Argument	dirp		3026303	0					
ANR	3026327	Identifier	dirp		3026303	0					
ANR	3026328	Argument	entry		3026303	1					
ANR	3026329	Identifier	entry		3026303	0					
ANR	3026330	IfStatement	if ( entry -> d_name [ 0 ] == '\\0' )		3026303	3					
ANR	3026331	Condition	entry -> d_name [ 0 ] == '\\0'	141:5:3461:3484	3026303	0	True				
ANR	3026332	EqualityExpression	entry -> d_name [ 0 ] == '\\0'		3026303	0		==			
ANR	3026333	ArrayIndexing	entry -> d_name [ 0 ]		3026303	0					
ANR	3026334	PtrMemberAccess	entry -> d_name		3026303	0					
ANR	3026335	Identifier	entry		3026303	0					
ANR	3026336	Identifier	d_name		3026303	1					
ANR	3026337	PrimaryExpression	0		3026303	1					
ANR	3026338	PrimaryExpression	'\\0'		3026303	1					
ANR	3026339	CompoundStatement		12:31:297:297	3026303	1					
ANR	3026340	ExpressionStatement	* result = NULL	142:2:3491:3505	3026303	0	True				
ANR	3026341	AssignmentExpression	* result = NULL		3026303	0		=			
ANR	3026342	UnaryOperationExpression	* result		3026303	0					
ANR	3026343	UnaryOperator	*		3026303	0					
ANR	3026344	Identifier	result		3026303	1					
ANR	3026345	Identifier	NULL		3026303	1					
ANR	3026346	ExpressionStatement	ret = errno	143:2:3509:3520	3026303	1	True				
ANR	3026347	AssignmentExpression	ret = errno		3026303	0		=			
ANR	3026348	Identifier	ret		3026303	0					
ANR	3026349	Identifier	errno		3026303	1					
ANR	3026350	ElseStatement	else		3026303	0					
ANR	3026351	CompoundStatement		15:8:340:340	3026303	0					
ANR	3026352	ExpressionStatement	* result = entry	145:2:3534:3549	3026303	0	True				
ANR	3026353	AssignmentExpression	* result = entry		3026303	0		=			
ANR	3026354	UnaryOperationExpression	* result		3026303	0					
ANR	3026355	UnaryOperator	*		3026303	0					
ANR	3026356	Identifier	result		3026303	1					
ANR	3026357	Identifier	entry		3026303	1					
ANR	3026358	ReturnStatement	return ret ;	147:1:3555:3565	3026303	4	True				
ANR	3026359	Identifier	ret		3026303	0					
ANR	3026360	ReturnType	PHPAPI int		3026303	1					
ANR	3026361	Identifier	php_readdir_r		3026303	2					
ANR	3026362	ParameterList	"DIR * dirp , struct dirent * entry , struct dirent * * result"		3026303	3					
ANR	3026363	Parameter	DIR * dirp	128:25:3130:3138	3026303	0	True				
ANR	3026364	ParameterType	DIR *		3026303	0					
ANR	3026365	Identifier	dirp		3026303	1					
ANR	3026366	Parameter	struct dirent * entry	128:36:3141:3160	3026303	1	True				
ANR	3026367	ParameterType	struct dirent *		3026303	0					
ANR	3026368	Identifier	entry		3026303	1					
ANR	3026369	Parameter	struct dirent * * result	129:2:3165:3186	3026303	2	True				
ANR	3026370	ParameterType	struct dirent * *		3026303	0					
ANR	3026371	Identifier	result		3026303	1					
ANR	3026372	CFGEntryNode	ENTRY		3026303		True				
ANR	3026373	CFGExitNode	EXIT		3026303		True				
ANR	3026374	Symbol	result		3026303						
ANR	3026375	Symbol	ret		3026303						
ANR	3026376	Symbol	entry		3026303						
ANR	3026377	Symbol	* entry -> d_name		3026303						
ANR	3026378	Symbol	errno		3026303						
ANR	3026379	Symbol	NULL		3026303						
ANR	3026380	Symbol	* * entry		3026303						
ANR	3026381	Symbol	* result		3026303						
ANR	3026382	Symbol	dirp		3026303						
ANR	3026383	Symbol	entry -> d_name		3026303						
ANR	3026384	Symbol	* entry		3026303						
ANR	3026385	DeclStmt									
ANR	3026386	Decl							struct tm	struct tm *	tmp
ANR	3026387	Function	php_ctime_r	197:0:4216:4390							
ANR	3026388	FunctionDef	"php_ctime_r (const time_t * clock , char * buf)"		3026387	0					
ANR	3026389	CompoundStatement		198:0:4273:4390	3026387	0					
ANR	3026390	IdentifierDeclStatement	char * tmp ;	199:1:4276:4285	3026387	0	True				
ANR	3026391	IdentifierDecl	* tmp		3026387	0					
ANR	3026392	IdentifierDeclType	char *		3026387	0					
ANR	3026393	Identifier	tmp		3026387	1					
ANR	3026394	ExpressionStatement	local_lock ( CTIME_R )	201:1:4289:4308	3026387	1	True				
ANR	3026395	CallExpression	local_lock ( CTIME_R )		3026387	0					
ANR	3026396	Callee	local_lock		3026387	0					
ANR	3026397	Identifier	local_lock		3026387	0					
ANR	3026398	ArgumentList	CTIME_R		3026387	1					
ANR	3026399	Argument	CTIME_R		3026387	0					
ANR	3026400	Identifier	CTIME_R		3026387	0					
ANR	3026401	ExpressionStatement	tmp = ctime ( clock )	203:1:4312:4330	3026387	2	True				
ANR	3026402	AssignmentExpression	tmp = ctime ( clock )		3026387	0		=			
ANR	3026403	Identifier	tmp		3026387	0					
ANR	3026404	CallExpression	ctime ( clock )		3026387	1					
ANR	3026405	Callee	ctime		3026387	0					
ANR	3026406	Identifier	ctime		3026387	0					
ANR	3026407	ArgumentList	clock		3026387	1					
ANR	3026408	Argument	clock		3026387	0					
ANR	3026409	Identifier	clock		3026387	0					
ANR	3026410	ExpressionStatement	"strcpy ( buf , tmp )"	204:1:4333:4349	3026387	3	True				
ANR	3026411	CallExpression	"strcpy ( buf , tmp )"		3026387	0					
ANR	3026412	Callee	strcpy		3026387	0					
ANR	3026413	Identifier	strcpy		3026387	0					
ANR	3026414	ArgumentList	buf		3026387	1					
ANR	3026415	Argument	buf		3026387	0					
ANR	3026416	Identifier	buf		3026387	0					
ANR	3026417	Argument	tmp		3026387	1					
ANR	3026418	Identifier	tmp		3026387	0					
ANR	3026419	ExpressionStatement	local_unlock ( CTIME_R )	206:1:4353:4374	3026387	4	True				
ANR	3026420	CallExpression	local_unlock ( CTIME_R )		3026387	0					
ANR	3026421	Callee	local_unlock		3026387	0					
ANR	3026422	Identifier	local_unlock		3026387	0					
ANR	3026423	ArgumentList	CTIME_R		3026387	1					
ANR	3026424	Argument	CTIME_R		3026387	0					
ANR	3026425	Identifier	CTIME_R		3026387	0					
ANR	3026426	ReturnStatement	return buf ;	208:1:4378:4388	3026387	5	True				
ANR	3026427	Identifier	buf		3026387	0					
ANR	3026428	ReturnType	PHPAPI char *		3026387	1					
ANR	3026429	Identifier	php_ctime_r		3026387	2					
ANR	3026430	ParameterList	"const time_t * clock , char * buf"		3026387	3					
ANR	3026431	Parameter	const time_t * clock	197:25:4241:4259	3026387	0	True				
ANR	3026432	ParameterType	const time_t *		3026387	0					
ANR	3026433	Identifier	clock		3026387	1					
ANR	3026434	Parameter	char * buf	197:46:4262:4270	3026387	1	True				
ANR	3026435	ParameterType	char *		3026387	0					
ANR	3026436	Identifier	buf		3026387	1					
ANR	3026437	CFGEntryNode	ENTRY		3026387		True				
ANR	3026438	CFGExitNode	EXIT		3026387		True				
ANR	3026439	Symbol	buf		3026387						
ANR	3026440	Symbol	CTIME_R		3026387						
ANR	3026441	Symbol	tmp		3026387						
ANR	3026442	Symbol	ctime		3026387						
ANR	3026443	Symbol	clock		3026387						
ANR	3026444	Function	php_asctime_r	215:0:4456:4635							
ANR	3026445	FunctionDef	"php_asctime_r (const struct tm * tm , char * buf)"		3026444	0					
ANR	3026446	CompoundStatement		216:0:4515:4635	3026444	0					
ANR	3026447	IdentifierDeclStatement	char * tmp ;	217:1:4518:4527	3026444	0	True				
ANR	3026448	IdentifierDecl	* tmp		3026444	0					
ANR	3026449	IdentifierDeclType	char *		3026444	0					
ANR	3026450	Identifier	tmp		3026444	1					
ANR	3026451	ExpressionStatement	local_lock ( ASCTIME_R )	219:1:4531:4552	3026444	1	True				
ANR	3026452	CallExpression	local_lock ( ASCTIME_R )		3026444	0					
ANR	3026453	Callee	local_lock		3026444	0					
ANR	3026454	Identifier	local_lock		3026444	0					
ANR	3026455	ArgumentList	ASCTIME_R		3026444	1					
ANR	3026456	Argument	ASCTIME_R		3026444	0					
ANR	3026457	Identifier	ASCTIME_R		3026444	0					
ANR	3026458	ExpressionStatement	tmp = asctime ( tm )	221:1:4556:4573	3026444	2	True				
ANR	3026459	AssignmentExpression	tmp = asctime ( tm )		3026444	0		=			
ANR	3026460	Identifier	tmp		3026444	0					
ANR	3026461	CallExpression	asctime ( tm )		3026444	1					
ANR	3026462	Callee	asctime		3026444	0					
ANR	3026463	Identifier	asctime		3026444	0					
ANR	3026464	ArgumentList	tm		3026444	1					
ANR	3026465	Argument	tm		3026444	0					
ANR	3026466	Identifier	tm		3026444	0					
ANR	3026467	ExpressionStatement	"strcpy ( buf , tmp )"	222:1:4576:4592	3026444	3	True				
ANR	3026468	CallExpression	"strcpy ( buf , tmp )"		3026444	0					
ANR	3026469	Callee	strcpy		3026444	0					
ANR	3026470	Identifier	strcpy		3026444	0					
ANR	3026471	ArgumentList	buf		3026444	1					
ANR	3026472	Argument	buf		3026444	0					
ANR	3026473	Identifier	buf		3026444	0					
ANR	3026474	Argument	tmp		3026444	1					
ANR	3026475	Identifier	tmp		3026444	0					
ANR	3026476	ExpressionStatement	local_unlock ( ASCTIME_R )	224:1:4596:4619	3026444	4	True				
ANR	3026477	CallExpression	local_unlock ( ASCTIME_R )		3026444	0					
ANR	3026478	Callee	local_unlock		3026444	0					
ANR	3026479	Identifier	local_unlock		3026444	0					
ANR	3026480	ArgumentList	ASCTIME_R		3026444	1					
ANR	3026481	Argument	ASCTIME_R		3026444	0					
ANR	3026482	Identifier	ASCTIME_R		3026444	0					
ANR	3026483	ReturnStatement	return buf ;	226:1:4623:4633	3026444	5	True				
ANR	3026484	Identifier	buf		3026444	0					
ANR	3026485	ReturnType	PHPAPI char *		3026444	1					
ANR	3026486	Identifier	php_asctime_r		3026444	2					
ANR	3026487	ParameterList	"const struct tm * tm , char * buf"		3026444	3					
ANR	3026488	Parameter	const struct tm * tm	215:27:4483:4501	3026444	0	True				
ANR	3026489	ParameterType	const struct tm *		3026444	0					
ANR	3026490	Identifier	tm		3026444	1					
ANR	3026491	Parameter	char * buf	215:48:4504:4512	3026444	1	True				
ANR	3026492	ParameterType	char *		3026444	0					
ANR	3026493	Identifier	buf		3026444	1					
ANR	3026494	CFGEntryNode	ENTRY		3026444		True				
ANR	3026495	CFGExitNode	EXIT		3026444		True				
ANR	3026496	Symbol	buf		3026444						
ANR	3026497	Symbol	ASCTIME_R		3026444						
ANR	3026498	Symbol	tmp		3026444						
ANR	3026499	Symbol	tm		3026444						
ANR	3026500	Symbol	asctime		3026444						
ANR	3026501	DeclStmt									
ANR	3026502	Decl							struct tm	struct tm *	tmp
ANR	3026503	Function	reentrancy_startup	254:0:4994:5122							
ANR	3026504	FunctionDef	reentrancy_startup ()		3026503	0					
ANR	3026505	CompoundStatement		255:0:5024:5122	3026503	0					
ANR	3026506	IdentifierDeclStatement	int i ;	256:1:5027:5032	3026503	0	True				
ANR	3026507	IdentifierDecl	i		3026503	0					
ANR	3026508	IdentifierDeclType	int		3026503	0					
ANR	3026509	Identifier	i		3026503	1					
ANR	3026510	ForStatement	for ( i = 0 ; i < NUMBER_OF_LOCKS ; i ++ )		3026503	1					
ANR	3026511	ForInit	i = 0 ;	258:6:5041:5046	3026503	0	True				
ANR	3026512	AssignmentExpression	i = 0		3026503	0		=			
ANR	3026513	Identifier	i		3026503	0					
ANR	3026514	PrimaryExpression	0		3026503	1					
ANR	3026515	Condition	i < NUMBER_OF_LOCKS	258:13:5048:5066	3026503	1	True				
ANR	3026516	RelationalExpression	i < NUMBER_OF_LOCKS		3026503	0		<			
ANR	3026517	Identifier	i		3026503	0					
ANR	3026518	Identifier	NUMBER_OF_LOCKS		3026503	1					
ANR	3026519	PostIncDecOperationExpression	i ++	258:34:5069:5071	3026503	2	True				
ANR	3026520	Identifier	i		3026503	0					
ANR	3026521	IncDec	++		3026503	1					
ANR	3026522	CompoundStatement		4:39:49:49	3026503	3					
ANR	3026523	ExpressionStatement	reentrant_locks [ i ] = tsrm_mutex_alloc ( )	259:2:5078:5117	3026503	0	True				
ANR	3026524	AssignmentExpression	reentrant_locks [ i ] = tsrm_mutex_alloc ( )		3026503	0		=			
ANR	3026525	ArrayIndexing	reentrant_locks [ i ]		3026503	0					
ANR	3026526	Identifier	reentrant_locks		3026503	0					
ANR	3026527	Identifier	i		3026503	1					
ANR	3026528	CallExpression	tsrm_mutex_alloc ( )		3026503	1					
ANR	3026529	Callee	tsrm_mutex_alloc		3026503	0					
ANR	3026530	Identifier	tsrm_mutex_alloc		3026503	0					
ANR	3026531	ArgumentList			3026503	1					
ANR	3026532	ReturnType	void		3026503	1					
ANR	3026533	Identifier	reentrancy_startup		3026503	2					
ANR	3026534	ParameterList			3026503	3					
ANR	3026535	CFGEntryNode	ENTRY		3026503		True				
ANR	3026536	CFGExitNode	EXIT		3026503		True				
ANR	3026537	Symbol	reentrant_locks		3026503						
ANR	3026538	Symbol	* reentrant_locks		3026503						
ANR	3026539	Symbol	NUMBER_OF_LOCKS		3026503						
ANR	3026540	Symbol	* i		3026503						
ANR	3026541	Symbol	i		3026503						
ANR	3026542	Symbol	tsrm_mutex_alloc		3026503						
ANR	3026543	Function	reentrancy_shutdown	263:0:5125:5250							
ANR	3026544	FunctionDef	reentrancy_shutdown ()		3026543	0					
ANR	3026545	CompoundStatement		264:0:5156:5250	3026543	0					
ANR	3026546	IdentifierDeclStatement	int i ;	265:1:5159:5164	3026543	0	True				
ANR	3026547	IdentifierDecl	i		3026543	0					
ANR	3026548	IdentifierDeclType	int		3026543	0					
ANR	3026549	Identifier	i		3026543	1					
ANR	3026550	ForStatement	for ( i = 0 ; i < NUMBER_OF_LOCKS ; i ++ )		3026543	1					
ANR	3026551	ForInit	i = 0 ;	267:6:5173:5178	3026543	0	True				
ANR	3026552	AssignmentExpression	i = 0		3026543	0		=			
ANR	3026553	Identifier	i		3026543	0					
ANR	3026554	PrimaryExpression	0		3026543	1					
ANR	3026555	Condition	i < NUMBER_OF_LOCKS	267:13:5180:5198	3026543	1	True				
ANR	3026556	RelationalExpression	i < NUMBER_OF_LOCKS		3026543	0		<			
ANR	3026557	Identifier	i		3026543	0					
ANR	3026558	Identifier	NUMBER_OF_LOCKS		3026543	1					
ANR	3026559	PostIncDecOperationExpression	i ++	267:34:5201:5203	3026543	2	True				
ANR	3026560	Identifier	i		3026543	0					
ANR	3026561	IncDec	++		3026543	1					
ANR	3026562	CompoundStatement		4:39:49:49	3026543	3					
ANR	3026563	ExpressionStatement	tsrm_mutex_free ( reentrant_locks [ i ] )	268:2:5210:5245	3026543	0	True				
ANR	3026564	CallExpression	tsrm_mutex_free ( reentrant_locks [ i ] )		3026543	0					
ANR	3026565	Callee	tsrm_mutex_free		3026543	0					
ANR	3026566	Identifier	tsrm_mutex_free		3026543	0					
ANR	3026567	ArgumentList	reentrant_locks [ i ]		3026543	1					
ANR	3026568	Argument	reentrant_locks [ i ]		3026543	0					
ANR	3026569	ArrayIndexing	reentrant_locks [ i ]		3026543	0					
ANR	3026570	Identifier	reentrant_locks		3026543	0					
ANR	3026571	Identifier	i		3026543	1					
ANR	3026572	ReturnType	void		3026543	1					
ANR	3026573	Identifier	reentrancy_shutdown		3026543	2					
ANR	3026574	ParameterList			3026543	3					
ANR	3026575	CFGEntryNode	ENTRY		3026543		True				
ANR	3026576	CFGExitNode	EXIT		3026543		True				
ANR	3026577	Symbol	reentrant_locks		3026543						
ANR	3026578	Symbol	* reentrant_locks		3026543						
ANR	3026579	Symbol	NUMBER_OF_LOCKS		3026543						
ANR	3026580	Symbol	* i		3026543						
ANR	3026581	Symbol	i		3026543						
ANR	3026582	Function	do_rand	314:0:7236:7352							
ANR	3026583	FunctionDef	do_rand (unsigned long * ctx)		3026582	0					
ANR	3026584	CompoundStatement		316:0:7275:7352	3026582	0					
ANR	3026585	ReturnStatement	return ( ( * ctx = * ctx * 1103515245 + 12345 ) % ( ( u_long ) PHP_RAND_MAX + 1 ) ) ;	317:1:7278:7350	3026582	0	True				
ANR	3026586	MultiplicativeExpression	( * ctx = * ctx * 1103515245 + 12345 ) % ( ( u_long ) PHP_RAND_MAX + 1 )		3026582	0		%			
ANR	3026587	AssignmentExpression	* ctx = * ctx * 1103515245 + 12345		3026582	0		=			
ANR	3026588	UnaryOperationExpression	* ctx		3026582	0					
ANR	3026589	UnaryOperator	*		3026582	0					
ANR	3026590	Identifier	ctx		3026582	1					
ANR	3026591	AdditiveExpression	* ctx * 1103515245 + 12345		3026582	1		+			
ANR	3026592	MultiplicativeExpression	* ctx * 1103515245		3026582	0		*			
ANR	3026593	UnaryOperationExpression	* ctx		3026582	0					
ANR	3026594	UnaryOperator	*		3026582	0					
ANR	3026595	Identifier	ctx		3026582	1					
ANR	3026596	PrimaryExpression	1103515245		3026582	1					
ANR	3026597	PrimaryExpression	12345		3026582	1					
ANR	3026598	AdditiveExpression	( u_long ) PHP_RAND_MAX + 1		3026582	1		+			
ANR	3026599	CastExpression	( u_long ) PHP_RAND_MAX		3026582	0					
ANR	3026600	CastTarget	u_long		3026582	0					
ANR	3026601	Identifier	PHP_RAND_MAX		3026582	1					
ANR	3026602	PrimaryExpression	1		3026582	1					
ANR	3026603	ReturnType	static int		3026582	1					
ANR	3026604	Identifier	do_rand		3026582	2					
ANR	3026605	ParameterList	unsigned long * ctx		3026582	3					
ANR	3026606	Parameter	unsigned long * ctx	315:8:7255:7272	3026582	0	True				
ANR	3026607	ParameterType	unsigned long *		3026582	0					
ANR	3026608	Identifier	ctx		3026582	1					
ANR	3026609	CFGEntryNode	ENTRY		3026582		True				
ANR	3026610	CFGExitNode	EXIT		3026582		True				
ANR	3026611	Symbol	ctx		3026582						
ANR	3026612	Symbol	PHP_RAND_MAX		3026582						
ANR	3026613	Symbol	* ctx		3026582						
ANR	3026614	Function	php_rand_r	321:0:7356:7471							
ANR	3026615	FunctionDef	php_rand_r (unsigned int * ctx)		3026614	0					
ANR	3026616	CompoundStatement		323:0:7397:7471	3026614	0					
ANR	3026617	IdentifierDeclStatement	u_long val = ( u_long ) * ctx ;	324:1:7400:7426	3026614	0	True				
ANR	3026618	IdentifierDecl	val = ( u_long ) * ctx		3026614	0					
ANR	3026619	IdentifierDeclType	u_long		3026614	0					
ANR	3026620	Identifier	val		3026614	1					
ANR	3026621	AssignmentExpression	val = ( u_long ) * ctx		3026614	2		=			
ANR	3026622	Identifier	val		3026614	0					
ANR	3026623	CastExpression	( u_long ) * ctx		3026614	1					
ANR	3026624	CastTarget	u_long		3026614	0					
ANR	3026625	UnaryOperationExpression	* ctx		3026614	1					
ANR	3026626	UnaryOperator	*		3026614	0					
ANR	3026627	Identifier	ctx		3026614	1					
ANR	3026628	ExpressionStatement	* ctx = do_rand ( & val )	325:1:7429:7449	3026614	1	True				
ANR	3026629	AssignmentExpression	* ctx = do_rand ( & val )		3026614	0		=			
ANR	3026630	UnaryOperationExpression	* ctx		3026614	0					
ANR	3026631	UnaryOperator	*		3026614	0					
ANR	3026632	Identifier	ctx		3026614	1					
ANR	3026633	CallExpression	do_rand ( & val )		3026614	1					
ANR	3026634	Callee	do_rand		3026614	0					
ANR	3026635	Identifier	do_rand		3026614	0					
ANR	3026636	ArgumentList	& val		3026614	1					
ANR	3026637	Argument	& val		3026614	0					
ANR	3026638	UnaryOperationExpression	& val		3026614	0					
ANR	3026639	UnaryOperator	&		3026614	0					
ANR	3026640	Identifier	val		3026614	1					
ANR	3026641	ReturnStatement	return ( int ) * ctx ;	326:1:7452:7469	3026614	2	True				
ANR	3026642	CastExpression	( int ) * ctx		3026614	0					
ANR	3026643	CastTarget	int		3026614	0					
ANR	3026644	UnaryOperationExpression	* ctx		3026614	1					
ANR	3026645	UnaryOperator	*		3026614	0					
ANR	3026646	Identifier	ctx		3026614	1					
ANR	3026647	ReturnType	PHPAPI int		3026614	1					
ANR	3026648	Identifier	php_rand_r		3026614	2					
ANR	3026649	ParameterList	unsigned int * ctx		3026614	3					
ANR	3026650	Parameter	unsigned int * ctx	322:11:7378:7394	3026614	0	True				
ANR	3026651	ParameterType	unsigned int *		3026614	0					
ANR	3026652	Identifier	ctx		3026614	1					
ANR	3026653	CFGEntryNode	ENTRY		3026614		True				
ANR	3026654	CFGExitNode	EXIT		3026614		True				
ANR	3026655	Symbol	val		3026614						
ANR	3026656	Symbol	& val		3026614						
ANR	3026657	Symbol	do_rand		3026614						
ANR	3026658	Symbol	ctx		3026614						
ANR	3026659	Symbol	* ctx		3026614						
ANR	3026660	Function	php_strtok_r	379:0:9572:10515							
ANR	3026661	FunctionDef	"php_strtok_r (char * s , const char * delim , char * * last)"		3026660	0					
ANR	3026662	CompoundStatement		381:0:9640:10515	3026660	0					
ANR	3026663	IdentifierDeclStatement	char * spanp ;	382:4:9646:9657	3026660	0	True				
ANR	3026664	IdentifierDecl	* spanp		3026660	0					
ANR	3026665	IdentifierDeclType	char *		3026660	0					
ANR	3026666	Identifier	spanp		3026660	1					
ANR	3026667	IdentifierDeclStatement	"int c , sc ;"	383:4:9663:9672	3026660	1	True				
ANR	3026668	IdentifierDecl	c		3026660	0					
ANR	3026669	IdentifierDeclType	int		3026660	0					
ANR	3026670	Identifier	c		3026660	1					
ANR	3026671	IdentifierDecl	sc		3026660	1					
ANR	3026672	IdentifierDeclType	int		3026660	0					
ANR	3026673	Identifier	sc		3026660	1					
ANR	3026674	IdentifierDeclStatement	char * tok ;	384:4:9678:9687	3026660	2	True				
ANR	3026675	IdentifierDecl	* tok		3026660	0					
ANR	3026676	IdentifierDeclType	char *		3026660	0					
ANR	3026677	Identifier	tok		3026660	1					
ANR	3026678	IfStatement	if ( s == NULL && ( s = * last ) == NULL )		3026660	3					
ANR	3026679	Condition	s == NULL && ( s = * last ) == NULL	386:8:9698:9729	3026660	0	True				
ANR	3026680	AndExpression	s == NULL && ( s = * last ) == NULL		3026660	0		&&			
ANR	3026681	EqualityExpression	s == NULL		3026660	0		==			
ANR	3026682	Identifier	s		3026660	0					
ANR	3026683	Identifier	NULL		3026660	1					
ANR	3026684	EqualityExpression	( s = * last ) == NULL		3026660	1		==			
ANR	3026685	AssignmentExpression	s = * last		3026660	0		=			
ANR	3026686	Identifier	s		3026660	0					
ANR	3026687	UnaryOperationExpression	* last		3026660	1					
ANR	3026688	UnaryOperator	*		3026660	0					
ANR	3026689	Identifier	last		3026660	1					
ANR	3026690	Identifier	NULL		3026660	1					
ANR	3026691	CompoundStatement		7:4:95:95	3026660	1					
ANR	3026692	ReturnStatement	return NULL ;	388:1:9739:9750	3026660	0	True				
ANR	3026693	Identifier	NULL		3026660	0					
ANR	3026694	Label	cont :	394:0:9846:9850	3026660	4	True				
ANR	3026695	Identifier	cont		3026660	0					
ANR	3026696	ExpressionStatement	c = * s ++	395:4:9856:9864	3026660	5	True				
ANR	3026697	AssignmentExpression	c = * s ++		3026660	0		=			
ANR	3026698	Identifier	c		3026660	0					
ANR	3026699	UnaryOperationExpression	* s ++		3026660	1					
ANR	3026700	UnaryOperator	*		3026660	0					
ANR	3026701	PostIncDecOperationExpression	s ++		3026660	1					
ANR	3026702	Identifier	s		3026660	0					
ANR	3026703	IncDec	++		3026660	1					
ANR	3026704	ForStatement	for ( spanp = ( char * ) delim ; ( sc = * spanp ++ ) != 0 ; )		3026660	6					
ANR	3026705	ForInit	spanp = ( char * ) delim ;	396:9:9875:9896	3026660	0	True				
ANR	3026706	AssignmentExpression	spanp = ( char * ) delim		3026660	0		=			
ANR	3026707	Identifier	spanp		3026660	0					
ANR	3026708	CastExpression	( char * ) delim		3026660	1					
ANR	3026709	CastTarget	char *		3026660	0					
ANR	3026710	Identifier	delim		3026660	1					
ANR	3026711	Condition	( sc = * spanp ++ ) != 0	396:32:9898:9917	3026660	1	True				
ANR	3026712	EqualityExpression	( sc = * spanp ++ ) != 0		3026660	0		!=			
ANR	3026713	AssignmentExpression	sc = * spanp ++		3026660	0		=			
ANR	3026714	Identifier	sc		3026660	0					
ANR	3026715	UnaryOperationExpression	* spanp ++		3026660	1					
ANR	3026716	UnaryOperator	*		3026660	0					
ANR	3026717	PostIncDecOperationExpression	spanp ++		3026660	1					
ANR	3026718	Identifier	spanp		3026660	0					
ANR	3026719	IncDec	++		3026660	1					
ANR	3026720	PrimaryExpression	0		3026660	1					
ANR	3026721	CompoundStatement		17:4:285:285	3026660	2					
ANR	3026722	IfStatement	if ( c == sc )		3026660	0					
ANR	3026723	Condition	c == sc	398:5:9933:9939	3026660	0	True				
ANR	3026724	EqualityExpression	c == sc		3026660	0		==			
ANR	3026725	Identifier	c		3026660	0					
ANR	3026726	Identifier	sc		3026660	1					
ANR	3026727	CompoundStatement		19:1:302:302	3026660	1					
ANR	3026728	GotoStatement	goto cont ;	400:5:9950:9959	3026660	0	True				
ANR	3026729	Identifier	cont		3026660	0					
ANR	3026730	IfStatement	if ( c == 0 )		3026660	7					
ANR	3026731	Condition	c == 0	404:8:9979:9984	3026660	0	True				
ANR	3026732	EqualityExpression	c == 0		3026660	0		==			
ANR	3026733	Identifier	c		3026660	0					
ANR	3026734	PrimaryExpression	0		3026660	1					
ANR	3026735	CompoundStatement		25:4:385:385	3026660	1					
ANR	3026736	ExpressionStatement	* last = NULL	406:1:10029:10041	3026660	0	True				
ANR	3026737	AssignmentExpression	* last = NULL		3026660	0		=			
ANR	3026738	UnaryOperationExpression	* last		3026660	0					
ANR	3026739	UnaryOperator	*		3026660	0					
ANR	3026740	Identifier	last		3026660	1					
ANR	3026741	Identifier	NULL		3026660	1					
ANR	3026742	ReturnStatement	return NULL ;	407:1:10044:10055	3026660	1	True				
ANR	3026743	Identifier	NULL		3026660	0					
ANR	3026744	ExpressionStatement	tok = s - 1	409:4:10067:10078	3026660	8	True				
ANR	3026745	AssignmentExpression	tok = s - 1		3026660	0		=			
ANR	3026746	Identifier	tok		3026660	0					
ANR	3026747	AdditiveExpression	s - 1		3026660	1		-			
ANR	3026748	Identifier	s		3026660	0					
ANR	3026749	PrimaryExpression	1		3026660	1					
ANR	3026750	ForStatement	for ( ; ; )		3026660	9					
ANR	3026751	CompoundStatement		36:4:617:617	3026660	0					
ANR	3026752	ExpressionStatement	c = * s ++	417:1:10261:10269	3026660	0	True				
ANR	3026753	AssignmentExpression	c = * s ++		3026660	0		=			
ANR	3026754	Identifier	c		3026660	0					
ANR	3026755	UnaryOperationExpression	* s ++		3026660	1					
ANR	3026756	UnaryOperator	*		3026660	0					
ANR	3026757	PostIncDecOperationExpression	s ++		3026660	1					
ANR	3026758	Identifier	s		3026660	0					
ANR	3026759	IncDec	++		3026660	1					
ANR	3026760	ExpressionStatement	spanp = ( char * ) delim	418:1:10272:10293	3026660	1	True				
ANR	3026761	AssignmentExpression	spanp = ( char * ) delim		3026660	0		=			
ANR	3026762	Identifier	spanp		3026660	0					
ANR	3026763	CastExpression	( char * ) delim		3026660	1					
ANR	3026764	CastTarget	char *		3026660	0					
ANR	3026765	Identifier	delim		3026660	1					
ANR	3026766	DoStatement	do		3026660	2					
ANR	3026767	CompoundStatement		40:1:659:659	3026660	0					
ANR	3026768	IfStatement	if ( ( sc = * spanp ++ ) == c )		3026660	0					
ANR	3026769	Condition	( sc = * spanp ++ ) == c	421:9:10311:10330	3026660	0	True				
ANR	3026770	EqualityExpression	( sc = * spanp ++ ) == c		3026660	0		==			
ANR	3026771	AssignmentExpression	sc = * spanp ++		3026660	0		=			
ANR	3026772	Identifier	sc		3026660	0					
ANR	3026773	UnaryOperationExpression	* spanp ++		3026660	1					
ANR	3026774	UnaryOperator	*		3026660	0					
ANR	3026775	PostIncDecOperationExpression	spanp ++		3026660	1					
ANR	3026776	Identifier	spanp		3026660	0					
ANR	3026777	IncDec	++		3026660	1					
ANR	3026778	Identifier	c		3026660	1					
ANR	3026779	CompoundStatement		42:5:697:697	3026660	1					
ANR	3026780	IfStatement	if ( c == 0 )		3026660	0					
ANR	3026781	Condition	c == 0	423:6:10346:10351	3026660	0	True				
ANR	3026782	EqualityExpression	c == 0		3026660	0		==			
ANR	3026783	Identifier	c		3026660	0					
ANR	3026784	PrimaryExpression	0		3026660	1					
ANR	3026785	CompoundStatement		44:2:715:715	3026660	1					
ANR	3026786	ExpressionStatement	s = NULL	425:6:10364:10372	3026660	0	True				
ANR	3026787	AssignmentExpression	s = NULL		3026660	0		=			
ANR	3026788	Identifier	s		3026660	0					
ANR	3026789	Identifier	NULL		3026660	1					
ANR	3026790	ElseStatement	else		3026660	0					
ANR	3026791	CompoundStatement		49:6:754:769	3026660	0					
ANR	3026792	IdentifierDeclStatement	char * w = s - 1 ;	429:6:10395:10410	3026660	0	True				
ANR	3026793	IdentifierDecl	* w = s - 1		3026660	0					
ANR	3026794	IdentifierDeclType	char *		3026660	0					
ANR	3026795	Identifier	w		3026660	1					
ANR	3026796	AssignmentExpression	* w = s - 1		3026660	2		=			
ANR	3026797	Identifier	w		3026660	0					
ANR	3026798	AdditiveExpression	s - 1		3026660	1		-			
ANR	3026799	Identifier	s		3026660	0					
ANR	3026800	PrimaryExpression	1		3026660	1					
ANR	3026801	ExpressionStatement	* w = '\\0'	430:6:10418:10427	3026660	1	True				
ANR	3026802	AssignmentExpression	* w = '\\0'		3026660	0		=			
ANR	3026803	UnaryOperationExpression	* w		3026660	0					
ANR	3026804	UnaryOperator	*		3026660	0					
ANR	3026805	Identifier	w		3026660	1					
ANR	3026806	PrimaryExpression	'\\0'		3026660	1					
ANR	3026807	ExpressionStatement	* last = s	432:2:10435:10444	3026660	1	True				
ANR	3026808	AssignmentExpression	* last = s		3026660	0		=			
ANR	3026809	UnaryOperationExpression	* last		3026660	0					
ANR	3026810	UnaryOperator	*		3026660	0					
ANR	3026811	Identifier	last		3026660	1					
ANR	3026812	Identifier	s		3026660	1					
ANR	3026813	ReturnStatement	return tok ;	433:2:10448:10458	3026660	2	True				
ANR	3026814	Identifier	tok		3026660	0					
ANR	3026815	Condition	sc != 0	436:8:10478:10484	3026660	1	True				
ANR	3026816	EqualityExpression	sc != 0		3026660	0		!=			
ANR	3026817	Identifier	sc		3026660	0					
ANR	3026818	PrimaryExpression	0		3026660	1					
ANR	3026819	ReturnType	PHPAPI char *		3026660	1					
ANR	3026820	Identifier	php_strtok_r		3026660	2					
ANR	3026821	ParameterList	"char * s , const char * delim , char * * last"		3026660	3					
ANR	3026822	Parameter	char * s	380:13:9599:9605	3026660	0	True				
ANR	3026823	ParameterType	char *		3026660	0					
ANR	3026824	Identifier	s		3026660	1					
ANR	3026825	Parameter	const char * delim	380:22:9608:9624	3026660	1	True				
ANR	3026826	ParameterType	const char *		3026660	0					
ANR	3026827	Identifier	delim		3026660	1					
ANR	3026828	Parameter	char * * last	380:41:9627:9637	3026660	2	True				
ANR	3026829	ParameterType	char * *		3026660	0					
ANR	3026830	Identifier	last		3026660	1					
ANR	3026831	CFGEntryNode	ENTRY		3026660		True				
ANR	3026832	CFGExitNode	EXIT		3026660		True				
ANR	3026833	InfiniteForNode	true		3026660		True				
ANR	3026834	Symbol	* s ++		3026660						
ANR	3026835	Symbol	* w		3026660						
ANR	3026836	Symbol	c		3026660						
ANR	3026837	Symbol	NULL		3026660						
ANR	3026838	Symbol	last		3026660						
ANR	3026839	Symbol	* last		3026660						
ANR	3026840	Symbol	spanp		3026660						
ANR	3026841	Symbol	sc		3026660						
ANR	3026842	Symbol	tok		3026660						
ANR	3026843	Symbol	s		3026660						
ANR	3026844	Symbol	* spanp ++		3026660						
ANR	3026845	Symbol	w		3026660						
ANR	3026846	Symbol	delim		3026660						
