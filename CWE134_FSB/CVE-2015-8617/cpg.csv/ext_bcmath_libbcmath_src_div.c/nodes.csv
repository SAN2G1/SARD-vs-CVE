command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	497857	File	data/converged/CVE-2015-8617_php-src/ext_bcmath_libbcmath_src_div.c								
ANR	497858	DeclStmt									
ANR	497859	Decl							unsigned char	unsigned char *	num
ANR	497860	DeclStmt									
ANR	497861	Decl							int	int	size
ANR	497862	Decl							int	int	digit
ANR	497863	DeclStmt									
ANR	497864	Decl							unsigned char	unsigned char *	result
ANR	497865	DeclStmt									
ANR	497866	Decl							int	int	carry
ANR	497867	Decl							int	int	value
ANR	497868	DeclStmt									
ANR	497869	Decl							unsigned char	unsigned char *	nptr
ANR	497870	Decl							unsigned char	unsigned char *	rptr
ANR	497871	Function	bc_divide	87:0:2521:7108							
ANR	497872	FunctionDef	"bc_divide (bc_num n1 , bc_num n2 , bc_num * quot , int scale)"		497871	0					
ANR	497873	CompoundStatement		89:0:2583:7108	497871	0					
ANR	497874	IdentifierDeclStatement	bc_num qval ;	90:2:2587:2598	497871	0	True				
ANR	497875	IdentifierDecl	qval		497871	0					
ANR	497876	IdentifierDeclType	bc_num		497871	0					
ANR	497877	Identifier	qval		497871	1					
ANR	497878	IdentifierDeclStatement	"unsigned char * num1 , * num2 ;"	91:2:2602:2628	497871	1	True				
ANR	497879	IdentifierDecl	* num1		497871	0					
ANR	497880	IdentifierDeclType	unsigned char *		497871	0					
ANR	497881	Identifier	num1		497871	1					
ANR	497882	IdentifierDecl	* num2		497871	1					
ANR	497883	IdentifierDeclType	unsigned char *		497871	0					
ANR	497884	Identifier	num2		497871	1					
ANR	497885	IdentifierDeclStatement	"unsigned char * ptr1 , * ptr2 , * n2ptr , * qptr ;"	92:2:2632:2673	497871	2	True				
ANR	497886	IdentifierDecl	* ptr1		497871	0					
ANR	497887	IdentifierDeclType	unsigned char *		497871	0					
ANR	497888	Identifier	ptr1		497871	1					
ANR	497889	IdentifierDecl	* ptr2		497871	1					
ANR	497890	IdentifierDeclType	unsigned char *		497871	0					
ANR	497891	Identifier	ptr2		497871	1					
ANR	497892	IdentifierDecl	* n2ptr		497871	2					
ANR	497893	IdentifierDeclType	unsigned char *		497871	0					
ANR	497894	Identifier	n2ptr		497871	1					
ANR	497895	IdentifierDecl	* qptr		497871	3					
ANR	497896	IdentifierDeclType	unsigned char *		497871	0					
ANR	497897	Identifier	qptr		497871	1					
ANR	497898	IdentifierDeclStatement	"int scale1 , val ;"	93:2:2677:2693	497871	3	True				
ANR	497899	IdentifierDecl	scale1		497871	0					
ANR	497900	IdentifierDeclType	int		497871	0					
ANR	497901	Identifier	scale1		497871	1					
ANR	497902	IdentifierDecl	val		497871	1					
ANR	497903	IdentifierDeclType	int		497871	0					
ANR	497904	Identifier	val		497871	1					
ANR	497905	IdentifierDeclStatement	"unsigned int len1 , len2 , scale2 , qdigits , extra , count ;"	94:2:2697:2752	497871	4	True				
ANR	497906	IdentifierDecl	len1		497871	0					
ANR	497907	IdentifierDeclType	unsigned int		497871	0					
ANR	497908	Identifier	len1		497871	1					
ANR	497909	IdentifierDecl	len2		497871	1					
ANR	497910	IdentifierDeclType	unsigned int		497871	0					
ANR	497911	Identifier	len2		497871	1					
ANR	497912	IdentifierDecl	scale2		497871	2					
ANR	497913	IdentifierDeclType	unsigned int		497871	0					
ANR	497914	Identifier	scale2		497871	1					
ANR	497915	IdentifierDecl	qdigits		497871	3					
ANR	497916	IdentifierDeclType	unsigned int		497871	0					
ANR	497917	Identifier	qdigits		497871	1					
ANR	497918	IdentifierDecl	extra		497871	4					
ANR	497919	IdentifierDeclType	unsigned int		497871	0					
ANR	497920	Identifier	extra		497871	1					
ANR	497921	IdentifierDecl	count		497871	5					
ANR	497922	IdentifierDeclType	unsigned int		497871	0					
ANR	497923	Identifier	count		497871	1					
ANR	497924	IdentifierDeclStatement	"unsigned int qdig , qguess , borrow , carry ;"	95:2:2756:2797	497871	5	True				
ANR	497925	IdentifierDecl	qdig		497871	0					
ANR	497926	IdentifierDeclType	unsigned int		497871	0					
ANR	497927	Identifier	qdig		497871	1					
ANR	497928	IdentifierDecl	qguess		497871	1					
ANR	497929	IdentifierDeclType	unsigned int		497871	0					
ANR	497930	Identifier	qguess		497871	1					
ANR	497931	IdentifierDecl	borrow		497871	2					
ANR	497932	IdentifierDeclType	unsigned int		497871	0					
ANR	497933	Identifier	borrow		497871	1					
ANR	497934	IdentifierDecl	carry		497871	3					
ANR	497935	IdentifierDeclType	unsigned int		497871	0					
ANR	497936	Identifier	carry		497871	1					
ANR	497937	IdentifierDeclStatement	unsigned char * mval ;	96:2:2801:2820	497871	6	True				
ANR	497938	IdentifierDecl	* mval		497871	0					
ANR	497939	IdentifierDeclType	unsigned char *		497871	0					
ANR	497940	Identifier	mval		497871	1					
ANR	497941	IdentifierDeclStatement	char zero ;	97:2:2824:2833	497871	7	True				
ANR	497942	IdentifierDecl	zero		497871	0					
ANR	497943	IdentifierDeclType	char		497871	0					
ANR	497944	Identifier	zero		497871	1					
ANR	497945	IdentifierDeclStatement	unsigned int norm ;	98:2:2837:2855	497871	8	True				
ANR	497946	IdentifierDecl	norm		497871	0					
ANR	497947	IdentifierDeclType	unsigned int		497871	0					
ANR	497948	Identifier	norm		497871	1					
ANR	497949	IfStatement	if ( bc_is_zero ( n2 ) )		497871	9					
ANR	497950	Condition	bc_is_zero ( n2 )	101:6:2897:2911	497871	0	True				
ANR	497951	CallExpression	bc_is_zero ( n2 )		497871	0					
ANR	497952	Callee	bc_is_zero		497871	0					
ANR	497953	Identifier	bc_is_zero		497871	0					
ANR	497954	ArgumentList	n2		497871	1					
ANR	497955	Argument	n2		497871	0					
ANR	497956	Identifier	n2		497871	0					
ANR	497957	ReturnStatement	return - 1 ;	101:23:2914:2923	497871	1	True				
ANR	497958	UnaryOperationExpression	- 1		497871	0					
ANR	497959	UnaryOperator	-		497871	0					
ANR	497960	PrimaryExpression	1		497871	1					
ANR	497961	IfStatement	if ( n2 -> n_scale == 0 )		497871	10					
ANR	497962	Condition	n2 -> n_scale == 0	104:6:2990:3005	497871	0	True				
ANR	497963	EqualityExpression	n2 -> n_scale == 0		497871	0		==			
ANR	497964	PtrMemberAccess	n2 -> n_scale		497871	0					
ANR	497965	Identifier	n2		497871	0					
ANR	497966	Identifier	n_scale		497871	1					
ANR	497967	PrimaryExpression	0		497871	1					
ANR	497968	CompoundStatement		17:4:428:428	497871	1					
ANR	497969	IfStatement	if ( n2 -> n_len == 1 && * n2 -> n_value == 1 )		497871	0					
ANR	497970	Condition	n2 -> n_len == 1 && * n2 -> n_value == 1	106:10:3024:3058	497871	0	True				
ANR	497971	AndExpression	n2 -> n_len == 1 && * n2 -> n_value == 1		497871	0		&&			
ANR	497972	EqualityExpression	n2 -> n_len == 1		497871	0		==			
ANR	497973	PtrMemberAccess	n2 -> n_len		497871	0					
ANR	497974	Identifier	n2		497871	0					
ANR	497975	Identifier	n_len		497871	1					
ANR	497976	PrimaryExpression	1		497871	1					
ANR	497977	EqualityExpression	* n2 -> n_value == 1		497871	1		==			
ANR	497978	UnaryOperationExpression	* n2 -> n_value		497871	0					
ANR	497979	UnaryOperator	*		497871	0					
ANR	497980	PtrMemberAccess	n2 -> n_value		497871	1					
ANR	497981	Identifier	n2		497871	0					
ANR	497982	Identifier	n_value		497871	1					
ANR	497983	PrimaryExpression	1		497871	1					
ANR	497984	CompoundStatement		19:1:478:478	497871	1					
ANR	497985	ExpressionStatement	"qval = bc_new_num ( n1 -> n_len , scale )"	108:3:3067:3103	497871	0	True				
ANR	497986	AssignmentExpression	"qval = bc_new_num ( n1 -> n_len , scale )"		497871	0		=			
ANR	497987	Identifier	qval		497871	0					
ANR	497988	CallExpression	"bc_new_num ( n1 -> n_len , scale )"		497871	1					
ANR	497989	Callee	bc_new_num		497871	0					
ANR	497990	Identifier	bc_new_num		497871	0					
ANR	497991	ArgumentList	n1 -> n_len		497871	1					
ANR	497992	Argument	n1 -> n_len		497871	0					
ANR	497993	PtrMemberAccess	n1 -> n_len		497871	0					
ANR	497994	Identifier	n1		497871	0					
ANR	497995	Identifier	n_len		497871	1					
ANR	497996	Argument	scale		497871	1					
ANR	497997	Identifier	scale		497871	0					
ANR	497998	ExpressionStatement	qval -> n_sign = ( n1 -> n_sign == n2 -> n_sign ? PLUS : MINUS )	109:3:3108:3164	497871	1	True				
ANR	497999	AssignmentExpression	qval -> n_sign = ( n1 -> n_sign == n2 -> n_sign ? PLUS : MINUS )		497871	0		=			
ANR	498000	PtrMemberAccess	qval -> n_sign		497871	0					
ANR	498001	Identifier	qval		497871	0					
ANR	498002	Identifier	n_sign		497871	1					
ANR	498003	ConditionalExpression	n1 -> n_sign == n2 -> n_sign ? PLUS : MINUS		497871	1					
ANR	498004	Condition	n1 -> n_sign == n2 -> n_sign		497871	0					
ANR	498005	EqualityExpression	n1 -> n_sign == n2 -> n_sign		497871	0		==			
ANR	498006	PtrMemberAccess	n1 -> n_sign		497871	0					
ANR	498007	Identifier	n1		497871	0					
ANR	498008	Identifier	n_sign		497871	1					
ANR	498009	PtrMemberAccess	n2 -> n_sign		497871	1					
ANR	498010	Identifier	n2		497871	0					
ANR	498011	Identifier	n_sign		497871	1					
ANR	498012	Identifier	PLUS		497871	1					
ANR	498013	Identifier	MINUS		497871	2					
ANR	498014	ExpressionStatement	"memset ( & qval -> n_value [ n1 -> n_len ] , 0 , scale )"	110:3:3169:3211	497871	2	True				
ANR	498015	CallExpression	"memset ( & qval -> n_value [ n1 -> n_len ] , 0 , scale )"		497871	0					
ANR	498016	Callee	memset		497871	0					
ANR	498017	Identifier	memset		497871	0					
ANR	498018	ArgumentList	& qval -> n_value [ n1 -> n_len ]		497871	1					
ANR	498019	Argument	& qval -> n_value [ n1 -> n_len ]		497871	0					
ANR	498020	UnaryOperationExpression	& qval -> n_value [ n1 -> n_len ]		497871	0					
ANR	498021	UnaryOperator	&		497871	0					
ANR	498022	ArrayIndexing	qval -> n_value [ n1 -> n_len ]		497871	1					
ANR	498023	PtrMemberAccess	qval -> n_value		497871	0					
ANR	498024	Identifier	qval		497871	0					
ANR	498025	Identifier	n_value		497871	1					
ANR	498026	PtrMemberAccess	n1 -> n_len		497871	1					
ANR	498027	Identifier	n1		497871	0					
ANR	498028	Identifier	n_len		497871	1					
ANR	498029	Argument	0		497871	1					
ANR	498030	PrimaryExpression	0		497871	0					
ANR	498031	Argument	scale		497871	2					
ANR	498032	Identifier	scale		497871	0					
ANR	498033	ExpressionStatement	"memcpy ( qval -> n_value , n1 -> n_value , n1 -> n_len + MIN ( n1 -> n_scale , scale ) )"	111:3:3216:3291	497871	3	True				
ANR	498034	CallExpression	"memcpy ( qval -> n_value , n1 -> n_value , n1 -> n_len + MIN ( n1 -> n_scale , scale ) )"		497871	0					
ANR	498035	Callee	memcpy		497871	0					
ANR	498036	Identifier	memcpy		497871	0					
ANR	498037	ArgumentList	qval -> n_value		497871	1					
ANR	498038	Argument	qval -> n_value		497871	0					
ANR	498039	PtrMemberAccess	qval -> n_value		497871	0					
ANR	498040	Identifier	qval		497871	0					
ANR	498041	Identifier	n_value		497871	1					
ANR	498042	Argument	n1 -> n_value		497871	1					
ANR	498043	PtrMemberAccess	n1 -> n_value		497871	0					
ANR	498044	Identifier	n1		497871	0					
ANR	498045	Identifier	n_value		497871	1					
ANR	498046	Argument	"n1 -> n_len + MIN ( n1 -> n_scale , scale )"		497871	2					
ANR	498047	AdditiveExpression	"n1 -> n_len + MIN ( n1 -> n_scale , scale )"		497871	0		+			
ANR	498048	PtrMemberAccess	n1 -> n_len		497871	0					
ANR	498049	Identifier	n1		497871	0					
ANR	498050	Identifier	n_len		497871	1					
ANR	498051	CallExpression	"MIN ( n1 -> n_scale , scale )"		497871	1					
ANR	498052	Callee	MIN		497871	0					
ANR	498053	Identifier	MIN		497871	0					
ANR	498054	ArgumentList	n1 -> n_scale		497871	1					
ANR	498055	Argument	n1 -> n_scale		497871	0					
ANR	498056	PtrMemberAccess	n1 -> n_scale		497871	0					
ANR	498057	Identifier	n1		497871	0					
ANR	498058	Identifier	n_scale		497871	1					
ANR	498059	Argument	scale		497871	1					
ANR	498060	Identifier	scale		497871	0					
ANR	498061	ExpressionStatement	bc_free_num ( quot )	113:3:3296:3314	497871	4	True				
ANR	498062	CallExpression	bc_free_num ( quot )		497871	0					
ANR	498063	Callee	bc_free_num		497871	0					
ANR	498064	Identifier	bc_free_num		497871	0					
ANR	498065	ArgumentList	quot		497871	1					
ANR	498066	Argument	quot		497871	0					
ANR	498067	Identifier	quot		497871	0					
ANR	498068	ExpressionStatement	* quot = qval	114:3:3319:3331	497871	5	True				
ANR	498069	AssignmentExpression	* quot = qval		497871	0		=			
ANR	498070	UnaryOperationExpression	* quot		497871	0					
ANR	498071	UnaryOperator	*		497871	0					
ANR	498072	Identifier	quot		497871	1					
ANR	498073	Identifier	qval		497871	1					
ANR	498074	ExpressionStatement	scale2 = n2 -> n_scale	120:2:3489:3509	497871	11	True				
ANR	498075	AssignmentExpression	scale2 = n2 -> n_scale		497871	0		=			
ANR	498076	Identifier	scale2		497871	0					
ANR	498077	PtrMemberAccess	n2 -> n_scale		497871	1					
ANR	498078	Identifier	n2		497871	0					
ANR	498079	Identifier	n_scale		497871	1					
ANR	498080	ExpressionStatement	n2ptr = ( unsigned char * ) n2 -> n_value + n2 -> n_len + scale2 - 1	121:2:3513:3569	497871	12	True				
ANR	498081	AssignmentExpression	n2ptr = ( unsigned char * ) n2 -> n_value + n2 -> n_len + scale2 - 1		497871	0		=			
ANR	498082	Identifier	n2ptr		497871	0					
ANR	498083	AdditiveExpression	( unsigned char * ) n2 -> n_value + n2 -> n_len + scale2 - 1		497871	1		+			
ANR	498084	CastExpression	( unsigned char * ) n2 -> n_value		497871	0					
ANR	498085	CastTarget	unsigned char *		497871	0					
ANR	498086	PtrMemberAccess	n2 -> n_value		497871	1					
ANR	498087	Identifier	n2		497871	0					
ANR	498088	Identifier	n_value		497871	1					
ANR	498089	AdditiveExpression	n2 -> n_len + scale2 - 1		497871	1		+			
ANR	498090	PtrMemberAccess	n2 -> n_len		497871	0					
ANR	498091	Identifier	n2		497871	0					
ANR	498092	Identifier	n_len		497871	1					
ANR	498093	AdditiveExpression	scale2 - 1		497871	1		-			
ANR	498094	Identifier	scale2		497871	0					
ANR	498095	PrimaryExpression	1		497871	1					
ANR	498096	WhileStatement	while ( ( scale2 > 0 ) && ( * n2ptr -- == 0 ) )		497871	13					
ANR	498097	Condition	( scale2 > 0 ) && ( * n2ptr -- == 0 )	122:9:3580:3610	497871	0	True				
ANR	498098	AndExpression	( scale2 > 0 ) && ( * n2ptr -- == 0 )		497871	0		&&			
ANR	498099	RelationalExpression	scale2 > 0		497871	0		>			
ANR	498100	Identifier	scale2		497871	0					
ANR	498101	PrimaryExpression	0		497871	1					
ANR	498102	EqualityExpression	* n2ptr -- == 0		497871	1		==			
ANR	498103	UnaryOperationExpression	* n2ptr --		497871	0					
ANR	498104	UnaryOperator	*		497871	0					
ANR	498105	PostIncDecOperationExpression	n2ptr --		497871	1					
ANR	498106	Identifier	n2ptr		497871	0					
ANR	498107	IncDec	--		497871	1					
ANR	498108	PrimaryExpression	0		497871	1					
ANR	498109	ExpressionStatement	scale2 --	122:42:3613:3621	497871	1	True				
ANR	498110	PostIncDecOperationExpression	scale2 --		497871	0					
ANR	498111	Identifier	scale2		497871	0					
ANR	498112	IncDec	--		497871	1					
ANR	498113	ExpressionStatement	len1 = n1 -> n_len + scale2	124:2:3626:3651	497871	14	True				
ANR	498114	AssignmentExpression	len1 = n1 -> n_len + scale2		497871	0		=			
ANR	498115	Identifier	len1		497871	0					
ANR	498116	AdditiveExpression	n1 -> n_len + scale2		497871	1		+			
ANR	498117	PtrMemberAccess	n1 -> n_len		497871	0					
ANR	498118	Identifier	n1		497871	0					
ANR	498119	Identifier	n_len		497871	1					
ANR	498120	Identifier	scale2		497871	1					
ANR	498121	ExpressionStatement	scale1 = n1 -> n_scale - scale2	125:2:3655:3684	497871	15	True				
ANR	498122	AssignmentExpression	scale1 = n1 -> n_scale - scale2		497871	0		=			
ANR	498123	Identifier	scale1		497871	0					
ANR	498124	AdditiveExpression	n1 -> n_scale - scale2		497871	1		-			
ANR	498125	PtrMemberAccess	n1 -> n_scale		497871	0					
ANR	498126	Identifier	n1		497871	0					
ANR	498127	Identifier	n_scale		497871	1					
ANR	498128	Identifier	scale2		497871	1					
ANR	498129	IfStatement	if ( scale1 < scale )		497871	16					
ANR	498130	Condition	scale1 < scale	126:6:3692:3705	497871	0	True				
ANR	498131	RelationalExpression	scale1 < scale		497871	0		<			
ANR	498132	Identifier	scale1		497871	0					
ANR	498133	Identifier	scale		497871	1					
ANR	498134	ExpressionStatement	extra = scale - scale1	127:4:3712:3734	497871	1	True				
ANR	498135	AssignmentExpression	extra = scale - scale1		497871	0		=			
ANR	498136	Identifier	extra		497871	0					
ANR	498137	AdditiveExpression	scale - scale1		497871	1		-			
ANR	498138	Identifier	scale		497871	0					
ANR	498139	Identifier	scale1		497871	1					
ANR	498140	ElseStatement	else		497871	0					
ANR	498141	ExpressionStatement	extra = 0	129:4:3747:3756	497871	0	True				
ANR	498142	AssignmentExpression	extra = 0		497871	0		=			
ANR	498143	Identifier	extra		497871	0					
ANR	498144	PrimaryExpression	0		497871	1					
ANR	498145	ExpressionStatement	"num1 = ( unsigned char * ) safe_emalloc ( 1 , n1 -> n_len + n1 -> n_scale , extra + 2 )"	130:2:3760:3833	497871	17	True				
ANR	498146	AssignmentExpression	"num1 = ( unsigned char * ) safe_emalloc ( 1 , n1 -> n_len + n1 -> n_scale , extra + 2 )"		497871	0		=			
ANR	498147	Identifier	num1		497871	0					
ANR	498148	CastExpression	"( unsigned char * ) safe_emalloc ( 1 , n1 -> n_len + n1 -> n_scale , extra + 2 )"		497871	1					
ANR	498149	CastTarget	unsigned char *		497871	0					
ANR	498150	CallExpression	"safe_emalloc ( 1 , n1 -> n_len + n1 -> n_scale , extra + 2 )"		497871	1					
ANR	498151	Callee	safe_emalloc		497871	0					
ANR	498152	Identifier	safe_emalloc		497871	0					
ANR	498153	ArgumentList	1		497871	1					
ANR	498154	Argument	1		497871	0					
ANR	498155	PrimaryExpression	1		497871	0					
ANR	498156	Argument	n1 -> n_len + n1 -> n_scale		497871	1					
ANR	498157	AdditiveExpression	n1 -> n_len + n1 -> n_scale		497871	0		+			
ANR	498158	PtrMemberAccess	n1 -> n_len		497871	0					
ANR	498159	Identifier	n1		497871	0					
ANR	498160	Identifier	n_len		497871	1					
ANR	498161	PtrMemberAccess	n1 -> n_scale		497871	1					
ANR	498162	Identifier	n1		497871	0					
ANR	498163	Identifier	n_scale		497871	1					
ANR	498164	Argument	extra + 2		497871	2					
ANR	498165	AdditiveExpression	extra + 2		497871	0		+			
ANR	498166	Identifier	extra		497871	0					
ANR	498167	PrimaryExpression	2		497871	1					
ANR	498168	IfStatement	if ( num1 == NULL )		497871	18					
ANR	498169	Condition	num1 == NULL	131:6:3841:3852	497871	0	True				
ANR	498170	EqualityExpression	num1 == NULL		497871	0		==			
ANR	498171	Identifier	num1		497871	0					
ANR	498172	Identifier	NULL		497871	1					
ANR	498173	ExpressionStatement	bc_out_of_memory ( )	131:20:3855:3873	497871	1	True				
ANR	498174	CallExpression	bc_out_of_memory ( )		497871	0					
ANR	498175	Callee	bc_out_of_memory		497871	0					
ANR	498176	Identifier	bc_out_of_memory		497871	0					
ANR	498177	ArgumentList			497871	1					
ANR	498178	ExpressionStatement	"memset ( num1 , 0 , n1 -> n_len + n1 -> n_scale + extra + 2 )"	132:2:3877:3924	497871	19	True				
ANR	498179	CallExpression	"memset ( num1 , 0 , n1 -> n_len + n1 -> n_scale + extra + 2 )"		497871	0					
ANR	498180	Callee	memset		497871	0					
ANR	498181	Identifier	memset		497871	0					
ANR	498182	ArgumentList	num1		497871	1					
ANR	498183	Argument	num1		497871	0					
ANR	498184	Identifier	num1		497871	0					
ANR	498185	Argument	0		497871	1					
ANR	498186	PrimaryExpression	0		497871	0					
ANR	498187	Argument	n1 -> n_len + n1 -> n_scale + extra + 2		497871	2					
ANR	498188	AdditiveExpression	n1 -> n_len + n1 -> n_scale + extra + 2		497871	0		+			
ANR	498189	PtrMemberAccess	n1 -> n_len		497871	0					
ANR	498190	Identifier	n1		497871	0					
ANR	498191	Identifier	n_len		497871	1					
ANR	498192	AdditiveExpression	n1 -> n_scale + extra + 2		497871	1		+			
ANR	498193	PtrMemberAccess	n1 -> n_scale		497871	0					
ANR	498194	Identifier	n1		497871	0					
ANR	498195	Identifier	n_scale		497871	1					
ANR	498196	AdditiveExpression	extra + 2		497871	1		+			
ANR	498197	Identifier	extra		497871	0					
ANR	498198	PrimaryExpression	2		497871	1					
ANR	498199	ExpressionStatement	"memcpy ( num1 + 1 , n1 -> n_value , n1 -> n_len + n1 -> n_scale )"	133:2:3928:3979	497871	20	True				
ANR	498200	CallExpression	"memcpy ( num1 + 1 , n1 -> n_value , n1 -> n_len + n1 -> n_scale )"		497871	0					
ANR	498201	Callee	memcpy		497871	0					
ANR	498202	Identifier	memcpy		497871	0					
ANR	498203	ArgumentList	num1 + 1		497871	1					
ANR	498204	Argument	num1 + 1		497871	0					
ANR	498205	AdditiveExpression	num1 + 1		497871	0		+			
ANR	498206	Identifier	num1		497871	0					
ANR	498207	PrimaryExpression	1		497871	1					
ANR	498208	Argument	n1 -> n_value		497871	1					
ANR	498209	PtrMemberAccess	n1 -> n_value		497871	0					
ANR	498210	Identifier	n1		497871	0					
ANR	498211	Identifier	n_value		497871	1					
ANR	498212	Argument	n1 -> n_len + n1 -> n_scale		497871	2					
ANR	498213	AdditiveExpression	n1 -> n_len + n1 -> n_scale		497871	0		+			
ANR	498214	PtrMemberAccess	n1 -> n_len		497871	0					
ANR	498215	Identifier	n1		497871	0					
ANR	498216	Identifier	n_len		497871	1					
ANR	498217	PtrMemberAccess	n1 -> n_scale		497871	1					
ANR	498218	Identifier	n1		497871	0					
ANR	498219	Identifier	n_scale		497871	1					
ANR	498220	ExpressionStatement	len2 = n2 -> n_len + scale2	135:2:3984:4009	497871	21	True				
ANR	498221	AssignmentExpression	len2 = n2 -> n_len + scale2		497871	0		=			
ANR	498222	Identifier	len2		497871	0					
ANR	498223	AdditiveExpression	n2 -> n_len + scale2		497871	1		+			
ANR	498224	PtrMemberAccess	n2 -> n_len		497871	0					
ANR	498225	Identifier	n2		497871	0					
ANR	498226	Identifier	n_len		497871	1					
ANR	498227	Identifier	scale2		497871	1					
ANR	498228	ExpressionStatement	"num2 = ( unsigned char * ) safe_emalloc ( 1 , len2 , 1 )"	136:2:4013:4063	497871	22	True				
ANR	498229	AssignmentExpression	"num2 = ( unsigned char * ) safe_emalloc ( 1 , len2 , 1 )"		497871	0		=			
ANR	498230	Identifier	num2		497871	0					
ANR	498231	CastExpression	"( unsigned char * ) safe_emalloc ( 1 , len2 , 1 )"		497871	1					
ANR	498232	CastTarget	unsigned char *		497871	0					
ANR	498233	CallExpression	"safe_emalloc ( 1 , len2 , 1 )"		497871	1					
ANR	498234	Callee	safe_emalloc		497871	0					
ANR	498235	Identifier	safe_emalloc		497871	0					
ANR	498236	ArgumentList	1		497871	1					
ANR	498237	Argument	1		497871	0					
ANR	498238	PrimaryExpression	1		497871	0					
ANR	498239	Argument	len2		497871	1					
ANR	498240	Identifier	len2		497871	0					
ANR	498241	Argument	1		497871	2					
ANR	498242	PrimaryExpression	1		497871	0					
ANR	498243	IfStatement	if ( num2 == NULL )		497871	23					
ANR	498244	Condition	num2 == NULL	137:6:4071:4082	497871	0	True				
ANR	498245	EqualityExpression	num2 == NULL		497871	0		==			
ANR	498246	Identifier	num2		497871	0					
ANR	498247	Identifier	NULL		497871	1					
ANR	498248	ExpressionStatement	bc_out_of_memory ( )	137:20:4085:4103	497871	1	True				
ANR	498249	CallExpression	bc_out_of_memory ( )		497871	0					
ANR	498250	Callee	bc_out_of_memory		497871	0					
ANR	498251	Identifier	bc_out_of_memory		497871	0					
ANR	498252	ArgumentList			497871	1					
ANR	498253	ExpressionStatement	"memcpy ( num2 , n2 -> n_value , len2 )"	138:2:4107:4139	497871	24	True				
ANR	498254	CallExpression	"memcpy ( num2 , n2 -> n_value , len2 )"		497871	0					
ANR	498255	Callee	memcpy		497871	0					
ANR	498256	Identifier	memcpy		497871	0					
ANR	498257	ArgumentList	num2		497871	1					
ANR	498258	Argument	num2		497871	0					
ANR	498259	Identifier	num2		497871	0					
ANR	498260	Argument	n2 -> n_value		497871	1					
ANR	498261	PtrMemberAccess	n2 -> n_value		497871	0					
ANR	498262	Identifier	n2		497871	0					
ANR	498263	Identifier	n_value		497871	1					
ANR	498264	Argument	len2		497871	2					
ANR	498265	Identifier	len2		497871	0					
ANR	498266	ExpressionStatement	* ( num2 + len2 ) = 0	139:2:4143:4159	497871	25	True				
ANR	498267	AssignmentExpression	* ( num2 + len2 ) = 0		497871	0		=			
ANR	498268	UnaryOperationExpression	* ( num2 + len2 )		497871	0					
ANR	498269	UnaryOperator	*		497871	0					
ANR	498270	AdditiveExpression	num2 + len2		497871	1		+			
ANR	498271	Identifier	num2		497871	0					
ANR	498272	Identifier	len2		497871	1					
ANR	498273	PrimaryExpression	0		497871	1					
ANR	498274	ExpressionStatement	n2ptr = num2	140:2:4163:4175	497871	26	True				
ANR	498275	AssignmentExpression	n2ptr = num2		497871	0		=			
ANR	498276	Identifier	n2ptr		497871	0					
ANR	498277	Identifier	num2		497871	1					
ANR	498278	WhileStatement	while ( * n2ptr == 0 )		497871	27					
ANR	498279	Condition	* n2ptr == 0	141:9:4186:4196	497871	0	True				
ANR	498280	EqualityExpression	* n2ptr == 0		497871	0		==			
ANR	498281	UnaryOperationExpression	* n2ptr		497871	0					
ANR	498282	UnaryOperator	*		497871	0					
ANR	498283	Identifier	n2ptr		497871	1					
ANR	498284	PrimaryExpression	0		497871	1					
ANR	498285	CompoundStatement		54:4:1619:1619	497871	1					
ANR	498286	ExpressionStatement	n2ptr ++	143:6:4211:4218	497871	0	True				
ANR	498287	PostIncDecOperationExpression	n2ptr ++		497871	0					
ANR	498288	Identifier	n2ptr		497871	0					
ANR	498289	IncDec	++		497871	1					
ANR	498290	ExpressionStatement	len2 --	144:6:4226:4232	497871	1	True				
ANR	498291	PostIncDecOperationExpression	len2 --		497871	0					
ANR	498292	Identifier	len2		497871	0					
ANR	498293	IncDec	--		497871	1					
ANR	498294	IfStatement	if ( len2 > len1 + scale )		497871	28					
ANR	498295	Condition	len2 > len1 + scale	148:6:4296:4312	497871	0	True				
ANR	498296	RelationalExpression	len2 > len1 + scale		497871	0		>			
ANR	498297	Identifier	len2		497871	0					
ANR	498298	AdditiveExpression	len1 + scale		497871	1		+			
ANR	498299	Identifier	len1		497871	0					
ANR	498300	Identifier	scale		497871	1					
ANR	498301	CompoundStatement		61:4:1735:1735	497871	1					
ANR	498302	ExpressionStatement	qdigits = scale + 1	150:6:4327:4344	497871	0	True				
ANR	498303	AssignmentExpression	qdigits = scale + 1		497871	0		=			
ANR	498304	Identifier	qdigits		497871	0					
ANR	498305	AdditiveExpression	scale + 1		497871	1		+			
ANR	498306	Identifier	scale		497871	0					
ANR	498307	PrimaryExpression	1		497871	1					
ANR	498308	ExpressionStatement	zero = TRUE	151:6:4352:4363	497871	1	True				
ANR	498309	AssignmentExpression	zero = TRUE		497871	0		=			
ANR	498310	Identifier	zero		497871	0					
ANR	498311	Identifier	TRUE		497871	1					
ANR	498312	ElseStatement	else		497871	0					
ANR	498313	CompoundStatement		66:4:1798:1798	497871	0					
ANR	498314	ExpressionStatement	zero = FALSE	155:6:4390:4402	497871	0	True				
ANR	498315	AssignmentExpression	zero = FALSE		497871	0		=			
ANR	498316	Identifier	zero		497871	0					
ANR	498317	Identifier	FALSE		497871	1					
ANR	498318	IfStatement	if ( len2 > len1 )		497871	1					
ANR	498319	Condition	len2 > len1	156:10:4414:4422	497871	0	True				
ANR	498320	RelationalExpression	len2 > len1		497871	0		>			
ANR	498321	Identifier	len2		497871	0					
ANR	498322	Identifier	len1		497871	1					
ANR	498323	ExpressionStatement	qdigits = scale + 1	157:1:4426:4443	497871	1	True				
ANR	498324	AssignmentExpression	qdigits = scale + 1		497871	0		=			
ANR	498325	Identifier	qdigits		497871	0					
ANR	498326	AdditiveExpression	scale + 1		497871	1		+			
ANR	498327	Identifier	scale		497871	0					
ANR	498328	PrimaryExpression	1		497871	1					
ANR	498329	ElseStatement	else		497871	0					
ANR	498330	ExpressionStatement	qdigits = len1 - len2 + scale + 1	159:1:4496:4523	497871	0	True				
ANR	498331	AssignmentExpression	qdigits = len1 - len2 + scale + 1		497871	0		=			
ANR	498332	Identifier	qdigits		497871	0					
ANR	498333	AdditiveExpression	len1 - len2 + scale + 1		497871	1		-			
ANR	498334	Identifier	len1		497871	0					
ANR	498335	AdditiveExpression	len2 + scale + 1		497871	1		+			
ANR	498336	Identifier	len2		497871	0					
ANR	498337	AdditiveExpression	scale + 1		497871	1		+			
ANR	498338	Identifier	scale		497871	0					
ANR	498339	PrimaryExpression	1		497871	1					
ANR	498340	ExpressionStatement	"qval = bc_new_num ( qdigits - scale , scale )"	163:2:4590:4629	497871	29	True				
ANR	498341	AssignmentExpression	"qval = bc_new_num ( qdigits - scale , scale )"		497871	0		=			
ANR	498342	Identifier	qval		497871	0					
ANR	498343	CallExpression	"bc_new_num ( qdigits - scale , scale )"		497871	1					
ANR	498344	Callee	bc_new_num		497871	0					
ANR	498345	Identifier	bc_new_num		497871	0					
ANR	498346	ArgumentList	qdigits - scale		497871	1					
ANR	498347	Argument	qdigits - scale		497871	0					
ANR	498348	AdditiveExpression	qdigits - scale		497871	0		-			
ANR	498349	Identifier	qdigits		497871	0					
ANR	498350	Identifier	scale		497871	1					
ANR	498351	Argument	scale		497871	1					
ANR	498352	Identifier	scale		497871	0					
ANR	498353	ExpressionStatement	"memset ( qval -> n_value , 0 , qdigits )"	164:2:4633:4667	497871	30	True				
ANR	498354	CallExpression	"memset ( qval -> n_value , 0 , qdigits )"		497871	0					
ANR	498355	Callee	memset		497871	0					
ANR	498356	Identifier	memset		497871	0					
ANR	498357	ArgumentList	qval -> n_value		497871	1					
ANR	498358	Argument	qval -> n_value		497871	0					
ANR	498359	PtrMemberAccess	qval -> n_value		497871	0					
ANR	498360	Identifier	qval		497871	0					
ANR	498361	Identifier	n_value		497871	1					
ANR	498362	Argument	0		497871	1					
ANR	498363	PrimaryExpression	0		497871	0					
ANR	498364	Argument	qdigits		497871	2					
ANR	498365	Identifier	qdigits		497871	0					
ANR	498366	ExpressionStatement	"mval = ( unsigned char * ) safe_emalloc ( 1 , len2 , 1 )"	167:2:4729:4779	497871	31	True				
ANR	498367	AssignmentExpression	"mval = ( unsigned char * ) safe_emalloc ( 1 , len2 , 1 )"		497871	0		=			
ANR	498368	Identifier	mval		497871	0					
ANR	498369	CastExpression	"( unsigned char * ) safe_emalloc ( 1 , len2 , 1 )"		497871	1					
ANR	498370	CastTarget	unsigned char *		497871	0					
ANR	498371	CallExpression	"safe_emalloc ( 1 , len2 , 1 )"		497871	1					
ANR	498372	Callee	safe_emalloc		497871	0					
ANR	498373	Identifier	safe_emalloc		497871	0					
ANR	498374	ArgumentList	1		497871	1					
ANR	498375	Argument	1		497871	0					
ANR	498376	PrimaryExpression	1		497871	0					
ANR	498377	Argument	len2		497871	1					
ANR	498378	Identifier	len2		497871	0					
ANR	498379	Argument	1		497871	2					
ANR	498380	PrimaryExpression	1		497871	0					
ANR	498381	IfStatement	if ( mval == NULL )		497871	32					
ANR	498382	Condition	mval == NULL	168:6:4787:4798	497871	0	True				
ANR	498383	EqualityExpression	mval == NULL		497871	0		==			
ANR	498384	Identifier	mval		497871	0					
ANR	498385	Identifier	NULL		497871	1					
ANR	498386	ExpressionStatement	bc_out_of_memory ( )	168:20:4801:4820	497871	1	True				
ANR	498387	CallExpression	bc_out_of_memory ( )		497871	0					
ANR	498388	Callee	bc_out_of_memory		497871	0					
ANR	498389	Identifier	bc_out_of_memory		497871	0					
ANR	498390	ArgumentList			497871	1					
ANR	498391	IfStatement	if ( ! zero )		497871	33					
ANR	498392	Condition	! zero	171:6:4872:4876	497871	0	True				
ANR	498393	UnaryOperationExpression	! zero		497871	0					
ANR	498394	UnaryOperator	!		497871	0					
ANR	498395	Identifier	zero		497871	1					
ANR	498396	CompoundStatement		84:4:2299:2299	497871	1					
ANR	498397	ExpressionStatement	norm = 10 / ( ( int ) * n2ptr + 1 )	174:6:4913:4943	497871	0	True				
ANR	498398	AssignmentExpression	norm = 10 / ( ( int ) * n2ptr + 1 )		497871	0		=			
ANR	498399	Identifier	norm		497871	0					
ANR	498400	MultiplicativeExpression	10 / ( ( int ) * n2ptr + 1 )		497871	1		/			
ANR	498401	PrimaryExpression	10		497871	0					
ANR	498402	AdditiveExpression	( int ) * n2ptr + 1		497871	1		+			
ANR	498403	CastExpression	( int ) * n2ptr		497871	0					
ANR	498404	CastTarget	int		497871	0					
ANR	498405	UnaryOperationExpression	* n2ptr		497871	1					
ANR	498406	UnaryOperator	*		497871	0					
ANR	498407	Identifier	n2ptr		497871	1					
ANR	498408	PrimaryExpression	1		497871	1					
ANR	498409	IfStatement	if ( norm != 1 )		497871	1					
ANR	498410	Condition	norm != 1	175:10:4955:4963	497871	0	True				
ANR	498411	EqualityExpression	norm != 1		497871	0		!=			
ANR	498412	Identifier	norm		497871	0					
ANR	498413	PrimaryExpression	1		497871	1					
ANR	498414	CompoundStatement		88:1:2383:2383	497871	1					
ANR	498415	ExpressionStatement	"_one_mult ( num1 , len1 + scale1 + extra + 1 , norm , num1 )"	177:3:4972:5021	497871	0	True				
ANR	498416	CallExpression	"_one_mult ( num1 , len1 + scale1 + extra + 1 , norm , num1 )"		497871	0					
ANR	498417	Callee	_one_mult		497871	0					
ANR	498418	Identifier	_one_mult		497871	0					
ANR	498419	ArgumentList	num1		497871	1					
ANR	498420	Argument	num1		497871	0					
ANR	498421	Identifier	num1		497871	0					
ANR	498422	Argument	len1 + scale1 + extra + 1		497871	1					
ANR	498423	AdditiveExpression	len1 + scale1 + extra + 1		497871	0		+			
ANR	498424	Identifier	len1		497871	0					
ANR	498425	AdditiveExpression	scale1 + extra + 1		497871	1		+			
ANR	498426	Identifier	scale1		497871	0					
ANR	498427	AdditiveExpression	extra + 1		497871	1		+			
ANR	498428	Identifier	extra		497871	0					
ANR	498429	PrimaryExpression	1		497871	1					
ANR	498430	Argument	norm		497871	2					
ANR	498431	Identifier	norm		497871	0					
ANR	498432	Argument	num1		497871	3					
ANR	498433	Identifier	num1		497871	0					
ANR	498434	ExpressionStatement	"_one_mult ( n2ptr , len2 , norm , n2ptr )"	178:3:5026:5062	497871	1	True				
ANR	498435	CallExpression	"_one_mult ( n2ptr , len2 , norm , n2ptr )"		497871	0					
ANR	498436	Callee	_one_mult		497871	0					
ANR	498437	Identifier	_one_mult		497871	0					
ANR	498438	ArgumentList	n2ptr		497871	1					
ANR	498439	Argument	n2ptr		497871	0					
ANR	498440	Identifier	n2ptr		497871	0					
ANR	498441	Argument	len2		497871	1					
ANR	498442	Identifier	len2		497871	0					
ANR	498443	Argument	norm		497871	2					
ANR	498444	Identifier	norm		497871	0					
ANR	498445	Argument	n2ptr		497871	3					
ANR	498446	Identifier	n2ptr		497871	0					
ANR	498447	ExpressionStatement	qdig = 0	182:6:5110:5118	497871	2	True				
ANR	498448	AssignmentExpression	qdig = 0		497871	0		=			
ANR	498449	Identifier	qdig		497871	0					
ANR	498450	PrimaryExpression	0		497871	1					
ANR	498451	IfStatement	if ( len2 > len1 )		497871	3					
ANR	498452	Condition	len2 > len1	183:10:5130:5140	497871	0	True				
ANR	498453	RelationalExpression	len2 > len1		497871	0		>			
ANR	498454	Identifier	len2		497871	0					
ANR	498455	Identifier	len1		497871	1					
ANR	498456	ExpressionStatement	qptr = ( unsigned char * ) qval -> n_value + len2 - len1	184:1:5144:5192	497871	1	True				
ANR	498457	AssignmentExpression	qptr = ( unsigned char * ) qval -> n_value + len2 - len1		497871	0		=			
ANR	498458	Identifier	qptr		497871	0					
ANR	498459	AdditiveExpression	( unsigned char * ) qval -> n_value + len2 - len1		497871	1		+			
ANR	498460	CastExpression	( unsigned char * ) qval -> n_value		497871	0					
ANR	498461	CastTarget	unsigned char *		497871	0					
ANR	498462	PtrMemberAccess	qval -> n_value		497871	1					
ANR	498463	Identifier	qval		497871	0					
ANR	498464	Identifier	n_value		497871	1					
ANR	498465	AdditiveExpression	len2 - len1		497871	1		-			
ANR	498466	Identifier	len2		497871	0					
ANR	498467	Identifier	len1		497871	1					
ANR	498468	ElseStatement	else		497871	0					
ANR	498469	ExpressionStatement	qptr = ( unsigned char * ) qval -> n_value	186:1:5206:5244	497871	0	True				
ANR	498470	AssignmentExpression	qptr = ( unsigned char * ) qval -> n_value		497871	0		=			
ANR	498471	Identifier	qptr		497871	0					
ANR	498472	CastExpression	( unsigned char * ) qval -> n_value		497871	1					
ANR	498473	CastTarget	unsigned char *		497871	0					
ANR	498474	PtrMemberAccess	qval -> n_value		497871	1					
ANR	498475	Identifier	qval		497871	0					
ANR	498476	Identifier	n_value		497871	1					
ANR	498477	WhileStatement	while ( qdig <= len1 + scale - len2 )		497871	4					
ANR	498478	Condition	qdig <= len1 + scale - len2	189:13:5277:5299	497871	0	True				
ANR	498479	RelationalExpression	qdig <= len1 + scale - len2		497871	0		<=			
ANR	498480	Identifier	qdig		497871	0					
ANR	498481	AdditiveExpression	len1 + scale - len2		497871	1		+			
ANR	498482	Identifier	len1		497871	0					
ANR	498483	AdditiveExpression	scale - len2		497871	1		-			
ANR	498484	Identifier	scale		497871	0					
ANR	498485	Identifier	len2		497871	1					
ANR	498486	CompoundStatement		102:1:2719:2719	497871	1					
ANR	498487	IfStatement	if ( * n2ptr == num1 [ qdig ] )		497871	0					
ANR	498488	Condition	* n2ptr == num1 [ qdig ]	192:7:5357:5376	497871	0	True				
ANR	498489	EqualityExpression	* n2ptr == num1 [ qdig ]		497871	0		==			
ANR	498490	UnaryOperationExpression	* n2ptr		497871	0					
ANR	498491	UnaryOperator	*		497871	0					
ANR	498492	Identifier	n2ptr		497871	1					
ANR	498493	ArrayIndexing	num1 [ qdig ]		497871	1					
ANR	498494	Identifier	num1		497871	0					
ANR	498495	Identifier	qdig		497871	1					
ANR	498496	ExpressionStatement	qguess = 9	193:5:5384:5394	497871	1	True				
ANR	498497	AssignmentExpression	qguess = 9		497871	0		=			
ANR	498498	Identifier	qguess		497871	0					
ANR	498499	PrimaryExpression	9		497871	1					
ANR	498500	ElseStatement	else		497871	0					
ANR	498501	ExpressionStatement	qguess = ( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] ) / * n2ptr	195:5:5409:5457	497871	0	True				
ANR	498502	AssignmentExpression	qguess = ( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] ) / * n2ptr		497871	0		=			
ANR	498503	Identifier	qguess		497871	0					
ANR	498504	MultiplicativeExpression	( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] ) / * n2ptr		497871	1		/			
ANR	498505	AdditiveExpression	num1 [ qdig ] * 10 + num1 [ qdig + 1 ]		497871	0		+			
ANR	498506	MultiplicativeExpression	num1 [ qdig ] * 10		497871	0		*			
ANR	498507	ArrayIndexing	num1 [ qdig ]		497871	0					
ANR	498508	Identifier	num1		497871	0					
ANR	498509	Identifier	qdig		497871	1					
ANR	498510	PrimaryExpression	10		497871	1					
ANR	498511	ArrayIndexing	num1 [ qdig + 1 ]		497871	1					
ANR	498512	Identifier	num1		497871	0					
ANR	498513	AdditiveExpression	qdig + 1		497871	1		+			
ANR	498514	Identifier	qdig		497871	0					
ANR	498515	PrimaryExpression	1		497871	1					
ANR	498516	UnaryOperationExpression	* n2ptr		497871	1					
ANR	498517	UnaryOperator	*		497871	0					
ANR	498518	Identifier	n2ptr		497871	1					
ANR	498519	IfStatement	if ( n2ptr [ 1 ] * qguess > ( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10 + num1 [ qdig + 2 ] )		497871	1					
ANR	498520	Condition	n2ptr [ 1 ] * qguess > ( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10 + num1 [ qdig + 2 ]	198:7:5489:5585	497871	0	True				
ANR	498521	RelationalExpression	n2ptr [ 1 ] * qguess > ( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10 + num1 [ qdig + 2 ]		497871	0		>			
ANR	498522	MultiplicativeExpression	n2ptr [ 1 ] * qguess		497871	0		*			
ANR	498523	ArrayIndexing	n2ptr [ 1 ]		497871	0					
ANR	498524	Identifier	n2ptr		497871	0					
ANR	498525	PrimaryExpression	1		497871	1					
ANR	498526	Identifier	qguess		497871	1					
ANR	498527	AdditiveExpression	( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10 + num1 [ qdig + 2 ]		497871	1		+			
ANR	498528	MultiplicativeExpression	( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10		497871	0		*			
ANR	498529	AdditiveExpression	num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess		497871	0		+			
ANR	498530	MultiplicativeExpression	num1 [ qdig ] * 10		497871	0		*			
ANR	498531	ArrayIndexing	num1 [ qdig ]		497871	0					
ANR	498532	Identifier	num1		497871	0					
ANR	498533	Identifier	qdig		497871	1					
ANR	498534	PrimaryExpression	10		497871	1					
ANR	498535	AdditiveExpression	num1 [ qdig + 1 ] - * n2ptr * qguess		497871	1		-			
ANR	498536	ArrayIndexing	num1 [ qdig + 1 ]		497871	0					
ANR	498537	Identifier	num1		497871	0					
ANR	498538	AdditiveExpression	qdig + 1		497871	1		+			
ANR	498539	Identifier	qdig		497871	0					
ANR	498540	PrimaryExpression	1		497871	1					
ANR	498541	MultiplicativeExpression	* n2ptr * qguess		497871	1		*			
ANR	498542	UnaryOperationExpression	* n2ptr		497871	0					
ANR	498543	UnaryOperator	*		497871	0					
ANR	498544	Identifier	n2ptr		497871	1					
ANR	498545	Identifier	qguess		497871	1					
ANR	498546	PrimaryExpression	10		497871	1					
ANR	498547	ArrayIndexing	num1 [ qdig + 2 ]		497871	1					
ANR	498548	Identifier	num1		497871	0					
ANR	498549	AdditiveExpression	qdig + 2		497871	1		+			
ANR	498550	Identifier	qdig		497871	0					
ANR	498551	PrimaryExpression	2		497871	1					
ANR	498552	CompoundStatement		113:5:3009:3009	497871	1					
ANR	498553	ExpressionStatement	qguess --	202:7:5602:5610	497871	0	True				
ANR	498554	PostIncDecOperationExpression	qguess --		497871	0					
ANR	498555	Identifier	qguess		497871	0					
ANR	498556	IncDec	--		497871	1					
ANR	498557	IfStatement	if ( n2ptr [ 1 ] * qguess > ( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10 + num1 [ qdig + 2 ] )		497871	1					
ANR	498558	Condition	n2ptr [ 1 ] * qguess > ( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10 + num1 [ qdig + 2 ]	204:11:5647:5736	497871	0	True				
ANR	498559	RelationalExpression	n2ptr [ 1 ] * qguess > ( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10 + num1 [ qdig + 2 ]		497871	0		>			
ANR	498560	MultiplicativeExpression	n2ptr [ 1 ] * qguess		497871	0		*			
ANR	498561	ArrayIndexing	n2ptr [ 1 ]		497871	0					
ANR	498562	Identifier	n2ptr		497871	0					
ANR	498563	PrimaryExpression	1		497871	1					
ANR	498564	Identifier	qguess		497871	1					
ANR	498565	AdditiveExpression	( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10 + num1 [ qdig + 2 ]		497871	1		+			
ANR	498566	MultiplicativeExpression	( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10		497871	0		*			
ANR	498567	AdditiveExpression	num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess		497871	0		+			
ANR	498568	MultiplicativeExpression	num1 [ qdig ] * 10		497871	0		*			
ANR	498569	ArrayIndexing	num1 [ qdig ]		497871	0					
ANR	498570	Identifier	num1		497871	0					
ANR	498571	Identifier	qdig		497871	1					
ANR	498572	PrimaryExpression	10		497871	1					
ANR	498573	AdditiveExpression	num1 [ qdig + 1 ] - * n2ptr * qguess		497871	1		-			
ANR	498574	ArrayIndexing	num1 [ qdig + 1 ]		497871	0					
ANR	498575	Identifier	num1		497871	0					
ANR	498576	AdditiveExpression	qdig + 1		497871	1		+			
ANR	498577	Identifier	qdig		497871	0					
ANR	498578	PrimaryExpression	1		497871	1					
ANR	498579	MultiplicativeExpression	* n2ptr * qguess		497871	1		*			
ANR	498580	UnaryOperationExpression	* n2ptr		497871	0					
ANR	498581	UnaryOperator	*		497871	0					
ANR	498582	Identifier	n2ptr		497871	1					
ANR	498583	Identifier	qguess		497871	1					
ANR	498584	PrimaryExpression	10		497871	1					
ANR	498585	ArrayIndexing	num1 [ qdig + 2 ]		497871	1					
ANR	498586	Identifier	num1		497871	0					
ANR	498587	AdditiveExpression	qdig + 2		497871	1		+			
ANR	498588	Identifier	qdig		497871	0					
ANR	498589	PrimaryExpression	2		497871	1					
ANR	498590	ExpressionStatement	qguess --	207:2:5741:5749	497871	1	True				
ANR	498591	PostIncDecOperationExpression	qguess --		497871	0					
ANR	498592	Identifier	qguess		497871	0					
ANR	498593	IncDec	--		497871	1					
ANR	498594	ExpressionStatement	borrow = 0	211:3:5794:5804	497871	2	True				
ANR	498595	AssignmentExpression	borrow = 0		497871	0		=			
ANR	498596	Identifier	borrow		497871	0					
ANR	498597	PrimaryExpression	0		497871	1					
ANR	498598	IfStatement	if ( qguess != 0 )		497871	3					
ANR	498599	Condition	qguess != 0	212:7:5813:5823	497871	0	True				
ANR	498600	EqualityExpression	qguess != 0		497871	0		!=			
ANR	498601	Identifier	qguess		497871	0					
ANR	498602	PrimaryExpression	0		497871	1					
ANR	498603	CompoundStatement		125:5:3247:3247	497871	1					
ANR	498604	ExpressionStatement	* mval = 0	214:7:5840:5849	497871	0	True				
ANR	498605	AssignmentExpression	* mval = 0		497871	0		=			
ANR	498606	UnaryOperationExpression	* mval		497871	0					
ANR	498607	UnaryOperator	*		497871	0					
ANR	498608	Identifier	mval		497871	1					
ANR	498609	PrimaryExpression	0		497871	1					
ANR	498610	ExpressionStatement	"_one_mult ( n2ptr , len2 , qguess , mval + 1 )"	215:7:5858:5897	497871	1	True				
ANR	498611	CallExpression	"_one_mult ( n2ptr , len2 , qguess , mval + 1 )"		497871	0					
ANR	498612	Callee	_one_mult		497871	0					
ANR	498613	Identifier	_one_mult		497871	0					
ANR	498614	ArgumentList	n2ptr		497871	1					
ANR	498615	Argument	n2ptr		497871	0					
ANR	498616	Identifier	n2ptr		497871	0					
ANR	498617	Argument	len2		497871	1					
ANR	498618	Identifier	len2		497871	0					
ANR	498619	Argument	qguess		497871	2					
ANR	498620	Identifier	qguess		497871	0					
ANR	498621	Argument	mval + 1		497871	3					
ANR	498622	AdditiveExpression	mval + 1		497871	0		+			
ANR	498623	Identifier	mval		497871	0					
ANR	498624	PrimaryExpression	1		497871	1					
ANR	498625	ExpressionStatement	ptr1 = ( unsigned char * ) num1 + qdig + len2	216:7:5906:5945	497871	2	True				
ANR	498626	AssignmentExpression	ptr1 = ( unsigned char * ) num1 + qdig + len2		497871	0		=			
ANR	498627	Identifier	ptr1		497871	0					
ANR	498628	AdditiveExpression	( unsigned char * ) num1 + qdig + len2		497871	1		+			
ANR	498629	CastExpression	( unsigned char * ) num1		497871	0					
ANR	498630	CastTarget	unsigned char *		497871	0					
ANR	498631	Identifier	num1		497871	1					
ANR	498632	AdditiveExpression	qdig + len2		497871	1		+			
ANR	498633	Identifier	qdig		497871	0					
ANR	498634	Identifier	len2		497871	1					
ANR	498635	ExpressionStatement	ptr2 = ( unsigned char * ) mval + len2	217:7:5954:5988	497871	3	True				
ANR	498636	AssignmentExpression	ptr2 = ( unsigned char * ) mval + len2		497871	0		=			
ANR	498637	Identifier	ptr2		497871	0					
ANR	498638	AdditiveExpression	( unsigned char * ) mval + len2		497871	1		+			
ANR	498639	CastExpression	( unsigned char * ) mval		497871	0					
ANR	498640	CastTarget	unsigned char *		497871	0					
ANR	498641	Identifier	mval		497871	1					
ANR	498642	Identifier	len2		497871	1					
ANR	498643	ForStatement	for ( count = 0 ; count < len2 + 1 ; count ++ )		497871	4					
ANR	498644	ForInit	count = 0 ;	218:12:6002:6011	497871	0	True				
ANR	498645	AssignmentExpression	count = 0		497871	0		=			
ANR	498646	Identifier	count		497871	0					
ANR	498647	PrimaryExpression	0		497871	1					
ANR	498648	Condition	count < len2 + 1	218:23:6013:6026	497871	1	True				
ANR	498649	RelationalExpression	count < len2 + 1		497871	0		<			
ANR	498650	Identifier	count		497871	0					
ANR	498651	AdditiveExpression	len2 + 1		497871	1		+			
ANR	498652	Identifier	len2		497871	0					
ANR	498653	PrimaryExpression	1		497871	1					
ANR	498654	PostIncDecOperationExpression	count ++	218:39:6029:6035	497871	2	True				
ANR	498655	Identifier	count		497871	0					
ANR	498656	IncDec	++		497871	1					
ANR	498657	CompoundStatement		131:2:3456:3456	497871	3					
ANR	498658	ExpressionStatement	val = ( int ) * ptr1 - ( int ) * ptr2 -- - borrow	220:4:6046:6088	497871	0	True				
ANR	498659	AssignmentExpression	val = ( int ) * ptr1 - ( int ) * ptr2 -- - borrow		497871	0		=			
ANR	498660	Identifier	val		497871	0					
ANR	498661	AdditiveExpression	( int ) * ptr1 - ( int ) * ptr2 -- - borrow		497871	1		-			
ANR	498662	CastExpression	( int ) * ptr1		497871	0					
ANR	498663	CastTarget	int		497871	0					
ANR	498664	UnaryOperationExpression	* ptr1		497871	1					
ANR	498665	UnaryOperator	*		497871	0					
ANR	498666	Identifier	ptr1		497871	1					
ANR	498667	AdditiveExpression	( int ) * ptr2 -- - borrow		497871	1		-			
ANR	498668	CastExpression	( int ) * ptr2 --		497871	0					
ANR	498669	CastTarget	int		497871	0					
ANR	498670	UnaryOperationExpression	* ptr2 --		497871	1					
ANR	498671	UnaryOperator	*		497871	0					
ANR	498672	PostIncDecOperationExpression	ptr2 --		497871	1					
ANR	498673	Identifier	ptr2		497871	0					
ANR	498674	IncDec	--		497871	1					
ANR	498675	Identifier	borrow		497871	1					
ANR	498676	IfStatement	if ( val < 0 )		497871	1					
ANR	498677	Condition	val < 0	221:8:6098:6104	497871	0	True				
ANR	498678	RelationalExpression	val < 0		497871	0		<			
ANR	498679	Identifier	val		497871	0					
ANR	498680	PrimaryExpression	0		497871	1					
ANR	498681	CompoundStatement		134:6:3529:3529	497871	1					
ANR	498682	ExpressionStatement	val += 10	223:8:6123:6132	497871	0	True				
ANR	498683	AssignmentExpression	val += 10		497871	0		+=			
ANR	498684	Identifier	val		497871	0					
ANR	498685	PrimaryExpression	10		497871	1					
ANR	498686	ExpressionStatement	borrow = 1	224:8:6142:6152	497871	1	True				
ANR	498687	AssignmentExpression	borrow = 1		497871	0		=			
ANR	498688	Identifier	borrow		497871	0					
ANR	498689	PrimaryExpression	1		497871	1					
ANR	498690	ElseStatement	else		497871	0					
ANR	498691	ExpressionStatement	borrow = 0	227:6:6177:6187	497871	0	True				
ANR	498692	AssignmentExpression	borrow = 0		497871	0		=			
ANR	498693	Identifier	borrow		497871	0					
ANR	498694	PrimaryExpression	0		497871	1					
ANR	498695	ExpressionStatement	* ptr1 -- = val	228:4:6193:6206	497871	2	True				
ANR	498696	AssignmentExpression	* ptr1 -- = val		497871	0		=			
ANR	498697	UnaryOperationExpression	* ptr1 --		497871	0					
ANR	498698	UnaryOperator	*		497871	0					
ANR	498699	PostIncDecOperationExpression	ptr1 --		497871	1					
ANR	498700	Identifier	ptr1		497871	0					
ANR	498701	IncDec	--		497871	1					
ANR	498702	Identifier	val		497871	1					
ANR	498703	IfStatement	if ( borrow == 1 )		497871	4					
ANR	498704	Condition	borrow == 1	233:7:6262:6272	497871	0	True				
ANR	498705	EqualityExpression	borrow == 1		497871	0		==			
ANR	498706	Identifier	borrow		497871	0					
ANR	498707	PrimaryExpression	1		497871	1					
ANR	498708	CompoundStatement		146:5:3696:3696	497871	1					
ANR	498709	ExpressionStatement	qguess --	235:7:6289:6297	497871	0	True				
ANR	498710	PostIncDecOperationExpression	qguess --		497871	0					
ANR	498711	Identifier	qguess		497871	0					
ANR	498712	IncDec	--		497871	1					
ANR	498713	ExpressionStatement	ptr1 = ( unsigned char * ) num1 + qdig + len2	236:7:6306:6345	497871	1	True				
ANR	498714	AssignmentExpression	ptr1 = ( unsigned char * ) num1 + qdig + len2		497871	0		=			
ANR	498715	Identifier	ptr1		497871	0					
ANR	498716	AdditiveExpression	( unsigned char * ) num1 + qdig + len2		497871	1		+			
ANR	498717	CastExpression	( unsigned char * ) num1		497871	0					
ANR	498718	CastTarget	unsigned char *		497871	0					
ANR	498719	Identifier	num1		497871	1					
ANR	498720	AdditiveExpression	qdig + len2		497871	1		+			
ANR	498721	Identifier	qdig		497871	0					
ANR	498722	Identifier	len2		497871	1					
ANR	498723	ExpressionStatement	ptr2 = ( unsigned char * ) n2ptr + len2 - 1	237:7:6354:6391	497871	2	True				
ANR	498724	AssignmentExpression	ptr2 = ( unsigned char * ) n2ptr + len2 - 1		497871	0		=			
ANR	498725	Identifier	ptr2		497871	0					
ANR	498726	AdditiveExpression	( unsigned char * ) n2ptr + len2 - 1		497871	1		+			
ANR	498727	CastExpression	( unsigned char * ) n2ptr		497871	0					
ANR	498728	CastTarget	unsigned char *		497871	0					
ANR	498729	Identifier	n2ptr		497871	1					
ANR	498730	AdditiveExpression	len2 - 1		497871	1		-			
ANR	498731	Identifier	len2		497871	0					
ANR	498732	PrimaryExpression	1		497871	1					
ANR	498733	ExpressionStatement	carry = 0	238:7:6400:6409	497871	3	True				
ANR	498734	AssignmentExpression	carry = 0		497871	0		=			
ANR	498735	Identifier	carry		497871	0					
ANR	498736	PrimaryExpression	0		497871	1					
ANR	498737	ForStatement	for ( count = 0 ; count < len2 ; count ++ )		497871	4					
ANR	498738	ForInit	count = 0 ;	239:12:6423:6432	497871	0	True				
ANR	498739	AssignmentExpression	count = 0		497871	0		=			
ANR	498740	Identifier	count		497871	0					
ANR	498741	PrimaryExpression	0		497871	1					
ANR	498742	Condition	count < len2	239:23:6434:6445	497871	1	True				
ANR	498743	RelationalExpression	count < len2		497871	0		<			
ANR	498744	Identifier	count		497871	0					
ANR	498745	Identifier	len2		497871	1					
ANR	498746	PostIncDecOperationExpression	count ++	239:37:6448:6454	497871	2	True				
ANR	498747	Identifier	count		497871	0					
ANR	498748	IncDec	++		497871	1					
ANR	498749	CompoundStatement		152:2:3875:3875	497871	3					
ANR	498750	ExpressionStatement	val = ( int ) * ptr1 + ( int ) * ptr2 -- + carry	241:4:6465:6506	497871	0	True				
ANR	498751	AssignmentExpression	val = ( int ) * ptr1 + ( int ) * ptr2 -- + carry		497871	0		=			
ANR	498752	Identifier	val		497871	0					
ANR	498753	AdditiveExpression	( int ) * ptr1 + ( int ) * ptr2 -- + carry		497871	1		+			
ANR	498754	CastExpression	( int ) * ptr1		497871	0					
ANR	498755	CastTarget	int		497871	0					
ANR	498756	UnaryOperationExpression	* ptr1		497871	1					
ANR	498757	UnaryOperator	*		497871	0					
ANR	498758	Identifier	ptr1		497871	1					
ANR	498759	AdditiveExpression	( int ) * ptr2 -- + carry		497871	1		+			
ANR	498760	CastExpression	( int ) * ptr2 --		497871	0					
ANR	498761	CastTarget	int		497871	0					
ANR	498762	UnaryOperationExpression	* ptr2 --		497871	1					
ANR	498763	UnaryOperator	*		497871	0					
ANR	498764	PostIncDecOperationExpression	ptr2 --		497871	1					
ANR	498765	Identifier	ptr2		497871	0					
ANR	498766	IncDec	--		497871	1					
ANR	498767	Identifier	carry		497871	1					
ANR	498768	IfStatement	if ( val > 9 )		497871	1					
ANR	498769	Condition	val > 9	242:8:6516:6522	497871	0	True				
ANR	498770	RelationalExpression	val > 9		497871	0		>			
ANR	498771	Identifier	val		497871	0					
ANR	498772	PrimaryExpression	9		497871	1					
ANR	498773	CompoundStatement		155:6:3947:3947	497871	1					
ANR	498774	ExpressionStatement	val -= 10	244:8:6541:6550	497871	0	True				
ANR	498775	AssignmentExpression	val -= 10		497871	0		-=			
ANR	498776	Identifier	val		497871	0					
ANR	498777	PrimaryExpression	10		497871	1					
ANR	498778	ExpressionStatement	carry = 1	245:8:6560:6569	497871	1	True				
ANR	498779	AssignmentExpression	carry = 1		497871	0		=			
ANR	498780	Identifier	carry		497871	0					
ANR	498781	PrimaryExpression	1		497871	1					
ANR	498782	ElseStatement	else		497871	0					
ANR	498783	ExpressionStatement	carry = 0	248:6:6594:6603	497871	0	True				
ANR	498784	AssignmentExpression	carry = 0		497871	0		=			
ANR	498785	Identifier	carry		497871	0					
ANR	498786	PrimaryExpression	0		497871	1					
ANR	498787	ExpressionStatement	* ptr1 -- = val	249:4:6609:6622	497871	2	True				
ANR	498788	AssignmentExpression	* ptr1 -- = val		497871	0		=			
ANR	498789	UnaryOperationExpression	* ptr1 --		497871	0					
ANR	498790	UnaryOperator	*		497871	0					
ANR	498791	PostIncDecOperationExpression	ptr1 --		497871	1					
ANR	498792	Identifier	ptr1		497871	0					
ANR	498793	IncDec	--		497871	1					
ANR	498794	Identifier	val		497871	1					
ANR	498795	IfStatement	if ( carry == 1 )		497871	5					
ANR	498796	Condition	carry == 1	251:11:6639:6648	497871	0	True				
ANR	498797	EqualityExpression	carry == 1		497871	0		==			
ANR	498798	Identifier	carry		497871	0					
ANR	498799	PrimaryExpression	1		497871	1					
ANR	498800	ExpressionStatement	* ptr1 = ( * ptr1 + 1 ) % 10	251:23:6651:6675	497871	1	True				
ANR	498801	AssignmentExpression	* ptr1 = ( * ptr1 + 1 ) % 10		497871	0		=			
ANR	498802	UnaryOperationExpression	* ptr1		497871	0					
ANR	498803	UnaryOperator	*		497871	0					
ANR	498804	Identifier	ptr1		497871	1					
ANR	498805	MultiplicativeExpression	( * ptr1 + 1 ) % 10		497871	1		%			
ANR	498806	AdditiveExpression	* ptr1 + 1		497871	0		+			
ANR	498807	UnaryOperationExpression	* ptr1		497871	0					
ANR	498808	UnaryOperator	*		497871	0					
ANR	498809	Identifier	ptr1		497871	1					
ANR	498810	PrimaryExpression	1		497871	1					
ANR	498811	PrimaryExpression	10		497871	1					
ANR	498812	ExpressionStatement	* qptr ++ = qguess	255:3:6729:6746	497871	5	True				
ANR	498813	AssignmentExpression	* qptr ++ = qguess		497871	0		=			
ANR	498814	UnaryOperationExpression	* qptr ++		497871	0					
ANR	498815	UnaryOperator	*		497871	0					
ANR	498816	PostIncDecOperationExpression	qptr ++		497871	1					
ANR	498817	Identifier	qptr		497871	0					
ANR	498818	IncDec	++		497871	1					
ANR	498819	Identifier	qguess		497871	1					
ANR	498820	ExpressionStatement	qdig ++	256:3:6751:6757	497871	6	True				
ANR	498821	PostIncDecOperationExpression	qdig ++		497871	0					
ANR	498822	Identifier	qdig		497871	0					
ANR	498823	IncDec	++		497871	1					
ANR	498824	ExpressionStatement	qval -> n_sign = ( n1 -> n_sign == n2 -> n_sign ? PLUS : MINUS )	261:2:6811:6869	497871	34	True				
ANR	498825	AssignmentExpression	qval -> n_sign = ( n1 -> n_sign == n2 -> n_sign ? PLUS : MINUS )		497871	0		=			
ANR	498826	PtrMemberAccess	qval -> n_sign		497871	0					
ANR	498827	Identifier	qval		497871	0					
ANR	498828	Identifier	n_sign		497871	1					
ANR	498829	ConditionalExpression	n1 -> n_sign == n2 -> n_sign ? PLUS : MINUS		497871	1					
ANR	498830	Condition	n1 -> n_sign == n2 -> n_sign		497871	0					
ANR	498831	EqualityExpression	n1 -> n_sign == n2 -> n_sign		497871	0		==			
ANR	498832	PtrMemberAccess	n1 -> n_sign		497871	0					
ANR	498833	Identifier	n1		497871	0					
ANR	498834	Identifier	n_sign		497871	1					
ANR	498835	PtrMemberAccess	n2 -> n_sign		497871	1					
ANR	498836	Identifier	n2		497871	0					
ANR	498837	Identifier	n_sign		497871	1					
ANR	498838	Identifier	PLUS		497871	1					
ANR	498839	Identifier	MINUS		497871	2					
ANR	498840	IfStatement	if ( bc_is_zero ( qval ) )		497871	35					
ANR	498841	Condition	bc_is_zero ( qval )	262:6:6877:6893	497871	0	True				
ANR	498842	CallExpression	bc_is_zero ( qval )		497871	0					
ANR	498843	Callee	bc_is_zero		497871	0					
ANR	498844	Identifier	bc_is_zero		497871	0					
ANR	498845	ArgumentList	qval		497871	1					
ANR	498846	Argument	qval		497871	0					
ANR	498847	Identifier	qval		497871	0					
ANR	498848	ExpressionStatement	qval -> n_sign = PLUS	262:25:6896:6915	497871	1	True				
ANR	498849	AssignmentExpression	qval -> n_sign = PLUS		497871	0		=			
ANR	498850	PtrMemberAccess	qval -> n_sign		497871	0					
ANR	498851	Identifier	qval		497871	0					
ANR	498852	Identifier	n_sign		497871	1					
ANR	498853	Identifier	PLUS		497871	1					
ANR	498854	ExpressionStatement	_bc_rm_leading_zeros ( qval )	263:2:6919:6946	497871	36	True				
ANR	498855	CallExpression	_bc_rm_leading_zeros ( qval )		497871	0					
ANR	498856	Callee	_bc_rm_leading_zeros		497871	0					
ANR	498857	Identifier	_bc_rm_leading_zeros		497871	0					
ANR	498858	ArgumentList	qval		497871	1					
ANR	498859	Argument	qval		497871	0					
ANR	498860	Identifier	qval		497871	0					
ANR	498861	ExpressionStatement	bc_free_num ( quot )	264:2:6950:6968	497871	37	True				
ANR	498862	CallExpression	bc_free_num ( quot )		497871	0					
ANR	498863	Callee	bc_free_num		497871	0					
ANR	498864	Identifier	bc_free_num		497871	0					
ANR	498865	ArgumentList	quot		497871	1					
ANR	498866	Argument	quot		497871	0					
ANR	498867	Identifier	quot		497871	0					
ANR	498868	ExpressionStatement	* quot = qval	265:2:6972:6984	497871	38	True				
ANR	498869	AssignmentExpression	* quot = qval		497871	0		=			
ANR	498870	UnaryOperationExpression	* quot		497871	0					
ANR	498871	UnaryOperator	*		497871	0					
ANR	498872	Identifier	quot		497871	1					
ANR	498873	Identifier	qval		497871	1					
ANR	498874	ExpressionStatement	efree ( mval )	268:2:7025:7037	497871	39	True				
ANR	498875	CallExpression	efree ( mval )		497871	0					
ANR	498876	Callee	efree		497871	0					
ANR	498877	Identifier	efree		497871	0					
ANR	498878	ArgumentList	mval		497871	1					
ANR	498879	Argument	mval		497871	0					
ANR	498880	Identifier	mval		497871	0					
ANR	498881	ExpressionStatement	efree ( num1 )	269:2:7041:7053	497871	40	True				
ANR	498882	CallExpression	efree ( num1 )		497871	0					
ANR	498883	Callee	efree		497871	0					
ANR	498884	Identifier	efree		497871	0					
ANR	498885	ArgumentList	num1		497871	1					
ANR	498886	Argument	num1		497871	0					
ANR	498887	Identifier	num1		497871	0					
ANR	498888	ExpressionStatement	efree ( num2 )	270:2:7057:7069	497871	41	True				
ANR	498889	CallExpression	efree ( num2 )		497871	0					
ANR	498890	Callee	efree		497871	0					
ANR	498891	Identifier	efree		497871	0					
ANR	498892	ArgumentList	num2		497871	1					
ANR	498893	Argument	num2		497871	0					
ANR	498894	Identifier	num2		497871	0					
ANR	498895	ReturnStatement	return 0 ;	272:2:7074:7082	497871	42	True				
ANR	498896	PrimaryExpression	0		497871	0					
ANR	498897	ReturnType	int		497871	1					
ANR	498898	Identifier	bc_divide		497871	2					
ANR	498899	ParameterList	"bc_num n1 , bc_num n2 , bc_num * quot , int scale"		497871	3					
ANR	498900	Parameter	bc_num n1	88:11:2536:2544	497871	0	True				
ANR	498901	ParameterType	bc_num		497871	0					
ANR	498902	Identifier	n1		497871	1					
ANR	498903	Parameter	bc_num n2	88:22:2547:2555	497871	1	True				
ANR	498904	ParameterType	bc_num		497871	0					
ANR	498905	Identifier	n2		497871	1					
ANR	498906	Parameter	bc_num * quot	88:33:2558:2569	497871	2	True				
ANR	498907	ParameterType	bc_num *		497871	0					
ANR	498908	Identifier	quot		497871	1					
ANR	498909	Parameter	int scale	88:47:2572:2580	497871	3	True				
ANR	498910	ParameterType	int		497871	0					
ANR	498911	Identifier	scale		497871	1					
ANR	498912	CFGEntryNode	ENTRY		497871		True				
ANR	498913	CFGExitNode	EXIT		497871		True				
ANR	498914	Symbol	* num2		497871						
ANR	498915	Symbol	n1		497871						
ANR	498916	Symbol	* num1		497871						
ANR	498917	Symbol	n2		497871						
ANR	498918	Symbol	* qdig		497871						
ANR	498919	Symbol	n2 -> n_sign		497871						
ANR	498920	Symbol	len1		497871						
ANR	498921	Symbol	* ptr1 --		497871						
ANR	498922	Symbol	len2		497871						
ANR	498923	Symbol	norm		497871						
ANR	498924	Symbol	MINUS		497871						
ANR	498925	Symbol	zero		497871						
ANR	498926	Symbol	n1 -> n_scale		497871						
ANR	498927	Symbol	n1 -> n_value		497871						
ANR	498928	Symbol	* ptr1		497871						
ANR	498929	Symbol	qval -> n_value		497871						
ANR	498930	Symbol	n1 -> n_len		497871						
ANR	498931	Symbol	* quot		497871						
ANR	498932	Symbol	val		497871						
ANR	498933	Symbol	NULL		497871						
ANR	498934	Symbol	qval		497871						
ANR	498935	Symbol	n2 -> n_scale		497871						
ANR	498936	Symbol	n1 -> n_sign		497871						
ANR	498937	Symbol	mval		497871						
ANR	498938	Symbol	count		497871						
ANR	498939	Symbol	* n2		497871						
ANR	498940	Symbol	TRUE		497871						
ANR	498941	Symbol	* n1		497871						
ANR	498942	Symbol	qdigits		497871						
ANR	498943	Symbol	* ptr2 --		497871						
ANR	498944	Symbol	ptr2		497871						
ANR	498945	Symbol	* n2 -> n_value		497871						
ANR	498946	Symbol	qguess		497871						
ANR	498947	Symbol	MIN		497871						
ANR	498948	Symbol	ptr1		497871						
ANR	498949	Symbol	* qptr ++		497871						
ANR	498950	Symbol	carry		497871						
ANR	498951	Symbol	quot		497871						
ANR	498952	Symbol	PLUS		497871						
ANR	498953	Symbol	qdig		497871						
ANR	498954	Symbol	* n2ptr --		497871						
ANR	498955	Symbol	scale		497871						
ANR	498956	Symbol	n2ptr		497871						
ANR	498957	Symbol	bc_new_num		497871						
ANR	498958	Symbol	* len2		497871						
ANR	498959	Symbol	extra		497871						
ANR	498960	Symbol	num1		497871						
ANR	498961	Symbol	bc_is_zero		497871						
ANR	498962	Symbol	num2		497871						
ANR	498963	Symbol	n2 -> n_value		497871						
ANR	498964	Symbol	* qval		497871						
ANR	498965	Symbol	* ( num2 + len2 )		497871						
ANR	498966	Symbol	qptr		497871						
ANR	498967	Symbol	n2 -> n_len		497871						
ANR	498968	Symbol	* mval		497871						
ANR	498969	Symbol	qval -> n_sign		497871						
ANR	498970	Symbol	* * n2		497871						
ANR	498971	Symbol	* n2ptr		497871						
ANR	498972	Symbol	scale2		497871						
ANR	498973	Symbol	scale1		497871						
ANR	498974	Symbol	borrow		497871						
ANR	498975	Symbol	FALSE		497871						
ANR	498976	Symbol	safe_emalloc		497871						
