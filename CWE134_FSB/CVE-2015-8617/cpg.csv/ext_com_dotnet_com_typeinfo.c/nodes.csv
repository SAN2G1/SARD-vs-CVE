command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	522530	File	data/converged/CVE-2015-8617_php-src/ext_com_dotnet_com_typeinfo.c								
ANR	522531	Function	php_com_load_typelib	38:0:1640:5139							
ANR	522532	FunctionDef	"php_com_load_typelib (char * search_string , int codepage)"		522531	0					
ANR	522533	CompoundStatement		39:0:1725:5139	522531	0					
ANR	522534	IdentifierDeclStatement	ITypeLib * TL = NULL ;	40:1:1728:1747	522531	0	True				
ANR	522535	IdentifierDecl	* TL = NULL		522531	0					
ANR	522536	IdentifierDeclType	ITypeLib *		522531	0					
ANR	522537	Identifier	TL		522531	1					
ANR	522538	AssignmentExpression	* TL = NULL		522531	2		=			
ANR	522539	Identifier	NULL		522531	0					
ANR	522540	Identifier	NULL		522531	1					
ANR	522541	IdentifierDeclStatement	"char * strtok_buf , * major , * minor ;"	41:1:1750:1782	522531	1	True				
ANR	522542	IdentifierDecl	* strtok_buf		522531	0					
ANR	522543	IdentifierDeclType	char *		522531	0					
ANR	522544	Identifier	strtok_buf		522531	1					
ANR	522545	IdentifierDecl	* major		522531	1					
ANR	522546	IdentifierDeclType	char *		522531	0					
ANR	522547	Identifier	major		522531	1					
ANR	522548	IdentifierDecl	* minor		522531	2					
ANR	522549	IdentifierDeclType	char *		522531	0					
ANR	522550	Identifier	minor		522531	1					
ANR	522551	IdentifierDeclStatement	CLSID clsid ;	42:1:1785:1796	522531	2	True				
ANR	522552	IdentifierDecl	clsid		522531	0					
ANR	522553	IdentifierDeclType	CLSID		522531	0					
ANR	522554	Identifier	clsid		522531	1					
ANR	522555	IdentifierDeclStatement	OLECHAR * p ;	43:1:1799:1809	522531	3	True				
ANR	522556	IdentifierDecl	* p		522531	0					
ANR	522557	IdentifierDeclType	OLECHAR *		522531	0					
ANR	522558	Identifier	p		522531	1					
ANR	522559	IdentifierDeclStatement	HRESULT hr ;	44:1:1812:1822	522531	4	True				
ANR	522560	IdentifierDecl	hr		522531	0					
ANR	522561	IdentifierDeclType	HRESULT		522531	0					
ANR	522562	Identifier	hr		522531	1					
ANR	522563	ExpressionStatement	"search_string = php_strtok_r ( search_string , "","" , & strtok_buf )"	46:1:1826:1887	522531	5	True				
ANR	522564	AssignmentExpression	"search_string = php_strtok_r ( search_string , "","" , & strtok_buf )"		522531	0		=			
ANR	522565	Identifier	search_string		522531	0					
ANR	522566	CallExpression	"php_strtok_r ( search_string , "","" , & strtok_buf )"		522531	1					
ANR	522567	Callee	php_strtok_r		522531	0					
ANR	522568	Identifier	php_strtok_r		522531	0					
ANR	522569	ArgumentList	search_string		522531	1					
ANR	522570	Argument	search_string		522531	0					
ANR	522571	Identifier	search_string		522531	0					
ANR	522572	Argument	""","""		522531	1					
ANR	522573	PrimaryExpression	""","""		522531	0					
ANR	522574	Argument	& strtok_buf		522531	2					
ANR	522575	UnaryOperationExpression	& strtok_buf		522531	0					
ANR	522576	UnaryOperator	&		522531	0					
ANR	522577	Identifier	strtok_buf		522531	1					
ANR	522578	IfStatement	if ( search_string == NULL )		522531	6					
ANR	522579	Condition	search_string == NULL	48:5:1895:1915	522531	0	True				
ANR	522580	EqualityExpression	search_string == NULL		522531	0		==			
ANR	522581	Identifier	search_string		522531	0					
ANR	522582	Identifier	NULL		522531	1					
ANR	522583	CompoundStatement		10:28:192:192	522531	1					
ANR	522584	ReturnStatement	return NULL ;	49:2:1922:1933	522531	0	True				
ANR	522585	Identifier	NULL		522531	0					
ANR	522586	ExpressionStatement	"major = php_strtok_r ( NULL , "","" , & strtok_buf )"	52:1:1940:1984	522531	7	True				
ANR	522587	AssignmentExpression	"major = php_strtok_r ( NULL , "","" , & strtok_buf )"		522531	0		=			
ANR	522588	Identifier	major		522531	0					
ANR	522589	CallExpression	"php_strtok_r ( NULL , "","" , & strtok_buf )"		522531	1					
ANR	522590	Callee	php_strtok_r		522531	0					
ANR	522591	Identifier	php_strtok_r		522531	0					
ANR	522592	ArgumentList	NULL		522531	1					
ANR	522593	Argument	NULL		522531	0					
ANR	522594	Identifier	NULL		522531	0					
ANR	522595	Argument	""","""		522531	1					
ANR	522596	PrimaryExpression	""","""		522531	0					
ANR	522597	Argument	& strtok_buf		522531	2					
ANR	522598	UnaryOperationExpression	& strtok_buf		522531	0					
ANR	522599	UnaryOperator	&		522531	0					
ANR	522600	Identifier	strtok_buf		522531	1					
ANR	522601	ExpressionStatement	"minor = php_strtok_r ( NULL , "","" , & strtok_buf )"	53:1:1987:2031	522531	8	True				
ANR	522602	AssignmentExpression	"minor = php_strtok_r ( NULL , "","" , & strtok_buf )"		522531	0		=			
ANR	522603	Identifier	minor		522531	0					
ANR	522604	CallExpression	"php_strtok_r ( NULL , "","" , & strtok_buf )"		522531	1					
ANR	522605	Callee	php_strtok_r		522531	0					
ANR	522606	Identifier	php_strtok_r		522531	0					
ANR	522607	ArgumentList	NULL		522531	1					
ANR	522608	Argument	NULL		522531	0					
ANR	522609	Identifier	NULL		522531	0					
ANR	522610	Argument	""","""		522531	1					
ANR	522611	PrimaryExpression	""","""		522531	0					
ANR	522612	Argument	& strtok_buf		522531	2					
ANR	522613	UnaryOperationExpression	& strtok_buf		522531	0					
ANR	522614	UnaryOperator	&		522531	0					
ANR	522615	Identifier	strtok_buf		522531	1					
ANR	522616	ExpressionStatement	"p = php_com_string_to_olestring ( search_string , strlen ( search_string ) , codepage )"	55:1:2035:2114	522531	9	True				
ANR	522617	AssignmentExpression	"p = php_com_string_to_olestring ( search_string , strlen ( search_string ) , codepage )"		522531	0		=			
ANR	522618	Identifier	p		522531	0					
ANR	522619	CallExpression	"php_com_string_to_olestring ( search_string , strlen ( search_string ) , codepage )"		522531	1					
ANR	522620	Callee	php_com_string_to_olestring		522531	0					
ANR	522621	Identifier	php_com_string_to_olestring		522531	0					
ANR	522622	ArgumentList	search_string		522531	1					
ANR	522623	Argument	search_string		522531	0					
ANR	522624	Identifier	search_string		522531	0					
ANR	522625	Argument	strlen ( search_string )		522531	1					
ANR	522626	CallExpression	strlen ( search_string )		522531	0					
ANR	522627	Callee	strlen		522531	0					
ANR	522628	Identifier	strlen		522531	0					
ANR	522629	ArgumentList	search_string		522531	1					
ANR	522630	Argument	search_string		522531	0					
ANR	522631	Identifier	search_string		522531	0					
ANR	522632	Argument	codepage		522531	2					
ANR	522633	Identifier	codepage		522531	0					
ANR	522634	IfStatement	"if ( SUCCEEDED ( CLSIDFromString ( p , & clsid ) ) )"		522531	10					
ANR	522635	Condition	"SUCCEEDED ( CLSIDFromString ( p , & clsid ) )"	57:5:2122:2158	522531	0	True				
ANR	522636	CallExpression	"SUCCEEDED ( CLSIDFromString ( p , & clsid ) )"		522531	0					
ANR	522637	Callee	SUCCEEDED		522531	0					
ANR	522638	Identifier	SUCCEEDED		522531	0					
ANR	522639	ArgumentList	"CLSIDFromString ( p , & clsid )"		522531	1					
ANR	522640	Argument	"CLSIDFromString ( p , & clsid )"		522531	0					
ANR	522641	CallExpression	"CLSIDFromString ( p , & clsid )"		522531	0					
ANR	522642	Callee	CLSIDFromString		522531	0					
ANR	522643	Identifier	CLSIDFromString		522531	0					
ANR	522644	ArgumentList	p		522531	1					
ANR	522645	Argument	p		522531	0					
ANR	522646	Identifier	p		522531	0					
ANR	522647	Argument	& clsid		522531	1					
ANR	522648	UnaryOperationExpression	& clsid		522531	0					
ANR	522649	UnaryOperator	&		522531	0					
ANR	522650	Identifier	clsid		522531	1					
ANR	522651	CompoundStatement		20:2:439:468	522531	1					
ANR	522652	IdentifierDeclStatement	"WORD major_i = 1 , minor_i = 0 ;"	58:2:2165:2194	522531	0	True				
ANR	522653	IdentifierDecl	major_i = 1		522531	0					
ANR	522654	IdentifierDeclType	WORD		522531	0					
ANR	522655	Identifier	major_i		522531	1					
ANR	522656	AssignmentExpression	major_i = 1		522531	2		=			
ANR	522657	Identifier	major_i		522531	0					
ANR	522658	PrimaryExpression	1		522531	1					
ANR	522659	IdentifierDecl	minor_i = 0		522531	1					
ANR	522660	IdentifierDeclType	WORD		522531	0					
ANR	522661	Identifier	minor_i		522531	1					
ANR	522662	AssignmentExpression	minor_i = 0		522531	2		=			
ANR	522663	Identifier	minor_i		522531	0					
ANR	522664	PrimaryExpression	0		522531	1					
ANR	522665	IfStatement	if ( major && minor )		522531	1					
ANR	522666	Condition	major && minor	61:6:2278:2291	522531	0	True				
ANR	522667	AndExpression	major && minor		522531	0		&&			
ANR	522668	Identifier	major		522531	0					
ANR	522669	Identifier	minor		522531	1					
ANR	522670	CompoundStatement		23:22:568:568	522531	1					
ANR	522671	ExpressionStatement	major_i = ( WORD ) atoi ( major )	62:3:2299:2326	522531	0	True				
ANR	522672	AssignmentExpression	major_i = ( WORD ) atoi ( major )		522531	0		=			
ANR	522673	Identifier	major_i		522531	0					
ANR	522674	CastExpression	( WORD ) atoi ( major )		522531	1					
ANR	522675	CastTarget	WORD		522531	0					
ANR	522676	CallExpression	atoi ( major )		522531	1					
ANR	522677	Callee	atoi		522531	0					
ANR	522678	Identifier	atoi		522531	0					
ANR	522679	ArgumentList	major		522531	1					
ANR	522680	Argument	major		522531	0					
ANR	522681	Identifier	major		522531	0					
ANR	522682	ExpressionStatement	minor_i = ( WORD ) atoi ( minor )	63:3:2331:2358	522531	1	True				
ANR	522683	AssignmentExpression	minor_i = ( WORD ) atoi ( minor )		522531	0		=			
ANR	522684	Identifier	minor_i		522531	0					
ANR	522685	CastExpression	( WORD ) atoi ( minor )		522531	1					
ANR	522686	CastTarget	WORD		522531	0					
ANR	522687	CallExpression	atoi ( minor )		522531	1					
ANR	522688	Callee	atoi		522531	0					
ANR	522689	Identifier	atoi		522531	0					
ANR	522690	ArgumentList	minor		522531	1					
ANR	522691	Argument	minor		522531	0					
ANR	522692	Identifier	minor		522531	0					
ANR	522693	ExpressionStatement	"hr = LoadRegTypeLib ( ( REFGUID ) & clsid , major_i , minor_i , LANG_NEUTRAL , & TL )"	67:2:2400:2473	522531	2	True				
ANR	522694	AssignmentExpression	"hr = LoadRegTypeLib ( ( REFGUID ) & clsid , major_i , minor_i , LANG_NEUTRAL , & TL )"		522531	0		=			
ANR	522695	Identifier	hr		522531	0					
ANR	522696	CallExpression	"LoadRegTypeLib ( ( REFGUID ) & clsid , major_i , minor_i , LANG_NEUTRAL , & TL )"		522531	1					
ANR	522697	Callee	LoadRegTypeLib		522531	0					
ANR	522698	Identifier	LoadRegTypeLib		522531	0					
ANR	522699	ArgumentList	( REFGUID ) & clsid		522531	1					
ANR	522700	Argument	( REFGUID ) & clsid		522531	0					
ANR	522701	CastExpression	( REFGUID ) & clsid		522531	0					
ANR	522702	CastTarget	REFGUID		522531	0					
ANR	522703	UnaryOperationExpression	& clsid		522531	1					
ANR	522704	UnaryOperator	&		522531	0					
ANR	522705	Identifier	clsid		522531	1					
ANR	522706	Argument	major_i		522531	1					
ANR	522707	Identifier	major_i		522531	0					
ANR	522708	Argument	minor_i		522531	2					
ANR	522709	Identifier	minor_i		522531	0					
ANR	522710	Argument	LANG_NEUTRAL		522531	3					
ANR	522711	Identifier	LANG_NEUTRAL		522531	0					
ANR	522712	Argument	& TL		522531	4					
ANR	522713	UnaryOperationExpression	& TL		522531	0					
ANR	522714	UnaryOperator	&		522531	0					
ANR	522715	Identifier	TL		522531	1					
ANR	522716	IfStatement	if ( FAILED ( hr ) && ( major == NULL || minor == NULL ) )		522531	3					
ANR	522717	Condition	FAILED ( hr ) && ( major == NULL || minor == NULL )	71:6:2614:2659	522531	0	True				
ANR	522718	AndExpression	FAILED ( hr ) && ( major == NULL || minor == NULL )		522531	0		&&			
ANR	522719	CallExpression	FAILED ( hr )		522531	0					
ANR	522720	Callee	FAILED		522531	0					
ANR	522721	Identifier	FAILED		522531	0					
ANR	522722	ArgumentList	hr		522531	1					
ANR	522723	Argument	hr		522531	0					
ANR	522724	Identifier	hr		522531	0					
ANR	522725	OrExpression	major == NULL || minor == NULL		522531	1		||			
ANR	522726	EqualityExpression	major == NULL		522531	0		==			
ANR	522727	Identifier	major		522531	0					
ANR	522728	Identifier	NULL		522531	1					
ANR	522729	EqualityExpression	minor == NULL		522531	1		==			
ANR	522730	Identifier	minor		522531	0					
ANR	522731	Identifier	NULL		522531	1					
ANR	522732	CompoundStatement		36:3:995:1003	522531	1					
ANR	522733	IdentifierDeclStatement	IDispatch * disp = NULL ;	72:3:2667:2689	522531	0	True				
ANR	522734	IdentifierDecl	* disp = NULL		522531	0					
ANR	522735	IdentifierDeclType	IDispatch *		522531	0					
ANR	522736	Identifier	disp		522531	1					
ANR	522737	AssignmentExpression	* disp = NULL		522531	2		=			
ANR	522738	Identifier	NULL		522531	0					
ANR	522739	Identifier	NULL		522531	1					
ANR	522740	IdentifierDeclStatement	ITypeInfo * info = NULL ;	73:3:2694:2716	522531	1	True				
ANR	522741	IdentifierDecl	* info = NULL		522531	0					
ANR	522742	IdentifierDeclType	ITypeInfo *		522531	0					
ANR	522743	Identifier	info		522531	1					
ANR	522744	AssignmentExpression	* info = NULL		522531	2		=			
ANR	522745	Identifier	NULL		522531	0					
ANR	522746	Identifier	NULL		522531	1					
ANR	522747	IdentifierDeclStatement	UINT idx ;	74:3:2721:2729	522531	2	True				
ANR	522748	IdentifierDecl	idx		522531	0					
ANR	522749	IdentifierDeclType	UINT		522531	0					
ANR	522750	Identifier	idx		522531	1					
ANR	522751	IfStatement	"if ( SUCCEEDED ( hr = CoCreateInstance ( & clsid , NULL , CLSCTX_SERVER , & IID_IDispatch , ( LPVOID * ) & disp ) ) && SUCCEEDED ( hr = IDispatch_GetTypeInfo ( disp , 0 , LANG_NEUTRAL , & info ) ) )"		522531	3					
ANR	522752	Condition	"SUCCEEDED ( hr = CoCreateInstance ( & clsid , NULL , CLSCTX_SERVER , & IID_IDispatch , ( LPVOID * ) & disp ) ) && SUCCEEDED ( hr = IDispatch_GetTypeInfo ( disp , 0 , LANG_NEUTRAL , & info ) )"	76:7:2739:2907	522531	0	True				
ANR	522753	AndExpression	"SUCCEEDED ( hr = CoCreateInstance ( & clsid , NULL , CLSCTX_SERVER , & IID_IDispatch , ( LPVOID * ) & disp ) ) && SUCCEEDED ( hr = IDispatch_GetTypeInfo ( disp , 0 , LANG_NEUTRAL , & info ) )"		522531	0		&&			
ANR	522754	CallExpression	"SUCCEEDED ( hr = CoCreateInstance ( & clsid , NULL , CLSCTX_SERVER , & IID_IDispatch , ( LPVOID * ) & disp ) )"		522531	0					
ANR	522755	Callee	SUCCEEDED		522531	0					
ANR	522756	Identifier	SUCCEEDED		522531	0					
ANR	522757	ArgumentList	"hr = CoCreateInstance ( & clsid , NULL , CLSCTX_SERVER , & IID_IDispatch , ( LPVOID * ) & disp )"		522531	1					
ANR	522758	Argument	"hr = CoCreateInstance ( & clsid , NULL , CLSCTX_SERVER , & IID_IDispatch , ( LPVOID * ) & disp )"		522531	0					
ANR	522759	AssignmentExpression	"hr = CoCreateInstance ( & clsid , NULL , CLSCTX_SERVER , & IID_IDispatch , ( LPVOID * ) & disp )"		522531	0		=			
ANR	522760	Identifier	hr		522531	0					
ANR	522761	CallExpression	"CoCreateInstance ( & clsid , NULL , CLSCTX_SERVER , & IID_IDispatch , ( LPVOID * ) & disp )"		522531	1					
ANR	522762	Callee	CoCreateInstance		522531	0					
ANR	522763	Identifier	CoCreateInstance		522531	0					
ANR	522764	ArgumentList	& clsid		522531	1					
ANR	522765	Argument	& clsid		522531	0					
ANR	522766	UnaryOperationExpression	& clsid		522531	0					
ANR	522767	UnaryOperator	&		522531	0					
ANR	522768	Identifier	clsid		522531	1					
ANR	522769	Argument	NULL		522531	1					
ANR	522770	Identifier	NULL		522531	0					
ANR	522771	Argument	CLSCTX_SERVER		522531	2					
ANR	522772	Identifier	CLSCTX_SERVER		522531	0					
ANR	522773	Argument	& IID_IDispatch		522531	3					
ANR	522774	UnaryOperationExpression	& IID_IDispatch		522531	0					
ANR	522775	UnaryOperator	&		522531	0					
ANR	522776	Identifier	IID_IDispatch		522531	1					
ANR	522777	Argument	( LPVOID * ) & disp		522531	4					
ANR	522778	CastExpression	( LPVOID * ) & disp		522531	0					
ANR	522779	CastTarget	LPVOID *		522531	0					
ANR	522780	UnaryOperationExpression	& disp		522531	1					
ANR	522781	UnaryOperator	&		522531	0					
ANR	522782	Identifier	disp		522531	1					
ANR	522783	CallExpression	"SUCCEEDED ( hr = IDispatch_GetTypeInfo ( disp , 0 , LANG_NEUTRAL , & info ) )"		522531	1					
ANR	522784	Callee	SUCCEEDED		522531	0					
ANR	522785	Identifier	SUCCEEDED		522531	0					
ANR	522786	ArgumentList	"hr = IDispatch_GetTypeInfo ( disp , 0 , LANG_NEUTRAL , & info )"		522531	1					
ANR	522787	Argument	"hr = IDispatch_GetTypeInfo ( disp , 0 , LANG_NEUTRAL , & info )"		522531	0					
ANR	522788	AssignmentExpression	"hr = IDispatch_GetTypeInfo ( disp , 0 , LANG_NEUTRAL , & info )"		522531	0		=			
ANR	522789	Identifier	hr		522531	0					
ANR	522790	CallExpression	"IDispatch_GetTypeInfo ( disp , 0 , LANG_NEUTRAL , & info )"		522531	1					
ANR	522791	Callee	IDispatch_GetTypeInfo		522531	0					
ANR	522792	Identifier	IDispatch_GetTypeInfo		522531	0					
ANR	522793	ArgumentList	disp		522531	1					
ANR	522794	Argument	disp		522531	0					
ANR	522795	Identifier	disp		522531	0					
ANR	522796	Argument	0		522531	1					
ANR	522797	PrimaryExpression	0		522531	0					
ANR	522798	Argument	LANG_NEUTRAL		522531	2					
ANR	522799	Identifier	LANG_NEUTRAL		522531	0					
ANR	522800	Argument	& info		522531	3					
ANR	522801	UnaryOperationExpression	& info		522531	0					
ANR	522802	UnaryOperator	&		522531	0					
ANR	522803	Identifier	info		522531	1					
ANR	522804	CompoundStatement		39:74:1184:1184	522531	1					
ANR	522805	ExpressionStatement	"hr = ITypeInfo_GetContainingTypeLib ( info , & TL , & idx )"	78:4:2916:2968	522531	0	True				
ANR	522806	AssignmentExpression	"hr = ITypeInfo_GetContainingTypeLib ( info , & TL , & idx )"		522531	0		=			
ANR	522807	Identifier	hr		522531	0					
ANR	522808	CallExpression	"ITypeInfo_GetContainingTypeLib ( info , & TL , & idx )"		522531	1					
ANR	522809	Callee	ITypeInfo_GetContainingTypeLib		522531	0					
ANR	522810	Identifier	ITypeInfo_GetContainingTypeLib		522531	0					
ANR	522811	ArgumentList	info		522531	1					
ANR	522812	Argument	info		522531	0					
ANR	522813	Identifier	info		522531	0					
ANR	522814	Argument	& TL		522531	1					
ANR	522815	UnaryOperationExpression	& TL		522531	0					
ANR	522816	UnaryOperator	&		522531	0					
ANR	522817	Identifier	TL		522531	1					
ANR	522818	Argument	& idx		522531	2					
ANR	522819	UnaryOperationExpression	& idx		522531	0					
ANR	522820	UnaryOperator	&		522531	0					
ANR	522821	Identifier	idx		522531	1					
ANR	522822	IfStatement	if ( info )		522531	4					
ANR	522823	Condition	info	81:7:2983:2986	522531	0	True				
ANR	522824	Identifier	info		522531	0					
ANR	522825	CompoundStatement		43:13:1263:1263	522531	1					
ANR	522826	ExpressionStatement	ITypeInfo_Release ( info )	82:4:2995:3018	522531	0	True				
ANR	522827	CallExpression	ITypeInfo_Release ( info )		522531	0					
ANR	522828	Callee	ITypeInfo_Release		522531	0					
ANR	522829	Identifier	ITypeInfo_Release		522531	0					
ANR	522830	ArgumentList	info		522531	1					
ANR	522831	Argument	info		522531	0					
ANR	522832	Identifier	info		522531	0					
ANR	522833	IfStatement	if ( disp )		522531	5					
ANR	522834	Condition	disp	84:7:3032:3035	522531	0	True				
ANR	522835	Identifier	disp		522531	0					
ANR	522836	CompoundStatement		46:13:1312:1312	522531	1					
ANR	522837	ExpressionStatement	IDispatch_Release ( disp )	85:4:3044:3067	522531	0	True				
ANR	522838	CallExpression	IDispatch_Release ( disp )		522531	0					
ANR	522839	Callee	IDispatch_Release		522531	0					
ANR	522840	Identifier	IDispatch_Release		522531	0					
ANR	522841	ArgumentList	disp		522531	1					
ANR	522842	Argument	disp		522531	0					
ANR	522843	Identifier	disp		522531	0					
ANR	522844	ElseStatement	else		522531	0					
ANR	522845	CompoundStatement		50:8:1360:1360	522531	0					
ANR	522846	IfStatement	"if ( FAILED ( LoadTypeLib ( p , & TL ) ) )"		522531	0					
ANR	522847	Condition	"FAILED ( LoadTypeLib ( p , & TL ) )"	91:6:3191:3217	522531	0	True				
ANR	522848	CallExpression	"FAILED ( LoadTypeLib ( p , & TL ) )"		522531	0					
ANR	522849	Callee	FAILED		522531	0					
ANR	522850	Identifier	FAILED		522531	0					
ANR	522851	ArgumentList	"LoadTypeLib ( p , & TL )"		522531	1					
ANR	522852	Argument	"LoadTypeLib ( p , & TL )"		522531	0					
ANR	522853	CallExpression	"LoadTypeLib ( p , & TL )"		522531	0					
ANR	522854	Callee	LoadTypeLib		522531	0					
ANR	522855	Identifier	LoadTypeLib		522531	0					
ANR	522856	ArgumentList	p		522531	1					
ANR	522857	Argument	p		522531	0					
ANR	522858	Identifier	p		522531	0					
ANR	522859	Argument	& TL		522531	1					
ANR	522860	UnaryOperationExpression	& TL		522531	0					
ANR	522861	UnaryOperator	&		522531	0					
ANR	522862	Identifier	TL		522531	1					
ANR	522863	CompoundStatement		61:3:1659:1674	522531	1					
ANR	522864	IdentifierDeclStatement	"HKEY hkey , hsubkey ;"	92:3:3225:3243	522531	0	True				
ANR	522865	IdentifierDecl	hkey		522531	0					
ANR	522866	IdentifierDeclType	HKEY		522531	0					
ANR	522867	Identifier	hkey		522531	1					
ANR	522868	IdentifierDecl	hsubkey		522531	1					
ANR	522869	IdentifierDeclType	HKEY		522531	0					
ANR	522870	Identifier	hsubkey		522531	1					
ANR	522871	IdentifierDeclStatement	"DWORD SubKeys , MaxSubKeyLength ;"	93:3:3248:3278	522531	1	True				
ANR	522872	IdentifierDecl	SubKeys		522531	0					
ANR	522873	IdentifierDeclType	DWORD		522531	0					
ANR	522874	Identifier	SubKeys		522531	1					
ANR	522875	IdentifierDecl	MaxSubKeyLength		522531	1					
ANR	522876	IdentifierDeclType	DWORD		522531	0					
ANR	522877	Identifier	MaxSubKeyLength		522531	1					
ANR	522878	IdentifierDeclStatement	char * keyname ;	94:3:3283:3296	522531	2	True				
ANR	522879	IdentifierDecl	* keyname		522531	0					
ANR	522880	IdentifierDeclType	char *		522531	0					
ANR	522881	Identifier	keyname		522531	1					
ANR	522882	IdentifierDeclStatement	"unsigned int i , j ;"	95:3:3301:3318	522531	3	True				
ANR	522883	IdentifierDecl	i		522531	0					
ANR	522884	IdentifierDeclType	unsigned int		522531	0					
ANR	522885	Identifier	i		522531	1					
ANR	522886	IdentifierDecl	j		522531	1					
ANR	522887	IdentifierDeclType	unsigned int		522531	0					
ANR	522888	Identifier	j		522531	1					
ANR	522889	IdentifierDeclStatement	DWORD VersionCount ;	96:3:3323:3341	522531	4	True				
ANR	522890	IdentifierDecl	VersionCount		522531	0					
ANR	522891	IdentifierDeclType	DWORD		522531	0					
ANR	522892	Identifier	VersionCount		522531	1					
ANR	522893	IdentifierDeclStatement	char version [ 20 ] ;	97:3:3346:3362	522531	5	True				
ANR	522894	IdentifierDecl	version [ 20 ]		522531	0					
ANR	522895	IdentifierDeclType	char [ 20 ]		522531	0					
ANR	522896	Identifier	version		522531	1					
ANR	522897	PrimaryExpression	20		522531	2					
ANR	522898	IdentifierDeclStatement	char * libname ;	98:3:3367:3380	522531	6	True				
ANR	522899	IdentifierDecl	* libname		522531	0					
ANR	522900	IdentifierDeclType	char *		522531	0					
ANR	522901	Identifier	libname		522531	1					
ANR	522902	IdentifierDeclStatement	long libnamelen ;	99:3:3385:3400	522531	7	True				
ANR	522903	IdentifierDecl	libnamelen		522531	0					
ANR	522904	IdentifierDeclType	long		522531	0					
ANR	522905	Identifier	libnamelen		522531	1					
ANR	522906	IfStatement	"if ( ERROR_SUCCESS == RegOpenKeyEx ( HKEY_CLASSES_ROOT , ""TypeLib"" , 0 , KEY_READ , & hkey ) && ERROR_SUCCESS == RegQueryInfoKey ( hkey , NULL , NULL , NULL , & SubKeys , & MaxSubKeyLength , NULL , NULL , NULL , NULL , NULL , NULL ) )"		522531	8					
ANR	522907	Condition	"ERROR_SUCCESS == RegOpenKeyEx ( HKEY_CLASSES_ROOT , ""TypeLib"" , 0 , KEY_READ , & hkey ) && ERROR_SUCCESS == RegQueryInfoKey ( hkey , NULL , NULL , NULL , & SubKeys , & MaxSubKeyLength , NULL , NULL , NULL , NULL , NULL , NULL )"	101:7:3410:3622	522531	0	True				
ANR	522908	AndExpression	"ERROR_SUCCESS == RegOpenKeyEx ( HKEY_CLASSES_ROOT , ""TypeLib"" , 0 , KEY_READ , & hkey ) && ERROR_SUCCESS == RegQueryInfoKey ( hkey , NULL , NULL , NULL , & SubKeys , & MaxSubKeyLength , NULL , NULL , NULL , NULL , NULL , NULL )"		522531	0		&&			
ANR	522909	EqualityExpression	"ERROR_SUCCESS == RegOpenKeyEx ( HKEY_CLASSES_ROOT , ""TypeLib"" , 0 , KEY_READ , & hkey )"		522531	0		==			
ANR	522910	Identifier	ERROR_SUCCESS		522531	0					
ANR	522911	CallExpression	"RegOpenKeyEx ( HKEY_CLASSES_ROOT , ""TypeLib"" , 0 , KEY_READ , & hkey )"		522531	1					
ANR	522912	Callee	RegOpenKeyEx		522531	0					
ANR	522913	Identifier	RegOpenKeyEx		522531	0					
ANR	522914	ArgumentList	HKEY_CLASSES_ROOT		522531	1					
ANR	522915	Argument	HKEY_CLASSES_ROOT		522531	0					
ANR	522916	Identifier	HKEY_CLASSES_ROOT		522531	0					
ANR	522917	Argument	"""TypeLib"""		522531	1					
ANR	522918	PrimaryExpression	"""TypeLib"""		522531	0					
ANR	522919	Argument	0		522531	2					
ANR	522920	PrimaryExpression	0		522531	0					
ANR	522921	Argument	KEY_READ		522531	3					
ANR	522922	Identifier	KEY_READ		522531	0					
ANR	522923	Argument	& hkey		522531	4					
ANR	522924	UnaryOperationExpression	& hkey		522531	0					
ANR	522925	UnaryOperator	&		522531	0					
ANR	522926	Identifier	hkey		522531	1					
ANR	522927	EqualityExpression	"ERROR_SUCCESS == RegQueryInfoKey ( hkey , NULL , NULL , NULL , & SubKeys , & MaxSubKeyLength , NULL , NULL , NULL , NULL , NULL , NULL )"		522531	1		==			
ANR	522928	Identifier	ERROR_SUCCESS		522531	0					
ANR	522929	CallExpression	"RegQueryInfoKey ( hkey , NULL , NULL , NULL , & SubKeys , & MaxSubKeyLength , NULL , NULL , NULL , NULL , NULL , NULL )"		522531	1					
ANR	522930	Callee	RegQueryInfoKey		522531	0					
ANR	522931	Identifier	RegQueryInfoKey		522531	0					
ANR	522932	ArgumentList	hkey		522531	1					
ANR	522933	Argument	hkey		522531	0					
ANR	522934	Identifier	hkey		522531	0					
ANR	522935	Argument	NULL		522531	1					
ANR	522936	Identifier	NULL		522531	0					
ANR	522937	Argument	NULL		522531	2					
ANR	522938	Identifier	NULL		522531	0					
ANR	522939	Argument	NULL		522531	3					
ANR	522940	Identifier	NULL		522531	0					
ANR	522941	Argument	& SubKeys		522531	4					
ANR	522942	UnaryOperationExpression	& SubKeys		522531	0					
ANR	522943	UnaryOperator	&		522531	0					
ANR	522944	Identifier	SubKeys		522531	1					
ANR	522945	Argument	& MaxSubKeyLength		522531	5					
ANR	522946	UnaryOperationExpression	& MaxSubKeyLength		522531	0					
ANR	522947	UnaryOperator	&		522531	0					
ANR	522948	Identifier	MaxSubKeyLength		522531	1					
ANR	522949	Argument	NULL		522531	6					
ANR	522950	Identifier	NULL		522531	0					
ANR	522951	Argument	NULL		522531	7					
ANR	522952	Identifier	NULL		522531	0					
ANR	522953	Argument	NULL		522531	8					
ANR	522954	Identifier	NULL		522531	0					
ANR	522955	Argument	NULL		522531	9					
ANR	522956	Identifier	NULL		522531	0					
ANR	522957	Argument	NULL		522531	10					
ANR	522958	Identifier	NULL		522531	0					
ANR	522959	Argument	NULL		522531	11					
ANR	522960	Identifier	NULL		522531	0					
ANR	522961	CompoundStatement		65:60:1899:1899	522531	1					
ANR	522962	ExpressionStatement	MaxSubKeyLength ++	105:4:3632:3649	522531	0	True				
ANR	522963	PostIncDecOperationExpression	MaxSubKeyLength ++		522531	0					
ANR	522964	Identifier	MaxSubKeyLength		522531	0					
ANR	522965	IncDec	++		522531	1					
ANR	522966	ExpressionStatement	keyname = emalloc ( MaxSubKeyLength )	106:4:3679:3713	522531	1	True				
ANR	522967	AssignmentExpression	keyname = emalloc ( MaxSubKeyLength )		522531	0		=			
ANR	522968	Identifier	keyname		522531	0					
ANR	522969	CallExpression	emalloc ( MaxSubKeyLength )		522531	1					
ANR	522970	Callee	emalloc		522531	0					
ANR	522971	Identifier	emalloc		522531	0					
ANR	522972	ArgumentList	MaxSubKeyLength		522531	1					
ANR	522973	Argument	MaxSubKeyLength		522531	0					
ANR	522974	Identifier	MaxSubKeyLength		522531	0					
ANR	522975	ExpressionStatement	libname = emalloc ( strlen ( search_string ) + 1 )	107:4:3719:3763	522531	2	True				
ANR	522976	AssignmentExpression	libname = emalloc ( strlen ( search_string ) + 1 )		522531	0		=			
ANR	522977	Identifier	libname		522531	0					
ANR	522978	CallExpression	emalloc ( strlen ( search_string ) + 1 )		522531	1					
ANR	522979	Callee	emalloc		522531	0					
ANR	522980	Identifier	emalloc		522531	0					
ANR	522981	ArgumentList	strlen ( search_string ) + 1		522531	1					
ANR	522982	Argument	strlen ( search_string ) + 1		522531	0					
ANR	522983	AdditiveExpression	strlen ( search_string ) + 1		522531	0		+			
ANR	522984	CallExpression	strlen ( search_string )		522531	0					
ANR	522985	Callee	strlen		522531	0					
ANR	522986	Identifier	strlen		522531	0					
ANR	522987	ArgumentList	search_string		522531	1					
ANR	522988	Argument	search_string		522531	0					
ANR	522989	Identifier	search_string		522531	0					
ANR	522990	PrimaryExpression	1		522531	1					
ANR	522991	ForStatement	for ( i = 0 ; i < SubKeys && TL == NULL ; i ++ )		522531	3					
ANR	522992	ForInit	i = 0 ;	109:9:3775:3780	522531	0	True				
ANR	522993	AssignmentExpression	i = 0		522531	0		=			
ANR	522994	Identifier	i		522531	0					
ANR	522995	PrimaryExpression	0		522531	1					
ANR	522996	Condition	i < SubKeys && TL == NULL	109:16:3782:3806	522531	1	True				
ANR	522997	AndExpression	i < SubKeys && TL == NULL		522531	0		&&			
ANR	522998	RelationalExpression	i < SubKeys		522531	0		<			
ANR	522999	Identifier	i		522531	0					
ANR	523000	Identifier	SubKeys		522531	1					
ANR	523001	EqualityExpression	TL == NULL		522531	1		==			
ANR	523002	Identifier	TL		522531	0					
ANR	523003	Identifier	NULL		522531	1					
ANR	523004	PostIncDecOperationExpression	i ++	109:43:3809:3811	522531	2	True				
ANR	523005	Identifier	i		522531	0					
ANR	523006	IncDec	++		522531	1					
ANR	523007	CompoundStatement		71:48:2088:2088	522531	3					
ANR	523008	IfStatement	"if ( ERROR_SUCCESS == RegEnumKey ( hkey , i , keyname , MaxSubKeyLength ) && ERROR_SUCCESS == RegOpenKeyEx ( hkey , keyname , 0 , KEY_READ , & hsubkey ) )"		522531	0					
ANR	523009	Condition	"ERROR_SUCCESS == RegEnumKey ( hkey , i , keyname , MaxSubKeyLength ) && ERROR_SUCCESS == RegOpenKeyEx ( hkey , keyname , 0 , KEY_READ , & hsubkey )"	110:9:3825:3964	522531	0	True				
ANR	523010	AndExpression	"ERROR_SUCCESS == RegEnumKey ( hkey , i , keyname , MaxSubKeyLength ) && ERROR_SUCCESS == RegOpenKeyEx ( hkey , keyname , 0 , KEY_READ , & hsubkey )"		522531	0		&&			
ANR	523011	EqualityExpression	"ERROR_SUCCESS == RegEnumKey ( hkey , i , keyname , MaxSubKeyLength )"		522531	0		==			
ANR	523012	Identifier	ERROR_SUCCESS		522531	0					
ANR	523013	CallExpression	"RegEnumKey ( hkey , i , keyname , MaxSubKeyLength )"		522531	1					
ANR	523014	Callee	RegEnumKey		522531	0					
ANR	523015	Identifier	RegEnumKey		522531	0					
ANR	523016	ArgumentList	hkey		522531	1					
ANR	523017	Argument	hkey		522531	0					
ANR	523018	Identifier	hkey		522531	0					
ANR	523019	Argument	i		522531	1					
ANR	523020	Identifier	i		522531	0					
ANR	523021	Argument	keyname		522531	2					
ANR	523022	Identifier	keyname		522531	0					
ANR	523023	Argument	MaxSubKeyLength		522531	3					
ANR	523024	Identifier	MaxSubKeyLength		522531	0					
ANR	523025	EqualityExpression	"ERROR_SUCCESS == RegOpenKeyEx ( hkey , keyname , 0 , KEY_READ , & hsubkey )"		522531	1		==			
ANR	523026	Identifier	ERROR_SUCCESS		522531	0					
ANR	523027	CallExpression	"RegOpenKeyEx ( hkey , keyname , 0 , KEY_READ , & hsubkey )"		522531	1					
ANR	523028	Callee	RegOpenKeyEx		522531	0					
ANR	523029	Identifier	RegOpenKeyEx		522531	0					
ANR	523030	ArgumentList	hkey		522531	1					
ANR	523031	Argument	hkey		522531	0					
ANR	523032	Identifier	hkey		522531	0					
ANR	523033	Argument	keyname		522531	1					
ANR	523034	Identifier	keyname		522531	0					
ANR	523035	Argument	0		522531	2					
ANR	523036	PrimaryExpression	0		522531	0					
ANR	523037	Argument	KEY_READ		522531	3					
ANR	523038	Identifier	KEY_READ		522531	0					
ANR	523039	Argument	& hsubkey		522531	4					
ANR	523040	UnaryOperationExpression	& hsubkey		522531	0					
ANR	523041	UnaryOperator	&		522531	0					
ANR	523042	Identifier	hsubkey		522531	1					
ANR	523043	CompoundStatement		73:76:2241:2241	522531	1					
ANR	523044	IfStatement	"if ( ERROR_SUCCESS == RegQueryInfoKey ( hsubkey , NULL , NULL , NULL , & VersionCount , NULL , NULL , NULL , NULL , NULL , NULL , NULL ) )"		522531	0					
ANR	523045	Condition	"ERROR_SUCCESS == RegQueryInfoKey ( hsubkey , NULL , NULL , NULL , & VersionCount , NULL , NULL , NULL , NULL , NULL , NULL , NULL )"	112:10:3979:4102	522531	0	True				
ANR	523046	EqualityExpression	"ERROR_SUCCESS == RegQueryInfoKey ( hsubkey , NULL , NULL , NULL , & VersionCount , NULL , NULL , NULL , NULL , NULL , NULL , NULL )"		522531	0		==			
ANR	523047	Identifier	ERROR_SUCCESS		522531	0					
ANR	523048	CallExpression	"RegQueryInfoKey ( hsubkey , NULL , NULL , NULL , & VersionCount , NULL , NULL , NULL , NULL , NULL , NULL , NULL )"		522531	1					
ANR	523049	Callee	RegQueryInfoKey		522531	0					
ANR	523050	Identifier	RegQueryInfoKey		522531	0					
ANR	523051	ArgumentList	hsubkey		522531	1					
ANR	523052	Argument	hsubkey		522531	0					
ANR	523053	Identifier	hsubkey		522531	0					
ANR	523054	Argument	NULL		522531	1					
ANR	523055	Identifier	NULL		522531	0					
ANR	523056	Argument	NULL		522531	2					
ANR	523057	Identifier	NULL		522531	0					
ANR	523058	Argument	NULL		522531	3					
ANR	523059	Identifier	NULL		522531	0					
ANR	523060	Argument	& VersionCount		522531	4					
ANR	523061	UnaryOperationExpression	& VersionCount		522531	0					
ANR	523062	UnaryOperator	&		522531	0					
ANR	523063	Identifier	VersionCount		522531	1					
ANR	523064	Argument	NULL		522531	5					
ANR	523065	Identifier	NULL		522531	0					
ANR	523066	Argument	NULL		522531	6					
ANR	523067	Identifier	NULL		522531	0					
ANR	523068	Argument	NULL		522531	7					
ANR	523069	Identifier	NULL		522531	0					
ANR	523070	Argument	NULL		522531	8					
ANR	523071	Identifier	NULL		522531	0					
ANR	523072	Argument	NULL		522531	9					
ANR	523073	Identifier	NULL		522531	0					
ANR	523074	Argument	NULL		522531	10					
ANR	523075	Identifier	NULL		522531	0					
ANR	523076	Argument	NULL		522531	11					
ANR	523077	Identifier	NULL		522531	0					
ANR	523078	CompoundStatement		75:51:2379:2379	522531	1					
ANR	523079	ForStatement	for ( j = 0 ; j < VersionCount ; j ++ )		522531	0					
ANR	523080	ForInit	j = 0 ;	114:12:4119:4124	522531	0	True				
ANR	523081	AssignmentExpression	j = 0		522531	0		=			
ANR	523082	Identifier	j		522531	0					
ANR	523083	PrimaryExpression	0		522531	1					
ANR	523084	Condition	j < VersionCount	114:19:4126:4141	522531	1	True				
ANR	523085	RelationalExpression	j < VersionCount		522531	0		<			
ANR	523086	Identifier	j		522531	0					
ANR	523087	Identifier	VersionCount		522531	1					
ANR	523088	PostIncDecOperationExpression	j ++	114:37:4144:4146	522531	2	True				
ANR	523089	Identifier	j		522531	0					
ANR	523090	IncDec	++		522531	1					
ANR	523091	CompoundStatement		76:42:2423:2423	522531	3					
ANR	523092	IfStatement	"if ( ERROR_SUCCESS != RegEnumKey ( hsubkey , j , version , sizeof ( version ) ) )"		522531	0					
ANR	523093	Condition	"ERROR_SUCCESS != RegEnumKey ( hsubkey , j , version , sizeof ( version ) )"	115:12:4163:4227	522531	0	True				
ANR	523094	EqualityExpression	"ERROR_SUCCESS != RegEnumKey ( hsubkey , j , version , sizeof ( version ) )"		522531	0		!=			
ANR	523095	Identifier	ERROR_SUCCESS		522531	0					
ANR	523096	CallExpression	"RegEnumKey ( hsubkey , j , version , sizeof ( version ) )"		522531	1					
ANR	523097	Callee	RegEnumKey		522531	0					
ANR	523098	Identifier	RegEnumKey		522531	0					
ANR	523099	ArgumentList	hsubkey		522531	1					
ANR	523100	Argument	hsubkey		522531	0					
ANR	523101	Identifier	hsubkey		522531	0					
ANR	523102	Argument	j		522531	1					
ANR	523103	Identifier	j		522531	0					
ANR	523104	Argument	version		522531	2					
ANR	523105	Identifier	version		522531	0					
ANR	523106	Argument	sizeof ( version )		522531	3					
ANR	523107	SizeofExpression	sizeof ( version )		522531	0					
ANR	523108	Sizeof	sizeof		522531	0					
ANR	523109	SizeofOperand	version		522531	1					
ANR	523110	CompoundStatement		77:79:2504:2504	522531	1					
ANR	523111	ContinueStatement	continue ;	116:9:4241:4249	522531	0	True				
ANR	523112	ExpressionStatement	libnamelen = ( long ) strlen ( search_string ) + 1	119:8:4330:4372	522531	1	True				
ANR	523113	AssignmentExpression	libnamelen = ( long ) strlen ( search_string ) + 1		522531	0		=			
ANR	523114	Identifier	libnamelen		522531	0					
ANR	523115	AdditiveExpression	( long ) strlen ( search_string ) + 1		522531	1		+			
ANR	523116	CastExpression	( long ) strlen ( search_string )		522531	0					
ANR	523117	CastTarget	long		522531	0					
ANR	523118	CallExpression	strlen ( search_string )		522531	1					
ANR	523119	Callee	strlen		522531	0					
ANR	523120	Identifier	strlen		522531	0					
ANR	523121	ArgumentList	search_string		522531	1					
ANR	523122	Argument	search_string		522531	0					
ANR	523123	Identifier	search_string		522531	0					
ANR	523124	PrimaryExpression	1		522531	1					
ANR	523125	IfStatement	"if ( ERROR_SUCCESS == RegQueryValue ( hsubkey , version , libname , & libnamelen ) )"		522531	2					
ANR	523126	Condition	"ERROR_SUCCESS == RegQueryValue ( hsubkey , version , libname , & libnamelen )"	120:12:4386:4455	522531	0	True				
ANR	523127	EqualityExpression	"ERROR_SUCCESS == RegQueryValue ( hsubkey , version , libname , & libnamelen )"		522531	0		==			
ANR	523128	Identifier	ERROR_SUCCESS		522531	0					
ANR	523129	CallExpression	"RegQueryValue ( hsubkey , version , libname , & libnamelen )"		522531	1					
ANR	523130	Callee	RegQueryValue		522531	0					
ANR	523131	Identifier	RegQueryValue		522531	0					
ANR	523132	ArgumentList	hsubkey		522531	1					
ANR	523133	Argument	hsubkey		522531	0					
ANR	523134	Identifier	hsubkey		522531	0					
ANR	523135	Argument	version		522531	1					
ANR	523136	Identifier	version		522531	0					
ANR	523137	Argument	libname		522531	2					
ANR	523138	Identifier	libname		522531	0					
ANR	523139	Argument	& libnamelen		522531	3					
ANR	523140	UnaryOperationExpression	& libnamelen		522531	0					
ANR	523141	UnaryOperator	&		522531	0					
ANR	523142	Identifier	libnamelen		522531	1					
ANR	523143	CompoundStatement		82:84:2732:2732	522531	1					
ANR	523144	IfStatement	"if ( 0 == stricmp ( libname , search_string ) )"		522531	0					
ANR	523145	Condition	"0 == stricmp ( libname , search_string )"	121:13:4473:4508	522531	0	True				
ANR	523146	EqualityExpression	"0 == stricmp ( libname , search_string )"		522531	0		==			
ANR	523147	PrimaryExpression	0		522531	0					
ANR	523148	CallExpression	"stricmp ( libname , search_string )"		522531	1					
ANR	523149	Callee	stricmp		522531	0					
ANR	523150	Identifier	stricmp		522531	0					
ANR	523151	ArgumentList	libname		522531	1					
ANR	523152	Argument	libname		522531	0					
ANR	523153	Identifier	libname		522531	0					
ANR	523154	Argument	search_string		522531	1					
ANR	523155	Identifier	search_string		522531	0					
ANR	523156	CompoundStatement		85:10:2825:2849	522531	1					
ANR	523157	IdentifierDeclStatement	char * str = NULL ;	122:10:4523:4539	522531	0	True				
ANR	523158	IdentifierDecl	* str = NULL		522531	0					
ANR	523159	IdentifierDeclType	char *		522531	0					
ANR	523160	Identifier	str		522531	1					
ANR	523161	AssignmentExpression	* str = NULL		522531	2		=			
ANR	523162	Identifier	NULL		522531	0					
ANR	523163	Identifier	NULL		522531	1					
ANR	523164	IdentifierDeclStatement	"int major_tmp , minor_tmp ;"	123:10:4551:4575	522531	1	True				
ANR	523165	IdentifierDecl	major_tmp		522531	0					
ANR	523166	IdentifierDeclType	int		522531	0					
ANR	523167	Identifier	major_tmp		522531	1					
ANR	523168	IdentifierDecl	minor_tmp		522531	1					
ANR	523169	IdentifierDeclType	int		522531	0					
ANR	523170	Identifier	minor_tmp		522531	1					
ANR	523171	IfStatement	"if ( 2 != sscanf ( version , ""%d.%d"" , & major_tmp , & minor_tmp ) )"		522531	2					
ANR	523172	Condition	"2 != sscanf ( version , ""%d.%d"" , & major_tmp , & minor_tmp )"	126:14:4651:4703	522531	0	True				
ANR	523173	EqualityExpression	"2 != sscanf ( version , ""%d.%d"" , & major_tmp , & minor_tmp )"		522531	0		!=			
ANR	523174	PrimaryExpression	2		522531	0					
ANR	523175	CallExpression	"sscanf ( version , ""%d.%d"" , & major_tmp , & minor_tmp )"		522531	1					
ANR	523176	Callee	sscanf		522531	0					
ANR	523177	Identifier	sscanf		522531	0					
ANR	523178	ArgumentList	version		522531	1					
ANR	523179	Argument	version		522531	0					
ANR	523180	Identifier	version		522531	0					
ANR	523181	Argument	"""%d.%d"""		522531	1					
ANR	523182	PrimaryExpression	"""%d.%d"""		522531	0					
ANR	523183	Argument	& major_tmp		522531	2					
ANR	523184	UnaryOperationExpression	& major_tmp		522531	0					
ANR	523185	UnaryOperator	&		522531	0					
ANR	523186	Identifier	major_tmp		522531	1					
ANR	523187	Argument	& minor_tmp		522531	3					
ANR	523188	UnaryOperationExpression	& minor_tmp		522531	0					
ANR	523189	UnaryOperator	&		522531	0					
ANR	523190	Identifier	minor_tmp		522531	1					
ANR	523191	CompoundStatement		88:69:2980:2980	522531	1					
ANR	523192	ExpressionStatement	major_tmp = 1	127:11:4719:4732	522531	0	True				
ANR	523193	AssignmentExpression	major_tmp = 1		522531	0		=			
ANR	523194	Identifier	major_tmp		522531	0					
ANR	523195	PrimaryExpression	1		522531	1					
ANR	523196	ExpressionStatement	minor_tmp = 0	128:11:4745:4758	522531	1	True				
ANR	523197	AssignmentExpression	minor_tmp = 0		522531	0		=			
ANR	523198	Identifier	minor_tmp		522531	0					
ANR	523199	PrimaryExpression	0		522531	1					
ANR	523200	ExpressionStatement	"spprintf ( & str , 0 , ""%s,%d,%d"" , keyname , major_tmp , minor_tmp )"	130:10:4782:4842	522531	3	True				
ANR	523201	CallExpression	"spprintf ( & str , 0 , ""%s,%d,%d"" , keyname , major_tmp , minor_tmp )"		522531	0					
ANR	523202	Callee	spprintf		522531	0					
ANR	523203	Identifier	spprintf		522531	0					
ANR	523204	ArgumentList	& str		522531	1					
ANR	523205	Argument	& str		522531	0					
ANR	523206	UnaryOperationExpression	& str		522531	0					
ANR	523207	UnaryOperator	&		522531	0					
ANR	523208	Identifier	str		522531	1					
ANR	523209	Argument	0		522531	1					
ANR	523210	PrimaryExpression	0		522531	0					
ANR	523211	Argument	"""%s,%d,%d"""		522531	2					
ANR	523212	PrimaryExpression	"""%s,%d,%d"""		522531	0					
ANR	523213	Argument	keyname		522531	3					
ANR	523214	Identifier	keyname		522531	0					
ANR	523215	Argument	major_tmp		522531	4					
ANR	523216	Identifier	major_tmp		522531	0					
ANR	523217	Argument	minor_tmp		522531	5					
ANR	523218	Identifier	minor_tmp		522531	0					
ANR	523219	ExpressionStatement	"TL = php_com_load_typelib ( str , codepage )"	132:10:4878:4918	522531	4	True				
ANR	523220	AssignmentExpression	"TL = php_com_load_typelib ( str , codepage )"		522531	0		=			
ANR	523221	Identifier	TL		522531	0					
ANR	523222	CallExpression	"php_com_load_typelib ( str , codepage )"		522531	1					
ANR	523223	Callee	php_com_load_typelib		522531	0					
ANR	523224	Identifier	php_com_load_typelib		522531	0					
ANR	523225	ArgumentList	str		522531	1					
ANR	523226	Argument	str		522531	0					
ANR	523227	Identifier	str		522531	0					
ANR	523228	Argument	codepage		522531	1					
ANR	523229	Identifier	codepage		522531	0					
ANR	523230	ExpressionStatement	efree ( str )	134:10:4931:4941	522531	5	True				
ANR	523231	CallExpression	efree ( str )		522531	0					
ANR	523232	Callee	efree		522531	0					
ANR	523233	Identifier	efree		522531	0					
ANR	523234	ArgumentList	str		522531	1					
ANR	523235	Argument	str		522531	0					
ANR	523236	Identifier	str		522531	0					
ANR	523237	BreakStatement	break ;	135:10:4953:4958	522531	6	True				
ANR	523238	ExpressionStatement	RegCloseKey ( hsubkey )	140:6:5004:5024	522531	1	True				
ANR	523239	CallExpression	RegCloseKey ( hsubkey )		522531	0					
ANR	523240	Callee	RegCloseKey		522531	0					
ANR	523241	Identifier	RegCloseKey		522531	0					
ANR	523242	ArgumentList	hsubkey		522531	1					
ANR	523243	Argument	hsubkey		522531	0					
ANR	523244	Identifier	hsubkey		522531	0					
ANR	523245	ExpressionStatement	RegCloseKey ( hkey )	143:4:5043:5060	522531	4	True				
ANR	523246	CallExpression	RegCloseKey ( hkey )		522531	0					
ANR	523247	Callee	RegCloseKey		522531	0					
ANR	523248	Identifier	RegCloseKey		522531	0					
ANR	523249	ArgumentList	hkey		522531	1					
ANR	523250	Argument	hkey		522531	0					
ANR	523251	Identifier	hkey		522531	0					
ANR	523252	ExpressionStatement	efree ( keyname )	144:4:5066:5080	522531	5	True				
ANR	523253	CallExpression	efree ( keyname )		522531	0					
ANR	523254	Callee	efree		522531	0					
ANR	523255	Identifier	efree		522531	0					
ANR	523256	ArgumentList	keyname		522531	1					
ANR	523257	Argument	keyname		522531	0					
ANR	523258	Identifier	keyname		522531	0					
ANR	523259	ExpressionStatement	efree ( libname )	145:4:5086:5100	522531	6	True				
ANR	523260	CallExpression	efree ( libname )		522531	0					
ANR	523261	Callee	efree		522531	0					
ANR	523262	Identifier	efree		522531	0					
ANR	523263	ArgumentList	libname		522531	1					
ANR	523264	Argument	libname		522531	0					
ANR	523265	Identifier	libname		522531	0					
ANR	523266	ExpressionStatement	efree ( p )	150:1:5116:5124	522531	11	True				
ANR	523267	CallExpression	efree ( p )		522531	0					
ANR	523268	Callee	efree		522531	0					
ANR	523269	Identifier	efree		522531	0					
ANR	523270	ArgumentList	p		522531	1					
ANR	523271	Argument	p		522531	0					
ANR	523272	Identifier	p		522531	0					
ANR	523273	ReturnStatement	return TL ;	152:1:5128:5137	522531	12	True				
ANR	523274	Identifier	TL		522531	0					
ANR	523275	ReturnType	PHP_COM_DOTNET_API ITypeLib *		522531	1					
ANR	523276	Identifier	php_com_load_typelib		522531	2					
ANR	523277	ParameterList	"char * search_string , int codepage"		522531	3					
ANR	523278	Parameter	char * search_string	38:50:1690:1708	522531	0	True				
ANR	523279	ParameterType	char *		522531	0					
ANR	523280	Identifier	search_string		522531	1					
ANR	523281	Parameter	int codepage	38:71:1711:1722	522531	1	True				
ANR	523282	ParameterType	int		522531	0					
ANR	523283	Identifier	codepage		522531	1					
ANR	523284	CFGEntryNode	ENTRY		522531		True				
ANR	523285	CFGExitNode	EXIT		522531		True				
ANR	523286	Symbol	minor		522531						
ANR	523287	Symbol	hr		522531						
ANR	523288	Symbol	search_string		522531						
ANR	523289	Symbol	disp		522531						
ANR	523290	Symbol	RegEnumKey		522531						
ANR	523291	Symbol	& str		522531						
ANR	523292	Symbol	php_com_string_to_olestring		522531						
ANR	523293	Symbol	strlen		522531						
ANR	523294	Symbol	ERROR_SUCCESS		522531						
ANR	523295	Symbol	major		522531						
ANR	523296	Symbol	FAILED		522531						
ANR	523297	Symbol	ITypeInfo_GetContainingTypeLib		522531						
ANR	523298	Symbol	VersionCount		522531						
ANR	523299	Symbol	LoadRegTypeLib		522531						
ANR	523300	Symbol	& disp		522531						
ANR	523301	Symbol	& SubKeys		522531						
ANR	523302	Symbol	keyname		522531						
ANR	523303	Symbol	RegOpenKeyEx		522531						
ANR	523304	Symbol	& VersionCount		522531						
ANR	523305	Symbol	info		522531						
ANR	523306	Symbol	strtok_buf		522531						
ANR	523307	Symbol	NULL		522531						
ANR	523308	Symbol	& TL		522531						
ANR	523309	Symbol	& info		522531						
ANR	523310	Symbol	LANG_NEUTRAL		522531						
ANR	523311	Symbol	& clsid		522531						
ANR	523312	Symbol	minor_i		522531						
ANR	523313	Symbol	& IID_IDispatch		522531						
ANR	523314	Symbol	codepage		522531						
ANR	523315	Symbol	version		522531						
ANR	523316	Symbol	str		522531						
ANR	523317	Symbol	RegQueryInfoKey		522531						
ANR	523318	Symbol	major_tmp		522531						
ANR	523319	Symbol	sscanf		522531						
ANR	523320	Symbol	SUCCEEDED		522531						
ANR	523321	Symbol	stricmp		522531						
ANR	523322	Symbol	idx		522531						
ANR	523323	Symbol	& hsubkey		522531						
ANR	523324	Symbol	CLSCTX_SERVER		522531						
ANR	523325	Symbol	minor_tmp		522531						
ANR	523326	Symbol	hkey		522531						
ANR	523327	Symbol	php_com_load_typelib		522531						
ANR	523328	Symbol	RegQueryValue		522531						
ANR	523329	Symbol	KEY_READ		522531						
ANR	523330	Symbol	& major_tmp		522531						
ANR	523331	Symbol	emalloc		522531						
ANR	523332	Symbol	php_strtok_r		522531						
ANR	523333	Symbol	clsid		522531						
ANR	523334	Symbol	atoi		522531						
ANR	523335	Symbol	SubKeys		522531						
ANR	523336	Symbol	IDispatch_GetTypeInfo		522531						
ANR	523337	Symbol	hsubkey		522531						
ANR	523338	Symbol	& idx		522531						
ANR	523339	Symbol	& strtok_buf		522531						
ANR	523340	Symbol	& MaxSubKeyLength		522531						
ANR	523341	Symbol	libnamelen		522531						
ANR	523342	Symbol	& libnamelen		522531						
ANR	523343	Symbol	i		522531						
ANR	523344	Symbol	j		522531						
ANR	523345	Symbol	HKEY_CLASSES_ROOT		522531						
ANR	523346	Symbol	p		522531						
ANR	523347	Symbol	major_i		522531						
ANR	523348	Symbol	libname		522531						
ANR	523349	Symbol	CoCreateInstance		522531						
ANR	523350	Symbol	TL		522531						
ANR	523351	Symbol	CLSIDFromString		522531						
ANR	523352	Symbol	& minor_tmp		522531						
ANR	523353	Symbol	LoadTypeLib		522531						
ANR	523354	Symbol	& hkey		522531						
ANR	523355	Symbol	MaxSubKeyLength		522531						
ANR	523356	Function	php_com_import_typelib	156:0:5209:7163							
ANR	523357	FunctionDef	"php_com_import_typelib (ITypeLib * TL , int mode , int codepage)"		523356	0					
ANR	523358	CompoundStatement		157:0:5293:7163	523356	0					
ANR	523359	IdentifierDeclStatement	"int i , j , interfaces ;"	158:1:5296:5316	523356	0	True				
ANR	523360	IdentifierDecl	i		523356	0					
ANR	523361	IdentifierDeclType	int		523356	0					
ANR	523362	Identifier	i		523356	1					
ANR	523363	IdentifierDecl	j		523356	1					
ANR	523364	IdentifierDeclType	int		523356	0					
ANR	523365	Identifier	j		523356	1					
ANR	523366	IdentifierDecl	interfaces		523356	2					
ANR	523367	IdentifierDeclType	int		523356	0					
ANR	523368	Identifier	interfaces		523356	1					
ANR	523369	IdentifierDeclStatement	TYPEKIND pTKind ;	159:1:5319:5334	523356	1	True				
ANR	523370	IdentifierDecl	pTKind		523356	0					
ANR	523371	IdentifierDeclType	TYPEKIND		523356	0					
ANR	523372	Identifier	pTKind		523356	1					
ANR	523373	IdentifierDeclStatement	ITypeInfo * TypeInfo ;	160:1:5337:5356	523356	2	True				
ANR	523374	IdentifierDecl	* TypeInfo		523356	0					
ANR	523375	IdentifierDeclType	ITypeInfo *		523356	0					
ANR	523376	Identifier	TypeInfo		523356	1					
ANR	523377	IdentifierDeclStatement	VARDESC * pVarDesc ;	161:1:5359:5376	523356	3	True				
ANR	523378	IdentifierDecl	* pVarDesc		523356	0					
ANR	523379	IdentifierDeclType	VARDESC *		523356	0					
ANR	523380	Identifier	pVarDesc		523356	1					
ANR	523381	IdentifierDeclStatement	UINT NameCount ;	162:1:5379:5393	523356	4	True				
ANR	523382	IdentifierDecl	NameCount		523356	0					
ANR	523383	IdentifierDeclType	UINT		523356	0					
ANR	523384	Identifier	NameCount		523356	1					
ANR	523385	IdentifierDeclStatement	BSTR bstr_ids ;	163:1:5396:5409	523356	5	True				
ANR	523386	IdentifierDecl	bstr_ids		523356	0					
ANR	523387	IdentifierDeclType	BSTR		523356	0					
ANR	523388	Identifier	bstr_ids		523356	1					
ANR	523389	IdentifierDeclStatement	zend_constant c ;	164:1:5412:5427	523356	6	True				
ANR	523390	IdentifierDecl	c		523356	0					
ANR	523391	IdentifierDeclType	zend_constant		523356	0					
ANR	523392	Identifier	c		523356	1					
ANR	523393	IdentifierDeclStatement	"zval * exists , results , value ;"	165:1:5430:5458	523356	7	True				
ANR	523394	IdentifierDecl	* exists		523356	0					
ANR	523395	IdentifierDeclType	zval *		523356	0					
ANR	523396	Identifier	exists		523356	1					
ANR	523397	IdentifierDecl	results		523356	1					
ANR	523398	IdentifierDeclType	zval		523356	0					
ANR	523399	Identifier	results		523356	1					
ANR	523400	IdentifierDecl	value		523356	2					
ANR	523401	IdentifierDeclType	zval		523356	0					
ANR	523402	Identifier	value		523356	1					
ANR	523403	IdentifierDeclStatement	char * const_name ;	166:1:5461:5477	523356	8	True				
ANR	523404	IdentifierDecl	* const_name		523356	0					
ANR	523405	IdentifierDeclType	char *		523356	0					
ANR	523406	Identifier	const_name		523356	1					
ANR	523407	IdentifierDeclStatement	size_t len ;	167:1:5480:5490	523356	9	True				
ANR	523408	IdentifierDecl	len		523356	0					
ANR	523409	IdentifierDeclType	size_t		523356	0					
ANR	523410	Identifier	len		523356	1					
ANR	523411	IfStatement	if ( TL == NULL )		523356	10					
ANR	523412	Condition	TL == NULL	169:5:5498:5507	523356	0	True				
ANR	523413	EqualityExpression	TL == NULL		523356	0		==			
ANR	523414	Identifier	TL		523356	0					
ANR	523415	Identifier	NULL		523356	1					
ANR	523416	CompoundStatement		13:17:216:216	523356	1					
ANR	523417	ReturnStatement	return FAILURE ;	170:2:5514:5528	523356	0	True				
ANR	523418	Identifier	FAILURE		523356	0					
ANR	523419	ExpressionStatement	interfaces = ITypeLib_GetTypeInfoCount ( TL )	173:1:5535:5577	523356	11	True				
ANR	523420	AssignmentExpression	interfaces = ITypeLib_GetTypeInfoCount ( TL )		523356	0		=			
ANR	523421	Identifier	interfaces		523356	0					
ANR	523422	CallExpression	ITypeLib_GetTypeInfoCount ( TL )		523356	1					
ANR	523423	Callee	ITypeLib_GetTypeInfoCount		523356	0					
ANR	523424	Identifier	ITypeLib_GetTypeInfoCount		523356	0					
ANR	523425	ArgumentList	TL		523356	1					
ANR	523426	Argument	TL		523356	0					
ANR	523427	Identifier	TL		523356	0					
ANR	523428	ForStatement	for ( i = 0 ; i < interfaces ; i ++ )		523356	12					
ANR	523429	ForInit	i = 0 ;	174:6:5585:5590	523356	0	True				
ANR	523430	AssignmentExpression	i = 0		523356	0		=			
ANR	523431	Identifier	i		523356	0					
ANR	523432	PrimaryExpression	0		523356	1					
ANR	523433	Condition	i < interfaces	174:13:5592:5605	523356	1	True				
ANR	523434	RelationalExpression	i < interfaces		523356	0		<			
ANR	523435	Identifier	i		523356	0					
ANR	523436	Identifier	interfaces		523356	1					
ANR	523437	PostIncDecOperationExpression	i ++	174:29:5608:5610	523356	2	True				
ANR	523438	Identifier	i		523356	0					
ANR	523439	IncDec	++		523356	1					
ANR	523440	CompoundStatement		18:34:319:319	523356	3					
ANR	523441	ExpressionStatement	"ITypeLib_GetTypeInfoType ( TL , i , & pTKind )"	175:2:5617:5657	523356	0	True				
ANR	523442	CallExpression	"ITypeLib_GetTypeInfoType ( TL , i , & pTKind )"		523356	0					
ANR	523443	Callee	ITypeLib_GetTypeInfoType		523356	0					
ANR	523444	Identifier	ITypeLib_GetTypeInfoType		523356	0					
ANR	523445	ArgumentList	TL		523356	1					
ANR	523446	Argument	TL		523356	0					
ANR	523447	Identifier	TL		523356	0					
ANR	523448	Argument	i		523356	1					
ANR	523449	Identifier	i		523356	0					
ANR	523450	Argument	& pTKind		523356	2					
ANR	523451	UnaryOperationExpression	& pTKind		523356	0					
ANR	523452	UnaryOperator	&		523356	0					
ANR	523453	Identifier	pTKind		523356	1					
ANR	523454	IfStatement	if ( pTKind == TKIND_ENUM )		523356	1					
ANR	523455	Condition	pTKind == TKIND_ENUM	176:6:5665:5684	523356	0	True				
ANR	523456	EqualityExpression	pTKind == TKIND_ENUM		523356	0		==			
ANR	523457	Identifier	pTKind		523356	0					
ANR	523458	Identifier	TKIND_ENUM		523356	1					
ANR	523459	CompoundStatement		20:28:393:393	523356	1					
ANR	523460	ExpressionStatement	"ITypeLib_GetTypeInfo ( TL , i , & TypeInfo )"	177:3:5692:5730	523356	0	True				
ANR	523461	CallExpression	"ITypeLib_GetTypeInfo ( TL , i , & TypeInfo )"		523356	0					
ANR	523462	Callee	ITypeLib_GetTypeInfo		523356	0					
ANR	523463	Identifier	ITypeLib_GetTypeInfo		523356	0					
ANR	523464	ArgumentList	TL		523356	1					
ANR	523465	Argument	TL		523356	0					
ANR	523466	Identifier	TL		523356	0					
ANR	523467	Argument	i		523356	1					
ANR	523468	Identifier	i		523356	0					
ANR	523469	Argument	& TypeInfo		523356	2					
ANR	523470	UnaryOperationExpression	& TypeInfo		523356	0					
ANR	523471	UnaryOperator	&		523356	0					
ANR	523472	Identifier	TypeInfo		523356	1					
ANR	523473	ForStatement	for ( j = 0 ; ; j ++ )		523356	1					
ANR	523474	ForInit	j = 0 ;	178:8:5740:5745	523356	0	True				
ANR	523475	AssignmentExpression	j = 0		523356	0		=			
ANR	523476	Identifier	j		523356	0					
ANR	523477	PrimaryExpression	0		523356	1					
ANR	523478	PostIncDecOperationExpression	j ++	178:17:5749:5751	523356	1	True				
ANR	523479	Identifier	j		523356	0					
ANR	523480	IncDec	++		523356	1					
ANR	523481	CompoundStatement		22:22:460:460	523356	2					
ANR	523482	IfStatement	"if ( FAILED ( ITypeInfo_GetVarDesc ( TypeInfo , j , & pVarDesc ) ) )"		523356	0					
ANR	523483	Condition	"FAILED ( ITypeInfo_GetVarDesc ( TypeInfo , j , & pVarDesc ) )"	179:8:5764:5815	523356	0	True				
ANR	523484	CallExpression	"FAILED ( ITypeInfo_GetVarDesc ( TypeInfo , j , & pVarDesc ) )"		523356	0					
ANR	523485	Callee	FAILED		523356	0					
ANR	523486	Identifier	FAILED		523356	0					
ANR	523487	ArgumentList	"ITypeInfo_GetVarDesc ( TypeInfo , j , & pVarDesc )"		523356	1					
ANR	523488	Argument	"ITypeInfo_GetVarDesc ( TypeInfo , j , & pVarDesc )"		523356	0					
ANR	523489	CallExpression	"ITypeInfo_GetVarDesc ( TypeInfo , j , & pVarDesc )"		523356	0					
ANR	523490	Callee	ITypeInfo_GetVarDesc		523356	0					
ANR	523491	Identifier	ITypeInfo_GetVarDesc		523356	0					
ANR	523492	ArgumentList	TypeInfo		523356	1					
ANR	523493	Argument	TypeInfo		523356	0					
ANR	523494	Identifier	TypeInfo		523356	0					
ANR	523495	Argument	j		523356	1					
ANR	523496	Identifier	j		523356	0					
ANR	523497	Argument	& pVarDesc		523356	2					
ANR	523498	UnaryOperationExpression	& pVarDesc		523356	0					
ANR	523499	UnaryOperator	&		523356	0					
ANR	523500	Identifier	pVarDesc		523356	1					
ANR	523501	CompoundStatement		23:62:524:524	523356	1					
ANR	523502	BreakStatement	break ;	180:5:5825:5830	523356	0	True				
ANR	523503	ExpressionStatement	"ITypeInfo_GetNames ( TypeInfo , pVarDesc -> memid , & bstr_ids , 1 , & NameCount )"	182:4:5842:5913	523356	1	True				
ANR	523504	CallExpression	"ITypeInfo_GetNames ( TypeInfo , pVarDesc -> memid , & bstr_ids , 1 , & NameCount )"		523356	0					
ANR	523505	Callee	ITypeInfo_GetNames		523356	0					
ANR	523506	Identifier	ITypeInfo_GetNames		523356	0					
ANR	523507	ArgumentList	TypeInfo		523356	1					
ANR	523508	Argument	TypeInfo		523356	0					
ANR	523509	Identifier	TypeInfo		523356	0					
ANR	523510	Argument	pVarDesc -> memid		523356	1					
ANR	523511	PtrMemberAccess	pVarDesc -> memid		523356	0					
ANR	523512	Identifier	pVarDesc		523356	0					
ANR	523513	Identifier	memid		523356	1					
ANR	523514	Argument	& bstr_ids		523356	2					
ANR	523515	UnaryOperationExpression	& bstr_ids		523356	0					
ANR	523516	UnaryOperator	&		523356	0					
ANR	523517	Identifier	bstr_ids		523356	1					
ANR	523518	Argument	1		523356	3					
ANR	523519	PrimaryExpression	1		523356	0					
ANR	523520	Argument	& NameCount		523356	4					
ANR	523521	UnaryOperationExpression	& NameCount		523356	0					
ANR	523522	UnaryOperator	&		523356	0					
ANR	523523	Identifier	NameCount		523356	1					
ANR	523524	IfStatement	if ( NameCount != 1 )		523356	2					
ANR	523525	Condition	NameCount != 1	183:8:5923:5936	523356	0	True				
ANR	523526	EqualityExpression	NameCount != 1		523356	0		!=			
ANR	523527	Identifier	NameCount		523356	0					
ANR	523528	PrimaryExpression	1		523356	1					
ANR	523529	CompoundStatement		27:24:645:645	523356	1					
ANR	523530	ExpressionStatement	"ITypeInfo_ReleaseVarDesc ( TypeInfo , pVarDesc )"	184:5:5946:5990	523356	0	True				
ANR	523531	CallExpression	"ITypeInfo_ReleaseVarDesc ( TypeInfo , pVarDesc )"		523356	0					
ANR	523532	Callee	ITypeInfo_ReleaseVarDesc		523356	0					
ANR	523533	Identifier	ITypeInfo_ReleaseVarDesc		523356	0					
ANR	523534	ArgumentList	TypeInfo		523356	1					
ANR	523535	Argument	TypeInfo		523356	0					
ANR	523536	Identifier	TypeInfo		523356	0					
ANR	523537	Argument	pVarDesc		523356	1					
ANR	523538	Identifier	pVarDesc		523356	0					
ANR	523539	ContinueStatement	continue ;	185:5:5997:6005	523356	1	True				
ANR	523540	ExpressionStatement	"const_name = php_com_olestring_to_string ( bstr_ids , & len , codepage )"	188:4:6018:6084	523356	3	True				
ANR	523541	AssignmentExpression	"const_name = php_com_olestring_to_string ( bstr_ids , & len , codepage )"		523356	0		=			
ANR	523542	Identifier	const_name		523356	0					
ANR	523543	CallExpression	"php_com_olestring_to_string ( bstr_ids , & len , codepage )"		523356	1					
ANR	523544	Callee	php_com_olestring_to_string		523356	0					
ANR	523545	Identifier	php_com_olestring_to_string		523356	0					
ANR	523546	ArgumentList	bstr_ids		523356	1					
ANR	523547	Argument	bstr_ids		523356	0					
ANR	523548	Identifier	bstr_ids		523356	0					
ANR	523549	Argument	& len		523356	1					
ANR	523550	UnaryOperationExpression	& len		523356	0					
ANR	523551	UnaryOperator	&		523356	0					
ANR	523552	Identifier	len		523356	1					
ANR	523553	Argument	codepage		523356	2					
ANR	523554	Identifier	codepage		523356	0					
ANR	523555	ExpressionStatement	"c . name = zend_string_init ( const_name , len , 1 )"	189:4:6090:6135	523356	4	True				
ANR	523556	AssignmentExpression	"c . name = zend_string_init ( const_name , len , 1 )"		523356	0		=			
ANR	523557	MemberAccess	c . name		523356	0					
ANR	523558	Identifier	c		523356	0					
ANR	523559	Identifier	name		523356	1					
ANR	523560	CallExpression	"zend_string_init ( const_name , len , 1 )"		523356	1					
ANR	523561	Callee	zend_string_init		523356	0					
ANR	523562	Identifier	zend_string_init		523356	0					
ANR	523563	ArgumentList	const_name		523356	1					
ANR	523564	Argument	const_name		523356	0					
ANR	523565	Identifier	const_name		523356	0					
ANR	523566	Argument	len		523356	1					
ANR	523567	Identifier	len		523356	0					
ANR	523568	Argument	1		523356	2					
ANR	523569	PrimaryExpression	1		523356	0					
ANR	523570	ExpressionStatement	efree ( const_name )	191:4:6176:6193	523356	5	True				
ANR	523571	CallExpression	efree ( const_name )		523356	0					
ANR	523572	Callee	efree		523356	0					
ANR	523573	Identifier	efree		523356	0					
ANR	523574	ArgumentList	const_name		523356	1					
ANR	523575	Argument	const_name		523356	0					
ANR	523576	Identifier	const_name		523356	0					
ANR	523577	IfStatement	if ( c . name == NULL )		523356	6					
ANR	523578	Condition	c . name == NULL	192:7:6202:6215	523356	0	True				
ANR	523579	EqualityExpression	c . name == NULL		523356	0		==			
ANR	523580	MemberAccess	c . name		523356	0					
ANR	523581	Identifier	c		523356	0					
ANR	523582	Identifier	name		523356	1					
ANR	523583	Identifier	NULL		523356	1					
ANR	523584	CompoundStatement		36:23:924:924	523356	1					
ANR	523585	ExpressionStatement	"ITypeInfo_ReleaseVarDesc ( TypeInfo , pVarDesc )"	193:5:6225:6269	523356	0	True				
ANR	523586	CallExpression	"ITypeInfo_ReleaseVarDesc ( TypeInfo , pVarDesc )"		523356	0					
ANR	523587	Callee	ITypeInfo_ReleaseVarDesc		523356	0					
ANR	523588	Identifier	ITypeInfo_ReleaseVarDesc		523356	0					
ANR	523589	ArgumentList	TypeInfo		523356	1					
ANR	523590	Argument	TypeInfo		523356	0					
ANR	523591	Identifier	TypeInfo		523356	0					
ANR	523592	Argument	pVarDesc		523356	1					
ANR	523593	Identifier	pVarDesc		523356	0					
ANR	523594	ContinueStatement	continue ;	194:5:6276:6284	523356	1	True				
ANR	523595	ExpressionStatement	SysFreeString ( bstr_ids )	197:4:6337:6360	523356	7	True				
ANR	523596	CallExpression	SysFreeString ( bstr_ids )		523356	0					
ANR	523597	Callee	SysFreeString		523356	0					
ANR	523598	Identifier	SysFreeString		523356	0					
ANR	523599	ArgumentList	bstr_ids		523356	1					
ANR	523600	Argument	bstr_ids		523356	0					
ANR	523601	Identifier	bstr_ids		523356	0					
ANR	523602	IfStatement	if ( ( exists = zend_get_constant ( c . name ) ) != NULL )		523356	8					
ANR	523603	Condition	( exists = zend_get_constant ( c . name ) ) != NULL	200:8:6445:6488	523356	0	True				
ANR	523604	EqualityExpression	( exists = zend_get_constant ( c . name ) ) != NULL		523356	0		!=			
ANR	523605	AssignmentExpression	exists = zend_get_constant ( c . name )		523356	0		=			
ANR	523606	Identifier	exists		523356	0					
ANR	523607	CallExpression	zend_get_constant ( c . name )		523356	1					
ANR	523608	Callee	zend_get_constant		523356	0					
ANR	523609	Identifier	zend_get_constant		523356	0					
ANR	523610	ArgumentList	c . name		523356	1					
ANR	523611	Argument	c . name		523356	0					
ANR	523612	MemberAccess	c . name		523356	0					
ANR	523613	Identifier	c		523356	0					
ANR	523614	Identifier	name		523356	1					
ANR	523615	Identifier	NULL		523356	1					
ANR	523616	CompoundStatement		44:54:1197:1197	523356	1					
ANR	523617	IfStatement	"if ( COMG ( autoreg_verbose ) && ! compare_function ( & results , & c . value , exists ) )"		523356	0					
ANR	523618	Condition	"COMG ( autoreg_verbose ) && ! compare_function ( & results , & c . value , exists )"	201:9:6502:6571	523356	0	True				
ANR	523619	AndExpression	"COMG ( autoreg_verbose ) && ! compare_function ( & results , & c . value , exists )"		523356	0		&&			
ANR	523620	CallExpression	COMG ( autoreg_verbose )		523356	0					
ANR	523621	Callee	COMG		523356	0					
ANR	523622	Identifier	COMG		523356	0					
ANR	523623	ArgumentList	autoreg_verbose		523356	1					
ANR	523624	Argument	autoreg_verbose		523356	0					
ANR	523625	Identifier	autoreg_verbose		523356	0					
ANR	523626	UnaryOperationExpression	"! compare_function ( & results , & c . value , exists )"		523356	1					
ANR	523627	UnaryOperator	!		523356	0					
ANR	523628	CallExpression	"compare_function ( & results , & c . value , exists )"		523356	1					
ANR	523629	Callee	compare_function		523356	0					
ANR	523630	Identifier	compare_function		523356	0					
ANR	523631	ArgumentList	& results		523356	1					
ANR	523632	Argument	& results		523356	0					
ANR	523633	UnaryOperationExpression	& results		523356	0					
ANR	523634	UnaryOperator	&		523356	0					
ANR	523635	Identifier	results		523356	1					
ANR	523636	Argument	& c . value		523356	1					
ANR	523637	UnaryOperationExpression	& c . value		523356	0					
ANR	523638	UnaryOperator	&		523356	0					
ANR	523639	MemberAccess	c . value		523356	1					
ANR	523640	Identifier	c		523356	0					
ANR	523641	Identifier	value		523356	1					
ANR	523642	Argument	exists		523356	2					
ANR	523643	Identifier	exists		523356	0					
ANR	523644	CompoundStatement		45:81:1280:1280	523356	1					
ANR	523645	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Type library constant %s is already defined"" , c . name )"	202:6:6582:6670	523356	0	True				
ANR	523646	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Type library constant %s is already defined"" , c . name )"		523356	0					
ANR	523647	Callee	php_error_docref		523356	0					
ANR	523648	Identifier	php_error_docref		523356	0					
ANR	523649	ArgumentList	NULL		523356	1					
ANR	523650	Argument	NULL		523356	0					
ANR	523651	Identifier	NULL		523356	0					
ANR	523652	Argument	E_WARNING		523356	1					
ANR	523653	Identifier	E_WARNING		523356	0					
ANR	523654	Argument	"""Type library constant %s is already defined"""		523356	2					
ANR	523655	PrimaryExpression	"""Type library constant %s is already defined"""		523356	0					
ANR	523656	Argument	c . name		523356	3					
ANR	523657	MemberAccess	c . name		523356	0					
ANR	523658	Identifier	c		523356	0					
ANR	523659	Identifier	name		523356	1					
ANR	523660	ExpressionStatement	zend_string_release ( c . name )	204:5:6684:6711	523356	1	True				
ANR	523661	CallExpression	zend_string_release ( c . name )		523356	0					
ANR	523662	Callee	zend_string_release		523356	0					
ANR	523663	Identifier	zend_string_release		523356	0					
ANR	523664	ArgumentList	c . name		523356	1					
ANR	523665	Argument	c . name		523356	0					
ANR	523666	MemberAccess	c . name		523356	0					
ANR	523667	Identifier	c		523356	0					
ANR	523668	Identifier	name		523356	1					
ANR	523669	ExpressionStatement	"ITypeInfo_ReleaseVarDesc ( TypeInfo , pVarDesc )"	205:5:6718:6762	523356	2	True				
ANR	523670	CallExpression	"ITypeInfo_ReleaseVarDesc ( TypeInfo , pVarDesc )"		523356	0					
ANR	523671	Callee	ITypeInfo_ReleaseVarDesc		523356	0					
ANR	523672	Identifier	ITypeInfo_ReleaseVarDesc		523356	0					
ANR	523673	ArgumentList	TypeInfo		523356	1					
ANR	523674	Argument	TypeInfo		523356	0					
ANR	523675	Identifier	TypeInfo		523356	0					
ANR	523676	Argument	pVarDesc		523356	1					
ANR	523677	Identifier	pVarDesc		523356	0					
ANR	523678	ContinueStatement	continue ;	206:5:6769:6777	523356	3	True				
ANR	523679	ExpressionStatement	"php_com_zval_from_variant ( & value , pVarDesc -> lpvarValue , codepage )"	210:4:6822:6887	523356	9	True				
ANR	523680	CallExpression	"php_com_zval_from_variant ( & value , pVarDesc -> lpvarValue , codepage )"		523356	0					
ANR	523681	Callee	php_com_zval_from_variant		523356	0					
ANR	523682	Identifier	php_com_zval_from_variant		523356	0					
ANR	523683	ArgumentList	& value		523356	1					
ANR	523684	Argument	& value		523356	0					
ANR	523685	UnaryOperationExpression	& value		523356	0					
ANR	523686	UnaryOperator	&		523356	0					
ANR	523687	Identifier	value		523356	1					
ANR	523688	Argument	pVarDesc -> lpvarValue		523356	1					
ANR	523689	PtrMemberAccess	pVarDesc -> lpvarValue		523356	0					
ANR	523690	Identifier	pVarDesc		523356	0					
ANR	523691	Identifier	lpvarValue		523356	1					
ANR	523692	Argument	codepage		523356	2					
ANR	523693	Identifier	codepage		523356	0					
ANR	523694	IfStatement	if ( Z_TYPE ( value ) == IS_LONG )		523356	10					
ANR	523695	Condition	Z_TYPE ( value ) == IS_LONG	211:8:6897:6920	523356	0	True				
ANR	523696	EqualityExpression	Z_TYPE ( value ) == IS_LONG		523356	0		==			
ANR	523697	CallExpression	Z_TYPE ( value )		523356	0					
ANR	523698	Callee	Z_TYPE		523356	0					
ANR	523699	Identifier	Z_TYPE		523356	0					
ANR	523700	ArgumentList	value		523356	1					
ANR	523701	Argument	value		523356	0					
ANR	523702	Identifier	value		523356	0					
ANR	523703	Identifier	IS_LONG		523356	1					
ANR	523704	CompoundStatement		55:34:1629:1629	523356	1					
ANR	523705	ExpressionStatement	c . flags = mode	212:5:6930:6944	523356	0	True				
ANR	523706	AssignmentExpression	c . flags = mode		523356	0		=			
ANR	523707	MemberAccess	c . flags		523356	0					
ANR	523708	Identifier	c		523356	0					
ANR	523709	Identifier	flags		523356	1					
ANR	523710	Identifier	mode		523356	1					
ANR	523711	ExpressionStatement	"ZVAL_LONG ( & c . value , Z_LVAL ( value ) )"	213:5:6951:6985	523356	1	True				
ANR	523712	CallExpression	"ZVAL_LONG ( & c . value , Z_LVAL ( value ) )"		523356	0					
ANR	523713	Callee	ZVAL_LONG		523356	0					
ANR	523714	Identifier	ZVAL_LONG		523356	0					
ANR	523715	ArgumentList	& c . value		523356	1					
ANR	523716	Argument	& c . value		523356	0					
ANR	523717	UnaryOperationExpression	& c . value		523356	0					
ANR	523718	UnaryOperator	&		523356	0					
ANR	523719	MemberAccess	c . value		523356	1					
ANR	523720	Identifier	c		523356	0					
ANR	523721	Identifier	value		523356	1					
ANR	523722	Argument	Z_LVAL ( value )		523356	1					
ANR	523723	CallExpression	Z_LVAL ( value )		523356	0					
ANR	523724	Callee	Z_LVAL		523356	0					
ANR	523725	Identifier	Z_LVAL		523356	0					
ANR	523726	ArgumentList	value		523356	1					
ANR	523727	Argument	value		523356	0					
ANR	523728	Identifier	value		523356	0					
ANR	523729	ExpressionStatement	c . module_number = 0	214:5:6992:7011	523356	2	True				
ANR	523730	AssignmentExpression	c . module_number = 0		523356	0		=			
ANR	523731	MemberAccess	c . module_number		523356	0					
ANR	523732	Identifier	c		523356	0					
ANR	523733	Identifier	module_number		523356	1					
ANR	523734	PrimaryExpression	0		523356	1					
ANR	523735	ExpressionStatement	zend_register_constant ( & c )	215:5:7018:7044	523356	3	True				
ANR	523736	CallExpression	zend_register_constant ( & c )		523356	0					
ANR	523737	Callee	zend_register_constant		523356	0					
ANR	523738	Identifier	zend_register_constant		523356	0					
ANR	523739	ArgumentList	& c		523356	1					
ANR	523740	Argument	& c		523356	0					
ANR	523741	UnaryOperationExpression	& c		523356	0					
ANR	523742	UnaryOperator	&		523356	0					
ANR	523743	Identifier	c		523356	1					
ANR	523744	ExpressionStatement	"ITypeInfo_ReleaseVarDesc ( TypeInfo , pVarDesc )"	217:4:7056:7100	523356	11	True				
ANR	523745	CallExpression	"ITypeInfo_ReleaseVarDesc ( TypeInfo , pVarDesc )"		523356	0					
ANR	523746	Callee	ITypeInfo_ReleaseVarDesc		523356	0					
ANR	523747	Identifier	ITypeInfo_ReleaseVarDesc		523356	0					
ANR	523748	ArgumentList	TypeInfo		523356	1					
ANR	523749	Argument	TypeInfo		523356	0					
ANR	523750	Identifier	TypeInfo		523356	0					
ANR	523751	Argument	pVarDesc		523356	1					
ANR	523752	Identifier	pVarDesc		523356	0					
ANR	523753	ExpressionStatement	ITypeInfo_Release ( TypeInfo )	219:3:7110:7137	523356	2	True				
ANR	523754	CallExpression	ITypeInfo_Release ( TypeInfo )		523356	0					
ANR	523755	Callee	ITypeInfo_Release		523356	0					
ANR	523756	Identifier	ITypeInfo_Release		523356	0					
ANR	523757	ArgumentList	TypeInfo		523356	1					
ANR	523758	Argument	TypeInfo		523356	0					
ANR	523759	Identifier	TypeInfo		523356	0					
ANR	523760	ReturnStatement	return SUCCESS ;	222:1:7147:7161	523356	13	True				
ANR	523761	Identifier	SUCCESS		523356	0					
ANR	523762	ReturnType	PHP_COM_DOTNET_API int		523356	1					
ANR	523763	Identifier	php_com_import_typelib		523356	2					
ANR	523764	ParameterList	"ITypeLib * TL , int mode , int codepage"		523356	3					
ANR	523765	Parameter	ITypeLib * TL	156:46:5255:5266	523356	0	True				
ANR	523766	ParameterType	ITypeLib *		523356	0					
ANR	523767	Identifier	TL		523356	1					
ANR	523768	Parameter	int mode	156:60:5269:5276	523356	1	True				
ANR	523769	ParameterType	int		523356	0					
ANR	523770	Identifier	mode		523356	1					
ANR	523771	Parameter	int codepage	156:70:5279:5290	523356	2	True				
ANR	523772	ParameterType	int		523356	0					
ANR	523773	Identifier	codepage		523356	1					
ANR	523774	CFGEntryNode	ENTRY		523356		True				
ANR	523775	CFGExitNode	EXIT		523356		True				
ANR	523776	InfiniteForNode	true		523356		True				
ANR	523777	Symbol	pVarDesc		523356						
ANR	523778	Symbol	& value		523356						
ANR	523779	Symbol	c . module_number		523356						
ANR	523780	Symbol	Z_LVAL		523356						
ANR	523781	Symbol	Z_TYPE		523356						
ANR	523782	Symbol	bstr_ids		523356						
ANR	523783	Symbol	mode		523356						
ANR	523784	Symbol	zend_string_init		523356						
ANR	523785	Symbol	len		523356						
ANR	523786	Symbol	FAILED		523356						
ANR	523787	Symbol	& TypeInfo		523356						
ANR	523788	Symbol	COMG		523356						
ANR	523789	Symbol	* pVarDesc		523356						
ANR	523790	Symbol	results		523356						
ANR	523791	Symbol	TKIND_ENUM		523356						
ANR	523792	Symbol	NULL		523356						
ANR	523793	Symbol	& c . value		523356						
ANR	523794	Symbol	codepage		523356						
ANR	523795	Symbol	TypeInfo		523356						
ANR	523796	Symbol	pVarDesc -> memid		523356						
ANR	523797	Symbol	ITypeLib_GetTypeInfoCount		523356						
ANR	523798	Symbol	& bstr_ids		523356						
ANR	523799	Symbol	& NameCount		523356						
ANR	523800	Symbol	& len		523356						
ANR	523801	Symbol	c . flags		523356						
ANR	523802	Symbol	& pVarDesc		523356						
ANR	523803	Symbol	& pTKind		523356						
ANR	523804	Symbol	& results		523356						
ANR	523805	Symbol	const_name		523356						
ANR	523806	Symbol	c . name		523356						
ANR	523807	Symbol	E_WARNING		523356						
ANR	523808	Symbol	compare_function		523356						
ANR	523809	Symbol	ITypeInfo_GetVarDesc		523356						
ANR	523810	Symbol	NameCount		523356						
ANR	523811	Symbol	IS_LONG		523356						
ANR	523812	Symbol	zend_get_constant		523356						
ANR	523813	Symbol	value		523356						
ANR	523814	Symbol	interfaces		523356						
ANR	523815	Symbol	c		523356						
ANR	523816	Symbol	SUCCESS		523356						
ANR	523817	Symbol	i		523356						
ANR	523818	Symbol	& c		523356						
ANR	523819	Symbol	j		523356						
ANR	523820	Symbol	FAILURE		523356						
ANR	523821	Symbol	php_com_olestring_to_string		523356						
ANR	523822	Symbol	autoreg_verbose		523356						
ANR	523823	Symbol	TL		523356						
ANR	523824	Symbol	exists		523356						
ANR	523825	Symbol	pTKind		523356						
ANR	523826	Symbol	pVarDesc -> lpvarValue		523356						
ANR	523827	Function	php_com_typelibrary_dtor	226:0:7191:7298							
ANR	523828	FunctionDef	php_com_typelibrary_dtor (void * pDest)		523827	0					
ANR	523829	CompoundStatement		227:0:7234:7298	523827	0					
ANR	523830	IdentifierDeclStatement	ITypeLib * * Lib = ( ITypeLib * * ) pDest ;	228:1:7237:7271	523827	0	True				
ANR	523831	IdentifierDecl	* * Lib = ( ITypeLib * * ) pDest		523827	0					
ANR	523832	IdentifierDeclType	ITypeLib * *		523827	0					
ANR	523833	Identifier	Lib		523827	1					
ANR	523834	AssignmentExpression	* * Lib = ( ITypeLib * * ) pDest		523827	2		=			
ANR	523835	Identifier	Lib		523827	0					
ANR	523836	CastExpression	( ITypeLib * * ) pDest		523827	1					
ANR	523837	CastTarget	ITypeLib * *		523827	0					
ANR	523838	Identifier	pDest		523827	1					
ANR	523839	ExpressionStatement	ITypeLib_Release ( * Lib )	229:1:7274:7296	523827	1	True				
ANR	523840	CallExpression	ITypeLib_Release ( * Lib )		523827	0					
ANR	523841	Callee	ITypeLib_Release		523827	0					
ANR	523842	Identifier	ITypeLib_Release		523827	0					
ANR	523843	ArgumentList	* Lib		523827	1					
ANR	523844	Argument	* Lib		523827	0					
ANR	523845	UnaryOperationExpression	* Lib		523827	0					
ANR	523846	UnaryOperator	*		523827	0					
ANR	523847	Identifier	Lib		523827	1					
ANR	523848	ReturnType	void		523827	1					
ANR	523849	Identifier	php_com_typelibrary_dtor		523827	2					
ANR	523850	ParameterList	void * pDest		523827	3					
ANR	523851	Parameter	void * pDest	226:30:7221:7231	523827	0	True				
ANR	523852	ParameterType	void *		523827	0					
ANR	523853	Identifier	pDest		523827	1					
ANR	523854	CFGEntryNode	ENTRY		523827		True				
ANR	523855	CFGExitNode	EXIT		523827		True				
ANR	523856	Symbol	* Lib		523827						
ANR	523857	Symbol	Lib		523827						
ANR	523858	Symbol	pDest		523827						
ANR	523859	Function	php_com_load_typelib_via_cache	232:0:7301:7985							
ANR	523860	FunctionDef	"php_com_load_typelib_via_cache (char * search_string , int codepage , int * cached)"		523859	0					
ANR	523861	CompoundStatement		234:0:7410:7985	523859	0					
ANR	523862	IdentifierDeclStatement	ITypeLib * TL ;	235:1:7413:7425	523859	0	True				
ANR	523863	IdentifierDecl	* TL		523859	0					
ANR	523864	IdentifierDeclType	ITypeLib *		523859	0					
ANR	523865	Identifier	TL		523859	1					
ANR	523866	IdentifierDeclStatement	char * name_dup ;	236:1:7428:7442	523859	1	True				
ANR	523867	IdentifierDecl	* name_dup		523859	0					
ANR	523868	IdentifierDeclType	char *		523859	0					
ANR	523869	Identifier	name_dup		523859	1					
ANR	523870	IdentifierDeclStatement	size_t l ;	237:1:7445:7453	523859	2	True				
ANR	523871	IdentifierDecl	l		523859	0					
ANR	523872	IdentifierDeclType	size_t		523859	0					
ANR	523873	Identifier	l		523859	1					
ANR	523874	ExpressionStatement	l = strlen ( search_string )	239:1:7457:7482	523859	3	True				
ANR	523875	AssignmentExpression	l = strlen ( search_string )		523859	0		=			
ANR	523876	Identifier	l		523859	0					
ANR	523877	CallExpression	strlen ( search_string )		523859	1					
ANR	523878	Callee	strlen		523859	0					
ANR	523879	Identifier	strlen		523859	0					
ANR	523880	ArgumentList	search_string		523859	1					
ANR	523881	Argument	search_string		523859	0					
ANR	523882	Identifier	search_string		523859	0					
ANR	523883	IfStatement	"if ( ( TL = zend_ts_hash_str_find_ptr ( & php_com_typelibraries , search_string , l ) ) != NULL )"		523859	4					
ANR	523884	Condition	"( TL = zend_ts_hash_str_find_ptr ( & php_com_typelibraries , search_string , l ) ) != NULL"	241:5:7490:7571	523859	0	True				
ANR	523885	EqualityExpression	"( TL = zend_ts_hash_str_find_ptr ( & php_com_typelibraries , search_string , l ) ) != NULL"		523859	0		!=			
ANR	523886	AssignmentExpression	"TL = zend_ts_hash_str_find_ptr ( & php_com_typelibraries , search_string , l )"		523859	0		=			
ANR	523887	Identifier	TL		523859	0					
ANR	523888	CallExpression	"zend_ts_hash_str_find_ptr ( & php_com_typelibraries , search_string , l )"		523859	1					
ANR	523889	Callee	zend_ts_hash_str_find_ptr		523859	0					
ANR	523890	Identifier	zend_ts_hash_str_find_ptr		523859	0					
ANR	523891	ArgumentList	& php_com_typelibraries		523859	1					
ANR	523892	Argument	& php_com_typelibraries		523859	0					
ANR	523893	UnaryOperationExpression	& php_com_typelibraries		523859	0					
ANR	523894	UnaryOperator	&		523859	0					
ANR	523895	Identifier	php_com_typelibraries		523859	1					
ANR	523896	Argument	search_string		523859	1					
ANR	523897	Identifier	search_string		523859	0					
ANR	523898	Argument	l		523859	2					
ANR	523899	Identifier	l		523859	0					
ANR	523900	Identifier	NULL		523859	1					
ANR	523901	CompoundStatement		8:89:163:163	523859	1					
ANR	523902	ExpressionStatement	* cached = 1	242:2:7578:7589	523859	0	True				
ANR	523903	AssignmentExpression	* cached = 1		523859	0		=			
ANR	523904	UnaryOperationExpression	* cached		523859	0					
ANR	523905	UnaryOperator	*		523859	0					
ANR	523906	Identifier	cached		523859	1					
ANR	523907	PrimaryExpression	1		523859	1					
ANR	523908	ExpressionStatement	ITypeLib_AddRef ( TL )	244:2:7632:7651	523859	1	True				
ANR	523909	CallExpression	ITypeLib_AddRef ( TL )		523859	0					
ANR	523910	Callee	ITypeLib_AddRef		523859	0					
ANR	523911	Identifier	ITypeLib_AddRef		523859	0					
ANR	523912	ArgumentList	TL		523859	1					
ANR	523913	Argument	TL		523859	0					
ANR	523914	Identifier	TL		523859	0					
ANR	523915	ReturnStatement	return TL ;	245:2:7655:7664	523859	2	True				
ANR	523916	Identifier	TL		523859	0					
ANR	523917	ExpressionStatement	* cached = 0	248:1:7671:7682	523859	5	True				
ANR	523918	AssignmentExpression	* cached = 0		523859	0		=			
ANR	523919	UnaryOperationExpression	* cached		523859	0					
ANR	523920	UnaryOperator	*		523859	0					
ANR	523921	Identifier	cached		523859	1					
ANR	523922	PrimaryExpression	0		523859	1					
ANR	523923	ExpressionStatement	"name_dup = estrndup ( search_string , l )"	249:1:7685:7722	523859	6	True				
ANR	523924	AssignmentExpression	"name_dup = estrndup ( search_string , l )"		523859	0		=			
ANR	523925	Identifier	name_dup		523859	0					
ANR	523926	CallExpression	"estrndup ( search_string , l )"		523859	1					
ANR	523927	Callee	estrndup		523859	0					
ANR	523928	Identifier	estrndup		523859	0					
ANR	523929	ArgumentList	search_string		523859	1					
ANR	523930	Argument	search_string		523859	0					
ANR	523931	Identifier	search_string		523859	0					
ANR	523932	Argument	l		523859	1					
ANR	523933	Identifier	l		523859	0					
ANR	523934	ExpressionStatement	"TL = php_com_load_typelib ( name_dup , codepage )"	250:1:7725:7770	523859	7	True				
ANR	523935	AssignmentExpression	"TL = php_com_load_typelib ( name_dup , codepage )"		523859	0		=			
ANR	523936	Identifier	TL		523859	0					
ANR	523937	CallExpression	"php_com_load_typelib ( name_dup , codepage )"		523859	1					
ANR	523938	Callee	php_com_load_typelib		523859	0					
ANR	523939	Identifier	php_com_load_typelib		523859	0					
ANR	523940	ArgumentList	name_dup		523859	1					
ANR	523941	Argument	name_dup		523859	0					
ANR	523942	Identifier	name_dup		523859	0					
ANR	523943	Argument	codepage		523859	1					
ANR	523944	Identifier	codepage		523859	0					
ANR	523945	ExpressionStatement	efree ( name_dup )	251:1:7773:7788	523859	8	True				
ANR	523946	CallExpression	efree ( name_dup )		523859	0					
ANR	523947	Callee	efree		523859	0					
ANR	523948	Identifier	efree		523859	0					
ANR	523949	ArgumentList	name_dup		523859	1					
ANR	523950	Argument	name_dup		523859	0					
ANR	523951	Identifier	name_dup		523859	0					
ANR	523952	IfStatement	if ( TL )		523859	9					
ANR	523953	Condition	TL	253:5:7796:7797	523859	0	True				
ANR	523954	Identifier	TL		523859	0					
ANR	523955	CompoundStatement		20:9:389:389	523859	1					
ANR	523956	IfStatement	"if ( NULL != zend_ts_hash_str_update_ptr ( & php_com_typelibraries , search_string , l , TL ) )"		523859	0					
ANR	523957	Condition	"NULL != zend_ts_hash_str_update_ptr ( & php_com_typelibraries , search_string , l , TL )"	254:6:7808:7892	523859	0	True				
ANR	523958	EqualityExpression	"NULL != zend_ts_hash_str_update_ptr ( & php_com_typelibraries , search_string , l , TL )"		523859	0		!=			
ANR	523959	Identifier	NULL		523859	0					
ANR	523960	CallExpression	"zend_ts_hash_str_update_ptr ( & php_com_typelibraries , search_string , l , TL )"		523859	1					
ANR	523961	Callee	zend_ts_hash_str_update_ptr		523859	0					
ANR	523962	Identifier	zend_ts_hash_str_update_ptr		523859	0					
ANR	523963	ArgumentList	& php_com_typelibraries		523859	1					
ANR	523964	Argument	& php_com_typelibraries		523859	0					
ANR	523965	UnaryOperationExpression	& php_com_typelibraries		523859	0					
ANR	523966	UnaryOperator	&		523859	0					
ANR	523967	Identifier	php_com_typelibraries		523859	1					
ANR	523968	Argument	search_string		523859	1					
ANR	523969	Identifier	search_string		523859	0					
ANR	523970	Argument	l		523859	2					
ANR	523971	Identifier	l		523859	0					
ANR	523972	Argument	TL		523859	3					
ANR	523973	Identifier	TL		523859	0					
ANR	523974	CompoundStatement		22:27:484:484	523859	1					
ANR	523975	ExpressionStatement	ITypeLib_AddRef ( TL )	257:3:7944:7963	523859	0	True				
ANR	523976	CallExpression	ITypeLib_AddRef ( TL )		523859	0					
ANR	523977	Callee	ITypeLib_AddRef		523859	0					
ANR	523978	Identifier	ITypeLib_AddRef		523859	0					
ANR	523979	ArgumentList	TL		523859	1					
ANR	523980	Argument	TL		523859	0					
ANR	523981	Identifier	TL		523859	0					
ANR	523982	ReturnStatement	return TL ;	261:1:7974:7983	523859	10	True				
ANR	523983	Identifier	TL		523859	0					
ANR	523984	ReturnType	PHP_COM_DOTNET_API ITypeLib *		523859	1					
ANR	523985	Identifier	php_com_load_typelib_via_cache		523859	2					
ANR	523986	ParameterList	"char * search_string , int codepage , int * cached"		523859	3					
ANR	523987	Parameter	char * search_string	232:60:7361:7379	523859	0	True				
ANR	523988	ParameterType	char *		523859	0					
ANR	523989	Identifier	search_string		523859	1					
ANR	523990	Parameter	int codepage	233:1:7383:7394	523859	1	True				
ANR	523991	ParameterType	int		523859	0					
ANR	523992	Identifier	codepage		523859	1					
ANR	523993	Parameter	int * cached	233:15:7397:7407	523859	2	True				
ANR	523994	ParameterType	int *		523859	0					
ANR	523995	Identifier	cached		523859	1					
ANR	523996	CFGEntryNode	ENTRY		523859		True				
ANR	523997	CFGExitNode	EXIT		523859		True				
ANR	523998	Symbol	NULL		523859						
ANR	523999	Symbol	& php_com_typelibraries		523859						
ANR	524000	Symbol	php_com_load_typelib		523859						
ANR	524001	Symbol	search_string		523859						
ANR	524002	Symbol	codepage		523859						
ANR	524003	Symbol	l		523859						
ANR	524004	Symbol	zend_ts_hash_str_update_ptr		523859						
ANR	524005	Symbol	strlen		523859						
ANR	524006	Symbol	name_dup		523859						
ANR	524007	Symbol	estrndup		523859						
ANR	524008	Symbol	zend_ts_hash_str_find_ptr		523859						
ANR	524009	Symbol	* cached		523859						
ANR	524010	Symbol	cached		523859						
ANR	524011	Symbol	TL		523859						
ANR	524012	Function	php_com_locate_typeinfo	264:0:7988:11290							
ANR	524013	FunctionDef	"php_com_locate_typeinfo (char * typelibname , php_com_dotnet_object * obj , char * dispname , int sink)"		524012	0					
ANR	524014	CompoundStatement		265:0:8096:11290	524012	0					
ANR	524015	IdentifierDeclStatement	ITypeInfo * typeinfo = NULL ;	266:1:8099:8125	524012	0	True				
ANR	524016	IdentifierDecl	* typeinfo = NULL		524012	0					
ANR	524017	IdentifierDeclType	ITypeInfo *		524012	0					
ANR	524018	Identifier	typeinfo		524012	1					
ANR	524019	AssignmentExpression	* typeinfo = NULL		524012	2		=			
ANR	524020	Identifier	NULL		524012	0					
ANR	524021	Identifier	NULL		524012	1					
ANR	524022	IdentifierDeclStatement	ITypeLib * typelib = NULL ;	267:1:8128:8152	524012	1	True				
ANR	524023	IdentifierDecl	* typelib = NULL		524012	0					
ANR	524024	IdentifierDeclType	ITypeLib *		524012	0					
ANR	524025	Identifier	typelib		524012	1					
ANR	524026	AssignmentExpression	* typelib = NULL		524012	2		=			
ANR	524027	Identifier	NULL		524012	0					
ANR	524028	Identifier	NULL		524012	1					
ANR	524029	IdentifierDeclStatement	int gotguid = 0 ;	268:1:8155:8170	524012	2	True				
ANR	524030	IdentifierDecl	gotguid = 0		524012	0					
ANR	524031	IdentifierDeclType	int		524012	0					
ANR	524032	Identifier	gotguid		524012	1					
ANR	524033	AssignmentExpression	gotguid = 0		524012	2		=			
ANR	524034	Identifier	gotguid		524012	0					
ANR	524035	PrimaryExpression	0		524012	1					
ANR	524036	IdentifierDeclStatement	GUID iid ;	269:1:8173:8181	524012	3	True				
ANR	524037	IdentifierDecl	iid		524012	0					
ANR	524038	IdentifierDeclType	GUID		524012	0					
ANR	524039	Identifier	iid		524012	1					
ANR	524040	IfStatement	if ( obj )		524012	4					
ANR	524041	Condition	obj	271:5:8189:8191	524012	0	True				
ANR	524042	Identifier	obj		524012	0					
ANR	524043	CompoundStatement		7:10:97:97	524012	1					
ANR	524044	IfStatement	if ( dispname == NULL && sink )		524012	0					
ANR	524045	Condition	dispname == NULL && sink	272:6:8202:8225	524012	0	True				
ANR	524046	AndExpression	dispname == NULL && sink		524012	0		&&			
ANR	524047	EqualityExpression	dispname == NULL		524012	0		==			
ANR	524048	Identifier	dispname		524012	0					
ANR	524049	Identifier	NULL		524012	1					
ANR	524050	Identifier	sink		524012	1					
ANR	524051	CompoundStatement		10:3:165:187	524012	1					
ANR	524052	IdentifierDeclStatement	IProvideClassInfo2 * pci2 ;	273:3:8233:8257	524012	0	True				
ANR	524053	IdentifierDecl	* pci2		524012	0					
ANR	524054	IdentifierDeclType	IProvideClassInfo2 *		524012	0					
ANR	524055	Identifier	pci2		524012	1					
ANR	524056	IdentifierDeclStatement	IProvideClassInfo * pci ;	274:3:8262:8284	524012	1	True				
ANR	524057	IdentifierDecl	* pci		524012	0					
ANR	524058	IdentifierDeclType	IProvideClassInfo *		524012	0					
ANR	524059	Identifier	pci		524012	1					
ANR	524060	IfStatement	"if ( SUCCEEDED ( IDispatch_QueryInterface ( V_DISPATCH ( & obj -> v ) , & IID_IProvideClassInfo2 , ( void * * ) & pci2 ) ) )"		524012	2					
ANR	524061	Condition	"SUCCEEDED ( IDispatch_QueryInterface ( V_DISPATCH ( & obj -> v ) , & IID_IProvideClassInfo2 , ( void * * ) & pci2 ) )"	276:7:8294:8389	524012	0	True				
ANR	524062	CallExpression	"SUCCEEDED ( IDispatch_QueryInterface ( V_DISPATCH ( & obj -> v ) , & IID_IProvideClassInfo2 , ( void * * ) & pci2 ) )"		524012	0					
ANR	524063	Callee	SUCCEEDED		524012	0					
ANR	524064	Identifier	SUCCEEDED		524012	0					
ANR	524065	ArgumentList	"IDispatch_QueryInterface ( V_DISPATCH ( & obj -> v ) , & IID_IProvideClassInfo2 , ( void * * ) & pci2 )"		524012	1					
ANR	524066	Argument	"IDispatch_QueryInterface ( V_DISPATCH ( & obj -> v ) , & IID_IProvideClassInfo2 , ( void * * ) & pci2 )"		524012	0					
ANR	524067	CallExpression	"IDispatch_QueryInterface ( V_DISPATCH ( & obj -> v ) , & IID_IProvideClassInfo2 , ( void * * ) & pci2 )"		524012	0					
ANR	524068	Callee	IDispatch_QueryInterface		524012	0					
ANR	524069	Identifier	IDispatch_QueryInterface		524012	0					
ANR	524070	ArgumentList	V_DISPATCH ( & obj -> v )		524012	1					
ANR	524071	Argument	V_DISPATCH ( & obj -> v )		524012	0					
ANR	524072	CallExpression	V_DISPATCH ( & obj -> v )		524012	0					
ANR	524073	Callee	V_DISPATCH		524012	0					
ANR	524074	Identifier	V_DISPATCH		524012	0					
ANR	524075	ArgumentList	& obj -> v		524012	1					
ANR	524076	Argument	& obj -> v		524012	0					
ANR	524077	UnaryOperationExpression	& obj -> v		524012	0					
ANR	524078	UnaryOperator	&		524012	0					
ANR	524079	PtrMemberAccess	obj -> v		524012	1					
ANR	524080	Identifier	obj		524012	0					
ANR	524081	Identifier	v		524012	1					
ANR	524082	Argument	& IID_IProvideClassInfo2		524012	1					
ANR	524083	UnaryOperationExpression	& IID_IProvideClassInfo2		524012	0					
ANR	524084	UnaryOperator	&		524012	0					
ANR	524085	Identifier	IID_IProvideClassInfo2		524012	1					
ANR	524086	Argument	( void * * ) & pci2		524012	2					
ANR	524087	CastExpression	( void * * ) & pci2		524012	0					
ANR	524088	CastTarget	void * *		524012	0					
ANR	524089	UnaryOperationExpression	& pci2		524012	1					
ANR	524090	UnaryOperator	&		524012	0					
ANR	524091	Identifier	pci2		524012	1					
ANR	524092	CompoundStatement		12:105:295:295	524012	1					
ANR	524093	ExpressionStatement	"gotguid = SUCCEEDED ( IProvideClassInfo2_GetGUID ( pci2 , GUIDKIND_DEFAULT_SOURCE_DISP_IID , & iid ) )"	277:4:8398:8491	524012	0	True				
ANR	524094	AssignmentExpression	"gotguid = SUCCEEDED ( IProvideClassInfo2_GetGUID ( pci2 , GUIDKIND_DEFAULT_SOURCE_DISP_IID , & iid ) )"		524012	0		=			
ANR	524095	Identifier	gotguid		524012	0					
ANR	524096	CallExpression	"SUCCEEDED ( IProvideClassInfo2_GetGUID ( pci2 , GUIDKIND_DEFAULT_SOURCE_DISP_IID , & iid ) )"		524012	1					
ANR	524097	Callee	SUCCEEDED		524012	0					
ANR	524098	Identifier	SUCCEEDED		524012	0					
ANR	524099	ArgumentList	"IProvideClassInfo2_GetGUID ( pci2 , GUIDKIND_DEFAULT_SOURCE_DISP_IID , & iid )"		524012	1					
ANR	524100	Argument	"IProvideClassInfo2_GetGUID ( pci2 , GUIDKIND_DEFAULT_SOURCE_DISP_IID , & iid )"		524012	0					
ANR	524101	CallExpression	"IProvideClassInfo2_GetGUID ( pci2 , GUIDKIND_DEFAULT_SOURCE_DISP_IID , & iid )"		524012	0					
ANR	524102	Callee	IProvideClassInfo2_GetGUID		524012	0					
ANR	524103	Identifier	IProvideClassInfo2_GetGUID		524012	0					
ANR	524104	ArgumentList	pci2		524012	1					
ANR	524105	Argument	pci2		524012	0					
ANR	524106	Identifier	pci2		524012	0					
ANR	524107	Argument	GUIDKIND_DEFAULT_SOURCE_DISP_IID		524012	1					
ANR	524108	Identifier	GUIDKIND_DEFAULT_SOURCE_DISP_IID		524012	0					
ANR	524109	Argument	& iid		524012	2					
ANR	524110	UnaryOperationExpression	& iid		524012	0					
ANR	524111	UnaryOperator	&		524012	0					
ANR	524112	Identifier	iid		524012	1					
ANR	524113	ExpressionStatement	IProvideClassInfo2_Release ( pci2 )	278:4:8497:8529	524012	1	True				
ANR	524114	CallExpression	IProvideClassInfo2_Release ( pci2 )		524012	0					
ANR	524115	Callee	IProvideClassInfo2_Release		524012	0					
ANR	524116	Identifier	IProvideClassInfo2_Release		524012	0					
ANR	524117	ArgumentList	pci2		524012	1					
ANR	524118	Argument	pci2		524012	0					
ANR	524119	Identifier	pci2		524012	0					
ANR	524120	IfStatement	"if ( ! gotguid && SUCCEEDED ( IDispatch_QueryInterface ( V_DISPATCH ( & obj -> v ) , & IID_IProvideClassInfo , ( void * * ) & pci ) ) )"		524012	3					
ANR	524121	Condition	"! gotguid && SUCCEEDED ( IDispatch_QueryInterface ( V_DISPATCH ( & obj -> v ) , & IID_IProvideClassInfo , ( void * * ) & pci ) )"	280:7:8543:8648	524012	0	True				
ANR	524122	AndExpression	"! gotguid && SUCCEEDED ( IDispatch_QueryInterface ( V_DISPATCH ( & obj -> v ) , & IID_IProvideClassInfo , ( void * * ) & pci ) )"		524012	0		&&			
ANR	524123	UnaryOperationExpression	! gotguid		524012	0					
ANR	524124	UnaryOperator	!		524012	0					
ANR	524125	Identifier	gotguid		524012	1					
ANR	524126	CallExpression	"SUCCEEDED ( IDispatch_QueryInterface ( V_DISPATCH ( & obj -> v ) , & IID_IProvideClassInfo , ( void * * ) & pci ) )"		524012	1					
ANR	524127	Callee	SUCCEEDED		524012	0					
ANR	524128	Identifier	SUCCEEDED		524012	0					
ANR	524129	ArgumentList	"IDispatch_QueryInterface ( V_DISPATCH ( & obj -> v ) , & IID_IProvideClassInfo , ( void * * ) & pci )"		524012	1					
ANR	524130	Argument	"IDispatch_QueryInterface ( V_DISPATCH ( & obj -> v ) , & IID_IProvideClassInfo , ( void * * ) & pci )"		524012	0					
ANR	524131	CallExpression	"IDispatch_QueryInterface ( V_DISPATCH ( & obj -> v ) , & IID_IProvideClassInfo , ( void * * ) & pci )"		524012	0					
ANR	524132	Callee	IDispatch_QueryInterface		524012	0					
ANR	524133	Identifier	IDispatch_QueryInterface		524012	0					
ANR	524134	ArgumentList	V_DISPATCH ( & obj -> v )		524012	1					
ANR	524135	Argument	V_DISPATCH ( & obj -> v )		524012	0					
ANR	524136	CallExpression	V_DISPATCH ( & obj -> v )		524012	0					
ANR	524137	Callee	V_DISPATCH		524012	0					
ANR	524138	Identifier	V_DISPATCH		524012	0					
ANR	524139	ArgumentList	& obj -> v		524012	1					
ANR	524140	Argument	& obj -> v		524012	0					
ANR	524141	UnaryOperationExpression	& obj -> v		524012	0					
ANR	524142	UnaryOperator	&		524012	0					
ANR	524143	PtrMemberAccess	obj -> v		524012	1					
ANR	524144	Identifier	obj		524012	0					
ANR	524145	Identifier	v		524012	1					
ANR	524146	Argument	& IID_IProvideClassInfo		524012	1					
ANR	524147	UnaryOperationExpression	& IID_IProvideClassInfo		524012	0					
ANR	524148	UnaryOperator	&		524012	0					
ANR	524149	Identifier	IID_IProvideClassInfo		524012	1					
ANR	524150	Argument	( void * * ) & pci		524012	2					
ANR	524151	CastExpression	( void * * ) & pci		524012	0					
ANR	524152	CastTarget	void * *		524012	0					
ANR	524153	UnaryOperationExpression	& pci		524012	1					
ANR	524154	UnaryOperator	&		524012	0					
ANR	524155	Identifier	pci		524012	1					
ANR	524156	CompoundStatement		16:115:554:554	524012	1					
ANR	524157	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""IProvideClassInfo: this code not yet written!"" )"	283:4:8737:8819	524012	0	True				
ANR	524158	CallExpression	"php_error_docref ( NULL , E_WARNING , ""IProvideClassInfo: this code not yet written!"" )"		524012	0					
ANR	524159	Callee	php_error_docref		524012	0					
ANR	524160	Identifier	php_error_docref		524012	0					
ANR	524161	ArgumentList	NULL		524012	1					
ANR	524162	Argument	NULL		524012	0					
ANR	524163	Identifier	NULL		524012	0					
ANR	524164	Argument	E_WARNING		524012	1					
ANR	524165	Identifier	E_WARNING		524012	0					
ANR	524166	Argument	"""IProvideClassInfo: this code not yet written!"""		524012	2					
ANR	524167	PrimaryExpression	"""IProvideClassInfo: this code not yet written!"""		524012	0					
ANR	524168	ExpressionStatement	IProvideClassInfo_Release ( pci )	284:4:8825:8855	524012	1	True				
ANR	524169	CallExpression	IProvideClassInfo_Release ( pci )		524012	0					
ANR	524170	Callee	IProvideClassInfo_Release		524012	0					
ANR	524171	Identifier	IProvideClassInfo_Release		524012	0					
ANR	524172	ArgumentList	pci		524012	1					
ANR	524173	Argument	pci		524012	0					
ANR	524174	Identifier	pci		524012	0					
ANR	524175	ElseStatement	else		524012	0					
ANR	524176	IfStatement	if ( dispname == NULL )		524012	0					
ANR	524177	Condition	dispname == NULL	286:13:8875:8890	524012	0	True				
ANR	524178	EqualityExpression	dispname == NULL		524012	0		==			
ANR	524179	Identifier	dispname		524012	0					
ANR	524180	Identifier	NULL		524012	1					
ANR	524181	CompoundStatement		22:31:796:796	524012	1					
ANR	524182	IfStatement	if ( obj -> typeinfo )		524012	0					
ANR	524183	Condition	obj -> typeinfo	287:7:8902:8914	524012	0	True				
ANR	524184	PtrMemberAccess	obj -> typeinfo		524012	0					
ANR	524185	Identifier	obj		524012	0					
ANR	524186	Identifier	typeinfo		524012	1					
ANR	524187	CompoundStatement		23:22:820:820	524012	1					
ANR	524188	ExpressionStatement	ITypeInfo_AddRef ( obj -> typeinfo )	288:4:8923:8954	524012	0	True				
ANR	524189	CallExpression	ITypeInfo_AddRef ( obj -> typeinfo )		524012	0					
ANR	524190	Callee	ITypeInfo_AddRef		524012	0					
ANR	524191	Identifier	ITypeInfo_AddRef		524012	0					
ANR	524192	ArgumentList	obj -> typeinfo		524012	1					
ANR	524193	Argument	obj -> typeinfo		524012	0					
ANR	524194	PtrMemberAccess	obj -> typeinfo		524012	0					
ANR	524195	Identifier	obj		524012	0					
ANR	524196	Identifier	typeinfo		524012	1					
ANR	524197	ReturnStatement	return obj -> typeinfo ;	289:4:8960:8980	524012	1	True				
ANR	524198	PtrMemberAccess	obj -> typeinfo		524012	0					
ANR	524199	Identifier	obj		524012	0					
ANR	524200	Identifier	typeinfo		524012	1					
ANR	524201	ElseStatement	else		524012	0					
ANR	524202	CompoundStatement		26:10:895:895	524012	0					
ANR	524203	ExpressionStatement	"IDispatch_GetTypeInfo ( V_DISPATCH ( & obj -> v ) , 0 , LANG_NEUTRAL , & typeinfo )"	291:4:8998:9068	524012	0	True				
ANR	524204	CallExpression	"IDispatch_GetTypeInfo ( V_DISPATCH ( & obj -> v ) , 0 , LANG_NEUTRAL , & typeinfo )"		524012	0					
ANR	524205	Callee	IDispatch_GetTypeInfo		524012	0					
ANR	524206	Identifier	IDispatch_GetTypeInfo		524012	0					
ANR	524207	ArgumentList	V_DISPATCH ( & obj -> v )		524012	1					
ANR	524208	Argument	V_DISPATCH ( & obj -> v )		524012	0					
ANR	524209	CallExpression	V_DISPATCH ( & obj -> v )		524012	0					
ANR	524210	Callee	V_DISPATCH		524012	0					
ANR	524211	Identifier	V_DISPATCH		524012	0					
ANR	524212	ArgumentList	& obj -> v		524012	1					
ANR	524213	Argument	& obj -> v		524012	0					
ANR	524214	UnaryOperationExpression	& obj -> v		524012	0					
ANR	524215	UnaryOperator	&		524012	0					
ANR	524216	PtrMemberAccess	obj -> v		524012	1					
ANR	524217	Identifier	obj		524012	0					
ANR	524218	Identifier	v		524012	1					
ANR	524219	Argument	0		524012	1					
ANR	524220	PrimaryExpression	0		524012	0					
ANR	524221	Argument	LANG_NEUTRAL		524012	2					
ANR	524222	Identifier	LANG_NEUTRAL		524012	0					
ANR	524223	Argument	& typeinfo		524012	3					
ANR	524224	UnaryOperationExpression	& typeinfo		524012	0					
ANR	524225	UnaryOperator	&		524012	0					
ANR	524226	Identifier	typeinfo		524012	1					
ANR	524227	IfStatement	if ( typeinfo )		524012	1					
ANR	524228	Condition	typeinfo	292:8:9078:9085	524012	0	True				
ANR	524229	Identifier	typeinfo		524012	0					
ANR	524230	CompoundStatement		28:18:991:991	524012	1					
ANR	524231	ReturnStatement	return typeinfo ;	293:5:9095:9110	524012	0	True				
ANR	524232	Identifier	typeinfo		524012	0					
ANR	524233	ElseStatement	else		524012	0					
ANR	524234	IfStatement	if ( dispname && obj -> typeinfo )		524012	0					
ANR	524235	Condition	dispname && obj -> typeinfo	296:13:9136:9160	524012	0	True				
ANR	524236	AndExpression	dispname && obj -> typeinfo		524012	0		&&			
ANR	524237	Identifier	dispname		524012	0					
ANR	524238	PtrMemberAccess	obj -> typeinfo		524012	1					
ANR	524239	Identifier	obj		524012	0					
ANR	524240	Identifier	typeinfo		524012	1					
ANR	524241	CompoundStatement		33:3:1071:1087	524012	1					
ANR	524242	IdentifierDeclStatement	unsigned int idx ;	297:3:9168:9184	524012	0	True				
ANR	524243	IdentifierDecl	idx		524012	0					
ANR	524244	IdentifierDeclType	unsigned int		524012	0					
ANR	524245	Identifier	idx		524012	1					
ANR	524246	ExpressionStatement	"ITypeInfo_GetContainingTypeLib ( obj -> typeinfo , & typelib , & idx )"	299:3:9265:9326	524012	1	True				
ANR	524247	CallExpression	"ITypeInfo_GetContainingTypeLib ( obj -> typeinfo , & typelib , & idx )"		524012	0					
ANR	524248	Callee	ITypeInfo_GetContainingTypeLib		524012	0					
ANR	524249	Identifier	ITypeInfo_GetContainingTypeLib		524012	0					
ANR	524250	ArgumentList	obj -> typeinfo		524012	1					
ANR	524251	Argument	obj -> typeinfo		524012	0					
ANR	524252	PtrMemberAccess	obj -> typeinfo		524012	0					
ANR	524253	Identifier	obj		524012	0					
ANR	524254	Identifier	typeinfo		524012	1					
ANR	524255	Argument	& typelib		524012	1					
ANR	524256	UnaryOperationExpression	& typelib		524012	0					
ANR	524257	UnaryOperator	&		524012	0					
ANR	524258	Identifier	typelib		524012	1					
ANR	524259	Argument	& idx		524012	2					
ANR	524260	UnaryOperationExpression	& idx		524012	0					
ANR	524261	UnaryOperator	&		524012	0					
ANR	524262	Identifier	idx		524012	1					
ANR	524263	ElseStatement	else		524012	0					
ANR	524264	IfStatement	if ( typelibname == NULL )		524012	0					
ANR	524265	Condition	typelibname == NULL	300:13:9341:9359	524012	0	True				
ANR	524266	EqualityExpression	typelibname == NULL		524012	0		==			
ANR	524267	Identifier	typelibname		524012	0					
ANR	524268	Identifier	NULL		524012	1					
ANR	524269	CompoundStatement		36:34:1265:1265	524012	1					
ANR	524270	ExpressionStatement	"IDispatch_GetTypeInfo ( V_DISPATCH ( & obj -> v ) , 0 , LANG_NEUTRAL , & typeinfo )"	301:3:9367:9437	524012	0	True				
ANR	524271	CallExpression	"IDispatch_GetTypeInfo ( V_DISPATCH ( & obj -> v ) , 0 , LANG_NEUTRAL , & typeinfo )"		524012	0					
ANR	524272	Callee	IDispatch_GetTypeInfo		524012	0					
ANR	524273	Identifier	IDispatch_GetTypeInfo		524012	0					
ANR	524274	ArgumentList	V_DISPATCH ( & obj -> v )		524012	1					
ANR	524275	Argument	V_DISPATCH ( & obj -> v )		524012	0					
ANR	524276	CallExpression	V_DISPATCH ( & obj -> v )		524012	0					
ANR	524277	Callee	V_DISPATCH		524012	0					
ANR	524278	Identifier	V_DISPATCH		524012	0					
ANR	524279	ArgumentList	& obj -> v		524012	1					
ANR	524280	Argument	& obj -> v		524012	0					
ANR	524281	UnaryOperationExpression	& obj -> v		524012	0					
ANR	524282	UnaryOperator	&		524012	0					
ANR	524283	PtrMemberAccess	obj -> v		524012	1					
ANR	524284	Identifier	obj		524012	0					
ANR	524285	Identifier	v		524012	1					
ANR	524286	Argument	0		524012	1					
ANR	524287	PrimaryExpression	0		524012	0					
ANR	524288	Argument	LANG_NEUTRAL		524012	2					
ANR	524289	Identifier	LANG_NEUTRAL		524012	0					
ANR	524290	Argument	& typeinfo		524012	3					
ANR	524291	UnaryOperationExpression	& typeinfo		524012	0					
ANR	524292	UnaryOperator	&		524012	0					
ANR	524293	Identifier	typeinfo		524012	1					
ANR	524294	IfStatement	if ( dispname )		524012	1					
ANR	524295	Condition	dispname	302:7:9446:9453	524012	0	True				
ANR	524296	Identifier	dispname		524012	0					
ANR	524297	CompoundStatement		39:4:1365:1381	524012	1					
ANR	524298	IdentifierDeclStatement	unsigned int idx ;	303:4:9462:9478	524012	0	True				
ANR	524299	IdentifierDecl	idx		524012	0					
ANR	524300	IdentifierDeclType	unsigned int		524012	0					
ANR	524301	Identifier	idx		524012	1					
ANR	524302	ExpressionStatement	"ITypeInfo_GetContainingTypeLib ( typeinfo , & typelib , & idx )"	305:4:9561:9617	524012	1	True				
ANR	524303	CallExpression	"ITypeInfo_GetContainingTypeLib ( typeinfo , & typelib , & idx )"		524012	0					
ANR	524304	Callee	ITypeInfo_GetContainingTypeLib		524012	0					
ANR	524305	Identifier	ITypeInfo_GetContainingTypeLib		524012	0					
ANR	524306	ArgumentList	typeinfo		524012	1					
ANR	524307	Argument	typeinfo		524012	0					
ANR	524308	Identifier	typeinfo		524012	0					
ANR	524309	Argument	& typelib		524012	1					
ANR	524310	UnaryOperationExpression	& typelib		524012	0					
ANR	524311	UnaryOperator	&		524012	0					
ANR	524312	Identifier	typelib		524012	1					
ANR	524313	Argument	& idx		524012	2					
ANR	524314	UnaryOperationExpression	& idx		524012	0					
ANR	524315	UnaryOperator	&		524012	0					
ANR	524316	Identifier	idx		524012	1					
ANR	524317	IfStatement	if ( typelib )		524012	2					
ANR	524318	Condition	typelib	307:8:9628:9634	524012	0	True				
ANR	524319	Identifier	typelib		524012	0					
ANR	524320	CompoundStatement		43:17:1540:1540	524012	1					
ANR	524321	ExpressionStatement	ITypeInfo_Release ( typeinfo )	308:5:9644:9671	524012	0	True				
ANR	524322	CallExpression	ITypeInfo_Release ( typeinfo )		524012	0					
ANR	524323	Callee	ITypeInfo_Release		524012	0					
ANR	524324	Identifier	ITypeInfo_Release		524012	0					
ANR	524325	ArgumentList	typeinfo		524012	1					
ANR	524326	Argument	typeinfo		524012	0					
ANR	524327	Identifier	typeinfo		524012	0					
ANR	524328	ExpressionStatement	typeinfo = NULL	309:5:9678:9693	524012	1	True				
ANR	524329	AssignmentExpression	typeinfo = NULL		524012	0		=			
ANR	524330	Identifier	typeinfo		524012	0					
ANR	524331	Identifier	NULL		524012	1					
ANR	524332	ElseStatement	else		524012	0					
ANR	524333	IfStatement	if ( typelibname )		524012	0					
ANR	524334	Condition	typelibname	313:12:9722:9732	524012	0	True				
ANR	524335	Identifier	typelibname		524012	0					
ANR	524336	CompoundStatement		49:25:1638:1638	524012	1					
ANR	524337	ExpressionStatement	"typelib = php_com_load_typelib ( typelibname , CP_THREAD_ACP )"	315:2:9800:9858	524012	0	True				
ANR	524338	AssignmentExpression	"typelib = php_com_load_typelib ( typelibname , CP_THREAD_ACP )"		524012	0		=			
ANR	524339	Identifier	typelib		524012	0					
ANR	524340	CallExpression	"php_com_load_typelib ( typelibname , CP_THREAD_ACP )"		524012	1					
ANR	524341	Callee	php_com_load_typelib		524012	0					
ANR	524342	Identifier	php_com_load_typelib		524012	0					
ANR	524343	ArgumentList	typelibname		524012	1					
ANR	524344	Argument	typelibname		524012	0					
ANR	524345	Identifier	typelibname		524012	0					
ANR	524346	Argument	CP_THREAD_ACP		524012	1					
ANR	524347	Identifier	CP_THREAD_ACP		524012	0					
ANR	524348	IfStatement	if ( ! gotguid && dispname && typelib )		524012	5					
ANR	524349	Condition	! gotguid && dispname && typelib	318:5:9869:9899	524012	0	True				
ANR	524350	AndExpression	! gotguid && dispname && typelib		524012	0		&&			
ANR	524351	UnaryOperationExpression	! gotguid		524012	0					
ANR	524352	UnaryOperator	!		524012	0					
ANR	524353	Identifier	gotguid		524012	1					
ANR	524354	AndExpression	dispname && typelib		524012	1		&&			
ANR	524355	Identifier	dispname		524012	0					
ANR	524356	Identifier	typelib		524012	1					
ANR	524357	CompoundStatement		57:2:1852:1934	524012	1					
ANR	524358	IdentifierDeclStatement	unsigned short cfound ;	319:2:9906:9927	524012	0	True				
ANR	524359	IdentifierDecl	cfound		524012	0					
ANR	524360	IdentifierDeclType	unsigned short		524012	0					
ANR	524361	Identifier	cfound		524012	1					
ANR	524362	IdentifierDeclStatement	MEMBERID memid ;	320:2:9931:9945	524012	1	True				
ANR	524363	IdentifierDecl	memid		524012	0					
ANR	524364	IdentifierDeclType	MEMBERID		524012	0					
ANR	524365	Identifier	memid		524012	1					
ANR	524366	IdentifierDeclStatement	"OLECHAR * olename = php_com_string_to_olestring ( dispname , strlen ( dispname ) , CP_ACP ) ;"	321:2:9949:10031	524012	2	True				
ANR	524367	IdentifierDecl	"* olename = php_com_string_to_olestring ( dispname , strlen ( dispname ) , CP_ACP )"		524012	0					
ANR	524368	IdentifierDeclType	OLECHAR *		524012	0					
ANR	524369	Identifier	olename		524012	1					
ANR	524370	AssignmentExpression	"* olename = php_com_string_to_olestring ( dispname , strlen ( dispname ) , CP_ACP )"		524012	2		=			
ANR	524371	Identifier	olename		524012	0					
ANR	524372	CallExpression	"php_com_string_to_olestring ( dispname , strlen ( dispname ) , CP_ACP )"		524012	1					
ANR	524373	Callee	php_com_string_to_olestring		524012	0					
ANR	524374	Identifier	php_com_string_to_olestring		524012	0					
ANR	524375	ArgumentList	dispname		524012	1					
ANR	524376	Argument	dispname		524012	0					
ANR	524377	Identifier	dispname		524012	0					
ANR	524378	Argument	strlen ( dispname )		524012	1					
ANR	524379	CallExpression	strlen ( dispname )		524012	0					
ANR	524380	Callee	strlen		524012	0					
ANR	524381	Identifier	strlen		524012	0					
ANR	524382	ArgumentList	dispname		524012	1					
ANR	524383	Argument	dispname		524012	0					
ANR	524384	Identifier	dispname		524012	0					
ANR	524385	Argument	CP_ACP		524012	2					
ANR	524386	Identifier	CP_ACP		524012	0					
ANR	524387	ExpressionStatement	cfound = 1	323:2:10036:10046	524012	3	True				
ANR	524388	AssignmentExpression	cfound = 1		524012	0		=			
ANR	524389	Identifier	cfound		524012	0					
ANR	524390	PrimaryExpression	1		524012	1					
ANR	524391	IfStatement	"if ( FAILED ( ITypeLib_FindName ( typelib , olename , 0 , & typeinfo , & memid , & cfound ) ) || cfound == 0 )"		524012	4					
ANR	524392	Condition	"FAILED ( ITypeLib_FindName ( typelib , olename , 0 , & typeinfo , & memid , & cfound ) ) || cfound == 0"	324:6:10054:10142	524012	0	True				
ANR	524393	OrExpression	"FAILED ( ITypeLib_FindName ( typelib , olename , 0 , & typeinfo , & memid , & cfound ) ) || cfound == 0"		524012	0		||			
ANR	524394	CallExpression	"FAILED ( ITypeLib_FindName ( typelib , olename , 0 , & typeinfo , & memid , & cfound ) )"		524012	0					
ANR	524395	Callee	FAILED		524012	0					
ANR	524396	Identifier	FAILED		524012	0					
ANR	524397	ArgumentList	"ITypeLib_FindName ( typelib , olename , 0 , & typeinfo , & memid , & cfound )"		524012	1					
ANR	524398	Argument	"ITypeLib_FindName ( typelib , olename , 0 , & typeinfo , & memid , & cfound )"		524012	0					
ANR	524399	CallExpression	"ITypeLib_FindName ( typelib , olename , 0 , & typeinfo , & memid , & cfound )"		524012	0					
ANR	524400	Callee	ITypeLib_FindName		524012	0					
ANR	524401	Identifier	ITypeLib_FindName		524012	0					
ANR	524402	ArgumentList	typelib		524012	1					
ANR	524403	Argument	typelib		524012	0					
ANR	524404	Identifier	typelib		524012	0					
ANR	524405	Argument	olename		524012	1					
ANR	524406	Identifier	olename		524012	0					
ANR	524407	Argument	0		524012	2					
ANR	524408	PrimaryExpression	0		524012	0					
ANR	524409	Argument	& typeinfo		524012	3					
ANR	524410	UnaryOperationExpression	& typeinfo		524012	0					
ANR	524411	UnaryOperator	&		524012	0					
ANR	524412	Identifier	typeinfo		524012	1					
ANR	524413	Argument	& memid		524012	4					
ANR	524414	UnaryOperationExpression	& memid		524012	0					
ANR	524415	UnaryOperator	&		524012	0					
ANR	524416	Identifier	memid		524012	1					
ANR	524417	Argument	& cfound		524012	5					
ANR	524418	UnaryOperationExpression	& cfound		524012	0					
ANR	524419	UnaryOperator	&		524012	0					
ANR	524420	Identifier	cfound		524012	1					
ANR	524421	EqualityExpression	cfound == 0		524012	1		==			
ANR	524422	Identifier	cfound		524012	0					
ANR	524423	PrimaryExpression	0		524012	1					
ANR	524424	CompoundStatement		62:3:2071:2088	524012	1					
ANR	524425	IdentifierDeclStatement	CLSID coclass ;	325:3:10150:10163	524012	0	True				
ANR	524426	IdentifierDecl	coclass		524012	0					
ANR	524427	IdentifierDeclType	CLSID		524012	0					
ANR	524428	Identifier	coclass		524012	1					
ANR	524429	IdentifierDeclStatement	ITypeInfo * coinfo ;	326:3:10168:10185	524012	1	True				
ANR	524430	IdentifierDecl	* coinfo		524012	0					
ANR	524431	IdentifierDeclType	ITypeInfo *		524012	0					
ANR	524432	Identifier	coinfo		524012	1					
ANR	524433	IfStatement	"if ( SUCCEEDED ( CLSIDFromProgID ( olename , & coclass ) ) && SUCCEEDED ( ITypeLib_GetTypeInfoOfGuid ( typelib , & coclass , & coinfo ) ) )"		524012	2					
ANR	524434	Condition	"SUCCEEDED ( CLSIDFromProgID ( olename , & coclass ) ) && SUCCEEDED ( ITypeLib_GetTypeInfoOfGuid ( typelib , & coclass , & coinfo ) )"	329:7:10245:10363	524012	0	True				
ANR	524435	AndExpression	"SUCCEEDED ( CLSIDFromProgID ( olename , & coclass ) ) && SUCCEEDED ( ITypeLib_GetTypeInfoOfGuid ( typelib , & coclass , & coinfo ) )"		524012	0		&&			
ANR	524436	CallExpression	"SUCCEEDED ( CLSIDFromProgID ( olename , & coclass ) )"		524012	0					
ANR	524437	Callee	SUCCEEDED		524012	0					
ANR	524438	Identifier	SUCCEEDED		524012	0					
ANR	524439	ArgumentList	"CLSIDFromProgID ( olename , & coclass )"		524012	1					
ANR	524440	Argument	"CLSIDFromProgID ( olename , & coclass )"		524012	0					
ANR	524441	CallExpression	"CLSIDFromProgID ( olename , & coclass )"		524012	0					
ANR	524442	Callee	CLSIDFromProgID		524012	0					
ANR	524443	Identifier	CLSIDFromProgID		524012	0					
ANR	524444	ArgumentList	olename		524012	1					
ANR	524445	Argument	olename		524012	0					
ANR	524446	Identifier	olename		524012	0					
ANR	524447	Argument	& coclass		524012	1					
ANR	524448	UnaryOperationExpression	& coclass		524012	0					
ANR	524449	UnaryOperator	&		524012	0					
ANR	524450	Identifier	coclass		524012	1					
ANR	524451	CallExpression	"SUCCEEDED ( ITypeLib_GetTypeInfoOfGuid ( typelib , & coclass , & coinfo ) )"		524012	1					
ANR	524452	Callee	SUCCEEDED		524012	0					
ANR	524453	Identifier	SUCCEEDED		524012	0					
ANR	524454	ArgumentList	"ITypeLib_GetTypeInfoOfGuid ( typelib , & coclass , & coinfo )"		524012	1					
ANR	524455	Argument	"ITypeLib_GetTypeInfoOfGuid ( typelib , & coclass , & coinfo )"		524012	0					
ANR	524456	CallExpression	"ITypeLib_GetTypeInfoOfGuid ( typelib , & coclass , & coinfo )"		524012	0					
ANR	524457	Callee	ITypeLib_GetTypeInfoOfGuid		524012	0					
ANR	524458	Identifier	ITypeLib_GetTypeInfoOfGuid		524012	0					
ANR	524459	ArgumentList	typelib		524012	1					
ANR	524460	Argument	typelib		524012	0					
ANR	524461	Identifier	typelib		524012	0					
ANR	524462	Argument	& coclass		524012	1					
ANR	524463	UnaryOperationExpression	& coclass		524012	0					
ANR	524464	UnaryOperator	&		524012	0					
ANR	524465	Identifier	coclass		524012	1					
ANR	524466	Argument	& coinfo		524012	2					
ANR	524467	UnaryOperationExpression	& coinfo		524012	0					
ANR	524468	UnaryOperator	&		524012	0					
ANR	524469	Identifier	coinfo		524012	1					
ANR	524470	CompoundStatement		70:4:2377:2382	524012	1					
ANR	524471	IdentifierDeclStatement	TYPEATTR * attr ;	333:4:10454:10468	524012	0	True				
ANR	524472	IdentifierDecl	* attr		524012	0					
ANR	524473	IdentifierDeclType	TYPEATTR *		524012	0					
ANR	524474	Identifier	attr		524012	1					
ANR	524475	IdentifierDeclStatement	int i ;	334:4:10474:10479	524012	1	True				
ANR	524476	IdentifierDecl	i		524012	0					
ANR	524477	IdentifierDeclType	int		524012	0					
ANR	524478	Identifier	i		524012	1					
ANR	524479	ExpressionStatement	"ITypeInfo_GetTypeAttr ( coinfo , & attr )"	336:4:10486:10522	524012	2	True				
ANR	524480	CallExpression	"ITypeInfo_GetTypeAttr ( coinfo , & attr )"		524012	0					
ANR	524481	Callee	ITypeInfo_GetTypeAttr		524012	0					
ANR	524482	Identifier	ITypeInfo_GetTypeAttr		524012	0					
ANR	524483	ArgumentList	coinfo		524012	1					
ANR	524484	Argument	coinfo		524012	0					
ANR	524485	Identifier	coinfo		524012	0					
ANR	524486	Argument	& attr		524012	1					
ANR	524487	UnaryOperationExpression	& attr		524012	0					
ANR	524488	UnaryOperator	&		524012	0					
ANR	524489	Identifier	attr		524012	1					
ANR	524490	ForStatement	for ( i = 0 ; i < attr -> cImplTypes ; i ++ )		524012	3					
ANR	524491	ForInit	i = 0 ;	338:9:10534:10539	524012	0	True				
ANR	524492	AssignmentExpression	i = 0		524012	0		=			
ANR	524493	Identifier	i		524012	0					
ANR	524494	PrimaryExpression	0		524012	1					
ANR	524495	Condition	i < attr -> cImplTypes	338:16:10541:10560	524012	1	True				
ANR	524496	RelationalExpression	i < attr -> cImplTypes		524012	0		<			
ANR	524497	Identifier	i		524012	0					
ANR	524498	PtrMemberAccess	attr -> cImplTypes		524012	1					
ANR	524499	Identifier	attr		524012	0					
ANR	524500	Identifier	cImplTypes		524012	1					
ANR	524501	PostIncDecOperationExpression	i ++	338:38:10563:10565	524012	2	True				
ANR	524502	Identifier	i		524012	0					
ANR	524503	IncDec	++		524012	1					
ANR	524504	CompoundStatement		76:5:2496:2502	524012	3					
ANR	524505	IdentifierDeclStatement	HREFTYPE rt ;	339:5:10575:10586	524012	0	True				
ANR	524506	IdentifierDecl	rt		524012	0					
ANR	524507	IdentifierDeclType	HREFTYPE		524012	0					
ANR	524508	Identifier	rt		524012	1					
ANR	524509	IdentifierDeclStatement	int tf ;	340:5:10593:10599	524012	1	True				
ANR	524510	IdentifierDecl	tf		524012	0					
ANR	524511	IdentifierDeclType	int		524012	0					
ANR	524512	Identifier	tf		524012	1					
ANR	524513	IfStatement	"if ( FAILED ( ITypeInfo_GetImplTypeFlags ( coinfo , i , & tf ) ) )"		524012	2					
ANR	524514	Condition	"FAILED ( ITypeInfo_GetImplTypeFlags ( coinfo , i , & tf ) )"	342:9:10611:10660	524012	0	True				
ANR	524515	CallExpression	"FAILED ( ITypeInfo_GetImplTypeFlags ( coinfo , i , & tf ) )"		524012	0					
ANR	524516	Callee	FAILED		524012	0					
ANR	524517	Identifier	FAILED		524012	0					
ANR	524518	ArgumentList	"ITypeInfo_GetImplTypeFlags ( coinfo , i , & tf )"		524012	1					
ANR	524519	Argument	"ITypeInfo_GetImplTypeFlags ( coinfo , i , & tf )"		524012	0					
ANR	524520	CallExpression	"ITypeInfo_GetImplTypeFlags ( coinfo , i , & tf )"		524012	0					
ANR	524521	Callee	ITypeInfo_GetImplTypeFlags		524012	0					
ANR	524522	Identifier	ITypeInfo_GetImplTypeFlags		524012	0					
ANR	524523	ArgumentList	coinfo		524012	1					
ANR	524524	Argument	coinfo		524012	0					
ANR	524525	Identifier	coinfo		524012	0					
ANR	524526	Argument	i		524012	1					
ANR	524527	Identifier	i		524012	0					
ANR	524528	Argument	& tf		524012	2					
ANR	524529	UnaryOperationExpression	& tf		524012	0					
ANR	524530	UnaryOperator	&		524012	0					
ANR	524531	Identifier	tf		524012	1					
ANR	524532	CompoundStatement		78:61:2566:2566	524012	1					
ANR	524533	ContinueStatement	continue ;	343:6:10671:10679	524012	0	True				
ANR	524534	IfStatement	if ( ( sink && tf == ( IMPLTYPEFLAG_FSOURCE | IMPLTYPEFLAG_FDEFAULT ) ) || ( ! sink && ( tf & IMPLTYPEFLAG_FSOURCE ) == 0 ) )		524012	3					
ANR	524535	Condition	( sink && tf == ( IMPLTYPEFLAG_FSOURCE | IMPLTYPEFLAG_FDEFAULT ) ) || ( ! sink && ( tf & IMPLTYPEFLAG_FSOURCE ) == 0 )	346:9:10698:10810	524012	0	True				
ANR	524536	OrExpression	( sink && tf == ( IMPLTYPEFLAG_FSOURCE | IMPLTYPEFLAG_FDEFAULT ) ) || ( ! sink && ( tf & IMPLTYPEFLAG_FSOURCE ) == 0 )		524012	0		||			
ANR	524537	AndExpression	sink && tf == ( IMPLTYPEFLAG_FSOURCE | IMPLTYPEFLAG_FDEFAULT )		524012	0		&&			
ANR	524538	Identifier	sink		524012	0					
ANR	524539	EqualityExpression	tf == ( IMPLTYPEFLAG_FSOURCE | IMPLTYPEFLAG_FDEFAULT )		524012	1		==			
ANR	524540	Identifier	tf		524012	0					
ANR	524541	InclusiveOrExpression	IMPLTYPEFLAG_FSOURCE | IMPLTYPEFLAG_FDEFAULT		524012	1		|			
ANR	524542	Identifier	IMPLTYPEFLAG_FSOURCE		524012	0					
ANR	524543	Identifier	IMPLTYPEFLAG_FDEFAULT		524012	1					
ANR	524544	AndExpression	! sink && ( tf & IMPLTYPEFLAG_FSOURCE ) == 0		524012	1		&&			
ANR	524545	UnaryOperationExpression	! sink		524012	0					
ANR	524546	UnaryOperator	!		524012	0					
ANR	524547	Identifier	sink		524012	1					
ANR	524548	EqualityExpression	( tf & IMPLTYPEFLAG_FSOURCE ) == 0		524012	1		==			
ANR	524549	BitAndExpression	tf & IMPLTYPEFLAG_FSOURCE		524012	0		&			
ANR	524550	Identifier	tf		524012	0					
ANR	524551	Identifier	IMPLTYPEFLAG_FSOURCE		524012	1					
ANR	524552	PrimaryExpression	0		524012	1					
ANR	524553	CompoundStatement		83:51:2716:2716	524012	1					
ANR	524554	IfStatement	"if ( SUCCEEDED ( ITypeInfo_GetRefTypeOfImplType ( coinfo , i , & rt ) ) )"		524012	0					
ANR	524555	Condition	"SUCCEEDED ( ITypeInfo_GetRefTypeOfImplType ( coinfo , i , & rt ) )"	351:10:10875:10931	524012	0	True				
ANR	524556	CallExpression	"SUCCEEDED ( ITypeInfo_GetRefTypeOfImplType ( coinfo , i , & rt ) )"		524012	0					
ANR	524557	Callee	SUCCEEDED		524012	0					
ANR	524558	Identifier	SUCCEEDED		524012	0					
ANR	524559	ArgumentList	"ITypeInfo_GetRefTypeOfImplType ( coinfo , i , & rt )"		524012	1					
ANR	524560	Argument	"ITypeInfo_GetRefTypeOfImplType ( coinfo , i , & rt )"		524012	0					
ANR	524561	CallExpression	"ITypeInfo_GetRefTypeOfImplType ( coinfo , i , & rt )"		524012	0					
ANR	524562	Callee	ITypeInfo_GetRefTypeOfImplType		524012	0					
ANR	524563	Identifier	ITypeInfo_GetRefTypeOfImplType		524012	0					
ANR	524564	ArgumentList	coinfo		524012	1					
ANR	524565	Argument	coinfo		524012	0					
ANR	524566	Identifier	coinfo		524012	0					
ANR	524567	Argument	i		524012	1					
ANR	524568	Identifier	i		524012	0					
ANR	524569	Argument	& rt		524012	2					
ANR	524570	UnaryOperationExpression	& rt		524012	0					
ANR	524571	UnaryOperator	&		524012	0					
ANR	524572	Identifier	rt		524012	1					
ANR	524573	IfStatement	"if ( SUCCEEDED ( ITypeInfo_GetRefTypeInfo ( coinfo , rt , & typeinfo ) ) )"		524012	1					
ANR	524574	Condition	"SUCCEEDED ( ITypeInfo_GetRefTypeInfo ( coinfo , rt , & typeinfo ) )"	352:11:10945:11002	524012	0	True				
ANR	524575	CallExpression	"SUCCEEDED ( ITypeInfo_GetRefTypeInfo ( coinfo , rt , & typeinfo ) )"		524012	0					
ANR	524576	Callee	SUCCEEDED		524012	0					
ANR	524577	Identifier	SUCCEEDED		524012	0					
ANR	524578	ArgumentList	"ITypeInfo_GetRefTypeInfo ( coinfo , rt , & typeinfo )"		524012	1					
ANR	524579	Argument	"ITypeInfo_GetRefTypeInfo ( coinfo , rt , & typeinfo )"		524012	0					
ANR	524580	CallExpression	"ITypeInfo_GetRefTypeInfo ( coinfo , rt , & typeinfo )"		524012	0					
ANR	524581	Callee	ITypeInfo_GetRefTypeInfo		524012	0					
ANR	524582	Identifier	ITypeInfo_GetRefTypeInfo		524012	0					
ANR	524583	ArgumentList	coinfo		524012	1					
ANR	524584	Argument	coinfo		524012	0					
ANR	524585	Identifier	coinfo		524012	0					
ANR	524586	Argument	rt		524012	1					
ANR	524587	Identifier	rt		524012	0					
ANR	524588	Argument	& typeinfo		524012	2					
ANR	524589	UnaryOperationExpression	& typeinfo		524012	0					
ANR	524590	UnaryOperator	&		524012	0					
ANR	524591	Identifier	typeinfo		524012	1					
ANR	524592	BreakStatement	break ;	353:8:11013:11018	524012	1	True				
ANR	524593	ExpressionStatement	"ITypeInfo_ReleaseTypeAttr ( coinfo , attr )"	358:4:11039:11078	524012	4	True				
ANR	524594	CallExpression	"ITypeInfo_ReleaseTypeAttr ( coinfo , attr )"		524012	0					
ANR	524595	Callee	ITypeInfo_ReleaseTypeAttr		524012	0					
ANR	524596	Identifier	ITypeInfo_ReleaseTypeAttr		524012	0					
ANR	524597	ArgumentList	coinfo		524012	1					
ANR	524598	Argument	coinfo		524012	0					
ANR	524599	Identifier	coinfo		524012	0					
ANR	524600	Argument	attr		524012	1					
ANR	524601	Identifier	attr		524012	0					
ANR	524602	ExpressionStatement	ITypeInfo_Release ( coinfo )	359:4:11084:11109	524012	5	True				
ANR	524603	CallExpression	ITypeInfo_Release ( coinfo )		524012	0					
ANR	524604	Callee	ITypeInfo_Release		524012	0					
ANR	524605	Identifier	ITypeInfo_Release		524012	0					
ANR	524606	ArgumentList	coinfo		524012	1					
ANR	524607	Argument	coinfo		524012	0					
ANR	524608	Identifier	coinfo		524012	0					
ANR	524609	ExpressionStatement	efree ( olename )	364:2:11124:11138	524012	5	True				
ANR	524610	CallExpression	efree ( olename )		524012	0					
ANR	524611	Callee	efree		524012	0					
ANR	524612	Identifier	efree		524012	0					
ANR	524613	ArgumentList	olename		524012	1					
ANR	524614	Argument	olename		524012	0					
ANR	524615	Identifier	olename		524012	0					
ANR	524616	ElseStatement	else		524012	0					
ANR	524617	IfStatement	if ( gotguid )		524012	0					
ANR	524618	Condition	gotguid	365:12:11152:11158	524012	0	True				
ANR	524619	Identifier	gotguid		524012	0					
ANR	524620	CompoundStatement		101:21:3064:3064	524012	1					
ANR	524621	ExpressionStatement	"ITypeLib_GetTypeInfoOfGuid ( typelib , & iid , & typeinfo )"	366:2:11165:11217	524012	0	True				
ANR	524622	CallExpression	"ITypeLib_GetTypeInfoOfGuid ( typelib , & iid , & typeinfo )"		524012	0					
ANR	524623	Callee	ITypeLib_GetTypeInfoOfGuid		524012	0					
ANR	524624	Identifier	ITypeLib_GetTypeInfoOfGuid		524012	0					
ANR	524625	ArgumentList	typelib		524012	1					
ANR	524626	Argument	typelib		524012	0					
ANR	524627	Identifier	typelib		524012	0					
ANR	524628	Argument	& iid		524012	1					
ANR	524629	UnaryOperationExpression	& iid		524012	0					
ANR	524630	UnaryOperator	&		524012	0					
ANR	524631	Identifier	iid		524012	1					
ANR	524632	Argument	& typeinfo		524012	2					
ANR	524633	UnaryOperationExpression	& typeinfo		524012	0					
ANR	524634	UnaryOperator	&		524012	0					
ANR	524635	Identifier	typeinfo		524012	1					
ANR	524636	IfStatement	if ( typelib )		524012	6					
ANR	524637	Condition	typelib	369:5:11228:11234	524012	0	True				
ANR	524638	Identifier	typelib		524012	0					
ANR	524639	CompoundStatement		105:14:3140:3140	524012	1					
ANR	524640	ExpressionStatement	ITypeLib_Release ( typelib )	370:2:11241:11266	524012	0	True				
ANR	524641	CallExpression	ITypeLib_Release ( typelib )		524012	0					
ANR	524642	Callee	ITypeLib_Release		524012	0					
ANR	524643	Identifier	ITypeLib_Release		524012	0					
ANR	524644	ArgumentList	typelib		524012	1					
ANR	524645	Argument	typelib		524012	0					
ANR	524646	Identifier	typelib		524012	0					
ANR	524647	ReturnStatement	return typeinfo ;	373:1:11273:11288	524012	7	True				
ANR	524648	Identifier	typeinfo		524012	0					
ANR	524649	ReturnType	ITypeInfo *		524012	1					
ANR	524650	Identifier	php_com_locate_typeinfo		524012	2					
ANR	524651	ParameterList	"char * typelibname , php_com_dotnet_object * obj , char * dispname , int sink"		524012	3					
ANR	524652	Parameter	char * typelibname	264:35:8023:8039	524012	0	True				
ANR	524653	ParameterType	char *		524012	0					
ANR	524654	Identifier	typelibname		524012	1					
ANR	524655	Parameter	php_com_dotnet_object * obj	264:54:8042:8067	524012	1	True				
ANR	524656	ParameterType	php_com_dotnet_object *		524012	0					
ANR	524657	Identifier	obj		524012	1					
ANR	524658	Parameter	char * dispname	264:82:8070:8083	524012	2	True				
ANR	524659	ParameterType	char *		524012	0					
ANR	524660	Identifier	dispname		524012	1					
ANR	524661	Parameter	int sink	264:98:8086:8093	524012	3	True				
ANR	524662	ParameterType	int		524012	0					
ANR	524663	Identifier	sink		524012	1					
ANR	524664	CFGEntryNode	ENTRY		524012		True				
ANR	524665	CFGExitNode	EXIT		524012		True				
ANR	524666	Symbol	IMPLTYPEFLAG_FSOURCE		524012						
ANR	524667	Symbol	IMPLTYPEFLAG_FDEFAULT		524012						
ANR	524668	Symbol	gotguid		524012						
ANR	524669	Symbol	obj -> typeinfo		524012						
ANR	524670	Symbol	& typeinfo		524012						
ANR	524671	Symbol	php_com_string_to_olestring		524012						
ANR	524672	Symbol	strlen		524012						
ANR	524673	Symbol	typelibname		524012						
ANR	524674	Symbol	FAILED		524012						
ANR	524675	Symbol	coclass		524012						
ANR	524676	Symbol	& IID_IProvideClassInfo2		524012						
ANR	524677	Symbol	& pci2		524012						
ANR	524678	Symbol	CLSIDFromProgID		524012						
ANR	524679	Symbol	memid		524012						
ANR	524680	Symbol	NULL		524012						
ANR	524681	Symbol	LANG_NEUTRAL		524012						
ANR	524682	Symbol	& coinfo		524012						
ANR	524683	Symbol	sink		524012						
ANR	524684	Symbol	coinfo		524012						
ANR	524685	Symbol	pci2		524012						
ANR	524686	Symbol	typelib		524012						
ANR	524687	Symbol	& IID_IProvideClassInfo		524012						
ANR	524688	Symbol	SUCCEEDED		524012						
ANR	524689	Symbol	ITypeLib_GetTypeInfoOfGuid		524012						
ANR	524690	Symbol	ITypeInfo_GetRefTypeInfo		524012						
ANR	524691	Symbol	* attr		524012						
ANR	524692	Symbol	idx		524012						
ANR	524693	Symbol	& tf		524012						
ANR	524694	Symbol	ITypeInfo_GetRefTypeOfImplType		524012						
ANR	524695	Symbol	cfound		524012						
ANR	524696	Symbol	& memid		524012						
ANR	524697	Symbol	rt		524012						
ANR	524698	Symbol	CP_THREAD_ACP		524012						
ANR	524699	Symbol	iid		524012						
ANR	524700	Symbol	php_com_load_typelib		524012						
ANR	524701	Symbol	& cfound		524012						
ANR	524702	Symbol	ITypeInfo_GetImplTypeFlags		524012						
ANR	524703	Symbol	E_WARNING		524012						
ANR	524704	Symbol	typeinfo		524012						
ANR	524705	Symbol	IDispatch_QueryInterface		524012						
ANR	524706	Symbol	olename		524012						
ANR	524707	Symbol	dispname		524012						
ANR	524708	Symbol	IProvideClassInfo2_GetGUID		524012						
ANR	524709	Symbol	pci		524012						
ANR	524710	Symbol	GUIDKIND_DEFAULT_SOURCE_DISP_IID		524012						
ANR	524711	Symbol	attr		524012						
ANR	524712	Symbol	* obj		524012						
ANR	524713	Symbol	& attr		524012						
ANR	524714	Symbol	& typelib		524012						
ANR	524715	Symbol	& idx		524012						
ANR	524716	Symbol	ITypeLib_FindName		524012						
ANR	524717	Symbol	attr -> cImplTypes		524012						
ANR	524718	Symbol	i		524012						
ANR	524719	Symbol	& iid		524012						
ANR	524720	Symbol	& rt		524012						
ANR	524721	Symbol	tf		524012						
ANR	524722	Symbol	V_DISPATCH		524012						
ANR	524723	Symbol	CP_ACP		524012						
ANR	524724	Symbol	& coclass		524012						
ANR	524725	Symbol	obj		524012						
ANR	524726	Symbol	& obj -> v		524012						
ANR	524727	Symbol	& pci		524012						
ANR	524728	ClassDef	<unnamed>	376:13:11306:12090							
ANR	524729	DeclStmt									
ANR	524730	Decl							VARTYPE	VARTYPE	vt
ANR	524731	DeclStmt									
ANR	524732	Decl							const char	const char *	name
ANR	524733	DeclStmt									
ANR	524734	Decl								 [ ]	vt_names
ANR	524735	Function	vt_to_string	410:0:12093:12272							
ANR	524736	FunctionDef	vt_to_string (VARTYPE vt)		524735	0					
ANR	524737	CompoundStatement		411:0:12144:12272	524735	0					
ANR	524738	IdentifierDeclStatement	int i ;	412:1:12147:12152	524735	0	True				
ANR	524739	IdentifierDecl	i		524735	0					
ANR	524740	IdentifierDeclType	int		524735	0					
ANR	524741	Identifier	i		524735	1					
ANR	524742	ForStatement	for ( i = 0 ; vt_names [ i ] . name != NULL ; i ++ )		524735	1					
ANR	524743	ForInit	i = 0 ;	413:6:12160:12165	524735	0	True				
ANR	524744	AssignmentExpression	i = 0		524735	0		=			
ANR	524745	Identifier	i		524735	0					
ANR	524746	PrimaryExpression	0		524735	1					
ANR	524747	Condition	vt_names [ i ] . name != NULL	413:13:12167:12190	524735	1	True				
ANR	524748	EqualityExpression	vt_names [ i ] . name != NULL		524735	0		!=			
ANR	524749	MemberAccess	vt_names [ i ] . name		524735	0					
ANR	524750	ArrayIndexing	vt_names [ i ]		524735	0					
ANR	524751	Identifier	vt_names		524735	0					
ANR	524752	Identifier	i		524735	1					
ANR	524753	Identifier	name		524735	1					
ANR	524754	Identifier	NULL		524735	1					
ANR	524755	PostIncDecOperationExpression	i ++	413:39:12193:12195	524735	2	True				
ANR	524756	Identifier	i		524735	0					
ANR	524757	IncDec	++		524735	1					
ANR	524758	CompoundStatement		3:44:53:53	524735	3					
ANR	524759	IfStatement	if ( vt_names [ i ] . vt == vt )		524735	0					
ANR	524760	Condition	vt_names [ i ] . vt == vt	414:6:12206:12225	524735	0	True				
ANR	524761	EqualityExpression	vt_names [ i ] . vt == vt		524735	0		==			
ANR	524762	MemberAccess	vt_names [ i ] . vt		524735	0					
ANR	524763	ArrayIndexing	vt_names [ i ]		524735	0					
ANR	524764	Identifier	vt_names		524735	0					
ANR	524765	Identifier	i		524735	1					
ANR	524766	Identifier	vt		524735	1					
ANR	524767	Identifier	vt		524735	1					
ANR	524768	ReturnStatement	return vt_names [ i ] . name ;	415:3:12231:12254	524735	1	True				
ANR	524769	MemberAccess	vt_names [ i ] . name		524735	0					
ANR	524770	ArrayIndexing	vt_names [ i ]		524735	0					
ANR	524771	Identifier	vt_names		524735	0					
ANR	524772	Identifier	i		524735	1					
ANR	524773	Identifier	name		524735	1					
ANR	524774	ReturnStatement	"return ""?"" ;"	417:1:12260:12270	524735	2	True				
ANR	524775	PrimaryExpression	"""?"""		524735	0					
ANR	524776	ReturnType	static inline const char *		524735	1					
ANR	524777	Identifier	vt_to_string		524735	2					
ANR	524778	ParameterList	VARTYPE vt		524735	3					
ANR	524779	Parameter	VARTYPE vt	410:39:12132:12141	524735	0	True				
ANR	524780	ParameterType	VARTYPE		524735	0					
ANR	524781	Identifier	vt		524735	1					
ANR	524782	CFGEntryNode	ENTRY		524735		True				
ANR	524783	CFGExitNode	EXIT		524735		True				
ANR	524784	Symbol	vt_names [ i ] . vt		524735						
ANR	524785	Symbol	vt_names		524735						
ANR	524786	Symbol	NULL		524735						
ANR	524787	Symbol	* i		524735						
ANR	524788	Symbol	i		524735						
ANR	524789	Symbol	vt_names [ i ] . name		524735						
ANR	524790	Symbol	* vt_names		524735						
ANR	524791	Symbol	vt		524735						
ANR	524792	Function	php_com_string_from_clsid	420:0:12275:12539							
ANR	524793	FunctionDef	"php_com_string_from_clsid (const CLSID * clsid , int codepage)"		524792	0					
ANR	524794	CompoundStatement		421:0:12348:12539	524792	0					
ANR	524795	IdentifierDeclStatement	LPOLESTR ole_clsid ;	422:1:12351:12369	524792	0	True				
ANR	524796	IdentifierDecl	ole_clsid		524792	0					
ANR	524797	IdentifierDeclType	LPOLESTR		524792	0					
ANR	524798	Identifier	ole_clsid		524792	1					
ANR	524799	IdentifierDeclStatement	char * clsid_str ;	423:1:12372:12387	524792	1	True				
ANR	524800	IdentifierDecl	* clsid_str		524792	0					
ANR	524801	IdentifierDeclType	char *		524792	0					
ANR	524802	Identifier	clsid_str		524792	1					
ANR	524803	ExpressionStatement	"StringFromCLSID ( clsid , & ole_clsid )"	425:1:12391:12425	524792	2	True				
ANR	524804	CallExpression	"StringFromCLSID ( clsid , & ole_clsid )"		524792	0					
ANR	524805	Callee	StringFromCLSID		524792	0					
ANR	524806	Identifier	StringFromCLSID		524792	0					
ANR	524807	ArgumentList	clsid		524792	1					
ANR	524808	Argument	clsid		524792	0					
ANR	524809	Identifier	clsid		524792	0					
ANR	524810	Argument	& ole_clsid		524792	1					
ANR	524811	UnaryOperationExpression	& ole_clsid		524792	0					
ANR	524812	UnaryOperator	&		524792	0					
ANR	524813	Identifier	ole_clsid		524792	1					
ANR	524814	ExpressionStatement	"clsid_str = php_com_olestring_to_string ( ole_clsid , NULL , codepage )"	426:1:12428:12494	524792	3	True				
ANR	524815	AssignmentExpression	"clsid_str = php_com_olestring_to_string ( ole_clsid , NULL , codepage )"		524792	0		=			
ANR	524816	Identifier	clsid_str		524792	0					
ANR	524817	CallExpression	"php_com_olestring_to_string ( ole_clsid , NULL , codepage )"		524792	1					
ANR	524818	Callee	php_com_olestring_to_string		524792	0					
ANR	524819	Identifier	php_com_olestring_to_string		524792	0					
ANR	524820	ArgumentList	ole_clsid		524792	1					
ANR	524821	Argument	ole_clsid		524792	0					
ANR	524822	Identifier	ole_clsid		524792	0					
ANR	524823	Argument	NULL		524792	1					
ANR	524824	Identifier	NULL		524792	0					
ANR	524825	Argument	codepage		524792	2					
ANR	524826	Identifier	codepage		524792	0					
ANR	524827	ExpressionStatement	LocalFree ( ole_clsid )	427:1:12497:12517	524792	4	True				
ANR	524828	CallExpression	LocalFree ( ole_clsid )		524792	0					
ANR	524829	Callee	LocalFree		524792	0					
ANR	524830	Identifier	LocalFree		524792	0					
ANR	524831	ArgumentList	ole_clsid		524792	1					
ANR	524832	Argument	ole_clsid		524792	0					
ANR	524833	Identifier	ole_clsid		524792	0					
ANR	524834	ReturnStatement	return clsid_str ;	429:1:12521:12537	524792	5	True				
ANR	524835	Identifier	clsid_str		524792	0					
ANR	524836	ReturnType	static char *		524792	1					
ANR	524837	Identifier	php_com_string_from_clsid		524792	2					
ANR	524838	ParameterList	"const CLSID * clsid , int codepage"		524792	3					
ANR	524839	Parameter	const CLSID * clsid	420:39:12314:12331	524792	0	True				
ANR	524840	ParameterType	const CLSID *		524792	0					
ANR	524841	Identifier	clsid		524792	1					
ANR	524842	Parameter	int codepage	420:59:12334:12345	524792	1	True				
ANR	524843	ParameterType	int		524792	0					
ANR	524844	Identifier	codepage		524792	1					
ANR	524845	CFGEntryNode	ENTRY		524792		True				
ANR	524846	CFGExitNode	EXIT		524792		True				
ANR	524847	Symbol	clsid		524792						
ANR	524848	Symbol	php_com_olestring_to_string		524792						
ANR	524849	Symbol	NULL		524792						
ANR	524850	Symbol	& ole_clsid		524792						
ANR	524851	Symbol	clsid_str		524792						
ANR	524852	Symbol	codepage		524792						
ANR	524853	Symbol	ole_clsid		524792						
ANR	524854	Function	php_com_process_typeinfo	433:0:12543:17154							
ANR	524855	FunctionDef	"php_com_process_typeinfo (ITypeInfo * typeinfo , HashTable * id_to_name , int printdef , GUID * guid , int codepage)"		524854	0					
ANR	524856	CompoundStatement		434:0:12656:17154	524854	0					
ANR	524857	IdentifierDeclStatement	TYPEATTR * attr ;	435:1:12659:12673	524854	0	True				
ANR	524858	IdentifierDecl	* attr		524854	0					
ANR	524859	IdentifierDeclType	TYPEATTR *		524854	0					
ANR	524860	Identifier	attr		524854	1					
ANR	524861	IdentifierDeclStatement	FUNCDESC * func ;	436:1:12676:12690	524854	1	True				
ANR	524862	IdentifierDecl	* func		524854	0					
ANR	524863	IdentifierDeclType	FUNCDESC *		524854	0					
ANR	524864	Identifier	func		524854	1					
ANR	524865	IdentifierDeclStatement	int i ;	437:1:12693:12698	524854	2	True				
ANR	524866	IdentifierDecl	i		524854	0					
ANR	524867	IdentifierDeclType	int		524854	0					
ANR	524868	Identifier	i		524854	1					
ANR	524869	IdentifierDeclStatement	OLECHAR * olename ;	438:1:12701:12717	524854	3	True				
ANR	524870	IdentifierDecl	* olename		524854	0					
ANR	524871	IdentifierDeclType	OLECHAR *		524854	0					
ANR	524872	Identifier	olename		524854	1					
ANR	524873	IdentifierDeclStatement	char * ansiname = NULL ;	439:1:12720:12741	524854	4	True				
ANR	524874	IdentifierDecl	* ansiname = NULL		524854	0					
ANR	524875	IdentifierDeclType	char *		524854	0					
ANR	524876	Identifier	ansiname		524854	1					
ANR	524877	AssignmentExpression	* ansiname = NULL		524854	2		=			
ANR	524878	Identifier	NULL		524854	0					
ANR	524879	Identifier	NULL		524854	1					
ANR	524880	IdentifierDeclStatement	size_t ansinamelen ;	440:1:12744:12762	524854	5	True				
ANR	524881	IdentifierDecl	ansinamelen		524854	0					
ANR	524882	IdentifierDeclType	size_t		524854	0					
ANR	524883	Identifier	ansinamelen		524854	1					
ANR	524884	IdentifierDeclStatement	int ret = 0 ;	441:1:12765:12776	524854	6	True				
ANR	524885	IdentifierDecl	ret = 0		524854	0					
ANR	524886	IdentifierDeclType	int		524854	0					
ANR	524887	Identifier	ret		524854	1					
ANR	524888	AssignmentExpression	ret = 0		524854	2		=			
ANR	524889	Identifier	ret		524854	0					
ANR	524890	PrimaryExpression	0		524854	1					
ANR	524891	IfStatement	"if ( FAILED ( ITypeInfo_GetTypeAttr ( typeinfo , & attr ) ) )"		524854	7					
ANR	524892	Condition	"FAILED ( ITypeInfo_GetTypeAttr ( typeinfo , & attr ) )"	443:5:12784:12829	524854	0	True				
ANR	524893	CallExpression	"FAILED ( ITypeInfo_GetTypeAttr ( typeinfo , & attr ) )"		524854	0					
ANR	524894	Callee	FAILED		524854	0					
ANR	524895	Identifier	FAILED		524854	0					
ANR	524896	ArgumentList	"ITypeInfo_GetTypeAttr ( typeinfo , & attr )"		524854	1					
ANR	524897	Argument	"ITypeInfo_GetTypeAttr ( typeinfo , & attr )"		524854	0					
ANR	524898	CallExpression	"ITypeInfo_GetTypeAttr ( typeinfo , & attr )"		524854	0					
ANR	524899	Callee	ITypeInfo_GetTypeAttr		524854	0					
ANR	524900	Identifier	ITypeInfo_GetTypeAttr		524854	0					
ANR	524901	ArgumentList	typeinfo		524854	1					
ANR	524902	Argument	typeinfo		524854	0					
ANR	524903	Identifier	typeinfo		524854	0					
ANR	524904	Argument	& attr		524854	1					
ANR	524905	UnaryOperationExpression	& attr		524854	0					
ANR	524906	UnaryOperator	&		524854	0					
ANR	524907	Identifier	attr		524854	1					
ANR	524908	CompoundStatement		10:53:175:175	524854	1					
ANR	524909	ReturnStatement	return 0 ;	444:2:12836:12844	524854	0	True				
ANR	524910	PrimaryExpression	0		524854	0					
ANR	524911	IfStatement	if ( id_to_name == NULL || attr -> typekind == TKIND_DISPATCH )		524854	8					
ANR	524912	Condition	id_to_name == NULL || attr -> typekind == TKIND_DISPATCH	448:5:12889:12942	524854	0	True				
ANR	524913	OrExpression	id_to_name == NULL || attr -> typekind == TKIND_DISPATCH		524854	0		||			
ANR	524914	EqualityExpression	id_to_name == NULL		524854	0		==			
ANR	524915	Identifier	id_to_name		524854	0					
ANR	524916	Identifier	NULL		524854	1					
ANR	524917	EqualityExpression	attr -> typekind == TKIND_DISPATCH		524854	1		==			
ANR	524918	PtrMemberAccess	attr -> typekind		524854	0					
ANR	524919	Identifier	attr		524854	0					
ANR	524920	Identifier	typekind		524854	1					
ANR	524921	Identifier	TKIND_DISPATCH		524854	1					
ANR	524922	CompoundStatement		15:61:288:288	524854	1					
ANR	524923	IfStatement	if ( guid )		524854	0					
ANR	524924	Condition	guid	450:6:12954:12957	524854	0	True				
ANR	524925	Identifier	guid		524854	0					
ANR	524926	CompoundStatement		17:12:303:303	524854	1					
ANR	524927	ExpressionStatement	"memcpy ( guid , & attr -> guid , sizeof ( GUID ) )"	451:3:12965:13004	524854	0	True				
ANR	524928	CallExpression	"memcpy ( guid , & attr -> guid , sizeof ( GUID ) )"		524854	0					
ANR	524929	Callee	memcpy		524854	0					
ANR	524930	Identifier	memcpy		524854	0					
ANR	524931	ArgumentList	guid		524854	1					
ANR	524932	Argument	guid		524854	0					
ANR	524933	Identifier	guid		524854	0					
ANR	524934	Argument	& attr -> guid		524854	1					
ANR	524935	UnaryOperationExpression	& attr -> guid		524854	0					
ANR	524936	UnaryOperator	&		524854	0					
ANR	524937	PtrMemberAccess	attr -> guid		524854	1					
ANR	524938	Identifier	attr		524854	0					
ANR	524939	Identifier	guid		524854	1					
ANR	524940	Argument	sizeof ( GUID )		524854	2					
ANR	524941	SizeofExpression	sizeof ( GUID )		524854	0					
ANR	524942	Sizeof	sizeof		524854	0					
ANR	524943	SizeofOperand	GUID		524854	1					
ANR	524944	IfStatement	if ( printdef )		524854	1					
ANR	524945	Condition	printdef	454:6:13017:13024	524854	0	True				
ANR	524946	Identifier	printdef		524854	0					
ANR	524947	CompoundStatement		22:3:375:391	524854	1					
ANR	524948	IdentifierDeclStatement	char * guidstring ;	455:3:13032:13048	524854	0	True				
ANR	524949	IdentifierDecl	* guidstring		524854	0					
ANR	524950	IdentifierDeclType	char *		524854	0					
ANR	524951	Identifier	guidstring		524854	1					
ANR	524952	ExpressionStatement	"ITypeInfo_GetDocumentation ( typeinfo , MEMBERID_NIL , & olename , NULL , NULL , NULL )"	457:3:13054:13132	524854	1	True				
ANR	524953	CallExpression	"ITypeInfo_GetDocumentation ( typeinfo , MEMBERID_NIL , & olename , NULL , NULL , NULL )"		524854	0					
ANR	524954	Callee	ITypeInfo_GetDocumentation		524854	0					
ANR	524955	Identifier	ITypeInfo_GetDocumentation		524854	0					
ANR	524956	ArgumentList	typeinfo		524854	1					
ANR	524957	Argument	typeinfo		524854	0					
ANR	524958	Identifier	typeinfo		524854	0					
ANR	524959	Argument	MEMBERID_NIL		524854	1					
ANR	524960	Identifier	MEMBERID_NIL		524854	0					
ANR	524961	Argument	& olename		524854	2					
ANR	524962	UnaryOperationExpression	& olename		524854	0					
ANR	524963	UnaryOperator	&		524854	0					
ANR	524964	Identifier	olename		524854	1					
ANR	524965	Argument	NULL		524854	3					
ANR	524966	Identifier	NULL		524854	0					
ANR	524967	Argument	NULL		524854	4					
ANR	524968	Identifier	NULL		524854	0					
ANR	524969	Argument	NULL		524854	5					
ANR	524970	Identifier	NULL		524854	0					
ANR	524971	ExpressionStatement	"ansiname = php_com_olestring_to_string ( olename , & ansinamelen , codepage )"	458:3:13137:13208	524854	2	True				
ANR	524972	AssignmentExpression	"ansiname = php_com_olestring_to_string ( olename , & ansinamelen , codepage )"		524854	0		=			
ANR	524973	Identifier	ansiname		524854	0					
ANR	524974	CallExpression	"php_com_olestring_to_string ( olename , & ansinamelen , codepage )"		524854	1					
ANR	524975	Callee	php_com_olestring_to_string		524854	0					
ANR	524976	Identifier	php_com_olestring_to_string		524854	0					
ANR	524977	ArgumentList	olename		524854	1					
ANR	524978	Argument	olename		524854	0					
ANR	524979	Identifier	olename		524854	0					
ANR	524980	Argument	& ansinamelen		524854	1					
ANR	524981	UnaryOperationExpression	& ansinamelen		524854	0					
ANR	524982	UnaryOperator	&		524854	0					
ANR	524983	Identifier	ansinamelen		524854	1					
ANR	524984	Argument	codepage		524854	2					
ANR	524985	Identifier	codepage		524854	0					
ANR	524986	ExpressionStatement	SysFreeString ( olename )	459:3:13213:13235	524854	3	True				
ANR	524987	CallExpression	SysFreeString ( olename )		524854	0					
ANR	524988	Callee	SysFreeString		524854	0					
ANR	524989	Identifier	SysFreeString		524854	0					
ANR	524990	ArgumentList	olename		524854	1					
ANR	524991	Argument	olename		524854	0					
ANR	524992	Identifier	olename		524854	0					
ANR	524993	ExpressionStatement	"guidstring = php_com_string_from_clsid ( & attr -> guid , codepage )"	461:3:13241:13302	524854	4	True				
ANR	524994	AssignmentExpression	"guidstring = php_com_string_from_clsid ( & attr -> guid , codepage )"		524854	0		=			
ANR	524995	Identifier	guidstring		524854	0					
ANR	524996	CallExpression	"php_com_string_from_clsid ( & attr -> guid , codepage )"		524854	1					
ANR	524997	Callee	php_com_string_from_clsid		524854	0					
ANR	524998	Identifier	php_com_string_from_clsid		524854	0					
ANR	524999	ArgumentList	& attr -> guid		524854	1					
ANR	525000	Argument	& attr -> guid		524854	0					
ANR	525001	UnaryOperationExpression	& attr -> guid		524854	0					
ANR	525002	UnaryOperator	&		524854	0					
ANR	525003	PtrMemberAccess	attr -> guid		524854	1					
ANR	525004	Identifier	attr		524854	0					
ANR	525005	Identifier	guid		524854	1					
ANR	525006	Argument	codepage		524854	1					
ANR	525007	Identifier	codepage		524854	0					
ANR	525008	ExpressionStatement	"php_printf ( ""class %s { /* GUID=%s */\\n"" , ansiname , guidstring )"	462:3:13307:13369	524854	5	True				
ANR	525009	CallExpression	"php_printf ( ""class %s { /* GUID=%s */\\n"" , ansiname , guidstring )"		524854	0					
ANR	525010	Callee	php_printf		524854	0					
ANR	525011	Identifier	php_printf		524854	0					
ANR	525012	ArgumentList	"""class %s { /* GUID=%s */\\n"""		524854	1					
ANR	525013	Argument	"""class %s { /* GUID=%s */\\n"""		524854	0					
ANR	525014	PrimaryExpression	"""class %s { /* GUID=%s */\\n"""		524854	0					
ANR	525015	Argument	ansiname		524854	1					
ANR	525016	Identifier	ansiname		524854	0					
ANR	525017	Argument	guidstring		524854	2					
ANR	525018	Identifier	guidstring		524854	0					
ANR	525019	ExpressionStatement	efree ( guidstring )	463:3:13374:13391	524854	6	True				
ANR	525020	CallExpression	efree ( guidstring )		524854	0					
ANR	525021	Callee	efree		524854	0					
ANR	525022	Identifier	efree		524854	0					
ANR	525023	ArgumentList	guidstring		524854	1					
ANR	525024	Argument	guidstring		524854	0					
ANR	525025	Identifier	guidstring		524854	0					
ANR	525026	ExpressionStatement	efree ( ansiname )	465:3:13397:13412	524854	7	True				
ANR	525027	CallExpression	efree ( ansiname )		524854	0					
ANR	525028	Callee	efree		524854	0					
ANR	525029	Identifier	efree		524854	0					
ANR	525030	ArgumentList	ansiname		524854	1					
ANR	525031	Argument	ansiname		524854	0					
ANR	525032	Identifier	ansiname		524854	0					
ANR	525033	IfStatement	if ( id_to_name )		524854	2					
ANR	525034	Condition	id_to_name	468:6:13425:13434	524854	0	True				
ANR	525035	Identifier	id_to_name		524854	0					
ANR	525036	CompoundStatement		35:18:780:780	524854	1					
ANR	525037	ExpressionStatement	"zend_hash_init ( id_to_name , 0 , NULL , ZVAL_PTR_DTOR , 0 )"	469:3:13442:13495	524854	0	True				
ANR	525038	CallExpression	"zend_hash_init ( id_to_name , 0 , NULL , ZVAL_PTR_DTOR , 0 )"		524854	0					
ANR	525039	Callee	zend_hash_init		524854	0					
ANR	525040	Identifier	zend_hash_init		524854	0					
ANR	525041	ArgumentList	id_to_name		524854	1					
ANR	525042	Argument	id_to_name		524854	0					
ANR	525043	Identifier	id_to_name		524854	0					
ANR	525044	Argument	0		524854	1					
ANR	525045	PrimaryExpression	0		524854	0					
ANR	525046	Argument	NULL		524854	2					
ANR	525047	Identifier	NULL		524854	0					
ANR	525048	Argument	ZVAL_PTR_DTOR		524854	3					
ANR	525049	Identifier	ZVAL_PTR_DTOR		524854	0					
ANR	525050	Argument	0		524854	4					
ANR	525051	PrimaryExpression	0		524854	0					
ANR	525052	ForStatement	for ( i = 0 ; i < attr -> cFuncs ; i ++ )		524854	3					
ANR	525053	ForInit	i = 0 ;	473:7:13582:13587	524854	0	True				
ANR	525054	AssignmentExpression	i = 0		524854	0		=			
ANR	525055	Identifier	i		524854	0					
ANR	525056	PrimaryExpression	0		524854	1					
ANR	525057	Condition	i < attr -> cFuncs	473:14:13589:13604	524854	1	True				
ANR	525058	RelationalExpression	i < attr -> cFuncs		524854	0		<			
ANR	525059	Identifier	i		524854	0					
ANR	525060	PtrMemberAccess	attr -> cFuncs		524854	1					
ANR	525061	Identifier	attr		524854	0					
ANR	525062	Identifier	cFuncs		524854	1					
ANR	525063	PostIncDecOperationExpression	i ++	473:32:13607:13609	524854	2	True				
ANR	525064	Identifier	i		524854	0					
ANR	525065	IncDec	++		524854	1					
ANR	525066	CompoundStatement		43:3:1011:1021	524854	3					
ANR	525067	IdentifierDeclStatement	zval tmp ;	474:3:13617:13625	524854	0	True				
ANR	525068	IdentifierDecl	tmp		524854	0					
ANR	525069	IdentifierDeclType	zval		524854	0					
ANR	525070	Identifier	tmp		524854	1					
ANR	525071	IdentifierDeclStatement	DISPID lastid = 0 ;	475:3:13630:13647	524854	1	True				
ANR	525072	IdentifierDecl	lastid = 0		524854	0					
ANR	525073	IdentifierDeclType	DISPID		524854	0					
ANR	525074	Identifier	lastid		524854	1					
ANR	525075	AssignmentExpression	lastid = 0		524854	2		=			
ANR	525076	Identifier	lastid		524854	0					
ANR	525077	PrimaryExpression	0		524854	1					
ANR	525078	IdentifierDeclStatement	int isprop ;	476:3:13668:13678	524854	2	True				
ANR	525079	IdentifierDecl	isprop		524854	0					
ANR	525080	IdentifierDeclType	int		524854	0					
ANR	525081	Identifier	isprop		524854	1					
ANR	525082	IfStatement	"if ( FAILED ( ITypeInfo_GetFuncDesc ( typeinfo , i , & func ) ) )"		524854	3					
ANR	525083	Condition	"FAILED ( ITypeInfo_GetFuncDesc ( typeinfo , i , & func ) )"	478:7:13688:13736	524854	0	True				
ANR	525084	CallExpression	"FAILED ( ITypeInfo_GetFuncDesc ( typeinfo , i , & func ) )"		524854	0					
ANR	525085	Callee	FAILED		524854	0					
ANR	525086	Identifier	FAILED		524854	0					
ANR	525087	ArgumentList	"ITypeInfo_GetFuncDesc ( typeinfo , i , & func )"		524854	1					
ANR	525088	Argument	"ITypeInfo_GetFuncDesc ( typeinfo , i , & func )"		524854	0					
ANR	525089	CallExpression	"ITypeInfo_GetFuncDesc ( typeinfo , i , & func )"		524854	0					
ANR	525090	Callee	ITypeInfo_GetFuncDesc		524854	0					
ANR	525091	Identifier	ITypeInfo_GetFuncDesc		524854	0					
ANR	525092	ArgumentList	typeinfo		524854	1					
ANR	525093	Argument	typeinfo		524854	0					
ANR	525094	Identifier	typeinfo		524854	0					
ANR	525095	Argument	i		524854	1					
ANR	525096	Identifier	i		524854	0					
ANR	525097	Argument	& func		524854	2					
ANR	525098	UnaryOperationExpression	& func		524854	0					
ANR	525099	UnaryOperator	&		524854	0					
ANR	525100	Identifier	func		524854	1					
ANR	525101	BreakStatement	break ;	479:4:13743:13748	524854	1	True				
ANR	525102	ExpressionStatement	isprop = ( func -> invkind & DISPATCH_PROPERTYGET || func -> invkind & DISPATCH_PROPERTYPUT )	481:3:13754:13841	524854	4	True				
ANR	525103	AssignmentExpression	isprop = ( func -> invkind & DISPATCH_PROPERTYGET || func -> invkind & DISPATCH_PROPERTYPUT )		524854	0		=			
ANR	525104	Identifier	isprop		524854	0					
ANR	525105	OrExpression	func -> invkind & DISPATCH_PROPERTYGET || func -> invkind & DISPATCH_PROPERTYPUT		524854	1		||			
ANR	525106	BitAndExpression	func -> invkind & DISPATCH_PROPERTYGET		524854	0		&			
ANR	525107	PtrMemberAccess	func -> invkind		524854	0					
ANR	525108	Identifier	func		524854	0					
ANR	525109	Identifier	invkind		524854	1					
ANR	525110	Identifier	DISPATCH_PROPERTYGET		524854	1					
ANR	525111	BitAndExpression	func -> invkind & DISPATCH_PROPERTYPUT		524854	1		&			
ANR	525112	PtrMemberAccess	func -> invkind		524854	0					
ANR	525113	Identifier	func		524854	0					
ANR	525114	Identifier	invkind		524854	1					
ANR	525115	Identifier	DISPATCH_PROPERTYPUT		524854	1					
ANR	525116	IfStatement	if ( ! isprop || lastid != func -> memid )		524854	5					
ANR	525117	Condition	! isprop || lastid != func -> memid	483:7:13851:13882	524854	0	True				
ANR	525118	OrExpression	! isprop || lastid != func -> memid		524854	0		||			
ANR	525119	UnaryOperationExpression	! isprop		524854	0					
ANR	525120	UnaryOperator	!		524854	0					
ANR	525121	Identifier	isprop		524854	1					
ANR	525122	EqualityExpression	lastid != func -> memid		524854	1		!=			
ANR	525123	Identifier	lastid		524854	0					
ANR	525124	PtrMemberAccess	func -> memid		524854	1					
ANR	525125	Identifier	func		524854	0					
ANR	525126	Identifier	memid		524854	1					
ANR	525127	CompoundStatement		50:41:1228:1228	524854	1					
ANR	525128	ExpressionStatement	lastid = func -> memid	485:4:13892:13912	524854	0	True				
ANR	525129	AssignmentExpression	lastid = func -> memid		524854	0		=			
ANR	525130	Identifier	lastid		524854	0					
ANR	525131	PtrMemberAccess	func -> memid		524854	1					
ANR	525132	Identifier	func		524854	0					
ANR	525133	Identifier	memid		524854	1					
ANR	525134	ExpressionStatement	"ITypeInfo_GetDocumentation ( typeinfo , func -> memid , & olename , NULL , NULL , NULL )"	487:4:13919:13996	524854	1	True				
ANR	525135	CallExpression	"ITypeInfo_GetDocumentation ( typeinfo , func -> memid , & olename , NULL , NULL , NULL )"		524854	0					
ANR	525136	Callee	ITypeInfo_GetDocumentation		524854	0					
ANR	525137	Identifier	ITypeInfo_GetDocumentation		524854	0					
ANR	525138	ArgumentList	typeinfo		524854	1					
ANR	525139	Argument	typeinfo		524854	0					
ANR	525140	Identifier	typeinfo		524854	0					
ANR	525141	Argument	func -> memid		524854	1					
ANR	525142	PtrMemberAccess	func -> memid		524854	0					
ANR	525143	Identifier	func		524854	0					
ANR	525144	Identifier	memid		524854	1					
ANR	525145	Argument	& olename		524854	2					
ANR	525146	UnaryOperationExpression	& olename		524854	0					
ANR	525147	UnaryOperator	&		524854	0					
ANR	525148	Identifier	olename		524854	1					
ANR	525149	Argument	NULL		524854	3					
ANR	525150	Identifier	NULL		524854	0					
ANR	525151	Argument	NULL		524854	4					
ANR	525152	Identifier	NULL		524854	0					
ANR	525153	Argument	NULL		524854	5					
ANR	525154	Identifier	NULL		524854	0					
ANR	525155	ExpressionStatement	"ansiname = php_com_olestring_to_string ( olename , & ansinamelen , codepage )"	488:4:14002:14073	524854	2	True				
ANR	525156	AssignmentExpression	"ansiname = php_com_olestring_to_string ( olename , & ansinamelen , codepage )"		524854	0		=			
ANR	525157	Identifier	ansiname		524854	0					
ANR	525158	CallExpression	"php_com_olestring_to_string ( olename , & ansinamelen , codepage )"		524854	1					
ANR	525159	Callee	php_com_olestring_to_string		524854	0					
ANR	525160	Identifier	php_com_olestring_to_string		524854	0					
ANR	525161	ArgumentList	olename		524854	1					
ANR	525162	Argument	olename		524854	0					
ANR	525163	Identifier	olename		524854	0					
ANR	525164	Argument	& ansinamelen		524854	1					
ANR	525165	UnaryOperationExpression	& ansinamelen		524854	0					
ANR	525166	UnaryOperator	&		524854	0					
ANR	525167	Identifier	ansinamelen		524854	1					
ANR	525168	Argument	codepage		524854	2					
ANR	525169	Identifier	codepage		524854	0					
ANR	525170	ExpressionStatement	SysFreeString ( olename )	489:4:14079:14101	524854	3	True				
ANR	525171	CallExpression	SysFreeString ( olename )		524854	0					
ANR	525172	Callee	SysFreeString		524854	0					
ANR	525173	Identifier	SysFreeString		524854	0					
ANR	525174	ArgumentList	olename		524854	1					
ANR	525175	Argument	olename		524854	0					
ANR	525176	Identifier	olename		524854	0					
ANR	525177	IfStatement	if ( printdef )		524854	4					
ANR	525178	Condition	printdef	491:8:14112:14119	524854	0	True				
ANR	525179	Identifier	printdef		524854	0					
ANR	525180	CompoundStatement		63:5:1560:1571	524854	1					
ANR	525181	IdentifierDeclStatement	int j ;	492:5:14129:14134	524854	0	True				
ANR	525182	IdentifierDecl	j		524854	0					
ANR	525183	IdentifierDeclType	int		524854	0					
ANR	525184	Identifier	j		524854	1					
ANR	525185	IdentifierDeclStatement	char * funcdesc ;	493:5:14141:14155	524854	1	True				
ANR	525186	IdentifierDecl	* funcdesc		524854	0					
ANR	525187	IdentifierDeclType	char *		524854	0					
ANR	525188	Identifier	funcdesc		524854	1					
ANR	525189	IdentifierDeclStatement	size_t funcdesclen ;	494:5:14162:14180	524854	2	True				
ANR	525190	IdentifierDecl	funcdesclen		524854	0					
ANR	525191	IdentifierDeclType	size_t		524854	0					
ANR	525192	Identifier	funcdesclen		524854	1					
ANR	525193	IdentifierDeclStatement	unsigned int cnames = 0 ;	495:5:14187:14210	524854	3	True				
ANR	525194	IdentifierDecl	cnames = 0		524854	0					
ANR	525195	IdentifierDeclType	unsigned int		524854	0					
ANR	525196	Identifier	cnames		524854	1					
ANR	525197	AssignmentExpression	cnames = 0		524854	2		=			
ANR	525198	Identifier	cnames		524854	0					
ANR	525199	PrimaryExpression	0		524854	1					
ANR	525200	IdentifierDeclStatement	BSTR * names ;	496:5:14217:14228	524854	4	True				
ANR	525201	IdentifierDecl	* names		524854	0					
ANR	525202	IdentifierDeclType	BSTR *		524854	0					
ANR	525203	Identifier	names		524854	1					
ANR	525204	ExpressionStatement	"names = ( BSTR * ) safe_emalloc ( ( func -> cParams + 1 ) , sizeof ( BSTR ) , 0 )"	498:5:14236:14301	524854	5	True				
ANR	525205	AssignmentExpression	"names = ( BSTR * ) safe_emalloc ( ( func -> cParams + 1 ) , sizeof ( BSTR ) , 0 )"		524854	0		=			
ANR	525206	Identifier	names		524854	0					
ANR	525207	CastExpression	"( BSTR * ) safe_emalloc ( ( func -> cParams + 1 ) , sizeof ( BSTR ) , 0 )"		524854	1					
ANR	525208	CastTarget	BSTR *		524854	0					
ANR	525209	CallExpression	"safe_emalloc ( ( func -> cParams + 1 ) , sizeof ( BSTR ) , 0 )"		524854	1					
ANR	525210	Callee	safe_emalloc		524854	0					
ANR	525211	Identifier	safe_emalloc		524854	0					
ANR	525212	ArgumentList	func -> cParams + 1		524854	1					
ANR	525213	Argument	func -> cParams + 1		524854	0					
ANR	525214	AdditiveExpression	func -> cParams + 1		524854	0		+			
ANR	525215	PtrMemberAccess	func -> cParams		524854	0					
ANR	525216	Identifier	func		524854	0					
ANR	525217	Identifier	cParams		524854	1					
ANR	525218	PrimaryExpression	1		524854	1					
ANR	525219	Argument	sizeof ( BSTR )		524854	1					
ANR	525220	SizeofExpression	sizeof ( BSTR )		524854	0					
ANR	525221	Sizeof	sizeof		524854	0					
ANR	525222	SizeofOperand	BSTR		524854	1					
ANR	525223	Argument	0		524854	2					
ANR	525224	PrimaryExpression	0		524854	0					
ANR	525225	ExpressionStatement	"ITypeInfo_GetNames ( typeinfo , func -> memid , names , func -> cParams + 1 , & cnames )"	500:5:14309:14385	524854	6	True				
ANR	525226	CallExpression	"ITypeInfo_GetNames ( typeinfo , func -> memid , names , func -> cParams + 1 , & cnames )"		524854	0					
ANR	525227	Callee	ITypeInfo_GetNames		524854	0					
ANR	525228	Identifier	ITypeInfo_GetNames		524854	0					
ANR	525229	ArgumentList	typeinfo		524854	1					
ANR	525230	Argument	typeinfo		524854	0					
ANR	525231	Identifier	typeinfo		524854	0					
ANR	525232	Argument	func -> memid		524854	1					
ANR	525233	PtrMemberAccess	func -> memid		524854	0					
ANR	525234	Identifier	func		524854	0					
ANR	525235	Identifier	memid		524854	1					
ANR	525236	Argument	names		524854	2					
ANR	525237	Identifier	names		524854	0					
ANR	525238	Argument	func -> cParams + 1		524854	3					
ANR	525239	AdditiveExpression	func -> cParams + 1		524854	0		+			
ANR	525240	PtrMemberAccess	func -> cParams		524854	0					
ANR	525241	Identifier	func		524854	0					
ANR	525242	Identifier	cParams		524854	1					
ANR	525243	PrimaryExpression	1		524854	1					
ANR	525244	Argument	& cnames		524854	4					
ANR	525245	UnaryOperationExpression	& cnames		524854	0					
ANR	525246	UnaryOperator	&		524854	0					
ANR	525247	Identifier	cnames		524854	1					
ANR	525248	ExpressionStatement	SysFreeString ( names [ 0 ] )	502:5:14438:14461	524854	7	True				
ANR	525249	CallExpression	SysFreeString ( names [ 0 ] )		524854	0					
ANR	525250	Callee	SysFreeString		524854	0					
ANR	525251	Identifier	SysFreeString		524854	0					
ANR	525252	ArgumentList	names [ 0 ]		524854	1					
ANR	525253	Argument	names [ 0 ]		524854	0					
ANR	525254	ArrayIndexing	names [ 0 ]		524854	0					
ANR	525255	Identifier	names		524854	0					
ANR	525256	PrimaryExpression	0		524854	1					
ANR	525257	ExpressionStatement	"php_printf ( ""\\t/* DISPID=%d */\\n"" , func -> memid )"	504:5:14469:14515	524854	8	True				
ANR	525258	CallExpression	"php_printf ( ""\\t/* DISPID=%d */\\n"" , func -> memid )"		524854	0					
ANR	525259	Callee	php_printf		524854	0					
ANR	525260	Identifier	php_printf		524854	0					
ANR	525261	ArgumentList	"""\\t/* DISPID=%d */\\n"""		524854	1					
ANR	525262	Argument	"""\\t/* DISPID=%d */\\n"""		524854	0					
ANR	525263	PrimaryExpression	"""\\t/* DISPID=%d */\\n"""		524854	0					
ANR	525264	Argument	func -> memid		524854	1					
ANR	525265	PtrMemberAccess	func -> memid		524854	0					
ANR	525266	Identifier	func		524854	0					
ANR	525267	Identifier	memid		524854	1					
ANR	525268	IfStatement	if ( func -> elemdescFunc . tdesc . vt != VT_VOID )		524854	9					
ANR	525269	Condition	func -> elemdescFunc . tdesc . vt != VT_VOID	506:9:14527:14564	524854	0	True				
ANR	525270	EqualityExpression	func -> elemdescFunc . tdesc . vt != VT_VOID		524854	0		!=			
ANR	525271	MemberAccess	func -> elemdescFunc . tdesc . vt		524854	0					
ANR	525272	MemberAccess	func -> elemdescFunc . tdesc		524854	0					
ANR	525273	PtrMemberAccess	func -> elemdescFunc		524854	0					
ANR	525274	Identifier	func		524854	0					
ANR	525275	Identifier	elemdescFunc		524854	1					
ANR	525276	Identifier	tdesc		524854	1					
ANR	525277	Identifier	vt		524854	1					
ANR	525278	Identifier	VT_VOID		524854	1					
ANR	525279	CompoundStatement		73:49:1910:1910	524854	1					
ANR	525280	ExpressionStatement	"php_printf ( ""\\t/* %s [%d] */\\n"" , vt_to_string ( func -> elemdescFunc . tdesc . vt ) , func -> elemdescFunc . tdesc . vt )"	507:6:14575:14703	524854	0	True				
ANR	525281	CallExpression	"php_printf ( ""\\t/* %s [%d] */\\n"" , vt_to_string ( func -> elemdescFunc . tdesc . vt ) , func -> elemdescFunc . tdesc . vt )"		524854	0					
ANR	525282	Callee	php_printf		524854	0					
ANR	525283	Identifier	php_printf		524854	0					
ANR	525284	ArgumentList	"""\\t/* %s [%d] */\\n"""		524854	1					
ANR	525285	Argument	"""\\t/* %s [%d] */\\n"""		524854	0					
ANR	525286	PrimaryExpression	"""\\t/* %s [%d] */\\n"""		524854	0					
ANR	525287	Argument	vt_to_string ( func -> elemdescFunc . tdesc . vt )		524854	1					
ANR	525288	CallExpression	vt_to_string ( func -> elemdescFunc . tdesc . vt )		524854	0					
ANR	525289	Callee	vt_to_string		524854	0					
ANR	525290	Identifier	vt_to_string		524854	0					
ANR	525291	ArgumentList	func -> elemdescFunc . tdesc . vt		524854	1					
ANR	525292	Argument	func -> elemdescFunc . tdesc . vt		524854	0					
ANR	525293	MemberAccess	func -> elemdescFunc . tdesc . vt		524854	0					
ANR	525294	MemberAccess	func -> elemdescFunc . tdesc		524854	0					
ANR	525295	PtrMemberAccess	func -> elemdescFunc		524854	0					
ANR	525296	Identifier	func		524854	0					
ANR	525297	Identifier	elemdescFunc		524854	1					
ANR	525298	Identifier	tdesc		524854	1					
ANR	525299	Identifier	vt		524854	1					
ANR	525300	Argument	func -> elemdescFunc . tdesc . vt		524854	2					
ANR	525301	MemberAccess	func -> elemdescFunc . tdesc . vt		524854	0					
ANR	525302	MemberAccess	func -> elemdescFunc . tdesc		524854	0					
ANR	525303	PtrMemberAccess	func -> elemdescFunc		524854	0					
ANR	525304	Identifier	func		524854	0					
ANR	525305	Identifier	elemdescFunc		524854	1					
ANR	525306	Identifier	tdesc		524854	1					
ANR	525307	Identifier	vt		524854	1					
ANR	525308	IfStatement	if ( isprop )		524854	10					
ANR	525309	Condition	isprop	513:9:14722:14727	524854	0	True				
ANR	525310	Identifier	isprop		524854	0					
ANR	525311	CompoundStatement		80:17:2073:2073	524854	1					
ANR	525312	ExpressionStatement	"ITypeInfo_GetDocumentation ( typeinfo , func -> memid , NULL , & olename , NULL , NULL )"	515:6:14739:14816	524854	0	True				
ANR	525313	CallExpression	"ITypeInfo_GetDocumentation ( typeinfo , func -> memid , NULL , & olename , NULL , NULL )"		524854	0					
ANR	525314	Callee	ITypeInfo_GetDocumentation		524854	0					
ANR	525315	Identifier	ITypeInfo_GetDocumentation		524854	0					
ANR	525316	ArgumentList	typeinfo		524854	1					
ANR	525317	Argument	typeinfo		524854	0					
ANR	525318	Identifier	typeinfo		524854	0					
ANR	525319	Argument	func -> memid		524854	1					
ANR	525320	PtrMemberAccess	func -> memid		524854	0					
ANR	525321	Identifier	func		524854	0					
ANR	525322	Identifier	memid		524854	1					
ANR	525323	Argument	NULL		524854	2					
ANR	525324	Identifier	NULL		524854	0					
ANR	525325	Argument	& olename		524854	3					
ANR	525326	UnaryOperationExpression	& olename		524854	0					
ANR	525327	UnaryOperator	&		524854	0					
ANR	525328	Identifier	olename		524854	1					
ANR	525329	Argument	NULL		524854	4					
ANR	525330	Identifier	NULL		524854	0					
ANR	525331	Argument	NULL		524854	5					
ANR	525332	Identifier	NULL		524854	0					
ANR	525333	IfStatement	if ( olename )		524854	1					
ANR	525334	Condition	olename	516:10:14828:14834	524854	0	True				
ANR	525335	Identifier	olename		524854	0					
ANR	525336	CompoundStatement		83:19:2180:2180	524854	1					
ANR	525337	ExpressionStatement	"funcdesc = php_com_olestring_to_string ( olename , & funcdesclen , codepage )"	517:7:14846:14917	524854	0	True				
ANR	525338	AssignmentExpression	"funcdesc = php_com_olestring_to_string ( olename , & funcdesclen , codepage )"		524854	0		=			
ANR	525339	Identifier	funcdesc		524854	0					
ANR	525340	CallExpression	"php_com_olestring_to_string ( olename , & funcdesclen , codepage )"		524854	1					
ANR	525341	Callee	php_com_olestring_to_string		524854	0					
ANR	525342	Identifier	php_com_olestring_to_string		524854	0					
ANR	525343	ArgumentList	olename		524854	1					
ANR	525344	Argument	olename		524854	0					
ANR	525345	Identifier	olename		524854	0					
ANR	525346	Argument	& funcdesclen		524854	1					
ANR	525347	UnaryOperationExpression	& funcdesclen		524854	0					
ANR	525348	UnaryOperator	&		524854	0					
ANR	525349	Identifier	funcdesclen		524854	1					
ANR	525350	Argument	codepage		524854	2					
ANR	525351	Identifier	codepage		524854	0					
ANR	525352	ExpressionStatement	SysFreeString ( olename )	518:7:14926:14948	524854	1	True				
ANR	525353	CallExpression	SysFreeString ( olename )		524854	0					
ANR	525354	Callee	SysFreeString		524854	0					
ANR	525355	Identifier	SysFreeString		524854	0					
ANR	525356	ArgumentList	olename		524854	1					
ANR	525357	Argument	olename		524854	0					
ANR	525358	Identifier	olename		524854	0					
ANR	525359	ExpressionStatement	"php_printf ( ""\\t/* %s */\\n"" , funcdesc )"	519:7:14957:14993	524854	2	True				
ANR	525360	CallExpression	"php_printf ( ""\\t/* %s */\\n"" , funcdesc )"		524854	0					
ANR	525361	Callee	php_printf		524854	0					
ANR	525362	Identifier	php_printf		524854	0					
ANR	525363	ArgumentList	"""\\t/* %s */\\n"""		524854	1					
ANR	525364	Argument	"""\\t/* %s */\\n"""		524854	0					
ANR	525365	PrimaryExpression	"""\\t/* %s */\\n"""		524854	0					
ANR	525366	Argument	funcdesc		524854	1					
ANR	525367	Identifier	funcdesc		524854	0					
ANR	525368	ExpressionStatement	efree ( funcdesc )	520:7:15002:15017	524854	3	True				
ANR	525369	CallExpression	efree ( funcdesc )		524854	0					
ANR	525370	Callee	efree		524854	0					
ANR	525371	Identifier	efree		524854	0					
ANR	525372	ArgumentList	funcdesc		524854	1					
ANR	525373	Argument	funcdesc		524854	0					
ANR	525374	Identifier	funcdesc		524854	0					
ANR	525375	ExpressionStatement	"php_printf ( ""\\tvar $%s;\\n\\n"" , ansiname )"	523:6:15034:15072	524854	2	True				
ANR	525376	CallExpression	"php_printf ( ""\\tvar $%s;\\n\\n"" , ansiname )"		524854	0					
ANR	525377	Callee	php_printf		524854	0					
ANR	525378	Identifier	php_printf		524854	0					
ANR	525379	ArgumentList	"""\\tvar $%s;\\n\\n"""		524854	1					
ANR	525380	Argument	"""\\tvar $%s;\\n\\n"""		524854	0					
ANR	525381	PrimaryExpression	"""\\tvar $%s;\\n\\n"""		524854	0					
ANR	525382	Argument	ansiname		524854	1					
ANR	525383	Identifier	ansiname		524854	0					
ANR	525384	ElseStatement	else		524854	0					
ANR	525385	CompoundStatement		92:12:2430:2430	524854	0					
ANR	525386	ExpressionStatement	"php_printf ( ""\\tfunction %s(\\n"" , ansiname )"	528:6:15119:15159	524854	0	True				
ANR	525387	CallExpression	"php_printf ( ""\\tfunction %s(\\n"" , ansiname )"		524854	0					
ANR	525388	Callee	php_printf		524854	0					
ANR	525389	Identifier	php_printf		524854	0					
ANR	525390	ArgumentList	"""\\tfunction %s(\\n"""		524854	1					
ANR	525391	Argument	"""\\tfunction %s(\\n"""		524854	0					
ANR	525392	PrimaryExpression	"""\\tfunction %s(\\n"""		524854	0					
ANR	525393	Argument	ansiname		524854	1					
ANR	525394	Identifier	ansiname		524854	0					
ANR	525395	ForStatement	for ( j = 0 ; j < func -> cParams ; j ++ )		524854	1					
ANR	525396	ForInit	j = 0 ;	530:11:15173:15178	524854	0	True				
ANR	525397	AssignmentExpression	j = 0		524854	0		=			
ANR	525398	Identifier	j		524854	0					
ANR	525399	PrimaryExpression	0		524854	1					
ANR	525400	Condition	j < func -> cParams	530:18:15180:15196	524854	1	True				
ANR	525401	RelationalExpression	j < func -> cParams		524854	0		<			
ANR	525402	Identifier	j		524854	0					
ANR	525403	PtrMemberAccess	func -> cParams		524854	1					
ANR	525404	Identifier	func		524854	0					
ANR	525405	Identifier	cParams		524854	1					
ANR	525406	PostIncDecOperationExpression	j ++	530:37:15199:15201	524854	2	True				
ANR	525407	Identifier	j		524854	0					
ANR	525408	IncDec	++		524854	1					
ANR	525409	CompoundStatement		98:7:2556:2600	524854	3					
ANR	525410	IdentifierDeclStatement	ELEMDESC * elem = & func -> lprgelemdescParam [ j ] ;	531:7:15213:15257	524854	0	True				
ANR	525411	IdentifierDecl	* elem = & func -> lprgelemdescParam [ j ]		524854	0					
ANR	525412	IdentifierDeclType	ELEMDESC *		524854	0					
ANR	525413	Identifier	elem		524854	1					
ANR	525414	AssignmentExpression	* elem = & func -> lprgelemdescParam [ j ]		524854	2		=			
ANR	525415	Identifier	elem		524854	0					
ANR	525416	UnaryOperationExpression	& func -> lprgelemdescParam [ j ]		524854	1					
ANR	525417	UnaryOperator	&		524854	0					
ANR	525418	ArrayIndexing	func -> lprgelemdescParam [ j ]		524854	1					
ANR	525419	PtrMemberAccess	func -> lprgelemdescParam		524854	0					
ANR	525420	Identifier	func		524854	0					
ANR	525421	Identifier	lprgelemdescParam		524854	1					
ANR	525422	Identifier	j		524854	1					
ANR	525423	ExpressionStatement	"php_printf ( ""\\t\\t/* %s [%d] "" , vt_to_string ( elem -> tdesc . vt ) , elem -> tdesc . vt )"	533:7:15267:15342	524854	1	True				
ANR	525424	CallExpression	"php_printf ( ""\\t\\t/* %s [%d] "" , vt_to_string ( elem -> tdesc . vt ) , elem -> tdesc . vt )"		524854	0					
ANR	525425	Callee	php_printf		524854	0					
ANR	525426	Identifier	php_printf		524854	0					
ANR	525427	ArgumentList	"""\\t\\t/* %s [%d] """		524854	1					
ANR	525428	Argument	"""\\t\\t/* %s [%d] """		524854	0					
ANR	525429	PrimaryExpression	"""\\t\\t/* %s [%d] """		524854	0					
ANR	525430	Argument	vt_to_string ( elem -> tdesc . vt )		524854	1					
ANR	525431	CallExpression	vt_to_string ( elem -> tdesc . vt )		524854	0					
ANR	525432	Callee	vt_to_string		524854	0					
ANR	525433	Identifier	vt_to_string		524854	0					
ANR	525434	ArgumentList	elem -> tdesc . vt		524854	1					
ANR	525435	Argument	elem -> tdesc . vt		524854	0					
ANR	525436	MemberAccess	elem -> tdesc . vt		524854	0					
ANR	525437	PtrMemberAccess	elem -> tdesc		524854	0					
ANR	525438	Identifier	elem		524854	0					
ANR	525439	Identifier	tdesc		524854	1					
ANR	525440	Identifier	vt		524854	1					
ANR	525441	Argument	elem -> tdesc . vt		524854	2					
ANR	525442	MemberAccess	elem -> tdesc . vt		524854	0					
ANR	525443	PtrMemberAccess	elem -> tdesc		524854	0					
ANR	525444	Identifier	elem		524854	0					
ANR	525445	Identifier	tdesc		524854	1					
ANR	525446	Identifier	vt		524854	1					
ANR	525447	IfStatement	if ( elem -> paramdesc . wParamFlags & PARAMFLAG_FIN )		524854	2					
ANR	525448	Condition	elem -> paramdesc . wParamFlags & PARAMFLAG_FIN	535:11:15356:15398	524854	0	True				
ANR	525449	BitAndExpression	elem -> paramdesc . wParamFlags & PARAMFLAG_FIN		524854	0		&			
ANR	525450	MemberAccess	elem -> paramdesc . wParamFlags		524854	0					
ANR	525451	PtrMemberAccess	elem -> paramdesc		524854	0					
ANR	525452	Identifier	elem		524854	0					
ANR	525453	Identifier	paramdesc		524854	1					
ANR	525454	Identifier	wParamFlags		524854	1					
ANR	525455	Identifier	PARAMFLAG_FIN		524854	1					
ANR	525456	ExpressionStatement	"php_printf ( ""[in]"" )"	536:8:15409:15427	524854	1	True				
ANR	525457	CallExpression	"php_printf ( ""[in]"" )"		524854	0					
ANR	525458	Callee	php_printf		524854	0					
ANR	525459	Identifier	php_printf		524854	0					
ANR	525460	ArgumentList	"""[in]"""		524854	1					
ANR	525461	Argument	"""[in]"""		524854	0					
ANR	525462	PrimaryExpression	"""[in]"""		524854	0					
ANR	525463	IfStatement	if ( elem -> paramdesc . wParamFlags & PARAMFLAG_FOUT )		524854	3					
ANR	525464	Condition	elem -> paramdesc . wParamFlags & PARAMFLAG_FOUT	537:11:15440:15483	524854	0	True				
ANR	525465	BitAndExpression	elem -> paramdesc . wParamFlags & PARAMFLAG_FOUT		524854	0		&			
ANR	525466	MemberAccess	elem -> paramdesc . wParamFlags		524854	0					
ANR	525467	PtrMemberAccess	elem -> paramdesc		524854	0					
ANR	525468	Identifier	elem		524854	0					
ANR	525469	Identifier	paramdesc		524854	1					
ANR	525470	Identifier	wParamFlags		524854	1					
ANR	525471	Identifier	PARAMFLAG_FOUT		524854	1					
ANR	525472	ExpressionStatement	"php_printf ( ""[out]"" )"	538:8:15494:15513	524854	1	True				
ANR	525473	CallExpression	"php_printf ( ""[out]"" )"		524854	0					
ANR	525474	Callee	php_printf		524854	0					
ANR	525475	Identifier	php_printf		524854	0					
ANR	525476	ArgumentList	"""[out]"""		524854	1					
ANR	525477	Argument	"""[out]"""		524854	0					
ANR	525478	PrimaryExpression	"""[out]"""		524854	0					
ANR	525479	IfStatement	if ( elem -> tdesc . vt == VT_PTR )		524854	4					
ANR	525480	Condition	elem -> tdesc . vt == VT_PTR	540:11:15527:15550	524854	0	True				
ANR	525481	EqualityExpression	elem -> tdesc . vt == VT_PTR		524854	0		==			
ANR	525482	MemberAccess	elem -> tdesc . vt		524854	0					
ANR	525483	PtrMemberAccess	elem -> tdesc		524854	0					
ANR	525484	Identifier	elem		524854	0					
ANR	525485	Identifier	tdesc		524854	1					
ANR	525486	Identifier	vt		524854	1					
ANR	525487	Identifier	VT_PTR		524854	1					
ANR	525488	CompoundStatement		107:37:2896:2896	524854	1					
ANR	525489	ExpressionStatement	"php_printf ( "" --> %s [%d] "" , vt_to_string ( elem -> tdesc . lptdesc -> vt ) , elem -> tdesc . lptdesc -> vt )"	542:8:15601:15723	524854	0	True				
ANR	525490	CallExpression	"php_printf ( "" --> %s [%d] "" , vt_to_string ( elem -> tdesc . lptdesc -> vt ) , elem -> tdesc . lptdesc -> vt )"		524854	0					
ANR	525491	Callee	php_printf		524854	0					
ANR	525492	Identifier	php_printf		524854	0					
ANR	525493	ArgumentList	""" --> %s [%d] """		524854	1					
ANR	525494	Argument	""" --> %s [%d] """		524854	0					
ANR	525495	PrimaryExpression	""" --> %s [%d] """		524854	0					
ANR	525496	Argument	vt_to_string ( elem -> tdesc . lptdesc -> vt )		524854	1					
ANR	525497	CallExpression	vt_to_string ( elem -> tdesc . lptdesc -> vt )		524854	0					
ANR	525498	Callee	vt_to_string		524854	0					
ANR	525499	Identifier	vt_to_string		524854	0					
ANR	525500	ArgumentList	elem -> tdesc . lptdesc -> vt		524854	1					
ANR	525501	Argument	elem -> tdesc . lptdesc -> vt		524854	0					
ANR	525502	PtrMemberAccess	elem -> tdesc . lptdesc -> vt		524854	0					
ANR	525503	MemberAccess	elem -> tdesc . lptdesc		524854	0					
ANR	525504	PtrMemberAccess	elem -> tdesc		524854	0					
ANR	525505	Identifier	elem		524854	0					
ANR	525506	Identifier	tdesc		524854	1					
ANR	525507	Identifier	lptdesc		524854	1					
ANR	525508	Identifier	vt		524854	1					
ANR	525509	Argument	elem -> tdesc . lptdesc -> vt		524854	2					
ANR	525510	PtrMemberAccess	elem -> tdesc . lptdesc -> vt		524854	0					
ANR	525511	MemberAccess	elem -> tdesc . lptdesc		524854	0					
ANR	525512	PtrMemberAccess	elem -> tdesc		524854	0					
ANR	525513	Identifier	elem		524854	0					
ANR	525514	Identifier	tdesc		524854	1					
ANR	525515	Identifier	lptdesc		524854	1					
ANR	525516	Identifier	vt		524854	1					
ANR	525517	IfStatement	if ( j + 1 < ( int ) cnames )		524854	5					
ANR	525518	Condition	j + 1 < ( int ) cnames	549:11:15813:15829	524854	0	True				
ANR	525519	RelationalExpression	j + 1 < ( int ) cnames		524854	0		<			
ANR	525520	AdditiveExpression	j + 1		524854	0		+			
ANR	525521	Identifier	j		524854	0					
ANR	525522	PrimaryExpression	1		524854	1					
ANR	525523	CastExpression	( int ) cnames		524854	1					
ANR	525524	CastTarget	int		524854	0					
ANR	525525	Identifier	cnames		524854	1					
ANR	525526	CompoundStatement		116:30:3175:3175	524854	1					
ANR	525527	ExpressionStatement	"funcdesc = php_com_olestring_to_string ( names [ j + 1 ] , & funcdesclen , codepage )"	550:8:15842:15916	524854	0	True				
ANR	525528	AssignmentExpression	"funcdesc = php_com_olestring_to_string ( names [ j + 1 ] , & funcdesclen , codepage )"		524854	0		=			
ANR	525529	Identifier	funcdesc		524854	0					
ANR	525530	CallExpression	"php_com_olestring_to_string ( names [ j + 1 ] , & funcdesclen , codepage )"		524854	1					
ANR	525531	Callee	php_com_olestring_to_string		524854	0					
ANR	525532	Identifier	php_com_olestring_to_string		524854	0					
ANR	525533	ArgumentList	names [ j + 1 ]		524854	1					
ANR	525534	Argument	names [ j + 1 ]		524854	0					
ANR	525535	ArrayIndexing	names [ j + 1 ]		524854	0					
ANR	525536	Identifier	names		524854	0					
ANR	525537	AdditiveExpression	j + 1		524854	1		+			
ANR	525538	Identifier	j		524854	0					
ANR	525539	PrimaryExpression	1		524854	1					
ANR	525540	Argument	& funcdesclen		524854	1					
ANR	525541	UnaryOperationExpression	& funcdesclen		524854	0					
ANR	525542	UnaryOperator	&		524854	0					
ANR	525543	Identifier	funcdesclen		524854	1					
ANR	525544	Argument	codepage		524854	2					
ANR	525545	Identifier	codepage		524854	0					
ANR	525546	ExpressionStatement	SysFreeString ( names [ j + 1 ] )	551:8:15926:15951	524854	1	True				
ANR	525547	CallExpression	SysFreeString ( names [ j + 1 ] )		524854	0					
ANR	525548	Callee	SysFreeString		524854	0					
ANR	525549	Identifier	SysFreeString		524854	0					
ANR	525550	ArgumentList	names [ j + 1 ]		524854	1					
ANR	525551	Argument	names [ j + 1 ]		524854	0					
ANR	525552	ArrayIndexing	names [ j + 1 ]		524854	0					
ANR	525553	Identifier	names		524854	0					
ANR	525554	AdditiveExpression	j + 1		524854	1		+			
ANR	525555	Identifier	j		524854	0					
ANR	525556	PrimaryExpression	1		524854	1					
ANR	525557	ElseStatement	else		524854	0					
ANR	525558	CompoundStatement		119:14:3310:3310	524854	0					
ANR	525559	ExpressionStatement	"funcdesc = ""???"""	553:8:15977:15993	524854	0	True				
ANR	525560	AssignmentExpression	"funcdesc = ""???"""		524854	0		=			
ANR	525561	Identifier	funcdesc		524854	0					
ANR	525562	PrimaryExpression	"""???"""		524854	1					
ANR	525563	ExpressionStatement	"php_printf ( "" */ %s%s%c\\n"" , elem -> tdesc . vt == VT_PTR ? ""&$"" : ""$"" , funcdesc , j == func -> cParams - 1 ? ' ' : ',' )"	556:7:16012:16160	524854	6	True				
ANR	525564	CallExpression	"php_printf ( "" */ %s%s%c\\n"" , elem -> tdesc . vt == VT_PTR ? ""&$"" : ""$"" , funcdesc , j == func -> cParams - 1 ? ' ' : ',' )"		524854	0					
ANR	525565	Callee	php_printf		524854	0					
ANR	525566	Identifier	php_printf		524854	0					
ANR	525567	ArgumentList	""" */ %s%s%c\\n"""		524854	1					
ANR	525568	Argument	""" */ %s%s%c\\n"""		524854	0					
ANR	525569	PrimaryExpression	""" */ %s%s%c\\n"""		524854	0					
ANR	525570	Argument	"elem -> tdesc . vt == VT_PTR ? ""&$"" : ""$"""		524854	1					
ANR	525571	ConditionalExpression	"elem -> tdesc . vt == VT_PTR ? ""&$"" : ""$"""		524854	0					
ANR	525572	Condition	elem -> tdesc . vt == VT_PTR		524854	0					
ANR	525573	EqualityExpression	elem -> tdesc . vt == VT_PTR		524854	0		==			
ANR	525574	MemberAccess	elem -> tdesc . vt		524854	0					
ANR	525575	PtrMemberAccess	elem -> tdesc		524854	0					
ANR	525576	Identifier	elem		524854	0					
ANR	525577	Identifier	tdesc		524854	1					
ANR	525578	Identifier	vt		524854	1					
ANR	525579	Identifier	VT_PTR		524854	1					
ANR	525580	PrimaryExpression	"""&$"""		524854	1					
ANR	525581	PrimaryExpression	"""$"""		524854	2					
ANR	525582	Argument	funcdesc		524854	2					
ANR	525583	Identifier	funcdesc		524854	0					
ANR	525584	Argument	"j == func -> cParams - 1 ? ' ' : ','"		524854	3					
ANR	525585	ConditionalExpression	"j == func -> cParams - 1 ? ' ' : ','"		524854	0					
ANR	525586	Condition	j == func -> cParams - 1		524854	0					
ANR	525587	EqualityExpression	j == func -> cParams - 1		524854	0		==			
ANR	525588	Identifier	j		524854	0					
ANR	525589	AdditiveExpression	func -> cParams - 1		524854	1		-			
ANR	525590	PtrMemberAccess	func -> cParams		524854	0					
ANR	525591	Identifier	func		524854	0					
ANR	525592	Identifier	cParams		524854	1					
ANR	525593	PrimaryExpression	1		524854	1					
ANR	525594	PrimaryExpression	' '		524854	1					
ANR	525595	PrimaryExpression	"','"		524854	2					
ANR	525596	IfStatement	if ( j + 1 < ( int ) cnames )		524854	7					
ANR	525597	Condition	j + 1 < ( int ) cnames	562:11:16174:16190	524854	0	True				
ANR	525598	RelationalExpression	j + 1 < ( int ) cnames		524854	0		<			
ANR	525599	AdditiveExpression	j + 1		524854	0		+			
ANR	525600	Identifier	j		524854	0					
ANR	525601	PrimaryExpression	1		524854	1					
ANR	525602	CastExpression	( int ) cnames		524854	1					
ANR	525603	CastTarget	int		524854	0					
ANR	525604	Identifier	cnames		524854	1					
ANR	525605	CompoundStatement		129:30:3536:3536	524854	1					
ANR	525606	ExpressionStatement	efree ( funcdesc )	563:8:16203:16218	524854	0	True				
ANR	525607	CallExpression	efree ( funcdesc )		524854	0					
ANR	525608	Callee	efree		524854	0					
ANR	525609	Identifier	efree		524854	0					
ANR	525610	ArgumentList	funcdesc		524854	1					
ANR	525611	Argument	funcdesc		524854	0					
ANR	525612	Identifier	funcdesc		524854	0					
ANR	525613	ExpressionStatement	"php_printf ( ""\\t\\t)\\n\\t{\\n"" )"	567:6:16244:16270	524854	2	True				
ANR	525614	CallExpression	"php_printf ( ""\\t\\t)\\n\\t{\\n"" )"		524854	0					
ANR	525615	Callee	php_printf		524854	0					
ANR	525616	Identifier	php_printf		524854	0					
ANR	525617	ArgumentList	"""\\t\\t)\\n\\t{\\n"""		524854	1					
ANR	525618	Argument	"""\\t\\t)\\n\\t{\\n"""		524854	0					
ANR	525619	PrimaryExpression	"""\\t\\t)\\n\\t{\\n"""		524854	0					
ANR	525620	ExpressionStatement	"ITypeInfo_GetDocumentation ( typeinfo , func -> memid , NULL , & olename , NULL , NULL )"	569:6:16279:16356	524854	3	True				
ANR	525621	CallExpression	"ITypeInfo_GetDocumentation ( typeinfo , func -> memid , NULL , & olename , NULL , NULL )"		524854	0					
ANR	525622	Callee	ITypeInfo_GetDocumentation		524854	0					
ANR	525623	Identifier	ITypeInfo_GetDocumentation		524854	0					
ANR	525624	ArgumentList	typeinfo		524854	1					
ANR	525625	Argument	typeinfo		524854	0					
ANR	525626	Identifier	typeinfo		524854	0					
ANR	525627	Argument	func -> memid		524854	1					
ANR	525628	PtrMemberAccess	func -> memid		524854	0					
ANR	525629	Identifier	func		524854	0					
ANR	525630	Identifier	memid		524854	1					
ANR	525631	Argument	NULL		524854	2					
ANR	525632	Identifier	NULL		524854	0					
ANR	525633	Argument	& olename		524854	3					
ANR	525634	UnaryOperationExpression	& olename		524854	0					
ANR	525635	UnaryOperator	&		524854	0					
ANR	525636	Identifier	olename		524854	1					
ANR	525637	Argument	NULL		524854	4					
ANR	525638	Identifier	NULL		524854	0					
ANR	525639	Argument	NULL		524854	5					
ANR	525640	Identifier	NULL		524854	0					
ANR	525641	IfStatement	if ( olename )		524854	4					
ANR	525642	Condition	olename	570:10:16368:16374	524854	0	True				
ANR	525643	Identifier	olename		524854	0					
ANR	525644	CompoundStatement		137:19:3720:3720	524854	1					
ANR	525645	ExpressionStatement	"funcdesc = php_com_olestring_to_string ( olename , & funcdesclen , codepage )"	571:7:16386:16457	524854	0	True				
ANR	525646	AssignmentExpression	"funcdesc = php_com_olestring_to_string ( olename , & funcdesclen , codepage )"		524854	0		=			
ANR	525647	Identifier	funcdesc		524854	0					
ANR	525648	CallExpression	"php_com_olestring_to_string ( olename , & funcdesclen , codepage )"		524854	1					
ANR	525649	Callee	php_com_olestring_to_string		524854	0					
ANR	525650	Identifier	php_com_olestring_to_string		524854	0					
ANR	525651	ArgumentList	olename		524854	1					
ANR	525652	Argument	olename		524854	0					
ANR	525653	Identifier	olename		524854	0					
ANR	525654	Argument	& funcdesclen		524854	1					
ANR	525655	UnaryOperationExpression	& funcdesclen		524854	0					
ANR	525656	UnaryOperator	&		524854	0					
ANR	525657	Identifier	funcdesclen		524854	1					
ANR	525658	Argument	codepage		524854	2					
ANR	525659	Identifier	codepage		524854	0					
ANR	525660	ExpressionStatement	SysFreeString ( olename )	572:7:16466:16488	524854	1	True				
ANR	525661	CallExpression	SysFreeString ( olename )		524854	0					
ANR	525662	Callee	SysFreeString		524854	0					
ANR	525663	Identifier	SysFreeString		524854	0					
ANR	525664	ArgumentList	olename		524854	1					
ANR	525665	Argument	olename		524854	0					
ANR	525666	Identifier	olename		524854	0					
ANR	525667	ExpressionStatement	"php_printf ( ""\\t\\t/* %s */\\n"" , funcdesc )"	573:7:16497:16535	524854	2	True				
ANR	525668	CallExpression	"php_printf ( ""\\t\\t/* %s */\\n"" , funcdesc )"		524854	0					
ANR	525669	Callee	php_printf		524854	0					
ANR	525670	Identifier	php_printf		524854	0					
ANR	525671	ArgumentList	"""\\t\\t/* %s */\\n"""		524854	1					
ANR	525672	Argument	"""\\t\\t/* %s */\\n"""		524854	0					
ANR	525673	PrimaryExpression	"""\\t\\t/* %s */\\n"""		524854	0					
ANR	525674	Argument	funcdesc		524854	1					
ANR	525675	Identifier	funcdesc		524854	0					
ANR	525676	ExpressionStatement	efree ( funcdesc )	574:7:16544:16559	524854	3	True				
ANR	525677	CallExpression	efree ( funcdesc )		524854	0					
ANR	525678	Callee	efree		524854	0					
ANR	525679	Identifier	efree		524854	0					
ANR	525680	ArgumentList	funcdesc		524854	1					
ANR	525681	Argument	funcdesc		524854	0					
ANR	525682	Identifier	funcdesc		524854	0					
ANR	525683	ExpressionStatement	"php_printf ( ""\\t}\\n"" )"	577:6:16576:16595	524854	5	True				
ANR	525684	CallExpression	"php_printf ( ""\\t}\\n"" )"		524854	0					
ANR	525685	Callee	php_printf		524854	0					
ANR	525686	Identifier	php_printf		524854	0					
ANR	525687	ArgumentList	"""\\t}\\n"""		524854	1					
ANR	525688	Argument	"""\\t}\\n"""		524854	0					
ANR	525689	PrimaryExpression	"""\\t}\\n"""		524854	0					
ANR	525690	ExpressionStatement	efree ( names )	580:5:16610:16622	524854	11	True				
ANR	525691	CallExpression	efree ( names )		524854	0					
ANR	525692	Callee	efree		524854	0					
ANR	525693	Identifier	efree		524854	0					
ANR	525694	ArgumentList	names		524854	1					
ANR	525695	Argument	names		524854	0					
ANR	525696	Identifier	names		524854	0					
ANR	525697	IfStatement	if ( id_to_name )		524854	5					
ANR	525698	Condition	id_to_name	583:8:16639:16648	524854	0	True				
ANR	525699	Identifier	id_to_name		524854	0					
ANR	525700	CompoundStatement		150:20:3994:3994	524854	1					
ANR	525701	ExpressionStatement	"zend_str_tolower ( ansiname , ansinamelen )"	584:5:16658:16697	524854	0	True				
ANR	525702	CallExpression	"zend_str_tolower ( ansiname , ansinamelen )"		524854	0					
ANR	525703	Callee	zend_str_tolower		524854	0					
ANR	525704	Identifier	zend_str_tolower		524854	0					
ANR	525705	ArgumentList	ansiname		524854	1					
ANR	525706	Argument	ansiname		524854	0					
ANR	525707	Identifier	ansiname		524854	0					
ANR	525708	Argument	ansinamelen		524854	1					
ANR	525709	Identifier	ansinamelen		524854	0					
ANR	525710	ExpressionStatement	"ZVAL_STRINGL ( & tmp , ansiname , ansinamelen )"	585:5:16704:16745	524854	1	True				
ANR	525711	CallExpression	"ZVAL_STRINGL ( & tmp , ansiname , ansinamelen )"		524854	0					
ANR	525712	Callee	ZVAL_STRINGL		524854	0					
ANR	525713	Identifier	ZVAL_STRINGL		524854	0					
ANR	525714	ArgumentList	& tmp		524854	1					
ANR	525715	Argument	& tmp		524854	0					
ANR	525716	UnaryOperationExpression	& tmp		524854	0					
ANR	525717	UnaryOperator	&		524854	0					
ANR	525718	Identifier	tmp		524854	1					
ANR	525719	Argument	ansiname		524854	1					
ANR	525720	Identifier	ansiname		524854	0					
ANR	525721	Argument	ansinamelen		524854	2					
ANR	525722	Identifier	ansinamelen		524854	0					
ANR	525723	ExpressionStatement	"zend_hash_index_update ( id_to_name , func -> memid , & tmp )"	586:5:16752:16805	524854	2	True				
ANR	525724	CallExpression	"zend_hash_index_update ( id_to_name , func -> memid , & tmp )"		524854	0					
ANR	525725	Callee	zend_hash_index_update		524854	0					
ANR	525726	Identifier	zend_hash_index_update		524854	0					
ANR	525727	ArgumentList	id_to_name		524854	1					
ANR	525728	Argument	id_to_name		524854	0					
ANR	525729	Identifier	id_to_name		524854	0					
ANR	525730	Argument	func -> memid		524854	1					
ANR	525731	PtrMemberAccess	func -> memid		524854	0					
ANR	525732	Identifier	func		524854	0					
ANR	525733	Identifier	memid		524854	1					
ANR	525734	Argument	& tmp		524854	2					
ANR	525735	UnaryOperationExpression	& tmp		524854	0					
ANR	525736	UnaryOperator	&		524854	0					
ANR	525737	Identifier	tmp		524854	1					
ANR	525738	ExpressionStatement	efree ( ansiname )	588:5:16848:16863	524854	3	True				
ANR	525739	CallExpression	efree ( ansiname )		524854	0					
ANR	525740	Callee	efree		524854	0					
ANR	525741	Identifier	efree		524854	0					
ANR	525742	ArgumentList	ansiname		524854	1					
ANR	525743	Argument	ansiname		524854	0					
ANR	525744	Identifier	ansiname		524854	0					
ANR	525745	ExpressionStatement	"ITypeInfo_ReleaseFuncDesc ( typeinfo , func )"	591:3:16879:16920	524854	6	True				
ANR	525746	CallExpression	"ITypeInfo_ReleaseFuncDesc ( typeinfo , func )"		524854	0					
ANR	525747	Callee	ITypeInfo_ReleaseFuncDesc		524854	0					
ANR	525748	Identifier	ITypeInfo_ReleaseFuncDesc		524854	0					
ANR	525749	ArgumentList	typeinfo		524854	1					
ANR	525750	Argument	typeinfo		524854	0					
ANR	525751	Identifier	typeinfo		524854	0					
ANR	525752	Argument	func		524854	1					
ANR	525753	Identifier	func		524854	0					
ANR	525754	IfStatement	if ( printdef )		524854	4					
ANR	525755	Condition	printdef	594:6:16933:16940	524854	0	True				
ANR	525756	Identifier	printdef		524854	0					
ANR	525757	CompoundStatement		161:16:4286:4286	524854	1					
ANR	525758	ExpressionStatement	"php_printf ( ""}\\n"" )"	595:3:16948:16965	524854	0	True				
ANR	525759	CallExpression	"php_printf ( ""}\\n"" )"		524854	0					
ANR	525760	Callee	php_printf		524854	0					
ANR	525761	Identifier	php_printf		524854	0					
ANR	525762	ArgumentList	"""}\\n"""		524854	1					
ANR	525763	Argument	"""}\\n"""		524854	0					
ANR	525764	PrimaryExpression	"""}\\n"""		524854	0					
ANR	525765	ExpressionStatement	ret = 1	598:2:16974:16981	524854	5	True				
ANR	525766	AssignmentExpression	ret = 1		524854	0		=			
ANR	525767	Identifier	ret		524854	0					
ANR	525768	PrimaryExpression	1		524854	1					
ANR	525769	ElseStatement	else		524854	0					
ANR	525770	CompoundStatement		166:8:4334:4334	524854	0					
ANR	525771	ExpressionStatement	"zend_error ( E_WARNING , ""That's not a dispatchable interface!! type kind = %08x"" , attr -> typekind )"	600:2:16995:17090	524854	0	True				
ANR	525772	CallExpression	"zend_error ( E_WARNING , ""That's not a dispatchable interface!! type kind = %08x"" , attr -> typekind )"		524854	0					
ANR	525773	Callee	zend_error		524854	0					
ANR	525774	Identifier	zend_error		524854	0					
ANR	525775	ArgumentList	E_WARNING		524854	1					
ANR	525776	Argument	E_WARNING		524854	0					
ANR	525777	Identifier	E_WARNING		524854	0					
ANR	525778	Argument	"""That's not a dispatchable interface!! type kind = %08x"""		524854	1					
ANR	525779	PrimaryExpression	"""That's not a dispatchable interface!! type kind = %08x"""		524854	0					
ANR	525780	Argument	attr -> typekind		524854	2					
ANR	525781	PtrMemberAccess	attr -> typekind		524854	0					
ANR	525782	Identifier	attr		524854	0					
ANR	525783	Identifier	typekind		524854	1					
ANR	525784	ExpressionStatement	"ITypeInfo_ReleaseTypeAttr ( typeinfo , attr )"	603:1:17097:17138	524854	9	True				
ANR	525785	CallExpression	"ITypeInfo_ReleaseTypeAttr ( typeinfo , attr )"		524854	0					
ANR	525786	Callee	ITypeInfo_ReleaseTypeAttr		524854	0					
ANR	525787	Identifier	ITypeInfo_ReleaseTypeAttr		524854	0					
ANR	525788	ArgumentList	typeinfo		524854	1					
ANR	525789	Argument	typeinfo		524854	0					
ANR	525790	Identifier	typeinfo		524854	0					
ANR	525791	Argument	attr		524854	1					
ANR	525792	Identifier	attr		524854	0					
ANR	525793	ReturnStatement	return ret ;	605:1:17142:17152	524854	10	True				
ANR	525794	Identifier	ret		524854	0					
ANR	525795	ReturnType	int		524854	1					
ANR	525796	Identifier	php_com_process_typeinfo		524854	2					
ANR	525797	ParameterList	"ITypeInfo * typeinfo , HashTable * id_to_name , int printdef , GUID * guid , int codepage"		524854	3					
ANR	525798	Parameter	ITypeInfo * typeinfo	433:29:12572:12590	524854	0	True				
ANR	525799	ParameterType	ITypeInfo *		524854	0					
ANR	525800	Identifier	typeinfo		524854	1					
ANR	525801	Parameter	HashTable * id_to_name	433:50:12593:12613	524854	1	True				
ANR	525802	ParameterType	HashTable *		524854	0					
ANR	525803	Identifier	id_to_name		524854	1					
ANR	525804	Parameter	int printdef	433:73:12616:12627	524854	2	True				
ANR	525805	ParameterType	int		524854	0					
ANR	525806	Identifier	printdef		524854	1					
ANR	525807	Parameter	GUID * guid	433:87:12630:12639	524854	3	True				
ANR	525808	ParameterType	GUID *		524854	0					
ANR	525809	Identifier	guid		524854	1					
ANR	525810	Parameter	int codepage	433:99:12642:12653	524854	4	True				
ANR	525811	ParameterType	int		524854	0					
ANR	525812	Identifier	codepage		524854	1					
ANR	525813	CFGEntryNode	ENTRY		524854		True				
ANR	525814	CFGExitNode	EXIT		524854		True				
ANR	525815	Symbol	elem -> tdesc . lptdesc		524854						
ANR	525816	Symbol	func -> elemdescFunc . tdesc . vt		524854						
ANR	525817	Symbol	FAILED		524854						
ANR	525818	Symbol	& olename		524854						
ANR	525819	Symbol	tmp		524854						
ANR	525820	Symbol	& ansinamelen		524854						
ANR	525821	Symbol	* elem -> tdesc . lptdesc		524854						
ANR	525822	Symbol	func -> memid		524854						
ANR	525823	Symbol	funcdesc		524854						
ANR	525824	Symbol	ret		524854						
ANR	525825	Symbol	& cnames		524854						
ANR	525826	Symbol	elem		524854						
ANR	525827	Symbol	NULL		524854						
ANR	525828	Symbol	func -> invkind		524854						
ANR	525829	Symbol	guidstring		524854						
ANR	525830	Symbol	attr -> cFuncs		524854						
ANR	525831	Symbol	codepage		524854						
ANR	525832	Symbol	elem -> tdesc . lptdesc -> vt		524854						
ANR	525833	Symbol	ITypeInfo_GetTypeAttr		524854						
ANR	525834	Symbol	attr -> typekind		524854						
ANR	525835	Symbol	* * elem		524854						
ANR	525836	Symbol	ZVAL_PTR_DTOR		524854						
ANR	525837	Symbol	func -> cParams		524854						
ANR	525838	Symbol	& func		524854						
ANR	525839	Symbol	elem -> tdesc . vt		524854						
ANR	525840	Symbol	DISPATCH_PROPERTYPUT		524854						
ANR	525841	Symbol	guid		524854						
ANR	525842	Symbol	ansiname		524854						
ANR	525843	Symbol	& funcdesclen		524854						
ANR	525844	Symbol	vt_to_string		524854						
ANR	525845	Symbol	& tmp		524854						
ANR	525846	Symbol	* attr		524854						
ANR	525847	Symbol	isprop		524854						
ANR	525848	Symbol	* elem -> tdesc		524854						
ANR	525849	Symbol	id_to_name		524854						
ANR	525850	Symbol	func -> elemdescFunc . tdesc		524854						
ANR	525851	Symbol	func -> lprgelemdescParam		524854						
ANR	525852	Symbol	VT_PTR		524854						
ANR	525853	Symbol	printdef		524854						
ANR	525854	Symbol	* names		524854						
ANR	525855	Symbol	E_WARNING		524854						
ANR	525856	Symbol	typeinfo		524854						
ANR	525857	Symbol	olename		524854						
ANR	525858	Symbol	funcdesclen		524854						
ANR	525859	Symbol	elem -> paramdesc		524854						
ANR	525860	Symbol	* elem		524854						
ANR	525861	Symbol	attr		524854						
ANR	525862	Symbol	MEMBERID_NIL		524854						
ANR	525863	Symbol	func -> elemdescFunc		524854						
ANR	525864	Symbol	php_com_string_from_clsid		524854						
ANR	525865	Symbol	& attr		524854						
ANR	525866	Symbol	* func		524854						
ANR	525867	Symbol	VT_VOID		524854						
ANR	525868	Symbol	PARAMFLAG_FOUT		524854						
ANR	525869	Symbol	i		524854						
ANR	525870	Symbol	lastid		524854						
ANR	525871	Symbol	j		524854						
ANR	525872	Symbol	cnames		524854						
ANR	525873	Symbol	PARAMFLAG_FIN		524854						
ANR	525874	Symbol	DISPATCH_PROPERTYGET		524854						
ANR	525875	Symbol	php_com_olestring_to_string		524854						
ANR	525876	Symbol	ITypeInfo_GetFuncDesc		524854						
ANR	525877	Symbol	names		524854						
ANR	525878	Symbol	elem -> tdesc		524854						
ANR	525879	Symbol	func		524854						
ANR	525880	Symbol	* j		524854						
ANR	525881	Symbol	ansinamelen		524854						
ANR	525882	Symbol	TKIND_DISPATCH		524854						
ANR	525883	Symbol	elem -> paramdesc . wParamFlags		524854						
ANR	525884	Symbol	safe_emalloc		524854						
ANR	525885	Symbol	& attr -> guid		524854						
